public enum RTLTMPro.ArabicGeneralLetters : Enum {
    public int value__;
    public static ArabicGeneralLetters Hamza;
    public static ArabicGeneralLetters AlefMaddaAbove;
    public static ArabicGeneralLetters AlefHamzaAbove;
    public static ArabicGeneralLetters WawHamzaAbove;
    public static ArabicGeneralLetters AlefHamzaBelow;
    public static ArabicGeneralLetters YehHamzaAbove;
    public static ArabicGeneralLetters Alef;
    public static ArabicGeneralLetters Beh;
    public static ArabicGeneralLetters TehMarbuta;
    public static ArabicGeneralLetters Teh;
    public static ArabicGeneralLetters Theh;
    public static ArabicGeneralLetters Jeem;
    public static ArabicGeneralLetters Hah;
    public static ArabicGeneralLetters Khah;
    public static ArabicGeneralLetters Dal;
    public static ArabicGeneralLetters Thal;
    public static ArabicGeneralLetters Reh;
    public static ArabicGeneralLetters Zain;
    public static ArabicGeneralLetters Seen;
    public static ArabicGeneralLetters Sheen;
    public static ArabicGeneralLetters Sad;
    public static ArabicGeneralLetters Dad;
    public static ArabicGeneralLetters Tah;
    public static ArabicGeneralLetters Zah;
    public static ArabicGeneralLetters Ain;
    public static ArabicGeneralLetters Ghain;
    public static ArabicGeneralLetters Feh;
    public static ArabicGeneralLetters Qaf;
    public static ArabicGeneralLetters Kaf;
    public static ArabicGeneralLetters Lam;
    public static ArabicGeneralLetters Meem;
    public static ArabicGeneralLetters Noon;
    public static ArabicGeneralLetters Heh;
    public static ArabicGeneralLetters Waw;
    public static ArabicGeneralLetters AlefMaksura;
    public static ArabicGeneralLetters Yeh;
    public static ArabicGeneralLetters FarsiYeh;
    public static ArabicGeneralLetters Peh;
    public static ArabicGeneralLetters TCheh;
    public static ArabicGeneralLetters Jeh;
    public static ArabicGeneralLetters Keheh;
    public static ArabicGeneralLetters Gaf;
    public static ArabicGeneralLetters Tatweel;
}
internal enum RTLTMPro.ArabicIsolatedLetters : Enum {
    public int value__;
    public static ArabicIsolatedLetters Hamza;
    public static ArabicIsolatedLetters AlefMaddaAbove;
    public static ArabicIsolatedLetters AlefHamzaAbove;
    public static ArabicIsolatedLetters WawHamzaAbove;
    public static ArabicIsolatedLetters AlefHamzaBelow;
    public static ArabicIsolatedLetters YehHamzaAbove;
    public static ArabicIsolatedLetters Alef;
    public static ArabicIsolatedLetters Beh;
    public static ArabicIsolatedLetters TehMarbuta;
    public static ArabicIsolatedLetters Teh;
    public static ArabicIsolatedLetters Theh;
    public static ArabicIsolatedLetters Jeem;
    public static ArabicIsolatedLetters Hah;
    public static ArabicIsolatedLetters Khah;
    public static ArabicIsolatedLetters Dal;
    public static ArabicIsolatedLetters Thal;
    public static ArabicIsolatedLetters Reh;
    public static ArabicIsolatedLetters Zain;
    public static ArabicIsolatedLetters Seen;
    public static ArabicIsolatedLetters Sheen;
    public static ArabicIsolatedLetters Sad;
    public static ArabicIsolatedLetters Dad;
    public static ArabicIsolatedLetters Tah;
    public static ArabicIsolatedLetters Zah;
    public static ArabicIsolatedLetters Ain;
    public static ArabicIsolatedLetters Ghain;
    public static ArabicIsolatedLetters Feh;
    public static ArabicIsolatedLetters Qaf;
    public static ArabicIsolatedLetters Kaf;
    public static ArabicIsolatedLetters Lam;
    public static ArabicIsolatedLetters Meem;
    public static ArabicIsolatedLetters Noon;
    public static ArabicIsolatedLetters Heh;
    public static ArabicIsolatedLetters Waw;
    public static ArabicIsolatedLetters AlefMaksura;
    public static ArabicIsolatedLetters Yeh;
    public static ArabicIsolatedLetters FarsiYeh;
    public static ArabicIsolatedLetters Peh;
    public static ArabicIsolatedLetters TCheh;
    public static ArabicIsolatedLetters Jeh;
    public static ArabicIsolatedLetters Keheh;
    public static ArabicIsolatedLetters Gaf;
}
public static class RTLTMPro.Char32Utils : object {
    public static bool IsUnicode16Char(int ch);
    public static bool IsRTLCharacter(int ch);
    public static bool IsEnglishLetter(int ch);
    public static bool IsNumber(int ch, bool preserveNumbers, bool farsi);
    public static bool IsSymbol(int ch);
    public static bool IsLetter(int ch);
    public static bool IsPunctuation(int ch);
    public static bool IsWhiteSpace(int ch);
}
public enum RTLTMPro.EnglishNumbers : Enum {
    public int value__;
    public static EnglishNumbers Zero;
    public static EnglishNumbers One;
    public static EnglishNumbers Two;
    public static EnglishNumbers Three;
    public static EnglishNumbers Four;
    public static EnglishNumbers Five;
    public static EnglishNumbers Six;
    public static EnglishNumbers Seven;
    public static EnglishNumbers Eight;
    public static EnglishNumbers Nine;
}
public enum RTLTMPro.FarsiNumbers : Enum {
    public int value__;
    public static FarsiNumbers Zero;
    public static FarsiNumbers One;
    public static FarsiNumbers Two;
    public static FarsiNumbers Three;
    public static FarsiNumbers Four;
    public static FarsiNumbers Five;
    public static FarsiNumbers Six;
    public static FarsiNumbers Seven;
    public static FarsiNumbers Eight;
    public static FarsiNumbers Nine;
}
public class RTLTMPro.FastStringBuilder : object {
    private int length;
    private Int32[] array;
    private int capacity;
    public int Length { get; public set; }
    public FastStringBuilder(int capacity);
    public FastStringBuilder(string text);
    public FastStringBuilder(string text, int capacity);
    public int get_Length();
    public void set_Length(int value);
    public static string op_Implicit(FastStringBuilder x);
    public static FastStringBuilder op_Implicit(string x);
    public int Get(int index);
    public void Set(int index, int ch);
    public void SetValue(string text);
    public void SetValue(FastStringBuilder other);
    public void Append(int ch);
    public void Append(char ch);
    public void Insert(int pos, FastStringBuilder str, int offset, int count);
    public void Insert(int pos, FastStringBuilder str);
    public void Insert(int pos, int ch);
    public void RemoveAll(int character);
    public void Remove(int start, int length);
    public void Reverse(int startIndex, int length);
    public void Reverse();
    public void Substring(FastStringBuilder output, int start, int length);
    public virtual string ToString();
    public string ToDebugString();
    public void Replace(int oldChar, int newChar);
    public void Replace(FastStringBuilder oldStr, FastStringBuilder newStr);
    public void Clear();
    private void EnsureCapacity(int cap, bool keepValues);
    private static void Copy(Int32[] src, Int32[] dst);
}
public static class RTLTMPro.GlyphFixer : object {
    public static Dictionary`2<char, char> EnglishToFarsiNumberMap;
    public static Dictionary`2<char, char> EnglishToHinduNumberMap;
    private static GlyphFixer();
    public static void Fix(FastStringBuilder input, FastStringBuilder output, bool preserveNumbers, bool farsi, bool fixTextTags);
    public static void FixYah(FastStringBuilder text, bool farsi);
    private static bool HandleSpecialLam(FastStringBuilder input, FastStringBuilder output, int i);
    public static void FixNumbers(FastStringBuilder text, bool farsi);
    public static void FixNumbersOutsideOfTags(FastStringBuilder text, bool farsi);
    private static bool IsLeadingLetter(FastStringBuilder letters, int index);
    private static bool IsFinishingLetter(FastStringBuilder letters, int index);
    private static bool IsMiddleLetter(FastStringBuilder letters, int index);
}
public static class RTLTMPro.GlyphTable : object {
    private static Dictionary`2<char, char> MapList;
    private static GlyphTable();
    public static char Convert(char toBeConverted);
}
public enum RTLTMPro.HinduNumbers : Enum {
    public int value__;
    public static HinduNumbers Zero;
    public static HinduNumbers One;
    public static HinduNumbers Two;
    public static HinduNumbers Three;
    public static HinduNumbers Four;
    public static HinduNumbers Five;
    public static HinduNumbers Six;
    public static HinduNumbers Seven;
    public static HinduNumbers Eight;
    public static HinduNumbers Nine;
}
public static class RTLTMPro.LigatureFixer : object {
    private static List`1<int> LtrTextHolder;
    private static List`1<int> TagTextHolder;
    private static Dictionary`2<char, char> MirroredCharsMap;
    private static HashSet`1<char> MirroredCharsSet;
    private static LigatureFixer();
    private static void FlushBufferToOutput(List`1<int> buffer, FastStringBuilder output);
    public static void Fix(FastStringBuilder input, FastStringBuilder output, bool farsi, bool fixTextTags, bool preserveNumbers);
}
public static class RTLTMPro.RichTextFixer : object {
    public static void Fix(FastStringBuilder text);
    public static void FindTag(FastStringBuilder str, int start, Tag& tag);
}
public static class RTLTMPro.RTLSupport : object {
    public static int DefaultBufferSize;
    private static FastStringBuilder inputBuilder;
    private static FastStringBuilder glyphFixerOutput;
    private static RTLSupport();
    public static void FixRTL(string input, FastStringBuilder output, bool farsi, bool fixTextTags, bool preserveNumbers);
}
[ExecuteInEditMode]
public class RTLTMPro.RTLTextMeshPro : TextMeshProUGUI {
    [SerializeField]
protected bool preserveNumbers;
    [SerializeField]
protected bool farsi;
    [SerializeField]
[TextAreaAttribute("3", "10")]
protected string originalText;
    [SerializeField]
protected bool fixTags;
    [SerializeField]
protected bool forceFix;
    protected FastStringBuilder finalText;
    public string text { get; public set; }
    public string OriginalText { get; }
    public bool PreserveNumbers { get; public set; }
    public bool Farsi { get; public set; }
    public bool FixTags { get; public set; }
    public bool ForceFix { get; public set; }
    public string get_text();
    public void set_text(string value);
    public string get_OriginalText();
    public bool get_PreserveNumbers();
    public void set_PreserveNumbers(bool value);
    public bool get_Farsi();
    public void set_Farsi(bool value);
    public bool get_FixTags();
    public void set_FixTags(bool value);
    public bool get_ForceFix();
    public void set_ForceFix(bool value);
    protected void Update();
    public void UpdateText();
    private string GetFixedText(string input);
}
[ExecuteInEditMode]
public class RTLTMPro.RTLTextMeshPro3D : TextMeshPro {
    [SerializeField]
protected bool preserveNumbers;
    [SerializeField]
protected bool farsi;
    [SerializeField]
[TextAreaAttribute("3", "10")]
protected string originalText;
    [SerializeField]
protected bool fixTags;
    [SerializeField]
protected bool forceFix;
    protected FastStringBuilder finalText;
    public string text { get; public set; }
    public string OriginalText { get; }
    public bool PreserveNumbers { get; public set; }
    public bool Farsi { get; public set; }
    public bool FixTags { get; public set; }
    protected bool ForceFix { get; protected set; }
    public string get_text();
    public void set_text(string value);
    public string get_OriginalText();
    public bool get_PreserveNumbers();
    public void set_PreserveNumbers(bool value);
    public bool get_Farsi();
    public void set_Farsi(bool value);
    public bool get_FixTags();
    public void set_FixTags(bool value);
    protected bool get_ForceFix();
    protected void set_ForceFix(bool value);
    protected void Update();
    public void UpdateText();
    private string GetFixedText(string input);
}
public enum RTLTMPro.SpecialCharacters : Enum {
    public int value__;
    public static SpecialCharacters ZeroWidthNoJoiner;
}
public enum RTLTMPro.TashkeelCharacters : Enum {
    public int value__;
    public static TashkeelCharacters Fathan;
    public static TashkeelCharacters Dammatan;
    public static TashkeelCharacters Kasratan;
    public static TashkeelCharacters Fatha;
    public static TashkeelCharacters Damma;
    public static TashkeelCharacters Kasra;
    public static TashkeelCharacters Shadda;
    public static TashkeelCharacters Sukun;
    public static TashkeelCharacters MaddahAbove;
    public static TashkeelCharacters SuperscriptAlef;
    public static TashkeelCharacters ShaddaWithDammatanIsolatedForm;
    public static TashkeelCharacters ShaddaWithKasratanIsolatedForm;
    public static TashkeelCharacters ShaddaWithFathaIsolatedForm;
    public static TashkeelCharacters ShaddaWithDammaIsolatedForm;
    public static TashkeelCharacters ShaddaWithKasraIsolatedForm;
    public static TashkeelCharacters ShaddaWithSuperscriptAlefIsolatedForm;
}
public static class RTLTMPro.TashkeelFixer : object {
    private static List`1<TashkeelLocation> TashkeelLocations;
    private static string ShaddaDammatan;
    private static string ShaddaKasratan;
    private static string ShaddaSuperscriptAlef;
    private static string ShaddaFatha;
    private static string ShaddaDamma;
    private static string ShaddaKasra;
    private static string ShaddaWithFathaIsolatedForm;
    private static string ShaddaWithDammaIsolatedForm;
    private static string ShaddaWithKasraIsolatedForm;
    private static string ShaddaWithDammatanIsolatedForm;
    private static string ShaddaWithKasratanIsolatedForm;
    private static string ShaddaWithSuperscriptAlefIsolatedForm;
    private static HashSet`1<char> TashkeelCharactersSet;
    private static Dictionary`2<char, char> ShaddaCombinationMap;
    private static TashkeelFixer();
    public static void RemoveTashkeel(FastStringBuilder input);
    public static void RestoreTashkeel(FastStringBuilder letters);
    public static void FixShaddaCombinations(FastStringBuilder input);
}
public class RTLTMPro.TashkeelLocation : ValueType {
    [CompilerGeneratedAttribute]
private char <Tashkeel>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    public char Tashkeel { get; public set; }
    public int Position { get; public set; }
    public TashkeelLocation(TashkeelCharacters tashkeel, int position);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public char get_Tashkeel();
    [CompilerGeneratedAttribute]
public void set_Tashkeel(char value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(int value);
}
public static class RTLTMPro.TextUtils : object {
    private static char LowerCaseA;
    private static char UpperCaseA;
    private static char LowerCaseZ;
    private static char UpperCaseZ;
    private static char HebrewLow;
    private static char HebrewHigh;
    private static char ArabicBaseBlockLow;
    private static char ArabicBaseBlockHigh;
    private static char ArabicExtendedABlockLow;
    private static char ArabicExtendedABlockHigh;
    private static char ArabicExtendedBBlockLow;
    private static char ArabicExtendedBBlockHigh;
    private static char ArabicPresentationFormsABlockLow;
    private static char ArabicPresentationFormsABlockHigh;
    private static char ArabicPresentationFormsBBlockLow;
    private static char ArabicPresentationFormsBBlockHigh;
    public static bool IsPunctuation(char ch);
    public static bool IsNumber(char ch, bool preserveNumbers, bool farsi);
    public static bool IsEnglishNumber(char ch);
    public static bool IsFarsiNumber(char ch);
    public static bool IsHinduNumber(char ch);
    public static bool IsEnglishLetter(char ch);
    public static bool IsHebrewCharacter(char ch);
    public static bool IsArabicCharacter(char ch);
    public static bool IsRTLCharacter(char ch);
    public static bool IsGlyphFixedArabicCharacter(char ch);
    public static bool IsRTLInput(string input);
    public static bool ContainsRTLInput(string input);
}
[CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
[GeneratedCodeAttribute("Unity.MonoScriptGenerator.MonoScriptInfoGenerator", "")]
internal class UnitySourceGeneratedAssemblyMonoScriptTypes_v1 : object {
    private static MonoScriptData Get();
}
