public UnityEngine.IntegratedSubsystem : object {
internal IntPtr m_Ptr
internal ISubsystemDescriptor m_subsystemDescriptor
public bool running
internal bool valid
internal void SetHandle(IntegratedSubsystem inst)
public void Start()
public void Stop()
public void Destroy()
public bool get_running()
internal bool get_valid()
internal bool Internal_IsRunning()
}
public UnityEngine.IntegratedSubsystem`1 : IntegratedSubsystem {
public TSubsystemDescriptor SubsystemDescriptor
public TSubsystemDescriptor get_SubsystemDescriptor()
}
public UnityEngine.IntegratedSubsystemDescriptor : object {
internal IntPtr m_Ptr
public string id
private IntPtr UnityEngine.ISubsystemDescriptorImpl.ptr
public string get_id()
private IntPtr UnityEngine.ISubsystemDescriptorImpl.get_ptr()
private void UnityEngine.ISubsystemDescriptorImpl.set_ptr(IntPtr value)
private ISubsystem UnityEngine.ISubsystemDescriptor.Create()
internal ISubsystem CreateImpl()
}
public UnityEngine.IntegratedSubsystemDescriptor`1 : IntegratedSubsystemDescriptor {
internal ISubsystem CreateImpl()
public TSubsystem Create()
}
internal UnityEngine.Internal_SubsystemDescriptors : object {
internal List`1<ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
internal List`1<ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
internal bool Internal_AddDescriptor(SubsystemDescriptor descriptor)
internal void Internal_InitializeManagedDescriptor(IntPtr ptr, ISubsystemDescriptorImpl desc)
internal void Internal_ClearManagedDescriptors()
public IntPtr Create(IntPtr descriptorPtr)
public string GetId(IntPtr descriptorPtr)
}
internal UnityEngine.Internal_SubsystemInstances : object {
internal List`1<ISubsystem> s_IntegratedSubsystemInstances
internal List`1<ISubsystem> s_StandaloneSubsystemInstances
internal void Internal_InitializeManagedInstance(IntPtr ptr, IntegratedSubsystem inst)
internal void Internal_ClearManagedInstances()
internal void Internal_RemoveInstanceByPtr(IntPtr ptr)
internal IntegratedSubsystem Internal_GetInstanceByPtr(IntPtr ptr)
internal void Internal_AddStandaloneSubsystem(Subsystem inst)
internal Subsystem Internal_FindStandaloneSubsystemInstanceGivenDescriptor(SubsystemDescriptor descriptor)
}
public UnityEngine.ISubsystem {
public bool running
public void Start()
public void Stop()
public void Destroy()
public bool get_running()
}
public UnityEngine.ISubsystemDescriptor {
public string id
public string get_id()
public ISubsystem Create()
}
internal UnityEngine.ISubsystemDescriptorImpl {
public IntPtr ptr
public IntPtr get_ptr()
public void set_ptr(IntPtr value)
}
public UnityEngine.Subsystem : object {
internal ISubsystemDescriptor m_subsystemDescriptor
public bool running
public void Start()
public void Stop()
public void Destroy()
public bool get_running()
protected void OnDestroy()
}
public UnityEngine.Subsystem`1 : Subsystem {
public TSubsystemDescriptor SubsystemDescriptor
public TSubsystemDescriptor get_SubsystemDescriptor()
}
public UnityEngine.SubsystemDescriptor : object {
private string <id>k__BackingField
private Type <subsystemImplementationType>k__BackingField
public string id
public Type subsystemImplementationType
public string get_id()
public void set_id(string value)
public Type get_subsystemImplementationType()
public void set_subsystemImplementationType(Type value)
private ISubsystem UnityEngine.ISubsystemDescriptor.Create()
internal ISubsystem CreateImpl()
}
public UnityEngine.SubsystemDescriptor`1 : SubsystemDescriptor {
internal ISubsystem CreateImpl()
public TSubsystem Create()
}
public UnityEngine.SubsystemManager : object {
private Action reloadSubsytemsStarted
private Action reloadSubsytemsCompleted
public void GetAllSubsystemDescriptors(List`1<ISubsystemDescriptor> descriptors)
internal void ReportSingleSubsystemAnalytics(string id)
public void GetSubsystemDescriptors(List`1<T> descriptors)
public void GetInstances(List`1<T> instances)
internal void DestroyInstance_Internal(IntPtr instancePtr)
internal void StaticConstructScriptingClassMap()
public void add_reloadSubsytemsStarted(Action value)
public void remove_reloadSubsytemsStarted(Action value)
private void Internal_ReloadSubsystemsStarted()
public void add_reloadSubsytemsCompleted(Action value)
public void remove_reloadSubsytemsCompleted(Action value)
private void Internal_ReloadSubsystemsCompleted()
}
public UnityEngine.Subsystems.ExampleSubsystem : IntegratedSubsystem`1<ExampleSubsystemDescriptor> {
public void PrintExample()
public bool GetBool()
}
public UnityEngine.Subsystems.ExampleSubsystemDescriptor : IntegratedSubsystemDescriptor`1<ExampleSubsystem> {
public bool supportsEditorMode
public bool disableBackbufferMSAA
public bool stereoscopicBackbuffer
public bool usePBufferEGL
public bool get_supportsEditorMode()
public bool get_disableBackbufferMSAA()
public bool get_stereoscopicBackbuffer()
public bool get_usePBufferEGL()
}
