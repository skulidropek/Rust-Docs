public Unity.Mathematics.bool2 : ValueType {
public bool x
public bool y
public bool4 xxxx
public bool4 xxxy
public bool4 xxyx
public bool4 xxyy
public bool4 xyxx
public bool4 xyxy
public bool4 xyyx
public bool4 xyyy
public bool4 yxxx
public bool4 yxxy
public bool4 yxyx
public bool4 yxyy
public bool4 yyxx
public bool4 yyxy
public bool4 yyyx
public bool4 yyyy
public bool3 xxx
public bool3 xxy
public bool3 xyx
public bool3 xyy
public bool3 yxx
public bool3 yxy
public bool3 yyx
public bool3 yyy
public bool2 xx
public bool2 xy
public bool2 yx
public bool2 yy
public bool Item
public void .ctor(bool x, bool y)
public void .ctor(bool2 xy)
public void .ctor(bool v)
public bool2 op_Implicit(bool v)
public bool2 op_Equality(bool2 lhs, bool2 rhs)
public bool2 op_Equality(bool2 lhs, bool rhs)
public bool2 op_Equality(bool lhs, bool2 rhs)
public bool2 op_Inequality(bool2 lhs, bool2 rhs)
public bool2 op_Inequality(bool2 lhs, bool rhs)
public bool2 op_Inequality(bool lhs, bool2 rhs)
public bool2 op_LogicalNot(bool2 val)
public bool2 op_BitwiseAnd(bool2 lhs, bool2 rhs)
public bool2 op_BitwiseAnd(bool2 lhs, bool rhs)
public bool2 op_BitwiseAnd(bool lhs, bool2 rhs)
public bool2 op_BitwiseOr(bool2 lhs, bool2 rhs)
public bool2 op_BitwiseOr(bool2 lhs, bool rhs)
public bool2 op_BitwiseOr(bool lhs, bool2 rhs)
public bool2 op_ExclusiveOr(bool2 lhs, bool2 rhs)
public bool2 op_ExclusiveOr(bool2 lhs, bool rhs)
public bool2 op_ExclusiveOr(bool lhs, bool2 rhs)
public bool4 get_xxxx()
public bool4 get_xxxy()
public bool4 get_xxyx()
public bool4 get_xxyy()
public bool4 get_xyxx()
public bool4 get_xyxy()
public bool4 get_xyyx()
public bool4 get_xyyy()
public bool4 get_yxxx()
public bool4 get_yxxy()
public bool4 get_yxyx()
public bool4 get_yxyy()
public bool4 get_yyxx()
public bool4 get_yyxy()
public bool4 get_yyyx()
public bool4 get_yyyy()
public bool3 get_xxx()
public bool3 get_xxy()
public bool3 get_xyx()
public bool3 get_xyy()
public bool3 get_yxx()
public bool3 get_yxy()
public bool3 get_yyx()
public bool3 get_yyy()
public bool2 get_xx()
public bool2 get_xy()
public void set_xy(bool2 value)
public bool2 get_yx()
public void set_yx(bool2 value)
public bool2 get_yy()
public bool get_Item(int index)
public void set_Item(int index, bool value)
public bool Equals(bool2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool2x2 : ValueType {
public bool2 c0
public bool2 c1
public bool2& Item
public void .ctor(bool2 c0, bool2 c1)
public void .ctor(bool m00, bool m01, bool m10, bool m11)
public void .ctor(bool v)
public bool2x2 op_Implicit(bool v)
public bool2x2 op_Equality(bool2x2 lhs, bool2x2 rhs)
public bool2x2 op_Equality(bool2x2 lhs, bool rhs)
public bool2x2 op_Equality(bool lhs, bool2x2 rhs)
public bool2x2 op_Inequality(bool2x2 lhs, bool2x2 rhs)
public bool2x2 op_Inequality(bool2x2 lhs, bool rhs)
public bool2x2 op_Inequality(bool lhs, bool2x2 rhs)
public bool2x2 op_LogicalNot(bool2x2 val)
public bool2x2 op_BitwiseAnd(bool2x2 lhs, bool2x2 rhs)
public bool2x2 op_BitwiseAnd(bool2x2 lhs, bool rhs)
public bool2x2 op_BitwiseAnd(bool lhs, bool2x2 rhs)
public bool2x2 op_BitwiseOr(bool2x2 lhs, bool2x2 rhs)
public bool2x2 op_BitwiseOr(bool2x2 lhs, bool rhs)
public bool2x2 op_BitwiseOr(bool lhs, bool2x2 rhs)
public bool2x2 op_ExclusiveOr(bool2x2 lhs, bool2x2 rhs)
public bool2x2 op_ExclusiveOr(bool2x2 lhs, bool rhs)
public bool2x2 op_ExclusiveOr(bool lhs, bool2x2 rhs)
public bool2& get_Item(int index)
public bool Equals(bool2x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool2x3 : ValueType {
public bool2 c0
public bool2 c1
public bool2 c2
public bool2& Item
public void .ctor(bool2 c0, bool2 c1, bool2 c2)
public void .ctor(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12)
public void .ctor(bool v)
public bool2x3 op_Implicit(bool v)
public bool2x3 op_Equality(bool2x3 lhs, bool2x3 rhs)
public bool2x3 op_Equality(bool2x3 lhs, bool rhs)
public bool2x3 op_Equality(bool lhs, bool2x3 rhs)
public bool2x3 op_Inequality(bool2x3 lhs, bool2x3 rhs)
public bool2x3 op_Inequality(bool2x3 lhs, bool rhs)
public bool2x3 op_Inequality(bool lhs, bool2x3 rhs)
public bool2x3 op_LogicalNot(bool2x3 val)
public bool2x3 op_BitwiseAnd(bool2x3 lhs, bool2x3 rhs)
public bool2x3 op_BitwiseAnd(bool2x3 lhs, bool rhs)
public bool2x3 op_BitwiseAnd(bool lhs, bool2x3 rhs)
public bool2x3 op_BitwiseOr(bool2x3 lhs, bool2x3 rhs)
public bool2x3 op_BitwiseOr(bool2x3 lhs, bool rhs)
public bool2x3 op_BitwiseOr(bool lhs, bool2x3 rhs)
public bool2x3 op_ExclusiveOr(bool2x3 lhs, bool2x3 rhs)
public bool2x3 op_ExclusiveOr(bool2x3 lhs, bool rhs)
public bool2x3 op_ExclusiveOr(bool lhs, bool2x3 rhs)
public bool2& get_Item(int index)
public bool Equals(bool2x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool2x4 : ValueType {
public bool2 c0
public bool2 c1
public bool2 c2
public bool2 c3
public bool2& Item
public void .ctor(bool2 c0, bool2 c1, bool2 c2, bool2 c3)
public void .ctor(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13)
public void .ctor(bool v)
public bool2x4 op_Implicit(bool v)
public bool2x4 op_Equality(bool2x4 lhs, bool2x4 rhs)
public bool2x4 op_Equality(bool2x4 lhs, bool rhs)
public bool2x4 op_Equality(bool lhs, bool2x4 rhs)
public bool2x4 op_Inequality(bool2x4 lhs, bool2x4 rhs)
public bool2x4 op_Inequality(bool2x4 lhs, bool rhs)
public bool2x4 op_Inequality(bool lhs, bool2x4 rhs)
public bool2x4 op_LogicalNot(bool2x4 val)
public bool2x4 op_BitwiseAnd(bool2x4 lhs, bool2x4 rhs)
public bool2x4 op_BitwiseAnd(bool2x4 lhs, bool rhs)
public bool2x4 op_BitwiseAnd(bool lhs, bool2x4 rhs)
public bool2x4 op_BitwiseOr(bool2x4 lhs, bool2x4 rhs)
public bool2x4 op_BitwiseOr(bool2x4 lhs, bool rhs)
public bool2x4 op_BitwiseOr(bool lhs, bool2x4 rhs)
public bool2x4 op_ExclusiveOr(bool2x4 lhs, bool2x4 rhs)
public bool2x4 op_ExclusiveOr(bool2x4 lhs, bool rhs)
public bool2x4 op_ExclusiveOr(bool lhs, bool2x4 rhs)
public bool2& get_Item(int index)
public bool Equals(bool2x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool3 : ValueType {
public bool x
public bool y
public bool z
public bool4 xxxx
public bool4 xxxy
public bool4 xxxz
public bool4 xxyx
public bool4 xxyy
public bool4 xxyz
public bool4 xxzx
public bool4 xxzy
public bool4 xxzz
public bool4 xyxx
public bool4 xyxy
public bool4 xyxz
public bool4 xyyx
public bool4 xyyy
public bool4 xyyz
public bool4 xyzx
public bool4 xyzy
public bool4 xyzz
public bool4 xzxx
public bool4 xzxy
public bool4 xzxz
public bool4 xzyx
public bool4 xzyy
public bool4 xzyz
public bool4 xzzx
public bool4 xzzy
public bool4 xzzz
public bool4 yxxx
public bool4 yxxy
public bool4 yxxz
public bool4 yxyx
public bool4 yxyy
public bool4 yxyz
public bool4 yxzx
public bool4 yxzy
public bool4 yxzz
public bool4 yyxx
public bool4 yyxy
public bool4 yyxz
public bool4 yyyx
public bool4 yyyy
public bool4 yyyz
public bool4 yyzx
public bool4 yyzy
public bool4 yyzz
public bool4 yzxx
public bool4 yzxy
public bool4 yzxz
public bool4 yzyx
public bool4 yzyy
public bool4 yzyz
public bool4 yzzx
public bool4 yzzy
public bool4 yzzz
public bool4 zxxx
public bool4 zxxy
public bool4 zxxz
public bool4 zxyx
public bool4 zxyy
public bool4 zxyz
public bool4 zxzx
public bool4 zxzy
public bool4 zxzz
public bool4 zyxx
public bool4 zyxy
public bool4 zyxz
public bool4 zyyx
public bool4 zyyy
public bool4 zyyz
public bool4 zyzx
public bool4 zyzy
public bool4 zyzz
public bool4 zzxx
public bool4 zzxy
public bool4 zzxz
public bool4 zzyx
public bool4 zzyy
public bool4 zzyz
public bool4 zzzx
public bool4 zzzy
public bool4 zzzz
public bool3 xxx
public bool3 xxy
public bool3 xxz
public bool3 xyx
public bool3 xyy
public bool3 xyz
public bool3 xzx
public bool3 xzy
public bool3 xzz
public bool3 yxx
public bool3 yxy
public bool3 yxz
public bool3 yyx
public bool3 yyy
public bool3 yyz
public bool3 yzx
public bool3 yzy
public bool3 yzz
public bool3 zxx
public bool3 zxy
public bool3 zxz
public bool3 zyx
public bool3 zyy
public bool3 zyz
public bool3 zzx
public bool3 zzy
public bool3 zzz
public bool2 xx
public bool2 xy
public bool2 xz
public bool2 yx
public bool2 yy
public bool2 yz
public bool2 zx
public bool2 zy
public bool2 zz
public bool Item
public void .ctor(bool x, bool y, bool z)
public void .ctor(bool x, bool2 yz)
public void .ctor(bool2 xy, bool z)
public void .ctor(bool3 xyz)
public void .ctor(bool v)
public bool3 op_Implicit(bool v)
public bool3 op_Equality(bool3 lhs, bool3 rhs)
public bool3 op_Equality(bool3 lhs, bool rhs)
public bool3 op_Equality(bool lhs, bool3 rhs)
public bool3 op_Inequality(bool3 lhs, bool3 rhs)
public bool3 op_Inequality(bool3 lhs, bool rhs)
public bool3 op_Inequality(bool lhs, bool3 rhs)
public bool3 op_LogicalNot(bool3 val)
public bool3 op_BitwiseAnd(bool3 lhs, bool3 rhs)
public bool3 op_BitwiseAnd(bool3 lhs, bool rhs)
public bool3 op_BitwiseAnd(bool lhs, bool3 rhs)
public bool3 op_BitwiseOr(bool3 lhs, bool3 rhs)
public bool3 op_BitwiseOr(bool3 lhs, bool rhs)
public bool3 op_BitwiseOr(bool lhs, bool3 rhs)
public bool3 op_ExclusiveOr(bool3 lhs, bool3 rhs)
public bool3 op_ExclusiveOr(bool3 lhs, bool rhs)
public bool3 op_ExclusiveOr(bool lhs, bool3 rhs)
public bool4 get_xxxx()
public bool4 get_xxxy()
public bool4 get_xxxz()
public bool4 get_xxyx()
public bool4 get_xxyy()
public bool4 get_xxyz()
public bool4 get_xxzx()
public bool4 get_xxzy()
public bool4 get_xxzz()
public bool4 get_xyxx()
public bool4 get_xyxy()
public bool4 get_xyxz()
public bool4 get_xyyx()
public bool4 get_xyyy()
public bool4 get_xyyz()
public bool4 get_xyzx()
public bool4 get_xyzy()
public bool4 get_xyzz()
public bool4 get_xzxx()
public bool4 get_xzxy()
public bool4 get_xzxz()
public bool4 get_xzyx()
public bool4 get_xzyy()
public bool4 get_xzyz()
public bool4 get_xzzx()
public bool4 get_xzzy()
public bool4 get_xzzz()
public bool4 get_yxxx()
public bool4 get_yxxy()
public bool4 get_yxxz()
public bool4 get_yxyx()
public bool4 get_yxyy()
public bool4 get_yxyz()
public bool4 get_yxzx()
public bool4 get_yxzy()
public bool4 get_yxzz()
public bool4 get_yyxx()
public bool4 get_yyxy()
public bool4 get_yyxz()
public bool4 get_yyyx()
public bool4 get_yyyy()
public bool4 get_yyyz()
public bool4 get_yyzx()
public bool4 get_yyzy()
public bool4 get_yyzz()
public bool4 get_yzxx()
public bool4 get_yzxy()
public bool4 get_yzxz()
public bool4 get_yzyx()
public bool4 get_yzyy()
public bool4 get_yzyz()
public bool4 get_yzzx()
public bool4 get_yzzy()
public bool4 get_yzzz()
public bool4 get_zxxx()
public bool4 get_zxxy()
public bool4 get_zxxz()
public bool4 get_zxyx()
public bool4 get_zxyy()
public bool4 get_zxyz()
public bool4 get_zxzx()
public bool4 get_zxzy()
public bool4 get_zxzz()
public bool4 get_zyxx()
public bool4 get_zyxy()
public bool4 get_zyxz()
public bool4 get_zyyx()
public bool4 get_zyyy()
public bool4 get_zyyz()
public bool4 get_zyzx()
public bool4 get_zyzy()
public bool4 get_zyzz()
public bool4 get_zzxx()
public bool4 get_zzxy()
public bool4 get_zzxz()
public bool4 get_zzyx()
public bool4 get_zzyy()
public bool4 get_zzyz()
public bool4 get_zzzx()
public bool4 get_zzzy()
public bool4 get_zzzz()
public bool3 get_xxx()
public bool3 get_xxy()
public bool3 get_xxz()
public bool3 get_xyx()
public bool3 get_xyy()
public bool3 get_xyz()
public void set_xyz(bool3 value)
public bool3 get_xzx()
public bool3 get_xzy()
public void set_xzy(bool3 value)
public bool3 get_xzz()
public bool3 get_yxx()
public bool3 get_yxy()
public bool3 get_yxz()
public void set_yxz(bool3 value)
public bool3 get_yyx()
public bool3 get_yyy()
public bool3 get_yyz()
public bool3 get_yzx()
public void set_yzx(bool3 value)
public bool3 get_yzy()
public bool3 get_yzz()
public bool3 get_zxx()
public bool3 get_zxy()
public void set_zxy(bool3 value)
public bool3 get_zxz()
public bool3 get_zyx()
public void set_zyx(bool3 value)
public bool3 get_zyy()
public bool3 get_zyz()
public bool3 get_zzx()
public bool3 get_zzy()
public bool3 get_zzz()
public bool2 get_xx()
public bool2 get_xy()
public void set_xy(bool2 value)
public bool2 get_xz()
public void set_xz(bool2 value)
public bool2 get_yx()
public void set_yx(bool2 value)
public bool2 get_yy()
public bool2 get_yz()
public void set_yz(bool2 value)
public bool2 get_zx()
public void set_zx(bool2 value)
public bool2 get_zy()
public void set_zy(bool2 value)
public bool2 get_zz()
public bool get_Item(int index)
public void set_Item(int index, bool value)
public bool Equals(bool3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool3x2 : ValueType {
public bool3 c0
public bool3 c1
public bool3& Item
public void .ctor(bool3 c0, bool3 c1)
public void .ctor(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21)
public void .ctor(bool v)
public bool3x2 op_Implicit(bool v)
public bool3x2 op_Equality(bool3x2 lhs, bool3x2 rhs)
public bool3x2 op_Equality(bool3x2 lhs, bool rhs)
public bool3x2 op_Equality(bool lhs, bool3x2 rhs)
public bool3x2 op_Inequality(bool3x2 lhs, bool3x2 rhs)
public bool3x2 op_Inequality(bool3x2 lhs, bool rhs)
public bool3x2 op_Inequality(bool lhs, bool3x2 rhs)
public bool3x2 op_LogicalNot(bool3x2 val)
public bool3x2 op_BitwiseAnd(bool3x2 lhs, bool3x2 rhs)
public bool3x2 op_BitwiseAnd(bool3x2 lhs, bool rhs)
public bool3x2 op_BitwiseAnd(bool lhs, bool3x2 rhs)
public bool3x2 op_BitwiseOr(bool3x2 lhs, bool3x2 rhs)
public bool3x2 op_BitwiseOr(bool3x2 lhs, bool rhs)
public bool3x2 op_BitwiseOr(bool lhs, bool3x2 rhs)
public bool3x2 op_ExclusiveOr(bool3x2 lhs, bool3x2 rhs)
public bool3x2 op_ExclusiveOr(bool3x2 lhs, bool rhs)
public bool3x2 op_ExclusiveOr(bool lhs, bool3x2 rhs)
public bool3& get_Item(int index)
public bool Equals(bool3x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool3x3 : ValueType {
public bool3 c0
public bool3 c1
public bool3 c2
public bool3& Item
public void .ctor(bool3 c0, bool3 c1, bool3 c2)
public void .ctor(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22)
public void .ctor(bool v)
public bool3x3 op_Implicit(bool v)
public bool3x3 op_Equality(bool3x3 lhs, bool3x3 rhs)
public bool3x3 op_Equality(bool3x3 lhs, bool rhs)
public bool3x3 op_Equality(bool lhs, bool3x3 rhs)
public bool3x3 op_Inequality(bool3x3 lhs, bool3x3 rhs)
public bool3x3 op_Inequality(bool3x3 lhs, bool rhs)
public bool3x3 op_Inequality(bool lhs, bool3x3 rhs)
public bool3x3 op_LogicalNot(bool3x3 val)
public bool3x3 op_BitwiseAnd(bool3x3 lhs, bool3x3 rhs)
public bool3x3 op_BitwiseAnd(bool3x3 lhs, bool rhs)
public bool3x3 op_BitwiseAnd(bool lhs, bool3x3 rhs)
public bool3x3 op_BitwiseOr(bool3x3 lhs, bool3x3 rhs)
public bool3x3 op_BitwiseOr(bool3x3 lhs, bool rhs)
public bool3x3 op_BitwiseOr(bool lhs, bool3x3 rhs)
public bool3x3 op_ExclusiveOr(bool3x3 lhs, bool3x3 rhs)
public bool3x3 op_ExclusiveOr(bool3x3 lhs, bool rhs)
public bool3x3 op_ExclusiveOr(bool lhs, bool3x3 rhs)
public bool3& get_Item(int index)
public bool Equals(bool3x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool3x4 : ValueType {
public bool3 c0
public bool3 c1
public bool3 c2
public bool3 c3
public bool3& Item
public void .ctor(bool3 c0, bool3 c1, bool3 c2, bool3 c3)
public void .ctor(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23)
public void .ctor(bool v)
public bool3x4 op_Implicit(bool v)
public bool3x4 op_Equality(bool3x4 lhs, bool3x4 rhs)
public bool3x4 op_Equality(bool3x4 lhs, bool rhs)
public bool3x4 op_Equality(bool lhs, bool3x4 rhs)
public bool3x4 op_Inequality(bool3x4 lhs, bool3x4 rhs)
public bool3x4 op_Inequality(bool3x4 lhs, bool rhs)
public bool3x4 op_Inequality(bool lhs, bool3x4 rhs)
public bool3x4 op_LogicalNot(bool3x4 val)
public bool3x4 op_BitwiseAnd(bool3x4 lhs, bool3x4 rhs)
public bool3x4 op_BitwiseAnd(bool3x4 lhs, bool rhs)
public bool3x4 op_BitwiseAnd(bool lhs, bool3x4 rhs)
public bool3x4 op_BitwiseOr(bool3x4 lhs, bool3x4 rhs)
public bool3x4 op_BitwiseOr(bool3x4 lhs, bool rhs)
public bool3x4 op_BitwiseOr(bool lhs, bool3x4 rhs)
public bool3x4 op_ExclusiveOr(bool3x4 lhs, bool3x4 rhs)
public bool3x4 op_ExclusiveOr(bool3x4 lhs, bool rhs)
public bool3x4 op_ExclusiveOr(bool lhs, bool3x4 rhs)
public bool3& get_Item(int index)
public bool Equals(bool3x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool4 : ValueType {
public bool x
public bool y
public bool z
public bool w
public bool4 xxxx
public bool4 xxxy
public bool4 xxxz
public bool4 xxxw
public bool4 xxyx
public bool4 xxyy
public bool4 xxyz
public bool4 xxyw
public bool4 xxzx
public bool4 xxzy
public bool4 xxzz
public bool4 xxzw
public bool4 xxwx
public bool4 xxwy
public bool4 xxwz
public bool4 xxww
public bool4 xyxx
public bool4 xyxy
public bool4 xyxz
public bool4 xyxw
public bool4 xyyx
public bool4 xyyy
public bool4 xyyz
public bool4 xyyw
public bool4 xyzx
public bool4 xyzy
public bool4 xyzz
public bool4 xyzw
public bool4 xywx
public bool4 xywy
public bool4 xywz
public bool4 xyww
public bool4 xzxx
public bool4 xzxy
public bool4 xzxz
public bool4 xzxw
public bool4 xzyx
public bool4 xzyy
public bool4 xzyz
public bool4 xzyw
public bool4 xzzx
public bool4 xzzy
public bool4 xzzz
public bool4 xzzw
public bool4 xzwx
public bool4 xzwy
public bool4 xzwz
public bool4 xzww
public bool4 xwxx
public bool4 xwxy
public bool4 xwxz
public bool4 xwxw
public bool4 xwyx
public bool4 xwyy
public bool4 xwyz
public bool4 xwyw
public bool4 xwzx
public bool4 xwzy
public bool4 xwzz
public bool4 xwzw
public bool4 xwwx
public bool4 xwwy
public bool4 xwwz
public bool4 xwww
public bool4 yxxx
public bool4 yxxy
public bool4 yxxz
public bool4 yxxw
public bool4 yxyx
public bool4 yxyy
public bool4 yxyz
public bool4 yxyw
public bool4 yxzx
public bool4 yxzy
public bool4 yxzz
public bool4 yxzw
public bool4 yxwx
public bool4 yxwy
public bool4 yxwz
public bool4 yxww
public bool4 yyxx
public bool4 yyxy
public bool4 yyxz
public bool4 yyxw
public bool4 yyyx
public bool4 yyyy
public bool4 yyyz
public bool4 yyyw
public bool4 yyzx
public bool4 yyzy
public bool4 yyzz
public bool4 yyzw
public bool4 yywx
public bool4 yywy
public bool4 yywz
public bool4 yyww
public bool4 yzxx
public bool4 yzxy
public bool4 yzxz
public bool4 yzxw
public bool4 yzyx
public bool4 yzyy
public bool4 yzyz
public bool4 yzyw
public bool4 yzzx
public bool4 yzzy
public bool4 yzzz
public bool4 yzzw
public bool4 yzwx
public bool4 yzwy
public bool4 yzwz
public bool4 yzww
public bool4 ywxx
public bool4 ywxy
public bool4 ywxz
public bool4 ywxw
public bool4 ywyx
public bool4 ywyy
public bool4 ywyz
public bool4 ywyw
public bool4 ywzx
public bool4 ywzy
public bool4 ywzz
public bool4 ywzw
public bool4 ywwx
public bool4 ywwy
public bool4 ywwz
public bool4 ywww
public bool4 zxxx
public bool4 zxxy
public bool4 zxxz
public bool4 zxxw
public bool4 zxyx
public bool4 zxyy
public bool4 zxyz
public bool4 zxyw
public bool4 zxzx
public bool4 zxzy
public bool4 zxzz
public bool4 zxzw
public bool4 zxwx
public bool4 zxwy
public bool4 zxwz
public bool4 zxww
public bool4 zyxx
public bool4 zyxy
public bool4 zyxz
public bool4 zyxw
public bool4 zyyx
public bool4 zyyy
public bool4 zyyz
public bool4 zyyw
public bool4 zyzx
public bool4 zyzy
public bool4 zyzz
public bool4 zyzw
public bool4 zywx
public bool4 zywy
public bool4 zywz
public bool4 zyww
public bool4 zzxx
public bool4 zzxy
public bool4 zzxz
public bool4 zzxw
public bool4 zzyx
public bool4 zzyy
public bool4 zzyz
public bool4 zzyw
public bool4 zzzx
public bool4 zzzy
public bool4 zzzz
public bool4 zzzw
public bool4 zzwx
public bool4 zzwy
public bool4 zzwz
public bool4 zzww
public bool4 zwxx
public bool4 zwxy
public bool4 zwxz
public bool4 zwxw
public bool4 zwyx
public bool4 zwyy
public bool4 zwyz
public bool4 zwyw
public bool4 zwzx
public bool4 zwzy
public bool4 zwzz
public bool4 zwzw
public bool4 zwwx
public bool4 zwwy
public bool4 zwwz
public bool4 zwww
public bool4 wxxx
public bool4 wxxy
public bool4 wxxz
public bool4 wxxw
public bool4 wxyx
public bool4 wxyy
public bool4 wxyz
public bool4 wxyw
public bool4 wxzx
public bool4 wxzy
public bool4 wxzz
public bool4 wxzw
public bool4 wxwx
public bool4 wxwy
public bool4 wxwz
public bool4 wxww
public bool4 wyxx
public bool4 wyxy
public bool4 wyxz
public bool4 wyxw
public bool4 wyyx
public bool4 wyyy
public bool4 wyyz
public bool4 wyyw
public bool4 wyzx
public bool4 wyzy
public bool4 wyzz
public bool4 wyzw
public bool4 wywx
public bool4 wywy
public bool4 wywz
public bool4 wyww
public bool4 wzxx
public bool4 wzxy
public bool4 wzxz
public bool4 wzxw
public bool4 wzyx
public bool4 wzyy
public bool4 wzyz
public bool4 wzyw
public bool4 wzzx
public bool4 wzzy
public bool4 wzzz
public bool4 wzzw
public bool4 wzwx
public bool4 wzwy
public bool4 wzwz
public bool4 wzww
public bool4 wwxx
public bool4 wwxy
public bool4 wwxz
public bool4 wwxw
public bool4 wwyx
public bool4 wwyy
public bool4 wwyz
public bool4 wwyw
public bool4 wwzx
public bool4 wwzy
public bool4 wwzz
public bool4 wwzw
public bool4 wwwx
public bool4 wwwy
public bool4 wwwz
public bool4 wwww
public bool3 xxx
public bool3 xxy
public bool3 xxz
public bool3 xxw
public bool3 xyx
public bool3 xyy
public bool3 xyz
public bool3 xyw
public bool3 xzx
public bool3 xzy
public bool3 xzz
public bool3 xzw
public bool3 xwx
public bool3 xwy
public bool3 xwz
public bool3 xww
public bool3 yxx
public bool3 yxy
public bool3 yxz
public bool3 yxw
public bool3 yyx
public bool3 yyy
public bool3 yyz
public bool3 yyw
public bool3 yzx
public bool3 yzy
public bool3 yzz
public bool3 yzw
public bool3 ywx
public bool3 ywy
public bool3 ywz
public bool3 yww
public bool3 zxx
public bool3 zxy
public bool3 zxz
public bool3 zxw
public bool3 zyx
public bool3 zyy
public bool3 zyz
public bool3 zyw
public bool3 zzx
public bool3 zzy
public bool3 zzz
public bool3 zzw
public bool3 zwx
public bool3 zwy
public bool3 zwz
public bool3 zww
public bool3 wxx
public bool3 wxy
public bool3 wxz
public bool3 wxw
public bool3 wyx
public bool3 wyy
public bool3 wyz
public bool3 wyw
public bool3 wzx
public bool3 wzy
public bool3 wzz
public bool3 wzw
public bool3 wwx
public bool3 wwy
public bool3 wwz
public bool3 www
public bool2 xx
public bool2 xy
public bool2 xz
public bool2 xw
public bool2 yx
public bool2 yy
public bool2 yz
public bool2 yw
public bool2 zx
public bool2 zy
public bool2 zz
public bool2 zw
public bool2 wx
public bool2 wy
public bool2 wz
public bool2 ww
public bool Item
public void .ctor(bool x, bool y, bool z, bool w)
public void .ctor(bool x, bool y, bool2 zw)
public void .ctor(bool x, bool2 yz, bool w)
public void .ctor(bool x, bool3 yzw)
public void .ctor(bool2 xy, bool z, bool w)
public void .ctor(bool2 xy, bool2 zw)
public void .ctor(bool3 xyz, bool w)
public void .ctor(bool4 xyzw)
public void .ctor(bool v)
public bool4 op_Implicit(bool v)
public bool4 op_Equality(bool4 lhs, bool4 rhs)
public bool4 op_Equality(bool4 lhs, bool rhs)
public bool4 op_Equality(bool lhs, bool4 rhs)
public bool4 op_Inequality(bool4 lhs, bool4 rhs)
public bool4 op_Inequality(bool4 lhs, bool rhs)
public bool4 op_Inequality(bool lhs, bool4 rhs)
public bool4 op_LogicalNot(bool4 val)
public bool4 op_BitwiseAnd(bool4 lhs, bool4 rhs)
public bool4 op_BitwiseAnd(bool4 lhs, bool rhs)
public bool4 op_BitwiseAnd(bool lhs, bool4 rhs)
public bool4 op_BitwiseOr(bool4 lhs, bool4 rhs)
public bool4 op_BitwiseOr(bool4 lhs, bool rhs)
public bool4 op_BitwiseOr(bool lhs, bool4 rhs)
public bool4 op_ExclusiveOr(bool4 lhs, bool4 rhs)
public bool4 op_ExclusiveOr(bool4 lhs, bool rhs)
public bool4 op_ExclusiveOr(bool lhs, bool4 rhs)
public bool4 get_xxxx()
public bool4 get_xxxy()
public bool4 get_xxxz()
public bool4 get_xxxw()
public bool4 get_xxyx()
public bool4 get_xxyy()
public bool4 get_xxyz()
public bool4 get_xxyw()
public bool4 get_xxzx()
public bool4 get_xxzy()
public bool4 get_xxzz()
public bool4 get_xxzw()
public bool4 get_xxwx()
public bool4 get_xxwy()
public bool4 get_xxwz()
public bool4 get_xxww()
public bool4 get_xyxx()
public bool4 get_xyxy()
public bool4 get_xyxz()
public bool4 get_xyxw()
public bool4 get_xyyx()
public bool4 get_xyyy()
public bool4 get_xyyz()
public bool4 get_xyyw()
public bool4 get_xyzx()
public bool4 get_xyzy()
public bool4 get_xyzz()
public bool4 get_xyzw()
public void set_xyzw(bool4 value)
public bool4 get_xywx()
public bool4 get_xywy()
public bool4 get_xywz()
public void set_xywz(bool4 value)
public bool4 get_xyww()
public bool4 get_xzxx()
public bool4 get_xzxy()
public bool4 get_xzxz()
public bool4 get_xzxw()
public bool4 get_xzyx()
public bool4 get_xzyy()
public bool4 get_xzyz()
public bool4 get_xzyw()
public void set_xzyw(bool4 value)
public bool4 get_xzzx()
public bool4 get_xzzy()
public bool4 get_xzzz()
public bool4 get_xzzw()
public bool4 get_xzwx()
public bool4 get_xzwy()
public void set_xzwy(bool4 value)
public bool4 get_xzwz()
public bool4 get_xzww()
public bool4 get_xwxx()
public bool4 get_xwxy()
public bool4 get_xwxz()
public bool4 get_xwxw()
public bool4 get_xwyx()
public bool4 get_xwyy()
public bool4 get_xwyz()
public void set_xwyz(bool4 value)
public bool4 get_xwyw()
public bool4 get_xwzx()
public bool4 get_xwzy()
public void set_xwzy(bool4 value)
public bool4 get_xwzz()
public bool4 get_xwzw()
public bool4 get_xwwx()
public bool4 get_xwwy()
public bool4 get_xwwz()
public bool4 get_xwww()
public bool4 get_yxxx()
public bool4 get_yxxy()
public bool4 get_yxxz()
public bool4 get_yxxw()
public bool4 get_yxyx()
public bool4 get_yxyy()
public bool4 get_yxyz()
public bool4 get_yxyw()
public bool4 get_yxzx()
public bool4 get_yxzy()
public bool4 get_yxzz()
public bool4 get_yxzw()
public void set_yxzw(bool4 value)
public bool4 get_yxwx()
public bool4 get_yxwy()
public bool4 get_yxwz()
public void set_yxwz(bool4 value)
public bool4 get_yxww()
public bool4 get_yyxx()
public bool4 get_yyxy()
public bool4 get_yyxz()
public bool4 get_yyxw()
public bool4 get_yyyx()
public bool4 get_yyyy()
public bool4 get_yyyz()
public bool4 get_yyyw()
public bool4 get_yyzx()
public bool4 get_yyzy()
public bool4 get_yyzz()
public bool4 get_yyzw()
public bool4 get_yywx()
public bool4 get_yywy()
public bool4 get_yywz()
public bool4 get_yyww()
public bool4 get_yzxx()
public bool4 get_yzxy()
public bool4 get_yzxz()
public bool4 get_yzxw()
public void set_yzxw(bool4 value)
public bool4 get_yzyx()
public bool4 get_yzyy()
public bool4 get_yzyz()
public bool4 get_yzyw()
public bool4 get_yzzx()
public bool4 get_yzzy()
public bool4 get_yzzz()
public bool4 get_yzzw()
public bool4 get_yzwx()
public void set_yzwx(bool4 value)
public bool4 get_yzwy()
public bool4 get_yzwz()
public bool4 get_yzww()
public bool4 get_ywxx()
public bool4 get_ywxy()
public bool4 get_ywxz()
public void set_ywxz(bool4 value)
public bool4 get_ywxw()
public bool4 get_ywyx()
public bool4 get_ywyy()
public bool4 get_ywyz()
public bool4 get_ywyw()
public bool4 get_ywzx()
public void set_ywzx(bool4 value)
public bool4 get_ywzy()
public bool4 get_ywzz()
public bool4 get_ywzw()
public bool4 get_ywwx()
public bool4 get_ywwy()
public bool4 get_ywwz()
public bool4 get_ywww()
public bool4 get_zxxx()
public bool4 get_zxxy()
public bool4 get_zxxz()
public bool4 get_zxxw()
public bool4 get_zxyx()
public bool4 get_zxyy()
public bool4 get_zxyz()
public bool4 get_zxyw()
public void set_zxyw(bool4 value)
public bool4 get_zxzx()
public bool4 get_zxzy()
public bool4 get_zxzz()
public bool4 get_zxzw()
public bool4 get_zxwx()
public bool4 get_zxwy()
public void set_zxwy(bool4 value)
public bool4 get_zxwz()
public bool4 get_zxww()
public bool4 get_zyxx()
public bool4 get_zyxy()
public bool4 get_zyxz()
public bool4 get_zyxw()
public void set_zyxw(bool4 value)
public bool4 get_zyyx()
public bool4 get_zyyy()
public bool4 get_zyyz()
public bool4 get_zyyw()
public bool4 get_zyzx()
public bool4 get_zyzy()
public bool4 get_zyzz()
public bool4 get_zyzw()
public bool4 get_zywx()
public void set_zywx(bool4 value)
public bool4 get_zywy()
public bool4 get_zywz()
public bool4 get_zyww()
public bool4 get_zzxx()
public bool4 get_zzxy()
public bool4 get_zzxz()
public bool4 get_zzxw()
public bool4 get_zzyx()
public bool4 get_zzyy()
public bool4 get_zzyz()
public bool4 get_zzyw()
public bool4 get_zzzx()
public bool4 get_zzzy()
public bool4 get_zzzz()
public bool4 get_zzzw()
public bool4 get_zzwx()
public bool4 get_zzwy()
public bool4 get_zzwz()
public bool4 get_zzww()
public bool4 get_zwxx()
public bool4 get_zwxy()
public void set_zwxy(bool4 value)
public bool4 get_zwxz()
public bool4 get_zwxw()
public bool4 get_zwyx()
public void set_zwyx(bool4 value)
public bool4 get_zwyy()
public bool4 get_zwyz()
public bool4 get_zwyw()
public bool4 get_zwzx()
public bool4 get_zwzy()
public bool4 get_zwzz()
public bool4 get_zwzw()
public bool4 get_zwwx()
public bool4 get_zwwy()
public bool4 get_zwwz()
public bool4 get_zwww()
public bool4 get_wxxx()
public bool4 get_wxxy()
public bool4 get_wxxz()
public bool4 get_wxxw()
public bool4 get_wxyx()
public bool4 get_wxyy()
public bool4 get_wxyz()
public void set_wxyz(bool4 value)
public bool4 get_wxyw()
public bool4 get_wxzx()
public bool4 get_wxzy()
public void set_wxzy(bool4 value)
public bool4 get_wxzz()
public bool4 get_wxzw()
public bool4 get_wxwx()
public bool4 get_wxwy()
public bool4 get_wxwz()
public bool4 get_wxww()
public bool4 get_wyxx()
public bool4 get_wyxy()
public bool4 get_wyxz()
public void set_wyxz(bool4 value)
public bool4 get_wyxw()
public bool4 get_wyyx()
public bool4 get_wyyy()
public bool4 get_wyyz()
public bool4 get_wyyw()
public bool4 get_wyzx()
public void set_wyzx(bool4 value)
public bool4 get_wyzy()
public bool4 get_wyzz()
public bool4 get_wyzw()
public bool4 get_wywx()
public bool4 get_wywy()
public bool4 get_wywz()
public bool4 get_wyww()
public bool4 get_wzxx()
public bool4 get_wzxy()
public void set_wzxy(bool4 value)
public bool4 get_wzxz()
public bool4 get_wzxw()
public bool4 get_wzyx()
public void set_wzyx(bool4 value)
public bool4 get_wzyy()
public bool4 get_wzyz()
public bool4 get_wzyw()
public bool4 get_wzzx()
public bool4 get_wzzy()
public bool4 get_wzzz()
public bool4 get_wzzw()
public bool4 get_wzwx()
public bool4 get_wzwy()
public bool4 get_wzwz()
public bool4 get_wzww()
public bool4 get_wwxx()
public bool4 get_wwxy()
public bool4 get_wwxz()
public bool4 get_wwxw()
public bool4 get_wwyx()
public bool4 get_wwyy()
public bool4 get_wwyz()
public bool4 get_wwyw()
public bool4 get_wwzx()
public bool4 get_wwzy()
public bool4 get_wwzz()
public bool4 get_wwzw()
public bool4 get_wwwx()
public bool4 get_wwwy()
public bool4 get_wwwz()
public bool4 get_wwww()
public bool3 get_xxx()
public bool3 get_xxy()
public bool3 get_xxz()
public bool3 get_xxw()
public bool3 get_xyx()
public bool3 get_xyy()
public bool3 get_xyz()
public void set_xyz(bool3 value)
public bool3 get_xyw()
public void set_xyw(bool3 value)
public bool3 get_xzx()
public bool3 get_xzy()
public void set_xzy(bool3 value)
public bool3 get_xzz()
public bool3 get_xzw()
public void set_xzw(bool3 value)
public bool3 get_xwx()
public bool3 get_xwy()
public void set_xwy(bool3 value)
public bool3 get_xwz()
public void set_xwz(bool3 value)
public bool3 get_xww()
public bool3 get_yxx()
public bool3 get_yxy()
public bool3 get_yxz()
public void set_yxz(bool3 value)
public bool3 get_yxw()
public void set_yxw(bool3 value)
public bool3 get_yyx()
public bool3 get_yyy()
public bool3 get_yyz()
public bool3 get_yyw()
public bool3 get_yzx()
public void set_yzx(bool3 value)
public bool3 get_yzy()
public bool3 get_yzz()
public bool3 get_yzw()
public void set_yzw(bool3 value)
public bool3 get_ywx()
public void set_ywx(bool3 value)
public bool3 get_ywy()
public bool3 get_ywz()
public void set_ywz(bool3 value)
public bool3 get_yww()
public bool3 get_zxx()
public bool3 get_zxy()
public void set_zxy(bool3 value)
public bool3 get_zxz()
public bool3 get_zxw()
public void set_zxw(bool3 value)
public bool3 get_zyx()
public void set_zyx(bool3 value)
public bool3 get_zyy()
public bool3 get_zyz()
public bool3 get_zyw()
public void set_zyw(bool3 value)
public bool3 get_zzx()
public bool3 get_zzy()
public bool3 get_zzz()
public bool3 get_zzw()
public bool3 get_zwx()
public void set_zwx(bool3 value)
public bool3 get_zwy()
public void set_zwy(bool3 value)
public bool3 get_zwz()
public bool3 get_zww()
public bool3 get_wxx()
public bool3 get_wxy()
public void set_wxy(bool3 value)
public bool3 get_wxz()
public void set_wxz(bool3 value)
public bool3 get_wxw()
public bool3 get_wyx()
public void set_wyx(bool3 value)
public bool3 get_wyy()
public bool3 get_wyz()
public void set_wyz(bool3 value)
public bool3 get_wyw()
public bool3 get_wzx()
public void set_wzx(bool3 value)
public bool3 get_wzy()
public void set_wzy(bool3 value)
public bool3 get_wzz()
public bool3 get_wzw()
public bool3 get_wwx()
public bool3 get_wwy()
public bool3 get_wwz()
public bool3 get_www()
public bool2 get_xx()
public bool2 get_xy()
public void set_xy(bool2 value)
public bool2 get_xz()
public void set_xz(bool2 value)
public bool2 get_xw()
public void set_xw(bool2 value)
public bool2 get_yx()
public void set_yx(bool2 value)
public bool2 get_yy()
public bool2 get_yz()
public void set_yz(bool2 value)
public bool2 get_yw()
public void set_yw(bool2 value)
public bool2 get_zx()
public void set_zx(bool2 value)
public bool2 get_zy()
public void set_zy(bool2 value)
public bool2 get_zz()
public bool2 get_zw()
public void set_zw(bool2 value)
public bool2 get_wx()
public void set_wx(bool2 value)
public bool2 get_wy()
public void set_wy(bool2 value)
public bool2 get_wz()
public void set_wz(bool2 value)
public bool2 get_ww()
public bool get_Item(int index)
public void set_Item(int index, bool value)
public bool Equals(bool4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool4x2 : ValueType {
public bool4 c0
public bool4 c1
public bool4& Item
public void .ctor(bool4 c0, bool4 c1)
public void .ctor(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21, bool m30, bool m31)
public void .ctor(bool v)
public bool4x2 op_Implicit(bool v)
public bool4x2 op_Equality(bool4x2 lhs, bool4x2 rhs)
public bool4x2 op_Equality(bool4x2 lhs, bool rhs)
public bool4x2 op_Equality(bool lhs, bool4x2 rhs)
public bool4x2 op_Inequality(bool4x2 lhs, bool4x2 rhs)
public bool4x2 op_Inequality(bool4x2 lhs, bool rhs)
public bool4x2 op_Inequality(bool lhs, bool4x2 rhs)
public bool4x2 op_LogicalNot(bool4x2 val)
public bool4x2 op_BitwiseAnd(bool4x2 lhs, bool4x2 rhs)
public bool4x2 op_BitwiseAnd(bool4x2 lhs, bool rhs)
public bool4x2 op_BitwiseAnd(bool lhs, bool4x2 rhs)
public bool4x2 op_BitwiseOr(bool4x2 lhs, bool4x2 rhs)
public bool4x2 op_BitwiseOr(bool4x2 lhs, bool rhs)
public bool4x2 op_BitwiseOr(bool lhs, bool4x2 rhs)
public bool4x2 op_ExclusiveOr(bool4x2 lhs, bool4x2 rhs)
public bool4x2 op_ExclusiveOr(bool4x2 lhs, bool rhs)
public bool4x2 op_ExclusiveOr(bool lhs, bool4x2 rhs)
public bool4& get_Item(int index)
public bool Equals(bool4x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool4x3 : ValueType {
public bool4 c0
public bool4 c1
public bool4 c2
public bool4& Item
public void .ctor(bool4 c0, bool4 c1, bool4 c2)
public void .ctor(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22, bool m30, bool m31, bool m32)
public void .ctor(bool v)
public bool4x3 op_Implicit(bool v)
public bool4x3 op_Equality(bool4x3 lhs, bool4x3 rhs)
public bool4x3 op_Equality(bool4x3 lhs, bool rhs)
public bool4x3 op_Equality(bool lhs, bool4x3 rhs)
public bool4x3 op_Inequality(bool4x3 lhs, bool4x3 rhs)
public bool4x3 op_Inequality(bool4x3 lhs, bool rhs)
public bool4x3 op_Inequality(bool lhs, bool4x3 rhs)
public bool4x3 op_LogicalNot(bool4x3 val)
public bool4x3 op_BitwiseAnd(bool4x3 lhs, bool4x3 rhs)
public bool4x3 op_BitwiseAnd(bool4x3 lhs, bool rhs)
public bool4x3 op_BitwiseAnd(bool lhs, bool4x3 rhs)
public bool4x3 op_BitwiseOr(bool4x3 lhs, bool4x3 rhs)
public bool4x3 op_BitwiseOr(bool4x3 lhs, bool rhs)
public bool4x3 op_BitwiseOr(bool lhs, bool4x3 rhs)
public bool4x3 op_ExclusiveOr(bool4x3 lhs, bool4x3 rhs)
public bool4x3 op_ExclusiveOr(bool4x3 lhs, bool rhs)
public bool4x3 op_ExclusiveOr(bool lhs, bool4x3 rhs)
public bool4& get_Item(int index)
public bool Equals(bool4x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.bool4x4 : ValueType {
public bool4 c0
public bool4 c1
public bool4 c2
public bool4 c3
public bool4& Item
public void .ctor(bool4 c0, bool4 c1, bool4 c2, bool4 c3)
public void .ctor(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23, bool m30, bool m31, bool m32, bool m33)
public void .ctor(bool v)
public bool4x4 op_Implicit(bool v)
public bool4x4 op_Equality(bool4x4 lhs, bool4x4 rhs)
public bool4x4 op_Equality(bool4x4 lhs, bool rhs)
public bool4x4 op_Equality(bool lhs, bool4x4 rhs)
public bool4x4 op_Inequality(bool4x4 lhs, bool4x4 rhs)
public bool4x4 op_Inequality(bool4x4 lhs, bool rhs)
public bool4x4 op_Inequality(bool lhs, bool4x4 rhs)
public bool4x4 op_LogicalNot(bool4x4 val)
public bool4x4 op_BitwiseAnd(bool4x4 lhs, bool4x4 rhs)
public bool4x4 op_BitwiseAnd(bool4x4 lhs, bool rhs)
public bool4x4 op_BitwiseAnd(bool lhs, bool4x4 rhs)
public bool4x4 op_BitwiseOr(bool4x4 lhs, bool4x4 rhs)
public bool4x4 op_BitwiseOr(bool4x4 lhs, bool rhs)
public bool4x4 op_BitwiseOr(bool lhs, bool4x4 rhs)
public bool4x4 op_ExclusiveOr(bool4x4 lhs, bool4x4 rhs)
public bool4x4 op_ExclusiveOr(bool4x4 lhs, bool rhs)
public bool4x4 op_ExclusiveOr(bool lhs, bool4x4 rhs)
public bool4& get_Item(int index)
public bool Equals(bool4x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
}
public Unity.Mathematics.double2 : ValueType {
public double x
public double y
public double2 zero
public double4 xxxx
public double4 xxxy
public double4 xxyx
public double4 xxyy
public double4 xyxx
public double4 xyxy
public double4 xyyx
public double4 xyyy
public double4 yxxx
public double4 yxxy
public double4 yxyx
public double4 yxyy
public double4 yyxx
public double4 yyxy
public double4 yyyx
public double4 yyyy
public double3 xxx
public double3 xxy
public double3 xyx
public double3 xyy
public double3 yxx
public double3 yxy
public double3 yyx
public double3 yyy
public double2 xx
public double2 xy
public double2 yx
public double2 yy
public double Item
public void .ctor(double x, double y)
public void .ctor(double2 xy)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool2 v)
public void .ctor(int v)
public void .ctor(int2 v)
public void .ctor(UInt32 v)
public void .ctor(uint2 v)
public void .ctor(half v)
public void .ctor(half2 v)
public void .ctor(float v)
public void .ctor(float2 v)
public double2 op_Implicit(double v)
public double2 op_Explicit(bool v)
public double2 op_Explicit(bool2 v)
public double2 op_Implicit(int v)
public double2 op_Implicit(int2 v)
public double2 op_Implicit(UInt32 v)
public double2 op_Implicit(uint2 v)
public double2 op_Implicit(half v)
public double2 op_Implicit(half2 v)
public double2 op_Implicit(float v)
public double2 op_Implicit(float2 v)
public double2 op_Multiply(double2 lhs, double2 rhs)
public double2 op_Multiply(double2 lhs, double rhs)
public double2 op_Multiply(double lhs, double2 rhs)
public double2 op_Addition(double2 lhs, double2 rhs)
public double2 op_Addition(double2 lhs, double rhs)
public double2 op_Addition(double lhs, double2 rhs)
public double2 op_Subtraction(double2 lhs, double2 rhs)
public double2 op_Subtraction(double2 lhs, double rhs)
public double2 op_Subtraction(double lhs, double2 rhs)
public double2 op_Division(double2 lhs, double2 rhs)
public double2 op_Division(double2 lhs, double rhs)
public double2 op_Division(double lhs, double2 rhs)
public double2 op_Modulus(double2 lhs, double2 rhs)
public double2 op_Modulus(double2 lhs, double rhs)
public double2 op_Modulus(double lhs, double2 rhs)
public double2 op_Increment(double2 val)
public double2 op_Decrement(double2 val)
public bool2 op_LessThan(double2 lhs, double2 rhs)
public bool2 op_LessThan(double2 lhs, double rhs)
public bool2 op_LessThan(double lhs, double2 rhs)
public bool2 op_LessThanOrEqual(double2 lhs, double2 rhs)
public bool2 op_LessThanOrEqual(double2 lhs, double rhs)
public bool2 op_LessThanOrEqual(double lhs, double2 rhs)
public bool2 op_GreaterThan(double2 lhs, double2 rhs)
public bool2 op_GreaterThan(double2 lhs, double rhs)
public bool2 op_GreaterThan(double lhs, double2 rhs)
public bool2 op_GreaterThanOrEqual(double2 lhs, double2 rhs)
public bool2 op_GreaterThanOrEqual(double2 lhs, double rhs)
public bool2 op_GreaterThanOrEqual(double lhs, double2 rhs)
public double2 op_UnaryNegation(double2 val)
public double2 op_UnaryPlus(double2 val)
public bool2 op_Equality(double2 lhs, double2 rhs)
public bool2 op_Equality(double2 lhs, double rhs)
public bool2 op_Equality(double lhs, double2 rhs)
public bool2 op_Inequality(double2 lhs, double2 rhs)
public bool2 op_Inequality(double2 lhs, double rhs)
public bool2 op_Inequality(double lhs, double2 rhs)
public double4 get_xxxx()
public double4 get_xxxy()
public double4 get_xxyx()
public double4 get_xxyy()
public double4 get_xyxx()
public double4 get_xyxy()
public double4 get_xyyx()
public double4 get_xyyy()
public double4 get_yxxx()
public double4 get_yxxy()
public double4 get_yxyx()
public double4 get_yxyy()
public double4 get_yyxx()
public double4 get_yyxy()
public double4 get_yyyx()
public double4 get_yyyy()
public double3 get_xxx()
public double3 get_xxy()
public double3 get_xyx()
public double3 get_xyy()
public double3 get_yxx()
public double3 get_yxy()
public double3 get_yyx()
public double3 get_yyy()
public double2 get_xx()
public double2 get_xy()
public void set_xy(double2 value)
public double2 get_yx()
public void set_yx(double2 value)
public double2 get_yy()
public double get_Item(int index)
public void set_Item(int index, double value)
public bool Equals(double2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double2x2 : ValueType {
public double2 c0
public double2 c1
public double2x2 identity
public double2x2 zero
public double2& Item
public void .ctor(double2 c0, double2 c1)
public void .ctor(double m00, double m01, double m10, double m11)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool2x2 v)
public void .ctor(int v)
public void .ctor(int2x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x2 v)
public void .ctor(float v)
public void .ctor(float2x2 v)
public double2x2 op_Implicit(double v)
public double2x2 op_Explicit(bool v)
public double2x2 op_Explicit(bool2x2 v)
public double2x2 op_Implicit(int v)
public double2x2 op_Implicit(int2x2 v)
public double2x2 op_Implicit(UInt32 v)
public double2x2 op_Implicit(uint2x2 v)
public double2x2 op_Implicit(float v)
public double2x2 op_Implicit(float2x2 v)
public double2x2 op_Multiply(double2x2 lhs, double2x2 rhs)
public double2x2 op_Multiply(double2x2 lhs, double rhs)
public double2x2 op_Multiply(double lhs, double2x2 rhs)
public double2x2 op_Addition(double2x2 lhs, double2x2 rhs)
public double2x2 op_Addition(double2x2 lhs, double rhs)
public double2x2 op_Addition(double lhs, double2x2 rhs)
public double2x2 op_Subtraction(double2x2 lhs, double2x2 rhs)
public double2x2 op_Subtraction(double2x2 lhs, double rhs)
public double2x2 op_Subtraction(double lhs, double2x2 rhs)
public double2x2 op_Division(double2x2 lhs, double2x2 rhs)
public double2x2 op_Division(double2x2 lhs, double rhs)
public double2x2 op_Division(double lhs, double2x2 rhs)
public double2x2 op_Modulus(double2x2 lhs, double2x2 rhs)
public double2x2 op_Modulus(double2x2 lhs, double rhs)
public double2x2 op_Modulus(double lhs, double2x2 rhs)
public double2x2 op_Increment(double2x2 val)
public double2x2 op_Decrement(double2x2 val)
public bool2x2 op_LessThan(double2x2 lhs, double2x2 rhs)
public bool2x2 op_LessThan(double2x2 lhs, double rhs)
public bool2x2 op_LessThan(double lhs, double2x2 rhs)
public bool2x2 op_LessThanOrEqual(double2x2 lhs, double2x2 rhs)
public bool2x2 op_LessThanOrEqual(double2x2 lhs, double rhs)
public bool2x2 op_LessThanOrEqual(double lhs, double2x2 rhs)
public bool2x2 op_GreaterThan(double2x2 lhs, double2x2 rhs)
public bool2x2 op_GreaterThan(double2x2 lhs, double rhs)
public bool2x2 op_GreaterThan(double lhs, double2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(double2x2 lhs, double2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(double2x2 lhs, double rhs)
public bool2x2 op_GreaterThanOrEqual(double lhs, double2x2 rhs)
public double2x2 op_UnaryNegation(double2x2 val)
public double2x2 op_UnaryPlus(double2x2 val)
public bool2x2 op_Equality(double2x2 lhs, double2x2 rhs)
public bool2x2 op_Equality(double2x2 lhs, double rhs)
public bool2x2 op_Equality(double lhs, double2x2 rhs)
public bool2x2 op_Inequality(double2x2 lhs, double2x2 rhs)
public bool2x2 op_Inequality(double2x2 lhs, double rhs)
public bool2x2 op_Inequality(double lhs, double2x2 rhs)
public double2& get_Item(int index)
public bool Equals(double2x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double2x3 : ValueType {
public double2 c0
public double2 c1
public double2 c2
public double2x3 zero
public double2& Item
public void .ctor(double2 c0, double2 c1, double2 c2)
public void .ctor(double m00, double m01, double m02, double m10, double m11, double m12)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool2x3 v)
public void .ctor(int v)
public void .ctor(int2x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x3 v)
public void .ctor(float v)
public void .ctor(float2x3 v)
public double2x3 op_Implicit(double v)
public double2x3 op_Explicit(bool v)
public double2x3 op_Explicit(bool2x3 v)
public double2x3 op_Implicit(int v)
public double2x3 op_Implicit(int2x3 v)
public double2x3 op_Implicit(UInt32 v)
public double2x3 op_Implicit(uint2x3 v)
public double2x3 op_Implicit(float v)
public double2x3 op_Implicit(float2x3 v)
public double2x3 op_Multiply(double2x3 lhs, double2x3 rhs)
public double2x3 op_Multiply(double2x3 lhs, double rhs)
public double2x3 op_Multiply(double lhs, double2x3 rhs)
public double2x3 op_Addition(double2x3 lhs, double2x3 rhs)
public double2x3 op_Addition(double2x3 lhs, double rhs)
public double2x3 op_Addition(double lhs, double2x3 rhs)
public double2x3 op_Subtraction(double2x3 lhs, double2x3 rhs)
public double2x3 op_Subtraction(double2x3 lhs, double rhs)
public double2x3 op_Subtraction(double lhs, double2x3 rhs)
public double2x3 op_Division(double2x3 lhs, double2x3 rhs)
public double2x3 op_Division(double2x3 lhs, double rhs)
public double2x3 op_Division(double lhs, double2x3 rhs)
public double2x3 op_Modulus(double2x3 lhs, double2x3 rhs)
public double2x3 op_Modulus(double2x3 lhs, double rhs)
public double2x3 op_Modulus(double lhs, double2x3 rhs)
public double2x3 op_Increment(double2x3 val)
public double2x3 op_Decrement(double2x3 val)
public bool2x3 op_LessThan(double2x3 lhs, double2x3 rhs)
public bool2x3 op_LessThan(double2x3 lhs, double rhs)
public bool2x3 op_LessThan(double lhs, double2x3 rhs)
public bool2x3 op_LessThanOrEqual(double2x3 lhs, double2x3 rhs)
public bool2x3 op_LessThanOrEqual(double2x3 lhs, double rhs)
public bool2x3 op_LessThanOrEqual(double lhs, double2x3 rhs)
public bool2x3 op_GreaterThan(double2x3 lhs, double2x3 rhs)
public bool2x3 op_GreaterThan(double2x3 lhs, double rhs)
public bool2x3 op_GreaterThan(double lhs, double2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(double2x3 lhs, double2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(double2x3 lhs, double rhs)
public bool2x3 op_GreaterThanOrEqual(double lhs, double2x3 rhs)
public double2x3 op_UnaryNegation(double2x3 val)
public double2x3 op_UnaryPlus(double2x3 val)
public bool2x3 op_Equality(double2x3 lhs, double2x3 rhs)
public bool2x3 op_Equality(double2x3 lhs, double rhs)
public bool2x3 op_Equality(double lhs, double2x3 rhs)
public bool2x3 op_Inequality(double2x3 lhs, double2x3 rhs)
public bool2x3 op_Inequality(double2x3 lhs, double rhs)
public bool2x3 op_Inequality(double lhs, double2x3 rhs)
public double2& get_Item(int index)
public bool Equals(double2x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double2x4 : ValueType {
public double2 c0
public double2 c1
public double2 c2
public double2 c3
public double2x4 zero
public double2& Item
public void .ctor(double2 c0, double2 c1, double2 c2, double2 c3)
public void .ctor(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool2x4 v)
public void .ctor(int v)
public void .ctor(int2x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x4 v)
public void .ctor(float v)
public void .ctor(float2x4 v)
public double2x4 op_Implicit(double v)
public double2x4 op_Explicit(bool v)
public double2x4 op_Explicit(bool2x4 v)
public double2x4 op_Implicit(int v)
public double2x4 op_Implicit(int2x4 v)
public double2x4 op_Implicit(UInt32 v)
public double2x4 op_Implicit(uint2x4 v)
public double2x4 op_Implicit(float v)
public double2x4 op_Implicit(float2x4 v)
public double2x4 op_Multiply(double2x4 lhs, double2x4 rhs)
public double2x4 op_Multiply(double2x4 lhs, double rhs)
public double2x4 op_Multiply(double lhs, double2x4 rhs)
public double2x4 op_Addition(double2x4 lhs, double2x4 rhs)
public double2x4 op_Addition(double2x4 lhs, double rhs)
public double2x4 op_Addition(double lhs, double2x4 rhs)
public double2x4 op_Subtraction(double2x4 lhs, double2x4 rhs)
public double2x4 op_Subtraction(double2x4 lhs, double rhs)
public double2x4 op_Subtraction(double lhs, double2x4 rhs)
public double2x4 op_Division(double2x4 lhs, double2x4 rhs)
public double2x4 op_Division(double2x4 lhs, double rhs)
public double2x4 op_Division(double lhs, double2x4 rhs)
public double2x4 op_Modulus(double2x4 lhs, double2x4 rhs)
public double2x4 op_Modulus(double2x4 lhs, double rhs)
public double2x4 op_Modulus(double lhs, double2x4 rhs)
public double2x4 op_Increment(double2x4 val)
public double2x4 op_Decrement(double2x4 val)
public bool2x4 op_LessThan(double2x4 lhs, double2x4 rhs)
public bool2x4 op_LessThan(double2x4 lhs, double rhs)
public bool2x4 op_LessThan(double lhs, double2x4 rhs)
public bool2x4 op_LessThanOrEqual(double2x4 lhs, double2x4 rhs)
public bool2x4 op_LessThanOrEqual(double2x4 lhs, double rhs)
public bool2x4 op_LessThanOrEqual(double lhs, double2x4 rhs)
public bool2x4 op_GreaterThan(double2x4 lhs, double2x4 rhs)
public bool2x4 op_GreaterThan(double2x4 lhs, double rhs)
public bool2x4 op_GreaterThan(double lhs, double2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(double2x4 lhs, double2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(double2x4 lhs, double rhs)
public bool2x4 op_GreaterThanOrEqual(double lhs, double2x4 rhs)
public double2x4 op_UnaryNegation(double2x4 val)
public double2x4 op_UnaryPlus(double2x4 val)
public bool2x4 op_Equality(double2x4 lhs, double2x4 rhs)
public bool2x4 op_Equality(double2x4 lhs, double rhs)
public bool2x4 op_Equality(double lhs, double2x4 rhs)
public bool2x4 op_Inequality(double2x4 lhs, double2x4 rhs)
public bool2x4 op_Inequality(double2x4 lhs, double rhs)
public bool2x4 op_Inequality(double lhs, double2x4 rhs)
public double2& get_Item(int index)
public bool Equals(double2x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double3 : ValueType {
public double x
public double y
public double z
public double3 zero
public double4 xxxx
public double4 xxxy
public double4 xxxz
public double4 xxyx
public double4 xxyy
public double4 xxyz
public double4 xxzx
public double4 xxzy
public double4 xxzz
public double4 xyxx
public double4 xyxy
public double4 xyxz
public double4 xyyx
public double4 xyyy
public double4 xyyz
public double4 xyzx
public double4 xyzy
public double4 xyzz
public double4 xzxx
public double4 xzxy
public double4 xzxz
public double4 xzyx
public double4 xzyy
public double4 xzyz
public double4 xzzx
public double4 xzzy
public double4 xzzz
public double4 yxxx
public double4 yxxy
public double4 yxxz
public double4 yxyx
public double4 yxyy
public double4 yxyz
public double4 yxzx
public double4 yxzy
public double4 yxzz
public double4 yyxx
public double4 yyxy
public double4 yyxz
public double4 yyyx
public double4 yyyy
public double4 yyyz
public double4 yyzx
public double4 yyzy
public double4 yyzz
public double4 yzxx
public double4 yzxy
public double4 yzxz
public double4 yzyx
public double4 yzyy
public double4 yzyz
public double4 yzzx
public double4 yzzy
public double4 yzzz
public double4 zxxx
public double4 zxxy
public double4 zxxz
public double4 zxyx
public double4 zxyy
public double4 zxyz
public double4 zxzx
public double4 zxzy
public double4 zxzz
public double4 zyxx
public double4 zyxy
public double4 zyxz
public double4 zyyx
public double4 zyyy
public double4 zyyz
public double4 zyzx
public double4 zyzy
public double4 zyzz
public double4 zzxx
public double4 zzxy
public double4 zzxz
public double4 zzyx
public double4 zzyy
public double4 zzyz
public double4 zzzx
public double4 zzzy
public double4 zzzz
public double3 xxx
public double3 xxy
public double3 xxz
public double3 xyx
public double3 xyy
public double3 xyz
public double3 xzx
public double3 xzy
public double3 xzz
public double3 yxx
public double3 yxy
public double3 yxz
public double3 yyx
public double3 yyy
public double3 yyz
public double3 yzx
public double3 yzy
public double3 yzz
public double3 zxx
public double3 zxy
public double3 zxz
public double3 zyx
public double3 zyy
public double3 zyz
public double3 zzx
public double3 zzy
public double3 zzz
public double2 xx
public double2 xy
public double2 xz
public double2 yx
public double2 yy
public double2 yz
public double2 zx
public double2 zy
public double2 zz
public double Item
public void .ctor(double x, double y, double z)
public void .ctor(double x, double2 yz)
public void .ctor(double2 xy, double z)
public void .ctor(double3 xyz)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool3 v)
public void .ctor(int v)
public void .ctor(int3 v)
public void .ctor(UInt32 v)
public void .ctor(uint3 v)
public void .ctor(half v)
public void .ctor(half3 v)
public void .ctor(float v)
public void .ctor(float3 v)
public double3 op_Implicit(double v)
public double3 op_Explicit(bool v)
public double3 op_Explicit(bool3 v)
public double3 op_Implicit(int v)
public double3 op_Implicit(int3 v)
public double3 op_Implicit(UInt32 v)
public double3 op_Implicit(uint3 v)
public double3 op_Implicit(half v)
public double3 op_Implicit(half3 v)
public double3 op_Implicit(float v)
public double3 op_Implicit(float3 v)
public double3 op_Multiply(double3 lhs, double3 rhs)
public double3 op_Multiply(double3 lhs, double rhs)
public double3 op_Multiply(double lhs, double3 rhs)
public double3 op_Addition(double3 lhs, double3 rhs)
public double3 op_Addition(double3 lhs, double rhs)
public double3 op_Addition(double lhs, double3 rhs)
public double3 op_Subtraction(double3 lhs, double3 rhs)
public double3 op_Subtraction(double3 lhs, double rhs)
public double3 op_Subtraction(double lhs, double3 rhs)
public double3 op_Division(double3 lhs, double3 rhs)
public double3 op_Division(double3 lhs, double rhs)
public double3 op_Division(double lhs, double3 rhs)
public double3 op_Modulus(double3 lhs, double3 rhs)
public double3 op_Modulus(double3 lhs, double rhs)
public double3 op_Modulus(double lhs, double3 rhs)
public double3 op_Increment(double3 val)
public double3 op_Decrement(double3 val)
public bool3 op_LessThan(double3 lhs, double3 rhs)
public bool3 op_LessThan(double3 lhs, double rhs)
public bool3 op_LessThan(double lhs, double3 rhs)
public bool3 op_LessThanOrEqual(double3 lhs, double3 rhs)
public bool3 op_LessThanOrEqual(double3 lhs, double rhs)
public bool3 op_LessThanOrEqual(double lhs, double3 rhs)
public bool3 op_GreaterThan(double3 lhs, double3 rhs)
public bool3 op_GreaterThan(double3 lhs, double rhs)
public bool3 op_GreaterThan(double lhs, double3 rhs)
public bool3 op_GreaterThanOrEqual(double3 lhs, double3 rhs)
public bool3 op_GreaterThanOrEqual(double3 lhs, double rhs)
public bool3 op_GreaterThanOrEqual(double lhs, double3 rhs)
public double3 op_UnaryNegation(double3 val)
public double3 op_UnaryPlus(double3 val)
public bool3 op_Equality(double3 lhs, double3 rhs)
public bool3 op_Equality(double3 lhs, double rhs)
public bool3 op_Equality(double lhs, double3 rhs)
public bool3 op_Inequality(double3 lhs, double3 rhs)
public bool3 op_Inequality(double3 lhs, double rhs)
public bool3 op_Inequality(double lhs, double3 rhs)
public double4 get_xxxx()
public double4 get_xxxy()
public double4 get_xxxz()
public double4 get_xxyx()
public double4 get_xxyy()
public double4 get_xxyz()
public double4 get_xxzx()
public double4 get_xxzy()
public double4 get_xxzz()
public double4 get_xyxx()
public double4 get_xyxy()
public double4 get_xyxz()
public double4 get_xyyx()
public double4 get_xyyy()
public double4 get_xyyz()
public double4 get_xyzx()
public double4 get_xyzy()
public double4 get_xyzz()
public double4 get_xzxx()
public double4 get_xzxy()
public double4 get_xzxz()
public double4 get_xzyx()
public double4 get_xzyy()
public double4 get_xzyz()
public double4 get_xzzx()
public double4 get_xzzy()
public double4 get_xzzz()
public double4 get_yxxx()
public double4 get_yxxy()
public double4 get_yxxz()
public double4 get_yxyx()
public double4 get_yxyy()
public double4 get_yxyz()
public double4 get_yxzx()
public double4 get_yxzy()
public double4 get_yxzz()
public double4 get_yyxx()
public double4 get_yyxy()
public double4 get_yyxz()
public double4 get_yyyx()
public double4 get_yyyy()
public double4 get_yyyz()
public double4 get_yyzx()
public double4 get_yyzy()
public double4 get_yyzz()
public double4 get_yzxx()
public double4 get_yzxy()
public double4 get_yzxz()
public double4 get_yzyx()
public double4 get_yzyy()
public double4 get_yzyz()
public double4 get_yzzx()
public double4 get_yzzy()
public double4 get_yzzz()
public double4 get_zxxx()
public double4 get_zxxy()
public double4 get_zxxz()
public double4 get_zxyx()
public double4 get_zxyy()
public double4 get_zxyz()
public double4 get_zxzx()
public double4 get_zxzy()
public double4 get_zxzz()
public double4 get_zyxx()
public double4 get_zyxy()
public double4 get_zyxz()
public double4 get_zyyx()
public double4 get_zyyy()
public double4 get_zyyz()
public double4 get_zyzx()
public double4 get_zyzy()
public double4 get_zyzz()
public double4 get_zzxx()
public double4 get_zzxy()
public double4 get_zzxz()
public double4 get_zzyx()
public double4 get_zzyy()
public double4 get_zzyz()
public double4 get_zzzx()
public double4 get_zzzy()
public double4 get_zzzz()
public double3 get_xxx()
public double3 get_xxy()
public double3 get_xxz()
public double3 get_xyx()
public double3 get_xyy()
public double3 get_xyz()
public void set_xyz(double3 value)
public double3 get_xzx()
public double3 get_xzy()
public void set_xzy(double3 value)
public double3 get_xzz()
public double3 get_yxx()
public double3 get_yxy()
public double3 get_yxz()
public void set_yxz(double3 value)
public double3 get_yyx()
public double3 get_yyy()
public double3 get_yyz()
public double3 get_yzx()
public void set_yzx(double3 value)
public double3 get_yzy()
public double3 get_yzz()
public double3 get_zxx()
public double3 get_zxy()
public void set_zxy(double3 value)
public double3 get_zxz()
public double3 get_zyx()
public void set_zyx(double3 value)
public double3 get_zyy()
public double3 get_zyz()
public double3 get_zzx()
public double3 get_zzy()
public double3 get_zzz()
public double2 get_xx()
public double2 get_xy()
public void set_xy(double2 value)
public double2 get_xz()
public void set_xz(double2 value)
public double2 get_yx()
public void set_yx(double2 value)
public double2 get_yy()
public double2 get_yz()
public void set_yz(double2 value)
public double2 get_zx()
public void set_zx(double2 value)
public double2 get_zy()
public void set_zy(double2 value)
public double2 get_zz()
public double get_Item(int index)
public void set_Item(int index, double value)
public bool Equals(double3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double3x2 : ValueType {
public double3 c0
public double3 c1
public double3x2 zero
public double3& Item
public void .ctor(double3 c0, double3 c1)
public void .ctor(double m00, double m01, double m10, double m11, double m20, double m21)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool3x2 v)
public void .ctor(int v)
public void .ctor(int3x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x2 v)
public void .ctor(float v)
public void .ctor(float3x2 v)
public double3x2 op_Implicit(double v)
public double3x2 op_Explicit(bool v)
public double3x2 op_Explicit(bool3x2 v)
public double3x2 op_Implicit(int v)
public double3x2 op_Implicit(int3x2 v)
public double3x2 op_Implicit(UInt32 v)
public double3x2 op_Implicit(uint3x2 v)
public double3x2 op_Implicit(float v)
public double3x2 op_Implicit(float3x2 v)
public double3x2 op_Multiply(double3x2 lhs, double3x2 rhs)
public double3x2 op_Multiply(double3x2 lhs, double rhs)
public double3x2 op_Multiply(double lhs, double3x2 rhs)
public double3x2 op_Addition(double3x2 lhs, double3x2 rhs)
public double3x2 op_Addition(double3x2 lhs, double rhs)
public double3x2 op_Addition(double lhs, double3x2 rhs)
public double3x2 op_Subtraction(double3x2 lhs, double3x2 rhs)
public double3x2 op_Subtraction(double3x2 lhs, double rhs)
public double3x2 op_Subtraction(double lhs, double3x2 rhs)
public double3x2 op_Division(double3x2 lhs, double3x2 rhs)
public double3x2 op_Division(double3x2 lhs, double rhs)
public double3x2 op_Division(double lhs, double3x2 rhs)
public double3x2 op_Modulus(double3x2 lhs, double3x2 rhs)
public double3x2 op_Modulus(double3x2 lhs, double rhs)
public double3x2 op_Modulus(double lhs, double3x2 rhs)
public double3x2 op_Increment(double3x2 val)
public double3x2 op_Decrement(double3x2 val)
public bool3x2 op_LessThan(double3x2 lhs, double3x2 rhs)
public bool3x2 op_LessThan(double3x2 lhs, double rhs)
public bool3x2 op_LessThan(double lhs, double3x2 rhs)
public bool3x2 op_LessThanOrEqual(double3x2 lhs, double3x2 rhs)
public bool3x2 op_LessThanOrEqual(double3x2 lhs, double rhs)
public bool3x2 op_LessThanOrEqual(double lhs, double3x2 rhs)
public bool3x2 op_GreaterThan(double3x2 lhs, double3x2 rhs)
public bool3x2 op_GreaterThan(double3x2 lhs, double rhs)
public bool3x2 op_GreaterThan(double lhs, double3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(double3x2 lhs, double3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(double3x2 lhs, double rhs)
public bool3x2 op_GreaterThanOrEqual(double lhs, double3x2 rhs)
public double3x2 op_UnaryNegation(double3x2 val)
public double3x2 op_UnaryPlus(double3x2 val)
public bool3x2 op_Equality(double3x2 lhs, double3x2 rhs)
public bool3x2 op_Equality(double3x2 lhs, double rhs)
public bool3x2 op_Equality(double lhs, double3x2 rhs)
public bool3x2 op_Inequality(double3x2 lhs, double3x2 rhs)
public bool3x2 op_Inequality(double3x2 lhs, double rhs)
public bool3x2 op_Inequality(double lhs, double3x2 rhs)
public double3& get_Item(int index)
public bool Equals(double3x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double3x3 : ValueType {
public double3 c0
public double3 c1
public double3 c2
public double3x3 identity
public double3x3 zero
public double3& Item
public void .ctor(double3 c0, double3 c1, double3 c2)
public void .ctor(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool3x3 v)
public void .ctor(int v)
public void .ctor(int3x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x3 v)
public void .ctor(float v)
public void .ctor(float3x3 v)
public double3x3 op_Implicit(double v)
public double3x3 op_Explicit(bool v)
public double3x3 op_Explicit(bool3x3 v)
public double3x3 op_Implicit(int v)
public double3x3 op_Implicit(int3x3 v)
public double3x3 op_Implicit(UInt32 v)
public double3x3 op_Implicit(uint3x3 v)
public double3x3 op_Implicit(float v)
public double3x3 op_Implicit(float3x3 v)
public double3x3 op_Multiply(double3x3 lhs, double3x3 rhs)
public double3x3 op_Multiply(double3x3 lhs, double rhs)
public double3x3 op_Multiply(double lhs, double3x3 rhs)
public double3x3 op_Addition(double3x3 lhs, double3x3 rhs)
public double3x3 op_Addition(double3x3 lhs, double rhs)
public double3x3 op_Addition(double lhs, double3x3 rhs)
public double3x3 op_Subtraction(double3x3 lhs, double3x3 rhs)
public double3x3 op_Subtraction(double3x3 lhs, double rhs)
public double3x3 op_Subtraction(double lhs, double3x3 rhs)
public double3x3 op_Division(double3x3 lhs, double3x3 rhs)
public double3x3 op_Division(double3x3 lhs, double rhs)
public double3x3 op_Division(double lhs, double3x3 rhs)
public double3x3 op_Modulus(double3x3 lhs, double3x3 rhs)
public double3x3 op_Modulus(double3x3 lhs, double rhs)
public double3x3 op_Modulus(double lhs, double3x3 rhs)
public double3x3 op_Increment(double3x3 val)
public double3x3 op_Decrement(double3x3 val)
public bool3x3 op_LessThan(double3x3 lhs, double3x3 rhs)
public bool3x3 op_LessThan(double3x3 lhs, double rhs)
public bool3x3 op_LessThan(double lhs, double3x3 rhs)
public bool3x3 op_LessThanOrEqual(double3x3 lhs, double3x3 rhs)
public bool3x3 op_LessThanOrEqual(double3x3 lhs, double rhs)
public bool3x3 op_LessThanOrEqual(double lhs, double3x3 rhs)
public bool3x3 op_GreaterThan(double3x3 lhs, double3x3 rhs)
public bool3x3 op_GreaterThan(double3x3 lhs, double rhs)
public bool3x3 op_GreaterThan(double lhs, double3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(double3x3 lhs, double3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(double3x3 lhs, double rhs)
public bool3x3 op_GreaterThanOrEqual(double lhs, double3x3 rhs)
public double3x3 op_UnaryNegation(double3x3 val)
public double3x3 op_UnaryPlus(double3x3 val)
public bool3x3 op_Equality(double3x3 lhs, double3x3 rhs)
public bool3x3 op_Equality(double3x3 lhs, double rhs)
public bool3x3 op_Equality(double lhs, double3x3 rhs)
public bool3x3 op_Inequality(double3x3 lhs, double3x3 rhs)
public bool3x3 op_Inequality(double3x3 lhs, double rhs)
public bool3x3 op_Inequality(double lhs, double3x3 rhs)
public double3& get_Item(int index)
public bool Equals(double3x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double3x4 : ValueType {
public double3 c0
public double3 c1
public double3 c2
public double3 c3
public double3x4 zero
public double3& Item
public void .ctor(double3 c0, double3 c1, double3 c2, double3 c3)
public void .ctor(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool3x4 v)
public void .ctor(int v)
public void .ctor(int3x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x4 v)
public void .ctor(float v)
public void .ctor(float3x4 v)
public double3x4 op_Implicit(double v)
public double3x4 op_Explicit(bool v)
public double3x4 op_Explicit(bool3x4 v)
public double3x4 op_Implicit(int v)
public double3x4 op_Implicit(int3x4 v)
public double3x4 op_Implicit(UInt32 v)
public double3x4 op_Implicit(uint3x4 v)
public double3x4 op_Implicit(float v)
public double3x4 op_Implicit(float3x4 v)
public double3x4 op_Multiply(double3x4 lhs, double3x4 rhs)
public double3x4 op_Multiply(double3x4 lhs, double rhs)
public double3x4 op_Multiply(double lhs, double3x4 rhs)
public double3x4 op_Addition(double3x4 lhs, double3x4 rhs)
public double3x4 op_Addition(double3x4 lhs, double rhs)
public double3x4 op_Addition(double lhs, double3x4 rhs)
public double3x4 op_Subtraction(double3x4 lhs, double3x4 rhs)
public double3x4 op_Subtraction(double3x4 lhs, double rhs)
public double3x4 op_Subtraction(double lhs, double3x4 rhs)
public double3x4 op_Division(double3x4 lhs, double3x4 rhs)
public double3x4 op_Division(double3x4 lhs, double rhs)
public double3x4 op_Division(double lhs, double3x4 rhs)
public double3x4 op_Modulus(double3x4 lhs, double3x4 rhs)
public double3x4 op_Modulus(double3x4 lhs, double rhs)
public double3x4 op_Modulus(double lhs, double3x4 rhs)
public double3x4 op_Increment(double3x4 val)
public double3x4 op_Decrement(double3x4 val)
public bool3x4 op_LessThan(double3x4 lhs, double3x4 rhs)
public bool3x4 op_LessThan(double3x4 lhs, double rhs)
public bool3x4 op_LessThan(double lhs, double3x4 rhs)
public bool3x4 op_LessThanOrEqual(double3x4 lhs, double3x4 rhs)
public bool3x4 op_LessThanOrEqual(double3x4 lhs, double rhs)
public bool3x4 op_LessThanOrEqual(double lhs, double3x4 rhs)
public bool3x4 op_GreaterThan(double3x4 lhs, double3x4 rhs)
public bool3x4 op_GreaterThan(double3x4 lhs, double rhs)
public bool3x4 op_GreaterThan(double lhs, double3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(double3x4 lhs, double3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(double3x4 lhs, double rhs)
public bool3x4 op_GreaterThanOrEqual(double lhs, double3x4 rhs)
public double3x4 op_UnaryNegation(double3x4 val)
public double3x4 op_UnaryPlus(double3x4 val)
public bool3x4 op_Equality(double3x4 lhs, double3x4 rhs)
public bool3x4 op_Equality(double3x4 lhs, double rhs)
public bool3x4 op_Equality(double lhs, double3x4 rhs)
public bool3x4 op_Inequality(double3x4 lhs, double3x4 rhs)
public bool3x4 op_Inequality(double3x4 lhs, double rhs)
public bool3x4 op_Inequality(double lhs, double3x4 rhs)
public double3& get_Item(int index)
public bool Equals(double3x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double4 : ValueType {
public double x
public double y
public double z
public double w
public double4 zero
public double4 xxxx
public double4 xxxy
public double4 xxxz
public double4 xxxw
public double4 xxyx
public double4 xxyy
public double4 xxyz
public double4 xxyw
public double4 xxzx
public double4 xxzy
public double4 xxzz
public double4 xxzw
public double4 xxwx
public double4 xxwy
public double4 xxwz
public double4 xxww
public double4 xyxx
public double4 xyxy
public double4 xyxz
public double4 xyxw
public double4 xyyx
public double4 xyyy
public double4 xyyz
public double4 xyyw
public double4 xyzx
public double4 xyzy
public double4 xyzz
public double4 xyzw
public double4 xywx
public double4 xywy
public double4 xywz
public double4 xyww
public double4 xzxx
public double4 xzxy
public double4 xzxz
public double4 xzxw
public double4 xzyx
public double4 xzyy
public double4 xzyz
public double4 xzyw
public double4 xzzx
public double4 xzzy
public double4 xzzz
public double4 xzzw
public double4 xzwx
public double4 xzwy
public double4 xzwz
public double4 xzww
public double4 xwxx
public double4 xwxy
public double4 xwxz
public double4 xwxw
public double4 xwyx
public double4 xwyy
public double4 xwyz
public double4 xwyw
public double4 xwzx
public double4 xwzy
public double4 xwzz
public double4 xwzw
public double4 xwwx
public double4 xwwy
public double4 xwwz
public double4 xwww
public double4 yxxx
public double4 yxxy
public double4 yxxz
public double4 yxxw
public double4 yxyx
public double4 yxyy
public double4 yxyz
public double4 yxyw
public double4 yxzx
public double4 yxzy
public double4 yxzz
public double4 yxzw
public double4 yxwx
public double4 yxwy
public double4 yxwz
public double4 yxww
public double4 yyxx
public double4 yyxy
public double4 yyxz
public double4 yyxw
public double4 yyyx
public double4 yyyy
public double4 yyyz
public double4 yyyw
public double4 yyzx
public double4 yyzy
public double4 yyzz
public double4 yyzw
public double4 yywx
public double4 yywy
public double4 yywz
public double4 yyww
public double4 yzxx
public double4 yzxy
public double4 yzxz
public double4 yzxw
public double4 yzyx
public double4 yzyy
public double4 yzyz
public double4 yzyw
public double4 yzzx
public double4 yzzy
public double4 yzzz
public double4 yzzw
public double4 yzwx
public double4 yzwy
public double4 yzwz
public double4 yzww
public double4 ywxx
public double4 ywxy
public double4 ywxz
public double4 ywxw
public double4 ywyx
public double4 ywyy
public double4 ywyz
public double4 ywyw
public double4 ywzx
public double4 ywzy
public double4 ywzz
public double4 ywzw
public double4 ywwx
public double4 ywwy
public double4 ywwz
public double4 ywww
public double4 zxxx
public double4 zxxy
public double4 zxxz
public double4 zxxw
public double4 zxyx
public double4 zxyy
public double4 zxyz
public double4 zxyw
public double4 zxzx
public double4 zxzy
public double4 zxzz
public double4 zxzw
public double4 zxwx
public double4 zxwy
public double4 zxwz
public double4 zxww
public double4 zyxx
public double4 zyxy
public double4 zyxz
public double4 zyxw
public double4 zyyx
public double4 zyyy
public double4 zyyz
public double4 zyyw
public double4 zyzx
public double4 zyzy
public double4 zyzz
public double4 zyzw
public double4 zywx
public double4 zywy
public double4 zywz
public double4 zyww
public double4 zzxx
public double4 zzxy
public double4 zzxz
public double4 zzxw
public double4 zzyx
public double4 zzyy
public double4 zzyz
public double4 zzyw
public double4 zzzx
public double4 zzzy
public double4 zzzz
public double4 zzzw
public double4 zzwx
public double4 zzwy
public double4 zzwz
public double4 zzww
public double4 zwxx
public double4 zwxy
public double4 zwxz
public double4 zwxw
public double4 zwyx
public double4 zwyy
public double4 zwyz
public double4 zwyw
public double4 zwzx
public double4 zwzy
public double4 zwzz
public double4 zwzw
public double4 zwwx
public double4 zwwy
public double4 zwwz
public double4 zwww
public double4 wxxx
public double4 wxxy
public double4 wxxz
public double4 wxxw
public double4 wxyx
public double4 wxyy
public double4 wxyz
public double4 wxyw
public double4 wxzx
public double4 wxzy
public double4 wxzz
public double4 wxzw
public double4 wxwx
public double4 wxwy
public double4 wxwz
public double4 wxww
public double4 wyxx
public double4 wyxy
public double4 wyxz
public double4 wyxw
public double4 wyyx
public double4 wyyy
public double4 wyyz
public double4 wyyw
public double4 wyzx
public double4 wyzy
public double4 wyzz
public double4 wyzw
public double4 wywx
public double4 wywy
public double4 wywz
public double4 wyww
public double4 wzxx
public double4 wzxy
public double4 wzxz
public double4 wzxw
public double4 wzyx
public double4 wzyy
public double4 wzyz
public double4 wzyw
public double4 wzzx
public double4 wzzy
public double4 wzzz
public double4 wzzw
public double4 wzwx
public double4 wzwy
public double4 wzwz
public double4 wzww
public double4 wwxx
public double4 wwxy
public double4 wwxz
public double4 wwxw
public double4 wwyx
public double4 wwyy
public double4 wwyz
public double4 wwyw
public double4 wwzx
public double4 wwzy
public double4 wwzz
public double4 wwzw
public double4 wwwx
public double4 wwwy
public double4 wwwz
public double4 wwww
public double3 xxx
public double3 xxy
public double3 xxz
public double3 xxw
public double3 xyx
public double3 xyy
public double3 xyz
public double3 xyw
public double3 xzx
public double3 xzy
public double3 xzz
public double3 xzw
public double3 xwx
public double3 xwy
public double3 xwz
public double3 xww
public double3 yxx
public double3 yxy
public double3 yxz
public double3 yxw
public double3 yyx
public double3 yyy
public double3 yyz
public double3 yyw
public double3 yzx
public double3 yzy
public double3 yzz
public double3 yzw
public double3 ywx
public double3 ywy
public double3 ywz
public double3 yww
public double3 zxx
public double3 zxy
public double3 zxz
public double3 zxw
public double3 zyx
public double3 zyy
public double3 zyz
public double3 zyw
public double3 zzx
public double3 zzy
public double3 zzz
public double3 zzw
public double3 zwx
public double3 zwy
public double3 zwz
public double3 zww
public double3 wxx
public double3 wxy
public double3 wxz
public double3 wxw
public double3 wyx
public double3 wyy
public double3 wyz
public double3 wyw
public double3 wzx
public double3 wzy
public double3 wzz
public double3 wzw
public double3 wwx
public double3 wwy
public double3 wwz
public double3 www
public double2 xx
public double2 xy
public double2 xz
public double2 xw
public double2 yx
public double2 yy
public double2 yz
public double2 yw
public double2 zx
public double2 zy
public double2 zz
public double2 zw
public double2 wx
public double2 wy
public double2 wz
public double2 ww
public double Item
public void .ctor(double x, double y, double z, double w)
public void .ctor(double x, double y, double2 zw)
public void .ctor(double x, double2 yz, double w)
public void .ctor(double x, double3 yzw)
public void .ctor(double2 xy, double z, double w)
public void .ctor(double2 xy, double2 zw)
public void .ctor(double3 xyz, double w)
public void .ctor(double4 xyzw)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool4 v)
public void .ctor(int v)
public void .ctor(int4 v)
public void .ctor(UInt32 v)
public void .ctor(uint4 v)
public void .ctor(half v)
public void .ctor(half4 v)
public void .ctor(float v)
public void .ctor(float4 v)
public double4 op_Implicit(double v)
public double4 op_Explicit(bool v)
public double4 op_Explicit(bool4 v)
public double4 op_Implicit(int v)
public double4 op_Implicit(int4 v)
public double4 op_Implicit(UInt32 v)
public double4 op_Implicit(uint4 v)
public double4 op_Implicit(half v)
public double4 op_Implicit(half4 v)
public double4 op_Implicit(float v)
public double4 op_Implicit(float4 v)
public double4 op_Multiply(double4 lhs, double4 rhs)
public double4 op_Multiply(double4 lhs, double rhs)
public double4 op_Multiply(double lhs, double4 rhs)
public double4 op_Addition(double4 lhs, double4 rhs)
public double4 op_Addition(double4 lhs, double rhs)
public double4 op_Addition(double lhs, double4 rhs)
public double4 op_Subtraction(double4 lhs, double4 rhs)
public double4 op_Subtraction(double4 lhs, double rhs)
public double4 op_Subtraction(double lhs, double4 rhs)
public double4 op_Division(double4 lhs, double4 rhs)
public double4 op_Division(double4 lhs, double rhs)
public double4 op_Division(double lhs, double4 rhs)
public double4 op_Modulus(double4 lhs, double4 rhs)
public double4 op_Modulus(double4 lhs, double rhs)
public double4 op_Modulus(double lhs, double4 rhs)
public double4 op_Increment(double4 val)
public double4 op_Decrement(double4 val)
public bool4 op_LessThan(double4 lhs, double4 rhs)
public bool4 op_LessThan(double4 lhs, double rhs)
public bool4 op_LessThan(double lhs, double4 rhs)
public bool4 op_LessThanOrEqual(double4 lhs, double4 rhs)
public bool4 op_LessThanOrEqual(double4 lhs, double rhs)
public bool4 op_LessThanOrEqual(double lhs, double4 rhs)
public bool4 op_GreaterThan(double4 lhs, double4 rhs)
public bool4 op_GreaterThan(double4 lhs, double rhs)
public bool4 op_GreaterThan(double lhs, double4 rhs)
public bool4 op_GreaterThanOrEqual(double4 lhs, double4 rhs)
public bool4 op_GreaterThanOrEqual(double4 lhs, double rhs)
public bool4 op_GreaterThanOrEqual(double lhs, double4 rhs)
public double4 op_UnaryNegation(double4 val)
public double4 op_UnaryPlus(double4 val)
public bool4 op_Equality(double4 lhs, double4 rhs)
public bool4 op_Equality(double4 lhs, double rhs)
public bool4 op_Equality(double lhs, double4 rhs)
public bool4 op_Inequality(double4 lhs, double4 rhs)
public bool4 op_Inequality(double4 lhs, double rhs)
public bool4 op_Inequality(double lhs, double4 rhs)
public double4 get_xxxx()
public double4 get_xxxy()
public double4 get_xxxz()
public double4 get_xxxw()
public double4 get_xxyx()
public double4 get_xxyy()
public double4 get_xxyz()
public double4 get_xxyw()
public double4 get_xxzx()
public double4 get_xxzy()
public double4 get_xxzz()
public double4 get_xxzw()
public double4 get_xxwx()
public double4 get_xxwy()
public double4 get_xxwz()
public double4 get_xxww()
public double4 get_xyxx()
public double4 get_xyxy()
public double4 get_xyxz()
public double4 get_xyxw()
public double4 get_xyyx()
public double4 get_xyyy()
public double4 get_xyyz()
public double4 get_xyyw()
public double4 get_xyzx()
public double4 get_xyzy()
public double4 get_xyzz()
public double4 get_xyzw()
public void set_xyzw(double4 value)
public double4 get_xywx()
public double4 get_xywy()
public double4 get_xywz()
public void set_xywz(double4 value)
public double4 get_xyww()
public double4 get_xzxx()
public double4 get_xzxy()
public double4 get_xzxz()
public double4 get_xzxw()
public double4 get_xzyx()
public double4 get_xzyy()
public double4 get_xzyz()
public double4 get_xzyw()
public void set_xzyw(double4 value)
public double4 get_xzzx()
public double4 get_xzzy()
public double4 get_xzzz()
public double4 get_xzzw()
public double4 get_xzwx()
public double4 get_xzwy()
public void set_xzwy(double4 value)
public double4 get_xzwz()
public double4 get_xzww()
public double4 get_xwxx()
public double4 get_xwxy()
public double4 get_xwxz()
public double4 get_xwxw()
public double4 get_xwyx()
public double4 get_xwyy()
public double4 get_xwyz()
public void set_xwyz(double4 value)
public double4 get_xwyw()
public double4 get_xwzx()
public double4 get_xwzy()
public void set_xwzy(double4 value)
public double4 get_xwzz()
public double4 get_xwzw()
public double4 get_xwwx()
public double4 get_xwwy()
public double4 get_xwwz()
public double4 get_xwww()
public double4 get_yxxx()
public double4 get_yxxy()
public double4 get_yxxz()
public double4 get_yxxw()
public double4 get_yxyx()
public double4 get_yxyy()
public double4 get_yxyz()
public double4 get_yxyw()
public double4 get_yxzx()
public double4 get_yxzy()
public double4 get_yxzz()
public double4 get_yxzw()
public void set_yxzw(double4 value)
public double4 get_yxwx()
public double4 get_yxwy()
public double4 get_yxwz()
public void set_yxwz(double4 value)
public double4 get_yxww()
public double4 get_yyxx()
public double4 get_yyxy()
public double4 get_yyxz()
public double4 get_yyxw()
public double4 get_yyyx()
public double4 get_yyyy()
public double4 get_yyyz()
public double4 get_yyyw()
public double4 get_yyzx()
public double4 get_yyzy()
public double4 get_yyzz()
public double4 get_yyzw()
public double4 get_yywx()
public double4 get_yywy()
public double4 get_yywz()
public double4 get_yyww()
public double4 get_yzxx()
public double4 get_yzxy()
public double4 get_yzxz()
public double4 get_yzxw()
public void set_yzxw(double4 value)
public double4 get_yzyx()
public double4 get_yzyy()
public double4 get_yzyz()
public double4 get_yzyw()
public double4 get_yzzx()
public double4 get_yzzy()
public double4 get_yzzz()
public double4 get_yzzw()
public double4 get_yzwx()
public void set_yzwx(double4 value)
public double4 get_yzwy()
public double4 get_yzwz()
public double4 get_yzww()
public double4 get_ywxx()
public double4 get_ywxy()
public double4 get_ywxz()
public void set_ywxz(double4 value)
public double4 get_ywxw()
public double4 get_ywyx()
public double4 get_ywyy()
public double4 get_ywyz()
public double4 get_ywyw()
public double4 get_ywzx()
public void set_ywzx(double4 value)
public double4 get_ywzy()
public double4 get_ywzz()
public double4 get_ywzw()
public double4 get_ywwx()
public double4 get_ywwy()
public double4 get_ywwz()
public double4 get_ywww()
public double4 get_zxxx()
public double4 get_zxxy()
public double4 get_zxxz()
public double4 get_zxxw()
public double4 get_zxyx()
public double4 get_zxyy()
public double4 get_zxyz()
public double4 get_zxyw()
public void set_zxyw(double4 value)
public double4 get_zxzx()
public double4 get_zxzy()
public double4 get_zxzz()
public double4 get_zxzw()
public double4 get_zxwx()
public double4 get_zxwy()
public void set_zxwy(double4 value)
public double4 get_zxwz()
public double4 get_zxww()
public double4 get_zyxx()
public double4 get_zyxy()
public double4 get_zyxz()
public double4 get_zyxw()
public void set_zyxw(double4 value)
public double4 get_zyyx()
public double4 get_zyyy()
public double4 get_zyyz()
public double4 get_zyyw()
public double4 get_zyzx()
public double4 get_zyzy()
public double4 get_zyzz()
public double4 get_zyzw()
public double4 get_zywx()
public void set_zywx(double4 value)
public double4 get_zywy()
public double4 get_zywz()
public double4 get_zyww()
public double4 get_zzxx()
public double4 get_zzxy()
public double4 get_zzxz()
public double4 get_zzxw()
public double4 get_zzyx()
public double4 get_zzyy()
public double4 get_zzyz()
public double4 get_zzyw()
public double4 get_zzzx()
public double4 get_zzzy()
public double4 get_zzzz()
public double4 get_zzzw()
public double4 get_zzwx()
public double4 get_zzwy()
public double4 get_zzwz()
public double4 get_zzww()
public double4 get_zwxx()
public double4 get_zwxy()
public void set_zwxy(double4 value)
public double4 get_zwxz()
public double4 get_zwxw()
public double4 get_zwyx()
public void set_zwyx(double4 value)
public double4 get_zwyy()
public double4 get_zwyz()
public double4 get_zwyw()
public double4 get_zwzx()
public double4 get_zwzy()
public double4 get_zwzz()
public double4 get_zwzw()
public double4 get_zwwx()
public double4 get_zwwy()
public double4 get_zwwz()
public double4 get_zwww()
public double4 get_wxxx()
public double4 get_wxxy()
public double4 get_wxxz()
public double4 get_wxxw()
public double4 get_wxyx()
public double4 get_wxyy()
public double4 get_wxyz()
public void set_wxyz(double4 value)
public double4 get_wxyw()
public double4 get_wxzx()
public double4 get_wxzy()
public void set_wxzy(double4 value)
public double4 get_wxzz()
public double4 get_wxzw()
public double4 get_wxwx()
public double4 get_wxwy()
public double4 get_wxwz()
public double4 get_wxww()
public double4 get_wyxx()
public double4 get_wyxy()
public double4 get_wyxz()
public void set_wyxz(double4 value)
public double4 get_wyxw()
public double4 get_wyyx()
public double4 get_wyyy()
public double4 get_wyyz()
public double4 get_wyyw()
public double4 get_wyzx()
public void set_wyzx(double4 value)
public double4 get_wyzy()
public double4 get_wyzz()
public double4 get_wyzw()
public double4 get_wywx()
public double4 get_wywy()
public double4 get_wywz()
public double4 get_wyww()
public double4 get_wzxx()
public double4 get_wzxy()
public void set_wzxy(double4 value)
public double4 get_wzxz()
public double4 get_wzxw()
public double4 get_wzyx()
public void set_wzyx(double4 value)
public double4 get_wzyy()
public double4 get_wzyz()
public double4 get_wzyw()
public double4 get_wzzx()
public double4 get_wzzy()
public double4 get_wzzz()
public double4 get_wzzw()
public double4 get_wzwx()
public double4 get_wzwy()
public double4 get_wzwz()
public double4 get_wzww()
public double4 get_wwxx()
public double4 get_wwxy()
public double4 get_wwxz()
public double4 get_wwxw()
public double4 get_wwyx()
public double4 get_wwyy()
public double4 get_wwyz()
public double4 get_wwyw()
public double4 get_wwzx()
public double4 get_wwzy()
public double4 get_wwzz()
public double4 get_wwzw()
public double4 get_wwwx()
public double4 get_wwwy()
public double4 get_wwwz()
public double4 get_wwww()
public double3 get_xxx()
public double3 get_xxy()
public double3 get_xxz()
public double3 get_xxw()
public double3 get_xyx()
public double3 get_xyy()
public double3 get_xyz()
public void set_xyz(double3 value)
public double3 get_xyw()
public void set_xyw(double3 value)
public double3 get_xzx()
public double3 get_xzy()
public void set_xzy(double3 value)
public double3 get_xzz()
public double3 get_xzw()
public void set_xzw(double3 value)
public double3 get_xwx()
public double3 get_xwy()
public void set_xwy(double3 value)
public double3 get_xwz()
public void set_xwz(double3 value)
public double3 get_xww()
public double3 get_yxx()
public double3 get_yxy()
public double3 get_yxz()
public void set_yxz(double3 value)
public double3 get_yxw()
public void set_yxw(double3 value)
public double3 get_yyx()
public double3 get_yyy()
public double3 get_yyz()
public double3 get_yyw()
public double3 get_yzx()
public void set_yzx(double3 value)
public double3 get_yzy()
public double3 get_yzz()
public double3 get_yzw()
public void set_yzw(double3 value)
public double3 get_ywx()
public void set_ywx(double3 value)
public double3 get_ywy()
public double3 get_ywz()
public void set_ywz(double3 value)
public double3 get_yww()
public double3 get_zxx()
public double3 get_zxy()
public void set_zxy(double3 value)
public double3 get_zxz()
public double3 get_zxw()
public void set_zxw(double3 value)
public double3 get_zyx()
public void set_zyx(double3 value)
public double3 get_zyy()
public double3 get_zyz()
public double3 get_zyw()
public void set_zyw(double3 value)
public double3 get_zzx()
public double3 get_zzy()
public double3 get_zzz()
public double3 get_zzw()
public double3 get_zwx()
public void set_zwx(double3 value)
public double3 get_zwy()
public void set_zwy(double3 value)
public double3 get_zwz()
public double3 get_zww()
public double3 get_wxx()
public double3 get_wxy()
public void set_wxy(double3 value)
public double3 get_wxz()
public void set_wxz(double3 value)
public double3 get_wxw()
public double3 get_wyx()
public void set_wyx(double3 value)
public double3 get_wyy()
public double3 get_wyz()
public void set_wyz(double3 value)
public double3 get_wyw()
public double3 get_wzx()
public void set_wzx(double3 value)
public double3 get_wzy()
public void set_wzy(double3 value)
public double3 get_wzz()
public double3 get_wzw()
public double3 get_wwx()
public double3 get_wwy()
public double3 get_wwz()
public double3 get_www()
public double2 get_xx()
public double2 get_xy()
public void set_xy(double2 value)
public double2 get_xz()
public void set_xz(double2 value)
public double2 get_xw()
public void set_xw(double2 value)
public double2 get_yx()
public void set_yx(double2 value)
public double2 get_yy()
public double2 get_yz()
public void set_yz(double2 value)
public double2 get_yw()
public void set_yw(double2 value)
public double2 get_zx()
public void set_zx(double2 value)
public double2 get_zy()
public void set_zy(double2 value)
public double2 get_zz()
public double2 get_zw()
public void set_zw(double2 value)
public double2 get_wx()
public void set_wx(double2 value)
public double2 get_wy()
public void set_wy(double2 value)
public double2 get_wz()
public void set_wz(double2 value)
public double2 get_ww()
public double get_Item(int index)
public void set_Item(int index, double value)
public bool Equals(double4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double4x2 : ValueType {
public double4 c0
public double4 c1
public double4x2 zero
public double4& Item
public void .ctor(double4 c0, double4 c1)
public void .ctor(double m00, double m01, double m10, double m11, double m20, double m21, double m30, double m31)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool4x2 v)
public void .ctor(int v)
public void .ctor(int4x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x2 v)
public void .ctor(float v)
public void .ctor(float4x2 v)
public double4x2 op_Implicit(double v)
public double4x2 op_Explicit(bool v)
public double4x2 op_Explicit(bool4x2 v)
public double4x2 op_Implicit(int v)
public double4x2 op_Implicit(int4x2 v)
public double4x2 op_Implicit(UInt32 v)
public double4x2 op_Implicit(uint4x2 v)
public double4x2 op_Implicit(float v)
public double4x2 op_Implicit(float4x2 v)
public double4x2 op_Multiply(double4x2 lhs, double4x2 rhs)
public double4x2 op_Multiply(double4x2 lhs, double rhs)
public double4x2 op_Multiply(double lhs, double4x2 rhs)
public double4x2 op_Addition(double4x2 lhs, double4x2 rhs)
public double4x2 op_Addition(double4x2 lhs, double rhs)
public double4x2 op_Addition(double lhs, double4x2 rhs)
public double4x2 op_Subtraction(double4x2 lhs, double4x2 rhs)
public double4x2 op_Subtraction(double4x2 lhs, double rhs)
public double4x2 op_Subtraction(double lhs, double4x2 rhs)
public double4x2 op_Division(double4x2 lhs, double4x2 rhs)
public double4x2 op_Division(double4x2 lhs, double rhs)
public double4x2 op_Division(double lhs, double4x2 rhs)
public double4x2 op_Modulus(double4x2 lhs, double4x2 rhs)
public double4x2 op_Modulus(double4x2 lhs, double rhs)
public double4x2 op_Modulus(double lhs, double4x2 rhs)
public double4x2 op_Increment(double4x2 val)
public double4x2 op_Decrement(double4x2 val)
public bool4x2 op_LessThan(double4x2 lhs, double4x2 rhs)
public bool4x2 op_LessThan(double4x2 lhs, double rhs)
public bool4x2 op_LessThan(double lhs, double4x2 rhs)
public bool4x2 op_LessThanOrEqual(double4x2 lhs, double4x2 rhs)
public bool4x2 op_LessThanOrEqual(double4x2 lhs, double rhs)
public bool4x2 op_LessThanOrEqual(double lhs, double4x2 rhs)
public bool4x2 op_GreaterThan(double4x2 lhs, double4x2 rhs)
public bool4x2 op_GreaterThan(double4x2 lhs, double rhs)
public bool4x2 op_GreaterThan(double lhs, double4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(double4x2 lhs, double4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(double4x2 lhs, double rhs)
public bool4x2 op_GreaterThanOrEqual(double lhs, double4x2 rhs)
public double4x2 op_UnaryNegation(double4x2 val)
public double4x2 op_UnaryPlus(double4x2 val)
public bool4x2 op_Equality(double4x2 lhs, double4x2 rhs)
public bool4x2 op_Equality(double4x2 lhs, double rhs)
public bool4x2 op_Equality(double lhs, double4x2 rhs)
public bool4x2 op_Inequality(double4x2 lhs, double4x2 rhs)
public bool4x2 op_Inequality(double4x2 lhs, double rhs)
public bool4x2 op_Inequality(double lhs, double4x2 rhs)
public double4& get_Item(int index)
public bool Equals(double4x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double4x3 : ValueType {
public double4 c0
public double4 c1
public double4 c2
public double4x3 zero
public double4& Item
public void .ctor(double4 c0, double4 c1, double4 c2)
public void .ctor(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22, double m30, double m31, double m32)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool4x3 v)
public void .ctor(int v)
public void .ctor(int4x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x3 v)
public void .ctor(float v)
public void .ctor(float4x3 v)
public double4x3 op_Implicit(double v)
public double4x3 op_Explicit(bool v)
public double4x3 op_Explicit(bool4x3 v)
public double4x3 op_Implicit(int v)
public double4x3 op_Implicit(int4x3 v)
public double4x3 op_Implicit(UInt32 v)
public double4x3 op_Implicit(uint4x3 v)
public double4x3 op_Implicit(float v)
public double4x3 op_Implicit(float4x3 v)
public double4x3 op_Multiply(double4x3 lhs, double4x3 rhs)
public double4x3 op_Multiply(double4x3 lhs, double rhs)
public double4x3 op_Multiply(double lhs, double4x3 rhs)
public double4x3 op_Addition(double4x3 lhs, double4x3 rhs)
public double4x3 op_Addition(double4x3 lhs, double rhs)
public double4x3 op_Addition(double lhs, double4x3 rhs)
public double4x3 op_Subtraction(double4x3 lhs, double4x3 rhs)
public double4x3 op_Subtraction(double4x3 lhs, double rhs)
public double4x3 op_Subtraction(double lhs, double4x3 rhs)
public double4x3 op_Division(double4x3 lhs, double4x3 rhs)
public double4x3 op_Division(double4x3 lhs, double rhs)
public double4x3 op_Division(double lhs, double4x3 rhs)
public double4x3 op_Modulus(double4x3 lhs, double4x3 rhs)
public double4x3 op_Modulus(double4x3 lhs, double rhs)
public double4x3 op_Modulus(double lhs, double4x3 rhs)
public double4x3 op_Increment(double4x3 val)
public double4x3 op_Decrement(double4x3 val)
public bool4x3 op_LessThan(double4x3 lhs, double4x3 rhs)
public bool4x3 op_LessThan(double4x3 lhs, double rhs)
public bool4x3 op_LessThan(double lhs, double4x3 rhs)
public bool4x3 op_LessThanOrEqual(double4x3 lhs, double4x3 rhs)
public bool4x3 op_LessThanOrEqual(double4x3 lhs, double rhs)
public bool4x3 op_LessThanOrEqual(double lhs, double4x3 rhs)
public bool4x3 op_GreaterThan(double4x3 lhs, double4x3 rhs)
public bool4x3 op_GreaterThan(double4x3 lhs, double rhs)
public bool4x3 op_GreaterThan(double lhs, double4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(double4x3 lhs, double4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(double4x3 lhs, double rhs)
public bool4x3 op_GreaterThanOrEqual(double lhs, double4x3 rhs)
public double4x3 op_UnaryNegation(double4x3 val)
public double4x3 op_UnaryPlus(double4x3 val)
public bool4x3 op_Equality(double4x3 lhs, double4x3 rhs)
public bool4x3 op_Equality(double4x3 lhs, double rhs)
public bool4x3 op_Equality(double lhs, double4x3 rhs)
public bool4x3 op_Inequality(double4x3 lhs, double4x3 rhs)
public bool4x3 op_Inequality(double4x3 lhs, double rhs)
public bool4x3 op_Inequality(double lhs, double4x3 rhs)
public double4& get_Item(int index)
public bool Equals(double4x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.double4x4 : ValueType {
public double4 c0
public double4 c1
public double4 c2
public double4 c3
public double4x4 identity
public double4x4 zero
public double4& Item
public void .ctor(double4 c0, double4 c1, double4 c2, double4 c3)
public void .ctor(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23, double m30, double m31, double m32, double m33)
public void .ctor(double v)
public void .ctor(bool v)
public void .ctor(bool4x4 v)
public void .ctor(int v)
public void .ctor(int4x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x4 v)
public void .ctor(float v)
public void .ctor(float4x4 v)
public double4x4 op_Implicit(double v)
public double4x4 op_Explicit(bool v)
public double4x4 op_Explicit(bool4x4 v)
public double4x4 op_Implicit(int v)
public double4x4 op_Implicit(int4x4 v)
public double4x4 op_Implicit(UInt32 v)
public double4x4 op_Implicit(uint4x4 v)
public double4x4 op_Implicit(float v)
public double4x4 op_Implicit(float4x4 v)
public double4x4 op_Multiply(double4x4 lhs, double4x4 rhs)
public double4x4 op_Multiply(double4x4 lhs, double rhs)
public double4x4 op_Multiply(double lhs, double4x4 rhs)
public double4x4 op_Addition(double4x4 lhs, double4x4 rhs)
public double4x4 op_Addition(double4x4 lhs, double rhs)
public double4x4 op_Addition(double lhs, double4x4 rhs)
public double4x4 op_Subtraction(double4x4 lhs, double4x4 rhs)
public double4x4 op_Subtraction(double4x4 lhs, double rhs)
public double4x4 op_Subtraction(double lhs, double4x4 rhs)
public double4x4 op_Division(double4x4 lhs, double4x4 rhs)
public double4x4 op_Division(double4x4 lhs, double rhs)
public double4x4 op_Division(double lhs, double4x4 rhs)
public double4x4 op_Modulus(double4x4 lhs, double4x4 rhs)
public double4x4 op_Modulus(double4x4 lhs, double rhs)
public double4x4 op_Modulus(double lhs, double4x4 rhs)
public double4x4 op_Increment(double4x4 val)
public double4x4 op_Decrement(double4x4 val)
public bool4x4 op_LessThan(double4x4 lhs, double4x4 rhs)
public bool4x4 op_LessThan(double4x4 lhs, double rhs)
public bool4x4 op_LessThan(double lhs, double4x4 rhs)
public bool4x4 op_LessThanOrEqual(double4x4 lhs, double4x4 rhs)
public bool4x4 op_LessThanOrEqual(double4x4 lhs, double rhs)
public bool4x4 op_LessThanOrEqual(double lhs, double4x4 rhs)
public bool4x4 op_GreaterThan(double4x4 lhs, double4x4 rhs)
public bool4x4 op_GreaterThan(double4x4 lhs, double rhs)
public bool4x4 op_GreaterThan(double lhs, double4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(double4x4 lhs, double4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(double4x4 lhs, double rhs)
public bool4x4 op_GreaterThanOrEqual(double lhs, double4x4 rhs)
public double4x4 op_UnaryNegation(double4x4 val)
public double4x4 op_UnaryPlus(double4x4 val)
public bool4x4 op_Equality(double4x4 lhs, double4x4 rhs)
public bool4x4 op_Equality(double4x4 lhs, double rhs)
public bool4x4 op_Equality(double lhs, double4x4 rhs)
public bool4x4 op_Inequality(double4x4 lhs, double4x4 rhs)
public bool4x4 op_Inequality(double4x4 lhs, double rhs)
public bool4x4 op_Inequality(double lhs, double4x4 rhs)
public double4& get_Item(int index)
public bool Equals(double4x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float2 : ValueType {
public float x
public float y
public float2 zero
public float4 xxxx
public float4 xxxy
public float4 xxyx
public float4 xxyy
public float4 xyxx
public float4 xyxy
public float4 xyyx
public float4 xyyy
public float4 yxxx
public float4 yxxy
public float4 yxyx
public float4 yxyy
public float4 yyxx
public float4 yyxy
public float4 yyyx
public float4 yyyy
public float3 xxx
public float3 xxy
public float3 xyx
public float3 xyy
public float3 yxx
public float3 yxy
public float3 yyx
public float3 yyy
public float2 xx
public float2 xy
public float2 yx
public float2 yy
public float Item
public void .ctor(float x, float y)
public void .ctor(float2 xy)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool2 v)
public void .ctor(int v)
public void .ctor(int2 v)
public void .ctor(UInt32 v)
public void .ctor(uint2 v)
public void .ctor(half v)
public void .ctor(half2 v)
public void .ctor(double v)
public void .ctor(double2 v)
public float2 op_Implicit(float v)
public float2 op_Explicit(bool v)
public float2 op_Explicit(bool2 v)
public float2 op_Implicit(int v)
public float2 op_Implicit(int2 v)
public float2 op_Implicit(UInt32 v)
public float2 op_Implicit(uint2 v)
public float2 op_Implicit(half v)
public float2 op_Implicit(half2 v)
public float2 op_Explicit(double v)
public float2 op_Explicit(double2 v)
public float2 op_Multiply(float2 lhs, float2 rhs)
public float2 op_Multiply(float2 lhs, float rhs)
public float2 op_Multiply(float lhs, float2 rhs)
public float2 op_Addition(float2 lhs, float2 rhs)
public float2 op_Addition(float2 lhs, float rhs)
public float2 op_Addition(float lhs, float2 rhs)
public float2 op_Subtraction(float2 lhs, float2 rhs)
public float2 op_Subtraction(float2 lhs, float rhs)
public float2 op_Subtraction(float lhs, float2 rhs)
public float2 op_Division(float2 lhs, float2 rhs)
public float2 op_Division(float2 lhs, float rhs)
public float2 op_Division(float lhs, float2 rhs)
public float2 op_Modulus(float2 lhs, float2 rhs)
public float2 op_Modulus(float2 lhs, float rhs)
public float2 op_Modulus(float lhs, float2 rhs)
public float2 op_Increment(float2 val)
public float2 op_Decrement(float2 val)
public bool2 op_LessThan(float2 lhs, float2 rhs)
public bool2 op_LessThan(float2 lhs, float rhs)
public bool2 op_LessThan(float lhs, float2 rhs)
public bool2 op_LessThanOrEqual(float2 lhs, float2 rhs)
public bool2 op_LessThanOrEqual(float2 lhs, float rhs)
public bool2 op_LessThanOrEqual(float lhs, float2 rhs)
public bool2 op_GreaterThan(float2 lhs, float2 rhs)
public bool2 op_GreaterThan(float2 lhs, float rhs)
public bool2 op_GreaterThan(float lhs, float2 rhs)
public bool2 op_GreaterThanOrEqual(float2 lhs, float2 rhs)
public bool2 op_GreaterThanOrEqual(float2 lhs, float rhs)
public bool2 op_GreaterThanOrEqual(float lhs, float2 rhs)
public float2 op_UnaryNegation(float2 val)
public float2 op_UnaryPlus(float2 val)
public bool2 op_Equality(float2 lhs, float2 rhs)
public bool2 op_Equality(float2 lhs, float rhs)
public bool2 op_Equality(float lhs, float2 rhs)
public bool2 op_Inequality(float2 lhs, float2 rhs)
public bool2 op_Inequality(float2 lhs, float rhs)
public bool2 op_Inequality(float lhs, float2 rhs)
public float4 get_xxxx()
public float4 get_xxxy()
public float4 get_xxyx()
public float4 get_xxyy()
public float4 get_xyxx()
public float4 get_xyxy()
public float4 get_xyyx()
public float4 get_xyyy()
public float4 get_yxxx()
public float4 get_yxxy()
public float4 get_yxyx()
public float4 get_yxyy()
public float4 get_yyxx()
public float4 get_yyxy()
public float4 get_yyyx()
public float4 get_yyyy()
public float3 get_xxx()
public float3 get_xxy()
public float3 get_xyx()
public float3 get_xyy()
public float3 get_yxx()
public float3 get_yxy()
public float3 get_yyx()
public float3 get_yyy()
public float2 get_xx()
public float2 get_xy()
public void set_xy(float2 value)
public float2 get_yx()
public void set_yx(float2 value)
public float2 get_yy()
public float get_Item(int index)
public void set_Item(int index, float value)
public bool Equals(float2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
public Vector2 op_Implicit(float2 v)
public float2 op_Implicit(Vector2 v)
}
public Unity.Mathematics.float2x2 : ValueType {
public float2 c0
public float2 c1
public float2x2 identity
public float2x2 zero
public float2& Item
public void .ctor(float2 c0, float2 c1)
public void .ctor(float m00, float m01, float m10, float m11)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool2x2 v)
public void .ctor(int v)
public void .ctor(int2x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x2 v)
public void .ctor(double v)
public void .ctor(double2x2 v)
public float2x2 op_Implicit(float v)
public float2x2 op_Explicit(bool v)
public float2x2 op_Explicit(bool2x2 v)
public float2x2 op_Implicit(int v)
public float2x2 op_Implicit(int2x2 v)
public float2x2 op_Implicit(UInt32 v)
public float2x2 op_Implicit(uint2x2 v)
public float2x2 op_Explicit(double v)
public float2x2 op_Explicit(double2x2 v)
public float2x2 op_Multiply(float2x2 lhs, float2x2 rhs)
public float2x2 op_Multiply(float2x2 lhs, float rhs)
public float2x2 op_Multiply(float lhs, float2x2 rhs)
public float2x2 op_Addition(float2x2 lhs, float2x2 rhs)
public float2x2 op_Addition(float2x2 lhs, float rhs)
public float2x2 op_Addition(float lhs, float2x2 rhs)
public float2x2 op_Subtraction(float2x2 lhs, float2x2 rhs)
public float2x2 op_Subtraction(float2x2 lhs, float rhs)
public float2x2 op_Subtraction(float lhs, float2x2 rhs)
public float2x2 op_Division(float2x2 lhs, float2x2 rhs)
public float2x2 op_Division(float2x2 lhs, float rhs)
public float2x2 op_Division(float lhs, float2x2 rhs)
public float2x2 op_Modulus(float2x2 lhs, float2x2 rhs)
public float2x2 op_Modulus(float2x2 lhs, float rhs)
public float2x2 op_Modulus(float lhs, float2x2 rhs)
public float2x2 op_Increment(float2x2 val)
public float2x2 op_Decrement(float2x2 val)
public bool2x2 op_LessThan(float2x2 lhs, float2x2 rhs)
public bool2x2 op_LessThan(float2x2 lhs, float rhs)
public bool2x2 op_LessThan(float lhs, float2x2 rhs)
public bool2x2 op_LessThanOrEqual(float2x2 lhs, float2x2 rhs)
public bool2x2 op_LessThanOrEqual(float2x2 lhs, float rhs)
public bool2x2 op_LessThanOrEqual(float lhs, float2x2 rhs)
public bool2x2 op_GreaterThan(float2x2 lhs, float2x2 rhs)
public bool2x2 op_GreaterThan(float2x2 lhs, float rhs)
public bool2x2 op_GreaterThan(float lhs, float2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(float2x2 lhs, float2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(float2x2 lhs, float rhs)
public bool2x2 op_GreaterThanOrEqual(float lhs, float2x2 rhs)
public float2x2 op_UnaryNegation(float2x2 val)
public float2x2 op_UnaryPlus(float2x2 val)
public bool2x2 op_Equality(float2x2 lhs, float2x2 rhs)
public bool2x2 op_Equality(float2x2 lhs, float rhs)
public bool2x2 op_Equality(float lhs, float2x2 rhs)
public bool2x2 op_Inequality(float2x2 lhs, float2x2 rhs)
public bool2x2 op_Inequality(float2x2 lhs, float rhs)
public bool2x2 op_Inequality(float lhs, float2x2 rhs)
public float2& get_Item(int index)
public bool Equals(float2x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
public float2x2 Rotate(float angle)
public float2x2 Scale(float s)
public float2x2 Scale(float x, float y)
public float2x2 Scale(float2 v)
}
public Unity.Mathematics.float2x3 : ValueType {
public float2 c0
public float2 c1
public float2 c2
public float2x3 zero
public float2& Item
public void .ctor(float2 c0, float2 c1, float2 c2)
public void .ctor(float m00, float m01, float m02, float m10, float m11, float m12)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool2x3 v)
public void .ctor(int v)
public void .ctor(int2x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x3 v)
public void .ctor(double v)
public void .ctor(double2x3 v)
public float2x3 op_Implicit(float v)
public float2x3 op_Explicit(bool v)
public float2x3 op_Explicit(bool2x3 v)
public float2x3 op_Implicit(int v)
public float2x3 op_Implicit(int2x3 v)
public float2x3 op_Implicit(UInt32 v)
public float2x3 op_Implicit(uint2x3 v)
public float2x3 op_Explicit(double v)
public float2x3 op_Explicit(double2x3 v)
public float2x3 op_Multiply(float2x3 lhs, float2x3 rhs)
public float2x3 op_Multiply(float2x3 lhs, float rhs)
public float2x3 op_Multiply(float lhs, float2x3 rhs)
public float2x3 op_Addition(float2x3 lhs, float2x3 rhs)
public float2x3 op_Addition(float2x3 lhs, float rhs)
public float2x3 op_Addition(float lhs, float2x3 rhs)
public float2x3 op_Subtraction(float2x3 lhs, float2x3 rhs)
public float2x3 op_Subtraction(float2x3 lhs, float rhs)
public float2x3 op_Subtraction(float lhs, float2x3 rhs)
public float2x3 op_Division(float2x3 lhs, float2x3 rhs)
public float2x3 op_Division(float2x3 lhs, float rhs)
public float2x3 op_Division(float lhs, float2x3 rhs)
public float2x3 op_Modulus(float2x3 lhs, float2x3 rhs)
public float2x3 op_Modulus(float2x3 lhs, float rhs)
public float2x3 op_Modulus(float lhs, float2x3 rhs)
public float2x3 op_Increment(float2x3 val)
public float2x3 op_Decrement(float2x3 val)
public bool2x3 op_LessThan(float2x3 lhs, float2x3 rhs)
public bool2x3 op_LessThan(float2x3 lhs, float rhs)
public bool2x3 op_LessThan(float lhs, float2x3 rhs)
public bool2x3 op_LessThanOrEqual(float2x3 lhs, float2x3 rhs)
public bool2x3 op_LessThanOrEqual(float2x3 lhs, float rhs)
public bool2x3 op_LessThanOrEqual(float lhs, float2x3 rhs)
public bool2x3 op_GreaterThan(float2x3 lhs, float2x3 rhs)
public bool2x3 op_GreaterThan(float2x3 lhs, float rhs)
public bool2x3 op_GreaterThan(float lhs, float2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(float2x3 lhs, float2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(float2x3 lhs, float rhs)
public bool2x3 op_GreaterThanOrEqual(float lhs, float2x3 rhs)
public float2x3 op_UnaryNegation(float2x3 val)
public float2x3 op_UnaryPlus(float2x3 val)
public bool2x3 op_Equality(float2x3 lhs, float2x3 rhs)
public bool2x3 op_Equality(float2x3 lhs, float rhs)
public bool2x3 op_Equality(float lhs, float2x3 rhs)
public bool2x3 op_Inequality(float2x3 lhs, float2x3 rhs)
public bool2x3 op_Inequality(float2x3 lhs, float rhs)
public bool2x3 op_Inequality(float lhs, float2x3 rhs)
public float2& get_Item(int index)
public bool Equals(float2x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float2x4 : ValueType {
public float2 c0
public float2 c1
public float2 c2
public float2 c3
public float2x4 zero
public float2& Item
public void .ctor(float2 c0, float2 c1, float2 c2, float2 c3)
public void .ctor(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool2x4 v)
public void .ctor(int v)
public void .ctor(int2x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x4 v)
public void .ctor(double v)
public void .ctor(double2x4 v)
public float2x4 op_Implicit(float v)
public float2x4 op_Explicit(bool v)
public float2x4 op_Explicit(bool2x4 v)
public float2x4 op_Implicit(int v)
public float2x4 op_Implicit(int2x4 v)
public float2x4 op_Implicit(UInt32 v)
public float2x4 op_Implicit(uint2x4 v)
public float2x4 op_Explicit(double v)
public float2x4 op_Explicit(double2x4 v)
public float2x4 op_Multiply(float2x4 lhs, float2x4 rhs)
public float2x4 op_Multiply(float2x4 lhs, float rhs)
public float2x4 op_Multiply(float lhs, float2x4 rhs)
public float2x4 op_Addition(float2x4 lhs, float2x4 rhs)
public float2x4 op_Addition(float2x4 lhs, float rhs)
public float2x4 op_Addition(float lhs, float2x4 rhs)
public float2x4 op_Subtraction(float2x4 lhs, float2x4 rhs)
public float2x4 op_Subtraction(float2x4 lhs, float rhs)
public float2x4 op_Subtraction(float lhs, float2x4 rhs)
public float2x4 op_Division(float2x4 lhs, float2x4 rhs)
public float2x4 op_Division(float2x4 lhs, float rhs)
public float2x4 op_Division(float lhs, float2x4 rhs)
public float2x4 op_Modulus(float2x4 lhs, float2x4 rhs)
public float2x4 op_Modulus(float2x4 lhs, float rhs)
public float2x4 op_Modulus(float lhs, float2x4 rhs)
public float2x4 op_Increment(float2x4 val)
public float2x4 op_Decrement(float2x4 val)
public bool2x4 op_LessThan(float2x4 lhs, float2x4 rhs)
public bool2x4 op_LessThan(float2x4 lhs, float rhs)
public bool2x4 op_LessThan(float lhs, float2x4 rhs)
public bool2x4 op_LessThanOrEqual(float2x4 lhs, float2x4 rhs)
public bool2x4 op_LessThanOrEqual(float2x4 lhs, float rhs)
public bool2x4 op_LessThanOrEqual(float lhs, float2x4 rhs)
public bool2x4 op_GreaterThan(float2x4 lhs, float2x4 rhs)
public bool2x4 op_GreaterThan(float2x4 lhs, float rhs)
public bool2x4 op_GreaterThan(float lhs, float2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(float2x4 lhs, float2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(float2x4 lhs, float rhs)
public bool2x4 op_GreaterThanOrEqual(float lhs, float2x4 rhs)
public float2x4 op_UnaryNegation(float2x4 val)
public float2x4 op_UnaryPlus(float2x4 val)
public bool2x4 op_Equality(float2x4 lhs, float2x4 rhs)
public bool2x4 op_Equality(float2x4 lhs, float rhs)
public bool2x4 op_Equality(float lhs, float2x4 rhs)
public bool2x4 op_Inequality(float2x4 lhs, float2x4 rhs)
public bool2x4 op_Inequality(float2x4 lhs, float rhs)
public bool2x4 op_Inequality(float lhs, float2x4 rhs)
public float2& get_Item(int index)
public bool Equals(float2x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float3 : ValueType {
public float x
public float y
public float z
public float3 zero
public float4 xxxx
public float4 xxxy
public float4 xxxz
public float4 xxyx
public float4 xxyy
public float4 xxyz
public float4 xxzx
public float4 xxzy
public float4 xxzz
public float4 xyxx
public float4 xyxy
public float4 xyxz
public float4 xyyx
public float4 xyyy
public float4 xyyz
public float4 xyzx
public float4 xyzy
public float4 xyzz
public float4 xzxx
public float4 xzxy
public float4 xzxz
public float4 xzyx
public float4 xzyy
public float4 xzyz
public float4 xzzx
public float4 xzzy
public float4 xzzz
public float4 yxxx
public float4 yxxy
public float4 yxxz
public float4 yxyx
public float4 yxyy
public float4 yxyz
public float4 yxzx
public float4 yxzy
public float4 yxzz
public float4 yyxx
public float4 yyxy
public float4 yyxz
public float4 yyyx
public float4 yyyy
public float4 yyyz
public float4 yyzx
public float4 yyzy
public float4 yyzz
public float4 yzxx
public float4 yzxy
public float4 yzxz
public float4 yzyx
public float4 yzyy
public float4 yzyz
public float4 yzzx
public float4 yzzy
public float4 yzzz
public float4 zxxx
public float4 zxxy
public float4 zxxz
public float4 zxyx
public float4 zxyy
public float4 zxyz
public float4 zxzx
public float4 zxzy
public float4 zxzz
public float4 zyxx
public float4 zyxy
public float4 zyxz
public float4 zyyx
public float4 zyyy
public float4 zyyz
public float4 zyzx
public float4 zyzy
public float4 zyzz
public float4 zzxx
public float4 zzxy
public float4 zzxz
public float4 zzyx
public float4 zzyy
public float4 zzyz
public float4 zzzx
public float4 zzzy
public float4 zzzz
public float3 xxx
public float3 xxy
public float3 xxz
public float3 xyx
public float3 xyy
public float3 xyz
public float3 xzx
public float3 xzy
public float3 xzz
public float3 yxx
public float3 yxy
public float3 yxz
public float3 yyx
public float3 yyy
public float3 yyz
public float3 yzx
public float3 yzy
public float3 yzz
public float3 zxx
public float3 zxy
public float3 zxz
public float3 zyx
public float3 zyy
public float3 zyz
public float3 zzx
public float3 zzy
public float3 zzz
public float2 xx
public float2 xy
public float2 xz
public float2 yx
public float2 yy
public float2 yz
public float2 zx
public float2 zy
public float2 zz
public float Item
public void .ctor(float x, float y, float z)
public void .ctor(float x, float2 yz)
public void .ctor(float2 xy, float z)
public void .ctor(float3 xyz)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool3 v)
public void .ctor(int v)
public void .ctor(int3 v)
public void .ctor(UInt32 v)
public void .ctor(uint3 v)
public void .ctor(half v)
public void .ctor(half3 v)
public void .ctor(double v)
public void .ctor(double3 v)
public float3 op_Implicit(float v)
public float3 op_Explicit(bool v)
public float3 op_Explicit(bool3 v)
public float3 op_Implicit(int v)
public float3 op_Implicit(int3 v)
public float3 op_Implicit(UInt32 v)
public float3 op_Implicit(uint3 v)
public float3 op_Implicit(half v)
public float3 op_Implicit(half3 v)
public float3 op_Explicit(double v)
public float3 op_Explicit(double3 v)
public float3 op_Multiply(float3 lhs, float3 rhs)
public float3 op_Multiply(float3 lhs, float rhs)
public float3 op_Multiply(float lhs, float3 rhs)
public float3 op_Addition(float3 lhs, float3 rhs)
public float3 op_Addition(float3 lhs, float rhs)
public float3 op_Addition(float lhs, float3 rhs)
public float3 op_Subtraction(float3 lhs, float3 rhs)
public float3 op_Subtraction(float3 lhs, float rhs)
public float3 op_Subtraction(float lhs, float3 rhs)
public float3 op_Division(float3 lhs, float3 rhs)
public float3 op_Division(float3 lhs, float rhs)
public float3 op_Division(float lhs, float3 rhs)
public float3 op_Modulus(float3 lhs, float3 rhs)
public float3 op_Modulus(float3 lhs, float rhs)
public float3 op_Modulus(float lhs, float3 rhs)
public float3 op_Increment(float3 val)
public float3 op_Decrement(float3 val)
public bool3 op_LessThan(float3 lhs, float3 rhs)
public bool3 op_LessThan(float3 lhs, float rhs)
public bool3 op_LessThan(float lhs, float3 rhs)
public bool3 op_LessThanOrEqual(float3 lhs, float3 rhs)
public bool3 op_LessThanOrEqual(float3 lhs, float rhs)
public bool3 op_LessThanOrEqual(float lhs, float3 rhs)
public bool3 op_GreaterThan(float3 lhs, float3 rhs)
public bool3 op_GreaterThan(float3 lhs, float rhs)
public bool3 op_GreaterThan(float lhs, float3 rhs)
public bool3 op_GreaterThanOrEqual(float3 lhs, float3 rhs)
public bool3 op_GreaterThanOrEqual(float3 lhs, float rhs)
public bool3 op_GreaterThanOrEqual(float lhs, float3 rhs)
public float3 op_UnaryNegation(float3 val)
public float3 op_UnaryPlus(float3 val)
public bool3 op_Equality(float3 lhs, float3 rhs)
public bool3 op_Equality(float3 lhs, float rhs)
public bool3 op_Equality(float lhs, float3 rhs)
public bool3 op_Inequality(float3 lhs, float3 rhs)
public bool3 op_Inequality(float3 lhs, float rhs)
public bool3 op_Inequality(float lhs, float3 rhs)
public float4 get_xxxx()
public float4 get_xxxy()
public float4 get_xxxz()
public float4 get_xxyx()
public float4 get_xxyy()
public float4 get_xxyz()
public float4 get_xxzx()
public float4 get_xxzy()
public float4 get_xxzz()
public float4 get_xyxx()
public float4 get_xyxy()
public float4 get_xyxz()
public float4 get_xyyx()
public float4 get_xyyy()
public float4 get_xyyz()
public float4 get_xyzx()
public float4 get_xyzy()
public float4 get_xyzz()
public float4 get_xzxx()
public float4 get_xzxy()
public float4 get_xzxz()
public float4 get_xzyx()
public float4 get_xzyy()
public float4 get_xzyz()
public float4 get_xzzx()
public float4 get_xzzy()
public float4 get_xzzz()
public float4 get_yxxx()
public float4 get_yxxy()
public float4 get_yxxz()
public float4 get_yxyx()
public float4 get_yxyy()
public float4 get_yxyz()
public float4 get_yxzx()
public float4 get_yxzy()
public float4 get_yxzz()
public float4 get_yyxx()
public float4 get_yyxy()
public float4 get_yyxz()
public float4 get_yyyx()
public float4 get_yyyy()
public float4 get_yyyz()
public float4 get_yyzx()
public float4 get_yyzy()
public float4 get_yyzz()
public float4 get_yzxx()
public float4 get_yzxy()
public float4 get_yzxz()
public float4 get_yzyx()
public float4 get_yzyy()
public float4 get_yzyz()
public float4 get_yzzx()
public float4 get_yzzy()
public float4 get_yzzz()
public float4 get_zxxx()
public float4 get_zxxy()
public float4 get_zxxz()
public float4 get_zxyx()
public float4 get_zxyy()
public float4 get_zxyz()
public float4 get_zxzx()
public float4 get_zxzy()
public float4 get_zxzz()
public float4 get_zyxx()
public float4 get_zyxy()
public float4 get_zyxz()
public float4 get_zyyx()
public float4 get_zyyy()
public float4 get_zyyz()
public float4 get_zyzx()
public float4 get_zyzy()
public float4 get_zyzz()
public float4 get_zzxx()
public float4 get_zzxy()
public float4 get_zzxz()
public float4 get_zzyx()
public float4 get_zzyy()
public float4 get_zzyz()
public float4 get_zzzx()
public float4 get_zzzy()
public float4 get_zzzz()
public float3 get_xxx()
public float3 get_xxy()
public float3 get_xxz()
public float3 get_xyx()
public float3 get_xyy()
public float3 get_xyz()
public void set_xyz(float3 value)
public float3 get_xzx()
public float3 get_xzy()
public void set_xzy(float3 value)
public float3 get_xzz()
public float3 get_yxx()
public float3 get_yxy()
public float3 get_yxz()
public void set_yxz(float3 value)
public float3 get_yyx()
public float3 get_yyy()
public float3 get_yyz()
public float3 get_yzx()
public void set_yzx(float3 value)
public float3 get_yzy()
public float3 get_yzz()
public float3 get_zxx()
public float3 get_zxy()
public void set_zxy(float3 value)
public float3 get_zxz()
public float3 get_zyx()
public void set_zyx(float3 value)
public float3 get_zyy()
public float3 get_zyz()
public float3 get_zzx()
public float3 get_zzy()
public float3 get_zzz()
public float2 get_xx()
public float2 get_xy()
public void set_xy(float2 value)
public float2 get_xz()
public void set_xz(float2 value)
public float2 get_yx()
public void set_yx(float2 value)
public float2 get_yy()
public float2 get_yz()
public void set_yz(float2 value)
public float2 get_zx()
public void set_zx(float2 value)
public float2 get_zy()
public void set_zy(float2 value)
public float2 get_zz()
public float get_Item(int index)
public void set_Item(int index, float value)
public bool Equals(float3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
public Vector3 op_Implicit(float3 v)
public float3 op_Implicit(Vector3 v)
}
public Unity.Mathematics.float3x2 : ValueType {
public float3 c0
public float3 c1
public float3x2 zero
public float3& Item
public void .ctor(float3 c0, float3 c1)
public void .ctor(float m00, float m01, float m10, float m11, float m20, float m21)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool3x2 v)
public void .ctor(int v)
public void .ctor(int3x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x2 v)
public void .ctor(double v)
public void .ctor(double3x2 v)
public float3x2 op_Implicit(float v)
public float3x2 op_Explicit(bool v)
public float3x2 op_Explicit(bool3x2 v)
public float3x2 op_Implicit(int v)
public float3x2 op_Implicit(int3x2 v)
public float3x2 op_Implicit(UInt32 v)
public float3x2 op_Implicit(uint3x2 v)
public float3x2 op_Explicit(double v)
public float3x2 op_Explicit(double3x2 v)
public float3x2 op_Multiply(float3x2 lhs, float3x2 rhs)
public float3x2 op_Multiply(float3x2 lhs, float rhs)
public float3x2 op_Multiply(float lhs, float3x2 rhs)
public float3x2 op_Addition(float3x2 lhs, float3x2 rhs)
public float3x2 op_Addition(float3x2 lhs, float rhs)
public float3x2 op_Addition(float lhs, float3x2 rhs)
public float3x2 op_Subtraction(float3x2 lhs, float3x2 rhs)
public float3x2 op_Subtraction(float3x2 lhs, float rhs)
public float3x2 op_Subtraction(float lhs, float3x2 rhs)
public float3x2 op_Division(float3x2 lhs, float3x2 rhs)
public float3x2 op_Division(float3x2 lhs, float rhs)
public float3x2 op_Division(float lhs, float3x2 rhs)
public float3x2 op_Modulus(float3x2 lhs, float3x2 rhs)
public float3x2 op_Modulus(float3x2 lhs, float rhs)
public float3x2 op_Modulus(float lhs, float3x2 rhs)
public float3x2 op_Increment(float3x2 val)
public float3x2 op_Decrement(float3x2 val)
public bool3x2 op_LessThan(float3x2 lhs, float3x2 rhs)
public bool3x2 op_LessThan(float3x2 lhs, float rhs)
public bool3x2 op_LessThan(float lhs, float3x2 rhs)
public bool3x2 op_LessThanOrEqual(float3x2 lhs, float3x2 rhs)
public bool3x2 op_LessThanOrEqual(float3x2 lhs, float rhs)
public bool3x2 op_LessThanOrEqual(float lhs, float3x2 rhs)
public bool3x2 op_GreaterThan(float3x2 lhs, float3x2 rhs)
public bool3x2 op_GreaterThan(float3x2 lhs, float rhs)
public bool3x2 op_GreaterThan(float lhs, float3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(float3x2 lhs, float3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(float3x2 lhs, float rhs)
public bool3x2 op_GreaterThanOrEqual(float lhs, float3x2 rhs)
public float3x2 op_UnaryNegation(float3x2 val)
public float3x2 op_UnaryPlus(float3x2 val)
public bool3x2 op_Equality(float3x2 lhs, float3x2 rhs)
public bool3x2 op_Equality(float3x2 lhs, float rhs)
public bool3x2 op_Equality(float lhs, float3x2 rhs)
public bool3x2 op_Inequality(float3x2 lhs, float3x2 rhs)
public bool3x2 op_Inequality(float3x2 lhs, float rhs)
public bool3x2 op_Inequality(float lhs, float3x2 rhs)
public float3& get_Item(int index)
public bool Equals(float3x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float3x3 : ValueType {
public float3 c0
public float3 c1
public float3 c2
public float3x3 identity
public float3x3 zero
public float3& Item
public void .ctor(float3 c0, float3 c1, float3 c2)
public void .ctor(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool3x3 v)
public void .ctor(int v)
public void .ctor(int3x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x3 v)
public void .ctor(double v)
public void .ctor(double3x3 v)
public float3x3 op_Implicit(float v)
public float3x3 op_Explicit(bool v)
public float3x3 op_Explicit(bool3x3 v)
public float3x3 op_Implicit(int v)
public float3x3 op_Implicit(int3x3 v)
public float3x3 op_Implicit(UInt32 v)
public float3x3 op_Implicit(uint3x3 v)
public float3x3 op_Explicit(double v)
public float3x3 op_Explicit(double3x3 v)
public float3x3 op_Multiply(float3x3 lhs, float3x3 rhs)
public float3x3 op_Multiply(float3x3 lhs, float rhs)
public float3x3 op_Multiply(float lhs, float3x3 rhs)
public float3x3 op_Addition(float3x3 lhs, float3x3 rhs)
public float3x3 op_Addition(float3x3 lhs, float rhs)
public float3x3 op_Addition(float lhs, float3x3 rhs)
public float3x3 op_Subtraction(float3x3 lhs, float3x3 rhs)
public float3x3 op_Subtraction(float3x3 lhs, float rhs)
public float3x3 op_Subtraction(float lhs, float3x3 rhs)
public float3x3 op_Division(float3x3 lhs, float3x3 rhs)
public float3x3 op_Division(float3x3 lhs, float rhs)
public float3x3 op_Division(float lhs, float3x3 rhs)
public float3x3 op_Modulus(float3x3 lhs, float3x3 rhs)
public float3x3 op_Modulus(float3x3 lhs, float rhs)
public float3x3 op_Modulus(float lhs, float3x3 rhs)
public float3x3 op_Increment(float3x3 val)
public float3x3 op_Decrement(float3x3 val)
public bool3x3 op_LessThan(float3x3 lhs, float3x3 rhs)
public bool3x3 op_LessThan(float3x3 lhs, float rhs)
public bool3x3 op_LessThan(float lhs, float3x3 rhs)
public bool3x3 op_LessThanOrEqual(float3x3 lhs, float3x3 rhs)
public bool3x3 op_LessThanOrEqual(float3x3 lhs, float rhs)
public bool3x3 op_LessThanOrEqual(float lhs, float3x3 rhs)
public bool3x3 op_GreaterThan(float3x3 lhs, float3x3 rhs)
public bool3x3 op_GreaterThan(float3x3 lhs, float rhs)
public bool3x3 op_GreaterThan(float lhs, float3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(float3x3 lhs, float3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(float3x3 lhs, float rhs)
public bool3x3 op_GreaterThanOrEqual(float lhs, float3x3 rhs)
public float3x3 op_UnaryNegation(float3x3 val)
public float3x3 op_UnaryPlus(float3x3 val)
public bool3x3 op_Equality(float3x3 lhs, float3x3 rhs)
public bool3x3 op_Equality(float3x3 lhs, float rhs)
public bool3x3 op_Equality(float lhs, float3x3 rhs)
public bool3x3 op_Inequality(float3x3 lhs, float3x3 rhs)
public bool3x3 op_Inequality(float3x3 lhs, float rhs)
public bool3x3 op_Inequality(float lhs, float3x3 rhs)
public float3& get_Item(int index)
public bool Equals(float3x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
public void .ctor(float4x4 f4x4)
public void .ctor(quaternion q)
public float3x3 AxisAngle(float3 axis, float angle)
public float3x3 EulerXYZ(float3 xyz)
public float3x3 EulerXZY(float3 xyz)
public float3x3 EulerYXZ(float3 xyz)
public float3x3 EulerYZX(float3 xyz)
public float3x3 EulerZXY(float3 xyz)
public float3x3 EulerZYX(float3 xyz)
public float3x3 EulerXYZ(float x, float y, float z)
public float3x3 EulerXZY(float x, float y, float z)
public float3x3 EulerYXZ(float x, float y, float z)
public float3x3 EulerYZX(float x, float y, float z)
public float3x3 EulerZXY(float x, float y, float z)
public float3x3 EulerZYX(float x, float y, float z)
public float3x3 Euler(float3 xyz, RotationOrder order)
public float3x3 Euler(float x, float y, float z, RotationOrder order)
public float3x3 RotateX(float angle)
public float3x3 RotateY(float angle)
public float3x3 RotateZ(float angle)
public float3x3 Scale(float s)
public float3x3 Scale(float x, float y, float z)
public float3x3 Scale(float3 v)
public float3x3 LookRotation(float3 forward, float3 up)
public float3x3 LookRotationSafe(float3 forward, float3 up)
public float3x3 op_Explicit(float4x4 f4x4)
}
public Unity.Mathematics.float3x4 : ValueType {
public float3 c0
public float3 c1
public float3 c2
public float3 c3
public float3x4 zero
public float3& Item
public void .ctor(float3 c0, float3 c1, float3 c2, float3 c3)
public void .ctor(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool3x4 v)
public void .ctor(int v)
public void .ctor(int3x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x4 v)
public void .ctor(double v)
public void .ctor(double3x4 v)
public float3x4 op_Implicit(float v)
public float3x4 op_Explicit(bool v)
public float3x4 op_Explicit(bool3x4 v)
public float3x4 op_Implicit(int v)
public float3x4 op_Implicit(int3x4 v)
public float3x4 op_Implicit(UInt32 v)
public float3x4 op_Implicit(uint3x4 v)
public float3x4 op_Explicit(double v)
public float3x4 op_Explicit(double3x4 v)
public float3x4 op_Multiply(float3x4 lhs, float3x4 rhs)
public float3x4 op_Multiply(float3x4 lhs, float rhs)
public float3x4 op_Multiply(float lhs, float3x4 rhs)
public float3x4 op_Addition(float3x4 lhs, float3x4 rhs)
public float3x4 op_Addition(float3x4 lhs, float rhs)
public float3x4 op_Addition(float lhs, float3x4 rhs)
public float3x4 op_Subtraction(float3x4 lhs, float3x4 rhs)
public float3x4 op_Subtraction(float3x4 lhs, float rhs)
public float3x4 op_Subtraction(float lhs, float3x4 rhs)
public float3x4 op_Division(float3x4 lhs, float3x4 rhs)
public float3x4 op_Division(float3x4 lhs, float rhs)
public float3x4 op_Division(float lhs, float3x4 rhs)
public float3x4 op_Modulus(float3x4 lhs, float3x4 rhs)
public float3x4 op_Modulus(float3x4 lhs, float rhs)
public float3x4 op_Modulus(float lhs, float3x4 rhs)
public float3x4 op_Increment(float3x4 val)
public float3x4 op_Decrement(float3x4 val)
public bool3x4 op_LessThan(float3x4 lhs, float3x4 rhs)
public bool3x4 op_LessThan(float3x4 lhs, float rhs)
public bool3x4 op_LessThan(float lhs, float3x4 rhs)
public bool3x4 op_LessThanOrEqual(float3x4 lhs, float3x4 rhs)
public bool3x4 op_LessThanOrEqual(float3x4 lhs, float rhs)
public bool3x4 op_LessThanOrEqual(float lhs, float3x4 rhs)
public bool3x4 op_GreaterThan(float3x4 lhs, float3x4 rhs)
public bool3x4 op_GreaterThan(float3x4 lhs, float rhs)
public bool3x4 op_GreaterThan(float lhs, float3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(float3x4 lhs, float3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(float3x4 lhs, float rhs)
public bool3x4 op_GreaterThanOrEqual(float lhs, float3x4 rhs)
public float3x4 op_UnaryNegation(float3x4 val)
public float3x4 op_UnaryPlus(float3x4 val)
public bool3x4 op_Equality(float3x4 lhs, float3x4 rhs)
public bool3x4 op_Equality(float3x4 lhs, float rhs)
public bool3x4 op_Equality(float lhs, float3x4 rhs)
public bool3x4 op_Inequality(float3x4 lhs, float3x4 rhs)
public bool3x4 op_Inequality(float3x4 lhs, float rhs)
public bool3x4 op_Inequality(float lhs, float3x4 rhs)
public float3& get_Item(int index)
public bool Equals(float3x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float4 : ValueType {
public float x
public float y
public float z
public float w
public float4 zero
public float4 xxxx
public float4 xxxy
public float4 xxxz
public float4 xxxw
public float4 xxyx
public float4 xxyy
public float4 xxyz
public float4 xxyw
public float4 xxzx
public float4 xxzy
public float4 xxzz
public float4 xxzw
public float4 xxwx
public float4 xxwy
public float4 xxwz
public float4 xxww
public float4 xyxx
public float4 xyxy
public float4 xyxz
public float4 xyxw
public float4 xyyx
public float4 xyyy
public float4 xyyz
public float4 xyyw
public float4 xyzx
public float4 xyzy
public float4 xyzz
public float4 xyzw
public float4 xywx
public float4 xywy
public float4 xywz
public float4 xyww
public float4 xzxx
public float4 xzxy
public float4 xzxz
public float4 xzxw
public float4 xzyx
public float4 xzyy
public float4 xzyz
public float4 xzyw
public float4 xzzx
public float4 xzzy
public float4 xzzz
public float4 xzzw
public float4 xzwx
public float4 xzwy
public float4 xzwz
public float4 xzww
public float4 xwxx
public float4 xwxy
public float4 xwxz
public float4 xwxw
public float4 xwyx
public float4 xwyy
public float4 xwyz
public float4 xwyw
public float4 xwzx
public float4 xwzy
public float4 xwzz
public float4 xwzw
public float4 xwwx
public float4 xwwy
public float4 xwwz
public float4 xwww
public float4 yxxx
public float4 yxxy
public float4 yxxz
public float4 yxxw
public float4 yxyx
public float4 yxyy
public float4 yxyz
public float4 yxyw
public float4 yxzx
public float4 yxzy
public float4 yxzz
public float4 yxzw
public float4 yxwx
public float4 yxwy
public float4 yxwz
public float4 yxww
public float4 yyxx
public float4 yyxy
public float4 yyxz
public float4 yyxw
public float4 yyyx
public float4 yyyy
public float4 yyyz
public float4 yyyw
public float4 yyzx
public float4 yyzy
public float4 yyzz
public float4 yyzw
public float4 yywx
public float4 yywy
public float4 yywz
public float4 yyww
public float4 yzxx
public float4 yzxy
public float4 yzxz
public float4 yzxw
public float4 yzyx
public float4 yzyy
public float4 yzyz
public float4 yzyw
public float4 yzzx
public float4 yzzy
public float4 yzzz
public float4 yzzw
public float4 yzwx
public float4 yzwy
public float4 yzwz
public float4 yzww
public float4 ywxx
public float4 ywxy
public float4 ywxz
public float4 ywxw
public float4 ywyx
public float4 ywyy
public float4 ywyz
public float4 ywyw
public float4 ywzx
public float4 ywzy
public float4 ywzz
public float4 ywzw
public float4 ywwx
public float4 ywwy
public float4 ywwz
public float4 ywww
public float4 zxxx
public float4 zxxy
public float4 zxxz
public float4 zxxw
public float4 zxyx
public float4 zxyy
public float4 zxyz
public float4 zxyw
public float4 zxzx
public float4 zxzy
public float4 zxzz
public float4 zxzw
public float4 zxwx
public float4 zxwy
public float4 zxwz
public float4 zxww
public float4 zyxx
public float4 zyxy
public float4 zyxz
public float4 zyxw
public float4 zyyx
public float4 zyyy
public float4 zyyz
public float4 zyyw
public float4 zyzx
public float4 zyzy
public float4 zyzz
public float4 zyzw
public float4 zywx
public float4 zywy
public float4 zywz
public float4 zyww
public float4 zzxx
public float4 zzxy
public float4 zzxz
public float4 zzxw
public float4 zzyx
public float4 zzyy
public float4 zzyz
public float4 zzyw
public float4 zzzx
public float4 zzzy
public float4 zzzz
public float4 zzzw
public float4 zzwx
public float4 zzwy
public float4 zzwz
public float4 zzww
public float4 zwxx
public float4 zwxy
public float4 zwxz
public float4 zwxw
public float4 zwyx
public float4 zwyy
public float4 zwyz
public float4 zwyw
public float4 zwzx
public float4 zwzy
public float4 zwzz
public float4 zwzw
public float4 zwwx
public float4 zwwy
public float4 zwwz
public float4 zwww
public float4 wxxx
public float4 wxxy
public float4 wxxz
public float4 wxxw
public float4 wxyx
public float4 wxyy
public float4 wxyz
public float4 wxyw
public float4 wxzx
public float4 wxzy
public float4 wxzz
public float4 wxzw
public float4 wxwx
public float4 wxwy
public float4 wxwz
public float4 wxww
public float4 wyxx
public float4 wyxy
public float4 wyxz
public float4 wyxw
public float4 wyyx
public float4 wyyy
public float4 wyyz
public float4 wyyw
public float4 wyzx
public float4 wyzy
public float4 wyzz
public float4 wyzw
public float4 wywx
public float4 wywy
public float4 wywz
public float4 wyww
public float4 wzxx
public float4 wzxy
public float4 wzxz
public float4 wzxw
public float4 wzyx
public float4 wzyy
public float4 wzyz
public float4 wzyw
public float4 wzzx
public float4 wzzy
public float4 wzzz
public float4 wzzw
public float4 wzwx
public float4 wzwy
public float4 wzwz
public float4 wzww
public float4 wwxx
public float4 wwxy
public float4 wwxz
public float4 wwxw
public float4 wwyx
public float4 wwyy
public float4 wwyz
public float4 wwyw
public float4 wwzx
public float4 wwzy
public float4 wwzz
public float4 wwzw
public float4 wwwx
public float4 wwwy
public float4 wwwz
public float4 wwww
public float3 xxx
public float3 xxy
public float3 xxz
public float3 xxw
public float3 xyx
public float3 xyy
public float3 xyz
public float3 xyw
public float3 xzx
public float3 xzy
public float3 xzz
public float3 xzw
public float3 xwx
public float3 xwy
public float3 xwz
public float3 xww
public float3 yxx
public float3 yxy
public float3 yxz
public float3 yxw
public float3 yyx
public float3 yyy
public float3 yyz
public float3 yyw
public float3 yzx
public float3 yzy
public float3 yzz
public float3 yzw
public float3 ywx
public float3 ywy
public float3 ywz
public float3 yww
public float3 zxx
public float3 zxy
public float3 zxz
public float3 zxw
public float3 zyx
public float3 zyy
public float3 zyz
public float3 zyw
public float3 zzx
public float3 zzy
public float3 zzz
public float3 zzw
public float3 zwx
public float3 zwy
public float3 zwz
public float3 zww
public float3 wxx
public float3 wxy
public float3 wxz
public float3 wxw
public float3 wyx
public float3 wyy
public float3 wyz
public float3 wyw
public float3 wzx
public float3 wzy
public float3 wzz
public float3 wzw
public float3 wwx
public float3 wwy
public float3 wwz
public float3 www
public float2 xx
public float2 xy
public float2 xz
public float2 xw
public float2 yx
public float2 yy
public float2 yz
public float2 yw
public float2 zx
public float2 zy
public float2 zz
public float2 zw
public float2 wx
public float2 wy
public float2 wz
public float2 ww
public float Item
public void .ctor(float x, float y, float z, float w)
public void .ctor(float x, float y, float2 zw)
public void .ctor(float x, float2 yz, float w)
public void .ctor(float x, float3 yzw)
public void .ctor(float2 xy, float z, float w)
public void .ctor(float2 xy, float2 zw)
public void .ctor(float3 xyz, float w)
public void .ctor(float4 xyzw)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool4 v)
public void .ctor(int v)
public void .ctor(int4 v)
public void .ctor(UInt32 v)
public void .ctor(uint4 v)
public void .ctor(half v)
public void .ctor(half4 v)
public void .ctor(double v)
public void .ctor(double4 v)
public float4 op_Implicit(float v)
public float4 op_Explicit(bool v)
public float4 op_Explicit(bool4 v)
public float4 op_Implicit(int v)
public float4 op_Implicit(int4 v)
public float4 op_Implicit(UInt32 v)
public float4 op_Implicit(uint4 v)
public float4 op_Implicit(half v)
public float4 op_Implicit(half4 v)
public float4 op_Explicit(double v)
public float4 op_Explicit(double4 v)
public float4 op_Multiply(float4 lhs, float4 rhs)
public float4 op_Multiply(float4 lhs, float rhs)
public float4 op_Multiply(float lhs, float4 rhs)
public float4 op_Addition(float4 lhs, float4 rhs)
public float4 op_Addition(float4 lhs, float rhs)
public float4 op_Addition(float lhs, float4 rhs)
public float4 op_Subtraction(float4 lhs, float4 rhs)
public float4 op_Subtraction(float4 lhs, float rhs)
public float4 op_Subtraction(float lhs, float4 rhs)
public float4 op_Division(float4 lhs, float4 rhs)
public float4 op_Division(float4 lhs, float rhs)
public float4 op_Division(float lhs, float4 rhs)
public float4 op_Modulus(float4 lhs, float4 rhs)
public float4 op_Modulus(float4 lhs, float rhs)
public float4 op_Modulus(float lhs, float4 rhs)
public float4 op_Increment(float4 val)
public float4 op_Decrement(float4 val)
public bool4 op_LessThan(float4 lhs, float4 rhs)
public bool4 op_LessThan(float4 lhs, float rhs)
public bool4 op_LessThan(float lhs, float4 rhs)
public bool4 op_LessThanOrEqual(float4 lhs, float4 rhs)
public bool4 op_LessThanOrEqual(float4 lhs, float rhs)
public bool4 op_LessThanOrEqual(float lhs, float4 rhs)
public bool4 op_GreaterThan(float4 lhs, float4 rhs)
public bool4 op_GreaterThan(float4 lhs, float rhs)
public bool4 op_GreaterThan(float lhs, float4 rhs)
public bool4 op_GreaterThanOrEqual(float4 lhs, float4 rhs)
public bool4 op_GreaterThanOrEqual(float4 lhs, float rhs)
public bool4 op_GreaterThanOrEqual(float lhs, float4 rhs)
public float4 op_UnaryNegation(float4 val)
public float4 op_UnaryPlus(float4 val)
public bool4 op_Equality(float4 lhs, float4 rhs)
public bool4 op_Equality(float4 lhs, float rhs)
public bool4 op_Equality(float lhs, float4 rhs)
public bool4 op_Inequality(float4 lhs, float4 rhs)
public bool4 op_Inequality(float4 lhs, float rhs)
public bool4 op_Inequality(float lhs, float4 rhs)
public float4 get_xxxx()
public float4 get_xxxy()
public float4 get_xxxz()
public float4 get_xxxw()
public float4 get_xxyx()
public float4 get_xxyy()
public float4 get_xxyz()
public float4 get_xxyw()
public float4 get_xxzx()
public float4 get_xxzy()
public float4 get_xxzz()
public float4 get_xxzw()
public float4 get_xxwx()
public float4 get_xxwy()
public float4 get_xxwz()
public float4 get_xxww()
public float4 get_xyxx()
public float4 get_xyxy()
public float4 get_xyxz()
public float4 get_xyxw()
public float4 get_xyyx()
public float4 get_xyyy()
public float4 get_xyyz()
public float4 get_xyyw()
public float4 get_xyzx()
public float4 get_xyzy()
public float4 get_xyzz()
public float4 get_xyzw()
public void set_xyzw(float4 value)
public float4 get_xywx()
public float4 get_xywy()
public float4 get_xywz()
public void set_xywz(float4 value)
public float4 get_xyww()
public float4 get_xzxx()
public float4 get_xzxy()
public float4 get_xzxz()
public float4 get_xzxw()
public float4 get_xzyx()
public float4 get_xzyy()
public float4 get_xzyz()
public float4 get_xzyw()
public void set_xzyw(float4 value)
public float4 get_xzzx()
public float4 get_xzzy()
public float4 get_xzzz()
public float4 get_xzzw()
public float4 get_xzwx()
public float4 get_xzwy()
public void set_xzwy(float4 value)
public float4 get_xzwz()
public float4 get_xzww()
public float4 get_xwxx()
public float4 get_xwxy()
public float4 get_xwxz()
public float4 get_xwxw()
public float4 get_xwyx()
public float4 get_xwyy()
public float4 get_xwyz()
public void set_xwyz(float4 value)
public float4 get_xwyw()
public float4 get_xwzx()
public float4 get_xwzy()
public void set_xwzy(float4 value)
public float4 get_xwzz()
public float4 get_xwzw()
public float4 get_xwwx()
public float4 get_xwwy()
public float4 get_xwwz()
public float4 get_xwww()
public float4 get_yxxx()
public float4 get_yxxy()
public float4 get_yxxz()
public float4 get_yxxw()
public float4 get_yxyx()
public float4 get_yxyy()
public float4 get_yxyz()
public float4 get_yxyw()
public float4 get_yxzx()
public float4 get_yxzy()
public float4 get_yxzz()
public float4 get_yxzw()
public void set_yxzw(float4 value)
public float4 get_yxwx()
public float4 get_yxwy()
public float4 get_yxwz()
public void set_yxwz(float4 value)
public float4 get_yxww()
public float4 get_yyxx()
public float4 get_yyxy()
public float4 get_yyxz()
public float4 get_yyxw()
public float4 get_yyyx()
public float4 get_yyyy()
public float4 get_yyyz()
public float4 get_yyyw()
public float4 get_yyzx()
public float4 get_yyzy()
public float4 get_yyzz()
public float4 get_yyzw()
public float4 get_yywx()
public float4 get_yywy()
public float4 get_yywz()
public float4 get_yyww()
public float4 get_yzxx()
public float4 get_yzxy()
public float4 get_yzxz()
public float4 get_yzxw()
public void set_yzxw(float4 value)
public float4 get_yzyx()
public float4 get_yzyy()
public float4 get_yzyz()
public float4 get_yzyw()
public float4 get_yzzx()
public float4 get_yzzy()
public float4 get_yzzz()
public float4 get_yzzw()
public float4 get_yzwx()
public void set_yzwx(float4 value)
public float4 get_yzwy()
public float4 get_yzwz()
public float4 get_yzww()
public float4 get_ywxx()
public float4 get_ywxy()
public float4 get_ywxz()
public void set_ywxz(float4 value)
public float4 get_ywxw()
public float4 get_ywyx()
public float4 get_ywyy()
public float4 get_ywyz()
public float4 get_ywyw()
public float4 get_ywzx()
public void set_ywzx(float4 value)
public float4 get_ywzy()
public float4 get_ywzz()
public float4 get_ywzw()
public float4 get_ywwx()
public float4 get_ywwy()
public float4 get_ywwz()
public float4 get_ywww()
public float4 get_zxxx()
public float4 get_zxxy()
public float4 get_zxxz()
public float4 get_zxxw()
public float4 get_zxyx()
public float4 get_zxyy()
public float4 get_zxyz()
public float4 get_zxyw()
public void set_zxyw(float4 value)
public float4 get_zxzx()
public float4 get_zxzy()
public float4 get_zxzz()
public float4 get_zxzw()
public float4 get_zxwx()
public float4 get_zxwy()
public void set_zxwy(float4 value)
public float4 get_zxwz()
public float4 get_zxww()
public float4 get_zyxx()
public float4 get_zyxy()
public float4 get_zyxz()
public float4 get_zyxw()
public void set_zyxw(float4 value)
public float4 get_zyyx()
public float4 get_zyyy()
public float4 get_zyyz()
public float4 get_zyyw()
public float4 get_zyzx()
public float4 get_zyzy()
public float4 get_zyzz()
public float4 get_zyzw()
public float4 get_zywx()
public void set_zywx(float4 value)
public float4 get_zywy()
public float4 get_zywz()
public float4 get_zyww()
public float4 get_zzxx()
public float4 get_zzxy()
public float4 get_zzxz()
public float4 get_zzxw()
public float4 get_zzyx()
public float4 get_zzyy()
public float4 get_zzyz()
public float4 get_zzyw()
public float4 get_zzzx()
public float4 get_zzzy()
public float4 get_zzzz()
public float4 get_zzzw()
public float4 get_zzwx()
public float4 get_zzwy()
public float4 get_zzwz()
public float4 get_zzww()
public float4 get_zwxx()
public float4 get_zwxy()
public void set_zwxy(float4 value)
public float4 get_zwxz()
public float4 get_zwxw()
public float4 get_zwyx()
public void set_zwyx(float4 value)
public float4 get_zwyy()
public float4 get_zwyz()
public float4 get_zwyw()
public float4 get_zwzx()
public float4 get_zwzy()
public float4 get_zwzz()
public float4 get_zwzw()
public float4 get_zwwx()
public float4 get_zwwy()
public float4 get_zwwz()
public float4 get_zwww()
public float4 get_wxxx()
public float4 get_wxxy()
public float4 get_wxxz()
public float4 get_wxxw()
public float4 get_wxyx()
public float4 get_wxyy()
public float4 get_wxyz()
public void set_wxyz(float4 value)
public float4 get_wxyw()
public float4 get_wxzx()
public float4 get_wxzy()
public void set_wxzy(float4 value)
public float4 get_wxzz()
public float4 get_wxzw()
public float4 get_wxwx()
public float4 get_wxwy()
public float4 get_wxwz()
public float4 get_wxww()
public float4 get_wyxx()
public float4 get_wyxy()
public float4 get_wyxz()
public void set_wyxz(float4 value)
public float4 get_wyxw()
public float4 get_wyyx()
public float4 get_wyyy()
public float4 get_wyyz()
public float4 get_wyyw()
public float4 get_wyzx()
public void set_wyzx(float4 value)
public float4 get_wyzy()
public float4 get_wyzz()
public float4 get_wyzw()
public float4 get_wywx()
public float4 get_wywy()
public float4 get_wywz()
public float4 get_wyww()
public float4 get_wzxx()
public float4 get_wzxy()
public void set_wzxy(float4 value)
public float4 get_wzxz()
public float4 get_wzxw()
public float4 get_wzyx()
public void set_wzyx(float4 value)
public float4 get_wzyy()
public float4 get_wzyz()
public float4 get_wzyw()
public float4 get_wzzx()
public float4 get_wzzy()
public float4 get_wzzz()
public float4 get_wzzw()
public float4 get_wzwx()
public float4 get_wzwy()
public float4 get_wzwz()
public float4 get_wzww()
public float4 get_wwxx()
public float4 get_wwxy()
public float4 get_wwxz()
public float4 get_wwxw()
public float4 get_wwyx()
public float4 get_wwyy()
public float4 get_wwyz()
public float4 get_wwyw()
public float4 get_wwzx()
public float4 get_wwzy()
public float4 get_wwzz()
public float4 get_wwzw()
public float4 get_wwwx()
public float4 get_wwwy()
public float4 get_wwwz()
public float4 get_wwww()
public float3 get_xxx()
public float3 get_xxy()
public float3 get_xxz()
public float3 get_xxw()
public float3 get_xyx()
public float3 get_xyy()
public float3 get_xyz()
public void set_xyz(float3 value)
public float3 get_xyw()
public void set_xyw(float3 value)
public float3 get_xzx()
public float3 get_xzy()
public void set_xzy(float3 value)
public float3 get_xzz()
public float3 get_xzw()
public void set_xzw(float3 value)
public float3 get_xwx()
public float3 get_xwy()
public void set_xwy(float3 value)
public float3 get_xwz()
public void set_xwz(float3 value)
public float3 get_xww()
public float3 get_yxx()
public float3 get_yxy()
public float3 get_yxz()
public void set_yxz(float3 value)
public float3 get_yxw()
public void set_yxw(float3 value)
public float3 get_yyx()
public float3 get_yyy()
public float3 get_yyz()
public float3 get_yyw()
public float3 get_yzx()
public void set_yzx(float3 value)
public float3 get_yzy()
public float3 get_yzz()
public float3 get_yzw()
public void set_yzw(float3 value)
public float3 get_ywx()
public void set_ywx(float3 value)
public float3 get_ywy()
public float3 get_ywz()
public void set_ywz(float3 value)
public float3 get_yww()
public float3 get_zxx()
public float3 get_zxy()
public void set_zxy(float3 value)
public float3 get_zxz()
public float3 get_zxw()
public void set_zxw(float3 value)
public float3 get_zyx()
public void set_zyx(float3 value)
public float3 get_zyy()
public float3 get_zyz()
public float3 get_zyw()
public void set_zyw(float3 value)
public float3 get_zzx()
public float3 get_zzy()
public float3 get_zzz()
public float3 get_zzw()
public float3 get_zwx()
public void set_zwx(float3 value)
public float3 get_zwy()
public void set_zwy(float3 value)
public float3 get_zwz()
public float3 get_zww()
public float3 get_wxx()
public float3 get_wxy()
public void set_wxy(float3 value)
public float3 get_wxz()
public void set_wxz(float3 value)
public float3 get_wxw()
public float3 get_wyx()
public void set_wyx(float3 value)
public float3 get_wyy()
public float3 get_wyz()
public void set_wyz(float3 value)
public float3 get_wyw()
public float3 get_wzx()
public void set_wzx(float3 value)
public float3 get_wzy()
public void set_wzy(float3 value)
public float3 get_wzz()
public float3 get_wzw()
public float3 get_wwx()
public float3 get_wwy()
public float3 get_wwz()
public float3 get_www()
public float2 get_xx()
public float2 get_xy()
public void set_xy(float2 value)
public float2 get_xz()
public void set_xz(float2 value)
public float2 get_xw()
public void set_xw(float2 value)
public float2 get_yx()
public void set_yx(float2 value)
public float2 get_yy()
public float2 get_yz()
public void set_yz(float2 value)
public float2 get_yw()
public void set_yw(float2 value)
public float2 get_zx()
public void set_zx(float2 value)
public float2 get_zy()
public void set_zy(float2 value)
public float2 get_zz()
public float2 get_zw()
public void set_zw(float2 value)
public float2 get_wx()
public void set_wx(float2 value)
public float2 get_wy()
public void set_wy(float2 value)
public float2 get_wz()
public void set_wz(float2 value)
public float2 get_ww()
public float get_Item(int index)
public void set_Item(int index, float value)
public bool Equals(float4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
public float4 op_Implicit(Vector4 v)
public Vector4 op_Implicit(float4 v)
}
public Unity.Mathematics.float4x2 : ValueType {
public float4 c0
public float4 c1
public float4x2 zero
public float4& Item
public void .ctor(float4 c0, float4 c1)
public void .ctor(float m00, float m01, float m10, float m11, float m20, float m21, float m30, float m31)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool4x2 v)
public void .ctor(int v)
public void .ctor(int4x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x2 v)
public void .ctor(double v)
public void .ctor(double4x2 v)
public float4x2 op_Implicit(float v)
public float4x2 op_Explicit(bool v)
public float4x2 op_Explicit(bool4x2 v)
public float4x2 op_Implicit(int v)
public float4x2 op_Implicit(int4x2 v)
public float4x2 op_Implicit(UInt32 v)
public float4x2 op_Implicit(uint4x2 v)
public float4x2 op_Explicit(double v)
public float4x2 op_Explicit(double4x2 v)
public float4x2 op_Multiply(float4x2 lhs, float4x2 rhs)
public float4x2 op_Multiply(float4x2 lhs, float rhs)
public float4x2 op_Multiply(float lhs, float4x2 rhs)
public float4x2 op_Addition(float4x2 lhs, float4x2 rhs)
public float4x2 op_Addition(float4x2 lhs, float rhs)
public float4x2 op_Addition(float lhs, float4x2 rhs)
public float4x2 op_Subtraction(float4x2 lhs, float4x2 rhs)
public float4x2 op_Subtraction(float4x2 lhs, float rhs)
public float4x2 op_Subtraction(float lhs, float4x2 rhs)
public float4x2 op_Division(float4x2 lhs, float4x2 rhs)
public float4x2 op_Division(float4x2 lhs, float rhs)
public float4x2 op_Division(float lhs, float4x2 rhs)
public float4x2 op_Modulus(float4x2 lhs, float4x2 rhs)
public float4x2 op_Modulus(float4x2 lhs, float rhs)
public float4x2 op_Modulus(float lhs, float4x2 rhs)
public float4x2 op_Increment(float4x2 val)
public float4x2 op_Decrement(float4x2 val)
public bool4x2 op_LessThan(float4x2 lhs, float4x2 rhs)
public bool4x2 op_LessThan(float4x2 lhs, float rhs)
public bool4x2 op_LessThan(float lhs, float4x2 rhs)
public bool4x2 op_LessThanOrEqual(float4x2 lhs, float4x2 rhs)
public bool4x2 op_LessThanOrEqual(float4x2 lhs, float rhs)
public bool4x2 op_LessThanOrEqual(float lhs, float4x2 rhs)
public bool4x2 op_GreaterThan(float4x2 lhs, float4x2 rhs)
public bool4x2 op_GreaterThan(float4x2 lhs, float rhs)
public bool4x2 op_GreaterThan(float lhs, float4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(float4x2 lhs, float4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(float4x2 lhs, float rhs)
public bool4x2 op_GreaterThanOrEqual(float lhs, float4x2 rhs)
public float4x2 op_UnaryNegation(float4x2 val)
public float4x2 op_UnaryPlus(float4x2 val)
public bool4x2 op_Equality(float4x2 lhs, float4x2 rhs)
public bool4x2 op_Equality(float4x2 lhs, float rhs)
public bool4x2 op_Equality(float lhs, float4x2 rhs)
public bool4x2 op_Inequality(float4x2 lhs, float4x2 rhs)
public bool4x2 op_Inequality(float4x2 lhs, float rhs)
public bool4x2 op_Inequality(float lhs, float4x2 rhs)
public float4& get_Item(int index)
public bool Equals(float4x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float4x3 : ValueType {
public float4 c0
public float4 c1
public float4 c2
public float4x3 zero
public float4& Item
public void .ctor(float4 c0, float4 c1, float4 c2)
public void .ctor(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22, float m30, float m31, float m32)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool4x3 v)
public void .ctor(int v)
public void .ctor(int4x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x3 v)
public void .ctor(double v)
public void .ctor(double4x3 v)
public float4x3 op_Implicit(float v)
public float4x3 op_Explicit(bool v)
public float4x3 op_Explicit(bool4x3 v)
public float4x3 op_Implicit(int v)
public float4x3 op_Implicit(int4x3 v)
public float4x3 op_Implicit(UInt32 v)
public float4x3 op_Implicit(uint4x3 v)
public float4x3 op_Explicit(double v)
public float4x3 op_Explicit(double4x3 v)
public float4x3 op_Multiply(float4x3 lhs, float4x3 rhs)
public float4x3 op_Multiply(float4x3 lhs, float rhs)
public float4x3 op_Multiply(float lhs, float4x3 rhs)
public float4x3 op_Addition(float4x3 lhs, float4x3 rhs)
public float4x3 op_Addition(float4x3 lhs, float rhs)
public float4x3 op_Addition(float lhs, float4x3 rhs)
public float4x3 op_Subtraction(float4x3 lhs, float4x3 rhs)
public float4x3 op_Subtraction(float4x3 lhs, float rhs)
public float4x3 op_Subtraction(float lhs, float4x3 rhs)
public float4x3 op_Division(float4x3 lhs, float4x3 rhs)
public float4x3 op_Division(float4x3 lhs, float rhs)
public float4x3 op_Division(float lhs, float4x3 rhs)
public float4x3 op_Modulus(float4x3 lhs, float4x3 rhs)
public float4x3 op_Modulus(float4x3 lhs, float rhs)
public float4x3 op_Modulus(float lhs, float4x3 rhs)
public float4x3 op_Increment(float4x3 val)
public float4x3 op_Decrement(float4x3 val)
public bool4x3 op_LessThan(float4x3 lhs, float4x3 rhs)
public bool4x3 op_LessThan(float4x3 lhs, float rhs)
public bool4x3 op_LessThan(float lhs, float4x3 rhs)
public bool4x3 op_LessThanOrEqual(float4x3 lhs, float4x3 rhs)
public bool4x3 op_LessThanOrEqual(float4x3 lhs, float rhs)
public bool4x3 op_LessThanOrEqual(float lhs, float4x3 rhs)
public bool4x3 op_GreaterThan(float4x3 lhs, float4x3 rhs)
public bool4x3 op_GreaterThan(float4x3 lhs, float rhs)
public bool4x3 op_GreaterThan(float lhs, float4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(float4x3 lhs, float4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(float4x3 lhs, float rhs)
public bool4x3 op_GreaterThanOrEqual(float lhs, float4x3 rhs)
public float4x3 op_UnaryNegation(float4x3 val)
public float4x3 op_UnaryPlus(float4x3 val)
public bool4x3 op_Equality(float4x3 lhs, float4x3 rhs)
public bool4x3 op_Equality(float4x3 lhs, float rhs)
public bool4x3 op_Equality(float lhs, float4x3 rhs)
public bool4x3 op_Inequality(float4x3 lhs, float4x3 rhs)
public bool4x3 op_Inequality(float4x3 lhs, float rhs)
public bool4x3 op_Inequality(float lhs, float4x3 rhs)
public float4& get_Item(int index)
public bool Equals(float4x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.float4x4 : ValueType {
public float4 c0
public float4 c1
public float4 c2
public float4 c3
public float4x4 identity
public float4x4 zero
public float4& Item
public void .ctor(float4 c0, float4 c1, float4 c2, float4 c3)
public void .ctor(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33)
public void .ctor(float v)
public void .ctor(bool v)
public void .ctor(bool4x4 v)
public void .ctor(int v)
public void .ctor(int4x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x4 v)
public void .ctor(double v)
public void .ctor(double4x4 v)
public float4x4 op_Implicit(float v)
public float4x4 op_Explicit(bool v)
public float4x4 op_Explicit(bool4x4 v)
public float4x4 op_Implicit(int v)
public float4x4 op_Implicit(int4x4 v)
public float4x4 op_Implicit(UInt32 v)
public float4x4 op_Implicit(uint4x4 v)
public float4x4 op_Explicit(double v)
public float4x4 op_Explicit(double4x4 v)
public float4x4 op_Multiply(float4x4 lhs, float4x4 rhs)
public float4x4 op_Multiply(float4x4 lhs, float rhs)
public float4x4 op_Multiply(float lhs, float4x4 rhs)
public float4x4 op_Addition(float4x4 lhs, float4x4 rhs)
public float4x4 op_Addition(float4x4 lhs, float rhs)
public float4x4 op_Addition(float lhs, float4x4 rhs)
public float4x4 op_Subtraction(float4x4 lhs, float4x4 rhs)
public float4x4 op_Subtraction(float4x4 lhs, float rhs)
public float4x4 op_Subtraction(float lhs, float4x4 rhs)
public float4x4 op_Division(float4x4 lhs, float4x4 rhs)
public float4x4 op_Division(float4x4 lhs, float rhs)
public float4x4 op_Division(float lhs, float4x4 rhs)
public float4x4 op_Modulus(float4x4 lhs, float4x4 rhs)
public float4x4 op_Modulus(float4x4 lhs, float rhs)
public float4x4 op_Modulus(float lhs, float4x4 rhs)
public float4x4 op_Increment(float4x4 val)
public float4x4 op_Decrement(float4x4 val)
public bool4x4 op_LessThan(float4x4 lhs, float4x4 rhs)
public bool4x4 op_LessThan(float4x4 lhs, float rhs)
public bool4x4 op_LessThan(float lhs, float4x4 rhs)
public bool4x4 op_LessThanOrEqual(float4x4 lhs, float4x4 rhs)
public bool4x4 op_LessThanOrEqual(float4x4 lhs, float rhs)
public bool4x4 op_LessThanOrEqual(float lhs, float4x4 rhs)
public bool4x4 op_GreaterThan(float4x4 lhs, float4x4 rhs)
public bool4x4 op_GreaterThan(float4x4 lhs, float rhs)
public bool4x4 op_GreaterThan(float lhs, float4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(float4x4 lhs, float4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(float4x4 lhs, float rhs)
public bool4x4 op_GreaterThanOrEqual(float lhs, float4x4 rhs)
public float4x4 op_UnaryNegation(float4x4 val)
public float4x4 op_UnaryPlus(float4x4 val)
public bool4x4 op_Equality(float4x4 lhs, float4x4 rhs)
public bool4x4 op_Equality(float4x4 lhs, float rhs)
public bool4x4 op_Equality(float lhs, float4x4 rhs)
public bool4x4 op_Inequality(float4x4 lhs, float4x4 rhs)
public bool4x4 op_Inequality(float4x4 lhs, float rhs)
public bool4x4 op_Inequality(float lhs, float4x4 rhs)
public float4& get_Item(int index)
public bool Equals(float4x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
public float4x4 op_Implicit(Matrix4x4 m)
public Matrix4x4 op_Implicit(float4x4 m)
public void .ctor(float3x3 rotation, float3 translation)
public void .ctor(quaternion rotation, float3 translation)
public void .ctor(RigidTransform transform)
public float4x4 AxisAngle(float3 axis, float angle)
public float4x4 EulerXYZ(float3 xyz)
public float4x4 EulerXZY(float3 xyz)
public float4x4 EulerYXZ(float3 xyz)
public float4x4 EulerYZX(float3 xyz)
public float4x4 EulerZXY(float3 xyz)
public float4x4 EulerZYX(float3 xyz)
public float4x4 EulerXYZ(float x, float y, float z)
public float4x4 EulerXZY(float x, float y, float z)
public float4x4 EulerYXZ(float x, float y, float z)
public float4x4 EulerYZX(float x, float y, float z)
public float4x4 EulerZXY(float x, float y, float z)
public float4x4 EulerZYX(float x, float y, float z)
public float4x4 Euler(float3 xyz, RotationOrder order)
public float4x4 Euler(float x, float y, float z, RotationOrder order)
public float4x4 RotateX(float angle)
public float4x4 RotateY(float angle)
public float4x4 RotateZ(float angle)
public float4x4 Scale(float s)
public float4x4 Scale(float x, float y, float z)
public float4x4 Scale(float3 scales)
public float4x4 Translate(float3 vector)
public float4x4 LookAt(float3 eye, float3 target, float3 up)
public float4x4 Ortho(float width, float height, float near, float far)
public float4x4 OrthoOffCenter(float left, float right, float bottom, float top, float near, float far)
public float4x4 PerspectiveFov(float verticalFov, float aspect, float near, float far)
public float4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float near, float far)
public float4x4 TRS(float3 translation, quaternion rotation, float3 scale)
}
internal Unity.Mathematics.Geometry.Math : object {
public MinMaxAABB Transform(RigidTransform transform, MinMaxAABB aabb)
public MinMaxAABB Transform(float4x4 transform, MinMaxAABB aabb)
public MinMaxAABB Transform(float3x3 transform, MinMaxAABB aabb)
}
internal Unity.Mathematics.Geometry.MinMaxAABB : ValueType {
public float3 Min
public float3 Max
public float3 Extents
public float3 HalfExtents
public float3 Center
public bool IsValid
public float SurfaceArea
public void .ctor(float3 min, float3 max)
public MinMaxAABB CreateFromCenterAndExtents(float3 center, float3 extents)
public MinMaxAABB CreateFromCenterAndHalfExtents(float3 center, float3 halfExtents)
public float3 get_Extents()
public float3 get_HalfExtents()
public float3 get_Center()
public bool get_IsValid()
public float get_SurfaceArea()
public bool Contains(float3 point)
public bool Contains(MinMaxAABB aabb)
public bool Overlaps(MinMaxAABB aabb)
public void Expand(float signedDistance)
public void Encapsulate(MinMaxAABB aabb)
public void Encapsulate(float3 point)
public bool Equals(MinMaxAABB other)
public string ToString()
}
internal Unity.Mathematics.Geometry.Plane : ValueType {
public float4 NormalAndDistance
public float3 Normal
public float Distance
public Plane Flipped
public void .ctor(float coefficientA, float coefficientB, float coefficientC, float coefficientD)
public void .ctor(float3 normal, float distance)
public void .ctor(float3 normal, float3 pointInPlane)
public void .ctor(float3 vector1InPlane, float3 vector2InPlane, float3 pointInPlane)
public Plane CreateFromUnitNormalAndDistance(float3 unitNormal, float distance)
public Plane CreateFromUnitNormalAndPointInPlane(float3 unitNormal, float3 pointInPlane)
public float3 get_Normal()
public void set_Normal(float3 value)
public float get_Distance()
public void set_Distance(float value)
public Plane Normalize(Plane plane)
public float4 Normalize(float4 planeCoefficients)
public float SignedDistanceToPoint(float3 point)
public float3 Projection(float3 point)
public Plane get_Flipped()
public float4 op_Implicit(Plane plane)
private void CheckPlaneIsNormalized()
}
public Unity.Mathematics.half : ValueType {
public ushort value
public half zero
public float MaxValue
public float MinValue
public half MaxValueAsHalf
public half MinValueAsHalf
public float get_MaxValue()
public float get_MinValue()
public half get_MaxValueAsHalf()
public half get_MinValueAsHalf()
public void .ctor(half x)
public void .ctor(float v)
public void .ctor(double v)
public half op_Explicit(float v)
public half op_Explicit(double v)
public float op_Implicit(half d)
public double op_Implicit(half d)
public bool op_Equality(half lhs, half rhs)
public bool op_Inequality(half lhs, half rhs)
public bool Equals(half rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.half2 : ValueType {
public half x
public half y
public half2 zero
public half4 xxxx
public half4 xxxy
public half4 xxyx
public half4 xxyy
public half4 xyxx
public half4 xyxy
public half4 xyyx
public half4 xyyy
public half4 yxxx
public half4 yxxy
public half4 yxyx
public half4 yxyy
public half4 yyxx
public half4 yyxy
public half4 yyyx
public half4 yyyy
public half3 xxx
public half3 xxy
public half3 xyx
public half3 xyy
public half3 yxx
public half3 yxy
public half3 yyx
public half3 yyy
public half2 xx
public half2 xy
public half2 yx
public half2 yy
public half Item
public void .ctor(half x, half y)
public void .ctor(half2 xy)
public void .ctor(half v)
public void .ctor(float v)
public void .ctor(float2 v)
public void .ctor(double v)
public void .ctor(double2 v)
public half2 op_Implicit(half v)
public half2 op_Explicit(float v)
public half2 op_Explicit(float2 v)
public half2 op_Explicit(double v)
public half2 op_Explicit(double2 v)
public bool2 op_Equality(half2 lhs, half2 rhs)
public bool2 op_Equality(half2 lhs, half rhs)
public bool2 op_Equality(half lhs, half2 rhs)
public bool2 op_Inequality(half2 lhs, half2 rhs)
public bool2 op_Inequality(half2 lhs, half rhs)
public bool2 op_Inequality(half lhs, half2 rhs)
public half4 get_xxxx()
public half4 get_xxxy()
public half4 get_xxyx()
public half4 get_xxyy()
public half4 get_xyxx()
public half4 get_xyxy()
public half4 get_xyyx()
public half4 get_xyyy()
public half4 get_yxxx()
public half4 get_yxxy()
public half4 get_yxyx()
public half4 get_yxyy()
public half4 get_yyxx()
public half4 get_yyxy()
public half4 get_yyyx()
public half4 get_yyyy()
public half3 get_xxx()
public half3 get_xxy()
public half3 get_xyx()
public half3 get_xyy()
public half3 get_yxx()
public half3 get_yxy()
public half3 get_yyx()
public half3 get_yyy()
public half2 get_xx()
public half2 get_xy()
public void set_xy(half2 value)
public half2 get_yx()
public void set_yx(half2 value)
public half2 get_yy()
public half get_Item(int index)
public void set_Item(int index, half value)
public bool Equals(half2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.half3 : ValueType {
public half x
public half y
public half z
public half3 zero
public half4 xxxx
public half4 xxxy
public half4 xxxz
public half4 xxyx
public half4 xxyy
public half4 xxyz
public half4 xxzx
public half4 xxzy
public half4 xxzz
public half4 xyxx
public half4 xyxy
public half4 xyxz
public half4 xyyx
public half4 xyyy
public half4 xyyz
public half4 xyzx
public half4 xyzy
public half4 xyzz
public half4 xzxx
public half4 xzxy
public half4 xzxz
public half4 xzyx
public half4 xzyy
public half4 xzyz
public half4 xzzx
public half4 xzzy
public half4 xzzz
public half4 yxxx
public half4 yxxy
public half4 yxxz
public half4 yxyx
public half4 yxyy
public half4 yxyz
public half4 yxzx
public half4 yxzy
public half4 yxzz
public half4 yyxx
public half4 yyxy
public half4 yyxz
public half4 yyyx
public half4 yyyy
public half4 yyyz
public half4 yyzx
public half4 yyzy
public half4 yyzz
public half4 yzxx
public half4 yzxy
public half4 yzxz
public half4 yzyx
public half4 yzyy
public half4 yzyz
public half4 yzzx
public half4 yzzy
public half4 yzzz
public half4 zxxx
public half4 zxxy
public half4 zxxz
public half4 zxyx
public half4 zxyy
public half4 zxyz
public half4 zxzx
public half4 zxzy
public half4 zxzz
public half4 zyxx
public half4 zyxy
public half4 zyxz
public half4 zyyx
public half4 zyyy
public half4 zyyz
public half4 zyzx
public half4 zyzy
public half4 zyzz
public half4 zzxx
public half4 zzxy
public half4 zzxz
public half4 zzyx
public half4 zzyy
public half4 zzyz
public half4 zzzx
public half4 zzzy
public half4 zzzz
public half3 xxx
public half3 xxy
public half3 xxz
public half3 xyx
public half3 xyy
public half3 xyz
public half3 xzx
public half3 xzy
public half3 xzz
public half3 yxx
public half3 yxy
public half3 yxz
public half3 yyx
public half3 yyy
public half3 yyz
public half3 yzx
public half3 yzy
public half3 yzz
public half3 zxx
public half3 zxy
public half3 zxz
public half3 zyx
public half3 zyy
public half3 zyz
public half3 zzx
public half3 zzy
public half3 zzz
public half2 xx
public half2 xy
public half2 xz
public half2 yx
public half2 yy
public half2 yz
public half2 zx
public half2 zy
public half2 zz
public half Item
public void .ctor(half x, half y, half z)
public void .ctor(half x, half2 yz)
public void .ctor(half2 xy, half z)
public void .ctor(half3 xyz)
public void .ctor(half v)
public void .ctor(float v)
public void .ctor(float3 v)
public void .ctor(double v)
public void .ctor(double3 v)
public half3 op_Implicit(half v)
public half3 op_Explicit(float v)
public half3 op_Explicit(float3 v)
public half3 op_Explicit(double v)
public half3 op_Explicit(double3 v)
public bool3 op_Equality(half3 lhs, half3 rhs)
public bool3 op_Equality(half3 lhs, half rhs)
public bool3 op_Equality(half lhs, half3 rhs)
public bool3 op_Inequality(half3 lhs, half3 rhs)
public bool3 op_Inequality(half3 lhs, half rhs)
public bool3 op_Inequality(half lhs, half3 rhs)
public half4 get_xxxx()
public half4 get_xxxy()
public half4 get_xxxz()
public half4 get_xxyx()
public half4 get_xxyy()
public half4 get_xxyz()
public half4 get_xxzx()
public half4 get_xxzy()
public half4 get_xxzz()
public half4 get_xyxx()
public half4 get_xyxy()
public half4 get_xyxz()
public half4 get_xyyx()
public half4 get_xyyy()
public half4 get_xyyz()
public half4 get_xyzx()
public half4 get_xyzy()
public half4 get_xyzz()
public half4 get_xzxx()
public half4 get_xzxy()
public half4 get_xzxz()
public half4 get_xzyx()
public half4 get_xzyy()
public half4 get_xzyz()
public half4 get_xzzx()
public half4 get_xzzy()
public half4 get_xzzz()
public half4 get_yxxx()
public half4 get_yxxy()
public half4 get_yxxz()
public half4 get_yxyx()
public half4 get_yxyy()
public half4 get_yxyz()
public half4 get_yxzx()
public half4 get_yxzy()
public half4 get_yxzz()
public half4 get_yyxx()
public half4 get_yyxy()
public half4 get_yyxz()
public half4 get_yyyx()
public half4 get_yyyy()
public half4 get_yyyz()
public half4 get_yyzx()
public half4 get_yyzy()
public half4 get_yyzz()
public half4 get_yzxx()
public half4 get_yzxy()
public half4 get_yzxz()
public half4 get_yzyx()
public half4 get_yzyy()
public half4 get_yzyz()
public half4 get_yzzx()
public half4 get_yzzy()
public half4 get_yzzz()
public half4 get_zxxx()
public half4 get_zxxy()
public half4 get_zxxz()
public half4 get_zxyx()
public half4 get_zxyy()
public half4 get_zxyz()
public half4 get_zxzx()
public half4 get_zxzy()
public half4 get_zxzz()
public half4 get_zyxx()
public half4 get_zyxy()
public half4 get_zyxz()
public half4 get_zyyx()
public half4 get_zyyy()
public half4 get_zyyz()
public half4 get_zyzx()
public half4 get_zyzy()
public half4 get_zyzz()
public half4 get_zzxx()
public half4 get_zzxy()
public half4 get_zzxz()
public half4 get_zzyx()
public half4 get_zzyy()
public half4 get_zzyz()
public half4 get_zzzx()
public half4 get_zzzy()
public half4 get_zzzz()
public half3 get_xxx()
public half3 get_xxy()
public half3 get_xxz()
public half3 get_xyx()
public half3 get_xyy()
public half3 get_xyz()
public void set_xyz(half3 value)
public half3 get_xzx()
public half3 get_xzy()
public void set_xzy(half3 value)
public half3 get_xzz()
public half3 get_yxx()
public half3 get_yxy()
public half3 get_yxz()
public void set_yxz(half3 value)
public half3 get_yyx()
public half3 get_yyy()
public half3 get_yyz()
public half3 get_yzx()
public void set_yzx(half3 value)
public half3 get_yzy()
public half3 get_yzz()
public half3 get_zxx()
public half3 get_zxy()
public void set_zxy(half3 value)
public half3 get_zxz()
public half3 get_zyx()
public void set_zyx(half3 value)
public half3 get_zyy()
public half3 get_zyz()
public half3 get_zzx()
public half3 get_zzy()
public half3 get_zzz()
public half2 get_xx()
public half2 get_xy()
public void set_xy(half2 value)
public half2 get_xz()
public void set_xz(half2 value)
public half2 get_yx()
public void set_yx(half2 value)
public half2 get_yy()
public half2 get_yz()
public void set_yz(half2 value)
public half2 get_zx()
public void set_zx(half2 value)
public half2 get_zy()
public void set_zy(half2 value)
public half2 get_zz()
public half get_Item(int index)
public void set_Item(int index, half value)
public bool Equals(half3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.half4 : ValueType {
public half x
public half y
public half z
public half w
public half4 zero
public half4 xxxx
public half4 xxxy
public half4 xxxz
public half4 xxxw
public half4 xxyx
public half4 xxyy
public half4 xxyz
public half4 xxyw
public half4 xxzx
public half4 xxzy
public half4 xxzz
public half4 xxzw
public half4 xxwx
public half4 xxwy
public half4 xxwz
public half4 xxww
public half4 xyxx
public half4 xyxy
public half4 xyxz
public half4 xyxw
public half4 xyyx
public half4 xyyy
public half4 xyyz
public half4 xyyw
public half4 xyzx
public half4 xyzy
public half4 xyzz
public half4 xyzw
public half4 xywx
public half4 xywy
public half4 xywz
public half4 xyww
public half4 xzxx
public half4 xzxy
public half4 xzxz
public half4 xzxw
public half4 xzyx
public half4 xzyy
public half4 xzyz
public half4 xzyw
public half4 xzzx
public half4 xzzy
public half4 xzzz
public half4 xzzw
public half4 xzwx
public half4 xzwy
public half4 xzwz
public half4 xzww
public half4 xwxx
public half4 xwxy
public half4 xwxz
public half4 xwxw
public half4 xwyx
public half4 xwyy
public half4 xwyz
public half4 xwyw
public half4 xwzx
public half4 xwzy
public half4 xwzz
public half4 xwzw
public half4 xwwx
public half4 xwwy
public half4 xwwz
public half4 xwww
public half4 yxxx
public half4 yxxy
public half4 yxxz
public half4 yxxw
public half4 yxyx
public half4 yxyy
public half4 yxyz
public half4 yxyw
public half4 yxzx
public half4 yxzy
public half4 yxzz
public half4 yxzw
public half4 yxwx
public half4 yxwy
public half4 yxwz
public half4 yxww
public half4 yyxx
public half4 yyxy
public half4 yyxz
public half4 yyxw
public half4 yyyx
public half4 yyyy
public half4 yyyz
public half4 yyyw
public half4 yyzx
public half4 yyzy
public half4 yyzz
public half4 yyzw
public half4 yywx
public half4 yywy
public half4 yywz
public half4 yyww
public half4 yzxx
public half4 yzxy
public half4 yzxz
public half4 yzxw
public half4 yzyx
public half4 yzyy
public half4 yzyz
public half4 yzyw
public half4 yzzx
public half4 yzzy
public half4 yzzz
public half4 yzzw
public half4 yzwx
public half4 yzwy
public half4 yzwz
public half4 yzww
public half4 ywxx
public half4 ywxy
public half4 ywxz
public half4 ywxw
public half4 ywyx
public half4 ywyy
public half4 ywyz
public half4 ywyw
public half4 ywzx
public half4 ywzy
public half4 ywzz
public half4 ywzw
public half4 ywwx
public half4 ywwy
public half4 ywwz
public half4 ywww
public half4 zxxx
public half4 zxxy
public half4 zxxz
public half4 zxxw
public half4 zxyx
public half4 zxyy
public half4 zxyz
public half4 zxyw
public half4 zxzx
public half4 zxzy
public half4 zxzz
public half4 zxzw
public half4 zxwx
public half4 zxwy
public half4 zxwz
public half4 zxww
public half4 zyxx
public half4 zyxy
public half4 zyxz
public half4 zyxw
public half4 zyyx
public half4 zyyy
public half4 zyyz
public half4 zyyw
public half4 zyzx
public half4 zyzy
public half4 zyzz
public half4 zyzw
public half4 zywx
public half4 zywy
public half4 zywz
public half4 zyww
public half4 zzxx
public half4 zzxy
public half4 zzxz
public half4 zzxw
public half4 zzyx
public half4 zzyy
public half4 zzyz
public half4 zzyw
public half4 zzzx
public half4 zzzy
public half4 zzzz
public half4 zzzw
public half4 zzwx
public half4 zzwy
public half4 zzwz
public half4 zzww
public half4 zwxx
public half4 zwxy
public half4 zwxz
public half4 zwxw
public half4 zwyx
public half4 zwyy
public half4 zwyz
public half4 zwyw
public half4 zwzx
public half4 zwzy
public half4 zwzz
public half4 zwzw
public half4 zwwx
public half4 zwwy
public half4 zwwz
public half4 zwww
public half4 wxxx
public half4 wxxy
public half4 wxxz
public half4 wxxw
public half4 wxyx
public half4 wxyy
public half4 wxyz
public half4 wxyw
public half4 wxzx
public half4 wxzy
public half4 wxzz
public half4 wxzw
public half4 wxwx
public half4 wxwy
public half4 wxwz
public half4 wxww
public half4 wyxx
public half4 wyxy
public half4 wyxz
public half4 wyxw
public half4 wyyx
public half4 wyyy
public half4 wyyz
public half4 wyyw
public half4 wyzx
public half4 wyzy
public half4 wyzz
public half4 wyzw
public half4 wywx
public half4 wywy
public half4 wywz
public half4 wyww
public half4 wzxx
public half4 wzxy
public half4 wzxz
public half4 wzxw
public half4 wzyx
public half4 wzyy
public half4 wzyz
public half4 wzyw
public half4 wzzx
public half4 wzzy
public half4 wzzz
public half4 wzzw
public half4 wzwx
public half4 wzwy
public half4 wzwz
public half4 wzww
public half4 wwxx
public half4 wwxy
public half4 wwxz
public half4 wwxw
public half4 wwyx
public half4 wwyy
public half4 wwyz
public half4 wwyw
public half4 wwzx
public half4 wwzy
public half4 wwzz
public half4 wwzw
public half4 wwwx
public half4 wwwy
public half4 wwwz
public half4 wwww
public half3 xxx
public half3 xxy
public half3 xxz
public half3 xxw
public half3 xyx
public half3 xyy
public half3 xyz
public half3 xyw
public half3 xzx
public half3 xzy
public half3 xzz
public half3 xzw
public half3 xwx
public half3 xwy
public half3 xwz
public half3 xww
public half3 yxx
public half3 yxy
public half3 yxz
public half3 yxw
public half3 yyx
public half3 yyy
public half3 yyz
public half3 yyw
public half3 yzx
public half3 yzy
public half3 yzz
public half3 yzw
public half3 ywx
public half3 ywy
public half3 ywz
public half3 yww
public half3 zxx
public half3 zxy
public half3 zxz
public half3 zxw
public half3 zyx
public half3 zyy
public half3 zyz
public half3 zyw
public half3 zzx
public half3 zzy
public half3 zzz
public half3 zzw
public half3 zwx
public half3 zwy
public half3 zwz
public half3 zww
public half3 wxx
public half3 wxy
public half3 wxz
public half3 wxw
public half3 wyx
public half3 wyy
public half3 wyz
public half3 wyw
public half3 wzx
public half3 wzy
public half3 wzz
public half3 wzw
public half3 wwx
public half3 wwy
public half3 wwz
public half3 www
public half2 xx
public half2 xy
public half2 xz
public half2 xw
public half2 yx
public half2 yy
public half2 yz
public half2 yw
public half2 zx
public half2 zy
public half2 zz
public half2 zw
public half2 wx
public half2 wy
public half2 wz
public half2 ww
public half Item
public void .ctor(half x, half y, half z, half w)
public void .ctor(half x, half y, half2 zw)
public void .ctor(half x, half2 yz, half w)
public void .ctor(half x, half3 yzw)
public void .ctor(half2 xy, half z, half w)
public void .ctor(half2 xy, half2 zw)
public void .ctor(half3 xyz, half w)
public void .ctor(half4 xyzw)
public void .ctor(half v)
public void .ctor(float v)
public void .ctor(float4 v)
public void .ctor(double v)
public void .ctor(double4 v)
public half4 op_Implicit(half v)
public half4 op_Explicit(float v)
public half4 op_Explicit(float4 v)
public half4 op_Explicit(double v)
public half4 op_Explicit(double4 v)
public bool4 op_Equality(half4 lhs, half4 rhs)
public bool4 op_Equality(half4 lhs, half rhs)
public bool4 op_Equality(half lhs, half4 rhs)
public bool4 op_Inequality(half4 lhs, half4 rhs)
public bool4 op_Inequality(half4 lhs, half rhs)
public bool4 op_Inequality(half lhs, half4 rhs)
public half4 get_xxxx()
public half4 get_xxxy()
public half4 get_xxxz()
public half4 get_xxxw()
public half4 get_xxyx()
public half4 get_xxyy()
public half4 get_xxyz()
public half4 get_xxyw()
public half4 get_xxzx()
public half4 get_xxzy()
public half4 get_xxzz()
public half4 get_xxzw()
public half4 get_xxwx()
public half4 get_xxwy()
public half4 get_xxwz()
public half4 get_xxww()
public half4 get_xyxx()
public half4 get_xyxy()
public half4 get_xyxz()
public half4 get_xyxw()
public half4 get_xyyx()
public half4 get_xyyy()
public half4 get_xyyz()
public half4 get_xyyw()
public half4 get_xyzx()
public half4 get_xyzy()
public half4 get_xyzz()
public half4 get_xyzw()
public void set_xyzw(half4 value)
public half4 get_xywx()
public half4 get_xywy()
public half4 get_xywz()
public void set_xywz(half4 value)
public half4 get_xyww()
public half4 get_xzxx()
public half4 get_xzxy()
public half4 get_xzxz()
public half4 get_xzxw()
public half4 get_xzyx()
public half4 get_xzyy()
public half4 get_xzyz()
public half4 get_xzyw()
public void set_xzyw(half4 value)
public half4 get_xzzx()
public half4 get_xzzy()
public half4 get_xzzz()
public half4 get_xzzw()
public half4 get_xzwx()
public half4 get_xzwy()
public void set_xzwy(half4 value)
public half4 get_xzwz()
public half4 get_xzww()
public half4 get_xwxx()
public half4 get_xwxy()
public half4 get_xwxz()
public half4 get_xwxw()
public half4 get_xwyx()
public half4 get_xwyy()
public half4 get_xwyz()
public void set_xwyz(half4 value)
public half4 get_xwyw()
public half4 get_xwzx()
public half4 get_xwzy()
public void set_xwzy(half4 value)
public half4 get_xwzz()
public half4 get_xwzw()
public half4 get_xwwx()
public half4 get_xwwy()
public half4 get_xwwz()
public half4 get_xwww()
public half4 get_yxxx()
public half4 get_yxxy()
public half4 get_yxxz()
public half4 get_yxxw()
public half4 get_yxyx()
public half4 get_yxyy()
public half4 get_yxyz()
public half4 get_yxyw()
public half4 get_yxzx()
public half4 get_yxzy()
public half4 get_yxzz()
public half4 get_yxzw()
public void set_yxzw(half4 value)
public half4 get_yxwx()
public half4 get_yxwy()
public half4 get_yxwz()
public void set_yxwz(half4 value)
public half4 get_yxww()
public half4 get_yyxx()
public half4 get_yyxy()
public half4 get_yyxz()
public half4 get_yyxw()
public half4 get_yyyx()
public half4 get_yyyy()
public half4 get_yyyz()
public half4 get_yyyw()
public half4 get_yyzx()
public half4 get_yyzy()
public half4 get_yyzz()
public half4 get_yyzw()
public half4 get_yywx()
public half4 get_yywy()
public half4 get_yywz()
public half4 get_yyww()
public half4 get_yzxx()
public half4 get_yzxy()
public half4 get_yzxz()
public half4 get_yzxw()
public void set_yzxw(half4 value)
public half4 get_yzyx()
public half4 get_yzyy()
public half4 get_yzyz()
public half4 get_yzyw()
public half4 get_yzzx()
public half4 get_yzzy()
public half4 get_yzzz()
public half4 get_yzzw()
public half4 get_yzwx()
public void set_yzwx(half4 value)
public half4 get_yzwy()
public half4 get_yzwz()
public half4 get_yzww()
public half4 get_ywxx()
public half4 get_ywxy()
public half4 get_ywxz()
public void set_ywxz(half4 value)
public half4 get_ywxw()
public half4 get_ywyx()
public half4 get_ywyy()
public half4 get_ywyz()
public half4 get_ywyw()
public half4 get_ywzx()
public void set_ywzx(half4 value)
public half4 get_ywzy()
public half4 get_ywzz()
public half4 get_ywzw()
public half4 get_ywwx()
public half4 get_ywwy()
public half4 get_ywwz()
public half4 get_ywww()
public half4 get_zxxx()
public half4 get_zxxy()
public half4 get_zxxz()
public half4 get_zxxw()
public half4 get_zxyx()
public half4 get_zxyy()
public half4 get_zxyz()
public half4 get_zxyw()
public void set_zxyw(half4 value)
public half4 get_zxzx()
public half4 get_zxzy()
public half4 get_zxzz()
public half4 get_zxzw()
public half4 get_zxwx()
public half4 get_zxwy()
public void set_zxwy(half4 value)
public half4 get_zxwz()
public half4 get_zxww()
public half4 get_zyxx()
public half4 get_zyxy()
public half4 get_zyxz()
public half4 get_zyxw()
public void set_zyxw(half4 value)
public half4 get_zyyx()
public half4 get_zyyy()
public half4 get_zyyz()
public half4 get_zyyw()
public half4 get_zyzx()
public half4 get_zyzy()
public half4 get_zyzz()
public half4 get_zyzw()
public half4 get_zywx()
public void set_zywx(half4 value)
public half4 get_zywy()
public half4 get_zywz()
public half4 get_zyww()
public half4 get_zzxx()
public half4 get_zzxy()
public half4 get_zzxz()
public half4 get_zzxw()
public half4 get_zzyx()
public half4 get_zzyy()
public half4 get_zzyz()
public half4 get_zzyw()
public half4 get_zzzx()
public half4 get_zzzy()
public half4 get_zzzz()
public half4 get_zzzw()
public half4 get_zzwx()
public half4 get_zzwy()
public half4 get_zzwz()
public half4 get_zzww()
public half4 get_zwxx()
public half4 get_zwxy()
public void set_zwxy(half4 value)
public half4 get_zwxz()
public half4 get_zwxw()
public half4 get_zwyx()
public void set_zwyx(half4 value)
public half4 get_zwyy()
public half4 get_zwyz()
public half4 get_zwyw()
public half4 get_zwzx()
public half4 get_zwzy()
public half4 get_zwzz()
public half4 get_zwzw()
public half4 get_zwwx()
public half4 get_zwwy()
public half4 get_zwwz()
public half4 get_zwww()
public half4 get_wxxx()
public half4 get_wxxy()
public half4 get_wxxz()
public half4 get_wxxw()
public half4 get_wxyx()
public half4 get_wxyy()
public half4 get_wxyz()
public void set_wxyz(half4 value)
public half4 get_wxyw()
public half4 get_wxzx()
public half4 get_wxzy()
public void set_wxzy(half4 value)
public half4 get_wxzz()
public half4 get_wxzw()
public half4 get_wxwx()
public half4 get_wxwy()
public half4 get_wxwz()
public half4 get_wxww()
public half4 get_wyxx()
public half4 get_wyxy()
public half4 get_wyxz()
public void set_wyxz(half4 value)
public half4 get_wyxw()
public half4 get_wyyx()
public half4 get_wyyy()
public half4 get_wyyz()
public half4 get_wyyw()
public half4 get_wyzx()
public void set_wyzx(half4 value)
public half4 get_wyzy()
public half4 get_wyzz()
public half4 get_wyzw()
public half4 get_wywx()
public half4 get_wywy()
public half4 get_wywz()
public half4 get_wyww()
public half4 get_wzxx()
public half4 get_wzxy()
public void set_wzxy(half4 value)
public half4 get_wzxz()
public half4 get_wzxw()
public half4 get_wzyx()
public void set_wzyx(half4 value)
public half4 get_wzyy()
public half4 get_wzyz()
public half4 get_wzyw()
public half4 get_wzzx()
public half4 get_wzzy()
public half4 get_wzzz()
public half4 get_wzzw()
public half4 get_wzwx()
public half4 get_wzwy()
public half4 get_wzwz()
public half4 get_wzww()
public half4 get_wwxx()
public half4 get_wwxy()
public half4 get_wwxz()
public half4 get_wwxw()
public half4 get_wwyx()
public half4 get_wwyy()
public half4 get_wwyz()
public half4 get_wwyw()
public half4 get_wwzx()
public half4 get_wwzy()
public half4 get_wwzz()
public half4 get_wwzw()
public half4 get_wwwx()
public half4 get_wwwy()
public half4 get_wwwz()
public half4 get_wwww()
public half3 get_xxx()
public half3 get_xxy()
public half3 get_xxz()
public half3 get_xxw()
public half3 get_xyx()
public half3 get_xyy()
public half3 get_xyz()
public void set_xyz(half3 value)
public half3 get_xyw()
public void set_xyw(half3 value)
public half3 get_xzx()
public half3 get_xzy()
public void set_xzy(half3 value)
public half3 get_xzz()
public half3 get_xzw()
public void set_xzw(half3 value)
public half3 get_xwx()
public half3 get_xwy()
public void set_xwy(half3 value)
public half3 get_xwz()
public void set_xwz(half3 value)
public half3 get_xww()
public half3 get_yxx()
public half3 get_yxy()
public half3 get_yxz()
public void set_yxz(half3 value)
public half3 get_yxw()
public void set_yxw(half3 value)
public half3 get_yyx()
public half3 get_yyy()
public half3 get_yyz()
public half3 get_yyw()
public half3 get_yzx()
public void set_yzx(half3 value)
public half3 get_yzy()
public half3 get_yzz()
public half3 get_yzw()
public void set_yzw(half3 value)
public half3 get_ywx()
public void set_ywx(half3 value)
public half3 get_ywy()
public half3 get_ywz()
public void set_ywz(half3 value)
public half3 get_yww()
public half3 get_zxx()
public half3 get_zxy()
public void set_zxy(half3 value)
public half3 get_zxz()
public half3 get_zxw()
public void set_zxw(half3 value)
public half3 get_zyx()
public void set_zyx(half3 value)
public half3 get_zyy()
public half3 get_zyz()
public half3 get_zyw()
public void set_zyw(half3 value)
public half3 get_zzx()
public half3 get_zzy()
public half3 get_zzz()
public half3 get_zzw()
public half3 get_zwx()
public void set_zwx(half3 value)
public half3 get_zwy()
public void set_zwy(half3 value)
public half3 get_zwz()
public half3 get_zww()
public half3 get_wxx()
public half3 get_wxy()
public void set_wxy(half3 value)
public half3 get_wxz()
public void set_wxz(half3 value)
public half3 get_wxw()
public half3 get_wyx()
public void set_wyx(half3 value)
public half3 get_wyy()
public half3 get_wyz()
public void set_wyz(half3 value)
public half3 get_wyw()
public half3 get_wzx()
public void set_wzx(half3 value)
public half3 get_wzy()
public void set_wzy(half3 value)
public half3 get_wzz()
public half3 get_wzw()
public half3 get_wwx()
public half3 get_wwy()
public half3 get_wwz()
public half3 get_www()
public half2 get_xx()
public half2 get_xy()
public void set_xy(half2 value)
public half2 get_xz()
public void set_xz(half2 value)
public half2 get_xw()
public void set_xw(half2 value)
public half2 get_yx()
public void set_yx(half2 value)
public half2 get_yy()
public half2 get_yz()
public void set_yz(half2 value)
public half2 get_yw()
public void set_yw(half2 value)
public half2 get_zx()
public void set_zx(half2 value)
public half2 get_zy()
public void set_zy(half2 value)
public half2 get_zz()
public half2 get_zw()
public void set_zw(half2 value)
public half2 get_wx()
public void set_wx(half2 value)
public half2 get_wy()
public void set_wy(half2 value)
public half2 get_wz()
public void set_wz(half2 value)
public half2 get_ww()
public half get_Item(int index)
public void set_Item(int index, half value)
public bool Equals(half4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int2 : ValueType {
public int x
public int y
public int2 zero
public int4 xxxx
public int4 xxxy
public int4 xxyx
public int4 xxyy
public int4 xyxx
public int4 xyxy
public int4 xyyx
public int4 xyyy
public int4 yxxx
public int4 yxxy
public int4 yxyx
public int4 yxyy
public int4 yyxx
public int4 yyxy
public int4 yyyx
public int4 yyyy
public int3 xxx
public int3 xxy
public int3 xyx
public int3 xyy
public int3 yxx
public int3 yxy
public int3 yyx
public int3 yyy
public int2 xx
public int2 xy
public int2 yx
public int2 yy
public int Item
public void .ctor(int x, int y)
public void .ctor(int2 xy)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool2 v)
public void .ctor(UInt32 v)
public void .ctor(uint2 v)
public void .ctor(float v)
public void .ctor(float2 v)
public void .ctor(double v)
public void .ctor(double2 v)
public int2 op_Implicit(int v)
public int2 op_Explicit(bool v)
public int2 op_Explicit(bool2 v)
public int2 op_Explicit(UInt32 v)
public int2 op_Explicit(uint2 v)
public int2 op_Explicit(float v)
public int2 op_Explicit(float2 v)
public int2 op_Explicit(double v)
public int2 op_Explicit(double2 v)
public int2 op_Multiply(int2 lhs, int2 rhs)
public int2 op_Multiply(int2 lhs, int rhs)
public int2 op_Multiply(int lhs, int2 rhs)
public int2 op_Addition(int2 lhs, int2 rhs)
public int2 op_Addition(int2 lhs, int rhs)
public int2 op_Addition(int lhs, int2 rhs)
public int2 op_Subtraction(int2 lhs, int2 rhs)
public int2 op_Subtraction(int2 lhs, int rhs)
public int2 op_Subtraction(int lhs, int2 rhs)
public int2 op_Division(int2 lhs, int2 rhs)
public int2 op_Division(int2 lhs, int rhs)
public int2 op_Division(int lhs, int2 rhs)
public int2 op_Modulus(int2 lhs, int2 rhs)
public int2 op_Modulus(int2 lhs, int rhs)
public int2 op_Modulus(int lhs, int2 rhs)
public int2 op_Increment(int2 val)
public int2 op_Decrement(int2 val)
public bool2 op_LessThan(int2 lhs, int2 rhs)
public bool2 op_LessThan(int2 lhs, int rhs)
public bool2 op_LessThan(int lhs, int2 rhs)
public bool2 op_LessThanOrEqual(int2 lhs, int2 rhs)
public bool2 op_LessThanOrEqual(int2 lhs, int rhs)
public bool2 op_LessThanOrEqual(int lhs, int2 rhs)
public bool2 op_GreaterThan(int2 lhs, int2 rhs)
public bool2 op_GreaterThan(int2 lhs, int rhs)
public bool2 op_GreaterThan(int lhs, int2 rhs)
public bool2 op_GreaterThanOrEqual(int2 lhs, int2 rhs)
public bool2 op_GreaterThanOrEqual(int2 lhs, int rhs)
public bool2 op_GreaterThanOrEqual(int lhs, int2 rhs)
public int2 op_UnaryNegation(int2 val)
public int2 op_UnaryPlus(int2 val)
public int2 op_LeftShift(int2 x, int n)
public int2 op_RightShift(int2 x, int n)
public bool2 op_Equality(int2 lhs, int2 rhs)
public bool2 op_Equality(int2 lhs, int rhs)
public bool2 op_Equality(int lhs, int2 rhs)
public bool2 op_Inequality(int2 lhs, int2 rhs)
public bool2 op_Inequality(int2 lhs, int rhs)
public bool2 op_Inequality(int lhs, int2 rhs)
public int2 op_OnesComplement(int2 val)
public int2 op_BitwiseAnd(int2 lhs, int2 rhs)
public int2 op_BitwiseAnd(int2 lhs, int rhs)
public int2 op_BitwiseAnd(int lhs, int2 rhs)
public int2 op_BitwiseOr(int2 lhs, int2 rhs)
public int2 op_BitwiseOr(int2 lhs, int rhs)
public int2 op_BitwiseOr(int lhs, int2 rhs)
public int2 op_ExclusiveOr(int2 lhs, int2 rhs)
public int2 op_ExclusiveOr(int2 lhs, int rhs)
public int2 op_ExclusiveOr(int lhs, int2 rhs)
public int4 get_xxxx()
public int4 get_xxxy()
public int4 get_xxyx()
public int4 get_xxyy()
public int4 get_xyxx()
public int4 get_xyxy()
public int4 get_xyyx()
public int4 get_xyyy()
public int4 get_yxxx()
public int4 get_yxxy()
public int4 get_yxyx()
public int4 get_yxyy()
public int4 get_yyxx()
public int4 get_yyxy()
public int4 get_yyyx()
public int4 get_yyyy()
public int3 get_xxx()
public int3 get_xxy()
public int3 get_xyx()
public int3 get_xyy()
public int3 get_yxx()
public int3 get_yxy()
public int3 get_yyx()
public int3 get_yyy()
public int2 get_xx()
public int2 get_xy()
public void set_xy(int2 value)
public int2 get_yx()
public void set_yx(int2 value)
public int2 get_yy()
public int get_Item(int index)
public void set_Item(int index, int value)
public bool Equals(int2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int2x2 : ValueType {
public int2 c0
public int2 c1
public int2x2 identity
public int2x2 zero
public int2& Item
public void .ctor(int2 c0, int2 c1)
public void .ctor(int m00, int m01, int m10, int m11)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool2x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x2 v)
public void .ctor(float v)
public void .ctor(float2x2 v)
public void .ctor(double v)
public void .ctor(double2x2 v)
public int2x2 op_Implicit(int v)
public int2x2 op_Explicit(bool v)
public int2x2 op_Explicit(bool2x2 v)
public int2x2 op_Explicit(UInt32 v)
public int2x2 op_Explicit(uint2x2 v)
public int2x2 op_Explicit(float v)
public int2x2 op_Explicit(float2x2 v)
public int2x2 op_Explicit(double v)
public int2x2 op_Explicit(double2x2 v)
public int2x2 op_Multiply(int2x2 lhs, int2x2 rhs)
public int2x2 op_Multiply(int2x2 lhs, int rhs)
public int2x2 op_Multiply(int lhs, int2x2 rhs)
public int2x2 op_Addition(int2x2 lhs, int2x2 rhs)
public int2x2 op_Addition(int2x2 lhs, int rhs)
public int2x2 op_Addition(int lhs, int2x2 rhs)
public int2x2 op_Subtraction(int2x2 lhs, int2x2 rhs)
public int2x2 op_Subtraction(int2x2 lhs, int rhs)
public int2x2 op_Subtraction(int lhs, int2x2 rhs)
public int2x2 op_Division(int2x2 lhs, int2x2 rhs)
public int2x2 op_Division(int2x2 lhs, int rhs)
public int2x2 op_Division(int lhs, int2x2 rhs)
public int2x2 op_Modulus(int2x2 lhs, int2x2 rhs)
public int2x2 op_Modulus(int2x2 lhs, int rhs)
public int2x2 op_Modulus(int lhs, int2x2 rhs)
public int2x2 op_Increment(int2x2 val)
public int2x2 op_Decrement(int2x2 val)
public bool2x2 op_LessThan(int2x2 lhs, int2x2 rhs)
public bool2x2 op_LessThan(int2x2 lhs, int rhs)
public bool2x2 op_LessThan(int lhs, int2x2 rhs)
public bool2x2 op_LessThanOrEqual(int2x2 lhs, int2x2 rhs)
public bool2x2 op_LessThanOrEqual(int2x2 lhs, int rhs)
public bool2x2 op_LessThanOrEqual(int lhs, int2x2 rhs)
public bool2x2 op_GreaterThan(int2x2 lhs, int2x2 rhs)
public bool2x2 op_GreaterThan(int2x2 lhs, int rhs)
public bool2x2 op_GreaterThan(int lhs, int2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(int2x2 lhs, int2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(int2x2 lhs, int rhs)
public bool2x2 op_GreaterThanOrEqual(int lhs, int2x2 rhs)
public int2x2 op_UnaryNegation(int2x2 val)
public int2x2 op_UnaryPlus(int2x2 val)
public int2x2 op_LeftShift(int2x2 x, int n)
public int2x2 op_RightShift(int2x2 x, int n)
public bool2x2 op_Equality(int2x2 lhs, int2x2 rhs)
public bool2x2 op_Equality(int2x2 lhs, int rhs)
public bool2x2 op_Equality(int lhs, int2x2 rhs)
public bool2x2 op_Inequality(int2x2 lhs, int2x2 rhs)
public bool2x2 op_Inequality(int2x2 lhs, int rhs)
public bool2x2 op_Inequality(int lhs, int2x2 rhs)
public int2x2 op_OnesComplement(int2x2 val)
public int2x2 op_BitwiseAnd(int2x2 lhs, int2x2 rhs)
public int2x2 op_BitwiseAnd(int2x2 lhs, int rhs)
public int2x2 op_BitwiseAnd(int lhs, int2x2 rhs)
public int2x2 op_BitwiseOr(int2x2 lhs, int2x2 rhs)
public int2x2 op_BitwiseOr(int2x2 lhs, int rhs)
public int2x2 op_BitwiseOr(int lhs, int2x2 rhs)
public int2x2 op_ExclusiveOr(int2x2 lhs, int2x2 rhs)
public int2x2 op_ExclusiveOr(int2x2 lhs, int rhs)
public int2x2 op_ExclusiveOr(int lhs, int2x2 rhs)
public int2& get_Item(int index)
public bool Equals(int2x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int2x3 : ValueType {
public int2 c0
public int2 c1
public int2 c2
public int2x3 zero
public int2& Item
public void .ctor(int2 c0, int2 c1, int2 c2)
public void .ctor(int m00, int m01, int m02, int m10, int m11, int m12)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool2x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x3 v)
public void .ctor(float v)
public void .ctor(float2x3 v)
public void .ctor(double v)
public void .ctor(double2x3 v)
public int2x3 op_Implicit(int v)
public int2x3 op_Explicit(bool v)
public int2x3 op_Explicit(bool2x3 v)
public int2x3 op_Explicit(UInt32 v)
public int2x3 op_Explicit(uint2x3 v)
public int2x3 op_Explicit(float v)
public int2x3 op_Explicit(float2x3 v)
public int2x3 op_Explicit(double v)
public int2x3 op_Explicit(double2x3 v)
public int2x3 op_Multiply(int2x3 lhs, int2x3 rhs)
public int2x3 op_Multiply(int2x3 lhs, int rhs)
public int2x3 op_Multiply(int lhs, int2x3 rhs)
public int2x3 op_Addition(int2x3 lhs, int2x3 rhs)
public int2x3 op_Addition(int2x3 lhs, int rhs)
public int2x3 op_Addition(int lhs, int2x3 rhs)
public int2x3 op_Subtraction(int2x3 lhs, int2x3 rhs)
public int2x3 op_Subtraction(int2x3 lhs, int rhs)
public int2x3 op_Subtraction(int lhs, int2x3 rhs)
public int2x3 op_Division(int2x3 lhs, int2x3 rhs)
public int2x3 op_Division(int2x3 lhs, int rhs)
public int2x3 op_Division(int lhs, int2x3 rhs)
public int2x3 op_Modulus(int2x3 lhs, int2x3 rhs)
public int2x3 op_Modulus(int2x3 lhs, int rhs)
public int2x3 op_Modulus(int lhs, int2x3 rhs)
public int2x3 op_Increment(int2x3 val)
public int2x3 op_Decrement(int2x3 val)
public bool2x3 op_LessThan(int2x3 lhs, int2x3 rhs)
public bool2x3 op_LessThan(int2x3 lhs, int rhs)
public bool2x3 op_LessThan(int lhs, int2x3 rhs)
public bool2x3 op_LessThanOrEqual(int2x3 lhs, int2x3 rhs)
public bool2x3 op_LessThanOrEqual(int2x3 lhs, int rhs)
public bool2x3 op_LessThanOrEqual(int lhs, int2x3 rhs)
public bool2x3 op_GreaterThan(int2x3 lhs, int2x3 rhs)
public bool2x3 op_GreaterThan(int2x3 lhs, int rhs)
public bool2x3 op_GreaterThan(int lhs, int2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(int2x3 lhs, int2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(int2x3 lhs, int rhs)
public bool2x3 op_GreaterThanOrEqual(int lhs, int2x3 rhs)
public int2x3 op_UnaryNegation(int2x3 val)
public int2x3 op_UnaryPlus(int2x3 val)
public int2x3 op_LeftShift(int2x3 x, int n)
public int2x3 op_RightShift(int2x3 x, int n)
public bool2x3 op_Equality(int2x3 lhs, int2x3 rhs)
public bool2x3 op_Equality(int2x3 lhs, int rhs)
public bool2x3 op_Equality(int lhs, int2x3 rhs)
public bool2x3 op_Inequality(int2x3 lhs, int2x3 rhs)
public bool2x3 op_Inequality(int2x3 lhs, int rhs)
public bool2x3 op_Inequality(int lhs, int2x3 rhs)
public int2x3 op_OnesComplement(int2x3 val)
public int2x3 op_BitwiseAnd(int2x3 lhs, int2x3 rhs)
public int2x3 op_BitwiseAnd(int2x3 lhs, int rhs)
public int2x3 op_BitwiseAnd(int lhs, int2x3 rhs)
public int2x3 op_BitwiseOr(int2x3 lhs, int2x3 rhs)
public int2x3 op_BitwiseOr(int2x3 lhs, int rhs)
public int2x3 op_BitwiseOr(int lhs, int2x3 rhs)
public int2x3 op_ExclusiveOr(int2x3 lhs, int2x3 rhs)
public int2x3 op_ExclusiveOr(int2x3 lhs, int rhs)
public int2x3 op_ExclusiveOr(int lhs, int2x3 rhs)
public int2& get_Item(int index)
public bool Equals(int2x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int2x4 : ValueType {
public int2 c0
public int2 c1
public int2 c2
public int2 c3
public int2x4 zero
public int2& Item
public void .ctor(int2 c0, int2 c1, int2 c2, int2 c3)
public void .ctor(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool2x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint2x4 v)
public void .ctor(float v)
public void .ctor(float2x4 v)
public void .ctor(double v)
public void .ctor(double2x4 v)
public int2x4 op_Implicit(int v)
public int2x4 op_Explicit(bool v)
public int2x4 op_Explicit(bool2x4 v)
public int2x4 op_Explicit(UInt32 v)
public int2x4 op_Explicit(uint2x4 v)
public int2x4 op_Explicit(float v)
public int2x4 op_Explicit(float2x4 v)
public int2x4 op_Explicit(double v)
public int2x4 op_Explicit(double2x4 v)
public int2x4 op_Multiply(int2x4 lhs, int2x4 rhs)
public int2x4 op_Multiply(int2x4 lhs, int rhs)
public int2x4 op_Multiply(int lhs, int2x4 rhs)
public int2x4 op_Addition(int2x4 lhs, int2x4 rhs)
public int2x4 op_Addition(int2x4 lhs, int rhs)
public int2x4 op_Addition(int lhs, int2x4 rhs)
public int2x4 op_Subtraction(int2x4 lhs, int2x4 rhs)
public int2x4 op_Subtraction(int2x4 lhs, int rhs)
public int2x4 op_Subtraction(int lhs, int2x4 rhs)
public int2x4 op_Division(int2x4 lhs, int2x4 rhs)
public int2x4 op_Division(int2x4 lhs, int rhs)
public int2x4 op_Division(int lhs, int2x4 rhs)
public int2x4 op_Modulus(int2x4 lhs, int2x4 rhs)
public int2x4 op_Modulus(int2x4 lhs, int rhs)
public int2x4 op_Modulus(int lhs, int2x4 rhs)
public int2x4 op_Increment(int2x4 val)
public int2x4 op_Decrement(int2x4 val)
public bool2x4 op_LessThan(int2x4 lhs, int2x4 rhs)
public bool2x4 op_LessThan(int2x4 lhs, int rhs)
public bool2x4 op_LessThan(int lhs, int2x4 rhs)
public bool2x4 op_LessThanOrEqual(int2x4 lhs, int2x4 rhs)
public bool2x4 op_LessThanOrEqual(int2x4 lhs, int rhs)
public bool2x4 op_LessThanOrEqual(int lhs, int2x4 rhs)
public bool2x4 op_GreaterThan(int2x4 lhs, int2x4 rhs)
public bool2x4 op_GreaterThan(int2x4 lhs, int rhs)
public bool2x4 op_GreaterThan(int lhs, int2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(int2x4 lhs, int2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(int2x4 lhs, int rhs)
public bool2x4 op_GreaterThanOrEqual(int lhs, int2x4 rhs)
public int2x4 op_UnaryNegation(int2x4 val)
public int2x4 op_UnaryPlus(int2x4 val)
public int2x4 op_LeftShift(int2x4 x, int n)
public int2x4 op_RightShift(int2x4 x, int n)
public bool2x4 op_Equality(int2x4 lhs, int2x4 rhs)
public bool2x4 op_Equality(int2x4 lhs, int rhs)
public bool2x4 op_Equality(int lhs, int2x4 rhs)
public bool2x4 op_Inequality(int2x4 lhs, int2x4 rhs)
public bool2x4 op_Inequality(int2x4 lhs, int rhs)
public bool2x4 op_Inequality(int lhs, int2x4 rhs)
public int2x4 op_OnesComplement(int2x4 val)
public int2x4 op_BitwiseAnd(int2x4 lhs, int2x4 rhs)
public int2x4 op_BitwiseAnd(int2x4 lhs, int rhs)
public int2x4 op_BitwiseAnd(int lhs, int2x4 rhs)
public int2x4 op_BitwiseOr(int2x4 lhs, int2x4 rhs)
public int2x4 op_BitwiseOr(int2x4 lhs, int rhs)
public int2x4 op_BitwiseOr(int lhs, int2x4 rhs)
public int2x4 op_ExclusiveOr(int2x4 lhs, int2x4 rhs)
public int2x4 op_ExclusiveOr(int2x4 lhs, int rhs)
public int2x4 op_ExclusiveOr(int lhs, int2x4 rhs)
public int2& get_Item(int index)
public bool Equals(int2x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int3 : ValueType {
public int x
public int y
public int z
public int3 zero
public int4 xxxx
public int4 xxxy
public int4 xxxz
public int4 xxyx
public int4 xxyy
public int4 xxyz
public int4 xxzx
public int4 xxzy
public int4 xxzz
public int4 xyxx
public int4 xyxy
public int4 xyxz
public int4 xyyx
public int4 xyyy
public int4 xyyz
public int4 xyzx
public int4 xyzy
public int4 xyzz
public int4 xzxx
public int4 xzxy
public int4 xzxz
public int4 xzyx
public int4 xzyy
public int4 xzyz
public int4 xzzx
public int4 xzzy
public int4 xzzz
public int4 yxxx
public int4 yxxy
public int4 yxxz
public int4 yxyx
public int4 yxyy
public int4 yxyz
public int4 yxzx
public int4 yxzy
public int4 yxzz
public int4 yyxx
public int4 yyxy
public int4 yyxz
public int4 yyyx
public int4 yyyy
public int4 yyyz
public int4 yyzx
public int4 yyzy
public int4 yyzz
public int4 yzxx
public int4 yzxy
public int4 yzxz
public int4 yzyx
public int4 yzyy
public int4 yzyz
public int4 yzzx
public int4 yzzy
public int4 yzzz
public int4 zxxx
public int4 zxxy
public int4 zxxz
public int4 zxyx
public int4 zxyy
public int4 zxyz
public int4 zxzx
public int4 zxzy
public int4 zxzz
public int4 zyxx
public int4 zyxy
public int4 zyxz
public int4 zyyx
public int4 zyyy
public int4 zyyz
public int4 zyzx
public int4 zyzy
public int4 zyzz
public int4 zzxx
public int4 zzxy
public int4 zzxz
public int4 zzyx
public int4 zzyy
public int4 zzyz
public int4 zzzx
public int4 zzzy
public int4 zzzz
public int3 xxx
public int3 xxy
public int3 xxz
public int3 xyx
public int3 xyy
public int3 xyz
public int3 xzx
public int3 xzy
public int3 xzz
public int3 yxx
public int3 yxy
public int3 yxz
public int3 yyx
public int3 yyy
public int3 yyz
public int3 yzx
public int3 yzy
public int3 yzz
public int3 zxx
public int3 zxy
public int3 zxz
public int3 zyx
public int3 zyy
public int3 zyz
public int3 zzx
public int3 zzy
public int3 zzz
public int2 xx
public int2 xy
public int2 xz
public int2 yx
public int2 yy
public int2 yz
public int2 zx
public int2 zy
public int2 zz
public int Item
public void .ctor(int x, int y, int z)
public void .ctor(int x, int2 yz)
public void .ctor(int2 xy, int z)
public void .ctor(int3 xyz)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool3 v)
public void .ctor(UInt32 v)
public void .ctor(uint3 v)
public void .ctor(float v)
public void .ctor(float3 v)
public void .ctor(double v)
public void .ctor(double3 v)
public int3 op_Implicit(int v)
public int3 op_Explicit(bool v)
public int3 op_Explicit(bool3 v)
public int3 op_Explicit(UInt32 v)
public int3 op_Explicit(uint3 v)
public int3 op_Explicit(float v)
public int3 op_Explicit(float3 v)
public int3 op_Explicit(double v)
public int3 op_Explicit(double3 v)
public int3 op_Multiply(int3 lhs, int3 rhs)
public int3 op_Multiply(int3 lhs, int rhs)
public int3 op_Multiply(int lhs, int3 rhs)
public int3 op_Addition(int3 lhs, int3 rhs)
public int3 op_Addition(int3 lhs, int rhs)
public int3 op_Addition(int lhs, int3 rhs)
public int3 op_Subtraction(int3 lhs, int3 rhs)
public int3 op_Subtraction(int3 lhs, int rhs)
public int3 op_Subtraction(int lhs, int3 rhs)
public int3 op_Division(int3 lhs, int3 rhs)
public int3 op_Division(int3 lhs, int rhs)
public int3 op_Division(int lhs, int3 rhs)
public int3 op_Modulus(int3 lhs, int3 rhs)
public int3 op_Modulus(int3 lhs, int rhs)
public int3 op_Modulus(int lhs, int3 rhs)
public int3 op_Increment(int3 val)
public int3 op_Decrement(int3 val)
public bool3 op_LessThan(int3 lhs, int3 rhs)
public bool3 op_LessThan(int3 lhs, int rhs)
public bool3 op_LessThan(int lhs, int3 rhs)
public bool3 op_LessThanOrEqual(int3 lhs, int3 rhs)
public bool3 op_LessThanOrEqual(int3 lhs, int rhs)
public bool3 op_LessThanOrEqual(int lhs, int3 rhs)
public bool3 op_GreaterThan(int3 lhs, int3 rhs)
public bool3 op_GreaterThan(int3 lhs, int rhs)
public bool3 op_GreaterThan(int lhs, int3 rhs)
public bool3 op_GreaterThanOrEqual(int3 lhs, int3 rhs)
public bool3 op_GreaterThanOrEqual(int3 lhs, int rhs)
public bool3 op_GreaterThanOrEqual(int lhs, int3 rhs)
public int3 op_UnaryNegation(int3 val)
public int3 op_UnaryPlus(int3 val)
public int3 op_LeftShift(int3 x, int n)
public int3 op_RightShift(int3 x, int n)
public bool3 op_Equality(int3 lhs, int3 rhs)
public bool3 op_Equality(int3 lhs, int rhs)
public bool3 op_Equality(int lhs, int3 rhs)
public bool3 op_Inequality(int3 lhs, int3 rhs)
public bool3 op_Inequality(int3 lhs, int rhs)
public bool3 op_Inequality(int lhs, int3 rhs)
public int3 op_OnesComplement(int3 val)
public int3 op_BitwiseAnd(int3 lhs, int3 rhs)
public int3 op_BitwiseAnd(int3 lhs, int rhs)
public int3 op_BitwiseAnd(int lhs, int3 rhs)
public int3 op_BitwiseOr(int3 lhs, int3 rhs)
public int3 op_BitwiseOr(int3 lhs, int rhs)
public int3 op_BitwiseOr(int lhs, int3 rhs)
public int3 op_ExclusiveOr(int3 lhs, int3 rhs)
public int3 op_ExclusiveOr(int3 lhs, int rhs)
public int3 op_ExclusiveOr(int lhs, int3 rhs)
public int4 get_xxxx()
public int4 get_xxxy()
public int4 get_xxxz()
public int4 get_xxyx()
public int4 get_xxyy()
public int4 get_xxyz()
public int4 get_xxzx()
public int4 get_xxzy()
public int4 get_xxzz()
public int4 get_xyxx()
public int4 get_xyxy()
public int4 get_xyxz()
public int4 get_xyyx()
public int4 get_xyyy()
public int4 get_xyyz()
public int4 get_xyzx()
public int4 get_xyzy()
public int4 get_xyzz()
public int4 get_xzxx()
public int4 get_xzxy()
public int4 get_xzxz()
public int4 get_xzyx()
public int4 get_xzyy()
public int4 get_xzyz()
public int4 get_xzzx()
public int4 get_xzzy()
public int4 get_xzzz()
public int4 get_yxxx()
public int4 get_yxxy()
public int4 get_yxxz()
public int4 get_yxyx()
public int4 get_yxyy()
public int4 get_yxyz()
public int4 get_yxzx()
public int4 get_yxzy()
public int4 get_yxzz()
public int4 get_yyxx()
public int4 get_yyxy()
public int4 get_yyxz()
public int4 get_yyyx()
public int4 get_yyyy()
public int4 get_yyyz()
public int4 get_yyzx()
public int4 get_yyzy()
public int4 get_yyzz()
public int4 get_yzxx()
public int4 get_yzxy()
public int4 get_yzxz()
public int4 get_yzyx()
public int4 get_yzyy()
public int4 get_yzyz()
public int4 get_yzzx()
public int4 get_yzzy()
public int4 get_yzzz()
public int4 get_zxxx()
public int4 get_zxxy()
public int4 get_zxxz()
public int4 get_zxyx()
public int4 get_zxyy()
public int4 get_zxyz()
public int4 get_zxzx()
public int4 get_zxzy()
public int4 get_zxzz()
public int4 get_zyxx()
public int4 get_zyxy()
public int4 get_zyxz()
public int4 get_zyyx()
public int4 get_zyyy()
public int4 get_zyyz()
public int4 get_zyzx()
public int4 get_zyzy()
public int4 get_zyzz()
public int4 get_zzxx()
public int4 get_zzxy()
public int4 get_zzxz()
public int4 get_zzyx()
public int4 get_zzyy()
public int4 get_zzyz()
public int4 get_zzzx()
public int4 get_zzzy()
public int4 get_zzzz()
public int3 get_xxx()
public int3 get_xxy()
public int3 get_xxz()
public int3 get_xyx()
public int3 get_xyy()
public int3 get_xyz()
public void set_xyz(int3 value)
public int3 get_xzx()
public int3 get_xzy()
public void set_xzy(int3 value)
public int3 get_xzz()
public int3 get_yxx()
public int3 get_yxy()
public int3 get_yxz()
public void set_yxz(int3 value)
public int3 get_yyx()
public int3 get_yyy()
public int3 get_yyz()
public int3 get_yzx()
public void set_yzx(int3 value)
public int3 get_yzy()
public int3 get_yzz()
public int3 get_zxx()
public int3 get_zxy()
public void set_zxy(int3 value)
public int3 get_zxz()
public int3 get_zyx()
public void set_zyx(int3 value)
public int3 get_zyy()
public int3 get_zyz()
public int3 get_zzx()
public int3 get_zzy()
public int3 get_zzz()
public int2 get_xx()
public int2 get_xy()
public void set_xy(int2 value)
public int2 get_xz()
public void set_xz(int2 value)
public int2 get_yx()
public void set_yx(int2 value)
public int2 get_yy()
public int2 get_yz()
public void set_yz(int2 value)
public int2 get_zx()
public void set_zx(int2 value)
public int2 get_zy()
public void set_zy(int2 value)
public int2 get_zz()
public int get_Item(int index)
public void set_Item(int index, int value)
public bool Equals(int3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int3x2 : ValueType {
public int3 c0
public int3 c1
public int3x2 zero
public int3& Item
public void .ctor(int3 c0, int3 c1)
public void .ctor(int m00, int m01, int m10, int m11, int m20, int m21)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool3x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x2 v)
public void .ctor(float v)
public void .ctor(float3x2 v)
public void .ctor(double v)
public void .ctor(double3x2 v)
public int3x2 op_Implicit(int v)
public int3x2 op_Explicit(bool v)
public int3x2 op_Explicit(bool3x2 v)
public int3x2 op_Explicit(UInt32 v)
public int3x2 op_Explicit(uint3x2 v)
public int3x2 op_Explicit(float v)
public int3x2 op_Explicit(float3x2 v)
public int3x2 op_Explicit(double v)
public int3x2 op_Explicit(double3x2 v)
public int3x2 op_Multiply(int3x2 lhs, int3x2 rhs)
public int3x2 op_Multiply(int3x2 lhs, int rhs)
public int3x2 op_Multiply(int lhs, int3x2 rhs)
public int3x2 op_Addition(int3x2 lhs, int3x2 rhs)
public int3x2 op_Addition(int3x2 lhs, int rhs)
public int3x2 op_Addition(int lhs, int3x2 rhs)
public int3x2 op_Subtraction(int3x2 lhs, int3x2 rhs)
public int3x2 op_Subtraction(int3x2 lhs, int rhs)
public int3x2 op_Subtraction(int lhs, int3x2 rhs)
public int3x2 op_Division(int3x2 lhs, int3x2 rhs)
public int3x2 op_Division(int3x2 lhs, int rhs)
public int3x2 op_Division(int lhs, int3x2 rhs)
public int3x2 op_Modulus(int3x2 lhs, int3x2 rhs)
public int3x2 op_Modulus(int3x2 lhs, int rhs)
public int3x2 op_Modulus(int lhs, int3x2 rhs)
public int3x2 op_Increment(int3x2 val)
public int3x2 op_Decrement(int3x2 val)
public bool3x2 op_LessThan(int3x2 lhs, int3x2 rhs)
public bool3x2 op_LessThan(int3x2 lhs, int rhs)
public bool3x2 op_LessThan(int lhs, int3x2 rhs)
public bool3x2 op_LessThanOrEqual(int3x2 lhs, int3x2 rhs)
public bool3x2 op_LessThanOrEqual(int3x2 lhs, int rhs)
public bool3x2 op_LessThanOrEqual(int lhs, int3x2 rhs)
public bool3x2 op_GreaterThan(int3x2 lhs, int3x2 rhs)
public bool3x2 op_GreaterThan(int3x2 lhs, int rhs)
public bool3x2 op_GreaterThan(int lhs, int3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(int3x2 lhs, int3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(int3x2 lhs, int rhs)
public bool3x2 op_GreaterThanOrEqual(int lhs, int3x2 rhs)
public int3x2 op_UnaryNegation(int3x2 val)
public int3x2 op_UnaryPlus(int3x2 val)
public int3x2 op_LeftShift(int3x2 x, int n)
public int3x2 op_RightShift(int3x2 x, int n)
public bool3x2 op_Equality(int3x2 lhs, int3x2 rhs)
public bool3x2 op_Equality(int3x2 lhs, int rhs)
public bool3x2 op_Equality(int lhs, int3x2 rhs)
public bool3x2 op_Inequality(int3x2 lhs, int3x2 rhs)
public bool3x2 op_Inequality(int3x2 lhs, int rhs)
public bool3x2 op_Inequality(int lhs, int3x2 rhs)
public int3x2 op_OnesComplement(int3x2 val)
public int3x2 op_BitwiseAnd(int3x2 lhs, int3x2 rhs)
public int3x2 op_BitwiseAnd(int3x2 lhs, int rhs)
public int3x2 op_BitwiseAnd(int lhs, int3x2 rhs)
public int3x2 op_BitwiseOr(int3x2 lhs, int3x2 rhs)
public int3x2 op_BitwiseOr(int3x2 lhs, int rhs)
public int3x2 op_BitwiseOr(int lhs, int3x2 rhs)
public int3x2 op_ExclusiveOr(int3x2 lhs, int3x2 rhs)
public int3x2 op_ExclusiveOr(int3x2 lhs, int rhs)
public int3x2 op_ExclusiveOr(int lhs, int3x2 rhs)
public int3& get_Item(int index)
public bool Equals(int3x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int3x3 : ValueType {
public int3 c0
public int3 c1
public int3 c2
public int3x3 identity
public int3x3 zero
public int3& Item
public void .ctor(int3 c0, int3 c1, int3 c2)
public void .ctor(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool3x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x3 v)
public void .ctor(float v)
public void .ctor(float3x3 v)
public void .ctor(double v)
public void .ctor(double3x3 v)
public int3x3 op_Implicit(int v)
public int3x3 op_Explicit(bool v)
public int3x3 op_Explicit(bool3x3 v)
public int3x3 op_Explicit(UInt32 v)
public int3x3 op_Explicit(uint3x3 v)
public int3x3 op_Explicit(float v)
public int3x3 op_Explicit(float3x3 v)
public int3x3 op_Explicit(double v)
public int3x3 op_Explicit(double3x3 v)
public int3x3 op_Multiply(int3x3 lhs, int3x3 rhs)
public int3x3 op_Multiply(int3x3 lhs, int rhs)
public int3x3 op_Multiply(int lhs, int3x3 rhs)
public int3x3 op_Addition(int3x3 lhs, int3x3 rhs)
public int3x3 op_Addition(int3x3 lhs, int rhs)
public int3x3 op_Addition(int lhs, int3x3 rhs)
public int3x3 op_Subtraction(int3x3 lhs, int3x3 rhs)
public int3x3 op_Subtraction(int3x3 lhs, int rhs)
public int3x3 op_Subtraction(int lhs, int3x3 rhs)
public int3x3 op_Division(int3x3 lhs, int3x3 rhs)
public int3x3 op_Division(int3x3 lhs, int rhs)
public int3x3 op_Division(int lhs, int3x3 rhs)
public int3x3 op_Modulus(int3x3 lhs, int3x3 rhs)
public int3x3 op_Modulus(int3x3 lhs, int rhs)
public int3x3 op_Modulus(int lhs, int3x3 rhs)
public int3x3 op_Increment(int3x3 val)
public int3x3 op_Decrement(int3x3 val)
public bool3x3 op_LessThan(int3x3 lhs, int3x3 rhs)
public bool3x3 op_LessThan(int3x3 lhs, int rhs)
public bool3x3 op_LessThan(int lhs, int3x3 rhs)
public bool3x3 op_LessThanOrEqual(int3x3 lhs, int3x3 rhs)
public bool3x3 op_LessThanOrEqual(int3x3 lhs, int rhs)
public bool3x3 op_LessThanOrEqual(int lhs, int3x3 rhs)
public bool3x3 op_GreaterThan(int3x3 lhs, int3x3 rhs)
public bool3x3 op_GreaterThan(int3x3 lhs, int rhs)
public bool3x3 op_GreaterThan(int lhs, int3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(int3x3 lhs, int3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(int3x3 lhs, int rhs)
public bool3x3 op_GreaterThanOrEqual(int lhs, int3x3 rhs)
public int3x3 op_UnaryNegation(int3x3 val)
public int3x3 op_UnaryPlus(int3x3 val)
public int3x3 op_LeftShift(int3x3 x, int n)
public int3x3 op_RightShift(int3x3 x, int n)
public bool3x3 op_Equality(int3x3 lhs, int3x3 rhs)
public bool3x3 op_Equality(int3x3 lhs, int rhs)
public bool3x3 op_Equality(int lhs, int3x3 rhs)
public bool3x3 op_Inequality(int3x3 lhs, int3x3 rhs)
public bool3x3 op_Inequality(int3x3 lhs, int rhs)
public bool3x3 op_Inequality(int lhs, int3x3 rhs)
public int3x3 op_OnesComplement(int3x3 val)
public int3x3 op_BitwiseAnd(int3x3 lhs, int3x3 rhs)
public int3x3 op_BitwiseAnd(int3x3 lhs, int rhs)
public int3x3 op_BitwiseAnd(int lhs, int3x3 rhs)
public int3x3 op_BitwiseOr(int3x3 lhs, int3x3 rhs)
public int3x3 op_BitwiseOr(int3x3 lhs, int rhs)
public int3x3 op_BitwiseOr(int lhs, int3x3 rhs)
public int3x3 op_ExclusiveOr(int3x3 lhs, int3x3 rhs)
public int3x3 op_ExclusiveOr(int3x3 lhs, int rhs)
public int3x3 op_ExclusiveOr(int lhs, int3x3 rhs)
public int3& get_Item(int index)
public bool Equals(int3x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int3x4 : ValueType {
public int3 c0
public int3 c1
public int3 c2
public int3 c3
public int3x4 zero
public int3& Item
public void .ctor(int3 c0, int3 c1, int3 c2, int3 c3)
public void .ctor(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool3x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint3x4 v)
public void .ctor(float v)
public void .ctor(float3x4 v)
public void .ctor(double v)
public void .ctor(double3x4 v)
public int3x4 op_Implicit(int v)
public int3x4 op_Explicit(bool v)
public int3x4 op_Explicit(bool3x4 v)
public int3x4 op_Explicit(UInt32 v)
public int3x4 op_Explicit(uint3x4 v)
public int3x4 op_Explicit(float v)
public int3x4 op_Explicit(float3x4 v)
public int3x4 op_Explicit(double v)
public int3x4 op_Explicit(double3x4 v)
public int3x4 op_Multiply(int3x4 lhs, int3x4 rhs)
public int3x4 op_Multiply(int3x4 lhs, int rhs)
public int3x4 op_Multiply(int lhs, int3x4 rhs)
public int3x4 op_Addition(int3x4 lhs, int3x4 rhs)
public int3x4 op_Addition(int3x4 lhs, int rhs)
public int3x4 op_Addition(int lhs, int3x4 rhs)
public int3x4 op_Subtraction(int3x4 lhs, int3x4 rhs)
public int3x4 op_Subtraction(int3x4 lhs, int rhs)
public int3x4 op_Subtraction(int lhs, int3x4 rhs)
public int3x4 op_Division(int3x4 lhs, int3x4 rhs)
public int3x4 op_Division(int3x4 lhs, int rhs)
public int3x4 op_Division(int lhs, int3x4 rhs)
public int3x4 op_Modulus(int3x4 lhs, int3x4 rhs)
public int3x4 op_Modulus(int3x4 lhs, int rhs)
public int3x4 op_Modulus(int lhs, int3x4 rhs)
public int3x4 op_Increment(int3x4 val)
public int3x4 op_Decrement(int3x4 val)
public bool3x4 op_LessThan(int3x4 lhs, int3x4 rhs)
public bool3x4 op_LessThan(int3x4 lhs, int rhs)
public bool3x4 op_LessThan(int lhs, int3x4 rhs)
public bool3x4 op_LessThanOrEqual(int3x4 lhs, int3x4 rhs)
public bool3x4 op_LessThanOrEqual(int3x4 lhs, int rhs)
public bool3x4 op_LessThanOrEqual(int lhs, int3x4 rhs)
public bool3x4 op_GreaterThan(int3x4 lhs, int3x4 rhs)
public bool3x4 op_GreaterThan(int3x4 lhs, int rhs)
public bool3x4 op_GreaterThan(int lhs, int3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(int3x4 lhs, int3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(int3x4 lhs, int rhs)
public bool3x4 op_GreaterThanOrEqual(int lhs, int3x4 rhs)
public int3x4 op_UnaryNegation(int3x4 val)
public int3x4 op_UnaryPlus(int3x4 val)
public int3x4 op_LeftShift(int3x4 x, int n)
public int3x4 op_RightShift(int3x4 x, int n)
public bool3x4 op_Equality(int3x4 lhs, int3x4 rhs)
public bool3x4 op_Equality(int3x4 lhs, int rhs)
public bool3x4 op_Equality(int lhs, int3x4 rhs)
public bool3x4 op_Inequality(int3x4 lhs, int3x4 rhs)
public bool3x4 op_Inequality(int3x4 lhs, int rhs)
public bool3x4 op_Inequality(int lhs, int3x4 rhs)
public int3x4 op_OnesComplement(int3x4 val)
public int3x4 op_BitwiseAnd(int3x4 lhs, int3x4 rhs)
public int3x4 op_BitwiseAnd(int3x4 lhs, int rhs)
public int3x4 op_BitwiseAnd(int lhs, int3x4 rhs)
public int3x4 op_BitwiseOr(int3x4 lhs, int3x4 rhs)
public int3x4 op_BitwiseOr(int3x4 lhs, int rhs)
public int3x4 op_BitwiseOr(int lhs, int3x4 rhs)
public int3x4 op_ExclusiveOr(int3x4 lhs, int3x4 rhs)
public int3x4 op_ExclusiveOr(int3x4 lhs, int rhs)
public int3x4 op_ExclusiveOr(int lhs, int3x4 rhs)
public int3& get_Item(int index)
public bool Equals(int3x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int4 : ValueType {
public int x
public int y
public int z
public int w
public int4 zero
public int4 xxxx
public int4 xxxy
public int4 xxxz
public int4 xxxw
public int4 xxyx
public int4 xxyy
public int4 xxyz
public int4 xxyw
public int4 xxzx
public int4 xxzy
public int4 xxzz
public int4 xxzw
public int4 xxwx
public int4 xxwy
public int4 xxwz
public int4 xxww
public int4 xyxx
public int4 xyxy
public int4 xyxz
public int4 xyxw
public int4 xyyx
public int4 xyyy
public int4 xyyz
public int4 xyyw
public int4 xyzx
public int4 xyzy
public int4 xyzz
public int4 xyzw
public int4 xywx
public int4 xywy
public int4 xywz
public int4 xyww
public int4 xzxx
public int4 xzxy
public int4 xzxz
public int4 xzxw
public int4 xzyx
public int4 xzyy
public int4 xzyz
public int4 xzyw
public int4 xzzx
public int4 xzzy
public int4 xzzz
public int4 xzzw
public int4 xzwx
public int4 xzwy
public int4 xzwz
public int4 xzww
public int4 xwxx
public int4 xwxy
public int4 xwxz
public int4 xwxw
public int4 xwyx
public int4 xwyy
public int4 xwyz
public int4 xwyw
public int4 xwzx
public int4 xwzy
public int4 xwzz
public int4 xwzw
public int4 xwwx
public int4 xwwy
public int4 xwwz
public int4 xwww
public int4 yxxx
public int4 yxxy
public int4 yxxz
public int4 yxxw
public int4 yxyx
public int4 yxyy
public int4 yxyz
public int4 yxyw
public int4 yxzx
public int4 yxzy
public int4 yxzz
public int4 yxzw
public int4 yxwx
public int4 yxwy
public int4 yxwz
public int4 yxww
public int4 yyxx
public int4 yyxy
public int4 yyxz
public int4 yyxw
public int4 yyyx
public int4 yyyy
public int4 yyyz
public int4 yyyw
public int4 yyzx
public int4 yyzy
public int4 yyzz
public int4 yyzw
public int4 yywx
public int4 yywy
public int4 yywz
public int4 yyww
public int4 yzxx
public int4 yzxy
public int4 yzxz
public int4 yzxw
public int4 yzyx
public int4 yzyy
public int4 yzyz
public int4 yzyw
public int4 yzzx
public int4 yzzy
public int4 yzzz
public int4 yzzw
public int4 yzwx
public int4 yzwy
public int4 yzwz
public int4 yzww
public int4 ywxx
public int4 ywxy
public int4 ywxz
public int4 ywxw
public int4 ywyx
public int4 ywyy
public int4 ywyz
public int4 ywyw
public int4 ywzx
public int4 ywzy
public int4 ywzz
public int4 ywzw
public int4 ywwx
public int4 ywwy
public int4 ywwz
public int4 ywww
public int4 zxxx
public int4 zxxy
public int4 zxxz
public int4 zxxw
public int4 zxyx
public int4 zxyy
public int4 zxyz
public int4 zxyw
public int4 zxzx
public int4 zxzy
public int4 zxzz
public int4 zxzw
public int4 zxwx
public int4 zxwy
public int4 zxwz
public int4 zxww
public int4 zyxx
public int4 zyxy
public int4 zyxz
public int4 zyxw
public int4 zyyx
public int4 zyyy
public int4 zyyz
public int4 zyyw
public int4 zyzx
public int4 zyzy
public int4 zyzz
public int4 zyzw
public int4 zywx
public int4 zywy
public int4 zywz
public int4 zyww
public int4 zzxx
public int4 zzxy
public int4 zzxz
public int4 zzxw
public int4 zzyx
public int4 zzyy
public int4 zzyz
public int4 zzyw
public int4 zzzx
public int4 zzzy
public int4 zzzz
public int4 zzzw
public int4 zzwx
public int4 zzwy
public int4 zzwz
public int4 zzww
public int4 zwxx
public int4 zwxy
public int4 zwxz
public int4 zwxw
public int4 zwyx
public int4 zwyy
public int4 zwyz
public int4 zwyw
public int4 zwzx
public int4 zwzy
public int4 zwzz
public int4 zwzw
public int4 zwwx
public int4 zwwy
public int4 zwwz
public int4 zwww
public int4 wxxx
public int4 wxxy
public int4 wxxz
public int4 wxxw
public int4 wxyx
public int4 wxyy
public int4 wxyz
public int4 wxyw
public int4 wxzx
public int4 wxzy
public int4 wxzz
public int4 wxzw
public int4 wxwx
public int4 wxwy
public int4 wxwz
public int4 wxww
public int4 wyxx
public int4 wyxy
public int4 wyxz
public int4 wyxw
public int4 wyyx
public int4 wyyy
public int4 wyyz
public int4 wyyw
public int4 wyzx
public int4 wyzy
public int4 wyzz
public int4 wyzw
public int4 wywx
public int4 wywy
public int4 wywz
public int4 wyww
public int4 wzxx
public int4 wzxy
public int4 wzxz
public int4 wzxw
public int4 wzyx
public int4 wzyy
public int4 wzyz
public int4 wzyw
public int4 wzzx
public int4 wzzy
public int4 wzzz
public int4 wzzw
public int4 wzwx
public int4 wzwy
public int4 wzwz
public int4 wzww
public int4 wwxx
public int4 wwxy
public int4 wwxz
public int4 wwxw
public int4 wwyx
public int4 wwyy
public int4 wwyz
public int4 wwyw
public int4 wwzx
public int4 wwzy
public int4 wwzz
public int4 wwzw
public int4 wwwx
public int4 wwwy
public int4 wwwz
public int4 wwww
public int3 xxx
public int3 xxy
public int3 xxz
public int3 xxw
public int3 xyx
public int3 xyy
public int3 xyz
public int3 xyw
public int3 xzx
public int3 xzy
public int3 xzz
public int3 xzw
public int3 xwx
public int3 xwy
public int3 xwz
public int3 xww
public int3 yxx
public int3 yxy
public int3 yxz
public int3 yxw
public int3 yyx
public int3 yyy
public int3 yyz
public int3 yyw
public int3 yzx
public int3 yzy
public int3 yzz
public int3 yzw
public int3 ywx
public int3 ywy
public int3 ywz
public int3 yww
public int3 zxx
public int3 zxy
public int3 zxz
public int3 zxw
public int3 zyx
public int3 zyy
public int3 zyz
public int3 zyw
public int3 zzx
public int3 zzy
public int3 zzz
public int3 zzw
public int3 zwx
public int3 zwy
public int3 zwz
public int3 zww
public int3 wxx
public int3 wxy
public int3 wxz
public int3 wxw
public int3 wyx
public int3 wyy
public int3 wyz
public int3 wyw
public int3 wzx
public int3 wzy
public int3 wzz
public int3 wzw
public int3 wwx
public int3 wwy
public int3 wwz
public int3 www
public int2 xx
public int2 xy
public int2 xz
public int2 xw
public int2 yx
public int2 yy
public int2 yz
public int2 yw
public int2 zx
public int2 zy
public int2 zz
public int2 zw
public int2 wx
public int2 wy
public int2 wz
public int2 ww
public int Item
public void .ctor(int x, int y, int z, int w)
public void .ctor(int x, int y, int2 zw)
public void .ctor(int x, int2 yz, int w)
public void .ctor(int x, int3 yzw)
public void .ctor(int2 xy, int z, int w)
public void .ctor(int2 xy, int2 zw)
public void .ctor(int3 xyz, int w)
public void .ctor(int4 xyzw)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool4 v)
public void .ctor(UInt32 v)
public void .ctor(uint4 v)
public void .ctor(float v)
public void .ctor(float4 v)
public void .ctor(double v)
public void .ctor(double4 v)
public int4 op_Implicit(int v)
public int4 op_Explicit(bool v)
public int4 op_Explicit(bool4 v)
public int4 op_Explicit(UInt32 v)
public int4 op_Explicit(uint4 v)
public int4 op_Explicit(float v)
public int4 op_Explicit(float4 v)
public int4 op_Explicit(double v)
public int4 op_Explicit(double4 v)
public int4 op_Multiply(int4 lhs, int4 rhs)
public int4 op_Multiply(int4 lhs, int rhs)
public int4 op_Multiply(int lhs, int4 rhs)
public int4 op_Addition(int4 lhs, int4 rhs)
public int4 op_Addition(int4 lhs, int rhs)
public int4 op_Addition(int lhs, int4 rhs)
public int4 op_Subtraction(int4 lhs, int4 rhs)
public int4 op_Subtraction(int4 lhs, int rhs)
public int4 op_Subtraction(int lhs, int4 rhs)
public int4 op_Division(int4 lhs, int4 rhs)
public int4 op_Division(int4 lhs, int rhs)
public int4 op_Division(int lhs, int4 rhs)
public int4 op_Modulus(int4 lhs, int4 rhs)
public int4 op_Modulus(int4 lhs, int rhs)
public int4 op_Modulus(int lhs, int4 rhs)
public int4 op_Increment(int4 val)
public int4 op_Decrement(int4 val)
public bool4 op_LessThan(int4 lhs, int4 rhs)
public bool4 op_LessThan(int4 lhs, int rhs)
public bool4 op_LessThan(int lhs, int4 rhs)
public bool4 op_LessThanOrEqual(int4 lhs, int4 rhs)
public bool4 op_LessThanOrEqual(int4 lhs, int rhs)
public bool4 op_LessThanOrEqual(int lhs, int4 rhs)
public bool4 op_GreaterThan(int4 lhs, int4 rhs)
public bool4 op_GreaterThan(int4 lhs, int rhs)
public bool4 op_GreaterThan(int lhs, int4 rhs)
public bool4 op_GreaterThanOrEqual(int4 lhs, int4 rhs)
public bool4 op_GreaterThanOrEqual(int4 lhs, int rhs)
public bool4 op_GreaterThanOrEqual(int lhs, int4 rhs)
public int4 op_UnaryNegation(int4 val)
public int4 op_UnaryPlus(int4 val)
public int4 op_LeftShift(int4 x, int n)
public int4 op_RightShift(int4 x, int n)
public bool4 op_Equality(int4 lhs, int4 rhs)
public bool4 op_Equality(int4 lhs, int rhs)
public bool4 op_Equality(int lhs, int4 rhs)
public bool4 op_Inequality(int4 lhs, int4 rhs)
public bool4 op_Inequality(int4 lhs, int rhs)
public bool4 op_Inequality(int lhs, int4 rhs)
public int4 op_OnesComplement(int4 val)
public int4 op_BitwiseAnd(int4 lhs, int4 rhs)
public int4 op_BitwiseAnd(int4 lhs, int rhs)
public int4 op_BitwiseAnd(int lhs, int4 rhs)
public int4 op_BitwiseOr(int4 lhs, int4 rhs)
public int4 op_BitwiseOr(int4 lhs, int rhs)
public int4 op_BitwiseOr(int lhs, int4 rhs)
public int4 op_ExclusiveOr(int4 lhs, int4 rhs)
public int4 op_ExclusiveOr(int4 lhs, int rhs)
public int4 op_ExclusiveOr(int lhs, int4 rhs)
public int4 get_xxxx()
public int4 get_xxxy()
public int4 get_xxxz()
public int4 get_xxxw()
public int4 get_xxyx()
public int4 get_xxyy()
public int4 get_xxyz()
public int4 get_xxyw()
public int4 get_xxzx()
public int4 get_xxzy()
public int4 get_xxzz()
public int4 get_xxzw()
public int4 get_xxwx()
public int4 get_xxwy()
public int4 get_xxwz()
public int4 get_xxww()
public int4 get_xyxx()
public int4 get_xyxy()
public int4 get_xyxz()
public int4 get_xyxw()
public int4 get_xyyx()
public int4 get_xyyy()
public int4 get_xyyz()
public int4 get_xyyw()
public int4 get_xyzx()
public int4 get_xyzy()
public int4 get_xyzz()
public int4 get_xyzw()
public void set_xyzw(int4 value)
public int4 get_xywx()
public int4 get_xywy()
public int4 get_xywz()
public void set_xywz(int4 value)
public int4 get_xyww()
public int4 get_xzxx()
public int4 get_xzxy()
public int4 get_xzxz()
public int4 get_xzxw()
public int4 get_xzyx()
public int4 get_xzyy()
public int4 get_xzyz()
public int4 get_xzyw()
public void set_xzyw(int4 value)
public int4 get_xzzx()
public int4 get_xzzy()
public int4 get_xzzz()
public int4 get_xzzw()
public int4 get_xzwx()
public int4 get_xzwy()
public void set_xzwy(int4 value)
public int4 get_xzwz()
public int4 get_xzww()
public int4 get_xwxx()
public int4 get_xwxy()
public int4 get_xwxz()
public int4 get_xwxw()
public int4 get_xwyx()
public int4 get_xwyy()
public int4 get_xwyz()
public void set_xwyz(int4 value)
public int4 get_xwyw()
public int4 get_xwzx()
public int4 get_xwzy()
public void set_xwzy(int4 value)
public int4 get_xwzz()
public int4 get_xwzw()
public int4 get_xwwx()
public int4 get_xwwy()
public int4 get_xwwz()
public int4 get_xwww()
public int4 get_yxxx()
public int4 get_yxxy()
public int4 get_yxxz()
public int4 get_yxxw()
public int4 get_yxyx()
public int4 get_yxyy()
public int4 get_yxyz()
public int4 get_yxyw()
public int4 get_yxzx()
public int4 get_yxzy()
public int4 get_yxzz()
public int4 get_yxzw()
public void set_yxzw(int4 value)
public int4 get_yxwx()
public int4 get_yxwy()
public int4 get_yxwz()
public void set_yxwz(int4 value)
public int4 get_yxww()
public int4 get_yyxx()
public int4 get_yyxy()
public int4 get_yyxz()
public int4 get_yyxw()
public int4 get_yyyx()
public int4 get_yyyy()
public int4 get_yyyz()
public int4 get_yyyw()
public int4 get_yyzx()
public int4 get_yyzy()
public int4 get_yyzz()
public int4 get_yyzw()
public int4 get_yywx()
public int4 get_yywy()
public int4 get_yywz()
public int4 get_yyww()
public int4 get_yzxx()
public int4 get_yzxy()
public int4 get_yzxz()
public int4 get_yzxw()
public void set_yzxw(int4 value)
public int4 get_yzyx()
public int4 get_yzyy()
public int4 get_yzyz()
public int4 get_yzyw()
public int4 get_yzzx()
public int4 get_yzzy()
public int4 get_yzzz()
public int4 get_yzzw()
public int4 get_yzwx()
public void set_yzwx(int4 value)
public int4 get_yzwy()
public int4 get_yzwz()
public int4 get_yzww()
public int4 get_ywxx()
public int4 get_ywxy()
public int4 get_ywxz()
public void set_ywxz(int4 value)
public int4 get_ywxw()
public int4 get_ywyx()
public int4 get_ywyy()
public int4 get_ywyz()
public int4 get_ywyw()
public int4 get_ywzx()
public void set_ywzx(int4 value)
public int4 get_ywzy()
public int4 get_ywzz()
public int4 get_ywzw()
public int4 get_ywwx()
public int4 get_ywwy()
public int4 get_ywwz()
public int4 get_ywww()
public int4 get_zxxx()
public int4 get_zxxy()
public int4 get_zxxz()
public int4 get_zxxw()
public int4 get_zxyx()
public int4 get_zxyy()
public int4 get_zxyz()
public int4 get_zxyw()
public void set_zxyw(int4 value)
public int4 get_zxzx()
public int4 get_zxzy()
public int4 get_zxzz()
public int4 get_zxzw()
public int4 get_zxwx()
public int4 get_zxwy()
public void set_zxwy(int4 value)
public int4 get_zxwz()
public int4 get_zxww()
public int4 get_zyxx()
public int4 get_zyxy()
public int4 get_zyxz()
public int4 get_zyxw()
public void set_zyxw(int4 value)
public int4 get_zyyx()
public int4 get_zyyy()
public int4 get_zyyz()
public int4 get_zyyw()
public int4 get_zyzx()
public int4 get_zyzy()
public int4 get_zyzz()
public int4 get_zyzw()
public int4 get_zywx()
public void set_zywx(int4 value)
public int4 get_zywy()
public int4 get_zywz()
public int4 get_zyww()
public int4 get_zzxx()
public int4 get_zzxy()
public int4 get_zzxz()
public int4 get_zzxw()
public int4 get_zzyx()
public int4 get_zzyy()
public int4 get_zzyz()
public int4 get_zzyw()
public int4 get_zzzx()
public int4 get_zzzy()
public int4 get_zzzz()
public int4 get_zzzw()
public int4 get_zzwx()
public int4 get_zzwy()
public int4 get_zzwz()
public int4 get_zzww()
public int4 get_zwxx()
public int4 get_zwxy()
public void set_zwxy(int4 value)
public int4 get_zwxz()
public int4 get_zwxw()
public int4 get_zwyx()
public void set_zwyx(int4 value)
public int4 get_zwyy()
public int4 get_zwyz()
public int4 get_zwyw()
public int4 get_zwzx()
public int4 get_zwzy()
public int4 get_zwzz()
public int4 get_zwzw()
public int4 get_zwwx()
public int4 get_zwwy()
public int4 get_zwwz()
public int4 get_zwww()
public int4 get_wxxx()
public int4 get_wxxy()
public int4 get_wxxz()
public int4 get_wxxw()
public int4 get_wxyx()
public int4 get_wxyy()
public int4 get_wxyz()
public void set_wxyz(int4 value)
public int4 get_wxyw()
public int4 get_wxzx()
public int4 get_wxzy()
public void set_wxzy(int4 value)
public int4 get_wxzz()
public int4 get_wxzw()
public int4 get_wxwx()
public int4 get_wxwy()
public int4 get_wxwz()
public int4 get_wxww()
public int4 get_wyxx()
public int4 get_wyxy()
public int4 get_wyxz()
public void set_wyxz(int4 value)
public int4 get_wyxw()
public int4 get_wyyx()
public int4 get_wyyy()
public int4 get_wyyz()
public int4 get_wyyw()
public int4 get_wyzx()
public void set_wyzx(int4 value)
public int4 get_wyzy()
public int4 get_wyzz()
public int4 get_wyzw()
public int4 get_wywx()
public int4 get_wywy()
public int4 get_wywz()
public int4 get_wyww()
public int4 get_wzxx()
public int4 get_wzxy()
public void set_wzxy(int4 value)
public int4 get_wzxz()
public int4 get_wzxw()
public int4 get_wzyx()
public void set_wzyx(int4 value)
public int4 get_wzyy()
public int4 get_wzyz()
public int4 get_wzyw()
public int4 get_wzzx()
public int4 get_wzzy()
public int4 get_wzzz()
public int4 get_wzzw()
public int4 get_wzwx()
public int4 get_wzwy()
public int4 get_wzwz()
public int4 get_wzww()
public int4 get_wwxx()
public int4 get_wwxy()
public int4 get_wwxz()
public int4 get_wwxw()
public int4 get_wwyx()
public int4 get_wwyy()
public int4 get_wwyz()
public int4 get_wwyw()
public int4 get_wwzx()
public int4 get_wwzy()
public int4 get_wwzz()
public int4 get_wwzw()
public int4 get_wwwx()
public int4 get_wwwy()
public int4 get_wwwz()
public int4 get_wwww()
public int3 get_xxx()
public int3 get_xxy()
public int3 get_xxz()
public int3 get_xxw()
public int3 get_xyx()
public int3 get_xyy()
public int3 get_xyz()
public void set_xyz(int3 value)
public int3 get_xyw()
public void set_xyw(int3 value)
public int3 get_xzx()
public int3 get_xzy()
public void set_xzy(int3 value)
public int3 get_xzz()
public int3 get_xzw()
public void set_xzw(int3 value)
public int3 get_xwx()
public int3 get_xwy()
public void set_xwy(int3 value)
public int3 get_xwz()
public void set_xwz(int3 value)
public int3 get_xww()
public int3 get_yxx()
public int3 get_yxy()
public int3 get_yxz()
public void set_yxz(int3 value)
public int3 get_yxw()
public void set_yxw(int3 value)
public int3 get_yyx()
public int3 get_yyy()
public int3 get_yyz()
public int3 get_yyw()
public int3 get_yzx()
public void set_yzx(int3 value)
public int3 get_yzy()
public int3 get_yzz()
public int3 get_yzw()
public void set_yzw(int3 value)
public int3 get_ywx()
public void set_ywx(int3 value)
public int3 get_ywy()
public int3 get_ywz()
public void set_ywz(int3 value)
public int3 get_yww()
public int3 get_zxx()
public int3 get_zxy()
public void set_zxy(int3 value)
public int3 get_zxz()
public int3 get_zxw()
public void set_zxw(int3 value)
public int3 get_zyx()
public void set_zyx(int3 value)
public int3 get_zyy()
public int3 get_zyz()
public int3 get_zyw()
public void set_zyw(int3 value)
public int3 get_zzx()
public int3 get_zzy()
public int3 get_zzz()
public int3 get_zzw()
public int3 get_zwx()
public void set_zwx(int3 value)
public int3 get_zwy()
public void set_zwy(int3 value)
public int3 get_zwz()
public int3 get_zww()
public int3 get_wxx()
public int3 get_wxy()
public void set_wxy(int3 value)
public int3 get_wxz()
public void set_wxz(int3 value)
public int3 get_wxw()
public int3 get_wyx()
public void set_wyx(int3 value)
public int3 get_wyy()
public int3 get_wyz()
public void set_wyz(int3 value)
public int3 get_wyw()
public int3 get_wzx()
public void set_wzx(int3 value)
public int3 get_wzy()
public void set_wzy(int3 value)
public int3 get_wzz()
public int3 get_wzw()
public int3 get_wwx()
public int3 get_wwy()
public int3 get_wwz()
public int3 get_www()
public int2 get_xx()
public int2 get_xy()
public void set_xy(int2 value)
public int2 get_xz()
public void set_xz(int2 value)
public int2 get_xw()
public void set_xw(int2 value)
public int2 get_yx()
public void set_yx(int2 value)
public int2 get_yy()
public int2 get_yz()
public void set_yz(int2 value)
public int2 get_yw()
public void set_yw(int2 value)
public int2 get_zx()
public void set_zx(int2 value)
public int2 get_zy()
public void set_zy(int2 value)
public int2 get_zz()
public int2 get_zw()
public void set_zw(int2 value)
public int2 get_wx()
public void set_wx(int2 value)
public int2 get_wy()
public void set_wy(int2 value)
public int2 get_wz()
public void set_wz(int2 value)
public int2 get_ww()
public int get_Item(int index)
public void set_Item(int index, int value)
public bool Equals(int4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int4x2 : ValueType {
public int4 c0
public int4 c1
public int4x2 zero
public int4& Item
public void .ctor(int4 c0, int4 c1)
public void .ctor(int m00, int m01, int m10, int m11, int m20, int m21, int m30, int m31)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool4x2 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x2 v)
public void .ctor(float v)
public void .ctor(float4x2 v)
public void .ctor(double v)
public void .ctor(double4x2 v)
public int4x2 op_Implicit(int v)
public int4x2 op_Explicit(bool v)
public int4x2 op_Explicit(bool4x2 v)
public int4x2 op_Explicit(UInt32 v)
public int4x2 op_Explicit(uint4x2 v)
public int4x2 op_Explicit(float v)
public int4x2 op_Explicit(float4x2 v)
public int4x2 op_Explicit(double v)
public int4x2 op_Explicit(double4x2 v)
public int4x2 op_Multiply(int4x2 lhs, int4x2 rhs)
public int4x2 op_Multiply(int4x2 lhs, int rhs)
public int4x2 op_Multiply(int lhs, int4x2 rhs)
public int4x2 op_Addition(int4x2 lhs, int4x2 rhs)
public int4x2 op_Addition(int4x2 lhs, int rhs)
public int4x2 op_Addition(int lhs, int4x2 rhs)
public int4x2 op_Subtraction(int4x2 lhs, int4x2 rhs)
public int4x2 op_Subtraction(int4x2 lhs, int rhs)
public int4x2 op_Subtraction(int lhs, int4x2 rhs)
public int4x2 op_Division(int4x2 lhs, int4x2 rhs)
public int4x2 op_Division(int4x2 lhs, int rhs)
public int4x2 op_Division(int lhs, int4x2 rhs)
public int4x2 op_Modulus(int4x2 lhs, int4x2 rhs)
public int4x2 op_Modulus(int4x2 lhs, int rhs)
public int4x2 op_Modulus(int lhs, int4x2 rhs)
public int4x2 op_Increment(int4x2 val)
public int4x2 op_Decrement(int4x2 val)
public bool4x2 op_LessThan(int4x2 lhs, int4x2 rhs)
public bool4x2 op_LessThan(int4x2 lhs, int rhs)
public bool4x2 op_LessThan(int lhs, int4x2 rhs)
public bool4x2 op_LessThanOrEqual(int4x2 lhs, int4x2 rhs)
public bool4x2 op_LessThanOrEqual(int4x2 lhs, int rhs)
public bool4x2 op_LessThanOrEqual(int lhs, int4x2 rhs)
public bool4x2 op_GreaterThan(int4x2 lhs, int4x2 rhs)
public bool4x2 op_GreaterThan(int4x2 lhs, int rhs)
public bool4x2 op_GreaterThan(int lhs, int4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(int4x2 lhs, int4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(int4x2 lhs, int rhs)
public bool4x2 op_GreaterThanOrEqual(int lhs, int4x2 rhs)
public int4x2 op_UnaryNegation(int4x2 val)
public int4x2 op_UnaryPlus(int4x2 val)
public int4x2 op_LeftShift(int4x2 x, int n)
public int4x2 op_RightShift(int4x2 x, int n)
public bool4x2 op_Equality(int4x2 lhs, int4x2 rhs)
public bool4x2 op_Equality(int4x2 lhs, int rhs)
public bool4x2 op_Equality(int lhs, int4x2 rhs)
public bool4x2 op_Inequality(int4x2 lhs, int4x2 rhs)
public bool4x2 op_Inequality(int4x2 lhs, int rhs)
public bool4x2 op_Inequality(int lhs, int4x2 rhs)
public int4x2 op_OnesComplement(int4x2 val)
public int4x2 op_BitwiseAnd(int4x2 lhs, int4x2 rhs)
public int4x2 op_BitwiseAnd(int4x2 lhs, int rhs)
public int4x2 op_BitwiseAnd(int lhs, int4x2 rhs)
public int4x2 op_BitwiseOr(int4x2 lhs, int4x2 rhs)
public int4x2 op_BitwiseOr(int4x2 lhs, int rhs)
public int4x2 op_BitwiseOr(int lhs, int4x2 rhs)
public int4x2 op_ExclusiveOr(int4x2 lhs, int4x2 rhs)
public int4x2 op_ExclusiveOr(int4x2 lhs, int rhs)
public int4x2 op_ExclusiveOr(int lhs, int4x2 rhs)
public int4& get_Item(int index)
public bool Equals(int4x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int4x3 : ValueType {
public int4 c0
public int4 c1
public int4 c2
public int4x3 zero
public int4& Item
public void .ctor(int4 c0, int4 c1, int4 c2)
public void .ctor(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22, int m30, int m31, int m32)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool4x3 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x3 v)
public void .ctor(float v)
public void .ctor(float4x3 v)
public void .ctor(double v)
public void .ctor(double4x3 v)
public int4x3 op_Implicit(int v)
public int4x3 op_Explicit(bool v)
public int4x3 op_Explicit(bool4x3 v)
public int4x3 op_Explicit(UInt32 v)
public int4x3 op_Explicit(uint4x3 v)
public int4x3 op_Explicit(float v)
public int4x3 op_Explicit(float4x3 v)
public int4x3 op_Explicit(double v)
public int4x3 op_Explicit(double4x3 v)
public int4x3 op_Multiply(int4x3 lhs, int4x3 rhs)
public int4x3 op_Multiply(int4x3 lhs, int rhs)
public int4x3 op_Multiply(int lhs, int4x3 rhs)
public int4x3 op_Addition(int4x3 lhs, int4x3 rhs)
public int4x3 op_Addition(int4x3 lhs, int rhs)
public int4x3 op_Addition(int lhs, int4x3 rhs)
public int4x3 op_Subtraction(int4x3 lhs, int4x3 rhs)
public int4x3 op_Subtraction(int4x3 lhs, int rhs)
public int4x3 op_Subtraction(int lhs, int4x3 rhs)
public int4x3 op_Division(int4x3 lhs, int4x3 rhs)
public int4x3 op_Division(int4x3 lhs, int rhs)
public int4x3 op_Division(int lhs, int4x3 rhs)
public int4x3 op_Modulus(int4x3 lhs, int4x3 rhs)
public int4x3 op_Modulus(int4x3 lhs, int rhs)
public int4x3 op_Modulus(int lhs, int4x3 rhs)
public int4x3 op_Increment(int4x3 val)
public int4x3 op_Decrement(int4x3 val)
public bool4x3 op_LessThan(int4x3 lhs, int4x3 rhs)
public bool4x3 op_LessThan(int4x3 lhs, int rhs)
public bool4x3 op_LessThan(int lhs, int4x3 rhs)
public bool4x3 op_LessThanOrEqual(int4x3 lhs, int4x3 rhs)
public bool4x3 op_LessThanOrEqual(int4x3 lhs, int rhs)
public bool4x3 op_LessThanOrEqual(int lhs, int4x3 rhs)
public bool4x3 op_GreaterThan(int4x3 lhs, int4x3 rhs)
public bool4x3 op_GreaterThan(int4x3 lhs, int rhs)
public bool4x3 op_GreaterThan(int lhs, int4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(int4x3 lhs, int4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(int4x3 lhs, int rhs)
public bool4x3 op_GreaterThanOrEqual(int lhs, int4x3 rhs)
public int4x3 op_UnaryNegation(int4x3 val)
public int4x3 op_UnaryPlus(int4x3 val)
public int4x3 op_LeftShift(int4x3 x, int n)
public int4x3 op_RightShift(int4x3 x, int n)
public bool4x3 op_Equality(int4x3 lhs, int4x3 rhs)
public bool4x3 op_Equality(int4x3 lhs, int rhs)
public bool4x3 op_Equality(int lhs, int4x3 rhs)
public bool4x3 op_Inequality(int4x3 lhs, int4x3 rhs)
public bool4x3 op_Inequality(int4x3 lhs, int rhs)
public bool4x3 op_Inequality(int lhs, int4x3 rhs)
public int4x3 op_OnesComplement(int4x3 val)
public int4x3 op_BitwiseAnd(int4x3 lhs, int4x3 rhs)
public int4x3 op_BitwiseAnd(int4x3 lhs, int rhs)
public int4x3 op_BitwiseAnd(int lhs, int4x3 rhs)
public int4x3 op_BitwiseOr(int4x3 lhs, int4x3 rhs)
public int4x3 op_BitwiseOr(int4x3 lhs, int rhs)
public int4x3 op_BitwiseOr(int lhs, int4x3 rhs)
public int4x3 op_ExclusiveOr(int4x3 lhs, int4x3 rhs)
public int4x3 op_ExclusiveOr(int4x3 lhs, int rhs)
public int4x3 op_ExclusiveOr(int lhs, int4x3 rhs)
public int4& get_Item(int index)
public bool Equals(int4x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.int4x4 : ValueType {
public int4 c0
public int4 c1
public int4 c2
public int4 c3
public int4x4 identity
public int4x4 zero
public int4& Item
public void .ctor(int4 c0, int4 c1, int4 c2, int4 c3)
public void .ctor(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23, int m30, int m31, int m32, int m33)
public void .ctor(int v)
public void .ctor(bool v)
public void .ctor(bool4x4 v)
public void .ctor(UInt32 v)
public void .ctor(uint4x4 v)
public void .ctor(float v)
public void .ctor(float4x4 v)
public void .ctor(double v)
public void .ctor(double4x4 v)
public int4x4 op_Implicit(int v)
public int4x4 op_Explicit(bool v)
public int4x4 op_Explicit(bool4x4 v)
public int4x4 op_Explicit(UInt32 v)
public int4x4 op_Explicit(uint4x4 v)
public int4x4 op_Explicit(float v)
public int4x4 op_Explicit(float4x4 v)
public int4x4 op_Explicit(double v)
public int4x4 op_Explicit(double4x4 v)
public int4x4 op_Multiply(int4x4 lhs, int4x4 rhs)
public int4x4 op_Multiply(int4x4 lhs, int rhs)
public int4x4 op_Multiply(int lhs, int4x4 rhs)
public int4x4 op_Addition(int4x4 lhs, int4x4 rhs)
public int4x4 op_Addition(int4x4 lhs, int rhs)
public int4x4 op_Addition(int lhs, int4x4 rhs)
public int4x4 op_Subtraction(int4x4 lhs, int4x4 rhs)
public int4x4 op_Subtraction(int4x4 lhs, int rhs)
public int4x4 op_Subtraction(int lhs, int4x4 rhs)
public int4x4 op_Division(int4x4 lhs, int4x4 rhs)
public int4x4 op_Division(int4x4 lhs, int rhs)
public int4x4 op_Division(int lhs, int4x4 rhs)
public int4x4 op_Modulus(int4x4 lhs, int4x4 rhs)
public int4x4 op_Modulus(int4x4 lhs, int rhs)
public int4x4 op_Modulus(int lhs, int4x4 rhs)
public int4x4 op_Increment(int4x4 val)
public int4x4 op_Decrement(int4x4 val)
public bool4x4 op_LessThan(int4x4 lhs, int4x4 rhs)
public bool4x4 op_LessThan(int4x4 lhs, int rhs)
public bool4x4 op_LessThan(int lhs, int4x4 rhs)
public bool4x4 op_LessThanOrEqual(int4x4 lhs, int4x4 rhs)
public bool4x4 op_LessThanOrEqual(int4x4 lhs, int rhs)
public bool4x4 op_LessThanOrEqual(int lhs, int4x4 rhs)
public bool4x4 op_GreaterThan(int4x4 lhs, int4x4 rhs)
public bool4x4 op_GreaterThan(int4x4 lhs, int rhs)
public bool4x4 op_GreaterThan(int lhs, int4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(int4x4 lhs, int4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(int4x4 lhs, int rhs)
public bool4x4 op_GreaterThanOrEqual(int lhs, int4x4 rhs)
public int4x4 op_UnaryNegation(int4x4 val)
public int4x4 op_UnaryPlus(int4x4 val)
public int4x4 op_LeftShift(int4x4 x, int n)
public int4x4 op_RightShift(int4x4 x, int n)
public bool4x4 op_Equality(int4x4 lhs, int4x4 rhs)
public bool4x4 op_Equality(int4x4 lhs, int rhs)
public bool4x4 op_Equality(int lhs, int4x4 rhs)
public bool4x4 op_Inequality(int4x4 lhs, int4x4 rhs)
public bool4x4 op_Inequality(int4x4 lhs, int rhs)
public bool4x4 op_Inequality(int lhs, int4x4 rhs)
public int4x4 op_OnesComplement(int4x4 val)
public int4x4 op_BitwiseAnd(int4x4 lhs, int4x4 rhs)
public int4x4 op_BitwiseAnd(int4x4 lhs, int rhs)
public int4x4 op_BitwiseAnd(int lhs, int4x4 rhs)
public int4x4 op_BitwiseOr(int4x4 lhs, int4x4 rhs)
public int4x4 op_BitwiseOr(int4x4 lhs, int rhs)
public int4x4 op_BitwiseOr(int lhs, int4x4 rhs)
public int4x4 op_ExclusiveOr(int4x4 lhs, int4x4 rhs)
public int4x4 op_ExclusiveOr(int4x4 lhs, int rhs)
public int4x4 op_ExclusiveOr(int lhs, int4x4 rhs)
public int4& get_Item(int index)
public bool Equals(int4x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.math : object {
public double E_DBL
public double LOG2E_DBL
public double LOG10E_DBL
public double LN2_DBL
public double LN10_DBL
public double PI_DBL
public double SQRT2_DBL
public double EPSILON_DBL
public double INFINITY_DBL
public double NAN_DBL
public float FLT_MIN_NORMAL
public double DBL_MIN_NORMAL
public float E
public float LOG2E
public float LOG10E
public float LN2
public float LN10
public float PI
public float SQRT2
public float EPSILON
public float INFINITY
public float NAN
public bool2 bool2(bool x, bool y)
public bool2 bool2(bool2 xy)
public bool2 bool2(bool v)
public UInt32 hash(bool2 v)
public uint2 hashwide(bool2 v)
public bool shuffle(bool2 left, bool2 right, ShuffleComponent x)
public bool2 shuffle(bool2 left, bool2 right, ShuffleComponent x, ShuffleComponent y)
public bool3 shuffle(bool2 left, bool2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public bool4 shuffle(bool2 left, bool2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal bool select_shuffle_component(bool2 a, bool2 b, ShuffleComponent component)
public bool2x2 bool2x2(bool2 c0, bool2 c1)
public bool2x2 bool2x2(bool m00, bool m01, bool m10, bool m11)
public bool2x2 bool2x2(bool v)
public bool2x2 transpose(bool2x2 v)
public UInt32 hash(bool2x2 v)
public uint2 hashwide(bool2x2 v)
public bool2x3 bool2x3(bool2 c0, bool2 c1, bool2 c2)
public bool2x3 bool2x3(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12)
public bool2x3 bool2x3(bool v)
public bool3x2 transpose(bool2x3 v)
public UInt32 hash(bool2x3 v)
public uint2 hashwide(bool2x3 v)
public bool2x4 bool2x4(bool2 c0, bool2 c1, bool2 c2, bool2 c3)
public bool2x4 bool2x4(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13)
public bool2x4 bool2x4(bool v)
public bool4x2 transpose(bool2x4 v)
public UInt32 hash(bool2x4 v)
public uint2 hashwide(bool2x4 v)
public bool3 bool3(bool x, bool y, bool z)
public bool3 bool3(bool x, bool2 yz)
public bool3 bool3(bool2 xy, bool z)
public bool3 bool3(bool3 xyz)
public bool3 bool3(bool v)
public UInt32 hash(bool3 v)
public uint3 hashwide(bool3 v)
public bool shuffle(bool3 left, bool3 right, ShuffleComponent x)
public bool2 shuffle(bool3 left, bool3 right, ShuffleComponent x, ShuffleComponent y)
public bool3 shuffle(bool3 left, bool3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public bool4 shuffle(bool3 left, bool3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal bool select_shuffle_component(bool3 a, bool3 b, ShuffleComponent component)
public bool3x2 bool3x2(bool3 c0, bool3 c1)
public bool3x2 bool3x2(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21)
public bool3x2 bool3x2(bool v)
public bool2x3 transpose(bool3x2 v)
public UInt32 hash(bool3x2 v)
public uint3 hashwide(bool3x2 v)
public bool3x3 bool3x3(bool3 c0, bool3 c1, bool3 c2)
public bool3x3 bool3x3(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22)
public bool3x3 bool3x3(bool v)
public bool3x3 transpose(bool3x3 v)
public UInt32 hash(bool3x3 v)
public uint3 hashwide(bool3x3 v)
public bool3x4 bool3x4(bool3 c0, bool3 c1, bool3 c2, bool3 c3)
public bool3x4 bool3x4(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23)
public bool3x4 bool3x4(bool v)
public bool4x3 transpose(bool3x4 v)
public UInt32 hash(bool3x4 v)
public uint3 hashwide(bool3x4 v)
public bool4 bool4(bool x, bool y, bool z, bool w)
public bool4 bool4(bool x, bool y, bool2 zw)
public bool4 bool4(bool x, bool2 yz, bool w)
public bool4 bool4(bool x, bool3 yzw)
public bool4 bool4(bool2 xy, bool z, bool w)
public bool4 bool4(bool2 xy, bool2 zw)
public bool4 bool4(bool3 xyz, bool w)
public bool4 bool4(bool4 xyzw)
public bool4 bool4(bool v)
public UInt32 hash(bool4 v)
public uint4 hashwide(bool4 v)
public bool shuffle(bool4 left, bool4 right, ShuffleComponent x)
public bool2 shuffle(bool4 left, bool4 right, ShuffleComponent x, ShuffleComponent y)
public bool3 shuffle(bool4 left, bool4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public bool4 shuffle(bool4 left, bool4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal bool select_shuffle_component(bool4 a, bool4 b, ShuffleComponent component)
public bool4x2 bool4x2(bool4 c0, bool4 c1)
public bool4x2 bool4x2(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21, bool m30, bool m31)
public bool4x2 bool4x2(bool v)
public bool2x4 transpose(bool4x2 v)
public UInt32 hash(bool4x2 v)
public uint4 hashwide(bool4x2 v)
public bool4x3 bool4x3(bool4 c0, bool4 c1, bool4 c2)
public bool4x3 bool4x3(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22, bool m30, bool m31, bool m32)
public bool4x3 bool4x3(bool v)
public bool3x4 transpose(bool4x3 v)
public UInt32 hash(bool4x3 v)
public uint4 hashwide(bool4x3 v)
public bool4x4 bool4x4(bool4 c0, bool4 c1, bool4 c2, bool4 c3)
public bool4x4 bool4x4(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23, bool m30, bool m31, bool m32, bool m33)
public bool4x4 bool4x4(bool v)
public bool4x4 transpose(bool4x4 v)
public UInt32 hash(bool4x4 v)
public uint4 hashwide(bool4x4 v)
public double2 double2(double x, double y)
public double2 double2(double2 xy)
public double2 double2(double v)
public double2 double2(bool v)
public double2 double2(bool2 v)
public double2 double2(int v)
public double2 double2(int2 v)
public double2 double2(UInt32 v)
public double2 double2(uint2 v)
public double2 double2(half v)
public double2 double2(half2 v)
public double2 double2(float v)
public double2 double2(float2 v)
public UInt32 hash(double2 v)
public uint2 hashwide(double2 v)
public double shuffle(double2 left, double2 right, ShuffleComponent x)
public double2 shuffle(double2 left, double2 right, ShuffleComponent x, ShuffleComponent y)
public double3 shuffle(double2 left, double2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public double4 shuffle(double2 left, double2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal double select_shuffle_component(double2 a, double2 b, ShuffleComponent component)
public double2x2 double2x2(double2 c0, double2 c1)
public double2x2 double2x2(double m00, double m01, double m10, double m11)
public double2x2 double2x2(double v)
public double2x2 double2x2(bool v)
public double2x2 double2x2(bool2x2 v)
public double2x2 double2x2(int v)
public double2x2 double2x2(int2x2 v)
public double2x2 double2x2(UInt32 v)
public double2x2 double2x2(uint2x2 v)
public double2x2 double2x2(float v)
public double2x2 double2x2(float2x2 v)
public double2x2 transpose(double2x2 v)
public double2x2 inverse(double2x2 m)
public double determinant(double2x2 m)
public UInt32 hash(double2x2 v)
public uint2 hashwide(double2x2 v)
public double2x3 double2x3(double2 c0, double2 c1, double2 c2)
public double2x3 double2x3(double m00, double m01, double m02, double m10, double m11, double m12)
public double2x3 double2x3(double v)
public double2x3 double2x3(bool v)
public double2x3 double2x3(bool2x3 v)
public double2x3 double2x3(int v)
public double2x3 double2x3(int2x3 v)
public double2x3 double2x3(UInt32 v)
public double2x3 double2x3(uint2x3 v)
public double2x3 double2x3(float v)
public double2x3 double2x3(float2x3 v)
public double3x2 transpose(double2x3 v)
public UInt32 hash(double2x3 v)
public uint2 hashwide(double2x3 v)
public double2x4 double2x4(double2 c0, double2 c1, double2 c2, double2 c3)
public double2x4 double2x4(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13)
public double2x4 double2x4(double v)
public double2x4 double2x4(bool v)
public double2x4 double2x4(bool2x4 v)
public double2x4 double2x4(int v)
public double2x4 double2x4(int2x4 v)
public double2x4 double2x4(UInt32 v)
public double2x4 double2x4(uint2x4 v)
public double2x4 double2x4(float v)
public double2x4 double2x4(float2x4 v)
public double4x2 transpose(double2x4 v)
public UInt32 hash(double2x4 v)
public uint2 hashwide(double2x4 v)
public double3 double3(double x, double y, double z)
public double3 double3(double x, double2 yz)
public double3 double3(double2 xy, double z)
public double3 double3(double3 xyz)
public double3 double3(double v)
public double3 double3(bool v)
public double3 double3(bool3 v)
public double3 double3(int v)
public double3 double3(int3 v)
public double3 double3(UInt32 v)
public double3 double3(uint3 v)
public double3 double3(half v)
public double3 double3(half3 v)
public double3 double3(float v)
public double3 double3(float3 v)
public UInt32 hash(double3 v)
public uint3 hashwide(double3 v)
public double shuffle(double3 left, double3 right, ShuffleComponent x)
public double2 shuffle(double3 left, double3 right, ShuffleComponent x, ShuffleComponent y)
public double3 shuffle(double3 left, double3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public double4 shuffle(double3 left, double3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal double select_shuffle_component(double3 a, double3 b, ShuffleComponent component)
public double3x2 double3x2(double3 c0, double3 c1)
public double3x2 double3x2(double m00, double m01, double m10, double m11, double m20, double m21)
public double3x2 double3x2(double v)
public double3x2 double3x2(bool v)
public double3x2 double3x2(bool3x2 v)
public double3x2 double3x2(int v)
public double3x2 double3x2(int3x2 v)
public double3x2 double3x2(UInt32 v)
public double3x2 double3x2(uint3x2 v)
public double3x2 double3x2(float v)
public double3x2 double3x2(float3x2 v)
public double2x3 transpose(double3x2 v)
public UInt32 hash(double3x2 v)
public uint3 hashwide(double3x2 v)
public double3x3 double3x3(double3 c0, double3 c1, double3 c2)
public double3x3 double3x3(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22)
public double3x3 double3x3(double v)
public double3x3 double3x3(bool v)
public double3x3 double3x3(bool3x3 v)
public double3x3 double3x3(int v)
public double3x3 double3x3(int3x3 v)
public double3x3 double3x3(UInt32 v)
public double3x3 double3x3(uint3x3 v)
public double3x3 double3x3(float v)
public double3x3 double3x3(float3x3 v)
public double3x3 transpose(double3x3 v)
public double3x3 inverse(double3x3 m)
public double determinant(double3x3 m)
public UInt32 hash(double3x3 v)
public uint3 hashwide(double3x3 v)
public double3x4 double3x4(double3 c0, double3 c1, double3 c2, double3 c3)
public double3x4 double3x4(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23)
public double3x4 double3x4(double v)
public double3x4 double3x4(bool v)
public double3x4 double3x4(bool3x4 v)
public double3x4 double3x4(int v)
public double3x4 double3x4(int3x4 v)
public double3x4 double3x4(UInt32 v)
public double3x4 double3x4(uint3x4 v)
public double3x4 double3x4(float v)
public double3x4 double3x4(float3x4 v)
public double4x3 transpose(double3x4 v)
public double3x4 fastinverse(double3x4 m)
public UInt32 hash(double3x4 v)
public uint3 hashwide(double3x4 v)
public double4 double4(double x, double y, double z, double w)
public double4 double4(double x, double y, double2 zw)
public double4 double4(double x, double2 yz, double w)
public double4 double4(double x, double3 yzw)
public double4 double4(double2 xy, double z, double w)
public double4 double4(double2 xy, double2 zw)
public double4 double4(double3 xyz, double w)
public double4 double4(double4 xyzw)
public double4 double4(double v)
public double4 double4(bool v)
public double4 double4(bool4 v)
public double4 double4(int v)
public double4 double4(int4 v)
public double4 double4(UInt32 v)
public double4 double4(uint4 v)
public double4 double4(half v)
public double4 double4(half4 v)
public double4 double4(float v)
public double4 double4(float4 v)
public UInt32 hash(double4 v)
public uint4 hashwide(double4 v)
public double shuffle(double4 left, double4 right, ShuffleComponent x)
public double2 shuffle(double4 left, double4 right, ShuffleComponent x, ShuffleComponent y)
public double3 shuffle(double4 left, double4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public double4 shuffle(double4 left, double4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal double select_shuffle_component(double4 a, double4 b, ShuffleComponent component)
public double4x2 double4x2(double4 c0, double4 c1)
public double4x2 double4x2(double m00, double m01, double m10, double m11, double m20, double m21, double m30, double m31)
public double4x2 double4x2(double v)
public double4x2 double4x2(bool v)
public double4x2 double4x2(bool4x2 v)
public double4x2 double4x2(int v)
public double4x2 double4x2(int4x2 v)
public double4x2 double4x2(UInt32 v)
public double4x2 double4x2(uint4x2 v)
public double4x2 double4x2(float v)
public double4x2 double4x2(float4x2 v)
public double2x4 transpose(double4x2 v)
public UInt32 hash(double4x2 v)
public uint4 hashwide(double4x2 v)
public double4x3 double4x3(double4 c0, double4 c1, double4 c2)
public double4x3 double4x3(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22, double m30, double m31, double m32)
public double4x3 double4x3(double v)
public double4x3 double4x3(bool v)
public double4x3 double4x3(bool4x3 v)
public double4x3 double4x3(int v)
public double4x3 double4x3(int4x3 v)
public double4x3 double4x3(UInt32 v)
public double4x3 double4x3(uint4x3 v)
public double4x3 double4x3(float v)
public double4x3 double4x3(float4x3 v)
public double3x4 transpose(double4x3 v)
public UInt32 hash(double4x3 v)
public uint4 hashwide(double4x3 v)
public double4x4 double4x4(double4 c0, double4 c1, double4 c2, double4 c3)
public double4x4 double4x4(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23, double m30, double m31, double m32, double m33)
public double4x4 double4x4(double v)
public double4x4 double4x4(bool v)
public double4x4 double4x4(bool4x4 v)
public double4x4 double4x4(int v)
public double4x4 double4x4(int4x4 v)
public double4x4 double4x4(UInt32 v)
public double4x4 double4x4(uint4x4 v)
public double4x4 double4x4(float v)
public double4x4 double4x4(float4x4 v)
public double3 rotate(double4x4 a, double3 b)
public double3 transform(double4x4 a, double3 b)
public double4x4 transpose(double4x4 v)
public double4x4 inverse(double4x4 m)
public double4x4 fastinverse(double4x4 m)
public double determinant(double4x4 m)
public UInt32 hash(double4x4 v)
public uint4 hashwide(double4x4 v)
public float2 float2(float x, float y)
public float2 float2(float2 xy)
public float2 float2(float v)
public float2 float2(bool v)
public float2 float2(bool2 v)
public float2 float2(int v)
public float2 float2(int2 v)
public float2 float2(UInt32 v)
public float2 float2(uint2 v)
public float2 float2(half v)
public float2 float2(half2 v)
public float2 float2(double v)
public float2 float2(double2 v)
public UInt32 hash(float2 v)
public uint2 hashwide(float2 v)
public float shuffle(float2 left, float2 right, ShuffleComponent x)
public float2 shuffle(float2 left, float2 right, ShuffleComponent x, ShuffleComponent y)
public float3 shuffle(float2 left, float2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public float4 shuffle(float2 left, float2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal float select_shuffle_component(float2 a, float2 b, ShuffleComponent component)
public float2x2 float2x2(float2 c0, float2 c1)
public float2x2 float2x2(float m00, float m01, float m10, float m11)
public float2x2 float2x2(float v)
public float2x2 float2x2(bool v)
public float2x2 float2x2(bool2x2 v)
public float2x2 float2x2(int v)
public float2x2 float2x2(int2x2 v)
public float2x2 float2x2(UInt32 v)
public float2x2 float2x2(uint2x2 v)
public float2x2 float2x2(double v)
public float2x2 float2x2(double2x2 v)
public float2x2 transpose(float2x2 v)
public float2x2 inverse(float2x2 m)
public float determinant(float2x2 m)
public UInt32 hash(float2x2 v)
public uint2 hashwide(float2x2 v)
public float2x3 float2x3(float2 c0, float2 c1, float2 c2)
public float2x3 float2x3(float m00, float m01, float m02, float m10, float m11, float m12)
public float2x3 float2x3(float v)
public float2x3 float2x3(bool v)
public float2x3 float2x3(bool2x3 v)
public float2x3 float2x3(int v)
public float2x3 float2x3(int2x3 v)
public float2x3 float2x3(UInt32 v)
public float2x3 float2x3(uint2x3 v)
public float2x3 float2x3(double v)
public float2x3 float2x3(double2x3 v)
public float3x2 transpose(float2x3 v)
public UInt32 hash(float2x3 v)
public uint2 hashwide(float2x3 v)
public float2x4 float2x4(float2 c0, float2 c1, float2 c2, float2 c3)
public float2x4 float2x4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13)
public float2x4 float2x4(float v)
public float2x4 float2x4(bool v)
public float2x4 float2x4(bool2x4 v)
public float2x4 float2x4(int v)
public float2x4 float2x4(int2x4 v)
public float2x4 float2x4(UInt32 v)
public float2x4 float2x4(uint2x4 v)
public float2x4 float2x4(double v)
public float2x4 float2x4(double2x4 v)
public float4x2 transpose(float2x4 v)
public UInt32 hash(float2x4 v)
public uint2 hashwide(float2x4 v)
public float3 float3(float x, float y, float z)
public float3 float3(float x, float2 yz)
public float3 float3(float2 xy, float z)
public float3 float3(float3 xyz)
public float3 float3(float v)
public float3 float3(bool v)
public float3 float3(bool3 v)
public float3 float3(int v)
public float3 float3(int3 v)
public float3 float3(UInt32 v)
public float3 float3(uint3 v)
public float3 float3(half v)
public float3 float3(half3 v)
public float3 float3(double v)
public float3 float3(double3 v)
public UInt32 hash(float3 v)
public uint3 hashwide(float3 v)
public float shuffle(float3 left, float3 right, ShuffleComponent x)
public float2 shuffle(float3 left, float3 right, ShuffleComponent x, ShuffleComponent y)
public float3 shuffle(float3 left, float3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public float4 shuffle(float3 left, float3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal float select_shuffle_component(float3 a, float3 b, ShuffleComponent component)
public float3x2 float3x2(float3 c0, float3 c1)
public float3x2 float3x2(float m00, float m01, float m10, float m11, float m20, float m21)
public float3x2 float3x2(float v)
public float3x2 float3x2(bool v)
public float3x2 float3x2(bool3x2 v)
public float3x2 float3x2(int v)
public float3x2 float3x2(int3x2 v)
public float3x2 float3x2(UInt32 v)
public float3x2 float3x2(uint3x2 v)
public float3x2 float3x2(double v)
public float3x2 float3x2(double3x2 v)
public float2x3 transpose(float3x2 v)
public UInt32 hash(float3x2 v)
public uint3 hashwide(float3x2 v)
public float3x3 float3x3(float3 c0, float3 c1, float3 c2)
public float3x3 float3x3(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22)
public float3x3 float3x3(float v)
public float3x3 float3x3(bool v)
public float3x3 float3x3(bool3x3 v)
public float3x3 float3x3(int v)
public float3x3 float3x3(int3x3 v)
public float3x3 float3x3(UInt32 v)
public float3x3 float3x3(uint3x3 v)
public float3x3 float3x3(double v)
public float3x3 float3x3(double3x3 v)
public float3x3 transpose(float3x3 v)
public float3x3 inverse(float3x3 m)
public float determinant(float3x3 m)
public UInt32 hash(float3x3 v)
public uint3 hashwide(float3x3 v)
public float3x4 float3x4(float3 c0, float3 c1, float3 c2, float3 c3)
public float3x4 float3x4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23)
public float3x4 float3x4(float v)
public float3x4 float3x4(bool v)
public float3x4 float3x4(bool3x4 v)
public float3x4 float3x4(int v)
public float3x4 float3x4(int3x4 v)
public float3x4 float3x4(UInt32 v)
public float3x4 float3x4(uint3x4 v)
public float3x4 float3x4(double v)
public float3x4 float3x4(double3x4 v)
public float4x3 transpose(float3x4 v)
public float3x4 fastinverse(float3x4 m)
public UInt32 hash(float3x4 v)
public uint3 hashwide(float3x4 v)
public float4 float4(float x, float y, float z, float w)
public float4 float4(float x, float y, float2 zw)
public float4 float4(float x, float2 yz, float w)
public float4 float4(float x, float3 yzw)
public float4 float4(float2 xy, float z, float w)
public float4 float4(float2 xy, float2 zw)
public float4 float4(float3 xyz, float w)
public float4 float4(float4 xyzw)
public float4 float4(float v)
public float4 float4(bool v)
public float4 float4(bool4 v)
public float4 float4(int v)
public float4 float4(int4 v)
public float4 float4(UInt32 v)
public float4 float4(uint4 v)
public float4 float4(half v)
public float4 float4(half4 v)
public float4 float4(double v)
public float4 float4(double4 v)
public UInt32 hash(float4 v)
public uint4 hashwide(float4 v)
public float shuffle(float4 left, float4 right, ShuffleComponent x)
public float2 shuffle(float4 left, float4 right, ShuffleComponent x, ShuffleComponent y)
public float3 shuffle(float4 left, float4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public float4 shuffle(float4 left, float4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal float select_shuffle_component(float4 a, float4 b, ShuffleComponent component)
public float4x2 float4x2(float4 c0, float4 c1)
public float4x2 float4x2(float m00, float m01, float m10, float m11, float m20, float m21, float m30, float m31)
public float4x2 float4x2(float v)
public float4x2 float4x2(bool v)
public float4x2 float4x2(bool4x2 v)
public float4x2 float4x2(int v)
public float4x2 float4x2(int4x2 v)
public float4x2 float4x2(UInt32 v)
public float4x2 float4x2(uint4x2 v)
public float4x2 float4x2(double v)
public float4x2 float4x2(double4x2 v)
public float2x4 transpose(float4x2 v)
public UInt32 hash(float4x2 v)
public uint4 hashwide(float4x2 v)
public float4x3 float4x3(float4 c0, float4 c1, float4 c2)
public float4x3 float4x3(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22, float m30, float m31, float m32)
public float4x3 float4x3(float v)
public float4x3 float4x3(bool v)
public float4x3 float4x3(bool4x3 v)
public float4x3 float4x3(int v)
public float4x3 float4x3(int4x3 v)
public float4x3 float4x3(UInt32 v)
public float4x3 float4x3(uint4x3 v)
public float4x3 float4x3(double v)
public float4x3 float4x3(double4x3 v)
public float3x4 transpose(float4x3 v)
public UInt32 hash(float4x3 v)
public uint4 hashwide(float4x3 v)
public float4x4 float4x4(float4 c0, float4 c1, float4 c2, float4 c3)
public float4x4 float4x4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33)
public float4x4 float4x4(float v)
public float4x4 float4x4(bool v)
public float4x4 float4x4(bool4x4 v)
public float4x4 float4x4(int v)
public float4x4 float4x4(int4x4 v)
public float4x4 float4x4(UInt32 v)
public float4x4 float4x4(uint4x4 v)
public float4x4 float4x4(double v)
public float4x4 float4x4(double4x4 v)
public float3 rotate(float4x4 a, float3 b)
public float3 transform(float4x4 a, float3 b)
public float4x4 transpose(float4x4 v)
public float4x4 inverse(float4x4 m)
public float4x4 fastinverse(float4x4 m)
public float determinant(float4x4 m)
public UInt32 hash(float4x4 v)
public uint4 hashwide(float4x4 v)
public half half(half x)
public half half(float v)
public half half(double v)
public UInt32 hash(half v)
public half2 half2(half x, half y)
public half2 half2(half2 xy)
public half2 half2(half v)
public half2 half2(float v)
public half2 half2(float2 v)
public half2 half2(double v)
public half2 half2(double2 v)
public UInt32 hash(half2 v)
public uint2 hashwide(half2 v)
public half3 half3(half x, half y, half z)
public half3 half3(half x, half2 yz)
public half3 half3(half2 xy, half z)
public half3 half3(half3 xyz)
public half3 half3(half v)
public half3 half3(float v)
public half3 half3(float3 v)
public half3 half3(double v)
public half3 half3(double3 v)
public UInt32 hash(half3 v)
public uint3 hashwide(half3 v)
public half4 half4(half x, half y, half z, half w)
public half4 half4(half x, half y, half2 zw)
public half4 half4(half x, half2 yz, half w)
public half4 half4(half x, half3 yzw)
public half4 half4(half2 xy, half z, half w)
public half4 half4(half2 xy, half2 zw)
public half4 half4(half3 xyz, half w)
public half4 half4(half4 xyzw)
public half4 half4(half v)
public half4 half4(float v)
public half4 half4(float4 v)
public half4 half4(double v)
public half4 half4(double4 v)
public UInt32 hash(half4 v)
public uint4 hashwide(half4 v)
public int2 int2(int x, int y)
public int2 int2(int2 xy)
public int2 int2(int v)
public int2 int2(bool v)
public int2 int2(bool2 v)
public int2 int2(UInt32 v)
public int2 int2(uint2 v)
public int2 int2(float v)
public int2 int2(float2 v)
public int2 int2(double v)
public int2 int2(double2 v)
public UInt32 hash(int2 v)
public uint2 hashwide(int2 v)
public int shuffle(int2 left, int2 right, ShuffleComponent x)
public int2 shuffle(int2 left, int2 right, ShuffleComponent x, ShuffleComponent y)
public int3 shuffle(int2 left, int2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public int4 shuffle(int2 left, int2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal int select_shuffle_component(int2 a, int2 b, ShuffleComponent component)
public int2x2 int2x2(int2 c0, int2 c1)
public int2x2 int2x2(int m00, int m01, int m10, int m11)
public int2x2 int2x2(int v)
public int2x2 int2x2(bool v)
public int2x2 int2x2(bool2x2 v)
public int2x2 int2x2(UInt32 v)
public int2x2 int2x2(uint2x2 v)
public int2x2 int2x2(float v)
public int2x2 int2x2(float2x2 v)
public int2x2 int2x2(double v)
public int2x2 int2x2(double2x2 v)
public int2x2 transpose(int2x2 v)
public int determinant(int2x2 m)
public UInt32 hash(int2x2 v)
public uint2 hashwide(int2x2 v)
public int2x3 int2x3(int2 c0, int2 c1, int2 c2)
public int2x3 int2x3(int m00, int m01, int m02, int m10, int m11, int m12)
public int2x3 int2x3(int v)
public int2x3 int2x3(bool v)
public int2x3 int2x3(bool2x3 v)
public int2x3 int2x3(UInt32 v)
public int2x3 int2x3(uint2x3 v)
public int2x3 int2x3(float v)
public int2x3 int2x3(float2x3 v)
public int2x3 int2x3(double v)
public int2x3 int2x3(double2x3 v)
public int3x2 transpose(int2x3 v)
public UInt32 hash(int2x3 v)
public uint2 hashwide(int2x3 v)
public int2x4 int2x4(int2 c0, int2 c1, int2 c2, int2 c3)
public int2x4 int2x4(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13)
public int2x4 int2x4(int v)
public int2x4 int2x4(bool v)
public int2x4 int2x4(bool2x4 v)
public int2x4 int2x4(UInt32 v)
public int2x4 int2x4(uint2x4 v)
public int2x4 int2x4(float v)
public int2x4 int2x4(float2x4 v)
public int2x4 int2x4(double v)
public int2x4 int2x4(double2x4 v)
public int4x2 transpose(int2x4 v)
public UInt32 hash(int2x4 v)
public uint2 hashwide(int2x4 v)
public int3 int3(int x, int y, int z)
public int3 int3(int x, int2 yz)
public int3 int3(int2 xy, int z)
public int3 int3(int3 xyz)
public int3 int3(int v)
public int3 int3(bool v)
public int3 int3(bool3 v)
public int3 int3(UInt32 v)
public int3 int3(uint3 v)
public int3 int3(float v)
public int3 int3(float3 v)
public int3 int3(double v)
public int3 int3(double3 v)
public UInt32 hash(int3 v)
public uint3 hashwide(int3 v)
public int shuffle(int3 left, int3 right, ShuffleComponent x)
public int2 shuffle(int3 left, int3 right, ShuffleComponent x, ShuffleComponent y)
public int3 shuffle(int3 left, int3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public int4 shuffle(int3 left, int3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal int select_shuffle_component(int3 a, int3 b, ShuffleComponent component)
public int3x2 int3x2(int3 c0, int3 c1)
public int3x2 int3x2(int m00, int m01, int m10, int m11, int m20, int m21)
public int3x2 int3x2(int v)
public int3x2 int3x2(bool v)
public int3x2 int3x2(bool3x2 v)
public int3x2 int3x2(UInt32 v)
public int3x2 int3x2(uint3x2 v)
public int3x2 int3x2(float v)
public int3x2 int3x2(float3x2 v)
public int3x2 int3x2(double v)
public int3x2 int3x2(double3x2 v)
public int2x3 transpose(int3x2 v)
public UInt32 hash(int3x2 v)
public uint3 hashwide(int3x2 v)
public int3x3 int3x3(int3 c0, int3 c1, int3 c2)
public int3x3 int3x3(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22)
public int3x3 int3x3(int v)
public int3x3 int3x3(bool v)
public int3x3 int3x3(bool3x3 v)
public int3x3 int3x3(UInt32 v)
public int3x3 int3x3(uint3x3 v)
public int3x3 int3x3(float v)
public int3x3 int3x3(float3x3 v)
public int3x3 int3x3(double v)
public int3x3 int3x3(double3x3 v)
public int3x3 transpose(int3x3 v)
public int determinant(int3x3 m)
public UInt32 hash(int3x3 v)
public uint3 hashwide(int3x3 v)
public int3x4 int3x4(int3 c0, int3 c1, int3 c2, int3 c3)
public int3x4 int3x4(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23)
public int3x4 int3x4(int v)
public int3x4 int3x4(bool v)
public int3x4 int3x4(bool3x4 v)
public int3x4 int3x4(UInt32 v)
public int3x4 int3x4(uint3x4 v)
public int3x4 int3x4(float v)
public int3x4 int3x4(float3x4 v)
public int3x4 int3x4(double v)
public int3x4 int3x4(double3x4 v)
public int4x3 transpose(int3x4 v)
public UInt32 hash(int3x4 v)
public uint3 hashwide(int3x4 v)
public int4 int4(int x, int y, int z, int w)
public int4 int4(int x, int y, int2 zw)
public int4 int4(int x, int2 yz, int w)
public int4 int4(int x, int3 yzw)
public int4 int4(int2 xy, int z, int w)
public int4 int4(int2 xy, int2 zw)
public int4 int4(int3 xyz, int w)
public int4 int4(int4 xyzw)
public int4 int4(int v)
public int4 int4(bool v)
public int4 int4(bool4 v)
public int4 int4(UInt32 v)
public int4 int4(uint4 v)
public int4 int4(float v)
public int4 int4(float4 v)
public int4 int4(double v)
public int4 int4(double4 v)
public UInt32 hash(int4 v)
public uint4 hashwide(int4 v)
public int shuffle(int4 left, int4 right, ShuffleComponent x)
public int2 shuffle(int4 left, int4 right, ShuffleComponent x, ShuffleComponent y)
public int3 shuffle(int4 left, int4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public int4 shuffle(int4 left, int4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal int select_shuffle_component(int4 a, int4 b, ShuffleComponent component)
public int4x2 int4x2(int4 c0, int4 c1)
public int4x2 int4x2(int m00, int m01, int m10, int m11, int m20, int m21, int m30, int m31)
public int4x2 int4x2(int v)
public int4x2 int4x2(bool v)
public int4x2 int4x2(bool4x2 v)
public int4x2 int4x2(UInt32 v)
public int4x2 int4x2(uint4x2 v)
public int4x2 int4x2(float v)
public int4x2 int4x2(float4x2 v)
public int4x2 int4x2(double v)
public int4x2 int4x2(double4x2 v)
public int2x4 transpose(int4x2 v)
public UInt32 hash(int4x2 v)
public uint4 hashwide(int4x2 v)
public int4x3 int4x3(int4 c0, int4 c1, int4 c2)
public int4x3 int4x3(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22, int m30, int m31, int m32)
public int4x3 int4x3(int v)
public int4x3 int4x3(bool v)
public int4x3 int4x3(bool4x3 v)
public int4x3 int4x3(UInt32 v)
public int4x3 int4x3(uint4x3 v)
public int4x3 int4x3(float v)
public int4x3 int4x3(float4x3 v)
public int4x3 int4x3(double v)
public int4x3 int4x3(double4x3 v)
public int3x4 transpose(int4x3 v)
public UInt32 hash(int4x3 v)
public uint4 hashwide(int4x3 v)
public int4x4 int4x4(int4 c0, int4 c1, int4 c2, int4 c3)
public int4x4 int4x4(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23, int m30, int m31, int m32, int m33)
public int4x4 int4x4(int v)
public int4x4 int4x4(bool v)
public int4x4 int4x4(bool4x4 v)
public int4x4 int4x4(UInt32 v)
public int4x4 int4x4(uint4x4 v)
public int4x4 int4x4(float v)
public int4x4 int4x4(float4x4 v)
public int4x4 int4x4(double v)
public int4x4 int4x4(double4x4 v)
public int4x4 transpose(int4x4 v)
public int determinant(int4x4 m)
public UInt32 hash(int4x4 v)
public uint4 hashwide(int4x4 v)
public int asint(UInt32 x)
public int2 asint(uint2 x)
public int3 asint(uint3 x)
public int4 asint(uint4 x)
public int asint(float x)
public int2 asint(float2 x)
public int3 asint(float3 x)
public int4 asint(float4 x)
public UInt32 asuint(int x)
public uint2 asuint(int2 x)
public uint3 asuint(int3 x)
public uint4 asuint(int4 x)
public UInt32 asuint(float x)
public uint2 asuint(float2 x)
public uint3 asuint(float3 x)
public uint4 asuint(float4 x)
public long aslong(ulong x)
public long aslong(double x)
public ulong asulong(long x)
public ulong asulong(double x)
public float asfloat(int x)
public float2 asfloat(int2 x)
public float3 asfloat(int3 x)
public float4 asfloat(int4 x)
public float asfloat(UInt32 x)
public float2 asfloat(uint2 x)
public float3 asfloat(uint3 x)
public float4 asfloat(uint4 x)
public int bitmask(bool4 value)
public double asdouble(long x)
public double asdouble(ulong x)
public bool isfinite(float x)
public bool2 isfinite(float2 x)
public bool3 isfinite(float3 x)
public bool4 isfinite(float4 x)
public bool isfinite(double x)
public bool2 isfinite(double2 x)
public bool3 isfinite(double3 x)
public bool4 isfinite(double4 x)
public bool isinf(float x)
public bool2 isinf(float2 x)
public bool3 isinf(float3 x)
public bool4 isinf(float4 x)
public bool isinf(double x)
public bool2 isinf(double2 x)
public bool3 isinf(double3 x)
public bool4 isinf(double4 x)
public bool isnan(float x)
public bool2 isnan(float2 x)
public bool3 isnan(float3 x)
public bool4 isnan(float4 x)
public bool isnan(double x)
public bool2 isnan(double2 x)
public bool3 isnan(double3 x)
public bool4 isnan(double4 x)
public bool ispow2(int x)
public bool2 ispow2(int2 x)
public bool3 ispow2(int3 x)
public bool4 ispow2(int4 x)
public bool ispow2(UInt32 x)
public bool2 ispow2(uint2 x)
public bool3 ispow2(uint3 x)
public bool4 ispow2(uint4 x)
public int min(int x, int y)
public int2 min(int2 x, int2 y)
public int3 min(int3 x, int3 y)
public int4 min(int4 x, int4 y)
public UInt32 min(UInt32 x, UInt32 y)
public uint2 min(uint2 x, uint2 y)
public uint3 min(uint3 x, uint3 y)
public uint4 min(uint4 x, uint4 y)
public long min(long x, long y)
public ulong min(ulong x, ulong y)
public float min(float x, float y)
public float2 min(float2 x, float2 y)
public float3 min(float3 x, float3 y)
public float4 min(float4 x, float4 y)
public double min(double x, double y)
public double2 min(double2 x, double2 y)
public double3 min(double3 x, double3 y)
public double4 min(double4 x, double4 y)
public int max(int x, int y)
public int2 max(int2 x, int2 y)
public int3 max(int3 x, int3 y)
public int4 max(int4 x, int4 y)
public UInt32 max(UInt32 x, UInt32 y)
public uint2 max(uint2 x, uint2 y)
public uint3 max(uint3 x, uint3 y)
public uint4 max(uint4 x, uint4 y)
public long max(long x, long y)
public ulong max(ulong x, ulong y)
public float max(float x, float y)
public float2 max(float2 x, float2 y)
public float3 max(float3 x, float3 y)
public float4 max(float4 x, float4 y)
public double max(double x, double y)
public double2 max(double2 x, double2 y)
public double3 max(double3 x, double3 y)
public double4 max(double4 x, double4 y)
public float lerp(float x, float y, float s)
public float2 lerp(float2 x, float2 y, float s)
public float3 lerp(float3 x, float3 y, float s)
public float4 lerp(float4 x, float4 y, float s)
public float2 lerp(float2 x, float2 y, float2 s)
public float3 lerp(float3 x, float3 y, float3 s)
public float4 lerp(float4 x, float4 y, float4 s)
public double lerp(double x, double y, double s)
public double2 lerp(double2 x, double2 y, double s)
public double3 lerp(double3 x, double3 y, double s)
public double4 lerp(double4 x, double4 y, double s)
public double2 lerp(double2 x, double2 y, double2 s)
public double3 lerp(double3 x, double3 y, double3 s)
public double4 lerp(double4 x, double4 y, double4 s)
public float unlerp(float a, float b, float x)
public float2 unlerp(float2 a, float2 b, float2 x)
public float3 unlerp(float3 a, float3 b, float3 x)
public float4 unlerp(float4 a, float4 b, float4 x)
public double unlerp(double a, double b, double x)
public double2 unlerp(double2 a, double2 b, double2 x)
public double3 unlerp(double3 a, double3 b, double3 x)
public double4 unlerp(double4 a, double4 b, double4 x)
public float remap(float a, float b, float c, float d, float x)
public float2 remap(float2 a, float2 b, float2 c, float2 d, float2 x)
public float3 remap(float3 a, float3 b, float3 c, float3 d, float3 x)
public float4 remap(float4 a, float4 b, float4 c, float4 d, float4 x)
public double remap(double a, double b, double c, double d, double x)
public double2 remap(double2 a, double2 b, double2 c, double2 d, double2 x)
public double3 remap(double3 a, double3 b, double3 c, double3 d, double3 x)
public double4 remap(double4 a, double4 b, double4 c, double4 d, double4 x)
public int mad(int a, int b, int c)
public int2 mad(int2 a, int2 b, int2 c)
public int3 mad(int3 a, int3 b, int3 c)
public int4 mad(int4 a, int4 b, int4 c)
public UInt32 mad(UInt32 a, UInt32 b, UInt32 c)
public uint2 mad(uint2 a, uint2 b, uint2 c)
public uint3 mad(uint3 a, uint3 b, uint3 c)
public uint4 mad(uint4 a, uint4 b, uint4 c)
public long mad(long a, long b, long c)
public ulong mad(ulong a, ulong b, ulong c)
public float mad(float a, float b, float c)
public float2 mad(float2 a, float2 b, float2 c)
public float3 mad(float3 a, float3 b, float3 c)
public float4 mad(float4 a, float4 b, float4 c)
public double mad(double a, double b, double c)
public double2 mad(double2 a, double2 b, double2 c)
public double3 mad(double3 a, double3 b, double3 c)
public double4 mad(double4 a, double4 b, double4 c)
public int clamp(int x, int a, int b)
public int2 clamp(int2 x, int2 a, int2 b)
public int3 clamp(int3 x, int3 a, int3 b)
public int4 clamp(int4 x, int4 a, int4 b)
public UInt32 clamp(UInt32 x, UInt32 a, UInt32 b)
public uint2 clamp(uint2 x, uint2 a, uint2 b)
public uint3 clamp(uint3 x, uint3 a, uint3 b)
public uint4 clamp(uint4 x, uint4 a, uint4 b)
public long clamp(long x, long a, long b)
public ulong clamp(ulong x, ulong a, ulong b)
public float clamp(float x, float a, float b)
public float2 clamp(float2 x, float2 a, float2 b)
public float3 clamp(float3 x, float3 a, float3 b)
public float4 clamp(float4 x, float4 a, float4 b)
public double clamp(double x, double a, double b)
public double2 clamp(double2 x, double2 a, double2 b)
public double3 clamp(double3 x, double3 a, double3 b)
public double4 clamp(double4 x, double4 a, double4 b)
public float saturate(float x)
public float2 saturate(float2 x)
public float3 saturate(float3 x)
public float4 saturate(float4 x)
public double saturate(double x)
public double2 saturate(double2 x)
public double3 saturate(double3 x)
public double4 saturate(double4 x)
public int abs(int x)
public int2 abs(int2 x)
public int3 abs(int3 x)
public int4 abs(int4 x)
public long abs(long x)
public float abs(float x)
public float2 abs(float2 x)
public float3 abs(float3 x)
public float4 abs(float4 x)
public double abs(double x)
public double2 abs(double2 x)
public double3 abs(double3 x)
public double4 abs(double4 x)
public int dot(int x, int y)
public int dot(int2 x, int2 y)
public int dot(int3 x, int3 y)
public int dot(int4 x, int4 y)
public UInt32 dot(UInt32 x, UInt32 y)
public UInt32 dot(uint2 x, uint2 y)
public UInt32 dot(uint3 x, uint3 y)
public UInt32 dot(uint4 x, uint4 y)
public float dot(float x, float y)
public float dot(float2 x, float2 y)
public float dot(float3 x, float3 y)
public float dot(float4 x, float4 y)
public double dot(double x, double y)
public double dot(double2 x, double2 y)
public double dot(double3 x, double3 y)
public double dot(double4 x, double4 y)
public float tan(float x)
public float2 tan(float2 x)
public float3 tan(float3 x)
public float4 tan(float4 x)
public double tan(double x)
public double2 tan(double2 x)
public double3 tan(double3 x)
public double4 tan(double4 x)
public float tanh(float x)
public float2 tanh(float2 x)
public float3 tanh(float3 x)
public float4 tanh(float4 x)
public double tanh(double x)
public double2 tanh(double2 x)
public double3 tanh(double3 x)
public double4 tanh(double4 x)
public float atan(float x)
public float2 atan(float2 x)
public float3 atan(float3 x)
public float4 atan(float4 x)
public double atan(double x)
public double2 atan(double2 x)
public double3 atan(double3 x)
public double4 atan(double4 x)
public float atan2(float y, float x)
public float2 atan2(float2 y, float2 x)
public float3 atan2(float3 y, float3 x)
public float4 atan2(float4 y, float4 x)
public double atan2(double y, double x)
public double2 atan2(double2 y, double2 x)
public double3 atan2(double3 y, double3 x)
public double4 atan2(double4 y, double4 x)
public float cos(float x)
public float2 cos(float2 x)
public float3 cos(float3 x)
public float4 cos(float4 x)
public double cos(double x)
public double2 cos(double2 x)
public double3 cos(double3 x)
public double4 cos(double4 x)
public float cosh(float x)
public float2 cosh(float2 x)
public float3 cosh(float3 x)
public float4 cosh(float4 x)
public double cosh(double x)
public double2 cosh(double2 x)
public double3 cosh(double3 x)
public double4 cosh(double4 x)
public float acos(float x)
public float2 acos(float2 x)
public float3 acos(float3 x)
public float4 acos(float4 x)
public double acos(double x)
public double2 acos(double2 x)
public double3 acos(double3 x)
public double4 acos(double4 x)
public float sin(float x)
public float2 sin(float2 x)
public float3 sin(float3 x)
public float4 sin(float4 x)
public double sin(double x)
public double2 sin(double2 x)
public double3 sin(double3 x)
public double4 sin(double4 x)
public float sinh(float x)
public float2 sinh(float2 x)
public float3 sinh(float3 x)
public float4 sinh(float4 x)
public double sinh(double x)
public double2 sinh(double2 x)
public double3 sinh(double3 x)
public double4 sinh(double4 x)
public float asin(float x)
public float2 asin(float2 x)
public float3 asin(float3 x)
public float4 asin(float4 x)
public double asin(double x)
public double2 asin(double2 x)
public double3 asin(double3 x)
public double4 asin(double4 x)
public float floor(float x)
public float2 floor(float2 x)
public float3 floor(float3 x)
public float4 floor(float4 x)
public double floor(double x)
public double2 floor(double2 x)
public double3 floor(double3 x)
public double4 floor(double4 x)
public float ceil(float x)
public float2 ceil(float2 x)
public float3 ceil(float3 x)
public float4 ceil(float4 x)
public double ceil(double x)
public double2 ceil(double2 x)
public double3 ceil(double3 x)
public double4 ceil(double4 x)
public float round(float x)
public float2 round(float2 x)
public float3 round(float3 x)
public float4 round(float4 x)
public double round(double x)
public double2 round(double2 x)
public double3 round(double3 x)
public double4 round(double4 x)
public float trunc(float x)
public float2 trunc(float2 x)
public float3 trunc(float3 x)
public float4 trunc(float4 x)
public double trunc(double x)
public double2 trunc(double2 x)
public double3 trunc(double3 x)
public double4 trunc(double4 x)
public float frac(float x)
public float2 frac(float2 x)
public float3 frac(float3 x)
public float4 frac(float4 x)
public double frac(double x)
public double2 frac(double2 x)
public double3 frac(double3 x)
public double4 frac(double4 x)
public float rcp(float x)
public float2 rcp(float2 x)
public float3 rcp(float3 x)
public float4 rcp(float4 x)
public double rcp(double x)
public double2 rcp(double2 x)
public double3 rcp(double3 x)
public double4 rcp(double4 x)
public float sign(float x)
public float2 sign(float2 x)
public float3 sign(float3 x)
public float4 sign(float4 x)
public double sign(double x)
public double2 sign(double2 x)
public double3 sign(double3 x)
public double4 sign(double4 x)
public float pow(float x, float y)
public float2 pow(float2 x, float2 y)
public float3 pow(float3 x, float3 y)
public float4 pow(float4 x, float4 y)
public double pow(double x, double y)
public double2 pow(double2 x, double2 y)
public double3 pow(double3 x, double3 y)
public double4 pow(double4 x, double4 y)
public float exp(float x)
public float2 exp(float2 x)
public float3 exp(float3 x)
public float4 exp(float4 x)
public double exp(double x)
public double2 exp(double2 x)
public double3 exp(double3 x)
public double4 exp(double4 x)
public float exp2(float x)
public float2 exp2(float2 x)
public float3 exp2(float3 x)
public float4 exp2(float4 x)
public double exp2(double x)
public double2 exp2(double2 x)
public double3 exp2(double3 x)
public double4 exp2(double4 x)
public float exp10(float x)
public float2 exp10(float2 x)
public float3 exp10(float3 x)
public float4 exp10(float4 x)
public double exp10(double x)
public double2 exp10(double2 x)
public double3 exp10(double3 x)
public double4 exp10(double4 x)
public float log(float x)
public float2 log(float2 x)
public float3 log(float3 x)
public float4 log(float4 x)
public double log(double x)
public double2 log(double2 x)
public double3 log(double3 x)
public double4 log(double4 x)
public float log2(float x)
public float2 log2(float2 x)
public float3 log2(float3 x)
public float4 log2(float4 x)
public double log2(double x)
public double2 log2(double2 x)
public double3 log2(double3 x)
public double4 log2(double4 x)
public float log10(float x)
public float2 log10(float2 x)
public float3 log10(float3 x)
public float4 log10(float4 x)
public double log10(double x)
public double2 log10(double2 x)
public double3 log10(double3 x)
public double4 log10(double4 x)
public float fmod(float x, float y)
public float2 fmod(float2 x, float2 y)
public float3 fmod(float3 x, float3 y)
public float4 fmod(float4 x, float4 y)
public double fmod(double x, double y)
public double2 fmod(double2 x, double2 y)
public double3 fmod(double3 x, double3 y)
public double4 fmod(double4 x, double4 y)
public float modf(float x, Single& i)
public float2 modf(float2 x, float2& i)
public float3 modf(float3 x, float3& i)
public float4 modf(float4 x, float4& i)
public double modf(double x, Double& i)
public double2 modf(double2 x, double2& i)
public double3 modf(double3 x, double3& i)
public double4 modf(double4 x, double4& i)
public float sqrt(float x)
public float2 sqrt(float2 x)
public float3 sqrt(float3 x)
public float4 sqrt(float4 x)
public double sqrt(double x)
public double2 sqrt(double2 x)
public double3 sqrt(double3 x)
public double4 sqrt(double4 x)
public float rsqrt(float x)
public float2 rsqrt(float2 x)
public float3 rsqrt(float3 x)
public float4 rsqrt(float4 x)
public double rsqrt(double x)
public double2 rsqrt(double2 x)
public double3 rsqrt(double3 x)
public double4 rsqrt(double4 x)
public float2 normalize(float2 x)
public float3 normalize(float3 x)
public float4 normalize(float4 x)
public double2 normalize(double2 x)
public double3 normalize(double3 x)
public double4 normalize(double4 x)
public float2 normalizesafe(float2 x, float2 defaultvalue)
public float3 normalizesafe(float3 x, float3 defaultvalue)
public float4 normalizesafe(float4 x, float4 defaultvalue)
public double2 normalizesafe(double2 x, double2 defaultvalue)
public double3 normalizesafe(double3 x, double3 defaultvalue)
public double4 normalizesafe(double4 x, double4 defaultvalue)
public float length(float x)
public float length(float2 x)
public float length(float3 x)
public float length(float4 x)
public double length(double x)
public double length(double2 x)
public double length(double3 x)
public double length(double4 x)
public float lengthsq(float x)
public float lengthsq(float2 x)
public float lengthsq(float3 x)
public float lengthsq(float4 x)
public double lengthsq(double x)
public double lengthsq(double2 x)
public double lengthsq(double3 x)
public double lengthsq(double4 x)
public float distance(float x, float y)
public float distance(float2 x, float2 y)
public float distance(float3 x, float3 y)
public float distance(float4 x, float4 y)
public double distance(double x, double y)
public double distance(double2 x, double2 y)
public double distance(double3 x, double3 y)
public double distance(double4 x, double4 y)
public float distancesq(float x, float y)
public float distancesq(float2 x, float2 y)
public float distancesq(float3 x, float3 y)
public float distancesq(float4 x, float4 y)
public double distancesq(double x, double y)
public double distancesq(double2 x, double2 y)
public double distancesq(double3 x, double3 y)
public double distancesq(double4 x, double4 y)
public float3 cross(float3 x, float3 y)
public double3 cross(double3 x, double3 y)
public float smoothstep(float a, float b, float x)
public float2 smoothstep(float2 a, float2 b, float2 x)
public float3 smoothstep(float3 a, float3 b, float3 x)
public float4 smoothstep(float4 a, float4 b, float4 x)
public double smoothstep(double a, double b, double x)
public double2 smoothstep(double2 a, double2 b, double2 x)
public double3 smoothstep(double3 a, double3 b, double3 x)
public double4 smoothstep(double4 a, double4 b, double4 x)
public bool any(bool2 x)
public bool any(bool3 x)
public bool any(bool4 x)
public bool any(int2 x)
public bool any(int3 x)
public bool any(int4 x)
public bool any(uint2 x)
public bool any(uint3 x)
public bool any(uint4 x)
public bool any(float2 x)
public bool any(float3 x)
public bool any(float4 x)
public bool any(double2 x)
public bool any(double3 x)
public bool any(double4 x)
public bool all(bool2 x)
public bool all(bool3 x)
public bool all(bool4 x)
public bool all(int2 x)
public bool all(int3 x)
public bool all(int4 x)
public bool all(uint2 x)
public bool all(uint3 x)
public bool all(uint4 x)
public bool all(float2 x)
public bool all(float3 x)
public bool all(float4 x)
public bool all(double2 x)
public bool all(double3 x)
public bool all(double4 x)
public int select(int a, int b, bool c)
public int2 select(int2 a, int2 b, bool c)
public int3 select(int3 a, int3 b, bool c)
public int4 select(int4 a, int4 b, bool c)
public int2 select(int2 a, int2 b, bool2 c)
public int3 select(int3 a, int3 b, bool3 c)
public int4 select(int4 a, int4 b, bool4 c)
public UInt32 select(UInt32 a, UInt32 b, bool c)
public uint2 select(uint2 a, uint2 b, bool c)
public uint3 select(uint3 a, uint3 b, bool c)
public uint4 select(uint4 a, uint4 b, bool c)
public uint2 select(uint2 a, uint2 b, bool2 c)
public uint3 select(uint3 a, uint3 b, bool3 c)
public uint4 select(uint4 a, uint4 b, bool4 c)
public long select(long a, long b, bool c)
public ulong select(ulong a, ulong b, bool c)
public float select(float a, float b, bool c)
public float2 select(float2 a, float2 b, bool c)
public float3 select(float3 a, float3 b, bool c)
public float4 select(float4 a, float4 b, bool c)
public float2 select(float2 a, float2 b, bool2 c)
public float3 select(float3 a, float3 b, bool3 c)
public float4 select(float4 a, float4 b, bool4 c)
public double select(double a, double b, bool c)
public double2 select(double2 a, double2 b, bool c)
public double3 select(double3 a, double3 b, bool c)
public double4 select(double4 a, double4 b, bool c)
public double2 select(double2 a, double2 b, bool2 c)
public double3 select(double3 a, double3 b, bool3 c)
public double4 select(double4 a, double4 b, bool4 c)
public float step(float y, float x)
public float2 step(float2 y, float2 x)
public float3 step(float3 y, float3 x)
public float4 step(float4 y, float4 x)
public double step(double y, double x)
public double2 step(double2 y, double2 x)
public double3 step(double3 y, double3 x)
public double4 step(double4 y, double4 x)
public float2 reflect(float2 i, float2 n)
public float3 reflect(float3 i, float3 n)
public float4 reflect(float4 i, float4 n)
public double2 reflect(double2 i, double2 n)
public double3 reflect(double3 i, double3 n)
public double4 reflect(double4 i, double4 n)
public float2 refract(float2 i, float2 n, float eta)
public float3 refract(float3 i, float3 n, float eta)
public float4 refract(float4 i, float4 n, float eta)
public double2 refract(double2 i, double2 n, double eta)
public double3 refract(double3 i, double3 n, double eta)
public double4 refract(double4 i, double4 n, double eta)
public float2 project(float2 a, float2 b)
public float3 project(float3 a, float3 b)
public float4 project(float4 a, float4 b)
public float2 projectsafe(float2 a, float2 b, float2 defaultValue)
public float3 projectsafe(float3 a, float3 b, float3 defaultValue)
public float4 projectsafe(float4 a, float4 b, float4 defaultValue)
public double2 project(double2 a, double2 b)
public double3 project(double3 a, double3 b)
public double4 project(double4 a, double4 b)
public double2 projectsafe(double2 a, double2 b, double2 defaultValue)
public double3 projectsafe(double3 a, double3 b, double3 defaultValue)
public double4 projectsafe(double4 a, double4 b, double4 defaultValue)
public float2 faceforward(float2 n, float2 i, float2 ng)
public float3 faceforward(float3 n, float3 i, float3 ng)
public float4 faceforward(float4 n, float4 i, float4 ng)
public double2 faceforward(double2 n, double2 i, double2 ng)
public double3 faceforward(double3 n, double3 i, double3 ng)
public double4 faceforward(double4 n, double4 i, double4 ng)
public void sincos(float x, Single& s, Single& c)
public void sincos(float2 x, float2& s, float2& c)
public void sincos(float3 x, float3& s, float3& c)
public void sincos(float4 x, float4& s, float4& c)
public void sincos(double x, Double& s, Double& c)
public void sincos(double2 x, double2& s, double2& c)
public void sincos(double3 x, double3& s, double3& c)
public void sincos(double4 x, double4& s, double4& c)
public int countbits(int x)
public int2 countbits(int2 x)
public int3 countbits(int3 x)
public int4 countbits(int4 x)
public int countbits(UInt32 x)
public int2 countbits(uint2 x)
public int3 countbits(uint3 x)
public int4 countbits(uint4 x)
public int countbits(ulong x)
public int countbits(long x)
public int lzcnt(int x)
public int2 lzcnt(int2 x)
public int3 lzcnt(int3 x)
public int4 lzcnt(int4 x)
public int lzcnt(UInt32 x)
public int2 lzcnt(uint2 x)
public int3 lzcnt(uint3 x)
public int4 lzcnt(uint4 x)
public int lzcnt(long x)
public int lzcnt(ulong x)
public int tzcnt(int x)
public int2 tzcnt(int2 x)
public int3 tzcnt(int3 x)
public int4 tzcnt(int4 x)
public int tzcnt(UInt32 x)
public int2 tzcnt(uint2 x)
public int3 tzcnt(uint3 x)
public int4 tzcnt(uint4 x)
public int tzcnt(long x)
public int tzcnt(ulong x)
public int reversebits(int x)
public int2 reversebits(int2 x)
public int3 reversebits(int3 x)
public int4 reversebits(int4 x)
public UInt32 reversebits(UInt32 x)
public uint2 reversebits(uint2 x)
public uint3 reversebits(uint3 x)
public uint4 reversebits(uint4 x)
public long reversebits(long x)
public ulong reversebits(ulong x)
public int rol(int x, int n)
public int2 rol(int2 x, int n)
public int3 rol(int3 x, int n)
public int4 rol(int4 x, int n)
public UInt32 rol(UInt32 x, int n)
public uint2 rol(uint2 x, int n)
public uint3 rol(uint3 x, int n)
public uint4 rol(uint4 x, int n)
public long rol(long x, int n)
public ulong rol(ulong x, int n)
public int ror(int x, int n)
public int2 ror(int2 x, int n)
public int3 ror(int3 x, int n)
public int4 ror(int4 x, int n)
public UInt32 ror(UInt32 x, int n)
public uint2 ror(uint2 x, int n)
public uint3 ror(uint3 x, int n)
public uint4 ror(uint4 x, int n)
public long ror(long x, int n)
public ulong ror(ulong x, int n)
public int ceilpow2(int x)
public int2 ceilpow2(int2 x)
public int3 ceilpow2(int3 x)
public int4 ceilpow2(int4 x)
public UInt32 ceilpow2(UInt32 x)
public uint2 ceilpow2(uint2 x)
public uint3 ceilpow2(uint3 x)
public uint4 ceilpow2(uint4 x)
public long ceilpow2(long x)
public ulong ceilpow2(ulong x)
public int ceillog2(int x)
public int2 ceillog2(int2 x)
public int3 ceillog2(int3 x)
public int4 ceillog2(int4 x)
public int ceillog2(UInt32 x)
public int2 ceillog2(uint2 x)
public int3 ceillog2(uint3 x)
public int4 ceillog2(uint4 x)
public int floorlog2(int x)
public int2 floorlog2(int2 x)
public int3 floorlog2(int3 x)
public int4 floorlog2(int4 x)
public int floorlog2(UInt32 x)
public int2 floorlog2(uint2 x)
public int3 floorlog2(uint3 x)
public int4 floorlog2(uint4 x)
public float radians(float x)
public float2 radians(float2 x)
public float3 radians(float3 x)
public float4 radians(float4 x)
public double radians(double x)
public double2 radians(double2 x)
public double3 radians(double3 x)
public double4 radians(double4 x)
public float degrees(float x)
public float2 degrees(float2 x)
public float3 degrees(float3 x)
public float4 degrees(float4 x)
public double degrees(double x)
public double2 degrees(double2 x)
public double3 degrees(double3 x)
public double4 degrees(double4 x)
public int cmin(int2 x)
public int cmin(int3 x)
public int cmin(int4 x)
public UInt32 cmin(uint2 x)
public UInt32 cmin(uint3 x)
public UInt32 cmin(uint4 x)
public float cmin(float2 x)
public float cmin(float3 x)
public float cmin(float4 x)
public double cmin(double2 x)
public double cmin(double3 x)
public double cmin(double4 x)
public int cmax(int2 x)
public int cmax(int3 x)
public int cmax(int4 x)
public UInt32 cmax(uint2 x)
public UInt32 cmax(uint3 x)
public UInt32 cmax(uint4 x)
public float cmax(float2 x)
public float cmax(float3 x)
public float cmax(float4 x)
public double cmax(double2 x)
public double cmax(double3 x)
public double cmax(double4 x)
public int csum(int2 x)
public int csum(int3 x)
public int csum(int4 x)
public UInt32 csum(uint2 x)
public UInt32 csum(uint3 x)
public UInt32 csum(uint4 x)
public float csum(float2 x)
public float csum(float3 x)
public float csum(float4 x)
public double csum(double2 x)
public double csum(double3 x)
public double csum(double4 x)
public int compress(Int32* output, int index, int4 val, bool4 mask)
public int compress(UInt32* output, int index, uint4 val, bool4 mask)
public int compress(Single* output, int index, float4 val, bool4 mask)
public float f16tof32(UInt32 x)
public float2 f16tof32(uint2 x)
public float3 f16tof32(uint3 x)
public float4 f16tof32(uint4 x)
public UInt32 f32tof16(float x)
public uint2 f32tof16(float2 x)
public uint3 f32tof16(float3 x)
public uint4 f32tof16(float4 x)
public UInt32 hash(Void* pBuffer, int numBytes, UInt32 seed)
public float3 up()
public float3 down()
public float3 forward()
public float3 back()
public float3 left()
public float3 right()
internal float4 unpacklo(float4 a, float4 b)
internal double4 unpacklo(double4 a, double4 b)
internal float4 unpackhi(float4 a, float4 b)
internal double4 unpackhi(double4 a, double4 b)
internal float4 movelh(float4 a, float4 b)
internal double4 movelh(double4 a, double4 b)
internal float4 movehl(float4 a, float4 b)
internal double4 movehl(double4 a, double4 b)
internal UInt32 fold_to_uint(double x)
internal uint2 fold_to_uint(double2 x)
internal uint3 fold_to_uint(double3 x)
internal uint4 fold_to_uint(double4 x)
public float3x3 float3x3(float4x4 f4x4)
public float3x3 float3x3(quaternion rotation)
public float4x4 float4x4(float3x3 rotation, float3 translation)
public float4x4 float4x4(quaternion rotation, float3 translation)
public float4x4 float4x4(RigidTransform transform)
public float3x3 orthonormalize(float3x3 i)
public float mul(float a, float b)
public float mul(float2 a, float2 b)
public float2 mul(float2 a, float2x2 b)
public float3 mul(float2 a, float2x3 b)
public float4 mul(float2 a, float2x4 b)
public float mul(float3 a, float3 b)
public float2 mul(float3 a, float3x2 b)
public float3 mul(float3 a, float3x3 b)
public float4 mul(float3 a, float3x4 b)
public float mul(float4 a, float4 b)
public float2 mul(float4 a, float4x2 b)
public float3 mul(float4 a, float4x3 b)
public float4 mul(float4 a, float4x4 b)
public float2 mul(float2x2 a, float2 b)
public float2x2 mul(float2x2 a, float2x2 b)
public float2x3 mul(float2x2 a, float2x3 b)
public float2x4 mul(float2x2 a, float2x4 b)
public float2 mul(float2x3 a, float3 b)
public float2x2 mul(float2x3 a, float3x2 b)
public float2x3 mul(float2x3 a, float3x3 b)
public float2x4 mul(float2x3 a, float3x4 b)
public float2 mul(float2x4 a, float4 b)
public float2x2 mul(float2x4 a, float4x2 b)
public float2x3 mul(float2x4 a, float4x3 b)
public float2x4 mul(float2x4 a, float4x4 b)
public float3 mul(float3x2 a, float2 b)
public float3x2 mul(float3x2 a, float2x2 b)
public float3x3 mul(float3x2 a, float2x3 b)
public float3x4 mul(float3x2 a, float2x4 b)
public float3 mul(float3x3 a, float3 b)
public float3x2 mul(float3x3 a, float3x2 b)
public float3x3 mul(float3x3 a, float3x3 b)
public float3x4 mul(float3x3 a, float3x4 b)
public float3 mul(float3x4 a, float4 b)
public float3x2 mul(float3x4 a, float4x2 b)
public float3x3 mul(float3x4 a, float4x3 b)
public float3x4 mul(float3x4 a, float4x4 b)
public float4 mul(float4x2 a, float2 b)
public float4x2 mul(float4x2 a, float2x2 b)
public float4x3 mul(float4x2 a, float2x3 b)
public float4x4 mul(float4x2 a, float2x4 b)
public float4 mul(float4x3 a, float3 b)
public float4x2 mul(float4x3 a, float3x2 b)
public float4x3 mul(float4x3 a, float3x3 b)
public float4x4 mul(float4x3 a, float3x4 b)
public float4 mul(float4x4 a, float4 b)
public float4x2 mul(float4x4 a, float4x2 b)
public float4x3 mul(float4x4 a, float4x3 b)
public float4x4 mul(float4x4 a, float4x4 b)
public double mul(double a, double b)
public double mul(double2 a, double2 b)
public double2 mul(double2 a, double2x2 b)
public double3 mul(double2 a, double2x3 b)
public double4 mul(double2 a, double2x4 b)
public double mul(double3 a, double3 b)
public double2 mul(double3 a, double3x2 b)
public double3 mul(double3 a, double3x3 b)
public double4 mul(double3 a, double3x4 b)
public double mul(double4 a, double4 b)
public double2 mul(double4 a, double4x2 b)
public double3 mul(double4 a, double4x3 b)
public double4 mul(double4 a, double4x4 b)
public double2 mul(double2x2 a, double2 b)
public double2x2 mul(double2x2 a, double2x2 b)
public double2x3 mul(double2x2 a, double2x3 b)
public double2x4 mul(double2x2 a, double2x4 b)
public double2 mul(double2x3 a, double3 b)
public double2x2 mul(double2x3 a, double3x2 b)
public double2x3 mul(double2x3 a, double3x3 b)
public double2x4 mul(double2x3 a, double3x4 b)
public double2 mul(double2x4 a, double4 b)
public double2x2 mul(double2x4 a, double4x2 b)
public double2x3 mul(double2x4 a, double4x3 b)
public double2x4 mul(double2x4 a, double4x4 b)
public double3 mul(double3x2 a, double2 b)
public double3x2 mul(double3x2 a, double2x2 b)
public double3x3 mul(double3x2 a, double2x3 b)
public double3x4 mul(double3x2 a, double2x4 b)
public double3 mul(double3x3 a, double3 b)
public double3x2 mul(double3x3 a, double3x2 b)
public double3x3 mul(double3x3 a, double3x3 b)
public double3x4 mul(double3x3 a, double3x4 b)
public double3 mul(double3x4 a, double4 b)
public double3x2 mul(double3x4 a, double4x2 b)
public double3x3 mul(double3x4 a, double4x3 b)
public double3x4 mul(double3x4 a, double4x4 b)
public double4 mul(double4x2 a, double2 b)
public double4x2 mul(double4x2 a, double2x2 b)
public double4x3 mul(double4x2 a, double2x3 b)
public double4x4 mul(double4x2 a, double2x4 b)
public double4 mul(double4x3 a, double3 b)
public double4x2 mul(double4x3 a, double3x2 b)
public double4x3 mul(double4x3 a, double3x3 b)
public double4x4 mul(double4x3 a, double3x4 b)
public double4 mul(double4x4 a, double4 b)
public double4x2 mul(double4x4 a, double4x2 b)
public double4x3 mul(double4x4 a, double4x3 b)
public double4x4 mul(double4x4 a, double4x4 b)
public int mul(int a, int b)
public int mul(int2 a, int2 b)
public int2 mul(int2 a, int2x2 b)
public int3 mul(int2 a, int2x3 b)
public int4 mul(int2 a, int2x4 b)
public int mul(int3 a, int3 b)
public int2 mul(int3 a, int3x2 b)
public int3 mul(int3 a, int3x3 b)
public int4 mul(int3 a, int3x4 b)
public int mul(int4 a, int4 b)
public int2 mul(int4 a, int4x2 b)
public int3 mul(int4 a, int4x3 b)
public int4 mul(int4 a, int4x4 b)
public int2 mul(int2x2 a, int2 b)
public int2x2 mul(int2x2 a, int2x2 b)
public int2x3 mul(int2x2 a, int2x3 b)
public int2x4 mul(int2x2 a, int2x4 b)
public int2 mul(int2x3 a, int3 b)
public int2x2 mul(int2x3 a, int3x2 b)
public int2x3 mul(int2x3 a, int3x3 b)
public int2x4 mul(int2x3 a, int3x4 b)
public int2 mul(int2x4 a, int4 b)
public int2x2 mul(int2x4 a, int4x2 b)
public int2x3 mul(int2x4 a, int4x3 b)
public int2x4 mul(int2x4 a, int4x4 b)
public int3 mul(int3x2 a, int2 b)
public int3x2 mul(int3x2 a, int2x2 b)
public int3x3 mul(int3x2 a, int2x3 b)
public int3x4 mul(int3x2 a, int2x4 b)
public int3 mul(int3x3 a, int3 b)
public int3x2 mul(int3x3 a, int3x2 b)
public int3x3 mul(int3x3 a, int3x3 b)
public int3x4 mul(int3x3 a, int3x4 b)
public int3 mul(int3x4 a, int4 b)
public int3x2 mul(int3x4 a, int4x2 b)
public int3x3 mul(int3x4 a, int4x3 b)
public int3x4 mul(int3x4 a, int4x4 b)
public int4 mul(int4x2 a, int2 b)
public int4x2 mul(int4x2 a, int2x2 b)
public int4x3 mul(int4x2 a, int2x3 b)
public int4x4 mul(int4x2 a, int2x4 b)
public int4 mul(int4x3 a, int3 b)
public int4x2 mul(int4x3 a, int3x2 b)
public int4x3 mul(int4x3 a, int3x3 b)
public int4x4 mul(int4x3 a, int3x4 b)
public int4 mul(int4x4 a, int4 b)
public int4x2 mul(int4x4 a, int4x2 b)
public int4x3 mul(int4x4 a, int4x3 b)
public int4x4 mul(int4x4 a, int4x4 b)
public UInt32 mul(UInt32 a, UInt32 b)
public UInt32 mul(uint2 a, uint2 b)
public uint2 mul(uint2 a, uint2x2 b)
public uint3 mul(uint2 a, uint2x3 b)
public uint4 mul(uint2 a, uint2x4 b)
public UInt32 mul(uint3 a, uint3 b)
public uint2 mul(uint3 a, uint3x2 b)
public uint3 mul(uint3 a, uint3x3 b)
public uint4 mul(uint3 a, uint3x4 b)
public UInt32 mul(uint4 a, uint4 b)
public uint2 mul(uint4 a, uint4x2 b)
public uint3 mul(uint4 a, uint4x3 b)
public uint4 mul(uint4 a, uint4x4 b)
public uint2 mul(uint2x2 a, uint2 b)
public uint2x2 mul(uint2x2 a, uint2x2 b)
public uint2x3 mul(uint2x2 a, uint2x3 b)
public uint2x4 mul(uint2x2 a, uint2x4 b)
public uint2 mul(uint2x3 a, uint3 b)
public uint2x2 mul(uint2x3 a, uint3x2 b)
public uint2x3 mul(uint2x3 a, uint3x3 b)
public uint2x4 mul(uint2x3 a, uint3x4 b)
public uint2 mul(uint2x4 a, uint4 b)
public uint2x2 mul(uint2x4 a, uint4x2 b)
public uint2x3 mul(uint2x4 a, uint4x3 b)
public uint2x4 mul(uint2x4 a, uint4x4 b)
public uint3 mul(uint3x2 a, uint2 b)
public uint3x2 mul(uint3x2 a, uint2x2 b)
public uint3x3 mul(uint3x2 a, uint2x3 b)
public uint3x4 mul(uint3x2 a, uint2x4 b)
public uint3 mul(uint3x3 a, uint3 b)
public uint3x2 mul(uint3x3 a, uint3x2 b)
public uint3x3 mul(uint3x3 a, uint3x3 b)
public uint3x4 mul(uint3x3 a, uint3x4 b)
public uint3 mul(uint3x4 a, uint4 b)
public uint3x2 mul(uint3x4 a, uint4x2 b)
public uint3x3 mul(uint3x4 a, uint4x3 b)
public uint3x4 mul(uint3x4 a, uint4x4 b)
public uint4 mul(uint4x2 a, uint2 b)
public uint4x2 mul(uint4x2 a, uint2x2 b)
public uint4x3 mul(uint4x2 a, uint2x3 b)
public uint4x4 mul(uint4x2 a, uint2x4 b)
public uint4 mul(uint4x3 a, uint3 b)
public uint4x2 mul(uint4x3 a, uint3x2 b)
public uint4x3 mul(uint4x3 a, uint3x3 b)
public uint4x4 mul(uint4x3 a, uint3x4 b)
public uint4 mul(uint4x4 a, uint4 b)
public uint4x2 mul(uint4x4 a, uint4x2 b)
public uint4x3 mul(uint4x4 a, uint4x3 b)
public uint4x4 mul(uint4x4 a, uint4x4 b)
public quaternion quaternion(float x, float y, float z, float w)
public quaternion quaternion(float4 value)
public quaternion quaternion(float3x3 m)
public quaternion quaternion(float4x4 m)
public quaternion conjugate(quaternion q)
public quaternion inverse(quaternion q)
public float dot(quaternion a, quaternion b)
public float length(quaternion q)
public float lengthsq(quaternion q)
public quaternion normalize(quaternion q)
public quaternion normalizesafe(quaternion q)
public quaternion normalizesafe(quaternion q, quaternion defaultvalue)
public quaternion unitexp(quaternion q)
public quaternion exp(quaternion q)
public quaternion unitlog(quaternion q)
public quaternion log(quaternion q)
public quaternion mul(quaternion a, quaternion b)
public float3 mul(quaternion q, float3 v)
public float3 rotate(quaternion q, float3 v)
public quaternion nlerp(quaternion q1, quaternion q2, float t)
public quaternion slerp(quaternion q1, quaternion q2, float t)
public UInt32 hash(quaternion q)
public uint4 hashwide(quaternion q)
public float3 forward(quaternion q)
public RigidTransform RigidTransform(quaternion rot, float3 pos)
public RigidTransform RigidTransform(float3x3 rotation, float3 translation)
public RigidTransform RigidTransform(float4x4 transform)
public RigidTransform inverse(RigidTransform t)
public RigidTransform mul(RigidTransform a, RigidTransform b)
public float4 mul(RigidTransform a, float4 pos)
public float3 rotate(RigidTransform a, float3 dir)
public float3 transform(RigidTransform a, float3 pos)
public UInt32 hash(RigidTransform t)
public uint4 hashwide(RigidTransform t)
public uint2 uint2(UInt32 x, UInt32 y)
public uint2 uint2(uint2 xy)
public uint2 uint2(UInt32 v)
public uint2 uint2(bool v)
public uint2 uint2(bool2 v)
public uint2 uint2(int v)
public uint2 uint2(int2 v)
public uint2 uint2(float v)
public uint2 uint2(float2 v)
public uint2 uint2(double v)
public uint2 uint2(double2 v)
public UInt32 hash(uint2 v)
public uint2 hashwide(uint2 v)
public UInt32 shuffle(uint2 left, uint2 right, ShuffleComponent x)
public uint2 shuffle(uint2 left, uint2 right, ShuffleComponent x, ShuffleComponent y)
public uint3 shuffle(uint2 left, uint2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public uint4 shuffle(uint2 left, uint2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal UInt32 select_shuffle_component(uint2 a, uint2 b, ShuffleComponent component)
public uint2x2 uint2x2(uint2 c0, uint2 c1)
public uint2x2 uint2x2(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11)
public uint2x2 uint2x2(UInt32 v)
public uint2x2 uint2x2(bool v)
public uint2x2 uint2x2(bool2x2 v)
public uint2x2 uint2x2(int v)
public uint2x2 uint2x2(int2x2 v)
public uint2x2 uint2x2(float v)
public uint2x2 uint2x2(float2x2 v)
public uint2x2 uint2x2(double v)
public uint2x2 uint2x2(double2x2 v)
public uint2x2 transpose(uint2x2 v)
public UInt32 hash(uint2x2 v)
public uint2 hashwide(uint2x2 v)
public uint2x3 uint2x3(uint2 c0, uint2 c1, uint2 c2)
public uint2x3 uint2x3(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12)
public uint2x3 uint2x3(UInt32 v)
public uint2x3 uint2x3(bool v)
public uint2x3 uint2x3(bool2x3 v)
public uint2x3 uint2x3(int v)
public uint2x3 uint2x3(int2x3 v)
public uint2x3 uint2x3(float v)
public uint2x3 uint2x3(float2x3 v)
public uint2x3 uint2x3(double v)
public uint2x3 uint2x3(double2x3 v)
public uint3x2 transpose(uint2x3 v)
public UInt32 hash(uint2x3 v)
public uint2 hashwide(uint2x3 v)
public uint2x4 uint2x4(uint2 c0, uint2 c1, uint2 c2, uint2 c3)
public uint2x4 uint2x4(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13)
public uint2x4 uint2x4(UInt32 v)
public uint2x4 uint2x4(bool v)
public uint2x4 uint2x4(bool2x4 v)
public uint2x4 uint2x4(int v)
public uint2x4 uint2x4(int2x4 v)
public uint2x4 uint2x4(float v)
public uint2x4 uint2x4(float2x4 v)
public uint2x4 uint2x4(double v)
public uint2x4 uint2x4(double2x4 v)
public uint4x2 transpose(uint2x4 v)
public UInt32 hash(uint2x4 v)
public uint2 hashwide(uint2x4 v)
public uint3 uint3(UInt32 x, UInt32 y, UInt32 z)
public uint3 uint3(UInt32 x, uint2 yz)
public uint3 uint3(uint2 xy, UInt32 z)
public uint3 uint3(uint3 xyz)
public uint3 uint3(UInt32 v)
public uint3 uint3(bool v)
public uint3 uint3(bool3 v)
public uint3 uint3(int v)
public uint3 uint3(int3 v)
public uint3 uint3(float v)
public uint3 uint3(float3 v)
public uint3 uint3(double v)
public uint3 uint3(double3 v)
public UInt32 hash(uint3 v)
public uint3 hashwide(uint3 v)
public UInt32 shuffle(uint3 left, uint3 right, ShuffleComponent x)
public uint2 shuffle(uint3 left, uint3 right, ShuffleComponent x, ShuffleComponent y)
public uint3 shuffle(uint3 left, uint3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public uint4 shuffle(uint3 left, uint3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal UInt32 select_shuffle_component(uint3 a, uint3 b, ShuffleComponent component)
public uint3x2 uint3x2(uint3 c0, uint3 c1)
public uint3x2 uint3x2(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21)
public uint3x2 uint3x2(UInt32 v)
public uint3x2 uint3x2(bool v)
public uint3x2 uint3x2(bool3x2 v)
public uint3x2 uint3x2(int v)
public uint3x2 uint3x2(int3x2 v)
public uint3x2 uint3x2(float v)
public uint3x2 uint3x2(float3x2 v)
public uint3x2 uint3x2(double v)
public uint3x2 uint3x2(double3x2 v)
public uint2x3 transpose(uint3x2 v)
public UInt32 hash(uint3x2 v)
public uint3 hashwide(uint3x2 v)
public uint3x3 uint3x3(uint3 c0, uint3 c1, uint3 c2)
public uint3x3 uint3x3(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22)
public uint3x3 uint3x3(UInt32 v)
public uint3x3 uint3x3(bool v)
public uint3x3 uint3x3(bool3x3 v)
public uint3x3 uint3x3(int v)
public uint3x3 uint3x3(int3x3 v)
public uint3x3 uint3x3(float v)
public uint3x3 uint3x3(float3x3 v)
public uint3x3 uint3x3(double v)
public uint3x3 uint3x3(double3x3 v)
public uint3x3 transpose(uint3x3 v)
public UInt32 hash(uint3x3 v)
public uint3 hashwide(uint3x3 v)
public uint3x4 uint3x4(uint3 c0, uint3 c1, uint3 c2, uint3 c3)
public uint3x4 uint3x4(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23)
public uint3x4 uint3x4(UInt32 v)
public uint3x4 uint3x4(bool v)
public uint3x4 uint3x4(bool3x4 v)
public uint3x4 uint3x4(int v)
public uint3x4 uint3x4(int3x4 v)
public uint3x4 uint3x4(float v)
public uint3x4 uint3x4(float3x4 v)
public uint3x4 uint3x4(double v)
public uint3x4 uint3x4(double3x4 v)
public uint4x3 transpose(uint3x4 v)
public UInt32 hash(uint3x4 v)
public uint3 hashwide(uint3x4 v)
public uint4 uint4(UInt32 x, UInt32 y, UInt32 z, UInt32 w)
public uint4 uint4(UInt32 x, UInt32 y, uint2 zw)
public uint4 uint4(UInt32 x, uint2 yz, UInt32 w)
public uint4 uint4(UInt32 x, uint3 yzw)
public uint4 uint4(uint2 xy, UInt32 z, UInt32 w)
public uint4 uint4(uint2 xy, uint2 zw)
public uint4 uint4(uint3 xyz, UInt32 w)
public uint4 uint4(uint4 xyzw)
public uint4 uint4(UInt32 v)
public uint4 uint4(bool v)
public uint4 uint4(bool4 v)
public uint4 uint4(int v)
public uint4 uint4(int4 v)
public uint4 uint4(float v)
public uint4 uint4(float4 v)
public uint4 uint4(double v)
public uint4 uint4(double4 v)
public UInt32 hash(uint4 v)
public uint4 hashwide(uint4 v)
public UInt32 shuffle(uint4 left, uint4 right, ShuffleComponent x)
public uint2 shuffle(uint4 left, uint4 right, ShuffleComponent x, ShuffleComponent y)
public uint3 shuffle(uint4 left, uint4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
public uint4 shuffle(uint4 left, uint4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
internal UInt32 select_shuffle_component(uint4 a, uint4 b, ShuffleComponent component)
public uint4x2 uint4x2(uint4 c0, uint4 c1)
public uint4x2 uint4x2(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21, UInt32 m30, UInt32 m31)
public uint4x2 uint4x2(UInt32 v)
public uint4x2 uint4x2(bool v)
public uint4x2 uint4x2(bool4x2 v)
public uint4x2 uint4x2(int v)
public uint4x2 uint4x2(int4x2 v)
public uint4x2 uint4x2(float v)
public uint4x2 uint4x2(float4x2 v)
public uint4x2 uint4x2(double v)
public uint4x2 uint4x2(double4x2 v)
public uint2x4 transpose(uint4x2 v)
public UInt32 hash(uint4x2 v)
public uint4 hashwide(uint4x2 v)
public uint4x3 uint4x3(uint4 c0, uint4 c1, uint4 c2)
public uint4x3 uint4x3(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m30, UInt32 m31, UInt32 m32)
public uint4x3 uint4x3(UInt32 v)
public uint4x3 uint4x3(bool v)
public uint4x3 uint4x3(bool4x3 v)
public uint4x3 uint4x3(int v)
public uint4x3 uint4x3(int4x3 v)
public uint4x3 uint4x3(float v)
public uint4x3 uint4x3(float4x3 v)
public uint4x3 uint4x3(double v)
public uint4x3 uint4x3(double4x3 v)
public uint3x4 transpose(uint4x3 v)
public UInt32 hash(uint4x3 v)
public uint4 hashwide(uint4x3 v)
public uint4x4 uint4x4(uint4 c0, uint4 c1, uint4 c2, uint4 c3)
public uint4x4 uint4x4(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23, UInt32 m30, UInt32 m31, UInt32 m32, UInt32 m33)
public uint4x4 uint4x4(UInt32 v)
public uint4x4 uint4x4(bool v)
public uint4x4 uint4x4(bool4x4 v)
public uint4x4 uint4x4(int v)
public uint4x4 uint4x4(int4x4 v)
public uint4x4 uint4x4(float v)
public uint4x4 uint4x4(float4x4 v)
public uint4x4 uint4x4(double v)
public uint4x4 uint4x4(double4x4 v)
public uint4x4 transpose(uint4x4 v)
public UInt32 hash(uint4x4 v)
public uint4 hashwide(uint4x4 v)
}
public Unity.Mathematics.noise : object {
public float2 cellular(float2 P)
public float2 cellular2x2(float2 P)
public float2 cellular2x2x2(float3 P)
public float2 cellular(float3 P)
public float cnoise(float2 P)
public float pnoise(float2 P, float2 rep)
public float cnoise(float3 P)
public float pnoise(float3 P, float3 rep)
public float cnoise(float4 P)
public float pnoise(float4 P, float4 rep)
private float mod289(float x)
private float2 mod289(float2 x)
private float3 mod289(float3 x)
private float4 mod289(float4 x)
private float3 mod7(float3 x)
private float4 mod7(float4 x)
private float permute(float x)
private float3 permute(float3 x)
private float4 permute(float4 x)
private float taylorInvSqrt(float r)
private float4 taylorInvSqrt(float4 r)
private float2 fade(float2 t)
private float3 fade(float3 t)
private float4 fade(float4 t)
private float4 grad4(float j, float4 ip)
private float2 rgrad2(float2 p, float rot)
public float snoise(float2 v)
public float snoise(float3 v)
public float snoise(float3 v, float3& gradient)
public float snoise(float4 v)
public float3 psrdnoise(float2 pos, float2 per, float rot)
public float3 psrdnoise(float2 pos, float2 per)
public float psrnoise(float2 pos, float2 per, float rot)
public float psrnoise(float2 pos, float2 per)
public float3 srdnoise(float2 pos, float rot)
public float3 srdnoise(float2 pos)
public float srnoise(float2 pos, float rot)
public float srnoise(float2 pos)
}
public Unity.Mathematics.quaternion : ValueType {
public float4 value
public quaternion identity
public Quaternion op_Implicit(quaternion q)
public quaternion op_Implicit(Quaternion q)
public void .ctor(float x, float y, float z, float w)
public void .ctor(float4 value)
public quaternion op_Implicit(float4 v)
public void .ctor(float3x3 m)
public void .ctor(float4x4 m)
public quaternion AxisAngle(float3 axis, float angle)
public quaternion EulerXYZ(float3 xyz)
public quaternion EulerXZY(float3 xyz)
public quaternion EulerYXZ(float3 xyz)
public quaternion EulerYZX(float3 xyz)
public quaternion EulerZXY(float3 xyz)
public quaternion EulerZYX(float3 xyz)
public quaternion EulerXYZ(float x, float y, float z)
public quaternion EulerXZY(float x, float y, float z)
public quaternion EulerYXZ(float x, float y, float z)
public quaternion EulerYZX(float x, float y, float z)
public quaternion EulerZXY(float x, float y, float z)
public quaternion EulerZYX(float x, float y, float z)
public quaternion Euler(float3 xyz, RotationOrder order)
public quaternion Euler(float x, float y, float z, RotationOrder order)
public quaternion RotateX(float angle)
public quaternion RotateY(float angle)
public quaternion RotateZ(float angle)
public quaternion LookRotation(float3 forward, float3 up)
public quaternion LookRotationSafe(float3 forward, float3 up)
public bool Equals(quaternion x)
public bool Equals(object x)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.Random : ValueType {
public UInt32 state
public void .ctor(UInt32 seed)
public Random CreateFromIndex(UInt32 index)
internal UInt32 WangHash(UInt32 n)
public void InitState(UInt32 seed)
public bool NextBool()
public bool2 NextBool2()
public bool3 NextBool3()
public bool4 NextBool4()
public int NextInt()
public int2 NextInt2()
public int3 NextInt3()
public int4 NextInt4()
public int NextInt(int max)
public int2 NextInt2(int2 max)
public int3 NextInt3(int3 max)
public int4 NextInt4(int4 max)
public int NextInt(int min, int max)
public int2 NextInt2(int2 min, int2 max)
public int3 NextInt3(int3 min, int3 max)
public int4 NextInt4(int4 min, int4 max)
public UInt32 NextUInt()
public uint2 NextUInt2()
public uint3 NextUInt3()
public uint4 NextUInt4()
public UInt32 NextUInt(UInt32 max)
public uint2 NextUInt2(uint2 max)
public uint3 NextUInt3(uint3 max)
public uint4 NextUInt4(uint4 max)
public UInt32 NextUInt(UInt32 min, UInt32 max)
public uint2 NextUInt2(uint2 min, uint2 max)
public uint3 NextUInt3(uint3 min, uint3 max)
public uint4 NextUInt4(uint4 min, uint4 max)
public float NextFloat()
public float2 NextFloat2()
public float3 NextFloat3()
public float4 NextFloat4()
public float NextFloat(float max)
public float2 NextFloat2(float2 max)
public float3 NextFloat3(float3 max)
public float4 NextFloat4(float4 max)
public float NextFloat(float min, float max)
public float2 NextFloat2(float2 min, float2 max)
public float3 NextFloat3(float3 min, float3 max)
public float4 NextFloat4(float4 min, float4 max)
public double NextDouble()
public double2 NextDouble2()
public double3 NextDouble3()
public double4 NextDouble4()
public double NextDouble(double max)
public double2 NextDouble2(double2 max)
public double3 NextDouble3(double3 max)
public double4 NextDouble4(double4 max)
public double NextDouble(double min, double max)
public double2 NextDouble2(double2 min, double2 max)
public double3 NextDouble3(double3 min, double3 max)
public double4 NextDouble4(double4 min, double4 max)
public float2 NextFloat2Direction()
public double2 NextDouble2Direction()
public float3 NextFloat3Direction()
public double3 NextDouble3Direction()
public quaternion NextQuaternionRotation()
private UInt32 NextState()
private void CheckInitState()
private void CheckIndexForHash(UInt32 index)
private void CheckState()
private void CheckNextIntMax(int max)
private void CheckNextIntMinMax(int min, int max)
private void CheckNextUIntMinMax(UInt32 min, UInt32 max)
}
public Unity.Mathematics.RigidTransform : ValueType {
public quaternion rot
public float3 pos
public RigidTransform identity
public void .ctor(quaternion rotation, float3 translation)
public void .ctor(float3x3 rotation, float3 translation)
public void .ctor(float4x4 transform)
public RigidTransform AxisAngle(float3 axis, float angle)
public RigidTransform EulerXYZ(float3 xyz)
public RigidTransform EulerXZY(float3 xyz)
public RigidTransform EulerYXZ(float3 xyz)
public RigidTransform EulerYZX(float3 xyz)
public RigidTransform EulerZXY(float3 xyz)
public RigidTransform EulerZYX(float3 xyz)
public RigidTransform EulerXYZ(float x, float y, float z)
public RigidTransform EulerXZY(float x, float y, float z)
public RigidTransform EulerYXZ(float x, float y, float z)
public RigidTransform EulerYZX(float x, float y, float z)
public RigidTransform EulerZXY(float x, float y, float z)
public RigidTransform EulerZYX(float x, float y, float z)
public RigidTransform Euler(float3 xyz, RotationOrder order)
public RigidTransform Euler(float x, float y, float z, RotationOrder order)
public RigidTransform RotateX(float angle)
public RigidTransform RotateY(float angle)
public RigidTransform RotateZ(float angle)
public RigidTransform Translate(float3 vector)
public bool Equals(RigidTransform x)
public bool Equals(object x)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint2 : ValueType {
public UInt32 x
public UInt32 y
public uint2 zero
public uint4 xxxx
public uint4 xxxy
public uint4 xxyx
public uint4 xxyy
public uint4 xyxx
public uint4 xyxy
public uint4 xyyx
public uint4 xyyy
public uint4 yxxx
public uint4 yxxy
public uint4 yxyx
public uint4 yxyy
public uint4 yyxx
public uint4 yyxy
public uint4 yyyx
public uint4 yyyy
public uint3 xxx
public uint3 xxy
public uint3 xyx
public uint3 xyy
public uint3 yxx
public uint3 yxy
public uint3 yyx
public uint3 yyy
public uint2 xx
public uint2 xy
public uint2 yx
public uint2 yy
public UInt32 Item
public void .ctor(UInt32 x, UInt32 y)
public void .ctor(uint2 xy)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool2 v)
public void .ctor(int v)
public void .ctor(int2 v)
public void .ctor(float v)
public void .ctor(float2 v)
public void .ctor(double v)
public void .ctor(double2 v)
public uint2 op_Implicit(UInt32 v)
public uint2 op_Explicit(bool v)
public uint2 op_Explicit(bool2 v)
public uint2 op_Explicit(int v)
public uint2 op_Explicit(int2 v)
public uint2 op_Explicit(float v)
public uint2 op_Explicit(float2 v)
public uint2 op_Explicit(double v)
public uint2 op_Explicit(double2 v)
public uint2 op_Multiply(uint2 lhs, uint2 rhs)
public uint2 op_Multiply(uint2 lhs, UInt32 rhs)
public uint2 op_Multiply(UInt32 lhs, uint2 rhs)
public uint2 op_Addition(uint2 lhs, uint2 rhs)
public uint2 op_Addition(uint2 lhs, UInt32 rhs)
public uint2 op_Addition(UInt32 lhs, uint2 rhs)
public uint2 op_Subtraction(uint2 lhs, uint2 rhs)
public uint2 op_Subtraction(uint2 lhs, UInt32 rhs)
public uint2 op_Subtraction(UInt32 lhs, uint2 rhs)
public uint2 op_Division(uint2 lhs, uint2 rhs)
public uint2 op_Division(uint2 lhs, UInt32 rhs)
public uint2 op_Division(UInt32 lhs, uint2 rhs)
public uint2 op_Modulus(uint2 lhs, uint2 rhs)
public uint2 op_Modulus(uint2 lhs, UInt32 rhs)
public uint2 op_Modulus(UInt32 lhs, uint2 rhs)
public uint2 op_Increment(uint2 val)
public uint2 op_Decrement(uint2 val)
public bool2 op_LessThan(uint2 lhs, uint2 rhs)
public bool2 op_LessThan(uint2 lhs, UInt32 rhs)
public bool2 op_LessThan(UInt32 lhs, uint2 rhs)
public bool2 op_LessThanOrEqual(uint2 lhs, uint2 rhs)
public bool2 op_LessThanOrEqual(uint2 lhs, UInt32 rhs)
public bool2 op_LessThanOrEqual(UInt32 lhs, uint2 rhs)
public bool2 op_GreaterThan(uint2 lhs, uint2 rhs)
public bool2 op_GreaterThan(uint2 lhs, UInt32 rhs)
public bool2 op_GreaterThan(UInt32 lhs, uint2 rhs)
public bool2 op_GreaterThanOrEqual(uint2 lhs, uint2 rhs)
public bool2 op_GreaterThanOrEqual(uint2 lhs, UInt32 rhs)
public bool2 op_GreaterThanOrEqual(UInt32 lhs, uint2 rhs)
public uint2 op_UnaryNegation(uint2 val)
public uint2 op_UnaryPlus(uint2 val)
public uint2 op_LeftShift(uint2 x, int n)
public uint2 op_RightShift(uint2 x, int n)
public bool2 op_Equality(uint2 lhs, uint2 rhs)
public bool2 op_Equality(uint2 lhs, UInt32 rhs)
public bool2 op_Equality(UInt32 lhs, uint2 rhs)
public bool2 op_Inequality(uint2 lhs, uint2 rhs)
public bool2 op_Inequality(uint2 lhs, UInt32 rhs)
public bool2 op_Inequality(UInt32 lhs, uint2 rhs)
public uint2 op_OnesComplement(uint2 val)
public uint2 op_BitwiseAnd(uint2 lhs, uint2 rhs)
public uint2 op_BitwiseAnd(uint2 lhs, UInt32 rhs)
public uint2 op_BitwiseAnd(UInt32 lhs, uint2 rhs)
public uint2 op_BitwiseOr(uint2 lhs, uint2 rhs)
public uint2 op_BitwiseOr(uint2 lhs, UInt32 rhs)
public uint2 op_BitwiseOr(UInt32 lhs, uint2 rhs)
public uint2 op_ExclusiveOr(uint2 lhs, uint2 rhs)
public uint2 op_ExclusiveOr(uint2 lhs, UInt32 rhs)
public uint2 op_ExclusiveOr(UInt32 lhs, uint2 rhs)
public uint4 get_xxxx()
public uint4 get_xxxy()
public uint4 get_xxyx()
public uint4 get_xxyy()
public uint4 get_xyxx()
public uint4 get_xyxy()
public uint4 get_xyyx()
public uint4 get_xyyy()
public uint4 get_yxxx()
public uint4 get_yxxy()
public uint4 get_yxyx()
public uint4 get_yxyy()
public uint4 get_yyxx()
public uint4 get_yyxy()
public uint4 get_yyyx()
public uint4 get_yyyy()
public uint3 get_xxx()
public uint3 get_xxy()
public uint3 get_xyx()
public uint3 get_xyy()
public uint3 get_yxx()
public uint3 get_yxy()
public uint3 get_yyx()
public uint3 get_yyy()
public uint2 get_xx()
public uint2 get_xy()
public void set_xy(uint2 value)
public uint2 get_yx()
public void set_yx(uint2 value)
public uint2 get_yy()
public UInt32 get_Item(int index)
public void set_Item(int index, UInt32 value)
public bool Equals(uint2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint2x2 : ValueType {
public uint2 c0
public uint2 c1
public uint2x2 identity
public uint2x2 zero
public uint2& Item
public void .ctor(uint2 c0, uint2 c1)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool2x2 v)
public void .ctor(int v)
public void .ctor(int2x2 v)
public void .ctor(float v)
public void .ctor(float2x2 v)
public void .ctor(double v)
public void .ctor(double2x2 v)
public uint2x2 op_Implicit(UInt32 v)
public uint2x2 op_Explicit(bool v)
public uint2x2 op_Explicit(bool2x2 v)
public uint2x2 op_Explicit(int v)
public uint2x2 op_Explicit(int2x2 v)
public uint2x2 op_Explicit(float v)
public uint2x2 op_Explicit(float2x2 v)
public uint2x2 op_Explicit(double v)
public uint2x2 op_Explicit(double2x2 v)
public uint2x2 op_Multiply(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_Multiply(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_Multiply(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_Addition(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_Addition(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_Addition(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_Subtraction(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_Subtraction(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_Subtraction(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_Division(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_Division(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_Division(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_Modulus(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_Modulus(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_Modulus(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_Increment(uint2x2 val)
public uint2x2 op_Decrement(uint2x2 val)
public bool2x2 op_LessThan(uint2x2 lhs, uint2x2 rhs)
public bool2x2 op_LessThan(uint2x2 lhs, UInt32 rhs)
public bool2x2 op_LessThan(UInt32 lhs, uint2x2 rhs)
public bool2x2 op_LessThanOrEqual(uint2x2 lhs, uint2x2 rhs)
public bool2x2 op_LessThanOrEqual(uint2x2 lhs, UInt32 rhs)
public bool2x2 op_LessThanOrEqual(UInt32 lhs, uint2x2 rhs)
public bool2x2 op_GreaterThan(uint2x2 lhs, uint2x2 rhs)
public bool2x2 op_GreaterThan(uint2x2 lhs, UInt32 rhs)
public bool2x2 op_GreaterThan(UInt32 lhs, uint2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(uint2x2 lhs, uint2x2 rhs)
public bool2x2 op_GreaterThanOrEqual(uint2x2 lhs, UInt32 rhs)
public bool2x2 op_GreaterThanOrEqual(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_UnaryNegation(uint2x2 val)
public uint2x2 op_UnaryPlus(uint2x2 val)
public uint2x2 op_LeftShift(uint2x2 x, int n)
public uint2x2 op_RightShift(uint2x2 x, int n)
public bool2x2 op_Equality(uint2x2 lhs, uint2x2 rhs)
public bool2x2 op_Equality(uint2x2 lhs, UInt32 rhs)
public bool2x2 op_Equality(UInt32 lhs, uint2x2 rhs)
public bool2x2 op_Inequality(uint2x2 lhs, uint2x2 rhs)
public bool2x2 op_Inequality(uint2x2 lhs, UInt32 rhs)
public bool2x2 op_Inequality(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_OnesComplement(uint2x2 val)
public uint2x2 op_BitwiseAnd(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_BitwiseAnd(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_BitwiseAnd(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_BitwiseOr(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_BitwiseOr(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_BitwiseOr(UInt32 lhs, uint2x2 rhs)
public uint2x2 op_ExclusiveOr(uint2x2 lhs, uint2x2 rhs)
public uint2x2 op_ExclusiveOr(uint2x2 lhs, UInt32 rhs)
public uint2x2 op_ExclusiveOr(UInt32 lhs, uint2x2 rhs)
public uint2& get_Item(int index)
public bool Equals(uint2x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint2x3 : ValueType {
public uint2 c0
public uint2 c1
public uint2 c2
public uint2x3 zero
public uint2& Item
public void .ctor(uint2 c0, uint2 c1, uint2 c2)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool2x3 v)
public void .ctor(int v)
public void .ctor(int2x3 v)
public void .ctor(float v)
public void .ctor(float2x3 v)
public void .ctor(double v)
public void .ctor(double2x3 v)
public uint2x3 op_Implicit(UInt32 v)
public uint2x3 op_Explicit(bool v)
public uint2x3 op_Explicit(bool2x3 v)
public uint2x3 op_Explicit(int v)
public uint2x3 op_Explicit(int2x3 v)
public uint2x3 op_Explicit(float v)
public uint2x3 op_Explicit(float2x3 v)
public uint2x3 op_Explicit(double v)
public uint2x3 op_Explicit(double2x3 v)
public uint2x3 op_Multiply(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_Multiply(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_Multiply(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_Addition(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_Addition(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_Addition(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_Subtraction(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_Subtraction(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_Subtraction(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_Division(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_Division(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_Division(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_Modulus(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_Modulus(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_Modulus(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_Increment(uint2x3 val)
public uint2x3 op_Decrement(uint2x3 val)
public bool2x3 op_LessThan(uint2x3 lhs, uint2x3 rhs)
public bool2x3 op_LessThan(uint2x3 lhs, UInt32 rhs)
public bool2x3 op_LessThan(UInt32 lhs, uint2x3 rhs)
public bool2x3 op_LessThanOrEqual(uint2x3 lhs, uint2x3 rhs)
public bool2x3 op_LessThanOrEqual(uint2x3 lhs, UInt32 rhs)
public bool2x3 op_LessThanOrEqual(UInt32 lhs, uint2x3 rhs)
public bool2x3 op_GreaterThan(uint2x3 lhs, uint2x3 rhs)
public bool2x3 op_GreaterThan(uint2x3 lhs, UInt32 rhs)
public bool2x3 op_GreaterThan(UInt32 lhs, uint2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(uint2x3 lhs, uint2x3 rhs)
public bool2x3 op_GreaterThanOrEqual(uint2x3 lhs, UInt32 rhs)
public bool2x3 op_GreaterThanOrEqual(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_UnaryNegation(uint2x3 val)
public uint2x3 op_UnaryPlus(uint2x3 val)
public uint2x3 op_LeftShift(uint2x3 x, int n)
public uint2x3 op_RightShift(uint2x3 x, int n)
public bool2x3 op_Equality(uint2x3 lhs, uint2x3 rhs)
public bool2x3 op_Equality(uint2x3 lhs, UInt32 rhs)
public bool2x3 op_Equality(UInt32 lhs, uint2x3 rhs)
public bool2x3 op_Inequality(uint2x3 lhs, uint2x3 rhs)
public bool2x3 op_Inequality(uint2x3 lhs, UInt32 rhs)
public bool2x3 op_Inequality(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_OnesComplement(uint2x3 val)
public uint2x3 op_BitwiseAnd(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_BitwiseAnd(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_BitwiseAnd(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_BitwiseOr(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_BitwiseOr(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_BitwiseOr(UInt32 lhs, uint2x3 rhs)
public uint2x3 op_ExclusiveOr(uint2x3 lhs, uint2x3 rhs)
public uint2x3 op_ExclusiveOr(uint2x3 lhs, UInt32 rhs)
public uint2x3 op_ExclusiveOr(UInt32 lhs, uint2x3 rhs)
public uint2& get_Item(int index)
public bool Equals(uint2x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint2x4 : ValueType {
public uint2 c0
public uint2 c1
public uint2 c2
public uint2 c3
public uint2x4 zero
public uint2& Item
public void .ctor(uint2 c0, uint2 c1, uint2 c2, uint2 c3)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool2x4 v)
public void .ctor(int v)
public void .ctor(int2x4 v)
public void .ctor(float v)
public void .ctor(float2x4 v)
public void .ctor(double v)
public void .ctor(double2x4 v)
public uint2x4 op_Implicit(UInt32 v)
public uint2x4 op_Explicit(bool v)
public uint2x4 op_Explicit(bool2x4 v)
public uint2x4 op_Explicit(int v)
public uint2x4 op_Explicit(int2x4 v)
public uint2x4 op_Explicit(float v)
public uint2x4 op_Explicit(float2x4 v)
public uint2x4 op_Explicit(double v)
public uint2x4 op_Explicit(double2x4 v)
public uint2x4 op_Multiply(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_Multiply(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_Multiply(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_Addition(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_Addition(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_Addition(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_Subtraction(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_Subtraction(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_Subtraction(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_Division(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_Division(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_Division(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_Modulus(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_Modulus(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_Modulus(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_Increment(uint2x4 val)
public uint2x4 op_Decrement(uint2x4 val)
public bool2x4 op_LessThan(uint2x4 lhs, uint2x4 rhs)
public bool2x4 op_LessThan(uint2x4 lhs, UInt32 rhs)
public bool2x4 op_LessThan(UInt32 lhs, uint2x4 rhs)
public bool2x4 op_LessThanOrEqual(uint2x4 lhs, uint2x4 rhs)
public bool2x4 op_LessThanOrEqual(uint2x4 lhs, UInt32 rhs)
public bool2x4 op_LessThanOrEqual(UInt32 lhs, uint2x4 rhs)
public bool2x4 op_GreaterThan(uint2x4 lhs, uint2x4 rhs)
public bool2x4 op_GreaterThan(uint2x4 lhs, UInt32 rhs)
public bool2x4 op_GreaterThan(UInt32 lhs, uint2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(uint2x4 lhs, uint2x4 rhs)
public bool2x4 op_GreaterThanOrEqual(uint2x4 lhs, UInt32 rhs)
public bool2x4 op_GreaterThanOrEqual(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_UnaryNegation(uint2x4 val)
public uint2x4 op_UnaryPlus(uint2x4 val)
public uint2x4 op_LeftShift(uint2x4 x, int n)
public uint2x4 op_RightShift(uint2x4 x, int n)
public bool2x4 op_Equality(uint2x4 lhs, uint2x4 rhs)
public bool2x4 op_Equality(uint2x4 lhs, UInt32 rhs)
public bool2x4 op_Equality(UInt32 lhs, uint2x4 rhs)
public bool2x4 op_Inequality(uint2x4 lhs, uint2x4 rhs)
public bool2x4 op_Inequality(uint2x4 lhs, UInt32 rhs)
public bool2x4 op_Inequality(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_OnesComplement(uint2x4 val)
public uint2x4 op_BitwiseAnd(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_BitwiseAnd(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_BitwiseAnd(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_BitwiseOr(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_BitwiseOr(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_BitwiseOr(UInt32 lhs, uint2x4 rhs)
public uint2x4 op_ExclusiveOr(uint2x4 lhs, uint2x4 rhs)
public uint2x4 op_ExclusiveOr(uint2x4 lhs, UInt32 rhs)
public uint2x4 op_ExclusiveOr(UInt32 lhs, uint2x4 rhs)
public uint2& get_Item(int index)
public bool Equals(uint2x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint3 : ValueType {
public UInt32 x
public UInt32 y
public UInt32 z
public uint3 zero
public uint4 xxxx
public uint4 xxxy
public uint4 xxxz
public uint4 xxyx
public uint4 xxyy
public uint4 xxyz
public uint4 xxzx
public uint4 xxzy
public uint4 xxzz
public uint4 xyxx
public uint4 xyxy
public uint4 xyxz
public uint4 xyyx
public uint4 xyyy
public uint4 xyyz
public uint4 xyzx
public uint4 xyzy
public uint4 xyzz
public uint4 xzxx
public uint4 xzxy
public uint4 xzxz
public uint4 xzyx
public uint4 xzyy
public uint4 xzyz
public uint4 xzzx
public uint4 xzzy
public uint4 xzzz
public uint4 yxxx
public uint4 yxxy
public uint4 yxxz
public uint4 yxyx
public uint4 yxyy
public uint4 yxyz
public uint4 yxzx
public uint4 yxzy
public uint4 yxzz
public uint4 yyxx
public uint4 yyxy
public uint4 yyxz
public uint4 yyyx
public uint4 yyyy
public uint4 yyyz
public uint4 yyzx
public uint4 yyzy
public uint4 yyzz
public uint4 yzxx
public uint4 yzxy
public uint4 yzxz
public uint4 yzyx
public uint4 yzyy
public uint4 yzyz
public uint4 yzzx
public uint4 yzzy
public uint4 yzzz
public uint4 zxxx
public uint4 zxxy
public uint4 zxxz
public uint4 zxyx
public uint4 zxyy
public uint4 zxyz
public uint4 zxzx
public uint4 zxzy
public uint4 zxzz
public uint4 zyxx
public uint4 zyxy
public uint4 zyxz
public uint4 zyyx
public uint4 zyyy
public uint4 zyyz
public uint4 zyzx
public uint4 zyzy
public uint4 zyzz
public uint4 zzxx
public uint4 zzxy
public uint4 zzxz
public uint4 zzyx
public uint4 zzyy
public uint4 zzyz
public uint4 zzzx
public uint4 zzzy
public uint4 zzzz
public uint3 xxx
public uint3 xxy
public uint3 xxz
public uint3 xyx
public uint3 xyy
public uint3 xyz
public uint3 xzx
public uint3 xzy
public uint3 xzz
public uint3 yxx
public uint3 yxy
public uint3 yxz
public uint3 yyx
public uint3 yyy
public uint3 yyz
public uint3 yzx
public uint3 yzy
public uint3 yzz
public uint3 zxx
public uint3 zxy
public uint3 zxz
public uint3 zyx
public uint3 zyy
public uint3 zyz
public uint3 zzx
public uint3 zzy
public uint3 zzz
public uint2 xx
public uint2 xy
public uint2 xz
public uint2 yx
public uint2 yy
public uint2 yz
public uint2 zx
public uint2 zy
public uint2 zz
public UInt32 Item
public void .ctor(UInt32 x, UInt32 y, UInt32 z)
public void .ctor(UInt32 x, uint2 yz)
public void .ctor(uint2 xy, UInt32 z)
public void .ctor(uint3 xyz)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool3 v)
public void .ctor(int v)
public void .ctor(int3 v)
public void .ctor(float v)
public void .ctor(float3 v)
public void .ctor(double v)
public void .ctor(double3 v)
public uint3 op_Implicit(UInt32 v)
public uint3 op_Explicit(bool v)
public uint3 op_Explicit(bool3 v)
public uint3 op_Explicit(int v)
public uint3 op_Explicit(int3 v)
public uint3 op_Explicit(float v)
public uint3 op_Explicit(float3 v)
public uint3 op_Explicit(double v)
public uint3 op_Explicit(double3 v)
public uint3 op_Multiply(uint3 lhs, uint3 rhs)
public uint3 op_Multiply(uint3 lhs, UInt32 rhs)
public uint3 op_Multiply(UInt32 lhs, uint3 rhs)
public uint3 op_Addition(uint3 lhs, uint3 rhs)
public uint3 op_Addition(uint3 lhs, UInt32 rhs)
public uint3 op_Addition(UInt32 lhs, uint3 rhs)
public uint3 op_Subtraction(uint3 lhs, uint3 rhs)
public uint3 op_Subtraction(uint3 lhs, UInt32 rhs)
public uint3 op_Subtraction(UInt32 lhs, uint3 rhs)
public uint3 op_Division(uint3 lhs, uint3 rhs)
public uint3 op_Division(uint3 lhs, UInt32 rhs)
public uint3 op_Division(UInt32 lhs, uint3 rhs)
public uint3 op_Modulus(uint3 lhs, uint3 rhs)
public uint3 op_Modulus(uint3 lhs, UInt32 rhs)
public uint3 op_Modulus(UInt32 lhs, uint3 rhs)
public uint3 op_Increment(uint3 val)
public uint3 op_Decrement(uint3 val)
public bool3 op_LessThan(uint3 lhs, uint3 rhs)
public bool3 op_LessThan(uint3 lhs, UInt32 rhs)
public bool3 op_LessThan(UInt32 lhs, uint3 rhs)
public bool3 op_LessThanOrEqual(uint3 lhs, uint3 rhs)
public bool3 op_LessThanOrEqual(uint3 lhs, UInt32 rhs)
public bool3 op_LessThanOrEqual(UInt32 lhs, uint3 rhs)
public bool3 op_GreaterThan(uint3 lhs, uint3 rhs)
public bool3 op_GreaterThan(uint3 lhs, UInt32 rhs)
public bool3 op_GreaterThan(UInt32 lhs, uint3 rhs)
public bool3 op_GreaterThanOrEqual(uint3 lhs, uint3 rhs)
public bool3 op_GreaterThanOrEqual(uint3 lhs, UInt32 rhs)
public bool3 op_GreaterThanOrEqual(UInt32 lhs, uint3 rhs)
public uint3 op_UnaryNegation(uint3 val)
public uint3 op_UnaryPlus(uint3 val)
public uint3 op_LeftShift(uint3 x, int n)
public uint3 op_RightShift(uint3 x, int n)
public bool3 op_Equality(uint3 lhs, uint3 rhs)
public bool3 op_Equality(uint3 lhs, UInt32 rhs)
public bool3 op_Equality(UInt32 lhs, uint3 rhs)
public bool3 op_Inequality(uint3 lhs, uint3 rhs)
public bool3 op_Inequality(uint3 lhs, UInt32 rhs)
public bool3 op_Inequality(UInt32 lhs, uint3 rhs)
public uint3 op_OnesComplement(uint3 val)
public uint3 op_BitwiseAnd(uint3 lhs, uint3 rhs)
public uint3 op_BitwiseAnd(uint3 lhs, UInt32 rhs)
public uint3 op_BitwiseAnd(UInt32 lhs, uint3 rhs)
public uint3 op_BitwiseOr(uint3 lhs, uint3 rhs)
public uint3 op_BitwiseOr(uint3 lhs, UInt32 rhs)
public uint3 op_BitwiseOr(UInt32 lhs, uint3 rhs)
public uint3 op_ExclusiveOr(uint3 lhs, uint3 rhs)
public uint3 op_ExclusiveOr(uint3 lhs, UInt32 rhs)
public uint3 op_ExclusiveOr(UInt32 lhs, uint3 rhs)
public uint4 get_xxxx()
public uint4 get_xxxy()
public uint4 get_xxxz()
public uint4 get_xxyx()
public uint4 get_xxyy()
public uint4 get_xxyz()
public uint4 get_xxzx()
public uint4 get_xxzy()
public uint4 get_xxzz()
public uint4 get_xyxx()
public uint4 get_xyxy()
public uint4 get_xyxz()
public uint4 get_xyyx()
public uint4 get_xyyy()
public uint4 get_xyyz()
public uint4 get_xyzx()
public uint4 get_xyzy()
public uint4 get_xyzz()
public uint4 get_xzxx()
public uint4 get_xzxy()
public uint4 get_xzxz()
public uint4 get_xzyx()
public uint4 get_xzyy()
public uint4 get_xzyz()
public uint4 get_xzzx()
public uint4 get_xzzy()
public uint4 get_xzzz()
public uint4 get_yxxx()
public uint4 get_yxxy()
public uint4 get_yxxz()
public uint4 get_yxyx()
public uint4 get_yxyy()
public uint4 get_yxyz()
public uint4 get_yxzx()
public uint4 get_yxzy()
public uint4 get_yxzz()
public uint4 get_yyxx()
public uint4 get_yyxy()
public uint4 get_yyxz()
public uint4 get_yyyx()
public uint4 get_yyyy()
public uint4 get_yyyz()
public uint4 get_yyzx()
public uint4 get_yyzy()
public uint4 get_yyzz()
public uint4 get_yzxx()
public uint4 get_yzxy()
public uint4 get_yzxz()
public uint4 get_yzyx()
public uint4 get_yzyy()
public uint4 get_yzyz()
public uint4 get_yzzx()
public uint4 get_yzzy()
public uint4 get_yzzz()
public uint4 get_zxxx()
public uint4 get_zxxy()
public uint4 get_zxxz()
public uint4 get_zxyx()
public uint4 get_zxyy()
public uint4 get_zxyz()
public uint4 get_zxzx()
public uint4 get_zxzy()
public uint4 get_zxzz()
public uint4 get_zyxx()
public uint4 get_zyxy()
public uint4 get_zyxz()
public uint4 get_zyyx()
public uint4 get_zyyy()
public uint4 get_zyyz()
public uint4 get_zyzx()
public uint4 get_zyzy()
public uint4 get_zyzz()
public uint4 get_zzxx()
public uint4 get_zzxy()
public uint4 get_zzxz()
public uint4 get_zzyx()
public uint4 get_zzyy()
public uint4 get_zzyz()
public uint4 get_zzzx()
public uint4 get_zzzy()
public uint4 get_zzzz()
public uint3 get_xxx()
public uint3 get_xxy()
public uint3 get_xxz()
public uint3 get_xyx()
public uint3 get_xyy()
public uint3 get_xyz()
public void set_xyz(uint3 value)
public uint3 get_xzx()
public uint3 get_xzy()
public void set_xzy(uint3 value)
public uint3 get_xzz()
public uint3 get_yxx()
public uint3 get_yxy()
public uint3 get_yxz()
public void set_yxz(uint3 value)
public uint3 get_yyx()
public uint3 get_yyy()
public uint3 get_yyz()
public uint3 get_yzx()
public void set_yzx(uint3 value)
public uint3 get_yzy()
public uint3 get_yzz()
public uint3 get_zxx()
public uint3 get_zxy()
public void set_zxy(uint3 value)
public uint3 get_zxz()
public uint3 get_zyx()
public void set_zyx(uint3 value)
public uint3 get_zyy()
public uint3 get_zyz()
public uint3 get_zzx()
public uint3 get_zzy()
public uint3 get_zzz()
public uint2 get_xx()
public uint2 get_xy()
public void set_xy(uint2 value)
public uint2 get_xz()
public void set_xz(uint2 value)
public uint2 get_yx()
public void set_yx(uint2 value)
public uint2 get_yy()
public uint2 get_yz()
public void set_yz(uint2 value)
public uint2 get_zx()
public void set_zx(uint2 value)
public uint2 get_zy()
public void set_zy(uint2 value)
public uint2 get_zz()
public UInt32 get_Item(int index)
public void set_Item(int index, UInt32 value)
public bool Equals(uint3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint3x2 : ValueType {
public uint3 c0
public uint3 c1
public uint3x2 zero
public uint3& Item
public void .ctor(uint3 c0, uint3 c1)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool3x2 v)
public void .ctor(int v)
public void .ctor(int3x2 v)
public void .ctor(float v)
public void .ctor(float3x2 v)
public void .ctor(double v)
public void .ctor(double3x2 v)
public uint3x2 op_Implicit(UInt32 v)
public uint3x2 op_Explicit(bool v)
public uint3x2 op_Explicit(bool3x2 v)
public uint3x2 op_Explicit(int v)
public uint3x2 op_Explicit(int3x2 v)
public uint3x2 op_Explicit(float v)
public uint3x2 op_Explicit(float3x2 v)
public uint3x2 op_Explicit(double v)
public uint3x2 op_Explicit(double3x2 v)
public uint3x2 op_Multiply(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_Multiply(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_Multiply(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_Addition(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_Addition(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_Addition(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_Subtraction(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_Subtraction(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_Subtraction(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_Division(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_Division(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_Division(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_Modulus(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_Modulus(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_Modulus(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_Increment(uint3x2 val)
public uint3x2 op_Decrement(uint3x2 val)
public bool3x2 op_LessThan(uint3x2 lhs, uint3x2 rhs)
public bool3x2 op_LessThan(uint3x2 lhs, UInt32 rhs)
public bool3x2 op_LessThan(UInt32 lhs, uint3x2 rhs)
public bool3x2 op_LessThanOrEqual(uint3x2 lhs, uint3x2 rhs)
public bool3x2 op_LessThanOrEqual(uint3x2 lhs, UInt32 rhs)
public bool3x2 op_LessThanOrEqual(UInt32 lhs, uint3x2 rhs)
public bool3x2 op_GreaterThan(uint3x2 lhs, uint3x2 rhs)
public bool3x2 op_GreaterThan(uint3x2 lhs, UInt32 rhs)
public bool3x2 op_GreaterThan(UInt32 lhs, uint3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(uint3x2 lhs, uint3x2 rhs)
public bool3x2 op_GreaterThanOrEqual(uint3x2 lhs, UInt32 rhs)
public bool3x2 op_GreaterThanOrEqual(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_UnaryNegation(uint3x2 val)
public uint3x2 op_UnaryPlus(uint3x2 val)
public uint3x2 op_LeftShift(uint3x2 x, int n)
public uint3x2 op_RightShift(uint3x2 x, int n)
public bool3x2 op_Equality(uint3x2 lhs, uint3x2 rhs)
public bool3x2 op_Equality(uint3x2 lhs, UInt32 rhs)
public bool3x2 op_Equality(UInt32 lhs, uint3x2 rhs)
public bool3x2 op_Inequality(uint3x2 lhs, uint3x2 rhs)
public bool3x2 op_Inequality(uint3x2 lhs, UInt32 rhs)
public bool3x2 op_Inequality(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_OnesComplement(uint3x2 val)
public uint3x2 op_BitwiseAnd(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_BitwiseAnd(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_BitwiseAnd(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_BitwiseOr(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_BitwiseOr(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_BitwiseOr(UInt32 lhs, uint3x2 rhs)
public uint3x2 op_ExclusiveOr(uint3x2 lhs, uint3x2 rhs)
public uint3x2 op_ExclusiveOr(uint3x2 lhs, UInt32 rhs)
public uint3x2 op_ExclusiveOr(UInt32 lhs, uint3x2 rhs)
public uint3& get_Item(int index)
public bool Equals(uint3x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint3x3 : ValueType {
public uint3 c0
public uint3 c1
public uint3 c2
public uint3x3 identity
public uint3x3 zero
public uint3& Item
public void .ctor(uint3 c0, uint3 c1, uint3 c2)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool3x3 v)
public void .ctor(int v)
public void .ctor(int3x3 v)
public void .ctor(float v)
public void .ctor(float3x3 v)
public void .ctor(double v)
public void .ctor(double3x3 v)
public uint3x3 op_Implicit(UInt32 v)
public uint3x3 op_Explicit(bool v)
public uint3x3 op_Explicit(bool3x3 v)
public uint3x3 op_Explicit(int v)
public uint3x3 op_Explicit(int3x3 v)
public uint3x3 op_Explicit(float v)
public uint3x3 op_Explicit(float3x3 v)
public uint3x3 op_Explicit(double v)
public uint3x3 op_Explicit(double3x3 v)
public uint3x3 op_Multiply(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_Multiply(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_Multiply(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_Addition(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_Addition(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_Addition(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_Subtraction(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_Subtraction(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_Subtraction(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_Division(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_Division(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_Division(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_Modulus(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_Modulus(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_Modulus(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_Increment(uint3x3 val)
public uint3x3 op_Decrement(uint3x3 val)
public bool3x3 op_LessThan(uint3x3 lhs, uint3x3 rhs)
public bool3x3 op_LessThan(uint3x3 lhs, UInt32 rhs)
public bool3x3 op_LessThan(UInt32 lhs, uint3x3 rhs)
public bool3x3 op_LessThanOrEqual(uint3x3 lhs, uint3x3 rhs)
public bool3x3 op_LessThanOrEqual(uint3x3 lhs, UInt32 rhs)
public bool3x3 op_LessThanOrEqual(UInt32 lhs, uint3x3 rhs)
public bool3x3 op_GreaterThan(uint3x3 lhs, uint3x3 rhs)
public bool3x3 op_GreaterThan(uint3x3 lhs, UInt32 rhs)
public bool3x3 op_GreaterThan(UInt32 lhs, uint3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(uint3x3 lhs, uint3x3 rhs)
public bool3x3 op_GreaterThanOrEqual(uint3x3 lhs, UInt32 rhs)
public bool3x3 op_GreaterThanOrEqual(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_UnaryNegation(uint3x3 val)
public uint3x3 op_UnaryPlus(uint3x3 val)
public uint3x3 op_LeftShift(uint3x3 x, int n)
public uint3x3 op_RightShift(uint3x3 x, int n)
public bool3x3 op_Equality(uint3x3 lhs, uint3x3 rhs)
public bool3x3 op_Equality(uint3x3 lhs, UInt32 rhs)
public bool3x3 op_Equality(UInt32 lhs, uint3x3 rhs)
public bool3x3 op_Inequality(uint3x3 lhs, uint3x3 rhs)
public bool3x3 op_Inequality(uint3x3 lhs, UInt32 rhs)
public bool3x3 op_Inequality(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_OnesComplement(uint3x3 val)
public uint3x3 op_BitwiseAnd(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_BitwiseAnd(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_BitwiseAnd(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_BitwiseOr(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_BitwiseOr(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_BitwiseOr(UInt32 lhs, uint3x3 rhs)
public uint3x3 op_ExclusiveOr(uint3x3 lhs, uint3x3 rhs)
public uint3x3 op_ExclusiveOr(uint3x3 lhs, UInt32 rhs)
public uint3x3 op_ExclusiveOr(UInt32 lhs, uint3x3 rhs)
public uint3& get_Item(int index)
public bool Equals(uint3x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint3x4 : ValueType {
public uint3 c0
public uint3 c1
public uint3 c2
public uint3 c3
public uint3x4 zero
public uint3& Item
public void .ctor(uint3 c0, uint3 c1, uint3 c2, uint3 c3)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool3x4 v)
public void .ctor(int v)
public void .ctor(int3x4 v)
public void .ctor(float v)
public void .ctor(float3x4 v)
public void .ctor(double v)
public void .ctor(double3x4 v)
public uint3x4 op_Implicit(UInt32 v)
public uint3x4 op_Explicit(bool v)
public uint3x4 op_Explicit(bool3x4 v)
public uint3x4 op_Explicit(int v)
public uint3x4 op_Explicit(int3x4 v)
public uint3x4 op_Explicit(float v)
public uint3x4 op_Explicit(float3x4 v)
public uint3x4 op_Explicit(double v)
public uint3x4 op_Explicit(double3x4 v)
public uint3x4 op_Multiply(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_Multiply(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_Multiply(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_Addition(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_Addition(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_Addition(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_Subtraction(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_Subtraction(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_Subtraction(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_Division(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_Division(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_Division(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_Modulus(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_Modulus(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_Modulus(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_Increment(uint3x4 val)
public uint3x4 op_Decrement(uint3x4 val)
public bool3x4 op_LessThan(uint3x4 lhs, uint3x4 rhs)
public bool3x4 op_LessThan(uint3x4 lhs, UInt32 rhs)
public bool3x4 op_LessThan(UInt32 lhs, uint3x4 rhs)
public bool3x4 op_LessThanOrEqual(uint3x4 lhs, uint3x4 rhs)
public bool3x4 op_LessThanOrEqual(uint3x4 lhs, UInt32 rhs)
public bool3x4 op_LessThanOrEqual(UInt32 lhs, uint3x4 rhs)
public bool3x4 op_GreaterThan(uint3x4 lhs, uint3x4 rhs)
public bool3x4 op_GreaterThan(uint3x4 lhs, UInt32 rhs)
public bool3x4 op_GreaterThan(UInt32 lhs, uint3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(uint3x4 lhs, uint3x4 rhs)
public bool3x4 op_GreaterThanOrEqual(uint3x4 lhs, UInt32 rhs)
public bool3x4 op_GreaterThanOrEqual(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_UnaryNegation(uint3x4 val)
public uint3x4 op_UnaryPlus(uint3x4 val)
public uint3x4 op_LeftShift(uint3x4 x, int n)
public uint3x4 op_RightShift(uint3x4 x, int n)
public bool3x4 op_Equality(uint3x4 lhs, uint3x4 rhs)
public bool3x4 op_Equality(uint3x4 lhs, UInt32 rhs)
public bool3x4 op_Equality(UInt32 lhs, uint3x4 rhs)
public bool3x4 op_Inequality(uint3x4 lhs, uint3x4 rhs)
public bool3x4 op_Inequality(uint3x4 lhs, UInt32 rhs)
public bool3x4 op_Inequality(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_OnesComplement(uint3x4 val)
public uint3x4 op_BitwiseAnd(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_BitwiseAnd(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_BitwiseAnd(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_BitwiseOr(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_BitwiseOr(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_BitwiseOr(UInt32 lhs, uint3x4 rhs)
public uint3x4 op_ExclusiveOr(uint3x4 lhs, uint3x4 rhs)
public uint3x4 op_ExclusiveOr(uint3x4 lhs, UInt32 rhs)
public uint3x4 op_ExclusiveOr(UInt32 lhs, uint3x4 rhs)
public uint3& get_Item(int index)
public bool Equals(uint3x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint4 : ValueType {
public UInt32 x
public UInt32 y
public UInt32 z
public UInt32 w
public uint4 zero
public uint4 xxxx
public uint4 xxxy
public uint4 xxxz
public uint4 xxxw
public uint4 xxyx
public uint4 xxyy
public uint4 xxyz
public uint4 xxyw
public uint4 xxzx
public uint4 xxzy
public uint4 xxzz
public uint4 xxzw
public uint4 xxwx
public uint4 xxwy
public uint4 xxwz
public uint4 xxww
public uint4 xyxx
public uint4 xyxy
public uint4 xyxz
public uint4 xyxw
public uint4 xyyx
public uint4 xyyy
public uint4 xyyz
public uint4 xyyw
public uint4 xyzx
public uint4 xyzy
public uint4 xyzz
public uint4 xyzw
public uint4 xywx
public uint4 xywy
public uint4 xywz
public uint4 xyww
public uint4 xzxx
public uint4 xzxy
public uint4 xzxz
public uint4 xzxw
public uint4 xzyx
public uint4 xzyy
public uint4 xzyz
public uint4 xzyw
public uint4 xzzx
public uint4 xzzy
public uint4 xzzz
public uint4 xzzw
public uint4 xzwx
public uint4 xzwy
public uint4 xzwz
public uint4 xzww
public uint4 xwxx
public uint4 xwxy
public uint4 xwxz
public uint4 xwxw
public uint4 xwyx
public uint4 xwyy
public uint4 xwyz
public uint4 xwyw
public uint4 xwzx
public uint4 xwzy
public uint4 xwzz
public uint4 xwzw
public uint4 xwwx
public uint4 xwwy
public uint4 xwwz
public uint4 xwww
public uint4 yxxx
public uint4 yxxy
public uint4 yxxz
public uint4 yxxw
public uint4 yxyx
public uint4 yxyy
public uint4 yxyz
public uint4 yxyw
public uint4 yxzx
public uint4 yxzy
public uint4 yxzz
public uint4 yxzw
public uint4 yxwx
public uint4 yxwy
public uint4 yxwz
public uint4 yxww
public uint4 yyxx
public uint4 yyxy
public uint4 yyxz
public uint4 yyxw
public uint4 yyyx
public uint4 yyyy
public uint4 yyyz
public uint4 yyyw
public uint4 yyzx
public uint4 yyzy
public uint4 yyzz
public uint4 yyzw
public uint4 yywx
public uint4 yywy
public uint4 yywz
public uint4 yyww
public uint4 yzxx
public uint4 yzxy
public uint4 yzxz
public uint4 yzxw
public uint4 yzyx
public uint4 yzyy
public uint4 yzyz
public uint4 yzyw
public uint4 yzzx
public uint4 yzzy
public uint4 yzzz
public uint4 yzzw
public uint4 yzwx
public uint4 yzwy
public uint4 yzwz
public uint4 yzww
public uint4 ywxx
public uint4 ywxy
public uint4 ywxz
public uint4 ywxw
public uint4 ywyx
public uint4 ywyy
public uint4 ywyz
public uint4 ywyw
public uint4 ywzx
public uint4 ywzy
public uint4 ywzz
public uint4 ywzw
public uint4 ywwx
public uint4 ywwy
public uint4 ywwz
public uint4 ywww
public uint4 zxxx
public uint4 zxxy
public uint4 zxxz
public uint4 zxxw
public uint4 zxyx
public uint4 zxyy
public uint4 zxyz
public uint4 zxyw
public uint4 zxzx
public uint4 zxzy
public uint4 zxzz
public uint4 zxzw
public uint4 zxwx
public uint4 zxwy
public uint4 zxwz
public uint4 zxww
public uint4 zyxx
public uint4 zyxy
public uint4 zyxz
public uint4 zyxw
public uint4 zyyx
public uint4 zyyy
public uint4 zyyz
public uint4 zyyw
public uint4 zyzx
public uint4 zyzy
public uint4 zyzz
public uint4 zyzw
public uint4 zywx
public uint4 zywy
public uint4 zywz
public uint4 zyww
public uint4 zzxx
public uint4 zzxy
public uint4 zzxz
public uint4 zzxw
public uint4 zzyx
public uint4 zzyy
public uint4 zzyz
public uint4 zzyw
public uint4 zzzx
public uint4 zzzy
public uint4 zzzz
public uint4 zzzw
public uint4 zzwx
public uint4 zzwy
public uint4 zzwz
public uint4 zzww
public uint4 zwxx
public uint4 zwxy
public uint4 zwxz
public uint4 zwxw
public uint4 zwyx
public uint4 zwyy
public uint4 zwyz
public uint4 zwyw
public uint4 zwzx
public uint4 zwzy
public uint4 zwzz
public uint4 zwzw
public uint4 zwwx
public uint4 zwwy
public uint4 zwwz
public uint4 zwww
public uint4 wxxx
public uint4 wxxy
public uint4 wxxz
public uint4 wxxw
public uint4 wxyx
public uint4 wxyy
public uint4 wxyz
public uint4 wxyw
public uint4 wxzx
public uint4 wxzy
public uint4 wxzz
public uint4 wxzw
public uint4 wxwx
public uint4 wxwy
public uint4 wxwz
public uint4 wxww
public uint4 wyxx
public uint4 wyxy
public uint4 wyxz
public uint4 wyxw
public uint4 wyyx
public uint4 wyyy
public uint4 wyyz
public uint4 wyyw
public uint4 wyzx
public uint4 wyzy
public uint4 wyzz
public uint4 wyzw
public uint4 wywx
public uint4 wywy
public uint4 wywz
public uint4 wyww
public uint4 wzxx
public uint4 wzxy
public uint4 wzxz
public uint4 wzxw
public uint4 wzyx
public uint4 wzyy
public uint4 wzyz
public uint4 wzyw
public uint4 wzzx
public uint4 wzzy
public uint4 wzzz
public uint4 wzzw
public uint4 wzwx
public uint4 wzwy
public uint4 wzwz
public uint4 wzww
public uint4 wwxx
public uint4 wwxy
public uint4 wwxz
public uint4 wwxw
public uint4 wwyx
public uint4 wwyy
public uint4 wwyz
public uint4 wwyw
public uint4 wwzx
public uint4 wwzy
public uint4 wwzz
public uint4 wwzw
public uint4 wwwx
public uint4 wwwy
public uint4 wwwz
public uint4 wwww
public uint3 xxx
public uint3 xxy
public uint3 xxz
public uint3 xxw
public uint3 xyx
public uint3 xyy
public uint3 xyz
public uint3 xyw
public uint3 xzx
public uint3 xzy
public uint3 xzz
public uint3 xzw
public uint3 xwx
public uint3 xwy
public uint3 xwz
public uint3 xww
public uint3 yxx
public uint3 yxy
public uint3 yxz
public uint3 yxw
public uint3 yyx
public uint3 yyy
public uint3 yyz
public uint3 yyw
public uint3 yzx
public uint3 yzy
public uint3 yzz
public uint3 yzw
public uint3 ywx
public uint3 ywy
public uint3 ywz
public uint3 yww
public uint3 zxx
public uint3 zxy
public uint3 zxz
public uint3 zxw
public uint3 zyx
public uint3 zyy
public uint3 zyz
public uint3 zyw
public uint3 zzx
public uint3 zzy
public uint3 zzz
public uint3 zzw
public uint3 zwx
public uint3 zwy
public uint3 zwz
public uint3 zww
public uint3 wxx
public uint3 wxy
public uint3 wxz
public uint3 wxw
public uint3 wyx
public uint3 wyy
public uint3 wyz
public uint3 wyw
public uint3 wzx
public uint3 wzy
public uint3 wzz
public uint3 wzw
public uint3 wwx
public uint3 wwy
public uint3 wwz
public uint3 www
public uint2 xx
public uint2 xy
public uint2 xz
public uint2 xw
public uint2 yx
public uint2 yy
public uint2 yz
public uint2 yw
public uint2 zx
public uint2 zy
public uint2 zz
public uint2 zw
public uint2 wx
public uint2 wy
public uint2 wz
public uint2 ww
public UInt32 Item
public void .ctor(UInt32 x, UInt32 y, UInt32 z, UInt32 w)
public void .ctor(UInt32 x, UInt32 y, uint2 zw)
public void .ctor(UInt32 x, uint2 yz, UInt32 w)
public void .ctor(UInt32 x, uint3 yzw)
public void .ctor(uint2 xy, UInt32 z, UInt32 w)
public void .ctor(uint2 xy, uint2 zw)
public void .ctor(uint3 xyz, UInt32 w)
public void .ctor(uint4 xyzw)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool4 v)
public void .ctor(int v)
public void .ctor(int4 v)
public void .ctor(float v)
public void .ctor(float4 v)
public void .ctor(double v)
public void .ctor(double4 v)
public uint4 op_Implicit(UInt32 v)
public uint4 op_Explicit(bool v)
public uint4 op_Explicit(bool4 v)
public uint4 op_Explicit(int v)
public uint4 op_Explicit(int4 v)
public uint4 op_Explicit(float v)
public uint4 op_Explicit(float4 v)
public uint4 op_Explicit(double v)
public uint4 op_Explicit(double4 v)
public uint4 op_Multiply(uint4 lhs, uint4 rhs)
public uint4 op_Multiply(uint4 lhs, UInt32 rhs)
public uint4 op_Multiply(UInt32 lhs, uint4 rhs)
public uint4 op_Addition(uint4 lhs, uint4 rhs)
public uint4 op_Addition(uint4 lhs, UInt32 rhs)
public uint4 op_Addition(UInt32 lhs, uint4 rhs)
public uint4 op_Subtraction(uint4 lhs, uint4 rhs)
public uint4 op_Subtraction(uint4 lhs, UInt32 rhs)
public uint4 op_Subtraction(UInt32 lhs, uint4 rhs)
public uint4 op_Division(uint4 lhs, uint4 rhs)
public uint4 op_Division(uint4 lhs, UInt32 rhs)
public uint4 op_Division(UInt32 lhs, uint4 rhs)
public uint4 op_Modulus(uint4 lhs, uint4 rhs)
public uint4 op_Modulus(uint4 lhs, UInt32 rhs)
public uint4 op_Modulus(UInt32 lhs, uint4 rhs)
public uint4 op_Increment(uint4 val)
public uint4 op_Decrement(uint4 val)
public bool4 op_LessThan(uint4 lhs, uint4 rhs)
public bool4 op_LessThan(uint4 lhs, UInt32 rhs)
public bool4 op_LessThan(UInt32 lhs, uint4 rhs)
public bool4 op_LessThanOrEqual(uint4 lhs, uint4 rhs)
public bool4 op_LessThanOrEqual(uint4 lhs, UInt32 rhs)
public bool4 op_LessThanOrEqual(UInt32 lhs, uint4 rhs)
public bool4 op_GreaterThan(uint4 lhs, uint4 rhs)
public bool4 op_GreaterThan(uint4 lhs, UInt32 rhs)
public bool4 op_GreaterThan(UInt32 lhs, uint4 rhs)
public bool4 op_GreaterThanOrEqual(uint4 lhs, uint4 rhs)
public bool4 op_GreaterThanOrEqual(uint4 lhs, UInt32 rhs)
public bool4 op_GreaterThanOrEqual(UInt32 lhs, uint4 rhs)
public uint4 op_UnaryNegation(uint4 val)
public uint4 op_UnaryPlus(uint4 val)
public uint4 op_LeftShift(uint4 x, int n)
public uint4 op_RightShift(uint4 x, int n)
public bool4 op_Equality(uint4 lhs, uint4 rhs)
public bool4 op_Equality(uint4 lhs, UInt32 rhs)
public bool4 op_Equality(UInt32 lhs, uint4 rhs)
public bool4 op_Inequality(uint4 lhs, uint4 rhs)
public bool4 op_Inequality(uint4 lhs, UInt32 rhs)
public bool4 op_Inequality(UInt32 lhs, uint4 rhs)
public uint4 op_OnesComplement(uint4 val)
public uint4 op_BitwiseAnd(uint4 lhs, uint4 rhs)
public uint4 op_BitwiseAnd(uint4 lhs, UInt32 rhs)
public uint4 op_BitwiseAnd(UInt32 lhs, uint4 rhs)
public uint4 op_BitwiseOr(uint4 lhs, uint4 rhs)
public uint4 op_BitwiseOr(uint4 lhs, UInt32 rhs)
public uint4 op_BitwiseOr(UInt32 lhs, uint4 rhs)
public uint4 op_ExclusiveOr(uint4 lhs, uint4 rhs)
public uint4 op_ExclusiveOr(uint4 lhs, UInt32 rhs)
public uint4 op_ExclusiveOr(UInt32 lhs, uint4 rhs)
public uint4 get_xxxx()
public uint4 get_xxxy()
public uint4 get_xxxz()
public uint4 get_xxxw()
public uint4 get_xxyx()
public uint4 get_xxyy()
public uint4 get_xxyz()
public uint4 get_xxyw()
public uint4 get_xxzx()
public uint4 get_xxzy()
public uint4 get_xxzz()
public uint4 get_xxzw()
public uint4 get_xxwx()
public uint4 get_xxwy()
public uint4 get_xxwz()
public uint4 get_xxww()
public uint4 get_xyxx()
public uint4 get_xyxy()
public uint4 get_xyxz()
public uint4 get_xyxw()
public uint4 get_xyyx()
public uint4 get_xyyy()
public uint4 get_xyyz()
public uint4 get_xyyw()
public uint4 get_xyzx()
public uint4 get_xyzy()
public uint4 get_xyzz()
public uint4 get_xyzw()
public void set_xyzw(uint4 value)
public uint4 get_xywx()
public uint4 get_xywy()
public uint4 get_xywz()
public void set_xywz(uint4 value)
public uint4 get_xyww()
public uint4 get_xzxx()
public uint4 get_xzxy()
public uint4 get_xzxz()
public uint4 get_xzxw()
public uint4 get_xzyx()
public uint4 get_xzyy()
public uint4 get_xzyz()
public uint4 get_xzyw()
public void set_xzyw(uint4 value)
public uint4 get_xzzx()
public uint4 get_xzzy()
public uint4 get_xzzz()
public uint4 get_xzzw()
public uint4 get_xzwx()
public uint4 get_xzwy()
public void set_xzwy(uint4 value)
public uint4 get_xzwz()
public uint4 get_xzww()
public uint4 get_xwxx()
public uint4 get_xwxy()
public uint4 get_xwxz()
public uint4 get_xwxw()
public uint4 get_xwyx()
public uint4 get_xwyy()
public uint4 get_xwyz()
public void set_xwyz(uint4 value)
public uint4 get_xwyw()
public uint4 get_xwzx()
public uint4 get_xwzy()
public void set_xwzy(uint4 value)
public uint4 get_xwzz()
public uint4 get_xwzw()
public uint4 get_xwwx()
public uint4 get_xwwy()
public uint4 get_xwwz()
public uint4 get_xwww()
public uint4 get_yxxx()
public uint4 get_yxxy()
public uint4 get_yxxz()
public uint4 get_yxxw()
public uint4 get_yxyx()
public uint4 get_yxyy()
public uint4 get_yxyz()
public uint4 get_yxyw()
public uint4 get_yxzx()
public uint4 get_yxzy()
public uint4 get_yxzz()
public uint4 get_yxzw()
public void set_yxzw(uint4 value)
public uint4 get_yxwx()
public uint4 get_yxwy()
public uint4 get_yxwz()
public void set_yxwz(uint4 value)
public uint4 get_yxww()
public uint4 get_yyxx()
public uint4 get_yyxy()
public uint4 get_yyxz()
public uint4 get_yyxw()
public uint4 get_yyyx()
public uint4 get_yyyy()
public uint4 get_yyyz()
public uint4 get_yyyw()
public uint4 get_yyzx()
public uint4 get_yyzy()
public uint4 get_yyzz()
public uint4 get_yyzw()
public uint4 get_yywx()
public uint4 get_yywy()
public uint4 get_yywz()
public uint4 get_yyww()
public uint4 get_yzxx()
public uint4 get_yzxy()
public uint4 get_yzxz()
public uint4 get_yzxw()
public void set_yzxw(uint4 value)
public uint4 get_yzyx()
public uint4 get_yzyy()
public uint4 get_yzyz()
public uint4 get_yzyw()
public uint4 get_yzzx()
public uint4 get_yzzy()
public uint4 get_yzzz()
public uint4 get_yzzw()
public uint4 get_yzwx()
public void set_yzwx(uint4 value)
public uint4 get_yzwy()
public uint4 get_yzwz()
public uint4 get_yzww()
public uint4 get_ywxx()
public uint4 get_ywxy()
public uint4 get_ywxz()
public void set_ywxz(uint4 value)
public uint4 get_ywxw()
public uint4 get_ywyx()
public uint4 get_ywyy()
public uint4 get_ywyz()
public uint4 get_ywyw()
public uint4 get_ywzx()
public void set_ywzx(uint4 value)
public uint4 get_ywzy()
public uint4 get_ywzz()
public uint4 get_ywzw()
public uint4 get_ywwx()
public uint4 get_ywwy()
public uint4 get_ywwz()
public uint4 get_ywww()
public uint4 get_zxxx()
public uint4 get_zxxy()
public uint4 get_zxxz()
public uint4 get_zxxw()
public uint4 get_zxyx()
public uint4 get_zxyy()
public uint4 get_zxyz()
public uint4 get_zxyw()
public void set_zxyw(uint4 value)
public uint4 get_zxzx()
public uint4 get_zxzy()
public uint4 get_zxzz()
public uint4 get_zxzw()
public uint4 get_zxwx()
public uint4 get_zxwy()
public void set_zxwy(uint4 value)
public uint4 get_zxwz()
public uint4 get_zxww()
public uint4 get_zyxx()
public uint4 get_zyxy()
public uint4 get_zyxz()
public uint4 get_zyxw()
public void set_zyxw(uint4 value)
public uint4 get_zyyx()
public uint4 get_zyyy()
public uint4 get_zyyz()
public uint4 get_zyyw()
public uint4 get_zyzx()
public uint4 get_zyzy()
public uint4 get_zyzz()
public uint4 get_zyzw()
public uint4 get_zywx()
public void set_zywx(uint4 value)
public uint4 get_zywy()
public uint4 get_zywz()
public uint4 get_zyww()
public uint4 get_zzxx()
public uint4 get_zzxy()
public uint4 get_zzxz()
public uint4 get_zzxw()
public uint4 get_zzyx()
public uint4 get_zzyy()
public uint4 get_zzyz()
public uint4 get_zzyw()
public uint4 get_zzzx()
public uint4 get_zzzy()
public uint4 get_zzzz()
public uint4 get_zzzw()
public uint4 get_zzwx()
public uint4 get_zzwy()
public uint4 get_zzwz()
public uint4 get_zzww()
public uint4 get_zwxx()
public uint4 get_zwxy()
public void set_zwxy(uint4 value)
public uint4 get_zwxz()
public uint4 get_zwxw()
public uint4 get_zwyx()
public void set_zwyx(uint4 value)
public uint4 get_zwyy()
public uint4 get_zwyz()
public uint4 get_zwyw()
public uint4 get_zwzx()
public uint4 get_zwzy()
public uint4 get_zwzz()
public uint4 get_zwzw()
public uint4 get_zwwx()
public uint4 get_zwwy()
public uint4 get_zwwz()
public uint4 get_zwww()
public uint4 get_wxxx()
public uint4 get_wxxy()
public uint4 get_wxxz()
public uint4 get_wxxw()
public uint4 get_wxyx()
public uint4 get_wxyy()
public uint4 get_wxyz()
public void set_wxyz(uint4 value)
public uint4 get_wxyw()
public uint4 get_wxzx()
public uint4 get_wxzy()
public void set_wxzy(uint4 value)
public uint4 get_wxzz()
public uint4 get_wxzw()
public uint4 get_wxwx()
public uint4 get_wxwy()
public uint4 get_wxwz()
public uint4 get_wxww()
public uint4 get_wyxx()
public uint4 get_wyxy()
public uint4 get_wyxz()
public void set_wyxz(uint4 value)
public uint4 get_wyxw()
public uint4 get_wyyx()
public uint4 get_wyyy()
public uint4 get_wyyz()
public uint4 get_wyyw()
public uint4 get_wyzx()
public void set_wyzx(uint4 value)
public uint4 get_wyzy()
public uint4 get_wyzz()
public uint4 get_wyzw()
public uint4 get_wywx()
public uint4 get_wywy()
public uint4 get_wywz()
public uint4 get_wyww()
public uint4 get_wzxx()
public uint4 get_wzxy()
public void set_wzxy(uint4 value)
public uint4 get_wzxz()
public uint4 get_wzxw()
public uint4 get_wzyx()
public void set_wzyx(uint4 value)
public uint4 get_wzyy()
public uint4 get_wzyz()
public uint4 get_wzyw()
public uint4 get_wzzx()
public uint4 get_wzzy()
public uint4 get_wzzz()
public uint4 get_wzzw()
public uint4 get_wzwx()
public uint4 get_wzwy()
public uint4 get_wzwz()
public uint4 get_wzww()
public uint4 get_wwxx()
public uint4 get_wwxy()
public uint4 get_wwxz()
public uint4 get_wwxw()
public uint4 get_wwyx()
public uint4 get_wwyy()
public uint4 get_wwyz()
public uint4 get_wwyw()
public uint4 get_wwzx()
public uint4 get_wwzy()
public uint4 get_wwzz()
public uint4 get_wwzw()
public uint4 get_wwwx()
public uint4 get_wwwy()
public uint4 get_wwwz()
public uint4 get_wwww()
public uint3 get_xxx()
public uint3 get_xxy()
public uint3 get_xxz()
public uint3 get_xxw()
public uint3 get_xyx()
public uint3 get_xyy()
public uint3 get_xyz()
public void set_xyz(uint3 value)
public uint3 get_xyw()
public void set_xyw(uint3 value)
public uint3 get_xzx()
public uint3 get_xzy()
public void set_xzy(uint3 value)
public uint3 get_xzz()
public uint3 get_xzw()
public void set_xzw(uint3 value)
public uint3 get_xwx()
public uint3 get_xwy()
public void set_xwy(uint3 value)
public uint3 get_xwz()
public void set_xwz(uint3 value)
public uint3 get_xww()
public uint3 get_yxx()
public uint3 get_yxy()
public uint3 get_yxz()
public void set_yxz(uint3 value)
public uint3 get_yxw()
public void set_yxw(uint3 value)
public uint3 get_yyx()
public uint3 get_yyy()
public uint3 get_yyz()
public uint3 get_yyw()
public uint3 get_yzx()
public void set_yzx(uint3 value)
public uint3 get_yzy()
public uint3 get_yzz()
public uint3 get_yzw()
public void set_yzw(uint3 value)
public uint3 get_ywx()
public void set_ywx(uint3 value)
public uint3 get_ywy()
public uint3 get_ywz()
public void set_ywz(uint3 value)
public uint3 get_yww()
public uint3 get_zxx()
public uint3 get_zxy()
public void set_zxy(uint3 value)
public uint3 get_zxz()
public uint3 get_zxw()
public void set_zxw(uint3 value)
public uint3 get_zyx()
public void set_zyx(uint3 value)
public uint3 get_zyy()
public uint3 get_zyz()
public uint3 get_zyw()
public void set_zyw(uint3 value)
public uint3 get_zzx()
public uint3 get_zzy()
public uint3 get_zzz()
public uint3 get_zzw()
public uint3 get_zwx()
public void set_zwx(uint3 value)
public uint3 get_zwy()
public void set_zwy(uint3 value)
public uint3 get_zwz()
public uint3 get_zww()
public uint3 get_wxx()
public uint3 get_wxy()
public void set_wxy(uint3 value)
public uint3 get_wxz()
public void set_wxz(uint3 value)
public uint3 get_wxw()
public uint3 get_wyx()
public void set_wyx(uint3 value)
public uint3 get_wyy()
public uint3 get_wyz()
public void set_wyz(uint3 value)
public uint3 get_wyw()
public uint3 get_wzx()
public void set_wzx(uint3 value)
public uint3 get_wzy()
public void set_wzy(uint3 value)
public uint3 get_wzz()
public uint3 get_wzw()
public uint3 get_wwx()
public uint3 get_wwy()
public uint3 get_wwz()
public uint3 get_www()
public uint2 get_xx()
public uint2 get_xy()
public void set_xy(uint2 value)
public uint2 get_xz()
public void set_xz(uint2 value)
public uint2 get_xw()
public void set_xw(uint2 value)
public uint2 get_yx()
public void set_yx(uint2 value)
public uint2 get_yy()
public uint2 get_yz()
public void set_yz(uint2 value)
public uint2 get_yw()
public void set_yw(uint2 value)
public uint2 get_zx()
public void set_zx(uint2 value)
public uint2 get_zy()
public void set_zy(uint2 value)
public uint2 get_zz()
public uint2 get_zw()
public void set_zw(uint2 value)
public uint2 get_wx()
public void set_wx(uint2 value)
public uint2 get_wy()
public void set_wy(uint2 value)
public uint2 get_wz()
public void set_wz(uint2 value)
public uint2 get_ww()
public UInt32 get_Item(int index)
public void set_Item(int index, UInt32 value)
public bool Equals(uint4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint4x2 : ValueType {
public uint4 c0
public uint4 c1
public uint4x2 zero
public uint4& Item
public void .ctor(uint4 c0, uint4 c1)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21, UInt32 m30, UInt32 m31)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool4x2 v)
public void .ctor(int v)
public void .ctor(int4x2 v)
public void .ctor(float v)
public void .ctor(float4x2 v)
public void .ctor(double v)
public void .ctor(double4x2 v)
public uint4x2 op_Implicit(UInt32 v)
public uint4x2 op_Explicit(bool v)
public uint4x2 op_Explicit(bool4x2 v)
public uint4x2 op_Explicit(int v)
public uint4x2 op_Explicit(int4x2 v)
public uint4x2 op_Explicit(float v)
public uint4x2 op_Explicit(float4x2 v)
public uint4x2 op_Explicit(double v)
public uint4x2 op_Explicit(double4x2 v)
public uint4x2 op_Multiply(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_Multiply(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_Multiply(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_Addition(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_Addition(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_Addition(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_Subtraction(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_Subtraction(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_Subtraction(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_Division(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_Division(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_Division(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_Modulus(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_Modulus(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_Modulus(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_Increment(uint4x2 val)
public uint4x2 op_Decrement(uint4x2 val)
public bool4x2 op_LessThan(uint4x2 lhs, uint4x2 rhs)
public bool4x2 op_LessThan(uint4x2 lhs, UInt32 rhs)
public bool4x2 op_LessThan(UInt32 lhs, uint4x2 rhs)
public bool4x2 op_LessThanOrEqual(uint4x2 lhs, uint4x2 rhs)
public bool4x2 op_LessThanOrEqual(uint4x2 lhs, UInt32 rhs)
public bool4x2 op_LessThanOrEqual(UInt32 lhs, uint4x2 rhs)
public bool4x2 op_GreaterThan(uint4x2 lhs, uint4x2 rhs)
public bool4x2 op_GreaterThan(uint4x2 lhs, UInt32 rhs)
public bool4x2 op_GreaterThan(UInt32 lhs, uint4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(uint4x2 lhs, uint4x2 rhs)
public bool4x2 op_GreaterThanOrEqual(uint4x2 lhs, UInt32 rhs)
public bool4x2 op_GreaterThanOrEqual(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_UnaryNegation(uint4x2 val)
public uint4x2 op_UnaryPlus(uint4x2 val)
public uint4x2 op_LeftShift(uint4x2 x, int n)
public uint4x2 op_RightShift(uint4x2 x, int n)
public bool4x2 op_Equality(uint4x2 lhs, uint4x2 rhs)
public bool4x2 op_Equality(uint4x2 lhs, UInt32 rhs)
public bool4x2 op_Equality(UInt32 lhs, uint4x2 rhs)
public bool4x2 op_Inequality(uint4x2 lhs, uint4x2 rhs)
public bool4x2 op_Inequality(uint4x2 lhs, UInt32 rhs)
public bool4x2 op_Inequality(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_OnesComplement(uint4x2 val)
public uint4x2 op_BitwiseAnd(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_BitwiseAnd(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_BitwiseAnd(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_BitwiseOr(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_BitwiseOr(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_BitwiseOr(UInt32 lhs, uint4x2 rhs)
public uint4x2 op_ExclusiveOr(uint4x2 lhs, uint4x2 rhs)
public uint4x2 op_ExclusiveOr(uint4x2 lhs, UInt32 rhs)
public uint4x2 op_ExclusiveOr(UInt32 lhs, uint4x2 rhs)
public uint4& get_Item(int index)
public bool Equals(uint4x2 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint4x3 : ValueType {
public uint4 c0
public uint4 c1
public uint4 c2
public uint4x3 zero
public uint4& Item
public void .ctor(uint4 c0, uint4 c1, uint4 c2)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m30, UInt32 m31, UInt32 m32)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool4x3 v)
public void .ctor(int v)
public void .ctor(int4x3 v)
public void .ctor(float v)
public void .ctor(float4x3 v)
public void .ctor(double v)
public void .ctor(double4x3 v)
public uint4x3 op_Implicit(UInt32 v)
public uint4x3 op_Explicit(bool v)
public uint4x3 op_Explicit(bool4x3 v)
public uint4x3 op_Explicit(int v)
public uint4x3 op_Explicit(int4x3 v)
public uint4x3 op_Explicit(float v)
public uint4x3 op_Explicit(float4x3 v)
public uint4x3 op_Explicit(double v)
public uint4x3 op_Explicit(double4x3 v)
public uint4x3 op_Multiply(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_Multiply(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_Multiply(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_Addition(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_Addition(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_Addition(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_Subtraction(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_Subtraction(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_Subtraction(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_Division(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_Division(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_Division(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_Modulus(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_Modulus(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_Modulus(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_Increment(uint4x3 val)
public uint4x3 op_Decrement(uint4x3 val)
public bool4x3 op_LessThan(uint4x3 lhs, uint4x3 rhs)
public bool4x3 op_LessThan(uint4x3 lhs, UInt32 rhs)
public bool4x3 op_LessThan(UInt32 lhs, uint4x3 rhs)
public bool4x3 op_LessThanOrEqual(uint4x3 lhs, uint4x3 rhs)
public bool4x3 op_LessThanOrEqual(uint4x3 lhs, UInt32 rhs)
public bool4x3 op_LessThanOrEqual(UInt32 lhs, uint4x3 rhs)
public bool4x3 op_GreaterThan(uint4x3 lhs, uint4x3 rhs)
public bool4x3 op_GreaterThan(uint4x3 lhs, UInt32 rhs)
public bool4x3 op_GreaterThan(UInt32 lhs, uint4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(uint4x3 lhs, uint4x3 rhs)
public bool4x3 op_GreaterThanOrEqual(uint4x3 lhs, UInt32 rhs)
public bool4x3 op_GreaterThanOrEqual(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_UnaryNegation(uint4x3 val)
public uint4x3 op_UnaryPlus(uint4x3 val)
public uint4x3 op_LeftShift(uint4x3 x, int n)
public uint4x3 op_RightShift(uint4x3 x, int n)
public bool4x3 op_Equality(uint4x3 lhs, uint4x3 rhs)
public bool4x3 op_Equality(uint4x3 lhs, UInt32 rhs)
public bool4x3 op_Equality(UInt32 lhs, uint4x3 rhs)
public bool4x3 op_Inequality(uint4x3 lhs, uint4x3 rhs)
public bool4x3 op_Inequality(uint4x3 lhs, UInt32 rhs)
public bool4x3 op_Inequality(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_OnesComplement(uint4x3 val)
public uint4x3 op_BitwiseAnd(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_BitwiseAnd(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_BitwiseAnd(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_BitwiseOr(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_BitwiseOr(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_BitwiseOr(UInt32 lhs, uint4x3 rhs)
public uint4x3 op_ExclusiveOr(uint4x3 lhs, uint4x3 rhs)
public uint4x3 op_ExclusiveOr(uint4x3 lhs, UInt32 rhs)
public uint4x3 op_ExclusiveOr(UInt32 lhs, uint4x3 rhs)
public uint4& get_Item(int index)
public bool Equals(uint4x3 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
public Unity.Mathematics.uint4x4 : ValueType {
public uint4 c0
public uint4 c1
public uint4 c2
public uint4 c3
public uint4x4 identity
public uint4x4 zero
public uint4& Item
public void .ctor(uint4 c0, uint4 c1, uint4 c2, uint4 c3)
public void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23, UInt32 m30, UInt32 m31, UInt32 m32, UInt32 m33)
public void .ctor(UInt32 v)
public void .ctor(bool v)
public void .ctor(bool4x4 v)
public void .ctor(int v)
public void .ctor(int4x4 v)
public void .ctor(float v)
public void .ctor(float4x4 v)
public void .ctor(double v)
public void .ctor(double4x4 v)
public uint4x4 op_Implicit(UInt32 v)
public uint4x4 op_Explicit(bool v)
public uint4x4 op_Explicit(bool4x4 v)
public uint4x4 op_Explicit(int v)
public uint4x4 op_Explicit(int4x4 v)
public uint4x4 op_Explicit(float v)
public uint4x4 op_Explicit(float4x4 v)
public uint4x4 op_Explicit(double v)
public uint4x4 op_Explicit(double4x4 v)
public uint4x4 op_Multiply(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_Multiply(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_Multiply(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_Addition(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_Addition(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_Addition(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_Subtraction(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_Subtraction(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_Subtraction(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_Division(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_Division(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_Division(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_Modulus(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_Modulus(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_Modulus(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_Increment(uint4x4 val)
public uint4x4 op_Decrement(uint4x4 val)
public bool4x4 op_LessThan(uint4x4 lhs, uint4x4 rhs)
public bool4x4 op_LessThan(uint4x4 lhs, UInt32 rhs)
public bool4x4 op_LessThan(UInt32 lhs, uint4x4 rhs)
public bool4x4 op_LessThanOrEqual(uint4x4 lhs, uint4x4 rhs)
public bool4x4 op_LessThanOrEqual(uint4x4 lhs, UInt32 rhs)
public bool4x4 op_LessThanOrEqual(UInt32 lhs, uint4x4 rhs)
public bool4x4 op_GreaterThan(uint4x4 lhs, uint4x4 rhs)
public bool4x4 op_GreaterThan(uint4x4 lhs, UInt32 rhs)
public bool4x4 op_GreaterThan(UInt32 lhs, uint4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(uint4x4 lhs, uint4x4 rhs)
public bool4x4 op_GreaterThanOrEqual(uint4x4 lhs, UInt32 rhs)
public bool4x4 op_GreaterThanOrEqual(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_UnaryNegation(uint4x4 val)
public uint4x4 op_UnaryPlus(uint4x4 val)
public uint4x4 op_LeftShift(uint4x4 x, int n)
public uint4x4 op_RightShift(uint4x4 x, int n)
public bool4x4 op_Equality(uint4x4 lhs, uint4x4 rhs)
public bool4x4 op_Equality(uint4x4 lhs, UInt32 rhs)
public bool4x4 op_Equality(UInt32 lhs, uint4x4 rhs)
public bool4x4 op_Inequality(uint4x4 lhs, uint4x4 rhs)
public bool4x4 op_Inequality(uint4x4 lhs, UInt32 rhs)
public bool4x4 op_Inequality(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_OnesComplement(uint4x4 val)
public uint4x4 op_BitwiseAnd(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_BitwiseAnd(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_BitwiseAnd(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_BitwiseOr(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_BitwiseOr(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_BitwiseOr(UInt32 lhs, uint4x4 rhs)
public uint4x4 op_ExclusiveOr(uint4x4 lhs, uint4x4 rhs)
public uint4x4 op_ExclusiveOr(uint4x4 lhs, UInt32 rhs)
public uint4x4 op_ExclusiveOr(UInt32 lhs, uint4x4 rhs)
public uint4& get_Item(int index)
public bool Equals(uint4x4 rhs)
public bool Equals(object o)
public int GetHashCode()
public string ToString()
public string ToString(string format, IFormatProvider formatProvider)
}
