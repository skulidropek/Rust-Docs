public Rust.UI.Debug.NetGraph : SingletonComponent`1<NetGraph> {
public CanvasGroup group
private NetGraphRow[] rows
private Func`2<KeyValuePair`2<string, Node>, long> <>f__am$cache0
public bool Enabled
public void Start()
public void set_Enabled(bool value)
public void UpdateFrom(Stats incomingStats)
private long <UpdateFrom>m__0(KeyValuePair`2<string, Node> y)
}
public Rust.UI.Debug.NetGraphItem : MonoBehaviour {
public CanvasGroup group
public LayoutElement element
public Text countTotal
public Text label
public Text bytes
internal void Hide()
internal void UpdateFrom(KeyValuePair`2<string, Node> node)
}
public Rust.UI.Debug.NetGraphRow : MonoBehaviour {
public CanvasGroup group
public Text countTotal
public Text countUnique
public Text label
public Text bytes
public GameObject RowContainer
public NetGraphItem[] Items
public GameObject RowSpacer
private Func`2<KeyValuePair`2<string, Node>, long> <>f__am$cache0
private void Awake()
internal void Hide()
internal void UpdateFrom(KeyValuePair`2<string, Node> node)
private long <UpdateFrom>m__0(KeyValuePair`2<string, Node> y)
}
public Rust.UI.FileDialog : MonoBehaviour {
public string result
private FileDialogMode mode
public bool finished
public Image windowIcon
public Text windowName
public InputField currentPath
public InputField fileName
public Button up
public Button commit
public Button cancel
public GameObject filesScrollRectContent
public GameObject drivesScrollRectContent
public GameObject filesScrollRectElement
public GameObject drivesScrollRectElement
public Sprite folderIcon
public Sprite fileIcon
private string workingPath
private string workingFile
private String[] allowedExtensions
private long maxSize
private bool saveLastPath
public IEnumerator Open(string path, string allowedExtensions, string windowName, Sprite windowIcon, long maxSize, bool saveLastPath)
public IEnumerator Save(string path, string allowedExtensions, string windowName, Sprite windowIcon, bool saveLastPath)
private void Hide()
public void GoUp()
public void GoTo(string newPath)
public void SelectFile(string file)
public void OnCommitClick()
public void OnCancelClick()
public void ClearSelection()
public void OnTypedFilename(string newName)
public void OnTypedEnd(string newName)
public void UpdateFileInfo()
public void OpenDir(string path)
private void UpdateElements()
private void UpdateDrivesList()
private string GetFileSizeText(long size)
private void UpdateFilesList()
private bool <UpdateFilesList>m__0(FileInfo f)
}
public Rust.UI.FileListElement : MonoBehaviour {
public Image icon
public Text elementName
public Text size
public FileDialog instance
public bool isFile
public string data
public void OnClick()
}
public Rust.UI.HttpImage : MonoBehaviour {
public Dictionary`2<string, UnityWebRequest> RequestCache
public Dictionary`2<string, Texture2D> TextureCache
private RawImage image
public string Url
private void Init()
private void OnEnable()
public void Load(string url)
private IEnumerator WaitForLoad(string url)
private IEnumerator StartAndWaitForLoad(string url)
}
public Rust.UI.LoadingBar : MonoBehaviour {
public CanvasGroup Canvas
public Text Label
public Text SubLabel
public Image ProgressImage
public bool Active
public float Progress
public string Text
public string SubText
public void set_Active(bool value)
public void set_Progress(float value)
public void set_Text(string value)
public void set_SubText(string value)
}
public Rust.UI.SuppressMenu : ListComponent`1<SuppressMenu> {
public bool Any
public bool get_Any()
}
internal Rust.UI.Utility.ToggleGameObject : MonoBehaviour {
public GameObject Target
private Toggle component
public void OnEnable()
public void OnDisable()
public void Update()
public void OnToggled(bool value)
}
