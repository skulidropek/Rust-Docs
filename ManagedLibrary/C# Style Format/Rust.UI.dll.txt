[ExecuteInEditMode]
public class CanvasLineRenderer : Graphic {
    public List`1<Vector2> Points;
    public float Thickness;
    public float CurveOffset;
    public int CornerTesselation;
    public float DistanceUvMultiplier;
    public Texture RepeatTexture;
    public Texture mainTexture { get; }
    public virtual Texture get_mainTexture();
}
public class CoverImage : MaskableGraphic {
    [SerializeField]
private Texture _texture;
    public Texture texture { get; public set; }
    public Texture mainTexture { get; }
    public Texture get_texture();
    public void set_texture(Texture value);
    public virtual Texture get_mainTexture();
    protected virtual void OnPopulateMesh(VertexHelper vh);
    private Rect GetCoverRect(Rect& dst, Texture texture);
    protected virtual void OnDidApplyAnimationProperties();
    protected virtual void OnRectTransformDimensionsChange();
}
[RequireComponent("CoverImage", "UnityEngine.Video.VideoPlayer")]
public class CoverVideo : MonoBehaviour {
    public string Url;
    [MinAttribute("0")]
public float FadeIn;
    public Graphic Fallback;
    private CoverImage _cover;
    private VideoPlayer _player;
    private CanvasRenderer _fallbackGraphic;
    public void OnEnable();
    public void OnDisable();
    [AsyncStateMachineAttribute("CoverVideo/<Play>d__8")]
private void Play(string url);
    private void PlayerPrepareCompleted(VideoPlayer source);
}
public class HoverListener : MonoBehaviour {
    public UnityEvent OnEnter;
    public UnityEvent OnExit;
    public sealed virtual void OnPointerEnter(PointerEventData eventData);
    public sealed virtual void OnPointerExit(PointerEventData eventData);
}
public interface IAutoLayout {
    public abstract virtual void DoLayout();
}
public class Rust.UI.Blocker : RustControl {
    public sealed virtual void OnPointerDown(PointerEventData eventData);
    public void AddToCanvasOf(RectTransform rt);
}
public class Rust.UI.ButtonGroupAttribute : Attribute {
}
public class Rust.UI.Debugging.NetGraph : SingletonComponent`1<NetGraph> {
    public CanvasGroup group;
    public GameObject rootPanel;
    private NetGraphRow[] rows;
    unknown bool Enabled {public set; }
    public void Start();
    public void set_Enabled(bool value);
    public void UpdateFrom(Stats incomingStats);
}
public class Rust.UI.Debugging.NetGraphItem : MonoBehaviour {
    public CanvasGroup group;
    public LayoutElement element;
    public Text countTotal;
    public Text label;
    public Text bytes;
    internal void Hide();
    internal void UpdateFrom(KeyValuePair`2<string, Node> node);
}
public class Rust.UI.Debugging.NetGraphRow : MonoBehaviour {
    public CanvasGroup group;
    public Text countTotal;
    public Text countUnique;
    public Text label;
    public Text bytes;
    public GameObject RowContainer;
    public NetGraphItem[] Items;
    public GameObject RowSpacer;
    private void Awake();
    internal void Hide();
    internal void UpdateFrom(KeyValuePair`2<string, Node> node);
}
public class Rust.UI.Dropdown : RustControl {
    public RustIcon Icon;
    public RustText Text;
    public RustIcon OptionIcon;
    public Option[] Options;
    private int CurrentOption;
    public ChangedEvent OnChanged;
    public Option Value { get; }
    public Option get_Value();
    protected virtual void Awake();
    public void SetOptions(Option[] options);
    protected void SetOptionFromUser(Option option);
    public void SetOption(int i);
    public void SetOption(Option option);
    public void SetOptionDefault();
    public void OnLeft();
    public void OnRight();
    protected virtual void ApplyStyle(StyleColorSet s);
    public sealed virtual void OnPointerDown(PointerEventData eventData);
    public void OpenMenu();
}
public class Rust.UI.FileDialog : MonoBehaviour {
    [HideInInspector]
public string result;
    [HideInInspector]
private FileDialogMode mode;
    [HideInInspector]
public bool finished;
    [HeaderAttribute("References")]
public Image windowIcon;
    public Text windowName;
    public InputField currentPath;
    public InputField fileName;
    public Button up;
    public Button commit;
    public Button cancel;
    public GameObject filesScrollRectContent;
    public GameObject drivesScrollRectContent;
    [HeaderAttribute("Lists Prefabs")]
public GameObject filesScrollRectElement;
    public GameObject drivesScrollRectElement;
    [HeaderAttribute("Lists Icons")]
public Sprite folderIcon;
    public Sprite fileIcon;
    private string workingPath;
    private string workingFile;
    private String[] allowedExtensions;
    private long maxSize;
    private bool saveLastPath;
    [IteratorStateMachineAttribute("Rust.UI.FileDialog/<Open>d__22")]
public IEnumerator Open(string path, string allowedExtensions, string windowName, Sprite windowIcon, long maxSize, bool saveLastPath);
    [IteratorStateMachineAttribute("Rust.UI.FileDialog/<Save>d__23")]
public IEnumerator Save(string path, string allowedExtensions, string windowName, Sprite windowIcon, bool saveLastPath);
    [AsyncStateMachineAttribute("Rust.UI.FileDialog/<SaveAsync>d__24")]
public Task`1<string> SaveAsync(string path, string allowedExtensions, string windowName, Sprite windowIcon, bool saveLastPath);
    private void Hide();
    public void GoUp();
    public void GoTo(string newPath);
    public void SelectFile(string file);
    public void OnCommitClick();
    public void OnCancelClick();
    public void ClearSelection();
    public void OnTypedFilename(string newName);
    public void OnTypedEnd(string newName);
    public void UpdateFileInfo();
    public void OpenDir(string path);
    private void UpdateElements();
    private void UpdateDrivesList();
    private string GetFileSizeText(long size);
    private void UpdateFilesList();
    [CompilerGeneratedAttribute]
private bool <UpdateFilesList>b__39_0(FileInfo f);
}
public class Rust.UI.FileListElement : MonoBehaviour {
    public Image icon;
    public Text elementName;
    public Text size;
    public FileDialog instance;
    public bool isFile;
    public string data;
    public void OnClick();
}
public class Rust.UI.HttpImage : MonoBehaviour {
    public static Dictionary`2<string, UnityWebRequest> RequestCache;
    public static Dictionary`2<string, ValueTuple`2<Texture2D, Sprite>> TextureCache;
    public Texture2D LoadingImage;
    public Texture2D MissingImage;
    public string Url;
    public bool AutosizeHeight;
    [TooltipAttribute("Fill the RectTransform with the image without skewing when rendering in a RawImage and AutosizeHeight is disabled.")]
public bool UseCoverFill;
    public bool GenerateMipmaps;
    public float MaxWidth;
    public float MaxHeight;
    private RawImage rawImage;
    private Image image;
    private Sprite loadingSprite;
    private Sprite missingSprite;
    private bool didLoad;
    private static HttpImage();
    private void Init();
    private void Start();
    private void OnDestroy();
    public bool Load(string url);
    public void Load(Sprite sprite);
    [IteratorStateMachineAttribute("Rust.UI.HttpImage/<WaitForLoad>d__20")]
private IEnumerator WaitForLoad(string url);
    private void UpdateImageTexture(ValueTuple`2<Texture2D, Sprite> tex);
    public void SetMissingImage();
    public void SetLoadingImage();
    [IteratorStateMachineAttribute("Rust.UI.HttpImage/<StartAndWaitForLoad>d__24")]
private IEnumerator StartAndWaitForLoad(string url);
    private void AutosizeForTexture(Texture2D texture);
    private void UpdateCoverFill();
    private void SetImageEnabled(bool enabled);
    private void OnRectTransformDimensionsChange();
    private static Sprite CreateSprite(Texture2D texture);
}
public enum Rust.UI.Icons : Enum {
    public int value__;
    public static Icons None;
    public static Icons Abacus;
    public static Icons Acorn;
    public static Icons Ad;
    public static Icons AddressBook;
    public static Icons AddressCard;
    public static Icons Adjust;
    public static Icons AirFreshener;
    public static Icons AlarmClock;
    public static Icons AlarmExclamation;
    public static Icons AlarmPlus;
    public static Icons AlarmSnooze;
    public static Icons Album;
    public static Icons AlbumCollection;
    public static Icons Alicorn;
    public static Icons AlignCenter;
    public static Icons AlignJustify;
    public static Icons AlignLeft;
    public static Icons AlignRight;
    public static Icons AlignSlash;
    public static Icons Allergies;
    public static Icons Ambulance;
    public static Icons AmericanSignLanguageInterpreting;
    public static Icons AmpGuitar;
    public static Icons Analytics;
    public static Icons Anchor;
    public static Icons Angel;
    public static Icons AngleDoubleDown;
    public static Icons AngleDoubleLeft;
    public static Icons AngleDoubleRight;
    public static Icons AngleDoubleUp;
    public static Icons AngleDown;
    public static Icons AngleLeft;
    public static Icons AngleRight;
    public static Icons AngleUp;
    public static Icons Angry;
    public static Icons Ankh;
    public static Icons AppleAlt;
    public static Icons AppleCrate;
    public static Icons Archive;
    public static Icons Archway;
    public static Icons ArrowAltCircleDown;
    public static Icons ArrowAltCircleLeft;
    public static Icons ArrowAltCircleRight;
    public static Icons ArrowAltCircleUp;
    public static Icons ArrowAltDown;
    public static Icons ArrowAltFromBottom;
    public static Icons ArrowAltFromLeft;
    public static Icons ArrowAltFromRight;
    public static Icons ArrowAltFromTop;
    public static Icons ArrowAltLeft;
    public static Icons ArrowAltRight;
    public static Icons ArrowAltSquareDown;
    public static Icons ArrowAltSquareLeft;
    public static Icons ArrowAltSquareRight;
    public static Icons ArrowAltSquareUp;
    public static Icons ArrowAltToBottom;
    public static Icons ArrowAltToLeft;
    public static Icons ArrowAltToRight;
    public static Icons ArrowAltToTop;
    public static Icons ArrowAltUp;
    public static Icons ArrowCircleDown;
    public static Icons ArrowCircleLeft;
    public static Icons ArrowCircleRight;
    public static Icons ArrowCircleUp;
    public static Icons ArrowDown;
    public static Icons ArrowFromBottom;
    public static Icons ArrowFromLeft;
    public static Icons ArrowFromRight;
    public static Icons ArrowFromTop;
    public static Icons ArrowLeft;
    public static Icons ArrowRight;
    public static Icons ArrowSquareDown;
    public static Icons ArrowSquareLeft;
    public static Icons ArrowSquareRight;
    public static Icons ArrowSquareUp;
    public static Icons ArrowToBottom;
    public static Icons ArrowToLeft;
    public static Icons ArrowToRight;
    public static Icons ArrowToTop;
    public static Icons ArrowUp;
    public static Icons Arrows;
    public static Icons ArrowsAlt;
    public static Icons ArrowsAltH;
    public static Icons ArrowsAltV;
    public static Icons ArrowsH;
    public static Icons ArrowsV;
    public static Icons AssistiveListeningSystems;
    public static Icons Asterisk;
    public static Icons At;
    public static Icons Atlas;
    public static Icons Atom;
    public static Icons AtomAlt;
    public static Icons AudioDescription;
    public static Icons Award;
    public static Icons Axe;
    public static Icons AxeBattle;
    public static Icons Baby;
    public static Icons BabyCarriage;
    public static Icons Backpack;
    public static Icons Backspace;
    public static Icons Backward;
    public static Icons Bacon;
    public static Icons Badge;
    public static Icons BadgeCheck;
    public static Icons BadgeDollar;
    public static Icons BadgePercent;
    public static Icons BadgeSheriff;
    public static Icons BadgerHoney;
    public static Icons BagsShopping;
    public static Icons BalanceScale;
    public static Icons BalanceScaleLeft;
    public static Icons BalanceScaleRight;
    public static Icons BallPile;
    public static Icons Ballot;
    public static Icons BallotCheck;
    public static Icons Ban;
    public static Icons BandAid;
    public static Icons Banjo;
    public static Icons Barcode;
    public static Icons BarcodeAlt;
    public static Icons BarcodeRead;
    public static Icons BarcodeScan;
    public static Icons Bars;
    public static Icons Baseball;
    public static Icons BaseballBall;
    public static Icons BasketballBall;
    public static Icons BasketballHoop;
    public static Icons Bat;
    public static Icons Bath;
    public static Icons BatteryBolt;
    public static Icons BatteryEmpty;
    public static Icons BatteryFull;
    public static Icons BatteryHalf;
    public static Icons BatteryQuarter;
    public static Icons BatterySlash;
    public static Icons BatteryThreeQuarters;
    public static Icons Bed;
    public static Icons Beer;
    public static Icons Bell;
    public static Icons BellExclamation;
    public static Icons BellPlus;
    public static Icons BellSchool;
    public static Icons BellSchoolSlash;
    public static Icons BellSlash;
    public static Icons Bells;
    public static Icons Betamax;
    public static Icons BezierCurve;
    public static Icons Bible;
    public static Icons Bicycle;
    public static Icons Biking;
    public static Icons BikingMountain;
    public static Icons Binoculars;
    public static Icons Biohazard;
    public static Icons BirthdayCake;
    public static Icons Blanket;
    public static Icons Blender;
    public static Icons BlenderPhone;
    public static Icons Blind;
    public static Icons Blog;
    public static Icons Bold;
    public static Icons Bolt;
    public static Icons Bomb;
    public static Icons Bone;
    public static Icons BoneBreak;
    public static Icons Bong;
    public static Icons Book;
    public static Icons BookAlt;
    public static Icons BookDead;
    public static Icons BookHeart;
    public static Icons BookMedical;
    public static Icons BookOpen;
    public static Icons BookReader;
    public static Icons BookSpells;
    public static Icons BookUser;
    public static Icons Bookmark;
    public static Icons Books;
    public static Icons BooksMedical;
    public static Icons Boombox;
    public static Icons Boot;
    public static Icons BoothCurtain;
    public static Icons BorderAll;
    public static Icons BorderBottom;
    public static Icons BorderCenterH;
    public static Icons BorderCenterV;
    public static Icons BorderInner;
    public static Icons BorderLeft;
    public static Icons BorderNone;
    public static Icons BorderOuter;
    public static Icons BorderRight;
    public static Icons BorderStyle;
    public static Icons BorderStyleAlt;
    public static Icons BorderTop;
    public static Icons BowArrow;
    public static Icons BowlingBall;
    public static Icons BowlingPins;
    public static Icons Box;
    public static Icons BoxAlt;
    public static Icons BoxBallot;
    public static Icons BoxCheck;
    public static Icons BoxFragile;
    public static Icons BoxFull;
    public static Icons BoxHeart;
    public static Icons BoxOpen;
    public static Icons BoxUp;
    public static Icons BoxUsd;
    public static Icons Boxes;
    public static Icons BoxesAlt;
    public static Icons BoxingGlove;
    public static Icons Brackets;
    public static Icons BracketsCurly;
    public static Icons Braille;
    public static Icons Brain;
    public static Icons BreadLoaf;
    public static Icons BreadSlice;
    public static Icons Briefcase;
    public static Icons BriefcaseMedical;
    public static Icons BringForward;
    public static Icons BringFront;
    public static Icons BroadcastTower;
    public static Icons Broom;
    public static Icons Browser;
    public static Icons Brush;
    public static Icons Bug;
    public static Icons Building;
    public static Icons Bullhorn;
    public static Icons Bullseye;
    public static Icons BullseyeArrow;
    public static Icons BullseyePointer;
    public static Icons BurgerSoda;
    public static Icons Burn;
    public static Icons Burrito;
    public static Icons Bus;
    public static Icons BusAlt;
    public static Icons BusSchool;
    public static Icons BusinessTime;
    public static Icons CabinetFiling;
    public static Icons Cactus;
    public static Icons Calculator;
    public static Icons CalculatorAlt;
    public static Icons Calendar;
    public static Icons CalendarAlt;
    public static Icons CalendarCheck;
    public static Icons CalendarDay;
    public static Icons CalendarEdit;
    public static Icons CalendarExclamation;
    public static Icons CalendarMinus;
    public static Icons CalendarPlus;
    public static Icons CalendarStar;
    public static Icons CalendarTimes;
    public static Icons CalendarWeek;
    public static Icons Camcorder;
    public static Icons Camera;
    public static Icons CameraAlt;
    public static Icons CameraMovie;
    public static Icons CameraPolaroid;
    public static Icons CameraRetro;
    public static Icons Campfire;
    public static Icons Campground;
    public static Icons CandleHolder;
    public static Icons CandyCane;
    public static Icons CandyCorn;
    public static Icons Cannabis;
    public static Icons Capsules;
    public static Icons Car;
    public static Icons CarAlt;
    public static Icons CarBattery;
    public static Icons CarBuilding;
    public static Icons CarBump;
    public static Icons CarBus;
    public static Icons CarCrash;
    public static Icons CarGarage;
    public static Icons CarMechanic;
    public static Icons CarSide;
    public static Icons CarTilt;
    public static Icons CarWash;
    public static Icons CaretCircleDown;
    public static Icons CaretCircleLeft;
    public static Icons CaretCircleRight;
    public static Icons CaretCircleUp;
    public static Icons CaretDown;
    public static Icons CaretLeft;
    public static Icons CaretRight;
    public static Icons CaretSquareDown;
    public static Icons CaretSquareLeft;
    public static Icons CaretSquareRight;
    public static Icons CaretSquareUp;
    public static Icons CaretUp;
    public static Icons Carrot;
    public static Icons Cars;
    public static Icons CartArrowDown;
    public static Icons CartPlus;
    public static Icons CashRegister;
    public static Icons CassetteTape;
    public static Icons Cat;
    public static Icons Cauldron;
    public static Icons Cctv;
    public static Icons Certificate;
    public static Icons Chair;
    public static Icons ChairOffice;
    public static Icons Chalkboard;
    public static Icons ChalkboardTeacher;
    public static Icons ChargingStation;
    public static Icons ChartArea;
    public static Icons ChartBar;
    public static Icons ChartLine;
    public static Icons ChartLineDown;
    public static Icons ChartNetwork;
    public static Icons ChartPie;
    public static Icons ChartPieAlt;
    public static Icons ChartScatter;
    public static Icons Check;
    public static Icons CheckCircle;
    public static Icons CheckDouble;
    public static Icons CheckSquare;
    public static Icons Cheese;
    public static Icons CheeseSwiss;
    public static Icons Cheeseburger;
    public static Icons Chess;
    public static Icons ChessBishop;
    public static Icons ChessBishopAlt;
    public static Icons ChessBoard;
    public static Icons ChessClock;
    public static Icons ChessClockAlt;
    public static Icons ChessKing;
    public static Icons ChessKingAlt;
    public static Icons ChessKnight;
    public static Icons ChessKnightAlt;
    public static Icons ChessPawn;
    public static Icons ChessPawnAlt;
    public static Icons ChessQueen;
    public static Icons ChessQueenAlt;
    public static Icons ChessRook;
    public static Icons ChessRookAlt;
    public static Icons ChevronCircleDown;
    public static Icons ChevronCircleLeft;
    public static Icons ChevronCircleRight;
    public static Icons ChevronCircleUp;
    public static Icons ChevronDoubleDown;
    public static Icons ChevronDoubleLeft;
    public static Icons ChevronDoubleRight;
    public static Icons ChevronDoubleUp;
    public static Icons ChevronDown;
    public static Icons ChevronLeft;
    public static Icons ChevronRight;
    public static Icons ChevronSquareDown;
    public static Icons ChevronSquareLeft;
    public static Icons ChevronSquareRight;
    public static Icons ChevronSquareUp;
    public static Icons ChevronUp;
    public static Icons Child;
    public static Icons Chimney;
    public static Icons Church;
    public static Icons Circle;
    public static Icons CircleNotch;
    public static Icons City;
    public static Icons Clarinet;
    public static Icons ClawMarks;
    public static Icons ClinicMedical;
    public static Icons Clipboard;
    public static Icons ClipboardCheck;
    public static Icons ClipboardList;
    public static Icons ClipboardListCheck;
    public static Icons ClipboardPrescription;
    public static Icons ClipboardUser;
    public static Icons Clock;
    public static Icons Clone;
    public static Icons ClosedCaptioning;
    public static Icons Cloud;
    public static Icons CloudDownload;
    public static Icons CloudDownloadAlt;
    public static Icons CloudDrizzle;
    public static Icons CloudHail;
    public static Icons CloudHailMixed;
    public static Icons CloudMeatball;
    public static Icons CloudMoon;
    public static Icons CloudMoonRain;
    public static Icons CloudMusic;
    public static Icons CloudRain;
    public static Icons CloudRainbow;
    public static Icons CloudShowers;
    public static Icons CloudShowersHeavy;
    public static Icons CloudSleet;
    public static Icons CloudSnow;
    public static Icons CloudSun;
    public static Icons CloudSunRain;
    public static Icons CloudUpload;
    public static Icons CloudUploadAlt;
    public static Icons Clouds;
    public static Icons CloudsMoon;
    public static Icons CloudsSun;
    public static Icons Club;
    public static Icons Cocktail;
    public static Icons Code;
    public static Icons CodeBranch;
    public static Icons CodeCommit;
    public static Icons CodeMerge;
    public static Icons Coffee;
    public static Icons CoffeeTogo;
    public static Icons Coffin;
    public static Icons Cog;
    public static Icons Cogs;
    public static Icons Coin;
    public static Icons Coins;
    public static Icons Columns;
    public static Icons Comment;
    public static Icons CommentAlt;
    public static Icons CommentAltCheck;
    public static Icons CommentAltDollar;
    public static Icons CommentAltDots;
    public static Icons CommentAltEdit;
    public static Icons CommentAltExclamation;
    public static Icons CommentAltLines;
    public static Icons CommentAltMedical;
    public static Icons CommentAltMinus;
    public static Icons CommentAltMusic;
    public static Icons CommentAltPlus;
    public static Icons CommentAltSlash;
    public static Icons CommentAltSmile;
    public static Icons CommentAltTimes;
    public static Icons CommentCheck;
    public static Icons CommentDollar;
    public static Icons CommentDots;
    public static Icons CommentEdit;
    public static Icons CommentExclamation;
    public static Icons CommentLines;
    public static Icons CommentMedical;
    public static Icons CommentMinus;
    public static Icons CommentMusic;
    public static Icons CommentPlus;
    public static Icons CommentSlash;
    public static Icons CommentSmile;
    public static Icons CommentTimes;
    public static Icons Comments;
    public static Icons CommentsAlt;
    public static Icons CommentsAltDollar;
    public static Icons CommentsDollar;
    public static Icons CompactDisc;
    public static Icons Compass;
    public static Icons CompassSlash;
    public static Icons Compress;
    public static Icons CompressAlt;
    public static Icons CompressArrowsAlt;
    public static Icons CompressWide;
    public static Icons ComputerClassic;
    public static Icons ComputerSpeaker;
    public static Icons ConciergeBell;
    public static Icons Construction;
    public static Icons ContainerStorage;
    public static Icons ConveyorBelt;
    public static Icons ConveyorBeltAlt;
    public static Icons Cookie;
    public static Icons CookieBite;
    public static Icons Copy;
    public static Icons Copyright;
    public static Icons Corn;
    public static Icons Couch;
    public static Icons Cow;
    public static Icons Cowbell;
    public static Icons CowbellMore;
    public static Icons CreditCard;
    public static Icons CreditCardBlank;
    public static Icons CreditCardFront;
    public static Icons Cricket;
    public static Icons Croissant;
    public static Icons Crop;
    public static Icons CropAlt;
    public static Icons Cross;
    public static Icons Crosshairs;
    public static Icons Crow;
    public static Icons Crown;
    public static Icons Crutch;
    public static Icons Crutches;
    public static Icons Cube;
    public static Icons Cubes;
    public static Icons Curling;
    public static Icons Cut;
    public static Icons Dagger;
    public static Icons Database;
    public static Icons Deaf;
    public static Icons Debug;
    public static Icons Deer;
    public static Icons DeerRudolph;
    public static Icons Democrat;
    public static Icons Desktop;
    public static Icons DesktopAlt;
    public static Icons Dewpoint;
    public static Icons Dharmachakra;
    public static Icons Diagnoses;
    public static Icons Diamond;
    public static Icons Dice;
    public static Icons DiceD10;
    public static Icons DiceD12;
    public static Icons DiceD20;
    public static Icons DiceD4;
    public static Icons DiceD6;
    public static Icons DiceD8;
    public static Icons DiceFive;
    public static Icons DiceFour;
    public static Icons DiceOne;
    public static Icons DiceSix;
    public static Icons DiceThree;
    public static Icons DiceTwo;
    public static Icons Digging;
    public static Icons DigitalTachograph;
    public static Icons Diploma;
    public static Icons Directions;
    public static Icons DiscDrive;
    public static Icons Disease;
    public static Icons Divide;
    public static Icons Dizzy;
    public static Icons Dna;
    public static Icons DoNotEnter;
    public static Icons Dog;
    public static Icons DogLeashed;
    public static Icons DollarSign;
    public static Icons Dolly;
    public static Icons DollyEmpty;
    public static Icons DollyFlatbed;
    public static Icons DollyFlatbedAlt;
    public static Icons DollyFlatbedEmpty;
    public static Icons Donate;
    public static Icons DoorClosed;
    public static Icons DoorOpen;
    public static Icons DotCircle;
    public static Icons Dove;
    public static Icons Download;
    public static Icons DraftingCompass;
    public static Icons Dragon;
    public static Icons DrawCircle;
    public static Icons DrawPolygon;
    public static Icons DrawSquare;
    public static Icons Dreidel;
    public static Icons Drone;
    public static Icons DroneAlt;
    public static Icons Drum;
    public static Icons DrumSteelpan;
    public static Icons Drumstick;
    public static Icons DrumstickBite;
    public static Icons Dryer;
    public static Icons DryerAlt;
    public static Icons Duck;
    public static Icons Dumbbell;
    public static Icons Dumpster;
    public static Icons DumpsterFire;
    public static Icons Dungeon;
    public static Icons Ear;
    public static Icons EarMuffs;
    public static Icons Eclipse;
    public static Icons EclipseAlt;
    public static Icons Edit;
    public static Icons Egg;
    public static Icons EggFried;
    public static Icons Eject;
    public static Icons Elephant;
    public static Icons EllipsisH;
    public static Icons EllipsisHAlt;
    public static Icons EllipsisV;
    public static Icons EllipsisVAlt;
    public static Icons EmptySet;
    public static Icons EngineWarning;
    public static Icons Envelope;
    public static Icons EnvelopeOpen;
    public static Icons EnvelopeOpenDollar;
    public static Icons EnvelopeOpenText;
    public static Icons EnvelopeSquare;
    public static Icons Equals;
    public static Icons Eraser;
    public static Icons Ethernet;
    public static Icons EuroSign;
    public static Icons Exchange;
    public static Icons ExchangeAlt;
    public static Icons Exclamation;
    public static Icons ExclamationCircle;
    public static Icons ExclamationSquare;
    public static Icons ExclamationTriangle;
    public static Icons Expand;
    public static Icons ExpandAlt;
    public static Icons ExpandArrows;
    public static Icons ExpandArrowsAlt;
    public static Icons ExpandWide;
    public static Icons ExternalLink;
    public static Icons ExternalLinkAlt;
    public static Icons ExternalLinkSquare;
    public static Icons ExternalLinkSquareAlt;
    public static Icons Eye;
    public static Icons EyeDropper;
    public static Icons EyeEvil;
    public static Icons EyeSlash;
    public static Icons Fan;
    public static Icons Farm;
    public static Icons FastBackward;
    public static Icons FastForward;
    public static Icons Fax;
    public static Icons Feather;
    public static Icons FeatherAlt;
    public static Icons Female;
    public static Icons FieldHockey;
    public static Icons FighterJet;
    public static Icons File;
    public static Icons FileAlt;
    public static Icons FileArchive;
    public static Icons FileAudio;
    public static Icons FileCertificate;
    public static Icons FileChartLine;
    public static Icons FileChartPie;
    public static Icons FileCheck;
    public static Icons FileCode;
    public static Icons FileContract;
    public static Icons FileCsv;
    public static Icons FileDownload;
    public static Icons FileEdit;
    public static Icons FileExcel;
    public static Icons FileExclamation;
    public static Icons FileExport;
    public static Icons FileImage;
    public static Icons FileImport;
    public static Icons FileInvoice;
    public static Icons FileInvoiceDollar;
    public static Icons FileMedical;
    public static Icons FileMedicalAlt;
    public static Icons FileMinus;
    public static Icons FileMusic;
    public static Icons FilePdf;
    public static Icons FilePlus;
    public static Icons FilePowerpoint;
    public static Icons FilePrescription;
    public static Icons FileSearch;
    public static Icons FileSignature;
    public static Icons FileSpreadsheet;
    public static Icons FileTimes;
    public static Icons FileUpload;
    public static Icons FileUser;
    public static Icons FileVideo;
    public static Icons FileWord;
    public static Icons FilesMedical;
    public static Icons Fill;
    public static Icons FillDrip;
    public static Icons Film;
    public static Icons FilmAlt;
    public static Icons FilmCanister;
    public static Icons Filter;
    public static Icons Fingerprint;
    public static Icons Fire;
    public static Icons FireAlt;
    public static Icons FireExtinguisher;
    public static Icons FireSmoke;
    public static Icons Fireplace;
    public static Icons FirstAid;
    public static Icons Fish;
    public static Icons FishCooked;
    public static Icons FistRaised;
    public static Icons Flag;
    public static Icons FlagAlt;
    public static Icons FlagCheckered;
    public static Icons FlagUsa;
    public static Icons Flame;
    public static Icons Flashlight;
    public static Icons Flask;
    public static Icons FlaskPoison;
    public static Icons FlaskPotion;
    public static Icons Flower;
    public static Icons FlowerDaffodil;
    public static Icons FlowerTulip;
    public static Icons Flushed;
    public static Icons Flute;
    public static Icons FluxCapacitor;
    public static Icons Fog;
    public static Icons Folder;
    public static Icons FolderMinus;
    public static Icons FolderOpen;
    public static Icons FolderPlus;
    public static Icons FolderTimes;
    public static Icons FolderTree;
    public static Icons Folders;
    public static Icons Font;
    public static Icons FontAwesomeLogoFull;
    public static Icons FontCase;
    public static Icons FootballBall;
    public static Icons FootballHelmet;
    public static Icons Forklift;
    public static Icons Forward;
    public static Icons Fragile;
    public static Icons FrenchFries;
    public static Icons Frog;
    public static Icons FrostyHead;
    public static Icons Frown;
    public static Icons FrownOpen;
    public static Icons Function;
    public static Icons FunnelDollar;
    public static Icons Futbol;
    public static Icons GameBoard;
    public static Icons GameBoardAlt;
    public static Icons GameConsoleHandheld;
    public static Icons Gamepad;
    public static Icons GamepadAlt;
    public static Icons GasPump;
    public static Icons GasPumpSlash;
    public static Icons Gavel;
    public static Icons Gem;
    public static Icons Genderless;
    public static Icons Ghost;
    public static Icons Gift;
    public static Icons GiftCard;
    public static Icons Gifts;
    public static Icons GingerbreadMan;
    public static Icons Glass;
    public static Icons GlassChampagne;
    public static Icons GlassCheers;
    public static Icons GlassCitrus;
    public static Icons GlassMartini;
    public static Icons GlassMartiniAlt;
    public static Icons GlassWhiskey;
    public static Icons GlassWhiskeyRocks;
    public static Icons Glasses;
    public static Icons GlassesAlt;
    public static Icons Globe;
    public static Icons GlobeAfrica;
    public static Icons GlobeAmericas;
    public static Icons GlobeAsia;
    public static Icons GlobeEurope;
    public static Icons GlobeSnow;
    public static Icons GlobeStand;
    public static Icons GolfBall;
    public static Icons GolfClub;
    public static Icons Gopuram;
    public static Icons GraduationCap;
    public static Icons Gramophone;
    public static Icons GreaterThan;
    public static Icons GreaterThanEqual;
    public static Icons Grimace;
    public static Icons Grin;
    public static Icons GrinAlt;
    public static Icons GrinBeam;
    public static Icons GrinBeamSweat;
    public static Icons GrinHearts;
    public static Icons GrinSquint;
    public static Icons GrinSquintTears;
    public static Icons GrinStars;
    public static Icons GrinTears;
    public static Icons GrinTongue;
    public static Icons GrinTongueSquint;
    public static Icons GrinTongueWink;
    public static Icons GrinWink;
    public static Icons GripHorizontal;
    public static Icons GripLines;
    public static Icons GripLinesVertical;
    public static Icons GripVertical;
    public static Icons Guitar;
    public static Icons GuitarElectric;
    public static Icons Guitars;
    public static Icons HSquare;
    public static Icons H1;
    public static Icons H2;
    public static Icons H3;
    public static Icons H4;
    public static Icons Hamburger;
    public static Icons Hammer;
    public static Icons HammerWar;
    public static Icons Hamsa;
    public static Icons HandHeart;
    public static Icons HandHolding;
    public static Icons HandHoldingBox;
    public static Icons HandHoldingHeart;
    public static Icons HandHoldingMagic;
    public static Icons HandHoldingSeedling;
    public static Icons HandHoldingUsd;
    public static Icons HandHoldingWater;
    public static Icons HandLizard;
    public static Icons HandMiddleFinger;
    public static Icons HandPaper;
    public static Icons HandPeace;
    public static Icons HandPointDown;
    public static Icons HandPointLeft;
    public static Icons HandPointRight;
    public static Icons HandPointUp;
    public static Icons HandPointer;
    public static Icons HandReceiving;
    public static Icons HandRock;
    public static Icons HandScissors;
    public static Icons HandSpock;
    public static Icons Hands;
    public static Icons HandsHeart;
    public static Icons HandsHelping;
    public static Icons HandsUsd;
    public static Icons Handshake;
    public static Icons HandshakeAlt;
    public static Icons Hanukiah;
    public static Icons HardHat;
    public static Icons Hashtag;
    public static Icons HatChef;
    public static Icons HatCowboy;
    public static Icons HatCowboySide;
    public static Icons HatSanta;
    public static Icons HatWinter;
    public static Icons HatWitch;
    public static Icons HatWizard;
    public static Icons Haykal;
    public static Icons Hdd;
    public static Icons HeadSide;
    public static Icons HeadSideBrain;
    public static Icons HeadSideHeadphones;
    public static Icons HeadSideMedical;
    public static Icons HeadVr;
    public static Icons Heading;
    public static Icons Headphones;
    public static Icons HeadphonesAlt;
    public static Icons Headset;
    public static Icons Heart;
    public static Icons HeartBroken;
    public static Icons HeartCircle;
    public static Icons HeartRate;
    public static Icons HeartSquare;
    public static Icons Heartbeat;
    public static Icons Helicopter;
    public static Icons HelmetBattle;
    public static Icons Hexagon;
    public static Icons Highlighter;
    public static Icons Hiking;
    public static Icons Hippo;
    public static Icons History;
    public static Icons HockeyMask;
    public static Icons HockeyPuck;
    public static Icons HockeySticks;
    public static Icons HollyBerry;
    public static Icons Home;
    public static Icons HomeAlt;
    public static Icons HomeHeart;
    public static Icons HomeLg;
    public static Icons HomeLgAlt;
    public static Icons HoodCloak;
    public static Icons HorizontalRule;
    public static Icons Horse;
    public static Icons HorseHead;
    public static Icons HorseSaddle;
    public static Icons Hospital;
    public static Icons HospitalAlt;
    public static Icons HospitalSymbol;
    public static Icons HospitalUser;
    public static Icons Hospitals;
    public static Icons HotTub;
    public static Icons Hotdog;
    public static Icons Hotel;
    public static Icons Hourglass;
    public static Icons HourglassEnd;
    public static Icons HourglassHalf;
    public static Icons HourglassStart;
    public static Icons HouseDamage;
    public static Icons HouseFlood;
    public static Icons Hryvnia;
    public static Icons Humidity;
    public static Icons Hurricane;
    public static Icons ICursor;
    public static Icons IceCream;
    public static Icons IceSkate;
    public static Icons Icicles;
    public static Icons Icons;
    public static Icons IconsAlt;
    public static Icons IdBadge;
    public static Icons IdCard;
    public static Icons IdCardAlt;
    public static Icons Igloo;
    public static Icons Image;
    public static Icons ImagePolaroid;
    public static Icons Images;
    public static Icons Inbox;
    public static Icons InboxIn;
    public static Icons InboxOut;
    public static Icons Indent;
    public static Icons Industry;
    public static Icons IndustryAlt;
    public static Icons Infinity;
    public static Icons Info;
    public static Icons InfoCircle;
    public static Icons InfoSquare;
    public static Icons Inhaler;
    public static Icons Integral;
    public static Icons Intersection;
    public static Icons Inventory;
    public static Icons IslandTropical;
    public static Icons Italic;
    public static Icons JackOLantern;
    public static Icons Jedi;
    public static Icons Joint;
    public static Icons JournalWhills;
    public static Icons Joystick;
    public static Icons Jug;
    public static Icons Kaaba;
    public static Icons Kazoo;
    public static Icons Kerning;
    public static Icons Key;
    public static Icons KeySkeleton;
    public static Icons Keyboard;
    public static Icons Keynote;
    public static Icons Khanda;
    public static Icons Kidneys;
    public static Icons Kiss;
    public static Icons KissBeam;
    public static Icons KissWinkHeart;
    public static Icons Kite;
    public static Icons KiwiBird;
    public static Icons KnifeKitchen;
    public static Icons Lambda;
    public static Icons Lamp;
    public static Icons Landmark;
    public static Icons LandmarkAlt;
    public static Icons Language;
    public static Icons Laptop;
    public static Icons LaptopCode;
    public static Icons LaptopMedical;
    public static Icons Lasso;
    public static Icons Laugh;
    public static Icons LaughBeam;
    public static Icons LaughSquint;
    public static Icons LaughWink;
    public static Icons LayerGroup;
    public static Icons LayerMinus;
    public static Icons LayerPlus;
    public static Icons Leaf;
    public static Icons LeafHeart;
    public static Icons LeafMaple;
    public static Icons LeafOak;
    public static Icons Lemon;
    public static Icons LessThan;
    public static Icons LessThanEqual;
    public static Icons LevelDown;
    public static Icons LevelDownAlt;
    public static Icons LevelUp;
    public static Icons LevelUpAlt;
    public static Icons LifeRing;
    public static Icons Lightbulb;
    public static Icons LightbulbDollar;
    public static Icons LightbulbExclamation;
    public static Icons LightbulbOn;
    public static Icons LightbulbSlash;
    public static Icons LightsHoliday;
    public static Icons LineColumns;
    public static Icons LineHeight;
    public static Icons Link;
    public static Icons Lips;
    public static Icons LiraSign;
    public static Icons List;
    public static Icons ListAlt;
    public static Icons ListMusic;
    public static Icons ListOl;
    public static Icons ListUl;
    public static Icons Location;
    public static Icons LocationArrow;
    public static Icons LocationCircle;
    public static Icons LocationSlash;
    public static Icons Lock;
    public static Icons LockAlt;
    public static Icons LockOpen;
    public static Icons LockOpenAlt;
    public static Icons LongArrowAltDown;
    public static Icons LongArrowAltLeft;
    public static Icons LongArrowAltRight;
    public static Icons LongArrowAltUp;
    public static Icons LongArrowDown;
    public static Icons LongArrowLeft;
    public static Icons LongArrowRight;
    public static Icons LongArrowUp;
    public static Icons Loveseat;
    public static Icons LowVision;
    public static Icons Luchador;
    public static Icons LuggageCart;
    public static Icons Lungs;
    public static Icons Mace;
    public static Icons Magic;
    public static Icons Magnet;
    public static Icons MailBulk;
    public static Icons Mailbox;
    public static Icons Male;
    public static Icons Mandolin;
    public static Icons Map;
    public static Icons MapMarked;
    public static Icons MapMarkedAlt;
    public static Icons MapMarker;
    public static Icons MapMarkerAlt;
    public static Icons MapMarkerAltSlash;
    public static Icons MapMarkerCheck;
    public static Icons MapMarkerEdit;
    public static Icons MapMarkerExclamation;
    public static Icons MapMarkerMinus;
    public static Icons MapMarkerPlus;
    public static Icons MapMarkerQuestion;
    public static Icons MapMarkerSlash;
    public static Icons MapMarkerSmile;
    public static Icons MapMarkerTimes;
    public static Icons MapPin;
    public static Icons MapSigns;
    public static Icons Marker;
    public static Icons Mars;
    public static Icons MarsDouble;
    public static Icons MarsStroke;
    public static Icons MarsStrokeH;
    public static Icons MarsStrokeV;
    public static Icons Mask;
    public static Icons Meat;
    public static Icons Medal;
    public static Icons Medkit;
    public static Icons Megaphone;
    public static Icons Meh;
    public static Icons MehBlank;
    public static Icons MehRollingEyes;
    public static Icons Memory;
    public static Icons Menorah;
    public static Icons Mercury;
    public static Icons Meteor;
    public static Icons Microchip;
    public static Icons Microphone;
    public static Icons MicrophoneAlt;
    public static Icons MicrophoneAltSlash;
    public static Icons MicrophoneSlash;
    public static Icons MicrophoneStand;
    public static Icons Microscope;
    public static Icons MindShare;
    public static Icons Minus;
    public static Icons MinusCircle;
    public static Icons MinusHexagon;
    public static Icons MinusOctagon;
    public static Icons MinusSquare;
    public static Icons Mistletoe;
    public static Icons Mitten;
    public static Icons Mobile;
    public static Icons MobileAlt;
    public static Icons MobileAndroid;
    public static Icons MobileAndroidAlt;
    public static Icons MoneyBill;
    public static Icons MoneyBillAlt;
    public static Icons MoneyBillWave;
    public static Icons MoneyBillWaveAlt;
    public static Icons MoneyCheck;
    public static Icons MoneyCheckAlt;
    public static Icons MoneyCheckEdit;
    public static Icons MoneyCheckEditAlt;
    public static Icons MonitorHeartRate;
    public static Icons Monkey;
    public static Icons Monument;
    public static Icons Moon;
    public static Icons MoonCloud;
    public static Icons MoonStars;
    public static Icons MortarPestle;
    public static Icons Mosque;
    public static Icons Motorcycle;
    public static Icons Mountain;
    public static Icons Mountains;
    public static Icons Mouse;
    public static Icons MouseAlt;
    public static Icons MousePointer;
    public static Icons Mp3Player;
    public static Icons Mug;
    public static Icons MugHot;
    public static Icons MugMarshmallows;
    public static Icons MugTea;
    public static Icons Music;
    public static Icons MusicAlt;
    public static Icons MusicAltSlash;
    public static Icons MusicSlash;
    public static Icons Narwhal;
    public static Icons NetworkWired;
    public static Icons Neuter;
    public static Icons Newspaper;
    public static Icons NotEqual;
    public static Icons NotesMedical;
    public static Icons ObjectGroup;
    public static Icons ObjectUngroup;
    public static Icons Octagon;
    public static Icons OilCan;
    public static Icons OilTemp;
    public static Icons Om;
    public static Icons Omega;
    public static Icons Ornament;
    public static Icons Otter;
    public static Icons Outdent;
    public static Icons Overline;
    public static Icons PageBreak;
    public static Icons Pager;
    public static Icons PaintBrush;
    public static Icons PaintBrushAlt;
    public static Icons PaintRoller;
    public static Icons Palette;
    public static Icons Pallet;
    public static Icons PalletAlt;
    public static Icons PaperPlane;
    public static Icons Paperclip;
    public static Icons ParachuteBox;
    public static Icons Paragraph;
    public static Icons ParagraphRtl;
    public static Icons Parking;
    public static Icons ParkingCircle;
    public static Icons ParkingCircleSlash;
    public static Icons ParkingSlash;
    public static Icons Passport;
    public static Icons Pastafarianism;
    public static Icons Paste;
    public static Icons Pause;
    public static Icons PauseCircle;
    public static Icons Paw;
    public static Icons PawAlt;
    public static Icons PawClaws;
    public static Icons Peace;
    public static Icons Pegasus;
    public static Icons Pen;
    public static Icons PenAlt;
    public static Icons PenFancy;
    public static Icons PenNib;
    public static Icons PenSquare;
    public static Icons Pencil;
    public static Icons PencilAlt;
    public static Icons PencilPaintbrush;
    public static Icons PencilRuler;
    public static Icons Pennant;
    public static Icons PeopleCarry;
    public static Icons PepperHot;
    public static Icons Percent;
    public static Icons Percentage;
    public static Icons PersonBooth;
    public static Icons PersonCarry;
    public static Icons PersonDolly;
    public static Icons PersonDollyEmpty;
    public static Icons PersonSign;
    public static Icons Phone;
    public static Icons PhoneAlt;
    public static Icons PhoneLaptop;
    public static Icons PhoneOffice;
    public static Icons PhonePlus;
    public static Icons PhoneRotary;
    public static Icons PhoneSlash;
    public static Icons PhoneSquare;
    public static Icons PhoneSquareAlt;
    public static Icons PhoneVolume;
    public static Icons PhotoVideo;
    public static Icons Pi;
    public static Icons Piano;
    public static Icons PianoKeyboard;
    public static Icons Pie;
    public static Icons Pig;
    public static Icons PiggyBank;
    public static Icons Pills;
    public static Icons Pizza;
    public static Icons PizzaSlice;
    public static Icons PlaceOfWorship;
    public static Icons Plane;
    public static Icons PlaneAlt;
    public static Icons PlaneArrival;
    public static Icons PlaneDeparture;
    public static Icons Play;
    public static Icons PlayCircle;
    public static Icons Plug;
    public static Icons Plus;
    public static Icons PlusCircle;
    public static Icons PlusHexagon;
    public static Icons PlusOctagon;
    public static Icons PlusSquare;
    public static Icons Podcast;
    public static Icons Podium;
    public static Icons PodiumStar;
    public static Icons Poll;
    public static Icons PollH;
    public static Icons PollPeople;
    public static Icons Poo;
    public static Icons PooStorm;
    public static Icons Poop;
    public static Icons Popcorn;
    public static Icons Portrait;
    public static Icons PoundSign;
    public static Icons PowerOff;
    public static Icons Pray;
    public static Icons PrayingHands;
    public static Icons Prescription;
    public static Icons PrescriptionBottle;
    public static Icons PrescriptionBottleAlt;
    public static Icons Presentation;
    public static Icons Print;
    public static Icons PrintSearch;
    public static Icons PrintSlash;
    public static Icons Procedures;
    public static Icons ProjectDiagram;
    public static Icons Projector;
    public static Icons Pumpkin;
    public static Icons PuzzlePiece;
    public static Icons Qrcode;
    public static Icons Question;
    public static Icons QuestionCircle;
    public static Icons QuestionSquare;
    public static Icons Quidditch;
    public static Icons QuoteLeft;
    public static Icons QuoteRight;
    public static Icons Quran;
    public static Icons Rabbit;
    public static Icons RabbitFast;
    public static Icons Racquet;
    public static Icons Radiation;
    public static Icons RadiationAlt;
    public static Icons Radio;
    public static Icons RadioAlt;
    public static Icons Rainbow;
    public static Icons Raindrops;
    public static Icons Ram;
    public static Icons RampLoading;
    public static Icons Random;
    public static Icons Receipt;
    public static Icons RecordVinyl;
    public static Icons RectangleLandscape;
    public static Icons RectanglePortrait;
    public static Icons RectangleWide;
    public static Icons Recycle;
    public static Icons Redo;
    public static Icons RedoAlt;
    public static Icons Registered;
    public static Icons RemoveFormat;
    public static Icons Repeat;
    public static Icons Repeat1;
    public static Icons Repeat1Alt;
    public static Icons RepeatAlt;
    public static Icons Reply;
    public static Icons ReplyAll;
    public static Icons Republican;
    public static Icons Restroom;
    public static Icons Retweet;
    public static Icons RetweetAlt;
    public static Icons Ribbon;
    public static Icons Ring;
    public static Icons RingsWedding;
    public static Icons Road;
    public static Icons Robot;
    public static Icons Rocket;
    public static Icons Route;
    public static Icons RouteHighway;
    public static Icons RouteInterstate;
    public static Icons Router;
    public static Icons Rss;
    public static Icons RssSquare;
    public static Icons RubleSign;
    public static Icons Ruler;
    public static Icons RulerCombined;
    public static Icons RulerHorizontal;
    public static Icons RulerTriangle;
    public static Icons RulerVertical;
    public static Icons Running;
    public static Icons RupeeSign;
    public static Icons Rv;
    public static Icons Sack;
    public static Icons SackDollar;
    public static Icons SadCry;
    public static Icons SadTear;
    public static Icons Salad;
    public static Icons Sandwich;
    public static Icons Satellite;
    public static Icons SatelliteDish;
    public static Icons Sausage;
    public static Icons Save;
    public static Icons SaxHot;
    public static Icons Saxophone;
    public static Icons Scalpel;
    public static Icons ScalpelPath;
    public static Icons Scanner;
    public static Icons ScannerImage;
    public static Icons ScannerKeyboard;
    public static Icons ScannerTouchscreen;
    public static Icons Scarecrow;
    public static Icons Scarf;
    public static Icons School;
    public static Icons Screwdriver;
    public static Icons Scroll;
    public static Icons ScrollOld;
    public static Icons Scrubber;
    public static Icons Scythe;
    public static Icons SdCard;
    public static Icons Search;
    public static Icons SearchDollar;
    public static Icons SearchLocation;
    public static Icons SearchMinus;
    public static Icons SearchPlus;
    public static Icons Seedling;
    public static Icons SendBack;
    public static Icons SendBackward;
    public static Icons Server;
    public static Icons Shapes;
    public static Icons Share;
    public static Icons ShareAll;
    public static Icons ShareAlt;
    public static Icons ShareAltSquare;
    public static Icons ShareSquare;
    public static Icons Sheep;
    public static Icons ShekelSign;
    public static Icons Shield;
    public static Icons ShieldAlt;
    public static Icons ShieldCheck;
    public static Icons ShieldCross;
    public static Icons Ship;
    public static Icons ShippingFast;
    public static Icons ShippingTimed;
    public static Icons ShishKebab;
    public static Icons ShoePrints;
    public static Icons ShoppingBag;
    public static Icons ShoppingBasket;
    public static Icons ShoppingCart;
    public static Icons Shovel;
    public static Icons ShovelSnow;
    public static Icons Shower;
    public static Icons Shredder;
    public static Icons ShuttleVan;
    public static Icons Shuttlecock;
    public static Icons Sickle;
    public static Icons Sigma;
    public static Icons Sign;
    public static Icons SignIn;
    public static Icons SignInAlt;
    public static Icons SignLanguage;
    public static Icons SignOut;
    public static Icons SignOutAlt;
    public static Icons Signal;
    public static Icons Signal1;
    public static Icons Signal2;
    public static Icons Signal3;
    public static Icons Signal4;
    public static Icons SignalAlt;
    public static Icons SignalAlt1;
    public static Icons SignalAlt2;
    public static Icons SignalAlt3;
    public static Icons SignalAltSlash;
    public static Icons SignalSlash;
    public static Icons SignalStream;
    public static Icons Signature;
    public static Icons SimCard;
    public static Icons Sitemap;
    public static Icons Skating;
    public static Icons Skeleton;
    public static Icons SkiJump;
    public static Icons SkiLift;
    public static Icons Skiing;
    public static Icons SkiingNordic;
    public static Icons Skull;
    public static Icons SkullCow;
    public static Icons SkullCrossbones;
    public static Icons Slash;
    public static Icons Sledding;
    public static Icons Sleigh;
    public static Icons SlidersH;
    public static Icons SlidersHSquare;
    public static Icons SlidersV;
    public static Icons SlidersVSquare;
    public static Icons Smile;
    public static Icons SmileBeam;
    public static Icons SmilePlus;
    public static Icons SmileWink;
    public static Icons Smog;
    public static Icons Smoke;
    public static Icons Smoking;
    public static Icons SmokingBan;
    public static Icons Sms;
    public static Icons Snake;
    public static Icons Snooze;
    public static Icons SnowBlowing;
    public static Icons Snowboarding;
    public static Icons Snowflake;
    public static Icons Snowflakes;
    public static Icons Snowman;
    public static Icons Snowmobile;
    public static Icons Snowplow;
    public static Icons Socks;
    public static Icons SolarPanel;
    public static Icons Sort;
    public static Icons SortAlphaDown;
    public static Icons SortAlphaDownAlt;
    public static Icons SortAlphaUp;
    public static Icons SortAlphaUpAlt;
    public static Icons SortAlt;
    public static Icons SortAmountDown;
    public static Icons SortAmountDownAlt;
    public static Icons SortAmountUp;
    public static Icons SortAmountUpAlt;
    public static Icons SortDown;
    public static Icons SortNumericDown;
    public static Icons SortNumericDownAlt;
    public static Icons SortNumericUp;
    public static Icons SortNumericUpAlt;
    public static Icons SortShapesDown;
    public static Icons SortShapesDownAlt;
    public static Icons SortShapesUp;
    public static Icons SortShapesUpAlt;
    public static Icons SortSizeDown;
    public static Icons SortSizeDownAlt;
    public static Icons SortSizeUp;
    public static Icons SortSizeUpAlt;
    public static Icons SortUp;
    public static Icons Soup;
    public static Icons Spa;
    public static Icons SpaceShuttle;
    public static Icons Spade;
    public static Icons Sparkles;
    public static Icons Speaker;
    public static Icons Speakers;
    public static Icons SpellCheck;
    public static Icons Spider;
    public static Icons SpiderBlackWidow;
    public static Icons SpiderWeb;
    public static Icons Spinner;
    public static Icons SpinnerThird;
    public static Icons Splotch;
    public static Icons SprayCan;
    public static Icons Square;
    public static Icons SquareFull;
    public static Icons SquareRoot;
    public static Icons SquareRootAlt;
    public static Icons Squirrel;
    public static Icons Staff;
    public static Icons Stamp;
    public static Icons Star;
    public static Icons StarAndCrescent;
    public static Icons StarChristmas;
    public static Icons StarExclamation;
    public static Icons StarHalf;
    public static Icons StarHalfAlt;
    public static Icons StarOfDavid;
    public static Icons StarOfLife;
    public static Icons Stars;
    public static Icons Steak;
    public static Icons SteeringWheel;
    public static Icons StepBackward;
    public static Icons StepForward;
    public static Icons Stethoscope;
    public static Icons StickyNote;
    public static Icons Stocking;
    public static Icons Stomach;
    public static Icons Stop;
    public static Icons StopCircle;
    public static Icons Stopwatch;
    public static Icons Store;
    public static Icons StoreAlt;
    public static Icons Stream;
    public static Icons StreetView;
    public static Icons Stretcher;
    public static Icons Strikethrough;
    public static Icons Stroopwafel;
    public static Icons Subscript;
    public static Icons Subway;
    public static Icons Suitcase;
    public static Icons SuitcaseRolling;
    public static Icons Sun;
    public static Icons SunCloud;
    public static Icons SunDust;
    public static Icons SunHaze;
    public static Icons Sunglasses;
    public static Icons Sunrise;
    public static Icons Sunset;
    public static Icons Superscript;
    public static Icons Surprise;
    public static Icons Swatchbook;
    public static Icons Swimmer;
    public static Icons SwimmingPool;
    public static Icons Sword;
    public static Icons Swords;
    public static Icons Synagogue;
    public static Icons Sync;
    public static Icons SyncAlt;
    public static Icons Syringe;
    public static Icons Table;
    public static Icons TableTennis;
    public static Icons Tablet;
    public static Icons TabletAlt;
    public static Icons TabletAndroid;
    public static Icons TabletAndroidAlt;
    public static Icons TabletRugged;
    public static Icons Tablets;
    public static Icons Tachometer;
    public static Icons TachometerAlt;
    public static Icons TachometerAltAverage;
    public static Icons TachometerAltFast;
    public static Icons TachometerAltFastest;
    public static Icons TachometerAltSlow;
    public static Icons TachometerAltSlowest;
    public static Icons TachometerAverage;
    public static Icons TachometerFast;
    public static Icons TachometerFastest;
    public static Icons TachometerSlow;
    public static Icons TachometerSlowest;
    public static Icons Taco;
    public static Icons Tag;
    public static Icons Tags;
    public static Icons Tally;
    public static Icons Tanakh;
    public static Icons Tape;
    public static Icons Tasks;
    public static Icons TasksAlt;
    public static Icons Taxi;
    public static Icons Teeth;
    public static Icons TeethOpen;
    public static Icons TemperatureFrigid;
    public static Icons TemperatureHigh;
    public static Icons TemperatureHot;
    public static Icons TemperatureLow;
    public static Icons Tenge;
    public static Icons TennisBall;
    public static Icons Terminal;
    public static Icons Text;
    public static Icons TextHeight;
    public static Icons TextSize;
    public static Icons TextWidth;
    public static Icons Th;
    public static Icons ThLarge;
    public static Icons ThList;
    public static Icons TheaterMasks;
    public static Icons Thermometer;
    public static Icons ThermometerEmpty;
    public static Icons ThermometerFull;
    public static Icons ThermometerHalf;
    public static Icons ThermometerQuarter;
    public static Icons ThermometerThreeQuarters;
    public static Icons Theta;
    public static Icons ThumbsDown;
    public static Icons ThumbsUp;
    public static Icons Thumbtack;
    public static Icons Thunderstorm;
    public static Icons ThunderstormMoon;
    public static Icons ThunderstormSun;
    public static Icons Ticket;
    public static Icons TicketAlt;
    public static Icons Tilde;
    public static Icons Times;
    public static Icons TimesCircle;
    public static Icons TimesHexagon;
    public static Icons TimesOctagon;
    public static Icons TimesSquare;
    public static Icons Tint;
    public static Icons TintSlash;
    public static Icons Tire;
    public static Icons TireFlat;
    public static Icons TirePressureWarning;
    public static Icons TireRugged;
    public static Icons Tired;
    public static Icons ToggleOff;
    public static Icons ToggleOn;
    public static Icons Toilet;
    public static Icons ToiletPaper;
    public static Icons ToiletPaperAlt;
    public static Icons Tombstone;
    public static Icons TombstoneAlt;
    public static Icons Toolbox;
    public static Icons Tools;
    public static Icons Tooth;
    public static Icons Toothbrush;
    public static Icons Torah;
    public static Icons ToriiGate;
    public static Icons Tornado;
    public static Icons Tractor;
    public static Icons Trademark;
    public static Icons TrafficCone;
    public static Icons TrafficLight;
    public static Icons TrafficLightGo;
    public static Icons TrafficLightSlow;
    public static Icons TrafficLightStop;
    public static Icons Train;
    public static Icons Tram;
    public static Icons Transgender;
    public static Icons TransgenderAlt;
    public static Icons Trash;
    public static Icons TrashAlt;
    public static Icons TrashRestore;
    public static Icons TrashRestoreAlt;
    public static Icons TrashUndo;
    public static Icons TrashUndoAlt;
    public static Icons TreasureChest;
    public static Icons Tree;
    public static Icons TreeAlt;
    public static Icons TreeChristmas;
    public static Icons TreeDecorated;
    public static Icons TreeLarge;
    public static Icons TreePalm;
    public static Icons Trees;
    public static Icons Triangle;
    public static Icons TriangleMusic;
    public static Icons Trophy;
    public static Icons TrophyAlt;
    public static Icons Truck;
    public static Icons TruckContainer;
    public static Icons TruckCouch;
    public static Icons TruckLoading;
    public static Icons TruckMonster;
    public static Icons TruckMoving;
    public static Icons TruckPickup;
    public static Icons TruckPlow;
    public static Icons TruckRamp;
    public static Icons Trumpet;
    public static Icons Tshirt;
    public static Icons Tty;
    public static Icons Turkey;
    public static Icons Turntable;
    public static Icons Turtle;
    public static Icons Tv;
    public static Icons TvAlt;
    public static Icons TvMusic;
    public static Icons TvRetro;
    public static Icons Typewriter;
    public static Icons Umbrella;
    public static Icons UmbrellaBeach;
    public static Icons Underline;
    public static Icons Undo;
    public static Icons UndoAlt;
    public static Icons Unicorn;
    public static Icons Union;
    public static Icons UniversalAccess;
    public static Icons University;
    public static Icons Unlink;
    public static Icons Unlock;
    public static Icons UnlockAlt;
    public static Icons Upload;
    public static Icons UsbDrive;
    public static Icons UsdCircle;
    public static Icons UsdSquare;
    public static Icons User;
    public static Icons UserAlt;
    public static Icons UserAltSlash;
    public static Icons UserAstronaut;
    public static Icons UserChart;
    public static Icons UserCheck;
    public static Icons UserCircle;
    public static Icons UserClock;
    public static Icons UserCog;
    public static Icons UserCowboy;
    public static Icons UserCrown;
    public static Icons UserEdit;
    public static Icons UserFriends;
    public static Icons UserGraduate;
    public static Icons UserHardHat;
    public static Icons UserHeadset;
    public static Icons UserInjured;
    public static Icons UserLock;
    public static Icons UserMd;
    public static Icons UserMdChat;
    public static Icons UserMinus;
    public static Icons UserMusic;
    public static Icons UserNinja;
    public static Icons UserNurse;
    public static Icons UserPlus;
    public static Icons UserSecret;
    public static Icons UserShield;
    public static Icons UserSlash;
    public static Icons UserTag;
    public static Icons UserTie;
    public static Icons UserTimes;
    public static Icons Users;
    public static Icons UsersClass;
    public static Icons UsersCog;
    public static Icons UsersCrown;
    public static Icons UsersMedical;
    public static Icons UtensilFork;
    public static Icons UtensilKnife;
    public static Icons UtensilSpoon;
    public static Icons Utensils;
    public static Icons UtensilsAlt;
    public static Icons ValueAbsolute;
    public static Icons VectorSquare;
    public static Icons Venus;
    public static Icons VenusDouble;
    public static Icons VenusMars;
    public static Icons Vhs;
    public static Icons Vial;
    public static Icons Vials;
    public static Icons Video;
    public static Icons VideoPlus;
    public static Icons VideoSlash;
    public static Icons Vihara;
    public static Icons Violin;
    public static Icons Voicemail;
    public static Icons Volcano;
    public static Icons VolleyballBall;
    public static Icons Volume;
    public static Icons VolumeDown;
    public static Icons VolumeMute;
    public static Icons VolumeOff;
    public static Icons VolumeSlash;
    public static Icons VolumeUp;
    public static Icons VoteNay;
    public static Icons VoteYea;
    public static Icons VrCardboard;
    public static Icons WagonCovered;
    public static Icons Walker;
    public static Icons WalkieTalkie;
    public static Icons Walking;
    public static Icons Wallet;
    public static Icons Wand;
    public static Icons WandMagic;
    public static Icons Warehouse;
    public static Icons WarehouseAlt;
    public static Icons Washer;
    public static Icons Watch;
    public static Icons WatchCalculator;
    public static Icons WatchFitness;
    public static Icons Water;
    public static Icons WaterLower;
    public static Icons WaterRise;
    public static Icons WaveSine;
    public static Icons WaveSquare;
    public static Icons WaveTriangle;
    public static Icons Waveform;
    public static Icons WaveformPath;
    public static Icons Webcam;
    public static Icons WebcamSlash;
    public static Icons Weight;
    public static Icons WeightHanging;
    public static Icons Whale;
    public static Icons Wheat;
    public static Icons Wheelchair;
    public static Icons Whistle;
    public static Icons Wifi;
    public static Icons Wifi1;
    public static Icons Wifi2;
    public static Icons WifiSlash;
    public static Icons Wind;
    public static Icons WindTurbine;
    public static Icons WindWarning;
    public static Icons Window;
    public static Icons WindowAlt;
    public static Icons WindowClose;
    public static Icons WindowMaximize;
    public static Icons WindowMinimize;
    public static Icons WindowRestore;
    public static Icons Windsock;
    public static Icons WineBottle;
    public static Icons WineGlass;
    public static Icons WineGlassAlt;
    public static Icons WonSign;
    public static Icons Wreath;
    public static Icons Wrench;
    public static Icons XRay;
    public static Icons YenSign;
    public static Icons YinYang;
}
public class Rust.UI.LabelAttribute : Attribute {
    public Phrase Phrase;
    public LabelAttribute(string token, string english);
}
public class Rust.UI.LoadingBar : MonoBehaviour {
    public CanvasGroup Canvas;
    public Text Label;
    public Text SubLabel;
    public Image ProgressImage;
    unknown bool Active {public set; }
    unknown float Progress {public set; }
    unknown string Text {public set; }
    unknown string SubText {public set; }
    public void set_Active(bool value);
    public void set_Progress(float value);
    public void set_Text(string value);
    public void set_SubText(string value);
}
public static class Rust.UI.Make : object {
    public static string PrefabRoot;
    public static Phrase phrase_on;
    public static Phrase phrase_off;
    public static Phrase phrase_enabled;
    public static Phrase phrase_disabled;
    private static Make();
    public static LayoutElement Flex();
    public static RustButton Button(Phrase label, Icons icon, bool toggle, string style, bool autoSize);
    public static RustButton MenuOption(Phrase label, Icons icon, string style);
    public static Menu Menu(Option[] options, Nullable`1<Option> selectedOption, bool AllowFiltering, string style);
    public static Video Video(string style);
    public static RustButton HeaderButton(Phrase label, Phrase subtitle, string style);
    public static RustOption Option(Option[] enumOptions, string style);
    public static RustButtonGroup ButtonGroup(Option[] enumOptions, string style);
    public static Dropdown Dropdown(Option[] enumOptions, string style);
    public static RustInput Input(Phrase placeholder, string style);
    public static RustIcon Icon(Icons icon, string style);
    public static RustSlider Slider(float minValue, float maxValue, float currentValue, bool integer, string style);
    public static RustToggle Toggle(Phrase on, Phrase off, string style);
    public static Blocker Blocker(string style);
    public static RustToggle ToggleOnOff(string style);
    public static RustToggle ToggleEnabledDisabled(string style);
}
public static class Rust.UI.Manager : object {
    private static Dictionary`2<string, GameObject> Prefabs;
    private static Manager();
    internal static GameObject CreatePrefab(string name);
    internal static T Create(string prefabName);
}
public class Rust.UI.Menu : RustControl {
    public bool AllowFiltering;
    public int MaxResults;
    public Image Border;
    public Image Background;
    public Option[] Options;
    public RectTransform OptionCanvas;
    public RustInput FilterField;
    public Option SelectedOption;
    public ChangedEvent OnSelected;
    public Blocker Blocker;
    protected virtual void Awake();
    public void Build();
    private void OnOptionSelected(Option option);
    private IEnumerable`1<Option> GetOptions();
    internal void Popup(RectTransform source);
    private void RestrainToScreen();
    protected virtual void ApplyStyle(StyleColorSet s);
    [CompilerGeneratedAttribute]
private void <Awake>b__11_0(string x);
}
public class Rust.UI.Option : ValueType {
    public Icons Icon;
    public string Value;
    public Phrase Label;
    public bool Default;
    public Option(string token, string english, string value, bool isdefault, Icons icon);
    public Option(Phrase phrase, string value, bool isdefault, Icons icon);
    public Option(Icons icon, string value, bool isdefault);
}
[AttributeUsageAttribute("256")]
public class Rust.UI.OptionAttribute : Attribute {
    public Icons Icon;
    public Phrase Label;
    public string Value;
    public bool Default;
    public OptionAttribute(string token, string english, string value, bool isdefault, Icons icon);
    public OptionAttribute(Icons icon, string value, bool isdefault);
    public Option GetOption();
}
public class Rust.UI.Properties : object {
    private object Parent;
    private RectTransform Canvas;
    [CompilerGeneratedAttribute]
private Action UpdateControlsFromValues;
    public List`1<FieldInfo> Fields;
    [CompilerGeneratedAttribute]
private bool <IsDirty>k__BackingField;
    public bool IsDirty { get; public set; }
    public Properties(object Parent, RectTransform Canvas);
    [CompilerGeneratedAttribute]
public void add_UpdateControlsFromValues(Action value);
    [CompilerGeneratedAttribute]
public void remove_UpdateControlsFromValues(Action value);
    public void CreateControls();
    private void AddControl(RustControl ctrl, LabelAttribute label);
    private bool CreateControl(FieldInfo f);
    private bool CreateReadOnlyControl(FieldInfo f);
    private bool CreateStringControl(FieldInfo f);
    private bool CreateBooleanControl(FieldInfo f);
    private bool CreateNumericControl(FieldInfo f);
    public void SyncControls();
    public Dictionary`2<string, object> GetValues();
    public void SetValues(Dictionary`2<string, object> d);
    public void SetValues(Dictionary`2<string, object> a, Dictionary`2<string, object> b, float delta);
    [CompilerGeneratedAttribute]
public bool get_IsDirty();
    [CompilerGeneratedAttribute]
public void set_IsDirty(bool value);
    private void MarkDirty();
    public void Load(JProperty entry);
}
public class Rust.UI.Renderer.TickRenderer : MaskableGraphic {
    public List`1<Tick> Ticks;
    private static UIVertex[] quad;
    private static TickRenderer();
    protected virtual void OnPopulateMesh(VertexHelper vh);
}
[AddComponentMenu("Rust/UI/Button")]
public class Rust.UI.RustButton : RustControl {
    public Image Background;
    public RustText Text;
    public RustText SubText;
    public RustIcon Icon;
    public Image IconImage;
    public UnityEvent OnPressed;
    public UnityEvent OnReleased;
    public bool IsToggle;
    public bool UnpressSiblings;
    public bool PreventToggleOff;
    public Transform TabPanelTarget;
    public Vector4 TextMargin;
    public Vector4 TextMarginNoIcon;
    public bool Value { get; public set; }
    public bool AutoSize { get; public set; }
    public float minWidth { get; }
    public float preferredWidth { get; }
    public float flexibleWidth { get; }
    public float minHeight { get; }
    public float preferredHeight { get; }
    public float flexibleHeight { get; }
    public int layoutPriority { get; }
    public bool get_Value();
    public void set_Value(bool value);
    public bool get_AutoSize();
    public void set_AutoSize(bool value);
    public void Press();
    public void Unpress();
    public virtual void OnPointerDown(PointerEventData eventData);
    public void SetToggleTrue();
    public void SetToggleFalse();
    public void Toggle(bool v, bool forced);
    private void ToggleTabPanel(bool onOff);
    private void DoUnpressSiblings();
    public virtual void OnPointerUp(PointerEventData eventData);
    protected virtual void OnDisable();
    protected virtual void ApplyStyle(StyleColorSet s);
    public sealed virtual float get_minWidth();
    public sealed virtual float get_preferredWidth();
    public sealed virtual float get_flexibleWidth();
    public sealed virtual float get_minHeight();
    public sealed virtual float get_preferredHeight();
    public sealed virtual float get_flexibleHeight();
    public sealed virtual int get_layoutPriority();
    public sealed virtual void CalculateLayoutInputHorizontal();
    public sealed virtual void CalculateLayoutInputVertical();
}
public class Rust.UI.RustButtonGroup : RustControl {
    public Option[] Options;
    public string ButtonStyle;
    private int CurrentOption;
    public ChangedEvent OnChanged;
    public Option Value { get; }
    public Option get_Value();
    protected virtual void Awake();
    public void SetOption(int i);
    public void SetOption(string value);
    private void ButtonPressed(int i);
    public void SetOptionDefault();
    public void BuildContents();
}
public class Rust.UI.RustControl : UIBehaviour {
    protected static bool IsDragging;
    [SerializeField]
protected StyleAsset _styles;
    public RustWrapper FormField;
    [InspectorFlagsAttribute]
public State CurrentState;
    public StyleAsset Styles { get; public set; }
    public RectTransform rectTransform { get; }
    public bool IsDisabled { get; }
    public bool IsPressed { get; }
    public bool IsHovered { get; }
    public StyleColorSet CurrentStyleCollection { get; }
    public virtual StyleAsset get_Styles();
    public virtual void set_Styles(StyleAsset value);
    protected virtual void OnEnable();
    public RectTransform get_rectTransform();
    public virtual void OnPointerEnter(PointerEventData eventData);
    public virtual void OnPointerExit(PointerEventData eventData);
    public virtual void SetDisabled(bool value);
    public virtual void SetPressed(bool value);
    public virtual bool get_IsDisabled();
    public virtual bool get_IsPressed();
    public virtual bool get_IsHovered();
    public virtual StyleColorSet get_CurrentStyleCollection();
    public virtual void ApplyStyles();
    protected virtual void ApplyStyle(StyleColorSet s);
}
[AddComponentMenu("Rust/UI/RustFlexText")]
public class Rust.UI.RustFlexText : RustText {
    [TooltipAttribute("Controls the initial size of the element before factoring in grow/shrink.")]
public FlexLength Basis;
    [MinAttribute("0")]
[TooltipAttribute("How much this flex element should grow relative to its siblings.")]
public int Grow;
    [MinAttribute("0")]
[TooltipAttribute("How much this flex element should shrink relative to its siblings.")]
public int Shrink;
    [TooltipAttribute("Optionally override the parent's cross axis alignment for this element.")]
public FlexAlignSelf AlignSelf;
    [TooltipAttribute("The minimum allowed dimensions of this flex element.")]
public FlexLength FlexMinWidth;
    [TooltipAttribute("The minimum allowed dimensions of this flex element.")]
public FlexLength FlexMaxWidth;
    [TooltipAttribute("The maximum allowed dimensions of this flex element.")]
public FlexLength FlexMinHeight;
    [TooltipAttribute("The maximum allowed dimensions of this flex element.")]
public FlexLength FlexMaxHeight;
    private bool _isDirty;
    private float _preferredWidth;
    private float _preferredHeight;
    private RectTransform Facepunch.Flexbox.IFlexNode.Transform { get; }
    private bool Facepunch.Flexbox.IFlexNode.IsActive { get; }
    private bool Facepunch.Flexbox.IFlexNode.IsAbsolute { get; }
    private bool Facepunch.Flexbox.IFlexNode.IsDirty { get; }
    private FlexLength Facepunch.Flexbox.IFlexNode.MinWidth { get; }
    private FlexLength Facepunch.Flexbox.IFlexNode.MaxWidth { get; }
    private FlexLength Facepunch.Flexbox.IFlexNode.MinHeight { get; }
    private FlexLength Facepunch.Flexbox.IFlexNode.MaxHeight { get; }
    private FlexLength Facepunch.Flexbox.IFlexNode.Basis { get; }
    private int Facepunch.Flexbox.IFlexNode.Grow { get; }
    private int Facepunch.Flexbox.IFlexNode.Shrink { get; }
    private FlexAlignSelf Facepunch.Flexbox.IFlexNode.AlignSelf { get; }
    protected virtual void OnEnable();
    protected virtual void OnDisable();
    public virtual void SetLayoutDirty();
    public virtual void DoAutoSize();
    private sealed virtual override RectTransform Facepunch.Flexbox.IFlexNode.get_Transform();
    private sealed virtual override bool Facepunch.Flexbox.IFlexNode.get_IsActive();
    private sealed virtual override bool Facepunch.Flexbox.IFlexNode.get_IsAbsolute();
    private sealed virtual override bool Facepunch.Flexbox.IFlexNode.get_IsDirty();
    private sealed virtual override FlexLength Facepunch.Flexbox.IFlexNode.get_MinWidth();
    private sealed virtual override FlexLength Facepunch.Flexbox.IFlexNode.get_MaxWidth();
    private sealed virtual override FlexLength Facepunch.Flexbox.IFlexNode.get_MinHeight();
    private sealed virtual override FlexLength Facepunch.Flexbox.IFlexNode.get_MaxHeight();
    private sealed virtual override FlexLength Facepunch.Flexbox.IFlexNode.get_Basis();
    private sealed virtual override int Facepunch.Flexbox.IFlexNode.get_Grow();
    private sealed virtual override int Facepunch.Flexbox.IFlexNode.get_Shrink();
    private sealed virtual override FlexAlignSelf Facepunch.Flexbox.IFlexNode.get_AlignSelf();
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.SetupTransform();
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.SetLayoutDirty(bool force);
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.MeasureHorizontal();
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.LayoutHorizontal(float maxWidth, float maxHeight);
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.MeasureVertical();
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.LayoutVertical(float maxWidth, float maxHeight);
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.GetScale(Single& scaleX, Single& scaleY);
    private sealed virtual override void Facepunch.Flexbox.IFlexNode.GetPreferredSize(Single& preferredWidth, Single& preferredHeight);
}
[AddComponentMenu("Rust/UI/RustIcon")]
public class Rust.UI.RustIcon : TextMeshProUGUI {
    [SerializeField]
private Icons _icon;
    public Icons Icon { get; public set; }
    public Icons get_Icon();
    public void set_Icon(Icons value);
    public void SetIcon(Icons newIcon);
}
[AddComponentMenu("Rust/UI/Image Button")]
public class Rust.UI.RustImageButton : RustControl {
    public Image Background;
    public Image Icon;
    public UnityEvent OnPressed;
    public UnityEvent OnReleased;
    public bool IsToggle;
    public bool UnpressSiblings;
    public bool PreventToggleOff;
    public Transform TabPanelTarget;
    public Sprite PressedImage;
    public Sprite UnpressedImage;
    public bool Value { get; public set; }
    public float minWidth { get; }
    public float preferredWidth { get; }
    public float flexibleWidth { get; }
    public float minHeight { get; }
    public float preferredHeight { get; }
    public float flexibleHeight { get; }
    public int layoutPriority { get; }
    public bool get_Value();
    public void set_Value(bool value);
    public void Press();
    public void Unpress();
    public virtual void OnPointerDown(PointerEventData eventData);
    public void Toggle(bool v, bool forced);
    private void ToggleTabPanel(bool onOff);
    private void DoUnpressSiblings();
    public virtual void OnPointerUp(PointerEventData eventData);
    protected virtual void OnDisable();
    protected virtual void ApplyStyle(StyleColorSet s);
    public sealed virtual float get_minWidth();
    public sealed virtual float get_preferredWidth();
    public sealed virtual float get_flexibleWidth();
    public sealed virtual float get_minHeight();
    public sealed virtual float get_preferredHeight();
    public sealed virtual float get_flexibleHeight();
    public sealed virtual int get_layoutPriority();
    public sealed virtual void CalculateLayoutInputHorizontal();
    public sealed virtual void CalculateLayoutInputVertical();
}
public class Rust.UI.RustInput : RustControl {
    public TMP_InputField InputField;
    public Image Background;
    public ChangedEvent OnValueChanged;
    public ChangedEvent OnEndEdit;
    public ChangedEvent OnSubmit;
    public RustText Placeholder { get; }
    public bool IsFocused { get; }
    public string Value { get; }
    public string Text { get; public set; }
    public StyleColorSet CurrentStyleCollection { get; }
    public RustText get_Placeholder();
    public bool get_IsFocused();
    public string get_Value();
    public string get_Text();
    public void set_Text(string value);
    protected virtual void Awake();
    public virtual StyleColorSet get_CurrentStyleCollection();
    protected virtual void ApplyStyle(StyleColorSet s);
    [CompilerGeneratedAttribute]
private void <Awake>b__15_0(string x);
    [CompilerGeneratedAttribute]
private void <Awake>b__15_1(string x);
    [CompilerGeneratedAttribute]
private void <Awake>b__15_2(string x);
    [CompilerGeneratedAttribute]
private void <Awake>b__15_3(string x);
    [CompilerGeneratedAttribute]
private void <Awake>b__15_4(string x);
}
public class Rust.UI.RustLayout : UIBehaviour {
    public LayoutMode Mode;
    public bool ReverseOrder;
    public float Spacing;
    public RectOffset Padding;
    [FormerlySerializedAsAttribute("SetChildrenWidth")]
[TooltipAttribute("Scale the children to fill in the opposite direction to the way you're laying out")]
public bool ChildrenFill;
    [FormerlySerializedAsAttribute("SetHeight")]
[TooltipAttribute("Resize this container to fit children on the direction you're laying out")]
public bool ResizeToChildren;
    [TooltipAttribute("Resize this container to fit children on the opposite direction to the one you're laying out (does nothing if ChildrenFill is enabled)")]
public bool ResizeToChildrenOpposite;
    public RectTransform[] IgnoreLayout;
    public int MaxHeight;
    [TooltipAttribute("We'll call layout on this if our size changes")]
public RustLayout ParentLayout;
    private bool doingLayout;
    private bool changedSize;
    protected virtual void Awake();
    protected virtual void OnEnable();
    public virtual void SetLayoutHorizontal();
    public virtual void SetLayoutVertical();
    public virtual void DoLayout();
    protected virtual void OnTransformParentChanged();
    private void DoHorizontalLayout(Edge edge);
    private void DoTopLayout(Edge edge);
    private bool Ignoring(RectTransform child);
    protected void SetDirty();
    protected virtual void OnRectTransformDimensionsChange();
    protected virtual void OnTransformChildrenChanged();
}
public class Rust.UI.RustOption : RustControl {
    public RustButton Left;
    public RustButton Right;
    public RustText Text;
    public Option[] Options;
    private int CurrentOption;
    public ChangedEvent OnChanged;
    public Option Value { get; }
    public Option get_Value();
    protected virtual void Awake();
    public void SetOptions(Option[] options);
    public void SetOption(int i);
    public void SetOptionDefault();
    public void OnLeft();
    public void OnRight();
    protected virtual void ApplyStyle(StyleColorSet s);
}
public class Rust.UI.RustSlider : RustControl {
    public RustInput NumberInput;
    public Image SliderCanvas;
    public string DecimalFormat;
    public float MinValue;
    public float MaxValue;
    public bool Integer;
    public float ValueInternal;
    public ChangedEvent OnChanged;
    protected float lastCallbackValue;
    public float Value { get; public set; }
    public float ValueNormalized { get; public set; }
    protected virtual void Awake();
    public virtual float get_Value();
    public virtual void set_Value(float value);
    public float get_ValueNormalized();
    public void set_ValueNormalized(float value);
    public void TextChanged(string text);
    public void SliderChanged(float slider);
    protected virtual void ApplyStyle(StyleColorSet s);
    public sealed virtual void OnPointerDown(PointerEventData eventData);
    public sealed virtual void OnPointerUp(PointerEventData eventData);
    public sealed virtual void OnInitializePotentialDrag(PointerEventData eventData);
    public sealed virtual void OnDrag(PointerEventData eventData);
    private void UpdateDrag(Vector2 pos, Camera cam);
}
public class Rust.UI.RustStyler : MonoBehaviour {
    [SerializeField]
protected StyleAsset _styles;
    [SerializeField]
protected StyleGroup _group;
    public Graphic[] Foreground;
    public Graphic[] Background;
    public Graphic[] Icon;
    public StyleAsset Styles { get; public set; }
    public StyleGroup Group { get; public set; }
    public StyleAsset get_Styles();
    public void set_Styles(StyleAsset value);
    public StyleGroup get_Group();
    public void set_Group(StyleGroup value);
    private void ApplyStyles();
    private Group GetStyleGroup();
}
[AddComponentMenu("Rust/UI/RustText")]
public class Rust.UI.RustText : TextMeshProUGUI {
    public bool IsLocalized;
    public string Token;
    [TextAreaAttribute]
public string English;
    public Phrase Phrase;
    [FormerlySerializedAsAttribute("AutoSizeContainer")]
public bool AutoSetWidth;
    public bool AutoSetHeight;
    public bool AutoSizeParent;
    public float MinWidth;
    public float MaxWidth;
    public float MinHeight;
    public float MaxHeight;
    private Object[] localizationArguments;
    private static FastStringBuilder inputBuilder;
    private bool invertedAlignment;
    public string LanguageToken { get; }
    public string LanguageEnglish { get; }
    private static RustText();
    public sealed virtual string get_LanguageToken();
    public sealed virtual string get_LanguageEnglish();
    public void SetPhrase(Phrase phrase, Object[] args);
    protected virtual void Awake();
    public void SetPhraseArguments(Object[] args);
    public void SetText(string str);
    public void SetText(string str, bool localized, bool forceRTLFormatting);
    public virtual void DoAutoSize();
    public virtual void Rebuild(CanvasUpdate update);
    private string GetLocalizedText(bool englishVersion);
    private void UpdateLocalizedText(bool forceEnglish);
    public static void OnLanguageChanged();
    public string FormatLocalizedText(string str, bool force);
    private void FormatAlignment();
    public _HorizontalAlignmentOptions GetHorizontalAlignment();
    public _VerticalAlignmentOptions GetVerticalAligment();
    public void SetHorizontalAlignment(_HorizontalAlignmentOptions option);
    public void SetVerticalAlignment(_VerticalAlignmentOptions option);
}
public class Rust.UI.RustToggle : RustControl {
    public StyleAsset StyleOff;
    public Image Handle;
    public RustText TextOn;
    public RustText TextOff;
    public bool Value;
    public float SliderWidth;
    public ChangedEvent OnChanged;
    private Coroutine anim;
    public StyleAsset Styles { get; }
    public virtual StyleAsset get_Styles();
    public void SetValue(bool value);
    public sealed virtual void OnPointerDown(PointerEventData eventData);
    [IteratorStateMachineAttribute("Rust.UI.RustToggle/<AnimateTo>d__13")]
private IEnumerator AnimateTo();
    public virtual void ApplyStyles();
}
public class Rust.UI.RustWrapper : RustControl {
    public RustText Text;
    public RectTransform Canvas;
    protected virtual void ApplyStyle(StyleColorSet s);
    public void Add(UIBehaviour ui);
    public void AddFlex();
}
[CreateAssetMenuAttribute]
public class Rust.UI.StyleAsset : ScriptableObject {
    public Group Normal;
    public OverrideGroup Hovered;
    public OverrideGroup Pressed;
    public OverrideGroup Disabled;
}
public class Rust.UI.StyleColorSet : ValueType {
    public Color Bg;
    public Color Fg;
    public Color Icon;
    public StyleColorSet(Group baseColors);
    public void Apply(OverrideGroup overrideColors);
}
public enum Rust.UI.StyleGroup : Enum {
    public int value__;
    public static StyleGroup Normal;
    public static StyleGroup Hovered;
    public static StyleGroup Presed;
    public static StyleGroup Disabled;
}
public class Rust.UI.SuppressMenu : ListComponent`1<SuppressMenu> {
    public static bool Any { get; }
    public static bool get_Any();
}
public class Rust.UI.TabControl : RustControl {
    public RectTransform TabContainer;
    public RectTransform PanelContainer;
    public RustButton ButtonControl;
    public float InnerPadding;
    public bool AllowCloseAll;
    public Image Background;
    public Image Foreground;
    public RustLayout Panel(string name);
    public RustButton Button(string name);
    public void AddTab(string name, Phrase buttontext, Icons icon);
    protected virtual void ApplyStyle(StyleColorSet s);
}
[AddComponentMenu("Rust/UI/Timeline")]
public class Rust.UI.Timeline : RustControl {
    public int StartTime;
    public int EndTime;
    public int CurrentPosition;
    public TimeRuler TimeRuler;
    public RectTransform IndicatorCurrent;
    public UnityEvent OnStartScrub;
    public UnityEvent OnEndScrub;
    public ScrubEvent OnScrubToTime;
    public List`1<TimelineMarker> Markers;
    [CompilerGeneratedAttribute]
private TimelineMarker <SelectedMarker>k__BackingField;
    public TimelineMarker SelectedMarker { get; public set; }
    [CompilerGeneratedAttribute]
public TimelineMarker get_SelectedMarker();
    [CompilerGeneratedAttribute]
public void set_SelectedMarker(TimelineMarker value);
    internal void SelectMarker(TimelineMarker marker);
    internal void DragMarker(TimelineMarker marker, PointerEventData eventData);
    internal void DeleteMarker(TimelineMarker timelineMarker);
    protected virtual void Awake();
    public void Rebuild();
    public void AddMarker(TimelineMarker marker);
    public void SetCurrentPosition(int pos);
    public float GetX(int time);
    public int GetTime(float x);
    public sealed virtual void OnPointerDown(PointerEventData eventData);
    public sealed virtual void OnPointerUp(PointerEventData eventData);
    public void Scrubbed(int time);
    public sealed virtual void OnDrag(PointerEventData eventData);
}
public class Rust.UI.TimelineMarker : RustControl {
    public int CurrentPosition;
    public Image Background;
    private Timeline Parent;
    private bool hasDragged;
    public bool IsPressed { get; }
    public sealed virtual void OnPointerDown(PointerEventData eventData);
    public sealed virtual void OnPointerUp(PointerEventData eventData);
    public virtual void SelectMarker();
    public sealed virtual void OnDrag(PointerEventData eventData);
    public virtual bool get_IsPressed();
    internal void Position(Timeline timeline);
    protected virtual void ApplyStyle(StyleColorSet s);
    public virtual void SetTime(int time);
    public void Delete();
}
[AddComponentMenu("Rust/UI/TimeRuler")]
public class Rust.UI.TimeRuler : RustControl {
    public int StartTime;
    public int EndTime;
    public RustText TextPrefab;
    public TickRenderer TickRenderer;
    public void Rebuild();
    public float TimeToPos(int time);
}
[RequireComponent("UnityEngine.UI.Toggle")]
internal class Rust.UI.Utility.ToggleGameObject : MonoBehaviour {
    public GameObject Target;
    private Toggle component;
    public void OnEnable();
    public void OnDisable();
    public void Update();
    public void OnToggled(bool value);
}
public class Rust.UI.Video : RustControl {
    public RawImage VideoCanvas;
    public VideoPlayer VideoPlayer;
    public CanvasGroup CanvasGroup;
    [RangeAttribute("0", "5")]
public float FadeIn;
    private UInt32 textureWidth;
    private UInt32 textureHeight;
    private Vector2 playerSize;
    protected virtual void Awake();
    private void VideoPlayer_errorReceived(VideoPlayer source, string message);
    public void PlayUrl(string video);
    public void LateUpdate();
    private void Cover();
    public void Stop();
}
public class RustUiTest : MonoBehaviour {
    private static Option[] enumOptions;
    private static Option[] enumOptionsJustIcons;
    private static Option[] enumOptionsWithIcons;
    private static RustUiTest();
    private void Awake();
}
[ExtensionAttribute]
public static class UnityEngine.RectTransformEx : object {
    [ExtensionAttribute]
public static void AnchorToCorners(RectTransform transform);
    [ExtensionAttribute]
public static void Fill(RectTransform tx, float l, float t, float r, float b);
    [ExtensionAttribute]
public static void AnchorTopRight(RectTransform tx);
    [ExtensionAttribute]
public static RectTransform AlignRight(RectTransform tx, float offset);
    [ExtensionAttribute]
public static RectTransform AlignLeft(RectTransform tx, float offset);
    [ExtensionAttribute]
public static RectTransform AlignTop(RectTransform tx, float offset);
    [ExtensionAttribute]
public static Rect GetScreenRect(RectTransform transform);
    [ExtensionAttribute]
public static void SetPivotAndAnchors(RectTransform trans, Vector2 aVec);
    [ExtensionAttribute]
public static Vector2 GetSize(RectTransform trans);
    [ExtensionAttribute]
public static float GetWidth(RectTransform trans);
    [ExtensionAttribute]
public static float GetHeight(RectTransform trans);
    [ExtensionAttribute]
public static bool SetSize(RectTransform trans, Vector2 newSize);
    [ExtensionAttribute]
public static bool SetWidth(RectTransform trans, float newSize);
    [ExtensionAttribute]
public static void MoveY(RectTransform trans, float amount);
    [ExtensionAttribute]
public static void Move(RectTransform trans, Vector2 move);
    [ExtensionAttribute]
public static bool SetHeight(RectTransform trans, float newSize);
    [ExtensionAttribute]
public static void SetBottomLeftPosition(RectTransform trans, Vector2 newPos);
    [ExtensionAttribute]
public static void SetTopLeftPosition(RectTransform trans, Vector2 newPos);
    [ExtensionAttribute]
public static void SetBottomRightPosition(RectTransform trans, Vector2 newPos);
    [ExtensionAttribute]
public static void SetRightTopPosition(RectTransform trans, Vector2 newPos);
    [ExtensionAttribute]
public static void DoAutoLayout(RectTransform trans);
}
[ExtensionAttribute]
public static class UnityEngine.UIBehaviourEx : object {
    [ExtensionAttribute]
public static void SetParent(UIBehaviour self, Transform parent);
    [ExtensionAttribute]
public static void SetParent(UIBehaviour self, Canvas parent);
    [ExtensionAttribute]
public static void SetParent(UIBehaviour self, UIBehaviour parent);
    [ExtensionAttribute]
public static void SetParentRootCanvas(UIBehaviour self, Transform tx);
}
[CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
[GeneratedCodeAttribute("Unity.MonoScriptGenerator.MonoScriptInfoGenerator", "")]
internal class UnitySourceGeneratedAssemblyMonoScriptTypes_v1 : object {
    private static MonoScriptData Get();
}
