public UnityEngine.ParticleCollisionEvent : ValueType {
private Vector3 m_Intersection
private Vector3 m_Normal
private Vector3 m_Velocity
private int m_ColliderInstanceID
public Vector3 intersection
public Vector3 normal
public Vector3 velocity
public Component colliderComponent
public Vector3 get_intersection()
public Vector3 get_normal()
public Vector3 get_velocity()
public Component get_colliderComponent()
private Component InstanceIDToColliderComponent(int instanceID)
}
public UnityEngine.ParticlePhysicsExtensions : object {
public int GetSafeCollisionEventSize(ParticleSystem ps)
public int GetCollisionEvents(ParticleSystem ps, GameObject go, List`1<ParticleCollisionEvent> collisionEvents)
public int GetSafeTriggerParticlesSize(ParticleSystem ps, ParticleSystemTriggerEventType type)
public int GetTriggerParticles(ParticleSystem ps, ParticleSystemTriggerEventType type, List`1<Particle> particles)
public void SetTriggerParticles(ParticleSystem ps, ParticleSystemTriggerEventType type, List`1<Particle> particles, int offset, int count)
public void SetTriggerParticles(ParticleSystem ps, ParticleSystemTriggerEventType type, List`1<Particle> particles)
public int GetCollisionEvents(ParticleSystem ps, GameObject go, ParticleCollisionEvent[] collisionEvents)
}
public UnityEngine.ParticleSystem : Component {
public bool isPlaying
public bool isEmitting
public bool isStopped
public bool isPaused
public float time
public int particleCount
public UInt32 randomSeed
public bool useAutoRandomSeed
public bool automaticCullingEnabled
public MainModule main
public EmissionModule emission
public ShapeModule shape
public VelocityOverLifetimeModule velocityOverLifetime
public LimitVelocityOverLifetimeModule limitVelocityOverLifetime
public InheritVelocityModule inheritVelocity
public ForceOverLifetimeModule forceOverLifetime
public ColorOverLifetimeModule colorOverLifetime
public ColorBySpeedModule colorBySpeed
public SizeOverLifetimeModule sizeOverLifetime
public SizeBySpeedModule sizeBySpeed
public RotationOverLifetimeModule rotationOverLifetime
public RotationBySpeedModule rotationBySpeed
public ExternalForcesModule externalForces
public NoiseModule noise
public CollisionModule collision
public TriggerModule trigger
public SubEmittersModule subEmitters
public TextureSheetAnimationModule textureSheetAnimation
public LightsModule lights
public TrailModule trails
public CustomDataModule customData
public float startDelay
public bool loop
public bool playOnAwake
public float duration
public float playbackSpeed
public bool enableEmission
public float emissionRate
public float startSpeed
public float startSize
public Color startColor
public float startRotation
public Vector3 startRotation3D
public float startLifetime
public float gravityModifier
public int maxParticles
public ParticleSystemSimulationSpace simulationSpace
public ParticleSystemScalingMode scalingMode
public bool get_isPlaying()
public bool get_isEmitting()
public bool get_isStopped()
public bool get_isPaused()
public float get_time()
public void set_time(float value)
public int get_particleCount()
public UInt32 get_randomSeed()
public void set_randomSeed(UInt32 value)
public bool get_useAutoRandomSeed()
public void set_useAutoRandomSeed(bool value)
public bool get_automaticCullingEnabled()
public MainModule get_main()
public EmissionModule get_emission()
public ShapeModule get_shape()
public VelocityOverLifetimeModule get_velocityOverLifetime()
public LimitVelocityOverLifetimeModule get_limitVelocityOverLifetime()
public InheritVelocityModule get_inheritVelocity()
public ForceOverLifetimeModule get_forceOverLifetime()
public ColorOverLifetimeModule get_colorOverLifetime()
public ColorBySpeedModule get_colorBySpeed()
public SizeOverLifetimeModule get_sizeOverLifetime()
public SizeBySpeedModule get_sizeBySpeed()
public RotationOverLifetimeModule get_rotationOverLifetime()
public RotationBySpeedModule get_rotationBySpeed()
public ExternalForcesModule get_externalForces()
public NoiseModule get_noise()
public CollisionModule get_collision()
public TriggerModule get_trigger()
public SubEmittersModule get_subEmitters()
public TextureSheetAnimationModule get_textureSheetAnimation()
public LightsModule get_lights()
public TrailModule get_trails()
public CustomDataModule get_customData()
public void SetParticles(Particle[] particles, int size)
public int GetParticles(Particle[] particles)
public void SetCustomParticleData(List`1<Vector4> customData, ParticleSystemCustomData streamIndex)
public int GetCustomParticleData(List`1<Vector4> customData, ParticleSystemCustomData streamIndex)
internal void SetCustomParticleDataInternal(object customData, int streamIndex)
internal int GetCustomParticleDataInternal(object customData, int streamIndex)
public void Simulate(float t, bool withChildren, bool restart, bool fixedTimeStep)
public void Simulate(float t, bool withChildren, bool restart)
public void Simulate(float t, bool withChildren)
public void Simulate(float t)
public void Play(bool withChildren)
public void Play()
public void Pause(bool withChildren)
public void Pause()
public void Stop(bool withChildren, ParticleSystemStopBehavior stopBehavior)
public void Stop(bool withChildren)
public void Stop()
public void Clear(bool withChildren)
public void Clear()
public bool IsAlive(bool withChildren)
public bool IsAlive()
public void Emit(int count)
private void INTERNAL_CALL_Emit(ParticleSystem self, int count)
private void Internal_EmitOld(Particle& particle)
public void Emit(EmitParams emitParams, int count)
private void Internal_Emit(EmitParams& emitParams, int count)
public void TriggerSubEmitter(int subEmitterIndex)
public void TriggerSubEmitter(int subEmitterIndex, Particle& particle)
public void TriggerSubEmitter(int subEmitterIndex, List`1<Particle> particles)
internal void Internal_TriggerSubEmitter(int subEmitterIndex, object particles)
public void Emit(Vector3 position, Vector3 velocity, float size, float lifetime, Color32 color)
public void Emit(Particle particle)
public float get_startDelay()
public void set_startDelay(float value)
public bool get_loop()
public void set_loop(bool value)
public bool get_playOnAwake()
public void set_playOnAwake(bool value)
public float get_duration()
public float get_playbackSpeed()
public void set_playbackSpeed(float value)
public bool get_enableEmission()
public void set_enableEmission(bool value)
public float get_emissionRate()
public void set_emissionRate(float value)
public float get_startSpeed()
public void set_startSpeed(float value)
public float get_startSize()
public void set_startSize(float value)
public Color get_startColor()
public void set_startColor(Color value)
public float get_startRotation()
public void set_startRotation(float value)
public Vector3 get_startRotation3D()
public void set_startRotation3D(Vector3 value)
public float get_startLifetime()
public void set_startLifetime(float value)
public float get_gravityModifier()
public void set_gravityModifier(float value)
public int get_maxParticles()
public void set_maxParticles(int value)
public ParticleSystemSimulationSpace get_simulationSpace()
public void set_simulationSpace(ParticleSystemSimulationSpace value)
public ParticleSystemScalingMode get_scalingMode()
public void set_scalingMode(ParticleSystemScalingMode value)
}
public UnityEngine.ParticleSystemAnimationMode : Enum {
public int value__
public ParticleSystemAnimationMode Grid
public ParticleSystemAnimationMode Sprites
}
public UnityEngine.ParticleSystemAnimationType : Enum {
public int value__
public ParticleSystemAnimationType WholeSheet
public ParticleSystemAnimationType SingleRow
}
public UnityEngine.ParticleSystemCollisionMode : Enum {
public int value__
public ParticleSystemCollisionMode Collision3D
public ParticleSystemCollisionMode Collision2D
}
public UnityEngine.ParticleSystemCollisionQuality : Enum {
public int value__
public ParticleSystemCollisionQuality High
public ParticleSystemCollisionQuality Medium
public ParticleSystemCollisionQuality Low
}
public UnityEngine.ParticleSystemCollisionType : Enum {
public int value__
public ParticleSystemCollisionType Planes
public ParticleSystemCollisionType World
}
public UnityEngine.ParticleSystemCurveMode : Enum {
public int value__
public ParticleSystemCurveMode Constant
public ParticleSystemCurveMode Curve
public ParticleSystemCurveMode TwoCurves
public ParticleSystemCurveMode TwoConstants
}
public UnityEngine.ParticleSystemCustomData : Enum {
public int value__
public ParticleSystemCustomData Custom1
public ParticleSystemCustomData Custom2
}
public UnityEngine.ParticleSystemCustomDataMode : Enum {
public int value__
public ParticleSystemCustomDataMode Disabled
public ParticleSystemCustomDataMode Vector
public ParticleSystemCustomDataMode Color
}
public UnityEngine.ParticleSystemEmissionType : Enum {
public int value__
public ParticleSystemEmissionType Time
public ParticleSystemEmissionType Distance
}
public UnityEngine.ParticleSystemEmitterVelocityMode : Enum {
public int value__
public ParticleSystemEmitterVelocityMode Transform
public ParticleSystemEmitterVelocityMode Rigidbody
}
internal UnityEngine.ParticleSystemExtensionsImpl : object {
internal int GetSafeCollisionEventSize(ParticleSystem ps)
internal int GetCollisionEventsDeprecated(ParticleSystem ps, GameObject go, ParticleCollisionEvent[] collisionEvents)
internal int GetSafeTriggerParticlesSize(ParticleSystem ps, int type)
internal int GetCollisionEvents(ParticleSystem ps, GameObject go, object collisionEvents)
internal int GetTriggerParticles(ParticleSystem ps, int type, object particles)
internal void SetTriggerParticles(ParticleSystem ps, int type, object particles, int offset, int count)
}
public UnityEngine.ParticleSystemGradientMode : Enum {
public int value__
public ParticleSystemGradientMode Color
public ParticleSystemGradientMode Gradient
public ParticleSystemGradientMode TwoColors
public ParticleSystemGradientMode TwoGradients
public ParticleSystemGradientMode RandomColor
}
public UnityEngine.ParticleSystemInheritVelocityMode : Enum {
public int value__
public ParticleSystemInheritVelocityMode Initial
public ParticleSystemInheritVelocityMode Current
}
public UnityEngine.ParticleSystemMeshShapeType : Enum {
public int value__
public ParticleSystemMeshShapeType Vertex
public ParticleSystemMeshShapeType Edge
public ParticleSystemMeshShapeType Triangle
}
public UnityEngine.ParticleSystemNoiseQuality : Enum {
public int value__
public ParticleSystemNoiseQuality Low
public ParticleSystemNoiseQuality Medium
public ParticleSystemNoiseQuality High
}
public UnityEngine.ParticleSystemOverlapAction : Enum {
public int value__
public ParticleSystemOverlapAction Ignore
public ParticleSystemOverlapAction Kill
public ParticleSystemOverlapAction Callback
}
public UnityEngine.ParticleSystemRenderer : Renderer {
public Mesh mesh
public int meshCount
public int activeVertexStreamsCount
public ParticleSystemRenderSpace alignment
public ParticleSystemRenderMode renderMode
public ParticleSystemSortMode sortMode
public float lengthScale
public float velocityScale
public float cameraVelocityScale
public float normalDirection
public float sortingFudge
public float minParticleSize
public float maxParticleSize
public Vector3 pivot
public SpriteMaskInteraction maskInteraction
public Material trailMaterial
public bool enableGPUInstancing
public Mesh get_mesh()
public void set_mesh(Mesh value)
public int get_meshCount()
private int Internal_GetMeshCount()
public int GetMeshes(Mesh[] meshes)
public void SetMeshes(Mesh[] meshes)
public void SetMeshes(Mesh[] meshes, int size)
public int get_activeVertexStreamsCount()
public void SetActiveVertexStreams(List`1<ParticleSystemVertexStream> streams)
internal void SetActiveVertexStreamsInternal(object streams)
public void GetActiveVertexStreams(List`1<ParticleSystemVertexStream> streams)
internal void GetActiveVertexStreamsInternal(object streams)
public void EnableVertexStreams(ParticleSystemVertexStreams streams)
public void DisableVertexStreams(ParticleSystemVertexStreams streams)
public bool AreVertexStreamsEnabled(ParticleSystemVertexStreams streams)
public ParticleSystemVertexStreams GetEnabledVertexStreams(ParticleSystemVertexStreams streams)
internal void Internal_SetVertexStreams(ParticleSystemVertexStreams streams, bool enabled)
internal ParticleSystemVertexStreams Internal_GetEnabledVertexStreams(ParticleSystemVertexStreams streams)
public ParticleSystemRenderSpace get_alignment()
public void set_alignment(ParticleSystemRenderSpace value)
public ParticleSystemRenderMode get_renderMode()
public void set_renderMode(ParticleSystemRenderMode value)
public ParticleSystemSortMode get_sortMode()
public void set_sortMode(ParticleSystemSortMode value)
public float get_lengthScale()
public void set_lengthScale(float value)
public float get_velocityScale()
public void set_velocityScale(float value)
public float get_cameraVelocityScale()
public void set_cameraVelocityScale(float value)
public float get_normalDirection()
public void set_normalDirection(float value)
public float get_sortingFudge()
public void set_sortingFudge(float value)
public float get_minParticleSize()
public void set_minParticleSize(float value)
public float get_maxParticleSize()
public void set_maxParticleSize(float value)
public Vector3 get_pivot()
public void set_pivot(Vector3 value)
public SpriteMaskInteraction get_maskInteraction()
public void set_maskInteraction(SpriteMaskInteraction value)
public Material get_trailMaterial()
public void set_trailMaterial(Material value)
public bool get_enableGPUInstancing()
public void set_enableGPUInstancing(bool value)
private void get_pivot_Injected(Vector3& ret)
private void set_pivot_Injected(Vector3& value)
}
public UnityEngine.ParticleSystemRenderMode : Enum {
public int value__
public ParticleSystemRenderMode Billboard
public ParticleSystemRenderMode Stretch
public ParticleSystemRenderMode HorizontalBillboard
public ParticleSystemRenderMode VerticalBillboard
public ParticleSystemRenderMode Mesh
public ParticleSystemRenderMode None
}
public UnityEngine.ParticleSystemRenderSpace : Enum {
public int value__
public ParticleSystemRenderSpace View
public ParticleSystemRenderSpace World
public ParticleSystemRenderSpace Local
public ParticleSystemRenderSpace Facing
public ParticleSystemRenderSpace Velocity
}
public UnityEngine.ParticleSystemScalingMode : Enum {
public int value__
public ParticleSystemScalingMode Hierarchy
public ParticleSystemScalingMode Local
public ParticleSystemScalingMode Shape
}
public UnityEngine.ParticleSystemShapeMultiModeValue : Enum {
public int value__
public ParticleSystemShapeMultiModeValue Random
public ParticleSystemShapeMultiModeValue Loop
public ParticleSystemShapeMultiModeValue PingPong
public ParticleSystemShapeMultiModeValue BurstSpread
}
public UnityEngine.ParticleSystemShapeTextureChannel : Enum {
public int value__
public ParticleSystemShapeTextureChannel Red
public ParticleSystemShapeTextureChannel Green
public ParticleSystemShapeTextureChannel Blue
public ParticleSystemShapeTextureChannel Alpha
}
public UnityEngine.ParticleSystemShapeType : Enum {
public int value__
public ParticleSystemShapeType Sphere
public ParticleSystemShapeType SphereShell
public ParticleSystemShapeType Hemisphere
public ParticleSystemShapeType HemisphereShell
public ParticleSystemShapeType Cone
public ParticleSystemShapeType Box
public ParticleSystemShapeType Mesh
public ParticleSystemShapeType ConeShell
public ParticleSystemShapeType ConeVolume
public ParticleSystemShapeType ConeVolumeShell
public ParticleSystemShapeType Circle
public ParticleSystemShapeType CircleEdge
public ParticleSystemShapeType SingleSidedEdge
public ParticleSystemShapeType MeshRenderer
public ParticleSystemShapeType SkinnedMeshRenderer
public ParticleSystemShapeType BoxShell
public ParticleSystemShapeType BoxEdge
public ParticleSystemShapeType Donut
public ParticleSystemShapeType Rectangle
}
public UnityEngine.ParticleSystemSimulationSpace : Enum {
public int value__
public ParticleSystemSimulationSpace Local
public ParticleSystemSimulationSpace World
public ParticleSystemSimulationSpace Custom
}
public UnityEngine.ParticleSystemSortMode : Enum {
public int value__
public ParticleSystemSortMode None
public ParticleSystemSortMode Distance
public ParticleSystemSortMode OldestInFront
public ParticleSystemSortMode YoungestInFront
}
public UnityEngine.ParticleSystemStopAction : Enum {
public int value__
public ParticleSystemStopAction None
public ParticleSystemStopAction Disable
public ParticleSystemStopAction Destroy
public ParticleSystemStopAction Callback
}
public UnityEngine.ParticleSystemStopBehavior : Enum {
public int value__
public ParticleSystemStopBehavior StopEmittingAndClear
public ParticleSystemStopBehavior StopEmitting
}
public UnityEngine.ParticleSystemSubEmitterProperties : Enum {
public int value__
public ParticleSystemSubEmitterProperties InheritNothing
public ParticleSystemSubEmitterProperties InheritEverything
public ParticleSystemSubEmitterProperties InheritColor
public ParticleSystemSubEmitterProperties InheritSize
public ParticleSystemSubEmitterProperties InheritRotation
public ParticleSystemSubEmitterProperties InheritLifetime
}
public UnityEngine.ParticleSystemSubEmitterType : Enum {
public int value__
public ParticleSystemSubEmitterType Birth
public ParticleSystemSubEmitterType Collision
public ParticleSystemSubEmitterType Death
public ParticleSystemSubEmitterType Trigger
public ParticleSystemSubEmitterType Manual
}
public UnityEngine.ParticleSystemTrailMode : Enum {
public int value__
public ParticleSystemTrailMode PerParticle
public ParticleSystemTrailMode Ribbon
}
public UnityEngine.ParticleSystemTrailTextureMode : Enum {
public int value__
public ParticleSystemTrailTextureMode Stretch
public ParticleSystemTrailTextureMode Tile
public ParticleSystemTrailTextureMode DistributePerSegment
public ParticleSystemTrailTextureMode RepeatPerSegment
}
public UnityEngine.ParticleSystemTriggerEventType : Enum {
public int value__
public ParticleSystemTriggerEventType Inside
public ParticleSystemTriggerEventType Outside
public ParticleSystemTriggerEventType Enter
public ParticleSystemTriggerEventType Exit
}
public UnityEngine.ParticleSystemVertexStream : Enum {
public int value__
public ParticleSystemVertexStream Position
public ParticleSystemVertexStream Normal
public ParticleSystemVertexStream Tangent
public ParticleSystemVertexStream Color
public ParticleSystemVertexStream UV
public ParticleSystemVertexStream UV2
public ParticleSystemVertexStream UV3
public ParticleSystemVertexStream UV4
public ParticleSystemVertexStream AnimBlend
public ParticleSystemVertexStream AnimFrame
public ParticleSystemVertexStream Center
public ParticleSystemVertexStream VertexID
public ParticleSystemVertexStream SizeX
public ParticleSystemVertexStream SizeXY
public ParticleSystemVertexStream SizeXYZ
public ParticleSystemVertexStream Rotation
public ParticleSystemVertexStream Rotation3D
public ParticleSystemVertexStream RotationSpeed
public ParticleSystemVertexStream RotationSpeed3D
public ParticleSystemVertexStream Velocity
public ParticleSystemVertexStream Speed
public ParticleSystemVertexStream AgePercent
public ParticleSystemVertexStream InvStartLifetime
public ParticleSystemVertexStream StableRandomX
public ParticleSystemVertexStream StableRandomXY
public ParticleSystemVertexStream StableRandomXYZ
public ParticleSystemVertexStream StableRandomXYZW
public ParticleSystemVertexStream VaryingRandomX
public ParticleSystemVertexStream VaryingRandomXY
public ParticleSystemVertexStream VaryingRandomXYZ
public ParticleSystemVertexStream VaryingRandomXYZW
public ParticleSystemVertexStream Custom1X
public ParticleSystemVertexStream Custom1XY
public ParticleSystemVertexStream Custom1XYZ
public ParticleSystemVertexStream Custom1XYZW
public ParticleSystemVertexStream Custom2X
public ParticleSystemVertexStream Custom2XY
public ParticleSystemVertexStream Custom2XYZ
public ParticleSystemVertexStream Custom2XYZW
public ParticleSystemVertexStream NoiseSumX
public ParticleSystemVertexStream NoiseSumXY
public ParticleSystemVertexStream NoiseSumXYZ
public ParticleSystemVertexStream NoiseImpulseX
public ParticleSystemVertexStream NoiseImpulseXY
public ParticleSystemVertexStream NoiseImpulseXYZ
}
public UnityEngine.ParticleSystemVertexStreams : Enum {
public int value__
public ParticleSystemVertexStreams Position
public ParticleSystemVertexStreams Normal
public ParticleSystemVertexStreams Tangent
public ParticleSystemVertexStreams Color
public ParticleSystemVertexStreams UV
public ParticleSystemVertexStreams UV2BlendAndFrame
public ParticleSystemVertexStreams CenterAndVertexID
public ParticleSystemVertexStreams Size
public ParticleSystemVertexStreams Rotation
public ParticleSystemVertexStreams Velocity
public ParticleSystemVertexStreams Lifetime
public ParticleSystemVertexStreams Custom1
public ParticleSystemVertexStreams Custom2
public ParticleSystemVertexStreams Random
public ParticleSystemVertexStreams None
public ParticleSystemVertexStreams All
}
public UnityEngine.Rendering.UVChannelFlags : Enum {
public int value__
public UVChannelFlags UV0
public UVChannelFlags UV1
public UVChannelFlags UV2
public UVChannelFlags UV3
}
