public Facepunch.Steamworks.Achievement : object {
private Client client
private string <Id>k__BackingField
private string <Name>k__BackingField
private string <Description>k__BackingField
private bool <State>k__BackingField
private DateTime <UnlockTime>k__BackingField
private int <iconId>k__BackingField
private int refreshCount
private Image _icon
public string Id
public string Name
public string Description
public bool State
public DateTime UnlockTime
private int iconId
public float GlobalUnlockedPercentage
public Image Icon
public string get_Id()
private void set_Id(string value)
public string get_Name()
private void set_Name(string value)
public string get_Description()
private void set_Description(string value)
public bool get_State()
private void set_State(bool value)
public DateTime get_UnlockTime()
private void set_UnlockTime(DateTime value)
private int get_iconId()
private void set_iconId(int value)
public float get_GlobalUnlockedPercentage()
public Image get_Icon()
public void .ctor(Client client, int index)
public bool Trigger(bool apply)
public bool Reset()
public bool Refresh()
}
public Facepunch.Steamworks.Achievements : object {
internal Client client
private Achievement[] <All>k__BackingField
private Action OnUpdated
private Action`1<Achievement> OnAchievementStateChanged
private List`1<Achievement> unlockedRecently
public Achievement[] All
public Achievement[] get_All()
private void set_All(Achievement[] value)
public void add_OnUpdated(Action value)
public void remove_OnUpdated(Action value)
public void add_OnAchievementStateChanged(Action`1<Achievement> value)
public void remove_OnAchievementStateChanged(Action`1<Achievement> value)
internal void .ctor(Client c)
public void Refresh()
internal void OnUnlocked(Achievement a)
public void Dispose()
public Achievement Find(string identifier)
public bool Trigger(string identifier, bool apply)
public bool Reset(string identifier)
private void UserStatsReceived(UserStatsReceived_t stats)
private void UserStatsStored(UserStatsStored_t stats)
}
public Facepunch.Steamworks.App : object {
internal Client client
private DlcInstalledDelegate OnDlcInstalled
internal void .ctor(Client c)
public void add_OnDlcInstalled(DlcInstalledDelegate value)
public void remove_OnDlcInstalled(DlcInstalledDelegate value)
private void DlcInstalled(DlcInstalled_t data)
public void Dispose()
public void MarkContentCorrupt(bool missingFilesOnly)
public void InstallDlc(UInt32 appId)
public void UninstallDlc(UInt32 appId)
public DateTime PurchaseTime(UInt32 appId)
public bool IsSubscribed(UInt32 appId)
public bool IsInstalled(UInt32 appId)
public bool IsDlcInstalled(UInt32 appId)
public string GetName(UInt32 appId)
public string GetInstallFolder(UInt32 appId)
public int GetBuildId(UInt32 appId)
}
public Facepunch.Steamworks.Architecture : Enum {
public int value__
public Architecture Unset
public Architecture x86
public Architecture x64
}
public Facepunch.Steamworks.Auth : object {
internal Client client
public Ticket GetAuthSessionTicket()
}
public Facepunch.Steamworks.BaseSteamworks : object {
private UInt32 <AppId>k__BackingField
private Networking <Networking>k__BackingField
private Inventory <Inventory>k__BackingField
private Workshop <Workshop>k__BackingField
private Action OnUpdate
internal NativeInterface native
private List`1<CallbackHandle> CallbackHandles
private List`1<CallResult> CallResults
protected bool disposed
public Action`1<object> OnAnyCallback
private Dictionary`2<Type, List`1<Action`1<object>>> Callbacks
public UInt32 AppId
public Networking Networking
public Inventory Inventory
public Workshop Workshop
public bool IsValid
internal bool IsGameServer
public UInt32 get_AppId()
internal void set_AppId(UInt32 value)
public Networking get_Networking()
internal void set_Networking(Networking value)
public Inventory get_Inventory()
internal void set_Inventory(Inventory value)
public Workshop get_Workshop()
internal void set_Workshop(Workshop value)
internal void add_OnUpdate(Action value)
internal void remove_OnUpdate(Action value)
protected void .ctor(UInt32 appId)
protected void Finalize()
public void Dispose()
protected void SetupCommonInterfaces()
public bool get_IsValid()
internal bool get_IsGameServer()
internal void RegisterCallbackHandle(CallbackHandle handle)
internal void RegisterCallResult(CallResult handle)
internal void UnregisterCallResult(CallResult handle)
public void Update()
public void RunUpdateCallbacks()
public void UpdateWhile(Func`1<bool> func)
internal List`1<Action`1<object>> CallbackList(Type T)
internal void OnCallback(T data)
internal void RegisterCallback(Action`1<T> func)
}
public Facepunch.Steamworks.Callbacks.FailureCallback : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public void Invoke(Result reason)
public IAsyncResult BeginInvoke(Result reason, AsyncCallback callback, object object)
public void EndInvoke(IAsyncResult result)
}
public Facepunch.Steamworks.Callbacks.Result : Enum {
public int value__
public Result OK
public Result Fail
public Result NoConnection
public Result InvalidPassword
public Result LoggedInElsewhere
public Result InvalidProtocolVer
public Result InvalidParam
public Result FileNotFound
public Result Busy
public Result InvalidState
public Result InvalidName
public Result InvalidEmail
public Result DuplicateName
public Result AccessDenied
public Result Timeout
public Result Banned
public Result AccountNotFound
public Result InvalidSteamID
public Result ServiceUnavailable
public Result NotLoggedOn
public Result Pending
public Result EncryptionFailure
public Result InsufficientPrivilege
public Result LimitExceeded
public Result Revoked
public Result Expired
public Result AlreadyRedeemed
public Result DuplicateRequest
public Result AlreadyOwned
public Result IPNotFound
public Result PersistFailed
public Result LockingFailed
public Result LogonSessionReplaced
public Result ConnectFailed
public Result HandshakeFailed
public Result IOFailure
public Result RemoteDisconnect
public Result ShoppingCartNotFound
public Result Blocked
public Result Ignored
public Result NoMatch
public Result AccountDisabled
public Result ServiceReadOnly
public Result AccountNotFeatured
public Result AdministratorOK
public Result ContentVersion
public Result TryAnotherCM
public Result PasswordRequiredToKickSession
public Result AlreadyLoggedInElsewhere
public Result Suspended
public Result Cancelled
public Result DataCorruption
public Result DiskFull
public Result RemoteCallFailed
public Result PasswordUnset
public Result ExternalAccountUnlinked
public Result PSNTicketInvalid
public Result ExternalAccountAlreadyLinked
public Result RemoteFileConflict
public Result IllegalPassword
public Result SameAsPreviousValue
public Result AccountLogonDenied
public Result CannotUseOldPassword
public Result InvalidLoginAuthCode
public Result AccountLogonDeniedNoMail
public Result HardwareNotCapableOfIPT
public Result IPTInitError
public Result ParentalControlRestricted
public Result FacebookQueryError
public Result ExpiredLoginAuthCode
public Result IPLoginRestrictionFailed
public Result AccountLockedDown
public Result AccountLogonDeniedVerifiedEmailRequired
public Result NoMatchingURL
public Result BadResponse
public Result RequirePasswordReEntry
public Result ValueOutOfRange
public Result UnexpectedError
public Result Disabled
public Result InvalidCEGSubmission
public Result RestrictedDevice
public Result RegionLocked
public Result RateLimitExceeded
public Result AccountLoginDeniedNeedTwoFactor
public Result ItemDeleted
public Result AccountLoginDeniedThrottle
public Result TwoFactorCodeMismatch
public Result TwoFactorActivationCodeMismatch
public Result AccountAssociatedToMultiplePartners
public Result NotModified
public Result NoMobileDevice
public Result TimeNotSynced
public Result SmsCodeFailed
public Result AccountLimitExceeded
public Result AccountActivityLimitExceeded
public Result PhoneActivityLimitExceeded
public Result RefundToWallet
public Result EmailSendFailure
public Result NotSettled
public Result NeedCaptcha
public Result GSLTDenied
public Result GSOwnerDenied
public Result InvalidItemType
public Result IPBanned
}
public Facepunch.Steamworks.Client : BaseSteamworks {
private Client <Instance>k__BackingField
private string <Username>k__BackingField
private ulong <SteamId>k__BackingField
private ulong <OwnerSteamId>k__BackingField
private string <BetaName>k__BackingField
private int <BuildId>k__BackingField
private DirectoryInfo <InstallFolder>k__BackingField
private string <CurrentLanguage>k__BackingField
private String[] <AvailableLanguages>k__BackingField
private Voice <Voice>k__BackingField
private ServerList <ServerList>k__BackingField
private LobbyList <LobbyList>k__BackingField
private App <App>k__BackingField
private Achievements <Achievements>k__BackingField
private Stats <Stats>k__BackingField
private MicroTransactions <MicroTransactions>k__BackingField
private User <User>k__BackingField
private RemoteStorage <RemoteStorage>k__BackingField
private Auth _auth
private Friends _friends
private Lobby _lobby
private Overlay _overlay
private Screenshots _screenshots
public Client Instance
public string Username
public ulong SteamId
public ulong OwnerSteamId
public string BetaName
public int BuildId
public DirectoryInfo InstallFolder
public string CurrentLanguage
public String[] AvailableLanguages
public Voice Voice
public ServerList ServerList
public LobbyList LobbyList
public App App
public Achievements Achievements
public Stats Stats
public MicroTransactions MicroTransactions
public User User
public RemoteStorage RemoteStorage
public bool IsSubscribed
public bool IsCybercafe
public bool IsSubscribedFromFreeWeekend
public bool IsLowViolence
public Auth Auth
public Friends Friends
public Lobby Lobby
public Overlay Overlay
public Screenshots Screenshots
public Client get_Instance()
private void set_Instance(Client value)
public string get_Username()
private void set_Username(string value)
public ulong get_SteamId()
private void set_SteamId(ulong value)
public ulong get_OwnerSteamId()
private void set_OwnerSteamId(ulong value)
public string get_BetaName()
private void set_BetaName(string value)
public int get_BuildId()
private void set_BuildId(int value)
public DirectoryInfo get_InstallFolder()
private void set_InstallFolder(DirectoryInfo value)
public string get_CurrentLanguage()
public String[] get_AvailableLanguages()
public Voice get_Voice()
private void set_Voice(Voice value)
public ServerList get_ServerList()
private void set_ServerList(ServerList value)
public LobbyList get_LobbyList()
private void set_LobbyList(LobbyList value)
public App get_App()
private void set_App(App value)
public Achievements get_Achievements()
private void set_Achievements(Achievements value)
public Stats get_Stats()
private void set_Stats(Stats value)
public MicroTransactions get_MicroTransactions()
private void set_MicroTransactions(MicroTransactions value)
public User get_User()
private void set_User(User value)
public RemoteStorage get_RemoteStorage()
private void set_RemoteStorage(RemoteStorage value)
public void .ctor(UInt32 appId)
protected void Finalize()
public void Update()
public void RunCallbacks()
public void Dispose()
public Leaderboard GetLeaderboard(string name, LeaderboardSortMethod sortMethod, LeaderboardDisplayType displayType)
public bool get_IsSubscribed()
public bool get_IsCybercafe()
public bool get_IsSubscribedFromFreeWeekend()
public bool get_IsLowViolence()
public bool RestartIfNecessary(UInt32 appid)
public Auth get_Auth()
public Friends get_Friends()
public Lobby get_Lobby()
public Overlay get_Overlay()
public Screenshots get_Screenshots()
}
public Facepunch.Steamworks.Color : ValueType {
public byte r
public byte g
public byte b
public byte a
}
public Facepunch.Steamworks.Config : object {
private bool <UseThisCall>k__BackingField
public bool UseThisCall
public void ForUnity(string platform)
public bool get_UseThisCall()
public void set_UseThisCall(bool value)
public void ForcePlatform(OperatingSystem os, Architecture arch)
}
public Facepunch.Steamworks.Friends : object {
internal Client client
private Byte[] buffer
private ChatMessageDelegate OnChatMessage
private bool _listenForFriendsMessages
private JoinRequestedDelegate OnInvitedToGame
private List`1<SteamFriend> _allFriends
private List`1<PersonaCallback> PersonaCallbacks
public bool ListenForFriendsMessages
public IEnumerable`1<SteamFriend> All
public IEnumerable`1<SteamFriend> AllFriends
public IEnumerable`1<SteamFriend> AllBlocked
internal void .ctor(Client c)
public void add_OnChatMessage(ChatMessageDelegate value)
public void remove_OnChatMessage(ChatMessageDelegate value)
private void OnFriendChatMessage(GameConnectedFriendChatMsg_t data)
public bool get_ListenForFriendsMessages()
public void set_ListenForFriendsMessages(bool value)
public void add_OnInvitedToGame(JoinRequestedDelegate value)
public void remove_OnInvitedToGame(JoinRequestedDelegate value)
private void OnGameJoinRequested(GameRichPresenceJoinRequested_t data)
public bool UpdateInformation(ulong steamid)
public string GetName(ulong steamid)
public IEnumerable`1<SteamFriend> get_All()
public IEnumerable`1<SteamFriend> get_AllFriends()
public IEnumerable`1<SteamFriend> get_AllBlocked()
public void Refresh()
public Image GetCachedAvatar(AvatarSize size, ulong steamid)
public void GetAvatar(AvatarSize size, ulong steamid, Action`1<Image> callback)
public SteamFriend Get(ulong steamid)
internal void Cycle()
private void OnPersonaStateChange(PersonaStateChange_t data)
private void LoadAvatarForSteamId(ulong Steamid)
private void OnAvatarImageLoaded(AvatarImageLoaded_t data)
}
public Facepunch.Steamworks.Image : object {
private int <Id>k__BackingField
private int <Width>k__BackingField
private int <Height>k__BackingField
private Byte[] <Data>k__BackingField
private bool <IsLoaded>k__BackingField
private bool <IsError>k__BackingField
public int Id
public int Width
public int Height
public Byte[] Data
public bool IsLoaded
public bool IsError
public int get_Id()
internal void set_Id(int value)
public int get_Width()
internal void set_Width(int value)
public int get_Height()
internal void set_Height(int value)
public Byte[] get_Data()
internal void set_Data(Byte[] value)
public bool get_IsLoaded()
internal void set_IsLoaded(bool value)
public bool get_IsError()
internal void set_IsError(bool value)
internal bool TryLoad(SteamUtils utils)
public Color GetPixel(int x, int y)
}
internal Facepunch.Steamworks.Interop.NativeInterface : object {
internal SteamApi api
internal SteamClient client
internal SteamUser user
internal SteamApps apps
internal SteamAppList applist
internal SteamFriends friends
internal SteamMatchmakingServers servers
internal SteamMatchmaking matchmaking
internal SteamInventory inventory
internal SteamNetworking networking
internal SteamUserStats userstats
internal SteamUtils utils
internal SteamScreenshots screenshots
internal SteamHTTP http
internal SteamUGC ugc
internal SteamGameServer gameServer
internal SteamGameServerStats gameServerStats
internal SteamRemoteStorage remoteStorage
private bool isServer
internal bool InitClient(BaseSteamworks steamworks)
internal bool InitServer(BaseSteamworks steamworks, UInt32 IpAddress, ushort usPort, ushort GamePort, ushort QueryPort, int eServerMode, string pchVersionString)
public void FillInterfaces(BaseSteamworks steamworks, int hpipe, int huser)
public void Dispose()
}
public Facepunch.Steamworks.Inventory : object {
public Action OnUpdate
public Item[] Items
public Byte[] SerializedItems
public DateTime SerializedExpireTime
internal UInt32 LastTimestamp
internal SteamInventory inventory
private bool <IsServer>k__BackingField
private Action OnDefinitionsUpdated
public Definition[] Definitions
private string <Currency>k__BackingField
private bool IsServer
public IEnumerable`1<Definition> DefinitionsWithPrices
public string Currency
private bool get_IsServer()
private void set_IsServer(bool value)
public void add_OnDefinitionsUpdated(Action value)
public void remove_OnDefinitionsUpdated(Action value)
internal void .ctor(BaseSteamworks steamworks, SteamInventory c, bool server)
private void onDefinitionsUpdated(SteamInventoryDefinitionUpdate_t obj)
private bool LoadDefinitions()
private void onFullUpdate(SteamInventoryFullUpdate_t data)
private void onResultReady(SteamInventoryResultReady_t data)
private void onResult(Result r, bool serialize)
internal void ApplyResult(Result r)
public void Dispose()
public void PlaytimeHeartbeat()
public void Refresh()
public Definition CreateDefinition(int id)
public void FetchItemDefinitions()
public void Update()
public IEnumerable`1<Definition> get_DefinitionsWithPrices()
public float PriceCategoryToFloat(string price)
public Definition FindDefinition(int DefinitionId)
public Result Deserialize(Byte[] data, int dataLength)
public Result CraftItem(Item[] list, Definition target)
public Result CraftItem(Amount[] list, Definition target)
public Result SplitStack(Item item, int quantity)
public Result Stack(Item source, Item dest, int quantity)
public Result GenerateItem(Definition target, int amount)
public bool StartPurchase(Definition[] items, StartPurchaseSuccess callback)
public string get_Currency()
private void set_Currency(string value)
public void UpdatePrices()
public void TriggerPromoDrop(int definitionId)
public void TriggerItemDrop(int definitionId)
public void GrantAllPromoItems()
internal Item ItemFrom(SteamInventoryResult_t handle, SteamItemDetails_t detail, int index)
private Definition <LoadDefinitions>b__15_0(SteamItemDef_t x)
private void <UpdatePrices>b__43_0(SteamInventoryRequestPricesResult_t result, bool b)
}
public Facepunch.Steamworks.Leaderboard : object {
private Int32[] subEntriesBuffer
internal ulong BoardId
internal Client client
private Queue`1<Action> _onCreated
public Entry[] Results
private string <Name>k__BackingField
private int <TotalEntries>k__BackingField
private bool <IsError>k__BackingField
private bool <IsQuerying>k__BackingField
public Action OnBoardInformation
private List`1<Entry> _sEntryBuffer
public string Name
public int TotalEntries
public bool IsValid
public bool IsError
public bool IsQuerying
public ulong GetBoardId()
internal void .ctor(Client c)
public string get_Name()
private void set_Name(string value)
public int get_TotalEntries()
private void set_TotalEntries(int value)
public bool get_IsValid()
public bool get_IsError()
private void set_IsError(bool value)
public bool get_IsQuerying()
private void set_IsQuerying(bool value)
public void Dispose()
private void DispatchOnCreatedCallbacks()
private bool DeferOnCreated(Action onValid, FailureCallback onFailure)
internal void OnBoardCreated(LeaderboardFindResult_t result, bool error)
public bool AddScore(bool onlyIfBeatsOldScore, int score, Int32[] subscores)
public bool AddScore(bool onlyIfBeatsOldScore, int score, Int32[] subscores, AddScoreCallback onSuccess, FailureCallback onFailure)
public bool AttachRemoteFile(RemoteFile file, AttachRemoteFileCallback onSuccess, FailureCallback onFailure)
public bool FetchScores(RequestType RequestType, int start, int end)
private void ReadScores(LeaderboardScoresDownloaded_t result, List`1<Entry> dest)
public bool FetchScores(RequestType RequestType, int start, int end, FetchScoresCallback onSuccess, FailureCallback onFailure)
public bool FetchUsersScores(RequestType RequestType, UInt64[] steamIds, FetchScoresCallback onSuccess, FailureCallback onFailure)
private void OnScores(LeaderboardScoresDownloaded_t result, bool error)
}
public Facepunch.Steamworks.Lobby : object {
internal Client client
private ulong <CurrentLobby>k__BackingField
private LobbyData <CurrentLobbyData>k__BackingField
public Action`1<bool> OnLobbyJoined
internal Type createdLobbyType
public Action`1<bool> OnLobbyCreated
public Action OnLobbyDataUpdated
public Action`1<ulong> OnLobbyMemberDataUpdated
private Byte[] chatMessageData
public Action`3<ulong, Byte[], int> OnChatMessageRecieved
public Action`2<ulong, string> OnChatStringRecieved
public Action`3<MemberStateChange, ulong, ulong> OnLobbyStateChanged
public Action`2<ulong, ulong> OnUserInvitedToLobby
public Action`1<ulong> OnLobbyJoinRequested
public ulong CurrentLobby
public LobbyData CurrentLobbyData
public bool IsValid
public Type LobbyType
public string Name
public bool IsOwner
public ulong Owner
public bool Joinable
public int MaxMembers
public int NumMembers
public IPAddress GameServerIp
public int GameServerPort
public ulong GameServerSteamId
public void .ctor(Client c)
public ulong get_CurrentLobby()
private void set_CurrentLobby(ulong value)
public LobbyData get_CurrentLobbyData()
private void set_CurrentLobbyData(LobbyData value)
public bool get_IsValid()
public void Join(ulong lobbyID)
private void OnLobbyJoinedAPI(LobbyEnter_t callback, bool error)
public void Create(Type lobbyType, int maxMembers)
internal void OnLobbyCreatedAPI(LobbyCreated_t callback, bool error)
public void SetMemberData(string key, string value)
public string GetMemberData(ulong steamID, string key)
internal void OnLobbyDataUpdatedAPI(LobbyDataUpdate_t callback)
internal void UpdateLobbyData()
public Type get_LobbyType()
public void set_LobbyType(Type value)
private void OnLobbyChatMessageRecievedAPI(LobbyChatMsg_t callback)
public bool SendChatMessage(string message)
internal void OnLobbyStateUpdatedAPI(LobbyChatUpdate_t callback)
public string get_Name()
public void set_Name(string value)
public bool get_IsOwner()
public ulong get_Owner()
public void set_Owner(ulong value)
public bool get_Joinable()
public void set_Joinable(bool value)
public int get_MaxMembers()
public void set_MaxMembers(int value)
public int get_NumMembers()
public void Leave()
public void Dispose()
public UInt64[] GetMemberIDs()
public bool UserIsInCurrentLobby(ulong steamID)
public bool InviteUserToLobby(ulong friendID)
internal void OnUserInvitedToLobbyAPI(LobbyInvite_t callback)
public void OpenFriendInviteOverlay()
internal void OnLobbyJoinRequestedAPI(GameLobbyJoinRequested_t callback)
internal void OnLobbyMemberPersonaChangeAPI(PersonaStateChange_t callback)
public bool SetGameServer(IPAddress ip, int port, ulong serverSteamId)
public IPAddress get_GameServerIp()
public int get_GameServerPort()
public ulong get_GameServerSteamId()
}
public Facepunch.Steamworks.LobbyList : object {
internal Client client
private List`1<Lobby> <Lobbies>k__BackingField
private bool <Finished>k__BackingField
internal List`1<ulong> requests
public Action OnLobbiesUpdated
public List`1<Lobby> Lobbies
public bool Finished
public List`1<Lobby> get_Lobbies()
private void set_Lobbies(List`1<Lobby> value)
public bool get_Finished()
private void set_Finished(bool value)
internal void .ctor(Client client)
public void Refresh(Filter filter)
private void OnLobbyList(LobbyMatchList_t callback, bool error)
private void checkFinished()
private void OnLobbyDataUpdated(LobbyDataUpdate_t callback)
public void Dispose()
}
public Facepunch.Steamworks.MicroTransactions : object {
internal Client client
private AuthorizationResponse OnAuthorizationResponse
public void add_OnAuthorizationResponse(AuthorizationResponse value)
public void remove_OnAuthorizationResponse(AuthorizationResponse value)
internal void .ctor(Client c)
private void onMicroTxnAuthorizationResponse(MicroTxnAuthorizationResponse_t arg1)
public void Dispose()
}
public Facepunch.Steamworks.Networking : object {
private Byte[] ReceiveBuffer
public OnRecievedP2PData OnP2PData
public Func`2<ulong, bool> OnIncomingConnection
public Action`2<ulong, SessionError> OnConnectionFailed
private List`1<int> ListenChannels
private Stopwatch UpdateTimer
internal SteamNetworking networking
internal void .ctor(BaseSteamworks steamworks, SteamNetworking networking)
public void Dispose()
public void Update()
public void SetListenChannel(int ChannelId, bool Listen)
private void onP2PConnectionRequest(P2PSessionRequest_t o)
private void onP2PConnectionFailed(P2PSessionConnectFail_t o)
public bool SendP2PPacket(ulong steamid, Byte[] data, int length, SendType eP2PSendType, int nChannel)
private bool ReadP2PPacket(int channel)
public bool CloseSession(ulong steamId)
}
public Facepunch.Steamworks.OperatingSystem : Enum {
public int value__
public OperatingSystem Unset
public OperatingSystem Windows
public OperatingSystem Linux
public OperatingSystem Osx
}
public Facepunch.Steamworks.Overlay : object {
internal Client client
public bool Enabled
public bool get_Enabled()
public void OpenUserPage(string name, ulong steamid)
public void OpenProfile(ulong steamid)
public void OpenChat(ulong steamid)
public void OpenTrade(ulong steamid)
public void OpenStats(ulong steamid)
public void OpenAchievements(ulong steamid)
public void AddFriend(ulong steamid)
public void RemoveFriend(ulong steamid)
public void AcceptFriendRequest(ulong steamid)
public void IgnoreFriendRequest(ulong steamid)
public void OpenUrl(string url)
}
public Facepunch.Steamworks.RemoteFile : object {
internal RemoteStorage remoteStorage
private bool _isUgc
private string _fileName
private int _sizeInBytes
private long _timestamp
private UGCHandle_t _handle
private ulong _ownerId
private bool _isDownloading
private Byte[] _downloadedData
private bool <Exists>k__BackingField
public bool Exists
public bool IsDownloading
public bool IsDownloaded
public bool IsShared
internal UGCHandle_t UGCHandle
public ulong SharingId
public string FileName
public ulong OwnerId
public int SizeInBytes
public long FileTimestamp
public bool get_Exists()
internal void set_Exists(bool value)
public bool get_IsDownloading()
public bool get_IsDownloaded()
public bool get_IsShared()
internal UGCHandle_t get_UGCHandle()
public ulong get_SharingId()
public string get_FileName()
public ulong get_OwnerId()
public int get_SizeInBytes()
internal void set_SizeInBytes(int value)
public long get_FileTimestamp()
internal void set_FileTimestamp(long value)
internal void .ctor(RemoteStorage r, UGCHandle_t handle)
internal void .ctor(RemoteStorage r, string name, ulong ownerId, int sizeInBytes, long timestamp)
public RemoteFileWriteStream OpenWrite()
public void WriteAllBytes(Byte[] buffer)
public void WriteAllText(string text, Encoding encoding)
public bool GetDownloadProgress(Int32& bytesDownloaded, Int32& bytesExpected)
public bool Download(DownloadCallback onSuccess, FailureCallback onFailure)
public Stream OpenRead()
public Byte[] ReadAllBytes()
public string ReadAllText(Encoding encoding)
public bool Share(ShareCallback onSuccess, FailureCallback onFailure)
public bool Delete()
public bool Forget()
private void GetUGCDetails()
}
public Facepunch.Steamworks.RemoteFileWriteStream : Stream {
internal RemoteStorage remoteStorage
private UGCFileWriteStreamHandle_t _handle
private RemoteFile _file
private int _written
private bool _closed
public bool CanRead
public bool CanSeek
public bool CanWrite
public long Length
public long Position
internal void .ctor(RemoteStorage r, RemoteFile file)
public void Flush()
public int Read(Byte[] buffer, int offset, int count)
public long Seek(long offset, SeekOrigin origin)
public void SetLength(long value)
public void Write(Byte[] buffer, int offset, int count)
public bool get_CanRead()
public bool get_CanSeek()
public bool get_CanWrite()
public long get_Length()
public long get_Position()
public void set_Position(long value)
public void Cancel()
public void Close()
protected void Dispose(bool disposing)
}
public Facepunch.Steamworks.RemoteStorage : object {
internal Client client
internal SteamRemoteStorage native
private bool _filesInvalid
private List`1<RemoteFile> _files
public bool IsCloudEnabledForAccount
public bool IsCloudEnabledForApp
public int FileCount
public IEnumerable`1<RemoteFile> Files
public ulong QuotaUsed
public ulong QuotaTotal
public ulong QuotaRemaining
private string NormalizePath(string path)
internal void .ctor(Client c)
public bool get_IsCloudEnabledForAccount()
public bool get_IsCloudEnabledForApp()
public int get_FileCount()
public IEnumerable`1<RemoteFile> get_Files()
public RemoteFile CreateFile(string path)
public RemoteFile OpenFile(string path)
public RemoteFile OpenSharedFile(ulong sharingId)
public bool WriteString(string path, string text, Encoding encoding)
public bool WriteBytes(string path, Byte[] data)
public string ReadString(string path, Encoding encoding)
public Byte[] ReadBytes(string path)
internal void OnWrittenNewFile(RemoteFile file)
internal void InvalidateFiles()
private void UpdateFiles()
public bool FileExists(string path)
public void Dispose()
public ulong get_QuotaUsed()
public ulong get_QuotaTotal()
public ulong get_QuotaRemaining()
}
public Facepunch.Steamworks.Screenshots : object {
internal Client client
internal void .ctor(Client c)
public void Trigger()
public void Write(Byte[] rgbData, int width, int height)
public void AddScreenshotToLibrary(string filename, string thumbnailFilename, int width, int height)
public void AddScreenshotToLibrary(string filename, int width, int height)
}
public Facepunch.Steamworks.Server : BaseSteamworks {
private Server <Instance>k__BackingField
private ServerQuery <Query>k__BackingField
private ServerStats <Stats>k__BackingField
private ServerAuth <Auth>k__BackingField
private bool _dedicatedServer
private int _maxplayers
private int _botcount
private string _mapname
private string _modDir
private string _product
private string _gameDescription
private string _serverName
private bool _passworded
private string _gametags
private Dictionary`2<string, string> KeyValue
public Server Instance
internal bool IsGameServer
public ServerQuery Query
public ServerStats Stats
public ServerAuth Auth
public bool DedicatedServer
public int MaxPlayers
public int BotCount
public string MapName
public string ModDir
public string Product
public string GameDescription
public string ServerName
public bool Passworded
public string GameTags
public bool LoggedOn
public IPAddress PublicIp
public bool AutomaticHeartbeats
public int AutomaticHeartbeatRate
public Server get_Instance()
private void set_Instance(Server value)
internal bool get_IsGameServer()
public ServerQuery get_Query()
internal void set_Query(ServerQuery value)
public ServerStats get_Stats()
internal void set_Stats(ServerStats value)
public ServerAuth get_Auth()
internal void set_Auth(ServerAuth value)
public void .ctor(UInt32 appId, ServerInit init)
protected void Finalize()
public void Update()
public bool get_DedicatedServer()
public void set_DedicatedServer(bool value)
public int get_MaxPlayers()
public void set_MaxPlayers(int value)
public int get_BotCount()
public void set_BotCount(int value)
public string get_MapName()
public void set_MapName(string value)
public string get_ModDir()
internal void set_ModDir(string value)
public string get_Product()
internal void set_Product(string value)
public string get_GameDescription()
internal void set_GameDescription(string value)
public string get_ServerName()
public void set_ServerName(string value)
public bool get_Passworded()
public void set_Passworded(bool value)
public string get_GameTags()
public void set_GameTags(string value)
public void LogOnAnonymous()
public bool get_LoggedOn()
public void SetKey(string Key, string Value)
public void UpdatePlayer(ulong steamid, string name, int score)
public void Dispose()
public IPAddress get_PublicIp()
public void set_AutomaticHeartbeats(bool value)
public void set_AutomaticHeartbeatRate(int value)
public void ForceHeartbeat()
}
public Facepunch.Steamworks.ServerAuth : object {
internal Server server
public Action`3<ulong, ulong, Status> OnAuthChange
internal void .ctor(Server s)
private void OnAuthTicketValidate(ValidateAuthTicketResponse_t data)
public bool StartSession(Byte[] data, ulong steamid)
public void EndSession(ulong steamid)
}
public Facepunch.Steamworks.ServerInit : object {
public IPAddress IpAddress
public ushort SteamPort
public ushort GamePort
public ushort QueryPort
public bool Secure
public string VersionString
public string ModDir
public string GameDescription
public void .ctor(string modDir, string gameDesc)
public ServerInit RandomSteamPort()
public ServerInit QueryShareGamePort()
}
public Facepunch.Steamworks.ServerList : object {
internal Client client
private HashSet`1<ulong> FavouriteHash
private HashSet`1<ulong> HistoryHash
internal void .ctor(Client client)
internal void UpdateFavouriteList()
public void Dispose()
public Request Internet(Filter filter)
public Request Custom(IEnumerable`1<string> serverList)
public Request History(Filter filter)
public Request Favourites(Filter filter)
public Request Friends(Filter filter)
public Request Local(Filter filter)
internal bool IsFavourite(Server server)
internal bool IsHistory(Server server)
}
public Facepunch.Steamworks.ServerQuery : object {
internal Server server
internal Byte[] buffer
internal void .ctor(Server s)
public bool GetOutgoingPacket(Packet& packet)
public void Handle(Byte[] data, int size, UInt32 address, ushort port)
}
public Facepunch.Steamworks.ServerStats : object {
internal Server server
internal void .ctor(Server s)
public void Refresh(ulong steamid, Action`2<ulong, bool> Callback)
public void Commit(ulong steamid, Action`2<ulong, bool> Callback)
public bool SetInt(ulong steamid, string name, int stat)
public bool SetFloat(ulong steamid, string name, float stat)
public int GetInt(ulong steamid, string name, int defaultValue)
public float GetFloat(ulong steamid, string name, float defaultValue)
public bool SetAchievement(ulong steamid, string name)
public bool ClearAchievement(ulong steamid, string name)
public bool GetAchievement(ulong steamid, string name)
}
internal Facepunch.Steamworks.SourceServerQuery : object {
public List`1<SourceServerQuery> Current
private Byte[] A2S_SERVERQUERY_GETCHALLENGE
private byte A2S_RULES
public Boolean modreq(System.Runtime.CompilerServices.IsVolatile) IsRunning
public Boolean modreq(System.Runtime.CompilerServices.IsVolatile) IsSuccessful
private Server Server
private UdpClient udpClient
private IPEndPoint endPoint
private Thread thread
private Byte[] _challengeBytes
private Dictionary`2<string, string> rules
private Byte[] readBuffer
private Byte[] sendBuffer
public void Cycle()
public void .ctor(Server server, IPAddress address, int queryPort)
private void Update()
private void ThreadedStart(object obj)
private void GetRules()
private Byte[] Receive()
private void GetChallengeData()
private void Send(Byte[] message)
private Byte[] Combine(Byte[][] arrays)
public void Dispose()
}
public Facepunch.Steamworks.Stats : object {
internal Client client
internal void .ctor(Client c)
public bool StoreStats()
public void UpdateStats()
public void UpdateGlobalStats(int days)
public int GetInt(string name)
public long GetGlobalInt(string name)
public float GetFloat(string name)
public double GetGlobalFloat(string name)
public bool Set(string name, int value, bool store)
public bool Set(string name, float value, bool store)
public bool Add(string name, int amount, bool store)
public bool ResetAll(bool includeAchievements)
public void Dispose()
}
public Facepunch.Steamworks.SteamFriend : object {
private ulong <Id>k__BackingField
public string Name
private ulong <CurrentAppId>k__BackingField
private UInt32 <ServerIp>k__BackingField
private int <ServerGamePort>k__BackingField
private int <ServerQueryPort>k__BackingField
private ulong <ServerLobbyId>k__BackingField
private Client <Client>k__BackingField
private PersonaState personaState
private FriendRelationship relationship
public ulong Id
public bool IsBlocked
public bool IsFriend
public bool IsOnline
public bool IsAway
public bool IsBusy
public bool IsSnoozing
public bool IsPlayingThisGame
public bool IsPlaying
public ulong CurrentAppId
public UInt32 ServerIp
public int ServerGamePort
public int ServerQueryPort
public ulong ServerLobbyId
internal Client Client
public ulong get_Id()
internal void set_Id(ulong value)
public bool get_IsBlocked()
public bool get_IsFriend()
public bool get_IsOnline()
public bool get_IsAway()
public bool get_IsBusy()
public bool get_IsSnoozing()
public bool get_IsPlayingThisGame()
public bool get_IsPlaying()
public ulong get_CurrentAppId()
internal void set_CurrentAppId(ulong value)
public UInt32 get_ServerIp()
internal void set_ServerIp(UInt32 value)
public int get_ServerGamePort()
internal void set_ServerGamePort(int value)
public int get_ServerQueryPort()
internal void set_ServerQueryPort(int value)
public ulong get_ServerLobbyId()
internal void set_ServerLobbyId(ulong value)
internal Client get_Client()
internal void set_Client(Client value)
public string GetRichPresence(string key)
public void Refresh()
public Image GetAvatar(AvatarSize size)
public bool InviteToGame(string Text)
public bool SendMessage(string message)
}
public Facepunch.Steamworks.User : object {
internal Client client
internal Dictionary`2<string, string> richPresence
internal void .ctor(Client c)
public void Dispose()
public string GetRichPresence(string key)
public bool SetRichPresence(string key, string value)
public void ClearRichPresence()
}
public Facepunch.Steamworks.Utility : object {
internal UInt32 Swap(UInt32 x)
public UInt32 IpToInt32(IPAddress ipAddress)
public IPAddress Int32ToIp(UInt32 ipAddress)
internal string FormatPrice(string currency, ulong price)
public string ReadNullTerminatedUTF8String(BinaryReader br, Byte[] buffer)
}
public Facepunch.Steamworks.Voice : object {
private int ReadBufferSize
internal Client client
internal Byte[] ReadCompressedBuffer
internal Byte[] ReadUncompressedBuffer
internal Byte[] UncompressBuffer
public Action`2<Byte[], int> OnCompressedData
public Action`2<Byte[], int> OnUncompressedData
private Stopwatch UpdateTimer
private bool _wantsrecording
private DateTime <LastVoiceRecordTime>k__BackingField
public bool IsRecording
public UInt32 DesiredSampleRate
public UInt32 OptimalSampleRate
public bool WantsRecording
public DateTime LastVoiceRecordTime
public TimeSpan TimeSinceLastVoiceRecord
public UInt32 get_OptimalSampleRate()
public bool get_WantsRecording()
public void set_WantsRecording(bool value)
public DateTime get_LastVoiceRecordTime()
private void set_LastVoiceRecordTime(DateTime value)
public TimeSpan get_TimeSinceLastVoiceRecord()
internal void .ctor(Client client)
public void Update()
public bool Decompress(Byte[] input, MemoryStream output, UInt32 samepleRate)
public bool Decompress(Byte[] input, int inputsize, MemoryStream output, UInt32 samepleRate)
public bool Decompress(Byte[] input, int inputoffset, int inputsize, MemoryStream output, UInt32 samepleRate)
private bool Decompress(IntPtr input, int inputoffset, int inputsize, MemoryStream output, UInt32 samepleRate)
}
public Facepunch.Steamworks.Workshop : object {
internal ulong InvalidHandle
internal SteamUGC ugc
internal Friends friends
internal BaseSteamworks steamworks
internal SteamRemoteStorage remoteStorage
private Action`2<ulong, Result> OnFileDownloaded
private Action`1<ulong> OnItemInstalled
private UInt64[] _sSubscribedItemBuffer
public void add_OnFileDownloaded(Action`2<ulong, Result> value)
public void remove_OnFileDownloaded(Action`2<ulong, Result> value)
public void add_OnItemInstalled(Action`1<ulong> value)
public void remove_OnItemInstalled(Action`1<ulong> value)
internal void .ctor(BaseSteamworks steamworks, SteamUGC ugc, SteamRemoteStorage remoteStorage)
public void Dispose()
private void onItemInstalled(ItemInstalled_t obj)
private void onDownloadResult(DownloadItemResult_t obj)
public UInt64[] GetSubscribedItemIds()
public int GetSubscribedItemIds(List`1<ulong> destList)
public Query CreateQuery()
public Editor CreateItem(ItemType type)
public Editor CreateItem(UInt32 workshopUploadAppId, ItemType type)
public Editor EditItem(ulong itemId)
public Item GetItem(ulong itemid)
}
internal SteamNative.AccountID_t : ValueType {
public UInt32 Value
public AccountID_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(AccountID_t value)
}
internal SteamNative.AccountType : Enum {
public int value__
public AccountType Invalid
public AccountType Individual
public AccountType Multiseat
public AccountType GameServer
public AccountType AnonGameServer
public AccountType Pending
public AccountType ContentServer
public AccountType Clan
public AccountType Chat
public AccountType ConsoleUser
public AccountType AnonUser
public AccountType Max
}
internal SteamNative.AddAppDependencyResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal UInt32 AppID
internal AddAppDependencyResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<AddAppDependencyResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<AddAppDependencyResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.AddUGCDependencyResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal ulong ChildPublishedFileId
internal AddUGCDependencyResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<AddUGCDependencyResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<AddUGCDependencyResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.AppId_t : ValueType {
public UInt32 Value
public AppId_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(AppId_t value)
}
internal SteamNative.AppOwnershipFlags : Enum {
public int value__
public AppOwnershipFlags None
public AppOwnershipFlags OwnsLicense
public AppOwnershipFlags FreeLicense
public AppOwnershipFlags RegionRestricted
public AppOwnershipFlags LowViolence
public AppOwnershipFlags InvalidPlatform
public AppOwnershipFlags SharedLicense
public AppOwnershipFlags FreeWeekend
public AppOwnershipFlags RetailLicense
public AppOwnershipFlags LicenseLocked
public AppOwnershipFlags LicensePending
public AppOwnershipFlags LicenseExpired
public AppOwnershipFlags LicensePermanent
public AppOwnershipFlags LicenseRecurring
public AppOwnershipFlags LicenseCanceled
public AppOwnershipFlags AutoGrant
public AppOwnershipFlags PendingGift
public AppOwnershipFlags RentalNotActivated
public AppOwnershipFlags Rental
public AppOwnershipFlags SiteLicense
}
internal SteamNative.AppProofOfPurchaseKeyResponse_t : ValueType {
internal int CallbackId
internal Result Result
internal UInt32 AppID
internal UInt32 CchKeyLength
internal string Key
internal AppProofOfPurchaseKeyResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.AppReleaseState : Enum {
public int value__
public AppReleaseState Unknown
public AppReleaseState Unavailable
public AppReleaseState Prerelease
public AppReleaseState PreloadOnly
public AppReleaseState Released
}
internal SteamNative.AppType : Enum {
public int value__
public AppType Invalid
public AppType Game
public AppType Application
public AppType Tool
public AppType Demo
public AppType Media_DEPRECATED
public AppType DLC
public AppType Guide
public AppType Driver
public AppType Config
public AppType Hardware
public AppType Franchise
public AppType Video
public AppType Plugin
public AppType Music
public AppType Series
public AppType Comic
public AppType Shortcut
public AppType DepotOnly
}
internal SteamNative.AssetClassId_t : ValueType {
public ulong Value
public AssetClassId_t op_Implicit(ulong value)
public ulong op_Implicit(AssetClassId_t value)
}
internal SteamNative.AssociateWithClanResult_t : ValueType {
internal int CallbackId
internal Result Result
internal AssociateWithClanResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<AssociateWithClanResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<AssociateWithClanResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.AudioPlayback_Status : Enum {
public int value__
public AudioPlayback_Status Undefined
public AudioPlayback_Status Playing
public AudioPlayback_Status Paused
public AudioPlayback_Status Idle
}
internal SteamNative.AuthSessionResponse : Enum {
public int value__
public AuthSessionResponse OK
public AuthSessionResponse UserNotConnectedToSteam
public AuthSessionResponse NoLicenseOrExpired
public AuthSessionResponse VACBanned
public AuthSessionResponse LoggedInElseWhere
public AuthSessionResponse VACCheckTimedOut
public AuthSessionResponse AuthTicketCanceled
public AuthSessionResponse AuthTicketInvalidAlreadyUsed
public AuthSessionResponse AuthTicketInvalid
public AuthSessionResponse PublisherIssuedBan
}
internal SteamNative.AvatarImageLoaded_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal int Image
internal int Wide
internal int Tall
internal AvatarImageLoaded_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.BeginAuthSessionResult : Enum {
public int value__
public BeginAuthSessionResult OK
public BeginAuthSessionResult InvalidTicket
public BeginAuthSessionResult DuplicateRequest
public BeginAuthSessionResult InvalidVersion
public BeginAuthSessionResult GameMismatch
public BeginAuthSessionResult ExpiredTicket
}
internal SteamNative.BREAKPAD_HANDLE : ValueType {
public IntPtr Value
public BREAKPAD_HANDLE op_Implicit(IntPtr value)
public IntPtr op_Implicit(BREAKPAD_HANDLE value)
}
internal SteamNative.BroadcastUploadResult : Enum {
public int value__
public BroadcastUploadResult None
public BroadcastUploadResult OK
public BroadcastUploadResult InitFailed
public BroadcastUploadResult FrameFailed
public BroadcastUploadResult Timeout
public BroadcastUploadResult BandwidthExceeded
public BroadcastUploadResult LowFPS
public BroadcastUploadResult MissingKeyFrames
public BroadcastUploadResult NoConnection
public BroadcastUploadResult RelayFailed
public BroadcastUploadResult SettingsChanged
public BroadcastUploadResult MissingAudio
public BroadcastUploadResult TooFarBehind
public BroadcastUploadResult TranscodeBehind
}
internal SteamNative.BroadcastUploadStop_t : ValueType {
internal int CallbackId
internal BroadcastUploadResult Result
internal BroadcastUploadStop_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.BundleId_t : ValueType {
public UInt32 Value
public BundleId_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(BundleId_t value)
}
internal SteamNative.Callback : object {
public IntPtr vTablePtr
public byte CallbackFlags
public int CallbackId
}
internal SteamNative.CallbackHandle : object {
internal BaseSteamworks Steamworks
internal GCHandle FuncA
internal GCHandle FuncB
internal GCHandle FuncC
internal IntPtr vTablePtr
internal GCHandle PinnedCallback
public bool IsValid
internal void .ctor(BaseSteamworks steamworks)
public void Dispose()
private void UnregisterCallback()
public bool get_IsValid()
}
internal SteamNative.CallbackIdentifiers : object {
public int SteamUser
public int SteamGameServer
public int SteamFriends
public int SteamBilling
public int SteamMatchmaking
public int SteamContentServer
public int SteamUtils
public int ClientFriends
public int ClientUser
public int SteamApps
public int SteamUserStats
public int SteamNetworking
public int ClientRemoteStorage
public int ClientDepotBuilder
public int SteamGameServerItems
public int ClientUtils
public int SteamGameCoordinator
public int SteamGameServerStats
public int Steam2Async
public int SteamGameStats
public int ClientHTTP
public int ClientScreenshots
public int SteamScreenshots
public int ClientAudio
public int ClientUnifiedMessages
public int SteamStreamLauncher
public int ClientController
public int SteamController
public int ClientParentalSettings
public int ClientDeviceAuth
public int ClientNetworkDeviceManager
public int ClientMusic
public int ClientRemoteClientManager
public int ClientUGC
public int SteamStreamClient
public int ClientProductBuilder
public int ClientShortcuts
public int ClientRemoteControlManager
public int SteamAppList
public int SteamMusic
public int SteamMusicRemote
public int ClientVR
public int ClientGameNotification
public int SteamGameNotification
public int SteamHTMLSurface
public int ClientVideo
public int ClientInventory
public int ClientBluetoothManager
public int ClientSharedConnection
public int SteamParentalSettings
public int ClientShader
}
internal SteamNative.CallbackMsg_t : ValueType {
internal int SteamUser
internal int Callback
internal IntPtr ParamPtr
internal int ParamCount
internal CallbackMsg_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.Callbacks : object {
internal void RegisterCallbacks(BaseSteamworks steamworks)
}
internal SteamNative.CallResult : CallbackHandle {
internal SteamAPICall_t Call
public bool IsValid
public bool get_IsValid()
internal void .ctor(BaseSteamworks steamworks, SteamAPICall_t call)
internal void Try()
internal void RunCallback()
}
internal SteamNative.CallResult`1 : CallResult {
private Byte[] resultBuffer
private Action`2<T, bool> CallbackFunction
private ConvertFromPointer<T> ConvertFromPointerFunction
internal int ResultSize
internal int CallbackId
internal void .ctor(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<T, bool> callbackFunction, ConvertFromPointer<T> fromPointer, int resultSize, int callbackId)
public string ToString()
internal void RunCallback()
}
internal SteamNative.CellID_t : ValueType {
public UInt32 Value
public CellID_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(CellID_t value)
}
internal SteamNative.CGameID : ValueType {
public ulong Value
public CGameID op_Implicit(ulong value)
public ulong op_Implicit(CGameID value)
}
internal SteamNative.ChatEntryType : Enum {
public int value__
public ChatEntryType Invalid
public ChatEntryType ChatMsg
public ChatEntryType Typing
public ChatEntryType InviteGame
public ChatEntryType Emote
public ChatEntryType LeftConversation
public ChatEntryType Entered
public ChatEntryType WasKicked
public ChatEntryType WasBanned
public ChatEntryType Disconnected
public ChatEntryType HistoricalChat
public ChatEntryType LinkBlocked
}
internal SteamNative.ChatMemberStateChange : Enum {
public int value__
public ChatMemberStateChange Entered
public ChatMemberStateChange Left
public ChatMemberStateChange Disconnected
public ChatMemberStateChange Kicked
public ChatMemberStateChange Banned
}
internal SteamNative.ChatRoomEnterResponse : Enum {
public int value__
public ChatRoomEnterResponse Success
public ChatRoomEnterResponse DoesntExist
public ChatRoomEnterResponse NotAllowed
public ChatRoomEnterResponse Full
public ChatRoomEnterResponse Error
public ChatRoomEnterResponse Banned
public ChatRoomEnterResponse Limited
public ChatRoomEnterResponse ClanDisabled
public ChatRoomEnterResponse CommunityBan
public ChatRoomEnterResponse MemberBlockedYou
public ChatRoomEnterResponse YouBlockedMember
public ChatRoomEnterResponse RatelimitExceeded
}
internal SteamNative.ChatSteamIDInstanceFlags : Enum {
public int value__
public ChatSteamIDInstanceFlags AccountInstanceMask
public ChatSteamIDInstanceFlags InstanceFlagClan
public ChatSteamIDInstanceFlags InstanceFlagLobby
public ChatSteamIDInstanceFlags InstanceFlagMMSLobby
}
internal SteamNative.CheckFileSignature : Enum {
public int value__
public CheckFileSignature InvalidSignature
public CheckFileSignature ValidSignature
public CheckFileSignature FileNotFound
public CheckFileSignature NoSignaturesFoundForThisApp
public CheckFileSignature NoSignaturesFoundForThisFile
}
internal SteamNative.CheckFileSignature_t : ValueType {
internal int CallbackId
internal CheckFileSignature CheckFileSignature
internal CheckFileSignature_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<CheckFileSignature_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<CheckFileSignature_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ClanOfficerListResponse_t : ValueType {
internal int CallbackId
internal ulong SteamIDClan
internal int COfficers
internal byte Success
internal ClanOfficerListResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<ClanOfficerListResponse_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<ClanOfficerListResponse_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ClientGameServerDeny_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal UInt32 GameServerIP
internal ushort GameServerPort
internal ushort Secure
internal UInt32 Reason
internal ClientGameServerDeny_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ComputeNewPlayerCompatibilityResult_t : ValueType {
internal int CallbackId
internal Result Result
internal int CPlayersThatDontLikeCandidate
internal int CPlayersThatCandidateDoesntLike
internal int CClanPlayersThatDontLikeCandidate
internal ulong SteamIDCandidate
internal ComputeNewPlayerCompatibilityResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<ComputeNewPlayerCompatibilityResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<ComputeNewPlayerCompatibilityResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ControllerActionOrigin : Enum {
public int value__
public ControllerActionOrigin None
public ControllerActionOrigin A
public ControllerActionOrigin B
public ControllerActionOrigin X
public ControllerActionOrigin Y
public ControllerActionOrigin LeftBumper
public ControllerActionOrigin RightBumper
public ControllerActionOrigin LeftGrip
public ControllerActionOrigin RightGrip
public ControllerActionOrigin Start
public ControllerActionOrigin Back
public ControllerActionOrigin LeftPad_Touch
public ControllerActionOrigin LeftPad_Swipe
public ControllerActionOrigin LeftPad_Click
public ControllerActionOrigin LeftPad_DPadNorth
public ControllerActionOrigin LeftPad_DPadSouth
public ControllerActionOrigin LeftPad_DPadWest
public ControllerActionOrigin LeftPad_DPadEast
public ControllerActionOrigin RightPad_Touch
public ControllerActionOrigin RightPad_Swipe
public ControllerActionOrigin RightPad_Click
public ControllerActionOrigin RightPad_DPadNorth
public ControllerActionOrigin RightPad_DPadSouth
public ControllerActionOrigin RightPad_DPadWest
public ControllerActionOrigin RightPad_DPadEast
public ControllerActionOrigin LeftTrigger_Pull
public ControllerActionOrigin LeftTrigger_Click
public ControllerActionOrigin RightTrigger_Pull
public ControllerActionOrigin RightTrigger_Click
public ControllerActionOrigin LeftStick_Move
public ControllerActionOrigin LeftStick_Click
public ControllerActionOrigin LeftStick_DPadNorth
public ControllerActionOrigin LeftStick_DPadSouth
public ControllerActionOrigin LeftStick_DPadWest
public ControllerActionOrigin LeftStick_DPadEast
public ControllerActionOrigin Gyro_Move
public ControllerActionOrigin Gyro_Pitch
public ControllerActionOrigin Gyro_Yaw
public ControllerActionOrigin Gyro_Roll
public ControllerActionOrigin PS4_X
public ControllerActionOrigin PS4_Circle
public ControllerActionOrigin PS4_Triangle
public ControllerActionOrigin PS4_Square
public ControllerActionOrigin PS4_LeftBumper
public ControllerActionOrigin PS4_RightBumper
public ControllerActionOrigin PS4_Options
public ControllerActionOrigin PS4_Share
public ControllerActionOrigin PS4_LeftPad_Touch
public ControllerActionOrigin PS4_LeftPad_Swipe
public ControllerActionOrigin PS4_LeftPad_Click
public ControllerActionOrigin PS4_LeftPad_DPadNorth
public ControllerActionOrigin PS4_LeftPad_DPadSouth
public ControllerActionOrigin PS4_LeftPad_DPadWest
public ControllerActionOrigin PS4_LeftPad_DPadEast
public ControllerActionOrigin PS4_RightPad_Touch
public ControllerActionOrigin PS4_RightPad_Swipe
public ControllerActionOrigin PS4_RightPad_Click
public ControllerActionOrigin PS4_RightPad_DPadNorth
public ControllerActionOrigin PS4_RightPad_DPadSouth
public ControllerActionOrigin PS4_RightPad_DPadWest
public ControllerActionOrigin PS4_RightPad_DPadEast
public ControllerActionOrigin PS4_CenterPad_Touch
public ControllerActionOrigin PS4_CenterPad_Swipe
public ControllerActionOrigin PS4_CenterPad_Click
public ControllerActionOrigin PS4_CenterPad_DPadNorth
public ControllerActionOrigin PS4_CenterPad_DPadSouth
public ControllerActionOrigin PS4_CenterPad_DPadWest
public ControllerActionOrigin PS4_CenterPad_DPadEast
public ControllerActionOrigin PS4_LeftTrigger_Pull
public ControllerActionOrigin PS4_LeftTrigger_Click
public ControllerActionOrigin PS4_RightTrigger_Pull
public ControllerActionOrigin PS4_RightTrigger_Click
public ControllerActionOrigin PS4_LeftStick_Move
public ControllerActionOrigin PS4_LeftStick_Click
public ControllerActionOrigin PS4_LeftStick_DPadNorth
public ControllerActionOrigin PS4_LeftStick_DPadSouth
public ControllerActionOrigin PS4_LeftStick_DPadWest
public ControllerActionOrigin PS4_LeftStick_DPadEast
public ControllerActionOrigin PS4_RightStick_Move
public ControllerActionOrigin PS4_RightStick_Click
public ControllerActionOrigin PS4_RightStick_DPadNorth
public ControllerActionOrigin PS4_RightStick_DPadSouth
public ControllerActionOrigin PS4_RightStick_DPadWest
public ControllerActionOrigin PS4_RightStick_DPadEast
public ControllerActionOrigin PS4_DPad_North
public ControllerActionOrigin PS4_DPad_South
public ControllerActionOrigin PS4_DPad_West
public ControllerActionOrigin PS4_DPad_East
public ControllerActionOrigin PS4_Gyro_Move
public ControllerActionOrigin PS4_Gyro_Pitch
public ControllerActionOrigin PS4_Gyro_Yaw
public ControllerActionOrigin PS4_Gyro_Roll
public ControllerActionOrigin XBoxOne_A
public ControllerActionOrigin XBoxOne_B
public ControllerActionOrigin XBoxOne_X
public ControllerActionOrigin XBoxOne_Y
public ControllerActionOrigin XBoxOne_LeftBumper
public ControllerActionOrigin XBoxOne_RightBumper
public ControllerActionOrigin XBoxOne_Menu
public ControllerActionOrigin XBoxOne_View
public ControllerActionOrigin XBoxOne_LeftTrigger_Pull
public ControllerActionOrigin XBoxOne_LeftTrigger_Click
public ControllerActionOrigin XBoxOne_RightTrigger_Pull
public ControllerActionOrigin XBoxOne_RightTrigger_Click
public ControllerActionOrigin XBoxOne_LeftStick_Move
public ControllerActionOrigin XBoxOne_LeftStick_Click
public ControllerActionOrigin XBoxOne_LeftStick_DPadNorth
public ControllerActionOrigin XBoxOne_LeftStick_DPadSouth
public ControllerActionOrigin XBoxOne_LeftStick_DPadWest
public ControllerActionOrigin XBoxOne_LeftStick_DPadEast
public ControllerActionOrigin XBoxOne_RightStick_Move
public ControllerActionOrigin XBoxOne_RightStick_Click
public ControllerActionOrigin XBoxOne_RightStick_DPadNorth
public ControllerActionOrigin XBoxOne_RightStick_DPadSouth
public ControllerActionOrigin XBoxOne_RightStick_DPadWest
public ControllerActionOrigin XBoxOne_RightStick_DPadEast
public ControllerActionOrigin XBoxOne_DPad_North
public ControllerActionOrigin XBoxOne_DPad_South
public ControllerActionOrigin XBoxOne_DPad_West
public ControllerActionOrigin XBoxOne_DPad_East
public ControllerActionOrigin XBox360_A
public ControllerActionOrigin XBox360_B
public ControllerActionOrigin XBox360_X
public ControllerActionOrigin XBox360_Y
public ControllerActionOrigin XBox360_LeftBumper
public ControllerActionOrigin XBox360_RightBumper
public ControllerActionOrigin XBox360_Start
public ControllerActionOrigin XBox360_Back
public ControllerActionOrigin XBox360_LeftTrigger_Pull
public ControllerActionOrigin XBox360_LeftTrigger_Click
public ControllerActionOrigin XBox360_RightTrigger_Pull
public ControllerActionOrigin XBox360_RightTrigger_Click
public ControllerActionOrigin XBox360_LeftStick_Move
public ControllerActionOrigin XBox360_LeftStick_Click
public ControllerActionOrigin XBox360_LeftStick_DPadNorth
public ControllerActionOrigin XBox360_LeftStick_DPadSouth
public ControllerActionOrigin XBox360_LeftStick_DPadWest
public ControllerActionOrigin XBox360_LeftStick_DPadEast
public ControllerActionOrigin XBox360_RightStick_Move
public ControllerActionOrigin XBox360_RightStick_Click
public ControllerActionOrigin XBox360_RightStick_DPadNorth
public ControllerActionOrigin XBox360_RightStick_DPadSouth
public ControllerActionOrigin XBox360_RightStick_DPadWest
public ControllerActionOrigin XBox360_RightStick_DPadEast
public ControllerActionOrigin XBox360_DPad_North
public ControllerActionOrigin XBox360_DPad_South
public ControllerActionOrigin XBox360_DPad_West
public ControllerActionOrigin XBox360_DPad_East
public ControllerActionOrigin SteamV2_A
public ControllerActionOrigin SteamV2_B
public ControllerActionOrigin SteamV2_X
public ControllerActionOrigin SteamV2_Y
public ControllerActionOrigin SteamV2_LeftBumper
public ControllerActionOrigin SteamV2_RightBumper
public ControllerActionOrigin SteamV2_LeftGrip
public ControllerActionOrigin SteamV2_RightGrip
public ControllerActionOrigin SteamV2_LeftGrip_Upper
public ControllerActionOrigin SteamV2_RightGrip_Upper
public ControllerActionOrigin SteamV2_LeftBumper_Pressure
public ControllerActionOrigin SteamV2_RightBumper_Pressure
public ControllerActionOrigin SteamV2_LeftGrip_Pressure
public ControllerActionOrigin SteamV2_RightGrip_Pressure
public ControllerActionOrigin SteamV2_LeftGrip_Upper_Pressure
public ControllerActionOrigin SteamV2_RightGrip_Upper_Pressure
public ControllerActionOrigin SteamV2_Start
public ControllerActionOrigin SteamV2_Back
public ControllerActionOrigin SteamV2_LeftPad_Touch
public ControllerActionOrigin SteamV2_LeftPad_Swipe
public ControllerActionOrigin SteamV2_LeftPad_Click
public ControllerActionOrigin SteamV2_LeftPad_Pressure
public ControllerActionOrigin SteamV2_LeftPad_DPadNorth
public ControllerActionOrigin SteamV2_LeftPad_DPadSouth
public ControllerActionOrigin SteamV2_LeftPad_DPadWest
public ControllerActionOrigin SteamV2_LeftPad_DPadEast
public ControllerActionOrigin SteamV2_RightPad_Touch
public ControllerActionOrigin SteamV2_RightPad_Swipe
public ControllerActionOrigin SteamV2_RightPad_Click
public ControllerActionOrigin SteamV2_RightPad_Pressure
public ControllerActionOrigin SteamV2_RightPad_DPadNorth
public ControllerActionOrigin SteamV2_RightPad_DPadSouth
public ControllerActionOrigin SteamV2_RightPad_DPadWest
public ControllerActionOrigin SteamV2_RightPad_DPadEast
public ControllerActionOrigin SteamV2_LeftTrigger_Pull
public ControllerActionOrigin SteamV2_LeftTrigger_Click
public ControllerActionOrigin SteamV2_RightTrigger_Pull
public ControllerActionOrigin SteamV2_RightTrigger_Click
public ControllerActionOrigin SteamV2_LeftStick_Move
public ControllerActionOrigin SteamV2_LeftStick_Click
public ControllerActionOrigin SteamV2_LeftStick_DPadNorth
public ControllerActionOrigin SteamV2_LeftStick_DPadSouth
public ControllerActionOrigin SteamV2_LeftStick_DPadWest
public ControllerActionOrigin SteamV2_LeftStick_DPadEast
public ControllerActionOrigin SteamV2_Gyro_Move
public ControllerActionOrigin SteamV2_Gyro_Pitch
public ControllerActionOrigin SteamV2_Gyro_Yaw
public ControllerActionOrigin SteamV2_Gyro_Roll
public ControllerActionOrigin Count
}
internal SteamNative.ControllerActionSetHandle_t : ValueType {
public ulong Value
public ControllerActionSetHandle_t op_Implicit(ulong value)
public ulong op_Implicit(ControllerActionSetHandle_t value)
}
internal SteamNative.ControllerAnalogActionData_t : ValueType {
internal ControllerSourceMode EMode
internal float X
internal float Y
internal bool BActive
internal ControllerAnalogActionData_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.ControllerAnalogActionHandle_t : ValueType {
public ulong Value
public ControllerAnalogActionHandle_t op_Implicit(ulong value)
public ulong op_Implicit(ControllerAnalogActionHandle_t value)
}
internal SteamNative.ControllerDigitalActionData_t : ValueType {
internal bool BState
internal bool BActive
internal ControllerDigitalActionData_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.ControllerDigitalActionHandle_t : ValueType {
public ulong Value
public ControllerDigitalActionHandle_t op_Implicit(ulong value)
public ulong op_Implicit(ControllerDigitalActionHandle_t value)
}
internal SteamNative.ControllerHandle_t : ValueType {
public ulong Value
public ControllerHandle_t op_Implicit(ulong value)
public ulong op_Implicit(ControllerHandle_t value)
}
internal SteamNative.ControllerMotionData_t : ValueType {
internal float RotQuatX
internal float RotQuatY
internal float RotQuatZ
internal float RotQuatW
internal float PosAccelX
internal float PosAccelY
internal float PosAccelZ
internal float RotVelX
internal float RotVelY
internal float RotVelZ
internal ControllerMotionData_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.ControllerSource : Enum {
public int value__
public ControllerSource None
public ControllerSource LeftTrackpad
public ControllerSource RightTrackpad
public ControllerSource Joystick
public ControllerSource ABXY
public ControllerSource Switch
public ControllerSource LeftTrigger
public ControllerSource RightTrigger
public ControllerSource Gyro
public ControllerSource CenterTrackpad
public ControllerSource RightJoystick
public ControllerSource DPad
public ControllerSource Key
public ControllerSource Mouse
public ControllerSource Count
}
internal SteamNative.ControllerSourceMode : Enum {
public int value__
public ControllerSourceMode None
public ControllerSourceMode Dpad
public ControllerSourceMode Buttons
public ControllerSourceMode FourButtons
public ControllerSourceMode AbsoluteMouse
public ControllerSourceMode RelativeMouse
public ControllerSourceMode JoystickMove
public ControllerSourceMode JoystickMouse
public ControllerSourceMode JoystickCamera
public ControllerSourceMode ScrollWheel
public ControllerSourceMode Trigger
public ControllerSourceMode TouchMenu
public ControllerSourceMode MouseJoystick
public ControllerSourceMode MouseRegion
public ControllerSourceMode RadialMenu
public ControllerSourceMode SingleButton
public ControllerSourceMode Switches
}
internal SteamNative.CreateItemResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal bool UserNeedsToAcceptWorkshopLegalAgreement
internal CreateItemResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<CreateItemResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<CreateItemResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.CSteamID : ValueType {
public ulong Value
public CSteamID op_Implicit(ulong value)
public ulong op_Implicit(CSteamID value)
}
internal SteamNative.Defines : object {
internal string STEAMAPPLIST_INTERFACE_VERSION
internal string STEAMAPPS_INTERFACE_VERSION
internal string STEAMAPPTICKET_INTERFACE_VERSION
internal string STEAMCONTROLLER_INTERFACE_VERSION
internal string STEAMFRIENDS_INTERFACE_VERSION
internal string STEAMGAMECOORDINATOR_INTERFACE_VERSION
internal string STEAMGAMESERVER_INTERFACE_VERSION
internal string STEAMGAMESERVERSTATS_INTERFACE_VERSION
internal string STEAMHTMLSURFACE_INTERFACE_VERSION
internal string STEAMHTTP_INTERFACE_VERSION
internal string STEAMINVENTORY_INTERFACE_VERSION
internal string STEAMMATCHMAKING_INTERFACE_VERSION
internal string STEAMMATCHMAKINGSERVERS_INTERFACE_VERSION
internal string STEAMMUSIC_INTERFACE_VERSION
internal string STEAMMUSICREMOTE_INTERFACE_VERSION
internal string STEAMNETWORKING_INTERFACE_VERSION
internal string STEAMPARENTALSETTINGS_INTERFACE_VERSION
internal string STEAMREMOTESTORAGE_INTERFACE_VERSION
internal string STEAMSCREENSHOTS_INTERFACE_VERSION
internal string STEAMUGC_INTERFACE_VERSION
internal string STEAMUSER_INTERFACE_VERSION
internal string STEAMUSERSTATS_INTERFACE_VERSION
internal string STEAMUTILS_INTERFACE_VERSION
internal string STEAMVIDEO_INTERFACE_VERSION
}
internal SteamNative.DeleteItemResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal DeleteItemResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<DeleteItemResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<DeleteItemResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.DenyReason : Enum {
public int value__
public DenyReason Invalid
public DenyReason InvalidVersion
public DenyReason Generic
public DenyReason NotLoggedOn
public DenyReason NoLicense
public DenyReason Cheater
public DenyReason LoggedInElseWhere
public DenyReason UnknownText
public DenyReason IncompatibleAnticheat
public DenyReason MemoryCorruption
public DenyReason IncompatibleSoftware
public DenyReason SteamConnectionLost
public DenyReason SteamConnectionError
public DenyReason SteamResponseTimedOut
public DenyReason SteamValidationStalled
public DenyReason SteamOwnerLeftGuestUser
}
internal SteamNative.DepotId_t : ValueType {
public UInt32 Value
public DepotId_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(DepotId_t value)
}
internal SteamNative.DlcInstalled_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal DlcInstalled_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.DownloadClanActivityCountsResult_t : ValueType {
internal int CallbackId
internal bool Success
internal DownloadClanActivityCountsResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.DownloadItemResult_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal ulong PublishedFileId
internal Result Result
internal DownloadItemResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.EncryptedAppTicketResponse_t : ValueType {
internal int CallbackId
internal Result Result
internal EncryptedAppTicketResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<EncryptedAppTicketResponse_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<EncryptedAppTicketResponse_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FailureType : Enum {
public int value__
public FailureType FlushedCallbackQueue
public FailureType PipeFail
}
internal SteamNative.FavoritesListAccountsUpdated_t : ValueType {
internal int CallbackId
internal Result Result
internal FavoritesListAccountsUpdated_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FavoritesListChanged_t : ValueType {
internal int CallbackId
internal UInt32 IP
internal UInt32 QueryPort
internal UInt32 ConnPort
internal UInt32 AppID
internal UInt32 Flags
internal bool Add
internal UInt32 AccountId
internal FavoritesListChanged_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FileDetailsResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong FileSize
internal char FileSHA
internal UInt32 Flags
internal FileDetailsResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<FileDetailsResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<FileDetailsResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FriendFlags : Enum {
public int value__
public FriendFlags None
public FriendFlags Blocked
public FriendFlags FriendshipRequested
public FriendFlags Immediate
public FriendFlags ClanMember
public FriendFlags OnGameServer
public FriendFlags RequestingFriendship
public FriendFlags RequestingInfo
public FriendFlags Ignored
public FriendFlags IgnoredFriend
public FriendFlags ChatMember
public FriendFlags All
}
internal SteamNative.FriendGameInfo_t : ValueType {
internal ulong GameID
internal UInt32 GameIP
internal ushort GamePort
internal ushort QueryPort
internal ulong SteamIDLobby
internal FriendGameInfo_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.FriendRelationship : Enum {
public int value__
public FriendRelationship None
public FriendRelationship Blocked
public FriendRelationship RequestRecipient
public FriendRelationship Friend
public FriendRelationship RequestInitiator
public FriendRelationship Ignored
public FriendRelationship IgnoredFriend
public FriendRelationship Suggested_DEPRECATED
public FriendRelationship Max
}
internal SteamNative.FriendRichPresenceUpdate_t : ValueType {
internal int CallbackId
internal ulong SteamIDFriend
internal UInt32 AppID
internal FriendRichPresenceUpdate_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FriendsEnumerateFollowingList_t : ValueType {
internal int CallbackId
internal Result Result
internal UInt64[] GSteamID
internal int ResultsReturned
internal int TotalResultCount
internal FriendsEnumerateFollowingList_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<FriendsEnumerateFollowingList_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<FriendsEnumerateFollowingList_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FriendSessionStateInfo_t : ValueType {
internal UInt32 IOnlineSessionInstances
internal byte IPublishedToFriendsSessionInstance
internal FriendSessionStateInfo_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.FriendsGetFollowerCount_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamID
internal int Count
internal FriendsGetFollowerCount_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<FriendsGetFollowerCount_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<FriendsGetFollowerCount_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.FriendsGroupID_t : ValueType {
public short Value
public FriendsGroupID_t op_Implicit(short value)
public short op_Implicit(FriendsGroupID_t value)
}
internal SteamNative.FriendsIsFollowing_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamID
internal bool IsFollowing
internal FriendsIsFollowing_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<FriendsIsFollowing_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<FriendsIsFollowing_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameConnectedChatJoin_t : ValueType {
internal int CallbackId
internal ulong SteamIDClanChat
internal ulong SteamIDUser
internal GameConnectedChatJoin_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameConnectedChatLeave_t : ValueType {
internal int CallbackId
internal ulong SteamIDClanChat
internal ulong SteamIDUser
internal bool Kicked
internal bool Dropped
internal GameConnectedChatLeave_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameConnectedClanChatMsg_t : ValueType {
internal int CallbackId
internal ulong SteamIDClanChat
internal ulong SteamIDUser
internal int MessageID
internal GameConnectedClanChatMsg_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameConnectedFriendChatMsg_t : ValueType {
internal int CallbackId
internal ulong SteamIDUser
internal int MessageID
internal GameConnectedFriendChatMsg_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameIDType : Enum {
public int value__
public GameIDType App
public GameIDType GameMod
public GameIDType Shortcut
public GameIDType P2P
}
internal SteamNative.GameLobbyJoinRequested_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal ulong SteamIDFriend
internal GameLobbyJoinRequested_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameOverlayActivated_t : ValueType {
internal int CallbackId
internal byte Active
internal GameOverlayActivated_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GamepadTextInputDismissed_t : ValueType {
internal int CallbackId
internal bool Submitted
internal UInt32 SubmittedText
internal GamepadTextInputDismissed_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GamepadTextInputLineMode : Enum {
public int value__
public GamepadTextInputLineMode SingleLine
public GamepadTextInputLineMode MultipleLines
}
internal SteamNative.GamepadTextInputMode : Enum {
public int value__
public GamepadTextInputMode Normal
public GamepadTextInputMode Password
}
internal SteamNative.GameRichPresenceJoinRequested_t : ValueType {
internal int CallbackId
internal ulong SteamIDFriend
internal string Connect
internal GameRichPresenceJoinRequested_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GameServerChangeRequested_t : ValueType {
internal int CallbackId
internal string Server
internal string Password
internal GameServerChangeRequested_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.gameserveritem_t : ValueType {
internal servernetadr_t NetAdr
internal int Ping
internal bool HadSuccessfulResponse
internal bool DoNotRefresh
internal string GameDir
internal string Map
internal string GameDescription
internal UInt32 AppID
internal int Players
internal int MaxPlayers
internal int BotPlayers
internal bool Password
internal bool Secure
internal UInt32 TimeLastPlayed
internal int ServerVersion
internal string ServerName
internal string GameTags
internal ulong SteamID
internal gameserveritem_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.GameWebCallback_t : ValueType {
internal int CallbackId
internal string URL
internal GameWebCallback_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GCMessageAvailable_t : ValueType {
internal int CallbackId
internal UInt32 MessageSize
internal GCMessageAvailable_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GCMessageFailed_t : ValueType {
internal int CallbackId
internal GCMessageFailed_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GetAppDependenciesResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal AppId_t[] GAppIDs
internal UInt32 NumAppDependencies
internal UInt32 TotalNumAppDependencies
internal GetAppDependenciesResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GetAppDependenciesResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GetAppDependenciesResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GetAuthSessionTicketResponse_t : ValueType {
internal int CallbackId
internal UInt32 AuthTicket
internal Result Result
internal GetAuthSessionTicketResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GetOPFSettingsResult_t : ValueType {
internal int CallbackId
internal Result Result
internal UInt32 VideoAppID
internal GetOPFSettingsResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GetUserItemVoteResult_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal Result Result
internal bool VotedUp
internal bool VotedDown
internal bool VoteSkipped
internal GetUserItemVoteResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GetUserItemVoteResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GetUserItemVoteResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GetVideoURLResult_t : ValueType {
internal int CallbackId
internal Result Result
internal UInt32 VideoAppID
internal string URL
internal GetVideoURLResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GID_t : ValueType {
public ulong Value
public GID_t op_Implicit(ulong value)
public ulong op_Implicit(GID_t value)
}
internal SteamNative.GlobalAchievementPercentagesReady_t : ValueType {
internal int CallbackId
internal ulong GameID
internal Result Result
internal GlobalAchievementPercentagesReady_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GlobalAchievementPercentagesReady_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GlobalAchievementPercentagesReady_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GlobalStatsReceived_t : ValueType {
internal int CallbackId
internal ulong GameID
internal Result Result
internal GlobalStatsReceived_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GlobalStatsReceived_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GlobalStatsReceived_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSClientAchievementStatus_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal string PchAchievement
internal bool Unlocked
internal GSClientAchievementStatus_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSClientApprove_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal ulong OwnerSteamID
internal GSClientApprove_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSClientDeny_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal DenyReason DenyReason
internal string OptionalText
internal GSClientDeny_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSClientGroupStatus_t : ValueType {
internal int CallbackId
internal ulong SteamIDUser
internal ulong SteamIDGroup
internal bool Member
internal bool Officer
internal GSClientGroupStatus_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSClientKick_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal DenyReason DenyReason
internal GSClientKick_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSGameplayStats_t : ValueType {
internal int CallbackId
internal Result Result
internal int Rank
internal UInt32 TotalConnects
internal UInt32 TotalMinutesPlayed
internal GSGameplayStats_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSPolicyResponse_t : ValueType {
internal int CallbackId
internal byte Secure
internal GSPolicyResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSReputation_t : ValueType {
internal int CallbackId
internal Result Result
internal UInt32 ReputationScore
internal bool Banned
internal UInt32 BannedIP
internal ushort BannedPort
internal ulong BannedGameID
internal UInt32 BanExpires
internal GSReputation_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GSReputation_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GSReputation_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSStatsReceived_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamIDUser
internal GSStatsReceived_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GSStatsReceived_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GSStatsReceived_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSStatsStored_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamIDUser
internal GSStatsStored_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<GSStatsStored_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<GSStatsStored_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.GSStatsUnloaded_t : ValueType {
internal int CallbackId
internal ulong SteamIDUser
internal GSStatsUnloaded_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HAuthTicket : ValueType {
public UInt32 Value
public HAuthTicket op_Implicit(UInt32 value)
public UInt32 op_Implicit(HAuthTicket value)
}
internal SteamNative.Helpers : object {
private StringBuilder[] StringBuilderPool
private int StringBuilderPoolIndex
public StringBuilder TakeStringBuilder()
}
internal SteamNative.HHTMLBrowser : ValueType {
public UInt32 Value
public HHTMLBrowser op_Implicit(UInt32 value)
public UInt32 op_Implicit(HHTMLBrowser value)
}
internal SteamNative.HServerListRequest : ValueType {
public IntPtr Value
public HServerListRequest op_Implicit(IntPtr value)
public IntPtr op_Implicit(HServerListRequest value)
}
internal SteamNative.HServerQuery : ValueType {
public int Value
public HServerQuery op_Implicit(int value)
public int op_Implicit(HServerQuery value)
}
internal SteamNative.HSteamPipe : ValueType {
public int Value
public HSteamPipe op_Implicit(int value)
public int op_Implicit(HSteamPipe value)
}
internal SteamNative.HSteamUser : ValueType {
public int Value
public HSteamUser op_Implicit(int value)
public int op_Implicit(HSteamUser value)
}
internal SteamNative.HTML_BrowserReady_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal HTML_BrowserReady_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<HTML_BrowserReady_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<HTML_BrowserReady_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_BrowserRestarted_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal UInt32 UnOldBrowserHandle
internal HTML_BrowserRestarted_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_CanGoBackAndForward_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal bool BCanGoBack
internal bool BCanGoForward
internal HTML_CanGoBackAndForward_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_ChangedTitle_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchTitle
internal HTML_ChangedTitle_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_CloseBrowser_t : ValueType {
internal UInt32 UnBrowserHandle
internal HTML_CloseBrowser_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.HTML_FileOpenDialog_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchTitle
internal string PchInitialFile
internal HTML_FileOpenDialog_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_FinishedRequest_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchURL
internal string PchPageTitle
internal HTML_FinishedRequest_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_HideToolTip_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal HTML_HideToolTip_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_HorizontalScroll_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal UInt32 UnScrollMax
internal UInt32 UnScrollCurrent
internal float FlPageScale
internal bool BVisible
internal UInt32 UnPageSize
internal HTML_HorizontalScroll_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_JSAlert_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchMessage
internal HTML_JSAlert_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_JSConfirm_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchMessage
internal HTML_JSConfirm_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_LinkAtPosition_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal UInt32 X
internal UInt32 Y
internal string PchURL
internal bool BInput
internal bool BLiveLink
internal HTML_LinkAtPosition_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_NeedsPaint_t : ValueType {
internal UInt32 UnBrowserHandle
internal string PBGRA
internal UInt32 UnWide
internal UInt32 UnTall
internal UInt32 UnUpdateX
internal UInt32 UnUpdateY
internal UInt32 UnUpdateWide
internal UInt32 UnUpdateTall
internal UInt32 UnScrollX
internal UInt32 UnScrollY
internal float FlPageScale
internal UInt32 UnPageSerial
internal HTML_NeedsPaint_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.HTML_NewWindow_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchURL
internal UInt32 UnX
internal UInt32 UnY
internal UInt32 UnWide
internal UInt32 UnTall
internal UInt32 UnNewWindow_BrowserHandle
internal HTML_NewWindow_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_OpenLinkInNewTab_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchURL
internal HTML_OpenLinkInNewTab_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_SearchResults_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal UInt32 UnResults
internal UInt32 UnCurrentMatch
internal HTML_SearchResults_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_SetCursor_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal UInt32 EMouseCursor
internal HTML_SetCursor_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_ShowToolTip_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchMsg
internal HTML_ShowToolTip_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_StartRequest_t : ValueType {
internal UInt32 UnBrowserHandle
internal string PchURL
internal string PchTarget
internal string PchPostData
internal bool BIsRedirect
internal HTML_StartRequest_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.HTML_StatusText_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchMsg
internal HTML_StatusText_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_UpdateToolTip_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchMsg
internal HTML_UpdateToolTip_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_URLChanged_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal string PchURL
internal string PchPostData
internal bool BIsRedirect
internal string PchPageTitle
internal bool BNewNavigation
internal HTML_URLChanged_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTML_VerticalScroll_t : ValueType {
internal int CallbackId
internal UInt32 UnBrowserHandle
internal UInt32 UnScrollMax
internal UInt32 UnScrollCurrent
internal float FlPageScale
internal bool BVisible
internal UInt32 UnPageSize
internal HTML_VerticalScroll_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTMLKeyModifiers : Enum {
public int value__
public HTMLKeyModifiers None
public HTMLKeyModifiers AltDown
public HTMLKeyModifiers CtrlDown
public HTMLKeyModifiers ShiftDown
}
internal SteamNative.HTMLMouseButton : Enum {
public int value__
public HTMLMouseButton Left
public HTMLMouseButton Right
public HTMLMouseButton Middle
}
internal SteamNative.HTTPCookieContainerHandle : ValueType {
public UInt32 Value
public HTTPCookieContainerHandle op_Implicit(UInt32 value)
public UInt32 op_Implicit(HTTPCookieContainerHandle value)
}
internal SteamNative.HTTPMethod : Enum {
public int value__
public HTTPMethod Invalid
public HTTPMethod GET
public HTTPMethod HEAD
public HTTPMethod POST
public HTTPMethod PUT
public HTTPMethod DELETE
public HTTPMethod OPTIONS
public HTTPMethod PATCH
}
internal SteamNative.HTTPRequestCompleted_t : ValueType {
internal int CallbackId
internal UInt32 Request
internal ulong ContextValue
internal bool RequestSuccessful
internal HTTPStatusCode StatusCode
internal UInt32 BodySize
internal HTTPRequestCompleted_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTTPRequestDataReceived_t : ValueType {
internal int CallbackId
internal UInt32 Request
internal ulong ContextValue
internal UInt32 COffset
internal UInt32 CBytesReceived
internal HTTPRequestDataReceived_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTTPRequestHandle : ValueType {
public UInt32 Value
public HTTPRequestHandle op_Implicit(UInt32 value)
public UInt32 op_Implicit(HTTPRequestHandle value)
}
internal SteamNative.HTTPRequestHeadersReceived_t : ValueType {
internal int CallbackId
internal UInt32 Request
internal ulong ContextValue
internal HTTPRequestHeadersReceived_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.HTTPStatusCode : Enum {
public int value__
public HTTPStatusCode Invalid
public HTTPStatusCode HTTPStatusCode100Continue
public HTTPStatusCode HTTPStatusCode101SwitchingProtocols
public HTTPStatusCode HTTPStatusCode200OK
public HTTPStatusCode HTTPStatusCode201Created
public HTTPStatusCode HTTPStatusCode202Accepted
public HTTPStatusCode HTTPStatusCode203NonAuthoritative
public HTTPStatusCode HTTPStatusCode204NoContent
public HTTPStatusCode HTTPStatusCode205ResetContent
public HTTPStatusCode HTTPStatusCode206PartialContent
public HTTPStatusCode HTTPStatusCode300MultipleChoices
public HTTPStatusCode HTTPStatusCode301MovedPermanently
public HTTPStatusCode HTTPStatusCode302Found
public HTTPStatusCode HTTPStatusCode303SeeOther
public HTTPStatusCode HTTPStatusCode304NotModified
public HTTPStatusCode HTTPStatusCode305UseProxy
public HTTPStatusCode HTTPStatusCode307TemporaryRedirect
public HTTPStatusCode HTTPStatusCode400BadRequest
public HTTPStatusCode HTTPStatusCode401Unauthorized
public HTTPStatusCode HTTPStatusCode402PaymentRequired
public HTTPStatusCode HTTPStatusCode403Forbidden
public HTTPStatusCode HTTPStatusCode404NotFound
public HTTPStatusCode HTTPStatusCode405MethodNotAllowed
public HTTPStatusCode HTTPStatusCode406NotAcceptable
public HTTPStatusCode HTTPStatusCode407ProxyAuthRequired
public HTTPStatusCode HTTPStatusCode408RequestTimeout
public HTTPStatusCode HTTPStatusCode409Conflict
public HTTPStatusCode HTTPStatusCode410Gone
public HTTPStatusCode HTTPStatusCode411LengthRequired
public HTTPStatusCode HTTPStatusCode412PreconditionFailed
public HTTPStatusCode HTTPStatusCode413RequestEntityTooLarge
public HTTPStatusCode HTTPStatusCode414RequestURITooLong
public HTTPStatusCode HTTPStatusCode415UnsupportedMediaType
public HTTPStatusCode HTTPStatusCode416RequestedRangeNotSatisfiable
public HTTPStatusCode HTTPStatusCode417ExpectationFailed
public HTTPStatusCode HTTPStatusCode4xxUnknown
public HTTPStatusCode HTTPStatusCode429TooManyRequests
public HTTPStatusCode HTTPStatusCode500InternalServerError
public HTTPStatusCode HTTPStatusCode501NotImplemented
public HTTPStatusCode HTTPStatusCode502BadGateway
public HTTPStatusCode HTTPStatusCode503ServiceUnavailable
public HTTPStatusCode HTTPStatusCode504GatewayTimeout
public HTTPStatusCode HTTPStatusCode505HTTPVersionNotSupported
public HTTPStatusCode HTTPStatusCode5xxUnknown
}
internal SteamNative.IPCFailure_t : ValueType {
internal int CallbackId
internal byte FailureType
internal IPCFailure_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.IPCountry_t : ValueType {
internal int CallbackId
internal IPCountry_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ItemInstalled_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal ulong PublishedFileId
internal ItemInstalled_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ItemPreviewType : Enum {
public int value__
public ItemPreviewType Image
public ItemPreviewType YouTubeVideo
public ItemPreviewType Sketchfab
public ItemPreviewType EnvironmentMap_HorizontalCross
public ItemPreviewType EnvironmentMap_LatLong
public ItemPreviewType ReservedMax
}
internal SteamNative.ItemState : Enum {
public int value__
public ItemState None
public ItemState Subscribed
public ItemState LegacyItem
public ItemState Installed
public ItemState NeedsUpdate
public ItemState Downloading
public ItemState DownloadPending
}
internal SteamNative.ItemStatistic : Enum {
public int value__
public ItemStatistic NumSubscriptions
public ItemStatistic NumFavorites
public ItemStatistic NumFollowers
public ItemStatistic NumUniqueSubscriptions
public ItemStatistic NumUniqueFavorites
public ItemStatistic NumUniqueFollowers
public ItemStatistic NumUniqueWebsiteViews
public ItemStatistic ReportScore
public ItemStatistic NumSecondsPlayed
public ItemStatistic NumPlaytimeSessions
public ItemStatistic NumComments
public ItemStatistic NumSecondsPlayedDuringTimePeriod
public ItemStatistic NumPlaytimeSessionsDuringTimePeriod
}
internal SteamNative.ItemUpdateStatus : Enum {
public int value__
public ItemUpdateStatus Invalid
public ItemUpdateStatus PreparingConfig
public ItemUpdateStatus PreparingContent
public ItemUpdateStatus UploadingContent
public ItemUpdateStatus UploadingPreviewFile
public ItemUpdateStatus CommittingChanges
}
internal SteamNative.JobID_t : ValueType {
public ulong Value
public JobID_t op_Implicit(ulong value)
public ulong op_Implicit(JobID_t value)
}
internal SteamNative.JoinClanChatRoomCompletionResult_t : ValueType {
internal int CallbackId
internal ulong SteamIDClanChat
internal ChatRoomEnterResponse ChatRoomEnterResponse
internal JoinClanChatRoomCompletionResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<JoinClanChatRoomCompletionResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<JoinClanChatRoomCompletionResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LaunchOptionType : Enum {
public int value__
public LaunchOptionType None
public LaunchOptionType Default
public LaunchOptionType SafeMode
public LaunchOptionType Multiplayer
public LaunchOptionType Config
public LaunchOptionType OpenVR
public LaunchOptionType Server
public LaunchOptionType Editor
public LaunchOptionType Manual
public LaunchOptionType Benchmark
public LaunchOptionType Option1
public LaunchOptionType Option2
public LaunchOptionType Option3
public LaunchOptionType OculusVR
public LaunchOptionType OpenVROverlay
public LaunchOptionType OSVR
public LaunchOptionType Dialog
}
internal SteamNative.LeaderboardDataRequest : Enum {
public int value__
public LeaderboardDataRequest Global
public LeaderboardDataRequest GlobalAroundUser
public LeaderboardDataRequest Friends
public LeaderboardDataRequest Users
}
internal SteamNative.LeaderboardDisplayType : Enum {
public int value__
public LeaderboardDisplayType None
public LeaderboardDisplayType Numeric
public LeaderboardDisplayType TimeSeconds
public LeaderboardDisplayType TimeMilliSeconds
}
internal SteamNative.LeaderboardEntry_t : ValueType {
internal ulong SteamIDUser
internal int GlobalRank
internal int Score
internal int CDetails
internal ulong UGC
internal LeaderboardEntry_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.LeaderboardFindResult_t : ValueType {
internal int CallbackId
internal ulong SteamLeaderboard
internal byte LeaderboardFound
internal LeaderboardFindResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LeaderboardFindResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LeaderboardFindResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LeaderboardScoresDownloaded_t : ValueType {
internal int CallbackId
internal ulong SteamLeaderboard
internal ulong SteamLeaderboardEntries
internal int CEntryCount
internal LeaderboardScoresDownloaded_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LeaderboardScoresDownloaded_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LeaderboardScoresDownloaded_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LeaderboardScoreUploaded_t : ValueType {
internal int CallbackId
internal byte Success
internal ulong SteamLeaderboard
internal int Score
internal byte ScoreChanged
internal int GlobalRankNew
internal int GlobalRankPrevious
internal LeaderboardScoreUploaded_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LeaderboardScoreUploaded_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LeaderboardScoreUploaded_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LeaderboardSortMethod : Enum {
public int value__
public LeaderboardSortMethod None
public LeaderboardSortMethod Ascending
public LeaderboardSortMethod Descending
}
internal SteamNative.LeaderboardUGCSet_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamLeaderboard
internal LeaderboardUGCSet_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LeaderboardUGCSet_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LeaderboardUGCSet_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LeaderboardUploadScoreMethod : Enum {
public int value__
public LeaderboardUploadScoreMethod None
public LeaderboardUploadScoreMethod KeepBest
public LeaderboardUploadScoreMethod ForceUpdate
}
internal SteamNative.LicensesUpdated_t : ValueType {
internal int CallbackId
internal LicensesUpdated_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyChatMsg_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal ulong SteamIDUser
internal byte ChatEntryType
internal UInt32 ChatID
internal LobbyChatMsg_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyChatUpdate_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal ulong SteamIDUserChanged
internal ulong SteamIDMakingChange
internal UInt32 GfChatMemberStateChange
internal LobbyChatUpdate_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyComparison : Enum {
public int value__
public LobbyComparison EqualToOrLessThan
public LobbyComparison LessThan
public LobbyComparison Equal
public LobbyComparison GreaterThan
public LobbyComparison EqualToOrGreaterThan
public LobbyComparison NotEqual
}
internal SteamNative.LobbyCreated_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamIDLobby
internal LobbyCreated_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LobbyCreated_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LobbyCreated_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyDataUpdate_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal ulong SteamIDMember
internal byte Success
internal LobbyDataUpdate_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyDistanceFilter : Enum {
public int value__
public LobbyDistanceFilter Close
public LobbyDistanceFilter Default
public LobbyDistanceFilter Far
public LobbyDistanceFilter Worldwide
}
internal SteamNative.LobbyEnter_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal UInt32 GfChatPermissions
internal bool Locked
internal UInt32 EChatRoomEnterResponse
internal LobbyEnter_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LobbyEnter_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LobbyEnter_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyGameCreated_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal ulong SteamIDGameServer
internal UInt32 IP
internal ushort Port
internal LobbyGameCreated_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyInvite_t : ValueType {
internal int CallbackId
internal ulong SteamIDUser
internal ulong SteamIDLobby
internal ulong GameID
internal LobbyInvite_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyKicked_t : ValueType {
internal int CallbackId
internal ulong SteamIDLobby
internal ulong SteamIDAdmin
internal byte KickedDueToDisconnect
internal LobbyKicked_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyMatchList_t : ValueType {
internal int CallbackId
internal UInt32 LobbiesMatching
internal LobbyMatchList_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<LobbyMatchList_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<LobbyMatchList_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.LobbyType : Enum {
public int value__
public LobbyType Private
public LobbyType FriendsOnly
public LobbyType Public
public LobbyType Invisible
}
internal SteamNative.LowBatteryPower_t : ValueType {
internal int CallbackId
internal byte MinutesBatteryLeft
internal LowBatteryPower_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ManifestId_t : ValueType {
public ulong Value
public ManifestId_t op_Implicit(ulong value)
public ulong op_Implicit(ManifestId_t value)
}
internal SteamNative.MarketingMessageFlags : Enum {
public int value__
public MarketingMessageFlags None
public MarketingMessageFlags HighPriority
public MarketingMessageFlags PlatformWindows
public MarketingMessageFlags PlatformMac
public MarketingMessageFlags PlatformLinux
public MarketingMessageFlags PlatformRestrictions
}
internal SteamNative.MatchMakingKeyValuePair_t : ValueType {
internal string Key
internal string Value
internal MatchMakingKeyValuePair_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.MatchMakingServerResponse : Enum {
public int value__
public MatchMakingServerResponse ServerResponded
public MatchMakingServerResponse ServerFailedToRespond
public MatchMakingServerResponse NoServersListedOnMasterServer
}
internal SteamNative.MicroTxnAuthorizationResponse_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal ulong OrderID
internal byte Authorized
internal MicroTxnAuthorizationResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.MouseCursor : Enum {
public int value__
public MouseCursor user
public MouseCursor none
public MouseCursor arrow
public MouseCursor ibeam
public MouseCursor hourglass
public MouseCursor waitarrow
public MouseCursor crosshair
public MouseCursor up
public MouseCursor sizenw
public MouseCursor sizese
public MouseCursor sizene
public MouseCursor sizesw
public MouseCursor sizew
public MouseCursor sizee
public MouseCursor sizen
public MouseCursor sizes
public MouseCursor sizewe
public MouseCursor sizens
public MouseCursor sizeall
public MouseCursor no
public MouseCursor hand
public MouseCursor blank
public MouseCursor middle_pan
public MouseCursor north_pan
public MouseCursor north_east_pan
public MouseCursor east_pan
public MouseCursor south_east_pan
public MouseCursor south_pan
public MouseCursor south_west_pan
public MouseCursor west_pan
public MouseCursor north_west_pan
public MouseCursor alias
public MouseCursor cell
public MouseCursor colresize
public MouseCursor copycur
public MouseCursor verticaltext
public MouseCursor rowresize
public MouseCursor zoomin
public MouseCursor zoomout
public MouseCursor help
public MouseCursor custom
public MouseCursor last
}
internal SteamNative.MusicPlayerSelectsPlaylistEntry_t : ValueType {
internal int CallbackId
internal int NID
internal MusicPlayerSelectsPlaylistEntry_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.MusicPlayerSelectsQueueEntry_t : ValueType {
internal int CallbackId
internal int NID
internal MusicPlayerSelectsQueueEntry_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.MusicPlayerWantsLooped_t : ValueType {
internal int CallbackId
internal bool Looped
internal MusicPlayerWantsLooped_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.MusicPlayerWantsPlayingRepeatStatus_t : ValueType {
internal int CallbackId
internal int PlayingRepeatStatus
internal MusicPlayerWantsPlayingRepeatStatus_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.MusicPlayerWantsShuffled_t : ValueType {
internal int CallbackId
internal bool Shuffled
internal MusicPlayerWantsShuffled_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.MusicPlayerWantsVolume_t : ValueType {
internal int CallbackId
internal float NewVolume
internal MusicPlayerWantsVolume_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.NewLaunchQueryParameters_t : ValueType {
internal int CallbackId
internal NewLaunchQueryParameters_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.NotificationPosition : Enum {
public int value__
public NotificationPosition TopLeft
public NotificationPosition TopRight
public NotificationPosition BottomLeft
public NotificationPosition BottomRight
}
internal SteamNative.NumberOfCurrentPlayers_t : ValueType {
internal int CallbackId
internal byte Success
internal int CPlayers
internal NumberOfCurrentPlayers_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<NumberOfCurrentPlayers_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<NumberOfCurrentPlayers_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.OverlayToStoreFlag : Enum {
public int value__
public OverlayToStoreFlag None
public OverlayToStoreFlag AddToCart
public OverlayToStoreFlag AddToCartAndShow
}
internal SteamNative.P2PSend : Enum {
public int value__
public P2PSend Unreliable
public P2PSend UnreliableNoDelay
public P2PSend Reliable
public P2PSend ReliableWithBuffering
}
internal SteamNative.P2PSessionConnectFail_t : ValueType {
internal int CallbackId
internal ulong SteamIDRemote
internal byte P2PSessionError
internal P2PSessionConnectFail_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.P2PSessionError : Enum {
public int value__
public P2PSessionError None
public P2PSessionError NotRunningApp
public P2PSessionError NoRightsToApp
public P2PSessionError DestinationNotLoggedIn
public P2PSessionError Timeout
public P2PSessionError Max
}
internal SteamNative.P2PSessionRequest_t : ValueType {
internal int CallbackId
internal ulong SteamIDRemote
internal P2PSessionRequest_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.P2PSessionState_t : ValueType {
internal byte ConnectionActive
internal byte Connecting
internal byte P2PSessionError
internal byte UsingRelay
internal int BytesQueuedForSend
internal int PacketsQueuedForSend
internal UInt32 RemoteIP
internal ushort RemotePort
internal P2PSessionState_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.PackageId_t : ValueType {
public UInt32 Value
public PackageId_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(PackageId_t value)
}
internal SteamNative.ParentalFeature : Enum {
public int value__
public ParentalFeature Invalid
public ParentalFeature Store
public ParentalFeature Community
public ParentalFeature Profile
public ParentalFeature Friends
public ParentalFeature News
public ParentalFeature Trading
public ParentalFeature Settings
public ParentalFeature Console
public ParentalFeature Browser
public ParentalFeature ParentalSetup
public ParentalFeature Library
public ParentalFeature Test
public ParentalFeature Max
}
internal SteamNative.PartnerId_t : ValueType {
public UInt32 Value
public PartnerId_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(PartnerId_t value)
}
internal SteamNative.PersonaChange : Enum {
public int value__
public PersonaChange Name
public PersonaChange Status
public PersonaChange ComeOnline
public PersonaChange GoneOffline
public PersonaChange GamePlayed
public PersonaChange GameServer
public PersonaChange Avatar
public PersonaChange JoinedSource
public PersonaChange LeftSource
public PersonaChange RelationshipChanged
public PersonaChange NameFirstSet
public PersonaChange FacebookInfo
public PersonaChange Nickname
public PersonaChange SteamLevel
}
internal SteamNative.PersonaState : Enum {
public int value__
public PersonaState Offline
public PersonaState Online
public PersonaState Busy
public PersonaState Away
public PersonaState Snooze
public PersonaState LookingToTrade
public PersonaState LookingToPlay
public PersonaState Max
}
internal SteamNative.PersonaStateChange_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal int ChangeFlags
internal PersonaStateChange_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.PhysicalItemId_t : ValueType {
public UInt32 Value
public PhysicalItemId_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(PhysicalItemId_t value)
}
internal SteamNative.Platform : object {
private OperatingSystem _os
private Architecture _arch
internal OperatingSystem Os
internal Architecture Arch
public bool IsWindows
public bool IsWindows64
public bool IsWindows32
public bool IsLinux64
public bool IsLinux32
public bool IsOsx
public bool PackSmall
internal OperatingSystem get_Os()
internal void set_Os(OperatingSystem value)
internal Architecture get_Arch()
internal void set_Arch(Architecture value)
public bool get_IsWindows()
public bool get_IsWindows64()
public bool get_IsWindows32()
public bool get_IsLinux64()
public bool get_IsLinux32()
public bool get_IsOsx()
public bool get_PackSmall()
}
internal SteamNative.PS3TrophiesInstalled_t : ValueType {
internal int CallbackId
internal ulong GameID
internal Result Result
internal ulong RequiredDiskSpace
internal PS3TrophiesInstalled_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.PSNGameBootInviteResult_t : ValueType {
internal int CallbackId
internal bool GameBootInviteExists
internal ulong SteamIDLobby
internal PSNGameBootInviteResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.PublishedFileId_t : ValueType {
public ulong Value
public PublishedFileId_t op_Implicit(ulong value)
public ulong op_Implicit(PublishedFileId_t value)
}
internal SteamNative.PublishedFileUpdateHandle_t : ValueType {
public ulong Value
public PublishedFileUpdateHandle_t op_Implicit(ulong value)
public ulong op_Implicit(PublishedFileUpdateHandle_t value)
}
internal SteamNative.RegisterActivationCodeResponse_t : ValueType {
internal int CallbackId
internal RegisterActivationCodeResult Result
internal UInt32 PackageRegistered
internal RegisterActivationCodeResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RegisterActivationCodeResult : Enum {
public int value__
public RegisterActivationCodeResult ResultOK
public RegisterActivationCodeResult ResultFail
public RegisterActivationCodeResult ResultAlreadyRegistered
public RegisterActivationCodeResult ResultTimeout
public RegisterActivationCodeResult AlreadyOwned
}
internal SteamNative.RemoteStorageAppSyncedClient_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal Result Result
internal int NumDownloads
internal RemoteStorageAppSyncedClient_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageAppSyncedServer_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal Result Result
internal int NumUploads
internal RemoteStorageAppSyncedServer_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageAppSyncProgress_t : ValueType {
internal int CallbackId
internal string CurrentFile
internal UInt32 AppID
internal UInt32 BytesTransferredThisChunk
internal double DAppPercentComplete
internal bool Uploading
internal RemoteStorageAppSyncProgress_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageAppSyncStatusCheck_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal Result Result
internal RemoteStorageAppSyncStatusCheck_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageDeletePublishedFileResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal RemoteStorageDeletePublishedFileResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageDeletePublishedFileResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageDeletePublishedFileResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageDownloadUGCResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong File
internal UInt32 AppID
internal int SizeInBytes
internal string PchFileName
internal ulong SteamIDOwner
internal RemoteStorageDownloadUGCResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageDownloadUGCResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageDownloadUGCResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageEnumeratePublishedFilesByUserActionResult_t : ValueType {
internal int CallbackId
internal Result Result
internal WorkshopFileAction Action
internal int ResultsReturned
internal int TotalResultCount
internal UInt64[] GPublishedFileId
internal UInt32[] GRTimeUpdated
internal RemoteStorageEnumeratePublishedFilesByUserActionResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageEnumeratePublishedFilesByUserActionResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageEnumeratePublishedFilesByUserActionResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageEnumerateUserPublishedFilesResult_t : ValueType {
internal int CallbackId
internal Result Result
internal int ResultsReturned
internal int TotalResultCount
internal UInt64[] GPublishedFileId
internal RemoteStorageEnumerateUserPublishedFilesResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageEnumerateUserPublishedFilesResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageEnumerateUserPublishedFilesResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageEnumerateUserSharedWorkshopFilesResult_t : ValueType {
internal int CallbackId
internal Result Result
internal int ResultsReturned
internal int TotalResultCount
internal UInt64[] GPublishedFileId
internal RemoteStorageEnumerateUserSharedWorkshopFilesResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageEnumerateUserSubscribedFilesResult_t : ValueType {
internal int CallbackId
internal Result Result
internal int ResultsReturned
internal int TotalResultCount
internal UInt64[] GPublishedFileId
internal UInt32[] GRTimeSubscribed
internal RemoteStorageEnumerateUserSubscribedFilesResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageEnumerateUserSubscribedFilesResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageEnumerateUserSubscribedFilesResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageEnumerateWorkshopFilesResult_t : ValueType {
internal int CallbackId
internal Result Result
internal int ResultsReturned
internal int TotalResultCount
internal UInt64[] GPublishedFileId
internal Single[] GScore
internal UInt32 AppId
internal UInt32 StartIndex
internal RemoteStorageEnumerateWorkshopFilesResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageEnumerateWorkshopFilesResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageEnumerateWorkshopFilesResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageFileReadAsyncComplete_t : ValueType {
internal int CallbackId
internal ulong FileReadAsync
internal Result Result
internal UInt32 Offset
internal UInt32 Read
internal RemoteStorageFileReadAsyncComplete_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageFileReadAsyncComplete_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageFileReadAsyncComplete_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageFileShareResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong File
internal string Filename
internal RemoteStorageFileShareResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageFileShareResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageFileShareResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageFileWriteAsyncComplete_t : ValueType {
internal int CallbackId
internal Result Result
internal RemoteStorageFileWriteAsyncComplete_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageFileWriteAsyncComplete_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageFileWriteAsyncComplete_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageGetPublishedFileDetailsResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal UInt32 CreatorAppID
internal UInt32 ConsumerAppID
internal string Title
internal string Description
internal ulong File
internal ulong PreviewFile
internal ulong SteamIDOwner
internal UInt32 TimeCreated
internal UInt32 TimeUpdated
internal RemoteStoragePublishedFileVisibility Visibility
internal bool Banned
internal string Tags
internal bool TagsTruncated
internal string PchFileName
internal int FileSize
internal int PreviewFileSize
internal string URL
internal WorkshopFileType FileType
internal bool AcceptedForUse
internal RemoteStorageGetPublishedFileDetailsResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageGetPublishedFileDetailsResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageGetPublishedFileDetailsResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageGetPublishedItemVoteDetailsResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal int VotesFor
internal int VotesAgainst
internal int Reports
internal float FScore
internal RemoteStorageGetPublishedItemVoteDetailsResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageGetPublishedItemVoteDetailsResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageGetPublishedItemVoteDetailsResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStoragePlatform : Enum {
public int value__
public RemoteStoragePlatform None
public RemoteStoragePlatform Windows
public RemoteStoragePlatform OSX
public RemoteStoragePlatform PS3
public RemoteStoragePlatform Linux
public RemoteStoragePlatform Reserved2
public RemoteStoragePlatform All
}
internal SteamNative.RemoteStoragePublishedFileDeleted_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal UInt32 AppID
internal RemoteStoragePublishedFileDeleted_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStoragePublishedFileSubscribed_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal UInt32 AppID
internal RemoteStoragePublishedFileSubscribed_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStoragePublishedFileUnsubscribed_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal UInt32 AppID
internal RemoteStoragePublishedFileUnsubscribed_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStoragePublishedFileUpdated_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal UInt32 AppID
internal ulong Unused
internal RemoteStoragePublishedFileUpdated_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStoragePublishedFileVisibility : Enum {
public int value__
public RemoteStoragePublishedFileVisibility Public
public RemoteStoragePublishedFileVisibility FriendsOnly
public RemoteStoragePublishedFileVisibility Private
}
internal SteamNative.RemoteStoragePublishFileProgress_t : ValueType {
internal int CallbackId
internal double DPercentFile
internal bool Preview
internal RemoteStoragePublishFileProgress_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStoragePublishFileProgress_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStoragePublishFileProgress_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStoragePublishFileResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal bool UserNeedsToAcceptWorkshopLegalAgreement
internal RemoteStoragePublishFileResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageSetUserPublishedFileActionResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal WorkshopFileAction Action
internal RemoteStorageSetUserPublishedFileActionResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageSetUserPublishedFileActionResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageSetUserPublishedFileActionResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageSubscribePublishedFileResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal RemoteStorageSubscribePublishedFileResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageSubscribePublishedFileResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageSubscribePublishedFileResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageUnsubscribePublishedFileResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal RemoteStorageUnsubscribePublishedFileResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageUnsubscribePublishedFileResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageUnsubscribePublishedFileResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageUpdatePublishedFileResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal bool UserNeedsToAcceptWorkshopLegalAgreement
internal RemoteStorageUpdatePublishedFileResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageUpdatePublishedFileResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageUpdatePublishedFileResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageUpdateUserPublishedItemVoteResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal RemoteStorageUpdateUserPublishedItemVoteResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoteStorageUpdateUserPublishedItemVoteResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoteStorageUpdateUserPublishedItemVoteResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoteStorageUserVoteDetails_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal WorkshopVote Vote
internal RemoteStorageUserVoteDetails_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoveAppDependencyResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal UInt32 AppID
internal RemoveAppDependencyResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoveAppDependencyResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoveAppDependencyResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.RemoveUGCDependencyResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong PublishedFileId
internal ulong ChildPublishedFileId
internal RemoveUGCDependencyResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<RemoveUGCDependencyResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<RemoveUGCDependencyResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.Result : Enum {
public int value__
public Result OK
public Result Fail
public Result NoConnection
public Result InvalidPassword
public Result LoggedInElsewhere
public Result InvalidProtocolVer
public Result InvalidParam
public Result FileNotFound
public Result Busy
public Result InvalidState
public Result InvalidName
public Result InvalidEmail
public Result DuplicateName
public Result AccessDenied
public Result Timeout
public Result Banned
public Result AccountNotFound
public Result InvalidSteamID
public Result ServiceUnavailable
public Result NotLoggedOn
public Result Pending
public Result EncryptionFailure
public Result InsufficientPrivilege
public Result LimitExceeded
public Result Revoked
public Result Expired
public Result AlreadyRedeemed
public Result DuplicateRequest
public Result AlreadyOwned
public Result IPNotFound
public Result PersistFailed
public Result LockingFailed
public Result LogonSessionReplaced
public Result ConnectFailed
public Result HandshakeFailed
public Result IOFailure
public Result RemoteDisconnect
public Result ShoppingCartNotFound
public Result Blocked
public Result Ignored
public Result NoMatch
public Result AccountDisabled
public Result ServiceReadOnly
public Result AccountNotFeatured
public Result AdministratorOK
public Result ContentVersion
public Result TryAnotherCM
public Result PasswordRequiredToKickSession
public Result AlreadyLoggedInElsewhere
public Result Suspended
public Result Cancelled
public Result DataCorruption
public Result DiskFull
public Result RemoteCallFailed
public Result PasswordUnset
public Result ExternalAccountUnlinked
public Result PSNTicketInvalid
public Result ExternalAccountAlreadyLinked
public Result RemoteFileConflict
public Result IllegalPassword
public Result SameAsPreviousValue
public Result AccountLogonDenied
public Result CannotUseOldPassword
public Result InvalidLoginAuthCode
public Result AccountLogonDeniedNoMail
public Result HardwareNotCapableOfIPT
public Result IPTInitError
public Result ParentalControlRestricted
public Result FacebookQueryError
public Result ExpiredLoginAuthCode
public Result IPLoginRestrictionFailed
public Result AccountLockedDown
public Result AccountLogonDeniedVerifiedEmailRequired
public Result NoMatchingURL
public Result BadResponse
public Result RequirePasswordReEntry
public Result ValueOutOfRange
public Result UnexpectedError
public Result Disabled
public Result InvalidCEGSubmission
public Result RestrictedDevice
public Result RegionLocked
public Result RateLimitExceeded
public Result AccountLoginDeniedNeedTwoFactor
public Result ItemDeleted
public Result AccountLoginDeniedThrottle
public Result TwoFactorCodeMismatch
public Result TwoFactorActivationCodeMismatch
public Result AccountAssociatedToMultiplePartners
public Result NotModified
public Result NoMobileDevice
public Result TimeNotSynced
public Result SmsCodeFailed
public Result AccountLimitExceeded
public Result AccountActivityLimitExceeded
public Result PhoneActivityLimitExceeded
public Result RefundToWallet
public Result EmailSendFailure
public Result NotSettled
public Result NeedCaptcha
public Result GSLTDenied
public Result GSOwnerDenied
public Result InvalidItemType
public Result IPBanned
public Result GSLTExpired
public Result InsufficientFunds
public Result TooManyPending
public Result NoSiteLicensesFound
public Result WGNetworkSendExceeded
public Result AccountNotFriends
public Result LimitedUserAccount
}
internal SteamNative.RTime32 : ValueType {
public UInt32 Value
public RTime32 op_Implicit(UInt32 value)
public UInt32 op_Implicit(RTime32 value)
}
internal SteamNative.ScreenshotHandle : ValueType {
public UInt32 Value
public ScreenshotHandle op_Implicit(UInt32 value)
public UInt32 op_Implicit(ScreenshotHandle value)
}
internal SteamNative.ScreenshotReady_t : ValueType {
internal int CallbackId
internal UInt32 Local
internal Result Result
internal ScreenshotReady_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.ScreenshotRequested_t : ValueType {
internal int CallbackId
internal ScreenshotRequested_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.servernetadr_t : ValueType {
internal ushort ConnectionPort
internal ushort QueryPort
internal UInt32 IP
internal servernetadr_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.SetPersonaNameResponse_t : ValueType {
internal int CallbackId
internal bool Success
internal bool LocalSuccess
internal Result Result
internal SetPersonaNameResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SetPersonaNameResponse_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SetPersonaNameResponse_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SetUserItemVoteResult_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal Result Result
internal bool VoteUp
internal SetUserItemVoteResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SetUserItemVoteResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SetUserItemVoteResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SiteId_t : ValueType {
public ulong Value
public SiteId_t op_Implicit(ulong value)
public ulong op_Implicit(SiteId_t value)
}
internal SteamNative.SNetListenSocket_t : ValueType {
public UInt32 Value
public SNetListenSocket_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(SNetListenSocket_t value)
}
internal SteamNative.SNetSocket_t : ValueType {
public UInt32 Value
public SNetSocket_t op_Implicit(UInt32 value)
public UInt32 op_Implicit(SNetSocket_t value)
}
internal SteamNative.SNetSocketConnectionType : Enum {
public int value__
public SNetSocketConnectionType NotConnected
public SNetSocketConnectionType UDP
public SNetSocketConnectionType UDPRelay
}
internal SteamNative.SNetSocketState : Enum {
public int value__
public SNetSocketState Invalid
public SNetSocketState Connected
public SNetSocketState Initiated
public SNetSocketState LocalCandidatesFound
public SNetSocketState ReceivedRemoteCandidates
public SNetSocketState ChallengeHandshake
public SNetSocketState Disconnecting
public SNetSocketState LocalDisconnect
public SNetSocketState TimeoutDuringConnect
public SNetSocketState RemoteEndDisconnected
public SNetSocketState ConnectionBroken
}
internal SteamNative.SocketStatusCallback_t : ValueType {
internal int CallbackId
internal UInt32 Socket
internal UInt32 ListenSocket
internal ulong SteamIDRemote
internal int SNetSocketState
internal SocketStatusCallback_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.StartPlaytimeTrackingResult_t : ValueType {
internal int CallbackId
internal Result Result
internal StartPlaytimeTrackingResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<StartPlaytimeTrackingResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<StartPlaytimeTrackingResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamApi : object {
internal Interface platform
public bool IsValid
public bool get_IsValid()
public void Dispose()
public HSteamPipe SteamAPI_GetHSteamPipe()
public HSteamUser SteamAPI_GetHSteamUser()
public bool SteamAPI_Init()
public void SteamAPI_RegisterCallback(IntPtr pCallback, int callback)
public void SteamAPI_RegisterCallResult(IntPtr pCallback, SteamAPICall_t callback)
public bool SteamAPI_RestartAppIfNecessary(UInt32 unOwnAppID)
public void SteamAPI_RunCallbacks()
public void SteamAPI_Shutdown()
public void SteamAPI_UnregisterCallback(IntPtr pCallback)
public void SteamAPI_UnregisterCallResult(IntPtr pCallback, SteamAPICall_t callback)
public HSteamPipe SteamGameServer_GetHSteamPipe()
public HSteamUser SteamGameServer_GetHSteamUser()
public void SteamGameServer_RunCallbacks()
public void SteamGameServer_Shutdown()
public IntPtr SteamInternal_CreateInterface(string version)
public bool SteamInternal_GameServer_Init(UInt32 unIP, ushort usPort, ushort usGamePort, ushort usQueryPort, int eServerMode, string pchVersionString)
}
internal SteamNative.SteamAPICall_t : ValueType {
public ulong Value
public SteamAPICall_t op_Implicit(ulong value)
public ulong op_Implicit(SteamAPICall_t value)
}
internal SteamNative.SteamAPICallCompleted_t : ValueType {
internal int CallbackId
internal ulong AsyncCall
internal int Callback
internal UInt32 ParamCount
internal SteamAPICallCompleted_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamAPICallFailure : Enum {
public int value__
public SteamAPICallFailure None
public SteamAPICallFailure SteamGone
public SteamAPICallFailure NetworkFailure
public SteamAPICallFailure InvalidHandle
public SteamAPICallFailure MismatchedCallback
}
internal SteamNative.SteamAppInstalled_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal SteamAppInstalled_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamAppList : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public int GetAppBuildId(AppId_t nAppID)
public string GetAppInstallDir(AppId_t nAppID)
public string GetAppName(AppId_t nAppID)
public UInt32 GetInstalledApps(AppId_t[] pvecAppID)
public UInt32 GetNumInstalledApps()
}
internal SteamNative.SteamApps : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool BGetDLCDataByIndex(int iDLC, AppId_t& pAppID, Boolean& pbAvailable, String& pchName)
public bool BIsAppInstalled(AppId_t appID)
public bool BIsCybercafe()
public bool BIsDlcInstalled(AppId_t appID)
public bool BIsLowViolence()
public bool BIsSubscribed()
public bool BIsSubscribedApp(AppId_t appID)
public bool BIsSubscribedFromFreeWeekend()
public bool BIsVACBanned()
public int GetAppBuildId()
public string GetAppInstallDir(AppId_t appID)
public ulong GetAppOwner()
public string GetAvailableGameLanguages()
public string GetCurrentBetaName()
public string GetCurrentGameLanguage()
public int GetDLCCount()
public bool GetDlcDownloadProgress(AppId_t nAppID, UInt64& punBytesDownloaded, UInt64& punBytesTotal)
public UInt32 GetEarliestPurchaseUnixTime(AppId_t nAppID)
public CallbackHandle GetFileDetails(string pszFileName, Action`2<FileDetailsResult_t, bool> CallbackFunction)
public UInt32 GetInstalledDepots(AppId_t appID, IntPtr pvecDepots, UInt32 cMaxDepots)
public string GetLaunchQueryParam(string pchKey)
public void InstallDLC(AppId_t nAppID)
public bool MarkContentCorrupt(bool bMissingFilesOnly)
public void RequestAllProofOfPurchaseKeys()
public void RequestAppProofOfPurchaseKey(AppId_t nAppID)
public void UninstallDLC(AppId_t nAppID)
}
internal SteamNative.SteamAppUninstalled_t : ValueType {
internal int CallbackId
internal UInt32 AppID
internal SteamAppUninstalled_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamClient : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool BReleaseSteamPipe(HSteamPipe hSteamPipe)
public bool BShutdownIfAllPipesClosed()
public HSteamUser ConnectToGlobalUser(HSteamPipe hSteamPipe)
public HSteamUser CreateLocalUser(HSteamPipe& phSteamPipe, AccountType eAccountType)
public HSteamPipe CreateSteamPipe()
public UInt32 GetIPCCallCount()
public SteamAppList GetISteamAppList(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamApps GetISteamApps(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamController GetISteamController(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamFriends GetISteamFriends(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamGameServer GetISteamGameServer(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamGameServerStats GetISteamGameServerStats(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public IntPtr GetISteamGenericInterface(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamHTMLSurface GetISteamHTMLSurface(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamHTTP GetISteamHTTP(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamInventory GetISteamInventory(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamMatchmaking GetISteamMatchmaking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamMatchmakingServers GetISteamMatchmakingServers(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamMusic GetISteamMusic(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamMusicRemote GetISteamMusicRemote(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamNetworking GetISteamNetworking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamParentalSettings GetISteamParentalSettings(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamRemoteStorage GetISteamRemoteStorage(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamScreenshots GetISteamScreenshots(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public SteamUGC GetISteamUGC(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamUser GetISteamUser(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamUserStats GetISteamUserStats(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
public SteamUtils GetISteamUtils(HSteamPipe hSteamPipe, string pchVersion)
public SteamVideo GetISteamVideo(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
public void ReleaseUser(HSteamPipe hSteamPipe, HSteamUser hUser)
public void SetLocalIPBinding(UInt32 unIP, ushort usPort)
public void SetWarningMessageHook(IntPtr pFunction)
}
internal SteamNative.SteamController : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public void ActivateActionSet(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle)
public void ActivateActionSetLayer(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle)
public void DeactivateActionSetLayer(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle)
public void DeactivateAllActionSetLayers(ControllerHandle_t controllerHandle)
public ControllerActionSetHandle_t GetActionSetHandle(string pszActionSetName)
public int GetActiveActionSetLayers(ControllerHandle_t controllerHandle, IntPtr handlesOut)
public ControllerAnalogActionData_t GetAnalogActionData(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle)
public ControllerAnalogActionHandle_t GetAnalogActionHandle(string pszActionName)
public int GetAnalogActionOrigins(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerAnalogActionHandle_t analogActionHandle, ControllerActionOrigin& originsOut)
public int GetConnectedControllers(IntPtr handlesOut)
public ControllerHandle_t GetControllerForGamepadIndex(int nIndex)
public ControllerActionSetHandle_t GetCurrentActionSet(ControllerHandle_t controllerHandle)
public ControllerDigitalActionData_t GetDigitalActionData(ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle)
public ControllerDigitalActionHandle_t GetDigitalActionHandle(string pszActionName)
public int GetDigitalActionOrigins(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerDigitalActionHandle_t digitalActionHandle, ControllerActionOrigin& originsOut)
public int GetGamepadIndexForController(ControllerHandle_t ulControllerHandle)
public string GetGlyphForActionOrigin(ControllerActionOrigin eOrigin)
public SteamInputType GetInputTypeForHandle(ControllerHandle_t controllerHandle)
public ControllerMotionData_t GetMotionData(ControllerHandle_t controllerHandle)
public string GetStringForActionOrigin(ControllerActionOrigin eOrigin)
public bool Init()
public void RunFrame()
public void SetLEDColor(ControllerHandle_t controllerHandle, byte nColorR, byte nColorG, byte nColorB, UInt32 nFlags)
public bool ShowAnalogActionOrigins(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle, float flScale, float flXPosition, float flYPosition)
public bool ShowBindingPanel(ControllerHandle_t controllerHandle)
public bool ShowDigitalActionOrigins(ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle, float flScale, float flXPosition, float flYPosition)
public bool Shutdown()
public void StopAnalogActionMomentum(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t eAction)
public void TriggerHapticPulse(ControllerHandle_t controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec)
public void TriggerRepeatedHapticPulse(ControllerHandle_t controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, UInt32 nFlags)
public void TriggerVibration(ControllerHandle_t controllerHandle, ushort usLeftSpeed, ushort usRightSpeed)
}
internal SteamNative.SteamControllerLEDFlag : Enum {
public int value__
public SteamControllerLEDFlag SetColor
public SteamControllerLEDFlag RestoreUserDefault
}
internal SteamNative.SteamControllerPad : Enum {
public int value__
public SteamControllerPad Left
public SteamControllerPad Right
}
internal SteamNative.SteamFriends : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public void ActivateGameOverlay(string pchDialog)
public void ActivateGameOverlayInviteDialog(CSteamID steamIDLobby)
public void ActivateGameOverlayToStore(AppId_t nAppID, OverlayToStoreFlag eFlag)
public void ActivateGameOverlayToUser(string pchDialog, CSteamID steamID)
public void ActivateGameOverlayToWebPage(string pchURL)
public void ClearRichPresence()
public bool CloseClanChatWindowInSteam(CSteamID steamIDClanChat)
public SteamAPICall_t DownloadClanActivityCounts(IntPtr psteamIDClans, int cClansToRequest)
public CallbackHandle EnumerateFollowingList(UInt32 unStartIndex, Action`2<FriendsEnumerateFollowingList_t, bool> CallbackFunction)
public ulong GetChatMemberByIndex(CSteamID steamIDClan, int iUser)
public bool GetClanActivityCounts(CSteamID steamIDClan, Int32& pnOnline, Int32& pnInGame, Int32& pnChatting)
public ulong GetClanByIndex(int iClan)
public int GetClanChatMemberCount(CSteamID steamIDClan)
public int GetClanChatMessage(CSteamID steamIDClanChat, int iMessage, IntPtr prgchText, int cchTextMax, ChatEntryType& peChatEntryType, CSteamID& psteamidChatter)
public int GetClanCount()
public string GetClanName(CSteamID steamIDClan)
public ulong GetClanOfficerByIndex(CSteamID steamIDClan, int iOfficer)
public int GetClanOfficerCount(CSteamID steamIDClan)
public ulong GetClanOwner(CSteamID steamIDClan)
public string GetClanTag(CSteamID steamIDClan)
public ulong GetCoplayFriend(int iCoplayFriend)
public int GetCoplayFriendCount()
public CallbackHandle GetFollowerCount(CSteamID steamID, Action`2<FriendsGetFollowerCount_t, bool> CallbackFunction)
public ulong GetFriendByIndex(int iFriend, int iFriendFlags)
public AppId_t GetFriendCoplayGame(CSteamID steamIDFriend)
public int GetFriendCoplayTime(CSteamID steamIDFriend)
public int GetFriendCount(int iFriendFlags)
public int GetFriendCountFromSource(CSteamID steamIDSource)
public ulong GetFriendFromSourceByIndex(CSteamID steamIDSource, int iFriend)
public bool GetFriendGamePlayed(CSteamID steamIDFriend, FriendGameInfo_t& pFriendGameInfo)
public int GetFriendMessage(CSteamID steamIDFriend, int iMessageID, IntPtr pvData, int cubData, ChatEntryType& peChatEntryType)
public string GetFriendPersonaName(CSteamID steamIDFriend)
public string GetFriendPersonaNameHistory(CSteamID steamIDFriend, int iPersonaName)
public PersonaState GetFriendPersonaState(CSteamID steamIDFriend)
public FriendRelationship GetFriendRelationship(CSteamID steamIDFriend)
public string GetFriendRichPresence(CSteamID steamIDFriend, string pchKey)
public string GetFriendRichPresenceKeyByIndex(CSteamID steamIDFriend, int iKey)
public int GetFriendRichPresenceKeyCount(CSteamID steamIDFriend)
public int GetFriendsGroupCount()
public FriendsGroupID_t GetFriendsGroupIDByIndex(int iFG)
public int GetFriendsGroupMembersCount(FriendsGroupID_t friendsGroupID)
public void GetFriendsGroupMembersList(FriendsGroupID_t friendsGroupID, IntPtr pOutSteamIDMembers, int nMembersCount)
public string GetFriendsGroupName(FriendsGroupID_t friendsGroupID)
public int GetFriendSteamLevel(CSteamID steamIDFriend)
public int GetLargeFriendAvatar(CSteamID steamIDFriend)
public int GetMediumFriendAvatar(CSteamID steamIDFriend)
public string GetPersonaName()
public PersonaState GetPersonaState()
public string GetPlayerNickname(CSteamID steamIDPlayer)
public int GetSmallFriendAvatar(CSteamID steamIDFriend)
public UInt32 GetUserRestrictions()
public bool HasFriend(CSteamID steamIDFriend, int iFriendFlags)
public bool InviteUserToGame(CSteamID steamIDFriend, string pchConnectString)
public bool IsClanChatAdmin(CSteamID steamIDClanChat, CSteamID steamIDUser)
public bool IsClanChatWindowOpenInSteam(CSteamID steamIDClanChat)
public bool IsClanOfficialGameGroup(CSteamID steamIDClan)
public bool IsClanPublic(CSteamID steamIDClan)
public CallbackHandle IsFollowing(CSteamID steamID, Action`2<FriendsIsFollowing_t, bool> CallbackFunction)
public bool IsUserInSource(CSteamID steamIDUser, CSteamID steamIDSource)
public CallbackHandle JoinClanChatRoom(CSteamID steamIDClan, Action`2<JoinClanChatRoomCompletionResult_t, bool> CallbackFunction)
public bool LeaveClanChatRoom(CSteamID steamIDClan)
public bool OpenClanChatWindowInSteam(CSteamID steamIDClanChat)
public bool ReplyToFriendMessage(CSteamID steamIDFriend, string pchMsgToSend)
public CallbackHandle RequestClanOfficerList(CSteamID steamIDClan, Action`2<ClanOfficerListResponse_t, bool> CallbackFunction)
public void RequestFriendRichPresence(CSteamID steamIDFriend)
public bool RequestUserInformation(CSteamID steamIDUser, bool bRequireNameOnly)
public bool SendClanChatMessage(CSteamID steamIDClanChat, string pchText)
public void SetInGameVoiceSpeaking(CSteamID steamIDUser, bool bSpeaking)
public bool SetListenForFriendsMessages(bool bInterceptEnabled)
public CallbackHandle SetPersonaName(string pchPersonaName, Action`2<SetPersonaNameResponse_t, bool> CallbackFunction)
public void SetPlayedWith(CSteamID steamIDUserPlayedWith)
public bool SetRichPresence(string pchKey, string pchValue)
}
internal SteamNative.SteamGameServer : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public CallbackHandle AssociateWithClan(CSteamID steamIDClan, Action`2<AssociateWithClanResult_t, bool> CallbackFunction)
public BeginAuthSessionResult BeginAuthSession(IntPtr pAuthTicket, int cbAuthTicket, CSteamID steamID)
public bool BLoggedOn()
public bool BSecure()
public bool BUpdateUserData(CSteamID steamIDUser, string pchPlayerName, UInt32 uScore)
public void CancelAuthTicket(HAuthTicket hAuthTicket)
public void ClearAllKeyValues()
public CallbackHandle ComputeNewPlayerCompatibility(CSteamID steamIDNewPlayer, Action`2<ComputeNewPlayerCompatibilityResult_t, bool> CallbackFunction)
public ulong CreateUnauthenticatedUserConnection()
public void EnableHeartbeats(bool bActive)
public void EndAuthSession(CSteamID steamID)
public void ForceHeartbeat()
public HAuthTicket GetAuthSessionTicket(IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket)
public void GetGameplayStats()
public int GetNextOutgoingPacket(IntPtr pOut, int cbMaxOut, UInt32& pNetAdr, UInt16& pPort)
public UInt32 GetPublicIP()
public CallbackHandle GetServerReputation(Action`2<GSReputation_t, bool> CallbackFunction)
public ulong GetSteamID()
public bool HandleIncomingPacket(IntPtr pData, int cbData, UInt32 srcIP, ushort srcPort)
public bool InitGameServer(UInt32 unIP, ushort usGamePort, ushort usQueryPort, UInt32 unFlags, AppId_t nGameAppId, string pchVersionString)
public void LogOff()
public void LogOn(string pszToken)
public void LogOnAnonymous()
public bool RequestUserGroupStatus(CSteamID steamIDUser, CSteamID steamIDGroup)
public bool SendUserConnectAndAuthenticate(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, CSteamID& pSteamIDUser)
public void SendUserDisconnect(CSteamID steamIDUser)
public void SetBotPlayerCount(int cBotplayers)
public void SetDedicatedServer(bool bDedicated)
public void SetGameData(string pchGameData)
public void SetGameDescription(string pszGameDescription)
public void SetGameTags(string pchGameTags)
public void SetHeartbeatInterval(int iHeartbeatInterval)
public void SetKeyValue(string pKey, string pValue)
public void SetMapName(string pszMapName)
public void SetMaxPlayerCount(int cPlayersMax)
public void SetModDir(string pszModDir)
public void SetPasswordProtected(bool bPasswordProtected)
public void SetProduct(string pszProduct)
public void SetRegion(string pszRegion)
public void SetServerName(string pszServerName)
public void SetSpectatorPort(ushort unSpectatorPort)
public void SetSpectatorServerName(string pszSpectatorServerName)
public UserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, AppId_t appID)
public bool WasRestartRequested()
}
internal SteamNative.SteamGameServerStats : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool ClearUserAchievement(CSteamID steamIDUser, string pchName)
public bool GetUserAchievement(CSteamID steamIDUser, string pchName, Boolean& pbAchieved)
public bool GetUserStat(CSteamID steamIDUser, string pchName, Int32& pData)
public bool GetUserStat0(CSteamID steamIDUser, string pchName, Single& pData)
public CallbackHandle RequestUserStats(CSteamID steamIDUser, Action`2<GSStatsReceived_t, bool> CallbackFunction)
public bool SetUserAchievement(CSteamID steamIDUser, string pchName)
public bool SetUserStat(CSteamID steamIDUser, string pchName, int nData)
public bool SetUserStat0(CSteamID steamIDUser, string pchName, float fData)
public CallbackHandle StoreUserStats(CSteamID steamIDUser, Action`2<GSStatsStored_t, bool> CallbackFunction)
public bool UpdateUserAvgRateStat(CSteamID steamIDUser, string pchName, float flCountThisSession, double dSessionLength)
}
internal SteamNative.SteamHTMLSurface : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public void AddHeader(HHTMLBrowser unBrowserHandle, string pchKey, string pchValue)
public void AllowStartRequest(HHTMLBrowser unBrowserHandle, bool bAllowed)
public void CopyToClipboard(HHTMLBrowser unBrowserHandle)
public CallbackHandle CreateBrowser(string pchUserAgent, string pchUserCSS, Action`2<HTML_BrowserReady_t, bool> CallbackFunction)
public void DestructISteamHTMLSurface()
public void ExecuteJavascript(HHTMLBrowser unBrowserHandle, string pchScript)
public void Find(HHTMLBrowser unBrowserHandle, string pchSearchStr, bool bCurrentlyInFind, bool bReverse)
public void GetLinkAtPosition(HHTMLBrowser unBrowserHandle, int x, int y)
public void GoBack(HHTMLBrowser unBrowserHandle)
public void GoForward(HHTMLBrowser unBrowserHandle)
public bool Init()
public void JSDialogResponse(HHTMLBrowser unBrowserHandle, bool bResult)
public void KeyChar(HHTMLBrowser unBrowserHandle, UInt32 cUnicodeChar, HTMLKeyModifiers eHTMLKeyModifiers)
public void KeyDown(HHTMLBrowser unBrowserHandle, UInt32 nNativeKeyCode, HTMLKeyModifiers eHTMLKeyModifiers)
public void KeyUp(HHTMLBrowser unBrowserHandle, UInt32 nNativeKeyCode, HTMLKeyModifiers eHTMLKeyModifiers)
public void LoadURL(HHTMLBrowser unBrowserHandle, string pchURL, string pchPostData)
public void MouseDoubleClick(HHTMLBrowser unBrowserHandle, HTMLMouseButton eMouseButton)
public void MouseDown(HHTMLBrowser unBrowserHandle, HTMLMouseButton eMouseButton)
public void MouseMove(HHTMLBrowser unBrowserHandle, int x, int y)
public void MouseUp(HHTMLBrowser unBrowserHandle, HTMLMouseButton eMouseButton)
public void MouseWheel(HHTMLBrowser unBrowserHandle, int nDelta)
public void PasteFromClipboard(HHTMLBrowser unBrowserHandle)
public void Reload(HHTMLBrowser unBrowserHandle)
public void RemoveBrowser(HHTMLBrowser unBrowserHandle)
public void SetBackgroundMode(HHTMLBrowser unBrowserHandle, bool bBackgroundMode)
public void SetCookie(string pchHostname, string pchKey, string pchValue, string pchPath, RTime32 nExpires, bool bSecure, bool bHTTPOnly)
public void SetDPIScalingFactor(HHTMLBrowser unBrowserHandle, float flDPIScaling)
public void SetHorizontalScroll(HHTMLBrowser unBrowserHandle, UInt32 nAbsolutePixelScroll)
public void SetKeyFocus(HHTMLBrowser unBrowserHandle, bool bHasKeyFocus)
public void SetPageScaleFactor(HHTMLBrowser unBrowserHandle, float flZoom, int nPointX, int nPointY)
public void SetSize(HHTMLBrowser unBrowserHandle, UInt32 unWidth, UInt32 unHeight)
public void SetVerticalScroll(HHTMLBrowser unBrowserHandle, UInt32 nAbsolutePixelScroll)
public bool Shutdown()
public void StopFind(HHTMLBrowser unBrowserHandle)
public void StopLoad(HHTMLBrowser unBrowserHandle)
public void ViewSource(HHTMLBrowser unBrowserHandle)
}
internal SteamNative.SteamHTTP : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public HTTPCookieContainerHandle CreateCookieContainer(bool bAllowResponsesToModify)
public HTTPRequestHandle CreateHTTPRequest(HTTPMethod eHTTPRequestMethod, string pchAbsoluteURL)
public bool DeferHTTPRequest(HTTPRequestHandle hRequest)
public bool GetHTTPDownloadProgressPct(HTTPRequestHandle hRequest, Single& pflPercentOut)
public bool GetHTTPRequestWasTimedOut(HTTPRequestHandle hRequest, Boolean& pbWasTimedOut)
public bool GetHTTPResponseBodyData(HTTPRequestHandle hRequest, Byte& pBodyDataBuffer, UInt32 unBufferSize)
public bool GetHTTPResponseBodySize(HTTPRequestHandle hRequest, UInt32& unBodySize)
public bool GetHTTPResponseHeaderSize(HTTPRequestHandle hRequest, string pchHeaderName, UInt32& unResponseHeaderSize)
public bool GetHTTPResponseHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, Byte& pHeaderValueBuffer, UInt32 unBufferSize)
public bool GetHTTPStreamingResponseBodyData(HTTPRequestHandle hRequest, UInt32 cOffset, Byte& pBodyDataBuffer, UInt32 unBufferSize)
public bool PrioritizeHTTPRequest(HTTPRequestHandle hRequest)
public bool ReleaseCookieContainer(HTTPCookieContainerHandle hCookieContainer)
public bool ReleaseHTTPRequest(HTTPRequestHandle hRequest)
public bool SendHTTPRequest(HTTPRequestHandle hRequest, SteamAPICall_t& pCallHandle)
public bool SendHTTPRequestAndStreamResponse(HTTPRequestHandle hRequest, SteamAPICall_t& pCallHandle)
public bool SetCookie(HTTPCookieContainerHandle hCookieContainer, string pchHost, string pchUrl, string pchCookie)
public bool SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle hRequest, UInt32 unMilliseconds)
public bool SetHTTPRequestContextValue(HTTPRequestHandle hRequest, ulong ulContextValue)
public bool SetHTTPRequestCookieContainer(HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer)
public bool SetHTTPRequestGetOrPostParameter(HTTPRequestHandle hRequest, string pchParamName, string pchParamValue)
public bool SetHTTPRequestHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, string pchHeaderValue)
public bool SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle hRequest, UInt32 unTimeoutSeconds)
public bool SetHTTPRequestRawPostBody(HTTPRequestHandle hRequest, string pchContentType, Byte& pubBody, UInt32 unBodyLen)
public bool SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate)
public bool SetHTTPRequestUserAgentInfo(HTTPRequestHandle hRequest, string pchUserAgentInfo)
}
internal SteamNative.SteamInputType : Enum {
public int value__
public SteamInputType Unknown
public SteamInputType SteamController
public SteamInputType XBox360Controller
public SteamInputType XBoxOneController
public SteamInputType GenericXInput
public SteamInputType PS4Controller
}
internal SteamNative.SteamInventory : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool AddPromoItem(SteamInventoryResult_t& pResultHandle, SteamItemDef_t itemDef)
public bool AddPromoItems(SteamInventoryResult_t& pResultHandle, SteamItemDef_t[] pArrayItemDefs, UInt32 unArrayLength)
public bool CheckResultSteamID(SteamInventoryResult_t resultHandle, CSteamID steamIDExpected)
public bool ConsumeItem(SteamInventoryResult_t& pResultHandle, SteamItemInstanceID_t itemConsume, UInt32 unQuantity)
public bool DeserializeResult(SteamInventoryResult_t& pOutResultHandle, IntPtr pBuffer, UInt32 unBufferSize, bool bRESERVED_MUST_BE_FALSE)
public void DestroyResult(SteamInventoryResult_t resultHandle)
public bool ExchangeItems(SteamInventoryResult_t& pResultHandle, SteamItemDef_t[] pArrayGenerate, UInt32[] punArrayGenerateQuantity, UInt32 unArrayGenerateLength, SteamItemInstanceID_t[] pArrayDestroy, UInt32[] punArrayDestroyQuantity, UInt32 unArrayDestroyLength)
public bool GenerateItems(SteamInventoryResult_t& pResultHandle, SteamItemDef_t[] pArrayItemDefs, UInt32[] punArrayQuantity, UInt32 unArrayLength)
public bool GetAllItems(SteamInventoryResult_t& pResultHandle)
public SteamItemDef_t[] GetEligiblePromoItemDefinitionIDs(CSteamID steamID)
public SteamItemDef_t[] GetItemDefinitionIDs()
public bool GetItemDefinitionProperty(SteamItemDef_t iDefinition, string pchPropertyName, String& pchValueBuffer)
public bool GetItemPrice(SteamItemDef_t iDefinition, UInt64& pPrice)
public bool GetItemsByID(SteamInventoryResult_t& pResultHandle, SteamItemInstanceID_t[] pInstanceIDs, UInt32 unCountInstanceIDs)
public bool GetItemsWithPrices(IntPtr pArrayItemDefs, IntPtr pPrices, UInt32 unArrayLength)
public UInt32 GetNumItemsWithPrices()
public bool GetResultItemProperty(SteamInventoryResult_t resultHandle, UInt32 unItemIndex, string pchPropertyName, String& pchValueBuffer)
public SteamItemDetails_t[] GetResultItems(SteamInventoryResult_t resultHandle)
public Result GetResultStatus(SteamInventoryResult_t resultHandle)
public UInt32 GetResultTimestamp(SteamInventoryResult_t resultHandle)
public bool GrantPromoItems(SteamInventoryResult_t& pResultHandle)
public bool LoadItemDefinitions()
public bool RemoveProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName)
public CallbackHandle RequestEligiblePromoItemDefinitionsIDs(CSteamID steamID, Action`2<SteamInventoryEligiblePromoItemDefIDs_t, bool> CallbackFunction)
public CallbackHandle RequestPrices(Action`2<SteamInventoryRequestPricesResult_t, bool> CallbackFunction)
public void SendItemDropHeartbeat()
public bool SerializeResult(SteamInventoryResult_t resultHandle, IntPtr pOutBuffer, UInt32& punOutBufferSize)
public bool SetProperty(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, string pchPropertyValue)
public bool SetProperty0(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, bool bValue)
public bool SetProperty1(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, long nValue)
public bool SetProperty2(SteamInventoryUpdateHandle_t handle, SteamItemInstanceID_t nItemID, string pchPropertyName, float flValue)
public CallbackHandle StartPurchase(SteamItemDef_t[] pArrayItemDefs, UInt32[] punArrayQuantity, UInt32 unArrayLength, Action`2<SteamInventoryStartPurchaseResult_t, bool> CallbackFunction)
public SteamInventoryUpdateHandle_t StartUpdateProperties()
public bool SubmitUpdateProperties(SteamInventoryUpdateHandle_t handle, SteamInventoryResult_t& pResultHandle)
public bool TradeItems(SteamInventoryResult_t& pResultHandle, CSteamID steamIDTradePartner, SteamItemInstanceID_t[] pArrayGive, UInt32[] pArrayGiveQuantity, UInt32 nArrayGiveLength, SteamItemInstanceID_t[] pArrayGet, UInt32[] pArrayGetQuantity, UInt32 nArrayGetLength)
public bool TransferItemQuantity(SteamInventoryResult_t& pResultHandle, SteamItemInstanceID_t itemIdSource, UInt32 unQuantity, SteamItemInstanceID_t itemIdDest)
public bool TriggerItemDrop(SteamInventoryResult_t& pResultHandle, SteamItemDef_t dropListDefinition)
}
internal SteamNative.SteamInventoryDefinitionUpdate_t : ValueType {
internal int CallbackId
internal SteamInventoryDefinitionUpdate_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamInventoryEligiblePromoItemDefIDs_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong SteamID
internal int UmEligiblePromoItemDefs
internal bool CachedData
internal SteamInventoryEligiblePromoItemDefIDs_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SteamInventoryEligiblePromoItemDefIDs_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SteamInventoryEligiblePromoItemDefIDs_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamInventoryFullUpdate_t : ValueType {
internal int CallbackId
internal int Handle
internal SteamInventoryFullUpdate_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamInventoryRequestPricesResult_t : ValueType {
internal int CallbackId
internal Result Result
internal string Currency
internal SteamInventoryRequestPricesResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SteamInventoryRequestPricesResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SteamInventoryRequestPricesResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamInventoryResult_t : ValueType {
public int Value
public SteamInventoryResult_t op_Implicit(int value)
public int op_Implicit(SteamInventoryResult_t value)
}
internal SteamNative.SteamInventoryResultReady_t : ValueType {
internal int CallbackId
internal int Handle
internal Result Result
internal SteamInventoryResultReady_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamInventoryStartPurchaseResult_t : ValueType {
internal int CallbackId
internal Result Result
internal ulong OrderID
internal ulong TransID
internal SteamInventoryStartPurchaseResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SteamInventoryStartPurchaseResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SteamInventoryStartPurchaseResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamInventoryUpdateHandle_t : ValueType {
public ulong Value
public SteamInventoryUpdateHandle_t op_Implicit(ulong value)
public ulong op_Implicit(SteamInventoryUpdateHandle_t value)
}
internal SteamNative.SteamItemDef_t : ValueType {
public int Value
public SteamItemDef_t op_Implicit(int value)
public int op_Implicit(SteamItemDef_t value)
}
internal SteamNative.SteamItemDetails_t : ValueType {
internal ulong ItemId
internal int Definition
internal ushort Quantity
internal ushort Flags
internal SteamItemDetails_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.SteamItemFlags : Enum {
public int value__
public SteamItemFlags NoTrade
public SteamItemFlags Removed
public SteamItemFlags Consumed
}
internal SteamNative.SteamItemInstanceID_t : ValueType {
public ulong Value
public SteamItemInstanceID_t op_Implicit(ulong value)
public ulong op_Implicit(SteamItemInstanceID_t value)
}
internal SteamNative.SteamLeaderboard_t : ValueType {
public ulong Value
public SteamLeaderboard_t op_Implicit(ulong value)
public ulong op_Implicit(SteamLeaderboard_t value)
}
internal SteamNative.SteamLeaderboardEntries_t : ValueType {
public ulong Value
public SteamLeaderboardEntries_t op_Implicit(ulong value)
public ulong op_Implicit(SteamLeaderboardEntries_t value)
}
internal SteamNative.SteamMatchmaking : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public int AddFavoriteGame(AppId_t nAppID, UInt32 nIP, ushort nConnPort, ushort nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer)
public void AddRequestLobbyListCompatibleMembersFilter(CSteamID steamIDLobby)
public void AddRequestLobbyListDistanceFilter(LobbyDistanceFilter eLobbyDistanceFilter)
public void AddRequestLobbyListFilterSlotsAvailable(int nSlotsAvailable)
public void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, int nValueToBeCloseTo)
public void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, int nValueToMatch, LobbyComparison eComparisonType)
public void AddRequestLobbyListResultCountFilter(int cMaxResults)
public void AddRequestLobbyListStringFilter(string pchKeyToMatch, string pchValueToMatch, LobbyComparison eComparisonType)
public CallbackHandle CreateLobby(LobbyType eLobbyType, int cMaxMembers, Action`2<LobbyCreated_t, bool> CallbackFunction)
public bool DeleteLobbyData(CSteamID steamIDLobby, string pchKey)
public bool GetFavoriteGame(int iGame, AppId_t& pnAppID, UInt32& pnIP, UInt16& pnConnPort, UInt16& pnQueryPort, UInt32& punFlags, UInt32& pRTime32LastPlayedOnServer)
public int GetFavoriteGameCount()
public ulong GetLobbyByIndex(int iLobby)
public int GetLobbyChatEntry(CSteamID steamIDLobby, int iChatID, CSteamID& pSteamIDUser, IntPtr pvData, int cubData, ChatEntryType& peChatEntryType)
public string GetLobbyData(CSteamID steamIDLobby, string pchKey)
public bool GetLobbyDataByIndex(CSteamID steamIDLobby, int iLobbyData, String& pchKey, String& pchValue)
public int GetLobbyDataCount(CSteamID steamIDLobby)
public bool GetLobbyGameServer(CSteamID steamIDLobby, UInt32& punGameServerIP, UInt16& punGameServerPort, CSteamID& psteamIDGameServer)
public ulong GetLobbyMemberByIndex(CSteamID steamIDLobby, int iMember)
public string GetLobbyMemberData(CSteamID steamIDLobby, CSteamID steamIDUser, string pchKey)
public int GetLobbyMemberLimit(CSteamID steamIDLobby)
public ulong GetLobbyOwner(CSteamID steamIDLobby)
public int GetNumLobbyMembers(CSteamID steamIDLobby)
public bool InviteUserToLobby(CSteamID steamIDLobby, CSteamID steamIDInvitee)
public CallbackHandle JoinLobby(CSteamID steamIDLobby, Action`2<LobbyEnter_t, bool> CallbackFunction)
public void LeaveLobby(CSteamID steamIDLobby)
public bool RemoveFavoriteGame(AppId_t nAppID, UInt32 nIP, ushort nConnPort, ushort nQueryPort, UInt32 unFlags)
public bool RequestLobbyData(CSteamID steamIDLobby)
public CallbackHandle RequestLobbyList(Action`2<LobbyMatchList_t, bool> CallbackFunction)
public bool SendLobbyChatMsg(CSteamID steamIDLobby, IntPtr pvMsgBody, int cubMsgBody)
public bool SetLinkedLobby(CSteamID steamIDLobby, CSteamID steamIDLobbyDependent)
public bool SetLobbyData(CSteamID steamIDLobby, string pchKey, string pchValue)
public void SetLobbyGameServer(CSteamID steamIDLobby, UInt32 unGameServerIP, ushort unGameServerPort, CSteamID steamIDGameServer)
public bool SetLobbyJoinable(CSteamID steamIDLobby, bool bLobbyJoinable)
public void SetLobbyMemberData(CSteamID steamIDLobby, string pchKey, string pchValue)
public bool SetLobbyMemberLimit(CSteamID steamIDLobby, int cMaxMembers)
public bool SetLobbyOwner(CSteamID steamIDLobby, CSteamID steamIDNewOwner)
public bool SetLobbyType(CSteamID steamIDLobby, LobbyType eLobbyType)
}
internal SteamNative.SteamMatchmakingServers : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public void CancelQuery(HServerListRequest hRequest)
public void CancelServerQuery(HServerQuery hServerQuery)
public int GetServerCount(HServerListRequest hRequest)
public gameserveritem_t GetServerDetails(HServerListRequest hRequest, int iServer)
public bool IsRefreshing(HServerListRequest hRequest)
public HServerQuery PingServer(UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
public HServerQuery PlayerDetails(UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
public void RefreshQuery(HServerListRequest hRequest)
public void RefreshServer(HServerListRequest hRequest, int iServer)
public void ReleaseRequest(HServerListRequest hServerListRequest)
public HServerListRequest RequestFavoritesServerList(AppId_t iApp, IntPtr ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
public HServerListRequest RequestFriendsServerList(AppId_t iApp, IntPtr ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
public HServerListRequest RequestHistoryServerList(AppId_t iApp, IntPtr ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
public HServerListRequest RequestInternetServerList(AppId_t iApp, IntPtr ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
public HServerListRequest RequestLANServerList(AppId_t iApp, IntPtr pRequestServersResponse)
public HServerListRequest RequestSpectatorServerList(AppId_t iApp, IntPtr ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
public HServerQuery ServerRules(UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
}
internal SteamNative.SteamMusic : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool BIsEnabled()
public bool BIsPlaying()
public AudioPlayback_Status GetPlaybackStatus()
public float GetVolume()
public void Pause()
public void Play()
public void PlayNext()
public void PlayPrevious()
public void SetVolume(float flVolume)
}
internal SteamNative.SteamMusicRemote : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool BActivationSuccess(bool bValue)
public bool BIsCurrentMusicRemote()
public bool CurrentEntryDidChange()
public bool CurrentEntryIsAvailable(bool bAvailable)
public bool CurrentEntryWillChange()
public bool DeregisterSteamMusicRemote()
public bool EnableLooped(bool bValue)
public bool EnablePlaylists(bool bValue)
public bool EnablePlayNext(bool bValue)
public bool EnablePlayPrevious(bool bValue)
public bool EnableQueue(bool bValue)
public bool EnableShuffled(bool bValue)
public bool PlaylistDidChange()
public bool PlaylistWillChange()
public bool QueueDidChange()
public bool QueueWillChange()
public bool RegisterSteamMusicRemote(string pchName)
public bool ResetPlaylistEntries()
public bool ResetQueueEntries()
public bool SetCurrentPlaylistEntry(int nID)
public bool SetCurrentQueueEntry(int nID)
public bool SetDisplayName(string pchDisplayName)
public bool SetPlaylistEntry(int nID, int nPosition, string pchEntryText)
public bool SetPNGIcon_64x64(IntPtr pvBuffer, UInt32 cbBufferLength)
public bool SetQueueEntry(int nID, int nPosition, string pchEntryText)
public bool UpdateCurrentEntryCoverArt(IntPtr pvBuffer, UInt32 cbBufferLength)
public bool UpdateCurrentEntryElapsedSeconds(int nValue)
public bool UpdateCurrentEntryText(string pchText)
public bool UpdateLooped(bool bValue)
public bool UpdatePlaybackStatus(AudioPlayback_Status nStatus)
public bool UpdateShuffled(bool bValue)
public bool UpdateVolume(float flValue)
}
internal SteamNative.SteamNetworking : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool AcceptP2PSessionWithUser(CSteamID steamIDRemote)
public bool AllowP2PPacketRelay(bool bAllow)
public bool CloseP2PChannelWithUser(CSteamID steamIDRemote, int nChannel)
public bool CloseP2PSessionWithUser(CSteamID steamIDRemote)
public SNetSocket_t CreateConnectionSocket(UInt32 nIP, ushort nPort, int nTimeoutSec)
public SNetListenSocket_t CreateListenSocket(int nVirtualP2PPort, UInt32 nIP, ushort nPort, bool bAllowUseOfPacketRelay)
public SNetSocket_t CreateP2PConnectionSocket(CSteamID steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay)
public bool DestroyListenSocket(SNetListenSocket_t hSocket, bool bNotifyRemoteEnd)
public bool DestroySocket(SNetSocket_t hSocket, bool bNotifyRemoteEnd)
public bool GetListenSocketInfo(SNetListenSocket_t hListenSocket, UInt32& pnIP, UInt16& pnPort)
public int GetMaxPacketSize(SNetSocket_t hSocket)
public bool GetP2PSessionState(CSteamID steamIDRemote, P2PSessionState_t& pConnectionState)
public SNetSocketConnectionType GetSocketConnectionType(SNetSocket_t hSocket)
public bool GetSocketInfo(SNetSocket_t hSocket, CSteamID& pSteamIDRemote, IntPtr peSocketStatus, UInt32& punIPRemote, UInt16& punPortRemote)
public bool IsDataAvailable(SNetListenSocket_t hListenSocket, UInt32& pcubMsgSize, SNetSocket_t& phSocket)
public bool IsDataAvailableOnSocket(SNetSocket_t hSocket, UInt32& pcubMsgSize)
public bool IsP2PPacketAvailable(UInt32& pcubMsgSize, int nChannel)
public bool ReadP2PPacket(IntPtr pubDest, UInt32 cubDest, UInt32& pcubMsgSize, CSteamID& psteamIDRemote, int nChannel)
public bool RetrieveData(SNetListenSocket_t hListenSocket, IntPtr pubDest, UInt32 cubDest, UInt32& pcubMsgSize, SNetSocket_t& phSocket)
public bool RetrieveDataFromSocket(SNetSocket_t hSocket, IntPtr pubDest, UInt32 cubDest, UInt32& pcubMsgSize)
public bool SendDataOnSocket(SNetSocket_t hSocket, IntPtr pubData, UInt32 cubData, bool bReliable)
public bool SendP2PPacket(CSteamID steamIDRemote, IntPtr pubData, UInt32 cubData, P2PSend eP2PSendType, int nChannel)
}
internal SteamNative.SteamParamStringArray_t : ValueType {
internal IntPtr Strings
internal int NumStrings
internal SteamParamStringArray_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.SteamParentalSettings : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool BIsAppBlocked(AppId_t nAppID)
public bool BIsAppInBlockList(AppId_t nAppID)
public bool BIsFeatureBlocked(ParentalFeature eFeature)
public bool BIsFeatureInBlockList(ParentalFeature eFeature)
public bool BIsParentalLockEnabled()
public bool BIsParentalLockLocked()
}
internal SteamNative.SteamParentalSettingsChanged_t : ValueType {
internal int CallbackId
internal SteamParentalSettingsChanged_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamRemoteStorage : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public CallbackHandle CommitPublishedFileUpdate(PublishedFileUpdateHandle_t updateHandle, Action`2<RemoteStorageUpdatePublishedFileResult_t, bool> CallbackFunction)
public PublishedFileUpdateHandle_t CreatePublishedFileUpdateRequest(PublishedFileId_t unPublishedFileId)
public CallbackHandle DeletePublishedFile(PublishedFileId_t unPublishedFileId, Action`2<RemoteStorageDeletePublishedFileResult_t, bool> CallbackFunction)
public CallbackHandle EnumeratePublishedFilesByUserAction(WorkshopFileAction eAction, UInt32 unStartIndex, Action`2<RemoteStorageEnumeratePublishedFilesByUserActionResult_t, bool> CallbackFunction)
public CallbackHandle EnumeratePublishedWorkshopFiles(WorkshopEnumerationType eEnumerationType, UInt32 unStartIndex, UInt32 unCount, UInt32 unDays, String[] pTags, SteamParamStringArray_t& pUserTags, Action`2<RemoteStorageEnumerateWorkshopFilesResult_t, bool> CallbackFunction)
public CallbackHandle EnumerateUserPublishedFiles(UInt32 unStartIndex, Action`2<RemoteStorageEnumerateUserPublishedFilesResult_t, bool> CallbackFunction)
public CallbackHandle EnumerateUserSharedWorkshopFiles(CSteamID steamId, UInt32 unStartIndex, String[] pRequiredTags, SteamParamStringArray_t& pExcludedTags, Action`2<RemoteStorageEnumerateUserPublishedFilesResult_t, bool> CallbackFunction)
public CallbackHandle EnumerateUserSubscribedFiles(UInt32 unStartIndex, Action`2<RemoteStorageEnumerateUserSubscribedFilesResult_t, bool> CallbackFunction)
public bool FileDelete(string pchFile)
public bool FileExists(string pchFile)
public bool FileForget(string pchFile)
public bool FilePersisted(string pchFile)
public int FileRead(string pchFile, IntPtr pvData, int cubDataToRead)
public CallbackHandle FileReadAsync(string pchFile, UInt32 nOffset, UInt32 cubToRead, Action`2<RemoteStorageFileReadAsyncComplete_t, bool> CallbackFunction)
public bool FileReadAsyncComplete(SteamAPICall_t hReadCall, IntPtr pvBuffer, UInt32 cubToRead)
public CallbackHandle FileShare(string pchFile, Action`2<RemoteStorageFileShareResult_t, bool> CallbackFunction)
public bool FileWrite(string pchFile, IntPtr pvData, int cubData)
public CallbackHandle FileWriteAsync(string pchFile, IntPtr pvData, UInt32 cubData, Action`2<RemoteStorageFileWriteAsyncComplete_t, bool> CallbackFunction)
public bool FileWriteStreamCancel(UGCFileWriteStreamHandle_t writeHandle)
public bool FileWriteStreamClose(UGCFileWriteStreamHandle_t writeHandle)
public UGCFileWriteStreamHandle_t FileWriteStreamOpen(string pchFile)
public bool FileWriteStreamWriteChunk(UGCFileWriteStreamHandle_t writeHandle, IntPtr pvData, int cubData)
public int GetCachedUGCCount()
public UGCHandle_t GetCachedUGCHandle(int iCachedContent)
public int GetFileCount()
public string GetFileNameAndSize(int iFile, Int32& pnFileSizeInBytes)
public int GetFileSize(string pchFile)
public long GetFileTimestamp(string pchFile)
public CallbackHandle GetPublishedFileDetails(PublishedFileId_t unPublishedFileId, UInt32 unMaxSecondsOld, Action`2<RemoteStorageGetPublishedFileDetailsResult_t, bool> CallbackFunction)
public CallbackHandle GetPublishedItemVoteDetails(PublishedFileId_t unPublishedFileId, Action`2<RemoteStorageGetPublishedItemVoteDetailsResult_t, bool> CallbackFunction)
public bool GetQuota(UInt64& pnTotalBytes, UInt64& puAvailableBytes)
public RemoteStoragePlatform GetSyncPlatforms(string pchFile)
public bool GetUGCDetails(UGCHandle_t hContent, AppId_t& pnAppID, String& ppchName, CSteamID& pSteamIDOwner)
public bool GetUGCDownloadProgress(UGCHandle_t hContent, Int32& pnBytesDownloaded, Int32& pnBytesExpected)
public CallbackHandle GetUserPublishedItemVoteDetails(PublishedFileId_t unPublishedFileId, Action`2<RemoteStorageGetPublishedItemVoteDetailsResult_t, bool> CallbackFunction)
public bool IsCloudEnabledForAccount()
public bool IsCloudEnabledForApp()
public CallbackHandle PublishVideo(WorkshopVideoProvider eVideoProvider, string pchVideoAccount, string pchVideoIdentifier, string pchPreviewFile, AppId_t nConsumerAppId, string pchTitle, string pchDescription, RemoteStoragePublishedFileVisibility eVisibility, String[] pTags, Action`2<RemoteStoragePublishFileProgress_t, bool> CallbackFunction)
public CallbackHandle PublishWorkshopFile(string pchFile, string pchPreviewFile, AppId_t nConsumerAppId, string pchTitle, string pchDescription, RemoteStoragePublishedFileVisibility eVisibility, String[] pTags, WorkshopFileType eWorkshopFileType, Action`2<RemoteStoragePublishFileProgress_t, bool> CallbackFunction)
public void SetCloudEnabledForApp(bool bEnabled)
public bool SetSyncPlatforms(string pchFile, RemoteStoragePlatform eRemoteStoragePlatform)
public CallbackHandle SetUserPublishedFileAction(PublishedFileId_t unPublishedFileId, WorkshopFileAction eAction, Action`2<RemoteStorageSetUserPublishedFileActionResult_t, bool> CallbackFunction)
public CallbackHandle SubscribePublishedFile(PublishedFileId_t unPublishedFileId, Action`2<RemoteStorageSubscribePublishedFileResult_t, bool> CallbackFunction)
public CallbackHandle UGCDownload(UGCHandle_t hContent, UInt32 unPriority, Action`2<RemoteStorageDownloadUGCResult_t, bool> CallbackFunction)
public CallbackHandle UGCDownloadToLocation(UGCHandle_t hContent, string pchLocation, UInt32 unPriority, Action`2<RemoteStorageDownloadUGCResult_t, bool> CallbackFunction)
public int UGCRead(UGCHandle_t hContent, IntPtr pvData, int cubDataToRead, UInt32 cOffset, UGCReadAction eAction)
public CallbackHandle UnsubscribePublishedFile(PublishedFileId_t unPublishedFileId, Action`2<RemoteStorageUnsubscribePublishedFileResult_t, bool> CallbackFunction)
public bool UpdatePublishedFileDescription(PublishedFileUpdateHandle_t updateHandle, string pchDescription)
public bool UpdatePublishedFileFile(PublishedFileUpdateHandle_t updateHandle, string pchFile)
public bool UpdatePublishedFilePreviewFile(PublishedFileUpdateHandle_t updateHandle, string pchPreviewFile)
public bool UpdatePublishedFileSetChangeDescription(PublishedFileUpdateHandle_t updateHandle, string pchChangeDescription)
public bool UpdatePublishedFileTags(PublishedFileUpdateHandle_t updateHandle, String[] pTags)
public bool UpdatePublishedFileTitle(PublishedFileUpdateHandle_t updateHandle, string pchTitle)
public bool UpdatePublishedFileVisibility(PublishedFileUpdateHandle_t updateHandle, RemoteStoragePublishedFileVisibility eVisibility)
public CallbackHandle UpdateUserPublishedItemVote(PublishedFileId_t unPublishedFileId, bool bVoteUp, Action`2<RemoteStorageUpdateUserPublishedItemVoteResult_t, bool> CallbackFunction)
}
internal SteamNative.SteamScreenshots : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public ScreenshotHandle AddScreenshotToLibrary(string pchFilename, string pchThumbnailFilename, int nWidth, int nHeight)
public ScreenshotHandle AddVRScreenshotToLibrary(VRScreenshotType eType, string pchFilename, string pchVRFilename)
public void HookScreenshots(bool bHook)
public bool IsScreenshotsHooked()
public bool SetLocation(ScreenshotHandle hScreenshot, string pchLocation)
public bool TagPublishedFile(ScreenshotHandle hScreenshot, PublishedFileId_t unPublishedFileID)
public bool TagUser(ScreenshotHandle hScreenshot, CSteamID steamID)
public void TriggerScreenshot()
public ScreenshotHandle WriteScreenshot(IntPtr pubRGB, UInt32 cubRGB, int nWidth, int nHeight)
}
internal SteamNative.SteamServerConnectFailure_t : ValueType {
internal int CallbackId
internal Result Result
internal bool StillRetrying
internal SteamServerConnectFailure_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamServersConnected_t : ValueType {
internal int CallbackId
internal SteamServersConnected_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamServersDisconnected_t : ValueType {
internal int CallbackId
internal Result Result
internal SteamServersDisconnected_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamShutdown_t : ValueType {
internal int CallbackId
internal SteamShutdown_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamUGC : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public CallbackHandle AddAppDependency(PublishedFileId_t nPublishedFileID, AppId_t nAppID, Action`2<AddAppDependencyResult_t, bool> CallbackFunction)
public CallbackHandle AddDependency(PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID, Action`2<AddUGCDependencyResult_t, bool> CallbackFunction)
public bool AddExcludedTag(UGCQueryHandle_t handle, string pTagName)
public bool AddItemKeyValueTag(UGCUpdateHandle_t handle, string pchKey, string pchValue)
public bool AddItemPreviewFile(UGCUpdateHandle_t handle, string pszPreviewFile, ItemPreviewType type)
public bool AddItemPreviewVideo(UGCUpdateHandle_t handle, string pszVideoID)
public CallbackHandle AddItemToFavorites(AppId_t nAppId, PublishedFileId_t nPublishedFileID, Action`2<UserFavoriteItemsListChanged_t, bool> CallbackFunction)
public bool AddRequiredKeyValueTag(UGCQueryHandle_t handle, string pKey, string pValue)
public bool AddRequiredTag(UGCQueryHandle_t handle, string pTagName)
public bool BInitWorkshopForGameServer(DepotId_t unWorkshopDepotID, string pszFolder)
public CallbackHandle CreateItem(AppId_t nConsumerAppId, WorkshopFileType eFileType, Action`2<CreateItemResult_t, bool> CallbackFunction)
public UGCQueryHandle_t CreateQueryAllUGCRequest(UGCQuery eQueryType, UGCMatchingUGCType eMatchingeMatchingUGCTypeFileType, AppId_t nCreatorAppID, AppId_t nConsumerAppID, UInt32 unPage)
public UGCQueryHandle_t CreateQueryUGCDetailsRequest(PublishedFileId_t[] pvecPublishedFileID)
public UGCQueryHandle_t CreateQueryUserUGCRequest(AccountID_t unAccountID, UserUGCList eListType, UGCMatchingUGCType eMatchingUGCType, UserUGCListSortOrder eSortOrder, AppId_t nCreatorAppID, AppId_t nConsumerAppID, UInt32 unPage)
public CallbackHandle DeleteItem(PublishedFileId_t nPublishedFileID, Action`2<DeleteItemResult_t, bool> CallbackFunction)
public bool DownloadItem(PublishedFileId_t nPublishedFileID, bool bHighPriority)
public CallbackHandle GetAppDependencies(PublishedFileId_t nPublishedFileID, Action`2<GetAppDependenciesResult_t, bool> CallbackFunction)
public bool GetItemDownloadInfo(PublishedFileId_t nPublishedFileID, UInt64& punBytesDownloaded, UInt64& punBytesTotal)
public bool GetItemInstallInfo(PublishedFileId_t nPublishedFileID, UInt64& punSizeOnDisk, String& pchFolder, UInt32& punTimeStamp)
public UInt32 GetItemState(PublishedFileId_t nPublishedFileID)
public ItemUpdateStatus GetItemUpdateProgress(UGCUpdateHandle_t handle, UInt64& punBytesProcessed, UInt64& punBytesTotal)
public UInt32 GetNumSubscribedItems()
public bool GetQueryUGCAdditionalPreview(UGCQueryHandle_t handle, UInt32 index, UInt32 previewIndex, String& pchURLOrVideoID, String& pchOriginalFileName, ItemPreviewType& pPreviewType)
public bool GetQueryUGCChildren(UGCQueryHandle_t handle, UInt32 index, PublishedFileId_t* pvecPublishedFileID, UInt32 cMaxEntries)
public bool GetQueryUGCKeyValueTag(UGCQueryHandle_t handle, UInt32 index, UInt32 keyValueTagIndex, String& pchKey, String& pchValue)
public bool GetQueryUGCMetadata(UGCQueryHandle_t handle, UInt32 index, String& pchMetadata)
public UInt32 GetQueryUGCNumAdditionalPreviews(UGCQueryHandle_t handle, UInt32 index)
public UInt32 GetQueryUGCNumKeyValueTags(UGCQueryHandle_t handle, UInt32 index)
public bool GetQueryUGCPreviewURL(UGCQueryHandle_t handle, UInt32 index, String& pchURL)
public bool GetQueryUGCResult(UGCQueryHandle_t handle, UInt32 index, SteamUGCDetails_t& pDetails)
public bool GetQueryUGCStatistic(UGCQueryHandle_t handle, UInt32 index, ItemStatistic eStatType, UInt64& pStatValue)
public UInt32 GetSubscribedItems(PublishedFileId_t* pvecPublishedFileID, UInt32 cMaxEntries)
public CallbackHandle GetUserItemVote(PublishedFileId_t nPublishedFileID, Action`2<GetUserItemVoteResult_t, bool> CallbackFunction)
public bool ReleaseQueryUGCRequest(UGCQueryHandle_t handle)
public CallbackHandle RemoveAppDependency(PublishedFileId_t nPublishedFileID, AppId_t nAppID, Action`2<RemoveAppDependencyResult_t, bool> CallbackFunction)
public CallbackHandle RemoveDependency(PublishedFileId_t nParentPublishedFileID, PublishedFileId_t nChildPublishedFileID, Action`2<RemoveUGCDependencyResult_t, bool> CallbackFunction)
public CallbackHandle RemoveItemFromFavorites(AppId_t nAppId, PublishedFileId_t nPublishedFileID, Action`2<UserFavoriteItemsListChanged_t, bool> CallbackFunction)
public bool RemoveItemKeyValueTags(UGCUpdateHandle_t handle, string pchKey)
public bool RemoveItemPreview(UGCUpdateHandle_t handle, UInt32 index)
public SteamAPICall_t RequestUGCDetails(PublishedFileId_t nPublishedFileID, UInt32 unMaxAgeSeconds)
public CallbackHandle SendQueryUGCRequest(UGCQueryHandle_t handle, Action`2<SteamUGCQueryCompleted_t, bool> CallbackFunction)
public bool SetAllowCachedResponse(UGCQueryHandle_t handle, UInt32 unMaxAgeSeconds)
public bool SetCloudFileNameFilter(UGCQueryHandle_t handle, string pMatchCloudFileName)
public bool SetItemContent(UGCUpdateHandle_t handle, string pszContentFolder)
public bool SetItemDescription(UGCUpdateHandle_t handle, string pchDescription)
public bool SetItemMetadata(UGCUpdateHandle_t handle, string pchMetaData)
public bool SetItemPreview(UGCUpdateHandle_t handle, string pszPreviewFile)
public bool SetItemTags(UGCUpdateHandle_t updateHandle, String[] pTags)
public bool SetItemTitle(UGCUpdateHandle_t handle, string pchTitle)
public bool SetItemUpdateLanguage(UGCUpdateHandle_t handle, string pchLanguage)
public bool SetItemVisibility(UGCUpdateHandle_t handle, RemoteStoragePublishedFileVisibility eVisibility)
public bool SetLanguage(UGCQueryHandle_t handle, string pchLanguage)
public bool SetMatchAnyTag(UGCQueryHandle_t handle, bool bMatchAnyTag)
public bool SetRankedByTrendDays(UGCQueryHandle_t handle, UInt32 unDays)
public bool SetReturnAdditionalPreviews(UGCQueryHandle_t handle, bool bReturnAdditionalPreviews)
public bool SetReturnChildren(UGCQueryHandle_t handle, bool bReturnChildren)
public bool SetReturnKeyValueTags(UGCQueryHandle_t handle, bool bReturnKeyValueTags)
public bool SetReturnLongDescription(UGCQueryHandle_t handle, bool bReturnLongDescription)
public bool SetReturnMetadata(UGCQueryHandle_t handle, bool bReturnMetadata)
public bool SetReturnOnlyIDs(UGCQueryHandle_t handle, bool bReturnOnlyIDs)
public bool SetReturnPlaytimeStats(UGCQueryHandle_t handle, UInt32 unDays)
public bool SetReturnTotalOnly(UGCQueryHandle_t handle, bool bReturnTotalOnly)
public bool SetSearchText(UGCQueryHandle_t handle, string pSearchText)
public CallbackHandle SetUserItemVote(PublishedFileId_t nPublishedFileID, bool bVoteUp, Action`2<SetUserItemVoteResult_t, bool> CallbackFunction)
public UGCUpdateHandle_t StartItemUpdate(AppId_t nConsumerAppId, PublishedFileId_t nPublishedFileID)
public CallbackHandle StartPlaytimeTracking(PublishedFileId_t[] pvecPublishedFileID, Action`2<StartPlaytimeTrackingResult_t, bool> CallbackFunction)
public CallbackHandle StopPlaytimeTracking(PublishedFileId_t[] pvecPublishedFileID, Action`2<StopPlaytimeTrackingResult_t, bool> CallbackFunction)
public CallbackHandle StopPlaytimeTrackingForAllItems(Action`2<StopPlaytimeTrackingResult_t, bool> CallbackFunction)
public CallbackHandle SubmitItemUpdate(UGCUpdateHandle_t handle, string pchChangeNote, Action`2<SubmitItemUpdateResult_t, bool> CallbackFunction)
public CallbackHandle SubscribeItem(PublishedFileId_t nPublishedFileID, Action`2<RemoteStorageSubscribePublishedFileResult_t, bool> CallbackFunction)
public void SuspendDownloads(bool bSuspend)
public CallbackHandle UnsubscribeItem(PublishedFileId_t nPublishedFileID, Action`2<RemoteStorageUnsubscribePublishedFileResult_t, bool> CallbackFunction)
public bool UpdateItemPreviewFile(UGCUpdateHandle_t handle, UInt32 index, string pszPreviewFile)
public bool UpdateItemPreviewVideo(UGCUpdateHandle_t handle, UInt32 index, string pszVideoID)
}
internal SteamNative.SteamUGCDetails_t : ValueType {
internal ulong PublishedFileId
internal Result Result
internal WorkshopFileType FileType
internal UInt32 CreatorAppID
internal UInt32 ConsumerAppID
internal string Title
internal string Description
internal ulong SteamIDOwner
internal UInt32 TimeCreated
internal UInt32 TimeUpdated
internal UInt32 TimeAddedToUserList
internal RemoteStoragePublishedFileVisibility Visibility
internal bool Banned
internal bool AcceptedForUse
internal bool TagsTruncated
internal string Tags
internal ulong File
internal ulong PreviewFile
internal string PchFileName
internal int FileSize
internal int PreviewFileSize
internal string URL
internal UInt32 VotesUp
internal UInt32 VotesDown
internal float Score
internal UInt32 NumChildren
internal SteamUGCDetails_t FromPointer(IntPtr p)
internal int StructSize()
}
internal SteamNative.SteamUGCQueryCompleted_t : ValueType {
internal int CallbackId
internal ulong Handle
internal Result Result
internal UInt32 NumResultsReturned
internal UInt32 TotalMatchingResults
internal bool CachedData
internal SteamUGCQueryCompleted_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SteamUGCQueryCompleted_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SteamUGCQueryCompleted_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamUGCRequestUGCDetailsResult_t : ValueType {
internal int CallbackId
internal SteamUGCDetails_t Details
internal bool CachedData
internal SteamUGCRequestUGCDetailsResult_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SteamUser : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public void AdvertiseGame(CSteamID steamIDGameServer, UInt32 unIPServer, ushort usPortServer)
public BeginAuthSessionResult BeginAuthSession(IntPtr pAuthTicket, int cbAuthTicket, CSteamID steamID)
public bool BIsBehindNAT()
public bool BIsPhoneIdentifying()
public bool BIsPhoneRequiringVerification()
public bool BIsPhoneVerified()
public bool BIsTwoFactorEnabled()
public bool BLoggedOn()
public void CancelAuthTicket(HAuthTicket hAuthTicket)
public VoiceResult DecompressVoice(IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, UInt32& nBytesWritten, UInt32 nDesiredSampleRate)
public void EndAuthSession(CSteamID steamID)
public HAuthTicket GetAuthSessionTicket(IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket)
public VoiceResult GetAvailableVoice(UInt32& pcbCompressed, UInt32& pcbUncompressed_Deprecated, UInt32 nUncompressedVoiceDesiredSampleRate_Deprecated)
public bool GetEncryptedAppTicket(IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket)
public int GetGameBadgeLevel(int nSeries, bool bFoil)
public HSteamUser GetHSteamUser()
public int GetPlayerSteamLevel()
public ulong GetSteamID()
public string GetUserDataFolder()
public VoiceResult GetVoice(bool bWantCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, UInt32& nBytesWritten, bool bWantUncompressed_Deprecated, IntPtr pUncompressedDestBuffer_Deprecated, UInt32 cbUncompressedDestBufferSize_Deprecated, UInt32& nUncompressBytesWritten_Deprecated, UInt32 nUncompressedVoiceDesiredSampleRate_Deprecated)
public UInt32 GetVoiceOptimalSampleRate()
public int InitiateGameConnection(IntPtr pAuthBlob, int cbMaxAuthBlob, CSteamID steamIDGameServer, UInt32 unIPServer, ushort usPortServer, bool bSecure)
public CallbackHandle RequestEncryptedAppTicket(IntPtr pDataToInclude, int cbDataToInclude, Action`2<EncryptedAppTicketResponse_t, bool> CallbackFunction)
public CallbackHandle RequestStoreAuthURL(string pchRedirectURL, Action`2<StoreAuthURLResponse_t, bool> CallbackFunction)
public void StartVoiceRecording()
public void StopVoiceRecording()
public void TerminateGameConnection(UInt32 unIPServer, ushort usPortServer)
public void TrackAppUsageEvent(CGameID gameID, int eAppUsageEvent, string pchExtraInfo)
public UserHasLicenseForAppResult UserHasLicenseForApp(CSteamID steamID, AppId_t appID)
}
internal SteamNative.SteamUserStats : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public CallbackHandle AttachLeaderboardUGC(SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC, Action`2<LeaderboardUGCSet_t, bool> CallbackFunction)
public bool ClearAchievement(string pchName)
public CallbackHandle DownloadLeaderboardEntries(SteamLeaderboard_t hSteamLeaderboard, LeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd, Action`2<LeaderboardScoresDownloaded_t, bool> CallbackFunction)
public CallbackHandle DownloadLeaderboardEntriesForUsers(SteamLeaderboard_t hSteamLeaderboard, IntPtr prgUsers, int cUsers, Action`2<LeaderboardScoresDownloaded_t, bool> CallbackFunction)
public CallbackHandle FindLeaderboard(string pchLeaderboardName, Action`2<LeaderboardFindResult_t, bool> CallbackFunction)
public CallbackHandle FindOrCreateLeaderboard(string pchLeaderboardName, LeaderboardSortMethod eLeaderboardSortMethod, LeaderboardDisplayType eLeaderboardDisplayType, Action`2<LeaderboardFindResult_t, bool> CallbackFunction)
public bool GetAchievement(string pchName, Boolean& pbAchieved)
public bool GetAchievementAchievedPercent(string pchName, Single& pflPercent)
public bool GetAchievementAndUnlockTime(string pchName, Boolean& pbAchieved, UInt32& punUnlockTime)
public string GetAchievementDisplayAttribute(string pchName, string pchKey)
public int GetAchievementIcon(string pchName)
public string GetAchievementName(UInt32 iAchievement)
public bool GetDownloadedLeaderboardEntry(SteamLeaderboardEntries_t hSteamLeaderboardEntries, int index, LeaderboardEntry_t& pLeaderboardEntry, IntPtr pDetails, int cDetailsMax)
public bool GetGlobalStat(string pchStatName, Int64& pData)
public bool GetGlobalStat0(string pchStatName, Double& pData)
public int GetGlobalStatHistory(string pchStatName, Int64& pData, UInt32 cubData)
public int GetGlobalStatHistory0(string pchStatName, Double& pData, UInt32 cubData)
public LeaderboardDisplayType GetLeaderboardDisplayType(SteamLeaderboard_t hSteamLeaderboard)
public int GetLeaderboardEntryCount(SteamLeaderboard_t hSteamLeaderboard)
public string GetLeaderboardName(SteamLeaderboard_t hSteamLeaderboard)
public LeaderboardSortMethod GetLeaderboardSortMethod(SteamLeaderboard_t hSteamLeaderboard)
public int GetMostAchievedAchievementInfo(String& pchName, Single& pflPercent, Boolean& pbAchieved)
public int GetNextMostAchievedAchievementInfo(int iIteratorPrevious, String& pchName, Single& pflPercent, Boolean& pbAchieved)
public UInt32 GetNumAchievements()
public CallbackHandle GetNumberOfCurrentPlayers(Action`2<NumberOfCurrentPlayers_t, bool> CallbackFunction)
public bool GetStat(string pchName, Int32& pData)
public bool GetStat0(string pchName, Single& pData)
public bool GetUserAchievement(CSteamID steamIDUser, string pchName, Boolean& pbAchieved)
public bool GetUserAchievementAndUnlockTime(CSteamID steamIDUser, string pchName, Boolean& pbAchieved, UInt32& punUnlockTime)
public bool GetUserStat(CSteamID steamIDUser, string pchName, Int32& pData)
public bool GetUserStat0(CSteamID steamIDUser, string pchName, Single& pData)
public bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress)
public bool RequestCurrentStats()
public CallbackHandle RequestGlobalAchievementPercentages(Action`2<GlobalAchievementPercentagesReady_t, bool> CallbackFunction)
public CallbackHandle RequestGlobalStats(int nHistoryDays, Action`2<GlobalStatsReceived_t, bool> CallbackFunction)
public CallbackHandle RequestUserStats(CSteamID steamIDUser, Action`2<UserStatsReceived_t, bool> CallbackFunction)
public bool ResetAllStats(bool bAchievementsToo)
public bool SetAchievement(string pchName)
public bool SetStat(string pchName, int nData)
public bool SetStat0(string pchName, float fData)
public bool StoreStats()
public bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength)
public CallbackHandle UploadLeaderboardScore(SteamLeaderboard_t hSteamLeaderboard, LeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, Int32[] pScoreDetails, int cScoreDetailsCount, Action`2<LeaderboardScoreUploaded_t, bool> CallbackFunction)
}
internal SteamNative.SteamUserStatType : Enum {
public int value__
public SteamUserStatType INVALID
public SteamUserStatType INT
public SteamUserStatType FLOAT
public SteamUserStatType AVGRATE
public SteamUserStatType ACHIEVEMENTS
public SteamUserStatType GROUPACHIEVEMENTS
public SteamUserStatType MAX
}
internal SteamNative.SteamUtils : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public bool BOverlayNeedsPresent()
public CallbackHandle CheckFileSignature(string szFileName, Action`2<CheckFileSignature_t, bool> CallbackFunction)
public SteamAPICallFailure GetAPICallFailureReason(SteamAPICall_t hSteamAPICall)
public bool GetAPICallResult(SteamAPICall_t hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, Boolean& pbFailed)
public UInt32 GetAppID()
public Universe GetConnectedUniverse()
public bool GetCSERIPPort(UInt32& unIP, UInt16& usPort)
public byte GetCurrentBatteryPower()
public string GetEnteredGamepadTextInput()
public UInt32 GetEnteredGamepadTextLength()
public bool GetImageRGBA(int iImage, IntPtr pubDest, int nDestBufferSize)
public bool GetImageSize(int iImage, UInt32& pnWidth, UInt32& pnHeight)
public UInt32 GetIPCCallCount()
public string GetIPCountry()
public UInt32 GetSecondsSinceAppActive()
public UInt32 GetSecondsSinceComputerActive()
public UInt32 GetServerRealTime()
public string GetSteamUILanguage()
public bool IsAPICallCompleted(SteamAPICall_t hSteamAPICall, Boolean& pbFailed)
public bool IsOverlayEnabled()
public bool IsSteamInBigPictureMode()
public bool IsSteamRunningInVR()
public bool IsVRHeadsetStreamingEnabled()
public void SetOverlayNotificationInset(int nHorizontalInset, int nVerticalInset)
public void SetOverlayNotificationPosition(NotificationPosition eNotificationPosition)
public void SetVRHeadsetStreamingEnabled(bool bEnabled)
public void SetWarningMessageHook(IntPtr pFunction)
public bool ShowGamepadTextInput(GamepadTextInputMode eInputMode, GamepadTextInputLineMode eLineInputMode, string pchDescription, UInt32 unCharMax, string pchExistingText)
public void StartVRDashboard()
}
internal SteamNative.SteamVideo : object {
internal Interface platform
internal BaseSteamworks steamworks
public bool IsValid
internal void .ctor(BaseSteamworks steamworks, IntPtr pointer)
public bool get_IsValid()
public void Dispose()
public void GetOPFSettings(AppId_t unVideoAppID)
public string GetOPFStringForApp(AppId_t unVideoAppID)
public void GetVideoURL(AppId_t unVideoAppID)
public bool IsBroadcasting(IntPtr pnNumViewers)
}
internal SteamNative.StopPlaytimeTrackingResult_t : ValueType {
internal int CallbackId
internal Result Result
internal StopPlaytimeTrackingResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<StopPlaytimeTrackingResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<StopPlaytimeTrackingResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.StoreAuthURLResponse_t : ValueType {
internal int CallbackId
internal string URL
internal StoreAuthURLResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<StoreAuthURLResponse_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<StoreAuthURLResponse_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.SubmitItemUpdateResult_t : ValueType {
internal int CallbackId
internal Result Result
internal bool UserNeedsToAcceptWorkshopLegalAgreement
internal ulong PublishedFileId
internal SubmitItemUpdateResult_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<SubmitItemUpdateResult_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<SubmitItemUpdateResult_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.TxnID_t : ValueType {
public GID_t Value
public TxnID_t op_Implicit(GID_t value)
public GID_t op_Implicit(TxnID_t value)
}
internal SteamNative.UGCFileWriteStreamHandle_t : ValueType {
public ulong Value
public UGCFileWriteStreamHandle_t op_Implicit(ulong value)
public ulong op_Implicit(UGCFileWriteStreamHandle_t value)
}
internal SteamNative.UGCHandle_t : ValueType {
public ulong Value
public UGCHandle_t op_Implicit(ulong value)
public ulong op_Implicit(UGCHandle_t value)
}
internal SteamNative.UGCMatchingUGCType : Enum {
public int value__
public UGCMatchingUGCType Items
public UGCMatchingUGCType Items_Mtx
public UGCMatchingUGCType Items_ReadyToUse
public UGCMatchingUGCType Collections
public UGCMatchingUGCType Artwork
public UGCMatchingUGCType Videos
public UGCMatchingUGCType Screenshots
public UGCMatchingUGCType AllGuides
public UGCMatchingUGCType WebGuides
public UGCMatchingUGCType IntegratedGuides
public UGCMatchingUGCType UsableInGame
public UGCMatchingUGCType ControllerBindings
public UGCMatchingUGCType GameManagedItems
public UGCMatchingUGCType All
}
internal SteamNative.UGCQuery : Enum {
public int value__
public UGCQuery RankedByVote
public UGCQuery RankedByPublicationDate
public UGCQuery AcceptedForGameRankedByAcceptanceDate
public UGCQuery RankedByTrend
public UGCQuery FavoritedByFriendsRankedByPublicationDate
public UGCQuery CreatedByFriendsRankedByPublicationDate
public UGCQuery RankedByNumTimesReported
public UGCQuery CreatedByFollowedUsersRankedByPublicationDate
public UGCQuery NotYetRated
public UGCQuery RankedByTotalVotesAsc
public UGCQuery RankedByVotesUp
public UGCQuery RankedByTextSearch
public UGCQuery RankedByTotalUniqueSubscriptions
public UGCQuery RankedByPlaytimeTrend
public UGCQuery RankedByTotalPlaytime
public UGCQuery RankedByAveragePlaytimeTrend
public UGCQuery RankedByLifetimeAveragePlaytime
public UGCQuery RankedByPlaytimeSessionsTrend
public UGCQuery RankedByLifetimePlaytimeSessions
}
internal SteamNative.UGCQueryHandle_t : ValueType {
public ulong Value
public UGCQueryHandle_t op_Implicit(ulong value)
public ulong op_Implicit(UGCQueryHandle_t value)
}
internal SteamNative.UGCReadAction : Enum {
public int value__
public UGCReadAction ontinueReadingUntilFinished
public UGCReadAction ontinueReading
public UGCReadAction lose
}
internal SteamNative.UGCUpdateHandle_t : ValueType {
public ulong Value
public UGCUpdateHandle_t op_Implicit(ulong value)
public ulong op_Implicit(UGCUpdateHandle_t value)
}
internal SteamNative.Universe : Enum {
public int value__
public Universe Invalid
public Universe Public
public Universe Beta
public Universe Internal
public Universe Dev
public Universe Max
}
internal SteamNative.UserAchievementIconFetched_t : ValueType {
internal int CallbackId
internal ulong GameID
internal string AchievementName
internal bool Achieved
internal int IconHandle
internal UserAchievementIconFetched_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.UserAchievementStored_t : ValueType {
internal int CallbackId
internal ulong GameID
internal bool GroupAchievement
internal string AchievementName
internal UInt32 CurProgress
internal UInt32 MaxProgress
internal UserAchievementStored_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.UserFavoriteItemsListChanged_t : ValueType {
internal int CallbackId
internal ulong PublishedFileId
internal Result Result
internal bool WasAddRequest
internal UserFavoriteItemsListChanged_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<UserFavoriteItemsListChanged_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<UserFavoriteItemsListChanged_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.UserHasLicenseForAppResult : Enum {
public int value__
public UserHasLicenseForAppResult HasLicense
public UserHasLicenseForAppResult DoesNotHaveLicense
public UserHasLicenseForAppResult NoAuth
}
internal SteamNative.UserRestriction : Enum {
public int value__
public UserRestriction None
public UserRestriction Unknown
public UserRestriction AnyChat
public UserRestriction VoiceChat
public UserRestriction GroupChat
public UserRestriction Rating
public UserRestriction GameInvites
public UserRestriction Trading
}
internal SteamNative.UserStatsReceived_t : ValueType {
internal int CallbackId
internal ulong GameID
internal Result Result
internal ulong SteamIDUser
internal UserStatsReceived_t FromPointer(IntPtr p)
internal int StructSize()
internal CallResult`1<UserStatsReceived_t> CallResult(BaseSteamworks steamworks, SteamAPICall_t call, Action`2<UserStatsReceived_t, bool> CallbackFunction)
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.UserStatsStored_t : ValueType {
internal int CallbackId
internal ulong GameID
internal Result Result
internal UserStatsStored_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.UserStatsUnloaded_t : ValueType {
internal int CallbackId
internal ulong SteamIDUser
internal UserStatsUnloaded_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.UserUGCList : Enum {
public int value__
public UserUGCList Published
public UserUGCList VotedOn
public UserUGCList VotedUp
public UserUGCList VotedDown
public UserUGCList WillVoteLater
public UserUGCList Favorited
public UserUGCList Subscribed
public UserUGCList UsedOrPlayed
public UserUGCList Followed
}
internal SteamNative.UserUGCListSortOrder : Enum {
public int value__
public UserUGCListSortOrder CreationOrderDesc
public UserUGCListSortOrder CreationOrderAsc
public UserUGCListSortOrder TitleAsc
public UserUGCListSortOrder LastUpdatedDesc
public UserUGCListSortOrder SubscriptionDateDesc
public UserUGCListSortOrder VoteScoreDesc
public UserUGCListSortOrder ForModeration
}
internal SteamNative.ValidateAuthTicketResponse_t : ValueType {
internal int CallbackId
internal ulong SteamID
internal AuthSessionResponse AuthSessionResponse
internal ulong OwnerSteamID
internal ValidateAuthTicketResponse_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.VoiceResult : Enum {
public int value__
public VoiceResult OK
public VoiceResult NotInitialized
public VoiceResult NotRecording
public VoiceResult NoData
public VoiceResult BufferTooSmall
public VoiceResult DataCorrupted
public VoiceResult Restricted
public VoiceResult UnsupportedCodec
public VoiceResult ReceiverOutOfDate
public VoiceResult ReceiverDidNotAnswer
}
internal SteamNative.VolumeHasChanged_t : ValueType {
internal int CallbackId
internal float NewVolume
internal VolumeHasChanged_t FromPointer(IntPtr p)
internal int StructSize()
internal void Register(BaseSteamworks steamworks)
internal void OnResultThis(IntPtr self, IntPtr param)
internal void OnResultWithInfoThis(IntPtr self, IntPtr param, bool failure, SteamAPICall_t call)
internal int OnGetSizeThis(IntPtr self)
internal int OnGetSize()
internal void OnResult(IntPtr param)
internal void OnResultWithInfo(IntPtr param, bool failure, SteamAPICall_t call)
}
internal SteamNative.VRHMDType : Enum {
public int value__
public VRHMDType None
public VRHMDType Unknown
public VRHMDType HTC_Dev
public VRHMDType HTC_VivePre
public VRHMDType HTC_Vive
public VRHMDType HTC_Unknown
public VRHMDType Oculus_DK1
public VRHMDType Oculus_DK2
public VRHMDType Oculus_Rift
public VRHMDType Oculus_Unknown
public VRHMDType Acer_Unknown
public VRHMDType Acer_WindowsMR
public VRHMDType Dell_Unknown
public VRHMDType Dell_Visor
public VRHMDType Lenovo_Unknown
public VRHMDType Lenovo_Explorer
public VRHMDType HP_Unknown
public VRHMDType HP_WindowsMR
public VRHMDType Samsung_Unknown
public VRHMDType Samsung_Odyssey
public VRHMDType Unannounced_Unknown
public VRHMDType Unannounced_WindowsMR
}
internal SteamNative.VRScreenshotType : Enum {
public int value__
public VRScreenshotType None
public VRScreenshotType Mono
public VRScreenshotType Stereo
public VRScreenshotType MonoCubemap
public VRScreenshotType MonoPanorama
public VRScreenshotType StereoPanorama
}
internal SteamNative.WorkshopEnumerationType : Enum {
public int value__
public WorkshopEnumerationType RankedByVote
public WorkshopEnumerationType Recent
public WorkshopEnumerationType Trending
public WorkshopEnumerationType FavoritesOfFriends
public WorkshopEnumerationType VotedByFriends
public WorkshopEnumerationType ContentByFriends
public WorkshopEnumerationType RecentFromFollowedUsers
}
internal SteamNative.WorkshopFileAction : Enum {
public int value__
public WorkshopFileAction Played
public WorkshopFileAction Completed
}
internal SteamNative.WorkshopFileType : Enum {
public int value__
public WorkshopFileType First
public WorkshopFileType Community
public WorkshopFileType Microtransaction
public WorkshopFileType Collection
public WorkshopFileType Art
public WorkshopFileType Video
public WorkshopFileType Screenshot
public WorkshopFileType Game
public WorkshopFileType Software
public WorkshopFileType Concept
public WorkshopFileType WebGuide
public WorkshopFileType IntegratedGuide
public WorkshopFileType Merch
public WorkshopFileType ControllerBinding
public WorkshopFileType SteamworksAccessInvite
public WorkshopFileType SteamVideo
public WorkshopFileType GameManagedItem
public WorkshopFileType Max
}
internal SteamNative.WorkshopVideoProvider : Enum {
public int value__
public WorkshopVideoProvider None
public WorkshopVideoProvider Youtube
}
internal SteamNative.WorkshopVote : Enum {
public int value__
public WorkshopVote Unvoted
public WorkshopVote For
public WorkshopVote Against
public WorkshopVote Later
}
