internal UnityEngine.BorderParameters : ValueType {
public float leftWidth
public float topWidth
public float rightWidth
public float bottomWidth
public float topLeftRadius
public float topRightRadius
public float bottomRightRadius
public float bottomLeftRadius
public void SetWidth(float top, float right, float bottom, float left)
public void SetWidth(float allBorders)
public void SetRadius(float topLeft, float topRight, float bottomRight, float bottomLeft)
public void SetRadius(float radius)
public Vector4 GetWidths()
public Vector4 GetRadiuses()
}
internal UnityEngine.CursorPositionStylePainterParameters : ValueType {
public Rect rect
public string text
public Font font
public int fontSize
public FontStyle fontStyle
public TextAnchor anchor
public float wordWrapWidth
public bool richText
public int cursorIndex
}
public UnityEngine.Event : object {
internal IntPtr m_Ptr
private Event s_Current
private Event s_MasterEvent
private Dictionary`2<string, int> <>f__switch$map0
public EventType rawType
public EventType type
public int button
public EventModifiers modifiers
public float pressure
public int clickCount
public char character
public string commandName
public KeyCode keyCode
public int displayIndex
public Vector2 mousePosition
public Vector2 delta
public Ray mouseRay
public bool shift
public bool control
public bool alt
public bool command
public bool capsLock
public bool numeric
public bool functionKey
public Event current
public bool isKey
public bool isMouse
public bool isScrollWheel
public void .ctor(int displayIndex)
public void .ctor(Event other)
private void .ctor(IntPtr ptr)
private void Init(int displayIndex)
private void Cleanup()
private void InitCopy(Event other)
private void InitPtr(IntPtr ptr)
internal void CopyFromPtr(IntPtr ptr)
public EventType get_rawType()
public EventType get_type()
public void set_type(EventType value)
public EventType GetTypeForControl(int controlID)
private void Internal_SetMousePosition(Vector2 value)
private void INTERNAL_CALL_Internal_SetMousePosition(Event self, Vector2& value)
private void Internal_GetMousePosition(Vector2& value)
private void Internal_SetMouseDelta(Vector2 value)
private void INTERNAL_CALL_Internal_SetMouseDelta(Event self, Vector2& value)
private void Internal_GetMouseDelta(Vector2& value)
public int get_button()
public void set_button(int value)
public EventModifiers get_modifiers()
public void set_modifiers(EventModifiers value)
public float get_pressure()
public void set_pressure(float value)
public int get_clickCount()
public void set_clickCount(int value)
public char get_character()
public void set_character(char value)
public string get_commandName()
public void set_commandName(string value)
public KeyCode get_keyCode()
public void set_keyCode(KeyCode value)
private void Internal_SetNativeEvent(IntPtr ptr)
public int get_displayIndex()
public void set_displayIndex(int value)
private void Internal_Use()
public bool PopEvent(Event outEvent)
public int GetEventCount()
protected void Finalize()
internal void CleanupRoots()
public Vector2 get_mousePosition()
public void set_mousePosition(Vector2 value)
public Vector2 get_delta()
public void set_delta(Vector2 value)
public Ray get_mouseRay()
public void set_mouseRay(Ray value)
public bool get_shift()
public void set_shift(bool value)
public bool get_control()
public void set_control(bool value)
public bool get_alt()
public void set_alt(bool value)
public bool get_command()
public void set_command(bool value)
public bool get_capsLock()
public void set_capsLock(bool value)
public bool get_numeric()
public void set_numeric(bool value)
public bool get_functionKey()
public Event get_current()
public void set_current(Event value)
private void Internal_MakeMasterEventCurrent(int displayIndex)
public bool get_isKey()
public bool get_isMouse()
public bool get_isScrollWheel()
public Event KeyboardEvent(string key)
public int GetHashCode()
public bool Equals(object obj)
public string ToString()
public void Use()
}
internal UnityEngine.EventCommandNames : object {
public string Cut
public string Copy
public string Paste
public string SelectAll
public string Duplicate
public string Delete
public string SoftDelete
public string Find
public string UndoRedoPerformed
public string OnLostFocus
public string NewKeyboardFocus
public string ModifierKeysChanged
public string EyeDropperUpdate
public string EyeDropperClicked
public string EyeDropperCancelled
public string ColorPickerChanged
public string FrameSelected
public string FrameSelectedWithLock
}
internal UnityEngine.EventInterests : ValueType {
private bool <wantsMouseMove>k__BackingField
private bool <wantsMouseEnterLeaveWindow>k__BackingField
public bool wantsMouseMove
public bool wantsMouseEnterLeaveWindow
public bool get_wantsMouseMove()
public void set_wantsMouseMove(bool value)
public bool get_wantsMouseEnterLeaveWindow()
public void set_wantsMouseEnterLeaveWindow(bool value)
public bool WantsEvent(EventType type)
}
public UnityEngine.EventModifiers : Enum {
public int value__
public EventModifiers None
public EventModifiers Shift
public EventModifiers Control
public EventModifiers Alt
public EventModifiers Command
public EventModifiers Numeric
public EventModifiers CapsLock
public EventModifiers FunctionKey
}
public UnityEngine.EventType : Enum {
public int value__
public EventType MouseDown
public EventType MouseUp
public EventType MouseMove
public EventType MouseDrag
public EventType KeyDown
public EventType KeyUp
public EventType ScrollWheel
public EventType Repaint
public EventType Layout
public EventType DragUpdated
public EventType DragPerform
public EventType DragExited
public EventType Ignore
public EventType Used
public EventType ValidateCommand
public EventType ExecuteCommand
public EventType ContextClick
public EventType MouseEnterWindow
public EventType MouseLeaveWindow
public EventType mouseDown
public EventType mouseUp
public EventType mouseMove
public EventType mouseDrag
public EventType keyDown
public EventType keyUp
public EventType scrollWheel
public EventType repaint
public EventType layout
public EventType dragUpdated
public EventType dragPerform
public EventType ignore
public EventType used
}
public UnityEngine.FocusType : Enum {
public int value__
public FocusType Native
public FocusType Keyboard
public FocusType Passive
}
public UnityEngine.GUI : object {
private float s_ScrollStepSize
private int s_ScrollControlId
private int s_HotTextField
private int s_BoxHash
private int s_RepeatButtonHash
private int s_ToggleHash
private int s_ButtonGridHash
private int s_SliderHash
private int s_BeginGroupHash
private int s_ScrollviewHash
private int <scrollTroughSide>k__BackingField
private DateTime <nextScrollStepTime>k__BackingField
private GUISkin s_Skin
internal Rect s_ToolTipRect
private GenericStack s_ScrollViewStates
public Color color
public Color backgroundColor
public Color contentColor
public bool changed
public bool enabled
public int depth
internal Material blendMaterial
internal Material blitMaterial
internal Material roundedRectMaterial
internal bool usePageScrollbars
internal int scrollTroughSide
internal DateTime nextScrollStepTime
public GUISkin skin
public Matrix4x4 matrix
public string tooltip
protected string mouseTooltip
protected Rect tooltipRect
public Color get_color()
public void set_color(Color value)
private void INTERNAL_get_color(Color& value)
private void INTERNAL_set_color(Color& value)
public Color get_backgroundColor()
public void set_backgroundColor(Color value)
private void INTERNAL_get_backgroundColor(Color& value)
private void INTERNAL_set_backgroundColor(Color& value)
public Color get_contentColor()
public void set_contentColor(Color value)
private void INTERNAL_get_contentColor(Color& value)
private void INTERNAL_set_contentColor(Color& value)
public bool get_changed()
public void set_changed(bool value)
public bool get_enabled()
public void set_enabled(bool value)
private string Internal_GetTooltip()
private void Internal_SetTooltip(string value)
private string Internal_GetMouseTooltip()
public int get_depth()
public void set_depth(int value)
private void DoLabel(Rect position, GUIContent content, IntPtr style)
private void INTERNAL_CALL_DoLabel(Rect& position, GUIContent content, IntPtr style)
private void InitializeGUIClipTexture()
internal Material get_blendMaterial()
internal Material get_blitMaterial()
internal Material get_roundedRectMaterial()
private bool DoButton(Rect position, GUIContent content, IntPtr style)
private bool INTERNAL_CALL_DoButton(Rect& position, GUIContent content, IntPtr style)
public void SetNextControlName(string name)
public string GetNameOfFocusedControl()
public void FocusControl(string name)
internal bool DoToggle(Rect position, int id, bool value, GUIContent content, IntPtr style)
private bool INTERNAL_CALL_DoToggle(Rect& position, int id, bool value, GUIContent content, IntPtr style)
internal bool get_usePageScrollbars()
internal void InternalRepaintEditorWindow()
private Rect Internal_DoModalWindow(int id, int instanceID, Rect clientRect, WindowFunction func, GUIContent content, GUIStyle style, GUISkin skin)
private void INTERNAL_CALL_Internal_DoModalWindow(int id, int instanceID, Rect& clientRect, WindowFunction func, GUIContent content, GUIStyle style, GUISkin skin, Rect& value)
private Rect Internal_DoWindow(int id, int instanceID, Rect clientRect, WindowFunction func, GUIContent title, GUIStyle style, GUISkin skin, bool forceRectOnLayout)
private void INTERNAL_CALL_Internal_DoWindow(int id, int instanceID, Rect& clientRect, WindowFunction func, GUIContent title, GUIStyle style, GUISkin skin, bool forceRectOnLayout, Rect& value)
public void DragWindow(Rect position)
private void INTERNAL_CALL_DragWindow(Rect& position)
public void BringWindowToFront(int windowID)
public void BringWindowToBack(int windowID)
public void FocusWindow(int windowID)
public void UnfocusWindow()
private void Internal_BeginWindows()
private void Internal_EndWindows()
internal int get_scrollTroughSide()
internal void set_scrollTroughSide(int value)
internal DateTime get_nextScrollStepTime()
internal void set_nextScrollStepTime(DateTime value)
public void set_skin(GUISkin value)
public GUISkin get_skin()
internal void DoSetSkin(GUISkin newSkin)
internal void CleanupRoots()
public Matrix4x4 get_matrix()
public void set_matrix(Matrix4x4 value)
public string get_tooltip()
public void set_tooltip(string value)
protected string get_mouseTooltip()
protected Rect get_tooltipRect()
protected void set_tooltipRect(Rect value)
public void Label(Rect position, string text)
public void Label(Rect position, Texture image)
public void Label(Rect position, GUIContent content)
public void Label(Rect position, string text, GUIStyle style)
public void Label(Rect position, Texture image, GUIStyle style)
public void Label(Rect position, GUIContent content, GUIStyle style)
public void DrawTexture(Rect position, Texture image)
public void DrawTexture(Rect position, Texture image, ScaleMode scaleMode)
public void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend)
public void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect)
public void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect, Color color, float borderWidth, float borderRadius)
public void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect, Color color, Vector4 borderWidths, float borderRadius)
public void DrawTexture(Rect position, Texture image, ScaleMode scaleMode, bool alphaBlend, float imageAspect, Color color, Vector4 borderWidths, Vector4 borderRadiuses)
internal bool CalculateScaledTextureRects(Rect position, ScaleMode scaleMode, float imageAspect, Rect& outScreenRect, Rect& outSourceRect)
public void DrawTextureWithTexCoords(Rect position, Texture image, Rect texCoords)
public void DrawTextureWithTexCoords(Rect position, Texture image, Rect texCoords, bool alphaBlend)
public void Box(Rect position, string text)
public void Box(Rect position, Texture image)
public void Box(Rect position, GUIContent content)
public void Box(Rect position, string text, GUIStyle style)
public void Box(Rect position, Texture image, GUIStyle style)
public void Box(Rect position, GUIContent content, GUIStyle style)
public bool Button(Rect position, string text)
public bool Button(Rect position, Texture image)
public bool Button(Rect position, GUIContent content)
public bool Button(Rect position, string text, GUIStyle style)
public bool Button(Rect position, Texture image, GUIStyle style)
public bool Button(Rect position, GUIContent content, GUIStyle style)
public bool RepeatButton(Rect position, string text)
public bool RepeatButton(Rect position, Texture image)
public bool RepeatButton(Rect position, GUIContent content)
public bool RepeatButton(Rect position, string text, GUIStyle style)
public bool RepeatButton(Rect position, Texture image, GUIStyle style)
public bool RepeatButton(Rect position, GUIContent content, GUIStyle style)
private bool DoRepeatButton(Rect position, GUIContent content, GUIStyle style, FocusType focusType)
public string TextField(Rect position, string text)
public string TextField(Rect position, string text, int maxLength)
public string TextField(Rect position, string text, GUIStyle style)
public string TextField(Rect position, string text, int maxLength, GUIStyle style)
public string PasswordField(Rect position, string password, char maskChar)
public string PasswordField(Rect position, string password, char maskChar, int maxLength)
public string PasswordField(Rect position, string password, char maskChar, GUIStyle style)
public string PasswordField(Rect position, string password, char maskChar, int maxLength, GUIStyle style)
internal string PasswordFieldGetStrToShow(string password, char maskChar)
public string TextArea(Rect position, string text)
public string TextArea(Rect position, string text, int maxLength)
public string TextArea(Rect position, string text, GUIStyle style)
public string TextArea(Rect position, string text, int maxLength, GUIStyle style)
private string TextArea(Rect position, GUIContent content, int maxLength, GUIStyle style)
internal void DoTextField(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style)
internal void DoTextField(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, string secureText)
internal void DoTextField(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, string secureText, char maskChar)
private void HandleTextFieldEventForTouchscreen(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, string secureText, char maskChar, TextEditor editor)
private void HandleTextFieldEventForDesktop(Rect position, int id, GUIContent content, bool multiline, int maxLength, GUIStyle style, TextEditor editor)
public bool Toggle(Rect position, bool value, string text)
public bool Toggle(Rect position, bool value, Texture image)
public bool Toggle(Rect position, bool value, GUIContent content)
public bool Toggle(Rect position, bool value, string text, GUIStyle style)
public bool Toggle(Rect position, bool value, Texture image, GUIStyle style)
public bool Toggle(Rect position, bool value, GUIContent content, GUIStyle style)
public bool Toggle(Rect position, int id, bool value, GUIContent content, GUIStyle style)
public int Toolbar(Rect position, int selected, String[] texts)
public int Toolbar(Rect position, int selected, Texture[] images)
public int Toolbar(Rect position, int selected, GUIContent[] contents)
public int Toolbar(Rect position, int selected, String[] texts, GUIStyle style)
public int Toolbar(Rect position, int selected, Texture[] images, GUIStyle style)
public int Toolbar(Rect position, int selected, GUIContent[] contents, GUIStyle style)
public int Toolbar(Rect position, int selected, GUIContent[] contents, GUIStyle style, ToolbarButtonSize buttonSize)
internal int Toolbar(Rect position, int selected, GUIContent[] contents, String[] controlNames, GUIStyle style, ToolbarButtonSize buttonSize)
public int SelectionGrid(Rect position, int selected, String[] texts, int xCount)
public int SelectionGrid(Rect position, int selected, Texture[] images, int xCount)
public int SelectionGrid(Rect position, int selected, GUIContent[] content, int xCount)
public int SelectionGrid(Rect position, int selected, String[] texts, int xCount, GUIStyle style)
public int SelectionGrid(Rect position, int selected, Texture[] images, int xCount, GUIStyle style)
public int SelectionGrid(Rect position, int selected, GUIContent[] contents, int xCount, GUIStyle style)
internal void FindStyles(GUIStyle& style, GUIStyle& firstStyle, GUIStyle& midStyle, GUIStyle& lastStyle, string first, string mid, string last)
internal int CalcTotalHorizSpacing(int xCount, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle)
private int DoButtonGrid(Rect position, int selected, GUIContent[] contents, String[] controlNames, int xCount, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle, ToolbarButtonSize buttonSize)
private Rect[] CalcMouseRects(Rect position, GUIContent[] contents, int xCount, float elemWidth, float elemHeight, GUIStyle style, GUIStyle firstStyle, GUIStyle midStyle, GUIStyle lastStyle, bool addBorders, ToolbarButtonSize buttonSize)
public float HorizontalSlider(Rect position, float value, float leftValue, float rightValue)
public float HorizontalSlider(Rect position, float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb)
public float VerticalSlider(Rect position, float value, float topValue, float bottomValue)
public float VerticalSlider(Rect position, float value, float topValue, float bottomValue, GUIStyle slider, GUIStyle thumb)
public float Slider(Rect position, float value, float size, float start, float end, GUIStyle slider, GUIStyle thumb, bool horiz, int id)
public float HorizontalScrollbar(Rect position, float value, float size, float leftValue, float rightValue)
public float HorizontalScrollbar(Rect position, float value, float size, float leftValue, float rightValue, GUIStyle style)
internal bool ScrollerRepeatButton(int scrollerID, Rect rect, GUIStyle style)
public float VerticalScrollbar(Rect position, float value, float size, float topValue, float bottomValue)
public float VerticalScrollbar(Rect position, float value, float size, float topValue, float bottomValue, GUIStyle style)
internal float Scroller(Rect position, float value, float size, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUIStyle leftButton, GUIStyle rightButton, bool horiz)
public void BeginClip(Rect position, Vector2 scrollOffset, Vector2 renderOffset, bool resetOffset)
public void BeginGroup(Rect position)
public void BeginGroup(Rect position, string text)
public void BeginGroup(Rect position, Texture image)
public void BeginGroup(Rect position, GUIContent content)
public void BeginGroup(Rect position, GUIStyle style)
public void BeginGroup(Rect position, string text, GUIStyle style)
public void BeginGroup(Rect position, Texture image, GUIStyle style)
public void BeginGroup(Rect position, GUIContent content, GUIStyle style)
internal void BeginGroup(Rect position, GUIContent content, GUIStyle style, Vector2 scrollOffset)
public void EndGroup()
public void BeginClip(Rect position)
public void EndClip()
public Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect)
public Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical)
public Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar)
public Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar)
protected Vector2 DoBeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background)
internal Vector2 BeginScrollView(Rect position, Vector2 scrollPosition, Rect viewRect, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background)
public void EndScrollView()
public void EndScrollView(bool handleScrollWheel)
internal ScrollViewState GetTopScrollView()
public void ScrollTo(Rect position)
public bool ScrollTowards(Rect position, float maxDelta)
public Rect Window(int id, Rect clientRect, WindowFunction func, string text)
public Rect Window(int id, Rect clientRect, WindowFunction func, Texture image)
public Rect Window(int id, Rect clientRect, WindowFunction func, GUIContent content)
public Rect Window(int id, Rect clientRect, WindowFunction func, string text, GUIStyle style)
public Rect Window(int id, Rect clientRect, WindowFunction func, Texture image, GUIStyle style)
public Rect Window(int id, Rect clientRect, WindowFunction func, GUIContent title, GUIStyle style)
public Rect ModalWindow(int id, Rect clientRect, WindowFunction func, string text)
public Rect ModalWindow(int id, Rect clientRect, WindowFunction func, Texture image)
public Rect ModalWindow(int id, Rect clientRect, WindowFunction func, GUIContent content)
public Rect ModalWindow(int id, Rect clientRect, WindowFunction func, string text, GUIStyle style)
public Rect ModalWindow(int id, Rect clientRect, WindowFunction func, Texture image, GUIStyle style)
public Rect ModalWindow(int id, Rect clientRect, WindowFunction func, GUIContent content, GUIStyle style)
private Rect DoWindow(int id, Rect clientRect, WindowFunction func, GUIContent title, GUIStyle style, GUISkin skin, bool forceRectOnLayout)
private Rect DoModalWindow(int id, Rect clientRect, WindowFunction func, GUIContent content, GUIStyle style, GUISkin skin)
internal void CallWindowDelegate(WindowFunction func, int id, int instanceID, GUISkin _skin, int forceRect, float width, float height, GUIStyle style)
public void DragWindow()
internal void BeginWindows(int skinMode, int editorWindowInstanceID)
internal void EndWindows()
}
internal UnityEngine.GUIAspectSizer : GUILayoutEntry {
private float aspect
public void .ctor(float aspect, GUILayoutOption[] options)
public void CalcHeight()
}
internal UnityEngine.GUIClip : object {
public bool enabled
public Rect topmostRect
public Rect visibleRect
internal void Internal_Push(Rect screenRect, Vector2 scrollOffset, Vector2 renderOffset, bool resetOffset)
private void INTERNAL_CALL_Internal_Push(Rect& screenRect, Vector2& scrollOffset, Vector2& renderOffset, bool resetOffset)
internal void Internal_Pop()
internal int Internal_GetCount()
internal Rect GetTopRect()
private void INTERNAL_CALL_GetTopRect(Rect& value)
public bool get_enabled()
private void Unclip_Vector2(Vector2& pos)
private void INTERNAL_CALL_Unclip_Vector2(Vector2& pos)
public Rect get_topmostRect()
private void INTERNAL_get_topmostRect(Rect& value)
private void Unclip_Rect(Rect& rect)
private void INTERNAL_CALL_Unclip_Rect(Rect& rect)
private void Clip_Vector2(Vector2& absolutePos)
private void INTERNAL_CALL_Clip_Vector2(Vector2& absolutePos)
private void Internal_Clip_Rect(Rect& absoluteRect)
private void INTERNAL_CALL_Internal_Clip_Rect(Rect& absoluteRect)
private void UnclipToWindow_Vector2(Vector2& pos)
private void INTERNAL_CALL_UnclipToWindow_Vector2(Vector2& pos)
private void UnclipToWindow_Rect(Rect& rect)
private void INTERNAL_CALL_UnclipToWindow_Rect(Rect& rect)
private void ClipToWindow_Vector2(Vector2& absolutePos)
private void INTERNAL_CALL_ClipToWindow_Vector2(Vector2& absolutePos)
private void ClipToWindow_Rect(Rect& absoluteRect)
private void INTERNAL_CALL_ClipToWindow_Rect(Rect& absoluteRect)
internal void Reapply()
internal Matrix4x4 GetMatrix()
private void INTERNAL_CALL_GetMatrix(Matrix4x4& value)
internal void SetMatrix(Matrix4x4 m)
private void INTERNAL_CALL_SetMatrix(Matrix4x4& m)
internal void Internal_PushParentClip(Matrix4x4 objectTransform, Rect clipRect)
private void INTERNAL_CALL_Internal_PushParentClip(Matrix4x4& objectTransform, Rect& clipRect)
internal void Internal_PopParentClip()
public Rect get_visibleRect()
private void INTERNAL_get_visibleRect(Rect& value)
private void Internal_GetAbsoluteMousePosition(Vector2& output)
internal void Push(Rect screenRect, Vector2 scrollOffset, Vector2 renderOffset, bool resetOffset)
internal void Pop()
public Vector2 Unclip(Vector2 pos)
public Rect Unclip(Rect rect)
public Vector2 Clip(Vector2 absolutePos)
public Rect Clip(Rect absoluteRect)
public Vector2 UnclipToWindow(Vector2 pos)
public Rect UnclipToWindow(Rect rect)
public Vector2 ClipToWindow(Vector2 absolutePos)
public Rect ClipToWindow(Rect absoluteRect)
public Vector2 GetAbsoluteMousePosition()
}
public UnityEngine.GUIContent : object {
private string m_Text
private Texture m_Image
private string m_Tooltip
private GUIContent s_Text
private GUIContent s_Image
private GUIContent s_TextImage
public GUIContent none
public string text
public Texture image
public string tooltip
internal int hash
public void .ctor(string text)
public void .ctor(Texture image)
public void .ctor(string text, Texture image)
public void .ctor(string text, string tooltip)
public void .ctor(Texture image, string tooltip)
public void .ctor(string text, Texture image, string tooltip)
public void .ctor(GUIContent src)
public string get_text()
public void set_text(string value)
public Texture get_image()
public void set_image(Texture value)
public string get_tooltip()
public void set_tooltip(string value)
internal int get_hash()
internal GUIContent Temp(string t)
internal GUIContent Temp(string t, string tooltip)
internal GUIContent Temp(Texture i)
internal GUIContent Temp(Texture i, string tooltip)
internal GUIContent Temp(string t, Texture i)
internal void ClearStaticCache()
internal GUIContent[] Temp(String[] texts)
internal GUIContent[] Temp(Texture[] images)
}
internal UnityEngine.GUIDebugger : object {
public bool active
public void LogLayoutEntry(Rect rect, RectOffset margins, GUIStyle style)
public void LogLayoutGroupEntry(Rect rect, RectOffset margins, GUIStyle style, bool isVertical)
public void LogLayoutEndGroup()
public void LogBeginProperty(string targetTypeAssemblyQualifiedName, string path, Rect position)
public void LogEndProperty()
public bool get_active()
private void LogLayoutEntry_Injected(Rect& rect, RectOffset margins, GUIStyle style)
private void LogLayoutGroupEntry_Injected(Rect& rect, RectOffset margins, GUIStyle style, bool isVertical)
private void LogBeginProperty_Injected(string targetTypeAssemblyQualifiedName, string path, Rect& position)
}
internal UnityEngine.GUIGridSizer : GUILayoutEntry {
private int m_Count
private int m_XCount
private float m_MinButtonWidth
private float m_MaxButtonWidth
private float m_MinButtonHeight
private float m_MaxButtonHeight
private int rows
private void .ctor(GUIContent[] contents, int xCount, GUIStyle buttonStyle, GUILayoutOption[] options)
public Rect GetRect(GUIContent[] contents, int xCount, GUIStyle style, GUILayoutOption[] options)
private int get_rows()
}
public UnityEngine.GUILayout : object {
public void Label(Texture image, GUILayoutOption[] options)
public void Label(string text, GUILayoutOption[] options)
public void Label(GUIContent content, GUILayoutOption[] options)
public void Label(Texture image, GUIStyle style, GUILayoutOption[] options)
public void Label(string text, GUIStyle style, GUILayoutOption[] options)
public void Label(GUIContent content, GUIStyle style, GUILayoutOption[] options)
private void DoLabel(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public void Box(Texture image, GUILayoutOption[] options)
public void Box(string text, GUILayoutOption[] options)
public void Box(GUIContent content, GUILayoutOption[] options)
public void Box(Texture image, GUIStyle style, GUILayoutOption[] options)
public void Box(string text, GUIStyle style, GUILayoutOption[] options)
public void Box(GUIContent content, GUIStyle style, GUILayoutOption[] options)
private void DoBox(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public bool Button(Texture image, GUILayoutOption[] options)
public bool Button(string text, GUILayoutOption[] options)
public bool Button(GUIContent content, GUILayoutOption[] options)
public bool Button(Texture image, GUIStyle style, GUILayoutOption[] options)
public bool Button(string text, GUIStyle style, GUILayoutOption[] options)
public bool Button(GUIContent content, GUIStyle style, GUILayoutOption[] options)
private bool DoButton(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public bool RepeatButton(Texture image, GUILayoutOption[] options)
public bool RepeatButton(string text, GUILayoutOption[] options)
public bool RepeatButton(GUIContent content, GUILayoutOption[] options)
public bool RepeatButton(Texture image, GUIStyle style, GUILayoutOption[] options)
public bool RepeatButton(string text, GUIStyle style, GUILayoutOption[] options)
public bool RepeatButton(GUIContent content, GUIStyle style, GUILayoutOption[] options)
private bool DoRepeatButton(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public string TextField(string text, GUILayoutOption[] options)
public string TextField(string text, int maxLength, GUILayoutOption[] options)
public string TextField(string text, GUIStyle style, GUILayoutOption[] options)
public string TextField(string text, int maxLength, GUIStyle style, GUILayoutOption[] options)
public string PasswordField(string password, char maskChar, GUILayoutOption[] options)
public string PasswordField(string password, char maskChar, int maxLength, GUILayoutOption[] options)
public string PasswordField(string password, char maskChar, GUIStyle style, GUILayoutOption[] options)
public string PasswordField(string password, char maskChar, int maxLength, GUIStyle style, GUILayoutOption[] options)
public string TextArea(string text, GUILayoutOption[] options)
public string TextArea(string text, int maxLength, GUILayoutOption[] options)
public string TextArea(string text, GUIStyle style, GUILayoutOption[] options)
public string TextArea(string text, int maxLength, GUIStyle style, GUILayoutOption[] options)
private string DoTextField(string text, int maxLength, bool multiline, GUIStyle style, GUILayoutOption[] options)
public bool Toggle(bool value, Texture image, GUILayoutOption[] options)
public bool Toggle(bool value, string text, GUILayoutOption[] options)
public bool Toggle(bool value, GUIContent content, GUILayoutOption[] options)
public bool Toggle(bool value, Texture image, GUIStyle style, GUILayoutOption[] options)
public bool Toggle(bool value, string text, GUIStyle style, GUILayoutOption[] options)
public bool Toggle(bool value, GUIContent content, GUIStyle style, GUILayoutOption[] options)
private bool DoToggle(bool value, GUIContent content, GUIStyle style, GUILayoutOption[] options)
public int Toolbar(int selected, String[] texts, GUILayoutOption[] options)
public int Toolbar(int selected, Texture[] images, GUILayoutOption[] options)
public int Toolbar(int selected, GUIContent[] contents, GUILayoutOption[] options)
public int Toolbar(int selected, String[] texts, GUIStyle style, GUILayoutOption[] options)
public int Toolbar(int selected, Texture[] images, GUIStyle style, GUILayoutOption[] options)
public int Toolbar(int selected, String[] texts, GUIStyle style, ToolbarButtonSize buttonSize, GUILayoutOption[] options)
public int Toolbar(int selected, Texture[] images, GUIStyle style, ToolbarButtonSize buttonSize, GUILayoutOption[] options)
public int Toolbar(int selected, GUIContent[] contents, GUIStyle style, GUILayoutOption[] options)
public int Toolbar(int selected, GUIContent[] contents, GUIStyle style, ToolbarButtonSize buttonSize, GUILayoutOption[] options)
public int SelectionGrid(int selected, String[] texts, int xCount, GUILayoutOption[] options)
public int SelectionGrid(int selected, Texture[] images, int xCount, GUILayoutOption[] options)
public int SelectionGrid(int selected, GUIContent[] content, int xCount, GUILayoutOption[] options)
public int SelectionGrid(int selected, String[] texts, int xCount, GUIStyle style, GUILayoutOption[] options)
public int SelectionGrid(int selected, Texture[] images, int xCount, GUIStyle style, GUILayoutOption[] options)
public int SelectionGrid(int selected, GUIContent[] contents, int xCount, GUIStyle style, GUILayoutOption[] options)
public float HorizontalSlider(float value, float leftValue, float rightValue, GUILayoutOption[] options)
public float HorizontalSlider(float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options)
private float DoHorizontalSlider(float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options)
public float VerticalSlider(float value, float leftValue, float rightValue, GUILayoutOption[] options)
public float VerticalSlider(float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options)
private float DoVerticalSlider(float value, float leftValue, float rightValue, GUIStyle slider, GUIStyle thumb, GUILayoutOption[] options)
public float HorizontalScrollbar(float value, float size, float leftValue, float rightValue, GUILayoutOption[] options)
public float HorizontalScrollbar(float value, float size, float leftValue, float rightValue, GUIStyle style, GUILayoutOption[] options)
public float VerticalScrollbar(float value, float size, float topValue, float bottomValue, GUILayoutOption[] options)
public float VerticalScrollbar(float value, float size, float topValue, float bottomValue, GUIStyle style, GUILayoutOption[] options)
public void Space(float pixels)
public void FlexibleSpace()
public void BeginHorizontal(GUILayoutOption[] options)
public void BeginHorizontal(GUIStyle style, GUILayoutOption[] options)
public void BeginHorizontal(string text, GUIStyle style, GUILayoutOption[] options)
public void BeginHorizontal(Texture image, GUIStyle style, GUILayoutOption[] options)
public void BeginHorizontal(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public void EndHorizontal()
public void BeginVertical(GUILayoutOption[] options)
public void BeginVertical(GUIStyle style, GUILayoutOption[] options)
public void BeginVertical(string text, GUIStyle style, GUILayoutOption[] options)
public void BeginVertical(Texture image, GUIStyle style, GUILayoutOption[] options)
public void BeginVertical(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public void EndVertical()
public void BeginArea(Rect screenRect)
public void BeginArea(Rect screenRect, string text)
public void BeginArea(Rect screenRect, Texture image)
public void BeginArea(Rect screenRect, GUIContent content)
public void BeginArea(Rect screenRect, GUIStyle style)
public void BeginArea(Rect screenRect, string text, GUIStyle style)
public void BeginArea(Rect screenRect, Texture image, GUIStyle style)
public void BeginArea(Rect screenRect, GUIContent content, GUIStyle style)
public void EndArea()
public Vector2 BeginScrollView(Vector2 scrollPosition, GUILayoutOption[] options)
public Vector2 BeginScrollView(Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, GUILayoutOption[] options)
public Vector2 BeginScrollView(Vector2 scrollPosition, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUILayoutOption[] options)
public Vector2 BeginScrollView(Vector2 scrollPosition, GUIStyle style)
public Vector2 BeginScrollView(Vector2 scrollPosition, GUIStyle style, GUILayoutOption[] options)
public Vector2 BeginScrollView(Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUILayoutOption[] options)
public Vector2 BeginScrollView(Vector2 scrollPosition, bool alwaysShowHorizontal, bool alwaysShowVertical, GUIStyle horizontalScrollbar, GUIStyle verticalScrollbar, GUIStyle background, GUILayoutOption[] options)
public void EndScrollView()
internal void EndScrollView(bool handleScrollWheel)
public Rect Window(int id, Rect screenRect, WindowFunction func, string text, GUILayoutOption[] options)
public Rect Window(int id, Rect screenRect, WindowFunction func, Texture image, GUILayoutOption[] options)
public Rect Window(int id, Rect screenRect, WindowFunction func, GUIContent content, GUILayoutOption[] options)
public Rect Window(int id, Rect screenRect, WindowFunction func, string text, GUIStyle style, GUILayoutOption[] options)
public Rect Window(int id, Rect screenRect, WindowFunction func, Texture image, GUIStyle style, GUILayoutOption[] options)
public Rect Window(int id, Rect screenRect, WindowFunction func, GUIContent content, GUIStyle style, GUILayoutOption[] options)
private Rect DoWindow(int id, Rect screenRect, WindowFunction func, GUIContent content, GUIStyle style, GUILayoutOption[] options)
public GUILayoutOption Width(float width)
public GUILayoutOption MinWidth(float minWidth)
public GUILayoutOption MaxWidth(float maxWidth)
public GUILayoutOption Height(float height)
public GUILayoutOption MinHeight(float minHeight)
public GUILayoutOption MaxHeight(float maxHeight)
public GUILayoutOption ExpandWidth(bool expand)
public GUILayoutOption ExpandHeight(bool expand)
}
internal UnityEngine.GUILayoutEntry : object {
public float minWidth
public float maxWidth
public float minHeight
public float maxHeight
public Rect rect
public int stretchWidth
public int stretchHeight
private GUIStyle m_Style
internal Rect kDummyRect
protected int indent
public GUIStyle style
public RectOffset margin
public void .ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, GUIStyle _style)
public void .ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, GUIStyle _style, GUILayoutOption[] options)
public GUIStyle get_style()
public void set_style(GUIStyle value)
public RectOffset get_margin()
public void CalcWidth()
public void CalcHeight()
public void SetHorizontal(float x, float width)
public void SetVertical(float y, float height)
protected void ApplyStyleSettings(GUIStyle style)
public void ApplyOptions(GUILayoutOption[] options)
public string ToString()
}
internal UnityEngine.GUILayoutGroup : GUILayoutEntry {
public List`1<GUILayoutEntry> entries
public bool isVertical
public bool resetCoords
public float spacing
public bool sameSize
public bool isWindow
public int windowID
private int m_Cursor
protected int m_StretchableCountX
protected int m_StretchableCountY
protected bool m_UserSpecifiedWidth
protected bool m_UserSpecifiedHeight
protected float m_ChildMinWidth
protected float m_ChildMaxWidth
protected float m_ChildMinHeight
protected float m_ChildMaxHeight
private RectOffset m_Margin
public RectOffset margin
public void .ctor(GUIStyle _style, GUILayoutOption[] options)
public RectOffset get_margin()
public void ApplyOptions(GUILayoutOption[] options)
protected void ApplyStyleSettings(GUIStyle style)
public void ResetCursor()
public Rect PeekNext()
public GUILayoutEntry GetNext()
public Rect GetLast()
public void Add(GUILayoutEntry e)
public void CalcWidth()
public void SetHorizontal(float x, float width)
public void CalcHeight()
public void SetVertical(float y, float height)
public string ToString()
}
public UnityEngine.GUILayoutOption : object {
internal Type type
internal object value
internal void .ctor(Type type, object value)
}
public UnityEngine.GUILayoutUtility : object {
private Dictionary`2<int, LayoutCache> s_StoredLayouts
private Dictionary`2<int, LayoutCache> s_StoredWindows
internal LayoutCache current
internal Rect kDummyRect
private GUIStyle s_SpaceStyle
internal GUILayoutGroup topLevel
internal GUIStyle spaceStyle
private Rect Internal_GetWindowRect(int windowID)
private void INTERNAL_CALL_Internal_GetWindowRect(int windowID, Rect& value)
private void Internal_MoveWindow(int windowID, Rect r)
private void INTERNAL_CALL_Internal_MoveWindow(int windowID, Rect& r)
internal Rect GetWindowsBounds()
private void INTERNAL_CALL_GetWindowsBounds(Rect& value)
internal void CleanupRoots()
internal LayoutCache SelectIDList(int instanceID, bool isWindow)
internal void Begin(int instanceID)
internal void BeginContainer(LayoutCache cache)
internal void BeginWindow(int windowID, GUIStyle style, GUILayoutOption[] options)
public void BeginGroup(string GroupName)
public void EndGroup(string groupName)
internal void Layout()
internal void LayoutFromEditorWindow()
internal void LayoutFromContainer(float w, float h)
internal float LayoutFromInspector(float width)
internal void LayoutFreeGroup(GUILayoutGroup toplevel)
private void LayoutSingleGroup(GUILayoutGroup i)
private GUILayoutGroup CreateGUILayoutGroupInstanceOfType(Type LayoutType)
internal GUILayoutGroup BeginLayoutGroup(GUIStyle style, GUILayoutOption[] options, Type layoutType)
internal void EndLayoutGroup()
internal GUILayoutGroup BeginLayoutArea(GUIStyle style, Type layoutType)
internal GUILayoutGroup DoBeginLayoutArea(GUIStyle style, Type layoutType)
internal GUILayoutGroup get_topLevel()
public Rect GetRect(GUIContent content, GUIStyle style)
public Rect GetRect(GUIContent content, GUIStyle style, GUILayoutOption[] options)
private Rect DoGetRect(GUIContent content, GUIStyle style, GUILayoutOption[] options)
public Rect GetRect(float width, float height)
public Rect GetRect(float width, float height, GUIStyle style)
public Rect GetRect(float width, float height, GUILayoutOption[] options)
public Rect GetRect(float width, float height, GUIStyle style, GUILayoutOption[] options)
public Rect GetRect(float minWidth, float maxWidth, float minHeight, float maxHeight)
public Rect GetRect(float minWidth, float maxWidth, float minHeight, float maxHeight, GUIStyle style)
public Rect GetRect(float minWidth, float maxWidth, float minHeight, float maxHeight, GUILayoutOption[] options)
public Rect GetRect(float minWidth, float maxWidth, float minHeight, float maxHeight, GUIStyle style, GUILayoutOption[] options)
private Rect DoGetRect(float minWidth, float maxWidth, float minHeight, float maxHeight, GUIStyle style, GUILayoutOption[] options)
public Rect GetLastRect()
public Rect GetAspectRect(float aspect)
public Rect GetAspectRect(float aspect, GUIStyle style)
public Rect GetAspectRect(float aspect, GUILayoutOption[] options)
public Rect GetAspectRect(float aspect, GUIStyle style, GUILayoutOption[] options)
private Rect DoGetAspectRect(float aspect, GUILayoutOption[] options)
internal GUIStyle get_spaceStyle()
}
internal UnityEngine.GUIScrollGroup : GUILayoutGroup {
public float calcMinWidth
public float calcMaxWidth
public float calcMinHeight
public float calcMaxHeight
public float clientWidth
public float clientHeight
public bool allowHorizontalScroll
public bool allowVerticalScroll
public bool needsHorizontalScrollbar
public bool needsVerticalScrollbar
public GUIStyle horizontalScrollbar
public GUIStyle verticalScrollbar
public void CalcWidth()
public void SetHorizontal(float x, float width)
public void CalcHeight()
public void SetVertical(float y, float height)
}
public UnityEngine.GUISettings : object {
private bool m_DoubleClickSelectsWord
private bool m_TripleClickSelectsLine
private Color m_CursorColor
private float m_CursorFlashSpeed
private Color m_SelectionColor
public bool doubleClickSelectsWord
public bool tripleClickSelectsLine
public Color cursorColor
public float cursorFlashSpeed
public Color selectionColor
private float Internal_GetCursorFlashSpeed()
public bool get_doubleClickSelectsWord()
public void set_doubleClickSelectsWord(bool value)
public bool get_tripleClickSelectsLine()
public void set_tripleClickSelectsLine(bool value)
public Color get_cursorColor()
public void set_cursorColor(Color value)
public float get_cursorFlashSpeed()
public void set_cursorFlashSpeed(float value)
public Color get_selectionColor()
public void set_selectionColor(Color value)
}
public UnityEngine.GUISkin : ScriptableObject {
private Font m_Font
private GUIStyle m_box
private GUIStyle m_button
private GUIStyle m_toggle
private GUIStyle m_label
private GUIStyle m_textField
private GUIStyle m_textArea
private GUIStyle m_window
private GUIStyle m_horizontalSlider
private GUIStyle m_horizontalSliderThumb
private GUIStyle m_verticalSlider
private GUIStyle m_verticalSliderThumb
private GUIStyle m_horizontalScrollbar
private GUIStyle m_horizontalScrollbarThumb
private GUIStyle m_horizontalScrollbarLeftButton
private GUIStyle m_horizontalScrollbarRightButton
private GUIStyle m_verticalScrollbar
private GUIStyle m_verticalScrollbarThumb
private GUIStyle m_verticalScrollbarUpButton
private GUIStyle m_verticalScrollbarDownButton
private GUIStyle m_ScrollView
internal GUIStyle[] m_CustomStyles
private GUISettings m_Settings
internal GUIStyle ms_Error
private Dictionary`2<string, GUIStyle> m_Styles
internal SkinChangedDelegate m_SkinChanged
internal GUISkin current
public Font font
public GUIStyle box
public GUIStyle label
public GUIStyle textField
public GUIStyle textArea
public GUIStyle button
public GUIStyle toggle
public GUIStyle window
public GUIStyle horizontalSlider
public GUIStyle horizontalSliderThumb
public GUIStyle verticalSlider
public GUIStyle verticalSliderThumb
public GUIStyle horizontalScrollbar
public GUIStyle horizontalScrollbarThumb
public GUIStyle horizontalScrollbarLeftButton
public GUIStyle horizontalScrollbarRightButton
public GUIStyle verticalScrollbar
public GUIStyle verticalScrollbarThumb
public GUIStyle verticalScrollbarUpButton
public GUIStyle verticalScrollbarDownButton
public GUIStyle scrollView
public GUIStyle[] customStyles
public GUISettings settings
internal GUIStyle error
internal void OnEnable()
internal void CleanupRoots()
public Font get_font()
public void set_font(Font value)
public GUIStyle get_box()
public void set_box(GUIStyle value)
public GUIStyle get_label()
public void set_label(GUIStyle value)
public GUIStyle get_textField()
public void set_textField(GUIStyle value)
public GUIStyle get_textArea()
public void set_textArea(GUIStyle value)
public GUIStyle get_button()
public void set_button(GUIStyle value)
public GUIStyle get_toggle()
public void set_toggle(GUIStyle value)
public GUIStyle get_window()
public void set_window(GUIStyle value)
public GUIStyle get_horizontalSlider()
public void set_horizontalSlider(GUIStyle value)
public GUIStyle get_horizontalSliderThumb()
public void set_horizontalSliderThumb(GUIStyle value)
public GUIStyle get_verticalSlider()
public void set_verticalSlider(GUIStyle value)
public GUIStyle get_verticalSliderThumb()
public void set_verticalSliderThumb(GUIStyle value)
public GUIStyle get_horizontalScrollbar()
public void set_horizontalScrollbar(GUIStyle value)
public GUIStyle get_horizontalScrollbarThumb()
public void set_horizontalScrollbarThumb(GUIStyle value)
public GUIStyle get_horizontalScrollbarLeftButton()
public void set_horizontalScrollbarLeftButton(GUIStyle value)
public GUIStyle get_horizontalScrollbarRightButton()
public void set_horizontalScrollbarRightButton(GUIStyle value)
public GUIStyle get_verticalScrollbar()
public void set_verticalScrollbar(GUIStyle value)
public GUIStyle get_verticalScrollbarThumb()
public void set_verticalScrollbarThumb(GUIStyle value)
public GUIStyle get_verticalScrollbarUpButton()
public void set_verticalScrollbarUpButton(GUIStyle value)
public GUIStyle get_verticalScrollbarDownButton()
public void set_verticalScrollbarDownButton(GUIStyle value)
public GUIStyle get_scrollView()
public void set_scrollView(GUIStyle value)
public GUIStyle[] get_customStyles()
public void set_customStyles(GUIStyle[] value)
public GUISettings get_settings()
internal GUIStyle get_error()
internal void Apply()
private void BuildStyleCache()
public GUIStyle GetStyle(string styleName)
public GUIStyle FindStyle(string styleName)
internal void MakeCurrent()
public IEnumerator GetEnumerator()
}
internal UnityEngine.GUIStateObjects : object {
private Dictionary`2<int, object> s_StateCache
internal object GetStateObject(Type t, int controlID)
internal object QueryStateObject(Type t, int controlID)
internal void Tests_ClearObjects()
}
public UnityEngine.GUIStyle : object {
internal IntPtr m_Ptr
private GUIStyleState m_Normal
private GUIStyleState m_Hover
private GUIStyleState m_Active
private GUIStyleState m_Focused
private GUIStyleState m_OnNormal
private GUIStyleState m_OnHover
private GUIStyleState m_OnActive
private GUIStyleState m_OnFocused
private RectOffset m_Border
private RectOffset m_Padding
private RectOffset m_Margin
private RectOffset m_Overflow
private Font m_FontInternal
internal bool showKeyboardFocus
private GUIStyle s_None
public string name
public ImagePosition imagePosition
public TextAnchor alignment
public bool wordWrap
public TextClipping clipping
public Vector2 contentOffset
internal Vector2 Internal_clipOffset
public float fixedWidth
public float fixedHeight
public bool stretchWidth
public bool stretchHeight
public int fontSize
public FontStyle fontStyle
public bool richText
public GUIStyleState normal
public GUIStyleState hover
public GUIStyleState active
public GUIStyleState onNormal
public GUIStyleState onHover
public GUIStyleState onActive
public GUIStyleState focused
public GUIStyleState onFocused
public RectOffset border
public RectOffset margin
public RectOffset padding
public RectOffset overflow
public Vector2 clipOffset
public Font font
public float lineHeight
public GUIStyle none
public bool isHeightDependantOnWidth
public void .ctor(GUIStyle other)
private void Init()
private void InitCopy(GUIStyle other)
private void Cleanup()
public string get_name()
public void set_name(string value)
private IntPtr GetStyleStatePtr(int idx)
private void INTERNAL_CALL_GetStyleStatePtr(GUIStyle self, int idx, IntPtr& value)
private void AssignStyleState(int idx, IntPtr srcStyleState)
private IntPtr GetRectOffsetPtr(int idx)
private void INTERNAL_CALL_GetRectOffsetPtr(GUIStyle self, int idx, IntPtr& value)
private void AssignRectOffset(int idx, IntPtr srcRectOffset)
public ImagePosition get_imagePosition()
public void set_imagePosition(ImagePosition value)
public TextAnchor get_alignment()
public void set_alignment(TextAnchor value)
public bool get_wordWrap()
public void set_wordWrap(bool value)
public TextClipping get_clipping()
public void set_clipping(TextClipping value)
public Vector2 get_contentOffset()
public void set_contentOffset(Vector2 value)
private void INTERNAL_get_contentOffset(Vector2& value)
private void INTERNAL_set_contentOffset(Vector2& value)
internal Vector2 get_Internal_clipOffset()
internal void set_Internal_clipOffset(Vector2 value)
private void INTERNAL_get_Internal_clipOffset(Vector2& value)
private void INTERNAL_set_Internal_clipOffset(Vector2& value)
public float get_fixedWidth()
public void set_fixedWidth(float value)
public float get_fixedHeight()
public void set_fixedHeight(float value)
public bool get_stretchWidth()
public void set_stretchWidth(bool value)
public bool get_stretchHeight()
public void set_stretchHeight(bool value)
private float Internal_GetLineHeight(IntPtr target)
private void SetFontInternal(Font value)
private Font GetFontInternalDuringLoadingThread()
private Font GetFontInternal()
public int get_fontSize()
public void set_fontSize(int value)
public FontStyle get_fontStyle()
public void set_fontStyle(FontStyle value)
public bool get_richText()
public void set_richText(bool value)
private void Internal_Draw(GUIContent content, Internal_DrawArguments& arguments)
private void Internal_Draw2(IntPtr style, Rect position, GUIContent content, int controlID, bool on)
private void INTERNAL_CALL_Internal_Draw2(IntPtr style, Rect& position, GUIContent content, int controlID, bool on)
internal void SetMouseTooltip(string tooltip, Rect screenRect)
private void INTERNAL_CALL_SetMouseTooltip(string tooltip, Rect& screenRect)
private void Internal_DrawPrefixLabel(IntPtr style, Rect position, GUIContent content, int controlID, bool on)
private void INTERNAL_CALL_Internal_DrawPrefixLabel(IntPtr style, Rect& position, GUIContent content, int controlID, bool on)
private float Internal_GetCursorFlashOffset()
private void Internal_DrawCursor(IntPtr target, Rect position, GUIContent content, int pos, Color cursorColor)
private void INTERNAL_CALL_Internal_DrawCursor(IntPtr target, Rect& position, GUIContent content, int pos, Color& cursorColor)
private void Internal_DrawWithTextSelection(GUIContent content, Internal_DrawWithTextSelectionArguments& arguments)
internal void SetDefaultFont(Font font)
internal void Internal_GetCursorPixelPosition(IntPtr target, Rect position, GUIContent content, int cursorStringIndex, Vector2& ret)
private void INTERNAL_CALL_Internal_GetCursorPixelPosition(IntPtr target, Rect& position, GUIContent content, int cursorStringIndex, Vector2& ret)
internal int Internal_GetCursorStringIndex(IntPtr target, Rect position, GUIContent content, Vector2 cursorPixelPosition)
private int INTERNAL_CALL_Internal_GetCursorStringIndex(IntPtr target, Rect& position, GUIContent content, Vector2& cursorPixelPosition)
internal int Internal_GetNumCharactersThatFitWithinWidth(IntPtr target, string text, float width)
internal void Internal_CalcSize(IntPtr target, GUIContent content, Vector2& ret)
internal void Internal_CalcSizeWithConstraints(IntPtr target, GUIContent content, Vector2 maxSize, Vector2& ret)
private void INTERNAL_CALL_Internal_CalcSizeWithConstraints(IntPtr target, GUIContent content, Vector2& maxSize, Vector2& ret)
private float Internal_CalcHeight(IntPtr target, GUIContent content, float width)
private void Internal_CalcMinMaxWidth(IntPtr target, GUIContent content, Single& minWidth, Single& maxWidth)
protected void Finalize()
internal void CleanupRoots()
internal void InternalOnAfterDeserialize()
public GUIStyleState get_normal()
public void set_normal(GUIStyleState value)
public GUIStyleState get_hover()
public void set_hover(GUIStyleState value)
public GUIStyleState get_active()
public void set_active(GUIStyleState value)
public GUIStyleState get_onNormal()
public void set_onNormal(GUIStyleState value)
public GUIStyleState get_onHover()
public void set_onHover(GUIStyleState value)
public GUIStyleState get_onActive()
public void set_onActive(GUIStyleState value)
public GUIStyleState get_focused()
public void set_focused(GUIStyleState value)
public GUIStyleState get_onFocused()
public void set_onFocused(GUIStyleState value)
public RectOffset get_border()
public void set_border(RectOffset value)
public RectOffset get_margin()
public void set_margin(RectOffset value)
public RectOffset get_padding()
public void set_padding(RectOffset value)
public RectOffset get_overflow()
public void set_overflow(RectOffset value)
public Vector2 get_clipOffset()
public void set_clipOffset(Vector2 value)
public Font get_font()
public void set_font(Font value)
public float get_lineHeight()
private void Internal_Draw(IntPtr target, Rect position, GUIContent content, bool isHover, bool isActive, bool on, bool hasKeyboardFocus)
public void Draw(Rect position, bool isHover, bool isActive, bool on, bool hasKeyboardFocus)
public void Draw(Rect position, string text, bool isHover, bool isActive, bool on, bool hasKeyboardFocus)
public void Draw(Rect position, Texture image, bool isHover, bool isActive, bool on, bool hasKeyboardFocus)
public void Draw(Rect position, GUIContent content, bool isHover, bool isActive, bool on, bool hasKeyboardFocus)
public void Draw(Rect position, GUIContent content, int controlID)
public void Draw(Rect position, GUIContent content, int controlID, bool on)
public void DrawCursor(Rect position, GUIContent content, int controlID, int Character)
internal void DrawWithTextSelection(Rect position, GUIContent content, bool isActive, bool hasKeyboardFocus, int firstSelectedCharacter, int lastSelectedCharacter, bool drawSelectionAsComposition)
internal void DrawWithTextSelection(Rect position, GUIContent content, int controlID, int firstSelectedCharacter, int lastSelectedCharacter, bool drawSelectionAsComposition)
public void DrawWithTextSelection(Rect position, GUIContent content, int controlID, int firstSelectedCharacter, int lastSelectedCharacter)
public GUIStyle op_Implicit(string str)
public GUIStyle get_none()
public Vector2 GetCursorPixelPosition(Rect position, GUIContent content, int cursorStringIndex)
public int GetCursorStringIndex(Rect position, GUIContent content, Vector2 cursorPixelPosition)
internal int GetNumCharactersThatFitWithinWidth(string text, float width)
public Vector2 CalcSize(GUIContent content)
internal Vector2 CalcSizeWithConstraints(GUIContent content, Vector2 constraints)
public Vector2 CalcScreenSize(Vector2 contentSize)
public float CalcHeight(GUIContent content, float width)
public bool get_isHeightDependantOnWidth()
public void CalcMinMaxWidth(GUIContent content, Single& minWidth, Single& maxWidth)
public string ToString()
}
public UnityEngine.GUIStyleState : object {
internal IntPtr m_Ptr
private GUIStyle m_SourceStyle
private Texture2D m_Background
public Color textColor
public Texture2D background
private void .ctor(GUIStyle sourceStyle, IntPtr source)
private void Init()
private void Cleanup()
private void SetBackgroundInternal(Texture2D value)
private Texture2D GetBackgroundInternalFromDeserialization()
private Texture2D GetBackgroundInternal()
public Color get_textColor()
public void set_textColor(Color value)
private void INTERNAL_get_textColor(Color& value)
private void INTERNAL_set_textColor(Color& value)
internal GUIStyleState ProduceGUIStyleStateFromDeserialization(GUIStyle sourceStyle, IntPtr source)
internal GUIStyleState GetGUIStyleState(GUIStyle sourceStyle, IntPtr source)
protected void Finalize()
public Texture2D get_background()
public void set_background(Texture2D value)
}
public UnityEngine.GUITargetAttribute : Attribute {
internal int displayMask
public void .ctor(int displayIndex)
public void .ctor(int displayIndex, int displayIndex1)
public void .ctor(int displayIndex, int displayIndex1, Int32[] displayIndexList)
private int GetGUITargetAttrValue(Type klass, string methodName)
}
public UnityEngine.GUIUtility : object {
internal int s_SkinMode
internal int s_OriginalID
internal Action takeCapture
internal Action releaseCapture
internal Func`3<int, IntPtr, bool> processEvent
internal Action cleanupRoots
internal Func`2<Exception, bool> endContainerGUIFromException
private bool <guiIsExiting>k__BackingField
internal Vector2 s_EditorScreenPointOffset
public string systemCopyBuffer
internal bool mouseUsed
public bool hasModalWindow
internal bool textFieldInput
internal bool manualTex2SRGBEnabled
internal float pixelsPerPoint
internal bool guiIsExiting
public int hotControl
public int keyboardControl
private float Internal_GetPixelsPerPoint()
public int GetControlID(int hint, FocusType focus)
private int Internal_GetNextControlID2(int hint, FocusType focusType, Rect rect)
private int INTERNAL_CALL_Internal_GetNextControlID2(int hint, FocusType focusType, Rect& rect)
internal int GetPermanentControlID()
private int Internal_GetHotControl()
private void Internal_SetHotControl(int value)
internal void UpdateUndoName()
internal bool GetChanged()
internal void SetChanged(bool changed)
private int Internal_GetKeyboardControl()
private void Internal_SetKeyboardControl(int value)
internal void SetDidGUIWindowsEatLastEvent(bool value)
public string get_systemCopyBuffer()
public void set_systemCopyBuffer(string value)
private GUISkin Internal_GetDefaultSkin(int skinMode)
private Object Internal_GetBuiltinSkin(int skin)
private void Internal_ExitGUI()
internal int Internal_GetGUIDepth()
internal bool get_mouseUsed()
internal void set_mouseUsed(bool value)
public bool get_hasModalWindow()
internal bool get_textFieldInput()
internal void set_textFieldInput(bool value)
internal bool get_manualTex2SRGBEnabled()
internal void set_manualTex2SRGBEnabled(bool value)
internal int CheckForTabEvent(Event evt)
internal void SetKeyboardControlToFirstControlId()
internal void SetKeyboardControlToLastControlId()
internal bool HasFocusableControls()
internal Rect Internal_AlignRectToDevice(Rect rect, Matrix4x4 transform)
private void INTERNAL_CALL_Internal_AlignRectToDevice(Rect& rect, Matrix4x4& transform, Rect& value)
internal Vector3 Internal_MultiplyPoint(Vector3 point, Matrix4x4 transform)
private void INTERNAL_CALL_Internal_MultiplyPoint(Vector3& point, Matrix4x4& transform, Vector3& value)
internal float Internal_Roundf(float f)
internal void BeginContainerFromOwner(ScriptableObject owner)
internal void BeginContainer(ObjectGUIState objectGUIState)
internal void Internal_EndContainer()
internal float get_pixelsPerPoint()
public int GetControlID(FocusType focus)
public int GetControlID(GUIContent contents, FocusType focus)
public int GetControlID(FocusType focus, Rect position)
public int GetControlID(int hint, FocusType focus, Rect position)
public int GetControlID(GUIContent contents, FocusType focus, Rect position)
public object GetStateObject(Type t, int controlID)
public object QueryStateObject(Type t, int controlID)
internal bool get_guiIsExiting()
internal void set_guiIsExiting(bool value)
public int get_hotControl()
public void set_hotControl(int value)
internal void TakeCapture()
internal void RemoveCapture()
public int get_keyboardControl()
public void set_keyboardControl(int value)
public void ExitGUI()
internal GUISkin GetDefaultSkin(int skinMode)
internal GUISkin GetDefaultSkin()
internal GUISkin GetBuiltinSkin(int skin)
internal bool ProcessEvent(int instanceID, IntPtr nativeEventPtr)
internal void EndContainer()
internal void CleanupRoots()
internal void BeginGUI(int skinMode, int instanceID, int useGUILayout)
internal void EndGUI(int layoutType)
internal bool EndGUIFromException(Exception exception)
internal bool EndContainerGUIFromException(Exception exception)
internal void ResetGlobalState()
internal bool IsExitGUIException(Exception exception)
internal bool ShouldRethrowException(Exception exception)
internal void CheckOnGUI()
public Vector2 GUIToScreenPoint(Vector2 guiPoint)
internal Rect GUIToScreenRect(Rect guiRect)
public Vector2 ScreenToGUIPoint(Vector2 screenPoint)
public Rect ScreenToGUIRect(Rect screenRect)
public void RotateAroundPivot(float angle, Vector2 pivotPoint)
public void ScaleAroundPivot(Vector2 scale, Vector2 pivotPoint)
}
internal UnityEngine.GUIWordWrapSizer : GUILayoutEntry {
private GUIContent m_Content
private float m_ForcedMinHeight
private float m_ForcedMaxHeight
public void .ctor(GUIStyle style, GUIContent content, GUILayoutOption[] options)
public void CalcWidth()
public void CalcHeight()
}
public UnityEngine.ImagePosition : Enum {
public int value__
public ImagePosition ImageLeft
public ImagePosition ImageAbove
public ImagePosition ImageOnly
public ImagePosition TextOnly
}
internal UnityEngine.Internal_DrawArguments : ValueType {
public IntPtr target
public Rect position
public int isHover
public int isActive
public int on
public int hasKeyboardFocus
}
internal UnityEngine.Internal_DrawWithTextSelectionArguments : ValueType {
public IntPtr target
public Rect position
public int firstPos
public int lastPos
public Color cursorColor
public Color selectionColor
public int isHover
public int isActive
public int on
public int hasKeyboardFocus
public int drawSelectionAsComposition
}
internal UnityEngine.IStylePainter {
public Rect currentWorldClip
public Vector2 mousePosition
public Matrix4x4 currentTransform
public Event repaintEvent
public float opacity
public void DrawRect(RectStylePainterParameters painterParams)
public void DrawTexture(TextureStylePainterParameters painterParams)
public void DrawText(TextStylePainterParameters painterParams)
public Vector2 GetCursorPosition(CursorPositionStylePainterParameters painterParams)
public Rect get_currentWorldClip()
public void set_currentWorldClip(Rect value)
public Vector2 get_mousePosition()
public void set_mousePosition(Vector2 value)
public Matrix4x4 get_currentTransform()
public void set_currentTransform(Matrix4x4 value)
public Event get_repaintEvent()
public void set_repaintEvent(Event value)
public float get_opacity()
public void set_opacity(float value)
public float ComputeTextWidth(TextStylePainterParameters painterParams)
public float ComputeTextHeight(TextStylePainterParameters painterParams)
}
internal UnityEngine.ObjectGUIState : object {
internal IntPtr m_Ptr
public void Dispose()
protected void Finalize()
private void Destroy()
private IntPtr Internal_Create()
private void Internal_Destroy(IntPtr ptr)
}
internal UnityEngine.PlatformSelection : Enum {
public int value__
public PlatformSelection Native
public PlatformSelection Mac
public PlatformSelection Windows
}
internal UnityEngine.RectStylePainterParameters : ValueType {
public Rect rect
public Color color
public BorderParameters border
}
public UnityEngine.ScaleMode : Enum {
public int value__
public ScaleMode StretchToFill
public ScaleMode ScaleAndCrop
public ScaleMode ScaleToFit
}
internal UnityEngine.ScrollViewState : object {
public Rect position
public Rect visibleRect
public Rect viewRect
public Vector2 scrollPosition
public bool apply
public void ScrollTo(Rect pos)
public bool ScrollTowards(Rect pos, float maxDelta)
private Vector2 ScrollNeeded(Rect pos)
}
internal UnityEngine.SliderHandler : ValueType {
private Rect position
private float currentValue
private float size
private float start
private float end
private GUIStyle slider
private GUIStyle thumb
private bool horiz
private int id
public void .ctor(Rect position, float currentValue, float size, float start, float end, GUIStyle slider, GUIStyle thumb, bool horiz, int id)
public float Handle()
private float OnMouseDown()
private float OnMouseDrag()
private float OnMouseUp()
private float OnRepaint()
private EventType CurrentEventType()
private int CurrentScrollTroughSide()
private bool IsEmptySlider()
private bool SupportsPageMovements()
private float PageMovementValue()
private float PageUpMovementBound()
private Event CurrentEvent()
private float ValueForCurrentMousePosition()
private float Clamp(float value)
private Rect ThumbSelectionRect()
private void StartDraggingWithValue(float dragStartValue)
private SliderState SliderState()
private Rect ThumbRect()
private Rect VerticalThumbRect()
private Rect HorizontalThumbRect()
private float ClampedCurrentValue()
private float MousePosition()
private float ValuesPerPixel()
private float ThumbSize()
private float MaxValue()
private float MinValue()
}
internal UnityEngine.SliderState : object {
public float dragStartPos
public float dragStartValue
public bool isDragging
}
internal UnityEngine.StylePainter : object {
internal IntPtr m_Ptr
private Matrix4x4 <currentTransform>k__BackingField
private Vector2 <mousePosition>k__BackingField
private Rect <currentWorldClip>k__BackingField
private Event <repaintEvent>k__BackingField
private Color m_OpacityColor
public Matrix4x4 currentTransform
public Vector2 mousePosition
public Rect currentWorldClip
public Event repaintEvent
public float opacity
public void .ctor(Vector2 pos)
private void Init()
internal void DrawRect_Internal(Rect screenRect, Color color, Vector4 borderWidths, Vector4 borderRadiuses)
private void INTERNAL_CALL_DrawRect_Internal(StylePainter self, Rect& screenRect, Color& color, Vector4& borderWidths, Vector4& borderRadiuses)
internal void DrawTexture_Internal(Rect screenRect, Texture texture, Rect sourceRect, Color color, Vector4 borderWidths, Vector4 borderRadiuses, int leftBorder, int topBorder, int rightBorder, int bottomBorder, bool usePremultiplyAlpha)
private void INTERNAL_CALL_DrawTexture_Internal(StylePainter self, Rect& screenRect, Texture texture, Rect& sourceRect, Color& color, Vector4& borderWidths, Vector4& borderRadiuses, int leftBorder, int topBorder, int rightBorder, int bottomBorder, bool usePremultiplyAlpha)
internal void DrawText_Internal(Rect screenRect, string text, Font font, int fontSize, FontStyle fontStyle, Color fontColor, TextAnchor anchor, bool wordWrap, float wordWrapWidth, bool richText, TextClipping textClipping)
private void INTERNAL_CALL_DrawText_Internal(StylePainter self, Rect& screenRect, string text, Font font, int fontSize, FontStyle fontStyle, Color& fontColor, TextAnchor anchor, bool wordWrap, float wordWrapWidth, bool richText, TextClipping textClipping)
public float ComputeTextWidth_Internal(string text, float width, bool wordWrap, Font font, int fontSize, FontStyle fontStyle, TextAnchor anchor, bool richText)
public float ComputeTextHeight_Internal(string text, float width, bool wordWrap, Font font, int fontSize, FontStyle fontStyle, TextAnchor anchor, bool richText)
public Vector2 GetCursorPosition_Internal(string text, Font font, int fontSize, FontStyle fontStyle, TextAnchor anchor, float wordWrapWidth, bool richText, Rect screenRect, int cursorPosition)
private void INTERNAL_CALL_GetCursorPosition_Internal(StylePainter self, string text, Font font, int fontSize, FontStyle fontStyle, TextAnchor anchor, float wordWrapWidth, bool richText, Rect& screenRect, int cursorPosition, Vector2& value)
public void DrawRect(RectStylePainterParameters painterParams)
public void DrawTexture(TextureStylePainterParameters painterParams)
public void DrawText(TextStylePainterParameters painterParams)
public Vector2 GetCursorPosition(CursorPositionStylePainterParameters painterParams)
public float ComputeTextWidth(TextStylePainterParameters painterParams)
public float ComputeTextHeight(TextStylePainterParameters painterParams)
public Matrix4x4 get_currentTransform()
public void set_currentTransform(Matrix4x4 value)
public Vector2 get_mousePosition()
public void set_mousePosition(Vector2 value)
public Rect get_currentWorldClip()
public void set_currentWorldClip(Rect value)
public Event get_repaintEvent()
public void set_repaintEvent(Event value)
public float get_opacity()
public void set_opacity(float value)
}
public UnityEngine.TextClipping : Enum {
public int value__
public TextClipping Overflow
public TextClipping Clip
}
public UnityEngine.TextEditor : object {
public TouchScreenKeyboard keyboardOnScreen
public int controlID
public GUIStyle style
public bool multiline
public bool hasHorizontalCursorPos
public bool isPasswordField
internal bool m_HasFocus
public Vector2 scrollOffset
private GUIContent m_Content
private Rect m_Position
private int m_CursorIndex
private int m_SelectIndex
private bool m_RevealCursor
public Vector2 graphicalCursorPos
public Vector2 graphicalSelectCursorPos
private bool m_MouseDragSelectsWholeWords
private int m_DblClickInitPos
private DblClickSnapping m_DblClickSnap
private bool m_bJustSelected
private int m_iAltCursorPos
private string oldText
private int oldPos
private int oldSelectPos
private Dictionary`2<Event, TextEditOp> s_Keyactions
public GUIContent content
public string text
public Rect position
internal Rect localPosition
public int cursorIndex
public int selectIndex
public DblClickSnapping doubleClickSnapping
public int altCursorPosition
public bool hasSelection
public string SelectedText
public GUIContent get_content()
public void set_content(GUIContent value)
public string get_text()
public void set_text(string value)
public Rect get_position()
public void set_position(Rect value)
internal Rect get_localPosition()
public int get_cursorIndex()
public void set_cursorIndex(int value)
public int get_selectIndex()
public void set_selectIndex(int value)
private void ClearCursorPos()
public DblClickSnapping get_doubleClickSnapping()
public void set_doubleClickSnapping(DblClickSnapping value)
public int get_altCursorPosition()
public void set_altCursorPosition(int value)
public void OnFocus()
public void OnLostFocus()
private void GrabGraphicalCursorPos()
public bool HandleKeyEvent(Event e)
public bool DeleteLineBack()
public bool DeleteWordBack()
public bool DeleteWordForward()
public bool Delete()
public bool CanPaste()
public bool Backspace()
public void SelectAll()
public void SelectNone()
public bool get_hasSelection()
public string get_SelectedText()
public bool DeleteSelection()
public void ReplaceSelection(string replace)
public void Insert(char c)
public void MoveSelectionToAltCursor()
public void MoveRight()
public void MoveLeft()
public void MoveUp()
public void MoveDown()
public void MoveLineStart()
public void MoveLineEnd()
public void MoveGraphicalLineStart()
public void MoveGraphicalLineEnd()
public void MoveTextStart()
public void MoveTextEnd()
private int IndexOfEndOfLine(int startIndex)
public void MoveParagraphForward()
public void MoveParagraphBackward()
public void MoveCursorToPosition(Vector2 cursorPosition)
protected internal void MoveCursorToPosition_Internal(Vector2 cursorPosition, bool shift)
public void MoveAltCursorToPosition(Vector2 cursorPosition)
public bool IsOverSelection(Vector2 cursorPosition)
public void SelectToPosition(Vector2 cursorPosition)
public void SelectLeft()
public void SelectRight()
public void SelectUp()
public void SelectDown()
public void SelectTextEnd()
public void SelectTextStart()
public void MouseDragSelectsWholeWords(bool on)
public void DblClickSnap(DblClickSnapping snapping)
private int GetGraphicalLineStart(int p)
private int GetGraphicalLineEnd(int p)
private int FindNextSeperator(int startPos)
private int FindPrevSeperator(int startPos)
public void MoveWordRight()
public void MoveToStartOfNextWord()
public void MoveToEndOfPreviousWord()
public void SelectToStartOfNextWord()
public void SelectToEndOfPreviousWord()
private CharacterType ClassifyChar(int index)
public int FindStartOfNextWord(int p)
private int FindEndOfPreviousWord(int p)
public void MoveWordLeft()
public void SelectWordRight()
public void SelectWordLeft()
public void ExpandSelectGraphicalLineStart()
public void ExpandSelectGraphicalLineEnd()
public void SelectGraphicalLineStart()
public void SelectGraphicalLineEnd()
public void SelectParagraphForward()
public void SelectParagraphBackward()
public void SelectCurrentWord()
private int FindEndOfClassification(int p, Direction dir)
public void SelectCurrentParagraph()
public void UpdateScrollOffsetIfNeeded(Event evt)
internal void UpdateScrollOffset()
public void DrawCursor(string newText)
private bool PerformOperation(TextEditOp operation)
public void SaveBackup()
public void Undo()
public bool Cut()
public void Copy()
private string ReplaceNewlinesWithSpaces(string value)
public bool Paste()
private void MapKey(string key, TextEditOp action)
private void InitKeyActions()
public void DetectFocusChange()
internal void OnDetectFocusChange()
internal void OnCursorIndexChange()
internal void OnSelectIndexChange()
private void ClampTextIndex(Int32& index)
private void EnsureValidCodePointIndex(Int32& index)
private bool IsValidCodePointIndex(int index)
private int PreviousCodePointIndex(int index)
private int NextCodePointIndex(int index)
}
internal UnityEngine.TextStylePainterParameters : ValueType {
public Rect rect
public string text
public Font font
public int fontSize
public FontStyle fontStyle
public Color fontColor
public TextAnchor anchor
public bool wordWrap
public float wordWrapWidth
public bool richText
public TextClipping clipping
}
internal UnityEngine.TextureStylePainterParameters : ValueType {
public Rect rect
public Rect uv
public Color color
public Texture texture
public ScaleMode scaleMode
public BorderParameters border
public int sliceLeft
public int sliceTop
public int sliceRight
public int sliceBottom
public bool usePremultiplyAlpha
}
