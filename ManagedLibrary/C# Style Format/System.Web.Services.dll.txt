internal Consts : object {
public string MonoVersion
public string MonoCompany
public string MonoProduct
public string MonoCopyright
public int MonoCorlibVersion
public string FxVersion
public string FxFileVersion
public string EnvironmentVersion
public string VsVersion
public string VsFileVersion
private string PublicKeyToken
public string AssemblyI18N
public string AssemblyMicrosoft_JScript
public string AssemblyMicrosoft_VisualStudio
public string AssemblyMicrosoft_VisualStudio_Web
public string AssemblyMicrosoft_VSDesigner
public string AssemblyMono_Http
public string AssemblyMono_Posix
public string AssemblyMono_Security
public string AssemblyMono_Messaging_RabbitMQ
public string AssemblyCorlib
public string AssemblySystem
public string AssemblySystem_Data
public string AssemblySystem_Design
public string AssemblySystem_DirectoryServices
public string AssemblySystem_Drawing
public string AssemblySystem_Drawing_Design
public string AssemblySystem_Messaging
public string AssemblySystem_Security
public string AssemblySystem_ServiceProcess
public string AssemblySystem_Web
public string AssemblySystem_Windows_Forms
public string AssemblySystem_2_0
public string AssemblySystemCore_3_5
public string AssemblySystem_Core
public string WindowsBase_3_0
public string AssemblyWindowsBase
public string AssemblyPresentationCore_3_5
public string AssemblyPresentationCore_4_0
public string AssemblyPresentationFramework_3_5
public string AssemblySystemServiceModel_3_0
}
internal System.ComponentModel.CompModSwitches : object {
private BooleanSwitch dynamicDiscoVirtualSearch
private TraceSwitch dynamicDiscoSearcher
private BooleanSwitch disableRemoteDebugging
private TraceSwitch remote
public BooleanSwitch DisableRemoteDebugging
public TraceSwitch DynamicDiscoverySearcher
public BooleanSwitch DynamicDiscoveryVirtualSearch
public TraceSwitch Remote
public BooleanSwitch get_DisableRemoteDebugging()
public TraceSwitch get_DynamicDiscoverySearcher()
public BooleanSwitch get_DynamicDiscoveryVirtualSearch()
public TraceSwitch get_Remote()
}
internal System.Configuration.PrivilegedConfigurationManager : object {
internal ConnectionStringSettingsCollection ConnectionStrings
internal ConnectionStringSettingsCollection get_ConnectionStrings()
internal object GetSection(string sectionName)
}
internal System.InvariantComparer : object {
private CompareInfo m_compareInfo
internal InvariantComparer Default
public int Compare(object a, object b)
}
public System.Web.Services.Configuration.DiagnosticsElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty suppressReturningExceptions
public bool SuppressReturningExceptions
protected ConfigurationPropertyCollection Properties
public bool get_SuppressReturningExceptions()
public void set_SuppressReturningExceptions(bool value)
protected ConfigurationPropertyCollection get_Properties()
}
public System.Web.Services.Configuration.PriorityGroup : Enum {
public int value__
public PriorityGroup High
public PriorityGroup Low
}
public System.Web.Services.Configuration.ProtocolElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty name
public WebServiceProtocols Name
protected ConfigurationPropertyCollection Properties
public void .ctor(WebServiceProtocols protocol)
public WebServiceProtocols get_Name()
public void set_Name(WebServiceProtocols value)
protected ConfigurationPropertyCollection get_Properties()
private bool IsValidProtocolsValue(WebServiceProtocols value)
}
public System.Web.Services.Configuration.ProtocolElementCollection : ConfigurationElementCollection {
public ProtocolElement Item
public ProtocolElement Item
public void Add(ProtocolElement element)
public void Clear()
public bool ContainsKey(object key)
protected ConfigurationElement CreateNewElement()
public void CopyTo(ProtocolElement[] array, int index)
protected object GetElementKey(ConfigurationElement element)
public int IndexOf(ProtocolElement element)
public void Remove(ProtocolElement element)
public void RemoveAt(object key)
public void RemoveAt(int index)
internal void SetDefaults()
public ProtocolElement get_Item(object key)
public void set_Item(object key, ProtocolElement value)
public ProtocolElement get_Item(int index)
public void set_Item(int index, ProtocolElement value)
}
public System.Web.Services.Configuration.SoapEnvelopeProcessingElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty readTimeout
private ConfigurationProperty strict
public int ReadTimeout
public bool IsStrict
protected ConfigurationPropertyCollection Properties
public void .ctor(int readTimeout)
public void .ctor(int readTimeout, bool strict)
public int get_ReadTimeout()
public void set_ReadTimeout(int value)
public bool get_IsStrict()
public void set_IsStrict(bool value)
protected ConfigurationPropertyCollection get_Properties()
}
public System.Web.Services.Configuration.SoapExtensionTypeElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty group
private ConfigurationProperty priority
private ConfigurationProperty type
public PriorityGroup Group
public int Priority
public Type Type
protected ConfigurationPropertyCollection Properties
public void .ctor(string type, int priority, PriorityGroup group)
public void .ctor(Type type, int priority, PriorityGroup group)
public PriorityGroup get_Group()
public void set_Group(PriorityGroup value)
public int get_Priority()
public void set_Priority(int value)
public Type get_Type()
public void set_Type(Type value)
protected ConfigurationPropertyCollection get_Properties()
}
public System.Web.Services.Configuration.SoapExtensionTypeElementCollection : ConfigurationElementCollection {
public SoapExtensionTypeElement Item
public SoapExtensionTypeElement Item
public void Add(SoapExtensionTypeElement element)
public void Clear()
public bool ContainsKey(object key)
protected ConfigurationElement CreateNewElement()
public void CopyTo(SoapExtensionTypeElement[] array, int index)
protected object GetElementKey(ConfigurationElement element)
public int IndexOf(SoapExtensionTypeElement element)
public void Remove(SoapExtensionTypeElement element)
public void RemoveAt(object key)
public void RemoveAt(int index)
public SoapExtensionTypeElement get_Item(object key)
public void set_Item(object key, SoapExtensionTypeElement value)
public SoapExtensionTypeElement get_Item(int index)
public void set_Item(int index, SoapExtensionTypeElement value)
}
internal System.Web.Services.Configuration.TypeAndName : object {
public Type type
public string name
public void .ctor(string name)
public void .ctor(Type type)
public int GetHashCode()
public bool Equals(object comparand)
}
internal System.Web.Services.Configuration.TypeAndNameConverter : TypeConverter {
public bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
public object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
public object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
}
public System.Web.Services.Configuration.TypeElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty type
public Type Type
protected ConfigurationPropertyCollection Properties
public void .ctor(string type)
public void .ctor(Type type)
public Type get_Type()
public void set_Type(Type value)
protected ConfigurationPropertyCollection get_Properties()
}
public System.Web.Services.Configuration.TypeElementCollection : ConfigurationElementCollection {
public TypeElement Item
public TypeElement Item
public void Add(TypeElement element)
public void Clear()
public bool ContainsKey(object key)
protected ConfigurationElement CreateNewElement()
public void CopyTo(TypeElement[] array, int index)
protected object GetElementKey(ConfigurationElement element)
public int IndexOf(TypeElement element)
public void Remove(TypeElement element)
public void RemoveAt(object key)
public void RemoveAt(int index)
public TypeElement get_Item(object key)
public void set_Item(object key, TypeElement value)
public TypeElement get_Item(int index)
public void set_Item(int index, TypeElement value)
}
internal System.Web.Services.Configuration.TypeTypeConverter : TypeAndNameConverter {
public bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
public object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
public object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
}
public System.Web.Services.Configuration.WebServiceProtocols : Enum {
public int value__
public WebServiceProtocols Unknown
public WebServiceProtocols HttpSoap
public WebServiceProtocols HttpGet
public WebServiceProtocols HttpPost
public WebServiceProtocols Documentation
public WebServiceProtocols HttpPostLocalhost
public WebServiceProtocols HttpSoap12
public WebServiceProtocols AnyHttpSoap
}
public System.Web.Services.Configuration.WebServicesSection : ConfigurationSection {
private ConfigurationPropertyCollection properties
private object classSyncObject
private string SectionName
private ConfigurationProperty conformanceWarnings
private ConfigurationProperty protocols
private ConfigurationProperty serviceDescriptionFormatExtensionTypes
private ConfigurationProperty soapEnvelopeProcessing
private ConfigurationProperty soapExtensionImporterTypes
private ConfigurationProperty soapExtensionReflectorTypes
private ConfigurationProperty soapExtensionTypes
private ConfigurationProperty soapTransportImporterTypes
private ConfigurationProperty wsdlHelpGenerator
private ConfigurationProperty soapServerProtocolFactoryType
private ConfigurationProperty diagnostics
private Type[] defaultFormatTypes
private Type[] discoveryReferenceTypes
private XmlSerializer discoveryDocumentSerializer
private WebServiceProtocols enabledProtocols
private Type[] mimeImporterTypes
private Type[] mimeReflectorTypes
private Type[] parameterReaderTypes
private Type[] protocolImporterTypes
private Type[] protocolReflectorTypes
private Type[] returnWriterTypes
private ServerProtocolFactory[] serverProtocolFactories
private Type soapServerProtocolFactory
private object ClassSyncObject
public WsiProfilesElementCollection ConformanceWarnings
internal WsiProfiles EnabledConformanceWarnings
public WebServicesSection Current
internal XmlSerializer DiscoveryDocumentSerializer
internal Type[] DiscoveryReferenceTypes
public WebServiceProtocols EnabledProtocols
internal Type[] MimeImporterTypes
internal Type[] MimeReflectorTypes
internal Type[] ParameterReaderTypes
protected ConfigurationPropertyCollection Properties
internal Type[] ProtocolImporterTypes
internal Type[] ProtocolReflectorTypes
public ProtocolElementCollection Protocols
public SoapEnvelopeProcessingElement SoapEnvelopeProcessing
public DiagnosticsElement Diagnostics
internal Type[] ReturnWriterTypes
internal ServerProtocolFactory[] ServerProtocolFactories
internal bool ServiceDescriptionExtended
public TypeElementCollection ServiceDescriptionFormatExtensionTypes
public TypeElementCollection SoapExtensionImporterTypes
public TypeElementCollection SoapExtensionReflectorTypes
public SoapExtensionTypeElementCollection SoapExtensionTypes
public TypeElement SoapServerProtocolFactoryType
internal Type SoapServerProtocolFactory
public TypeElementCollection SoapTransportImporterTypes
internal Type[] SoapTransportImporters
public WsdlHelpGeneratorElement WsdlHelpGenerator
private object get_ClassSyncObject()
public WsiProfilesElementCollection get_ConformanceWarnings()
internal WsiProfiles get_EnabledConformanceWarnings()
public WebServicesSection get_Current()
private WebServicesSection GetConfigFromHttpContext()
internal XmlSerializer get_DiscoveryDocumentSerializer()
internal Type[] get_DiscoveryReferenceTypes()
public WebServiceProtocols get_EnabledProtocols()
internal Type[] GetAllFormatExtensionTypes()
private XmlFormatExtensionPointAttribute GetExtensionPointAttribute(Type type)
public WebServicesSection GetSection(Configuration config)
protected void InitializeDefault()
internal void LoadXmlFormatExtensions(Type[] extensionTypes, XmlAttributeOverrides overrides, XmlSerializerNamespaces namespaces)
internal Type[] get_MimeImporterTypes()
internal Type[] get_MimeReflectorTypes()
internal Type[] get_ParameterReaderTypes()
protected ConfigurationPropertyCollection get_Properties()
internal Type[] get_ProtocolImporterTypes()
internal void set_ProtocolImporterTypes(Type[] value)
internal Type[] get_ProtocolReflectorTypes()
internal void set_ProtocolReflectorTypes(Type[] value)
public ProtocolElementCollection get_Protocols()
public SoapEnvelopeProcessingElement get_SoapEnvelopeProcessing()
public void set_SoapEnvelopeProcessing(SoapEnvelopeProcessingElement value)
public DiagnosticsElement get_Diagnostics()
public void set_Diagnostics(DiagnosticsElement value)
protected void Reset(ConfigurationElement parentElement)
internal Type[] get_ReturnWriterTypes()
internal ServerProtocolFactory[] get_ServerProtocolFactories()
internal bool get_ServiceDescriptionExtended()
public TypeElementCollection get_ServiceDescriptionFormatExtensionTypes()
public TypeElementCollection get_SoapExtensionImporterTypes()
public TypeElementCollection get_SoapExtensionReflectorTypes()
public SoapExtensionTypeElementCollection get_SoapExtensionTypes()
public TypeElement get_SoapServerProtocolFactoryType()
internal Type get_SoapServerProtocolFactory()
public TypeElementCollection get_SoapTransportImporterTypes()
internal Type[] get_SoapTransportImporters()
private void TurnOnGetAndPost()
public WsdlHelpGeneratorElement get_WsdlHelpGenerator()
}
public System.Web.Services.Configuration.WsdlHelpGeneratorElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty href
private string virtualPath
private string actualPath
private bool needToValidateHref
internal string HelpGeneratorVirtualPath
internal string HelpGeneratorPath
public string Href
protected ConfigurationPropertyCollection Properties
private string GetConfigurationDirectory()
internal string get_HelpGeneratorVirtualPath()
internal string get_HelpGeneratorPath()
public string get_Href()
public void set_Href(string value)
protected ConfigurationPropertyCollection get_Properties()
protected void DeserializeElement(XmlReader reader, bool serializeCollectionKey)
protected void Reset(ConfigurationElement parentElement)
internal void SetDefaults()
private void CheckIOReadPermission(string path, string file)
}
public System.Web.Services.Configuration.WsiProfilesElement : ConfigurationElement {
private ConfigurationPropertyCollection properties
private ConfigurationProperty name
public WsiProfiles Name
protected ConfigurationPropertyCollection Properties
public void .ctor(WsiProfiles name)
public WsiProfiles get_Name()
public void set_Name(WsiProfiles value)
protected ConfigurationPropertyCollection get_Properties()
private bool IsValidWsiProfilesValue(WsiProfiles value)
}
public System.Web.Services.Configuration.WsiProfilesElementCollection : ConfigurationElementCollection {
public WsiProfilesElement Item
public WsiProfilesElement Item
public void Add(WsiProfilesElement element)
public void Clear()
public bool ContainsKey(object key)
protected ConfigurationElement CreateNewElement()
public void CopyTo(WsiProfilesElement[] array, int index)
protected object GetElementKey(ConfigurationElement element)
public int IndexOf(WsiProfilesElement element)
public void Remove(WsiProfilesElement element)
public void RemoveAt(object key)
public void RemoveAt(int index)
internal void SetDefaults()
public WsiProfilesElement get_Item(object key)
public void set_Item(object key, WsiProfilesElement value)
public WsiProfilesElement get_Item(int index)
public void set_Item(int index, WsiProfilesElement value)
}
public System.Web.Services.Configuration.XmlFormatExtensionAttribute : Attribute {
private Type[] types
private string name
private string ns
public Type[] ExtensionPoints
public string Namespace
public string ElementName
public void .ctor(string elementName, string ns, Type extensionPoint1)
public void .ctor(string elementName, string ns, Type extensionPoint1, Type extensionPoint2)
public void .ctor(string elementName, string ns, Type extensionPoint1, Type extensionPoint2, Type extensionPoint3)
public void .ctor(string elementName, string ns, Type extensionPoint1, Type extensionPoint2, Type extensionPoint3, Type extensionPoint4)
public void .ctor(string elementName, string ns, Type[] extensionPoints)
public Type[] get_ExtensionPoints()
public void set_ExtensionPoints(Type[] value)
public string get_Namespace()
public void set_Namespace(string value)
public string get_ElementName()
public void set_ElementName(string value)
}
public System.Web.Services.Configuration.XmlFormatExtensionPointAttribute : Attribute {
private string name
private bool allowElements
public string MemberName
public bool AllowElements
public void .ctor(string memberName)
public string get_MemberName()
public void set_MemberName(string value)
public bool get_AllowElements()
public void set_AllowElements(bool value)
}
public System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute : Attribute {
private string prefix
private string ns
public string Prefix
public string Namespace
public void .ctor(string prefix, string ns)
public string get_Prefix()
public void set_Prefix(string value)
public string get_Namespace()
public void set_Namespace(string value)
}
public System.Web.Services.Description.BasicProfileViolation : object {
private WsiProfiles claims
private string normativeStatement
private string details
private string recommendation
private StringCollection elements
public WsiProfiles Claims
public string Details
public StringCollection Elements
public string NormativeStatement
public string Recommendation
internal void .ctor(string normativeStatement)
internal void .ctor(string normativeStatement, string element)
public WsiProfiles get_Claims()
public string get_Details()
public StringCollection get_Elements()
public string get_NormativeStatement()
public string get_Recommendation()
public string ToString()
}
public System.Web.Services.Description.BasicProfileViolationCollection : CollectionBase {
private Hashtable violations
public BasicProfileViolation Item
public BasicProfileViolation get_Item(int index)
public void set_Item(int index, BasicProfileViolation value)
internal int Add(BasicProfileViolation violation)
internal int Add(string normativeStatement)
internal int Add(string normativeStatement, string element)
private IEnumerator`1<BasicProfileViolation> System.Collections.Generic.IEnumerable<System.Web.Services.Description.BasicProfileViolation>.GetEnumerator()
public void Insert(int index, BasicProfileViolation violation)
public int IndexOf(BasicProfileViolation violation)
public bool Contains(BasicProfileViolation violation)
public void Remove(BasicProfileViolation violation)
public void CopyTo(BasicProfileViolation[] array, int index)
public string ToString()
}
public System.Web.Services.Description.BasicProfileViolationEnumerator : object {
private BasicProfileViolationCollection list
private int idx
private int end
public BasicProfileViolation Current
private object System.Collections.IEnumerator.Current
public void .ctor(BasicProfileViolationCollection list)
public void Dispose()
public bool MoveNext()
public BasicProfileViolation get_Current()
private object System.Collections.IEnumerator.get_Current()
private void System.Collections.IEnumerator.Reset()
}
public System.Web.Services.Description.Binding : NamedItem {
private ServiceDescriptionFormatExtensionCollection extensions
private OperationBindingCollection operations
private XmlQualifiedName type
private ServiceDescription parent
public ServiceDescription ServiceDescription
public ServiceDescriptionFormatExtensionCollection Extensions
public OperationBindingCollection Operations
public XmlQualifiedName Type
internal void SetParent(ServiceDescription parent)
public ServiceDescription get_ServiceDescription()
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public OperationBindingCollection get_Operations()
public XmlQualifiedName get_Type()
public void set_Type(XmlQualifiedName value)
}
public System.Web.Services.Description.BindingCollection : ServiceDescriptionBaseCollection {
public Binding Item
public Binding Item
internal void .ctor(ServiceDescription serviceDescription)
public Binding get_Item(int index)
public void set_Item(int index, Binding value)
public int Add(Binding binding)
public void Insert(int index, Binding binding)
public int IndexOf(Binding binding)
public bool Contains(Binding binding)
public void Remove(Binding binding)
public void CopyTo(Binding[] array, int index)
public Binding get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
internal System.Web.Services.Description.CodeFlags : Enum {
public int value__
public CodeFlags IsPublic
public CodeFlags IsAbstract
public CodeFlags IsStruct
public CodeFlags IsNew
public CodeFlags IsByRef
public CodeFlags IsOut
public CodeFlags IsInterface
}
internal System.Web.Services.Description.DelegateInfo : object {
internal string handlerType
internal string handlerArgs
internal void .ctor(string handlerType, string handlerArgs)
}
public System.Web.Services.Description.DocumentableItem : object {
private XmlDocument parent
private string documentation
private XmlElement documentationElement
private XmlAttribute[] anyAttribute
private XmlSerializerNamespaces namespaces
public string Documentation
public XmlElement DocumentationElement
public XmlAttribute[] ExtensibleAttributes
public XmlSerializerNamespaces Namespaces
public ServiceDescriptionFormatExtensionCollection Extensions
internal XmlDocument Parent
public string get_Documentation()
public void set_Documentation(string value)
public XmlElement get_DocumentationElement()
public void set_DocumentationElement(XmlElement value)
public XmlAttribute[] get_ExtensibleAttributes()
public void set_ExtensibleAttributes(XmlAttribute[] value)
public XmlSerializerNamespaces get_Namespaces()
public void set_Namespaces(XmlSerializerNamespaces value)
public ServiceDescriptionFormatExtensionCollection get_Extensions()
internal XmlDocument get_Parent()
internal XmlElement GetDocumentationElement()
}
public System.Web.Services.Description.FaultBinding : MessageBinding {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
public System.Web.Services.Description.FaultBindingCollection : ServiceDescriptionBaseCollection {
public FaultBinding Item
public FaultBinding Item
internal void .ctor(OperationBinding operationBinding)
public FaultBinding get_Item(int index)
public void set_Item(int index, FaultBinding value)
public int Add(FaultBinding bindingOperationFault)
public void Insert(int index, FaultBinding bindingOperationFault)
public int IndexOf(FaultBinding bindingOperationFault)
public bool Contains(FaultBinding bindingOperationFault)
public void Remove(FaultBinding bindingOperationFault)
public void CopyTo(FaultBinding[] array, int index)
public FaultBinding get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
internal System.Web.Services.Description.GlobalSoapHeader : object {
internal string fieldName
internal XmlTypeMapping mapping
internal bool isEncoded
}
public System.Web.Services.Description.HttpAddressBinding : ServiceDescriptionFormatExtension {
private string location
public string Location
public string get_Location()
public void set_Location(string value)
}
public System.Web.Services.Description.HttpBinding : ServiceDescriptionFormatExtension {
private string verb
public string Namespace
public string Verb
public string get_Verb()
public void set_Verb(string value)
}
internal System.Web.Services.Description.HttpGetProtocolImporter : HttpProtocolImporter {
public string ProtocolName
internal Type BaseClass
public string get_ProtocolName()
internal Type get_BaseClass()
protected bool IsBindingSupported()
}
internal System.Web.Services.Description.HttpGetProtocolReflector : HttpProtocolReflector {
public string ProtocolName
public string get_ProtocolName()
protected void BeginClass()
protected bool ReflectMethod()
}
internal System.Web.Services.Description.HttpMethodInfo : object {
internal MimeParameterCollection UrlParameters
internal MimeParameterCollection MimeParameters
internal MimeReturn MimeReturn
internal string Name
internal string Href
}
public System.Web.Services.Description.HttpOperationBinding : ServiceDescriptionFormatExtension {
private string location
public string Location
public string get_Location()
public void set_Location(string value)
}
internal System.Web.Services.Description.HttpPostProtocolImporter : HttpProtocolImporter {
public string ProtocolName
internal Type BaseClass
public string get_ProtocolName()
internal Type get_BaseClass()
protected bool IsBindingSupported()
}
internal System.Web.Services.Description.HttpPostProtocolReflector : HttpProtocolReflector {
public string ProtocolName
public string get_ProtocolName()
protected void BeginClass()
protected bool ReflectMethod()
}
internal System.Web.Services.Description.HttpProtocolImporter : ProtocolImporter {
private MimeImporter[] importers
private ArrayList[] importedParameters
private ArrayList[] importedReturns
private bool hasInputPayload
private ArrayList codeClasses
internal Type BaseClass
protected void .ctor(bool hasInputPayload)
private MimeParameterCollection ImportMimeParameters()
private MimeReturn ImportMimeReturn()
private MimeParameterCollection ImportUrlParameters()
internal MimeParameterCollection ImportStringParametersMessage()
private MimeParameter ImportUrlParameter(MessagePart part)
private bool IsRepeatingParameter(MessagePart part)
private void AppendMetadata(CodeAttributeDeclarationCollection from, CodeAttributeDeclarationCollection to)
private CodeMemberMethod GenerateMethod(HttpMethodInfo method)
private void CreateInvokeParams(CodeExpression[] invokeParams, HttpMethodInfo method, String[] parameterNames)
protected bool IsOperationFlowSupported(OperationFlow flow)
protected CodeMemberMethod GenerateMethod()
protected CodeTypeDeclaration BeginClass()
protected void EndNamespace()
internal Type get_BaseClass()
}
internal System.Web.Services.Description.HttpProtocolReflector : ProtocolReflector {
private MimeReflector[] reflectors
internal string MethodUrl
protected bool ReflectMimeParameters()
protected bool ReflectMimeReturn()
protected bool ReflectUrlParameters()
internal void ReflectStringParametersMessage()
internal string get_MethodUrl()
}
public System.Web.Services.Description.Import : DocumentableItem {
private string ns
private string location
private ServiceDescription parent
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescription ServiceDescription
public string Namespace
public string Location
internal void SetParent(ServiceDescription parent)
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public ServiceDescription get_ServiceDescription()
public string get_Namespace()
public void set_Namespace(string value)
public string get_Location()
public void set_Location(string value)
}
public System.Web.Services.Description.ImportCollection : ServiceDescriptionBaseCollection {
public Import Item
internal void .ctor(ServiceDescription serviceDescription)
public Import get_Item(int index)
public void set_Item(int index, Import value)
public int Add(Import import)
public void Insert(int index, Import import)
public int IndexOf(Import import)
public bool Contains(Import import)
public void Remove(Import import)
public void CopyTo(Import[] array, int index)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.InputBinding : MessageBinding {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
internal System.Web.Services.Description.LocalSoapHeader : object {
internal SoapHeaderDirection direction
internal string fieldName
}
public System.Web.Services.Description.Message : NamedItem {
private MessagePartCollection parts
private ServiceDescription parent
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescription ServiceDescription
public MessagePartCollection Parts
internal void SetParent(ServiceDescription parent)
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public ServiceDescription get_ServiceDescription()
public MessagePartCollection get_Parts()
public MessagePart[] FindPartsByName(String[] partNames)
public MessagePart FindPartByName(string partName)
}
public System.Web.Services.Description.MessageBinding : NamedItem {
private OperationBinding parent
public OperationBinding OperationBinding
internal void SetParent(OperationBinding parent)
public OperationBinding get_OperationBinding()
}
public System.Web.Services.Description.MessageCollection : ServiceDescriptionBaseCollection {
public Message Item
public Message Item
internal void .ctor(ServiceDescription serviceDescription)
public Message get_Item(int index)
public void set_Item(int index, Message value)
public int Add(Message message)
public void Insert(int index, Message message)
public int IndexOf(Message message)
public bool Contains(Message message)
public void Remove(Message message)
public void CopyTo(Message[] array, int index)
public Message get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.MessagePart : NamedItem {
private XmlQualifiedName type
private XmlQualifiedName element
private Message parent
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public Message Message
public XmlQualifiedName Element
public XmlQualifiedName Type
internal void SetParent(Message parent)
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public Message get_Message()
public XmlQualifiedName get_Element()
public void set_Element(XmlQualifiedName value)
public XmlQualifiedName get_Type()
public void set_Type(XmlQualifiedName value)
}
public System.Web.Services.Description.MessagePartCollection : ServiceDescriptionBaseCollection {
public MessagePart Item
public MessagePart Item
internal void .ctor(Message message)
public MessagePart get_Item(int index)
public void set_Item(int index, MessagePart value)
public int Add(MessagePart messagePart)
public void Insert(int index, MessagePart messagePart)
public int IndexOf(MessagePart messagePart)
public bool Contains(MessagePart messagePart)
public void Remove(MessagePart messagePart)
public void CopyTo(MessagePart[] array, int index)
public MessagePart get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
internal System.Web.Services.Description.MimeAnyImporter : MimeImporter {
internal MimeParameterCollection ImportParameters()
internal MimeReturn ImportReturn()
}
public System.Web.Services.Description.MimeContentBinding : ServiceDescriptionFormatExtension {
private string type
private string part
public string Namespace
public string Part
public string Type
public string get_Part()
public void set_Part(string value)
public string get_Type()
public void set_Type(string value)
}
internal System.Web.Services.Description.MimeFormImporter : MimeImporter {
internal MimeParameterCollection ImportParameters()
internal MimeReturn ImportReturn()
}
internal System.Web.Services.Description.MimeFormReflector : MimeReflector {
internal bool ReflectParameters()
internal bool ReflectReturn()
}
internal System.Web.Services.Description.MimeImporter : object {
private HttpProtocolImporter protocol
internal HttpProtocolImporter ImportContext
internal MimeParameterCollection ImportParameters()
internal MimeReturn ImportReturn()
internal void GenerateCode(MimeReturn[] importedReturns, MimeParameterCollection[] importedParameters)
internal void AddClassMetadata(CodeTypeDeclaration codeClass)
internal HttpProtocolImporter get_ImportContext()
internal void set_ImportContext(HttpProtocolImporter value)
}
public System.Web.Services.Description.MimeMultipartRelatedBinding : ServiceDescriptionFormatExtension {
private MimePartCollection parts
public MimePartCollection Parts
public MimePartCollection get_Parts()
}
internal System.Web.Services.Description.MimeParameter : object {
private string name
private string typeName
private CodeAttributeDeclarationCollection attrs
internal string Name
internal string TypeName
internal CodeAttributeDeclarationCollection Attributes
internal string get_Name()
internal void set_Name(string value)
internal string get_TypeName()
internal void set_TypeName(string value)
internal CodeAttributeDeclarationCollection get_Attributes()
}
internal System.Web.Services.Description.MimeParameterCollection : CollectionBase {
private Type writerType
internal Type WriterType
internal MimeParameter Item
internal Type get_WriterType()
internal void set_WriterType(Type value)
internal MimeParameter get_Item(int index)
internal void set_Item(int index, MimeParameter value)
internal int Add(MimeParameter parameter)
internal void Insert(int index, MimeParameter parameter)
internal int IndexOf(MimeParameter parameter)
internal bool Contains(MimeParameter parameter)
internal void Remove(MimeParameter parameter)
internal void CopyTo(MimeParameter[] array, int index)
}
public System.Web.Services.Description.MimePart : ServiceDescriptionFormatExtension {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
public System.Web.Services.Description.MimePartCollection : CollectionBase {
public MimePart Item
public MimePart get_Item(int index)
public void set_Item(int index, MimePart value)
public int Add(MimePart mimePart)
public void Insert(int index, MimePart mimePart)
public int IndexOf(MimePart mimePart)
public bool Contains(MimePart mimePart)
public void Remove(MimePart mimePart)
public void CopyTo(MimePart[] array, int index)
}
internal System.Web.Services.Description.MimeReflector : object {
private HttpProtocolReflector protocol
internal HttpProtocolReflector ReflectionContext
internal bool ReflectParameters()
internal bool ReflectReturn()
internal HttpProtocolReflector get_ReflectionContext()
internal void set_ReflectionContext(HttpProtocolReflector value)
}
internal System.Web.Services.Description.MimeReturn : object {
private string typeName
private Type readerType
private CodeAttributeDeclarationCollection attrs
internal string TypeName
internal Type ReaderType
internal CodeAttributeDeclarationCollection Attributes
internal string get_TypeName()
internal void set_TypeName(string value)
internal Type get_ReaderType()
internal void set_ReaderType(Type value)
internal CodeAttributeDeclarationCollection get_Attributes()
}
public System.Web.Services.Description.MimeTextBinding : ServiceDescriptionFormatExtension {
private MimeTextMatchCollection matches
public string Namespace
public MimeTextMatchCollection Matches
public MimeTextMatchCollection get_Matches()
}
internal System.Web.Services.Description.MimeTextImporter : MimeImporter {
private string methodName
internal MimeParameterCollection ImportParameters()
internal MimeReturn ImportReturn()
internal void GenerateCode(MimeReturn[] importedReturns, MimeParameterCollection[] importedParameters)
private void GenerateCode(MimeTextReturn importedReturn, CodeGenerationOptions options)
private void GenerateCode(string typeName, MimeTextMatchCollection matches, CodeGenerationOptions options)
}
public System.Web.Services.Description.MimeTextMatch : object {
private string name
private string type
private int repeats
private string pattern
private int group
private int capture
private bool ignoreCase
private MimeTextMatchCollection matches
public string Name
public string Type
public int Group
public int Capture
public int Repeats
public string RepeatsString
public string Pattern
public bool IgnoreCase
public MimeTextMatchCollection Matches
public string get_Name()
public void set_Name(string value)
public string get_Type()
public void set_Type(string value)
public int get_Group()
public void set_Group(int value)
public int get_Capture()
public void set_Capture(int value)
public int get_Repeats()
public void set_Repeats(int value)
public string get_RepeatsString()
public void set_RepeatsString(string value)
public string get_Pattern()
public void set_Pattern(string value)
public bool get_IgnoreCase()
public void set_IgnoreCase(bool value)
public MimeTextMatchCollection get_Matches()
}
public System.Web.Services.Description.MimeTextMatchCollection : CollectionBase {
public MimeTextMatch Item
public MimeTextMatch get_Item(int index)
public void set_Item(int index, MimeTextMatch value)
public int Add(MimeTextMatch match)
public void Insert(int index, MimeTextMatch match)
public int IndexOf(MimeTextMatch match)
public bool Contains(MimeTextMatch match)
public void Remove(MimeTextMatch match)
public void CopyTo(MimeTextMatch[] array, int index)
}
internal System.Web.Services.Description.MimeTextReturn : MimeReturn {
private MimeTextBinding textBinding
internal MimeTextBinding TextBinding
internal MimeTextBinding get_TextBinding()
internal void set_TextBinding(MimeTextBinding value)
}
public System.Web.Services.Description.MimeXmlBinding : ServiceDescriptionFormatExtension {
private string part
public string Part
public string get_Part()
public void set_Part(string value)
}
internal System.Web.Services.Description.MimeXmlImporter : MimeImporter {
private XmlSchemaImporter importer
private XmlCodeExporter exporter
private XmlSchemaImporter Importer
private XmlCodeExporter Exporter
internal MimeParameterCollection ImportParameters()
internal MimeReturn ImportReturn()
private XmlSchemaImporter get_Importer()
private XmlCodeExporter get_Exporter()
internal void GenerateCode(MimeReturn[] importedReturns, MimeParameterCollection[] importedParameters)
private void GenerateCode(MimeXmlReturn importedReturn)
internal void AddClassMetadata(CodeTypeDeclaration codeClass)
}
internal System.Web.Services.Description.MimeXmlReflector : MimeReflector {
internal bool ReflectParameters()
internal bool ReflectReturn()
}
internal System.Web.Services.Description.MimeXmlReturn : MimeReturn {
private XmlTypeMapping mapping
internal XmlTypeMapping TypeMapping
internal XmlTypeMapping get_TypeMapping()
internal void set_TypeMapping(XmlTypeMapping value)
}
public System.Web.Services.Description.NamedItem : DocumentableItem {
private string name
public string Name
public string get_Name()
public void set_Name(string value)
}
public System.Web.Services.Description.Operation : NamedItem {
private String[] parameters
private OperationMessageCollection messages
private OperationFaultCollection faults
private PortType parent
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public PortType PortType
public string ParameterOrderString
public String[] ParameterOrder
public OperationMessageCollection Messages
public OperationFaultCollection Faults
internal void SetParent(PortType parent)
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public PortType get_PortType()
public string get_ParameterOrderString()
public void set_ParameterOrderString(string value)
public String[] get_ParameterOrder()
public void set_ParameterOrder(String[] value)
public OperationMessageCollection get_Messages()
public OperationFaultCollection get_Faults()
public bool IsBoundBy(OperationBinding operationBinding)
private string GetMessageName(string operationName, string messageName, bool isInput)
}
public System.Web.Services.Description.OperationBinding : NamedItem {
private ServiceDescriptionFormatExtensionCollection extensions
private FaultBindingCollection faults
private InputBinding input
private OutputBinding output
private Binding parent
public Binding Binding
public ServiceDescriptionFormatExtensionCollection Extensions
public InputBinding Input
public OutputBinding Output
public FaultBindingCollection Faults
internal void SetParent(Binding parent)
public Binding get_Binding()
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public InputBinding get_Input()
public void set_Input(InputBinding value)
public OutputBinding get_Output()
public void set_Output(OutputBinding value)
public FaultBindingCollection get_Faults()
}
public System.Web.Services.Description.OperationBindingCollection : ServiceDescriptionBaseCollection {
public OperationBinding Item
internal void .ctor(Binding binding)
public OperationBinding get_Item(int index)
public void set_Item(int index, OperationBinding value)
public int Add(OperationBinding bindingOperation)
public void Insert(int index, OperationBinding bindingOperation)
public int IndexOf(OperationBinding bindingOperation)
public bool Contains(OperationBinding bindingOperation)
public void Remove(OperationBinding bindingOperation)
public void CopyTo(OperationBinding[] array, int index)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.OperationCollection : ServiceDescriptionBaseCollection {
public Operation Item
internal void .ctor(PortType portType)
public Operation get_Item(int index)
public void set_Item(int index, Operation value)
public int Add(Operation operation)
public void Insert(int index, Operation operation)
public int IndexOf(Operation operation)
public bool Contains(Operation operation)
public void Remove(Operation operation)
public void CopyTo(Operation[] array, int index)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.OperationFault : OperationMessage {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
public System.Web.Services.Description.OperationFaultCollection : ServiceDescriptionBaseCollection {
public OperationFault Item
public OperationFault Item
internal void .ctor(Operation operation)
public OperationFault get_Item(int index)
public void set_Item(int index, OperationFault value)
public int Add(OperationFault operationFaultMessage)
public void Insert(int index, OperationFault operationFaultMessage)
public int IndexOf(OperationFault operationFaultMessage)
public bool Contains(OperationFault operationFaultMessage)
public void Remove(OperationFault operationFaultMessage)
public void CopyTo(OperationFault[] array, int index)
public OperationFault get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.OperationFlow : Enum {
public int value__
public OperationFlow None
public OperationFlow OneWay
public OperationFlow Notification
public OperationFlow RequestResponse
public OperationFlow SolicitResponse
}
public System.Web.Services.Description.OperationInput : OperationMessage {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
public System.Web.Services.Description.OperationMessage : NamedItem {
private XmlQualifiedName message
private Operation parent
public Operation Operation
public XmlQualifiedName Message
internal void SetParent(Operation parent)
public Operation get_Operation()
public XmlQualifiedName get_Message()
public void set_Message(XmlQualifiedName value)
}
public System.Web.Services.Description.OperationMessageCollection : ServiceDescriptionBaseCollection {
public OperationMessage Item
public OperationInput Input
public OperationOutput Output
public OperationFlow Flow
internal void .ctor(Operation operation)
public OperationMessage get_Item(int index)
public void set_Item(int index, OperationMessage value)
public int Add(OperationMessage operationMessage)
public void Insert(int index, OperationMessage operationMessage)
public int IndexOf(OperationMessage operationMessage)
public bool Contains(OperationMessage operationMessage)
public void Remove(OperationMessage operationMessage)
public void CopyTo(OperationMessage[] array, int index)
public OperationInput get_Input()
public OperationOutput get_Output()
public OperationFlow get_Flow()
protected void SetParent(object value, object parent)
protected void OnInsert(int index, object value)
protected void OnSet(int index, object oldValue, object newValue)
protected void OnValidate(object value)
}
public System.Web.Services.Description.OperationOutput : OperationMessage {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
public System.Web.Services.Description.OutputBinding : MessageBinding {
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescriptionFormatExtensionCollection get_Extensions()
}
public System.Web.Services.Description.Port : NamedItem {
private ServiceDescriptionFormatExtensionCollection extensions
private XmlQualifiedName binding
private Service parent
public Service Service
public ServiceDescriptionFormatExtensionCollection Extensions
public XmlQualifiedName Binding
internal void SetParent(Service parent)
public Service get_Service()
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public XmlQualifiedName get_Binding()
public void set_Binding(XmlQualifiedName value)
}
public System.Web.Services.Description.PortCollection : ServiceDescriptionBaseCollection {
public Port Item
public Port Item
internal void .ctor(Service service)
public Port get_Item(int index)
public void set_Item(int index, Port value)
public int Add(Port port)
public void Insert(int index, Port port)
public int IndexOf(Port port)
public bool Contains(Port port)
public void Remove(Port port)
public void CopyTo(Port[] array, int index)
public Port get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.PortType : NamedItem {
private OperationCollection operations
private ServiceDescription parent
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public ServiceDescription ServiceDescription
public OperationCollection Operations
internal void SetParent(ServiceDescription parent)
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public ServiceDescription get_ServiceDescription()
public OperationCollection get_Operations()
}
public System.Web.Services.Description.PortTypeCollection : ServiceDescriptionBaseCollection {
public PortType Item
public PortType Item
internal void .ctor(ServiceDescription serviceDescription)
public PortType get_Item(int index)
public void set_Item(int index, PortType value)
public int Add(PortType portType)
public void Insert(int index, PortType portType)
public int IndexOf(PortType portType)
public bool Contains(PortType portType)
public void Remove(PortType portType)
public void CopyTo(PortType[] array, int index)
public PortType get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.ProtocolImporter : object {
private ServiceDescriptionImporter importer
private CodeNamespace codeNamespace
private CodeIdentifiers methodNames
private CodeTypeDeclaration codeClass
private CodeTypeDeclarationCollection classes
private ServiceDescriptionImportWarnings warnings
private Port port
private PortType portType
private Binding binding
private Operation operation
private OperationBinding operationBinding
private bool encodedBinding
private ImportContext importContext
private Hashtable exportContext
private Service service
private Message inputMessage
private Message outputMessage
private string className
private int bindingCount
private bool anyPorts
public ServiceDescriptionCollection ServiceDescriptions
public XmlSchemas Schemas
public XmlSchemas AbstractSchemas
public XmlSchemas ConcreteSchemas
public CodeNamespace CodeNamespace
public CodeTypeDeclaration CodeTypeDeclaration
internal CodeTypeDeclarationCollection ExtraCodeClasses
public ServiceDescriptionImportStyle Style
public ServiceDescriptionImportWarnings Warnings
public CodeIdentifiers ClassNames
public string MethodName
public string ClassName
public Port Port
public PortType PortType
public Binding Binding
public Service Service
internal ServiceDescriptionImporter ServiceImporter
public Operation Operation
public OperationBinding OperationBinding
public Message InputMessage
public Message OutputMessage
internal ImportContext ImportContext
internal bool IsEncodedBinding
internal Hashtable ExportContext
internal CodeIdentifiers MethodNames
public string ProtocolName
internal void Initialize(ServiceDescriptionImporter importer)
public ServiceDescriptionCollection get_ServiceDescriptions()
public XmlSchemas get_Schemas()
public XmlSchemas get_AbstractSchemas()
public XmlSchemas get_ConcreteSchemas()
public CodeNamespace get_CodeNamespace()
public CodeTypeDeclaration get_CodeTypeDeclaration()
internal CodeTypeDeclarationCollection get_ExtraCodeClasses()
public ServiceDescriptionImportStyle get_Style()
public ServiceDescriptionImportWarnings get_Warnings()
public void set_Warnings(ServiceDescriptionImportWarnings value)
public CodeIdentifiers get_ClassNames()
public string get_MethodName()
public string get_ClassName()
public Port get_Port()
public PortType get_PortType()
public Binding get_Binding()
public Service get_Service()
internal ServiceDescriptionImporter get_ServiceImporter()
public Operation get_Operation()
public OperationBinding get_OperationBinding()
public Message get_InputMessage()
public Message get_OutputMessage()
internal ImportContext get_ImportContext()
internal bool get_IsEncodedBinding()
internal void set_IsEncodedBinding(bool value)
internal Hashtable get_ExportContext()
internal CodeIdentifiers get_MethodNames()
internal bool GenerateCode(CodeNamespace codeNamespace, ImportContext importContext, Hashtable exportContext)
private void MoveToBinding(Binding binding, PortType portType)
private void MoveToBinding(Service service, Port port, Binding binding, PortType portType)
private void MoveToOperation(Operation operation)
private void GenerateClassForBinding()
public void AddExtensionWarningComments(CodeCommentStatementCollection comments, ServiceDescriptionFormatExtensionCollection extensions)
public void UnsupportedBindingWarning(string text)
public void UnsupportedOperationWarning(string text)
public void UnsupportedOperationBindingWarning(string text)
private void NoMethodsGeneratedWarning()
internal void AddWarningComment(CodeCommentStatementCollection comments, string text)
public Exception OperationSyntaxException(string text)
public Exception OperationBindingSyntaxException(string text)
public string get_ProtocolName()
protected void BeginNamespace()
protected bool IsBindingSupported()
protected bool IsOperationFlowSupported(OperationFlow flow)
protected CodeTypeDeclaration BeginClass()
protected CodeMemberMethod GenerateMethod()
protected void EndClass()
protected void EndNamespace()
internal string UniqueName(string baseName, String[] scope)
internal string MethodSignature(string methodName, string returnType, CodeFlags[] parameterFlags, String[] parameterTypes)
}
internal System.Web.Services.Description.ProtocolImporterUtil : object {
internal void GenerateConstructorStatements(CodeConstructor ctor, string url, string appSettingUrlKey, string appSettingBaseUrl, bool soap11)
}
public System.Web.Services.Description.ProtocolReflector : object {
private ServiceDescriptionReflector reflector
private LogicalMethodInfo method
private Operation operation
private OperationBinding operationBinding
private Port port
private PortType portType
private Binding binding
private WebMethodAttribute methodAttr
private Message inputMessage
private Message outputMessage
private MessageCollection headerMessages
private ServiceDescription bindingServiceDescription
private CodeIdentifiers portNames
private bool emptyBinding
internal bool IsEmptyBinding
public Service Service
public ServiceDescription ServiceDescription
public ServiceDescriptionCollection ServiceDescriptions
internal List`1<Action`1<Uri>> UriFixups
public XmlSchemas Schemas
public XmlSchemaExporter SchemaExporter
public XmlReflectionImporter ReflectionImporter
public string DefaultNamespace
public string ServiceUrl
public Type ServiceType
public LogicalMethodInfo Method
public Binding Binding
public PortType PortType
public Port Port
public Operation Operation
public OperationBinding OperationBinding
public WebMethodAttribute MethodAttribute
public LogicalMethodInfo[] Methods
internal Hashtable ReflectionContext
public Message InputMessage
public Message OutputMessage
public MessageCollection HeaderMessages
internal WsiProfiles ConformsTo
public string ProtocolName
internal void Initialize(ServiceDescriptionReflector reflector)
internal bool get_IsEmptyBinding()
public Service get_Service()
public ServiceDescription get_ServiceDescription()
public ServiceDescriptionCollection get_ServiceDescriptions()
internal List`1<Action`1<Uri>> get_UriFixups()
public XmlSchemas get_Schemas()
public XmlSchemaExporter get_SchemaExporter()
public XmlReflectionImporter get_ReflectionImporter()
public string get_DefaultNamespace()
public string get_ServiceUrl()
public Type get_ServiceType()
public LogicalMethodInfo get_Method()
public Binding get_Binding()
public PortType get_PortType()
public Port get_Port()
public Operation get_Operation()
public OperationBinding get_OperationBinding()
public WebMethodAttribute get_MethodAttribute()
public LogicalMethodInfo[] get_Methods()
internal Hashtable get_ReflectionContext()
public Message get_InputMessage()
public Message get_OutputMessage()
public MessageCollection get_HeaderMessages()
private void MoveToMethod(LogicalMethodInfo method)
internal void Reflect()
private void AddImport(string ns, string location)
public ServiceDescription GetServiceDescription(string ns)
private void ReflectBinding(ReflectedBinding reflectedBinding)
internal WsiProfiles get_ConformsTo()
public string get_ProtocolName()
protected void BeginClass()
protected bool ReflectMethod()
protected string ReflectMethodBinding()
protected void EndClass()
protected void ReflectDescription()
}
internal System.Web.Services.Description.SchemaCompiler : object {
private StringCollection warnings
internal StringCollection Warnings
internal StringCollection get_Warnings()
internal StringCollection Compile(XmlSchemas schemas)
private void AddImport(XmlSchema schema, string ns)
private void AddImports(XmlSchemas schemas)
internal string WarningDetails(XmlSchemaException exception, string message)
private string GetSchemaItem(XmlSchemaObject o, string ns, string details)
internal XmlQualifiedName GetParentName(XmlSchemaObject item)
private void ValidationCallbackWithErrorCode(object sender, ValidationEventArgs args)
}
internal System.Web.Services.Description.Schemas : object {
internal string Wsdl
internal string Soap
internal string WebRef
internal string SoapEncoding
}
public System.Web.Services.Description.Service : NamedItem {
private ServiceDescriptionFormatExtensionCollection extensions
private PortCollection ports
private ServiceDescription parent
public ServiceDescription ServiceDescription
public ServiceDescriptionFormatExtensionCollection Extensions
public PortCollection Ports
internal void SetParent(ServiceDescription parent)
public ServiceDescription get_ServiceDescription()
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public PortCollection get_Ports()
}
public System.Web.Services.Description.ServiceCollection : ServiceDescriptionBaseCollection {
public Service Item
public Service Item
internal void .ctor(ServiceDescription serviceDescription)
public Service get_Item(int index)
public void set_Item(int index, Service value)
public int Add(Service service)
public void Insert(int index, Service service)
public int IndexOf(Service service)
public bool Contains(Service service)
public void Remove(Service service)
public void CopyTo(Service[] array, int index)
public Service get_Item(string name)
protected string GetKey(object value)
protected void SetParent(object value, object parent)
}
public System.Web.Services.Description.ServiceDescription : NamedItem {
public string Namespace
internal string Prefix
private Types types
private ImportCollection imports
private MessageCollection messages
private PortTypeCollection portTypes
private BindingCollection bindings
private ServiceCollection services
private string targetNamespace
private ServiceDescriptionFormatExtensionCollection extensions
private ServiceDescriptionCollection parent
private string appSettingUrlKey
private string appSettingBaseUrl
private string retrievalUrl
private XmlSerializer serializer
private XmlSerializerNamespaces namespaces
private WsiProfiles SupportedClaims
private XmlSchema schema
private XmlSchema soapEncodingSchema
private StringCollection validationWarnings
private StringCollection warnings
private ServiceDescription next
public string RetrievalUrl
public ServiceDescriptionCollection ServiceDescriptions
public ServiceDescriptionFormatExtensionCollection Extensions
public ImportCollection Imports
public Types Types
public MessageCollection Messages
public PortTypeCollection PortTypes
public BindingCollection Bindings
public ServiceCollection Services
public string TargetNamespace
public XmlSchema Schema
internal XmlSchema SoapEncodingSchema
public StringCollection ValidationWarnings
public XmlSerializer Serializer
internal string AppSettingBaseUrl
internal string AppSettingUrlKey
internal ServiceDescription Next
private void InstanceValidation(object sender, ValidationEventArgs args)
public string get_RetrievalUrl()
public void set_RetrievalUrl(string value)
internal void SetParent(ServiceDescriptionCollection parent)
public ServiceDescriptionCollection get_ServiceDescriptions()
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public ImportCollection get_Imports()
public Types get_Types()
public void set_Types(Types value)
private bool ShouldSerializeTypes()
public MessageCollection get_Messages()
public PortTypeCollection get_PortTypes()
public BindingCollection get_Bindings()
public ServiceCollection get_Services()
public string get_TargetNamespace()
public void set_TargetNamespace(string value)
public XmlSchema get_Schema()
internal XmlSchema get_SoapEncodingSchema()
public StringCollection get_ValidationWarnings()
internal void SetWarnings(StringCollection warnings)
public XmlSerializer get_Serializer()
internal string get_AppSettingBaseUrl()
internal void set_AppSettingBaseUrl(string value)
internal string get_AppSettingUrlKey()
internal void set_AppSettingUrlKey(string value)
internal ServiceDescription get_Next()
internal void set_Next(ServiceDescription value)
public ServiceDescription Read(TextReader textReader)
public ServiceDescription Read(Stream stream)
public ServiceDescription Read(XmlReader reader)
public ServiceDescription Read(string fileName)
public ServiceDescription Read(TextReader textReader, bool validate)
public ServiceDescription Read(Stream stream, bool validate)
public ServiceDescription Read(string fileName, bool validate)
public ServiceDescription Read(XmlReader reader, bool validate)
public bool CanRead(XmlReader reader)
public void Write(string fileName)
public void Write(TextWriter writer)
public void Write(Stream stream)
public void Write(XmlWriter writer)
internal WsiProfiles GetConformanceClaims(XmlElement documentation)
internal void AddConformanceClaims(XmlElement documentation, WsiProfiles claims)
}
public System.Web.Services.Description.ServiceDescriptionBaseCollection : CollectionBase {
private Hashtable table
private object parent
protected IDictionary Table
internal void .ctor(object parent)
protected IDictionary get_Table()
protected string GetKey(object value)
protected void SetParent(object value, object parent)
protected void OnInsertComplete(int index, object value)
protected void OnRemove(int index, object value)
protected void OnClear()
protected void OnSet(int index, object oldValue, object newValue)
private void AddValue(object value)
private void RemoveValue(object value)
private string GetDuplicateMessage(Type type, string elemName)
}
public System.Web.Services.Description.ServiceDescriptionCollection : ServiceDescriptionBaseCollection {
public ServiceDescription Item
public ServiceDescription Item
public ServiceDescription get_Item(int index)
public void set_Item(int index, ServiceDescription value)
public ServiceDescription get_Item(string ns)
public int Add(ServiceDescription serviceDescription)
public void Insert(int index, ServiceDescription serviceDescription)
public int IndexOf(ServiceDescription serviceDescription)
public bool Contains(ServiceDescription serviceDescription)
public void Remove(ServiceDescription serviceDescription)
public void CopyTo(ServiceDescription[] array, int index)
protected string GetKey(object value)
private Exception ItemNotFound(XmlQualifiedName name, string type)
public Message GetMessage(XmlQualifiedName name)
public PortType GetPortType(XmlQualifiedName name)
public Service GetService(XmlQualifiedName name)
public Binding GetBinding(XmlQualifiedName name)
private ServiceDescription GetServiceDescription(XmlQualifiedName name)
protected void SetParent(object value, object parent)
protected void OnInsertComplete(int index, object value)
}
public System.Web.Services.Description.ServiceDescriptionFormatExtension : object {
private object parent
private bool required
private bool handled
public object Parent
public bool Required
public bool Handled
internal void SetParent(object parent)
public object get_Parent()
public bool get_Required()
public void set_Required(bool value)
public bool get_Handled()
public void set_Handled(bool value)
}
public System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection : ServiceDescriptionBaseCollection {
private ArrayList handledElements
public object Item
public void .ctor(object parent)
public object get_Item(int index)
public void set_Item(int index, object value)
public int Add(object extension)
public void Insert(int index, object extension)
public int IndexOf(object extension)
public bool Contains(object extension)
public void Remove(object extension)
public void CopyTo(Object[] array, int index)
public object Find(Type type)
public Object[] FindAll(Type type)
public XmlElement Find(string name, string ns)
public XmlElement[] FindAll(string name, string ns)
private void SetHandled(XmlElement element)
public bool IsHandled(object item)
public bool IsRequired(object item)
private bool IsHandled(XmlElement element)
private bool IsRequired(XmlElement element)
protected void SetParent(object value, object parent)
protected void OnValidate(object value)
}
public System.Web.Services.Description.ServiceDescriptionImporter : object {
private ServiceDescriptionImportStyle style
private ServiceDescriptionCollection serviceDescriptions
private XmlSchemas schemas
private XmlSchemas allSchemas
private string protocolName
private CodeGenerationOptions options
private CodeCompileUnit codeCompileUnit
private CodeDomProvider codeProvider
private ProtocolImporter[] importers
private XmlSchemas abstractSchemas
private XmlSchemas concreteSchemas
private List`1<Type> extensions
public ServiceDescriptionCollection ServiceDescriptions
public XmlSchemas Schemas
public ServiceDescriptionImportStyle Style
public CodeGenerationOptions CodeGenerationOptions
internal CodeCompileUnit CodeCompileUnit
public CodeDomProvider CodeGenerator
internal List`1<Type> Extensions
public string ProtocolName
internal XmlSchemas AllSchemas
internal XmlSchemas AbstractSchemas
internal XmlSchemas ConcreteSchemas
internal void .ctor(CodeCompileUnit codeCompileUnit)
public ServiceDescriptionCollection get_ServiceDescriptions()
public XmlSchemas get_Schemas()
public ServiceDescriptionImportStyle get_Style()
public void set_Style(ServiceDescriptionImportStyle value)
public CodeGenerationOptions get_CodeGenerationOptions()
public void set_CodeGenerationOptions(CodeGenerationOptions value)
internal CodeCompileUnit get_CodeCompileUnit()
public CodeDomProvider get_CodeGenerator()
public void set_CodeGenerator(CodeDomProvider value)
internal List`1<Type> get_Extensions()
public string get_ProtocolName()
public void set_ProtocolName(string value)
private ProtocolImporter FindImporterByName(string protocolName)
internal XmlSchemas get_AllSchemas()
internal XmlSchemas get_AbstractSchemas()
internal XmlSchemas get_ConcreteSchemas()
public void AddServiceDescription(ServiceDescription serviceDescription, string appSettingUrlKey, string appSettingBaseUrl)
public ServiceDescriptionImportWarnings Import(CodeNamespace codeNamespace, CodeCompileUnit codeCompileUnit)
public StringCollection GenerateWebReferences(WebReferenceCollection webReferences, CodeDomProvider codeProvider, CodeCompileUnit codeCompileUnit, WebReferenceOptions options)
internal ImportContext Context(CodeNamespace ns, Hashtable namespaces, bool verbose)
internal void AddDocument(string path, object document, XmlSchemas schemas, ServiceDescriptionCollection descriptions, StringCollection warnings)
private void FindUse(MessagePart part, Boolean& isEncoded, Boolean& isLiteral)
private void FindUse(Operation operation, ServiceDescription description, string messageName, Boolean& isEncoded, Boolean& isLiteral)
private void AddImport(XmlSchema schema, Hashtable imports)
private ServiceDescriptionImportWarnings Import(CodeNamespace codeNamespace, ImportContext importContext, Hashtable exportContext, StringCollection warnings)
private void AddSchema(XmlSchema schema, bool isEncoded, bool isLiteral, XmlSchemas abstractSchemas, XmlSchemas concreteSchemas, Hashtable references)
}
public System.Web.Services.Description.ServiceDescriptionImportStyle : Enum {
public int value__
public ServiceDescriptionImportStyle Client
public ServiceDescriptionImportStyle Server
public ServiceDescriptionImportStyle ServerInterface
}
public System.Web.Services.Description.ServiceDescriptionImportWarnings : Enum {
public int value__
public ServiceDescriptionImportWarnings NoCodeGenerated
public ServiceDescriptionImportWarnings OptionalExtensionsIgnored
public ServiceDescriptionImportWarnings RequiredExtensionsIgnored
public ServiceDescriptionImportWarnings UnsupportedOperationsIgnored
public ServiceDescriptionImportWarnings UnsupportedBindingsIgnored
public ServiceDescriptionImportWarnings NoMethodsGenerated
public ServiceDescriptionImportWarnings SchemaValidation
public ServiceDescriptionImportWarnings WsiConformance
}
public System.Web.Services.Description.ServiceDescriptionReflector : object {
private ProtocolReflector[] reflectors
private ProtocolReflector[] reflectorsWithPost
private ServiceDescriptionCollection descriptions
private XmlSchemas schemas
private ServiceDescriptionCollection descriptionsWithPost
private XmlSchemas schemasWithPost
private WebServiceAttribute serviceAttr
private ServiceDescription description
private Service service
private LogicalMethodInfo[] methods
private XmlSchemaExporter exporter
private XmlReflectionImporter importer
private Type serviceType
private string serviceUrl
private Hashtable reflectionContext
private List`1<Action`1<Uri>> uriFixups
internal List`1<Action`1<Uri>> UriFixups
public ServiceDescriptionCollection ServiceDescriptions
public XmlSchemas Schemas
internal ServiceDescriptionCollection ServiceDescriptionsWithPost
internal XmlSchemas SchemasWithPost
internal ServiceDescription ServiceDescription
internal Service Service
internal Type ServiceType
internal LogicalMethodInfo[] Methods
internal string ServiceUrl
internal XmlSchemaExporter SchemaExporter
internal XmlReflectionImporter ReflectionImporter
internal WebServiceAttribute ServiceAttribute
internal Hashtable ReflectionContext
internal List`1<Action`1<Uri>> get_UriFixups()
public ServiceDescriptionCollection get_ServiceDescriptions()
public XmlSchemas get_Schemas()
internal ServiceDescriptionCollection get_ServiceDescriptionsWithPost()
internal XmlSchemas get_SchemasWithPost()
internal ServiceDescription get_ServiceDescription()
internal Service get_Service()
internal Type get_ServiceType()
internal LogicalMethodInfo[] get_Methods()
internal string get_ServiceUrl()
internal XmlSchemaExporter get_SchemaExporter()
internal XmlReflectionImporter get_ReflectionImporter()
internal WebServiceAttribute get_ServiceAttribute()
internal Hashtable get_ReflectionContext()
internal void .ctor(List`1<Action`1<Uri>> uriFixups)
private void ReflectInternal(ProtocolReflector[] reflectors)
public void Reflect(Type type, string url)
private void CheckForDuplicateMethods(LogicalMethodInfo[] methods)
}
internal System.Web.Services.Description.ServiceDescriptionSerializationReader : XmlSerializationReader {
private Hashtable _XmlSchemaDerivationMethodValues
private string id133_XmlSchemaSimpleTypeUnion
private string id143_maxInclusive
private string id46_body
private string id190_any
private string id88_OperationOutput
private string id6_targetNamespace
private string id158_XmlSchemaMaxLengthFacet
private string id11_portType
private string id182_mixed
private string id172_keyref
private string id187_all
private string id162_itemType
private string id68_InputBinding
private string id25_HttpAddressBinding
private string id82_HttpBinding
private string id17_address
private string id3_ServiceDescription
private string id38_SoapFaultBinding
private string id123_ref
private string id198_XmlSchemaComplexContent
private string id53_parts
private string id35_use
private string id157_XmlSchemaLengthFacet
private string id207_XmlSchemaImport
private string id44_text
private string id117_XmlSchemaAppInfo
private string id203_public
private string id69_urlEncoded
private string id7_documentation
private string id19_Item
private string id129_final
private string id163_XmlSchemaElement
private string id60_capture
private string id37_encodingStyle
private string id185_sequence
private string id166_abstract
private string id23_location
private string id111_XmlSchemaAttributeGroup
private string id192_XmlSchemaSequence
private string id33_FaultBinding
private string id153_XmlSchemaMaxInclusiveFacet
private string id201_XmlSchemaGroup
private string id43_multipartRelated
private string id168_nillable
private string id149_value
private string id64_MimeMultipartRelatedBinding
private string id193_XmlSchemaAny
private string id191_XmlSchemaGroupRef
private string id74_soapAction
private string id63_ignoreCase
private string id101_version
private string id47_header
private string id195_extension
private string id48_Soap12HeaderBinding
private string id134_memberTypes
private string id121_Item
private string id146_minExclusive
private string id84_PortType
private string id42_mimeXml
private string id138_minInclusive
private string id118_source
private string id73_Soap12OperationBinding
private string id131_restriction
private string id152_XmlSchemaMaxExclusiveFacet
private string id135_XmlSchemaSimpleTypeRestriction
private string id188_XmlSchemaAll
private string id116_appinfo
private string id86_parameterOrder
private string id147_minLength
private string id78_HttpOperationBinding
private string id161_XmlSchemaSimpleTypeList
private string id205_XmlSchemaRedefine
private string id194_XmlSchemaSimpleContent
private string id91_MessagePart
private string id92_element
private string id114_processContents
private string id18_Item
private string id50_headerfault
private string id154_XmlSchemaEnumerationFacet
private string id96_XmlSchema
private string id127_form
private string id176_field
private string id49_part
private string id5_Item
private string id57_match
private string id52_Soap12BodyBinding
private string id104_redefine
private string id20_Item
private string id21_Soap12AddressBinding
private string id142_enumeration
private string id24_SoapAddressBinding
private string id103_include
private string id139_maxLength
private string id165_maxOccurs
private string id65_MimePart
private string id102_id
private string id196_Item
private string id140_length
private string id27_type
private string id106_complexType
private string id31_output
private string id1_definitions
private string id4_name
private string id132_union
private string id29_OperationBinding
private string id170_key
private string id45_Item
private string id95_Item
private string id169_substitutionGroup
private string id178_xpath
private string id9_types
private string id97_attributeFormDefault
private string id62_pattern
private string id58_MimeTextMatch
private string id180_XmlSchemaKey
private string id10_message
private string id8_import
private string id148_XmlSchemaMinLengthFacet
private string id105_simpleType
private string id181_XmlSchemaComplexType
private string id164_minOccurs
private string id144_maxExclusive
private string id160_XmlSchemaFractionDigitsFacet
private string id124_XmlSchemaAttribute
private string id209_Import
private string id206_schemaLocation
private string id179_XmlSchemaUnique
private string id75_style
private string id119_XmlSchemaDocumentation
private string id136_base
private string id66_MimeXmlBinding
private string id30_input
private string id40_content
private string id93_Types
private string id94_schema
private string id200_Item
private string id67_MimeContentBinding
private string id59_group
private string id32_fault
private string id80_transport
private string id98_blockDefault
private string id13_service
private string id54_SoapHeaderBinding
private string id204_system
private string id16_Port
private string id108_notation
private string id186_choice
private string id110_attributeGroup
private string id79_Soap12Binding
private string id77_SoapOperationBinding
private string id115_XmlSchemaAnnotation
private string id83_verb
private string id72_HttpUrlEncodedBinding
private string id39_OutputBinding
private string id183_complexContent
private string id202_XmlSchemaNotation
private string id81_SoapBinding
private string id199_Item
private string id28_operation
private string id122_XmlSchemaAttributeGroupRef
private string id155_XmlSchemaPatternFacet
private string id76_soapActionRequired
private string id90_Message
private string id159_XmlSchemaMinInclusiveFacet
private string id208_XmlSchemaInclude
private string id85_Operation
private string id130_list
private string id14_Service
private string id22_required
private string id174_refer
private string id71_HttpUrlReplacementBinding
private string id56_MimeTextBinding
private string id87_OperationFault
private string id125_default
private string id15_port
private string id51_SoapHeaderFaultBinding
private string id128_XmlSchemaSimpleType
private string id36_namespace
private string id175_selector
private string id150_XmlSchemaMinExclusiveFacet
private string id100_elementFormDefault
private string id26_Binding
private string id197_Item
private string id126_fixed
private string id107_annotation
private string id99_finalDefault
private string id137_fractionDigits
private string id70_urlReplacement
private string id189_XmlSchemaChoice
private string id2_Item
private string id112_anyAttribute
private string id89_OperationInput
private string id141_totalDigits
private string id61_repeats
private string id184_simpleContent
private string id55_SoapBodyBinding
private string id145_whiteSpace
private string id167_block
private string id151_XmlSchemaWhiteSpaceFacet
private string id12_binding
private string id109_attribute
private string id171_unique
private string id120_lang
private string id173_XmlSchemaKeyref
private string id177_XmlSchemaXPath
private string id34_Soap12FaultBinding
private string id41_Item
private string id156_XmlSchemaTotalDigitsFacet
private string id113_XmlSchemaAnyAttribute
internal Hashtable XmlSchemaDerivationMethodValues
public object Read125_definitions()
private ServiceDescription Read124_ServiceDescription(bool isNullable, bool checkType)
private Service Read123_Service(bool isNullable, bool checkType)
private Port Read122_Port(bool isNullable, bool checkType)
private Soap12AddressBinding Read121_Soap12AddressBinding(bool isNullable, bool checkType)
private SoapAddressBinding Read119_SoapAddressBinding(bool isNullable, bool checkType)
private HttpAddressBinding Read118_HttpAddressBinding(bool isNullable, bool checkType)
private Binding Read117_Binding(bool isNullable, bool checkType)
private OperationBinding Read116_OperationBinding(bool isNullable, bool checkType)
private FaultBinding Read115_FaultBinding(bool isNullable, bool checkType)
private Soap12FaultBinding Read114_Soap12FaultBinding(bool isNullable, bool checkType)
private SoapBindingUse Read100_SoapBindingUse(string s)
private SoapFaultBinding Read112_SoapFaultBinding(bool isNullable, bool checkType)
private SoapBindingUse Read98_SoapBindingUse(string s)
private OutputBinding Read111_OutputBinding(bool isNullable, bool checkType)
private Soap12HeaderBinding Read109_Soap12HeaderBinding(bool isNullable, bool checkType)
private SoapHeaderFaultBinding Read107_SoapHeaderFaultBinding(bool isNullable, bool checkType)
private Soap12BodyBinding Read102_Soap12BodyBinding(bool isNullable, bool checkType)
private SoapHeaderBinding Read106_SoapHeaderBinding(bool isNullable, bool checkType)
private SoapHeaderFaultBinding Read105_SoapHeaderFaultBinding(bool isNullable, bool checkType)
private SoapBodyBinding Read99_SoapBodyBinding(bool isNullable, bool checkType)
private MimeTextBinding Read97_MimeTextBinding(bool isNullable, bool checkType)
private MimeTextMatch Read96_MimeTextMatch(bool isNullable, bool checkType)
private MimeMultipartRelatedBinding Read104_MimeMultipartRelatedBinding(bool isNullable, bool checkType)
private MimePart Read103_MimePart(bool isNullable, bool checkType)
private MimeXmlBinding Read94_MimeXmlBinding(bool isNullable, bool checkType)
private MimeContentBinding Read93_MimeContentBinding(bool isNullable, bool checkType)
private InputBinding Read110_InputBinding(bool isNullable, bool checkType)
private HttpUrlReplacementBinding Read91_HttpUrlReplacementBinding(bool isNullable, bool checkType)
private HttpUrlEncodedBinding Read90_HttpUrlEncodedBinding(bool isNullable, bool checkType)
private Soap12OperationBinding Read88_Soap12OperationBinding(bool isNullable, bool checkType)
private SoapBindingStyle Read82_SoapBindingStyle(string s)
private SoapOperationBinding Read86_SoapOperationBinding(bool isNullable, bool checkType)
private SoapBindingStyle Read79_SoapBindingStyle(string s)
private HttpOperationBinding Read85_HttpOperationBinding(bool isNullable, bool checkType)
private Soap12Binding Read84_Soap12Binding(bool isNullable, bool checkType)
private SoapBinding Read80_SoapBinding(bool isNullable, bool checkType)
private HttpBinding Read77_HttpBinding(bool isNullable, bool checkType)
private PortType Read75_PortType(bool isNullable, bool checkType)
private Operation Read74_Operation(bool isNullable, bool checkType)
private OperationFault Read73_OperationFault(bool isNullable, bool checkType)
private OperationOutput Read72_OperationOutput(bool isNullable, bool checkType)
private OperationInput Read71_OperationInput(bool isNullable, bool checkType)
private Message Read69_Message(bool isNullable, bool checkType)
private MessagePart Read68_MessagePart(bool isNullable, bool checkType)
private Types Read67_Types(bool isNullable, bool checkType)
private XmlSchema Read66_XmlSchema(bool isNullable, bool checkType)
private XmlSchemaAttributeGroup Read40_XmlSchemaAttributeGroup(bool isNullable, bool checkType)
private XmlSchemaAnyAttribute Read39_XmlSchemaAnyAttribute(bool isNullable, bool checkType)
private XmlSchemaAnnotation Read11_XmlSchemaAnnotation(bool isNullable, bool checkType)
private XmlSchemaAppInfo Read10_XmlSchemaAppInfo(bool isNullable, bool checkType)
private XmlSchemaDocumentation Read9_XmlSchemaDocumentation(bool isNullable, bool checkType)
private XmlSchemaContentProcessing Read38_XmlSchemaContentProcessing(string s)
private XmlSchemaAttributeGroupRef Read37_XmlSchemaAttributeGroupRef(bool isNullable, bool checkType)
private XmlSchemaAttribute Read36_XmlSchemaAttribute(bool isNullable, bool checkType)
private XmlSchemaSimpleType Read34_XmlSchemaSimpleType(bool isNullable, bool checkType)
private XmlSchemaSimpleTypeUnion Read33_XmlSchemaSimpleTypeUnion(bool isNullable, bool checkType)
private XmlSchemaSimpleTypeRestriction Read32_XmlSchemaSimpleTypeRestriction(bool isNullable, bool checkType)
private XmlSchemaMinLengthFacet Read31_XmlSchemaMinLengthFacet(bool isNullable, bool checkType)
private XmlSchemaMinExclusiveFacet Read30_XmlSchemaMinExclusiveFacet(bool isNullable, bool checkType)
private XmlSchemaWhiteSpaceFacet Read29_XmlSchemaWhiteSpaceFacet(bool isNullable, bool checkType)
private XmlSchemaMaxExclusiveFacet Read28_XmlSchemaMaxExclusiveFacet(bool isNullable, bool checkType)
private XmlSchemaMaxInclusiveFacet Read27_XmlSchemaMaxInclusiveFacet(bool isNullable, bool checkType)
private XmlSchemaEnumerationFacet Read26_XmlSchemaEnumerationFacet(bool isNullable, bool checkType)
private XmlSchemaPatternFacet Read25_XmlSchemaPatternFacet(bool isNullable, bool checkType)
private XmlSchemaTotalDigitsFacet Read24_XmlSchemaTotalDigitsFacet(bool isNullable, bool checkType)
private XmlSchemaLengthFacet Read23_XmlSchemaLengthFacet(bool isNullable, bool checkType)
private XmlSchemaMaxLengthFacet Read22_XmlSchemaMaxLengthFacet(bool isNullable, bool checkType)
private XmlSchemaMinInclusiveFacet Read21_XmlSchemaMinInclusiveFacet(bool isNullable, bool checkType)
private XmlSchemaFractionDigitsFacet Read20_XmlSchemaFractionDigitsFacet(bool isNullable, bool checkType)
private XmlSchemaSimpleTypeList Read17_XmlSchemaSimpleTypeList(bool isNullable, bool checkType)
internal Hashtable get_XmlSchemaDerivationMethodValues()
private XmlSchemaDerivationMethod Read7_XmlSchemaDerivationMethod(string s)
private XmlSchemaUse Read35_XmlSchemaUse(string s)
private XmlSchemaForm Read6_XmlSchemaForm(string s)
private XmlSchemaElement Read52_XmlSchemaElement(bool isNullable, bool checkType)
private XmlSchemaKeyref Read51_XmlSchemaKeyref(bool isNullable, bool checkType)
private XmlSchemaXPath Read47_XmlSchemaXPath(bool isNullable, bool checkType)
private XmlSchemaUnique Read50_XmlSchemaUnique(bool isNullable, bool checkType)
private XmlSchemaKey Read49_XmlSchemaKey(bool isNullable, bool checkType)
private XmlSchemaComplexType Read62_XmlSchemaComplexType(bool isNullable, bool checkType)
private XmlSchemaAll Read55_XmlSchemaAll(bool isNullable, bool checkType)
private XmlSchemaChoice Read54_XmlSchemaChoice(bool isNullable, bool checkType)
private XmlSchemaGroupRef Read44_XmlSchemaGroupRef(bool isNullable, bool checkType)
private XmlSchemaSequence Read53_XmlSchemaSequence(bool isNullable, bool checkType)
private XmlSchemaAny Read46_XmlSchemaAny(bool isNullable, bool checkType)
private XmlSchemaSimpleContent Read61_XmlSchemaSimpleContent(bool isNullable, bool checkType)
private XmlSchemaSimpleContentExtension Read60_Item(bool isNullable, bool checkType)
private XmlSchemaSimpleContentRestriction Read59_Item(bool isNullable, bool checkType)
private XmlSchemaComplexContent Read58_XmlSchemaComplexContent(bool isNullable, bool checkType)
private XmlSchemaComplexContentRestriction Read57_Item(bool isNullable, bool checkType)
private XmlSchemaComplexContentExtension Read56_Item(bool isNullable, bool checkType)
private XmlSchemaGroup Read63_XmlSchemaGroup(bool isNullable, bool checkType)
private XmlSchemaNotation Read65_XmlSchemaNotation(bool isNullable, bool checkType)
private XmlSchemaRedefine Read64_XmlSchemaRedefine(bool isNullable, bool checkType)
private XmlSchemaImport Read13_XmlSchemaImport(bool isNullable, bool checkType)
private XmlSchemaInclude Read12_XmlSchemaInclude(bool isNullable, bool checkType)
private Import Read4_Import(bool isNullable, bool checkType)
protected void InitCallbacks()
protected void InitIDs()
}
internal System.Web.Services.Description.ServiceDescriptionSerializationWriter : XmlSerializationWriter {
public void Write125_definitions(object o)
private void Write124_ServiceDescription(string n, string ns, ServiceDescription o, bool isNullable, bool needType)
private void Write123_Service(string n, string ns, Service o, bool isNullable, bool needType)
private void Write122_Port(string n, string ns, Port o, bool isNullable, bool needType)
private void Write119_SoapAddressBinding(string n, string ns, SoapAddressBinding o, bool isNullable, bool needType)
private void Write118_HttpAddressBinding(string n, string ns, HttpAddressBinding o, bool isNullable, bool needType)
private void Write121_Soap12AddressBinding(string n, string ns, Soap12AddressBinding o, bool isNullable, bool needType)
private void Write117_Binding(string n, string ns, Binding o, bool isNullable, bool needType)
private void Write116_OperationBinding(string n, string ns, OperationBinding o, bool isNullable, bool needType)
private void Write115_FaultBinding(string n, string ns, FaultBinding o, bool isNullable, bool needType)
private void Write112_SoapFaultBinding(string n, string ns, SoapFaultBinding o, bool isNullable, bool needType)
private string Write98_SoapBindingUse(SoapBindingUse v)
private void Write114_Soap12FaultBinding(string n, string ns, Soap12FaultBinding o, bool isNullable, bool needType)
private string Write100_SoapBindingUse(SoapBindingUse v)
private void Write111_OutputBinding(string n, string ns, OutputBinding o, bool isNullable, bool needType)
private void Write104_MimeMultipartRelatedBinding(string n, string ns, MimeMultipartRelatedBinding o, bool isNullable, bool needType)
private void Write103_MimePart(string n, string ns, MimePart o, bool isNullable, bool needType)
private void Write97_MimeTextBinding(string n, string ns, MimeTextBinding o, bool isNullable, bool needType)
private void Write96_MimeTextMatch(string n, string ns, MimeTextMatch o, bool isNullable, bool needType)
private void Write94_MimeXmlBinding(string n, string ns, MimeXmlBinding o, bool isNullable, bool needType)
private void Write93_MimeContentBinding(string n, string ns, MimeContentBinding o, bool isNullable, bool needType)
private void Write99_SoapBodyBinding(string n, string ns, SoapBodyBinding o, bool isNullable, bool needType)
private void Write102_Soap12BodyBinding(string n, string ns, Soap12BodyBinding o, bool isNullable, bool needType)
private void Write106_SoapHeaderBinding(string n, string ns, SoapHeaderBinding o, bool isNullable, bool needType)
private void Write105_SoapHeaderFaultBinding(string n, string ns, SoapHeaderFaultBinding o, bool isNullable, bool needType)
private void Write109_Soap12HeaderBinding(string n, string ns, Soap12HeaderBinding o, bool isNullable, bool needType)
private void Write107_SoapHeaderFaultBinding(string n, string ns, SoapHeaderFaultBinding o, bool isNullable, bool needType)
private void Write110_InputBinding(string n, string ns, InputBinding o, bool isNullable, bool needType)
private void Write90_HttpUrlEncodedBinding(string n, string ns, HttpUrlEncodedBinding o, bool isNullable, bool needType)
private void Write91_HttpUrlReplacementBinding(string n, string ns, HttpUrlReplacementBinding o, bool isNullable, bool needType)
private void Write86_SoapOperationBinding(string n, string ns, SoapOperationBinding o, bool isNullable, bool needType)
private string Write79_SoapBindingStyle(SoapBindingStyle v)
private void Write85_HttpOperationBinding(string n, string ns, HttpOperationBinding o, bool isNullable, bool needType)
private void Write88_Soap12OperationBinding(string n, string ns, Soap12OperationBinding o, bool isNullable, bool needType)
private string Write82_SoapBindingStyle(SoapBindingStyle v)
private void Write80_SoapBinding(string n, string ns, SoapBinding o, bool isNullable, bool needType)
private void Write77_HttpBinding(string n, string ns, HttpBinding o, bool isNullable, bool needType)
private void Write84_Soap12Binding(string n, string ns, Soap12Binding o, bool isNullable, bool needType)
private void Write75_PortType(string n, string ns, PortType o, bool isNullable, bool needType)
private void Write74_Operation(string n, string ns, Operation o, bool isNullable, bool needType)
private void Write73_OperationFault(string n, string ns, OperationFault o, bool isNullable, bool needType)
private void Write71_OperationInput(string n, string ns, OperationInput o, bool isNullable, bool needType)
private void Write72_OperationOutput(string n, string ns, OperationOutput o, bool isNullable, bool needType)
private void Write69_Message(string n, string ns, Message o, bool isNullable, bool needType)
private void Write68_MessagePart(string n, string ns, MessagePart o, bool isNullable, bool needType)
private void Write67_Types(string n, string ns, Types o, bool isNullable, bool needType)
private void Write66_XmlSchema(string n, string ns, XmlSchema o, bool isNullable, bool needType)
private void Write11_XmlSchemaAnnotation(string n, string ns, XmlSchemaAnnotation o, bool isNullable, bool needType)
private void Write9_XmlSchemaDocumentation(string n, string ns, XmlSchemaDocumentation o, bool isNullable, bool needType)
private void Write10_XmlSchemaAppInfo(string n, string ns, XmlSchemaAppInfo o, bool isNullable, bool needType)
private void Write63_XmlSchemaGroup(string n, string ns, XmlSchemaGroup o, bool isNullable, bool needType)
private void Write53_XmlSchemaSequence(string n, string ns, XmlSchemaSequence o, bool isNullable, bool needType)
private void Write46_XmlSchemaAny(string n, string ns, XmlSchemaAny o, bool isNullable, bool needType)
private string Write38_XmlSchemaContentProcessing(XmlSchemaContentProcessing v)
private void Write52_XmlSchemaElement(string n, string ns, XmlSchemaElement o, bool isNullable, bool needType)
private void Write49_XmlSchemaKey(string n, string ns, XmlSchemaKey o, bool isNullable, bool needType)
private void Write47_XmlSchemaXPath(string n, string ns, XmlSchemaXPath o, bool isNullable, bool needType)
private void Write50_XmlSchemaUnique(string n, string ns, XmlSchemaUnique o, bool isNullable, bool needType)
private void Write51_XmlSchemaKeyref(string n, string ns, XmlSchemaKeyref o, bool isNullable, bool needType)
private void Write34_XmlSchemaSimpleType(string n, string ns, XmlSchemaSimpleType o, bool isNullable, bool needType)
private void Write17_XmlSchemaSimpleTypeList(string n, string ns, XmlSchemaSimpleTypeList o, bool isNullable, bool needType)
private void Write32_XmlSchemaSimpleTypeRestriction(string n, string ns, XmlSchemaSimpleTypeRestriction o, bool isNullable, bool needType)
private void Write26_XmlSchemaEnumerationFacet(string n, string ns, XmlSchemaEnumerationFacet o, bool isNullable, bool needType)
private void Write27_XmlSchemaMaxInclusiveFacet(string n, string ns, XmlSchemaMaxInclusiveFacet o, bool isNullable, bool needType)
private void Write21_XmlSchemaMinInclusiveFacet(string n, string ns, XmlSchemaMinInclusiveFacet o, bool isNullable, bool needType)
private void Write25_XmlSchemaPatternFacet(string n, string ns, XmlSchemaPatternFacet o, bool isNullable, bool needType)
private void Write30_XmlSchemaMinExclusiveFacet(string n, string ns, XmlSchemaMinExclusiveFacet o, bool isNullable, bool needType)
private void Write29_XmlSchemaWhiteSpaceFacet(string n, string ns, XmlSchemaWhiteSpaceFacet o, bool isNullable, bool needType)
private void Write28_XmlSchemaMaxExclusiveFacet(string n, string ns, XmlSchemaMaxExclusiveFacet o, bool isNullable, bool needType)
private void Write31_XmlSchemaMinLengthFacet(string n, string ns, XmlSchemaMinLengthFacet o, bool isNullable, bool needType)
private void Write20_XmlSchemaFractionDigitsFacet(string n, string ns, XmlSchemaFractionDigitsFacet o, bool isNullable, bool needType)
private void Write22_XmlSchemaMaxLengthFacet(string n, string ns, XmlSchemaMaxLengthFacet o, bool isNullable, bool needType)
private void Write24_XmlSchemaTotalDigitsFacet(string n, string ns, XmlSchemaTotalDigitsFacet o, bool isNullable, bool needType)
private void Write23_XmlSchemaLengthFacet(string n, string ns, XmlSchemaLengthFacet o, bool isNullable, bool needType)
private void Write33_XmlSchemaSimpleTypeUnion(string n, string ns, XmlSchemaSimpleTypeUnion o, bool isNullable, bool needType)
private string Write7_XmlSchemaDerivationMethod(XmlSchemaDerivationMethod v)
private void Write62_XmlSchemaComplexType(string n, string ns, XmlSchemaComplexType o, bool isNullable, bool needType)
private void Write39_XmlSchemaAnyAttribute(string n, string ns, XmlSchemaAnyAttribute o, bool isNullable, bool needType)
private void Write36_XmlSchemaAttribute(string n, string ns, XmlSchemaAttribute o, bool isNullable, bool needType)
private string Write35_XmlSchemaUse(XmlSchemaUse v)
private string Write6_XmlSchemaForm(XmlSchemaForm v)
private void Write37_XmlSchemaAttributeGroupRef(string n, string ns, XmlSchemaAttributeGroupRef o, bool isNullable, bool needType)
private void Write44_XmlSchemaGroupRef(string n, string ns, XmlSchemaGroupRef o, bool isNullable, bool needType)
private void Write55_XmlSchemaAll(string n, string ns, XmlSchemaAll o, bool isNullable, bool needType)
private void Write54_XmlSchemaChoice(string n, string ns, XmlSchemaChoice o, bool isNullable, bool needType)
private void Write58_XmlSchemaComplexContent(string n, string ns, XmlSchemaComplexContent o, bool isNullable, bool needType)
private void Write56_Item(string n, string ns, XmlSchemaComplexContentExtension o, bool isNullable, bool needType)
private void Write57_Item(string n, string ns, XmlSchemaComplexContentRestriction o, bool isNullable, bool needType)
private void Write61_XmlSchemaSimpleContent(string n, string ns, XmlSchemaSimpleContent o, bool isNullable, bool needType)
private void Write59_Item(string n, string ns, XmlSchemaSimpleContentRestriction o, bool isNullable, bool needType)
private void Write60_Item(string n, string ns, XmlSchemaSimpleContentExtension o, bool isNullable, bool needType)
private void Write65_XmlSchemaNotation(string n, string ns, XmlSchemaNotation o, bool isNullable, bool needType)
private void Write40_XmlSchemaAttributeGroup(string n, string ns, XmlSchemaAttributeGroup o, bool isNullable, bool needType)
private void Write12_XmlSchemaInclude(string n, string ns, XmlSchemaInclude o, bool isNullable, bool needType)
private void Write13_XmlSchemaImport(string n, string ns, XmlSchemaImport o, bool isNullable, bool needType)
private void Write64_XmlSchemaRedefine(string n, string ns, XmlSchemaRedefine o, bool isNullable, bool needType)
private void Write4_Import(string n, string ns, Import o, bool isNullable, bool needType)
protected void InitCallbacks()
}
public System.Web.Services.Description.Soap12Binding : SoapBinding {
public string Namespace
public string HttpTransport
}
public System.Web.Services.Description.Soap12OperationBinding : SoapOperationBinding {
private bool soapActionRequired
private Soap12OperationBinding duplicateBySoapAction
private Soap12OperationBinding duplicateByRequestElement
private SoapReflectedMethod method
public bool SoapActionRequired
internal SoapReflectedMethod Method
internal Soap12OperationBinding DuplicateBySoapAction
internal Soap12OperationBinding DuplicateByRequestElement
public bool get_SoapActionRequired()
public void set_SoapActionRequired(bool value)
internal SoapReflectedMethod get_Method()
internal void set_Method(SoapReflectedMethod value)
internal Soap12OperationBinding get_DuplicateBySoapAction()
internal void set_DuplicateBySoapAction(Soap12OperationBinding value)
internal Soap12OperationBinding get_DuplicateByRequestElement()
internal void set_DuplicateByRequestElement(Soap12OperationBinding value)
}
internal System.Web.Services.Description.Soap12ProtocolImporter : SoapProtocolImporter {
public string ProtocolName
public string get_ProtocolName()
protected bool IsBindingSupported()
protected bool IsSoapEncodingPresent(string uriList)
}
internal System.Web.Services.Description.Soap12ProtocolReflector : SoapProtocolReflector {
private Hashtable requestElements
private Hashtable actions
private XmlQualifiedName soap11PortType
internal WsiProfiles ConformsTo
public string ProtocolName
internal WsiProfiles get_ConformsTo()
public string get_ProtocolName()
protected void BeginClass()
protected bool ReflectMethod()
protected void EndClass()
protected SoapBinding CreateSoapBinding(SoapBindingStyle style)
protected SoapAddressBinding CreateSoapAddressBinding(string serviceUrl)
protected SoapOperationBinding CreateSoapOperationBinding(SoapBindingStyle style, string action)
protected SoapBodyBinding CreateSoapBodyBinding(SoapBindingUse use, string ns)
protected SoapHeaderBinding CreateSoapHeaderBinding(XmlQualifiedName message, string partName, SoapBindingUse use)
protected SoapHeaderBinding CreateSoapHeaderBinding(XmlQualifiedName message, string partName, string ns, SoapBindingUse use)
private void DealWithAmbiguity(string action, string requestElement, Soap12OperationBinding operation)
private void CheckOperationDuplicates(Soap12OperationBinding operation)
}
public System.Web.Services.Description.SoapAddressBinding : ServiceDescriptionFormatExtension {
private string location
public string Location
public string get_Location()
public void set_Location(string value)
}
public System.Web.Services.Description.SoapBinding : ServiceDescriptionFormatExtension {
private SoapBindingStyle style
private string transport
private XmlSchema schema
public string Namespace
public string HttpTransport
public string Transport
public SoapBindingStyle Style
public XmlSchema Schema
public string get_Transport()
public void set_Transport(string value)
public SoapBindingStyle get_Style()
public void set_Style(SoapBindingStyle value)
public XmlSchema get_Schema()
}
public System.Web.Services.Description.SoapBindingStyle : Enum {
public int value__
public SoapBindingStyle Default
public SoapBindingStyle Document
public SoapBindingStyle Rpc
}
public System.Web.Services.Description.SoapBindingUse : Enum {
public int value__
public SoapBindingUse Default
public SoapBindingUse Encoded
public SoapBindingUse Literal
}
public System.Web.Services.Description.SoapBodyBinding : ServiceDescriptionFormatExtension {
private SoapBindingUse use
private string ns
private string encoding
private String[] parts
public SoapBindingUse Use
public string Namespace
public string Encoding
public string PartsString
public String[] Parts
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
public string get_Namespace()
public void set_Namespace(string value)
public string get_Encoding()
public void set_Encoding(string value)
public string get_PartsString()
public void set_PartsString(string value)
public String[] get_Parts()
public void set_Parts(String[] value)
}
public System.Web.Services.Description.SoapExtensionImporter : object {
private SoapProtocolImporter protocolImporter
public SoapProtocolImporter ImportContext
public void ImportMethod(CodeAttributeDeclarationCollection metadata)
public SoapProtocolImporter get_ImportContext()
public void set_ImportContext(SoapProtocolImporter value)
}
public System.Web.Services.Description.SoapExtensionReflector : object {
private ProtocolReflector protocolReflector
public ProtocolReflector ReflectionContext
public void ReflectMethod()
public void ReflectDescription()
public ProtocolReflector get_ReflectionContext()
public void set_ReflectionContext(ProtocolReflector value)
}
public System.Web.Services.Description.SoapFaultBinding : ServiceDescriptionFormatExtension {
private SoapBindingUse use
private string ns
private string encoding
private string name
public SoapBindingUse Use
public string Name
public string Namespace
public string Encoding
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
public string get_Name()
public void set_Name(string value)
public string get_Namespace()
public void set_Namespace(string value)
public string get_Encoding()
public void set_Encoding(string value)
}
public System.Web.Services.Description.SoapHeaderBinding : ServiceDescriptionFormatExtension {
private XmlQualifiedName message
private string part
private SoapBindingUse use
private string encoding
private string ns
private bool mapToProperty
private SoapHeaderFaultBinding fault
public bool MapToProperty
public XmlQualifiedName Message
public string Part
public SoapBindingUse Use
public string Encoding
public string Namespace
public SoapHeaderFaultBinding Fault
public bool get_MapToProperty()
public void set_MapToProperty(bool value)
public XmlQualifiedName get_Message()
public void set_Message(XmlQualifiedName value)
public string get_Part()
public void set_Part(string value)
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
public string get_Encoding()
public void set_Encoding(string value)
public string get_Namespace()
public void set_Namespace(string value)
public SoapHeaderFaultBinding get_Fault()
public void set_Fault(SoapHeaderFaultBinding value)
}
public System.Web.Services.Description.SoapHeaderFaultBinding : ServiceDescriptionFormatExtension {
private XmlQualifiedName message
private string part
private SoapBindingUse use
private string encoding
private string ns
public XmlQualifiedName Message
public string Part
public SoapBindingUse Use
public string Encoding
public string Namespace
public XmlQualifiedName get_Message()
public void set_Message(XmlQualifiedName value)
public string get_Part()
public void set_Part(string value)
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
public string get_Encoding()
public void set_Encoding(string value)
public string get_Namespace()
public void set_Namespace(string value)
}
internal System.Web.Services.Description.SoapHttpTransportImporter : SoapTransportImporter {
public bool IsSupportedTransport(string transport)
public void ImportClass()
}
public System.Web.Services.Description.SoapOperationBinding : ServiceDescriptionFormatExtension {
private string soapAction
private SoapBindingStyle style
public string SoapAction
public SoapBindingStyle Style
public string get_SoapAction()
public void set_SoapAction(string value)
public SoapBindingStyle get_Style()
public void set_Style(SoapBindingStyle value)
}
internal System.Web.Services.Description.SoapParameter : object {
internal CodeFlags codeFlags
internal string name
internal XmlMemberMapping mapping
internal string specifiedName
internal bool IsOut
internal bool IsByRef
internal bool get_IsOut()
internal bool get_IsByRef()
internal String[] GetTypeFullNames(IList parameters, int specifiedCount, CodeDomProvider codeProvider)
internal void GetTypeFullNames(IList parameters, String[] typeFullNames, int start, int specifiedCount, CodeDomProvider codeProvider)
internal String[] GetNames(IList parameters, int specifiedCount)
internal void GetNames(IList parameters, String[] names, int start, int specifiedCount)
internal CodeFlags[] GetCodeFlags(IList parameters, int specifiedCount)
internal void GetCodeFlags(IList parameters, CodeFlags[] codeFlags, int start, int specifiedCount)
}
internal System.Web.Services.Description.SoapParameters : object {
private XmlMemberMapping ret
private ArrayList parameters
private ArrayList inParameters
private ArrayList outParameters
private int checkSpecifiedCount
private int inCheckSpecifiedCount
private int outCheckSpecifiedCount
internal XmlMemberMapping Return
internal IList Parameters
internal IList InParameters
internal IList OutParameters
internal int CheckSpecifiedCount
internal int InCheckSpecifiedCount
internal int OutCheckSpecifiedCount
internal void .ctor(XmlMembersMapping request, XmlMembersMapping response, String[] parameterOrder, CodeIdentifiers identifiers)
private void AddParameter(SoapParameter parameter)
private bool RemoveByRefMapping(ArrayList responseList, XmlMemberMapping requestMapping)
private void AddMappings(ArrayList mappingsList, XmlMembersMapping mappings)
private XmlMemberMapping FindMapping(ArrayList mappingsList, string elementName)
internal XmlMemberMapping get_Return()
internal IList get_Parameters()
internal IList get_InParameters()
internal IList get_OutParameters()
internal int get_CheckSpecifiedCount()
internal int get_InCheckSpecifiedCount()
internal int get_OutCheckSpecifiedCount()
}
public System.Web.Services.Description.SoapProtocolImporter : ProtocolImporter {
private XmlSchemaImporter xmlImporter
private XmlCodeExporter xmlExporter
private SoapSchemaImporter soapImporter
private SoapCodeExporter soapExporter
private ArrayList xmlMembers
private ArrayList soapMembers
private Hashtable headers
private Hashtable classHeaders
private ArrayList propertyNames
private ArrayList propertyValues
private SoapExtensionImporter[] extensions
private SoapTransportImporter transport
private SoapBinding soapBinding
private ArrayList codeClasses
private TypedDataSetSchemaImporterExtension typedDataSetSchemaImporterExtension
public string ProtocolName
public SoapBinding SoapBinding
public SoapSchemaImporter SoapImporter
public XmlSchemaImporter XmlImporter
public XmlCodeExporter XmlExporter
public SoapCodeExporter SoapExporter
private TypedDataSetSchemaImporterExtension TypedDataSetSchemaImporterExtension
private bool MetadataPropertiesAdded
public string get_ProtocolName()
public SoapBinding get_SoapBinding()
public SoapSchemaImporter get_SoapImporter()
public XmlSchemaImporter get_XmlImporter()
public XmlCodeExporter get_XmlExporter()
public SoapCodeExporter get_SoapExporter()
private TypedDataSetSchemaImporterExtension get_TypedDataSetSchemaImporterExtension()
protected void BeginNamespace()
protected void EndNamespace()
protected bool IsBindingSupported()
internal SoapTransportImporter GetTransport(string transport)
protected CodeTypeDeclaration BeginClass()
protected void EndClass()
protected bool IsOperationFlowSupported(OperationFlow flow)
private void BeginMetadata()
private bool get_MetadataPropertiesAdded()
private void AddMetadataProperty(string name, object value)
private void AddMetadataProperty(string name, CodeExpression expr)
private void EndMetadata(CodeAttributeDeclarationCollection metadata, Type attributeType, string parameter)
private void GenerateExtensionMetadata(CodeAttributeDeclarationCollection metadata)
private void PrepareHeaders(MessageBinding messageBinding)
private void GenerateHeaders(CodeAttributeDeclarationCollection metadata, SoapBindingUse use, bool rpc, MessageBinding requestMessage, MessageBinding responseMessage)
protected CodeMemberMethod GenerateMethod()
private void WriteReturnMappings(CodeMemberMethod codeMethod, CodeExpression invoke, SoapParameters parameters, string resultsName)
private void CreateInvokeParams(CodeExpression[] invokeParams, string methodName, IList parameters, int checkSpecifiedCount)
private bool CheckMessageStyles(string messageName, MessagePart[] parts, SoapBodyBinding soapBodyBinding, SoapBindingStyle soapBindingStyle, Boolean& hasWrapper)
protected bool IsSoapEncodingPresent(string uriList)
private MessagePart[] GetMessageParts(Message message, SoapBodyBinding soapBodyBinding)
private XmlMembersMapping ImportMessage(string messageName, MessagePart[] parts, SoapBodyBinding soapBodyBinding, SoapBindingStyle soapBindingStyle, bool wrapped)
private XmlMembersMapping ImportEncodedMessage(string messageName, MessagePart[] parts, SoapBodyBinding soapBodyBinding, bool wrapped)
private XmlMembersMapping ImportLiteralMessage(string messageName, MessagePart[] parts, SoapBodyBinding soapBodyBinding, SoapBindingStyle soapBindingStyle, bool wrapped)
}
internal System.Web.Services.Description.SoapProtocolReflector : ProtocolReflector {
private ArrayList mappings
private SoapExtensionReflector[] extensions
private SoapReflectedMethod soapMethod
internal WsiProfiles ConformsTo
public string ProtocolName
internal SoapReflectedMethod SoapMethod
internal SoapReflectionImporter SoapImporter
internal SoapSchemaExporter SoapExporter
internal WsiProfiles get_ConformsTo()
public string get_ProtocolName()
internal SoapReflectedMethod get_SoapMethod()
internal SoapReflectionImporter get_SoapImporter()
internal SoapSchemaExporter get_SoapExporter()
protected bool ReflectMethod()
protected void ReflectDescription()
private void CreateHeaderMessages(string methodName, SoapBindingUse use, XmlMembersMapping inHeaderMappings, XmlMembersMapping outHeaderMappings, SoapReflectedHeader[] headers, bool rpc)
private void CreateMessage(bool rpc, SoapBindingUse use, SoapParameterStyle paramStyle, Message message, MessageBinding messageBinding, XmlMembersMapping members)
private void CreateEncodedMessage(Message message, MessageBinding messageBinding, XmlMembersMapping members, bool wrapped)
private void CreateLiteralMessage(Message message, MessageBinding messageBinding, XmlMembersMapping members, bool wrapped, bool rpc)
private String[] GetParameterOrder(LogicalMethodInfo methodInfo)
protected string ReflectMethodBinding()
protected void BeginClass()
private void AllowExtensionsToReflectMethod()
private void AllowExtensionsToReflectDescription()
protected SoapBinding CreateSoapBinding(SoapBindingStyle style)
protected SoapAddressBinding CreateSoapAddressBinding(string serviceUrl)
protected SoapOperationBinding CreateSoapOperationBinding(SoapBindingStyle style, string action)
protected SoapBodyBinding CreateSoapBodyBinding(SoapBindingUse use, string ns)
protected SoapHeaderBinding CreateSoapHeaderBinding(XmlQualifiedName message, string partName, SoapBindingUse use)
protected SoapHeaderBinding CreateSoapHeaderBinding(XmlQualifiedName message, string partName, string ns, SoapBindingUse use)
}
public System.Web.Services.Description.SoapTransportImporter : object {
private SoapProtocolImporter protocolImporter
public SoapProtocolImporter ImportContext
public bool IsSupportedTransport(string transport)
public void ImportClass()
public SoapProtocolImporter get_ImportContext()
public void set_ImportContext(SoapProtocolImporter value)
}
public System.Web.Services.Description.Types : DocumentableItem {
private XmlSchemas schemas
private ServiceDescriptionFormatExtensionCollection extensions
public ServiceDescriptionFormatExtensionCollection Extensions
public XmlSchemas Schemas
internal bool HasItems()
public ServiceDescriptionFormatExtensionCollection get_Extensions()
public XmlSchemas get_Schemas()
}
internal System.Web.Services.Description.WebCodeGenerator : object {
private CodeAttributeDeclaration generatedCodeAttribute
internal CodeAttributeDeclaration GeneratedCodeAttribute
internal CodeAttributeDeclaration get_GeneratedCodeAttribute()
private string GetProductVersion(Assembly assembly)
internal String[] GetNamespacesForTypes(Type[] types)
internal void AddImports(CodeNamespace codeNamespace, String[] namespaces)
private CodeMemberProperty CreatePropertyDeclaration(CodeMemberField field, string name, string typeName)
internal CodeTypeMember AddMember(CodeTypeDeclaration codeClass, string typeName, string memberName, CodeExpression initializer, CodeAttributeDeclarationCollection metadata, CodeFlags flags, CodeGenerationOptions options)
internal string FullTypeName(XmlMemberMapping mapping, CodeDomProvider codeProvider)
private string MakeFieldName(string name)
internal CodeConstructor AddConstructor(CodeTypeDeclaration codeClass, String[] parameterTypeNames, String[] parameterNames, CodeAttributeDeclarationCollection metadata, CodeFlags flags)
internal CodeMemberMethod AddMethod(CodeTypeDeclaration codeClass, string methodName, CodeFlags[] parameterFlags, String[] parameterTypeNames, String[] parameterNames, string returnTypeName, CodeAttributeDeclarationCollection metadata, CodeFlags flags)
internal CodeMemberMethod AddMethod(CodeTypeDeclaration codeClass, string methodName, CodeFlags[] parameterFlags, String[] parameterTypeNames, String[] parameterNames, CodeAttributeDeclarationCollection[] parameterAttributes, string returnTypeName, CodeAttributeDeclarationCollection metadata, CodeFlags flags)
internal CodeTypeDeclaration AddClass(CodeNamespace codeNamespace, string className, string baseClassName, String[] implementedInterfaceNames, CodeAttributeDeclarationCollection metadata, CodeFlags flags, bool isPartial)
internal CodeTypeDeclaration CreateClass(string className, string baseClassName, String[] implementedInterfaceNames, CodeAttributeDeclarationCollection metadata, CodeFlags flags, bool isPartial)
internal CodeAttributeDeclarationCollection AddCustomAttribute(CodeAttributeDeclarationCollection metadata, Type type, CodeAttributeArgument[] arguments)
internal CodeAttributeDeclarationCollection AddCustomAttribute(CodeAttributeDeclarationCollection metadata, Type type, CodeExpression[] arguments)
internal CodeAttributeDeclarationCollection AddCustomAttribute(CodeAttributeDeclarationCollection metadata, Type type, CodeExpression[] parameters, String[] propNames, CodeExpression[] propValues)
internal void AddEvent(CodeTypeMemberCollection members, string handlerType, string handlerName)
internal void AddDelegate(CodeTypeDeclarationCollection codeClasses, string handlerType, string handlerArgs)
internal void AddCallbackDeclaration(CodeTypeMemberCollection members, string callbackMember)
internal void AddCallbackImplementation(CodeTypeDeclaration codeClass, string callbackName, string handlerName, string handlerArgs, bool methodHasOutParameters)
internal CodeMemberMethod AddAsyncMethod(CodeTypeDeclaration codeClass, string methodName, String[] parameterTypeNames, String[] parameterNames, string callbackMember, string callbackName, string userState)
internal CodeTypeDeclaration CreateArgsClass(string name, String[] paramTypes, String[] paramNames, bool isPartial)
private CodeMemberProperty CreatePropertyDeclaration(CodeMemberField field, string name, string typeName, int index)
}
public System.Web.Services.Description.WebReference : object {
private CodeNamespace proxyCode
private DiscoveryClientDocumentCollection documents
private string appSettingUrlKey
private string appSettingBaseUrl
private string protocolName
private ServiceDescriptionImportWarnings warnings
private StringCollection validationWarnings
public string AppSettingBaseUrl
public string AppSettingUrlKey
public DiscoveryClientDocumentCollection Documents
public CodeNamespace ProxyCode
public StringCollection ValidationWarnings
public ServiceDescriptionImportWarnings Warnings
public string ProtocolName
public void .ctor(DiscoveryClientDocumentCollection documents, CodeNamespace proxyCode, string protocolName, string appSettingUrlKey, string appSettingBaseUrl)
public void .ctor(DiscoveryClientDocumentCollection documents, CodeNamespace proxyCode)
public void .ctor(DiscoveryClientDocumentCollection documents, CodeNamespace proxyCode, string appSettingUrlKey, string appSettingBaseUrl)
public string get_AppSettingBaseUrl()
public string get_AppSettingUrlKey()
public DiscoveryClientDocumentCollection get_Documents()
public CodeNamespace get_ProxyCode()
public StringCollection get_ValidationWarnings()
public ServiceDescriptionImportWarnings get_Warnings()
public void set_Warnings(ServiceDescriptionImportWarnings value)
public string get_ProtocolName()
public void set_ProtocolName(string value)
}
public System.Web.Services.Description.WebReferenceCollection : CollectionBase {
public WebReference Item
public WebReference get_Item(int index)
public void set_Item(int index, WebReference value)
public int Add(WebReference webReference)
public void Insert(int index, WebReference webReference)
public int IndexOf(WebReference webReference)
public bool Contains(WebReference webReference)
public void Remove(WebReference webReference)
public void CopyTo(WebReference[] array, int index)
}
public System.Web.Services.Description.WebReferenceOptions : object {
public string TargetNamespace
private XmlSchema schema
private CodeGenerationOptions codeGenerationOptions
private ServiceDescriptionImportStyle style
private StringCollection schemaImporterExtensions
private bool verbose
public CodeGenerationOptions CodeGenerationOptions
public StringCollection SchemaImporterExtensions
public ServiceDescriptionImportStyle Style
public bool Verbose
public XmlSchema Schema
public CodeGenerationOptions get_CodeGenerationOptions()
public void set_CodeGenerationOptions(CodeGenerationOptions value)
public StringCollection get_SchemaImporterExtensions()
public ServiceDescriptionImportStyle get_Style()
public void set_Style(ServiceDescriptionImportStyle value)
public bool get_Verbose()
public void set_Verbose(bool value)
public XmlSchema get_Schema()
public WebReferenceOptions Read(TextReader reader, ValidationEventHandler validationEventHandler)
public WebReferenceOptions Read(Stream stream, ValidationEventHandler validationEventHandler)
public WebReferenceOptions Read(XmlReader xmlReader, ValidationEventHandler validationEventHandler)
private void SchemaValidationHandler(object sender, ValidationEventArgs args)
}
internal System.Web.Services.Description.WebReferenceOptionsSerializationReader : XmlSerializationReader {
private Hashtable _CodeGenerationOptionsValues
private string id2_Item
private string id5_type
private string id4_schemaImporterExtensions
private string id3_codeGenerationOptions
private string id6_style
private string id7_verbose
private string id1_webReferenceOptions
internal Hashtable CodeGenerationOptionsValues
internal Hashtable get_CodeGenerationOptionsValues()
private CodeGenerationOptions Read1_CodeGenerationOptions(string s)
private ServiceDescriptionImportStyle Read2_ServiceDescriptionImportStyle(string s)
private WebReferenceOptions Read4_WebReferenceOptions(bool isNullable, bool checkType)
protected void InitCallbacks()
internal object Read5_webReferenceOptions()
protected void InitIDs()
}
internal System.Web.Services.Description.WebReferenceOptionsSerializationWriter : XmlSerializationWriter {
private string Write1_CodeGenerationOptions(CodeGenerationOptions v)
private string Write2_ServiceDescriptionImportStyle(ServiceDescriptionImportStyle v)
private void Write4_WebReferenceOptions(string n, string ns, WebReferenceOptions o, bool isNullable, bool needType)
protected void InitCallbacks()
internal void Write5_webReferenceOptions(object o)
}
internal System.Web.Services.Description.webReferenceOptionsSerializer : XmlSerializer {
protected XmlSerializationReader CreateReader()
protected XmlSerializationWriter CreateWriter()
public bool CanDeserialize(XmlReader xmlReader)
protected void Serialize(object objectToSerialize, XmlSerializationWriter writer)
protected object Deserialize(XmlSerializationReader reader)
}
public System.Web.Services.Description.WebServicesInteroperability : object {
public bool CheckConformance(WsiProfiles claims, ServiceDescription description, BasicProfileViolationCollection violations)
public bool CheckConformance(WsiProfiles claims, ServiceDescriptionCollection descriptions, BasicProfileViolationCollection violations)
public bool CheckConformance(WsiProfiles claims, WebReference webReference, BasicProfileViolationCollection violations)
internal bool AnalyzeBinding(Binding binding, ServiceDescription description, ServiceDescriptionCollection descriptions, BasicProfileViolationCollection violations)
internal void AnalyzeDescription(ServiceDescriptionCollection descriptions, BasicProfileViolationCollection violations)
private void CheckWsdlImports(ServiceDescription description, BasicProfileViolationCollection violations)
private void CheckTypes(ServiceDescription description, BasicProfileViolationCollection violations)
private void CheckMessagePart(MessagePart part, bool element, string message, string operation, string binding, string ns, Hashtable wireSignatures, BasicProfileViolationCollection violations)
private void AddSignature(Hashtable wireSignatures, string name, string ns, string message, string messageNs, BasicProfileViolationCollection violations)
private void CheckMessageParts(Message message, String[] parts, bool element, string operation, string binding, string ns, Hashtable wireSignatures, BasicProfileViolationCollection violations)
private SoapBodyBinding FindSoapBodyBinding(bool input, ServiceDescriptionFormatExtensionCollection extensions, BasicProfileViolationCollection violations, bool documentBinding, string operationName, string bindingName, string bindingNs)
private string MessageString(object item, string operation, string binding, string ns, bool input, string details)
private bool CheckExtensions(ServiceDescriptionFormatExtensionCollection extensions)
private void CheckExtensions(Binding binding, ServiceDescription description, BasicProfileViolationCollection violations)
private void CheckExtensions(ServiceDescriptionCollection descriptions, BasicProfileViolationCollection violations)
private Operation FindOperation(OperationCollection operations, OperationBinding bindingOperation)
}
internal System.Web.Services.Diagnostics.TraceMethod : object {
private object target
private string name
private Object[] args
private string call
internal void .ctor(object target, string name, Object[] args)
public string ToString()
internal string CallString(object target, string method, Object[] args)
internal string MethodId(object target, string method)
private void WriteObjectId(StringBuilder sb, object o)
private void WriteValue(StringBuilder sb, object o)
private string HashString(object objectValue)
}
internal System.Web.Services.Diagnostics.Tracing : object {
private bool tracingEnabled
private bool tracingInitialized
private bool appDomainShutdown
private string TraceSourceAsmx
private TraceSource asmxTraceSource
private object internalSyncObject
private object InternalSyncObject
internal bool On
internal bool IsVerbose
internal TraceSource Asmx
private object get_InternalSyncObject()
internal bool get_On()
internal bool get_IsVerbose()
internal TraceSource get_Asmx()
private void InitializeLogging()
private void Close()
private void UnhandledExceptionHandler(object sender, UnhandledExceptionEventArgs args)
private void ProcessExitEvent(object sender, EventArgs e)
private void AppDomainUnloadEvent(object sender, EventArgs e)
private bool ValidateSettings(TraceSource traceSource, TraceEventType traceLevel)
internal void Information(string format, Object[] args)
private void TraceEvent(TraceEventType eventType, string format)
internal Exception ExceptionThrow(TraceMethod method, Exception e)
internal Exception ExceptionThrow(TraceEventType eventType, TraceMethod method, Exception e)
internal Exception ExceptionCatch(TraceMethod method, Exception e)
internal Exception ExceptionCatch(TraceEventType eventType, TraceMethod method, Exception e)
internal Exception ExceptionCatch(TraceEventType eventType, object target, string method, Exception e)
internal Exception ExceptionIgnore(TraceEventType eventType, TraceMethod method, Exception e)
private void StackTrace(TraceEventType eventType, Exception e)
internal string TraceId(string id)
private string GetHostByAddress(string ipAddress)
internal List`1<string> Details(HttpRequest request)
internal void Enter(string callId, TraceMethod caller)
internal void Enter(string callId, TraceMethod caller, List`1<string> details)
internal void Enter(string callId, TraceMethod caller, TraceMethod callDetails)
internal void Enter(string callId, TraceMethod caller, TraceMethod callDetails, List`1<string> details)
internal XmlDeserializationEvents GetDeserializationEvents()
internal void Exit(string callId, TraceMethod caller)
internal void OnUnknownElement(object sender, XmlElementEventArgs e)
internal void OnUnknownAttribute(object sender, XmlAttributeEventArgs e)
}
public System.Web.Services.Discovery.ContractReference : DiscoveryReference {
public string Namespace
private string docRef
private string reference
public string Ref
public string DocRef
public string Url
public ServiceDescription Contract
public string DefaultFilename
public void .ctor(string href)
public void .ctor(string href, string docRef)
public string get_Ref()
public void set_Ref(string value)
public string get_DocRef()
public void set_DocRef(string value)
public string get_Url()
public void set_Url(string value)
internal void LoadExternals(Hashtable loadedExternals)
public ServiceDescription get_Contract()
public string get_DefaultFilename()
public void WriteDocument(object document, Stream stream)
public object ReadDocument(Stream stream)
protected internal void Resolve(string contentType, Stream stream)
}
public System.Web.Services.Discovery.ContractSearchPattern : DiscoverySearchPattern {
public string Pattern
public string get_Pattern()
public DiscoveryReference GetDiscoveryReference(string filename)
}
public System.Web.Services.Discovery.DiscoveryClientDocumentCollection : DictionaryBase {
public object Item
public ICollection Keys
public ICollection Values
public object get_Item(string url)
public void set_Item(string url, object value)
public ICollection get_Keys()
public ICollection get_Values()
public void Add(string url, object value)
public bool Contains(string url)
public void Remove(string url)
}
public System.Web.Services.Discovery.DiscoveryClientProtocol : HttpWebClientProtocol {
private DiscoveryClientReferenceCollection references
private DiscoveryClientDocumentCollection documents
private Hashtable inlinedSchemas
private ArrayList additionalInformation
private DiscoveryExceptionDictionary errors
public IList AdditionalInformation
public DiscoveryClientDocumentCollection Documents
public DiscoveryExceptionDictionary Errors
public DiscoveryClientReferenceCollection References
internal Hashtable InlinedSchemas
internal void .ctor(HttpWebClientProtocol protocol)
public IList get_AdditionalInformation()
public DiscoveryClientDocumentCollection get_Documents()
public DiscoveryExceptionDictionary get_Errors()
public DiscoveryClientReferenceCollection get_References()
internal Hashtable get_InlinedSchemas()
public DiscoveryDocument Discover(string url)
public DiscoveryDocument DiscoverAny(string url)
public Stream Download(String& url)
public Stream Download(String& url, String& contentType)
public void LoadExternals()
internal void FixupReferences()
private bool IsFilenameInUse(Hashtable filenames, string path)
private void AddFilename(Hashtable filenames, string path)
private string GetUniqueFilename(Hashtable filenames, string path)
public DiscoveryClientResultCollection ReadAll(string topLevelFilename)
public void ResolveAll()
public void ResolveOneLevel()
private string GetRelativePath(string fullPath, string relativeTo)
public DiscoveryClientResultCollection WriteAll(string directory, string topLevelFilename)
}
public System.Web.Services.Discovery.DiscoveryClientReferenceCollection : DictionaryBase {
public DiscoveryReference Item
public ICollection Keys
public ICollection Values
public DiscoveryReference get_Item(string url)
public void set_Item(string url, DiscoveryReference value)
public ICollection get_Keys()
public ICollection get_Values()
public void Add(DiscoveryReference value)
public void Add(string url, DiscoveryReference value)
public bool Contains(string url)
public void Remove(string url)
}
public System.Web.Services.Discovery.DiscoveryClientResult : object {
private string referenceTypeName
private string url
private string filename
public string ReferenceTypeName
public string Url
public string Filename
public void .ctor(Type referenceType, string url, string filename)
public string get_ReferenceTypeName()
public void set_ReferenceTypeName(string value)
public string get_Url()
public void set_Url(string value)
public string get_Filename()
public void set_Filename(string value)
}
public System.Web.Services.Discovery.DiscoveryClientResultCollection : CollectionBase {
public DiscoveryClientResult Item
public DiscoveryClientResult get_Item(int i)
public void set_Item(int i, DiscoveryClientResult value)
public int Add(DiscoveryClientResult value)
public bool Contains(DiscoveryClientResult value)
public void Remove(DiscoveryClientResult value)
}
public System.Web.Services.Discovery.DiscoveryDocument : object {
public string Namespace
private ArrayList references
public IList References
public IList get_References()
public DiscoveryDocument Read(Stream stream)
public DiscoveryDocument Read(TextReader reader)
public DiscoveryDocument Read(XmlReader xmlReader)
public bool CanRead(XmlReader xmlReader)
public void Write(TextWriter writer)
public void Write(Stream stream)
public void Write(XmlWriter writer)
}
public System.Web.Services.Discovery.DiscoveryDocumentLinksPattern : DiscoverySearchPattern {
public string Pattern
public string get_Pattern()
public DiscoveryReference GetDiscoveryReference(string filename)
}
public System.Web.Services.Discovery.DiscoveryDocumentReference : DiscoveryReference {
private string reference
public string Ref
public string DefaultFilename
public DiscoveryDocument Document
public string Url
public void .ctor(string href)
public string get_Ref()
public void set_Ref(string value)
public string get_DefaultFilename()
public DiscoveryDocument get_Document()
public void WriteDocument(object document, Stream stream)
public object ReadDocument(Stream stream)
public string get_Url()
public void set_Url(string value)
private DiscoveryDocument GetDocumentNoParse(String& url, DiscoveryClientProtocol client)
protected internal void Resolve(string contentType, Stream stream)
public void ResolveAll()
internal void ResolveAll(bool throwOnError)
}
public System.Web.Services.Discovery.DiscoveryDocumentSearchPattern : DiscoverySearchPattern {
public string Pattern
public string get_Pattern()
public DiscoveryReference GetDiscoveryReference(string filename)
}
internal System.Web.Services.Discovery.DiscoveryDocumentSerializationReader : XmlSerializationReader {
private string id1_discovery
private string id4_discoveryRef
private string id19_docRef
private string id8_Item
private string id14_binding
private string id20_DiscoveryDocumentReference
private string id17_targetNamespace
private string id5_contractRef
private string id10_Item
private string id13_Item
private string id7_schemaRef
private string id3_DiscoveryDocument
private string id9_soap
private string id12_address
private string id16_ref
private string id11_SoapBinding
private string id18_ContractReference
private string id2_Item
private string id15_SchemaReference
private string id6_Item
public object Read10_discovery()
private DiscoveryDocument Read9_DiscoveryDocument(bool isNullable, bool checkType)
private SoapBinding Read8_SoapBinding(bool isNullable, bool checkType)
private SchemaReference Read7_SchemaReference(bool isNullable, bool checkType)
private ContractReference Read5_ContractReference(bool isNullable, bool checkType)
private DiscoveryDocumentReference Read3_DiscoveryDocumentReference(bool isNullable, bool checkType)
protected void InitCallbacks()
protected void InitIDs()
}
internal System.Web.Services.Discovery.DiscoveryDocumentSerializationWriter : XmlSerializationWriter {
public void Write10_discovery(object o)
private void Write9_DiscoveryDocument(string n, string ns, DiscoveryDocument o, bool isNullable, bool needType)
private void Write8_SoapBinding(string n, string ns, SoapBinding o, bool isNullable, bool needType)
private void Write3_DiscoveryDocumentReference(string n, string ns, DiscoveryDocumentReference o, bool isNullable, bool needType)
private void Write5_ContractReference(string n, string ns, ContractReference o, bool isNullable, bool needType)
private void Write7_SchemaReference(string n, string ns, SchemaReference o, bool isNullable, bool needType)
protected void InitCallbacks()
}
internal System.Web.Services.Discovery.DiscoveryDocumentSerializer : XmlSerializer {
protected XmlSerializationReader CreateReader()
protected XmlSerializationWriter CreateWriter()
public bool CanDeserialize(XmlReader xmlReader)
protected void Serialize(object objectToSerialize, XmlSerializationWriter writer)
protected object Deserialize(XmlSerializationReader reader)
}
public System.Web.Services.Discovery.DiscoveryExceptionDictionary : DictionaryBase {
public Exception Item
public ICollection Keys
public ICollection Values
public Exception get_Item(string url)
public void set_Item(string url, Exception value)
public ICollection get_Keys()
public ICollection get_Values()
public void Add(string url, Exception value)
public bool Contains(string url)
public void Remove(string url)
}
public System.Web.Services.Discovery.DiscoveryReference : object {
private DiscoveryClientProtocol clientProtocol
public DiscoveryClientProtocol ClientProtocol
public string DefaultFilename
public string Url
public DiscoveryClientProtocol get_ClientProtocol()
public void set_ClientProtocol(DiscoveryClientProtocol value)
public string get_DefaultFilename()
public void WriteDocument(object document, Stream stream)
public object ReadDocument(Stream stream)
public string get_Url()
public void set_Url(string value)
internal void LoadExternals(Hashtable loadedExternals)
public string FilenameFromUrl(string url)
private bool FindChar(char ch, Char[] chars)
internal string MakeValidFilename(string filename)
public void Resolve()
internal Exception AttemptResolve(string contentType, Stream stream)
protected internal void Resolve(string contentType, Stream stream)
internal string UriToString(string baseUrl, string relUrl)
}
public System.Web.Services.Discovery.DiscoveryReferenceCollection : CollectionBase {
public DiscoveryReference Item
public DiscoveryReference get_Item(int i)
public void set_Item(int i, DiscoveryReference value)
public int Add(DiscoveryReference value)
public bool Contains(DiscoveryReference value)
public void Remove(DiscoveryReference value)
}
public System.Web.Services.Discovery.DiscoveryRequestHandler : object {
public bool IsReusable
public bool get_IsReusable()
public void ProcessRequest(HttpContext context)
private string GetDirPartOfPath(string str)
private string GetFilePartOfPath(string str)
}
public System.Web.Services.Discovery.DiscoverySearchPattern : object {
public string Pattern
public string get_Pattern()
public DiscoveryReference GetDiscoveryReference(string filename)
}
internal System.Web.Services.Discovery.DynamicDiscoSearcher : object {
protected string origUrl
protected String[] excludedUrls
protected string fileToSkipFirst
protected ArrayList filesFound
protected DiscoverySearchPattern[] primarySearchPatterns
protected DiscoverySearchPattern[] secondarySearchPatterns
protected DiscoveryDocument discoDoc
protected Hashtable excludedUrlsTable
protected int subDirLevel
internal DiscoveryDocument DiscoveryDocument
internal DiscoverySearchPattern[] PrimarySearchPattern
internal DiscoverySearchPattern[] SecondarySearchPattern
protected bool IsVirtualSearch
internal void .ctor(String[] excludeUrlsList)
internal void SearchInit(string fileToSkipAtBegin)
protected bool IsExcluded(string url)
internal DiscoveryDocument get_DiscoveryDocument()
internal DiscoverySearchPattern[] get_PrimarySearchPattern()
internal DiscoverySearchPattern[] get_SecondarySearchPattern()
protected void ScanDirectory(string directory)
protected bool ScanDirByPattern(string dir, bool IsPrimary, DiscoverySearchPattern[] patterns)
internal void Search(string fileToSkipAtBegin)
protected DirectoryInfo GetPhysicalDir(string dir)
protected void SearchSubDirectories(string directory)
protected string MakeResultPath(string dirName, string fileName)
protected string MakeAbsExcludedPath(string pathRelativ)
protected bool get_IsVirtualSearch()
}
public System.Web.Services.Discovery.DynamicDiscoveryDocument : object {
private ExcludePathInfo[] excludePaths
public string Namespace
public ExcludePathInfo[] ExcludePaths
public ExcludePathInfo[] get_ExcludePaths()
public void set_ExcludePaths(ExcludePathInfo[] value)
public void Write(Stream stream)
public DynamicDiscoveryDocument Load(Stream stream)
}
internal System.Web.Services.Discovery.DynamicPhysicalDiscoSearcher : DynamicDiscoSearcher {
private string startDir
protected bool IsVirtualSearch
internal void .ctor(string searchDir, String[] excludedUrls, string startUrl)
internal void Search(string fileToSkipAtBegin)
protected void SearchSubDirectories(string localDir)
protected DirectoryInfo GetPhysicalDir(string dir)
protected string MakeResultPath(string dirName, string fileName)
protected string MakeAbsExcludedPath(string pathRelativ)
protected bool get_IsVirtualSearch()
}
internal System.Web.Services.Discovery.DynamicVirtualDiscoSearcher : DynamicDiscoSearcher {
private string rootPathAsdi
private string entryPathPrefix
private string startDir
private Hashtable webApps
private Hashtable Adsi
protected bool IsVirtualSearch
internal void .ctor(string startDir, String[] excludedUrls, string rootUrl)
internal void Search(string fileToSkipAtBegin)
protected void SearchSubDirectories(string nameAdsiDir)
protected DirectoryInfo GetPhysicalDir(string dir)
private string GetWebServerForUrl(string url)
protected string MakeResultPath(string dirName, string fileName)
protected string MakeAbsExcludedPath(string pathRelativ)
protected bool get_IsVirtualSearch()
private AppSettings GetAppSettings(DirectoryEntry entry)
private void CleanupCache()
}
public System.Web.Services.Discovery.ExcludePathInfo : object {
private string path
public string Path
public void .ctor(string path)
public string get_Path()
public void set_Path(string value)
}
internal System.Web.Services.Discovery.InvalidContentTypeException : Exception {
private string contentType
internal string ContentType
internal void .ctor(string message, string contentType)
internal string get_ContentType()
}
internal System.Web.Services.Discovery.InvalidDocumentContentsException : Exception {
internal void .ctor(string message, Exception inner)
}
internal System.Web.Services.Discovery.LinkGrep : object {
private Regex tagRegex
private Regex doctypeDirectiveRegex
private Regex endtagRegex
private Regex commentRegex
private Regex whitespaceRegex
private Regex textRegex
private string ReadEntireStream(TextReader input)
internal string SearchForLink(Stream stream)
}
public System.Web.Services.Discovery.SchemaReference : DiscoveryReference {
public string Namespace
private string reference
private string targetNamespace
public string Ref
public string TargetNamespace
public string Url
public string DefaultFilename
public XmlSchema Schema
public void .ctor(string url)
public string get_Ref()
public void set_Ref(string value)
public string get_TargetNamespace()
public void set_TargetNamespace(string value)
public string get_Url()
public void set_Url(string value)
internal XmlSchema GetSchema()
internal void LoadExternals(Hashtable loadedExternals)
internal void LoadExternals(XmlSchema schema, string url, DiscoveryClientProtocol client, Hashtable loadedExternals)
public void WriteDocument(object document, Stream stream)
public object ReadDocument(Stream stream)
public string get_DefaultFilename()
public XmlSchema get_Schema()
protected internal void Resolve(string contentType, Stream stream)
}
public System.Web.Services.Discovery.SoapBinding : object {
public string Namespace
private XmlQualifiedName binding
private string address
public string Address
public XmlQualifiedName Binding
public string get_Address()
public void set_Address(string value)
public XmlQualifiedName get_Binding()
public void set_Binding(XmlQualifiedName value)
}
public System.Web.Services.Discovery.XmlSchemaSearchPattern : DiscoverySearchPattern {
public string Pattern
public string get_Pattern()
public DiscoveryReference GetDiscoveryReference(string filename)
}
internal System.Web.Services.Interop.CallId : ValueType {
public string szMachine
public int dwPid
public IntPtr userThread
public long addStackPointer
public string szEntryPoint
public string szDestinationMachine
public void .ctor(string machine, int pid, IntPtr userThread, long stackPtr, string entryPoint, string destMachine)
}
internal System.Web.Services.Interop.INotifyConnection2 {
public INotifySink2 RegisterNotifySource(INotifySource2 in_pNotifySource)
public void UnregisterNotifySource(INotifySource2 in_pNotifySource)
}
internal System.Web.Services.Interop.INotifySink2 {
public void OnSyncCallOut(CallId callId, IntPtr& out_ppBuffer, Int32& inout_pBufferSize)
public void OnSyncCallEnter(CallId callId, Byte[] in_pBuffer, int in_BufferSize)
public void OnSyncCallReturn(CallId callId, Byte[] in_pBuffer, int in_BufferSize)
public void OnSyncCallExit(CallId callId, IntPtr& out_ppBuffer, Int32& inout_pBufferSize)
}
internal System.Web.Services.Interop.INotifySource2 {
public void SetNotifyFilter(NotifyFilter in_NotifyFilter, UserThread in_pUserThreadFilter)
}
internal System.Web.Services.Interop.NotifyFilter : Enum {
public int value__
public NotifyFilter OnSyncCallOut
public NotifyFilter OnSyncCallEnter
public NotifyFilter OnSyncCallExit
public NotifyFilter OnSyncCallReturn
public NotifyFilter AllSync
public NotifyFilter All
public NotifyFilter None
}
internal System.Web.Services.Interop.UserThread : object {
internal int pSidBuffer
internal int dwSidLen
internal int dwTid
public bool Equals(object obj)
public int GetHashCode()
}
internal System.Web.Services.PartialTrustHelpers : object {
private bool isInPartialTrustOutsideAspNet
private bool isInPartialTrustOutsideAspNetInitialized
internal void FailIfInPartialTrustOutsideAspNet()
}
public System.Web.Services.Protocols.AnyReturnReader : MimeReturnReader {
public void Initialize(object o)
public object GetInitializer(LogicalMethodInfo methodInfo)
public object Read(WebResponse response, Stream responseStream)
}
internal System.Web.Services.Protocols.AsyncSessionHandler : AsyncSessionlessHandler {
internal void .ctor(ServerProtocol protocol)
}
internal System.Web.Services.Protocols.AsyncSessionlessHandler : SyncSessionlessHandler {
internal void .ctor(ServerProtocol protocol)
public IAsyncResult BeginProcessRequest(HttpContext context, AsyncCallback callback, object asyncState)
public void EndProcessRequest(IAsyncResult asyncResult)
}
internal System.Web.Services.Protocols.BufferedResponseStream : Stream {
private Stream outputStream
private Byte[] buffer
private int position
private bool flushEnabled
public bool CanRead
public bool CanSeek
public bool CanWrite
public long Length
public long Position
internal bool FlushEnabled
internal void .ctor(Stream outputStream, int buffersize)
public bool get_CanRead()
public bool get_CanSeek()
public bool get_CanWrite()
public long get_Length()
public long get_Position()
public void set_Position(long value)
protected void Dispose(bool disposing)
internal void set_FlushEnabled(bool value)
public void Flush()
public IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
public int EndRead(IAsyncResult asyncResult)
public long Seek(long offset, SeekOrigin origin)
public void SetLength(long value)
public int Read(Byte[] buffer, int offset, int count)
public int ReadByte()
public void Write(Byte[] array, int offset, int count)
private void FlushWrite()
public void WriteByte(byte value)
}
internal System.Web.Services.Protocols.ClientTypeCache : object {
private Hashtable cache
internal object Item
internal object get_Item(Type key)
internal void Add(Type key, object value)
}
internal System.Web.Services.Protocols.CompletedAsyncResult : object {
private object asyncState
private bool completedSynchronously
public object AsyncState
public bool CompletedSynchronously
public bool IsCompleted
public WaitHandle AsyncWaitHandle
internal void .ctor(object asyncState, bool completedSynchronously)
public object get_AsyncState()
public bool get_CompletedSynchronously()
public bool get_IsCompleted()
public WaitHandle get_AsyncWaitHandle()
}
internal System.Web.Services.Protocols.ContentType : object {
internal string TextBase
internal string TextXml
internal string TextPlain
internal string TextHtml
internal string ApplicationBase
internal string ApplicationXml
internal string ApplicationSoap
internal string ApplicationOctetStream
internal string ContentEncoding
internal string GetBase(string contentType)
internal string GetMediaType(string contentType)
internal string GetCharset(string contentType)
internal string GetAction(string contentType)
private string GetParameter(string contentType, string paramName)
internal bool MatchesBase(string contentType, string baseContentType)
internal bool IsApplication(string contentType)
internal bool IsSoap(string contentType)
internal bool IsXml(string contentType)
internal bool IsHtml(string contentType)
internal string Compose(string contentType, Encoding encoding)
internal string Compose(string contentType, Encoding encoding, string action)
}
internal System.Web.Services.Protocols.DiscoveryServerProtocol : ServerProtocol {
private DiscoveryServerType serverType
private object syncRoot
internal ServerType ServerType
internal bool IsOneWay
internal LogicalMethodInfo MethodInfo
internal bool Initialize()
internal ServerType get_ServerType()
internal bool get_IsOneWay()
internal LogicalMethodInfo get_MethodInfo()
internal Object[] ReadParameters()
internal void WriteReturns(Object[] returnValues, Stream outputStream)
internal bool WriteException(Exception e, Stream outputStream)
internal void Discover()
private void RunUriFixups()
}
internal System.Web.Services.Protocols.DiscoveryServerProtocolFactory : ServerProtocolFactory {
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
internal System.Web.Services.Protocols.DiscoveryServerType : ServerType {
private ServiceDescription description
private LogicalMethodInfo methodInfo
private Hashtable schemaTable
private Hashtable wsdlTable
private DiscoveryDocument discoDoc
private List`1<Action`1<Uri>> <UriFixups>k__BackingField
public List`1<Action`1<Uri>> UriFixups
internal ServiceDescription Description
internal LogicalMethodInfo MethodInfo
internal DiscoveryDocument Disco
public List`1<Action`1<Uri>> get_UriFixups()
private void set_UriFixups(List`1<Action`1<Uri>> value)
private void AddUriFixup(Action`1<Uri> fixup)
internal void .ctor(Type type, string uri, bool excludeSchemeHostPortFromCachingKey)
internal void AddExternal(XmlSchema schema, string ns, string location)
private void AddSchemaImports(XmlSchemas schemas, string uri, ServiceDescriptionCollection descriptions)
internal XmlSchema GetSchema(string id)
internal ServiceDescription GetServiceDescription(string id)
internal ServiceDescription get_Description()
internal LogicalMethodInfo get_MethodInfo()
internal DiscoveryDocument get_Disco()
internal string CombineUris(Uri schemeHostPort, string absolutePathAndQuery)
}
internal System.Web.Services.Protocols.DocumentationServerProtocol : ServerProtocol {
private DocumentationServerType serverType
private IHttpHandler handler
private object syncRoot
private int MAX_PATH_SIZE
internal ServerType ServerType
internal bool IsOneWay
internal LogicalMethodInfo MethodInfo
internal bool Initialize()
private IHttpHandler GetCompiledPageInstance(string virtualPath, string inputFile, HttpContext context)
internal ServerType get_ServerType()
internal bool get_IsOneWay()
internal LogicalMethodInfo get_MethodInfo()
internal Object[] ReadParameters()
internal void WriteReturns(Object[] returnValues, Stream outputStream)
internal bool WriteException(Exception e, Stream outputStream)
internal void Documentation()
private void RunUriFixups()
}
internal System.Web.Services.Protocols.DocumentationServerProtocolFactory : ServerProtocolFactory {
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
internal System.Web.Services.Protocols.DocumentationServerType : ServerType {
private ServiceDescriptionCollection serviceDescriptions
private ServiceDescriptionCollection serviceDescriptionsWithPost
private XmlSchemas schemas
private XmlSchemas schemasWithPost
private LogicalMethodInfo methodInfo
private List`1<Action`1<Uri>> <UriFixups>k__BackingField
public List`1<Action`1<Uri>> UriFixups
internal LogicalMethodInfo MethodInfo
internal XmlSchemas Schemas
internal ServiceDescriptionCollection ServiceDescriptions
internal ServiceDescriptionCollection ServiceDescriptionsWithPost
internal XmlSchemas SchemasWithPost
public List`1<Action`1<Uri>> get_UriFixups()
private void set_UriFixups(List`1<Action`1<Uri>> value)
private void AddUriFixup(Action`1<Uri> fixup)
internal void .ctor(Type type, string uri, bool excludeSchemeHostPortFromCachingKey)
internal LogicalMethodInfo get_MethodInfo()
internal XmlSchemas get_Schemas()
internal ServiceDescriptionCollection get_ServiceDescriptions()
internal ServiceDescriptionCollection get_ServiceDescriptionsWithPost()
internal XmlSchemas get_SchemasWithPost()
}
public System.Web.Services.Protocols.HtmlFormParameterReader : ValueCollectionParameterReader {
internal string MimeType
public Object[] Read(HttpRequest request)
}
public System.Web.Services.Protocols.HtmlFormParameterWriter : UrlEncodedParameterWriter {
public bool UsesWriteRequest
public bool get_UsesWriteRequest()
public void InitializeRequest(WebRequest request, Object[] values)
public void WriteRequest(Stream requestStream, Object[] values)
}
internal System.Web.Services.Protocols.HttpClientMethod : object {
internal Type readerType
internal object readerInitializer
internal Type writerType
internal object writerInitializer
internal LogicalMethodInfo methodInfo
}
internal System.Web.Services.Protocols.HttpClientType : object {
private Hashtable methods
internal void .ctor(Type type)
private void AddFormatter(Hashtable formatterTypes, Type formatterType, HttpClientMethod method)
internal HttpClientMethod GetMethod(string name)
}
public System.Web.Services.Protocols.HttpGetClientProtocol : HttpSimpleClientProtocol {
protected WebRequest GetWebRequest(Uri uri)
}
internal System.Web.Services.Protocols.HttpGetServerProtocolFactory : ServerProtocolFactory {
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
public System.Web.Services.Protocols.HttpMethodAttribute : Attribute {
private Type returnFormatter
private Type parameterFormatter
public Type ReturnFormatter
public Type ParameterFormatter
public void .ctor(Type returnFormatter, Type parameterFormatter)
public Type get_ReturnFormatter()
public void set_ReturnFormatter(Type value)
public Type get_ParameterFormatter()
public void set_ParameterFormatter(Type value)
}
public System.Web.Services.Protocols.HttpPostClientProtocol : HttpSimpleClientProtocol {
protected WebRequest GetWebRequest(Uri uri)
}
internal System.Web.Services.Protocols.HttpPostLocalhostServerProtocolFactory : ServerProtocolFactory {
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
internal System.Web.Services.Protocols.HttpPostServerProtocolFactory : ServerProtocolFactory {
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
internal System.Web.Services.Protocols.HttpServerMethod : object {
internal string name
internal LogicalMethodInfo methodInfo
internal Type[] readerTypes
internal Object[] readerInitializers
internal Type writerType
internal object writerInitializer
}
internal System.Web.Services.Protocols.HttpServerProtocol : ServerProtocol {
private HttpServerMethod serverMethod
private HttpServerType serverType
private bool hasInputPayload
internal bool IsOneWay
internal LogicalMethodInfo MethodInfo
internal ServerType ServerType
protected void .ctor(bool hasInputPayload)
internal bool Initialize()
internal bool get_IsOneWay()
internal LogicalMethodInfo get_MethodInfo()
internal ServerType get_ServerType()
internal Object[] ReadParameters()
internal void WriteReturns(Object[] returnValues, Stream outputStream)
internal bool WriteException(Exception e, Stream outputStream)
internal bool AreUrlParametersSupported(LogicalMethodInfo methodInfo)
}
internal System.Web.Services.Protocols.HttpServerType : ServerType {
private Hashtable methods
internal void .ctor(Type type)
internal HttpServerMethod GetMethod(string name)
internal HttpServerMethod GetMethodIgnoreCase(string name)
}
public System.Web.Services.Protocols.HttpSimpleClientProtocol : HttpWebClientProtocol {
private HttpClientType clientType
protected object Invoke(string methodName, string requestUrl, Object[] parameters)
protected IAsyncResult BeginInvoke(string methodName, string requestUrl, Object[] parameters, AsyncCallback callback, object asyncState)
internal void InitializeAsyncRequest(WebRequest request, object internalAsyncState)
internal void AsyncBufferedSerialize(WebRequest request, Stream requestStream, object internalAsyncState)
protected object EndInvoke(IAsyncResult asyncResult)
private void InvokeAsyncCallback(IAsyncResult result)
protected void InvokeAsync(string methodName, string requestUrl, Object[] parameters, SendOrPostCallback callback)
protected void InvokeAsync(string methodName, string requestUrl, Object[] parameters, SendOrPostCallback callback, object userState)
private MimeParameterWriter GetParameterWriter(HttpClientMethod method)
private HttpClientMethod GetClientMethod(string methodName)
private object ReadResponse(HttpClientMethod method, WebResponse response, Stream responseStream)
}
public System.Web.Services.Protocols.HttpWebClientProtocol : WebClientProtocol {
private bool allowAutoRedirect
private bool enableDecompression
private CookieContainer cookieJar
private X509CertificateCollection clientCertificates
private IWebProxy proxy
private string UserAgentDefault
private string userAgent
private bool unsafeAuthenticatedConnectionSharing
public bool AllowAutoRedirect
public CookieContainer CookieContainer
public X509CertificateCollection ClientCertificates
public bool EnableDecompression
public string UserAgent
public IWebProxy Proxy
public bool UnsafeAuthenticatedConnectionSharing
internal void .ctor(HttpWebClientProtocol protocol)
public bool get_AllowAutoRedirect()
public void set_AllowAutoRedirect(bool value)
public CookieContainer get_CookieContainer()
public void set_CookieContainer(CookieContainer value)
public X509CertificateCollection get_ClientCertificates()
public bool get_EnableDecompression()
public void set_EnableDecompression(bool value)
public string get_UserAgent()
public void set_UserAgent(string value)
public IWebProxy get_Proxy()
public void set_Proxy(IWebProxy value)
protected WebRequest GetWebRequest(Uri uri)
protected WebResponse GetWebResponse(WebRequest request)
protected WebResponse GetWebResponse(WebRequest request, IAsyncResult result)
public bool get_UnsafeAuthenticatedConnectionSharing()
public void set_UnsafeAuthenticatedConnectionSharing(bool value)
protected void CancelAsync(object userState)
internal WebClientAsyncResult OperationCompleted(object userState, Object[] parameters, Exception e, bool canceled)
public bool GenerateXmlMappings(Type type, ArrayList mappings)
public Hashtable GenerateXmlMappings(Type[] types, ArrayList mappings)
}
public System.Web.Services.Protocols.InvokeCompletedEventArgs : AsyncCompletedEventArgs {
private Object[] results
public Object[] Results
internal void .ctor(Object[] results, Exception exception, bool cancelled, object userState)
public Object[] get_Results()
}
public System.Web.Services.Protocols.InvokeCompletedEventHandler : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public void Invoke(object sender, InvokeCompletedEventArgs e)
public IAsyncResult BeginInvoke(object sender, InvokeCompletedEventArgs e, AsyncCallback callback, object object)
public void EndInvoke(IAsyncResult result)
}
public System.Web.Services.Protocols.LogicalMethodInfo : object {
private MethodInfo methodInfo
private MethodInfo endMethodInfo
private ParameterInfo[] inParams
private ParameterInfo[] outParams
private ParameterInfo[] parameters
private Hashtable attributes
private Type retType
private ParameterInfo callbackParam
private ParameterInfo stateParam
private ParameterInfo resultParam
private string methodName
private bool isVoid
private Object[] emptyObjectArray
private WebServiceBindingAttribute binding
private WebMethodAttribute attribute
private MethodInfo declaration
private HashAlgorithm hash
internal WebServiceBindingAttribute Binding
internal MethodInfo Declaration
public Type DeclaringType
public string Name
public ParameterInfo AsyncResultParameter
public ParameterInfo AsyncCallbackParameter
public ParameterInfo AsyncStateParameter
public Type ReturnType
public bool IsVoid
public bool IsAsync
public ParameterInfo[] InParameters
public ParameterInfo[] OutParameters
public ParameterInfo[] Parameters
internal WebMethodAttribute MethodAttribute
public ICustomAttributeProvider CustomAttributeProvider
public ICustomAttributeProvider ReturnTypeCustomAttributeProvider
public MethodInfo MethodInfo
public MethodInfo BeginMethodInfo
public MethodInfo EndMethodInfo
internal HashAlgorithm HashAlgorithm
public void .ctor(MethodInfo methodInfo)
internal void .ctor(MethodInfo methodInfo, WebMethod webMethod)
private void .ctor(MethodInfo beginMethodInfo, MethodInfo endMethodInfo, WebMethod webMethod)
public string ToString()
public Object[] Invoke(object target, Object[] values)
public IAsyncResult BeginInvoke(object target, Object[] values, AsyncCallback callback, object asyncState)
public Object[] EndInvoke(object target, IAsyncResult asyncResult)
internal WebServiceBindingAttribute get_Binding()
internal MethodInfo get_Declaration()
public Type get_DeclaringType()
public string get_Name()
public ParameterInfo get_AsyncResultParameter()
public ParameterInfo get_AsyncCallbackParameter()
public ParameterInfo get_AsyncStateParameter()
public Type get_ReturnType()
public bool get_IsVoid()
public bool get_IsAsync()
public ParameterInfo[] get_InParameters()
public ParameterInfo[] get_OutParameters()
public ParameterInfo[] get_Parameters()
public Object[] GetCustomAttributes(Type type)
public object GetCustomAttribute(Type type)
internal WebMethodAttribute get_MethodAttribute()
public ICustomAttributeProvider get_CustomAttributeProvider()
public ICustomAttributeProvider get_ReturnTypeCustomAttributeProvider()
public MethodInfo get_MethodInfo()
public MethodInfo get_BeginMethodInfo()
public MethodInfo get_EndMethodInfo()
private ParameterInfo[] GetInParameters(MethodInfo methodInfo, ParameterInfo[] paramInfos, int start, int length, bool mustBeIn)
private ParameterInfo[] GetOutParameters(MethodInfo methodInfo, ParameterInfo[] paramInfos, int start, int length, bool mustBeOut)
private bool IsInParameter(ParameterInfo paramInfo)
private bool IsOutParameter(ParameterInfo paramInfo)
public bool IsBeginMethod(MethodInfo methodInfo)
public bool IsEndMethod(MethodInfo methodInfo)
public LogicalMethodInfo[] Create(MethodInfo[] methodInfos)
public LogicalMethodInfo[] Create(MethodInfo[] methodInfos, LogicalMethodTypes types)
internal LogicalMethodInfo[] Create(MethodInfo[] methodInfos, LogicalMethodTypes types, Hashtable declarations)
internal HashAlgorithm get_HashAlgorithm()
internal string GetKey()
internal void CheckContractOverride()
internal bool CanMerge(Type type)
}
public System.Web.Services.Protocols.LogicalMethodTypes : Enum {
public int value__
public LogicalMethodTypes Sync
public LogicalMethodTypes Async
}
public System.Web.Services.Protocols.MatchAttribute : Attribute {
private string pattern
private int group
private int capture
private bool ignoreCase
private int repeats
public string Pattern
public int Group
public int Capture
public bool IgnoreCase
public int MaxRepeats
public void .ctor(string pattern)
public string get_Pattern()
public void set_Pattern(string value)
public int get_Group()
public void set_Group(int value)
public int get_Capture()
public void set_Capture(int value)
public bool get_IgnoreCase()
public void set_IgnoreCase(bool value)
public int get_MaxRepeats()
public void set_MaxRepeats(int value)
}
internal System.Web.Services.Protocols.MatchMember : object {
private MemberInfo memberInfo
private Regex regex
private int group
private int capture
private int maxRepeats
private MatchType matchType
internal void Match(object target, string text)
private object MatchString(string text)
private object MatchClass(string text)
private Exception BadCaptureIndexException(int index, string matchName, int highestIndex)
private Exception BadGroupIndexException(int index, string matchName, int highestIndex)
internal MatchMember Reflect(MemberInfo memberInfo)
}
internal System.Web.Services.Protocols.MatchType : object {
private Type type
private MatchMember[] fields
internal Type Type
internal Type get_Type()
internal MatchType Reflect(Type type)
internal object Match(string text)
}
internal System.Web.Services.Protocols.MemberHelper : object {
private Object[] emptyObjectArray
internal void SetValue(MemberInfo memberInfo, object target, object value)
internal object GetValue(MemberInfo memberInfo, object target)
internal bool IsStatic(MemberInfo memberInfo)
internal bool CanRead(MemberInfo memberInfo)
internal bool CanWrite(MemberInfo memberInfo)
}
public System.Web.Services.Protocols.MimeFormatter : object {
public object GetInitializer(LogicalMethodInfo methodInfo)
public void Initialize(object initializer)
public Object[] GetInitializers(LogicalMethodInfo[] methodInfos)
public object GetInitializer(Type type, LogicalMethodInfo methodInfo)
public Object[] GetInitializers(Type type, LogicalMethodInfo[] methodInfos)
public MimeFormatter CreateInstance(Type type, object initializer)
}
public System.Web.Services.Protocols.MimeParameterReader : MimeFormatter {
public Object[] Read(HttpRequest request)
}
public System.Web.Services.Protocols.MimeParameterWriter : MimeFormatter {
public bool UsesWriteRequest
public Encoding RequestEncoding
public bool get_UsesWriteRequest()
public Encoding get_RequestEncoding()
public void set_RequestEncoding(Encoding value)
public string GetRequestUrl(string url, Object[] parameters)
public void InitializeRequest(WebRequest request, Object[] values)
public void WriteRequest(Stream requestStream, Object[] values)
}
public System.Web.Services.Protocols.MimeReturnReader : MimeFormatter {
public object Read(WebResponse response, Stream responseStream)
}
internal System.Web.Services.Protocols.MimeReturnWriter : MimeFormatter {
internal void Write(HttpResponse response, Stream outputStream, object returnValue)
}
internal System.Web.Services.Protocols.NopHandler : object {
public bool IsReusable
public bool get_IsReusable()
public void ProcessRequest(HttpContext context)
}
public System.Web.Services.Protocols.NopReturnReader : MimeReturnReader {
public object GetInitializer(LogicalMethodInfo methodInfo)
public void Initialize(object initializer)
public object Read(WebResponse response, Stream responseStream)
}
public System.Web.Services.Protocols.PatternMatcher : object {
private MatchType matchType
public void .ctor(Type type)
public object Match(string text)
}
internal System.Web.Services.Protocols.RequestResponseUtils : object {
internal Encoding GetEncoding(string contentType)
internal Encoding GetEncoding2(string contentType)
internal string ReadResponse(WebResponse response)
internal string ReadResponse(WebResponse response, Stream stream)
internal Stream StreamToMemoryStream(Stream stream)
internal string CreateResponseExceptionString(WebResponse response)
internal string CreateResponseExceptionString(WebResponse response, Stream stream)
internal int GetBufferSize(int contentLength)
}
internal System.Web.Services.Protocols.RuntimeUtils : object {
internal XmlDeserializationEvents GetDeserializationEvents()
private void OnUnknownAttribute(object sender, XmlAttributeEventArgs e)
internal string ElementString(XmlElement element)
internal void OnUnknownElement(object sender, XmlElementEventArgs e)
internal bool IsKnownNamespace(string ns)
internal string EscapeUri(Uri uri)
}
internal System.Web.Services.Protocols.ScalarFormatter : object {
internal string ToString(object value)
internal object FromString(string value, Type type)
private object EnumFromString(string value, Type type)
private string EnumToString(object value)
internal bool IsTypeSupported(Type type)
}
public System.Web.Services.Protocols.ServerProtocol : object {
private Type type
private HttpRequest request
private HttpResponse response
private HttpContext context
private object target
private WebMethodAttribute methodAttr
private object s_InternalSyncObject
internal object InternalSyncObject
protected internal HttpContext Context
protected internal HttpRequest Request
protected internal HttpResponse Response
internal Type Type
protected internal object Target
internal LogicalMethodInfo MethodInfo
internal ServerType ServerType
internal bool IsOneWay
internal Exception OnewayInitException
internal WebMethodAttribute MethodAttribute
internal object get_InternalSyncObject()
internal void SetContext(Type type, HttpContext context, HttpRequest request, HttpResponse response)
internal void CreateServerInstance()
internal void DisposeServerInstance()
protected internal HttpContext get_Context()
protected internal HttpRequest get_Request()
protected internal HttpResponse get_Response()
internal Type get_Type()
protected internal object get_Target()
internal bool WriteException(Exception e, Stream outputStream)
internal bool Initialize()
internal Object[] ReadParameters()
internal void WriteReturns(Object[] returns, Stream outputStream)
internal LogicalMethodInfo get_MethodInfo()
internal ServerType get_ServerType()
internal bool get_IsOneWay()
internal Exception get_OnewayInitException()
internal WebMethodAttribute get_MethodAttribute()
internal string GenerateFaultString(Exception e)
internal void SetHttpResponseStatusCode(HttpResponse httpResponse, int statusCode)
internal string GenerateFaultString(Exception e, bool htmlEscapeMessage)
private void GenerateFaultString(Exception e, StringBuilder builder)
internal void WriteOneWayResponse()
private string DefaultCreateCustomKeyForAspNetWebServiceMetadataCache(Type protocolType, Type serverType, string originalKey)
private CreateCustomKeyForAspNetWebServiceMetadataCache GetCreateCustomKeyForAspNetWebServiceMetadataCacheDelegate(Type serverType)
private string CreateKey(Type protocolType, Type serverType, bool excludeSchemeHostPort, string keySuffix)
protected void AddToCache(Type protocolType, Type serverType, object value)
internal void AddToCache(Type protocolType, Type serverType, object value, bool excludeSchemeHostPort)
protected object GetFromCache(Type protocolType, Type serverType)
internal object GetFromCache(Type protocolType, Type serverType, bool excludeSchemeHostPort)
internal bool IsCacheUnderPressure(Type protocolType, Type serverType)
}
public System.Web.Services.Protocols.ServerProtocolFactory : object {
internal ServerProtocol Create(Type type, HttpContext context, HttpRequest request, HttpResponse response, Boolean& abortProcessing)
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
public System.Web.Services.Protocols.ServerType : object {
private Type type
internal Type Type
internal Evidence Evidence
public void .ctor(Type type)
internal Type get_Type()
internal Evidence get_Evidence()
}
internal System.Web.Services.Protocols.Soap11ServerProtocolHelper : SoapServerProtocolHelper {
internal SoapProtocolVersion Version
internal WebServiceProtocols Protocol
internal string EnvelopeNs
internal string EncodingNs
internal string HttpContentType
internal void .ctor(SoapServerProtocol protocol)
internal void .ctor(SoapServerProtocol protocol, string requestNamespace)
internal SoapProtocolVersion get_Version()
internal WebServiceProtocols get_Protocol()
internal string get_EnvelopeNs()
internal string get_EncodingNs()
internal string get_HttpContentType()
internal SoapServerMethod RouteRequest()
internal void WriteFault(XmlWriter writer, SoapException soapException, HttpStatusCode statusCode)
private XmlQualifiedName TranslateFaultCode(XmlQualifiedName code)
}
public System.Web.Services.Protocols.Soap12FaultCodes : object {
public XmlQualifiedName ReceiverFaultCode
public XmlQualifiedName SenderFaultCode
public XmlQualifiedName VersionMismatchFaultCode
public XmlQualifiedName MustUnderstandFaultCode
public XmlQualifiedName DataEncodingUnknownFaultCode
public XmlQualifiedName RpcProcedureNotPresentFaultCode
public XmlQualifiedName RpcBadArgumentsFaultCode
public XmlQualifiedName EncodingMissingIdFaultCode
public XmlQualifiedName EncodingUntypedValueFaultCode
internal XmlQualifiedName UnsupportedMediaTypeFaultCode
internal XmlQualifiedName MethodNotAllowed
}
internal System.Web.Services.Protocols.Soap12ServerProtocolHelper : SoapServerProtocolHelper {
internal SoapProtocolVersion Version
internal WebServiceProtocols Protocol
internal string EnvelopeNs
internal string EncodingNs
internal string HttpContentType
internal void .ctor(SoapServerProtocol protocol)
internal void .ctor(SoapServerProtocol protocol, string requestNamespace)
internal SoapProtocolVersion get_Version()
internal WebServiceProtocols get_Protocol()
internal string get_EnvelopeNs()
internal string get_EncodingNs()
internal string get_HttpContentType()
internal SoapServerMethod RouteRequest()
internal void WriteFault(XmlWriter writer, SoapException soapException, HttpStatusCode statusCode)
private void WriteFaultCodeValue(XmlWriter writer, XmlQualifiedName code, SoapFaultSubCode subcode)
private XmlQualifiedName TranslateFaultCode(XmlQualifiedName code)
}
public System.Web.Services.Protocols.SoapClientMessage : SoapMessage {
private SoapClientMethod method
private SoapHttpClientProtocol protocol
private string url
internal SoapExtension[] initializedExtensions
public bool OneWay
public SoapHttpClientProtocol Client
public LogicalMethodInfo MethodInfo
public string Url
public string Action
public SoapProtocolVersion SoapVersion
internal SoapClientMethod Method
internal void .ctor(SoapHttpClientProtocol protocol, SoapClientMethod method, string url)
public bool get_OneWay()
public SoapHttpClientProtocol get_Client()
public LogicalMethodInfo get_MethodInfo()
public string get_Url()
public string get_Action()
public SoapProtocolVersion get_SoapVersion()
internal SoapClientMethod get_Method()
protected void EnsureOutStage()
protected void EnsureInStage()
}
internal System.Web.Services.Protocols.SoapClientMethod : object {
internal XmlSerializer returnSerializer
internal XmlSerializer parameterSerializer
internal XmlSerializer inHeaderSerializer
internal XmlSerializer outHeaderSerializer
internal string action
internal LogicalMethodInfo methodInfo
internal SoapHeaderMapping[] inHeaderMappings
internal SoapHeaderMapping[] outHeaderMappings
internal SoapReflectedExtension[] extensions
internal Object[] extensionInitializers
internal bool oneWay
internal bool rpc
internal SoapBindingUse use
internal SoapParameterStyle paramStyle
}
internal System.Web.Services.Protocols.SoapClientType : object {
private Hashtable methods
private WebServiceBindingAttribute binding
internal SoapReflectedExtension[] HighPriExtensions
internal SoapReflectedExtension[] LowPriExtensions
internal Object[] HighPriExtensionInitializers
internal Object[] LowPriExtensionInitializers
internal string serviceNamespace
internal bool serviceDefaultIsEncoded
internal WebServiceBindingAttribute Binding
internal void .ctor(Type type)
internal void GenerateXmlMappings(Type type, ArrayList soapMethodList, string serviceNamespace, bool serviceDefaultIsEncoded, ArrayList mappings)
internal SoapClientMethod GetMethod(string name)
internal WebServiceBindingAttribute get_Binding()
}
public System.Web.Services.Protocols.SoapDocumentMethodAttribute : Attribute {
private string action
private string requestName
private string responseName
private string requestNamespace
private string responseNamespace
private bool oneWay
private SoapBindingUse use
private SoapParameterStyle style
private string binding
public string Action
public bool OneWay
public string RequestNamespace
public string ResponseNamespace
public string RequestElementName
public string ResponseElementName
public SoapBindingUse Use
public SoapParameterStyle ParameterStyle
public string Binding
public void .ctor(string action)
public string get_Action()
public void set_Action(string value)
public bool get_OneWay()
public void set_OneWay(bool value)
public string get_RequestNamespace()
public void set_RequestNamespace(string value)
public string get_ResponseNamespace()
public void set_ResponseNamespace(string value)
public string get_RequestElementName()
public void set_RequestElementName(string value)
public string get_ResponseElementName()
public void set_ResponseElementName(string value)
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
public SoapParameterStyle get_ParameterStyle()
public void set_ParameterStyle(SoapParameterStyle value)
public string get_Binding()
public void set_Binding(string value)
}
public System.Web.Services.Protocols.SoapDocumentServiceAttribute : Attribute {
private SoapBindingUse use
private SoapParameterStyle paramStyle
private SoapServiceRoutingStyle routingStyle
public SoapBindingUse Use
public SoapParameterStyle ParameterStyle
public SoapServiceRoutingStyle RoutingStyle
public void .ctor(SoapBindingUse use)
public void .ctor(SoapBindingUse use, SoapParameterStyle paramStyle)
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
public SoapParameterStyle get_ParameterStyle()
public void set_ParameterStyle(SoapParameterStyle value)
public SoapServiceRoutingStyle get_RoutingStyle()
public void set_RoutingStyle(SoapServiceRoutingStyle value)
}
public System.Web.Services.Protocols.SoapException : SystemException {
private XmlQualifiedName code
private string actor
private string role
private XmlNode detail
private SoapFaultSubCode subCode
private string lang
public XmlQualifiedName ServerFaultCode
public XmlQualifiedName ClientFaultCode
public XmlQualifiedName VersionMismatchFaultCode
public XmlQualifiedName MustUnderstandFaultCode
public XmlQualifiedName DetailElementName
public string Actor
public XmlQualifiedName Code
public XmlNode Detail
public string Lang
public string Node
public string Role
public SoapFaultSubCode SubCode
public bool IsServerFaultCode(XmlQualifiedName code)
public bool IsClientFaultCode(XmlQualifiedName code)
public bool IsVersionMismatchFaultCode(XmlQualifiedName code)
public bool IsMustUnderstandFaultCode(XmlQualifiedName code)
public void .ctor(string message, XmlQualifiedName code, string actor)
public void .ctor(string message, XmlQualifiedName code, string actor, Exception innerException)
public void .ctor(string message, XmlQualifiedName code)
public void .ctor(string message, XmlQualifiedName code, Exception innerException)
public void .ctor(string message, XmlQualifiedName code, string actor, XmlNode detail)
public void .ctor(string message, XmlQualifiedName code, string actor, XmlNode detail, Exception innerException)
public void .ctor(string message, XmlQualifiedName code, SoapFaultSubCode subCode)
public void .ctor(string message, XmlQualifiedName code, string actor, string role, XmlNode detail, SoapFaultSubCode subCode, Exception innerException)
public void .ctor(string message, XmlQualifiedName code, string actor, string role, string lang, XmlNode detail, SoapFaultSubCode subCode, Exception innerException)
protected void .ctor(SerializationInfo info, StreamingContext context)
public string get_Actor()
public XmlQualifiedName get_Code()
public XmlNode get_Detail()
public string get_Lang()
public string get_Node()
public string get_Role()
public SoapFaultSubCode get_SubCode()
internal void ClearSubCode()
public void GetObjectData(SerializationInfo info, StreamingContext context)
private SoapException CreateSuppressedException(SoapProtocolVersion soapVersion, string message, Exception innerException)
internal SoapException Create(SoapProtocolVersion soapVersion, string message, XmlQualifiedName code, string actor, string role, XmlNode detail, SoapFaultSubCode subCode, Exception innerException)
internal SoapException Create(SoapProtocolVersion soapVersion, string message, XmlQualifiedName code, Exception innerException)
}
public System.Web.Services.Protocols.SoapExtension : object {
public object GetInitializer(LogicalMethodInfo methodInfo, SoapExtensionAttribute attribute)
public object GetInitializer(Type serviceType)
public void Initialize(object initializer)
public void ProcessMessage(SoapMessage message)
public Stream ChainStream(Stream stream)
}
public System.Web.Services.Protocols.SoapExtensionAttribute : Attribute {
public Type ExtensionType
public int Priority
public Type get_ExtensionType()
public int get_Priority()
public void set_Priority(int value)
}
internal System.Web.Services.Protocols.SoapExtensionStream : Stream {
internal Stream innerStream
private bool hasWritten
private bool streamReady
public bool CanRead
public bool CanSeek
public bool CanWrite
internal bool HasWritten
public long Length
public long Position
private bool EnsureStreamReady()
public bool get_CanRead()
public bool get_CanSeek()
public bool get_CanWrite()
internal bool get_HasWritten()
public long get_Length()
public long get_Position()
public void set_Position(long value)
protected void Dispose(bool disposing)
public void Flush()
public IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
public int EndRead(IAsyncResult asyncResult)
public IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
public void EndWrite(IAsyncResult asyncResult)
public long Seek(long offset, SeekOrigin origin)
public void SetLength(long value)
public int Read(Byte[] buffer, int offset, int count)
public int ReadByte()
public void Write(Byte[] buffer, int offset, int count)
public void WriteByte(byte value)
internal void SetInnerStream(Stream stream)
internal void SetStreamReady()
}
public System.Web.Services.Protocols.SoapFaultSubCode : object {
private XmlQualifiedName code
private SoapFaultSubCode subCode
public XmlQualifiedName Code
public SoapFaultSubCode SubCode
public void .ctor(XmlQualifiedName code)
public void .ctor(XmlQualifiedName code, SoapFaultSubCode subCode)
public XmlQualifiedName get_Code()
public SoapFaultSubCode get_SubCode()
}
public System.Web.Services.Protocols.SoapHeader : object {
private string actor
private bool mustUnderstand
private bool didUnderstand
private bool relay
internal SoapProtocolVersion version
public string EncodedMustUnderstand
public string EncodedMustUnderstand12
public bool MustUnderstand
internal bool InternalMustUnderstand
public string Actor
public string Role
internal string InternalActor
public bool DidUnderstand
public string EncodedRelay
public bool Relay
internal bool InternalRelay
public string get_EncodedMustUnderstand()
public void set_EncodedMustUnderstand(string value)
public string get_EncodedMustUnderstand12()
public void set_EncodedMustUnderstand12(string value)
public bool get_MustUnderstand()
public void set_MustUnderstand(bool value)
internal bool get_InternalMustUnderstand()
internal void set_InternalMustUnderstand(bool value)
public string get_Actor()
public void set_Actor(string value)
public string get_Role()
public void set_Role(string value)
internal string get_InternalActor()
internal void set_InternalActor(string value)
public bool get_DidUnderstand()
public void set_DidUnderstand(bool value)
public string get_EncodedRelay()
public void set_EncodedRelay(string value)
public bool get_Relay()
public void set_Relay(bool value)
internal bool get_InternalRelay()
internal void set_InternalRelay(bool value)
}
public System.Web.Services.Protocols.SoapHeaderAttribute : Attribute {
private string memberName
private SoapHeaderDirection direction
private bool required
public string MemberName
public SoapHeaderDirection Direction
public bool Required
public void .ctor(string memberName)
public string get_MemberName()
public void set_MemberName(string value)
public SoapHeaderDirection get_Direction()
public void set_Direction(SoapHeaderDirection value)
public bool get_Required()
public void set_Required(bool value)
}
internal System.Web.Services.Protocols.SoapHeaderAttributeComparer : object {
public int Compare(object x, object y)
}
public System.Web.Services.Protocols.SoapHeaderCollection : CollectionBase {
public SoapHeader Item
public SoapHeader get_Item(int index)
public void set_Item(int index, SoapHeader value)
public int Add(SoapHeader header)
public void Insert(int index, SoapHeader header)
public int IndexOf(SoapHeader header)
public bool Contains(SoapHeader header)
public void Remove(SoapHeader header)
public void CopyTo(SoapHeader[] array, int index)
}
public System.Web.Services.Protocols.SoapHeaderDirection : Enum {
public int value__
public SoapHeaderDirection In
public SoapHeaderDirection Out
public SoapHeaderDirection InOut
public SoapHeaderDirection Fault
}
public System.Web.Services.Protocols.SoapHeaderException : SoapException {
public void .ctor(string message, XmlQualifiedName code, string actor)
public void .ctor(string message, XmlQualifiedName code, string actor, Exception innerException)
public void .ctor(string message, XmlQualifiedName code)
public void .ctor(string message, XmlQualifiedName code, Exception innerException)
public void .ctor(string message, XmlQualifiedName code, string actor, string role, SoapFaultSubCode subCode, Exception innerException)
public void .ctor(string message, XmlQualifiedName code, string actor, string role, string lang, SoapFaultSubCode subCode, Exception innerException)
protected void .ctor(SerializationInfo info, StreamingContext context)
}
public System.Web.Services.Protocols.SoapHeaderHandling : object {
private SoapHeaderCollection unknownHeaders
private SoapHeaderCollection unreferencedHeaders
private int currentThread
private string envelopeNS
private void OnUnknownElement(object sender, XmlElementEventArgs e)
private void OnUnreferencedObject(object sender, UnreferencedObjectEventArgs e)
public string ReadHeaders(XmlReader reader, XmlSerializer serializer, SoapHeaderCollection headers, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, string envelopeNS, string encodingStyle, bool checkRequiredHeaders)
public void WriteHeaders(XmlWriter writer, XmlSerializer serializer, SoapHeaderCollection headers, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, bool isEncoded, string defaultNS, bool serviceDefaultIsEncoded, string envelopeNS)
public void WriteUnknownHeaders(XmlWriter writer, SoapHeaderCollection headers, string envelopeNS)
public void SetHeaderMembers(SoapHeaderCollection headers, object target, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, bool client)
public void GetHeaderMembers(SoapHeaderCollection headers, object target, SoapHeaderMapping[] mappings, SoapHeaderDirection direction, bool client)
public void EnsureHeadersUnderstood(SoapHeaderCollection headers)
private int FindMapping(SoapHeaderMapping[] mappings, SoapHeader header, SoapHeaderDirection direction)
private string GetHeaderElementName(Type headerType)
private string GetHeaderElementName(SoapHeader header)
}
public System.Web.Services.Protocols.SoapHeaderMapping : object {
internal Type headerType
internal bool repeats
internal bool custom
internal SoapHeaderDirection direction
internal MemberInfo memberInfo
public Type HeaderType
public bool Repeats
public bool Custom
public SoapHeaderDirection Direction
public MemberInfo MemberInfo
public Type get_HeaderType()
public bool get_Repeats()
public bool get_Custom()
public SoapHeaderDirection get_Direction()
public MemberInfo get_MemberInfo()
}
public System.Web.Services.Protocols.SoapHttpClientProtocol : HttpWebClientProtocol {
private SoapClientType clientType
private SoapProtocolVersion version
public SoapProtocolVersion SoapVersion
private string EnvelopeNs
private string EncodingNs
private string HttpContentType
public void Discover()
protected WebRequest GetWebRequest(Uri uri)
public SoapProtocolVersion get_SoapVersion()
public void set_SoapVersion(SoapProtocolVersion value)
protected XmlWriter GetWriterForMessage(SoapClientMessage message, int bufferSize)
protected XmlReader GetReaderForMessage(SoapClientMessage message, int bufferSize)
protected Object[] Invoke(string methodName, Object[] parameters)
protected IAsyncResult BeginInvoke(string methodName, Object[] parameters, AsyncCallback callback, object asyncState)
internal void InitializeAsyncRequest(WebRequest request, object internalAsyncState)
internal void AsyncBufferedSerialize(WebRequest request, Stream requestStream, object internalAsyncState)
protected Object[] EndInvoke(IAsyncResult asyncResult)
private void InvokeAsyncCallback(IAsyncResult result)
protected void InvokeAsync(string methodName, Object[] parameters, SendOrPostCallback callback)
protected void InvokeAsync(string methodName, Object[] parameters, SendOrPostCallback callback, object userState)
private Array CombineExtensionsHelper(Array array1, Array array2, Array array3, Type elementType)
private string get_EnvelopeNs()
private string get_EncodingNs()
private string get_HttpContentType()
private SoapClientMessage BeforeSerialize(WebRequest request, string methodName, Object[] parameters)
private void Serialize(SoapClientMessage message)
private Object[] ReadResponse(SoapClientMessage message, WebResponse response, Stream responseStream, bool asyncCall)
private SoapException ReadSoapException(XmlReader reader)
private XmlQualifiedName ReadSoap12FaultCode(XmlReader reader, SoapFaultSubCode& subcode)
private SoapFaultSubCode ReadSoap12FaultCodesRecursive(XmlReader reader, int depth)
private XmlQualifiedName ReadFaultCode(XmlReader reader)
}
public System.Web.Services.Protocols.SoapMessage : object {
private SoapMessageStage stage
private SoapHeaderCollection headers
private Stream stream
private SoapExtensionStream extensionStream
private string contentType
private string contentEncoding
private Object[] parameterValues
private SoapException exception
public bool OneWay
public SoapException Exception
public LogicalMethodInfo MethodInfo
public SoapHeaderCollection Headers
public Stream Stream
public string ContentType
public string ContentEncoding
public SoapMessageStage Stage
public string Url
public string Action
public SoapProtocolVersion SoapVersion
internal void SetParameterValues(Object[] parameterValues)
internal Object[] GetParameterValues()
public bool get_OneWay()
public object GetInParameterValue(int index)
public object GetOutParameterValue(int index)
public object GetReturnValue()
protected void EnsureOutStage()
protected void EnsureInStage()
private void EnsureNoException()
public SoapException get_Exception()
public void set_Exception(SoapException value)
public LogicalMethodInfo get_MethodInfo()
protected void EnsureStage(SoapMessageStage stage)
public SoapHeaderCollection get_Headers()
internal void SetStream(Stream stream)
internal void SetExtensionStream(SoapExtensionStream extensionStream)
public Stream get_Stream()
public string get_ContentType()
public void set_ContentType(string value)
public string get_ContentEncoding()
public void set_ContentEncoding(string value)
public SoapMessageStage get_Stage()
internal void SetStage(SoapMessageStage stage)
public string get_Url()
public string get_Action()
public SoapProtocolVersion get_SoapVersion()
internal SoapExtension[] InitializeExtensions(SoapReflectedExtension[] reflectedExtensions, Object[] extensionInitializers)
internal void InitExtensionStreamChain(SoapExtension[] extensions)
internal void RunExtensions(SoapExtension[] extensions, bool throwOnException)
}
public System.Web.Services.Protocols.SoapMessageStage : Enum {
public int value__
public SoapMessageStage BeforeSerialize
public SoapMessageStage AfterSerialize
public SoapMessageStage BeforeDeserialize
public SoapMessageStage AfterDeserialize
}
public System.Web.Services.Protocols.SoapParameterStyle : Enum {
public int value__
public SoapParameterStyle Default
public SoapParameterStyle Bare
public SoapParameterStyle Wrapped
}
public System.Web.Services.Protocols.SoapProtocolVersion : Enum {
public int value__
public SoapProtocolVersion Default
public SoapProtocolVersion Soap11
public SoapProtocolVersion Soap12
}
internal System.Web.Services.Protocols.SoapReflectedExtension : object {
private Type type
private SoapExtensionAttribute attribute
private int priority
internal void .ctor(Type type, SoapExtensionAttribute attribute)
internal void .ctor(Type type, SoapExtensionAttribute attribute, int priority)
internal SoapExtension CreateInstance(object initializer)
internal object GetInitializer(LogicalMethodInfo methodInfo)
internal object GetInitializer(Type serviceType)
internal Object[] GetInitializers(LogicalMethodInfo methodInfo, SoapReflectedExtension[] extensions)
internal Object[] GetInitializers(Type serviceType, SoapReflectedExtension[] extensions)
public int CompareTo(object o)
}
internal System.Web.Services.Protocols.SoapReflectedHeader : object {
internal Type headerType
internal MemberInfo memberInfo
internal SoapHeaderDirection direction
internal bool repeats
internal bool custom
}
internal System.Web.Services.Protocols.SoapReflectedMethod : object {
internal LogicalMethodInfo methodInfo
internal string action
internal string name
internal XmlMembersMapping requestMappings
internal XmlMembersMapping responseMappings
internal XmlMembersMapping inHeaderMappings
internal XmlMembersMapping outHeaderMappings
internal SoapReflectedHeader[] headers
internal SoapReflectedExtension[] extensions
internal bool oneWay
internal bool rpc
internal SoapBindingUse use
internal SoapParameterStyle paramStyle
internal WebServiceBindingAttribute binding
internal XmlQualifiedName requestElementName
internal XmlQualifiedName portType
internal bool IsClaimsConformance
internal bool get_IsClaimsConformance()
}
internal System.Web.Services.Protocols.SoapReflector : object {
internal bool ServiceDefaultIsEncoded(Type type)
internal bool ServiceDefaultIsEncoded(object soapServiceAttribute)
internal string GetEncodedNamespace(string ns, bool serviceDefaultIsEncoded)
internal string GetLiteralNamespace(string ns, bool serviceDefaultIsEncoded)
internal SoapReflectionImporter CreateSoapImporter(string defaultNs, bool serviceDefaultIsEncoded)
internal XmlReflectionImporter CreateXmlImporter(string defaultNs, bool serviceDefaultIsEncoded)
internal void IncludeTypes(LogicalMethodInfo[] methods, SoapReflectionImporter importer)
internal void IncludeTypes(LogicalMethodInfo method, SoapReflectionImporter importer)
internal object GetSoapMethodAttribute(LogicalMethodInfo methodInfo)
internal object GetSoapServiceAttribute(Type type)
internal SoapServiceRoutingStyle GetSoapServiceRoutingStyle(object soapServiceAttribute)
internal string GetSoapMethodBinding(LogicalMethodInfo method)
internal SoapReflectedMethod ReflectMethod(LogicalMethodInfo methodInfo, bool client, XmlReflectionImporter xmlImporter, SoapReflectionImporter soapImporter, string defaultNs)
private XmlMembersMapping ImportMembersMapping(XmlReflectionImporter xmlImporter, SoapReflectionImporter soapImporter, bool serviceDefaultIsEncoded, bool rpc, SoapBindingUse use, SoapParameterStyle paramStyle, string elementName, string elementNamespace, bool nsIsDefault, XmlReflectionMember[] members, bool validate, bool openModel, string key, bool writeAccess)
private Exception HeaderException(string memberName, Type declaringType, string description)
private SoapParameterInfo[] ReflectParameters(ParameterInfo[] paramInfos, string ns)
private string GetDefaultAction(string defaultNs, LogicalMethodInfo methodInfo)
}
public System.Web.Services.Protocols.SoapRpcMethodAttribute : Attribute {
private string action
private string requestName
private string responseName
private string requestNamespace
private string responseNamespace
private bool oneWay
private string binding
private SoapBindingUse use
public string Action
public string Binding
public bool OneWay
public string RequestNamespace
public string ResponseNamespace
public string RequestElementName
public string ResponseElementName
public SoapBindingUse Use
public void .ctor(string action)
public string get_Action()
public void set_Action(string value)
public string get_Binding()
public void set_Binding(string value)
public bool get_OneWay()
public void set_OneWay(bool value)
public string get_RequestNamespace()
public void set_RequestNamespace(string value)
public string get_ResponseNamespace()
public void set_ResponseNamespace(string value)
public string get_RequestElementName()
public void set_RequestElementName(string value)
public string get_ResponseElementName()
public void set_ResponseElementName(string value)
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
}
public System.Web.Services.Protocols.SoapRpcServiceAttribute : Attribute {
private SoapServiceRoutingStyle routingStyle
private SoapBindingUse use
public SoapServiceRoutingStyle RoutingStyle
public SoapBindingUse Use
public SoapServiceRoutingStyle get_RoutingStyle()
public void set_RoutingStyle(SoapServiceRoutingStyle value)
public SoapBindingUse get_Use()
public void set_Use(SoapBindingUse value)
}
public System.Web.Services.Protocols.SoapServerMessage : SoapMessage {
private SoapServerProtocol protocol
internal SoapExtension[] highPriConfigExtensions
internal SoapExtension[] otherExtensions
internal SoapExtension[] allExtensions
public bool OneWay
public string Url
public string Action
public SoapProtocolVersion SoapVersion
public object Server
public LogicalMethodInfo MethodInfo
internal void .ctor(SoapServerProtocol protocol)
public bool get_OneWay()
public string get_Url()
public string get_Action()
public SoapProtocolVersion get_SoapVersion()
public object get_Server()
public LogicalMethodInfo get_MethodInfo()
protected void EnsureOutStage()
protected void EnsureInStage()
}
public System.Web.Services.Protocols.SoapServerMethod : object {
internal LogicalMethodInfo methodInfo
internal XmlSerializer returnSerializer
internal XmlSerializer parameterSerializer
internal XmlSerializer inHeaderSerializer
internal XmlSerializer outHeaderSerializer
internal SoapHeaderMapping[] inHeaderMappings
internal SoapHeaderMapping[] outHeaderMappings
internal SoapReflectedExtension[] extensions
internal Object[] extensionInitializers
internal string action
internal bool oneWay
internal bool rpc
internal SoapBindingUse use
internal SoapParameterStyle paramStyle
internal WsiProfiles wsiClaims
public LogicalMethodInfo MethodInfo
public XmlSerializer ReturnSerializer
public XmlSerializer ParameterSerializer
public XmlSerializer InHeaderSerializer
public XmlSerializer OutHeaderSerializer
public SoapHeaderMapping[] InHeaderMappings
public SoapHeaderMapping[] OutHeaderMappings
public string Action
public bool OneWay
public bool Rpc
public SoapBindingUse BindingUse
public SoapParameterStyle ParameterStyle
public WsiProfiles WsiClaims
public void .ctor(Type serverType, LogicalMethodInfo methodInfo)
public LogicalMethodInfo get_MethodInfo()
public XmlSerializer get_ReturnSerializer()
public XmlSerializer get_ParameterSerializer()
public XmlSerializer get_InHeaderSerializer()
public XmlSerializer get_OutHeaderSerializer()
public SoapHeaderMapping[] get_InHeaderMappings()
public SoapHeaderMapping[] get_OutHeaderMappings()
public string get_Action()
public bool get_OneWay()
public bool get_Rpc()
public SoapBindingUse get_BindingUse()
public SoapParameterStyle get_ParameterStyle()
public WsiProfiles get_WsiClaims()
private Evidence GetServerTypeEvidence(Type type)
private List`1<XmlMapping> GetXmlMappingsForMethod(SoapReflectedMethod soapMethod)
private void ImportReflectedMethod(SoapReflectedMethod soapMethod)
private void ImportHeaderSerializers(SoapReflectedMethod soapMethod)
private void ImportSerializers(SoapReflectedMethod soapMethod, Evidence serverEvidence)
}
public System.Web.Services.Protocols.SoapServerProtocol : ServerProtocol {
private SoapServerType serverType
private SoapServerMethod serverMethod
private SoapServerMessage message
private bool isOneWay
private Exception onewayInitException
private SoapProtocolVersion version
private WebServiceProtocols protocolsSupported
private SoapServerProtocolHelper helper
internal ServerType ServerType
internal LogicalMethodInfo MethodInfo
internal SoapServerMethod ServerMethod
internal SoapServerMessage Message
internal bool IsOneWay
internal Exception OnewayInitException
internal SoapProtocolVersion Version
protected XmlWriter GetWriterForMessage(SoapServerMessage message, int bufferSize)
protected XmlReader GetReaderForMessage(SoapServerMessage message, int bufferSize)
internal bool Initialize()
protected SoapExtension[] ModifyInitializedExtensions(PriorityGroup group, SoapExtension[] extensions)
protected SoapServerMethod RouteRequest(SoapServerMessage message)
private void GuessVersion()
internal bool IsSupported(WebServiceProtocols protocol)
internal ServerType get_ServerType()
internal LogicalMethodInfo get_MethodInfo()
internal SoapServerMethod get_ServerMethod()
internal SoapServerMessage get_Message()
internal bool get_IsOneWay()
internal Exception get_OnewayInitException()
internal SoapProtocolVersion get_Version()
internal void CreateServerInstance()
private void SetHelper(SoapServerProtocolHelper helper)
private Array CombineExtensionsHelper(Array array1, Array array2, Type elementType)
private void CheckHelperVersion()
internal Object[] ReadParameters()
internal void WriteReturns(Object[] returnValues, Stream outputStream)
internal bool WriteException(Exception e, Stream outputStream)
private bool WriteException_TryWriteFault(SoapServerMessage message, Stream outputStream, HttpStatusCode statusCode, bool disableExtensions)
internal SoapUnknownHeader CreateUpgradeHeader()
private XmlElement CreateUpgradeEnvelope(XmlDocument doc, string prefix, string envelopeNs)
internal XmlReader GetXmlReader()
}
public System.Web.Services.Protocols.SoapServerProtocolFactory : ServerProtocolFactory {
protected ServerProtocol CreateIfRequestCompatible(HttpRequest request)
}
internal System.Web.Services.Protocols.SoapServerProtocolHelper : object {
private SoapServerProtocol protocol
private string requestNamespace
internal SoapProtocolVersion Version
internal WebServiceProtocols Protocol
internal string EnvelopeNs
internal string EncodingNs
internal string HttpContentType
internal string RequestNamespace
protected SoapServerProtocol ServerProtocol
protected SoapServerType ServerType
protected void .ctor(SoapServerProtocol protocol)
protected void .ctor(SoapServerProtocol protocol, string requestNamespace)
internal SoapServerProtocolHelper GetHelper(SoapServerProtocol protocol, string envelopeNs)
internal HttpStatusCode SetResponseErrorCode(HttpResponse response, SoapException soapException)
internal void WriteFault(XmlWriter writer, SoapException soapException, HttpStatusCode statusCode)
internal SoapServerMethod RouteRequest()
internal SoapProtocolVersion get_Version()
internal WebServiceProtocols get_Protocol()
internal string get_EnvelopeNs()
internal string get_EncodingNs()
internal string get_HttpContentType()
internal string get_RequestNamespace()
protected SoapServerProtocol get_ServerProtocol()
protected SoapServerType get_ServerType()
protected XmlQualifiedName GetRequestElement()
}
public System.Web.Services.Protocols.SoapServerType : ServerType {
private Hashtable methods
private Hashtable duplicateMethods
internal SoapReflectedExtension[] HighPriExtensions
internal SoapReflectedExtension[] LowPriExtensions
internal Object[] HighPriExtensionInitializers
internal Object[] LowPriExtensionInitializers
internal string serviceNamespace
internal bool serviceDefaultIsEncoded
internal bool routingOnSoapAction
internal WebServiceProtocols protocolsSupported
public string ServiceNamespace
public bool ServiceDefaultIsEncoded
public bool ServiceRoutingOnSoapAction
public string get_ServiceNamespace()
public bool get_ServiceDefaultIsEncoded()
public bool get_ServiceRoutingOnSoapAction()
public void .ctor(Type type, WebServiceProtocols protocolsSupported)
public SoapServerMethod GetMethod(object key)
public SoapServerMethod GetDuplicateMethod(object key)
}
public System.Web.Services.Protocols.SoapServiceRoutingStyle : Enum {
public int value__
public SoapServiceRoutingStyle SoapAction
public SoapServiceRoutingStyle RequestElement
}
public System.Web.Services.Protocols.SoapUnknownHeader : SoapHeader {
private XmlElement element
public XmlElement Element
internal bool InternalMustUnderstand
internal string InternalActor
internal bool InternalRelay
public XmlElement get_Element()
public void set_Element(XmlElement value)
internal bool get_InternalMustUnderstand()
internal void set_InternalMustUnderstand(bool value)
internal string get_InternalActor()
internal void set_InternalActor(string value)
internal bool get_InternalRelay()
internal void set_InternalRelay(bool value)
private string GetElementAttribute(string name, string ns, XmlElement element)
}
internal System.Web.Services.Protocols.SyncSessionHandler : SyncSessionlessHandler {
internal void .ctor(ServerProtocol protocol)
}
internal System.Web.Services.Protocols.SyncSessionlessHandler : WebServiceHandler {
public bool IsReusable
internal void .ctor(ServerProtocol protocol)
public bool get_IsReusable()
public void ProcessRequest(HttpContext context)
}
public System.Web.Services.Protocols.TextReturnReader : MimeReturnReader {
private PatternMatcher matcher
public void Initialize(object o)
public object GetInitializer(LogicalMethodInfo methodInfo)
public object Read(WebResponse response, Stream responseStream)
}
internal System.Web.Services.Protocols.UnsupportedRequestProtocol : ServerProtocol {
private int httpCode
internal int HttpCode
internal bool IsOneWay
internal LogicalMethodInfo MethodInfo
internal ServerType ServerType
internal void .ctor(int httpCode)
internal int get_HttpCode()
internal bool Initialize()
internal bool get_IsOneWay()
internal LogicalMethodInfo get_MethodInfo()
internal ServerType get_ServerType()
internal Object[] ReadParameters()
internal void WriteReturns(Object[] returnValues, Stream outputStream)
internal bool WriteException(Exception e, Stream outputStream)
}
public System.Web.Services.Protocols.UrlEncodedParameterWriter : MimeParameterWriter {
private ParameterInfo[] paramInfos
private int numberEncoded
private Encoding encoding
public Encoding RequestEncoding
public Encoding get_RequestEncoding()
public void set_RequestEncoding(Encoding value)
public object GetInitializer(LogicalMethodInfo methodInfo)
public void Initialize(object initializer)
protected void Encode(TextWriter writer, Object[] values)
protected void Encode(TextWriter writer, string name, object value)
private string UrlEncode(string value)
}
internal System.Web.Services.Protocols.UrlEncoder : object {
private int Max16BitUtf8SequenceLength
internal Char[] HexUpperChars
internal string EscapeString(string s, Encoding e)
internal string UrlEscapeString(string s, Encoding e)
private string EscapeStringInternal(string s, Encoding e, bool escapeUriStuff)
internal string UrlEscapeStringUnicode(string s)
private void HexEscape8(StringBuilder sb, char c)
private void HexEscape16(StringBuilder sb, char c)
private bool IsSafe(char ch)
}
public System.Web.Services.Protocols.UrlParameterReader : ValueCollectionParameterReader {
public Object[] Read(HttpRequest request)
}
public System.Web.Services.Protocols.UrlParameterWriter : UrlEncodedParameterWriter {
public string GetRequestUrl(string url, Object[] parameters)
}
internal System.Web.Services.Protocols.UserToken : object {
private SendOrPostCallback callback
private object userState
internal SendOrPostCallback Callback
internal object UserState
internal void .ctor(SendOrPostCallback callback, object userState)
internal SendOrPostCallback get_Callback()
internal object get_UserState()
}
public System.Web.Services.Protocols.ValueCollectionParameterReader : MimeParameterReader {
private ParameterInfo[] paramInfos
public void Initialize(object o)
public object GetInitializer(LogicalMethodInfo methodInfo)
protected Object[] Read(NameValueCollection collection)
public bool IsSupported(LogicalMethodInfo methodInfo)
public bool IsSupported(ParameterInfo paramInfo)
}
public System.Web.Services.Protocols.WebClientAsyncResult : object {
private object userAsyncState
private bool completedSynchronously
private bool isCompleted
private ManualResetEvent modreq(System.Runtime.CompilerServices.IsVolatile) manualResetEvent
private AsyncCallback userCallback
internal WebClientProtocol ClientProtocol
internal object InternalAsyncState
internal Exception Exception
internal WebResponse Response
internal WebRequest Request
internal Stream ResponseStream
internal Stream ResponseBufferedStream
internal Byte[] Buffer
internal bool EndSendCalled
public object AsyncState
public WaitHandle AsyncWaitHandle
public bool CompletedSynchronously
public bool IsCompleted
internal void .ctor(WebClientProtocol clientProtocol, object internalAsyncState, WebRequest request, AsyncCallback userCallback, object userAsyncState)
public object get_AsyncState()
public WaitHandle get_AsyncWaitHandle()
public bool get_CompletedSynchronously()
public bool get_IsCompleted()
public void Abort()
internal void Complete()
internal void Complete(Exception e)
internal WebResponse WaitForResponse()
internal void CombineCompletedSynchronously(bool innerCompletedSynchronously)
}
public System.Web.Services.Protocols.WebClientProtocol : Component {
private AsyncCallback getRequestStreamAsyncCallback
private AsyncCallback getResponseAsyncCallback
private AsyncCallback modreq(System.Runtime.CompilerServices.IsVolatile) readResponseAsyncCallback
private ClientTypeCache cache
private RequestCachePolicy bypassCache
private ICredentials credentials
private bool preAuthenticate
private Uri uri
private int timeout
private string connectionGroupName
private Encoding requestEncoding
private WebRequest pendingSyncRequest
private object nullToken
private Hashtable asyncInvokes
private object s_InternalSyncObject
internal object InternalSyncObject
internal RequestCachePolicy BypassCache
public ICredentials Credentials
public bool UseDefaultCredentials
public string ConnectionGroupName
internal WebRequest PendingSyncRequest
public bool PreAuthenticate
public string Url
internal Hashtable AsyncInvokes
internal object NullToken
internal Uri Uri
public Encoding RequestEncoding
public int Timeout
internal object get_InternalSyncObject()
internal void .ctor(WebClientProtocol protocol)
internal RequestCachePolicy get_BypassCache()
public ICredentials get_Credentials()
public void set_Credentials(ICredentials value)
public bool get_UseDefaultCredentials()
public void set_UseDefaultCredentials(bool value)
public string get_ConnectionGroupName()
public void set_ConnectionGroupName(string value)
internal WebRequest get_PendingSyncRequest()
internal void set_PendingSyncRequest(WebRequest value)
public bool get_PreAuthenticate()
public void set_PreAuthenticate(bool value)
public string get_Url()
public void set_Url(string value)
internal Hashtable get_AsyncInvokes()
internal object get_NullToken()
internal Uri get_Uri()
internal void set_Uri(Uri value)
public Encoding get_RequestEncoding()
public void set_RequestEncoding(Encoding value)
public int get_Timeout()
public void set_Timeout(int value)
public void Abort()
internal IAsyncResult BeginSend(Uri requestUri, WebClientAsyncResult asyncResult, bool callWriteAsyncRequest)
private void ProcessAsyncException(WebClientAsyncResult client, Exception e, string method)
private void GetRequestStreamAsyncCallback(IAsyncResult asyncResult)
private void GetResponseAsyncCallback(IAsyncResult asyncResult)
private void ReadAsyncResponse(WebClientAsyncResult client)
private void ReadAsyncResponseStream(WebClientAsyncResult client)
private bool ProcessAsyncResponseStreamResult(WebClientAsyncResult client, IAsyncResult asyncResult)
private void ReadResponseAsyncCallback(IAsyncResult asyncResult)
internal void NotifyClientCallOut(WebRequest request)
protected WebRequest GetWebRequest(Uri uri)
protected WebResponse GetWebResponse(WebRequest request)
protected WebResponse GetWebResponse(WebRequest request, IAsyncResult result)
internal void InitializeAsyncRequest(WebRequest request, object internalAsyncState)
internal void AsyncBufferedSerialize(WebRequest request, Stream requestStream, object internalAsyncState)
internal WebResponse EndSend(IAsyncResult asyncResult, Object& internalAsyncState, Stream& responseStream)
protected object GetFromCache(Type type)
protected void AddToCache(Type type, object value)
}
internal System.Web.Services.Protocols.WebServiceHandler : object {
private ServerProtocol protocol
private Exception exception
private AsyncCallback asyncCallback
private ManualResetEvent asyncBeginComplete
private int asyncCallbackCalls
private bool wroteException
private Object[] parameters
internal void .ctor(ServerProtocol protocol)
private void TraceFlush()
private void PrepareContext()
private void WriteException(Exception e)
private void Invoke()
private void InvokeTransacted()
private void ThrowInitException()
private void HandleOneWayException(Exception e, string method)
protected void CoreProcessRequest()
private HttpContext SwitchContext(HttpContext context)
private void OneWayInvoke()
private void OneWayInvokeTransacted()
private void Callback(IAsyncResult result)
private void DoCallback(IAsyncResult result)
protected IAsyncResult BeginCoreProcessRequest(AsyncCallback callback, object asyncState)
private void OneWayAsyncInvoke()
private IAsyncResult BeginInvoke(AsyncCallback callback, object asyncState)
private void OneWayCallback(IAsyncResult asyncResult)
protected void EndCoreProcessRequest(IAsyncResult asyncResult)
private void EndInvoke(IAsyncResult asyncResult)
private void WriteReturns(Object[] returnValues)
}
public System.Web.Services.Protocols.WebServiceHandlerFactory : object {
public IHttpHandler GetHandler(HttpContext context, string verb, string url, string filePath)
private Type GetCompiledType(string url, HttpContext context)
internal IHttpHandler CoreGetHandler(Type type, HttpContext context, HttpRequest request, HttpResponse response)
private ServerProtocolFactory[] GetServerProtocolFactories()
public void ReleaseHandler(IHttpHandler handler)
}
internal System.Web.Services.Protocols.XmlReturn : object {
internal Object[] GetInitializers(LogicalMethodInfo[] methodInfos)
private bool IsSupported(Type returnType)
internal object GetInitializer(LogicalMethodInfo methodInfo)
private Evidence GetEvidenceForType(Type type)
}
public System.Web.Services.Protocols.XmlReturnReader : MimeReturnReader {
private XmlSerializer xmlSerializer
public void Initialize(object o)
public Object[] GetInitializers(LogicalMethodInfo[] methodInfos)
public object GetInitializer(LogicalMethodInfo methodInfo)
public object Read(WebResponse response, Stream responseStream)
}
internal System.Web.Services.Protocols.XmlReturnWriter : MimeReturnWriter {
private XmlSerializer xmlSerializer
public void Initialize(object o)
public Object[] GetInitializers(LogicalMethodInfo[] methodInfos)
public object GetInitializer(LogicalMethodInfo methodInfo)
internal void Write(HttpResponse response, Stream outputStream, object returnValue)
}
internal System.Web.Services.Res : object {
public string AsyncDuplicateUserState
public string BPConformanceHeaderFault
public string Binding
public string BindingInvalidAttribute
public string BindingMissingAttribute
public string BindingMultipleParts
public string BothAndUseTheMessageNameUseTheMessageName3
public string CanTCallTheEndMethodOfAnAsyncCallMoreThan
public string CanTSpecifyElementOnEncodedMessagePartsPart
public string CannotRunInPartialTrustOutsideAspNet
public string ClientProtocolAllowAutoRedirect
public string ClientProtocolClientCertificates
public string ClientProtocolCookieContainer
public string ClientProtocolEnableDecompression
public string ClientProtocolEncoding
public string ClientProtocolPreAuthenticate
public string ClientProtocolSoapVersion
public string ClientProtocolTimeout
public string ClientProtocolUrl
public string ClientProtocolUserAgent
public string CodeGenSupportParameterAttributes
public string CodeGenSupportReferenceParameters
public string CodeGenSupportReturnTypeAttributes
public string CodeRemarks
public string CodegenWarningDetails
public string ConfigKeyNotFoundInElementCollection
public string ConfigKeysDoNotMatch
public string ContractOverride
public string Description
public string DiscoveryIsNotPossibleBecauseTypeIsMissing1
public string DuplicateInputOutputNames0
public string EachMessagePartInAUseLiteralMessageMustSpecify0
public string EachMessagePartInAnUseEncodedMessageMustSpecify0
public string EachMessagePartInRpcUseLiteralMessageMustSpecify0
public string Element
public string ElementTypeMustBeObjectOrSoapExtensionOrSoapReflectedException
public string ElementTypeMustBeObjectOrSoapReflectedException
public string FailedToHandleRequest0
public string Fault
public string FaultBinding
public string HeaderFault
public string HelpGeneratorInternalError
public string IfAppSettingBaseUrlArgumentIsSpecifiedThen0
public string InitFailed
public string InputElement
public string Invalid_priority_group_value
public string MessageHasNoParts1
public string Missing2
public string MissingBinding0
public string MissingHttpOperationElement0
public string MissingInputBinding0
public string MissingMatchElement0
public string MissingMessage2
public string MissingMessagePartForMessageFromNamespace3
public string MissingOutputBinding0
public string MissingSoapBodyInputBinding0
public string MissingSoapBodyOutputBinding0
public string MissingSoapOperationBinding0
public string MultipleBindingsWithSameName2
public string NeedConcreteType
public string NoInputHTTPFormatsWereRecognized0
public string NoInputMIMEFormatsWereRecognized0
public string NoMethodsWereFoundInTheWSDLForThisProtocol
public string NoOutputMIMEFormatsWereRecognized0
public string NotificationIsNotSupported0
public string OneWayIsNotSupported0
public string OnlyOneWebServiceBindingAttributeMayBeSpecified1
public string OnlyOperationInputOrOperationOutputTypes
public string OnlyXmlElementsOrTypesDerivingFromServiceDescriptionFormatExtension0
public string Operation
public string OperationBinding
public string OperationFlowNotification
public string OperationFlowSolicitResponse
public string OperationMissingBinding
public string OperationOverload
public string OutputElement
public string Part
public string Port
public string PortTypeOperationMissing
public string ProtocolDoesNotAsyncSerialize
public string ProtocolWithNameIsNotRecognized1
public string RequestResponseIsNotSupported0
public string RequiredXmlFormatExtensionAttributeIsMissing1
public string Rxxxx
public string SchemaSyntaxErrorDetails
public string SchemaValidationError
public string SchemaValidationWarning
public string ServiceDescriptionWasNotFound0
public string SolicitResponseIsNotSupported0
public string SpecifyingATypeForUseLiteralMessagesIs0
public string SpecifyingATypeForUseLiteralMessagesIsAny
public string SpecifyingAnElementForUseEncodedMessageParts0
public string StackTraceEnd
public string StreamDoesNotRead
public string StreamDoesNotSeek
public string TheBinding0FromNamespace1WasIgnored2
public string TheBindingNamedFromNamespaceWasNotFoundIn3
public string TheDocumentWasNotRecognizedAsAKnownDocumentType
public string TheDocumentWasUnderstoodButContainsErrors
public string TheEncodingIsNotSupported1
public string TheHTMLDocumentDoesNotContainDiscoveryInformation
public string TheMethodDoesNotHaveARequestElementEither1
public string TheMethodsAndUseTheSameRequestElementAndSoapActionXmlns6
public string TheMethodsAndUseTheSameRequestElementXmlns4
public string TheMethodsAndUseTheSameSoapActionWhenTheService3
public string TheOperation0FromNamespace1WasIgnored2
public string TheOperationBinding0FromNamespace1WasIgnored
public string TheOperationBindingFromNamespaceHadInvalid3
public string TheOperationFromNamespaceHadInvalidSyntax3
public string TheRequestElementXmlnsWasNotRecognized2
public string TheRootElementForTheRequestCouldNotBeDetermined0
public string TheSchemaDocumentContainsLinksThatCouldNotBeResolved
public string TheSyntaxOfTypeMayNotBeExtended1
public string TheWSDLDocumentContainsLinksThatCouldNotBeResolved
public string ThereIsNoSoapTransportImporterThatUnderstands1
public string ThereWasAnErrorDownloading0
public string ThereWasAnErrorDuringAsyncProcessing
public string TraceCallEnter
public string TraceCallEnterDetails
public string TraceCallExit
public string TraceCreateSerializer
public string TraceExceptionCought
public string TraceExceptionDetails
public string TraceExceptionIgnored
public string TraceExceptionThrown
public string TracePostWorkItemIn
public string TracePostWorkItemOut
public string TraceReadHeaders
public string TraceReadRequest
public string TraceReadResponse
public string TraceUrl
public string TraceUrlReferrer
public string TraceUserHostAddress
public string TraceUserHostName
public string TraceWriteHeaders
public string TraceWriteRequest
public string TraceWriteResponse
public string TypeIsMissingWebServiceBindingAttributeThat2
public string UnableToHandleRequest0
public string UnableToHandleRequestActionNotRecognized1
public string UnableToHandleRequestActionRequired0
public string UnableToImportBindingFromNamespace2
public string UnableToImportOperation1
public string UriValueRelative
public string WebAsyncMissingEnd
public string WebAsyncTransaction
public string WebBadOutParameter
public string WebBadStreamState
public string WebBothMethodAttrs
public string WebBothServiceAttrs
public string WebCannotAccessValue
public string WebCannotAccessValueStage
public string WebCannotUnderstandHeader
public string WebChangeTypeFailed
public string WebClientBindingAttributeRequired
public string WebConfigExtensionError
public string WebConfigInvalidExtensionPriority
public string WebContractReferenceName
public string WebDescriptionHeaderAndBodyUseMismatch
public string WebDescriptionMissing
public string WebDescriptionMissingItem
public string WebDescriptionPartElementRequired
public string WebDescriptionPartElementWarning
public string WebDescriptionPartTypeRequired
public string WebDescriptionPartTypeWarning
public string WebDescriptionTooManyMessages
public string WebDiscoRefReport
public string WebDiscoveryDocumentReferenceName
public string WebDuplicateBinding
public string WebDuplicateFaultBinding
public string WebDuplicateFormatExtension
public string WebDuplicateImport
public string WebDuplicateMessage
public string WebDuplicateMessagePart
public string WebDuplicateOperation
public string WebDuplicateOperationBinding
public string WebDuplicateOperationFault
public string WebDuplicateOperationMessage
public string WebDuplicatePort
public string WebDuplicatePortType
public string WebDuplicateService
public string WebDuplicateUnknownElement
public string WebEmptyRef
public string WebExtensionError
public string WebHeaderInvalidMustUnderstand
public string WebHeaderInvalidRelay
public string WebHeaderMissing
public string WebHeaderOneWayOut
public string WebHeaderRead
public string WebHeaderStatic
public string WebHeaderType
public string WebHeaderWrite
public string WebHttpHeader
public string WebInOutParameter
public string WebInvalidBindingName
public string WebInvalidBindingPlacement
public string WebInvalidContentType
public string WebInvalidDocType
public string WebInvalidEnvelopeNamespace
public string WebInvalidFormat
public string WebInvalidMethodName
public string WebInvalidMethodNameCase
public string WebInvalidRequestFormat
public string WebInvalidRequestFormatDetails
public string WebMethodMissingParams
public string WebMethodStatic
public string WebMissingBodyElement
public string WebMissingClientProtocol
public string WebMissingCustomAttribute
public string WebMissingDocument
public string WebMissingEnvelopeElement
public string WebMissingHeader
public string WebMissingHelpContext
public string WebMissingParameter
public string WebMissingPath
public string WebMissingResource
public string WebMultiDimArray
public string WebMultiplyDeclaredHeaderTypes
public string WebNegativeValue
public string WebNoReturnValue
public string WebNullAsyncResultInBegin
public string WebNullAsyncResultInEnd
public string WebNullReaderForMessage
public string WebNullRef
public string WebNullWriterForMessage
public string WebOneWayOutParameters
public string WebOneWayReturnValue
public string WebPathNotFound
public string WebQNamePrefixUndefined
public string WebRefInvalidAttribute
public string WebRefInvalidAttribute2
public string WebReflectionError
public string WebReflectionErrorMethod
public string WebRequestContent
public string WebRequestUnableToProcess
public string WebRequestUnableToRead
public string WebResolveMissingClientProtocol
public string WebResponseBadXml
public string WebResponseContent
public string WebResponseKnownError
public string WebResponseUnknownError
public string WebResponseUnknownErrorEmptyBody
public string WebResultNotXml
public string WebSchemaNotFound
public string WebServiceContext
public string WebServiceDescriptionIgnoredOptional
public string WebServiceDescriptionIgnoredRequired
public string WebServiceServer
public string WebServiceSession
public string WebServiceSoapVersion
public string WebServiceUser
public string WebShemaReferenceName
public string WebSoap11EncodingStyleNotSupported1
public string WebSuppressedExceptionMessage
public string WebTextMatchBadCaptureIndex
public string WebTextMatchBadGroupIndex
public string WebTextMatchIgnoredTypeWarning
public string WebTextMatchMissingPattern
public string WebTimeout
public string WebUnknownAttribute
public string WebUnknownAttribute2
public string WebUnknownAttribute3
public string WebUnknownElement
public string WebUnknownElement1
public string WebUnknownElement2
public string WebUnknownEncodingStyle
public string WebUnrecognizedRequestFormat
public string WebUnrecognizedRequestFormatUrl
public string WebVirtualDisoRoot
public string WebWsiContentTypeEncoding
public string WebWsiViolation
public string WhenUsingAMessageStyleOfParametersAsDocument0
public string WireSignature
public string WireSignatureEmpty
public string WsdlGenRpcLitAnonimousType
public string WsdlInstanceValidationDetails
public string XmlLang
public string XmlSchema
public string XmlSchemaAttributeReference
public string XmlSchemaContentDef
public string XmlSchemaElementReference
public string XmlSchemaItem
public string XmlSchemaNamedItem
public string indexMustBeBetweenAnd0Inclusive
public string internalError0
public string GetString(string name)
public string GetString(string name, Object[] args)
}
internal System.Web.Services.Soap : object {
internal string XmlNamespace
internal string Encoding
internal string Namespace
internal string ConformanceClaim
internal string BasicProfile1_1
internal string Action
internal string ArrayType
internal string Prefix
internal string ClaimPrefix
internal string DimeContentType
internal string SoapContentType
}
internal System.Web.Services.Soap12 : object {
internal string Namespace
internal string Encoding
internal string RpcNamespace
internal string Prefix
}
internal System.Web.Services.WebMethod : object {
internal MethodInfo declaration
internal WebServiceBindingAttribute binding
internal WebMethodAttribute attribute
internal void .ctor(MethodInfo declaration, WebServiceBindingAttribute binding, WebMethodAttribute attribute)
}
public System.Web.Services.WebMethodAttribute : Attribute {
private int transactionOption
private bool enableSession
private int cacheDuration
private bool bufferResponse
private string description
private string messageName
private bool transactionOptionSpecified
private bool enableSessionSpecified
private bool cacheDurationSpecified
private bool bufferResponseSpecified
private bool descriptionSpecified
private bool messageNameSpecified
public string Description
internal bool DescriptionSpecified
public bool EnableSession
internal bool EnableSessionSpecified
public int CacheDuration
internal bool CacheDurationSpecified
public bool BufferResponse
internal bool BufferResponseSpecified
public TransactionOption TransactionOption
internal bool TransactionOptionSpecified
internal bool TransactionEnabled
public string MessageName
internal bool MessageNameSpecified
public void .ctor(bool enableSession)
public void .ctor(bool enableSession, TransactionOption transactionOption)
public void .ctor(bool enableSession, TransactionOption transactionOption, int cacheDuration)
public void .ctor(bool enableSession, TransactionOption transactionOption, int cacheDuration, bool bufferResponse)
public string get_Description()
public void set_Description(string value)
internal bool get_DescriptionSpecified()
public bool get_EnableSession()
public void set_EnableSession(bool value)
internal bool get_EnableSessionSpecified()
public int get_CacheDuration()
public void set_CacheDuration(int value)
internal bool get_CacheDurationSpecified()
public bool get_BufferResponse()
public void set_BufferResponse(bool value)
internal bool get_BufferResponseSpecified()
public TransactionOption get_TransactionOption()
public void set_TransactionOption(TransactionOption value)
internal bool get_TransactionOptionSpecified()
internal bool get_TransactionEnabled()
public string get_MessageName()
public void set_MessageName(string value)
internal bool get_MessageNameSpecified()
}
internal System.Web.Services.WebMethodReflector : object {
internal WebMethodAttribute GetAttribute(MethodInfo implementation, MethodInfo declaration)
internal MethodInfo FindInterfaceMethodInfo(Type type, string signature)
internal LogicalMethodInfo[] GetMethods(Type type)
internal void IncludeTypes(LogicalMethodInfo[] methods, XmlReflectionImporter importer)
internal void IncludeTypes(LogicalMethodInfo method, XmlReflectionImporter importer)
}
public System.Web.Services.WebService : MarshalByValueComponent {
private HttpContext context
internal string SoapVersionContextSlot
public HttpApplicationState Application
public HttpContext Context
public HttpSessionState Session
public HttpServerUtility Server
public IPrincipal User
public SoapProtocolVersion SoapVersion
public HttpApplicationState get_Application()
public HttpContext get_Context()
public HttpSessionState get_Session()
public HttpServerUtility get_Server()
public IPrincipal get_User()
public SoapProtocolVersion get_SoapVersion()
internal void SetContext(HttpContext context)
}
public System.Web.Services.WebServiceAttribute : Attribute {
private string description
private string ns
private string name
public string DefaultNamespace
public string Description
public string Namespace
public string Name
public string get_Description()
public void set_Description(string value)
public string get_Namespace()
public void set_Namespace(string value)
public string get_Name()
public void set_Name(string value)
}
public System.Web.Services.WebServiceBindingAttribute : Attribute {
private string name
private string ns
private string location
private WsiProfiles claims
private bool emitClaims
public WsiProfiles ConformsTo
public bool EmitConformanceClaims
public string Location
public string Name
public string Namespace
public void .ctor(string name)
public void .ctor(string name, string ns)
public void .ctor(string name, string ns, string location)
public WsiProfiles get_ConformsTo()
public void set_ConformsTo(WsiProfiles value)
public bool get_EmitConformanceClaims()
public void set_EmitConformanceClaims(bool value)
public string get_Location()
public void set_Location(string value)
public string get_Name()
public void set_Name(string value)
public string get_Namespace()
public void set_Namespace(string value)
}
internal System.Web.Services.WebServiceBindingReflector : object {
internal WebServiceBindingAttribute GetAttribute(Type type)
internal WebServiceBindingAttribute GetAttribute(LogicalMethodInfo methodInfo, string binding)
}
internal System.Web.Services.WebServiceReflector : object {
internal WebServiceAttribute GetAttribute(Type type)
internal WebServiceAttribute GetAttribute(LogicalMethodInfo[] methodInfos)
internal Type GetMostDerivedType(LogicalMethodInfo[] methodInfos)
}
internal System.Web.Services.WebServicesDescriptionAttribute : DescriptionAttribute {
private bool replaced
public string Description
internal void .ctor(string description)
public string get_Description()
}
public System.Web.Services.WsiProfiles : Enum {
public int value__
public WsiProfiles None
public WsiProfiles BasicProfile1_1
}
internal Unity.ThrowStub : ObjectDisposedException {
public void ThrowNotSupportedException()
}
