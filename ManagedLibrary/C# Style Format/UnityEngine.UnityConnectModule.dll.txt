[NativeHeaderAttribute("Modules/UnityConnect/UnityAds/UnityAdsSettings.h")]
internal static class UnityEngine.Advertisements.UnityAdsSettings : object {
    [StaticAccessorAttribute("GetUnityAdsSettings()", "0")]
public static bool enabled { get; public set; }
    [StaticAccessorAttribute("GetUnityAdsSettings()", "0")]
public static bool initializeOnStartup { get; public set; }
    [StaticAccessorAttribute("GetUnityAdsSettings()", "0")]
public static bool testMode { get; public set; }
    [ThreadSafeAttribute]
public static bool get_enabled();
    [ThreadSafeAttribute]
public static void set_enabled(bool value);
    [ObsoleteAttribute("warning No longer supported and will always return true")]
public static bool IsPlatformEnabled(RuntimePlatform platform);
    [ObsoleteAttribute("warning No longer supported and will do nothing")]
public static void SetPlatformEnabled(RuntimePlatform platform, bool value);
    public static bool get_initializeOnStartup();
    public static void set_initializeOnStartup(bool value);
    public static bool get_testMode();
    public static void set_testMode(bool value);
    [StaticAccessorAttribute("GetUnityAdsSettings()", "0")]
public static string GetGameId(RuntimePlatform platform);
    [StaticAccessorAttribute("GetUnityAdsSettings()", "0")]
public static void SetGameId(RuntimePlatform platform, string gameId);
}
[NativeHeaderAttribute("Modules/UnityConnect/UnityConnectSettings.h")]
internal class UnityEngine.Connect.UnityConnectSettings : Object {
    [StaticAccessorAttribute("GetUnityConnectSettings()", "0")]
public static bool enabled { get; public set; }
    [StaticAccessorAttribute("GetUnityConnectSettings()", "0")]
public static bool testMode { get; public set; }
    [StaticAccessorAttribute("GetUnityConnectSettings()", "0")]
public static string eventUrl { get; public set; }
    [StaticAccessorAttribute("GetUnityConnectSettings()", "0")]
public static string eventOldUrl { get; public set; }
    [StaticAccessorAttribute("GetUnityConnectSettings()", "0")]
public static string configUrl { get; public set; }
    [StaticAccessorAttribute("GetUnityConnectSettings()", "0")]
public static int testInitMode { get; public set; }
    public static bool get_enabled();
    public static void set_enabled(bool value);
    public static bool get_testMode();
    public static void set_testMode(bool value);
    public static string get_eventUrl();
    public static void set_eventUrl(string value);
    public static string get_eventOldUrl();
    public static void set_eventOldUrl(string value);
    public static string get_configUrl();
    public static void set_configUrl(string value);
    public static int get_testInitMode();
    public static void set_testInitMode(int value);
}
