internal Consts : object {
public string MonoVersion
public string MonoCompany
public string MonoProduct
public string MonoCopyright
public int MonoCorlibVersion
public string FxVersion
public string FxFileVersion
public string EnvironmentVersion
public string VsVersion
public string VsFileVersion
private string PublicKeyToken
public string AssemblyI18N
public string AssemblyMicrosoft_JScript
public string AssemblyMicrosoft_VisualStudio
public string AssemblyMicrosoft_VisualStudio_Web
public string AssemblyMicrosoft_VSDesigner
public string AssemblyMono_Http
public string AssemblyMono_Posix
public string AssemblyMono_Security
public string AssemblyMono_Messaging_RabbitMQ
public string AssemblyCorlib
public string AssemblySystem
public string AssemblySystem_Data
public string AssemblySystem_Design
public string AssemblySystem_DirectoryServices
public string AssemblySystem_Drawing
public string AssemblySystem_Drawing_Design
public string AssemblySystem_Messaging
public string AssemblySystem_Security
public string AssemblySystem_ServiceProcess
public string AssemblySystem_Web
public string AssemblySystem_Windows_Forms
public string AssemblySystem_2_0
public string AssemblySystemCore_3_5
public string AssemblySystem_Core
public string WindowsBase_3_0
public string AssemblyWindowsBase
public string AssemblyPresentationCore_3_5
public string AssemblyPresentationCore_4_0
public string AssemblyPresentationFramework_3_5
public string AssemblySystemServiceModel_3_0
}
internal System.ComponentModel.DataAnnotations.AppSettings : object {
internal bool DisableRegEx
}
public System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptionProvider : TypeDescriptionProvider {
private Type _associatedMetadataType
public void .ctor(Type type)
public void .ctor(Type type, Type associatedMetadataType)
public ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
}
internal System.ComponentModel.DataAnnotations.AssociatedMetadataTypeTypeDescriptor : CustomTypeDescriptor {
private Type <AssociatedMetadataType>k__BackingField
private bool <IsSelfAssociated>k__BackingField
private Type AssociatedMetadataType
private bool IsSelfAssociated
private Type get_AssociatedMetadataType()
private void set_AssociatedMetadataType(Type value)
private bool get_IsSelfAssociated()
private void set_IsSelfAssociated(bool value)
public void .ctor(ICustomTypeDescriptor parent, Type type, Type associatedMetadataType)
public PropertyDescriptorCollection GetProperties(Attribute[] attributes)
public PropertyDescriptorCollection GetProperties()
private PropertyDescriptorCollection GetPropertiesWithMetadata(PropertyDescriptorCollection originalCollection)
public AttributeCollection GetAttributes()
}
public System.ComponentModel.DataAnnotations.AssociationAttribute : Attribute {
private string name
private string thisKey
private string otherKey
private bool isForeignKey
public string Name
public string ThisKey
public string OtherKey
public bool IsForeignKey
public IEnumerable`1<string> ThisKeyMembers
public IEnumerable`1<string> OtherKeyMembers
public void .ctor(string name, string thisKey, string otherKey)
public string get_Name()
public string get_ThisKey()
public string get_OtherKey()
public bool get_IsForeignKey()
public void set_IsForeignKey(bool value)
public IEnumerable`1<string> get_ThisKeyMembers()
public IEnumerable`1<string> get_OtherKeyMembers()
private String[] GetKeyMembers(string key)
}
public System.ComponentModel.DataAnnotations.BindableTypeAttribute : Attribute {
private bool <IsBindable>k__BackingField
public bool IsBindable
public bool get_IsBindable()
public void set_IsBindable(bool value)
}
public System.ComponentModel.DataAnnotations.CompareAttribute : ValidationAttribute {
private string <OtherProperty>k__BackingField
private string <OtherPropertyDisplayName>k__BackingField
public string OtherProperty
public string OtherPropertyDisplayName
public bool RequiresValidationContext
public void .ctor(string otherProperty)
public string get_OtherProperty()
private void set_OtherProperty(string value)
public string get_OtherPropertyDisplayName()
internal void set_OtherPropertyDisplayName(string value)
public string FormatErrorMessage(string name)
public bool get_RequiresValidationContext()
protected ValidationResult IsValid(object value, ValidationContext validationContext)
private string GetDisplayNameForProperty(Type containerType, string propertyName)
private ICustomTypeDescriptor GetTypeDescriptor(Type type)
}
public System.ComponentModel.DataAnnotations.CreditCardAttribute : DataTypeAttribute {
public bool IsValid(object value)
}
public System.ComponentModel.DataAnnotations.CustomValidationAttribute : ValidationAttribute {
private Type _validatorType
private string _method
private MethodInfo _methodInfo
private bool _isSingleArgumentMethod
private string _lastMessage
private Type _valuesType
private Lazy`1<string> _malformedErrorMessage
private Tuple`2<string, Type> _typeId
public Type ValidatorType
public string Method
public object TypeId
public void .ctor(Type validatorType, string method)
public Type get_ValidatorType()
public string get_Method()
public object get_TypeId()
protected ValidationResult IsValid(object value, ValidationContext validationContext)
public string FormatErrorMessage(string name)
private string CheckAttributeWellFormed()
private string ValidateValidatorTypeParameter()
private string ValidateMethodParameter()
private void ThrowIfAttributeNotWellFormed()
private bool TryConvertValue(object value, Object& convertedValue)
}
public System.ComponentModel.DataAnnotations.DataType : Enum {
public int value__
public DataType Custom
public DataType DateTime
public DataType Date
public DataType Time
public DataType Duration
public DataType PhoneNumber
public DataType Currency
public DataType Text
public DataType Html
public DataType MultilineText
public DataType EmailAddress
public DataType Password
public DataType Url
public DataType ImageUrl
public DataType CreditCard
public DataType PostalCode
public DataType Upload
}
public System.ComponentModel.DataAnnotations.DataTypeAttribute : ValidationAttribute {
private DataType <DataType>k__BackingField
private string <CustomDataType>k__BackingField
private DisplayFormatAttribute <DisplayFormat>k__BackingField
private String[] _dataTypeStrings
public DataType DataType
public string CustomDataType
public DisplayFormatAttribute DisplayFormat
public DataType get_DataType()
private void set_DataType(DataType value)
public string get_CustomDataType()
private void set_CustomDataType(string value)
public string GetDataTypeName()
public DisplayFormatAttribute get_DisplayFormat()
protected void set_DisplayFormat(DisplayFormatAttribute value)
public void .ctor(DataType dataType)
public void .ctor(string customDataType)
public bool IsValid(object value)
private void EnsureValidDataType()
}
public System.ComponentModel.DataAnnotations.DisplayAttribute : Attribute {
private Type _resourceType
private LocalizableString _shortName
private LocalizableString _name
private LocalizableString _description
private LocalizableString _prompt
private LocalizableString _groupName
private Nullable`1<bool> _autoGenerateField
private Nullable`1<bool> _autoGenerateFilter
private Nullable`1<int> _order
public string ShortName
public string Name
public string Description
public string Prompt
public string GroupName
public Type ResourceType
public bool AutoGenerateField
public bool AutoGenerateFilter
public int Order
public string get_ShortName()
public void set_ShortName(string value)
public string get_Name()
public void set_Name(string value)
public string get_Description()
public void set_Description(string value)
public string get_Prompt()
public void set_Prompt(string value)
public string get_GroupName()
public void set_GroupName(string value)
public Type get_ResourceType()
public void set_ResourceType(Type value)
public bool get_AutoGenerateField()
public void set_AutoGenerateField(bool value)
public bool get_AutoGenerateFilter()
public void set_AutoGenerateFilter(bool value)
public int get_Order()
public void set_Order(int value)
public string GetShortName()
public string GetName()
public string GetDescription()
public string GetPrompt()
public string GetGroupName()
public Nullable`1<bool> GetAutoGenerateField()
public Nullable`1<bool> GetAutoGenerateFilter()
public Nullable`1<int> GetOrder()
}
public System.ComponentModel.DataAnnotations.DisplayColumnAttribute : Attribute {
private string <DisplayColumn>k__BackingField
private string <SortColumn>k__BackingField
private bool <SortDescending>k__BackingField
public string DisplayColumn
public string SortColumn
public bool SortDescending
public void .ctor(string displayColumn)
public void .ctor(string displayColumn, string sortColumn)
public void .ctor(string displayColumn, string sortColumn, bool sortDescending)
public string get_DisplayColumn()
private void set_DisplayColumn(string value)
public string get_SortColumn()
private void set_SortColumn(string value)
public bool get_SortDescending()
private void set_SortDescending(bool value)
}
public System.ComponentModel.DataAnnotations.DisplayFormatAttribute : Attribute {
private string <DataFormatString>k__BackingField
private string <NullDisplayText>k__BackingField
private bool <ConvertEmptyStringToNull>k__BackingField
private bool <ApplyFormatInEditMode>k__BackingField
private bool <HtmlEncode>k__BackingField
public string DataFormatString
public string NullDisplayText
public bool ConvertEmptyStringToNull
public bool ApplyFormatInEditMode
public bool HtmlEncode
public string get_DataFormatString()
public void set_DataFormatString(string value)
public string get_NullDisplayText()
public void set_NullDisplayText(string value)
public bool get_ConvertEmptyStringToNull()
public void set_ConvertEmptyStringToNull(bool value)
public bool get_ApplyFormatInEditMode()
public void set_ApplyFormatInEditMode(bool value)
public bool get_HtmlEncode()
public void set_HtmlEncode(bool value)
}
public System.ComponentModel.DataAnnotations.EditableAttribute : Attribute {
private bool <AllowEdit>k__BackingField
private bool <AllowInitialValue>k__BackingField
public bool AllowEdit
public bool AllowInitialValue
public bool get_AllowEdit()
private void set_AllowEdit(bool value)
public bool get_AllowInitialValue()
public void set_AllowInitialValue(bool value)
public void .ctor(bool allowEdit)
}
public System.ComponentModel.DataAnnotations.EmailAddressAttribute : DataTypeAttribute {
private Regex _regex
public bool IsValid(object value)
private Regex CreateRegEx()
}
public System.ComponentModel.DataAnnotations.EnumDataTypeAttribute : DataTypeAttribute {
private Type <EnumType>k__BackingField
public Type EnumType
public Type get_EnumType()
private void set_EnumType(Type value)
public void .ctor(Type enumType)
public bool IsValid(object value)
private bool IsEnumTypeInFlagsMode(Type enumType)
private string GetUnderlyingTypeValueString(Type enumType, object enumValue)
}
public System.ComponentModel.DataAnnotations.FileExtensionsAttribute : DataTypeAttribute {
private string _extensions
public string Extensions
private string ExtensionsFormatted
private string ExtensionsNormalized
private IEnumerable`1<string> ExtensionsParsed
public string get_Extensions()
public void set_Extensions(string value)
private string get_ExtensionsFormatted()
private string get_ExtensionsNormalized()
private IEnumerable`1<string> get_ExtensionsParsed()
public string FormatErrorMessage(string name)
public bool IsValid(object value)
private bool ValidateExtension(string fileName)
}
public System.ComponentModel.DataAnnotations.FilterUIHintAttribute : Attribute {
private UIHintImplementation _implementation
public string FilterUIHint
public string PresentationLayer
public IDictionary`2<string, object> ControlParameters
public object TypeId
public string get_FilterUIHint()
public string get_PresentationLayer()
public IDictionary`2<string, object> get_ControlParameters()
public object get_TypeId()
public void .ctor(string filterUIHint)
public void .ctor(string filterUIHint, string presentationLayer)
public void .ctor(string filterUIHint, string presentationLayer, Object[] controlParameters)
public int GetHashCode()
public bool Equals(object obj)
}
public System.ComponentModel.DataAnnotations.IValidatableObject {
public IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext)
}
internal System.ComponentModel.DataAnnotations.LocalizableString : object {
private string _propertyName
private string _propertyValue
private Type _resourceType
private Func`1<string> _cachedResult
public string Value
public Type ResourceType
public void .ctor(string propertyName)
public string get_Value()
public void set_Value(string value)
public Type get_ResourceType()
public void set_ResourceType(Type value)
private void ClearCache()
public string GetLocalizableValue()
private string <GetLocalizableValue>b__12_0()
}
public System.ComponentModel.DataAnnotations.MaxLengthAttribute : ValidationAttribute {
private int MaxAllowableLength
private int <Length>k__BackingField
public int Length
private string DefaultErrorMessageString
public int get_Length()
private void set_Length(int value)
public void .ctor(int length)
private string get_DefaultErrorMessageString()
public bool IsValid(object value)
public string FormatErrorMessage(string name)
private void EnsureLegalLengths()
}
internal System.ComponentModel.DataAnnotations.MetadataPropertyDescriptorWrapper : PropertyDescriptor {
private PropertyDescriptor _descriptor
private bool _isReadOnly
public Type ComponentType
public bool IsReadOnly
public Type PropertyType
public bool SupportsChangeEvents
public void .ctor(PropertyDescriptor descriptor, Attribute[] newAttributes)
public void AddValueChanged(object component, EventHandler handler)
public bool CanResetValue(object component)
public Type get_ComponentType()
public object GetValue(object component)
public bool get_IsReadOnly()
public Type get_PropertyType()
public void RemoveValueChanged(object component, EventHandler handler)
public void ResetValue(object component)
public void SetValue(object component, object value)
public bool ShouldSerializeValue(object component)
public bool get_SupportsChangeEvents()
}
public System.ComponentModel.DataAnnotations.MetadataTypeAttribute : Attribute {
private Type _metadataClassType
public Type MetadataClassType
public Type get_MetadataClassType()
public void .ctor(Type metadataClassType)
}
public System.ComponentModel.DataAnnotations.MinLengthAttribute : ValidationAttribute {
private int <Length>k__BackingField
public int Length
public int get_Length()
private void set_Length(int value)
public void .ctor(int length)
public bool IsValid(object value)
public string FormatErrorMessage(string name)
private void EnsureLegalLengths()
}
public System.ComponentModel.DataAnnotations.PhoneAttribute : DataTypeAttribute {
private Regex _regex
private string _additionalPhoneNumberCharacters
public bool IsValid(object value)
private Regex CreateRegEx()
private string RemoveExtension(string potentialPhoneNumber)
private bool MatchesExtension(string potentialExtension)
}
public System.ComponentModel.DataAnnotations.RangeAttribute : ValidationAttribute {
private object <Minimum>k__BackingField
private object <Maximum>k__BackingField
private Type <OperandType>k__BackingField
private Func`2<object, object> <Conversion>k__BackingField
public object Minimum
public object Maximum
public Type OperandType
private Func`2<object, object> Conversion
public object get_Minimum()
private void set_Minimum(object value)
public object get_Maximum()
private void set_Maximum(object value)
public Type get_OperandType()
private void set_OperandType(Type value)
private Func`2<object, object> get_Conversion()
private void set_Conversion(Func`2<object, object> value)
public void .ctor(int minimum, int maximum)
public void .ctor(double minimum, double maximum)
public void .ctor(Type type, string minimum, string maximum)
private void Initialize(IComparable minimum, IComparable maximum, Func`2<object, object> conversion)
public bool IsValid(object value)
public string FormatErrorMessage(string name)
private void SetupConversion()
}
public System.ComponentModel.DataAnnotations.RegularExpressionAttribute : ValidationAttribute {
private string <Pattern>k__BackingField
private int _matchTimeoutInMilliseconds
private bool _matchTimeoutSet
private Regex <Regex>k__BackingField
public string Pattern
public int MatchTimeoutInMilliseconds
private Regex Regex
public string get_Pattern()
private void set_Pattern(string value)
public int get_MatchTimeoutInMilliseconds()
public void set_MatchTimeoutInMilliseconds(int value)
private Regex get_Regex()
private void set_Regex(Regex value)
public void .ctor(string pattern)
public bool IsValid(object value)
public string FormatErrorMessage(string name)
private void SetupRegex()
private int GetDefaultTimeout()
}
public System.ComponentModel.DataAnnotations.RequiredAttribute : ValidationAttribute {
private bool <AllowEmptyStrings>k__BackingField
public bool AllowEmptyStrings
public bool get_AllowEmptyStrings()
public void set_AllowEmptyStrings(bool value)
public bool IsValid(object value)
}
internal System.ComponentModel.DataAnnotations.Resources.DataAnnotationsResources : object {
public string AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties
public string AttributeStore_Type_Must_Be_Public
public string AttributeStore_Unknown_Method
public string AttributeStore_Unknown_Property
public string CustomValidationAttribute_Method_Must_Return_ValidationResult
public string CustomValidationAttribute_Method_Not_Found
public string CustomValidationAttribute_Method_Required
public string CustomValidationAttribute_Method_Signature
public string CustomValidationAttribute_Type_Must_Be_Public
public string CustomValidationAttribute_ValidationError
public string CustomValidationAttribute_ValidatorType_Required
public string DataTypeAttribute_EmptyDataTypeString
public string LocalizableString_LocalizationFailed
public string Validator_Property_Value_Wrong_Type
public string RangeAttribute_ArbitraryTypeNotIComparable
public string RangeAttribute_MinGreaterThanMax
public string RangeAttribute_Must_Set_Min_And_Max
public string RangeAttribute_Must_Set_Operand_Type
public string RangeAttribute_ValidationError
public string RegexAttribute_ValidationError
public string RegularExpressionAttribute_Empty_Pattern
public string RequiredAttribute_ValidationError
public string StringLengthAttribute_InvalidMaxLength
public string StringLengthAttribute_ValidationError
public string UIHintImplementation_ControlParameterKeyIsNotAString
public string UIHintImplementation_ControlParameterKeyIsNull
public string UIHintImplementation_NeedEvenNumberOfControlParameters
public string UIHintImplementation_ControlParameterKeyOccursMoreThanOnce
public string ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource
public string ValidationAttribute_NeedBothResourceTypeAndResourceName
public string ValidationAttribute_ResourcePropertyNotStringType
public string ValidationAttribute_ResourceTypeDoesNotHaveProperty
public string ValidationAttribute_ValidationError
public string ValidationContext_Must_Be_Method
public string EnumDataTypeAttribute_TypeNeedsToBeAnEnum
public string EnumDataTypeAttribute_TypeCannotBeNull
public string MetadataTypeAttribute_TypeCannotBeNull
public string DisplayAttribute_PropertyNotSet
public string ValidationContextServiceContainer_ItemAlreadyExists
public string Validator_InstanceMustMatchValidationContextInstance
public string ValidationAttribute_IsValid_NotImplemented
public string CustomValidationAttribute_Type_Conversion_Failed
public string StringLengthAttribute_ValidationErrorIncludingMinimum
public string CreditCardAttribute_Invalid
public string EmailAddressAttribute_Invalid
public string FileExtensionsAttribute_Invalid
public string UrlAttribute_Invalid
public string CompareAttribute_MustMatch
public string Common_NullOrEmpty
public string CompareAttribute_UnknownProperty
public string Common_PropertyNotFound
public string PhoneAttribute_Invalid
public string MaxLengthAttribute_InvalidMaxLength
public string MaxLengthAttribute_ValidationError
public string MinLengthAttribute_InvalidMinLength
public string MinLengthAttribute_ValidationError
public string ArgumentIsNullOrWhitespace
}
public System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute : Attribute {
private bool <Scaffold>k__BackingField
public bool Scaffold
public bool get_Scaffold()
private void set_Scaffold(bool value)
public void .ctor(bool scaffold)
}
public System.ComponentModel.DataAnnotations.ScaffoldTableAttribute : Attribute {
private bool <Scaffold>k__BackingField
public bool Scaffold
public bool get_Scaffold()
private void set_Scaffold(bool value)
public void .ctor(bool scaffold)
}
public System.ComponentModel.DataAnnotations.Schema.ColumnAttribute : Attribute {
private string _name
private string _typeName
private int _order
public string Name
public int Order
public string TypeName
public void .ctor(string name)
public string get_Name()
public int get_Order()
public void set_Order(int value)
public string get_TypeName()
public void set_TypeName(string value)
}
public System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute : Attribute {
private DatabaseGeneratedOption <DatabaseGeneratedOption>k__BackingField
public DatabaseGeneratedOption DatabaseGeneratedOption
public void .ctor(DatabaseGeneratedOption databaseGeneratedOption)
public DatabaseGeneratedOption get_DatabaseGeneratedOption()
private void set_DatabaseGeneratedOption(DatabaseGeneratedOption value)
}
public System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption : Enum {
public int value__
public DatabaseGeneratedOption None
public DatabaseGeneratedOption Identity
public DatabaseGeneratedOption Computed
}
public System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute : Attribute {
private string _name
public string Name
public void .ctor(string name)
public string get_Name()
}
public System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute : Attribute {
private string _property
public string Property
public void .ctor(string property)
public string get_Property()
}
public System.ComponentModel.DataAnnotations.Schema.TableAttribute : Attribute {
private string _name
private string _schema
public string Name
public string Schema
public void .ctor(string name)
public string get_Name()
public string get_Schema()
public void set_Schema(string value)
}
public System.ComponentModel.DataAnnotations.StringLengthAttribute : ValidationAttribute {
private int <MaximumLength>k__BackingField
private int <MinimumLength>k__BackingField
public int MaximumLength
public int MinimumLength
public int get_MaximumLength()
private void set_MaximumLength(int value)
public int get_MinimumLength()
public void set_MinimumLength(int value)
public void .ctor(int maximumLength)
public bool IsValid(object value)
public string FormatErrorMessage(string name)
private void EnsureLegalLengths()
}
public System.ComponentModel.DataAnnotations.UIHintAttribute : Attribute {
private UIHintImplementation _implementation
public string UIHint
public string PresentationLayer
public IDictionary`2<string, object> ControlParameters
public object TypeId
public string get_UIHint()
public string get_PresentationLayer()
public IDictionary`2<string, object> get_ControlParameters()
public object get_TypeId()
public void .ctor(string uiHint)
public void .ctor(string uiHint, string presentationLayer)
public void .ctor(string uiHint, string presentationLayer, Object[] controlParameters)
public int GetHashCode()
public bool Equals(object obj)
}
public System.ComponentModel.DataAnnotations.UrlAttribute : DataTypeAttribute {
private Regex _regex
public bool IsValid(object value)
private Regex CreateRegEx()
}
public System.ComponentModel.DataAnnotations.ValidationAttribute : Attribute {
private string _errorMessage
private Func`1<string> _errorMessageResourceAccessor
private string _errorMessageResourceName
private Type _errorMessageResourceType
private string _defaultErrorMessage
private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _hasBaseIsValid
private bool <CustomErrorMessageSet>k__BackingField
internal string DefaultErrorMessage
protected string ErrorMessageString
internal bool CustomErrorMessageSet
public bool RequiresValidationContext
public string ErrorMessage
public string ErrorMessageResourceName
public Type ErrorMessageResourceType
protected void .ctor(string errorMessage)
protected void .ctor(Func`1<string> errorMessageAccessor)
internal string get_DefaultErrorMessage()
internal void set_DefaultErrorMessage(string value)
protected string get_ErrorMessageString()
internal bool get_CustomErrorMessageSet()
private void set_CustomErrorMessageSet(bool value)
public bool get_RequiresValidationContext()
public string get_ErrorMessage()
public void set_ErrorMessage(string value)
public string get_ErrorMessageResourceName()
public void set_ErrorMessageResourceName(string value)
public Type get_ErrorMessageResourceType()
public void set_ErrorMessageResourceType(Type value)
private void SetupResourceAccessor()
private void SetResourceAccessorByPropertyLookup()
public string FormatErrorMessage(string name)
public bool IsValid(object value)
protected ValidationResult IsValid(object value, ValidationContext validationContext)
public ValidationResult GetValidationResult(object value, ValidationContext validationContext)
public void Validate(object value, string name)
public void Validate(object value, ValidationContext validationContext)
}
internal System.ComponentModel.DataAnnotations.ValidationAttributeStore : object {
private ValidationAttributeStore _singleton
private Dictionary`2<Type, TypeStoreItem> _typeStoreItems
internal ValidationAttributeStore Instance
internal ValidationAttributeStore get_Instance()
internal IEnumerable`1<ValidationAttribute> GetTypeValidationAttributes(ValidationContext validationContext)
internal DisplayAttribute GetTypeDisplayAttribute(ValidationContext validationContext)
internal IEnumerable`1<ValidationAttribute> GetPropertyValidationAttributes(ValidationContext validationContext)
internal DisplayAttribute GetPropertyDisplayAttribute(ValidationContext validationContext)
internal Type GetPropertyType(ValidationContext validationContext)
internal bool IsPropertyContext(ValidationContext validationContext)
private TypeStoreItem GetTypeStoreItem(Type type)
private void EnsureValidationContext(ValidationContext validationContext)
}
public System.ComponentModel.DataAnnotations.ValidationContext : object {
private Func`2<Type, object> _serviceProvider
private object _objectInstance
private string _memberName
private string _displayName
private Dictionary`2<object, object> _items
private IServiceContainer _serviceContainer
public object ObjectInstance
public Type ObjectType
public string DisplayName
public string MemberName
public IDictionary`2<object, object> Items
public IServiceContainer ServiceContainer
public void .ctor(object instance)
public void .ctor(object instance, IDictionary`2<object, object> items)
public void .ctor(object instance, IServiceProvider serviceProvider, IDictionary`2<object, object> items)
public object get_ObjectInstance()
public Type get_ObjectType()
public string get_DisplayName()
public void set_DisplayName(string value)
public string get_MemberName()
public void set_MemberName(string value)
public IDictionary`2<object, object> get_Items()
private string GetDisplayName()
public void InitializeServiceProvider(Func`2<Type, object> serviceProvider)
public object GetService(Type serviceType)
public IServiceContainer get_ServiceContainer()
}
public System.ComponentModel.DataAnnotations.ValidationException : Exception {
private ValidationResult _validationResult
private ValidationAttribute <ValidationAttribute>k__BackingField
private object <Value>k__BackingField
public ValidationAttribute ValidationAttribute
public ValidationResult ValidationResult
public object Value
public ValidationAttribute get_ValidationAttribute()
private void set_ValidationAttribute(ValidationAttribute value)
public ValidationResult get_ValidationResult()
public object get_Value()
private void set_Value(object value)
public void .ctor(ValidationResult validationResult, ValidationAttribute validatingAttribute, object value)
public void .ctor(string errorMessage, ValidationAttribute validatingAttribute, object value)
public void .ctor(string message)
public void .ctor(string message, Exception innerException)
protected void .ctor(SerializationInfo info, StreamingContext context)
}
public System.ComponentModel.DataAnnotations.ValidationResult : object {
private IEnumerable`1<string> _memberNames
private string _errorMessage
public ValidationResult Success
public IEnumerable`1<string> MemberNames
public string ErrorMessage
public void .ctor(string errorMessage)
public void .ctor(string errorMessage, IEnumerable`1<string> memberNames)
protected void .ctor(ValidationResult validationResult)
public IEnumerable`1<string> get_MemberNames()
public string get_ErrorMessage()
public void set_ErrorMessage(string value)
public string ToString()
}
public System.ComponentModel.DataAnnotations.Validator : object {
private ValidationAttributeStore _store
public bool TryValidateProperty(object value, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults)
public bool TryValidateObject(object instance, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults)
public bool TryValidateObject(object instance, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults, bool validateAllProperties)
public bool TryValidateValue(object value, ValidationContext validationContext, ICollection`1<ValidationResult> validationResults, IEnumerable`1<ValidationAttribute> validationAttributes)
public void ValidateProperty(object value, ValidationContext validationContext)
public void ValidateObject(object instance, ValidationContext validationContext)
public void ValidateObject(object instance, ValidationContext validationContext, bool validateAllProperties)
public void ValidateValue(object value, ValidationContext validationContext, IEnumerable`1<ValidationAttribute> validationAttributes)
internal ValidationContext CreateValidationContext(object instance, ValidationContext validationContext)
private bool CanBeAssigned(Type destinationType, object value)
private void EnsureValidPropertyType(string propertyName, Type propertyType, object value)
private IEnumerable`1<ValidationError> GetObjectValidationErrors(object instance, ValidationContext validationContext, bool validateAllProperties, bool breakOnFirstError)
private IEnumerable`1<ValidationError> GetObjectPropertyValidationErrors(object instance, ValidationContext validationContext, bool validateAllProperties, bool breakOnFirstError)
private ICollection`1<KeyValuePair`2<ValidationContext, object>> GetPropertyValues(object instance, ValidationContext validationContext)
private IEnumerable`1<ValidationError> GetValidationErrors(object value, ValidationContext validationContext, IEnumerable`1<ValidationAttribute> attributes, bool breakOnFirstError)
private bool TryValidate(object value, ValidationContext validationContext, ValidationAttribute attribute, ValidationError& validationError)
}
