internal Consts : object {
public string MonoVersion
public string MonoCompany
public string MonoProduct
public string MonoCopyright
public string FxVersion
public string VsVersion
public string FxFileVersion
public string VsFileVersion
public string AssemblyI18N
public string AssemblyMicrosoft_VisualStudio
public string AssemblyMicrosoft_VisualStudio_Web
public string AssemblyMicrosoft_VSDesigner
public string AssemblyMono_Http
public string AssemblyMono_Posix
public string AssemblyMono_Security
public string AssemblyMono_Messaging_RabbitMQ
public string AssemblyCorlib
public string AssemblySystem
public string AssemblySystem_Data
public string AssemblySystem_Design
public string AssemblySystem_DirectoryServices
public string AssemblySystem_Drawing
public string AssemblySystem_Drawing_Design
public string AssemblySystem_Messaging
public string AssemblySystem_Security
public string AssemblySystem_ServiceProcess
public string AssemblySystem_Web
public string AssemblySystem_Windows_Forms
public string AssemblySystem_Core
}
public I18N.Other.CP1251 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP1257 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP1258 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP20866 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP21866 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP28594 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP28595 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.CP874 : ByteEncoding {
private Char[] ToChars
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Other.ISCIIEncoding : MonoEncoding {
private int shift
private string encodingName
private string webName
public string BodyName
public string EncodingName
public string HeaderName
public string WebName
protected void .ctor(int codePage, int shift, string encodingName, string webName)
public int GetByteCount(Char[] chars, int index, int count)
public int GetByteCount(string s)
public int GetByteCountImpl(Char* chars, int count)
public int GetBytesImpl(Char* chars, int charCount, Byte* bytes, int byteCount)
public int GetCharCount(Byte[] bytes, int index, int count)
public int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
public int GetMaxByteCount(int charCount)
public int GetMaxCharCount(int byteCount)
public string get_BodyName()
public string get_EncodingName()
public string get_HeaderName()
public string get_WebName()
}
