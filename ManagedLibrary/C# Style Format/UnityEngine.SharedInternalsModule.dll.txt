internal UnityEngine.AssetFileNameExtensionAttribute : Attribute {
private string <preferredExtension>k__BackingField
private IEnumerable`1<string> <otherExtensions>k__BackingField
public string preferredExtension
public IEnumerable`1<string> otherExtensions
public string get_preferredExtension()
public IEnumerable`1<string> get_otherExtensions()
public void .ctor(string preferredExtension, String[] otherExtensions)
}
internal UnityEngine.Bindings.CodegenOptions : Enum {
public int value__
public CodegenOptions Auto
public CodegenOptions Custom
public CodegenOptions Force
}
internal UnityEngine.Bindings.FreeFunctionAttribute : NativeMethodAttribute {
public void .ctor(string name)
public void .ctor(string name, bool isThreadSafe)
}
internal UnityEngine.Bindings.IBindingsGenerateMarshallingTypeAttribute {
public CodegenOptions CodegenOptions
public CodegenOptions get_CodegenOptions()
public void set_CodegenOptions(CodegenOptions value)
}
internal UnityEngine.Bindings.IBindingsHeaderProviderAttribute {
public string Header
public string get_Header()
public void set_Header(string value)
}
internal UnityEngine.Bindings.IBindingsIsFreeFunctionProviderAttribute {
public bool IsFreeFunction
public bool HasExplicitThis
public bool get_IsFreeFunction()
public void set_IsFreeFunction(bool value)
public bool get_HasExplicitThis()
public void set_HasExplicitThis(bool value)
}
internal UnityEngine.Bindings.IBindingsIsThreadSafeProviderAttribute {
public bool IsThreadSafe
public bool get_IsThreadSafe()
public void set_IsThreadSafe(bool value)
}
internal UnityEngine.Bindings.IBindingsMarshalAsSpan {
public bool IsReadOnly
public string SizeParameter
public bool get_IsReadOnly()
public string get_SizeParameter()
}
internal UnityEngine.Bindings.IBindingsNameProviderAttribute {
public string Name
public string get_Name()
public void set_Name(string value)
}
internal UnityEngine.Bindings.IBindingsPreventExecution {
public object singleFlagValue
public PreventExecutionSeverity severity
public string howToFix
public object get_singleFlagValue()
public void set_singleFlagValue(object value)
public PreventExecutionSeverity get_severity()
public void set_severity(PreventExecutionSeverity value)
public string get_howToFix()
public void set_howToFix(string value)
}
internal UnityEngine.Bindings.IBindingsThrowsProviderAttribute {
public bool ThrowsException
public bool get_ThrowsException()
public void set_ThrowsException(bool value)
}
internal UnityEngine.Bindings.IBindingsWritableSelfProviderAttribute {
public bool WritableSelf
public bool get_WritableSelf()
public void set_WritableSelf(bool value)
}
internal UnityEngine.Bindings.IgnoreAttribute : Attribute {
private bool <DoesNotContributeToSize>k__BackingField
public bool DoesNotContributeToSize
public bool get_DoesNotContributeToSize()
public void set_DoesNotContributeToSize(bool value)
}
internal UnityEngine.Bindings.MarshalUnityObjectAs : Attribute {
private Type <MarshalAsType>k__BackingField
public Type MarshalAsType
public Type get_MarshalAsType()
public void set_MarshalAsType(Type value)
public void .ctor(Type marshalAsType)
}
internal UnityEngine.Bindings.NativeConditionalAttribute : Attribute {
private string <Condition>k__BackingField
private string <StubReturnStatement>k__BackingField
private bool <Enabled>k__BackingField
public string Condition
public string StubReturnStatement
public bool Enabled
public string get_Condition()
public void set_Condition(string value)
public string get_StubReturnStatement()
public void set_StubReturnStatement(string value)
public bool get_Enabled()
public void set_Enabled(bool value)
public void .ctor(string condition)
public void .ctor(bool enabled)
public void .ctor(string condition, bool enabled)
public void .ctor(string condition, string stubReturnStatement, bool enabled)
public void .ctor(string condition, string stubReturnStatement)
}
internal UnityEngine.Bindings.NativeHeaderAttribute : Attribute {
private string <Header>k__BackingField
public string Header
public string get_Header()
public void set_Header(string value)
public void .ctor(string header)
}
internal UnityEngine.Bindings.NativeMethodAttribute : Attribute {
private string <Name>k__BackingField
private bool <IsThreadSafe>k__BackingField
private bool <IsFreeFunction>k__BackingField
private bool <ThrowsException>k__BackingField
private bool <HasExplicitThis>k__BackingField
private bool <WritableSelf>k__BackingField
public string Name
public bool IsThreadSafe
public bool IsFreeFunction
public bool ThrowsException
public bool HasExplicitThis
public bool WritableSelf
public string get_Name()
public void set_Name(string value)
public bool get_IsThreadSafe()
public void set_IsThreadSafe(bool value)
public bool get_IsFreeFunction()
public void set_IsFreeFunction(bool value)
public bool get_ThrowsException()
public void set_ThrowsException(bool value)
public bool get_HasExplicitThis()
public void set_HasExplicitThis(bool value)
public bool get_WritableSelf()
public void set_WritableSelf(bool value)
public void .ctor(string name)
public void .ctor(string name, bool isFreeFunction)
public void .ctor(string name, bool isFreeFunction, bool isThreadSafe)
public void .ctor(string name, bool isFreeFunction, bool isThreadSafe, bool throws)
}
internal UnityEngine.Bindings.NativeNameAttribute : Attribute {
private string <Name>k__BackingField
public string Name
public string get_Name()
public void set_Name(string value)
public void .ctor(string name)
}
internal UnityEngine.Bindings.NativePropertyAttribute : NativeMethodAttribute {
private TargetType <TargetType>k__BackingField
public TargetType TargetType
public TargetType get_TargetType()
public void set_TargetType(TargetType value)
public void .ctor(string name)
public void .ctor(string name, TargetType targetType)
public void .ctor(string name, bool isFree, TargetType targetType)
public void .ctor(string name, bool isFree, TargetType targetType, bool isThreadSafe)
}
internal UnityEngine.Bindings.NativeThrowsAttribute : Attribute {
private bool <ThrowsException>k__BackingField
public bool ThrowsException
public bool get_ThrowsException()
public void set_ThrowsException(bool value)
public void .ctor(bool throwsException)
}
internal UnityEngine.Bindings.NativeTypeAttribute : Attribute {
private string <Header>k__BackingField
private string <IntermediateScriptingStructName>k__BackingField
private CodegenOptions <CodegenOptions>k__BackingField
public string Header
public string IntermediateScriptingStructName
public CodegenOptions CodegenOptions
public string get_Header()
public void set_Header(string value)
public string get_IntermediateScriptingStructName()
public void set_IntermediateScriptingStructName(string value)
public CodegenOptions get_CodegenOptions()
public void set_CodegenOptions(CodegenOptions value)
public void .ctor(CodegenOptions codegenOptions)
public void .ctor(string header)
public void .ctor(string header, CodegenOptions codegenOptions)
public void .ctor(CodegenOptions codegenOptions, string intermediateStructName)
}
internal UnityEngine.Bindings.NativeWritableSelfAttribute : Attribute {
private bool <WritableSelf>k__BackingField
public bool WritableSelf
public bool get_WritableSelf()
public void set_WritableSelf(bool value)
public void .ctor(bool writable)
}
internal UnityEngine.Bindings.NotNullAttribute : Attribute {
private string <Exception>k__BackingField
public string Exception
public string get_Exception()
public void set_Exception(string value)
public void .ctor(string exception)
}
internal UnityEngine.Bindings.PreventExecutionInStateAttribute : Attribute {
private object <singleFlagValue>k__BackingField
private PreventExecutionSeverity <severity>k__BackingField
private string <howToFix>k__BackingField
public object singleFlagValue
public PreventExecutionSeverity severity
public string howToFix
public object get_singleFlagValue()
public void set_singleFlagValue(object value)
public PreventExecutionSeverity get_severity()
public void set_severity(PreventExecutionSeverity value)
public string get_howToFix()
public void set_howToFix(string value)
public void .ctor(object systemAndFlags, PreventExecutionSeverity reportSeverity, string howToString)
}
internal UnityEngine.Bindings.PreventExecutionSeverity : Enum {
public int value__
public PreventExecutionSeverity PreventExecution_Error
public PreventExecutionSeverity PreventExecution_ManagedException
public PreventExecutionSeverity PreventExecution_Warning
}
internal UnityEngine.Bindings.SpanAttribute : Attribute {
private bool <IsReadOnly>k__BackingField
private string <SizeParameter>k__BackingField
public bool IsReadOnly
public string SizeParameter
public bool get_IsReadOnly()
public string get_SizeParameter()
public void .ctor(string sizeParameter, bool isReadOnly)
}
internal UnityEngine.Bindings.StaticAccessorAttribute : Attribute {
private string <Name>k__BackingField
private StaticAccessorType <Type>k__BackingField
public string Name
public StaticAccessorType Type
public string get_Name()
public void set_Name(string value)
public StaticAccessorType get_Type()
public void set_Type(StaticAccessorType value)
internal void .ctor(string name)
public void .ctor(StaticAccessorType type)
public void .ctor(string name, StaticAccessorType type)
}
internal UnityEngine.Bindings.StaticAccessorType : Enum {
public int value__
public StaticAccessorType Dot
public StaticAccessorType Arrow
public StaticAccessorType DoubleColon
public StaticAccessorType ArrowWithDefaultReturnIfNull
}
internal UnityEngine.Bindings.TargetType : Enum {
public int value__
public TargetType Function
public TargetType Field
}
internal UnityEngine.Bindings.VisibleToOtherModulesAttribute : Attribute {
public void .ctor(String[] modules)
}
internal UnityEngine.IL2CPPStructAlignmentAttribute : Attribute {
public int Align
}
internal UnityEngine.NativeClassAttribute : Attribute {
private string <QualifiedNativeName>k__BackingField
private string <Declaration>k__BackingField
public string QualifiedNativeName
public string Declaration
public string get_QualifiedNativeName()
private void set_QualifiedNativeName(string value)
public string get_Declaration()
private void set_Declaration(string value)
public void .ctor(string qualifiedCppName)
public void .ctor(string qualifiedCppName, string declaration)
}
internal UnityEngine.Scripting.RequiredByNativeCodeAttribute : Attribute {
private string <Name>k__BackingField
private bool <Optional>k__BackingField
private bool <GenerateProxy>k__BackingField
public string Name
public bool Optional
public bool GenerateProxy
public void .ctor(string name)
public void .ctor(bool optional)
public void .ctor(string name, bool optional)
public string get_Name()
public void set_Name(string value)
public bool get_Optional()
public void set_Optional(bool value)
public bool get_GenerateProxy()
public void set_GenerateProxy(bool value)
}
internal UnityEngine.Scripting.UsedByNativeCodeAttribute : Attribute {
private string <Name>k__BackingField
public string Name
public void .ctor(string name)
public string get_Name()
public void set_Name(string value)
}
internal UnityEngine.UnityString : object {
public string Format(string fmt, Object[] args)
}
