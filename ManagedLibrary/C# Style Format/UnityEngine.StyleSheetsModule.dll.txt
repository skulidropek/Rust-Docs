internal UnityEngine.StyleSheets.StyleComplexSelector : object {
private int m_Specificity
private StyleRule <rule>k__BackingField
private StyleSelector[] m_Selectors
internal int ruleIndex
private Func`2<StyleSelector, string> <>f__am$cache0
public int specificity
public StyleRule rule
public bool isSimple
public StyleSelector[] selectors
public int get_specificity()
internal void set_specificity(int value)
public StyleRule get_rule()
internal void set_rule(StyleRule value)
public bool get_isSimple()
public StyleSelector[] get_selectors()
internal void set_selectors(StyleSelector[] value)
public string ToString()
private string <ToString>m__0(StyleSelector x)
}
internal UnityEngine.StyleSheets.StyleProperty : object {
private string m_Name
private StyleValueHandle[] m_Values
public string name
public StyleValueHandle[] values
public string get_name()
internal void set_name(string value)
public StyleValueHandle[] get_values()
internal void set_values(StyleValueHandle[] value)
}
internal UnityEngine.StyleSheets.StyleRule : object {
private StyleProperty[] m_Properties
internal int line
public StyleProperty[] properties
public StyleProperty[] get_properties()
internal void set_properties(StyleProperty[] value)
}
internal UnityEngine.StyleSheets.StyleSelector : object {
private StyleSelectorPart[] m_Parts
private StyleSelectorRelationship m_PreviousRelationship
internal int pseudoStateMask
internal int negatedPseudoStateMask
private Func`2<StyleSelectorPart, string> <>f__am$cache0
public StyleSelectorPart[] parts
public StyleSelectorRelationship previousRelationship
public StyleSelectorPart[] get_parts()
internal void set_parts(StyleSelectorPart[] value)
public StyleSelectorRelationship get_previousRelationship()
internal void set_previousRelationship(StyleSelectorRelationship value)
public string ToString()
private string <ToString>m__0(StyleSelectorPart p)
}
internal UnityEngine.StyleSheets.StyleSelectorPart : ValueType {
private string m_Value
private StyleSelectorType m_Type
internal object tempData
public string value
public StyleSelectorType type
public string get_value()
internal void set_value(string value)
public StyleSelectorType get_type()
internal void set_type(StyleSelectorType value)
public string ToString()
public StyleSelectorPart CreateClass(string className)
public StyleSelectorPart CreateId(string Id)
public StyleSelectorPart CreateType(Type t)
public StyleSelectorPart CreatePredicate(object predicate)
public StyleSelectorPart CreateWildCard()
}
internal UnityEngine.StyleSheets.StyleSelectorRelationship : Enum {
public int value__
public StyleSelectorRelationship None
public StyleSelectorRelationship Child
public StyleSelectorRelationship Descendent
}
internal UnityEngine.StyleSheets.StyleSelectorType : Enum {
public int value__
public StyleSelectorType Unknown
public StyleSelectorType Wildcard
public StyleSelectorType Type
public StyleSelectorType Class
public StyleSelectorType PseudoClass
public StyleSelectorType RecursivePseudoClass
public StyleSelectorType ID
public StyleSelectorType Predicate
}
internal UnityEngine.StyleSheets.StyleSheet : ScriptableObject {
private StyleRule[] m_Rules
private StyleComplexSelector[] m_ComplexSelectors
internal Single[] floats
internal Color[] colors
internal String[] strings
public StyleRule[] rules
public StyleComplexSelector[] complexSelectors
public StyleRule[] get_rules()
internal void set_rules(StyleRule[] value)
public StyleComplexSelector[] get_complexSelectors()
internal void set_complexSelectors(StyleComplexSelector[] value)
private bool TryCheckAccess(T[] list, StyleValueType type, StyleValueHandle[] handles, int index, T& value)
private T CheckAccess(T[] list, StyleValueType type, StyleValueHandle handle)
private void OnEnable()
private void SetupReferences()
public StyleValueKeyword ReadKeyword(StyleValueHandle handle)
public float ReadFloat(StyleValueHandle handle)
public bool TryReadFloat(StyleValueHandle[] handles, int index, Single& value)
public Color ReadColor(StyleValueHandle handle)
public bool TryReadColor(StyleValueHandle[] handles, int index, Color& value)
public string ReadString(StyleValueHandle handle)
public bool TryReadString(StyleValueHandle[] handles, int index, String& value)
public string ReadEnum(StyleValueHandle handle)
public bool TryReadEnum(StyleValueHandle[] handles, int index, String& value)
public string ReadResourcePath(StyleValueHandle handle)
public bool TryReadResourcePath(StyleValueHandle[] handles, int index, String& value)
}
internal UnityEngine.StyleSheets.StyleValueHandle : ValueType {
private StyleValueType m_ValueType
internal int valueIndex
public StyleValueType valueType
internal void .ctor(int valueIndex, StyleValueType valueType)
public StyleValueType get_valueType()
internal void set_valueType(StyleValueType value)
}
internal UnityEngine.StyleSheets.StyleValueKeyword : Enum {
public int value__
public StyleValueKeyword Inherit
public StyleValueKeyword Auto
public StyleValueKeyword Unset
public StyleValueKeyword True
public StyleValueKeyword False
public StyleValueKeyword None
}
internal UnityEngine.StyleSheets.StyleValueType : Enum {
public int value__
public StyleValueType Keyword
public StyleValueType Float
public StyleValueType Color
public StyleValueType ResourcePath
public StyleValueType Enum
public StyleValueType String
}
