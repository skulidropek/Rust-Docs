[IsReadOnlyAttribute]
internal class Facepunch.Nexus.ApiResult : ValueType {
    [CompilerGeneratedAttribute]

private HttpStatusCode <StatusCode>k__BackingField;
    
public HttpStatusCode StatusCode { get; }
    
public bool IsSuccess { get; }
    public ApiResult(HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    public bool get_IsSuccess();
    public void EnsureSuccessful();
}
[IsReadOnlyAttribute]
internal class Facepunch.Nexus.ApiResult`1 : ValueType {
    [CompilerGeneratedAttribute]

private HttpStatusCode <StatusCode>k__BackingField;
    
private T _response;
    
private bool _hasResponse;
    
public HttpStatusCode StatusCode { get; }
    
public bool IsSuccess { get; }
    
public T Response { get; }
    public ApiResult`1(HttpStatusCode statusCode, T response);
    public ApiResult`1(HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_StatusCode();
    public bool get_IsSuccess();
    public void EnsureSuccessful();
    public void EnsureSuccessfulWithResponse();
    public T get_Response();
    public bool TryGetResponse(T& response);
}
public abstract class Facepunch.Nexus.BaseNexusClient : NexusAnonymousClient {
    [CompilerGeneratedAttribute]

private NexusVariableChangedHandler OnVariableChanged;
    [CompilerGeneratedAttribute]

private NexusErrorHandler OnError;
    
protected IClockProvider Clock;
    
protected CancellationToken CancellationToken;
    
private CancellationTokenSource _cts;
    
private double _updateInterval;
    
private bool _disposed;
    
private bool _started;
    
protected bool ShouldUpdateVariables { get; }
    protected BaseNexusClient(INexusConnector connector, IClockProvider clock, double updateInterval);
    [CompilerGeneratedAttribute]
public void add_OnVariableChanged(NexusVariableChangedHandler value);
    [CompilerGeneratedAttribute]
public void remove_OnVariableChanged(NexusVariableChangedHandler value);
    [CompilerGeneratedAttribute]
public void add_OnError(NexusErrorHandler value);
    [CompilerGeneratedAttribute]
public void remove_OnError(NexusErrorHandler value);
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Facepunch.Nexus.BaseNexusClient/<Start>d__16")]
public Task Start();
    protected abstract virtual ValueTask Initialize(CancellationToken ct);
    protected abstract virtual ValueTask Update(CancellationToken ct);
    [AsyncStateMachineAttribute("Facepunch.Nexus.BaseNexusClient/<UpdateLoop>d__19")]
private Task UpdateLoop(CancellationToken ct);
    protected virtual bool get_ShouldUpdateVariables();
    internal void UpdateVariables(VariableContainer container, Dictionary`2<string, VariableData> updatedData);
    internal void DispatchVariableChanged(string key);
    internal void DispatchError(Exception exception);
}
public abstract class Facepunch.Nexus.BaseNexusPlayerClient : BaseNexusClient {
    
private protected VariableContainer NexusVariables;
    
private protected VariableContainer ZoneVariables;
    
private protected VariableContainer PlayerVariables;
    [CompilerGeneratedAttribute]

private int <NexusId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ZoneKey>k__BackingField;
    [CompilerGeneratedAttribute]

private NexusDetails <Nexus>k__BackingField;
    [CompilerGeneratedAttribute]

private PlayerDetails <Player>k__BackingField;
    
public int NexusId { get; protected set; }
    
public string ZoneKey { get; protected set; }
    
public NexusDetails Nexus { get; protected set; }
    
public NexusZoneDetails Zone { get; }
    
public PlayerDetails Player { get; protected set; }
    
protected bool ShouldUpdateVariables { get; }
    internal BaseNexusPlayerClient(INexusConnector connector, IClockProvider clock, double updateInterval);
    [CompilerGeneratedAttribute]
public int get_NexusId();
    [CompilerGeneratedAttribute]
protected void set_NexusId(int value);
    [CompilerGeneratedAttribute]
public string get_ZoneKey();
    [CompilerGeneratedAttribute]
protected void set_ZoneKey(string value);
    [CompilerGeneratedAttribute]
public NexusDetails get_Nexus();
    [CompilerGeneratedAttribute]
protected void set_Nexus(NexusDetails value);
    public NexusZoneDetails get_Zone();
    [CompilerGeneratedAttribute]
public PlayerDetails get_Player();
    [CompilerGeneratedAttribute]
protected void set_Player(PlayerDetails value);
    protected internal abstract virtual ValueTask`1<PlayerDetails> GetPlayerDetails(int nexusId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.BaseNexusPlayerClient/<SelectNexus>d__23")]
public ValueTask`1<PlayerDetails> SelectNexus(int nexusId);
    protected virtual ValueTask Initialize(CancellationToken ct);
    protected virtual void Reset();
    protected virtual bool get_ShouldUpdateVariables();
    public bool TryGetNexusVariable(string key, Variable& variable);
    public bool TryGetZoneVariable(string key, Variable& variable);
    public bool TryGetPlayerVariable(string key, Variable& variable);
    protected virtual void OnNexusDetailsUpdated(int nexusId, NexusDetails details);
    private static NexusZoneDetails FindZone(NexusDetails nexus, string zoneKey);
}
internal abstract class Facepunch.Nexus.CachedValue : object {
    
internal static double CacheExpirySeconds;
    
protected IClockProvider Clock;
    protected CachedValue(IClockProvider clock);
}
internal class Facepunch.Nexus.CachedValue`1 : CachedValue {
    
private double _expiryTime;
    
private bool _hasValue;
    
private TValue _value;
    public CachedValue`1(IClockProvider clock);
    public bool TryGetValue(TValue& value);
    public TValue& modreq(System.Runtime.InteropServices.InAttribute) Update(TValue& value);
    public void Invalidate();
}
internal class Facepunch.Nexus.CachedValue`2 : CachedValue {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]

private Dictionary`2<TKey, ValueTuple`2<TValue, double>> _values;
    public CachedValue`2(IClockProvider clock);
    public bool TryGetValue(TKey& key, TValue& value);
    public TValue& modreq(System.Runtime.InteropServices.InAttribute) Update(TKey& key, TValue& value);
    public void Invalidate(TKey& key);
}
public interface Facepunch.Nexus.Connector.INexusConnector {
    public abstract virtual Task`1<NexusListing> ListNexuses(string publicKey, NexusRealm realm);
    public abstract virtual Task`1<NexusDetails> GetNexus(int nexusId);
}
internal interface Facepunch.Nexus.Connector.INexusPlayerConnector {
    public abstract virtual Task`1<PlayerDetails> GetPlayerDetails(int nexusId, string playerAuthToken);
}
internal interface Facepunch.Nexus.Connector.INexusSocketConnector {
    
public bool IsStarted { get; }
    
public bool IsConnected { get; }
    public abstract virtual bool get_IsStarted();
    public abstract virtual bool get_IsConnected();
    public abstract virtual void Start();
    public abstract virtual bool TryReceive(NexusMessage& message);
    public abstract virtual void Acknowledge(string messageId);
}
internal interface Facepunch.Nexus.Connector.INexusZoneConnector {
    public abstract virtual Task`1<ZoneDetails> GetZoneDetails();
    public abstract virtual Task`1<ZonePlayerDetails> GetPlayerDetails(string playerId);
    public abstract virtual Task`1<ZonePlayerLogin> PlayerLogin(string playerId);
    public abstract virtual Task Assign(string playerId, string toZone);
    public abstract virtual Task RegisterTransfers(string toZone, IEnumerable`1<string> playerIds);
    public abstract virtual Task CompleteTransfers(IEnumerable`1<string> playerIds);
    public abstract virtual Task SendMessage(string toZone, Guid id, string message, Nullable`1<int> ttl, string contentType);
    public abstract virtual Task SendMessage(string toZone, Guid id, Memory`1<byte> message, Nullable`1<int> ttl, string contentType);
    public abstract virtual Task SetNexusVariable(string key, string value, bool transient, bool secret);
    public abstract virtual Task SetNexusVariable(string key, Memory`1<byte> value, bool transient, bool secret);
    public abstract virtual Task SetZoneVariable(string key, string value, bool transient, bool secret);
    public abstract virtual Task SetZoneVariable(string key, Memory`1<byte> value, bool transient, bool secret);
    public abstract virtual Task SetPlayerVariable(string playerId, string key, string value, bool transient, bool secret);
    public abstract virtual Task SetPlayerVariable(string playerId, string key, Memory`1<byte> value, bool transient, bool secret);
    public abstract virtual Task`1<List`1<string>> FindPlayersWithVariable(string key, string value);
    public abstract virtual Task`1<ZoneMapCheckResult> CheckUploadedMap();
    public abstract virtual Task UploadMap(string key, Byte[] pngMapImage);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> CreateClan(ClanCreateParameters parameters);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> GetClan(long clanId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> GetClanByMember(string playerId);
    public abstract virtual Task`1<ApiResult> DisbandClan(long clanId, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> UpdateClanVariables(long clanId, ClanVariablesUpdate update);
    public abstract virtual Task`1<ApiResult`1<List`1<ClanLeaderboardEntry>>> GetClanLeaderboard(int limit);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> CreateRole(long clanId, ClanRoleParameters parameters, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> UpdateRole(long clanId, int roleId, ClanRoleParameters parameters, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> DeleteRole(long clanId, int roleId, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> SwapRoleRanks(long clanId, int roleIdA, int roleIdB, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> CreateInvite(long clanId, string playerId, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> AcceptInvite(long clanId, string playerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> CancelInvite(long clanId, string playerId, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> Kick(long clanId, string playerId, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<List`1<ClanInvitation>>> ListInvitations(string playerId);
    public abstract virtual Task`1<ApiResult> UpdateLastSeen(long clanId, string playerId);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> UpdatePlayerClanVariables(long clanId, string playerId, ClanVariablesUpdate update);
    public abstract virtual Task`1<ApiResult`1<ClanDetails>> SetPlayerRole(long clanId, string playerId, int roleId, string byPlayerId);
    public abstract virtual Task`1<ApiResult`1<List`1<ClanLogEntry>>> GetClanLogs(long clanId, string byPlayerId, int limit);
    public abstract virtual Task`1<ApiResult> AddClanLog(long clanId, string eventKey, string arg1, string arg2, string arg3, string arg4);
    public abstract virtual Task`1<ApiResult`1<List`1<ClanScoreEventEntry>>> GetClanScoreEvents(long clanId, string byPlayerId, int limit);
    public abstract virtual Task`1<ApiResult> AddClanScoreEvent(long clanId, NewClanScoreEventEntry entry);
    public abstract virtual Task`1<ApiResult> AddClanScoreEventBatch(List`1<NewClanScoreEventBatchEntry> entries);
}
internal class Facepunch.Nexus.Connector.NexusConnector : object {
    
private static int MaxRetryCount;
    
private static double BaseRetryDelay;
    
protected INexusLogger Logger;
    
protected string BaseUrl;
    
protected HttpClient HttpClient;
    
private static Task`1<int> CompletedDummyTask;
    public NexusConnector(INexusLogger logger, string baseUrl);
    private static NexusConnector();
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusConnector/<ListNexuses>d__6")]
public sealed virtual Task`1<NexusListing> ListNexuses(string publicKey, NexusRealm realm);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusConnector/<GetNexus>d__7")]
public sealed virtual Task`1<NexusDetails> GetNexus(int nexusId);
    protected Task`1<ApiResult`1<TResponse>> GetRequest(string url, string authToken);
    protected Task`1<ApiResult`1<TResponse>> PostRequest(string url, string authToken);
    protected Task`1<ApiResult`1<TResponse>> PostRequest(string url, TRequest requestBody, string authToken);
    protected Task`1<ApiResult`1<TResponse>> DeleteRequest(string url, string authToken);
    protected Task`1<ApiResult> PostRequestWithoutResponse(string url, TRequest requestBody, string authToken);
    protected Task`1<ApiResult> PostRequestWithoutResponse(string url, string authToken);
    protected Task`1<ApiResult> PostRequestRawWithoutResponse(string url, string payload, string payloadMimeType, string authToken);
    protected Task`1<ApiResult> PostRequestRawWithoutResponse(string url, ArraySegment`1<byte> payload, string payloadMimeType, string authToken);
    protected Task`1<ApiResult> DeleteRequestWithoutResponse(string url, string authToken);
    private Task`1<ApiResult`1<TResponse>> SendRequest(Request& request, string authToken);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusConnector/<SendRequestWithoutResponse>d__19")]
private Task`1<ApiResult> SendRequestWithoutResponse(Request request, string authToken);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusConnector/<SendRequestImpl>d__20`1")]
private Task`1<ApiResult`1<TResponse>> SendRequestImpl(Request request, string authToken, Func`2<HttpResponseMessage, Task`1<TResponse>> responseReader);
}
internal class Facepunch.Nexus.Connector.NexusPlayerConnector : NexusConnector {
    
private string _playerInfoEndpoint;
    public NexusPlayerConnector(INexusLogger logger, string baseUrl);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusPlayerConnector/<GetPlayerDetails>d__2")]
public sealed virtual Task`1<PlayerDetails> GetPlayerDetails(int nexusId, string playerAuthToken);
}
internal class Facepunch.Nexus.Connector.NexusSocketConnector : object {
    
private static int MaxMessageIdLength;
    
private INexusLogger _logger;
    
private CancellationTokenSource _cts;
    
private Uri _socketEndpoint;
    
private string _secretKey;
    
private Queue`1<NexusMessage> _incoming;
    
private Channel`1<string> _outgoing;
    
private bool _started;
    
private ClientWebSocket _socket;
    
public bool IsStarted { get; }
    
public bool IsConnected { get; }
    public NexusSocketConnector(INexusLogger logger, string baseUrl, string secretKey, int lockDuration);
    public sealed virtual bool get_IsStarted();
    public sealed virtual bool get_IsConnected();
    public sealed virtual void Dispose();
    public sealed virtual void Start();
    public sealed virtual bool TryReceive(NexusMessage& message);
    public sealed virtual void Acknowledge(string messageId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusSocketConnector/<ReconnectLoop>d__18")]
private Task ReconnectLoop(CancellationToken ct);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusSocketConnector/<HandleIncoming>d__19")]
private Task HandleIncoming(CancellationToken ct);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusSocketConnector/<HandleOutgoing>d__20")]
private Task HandleOutgoing(CancellationToken ct);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusSocketConnector/<Connect>d__21")]
private Task`1<ClientWebSocket> Connect(CancellationToken ct);
    [CompilerGeneratedAttribute]
private Task <Start>b__15_0();
    [CompilerGeneratedAttribute]
internal static NexusMessage <HandleIncoming>g__ReadMessage|19_0(Byte[] buffer, int length);
}
internal class Facepunch.Nexus.Connector.NexusZoneConnector : NexusConnector {
    
private string _getZoneInfoEndpoint;
    
private string _getPlayerInfoEndpoint;
    
private string _playerLoginEndpoint;
    
private string _assignEndpoint;
    
private string _registerTransferEndpoint;
    
private string _completeTransferEndpoint;
    
private string _messageEndpoint;
    
private string _setNexusVariableEndpoint;
    
private string _setZoneVariableEndpoint;
    
private string _setPlayerVariableEndpoint;
    
private string _findPlayersWithVariableEndpoint;
    
private string _mapEndpoint;
    
private string _clanEndpoint;
    public NexusZoneConnector(INexusLogger logger, string baseUrl, string secretKey);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<GetZoneDetails>d__14")]
public sealed virtual Task`1<ZoneDetails> GetZoneDetails();
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<GetPlayerDetails>d__15")]
public sealed virtual Task`1<ZonePlayerDetails> GetPlayerDetails(string playerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<PlayerLogin>d__16")]
public sealed virtual Task`1<ZonePlayerLogin> PlayerLogin(string playerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<Assign>d__17")]
public sealed virtual Task Assign(string playerId, string toZone);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<RegisterTransfers>d__18")]
public sealed virtual Task RegisterTransfers(string toZone, IEnumerable`1<string> playerIds);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<CompleteTransfers>d__19")]
public sealed virtual Task CompleteTransfers(IEnumerable`1<string> playerIds);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<SendMessage>d__20")]
public sealed virtual Task SendMessage(string toZone, Guid id, string message, Nullable`1<int> ttl, string contentType);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<SendMessage>d__21")]
public sealed virtual Task SendMessage(string toZone, Guid id, Memory`1<byte> message, Nullable`1<int> ttl, string contentType);
    public sealed virtual Task SetNexusVariable(string key, string value, bool transient, bool secret);
    public sealed virtual Task SetNexusVariable(string key, Memory`1<byte> value, bool transient, bool secret);
    public sealed virtual Task SetZoneVariable(string key, string value, bool transient, bool secret);
    public sealed virtual Task SetZoneVariable(string key, Memory`1<byte> value, bool transient, bool secret);
    public sealed virtual Task SetPlayerVariable(string playerId, string key, string value, bool transient, bool secret);
    public sealed virtual Task SetPlayerVariable(string playerId, string key, Memory`1<byte> value, bool transient, bool secret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<SetVariableImpl>d__28")]
private Task SetVariableImpl(string endpoint, string key, string value, bool transient, bool secret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<SetVariableImpl>d__29")]
private Task SetVariableImpl(string endpoint, string key, Memory`1<byte> value, bool transient, bool secret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<FindPlayersWithVariable>d__30")]
public sealed virtual Task`1<List`1<string>> FindPlayersWithVariable(string key, string value);
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<CheckUploadedMap>d__31")]
public sealed virtual Task`1<ZoneMapCheckResult> CheckUploadedMap();
    [AsyncStateMachineAttribute("Facepunch.Nexus.Connector.NexusZoneConnector/<UploadMap>d__32")]
public sealed virtual Task UploadMap(string key, Byte[] pngMapImage);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> CreateClan(ClanCreateParameters parameters);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> GetClan(long clanId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> GetClanByMember(string playerId);
    public sealed virtual Task`1<ApiResult> DisbandClan(long clanId, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> UpdateClanVariables(long clanId, ClanVariablesUpdate update);
    public sealed virtual Task`1<ApiResult`1<List`1<ClanLeaderboardEntry>>> GetClanLeaderboard(int limit);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> CreateRole(long clanId, ClanRoleParameters parameters, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> UpdateRole(long clanId, int roleId, ClanRoleParameters parameters, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> DeleteRole(long clanId, int roleId, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> SwapRoleRanks(long clanId, int roleIdA, int roleIdB, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> CreateInvite(long clanId, string playerId, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> AcceptInvite(long clanId, string playerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> CancelInvite(long clanId, string playerId, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> Kick(long clanId, string playerId, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<List`1<ClanInvitation>>> ListInvitations(string playerId);
    public sealed virtual Task`1<ApiResult> UpdateLastSeen(long clanId, string playerId);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> UpdatePlayerClanVariables(long clanId, string playerId, ClanVariablesUpdate update);
    public sealed virtual Task`1<ApiResult`1<ClanDetails>> SetPlayerRole(long clanId, string playerId, int roleId, string byPlayerId);
    public sealed virtual Task`1<ApiResult`1<List`1<ClanLogEntry>>> GetClanLogs(long clanId, string byPlayerId, int limit);
    public sealed virtual Task`1<ApiResult> AddClanLog(long clanId, string eventKey, string arg1, string arg2, string arg3, string arg4);
    public sealed virtual Task`1<ApiResult`1<List`1<ClanScoreEventEntry>>> GetClanScoreEvents(long clanId, string byPlayerId, int limit);
    public sealed virtual Task`1<ApiResult> AddClanScoreEvent(long clanId, NewClanScoreEventEntry entry);
    public sealed virtual Task`1<ApiResult> AddClanScoreEventBatch(List`1<NewClanScoreEventBatchEntry> entries);
}
public interface Facepunch.Nexus.INexusClanEventListener {
    public abstract virtual void OnDisbanded(ClanDisbandedEvent& modreq(System.Runtime.InteropServices.InAttribute) args);
    public abstract virtual void OnInvitation(ClanInvitedEvent& modreq(System.Runtime.InteropServices.InAttribute) args);
    public abstract virtual void OnJoined(ClanJoinedEvent& modreq(System.Runtime.InteropServices.InAttribute) args);
    public abstract virtual void OnKicked(ClanKickedEvent& modreq(System.Runtime.InteropServices.InAttribute) args);
    public abstract virtual void OnChanged(ClanChangedEvent& modreq(System.Runtime.InteropServices.InAttribute) args);
    public abstract virtual void OnUnload(Int64& modreq(System.Runtime.InteropServices.InAttribute) clanId);
}
public class Facepunch.Nexus.Logging.ConsoleLogger : object {
    [CompilerGeneratedAttribute]

private static ConsoleLogger <Instance>k__BackingField;
    
public static ConsoleLogger Instance { get; }
    private static ConsoleLogger();
    [CompilerGeneratedAttribute]
public static ConsoleLogger get_Instance();
    public sealed virtual void Log(NexusLogLevel level, string message, Exception exception);
}
public interface Facepunch.Nexus.Logging.INexusLogger {
    public abstract virtual void Log(NexusLogLevel level, string message, Exception exception);
}
[ExtensionAttribute]
public static class Facepunch.Nexus.Logging.NexusLoggerExtensions : object {
    [ExtensionAttribute]
public static void LogInfo(INexusLogger logger, string message);
    [ExtensionAttribute]
public static void LogWarn(INexusLogger logger, string message, Exception exception);
    [ExtensionAttribute]
public static void LogError(INexusLogger logger, string message, Exception exception);
}
public enum Facepunch.Nexus.Logging.NexusLogLevel : Enum {
    
public int value__;
    
public static NexusLogLevel Info;
    
public static NexusLogLevel Warn;
    
public static NexusLogLevel Error;
}
public class Facepunch.Nexus.Logging.NullLogger : object {
    [CompilerGeneratedAttribute]

private static NullLogger <Instance>k__BackingField;
    
public static NullLogger Instance { get; }
    private static NullLogger();
    [CompilerGeneratedAttribute]
public static NullLogger get_Instance();
    public sealed virtual void Log(NexusLogLevel level, string message, Exception exception);
}
public class Facepunch.Nexus.Models.ClanChangedEvent : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    
public long ClanId { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
}
public class Facepunch.Nexus.Models.ClanCreateParameters : ValueType {
    [CompilerGeneratedAttribute]

private string <ClanName>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ClanNameNormalized>k__BackingField;
    [CompilerGeneratedAttribute]

private string <LeaderPlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <LeaderRoleName>k__BackingField;
    [CompilerGeneratedAttribute]

private string <MemberRoleName>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<VariableUpdate> <ClanVariables>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<VariableUpdate> <LeaderRoleVariables>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<VariableUpdate> <MemberRoleVariables>k__BackingField;
    
public string ClanName { get; public set; }
    
public string ClanNameNormalized { get; public set; }
    
public string LeaderPlayerId { get; public set; }
    
public string LeaderRoleName { get; public set; }
    
public string MemberRoleName { get; public set; }
    
public List`1<VariableUpdate> ClanVariables { get; public set; }
    
public List`1<VariableUpdate> LeaderRoleVariables { get; public set; }
    
public List`1<VariableUpdate> MemberRoleVariables { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClanName();
    [CompilerGeneratedAttribute]
public void set_ClanName(string value);
    [CompilerGeneratedAttribute]
public string get_ClanNameNormalized();
    [CompilerGeneratedAttribute]
public void set_ClanNameNormalized(string value);
    [CompilerGeneratedAttribute]
public string get_LeaderPlayerId();
    [CompilerGeneratedAttribute]
public void set_LeaderPlayerId(string value);
    [CompilerGeneratedAttribute]
public string get_LeaderRoleName();
    [CompilerGeneratedAttribute]
public void set_LeaderRoleName(string value);
    [CompilerGeneratedAttribute]
public string get_MemberRoleName();
    [CompilerGeneratedAttribute]
public void set_MemberRoleName(string value);
    [CompilerGeneratedAttribute]
public List`1<VariableUpdate> get_ClanVariables();
    [CompilerGeneratedAttribute]
public void set_ClanVariables(List`1<VariableUpdate> value);
    [CompilerGeneratedAttribute]
public List`1<VariableUpdate> get_LeaderRoleVariables();
    [CompilerGeneratedAttribute]
public void set_LeaderRoleVariables(List`1<VariableUpdate> value);
    [CompilerGeneratedAttribute]
public List`1<VariableUpdate> get_MemberRoleVariables();
    [CompilerGeneratedAttribute]
public void set_MemberRoleVariables(List`1<VariableUpdate> value);
}
public class Facepunch.Nexus.Models.ClanDetails : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Creator>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Score>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<ClanRole> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<ClanMember> <Members>k__BackingField;
    [CompilerGeneratedAttribute]

private int <MaxMemberCount>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<ClanInvite> <Invites>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    
public long ClanId { get; public set; }
    
public string Name { get; public set; }
    
public long Created { get; public set; }
    
public string Creator { get; public set; }
    
public long Score { get; public set; }
    
public List`1<ClanRole> Roles { get; public set; }
    
public List`1<ClanMember> Members { get; public set; }
    
public int MaxMemberCount { get; public set; }
    
public List`1<ClanInvite> Invites { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(long value);
    [CompilerGeneratedAttribute]
public string get_Creator();
    [CompilerGeneratedAttribute]
public void set_Creator(string value);
    [CompilerGeneratedAttribute]
public long get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(long value);
    [CompilerGeneratedAttribute]
public List`1<ClanRole> get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(List`1<ClanRole> value);
    [CompilerGeneratedAttribute]
public List`1<ClanMember> get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(List`1<ClanMember> value);
    [CompilerGeneratedAttribute]
public int get_MaxMemberCount();
    [CompilerGeneratedAttribute]
public void set_MaxMemberCount(int value);
    [CompilerGeneratedAttribute]
public List`1<ClanInvite> get_Invites();
    [CompilerGeneratedAttribute]
public void set_Invites(List`1<ClanInvite> value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
}
public class Facepunch.Nexus.Models.ClanDisbandedEvent : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<string> <Members>k__BackingField;
    
public long ClanId { get; public set; }
    
public List`1<string> Members { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Members();
    [CompilerGeneratedAttribute]
public void set_Members(List`1<string> value);
}
public class Facepunch.Nexus.Models.ClanInvitation : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <RecruiterPlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Timestamp>k__BackingField;
    
public long ClanId { get; public set; }
    
public string RecruiterPlayerId { get; public set; }
    
public long Timestamp { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public string get_RecruiterPlayerId();
    [CompilerGeneratedAttribute]
public void set_RecruiterPlayerId(string value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(long value);
}
public class Facepunch.Nexus.Models.ClanInvite : ValueType {
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <RecruiterPlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Created>k__BackingField;
    
public string PlayerId { get; public set; }
    
public string RecruiterPlayerId { get; public set; }
    
public long Created { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public string get_RecruiterPlayerId();
    [CompilerGeneratedAttribute]
public void set_RecruiterPlayerId(string value);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(long value);
}
public class Facepunch.Nexus.Models.ClanInvitedEvent : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    
public long ClanId { get; public set; }
    
public string PlayerId { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
}
public class Facepunch.Nexus.Models.ClanJoinedEvent : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    
public long ClanId { get; public set; }
    
public string PlayerId { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
}
public class Facepunch.Nexus.Models.ClanKickedEvent : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    
public long ClanId { get; public set; }
    
public string PlayerId { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
}
public class Facepunch.Nexus.Models.ClanLeaderboardEntry : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Score>k__BackingField;
    
public long ClanId { get; public set; }
    
public string Name { get; public set; }
    
public long Score { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(long value);
}
public class Facepunch.Nexus.Models.ClanLogEntry : ValueType {
    [CompilerGeneratedAttribute]

private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]

private string <EventKey>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg4>k__BackingField;
    
public long Timestamp { get; public set; }
    
public string EventKey { get; public set; }
    
public string Arg1 { get; public set; }
    
public string Arg2 { get; public set; }
    
public string Arg3 { get; public set; }
    
public string Arg4 { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public string get_EventKey();
    [CompilerGeneratedAttribute]
public void set_EventKey(string value);
    [CompilerGeneratedAttribute]
public string get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(string value);
    [CompilerGeneratedAttribute]
public string get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(string value);
    [CompilerGeneratedAttribute]
public string get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(string value);
    [CompilerGeneratedAttribute]
public string get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(string value);
}
public class Facepunch.Nexus.Models.ClanMember : ValueType {
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <RoleId>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Joined>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastSeen>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    
public string PlayerId { get; public set; }
    
public int RoleId { get; public set; }
    
public long Joined { get; public set; }
    
public long LastSeen { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public int get_RoleId();
    [CompilerGeneratedAttribute]
public void set_RoleId(int value);
    [CompilerGeneratedAttribute]
public long get_Joined();
    [CompilerGeneratedAttribute]
public void set_Joined(long value);
    [CompilerGeneratedAttribute]
public long get_LastSeen();
    [CompilerGeneratedAttribute]
public void set_LastSeen(long value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
}
public class Facepunch.Nexus.Models.ClanRole : ValueType {
    [CompilerGeneratedAttribute]

private int <RoleId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Rank>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanInvite>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanKick>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanPromote>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanDemote>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanAccessLogs>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanAccessScoreEvents>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    
public int RoleId { get; public set; }
    
public int Rank { get; public set; }
    
public string Name { get; public set; }
    
public bool CanInvite { get; public set; }
    
public bool CanKick { get; public set; }
    
public bool CanPromote { get; public set; }
    
public bool CanDemote { get; public set; }
    
public bool CanAccessLogs { get; public set; }
    
public bool CanAccessScoreEvents { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    [CompilerGeneratedAttribute]
public int get_RoleId();
    [CompilerGeneratedAttribute]
public void set_RoleId(int value);
    [CompilerGeneratedAttribute]
public int get_Rank();
    [CompilerGeneratedAttribute]
public void set_Rank(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_CanInvite();
    [CompilerGeneratedAttribute]
public void set_CanInvite(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanKick();
    [CompilerGeneratedAttribute]
public void set_CanKick(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanPromote();
    [CompilerGeneratedAttribute]
public void set_CanPromote(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanDemote();
    [CompilerGeneratedAttribute]
public void set_CanDemote(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanAccessLogs();
    [CompilerGeneratedAttribute]
public void set_CanAccessLogs(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanAccessScoreEvents();
    [CompilerGeneratedAttribute]
public void set_CanAccessScoreEvents(bool value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
}
public class Facepunch.Nexus.Models.ClanRoleParameters : ValueType {
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanInvite>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanKick>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanPromote>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanDemote>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanAccessLogs>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanAccessScoreEvents>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<VariableUpdate> <Variables>k__BackingField;
    
public string Name { get; public set; }
    
public bool CanInvite { get; public set; }
    
public bool CanKick { get; public set; }
    
public bool CanPromote { get; public set; }
    
public bool CanDemote { get; public set; }
    
public bool CanAccessLogs { get; public set; }
    
public bool CanAccessScoreEvents { get; public set; }
    
public List`1<VariableUpdate> Variables { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_CanInvite();
    [CompilerGeneratedAttribute]
public void set_CanInvite(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanKick();
    [CompilerGeneratedAttribute]
public void set_CanKick(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanPromote();
    [CompilerGeneratedAttribute]
public void set_CanPromote(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanDemote();
    [CompilerGeneratedAttribute]
public void set_CanDemote(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanAccessLogs();
    [CompilerGeneratedAttribute]
public void set_CanAccessLogs(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanAccessScoreEvents();
    [CompilerGeneratedAttribute]
public void set_CanAccessScoreEvents(bool value);
    [CompilerGeneratedAttribute]
public List`1<VariableUpdate> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(List`1<VariableUpdate> value);
}
public class Facepunch.Nexus.Models.ClanScoreEventEntry : ValueType {
    [CompilerGeneratedAttribute]

private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Type>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Score>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Multiplier>k__BackingField;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <OtherPlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<long> <OtherClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg2>k__BackingField;
    
public long Timestamp { get; public set; }
    
public int Type { get; public set; }
    
public int Score { get; public set; }
    
public int Multiplier { get; public set; }
    
public string PlayerId { get; public set; }
    
public string OtherPlayerId { get; public set; }
    
public Nullable`1<long> OtherClanId { get; public set; }
    
public string Arg1 { get; public set; }
    
public string Arg2 { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public int get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(int value);
    [CompilerGeneratedAttribute]
public int get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(int value);
    [CompilerGeneratedAttribute]
public int get_Multiplier();
    [CompilerGeneratedAttribute]
public void set_Multiplier(int value);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public string get_OtherPlayerId();
    [CompilerGeneratedAttribute]
public void set_OtherPlayerId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_OtherClanId();
    [CompilerGeneratedAttribute]
public void set_OtherClanId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(string value);
    [CompilerGeneratedAttribute]
public string get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(string value);
}
public class Facepunch.Nexus.Models.ClanVariablesUpdate : ValueType {
    [CompilerGeneratedAttribute]

private List`1<VariableUpdate> <Variables>k__BackingField;
    [CompilerGeneratedAttribute]

private string <EventKey>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg2>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg3>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg4>k__BackingField;
    
public List`1<VariableUpdate> Variables { get; public set; }
    
public string EventKey { get; public set; }
    
public string Arg1 { get; public set; }
    
public string Arg2 { get; public set; }
    
public string Arg3 { get; public set; }
    
public string Arg4 { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<VariableUpdate> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(List`1<VariableUpdate> value);
    [CompilerGeneratedAttribute]
public string get_EventKey();
    [CompilerGeneratedAttribute]
public void set_EventKey(string value);
    [CompilerGeneratedAttribute]
public string get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(string value);
    [CompilerGeneratedAttribute]
public string get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(string value);
    [CompilerGeneratedAttribute]
public string get_Arg3();
    [CompilerGeneratedAttribute]
public void set_Arg3(string value);
    [CompilerGeneratedAttribute]
public string get_Arg4();
    [CompilerGeneratedAttribute]
public void set_Arg4(string value);
}
internal class Facepunch.Nexus.Models.CompleteTransfersRequest : ValueType {
    [CompilerGeneratedAttribute]

private IEnumerable`1<string> <PlayerIds>k__BackingField;
    
public IEnumerable`1<string> PlayerIds { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PlayerIds();
    [CompilerGeneratedAttribute]
public void set_PlayerIds(IEnumerable`1<string> value);
}
internal class Facepunch.Nexus.Models.CompleteTransfersResponse : ValueType {
}
internal class Facepunch.Nexus.Models.IncomingMessage : ValueType {
    [CompilerGeneratedAttribute]

private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]

private Byte[] <Data>k__BackingField;
    [JsonPropertyAttribute("i")]

public string MessageId { get; public set; }
    [JsonIgnoreAttribute]

public Guid Id { get; }
    [JsonPropertyAttribute("t")]

public string ContentType { get; public set; }
    [JsonPropertyAttribute("p")]

public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    public Guid get_Id();
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Byte[] value);
}
public class Facepunch.Nexus.Models.NewClanScoreEventBatchEntry : ValueType {
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Type>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Score>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Multiplier>k__BackingField;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <OtherPlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<long> <OtherClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg2>k__BackingField;
    
public long ClanId { get; public set; }
    
public int Type { get; public set; }
    
public int Score { get; public set; }
    
public int Multiplier { get; public set; }
    
public string PlayerId { get; public set; }
    
public string OtherPlayerId { get; public set; }
    
public Nullable`1<long> OtherClanId { get; public set; }
    
public string Arg1 { get; public set; }
    
public string Arg2 { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public void set_ClanId(long value);
    [CompilerGeneratedAttribute]
public int get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(int value);
    [CompilerGeneratedAttribute]
public int get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(int value);
    [CompilerGeneratedAttribute]
public int get_Multiplier();
    [CompilerGeneratedAttribute]
public void set_Multiplier(int value);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public string get_OtherPlayerId();
    [CompilerGeneratedAttribute]
public void set_OtherPlayerId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_OtherClanId();
    [CompilerGeneratedAttribute]
public void set_OtherClanId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(string value);
    [CompilerGeneratedAttribute]
public string get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(string value);
}
public class Facepunch.Nexus.Models.NewClanScoreEventEntry : ValueType {
    [CompilerGeneratedAttribute]

private int <Type>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Score>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Multiplier>k__BackingField;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <OtherPlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<long> <OtherClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg1>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Arg2>k__BackingField;
    
public int Type { get; public set; }
    
public int Score { get; public set; }
    
public int Multiplier { get; public set; }
    
public string PlayerId { get; public set; }
    
public string OtherPlayerId { get; public set; }
    
public Nullable`1<long> OtherClanId { get; public set; }
    
public string Arg1 { get; public set; }
    
public string Arg2 { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(int value);
    [CompilerGeneratedAttribute]
public int get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(int value);
    [CompilerGeneratedAttribute]
public int get_Multiplier();
    [CompilerGeneratedAttribute]
public void set_Multiplier(int value);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public string get_OtherPlayerId();
    [CompilerGeneratedAttribute]
public void set_OtherPlayerId(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_OtherClanId();
    [CompilerGeneratedAttribute]
public void set_OtherClanId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Arg1();
    [CompilerGeneratedAttribute]
public void set_Arg1(string value);
    [CompilerGeneratedAttribute]
public string get_Arg2();
    [CompilerGeneratedAttribute]
public void set_Arg2(string value);
}
public class Facepunch.Nexus.Models.Nexus : object {
    [CompilerGeneratedAttribute]

private int <NexusId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastReset>k__BackingField;
    [CompilerGeneratedAttribute]

private int <ZoneCount>k__BackingField;
    [CompilerGeneratedAttribute]

private int <MaxPlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <OnlinePlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <QueuedPlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Build>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Tags>k__BackingField;
    
public int NexusId { get; public set; }
    
public string Name { get; public set; }
    
public long LastReset { get; public set; }
    
public int ZoneCount { get; public set; }
    
public int MaxPlayers { get; public set; }
    
public int OnlinePlayers { get; public set; }
    
public int QueuedPlayers { get; public set; }
    
public int Build { get; public set; }
    
public int Protocol { get; public set; }
    
public string Tags { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NexusId();
    [CompilerGeneratedAttribute]
public void set_NexusId(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_LastReset();
    [CompilerGeneratedAttribute]
public void set_LastReset(long value);
    [CompilerGeneratedAttribute]
public int get_ZoneCount();
    [CompilerGeneratedAttribute]
public void set_ZoneCount(int value);
    [CompilerGeneratedAttribute]
public int get_MaxPlayers();
    [CompilerGeneratedAttribute]
public void set_MaxPlayers(int value);
    [CompilerGeneratedAttribute]
public int get_OnlinePlayers();
    [CompilerGeneratedAttribute]
public void set_OnlinePlayers(int value);
    [CompilerGeneratedAttribute]
public int get_QueuedPlayers();
    [CompilerGeneratedAttribute]
public void set_QueuedPlayers(int value);
    [CompilerGeneratedAttribute]
public int get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(int value);
    [CompilerGeneratedAttribute]
public int get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(int value);
    [CompilerGeneratedAttribute]
public string get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(string value);
}
public class Facepunch.Nexus.Models.NexusDetails : object {
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastReset>k__BackingField;
    [CompilerGeneratedAttribute]

private int <MaxPlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <OnlinePlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <QueuedPlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Build>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<NexusZoneDetails> <Zones>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    
public string Name { get; public set; }
    
public long LastReset { get; public set; }
    
public int MaxPlayers { get; public set; }
    
public int OnlinePlayers { get; public set; }
    
public int QueuedPlayers { get; public set; }
    
public int Build { get; public set; }
    
public int Protocol { get; public set; }
    
public List`1<NexusZoneDetails> Zones { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_LastReset();
    [CompilerGeneratedAttribute]
public void set_LastReset(long value);
    [CompilerGeneratedAttribute]
public int get_MaxPlayers();
    [CompilerGeneratedAttribute]
public void set_MaxPlayers(int value);
    [CompilerGeneratedAttribute]
public int get_OnlinePlayers();
    [CompilerGeneratedAttribute]
public void set_OnlinePlayers(int value);
    [CompilerGeneratedAttribute]
public int get_QueuedPlayers();
    [CompilerGeneratedAttribute]
public void set_QueuedPlayers(int value);
    [CompilerGeneratedAttribute]
public int get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(int value);
    [CompilerGeneratedAttribute]
public int get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(int value);
    [CompilerGeneratedAttribute]
public List`1<NexusZoneDetails> get_Zones();
    [CompilerGeneratedAttribute]
public void set_Zones(List`1<NexusZoneDetails> value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
}
public class Facepunch.Nexus.Models.NexusListing : ValueType {
    [CompilerGeneratedAttribute]

private List`1<Nexus> <Nexuses>k__BackingField;
    
public List`1<Nexus> Nexuses { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Nexus> get_Nexuses();
    [CompilerGeneratedAttribute]
public void set_Nexuses(List`1<Nexus> value);
}
public enum Facepunch.Nexus.Models.NexusRealm : Enum {
    
public byte value__;
    
public static NexusRealm Development;
    
public static NexusRealm Staging;
    
public static NexusRealm Production;
    
public static NexusRealm Count;
}
public class Facepunch.Nexus.Models.NexusZoneDetails : object {
    [CompilerGeneratedAttribute]

private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private double <PositionX>k__BackingField;
    [CompilerGeneratedAttribute]

private double <PositionY>k__BackingField;
    [CompilerGeneratedAttribute]

private string <IpAddress>k__BackingField;
    [CompilerGeneratedAttribute]

private int <GamePort>k__BackingField;
    [CompilerGeneratedAttribute]

private int <QueryPort>k__BackingField;
    [CompilerGeneratedAttribute]

private int <MaxPlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <OnlinePlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <QueuedPlayers>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Build>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    
public int Id { get; public set; }
    
public string Key { get; public set; }
    
public string Name { get; public set; }
    
public double PositionX { get; public set; }
    
public double PositionY { get; public set; }
    
public string IpAddress { get; public set; }
    
public int GamePort { get; public set; }
    
public int QueryPort { get; public set; }
    
public int MaxPlayers { get; public set; }
    
public int OnlinePlayers { get; public set; }
    
public int QueuedPlayers { get; public set; }
    
public int Build { get; public set; }
    
public int Protocol { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_PositionX();
    [CompilerGeneratedAttribute]
public void set_PositionX(double value);
    [CompilerGeneratedAttribute]
public double get_PositionY();
    [CompilerGeneratedAttribute]
public void set_PositionY(double value);
    [CompilerGeneratedAttribute]
public string get_IpAddress();
    [CompilerGeneratedAttribute]
public void set_IpAddress(string value);
    [CompilerGeneratedAttribute]
public int get_GamePort();
    [CompilerGeneratedAttribute]
public void set_GamePort(int value);
    [CompilerGeneratedAttribute]
public int get_QueryPort();
    [CompilerGeneratedAttribute]
public void set_QueryPort(int value);
    [CompilerGeneratedAttribute]
public int get_MaxPlayers();
    [CompilerGeneratedAttribute]
public void set_MaxPlayers(int value);
    [CompilerGeneratedAttribute]
public int get_OnlinePlayers();
    [CompilerGeneratedAttribute]
public void set_OnlinePlayers(int value);
    [CompilerGeneratedAttribute]
public int get_QueuedPlayers();
    [CompilerGeneratedAttribute]
public void set_QueuedPlayers(int value);
    [CompilerGeneratedAttribute]
public int get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(int value);
    [CompilerGeneratedAttribute]
public int get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(int value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
}
public class Facepunch.Nexus.Models.PlayerDetails : object {
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastSeen>k__BackingField;
    [CompilerGeneratedAttribute]

private string <AssignedZoneKey>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ConnectZoneKey>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ConnectIpAddress>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<int> <ConnectGamePort>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<int> <ConnectQueryPort>k__BackingField;
    
public string PlayerId { get; public set; }
    
public long LastSeen { get; public set; }
    
public string AssignedZoneKey { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    
public string ConnectZoneKey { get; public set; }
    
public string ConnectIpAddress { get; public set; }
    
public Nullable`1<int> ConnectGamePort { get; public set; }
    
public Nullable`1<int> ConnectQueryPort { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public long get_LastSeen();
    [CompilerGeneratedAttribute]
public void set_LastSeen(long value);
    [CompilerGeneratedAttribute]
public string get_AssignedZoneKey();
    [CompilerGeneratedAttribute]
public void set_AssignedZoneKey(string value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
    [CompilerGeneratedAttribute]
public string get_ConnectZoneKey();
    [CompilerGeneratedAttribute]
public void set_ConnectZoneKey(string value);
    [CompilerGeneratedAttribute]
public string get_ConnectIpAddress();
    [CompilerGeneratedAttribute]
public void set_ConnectIpAddress(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConnectGamePort();
    [CompilerGeneratedAttribute]
public void set_ConnectGamePort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConnectQueryPort();
    [CompilerGeneratedAttribute]
public void set_ConnectQueryPort(Nullable`1<int> value);
}
internal class Facepunch.Nexus.Models.RegisterTransfersRequest : ValueType {
    [CompilerGeneratedAttribute]

private IEnumerable`1<string> <PlayerIds>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ToZoneKey>k__BackingField;
    
public IEnumerable`1<string> PlayerIds { get; public set; }
    
public string ToZoneKey { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PlayerIds();
    [CompilerGeneratedAttribute]
public void set_PlayerIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ToZoneKey();
    [CompilerGeneratedAttribute]
public void set_ToZoneKey(string value);
}
internal class Facepunch.Nexus.Models.RegisterTransfersResponse : ValueType {
}
public class Facepunch.Nexus.Models.VariableData : ValueType {
    [CompilerGeneratedAttribute]

private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableType <Type>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastUpdated>k__BackingField;
    
public string Value { get; public set; }
    
public VariableType Type { get; public set; }
    
public long LastUpdated { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public VariableType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(VariableType value);
    [CompilerGeneratedAttribute]
public long get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(long value);
}
public class Facepunch.Nexus.Models.VariableDictionary : Dictionary`2<string, VariableData> {
}
public enum Facepunch.Nexus.Models.VariableType : Enum {
    
public byte value__;
    
public static VariableType Binary;
    
public static VariableType String;
}
[IsReadOnlyAttribute]
public class Facepunch.Nexus.Models.VariableUpdate : ValueType {
    [CompilerGeneratedAttribute]

private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableType <Type>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<bool> <Transient>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<bool> <Secret>k__BackingField;
    
private Memory`1<byte> _binaryValue;
    
private string _stringValue;
    
public string Key { get; }
    
public VariableType Type { get; }
    
public Nullable`1<bool> Transient { get; }
    
public Nullable`1<bool> Secret { get; }
    
public string Value { get; }
    public VariableUpdate(string key, Memory`1<byte> value, Nullable`1<bool> transient, Nullable`1<bool> secret);
    public VariableUpdate(string key, string value, Nullable`1<bool> transient, Nullable`1<bool> secret);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public VariableType get_Type();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Transient();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Secret();
    public string get_Value();
}
public class Facepunch.Nexus.Models.ZoneDetails : object {
    [CompilerGeneratedAttribute]

private int <NexusId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <ZoneId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private double <PositionX>k__BackingField;
    [CompilerGeneratedAttribute]

private double <PositionY>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <Variables>k__BackingField;
    [CompilerGeneratedAttribute]

private string <NexusName>k__BackingField;
    [CompilerGeneratedAttribute]

private VariableDictionary <NexusVariables>k__BackingField;
    
public int NexusId { get; public set; }
    
public int ZoneId { get; public set; }
    
public string Key { get; public set; }
    
public string Name { get; public set; }
    
public double PositionX { get; public set; }
    
public double PositionY { get; public set; }
    
public VariableDictionary Variables { get; public set; }
    
public string NexusName { get; public set; }
    
public VariableDictionary NexusVariables { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NexusId();
    [CompilerGeneratedAttribute]
public void set_NexusId(int value);
    [CompilerGeneratedAttribute]
public int get_ZoneId();
    [CompilerGeneratedAttribute]
public void set_ZoneId(int value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public double get_PositionX();
    [CompilerGeneratedAttribute]
public void set_PositionX(double value);
    [CompilerGeneratedAttribute]
public double get_PositionY();
    [CompilerGeneratedAttribute]
public void set_PositionY(double value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(VariableDictionary value);
    [CompilerGeneratedAttribute]
public string get_NexusName();
    [CompilerGeneratedAttribute]
public void set_NexusName(string value);
    [CompilerGeneratedAttribute]
public VariableDictionary get_NexusVariables();
    [CompilerGeneratedAttribute]
public void set_NexusVariables(VariableDictionary value);
}
public class Facepunch.Nexus.Models.ZoneMapCheckResult : object {
    [CompilerGeneratedAttribute]

private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]

private DateTimeOffset <LastUpdated>k__BackingField;
    
public string Key { get; public set; }
    
public DateTimeOffset LastUpdated { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTimeOffset value);
}
public class Facepunch.Nexus.Models.ZonePlayerDetails : object {
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastSeen>k__BackingField;
    [CompilerGeneratedAttribute]

private Dictionary`2<string, VariableData> <Variables>k__BackingField;
    [CompilerGeneratedAttribute]

private string <AssignedZoneKey>k__BackingField;
    
public string PlayerId { get; public set; }
    
public long LastSeen { get; public set; }
    
public Dictionary`2<string, VariableData> Variables { get; public set; }
    
public string AssignedZoneKey { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public long get_LastSeen();
    [CompilerGeneratedAttribute]
public void set_LastSeen(long value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, VariableData> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(Dictionary`2<string, VariableData> value);
    [CompilerGeneratedAttribute]
public string get_AssignedZoneKey();
    [CompilerGeneratedAttribute]
public void set_AssignedZoneKey(string value);
}
internal class Facepunch.Nexus.Models.ZonePlayerLogin : ZonePlayerDetails {
    [CompilerGeneratedAttribute]

private string <RedirectIpAddress>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<int> <RedirectGamePort>k__BackingField;
    [CompilerGeneratedAttribute]

private Nullable`1<int> <RedirectQueryPort>k__BackingField;
    
public string RedirectIpAddress { get; public set; }
    
public Nullable`1<int> RedirectGamePort { get; public set; }
    
public Nullable`1<int> RedirectQueryPort { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RedirectIpAddress();
    [CompilerGeneratedAttribute]
public void set_RedirectIpAddress(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RedirectGamePort();
    [CompilerGeneratedAttribute]
public void set_RedirectGamePort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RedirectQueryPort();
    [CompilerGeneratedAttribute]
public void set_RedirectQueryPort(Nullable`1<int> value);
}
public class Facepunch.Nexus.NexusAnonymousClient : object {
    
private INexusConnector _connector;
    
private CachedValue`1<List`1<Nexus>> _cachedNexusList;
    
private CachedValue`2<int, NexusDetails> _cachedNexusDetails;
    public NexusAnonymousClient(INexusLogger logger, IClockProvider clock, string baseUrl);
    internal NexusAnonymousClient(INexusConnector connector, IClockProvider clock);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusAnonymousClient/<GetNexusList>d__5")]
public ValueTask`1<IEnumerable`1<Nexus>> GetNexusList(string publicKey, NexusRealm realm);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusAnonymousClient/<GetNexusDetails>d__6")]
public ValueTask`1<NexusDetails> GetNexusDetails(int nexusId);
    protected virtual void OnNexusDetailsUpdated(int nexusId, NexusDetails details);
}
public class Facepunch.Nexus.NexusClan : object {
    
private static double RefreshInterval;
    [CompilerGeneratedAttribute]

private long <ClanId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Creator>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Score>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<NexusClanRole> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<NexusClanMember> <Members>k__BackingField;
    [CompilerGeneratedAttribute]

private int <MaxMemberCount>k__BackingField;
    [CompilerGeneratedAttribute]

private List`1<ClanInvite> <Invites>k__BackingField;
    
private NexusZoneClient _client;
    
private INexusZoneConnector _zoneConnector;
    
private IClockProvider _clockProvider;
    
private INexusLogger _logger;
    
private VariableContainer _variables;
    
private double _lastRefreshed;
    
public long ClanId { get; }
    
public string Name { get; private set; }
    
public long Created { get; private set; }
    
public string Creator { get; private set; }
    
public long Score { get; private set; }
    
public List`1<NexusClanRole> Roles { get; }
    
public List`1<NexusClanMember> Members { get; }
    
public int MaxMemberCount { get; private set; }
    
public List`1<ClanInvite> Invites { get; }
    
public IEnumerable`1<KeyValuePair`2<string, Variable>> Variables { get; }
    internal NexusClan(NexusZoneClient client, INexusZoneConnector zoneConnector, IClockProvider clockProvider, INexusLogger logger, long clanId);
    [CompilerGeneratedAttribute]
public long get_ClanId();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
private void set_Created(long value);
    [CompilerGeneratedAttribute]
public string get_Creator();
    [CompilerGeneratedAttribute]
private void set_Creator(string value);
    [CompilerGeneratedAttribute]
public long get_Score();
    [CompilerGeneratedAttribute]
private void set_Score(long value);
    [CompilerGeneratedAttribute]
public List`1<NexusClanRole> get_Roles();
    [CompilerGeneratedAttribute]
public List`1<NexusClanMember> get_Members();
    [CompilerGeneratedAttribute]
public int get_MaxMemberCount();
    [CompilerGeneratedAttribute]
private void set_MaxMemberCount(int value);
    [CompilerGeneratedAttribute]
public List`1<ClanInvite> get_Invites();
    internal bool UpdateFromModel(ClanDetails& details);
    internal void RefreshIfNeeded();
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<RefreshInBackground>d__42")]
internal void RefreshInBackground();
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<Refresh>d__43")]
public Task Refresh();
    public IEnumerable`1<KeyValuePair`2<string, Variable>> get_Variables();
    public bool TryGetVariable(string key, Variable& variable);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<UpdateVariables>d__47")]
public Task`1<NexusClanResultCode> UpdateVariables(ClanVariablesUpdate update);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<UpdatePlayerVariables>d__48")]
public Task`1<NexusClanResultCode> UpdatePlayerVariables(string playerId, ClanVariablesUpdate update);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<GetLogs>d__49")]
public Task`1<NexusClanResult`1<List`1<ClanLogEntry>>> GetLogs(string byPlayerId, int limit);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<AddLog>d__50")]
public Task`1<NexusClanResultCode> AddLog(string eventKey, string arg1, string arg2, string arg3, string arg4);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<GetScoreEvents>d__51")]
public Task`1<NexusClanResult`1<List`1<ClanScoreEventEntry>>> GetScoreEvents(string byPlayerId, int limit);
    public void AddScoreEvent(NewClanScoreEventEntry entry);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<UpdateLastSeen>d__53")]
public Task`1<NexusClanResultCode> UpdateLastSeen(string playerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<Invite>d__54")]
public Task`1<NexusClanResultCode> Invite(string playerId, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<CancelInvite>d__55")]
public Task`1<NexusClanResultCode> CancelInvite(string playerId, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<AcceptInvite>d__56")]
public Task`1<NexusClanResultCode> AcceptInvite(string playerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<Kick>d__57")]
public Task`1<NexusClanResultCode> Kick(string playerId, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<SetPlayerRole>d__58")]
public Task`1<NexusClanResultCode> SetPlayerRole(string playerId, int newRoleId, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<CreateRole>d__59")]
public Task`1<NexusClanResultCode> CreateRole(ClanRoleParameters parameters, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<UpdateRole>d__60")]
public Task`1<NexusClanResultCode> UpdateRole(int roleId, ClanRoleParameters parameters, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<DeleteRole>d__61")]
public Task`1<NexusClanResultCode> DeleteRole(int roleId, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<SwapRoleRanks>d__62")]
public Task`1<NexusClanResultCode> SwapRoleRanks(int roleIdA, int roleIdB, string byPlayerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusClan/<Disband>d__63")]
public Task`1<NexusClanResultCode> Disband(string byPlayerId);
}
public class Facepunch.Nexus.NexusClanMember : object {
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <RoleId>k__BackingField;
    [CompilerGeneratedAttribute]

private long <Joined>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastSeen>k__BackingField;
    
private VariableContainer _variables;
    
public string PlayerId { get; public set; }
    
public int RoleId { get; public set; }
    
public long Joined { get; public set; }
    
public long LastSeen { get; public set; }
    
public IEnumerable`1<KeyValuePair`2<string, Variable>> Variables { get; }
    public NexusClanMember(ClanMember details);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public void set_PlayerId(string value);
    [CompilerGeneratedAttribute]
public int get_RoleId();
    [CompilerGeneratedAttribute]
public void set_RoleId(int value);
    [CompilerGeneratedAttribute]
public long get_Joined();
    [CompilerGeneratedAttribute]
public void set_Joined(long value);
    [CompilerGeneratedAttribute]
public long get_LastSeen();
    [CompilerGeneratedAttribute]
public void set_LastSeen(long value);
    public IEnumerable`1<KeyValuePair`2<string, Variable>> get_Variables();
    public bool TryGetVariable(string key, Variable& variable);
    internal bool UpdateFromModel(ClanMember details);
}
[IsReadOnlyAttribute]
public class Facepunch.Nexus.NexusClanResult`1 : ValueType {
    [CompilerGeneratedAttribute]

private NexusClanResultCode <ResultCode>k__BackingField;
    
private T _response;
    
private bool _hasResponse;
    
public NexusClanResultCode ResultCode { get; }
    
public bool IsSuccess { get; }
    internal NexusClanResult`1(NexusClanResultCode resultCode);
    internal NexusClanResult`1(T response);
    [CompilerGeneratedAttribute]
public NexusClanResultCode get_ResultCode();
    public bool get_IsSuccess();
    public bool TryGetResponse(T& response);
}
public enum Facepunch.Nexus.NexusClanResultCode : Enum {
    
public int value__;
    
public static NexusClanResultCode Fail;
    
public static NexusClanResultCode Success;
    
public static NexusClanResultCode NoClan;
    
public static NexusClanResultCode NotFound;
    
public static NexusClanResultCode NoPermission;
    
public static NexusClanResultCode DuplicateName;
    
public static NexusClanResultCode RoleNotEmpty;
    
public static NexusClanResultCode CannotSwapLeader;
    
public static NexusClanResultCode CannotDeleteLeader;
    
public static NexusClanResultCode CannotKickLeader;
    
public static NexusClanResultCode CannotDemoteLeader;
    
public static NexusClanResultCode AlreadyInAClan;
    
public static NexusClanResultCode ClanIsFull;
}
public class Facepunch.Nexus.NexusClanRole : object {
    [CompilerGeneratedAttribute]

private int <RoleId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Rank>k__BackingField;
    [CompilerGeneratedAttribute]

private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanInvite>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanKick>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanPromote>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanDemote>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanAccessLogs>k__BackingField;
    [CompilerGeneratedAttribute]

private bool <CanAccessScoreEvents>k__BackingField;
    
private VariableContainer _variables;
    
public int RoleId { get; public set; }
    
public int Rank { get; public set; }
    
public string Name { get; public set; }
    
public bool CanInvite { get; public set; }
    
public bool CanKick { get; public set; }
    
public bool CanPromote { get; public set; }
    
public bool CanDemote { get; public set; }
    
public bool CanAccessLogs { get; public set; }
    
public bool CanAccessScoreEvents { get; public set; }
    
public IEnumerable`1<KeyValuePair`2<string, Variable>> Variables { get; }
    public NexusClanRole(ClanRole details);
    [CompilerGeneratedAttribute]
public int get_RoleId();
    [CompilerGeneratedAttribute]
public void set_RoleId(int value);
    [CompilerGeneratedAttribute]
public int get_Rank();
    [CompilerGeneratedAttribute]
public void set_Rank(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_CanInvite();
    [CompilerGeneratedAttribute]
public void set_CanInvite(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanKick();
    [CompilerGeneratedAttribute]
public void set_CanKick(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanPromote();
    [CompilerGeneratedAttribute]
public void set_CanPromote(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanDemote();
    [CompilerGeneratedAttribute]
public void set_CanDemote(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanAccessLogs();
    [CompilerGeneratedAttribute]
public void set_CanAccessLogs(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanAccessScoreEvents();
    [CompilerGeneratedAttribute]
public void set_CanAccessScoreEvents(bool value);
    public IEnumerable`1<KeyValuePair`2<string, Variable>> get_Variables();
    public bool TryGetVariable(string key, Variable& variable);
    internal bool UpdateFromModel(ClanRole details);
}
public class Facepunch.Nexus.NexusErrorHandler : MulticastDelegate {
    public NexusErrorHandler(object object, IntPtr method);
    public virtual void Invoke(BaseNexusClient sender, Exception exception);
    public virtual IAsyncResult BeginInvoke(BaseNexusClient sender, Exception exception, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Facepunch.Nexus.NexusInitializedHandler : MulticastDelegate {
    public NexusInitializedHandler(object object, IntPtr method);
    public virtual void Invoke(BaseNexusClient sender);
    public virtual IAsyncResult BeginInvoke(BaseNexusClient sender, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[IsReadOnlyAttribute]
public class Facepunch.Nexus.NexusLoginResult : ValueType {
    
private ZonePlayerLogin _login;
    
public string PlayerId { get; }
    
public long LastSeen { get; }
    
public Dictionary`2<string, VariableData> Variables { get; }
    
public string AssignedZoneKey { get; }
    
public bool IsRedirect { get; }
    
public string RedirectIpAddress { get; }
    
public int RedirectGamePort { get; }
    
public int RedirectQueryPort { get; }
    internal NexusLoginResult(ZonePlayerLogin login);
    public string get_PlayerId();
    public long get_LastSeen();
    public Dictionary`2<string, VariableData> get_Variables();
    public string get_AssignedZoneKey();
    public bool get_IsRedirect();
    public string get_RedirectIpAddress();
    public int get_RedirectGamePort();
    public int get_RedirectQueryPort();
}
[IsReadOnlyAttribute]
public class Facepunch.Nexus.NexusMessage : ValueType {
    
private string _stringData;
    
private Byte[] _binaryData;
    [CompilerGeneratedAttribute]

private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]

private Uuid <Id>k__BackingField;
    [CompilerGeneratedAttribute]

private string <ContentType>k__BackingField;
    
internal string MessageId { get; }
    
public Uuid Id { get; }
    
public string ContentType { get; }
    
public bool IsString { get; }
    
public bool IsBinary { get; }
    
public string AsString { get; }
    
public Byte[] AsBinary { get; }
    internal NexusMessage(string messageId, Guid id, string contentType, string data);
    internal NexusMessage(string messageId, Guid id, string contentType, Byte[] data);
    [CompilerGeneratedAttribute]
internal string get_MessageId();
    [CompilerGeneratedAttribute]
public Uuid get_Id();
    [CompilerGeneratedAttribute]
public string get_ContentType();
    public bool get_IsString();
    public bool get_IsBinary();
    public string get_AsString();
    public Byte[] get_AsBinary();
}
public class Facepunch.Nexus.NexusPlayer : object {
    
private static double RefreshInterval;
    
private INexusLogger _logger;
    
private INexusZoneConnector _zoneConnector;
    
private IClockProvider _clockProvider;
    
private VariableContainer _variables;
    
private double _lastRefreshed;
    [CompilerGeneratedAttribute]

private string <PlayerId>k__BackingField;
    [CompilerGeneratedAttribute]

private string <AssignedZoneKey>k__BackingField;
    
public string PlayerId { get; }
    
public string AssignedZoneKey { get; private set; }
    
public IEnumerable`1<KeyValuePair`2<string, Variable>> Variables { get; }
    internal NexusPlayer(INexusLogger logger, INexusZoneConnector zoneConnector, IClockProvider clockProvider, string playerId);
    [CompilerGeneratedAttribute]
public string get_PlayerId();
    [CompilerGeneratedAttribute]
public string get_AssignedZoneKey();
    [CompilerGeneratedAttribute]
private void set_AssignedZoneKey(string value);
    public bool TryGetVariable(string key, Variable& variable);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusPlayer/<SetVariable>d__15")]
public Task SetVariable(string key, string value, bool isTransient, bool isSecret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusPlayer/<SetVariable>d__16")]
public Task SetVariable(string key, Byte[] value, bool isTransient, bool isSecret);
    public IEnumerable`1<KeyValuePair`2<string, Variable>> get_Variables();
    internal void RefreshIfNeeded();
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusPlayer/<RefreshInBackground>d__20")]
internal void RefreshInBackground();
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusPlayer/<Refresh>d__21")]
internal Task Refresh();
    internal void UpdateZone(string assignedZoneKey);
    internal void UpdateVariables(Dictionary`2<string, VariableData> variables);
}
public class Facepunch.Nexus.NexusPlayerClient : BaseNexusPlayerClient {
    
private INexusPlayerConnector _connector;
    
private AuthHandler _authHandler;
    
private CachedValue`2<int, PlayerDetails> _cachedPlayerInfo;
    public NexusPlayerClient(INexusLogger logger, string baseUrl, AuthHandler authHandler);
    internal NexusPlayerClient(INexusPlayerConnector connector, IClockProvider clock, double updateInterval, AuthHandler authHandler);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusPlayerClient/<Update>d__6")]
protected virtual ValueTask Update(CancellationToken ct);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusPlayerClient/<GetPlayerDetails>d__7")]
protected internal virtual ValueTask`1<PlayerDetails> GetPlayerDetails(int nexusId);
}
public class Facepunch.Nexus.NexusVariableChangedHandler : MulticastDelegate {
    public NexusVariableChangedHandler(object object, IntPtr method);
    public virtual void Invoke(BaseNexusClient sender, string variableKey);
    public virtual IAsyncResult BeginInvoke(BaseNexusClient sender, string variableKey, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Facepunch.Nexus.NexusZoneClient : BaseNexusClient {
    [CompilerGeneratedAttribute]

private INexusClanEventListener <ClanEventListener>k__BackingField;
    
private INexusLogger _logger;
    
private INexusZoneConnector _connector;
    
private INexusSocketConnector _socket;
    
private IClockProvider _clock;
    
private VariableContainer _nexusVariables;
    
private VariableContainer _zoneVariables;
    
private CachedValue`1<ZoneDetails> _cachedZoneInfo;
    
private CachedValue`1<NexusDetails> _cachedNexusInfo;
    
private Dictionary`2<string, NexusPlayer> _players;
    
private Dictionary`2<long, NexusClan> _clans;
    
private Queue`1<NewClanScoreEventBatchEntry> _scoreEventQueue;
    
private List`1<NewClanScoreEventBatchEntry> _scoreEventBatch;
    
private bool _submittingScoreEventsBatch;
    [CompilerGeneratedAttribute]

private ZoneDetails <Zone>k__BackingField;
    [CompilerGeneratedAttribute]

private NexusDetails <Nexus>k__BackingField;
    
public INexusClanEventListener ClanEventListener { get; public set; }
    
public ZoneDetails Zone { get; private set; }
    
public NexusDetails Nexus { get; private set; }
    public NexusZoneClient(INexusLogger logger, string baseUrl, string secretKey, int lockDuration);
    internal NexusZoneClient(INexusLogger logger, INexusZoneConnector connector, INexusSocketConnector socket, IClockProvider clock, double updateInterval);
    [CompilerGeneratedAttribute]
public INexusClanEventListener get_ClanEventListener();
    [CompilerGeneratedAttribute]
public void set_ClanEventListener(INexusClanEventListener value);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<GetClan>d__4")]
public ValueTask`1<NexusClanResult`1<NexusClan>> GetClan(long clanId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<GetClanByMember>d__5")]
public ValueTask`1<NexusClanResult`1<NexusClan>> GetClanByMember(string playerId);
    public bool TryGetClan(long clanId, NexusClan& clan);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<CreateClan>d__7")]
public ValueTask`1<NexusClanResult`1<NexusClan>> CreateClan(ClanCreateParameters parameters);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<ListClanInvitations>d__8")]
public ValueTask`1<NexusClanResult`1<List`1<ClanInvitation>>> ListClanInvitations(string playerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<GetClanLeaderboard>d__9")]
public ValueTask`1<NexusClanResult`1<List`1<ClanLeaderboardEntry>>> GetClanLeaderboard(int limit);
    internal void EnqueueClanScoreEvent(NewClanScoreEventBatchEntry& entry);
    private void UpdateClanScoreEvents();
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<SubmitClanScoreEventBatch>d__12")]
private void SubmitClanScoreEventBatch();
    private void HandleClanEvent(NexusMessage& message);
    private void RefreshClan(long clanId);
    internal NexusClan UpsertClan(ClanDetails& details);
    private void UpdateClan(NexusClan clan, ClanDetails& details);
    internal void RemoveClan(long clanId);
    [CompilerGeneratedAttribute]
public ZoneDetails get_Zone();
    [CompilerGeneratedAttribute]
private void set_Zone(ZoneDetails value);
    [CompilerGeneratedAttribute]
public NexusDetails get_Nexus();
    [CompilerGeneratedAttribute]
private void set_Nexus(NexusDetails value);
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<Initialize>d__42")]
protected virtual ValueTask Initialize(CancellationToken ct);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<Update>d__43")]
protected virtual ValueTask Update(CancellationToken ct);
    public void StartListening();
    public bool TryGetNexusVariable(string key, Variable& variable);
    public bool TryGetZoneVariable(string key, Variable& variable);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<SetNexusVariable>d__47")]
public Task SetNexusVariable(string key, string value, bool isTransient, bool isSecret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<SetNexusVariable>d__48")]
public Task SetNexusVariable(string key, Byte[] value, bool isTransient, bool isSecret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<SetZoneVariable>d__49")]
public Task SetZoneVariable(string key, string value, bool isTransient, bool isSecret);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<SetZoneVariable>d__50")]
public Task SetZoneVariable(string key, Byte[] value, bool isTransient, bool isSecret);
    public Task`1<List`1<string>> FindPlayersWithVariable(string key, string value);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<PlayerLogin>d__52")]
public Task`1<NexusLoginResult> PlayerLogin(string playerId);
    public void PlayerLogout(string playerId);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<GetPlayer>d__54")]
public ValueTask`1<NexusPlayer> GetPlayer(string playerId);
    public bool TryGetPlayer(string playerId, NexusPlayer& player);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<Assign>d__56")]
public Task Assign(string playerId, string toZone);
    public Task RegisterTransfers(string toZone, IEnumerable`1<string> playerIds);
    public Task CompleteTransfers(IEnumerable`1<string> playerIds);
    public bool TryReceiveMessage(NexusMessage& message);
    public void AcknowledgeMessage(NexusMessage& message);
    public Task SendMessage(string toZone, Uuid id, string message, Nullable`1<int> ttl);
    public Task SendMessage(string toZone, Uuid id, Memory`1<byte> message, Nullable`1<int> ttl);
    public Task`1<ZoneMapCheckResult> CheckUploadedMap();
    public Task UploadMap(string key, Byte[] pngMapImage);
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<GetZoneDetails>d__65")]
internal ValueTask`1<ZoneDetails> GetZoneDetails();
    [AsyncStateMachineAttribute("Facepunch.Nexus.NexusZoneClient/<GetNexusDetails>d__66")]
internal ValueTask`1<NexusDetails> GetNexusDetails(int nexusId);
    private void AssertInitialized();
}
public class Facepunch.Nexus.Time.DefaultClockProvider : object {
    [CompilerGeneratedAttribute]

private static DefaultClockProvider <Instance>k__BackingField;
    
public static DefaultClockProvider Instance { get; }
    
public double Timestamp { get; }
    private static DefaultClockProvider();
    [CompilerGeneratedAttribute]
public static DefaultClockProvider get_Instance();
    public sealed virtual double get_Timestamp();
    public sealed virtual Task Delay(double seconds);
}
public interface Facepunch.Nexus.Time.IClockProvider {
    
public double Timestamp { get; }
    public abstract virtual double get_Timestamp();
    public abstract virtual Task Delay(double seconds);
}
[ExtensionAttribute]
internal static class Facepunch.Nexus.Util : object {
    public static T Update(T& currentValue, T& newValue, Boolean& changed);
    [ExtensionAttribute]
public static bool Resize(List`1<T> list, int newCount);
}
public class Facepunch.Nexus.Uuid : ValueType {
    
public static Uuid Empty;
    [CompilerGeneratedAttribute]

private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]

private int <Sequence>k__BackingField;
    [CompilerGeneratedAttribute]

private ulong <Timestamp>k__BackingField;
    
private static object _syncRoot;
    
private static int _nodeId;
    
private static int _sequence;
    
private static ulong _previousTimestamp;
    
public int NodeId { get; public set; }
    
public int Sequence { get; public set; }
    
public ulong Timestamp { get; public set; }
    public Uuid(int nodeId, int sequence, ulong timestamp);
    private static Uuid();
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_Sequence();
    [CompilerGeneratedAttribute]
public void set_Sequence(int value);
    [CompilerGeneratedAttribute]
public ulong get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(ulong value);
    public virtual string ToString();
    public static Uuid op_Implicit(Guid guid);
    public static Guid op_Implicit(Uuid uuid);
    public sealed virtual bool Equals(Uuid other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Uuid left, Uuid right);
    public static bool op_Inequality(Uuid left, Uuid right);
    public static Uuid Generate();
}
public class Facepunch.Nexus.Variable : object {
    
private string _rawValue;
    
private Byte[] _binaryValue;
    [CompilerGeneratedAttribute]

private VariableType <Type>k__BackingField;
    [CompilerGeneratedAttribute]

private long <LastUpdated>k__BackingField;
    
public VariableType Type { get; private set; }
    
public long LastUpdated { get; private set; }
    [CompilerGeneratedAttribute]
public VariableType get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(VariableType value);
    [CompilerGeneratedAttribute]
public long get_LastUpdated();
    [CompilerGeneratedAttribute]
private void set_LastUpdated(long value);
    internal bool Set(string value, long lastUpdated);
    internal bool Set(Byte[] value, long lastUpdated);
    internal bool UpdateFromModel(VariableData data);
    public string GetAsString();
    public Byte[] GetAsBinary();
    public static bool op_Equality(Variable variable, string value);
    public static bool op_Inequality(Variable variable, string value);
    public static bool op_Equality(Variable variable, Byte[] value);
    public static bool op_Inequality(Variable variable, Byte[] value);
}
internal class Facepunch.Nexus.VariableContainer : object {
    
private Dictionary`2<string, Variable> _variables;
    
public int Count { get; }
    public int get_Count();
    public bool UpdateFromModel(Dictionary`2<string, VariableData> data, HashSet`1<string> changedKeys);
    public bool UpdateFromModel(string key, VariableData data);
    public bool TryGet(string key, Variable& variable);
    public bool Set(string key, string value);
    public bool Set(string key, Byte[] value);
    public void Remove(string key);
    public void Clear();
    public Enumerator<string, Variable> GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, Variable>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,Facepunch.Nexus.Variable>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
