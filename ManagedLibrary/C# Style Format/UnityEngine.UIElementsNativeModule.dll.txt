internal UnityEngine.UIElements.ImmediateStylePainter : object {
internal void DrawRect(Rect screenRect, Color color, Vector4 borderWidths, Vector4 borderRadiuses)
internal void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, Color color, Vector4 borderWidths, Vector4 borderRadiuses, int leftBorder, int topBorder, int rightBorder, int bottomBorder, bool usePremultiplyAlpha)
internal void DrawText(Rect screenRect, string text, Font font, int fontSize, FontStyle fontStyle, Color fontColor, TextAnchor anchor, bool wordWrap, float wordWrapWidth, bool richText, TextClipping textClipping)
private void DrawRect_Injected(Rect& screenRect, Color& color, Vector4& borderWidths, Vector4& borderRadiuses)
private void DrawTexture_Injected(Rect& screenRect, Texture texture, Rect& sourceRect, Color& color, Vector4& borderWidths, Vector4& borderRadiuses, int leftBorder, int topBorder, int rightBorder, int bottomBorder, bool usePremultiplyAlpha)
private void DrawText_Injected(Rect& screenRect, string text, Font font, int fontSize, FontStyle fontStyle, Color& fontColor, TextAnchor anchor, bool wordWrap, float wordWrapWidth, bool richText, TextClipping textClipping)
}
internal UnityEngine.UIElements.TextNative : object {
public Vector2 GetCursorPosition(TextNativeSettings settings, Rect rect, int cursorIndex)
public float ComputeTextWidth(TextNativeSettings settings)
public float ComputeTextHeight(TextNativeSettings settings)
public NativeArray`1<TextVertex> GetVertices(TextNativeSettings settings)
public Vector2 GetOffset(TextNativeSettings settings, Rect screenRect)
public float ComputeTextScaling(Matrix4x4 worldMatrix, float pixelsPerPoint)
private float DoComputeTextWidth(TextNativeSettings settings)
private float DoComputeTextHeight(TextNativeSettings settings)
private Vector2 DoGetCursorPosition(TextNativeSettings settings, Rect rect, int cursorPosition)
private void GetVertices(TextNativeSettings settings, IntPtr buffer, int vertexSize, Int32& vertexCount)
private Vector2 DoGetOffset(TextNativeSettings settings, Rect rect)
private float DoComputeTextWidth_Injected(TextNativeSettings& settings)
private float DoComputeTextHeight_Injected(TextNativeSettings& settings)
private void DoGetCursorPosition_Injected(TextNativeSettings& settings, Rect& rect, int cursorPosition, Vector2& ret)
private void GetVertices_Injected(TextNativeSettings& settings, IntPtr buffer, int vertexSize, Int32& vertexCount)
private void DoGetOffset_Injected(TextNativeSettings& settings, Rect& rect, Vector2& ret)
}
internal UnityEngine.UIElements.TextNativeSettings : ValueType {
public string text
public Font font
public int size
public float scaling
public FontStyle style
public Color color
public TextAnchor anchor
public bool wordWrap
public float wordWrapWidth
public bool richText
}
internal UnityEngine.UIElements.TextVertex : ValueType {
public Vector3 position
public Color32 color
public Vector2 uv0
}
internal UnityEngine.UIElements.UIElementsRuntimeUtilityNative : object {
internal Action RepaintOverlayPanelsCallback
internal Action UpdateRuntimePanelsCallback
internal Action RepaintOffscreenPanelsCallback
public void RepaintOverlayPanels()
public void UpdateRuntimePanels()
public void RepaintOffscreenPanels()
public void RegisterPlayerloopCallback()
public void UnregisterPlayerloopCallback()
public void VisualElementCreation()
}
internal UnityEngine.UIElements.UIR.DrawBufferRange : ValueType {
public int firstIndex
public int indexCount
public int minIndexVal
public int vertsReferenced
}
internal UnityEngine.UIElements.UIR.GfxUpdateBufferRange : ValueType {
public UInt32 offsetFromWriteStart
public UInt32 size
public UIntPtr source
}
internal UnityEngine.UIElements.UIR.Utility : object {
private Action`1<bool> GraphicsResourcesRecreate
private Action EngineUpdate
private Action FlushPendingResources
private Action`1<Camera> RegisterIntermediateRenderers
private Action`1<IntPtr> RenderNodeAdd
private Action`1<IntPtr> RenderNodeExecute
private Action`1<IntPtr> RenderNodeCleanup
private ProfilerMarker s_MarkerRaiseEngineUpdate
public void SetVectorArray(MaterialPropertyBlock props, int name, NativeSlice`1<T> vector4s)
public void add_GraphicsResourcesRecreate(Action`1<bool> value)
public void remove_GraphicsResourcesRecreate(Action`1<bool> value)
public void add_EngineUpdate(Action value)
public void remove_EngineUpdate(Action value)
public void add_FlushPendingResources(Action value)
public void remove_FlushPendingResources(Action value)
public void add_RegisterIntermediateRenderers(Action`1<Camera> value)
public void remove_RegisterIntermediateRenderers(Action`1<Camera> value)
public void add_RenderNodeAdd(Action`1<IntPtr> value)
public void remove_RenderNodeAdd(Action`1<IntPtr> value)
public void add_RenderNodeExecute(Action`1<IntPtr> value)
public void remove_RenderNodeExecute(Action`1<IntPtr> value)
public void add_RenderNodeCleanup(Action`1<IntPtr> value)
public void remove_RenderNodeCleanup(Action`1<IntPtr> value)
internal void RaiseGraphicsResourcesRecreate(bool recreate)
internal void RaiseEngineUpdate()
internal void RaiseFlushPendingResources()
internal void RaiseRegisterIntermediateRenderers(Camera camera)
internal void RaiseRenderNodeAdd(IntPtr userData)
internal void RaiseRenderNodeExecute(IntPtr userData)
internal void RaiseRenderNodeCleanup(IntPtr userData)
private IntPtr AllocateBuffer(int elementCount, int elementStride, bool vertexBuffer)
private void FreeBuffer(IntPtr buffer)
private void UpdateBufferRanges(IntPtr buffer, IntPtr ranges, int rangeCount, int writeRangeStart, int writeRangeEnd)
private void SetVectorArray(MaterialPropertyBlock props, int name, IntPtr vector4s, int count)
public IntPtr GetVertexDeclaration(VertexAttributeDescriptor[] vertexAttributes)
public void RegisterIntermediateRenderer(Camera camera, Material material, Matrix4x4 transform, Bounds aabb, int renderLayer, int shadowCasting, bool receiveShadows, int sameDistanceSortPriority, ulong sceneCullingMask, int rendererCallbackFlags, IntPtr userData, int userDataSize)
public void DrawRanges(IntPtr ib, IntPtr* vertexStreams, int streamCount, IntPtr ranges, int rangeCount, IntPtr vertexDecl)
public void SetPropertyBlock(MaterialPropertyBlock props)
public void SetScissorRect(RectInt scissorRect)
public void DisableScissor()
public bool IsScissorEnabled()
public IntPtr CreateStencilState(StencilState stencilState)
public void SetStencilState(IntPtr stencilState, int stencilRef)
public bool HasMappedBufferRange()
public UInt32 InsertCPUFence()
public bool CPUFencePassed(UInt32 fence)
public void WaitForCPUFencePassed(UInt32 fence)
public void SyncRenderThread()
public RectInt GetActiveViewport()
public void ProfileDrawChainBegin()
public void ProfileDrawChainEnd()
public void NotifyOfUIREvents(bool subscribe)
public Matrix4x4 GetUnityProjectionMatrix()
public Matrix4x4 GetDeviceProjectionMatrix()
public bool DebugIsMainThread()
private void RegisterIntermediateRenderer_Injected(Camera camera, Material material, Matrix4x4& transform, Bounds& aabb, int renderLayer, int shadowCasting, bool receiveShadows, int sameDistanceSortPriority, ulong sceneCullingMask, int rendererCallbackFlags, IntPtr userData, int userDataSize)
private void SetScissorRect_Injected(RectInt& scissorRect)
private IntPtr CreateStencilState_Injected(StencilState& stencilState)
private void GetActiveViewport_Injected(RectInt& ret)
private void GetUnityProjectionMatrix_Injected(Matrix4x4& ret)
private void GetDeviceProjectionMatrix_Injected(Matrix4x4& ret)
}
internal UnityEngine.Yoga.BaselineFunction : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public float Invoke(YogaNode node, float width, float height)
public IAsyncResult BeginInvoke(YogaNode node, float width, float height, AsyncCallback callback, object object)
public float EndInvoke(IAsyncResult result)
}
internal UnityEngine.Yoga.Logger : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public void Invoke(YogaConfig config, YogaNode node, YogaLogLevel level, string message)
public IAsyncResult BeginInvoke(YogaConfig config, YogaNode node, YogaLogLevel level, string message, AsyncCallback callback, object object)
public void EndInvoke(IAsyncResult result)
}
internal UnityEngine.Yoga.MeasureFunction : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public YogaSize Invoke(YogaNode node, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode)
public IAsyncResult BeginInvoke(YogaNode node, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode, AsyncCallback callback, object object)
public YogaSize EndInvoke(IAsyncResult result)
}
internal UnityEngine.Yoga.MeasureOutput : object {
public YogaSize Make(float width, float height)
}
internal UnityEngine.Yoga.Native : object {
private IntPtr YGNodeNew()
public IntPtr YGNodeNewWithConfig(IntPtr config)
public void YGNodeFree(IntPtr ygNode)
private void YGNodeFreeInternal(IntPtr ygNode)
public void YGNodeReset(IntPtr node)
public void YGSetManagedObject(IntPtr ygNode, YogaNode node)
public void YGNodeSetConfig(IntPtr ygNode, IntPtr config)
public IntPtr YGConfigGetDefault()
public IntPtr YGConfigNew()
public void YGConfigFree(IntPtr config)
private void YGConfigFreeInternal(IntPtr config)
public int YGNodeGetInstanceCount()
public int YGConfigGetInstanceCount()
public void YGConfigSetExperimentalFeatureEnabled(IntPtr config, YogaExperimentalFeature feature, bool enabled)
public bool YGConfigIsExperimentalFeatureEnabled(IntPtr config, YogaExperimentalFeature feature)
public void YGConfigSetUseWebDefaults(IntPtr config, bool useWebDefaults)
public bool YGConfigGetUseWebDefaults(IntPtr config)
public void YGConfigSetPointScaleFactor(IntPtr config, float pixelsInPoint)
public float YGConfigGetPointScaleFactor(IntPtr config)
public void YGNodeInsertChild(IntPtr node, IntPtr child, UInt32 index)
public void YGNodeRemoveChild(IntPtr node, IntPtr child)
public void YGNodeCalculateLayout(IntPtr node, float availableWidth, float availableHeight, YogaDirection parentDirection)
public void YGNodeMarkDirty(IntPtr node)
public bool YGNodeIsDirty(IntPtr node)
public void YGNodePrint(IntPtr node, YogaPrintOptions options)
public void YGNodeCopyStyle(IntPtr dstNode, IntPtr srcNode)
public void YGNodeSetMeasureFunc(IntPtr node)
public void YGNodeRemoveMeasureFunc(IntPtr node)
public void YGNodeMeasureInvoke(YogaNode node, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode, IntPtr returnValueAddress)
public void YGNodeSetBaselineFunc(IntPtr node)
public void YGNodeRemoveBaselineFunc(IntPtr node)
public void YGNodeBaselineInvoke(YogaNode node, float width, float height, IntPtr returnValueAddress)
public void YGNodeSetHasNewLayout(IntPtr node, bool hasNewLayout)
public bool YGNodeGetHasNewLayout(IntPtr node)
public void YGNodeStyleSetDirection(IntPtr node, YogaDirection direction)
public YogaDirection YGNodeStyleGetDirection(IntPtr node)
public void YGNodeStyleSetFlexDirection(IntPtr node, YogaFlexDirection flexDirection)
public YogaFlexDirection YGNodeStyleGetFlexDirection(IntPtr node)
public void YGNodeStyleSetJustifyContent(IntPtr node, YogaJustify justifyContent)
public YogaJustify YGNodeStyleGetJustifyContent(IntPtr node)
public void YGNodeStyleSetAlignContent(IntPtr node, YogaAlign alignContent)
public YogaAlign YGNodeStyleGetAlignContent(IntPtr node)
public void YGNodeStyleSetAlignItems(IntPtr node, YogaAlign alignItems)
public YogaAlign YGNodeStyleGetAlignItems(IntPtr node)
public void YGNodeStyleSetAlignSelf(IntPtr node, YogaAlign alignSelf)
public YogaAlign YGNodeStyleGetAlignSelf(IntPtr node)
public void YGNodeStyleSetPositionType(IntPtr node, YogaPositionType positionType)
public YogaPositionType YGNodeStyleGetPositionType(IntPtr node)
public void YGNodeStyleSetFlexWrap(IntPtr node, YogaWrap flexWrap)
public YogaWrap YGNodeStyleGetFlexWrap(IntPtr node)
public void YGNodeStyleSetOverflow(IntPtr node, YogaOverflow flexWrap)
public YogaOverflow YGNodeStyleGetOverflow(IntPtr node)
public void YGNodeStyleSetDisplay(IntPtr node, YogaDisplay display)
public YogaDisplay YGNodeStyleGetDisplay(IntPtr node)
public void YGNodeStyleSetFlex(IntPtr node, float flex)
public void YGNodeStyleSetFlexGrow(IntPtr node, float flexGrow)
public float YGNodeStyleGetFlexGrow(IntPtr node)
public void YGNodeStyleSetFlexShrink(IntPtr node, float flexShrink)
public float YGNodeStyleGetFlexShrink(IntPtr node)
public void YGNodeStyleSetFlexBasis(IntPtr node, float flexBasis)
public void YGNodeStyleSetFlexBasisPercent(IntPtr node, float flexBasis)
public void YGNodeStyleSetFlexBasisAuto(IntPtr node)
public YogaValue YGNodeStyleGetFlexBasis(IntPtr node)
public float YGNodeGetComputedFlexBasis(IntPtr node)
public void YGNodeStyleSetWidth(IntPtr node, float width)
public void YGNodeStyleSetWidthPercent(IntPtr node, float width)
public void YGNodeStyleSetWidthAuto(IntPtr node)
public YogaValue YGNodeStyleGetWidth(IntPtr node)
public void YGNodeStyleSetHeight(IntPtr node, float height)
public void YGNodeStyleSetHeightPercent(IntPtr node, float height)
public void YGNodeStyleSetHeightAuto(IntPtr node)
public YogaValue YGNodeStyleGetHeight(IntPtr node)
public void YGNodeStyleSetMinWidth(IntPtr node, float minWidth)
public void YGNodeStyleSetMinWidthPercent(IntPtr node, float minWidth)
public YogaValue YGNodeStyleGetMinWidth(IntPtr node)
public void YGNodeStyleSetMinHeight(IntPtr node, float minHeight)
public void YGNodeStyleSetMinHeightPercent(IntPtr node, float minHeight)
public YogaValue YGNodeStyleGetMinHeight(IntPtr node)
public void YGNodeStyleSetMaxWidth(IntPtr node, float maxWidth)
public void YGNodeStyleSetMaxWidthPercent(IntPtr node, float maxWidth)
public YogaValue YGNodeStyleGetMaxWidth(IntPtr node)
public void YGNodeStyleSetMaxHeight(IntPtr node, float maxHeight)
public void YGNodeStyleSetMaxHeightPercent(IntPtr node, float maxHeight)
public YogaValue YGNodeStyleGetMaxHeight(IntPtr node)
public void YGNodeStyleSetAspectRatio(IntPtr node, float aspectRatio)
public float YGNodeStyleGetAspectRatio(IntPtr node)
public void YGNodeStyleSetPosition(IntPtr node, YogaEdge edge, float position)
public void YGNodeStyleSetPositionPercent(IntPtr node, YogaEdge edge, float position)
public YogaValue YGNodeStyleGetPosition(IntPtr node, YogaEdge edge)
public void YGNodeStyleSetMargin(IntPtr node, YogaEdge edge, float margin)
public void YGNodeStyleSetMarginPercent(IntPtr node, YogaEdge edge, float margin)
public void YGNodeStyleSetMarginAuto(IntPtr node, YogaEdge edge)
public YogaValue YGNodeStyleGetMargin(IntPtr node, YogaEdge edge)
public void YGNodeStyleSetPadding(IntPtr node, YogaEdge edge, float padding)
public void YGNodeStyleSetPaddingPercent(IntPtr node, YogaEdge edge, float padding)
public YogaValue YGNodeStyleGetPadding(IntPtr node, YogaEdge edge)
public void YGNodeStyleSetBorder(IntPtr node, YogaEdge edge, float border)
public float YGNodeStyleGetBorder(IntPtr node, YogaEdge edge)
public float YGNodeLayoutGetLeft(IntPtr node)
public float YGNodeLayoutGetTop(IntPtr node)
public float YGNodeLayoutGetRight(IntPtr node)
public float YGNodeLayoutGetBottom(IntPtr node)
public float YGNodeLayoutGetWidth(IntPtr node)
public float YGNodeLayoutGetHeight(IntPtr node)
public float YGNodeLayoutGetMargin(IntPtr node, YogaEdge edge)
public float YGNodeLayoutGetPadding(IntPtr node, YogaEdge edge)
public float YGNodeLayoutGetBorder(IntPtr node, YogaEdge edge)
public YogaDirection YGNodeLayoutGetDirection(IntPtr node)
private void YGNodeStyleGetFlexBasis_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetWidth_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetHeight_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetMinWidth_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetMinHeight_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetMaxWidth_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetMaxHeight_Injected(IntPtr node, YogaValue& ret)
private void YGNodeStyleGetPosition_Injected(IntPtr node, YogaEdge edge, YogaValue& ret)
private void YGNodeStyleGetMargin_Injected(IntPtr node, YogaEdge edge, YogaValue& ret)
private void YGNodeStyleGetPadding_Injected(IntPtr node, YogaEdge edge, YogaValue& ret)
}
internal UnityEngine.Yoga.YogaAlign : Enum {
public int value__
public YogaAlign Auto
public YogaAlign FlexStart
public YogaAlign Center
public YogaAlign FlexEnd
public YogaAlign Stretch
public YogaAlign Baseline
public YogaAlign SpaceBetween
public YogaAlign SpaceAround
}
internal UnityEngine.Yoga.YogaBaselineFunc : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public float Invoke(IntPtr unmanagedNodePtr, float width, float height)
public IAsyncResult BeginInvoke(IntPtr unmanagedNodePtr, float width, float height, AsyncCallback callback, object object)
public float EndInvoke(IAsyncResult result)
}
internal UnityEngine.Yoga.YogaConfig : object {
internal YogaConfig Default
private IntPtr _ygConfig
private Logger _logger
internal IntPtr Handle
public Logger Logger
public bool UseWebDefaults
public float PointScaleFactor
private void .ctor(IntPtr ygConfig)
protected void Finalize()
internal IntPtr get_Handle()
public Logger get_Logger()
public void set_Logger(Logger value)
public void SetExperimentalFeatureEnabled(YogaExperimentalFeature feature, bool enabled)
public bool IsExperimentalFeatureEnabled(YogaExperimentalFeature feature)
public bool get_UseWebDefaults()
public void set_UseWebDefaults(bool value)
public float get_PointScaleFactor()
public void set_PointScaleFactor(float value)
public int GetInstanceCount()
public void SetDefaultLogger(Logger logger)
}
internal UnityEngine.Yoga.YogaConstants : object {
public float Undefined
public bool IsUndefined(float value)
public bool IsUndefined(YogaValue value)
}
internal UnityEngine.Yoga.YogaDimension : Enum {
public int value__
public YogaDimension Width
public YogaDimension Height
}
internal UnityEngine.Yoga.YogaDirection : Enum {
public int value__
public YogaDirection Inherit
public YogaDirection LTR
public YogaDirection RTL
}
internal UnityEngine.Yoga.YogaDisplay : Enum {
public int value__
public YogaDisplay Flex
public YogaDisplay None
}
internal UnityEngine.Yoga.YogaEdge : Enum {
public int value__
public YogaEdge Left
public YogaEdge Top
public YogaEdge Right
public YogaEdge Bottom
public YogaEdge Start
public YogaEdge End
public YogaEdge Horizontal
public YogaEdge Vertical
public YogaEdge All
}
internal UnityEngine.Yoga.YogaExperimentalFeature : Enum {
public int value__
public YogaExperimentalFeature WebFlexBasis
}
internal UnityEngine.Yoga.YogaFlexDirection : Enum {
public int value__
public YogaFlexDirection Column
public YogaFlexDirection ColumnReverse
public YogaFlexDirection Row
public YogaFlexDirection RowReverse
}
internal UnityEngine.Yoga.YogaJustify : Enum {
public int value__
public YogaJustify FlexStart
public YogaJustify Center
public YogaJustify FlexEnd
public YogaJustify SpaceBetween
public YogaJustify SpaceAround
}
internal UnityEngine.Yoga.YogaLogger : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public void Invoke(IntPtr unmanagedConfigPtr, IntPtr unmanagedNotePtr, YogaLogLevel level, string message)
public IAsyncResult BeginInvoke(IntPtr unmanagedConfigPtr, IntPtr unmanagedNotePtr, YogaLogLevel level, string message, AsyncCallback callback, object object)
public void EndInvoke(IAsyncResult result)
}
internal UnityEngine.Yoga.YogaLogLevel : Enum {
public int value__
public YogaLogLevel Error
public YogaLogLevel Warn
public YogaLogLevel Info
public YogaLogLevel Debug
public YogaLogLevel Verbose
public YogaLogLevel Fatal
}
internal UnityEngine.Yoga.YogaMeasureFunc : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public YogaSize Invoke(IntPtr unmanagedNodePtr, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode)
public IAsyncResult BeginInvoke(IntPtr unmanagedNodePtr, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode, AsyncCallback callback, object object)
public YogaSize EndInvoke(IAsyncResult result)
}
internal UnityEngine.Yoga.YogaMeasureMode : Enum {
public int value__
public YogaMeasureMode Undefined
public YogaMeasureMode Exactly
public YogaMeasureMode AtMost
}
internal UnityEngine.Yoga.YogaNode : object {
internal IntPtr _ygNode
private YogaConfig _config
private WeakReference _parent
private List`1<YogaNode> _children
private MeasureFunction _measureFunction
private BaselineFunction _baselineFunction
private object _data
internal YogaConfig Config
public bool IsDirty
public bool HasNewLayout
public YogaNode Parent
public bool IsMeasureDefined
public bool IsBaselineDefined
public YogaDirection StyleDirection
public YogaFlexDirection FlexDirection
public YogaJustify JustifyContent
public YogaDisplay Display
public YogaAlign AlignItems
public YogaAlign AlignSelf
public YogaAlign AlignContent
public YogaPositionType PositionType
public YogaWrap Wrap
public float Flex
public float FlexGrow
public float FlexShrink
public YogaValue FlexBasis
public YogaValue Width
public YogaValue Height
public YogaValue MaxWidth
public YogaValue MaxHeight
public YogaValue MinWidth
public YogaValue MinHeight
public float AspectRatio
public float LayoutX
public float LayoutY
public float LayoutRight
public float LayoutBottom
public float LayoutWidth
public float LayoutHeight
public YogaDirection LayoutDirection
public YogaOverflow Overflow
public object Data
public YogaNode Item
public int Count
public YogaValue Left
public YogaValue Top
public YogaValue Right
public YogaValue Bottom
public YogaValue Start
public YogaValue End
public YogaValue MarginLeft
public YogaValue MarginTop
public YogaValue MarginRight
public YogaValue MarginBottom
public YogaValue MarginStart
public YogaValue MarginEnd
public YogaValue MarginHorizontal
public YogaValue MarginVertical
public YogaValue Margin
public YogaValue PaddingLeft
public YogaValue PaddingTop
public YogaValue PaddingRight
public YogaValue PaddingBottom
public YogaValue PaddingStart
public YogaValue PaddingEnd
public YogaValue PaddingHorizontal
public YogaValue PaddingVertical
public YogaValue Padding
public float BorderLeftWidth
public float BorderTopWidth
public float BorderRightWidth
public float BorderBottomWidth
public float BorderStartWidth
public float BorderEndWidth
public float BorderWidth
public float LayoutMarginLeft
public float LayoutMarginTop
public float LayoutMarginRight
public float LayoutMarginBottom
public float LayoutMarginStart
public float LayoutMarginEnd
public float LayoutPaddingLeft
public float LayoutPaddingTop
public float LayoutPaddingRight
public float LayoutPaddingBottom
public float LayoutBorderLeft
public float LayoutBorderTop
public float LayoutBorderRight
public float LayoutBorderBottom
public float LayoutPaddingStart
public float LayoutPaddingEnd
public float ComputedFlexBasis
public void .ctor(YogaConfig config)
public void .ctor(YogaNode srcNode)
protected void Finalize()
public void Reset()
internal YogaConfig get_Config()
internal void set_Config(YogaConfig value)
public bool get_IsDirty()
public void MarkDirty()
public bool get_HasNewLayout()
public void MarkHasNewLayout()
public YogaNode get_Parent()
public bool get_IsMeasureDefined()
public bool get_IsBaselineDefined()
public void CopyStyle(YogaNode srcNode)
public YogaDirection get_StyleDirection()
public void set_StyleDirection(YogaDirection value)
public YogaFlexDirection get_FlexDirection()
public void set_FlexDirection(YogaFlexDirection value)
public YogaJustify get_JustifyContent()
public void set_JustifyContent(YogaJustify value)
public YogaDisplay get_Display()
public void set_Display(YogaDisplay value)
public YogaAlign get_AlignItems()
public void set_AlignItems(YogaAlign value)
public YogaAlign get_AlignSelf()
public void set_AlignSelf(YogaAlign value)
public YogaAlign get_AlignContent()
public void set_AlignContent(YogaAlign value)
public YogaPositionType get_PositionType()
public void set_PositionType(YogaPositionType value)
public YogaWrap get_Wrap()
public void set_Wrap(YogaWrap value)
public void set_Flex(float value)
public float get_FlexGrow()
public void set_FlexGrow(float value)
public float get_FlexShrink()
public void set_FlexShrink(float value)
public YogaValue get_FlexBasis()
public void set_FlexBasis(YogaValue value)
public YogaValue get_Width()
public void set_Width(YogaValue value)
public YogaValue get_Height()
public void set_Height(YogaValue value)
public YogaValue get_MaxWidth()
public void set_MaxWidth(YogaValue value)
public YogaValue get_MaxHeight()
public void set_MaxHeight(YogaValue value)
public YogaValue get_MinWidth()
public void set_MinWidth(YogaValue value)
public YogaValue get_MinHeight()
public void set_MinHeight(YogaValue value)
public float get_AspectRatio()
public void set_AspectRatio(float value)
public float get_LayoutX()
public float get_LayoutY()
public float get_LayoutRight()
public float get_LayoutBottom()
public float get_LayoutWidth()
public float get_LayoutHeight()
public YogaDirection get_LayoutDirection()
public YogaOverflow get_Overflow()
public void set_Overflow(YogaOverflow value)
public object get_Data()
public void set_Data(object value)
public YogaNode get_Item(int index)
public int get_Count()
public void MarkLayoutSeen()
public bool ValuesEqual(float f1, float f2)
public void Insert(int index, YogaNode node)
public void RemoveAt(int index)
public void AddChild(YogaNode child)
public void RemoveChild(YogaNode child)
public void Clear()
public int IndexOf(YogaNode node)
public void SetMeasureFunction(MeasureFunction measureFunction)
public void SetBaselineFunction(BaselineFunction baselineFunction)
public void CalculateLayout(float width, float height)
public YogaSize MeasureInternal(YogaNode node, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode)
public float BaselineInternal(YogaNode node, float width, float height)
public string Print(YogaPrintOptions options)
public IEnumerator`1<YogaNode> GetEnumerator()
private IEnumerator System.Collections.IEnumerable.GetEnumerator()
public int GetInstanceCount()
public YogaValue get_Left()
public void set_Left(YogaValue value)
public YogaValue get_Top()
public void set_Top(YogaValue value)
public YogaValue get_Right()
public void set_Right(YogaValue value)
public YogaValue get_Bottom()
public void set_Bottom(YogaValue value)
public YogaValue get_Start()
public void set_Start(YogaValue value)
public YogaValue get_End()
public void set_End(YogaValue value)
private void SetStylePosition(YogaEdge edge, YogaValue value)
public YogaValue get_MarginLeft()
public void set_MarginLeft(YogaValue value)
public YogaValue get_MarginTop()
public void set_MarginTop(YogaValue value)
public YogaValue get_MarginRight()
public void set_MarginRight(YogaValue value)
public YogaValue get_MarginBottom()
public void set_MarginBottom(YogaValue value)
public YogaValue get_MarginStart()
public void set_MarginStart(YogaValue value)
public YogaValue get_MarginEnd()
public void set_MarginEnd(YogaValue value)
public YogaValue get_MarginHorizontal()
public void set_MarginHorizontal(YogaValue value)
public YogaValue get_MarginVertical()
public void set_MarginVertical(YogaValue value)
public YogaValue get_Margin()
public void set_Margin(YogaValue value)
private void SetStyleMargin(YogaEdge edge, YogaValue value)
public YogaValue get_PaddingLeft()
public void set_PaddingLeft(YogaValue value)
public YogaValue get_PaddingTop()
public void set_PaddingTop(YogaValue value)
public YogaValue get_PaddingRight()
public void set_PaddingRight(YogaValue value)
public YogaValue get_PaddingBottom()
public void set_PaddingBottom(YogaValue value)
public YogaValue get_PaddingStart()
public void set_PaddingStart(YogaValue value)
public YogaValue get_PaddingEnd()
public void set_PaddingEnd(YogaValue value)
public YogaValue get_PaddingHorizontal()
public void set_PaddingHorizontal(YogaValue value)
public YogaValue get_PaddingVertical()
public void set_PaddingVertical(YogaValue value)
public YogaValue get_Padding()
public void set_Padding(YogaValue value)
private void SetStylePadding(YogaEdge edge, YogaValue value)
public float get_BorderLeftWidth()
public void set_BorderLeftWidth(float value)
public float get_BorderTopWidth()
public void set_BorderTopWidth(float value)
public float get_BorderRightWidth()
public void set_BorderRightWidth(float value)
public float get_BorderBottomWidth()
public void set_BorderBottomWidth(float value)
public float get_BorderStartWidth()
public void set_BorderStartWidth(float value)
public float get_BorderEndWidth()
public void set_BorderEndWidth(float value)
public float get_BorderWidth()
public void set_BorderWidth(float value)
public float get_LayoutMarginLeft()
public float get_LayoutMarginTop()
public float get_LayoutMarginRight()
public float get_LayoutMarginBottom()
public float get_LayoutMarginStart()
public float get_LayoutMarginEnd()
public float get_LayoutPaddingLeft()
public float get_LayoutPaddingTop()
public float get_LayoutPaddingRight()
public float get_LayoutPaddingBottom()
public float get_LayoutBorderLeft()
public float get_LayoutBorderTop()
public float get_LayoutBorderRight()
public float get_LayoutBorderBottom()
public float get_LayoutPaddingStart()
public float get_LayoutPaddingEnd()
public float get_ComputedFlexBasis()
}
internal UnityEngine.Yoga.YogaNodeType : Enum {
public int value__
public YogaNodeType Default
public YogaNodeType Text
}
internal UnityEngine.Yoga.YogaOverflow : Enum {
public int value__
public YogaOverflow Visible
public YogaOverflow Hidden
public YogaOverflow Scroll
}
internal UnityEngine.Yoga.YogaPositionType : Enum {
public int value__
public YogaPositionType Relative
public YogaPositionType Absolute
}
internal UnityEngine.Yoga.YogaPrintOptions : Enum {
public int value__
public YogaPrintOptions Layout
public YogaPrintOptions Style
public YogaPrintOptions Children
}
internal UnityEngine.Yoga.YogaSize : ValueType {
public float width
public float height
}
internal UnityEngine.Yoga.YogaUnit : Enum {
public int value__
public YogaUnit Undefined
public YogaUnit Point
public YogaUnit Percent
public YogaUnit Auto
}
internal UnityEngine.Yoga.YogaValue : ValueType {
private float value
private YogaUnit unit
public YogaUnit Unit
public float Value
public YogaUnit get_Unit()
public float get_Value()
public YogaValue Point(float value)
public bool Equals(YogaValue other)
public bool Equals(object obj)
public int GetHashCode()
public YogaValue Undefined()
public YogaValue Auto()
public YogaValue Percent(float value)
public YogaValue op_Implicit(float pointValue)
internal YogaValue MarshalValue(YogaValue value)
}
internal UnityEngine.Yoga.YogaValueExtensions : object {
public YogaValue Percent(float value)
public YogaValue Pt(float value)
public YogaValue Percent(int value)
public YogaValue Pt(int value)
}
internal UnityEngine.Yoga.YogaWrap : Enum {
public int value__
public YogaWrap NoWrap
public YogaWrap Wrap
public YogaWrap WrapReverse
}
