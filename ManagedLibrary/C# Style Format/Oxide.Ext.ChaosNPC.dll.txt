internal ‭‪⁮‫⁯‪‬‏‏‌‮⁫‍‏⁯‫⁯‎‏‮‍⁬⁪⁯⁪⁬‌⁮‎‫‎‬‎‎‏​‭‮⁬‏‮ : object {
internal bool ⁯‌‭‏⁯‌⁫‬⁭‎⁬‏‮⁪​⁭⁫‫⁮⁯⁪⁫⁬⁯⁫‍‍⁯⁮‪⁭‌‏‏‏‭‭‫⁯‏‮(Vector3 )
}
internal ConfusedByAttribute : Attribute {
public void .ctor(string )
}
public Oxide.Ext.ChaosNPC.ChaosNPC : CSPlugin {
protected Command command
protected Plugins plugins
protected Hash`2<Plugin, List`1<CustomScientistNPC>> Lookup
public ChaosNPC Instance
private string ‮⁬‏‫⁬‬‏⁯‫⁬‪⁬‌⁪⁭‫⁯⁪‫‍⁯⁪‏‮‌‮⁯⁪‍⁭‍⁪⁪‮‏‎⁫⁪‍‫‮
public void HandleAddedToManager(PluginManager manager)
private void OnEntityKill(CustomScientistNPC customNpc)
private void OnEntityTakeDamage(CustomScientistNPC customNpc, HitInfo hitInfo)
private object OnNpcTarget(CustomScientistNPC customNpc, BasePlayer target)
private object CanLootPlayer(CustomScientistNPC customNpc, BasePlayer player)
private object OnPlayerAssist(CustomScientistNPC customNpc, BasePlayer player)
private void ⁮‭⁬⁫‬‍‍‬‫⁪​‏‭⁬‍‮‍⁮‏‎‪‮‪⁫⁪⁭‏‏‮⁭‮‫‌‬‌‏⁯⁬‮‌‮(Plugin )
private void OnPluginUnloaded(Plugin plugin)
private void ⁪‪‫‍‭⁫​‭⁮⁫⁪‭‪‬‪‏​⁭‏⁪‫‏‎‌‮⁭​⁯⁮⁬‬⁭⁯⁯⁪​⁬‪‌‫‮()
public bool InitializeStates(BaseAIBrain customNPCBrain)
public bool WantsToPopulateLoot(CustomScientistNPC customNpc, NPCPlayerCorpse npcplayerCorpse)
public Byte[] GetCustomDesign()
private void cmdSpawnNPC(BasePlayer player, string command, String[] args)
private void cmdWipeNPCs(BasePlayer player, string command, String[] args)
private bool ccmdWipeNPCs(Arg arg)
private void ‎‏⁮‫‭‌‮⁬‌‏‌‮‌‪‪⁭‎‏‭‮⁫‏⁮‌⁪‌‌‏‬⁬‪⁫‏‎‌‪⁬⁮⁬‌‮(Plugin , CustomScientistNPC )
public CustomScientistNPC SpawnNPC(Plugin plugin, Vector3 position, NPCSettings settings)
public T1 SpawnNPC(Plugin plugin, Vector3 position, NPCSettings settings)
public T1 SpawnNPC(Plugin plugin, Vector3 position, NPCSettings settings)
public T1 SpawnNPC(Plugin plugin, Vector3 position, NPCSettings settings)
private  ‎‎⁬‪‪⁯‎‮‬‍⁭​‭‍‌‫‪⁭⁬‌‏‭⁭⁫‌‮‎‌⁫⁯‌⁫⁫‫⁭⁫⁬‬‪⁫‮(Vector3 , NPCSettings , Plugin )
public void SetRoamHomePosition(CustomScientistNPC customNpc, Vector3 position)
public void SetDestination(CustomScientistNPC customNpc, Vector3 destination, Action onDestinationReached)
}
public Oxide.Ext.ChaosNPC.ChaosNPCExtension : Extension {
internal Assembly ‍​⁭‬​⁪⁬‫‍‌⁭⁮‮⁯⁭‍‬‎‮‫⁯‌‫‪‭‌​⁭‫‭‏⁫‮‍‫⁪‪‬‮⁫‮
internal AssemblyName ⁯‏​⁪‫‬‌​‏‬⁬‌‎‍‮⁫‪‌‬‭‫‫​‏‫‬‍‬⁭‍‬⁯⁪‍‫⁬⁬⁪‮‫‮
internal VersionNumber ‏⁪⁫⁯‏⁮‪⁯‍⁬‍‌​⁫‍‪‭‏‍‮‍‫⁯⁯‪‍‬‫‪‍⁭⁮⁪⁬⁮‪‮‍⁯⁬‮
internal string ‪‭‬‭‭‭‪‏⁫⁬⁪‮⁯⁬‬‍‎‎⁪⁮⁯​‪‮⁫⁪‎⁮‏‮‫⁫‏⁯⁯⁮‪‍‏‪‮
public string Name
public string Author
public VersionNumber Version
public void .ctor(ExtensionManager )
public string get_Name()
public string get_Author()
public VersionNumber get_Version()
public void Load()
public void OnModLoad()
}
internal Oxide.Ext.ChaosNPC.ChaosNPCLoader : RustPluginLoader {
public Type[] ‏⁮⁭⁬⁬‎‏‏⁯‮⁭⁭⁪‭⁮⁭⁬⁬‌‎‮​‭​‫⁮‎‎⁬‫⁭‮‌‏⁯​⁭‍‮⁮‮
public Type[] ⁭​⁬⁯‮‪⁪‌⁬‭‭‍‭‭​‬‏‭‮⁭⁪⁫‍‬‌​⁭‫‮​⁬‏‌‌‬‭⁬‫‫‮‮()
}
public Oxide.Ext.ChaosNPC.CustomScientistBrain : ScientistBrain {
private Byte[] ‬⁫‬‍⁫⁮⁯⁬⁭‪​‭⁪‫​⁪‪‬‫‮​‌‌⁬‭⁬​⁯‎‮‭‭⁭⁪‭‌‎‭‬‍‮
public void InitializeAI()
public EntityType GetSenseTypes()
public float GetMaxRoamDistance(CustomScientistNPC customNpc)
public void AddStates()
public void Think(float delta)
protected void OnStateChanged()
public void OnDestroy()
}
public Oxide.Ext.ChaosNPC.CustomScientistNavigator : NPCPlayerNavigator {
public void Init(BaseCombatEntity entity, NavMeshAgent agent)
public void OnStuck()
public void ApplyFacingDirectionOverride()
protected bool CanUpdateMovement()
private Vector3 ⁮⁬‪⁪‌⁭‎⁮⁮‬⁫⁬‬‭‪‏‬‏‮‏‏‏‪‫‮​⁬‬‍‌​⁬⁭⁬⁪‏⁫‍⁮‍‮(BasePlayer , BaseEntity )
private Vector3 ‭⁪‍⁬‬⁬⁪⁫‪‮⁭⁭‬‌⁯⁬⁯‎⁬⁯​‭⁪⁬‎‪‫⁮⁫‭‏⁭‍⁯‪‎‫⁯‮‭‮(BasePlayer )
private Vector3 ​‎​‏‏⁫⁬‮​‬‬‎‪‎⁭‬‫‎⁬⁯‪‍‮⁯‬⁯⁮‎‏‬​‬‫⁮⁫‍‏⁮‌‍‮(BaseEntity )
}
public Oxide.Ext.ChaosNPC.CustomScientistNPC : ScientistNPC {
internal Plugin ⁯⁭‪⁯‭⁫⁭‌⁪⁮‌⁭​‏‏‌⁮⁫‪‫​‮‬⁪‎⁬‪‮‪‌‍⁯⁪⁯‫​⁭‭‍⁪‮
internal Grid`1<CustomScientistNPC> ⁭⁫​⁮⁪‪‮​‎⁯‎⁪‏⁮‏‪‭⁯‭‏⁪‪‌​‎⁫⁯‮⁭‬⁭‎⁮‫‏‏‍​‍‮‮
private CustomScientistNPC[] ⁫‫‪⁫‎‏​⁫‌⁫⁯⁮⁭​⁬‮‮⁮⁯‪‪⁭‌‏‪‍‪⁫‍⁪⁯‎‮‌⁫‍⁫⁭‪‪‮
private Plugin ‮‬‭⁫‫‪‬‭⁯‪‪‬⁯‍⁪⁪‭⁭⁯‌‌⁭‎‍‮⁭​‭⁬⁫‏‍‭⁬⁬‬⁯⁬⁮‮‮
private NPCSettings ‮‎⁮⁪‍‌⁫​⁭⁮‌‎‪‬⁯‫⁪‎⁭⁯‪⁯‮‪‏‏‪⁫‫⁯‌‌‫⁭⁬⁪⁮⁮⁯⁬‮
private Transform ⁪‍‎‏⁬​​‬‌⁮‮⁬⁭​‪⁯‌‫‪‬‍‭‭‌‏⁭‏⁭⁫⁬⁬⁯‍⁭⁫‮⁯⁬‬‮
private BaseEntity ⁪​⁯⁫‎⁬‮‮‎⁬⁮‪‎‮⁭‬‮‫‮‎⁪‮⁫‏‎‌‏⁯​​‪‏⁫⁪⁫‫⁯⁭‌⁪‮
private AttackEntity ​⁬⁬⁯⁭‭‌⁪⁮‪‫⁪‬​⁫​‎‎​​⁭‍​​‌‍⁪⁪⁮‭‫‏‎‮‌‍⁮‏‭⁪‮
private AIState ‍⁯‭‭‍‏⁮⁫⁮​‍⁪‌‮‌‏⁫‎⁬‎⁪‪‍⁫⁭‌‮​​‭‏‍‮‍‭‏‭​‬‍‮
private Vector3 ⁫‍‫⁮‪⁪⁯⁬⁬‭⁬⁭‏‭‍⁫⁯⁯‬⁫‍‭‬‏‮‍⁯⁯‍⁭‏⁮⁮‪‮‌‬⁯⁮⁯‮
private bool ‫⁭‪⁬⁫‭​‎‍⁭⁫‏‍​‭⁮⁯⁮‬⁮‏⁬‬​⁮⁫‎‌‫⁬⁭‌⁪‭‎​⁬‏⁭⁭‮
private bool ‮‍⁬‫‮‌⁭‪‌‭⁫​‍‏‭‮​‮‫‍‬​‪‌⁬⁮⁮‌‎‌⁬⁭‫⁬⁯​⁪‍⁯‭‮
protected float nextAlertTime
private Vector3 ‮‬‪‌⁯‍⁪‫⁯‏⁪‭⁮​‭⁯‭⁭‭‫​⁮‮‫‎‬⁭‫‬‬‫⁪⁬​‬‌⁭‭‮‌‮
internal Action ⁮⁪‏⁬⁪⁮⁫⁯‬‮⁯‪‎⁬‭‫‍⁪⁭‫‪⁮‮‭​‏‪⁭⁪⁬‫⁬‎‏‏⁮⁯⁯‮‮
protected bool isEquippingWeapon
protected NPCType npcType
protected int AREA_MASK
protected int AGENT_TYPE_ID
protected LootSpawnSlot[] EMPTY_SLOTS
private Hash`2<string, float> ‎‌‎‌‮‭‌⁬‌‮‏‍‭⁪‌​‏⁭‏⁭​‭‎‪⁬⁯‮‎⁭‏‍‭​⁫‬⁮‎‪⁪⁭‮
private Hash`2<string, float> ⁪‭‍⁬⁬​‪⁪‏‪‭‮⁬‪⁬‭‮‭‮‏⁬​⁫‪⁯‪⁮‬‏‫⁭​⁬‌‬⁯‬‎‬‮
public Plugin Plugin
public NPCSettings Settings
public Transform Transform
public BaseEntity CurrentTarget
public AttackEntity CurrentWeapon
public AIState CurrentState
public Vector3 HomePosition
public bool IsPaused
public bool IsAlert
public Vector3 DestinationOverride
public Plugin get_Plugin()
public void set_Plugin(Plugin value)
public NPCSettings get_Settings()
public void set_Settings(NPCSettings value)
public Transform get_Transform()
public void set_Transform(Transform value)
public BaseEntity get_CurrentTarget()
public void set_CurrentTarget(BaseEntity value)
public AttackEntity get_CurrentWeapon()
public void set_CurrentWeapon(AttackEntity value)
public AIState get_CurrentState()
public void set_CurrentState(AIState value)
public Vector3 get_HomePosition()
public void set_HomePosition(Vector3 value)
public bool get_IsPaused()
public void set_IsPaused(bool value)
public bool get_IsAlert()
public void set_IsAlert(bool value)
public Vector3 get_DestinationOverride()
public void set_DestinationOverride(Vector3 value)
public void ServerInit()
public void DestroyShared()
private void ‮‮‫‎⁯‪‌‏‍‭‮‍⁯‌‫⁪⁪⁬‮‫‎‬‎⁬‌⁪‫‬⁯⁬⁮⁬‫⁫‌⁮⁪⁮⁯‮()
private void ‫‮⁫‭⁫⁮⁬⁭‭⁮⁬⁫⁭‌​‭‭‫‎⁪‎⁭⁪‏‬‍‫‭‭‫⁬‭⁮‍⁯⁬‭‬‏⁪‮()
private void ‍⁪⁬⁫⁬⁬‫⁫‫⁪‍‎⁫⁪‬⁮⁯​‬⁬‌⁮‎‎⁯⁭‮‍‬⁫⁯‭‎‫‏⁪‫⁮‎‫‮()
protected LootSpawnSlot[] GetLootSpawnSlotsForType(NPCType type)
protected PlayerInventoryProperties[] GetLoadoutForType(NPCType type)
public void OnSensation(Sensation sensation)
public BaseEntity GetBestTarget()
public bool CanTargetBasePlayer(BasePlayer player)
public bool CanTargetEntity(BaseEntity baseEntity)
public bool IsValidDistance(float distanceToTarget)
public void NotifyNearby()
public void MoveTowardsTarget(BaseEntity target, bool force)
private bool ⁯⁮‫‮‌‌‎‭‪⁯‏‌‬⁮‬‌‎⁫‎‏​⁮⁪⁮​‭‪‭‮‌‏‌​‫‏‏⁯‌‍‎‮(CustomScientistNPC , CustomScientistNPC )
public void EquipWeapon()
public void HolsterWeapon()
private IEnumerator ⁪⁮​‌⁯⁮‭‏‏⁭‍‌‎‪‫‬‏‫‭‫‍⁫⁮‌‫⁬‎‫⁮‎⁯⁫‪​⁮‬⁮‏⁬⁪‮(Item )
protected string OverrideCorpseName()
public BaseCorpse CreateCorpse()
private void ‌⁮⁫⁪‏‭⁬⁭‎⁫⁮⁯‎⁫‪‫⁪⁫‏⁬‫‏⁪​‎‎⁯‌​‍‭‌‭‪⁪‫‭⁬‌‌‮()
private void ⁪‭​‬‎⁪‬⁫‮‪‍‬⁬⁫⁯‫‫⁬‬‌‌⁪‫‬⁮‮‌‏​‌​‎‮‎‭‎‎‫‮‮()
private bool ‭⁭‏​⁫⁮‫‮⁮‌‭‌⁯⁬‏‮⁫‍‏⁯‏⁭‭‌‫⁮‫‬‮‍⁪‌⁬‪‏⁬⁯‏‎‍‮(string , Single& )
public string Categorize()
public float GetAimConeScale()
internal void ‪‬‮​⁭⁮⁯‪‫⁯‭‌⁫​‌‌⁭⁬⁯⁬⁭‫‫⁪⁬​‫‍‭‭​‎⁭‏⁫⁫‪⁫⁭⁪‮(Vector3 , Action )
public void SetPaused(bool paused)
private void ⁫‬‪‫⁭‎​‍‎‫⁪⁪⁮⁪‭⁪⁪⁭‍⁭‍⁭⁫‫‎​⁯‌⁭‌⁫⁯‬⁭‎‮‍‬‮⁭‮()
private bool ‭‏⁪‫‮‬‪⁫‭‎​​⁮⁯⁮‏‭⁭‎‬‎⁫⁮‭⁪⁯⁯‬‍⁭‭‫⁫⁬⁫‮⁪‬‬⁫‮(CustomScientistNPC )
}
public Oxide.Ext.ChaosNPC.Definitions : object {
public LootSpawnSlot[] LootSpawns
public PlayerInventoryProperties[] Loadouts
private Definitions ‌‭⁮‍‍‌‍‎‮‎‎‬‮⁪‪‌‏⁬⁪⁬‫‎⁮‭‌⁫‬‫‌⁭⁯⁬‫‫‌‌‫​⁪‪‮
private Definitions ⁬⁪‎⁭⁫⁯⁭‬‍⁭​⁯‍‭​‭‬⁮‬‍‪‪⁮‭‭‫‏‏⁮‮⁫⁪‪‍‪‌‍‎‬‬‮
private Definitions ‬⁮‪⁮⁬‪⁬‪‬​‏​‮‬‫⁯‭⁬‍‎‪⁬⁪⁯‌⁭‬‍‎‏‎‎⁮‬⁪‍‫⁫⁬⁮‮
private Definitions ⁫‪‫⁬​‬⁮‎‪‬⁭‏⁫⁯‎‎‍‌⁪⁯‏‮‏⁭‫‪⁭‏‬‍⁭‫‬⁭‬⁯‫‪‭⁫‮
public Definitions Scientist
public Definitions Scarecrow
public Definitions TunnelDweller
public Definitions BanditGuard
public Definitions get_Scientist()
public Definitions get_Scarecrow()
public Definitions get_TunnelDweller()
public Definitions get_BanditGuard()
}
public Oxide.Ext.ChaosNPC.Helpers : object {
public void CopySerializeableFields(T src, T dst)
}
public Oxide.Ext.ChaosNPC.IChaosNPCPlugin {
public bool InitializeStates(BaseAIBrain customNPCBrain)
public bool WantsToPopulateLoot(CustomScientistNPC customNpc, NPCPlayerCorpse npcplayerCorpse)
public Byte[] GetCustomDesign()
}
public Oxide.Ext.ChaosNPC.NavmeshSpawnPoint : object {
private NavMeshHit ⁭‮‍⁯‎⁪‌‌⁮‭⁭‪​⁬⁮‬⁬‪‮⁭⁭‏‬⁭⁯⁪‌​‎‍‎‫⁫‮⁭‬⁬​‌‪‮
private RaycastHit ⁬‎⁭‎‏⁬⁫⁭⁮⁬⁬⁫‮⁯‎‭‫‫‮⁯‎⁪‪‏⁪⁭⁪‬‫‮⁫‍⁯​‬‫⁭‭⁮⁫‮
private Collider[] ​⁭⁯‌⁫‮⁫‎‮‮⁫​‏‍​⁮⁫‬‎⁪‏⁭‍‍‭‏⁭‬⁪⁮‎​​‪⁪‪‫⁯‎⁯‮
private int ‎‭‍‮‏⁯⁬⁬⁯‎⁮‎‌⁯⁪‎⁬‫‪‮‮⁭⁮‬‪‫⁬⁫​⁮‬‪‮⁭⁫⁭⁮‪‭‍‮
private String[] ⁯‌‪​⁬‍⁯‍‌‭‫‬⁭‪⁭‍⁯⁮​‮‪​‏⁮‌⁭⁪‪‪‪⁯‍​‎⁪‮‍‫‏⁮‮
private String[] ‬⁮⁬‍​⁬​‪‫⁮‌‍⁯⁬⁪⁬‎⁯‭​‍‬​​⁭‭‬‎‬⁭‪‬‮‭⁪⁫‬‪​‬‮
public bool Find(Vector3 targetPosition, float maxDistance, Vector3& position)
private bool ⁬​‫⁮‭‌⁯⁭‭‫⁫‬⁯⁮‪⁯‏⁮⁫⁭⁭⁫‬⁮‏‏‌‫⁫‎⁮⁭⁫​‌‏‏‍‬‪‮(Vector3 )
private bool ‬‭‭‎‏‭‏‌⁫‪‫​⁮⁭‌⁫⁯‭⁫‫‮‪‬‪‪‌‍‪‌⁭‌‌‮‌‫‮⁫‫‬‎‮(Vector3 )
}
public Oxide.Ext.ChaosNPC.NPCSettings : object {
private NPCType[] <Types>k__BackingField
private String[] <DisplayNames>k__BackingField
private String[] <Kits>k__BackingField
private bool <StripCorpseLoot>k__BackingField
private bool <DropInventoryOnDeath>k__BackingField
private float <RoamRange>k__BackingField
private float <ChaseRange>k__BackingField
private float <AimConeScale>k__BackingField
private bool <KillInSafeZone>k__BackingField
private float <DespawnTime>k__BackingField
private bool <StartDead>k__BackingField
private float <WoundedChance>k__BackingField
private float <WoundedDurationMin>k__BackingField
private float <WoundedDurationMax>k__BackingField
private float <WoundedRecoveryChance>k__BackingField
private bool <PreventFriendlyFire>k__BackingField
private bool <EnableNavMesh>k__BackingField
private bool <EquipWeapon>k__BackingField
private bool <CanUseWeaponMounted>k__BackingField
private bool <KillUnderWater>k__BackingField
private VitalStats <Vitals>k__BackingField
private MovementStats <Movement>k__BackingField
private SensoryStats <Sensory>k__BackingField
public NPCType[] Types
public String[] DisplayNames
public String[] Kits
public bool StripCorpseLoot
public bool DropInventoryOnDeath
public float RoamRange
public float ChaseRange
public float AimConeScale
public bool KillInSafeZone
public float DespawnTime
public bool StartDead
public float WoundedChance
public float WoundedDurationMin
public float WoundedDurationMax
public float WoundedRecoveryChance
public bool PreventFriendlyFire
public bool EnableNavMesh
public bool EquipWeapon
public bool CanUseWeaponMounted
public bool KillUnderWater
public VitalStats Vitals
public MovementStats Movement
public SensoryStats Sensory
public NPCType[] get_Types()
public void set_Types(NPCType[] value)
public String[] get_DisplayNames()
public void set_DisplayNames(String[] value)
public String[] get_Kits()
public void set_Kits(String[] value)
public bool get_StripCorpseLoot()
public void set_StripCorpseLoot(bool value)
public bool get_DropInventoryOnDeath()
public void set_DropInventoryOnDeath(bool value)
public float get_RoamRange()
public void set_RoamRange(float value)
public float get_ChaseRange()
public void set_ChaseRange(float value)
public float get_AimConeScale()
public void set_AimConeScale(float value)
public bool get_KillInSafeZone()
public void set_KillInSafeZone(bool value)
public float get_DespawnTime()
public void set_DespawnTime(float value)
public bool get_StartDead()
public void set_StartDead(bool value)
public float get_WoundedChance()
public void set_WoundedChance(float value)
public float get_WoundedDurationMin()
public void set_WoundedDurationMin(float value)
public float get_WoundedDurationMax()
public void set_WoundedDurationMax(float value)
public float get_WoundedRecoveryChance()
public void set_WoundedRecoveryChance(float value)
public bool get_PreventFriendlyFire()
public void set_PreventFriendlyFire(bool value)
public bool get_EnableNavMesh()
public void set_EnableNavMesh(bool value)
public bool get_EquipWeapon()
public void set_EquipWeapon(bool value)
public bool get_CanUseWeaponMounted()
public void set_CanUseWeaponMounted(bool value)
public bool get_KillUnderWater()
public void set_KillUnderWater(bool value)
public VitalStats get_Vitals()
public void set_Vitals(VitalStats value)
public MovementStats get_Movement()
public void set_Movement(MovementStats value)
public SensoryStats get_Sensory()
public void set_Sensory(SensoryStats value)
}
public Oxide.Ext.ChaosNPC.NPCType : Enum {
public int value__
public NPCType HeavyScientist
public NPCType Scientist
public NPCType Scarecrow
public NPCType BanditGuard
public NPCType TunnelDweller
}
