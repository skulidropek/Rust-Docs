[FlagsAttribute]
public enum Facepunch.BoneFlag : Enum {
    public int value__;
    public static BoneFlag Left;
    public static BoneFlag Middle;
    public static BoneFlag Right;
    public static BoneFlag Pelvis;
    public static BoneFlag Hip;
    public static BoneFlag Knee;
    public static BoneFlag Foot;
    public static BoneFlag Arm;
    public static BoneFlag Elbow;
    public static BoneFlag Spine;
    public static BoneFlag Head;
    public static BoneFlag Eye;
    public static BoneFlag Finger;
    public static BoneFlag Thumb;
}
[AddComponentMenu("Facepunch/Skeleton")]
public class Facepunch.Skeleton : MonoBehaviour {
    public SkeletonDefinition Source;
    public GameObject[] Bones;
    public Transform GetTransform(int id);
    public Transform GetTransformSlow(string name);
    public int GetBoneId(string boneName);
    public IEnumerable`1<Transform> GetTransforms();
    public GameObject GetGameObject(int id);
    public void CopyTo(Skeleton to);
    public void CopyFrom(Vector3[] sourceBonePos, Quaternion[] sourceBoneRot, bool localSpace);
    public void CopySkeletonSkins(SkeletonSkin[] renderers, LODGroup lodGroup);
    private void CopyLodGroup(LODGroup lodGroup, SkeletonSkin[] renderers, SkinnedMeshRenderer[] created);
    private int LookupRendererIndex(SkeletonSkin[] renderers, Renderer renderer);
    private SkinnedMeshRenderer CopySkin(SkeletonSkin renderer);
    public void CopySkeletonAttachments(SkeletonAttachment[] attachments);
    private void CopyAttachment(SkeletonAttachment skeletonAttachment);
    private int ReverseLookupBone(GameObject bone);
    public void Rebuild();
    public static GameObject[] GetBones(GameObject root, SkeletonDefinition skeletonDef);
    private static GameObject FindBoneImpl(GameObject root, Bone& bone, Transform[] allChildren);
    [CompilerGeneratedAttribute]
private Transform <GetTransforms>b__5_0(Bone x);
}
public class Facepunch.SkeletonAttachment : MonoBehaviour {
    public void CopyTo(GameObject parent);
}
[CreateAssetMenuAttribute]
public class Facepunch.SkeletonDefinition : ScriptableObject {
    public GameObject SourceObject;
    public Bone[] Bones;
    public RagdollSettings Ragdoll;
    public Bone FindBone(string name);
}
public class Facepunch.SkeletonRagdoll : Skeleton {
}
[AddComponentMenu("Facepunch/SkeletonSkin")]
[ExecuteInEditMode]
public class Facepunch.SkeletonSkin : MonoBehaviour {
    public SkinnedMeshRenderer SkinnedMeshRenderer;
    public SkeletonDefinition SkeletonDefinition;
    public int LOD;
    public int RootBone;
    public Int32[] TargetBones;
    public Transform[] BoneTransforms;
    public void Retarget(Skeleton target);
    public SkinnedMeshRenderer DuplicateAndRetarget(GameObject host, Skeleton target);
}
[AddComponentMenu("Facepunch/Skeleton Skin LOD")]
[RequireComponent("UnityEngine.LODGroup")]
[ExecuteInEditMode]
public class Facepunch.SkeletonSkinLod : MonoBehaviour {
    private static LOD[] emptyLOD;
    public LODGroup LODGroup;
    [RangeAttribute("0", "1")]
public float LodRange0;
    [RangeAttribute("0", "1")]
public float LodRange1;
    [RangeAttribute("0", "1")]
public float LodRange2;
    [RangeAttribute("0", "1")]
public float LodRange3;
    private LOD[] LODs;
    private static SkeletonSkinLod();
    private void Awake();
    private void SetUpLODArray();
    public void AddRenderer(int lod, Renderer r);
    public void Clear();
    public void Rebuild();
}
[CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
[GeneratedCodeAttribute("Unity.MonoScriptGenerator.MonoScriptInfoGenerator", "")]
internal class UnitySourceGeneratedAssemblyMonoScriptTypes_v1 : object {
    private static MonoScriptData Get();
}
