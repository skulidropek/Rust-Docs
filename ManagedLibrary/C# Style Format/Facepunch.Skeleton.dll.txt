public Facepunch.BoneFlag : Enum {
public int value__
public BoneFlag Left
public BoneFlag Middle
public BoneFlag Right
public BoneFlag Pelvis
public BoneFlag Hip
public BoneFlag Knee
public BoneFlag Foot
public BoneFlag Arm
public BoneFlag Elbow
public BoneFlag Spine
public BoneFlag Head
public BoneFlag Eye
public BoneFlag Finger
public BoneFlag Thumb
}
public Facepunch.Skeleton : MonoBehaviour {
public SkeletonDefinition Source
public GameObject[] Bones
public Transform GetTransform(int id)
public Transform GetTransformSlow(string name)
public IEnumerable`1<Transform> GetTransforms()
public GameObject GetGameObject(int id)
public void CopyPositions(Skeleton to)
public void CopySkeletonSkins(SkeletonSkin[] renderers, LODGroup lodGroup)
private void CopyLodGroup(LODGroup lodGroup, SkeletonSkin[] renderers, SkinnedMeshRenderer[] created)
private int LookupRendererIndex(SkeletonSkin[] renderers, Renderer renderer)
private SkinnedMeshRenderer CopySkin(SkeletonSkin renderer)
public void CopySkeletonAttachments(SkeletonAttachment[] attachments)
private void CopyAttachment(SkeletonAttachment skeletonAttachment)
private int ReverseLookupBone(GameObject bone)
private Transform <GetTransforms>b__4_0(Bone x)
}
public Facepunch.SkeletonAttachment : MonoBehaviour {
public void CopyTo(GameObject parent)
}
public Facepunch.SkeletonDefinition : ScriptableObject {
public GameObject SourceObject
public Bone[] Bones
public RagdollSettings Ragdoll
public Bone FindBone(string name)
}
public Facepunch.SkeletonSkin : MonoBehaviour {
public SkinnedMeshRenderer SkinnedMeshRenderer
public SkeletonDefinition SkeletonDefinition
public int LOD
public int RootBone
public Int32[] TargetBones
public Transform[] BoneTransforms
public void Retarget(Skeleton target)
public SkinnedMeshRenderer DuplicateAndRetarget(GameObject host, Skeleton target)
}
public Facepunch.SkeletonSkinLod : MonoBehaviour {
private LOD[] emptyLOD
public LODGroup LODGroup
public float LodRange0
public float LodRange1
public float LodRange2
public float LodRange3
private LOD[] LODs
private void Awake()
public void AddRenderer(int lod, Renderer r)
public void Clear()
public void Rebuild()
}
