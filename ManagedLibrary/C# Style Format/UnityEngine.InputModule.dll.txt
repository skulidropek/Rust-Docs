public UnityEngineInternal.Input.NativeInputEvent : ValueType {
public NativeInputEventType type
public ushort sizeInBytes
public ushort deviceId
public int eventId
public double time
public void .ctor(NativeInputEventType type, int sizeInBytes, int deviceId, double time)
}
public UnityEngineInternal.Input.NativeInputEventType : Enum {
public int value__
public NativeInputEventType DeviceRemoved
public NativeInputEventType DeviceConfigChanged
public NativeInputEventType Text
public NativeInputEventType State
public NativeInputEventType Delta
}
public UnityEngineInternal.Input.NativeInputSystem : object {
public Action`3<NativeInputUpdateType, int, IntPtr> onUpdate
public Action`1<NativeInputUpdateType> onBeforeUpdate
private Action`2<int, string> s_OnDeviceDiscoveredCallback
public Action`2<int, string> onDeviceDiscovered
internal bool hasDeviceDiscoveredCallback
public double currentTime
public double currentTimeOffsetToRealtimeSinceStartup
public Action`2<int, string> get_onDeviceDiscovered()
public void set_onDeviceDiscovered(Action`2<int, string> value)
internal void NotifyBeforeUpdate(NativeInputUpdateType updateType)
internal void NotifyUpdate(NativeInputUpdateType updateType, int eventCount, IntPtr eventData)
internal void NotifyDeviceDiscovered(int deviceId, string deviceDescriptor)
internal void set_hasDeviceDiscoveredCallback(bool value)
public double get_currentTime()
public double get_currentTimeOffsetToRealtimeSinceStartup()
public int AllocateDeviceId()
public void QueueInputEvent(TInputEvent& inputEvent)
public void QueueInputEvent(IntPtr inputEvent)
public long IOCTL(int deviceId, int code, IntPtr data, int sizeInBytes)
public void SetPollingFrequency(float hertz)
public void Update(NativeInputUpdateType updateType)
public void SetUpdateMask(NativeInputUpdateType mask)
}
public UnityEngineInternal.Input.NativeInputUpdateType : Enum {
public int value__
public NativeInputUpdateType Dynamic
public NativeInputUpdateType Fixed
public NativeInputUpdateType BeforeRender
public NativeInputUpdateType Editor
public NativeInputUpdateType IgnoreFocus
}
