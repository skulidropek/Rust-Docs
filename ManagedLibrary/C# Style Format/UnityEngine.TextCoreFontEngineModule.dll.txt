public UnityEngine.TextCore.FaceInfo : ValueType {
private int m_FaceIndex
private string m_FamilyName
private string m_StyleName
private int m_PointSize
private float m_Scale
private int m_UnitsPerEM
private float m_LineHeight
private float m_AscentLine
private float m_CapLine
private float m_MeanLine
private float m_Baseline
private float m_DescentLine
private float m_SuperscriptOffset
private float m_SuperscriptSize
private float m_SubscriptOffset
private float m_SubscriptSize
private float m_UnderlineOffset
private float m_UnderlineThickness
private float m_StrikethroughOffset
private float m_StrikethroughThickness
private float m_TabWidth
internal int faceIndex
public string familyName
public string styleName
public int pointSize
public float scale
internal int unitsPerEM
public float lineHeight
public float ascentLine
public float capLine
public float meanLine
public float baseline
public float descentLine
public float superscriptOffset
public float superscriptSize
public float subscriptOffset
public float subscriptSize
public float underlineOffset
public float underlineThickness
public float strikethroughOffset
public float strikethroughThickness
public float tabWidth
internal int get_faceIndex()
internal void set_faceIndex(int value)
public string get_familyName()
public void set_familyName(string value)
public string get_styleName()
public void set_styleName(string value)
public int get_pointSize()
public void set_pointSize(int value)
public float get_scale()
public void set_scale(float value)
internal int get_unitsPerEM()
internal void set_unitsPerEM(int value)
public float get_lineHeight()
public void set_lineHeight(float value)
public float get_ascentLine()
public void set_ascentLine(float value)
public float get_capLine()
public void set_capLine(float value)
public float get_meanLine()
public void set_meanLine(float value)
public float get_baseline()
public void set_baseline(float value)
public float get_descentLine()
public void set_descentLine(float value)
public float get_superscriptOffset()
public void set_superscriptOffset(float value)
public float get_superscriptSize()
public void set_superscriptSize(float value)
public float get_subscriptOffset()
public void set_subscriptOffset(float value)
public float get_subscriptSize()
public void set_subscriptSize(float value)
public float get_underlineOffset()
public void set_underlineOffset(float value)
public float get_underlineThickness()
public void set_underlineThickness(float value)
public float get_strikethroughOffset()
public void set_strikethroughOffset(float value)
public float get_strikethroughThickness()
public void set_strikethroughThickness(float value)
public float get_tabWidth()
public void set_tabWidth(float value)
internal void .ctor(string familyName, string styleName, int pointSize, float scale, int unitsPerEM, float lineHeight, float ascentLine, float capLine, float meanLine, float baseline, float descentLine, float superscriptOffset, float superscriptSize, float subscriptOffset, float subscriptSize, float underlineOffset, float underlineThickness, float strikethroughOffset, float strikethroughThickness, float tabWidth)
public bool Compare(FaceInfo other)
}
public UnityEngine.TextCore.Glyph : object {
private UInt32 m_Index
private GlyphMetrics m_Metrics
private GlyphRect m_GlyphRect
private float m_Scale
private int m_AtlasIndex
private GlyphClassDefinitionType m_ClassDefinitionType
public UInt32 index
public GlyphMetrics metrics
public GlyphRect glyphRect
public float scale
public int atlasIndex
public GlyphClassDefinitionType classDefinitionType
public UInt32 get_index()
public void set_index(UInt32 value)
public GlyphMetrics get_metrics()
public void set_metrics(GlyphMetrics value)
public GlyphRect get_glyphRect()
public void set_glyphRect(GlyphRect value)
public float get_scale()
public void set_scale(float value)
public int get_atlasIndex()
public void set_atlasIndex(int value)
public GlyphClassDefinitionType get_classDefinitionType()
public void set_classDefinitionType(GlyphClassDefinitionType value)
public void .ctor(Glyph glyph)
internal void .ctor(GlyphMarshallingStruct glyphStruct)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex)
public bool Compare(Glyph other)
}
public UnityEngine.TextCore.GlyphClassDefinitionType : Enum {
public int value__
public GlyphClassDefinitionType Undefined
public GlyphClassDefinitionType Base
public GlyphClassDefinitionType Ligature
public GlyphClassDefinitionType Mark
public GlyphClassDefinitionType Component
}
public UnityEngine.TextCore.GlyphMetrics : ValueType {
private float m_Width
private float m_Height
private float m_HorizontalBearingX
private float m_HorizontalBearingY
private float m_HorizontalAdvance
public float width
public float height
public float horizontalBearingX
public float horizontalBearingY
public float horizontalAdvance
public float get_width()
public void set_width(float value)
public float get_height()
public void set_height(float value)
public float get_horizontalBearingX()
public void set_horizontalBearingX(float value)
public float get_horizontalBearingY()
public void set_horizontalBearingY(float value)
public float get_horizontalAdvance()
public void set_horizontalAdvance(float value)
public void .ctor(float width, float height, float bearingX, float bearingY, float advance)
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphMetrics other)
public bool op_Equality(GlyphMetrics lhs, GlyphMetrics rhs)
public bool op_Inequality(GlyphMetrics lhs, GlyphMetrics rhs)
}
public UnityEngine.TextCore.GlyphRect : ValueType {
private int m_X
private int m_Y
private int m_Width
private int m_Height
private GlyphRect s_ZeroGlyphRect
public int x
public int y
public int width
public int height
public GlyphRect zero
public int get_x()
public void set_x(int value)
public int get_y()
public void set_y(int value)
public int get_width()
public void set_width(int value)
public int get_height()
public void set_height(int value)
public GlyphRect get_zero()
public void .ctor(int x, int y, int width, int height)
public void .ctor(Rect rect)
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphRect other)
public bool op_Equality(GlyphRect lhs, GlyphRect rhs)
public bool op_Inequality(GlyphRect lhs, GlyphRect rhs)
}
internal UnityEngine.TextCore.LowLevel.AlternateSubstitutionRecord : ValueType {
private UInt32 m_TargetGlyphID
private UInt32[] m_SubstituteGlyphIDs
public UInt32 targetGlyphID
public UInt32[] substituteGlyphIDs
public UInt32 get_targetGlyphID()
public void set_targetGlyphID(UInt32 value)
public UInt32[] get_substituteGlyphIDs()
public void set_substituteGlyphIDs(UInt32[] value)
}
internal UnityEngine.TextCore.LowLevel.ChainingContextualSubstitutionRecord : ValueType {
private GlyphIDSequence[] m_BacktrackGlyphSequences
private GlyphIDSequence[] m_InputGlyphSequences
private GlyphIDSequence[] m_LookaheadGlyphSequences
private SequenceLookupRecord[] m_SequenceLookupRecords
public GlyphIDSequence[] backtrackGlyphSequences
public GlyphIDSequence[] inputGlyphSequences
public GlyphIDSequence[] lookaheadGlyphSequences
public SequenceLookupRecord[] sequenceLookupRecords
public GlyphIDSequence[] get_backtrackGlyphSequences()
public void set_backtrackGlyphSequences(GlyphIDSequence[] value)
public GlyphIDSequence[] get_inputGlyphSequences()
public void set_inputGlyphSequences(GlyphIDSequence[] value)
public GlyphIDSequence[] get_lookaheadGlyphSequences()
public void set_lookaheadGlyphSequences(GlyphIDSequence[] value)
public SequenceLookupRecord[] get_sequenceLookupRecords()
public void set_sequenceLookupRecords(SequenceLookupRecord[] value)
}
internal UnityEngine.TextCore.LowLevel.ContextualSubstitutionRecord : ValueType {
private GlyphIDSequence[] m_InputGlyphSequences
private SequenceLookupRecord[] m_SequenceLookupRecords
public GlyphIDSequence[] inputSequences
public SequenceLookupRecord[] sequenceLookupRecords
public GlyphIDSequence[] get_inputSequences()
public void set_inputSequences(GlyphIDSequence[] value)
public SequenceLookupRecord[] get_sequenceLookupRecords()
public void set_sequenceLookupRecords(SequenceLookupRecord[] value)
}
public UnityEngine.TextCore.LowLevel.FontEngine : object {
private Glyph[] s_Glyphs
private UInt32[] s_GlyphIndexes_MarshallingArray_A
private UInt32[] s_GlyphIndexes_MarshallingArray_B
private GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
private GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
private GlyphRect[] s_FreeGlyphRects
private GlyphRect[] s_UsedGlyphRects
private GlyphAdjustmentRecord[] s_SingleAdjustmentRecords_MarshallingArray
private SingleSubstitutionRecord[] s_SingleSubstitutionRecords_MarshallingArray
private MultipleSubstitutionRecord[] s_MultipleSubstitutionRecords_MarshallingArray
private AlternateSubstitutionRecord[] s_AlternateSubstitutionRecords_MarshallingArray
private LigatureSubstitutionRecord[] s_LigatureSubstitutionRecords_MarshallingArray
private ContextualSubstitutionRecord[] s_ContextualSubstitutionRecords_MarshallingArray
private ChainingContextualSubstitutionRecord[] s_ChainingContextualSubstitutionRecords_MarshallingArray
private GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
private MarkToBaseAdjustmentRecord[] s_MarkToBaseAdjustmentRecords_MarshallingArray
private MarkToMarkAdjustmentRecord[] s_MarkToMarkAdjustmentRecords_MarshallingArray
private Dictionary`2<UInt32, Glyph> s_GlyphLookupDictionary
internal bool isProcessingDone
internal float generationProgress
public FontEngineError InitializeFontEngine()
private int InitializeFontEngine_Internal()
public FontEngineError DestroyFontEngine()
private int DestroyFontEngine_Internal()
internal void SendCancellationRequest()
private void SendCancellationRequest_Internal()
internal bool get_isProcessingDone()
internal float get_generationProgress()
public FontEngineError LoadFontFace(string filePath)
private int LoadFontFace_Internal(string filePath)
public FontEngineError LoadFontFace(string filePath, int pointSize)
private int LoadFontFace_With_Size_Internal(string filePath, int pointSize)
public FontEngineError LoadFontFace(string filePath, int pointSize, int faceIndex)
private int LoadFontFace_With_Size_And_FaceIndex_Internal(string filePath, int pointSize, int faceIndex)
public FontEngineError LoadFontFace(Byte[] sourceFontFile)
private int LoadFontFace_FromSourceFontFile_Internal(Byte[] sourceFontFile)
public FontEngineError LoadFontFace(Byte[] sourceFontFile, int pointSize)
private int LoadFontFace_With_Size_FromSourceFontFile_Internal(Byte[] sourceFontFile, int pointSize)
public FontEngineError LoadFontFace(Byte[] sourceFontFile, int pointSize, int faceIndex)
private int LoadFontFace_With_Size_And_FaceIndex_FromSourceFontFile_Internal(Byte[] sourceFontFile, int pointSize, int faceIndex)
public FontEngineError LoadFontFace(Font font)
private int LoadFontFace_FromFont_Internal(Font font)
public FontEngineError LoadFontFace(Font font, int pointSize)
private int LoadFontFace_With_Size_FromFont_Internal(Font font, int pointSize)
public FontEngineError LoadFontFace(Font font, int pointSize, int faceIndex)
private int LoadFontFace_With_Size_and_FaceIndex_FromFont_Internal(Font font, int pointSize, int faceIndex)
public FontEngineError LoadFontFace(string familyName, string styleName)
private int LoadFontFace_by_FamilyName_and_StyleName_Internal(string familyName, string styleName)
public FontEngineError LoadFontFace(string familyName, string styleName, int pointSize)
private int LoadFontFace_With_Size_by_FamilyName_and_StyleName_Internal(string familyName, string styleName, int pointSize)
public FontEngineError UnloadFontFace()
private int UnloadFontFace_Internal()
public FontEngineError UnloadAllFontFaces()
private int UnloadAllFontFaces_Internal()
public String[] GetSystemFontNames()
private String[] GetSystemFontNames_Internal()
internal FontReference[] GetSystemFontReferences()
internal bool TryGetSystemFontReference(string familyName, string styleName, FontReference& fontRef)
private bool TryGetSystemFontReference_Internal(string familyName, string styleName, FontReference& fontRef)
public FontEngineError SetFaceSize(int pointSize)
private int SetFaceSize_Internal(int pointSize)
public FaceInfo GetFaceInfo()
private int GetFaceInfo_Internal(FaceInfo& faceInfo)
internal int GetFaceCount()
public String[] GetFontFaces()
private String[] GetFontFaces_Internal()
internal UInt32 GetVariantGlyphIndex(UInt32 unicode, UInt32 variantSelectorUnicode)
internal UInt32 GetGlyphIndex(UInt32 unicode)
public bool TryGetGlyphIndex(UInt32 unicode, UInt32& glyphIndex)
internal FontEngineError LoadGlyph(UInt32 unicode, GlyphLoadFlags flags)
private int LoadGlyph_Internal(UInt32 unicode, GlyphLoadFlags loadFlags)
public bool TryGetGlyphWithUnicodeValue(UInt32 unicode, GlyphLoadFlags flags, Glyph& glyph)
private bool TryGetGlyphWithUnicodeValue_Internal(UInt32 unicode, GlyphLoadFlags loadFlags, GlyphMarshallingStruct& glyphStruct)
public bool TryGetGlyphWithIndexValue(UInt32 glyphIndex, GlyphLoadFlags flags, Glyph& glyph)
private bool TryGetGlyphWithIndexValue_Internal(UInt32 glyphIndex, GlyphLoadFlags loadFlags, GlyphMarshallingStruct& glyphStruct)
internal bool TryPackGlyphInAtlas(Glyph glyph, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects)
private bool TryPackGlyphInAtlas_Internal(GlyphMarshallingStruct& glyph, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount)
internal bool TryPackGlyphsInAtlas(List`1<Glyph> glyphsToAdd, List`1<Glyph> glyphsAdded, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects)
private bool TryPackGlyphsInAtlas_Internal(GlyphMarshallingStruct[] glyphsToAdd, Int32& glyphsToAddCount, GlyphMarshallingStruct[] glyphsAdded, Int32& glyphsAddedCount, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount)
internal FontEngineError RenderGlyphToTexture(Glyph glyph, int padding, GlyphRenderMode renderMode, Texture2D texture)
private int RenderGlyphToTexture_Internal(GlyphMarshallingStruct glyphStruct, int padding, GlyphRenderMode renderMode, Texture2D texture)
internal FontEngineError RenderGlyphsToTexture(List`1<Glyph> glyphs, int padding, GlyphRenderMode renderMode, Texture2D texture)
private int RenderGlyphsToTexture_Internal(GlyphMarshallingStruct[] glyphs, int glyphCount, int padding, GlyphRenderMode renderMode, Texture2D texture)
internal FontEngineError RenderGlyphsToTexture(List`1<Glyph> glyphs, int padding, GlyphRenderMode renderMode, Byte[] texBuffer, int texWidth, int texHeight)
private int RenderGlyphsToTextureBuffer_Internal(GlyphMarshallingStruct[] glyphs, int glyphCount, int padding, GlyphRenderMode renderMode, Byte[] texBuffer, int texWidth, int texHeight)
internal FontEngineError RenderGlyphsToSharedTexture(List`1<Glyph> glyphs, int padding, GlyphRenderMode renderMode)
private int RenderGlyphsToSharedTexture_Internal(GlyphMarshallingStruct[] glyphs, int glyphCount, int padding, GlyphRenderMode renderMode)
internal void SetSharedTexture(Texture2D texture)
internal void ReleaseSharedTexture()
internal void SetTextureUploadMode(bool shouldUploadImmediately)
internal bool TryAddGlyphToTexture(UInt32 glyphIndex, int padding, GlyphPackingMode packingMode, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects, GlyphRenderMode renderMode, Texture2D texture, Glyph& glyph)
private bool TryAddGlyphToTexture_Internal(UInt32 glyphIndex, int padding, GlyphPackingMode packingMode, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount, GlyphRenderMode renderMode, Texture2D texture, GlyphMarshallingStruct& glyph)
internal bool TryAddGlyphsToTexture(List`1<Glyph> glyphsToAdd, List`1<Glyph> glyphsAdded, int padding, GlyphPackingMode packingMode, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects, GlyphRenderMode renderMode, Texture2D texture)
private bool TryAddGlyphsToTexture_Internal_MultiThread(GlyphMarshallingStruct[] glyphsToAdd, Int32& glyphsToAddCount, GlyphMarshallingStruct[] glyphsAdded, Int32& glyphsAddedCount, int padding, GlyphPackingMode packingMode, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount, GlyphRenderMode renderMode, Texture2D texture)
internal bool TryAddGlyphsToTexture(List`1<UInt32> glyphIndexes, int padding, GlyphPackingMode packingMode, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects, GlyphRenderMode renderMode, Texture2D texture, Glyph[]& glyphs)
private bool TryAddGlyphsToTexture_Internal(UInt32[] glyphIndex, int padding, GlyphPackingMode packingMode, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount, GlyphRenderMode renderMode, Texture2D texture, GlyphMarshallingStruct[] glyphs, Int32& glyphCount)
internal OTL_Table GetOpenTypeLayoutTable(OTL_TableType type)
internal OTL_Script[] GetOpenTypeLayoutScripts()
internal OTL_Feature[] GetOpenTypeLayoutFeatures()
internal OTL_Lookup[] GetOpenTypeLayoutLookups()
internal OpenTypeFeature[] GetOpenTypeFontFeatureList()
internal SingleSubstitutionRecord[] GetAllSingleSubstitutionRecords()
internal SingleSubstitutionRecord[] GetSingleSubstitutionRecords(int lookupIndex, UInt32 glyphIndex)
internal SingleSubstitutionRecord[] GetSingleSubstitutionRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private SingleSubstitutionRecord[] GetSingleSubstitutionRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateSingleSubstitutionRecordMarshallingArray_from_GlyphIndexes(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetSingleSubstitutionRecordsFromMarshallingArray(SingleSubstitutionRecord[] singleSubstitutionRecords)
internal MultipleSubstitutionRecord[] GetAllMultipleSubstitutionRecords()
internal MultipleSubstitutionRecord[] GetMultipleSubstitutionRecords(int lookupIndex, UInt32 glyphIndex)
internal MultipleSubstitutionRecord[] GetMultipleSubstitutionRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private MultipleSubstitutionRecord[] GetMultipleSubstitutionRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateMultipleSubstitutionRecordMarshallingArray_from_GlyphIndexes(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetMultipleSubstitutionRecordsFromMarshallingArray(MultipleSubstitutionRecord[] substitutionRecords)
internal AlternateSubstitutionRecord[] GetAllAlternateSubstitutionRecords()
internal AlternateSubstitutionRecord[] GetAlternateSubstitutionRecords(int lookupIndex, UInt32 glyphIndex)
internal AlternateSubstitutionRecord[] GetAlternateSubstitutionRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private AlternateSubstitutionRecord[] GetAlternateSubstitutionRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateAlternateSubstitutionRecordMarshallingArray_from_GlyphIndexes(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetAlternateSubstitutionRecordsFromMarshallingArray(AlternateSubstitutionRecord[] singleSubstitutionRecords)
internal LigatureSubstitutionRecord[] GetAllLigatureSubstitutionRecords()
internal LigatureSubstitutionRecord[] GetLigatureSubstitutionRecords(UInt32 glyphIndex)
internal LigatureSubstitutionRecord[] GetLigatureSubstitutionRecords(List`1<UInt32> glyphIndexes)
internal LigatureSubstitutionRecord[] GetLigatureSubstitutionRecords(int lookupIndex, UInt32 glyphIndex)
internal LigatureSubstitutionRecord[] GetLigatureSubstitutionRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private LigatureSubstitutionRecord[] GetLigatureSubstitutionRecords(UInt32[] glyphIndexes)
private LigatureSubstitutionRecord[] GetLigatureSubstitutionRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateLigatureSubstitutionRecordMarshallingArray(UInt32[] glyphIndexes, Int32& recordCount)
private int PopulateLigatureSubstitutionRecordMarshallingArray_for_LookupIndex(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetLigatureSubstitutionRecordsFromMarshallingArray(LigatureSubstitutionRecord[] ligatureSubstitutionRecords)
internal ContextualSubstitutionRecord[] GetAllContextualSubstitutionRecords()
internal ContextualSubstitutionRecord[] GetContextualSubstitutionRecords(int lookupIndex, UInt32 glyphIndex)
internal ContextualSubstitutionRecord[] GetContextualSubstitutionRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private ContextualSubstitutionRecord[] GetContextualSubstitutionRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetContextualSubstitutionRecordsFromMarshallingArray(ContextualSubstitutionRecord[] substitutionRecords)
internal ChainingContextualSubstitutionRecord[] GetAllChainingContextualSubstitutionRecords()
internal ChainingContextualSubstitutionRecord[] GetChainingContextualSubstitutionRecords(int lookupIndex, UInt32 glyphIndex)
internal ChainingContextualSubstitutionRecord[] GetChainingContextualSubstitutionRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private ChainingContextualSubstitutionRecord[] GetChainingContextualSubstitutionRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateChainingContextualSubstitutionRecordMarshallingArray_from_GlyphIndexes(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetChainingContextualSubstitutionRecordsFromMarshallingArray(ChainingContextualSubstitutionRecord[] substitutionRecords)
internal GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentTable(UInt32[] glyphIndexes)
internal GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(List`1<UInt32> glyphIndexes, Int32& recordCount)
private int PopulatePairAdjustmentRecordMarshallingArray_from_KernTable(UInt32[] glyphIndexes, Int32& recordCount)
internal GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(UInt32 glyphIndex, Int32& recordCount)
private int PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndex(UInt32 glyphIndex, Int32& recordCount)
internal GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentRecords(List`1<UInt32> newGlyphIndexes, List`1<UInt32> allGlyphIndexes)
private int PopulatePairAdjustmentRecordMarshallingArray_for_NewlyAddedGlyphIndexes(UInt32[] newGlyphIndexes, UInt32[] allGlyphIndexes, Int32& recordCount)
internal GlyphPairAdjustmentRecord GetGlyphPairAdjustmentRecord(UInt32 firstGlyphIndex, UInt32 secondGlyphIndex)
internal GlyphAdjustmentRecord[] GetSingleAdjustmentRecords(int lookupIndex, UInt32 glyphIndex)
internal GlyphAdjustmentRecord[] GetSingleAdjustmentRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private GlyphAdjustmentRecord[] GetSingleAdjustmentRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateSingleAdjustmentRecordMarshallingArray_from_GlyphIndexes(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetSingleAdjustmentRecordsFromMarshallingArray(GlyphAdjustmentRecord[] singleSubstitutionRecords)
internal GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(UInt32 glyphIndex)
internal GlyphPairAdjustmentRecord GetPairAdjustmentRecord(UInt32 firstGlyphIndex, UInt32 secondGlyphIndex)
internal GlyphPairAdjustmentRecord[] GetAllPairAdjustmentRecords()
internal GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(List`1<UInt32> glyphIndexes)
internal GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(int lookupIndex, UInt32 glyphIndex)
internal GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(UInt32[] glyphIndexes)
private GlyphPairAdjustmentRecord[] GetPairAdjustmentRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulatePairAdjustmentRecordMarshallingArray(UInt32[] glyphIndexes, Int32& recordCount)
private int PopulatePairAdjustmentRecordMarshallingArray_for_LookupIndex(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetPairAdjustmentRecordsFromMarshallingArray(GlyphPairAdjustmentRecord[] glyphPairAdjustmentRecords)
internal MarkToBaseAdjustmentRecord[] GetAllMarkToBaseAdjustmentRecords()
internal MarkToBaseAdjustmentRecord[] GetMarkToBaseAdjustmentRecords(UInt32 baseGlyphIndex)
internal MarkToBaseAdjustmentRecord GetMarkToBaseAdjustmentRecord(UInt32 baseGlyphIndex, UInt32 markGlyphIndex)
internal MarkToBaseAdjustmentRecord[] GetMarkToBaseAdjustmentRecords(List`1<UInt32> glyphIndexes)
internal MarkToBaseAdjustmentRecord[] GetMarkToBaseAdjustmentRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private MarkToBaseAdjustmentRecord[] GetMarkToBaseAdjustmentRecords(UInt32[] glyphIndexes)
private MarkToBaseAdjustmentRecord[] GetMarkToBaseAdjustmentRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateMarkToBaseAdjustmentRecordMarshallingArray(UInt32[] glyphIndexes, Int32& recordCount)
private int PopulateMarkToBaseAdjustmentRecordMarshallingArray_for_LookupIndex(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetMarkToBaseAdjustmentRecordsFromMarshallingArray(MarkToBaseAdjustmentRecord[] adjustmentRecords)
internal MarkToMarkAdjustmentRecord[] GetAllMarkToMarkAdjustmentRecords()
internal MarkToMarkAdjustmentRecord[] GetMarkToMarkAdjustmentRecords(UInt32 baseMarkGlyphIndex)
internal MarkToMarkAdjustmentRecord GetMarkToMarkAdjustmentRecord(UInt32 firstGlyphIndex, UInt32 secondGlyphIndex)
internal MarkToMarkAdjustmentRecord[] GetMarkToMarkAdjustmentRecords(List`1<UInt32> glyphIndexes)
internal MarkToMarkAdjustmentRecord[] GetMarkToMarkAdjustmentRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
private MarkToMarkAdjustmentRecord[] GetMarkToMarkAdjustmentRecords(UInt32[] glyphIndexes)
private MarkToMarkAdjustmentRecord[] GetMarkToMarkAdjustmentRecords(int lookupIndex, UInt32[] glyphIndexes)
private int PopulateMarkToMarkAdjustmentRecordMarshallingArray(UInt32[] glyphIndexes, Int32& recordCount)
private int PopulateMarkToMarkAdjustmentRecordMarshallingArray_for_LookupIndex(UInt32[] glyphIndexes, int lookupIndex, Int32& recordCount)
private int GetMarkToMarkAdjustmentRecordsFromMarshallingArray(MarkToMarkAdjustmentRecord[] adjustmentRecords)
private void GlyphIndexToMarshallingArray(UInt32 glyphIndex, UInt32[]& dstArray)
private void GenericListToMarshallingArray(List`1& srcList, T[]& dstArray)
private void SetMarshallingArraySize(T[]& marshallingArray, int recordCount)
internal void ResetAtlasTexture(Texture2D texture)
internal void RenderBufferToTexture(Texture2D srcTexture, int padding, GlyphRenderMode renderMode, Texture2D dstTexture)
private int RenderGlyphToTexture_Internal_Injected(GlyphMarshallingStruct& glyphStruct, int padding, GlyphRenderMode renderMode, Texture2D texture)
private void GetOpenTypeLayoutTable_Injected(OTL_TableType type, OTL_Table& ret)
private void GetGlyphPairAdjustmentRecord_Injected(UInt32 firstGlyphIndex, UInt32 secondGlyphIndex, GlyphPairAdjustmentRecord& ret)
private void GetPairAdjustmentRecord_Injected(UInt32 firstGlyphIndex, UInt32 secondGlyphIndex, GlyphPairAdjustmentRecord& ret)
private void GetMarkToBaseAdjustmentRecord_Injected(UInt32 baseGlyphIndex, UInt32 markGlyphIndex, MarkToBaseAdjustmentRecord& ret)
private void GetMarkToMarkAdjustmentRecord_Injected(UInt32 firstGlyphIndex, UInt32 secondGlyphIndex, MarkToMarkAdjustmentRecord& ret)
}
public UnityEngine.TextCore.LowLevel.FontEngineError : Enum {
public int value__
public FontEngineError Success
public FontEngineError Invalid_File_Path
public FontEngineError Invalid_File_Format
public FontEngineError Invalid_File_Structure
public FontEngineError Invalid_File
public FontEngineError Invalid_Table
public FontEngineError Invalid_Glyph_Index
public FontEngineError Invalid_Character_Code
public FontEngineError Invalid_Pixel_Size
public FontEngineError Invalid_Library
public FontEngineError Invalid_Face
public FontEngineError Invalid_Library_or_Face
public FontEngineError Atlas_Generation_Cancelled
public FontEngineError Invalid_SharedTextureData
public FontEngineError OpenTypeLayoutLookup_Mismatch
}
internal UnityEngine.TextCore.LowLevel.FontEngineUtilities : ValueType {
internal bool Approximately(float a, float b)
internal int MaxValue(int a, int b, int c)
}
public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags : Enum {
public int value__
public FontFeatureLookupFlags None
public FontFeatureLookupFlags IgnoreLigatures
public FontFeatureLookupFlags IgnoreSpacingAdjustments
}
internal UnityEngine.TextCore.LowLevel.FontReference : ValueType {
public string familyName
public string styleName
public int faceIndex
public string filePath
}
public UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord : ValueType {
private UInt32 m_GlyphIndex
private GlyphValueRecord m_GlyphValueRecord
public UInt32 glyphIndex
public GlyphValueRecord glyphValueRecord
public UInt32 get_glyphIndex()
public void set_glyphIndex(UInt32 value)
public GlyphValueRecord get_glyphValueRecord()
public void set_glyphValueRecord(GlyphValueRecord value)
public void .ctor(UInt32 glyphIndex, GlyphValueRecord glyphValueRecord)
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphAdjustmentRecord other)
public bool op_Equality(GlyphAdjustmentRecord lhs, GlyphAdjustmentRecord rhs)
public bool op_Inequality(GlyphAdjustmentRecord lhs, GlyphAdjustmentRecord rhs)
}
internal UnityEngine.TextCore.LowLevel.GlyphAnchorPoint : ValueType {
private float m_XCoordinate
private float m_YCoordinate
public float xCoordinate
public float yCoordinate
public float get_xCoordinate()
public void set_xCoordinate(float value)
public float get_yCoordinate()
public void set_yCoordinate(float value)
}
internal UnityEngine.TextCore.LowLevel.GlyphIDSequence : ValueType {
private UInt32[] m_GlyphIDs
public UInt32[] glyphIDs
public UInt32[] get_glyphIDs()
public void set_glyphIDs(UInt32[] value)
}
public UnityEngine.TextCore.LowLevel.GlyphLoadFlags : Enum {
public int value__
public GlyphLoadFlags LOAD_DEFAULT
public GlyphLoadFlags LOAD_NO_SCALE
public GlyphLoadFlags LOAD_NO_HINTING
public GlyphLoadFlags LOAD_RENDER
public GlyphLoadFlags LOAD_NO_BITMAP
public GlyphLoadFlags LOAD_FORCE_AUTOHINT
public GlyphLoadFlags LOAD_MONOCHROME
public GlyphLoadFlags LOAD_NO_AUTOHINT
public GlyphLoadFlags LOAD_COLOR
public GlyphLoadFlags LOAD_COMPUTE_METRICS
public GlyphLoadFlags LOAD_BITMAP_METRICS_ONLY
}
internal UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct : ValueType {
public UInt32 index
public GlyphMetrics metrics
public GlyphRect glyphRect
public float scale
public int atlasIndex
public GlyphClassDefinitionType classDefinitionType
public void .ctor(Glyph glyph)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex, GlyphClassDefinitionType classDefinitionType)
}
public UnityEngine.TextCore.LowLevel.GlyphPackingMode : Enum {
public int value__
public GlyphPackingMode BestShortSideFit
public GlyphPackingMode BestLongSideFit
public GlyphPackingMode BestAreaFit
public GlyphPackingMode BottomLeftRule
public GlyphPackingMode ContactPointRule
}
public UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord : ValueType {
private GlyphAdjustmentRecord m_FirstAdjustmentRecord
private GlyphAdjustmentRecord m_SecondAdjustmentRecord
private FontFeatureLookupFlags m_FeatureLookupFlags
public GlyphAdjustmentRecord firstAdjustmentRecord
public GlyphAdjustmentRecord secondAdjustmentRecord
public FontFeatureLookupFlags featureLookupFlags
public GlyphAdjustmentRecord get_firstAdjustmentRecord()
public void set_firstAdjustmentRecord(GlyphAdjustmentRecord value)
public GlyphAdjustmentRecord get_secondAdjustmentRecord()
public void set_secondAdjustmentRecord(GlyphAdjustmentRecord value)
public FontFeatureLookupFlags get_featureLookupFlags()
public void set_featureLookupFlags(FontFeatureLookupFlags value)
public void .ctor(GlyphAdjustmentRecord firstAdjustmentRecord, GlyphAdjustmentRecord secondAdjustmentRecord)
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphPairAdjustmentRecord other)
public bool op_Equality(GlyphPairAdjustmentRecord lhs, GlyphPairAdjustmentRecord rhs)
public bool op_Inequality(GlyphPairAdjustmentRecord lhs, GlyphPairAdjustmentRecord rhs)
}
internal UnityEngine.TextCore.LowLevel.GlyphRasterModes : Enum {
public int value__
public GlyphRasterModes RASTER_MODE_8BIT
public GlyphRasterModes RASTER_MODE_MONO
public GlyphRasterModes RASTER_MODE_NO_HINTING
public GlyphRasterModes RASTER_MODE_HINTED
public GlyphRasterModes RASTER_MODE_BITMAP
public GlyphRasterModes RASTER_MODE_SDF
public GlyphRasterModes RASTER_MODE_SDFAA
public GlyphRasterModes RASTER_MODE_MSDF
public GlyphRasterModes RASTER_MODE_MSDFA
public GlyphRasterModes RASTER_MODE_1X
public GlyphRasterModes RASTER_MODE_8X
public GlyphRasterModes RASTER_MODE_16X
public GlyphRasterModes RASTER_MODE_32X
public GlyphRasterModes RASTER_MODE_COLOR
}
public UnityEngine.TextCore.LowLevel.GlyphRenderMode : Enum {
public int value__
public GlyphRenderMode SMOOTH_HINTED
public GlyphRenderMode SMOOTH
public GlyphRenderMode COLOR_HINTED
public GlyphRenderMode COLOR
public GlyphRenderMode RASTER_HINTED
public GlyphRenderMode RASTER
public GlyphRenderMode SDF
public GlyphRenderMode SDF8
public GlyphRenderMode SDF16
public GlyphRenderMode SDF32
public GlyphRenderMode SDFAA_HINTED
public GlyphRenderMode SDFAA
}
public UnityEngine.TextCore.LowLevel.GlyphValueRecord : ValueType {
private float m_XPlacement
private float m_YPlacement
private float m_XAdvance
private float m_YAdvance
public float xPlacement
public float yPlacement
public float xAdvance
public float yAdvance
public float get_xPlacement()
public void set_xPlacement(float value)
public float get_yPlacement()
public void set_yPlacement(float value)
public float get_xAdvance()
public void set_xAdvance(float value)
public float get_yAdvance()
public void set_yAdvance(float value)
public void .ctor(float xPlacement, float yPlacement, float xAdvance, float yAdvance)
public GlyphValueRecord op_Addition(GlyphValueRecord a, GlyphValueRecord b)
public GlyphValueRecord op_Multiply(GlyphValueRecord a, float emScale)
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphValueRecord other)
public bool op_Equality(GlyphValueRecord lhs, GlyphValueRecord rhs)
public bool op_Inequality(GlyphValueRecord lhs, GlyphValueRecord rhs)
}
internal UnityEngine.TextCore.LowLevel.LigatureSubstitutionRecord : ValueType {
private UInt32[] m_ComponentGlyphIDs
private UInt32 m_LigatureGlyphID
public UInt32[] componentGlyphIDs
public UInt32 ligatureGlyphID
public UInt32[] get_componentGlyphIDs()
public void set_componentGlyphIDs(UInt32[] value)
public UInt32 get_ligatureGlyphID()
public void set_ligatureGlyphID(UInt32 value)
}
internal UnityEngine.TextCore.LowLevel.MarkPositionAdjustment : ValueType {
private float m_XPositionAdjustment
private float m_YPositionAdjustment
public float xPositionAdjustment
public float yPositionAdjustment
public float get_xPositionAdjustment()
public void set_xPositionAdjustment(float value)
public float get_yPositionAdjustment()
public void set_yPositionAdjustment(float value)
public void .ctor(float x, float y)
}
internal UnityEngine.TextCore.LowLevel.MarkToBaseAdjustmentRecord : ValueType {
private UInt32 m_BaseGlyphID
private GlyphAnchorPoint m_BaseGlyphAnchorPoint
private UInt32 m_MarkGlyphID
private MarkPositionAdjustment m_MarkPositionAdjustment
public UInt32 baseGlyphID
public GlyphAnchorPoint baseGlyphAnchorPoint
public UInt32 markGlyphID
public MarkPositionAdjustment markPositionAdjustment
public UInt32 get_baseGlyphID()
public void set_baseGlyphID(UInt32 value)
public GlyphAnchorPoint get_baseGlyphAnchorPoint()
public void set_baseGlyphAnchorPoint(GlyphAnchorPoint value)
public UInt32 get_markGlyphID()
public void set_markGlyphID(UInt32 value)
public MarkPositionAdjustment get_markPositionAdjustment()
public void set_markPositionAdjustment(MarkPositionAdjustment value)
}
internal UnityEngine.TextCore.LowLevel.MarkToMarkAdjustmentRecord : ValueType {
private UInt32 m_BaseMarkGlyphID
private GlyphAnchorPoint m_BaseMarkGlyphAnchorPoint
private UInt32 m_CombiningMarkGlyphID
private MarkPositionAdjustment m_CombiningMarkPositionAdjustment
public UInt32 baseMarkGlyphID
public GlyphAnchorPoint baseMarkGlyphAnchorPoint
public UInt32 combiningMarkGlyphID
public MarkPositionAdjustment combiningMarkPositionAdjustment
public UInt32 get_baseMarkGlyphID()
public void set_baseMarkGlyphID(UInt32 value)
public GlyphAnchorPoint get_baseMarkGlyphAnchorPoint()
public void set_baseMarkGlyphAnchorPoint(GlyphAnchorPoint value)
public UInt32 get_combiningMarkGlyphID()
public void set_combiningMarkGlyphID(UInt32 value)
public MarkPositionAdjustment get_combiningMarkPositionAdjustment()
public void set_combiningMarkPositionAdjustment(MarkPositionAdjustment value)
}
internal UnityEngine.TextCore.LowLevel.MultipleSubstitutionRecord : ValueType {
private UInt32 m_TargetGlyphID
private UInt32[] m_SubstituteGlyphIDs
public UInt32 targetGlyphID
public UInt32[] substituteGlyphIDs
public UInt32 get_targetGlyphID()
public void set_targetGlyphID(UInt32 value)
public UInt32[] get_substituteGlyphIDs()
public void set_substituteGlyphIDs(UInt32[] value)
}
internal UnityEngine.TextCore.LowLevel.OpenTypeLayoutFeature : ValueType {
public string tag
public UInt32[] lookupIndexes
}
internal UnityEngine.TextCore.LowLevel.OpenTypeLayoutLanguage : ValueType {
public string tag
public UInt32[] featureIndexes
}
internal UnityEngine.TextCore.LowLevel.OpenTypeLayoutLookup : object {
public UInt32 lookupType
public UInt32 lookupFlag
public UInt32 markFilteringSet
public void InitializeLookupDictionary()
public void UpdateRecords(int lookupIndex, UInt32 glyphIndex)
public void UpdateRecords(int lookupIndex, UInt32 glyphIndex, float emScale)
public void UpdateRecords(int lookupIndex, List`1<UInt32> glyphIndexes)
public void UpdateRecords(int lookupIndex, List`1<UInt32> glyphIndexes, float emScale)
public void ClearRecords()
}
internal UnityEngine.TextCore.LowLevel.OpenTypeLayoutScript : ValueType {
public string tag
public List`1<OpenTypeLayoutLanguage> languages
}
internal UnityEngine.TextCore.LowLevel.OpenTypeLayoutTable : ValueType {
public List`1<OpenTypeLayoutScript> scripts
public List`1<OpenTypeLayoutFeature> features
public List`1<OpenTypeLayoutLookup> lookups
}
internal UnityEngine.TextCore.LowLevel.OTL_Feature : ValueType {
public string tag
public UInt32[] lookupIndexes
}
internal UnityEngine.TextCore.LowLevel.OTL_Language : ValueType {
public string tag
public UInt32[] featureIndexes
}
internal UnityEngine.TextCore.LowLevel.OTL_Lookup : ValueType {
public UInt32 lookupType
public UInt32 lookupFlag
public UInt32 markFilteringSet
}
internal UnityEngine.TextCore.LowLevel.OTL_LookupType : Enum {
public int value__
public OTL_LookupType Single_Substitution
public OTL_LookupType Multiple_Substitution
public OTL_LookupType Alternate_Substitution
public OTL_LookupType Ligature_Substitution
public OTL_LookupType Contextual_Substitution
public OTL_LookupType Chaining_Contextual_Substitution
public OTL_LookupType Extension_Substitution
public OTL_LookupType Reverse_Chaining_Contextual_Single_Substitution
public OTL_LookupType Single_Adjustment
public OTL_LookupType Pair_Adjustment
public OTL_LookupType Cursive_Attachment
public OTL_LookupType Mark_to_Base_Attachment
public OTL_LookupType Mark_to_Ligature_Attachment
public OTL_LookupType Mark_to_Mark_Attachment
public OTL_LookupType Contextual_Positioning
public OTL_LookupType Chaining_Contextual_Positioning
public OTL_LookupType Extension_Positioning
}
internal UnityEngine.TextCore.LowLevel.OTL_Script : ValueType {
public string tag
public OTL_Language[] languages
}
internal UnityEngine.TextCore.LowLevel.OTL_Table : ValueType {
public OTL_Script[] scripts
public OTL_Feature[] features
public OTL_Lookup[] lookups
}
internal UnityEngine.TextCore.LowLevel.OTL_TableType : Enum {
public int value__
public OTL_TableType BASE
public OTL_TableType GDEF
public OTL_TableType GPOS
public OTL_TableType GSUB
public OTL_TableType JSTF
public OTL_TableType MATH
}
internal UnityEngine.TextCore.LowLevel.SequenceLookupRecord : ValueType {
private UInt32 m_GlyphSequenceIndex
private UInt32 m_LookupListIndex
public UInt32 glyphSequenceIndex
public UInt32 lookupListIndex
public UInt32 get_glyphSequenceIndex()
public void set_glyphSequenceIndex(UInt32 value)
public UInt32 get_lookupListIndex()
public void set_lookupListIndex(UInt32 value)
}
internal UnityEngine.TextCore.LowLevel.SingleSubstitutionRecord : ValueType {
private UInt32 m_TargetGlyphID
private UInt32 m_SubstituteGlyphID
public UInt32 targetGlyphID
public UInt32 substituteGlyphID
public UInt32 get_targetGlyphID()
public void set_targetGlyphID(UInt32 value)
public UInt32 get_substituteGlyphID()
public void set_substituteGlyphID(UInt32 value)
}
