[NativeHeaderAttribute("External/unitytls/builds/CSharp/BindingsUnity/TLSAgent.gen.bindings.h")]
internal static class Unity.TLS.LowLevel.Binding : object {
    
public static int UNITYTLS_SUCCESS;
    
public static int UNITYTLS_INVALID_ARGUMENT;
    
public static int UNITYTLS_INVALID_FORMAT;
    
public static int UNITYTLS_INVALID_PASSWORD;
    
public static int UNITYTLS_INVALID_STATE;
    
public static int UNITYTLS_BUFFER_OVERFLOW;
    
public static int UNITYTLS_OUT_OF_MEMORY;
    
public static int UNITYTLS_INTERNAL_ERROR;
    
public static int UNITYTLS_NOT_SUPPORTED;
    
public static int UNITYTLS_ENTROPY_SOURCE_FAILED;
    
public static int UNITYTLS_STREAM_CLOSED;
    
public static int UNITYTLS_DER_PARSE_ERROR;
    
public static int UNITYTLS_KEY_PARSE_ERROR;
    
public static int UNITYTLS_SSL_ERROR;
    
public static int UNITYTLS_USER_CUSTOM_ERROR_START;
    
public static int UNITYTLS_USER_WOULD_BLOCK;
    
public static int UNITYTLS_USER_WOULD_BLOCK_READ;
    
public static int UNITYTLS_USER_WOULD_BLOCK_WRITE;
    
public static int UNITYTLS_USER_READ_FAILED;
    
public static int UNITYTLS_USER_WRITE_FAILED;
    
public static int UNITYTLS_USER_UNKNOWN_ERROR;
    
public static int UNITYTLS_SSL_NEEDS_VERIFY;
    
public static int UNITYTLS_HANDSHAKE_STEP;
    
public static int UNITYTLS_USER_CUSTOM_ERROR_END;
    
public static int UNITYTLS_LOGLEVEL_MIN;
    
public static int UNITYTLS_LOGLEVEL_FATAL;
    
public static int UNITYTLS_LOGLEVEL_ERROR;
    
public static int UNITYTLS_LOGLEVEL_WARN;
    
public static int UNITYTLS_LOGLEVEL_INFO;
    
public static int UNITYTLS_LOGLEVEL_DEBUG;
    
public static int UNITYTLS_LOGLEVEL_TRACE;
    
public static int UNITYTLS_LOGLEVEL_MAX;
    
public static int UNITYTLS_SSL_HANDSHAKE_HELLO_REQUEST;
    
public static int UNITYTLS_SSL_HANDSHAKE_CLIENT_HELLO;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_HELLO;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_CERTIFICATE;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_KEY_EXCHANGE;
    
public static int UNITYTLS_SSL_HANDSHAKE_CERTIFICATE_REQUEST;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_HELLO_DONE;
    
public static int UNITYTLS_SSL_HANDSHAKE_CLIENT_CERTIFICATE;
    
public static int UNITYTLS_SSL_HANDSHAKE_CLIENT_KEY_EXCHANGE;
    
public static int UNITYTLS_SSL_HANDSHAKE_CERTIFICATE_VERIFY;
    
public static int UNITYTLS_SSL_HANDSHAKE_CLIENT_CHANGE_CIPHER_SPEC;
    
public static int UNITYTLS_SSL_HANDSHAKE_CLIENT_FINISHED;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_CHANGE_CIPHER_SPEC;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_FINISHED;
    
public static int UNITYTLS_SSL_HANDSHAKE_FLUSH_BUFFERS;
    
public static int UNITYTLS_SSL_HANDSHAKE_WRAPUP;
    
public static int UNITYTLS_SSL_HANDSHAKE_OVER;
    
public static int UNITYTLS_SSL_HANDSHAKE_SERVER_NEW_SESSION_TICKET;
    
public static int UNITYTLS_SSL_HANDSHAKE_HELLO_VERIFY_REQUIRED;
    
public static int UNITYTLS_SSL_HANDSHAKE_COUNT;
    
public static int UNITYTLS_SSL_HANDSHAKE_BEGIN;
    
public static int UNITYTLS_SSL_HANDSHAKE_DONE;
    
public static int UNITYTLS_SSL_HANDSHAKE_HANDSHAKE_FLUSH_BUFFERS;
    
public static int UNITYTLS_SSL_HANDSHAKE_HANDSHAKE_WRAPUP;
    
public static int UNITYTLS_SSL_HANDSHAKE_HANDSHAKE_OVER;
    
public static int UnityTLSClientAuth_None;
    
public static int UnityTLSClientAuth_Optional;
    
public static int UnityTLSClientAuth_Required;
    
public static int UnityTLSRole_None;
    
public static int UnityTLSRole_Server;
    
public static int UnityTLSRole_Client;
    
public static int UnityTLSTransportProtocol_Stream;
    
public static int UnityTLSTransportProtocol_Datagram;
    
public static int UnityTLSClientState_None;
    
public static int UnityTLSClientState_Init;
    
public static int UnityTLSClientState_Handshake;
    
public static int UnityTLSClientState_Messaging;
    
public static int UnityTLSClientState_Fail;
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_send_data(unitytls_client* clientInstance, Byte* data, UIntPtr dataLen);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_read_data(unitytls_client* clientInstance, Byte* buffer, UIntPtr bufferLen, UIntPtr* bytesRead);
    [FreeFunctionAttribute]
public static void unitytls_client_add_ciphersuite(unitytls_client* clientInstance, UInt32 suite);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_get_ciphersuite(unitytls_client* clientInstance, int ndx);
    [FreeFunctionAttribute]
public static int unitytls_client_get_ciphersuite_cnt(unitytls_client* clientInstance);
    [FreeFunctionAttribute]
public static void unitytls_client_init_config(unitytls_client_config* config);
    [FreeFunctionAttribute]
public static unitytls_client* unitytls_client_create(UInt32 role, unitytls_client_config* config);
    [FreeFunctionAttribute]
public static void unitytls_client_destroy(unitytls_client* clientInstance);
    [FreeFunctionAttribute]
public static int unitytls_client_init(unitytls_client* clientInstance);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_handshake(unitytls_client* clientInstance);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_set_cookie_info(unitytls_client* clientInstance, Byte* peerIdDataPtr, int peerIdDataLen);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_get_handshake_state(unitytls_client* clientInstance);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_get_errorsState(unitytls_client* clientInstance, UInt64* reserved);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_get_state(unitytls_client* clientInstance);
    [FreeFunctionAttribute]
public static UInt32 unitytls_client_get_role(unitytls_client* clientInstance);
}
internal static class Unity.TLS.UnityTLSNativeLibrary : object {
}
