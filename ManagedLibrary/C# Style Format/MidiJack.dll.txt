public MidiJack.MidiChannel : Enum {
public int value__
public MidiChannel Ch1
public MidiChannel Ch2
public MidiChannel Ch3
public MidiChannel Ch4
public MidiChannel Ch5
public MidiChannel Ch6
public MidiChannel Ch7
public MidiChannel Ch8
public MidiChannel Ch9
public MidiChannel Ch10
public MidiChannel Ch11
public MidiChannel Ch12
public MidiChannel Ch13
public MidiChannel Ch14
public MidiChannel Ch15
public MidiChannel Ch16
public MidiChannel All
}
public MidiJack.MidiDriver : object {
private ChannelState[] _channelArray
private int _lastFrame
private bool enabled
private NoteOnDelegate <noteOnDelegate>k__BackingField
private NoteOffDelegate <noteOffDelegate>k__BackingField
private KnobDelegate <knobDelegate>k__BackingField
private MidiDriver _instance
public NoteOnDelegate noteOnDelegate
public NoteOffDelegate noteOffDelegate
public KnobDelegate knobDelegate
public MidiDriver Instance
public float GetKey(MidiChannel channel, int noteNumber)
public bool GetKeyDown(MidiChannel channel, int noteNumber)
public bool GetKeyUp(MidiChannel channel, int noteNumber)
public Int32[] GetKnobNumbers(MidiChannel channel)
public float GetKnob(MidiChannel channel, int knobNumber, float defaultValue)
public NoteOnDelegate get_noteOnDelegate()
public void set_noteOnDelegate(NoteOnDelegate value)
public NoteOffDelegate get_noteOffDelegate()
public void set_noteOffDelegate(NoteOffDelegate value)
public KnobDelegate get_knobDelegate()
public void set_knobDelegate(KnobDelegate value)
public void ToggleEnabled(bool state)
public void ClearOutstandingData()
private void UpdateIfNeeded()
public void Update()
public ulong DequeueIncomingData()
public MidiDriver get_Instance()
}
public MidiJack.MidiMaster : object {
public NoteOnDelegate noteOnDelegate
public NoteOffDelegate noteOffDelegate
public KnobDelegate knobDelegate
public NoteOnDelegate get_noteOnDelegate()
public void set_noteOnDelegate(NoteOnDelegate value)
public NoteOffDelegate get_noteOffDelegate()
public void set_noteOffDelegate(NoteOffDelegate value)
public KnobDelegate get_knobDelegate()
public void set_knobDelegate(KnobDelegate value)
public float GetKey(MidiChannel channel, int noteNumber)
public float GetKey(int noteNumber)
public bool GetKeyDown(MidiChannel channel, int noteNumber)
public bool GetKeyDown(int noteNumber)
public bool GetKeyUp(MidiChannel channel, int noteNumber)
public bool GetKeyUp(int noteNumber)
public Int32[] GetKnobNumbers(MidiChannel channel)
public Int32[] GetKnobNumbers()
public float GetKnob(MidiChannel channel, int knobNumber, float defaultValue)
public float GetKnob(int knobNumber, float defaultValue)
public void ToggleEnabled(bool state)
}
public MidiJack.MidiMessage : ValueType {
public UInt32 source
public byte status
public byte data1
public byte data2
public void .ctor(ulong data)
public string ToString()
}
internal UnitySourceGeneratedAssemblyMonoScriptTypes_v1 : object {
private MonoScriptData Get()
}
