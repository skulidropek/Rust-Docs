public UnityEngine.TextCore.FaceInfo : ValueType {
private string m_FamilyName
private string m_StyleName
private int m_PointSize
private float m_Scale
private float m_LineHeight
private float m_AscentLine
private float m_CapLine
private float m_MeanLine
private float m_Baseline
private float m_DescentLine
private float m_SuperscriptOffset
private float m_SuperscriptSize
private float m_SubscriptOffset
private float m_SubscriptSize
private float m_UnderlineOffset
private float m_UnderlineThickness
private float m_StrikethroughOffset
private float m_StrikethroughThickness
private float m_TabWidth
public string familyName
public string styleName
public int pointSize
public float scale
public float lineHeight
public float ascentLine
public float capLine
public float meanLine
public float baseline
public float descentLine
public float superscriptOffset
public float superscriptSize
public float subscriptOffset
public float subscriptSize
public float underlineOffset
public float underlineThickness
public float strikethroughOffset
public float strikethroughThickness
public float tabWidth
internal void .ctor(string familyName, string styleName, int pointSize, float scale, float lineHeight, float ascentLine, float capLine, float meanLine, float baseline, float descentLine, float superscriptOffset, float superscriptSize, float subscriptOffset, float subscriptSize, float underlineOffset, float underlineThickness, float strikethroughOffset, float strikethroughThickness, float tabWidth)
public string get_familyName()
public void set_familyName(string value)
public string get_styleName()
public void set_styleName(string value)
public int get_pointSize()
public void set_pointSize(int value)
public float get_scale()
public void set_scale(float value)
public float get_lineHeight()
public void set_lineHeight(float value)
public float get_ascentLine()
public void set_ascentLine(float value)
public float get_capLine()
public void set_capLine(float value)
public float get_meanLine()
public void set_meanLine(float value)
public float get_baseline()
public void set_baseline(float value)
public float get_descentLine()
public void set_descentLine(float value)
public float get_superscriptOffset()
public void set_superscriptOffset(float value)
public float get_superscriptSize()
public void set_superscriptSize(float value)
public float get_subscriptOffset()
public void set_subscriptOffset(float value)
public float get_subscriptSize()
public void set_subscriptSize(float value)
public float get_underlineOffset()
public void set_underlineOffset(float value)
public float get_underlineThickness()
public void set_underlineThickness(float value)
public float get_strikethroughOffset()
public void set_strikethroughOffset(float value)
public float get_strikethroughThickness()
public void set_strikethroughThickness(float value)
public float get_tabWidth()
public void set_tabWidth(float value)
public bool Compare(FaceInfo other)
}
public UnityEngine.TextCore.Glyph : object {
private UInt32 m_Index
private GlyphMetrics m_Metrics
private GlyphRect m_GlyphRect
private float m_Scale
private int m_AtlasIndex
public UInt32 index
public GlyphMetrics metrics
public GlyphRect glyphRect
public float scale
public int atlasIndex
public void .ctor(Glyph glyph)
internal void .ctor(GlyphMarshallingStruct glyphStruct)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex)
public UInt32 get_index()
public void set_index(UInt32 value)
public GlyphMetrics get_metrics()
public void set_metrics(GlyphMetrics value)
public GlyphRect get_glyphRect()
public void set_glyphRect(GlyphRect value)
public float get_scale()
public void set_scale(float value)
public int get_atlasIndex()
public void set_atlasIndex(int value)
public bool Compare(Glyph other)
}
public UnityEngine.TextCore.GlyphMetrics : ValueType {
private float m_Width
private float m_Height
private float m_HorizontalBearingX
private float m_HorizontalBearingY
private float m_HorizontalAdvance
public float width
public float height
public float horizontalBearingX
public float horizontalBearingY
public float horizontalAdvance
public void .ctor(float width, float height, float bearingX, float bearingY, float advance)
public float get_width()
public void set_width(float value)
public float get_height()
public void set_height(float value)
public float get_horizontalBearingX()
public void set_horizontalBearingX(float value)
public float get_horizontalBearingY()
public void set_horizontalBearingY(float value)
public float get_horizontalAdvance()
public void set_horizontalAdvance(float value)
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphMetrics other)
public bool op_Equality(GlyphMetrics lhs, GlyphMetrics rhs)
public bool op_Inequality(GlyphMetrics lhs, GlyphMetrics rhs)
}
public UnityEngine.TextCore.GlyphRect : ValueType {
private int m_X
private int m_Y
private int m_Width
private int m_Height
private GlyphRect s_ZeroGlyphRect
public int x
public int y
public int width
public int height
public GlyphRect zero
public void .ctor(int x, int y, int width, int height)
public void .ctor(Rect rect)
public int get_x()
public void set_x(int value)
public int get_y()
public void set_y(int value)
public int get_width()
public void set_width(int value)
public int get_height()
public void set_height(int value)
public GlyphRect get_zero()
public int GetHashCode()
public bool Equals(object obj)
public bool Equals(GlyphRect other)
public bool op_Equality(GlyphRect lhs, GlyphRect rhs)
public bool op_Inequality(GlyphRect lhs, GlyphRect rhs)
}
public UnityEngine.TextCore.LowLevel.FontEngine : object {
private FontEngine s_Instance
private UInt32[] s_GlyphIndexesToMarshall
private GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
private GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
private GlyphRect[] s_FreeGlyphRects
private GlyphRect[] s_UsedGlyphRects
private GlyphPairAdjustmentRecord[] s_GlyphPairAdjustmentRecords
private Dictionary`2<UInt32, Glyph> s_GlyphLookupDictionary
internal bool isProcessingDone
internal float generationProgress
internal FontEngine GetInstance()
public FontEngineError InitializeFontEngine()
private int InitializeFontEngine_Internal()
public FontEngineError DestroyFontEngine()
private int DestroyFontEngine_Internal()
internal void SendCancellationRequest()
private void SendCancellationRequest_Internal()
internal bool get_isProcessingDone()
internal float get_generationProgress()
public FontEngineError LoadFontFace(string filePath)
private int LoadFontFace_Internal(string filePath)
public FontEngineError LoadFontFace(string filePath, int pointSize)
private int LoadFontFace_With_Size_Internal(string filePath, int pointSize)
public FontEngineError LoadFontFace(Byte[] sourceFontFile)
private int LoadFontFace_FromSourceFontFile_Internal(Byte[] sourceFontFile)
public FontEngineError LoadFontFace(Byte[] sourceFontFile, int pointSize)
private int LoadFontFace_With_Size_FromSourceFontFile_Internal(Byte[] sourceFontFile, int pointSize)
public FontEngineError LoadFontFace(Font font)
private int LoadFontFace_FromFont_Internal(Font font)
public FontEngineError LoadFontFace(Font font, int pointSize)
private int LoadFontFace_With_Size_FromFont_Internal(Font font, int pointSize)
public FontEngineError SetFaceSize(int pointSize)
private int SetFaceSize_Internal(int pointSize)
public FaceInfo GetFaceInfo()
private int GetFaceInfo_Internal(FaceInfo& faceInfo)
internal UInt32 GetGlyphIndex(UInt32 unicode)
public bool TryGetGlyphIndex(UInt32 unicode, UInt32& glyphIndex)
internal FontEngineError LoadGlyph(UInt32 unicode, GlyphLoadFlags flags)
private int LoadGlyph_Internal(UInt32 unicode, GlyphLoadFlags loadFlags)
public bool TryGetGlyphWithUnicodeValue(UInt32 unicode, GlyphLoadFlags flags, Glyph& glyph)
private bool TryGetGlyphWithUnicodeValue_Internal(UInt32 unicode, GlyphLoadFlags loadFlags, GlyphMarshallingStruct& glyphStruct)
public bool TryGetGlyphWithIndexValue(UInt32 glyphIndex, GlyphLoadFlags flags, Glyph& glyph)
private bool TryGetGlyphWithIndexValue_Internal(UInt32 glyphIndex, GlyphLoadFlags loadFlags, GlyphMarshallingStruct& glyphStruct)
internal bool TryPackGlyphInAtlas(Glyph glyph, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects)
private bool TryPackGlyphInAtlas_Internal(GlyphMarshallingStruct& glyph, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount)
internal bool TryPackGlyphsInAtlas(List`1<Glyph> glyphsToAdd, List`1<Glyph> glyphsAdded, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects)
private bool TryPackGlyphsInAtlas_Internal(GlyphMarshallingStruct[] glyphsToAdd, Int32& glyphsToAddCount, GlyphMarshallingStruct[] glyphsAdded, Int32& glyphsAddedCount, int padding, GlyphPackingMode packingMode, GlyphRenderMode renderMode, int width, int height, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount)
internal FontEngineError RenderGlyphToTexture(Glyph glyph, int padding, GlyphRenderMode renderMode, Texture2D texture)
private int RenderGlyphToTexture_Internal(GlyphMarshallingStruct glyphStruct, int padding, GlyphRenderMode renderMode, Texture2D texture)
internal FontEngineError RenderGlyphsToTexture(List`1<Glyph> glyphs, int padding, GlyphRenderMode renderMode, Texture2D texture)
private int RenderGlyphsToTexture_Internal(GlyphMarshallingStruct[] glyphs, int glyphCount, int padding, GlyphRenderMode renderMode, Texture2D texture)
internal FontEngineError RenderGlyphsToTexture(List`1<Glyph> glyphs, int padding, GlyphRenderMode renderMode, Byte[] texBuffer, int texWidth, int texHeight)
private int RenderGlyphsToTextureBuffer_Internal(GlyphMarshallingStruct[] glyphs, int glyphCount, int padding, GlyphRenderMode renderMode, Byte[] texBuffer, int texWidth, int texHeight)
internal FontEngineError RenderGlyphsToSharedTexture(List`1<Glyph> glyphs, int padding, GlyphRenderMode renderMode)
private int RenderGlyphsToSharedTexture_Internal(GlyphMarshallingStruct[] glyphs, int glyphCount, int padding, GlyphRenderMode renderMode)
internal void SetSharedTexture(Texture2D texture)
internal void ReleaseSharedTexture()
internal bool TryAddGlyphToTexture(UInt32 glyphIndex, int padding, GlyphPackingMode packingMode, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects, GlyphRenderMode renderMode, Texture2D texture, Glyph& glyph)
private bool TryAddGlyphToTexture_Internal(UInt32 glyphIndex, int padding, GlyphPackingMode packingMode, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount, GlyphRenderMode renderMode, Texture2D texture, GlyphMarshallingStruct& glyph)
internal bool TryAddGlyphsToTexture(List`1<UInt32> glyphIndexes, int padding, GlyphPackingMode packingMode, List`1<GlyphRect> freeGlyphRects, List`1<GlyphRect> usedGlyphRects, GlyphRenderMode renderMode, Texture2D texture, Glyph[]& glyphs)
private bool TryAddGlyphsToTexture_Internal(UInt32[] glyphIndex, int padding, GlyphPackingMode packingMode, GlyphRect[] freeGlyphRects, Int32& freeGlyphRectCount, GlyphRect[] usedGlyphRects, Int32& usedGlyphRectCount, GlyphRenderMode renderMode, Texture2D texture, GlyphMarshallingStruct[] glyphs, Int32& glyphCount)
internal GlyphPairAdjustmentRecord[] GetGlyphPairAdjustmentTable(UInt32[] glyphIndexes)
private int GetGlyphPairAdjustmentTable_Internal(UInt32[] glyphIndexes, GlyphPairAdjustmentRecord[] glyphPairAdjustmentRecords, Int32& adjustmentRecordCount)
internal void ResetAtlasTexture(Texture2D texture)
internal void RenderBufferToTexture(Texture2D srcTexture, int padding, GlyphRenderMode renderMode, Texture2D dstTexture)
private int RenderGlyphToTexture_Internal_Injected(GlyphMarshallingStruct& glyphStruct, int padding, GlyphRenderMode renderMode, Texture2D texture)
}
public UnityEngine.TextCore.LowLevel.FontEngineError : Enum {
public int value__
public FontEngineError Success
public FontEngineError Invalid_File_Path
public FontEngineError Invalid_File_Format
public FontEngineError Invalid_File_Structure
public FontEngineError Invalid_File
public FontEngineError Invalid_Table
public FontEngineError Invalid_Glyph_Index
public FontEngineError Invalid_Character_Code
public FontEngineError Invalid_Pixel_Size
public FontEngineError Invalid_Library
public FontEngineError Invalid_Face
public FontEngineError Invalid_Library_or_Face
public FontEngineError Atlas_Generation_Cancelled
public FontEngineError Invalid_SharedTextureData
}
internal UnityEngine.TextCore.LowLevel.FontEngineUtilities : ValueType {
internal bool Approximately(float a, float b)
}
internal UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord : ValueType {
private UInt32 m_GlyphIndex
private GlyphValueRecord m_GlyphValueRecord
public UInt32 glyphIndex
public GlyphValueRecord glyphValueRecord
public void .ctor(UInt32 glyphIndex, GlyphValueRecord glyphValueRecord)
public UInt32 get_glyphIndex()
public void set_glyphIndex(UInt32 value)
public GlyphValueRecord get_glyphValueRecord()
public void set_glyphValueRecord(GlyphValueRecord value)
}
public UnityEngine.TextCore.LowLevel.GlyphLoadFlags : Enum {
public int value__
public GlyphLoadFlags LOAD_DEFAULT
public GlyphLoadFlags LOAD_NO_SCALE
public GlyphLoadFlags LOAD_NO_HINTING
public GlyphLoadFlags LOAD_RENDER
public GlyphLoadFlags LOAD_NO_BITMAP
public GlyphLoadFlags LOAD_FORCE_AUTOHINT
public GlyphLoadFlags LOAD_MONOCHROME
public GlyphLoadFlags LOAD_NO_AUTOHINT
public GlyphLoadFlags LOAD_COMPUTE_METRICS
public GlyphLoadFlags LOAD_BITMAP_METRICS_ONLY
}
internal UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct : ValueType {
public UInt32 index
public GlyphMetrics metrics
public GlyphRect glyphRect
public float scale
public int atlasIndex
public void .ctor(Glyph glyph)
public void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex)
}
public UnityEngine.TextCore.LowLevel.GlyphPackingMode : Enum {
public int value__
public GlyphPackingMode BestShortSideFit
public GlyphPackingMode BestLongSideFit
public GlyphPackingMode BestAreaFit
public GlyphPackingMode BottomLeftRule
public GlyphPackingMode ContactPointRule
}
internal UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord : ValueType {
private GlyphAdjustmentRecord m_FirstAdjustmentRecord
private GlyphAdjustmentRecord m_SecondAdjustmentRecord
public GlyphAdjustmentRecord firstAdjustmentRecord
public GlyphAdjustmentRecord secondAdjustmentRecord
public GlyphAdjustmentRecord get_firstAdjustmentRecord()
public void set_firstAdjustmentRecord(GlyphAdjustmentRecord value)
public GlyphAdjustmentRecord get_secondAdjustmentRecord()
public void set_secondAdjustmentRecord(GlyphAdjustmentRecord value)
}
internal UnityEngine.TextCore.LowLevel.GlyphRasterModes : Enum {
public int value__
public GlyphRasterModes RASTER_MODE_8BIT
public GlyphRasterModes RASTER_MODE_MONO
public GlyphRasterModes RASTER_MODE_NO_HINTING
public GlyphRasterModes RASTER_MODE_HINTED
public GlyphRasterModes RASTER_MODE_BITMAP
public GlyphRasterModes RASTER_MODE_SDF
public GlyphRasterModes RASTER_MODE_SDFAA
public GlyphRasterModes RASTER_MODE_MSDF
public GlyphRasterModes RASTER_MODE_MSDFA
public GlyphRasterModes RASTER_MODE_1X
public GlyphRasterModes RASTER_MODE_8X
public GlyphRasterModes RASTER_MODE_16X
public GlyphRasterModes RASTER_MODE_32X
}
public UnityEngine.TextCore.LowLevel.GlyphRenderMode : Enum {
public int value__
public GlyphRenderMode SMOOTH_HINTED
public GlyphRenderMode SMOOTH
public GlyphRenderMode RASTER_HINTED
public GlyphRenderMode RASTER
public GlyphRenderMode SDF
public GlyphRenderMode SDF8
public GlyphRenderMode SDF16
public GlyphRenderMode SDF32
public GlyphRenderMode SDFAA_HINTED
public GlyphRenderMode SDFAA
}
internal UnityEngine.TextCore.LowLevel.GlyphValueRecord : ValueType {
private float m_XPlacement
private float m_YPlacement
private float m_XAdvance
private float m_YAdvance
public float xPlacement
public float yPlacement
public float xAdvance
public float yAdvance
public void .ctor(float xPlacement, float yPlacement, float xAdvance, float yAdvance)
public float get_xPlacement()
public void set_xPlacement(float value)
public float get_yPlacement()
public void set_yPlacement(float value)
public float get_xAdvance()
public void set_xAdvance(float value)
public float get_yAdvance()
public void set_yAdvance(float value)
public GlyphValueRecord op_Addition(GlyphValueRecord a, GlyphValueRecord b)
}
