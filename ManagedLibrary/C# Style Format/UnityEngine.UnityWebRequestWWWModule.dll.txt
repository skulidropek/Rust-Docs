[NativeHeaderAttribute("Modules/UnityWebRequestAudio/Public/DownloadHandlerAudioClip.h")]
internal static class UnityEngine.Networking.WebRequestWWW : object {
    [FreeFunctionAttribute("UnityWebRequestCreateAudioClip")]
internal static AudioClip InternalCreateAudioClipUsingDH(DownloadHandler dh, string url, bool stream, bool compressed, AudioType audioType);
}
[ObsoleteAttribute("Use UnityWebRequest, a fully featured replacement which is more efficient and has additional features")]
public class UnityEngine.WWW : CustomYieldInstruction {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ThreadPriority <threadPriority>k__BackingField;
    private UnityWebRequest _uwr;
    private AssetBundle _assetBundle;
    private Dictionary`2<string, string> _responseHeaders;
    public AssetBundle assetBundle { get; }
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Obsolete msg (UnityUpgradable) -> * UnityEngine.WWW.GetAudioClip()", "True")]
public Object audioClip { get; }
    public Byte[] bytes { get; }
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Obsolete msg (UnityUpgradable) -> * UnityEngine.WWW.GetMovieTexture()", "True")]
public Object movie { get; }
    [ObsoleteAttribute("WWW.size is obsolete. Please use WWW.bytesDownloaded instead")]
public int size { get; }
    public int bytesDownloaded { get; }
    public string error { get; }
    public bool isDone { get; }
    public float progress { get; }
    public Dictionary`2<string, string> responseHeaders { get; }
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Please use WWW.text instead. (UnityUpgradable) -> text", "True")]
public string data { get; }
    public string text { get; }
    public Texture2D texture { get; }
    public Texture2D textureNonReadable { get; }
    public ThreadPriority threadPriority { get; public set; }
    public float uploadProgress { get; }
    public string url { get; }
    public bool keepWaiting { get; }
    public WWW(string url);
    public WWW(string url, WWWForm form);
    public WWW(string url, Byte[] postData);
    [ObsoleteAttribute("This overload is deprecated. Use UnityEngine.WWW.WWW(string, byte[], System.Collections.Generic.Dictionary<string, string>) instead.")]
public WWW(string url, Byte[] postData, Hashtable headers);
    public WWW(string url, Byte[] postData, Dictionary`2<string, string> headers);
    internal WWW(string url, string name, Hash128 hash, UInt32 crc);
    public static string EscapeURL(string s);
    public static string EscapeURL(string s, Encoding e);
    public static string UnEscapeURL(string s);
    public static string UnEscapeURL(string s, Encoding e);
    public static WWW LoadFromCacheOrDownload(string url, int version);
    public static WWW LoadFromCacheOrDownload(string url, int version, UInt32 crc);
    public static WWW LoadFromCacheOrDownload(string url, Hash128 hash);
    public static WWW LoadFromCacheOrDownload(string url, Hash128 hash, UInt32 crc);
    public static WWW LoadFromCacheOrDownload(string url, CachedAssetBundle cachedBundle, UInt32 crc);
    public AssetBundle get_assetBundle();
    public Object get_audioClip();
    public Byte[] get_bytes();
    public Object get_movie();
    public int get_size();
    public int get_bytesDownloaded();
    public string get_error();
    public bool get_isDone();
    public float get_progress();
    public Dictionary`2<string, string> get_responseHeaders();
    public string get_data();
    public string get_text();
    private Texture2D CreateTextureFromDownloadedData(bool markNonReadable);
    public Texture2D get_texture();
    public Texture2D get_textureNonReadable();
    public void LoadImageIntoTexture(Texture2D texture);
    [CompilerGeneratedAttribute]
public ThreadPriority get_threadPriority();
    [CompilerGeneratedAttribute]
public void set_threadPriority(ThreadPriority value);
    public float get_uploadProgress();
    public string get_url();
    public virtual bool get_keepWaiting();
    public sealed virtual void Dispose();
    internal Object GetAudioClipInternal(bool threeD, bool stream, bool compressed, AudioType audioType);
    public AudioClip GetAudioClip();
    public AudioClip GetAudioClip(bool threeD);
    public AudioClip GetAudioClip(bool threeD, bool stream);
    public AudioClip GetAudioClip(bool threeD, bool stream, AudioType audioType);
    public AudioClip GetAudioClipCompressed();
    public AudioClip GetAudioClipCompressed(bool threeD);
    public AudioClip GetAudioClipCompressed(bool threeD, AudioType audioType);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("MovieTexture is deprecated. Use VideoPlayer instead.", "False")]
public MovieTexture GetMovieTexture();
    private bool WaitUntilDoneIfPossible();
}
[ExtensionAttribute]
public static class UnityEngine.WWWAudioExtensions : object {
    [ObsoleteAttribute("WWWAudioExtensions.GetAudioClip extension method has been replaced by WWW.GetAudioClip instance method. (UnityUpgradable) -> WWW.GetAudioClip()", "True")]
[ExtensionAttribute]
public static AudioClip GetAudioClip(WWW www);
    [ObsoleteAttribute("WWWAudioExtensions.GetAudioClip extension method has been replaced by WWW.GetAudioClip instance method. (UnityUpgradable) -> WWW.GetAudioClip([mscorlib] System.Boolean)", "True")]
[ExtensionAttribute]
public static AudioClip GetAudioClip(WWW www, bool threeD);
    [ObsoleteAttribute("WWWAudioExtensions.GetAudioClip extension method has been replaced by WWW.GetAudioClip instance method. (UnityUpgradable) -> WWW.GetAudioClip([mscorlib] System.Boolean, [mscorlib] System.Boolean)", "True")]
[ExtensionAttribute]
public static AudioClip GetAudioClip(WWW www, bool threeD, bool stream);
    [ObsoleteAttribute("WWWAudioExtensions.GetAudioClip extension method has been replaced by WWW.GetAudioClip instance method. (UnityUpgradable) -> WWW.GetAudioClip([mscorlib] System.Boolean, [mscorlib] System.Boolean, UnityEngine.AudioType)", "True")]
[ExtensionAttribute]
public static AudioClip GetAudioClip(WWW www, bool threeD, bool stream, AudioType audioType);
    [ObsoleteAttribute("WWWAudioExtensions.GetAudioClipCompressed extension method has been replaced by WWW.GetAudioClipCompressed instance method. (UnityUpgradable) -> WWW.GetAudioClipCompressed()", "True")]
[ExtensionAttribute]
public static AudioClip GetAudioClipCompressed(WWW www);
    [ExtensionAttribute]
[ObsoleteAttribute("WWWAudioExtensions.GetAudioClipCompressed extension method has been replaced by WWW.GetAudioClipCompressed instance method. (UnityUpgradable) -> WWW.GetAudioClipCompressed([mscorlib] System.Boolean)", "True")]
public static AudioClip GetAudioClipCompressed(WWW www, bool threeD);
    [ExtensionAttribute]
[ObsoleteAttribute("WWWAudioExtensions.GetAudioClipCompressed extension method has been replaced by WWW.GetAudioClipCompressed instance method. (UnityUpgradable) -> WWW.GetAudioClipCompressed([mscorlib] System.Boolean, UnityEngine.AudioType)", "True")]
public static AudioClip GetAudioClipCompressed(WWW www, bool threeD, AudioType audioType);
    [ExtensionAttribute]
[ObsoleteAttribute("WWWAudioExtensions.GetMovieTexture extension method has been replaced by WWW.GetMovieTexture instance method. (UnityUpgradable) -> WWW.GetMovieTexture()", "True")]
public static MovieTexture GetMovieTexture(WWW www);
}
