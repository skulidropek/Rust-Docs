public EZhex1991.EZSoftBone.CustomForce : MulticastDelegate {
public void .ctor(object object, IntPtr method)
public Vector3 Invoke(float normalizedLength, Transform forceSpace)
public IAsyncResult BeginInvoke(float normalizedLength, Transform forceSpace, AsyncCallback callback, object object)
public Vector3 EndInvoke(IAsyncResult result)
}
public EZhex1991.EZSoftBone.EZCurveRectAttribute : PropertyAttribute {
public Rect rect
public Color color
public void .ctor(Rect rect)
public void .ctor(float x, float y, float width, float height)
public void .ctor(Rect rect, Color color)
public void .ctor(float x, float y, float width, float height, Color color)
}
public EZhex1991.EZSoftBone.EZSoftBone : MonoBehaviour {
public float DeltaTime_Min
public int MaxInstanceCount
private float CurrentFrame
private int InstanceNumber
public List`1<Transform> rootBones
public List`1<Transform> endBones
private EZSoftBoneMaterial _material
public int startDepth
public int stiffnessDepth
public UnificationMode siblingConstraints
public UnificationMode lengthUnification
public bool siblingRotationConstraints
public bool closedSiblings
public LayerMask collisionLayers
public float radius
public AnimationCurve radiusCurve
public float deadZoneRadius
public float deadZoneExtent
public DeltaTimeMode deltaTimeMode
public float constantDeltaTime
public int iterations
public float sleepThreshold
public Vector3 gravity
private Transform _simulateSpace
public float globalRadius
public Vector3 globalForce
public bool collisionEnabled
private BoneChain[] structures
private Vector3 origin
private Vector3 prevOrigin
private Vector3 originDelta
private bool simulationSpaceChanged
private Capsule deadZoneCapsule
private bool isVisible
private Vector3 forceDirection
public EZSoftBoneMaterial sharedMaterial
public Transform simulateSpace
public EZSoftBoneMaterial get_sharedMaterial()
public void set_sharedMaterial(EZSoftBoneMaterial value)
public Transform get_simulateSpace()
public void set_simulateSpace(Transform value)
private void Awake()
private void OnEnable()
private void OnDisable()
private void LateUpdate()
public void RevertTransforms()
public void RevertTransforms(int startDepth)
public void InitStructures(bool force)
public void SetRestState()
private void CreateBones()
private void SetParentBones()
private void SetSiblings()
private void SetTreeLength()
public void RefreshRadius()
private void UpdateStructures(float deltaTime)
private void UpdateBones(Bone bone, float deltaTime)
private void UpdateTransforms()
private void UpdateSimulationSpace(Transform transform)
public void PushBonesOutOfDeadZone()
public void PlayerPreviewVisibility(bool isVisible)
public void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
internal bool <SetSiblings>g__HasBoneAtDepth|55_1(BoneChain chain, int depth)
}
public EZhex1991.EZSoftBone.EZSoftBoneColliderBase : MonoBehaviour {
public ListHashSet`1<EZSoftBoneColliderBase> EnabledColliders
protected void OnEnable()
protected void OnDisable()
public void Collide(Vector3& position, float spacing)
}
public EZhex1991.EZSoftBone.EZSoftBoneColliderCylinder : EZSoftBoneColliderBase {
private float m_Margin
private bool m_InsideMode
public float margin
public bool insideMode
public float get_margin()
public void set_margin(float value)
public bool get_insideMode()
public void set_insideMode(bool value)
public void Collide(Vector3& position, float spacing)
}
public EZhex1991.EZSoftBone.EZSoftBoneMaterial : ScriptableObject {
private float m_Damping
private AnimationCurve m_DampingCurve
private float m_Stiffness
private AnimationCurve m_StiffnessCurve
private float m_Resistance
private AnimationCurve m_ResistanceCurve
private float m_Slackness
private AnimationCurve m_SlacknessCurve
private EZSoftBoneMaterial m_DefaultMaterial
public float damping
public AnimationCurve dampingCurve
public float stiffness
public AnimationCurve stiffnessCurve
public float resistance
public AnimationCurve resistanceCurve
public float slackness
public AnimationCurve slacknessCurve
public EZSoftBoneMaterial defaultMaterial
public float get_damping()
public void set_damping(float value)
public AnimationCurve get_dampingCurve()
public float get_stiffness()
public void set_stiffness(float value)
public AnimationCurve get_stiffnessCurve()
public float get_resistance()
public void set_resistance(float value)
public AnimationCurve get_resistanceCurve()
public float get_slackness()
public void set_slackness(float value)
public AnimationCurve get_slacknessCurve()
public EZSoftBoneMaterial get_defaultMaterial()
public float GetDamping(float t)
public float GetStiffness(float t)
public float GetResistance(float t)
public float GetSlackness(float t)
}
public EZhex1991.EZSoftBone.EZSoftBoneUtility : object {
internal Vector3 Abs(Vector3 v)
public float Max(Vector3 v)
public bool Contains(LayerMask mask, int layer)
public void GetCapsuleParams(CapsuleCollider collider, Vector3& center0, Vector3& center1, Single& radius)
public void GetCylinderParams(Transform transform, Vector3& center, Vector3& direction, Single& radius, Single& height)
public void PointOutsideSphere(Vector3& position, SphereCollider collider, float spacing)
private void PointOutsideSphere(Vector3& position, Vector3 spherePosition, float radius)
public void PointInsideSphere(Vector3& position, SphereCollider collider, float spacing)
private void PointInsideSphere(Vector3& position, Vector3 spherePosition, float radius)
public void PointOutsideCapsule(Vector3& position, CapsuleCollider collider, float spacing)
public void PointOutsideCapsule(Vector3& position, Vector3 center0, Vector3 center1, float radius)
public void PointInsideCapsule(Vector3& position, CapsuleCollider collider, float spacing)
private void PointInsideCapsule(Vector3& position, Vector3 center0, Vector3 center1, float radius)
public void PointOutsideCylinder(Vector3& position, Transform transform, float spacing)
private void PointOutsideCylinder(Vector3& position, Vector3 center, Vector3 direction, float radius, float height)
public void PointInsideCylinder(Vector3& position, Transform transform, float spacing)
private void PointInsideCylinder(Vector3& position, Vector3 center, Vector3 direction, float radius, float height)
public void PointOutsideBox(Vector3& position, BoxCollider collider, float spacing)
public void PointOutsideBox(Vector3& position, Vector3 boxSize)
public void PointInsideBox(Vector3& position, BoxCollider collider, float spacing)
private void PointInsideBox(Vector3& position, Vector3 boxSize)
public void PointOutsideCollider(Vector3& position, Collider collider, float spacing)
public void DrawGizmosArrow(Vector3 startPoint, Vector3 direction, float halfWidth, Vector3 normal)
public void DrawGizmosPolyLine(Vector3[] vertices)
}
internal UnitySourceGeneratedAssemblyMonoScriptTypes_v1 : object {
private MonoScriptData Get()
}
