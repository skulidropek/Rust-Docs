internal Consts : object {
public string MonoVersion
public string MonoCompany
public string MonoProduct
public string MonoCopyright
public string FxVersion
public string VsVersion
public string FxFileVersion
public string VsFileVersion
private string PublicKeyToken
public string AssemblyI18N
public string AssemblyMicrosoft_VisualStudio
public string AssemblyMicrosoft_VisualStudio_Web
public string AssemblyMicrosoft_VSDesigner
public string AssemblyMono_Http
public string AssemblyMono_Posix
public string AssemblyMono_Security
public string AssemblyMono_Messaging_RabbitMQ
public string AssemblyCorlib
public string AssemblySystem
public string AssemblySystem_Data
public string AssemblySystem_Design
public string AssemblySystem_DirectoryServices
public string AssemblySystem_Drawing
public string AssemblySystem_Drawing_Design
public string AssemblySystem_Messaging
public string AssemblySystem_Security
public string AssemblySystem_ServiceProcess
public string AssemblySystem_Web
public string AssemblySystem_Windows_Forms
public string AssemblySystem_Core
}
public I18N.Common.ByteEncoding : MonoEncoding {
protected Char[] toChars
protected string encodingName
protected string bodyName
protected string headerName
protected string webName
protected bool isBrowserDisplay
protected bool isBrowserSave
protected bool isMailNewsDisplay
protected bool isMailNewsSave
protected int windowsCodePage
private Byte[] isNormalized
private Byte[] isNormalizedComputed
private Byte[] normalization_bytes
public bool IsSingleByte
public string BodyName
public string EncodingName
public string HeaderName
public bool IsBrowserDisplay
public bool IsBrowserSave
public bool IsMailNewsDisplay
public bool IsMailNewsSave
public string WebName
public int WindowsCodePage
protected void .ctor(int codePage, Char[] toChars, string encodingName, string bodyName, string headerName, string webName, bool isBrowserDisplay, bool isBrowserSave, bool isMailNewsDisplay, bool isMailNewsSave, int windowsCodePage)
public bool get_IsSingleByte()
public string get_BodyName()
public string get_EncodingName()
public string get_HeaderName()
public bool get_IsBrowserDisplay()
public bool get_IsBrowserSave()
public bool get_IsMailNewsDisplay()
public bool get_IsMailNewsSave()
public string get_WebName()
public int get_WindowsCodePage()
public bool IsAlwaysNormalized(NormalizationForm form)
public int GetByteCount(string s)
public int GetByteCountImpl(Char* chars, int count)
protected void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
protected void ToBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
public int GetBytesImpl(Char* chars, int charCount, Byte* bytes, int byteCount)
public int GetCharCount(Byte[] bytes, int index, int count)
public int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
public int GetMaxByteCount(int charCount)
public int GetMaxCharCount(int byteCount)
public string GetString(Byte[] bytes, int index, int count)
public string GetString(Byte[] bytes)
}
public I18N.Common.ByteSafeEncoding : MonoSafeEncoding {
protected Char[] toChars
protected string encodingName
protected string bodyName
protected string headerName
protected string webName
protected bool isBrowserDisplay
protected bool isBrowserSave
protected bool isMailNewsDisplay
protected bool isMailNewsSave
protected int windowsCodePage
private Byte[] isNormalized
private Byte[] isNormalizedComputed
private Byte[] normalization_bytes
public bool IsSingleByte
public string BodyName
public string EncodingName
public string HeaderName
public bool IsBrowserDisplay
public bool IsBrowserSave
public bool IsMailNewsDisplay
public bool IsMailNewsSave
public string WebName
public int WindowsCodePage
protected void .ctor(int codePage, Char[] toChars, string encodingName, string bodyName, string headerName, string webName, bool isBrowserDisplay, bool isBrowserSave, bool isMailNewsDisplay, bool isMailNewsSave, int windowsCodePage)
public bool get_IsSingleByte()
public string get_BodyName()
public string get_EncodingName()
public string get_HeaderName()
public bool get_IsBrowserDisplay()
public bool get_IsBrowserSave()
public bool get_IsMailNewsDisplay()
public bool get_IsMailNewsSave()
public string get_WebName()
public int get_WindowsCodePage()
public bool IsAlwaysNormalized(NormalizationForm form)
public int GetByteCount(string s)
public int GetByteCount(Char[] chars, int index, int count)
public int GetByteCount(Char* chars, int count)
protected void ToBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
protected void ToBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
public int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
public int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
public Byte[] GetBytes(string s)
public int GetCharCount(Byte[] bytes, int index, int count)
public int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
public int GetMaxByteCount(int charCount)
public int GetMaxCharCount(int byteCount)
public string GetString(Byte[] bytes, int index, int count)
public string GetString(Byte[] bytes)
}
public I18N.Common.Handlers : object {
public String[] List
private Dictionary`2<string, string> aliases
public string GetAlias(string name)
private void BuildHash()
}
public I18N.Common.Manager : object {
private Manager manager
private Hashtable handlers
private Hashtable active
private Hashtable assemblies
private object lockobj
private string hex
public Manager PrimaryManager
public Manager get_PrimaryManager()
private string Normalize(string name)
public Encoding GetEncoding(int codePage)
public Encoding GetEncoding(string name)
public CultureInfo GetCulture(int culture, bool useUserOverride)
public CultureInfo GetCulture(string name, bool useUserOverride)
internal object Instantiate(string name)
private void LoadClassList()
private void LoadInternalClasses()
}
public I18N.Common.MonoEncoder : Encoder {
private MonoEncoding encoding
public void .ctor(MonoEncoding encoding)
public int GetByteCount(Char[] chars, int index, int count, bool refresh)
public int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, bool flush)
public int GetByteCountImpl(Char* chars, int charCount, bool refresh)
public int GetBytesImpl(Char* chars, int charCount, Byte* bytes, int byteCount, bool refresh)
public int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush)
public void HandleFallback(Char* chars, Int32& charIndex, Int32& charCount, Byte* bytes, Int32& byteIndex, Int32& byteCount, object state)
}
public I18N.Common.MonoEncoding : Encoding {
private int win_code_page
public int WindowsCodePage
public void .ctor(int codePage)
public void .ctor(int codePage, int windowsCodePage)
public int get_WindowsCodePage()
protected int GetBytesInternal(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush, object state)
public void HandleFallback(EncoderFallbackBuffer& buffer, Char* chars, Int32& charIndex, Int32& charCount, Byte* bytes, Int32& byteIndex, Int32& byteCount, object state)
public void HandleFallback(EncoderFallbackBuffer& buffer, Char* chars, Int32& charIndex, Int32& charCount, Byte* bytes, Int32& byteIndex, Int32& byteCount)
public int GetByteCount(Char[] chars, int index, int count)
public int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
public int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
public int GetByteCount(Char* chars, int count)
public int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
public int GetByteCountImpl(Char* chars, int charCount)
public int GetBytesImpl(Char* chars, int charCount, Byte* bytes, int byteCount)
}
public I18N.Common.MonoSafeEncoder : Encoder {
private MonoSafeEncoding encoding
public void .ctor(MonoSafeEncoding encoding)
public void HandleFallback(Char[] chars, Int32& charIndex, Int32& charCount, Byte[] bytes, Int32& byteIndex, Int32& byteCount, object state)
}
public I18N.Common.MonoSafeEncoding : Encoding {
private int win_code_page
public int WindowsCodePage
public void .ctor(int codePage)
public void .ctor(int codePage, int windowsCodePage)
public int get_WindowsCodePage()
protected int GetBytesInternal(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, bool flush, object state)
public void HandleFallback(EncoderFallbackBuffer& buffer, Char[] chars, Int32& charIndex, Int32& charCount, Byte[] bytes, Int32& byteIndex, Int32& byteCount, object state)
}
public I18N.Common.Strings : object {
public string GetString(string tag)
}
