internal class UnityEngine.Formats.Fbx.Exporter.FbxPrefab : MonoBehaviour {
    [SerializeField]
private string m_fbxHistory;
    [SerializeField]
private List`1<StringPair> m_nameMapping;
    [SerializeField]
[TooltipAttribute("Which FBX file does this refer to?")]
private GameObject m_fbxModel;
    [TooltipAttribute("Should we auto-update this prefab when the FBX file is updated?")]
[SerializeField]
private bool m_autoUpdate;
    [CompilerGeneratedAttribute]
private static HandleUpdate OnUpdate;
    public string FbxHistory { get; public set; }
    public List`1<StringPair> NameMapping { get; }
    public GameObject FbxModel { get; public set; }
    public bool AutoUpdate { get; public set; }
    public string get_FbxHistory();
    public void set_FbxHistory(string value);
    public List`1<StringPair> get_NameMapping();
    public GameObject get_FbxModel();
    public void set_FbxModel(GameObject value);
    public bool get_AutoUpdate();
    public void set_AutoUpdate(bool value);
    [CompilerGeneratedAttribute]
public static void add_OnUpdate(HandleUpdate value);
    [CompilerGeneratedAttribute]
public static void remove_OnUpdate(HandleUpdate value);
    public static void CallOnUpdate(FbxPrefab instance, IEnumerable`1<GameObject> updatedObjects);
}
internal class UnityEngine.Formats.Fbx.Exporter.HandleUpdate : MulticastDelegate {
    public HandleUpdate(object object, IntPtr method);
    public virtual void Invoke(FbxPrefab updatedInstance, IEnumerable`1<GameObject> updatedObjects);
    public virtual IAsyncResult BeginInvoke(FbxPrefab updatedInstance, IEnumerable`1<GameObject> updatedObjects, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class UnityEngine.Formats.Fbx.Exporter.StringPair : ValueType {
    private string m_fbxObjectName;
    private string m_unityObjectName;
    public string FBXObjectName { get; public set; }
    public string UnityObjectName { get; public set; }
    public string get_FBXObjectName();
    public void set_FBXObjectName(string value);
    public string get_UnityObjectName();
    public void set_UnityObjectName(string value);
}
[CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
[GeneratedCodeAttribute("Unity.MonoScriptGenerator.MonoScriptInfoGenerator", "")]
internal class UnitySourceGeneratedAssemblyMonoScriptTypes_v1 : object {
    private static MonoScriptData Get();
}
