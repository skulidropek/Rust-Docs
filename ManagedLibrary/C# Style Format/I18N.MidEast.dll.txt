internal static class Consts : object {
    
public static string MonoVersion;
    
public static string MonoCompany;
    
public static string MonoProduct;
    
public static string MonoCopyright;
    
public static string FxVersion;
    
public static string VsVersion;
    
public static string FxFileVersion;
    
public static string VsFileVersion;
    
public static string AssemblyI18N;
    
public static string AssemblyMicrosoft_VisualStudio;
    
public static string AssemblyMicrosoft_VisualStudio_Web;
    
public static string AssemblyMicrosoft_VSDesigner;
    
public static string AssemblyMono_Http;
    
public static string AssemblyMono_Posix;
    
public static string AssemblyMono_Security;
    
public static string AssemblyMono_Messaging_RabbitMQ;
    
public static string AssemblyCorlib;
    
public static string AssemblySystem;
    
public static string AssemblySystem_Data;
    
public static string AssemblySystem_Design;
    
public static string AssemblySystem_DirectoryServices;
    
public static string AssemblySystem_Drawing;
    
public static string AssemblySystem_Drawing_Design;
    
public static string AssemblySystem_Messaging;
    
public static string AssemblySystem_Security;
    
public static string AssemblySystem_ServiceProcess;
    
public static string AssemblySystem_Web;
    
public static string AssemblySystem_Windows_Forms;
    
public static string AssemblySystem_Core;
}
public class I18N.MidEast.CP1254 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP1254();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.CP1255 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP1255();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.CP1256 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP1256();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.CP28596 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP28596();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.CP28598 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP28598();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.CP28599 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP28599();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.CP38598 : ByteEncoding {
    
private static Char[] ToChars;
    private static CP38598();
    protected virtual void ToBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
}
public class I18N.MidEast.ENCiso_8859_6 : CP28596 {
}
public class I18N.MidEast.ENCiso_8859_8 : CP28598 {
}
public class I18N.MidEast.ENCiso_8859_9 : CP28599 {
}
public class I18N.MidEast.ENCwindows_1254 : CP1254 {
}
public class I18N.MidEast.ENCwindows_1255 : CP1255 {
}
public class I18N.MidEast.ENCwindows_1256 : CP1256 {
}
public class I18N.MidEast.ENCwindows_38598 : CP38598 {
}
