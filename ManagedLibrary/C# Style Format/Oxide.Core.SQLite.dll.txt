public Oxide.Core.SQLite.Libraries.SQLite : Library {
private string _dataDirectory
private Queue`1<SQLiteQuery> _queue
private object _syncroot
private AutoResetEvent _workevent
private HashSet`1<Connection> _runningConnections
private bool _running
private Dictionary`2<string, Connection> _connections
private Thread _worker
private Dictionary`2<Plugin, Callback`2<Plugin, PluginManager>> _pluginRemovedFromManager
public bool IsGlobal
public bool get_IsGlobal()
private void Worker()
public Connection OpenDb(string file, Plugin plugin, bool persistent)
private void OnRemovedFromManager(Plugin sender, PluginManager manager)
public void CloseDb(Connection db)
public Sql NewSql()
public void Query(Sql sql, Connection db, Action`1<List`1<Dictionary`2<string, object>>> callback)
public void ExecuteNonQuery(Sql sql, Connection db, Action`1<int> callback)
public void Insert(Sql sql, Connection db, Action`1<int> callback)
public void Update(Sql sql, Connection db, Action`1<int> callback)
public void Delete(Sql sql, Connection db, Action`1<int> callback)
public void Shutdown()
}
public Oxide.Core.SQLite.SQLiteExtension : Extension {
internal Version AssemblyVersion
private SQLite sqlite
public string Name
public VersionNumber Version
public string Author
public string get_Name()
public VersionNumber get_Version()
public string get_Author()
public void .ctor(ExtensionManager manager)
public void Load()
public void LoadPluginWatchers(string pluginDirectory)
public void OnModLoad()
}
