public UnityEngine.SpatialTracking.TrackedPoseDriver : MonoBehaviour {
private DeviceType m_Device
private TrackedPose m_PoseSource
private TrackingType m_TrackingType
private UpdateType m_UpdateType
private bool m_UseRelativeTransform
protected Pose m_OriginPose
public DeviceType deviceType
public TrackedPose poseSource
public TrackingType trackingType
public UpdateType updateType
public bool UseRelativeTransform
public Pose originPose
public DeviceType get_deviceType()
internal void set_deviceType(DeviceType value)
public TrackedPose get_poseSource()
internal void set_poseSource(TrackedPose value)
public bool SetPoseSource(DeviceType deviceType, TrackedPose pose)
private bool TryGetTangoPose(CoordinateFrame frame, Pose& pose)
private bool GetDataFromSource(DeviceType device, TrackedPose poseSource, Pose& resultPose)
public TrackingType get_trackingType()
public void set_trackingType(TrackingType value)
public UpdateType get_updateType()
public void set_updateType(UpdateType value)
public bool get_UseRelativeTransform()
public void set_UseRelativeTransform(bool value)
public Pose get_originPose()
public void set_originPose(Pose value)
private void CacheLocalPosition()
private void ResetToCachedLocalPosition()
protected void Awake()
protected void OnDestroy()
protected void OnEnable()
protected void OnDisable()
protected void FixedUpdate()
protected void Update()
protected void OnBeforeRender()
protected void SetLocalTransform(Vector3 newPosition, Quaternion newRotation)
protected Pose TransformPoseByOriginIfNeeded(Pose pose)
private bool HasStereoCamera()
protected void PerformUpdate()
}
internal UnityEngine.SpatialTracking.TrackedPoseDriverDataDescription : object {
public List`1<PoseData> DeviceData
}
