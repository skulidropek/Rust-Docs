Сборка: System.Data.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: <>f__AnonymousType0`4
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <ConnectionId>j__TPar <ConnectionId>i__Field
  <Command>j__TPar <Command>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <ConnectionId>j__TPar ConnectionId
  <Command>j__TPar Command
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <ConnectionId>j__TPar get_ConnectionId()
  <Command>j__TPar get_Command()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <ConnectionId>j__TPar ConnectionId, <Command>j__TPar Command)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType1`6
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <ConnectionId>j__TPar <ConnectionId>i__Field
  <Command>j__TPar <Command>i__Field
  <Statistics>j__TPar <Statistics>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <ConnectionId>j__TPar ConnectionId
  <Command>j__TPar Command
  <Statistics>j__TPar Statistics
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <ConnectionId>j__TPar get_ConnectionId()
  <Command>j__TPar get_Command()
  <Statistics>j__TPar get_Statistics()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <ConnectionId>j__TPar ConnectionId, <Command>j__TPar Command, <Statistics>j__TPar Statistics, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType2`6
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <ConnectionId>j__TPar <ConnectionId>i__Field
  <Command>j__TPar <Command>i__Field
  <Exception>j__TPar <Exception>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <ConnectionId>j__TPar ConnectionId
  <Command>j__TPar Command
  <Exception>j__TPar Exception
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <ConnectionId>j__TPar get_ConnectionId()
  <Command>j__TPar get_Command()
  <Exception>j__TPar get_Exception()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <ConnectionId>j__TPar ConnectionId, <Command>j__TPar Command, <Exception>j__TPar Exception, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType3`4
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <Connection>j__TPar <Connection>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <Connection>j__TPar Connection
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <Connection>j__TPar get_Connection()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <Connection>j__TPar Connection, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType4`6
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <ConnectionId>j__TPar <ConnectionId>i__Field
  <Connection>j__TPar <Connection>i__Field
  <Statistics>j__TPar <Statistics>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <ConnectionId>j__TPar ConnectionId
  <Connection>j__TPar Connection
  <Statistics>j__TPar Statistics
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <ConnectionId>j__TPar get_ConnectionId()
  <Connection>j__TPar get_Connection()
  <Statistics>j__TPar get_Statistics()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <ConnectionId>j__TPar ConnectionId, <Connection>j__TPar Connection, <Statistics>j__TPar Statistics, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType5`6
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <ConnectionId>j__TPar <ConnectionId>i__Field
  <Connection>j__TPar <Connection>i__Field
  <Exception>j__TPar <Exception>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <ConnectionId>j__TPar ConnectionId
  <Connection>j__TPar Connection
  <Exception>j__TPar Exception
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <ConnectionId>j__TPar get_ConnectionId()
  <Connection>j__TPar get_Connection()
  <Exception>j__TPar get_Exception()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <ConnectionId>j__TPar ConnectionId, <Connection>j__TPar Connection, <Exception>j__TPar Exception, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType6`7
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <ConnectionId>j__TPar <ConnectionId>i__Field
  <Connection>j__TPar <Connection>i__Field
  <Statistics>j__TPar <Statistics>i__Field
  <Exception>j__TPar <Exception>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <ConnectionId>j__TPar ConnectionId
  <Connection>j__TPar Connection
  <Statistics>j__TPar Statistics
  <Exception>j__TPar Exception
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <ConnectionId>j__TPar get_ConnectionId()
  <Connection>j__TPar get_Connection()
  <Statistics>j__TPar get_Statistics()
  <Exception>j__TPar get_Exception()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <ConnectionId>j__TPar ConnectionId, <Connection>j__TPar Connection, <Statistics>j__TPar Statistics, <Exception>j__TPar Exception, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType7`5
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <IsolationLevel>j__TPar <IsolationLevel>i__Field
  <Connection>j__TPar <Connection>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <IsolationLevel>j__TPar IsolationLevel
  <Connection>j__TPar Connection
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <IsolationLevel>j__TPar get_IsolationLevel()
  <Connection>j__TPar get_Connection()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <IsolationLevel>j__TPar IsolationLevel, <Connection>j__TPar Connection, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType8`6
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <IsolationLevel>j__TPar <IsolationLevel>i__Field
  <Connection>j__TPar <Connection>i__Field
  <Exception>j__TPar <Exception>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <IsolationLevel>j__TPar IsolationLevel
  <Connection>j__TPar Connection
  <Exception>j__TPar Exception
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <IsolationLevel>j__TPar get_IsolationLevel()
  <Connection>j__TPar get_Connection()
  <Exception>j__TPar get_Exception()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <IsolationLevel>j__TPar IsolationLevel, <Connection>j__TPar Connection, <Exception>j__TPar Exception, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType9`6
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <IsolationLevel>j__TPar <IsolationLevel>i__Field
  <Connection>j__TPar <Connection>i__Field
  <TransactionName>j__TPar <TransactionName>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <IsolationLevel>j__TPar IsolationLevel
  <Connection>j__TPar Connection
  <TransactionName>j__TPar TransactionName
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <IsolationLevel>j__TPar get_IsolationLevel()
  <Connection>j__TPar get_Connection()
  <TransactionName>j__TPar get_TransactionName()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <IsolationLevel>j__TPar IsolationLevel, <Connection>j__TPar Connection, <TransactionName>j__TPar TransactionName, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType10`7
Наследуется от: object
Поля:
  <OperationId>j__TPar <OperationId>i__Field
  <Operation>j__TPar <Operation>i__Field
  <IsolationLevel>j__TPar <IsolationLevel>i__Field
  <Connection>j__TPar <Connection>i__Field
  <TransactionName>j__TPar <TransactionName>i__Field
  <Exception>j__TPar <Exception>i__Field
  <Timestamp>j__TPar <Timestamp>i__Field
Свойства:
  <OperationId>j__TPar OperationId
  <Operation>j__TPar Operation
  <IsolationLevel>j__TPar IsolationLevel
  <Connection>j__TPar Connection
  <TransactionName>j__TPar TransactionName
  <Exception>j__TPar Exception
  <Timestamp>j__TPar Timestamp
Методы:
  <OperationId>j__TPar get_OperationId()
  <Operation>j__TPar get_Operation()
  <IsolationLevel>j__TPar get_IsolationLevel()
  <Connection>j__TPar get_Connection()
  <TransactionName>j__TPar get_TransactionName()
  <Exception>j__TPar get_Exception()
  <Timestamp>j__TPar get_Timestamp()
  void .ctor(<OperationId>j__TPar OperationId, <Operation>j__TPar Operation, <IsolationLevel>j__TPar IsolationLevel, <Connection>j__TPar Connection, <TransactionName>j__TPar TransactionName, <Exception>j__TPar Exception, <Timestamp>j__TPar Timestamp)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Interop
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: SqlDependencyProcessDispatcher
Наследуется от: MarshalByRefObject
Поля:
  SqlDependencyProcessDispatcher s_staticInstance
  Dictionary`2<SqlConnectionContainerHashHelper, SqlConnectionContainer> _connectionContainers
  Dictionary`2<string, SqlDependencyPerAppDomainDispatcher> _sqlDependencyPerAppDomainDispatchers
Свойства:
  SqlDependencyProcessDispatcher SingletonProcessDispatcher
Методы:
  void .ctor(object dummyVariable)
  void .ctor()
  SqlDependencyProcessDispatcher get_SingletonProcessDispatcher()
  SqlConnectionContainerHashHelper GetHashHelper(string connectionString, SqlConnectionStringBuilder& connectionStringBuilder, DbConnectionPoolIdentity& identity, String& user, string queue)
  object InitializeLifetimeService()
  void Invalidate(string server, SqlNotification sqlNotification)
  void QueueAppDomainUnloading(string appDomainKey)
  void AppDomainUnloading(object state)
  bool StartWithDefault(string connectionString, String& server, DbConnectionPoolIdentity& identity, String& user, String& database, String& service, string appDomainKey, SqlDependencyPerAppDomainDispatcher dispatcher, Boolean& errorOccurred, Boolean& appDomainStart)
  bool Start(string connectionString, string queue, string appDomainKey, SqlDependencyPerAppDomainDispatcher dispatcher)
  bool Start(string connectionString, String& server, DbConnectionPoolIdentity& identity, String& user, String& database, String& queueService, string appDomainKey, SqlDependencyPerAppDomainDispatcher dispatcher, Boolean& errorOccurred, Boolean& appDomainStart, bool useDefaults)
  bool Stop(string connectionString, String& server, DbConnectionPoolIdentity& identity, String& user, String& database, String& queueService, string appDomainKey, Boolean& appDomainStop)
  void .cctor()
--------------------------------------------------
Класс: AssemblyRef
Наследуется от: object
Поля:
  string SystemConfiguration
  string System
  string EcmaPublicKey
  string FrameworkPublicKeyFull
  string FrameworkPublicKeyFull2
  string MicrosoftPublicKey
  string MicrosoftJScript
  string MicrosoftVSDesigner
  string SystemData
  string SystemDesign
  string SystemDrawing
  string SystemWeb
  string SystemWebExtensions
  string SystemWindowsForms
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  int MonoCorlibVersion
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: Locale
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string GetText(string msg)
  string GetText(string fmt, Object[] args)
--------------------------------------------------
Класс: SR
Наследуется от: object
Поля:
  string ADP_CollectionIndexString
  string ADP_CollectionInvalidType
  string ADP_CollectionIsNotParent
  string ADP_CollectionNullValue
  string ADP_CollectionRemoveInvalidObject
  string ADP_CollectionUniqueValue
  string ADP_ConnectionStateMsg_Closed
  string ADP_ConnectionStateMsg_Connecting
  string ADP_ConnectionStateMsg_Open
  string ADP_ConnectionStateMsg_OpenExecuting
  string ADP_ConnectionStateMsg_OpenFetching
  string ADP_ConnectionStateMsg
  string ADP_ConnectionStringSyntax
  string ADP_DataReaderClosed
  string ADP_EmptyString
  string ADP_InvalidEnumerationValue
  string ADP_InvalidKey
  string ADP_InvalidValue
  string Xml_SimpleTypeNotSupported
  string Xml_MissingAttribute
  string Xml_ValueOutOfRange
  string Xml_AttributeValues
  string Xml_RelationParentNameMissing
  string Xml_RelationChildNameMissing
  string Xml_RelationTableKeyMissing
  string Xml_RelationChildKeyMissing
  string Xml_UndefinedDatatype
  string Xml_DatatypeNotDefined
  string Xml_InvalidField
  string Xml_InvalidSelector
  string Xml_InvalidKey
  string Xml_DuplicateConstraint
  string Xml_CannotConvert
  string Xml_MissingRefer
  string Xml_MismatchKeyLength
  string Xml_CircularComplexType
  string Xml_CannotInstantiateAbstract
  string Xml_MultipleTargetConverterError
  string Xml_MultipleTargetConverterEmpty
  string Xml_MergeDuplicateDeclaration
  string Xml_MissingTable
  string Xml_MissingSQL
  string Xml_ColumnConflict
  string Xml_InvalidPrefix
  string Xml_NestedCircular
  string Xml_FoundEntity
  string Xml_PolymorphismNotSupported
  string Xml_CanNotDeserializeObjectType
  string Xml_DataTableInferenceNotSupported
  string Xml_MultipleParentRows
  string Xml_IsDataSetAttributeMissingInSchema
  string Xml_TooManyIsDataSetAtributeInSchema
  string Xml_DynamicWithoutXmlSerializable
  string Expr_NYI
  string Expr_MissingOperand
  string Expr_TypeMismatch
  string Expr_ExpressionTooComplex
  string Expr_UnboundName
  string Expr_InvalidString
  string Expr_UndefinedFunction
  string Expr_Syntax
  string Expr_FunctionArgumentCount
  string Expr_MissingRightParen
  string Expr_UnknownToken
  string Expr_UnknownToken1
  string Expr_DatatypeConvertion
  string Expr_DatavalueConvertion
  string Expr_InvalidName
  string Expr_InvalidDate
  string Expr_NonConstantArgument
  string Expr_InvalidPattern
  string Expr_InWithoutParentheses
  string Expr_ArgumentType
  string Expr_ArgumentTypeInteger
  string Expr_TypeMismatchInBinop
  string Expr_AmbiguousBinop
  string Expr_InWithoutList
  string Expr_UnsupportedOperator
  string Expr_InvalidNameBracketing
  string Expr_MissingOperandBefore
  string Expr_TooManyRightParentheses
  string Expr_UnresolvedRelation
  string Expr_AggregateArgument
  string Expr_AggregateUnbound
  string Expr_EvalNoContext
  string Expr_ExpressionUnbound
  string Expr_ComputeNotAggregate
  string Expr_FilterConvertion
  string Expr_InvalidType
  string Expr_LookupArgument
  string Expr_InvokeArgument
  string Expr_ArgumentOutofRange
  string Expr_IsSyntax
  string Expr_Overflow
  string Expr_BindFailure
  string Expr_InvalidHoursArgument
  string Expr_InvalidMinutesArgument
  string Expr_InvalidTimeZoneRange
  string Expr_MismatchKindandTimeSpan
  string Expr_UnsupportedType
  string Data_EnforceConstraints
  string Data_CannotModifyCollection
  string Data_CaseInsensitiveNameConflict
  string Data_NamespaceNameConflict
  string Data_InvalidOffsetLength
  string Data_ArgumentOutOfRange
  string Data_ArgumentNull
  string Data_ArgumentContainsNull
  string DataColumns_OutOfRange
  string DataColumns_Add1
  string DataColumns_Add2
  string DataColumns_Add3
  string DataColumns_Add4
  string DataColumns_AddDuplicate
  string DataColumns_AddDuplicate2
  string DataColumns_AddDuplicate3
  string DataColumns_Remove
  string DataColumns_RemovePrimaryKey
  string DataColumns_RemoveChildKey
  string DataColumns_RemoveConstraint
  string DataColumn_AutoIncrementAndExpression
  string DataColumn_AutoIncrementAndDefaultValue
  string DataColumn_DefaultValueAndAutoIncrement
  string DataColumn_AutoIncrementSeed
  string DataColumn_NameRequired
  string DataColumn_ChangeDataType
  string DataColumn_NullDataType
  string DataColumn_DefaultValueDataType
  string DataColumn_DefaultValueDataType1
  string DataColumn_DefaultValueColumnDataType
  string DataColumn_ReadOnlyAndExpression
  string DataColumn_UniqueAndExpression
  string DataColumn_ExpressionAndUnique
  string DataColumn_ExpressionAndReadOnly
  string DataColumn_ExpressionAndConstraint
  string DataColumn_ExpressionInConstraint
  string DataColumn_ExpressionCircular
  string DataColumn_NullKeyValues
  string DataColumn_NullValues
  string DataColumn_ReadOnly
  string DataColumn_NonUniqueValues
  string DataColumn_NotInTheTable
  string DataColumn_NotInAnyTable
  string DataColumn_SetFailed
  string DataColumn_CannotSetToNull
  string DataColumn_LongerThanMaxLength
  string DataColumn_HasToBeStringType
  string DataColumn_CannotSetMaxLength
  string DataColumn_CannotSetMaxLength2
  string DataColumn_CannotSimpleContentType
  string DataColumn_CannotSimpleContent
  string DataColumn_ExceedMaxLength
  string DataColumn_NotAllowDBNull
  string DataColumn_CannotChangeNamespace
  string DataColumn_AutoIncrementCannotSetIfHasData
  string DataColumn_NotInTheUnderlyingTable
  string DataColumn_InvalidDataColumnMapping
  string DataColumn_CannotSetDateTimeModeForNonDateTimeColumns
  string DataColumn_DateTimeMode
  string DataColumn_INullableUDTwithoutStaticNull
  string DataColumn_UDTImplementsIChangeTrackingButnotIRevertible
  string DataColumn_SetAddedAndModifiedCalledOnNonUnchanged
  string DataColumn_OrdinalExceedMaximun
  string DataColumn_NullableTypesNotSupported
  string DataConstraint_NoName
  string DataConstraint_Violation
  string DataConstraint_ViolationValue
  string DataConstraint_NotInTheTable
  string DataConstraint_OutOfRange
  string DataConstraint_Duplicate
  string DataConstraint_DuplicateName
  string DataConstraint_UniqueViolation
  string DataConstraint_ForeignTable
  string DataConstraint_ParentValues
  string DataConstraint_AddFailed
  string DataConstraint_RemoveFailed
  string DataConstraint_NeededForForeignKeyConstraint
  string DataConstraint_CascadeDelete
  string DataConstraint_CascadeUpdate
  string DataConstraint_ClearParentTable
  string DataConstraint_ForeignKeyViolation
  string DataConstraint_BadObjectPropertyAccess
  string DataConstraint_RemoveParentRow
  string DataConstraint_AddPrimaryKeyConstraint
  string DataConstraint_CantAddConstraintToMultipleNestedTable
  string DataKey_TableMismatch
  string DataKey_NoColumns
  string DataKey_TooManyColumns
  string DataKey_DuplicateColumns
  string DataKey_RemovePrimaryKey
  string DataKey_RemovePrimaryKey1
  string DataRelation_ColumnsTypeMismatch
  string DataRelation_KeyColumnsIdentical
  string DataRelation_KeyLengthMismatch
  string DataRelation_KeyZeroLength
  string DataRelation_ForeignRow
  string DataRelation_NoName
  string DataRelation_ForeignTable
  string DataRelation_ForeignDataSet
  string DataRelation_GetParentRowTableMismatch
  string DataRelation_SetParentRowTableMismatch
  string DataRelation_DataSetMismatch
  string DataRelation_TablesInDifferentSets
  string DataRelation_AlreadyExists
  string DataRelation_DoesNotExist
  string DataRelation_AlreadyInOtherDataSet
  string DataRelation_AlreadyInTheDataSet
  string DataRelation_DuplicateName
  string DataRelation_NotInTheDataSet
  string DataRelation_OutOfRange
  string DataRelation_TableNull
  string DataRelation_TableWasRemoved
  string DataRelation_ChildTableMismatch
  string DataRelation_ParentTableMismatch
  string DataRelation_RelationNestedReadOnly
  string DataRelation_TableCantBeNestedInTwoTables
  string DataRelation_LoopInNestedRelations
  string DataRelation_CaseLocaleMismatch
  string DataRelation_ParentOrChildColumnsDoNotHaveDataSet
  string DataRelation_InValidNestedRelation
  string DataRelation_InValidNamespaceInNestedRelation
  string DataRow_NotInTheDataSet
  string DataRow_NotInTheTable
  string DataRow_ParentRowNotInTheDataSet
  string DataRow_EditInRowChanging
  string DataRow_EndEditInRowChanging
  string DataRow_BeginEditInRowChanging
  string DataRow_CancelEditInRowChanging
  string DataRow_DeleteInRowDeleting
  string DataRow_ValuesArrayLength
  string DataRow_NoCurrentData
  string DataRow_NoOriginalData
  string DataRow_NoProposedData
  string DataRow_RemovedFromTheTable
  string DataRow_DeletedRowInaccessible
  string DataRow_InvalidVersion
  string DataRow_OutOfRange
  string DataRow_RowInsertOutOfRange
  string DataRow_RowInsertMissing
  string DataRow_RowOutOfRange
  string DataRow_AlreadyInOtherCollection
  string DataRow_AlreadyInTheCollection
  string DataRow_AlreadyDeleted
  string DataRow_Empty
  string DataRow_AlreadyRemoved
  string DataRow_MultipleParents
  string DataRow_InvalidRowBitPattern
  string DataSet_SetNameToEmpty
  string DataSet_SetDataSetNameConflicting
  string DataSet_UnsupportedSchema
  string DataSet_CannotChangeCaseLocale
  string DataSet_CannotChangeSchemaSerializationMode
  string DataTable_ForeignPrimaryKey
  string DataTable_CannotAddToSimpleContent
  string DataTable_NoName
  string DataTable_MultipleSimpleContentColumns
  string DataTable_MissingPrimaryKey
  string DataTable_InvalidSortString
  string DataTable_CanNotSerializeDataTableHierarchy
  string DataTable_CanNotRemoteDataTable
  string DataTable_CanNotSetRemotingFormat
  string DataTable_CanNotSerializeDataTableWithEmptyName
  string DataTable_DuplicateName
  string DataTable_DuplicateName2
  string DataTable_SelfnestedDatasetConflictingName
  string DataTable_DatasetConflictingName
  string DataTable_AlreadyInOtherDataSet
  string DataTable_AlreadyInTheDataSet
  string DataTable_NotInTheDataSet
  string DataTable_OutOfRange
  string DataTable_InRelation
  string DataTable_InConstraint
  string DataTable_TableNotFound
  string DataMerge_MissingDefinition
  string DataMerge_MissingConstraint
  string DataMerge_DataTypeMismatch
  string DataMerge_PrimaryKeyMismatch
  string DataMerge_PrimaryKeyColumnsMismatch
  string DataMerge_ReltionKeyColumnsMismatch
  string DataMerge_MissingColumnDefinition
  string DataIndex_RecordStateRange
  string DataIndex_FindWithoutSortOrder
  string DataIndex_KeyLength
  string DataStorage_AggregateException
  string DataStorage_InvalidStorageType
  string DataStorage_ProblematicChars
  string DataStorage_SetInvalidDataType
  string DataStorage_IComparableNotDefined
  string DataView_SetFailed
  string DataView_SetDataSetFailed
  string DataView_SetRowStateFilter
  string DataView_SetTable
  string DataView_CanNotSetDataSet
  string DataView_CanNotUseDataViewManager
  string DataView_CanNotSetTable
  string DataView_CanNotUse
  string DataView_CanNotBindTable
  string DataView_SetIListObject
  string DataView_AddNewNotAllowNull
  string DataView_NotOpen
  string DataView_CreateChildView
  string DataView_CanNotDelete
  string DataView_CanNotEdit
  string DataView_GetElementIndex
  string DataView_AddExternalObject
  string DataView_CanNotClear
  string DataView_InsertExternalObject
  string DataView_RemoveExternalObject
  string DataROWView_PropertyNotFound
  string Range_Argument
  string Range_NullRange
  string RecordManager_MinimumCapacity
  string SqlConvert_ConvertFailed
  string DataSet_DefaultDataException
  string DataSet_DefaultConstraintException
  string DataSet_DefaultDeletedRowInaccessibleException
  string DataSet_DefaultDuplicateNameException
  string DataSet_DefaultInRowChangingEventException
  string DataSet_DefaultInvalidConstraintException
  string DataSet_DefaultMissingPrimaryKeyException
  string DataSet_DefaultNoNullAllowedException
  string DataSet_DefaultReadOnlyException
  string DataSet_DefaultRowNotInTableException
  string DataSet_DefaultVersionNotFoundException
  string Load_ReadOnlyDataModified
  string DataTableReader_InvalidDataTableReader
  string DataTableReader_SchemaInvalidDataTableReader
  string DataTableReader_CannotCreateDataReaderOnEmptyDataSet
  string DataTableReader_DataTableReaderArgumentIsEmpty
  string DataTableReader_ArgumentContainsNullValue
  string DataTableReader_InvalidRowInDataTableReader
  string DataTableReader_DataTableCleared
  string RbTree_InvalidState
  string RbTree_EnumerationBroken
  string NamedSimpleType_InvalidDuplicateNamedSimpleTypeDelaration
  string DataDom_Foliation
  string DataDom_TableNameChange
  string DataDom_TableNamespaceChange
  string DataDom_ColumnNameChange
  string DataDom_ColumnNamespaceChange
  string DataDom_ColumnMappingChange
  string DataDom_TableColumnsChange
  string DataDom_DataSetTablesChange
  string DataDom_DataSetNestedRelationsChange
  string DataDom_DataSetNull
  string DataDom_DataSetNameChange
  string DataDom_CloneNode
  string DataDom_MultipleLoad
  string DataDom_MultipleDataSet
  string DataDom_NotSupport_GetElementById
  string DataDom_NotSupport_EntRef
  string DataDom_NotSupport_Clear
  string ADP_EmptyArray
  string SQL_WrongType
  string ADP_InvalidConnectionOptionValue
  string ADP_KeywordNotSupported
  string ADP_InternalProviderError
  string ADP_NoQuoteChange
  string ADP_MissingSourceCommand
  string ADP_MissingSourceCommandConnection
  string ADP_InvalidMultipartName
  string ADP_InvalidMultipartNameQuoteUsage
  string ADP_InvalidMultipartNameToManyParts
  string ADP_ColumnSchemaExpression
  string ADP_ColumnSchemaMismatch
  string ADP_ColumnSchemaMissing1
  string ADP_ColumnSchemaMissing2
  string ADP_InvalidSourceColumn
  string ADP_MissingColumnMapping
  string ADP_NotSupportedEnumerationValue
  string ADP_MissingTableSchema
  string ADP_InvalidSourceTable
  string ADP_MissingTableMapping
  string ADP_ConnectionRequired_Insert
  string ADP_ConnectionRequired_Update
  string ADP_ConnectionRequired_Delete
  string ADP_ConnectionRequired_Batch
  string ADP_ConnectionRequired_Clone
  string ADP_OpenConnectionRequired_Insert
  string ADP_OpenConnectionRequired_Update
  string ADP_OpenConnectionRequired_Delete
  string ADP_OpenConnectionRequired_Clone
  string ADP_MissingSelectCommand
  string ADP_UnwantedStatementType
  string ADP_FillSchemaRequiresSourceTableName
  string ADP_FillRequiresSourceTableName
  string ADP_FillChapterAutoIncrement
  string ADP_MissingDataReaderFieldType
  string ADP_OnlyOneTableForStartRecordOrMaxRecords
  string ADP_UpdateRequiresSourceTable
  string ADP_UpdateRequiresSourceTableName
  string ADP_UpdateRequiresCommandClone
  string ADP_UpdateRequiresCommandSelect
  string ADP_UpdateRequiresCommandInsert
  string ADP_UpdateRequiresCommandUpdate
  string ADP_UpdateRequiresCommandDelete
  string ADP_UpdateMismatchRowTable
  string ADP_RowUpdatedErrors
  string ADP_RowUpdatingErrors
  string ADP_ResultsNotAllowedDuringBatch
  string ADP_UpdateConcurrencyViolation_Update
  string ADP_UpdateConcurrencyViolation_Delete
  string ADP_UpdateConcurrencyViolation_Batch
  string ADP_InvalidSourceBufferIndex
  string ADP_InvalidDestinationBufferIndex
  string ADP_StreamClosed
  string ADP_InvalidSeekOrigin
  string ADP_DynamicSQLJoinUnsupported
  string ADP_DynamicSQLNoTableInfo
  string ADP_DynamicSQLNoKeyInfoDelete
  string ADP_DynamicSQLNoKeyInfoUpdate
  string ADP_DynamicSQLNoKeyInfoRowVersionDelete
  string ADP_DynamicSQLNoKeyInfoRowVersionUpdate
  string ADP_DynamicSQLNestedQuote
  string SQL_InvalidBufferSizeOrIndex
  string SQL_InvalidDataLength
  string SqlMisc_NullString
  string SqlMisc_MessageString
  string SqlMisc_ArithOverflowMessage
  string SqlMisc_DivideByZeroMessage
  string SqlMisc_NullValueMessage
  string SqlMisc_TruncationMessage
  string SqlMisc_DateTimeOverflowMessage
  string SqlMisc_ConcatDiffCollationMessage
  string SqlMisc_CompareDiffCollationMessage
  string SqlMisc_InvalidFlagMessage
  string SqlMisc_NumeToDecOverflowMessage
  string SqlMisc_ConversionOverflowMessage
  string SqlMisc_InvalidDateTimeMessage
  string SqlMisc_TimeZoneSpecifiedMessage
  string SqlMisc_InvalidArraySizeMessage
  string SqlMisc_InvalidPrecScaleMessage
  string SqlMisc_FormatMessage
  string SqlMisc_SqlTypeMessage
  string SqlMisc_NoBufferMessage
  string SqlMisc_BufferInsufficientMessage
  string SqlMisc_WriteNonZeroOffsetOnNullMessage
  string SqlMisc_WriteOffsetLargerThanLenMessage
  string SqlMisc_NotFilledMessage
  string SqlMisc_AlreadyFilledMessage
  string SqlMisc_ClosedXmlReaderMessage
  string SqlMisc_InvalidOpStreamClosed
  string SqlMisc_InvalidOpStreamNonWritable
  string SqlMisc_InvalidOpStreamNonReadable
  string SqlMisc_InvalidOpStreamNonSeekable
  string ADP_DBConcurrencyExceptionMessage
  string ADP_InvalidMaxRecords
  string ADP_CollectionIndexInt32
  string ADP_MissingTableMappingDestination
  string ADP_InvalidStartRecord
  string DataDom_EnforceConstraintsShouldBeOff
  string DataColumns_RemoveExpression
  string DataRow_RowInsertTwice
  string Xml_ElementTypeNotFound
  string ADP_ConnectionAlreadyOpen
  string ADP_InternalConnectionError
  string ADP_InvalidOffsetValue
  string ADP_TransactionPresent
  string ADP_LocalTransactionPresent
  string ADP_NoConnectionString
  string ADP_OpenConnectionPropertySet
  string ADP_PendingAsyncOperation
  string ADP_PooledOpenTimeout
  string ADP_NonPooledOpenTimeout
  string ADP_SingleValuedProperty
  string ADP_DoubleValuedProperty
  string ADP_InvalidPrefixSuffix
  string Arg_ArrayPlusOffTooSmall
  string Arg_RankMultiDimNotSupported
  string Arg_RemoveArgNotFound
  string ArgumentOutOfRange_NeedNonNegNum
  string ADP_DeriveParametersNotSupported
  string ADP_NoStoredProcedureExists
  string ADP_MissingConnectionOptionValue
  string ADP_InvalidConnectionOptionValueLength
  string SQL_SqlCommandCommandText
  string SQL_BatchedUpdatesNotAvailableOnContextConnection
  string SQL_BulkCopyDestinationTableName
  string SQL_TDSParserTableName
  string SQL_TypeName
  string SQLMSF_FailoverPartnerNotSupported
  string SQL_NotSupportedEnumerationValue
  string ADP_CommandTextRequired
  string ADP_ConnectionRequired
  string ADP_OpenConnectionRequired
  string ADP_TransactionConnectionMismatch
  string ADP_TransactionRequired
  string ADP_OpenReaderExists
  string ADP_CalledTwice
  string ADP_InvalidCommandTimeout
  string ADP_UninitializedParameterSize
  string ADP_PrepareParameterType
  string ADP_PrepareParameterSize
  string ADP_PrepareParameterScale
  string ADP_MismatchedAsyncResult
  string ADP_ClosedConnectionError
  string ADP_ConnectionIsDisabled
  string ADP_EmptyDatabaseName
  string ADP_NonSequentialColumnAccess
  string ADP_InvalidDataType
  string ADP_UnknownDataType
  string ADP_DbTypeNotSupported
  string ADP_VersionDoesNotSupportDataType
  string ADP_ParameterValueOutOfRange
  string ADP_BadParameterName
  string ADP_InvalidSizeValue
  string ADP_NegativeParameter
  string ADP_InvalidMetaDataValue
  string ADP_ParameterConversionFailed
  string ADP_ParallelTransactionsNotSupported
  string ADP_TransactionZombied
  string ADP_InvalidDataLength2
  string ADP_NonSeqByteAccess
  string ADP_InvalidMinMaxPoolSizeValues
  string SQL_InvalidPacketSizeValue
  string SQL_NullEmptyTransactionName
  string SQL_UserInstanceFailoverNotCompatible
  string SQL_EncryptionNotSupportedByClient
  string SQL_EncryptionNotSupportedByServer
  string SQL_InvalidSQLServerVersionUnknown
  string SQL_CannotModifyPropertyAsyncOperationInProgress
  string SQL_InstanceFailure
  string SQL_InvalidPartnerConfiguration
  string SQL_MarsUnsupportedOnConnection
  string SQL_NonLocalSSEInstance
  string SQL_PendingBeginXXXExists
  string SQL_NonXmlResult
  string SQL_InvalidParameterTypeNameFormat
  string SQL_InvalidParameterNameLength
  string SQL_PrecisionValueOutOfRange
  string SQL_ScaleValueOutOfRange
  string SQL_TimeScaleValueOutOfRange
  string SQL_ParameterInvalidVariant
  string SQL_ParameterTypeNameRequired
  string SQL_InvalidInternalPacketSize
  string SQL_InvalidTDSVersion
  string SQL_InvalidTDSPacketSize
  string SQL_ParsingError
  string SQL_ConnectionLockedForBcpEvent
  string SQL_SNIPacketAllocationFailure
  string SQL_SmallDateTimeOverflow
  string SQL_TimeOverflow
  string SQL_MoneyOverflow
  string SQL_CultureIdError
  string SQL_OperationCancelled
  string SQL_SevereError
  string SQL_SSPIGenerateError
  string SQL_KerberosTicketMissingError
  string SQL_SqlServerBrowserNotAccessible
  string SQL_InvalidSSPIPacketSize
  string SQL_SSPIInitializeError
  string SQL_Timeout
  string SQL_Timeout_PreLogin_Begin
  string SQL_Timeout_PreLogin_InitializeConnection
  string SQL_Timeout_PreLogin_SendHandshake
  string SQL_Timeout_PreLogin_ConsumeHandshake
  string SQL_Timeout_Login_Begin
  string SQL_Timeout_Login_ProcessConnectionAuth
  string SQL_Timeout_PostLogin
  string SQL_Timeout_FailoverInfo
  string SQL_Timeout_RoutingDestinationInfo
  string SQL_Duration_PreLogin_Begin
  string SQL_Duration_PreLoginHandshake
  string SQL_Duration_Login_Begin
  string SQL_Duration_Login_ProcessConnectionAuth
  string SQL_Duration_PostLogin
  string SQL_UserInstanceFailure
  string SQL_InvalidRead
  string SQL_NonBlobColumn
  string SQL_NonCharColumn
  string SQL_StreamNotSupportOnColumnType
  string SQL_TextReaderNotSupportOnColumnType
  string SQL_XmlReaderNotSupportOnColumnType
  string SqlDelegatedTransaction_PromotionFailed
  string SQL_BulkLoadMappingInaccessible
  string SQL_BulkLoadMappingsNamesOrOrdinalsOnly
  string SQL_BulkLoadCannotConvertValue
  string SQL_BulkLoadNonMatchingColumnMapping
  string SQL_BulkLoadNonMatchingColumnName
  string SQL_BulkLoadStringTooLong
  string SQL_BulkLoadInvalidTimeout
  string SQL_BulkLoadInvalidVariantValue
  string SQL_BulkLoadExistingTransaction
  string SQL_BulkLoadNoCollation
  string SQL_BulkLoadConflictingTransactionOption
  string SQL_BulkLoadInvalidOperationInsideEvent
  string SQL_BulkLoadMissingDestinationTable
  string SQL_BulkLoadInvalidDestinationTable
  string SQL_BulkLoadNotAllowDBNull
  string Sql_BulkLoadLcidMismatch
  string SQL_BulkLoadPendingOperation
  string SQL_CannotGetDTCAddress
  string SQL_ConnectionDoomed
  string SQL_OpenResultCountExceeded
  string SQL_StreamWriteNotSupported
  string SQL_StreamReadNotSupported
  string SQL_StreamSeekNotSupported
  string SQL_ExClientConnectionId
  string SQL_ExErrorNumberStateClass
  string SQL_ExOriginalClientConnectionId
  string SQL_ExRoutingDestination
  string SQL_UnsupportedSysTxVersion
  string SqlMisc_StreamErrorMessage
  string SqlMisc_TruncationMaxDataMessage
  string SqlMisc_SubclassMustOverride
  string Sql_InternalError
  string ADP_OperationAborted
  string ADP_OperationAbortedExceptionMessage
  string ADP_TransactionCompletedButNotDisposed
  string SqlParameter_UnsupportedTVPOutputParameter
  string SqlParameter_DBNullNotSupportedForTVP
  string SqlParameter_UnexpectedTypeNameForNonStruct
  string NullSchemaTableDataTypeNotSupported
  string InvalidSchemaTableOrdinals
  string SQL_EnumeratedRecordMetaDataChanged
  string SQL_EnumeratedRecordFieldCountChanged
  string GT_Disabled
  string SQL_UnknownSysTxIsolationLevel
  string SQLNotify_AlreadyHasCommand
  string SqlDependency_DatabaseBrokerDisabled
  string SqlDependency_DefaultOptionsButNoStart
  string SqlDependency_NoMatchingServerStart
  string SqlDependency_NoMatchingServerDatabaseStart
  string SqlDependency_EventNoDuplicate
  string SqlDependency_IdMismatch
  string SqlDependency_InvalidTimeout
  string SqlDependency_DuplicateStart
  string SqlMetaData_InvalidSqlDbTypeForConstructorFormat
  string SqlMetaData_NameTooLong
  string SqlMetaData_SpecifyBothSortOrderAndOrdinal
  string SqlProvider_InvalidDataColumnType
  string SqlProvider_NotEnoughColumnsInStructuredType
  string SqlProvider_DuplicateSortOrdinal
  string SqlProvider_MissingSortOrdinal
  string SqlProvider_SortOrdinalGreaterThanFieldCount
  string IEnumerableOfSqlDataRecordHasNoRows
  string SNI_ERROR_1
  string SNI_ERROR_2
  string SNI_ERROR_3
  string SNI_ERROR_5
  string SNI_ERROR_6
  string SNI_ERROR_7
  string SNI_ERROR_8
  string SNI_ERROR_9
  string SNI_ERROR_11
  string SNI_ERROR_12
  string SNI_ERROR_13
  string SNI_ERROR_14
  string SNI_ERROR_15
  string SNI_ERROR_16
  string SNI_ERROR_17
  string SNI_ERROR_18
  string SNI_ERROR_19
  string SNI_ERROR_20
  string SNI_ERROR_21
  string SNI_ERROR_22
  string SNI_ERROR_23
  string SNI_ERROR_24
  string SNI_ERROR_25
  string SNI_ERROR_26
  string SNI_ERROR_27
  string SNI_ERROR_28
  string SNI_ERROR_29
  string SNI_ERROR_30
  string SNI_ERROR_31
  string SNI_ERROR_32
  string SNI_ERROR_33
  string SNI_ERROR_34
  string SNI_ERROR_35
  string SNI_ERROR_36
  string SNI_ERROR_37
  string SNI_ERROR_38
  string SNI_ERROR_39
  string SNI_ERROR_40
  string SNI_ERROR_41
  string SNI_ERROR_42
  string SNI_ERROR_43
  string SNI_ERROR_44
  string SNI_ERROR_47
  string SNI_ERROR_48
  string SNI_ERROR_49
  string SNI_ERROR_50
  string SNI_ERROR_51
  string SNI_ERROR_52
  string SNI_ERROR_53
  string SNI_ERROR_54
  string SNI_ERROR_55
  string SNI_ERROR_56
  string SNI_ERROR_57
  string Snix_Connect
  string Snix_PreLoginBeforeSuccessfulWrite
  string Snix_PreLogin
  string Snix_LoginSspi
  string Snix_Login
  string Snix_EnableMars
  string Snix_AutoEnlist
  string Snix_GetMarsSession
  string Snix_Execute
  string Snix_Read
  string Snix_Close
  string Snix_SendRows
  string Snix_ProcessSspi
  string LocalDB_FailedGetDLLHandle
  string LocalDB_MethodNotFound
  string LocalDB_UnobtainableMessage
  string SQLROR_RecursiveRoutingNotSupported
  string SQLROR_FailoverNotSupported
  string SQLROR_UnexpectedRoutingInfo
  string SQLROR_InvalidRoutingInfo
  string SQLROR_TimeoutAfterRoutingInfo
  string SQLCR_InvalidConnectRetryCountValue
  string SQLCR_InvalidConnectRetryIntervalValue
  string SQLCR_NextAttemptWillExceedQueryTimeout
  string SQLCR_EncryptionChanged
  string SQLCR_TDSVestionNotPreserved
  string SQLCR_AllAttemptsFailed
  string SQLCR_UnrecoverableServer
  string SQLCR_UnrecoverableClient
  string SQLCR_NoCRAckAtReconnection
  string SQL_UnsupportedKeyword
  string SQL_UnsupportedFeature
  string SQL_UnsupportedToken
  string SQL_DbTypeNotSupportedOnThisPlatform
  string SQL_NetworkLibraryNotSupported
  string SNI_PN0
  string SNI_PN1
  string SNI_PN2
  string SNI_PN3
  string SNI_PN4
  string SNI_PN5
  string SNI_PN6
  string SNI_PN7
  string SNI_PN8
  string SNI_PN9
  string AZURESQL_GenericEndpoint
  string AZURESQL_GermanEndpoint
  string AZURESQL_UsGovEndpoint
  string AZURESQL_ChinaEndpoint
  string net_nego_channel_binding_not_supported
  string net_gssapi_operation_failed_detailed
  string net_gssapi_operation_failed
  string net_ntlm_not_possible_default_cred
  string net_nego_not_supported_empty_target_with_defaultcreds
  string net_nego_server_not_supported
  string net_nego_protection_level_not_supported
  string net_context_buffer_too_small
  string net_auth_message_not_encrypted
  string net_securitypackagesupport
  string net_log_operation_failed_with_error
  string net_MethodNotImplementedException
  string event_OperationReturnedSomething
  string net_invalid_enum
  string SSPIInvalidHandleType
  string LocalDBNotSupported
  string PlatformNotSupported_DataSqlClient
  string SqlParameter_InvalidTableDerivedPrecisionForTvp
  string SqlProvider_InvalidDataColumnMaxLength
  string MDF_InvalidXmlInvalidValue
  string MDF_CollectionNameISNotUnique
  string MDF_InvalidXmlMissingColumn
  string MDF_InvalidXml
  string MDF_NoColumns
  string MDF_QueryFailed
  string MDF_TooManyRestrictions
  string MDF_DataTableDoesNotExist
  string MDF_UndefinedCollection
  string MDF_UnsupportedVersion
  string MDF_MissingRestrictionColumn
  string MDF_MissingRestrictionRow
  string MDF_IncorrectNumberOfDataSourceInformationRows
  string MDF_MissingDataSourceInformationColumn
  string MDF_AmbigousCollectionName
  string MDF_UnableToBuildCollection
  string ADP_CollectionIsParent
  string ADP_InvalidDataDirectory
  string ADP_QuotePrefixNotSet
  string MDF_InvalidRestrictionValue
  string MDF_UndefinedPopulationMechanism
  string ODBC_ODBCCommandText
  string ODBC_NotSupportedEnumerationValue
  string ADP_DatabaseNameTooLong
  string ADP_DataReaderNoData
  string ADP_NumericToDecimalOverflow
  string ADP_UnknownDataTypeCode
  string ADP_DbRecordReadOnly
  string ADP_OffsetOutOfRangeException
  string ODBC_GetSchemaRestrictionRequired
  string ADP_OdbcNoTypesFromProvider
  string OdbcConnection_ConnectionStringTooLong
  string Odbc_UnknownSQLType
  string Odbc_NegativeArgument
  string Odbc_CantSetPropertyOnOpenConnection
  string Odbc_NoMappingForSqlTransactionLevel
  string Odbc_CantEnableConnectionpooling
  string Odbc_CantAllocateEnvironmentHandle
  string Odbc_FailedToGetDescriptorHandle
  string Odbc_NotInTransaction
  string Odbc_ExceptionMessage
  string Odbc_ConnectionClosed
  string Odbc_OpenConnectionNoOwner
  string Odbc_PlatformNotSupported
  string Odbc_UnixOdbcNotFound
Свойства:
Методы:
  string GetString(string name, Object[] args)
  string GetString(CultureInfo culture, string name, Object[] args)
  string GetString(string name)
  string GetString(CultureInfo culture, string name)
  string Format(string resourceFormat, Object[] args)
  string Format(string resourceFormat, object p1)
  string Format(string resourceFormat, object p1, object p2)
  string Format(string resourceFormat, object p1, object p2, object p3)
  string GetResourceString(string resourceKey, string defaultString)
--------------------------------------------------
Класс: DiagnosticListener
Наследуется от: object
Поля:
  bool DiagnosticListenerEnabled
Свойства:
Методы:
  void .ctor(string s)
  bool IsEnabled(string s)
  void Write(string s1, object s2)
  void .cctor()
--------------------------------------------------
Класс: Res
Наследуется от: object
Поля:
  string CodeGen_InvalidIdentifier
  string CodeGen_DuplicateTableName
  string CodeGen_TypeCantBeNull
  string CodeGen_NoCtor0
  string CodeGen_NoCtor1
  string SQLUDT_MaxByteSizeValue
  string SqlUdt_InvalidUdtMessage
  string Sql_NullCommandText
  string Sql_MismatchedMetaDataDirectionArrayLengths
  string ADP_InvalidXMLBadVersion
  string ADP_NotAPermissionElement
  string ADP_PermissionTypeMismatch
  string ConfigProviderNotFound
  string ConfigProviderInvalid
  string ConfigProviderNotInstalled
  string ConfigProviderMissing
  string ConfigBaseElementsOnly
  string ConfigBaseNoChildNodes
  string ConfigUnrecognizedAttributes
  string ConfigUnrecognizedElement
  string ConfigSectionsUnique
  string ConfigRequiredAttributeMissing
  string ConfigRequiredAttributeEmpty
  string ADP_QuotePrefixNotSet
Свойства:
Методы:
  string GetString(string name)
  string GetString(string name, Object[] args)
--------------------------------------------------
Класс: ThisAssembly
Наследуется от: object
Поля:
  string InformationalVersion
Свойства:
Методы:
--------------------------------------------------
Класс: System.NotImplemented
Наследуется от: object
Поля:
Свойства:
  Exception ByDesign
Методы:
  Exception get_ByDesign()
  Exception ByDesignWithMessage(string message)
  Exception ActiveIssue(string issue)
--------------------------------------------------
Класс: System.HResults
Наследуется от: object
Поля:
  int Data
  int DataDeletedRowInaccessible
  int DataDuplicateName
  int DataInRowChangingEvent
  int DataInvalidConstraint
  int DataMissingPrimaryKey
  int DataNoNullAllowed
  int DataReadOnly
  int DataRowNotInTable
  int DataVersionNotFound
  int DataConstraint
  int StrongTyping
  int SqlType
  int SqlNullValue
  int SqlTruncate
  int DBConcurrency
  int OperationAborted
  int OdbcException
Свойства:
Методы:
--------------------------------------------------
Класс: System.MonoTODOAttribute
Наследуется от: Attribute
Поля:
  string comment
Свойства:
  string Comment
Методы:
  void .ctor()
  void .ctor(string comment)
  string get_Comment()
--------------------------------------------------
Класс: System.MonoDocumentationNoteAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoExtensionAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoInternalNoteAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoLimitationAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoNotSupportedAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.Configuration.PrivilegedConfigurationManager
Наследуется от: object
Поля:
Свойства:
  ConnectionStringSettingsCollection ConnectionStrings
Методы:
  ConnectionStringSettingsCollection get_ConnectionStrings()
  object GetSection(string sectionName)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FriendAccessAllowedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Xml.BaseTreeIterator
Наследуется от: object
Поля:
  DataSetMapper mapper
Свойства:
  XmlNode CurrentNode
Методы:
  void .ctor(DataSetMapper mapper)
  XmlNode get_CurrentNode()
  bool Next()
  bool NextRight()
  bool NextRowElement()
  bool NextRightRowElement()
  bool OnRowElement()
--------------------------------------------------
Класс: System.Xml.DataDocumentXPathNavigator
Наследуется от: XPathNavigator
Поля:
  XPathNodePointer _curNode
  XmlDataDocument _doc
  XPathNodePointer _temp
Свойства:
  XPathNodePointer CurNode
  XmlDataDocument Document
  XPathNodeType NodeType
  string LocalName
  string NamespaceURI
  string Name
  string Prefix
  string Value
  string BaseURI
  string XmlLang
  bool IsEmptyElement
  XmlNameTable NameTable
  bool HasAttributes
  bool HasChildren
Методы:
  void .ctor(XmlDataDocument doc, XmlNode node)
  void .ctor(DataDocumentXPathNavigator other)
  XPathNavigator Clone()
  XPathNodePointer get_CurNode()
  XmlDataDocument get_Document()
  XPathNodeType get_NodeType()
  string get_LocalName()
  string get_NamespaceURI()
  string get_Name()
  string get_Prefix()
  string get_Value()
  string get_BaseURI()
  string get_XmlLang()
  bool get_IsEmptyElement()
  XmlNameTable get_NameTable()
  bool get_HasAttributes()
  string GetAttribute(string localName, string namespaceURI)
  string GetNamespace(string name)
  bool MoveToNamespace(string name)
  bool MoveToFirstNamespace(XPathNamespaceScope namespaceScope)
  bool MoveToNextNamespace(XPathNamespaceScope namespaceScope)
  bool MoveToAttribute(string localName, string namespaceURI)
  bool MoveToFirstAttribute()
  bool MoveToNextAttribute()
  bool MoveToNext()
  bool MoveToPrevious()
  bool MoveToFirst()
  bool get_HasChildren()
  bool MoveToFirstChild()
  bool MoveToParent()
  void MoveToRoot()
  bool MoveTo(XPathNavigator other)
  bool MoveToId(string id)
  bool IsSamePosition(XPathNavigator other)
  XmlNode System.Xml.IHasXmlNode.GetNode()
  XmlNodeOrder ComparePosition(XPathNavigator other)
--------------------------------------------------
Класс: System.Xml.DataPointer
Наследуется от: object
Поля:
  XmlDataDocument _doc
  XmlNode _node
  DataColumn _column
  bool _fOnValue
  bool _bNeedFoliate
  bool _isInUse
Свойства:
  DataRow Row
  int AttributeCount
  XmlNodeType NodeType
  string LocalName
  string NamespaceURI
  string Name
  string Prefix
  string Value
  bool IsEmptyElement
  bool IsDefault
  string PublicId
  string SystemId
  string InternalSubset
  XmlDeclaration Declaration
  string Encoding
  string Standalone
  string Version
Методы:
  void .ctor(XmlDataDocument doc, XmlNode node)
  void .ctor(DataPointer pointer)
  void AddPointer()
  XmlBoundElement GetRowElement()
  DataRow get_Row()
  bool IsFoliated(XmlNode node)
  void MoveTo(DataPointer pointer)
  void MoveTo(XmlNode node)
  void MoveTo(XmlNode node, DataColumn column, bool fOnValue)
  DataColumn NextColumn(DataRow row, DataColumn col, bool fAttribute, bool fNulls)
  DataColumn NthColumn(DataRow row, bool fAttribute, int iColumn, bool fNulls)
  int ColumnCount(DataRow row, bool fAttribute, bool fNulls)
  bool MoveToFirstChild()
  bool MoveToNextSibling()
  bool MoveToParent()
  bool MoveToOwnerElement()
  int get_AttributeCount()
  bool MoveToAttribute(int i)
  XmlNodeType get_NodeType()
  string get_LocalName()
  string get_NamespaceURI()
  string get_Name()
  bool IsLocalNameEmpty(XmlNodeType nt)
  string get_Prefix()
  string get_Value()
  bool System.Xml.IXmlDataVirtualNode.IsOnNode(XmlNode nodeToCheck)
  bool System.Xml.IXmlDataVirtualNode.IsOnColumn(DataColumn col)
  XmlNode GetNode()
  bool get_IsEmptyElement()
  bool get_IsDefault()
  void System.Xml.IXmlDataVirtualNode.OnFoliated(XmlNode foliatedNode)
  void RealFoliate()
  string get_PublicId()
  string get_SystemId()
  string get_InternalSubset()
  XmlDeclaration get_Declaration()
  string get_Encoding()
  string get_Standalone()
  string get_Version()
  void AssertValid()
  bool System.Xml.IXmlDataVirtualNode.IsInUse()
  void SetNoLongerUse()
--------------------------------------------------
Класс: System.Xml.DataSetMapper
Наследуется от: object
Поля:
  Hashtable _tableSchemaMap
  Hashtable _columnSchemaMap
  XmlDataDocument _doc
  DataSet _dataSet
  string strReservedXmlns
Свойства:
Методы:
  void .ctor()
  void SetupMapping(XmlDataDocument xd, DataSet ds)
  bool IsMapped()
  DataTable SearchMatchingTableSchema(string localName, string namespaceURI)
  DataTable SearchMatchingTableSchema(XmlBoundElement rowElem, XmlBoundElement elem)
  DataColumn GetColumnSchemaForNode(XmlBoundElement rowElem, XmlNode node)
  DataTable GetTableSchemaForElement(XmlElement elem)
  DataTable GetTableSchemaForElement(XmlBoundElement be)
  bool IsNotMapped(DataColumn c)
  DataRow GetRowFromElement(XmlElement e)
  DataRow GetRowFromElement(XmlBoundElement be)
  bool GetRegion(XmlNode node, XmlBoundElement& rowElem)
  bool IsRegionRadical(XmlBoundElement rowElem)
  void AddTableSchema(DataTable table)
  void AddColumnSchema(DataColumn col)
  object GetIdentity(string localName, string namespaceURI)
  bool IsNextColumn(DataColumnCollection columns, Int32& iColumn, DataColumn col)
--------------------------------------------------
Класс: System.Xml.IXmlDataVirtualNode
Поля:
Свойства:
Методы:
  bool IsOnNode(XmlNode nodeToCheck)
  bool IsOnColumn(DataColumn col)
  bool IsInUse()
  void OnFoliated(XmlNode foliatedNode)
--------------------------------------------------
Класс: System.Xml.BaseRegionIterator
Наследуется от: BaseTreeIterator
Поля:
Свойства:
Методы:
  void .ctor(DataSetMapper mapper)
--------------------------------------------------
Класс: System.Xml.RegionIterator
Наследуется от: BaseRegionIterator
Поля:
  XmlBoundElement _rowElement
  XmlNode _currentNode
Свойства:
  XmlNode CurrentNode
Методы:
  void .ctor(XmlBoundElement rowElement)
  XmlNode get_CurrentNode()
  bool Next()
  bool NextRight()
  bool NextInitialTextLikeNodes(String& value)
  string GetInitialTextFromNodes(XmlNode& n)
--------------------------------------------------
Класс: System.Xml.TreeIterator
Наследуется от: BaseTreeIterator
Поля:
  XmlNode _nodeTop
  XmlNode _currentNode
Свойства:
  XmlNode CurrentNode
Методы:
  void .ctor(XmlNode nodeTop)
  XmlNode get_CurrentNode()
  bool Next()
  bool NextRight()
--------------------------------------------------
Класс: System.Xml.XPathNodePointer
Наследуется от: object
Поля:
  WeakReference _owner
  XmlDataDocument _doc
  XmlNode _node
  DataColumn _column
  bool _fOnValue
  XmlBoundElement _parentOfNS
  Int32[] s_xmlNodeType_To_XpathNodeType_Map
  string StrReservedXmlns
  string StrReservedXml
  string StrXmlNS
  bool _bNeedFoliate
Свойства:
  bool IsEmptyElement
  XPathNodeType NodeType
  string LocalName
  string Name
  string NamespaceURI
  string Prefix
  string Value
  string InnerText
  string BaseURI
  string XmlLang
  DataRow Row
  int AttributeCount
  bool HasChildren
  XmlNode Node
  XmlDataDocument Document
Методы:
  void .cctor()
  XPathNodeType DecideXPNodeTypeForTextNodes(XmlNode node)
  XPathNodeType ConvertNodeType(XmlNode node)
  bool IsNamespaceNode(XmlNodeType nt, string ns)
  void .ctor(DataDocumentXPathNavigator owner, XmlDataDocument doc, XmlNode node)
  void .ctor(DataDocumentXPathNavigator owner, XPathNodePointer pointer)
  void .ctor(DataDocumentXPathNavigator owner, XmlDataDocument doc, XmlNode node, DataColumn c, bool bOnValue, XmlBoundElement parentOfNS)
  XPathNodePointer Clone(DataDocumentXPathNavigator owner)
  bool get_IsEmptyElement()
  XPathNodeType get_NodeType()
  string get_LocalName()
  string get_Name()
  string get_NamespaceURI()
  string get_Prefix()
  string get_Value()
  string get_InnerText()
  string get_BaseURI()
  string get_XmlLang()
  XmlBoundElement GetRowElement()
  DataRow get_Row()
  bool MoveTo(XPathNodePointer pointer)
  void MoveTo(XmlNode node)
  void MoveTo(XmlNode node, DataColumn column, bool fOnValue)
  bool IsFoliated(XmlNode node)
  int ColumnCount(DataRow row, bool fAttribute)
  int get_AttributeCount()
  DataColumn NextColumn(DataRow row, DataColumn col, bool fAttribute)
  DataColumn PreviousColumn(DataRow row, DataColumn col, bool fAttribute)
  bool MoveToAttribute(string localName, string namespaceURI)
  bool MoveToNextAttribute(bool bFirst)
  bool IsValidChild(XmlNode parent, XmlNode child)
  bool IsValidChild(XmlNode parent, DataColumn c)
  bool MoveToNextSibling()
  bool MoveToPreviousSibling()
  bool MoveToFirst()
  bool get_HasChildren()
  bool MoveToFirstChild()
  bool MoveToParent()
  XmlNode GetParent(XmlNode node)
  void MoveToRoot()
  bool IsSamePosition(XPathNodePointer pointer)
  XmlNodeOrder CompareNamespacePosition(XPathNodePointer other)
  XmlNode GetRoot(XmlNode node, Int32& depth)
  XmlNodeOrder ComparePosition(XPathNodePointer other)
  XmlNode get_Node()
  bool System.Xml.IXmlDataVirtualNode.IsOnNode(XmlNode nodeToCheck)
  bool System.Xml.IXmlDataVirtualNode.IsOnColumn(DataColumn col)
  void System.Xml.IXmlDataVirtualNode.OnFoliated(XmlNode foliatedNode)
  void RealFoliate()
  string GetNamespace(XmlBoundElement be, string name)
  string GetNamespace(string name)
  bool MoveToNamespace(string name)
  bool MoveToNextNamespace(XmlBoundElement be, DataColumn col, XmlAttribute curAttr)
  bool MoveToFirstNamespace(XPathNamespaceScope namespaceScope)
  bool DuplicateNS(XmlBoundElement endElem, string lname)
  bool MoveToNextNamespace(XPathNamespaceScope namespaceScope)
  void AssertValid()
  XmlDataDocument get_Document()
  bool System.Xml.IXmlDataVirtualNode.IsInUse()
--------------------------------------------------
Класс: System.Xml.ElementState
Наследуется от: Enum
Поля:
  int value__
  ElementState None
  ElementState Defoliated
  ElementState WeakFoliation
  ElementState StrongFoliation
  ElementState Foliating
  ElementState Defoliating
Свойства:
Методы:
--------------------------------------------------
Класс: System.Xml.XmlBoundElement
Наследуется от: XmlElement
Поля:
  DataRow _row
  ElementState _state
Свойства:
  XmlAttributeCollection Attributes
  bool HasAttributes
  XmlNode FirstChild
  XmlNode SafeFirstChild
  XmlNode LastChild
  XmlNode PreviousSibling
  XmlNode SafePreviousSibling
  XmlNode NextSibling
  XmlNode SafeNextSibling
  bool HasChildNodes
  string InnerXml
  DataRow Row
  bool IsFoliated
  ElementState ElementState
Методы:
  void .ctor(string prefix, string localName, string namespaceURI, XmlDocument doc)
  XmlAttributeCollection get_Attributes()
  bool get_HasAttributes()
  XmlNode get_FirstChild()
  XmlNode get_SafeFirstChild()
  XmlNode get_LastChild()
  XmlNode get_PreviousSibling()
  XmlNode get_SafePreviousSibling()
  XmlNode get_NextSibling()
  XmlNode get_SafeNextSibling()
  bool get_HasChildNodes()
  XmlNode InsertBefore(XmlNode newChild, XmlNode refChild)
  XmlNode InsertAfter(XmlNode newChild, XmlNode refChild)
  XmlNode ReplaceChild(XmlNode newChild, XmlNode oldChild)
  XmlNode AppendChild(XmlNode newChild)
  void RemoveAllChildren()
  string get_InnerXml()
  void set_InnerXml(string value)
  DataRow get_Row()
  void set_Row(DataRow value)
  bool get_IsFoliated()
  ElementState get_ElementState()
  void set_ElementState(ElementState value)
  void Foliate(ElementState newState)
  void AutoFoliate()
  XmlNode CloneNode(bool deep)
  void WriteContentTo(XmlWriter w)
  void WriteTo(XmlWriter w)
  void WriteRootBoundElementTo(DataPointer dp, XmlWriter w)
  void WriteBoundElementTo(DataPointer dp, XmlWriter w)
  void WriteBoundElementContentTo(DataPointer dp, XmlWriter w)
  void WriteTo(DataPointer dp, XmlWriter w)
  XmlNodeList GetElementsByTagName(string name)
--------------------------------------------------
Класс: System.Xml.XmlDataDocument
Наследуется от: XmlDocument
Поля:
  DataSet _dataSet
  DataSetMapper _mapper
  Hashtable _pointers
  int _countAddPointer
  ArrayList _columnChangeList
  DataRowState _rollbackState
  bool _fBoundToDataSet
  bool _fBoundToDocument
  bool _fDataRowCreatedSpecial
  bool _ignoreXmlEvents
  bool _ignoreDataSetEvents
  bool _isFoliationEnabled
  bool _optimizeStorage
  ElementState _autoFoliationState
  bool _fAssociateDataRow
  object _foliationLock
  string XSI_NIL
  string XSI
  bool _bForceExpandEntity
  XmlAttribute _attrXml
  bool _bLoadFromDataSet
  bool _bHasXSINIL
Свойства:
  ElementState AutoFoliationState
  DataSet DataSet
  bool IgnoreXmlEvents
  bool IgnoreDataSetEvents
  bool IsFoliationEnabled
  DataSetMapper Mapper
Методы:
  void AddPointer(IXmlDataVirtualNode pointer)
  void AssertPointerPresent(IXmlDataVirtualNode pointer)
  void AttachDataSet(DataSet ds)
  void SyncRows(DataRow parentRow, XmlNode node, bool fAddRowsToTable)
  void SyncTree(XmlNode node)
  ElementState get_AutoFoliationState()
  void set_AutoFoliationState(ElementState value)
  void BindForLoad()
  void Bind(bool fLoadFromDataSet)
  void Bind(DataRow r, XmlBoundElement e)
  void BindSpecialListeners()
  void UnBindSpecialListeners()
  void BindListeners()
  void BindToDataSet()
  void BindToDocument()
  void BindToTable(DataTable t)
  XmlElement CreateElement(string prefix, string localName, string namespaceURI)
  XmlEntityReference CreateEntityReference(string name)
  DataSet get_DataSet()
  void DefoliateRegion(XmlBoundElement rowElem)
  XmlElement EnsureDocumentElement()
  XmlElement EnsureNonRowDocumentElement()
  XmlElement DemoteDocumentElement()
  void EnsurePopulatedMode()
  void FixNestedChildren(DataRow row, XmlElement rowElement)
  void Foliate(XmlBoundElement node, ElementState newState)
  void Foliate(XmlElement element)
  void FoliateIfDataPointers(DataRow row, XmlElement rowElement)
  void EnsureFoliation(XmlBoundElement rowElem, ElementState foliation)
  void ForceFoliation(XmlBoundElement node, ElementState newState)
  XmlNode GetColumnInsertAfterLocation(DataRow row, DataColumn col, XmlBoundElement rowElement)
  ArrayList GetNestedChildRelations(DataRow row)
  DataRow GetNestedParent(DataRow row)
  DataRelation GetNestedParentRelation(DataRow row)
  DataColumn GetTextOnlyColumn(DataRow row)
  DataRow GetRowFromElement(XmlElement e)
  XmlNode GetRowInsertBeforeLocation(DataRow row, XmlElement rowElement, XmlNode parentElement)
  XmlElement GetElementFromRow(DataRow r)
  bool HasPointers(XmlNode node)
  bool get_IgnoreXmlEvents()
  void set_IgnoreXmlEvents(bool value)
  bool get_IgnoreDataSetEvents()
  void set_IgnoreDataSetEvents(bool value)
  bool IsFoliated(XmlElement element)
  bool IsFoliated(XmlBoundElement be)
  bool get_IsFoliationEnabled()
  void set_IsFoliationEnabled(bool value)
  XmlNode CloneTree(DataPointer other)
  XmlNode CloneTreeInternal(DataPointer other)
  XmlNode CloneNode(bool deep)
  XmlNode CloneNode(DataPointer dp)
  bool IsTextLikeNode(XmlNode n)
  bool IsNotMapped(DataColumn c)
  bool IsSame(DataColumn c, int recNo1, int recNo2)
  bool IsTextOnly(DataColumn c)
  void Load(string filename)
  void Load(Stream inStream)
  void Load(TextReader txtReader)
  void Load(XmlReader reader)
  void LoadDataSetFromTree()
  void LoadTreeFromDataSet(DataSet ds)
  void LoadRows(XmlBoundElement rowElem, XmlNode node)
  DataSetMapper get_Mapper()
  void OnDataRowCreated(object oDataSet, DataRow row)
  void OnClearCalled(object oDataSet, DataTable table)
  void OnDataRowCreatedSpecial(object oDataSet, DataRow row)
  void OnNewRow(DataRow row)
  XmlBoundElement AttachBoundElementToDataRow(DataRow row)
  bool NeedXSI_NilAttr(DataRow row)
  void OnAddRow(DataRow row)
  void OnColumnValueChanged(DataRow row, DataColumn col, XmlBoundElement rowElement)
  void OnColumnChanged(object sender, DataColumnChangeEventArgs args)
  void OnColumnValuesChanged(DataRow row, XmlBoundElement rowElement)
  void OnDeleteRow(DataRow row, XmlBoundElement rowElement)
  void OnDeletingRow(DataRow row, XmlBoundElement rowElement)
  void OnFoliated(XmlNode node)
  DataColumn FindAssociatedParentColumn(DataRelation relation, DataColumn childCol)
  void OnNestedParentChange(DataRow child, XmlBoundElement childElement, DataColumn childCol)
  void OnNodeChanged(object sender, XmlNodeChangedEventArgs args)
  void OnNodeChanging(object sender, XmlNodeChangedEventArgs args)
  void OnNodeInserted(object sender, XmlNodeChangedEventArgs args)
  void OnNodeInserting(object sender, XmlNodeChangedEventArgs args)
  void OnNodeRemoved(object sender, XmlNodeChangedEventArgs args)
  void OnNodeRemoving(object sender, XmlNodeChangedEventArgs args)
  void OnNodeRemovedFromTree(XmlNode node, XmlNode oldParent)
  void OnNodeRemovedFromFragment(XmlNode node, XmlNode oldParent)
  void OnRowChanged(object sender, DataRowChangeEventArgs args)
  void OnRowChanging(object sender, DataRowChangeEventArgs args)
  void OnDataSetPropertyChanging(object oDataSet, PropertyChangedEventArgs args)
  void OnColumnPropertyChanging(object oColumn, PropertyChangedEventArgs args)
  void OnTablePropertyChanging(object oTable, PropertyChangedEventArgs args)
  void OnTableColumnsChanging(object oColumnsCollection, CollectionChangeEventArgs args)
  void OnDataSetTablesChanging(object oTablesCollection, CollectionChangeEventArgs args)
  void OnDataSetRelationsChanging(object oRelationsCollection, CollectionChangeEventArgs args)
  void OnRelationPropertyChanging(object oRelationsCollection, PropertyChangedEventArgs args)
  void OnUndeleteRow(DataRow row, XmlElement rowElement)
  void PromoteChild(XmlNode child, XmlNode prevSibling)
  void PromoteInnerRegions(XmlNode parent)
  void PromoteNonValueChildren(XmlNode parent)
  void RemoveInitialTextNodes(XmlNode node)
  void ReplaceInitialChildText(XmlNode parent, string value)
  XmlNode SafeFirstChild(XmlNode n)
  XmlNode SafeNextSibling(XmlNode n)
  XmlNode SafePreviousSibling(XmlNode n)
  void SetRowValueToNull(DataRow row, DataColumn col)
  void SetRowValueFromXmlText(DataRow row, DataColumn col, string xmlText)
  void SynchronizeRowFromRowElement(XmlBoundElement rowElement)
  void SynchronizeRowFromRowElement(XmlBoundElement rowElement, ArrayList rowElemList)
  void SynchronizeRowFromRowElementEx(XmlBoundElement rowElement, ArrayList rowElemList)
  void UpdateAllColumns(DataRow row, XmlBoundElement rowElement)
  void .ctor()
  void .ctor(DataSet dataset)
  void .ctor(XmlImplementation imp)
  void Init()
  void Init(DataSet ds)
  bool IsConnected(XmlNode node)
  bool IsRowLive(DataRow row)
  void SetNestedParentRow(DataRow childRow, DataRow parentRow)
  void OnNodeInsertedInTree(XmlNode node)
  void OnNodeInsertedInFragment(XmlNode node)
  void OnRowElementInsertedInTree(XmlBoundElement rowElem, ArrayList rowElemList)
  void EnsureDisconnectedDataRow(XmlBoundElement rowElem)
  void OnNonRowElementInsertedInTree(XmlNode node, XmlBoundElement rowElement, ArrayList rowElemList)
  void OnNonRowElementInsertedInFragment(XmlNode node, XmlBoundElement rowElement, ArrayList rowElemList)
  void SetNestedParentRegion(XmlBoundElement childRowElem)
  void SetNestedParentRegion(XmlBoundElement childRowElem, XmlBoundElement parentRowElem)
  bool IsTextNode(XmlNodeType nt)
  XPathNavigator CreateNavigator(XmlNode node)
  void AssertLiveRows(XmlNode node)
  void AssertNonLiveRows(XmlNode node)
  XmlElement GetElementById(string elemId)
  XmlNodeList GetElementsByTagName(string name)
  DataTable[] OrderTables(DataSet ds)
  bool IsSelfRelatedDataTable(DataTable rootTable)
  bool TablesAreOrdered(DataSet ds)
--------------------------------------------------
Класс: System.Xml.XmlDataImplementation
Наследуется от: XmlImplementation
Поля:
Свойства:
Методы:
  void .ctor()
  XmlDocument CreateDocument()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskToApm
Наследуется от: object
Поля:
Свойства:
Методы:
  IAsyncResult Begin(Task task, AsyncCallback callback, object state)
  void End(IAsyncResult asyncResult)
  TResult End(IAsyncResult asyncResult)
  void InvokeCallbackWhenTaskCompletes(Task antecedent, AsyncCallback callback, IAsyncResult asyncResult)
--------------------------------------------------
Класс: System.Net.ContextFlagsAdapterPal
Наследуется от: object
Поля:
  ContextFlagMapping[] s_contextFlagMapping
Свойства:
Методы:
  ContextFlagsPal GetContextFlagsPalFromInterop(GssFlags gssFlags, bool isServer)
  GssFlags GetInteropFromContextFlagsPal(ContextFlagsPal flags, bool isServer)
  void .cctor()
--------------------------------------------------
Класс: System.Net.ContextFlagsPal
Наследуется от: Enum
Поля:
  int value__
  ContextFlagsPal None
  ContextFlagsPal Delegate
  ContextFlagsPal MutualAuth
  ContextFlagsPal ReplayDetect
  ContextFlagsPal SequenceDetect
  ContextFlagsPal Confidentiality
  ContextFlagsPal UseSessionKey
  ContextFlagsPal AllocateMemory
  ContextFlagsPal Connection
  ContextFlagsPal InitExtendedError
  ContextFlagsPal AcceptExtendedError
  ContextFlagsPal InitStream
  ContextFlagsPal AcceptStream
  ContextFlagsPal InitIntegrity
  ContextFlagsPal AcceptIntegrity
  ContextFlagsPal InitManualCredValidation
  ContextFlagsPal InitUseSuppliedCreds
  ContextFlagsPal InitIdentify
  ContextFlagsPal AcceptIdentify
  ContextFlagsPal ProxyBindings
  ContextFlagsPal AllowMissingBindings
  ContextFlagsPal UnverifiedTargetName
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.InternalException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.DebugThreadTracking
Наследуется от: object
Поля:
  Stack`1<ThreadKinds> t_threadKindStack
Свойства:
  Stack`1<ThreadKinds> ThreadKindStack
  ThreadKinds CurrentThreadKind
Методы:
  Stack`1<ThreadKinds> get_ThreadKindStack()
  ThreadKinds get_CurrentThreadKind()
  IDisposable SetThreadKind(ThreadKinds kind)
  void SetThreadSource(ThreadKinds source)
--------------------------------------------------
Класс: System.Net.ThreadKinds
Наследуется от: Enum
Поля:
  int value__
  ThreadKinds Unknown
  ThreadKinds User
  ThreadKinds System
  ThreadKinds Sync
  ThreadKinds Async
  ThreadKinds Timer
  ThreadKinds CompletionPort
  ThreadKinds Worker
  ThreadKinds Finalization
  ThreadKinds Other
  ThreadKinds OwnerMask
  ThreadKinds SyncMask
  ThreadKinds SourceMask
  ThreadKinds SafeSources
  ThreadKinds ThreadPool
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetEventSource
Наследуется от: EventSource
Поля:
  NetEventSource Log
  string MissingMember
  string NullInstance
  string StaticMethodObject
  string NoParameters
  int MaxDumpSize
  int EnterEventId
  int ExitEventId
  int AssociateEventId
  int InfoEventId
  int ErrorEventId
  int CriticalFailureEventId
  int DumpArrayEventId
  int NextAvailableEventId
Свойства:
  bool IsEnabled
Методы:
  void Enter(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Enter(object thisOrContextObject, object arg0, string memberName)
  void Enter(object thisOrContextObject, object arg0, object arg1, string memberName)
  void Enter(object thisOrContextObject, object arg0, object arg1, object arg2, string memberName)
  void Enter(string thisOrContextObject, string memberName, string parameters)
  void Exit(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Exit(object thisOrContextObject, object arg0, string memberName)
  void Exit(object thisOrContextObject, object arg0, object arg1, string memberName)
  void Exit(string thisOrContextObject, string memberName, string result)
  void Info(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Info(object thisOrContextObject, object message, string memberName)
  void Info(string thisOrContextObject, string memberName, string message)
  void Error(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Error(object thisOrContextObject, object message, string memberName)
  void ErrorMessage(string thisOrContextObject, string memberName, string message)
  void Fail(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Fail(object thisOrContextObject, object message, string memberName)
  void CriticalFailure(string thisOrContextObject, string memberName, string message)
  void DumpBuffer(object thisOrContextObject, Byte[] buffer, string memberName)
  void DumpBuffer(object thisOrContextObject, Byte[] buffer, int offset, int count, string memberName)
  void DumpBuffer(object thisOrContextObject, IntPtr bufferPtr, int count, string memberName)
  void DumpBuffer(string thisOrContextObject, string memberName, Byte[] buffer)
  void Associate(object first, object second, string memberName)
  void Associate(object thisOrContextObject, object first, object second, string memberName)
  void Associate(string thisOrContextObject, string memberName, string first, string second)
  void DebugValidateArg(object arg)
  void DebugValidateArg(FormattableString arg)
  bool get_IsEnabled()
  string IdOf(object value)
  int GetHashCode(object value)
  object Format(object value)
  string Format(FormattableString s)
  void WriteEvent(int eventId, string arg1, string arg2, string arg3, string arg4)
  void WriteEvent(int eventId, string arg1, string arg2, Byte[] arg3)
  void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)
  void WriteEvent(int eventId, string arg1, int arg2, string arg3)
  void WriteEvent(int eventId, string arg1, string arg2, int arg3)
  void WriteEvent(int eventId, string arg1, string arg2, string arg3, int arg4)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.NegotiationInfoClass
Наследуется от: object
Поля:
  string NTLM
  string Kerberos
  string Negotiate
  string Basic
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.SecurityStatusPal
Наследуется от: ValueType
Поля:
  SecurityStatusPalErrorCode ErrorCode
  Exception Exception
Свойства:
Методы:
  void .ctor(SecurityStatusPalErrorCode errorCode, Exception exception)
  string ToString()
--------------------------------------------------
Класс: System.Net.SecurityStatusPalErrorCode
Наследуется от: Enum
Поля:
  int value__
  SecurityStatusPalErrorCode NotSet
  SecurityStatusPalErrorCode OK
  SecurityStatusPalErrorCode ContinueNeeded
  SecurityStatusPalErrorCode CompleteNeeded
  SecurityStatusPalErrorCode CompAndContinue
  SecurityStatusPalErrorCode ContextExpired
  SecurityStatusPalErrorCode CredentialsNeeded
  SecurityStatusPalErrorCode Renegotiate
  SecurityStatusPalErrorCode OutOfMemory
  SecurityStatusPalErrorCode InvalidHandle
  SecurityStatusPalErrorCode Unsupported
  SecurityStatusPalErrorCode TargetUnknown
  SecurityStatusPalErrorCode InternalError
  SecurityStatusPalErrorCode PackageNotFound
  SecurityStatusPalErrorCode NotOwner
  SecurityStatusPalErrorCode CannotInstall
  SecurityStatusPalErrorCode InvalidToken
  SecurityStatusPalErrorCode CannotPack
  SecurityStatusPalErrorCode QopNotSupported
  SecurityStatusPalErrorCode NoImpersonation
  SecurityStatusPalErrorCode LogonDenied
  SecurityStatusPalErrorCode UnknownCredentials
  SecurityStatusPalErrorCode NoCredentials
  SecurityStatusPalErrorCode MessageAltered
  SecurityStatusPalErrorCode OutOfSequence
  SecurityStatusPalErrorCode NoAuthenticatingAuthority
  SecurityStatusPalErrorCode IncompleteMessage
  SecurityStatusPalErrorCode IncompleteCredentials
  SecurityStatusPalErrorCode BufferNotEnough
  SecurityStatusPalErrorCode WrongPrincipal
  SecurityStatusPalErrorCode TimeSkew
  SecurityStatusPalErrorCode UntrustedRoot
  SecurityStatusPalErrorCode IllegalMessage
  SecurityStatusPalErrorCode CertUnknown
  SecurityStatusPalErrorCode CertExpired
  SecurityStatusPalErrorCode AlgorithmMismatch
  SecurityStatusPalErrorCode SecurityQosFailed
  SecurityStatusPalErrorCode SmartcardLogonRequired
  SecurityStatusPalErrorCode UnsupportedPreauth
  SecurityStatusPalErrorCode BadBinding
  SecurityStatusPalErrorCode DowngradeDetected
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.NegotiateStreamPal
Наследуется от: object
Поля:
  int NTE_FAIL
Свойства:
Методы:
  string QueryContextClientSpecifiedSpn(SafeDeleteContext securityContext)
  string QueryContextAuthenticationPackage(SafeDeleteContext securityContext)
  Byte[] GssWrap(SafeGssContextHandle context, bool encrypt, Byte[] buffer, int offset, int count)
  int GssUnwrap(SafeGssContextHandle context, Byte[] buffer, int offset, int count)
  bool GssInitSecurityContext(SafeGssContextHandle& context, SafeGssCredHandle credential, bool isNtlm, SafeGssNameHandle targetName, GssFlags inFlags, Byte[] buffer, Byte[]& outputBuffer, UInt32& outFlags, Int32& isNtlmUsed)
  SecurityStatusPal EstablishSecurityContext(SafeFreeNegoCredentials credential, SafeDeleteContext& context, string targetName, ContextFlagsPal inFlags, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, ContextFlagsPal& outFlags)
  SecurityStatusPal InitializeSecurityContext(SafeFreeCredentials credentialsHandle, SafeDeleteContext& securityContext, string spn, ContextFlagsPal requestedContextFlags, SecurityBuffer[] inSecurityBufferArray, SecurityBuffer outSecurityBuffer, ContextFlagsPal& contextFlags)
  SecurityStatusPal AcceptSecurityContext(SafeFreeCredentials credentialsHandle, SafeDeleteContext& securityContext, ContextFlagsPal requestedContextFlags, SecurityBuffer[] inSecurityBufferArray, SecurityBuffer outSecurityBuffer, ContextFlagsPal& contextFlags)
  Win32Exception CreateExceptionFromError(SecurityStatusPal statusCode)
  int QueryMaxTokenSize(string package)
  SafeFreeCredentials AcquireDefaultCredential(string package, bool isServer)
  SafeFreeCredentials AcquireCredentialsHandle(string package, bool isServer, NetworkCredential credential)
  SecurityStatusPal CompleteAuthToken(SafeDeleteContext& securityContext, SecurityBuffer[] inSecurityBufferArray)
  int Encrypt(SafeDeleteContext securityContext, Byte[] buffer, int offset, int count, bool isConfidential, bool isNtlm, Byte[]& output, UInt32 sequenceNumber)
  int Decrypt(SafeDeleteContext securityContext, Byte[] buffer, int offset, int count, bool isConfidential, bool isNtlm, Int32& newOffset, UInt32 sequenceNumber)
  int VerifySignature(SafeDeleteContext securityContext, Byte[] buffer, int offset, int count)
  int MakeSignature(SafeDeleteContext securityContext, Byte[] buffer, int offset, int count, Byte[]& output)
--------------------------------------------------
Класс: System.Net.Security.SecurityBuffer
Наследуется от: object
Поля:
  int size
  SecurityBufferType type
  Byte[] token
  SafeHandle unmanagedToken
  int offset
Свойства:
Методы:
  void .ctor(Byte[] data, int offset, int size, SecurityBufferType tokentype)
  void .ctor(Byte[] data, SecurityBufferType tokentype)
  void .ctor(int size, SecurityBufferType tokentype)
  void .ctor(ChannelBinding binding)
--------------------------------------------------
Класс: System.Net.Security.SecurityBufferType
Наследуется от: Enum
Поля:
  int value__
  SecurityBufferType SECBUFFER_EMPTY
  SecurityBufferType SECBUFFER_DATA
  SecurityBufferType SECBUFFER_TOKEN
  SecurityBufferType SECBUFFER_PKG_PARAMS
  SecurityBufferType SECBUFFER_MISSING
  SecurityBufferType SECBUFFER_EXTRA
  SecurityBufferType SECBUFFER_STREAM_TRAILER
  SecurityBufferType SECBUFFER_STREAM_HEADER
  SecurityBufferType SECBUFFER_PADDING
  SecurityBufferType SECBUFFER_STREAM
  SecurityBufferType SECBUFFER_CHANNEL_BINDINGS
  SecurityBufferType SECBUFFER_TARGET_HOST
  SecurityBufferType SECBUFFER_ALERT
  SecurityBufferType SECBUFFER_APPLICATION_PROTOCOLS
  SecurityBufferType SECBUFFER_READONLY
  SecurityBufferType SECBUFFER_READONLY_WITH_CHECKSUM
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.SafeDeleteContext
Наследуется от: SafeHandle
Поля:
  SafeFreeCredentials _credential
Свойства:
  bool IsInvalid
Методы:
  void .ctor(SafeFreeCredentials credential)
  bool get_IsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeDeleteNegoContext
Наследуется от: SafeDeleteContext
Поля:
  SafeGssNameHandle _targetName
  SafeGssContextHandle _context
  bool _isNtlmUsed
Свойства:
  SafeGssNameHandle TargetName
  bool IsNtlmUsed
  SafeGssContextHandle GssContext
Методы:
  SafeGssNameHandle get_TargetName()
  bool get_IsNtlmUsed()
  SafeGssContextHandle get_GssContext()
  void .ctor(SafeFreeNegoCredentials credential, string targetName)
  void SetGssContext(SafeGssContextHandle context)
  void SetAuthenticationPackage(bool isNtlmUsed)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Net.Security.SafeFreeCredentials
Наследуется от: SafeHandle
Поля:
Свойства:
Методы:
  void .ctor(IntPtr handle, bool ownsHandle)
--------------------------------------------------
Класс: System.Net.Security.SafeCredentialReference
Наследуется от: CriticalHandleMinusOneIsInvalid
Поля:
  SafeFreeCredentials Target
Свойства:
Методы:
  SafeCredentialReference CreateReference(SafeFreeCredentials target)
  void .ctor(SafeFreeCredentials target)
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeNegoCredentials
Наследуется от: SafeFreeCredentials
Поля:
  SafeGssCredHandle _credential
  bool _isNtlmOnly
  string _userName
  bool _isDefault
Свойства:
  SafeGssCredHandle GssCredential
  bool IsNtlmOnly
  string UserName
  bool IsDefault
  bool IsInvalid
Методы:
  SafeGssCredHandle get_GssCredential()
  bool get_IsNtlmOnly()
  string get_UserName()
  bool get_IsDefault()
  void .ctor(bool isNtlmOnly, string username, string password, string domain)
  bool get_IsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Data.AcceptRejectRule
Наследуется от: Enum
Поля:
  int value__
  AcceptRejectRule None
  AcceptRejectRule Cascade
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.AggregateType
Наследуется от: Enum
Поля:
  int value__
  AggregateType None
  AggregateType Sum
  AggregateType Mean
  AggregateType Min
  AggregateType Max
  AggregateType First
  AggregateType Count
  AggregateType Var
  AggregateType StDev
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.InternalDataCollectionBase
Наследуется от: object
Поля:
  CollectionChangeEventArgs s_refreshEventArgs
Свойства:
  int Count
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
  ArrayList List
Методы:
  int get_Count()
  void CopyTo(Array ar, int index)
  IEnumerator GetEnumerator()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  int NamesEqual(string s1, string s2, bool fCaseSensitive, CultureInfo locale)
  object get_SyncRoot()
  ArrayList get_List()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.ColumnTypeConverter
Наследуется от: TypeConverter
Поля:
  Type[] s_types
  StandardValuesCollection _values
Свойства:
Методы:
  void .ctor()
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  void .cctor()
--------------------------------------------------
Класс: System.Data.CommandBehavior
Наследуется от: Enum
Поля:
  int value__
  CommandBehavior Default
  CommandBehavior SingleResult
  CommandBehavior SchemaOnly
  CommandBehavior KeyInfo
  CommandBehavior SingleRow
  CommandBehavior SequentialAccess
  CommandBehavior CloseConnection
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.CommandType
Наследуется от: Enum
Поля:
  int value__
  CommandType Text
  CommandType StoredProcedure
  CommandType TableDirect
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataCommonEventSource
Наследуется от: EventSource
Поля:
  DataCommonEventSource Log
  long s_nextScopeId
  int TraceEventId
  int EnterScopeId
  int ExitScopeId
Свойства:
Методы:
  void Trace(string message)
  void Trace(string format, T0 arg0)
  void Trace(string format, T0 arg0, T1 arg1)
  void Trace(string format, T0 arg0, T1 arg1, T2 arg2)
  void Trace(string format, T0 arg0, T1 arg1, T2 arg2, T3 arg3)
  void Trace(string format, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  void Trace(string format, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
  long EnterScope(string message)
  long EnterScope(string format, T1 arg1)
  long EnterScope(string format, T1 arg1, T2 arg2)
  long EnterScope(string format, T1 arg1, T2 arg2, T3 arg3)
  long EnterScope(string format, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  void ExitScope(long scopeId)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.ConflictOption
Наследуется от: Enum
Поля:
  int value__
  ConflictOption CompareAllSearchableValues
  ConflictOption CompareRowVersion
  ConflictOption OverwriteChanges
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.ConnectionState
Наследуется от: Enum
Поля:
  int value__
  ConnectionState Closed
  ConnectionState Open
  ConnectionState Connecting
  ConnectionState Executing
  ConnectionState Fetching
  ConnectionState Broken
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Constraint
Наследуется от: object
Поля:
  string _schemaName
  bool _inCollection
  DataSet _dataSet
  string _name
  PropertyCollection _extendedProperties
Свойства:
  string ConstraintName
  string SchemaName
  bool InCollection
  DataTable Table
  PropertyCollection ExtendedProperties
  DataSet _DataSet
Методы:
  string get_ConstraintName()
  void set_ConstraintName(string value)
  string get_SchemaName()
  void set_SchemaName(string value)
  bool get_InCollection()
  void set_InCollection(bool value)
  DataTable get_Table()
  PropertyCollection get_ExtendedProperties()
  bool ContainsColumn(DataColumn column)
  bool CanEnableConstraint()
  Constraint Clone(DataSet destination)
  Constraint Clone(DataSet destination, bool ignoreNSforTableLookup)
  void CheckConstraint()
  void CheckCanAddToCollection(ConstraintCollection constraint)
  bool CanBeRemovedFromCollection(ConstraintCollection constraint, bool fThrowException)
  void CheckConstraint(DataRow row, DataRowAction action)
  void CheckState()
  void CheckStateForProperty()
  DataSet get__DataSet()
  void SetDataSet(DataSet dataSet)
  bool IsConstraintViolated()
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Data.ConstraintCollection
Наследуется от: InternalDataCollectionBase
Поля:
  DataTable _table
  ArrayList _list
  int _defaultNameIndex
  CollectionChangeEventHandler _onCollectionChanged
  Constraint[] _delayLoadingConstraints
  bool _fLoadForeignKeyConstraintsOnly
Свойства:
  ArrayList List
  Constraint Item
  DataTable Table
  Constraint Item
Методы:
  void .ctor(DataTable table)
  ArrayList get_List()
  Constraint get_Item(int index)
  DataTable get_Table()
  Constraint get_Item(string name)
  void Add(Constraint constraint)
  void Add(Constraint constraint, bool addUniqueWhenAddingForeign)
  Constraint Add(string name, DataColumn[] columns, bool primaryKey)
  Constraint Add(string name, DataColumn column, bool primaryKey)
  Constraint Add(string name, DataColumn primaryKeyColumn, DataColumn foreignKeyColumn)
  Constraint Add(string name, DataColumn[] primaryKeyColumns, DataColumn[] foreignKeyColumns)
  void AddRange(Constraint[] constraints)
  void AddUniqueConstraint(UniqueConstraint constraint)
  void AddForeignKeyConstraint(ForeignKeyConstraint constraint)
  bool AutoGenerated(Constraint constraint)
  void add_CollectionChanged(CollectionChangeEventHandler value)
  void remove_CollectionChanged(CollectionChangeEventHandler value)
  void ArrayAdd(Constraint constraint)
  void ArrayRemove(Constraint constraint)
  string AssignName()
  void BaseAdd(Constraint constraint)
  void BaseGroupSwitch(Constraint[] oldArray, int oldLength, Constraint[] newArray, int newLength)
  void BaseRemove(Constraint constraint)
  bool CanRemove(Constraint constraint)
  bool CanRemove(Constraint constraint, bool fThrowException)
  void Clear()
  bool Contains(string name)
  bool Contains(string name, bool caseSensitive)
  void CopyTo(Constraint[] array, int index)
  Constraint FindConstraint(Constraint constraint)
  UniqueConstraint FindKeyConstraint(DataColumn[] columns)
  UniqueConstraint FindKeyConstraint(DataColumn column)
  ForeignKeyConstraint FindForeignKeyConstraint(DataColumn[] parentColumns, DataColumn[] childColumns)
  bool CompareArrays(DataColumn[] a1, DataColumn[] a2)
  int IndexOf(Constraint constraint)
  int IndexOf(string constraintName)
  int InternalIndexOf(string constraintName)
  string MakeName(int index)
  void OnCollectionChanged(CollectionChangeEventArgs ccevent)
  void RegisterName(string name)
  void Remove(Constraint constraint)
  void RemoveAt(int index)
  void Remove(string name)
  void UnregisterName(string name)
  void FinishInitConstraints()
  void .ctor()
--------------------------------------------------
Класс: System.Data.ConstraintConverter
Наследуется от: ExpandableObjectConverter
Поля:
Свойства:
Методы:
  void .ctor()
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
--------------------------------------------------
Класс: System.Data.ConstraintEnumerator
Наследуется от: object
Поля:
  IEnumerator _tables
  IEnumerator _constraints
  Constraint _currentObject
Свойства:
  Constraint CurrentObject
Методы:
  void .ctor(DataSet dataSet)
  bool GetNext()
  Constraint GetConstraint()
  bool IsValidCandidate(Constraint constraint)
  Constraint get_CurrentObject()
--------------------------------------------------
Класс: System.Data.ForeignKeyConstraintEnumerator
Наследуется от: ConstraintEnumerator
Поля:
Свойства:
Методы:
  void .ctor(DataSet dataSet)
  bool IsValidCandidate(Constraint constraint)
  ForeignKeyConstraint GetForeignKeyConstraint()
--------------------------------------------------
Класс: System.Data.ChildForeignKeyConstraintEnumerator
Наследуется от: ForeignKeyConstraintEnumerator
Поля:
  DataTable _table
Свойства:
Методы:
  void .ctor(DataSet dataSet, DataTable inTable)
  bool IsValidCandidate(Constraint constraint)
--------------------------------------------------
Класс: System.Data.ParentForeignKeyConstraintEnumerator
Наследуется от: ForeignKeyConstraintEnumerator
Поля:
  DataTable _table
Свойства:
Методы:
  void .ctor(DataSet dataSet, DataTable inTable)
  bool IsValidCandidate(Constraint constraint)
--------------------------------------------------
Класс: System.Data.DBConcurrencyException
Наследуется от: SystemException
Поля:
  DataRow[] _dataRows
Свойства:
  DataRow Row
  int RowCount
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string message, Exception inner, DataRow[] dataRows)
  void GetObjectData(SerializationInfo si, StreamingContext context)
  DataRow get_Row()
  void set_Row(DataRow value)
  int get_RowCount()
  void CopyToRows(DataRow[] array)
  void CopyToRows(DataRow[] array, int arrayIndex)
--------------------------------------------------
Класс: System.Data.DataColumn
Наследуется от: MarshalByValueComponent
Поля:
  bool _allowNull
  string _caption
  string _columnName
  Type _dataType
  StorageType _storageType
  object _defaultValue
  DataSetDateTime _dateTimeMode
  DataExpression _expression
  int _maxLength
  int _ordinal
  bool _readOnly
  Index _sortIndex
  DataTable _table
  bool _unique
  MappingType _columnMapping
  int _hashCode
  int _errors
  bool _isSqlType
  bool _implementsINullable
  bool _implementsIChangeTracking
  bool _implementsIRevertibleChangeTracking
  bool _implementsIXMLSerializable
  bool _defaultValueIsNull
  List`1<DataColumn> _dependentColumns
  PropertyCollection _extendedProperties
  DataStorage _storage
  AutoIncrementValue _autoInc
  string _columnUri
  string _columnPrefix
  string _encodedColumnName
  SimpleType _simpleType
  int s_objectTypeCount
  int _objectID
  string <XmlDataType>k__BackingField
  PropertyChangedEventHandler PropertyChanging
Свойства:
  bool AllowDBNull
  bool AutoIncrement
  object AutoIncrementCurrent
  AutoIncrementValue AutoInc
  long AutoIncrementSeed
  long AutoIncrementStep
  string Caption
  string ColumnName
  string EncodedColumnName
  IFormatProvider FormatProvider
  CultureInfo Locale
  int ObjectID
  string Prefix
  bool Computed
  DataExpression DataExpression
  Type DataType
  DataSetDateTime DateTimeMode
  object DefaultValue
  bool DefaultValueIsNull
  string Expression
  PropertyCollection ExtendedProperties
  bool HasData
  bool ImplementsINullable
  bool ImplementsIChangeTracking
  bool ImplementsIRevertibleChangeTracking
  bool IsCloneable
  bool IsStringType
  bool IsValueType
  bool IsSqlType
  int MaxLength
  string Namespace
  int Ordinal
  bool ReadOnly
  Index SortIndex
  DataTable Table
  object Item
  bool Unique
  string XmlDataType
  SimpleType SimpleType
  MappingType ColumnMapping
  bool IsCustomType
  bool ImplementsIXMLSerializable
Методы:
  void .ctor()
  void .ctor(string columnName)
  void .ctor(string columnName, Type dataType)
  void .ctor(string columnName, Type dataType, string expr)
  void .ctor(string columnName, Type dataType, string expr, MappingType type)
  void UpdateColumnType(Type type, StorageType typeCode)
  bool get_AllowDBNull()
  void set_AllowDBNull(bool value)
  bool get_AutoIncrement()
  void set_AutoIncrement(bool value)
  object get_AutoIncrementCurrent()
  void set_AutoIncrementCurrent(object value)
  AutoIncrementValue get_AutoInc()
  long get_AutoIncrementSeed()
  void set_AutoIncrementSeed(long value)
  long get_AutoIncrementStep()
  void set_AutoIncrementStep(long value)
  string get_Caption()
  void set_Caption(string value)
  void ResetCaption()
  bool ShouldSerializeCaption()
  string get_ColumnName()
  void set_ColumnName(string value)
  string get_EncodedColumnName()
  IFormatProvider get_FormatProvider()
  CultureInfo get_Locale()
  int get_ObjectID()
  string get_Prefix()
  void set_Prefix(string value)
  string GetColumnValueAsString(DataRow row, DataRowVersion version)
  bool get_Computed()
  DataExpression get_DataExpression()
  Type get_DataType()
  void set_DataType(Type value)
  DataSetDateTime get_DateTimeMode()
  void set_DateTimeMode(DataSetDateTime value)
  object get_DefaultValue()
  void set_DefaultValue(object value)
  bool get_DefaultValueIsNull()
  void BindExpression()
  string get_Expression()
  void set_Expression(string value)
  PropertyCollection get_ExtendedProperties()
  bool get_HasData()
  bool get_ImplementsINullable()
  bool get_ImplementsIChangeTracking()
  bool get_ImplementsIRevertibleChangeTracking()
  bool get_IsCloneable()
  bool get_IsStringType()
  bool get_IsValueType()
  bool get_IsSqlType()
  void SetMaxLengthSimpleType()
  int get_MaxLength()
  void set_MaxLength(int value)
  string get_Namespace()
  void set_Namespace(string value)
  bool ShouldSerializeNamespace()
  void ResetNamespace()
  int get_Ordinal()
  void SetOrdinal(int ordinal)
  void SetOrdinalInternal(int ordinal)
  bool get_ReadOnly()
  void set_ReadOnly(bool value)
  Index get_SortIndex()
  DataTable get_Table()
  void SetTable(DataTable table)
  DataRow GetDataRow(int index)
  object get_Item(int record)
  void set_Item(int record, object value)
  void InitializeRecord(int record)
  void SetValue(int record, object value)
  void FreeRecord(int record)
  bool get_Unique()
  void set_Unique(bool value)
  void InternalUnique(bool value)
  string get_XmlDataType()
  void set_XmlDataType(string value)
  SimpleType get_SimpleType()
  void set_SimpleType(SimpleType value)
  MappingType get_ColumnMapping()
  void set_ColumnMapping(MappingType value)
  void add_PropertyChanging(PropertyChangedEventHandler value)
  void remove_PropertyChanging(PropertyChangedEventHandler value)
  void CheckColumnConstraint(DataRow row, DataRowAction action)
  bool CheckMaxLength()
  void CheckMaxLength(DataRow dr)
  void CheckNotAllowNull()
  void CheckNullable(DataRow row)
  void CheckUnique()
  int Compare(int record1, int record2)
  bool CompareValueTo(int record1, object value, bool checkType)
  int CompareValueTo(int record1, object value)
  object ConvertValue(object value)
  void Copy(int srcRecordNo, int dstRecordNo)
  DataColumn Clone()
  DataRelation FindParentRelation()
  object GetAggregateValue(Int32[] records, AggregateType kind)
  int GetStringLength(int record)
  void Init(int record)
  bool IsAutoIncrementType(Type dataType)
  bool IsColumnMappingValid(StorageType typeCode, MappingType mapping)
  bool get_IsCustomType()
  bool IsValueCustomTypeInstance(object value)
  bool get_ImplementsIXMLSerializable()
  bool IsNull(int record)
  bool IsInRelation()
  bool IsMaxLengthViolated()
  bool IsNotAllowDBNullViolated()
  void FinishInitInProgress()
  void OnPropertyChanging(PropertyChangedEventArgs pcevent)
  void RaisePropertyChanging(string name)
  void InsureStorage()
  void SetCapacity(int capacity)
  bool ShouldSerializeDefaultValue()
  void OnSetDataSet()
  string ToString()
  object ConvertXmlToObject(string s)
  object ConvertXmlToObject(XmlReader xmlReader, XmlRootAttribute xmlAttrib)
  string ConvertObjectToXml(object value)
  void ConvertObjectToXml(object value, XmlWriter xmlWriter, XmlRootAttribute xmlAttrib)
  object GetEmptyColumnStore(int recordCount)
  void CopyValueIntoStore(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void AddDependentColumn(DataColumn expressionColumn)
  void RemoveDependentColumn(DataColumn expressionColumn)
  void HandleDependentColumnList(DataExpression oldExpression, DataExpression newExpression)
--------------------------------------------------
Класс: System.Data.AutoIncrementValue
Наследуется от: object
Поля:
  bool <Auto>k__BackingField
Свойства:
  bool Auto
  object Current
  long Seed
  long Step
  Type DataType
Методы:
  bool get_Auto()
  void set_Auto(bool value)
  object get_Current()
  void set_Current(object value)
  long get_Seed()
  void set_Seed(long value)
  long get_Step()
  void set_Step(long value)
  Type get_DataType()
  void SetCurrent(object value, IFormatProvider formatProvider)
  void SetCurrentAndIncrement(object value)
  void MoveAfter()
  AutoIncrementValue Clone()
  void .ctor()
--------------------------------------------------
Класс: System.Data.AutoIncrementInt64
Наследуется от: AutoIncrementValue
Поля:
  long _current
  long _seed
  long _step
Свойства:
  object Current
  Type DataType
  long Seed
  long Step
Методы:
  object get_Current()
  void set_Current(object value)
  Type get_DataType()
  long get_Seed()
  void set_Seed(long value)
  long get_Step()
  void set_Step(long value)
  void MoveAfter()
  void SetCurrent(object value, IFormatProvider formatProvider)
  void SetCurrentAndIncrement(object value)
  bool BoundaryCheck(BigInteger value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.AutoIncrementBigInteger
Наследуется от: AutoIncrementValue
Поля:
  BigInteger _current
  long _seed
  BigInteger _step
Свойства:
  object Current
  Type DataType
  long Seed
  long Step
Методы:
  object get_Current()
  void set_Current(object value)
  Type get_DataType()
  long get_Seed()
  void set_Seed(long value)
  long get_Step()
  void set_Step(long value)
  void MoveAfter()
  void SetCurrent(object value, IFormatProvider formatProvider)
  void SetCurrentAndIncrement(object value)
  bool BoundaryCheck(BigInteger value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataColumnChangeEventArgs
Наследуется от: EventArgs
Поля:
  DataColumn _column
  DataRow <Row>k__BackingField
  object <ProposedValue>k__BackingField
Свойства:
  DataColumn Column
  DataRow Row
  object ProposedValue
Методы:
  void .ctor(DataRow row)
  void .ctor(DataRow row, DataColumn column, object value)
  DataColumn get_Column()
  DataRow get_Row()
  object get_ProposedValue()
  void set_ProposedValue(object value)
  void InitializeColumnChangeEvent(DataColumn column, object value)
--------------------------------------------------
Класс: System.Data.DataColumnChangeEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataColumnChangeEventArgs e)
  IAsyncResult BeginInvoke(object sender, DataColumnChangeEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.DataColumnCollection
Наследуется от: InternalDataCollectionBase
Поля:
  DataTable _table
  ArrayList _list
  int _defaultNameIndex
  DataColumn[] _delayedAddRangeColumns
  Dictionary`2<string, DataColumn> _columnFromName
  bool _fInClear
  DataColumn[] _columnsImplementingIChangeTracking
  int _nColumnsImplementingIChangeTracking
  int _nColumnsImplementingIRevertibleChangeTracking
  CollectionChangeEventHandler CollectionChanged
  CollectionChangeEventHandler CollectionChanging
  CollectionChangeEventHandler ColumnPropertyChanged
Свойства:
  ArrayList List
  DataColumn[] ColumnsImplementingIChangeTracking
  int ColumnsImplementingIChangeTrackingCount
  int ColumnsImplementingIRevertibleChangeTrackingCount
  DataColumn Item
  DataColumn Item
  DataColumn Item
Методы:
  void .ctor(DataTable table)
  ArrayList get_List()
  DataColumn[] get_ColumnsImplementingIChangeTracking()
  int get_ColumnsImplementingIChangeTrackingCount()
  int get_ColumnsImplementingIRevertibleChangeTrackingCount()
  DataColumn get_Item(int index)
  DataColumn get_Item(string name)
  DataColumn get_Item(string name, string ns)
  void EnsureAdditionalCapacity(int capacity)
  void Add(DataColumn column)
  void AddAt(int index, DataColumn column)
  void AddRange(DataColumn[] columns)
  DataColumn Add(string columnName, Type type, string expression)
  DataColumn Add(string columnName, Type type)
  DataColumn Add(string columnName)
  DataColumn Add()
  void add_CollectionChanged(CollectionChangeEventHandler value)
  void remove_CollectionChanged(CollectionChangeEventHandler value)
  void add_CollectionChanging(CollectionChangeEventHandler value)
  void remove_CollectionChanging(CollectionChangeEventHandler value)
  void add_ColumnPropertyChanged(CollectionChangeEventHandler value)
  void remove_ColumnPropertyChanged(CollectionChangeEventHandler value)
  void ArrayAdd(DataColumn column)
  void ArrayAdd(int index, DataColumn column)
  void ArrayRemove(DataColumn column)
  string AssignName()
  void BaseAdd(DataColumn column)
  void BaseGroupSwitch(DataColumn[] oldArray, int oldLength, DataColumn[] newArray, int newLength)
  void BaseRemove(DataColumn column)
  bool CanRemove(DataColumn column)
  bool CanRemove(DataColumn column, bool fThrowException)
  void CheckIChangeTracking(DataColumn column)
  void Clear()
  bool Contains(string name)
  bool Contains(string name, bool caseSensitive)
  void CopyTo(DataColumn[] array, int index)
  int IndexOf(DataColumn column)
  int IndexOf(string columnName)
  int IndexOfCaseInsensitive(string name)
  void FinishInitCollection()
  string MakeName(int index)
  void MoveTo(DataColumn column, int newPosition)
  void OnCollectionChanged(CollectionChangeEventArgs ccevent)
  void OnCollectionChanging(CollectionChangeEventArgs ccevent)
  void OnColumnPropertyChanged(CollectionChangeEventArgs ccevent)
  void RegisterColumnName(string name, DataColumn column)
  bool CanRegisterName(string name)
  void Remove(DataColumn column)
  void RemoveAt(int index)
  void Remove(string name)
  void UnregisterName(string name)
  void AddColumnsImplementingIChangeTrackingList(DataColumn dataColumn)
  void RemoveColumnsImplementingIChangeTrackingList(DataColumn dataColumn)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataColumnPropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
  DataColumn <Column>k__BackingField
Свойства:
  AttributeCollection Attributes
  DataColumn Column
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
  bool IsBrowsable
Методы:
  void .ctor(DataColumn dataColumn)
  AttributeCollection get_Attributes()
  DataColumn get_Column()
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  bool Equals(object other)
  int GetHashCode()
  bool CanResetValue(object component)
  object GetValue(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
  bool get_IsBrowsable()
--------------------------------------------------
Класс: System.Data.DataError
Наследуется от: object
Поля:
  string _rowError
  int _count
  ColumnError[] _errorList
  int initialCapacity
Свойства:
  string Text
  bool HasErrors
Методы:
  void .ctor()
  void .ctor(string rowError)
  string get_Text()
  void set_Text(string value)
  bool get_HasErrors()
  void SetColumnError(DataColumn column, string error)
  string GetColumnError(DataColumn column)
  void Clear(DataColumn column)
  void Clear()
  DataColumn[] GetColumnsInError()
  void SetText(string errorText)
  int IndexOf(DataColumn column)
--------------------------------------------------
Класс: System.Data.DataException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string s, Exception innerException)
--------------------------------------------------
Класс: System.Data.ConstraintException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.DeletedRowInaccessibleException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.DuplicateNameException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.InRowChangingEventException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.InvalidConstraintException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.MissingPrimaryKeyException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.NoNullAllowedException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.ReadOnlyException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.RowNotInTableException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.VersionNotFoundException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.ExceptionBuilder
Наследуется от: object
Поля:
Свойства:
Методы:
  void TraceException(string trace, Exception e)
  Exception TraceExceptionAsReturnValue(Exception e)
  Exception TraceExceptionForCapture(Exception e)
  Exception TraceExceptionWithoutRethrow(Exception e)
  Exception _Argument(string error)
  Exception _Argument(string paramName, string error)
  Exception _Argument(string error, Exception innerException)
  Exception _ArgumentNull(string paramName, string msg)
  Exception _ArgumentOutOfRange(string paramName, string msg)
  Exception _IndexOutOfRange(string error)
  Exception _InvalidOperation(string error)
  Exception _InvalidEnumArgumentException(string error)
  Exception _InvalidEnumArgumentException(T value)
  void ThrowDataException(string error, Exception innerException)
  Exception _Data(string error)
  Exception _Constraint(string error)
  Exception _InvalidConstraint(string error)
  Exception _DeletedRowInaccessible(string error)
  Exception _DuplicateName(string error)
  Exception _InRowChangingEvent(string error)
  Exception _MissingPrimaryKey(string error)
  Exception _NoNullAllowed(string error)
  Exception _ReadOnly(string error)
  Exception _RowNotInTable(string error)
  Exception _VersionNotFound(string error)
  Exception ArgumentNull(string paramName)
  Exception ArgumentOutOfRange(string paramName)
  Exception BadObjectPropertyAccess(string error)
  Exception ArgumentContainsNull(string paramName)
  Exception CannotModifyCollection()
  Exception CaseInsensitiveNameConflict(string name)
  Exception NamespaceNameConflict(string name)
  Exception InvalidOffsetLength()
  Exception ColumnNotInTheTable(string column, string table)
  Exception ColumnNotInAnyTable()
  Exception ColumnOutOfRange(int index)
  Exception ColumnOutOfRange(string column)
  Exception CannotAddColumn1(string column)
  Exception CannotAddColumn2(string column)
  Exception CannotAddColumn3()
  Exception CannotAddColumn4(string column)
  Exception CannotAddDuplicate(string column)
  Exception CannotAddDuplicate2(string table)
  Exception CannotAddDuplicate3(string table)
  Exception CannotRemoveColumn()
  Exception CannotRemovePrimaryKey()
  Exception CannotRemoveChildKey(string relation)
  Exception CannotRemoveConstraint(string constraint, string table)
  Exception CannotRemoveExpression(string column, string expression)
  Exception ColumnNotInTheUnderlyingTable(string column, string table)
  Exception InvalidOrdinal(string name, int ordinal)
  Exception AddPrimaryKeyConstraint()
  Exception NoConstraintName()
  Exception ConstraintViolation(string constraint)
  Exception ConstraintNotInTheTable(string constraint)
  string KeysToString(Object[] keys)
  string UniqueConstraintViolationText(DataColumn[] columns, Object[] values)
  Exception ConstraintViolation(DataColumn[] columns, Object[] values)
  Exception ConstraintOutOfRange(int index)
  Exception DuplicateConstraint(string constraint)
  Exception DuplicateConstraintName(string constraint)
  Exception NeededForForeignKeyConstraint(UniqueConstraint key, ForeignKeyConstraint fk)
  Exception UniqueConstraintViolation()
  Exception ConstraintForeignTable()
  Exception ConstraintParentValues()
  Exception ConstraintAddFailed(DataTable table)
  Exception ConstraintRemoveFailed()
  Exception FailedCascadeDelete(string constraint)
  Exception FailedCascadeUpdate(string constraint)
  Exception FailedClearParentTable(string table, string constraint, string childTable)
  Exception ForeignKeyViolation(string constraint, Object[] keys)
  Exception RemoveParentRow(ForeignKeyConstraint constraint)
  string MaxLengthViolationText(string columnName)
  string NotAllowDBNullViolationText(string columnName)
  Exception CantAddConstraintToMultipleNestedTable(string tableName)
  Exception AutoIncrementAndExpression()
  Exception AutoIncrementAndDefaultValue()
  Exception AutoIncrementSeed()
  Exception CantChangeDataType()
  Exception NullDataType()
  Exception ColumnNameRequired()
  Exception DefaultValueAndAutoIncrement()
  Exception DefaultValueDataType(string column, Type defaultType, Type columnType, Exception inner)
  Exception DefaultValueColumnDataType(string column, Type defaultType, Type columnType, Exception inner)
  Exception ExpressionAndUnique()
  Exception ExpressionAndReadOnly()
  Exception ExpressionAndConstraint(DataColumn column, Constraint constraint)
  Exception ExpressionInConstraint(DataColumn column)
  Exception ExpressionCircular()
  Exception NonUniqueValues(string column)
  Exception NullKeyValues(string column)
  Exception NullValues(string column)
  Exception ReadOnlyAndExpression()
  Exception ReadOnly(string column)
  Exception UniqueAndExpression()
  Exception SetFailed(object value, DataColumn column, Type type, Exception innerException)
  Exception CannotSetToNull(DataColumn column)
  Exception LongerThanMaxLength(DataColumn column)
  Exception CannotSetMaxLength(DataColumn column, int value)
  Exception CannotSetMaxLength2(DataColumn column)
  Exception CannotSetSimpleContentType(string columnName, Type type)
  Exception CannotSetSimpleContent(string columnName, Type type)
  Exception CannotChangeNamespace(string columnName)
  Exception HasToBeStringType(DataColumn column)
  Exception AutoIncrementCannotSetIfHasData(string typeName)
  Exception INullableUDTwithoutStaticNull(string typeName)
  Exception IComparableNotImplemented(string typeName)
  Exception UDTImplementsIChangeTrackingButnotIRevertible(string typeName)
  Exception SetAddedAndModifiedCalledOnnonUnchanged()
  Exception InvalidDataColumnMapping(Type type)
  Exception CannotSetDateTimeModeForNonDateTimeColumns()
  Exception InvalidDateTimeMode(DataSetDateTime mode)
  Exception CantChangeDateTimeMode(DataSetDateTime oldValue, DataSetDateTime newValue)
  Exception ColumnTypeNotSupported()
  Exception SetFailed(string name)
  Exception SetDataSetFailed()
  Exception SetRowStateFilter()
  Exception CanNotSetDataSet()
  Exception CanNotUseDataViewManager()
  Exception CanNotSetTable()
  Exception CanNotUse()
  Exception CanNotBindTable()
  Exception SetTable()
  Exception SetIListObject()
  Exception AddNewNotAllowNull()
  Exception NotOpen()
  Exception CreateChildView()
  Exception CanNotDelete()
  Exception CanNotEdit()
  Exception GetElementIndex(int index)
  Exception AddExternalObject()
  Exception CanNotClear()
  Exception InsertExternalObject()
  Exception RemoveExternalObject()
  Exception PropertyNotFound(string property, string table)
  Exception ColumnToSortIsOutOfRange(string column)
  Exception KeyTableMismatch()
  Exception KeyNoColumns()
  Exception KeyTooManyColumns(int cols)
  Exception KeyDuplicateColumns(string columnName)
  Exception RelationDataSetMismatch()
  Exception NoRelationName()
  Exception ColumnsTypeMismatch()
  Exception KeyLengthMismatch()
  Exception KeyLengthZero()
  Exception ForeignRelation()
  Exception KeyColumnsIdentical()
  Exception RelationForeignTable(string t1, string t2)
  Exception GetParentRowTableMismatch(string t1, string t2)
  Exception SetParentRowTableMismatch(string t1, string t2)
  Exception RelationForeignRow()
  Exception RelationNestedReadOnly()
  Exception TableCantBeNestedInTwoTables(string tableName)
  Exception LoopInNestedRelations(string tableName)
  Exception RelationDoesNotExist()
  Exception ParentRowNotInTheDataSet()
  Exception ParentOrChildColumnsDoNotHaveDataSet()
  Exception InValidNestedRelation(string childTableName)
  Exception InvalidParentNamespaceinNestedRelation(string childTableName)
  Exception RowNotInTheDataSet()
  Exception RowNotInTheTable()
  Exception EditInRowChanging()
  Exception EndEditInRowChanging()
  Exception BeginEditInRowChanging()
  Exception CancelEditInRowChanging()
  Exception DeleteInRowDeleting()
  Exception ValueArrayLength()
  Exception NoCurrentData()
  Exception NoOriginalData()
  Exception NoProposedData()
  Exception RowRemovedFromTheTable()
  Exception DeletedRowInaccessible()
  Exception RowAlreadyDeleted()
  Exception RowEmpty()
  Exception InvalidRowVersion()
  Exception RowOutOfRange()
  Exception RowOutOfRange(int index)
  Exception RowInsertOutOfRange(int index)
  Exception RowInsertTwice(int index, string tableName)
  Exception RowInsertMissing(string tableName)
  Exception RowAlreadyRemoved()
  Exception MultipleParents()
  Exception InvalidRowState(DataRowState state)
  Exception InvalidRowBitPattern()
  Exception SetDataSetNameToEmpty()
  Exception SetDataSetNameConflicting(string name)
  Exception DataSetUnsupportedSchema(string ns)
  Exception MergeMissingDefinition(string obj)
  Exception TablesInDifferentSets()
  Exception RelationAlreadyExists()
  Exception RowAlreadyInOtherCollection()
  Exception RowAlreadyInTheCollection()
  Exception TableMissingPrimaryKey()
  Exception RecordStateRange()
  Exception IndexKeyLength(int length, int keyLength)
  Exception RemovePrimaryKey(DataTable table)
  Exception RelationAlreadyInOtherDataSet()
  Exception RelationAlreadyInTheDataSet()
  Exception RelationNotInTheDataSet(string relation)
  Exception RelationOutOfRange(object index)
  Exception DuplicateRelation(string relation)
  Exception RelationTableNull()
  Exception RelationDataSetNull()
  Exception RelationTableWasRemoved()
  Exception ParentTableMismatch()
  Exception ChildTableMismatch()
  Exception EnforceConstraint()
  Exception CaseLocaleMismatch()
  Exception CannotChangeCaseLocale()
  Exception CannotChangeCaseLocale(Exception innerException)
  Exception CannotChangeSchemaSerializationMode()
  Exception InvalidSchemaSerializationMode(Type enumType, string mode)
  Exception InvalidRemotingFormat(SerializationFormat mode)
  Exception TableForeignPrimaryKey()
  Exception TableCannotAddToSimpleContent()
  Exception NoTableName()
  Exception MultipleTextOnlyColumns()
  Exception InvalidSortString(string sort)
  Exception DuplicateTableName(string table)
  Exception DuplicateTableName2(string table, string ns)
  Exception SelfnestedDatasetConflictingName(string table)
  Exception DatasetConflictingName(string table)
  Exception TableAlreadyInOtherDataSet()
  Exception TableAlreadyInTheDataSet()
  Exception TableOutOfRange(int index)
  Exception TableNotInTheDataSet(string table)
  Exception TableInRelation()
  Exception TableInConstraint(DataTable table, Constraint constraint)
  Exception CanNotSerializeDataTableHierarchy()
  Exception CanNotRemoteDataTable()
  Exception CanNotSetRemotingFormat()
  Exception CanNotSerializeDataTableWithEmptyName()
  Exception TableNotFound(string tableName)
  Exception AggregateException(AggregateType aggregateType, Type type)
  Exception InvalidStorageType(TypeCode typecode)
  Exception RangeArgument(int min, int max)
  Exception NullRange()
  Exception NegativeMinimumCapacity()
  Exception ProblematicChars(char charValue)
  Exception StorageSetFailed()
  Exception SimpleTypeNotSupported()
  Exception MissingAttribute(string attribute)
  Exception MissingAttribute(string element, string attribute)
  Exception InvalidAttributeValue(string name, string value)
  Exception AttributeValues(string name, string value1, string value2)
  Exception ElementTypeNotFound(string name)
  Exception RelationParentNameMissing(string rel)
  Exception RelationChildNameMissing(string rel)
  Exception RelationTableKeyMissing(string rel)
  Exception RelationChildKeyMissing(string rel)
  Exception UndefinedDatatype(string name)
  Exception DatatypeNotDefined()
  Exception MismatchKeyLength()
  Exception InvalidField(string name)
  Exception InvalidSelector(string name)
  Exception CircularComplexType(string name)
  Exception CannotInstantiateAbstract(string name)
  Exception InvalidKey(string name)
  Exception DiffgramMissingTable(string name)
  Exception DiffgramMissingSQL()
  Exception DuplicateConstraintRead(string str)
  Exception ColumnTypeConflict(string name)
  Exception CannotConvert(string name, string type)
  Exception MissingRefer(string name)
  Exception InvalidPrefix(string name)
  Exception CanNotDeserializeObjectType()
  Exception IsDataSetAttributeMissingInSchema()
  Exception TooManyIsDataSetAtributeInSchema()
  Exception NestedCircular(string name)
  Exception MultipleParentRows(string tableQName)
  Exception PolymorphismNotSupported(string typeName)
  Exception DataTableInferenceNotSupported()
  void ThrowMultipleTargetConverter(Exception innerException)
  Exception DuplicateDeclaration(string name)
  Exception FoundEntity()
  Exception MergeFailed(string name)
  Exception ConvertFailed(Type type1, Type type2)
  Exception InvalidDataTableReader(string tableName)
  Exception DataTableReaderSchemaIsInvalid(string tableName)
  Exception CannotCreateDataReaderOnEmptyDataSet()
  Exception DataTableReaderArgumentIsEmpty()
  Exception ArgumentContainsNullValue()
  Exception InvalidCurrentRowInDataTableReader()
  Exception EmptyDataTableReader(string tableName)
  Exception InvalidDuplicateNamedSimpleTypeDelaration(string stName, string errorStr)
  Exception InternalRBTreeError(RBTreeError internalError)
  Exception EnumeratorModified()
--------------------------------------------------
Класс: System.Data.DataKey
Наследуется от: ValueType
Поля:
  int maxColumns
  DataColumn[] _columns
Свойства:
  DataColumn[] ColumnsReference
  bool HasValue
  DataTable Table
Методы:
  void .ctor(DataColumn[] columns, bool copyColumns)
  DataColumn[] get_ColumnsReference()
  bool get_HasValue()
  DataTable get_Table()
  void CheckState()
  bool ColumnsEqual(DataKey key)
  bool ColumnsEqual(DataColumn[] column1, DataColumn[] column2)
  bool ContainsColumn(DataColumn column)
  int GetHashCode()
  bool Equals(object value)
  bool Equals(DataKey value)
  String[] GetColumnNames()
  IndexField[] GetIndexDesc()
  Object[] GetKeyValues(int record)
  Index GetSortIndex()
  Index GetSortIndex(DataViewRowState recordStates)
  bool RecordsEqual(int record1, int record2)
  DataColumn[] ToArray()
--------------------------------------------------
Класс: System.Data.DataRelation
Наследуется от: object
Поля:
  DataSet _dataSet
  PropertyCollection _extendedProperties
  string _relationName
  DataKey _childKey
  DataKey _parentKey
  UniqueConstraint _parentKeyConstraint
  ForeignKeyConstraint _childKeyConstraint
  String[] _parentColumnNames
  String[] _childColumnNames
  string _parentTableName
  string _childTableName
  string _parentTableNamespace
  string _childTableNamespace
  bool _nested
  bool _createConstraints
  bool _checkMultipleNested
  int s_objectTypeCount
  int _objectID
  PropertyChangedEventHandler PropertyChanging
Свойства:
  DataColumn[] ChildColumns
  DataColumn[] ChildColumnsReference
  DataKey ChildKey
  DataTable ChildTable
  DataSet DataSet
  String[] ParentColumnNames
  String[] ChildColumnNames
  DataColumn[] ParentColumns
  DataColumn[] ParentColumnsReference
  DataKey ParentKey
  DataTable ParentTable
  string RelationName
  bool Nested
  UniqueConstraint ParentKeyConstraint
  ForeignKeyConstraint ChildKeyConstraint
  PropertyCollection ExtendedProperties
  bool CheckMultipleNested
  int ObjectID
Методы:
  void .ctor(string relationName, DataColumn parentColumn, DataColumn childColumn)
  void .ctor(string relationName, DataColumn parentColumn, DataColumn childColumn, bool createConstraints)
  void .ctor(string relationName, DataColumn[] parentColumns, DataColumn[] childColumns)
  void .ctor(string relationName, DataColumn[] parentColumns, DataColumn[] childColumns, bool createConstraints)
  void .ctor(string relationName, string parentTableName, string childTableName, String[] parentColumnNames, String[] childColumnNames, bool nested)
  void .ctor(string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, String[] parentColumnNames, String[] childColumnNames, bool nested)
  DataColumn[] get_ChildColumns()
  DataColumn[] get_ChildColumnsReference()
  DataKey get_ChildKey()
  DataTable get_ChildTable()
  DataSet get_DataSet()
  String[] get_ParentColumnNames()
  String[] get_ChildColumnNames()
  bool IsKeyNull(Object[] values)
  DataRow[] GetChildRows(DataKey parentKey, DataKey childKey, DataRow parentRow, DataRowVersion version)
  DataRow[] GetParentRows(DataKey parentKey, DataKey childKey, DataRow childRow, DataRowVersion version)
  DataRow GetParentRow(DataKey parentKey, DataKey childKey, DataRow childRow, DataRowVersion version)
  void SetDataSet(DataSet dataSet)
  void SetParentRowRecords(DataRow childRow, DataRow parentRow)
  DataColumn[] get_ParentColumns()
  DataColumn[] get_ParentColumnsReference()
  DataKey get_ParentKey()
  DataTable get_ParentTable()
  string get_RelationName()
  void set_RelationName(string value)
  void CheckNamespaceValidityForNestedRelations(string ns)
  void CheckNestedRelations()
  bool get_Nested()
  void set_Nested(bool value)
  UniqueConstraint get_ParentKeyConstraint()
  void SetParentKeyConstraint(UniqueConstraint value)
  ForeignKeyConstraint get_ChildKeyConstraint()
  PropertyCollection get_ExtendedProperties()
  bool get_CheckMultipleNested()
  void set_CheckMultipleNested(bool value)
  void SetChildKeyConstraint(ForeignKeyConstraint value)
  void add_PropertyChanging(PropertyChangedEventHandler value)
  void remove_PropertyChanging(PropertyChangedEventHandler value)
  void CheckState()
  void CheckStateForProperty()
  void Create(string relationName, DataColumn[] parentColumns, DataColumn[] childColumns, bool createConstraints)
  DataRelation Clone(DataSet destination)
  void OnPropertyChanging(PropertyChangedEventArgs pcevent)
  void RaisePropertyChanging(string name)
  string ToString()
  void ValidateMultipleNestedRelations()
  bool IsAutoGenerated(DataColumn col)
  int get_ObjectID()
--------------------------------------------------
Класс: System.Data.DataRelationCollection
Наследуется от: InternalDataCollectionBase
Поля:
  DataRelation _inTransition
  int _defaultNameIndex
  CollectionChangeEventHandler _onCollectionChangedDelegate
  CollectionChangeEventHandler _onCollectionChangingDelegate
  int s_objectTypeCount
  int _objectID
Свойства:
  int ObjectID
  DataRelation Item
  DataRelation Item
Методы:
  int get_ObjectID()
  DataRelation get_Item(int index)
  DataRelation get_Item(string name)
  void Add(DataRelation relation)
  void AddRange(DataRelation[] relations)
  DataRelation Add(string name, DataColumn[] parentColumns, DataColumn[] childColumns)
  DataRelation Add(string name, DataColumn[] parentColumns, DataColumn[] childColumns, bool createConstraints)
  DataRelation Add(DataColumn[] parentColumns, DataColumn[] childColumns)
  DataRelation Add(string name, DataColumn parentColumn, DataColumn childColumn)
  DataRelation Add(string name, DataColumn parentColumn, DataColumn childColumn, bool createConstraints)
  DataRelation Add(DataColumn parentColumn, DataColumn childColumn)
  void AddCore(DataRelation relation)
  void add_CollectionChanged(CollectionChangeEventHandler value)
  void remove_CollectionChanged(CollectionChangeEventHandler value)
  void add_CollectionChanging(CollectionChangeEventHandler value)
  void remove_CollectionChanging(CollectionChangeEventHandler value)
  string AssignName()
  void Clear()
  bool Contains(string name)
  void CopyTo(DataRelation[] array, int index)
  int IndexOf(DataRelation relation)
  int IndexOf(string relationName)
  int InternalIndexOf(string name)
  DataSet GetDataSet()
  string MakeName(int index)
  void OnCollectionChanged(CollectionChangeEventArgs ccevent)
  void OnCollectionChanging(CollectionChangeEventArgs ccevent)
  void RegisterName(string name)
  bool CanRemove(DataRelation relation)
  void Remove(DataRelation relation)
  void RemoveAt(int index)
  void Remove(string name)
  void RemoveCore(DataRelation relation)
  void UnregisterName(string name)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataRelationPropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
  DataRelation <Relation>k__BackingField
Свойства:
  DataRelation Relation
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
Методы:
  void .ctor(DataRelation dataRelation)
  DataRelation get_Relation()
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  bool Equals(object other)
  int GetHashCode()
  bool CanResetValue(object component)
  object GetValue(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
--------------------------------------------------
Класс: System.Data.DataRow
Наследуется от: object
Поля:
  DataTable _table
  DataColumnCollection _columns
  int _oldRecord
  int _newRecord
  int _tempRecord
  long _rowID
  DataRowAction _action
  bool _inChangingEvent
  bool _inDeletingEvent
  bool _inCascade
  DataColumn _lastChangedColumn
  int _countColumnChange
  DataError _error
  object _element
  int _rbTreeNodeId
  int s_objectTypeCount
  int _objectID
Свойства:
  XmlBoundElement Element
  DataColumn LastChangedColumn
  bool HasPropertyChanged
  int RBTreeNodeId
  string RowError
  long rowID
  DataRowState RowState
  DataTable Table
  object Item
  object Item
  object Item
  object Item
  object Item
  object Item
  Object[] ItemArray
  bool HasErrors
Методы:
  void .ctor(DataRowBuilder builder)
  XmlBoundElement get_Element()
  void set_Element(XmlBoundElement value)
  DataColumn get_LastChangedColumn()
  void set_LastChangedColumn(DataColumn value)
  bool get_HasPropertyChanged()
  int get_RBTreeNodeId()
  void set_RBTreeNodeId(int value)
  string get_RowError()
  void set_RowError(string value)
  void RowErrorChanged()
  long get_rowID()
  void set_rowID(long value)
  DataRowState get_RowState()
  DataTable get_Table()
  object get_Item(int columnIndex)
  void set_Item(int columnIndex, object value)
  void CheckForLoops(DataRelation rel)
  int GetNestedParentCount()
  object get_Item(string columnName)
  void set_Item(string columnName, object value)
  object get_Item(DataColumn column)
  void set_Item(DataColumn column, object value)
  object get_Item(int columnIndex, DataRowVersion version)
  object get_Item(string columnName, DataRowVersion version)
  object get_Item(DataColumn column, DataRowVersion version)
  Object[] get_ItemArray()
  void set_ItemArray(Object[] value)
  void AcceptChanges()
  void BeginEdit()
  bool BeginEditInternal()
  void CancelEdit()
  void CheckColumn(DataColumn column)
  void CheckInTable()
  void Delete()
  void EndEdit()
  void SetColumnError(int columnIndex, string error)
  void SetColumnError(string columnName, string error)
  void SetColumnError(DataColumn column, string error)
  string GetColumnError(int columnIndex)
  string GetColumnError(string columnName)
  string GetColumnError(DataColumn column)
  void ClearErrors()
  void ClearError(DataColumn column)
  bool get_HasErrors()
  DataColumn[] GetColumnsInError()
  DataRow[] GetChildRows(string relationName)
  DataRow[] GetChildRows(string relationName, DataRowVersion version)
  DataRow[] GetChildRows(DataRelation relation)
  DataRow[] GetChildRows(DataRelation relation, DataRowVersion version)
  DataColumn GetDataColumn(string columnName)
  DataRow GetParentRow(string relationName)
  DataRow GetParentRow(string relationName, DataRowVersion version)
  DataRow GetParentRow(DataRelation relation)
  DataRow GetParentRow(DataRelation relation, DataRowVersion version)
  DataRow GetNestedParentRow(DataRowVersion version)
  DataRow[] GetParentRows(string relationName)
  DataRow[] GetParentRows(string relationName, DataRowVersion version)
  DataRow[] GetParentRows(DataRelation relation)
  DataRow[] GetParentRows(DataRelation relation, DataRowVersion version)
  Object[] GetColumnValues(DataColumn[] columns)
  Object[] GetColumnValues(DataColumn[] columns, DataRowVersion version)
  Object[] GetKeyValues(DataKey key)
  Object[] GetKeyValues(DataKey key, DataRowVersion version)
  int GetCurrentRecordNo()
  int GetDefaultRecord()
  int GetOriginalRecordNo()
  int GetProposedRecordNo()
  int GetRecordFromVersion(DataRowVersion version)
  DataRowVersion GetDefaultRowVersion(DataViewRowState viewState)
  DataViewRowState GetRecordState(int record)
  bool HasKeyChanged(DataKey key)
  bool HasKeyChanged(DataKey key, DataRowVersion version1, DataRowVersion version2)
  bool HasVersion(DataRowVersion version)
  bool HasChanges()
  bool HaveValuesChanged(DataColumn[] columns)
  bool HaveValuesChanged(DataColumn[] columns, DataRowVersion version1, DataRowVersion version2)
  bool IsNull(int columnIndex)
  bool IsNull(string columnName)
  bool IsNull(DataColumn column)
  bool IsNull(DataColumn column, DataRowVersion version)
  void RejectChanges()
  void ResetLastChangedColumn()
  void SetKeyValues(DataKey key, Object[] keyValues)
  void SetNull(DataColumn column)
  void SetNestedParentRow(DataRow parentRow, bool setNonNested)
  void SetParentRow(DataRow parentRow)
  void SetParentRow(DataRow parentRow, DataRelation relation)
  void SetParentRowToDBNull()
  void SetParentRowToDBNull(DataRelation relation)
  void SetAdded()
  void SetModified()
  int CopyValuesIntoStore(ArrayList storeList, ArrayList nullbitList, int storeIndex)
  void VerifyValueFromStorage(DataColumn column, DataRowVersion version, object valueFromStorage)
--------------------------------------------------
Класс: System.Data.DataRowBuilder
Наследуется от: object
Поля:
  DataTable _table
  int _record
Свойства:
Методы:
  void .ctor(DataTable table, int record)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataRowAction
Наследуется от: Enum
Поля:
  int value__
  DataRowAction Nothing
  DataRowAction Delete
  DataRowAction Change
  DataRowAction Rollback
  DataRowAction Commit
  DataRowAction Add
  DataRowAction ChangeOriginal
  DataRowAction ChangeCurrentAndOriginal
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataRowChangeEventArgs
Наследуется от: EventArgs
Поля:
  DataRow <Row>k__BackingField
  DataRowAction <Action>k__BackingField
Свойства:
  DataRow Row
  DataRowAction Action
Методы:
  void .ctor(DataRow row, DataRowAction action)
  DataRow get_Row()
  DataRowAction get_Action()
--------------------------------------------------
Класс: System.Data.DataRowChangeEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataRowChangeEventArgs e)
  IAsyncResult BeginInvoke(object sender, DataRowChangeEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.DataRowCollection
Наследуется от: InternalDataCollectionBase
Поля:
  DataTable _table
  DataRowTree _list
  int _nullInList
Свойства:
  int Count
  DataRow Item
Методы:
  void .ctor(DataTable table)
  int get_Count()
  DataRow get_Item(int index)
  void Add(DataRow row)
  void InsertAt(DataRow row, int pos)
  void DiffInsertAt(DataRow row, int pos)
  int IndexOf(DataRow row)
  DataRow AddWithColumnEvents(Object[] values)
  DataRow Add(Object[] values)
  void ArrayAdd(DataRow row)
  void ArrayInsert(DataRow row, int pos)
  void ArrayClear()
  void ArrayRemove(DataRow row)
  DataRow Find(object key)
  DataRow Find(Object[] keys)
  void Clear()
  bool Contains(object key)
  bool Contains(Object[] keys)
  void CopyTo(Array ar, int index)
  void CopyTo(DataRow[] array, int index)
  IEnumerator GetEnumerator()
  void Remove(DataRow row)
  void RemoveAt(int index)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataRowCreatedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataRow r)
  IAsyncResult BeginInvoke(object sender, DataRow r, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.DataSetClearEventhandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataTable table)
  IAsyncResult BeginInvoke(object sender, DataTable table, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.DataRowState
Наследуется от: Enum
Поля:
  int value__
  DataRowState Detached
  DataRowState Unchanged
  DataRowState Added
  DataRowState Deleted
  DataRowState Modified
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataRowVersion
Наследуется от: Enum
Поля:
  int value__
  DataRowVersion Original
  DataRowVersion Current
  DataRowVersion Proposed
  DataRowVersion Default
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataRowView
Наследуется от: object
Поля:
  DataView _dataView
  DataRow _row
  bool _delayBeginEdit
  PropertyDescriptorCollection s_zeroPropertyDescriptorCollection
  PropertyChangedEventHandler PropertyChanged
Свойства:
  DataView DataView
  int ObjectID
  object Item
  object Item
  string System.ComponentModel.IDataErrorInfo.Item
  string System.ComponentModel.IDataErrorInfo.Error
  DataRowVersion RowVersion
  DataRowVersion RowVersionDefault
  DataRow Row
  bool IsNew
  bool IsEdit
Методы:
  void .ctor(DataView dataView, DataRow row)
  bool Equals(object other)
  int GetHashCode()
  DataView get_DataView()
  int get_ObjectID()
  object get_Item(int ndx)
  void set_Item(int ndx, object value)
  object get_Item(string property)
  void set_Item(string property, object value)
  string System.ComponentModel.IDataErrorInfo.get_Item(string colName)
  string System.ComponentModel.IDataErrorInfo.get_Error()
  DataRowVersion get_RowVersion()
  DataRowVersion get_RowVersionDefault()
  int GetRecord()
  bool HasRecord()
  object GetColumnValue(DataColumn column)
  void SetColumnValue(DataColumn column, object value)
  DataView CreateChildView(DataRelation relation, bool followParent)
  DataView CreateChildView(DataRelation relation)
  DataView CreateChildView(string relationName, bool followParent)
  DataView CreateChildView(string relationName)
  DataRow get_Row()
  void BeginEdit()
  void CancelEdit()
  void EndEdit()
  bool get_IsNew()
  bool get_IsEdit()
  void Delete()
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
  void RaisePropertyChangedEvent(string propName)
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SerializationFormat
Наследуется от: Enum
Поля:
  int value__
  SerializationFormat Xml
  SerializationFormat Binary
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataSet
Наследуется от: MarshalByValueComponent
Поля:
  string KEY_XMLSCHEMA
  string KEY_XMLDIFFGRAM
  DataViewManager _defaultViewManager
  DataTableCollection _tableCollection
  DataRelationCollection _relationCollection
  PropertyCollection _extendedProperties
  string _dataSetName
  string _datasetPrefix
  string _namespaceURI
  bool _enforceConstraints
  bool _caseSensitive
  CultureInfo _culture
  bool _cultureUserSet
  bool _fInReadXml
  bool _fInLoadDiffgram
  bool _fTopLevelTable
  bool _fInitInProgress
  bool _fEnableCascading
  bool _fIsSchemaLoading
  bool _fBoundToDocument
  string _mainTableName
  SerializationFormat _remotingFormat
  object _defaultViewManagerLock
  int s_objectTypeCount
  int _objectID
  XmlSchemaComplexType s_schemaTypeForWSDL
  bool _useDataSetSchemaOnly
  bool _udtIsWrapped
  PropertyChangedEventHandler PropertyChanging
  MergeFailedEventHandler MergeFailed
  DataRowCreatedEventHandler DataRowCreated
  DataSetClearEventhandler ClearFunctionCalled
  EventHandler Initialized
Свойства:
  SerializationFormat RemotingFormat
  SchemaSerializationMode SchemaSerializationMode
  bool CaseSensitive
  bool System.ComponentModel.IListSource.ContainsListCollection
  DataViewManager DefaultViewManager
  bool EnforceConstraints
  string DataSetName
  string Namespace
  string Prefix
  PropertyCollection ExtendedProperties
  bool HasErrors
  bool IsInitialized
  CultureInfo Locale
  ISite Site
  DataRelationCollection Relations
  DataTableCollection Tables
  bool FBoundToDocument
  string MainTableName
  int ObjectID
Методы:
  void .ctor()
  void .ctor(string dataSetName)
  SerializationFormat get_RemotingFormat()
  void set_RemotingFormat(SerializationFormat value)
  SchemaSerializationMode get_SchemaSerializationMode()
  void set_SchemaSerializationMode(SchemaSerializationMode value)
  bool IsBinarySerialized(SerializationInfo info, StreamingContext context)
  SchemaSerializationMode DetermineSchemaSerializationMode(SerializationInfo info, StreamingContext context)
  SchemaSerializationMode DetermineSchemaSerializationMode(XmlReader reader)
  void GetSerializationData(SerializationInfo info, StreamingContext context)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(SerializationInfo info, StreamingContext context, bool ConstructSchema)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void InitializeDerivedDataSet()
  void SerializeDataSet(SerializationInfo info, StreamingContext context, SerializationFormat remotingFormat)
  void DeserializeDataSet(SerializationInfo info, StreamingContext context, SerializationFormat remotingFormat, SchemaSerializationMode schemaSerializationMode)
  void DeserializeDataSetSchema(SerializationInfo info, StreamingContext context, SerializationFormat remotingFormat, SchemaSerializationMode schemaSerializationMode)
  void DeserializeDataSetData(SerializationInfo info, StreamingContext context, SerializationFormat remotingFormat)
  void SerializeDataSetProperties(SerializationInfo info, StreamingContext context)
  void DeserializeDataSetProperties(SerializationInfo info, StreamingContext context)
  void SerializeRelations(SerializationInfo info, StreamingContext context)
  void DeserializeRelations(SerializationInfo info, StreamingContext context)
  void FailedEnableConstraints()
  bool get_CaseSensitive()
  void set_CaseSensitive(bool value)
  bool System.ComponentModel.IListSource.get_ContainsListCollection()
  DataViewManager get_DefaultViewManager()
  bool get_EnforceConstraints()
  void set_EnforceConstraints(bool value)
  void RestoreEnforceConstraints(bool value)
  void EnableConstraints()
  string get_DataSetName()
  void set_DataSetName(string value)
  string get_Namespace()
  void set_Namespace(string value)
  string get_Prefix()
  void set_Prefix(string value)
  PropertyCollection get_ExtendedProperties()
  bool get_HasErrors()
  bool get_IsInitialized()
  CultureInfo get_Locale()
  void set_Locale(CultureInfo value)
  void SetLocaleValue(CultureInfo value, bool userSet)
  bool ShouldSerializeLocale()
  ISite get_Site()
  void set_Site(ISite value)
  DataRelationCollection get_Relations()
  bool ShouldSerializeRelations()
  void ResetRelations()
  DataTableCollection get_Tables()
  bool ShouldSerializeTables()
  void ResetTables()
  bool get_FBoundToDocument()
  void set_FBoundToDocument(bool value)
  void AcceptChanges()
  void add_PropertyChanging(PropertyChangedEventHandler value)
  void remove_PropertyChanging(PropertyChangedEventHandler value)
  void add_MergeFailed(MergeFailedEventHandler value)
  void remove_MergeFailed(MergeFailedEventHandler value)
  void add_DataRowCreated(DataRowCreatedEventHandler value)
  void remove_DataRowCreated(DataRowCreatedEventHandler value)
  void add_ClearFunctionCalled(DataSetClearEventhandler value)
  void remove_ClearFunctionCalled(DataSetClearEventhandler value)
  void add_Initialized(EventHandler value)
  void remove_Initialized(EventHandler value)
  void BeginInit()
  void EndInit()
  void Clear()
  DataSet Clone()
  DataSet Copy()
  int EstimatedXmlStringSize()
  DataSet GetChanges()
  DataSet GetChanges(DataRowState rowStates)
  void MarkModifiedRows(TableChanges[] bitMatrix, DataRowState rowStates)
  void MarkRelatedRowsAsModified(TableChanges[] bitMatrix, DataRow row)
  IList System.ComponentModel.IListSource.GetList()
  string GetRemotingDiffGram(DataTable table)
  string GetXml()
  string GetXmlSchema()
  string GetXmlSchemaForRemoting(DataTable table)
  bool HasChanges()
  bool HasChanges(DataRowState rowStates)
  void InferXmlSchema(XmlReader reader, String[] nsArray)
  void InferXmlSchema(Stream stream, String[] nsArray)
  void InferXmlSchema(TextReader reader, String[] nsArray)
  void InferXmlSchema(string fileName, String[] nsArray)
  void ReadXmlSchema(XmlReader reader)
  void ReadXmlSchema(XmlReader reader, bool denyResolving)
  bool MoveToElement(XmlReader reader, int depth)
  void MoveToElement(XmlReader reader)
  void ReadEndElement(XmlReader reader)
  void ReadXSDSchema(XmlReader reader, bool denyResolving)
  void ReadXDRSchema(XmlReader reader)
  void ReadXmlSchema(Stream stream)
  void ReadXmlSchema(TextReader reader)
  void ReadXmlSchema(string fileName)
  void WriteXmlSchema(Stream stream)
  void WriteXmlSchema(Stream stream, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(string fileName)
  void WriteXmlSchema(string fileName, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(TextWriter writer)
  void WriteXmlSchema(TextWriter writer, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(XmlWriter writer)
  void WriteXmlSchema(XmlWriter writer, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(string fileName, SchemaFormat schemaFormat, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(Stream stream, SchemaFormat schemaFormat, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(TextWriter writer, SchemaFormat schemaFormat, Converter`2<Type, string> multipleTargetConverter)
  void WriteXmlSchema(XmlWriter writer, SchemaFormat schemaFormat, Converter`2<Type, string> multipleTargetConverter)
  XmlReadMode ReadXml(XmlReader reader)
  XmlReadMode ReadXml(XmlReader reader, bool denyResolving)
  XmlReadMode ReadXml(Stream stream)
  XmlReadMode ReadXml(TextReader reader)
  XmlReadMode ReadXml(string fileName)
  void InferSchema(XmlDocument xdoc, String[] excludedNamespaces, XmlReadMode mode)
  bool IsEmpty()
  void ReadXmlDiffgram(XmlReader reader)
  XmlReadMode ReadXml(XmlReader reader, XmlReadMode mode)
  XmlReadMode ReadXml(XmlReader reader, XmlReadMode mode, bool denyResolving)
  XmlReadMode ReadXml(Stream stream, XmlReadMode mode)
  XmlReadMode ReadXml(TextReader reader, XmlReadMode mode)
  XmlReadMode ReadXml(string fileName, XmlReadMode mode)
  void WriteXml(Stream stream)
  void WriteXml(TextWriter writer)
  void WriteXml(XmlWriter writer)
  void WriteXml(string fileName)
  void WriteXml(Stream stream, XmlWriteMode mode)
  void WriteXml(TextWriter writer, XmlWriteMode mode)
  void WriteXml(XmlWriter writer, XmlWriteMode mode)
  void WriteXml(string fileName, XmlWriteMode mode)
  DataRelationCollection GetParentRelations(DataTable table)
  void Merge(DataSet dataSet)
  void Merge(DataSet dataSet, bool preserveChanges)
  void Merge(DataSet dataSet, bool preserveChanges, MissingSchemaAction missingSchemaAction)
  void Merge(DataTable table)
  void Merge(DataTable table, bool preserveChanges, MissingSchemaAction missingSchemaAction)
  void Merge(DataRow[] rows)
  void Merge(DataRow[] rows, bool preserveChanges, MissingSchemaAction missingSchemaAction)
  void OnPropertyChanging(PropertyChangedEventArgs pcevent)
  void OnMergeFailed(MergeFailedEventArgs mfevent)
  void RaiseMergeFailed(DataTable table, string conflict, MissingSchemaAction missingSchemaAction)
  void OnDataRowCreated(DataRow row)
  void OnClearFunctionCalled(DataTable table)
  void OnInitialized()
  void OnRemoveTable(DataTable table)
  void OnRemovedTable(DataTable table)
  void OnRemoveRelation(DataRelation relation)
  void OnRemoveRelationHack(DataRelation relation)
  void RaisePropertyChanging(string name)
  DataTable[] TopLevelTables()
  DataTable[] TopLevelTables(bool forSchema)
  void RejectChanges()
  void Reset()
  bool ValidateCaseConstraint()
  bool ValidateLocaleConstraint()
  DataTable FindTable(DataTable baseTable, PropertyDescriptor[] props, int propStart)
  void ReadXmlSerializable(XmlReader reader)
  XmlSchema GetSchemaSerializable()
  XmlSchemaComplexType GetDataSetSchema(XmlSchemaSet schemaSet)
  bool PublishLegacyWSDL()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  void Load(IDataReader reader, LoadOption loadOption, FillErrorEventHandler errorHandler, DataTable[] tables)
  void Load(IDataReader reader, LoadOption loadOption, DataTable[] tables)
  void Load(IDataReader reader, LoadOption loadOption, String[] tables)
  DataTableReader CreateDataReader()
  DataTableReader CreateDataReader(DataTable[] dataTables)
  string get_MainTableName()
  void set_MainTableName(string value)
  int get_ObjectID()
  void .cctor()
--------------------------------------------------
Класс: System.Data.DataSetDateTime
Наследуется от: Enum
Поля:
  int value__
  DataSetDateTime Local
  DataSetDateTime Unspecified
  DataSetDateTime UnspecifiedLocal
  DataSetDateTime Utc
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataSysDescriptionAttribute
Наследуется от: DescriptionAttribute
Поля:
  bool _replaced
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Data.DataTable
Наследуется от: MarshalByValueComponent
Поля:
  DataSet _dataSet
  DataView _defaultView
  long _nextRowID
  DataRowCollection _rowCollection
  DataColumnCollection _columnCollection
  ConstraintCollection _constraintCollection
  int _elementColumnCount
  DataRelationCollection _parentRelationsCollection
  DataRelationCollection _childRelationsCollection
  RecordManager _recordManager
  List`1<Index> _indexes
  List`1<Index> _shadowIndexes
  int _shadowCount
  PropertyCollection _extendedProperties
  string _tableName
  string _tableNamespace
  string _tablePrefix
  DataExpression _displayExpression
  bool _fNestedInDataset
  CultureInfo _culture
  bool _cultureUserSet
  CompareInfo _compareInfo
  CompareOptions _compareFlags
  IFormatProvider _formatProvider
  StringComparer _hashCodeProvider
  bool _caseSensitive
  bool _caseSensitiveUserSet
  string _encodedTableName
  DataColumn _xmlText
  DataColumn _colUnique
  bool _textOnly
  decimal _minOccurs
  decimal _maxOccurs
  bool _repeatableElement
  object _typeName
  UniqueConstraint _primaryKey
  IndexField[] _primaryIndex
  DataColumn[] _delayedSetPrimaryKey
  Index _loadIndex
  Index _loadIndexwithOriginalAdded
  Index _loadIndexwithCurrentDeleted
  int _suspendIndexEvents
  bool _savedEnforceConstraints
  bool _inDataLoad
  bool _initialLoad
  bool _schemaLoading
  bool _enforceConstraints
  bool _suspendEnforceConstraints
  bool fInitInProgress
  bool _inLoad
  bool _fInLoadDiffgram
  byte _isTypedDataTable
  DataRow[] _emptyDataRowArray
  PropertyDescriptorCollection _propertyDescriptorCollectionCache
  DataRelation[] _nestedParentRelations
  List`1<DataColumn> _dependentColumns
  bool _mergingData
  DataRowChangeEventHandler _onRowChangedDelegate
  DataRowChangeEventHandler _onRowChangingDelegate
  DataRowChangeEventHandler _onRowDeletingDelegate
  DataRowChangeEventHandler _onRowDeletedDelegate
  DataColumnChangeEventHandler _onColumnChangedDelegate
  DataColumnChangeEventHandler _onColumnChangingDelegate
  DataTableClearEventHandler _onTableClearingDelegate
  DataTableClearEventHandler _onTableClearedDelegate
  DataTableNewRowEventHandler _onTableNewRowDelegate
  PropertyChangedEventHandler _onPropertyChangingDelegate
  EventHandler _onInitialized
  DataRowBuilder _rowBuilder
  string KEY_XMLSCHEMA
  string KEY_XMLDIFFGRAM
  string KEY_NAME
  List`1<DataView> _delayedViews
  List`1<DataViewListener> _dataViewListeners
  Hashtable _rowDiffId
  ReaderWriterLockSlim _indexesLock
  int _ukColumnPositionForInference
  SerializationFormat _remotingFormat
  int s_objectTypeCount
  int _objectID
Свойства:
  bool CaseSensitive
  bool AreIndexEventsSuspended
  bool IsInitialized
  bool IsTypedDataTable
  bool SelfNested
  List`1<Index> LiveIndexes
  SerializationFormat RemotingFormat
  int UKColumnPositionForInference
  DataRelationCollection ChildRelations
  DataColumnCollection Columns
  CompareInfo CompareInfo
  ConstraintCollection Constraints
  DataSet DataSet
  DataView DefaultView
  string DisplayExpression
  string DisplayExpressionInternal
  bool EnforceConstraints
  bool SuspendEnforceConstraints
  PropertyCollection ExtendedProperties
  IFormatProvider FormatProvider
  bool HasErrors
  CultureInfo Locale
  int MinimumCapacity
  int RecordCapacity
  int ElementColumnCount
  DataRelationCollection ParentRelations
  bool MergingData
  DataRelation[] NestedParentRelations
  bool SchemaLoading
  int NestedParentsCount
  DataColumn[] PrimaryKey
  DataRowCollection Rows
  string TableName
  string EncodedTableName
  string Namespace
  string Prefix
  DataColumn XmlText
  decimal MaxOccurs
  decimal MinOccurs
  ISite Site
  bool System.ComponentModel.IListSource.ContainsListCollection
  bool NeedColumnChangeEvents
  XmlQualifiedName TypeName
  Hashtable RowDiffId
  int ObjectID
Методы:
  void .ctor()
  void .ctor(string tableName)
  void .ctor(string tableName, string tableNamespace)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void SerializeDataTable(SerializationInfo info, StreamingContext context, bool isSingleTable, SerializationFormat remotingFormat)
  void DeserializeDataTable(SerializationInfo info, StreamingContext context, bool isSingleTable, SerializationFormat remotingFormat)
  void SerializeTableSchema(SerializationInfo info, StreamingContext context, bool isSingleTable)
  void DeserializeTableSchema(SerializationInfo info, StreamingContext context, bool isSingleTable)
  void SerializeConstraints(SerializationInfo info, StreamingContext context, int serIndex, bool allConstraints)
  void DeserializeConstraints(SerializationInfo info, StreamingContext context, int serIndex, bool allConstraints)
  void SerializeExpressionColumns(SerializationInfo info, StreamingContext context, int serIndex)
  void DeserializeExpressionColumns(SerializationInfo info, StreamingContext context, int serIndex)
  void SerializeTableData(SerializationInfo info, StreamingContext context, int serIndex)
  void DeserializeTableData(SerializationInfo info, StreamingContext context, int serIndex)
  DataRowState ConvertToRowState(BitArray bitStates, int bitIndex)
  void GetRowAndColumnErrors(int rowIndex, Hashtable rowErrors, Hashtable colErrors)
  void ConvertToRowError(int rowIndex, Hashtable rowErrors, Hashtable colErrors)
  bool get_CaseSensitive()
  void set_CaseSensitive(bool value)
  bool get_AreIndexEventsSuspended()
  void RestoreIndexEvents(bool forceReset)
  void SuspendIndexEvents()
  bool get_IsInitialized()
  bool get_IsTypedDataTable()
  bool SetCaseSensitiveValue(bool isCaseSensitive, bool userSet, bool resetIndexes)
  void ResetCaseSensitive()
  bool ShouldSerializeCaseSensitive()
  bool get_SelfNested()
  List`1<Index> get_LiveIndexes()
  SerializationFormat get_RemotingFormat()
  void set_RemotingFormat(SerializationFormat value)
  int get_UKColumnPositionForInference()
  void set_UKColumnPositionForInference(int value)
  DataRelationCollection get_ChildRelations()
  DataColumnCollection get_Columns()
  void ResetColumns()
  CompareInfo get_CompareInfo()
  ConstraintCollection get_Constraints()
  void ResetConstraints()
  DataSet get_DataSet()
  void SetDataSet(DataSet dataSet)
  DataView get_DefaultView()
  string get_DisplayExpression()
  void set_DisplayExpression(string value)
  string get_DisplayExpressionInternal()
  bool get_EnforceConstraints()
  void set_EnforceConstraints(bool value)
  bool get_SuspendEnforceConstraints()
  void set_SuspendEnforceConstraints(bool value)
  void EnableConstraints()
  PropertyCollection get_ExtendedProperties()
  IFormatProvider get_FormatProvider()
  bool get_HasErrors()
  CultureInfo get_Locale()
  void set_Locale(CultureInfo value)
  bool SetLocaleValue(CultureInfo culture, bool userSet, bool resetIndexes)
  bool ShouldSerializeLocale()
  int get_MinimumCapacity()
  void set_MinimumCapacity(int value)
  int get_RecordCapacity()
  int get_ElementColumnCount()
  void set_ElementColumnCount(int value)
  DataRelationCollection get_ParentRelations()
  bool get_MergingData()
  void set_MergingData(bool value)
  DataRelation[] get_NestedParentRelations()
  bool get_SchemaLoading()
  void CacheNestedParent()
  DataRelation[] FindNestedParentRelations()
  int get_NestedParentsCount()
  DataColumn[] get_PrimaryKey()
  void set_PrimaryKey(DataColumn[] value)
  bool ShouldSerializePrimaryKey()
  void ResetPrimaryKey()
  DataRowCollection get_Rows()
  string get_TableName()
  void set_TableName(string value)
  string get_EncodedTableName()
  string GetInheritedNamespace(List`1<DataTable> visitedTables)
  string get_Namespace()
  void set_Namespace(string value)
  bool IsNamespaceInherited()
  void CheckCascadingNamespaceConflict(string realNamespace)
  void CheckNamespaceValidityForNestedRelations(string realNamespace)
  void CheckNamespaceValidityForNestedParentRelations(string ns, DataTable parentTable)
  void DoRaiseNamespaceChange()
  bool ShouldSerializeNamespace()
  void ResetNamespace()
  void BeginInit()
  void EndInit()
  string get_Prefix()
  void set_Prefix(string value)
  DataColumn get_XmlText()
  void set_XmlText(DataColumn value)
  decimal get_MaxOccurs()
  void set_MaxOccurs(decimal value)
  decimal get_MinOccurs()
  void set_MinOccurs(decimal value)
  void SetKeyValues(DataKey key, Object[] keyValues, int record)
  DataRow FindByIndex(Index ndx, Object[] key)
  DataRow FindMergeTarget(DataRow row, DataKey key, Index ndx)
  void SetMergeRecords(DataRow row, int newRecord, int oldRecord, DataRowAction action)
  DataRow MergeRow(DataRow row, DataRow targetRow, bool preserveChanges, Index idxSearch)
  void AcceptChanges()
  DataTable CreateInstance()
  DataTable Clone()
  DataTable Clone(DataSet cloneDS)
  DataTable IncrementalCloneTo(DataTable sourceTable, DataTable targetTable)
  DataTable CloneHierarchy(DataTable sourceTable, DataSet ds, Hashtable visitedMap)
  DataTable CloneTo(DataTable clone, DataSet cloneDS, bool skipExpressionColumns)
  DataTable Copy()
  void add_ColumnChanging(DataColumnChangeEventHandler value)
  void remove_ColumnChanging(DataColumnChangeEventHandler value)
  void add_ColumnChanged(DataColumnChangeEventHandler value)
  void remove_ColumnChanged(DataColumnChangeEventHandler value)
  void add_Initialized(EventHandler value)
  void remove_Initialized(EventHandler value)
  void add_PropertyChanging(PropertyChangedEventHandler value)
  void remove_PropertyChanging(PropertyChangedEventHandler value)
  void add_RowChanged(DataRowChangeEventHandler value)
  void remove_RowChanged(DataRowChangeEventHandler value)
  void add_RowChanging(DataRowChangeEventHandler value)
  void remove_RowChanging(DataRowChangeEventHandler value)
  void add_RowDeleting(DataRowChangeEventHandler value)
  void remove_RowDeleting(DataRowChangeEventHandler value)
  void add_RowDeleted(DataRowChangeEventHandler value)
  void remove_RowDeleted(DataRowChangeEventHandler value)
  void add_TableClearing(DataTableClearEventHandler value)
  void remove_TableClearing(DataTableClearEventHandler value)
  void add_TableCleared(DataTableClearEventHandler value)
  void remove_TableCleared(DataTableClearEventHandler value)
  void add_TableNewRow(DataTableNewRowEventHandler value)
  void remove_TableNewRow(DataTableNewRowEventHandler value)
  ISite get_Site()
  void set_Site(ISite value)
  DataRow AddRecords(int oldRecord, int newRecord)
  void AddRow(DataRow row)
  void AddRow(DataRow row, int proposedID)
  void InsertRow(DataRow row, int proposedID, int pos)
  void InsertRow(DataRow row, long proposedID, int pos, bool fireEvent)
  void CheckNotModifying(DataRow row)
  void Clear()
  void Clear(bool clearAll)
  void CascadeAll(DataRow row, DataRowAction action)
  void CommitRow(DataRow row)
  int Compare(string s1, string s2)
  int Compare(string s1, string s2, CompareInfo comparer)
  int IndexOf(string s1, string s2)
  bool IsSuffix(string s1, string s2)
  object Compute(string expression, string filter)
  bool System.ComponentModel.IListSource.get_ContainsListCollection()
  void CopyRow(DataTable table, DataRow row)
  void DeleteRow(DataRow row)
  void CheckPrimaryKey()
  DataRow FindByPrimaryKey(Object[] values)
  DataRow FindByPrimaryKey(object value)
  DataRow FindRow(DataKey key, Object[] values)
  DataRow FindRow(DataKey key, object value)
  string FormatSortString(IndexField[] indexDesc)
  void FreeRecord(Int32& record)
  DataTable GetChanges()
  DataTable GetChanges(DataRowState rowStates)
  DataRow[] GetErrors()
  Index GetIndex(IndexField[] indexDesc)
  Index GetIndex(string sort, DataViewRowState recordStates, IFilter rowFilter)
  Index GetIndex(IndexField[] indexDesc, DataViewRowState recordStates, IFilter rowFilter)
  IList System.ComponentModel.IListSource.GetList()
  List`1<DataViewListener> GetListeners()
  int GetSpecialHashCode(string name)
  void ImportRow(DataRow row)
  void InsertRow(DataRow row, long proposedID)
  IndexField[] NewIndexDesc(DataKey key)
  int NewRecord()
  int NewUninitializedRecord()
  int NewRecordFromArray(Object[] value)
  int NewRecord(int sourceRecord)
  DataRow NewEmptyRow()
  DataRow NewUninitializedRow()
  DataRow NewRow()
  DataRow CreateEmptyRow()
  void NewRowCreated(DataRow row)
  DataRow NewRow(int record)
  DataRow NewRowFromBuilder(DataRowBuilder builder)
  Type GetRowType()
  DataRow[] NewRowArray(int size)
  bool get_NeedColumnChangeEvents()
  void OnColumnChanging(DataColumnChangeEventArgs e)
  void OnColumnChanged(DataColumnChangeEventArgs e)
  void OnPropertyChanging(PropertyChangedEventArgs pcevent)
  void OnRemoveColumnInternal(DataColumn column)
  void OnRemoveColumn(DataColumn column)
  DataRowChangeEventArgs OnRowChanged(DataRowChangeEventArgs args, DataRow eRow, DataRowAction eAction)
  DataRowChangeEventArgs OnRowChanging(DataRowChangeEventArgs args, DataRow eRow, DataRowAction eAction)
  void OnRowChanged(DataRowChangeEventArgs e)
  void OnRowChanging(DataRowChangeEventArgs e)
  void OnRowDeleting(DataRowChangeEventArgs e)
  void OnRowDeleted(DataRowChangeEventArgs e)
  void OnTableCleared(DataTableClearEventArgs e)
  void OnTableClearing(DataTableClearEventArgs e)
  void OnTableNewRow(DataTableNewRowEventArgs e)
  void OnInitialized()
  IndexField[] ParseSortString(string sortString)
  void RaisePropertyChanging(string name)
  void RecordChanged(int record)
  void RecordChanged(Int32[] oldIndex, Int32[] newIndex)
  void RecordStateChanged(int record, DataViewRowState oldState, DataViewRowState newState)
  void RecordStateChanged(int record1, DataViewRowState oldState1, DataViewRowState newState1, int record2, DataViewRowState oldState2, DataViewRowState newState2)
  Int32[] RemoveRecordFromIndexes(DataRow row, DataRowVersion version)
  Int32[] InsertRecordToIndexes(DataRow row, DataRowVersion version)
  void SilentlySetValue(DataRow dr, DataColumn dc, DataRowVersion version, object newValue)
  void RejectChanges()
  void RemoveRow(DataRow row, bool check)
  void Reset()
  void ResetIndexes()
  void ResetInternalIndexes(DataColumn column)
  void RollbackRow(DataRow row)
  DataRowChangeEventArgs RaiseRowChanged(DataRowChangeEventArgs args, DataRow eRow, DataRowAction eAction)
  DataRowChangeEventArgs RaiseRowChanging(DataRowChangeEventArgs args, DataRow eRow, DataRowAction eAction)
  DataRowChangeEventArgs RaiseRowChanging(DataRowChangeEventArgs args, DataRow eRow, DataRowAction eAction, bool fireEvent)
  DataRow[] Select()
  DataRow[] Select(string filterExpression)
  DataRow[] Select(string filterExpression, string sort)
  DataRow[] Select(string filterExpression, string sort, DataViewRowState recordStates)
  void SetNewRecord(DataRow row, int proposedRecord, DataRowAction action, bool isInMerge, bool fireEvent, bool suppressEnsurePropertyChanged)
  void SetNewRecordWorker(DataRow row, int proposedRecord, DataRowAction action, bool isInMerge, bool suppressEnsurePropertyChanged, int position, bool fireEvent, Exception& deferredException)
  void SetOldRecord(DataRow row, int proposedRecord)
  void RestoreShadowIndexes()
  void SetShadowIndexes()
  void ShadowIndexCopy()
  string ToString()
  void BeginLoadData()
  void EndLoadData()
  DataRow LoadDataRow(Object[] values, bool fAcceptChanges)
  DataRow LoadDataRow(Object[] values, LoadOption loadOption)
  DataRow UpdatingAdd(Object[] values)
  bool UpdatingCurrent(DataRow row, DataRowAction action)
  DataColumn AddUniqueKey(int position)
  DataColumn AddUniqueKey()
  DataColumn AddForeignKey(DataColumn parentKey)
  void UpdatePropertyDescriptorCollectionCache()
  PropertyDescriptorCollection GetPropertyDescriptorCollection(Attribute[] attributes)
  XmlQualifiedName get_TypeName()
  void set_TypeName(XmlQualifiedName value)
  void Merge(DataTable table)
  void Merge(DataTable table, bool preserveChanges)
  void Merge(DataTable table, bool preserveChanges, MissingSchemaAction missingSchemaAction)
  void Load(IDataReader reader)
  void Load(IDataReader reader, LoadOption loadOption)
  void Load(IDataReader reader, LoadOption loadOption, FillErrorEventHandler errorHandler)
  DataRow LoadRow(Object[] values, LoadOption loadOption, Index searchIndex)
  void SetDataRowWithLoadOption(DataRow dataRow, int recordNo, LoadOption loadOption, bool checkReadOnly)
  DataTableReader CreateDataReader()
  void WriteXml(Stream stream)
  void WriteXml(Stream stream, bool writeHierarchy)
  void WriteXml(TextWriter writer)
  void WriteXml(TextWriter writer, bool writeHierarchy)
  void WriteXml(XmlWriter writer)
  void WriteXml(XmlWriter writer, bool writeHierarchy)
  void WriteXml(string fileName)
  void WriteXml(string fileName, bool writeHierarchy)
  void WriteXml(Stream stream, XmlWriteMode mode)
  void WriteXml(Stream stream, XmlWriteMode mode, bool writeHierarchy)
  void WriteXml(TextWriter writer, XmlWriteMode mode)
  void WriteXml(TextWriter writer, XmlWriteMode mode, bool writeHierarchy)
  void WriteXml(XmlWriter writer, XmlWriteMode mode)
  void WriteXml(XmlWriter writer, XmlWriteMode mode, bool writeHierarchy)
  void WriteXml(string fileName, XmlWriteMode mode)
  void WriteXml(string fileName, XmlWriteMode mode, bool writeHierarchy)
  void WriteXmlSchema(Stream stream)
  void WriteXmlSchema(Stream stream, bool writeHierarchy)
  void WriteXmlSchema(TextWriter writer)
  void WriteXmlSchema(TextWriter writer, bool writeHierarchy)
  bool CheckForClosureOnExpressions(DataTable dt, bool writeHierarchy)
  bool CheckForClosureOnExpressionTables(List`1<DataTable> tableList)
  void WriteXmlSchema(XmlWriter writer)
  void WriteXmlSchema(XmlWriter writer, bool writeHierarchy)
  void WriteXmlSchema(string fileName)
  void WriteXmlSchema(string fileName, bool writeHierarchy)
  XmlReadMode ReadXml(Stream stream)
  XmlReadMode ReadXml(TextReader reader)
  XmlReadMode ReadXml(string fileName)
  XmlReadMode ReadXml(XmlReader reader)
  void RestoreConstraint(bool originalEnforceConstraint)
  bool IsEmptyXml(XmlReader reader)
  XmlReadMode ReadXml(XmlReader reader, bool denyResolving)
  XmlReadMode ReadXml(XmlReader reader, XmlReadMode mode, bool denyResolving)
  void ReadEndElement(XmlReader reader)
  void ReadXDRSchema(XmlReader reader)
  bool MoveToElement(XmlReader reader, int depth)
  void ReadXmlDiffgram(XmlReader reader)
  void ReadXSDSchema(XmlReader reader, bool denyResolving)
  void ReadXmlSchema(Stream stream)
  void ReadXmlSchema(TextReader reader)
  void ReadXmlSchema(string fileName)
  void ReadXmlSchema(XmlReader reader)
  void ReadXmlSchema(XmlReader reader, bool denyResolving)
  void CreateTableList(DataTable currentTable, List`1<DataTable> tableList)
  void CreateRelationList(List`1<DataTable> tableList, List`1<DataRelation> relationList)
  XmlSchemaComplexType GetDataTableSchema(XmlSchemaSet schemaSet)
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  XmlSchema GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  void ReadXmlSerializable(XmlReader reader)
  Hashtable get_RowDiffId()
  int get_ObjectID()
  void AddDependentColumn(DataColumn expressionColumn)
  void RemoveDependentColumn(DataColumn expressionColumn)
  void EvaluateExpressions()
  void EvaluateExpressions(DataRow row, DataRowAction action, List`1<DataRow> cachedRows)
  void EvaluateExpressions(DataColumn column)
  void EvaluateDependentExpressions(DataColumn column)
  void EvaluateDependentExpressions(List`1<DataColumn> columns, DataRow row, DataRowVersion version, List`1<DataRow> cachedRows)
--------------------------------------------------
Класс: System.Data.DataTableClearEventArgs
Наследуется от: EventArgs
Поля:
  DataTable <Table>k__BackingField
Свойства:
  DataTable Table
  string TableName
  string TableNamespace
Методы:
  void .ctor(DataTable dataTable)
  DataTable get_Table()
  string get_TableName()
  string get_TableNamespace()
--------------------------------------------------
Класс: System.Data.DataTableClearEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataTableClearEventArgs e)
  IAsyncResult BeginInvoke(object sender, DataTableClearEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.DataTableCollection
Наследуется от: InternalDataCollectionBase
Поля:
  DataSet _dataSet
  ArrayList _list
  int _defaultNameIndex
  DataTable[] _delayedAddRangeTables
  CollectionChangeEventHandler _onCollectionChangedDelegate
  CollectionChangeEventHandler _onCollectionChangingDelegate
  int s_objectTypeCount
  int _objectID
Свойства:
  ArrayList List
  int ObjectID
  DataTable Item
  DataTable Item
  DataTable Item
Методы:
  void .ctor(DataSet dataSet)
  ArrayList get_List()
  int get_ObjectID()
  DataTable get_Item(int index)
  DataTable get_Item(string name)
  DataTable get_Item(string name, string tableNamespace)
  DataTable GetTable(string name, string ns)
  DataTable GetTableSmart(string name, string ns)
  void Add(DataTable table)
  void AddRange(DataTable[] tables)
  DataTable Add(string name)
  DataTable Add(string name, string tableNamespace)
  DataTable Add()
  void add_CollectionChanged(CollectionChangeEventHandler value)
  void remove_CollectionChanged(CollectionChangeEventHandler value)
  void add_CollectionChanging(CollectionChangeEventHandler value)
  void remove_CollectionChanging(CollectionChangeEventHandler value)
  void ArrayAdd(DataTable table)
  string AssignName()
  void BaseAdd(DataTable table)
  void BaseGroupSwitch(DataTable[] oldArray, int oldLength, DataTable[] newArray, int newLength)
  void BaseRemove(DataTable table)
  bool CanRemove(DataTable table)
  bool CanRemove(DataTable table, bool fThrowException)
  void Clear()
  bool Contains(string name)
  bool Contains(string name, string tableNamespace)
  bool Contains(string name, string tableNamespace, bool checkProperty, bool caseSensitive)
  bool Contains(string name, bool caseSensitive)
  void CopyTo(DataTable[] array, int index)
  int IndexOf(DataTable table)
  int IndexOf(string tableName)
  int IndexOf(string tableName, string tableNamespace)
  int IndexOf(string tableName, string tableNamespace, bool chekforNull)
  void ReplaceFromInference(List`1<DataTable> tableList)
  int InternalIndexOf(string tableName)
  int InternalIndexOf(string tableName, string tableNamespace)
  void FinishInitCollection()
  string MakeName(int index)
  void OnCollectionChanged(CollectionChangeEventArgs ccevent)
  void OnCollectionChanging(CollectionChangeEventArgs ccevent)
  void RegisterName(string name, string tbNamespace)
  void Remove(DataTable table)
  void RemoveAt(int index)
  void Remove(string name)
  void Remove(string name, string tableNamespace)
  void UnregisterName(string name)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataTableNewRowEventArgs
Наследуется от: EventArgs
Поля:
  DataRow <Row>k__BackingField
Свойства:
  DataRow Row
Методы:
  void .ctor(DataRow dataRow)
  DataRow get_Row()
--------------------------------------------------
Класс: System.Data.DataTableNewRowEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataTableNewRowEventArgs e)
  IAsyncResult BeginInvoke(object sender, DataTableNewRowEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.DataTablePropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
  DataTable <Table>k__BackingField
Свойства:
  DataTable Table
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
Методы:
  DataTable get_Table()
  void .ctor(DataTable dataTable)
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  bool Equals(object other)
  int GetHashCode()
  bool CanResetValue(object component)
  object GetValue(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
--------------------------------------------------
Класс: System.Data.DataTableReader
Наследуется от: DbDataReader
Поля:
  DataTable[] _tables
  bool _isOpen
  DataTable _schemaTable
  int _tableCounter
  int _rowCounter
  DataTable _currentDataTable
  DataRow _currentDataRow
  bool _hasRows
  bool _reachEORows
  bool _currentRowRemoved
  bool _schemaIsChanged
  bool _started
  bool _readerIsInvalid
  DataTableReaderListener _listener
  bool _tableCleared
Свойства:
  bool ReaderIsInvalid
  bool IsSchemaChanged
  DataTable CurrentDataTable
  int Depth
  bool IsClosed
  int RecordsAffected
  bool HasRows
  object Item
  object Item
  int FieldCount
Методы:
  void .ctor(DataTable dataTable)
  void .ctor(DataTable[] dataTables)
  bool get_ReaderIsInvalid()
  void set_ReaderIsInvalid(bool value)
  bool get_IsSchemaChanged()
  void set_IsSchemaChanged(bool value)
  DataTable get_CurrentDataTable()
  void Init()
  void Close()
  DataTable GetSchemaTable()
  bool NextResult()
  bool Read()
  int get_Depth()
  bool get_IsClosed()
  int get_RecordsAffected()
  bool get_HasRows()
  object get_Item(int ordinal)
  object get_Item(string name)
  int get_FieldCount()
  Type GetProviderSpecificFieldType(int ordinal)
  object GetProviderSpecificValue(int ordinal)
  int GetProviderSpecificValues(Object[] values)
  bool GetBoolean(int ordinal)
  byte GetByte(int ordinal)
  long GetBytes(int ordinal, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  char GetChar(int ordinal)
  long GetChars(int ordinal, long dataIndex, Char[] buffer, int bufferIndex, int length)
  string GetDataTypeName(int ordinal)
  DateTime GetDateTime(int ordinal)
  decimal GetDecimal(int ordinal)
  double GetDouble(int ordinal)
  Type GetFieldType(int ordinal)
  float GetFloat(int ordinal)
  Guid GetGuid(int ordinal)
  short GetInt16(int ordinal)
  int GetInt32(int ordinal)
  long GetInt64(int ordinal)
  string GetName(int ordinal)
  int GetOrdinal(string name)
  string GetString(int ordinal)
  object GetValue(int ordinal)
  int GetValues(Object[] values)
  bool IsDBNull(int ordinal)
  IEnumerator GetEnumerator()
  DataTable GetSchemaTableFromDataTable(DataTable table)
  void ValidateOpen(string caller)
  void ValidateReader()
  void ValidateState(string caller)
  void ValidateRow(int rowPosition)
  void SchemaChanged()
  void DataTableCleared()
  void DataChanged(DataRowChangeEventArgs args)
--------------------------------------------------
Класс: System.Data.DataTableReaderListener
Наследуется от: object
Поля:
  DataTable _currentDataTable
  bool _isSubscribed
  WeakReference _readerWeak
Свойства:
Методы:
  void .ctor(DataTableReader reader)
  void CleanUp()
  void UpdataTable(DataTable datatable)
  void SubscribeEvents()
  void UnSubscribeEvents()
  void DataTableCleared(object sender, DataTableClearEventArgs e)
  void SchemaChanged(object sender, CollectionChangeEventArgs e)
  void DataChanged(object sender, DataRowChangeEventArgs args)
--------------------------------------------------
Класс: System.Data.DataTableTypeConverter
Наследуется от: ReferenceConverter
Поля:
Свойства:
Методы:
  void .ctor()
  bool GetPropertiesSupported(ITypeDescriptorContext context)
--------------------------------------------------
Класс: System.Data.DataView
Наследуется от: MarshalByValueComponent
Поля:
  DataViewManager _dataViewManager
  DataTable _table
  bool _locked
  Index _index
  Dictionary`2<string, Index> _findIndexes
  string _sort
  Comparison`1<DataRow> _comparison
  IFilter _rowFilter
  DataViewRowState _recordStates
  bool _shouldOpen
  bool _open
  bool _allowNew
  bool _allowEdit
  bool _allowDelete
  bool _applyDefaultSort
  DataRow _addNewRow
  ListChangedEventArgs _addNewMoved
  ListChangedEventHandler _onListChanged
  ListChangedEventArgs s_resetEventArgs
  DataTable _delayedTable
  string _delayedRowFilter
  string _delayedSort
  DataViewRowState _delayedRecordStates
  bool _fInitInProgress
  bool _fEndInitInProgress
  Dictionary`2<DataRow, DataRowView> _rowViewCache
  Dictionary`2<DataRow, DataRowView> _rowViewBuffer
  DataViewListener _dvListener
  int s_objectTypeCount
  int _objectID
  EventHandler Initialized
Свойства:
  bool AllowDelete
  bool ApplyDefaultSort
  bool AllowEdit
  bool AllowNew
  int Count
  int CountFromIndex
  DataViewManager DataViewManager
  bool IsInitialized
  bool IsOpen
  bool System.Collections.ICollection.IsSynchronized
  string RowFilter
  Predicate`1<DataRow> RowPredicate
  DataViewRowState RowStateFilter
  string Sort
  Comparison`1<DataRow> SortComparison
  object System.Collections.ICollection.SyncRoot
  DataTable Table
  object System.Collections.IList.Item
  DataRowView Item
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.ComponentModel.IBindingList.AllowNew
  bool System.ComponentModel.IBindingList.AllowEdit
  bool System.ComponentModel.IBindingList.AllowRemove
  bool System.ComponentModel.IBindingList.SupportsChangeNotification
  bool System.ComponentModel.IBindingList.SupportsSearching
  bool System.ComponentModel.IBindingList.SupportsSorting
  bool System.ComponentModel.IBindingList.IsSorted
  PropertyDescriptor System.ComponentModel.IBindingList.SortProperty
  ListSortDirection System.ComponentModel.IBindingList.SortDirection
  string System.ComponentModel.IBindingListView.Filter
  ListSortDescriptionCollection System.ComponentModel.IBindingListView.SortDescriptions
  bool System.ComponentModel.IBindingListView.SupportsAdvancedSorting
  bool System.ComponentModel.IBindingListView.SupportsFiltering
  int ObjectID
Методы:
  void .ctor(DataTable table, bool locked)
  void .ctor()
  void .ctor(DataTable table)
  void .ctor(DataTable table, string RowFilter, string Sort, DataViewRowState RowState)
  bool get_AllowDelete()
  void set_AllowDelete(bool value)
  bool get_ApplyDefaultSort()
  void set_ApplyDefaultSort(bool value)
  bool get_AllowEdit()
  void set_AllowEdit(bool value)
  bool get_AllowNew()
  void set_AllowNew(bool value)
  int get_Count()
  int get_CountFromIndex()
  DataViewManager get_DataViewManager()
  bool get_IsInitialized()
  bool get_IsOpen()
  bool System.Collections.ICollection.get_IsSynchronized()
  string get_RowFilter()
  void set_RowFilter(string value)
  Predicate`1<DataRow> get_RowPredicate()
  void set_RowPredicate(Predicate`1<DataRow> value)
  DataViewRowState get_RowStateFilter()
  void set_RowStateFilter(DataViewRowState value)
  string get_Sort()
  void set_Sort(string value)
  Comparison`1<DataRow> get_SortComparison()
  void set_SortComparison(Comparison`1<DataRow> value)
  object System.Collections.ICollection.get_SyncRoot()
  DataTable get_Table()
  void set_Table(DataTable value)
  object System.Collections.IList.get_Item(int recordIndex)
  void System.Collections.IList.set_Item(int recordIndex, object value)
  DataRowView get_Item(int recordIndex)
  DataRowView AddNew()
  void BeginInit()
  void EndInit()
  void CheckOpen()
  void CheckSort(string sort)
  void Close()
  void CopyTo(Array array, int index)
  void CopyTo(DataRowView[] array, int index)
  void Delete(int index)
  void Delete(DataRow row)
  void Dispose(bool disposing)
  int Find(object key)
  int FindByKey(object key)
  int Find(Object[] key)
  int FindByKey(Object[] key)
  DataRowView[] FindRows(object key)
  DataRowView[] FindRows(Object[] key)
  DataRowView[] FindRowsByKey(Object[] key)
  DataRowView[] GetDataRowViewFromRange(Range range)
  void FinishAddNew(bool success)
  IEnumerator GetEnumerator()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  int IndexOf(DataRowView rowview)
  int IndexOfDataRowView(DataRowView rowview)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  Index GetFindIndex(string column, bool keepIndex)
  bool System.ComponentModel.IBindingList.get_AllowNew()
  object System.ComponentModel.IBindingList.AddNew()
  bool System.ComponentModel.IBindingList.get_AllowEdit()
  bool System.ComponentModel.IBindingList.get_AllowRemove()
  bool System.ComponentModel.IBindingList.get_SupportsChangeNotification()
  bool System.ComponentModel.IBindingList.get_SupportsSearching()
  bool System.ComponentModel.IBindingList.get_SupportsSorting()
  bool System.ComponentModel.IBindingList.get_IsSorted()
  PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
  PropertyDescriptor GetSortProperty()
  ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
  void add_ListChanged(ListChangedEventHandler value)
  void remove_ListChanged(ListChangedEventHandler value)
  void add_Initialized(EventHandler value)
  void remove_Initialized(EventHandler value)
  void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property)
  void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)
  int System.ComponentModel.IBindingList.Find(PropertyDescriptor property, object key)
  void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property)
  void System.ComponentModel.IBindingList.RemoveSort()
  void System.ComponentModel.IBindingListView.ApplySort(ListSortDescriptionCollection sorts)
  string CreateSortString(PropertyDescriptor property, ListSortDirection direction)
  void System.ComponentModel.IBindingListView.RemoveFilter()
  string System.ComponentModel.IBindingListView.get_Filter()
  void System.ComponentModel.IBindingListView.set_Filter(string value)
  ListSortDescriptionCollection System.ComponentModel.IBindingListView.get_SortDescriptions()
  ListSortDescriptionCollection GetSortDescriptions()
  bool System.ComponentModel.IBindingListView.get_SupportsAdvancedSorting()
  bool System.ComponentModel.IBindingListView.get_SupportsFiltering()
  string System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[] listAccessors)
  PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors)
  IFilter GetFilter()
  int GetRecord(int recordIndex)
  DataRow GetRow(int index)
  DataRowView GetRowView(int record)
  DataRowView GetRowView(DataRow dr)
  void IndexListChanged(object sender, ListChangedEventArgs e)
  void IndexListChangedInternal(ListChangedEventArgs e)
  void MaintainDataView(ListChangedType changedType, DataRow row, bool trackAddRemove)
  void OnListChanged(ListChangedEventArgs e)
  void OnInitialized()
  void Open()
  void Reset()
  void ResetRowViewCache()
  void SetDataViewManager(DataViewManager dataViewManager)
  void SetIndex(string newSort, DataViewRowState newRowStates, IFilter newRowFilter)
  void SetIndex2(string newSort, DataViewRowState newRowStates, IFilter newRowFilter, bool fireEvent)
  void UpdateIndex()
  void UpdateIndex(bool force)
  void UpdateIndex(bool force, bool fireEvent)
  void ChildRelationCollectionChanged(object sender, CollectionChangeEventArgs e)
  void ParentRelationCollectionChanged(object sender, CollectionChangeEventArgs e)
  void ColumnCollectionChanged(object sender, CollectionChangeEventArgs e)
  void ColumnCollectionChangedInternal(object sender, CollectionChangeEventArgs e)
  DataTable ToTable()
  DataTable ToTable(string tableName)
  DataTable ToTable(bool distinct, String[] columnNames)
  DataTable ToTable(string tableName, bool distinct, String[] columnNames)
  bool RowExist(List`1<Object[]> arraylist, Object[] objectArray)
  bool Equals(DataView view)
  int get_ObjectID()
  void .cctor()
--------------------------------------------------
Класс: System.Data.DataViewListener
Наследуется от: object
Поля:
  WeakReference _dvWeak
  DataTable _table
  Index _index
  int _objectID
Свойства:
Методы:
  void .ctor(DataView dv)
  void ChildRelationCollectionChanged(object sender, CollectionChangeEventArgs e)
  void ParentRelationCollectionChanged(object sender, CollectionChangeEventArgs e)
  void ColumnCollectionChanged(object sender, CollectionChangeEventArgs e)
  void MaintainDataView(ListChangedType changedType, DataRow row, bool trackAddRemove)
  void IndexListChanged(ListChangedEventArgs e)
  void RegisterMetaDataEvents(DataTable table)
  void UnregisterMetaDataEvents()
  void UnregisterMetaDataEvents(bool updateListeners)
  void RegisterListChangedEvent(Index index)
  void UnregisterListChangedEvent()
  void CleanUp(bool updateListeners)
  void RegisterListener(DataTable table)
--------------------------------------------------
Класс: System.Data.DataViewManager
Наследуется от: MarshalByValueComponent
Поля:
  DataViewSettingCollection _dataViewSettingsCollection
  DataSet _dataSet
  DataViewManagerListItemTypeDescriptor _item
  bool _locked
  int _nViews
  NotSupportedException s_notSupported
  ListChangedEventHandler ListChanged
Свойства:
  DataSet DataSet
  DataViewSettingCollection DataViewSettings
  string DataViewSettingCollectionString
  int System.Collections.ICollection.Count
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.ICollection.IsSynchronized
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
  bool System.ComponentModel.IBindingList.AllowNew
  bool System.ComponentModel.IBindingList.AllowEdit
  bool System.ComponentModel.IBindingList.AllowRemove
  bool System.ComponentModel.IBindingList.SupportsChangeNotification
  bool System.ComponentModel.IBindingList.SupportsSearching
  bool System.ComponentModel.IBindingList.SupportsSorting
  bool System.ComponentModel.IBindingList.IsSorted
  PropertyDescriptor System.ComponentModel.IBindingList.SortProperty
  ListSortDirection System.ComponentModel.IBindingList.SortDirection
Методы:
  void .ctor()
  void .ctor(DataSet dataSet)
  void .ctor(DataSet dataSet, bool locked)
  DataSet get_DataSet()
  void set_DataSet(DataSet value)
  DataViewSettingCollection get_DataViewSettings()
  string get_DataViewSettingCollectionString()
  void set_DataViewSettingCollectionString(string value)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int System.Collections.ICollection.get_Count()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.ICollection.get_IsSynchronized()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  bool System.ComponentModel.IBindingList.get_AllowNew()
  object System.ComponentModel.IBindingList.AddNew()
  bool System.ComponentModel.IBindingList.get_AllowEdit()
  bool System.ComponentModel.IBindingList.get_AllowRemove()
  bool System.ComponentModel.IBindingList.get_SupportsChangeNotification()
  bool System.ComponentModel.IBindingList.get_SupportsSearching()
  bool System.ComponentModel.IBindingList.get_SupportsSorting()
  bool System.ComponentModel.IBindingList.get_IsSorted()
  PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
  ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
  void add_ListChanged(ListChangedEventHandler value)
  void remove_ListChanged(ListChangedEventHandler value)
  void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property)
  void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction)
  int System.ComponentModel.IBindingList.Find(PropertyDescriptor property, object key)
  void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property)
  void System.ComponentModel.IBindingList.RemoveSort()
  string System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[] listAccessors)
  PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors)
  DataView CreateDataView(DataTable table)
  void OnListChanged(ListChangedEventArgs e)
  void TableCollectionChanged(object sender, CollectionChangeEventArgs e)
  void RelationCollectionChanged(object sender, CollectionChangeEventArgs e)
  void .cctor()
--------------------------------------------------
Класс: System.Data.DataViewManagerListItemTypeDescriptor
Наследуется от: object
Поля:
  DataViewManager _dataViewManager
  PropertyDescriptorCollection _propsCollection
Свойства:
Методы:
  void .ctor(DataViewManager dataViewManager)
  void Reset()
  DataView GetDataView(DataTable table)
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: System.Data.DataViewRowState
Наследуется от: Enum
Поля:
  int value__
  DataViewRowState None
  DataViewRowState Unchanged
  DataViewRowState Added
  DataViewRowState Deleted
  DataViewRowState ModifiedCurrent
  DataViewRowState ModifiedOriginal
  DataViewRowState OriginalRows
  DataViewRowState CurrentRows
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DataViewSetting
Наследуется от: object
Поля:
  DataViewManager _dataViewManager
  DataTable _table
  string _sort
  string _rowFilter
  DataViewRowState _rowStateFilter
  bool _applyDefaultSort
Свойства:
  bool ApplyDefaultSort
  DataViewManager DataViewManager
  DataTable Table
  string RowFilter
  DataViewRowState RowStateFilter
  string Sort
Методы:
  void .ctor()
  bool get_ApplyDefaultSort()
  void set_ApplyDefaultSort(bool value)
  DataViewManager get_DataViewManager()
  void SetDataViewManager(DataViewManager dataViewManager)
  DataTable get_Table()
  void SetDataTable(DataTable table)
  string get_RowFilter()
  void set_RowFilter(string value)
  DataViewRowState get_RowStateFilter()
  void set_RowStateFilter(DataViewRowState value)
  string get_Sort()
  void set_Sort(string value)
--------------------------------------------------
Класс: System.Data.DataViewSettingCollection
Наследуется от: object
Поля:
  DataViewManager _dataViewManager
  Hashtable _list
Свойства:
  DataViewSetting Item
  DataViewSetting Item
  DataViewSetting Item
  int Count
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor(DataViewManager dataViewManager)
  DataViewSetting get_Item(DataTable table)
  void set_Item(DataTable table, DataViewSetting value)
  DataTable GetTable(string tableName)
  DataTable GetTable(int index)
  DataViewSetting get_Item(string tableName)
  DataViewSetting get_Item(int index)
  void set_Item(int index, DataViewSetting value)
  void CopyTo(Array ar, int index)
  void CopyTo(DataViewSetting[] ar, int index)
  int get_Count()
  IEnumerator GetEnumerator()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void Remove(DataTable table)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DbType
Наследуется от: Enum
Поля:
  int value__
  DbType AnsiString
  DbType Binary
  DbType Byte
  DbType Boolean
  DbType Currency
  DbType Date
  DbType DateTime
  DbType Decimal
  DbType Double
  DbType Guid
  DbType Int16
  DbType Int32
  DbType Int64
  DbType Object
  DbType SByte
  DbType Single
  DbType String
  DbType Time
  DbType UInt16
  DbType UInt32
  DbType UInt64
  DbType VarNumeric
  DbType AnsiStringFixedLength
  DbType StringFixedLength
  DbType Xml
  DbType DateTime2
  DbType DateTimeOffset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.DefaultValueTypeConverter
Наследуется от: StringConverter
Поля:
  string NullString
  string DbNullString
Свойства:
Методы:
  void .ctor()
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
--------------------------------------------------
Класс: System.Data.FillErrorEventArgs
Наследуется от: EventArgs
Поля:
  bool _continueFlag
  DataTable _dataTable
  Exception _errors
  Object[] _values
Свойства:
  bool Continue
  DataTable DataTable
  Exception Errors
  Object[] Values
Методы:
  void .ctor(DataTable dataTable, Object[] values)
  bool get_Continue()
  void set_Continue(bool value)
  DataTable get_DataTable()
  Exception get_Errors()
  void set_Errors(Exception value)
  Object[] get_Values()
--------------------------------------------------
Класс: System.Data.FillErrorEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, FillErrorEventArgs e)
  IAsyncResult BeginInvoke(object sender, FillErrorEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.Aggregate
Наследуется от: Enum
Поля:
  int value__
  Aggregate None
  Aggregate Sum
  Aggregate Avg
  Aggregate Min
  Aggregate Max
  Aggregate Count
  Aggregate StDev
  Aggregate Var
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.AggregateNode
Наследуется от: ExpressionNode
Поля:
  AggregateType _type
  Aggregate _aggregate
  bool _local
  string _relationName
  string _columnName
  DataTable _childTable
  DataColumn _column
  DataRelation _relation
Свойства:
Методы:
  void .ctor(DataTable table, FunctionId aggregateType, string columnName)
  void .ctor(DataTable table, FunctionId aggregateType, string columnName, bool local, string relationName)
  void Bind(DataTable table, List`1<DataColumn> list)
  void Bind(DataRelation relation, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] records)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool DependsOn(DataColumn column)
  ExpressionNode Optimize()
--------------------------------------------------
Класс: System.Data.BinaryNode
Наследуется от: ExpressionNode
Поля:
  int _op
  ExpressionNode _left
  ExpressionNode _right
Свойства:
Методы:
  void .ctor(DataTable table, int op, ExpressionNode left, ExpressionNode right)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool DependsOn(DataColumn column)
  ExpressionNode Optimize()
  void SetTypeMismatchError(int op, Type left, Type right)
  object Eval(ExpressionNode expr, DataRow row, DataRowVersion version, Int32[] recordNos)
  int BinaryCompare(object vLeft, object vRight, StorageType resultType, int op)
  int BinaryCompare(object vLeft, object vRight, StorageType resultType, int op, CompareInfo comparer)
  object EvalBinaryOp(int op, ExpressionNode left, ExpressionNode right, DataRow row, DataRowVersion version, Int32[] recordNos)
  DataTypePrecedence GetPrecedence(StorageType storageType)
  StorageType GetPrecedenceType(DataTypePrecedence code)
  bool IsMixed(StorageType left, StorageType right)
  bool IsMixedSql(StorageType left, StorageType right)
  StorageType ResultType(StorageType left, StorageType right, bool lc, bool rc, int op)
  StorageType ResultSqlType(StorageType left, StorageType right, bool lc, bool rc, int op)
  int SqlResultType(int typeCode)
--------------------------------------------------
Класс: System.Data.LikeNode
Наследуется от: BinaryNode
Поля:
  int match_left
  int match_right
  int match_middle
  int match_exact
  int match_all
  int _kind
  string _pattern
Свойства:
Методы:
  void .ctor(DataTable table, int op, ExpressionNode left, ExpressionNode right)
  object Eval(DataRow row, DataRowVersion version)
  string AnalyzePattern(string pat)
--------------------------------------------------
Класс: System.Data.ConstNode
Наследуется от: ExpressionNode
Поля:
  object _val
Свойства:
Методы:
  void .ctor(DataTable table, ValueType type, object constant)
  void .ctor(DataTable table, ValueType type, object constant, bool fParseQuotes)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  ExpressionNode Optimize()
  object SmallestDecimal(object constant)
  object SmallestNumeric(object constant)
--------------------------------------------------
Класс: System.Data.DataExpression
Наследуется от: object
Поля:
  string _originalExpression
  bool _parsed
  bool _bound
  ExpressionNode _expr
  DataTable _table
  StorageType _storageType
  Type _dataType
  DataColumn[] _dependency
Свойства:
  string Expression
  ExpressionNode ExpressionNode
  bool HasValue
Методы:
  void .ctor(DataTable table, string expression)
  void .ctor(DataTable table, string expression, Type type)
  string get_Expression()
  ExpressionNode get_ExpressionNode()
  bool get_HasValue()
  void Bind(DataTable table)
  bool DependsOn(DataColumn column)
  object Evaluate()
  object Evaluate(DataRow row, DataRowVersion version)
  object Evaluate(DataRow[] rows)
  object Evaluate(DataRow[] rows, DataRowVersion version)
  bool Invoke(DataRow row, DataRowVersion version)
  DataColumn[] GetDependency()
  bool IsTableAggregate()
  bool IsUnknown(object value)
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool ToBoolean(object value)
--------------------------------------------------
Класс: System.Data.ExpressionNode
Наследуется от: object
Поля:
  DataTable _table
Свойства:
  IFormatProvider FormatProvider
  bool IsSqlColumn
  DataTable table
Методы:
  void .ctor(DataTable table)
  IFormatProvider get_FormatProvider()
  bool get_IsSqlColumn()
  DataTable get_table()
  void BindTable(DataTable table)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  ExpressionNode Optimize()
  bool DependsOn(DataColumn column)
  bool IsInteger(StorageType type)
  bool IsIntegerSql(StorageType type)
  bool IsSigned(StorageType type)
  bool IsSignedSql(StorageType type)
  bool IsUnsigned(StorageType type)
  bool IsUnsignedSql(StorageType type)
  bool IsNumeric(StorageType type)
  bool IsNumericSql(StorageType type)
  bool IsFloat(StorageType type)
  bool IsFloatSql(StorageType type)
--------------------------------------------------
Класс: System.Data.ValueType
Наследуется от: Enum
Поля:
  int value__
  ValueType Unknown
  ValueType Null
  ValueType Bool
  ValueType Numeric
  ValueType Str
  ValueType Float
  ValueType Decimal
  ValueType Object
  ValueType Date
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Nodes
Наследуется от: Enum
Поля:
  int value__
  Nodes Noop
  Nodes Unop
  Nodes UnopSpec
  Nodes Binop
  Nodes BinopSpec
  Nodes Zop
  Nodes Call
  Nodes Const
  Nodes Name
  Nodes Paren
  Nodes Conv
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.ExpressionParser
Наследуется от: object
Поля:
  int Empty
  int Scalar
  int Expr
  ReservedWords[] s_reservedwords
  char _escape
  char _decimalSeparator
  char _listSeparator
  char _exponentL
  char _exponentU
  Char[] _text
  int _pos
  int _start
  Tokens _token
  int _op
  OperatorInfo[] _ops
  int _topOperator
  int _topNode
  DataTable _table
  int MaxPredicates
  ExpressionNode[] _nodeStack
  int _prevOperand
  ExpressionNode _expression
Свойства:
Методы:
  void .ctor(DataTable table)
  void LoadExpression(string data)
  void StartScan()
  ExpressionNode Parse()
  ExpressionNode ParseAggregateArgument(FunctionId aggregate)
  ExpressionNode NodePop()
  ExpressionNode NodePeek()
  void NodePush(ExpressionNode node)
  void BuildExpression(int pri)
  void CheckToken(Tokens token)
  Tokens Scan()
  void ScanNumeric()
  void ScanName()
  void ScanName(char chEnd, char esc, string charsToEscape)
  void ScanDate()
  void ScanBinaryConstant()
  void ScanReserved()
  void ScanString(char escape)
  void ScanToken(Tokens token)
  void ScanWhite()
  bool IsWhiteSpace(char ch)
  bool IsAlphaNumeric(char ch)
  bool IsDigit(char ch)
  bool IsAlpha(char ch)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Tokens
Наследуется от: Enum
Поля:
  int value__
  Tokens None
  Tokens Name
  Tokens Numeric
  Tokens Decimal
  Tokens Float
  Tokens BinaryConst
  Tokens StringConst
  Tokens Date
  Tokens ListSeparator
  Tokens LeftParen
  Tokens RightParen
  Tokens ZeroOp
  Tokens UnaryOp
  Tokens BinaryOp
  Tokens Child
  Tokens Parent
  Tokens Dot
  Tokens Unknown
  Tokens EOS
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.OperatorInfo
Наследуется от: object
Поля:
  Nodes _type
  int _op
  int _priority
Свойства:
Методы:
  void .ctor(Nodes type, int op, int pri)
--------------------------------------------------
Класс: System.Data.InvalidExpressionException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.EvaluateException
Наследуется от: InvalidExpressionException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.SyntaxErrorException
Наследуется от: InvalidExpressionException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string s)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Data.ExprException
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  OverflowException _Overflow(string error)
  InvalidExpressionException _Expr(string error)
  SyntaxErrorException _Syntax(string error)
  EvaluateException _Eval(string error)
  EvaluateException _Eval(string error, Exception innerException)
  Exception InvokeArgument()
  Exception NYI(string moreinfo)
  Exception MissingOperand(OperatorInfo before)
  Exception MissingOperator(string token)
  Exception TypeMismatch(string expr)
  Exception FunctionArgumentOutOfRange(string arg, string func)
  Exception ExpressionTooComplex()
  Exception UnboundName(string name)
  Exception InvalidString(string str)
  Exception UndefinedFunction(string name)
  Exception SyntaxError()
  Exception FunctionArgumentCount(string name)
  Exception MissingRightParen()
  Exception UnknownToken(string token, int position)
  Exception UnknownToken(Tokens tokExpected, Tokens tokCurr, int position)
  Exception DatatypeConvertion(Type type1, Type type2)
  Exception DatavalueConvertion(object value, Type type, Exception innerException)
  Exception InvalidName(string name)
  Exception InvalidDate(string date)
  Exception NonConstantArgument()
  Exception InvalidPattern(string pat)
  Exception InWithoutParentheses()
  Exception InWithoutList()
  Exception InvalidIsSyntax()
  Exception Overflow(Type type)
  Exception ArgumentType(string function, int arg, Type type)
  Exception ArgumentTypeInteger(string function, int arg)
  Exception TypeMismatchInBinop(int op, Type type1, Type type2)
  Exception AmbiguousBinop(int op, Type type1, Type type2)
  Exception UnsupportedOperator(int op)
  Exception InvalidNameBracketing(string name)
  Exception MissingOperandBefore(string op)
  Exception TooManyRightParentheses()
  Exception UnresolvedRelation(string name, string expr)
  EvaluateException BindFailure(string relationName)
  Exception AggregateArgument()
  Exception AggregateUnbound(string expr)
  Exception EvalNoContext()
  Exception ExpressionUnbound(string expr)
  Exception ComputeNotAggregate(string expr)
  Exception FilterConvertion(string expr)
  Exception LookupArgument()
  Exception InvalidType(string typeName)
  Exception InvalidHoursArgument()
  Exception InvalidMinutesArgument()
  Exception InvalidTimeZoneRange()
  Exception MismatchKindandTimeSpan()
  Exception UnsupportedDataType(Type type)
--------------------------------------------------
Класс: System.Data.FunctionNode
Наследуется от: ExpressionNode
Поля:
  string _name
  int _info
  int _argumentCount
  int initialCapacity
  ExpressionNode[] _arguments
  Function[] s_funcs
Свойства:
  FunctionId Aggregate
  bool IsAggregate
Методы:
  void .ctor(DataTable table, string name)
  void AddArgument(ExpressionNode argument)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool DependsOn(DataColumn column)
  ExpressionNode Optimize()
  Type GetDataType(ExpressionNode node)
  object EvalFunction(FunctionId id, Object[] argumentValues, DataRow row, DataRowVersion version)
  FunctionId get_Aggregate()
  bool get_IsAggregate()
  void Check()
  void .cctor()
--------------------------------------------------
Класс: System.Data.FunctionId
Наследуется от: Enum
Поля:
  int value__
  FunctionId none
  FunctionId Ascii
  FunctionId Char
  FunctionId Charindex
  FunctionId Difference
  FunctionId Len
  FunctionId Lower
  FunctionId LTrim
  FunctionId Patindex
  FunctionId Replicate
  FunctionId Reverse
  FunctionId Right
  FunctionId RTrim
  FunctionId Soundex
  FunctionId Space
  FunctionId Str
  FunctionId Stuff
  FunctionId Substring
  FunctionId Upper
  FunctionId IsNull
  FunctionId Iif
  FunctionId Convert
  FunctionId cInt
  FunctionId cBool
  FunctionId cDate
  FunctionId cDbl
  FunctionId cStr
  FunctionId Abs
  FunctionId Acos
  FunctionId In
  FunctionId Trim
  FunctionId Sum
  FunctionId Avg
  FunctionId Min
  FunctionId Max
  FunctionId Count
  FunctionId StDev
  FunctionId Var
  FunctionId DateTimeOffset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Function
Наследуется от: object
Поля:
  string _name
  FunctionId _id
  Type _result
  bool _isValidateArguments
  bool _isVariantArgumentList
  int _argumentCount
  Type[] _parameters
  String[] s_functionName
Свойства:
Методы:
  void .ctor()
  void .ctor(string name, FunctionId id, Type result, bool IsValidateArguments, bool IsVariantArgumentList, int argumentCount, Type a1, Type a2, Type a3)
  void .cctor()
--------------------------------------------------
Класс: System.Data.IFilter
Поля:
Свойства:
Методы:
  bool Invoke(DataRow row, DataRowVersion version)
--------------------------------------------------
Класс: System.Data.LookupNode
Наследуется от: ExpressionNode
Поля:
  string _relationName
  string _columnName
  DataColumn _column
  DataRelation _relation
Свойства:
Методы:
  void .ctor(DataTable table, string columnName, string relationName)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool DependsOn(DataColumn column)
  ExpressionNode Optimize()
--------------------------------------------------
Класс: System.Data.NameNode
Наследуется от: ExpressionNode
Поля:
  char _open
  char _close
  string _name
  bool _found
  bool _type
  DataColumn _column
Свойства:
  bool IsSqlColumn
Методы:
  void .ctor(DataTable table, Char[] text, int start, int pos)
  void .ctor(DataTable table, string name)
  bool get_IsSqlColumn()
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] records)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool DependsOn(DataColumn column)
  ExpressionNode Optimize()
  string ParseName(Char[] text, int start, int pos)
--------------------------------------------------
Класс: System.Data.Operators
Наследуется от: object
Поля:
  int Noop
  int Negative
  int UnaryPlus
  int Not
  int BetweenAnd
  int In
  int Between
  int EqualTo
  int GreaterThen
  int LessThen
  int GreaterOrEqual
  int LessOrEqual
  int NotEqual
  int Is
  int Like
  int Plus
  int Minus
  int Multiply
  int Divide
  int Modulo
  int BitwiseAnd
  int BitwiseOr
  int BitwiseXor
  int BitwiseNot
  int And
  int Or
  int Proc
  int Iff
  int Qual
  int Dot
  int Null
  int True
  int False
  int Date
  int GenUniqueId
  int GenGUID
  int GUID
  int IsNot
  int priStart
  int priSubstr
  int priParen
  int priLow
  int priImp
  int priEqv
  int priXor
  int priOr
  int priAnd
  int priNot
  int priIs
  int priBetweenInLike
  int priBetweenAnd
  int priRelOp
  int priConcat
  int priContains
  int priPlusMinus
  int priMod
  int priIDiv
  int priMulDiv
  int priNeg
  int priExp
  int priProc
  int priDot
  int priMax
  Int32[] s_priority
  String[] s_looks
Свойства:
Методы:
  void .ctor()
  bool IsArithmetical(int op)
  bool IsLogical(int op)
  bool IsRelational(int op)
  int Priority(int op)
  string ToString(int op)
  void .cctor()
--------------------------------------------------
Класс: System.Data.UnaryNode
Наследуется от: ExpressionNode
Поля:
  int _op
  ExpressionNode _right
Свойства:
Методы:
  void .ctor(DataTable table, int op, ExpressionNode right)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  object EvalUnaryOp(int op, object vl)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  bool DependsOn(DataColumn column)
  ExpressionNode Optimize()
--------------------------------------------------
Класс: System.Data.ZeroOpNode
Наследуется от: ExpressionNode
Поля:
  int _op
  int zop_True
  int zop_False
  int zop_Null
Свойства:
Методы:
  void .ctor(int op)
  void Bind(DataTable table, List`1<DataColumn> list)
  object Eval()
  object Eval(DataRow row, DataRowVersion version)
  object Eval(Int32[] recordNos)
  bool IsConstant()
  bool IsTableConstant()
  bool HasLocalAggregate()
  bool HasRemoteAggregate()
  ExpressionNode Optimize()
--------------------------------------------------
Класс: System.Data.ForeignKeyConstraint
Наследуется от: Constraint
Поля:
  Rule Rule_Default
  AcceptRejectRule AcceptRejectRule_Default
  Rule _deleteRule
  Rule _updateRule
  AcceptRejectRule _acceptRejectRule
  DataKey _childKey
  DataKey _parentKey
  string _constraintName
  String[] _parentColumnNames
  String[] _childColumnNames
  string _parentTableName
  string _parentTableNamespace
Свойства:
  DataKey ChildKey
  DataColumn[] Columns
  DataTable Table
  String[] ParentColumnNames
  String[] ChildColumnNames
  AcceptRejectRule AcceptRejectRule
  Rule DeleteRule
  DataColumn[] RelatedColumns
  DataColumn[] RelatedColumnsReference
  DataKey ParentKey
  DataTable RelatedTable
  Rule UpdateRule
Методы:
  void .ctor(DataColumn parentColumn, DataColumn childColumn)
  void .ctor(string constraintName, DataColumn parentColumn, DataColumn childColumn)
  void .ctor(DataColumn[] parentColumns, DataColumn[] childColumns)
  void .ctor(string constraintName, DataColumn[] parentColumns, DataColumn[] childColumns)
  void .ctor(string constraintName, string parentTableName, String[] parentColumnNames, String[] childColumnNames, AcceptRejectRule acceptRejectRule, Rule deleteRule, Rule updateRule)
  void .ctor(string constraintName, string parentTableName, string parentTableNamespace, String[] parentColumnNames, String[] childColumnNames, AcceptRejectRule acceptRejectRule, Rule deleteRule, Rule updateRule)
  DataKey get_ChildKey()
  DataColumn[] get_Columns()
  DataTable get_Table()
  String[] get_ParentColumnNames()
  String[] get_ChildColumnNames()
  void CheckCanAddToCollection(ConstraintCollection constraints)
  bool CanBeRemovedFromCollection(ConstraintCollection constraints, bool fThrowException)
  bool IsKeyNull(Object[] values)
  bool IsConstraintViolated()
  bool CanEnableConstraint()
  void CascadeCommit(DataRow row)
  void CascadeDelete(DataRow row)
  void CascadeRollback(DataRow row)
  void CascadeUpdate(DataRow row)
  void CheckCanClearParentTable(DataTable table)
  void CheckCanRemoveParentRow(DataRow row)
  void CheckCascade(DataRow row, DataRowAction action)
  void CheckConstraint(DataRow childRow, DataRowAction action)
  void NonVirtualCheckState()
  void CheckState()
  AcceptRejectRule get_AcceptRejectRule()
  void set_AcceptRejectRule(AcceptRejectRule value)
  bool ContainsColumn(DataColumn column)
  Constraint Clone(DataSet destination)
  Constraint Clone(DataSet destination, bool ignorNSforTableLookup)
  ForeignKeyConstraint Clone(DataTable destination)
  void Create(string relationName, DataColumn[] parentColumns, DataColumn[] childColumns)
  Rule get_DeleteRule()
  void set_DeleteRule(Rule value)
  bool Equals(object key)
  int GetHashCode()
  DataColumn[] get_RelatedColumns()
  DataColumn[] get_RelatedColumnsReference()
  DataKey get_ParentKey()
  DataRelation FindParentRelation()
  DataTable get_RelatedTable()
  Rule get_UpdateRule()
  void set_UpdateRule(Rule value)
--------------------------------------------------
Класс: System.Data.IColumnMapping
Поля:
Свойства:
  string DataSetColumn
  string SourceColumn
Методы:
  string get_DataSetColumn()
  void set_DataSetColumn(string value)
  string get_SourceColumn()
  void set_SourceColumn(string value)
--------------------------------------------------
Класс: System.Data.IColumnMappingCollection
Поля:
Свойства:
  object Item
Методы:
  object get_Item(string index)
  void set_Item(string index, object value)
  IColumnMapping Add(string sourceColumnName, string dataSetColumnName)
  bool Contains(string sourceColumnName)
  IColumnMapping GetByDataSetColumn(string dataSetColumnName)
  int IndexOf(string sourceColumnName)
  void RemoveAt(string sourceColumnName)
--------------------------------------------------
Класс: System.Data.IDataAdapter
Поля:
Свойства:
  MissingMappingAction MissingMappingAction
  MissingSchemaAction MissingSchemaAction
  ITableMappingCollection TableMappings
Методы:
  MissingMappingAction get_MissingMappingAction()
  void set_MissingMappingAction(MissingMappingAction value)
  MissingSchemaAction get_MissingSchemaAction()
  void set_MissingSchemaAction(MissingSchemaAction value)
  ITableMappingCollection get_TableMappings()
  DataTable[] FillSchema(DataSet dataSet, SchemaType schemaType)
  int Fill(DataSet dataSet)
  IDataParameter[] GetFillParameters()
  int Update(DataSet dataSet)
--------------------------------------------------
Класс: System.Data.IDataParameter
Поля:
Свойства:
  DbType DbType
  ParameterDirection Direction
  bool IsNullable
  string ParameterName
  string SourceColumn
  DataRowVersion SourceVersion
  object Value
Методы:
  DbType get_DbType()
  void set_DbType(DbType value)
  ParameterDirection get_Direction()
  void set_Direction(ParameterDirection value)
  bool get_IsNullable()
  string get_ParameterName()
  void set_ParameterName(string value)
  string get_SourceColumn()
  void set_SourceColumn(string value)
  DataRowVersion get_SourceVersion()
  void set_SourceVersion(DataRowVersion value)
  object get_Value()
  void set_Value(object value)
--------------------------------------------------
Класс: System.Data.IDataParameterCollection
Поля:
Свойства:
  object Item
Методы:
  object get_Item(string parameterName)
  void set_Item(string parameterName, object value)
  bool Contains(string parameterName)
  int IndexOf(string parameterName)
  void RemoveAt(string parameterName)
--------------------------------------------------
Класс: System.Data.IDataReader
Поля:
Свойства:
  int Depth
  bool IsClosed
  int RecordsAffected
Методы:
  int get_Depth()
  bool get_IsClosed()
  int get_RecordsAffected()
  void Close()
  DataTable GetSchemaTable()
  bool NextResult()
  bool Read()
--------------------------------------------------
Класс: System.Data.IDataRecord
Поля:
Свойства:
  int FieldCount
  object Item
  object Item
Методы:
  int get_FieldCount()
  object get_Item(int i)
  object get_Item(string name)
  string GetName(int i)
  string GetDataTypeName(int i)
  Type GetFieldType(int i)
  object GetValue(int i)
  int GetValues(Object[] values)
  int GetOrdinal(string name)
  bool GetBoolean(int i)
  byte GetByte(int i)
  long GetBytes(int i, long fieldOffset, Byte[] buffer, int bufferoffset, int length)
  char GetChar(int i)
  long GetChars(int i, long fieldoffset, Char[] buffer, int bufferoffset, int length)
  Guid GetGuid(int i)
  short GetInt16(int i)
  int GetInt32(int i)
  long GetInt64(int i)
  float GetFloat(int i)
  double GetDouble(int i)
  string GetString(int i)
  decimal GetDecimal(int i)
  DateTime GetDateTime(int i)
  IDataReader GetData(int i)
  bool IsDBNull(int i)
--------------------------------------------------
Класс: System.Data.IDbCommand
Поля:
Свойства:
  IDbConnection Connection
  IDbTransaction Transaction
  string CommandText
  int CommandTimeout
  CommandType CommandType
  IDataParameterCollection Parameters
  UpdateRowSource UpdatedRowSource
Методы:
  IDbConnection get_Connection()
  void set_Connection(IDbConnection value)
  IDbTransaction get_Transaction()
  void set_Transaction(IDbTransaction value)
  string get_CommandText()
  void set_CommandText(string value)
  int get_CommandTimeout()
  void set_CommandTimeout(int value)
  CommandType get_CommandType()
  void set_CommandType(CommandType value)
  IDataParameterCollection get_Parameters()
  void Prepare()
  UpdateRowSource get_UpdatedRowSource()
  void set_UpdatedRowSource(UpdateRowSource value)
  void Cancel()
  IDbDataParameter CreateParameter()
  int ExecuteNonQuery()
  IDataReader ExecuteReader()
  IDataReader ExecuteReader(CommandBehavior behavior)
  object ExecuteScalar()
--------------------------------------------------
Класс: System.Data.IDbConnection
Поля:
Свойства:
  string ConnectionString
  int ConnectionTimeout
  string Database
  ConnectionState State
Методы:
  string get_ConnectionString()
  void set_ConnectionString(string value)
  int get_ConnectionTimeout()
  string get_Database()
  ConnectionState get_State()
  IDbTransaction BeginTransaction()
  IDbTransaction BeginTransaction(IsolationLevel il)
  void Close()
  void ChangeDatabase(string databaseName)
  IDbCommand CreateCommand()
  void Open()
--------------------------------------------------
Класс: System.Data.IDbDataAdapter
Поля:
Свойства:
  IDbCommand SelectCommand
  IDbCommand InsertCommand
  IDbCommand UpdateCommand
  IDbCommand DeleteCommand
Методы:
  IDbCommand get_SelectCommand()
  void set_SelectCommand(IDbCommand value)
  IDbCommand get_InsertCommand()
  void set_InsertCommand(IDbCommand value)
  IDbCommand get_UpdateCommand()
  void set_UpdateCommand(IDbCommand value)
  IDbCommand get_DeleteCommand()
  void set_DeleteCommand(IDbCommand value)
--------------------------------------------------
Класс: System.Data.IDbDataParameter
Поля:
Свойства:
  byte Precision
  byte Scale
  int Size
Методы:
  byte get_Precision()
  void set_Precision(byte value)
  byte get_Scale()
  void set_Scale(byte value)
  int get_Size()
  void set_Size(int value)
--------------------------------------------------
Класс: System.Data.IDbTransaction
Поля:
Свойства:
  IDbConnection Connection
  IsolationLevel IsolationLevel
Методы:
  IDbConnection get_Connection()
  IsolationLevel get_IsolationLevel()
  void Commit()
  void Rollback()
--------------------------------------------------
Класс: System.Data.ITableMapping
Поля:
Свойства:
  IColumnMappingCollection ColumnMappings
  string DataSetTable
  string SourceTable
Методы:
  IColumnMappingCollection get_ColumnMappings()
  string get_DataSetTable()
  void set_DataSetTable(string value)
  string get_SourceTable()
  void set_SourceTable(string value)
--------------------------------------------------
Класс: System.Data.ITableMappingCollection
Поля:
Свойства:
  object Item
Методы:
  object get_Item(string index)
  void set_Item(string index, object value)
  ITableMapping Add(string sourceTableName, string dataSetTableName)
  bool Contains(string sourceTableName)
  ITableMapping GetByDataSetTable(string dataSetTableName)
  int IndexOf(string sourceTableName)
  void RemoveAt(string sourceTableName)
--------------------------------------------------
Класс: System.Data.IsolationLevel
Наследуется от: Enum
Поля:
  int value__
  IsolationLevel Unspecified
  IsolationLevel Chaos
  IsolationLevel ReadUncommitted
  IsolationLevel ReadCommitted
  IsolationLevel RepeatableRead
  IsolationLevel Serializable
  IsolationLevel Snapshot
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.KeyRestrictionBehavior
Наследуется от: Enum
Поля:
  int value__
  KeyRestrictionBehavior AllowOnly
  KeyRestrictionBehavior PreventUsage
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.LoadOption
Наследуется от: Enum
Поля:
  int value__
  LoadOption OverwriteChanges
  LoadOption PreserveChanges
  LoadOption Upsert
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.MappingType
Наследуется от: Enum
Поля:
  int value__
  MappingType Element
  MappingType Attribute
  MappingType SimpleContent
  MappingType Hidden
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.MergeFailedEventArgs
Наследуется от: EventArgs
Поля:
  DataTable <Table>k__BackingField
  string <Conflict>k__BackingField
Свойства:
  DataTable Table
  string Conflict
Методы:
  void .ctor(DataTable table, string conflict)
  DataTable get_Table()
  string get_Conflict()
--------------------------------------------------
Класс: System.Data.MergeFailedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, MergeFailedEventArgs e)
  IAsyncResult BeginInvoke(object sender, MergeFailedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.Merger
Наследуется от: object
Поля:
  DataSet _dataSet
  DataTable _dataTable
  bool _preserveChanges
  MissingSchemaAction _missingSchemaAction
  bool _isStandAlonetable
  bool _IgnoreNSforTableLookup
Свойства:
Методы:
  void .ctor(DataSet dataSet, bool preserveChanges, MissingSchemaAction missingSchemaAction)
  void .ctor(DataTable dataTable, bool preserveChanges, MissingSchemaAction missingSchemaAction)
  void MergeDataSet(DataSet source)
  void MergeTable(DataTable src)
  void MergeTable(DataTable src, DataTable dst)
  void MergeRows(DataRow[] rows)
  DataTable MergeSchema(DataTable table)
  void MergeTableData(DataTable src)
  void MergeConstraints(DataSet source)
  void MergeConstraints(DataTable table)
  void MergeRelation(DataRelation relation)
  void MergeExtendedProperties(PropertyCollection src, PropertyCollection dst)
  DataKey GetSrcKey(DataTable src, DataTable dst)
--------------------------------------------------
Класс: System.Data.MissingMappingAction
Наследуется от: Enum
Поля:
  int value__
  MissingMappingAction Passthrough
  MissingMappingAction Ignore
  MissingMappingAction Error
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.MissingSchemaAction
Наследуется от: Enum
Поля:
  int value__
  MissingSchemaAction Add
  MissingSchemaAction Ignore
  MissingSchemaAction Error
  MissingSchemaAction AddWithKey
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.ParameterDirection
Наследуется от: Enum
Поля:
  int value__
  ParameterDirection Input
  ParameterDirection Output
  ParameterDirection InputOutput
  ParameterDirection ReturnValue
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.PrimaryKeyTypeConverter
Наследуется от: ReferenceConverter
Поля:
Свойства:
Методы:
  void .ctor()
  bool GetPropertiesSupported(ITypeDescriptorContext context)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
--------------------------------------------------
Класс: System.Data.PropertyCollection
Наследуется от: Hashtable
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  object Clone()
--------------------------------------------------
Класс: System.Data.Range
Наследуется от: ValueType
Поля:
  int _min
  int _max
  bool _isNotNull
Свойства:
  int Count
  bool IsNull
  int Max
  int Min
Методы:
  void .ctor(int min, int max)
  int get_Count()
  bool get_IsNull()
  int get_Max()
  int get_Min()
  void CheckNull()
--------------------------------------------------
Класс: System.Data.RBTreeError
Наследуется от: Enum
Поля:
  int value__
  RBTreeError InvalidPageSize
  RBTreeError PagePositionInSlotInUse
  RBTreeError NoFreeSlots
  RBTreeError InvalidStateinInsert
  RBTreeError InvalidNextSizeInDelete
  RBTreeError InvalidStateinDelete
  RBTreeError InvalidNodeSizeinDelete
  RBTreeError InvalidStateinEndDelete
  RBTreeError CannotRotateInvalidsuccessorNodeinDelete
  RBTreeError IndexOutOFRangeinGetNodeByIndex
  RBTreeError RBDeleteFixup
  RBTreeError UnsupportedAccessMethod1
  RBTreeError UnsupportedAccessMethod2
  RBTreeError UnsupportedAccessMethodInNonNillRootSubtree
  RBTreeError AttachedNodeWithZerorbTreeNodeId
  RBTreeError CompareNodeInDataRowTree
  RBTreeError CompareSateliteTreeNodeInDataRowTree
  RBTreeError NestedSatelliteTreeEnumerator
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.TreeAccessMethod
Наследуется от: Enum
Поля:
  int value__
  TreeAccessMethod KEY_SEARCH_AND_INDEX
  TreeAccessMethod INDEX_ONLY
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.RBTree`1
Наследуется от: object
Поля:
  int DefaultPageSize
  int NIL
  TreePage[] _pageTable
  Int32[] _pageTableMap
  int _inUsePageCount
  int _nextFreePageLine
  int root
  int _version
  int _inUseNodeCount
  int _inUseSatelliteTreeCount
  TreeAccessMethod _accessMethod
Свойства:
  int Count
  bool HasDuplicates
  K Item
Методы:
  int CompareNode(K record1, K record2)
  int CompareSateliteTreeNode(K record1, K record2)
  void .ctor(TreeAccessMethod accessMethod)
  void InitTree()
  void FreePage(TreePage<K> page)
  TreePage<K> AllocPage(int size)
  void MarkPageFull(TreePage<K> page)
  void MarkPageFree(TreePage<K> page)
  int GetIntValueFromBitMap(UInt32 bitMap)
  void FreeNode(int nodeId)
  int GetIndexOfPageWithFreeSlot(bool allocatedPage)
  int get_Count()
  bool get_HasDuplicates()
  int GetNewNode(K key)
  int Successor(int x_id)
  bool Successor(Int32& nodeId, Int32& mainTreeNodeId)
  int Minimum(int x_id)
  int LeftRotate(int root_id, int x_id, int mainTreeNode)
  int RightRotate(int root_id, int x_id, int mainTreeNode)
  int RBInsert(int root_id, int x_id, int mainTreeNodeID, int position, bool append)
  void UpdateNodeKey(K currentKey, K newKey)
  K DeleteByIndex(int i)
  int RBDelete(int z_id)
  int RBDeleteX(int root_id, int z_id, int mainTreeNodeID)
  int RBDeleteFixup(int root_id, int x_id, int px_id, int mainTreeNodeID)
  int SearchSubTree(int root_id, K key)
  int Search(K key)
  K get_Item(int index)
  NodePath<K> GetNodeByKey(K key)
  int GetIndexByKey(K key)
  int GetIndexByNode(int node)
  int GetIndexByNodePath(NodePath<K> path)
  int ComputeIndexByNode(int nodeId)
  int ComputeIndexWithSatelliteByNode(int nodeId)
  NodePath<K> GetNodeByIndex(int userIndex)
  int ComputeNodeByIndex(int index, Int32& satelliteRootId)
  int ComputeNodeByIndex(int x_id, int index)
  int Insert(K item)
  int Add(K item)
  IEnumerator GetEnumerator()
  int IndexOf(int nodeId, K item)
  int Insert(int position, K item)
  int InsertAt(int position, K item, bool append)
  void RemoveAt(int position)
  void Clear()
  void CopyTo(Array array, int index)
  void CopyTo(K[] array, int index)
  void SetRight(int nodeId, int rightNodeId)
  void SetLeft(int nodeId, int leftNodeId)
  void SetParent(int nodeId, int parentNodeId)
  void SetColor(int nodeId, NodeColor<K> color)
  void SetKey(int nodeId, K key)
  void SetNext(int nodeId, int nextNodeId)
  void SetSubTreeSize(int nodeId, int size)
  void IncreaseSize(int nodeId)
  void RecomputeSize(int nodeId)
  void DecreaseSize(int nodeId)
  void VerifySize(int nodeId, int size)
  int Right(int nodeId)
  int Left(int nodeId)
  int Parent(int nodeId)
  NodeColor<K> color(int nodeId)
  int Next(int nodeId)
  int SubTreeSize(int nodeId)
  K Key(int nodeId)
--------------------------------------------------
Класс: System.Data.RecordManager
Наследуется от: object
Поля:
  DataTable _table
  int _lastFreeRecord
  int _minimumCapacity
  int _recordCapacity
  List`1<int> _freeRecordList
  DataRow[] _rows
Свойства:
  int LastFreeRecord
  int MinimumCapacity
  int RecordCapacity
  DataRow Item
Методы:
  void .ctor(DataTable table)
  void GrowRecordCapacity()
  int get_LastFreeRecord()
  int get_MinimumCapacity()
  void set_MinimumCapacity(int value)
  int get_RecordCapacity()
  void set_RecordCapacity(int value)
  int NewCapacity(int capacity)
  int NormalizedMinimumCapacity(int capacity)
  int NewRecordBase()
  void FreeRecord(Int32& record)
  void Clear(bool clearAll)
  DataRow get_Item(int record)
  void set_Item(int record, DataRow value)
  void SetKeyValues(int record, DataKey key, Object[] keyValues)
  int ImportRecord(DataTable src, int record)
  int CopyRecord(DataTable src, int record, int copy)
  void SetRowCache(DataRow[] newRows)
  void VerifyRecord(int record)
  void VerifyRecord(int record, DataRow row)
--------------------------------------------------
Класс: System.Data.RelatedView
Наследуется от: DataView
Поля:
  Nullable`1<DataKey> _parentKey
  DataKey _childKey
  DataRowView _parentRowView
  Object[] _filterValues
Свойства:
Методы:
  void .ctor(DataColumn[] columns, Object[] values)
  void .ctor(DataRowView parentRowView, DataKey parentKey, DataColumn[] childKeyColumns)
  Object[] GetParentValues()
  bool Invoke(DataRow row, DataRowVersion version)
  IFilter GetFilter()
  DataRowView AddNew()
  void SetIndex(string newSort, DataViewRowState newRowStates, IFilter newRowFilter)
  bool Equals(DataView dv)
  bool CompareArray(Object[] value1, Object[] value2)
--------------------------------------------------
Класс: System.Data.RelationshipConverter
Наследуется от: ExpandableObjectConverter
Поля:
Свойства:
Методы:
  void .ctor()
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
--------------------------------------------------
Класс: System.Data.Rule
Наследуется от: Enum
Поля:
  int value__
  Rule None
  Rule Cascade
  Rule SetNull
  Rule SetDefault
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SchemaSerializationMode
Наследуется от: Enum
Поля:
  int value__
  SchemaSerializationMode IncludeSchema
  SchemaSerializationMode ExcludeSchema
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SchemaType
Наследуется от: Enum
Поля:
  int value__
  SchemaType Source
  SchemaType Mapped
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Select
Наследуется от: object
Поля:
  DataTable _table
  IndexField[] _indexFields
  DataViewRowState _recordStates
  DataExpression _rowFilter
  ExpressionNode _expression
  Index _index
  Int32[] _records
  int _recordCount
  ExpressionNode _linearExpression
  bool _candidatesForBinarySearch
  ColumnInfo[] _candidateColumns
  int _nCandidates
  int _matchedCandidates
Свойства:
Методы:
  void .ctor(DataTable table, string filterExpression, string sort, DataViewRowState recordStates)
  bool IsSupportedOperator(int op)
  void AnalyzeExpression(BinaryNode expr)
  bool CompareSortIndexDesc(IndexField[] fields)
  bool FindSortIndex()
  int CompareClosestCandidateIndexDesc(IndexField[] fields)
  bool FindClosestCandidateIndex()
  void InitCandidateColumns()
  void CreateIndex()
  bool IsOperatorIn(ExpressionNode enode)
  void BuildLinearExpression()
  DataRow[] SelectRows()
  DataRow[] GetRows()
  bool AcceptRecord(int record)
  int Eval(BinaryNode expr, DataRow row, DataRowVersion version)
  int Evaluate(int record)
  int FindFirstMatchingRecord()
  int FindLastMatchingRecord(int lo)
  Range GetBinaryFilteredRecords()
  Int32[] GetLinearFilteredRecords(Range range)
  DataRow[] GetLinearFilteredRows(Range range)
  int CompareRecords(int record1, int record2)
  void Sort(int left, int right)
--------------------------------------------------
Класс: System.Data.IndexField
Наследуется от: ValueType
Поля:
  DataColumn Column
  bool IsDescending
Свойства:
Методы:
  void .ctor(DataColumn column, bool isDescending)
  bool op_Equality(IndexField if1, IndexField if2)
  bool op_Inequality(IndexField if1, IndexField if2)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Data.Index
Наследуется от: object
Поля:
  int DoNotReplaceCompareRecord
  int ReplaceNewRecordForCompare
  int ReplaceOldRecordForCompare
  DataTable _table
  IndexField[] _indexFields
  Comparison`1<DataRow> _comparison
  DataViewRowState _recordStates
  WeakReference _rowFilter
  IndexTree _records
  int _recordCount
  int _refCount
  Listeners`1<DataViewListener> _listeners
  bool _suspendEvents
  bool _isSharable
  bool _hasRemoteAggregate
  int MaskBits
  int s_objectTypeCount
  int _objectID
Свойства:
  bool HasRemoteAggregate
  int ObjectID
  DataViewRowState RecordStates
  IFilter RowFilter
  bool HasDuplicates
  int RecordCount
  bool IsSharable
  int RefCount
  bool DoListChanged
  DataTable Table
Методы:
  void .ctor(DataTable table, IndexField[] indexFields, DataViewRowState recordStates, IFilter rowFilter)
  void .ctor(DataTable table, Comparison`1<DataRow> comparison, DataViewRowState recordStates, IFilter rowFilter)
  IndexField[] GetAllFields(DataColumnCollection columns)
  void .ctor(DataTable table, IndexField[] indexFields, Comparison`1<DataRow> comparison, DataViewRowState recordStates, IFilter rowFilter)
  bool Equal(IndexField[] indexDesc, DataViewRowState recordStates, IFilter rowFilter)
  bool get_HasRemoteAggregate()
  int get_ObjectID()
  DataViewRowState get_RecordStates()
  IFilter get_RowFilter()
  int GetRecord(int recordIndex)
  bool get_HasDuplicates()
  int get_RecordCount()
  bool get_IsSharable()
  bool AcceptRecord(int record)
  bool AcceptRecord(int record, IFilter filter)
  void ListChangedAdd(DataViewListener listener)
  void ListChangedRemove(DataViewListener listener)
  int get_RefCount()
  void AddRef()
  int RemoveRef()
  void ApplyChangeAction(int record, int action, int changeRecord)
  bool CheckUnique()
  int CompareRecords(int record1, int record2)
  int CompareDataRows(int record1, int record2)
  int CompareDuplicateRecords(int record1, int record2)
  int CompareRecordToKey(int record1, Object[] vals)
  void DeleteRecordFromIndex(int recordIndex)
  void DeleteRecord(int recordIndex)
  void DeleteRecord(int recordIndex, bool fireEvent)
  RBTreeEnumerator<int> GetEnumerator(int startIndex)
  int GetIndex(int record)
  int GetIndex(int record, int changeRecord)
  Object[] GetUniqueKeyValues()
  int FindRecord(int record)
  int FindRecordByKey(object key)
  int FindRecordByKey(Object[] key)
  int FindNodeByKey(object originalKey)
  int FindNodeByKeys(Object[] originalKey)
  int FindNodeByKeyRecord(int record)
  Range GetRangeFromNode(int nodeId)
  Range FindRecords(object key)
  Range FindRecords(Object[] key)
  void FireResetEvent()
  int GetChangeAction(DataViewRowState oldState, DataViewRowState newState)
  int GetReplaceAction(DataViewRowState oldState)
  DataRow GetRow(int i)
  DataRow[] GetRows(Object[] values)
  DataRow[] GetRows(Range range)
  void InitRecords(IFilter filter)
  int InsertRecordToIndex(int record)
  int InsertRecord(int record, bool fireEvent)
  bool IsKeyInIndex(object key)
  bool IsKeyInIndex(Object[] key)
  bool IsKeyRecordInIndex(int record)
  bool get_DoListChanged()
  void OnListChanged(ListChangedType changedType, int newIndex, int oldIndex)
  void OnListChanged(ListChangedType changedType, int index)
  void OnListChanged(ListChangedEventArgs e)
  void MaintainDataView(ListChangedType changedType, int record, bool trackAddRemove)
  void Reset()
  void RecordChanged(int record)
  void RecordChanged(int oldIndex, int newIndex)
  void RecordStateChanged(int record, DataViewRowState oldState, DataViewRowState newState)
  void RecordStateChanged(int oldRecord, DataViewRowState oldOldState, DataViewRowState oldNewState, int newRecord, DataViewRowState newOldState, DataViewRowState newNewState)
  DataTable get_Table()
  void GetUniqueKeyValues(List`1<Object[]> list, int curNodeId)
  int IndexOfReference(List`1<T> list, T item)
  bool ContainsReference(List`1<T> list, T item)
--------------------------------------------------
Класс: System.Data.Listeners`1
Наследуется от: object
Поля:
  List`1<TElem> _listeners
  Func`2<TElem, TElem, bool> _filter
  int _objectID
  int _listenerReaderCount
Свойства:
  bool HasListeners
Методы:
  void .ctor(int ObjectID, Func`2<TElem, TElem, bool> notifyFilter)
  bool get_HasListeners()
  void Add(TElem listener)
  int IndexOfReference(TElem listener)
  void Remove(TElem listener)
  void Notify(T1 arg1, T2 arg2, T3 arg3, Action`4<TElem, TElem, T1, T2, T3> action)
  void RemoveNullListeners(int nullIndex)
--------------------------------------------------
Класс: System.Data.SimpleType
Наследуется от: object
Поля:
  string _baseType
  SimpleType _baseSimpleType
  XmlQualifiedName _xmlBaseType
  string _name
  int _length
  int _minLength
  int _maxLength
  string _pattern
  string _ns
  string _maxExclusive
  string _maxInclusive
  string _minExclusive
  string _minInclusive
  string _enumeration
Свойства:
  string BaseType
  XmlQualifiedName XmlBaseType
  string Name
  string Namespace
  int Length
  int MaxLength
  SimpleType BaseSimpleType
  string SimpleTypeQualifiedName
Методы:
  void .ctor(string baseType)
  void .ctor(XmlSchemaSimpleType node)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void LoadTypeValues(XmlSchemaSimpleType node)
  bool IsPlainString()
  string get_BaseType()
  XmlQualifiedName get_XmlBaseType()
  string get_Name()
  string get_Namespace()
  int get_Length()
  int get_MaxLength()
  void set_MaxLength(int value)
  SimpleType get_BaseSimpleType()
  string get_SimpleTypeQualifiedName()
  string QualifiedName(string name)
  XmlNode ToNode(XmlDocument dc, Hashtable prefixes, bool inRemoting)
  SimpleType CreateEnumeratedType(string values)
  SimpleType CreateByteArrayType(string encoding)
  SimpleType CreateLimitedStringType(int length)
  SimpleType CreateSimpleType(StorageType typeCode, Type type)
  string HasConflictingDefinition(SimpleType otherSimpleType)
  bool CanHaveMaxLength()
  void ConvertToAnnonymousSimpleType()
--------------------------------------------------
Класс: System.Data.SqlDbType
Наследуется от: Enum
Поля:
  int value__
  SqlDbType BigInt
  SqlDbType Binary
  SqlDbType Bit
  SqlDbType Char
  SqlDbType DateTime
  SqlDbType Decimal
  SqlDbType Float
  SqlDbType Image
  SqlDbType Int
  SqlDbType Money
  SqlDbType NChar
  SqlDbType NText
  SqlDbType NVarChar
  SqlDbType Real
  SqlDbType UniqueIdentifier
  SqlDbType SmallDateTime
  SqlDbType SmallInt
  SqlDbType SmallMoney
  SqlDbType Text
  SqlDbType Timestamp
  SqlDbType TinyInt
  SqlDbType VarBinary
  SqlDbType VarChar
  SqlDbType Variant
  SqlDbType Xml
  SqlDbType Udt
  SqlDbType Structured
  SqlDbType Date
  SqlDbType Time
  SqlDbType DateTime2
  SqlDbType DateTimeOffset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.StateChangeEventArgs
Наследуется от: EventArgs
Поля:
  ConnectionState _originalState
  ConnectionState _currentState
Свойства:
  ConnectionState CurrentState
  ConnectionState OriginalState
Методы:
  void .ctor(ConnectionState originalState, ConnectionState currentState)
  ConnectionState get_CurrentState()
  ConnectionState get_OriginalState()
--------------------------------------------------
Класс: System.Data.StateChangeEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, StateChangeEventArgs e)
  IAsyncResult BeginInvoke(object sender, StateChangeEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.StatementCompletedEventArgs
Наследуется от: EventArgs
Поля:
  int <RecordCount>k__BackingField
Свойства:
  int RecordCount
Методы:
  void .ctor(int recordCount)
  int get_RecordCount()
--------------------------------------------------
Класс: System.Data.StatementCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, StatementCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, StatementCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.StatementType
Наследуется от: Enum
Поля:
  int value__
  StatementType Select
  StatementType Insert
  StatementType Update
  StatementType Delete
  StatementType Batch
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.StrongTypingException
Наследуется от: DataException
Поля:
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string message)
  void .ctor(string s, Exception innerException)
--------------------------------------------------
Класс: System.Data.UniqueConstraint
Наследуется от: Constraint
Поля:
  DataKey _key
  Index _constraintIndex
  bool _bPrimaryKey
  string _constraintName
  String[] _columnNames
Свойства:
  String[] ColumnNames
  Index ConstraintIndex
  DataColumn[] Columns
  DataColumn[] ColumnsReference
  bool IsPrimaryKey
  bool InCollection
  DataKey Key
  DataTable Table
Методы:
  void .ctor(string name, DataColumn column)
  void .ctor(DataColumn column)
  void .ctor(string name, DataColumn[] columns)
  void .ctor(DataColumn[] columns)
  void .ctor(string name, String[] columnNames, bool isPrimaryKey)
  void .ctor(string name, DataColumn column, bool isPrimaryKey)
  void .ctor(DataColumn column, bool isPrimaryKey)
  void .ctor(string name, DataColumn[] columns, bool isPrimaryKey)
  void .ctor(DataColumn[] columns, bool isPrimaryKey)
  String[] get_ColumnNames()
  Index get_ConstraintIndex()
  void AssertConstraintAndKeyIndexes()
  void ConstraintIndexClear()
  void ConstraintIndexInitialize()
  void CheckState()
  void NonVirtualCheckState()
  void CheckCanAddToCollection(ConstraintCollection constraints)
  bool CanBeRemovedFromCollection(ConstraintCollection constraints, bool fThrowException)
  bool CanEnableConstraint()
  bool IsConstraintViolated()
  void CheckConstraint(DataRow row, DataRowAction action)
  bool ContainsColumn(DataColumn column)
  Constraint Clone(DataSet destination)
  Constraint Clone(DataSet destination, bool ignorNSforTableLookup)
  UniqueConstraint Clone(DataTable table)
  DataColumn[] get_Columns()
  DataColumn[] get_ColumnsReference()
  bool get_IsPrimaryKey()
  void Create(string constraintName, DataColumn[] columns)
  bool Equals(object key2)
  int GetHashCode()
  void set_InCollection(bool value)
  DataKey get_Key()
  DataTable get_Table()
--------------------------------------------------
Класс: System.Data.UpdateRowSource
Наследуется от: Enum
Поля:
  int value__
  UpdateRowSource None
  UpdateRowSource OutputParameters
  UpdateRowSource FirstReturnedRecord
  UpdateRowSource Both
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.XDRSchema
Наследуется от: XMLSchema
Поля:
  string _schemaName
  string _schemaUri
  XmlElement _schemaRoot
  DataSet _ds
  Char[] s_colonArray
  NameType[] s_mapNameTypeXdr
  NameType s_enumerationNameType
Свойства:
Методы:
  void .ctor(DataSet ds, bool fInline)
  void LoadSchema(XmlElement schemaRoot, DataSet ds)
  XmlElement FindTypeNode(XmlElement node)
  bool IsTextOnlyContent(XmlElement node)
  bool IsXDRField(XmlElement node, XmlElement typeNode)
  DataTable HandleTable(XmlElement node)
  NameType FindNameType(string name)
  Type ParseDataType(string dt, string dtValues)
  string GetInstanceName(XmlElement node)
  void HandleColumn(XmlElement node, DataTable table)
  void GetMinMax(XmlElement elNode, Int32& minOccurs, Int32& maxOccurs)
  void GetMinMax(XmlElement elNode, bool isAttribute, Int32& minOccurs, Int32& maxOccurs)
  void HandleTypeNode(XmlElement typeNode, DataTable table, ArrayList tableChildren)
  DataTable InstantiateTable(DataSet dataSet, XmlElement node, XmlElement typeNode)
  DataTable InstantiateSimpleTable(DataSet dataSet, XmlElement node)
  void .cctor()
--------------------------------------------------
Класс: System.Data.XMLDiffLoader
Наследуется от: object
Поля:
  ArrayList _tables
  DataSet _dataSet
  DataTable _dataTable
Свойства:
Методы:
  void LoadDiffGram(DataSet ds, XmlReader dataTextReader)
  void CreateTablesHierarchy(DataTable dt)
  void LoadDiffGram(DataTable dt, XmlReader dataTextReader)
  void ProcessDiffs(DataSet ds, XmlReader ssync)
  void ProcessDiffs(ArrayList tableList, XmlReader ssync)
  void ProcessErrors(DataSet ds, XmlReader ssync)
  void ProcessErrors(ArrayList dt, XmlReader ssync)
  DataTable GetTable(string tableName, string ns)
  int ReadOldRowData(DataSet ds, DataTable& table, Int32& pos, XmlReader row)
  void SkipWhitespaces(XmlReader reader)
  void .ctor()
--------------------------------------------------
Класс: System.Data.XMLSchema
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeConverter GetConverter(Type type)
  void SetProperties(object instance, XmlAttributeCollection attrs)
  bool FEqualIdentity(XmlNode node, string name, string ns)
  bool GetBooleanAttribute(XmlElement element, string attrName, string attrNS, bool defVal)
  string GenUniqueColumnName(string proposedName, DataTable table)
  void .ctor()
--------------------------------------------------
Класс: System.Data.ConstraintTable
Наследуется от: object
Поля:
  DataTable table
  XmlSchemaIdentityConstraint constraint
Свойства:
Методы:
  void .ctor(DataTable t, XmlSchemaIdentityConstraint c)
--------------------------------------------------
Класс: System.Data.XSDSchema
Наследуется от: XMLSchema
Поля:
  XmlSchemaSet _schemaSet
  XmlSchemaElement _dsElement
  DataSet _ds
  string _schemaName
  ArrayList _columnExpressions
  Hashtable _constraintNodes
  ArrayList _refTables
  ArrayList _complexTypes
  XmlSchemaObjectCollection _annotations
  XmlSchemaObjectCollection _elements
  Hashtable _attributes
  Hashtable _elementsTable
  Hashtable _attributeGroups
  Hashtable _schemaTypes
  Hashtable _expressions
  Dictionary`2<DataTable, List`1<DataTable>> _tableDictionary
  Hashtable _udSimpleTypes
  Hashtable _existingSimpleTypeMap
  bool _fromInference
  NameType[] s_mapNameTypeXsd
Свойства:
  bool FromInference
Методы:
  bool get_FromInference()
  void set_FromInference(bool value)
  void CollectElementsAnnotations(XmlSchema schema)
  void CollectElementsAnnotations(XmlSchema schema, ArrayList schemaList)
  string QualifiedName(string name)
  void SetProperties(object instance, XmlAttribute[] attrs)
  void SetExtProperties(object instance, XmlAttribute[] attrs)
  void HandleColumnExpression(object instance, XmlAttribute[] attrs)
  string GetMsdataAttribute(XmlSchemaAnnotated node, string ln)
  void SetExtProperties(object instance, XmlAttributeCollection attrs)
  void HandleRefTableProperties(ArrayList RefTables, XmlSchemaElement element)
  void HandleRelation(XmlElement node, bool fNested)
  bool HasAttributes(XmlSchemaObjectCollection attributes)
  bool IsDatasetParticle(XmlSchemaParticle pt)
  int DatasetElementCount(XmlSchemaObjectCollection elements)
  XmlSchemaElement FindDatasetElement(XmlSchemaObjectCollection elements)
  void LoadSchema(XmlSchemaSet schemaSet, DataTable dt)
  void LoadSchema(XmlSchemaSet schemaSet, DataSet ds)
  void HandleRelations(XmlSchemaAnnotation ann, bool fNested)
  XmlSchemaObjectCollection GetParticleItems(XmlSchemaParticle pt)
  void HandleParticle(XmlSchemaParticle pt, DataTable table, ArrayList tableChildren, bool isBase)
  void HandleAttributes(XmlSchemaObjectCollection attributes, DataTable table, bool isBase)
  void HandleAttributeGroup(XmlSchemaAttributeGroup attributeGroup, DataTable table, bool isBase)
  void HandleComplexType(XmlSchemaComplexType ct, DataTable table, ArrayList tableChildren, bool isNillable)
  XmlSchemaParticle GetParticle(XmlSchemaComplexType ct)
  DataColumn FindField(DataTable table, string field)
  DataColumn[] BuildKey(XmlSchemaIdentityConstraint keyNode, DataTable table)
  bool GetBooleanAttribute(XmlSchemaAnnotated element, string attrName, bool defVal)
  string GetStringAttribute(XmlSchemaAnnotated element, string attrName, string defVal)
  AcceptRejectRule TranslateAcceptRejectRule(string strRule)
  Rule TranslateRule(string strRule)
  void HandleKeyref(XmlSchemaKeyref keyref)
  void HandleConstraint(XmlSchemaIdentityConstraint keyNode)
  DataTable InstantiateSimpleTable(XmlSchemaElement node)
  string GetInstanceName(XmlSchemaAnnotated node)
  DataTable InstantiateTable(XmlSchemaElement node, XmlSchemaComplexType typeNode, bool isRef)
  Type XsdtoClr(string xsdTypeName)
  NameType FindNameType(string name)
  Type ParseDataType(string dt)
  bool IsXsdType(string name)
  XmlSchemaAnnotated FindTypeNode(XmlSchemaAnnotated node)
  void HandleSimpleTypeSimpleContentColumn(XmlSchemaSimpleType typeNode, string strType, DataTable table, bool isBase, XmlAttribute[] attrs, bool isNillable)
  void HandleSimpleContentColumn(string strType, DataTable table, bool isBase, XmlAttribute[] attrs, bool isNillable)
  void HandleAttributeColumn(XmlSchemaAttribute attrib, DataTable table, bool isBase)
  void HandleElementColumn(XmlSchemaElement elem, DataTable table, bool isBase)
  void HandleDataSet(XmlSchemaElement node, bool isNewDataSet)
  void AddTablesToList(List`1<DataTable> tableList, DataTable dt)
  string GetPrefix(string ns)
  string GetNamespaceFromPrefix(string prefix)
  string GetTableNamespace(XmlSchemaIdentityConstraint key)
  string GetTableName(XmlSchemaIdentityConstraint key)
  bool IsTable(XmlSchemaElement node)
  DataTable HandleTable(XmlSchemaElement node)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.XmlIgnoreNamespaceReader
Наследуется от: XmlNodeReader
Поля:
  List`1<string> _namespacesToIgnore
Свойства:
Методы:
  void .ctor(XmlDocument xdoc, String[] namespacesToIgnore)
  bool MoveToFirstAttribute()
  bool MoveToNextAttribute()
--------------------------------------------------
Класс: System.Data.XmlDataLoader
Наследуется от: object
Поля:
  DataSet _dataSet
  XmlToDatasetMap _nodeToSchemaMap
  Hashtable _nodeToRowMap
  Stack _childRowsStack
  Hashtable _htableExcludedNS
  bool _fIsXdr
  bool _isDiffgram
  XmlElement _topMostNode
  bool _ignoreSchema
  DataTable _dataTable
  bool _isTableLevel
  bool _fromInference
  XmlReader _dataReader
  object _XSD_XMLNS_NS
  object _XDR_SCHEMA
  object _XDRNS
  object _SQL_SYNC
  object _UPDGNS
  object _XSD_SCHEMA
  object _XSDNS
  object _DFFNS
  object _MSDNS
  object _DIFFID
  object _HASCHANGES
  object _ROWORDER
Свойства:
  bool FromInference
Методы:
  void .ctor(DataSet dataset, bool IsXdr, bool ignoreSchema)
  void .ctor(DataSet dataset, bool IsXdr, XmlElement topNode, bool ignoreSchema)
  void .ctor(DataTable datatable, bool IsXdr, bool ignoreSchema)
  void .ctor(DataTable datatable, bool IsXdr, XmlElement topNode, bool ignoreSchema)
  bool get_FromInference()
  void set_FromInference(bool value)
  void AttachRows(DataRow parentRow, XmlNode parentElement)
  int CountNonNSAttributes(XmlNode node)
  string GetValueForTextOnlyColums(XmlNode n)
  string GetInitialTextFromNodes(XmlNode& n)
  DataColumn GetTextOnlyColumn(DataRow row)
  DataRow GetRowFromElement(XmlElement e)
  bool FColumnElement(XmlElement e)
  bool FExcludedNamespace(string ns)
  bool FIgnoreNamespace(XmlNode node)
  bool FIgnoreNamespace(XmlReader node)
  bool IsTextLikeNode(XmlNodeType n)
  bool IsTextOnly(DataColumn c)
  void LoadData(XmlDocument xdoc)
  void LoadRowData(DataRow row, XmlElement rowElement)
  void LoadRows(DataRow parentRow, XmlNode parentElement)
  void SetRowValueFromXmlText(DataRow row, DataColumn col, string xmlText)
  void InitNameTable()
  void LoadData(XmlReader reader)
  void LoadTopMostTable(DataTable table)
  void LoadTable(DataTable table, bool isNested)
  void LoadColumn(DataColumn column, Object[] foundColumns)
  bool ProcessXsdSchema()
--------------------------------------------------
Класс: System.Data.Keywords
Наследуется от: object
Поля:
  string DFF
  string DFFNS
  string DIFFGRAM
  string DIFFID
  string DIFFPID
  string HASCHANGES
  string HASERRORS
  string ROWORDER
  string MSD_ERRORS
  string CHANGES
  string MODIFIED
  string INSERTED
  string MSD
  string MSDNS
  string MSD_ACCEPTREJECTRULE
  string MSD_ALLOWDBNULL
  string MSD_CHILD
  string MSD_CHILDKEY
  string MSD_CHILDTABLENS
  string MSD_COLUMNNAME
  string MSD_CONSTRAINTNAME
  string MSD_CONSTRAINTONLY
  string MSD_CASESENSITIVE
  string MSD_DATASETNAME
  string MSD_DATASETNAMESPACE
  string MSD_DATATYPE
  string MSD_DEFAULTVALUE
  string MSD_DELETERULE
  string MSD_ERROR
  string MSD_ISDATASET
  string MSD_ISNESTED
  string MSD_LOCALE
  string MSD_USECURRENTLOCALE
  string MSD_ORDINAL
  string MSD_PARENT
  string MSD_PARENTKEY
  string MSD_PRIMARYKEY
  string MSD_RELATION
  string MSD_RELATIONNAME
  string MSD_UPDATERULE
  char MSD_KEYFIELDSEP
  char MSD_KEYFIELDOLDSEP
  string MSD_REL_PREFIX
  string MSD_FK_PREFIX
  string MSD_MAINDATATABLE
  string MSD_TABLENS
  string MSD_PARENTTABLENS
  string MSD_INSTANCETYPE
  string MSD_EXCLUDESCHEMA
  string MSD_INCLUDESCHEMA
  string MSD_FRAGMENTCOUNT
  string MSD_SCHEMASERIALIZATIONMODE
  string DTNS
  string DT_TYPE
  string DT_VALUES
  string XDRNS
  string XDR_ATTRIBUTE
  string XDR_ATTRIBUTETYPE
  string XDR_DATATYPE
  string XDR_DESCRIPTION
  string XDR_ELEMENT
  string XDR_ELEMENTTYPE
  string XDR_GROUP
  string XDR_SCHEMA
  string XSDNS
  string XSD_NS_START
  string XSD_XMLNS_NS
  string XSD_PREFIX
  string XSD_PREFIXCOLON
  string XSD_ANNOTATION
  string XSD_APPINFO
  string XSD_ATTRIBUTE
  string XSD_SIMPLETYPE
  string XSD_ELEMENT
  string XSD_COMPLEXTYPE
  string XSD_SCHEMA
  string XSD_PATTERN
  string XSD_LENGTH
  string XSD_MAXLENGTH
  string XSD_MINLENGTH
  string XSD_ENUMERATION
  string XSD_MININCLUSIVE
  string XSD_MINEXCLUSIVE
  string XSD_MAXINCLUSIVE
  string XSD_MAXEXCLUSIVE
  string XSD_NAMESPACE
  string XSD_NILLABLE
  string XSD_IMPORT
  string XSD_SELECTOR
  string XSD_FIELD
  string XSD_UNIQUE
  string XSD_KEY
  string XSD_KEYREF
  string XSD_DATATYPE
  string XSD_ALL
  string XSD_SEQUENCE
  string XSD_ENCODING
  string XSD_EXTENSION
  string XSD_SIMPLECONTENT
  string XSD_XPATH
  string XSD_ATTRIBUTEFORMDEFAULT
  string XSD_ELEMENTFORMDEFAULT
  string XSD_SCHEMALOCATION
  string XSD_CHOICE
  string XSD_RESTRICTION
  string XSD_ANYTYPE
  string XSINS
  string XSI_NIL
  string XSI
  string XML_XMLNS
  string UPDGNS
  string UPDG
  string SQL_SYNC
  string SQL_BEFORE
  string SQL_AFTER
  string SQL_ID
  string SQL_UNCHANGED
  string ATTRIBUTE
  string CONTENT
  string DEFAULT
  string XSDID
  string MINOCCURS
  string MAXOCCURS
  string MODEL
  string NAME
  string NULLABLE
  string ORDER
  string REQUIRED
  string REF
  string BASE
  string TARGETNAMESPACE
  string TYPE
  string XMLNS
  string XMLNS_XSD
  string XMLNS_XSI
  string XMLNS_MSDATA
  string XMLNS_MSPROP
  string XMLNS_MSTNS
  string MSTNS_PREFIX
  string SPACE
  string PRESERVE
  string VALUE
  string REFER
  string USE
  string PROHIBITED
  string POSITIVEINFINITY
  string NEGATIVEINFINITY
  string QUALIFIED
  string UNQUALIFIED
  string APP
  string CLOSED
  string CURRENT
  string DOCUMENTELEMENT
  string FALSE
  string FIXED
  string FORM
  string ENCODING
  string ELEMENTONLY
  string ELTONLY
  string EMPTY
  string MANY
  string MIXED
  string NO
  string NOTATION
  string OCCURS
  string ONE_OR_MORE
  string ONE
  string ONE_DIGIT
  string ONCE
  string OPTIONAL
  string OPEN
  string ORIGINAL
  string RANGE
  string SEQ
  string STAR
  string TRUE
  string TEXTONLY
  string VERSION
  string XML
  string X_SCHEMA
  string YES
  string ZERO_DIGIT
  string ZERO_OR_MORE
  string USEDATASETSCHEMAONLY
  string UDTCOLUMNVALUEWRAPPED
  string TYPEINSTANCE
  string MSPROPNS
  string WS_DATASETFULLQNAME
  string WS_VERSION
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.XmlReadMode
Наследуется от: Enum
Поля:
  int value__
  XmlReadMode Auto
  XmlReadMode ReadSchema
  XmlReadMode IgnoreSchema
  XmlReadMode InferSchema
  XmlReadMode DiffGram
  XmlReadMode Fragment
  XmlReadMode InferTypedSchema
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.XmlToDatasetMap
Наследуется от: object
Поля:
  XmlNodeIdHashtable _tableSchemaMap
  TableSchemaInfo _lastTableSchemaInfo
Свойства:
Методы:
  void .ctor(DataSet dataSet, XmlNameTable nameTable)
  void .ctor(XmlNameTable nameTable, DataSet dataSet)
  void .ctor(DataTable dataTable, XmlNameTable nameTable)
  void .ctor(XmlNameTable nameTable, DataTable dataTable)
  bool IsMappedColumn(DataColumn c)
  TableSchemaInfo AddTableSchema(DataTable table, XmlNameTable nameTable)
  TableSchemaInfo AddTableSchema(XmlNameTable nameTable, DataTable table)
  bool AddColumnSchema(DataColumn col, XmlNameTable nameTable, XmlNodeIdHashtable columns)
  bool AddColumnSchema(XmlNameTable nameTable, DataColumn col, XmlNodeIdHashtable columns)
  void BuildIdentityMap(DataSet dataSet, XmlNameTable nameTable)
  void BuildIdentityMap(XmlNameTable nameTable, DataSet dataSet)
  void BuildIdentityMap(DataTable dataTable, XmlNameTable nameTable)
  void BuildIdentityMap(XmlNameTable nameTable, DataTable dataTable)
  ArrayList GetSelfAndDescendants(DataTable dt)
  object GetColumnSchema(XmlNode node, bool fIgnoreNamespace)
  object GetColumnSchema(DataTable table, XmlReader dataReader, bool fIgnoreNamespace)
  object GetSchemaForNode(XmlNode node, bool fIgnoreNamespace)
  DataTable GetTableForNode(XmlReader node, bool fIgnoreNamespace)
  void HandleSpecialColumn(DataColumn col, XmlNameTable nameTable, XmlNodeIdHashtable columns)
--------------------------------------------------
Класс: System.Data.XmlWriteMode
Наследуется от: Enum
Поля:
  int value__
  XmlWriteMode WriteSchema
  XmlWriteMode IgnoreSchema
  XmlWriteMode DiffGram
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.UpdateStatus
Наследуется от: Enum
Поля:
  int value__
  UpdateStatus Continue
  UpdateStatus ErrorsOccurred
  UpdateStatus SkipCurrentRow
  UpdateStatus SkipAllRemainingRows
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SchemaFormat
Наследуется от: Enum
Поля:
  int value__
  SchemaFormat Public
  SchemaFormat Remoting
  SchemaFormat WebService
  SchemaFormat RemotingSkipSchema
  SchemaFormat WebServiceSkipSchema
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.XmlTreeGen
Наследуется от: object
Поля:
  ArrayList _constraintNames
  Hashtable _namespaces
  Hashtable _autogenerated
  Hashtable _prefixes
  DataSet _ds
  ArrayList _tables
  ArrayList _relations
  XmlDocument _dc
  XmlElement _sRoot
  int _prefixCount
  SchemaFormat _schFormat
  string _filePath
  string _fileName
  string _fileExt
  XmlElement _dsElement
  XmlElement _constraintSeparator
  Converter`2<Type, string> _targetConverter
Свойства:
Методы:
  void .ctor(SchemaFormat format)
  void AddExtendedProperties(PropertyCollection props, XmlElement node)
  void AddExtendedProperties(PropertyCollection props, XmlElement node, Type type)
  void AddXdoProperties(object instance, XmlElement root, XmlDocument xd)
  void AddXdoProperty(PropertyDescriptor pd, object instance, XmlElement root, XmlDocument xd)
  string XmlDataTypeName(Type type)
  void GenerateConstraintNames(DataTable table, bool fromTable)
  void GenerateConstraintNames(ArrayList tables)
  void GenerateConstraintNames(DataSet ds)
  bool _PropsNotEmpty(PropertyCollection props)
  bool HaveExtendedProperties(DataSet ds)
  void WriteSchemaRoot(XmlDocument xd, XmlElement rootSchema, string targetNamespace)
  void ValidateColumnMapping(Type columnType)
  void SetupAutoGenerated(DataSet ds)
  void SetupAutoGenerated(ArrayList dt)
  void SetupAutoGenerated(DataTable dt)
  void CreateTablesHierarchy(DataTable dt)
  void CreateRelations(DataTable dt)
  DataTable[] CreateToplevelTables()
  void SchemaTree(XmlDocument xd, XmlWriter xmlWriter, DataSet ds, DataTable dt, bool writeHierarchy)
  XmlElement SchemaTree(XmlDocument xd, DataTable dt)
  XmlElement FillDataSetElement(XmlDocument xd, DataSet ds, DataTable dt)
  void SetPath(XmlWriter xw)
  void Save(DataSet ds, XmlWriter xw)
  void Save(DataTable dt, XmlWriter xw)
  void Save(DataSet ds, DataTable dt, XmlWriter xw)
  void Save(DataSet ds, DataTable dt, XmlWriter xw, bool writeHierarchy)
  void Save(DataSet ds, DataTable dt, XmlWriter xw, bool writeHierarchy, Converter`2<Type, string> multipleTargetConverter)
  XmlElement HandleRelation(DataRelation rel, XmlDocument dc)
  XmlElement FindSimpleType(XmlElement schema, string name)
  XmlElement GetSchema(string NamespaceURI)
  void HandleColumnType(DataColumn col, XmlDocument dc, XmlElement root, XmlElement schema)
  void AddColumnProperties(DataColumn col, XmlElement root)
  string FindTargetNamespace(DataTable table)
  XmlElement HandleColumn(DataColumn col, XmlDocument dc, XmlElement schema, bool fWriteOrdinal)
  string TranslateAcceptRejectRule(AcceptRejectRule rule)
  string TranslateRule(Rule rule)
  void AppendChildWithoutRef(XmlElement node, string Namespace, XmlElement el, string refString)
  XmlElement FindTypeNode(XmlElement node, string strType)
  XmlElement HandleTable(DataTable table, XmlDocument dc, XmlElement schema)
  bool HasMixedColumns(DataTable table)
  bool AutoGenerated(DataColumn col)
  bool AutoGenerated(DataRelation rel)
  bool AutoGenerated(UniqueConstraint unique)
  bool AutoGenerated(ForeignKeyConstraint fk)
  bool AutoGenerated(ForeignKeyConstraint fk, bool checkRelation)
  bool IsAutoGenerated(object o)
  XmlElement HandleTable(DataTable table, XmlDocument dc, XmlElement schema, bool genNested)
  void SetMSDataAttribute(XmlElement root, Type type)
--------------------------------------------------
Класс: System.Data.NewDiffgramGen
Наследуется от: object
Поля:
  XmlDocument _doc
  DataSet _ds
  DataTable _dt
  XmlWriter _xmlw
  bool _fBefore
  bool _fErrors
  Hashtable _rowsOrder
  ArrayList _tables
  bool _writeHierarchy
Свойства:
Методы:
  void .ctor(DataSet ds)
  void .ctor(DataTable dt, bool writeHierarchy)
  void CreateTableHierarchy(DataTable dt)
  void DoAssignments(ArrayList tables)
  bool EmptyData()
  void Save(XmlWriter xmlw)
  void Save(XmlWriter xmlw, DataTable table)
  void GenerateTable(DataTable table)
  void GenerateTableErrors(DataTable table)
  void GenerateRow(DataRow row)
  void GenerateColumn(DataRow row, DataColumn col, DataRowVersion version)
  string QualifiedName(string prefix, string name)
--------------------------------------------------
Класс: System.Data.XmlDataTreeWriter
Наследуется от: object
Поля:
  XmlWriter _xmlw
  DataSet _ds
  DataTable _dt
  ArrayList _dTables
  DataTable[] _topLevelTables
  bool _fFromTable
  bool _isDiffgram
  Hashtable _rowsOrder
  bool _writeHierarchy
Свойства:
Методы:
  void .ctor(DataSet ds)
  void .ctor(DataTable dt, bool writeHierarchy)
  DataTable[] CreateToplevelTables()
  void CreateTablesHierarchy(DataTable dt)
  bool RowHasErrors(DataRow row)
  void SaveDiffgramData(XmlWriter xw, Hashtable rowsOrder)
  void Save(XmlWriter xw, bool writeSchema)
  ArrayList GetNestedChildRelations(DataRow row)
  void XmlDataRowWriter(DataRow row, string encodedTableName)
  bool PreserveSpace(object value)
--------------------------------------------------
Класс: System.Data.DataTextWriter
Наследуется от: XmlWriter
Поля:
  XmlWriter _xmltextWriter
Свойства:
  Stream BaseStream
  WriteState WriteState
  XmlSpace XmlSpace
  string XmlLang
Методы:
  XmlWriter CreateWriter(XmlWriter xw)
  void .ctor(XmlWriter w)
  Stream get_BaseStream()
  void WriteStartDocument()
  void WriteStartDocument(bool standalone)
  void WriteEndDocument()
  void WriteDocType(string name, string pubid, string sysid, string subset)
  void WriteStartElement(string prefix, string localName, string ns)
  void WriteEndElement()
  void WriteFullEndElement()
  void WriteStartAttribute(string prefix, string localName, string ns)
  void WriteEndAttribute()
  void WriteCData(string text)
  void WriteComment(string text)
  void WriteProcessingInstruction(string name, string text)
  void WriteEntityRef(string name)
  void WriteCharEntity(char ch)
  void WriteWhitespace(string ws)
  void WriteString(string text)
  void WriteSurrogateCharEntity(char lowChar, char highChar)
  void WriteChars(Char[] buffer, int index, int count)
  void WriteRaw(Char[] buffer, int index, int count)
  void WriteRaw(string data)
  void WriteBase64(Byte[] buffer, int index, int count)
  void WriteBinHex(Byte[] buffer, int index, int count)
  WriteState get_WriteState()
  void Close()
  void Flush()
  void WriteName(string name)
  void WriteQualifiedName(string localName, string ns)
  string LookupPrefix(string ns)
  XmlSpace get_XmlSpace()
  string get_XmlLang()
  void WriteNmToken(string name)
--------------------------------------------------
Класс: System.Data.DataTextReader
Наследуется от: XmlReader
Поля:
  XmlReader _xmlreader
Свойства:
  XmlReaderSettings Settings
  XmlNodeType NodeType
  string Name
  string LocalName
  string NamespaceURI
  string Prefix
  bool HasValue
  string Value
  int Depth
  string BaseURI
  bool IsEmptyElement
  bool IsDefault
  char QuoteChar
  XmlSpace XmlSpace
  string XmlLang
  int AttributeCount
  bool EOF
  ReadState ReadState
  XmlNameTable NameTable
  bool CanResolveEntity
  bool CanReadBinaryContent
  bool CanReadValueChunk
Методы:
  XmlReader CreateReader(XmlReader xr)
  void .ctor(XmlReader input)
  XmlReaderSettings get_Settings()
  XmlNodeType get_NodeType()
  string get_Name()
  string get_LocalName()
  string get_NamespaceURI()
  string get_Prefix()
  bool get_HasValue()
  string get_Value()
  int get_Depth()
  string get_BaseURI()
  bool get_IsEmptyElement()
  bool get_IsDefault()
  char get_QuoteChar()
  XmlSpace get_XmlSpace()
  string get_XmlLang()
  int get_AttributeCount()
  string GetAttribute(string name)
  string GetAttribute(string localName, string namespaceURI)
  string GetAttribute(int i)
  bool MoveToAttribute(string name)
  bool MoveToAttribute(string localName, string namespaceURI)
  void MoveToAttribute(int i)
  bool MoveToFirstAttribute()
  bool MoveToNextAttribute()
  bool MoveToElement()
  bool ReadAttributeValue()
  bool Read()
  bool get_EOF()
  void Close()
  ReadState get_ReadState()
  void Skip()
  XmlNameTable get_NameTable()
  string LookupNamespace(string prefix)
  bool get_CanResolveEntity()
  void ResolveEntity()
  bool get_CanReadBinaryContent()
  int ReadContentAsBase64(Byte[] buffer, int index, int count)
  int ReadElementContentAsBase64(Byte[] buffer, int index, int count)
  int ReadContentAsBinHex(Byte[] buffer, int index, int count)
  int ReadElementContentAsBinHex(Byte[] buffer, int index, int count)
  bool get_CanReadValueChunk()
  string ReadString()
--------------------------------------------------
Класс: System.Data.SafeNativeMethods
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr LocalAlloc(IntPtr initialSize)
  void LocalFree(IntPtr ptr)
  void ZeroMemory(IntPtr ptr, int length)
  IntPtr GetProcAddress(IntPtr HModule, string funcName)
--------------------------------------------------
Класс: System.Data.Win32NativeMethods
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsTokenRestrictedWrapper(IntPtr token)
--------------------------------------------------
Класс: System.Data.OperationAbortedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor(string message, Exception innerException)
  OperationAbortedException Aborted(Exception inner)
  void .ctor()
--------------------------------------------------
Класс: System.Data.LocalDBAPI
Наследуется от: object
Поля:
  string const_localDbPrefix
Свойства:
Методы:
  string GetLocalDBMessage(int hrCode)
  string GetLocalDbInstanceNameFromServerName(string serverName)
--------------------------------------------------
Класс: System.Data.TypedDataSetGeneratorException
Наследуется от: DataException
Поля:
  ArrayList errorList
  string KEY_ARRAYCOUNT
  string KEY_ARRAYVALUES
Свойства:
  ArrayList ErrorList
Методы:
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(ArrayList list)
  ArrayList get_ErrorList()
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Data.TypedDataSetGenerator
Наследуется от: object
Поля:
  bool useExtendedNaming
  ICodeGenerator codeGen
  ArrayList errorList
  ArrayList conflictingTables
  Hashtable lookupIdentifiers
Свойства:
Методы:
  void Generate(DataSet dataSet, CodeNamespace codeNamespace, ICodeGenerator codeGen)
  string GenerateIdName(string name, ICodeGenerator codeGen)
  CodeTypeDeclaration GenerateCode(DataSet dataSet, CodeNamespace codeNamespace, ICodeGenerator codeGen)
  void InitLookupIdentifiers()
  string FixIdName(string inVarName)
  bool isEmpty(string s)
  string RowClassName(DataTable table)
  string RowBaseClassName(DataTable table)
  string RowConcreteClassName(DataTable table)
  string TableClassName(DataTable table)
  string TablePropertyName(DataTable table)
  string TableFieldName(DataTable table)
  string RowColumnPropertyName(DataColumn column)
  string TableColumnFieldName(DataColumn column)
  string TableColumnPropertyName(DataColumn column)
  int TablesConnectedness(DataTable parentTable, DataTable childTable)
  string ChildPropertyName(DataRelation relation)
  string ParentPropertyName(DataRelation relation)
  string RelationFieldName(DataRelation relation)
  string GetTypeName(Type t)
  bool ChildRelationFollowable(DataRelation relation)
  CodeMemberMethod CreateOnRowEventMethod(string eventName, string rowClassName)
  CodeTypeDeclaration CreateTypedTable(DataTable table)
  CodeTypeDeclaration CreateTypedRow(DataTable table)
  CodeTypeDeclaration CreateTypedRowEvent(DataTable table)
  CodeTypeDelegate CreateTypedRowEventHandler(DataTable table)
  CodeTypeDeclaration CreateTypedDataSet(DataSet dataSet)
  CodeExpression This()
  CodeExpression Base()
  CodeExpression Value()
  CodeTypeReference Type(string type)
  CodeTypeReference Type(Type type)
  CodeTypeReference Type(string type, int rank)
  CodeTypeReferenceExpression TypeExpr(Type type)
  CodeTypeReferenceExpression TypeExpr(string type)
  CodeExpression Cast(string type, CodeExpression expr)
  CodeExpression Cast(CodeTypeReference type, CodeExpression expr)
  CodeExpression TypeOf(string type)
  CodeExpression Field(CodeExpression exp, string field)
  CodeExpression Property(CodeExpression exp, string property)
  CodeExpression Argument(string argument)
  CodeExpression Variable(string variable)
  CodeExpression Event(string eventName)
  CodeExpression New(string type, CodeExpression[] parameters)
  CodeExpression New(Type type, CodeExpression[] parameters)
  CodeExpression Primitive(object primitive)
  CodeExpression Str(string str)
  CodeExpression MethodCall(CodeExpression targetObject, string methodName, CodeExpression[] parameters)
  CodeExpression MethodCall(CodeExpression targetObject, string methodName)
  CodeExpression MethodCall(CodeExpression targetObject, string methodName, CodeExpression par)
  CodeExpression DelegateCall(CodeExpression targetObject, CodeExpression par)
  CodeExpression Indexer(CodeExpression targetObject, CodeExpression indices)
  CodeBinaryOperatorExpression BinOperator(CodeExpression left, CodeBinaryOperatorType op, CodeExpression right)
  CodeBinaryOperatorExpression IdNotEQ(CodeExpression left, CodeExpression right)
  CodeBinaryOperatorExpression EQ(CodeExpression left, CodeExpression right)
  CodeStatement Stm(CodeExpression expr)
  CodeStatement Return(CodeExpression expr)
  CodeStatement Return()
  CodeStatement Assign(CodeExpression left, CodeExpression right)
  CodeStatement Throw(Type exception, string arg, string inner)
  CodeStatement If(CodeExpression cond, CodeStatement[] trueStms, CodeStatement[] falseStms)
  CodeStatement If(CodeExpression cond, CodeStatement[] trueStms)
  CodeStatement If(CodeExpression cond, CodeStatement trueStm)
  CodeMemberField FieldDecl(string type, string name)
  CodeMemberField FieldDecl(Type type, string name)
  CodeMemberMethod Method(CodeTypeReference type, string name, MemberAttributes attributes)
  CodeMemberMethod MethodDecl(Type type, string name, MemberAttributes attributes)
  CodeMemberMethod MethodDecl(string type, string name, MemberAttributes attributes)
  CodeMemberProperty PropertyDecl(string type, string name, MemberAttributes attributes)
  CodeMemberProperty PropertyDecl(Type type, string name, MemberAttributes attributes)
  CodeStatement VariableDecl(Type type, string name)
  CodeStatement VariableDecl(string type, string name, CodeExpression initExpr)
  CodeStatement VariableDecl(Type type, string name, CodeExpression initExpr)
  CodeMemberEvent EventDecl(string type, string name)
  CodeParameterDeclarationExpression ParameterDecl(string type, string name)
  CodeParameterDeclarationExpression ParameterDecl(Type type, string name)
  CodeAttributeDeclaration AttributeDecl(string name)
  CodeAttributeDeclaration AttributeDecl(string name, CodeExpression value)
  CodeStatement Try(CodeStatement tryStmnt, CodeCatchClause catchClause)
  CodeCatchClause Catch(Type type, string name, CodeStatement catchStmnt)
  void .ctor()
--------------------------------------------------
Класс: System.Data.DataSetSchemaImporterExtension
Наследуется от: SchemaImporterExtension
Поля:
  Hashtable importedTypes
Свойства:
Методы:
  string ImportSchemaType(string name, string schemaNamespace, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
  string ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
  XmlSchemaElement FindDataSetElement(XmlSchema schema)
  string GenerateTypedDataSet(XmlSchemaElement element, XmlSchemas schemas, CodeNamespace codeNamespace, StringCollection references, CodeDomProvider codeProvider)
  bool IsDataSet(XmlSchemaElement e)
  void .ctor()
--------------------------------------------------
Класс: System.Data.PropertyAttributes
Наследуется от: Enum
Поля:
  int value__
  PropertyAttributes NotSupported
  PropertyAttributes Required
  PropertyAttributes Optional
  PropertyAttributes Read
  PropertyAttributes Write
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.OleDb.OleDbPermission
Наследуется от: DBDataPermission
Поля:
  String[] _providerRestriction
  string _providers
Свойства:
  string Provider
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  void .ctor(PermissionState state, bool allowBlankPassword)
  void .ctor(OleDbPermission permission)
  void .ctor(OleDbPermissionAttribute permissionAttribute)
  void .ctor(OleDbConnectionString constr)
  string get_Provider()
  void set_Provider(string value)
  IPermission Copy()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbPermissionAttribute
Наследуется от: DBDataPermissionAttribute
Поля:
  string _providers
Свойства:
  string Provider
Методы:
  void .ctor(SecurityAction action)
  string get_Provider()
  void set_Provider(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbType
Наследуется от: Enum
Поля:
  int value__
  OleDbType BigInt
  OleDbType Binary
  OleDbType Boolean
  OleDbType BSTR
  OleDbType Char
  OleDbType Currency
  OleDbType Date
  OleDbType DBDate
  OleDbType DBTime
  OleDbType DBTimeStamp
  OleDbType Decimal
  OleDbType Double
  OleDbType Empty
  OleDbType Error
  OleDbType Filetime
  OleDbType Guid
  OleDbType IDispatch
  OleDbType Integer
  OleDbType IUnknown
  OleDbType LongVarBinary
  OleDbType LongVarChar
  OleDbType LongVarWChar
  OleDbType Numeric
  OleDbType PropVariant
  OleDbType Single
  OleDbType SmallInt
  OleDbType TinyInt
  OleDbType UnsignedBigInt
  OleDbType UnsignedInt
  OleDbType UnsignedSmallInt
  OleDbType UnsignedTinyInt
  OleDbType VarBinary
  OleDbType VarChar
  OleDbType Variant
  OleDbType VarNumeric
  OleDbType VarWChar
  OleDbType WChar
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.OleDb.OleDbCommand
Наследуется от: DbCommand
Поля:
Свойства:
  string CommandText
  int CommandTimeout
  CommandType CommandType
  OleDbConnection Connection
  DbConnection DbConnection
  DbParameterCollection DbParameterCollection
  DbTransaction DbTransaction
  bool DesignTimeVisible
  OleDbParameterCollection Parameters
  OleDbTransaction Transaction
  UpdateRowSource UpdatedRowSource
Методы:
  void .ctor()
  void .ctor(string cmdText)
  void .ctor(string cmdText, OleDbConnection connection)
  void .ctor(string cmdText, OleDbConnection connection, OleDbTransaction transaction)
  string get_CommandText()
  void set_CommandText(string value)
  int get_CommandTimeout()
  void set_CommandTimeout(int value)
  CommandType get_CommandType()
  void set_CommandType(CommandType value)
  OleDbConnection get_Connection()
  void set_Connection(OleDbConnection value)
  DbConnection get_DbConnection()
  void set_DbConnection(DbConnection value)
  DbParameterCollection get_DbParameterCollection()
  DbTransaction get_DbTransaction()
  void set_DbTransaction(DbTransaction value)
  bool get_DesignTimeVisible()
  void set_DesignTimeVisible(bool value)
  OleDbParameterCollection get_Parameters()
  OleDbTransaction get_Transaction()
  void set_Transaction(OleDbTransaction value)
  UpdateRowSource get_UpdatedRowSource()
  void set_UpdatedRowSource(UpdateRowSource value)
  void Cancel()
  OleDbCommand Clone()
  DbParameter CreateDbParameter()
  OleDbParameter CreateParameter()
  void Dispose(bool disposing)
  DbDataReader ExecuteDbDataReader(CommandBehavior behavior)
  int ExecuteNonQuery()
  OleDbDataReader ExecuteReader()
  OleDbDataReader ExecuteReader(CommandBehavior behavior)
  object ExecuteScalar()
  void Prepare()
  void ResetCommandTimeout()
  IDataReader System.Data.IDbCommand.ExecuteReader()
  IDataReader System.Data.IDbCommand.ExecuteReader(CommandBehavior behavior)
  object System.ICloneable.Clone()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbCommandBuilder
Наследуется от: DbCommandBuilder
Поля:
Свойства:
  OleDbDataAdapter DataAdapter
Методы:
  void .ctor()
  void .ctor(OleDbDataAdapter adapter)
  OleDbDataAdapter get_DataAdapter()
  void set_DataAdapter(OleDbDataAdapter value)
  void ApplyParameterInfo(DbParameter parameter, DataRow datarow, StatementType statementType, bool whereClause)
  void DeriveParameters(OleDbCommand command)
  OleDbCommand GetDeleteCommand()
  OleDbCommand GetDeleteCommand(bool useColumnsForParameterNames)
  OleDbCommand GetInsertCommand()
  OleDbCommand GetInsertCommand(bool useColumnsForParameterNames)
  string GetParameterName(int parameterOrdinal)
  string GetParameterName(string parameterName)
  string GetParameterPlaceholder(int parameterOrdinal)
  OleDbCommand GetUpdateCommand()
  OleDbCommand GetUpdateCommand(bool useColumnsForParameterNames)
  string QuoteIdentifier(string unquotedIdentifier)
  string QuoteIdentifier(string unquotedIdentifier, OleDbConnection connection)
  void SetRowUpdatingHandler(DbDataAdapter adapter)
  string UnquoteIdentifier(string quotedIdentifier)
  string UnquoteIdentifier(string quotedIdentifier, OleDbConnection connection)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbConnection
Наследуется от: DbConnection
Поля:
  OleDbInfoMessageEventHandler InfoMessage
Свойства:
  string ConnectionString
  int ConnectionTimeout
  string Database
  string DataSource
  string Provider
  string ServerVersion
  ConnectionState State
Методы:
  void .ctor()
  void .ctor(string connectionString)
  string get_ConnectionString()
  void set_ConnectionString(string value)
  int get_ConnectionTimeout()
  string get_Database()
  string get_DataSource()
  string get_Provider()
  string get_ServerVersion()
  ConnectionState get_State()
  DbTransaction BeginDbTransaction(IsolationLevel isolationLevel)
  OleDbTransaction BeginTransaction()
  OleDbTransaction BeginTransaction(IsolationLevel isolationLevel)
  void ChangeDatabase(string value)
  void Close()
  OleDbCommand CreateCommand()
  DbCommand CreateDbCommand()
  void Dispose(bool disposing)
  void EnlistDistributedTransaction(ITransaction transaction)
  void EnlistTransaction(Transaction transaction)
  DataTable GetOleDbSchemaTable(Guid schema, Object[] restrictions)
  DataTable GetSchema()
  DataTable GetSchema(string collectionName)
  DataTable GetSchema(string collectionName, String[] restrictionValues)
  void Open()
  void ReleaseObjectPool()
  void ResetState()
  void add_InfoMessage(OleDbInfoMessageEventHandler value)
  void remove_InfoMessage(OleDbInfoMessageEventHandler value)
  object System.ICloneable.Clone()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbConnectionStringBuilder
Наследуется от: DbConnectionStringBuilder
Поля:
Свойства:
  string DataSource
  string FileName
  object Item
  ICollection Keys
  int OleDbServices
  bool PersistSecurityInfo
  string Provider
Методы:
  void .ctor()
  void .ctor(string connectionString)
  string get_DataSource()
  void set_DataSource(string value)
  string get_FileName()
  void set_FileName(string value)
  object get_Item()
  void set_Item(object value)
  ICollection get_Keys()
  void set_Keys(ICollection value)
  int get_OleDbServices()
  void set_OleDbServices(int value)
  bool get_PersistSecurityInfo()
  void set_PersistSecurityInfo(bool value)
  string get_Provider()
  void set_Provider(string value)
  void Clear()
  bool ContainsKey(string keyword)
  void GetProperties(Hashtable propertyDescriptors)
  bool Remove(string keyword)
  bool TryGetValue(string keyword, object value)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbDataAdapter
Наследуется от: DbDataAdapter
Поля:
  OleDbRowUpdatedEventHandler RowUpdated
  OleDbRowUpdatingEventHandler RowUpdating
Свойства:
  OleDbCommand DeleteCommand
  OleDbCommand InsertCommand
  OleDbCommand SelectCommand
  IDbCommand System.Data.IDbDataAdapter.DeleteCommand
  IDbCommand System.Data.IDbDataAdapter.InsertCommand
  IDbCommand System.Data.IDbDataAdapter.SelectCommand
  IDbCommand System.Data.IDbDataAdapter.UpdateCommand
  OleDbCommand UpdateCommand
Методы:
  OleDbCommand get_DeleteCommand()
  void set_DeleteCommand(OleDbCommand value)
  OleDbCommand get_InsertCommand()
  void set_InsertCommand(OleDbCommand value)
  OleDbCommand get_SelectCommand()
  void set_SelectCommand(OleDbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_DeleteCommand()
  void System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_InsertCommand()
  void System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_SelectCommand()
  void System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_UpdateCommand()
  void System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value)
  OleDbCommand get_UpdateCommand()
  void set_UpdateCommand(OleDbCommand value)
  void .ctor()
  void .ctor(OleDbCommand selectCommand)
  void .ctor(string selectCommandText, OleDbConnection selectConnection)
  void .ctor(string selectCommandText, string selectConnectionString)
  RowUpdatedEventArgs CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  RowUpdatingEventArgs CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  int Fill(DataSet dataSet, object ADODBRecordSet, string srcTable)
  int Fill(DataTable dataTable, object ADODBRecordSet)
  void OnRowUpdated(RowUpdatedEventArgs value)
  void OnRowUpdating(RowUpdatingEventArgs value)
  void add_RowUpdated(OleDbRowUpdatedEventHandler value)
  void remove_RowUpdated(OleDbRowUpdatedEventHandler value)
  void add_RowUpdating(OleDbRowUpdatingEventHandler value)
  void remove_RowUpdating(OleDbRowUpdatingEventHandler value)
  object System.ICloneable.Clone()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbDataReader
Наследуется от: DbDataReader
Поля:
Свойства:
  int Depth
  int FieldCount
  bool HasRows
  bool IsClosed
  int RecordsAffected
  int VisibleFieldCount
  object Item
  object Item
Методы:
  void .ctor()
  int get_Depth()
  int get_FieldCount()
  bool get_HasRows()
  bool get_IsClosed()
  int get_RecordsAffected()
  int get_VisibleFieldCount()
  void Close()
  bool GetBoolean(int ordinal)
  byte GetByte(int ordinal)
  long GetBytes(int ordinal, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  char GetChar(int ordinal)
  long GetChars(int ordinal, long dataIndex, Char[] buffer, int bufferIndex, int length)
  OleDbDataReader GetData(int ordinal)
  DbDataReader GetDbDataReader(int ordinal)
  string GetDataTypeName(int index)
  DateTime GetDateTime(int ordinal)
  decimal GetDecimal(int ordinal)
  double GetDouble(int ordinal)
  IEnumerator GetEnumerator()
  Type GetFieldType(int index)
  float GetFloat(int ordinal)
  Guid GetGuid(int ordinal)
  short GetInt16(int ordinal)
  int GetInt32(int ordinal)
  long GetInt64(int ordinal)
  string GetName(int index)
  int GetOrdinal(string name)
  DataTable GetSchemaTable()
  string GetString(int ordinal)
  TimeSpan GetTimeSpan(int ordinal)
  object GetValue(int ordinal)
  int GetValues(Object[] values)
  bool IsDBNull(int ordinal)
  bool NextResult()
  bool Read()
  object get_Item(int index)
  object get_Item(string name)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbEnumerator
Наследуется от: object
Поля:
Свойства:
Методы:
  DataTable GetElements()
  OleDbDataReader GetEnumerator(Type type)
  OleDbDataReader GetRootEnumerator()
  void .ctor()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbError
Наследуется от: object
Поля:
Свойства:
  string Message
  int NativeError
  string Source
  string SQLState
Методы:
  void .ctor()
  string get_Message()
  int get_NativeError()
  string get_Source()
  string get_SQLState()
  string ToString()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbErrorCollection
Наследуется от: object
Поля:
Свойства:
  int Count
  OleDbError Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  int get_Count()
  void CopyTo(Array array, int index)
  void CopyTo(OleDbError[] array, int index)
  IEnumerator GetEnumerator()
  OleDbError get_Item(int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbException
Наследуется от: DbException
Поля:
Свойства:
  int ErrorCode
  OleDbErrorCollection Errors
Методы:
  void .ctor()
  int get_ErrorCode()
  OleDbErrorCollection get_Errors()
  void GetObjectData(SerializationInfo si, StreamingContext context)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbFactory
Наследуется от: DbProviderFactory
Поля:
  OleDbFactory Instance
Свойства:
Методы:
  void .ctor()
  DbCommand CreateCommand()
  DbCommandBuilder CreateCommandBuilder()
  DbConnection CreateConnection()
  DbConnectionStringBuilder CreateConnectionStringBuilder()
  DbDataAdapter CreateDataAdapter()
  DbParameter CreateParameter()
  CodeAccessPermission CreatePermission(PermissionState state)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbInfoMessageEventArgs
Наследуется от: EventArgs
Поля:
Свойства:
  int ErrorCode
  OleDbErrorCollection Errors
  string Message
  string Source
Методы:
  void .ctor()
  int get_ErrorCode()
  OleDbErrorCollection get_Errors()
  string get_Message()
  string get_Source()
  string ToString()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbInfoMessageEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OleDbInfoMessageEventArgs e)
  IAsyncResult BeginInvoke(object sender, OleDbInfoMessageEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbLiteral
Наследуется от: Enum
Поля:
  int value__
  OleDbLiteral Binary_Literal
  OleDbLiteral Catalog_Name
  OleDbLiteral Catalog_Separator
  OleDbLiteral Char_Literal
  OleDbLiteral Column_Alias
  OleDbLiteral Column_Name
  OleDbLiteral Correlation_Name
  OleDbLiteral Cube_Name
  OleDbLiteral Cursor_Name
  OleDbLiteral Dimension_Name
  OleDbLiteral Escape_Percent_Prefix
  OleDbLiteral Escape_Percent_Suffix
  OleDbLiteral Escape_Underscore_Prefix
  OleDbLiteral Escape_Underscore_Suffix
  OleDbLiteral Hierarchy_Name
  OleDbLiteral Index_Name
  OleDbLiteral Invalid
  OleDbLiteral Level_Name
  OleDbLiteral Like_Percent
  OleDbLiteral Like_Underscore
  OleDbLiteral Member_Name
  OleDbLiteral Procedure_Name
  OleDbLiteral Property_Name
  OleDbLiteral Quote_Prefix
  OleDbLiteral Quote_Suffix
  OleDbLiteral Schema_Name
  OleDbLiteral Schema_Separator
  OleDbLiteral Table_Name
  OleDbLiteral Text_Command
  OleDbLiteral User_Name
  OleDbLiteral View_Name
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.OleDb.OleDbMetaDataCollectionNames
Наследуется от: object
Поля:
  string Catalogs
  string Collations
  string Columns
  string Indexes
  string ProcedureColumns
  string ProcedureParameters
  string Procedures
  string Tables
  string Views
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.OleDb.OleDbMetaDataColumnNames
Наследуется от: object
Поля:
  string BooleanFalseLiteral
  string BooleanTrueLiteral
  string DateTimeDigits
  string NativeDataType
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.OleDb.OleDbParameter
Наследуется от: DbParameter
Поля:
Свойства:
  DbType DbType
  ParameterDirection Direction
  bool IsNullable
  int Offset
  OleDbType OleDbType
  string ParameterName
  byte Precision
  byte Scale
  int Size
  string SourceColumn
  bool SourceColumnNullMapping
  DataRowVersion SourceVersion
  object Value
Методы:
  DbType get_DbType()
  void set_DbType(DbType value)
  ParameterDirection get_Direction()
  void set_Direction(ParameterDirection value)
  bool get_IsNullable()
  void set_IsNullable(bool value)
  int get_Offset()
  void set_Offset(int value)
  OleDbType get_OleDbType()
  void set_OleDbType(OleDbType value)
  string get_ParameterName()
  void set_ParameterName(string value)
  byte get_Precision()
  void set_Precision(byte value)
  byte get_Scale()
  void set_Scale(byte value)
  int get_Size()
  void set_Size(int value)
  string get_SourceColumn()
  void set_SourceColumn(string value)
  bool get_SourceColumnNullMapping()
  void set_SourceColumnNullMapping(bool value)
  DataRowVersion get_SourceVersion()
  void set_SourceVersion(DataRowVersion value)
  object get_Value()
  void set_Value(object value)
  void .ctor()
  void .ctor(string name, OleDbType dataType)
  void .ctor(string name, OleDbType dataType, int size)
  void .ctor(string parameterName, OleDbType dbType, int size, ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, DataRowVersion srcVersion, object value)
  void .ctor(string parameterName, OleDbType dbType, int size, ParameterDirection direction, byte precision, byte scale, string sourceColumn, DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value)
  void .ctor(string name, OleDbType dataType, int size, string srcColumn)
  void .ctor(string name, object value)
  void ResetDbType()
  string ToString()
  object System.ICloneable.Clone()
  void ResetOleDbType()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbParameterCollection
Наследуется от: DbParameterCollection
Поля:
Свойства:
  int Count
  bool IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  OleDbParameter Item
  OleDbParameter Item
  object SyncRoot
Методы:
  void .ctor()
  OleDbParameter Add(OleDbParameter value)
  int Add(object value)
  OleDbParameter Add(string parameterName, OleDbType oleDbType)
  OleDbParameter Add(string parameterName, OleDbType oleDbType, int size)
  OleDbParameter Add(string parameterName, OleDbType oleDbType, int size, string sourceColumn)
  OleDbParameter Add(string parameterName, object value)
  void AddRange(Array values)
  void AddRange(OleDbParameter[] values)
  OleDbParameter AddWithValue(string parameterName, object value)
  void Clear()
  bool Contains(OleDbParameter value)
  bool Contains(object value)
  bool Contains(string value)
  void CopyTo(Array array, int index)
  void CopyTo(OleDbParameter[] array, int index)
  IEnumerator GetEnumerator()
  DbParameter GetParameter(int index)
  DbParameter GetParameter(string parameterName)
  int IndexOf(OleDbParameter value)
  int IndexOf(object value)
  int IndexOf(string parameterName)
  void Insert(int index, OleDbParameter value)
  void Insert(int index, object value)
  void Remove(OleDbParameter value)
  void Remove(object value)
  void RemoveAt(int index)
  void RemoveAt(string parameterName)
  void SetParameter(int index, DbParameter value)
  void SetParameter(string parameterName, DbParameter value)
  int get_Count()
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  OleDbParameter get_Item(int index)
  void set_Item(int index, OleDbParameter value)
  OleDbParameter get_Item(string parameterName)
  void set_Item(string parameterName, OleDbParameter value)
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbRowUpdatedEventArgs
Наследуется от: RowUpdatedEventArgs
Поля:
Свойства:
  OleDbCommand Command
Методы:
  OleDbCommand get_Command()
  void .ctor(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbRowUpdatedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OleDbRowUpdatedEventArgs e)
  IAsyncResult BeginInvoke(object sender, OleDbRowUpdatedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbRowUpdatingEventArgs
Наследуется от: RowUpdatingEventArgs
Поля:
Свойства:
  IDbCommand BaseCommand
  OleDbCommand Command
Методы:
  IDbCommand get_BaseCommand()
  void set_BaseCommand(IDbCommand value)
  OleDbCommand get_Command()
  void set_Command(OleDbCommand value)
  void .ctor(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbRowUpdatingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OleDbRowUpdatingEventArgs e)
  IAsyncResult BeginInvoke(object sender, OleDbRowUpdatingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.OleDb.OleDbSchemaGuid
Наследуется от: object
Поля:
  Guid Assertions
  Guid Catalogs
  Guid Character_Sets
  Guid Check_Constraints
  Guid Check_Constraints_By_Table
  Guid Collations
  Guid Column_Domain_Usage
  Guid Column_Privileges
  Guid Columns
  Guid Constraint_Column_Usage
  Guid Constraint_Table_Usage
  Guid DbInfoKeywords
  Guid DbInfoLiterals
  Guid Foreign_Keys
  Guid Indexes
  Guid Key_Column_Usage
  Guid Primary_Keys
  Guid Procedure_Columns
  Guid Procedure_Parameters
  Guid Procedures
  Guid Provider_Types
  Guid Referential_Constraints
  Guid SchemaGuids
  Guid Schemata
  Guid Sql_Languages
  Guid Statistics
  Guid Table_Constraints
  Guid Table_Privileges
  Guid Table_Statistics
  Guid Tables
  Guid Tables_Info
  Guid Translations
  Guid Trustee
  Guid Usage_Privileges
  Guid View_Column_Usage
  Guid View_Table_Usage
  Guid Views
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbTransaction
Наследуется от: DbTransaction
Поля:
Свойства:
  OleDbConnection Connection
  DbConnection DbConnection
  IsolationLevel IsolationLevel
Методы:
  void .ctor()
  OleDbConnection get_Connection()
  DbConnection get_DbConnection()
  IsolationLevel get_IsolationLevel()
  OleDbTransaction Begin()
  OleDbTransaction Begin(IsolationLevel isolevel)
  void Commit()
  void Dispose(bool disposing)
  void Rollback()
--------------------------------------------------
Класс: System.Data.OleDb.OleDbConnectionString
Наследуется от: DbConnectionOptions
Поля:
Свойства:
Методы:
  void .ctor(string connectionString, bool validate)
--------------------------------------------------
Класс: System.Data.Sql.SqlNotificationRequest
Наследуется от: object
Поля:
  string _userData
  string _options
  int _timeout
Свойства:
  string Options
  int Timeout
  string UserData
Методы:
  void .ctor()
  void .ctor(string userData, string options, int timeout)
  string get_Options()
  void set_Options(string value)
  int get_Timeout()
  void set_Timeout(int value)
  string get_UserData()
  void set_UserData(string value)
--------------------------------------------------
Класс: System.Data.Sql.SqlDataSourceEnumerator
Наследуется от: DbDataSourceEnumerator
Поля:
  SqlDataSourceEnumerator SingletonInstance
  string ServerName
  string InstanceName
  string IsClustered
  string Version
  long timeoutTime
  string _Version
  string _Cluster
  int _clusterLength
  int _versionLength
Свойства:
  SqlDataSourceEnumerator Instance
Методы:
  void .ctor()
  SqlDataSourceEnumerator get_Instance()
  DataTable GetDataSources()
  DataTable ParseServerEnumString(string serverInstances)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Sql.SqlGenericUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  Exception NullCommandText()
  Exception MismatchedMetaDataDirectionArrayLengths()
--------------------------------------------------
Класс: System.Data.SqlClient.SNINativeMethodWrapper
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.ApplicationIntent
Наследуется от: Enum
Поля:
  int value__
  ApplicationIntent ReadWrite
  ApplicationIntent ReadOnly
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.OnChangeEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SqlNotificationEventArgs e)
  IAsyncResult BeginInvoke(object sender, SqlNotificationEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.SqlClient.ParameterPeekAheadValue
Наследуется от: object
Поля:
  IEnumerator`1<SqlDataRecord> Enumerator
  SqlDataRecord FirstRecord
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlRowsCopiedEventArgs
Наследуется от: EventArgs
Поля:
  bool _abort
  long _rowsCopied
Свойства:
  bool Abort
  long RowsCopied
Методы:
  void .ctor(long rowsCopied)
  bool get_Abort()
  void set_Abort(bool value)
  long get_RowsCopied()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlRowsCopiedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SqlRowsCopiedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SqlRowsCopiedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.SqlClient.SortOrder
Наследуется от: Enum
Поля:
  int value__
  SortOrder Unspecified
  SortOrder Ascending
  SortOrder Descending
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlBuffer
Наследуется от: object
Поля:
  bool _isNull
  StorageType _type
  Storage _value
  object _object
  String[] s_katmaiDateTimeOffsetFormatByScale
  String[] s_katmaiDateTime2FormatByScale
  String[] s_katmaiTimeFormatByScale
Свойства:
  bool IsEmpty
  bool IsNull
  StorageType VariantInternalStorageType
  bool Boolean
  byte Byte
  Byte[] ByteArray
  DateTime DateTime
  decimal Decimal
  double Double
  Guid Guid
  short Int16
  int Int32
  long Int64
  float Single
  string String
  string KatmaiDateTimeString
  SqlString KatmaiDateTimeSqlString
  TimeSpan Time
  DateTimeOffset DateTimeOffset
  SqlBinary SqlBinary
  SqlBoolean SqlBoolean
  SqlByte SqlByte
  SqlCachedBuffer SqlCachedBuffer
  SqlXml SqlXml
  SqlDateTime SqlDateTime
  SqlDecimal SqlDecimal
  SqlDouble SqlDouble
  SqlGuid SqlGuid
  SqlInt16 SqlInt16
  SqlInt32 SqlInt32
  SqlInt64 SqlInt64
  SqlMoney SqlMoney
  SqlSingle SqlSingle
  SqlString SqlString
  object SqlValue
  object Value
Методы:
  void .ctor()
  void .ctor(SqlBuffer value)
  bool get_IsEmpty()
  bool get_IsNull()
  StorageType get_VariantInternalStorageType()
  bool get_Boolean()
  void set_Boolean(bool value)
  byte get_Byte()
  void set_Byte(byte value)
  Byte[] get_ByteArray()
  DateTime get_DateTime()
  decimal get_Decimal()
  double get_Double()
  void set_Double(double value)
  Guid get_Guid()
  short get_Int16()
  void set_Int16(short value)
  int get_Int32()
  void set_Int32(int value)
  long get_Int64()
  void set_Int64(long value)
  float get_Single()
  void set_Single(float value)
  string get_String()
  string get_KatmaiDateTimeString()
  SqlString get_KatmaiDateTimeSqlString()
  TimeSpan get_Time()
  DateTimeOffset get_DateTimeOffset()
  long GetTicksFromDateTime2Info(DateTime2Info dateTime2Info)
  SqlBinary get_SqlBinary()
  void set_SqlBinary(SqlBinary value)
  SqlBoolean get_SqlBoolean()
  SqlByte get_SqlByte()
  SqlCachedBuffer get_SqlCachedBuffer()
  void set_SqlCachedBuffer(SqlCachedBuffer value)
  SqlXml get_SqlXml()
  void set_SqlXml(SqlXml value)
  SqlDateTime get_SqlDateTime()
  SqlDecimal get_SqlDecimal()
  SqlDouble get_SqlDouble()
  SqlGuid get_SqlGuid()
  void set_SqlGuid(SqlGuid value)
  SqlInt16 get_SqlInt16()
  SqlInt32 get_SqlInt32()
  SqlInt64 get_SqlInt64()
  SqlMoney get_SqlMoney()
  SqlSingle get_SqlSingle()
  SqlString get_SqlString()
  object get_SqlValue()
  object get_Value()
  Type GetTypeFromStorageType(bool isSqlType)
  SqlBuffer[] CreateBufferArray(int length)
  SqlBuffer[] CloneBufferArray(SqlBuffer[] values)
  void Clear(SqlBuffer[] values)
  void Clear()
  void SetToDateTime(int daypart, int timepart)
  void SetToDecimal(byte precision, byte scale, bool positive, Int32[] bits)
  void SetToMoney(long value)
  void SetToNullOfType(StorageType storageType)
  void SetToString(string value)
  void SetToDate(Byte[] bytes)
  void SetToDate(DateTime date)
  void SetToTime(Byte[] bytes, int length, byte scale)
  void SetToTime(TimeSpan timeSpan, byte scale)
  void SetToDateTime2(Byte[] bytes, int length, byte scale)
  void SetToDateTime2(DateTime dateTime, byte scale)
  void SetToDateTimeOffset(Byte[] bytes, int length, byte scale)
  void SetToDateTimeOffset(DateTimeOffset dateTimeOffset, byte scale)
  void FillInTimeInfo(TimeInfo& timeInfo, Byte[] timeBytes, int length, byte scale)
  int GetDateFromByteArray(Byte[] buf, int offset)
  void ThrowIfNull()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient._ColumnMapping
Наследуется от: object
Поля:
  int _sourceColumnOrdinal
  _SqlMetaData _metadata
Свойства:
Методы:
  void .ctor(int columnId, _SqlMetaData metadata)
--------------------------------------------------
Класс: System.Data.SqlClient.Row
Наследуется от: object
Поля:
  Object[] _dataFields
Свойства:
  Object[] DataFields
  object Item
Методы:
  void .ctor(int rowCount)
  Object[] get_DataFields()
  object get_Item(int index)
--------------------------------------------------
Класс: System.Data.SqlClient.Result
Наследуется от: object
Поля:
  _SqlMetaDataSet _metadata
  List`1<Row> _rowset
Свойства:
  int Count
  _SqlMetaDataSet MetaData
  Row Item
Методы:
  void .ctor(_SqlMetaDataSet metadata)
  int get_Count()
  _SqlMetaDataSet get_MetaData()
  Row get_Item(int index)
  void AddRow(Row row)
--------------------------------------------------
Класс: System.Data.SqlClient.BulkCopySimpleResultSet
Наследуется от: object
Поля:
  List`1<Result> _results
  Result _resultSet
  Int32[] _indexmap
Свойства:
  Result Item
Методы:
  void .ctor()
  Result get_Item(int idx)
  void SetMetaData(_SqlMetaDataSet metadata)
  Int32[] CreateIndexMap()
  Object[] CreateRowBuffer()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlBulkCopy
Наследуется от: object
Поля:
  int MetaDataResultId
  int CollationResultId
  int CollationId
  int MAX_LENGTH
  int DefaultCommandTimeout
  bool _enableStreaming
  int _batchSize
  bool _ownConnection
  SqlBulkCopyOptions _copyOptions
  int _timeout
  string _destinationTableName
  int _rowsCopied
  int _notifyAfter
  int _rowsUntilNotification
  bool _insideRowsCopiedEvent
  object _rowSource
  SqlDataReader _SqlDataReaderRowSource
  DbDataReader _DbDataReaderRowSource
  DataTable _dataTableSource
  SqlBulkCopyColumnMappingCollection _columnMappings
  SqlBulkCopyColumnMappingCollection _localColumnMappings
  SqlConnection _connection
  SqlTransaction _internalTransaction
  SqlTransaction _externalTransaction
  ValueSourceType _rowSourceType
  DataRow _currentRow
  int _currentRowLength
  DataRowState _rowStateToSkip
  IEnumerator _rowEnumerator
  TdsParser _parser
  TdsParserStateObject _stateObj
  List`1<_ColumnMapping> _sortedColumnMappings
  SqlRowsCopiedEventHandler _rowsCopiedEventHandler
  int _savedBatchSize
  bool _hasMoreRowToCopy
  bool _isAsyncBulkCopy
  bool _isBulkCopyingInProgress
  SyncAsyncLock _parserLock
  SourceColumnMetadata[] _currentRowMetadata
Свойства:
  int BatchSize
  int BulkCopyTimeout
  bool EnableStreaming
  SqlBulkCopyColumnMappingCollection ColumnMappings
  string DestinationTableName
  int NotifyAfter
  SqlStatistics Statistics
Методы:
  void .ctor(SqlConnection connection)
  void .ctor(SqlConnection connection, SqlBulkCopyOptions copyOptions, SqlTransaction externalTransaction)
  void .ctor(string connectionString)
  void .ctor(string connectionString, SqlBulkCopyOptions copyOptions)
  int get_BatchSize()
  void set_BatchSize(int value)
  int get_BulkCopyTimeout()
  void set_BulkCopyTimeout(int value)
  bool get_EnableStreaming()
  void set_EnableStreaming(bool value)
  SqlBulkCopyColumnMappingCollection get_ColumnMappings()
  string get_DestinationTableName()
  void set_DestinationTableName(string value)
  int get_NotifyAfter()
  void set_NotifyAfter(int value)
  void add_SqlRowsCopied(SqlRowsCopiedEventHandler value)
  void remove_SqlRowsCopied(SqlRowsCopiedEventHandler value)
  SqlStatistics get_Statistics()
  void System.IDisposable.Dispose()
  bool IsCopyOption(SqlBulkCopyOptions copyOption)
  string CreateInitialQuery()
  Task`1<BulkCopySimpleResultSet> CreateAndExecuteInitialQueryAsync(BulkCopySimpleResultSet& result)
  string AnalyzeTargetAndCreateUpdateBulkCommand(BulkCopySimpleResultSet internalResults)
  Task SubmitUpdateBulkCommand(string TDSCommand)
  void WriteMetaData(BulkCopySimpleResultSet internalResults)
  void Close()
  void Dispose(bool disposing)
  object GetValueFromSourceRow(int destRowIndex, Boolean& isSqlType, Boolean& isDataFeed, Boolean& isNull)
  Task ReadFromRowSourceAsync(CancellationToken cts)
  bool ReadFromRowSource()
  SourceColumnMetadata GetColumnMetadata(int ordinal)
  void CreateOrValidateConnection(string method)
  void RunParser(BulkCopySimpleResultSet bulkCopyHandler)
  void RunParserReliably(BulkCopySimpleResultSet bulkCopyHandler)
  void CommitTransaction()
  void AbortTransaction()
  void AppendColumnNameAndTypeName(StringBuilder query, string columnName, string typeName)
  string UnquotedName(string name)
  object ValidateBulkCopyVariant(object value)
  object ConvertValue(object value, _SqlMetaData metadata, bool isNull, Boolean& isSqlType, Boolean& coercedToDataFeed)
  void WriteToServer(DbDataReader reader)
  void WriteToServer(IDataReader reader)
  void WriteToServer(DataTable table)
  void WriteToServer(DataTable table, DataRowState rowState)
  void WriteToServer(DataRow[] rows)
  Task WriteToServerAsync(DataRow[] rows)
  Task WriteToServerAsync(DataRow[] rows, CancellationToken cancellationToken)
  Task WriteToServerAsync(DbDataReader reader)
  Task WriteToServerAsync(DbDataReader reader, CancellationToken cancellationToken)
  Task WriteToServerAsync(IDataReader reader)
  Task WriteToServerAsync(IDataReader reader, CancellationToken cancellationToken)
  Task WriteToServerAsync(DataTable table)
  Task WriteToServerAsync(DataTable table, CancellationToken cancellationToken)
  Task WriteToServerAsync(DataTable table, DataRowState rowState)
  Task WriteToServerAsync(DataTable table, DataRowState rowState, CancellationToken cancellationToken)
  Task WriteRowSourceToServerAsync(int columnCount, CancellationToken ctoken)
  void WriteRowSourceToServerCommon(int columnCount)
  void OnConnectionClosed()
  void OnRowsCopied(SqlRowsCopiedEventArgs value)
  bool FireRowsCopiedEvent(long rowsCopied)
  Task ReadWriteColumnValueAsync(int col)
  void RegisterForConnectionCloseNotification(Task`1& outerTask)
  Task CopyColumnsAsync(int col, TaskCompletionSource`1<object> source)
  void CopyColumnsAsyncSetupContinuation(TaskCompletionSource`1<object> source, Task task, int i)
  void CheckAndRaiseNotification()
  Task CheckForCancellation(CancellationToken cts, TaskCompletionSource`1<object> tcs)
  TaskCompletionSource`1<object> ContinueTaskPend(Task task, TaskCompletionSource`1<object> source, Func`1<TaskCompletionSource`1<object>> action)
  Task CopyRowsAsync(int rowsSoFar, int totalRows, CancellationToken cts, TaskCompletionSource`1<object> source)
  Task CopyBatchesAsync(BulkCopySimpleResultSet internalResults, string updateBulkCommandText, CancellationToken cts, TaskCompletionSource`1<object> source)
  Task CopyBatchesAsyncContinued(BulkCopySimpleResultSet internalResults, string updateBulkCommandText, CancellationToken cts, TaskCompletionSource`1<object> source)
  Task CopyBatchesAsyncContinuedOnSuccess(BulkCopySimpleResultSet internalResults, string updateBulkCommandText, CancellationToken cts, TaskCompletionSource`1<object> source)
  void CopyBatchesAsyncContinuedOnError(bool cleanupParser)
  void CleanUpStateObjectOnError()
  void WriteToServerInternalRestContinuedAsync(BulkCopySimpleResultSet internalResults, CancellationToken cts, TaskCompletionSource`1<object> source)
  void WriteToServerInternalRestAsync(CancellationToken cts, TaskCompletionSource`1<object> source)
  Task WriteToServerInternalAsync(CancellationToken ctoken)
  BulkCopySimpleResultSet <CreateAndExecuteInitialQueryAsync>b__71_0(Task t)
  void <SubmitUpdateBulkCommand>b__73_0(Task t)
  Task`1<bool> <ReadFromRowSourceAsync>b__78_0(Task`1<bool> t)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlBulkCopyColumnMapping
Наследуется от: object
Поля:
  string _destinationColumnName
  int _destinationColumnOrdinal
  string _sourceColumnName
  int _sourceColumnOrdinal
  int _internalDestinationColumnOrdinal
  int _internalSourceColumnOrdinal
Свойства:
  string DestinationColumn
  int DestinationOrdinal
  string SourceColumn
  int SourceOrdinal
Методы:
  string get_DestinationColumn()
  void set_DestinationColumn(string value)
  int get_DestinationOrdinal()
  void set_DestinationOrdinal(int value)
  string get_SourceColumn()
  void set_SourceColumn(string value)
  int get_SourceOrdinal()
  void set_SourceOrdinal(int value)
  void .ctor()
  void .ctor(string sourceColumn, string destinationColumn)
  void .ctor(int sourceColumnOrdinal, string destinationColumn)
  void .ctor(string sourceColumn, int destinationOrdinal)
  void .ctor(int sourceColumnOrdinal, int destinationOrdinal)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
Наследуется от: CollectionBase
Поля:
  MappingSchema _mappingSchema
  bool <ReadOnly>k__BackingField
Свойства:
  bool ReadOnly
  SqlBulkCopyColumnMapping Item
Методы:
  void .ctor()
  bool get_ReadOnly()
  void set_ReadOnly(bool value)
  SqlBulkCopyColumnMapping get_Item(int index)
  SqlBulkCopyColumnMapping Add(SqlBulkCopyColumnMapping bulkCopyColumnMapping)
  SqlBulkCopyColumnMapping Add(string sourceColumn, string destinationColumn)
  SqlBulkCopyColumnMapping Add(int sourceColumnIndex, string destinationColumn)
  SqlBulkCopyColumnMapping Add(string sourceColumn, int destinationColumnIndex)
  SqlBulkCopyColumnMapping Add(int sourceColumnIndex, int destinationColumnIndex)
  void AssertWriteAccess()
  void Clear()
  bool Contains(SqlBulkCopyColumnMapping value)
  void CopyTo(SqlBulkCopyColumnMapping[] array, int index)
  void CreateDefaultMapping(int columnCount)
  int IndexOf(SqlBulkCopyColumnMapping value)
  void Insert(int index, SqlBulkCopyColumnMapping value)
  void Remove(SqlBulkCopyColumnMapping value)
  void RemoveAt(int index)
  void ValidateCollection()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlBulkCopyOptions
Наследуется от: Enum
Поля:
  int value__
  SqlBulkCopyOptions Default
  SqlBulkCopyOptions KeepIdentity
  SqlBulkCopyOptions CheckConstraints
  SqlBulkCopyOptions TableLock
  SqlBulkCopyOptions KeepNulls
  SqlBulkCopyOptions FireTriggers
  SqlBulkCopyOptions UseInternalTransaction
  SqlBulkCopyOptions AllowEncryptedValueModifications
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCachedBuffer
Наследуется от: object
Поля:
  SqlCachedBuffer Null
  int _maxChunkSize
  List`1<Byte[]> _cachedBytes
Свойства:
  List`1<Byte[]> CachedBytes
  bool IsNull
Методы:
  void .ctor()
  void .ctor(List`1<Byte[]> cachedBytes)
  List`1<Byte[]> get_CachedBytes()
  bool TryCreate(SqlMetaDataPriv metadata, TdsParser parser, TdsParserStateObject stateObj, SqlCachedBuffer& buffer)
  void AddByteOrderMark(Byte[] byteArr, List`1<Byte[]> cachedBytes)
  Stream ToStream()
  string ToString()
  SqlString ToSqlString()
  SqlXml ToSqlXml()
  XmlReader ToXmlReader()
  bool get_IsNull()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlClientDiagnosticListenerExtensions
Наследуется от: object
Поля:
  string DiagnosticListenerName
  string SqlClientPrefix
  string SqlBeforeExecuteCommand
  string SqlAfterExecuteCommand
  string SqlErrorExecuteCommand
  string SqlBeforeOpenConnection
  string SqlAfterOpenConnection
  string SqlErrorOpenConnection
  string SqlBeforeCloseConnection
  string SqlAfterCloseConnection
  string SqlErrorCloseConnection
  string SqlBeforeCommitTransaction
  string SqlAfterCommitTransaction
  string SqlErrorCommitTransaction
  string SqlBeforeRollbackTransaction
  string SqlAfterRollbackTransaction
  string SqlErrorRollbackTransaction
Свойства:
Методы:
  Guid WriteCommandBefore(DiagnosticListener this, SqlCommand sqlCommand, string operation)
  void WriteCommandAfter(DiagnosticListener this, Guid operationId, SqlCommand sqlCommand, string operation)
  void WriteCommandError(DiagnosticListener this, Guid operationId, SqlCommand sqlCommand, Exception ex, string operation)
  Guid WriteConnectionOpenBefore(DiagnosticListener this, SqlConnection sqlConnection, string operation)
  void WriteConnectionOpenAfter(DiagnosticListener this, Guid operationId, SqlConnection sqlConnection, string operation)
  void WriteConnectionOpenError(DiagnosticListener this, Guid operationId, SqlConnection sqlConnection, Exception ex, string operation)
  Guid WriteConnectionCloseBefore(DiagnosticListener this, SqlConnection sqlConnection, string operation)
  void WriteConnectionCloseAfter(DiagnosticListener this, Guid operationId, Guid clientConnectionId, SqlConnection sqlConnection, string operation)
  void WriteConnectionCloseError(DiagnosticListener this, Guid operationId, Guid clientConnectionId, SqlConnection sqlConnection, Exception ex, string operation)
  Guid WriteTransactionCommitBefore(DiagnosticListener this, IsolationLevel isolationLevel, SqlConnection connection, string operation)
  void WriteTransactionCommitAfter(DiagnosticListener this, Guid operationId, IsolationLevel isolationLevel, SqlConnection connection, string operation)
  void WriteTransactionCommitError(DiagnosticListener this, Guid operationId, IsolationLevel isolationLevel, SqlConnection connection, Exception ex, string operation)
  Guid WriteTransactionRollbackBefore(DiagnosticListener this, IsolationLevel isolationLevel, SqlConnection connection, string transactionName, string operation)
  void WriteTransactionRollbackAfter(DiagnosticListener this, Guid operationId, IsolationLevel isolationLevel, SqlConnection connection, string transactionName, string operation)
  void WriteTransactionRollbackError(DiagnosticListener this, Guid operationId, IsolationLevel isolationLevel, SqlConnection connection, string transactionName, Exception ex, string operation)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlClientFactory
Наследуется от: DbProviderFactory
Поля:
  SqlClientFactory Instance
Свойства:
  bool CanCreateDataSourceEnumerator
Методы:
  void .ctor()
  DbCommand CreateCommand()
  DbCommandBuilder CreateCommandBuilder()
  DbConnection CreateConnection()
  DbConnectionStringBuilder CreateConnectionStringBuilder()
  DbDataAdapter CreateDataAdapter()
  DbParameter CreateParameter()
  bool get_CanCreateDataSourceEnumerator()
  DbDataSourceEnumerator CreateDataSourceEnumerator()
  CodeAccessPermission CreatePermission(PermissionState state)
  void .cctor()
  object System.IServiceProvider.GetService(Type serviceType)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlClientMetaDataCollectionNames
Наследуется от: object
Поля:
  string Columns
  string Databases
  string ForeignKeys
  string IndexColumns
  string Indexes
  string Parameters
  string ProcedureColumns
  string Procedures
  string Tables
  string UserDefinedTypes
  string Users
  string ViewColumns
  string Views
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCommand
Наследуется от: DbCommand
Поля:
  string _commandText
  CommandType _commandType
  int _commandTimeout
  UpdateRowSource _updatedRowSource
  bool _designTimeInvisible
  SqlDependency _sqlDep
  DiagnosticListener _diagnosticListener
  bool _parentOperationStarted
  bool _inPrepare
  int _prepareHandle
  bool _hiddenPrepare
  int _preparedConnectionCloseCount
  int _preparedConnectionReconnectCount
  SqlParameterCollection _parameters
  SqlConnection _activeConnection
  bool _dirty
  EXECTYPE _execType
  _SqlRPC[] _rpcArrayOf1
  _SqlMetaDataSet _cachedMetaData
  TaskCompletionSource`1<object> _reconnectionCompletionSource
  CachedAsyncState _cachedAsyncState
  int _rowsAffected
  SqlNotificationRequest _notification
  SqlTransaction _transaction
  StatementCompletedEventHandler _statementCompletedEventHandler
  TdsParserStateObject _stateObj
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _pendingCancel
  bool _batchRPCMode
  List`1<_SqlRPC> _RPCList
  _SqlRPC[] _SqlRPCBatchArray
  List`1<SqlParameterCollection> _parameterCollectionList
  int _currentlyExecutingBatch
  String[] PreKatmaiProcParamsNames
  String[] KatmaiProcParamsNames
Свойства:
  bool InPrepare
  CachedAsyncState cachedAsyncState
  SqlConnection Connection
  DbConnection DbConnection
  SqlInternalConnectionTds InternalTdsConnection
  SqlNotificationRequest Notification
  SqlStatistics Statistics
  SqlTransaction Transaction
  DbTransaction DbTransaction
  string CommandText
  int CommandTimeout
  CommandType CommandType
  bool DesignTimeVisible
  SqlParameterCollection Parameters
  DbParameterCollection DbParameterCollection
  UpdateRowSource UpdatedRowSource
  _SqlMetaDataSet MetaData
  TdsParserStateObject StateObject
  bool IsPrepared
  bool IsUserPrepared
  bool IsDirty
  int InternalRecordsAffected
  bool BatchRPCMode
  bool NotificationAutoEnlist
  SqlCommandColumnEncryptionSetting ColumnEncryptionSetting
Методы:
  bool get_InPrepare()
  CachedAsyncState get_cachedAsyncState()
  void .ctor()
  void .ctor(string cmdText)
  void .ctor(string cmdText, SqlConnection connection)
  void .ctor(string cmdText, SqlConnection connection, SqlTransaction transaction)
  void .ctor(SqlCommand from)
  SqlConnection get_Connection()
  void set_Connection(SqlConnection value)
  DbConnection get_DbConnection()
  void set_DbConnection(DbConnection value)
  SqlInternalConnectionTds get_InternalTdsConnection()
  SqlNotificationRequest get_Notification()
  void set_Notification(SqlNotificationRequest value)
  SqlStatistics get_Statistics()
  SqlTransaction get_Transaction()
  void set_Transaction(SqlTransaction value)
  DbTransaction get_DbTransaction()
  void set_DbTransaction(DbTransaction value)
  string get_CommandText()
  void set_CommandText(string value)
  int get_CommandTimeout()
  void set_CommandTimeout(int value)
  void ResetCommandTimeout()
  CommandType get_CommandType()
  void set_CommandType(CommandType value)
  bool get_DesignTimeVisible()
  void set_DesignTimeVisible(bool value)
  SqlParameterCollection get_Parameters()
  DbParameterCollection get_DbParameterCollection()
  UpdateRowSource get_UpdatedRowSource()
  void set_UpdatedRowSource(UpdateRowSource value)
  void add_StatementCompleted(StatementCompletedEventHandler value)
  void remove_StatementCompleted(StatementCompletedEventHandler value)
  void OnStatementCompleted(int recordCount)
  void PropertyChanging()
  void Prepare()
  void InternalPrepare()
  void Unprepare()
  void Cancel()
  SqlParameter CreateParameter()
  DbParameter CreateDbParameter()
  void Dispose(bool disposing)
  object ExecuteScalar()
  object CompleteExecuteScalar(SqlDataReader ds, bool returnSqlValue)
  int ExecuteNonQuery()
  IAsyncResult BeginExecuteNonQuery(AsyncCallback callback, object stateObject)
  void BeginExecuteNonQueryInternalReadStage(TaskCompletionSource`1<object> completion)
  void VerifyEndExecuteState(Task completionTask, string endMethod)
  void WaitForAsyncResults(IAsyncResult asyncResult)
  void ThrowIfReconnectionHasBeenCanceled()
  int EndExecuteNonQuery(IAsyncResult asyncResult)
  int EndExecuteNonQueryInternal(IAsyncResult asyncResult)
  Task InternalExecuteNonQuery(TaskCompletionSource`1<object> completion, bool sendToPipe, int timeout, bool asyncWrite, string methodName)
  XmlReader ExecuteXmlReader()
  IAsyncResult BeginExecuteXmlReader(AsyncCallback callback, object stateObject)
  void BeginExecuteXmlReaderInternalReadStage(TaskCompletionSource`1<object> completion)
  XmlReader EndExecuteXmlReader(IAsyncResult asyncResult)
  XmlReader EndExecuteXmlReaderInternal(IAsyncResult asyncResult)
  XmlReader CompleteXmlReader(SqlDataReader ds, bool async)
  DbDataReader ExecuteDbDataReader(CommandBehavior behavior)
  SqlDataReader ExecuteReader()
  SqlDataReader ExecuteReader(CommandBehavior behavior)
  SqlDataReader EndExecuteReader(IAsyncResult asyncResult)
  SqlDataReader EndExecuteReaderInternal(IAsyncResult asyncResult)
  IAsyncResult BeginExecuteReader(CommandBehavior behavior, AsyncCallback callback, object stateObject)
  void BeginExecuteReaderInternalReadStage(TaskCompletionSource`1<object> completion)
  SqlDataReader InternalEndExecuteReader(IAsyncResult asyncResult, string endMethod)
  Task`1<int> ExecuteNonQueryAsync(CancellationToken cancellationToken)
  Task`1<DbDataReader> ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
  Task`1<SqlDataReader> ExecuteReaderAsync()
  Task`1<SqlDataReader> ExecuteReaderAsync(CommandBehavior behavior)
  Task`1<SqlDataReader> ExecuteReaderAsync(CancellationToken cancellationToken)
  Task`1<SqlDataReader> ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
  Task`1<object> ExecuteScalarAsync(CancellationToken cancellationToken)
  Task`1<XmlReader> ExecuteXmlReaderAsync()
  Task`1<XmlReader> ExecuteXmlReaderAsync(CancellationToken cancellationToken)
  string UnquoteProcedurePart(string part)
  string UnquoteProcedureName(string name, Object& groupNumber)
  void DeriveParameters()
  ParameterDirection ParameterDirectionFromOleDbDirection(short oledbDirection)
  _SqlMetaDataSet get_MetaData()
  void CheckNotificationStateAndAutoEnlist()
  Task RunExecuteNonQueryTds(string methodName, bool async, int timeout, bool asyncWrite)
  SqlDataReader RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, bool returnStream, string method)
  SqlDataReader RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, bool returnStream, TaskCompletionSource`1<object> completion, int timeout, Task& task, bool asyncWrite, string method)
  SqlDataReader RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, bool returnStream, bool async, int timeout, Task& task, bool asyncWrite, SqlDataReader ds)
  SqlDataReader CompleteAsyncExecuteReader()
  void FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, string resetOptionsString)
  void RegisterForConnectionCloseNotification(Task`1& outerTask)
  void ValidateCommand(bool async, string method)
  void ValidateAsyncCommand()
  void GetStateObject(TdsParser parser)
  void ReliablePutStateObject()
  void PutStateObject()
  void OnDoneProc()
  void OnReturnStatus(int status)
  void OnReturnValue(SqlReturnValue rec)
  SqlParameterCollection GetCurrentParameterCollection()
  SqlParameter GetParameterForOutputValueExtraction(SqlParameterCollection parameters, string paramName, int paramCount)
  void GetRPCObject(int paramCount, _SqlRPC& rpc)
  void SetUpRPCParameters(_SqlRPC rpc, int startCount, bool inSchema, SqlParameterCollection parameters)
  _SqlRPC BuildPrepExec(CommandBehavior behavior)
  bool ShouldSendParameter(SqlParameter p)
  int CountSendableParameters(SqlParameterCollection parameters)
  int GetParameterCount(SqlParameterCollection parameters)
  void BuildRPC(bool inSchema, SqlParameterCollection parameters, _SqlRPC& rpc)
  _SqlRPC BuildExecute(bool inSchema)
  void BuildExecuteSql(CommandBehavior behavior, string commandText, SqlParameterCollection parameters, _SqlRPC& rpc)
  string BuildParamList(TdsParser parser, SqlParameterCollection parameters)
  string ParseAndQuoteIdentifier(string identifier)
  string GetSetOptionsString(CommandBehavior behavior)
  string GetResetOptionsString(CommandBehavior behavior)
  string GetCommandText(CommandBehavior behavior)
  void CheckThrowSNIException()
  void OnConnectionClosed()
  TdsParserStateObject get_StateObject()
  bool get_IsPrepared()
  bool get_IsUserPrepared()
  bool get_IsDirty()
  void set_IsDirty(bool value)
  int get_InternalRecordsAffected()
  void set_InternalRecordsAffected(int value)
  void ClearBatchCommand()
  bool get_BatchRPCMode()
  void set_BatchRPCMode(bool value)
  void AddBatchCommand(string commandText, SqlParameterCollection parameters, CommandType cmdType)
  int ExecuteBatchRPCCommand()
  Nullable`1<int> GetRecordsAffected(int commandIndex)
  SqlException GetErrors(int commandIndex)
  void CancelIgnoreFailure()
  void NotifyDependency()
  object System.ICloneable.Clone()
  SqlCommand Clone()
  bool get_NotificationAutoEnlist()
  void set_NotificationAutoEnlist(bool value)
  IAsyncResult BeginExecuteNonQuery()
  IAsyncResult BeginExecuteXmlReader()
  IAsyncResult BeginExecuteReader()
  IAsyncResult BeginExecuteReader(AsyncCallback callback, object stateObject)
  IAsyncResult BeginExecuteReader(AsyncCallback callback, object stateObject, CommandBehavior behavior)
  IAsyncResult BeginExecuteReader(CommandBehavior behavior)
  void .cctor()
  void .ctor(string cmdText, SqlConnection connection, SqlTransaction transaction, SqlCommandColumnEncryptionSetting columnEncryptionSetting)
  SqlCommandColumnEncryptionSetting get_ColumnEncryptionSetting()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCommandBuilder
Наследуется от: DbCommandBuilder
Поля:
Свойства:
  CatalogLocation CatalogLocation
  string CatalogSeparator
  SqlDataAdapter DataAdapter
  string QuotePrefix
  string QuoteSuffix
  string SchemaSeparator
Методы:
  void .ctor()
  void .ctor(SqlDataAdapter adapter)
  CatalogLocation get_CatalogLocation()
  void set_CatalogLocation(CatalogLocation value)
  string get_CatalogSeparator()
  void set_CatalogSeparator(string value)
  SqlDataAdapter get_DataAdapter()
  void set_DataAdapter(SqlDataAdapter value)
  string get_QuotePrefix()
  void set_QuotePrefix(string value)
  string get_QuoteSuffix()
  void set_QuoteSuffix(string value)
  string get_SchemaSeparator()
  void set_SchemaSeparator(string value)
  void SqlRowUpdatingHandler(object sender, SqlRowUpdatingEventArgs ruevent)
  SqlCommand GetInsertCommand()
  SqlCommand GetInsertCommand(bool useColumnsForParameterNames)
  SqlCommand GetUpdateCommand()
  SqlCommand GetUpdateCommand(bool useColumnsForParameterNames)
  SqlCommand GetDeleteCommand()
  SqlCommand GetDeleteCommand(bool useColumnsForParameterNames)
  void ApplyParameterInfo(DbParameter parameter, DataRow datarow, StatementType statementType, bool whereClause)
  string GetParameterName(int parameterOrdinal)
  string GetParameterName(string parameterName)
  string GetParameterPlaceholder(int parameterOrdinal)
  void ConsistentQuoteDelimiters(string quotePrefix, string quoteSuffix)
  void DeriveParameters(SqlCommand command)
  DataTable GetSchemaTable(DbCommand srcCommand)
  DbCommand InitializeCommand(DbCommand command)
  string QuoteIdentifier(string unquotedIdentifier)
  void SetRowUpdatingHandler(DbDataAdapter adapter)
  string UnquoteIdentifier(string quotedIdentifier)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCommandSet
Наследуется от: object
Поля:
  string SqlIdentifierPattern
  Regex s_sqlIdentifierParser
  List`1<LocalCommand> _commandList
  SqlCommand _batchCommand
Свойства:
  SqlCommand BatchCommand
  int CommandCount
  List`1<LocalCommand> CommandList
  int CommandTimeout
  SqlConnection Connection
  SqlTransaction Transaction
Методы:
  void .ctor()
  SqlCommand get_BatchCommand()
  int get_CommandCount()
  List`1<LocalCommand> get_CommandList()
  void set_CommandTimeout(int value)
  SqlConnection get_Connection()
  void set_Connection(SqlConnection value)
  void set_Transaction(SqlTransaction value)
  void Append(SqlCommand command)
  void BuildStoredProcedureName(StringBuilder builder, string part)
  void Clear()
  void Dispose()
  int ExecuteNonQuery()
  SqlParameter GetParameter(int commandIndex, int parameterIndex)
  bool GetBatchedAffected(int commandIdentifier, Int32& recordsAffected, Exception& error)
  int GetParameterCount(int commandIndex)
  void ValidateCommandBehavior(string method, CommandBehavior behavior)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnection
Наследуется от: DbConnection
Поля:
  bool _AsyncCommandInProgress
  SqlStatistics _statistics
  bool _collectstats
  bool _fireInfoMessageEventOnUserErrors
  Tuple`2<TaskCompletionSource`1<DbConnectionInternal>, Task> _currentCompletion
  string _connectionString
  int _connectRetryCount
  object _reconnectLock
  Task _currentReconnectionTask
  Task _asyncWaitingForReconnection
  Guid _originalConnectionId
  CancellationTokenSource _reconnectionCancellationSource
  SessionData _recoverySessionData
  bool _suppressStateChangeForReconnection
  int _reconnectCount
  DiagnosticListener s_diagnosticListener
  bool _applyTransientFaultHandling
  SqlInfoMessageEventHandler InfoMessage
  bool <ForceNewConnection>k__BackingField
  DbConnectionFactory s_connectionFactory
  DbConnectionOptions _userConnectionOptions
  DbConnectionPoolGroup _poolGroup
  DbConnectionInternal _innerConnection
  int _closeCount
Свойства:
  bool StatisticsEnabled
  bool AsyncCommandInProgress
  TransactionBindingEnum TransactionBinding
  TypeSystem TypeSystem
  int ConnectRetryInterval
  string ConnectionString
  int ConnectionTimeout
  string Database
  string DataSource
  int PacketSize
  Guid ClientConnectionId
  string ServerVersion
  ConnectionState State
  SqlStatistics Statistics
  string WorkstationId
  DbProviderFactory DbProviderFactory
  bool FireInfoMessageEventOnUserErrors
  int ReconnectCount
  bool ForceNewConnection
  bool HasLocalTransaction
  bool HasLocalTransactionFromAPI
  bool IsKatmaiOrNewer
  TdsParser Parser
  int CloseCount
  DbConnectionFactory ConnectionFactory
  DbConnectionOptions ConnectionOptions
  DbConnectionInternal InnerConnection
  DbConnectionPoolGroup PoolGroup
  DbConnectionOptions UserConnectionOptions
  SqlCredential Credentials
  string AccessToken
  TimeSpan ColumnEncryptionKeyCacheTtl
  bool ColumnEncryptionQueryMetadataCacheEnabled
  IDictionary`2<string, IList`1<string>> ColumnEncryptionTrustedMasterKeyPaths
  SqlCredential Credential
Методы:
  void .ctor(string connectionString)
  void .ctor(SqlConnection connection)
  void CacheConnectionStringProperties()
  bool get_StatisticsEnabled()
  void set_StatisticsEnabled(bool value)
  bool get_AsyncCommandInProgress()
  void set_AsyncCommandInProgress(bool value)
  TransactionBindingEnum get_TransactionBinding()
  TypeSystem get_TypeSystem()
  int get_ConnectRetryInterval()
  string get_ConnectionString()
  void set_ConnectionString(string value)
  int get_ConnectionTimeout()
  string get_Database()
  string get_DataSource()
  int get_PacketSize()
  Guid get_ClientConnectionId()
  string get_ServerVersion()
  ConnectionState get_State()
  SqlStatistics get_Statistics()
  string get_WorkstationId()
  DbProviderFactory get_DbProviderFactory()
  void add_InfoMessage(SqlInfoMessageEventHandler value)
  void remove_InfoMessage(SqlInfoMessageEventHandler value)
  bool get_FireInfoMessageEventOnUserErrors()
  void set_FireInfoMessageEventOnUserErrors(bool value)
  int get_ReconnectCount()
  bool get_ForceNewConnection()
  void set_ForceNewConnection(bool value)
  void OnStateChange(StateChangeEventArgs stateChange)
  SqlTransaction BeginTransaction()
  SqlTransaction BeginTransaction(IsolationLevel iso)
  SqlTransaction BeginTransaction(string transactionName)
  DbTransaction BeginDbTransaction(IsolationLevel isolationLevel)
  SqlTransaction BeginTransaction(IsolationLevel iso, string transactionName)
  void ChangeDatabase(string database)
  void ClearAllPools()
  void ClearPool(SqlConnection connection)
  void CloseInnerConnection()
  void Close()
  SqlCommand CreateCommand()
  void DisposeMe(bool disposing)
  void Open()
  void RegisterWaitingForReconnect(Task waitingTask)
  Task ReconnectAsync(int timeout)
  Task ValidateAndReconnect(Action beforeDisconnect, int timeout)
  void WaitForPendingReconnection()
  void CancelOpenAndWait()
  Task OpenAsync(CancellationToken cancellationToken)
  DataTable GetSchema()
  DataTable GetSchema(string collectionName)
  DataTable GetSchema(string collectionName, String[] restrictionValues)
  void PrepareStatisticsForNewConnection()
  bool TryOpen(TaskCompletionSource`1<DbConnectionInternal> retry)
  bool get_HasLocalTransaction()
  bool get_HasLocalTransactionFromAPI()
  bool get_IsKatmaiOrNewer()
  TdsParser get_Parser()
  void ValidateConnectionForExecute(string method, SqlCommand command)
  string FixupDatabaseTransactionName(string name)
  void OnError(SqlException exception, bool breakConnection, Action`1<Action> wrapCloseInAction)
  SqlInternalConnectionTds GetOpenTdsConnection()
  SqlInternalConnectionTds GetOpenTdsConnection(string method)
  void OnInfoMessage(SqlInfoMessageEventArgs imevent)
  void OnInfoMessage(SqlInfoMessageEventArgs imevent, Boolean& notified)
  void RegisterForConnectionCloseNotification(Task`1& outerTask, object value, int tag)
  void ResetStatistics()
  IDictionary RetrieveStatistics()
  void UpdateStatistics()
  object System.ICloneable.Clone()
  void CopyFrom(SqlConnection connection)
  void .ctor()
  int get_CloseCount()
  DbConnectionFactory get_ConnectionFactory()
  DbConnectionOptions get_ConnectionOptions()
  string ConnectionString_Get()
  void ConnectionString_Set(DbConnectionPoolKey key)
  DbConnectionInternal get_InnerConnection()
  DbConnectionPoolGroup get_PoolGroup()
  void set_PoolGroup(DbConnectionPoolGroup value)
  DbConnectionOptions get_UserConnectionOptions()
  void Abort(Exception e)
  void AddWeakReference(object value, int tag)
  DbCommand CreateDbCommand()
  void Dispose(bool disposing)
  void RepairInnerConnection()
  void EnlistTransaction(Transaction transaction)
  void NotifyWeakReference(int message)
  void PermissionDemand()
  void RemoveWeakReference(object value)
  void SetInnerConnectionEvent(DbConnectionInternal to)
  bool SetInnerConnectionFrom(DbConnectionInternal to, DbConnectionInternal from)
  void SetInnerConnectionTo(DbConnectionInternal to)
  void .ctor(string connectionString, SqlCredential credential)
  void ChangePassword(string connectionString, string newPassword)
  SqlCredential get_Credentials()
  void set_Credentials(SqlCredential value)
  void EnlistDistributedTransaction(ITransaction transaction)
  void .cctor()
  string get_AccessToken()
  void set_AccessToken(string value)
  TimeSpan get_ColumnEncryptionKeyCacheTtl()
  void set_ColumnEncryptionKeyCacheTtl(TimeSpan value)
  bool get_ColumnEncryptionQueryMetadataCacheEnabled()
  void set_ColumnEncryptionQueryMetadataCacheEnabled(bool value)
  IDictionary`2<string, IList`1<string>> get_ColumnEncryptionTrustedMasterKeyPaths()
  SqlCredential get_Credential()
  void set_Credential(SqlCredential value)
  void ChangePassword(string connectionString, SqlCredential credential, SecureString newSecurePassword)
  void RegisterColumnEncryptionKeyStoreProviders(IDictionary`2<string, SqlColumnEncryptionKeyStoreProvider> customProviders)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionFactory
Наследуется от: DbConnectionFactory
Поля:
  string _metaDataXml
  SqlConnectionFactory SingletonInstance
Свойства:
  DbProviderFactory ProviderFactory
Методы:
  void .ctor()
  DbProviderFactory get_ProviderFactory()
  DbConnectionInternal CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection)
  DbConnectionInternal CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
  DbConnectionOptions CreateConnectionOptions(string connectionString, DbConnectionOptions previous)
  DbConnectionPoolProviderInfo CreateConnectionPoolProviderInfo(DbConnectionOptions connectionOptions)
  DbConnectionPoolGroupOptions CreateConnectionPoolGroupOptions(DbConnectionOptions connectionOptions)
  DbConnectionPoolGroupProviderInfo CreateConnectionPoolGroupProviderInfo(DbConnectionOptions connectionOptions)
  SqlConnectionString FindSqlConnectionOptions(SqlConnectionPoolKey key)
  DbConnectionPoolGroup GetConnectionPoolGroup(DbConnection connection)
  DbConnectionInternal GetInnerConnection(DbConnection connection)
  void PermissionDemand(DbConnection outerConnection)
  void SetConnectionPoolGroup(DbConnection outerConnection, DbConnectionPoolGroup poolGroup)
  void SetInnerConnectionEvent(DbConnection owningObject, DbConnectionInternal to)
  bool SetInnerConnectionFrom(DbConnection owningObject, DbConnectionInternal to, DbConnectionInternal from)
  void SetInnerConnectionTo(DbConnection owningObject, DbConnectionInternal to)
  DbMetaDataFactory CreateMetaDataFactory(DbConnectionInternal internalConnection, Boolean& cacheMetaDataFactory)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionPoolGroupProviderInfo
Наследуется от: DbConnectionPoolGroupProviderInfo
Поля:
  string _alias
  string _failoverPartner
  bool _useFailoverPartner
Свойства:
  string FailoverPartner
  bool UseFailoverPartner
Методы:
  void .ctor(SqlConnectionString connectionOptions)
  string get_FailoverPartner()
  bool get_UseFailoverPartner()
  void AliasCheck(string server)
  void FailoverCheck(SqlInternalConnection connection, bool actualUseFailoverPartner, SqlConnectionString userConnectionOptions, string actualFailoverPartner)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionPoolKey
Наследуется от: DbConnectionPoolKey
Поля:
  int _hashValue
Свойства:
  string ConnectionString
Методы:
  void .ctor(string connectionString)
  void .ctor(SqlConnectionPoolKey key)
  object Clone()
  string get_ConnectionString()
  void set_ConnectionString(string value)
  bool Equals(object obj)
  int GetHashCode()
  void CalculateHashCode()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionPoolProviderInfo
Наследуется от: DbConnectionPoolProviderInfo
Поля:
  string _instanceName
Свойства:
  string InstanceName
Методы:
  string get_InstanceName()
  void set_InstanceName(string value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionString
Наследуется от: DbConnectionOptions
Поля:
  int SynonymCount
  int DeprecatedSynonymCount
  Dictionary`2<string, string> s_sqlClientSynonyms
  bool _integratedSecurity
  bool _encrypt
  bool _trustServerCertificate
  bool _enlist
  bool _mars
  bool _persistSecurityInfo
  bool _pooling
  bool _replication
  bool _userInstance
  bool _multiSubnetFailover
  int _connectTimeout
  int _loadBalanceTimeout
  int _maxPoolSize
  int _minPoolSize
  int _packetSize
  int _connectRetryCount
  int _connectRetryInterval
  ApplicationIntent _applicationIntent
  string _applicationName
  string _attachDBFileName
  string _currentLanguage
  string _dataSource
  string _localDBInstance
  string _failoverPartner
  string _initialCatalog
  string _password
  string _userID
  string _workstationId
  TypeSystem _typeSystemVersion
  TransactionBindingEnum _transactionBinding
Свойства:
  bool IntegratedSecurity
  bool Asynchronous
  bool ConnectionReset
  bool Encrypt
  bool TrustServerCertificate
  bool Enlist
  bool MARS
  bool MultiSubnetFailover
  bool PersistSecurityInfo
  bool Pooling
  bool Replication
  bool UserInstance
  int ConnectTimeout
  int LoadBalanceTimeout
  int MaxPoolSize
  int MinPoolSize
  int PacketSize
  int ConnectRetryCount
  int ConnectRetryInterval
  ApplicationIntent ApplicationIntent
  string ApplicationName
  string AttachDBFilename
  string CurrentLanguage
  string DataSource
  string LocalDBInstance
  string FailoverPartner
  string InitialCatalog
  string Password
  string UserID
  string WorkstationId
  TypeSystem TypeSystemVersion
  TransactionBindingEnum TransactionBinding
Методы:
  void .ctor(string connectionString)
  void .ctor(SqlConnectionString connectionOptions, string dataSource, bool userInstance, Nullable`1<bool> setEnlistValue)
  bool get_IntegratedSecurity()
  bool get_Asynchronous()
  bool get_ConnectionReset()
  bool get_Encrypt()
  bool get_TrustServerCertificate()
  bool get_Enlist()
  bool get_MARS()
  bool get_MultiSubnetFailover()
  bool get_PersistSecurityInfo()
  bool get_Pooling()
  bool get_Replication()
  bool get_UserInstance()
  int get_ConnectTimeout()
  int get_LoadBalanceTimeout()
  int get_MaxPoolSize()
  int get_MinPoolSize()
  int get_PacketSize()
  int get_ConnectRetryCount()
  int get_ConnectRetryInterval()
  ApplicationIntent get_ApplicationIntent()
  string get_ApplicationName()
  string get_AttachDBFilename()
  string get_CurrentLanguage()
  string get_DataSource()
  string get_LocalDBInstance()
  string get_FailoverPartner()
  string get_InitialCatalog()
  string get_Password()
  string get_UserID()
  string get_WorkstationId()
  TypeSystem get_TypeSystemVersion()
  TransactionBindingEnum get_TransactionBinding()
  Dictionary`2<string, string> GetParseSynonyms()
  string ObtainWorkstationId()
  void ValidateValueLength(string value, int limit, string key)
  ApplicationIntent ConvertValueToApplicationIntent()
  void ThrowUnsupportedIfKeywordSet(string keyword)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionStringBuilder
Наследуется от: DbConnectionStringBuilder
Поля:
  int KeywordsCount
  int DeprecatedKeywordsCount
  String[] s_validKeywords
  Dictionary`2<string, Keywords> s_keywords
  ApplicationIntent _applicationIntent
  string _applicationName
  string _attachDBFilename
  string _currentLanguage
  string _dataSource
  string _failoverPartner
  string _initialCatalog
  string _password
  string _transactionBinding
  string _typeSystemVersion
  string _userID
  string _workstationID
  int _connectTimeout
  int _loadBalanceTimeout
  int _maxPoolSize
  int _minPoolSize
  int _packetSize
  int _connectRetryCount
  int _connectRetryInterval
  bool _encrypt
  bool _trustServerCertificate
  bool _enlist
  bool _integratedSecurity
  bool _multipleActiveResultSets
  bool _multiSubnetFailover
  bool _persistSecurityInfo
  bool _pooling
  bool _replication
  bool _userInstance
  String[] s_notSupportedKeywords
  String[] s_notSupportedNetworkLibraryKeywords
  bool <AsynchronousProcessing>k__BackingField
  bool <ConnectionReset>k__BackingField
Свойства:
  object Item
  ApplicationIntent ApplicationIntent
  string ApplicationName
  string AttachDBFilename
  int ConnectTimeout
  string CurrentLanguage
  string DataSource
  bool Encrypt
  bool TrustServerCertificate
  bool Enlist
  string FailoverPartner
  string InitialCatalog
  bool IntegratedSecurity
  int LoadBalanceTimeout
  int MaxPoolSize
  int ConnectRetryCount
  int ConnectRetryInterval
  int MinPoolSize
  bool MultipleActiveResultSets
  bool MultiSubnetFailover
  int PacketSize
  string Password
  bool PersistSecurityInfo
  bool Pooling
  bool Replication
  string TransactionBinding
  string TypeSystemVersion
  string UserID
  bool UserInstance
  string WorkstationID
  ICollection Keys
  ICollection Values
  bool AsynchronousProcessing
  bool ConnectionReset
  bool ContextConnection
  string NetworkLibrary
  PoolBlockingPeriod PoolBlockingPeriod
  bool TransparentNetworkIPResolution
  SqlConnectionColumnEncryptionSetting ColumnEncryptionSetting
  SqlAuthenticationMethod Authentication
Методы:
  String[] CreateValidKeywords()
  Dictionary`2<string, Keywords> CreateKeywordsDictionary()
  void .ctor()
  void .ctor(string connectionString)
  object get_Item(string keyword)
  void set_Item(string keyword, object value)
  ApplicationIntent get_ApplicationIntent()
  void set_ApplicationIntent(ApplicationIntent value)
  string get_ApplicationName()
  void set_ApplicationName(string value)
  string get_AttachDBFilename()
  void set_AttachDBFilename(string value)
  int get_ConnectTimeout()
  void set_ConnectTimeout(int value)
  string get_CurrentLanguage()
  void set_CurrentLanguage(string value)
  string get_DataSource()
  void set_DataSource(string value)
  bool get_Encrypt()
  void set_Encrypt(bool value)
  bool get_TrustServerCertificate()
  void set_TrustServerCertificate(bool value)
  bool get_Enlist()
  void set_Enlist(bool value)
  string get_FailoverPartner()
  void set_FailoverPartner(string value)
  string get_InitialCatalog()
  void set_InitialCatalog(string value)
  bool get_IntegratedSecurity()
  void set_IntegratedSecurity(bool value)
  int get_LoadBalanceTimeout()
  void set_LoadBalanceTimeout(int value)
  int get_MaxPoolSize()
  void set_MaxPoolSize(int value)
  int get_ConnectRetryCount()
  void set_ConnectRetryCount(int value)
  int get_ConnectRetryInterval()
  void set_ConnectRetryInterval(int value)
  int get_MinPoolSize()
  void set_MinPoolSize(int value)
  bool get_MultipleActiveResultSets()
  void set_MultipleActiveResultSets(bool value)
  bool get_MultiSubnetFailover()
  void set_MultiSubnetFailover(bool value)
  int get_PacketSize()
  void set_PacketSize(int value)
  string get_Password()
  void set_Password(string value)
  bool get_PersistSecurityInfo()
  void set_PersistSecurityInfo(bool value)
  bool get_Pooling()
  void set_Pooling(bool value)
  bool get_Replication()
  void set_Replication(bool value)
  string get_TransactionBinding()
  void set_TransactionBinding(string value)
  string get_TypeSystemVersion()
  void set_TypeSystemVersion(string value)
  string get_UserID()
  void set_UserID(string value)
  bool get_UserInstance()
  void set_UserInstance(bool value)
  string get_WorkstationID()
  void set_WorkstationID(string value)
  ICollection get_Keys()
  ICollection get_Values()
  void Clear()
  bool ContainsKey(string keyword)
  bool ConvertToBoolean(object value)
  int ConvertToInt32(object value)
  bool ConvertToIntegratedSecurity(object value)
  string ConvertToString(object value)
  ApplicationIntent ConvertToApplicationIntent(string keyword, object value)
  object GetAt(Keywords index)
  Keywords GetIndex(string keyword)
  bool Remove(string keyword)
  void Reset(Keywords index)
  void SetValue(string keyword, bool value)
  void SetValue(string keyword, int value)
  void SetValue(string keyword, string value)
  void SetApplicationIntentValue(ApplicationIntent value)
  bool ShouldSerialize(string keyword)
  bool TryGetValue(string keyword, Object& value)
  Exception UnsupportedKeyword(string keyword)
  bool get_AsynchronousProcessing()
  void set_AsynchronousProcessing(bool value)
  bool get_ConnectionReset()
  void set_ConnectionReset(bool value)
  bool get_ContextConnection()
  void set_ContextConnection(bool value)
  string get_NetworkLibrary()
  void set_NetworkLibrary(string value)
  PoolBlockingPeriod get_PoolBlockingPeriod()
  void set_PoolBlockingPeriod(PoolBlockingPeriod value)
  bool get_TransparentNetworkIPResolution()
  void set_TransparentNetworkIPResolution(bool value)
  SqlConnectionColumnEncryptionSetting get_ColumnEncryptionSetting()
  void set_ColumnEncryptionSetting(SqlConnectionColumnEncryptionSetting value)
  void .cctor()
  SqlAuthenticationMethod get_Authentication()
  void set_Authentication(SqlAuthenticationMethod value)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionTimeoutErrorPhase
Наследуется от: Enum
Поля:
  int value__
  SqlConnectionTimeoutErrorPhase Undefined
  SqlConnectionTimeoutErrorPhase PreLoginBegin
  SqlConnectionTimeoutErrorPhase InitializeConnection
  SqlConnectionTimeoutErrorPhase SendPreLoginHandshake
  SqlConnectionTimeoutErrorPhase ConsumePreLoginHandshake
  SqlConnectionTimeoutErrorPhase LoginBegin
  SqlConnectionTimeoutErrorPhase ProcessConnectionAuth
  SqlConnectionTimeoutErrorPhase PostLogin
  SqlConnectionTimeoutErrorPhase Complete
  SqlConnectionTimeoutErrorPhase Count
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionInternalSourceType
Наследуется от: Enum
Поля:
  int value__
  SqlConnectionInternalSourceType Principle
  SqlConnectionInternalSourceType Failover
  SqlConnectionInternalSourceType RoutingDestination
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionTimeoutPhaseDuration
Наследуется от: object
Поля:
  Stopwatch _swDuration
Свойства:
Методы:
  void StartCapture()
  void StopCapture()
  long GetMilliSecondDuration()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionTimeoutErrorInternal
Наследуется от: object
Поля:
  SqlConnectionTimeoutPhaseDuration[] _phaseDurations
  SqlConnectionTimeoutPhaseDuration[] _originalPhaseDurations
  SqlConnectionTimeoutErrorPhase _currentPhase
  SqlConnectionInternalSourceType _currentSourceType
  bool _isFailoverScenario
Свойства:
  SqlConnectionTimeoutErrorPhase CurrentPhase
Методы:
  SqlConnectionTimeoutErrorPhase get_CurrentPhase()
  void .ctor()
  void SetFailoverScenario(bool useFailoverServer)
  void SetInternalSourceType(SqlConnectionInternalSourceType sourceType)
  void ResetAndRestartPhase()
  void SetAndBeginPhase(SqlConnectionTimeoutErrorPhase timeoutErrorPhase)
  void EndPhase(SqlConnectionTimeoutErrorPhase timeoutErrorPhase)
  void SetAllCompleteMarker()
  string GetErrorMessage()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlDataAdapter
Наследуется от: DbDataAdapter
Поля:
  object EventRowUpdated
  object EventRowUpdating
  SqlCommand _deleteCommand
  SqlCommand _insertCommand
  SqlCommand _selectCommand
  SqlCommand _updateCommand
  SqlCommandSet _commandSet
  int _updateBatchSize
Свойства:
  SqlCommand DeleteCommand
  IDbCommand System.Data.IDbDataAdapter.DeleteCommand
  SqlCommand InsertCommand
  IDbCommand System.Data.IDbDataAdapter.InsertCommand
  SqlCommand SelectCommand
  IDbCommand System.Data.IDbDataAdapter.SelectCommand
  SqlCommand UpdateCommand
  IDbCommand System.Data.IDbDataAdapter.UpdateCommand
  int UpdateBatchSize
Методы:
  void .ctor()
  void .ctor(SqlCommand selectCommand)
  void .ctor(string selectCommandText, string selectConnectionString)
  void .ctor(string selectCommandText, SqlConnection selectConnection)
  void .ctor(SqlDataAdapter from)
  SqlCommand get_DeleteCommand()
  void set_DeleteCommand(SqlCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_DeleteCommand()
  void System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value)
  SqlCommand get_InsertCommand()
  void set_InsertCommand(SqlCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_InsertCommand()
  void System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value)
  SqlCommand get_SelectCommand()
  void set_SelectCommand(SqlCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_SelectCommand()
  void System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value)
  SqlCommand get_UpdateCommand()
  void set_UpdateCommand(SqlCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_UpdateCommand()
  void System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value)
  int get_UpdateBatchSize()
  void set_UpdateBatchSize(int value)
  int AddToBatch(IDbCommand command)
  void ClearBatch()
  int ExecuteBatch()
  IDataParameter GetBatchedParameter(int commandIdentifier, int parameterIndex)
  bool GetBatchedRecordsAffected(int commandIdentifier, Int32& recordsAffected, Exception& error)
  void InitializeBatching()
  void TerminateBatching()
  object System.ICloneable.Clone()
  RowUpdatedEventArgs CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  RowUpdatingEventArgs CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  void add_RowUpdated(SqlRowUpdatedEventHandler value)
  void remove_RowUpdated(SqlRowUpdatedEventHandler value)
  void add_RowUpdating(SqlRowUpdatingEventHandler value)
  void remove_RowUpdating(SqlRowUpdatingEventHandler value)
  void OnRowUpdated(RowUpdatedEventArgs value)
  void OnRowUpdating(RowUpdatingEventArgs value)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlDataReader
Наследуется от: DbDataReader
Поля:
  SharedState _sharedState
  TdsParser _parser
  TdsParserStateObject _stateObj
  SqlCommand _command
  SqlConnection _connection
  int _defaultLCID
  bool _haltRead
  bool _metaDataConsumed
  bool _browseModeInfoConsumed
  bool _isClosed
  bool _isInitialized
  bool _hasRows
  ALTROWSTATUS _altRowStatus
  int _recordsAffected
  long _defaultTimeoutMilliseconds
  TypeSystem _typeSystem
  SqlStatistics _statistics
  SqlBuffer[] _data
  SqlStreamingXml _streamingXml
  _SqlMetaDataSet _metaData
  _SqlMetaDataSetCollection _altMetaDataSetCollection
  FieldNameLookup _fieldNameLookup
  CommandBehavior _commandBehavior
  int s_objectTypeCount
  ReadOnlyCollection`1<DbColumn> s_emptySchema
  int ObjectID
  MultiPartTableName[] _tableNames
  string _resetOptionsString
  int _lastColumnWithDataChunkRead
  long _columnDataBytesRead
  long _columnDataCharsRead
  Char[] _columnDataChars
  int _columnDataCharsIndex
  Task _currentTask
  Snapshot _snapshot
  CancellationTokenSource _cancelAsyncOnCloseTokenSource
  CancellationToken _cancelAsyncOnCloseToken
  Type _typeofINullable
  Type s_typeofSqlString
  SqlSequentialStream _currentStream
  SqlSequentialTextReader _currentTextReader
Свойства:
  bool BrowseModeInfoConsumed
  SqlCommand Command
  SqlConnection Connection
  int Depth
  int FieldCount
  bool HasRows
  bool IsClosed
  bool IsInitialized
  _SqlMetaDataSet MetaData
  int RecordsAffected
  string ResetOptionsString
  SqlStatistics Statistics
  MultiPartTableName[] TableNames
  int VisibleFieldCount
  object Item
  object Item
Методы:
  void .ctor(SqlCommand command, CommandBehavior behavior)
  void set_BrowseModeInfoConsumed(bool value)
  SqlCommand get_Command()
  SqlConnection get_Connection()
  int get_Depth()
  int get_FieldCount()
  bool get_HasRows()
  bool get_IsClosed()
  bool get_IsInitialized()
  void set_IsInitialized(bool value)
  long ColumnDataBytesRemaining()
  _SqlMetaDataSet get_MetaData()
  SmiExtendedMetaData[] GetInternalSmiMetaData()
  int get_RecordsAffected()
  void set_ResetOptionsString(string value)
  SqlStatistics get_Statistics()
  MultiPartTableName[] get_TableNames()
  void set_TableNames(MultiPartTableName[] value)
  int get_VisibleFieldCount()
  object get_Item(int i)
  object get_Item(string name)
  void Bind(TdsParserStateObject stateObj)
  DataTable BuildSchemaTable()
  void Cancel(SqlCommand command)
  bool TryCleanPartialRead()
  void CleanPartialReadReliable()
  void Dispose(bool disposing)
  void Close()
  bool TryCloseInternal(bool closeReader)
  void CloseReaderFromConnection()
  bool TryConsumeMetaData()
  string GetDataTypeName(int i)
  string GetDataTypeNameInternal(_SqlMetaData metaData)
  StorageType GetVariantInternalStorageType(int i)
  IEnumerator GetEnumerator()
  Type GetFieldType(int i)
  Type GetFieldTypeInternal(_SqlMetaData metaData)
  int GetLocaleId(int i)
  string GetName(int i)
  Type GetProviderSpecificFieldType(int i)
  Type GetProviderSpecificFieldTypeInternal(_SqlMetaData metaData)
  int GetOrdinal(string name)
  object GetProviderSpecificValue(int i)
  int GetProviderSpecificValues(Object[] values)
  DataTable GetSchemaTable()
  bool GetBoolean(int i)
  XmlReader GetXmlReader(int i)
  Stream GetStream(int i)
  byte GetByte(int i)
  long GetBytes(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  long GetBytesInternal(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  bool TryGetBytesInternal(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length, Int64& remaining)
  int GetBytesInternalSequential(int i, Byte[] buffer, int index, int length, Nullable`1<long> timeoutMilliseconds)
  bool TryGetBytesInternalSequential(int i, Byte[] buffer, int index, int length, Int32& bytesRead)
  TextReader GetTextReader(int i)
  char GetChar(int i)
  long GetChars(int i, long dataIndex, Char[] buffer, int bufferIndex, int length)
  long GetCharsFromPlpData(int i, long dataIndex, Char[] buffer, int bufferIndex, int length)
  long GetStreamingXmlChars(int i, long dataIndex, Char[] buffer, int bufferIndex, int length)
  DateTime GetDateTime(int i)
  decimal GetDecimal(int i)
  double GetDouble(int i)
  float GetFloat(int i)
  Guid GetGuid(int i)
  short GetInt16(int i)
  int GetInt32(int i)
  long GetInt64(int i)
  SqlBoolean GetSqlBoolean(int i)
  SqlBinary GetSqlBinary(int i)
  SqlByte GetSqlByte(int i)
  SqlBytes GetSqlBytes(int i)
  SqlChars GetSqlChars(int i)
  SqlDateTime GetSqlDateTime(int i)
  SqlDecimal GetSqlDecimal(int i)
  SqlGuid GetSqlGuid(int i)
  SqlDouble GetSqlDouble(int i)
  SqlInt16 GetSqlInt16(int i)
  SqlInt32 GetSqlInt32(int i)
  SqlInt64 GetSqlInt64(int i)
  SqlMoney GetSqlMoney(int i)
  SqlSingle GetSqlSingle(int i)
  SqlString GetSqlString(int i)
  SqlXml GetSqlXml(int i)
  object GetSqlValue(int i)
  object GetSqlValueInternal(int i)
  object GetSqlValueFromSqlBufferInternal(SqlBuffer data, _SqlMetaData metaData)
  int GetSqlValues(Object[] values)
  string GetString(int i)
  T GetFieldValue(int i)
  object GetValue(int i)
  TimeSpan GetTimeSpan(int i)
  DateTimeOffset GetDateTimeOffset(int i)
  object GetValueInternal(int i)
  object GetValueFromSqlBufferInternal(SqlBuffer data, _SqlMetaData metaData)
  T GetFieldValueInternal(int i)
  T GetFieldValueFromSqlBufferInternal(SqlBuffer data, _SqlMetaData metaData)
  int GetValues(Object[] values)
  MetaType GetVersionedMetaType(MetaType actualMetaType)
  bool TryHasMoreResults(Boolean& moreResults)
  bool TryHasMoreRows(Boolean& moreRows)
  bool IsRowToken(byte token)
  bool IsDBNull(int i)
  bool IsCommandBehavior(CommandBehavior condition)
  bool NextResult()
  bool TryNextResult(Boolean& more)
  bool Read()
  bool TryReadInternal(bool setTimeout, Boolean& more)
  void ReadColumn(int i, bool setTimeout, bool allowPartiallyReadColumn)
  bool TryReadColumn(int i, bool setTimeout, bool allowPartiallyReadColumn)
  bool TryReadColumnData()
  void ReadColumnHeader(int i)
  bool TryReadColumnHeader(int i)
  bool TryReadColumnInternal(int i, bool readHeaderOnly)
  bool WillHaveEnoughData(int targetColumn, bool headerOnly)
  bool TryResetBlobState()
  void CloseActiveSequentialStreamAndTextReader()
  void RestoreServerSettings(TdsParser parser, TdsParserStateObject stateObj)
  bool TrySetAltMetaDataSet(_SqlMetaDataSet metaDataSet, bool metaDataConsumed)
  void ClearMetaData()
  bool TrySetMetaData(_SqlMetaDataSet metaData, bool moreInfo)
  void SetTimeout(long timeoutMilliseconds)
  bool HasActiveStreamOrTextReaderOnColumn(int columnIndex)
  void CheckMetaDataIsReady()
  void CheckMetaDataIsReady(int columnIndex, bool permitAsync)
  void CheckDataIsReady()
  void CheckHeaderIsReady(int columnIndex, bool permitAsync, string methodName)
  void CheckDataIsReady(int columnIndex, bool allowPartiallyReadColumn, bool permitAsync, string methodName)
  void AssertReaderState(bool requireData, bool permitAsync, Nullable`1<int> columnIndex, bool enforceSequentialAccess)
  Task`1<bool> NextResultAsync(CancellationToken cancellationToken)
  Task`1<int> GetBytesAsync(int i, Byte[] buffer, int index, int length, int timeout, CancellationToken cancellationToken, Int32& bytesRead)
  Task`1<int> GetBytesAsyncReadDataStage(int i, Byte[] buffer, int index, int length, int timeout, bool isContinuation, CancellationToken cancellationToken, CancellationToken timeoutToken, Int32& bytesRead)
  Task`1<bool> ReadAsync(CancellationToken cancellationToken)
  Task`1<bool> IsDBNullAsync(int i, CancellationToken cancellationToken)
  Task`1<T> GetFieldValueAsync(int i, CancellationToken cancellationToken)
  Task`1<T> ContinueRetryable(Func`2<Task, Task`1<T>> moreFunc)
  Task`1<T> InvokeRetryable(Func`2<Task, Task`1<T>> moreFunc, TaskCompletionSource`1<T> source, IDisposable objectToDispose)
  void CompleteRetryable(Task`1<T> task, TaskCompletionSource`1<T> source, IDisposable objectToDispose)
  void PrepareAsyncInvocation(bool useSnapshot)
  void CleanupAfterAsyncInvocation(bool ignoreCloseToken)
  void CleanupAfterAsyncInvocationInternal(TdsParserStateObject stateObj, bool resetNetworkPacketTaskSource)
  void PrepareForAsyncContinuation()
  void SwitchToAsyncWithoutSnapshot()
  Exception UdtNotSupportedException()
  ReadOnlyCollection`1<DbColumn> GetColumnSchema()
  ReadOnlyCollection`1<DbColumn> BuildColumnSchema()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlDbColumn
Наследуется от: DbColumn
Поля:
  _SqlMetaData _metadata
Свойства:
  Nullable`1<bool> SqlIsAliased
  Nullable`1<bool> SqlIsKey
  Nullable`1<bool> SqlIsHidden
  Nullable`1<bool> SqlIsExpression
  Type SqlDataType
  string SqlDataTypeName
  Nullable`1<int> SqlNumericScale
Методы:
  void .ctor(_SqlMetaData md)
  void Populate()
  void set_SqlIsAliased(Nullable`1<bool> value)
  void set_SqlIsKey(Nullable`1<bool> value)
  void set_SqlIsHidden(Nullable`1<bool> value)
  void set_SqlIsExpression(Nullable`1<bool> value)
  void set_SqlDataType(Type value)
  void set_SqlDataTypeName(string value)
  void set_SqlNumericScale(Nullable`1<int> value)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlDelegatedTransaction
Наследуется от: object
Поля:
  int _objectTypeCount
  int _objectID
  int _globalTransactionsTokenVersionSizeInBytes
  SqlInternalConnection _connection
  IsolationLevel _isolationLevel
  SqlInternalTransaction _internalTransaction
  Transaction _atomicTransaction
  bool _active
Свойства:
  int ObjectID
  Transaction Transaction
  bool IsActive
Методы:
  int get_ObjectID()
  void .ctor(SqlInternalConnection connection, Transaction tx)
  Transaction get_Transaction()
  void Initialize()
  bool get_IsActive()
  Byte[] Promote()
  void Rollback(SinglePhaseEnlistment enlistment)
  void SinglePhaseCommit(SinglePhaseEnlistment enlistment)
  void TransactionEnded(Transaction transaction)
  SqlInternalConnection GetValidConnection()
  void ValidateActiveOnConnection(SqlInternalConnection connection)
  Guid GetGlobalTxnIdentifierFromToken()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlDependency
Наследуется от: object
Поля:
  string _id
  string _options
  int _timeout
  bool _dependencyFired
  List`1<EventContextPair> _eventList
  object _eventHandlerLock
  DateTime _expirationTime
  List`1<string> _serverList
  object s_startStopLock
  string s_appDomainKey
  Dictionary`2<string, Dictionary`2<IdentityUserNamePair, List`1<DatabaseServicePair>>> s_serverUserHash
  SqlDependencyProcessDispatcher s_processDispatcher
  string s_assemblyName
  string s_typeName
Свойства:
  bool HasChanges
  string Id
  string AppDomainKey
  DateTime ExpirationTime
  string Options
  SqlDependencyProcessDispatcher ProcessDispatcher
  int Timeout
Методы:
  void .ctor()
  void .ctor(SqlCommand command)
  void .ctor(SqlCommand command, string options, int timeout)
  bool get_HasChanges()
  string get_Id()
  string get_AppDomainKey()
  DateTime get_ExpirationTime()
  string get_Options()
  SqlDependencyProcessDispatcher get_ProcessDispatcher()
  int get_Timeout()
  void add_OnChange(OnChangeEventHandler value)
  void remove_OnChange(OnChangeEventHandler value)
  void AddCommandDependency(SqlCommand command)
  bool Start(string connectionString)
  bool Start(string connectionString, string queue)
  bool Start(string connectionString, string queue, bool useDefaults)
  bool Stop(string connectionString)
  bool Stop(string connectionString, string queue)
  bool Stop(string connectionString, string queue, bool useDefaults, bool startFailed)
  bool AddToServerUserHash(string server, IdentityUserNamePair identityUser, DatabaseServicePair databaseService)
  void RemoveFromServerUserHash(string server, IdentityUserNamePair identityUser, DatabaseServicePair databaseService)
  string GetDefaultComposedOptions(string server, string failoverServer, IdentityUserNamePair identityUser, string database)
  void AddToServerList(string server)
  bool ContainsServer(string server)
  string ComputeHashAndAddToDispatcher(SqlCommand command)
  void Invalidate(SqlNotificationType type, SqlNotificationInfo info, SqlNotificationSource source)
  void StartTimer(SqlNotificationRequest notificationRequest)
  void AddCommandInternal(SqlCommand cmd)
  string ComputeCommandHash(string connectionString, SqlCommand command)
  string FixupServiceOrDatabaseName(string name)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlDependencyPerAppDomainDispatcher
Наследуется от: MarshalByRefObject
Поля:
  SqlDependencyPerAppDomainDispatcher SingletonInstance
  object _instanceLock
  Dictionary`2<string, SqlDependency> _dependencyIdToDependencyHash
  Dictionary`2<string, DependencyList> _notificationIdToDependenciesHash
  Dictionary`2<string, string> _commandHashToNotificationId
  bool _sqlDependencyTimeOutTimerStarted
  DateTime _nextTimeout
  Timer _timeoutTimer
Свойства:
Методы:
  void .ctor()
  object InitializeLifetimeService()
  void AddDependencyEntry(SqlDependency dep)
  string AddCommandEntry(string commandHash, SqlDependency dep)
  void InvalidateCommandID(SqlNotification sqlNotification)
  void InvalidateServer(string server, SqlNotification sqlNotification)
  SqlDependency LookupDependencyEntry(string id)
  void LookupDependencyEntryWithRemove(string id)
  List`1<SqlDependency> LookupCommandEntryWithRemove(string notificationId)
  void RemoveDependencyFromCommandToDependenciesHash(SqlDependency dependency)
  void StartTimer(SqlDependency dep)
  void TimeoutTimerCallback(object state)
  void SubscribeToAppDomainUnload()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlNotification
Наследуется от: MarshalByRefObject
Поля:
  SqlNotificationInfo _info
  SqlNotificationSource _source
  SqlNotificationType _type
  string _key
Свойства:
  SqlNotificationInfo Info
  string Key
  SqlNotificationSource Source
  SqlNotificationType Type
Методы:
  void .ctor(SqlNotificationInfo info, SqlNotificationSource source, SqlNotificationType type, string key)
  SqlNotificationInfo get_Info()
  string get_Key()
  SqlNotificationSource get_Source()
  SqlNotificationType get_Type()
--------------------------------------------------
Класс: System.Data.SqlClient.MetaType
Наследуется от: object
Поля:
  Type ClassType
  Type SqlType
  int FixedLength
  bool IsFixed
  bool IsLong
  bool IsPlp
  byte Precision
  byte Scale
  byte TDSType
  byte NullableType
  string TypeName
  SqlDbType SqlDbType
  DbType DbType
  byte PropBytes
  bool IsAnsiType
  bool IsBinType
  bool IsCharType
  bool IsNCharType
  bool IsSizeInCharacters
  bool IsNewKatmaiType
  bool IsVarTime
  bool Is70Supported
  bool Is80Supported
  bool Is90Supported
  bool Is100Supported
  MetaType s_metaBigInt
  MetaType s_metaFloat
  MetaType s_metaReal
  MetaType s_metaBinary
  MetaType s_metaTimestamp
  MetaType MetaVarBinary
  MetaType MetaMaxVarBinary
  MetaType s_metaSmallVarBinary
  MetaType MetaImage
  MetaType s_metaBit
  MetaType s_metaTinyInt
  MetaType s_metaSmallInt
  MetaType s_metaInt
  MetaType s_metaChar
  MetaType s_metaVarChar
  MetaType MetaMaxVarChar
  MetaType MetaText
  MetaType s_metaNChar
  MetaType MetaNVarChar
  MetaType MetaMaxNVarChar
  MetaType MetaNText
  MetaType MetaDecimal
  MetaType MetaXml
  MetaType s_metaDateTime
  MetaType s_metaSmallDateTime
  MetaType s_metaMoney
  MetaType s_metaSmallMoney
  MetaType s_metaUniqueId
  MetaType s_metaVariant
  MetaType MetaUdt
  MetaType s_metaMaxUdt
  MetaType s_metaTable
  MetaType s_metaSUDT
  MetaType s_metaDate
  MetaType MetaTime
  MetaType s_metaDateTime2
  MetaType MetaDateTimeOffset
Свойства:
  int TypeId
Методы:
  void .ctor(byte precision, byte scale, int fixedLength, bool isFixed, bool isLong, bool isPlp, byte tdsType, byte nullableTdsType, string typeName, Type classType, Type sqlType, SqlDbType sqldbType, DbType dbType, byte propBytes)
  int get_TypeId()
  bool _IsAnsiType(SqlDbType type)
  bool _IsSizeInCharacters(SqlDbType type)
  bool _IsCharType(SqlDbType type)
  bool _IsNCharType(SqlDbType type)
  bool _IsBinType(SqlDbType type)
  bool _Is70Supported(SqlDbType type)
  bool _Is80Supported(SqlDbType type)
  bool _Is90Supported(SqlDbType type)
  bool _Is100Supported(SqlDbType type)
  bool _IsNewKatmaiType(SqlDbType type)
  bool _IsVarTime(SqlDbType type)
  MetaType GetMetaTypeFromSqlDbType(SqlDbType target, bool isMultiValued)
  MetaType GetMetaTypeFromDbType(DbType target)
  MetaType GetMaxMetaTypeFromMetaType(MetaType mt)
  MetaType GetMetaTypeFromType(Type dataType, bool streamAllowed)
  MetaType GetMetaTypeFromValue(object value, bool inferLen, bool streamAllowed)
  object GetNullSqlValue(Type sqlType)
  MetaType PromoteStringType(string s)
  object GetComValueFromSqlVariant(object sqlVal)
  object GetSqlValueFromComVariant(object comVal)
  SqlDbType GetSqlDbTypeFromOleDbType(short dbType, string typeName)
  MetaType GetSqlDataType(int tdsType, UInt32 userType, int length)
  MetaType GetDefaultMetaType()
  string GetStringFromXml(XmlReader xmlreader)
  TdsDateTime FromDateTime(DateTime dateTime, byte cb)
  DateTime ToDateTime(int sqlDays, int sqlTime, int length)
  int GetTimeSizeFromScale(byte scale)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsDateTime
Наследуется от: ValueType
Поля:
  int days
  int time
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlError
Наследуется от: object
Поля:
  string _source
  int _number
  byte _state
  byte _errorClass
  string _server
  string _message
  string _procedure
  int _lineNumber
  int _win32ErrorCode
  Exception _exception
Свойства:
  string Source
  int Number
  byte State
  byte Class
  string Server
  string Message
  string Procedure
  int LineNumber
  int Win32ErrorCode
  Exception Exception
Методы:
  void .ctor(int infoNumber, byte errorState, byte errorClass, string server, string errorMessage, string procedure, int lineNumber, UInt32 win32ErrorCode, Exception exception)
  void .ctor(int infoNumber, byte errorState, byte errorClass, string server, string errorMessage, string procedure, int lineNumber, Exception exception)
  string ToString()
  string get_Source()
  int get_Number()
  byte get_State()
  byte get_Class()
  string get_Server()
  string get_Message()
  string get_Procedure()
  int get_LineNumber()
  int get_Win32ErrorCode()
  Exception get_Exception()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlErrorCollection
Наследуется от: object
Поля:
  List`1<object> _errors
Свойства:
  int Count
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.ICollection.IsSynchronized
  SqlError Item
Методы:
  void .ctor()
  void CopyTo(Array array, int index)
  void CopyTo(SqlError[] array, int index)
  int get_Count()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.ICollection.get_IsSynchronized()
  SqlError get_Item(int index)
  IEnumerator GetEnumerator()
  void Add(SqlError error)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlException
Наследуется от: DbException
Поля:
  string OriginalClientConnectionIdKey
  string RoutingDestinationKey
  int SqlExceptionHResult
  SqlErrorCollection _errors
  Guid _clientConnectionId
  bool _doNotReconnect
  string DEF_MESSAGE
Свойства:
  SqlErrorCollection Errors
  Guid ClientConnectionId
  byte Class
  int LineNumber
  int Number
  string Procedure
  string Server
  byte State
  string Source
  string Message
Методы:
  void .ctor(string message, SqlErrorCollection errorCollection, Exception innerException, Guid conId)
  void GetObjectData(SerializationInfo si, StreamingContext context)
  SqlErrorCollection get_Errors()
  Guid get_ClientConnectionId()
  byte get_Class()
  int get_LineNumber()
  int get_Number()
  string get_Procedure()
  string get_Server()
  byte get_State()
  string get_Source()
  string ToString()
  SqlException CreateException(SqlErrorCollection errorCollection, string serverVersion)
  SqlException CreateException(SqlErrorCollection errorCollection, string serverVersion, SqlInternalConnectionTds internalConnection, Exception innerException)
  SqlException CreateException(SqlErrorCollection errorCollection, string serverVersion, Guid conId, Exception innerException)
  SqlException InternalClone()
  string get_Message()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlInfoMessageEventArgs
Наследуется от: EventArgs
Поля:
  SqlException _exception
Свойства:
  SqlErrorCollection Errors
  string Message
  string Source
Методы:
  void .ctor(SqlException exception)
  SqlErrorCollection get_Errors()
  bool ShouldSerializeErrors()
  string get_Message()
  string get_Source()
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlInfoMessageEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SqlInfoMessageEventArgs e)
  IAsyncResult BeginInvoke(object sender, SqlInfoMessageEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlInternalConnection
Наследуется от: DbConnectionInternal
Поля:
  SqlConnectionString _connectionOptions
  bool _isEnlistedInTransaction
  Byte[] _promotedDTCToken
  Byte[] _whereAbouts
  bool _isGlobalTransaction
  bool _isGlobalTransactionEnabledForServer
  Guid _globalTransactionTMID
  string <CurrentDatabase>k__BackingField
  string <CurrentDataSource>k__BackingField
  SqlDelegatedTransaction <DelegatedTransaction>k__BackingField
Свойства:
  string CurrentDatabase
  string CurrentDataSource
  SqlDelegatedTransaction DelegatedTransaction
  SqlConnection Connection
  SqlConnectionString ConnectionOptions
  SqlInternalTransaction CurrentTransaction
  SqlInternalTransaction AvailableInternalTransaction
  SqlInternalTransaction PendingTransaction
  bool IsNonPoolableTransactionRoot
  bool IsTransactionRoot
  bool HasLocalTransaction
  bool HasLocalTransactionFromAPI
  bool IsEnlistedInTransaction
  bool IsLockedForBulkCopy
  bool IsKatmaiOrNewer
  Byte[] PromotedDTCToken
  bool IsGlobalTransaction
  bool IsGlobalTransactionsEnabledForServer
Методы:
  string get_CurrentDatabase()
  void set_CurrentDatabase(string value)
  string get_CurrentDataSource()
  void set_CurrentDataSource(string value)
  SqlDelegatedTransaction get_DelegatedTransaction()
  void set_DelegatedTransaction(SqlDelegatedTransaction value)
  void .ctor(SqlConnectionString connectionOptions)
  SqlConnection get_Connection()
  SqlConnectionString get_ConnectionOptions()
  SqlInternalTransaction get_CurrentTransaction()
  SqlInternalTransaction get_AvailableInternalTransaction()
  SqlInternalTransaction get_PendingTransaction()
  bool get_IsNonPoolableTransactionRoot()
  bool get_IsTransactionRoot()
  bool get_HasLocalTransaction()
  bool get_HasLocalTransactionFromAPI()
  bool get_IsEnlistedInTransaction()
  bool get_IsLockedForBulkCopy()
  bool get_IsKatmaiOrNewer()
  Byte[] get_PromotedDTCToken()
  void set_PromotedDTCToken(Byte[] value)
  bool get_IsGlobalTransaction()
  void set_IsGlobalTransaction(bool value)
  bool get_IsGlobalTransactionsEnabledForServer()
  void set_IsGlobalTransactionsEnabledForServer(bool value)
  DbTransaction BeginTransaction(IsolationLevel iso)
  SqlTransaction BeginSqlTransaction(IsolationLevel iso, string transactionName, bool shouldReconnect)
  void ChangeDatabase(string database)
  void ChangeDatabaseInternal(string database)
  void CleanupTransactionOnCompletion(Transaction transaction)
  DbReferenceCollection CreateReferenceCollection()
  void Deactivate()
  void DisconnectTransaction(SqlInternalTransaction internalTransaction)
  void Dispose()
  void Enlist(Transaction tx)
  void EnlistNonNull(Transaction tx)
  void EnlistNull()
  void EnlistTransaction(Transaction transaction)
  void ExecuteTransaction(TransactionRequest transactionRequest, string name, IsolationLevel iso, SqlInternalTransaction internalTransaction, bool isDelegateControlRequest)
  SqlDataReader FindLiveReader(SqlCommand command)
  SqlCommand FindLiveCommand(TdsParserStateObject stateObj)
  Byte[] GetDTCAddress()
  Byte[] GetTransactionCookie(Transaction transaction, Byte[] whereAbouts)
  void InternalDeactivate()
  void OnError(SqlException exception, bool breakConnection, Action`1<Action> wrapCloseInAction)
  void PropagateTransactionCookie(Byte[] transactionCookie)
  void ValidateConnectionForExecute(SqlCommand command)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SessionStateRecord
Наследуется от: object
Поля:
  bool _recoverable
  UInt32 _version
  int _dataLength
  Byte[] _data
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SessionData
Наследуется от: object
Поля:
  int _maxNumberOfSessionStates
  UInt32 _tdsVersion
  bool _encrypted
  string _database
  SqlCollation _collation
  string _language
  string _initialDatabase
  SqlCollation _initialCollation
  string _initialLanguage
  byte _unrecoverableStatesCount
  Dictionary`2<string, Tuple`2<string, string>> _resolvedAliases
  SessionStateRecord[] _delta
  bool _deltaDirty
  Byte[][] _initialState
Свойства:
Методы:
  void .ctor(SessionData recoveryData)
  void .ctor()
  void Reset()
  void AssertUnrecoverableStateCountIsCorrect()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlInternalConnectionTds
Наследуется от: SqlInternalConnection
Поля:
  SqlConnectionPoolGroupProviderInfo _poolGroupProviderInfo
  TdsParser _parser
  SqlLoginAck _loginAck
  bool _sessionRecoveryRequested
  bool _sessionRecoveryAcknowledged
  SessionData _currentSessionData
  SessionData _recoverySessionData
  HashSet`1<int> s_transientErrors
  bool _fConnectionOpen
  bool _fResetConnection
  string _originalDatabase
  string _currentFailoverPartner
  string _originalLanguage
  string _currentLanguage
  int _currentPacketSize
  int _asyncCommandCount
  string _instanceName
  DbConnectionPoolIdentity _identity
  SyncAsyncLock _parserLock
  int _threadIdOwningParserLock
  SqlConnectionTimeoutErrorInternal _timeoutErrorInternal
  Guid _clientConnectionId
  RoutingInfo _routingInfo
  Guid _originalClientConnectionId
  string _routingDestination
Свойства:
  SessionData CurrentSessionData
  SqlConnectionTimeoutErrorInternal TimeoutErrorInternal
  Guid ClientConnectionId
  Guid OriginalClientConnectionId
  string RoutingDestination
  SqlInternalTransaction CurrentTransaction
  SqlInternalTransaction AvailableInternalTransaction
  SqlInternalTransaction PendingTransaction
  DbConnectionPoolIdentity Identity
  string InstanceName
  bool IsLockedForBulkCopy
  bool IsNonPoolableTransactionRoot
  bool IsKatmaiOrNewer
  int PacketSize
  TdsParser Parser
  string ServerProvidedFailOverPartner
  SqlConnectionPoolGroupProviderInfo PoolGroupProviderInfo
  bool ReadyToPrepareTransaction
  string ServerVersion
  bool UnbindOnTransactionCompletion
  bool IgnoreEnvChange
  bool ThreadHasParserLockForClose
Методы:
  SessionData get_CurrentSessionData()
  SqlConnectionTimeoutErrorInternal get_TimeoutErrorInternal()
  void .ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, object providerInfo, bool redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, bool applyTransientFaultHandling)
  bool IsTransientError(SqlException exc)
  Guid get_ClientConnectionId()
  Guid get_OriginalClientConnectionId()
  string get_RoutingDestination()
  SqlInternalTransaction get_CurrentTransaction()
  SqlInternalTransaction get_AvailableInternalTransaction()
  SqlInternalTransaction get_PendingTransaction()
  DbConnectionPoolIdentity get_Identity()
  string get_InstanceName()
  bool get_IsLockedForBulkCopy()
  bool get_IsNonPoolableTransactionRoot()
  bool get_IsKatmaiOrNewer()
  int get_PacketSize()
  TdsParser get_Parser()
  string get_ServerProvidedFailOverPartner()
  SqlConnectionPoolGroupProviderInfo get_PoolGroupProviderInfo()
  bool get_ReadyToPrepareTransaction()
  string get_ServerVersion()
  bool get_UnbindOnTransactionCompletion()
  void ChangeDatabaseInternal(string database)
  void Dispose()
  void ValidateConnectionForExecute(SqlCommand command)
  void CheckEnlistedTransactionBinding()
  bool IsConnectionAlive(bool throwOnException)
  void Activate(Transaction transaction)
  void InternalDeactivate()
  void ResetConnection()
  void DecrementAsyncCount()
  void IncrementAsyncCount()
  void DisconnectTransaction(SqlInternalTransaction internalTransaction)
  void ExecuteTransaction(TransactionRequest transactionRequest, string name, IsolationLevel iso)
  void ExecuteTransaction(TransactionRequest transactionRequest, string name, IsolationLevel iso, SqlInternalTransaction internalTransaction, bool isDelegateControlRequest)
  void ExecuteTransactionYukon(TransactionRequest transactionRequest, string transactionName, IsolationLevel iso, SqlInternalTransaction internalTransaction, bool isDelegateControlRequest)
  void DelegatedTransactionEnded()
  Byte[] GetDTCAddress()
  void PropagateTransactionCookie(Byte[] cookie)
  void CompleteLogin(bool enlistOK)
  void Login(ServerInfo server, TimeoutTimer timeout)
  void LoginFailure()
  void OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, bool redirectedUserInstance)
  bool IsDoNotRetryConnectError(SqlException exc)
  void LoginNoFailover(ServerInfo serverInfo, bool redirectedUserInstance, SqlConnectionString connectionOptions, TimeoutTimer timeout)
  void LoginWithFailover(bool useFailoverHost, ServerInfo primaryServerInfo, string failoverHost, bool redirectedUserInstance, SqlConnectionString connectionOptions, TimeoutTimer timeout)
  void ResolveExtendedServerName(ServerInfo serverInfo, bool aliasLookup, SqlConnectionString options)
  void AttemptOneLogin(ServerInfo serverInfo, bool ignoreSniOpenTimeout, TimeoutTimer timeout, bool withFailover)
  object ObtainAdditionalLocksForClose()
  void ReleaseAdditionalLocksForClose(object lockToken)
  bool GetSessionAndReconnectIfNeeded(SqlConnection parent, int timeout)
  void BreakConnection()
  bool get_IgnoreEnvChange()
  void OnEnvChange(SqlEnvChange rec)
  void OnLoginAck(SqlLoginAck rec)
  void OnFeatureExtAck(int featureId, Byte[] data)
  bool get_ThreadHasParserLockForClose()
  void set_ThreadHasParserLockForClose(bool value)
  bool TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.ServerInfo
Наследуется от: object
Поля:
  string <ExtendedServerName>k__BackingField
  string <ResolvedServerName>k__BackingField
  string <ResolvedDatabaseName>k__BackingField
  string <UserProtocol>k__BackingField
  string _userServerName
  string PreRoutingServerName
Свойства:
  string ExtendedServerName
  string ResolvedServerName
  string ResolvedDatabaseName
  string UserProtocol
  string UserServerName
Методы:
  string get_ExtendedServerName()
  void set_ExtendedServerName(string value)
  string get_ResolvedServerName()
  void set_ResolvedServerName(string value)
  string get_ResolvedDatabaseName()
  void set_ResolvedDatabaseName(string value)
  string get_UserProtocol()
  void set_UserProtocol(string value)
  string get_UserServerName()
  void set_UserServerName(string value)
  void .ctor(SqlConnectionString userOptions)
  void .ctor(SqlConnectionString userOptions, string serverName)
  void .ctor(SqlConnectionString userOptions, RoutingInfo routing, string preRoutingServerName)
  void SetDerivedNames(string protocol, string serverName)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlNotificationEventArgs
Наследуется от: EventArgs
Поля:
  SqlNotificationType _type
  SqlNotificationInfo _info
  SqlNotificationSource _source
  SqlNotificationEventArgs s_notifyError
Свойства:
  SqlNotificationType Type
  SqlNotificationInfo Info
  SqlNotificationSource Source
Методы:
  void .ctor(SqlNotificationType type, SqlNotificationInfo info, SqlNotificationSource source)
  SqlNotificationType get_Type()
  SqlNotificationInfo get_Info()
  SqlNotificationSource get_Source()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlNotificationInfo
Наследуется от: Enum
Поля:
  int value__
  SqlNotificationInfo Truncate
  SqlNotificationInfo Insert
  SqlNotificationInfo Update
  SqlNotificationInfo Delete
  SqlNotificationInfo Drop
  SqlNotificationInfo Alter
  SqlNotificationInfo Restart
  SqlNotificationInfo Error
  SqlNotificationInfo Query
  SqlNotificationInfo Invalid
  SqlNotificationInfo Options
  SqlNotificationInfo Isolation
  SqlNotificationInfo Expired
  SqlNotificationInfo Resource
  SqlNotificationInfo PreviousFire
  SqlNotificationInfo TemplateLimit
  SqlNotificationInfo Merge
  SqlNotificationInfo Unknown
  SqlNotificationInfo AlreadyChanged
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlNotificationSource
Наследуется от: Enum
Поля:
  int value__
  SqlNotificationSource Data
  SqlNotificationSource Timeout
  SqlNotificationSource Object
  SqlNotificationSource Database
  SqlNotificationSource System
  SqlNotificationSource Statement
  SqlNotificationSource Environment
  SqlNotificationSource Execution
  SqlNotificationSource Owner
  SqlNotificationSource Unknown
  SqlNotificationSource Client
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlNotificationType
Наследуется от: Enum
Поля:
  int value__
  SqlNotificationType Change
  SqlNotificationType Subscribe
  SqlNotificationType Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.DataFeed
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.StreamDataFeed
Наследуется от: DataFeed
Поля:
  Stream _source
Свойства:
Методы:
  void .ctor(Stream source)
--------------------------------------------------
Класс: System.Data.SqlClient.TextDataFeed
Наследуется от: DataFeed
Поля:
  TextReader _source
Свойства:
Методы:
  void .ctor(TextReader source)
--------------------------------------------------
Класс: System.Data.SqlClient.XmlDataFeed
Наследуется от: DataFeed
Поля:
  XmlReader _source
Свойства:
Методы:
  void .ctor(XmlReader source)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlParameter
Наследуется от: DbParameter
Поля:
  MetaType _metaType
  SqlCollation _collation
  string _xmlSchemaCollectionDatabase
  string _xmlSchemaCollectionOwningSchema
  string _xmlSchemaCollectionName
  string _typeName
  string _parameterName
  byte _precision
  byte _scale
  bool _hasScale
  MetaType _internalMetaType
  SqlBuffer _sqlBufferReturnValue
  INullable _valueAsINullable
  bool _isSqlParameterSqlType
  bool _isNull
  bool _coercedValueIsSqlType
  bool _coercedValueIsDataFeed
  int _actualSize
  DataRowVersion _sourceVersion
  object _value
  object _parent
  ParameterDirection _direction
  int _size
  int _offset
  string _sourceColumn
  bool _sourceColumnNullMapping
  bool _isNullable
  object _coercedValue
Свойства:
  SqlCollation Collation
  SqlCompareOptions CompareInfo
  string XmlSchemaCollectionDatabase
  string XmlSchemaCollectionOwningSchema
  string XmlSchemaCollectionName
  DbType DbType
  MetaType InternalMetaType
  int LocaleId
  bool SizeInferred
  bool ParameterIsSqlType
  string ParameterName
  string ParameterNameFixed
  byte Precision
  byte PrecisionInternal
  byte Scale
  byte ScaleInternal
  SqlDbType SqlDbType
  object SqlValue
  string TypeName
  object Value
  INullable ValueAsINullable
  bool IsNull
  bool CoercedValueIsSqlType
  bool CoercedValueIsDataFeed
  DataRowVersion SourceVersion
  object CoercedValue
  ParameterDirection Direction
  bool IsNullable
  int Offset
  int Size
  string SourceColumn
  bool SourceColumnNullMapping
  string UdtTypeName
  bool ForceColumnEncryption
Методы:
  void .ctor()
  void .ctor(string parameterName, SqlDbType dbType)
  void .ctor(string parameterName, object value)
  void .ctor(string parameterName, SqlDbType dbType, int size)
  void .ctor(string parameterName, SqlDbType dbType, int size, string sourceColumn)
  void .ctor(string parameterName, SqlDbType dbType, int size, ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, DataRowVersion sourceVersion, object value)
  void .ctor(string parameterName, SqlDbType dbType, int size, ParameterDirection direction, byte precision, byte scale, string sourceColumn, DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName)
  void .ctor(SqlParameter source)
  SqlCollation get_Collation()
  void set_Collation(SqlCollation value)
  SqlCompareOptions get_CompareInfo()
  void set_CompareInfo(SqlCompareOptions value)
  string get_XmlSchemaCollectionDatabase()
  void set_XmlSchemaCollectionDatabase(string value)
  string get_XmlSchemaCollectionOwningSchema()
  void set_XmlSchemaCollectionOwningSchema(string value)
  string get_XmlSchemaCollectionName()
  void set_XmlSchemaCollectionName(string value)
  DbType get_DbType()
  void set_DbType(DbType value)
  void ResetDbType()
  MetaType get_InternalMetaType()
  void set_InternalMetaType(MetaType value)
  int get_LocaleId()
  void set_LocaleId(int value)
  bool get_SizeInferred()
  SmiParameterMetaData MetaDataForSmi(ParameterPeekAheadValue& peekAhead)
  bool get_ParameterIsSqlType()
  void set_ParameterIsSqlType(bool value)
  string get_ParameterName()
  void set_ParameterName(string value)
  string get_ParameterNameFixed()
  byte get_Precision()
  void set_Precision(byte value)
  byte get_PrecisionInternal()
  void set_PrecisionInternal(byte value)
  bool ShouldSerializePrecision()
  byte get_Scale()
  void set_Scale(byte value)
  byte get_ScaleInternal()
  void set_ScaleInternal(byte value)
  bool ShouldSerializeScale()
  SqlDbType get_SqlDbType()
  void set_SqlDbType(SqlDbType value)
  bool ShouldSerializeSqlDbType()
  void ResetSqlDbType()
  object get_SqlValue()
  void set_SqlValue(object value)
  string get_TypeName()
  void set_TypeName(string value)
  object get_Value()
  void set_Value(object value)
  INullable get_ValueAsINullable()
  bool get_IsNull()
  int GetActualSize()
  object CoerceValue(object value, MetaType destinationType, Boolean& coercedToDataFeed, Boolean& typeChanged, bool allowStreaming)
  void FixStreamDataForNonPLP()
  byte GetActualPrecision()
  byte GetActualScale()
  int GetParameterSize()
  void GetActualFieldsAndProperties(List`1& fields, SmiMetaDataPropertyCollection& props, ParameterPeekAheadValue& peekAhead)
  object GetCoercedValue()
  bool get_CoercedValueIsSqlType()
  bool get_CoercedValueIsDataFeed()
  void AssertCachedPropertiesAreValid()
  void AssertPropertiesAreValid(object value, Nullable`1<bool> isSqlType, Nullable`1<bool> isDataFeed, Nullable`1<bool> isNull)
  SqlDbType GetMetaSqlDbTypeOnly()
  MetaType GetMetaTypeOnly()
  void Prepare(SqlCommand cmd)
  void PropertyChanging()
  void PropertyTypeChanging()
  void SetSqlBuffer(SqlBuffer buff)
  void Validate(int index, bool isCommandProc)
  MetaType ValidateTypeLengths()
  byte ValuePrecision(object value)
  byte ValueScale(object value)
  int StringSize(object value, bool isSqlType)
  int BinarySize(object value, bool isSqlType)
  int ValueSize(object value)
  String[] ParseTypeName(string typeName)
  object System.ICloneable.Clone()
  void CloneHelper(SqlParameter destination)
  void CloneHelperCore(SqlParameter destination)
  DataRowVersion get_SourceVersion()
  void set_SourceVersion(DataRowVersion value)
  object get_CoercedValue()
  void set_CoercedValue(object value)
  ParameterDirection get_Direction()
  void set_Direction(ParameterDirection value)
  bool get_IsNullable()
  void set_IsNullable(bool value)
  int get_Offset()
  void set_Offset(int value)
  int get_Size()
  void set_Size(int value)
  bool ShouldSerializeSize()
  string get_SourceColumn()
  void set_SourceColumn(string value)
  bool get_SourceColumnNullMapping()
  void set_SourceColumnNullMapping(bool value)
  object CompareExchangeParent(object value, object comparand)
  void ResetParent()
  string ToString()
  byte ValuePrecisionCore(object value)
  byte ValueScaleCore(object value)
  int ValueSizeCore(object value)
  void CopyTo(SqlParameter destination)
  string get_UdtTypeName()
  void set_UdtTypeName(string value)
  bool get_ForceColumnEncryption()
  void set_ForceColumnEncryption(bool value)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlParameterCollection
Наследуется от: DbParameterCollection
Поля:
  bool _isDirty
  Type s_itemType
  List`1<SqlParameter> _items
Свойства:
  bool IsDirty
  SqlParameter Item
  SqlParameter Item
  int Count
  List`1<SqlParameter> InnerList
  object SyncRoot
Методы:
  void .ctor()
  bool get_IsDirty()
  void set_IsDirty(bool value)
  SqlParameter get_Item(int index)
  void set_Item(int index, SqlParameter value)
  SqlParameter get_Item(string parameterName)
  void set_Item(string parameterName, SqlParameter value)
  SqlParameter Add(SqlParameter value)
  SqlParameter AddWithValue(string parameterName, object value)
  SqlParameter Add(string parameterName, SqlDbType sqlDbType)
  SqlParameter Add(string parameterName, SqlDbType sqlDbType, int size)
  SqlParameter Add(string parameterName, SqlDbType sqlDbType, int size, string sourceColumn)
  void AddRange(SqlParameter[] values)
  bool Contains(string value)
  bool Contains(SqlParameter value)
  void CopyTo(SqlParameter[] array, int index)
  int IndexOf(SqlParameter value)
  void Insert(int index, SqlParameter value)
  void OnChange()
  void Remove(SqlParameter value)
  int get_Count()
  List`1<SqlParameter> get_InnerList()
  object get_SyncRoot()
  int Add(object value)
  void AddRange(Array values)
  int CheckName(string parameterName)
  void Clear()
  bool Contains(object value)
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  DbParameter GetParameter(int index)
  DbParameter GetParameter(string parameterName)
  int IndexOf(IEnumerable items, string parameterName)
  int IndexOf(string parameterName)
  int IndexOf(object value)
  void Insert(int index, object value)
  void RangeCheck(int index)
  void Remove(object value)
  void RemoveAt(int index)
  void RemoveAt(string parameterName)
  void RemoveIndex(int index)
  void Replace(int index, object newValue)
  void SetParameter(int index, DbParameter value)
  void SetParameter(string parameterName, DbParameter value)
  void Validate(int index, object value)
  void ValidateType(object value)
  SqlParameter Add(string parameterName, object value)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlReferenceCollection
Наследуется от: DbReferenceCollection
Поля:
  int DataReaderTag
  int CommandTag
  int BulkCopyTag
Свойства:
Методы:
  void Add(object value, int tag)
  void Deactivate()
  SqlDataReader FindLiveReader(SqlCommand command)
  SqlCommand FindLiveCommand(TdsParserStateObject stateObj)
  void NotifyItem(int message, int tag, object value)
  void Remove(object value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlRowUpdatedEventArgs
Наследуется от: RowUpdatedEventArgs
Поля:
Свойства:
  SqlCommand Command
Методы:
  void .ctor(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  SqlCommand get_Command()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlRowUpdatedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SqlRowUpdatedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SqlRowUpdatedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlRowUpdatingEventArgs
Наследуется от: RowUpdatingEventArgs
Поля:
Свойства:
  SqlCommand Command
  IDbCommand BaseCommand
Методы:
  void .ctor(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  SqlCommand get_Command()
  void set_Command(SqlCommand value)
  IDbCommand get_BaseCommand()
  void set_BaseCommand(IDbCommand value)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlRowUpdatingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SqlRowUpdatingEventArgs e)
  IAsyncResult BeginInvoke(object sender, SqlRowUpdatingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlSequentialStream
Наследуется от: Stream
Поля:
  SqlDataReader _reader
  int _columnIndex
  Task _currentTask
  int _readTimeout
  CancellationTokenSource _disposalTokenSource
Свойства:
  bool CanRead
  bool CanSeek
  bool CanTimeout
  bool CanWrite
  long Length
  long Position
  int ReadTimeout
  int ColumnIndex
Методы:
  void .ctor(SqlDataReader reader, int columnIndex)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanTimeout()
  bool get_CanWrite()
  void Flush()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_ColumnIndex()
  int Read(Byte[] buffer, int offset, int count)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  IAsyncResult BeginRead(Byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  int EndRead(IAsyncResult asyncResult)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void SetClosed()
  void Dispose(bool disposing)
  void ValidateReadParameters(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlSequentialTextReader
Наследуется от: TextReader
Поля:
  SqlDataReader _reader
  int _columnIndex
  Encoding _encoding
  Decoder _decoder
  Byte[] _leftOverBytes
  int _peekedChar
  Task _currentTask
  CancellationTokenSource _disposalTokenSource
Свойства:
  int ColumnIndex
  bool IsClosed
  bool HasPeekedChar
Методы:
  void .ctor(SqlDataReader reader, int columnIndex, Encoding encoding)
  int get_ColumnIndex()
  int Peek()
  int Read()
  int Read(Char[] buffer, int index, int count)
  Task`1<int> ReadAsync(Char[] buffer, int index, int count)
  void Dispose(bool disposing)
  void SetClosed()
  int InternalRead(Char[] buffer, int index, int count)
  Byte[] PrepareByteBuffer(int numberOfChars, Int32& byteBufferUsed)
  int DecodeBytesToChars(Byte[] inBuffer, int inBufferCount, Char[] outBuffer, int outBufferOffset, int outBufferCount)
  bool get_IsClosed()
  bool get_HasPeekedChar()
  void ValidateReadParameters(Char[] buffer, int index, int count)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlUnicodeEncoding
Наследуется от: UnicodeEncoding
Поля:
  SqlUnicodeEncoding s_singletonEncoding
Свойства:
  Encoding SqlUnicodeEncodingInstance
Методы:
  void .ctor()
  Decoder GetDecoder()
  int GetMaxByteCount(int charCount)
  Encoding get_SqlUnicodeEncodingInstance()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlStatistics
Наследуется от: object
Поля:
  long _closeTimestamp
  long _openTimestamp
  long _startExecutionTimestamp
  long _startFetchTimestamp
  long _startNetworkServerTimestamp
  long _buffersReceived
  long _buffersSent
  long _bytesReceived
  long _bytesSent
  long _connectionTime
  long _cursorOpens
  long _executionTime
  long _iduCount
  long _iduRows
  long _networkServerTime
  long _preparedExecs
  long _prepares
  long _selectCount
  long _selectRows
  long _serverRoundtrips
  long _sumResultSets
  long _transactions
  long _unpreparedExecs
  bool _waitForDoneAfterRow
  bool _waitForReply
Свойства:
  bool WaitForDoneAfterRow
  bool WaitForReply
Методы:
  SqlStatistics StartTimer(SqlStatistics statistics)
  void StopTimer(SqlStatistics statistics)
  bool get_WaitForDoneAfterRow()
  void set_WaitForDoneAfterRow(bool value)
  bool get_WaitForReply()
  void .ctor()
  void ContinueOnNewConnection()
  IDictionary GetDictionary()
  bool RequestExecutionTimer()
  void RequestNetworkServerTimer()
  void ReleaseAndUpdateExecutionTimer()
  void ReleaseAndUpdateNetworkServerTimer()
  void Reset()
  void SafeAdd(Int64& value, long summand)
  long SafeIncrement(Int64& value)
  void UpdateStatistics()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlStream
Наследуется от: Stream
Поля:
  SqlDataReader _reader
  int _columnOrdinal
  long _bytesCol
  int _bom
  Byte[] _bufferedData
  bool _processAllRows
  bool _advanceReader
  bool _readFirstRow
  bool _endOfColumn
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(SqlDataReader reader, bool addByteOrderMark, bool processAllRows)
  void .ctor(int columnOrdinal, SqlDataReader reader, bool addByteOrderMark, bool processAllRows, bool advanceReader)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Dispose(bool disposing)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  bool AdvanceToNextRow(SqlDataReader reader)
  int ReadBytes(Byte[] buffer, int offset, int count)
  XmlReader ToXmlReader(bool async)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCachedStream
Наследуется от: Stream
Поля:
  int _currentPosition
  int _currentArrayIndex
  List`1<Byte[]> _cachedBytes
  long _totalLength
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
  long TotalLength
Методы:
  void .ctor(SqlCachedBuffer sqlBuf)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Dispose(bool disposing)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void SetInternalPosition(long lPos, string argumentName)
  long get_TotalLength()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlStreamingXml
Наследуется от: object
Поля:
  int _columnOrdinal
  SqlDataReader _reader
  XmlReader _xmlReader
  XmlWriter _xmlWriter
  StringWriter _strWriter
  long _charsRemoved
Свойства:
  int ColumnOrdinal
Методы:
  void .ctor(int i, SqlDataReader reader)
  void Close()
  int get_ColumnOrdinal()
  long GetChars(long dataIndex, Char[] buffer, int bufferIndex, int length)
  void WriteXmlElement()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlTransaction
Наследуется от: DbTransaction
Поля:
  DiagnosticListener s_diagnosticListener
  IsolationLevel _isolationLevel
  SqlInternalTransaction _internalTransaction
  SqlConnection _connection
  bool _isFromAPI
Свойства:
  SqlConnection Connection
  DbConnection DbConnection
  SqlInternalTransaction InternalTransaction
  IsolationLevel IsolationLevel
  bool IsYukonPartialZombie
  bool IsZombied
  SqlStatistics Statistics
Методы:
  void .ctor(SqlInternalConnection internalConnection, SqlConnection con, IsolationLevel iso, SqlInternalTransaction internalTransaction)
  SqlConnection get_Connection()
  DbConnection get_DbConnection()
  SqlInternalTransaction get_InternalTransaction()
  IsolationLevel get_IsolationLevel()
  bool get_IsYukonPartialZombie()
  bool get_IsZombied()
  SqlStatistics get_Statistics()
  void Commit()
  void Dispose(bool disposing)
  void Rollback()
  void Rollback(string transactionName)
  void Save(string savePointName)
  void Zombie()
  void ZombieCheck()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.AsyncHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  Task CreateContinuationTask(Task task, Action onSuccess, SqlInternalConnectionTds connectionToDoom, Action`1<Exception> onFailure)
  Task CreateContinuationTask(Task task, Action`2<T1, T2> onSuccess, T1 arg1, T2 arg2, SqlInternalConnectionTds connectionToDoom, Action`1<Exception> onFailure)
  void ContinueTask(Task task, TaskCompletionSource`1<object> completion, Action onSuccess, SqlInternalConnectionTds connectionToDoom, Action`1<Exception> onFailure, Action onCancellation, Func`2<Exception, Exception> exceptionConverter, SqlConnection connectionToAbort)
  void WaitForCompletion(Task task, int timeout, Action onTimeout, bool rethrowExceptions)
  void SetTimeoutException(TaskCompletionSource`1<object> completion, int timeout, Func`1<Exception> exc, CancellationToken ctoken)
--------------------------------------------------
Класс: System.Data.SqlClient.SQL
Наследуется от: object
Поля:
  Byte[] AttentionHeader
  int SqlDependencyTimeoutDefault
  int SqlDependencyServerTimeout
  string SqlNotificationServiceDefault
  string SqlNotificationStoredProcedureDefault
Свойства:
Методы:
  Exception CannotGetDTCAddress()
  Exception InvalidInternalPacketSize(string str)
  Exception InvalidPacketSize()
  Exception InvalidPacketSizeValue()
  Exception InvalidSSPIPacketSize()
  Exception NullEmptyTransactionName()
  Exception UserInstanceFailoverNotCompatible()
  Exception InvalidSQLServerVersionUnknown()
  Exception SynchronousCallMayNotPend()
  Exception ConnectionLockedForBcpEvent()
  Exception InstanceFailure()
  Exception GlobalTransactionsNotEnabled()
  Exception UnknownSysTxIsolationLevel(IsolationLevel isolationLevel)
  Exception InvalidPartnerConfiguration(string server, string database)
  Exception MARSUnspportedOnConnection()
  Exception CannotModifyPropertyAsyncOperationInProgress(string property)
  Exception NonLocalSSEInstance()
  ArgumentOutOfRangeException NotSupportedEnumerationValue(Type type, int value)
  ArgumentOutOfRangeException NotSupportedCommandType(CommandType value)
  ArgumentOutOfRangeException NotSupportedIsolationLevel(IsolationLevel value)
  Exception OperationCancelled()
  Exception PendingBeginXXXExists()
  ArgumentOutOfRangeException InvalidSqlDependencyTimeout(string param)
  Exception NonXmlResult()
  Exception InvalidParameterTypeNameFormat()
  Exception InvalidParameterNameLength(string value)
  Exception PrecisionValueOutOfRange(byte precision)
  Exception ScaleValueOutOfRange(byte scale)
  Exception TimeScaleValueOutOfRange(byte scale)
  Exception InvalidSqlDbType(SqlDbType value)
  Exception UnsupportedTVPOutputParameter(ParameterDirection direction, string paramName)
  Exception DBNullNotSupportedForTVPValues(string paramName)
  Exception UnexpectedTypeNameForNonStructParams(string paramName)
  Exception ParameterInvalidVariant(string paramName)
  Exception MustSetTypeNameForParam(string paramType, string paramName)
  Exception NullSchemaTableDataTypeNotSupported(string columnName)
  Exception InvalidSchemaTableOrdinals()
  Exception EnumeratedRecordMetaDataChanged(string fieldName, int recordNumber)
  Exception EnumeratedRecordFieldCountChanged(int recordNumber)
  Exception InvalidTDSVersion()
  Exception ParsingError()
  Exception MoneyOverflow(string moneyValue)
  Exception SmallDateTimeOverflow(string datetime)
  Exception SNIPacketAllocationFailure()
  Exception TimeOverflow(string time)
  Exception InvalidRead()
  Exception NonBlobColumn(string columnName)
  Exception NonCharColumn(string columnName)
  Exception StreamNotSupportOnColumnType(string columnName)
  Exception TextReaderNotSupportOnColumnType(string columnName)
  Exception XmlReaderNotSupportOnColumnType(string columnName)
  Exception SqlCommandHasExistingSqlNotificationRequest()
  Exception SqlDepDefaultOptionsButNoStart()
  Exception SqlDependencyDatabaseBrokerDisabled()
  Exception SqlDependencyEventNoDuplicate()
  Exception SqlDependencyDuplicateStart()
  Exception SqlDependencyIdMismatch()
  Exception SqlDependencyNoMatchingServerStart()
  Exception SqlDependencyNoMatchingServerDatabaseStart()
  TransactionPromotionException PromotionFailed(Exception inner)
  Exception InvalidSqlDbTypeForConstructor(SqlDbType type)
  Exception NameTooLong(string parameterName)
  Exception InvalidSortOrder(SortOrder order)
  Exception MustSpecifyBothSortOrderAndOrdinal(SortOrder order, int ordinal)
  Exception UnsupportedColumnTypeForSqlProvider(string columnName, string typeName)
  Exception InvalidColumnMaxLength(string columnName, long maxLength)
  Exception InvalidColumnPrecScale()
  Exception NotEnoughColumnsInStructuredType()
  Exception DuplicateSortOrdinal(int sortOrdinal)
  Exception MissingSortOrdinal(int sortOrdinal)
  Exception SortOrdinalGreaterThanFieldCount(int columnOrdinal, int sortOrdinal)
  Exception IEnumerableOfSqlDataRecordHasNoRows()
  Exception BulkLoadMappingInaccessible()
  Exception BulkLoadMappingsNamesOrOrdinalsOnly()
  Exception BulkLoadCannotConvertValue(Type sourcetype, MetaType metatype, Exception e)
  Exception BulkLoadNonMatchingColumnMapping()
  Exception BulkLoadNonMatchingColumnName(string columnName)
  Exception BulkLoadNonMatchingColumnName(string columnName, Exception e)
  Exception BulkLoadStringTooLong()
  Exception BulkLoadInvalidVariantValue()
  Exception BulkLoadInvalidTimeout(int timeout)
  Exception BulkLoadExistingTransaction()
  Exception BulkLoadNoCollation()
  Exception BulkLoadConflictingTransactionOption()
  Exception BulkLoadLcidMismatch(int sourceLcid, string sourceColumnName, int destinationLcid, string destinationColumnName)
  Exception InvalidOperationInsideEvent()
  Exception BulkLoadMissingDestinationTable()
  Exception BulkLoadInvalidDestinationTable(string tableName, Exception inner)
  Exception BulkLoadBulkLoadNotAllowDBNull(string columnName)
  Exception BulkLoadPendingOperation()
  Exception InvalidTableDerivedPrecisionForTvp(string columnName, byte precision)
  Exception ConnectionDoomed()
  Exception OpenResultCountExceeded()
  Exception UnsupportedSysTxForGlobalTransactions()
  Exception MultiSubnetFailoverWithFailoverPartner(bool serverProvidedFailoverPartner, SqlInternalConnectionTds internalConnection)
  Exception MultiSubnetFailoverWithMoreThan64IPs()
  Exception MultiSubnetFailoverWithInstanceSpecified()
  Exception MultiSubnetFailoverWithNonTcpProtocol()
  Exception ROR_FailoverNotSupportedConnString()
  Exception ROR_FailoverNotSupportedServer(SqlInternalConnectionTds internalConnection)
  Exception ROR_RecursiveRoutingNotSupported(SqlInternalConnectionTds internalConnection)
  Exception ROR_UnexpectedRoutingInfo(SqlInternalConnectionTds internalConnection)
  Exception ROR_InvalidRoutingInfo(SqlInternalConnectionTds internalConnection)
  Exception ROR_TimeoutAfterRoutingInfo(SqlInternalConnectionTds internalConnection)
  SqlException CR_ReconnectTimeout()
  SqlException CR_ReconnectionCancelled()
  Exception CR_NextAttemptWillExceedQueryTimeout(SqlException innerException, Guid connectionId)
  Exception CR_EncryptionChanged(SqlInternalConnectionTds internalConnection)
  SqlException CR_AllAttemptsFailed(SqlException innerException, Guid connectionId)
  SqlException CR_NoCRAckAtReconnection(SqlInternalConnectionTds internalConnection)
  SqlException CR_TDSVersionNotPreserved(SqlInternalConnectionTds internalConnection)
  SqlException CR_UnrecoverableServer(Guid connectionId)
  SqlException CR_UnrecoverableClient(Guid connectionId)
  Exception StreamWriteNotSupported()
  Exception StreamReadNotSupported()
  Exception StreamSeekNotSupported()
  SqlNullValueException SqlNullValue()
  Exception SubclassMustOverride()
  Exception UnsupportedKeyword(string keyword)
  Exception NetworkLibraryKeywordNotSupported()
  Exception UnsupportedFeatureAndToken(SqlInternalConnectionTds internalConnection, string token)
  Exception BatchedUpdatesNotAvailableOnContextConnection()
  string GetSNIErrorMessage(int sniError)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SQLMessage
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string CultureIdError()
  string EncryptionNotSupportedByClient()
  string EncryptionNotSupportedByServer()
  string OperationCancelled()
  string SevereError()
  string SSPIInitializeError()
  string SSPIGenerateError()
  string SqlServerBrowserNotAccessible()
  string KerberosTicketMissingError()
  string Timeout()
  string Timeout_PreLogin_Begin()
  string Timeout_PreLogin_InitializeConnection()
  string Timeout_PreLogin_SendHandshake()
  string Timeout_PreLogin_ConsumeHandshake()
  string Timeout_Login_Begin()
  string Timeout_Login_ProcessConnectionAuth()
  string Timeout_PostLogin()
  string Timeout_FailoverInfo()
  string Timeout_RoutingDestination()
  string Duration_PreLogin_Begin(long PreLoginBeginDuration)
  string Duration_PreLoginHandshake(long PreLoginBeginDuration, long PreLoginHandshakeDuration)
  string Duration_Login_Begin(long PreLoginBeginDuration, long PreLoginHandshakeDuration, long LoginBeginDuration)
  string Duration_Login_ProcessConnectionAuth(long PreLoginBeginDuration, long PreLoginHandshakeDuration, long LoginBeginDuration, long LoginAuthDuration)
  string Duration_PostLogin(long PreLoginBeginDuration, long PreLoginHandshakeDuration, long LoginBeginDuration, long LoginAuthDuration, long PostLoginDuration)
  string UserInstanceFailure()
  string PreloginError()
  string ExClientConnectionId()
  string ExErrorNumberStateClass()
  string ExOriginalClientConnectionId()
  string ExRoutingDestination()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlServerEscapeHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  string EscapeIdentifier(string name)
  void EscapeIdentifier(StringBuilder builder, string name)
  string EscapeStringAsLiteral(string input)
  string MakeStringLiteral(string input)
--------------------------------------------------
Класс: System.Data.SqlClient.SysTxForGlobalTransactions
Наследуется от: object
Поля:
  Lazy`1<MethodInfo> _enlistPromotableSinglePhase
  Lazy`1<MethodInfo> _setDistributedTransactionIdentifier
  Lazy`1<MethodInfo> _getPromotedToken
Свойства:
  MethodInfo EnlistPromotableSinglePhase
  MethodInfo SetDistributedTransactionIdentifier
  MethodInfo GetPromotedToken
Методы:
  MethodInfo get_EnlistPromotableSinglePhase()
  MethodInfo get_SetDistributedTransactionIdentifier()
  MethodInfo get_GetPromotedToken()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsEnums
Наследуется от: object
Поля:
  string SQL_PROVIDER_NAME
  decimal SQL_SMALL_MONEY_MIN
  decimal SQL_SMALL_MONEY_MAX
  SqlDbType SmallVarBinary
  string TCP
  string NP
  string RPC
  string BV
  string ADSP
  string SPX
  string VIA
  string LPC
  string ADMIN
  string INIT_SSPI_PACKAGE
  string INIT_SESSION
  string CONNECTION_GET_SVR_USER
  string GEN_CLIENT_CONTEXT
  byte SOFTFLUSH
  byte HARDFLUSH
  byte IGNORE
  int HEADER_LEN
  int HEADER_LEN_FIELD_OFFSET
  int YUKON_HEADER_LEN
  int MARS_ID_OFFSET
  int HEADERTYPE_QNOTIFICATION
  int HEADERTYPE_MARS
  int HEADERTYPE_TRACE
  int SUCCEED
  int FAIL
  short TYPE_SIZE_LIMIT
  int MIN_PACKET_SIZE
  int DEFAULT_LOGIN_PACKET_SIZE
  int MAX_PRELOGIN_PAYLOAD_LENGTH
  int MAX_PACKET_SIZE
  int MAX_SERVER_USER_NAME
  byte MIN_ERROR_CLASS
  byte MAX_USER_CORRECTABLE_ERROR_CLASS
  byte FATAL_ERROR_CLASS
  byte MT_SQL
  byte MT_LOGIN
  byte MT_RPC
  byte MT_TOKENS
  byte MT_BINARY
  byte MT_ATTN
  byte MT_BULK
  byte MT_OPEN
  byte MT_CLOSE
  byte MT_ERROR
  byte MT_ACK
  byte MT_ECHO
  byte MT_LOGOUT
  byte MT_TRANS
  byte MT_OLEDB
  byte MT_LOGIN7
  byte MT_SSPI
  byte MT_PRELOGIN
  byte ST_EOM
  byte ST_AACK
  byte ST_IGNORE
  byte ST_BATCH
  byte ST_RESET_CONNECTION
  byte ST_RESET_CONNECTION_PRESERVE_TRANSACTION
  byte SQLCOLFMT
  byte SQLPROCID
  byte SQLCOLNAME
  byte SQLTABNAME
  byte SQLCOLINFO
  byte SQLALTNAME
  byte SQLALTFMT
  byte SQLERROR
  byte SQLINFO
  byte SQLRETURNVALUE
  byte SQLRETURNSTATUS
  byte SQLRETURNTOK
  byte SQLALTCONTROL
  byte SQLROW
  byte SQLNBCROW
  byte SQLALTROW
  byte SQLDONE
  byte SQLDONEPROC
  byte SQLDONEINPROC
  byte SQLOFFSET
  byte SQLORDER
  byte SQLDEBUG_CMD
  byte SQLLOGINACK
  byte SQLFEATUREEXTACK
  byte SQLSESSIONSTATE
  byte SQLENVCHANGE
  byte SQLSECLEVEL
  byte SQLROWCRC
  byte SQLCOLMETADATA
  byte SQLALTMETADATA
  byte SQLSSPI
  byte ENV_DATABASE
  byte ENV_LANG
  byte ENV_CHARSET
  byte ENV_PACKETSIZE
  byte ENV_LOCALEID
  byte ENV_COMPFLAGS
  byte ENV_COLLATION
  byte ENV_BEGINTRAN
  byte ENV_COMMITTRAN
  byte ENV_ROLLBACKTRAN
  byte ENV_ENLISTDTC
  byte ENV_DEFECTDTC
  byte ENV_LOGSHIPNODE
  byte ENV_PROMOTETRANSACTION
  byte ENV_TRANSACTIONMANAGERADDRESS
  byte ENV_TRANSACTIONENDED
  byte ENV_SPRESETCONNECTIONACK
  byte ENV_USERINSTANCE
  byte ENV_ROUTING
  int DONE_MORE
  int DONE_ERROR
  int DONE_INXACT
  int DONE_PROC
  int DONE_COUNT
  int DONE_ATTN
  int DONE_INPROC
  int DONE_RPCINBATCH
  int DONE_SRVERROR
  int DONE_FMTSENT
  byte FEATUREEXT_TERMINATOR
  byte FEATUREEXT_SRECOVERY
  byte FEATUREEXT_GLOBALTRANSACTIONS
  byte MAX_LOG_NAME
  byte MAX_PROG_NAME
  byte SEC_COMP_LEN
  byte MAX_PK_LEN
  byte MAX_NIC_SIZE
  byte SQLVARIANT_SIZE
  byte VERSION_SIZE
  int CLIENT_PROG_VER
  int YUKON_LOG_REC_FIXED_LEN
  int TEXT_TIME_STAMP_LEN
  int COLLATION_INFO_LEN
  int YUKON_MAJOR
  int KATMAI_MAJOR
  int DENALI_MAJOR
  int YUKON_INCREMENT
  int KATMAI_INCREMENT
  int DENALI_INCREMENT
  int YUKON_RTM_MINOR
  int KATMAI_MINOR
  int DENALI_MINOR
  int ORDER_68000
  int USE_DB_ON
  int INIT_DB_FATAL
  int SET_LANG_ON
  int INIT_LANG_FATAL
  int ODBC_ON
  int SSPI_ON
  int REPL_ON
  int READONLY_INTENT_ON
  byte SQLLenMask
  byte SQLFixedLen
  byte SQLVarLen
  byte SQLZeroLen
  byte SQLVarCnt
  byte SQLDifferentName
  byte SQLExpression
  byte SQLKey
  byte SQLHidden
  byte Nullable
  byte Identity
  byte Updatability
  byte ClrFixedLen
  byte IsColumnSet
  UInt32 VARLONGNULL
  int VARNULL
  int MAXSIZE
  byte FIXEDNULL
  ulong UDTNULL
  int SQLVOID
  int SQLTEXT
  int SQLVARBINARY
  int SQLINTN
  int SQLVARCHAR
  int SQLBINARY
  int SQLIMAGE
  int SQLCHAR
  int SQLINT1
  int SQLBIT
  int SQLINT2
  int SQLINT4
  int SQLMONEY
  int SQLDATETIME
  int SQLFLT8
  int SQLFLTN
  int SQLMONEYN
  int SQLDATETIMN
  int SQLFLT4
  int SQLMONEY4
  int SQLDATETIM4
  int SQLDECIMALN
  int SQLNUMERICN
  int SQLUNIQUEID
  int SQLBIGCHAR
  int SQLBIGVARCHAR
  int SQLBIGBINARY
  int SQLBIGVARBINARY
  int SQLBITN
  int SQLNCHAR
  int SQLNVARCHAR
  int SQLNTEXT
  int SQLUDT
  int AOPCNTB
  int AOPSTDEV
  int AOPSTDEVP
  int AOPVAR
  int AOPVARP
  int AOPCNT
  int AOPSUM
  int AOPAVG
  int AOPMIN
  int AOPMAX
  int AOPANY
  int AOPNOOP
  int SQLTIMESTAMP
  int MAX_NUMERIC_LEN
  int DEFAULT_NUMERIC_PRECISION
  int SPHINX_DEFAULT_NUMERIC_PRECISION
  int MAX_NUMERIC_PRECISION
  byte UNKNOWN_PRECISION_SCALE
  int SQLINT8
  int SQLVARIANT
  int SQLXMLTYPE
  int XMLUNICODEBOM
  Byte[] XMLUNICODEBOMBYTES
  int SQLTABLE
  int SQLDATE
  int SQLTIME
  int SQLDATETIME2
  int SQLDATETIMEOFFSET
  int DEFAULT_VARTIME_SCALE
  ulong SQL_PLP_NULL
  ulong SQL_PLP_UNKNOWNLEN
  int SQL_PLP_CHUNK_TERMINATOR
  ushort SQL_USHORTVARMAXLEN
  byte TVP_ROWCOUNT_ESTIMATE
  byte TVP_ROW_TOKEN
  byte TVP_END_TOKEN
  ushort TVP_NOMETADATA_TOKEN
  byte TVP_ORDER_UNIQUE_TOKEN
  int TVP_DEFAULT_COLUMN
  byte TVP_ORDERASC_FLAG
  byte TVP_ORDERDESC_FLAG
  byte TVP_UNIQUE_FLAG
  string SP_EXECUTESQL
  string SP_PREPEXEC
  string SP_PREPARE
  string SP_EXECUTE
  string SP_UNPREPARE
  string SP_PARAMS
  string SP_PARAMS_MANAGED
  string SP_PARAMS_MGD10
  ushort RPC_PROCID_CURSOR
  ushort RPC_PROCID_CURSOROPEN
  ushort RPC_PROCID_CURSORPREPARE
  ushort RPC_PROCID_CURSOREXECUTE
  ushort RPC_PROCID_CURSORPREPEXEC
  ushort RPC_PROCID_CURSORUNPREPARE
  ushort RPC_PROCID_CURSORFETCH
  ushort RPC_PROCID_CURSOROPTION
  ushort RPC_PROCID_CURSORCLOSE
  ushort RPC_PROCID_EXECUTESQL
  ushort RPC_PROCID_PREPARE
  ushort RPC_PROCID_EXECUTE
  ushort RPC_PROCID_PREPEXEC
  ushort RPC_PROCID_PREPEXECRPC
  ushort RPC_PROCID_UNPREPARE
  string TRANS_BEGIN
  string TRANS_COMMIT
  string TRANS_ROLLBACK
  string TRANS_IF_ROLLBACK
  string TRANS_SAVE
  string TRANS_READ_COMMITTED
  string TRANS_READ_UNCOMMITTED
  string TRANS_REPEATABLE_READ
  string TRANS_SERIALIZABLE
  string TRANS_SNAPSHOT
  byte SHILOH_RPCBATCHFLAG
  byte YUKON_RPCBATCHFLAG
  byte RPC_RECOMPILE
  byte RPC_NOMETADATA
  byte RPC_PARAM_BYREF
  byte RPC_PARAM_DEFAULT
  byte RPC_PARAM_IS_LOB_COOKIE
  string PARAM_OUTPUT
  int MAX_PARAMETER_NAME_LENGTH
  string FMTONLY_ON
  string FMTONLY_OFF
  string BROWSE_ON
  string BROWSE_OFF
  string TABLE
  int EXEC_THRESHOLD
  short TIMEOUT_EXPIRED
  short ENCRYPTION_NOT_SUPPORTED
  int LOGON_FAILED
  int PASSWORD_EXPIRED
  int IMPERSONATION_FAILED
  int P_TOKENTOOLONG
  UInt32 SNI_UNINITIALIZED
  UInt32 SNI_SUCCESS
  UInt32 SNI_ERROR
  UInt32 SNI_WAIT_TIMEOUT
  UInt32 SNI_SUCCESS_IO_PENDING
  short SNI_WSAECONNRESET
  UInt32 SNI_QUEUE_FULL
  UInt32 SNI_SSL_VALIDATE_CERTIFICATE
  UInt32 SNI_SSL_USE_SCHANNEL_CACHE
  UInt32 SNI_SSL_IGNORE_CHANNEL_BINDINGS
  string DEFAULT_ENGLISH_CODE_PAGE_STRING
  short DEFAULT_ENGLISH_CODE_PAGE_VALUE
  short CHARSET_CODE_PAGE_OFFSET
  int MAX_SERVERNAME
  ushort SELECT
  ushort INSERT
  ushort DELETE
  ushort UPDATE
  ushort ABORT
  ushort BEGINXACT
  ushort ENDXACT
  ushort BULKINSERT
  ushort OPENCURSOR
  ushort MERGE
  ushort MAXLEN_HOSTNAME
  ushort MAXLEN_USERNAME
  ushort MAXLEN_PASSWORD
  ushort MAXLEN_APPNAME
  ushort MAXLEN_SERVERNAME
  ushort MAXLEN_CLIENTINTERFACE
  ushort MAXLEN_LANGUAGE
  ushort MAXLEN_DATABASE
  ushort MAXLEN_ATTACHDBFILE
  ushort MAXLEN_NEWPASSWORD
  UInt16[] CODE_PAGE_FROM_SORT_ID
  Int64[] TICKS_FROM_SCALE
  int WHIDBEY_DATE_LENGTH
  Int32[] WHIDBEY_TIME_LENGTH
  Int32[] WHIDBEY_DATETIME2_LENGTH
  Int32[] WHIDBEY_DATETIMEOFFSET_LENGTH
Свойства:
Методы:
  string GetSniContextEnumName(SniContext sniContext)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SniContext
Наследуется от: Enum
Поля:
  int value__
  SniContext Undefined
  SniContext Snix_Connect
  SniContext Snix_PreLoginBeforeSuccessfulWrite
  SniContext Snix_PreLogin
  SniContext Snix_LoginSspi
  SniContext Snix_ProcessSspi
  SniContext Snix_Login
  SniContext Snix_EnableMars
  SniContext Snix_AutoEnlist
  SniContext Snix_GetMarsSession
  SniContext Snix_Execute
  SniContext Snix_Read
  SniContext Snix_Close
  SniContext Snix_SendRows
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParameterSetter
Наследуется от: SmiTypedGetterSetter
Поля:
  TdsRecordBufferSetter _target
Свойства:
  bool CanGet
  bool CanSet
Методы:
  void .ctor(TdsParserStateObject stateObj, SmiMetaData md)
  bool get_CanGet()
  bool get_CanSet()
  SmiTypedGetterSetter GetTypedGetterSetter(SmiEventSink sink, int ordinal)
  void SetDBNull(SmiEventSink sink, int ordinal)
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParser
Наследуется от: object
Поля:
  TdsParserStateObject _physicalStateObj
  TdsParserStateObject _pMarsPhysicalConObj
  int constBinBufferSize
  int constTextBufferSize
  TdsParserState _state
  string _server
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _fResetConnection
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _fPreserveTransaction
  SqlCollation _defaultCollation
  int _defaultCodePage
  int _defaultLCID
  Encoding _defaultEncoding
  EncryptionOptions s_sniSupportedEncryptionOption
  EncryptionOptions _encryptionOption
  SqlInternalTransaction _currentTransaction
  SqlInternalTransaction _pendingTransaction
  long _retainedTransactionId
  int _nonTransactedOpenResultCount
  SqlInternalConnectionTds _connHandler
  bool _fMARS
  bool _loginWithFailover
  AutoResetEvent _resetConnectionEvent
  TdsParserSessionPool _sessionPool
  bool _isYukon
  bool _isKatmai
  bool _isDenali
  Byte[] _sniSpnBuffer
  SqlStatistics _statistics
  bool _statisticsIsInTransaction
  Byte[] s_nicAddress
  UInt32 modreq(System.Runtime.CompilerServices.IsVolatile) s_maxSSPILength
  Byte[] s_longDataHeader
  object s_tdsParserLock
  Byte[] s_xmlMetadataSubstituteSequence
  int GUID_SIZE
  bool _asyncWrite
  IEnumerable`1<SqlDataRecord> s_tvpEmptyValue
  ulong _indeterminateSize
Свойства:
  SqlInternalConnectionTds Connection
  SqlInternalTransaction CurrentTransaction
  int DefaultLCID
  EncryptionOptions EncryptionOptions
  bool IsKatmaiOrNewer
  bool MARSOn
  SqlInternalTransaction PendingTransaction
  string Server
  TdsParserState State
  SqlStatistics Statistics
Методы:
  void PostReadAsyncForMars()
  void LoadSSPILibrary()
  void WaitForSSLHandShakeToComplete(UInt32& error)
  SNIErrorDetails GetSniErrorDetails()
  void .ctor(bool MARS, bool fAsynchronous)
  SqlInternalConnectionTds get_Connection()
  SqlInternalTransaction get_CurrentTransaction()
  void set_CurrentTransaction(SqlInternalTransaction value)
  int get_DefaultLCID()
  EncryptionOptions get_EncryptionOptions()
  void set_EncryptionOptions(EncryptionOptions value)
  bool get_IsKatmaiOrNewer()
  bool get_MARSOn()
  SqlInternalTransaction get_PendingTransaction()
  void set_PendingTransaction(SqlInternalTransaction value)
  string get_Server()
  TdsParserState get_State()
  void set_State(TdsParserState value)
  SqlStatistics get_Statistics()
  void set_Statistics(SqlStatistics value)
  int IncrementNonTransactedOpenResultCount()
  void DecrementNonTransactedOpenResultCount()
  void ProcessPendingAck(TdsParserStateObject stateObj)
  void Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, bool ignoreSniOpenTimeout, long timerExpire, bool encrypt, bool trustServerCert, bool integratedSecurity, bool withFailover)
  void RemoveEncryption()
  void EnableMars()
  TdsParserStateObject CreateSession()
  TdsParserStateObject GetSession(object owner)
  void PutSession(TdsParserStateObject session)
  void SendPreLoginHandshake(Byte[] instanceName, bool encrypt)
  PreLoginHandshakeStatus ConsumePreLoginHandshake(bool encrypt, bool trustServerCert, bool integratedSecurity, Boolean& marsCapable)
  void Deactivate(bool connectionIsDoomed)
  void Disconnect()
  void FireInfoMessageEvent(SqlConnection connection, TdsParserStateObject stateObj, SqlError error)
  void DisconnectTransaction(SqlInternalTransaction internalTransaction)
  void RollbackOrphanedAPITransactions()
  void ThrowExceptionAndWarning(TdsParserStateObject stateObj, bool callerHasConnectionLock, bool asyncClose)
  SqlError ProcessSNIError(TdsParserStateObject stateObj)
  void CheckResetConnection(TdsParserStateObject stateObj)
  void WriteShort(int v, TdsParserStateObject stateObj)
  void WriteUnsignedShort(ushort us, TdsParserStateObject stateObj)
  void WriteUnsignedInt(UInt32 i, TdsParserStateObject stateObj)
  void WriteInt(int v, TdsParserStateObject stateObj)
  void WriteFloat(float v, TdsParserStateObject stateObj)
  void WriteLong(long v, TdsParserStateObject stateObj)
  void WritePartialLong(long v, int length, TdsParserStateObject stateObj)
  void WriteUnsignedLong(ulong uv, TdsParserStateObject stateObj)
  void WriteDouble(double v, TdsParserStateObject stateObj)
  void PrepareResetConnection(bool preserveTransaction)
  bool Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
  bool IsValidTdsToken(byte token)
  bool TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
  bool TryProcessEnvChange(int tokenLength, TdsParserStateObject stateObj, SqlEnvChange[]& sqlEnvChange)
  bool TryReadTwoBinaryFields(SqlEnvChange env, TdsParserStateObject stateObj)
  bool TryReadTwoStringFields(SqlEnvChange env, TdsParserStateObject stateObj)
  bool TryProcessDone(SqlCommand cmd, SqlDataReader reader, RunBehavior& run, TdsParserStateObject stateObj)
  void ProcessSqlStatistics(ushort curCmd, ushort status, int count)
  bool TryProcessFeatureExtAck(TdsParserStateObject stateObj)
  bool TryProcessSessionState(TdsParserStateObject stateObj, int length, SessionData sdata)
  bool TryProcessLoginAck(TdsParserStateObject stateObj, SqlLoginAck& sqlLoginAck)
  bool TryProcessError(byte token, TdsParserStateObject stateObj, SqlError& error)
  bool TryProcessReturnValue(int length, TdsParserStateObject stateObj, SqlReturnValue& returnValue)
  bool TryProcessCollation(TdsParserStateObject stateObj, SqlCollation& collation)
  void WriteCollation(SqlCollation collation, TdsParserStateObject stateObj)
  int GetCodePage(SqlCollation collation, TdsParserStateObject stateObj)
  void DrainData(TdsParserStateObject stateObj)
  void ThrowUnsupportedCollationEncountered(TdsParserStateObject stateObj)
  bool TryProcessAltMetaData(int cColumns, TdsParserStateObject stateObj, _SqlMetaDataSet& metaData)
  bool TryProcessMetaData(int cColumns, TdsParserStateObject stateObj, _SqlMetaDataSet& metaData)
  bool IsVarTimeTds(byte tdsType)
  bool TryCommonProcessMetaData(TdsParserStateObject stateObj, _SqlMetaData col)
  bool TryProcessTableName(int length, TdsParserStateObject stateObj, MultiPartTableName[]& multiPartTableNames)
  bool TryProcessOneTable(TdsParserStateObject stateObj, Int32& length, MultiPartTableName& multiPartTableName)
  bool TryProcessColInfo(_SqlMetaDataSet columns, SqlDataReader reader, TdsParserStateObject stateObj, _SqlMetaDataSet& metaData)
  bool TryProcessColumnHeader(SqlMetaDataPriv col, TdsParserStateObject stateObj, int columnOrdinal, Boolean& isNull, UInt64& length)
  bool TryProcessColumnHeaderNoNBC(SqlMetaDataPriv col, TdsParserStateObject stateObj, Boolean& isNull, UInt64& length)
  bool TryGetAltRowId(TdsParserStateObject stateObj, Int32& id)
  bool TryProcessRow(_SqlMetaDataSet columns, Object[] buffer, Int32[] map, TdsParserStateObject stateObj)
  object GetNullSqlValue(SqlBuffer nullVal, SqlMetaDataPriv md)
  bool TrySkipRow(_SqlMetaDataSet columns, TdsParserStateObject stateObj)
  bool TrySkipRow(_SqlMetaDataSet columns, int startCol, TdsParserStateObject stateObj)
  bool TrySkipValue(SqlMetaDataPriv md, int columnOrdinal, TdsParserStateObject stateObj)
  bool IsNull(MetaType mt, ulong length)
  bool TryReadSqlStringValue(SqlBuffer value, byte type, int length, Encoding encoding, bool isPlp, TdsParserStateObject stateObj)
  bool TryReadSqlValue(SqlBuffer value, SqlMetaDataPriv md, int length, TdsParserStateObject stateObj)
  bool TryReadSqlDateTime(SqlBuffer value, byte tdsType, int length, byte scale, TdsParserStateObject stateObj)
  bool TryReadSqlValueInternal(SqlBuffer value, byte tdsType, int length, TdsParserStateObject stateObj)
  bool TryReadSqlVariant(SqlBuffer value, int lenTotal, TdsParserStateObject stateObj)
  Task WriteSqlVariantValue(object value, int length, int offset, TdsParserStateObject stateObj, bool canAccumulate)
  Task WriteSqlVariantDataRowValue(object value, TdsParserStateObject stateObj, bool canAccumulate)
  void WriteSqlVariantHeader(int length, byte tdstype, byte propbytes, TdsParserStateObject stateObj)
  void WriteSqlVariantDateTime2(DateTime value, TdsParserStateObject stateObj)
  void WriteSqlVariantDate(DateTime value, TdsParserStateObject stateObj)
  void WriteSqlMoney(SqlMoney value, int length, TdsParserStateObject stateObj)
  void WriteCurrency(decimal value, int length, TdsParserStateObject stateObj)
  void WriteDate(DateTime value, TdsParserStateObject stateObj)
  void WriteTime(TimeSpan value, byte scale, int length, TdsParserStateObject stateObj)
  void WriteDateTime2(DateTime value, byte scale, int length, TdsParserStateObject stateObj)
  void WriteDateTimeOffset(DateTimeOffset value, byte scale, int length, TdsParserStateObject stateObj)
  bool TryReadSqlDecimal(SqlBuffer value, int length, byte precision, byte scale, TdsParserStateObject stateObj)
  bool TryReadDecimalBits(int length, TdsParserStateObject stateObj, Int32[]& bits)
  SqlDecimal AdjustSqlDecimalScale(SqlDecimal d, int newScale)
  decimal AdjustDecimalScale(decimal value, int newScale)
  void WriteSqlDecimal(SqlDecimal d, TdsParserStateObject stateObj)
  void WriteDecimal(decimal value, TdsParserStateObject stateObj)
  void WriteIdentifier(string s, TdsParserStateObject stateObj)
  void WriteIdentifierWithShortLength(string s, TdsParserStateObject stateObj)
  Task WriteString(string s, TdsParserStateObject stateObj, bool canAccumulate)
  Task WriteCharArray(Char[] carr, int length, int offset, TdsParserStateObject stateObj, bool canAccumulate)
  Task WriteString(string s, int length, int offset, TdsParserStateObject stateObj, bool canAccumulate)
  void CopyCharsToBytes(Char[] source, int sourceOffset, Byte[] dest, int destOffset, int charLength)
  void CopyStringToBytes(string source, int sourceOffset, Byte[] dest, int destOffset, int charLength)
  Task WriteEncodingChar(string s, Encoding encoding, TdsParserStateObject stateObj, bool canAccumulate)
  Task WriteEncodingChar(string s, int numChars, int offset, Encoding encoding, TdsParserStateObject stateObj, bool canAccumulate)
  int GetEncodingCharLength(string value, int numChars, int charOffset, Encoding encoding)
  bool TryGetDataLength(SqlMetaDataPriv colmeta, TdsParserStateObject stateObj, UInt64& length)
  bool TryGetTokenLength(byte token, TdsParserStateObject stateObj, Int32& tokenLength)
  void ProcessAttention(TdsParserStateObject stateObj)
  int StateValueLength(int dataLen)
  int WriteSessionRecoveryFeatureRequest(SessionData reconnectData, bool write)
  int WriteGlobalTransactionsFeatureRequest(bool write)
  void TdsLogin(SqlLogin rec, FeatureExtension requestedFeatures, SessionData recoverySessionData)
  void SSPIData(Byte[] receivedBuff, UInt32 receivedLength, Byte[]& sendBuff, UInt32& sendLength)
  void SNISSPIData(Byte[] receivedBuff, UInt32 receivedLength, Byte[]& sendBuff, UInt32& sendLength)
  void ProcessSSPI(int receivedLength)
  void SSPIError(string error, string procedure)
  Byte[] GetDTCAddress(int timeout, TdsParserStateObject stateObj)
  void PropagateDistributedTransaction(Byte[] buffer, int timeout, TdsParserStateObject stateObj)
  SqlDataReader TdsExecuteTransactionManagerRequest(Byte[] buffer, TransactionManagerRequestType request, string transactionName, TransactionManagerIsolationLevel isoLevel, int timeout, SqlInternalTransaction transaction, TdsParserStateObject stateObj, bool isDelegateControlRequest)
  void FailureCleanup(TdsParserStateObject stateObj, Exception e)
  Task TdsExecuteSQLBatch(string text, int timeout, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, bool sync, bool callerHasConnectionLock)
  Task TdsExecuteRPC(_SqlRPC[] rpcArray, int timeout, bool inSchema, SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj, bool isCommandProc, bool sync, TaskCompletionSource`1<object> completion, int startRpc, int startParam)
  void FinalizeExecuteRPC(TdsParserStateObject stateObj)
  void TdsExecuteRPC_OnFailure(Exception exc, TdsParserStateObject stateObj)
  void ExecuteFlushTaskCallback(Task tsk, TdsParserStateObject stateObj, TaskCompletionSource`1<object> completion, bool releaseConnectionLock)
  void WriteParameterName(string parameterName, TdsParserStateObject stateObj)
  void WriteSmiParameter(SqlParameter param, int paramIndex, bool sendDefault, TdsParserStateObject stateObj)
  void WriteSmiParameterMetaData(SmiParameterMetaData metaData, bool sendDefault, TdsParserStateObject stateObj)
  void WriteSmiTypeInfo(SmiExtendedMetaData metaData, TdsParserStateObject stateObj)
  void WriteTvpTypeInfo(SmiExtendedMetaData metaData, TdsParserStateObject stateObj)
  void WriteTvpColumnMetaData(SmiExtendedMetaData md, bool isDefault, TdsParserStateObject stateObj)
  void WriteTvpOrderUnique(SmiExtendedMetaData metaData, TdsParserStateObject stateObj)
  Task WriteBulkCopyDone(TdsParserStateObject stateObj)
  void WriteBulkCopyMetaData(_SqlMetaDataSet metadataCollection, int count, TdsParserStateObject stateObj)
  Task WriteBulkCopyValue(object value, SqlMetaDataPriv metadata, TdsParserStateObject stateObj, bool isSqlType, bool isDataFeed, bool isNull)
  Task WriteBulkCopyValueSetupContinuation(Task internalWriteTask, Encoding saveEncoding, SqlCollation saveCollation, int saveCodePage, int saveLCID)
  void WriteMarsHeaderData(TdsParserStateObject stateObj, SqlInternalTransaction transaction)
  int GetNotificationHeaderSize(SqlNotificationRequest notificationRequest)
  void WriteQueryNotificationHeaderData(SqlNotificationRequest notificationRequest, TdsParserStateObject stateObj)
  void WriteRPCBatchHeaders(TdsParserStateObject stateObj, SqlNotificationRequest notificationRequest)
  void WriteTokenLength(byte token, int length, TdsParserStateObject stateObj)
  bool IsBOMNeeded(MetaType type, object value)
  Task GetTerminationTask(Task unterminatedWriteTask, object value, MetaType type, int actualLength, TdsParserStateObject stateObj, bool isDataFeed)
  Task WriteSqlValue(object value, MetaType type, int actualLength, int codePageByteSize, int offset, TdsParserStateObject stateObj)
  Task WriteUnterminatedSqlValue(object value, MetaType type, int actualLength, int codePageByteSize, int offset, TdsParserStateObject stateObj)
  Task WriteXmlFeed(XmlDataFeed feed, TdsParserStateObject stateObj, bool needBom, Encoding encoding, int size)
  Task WriteTextFeed(TextDataFeed feed, Encoding encoding, bool needBom, TdsParserStateObject stateObj, int size)
  Task WriteStreamFeed(StreamDataFeed feed, TdsParserStateObject stateObj, int len)
  Task NullIfCompletedWriteTask(Task task)
  Task WriteValue(object value, MetaType type, byte scale, int actualLength, int encodingByteSize, int offset, TdsParserStateObject stateObj, int paramSize, bool isDataFeed)
  Task WriteUnterminatedValue(object value, MetaType type, byte scale, int actualLength, int encodingByteSize, int offset, TdsParserStateObject stateObj, int paramSize, bool isDataFeed)
  void WriteParameterVarLen(MetaType type, int size, bool isNull, TdsParserStateObject stateObj, bool unknownLength)
  bool TryReadPlpUnicodeCharsChunk(Char[] buff, int offst, int len, TdsParserStateObject stateObj, Int32& charsRead)
  int ReadPlpUnicodeChars(Char[]& buff, int offst, int len, TdsParserStateObject stateObj)
  bool TryReadPlpUnicodeChars(Char[]& buff, int offst, int len, TdsParserStateObject stateObj, Int32& totalCharsRead)
  int ReadPlpAnsiChars(Char[]& buff, int offst, int len, SqlMetaDataPriv metadata, TdsParserStateObject stateObj)
  ulong SkipPlpValue(ulong cb, TdsParserStateObject stateObj)
  bool TrySkipPlpValue(ulong cb, TdsParserStateObject stateObj, UInt64& totalBytesSkipped)
  ulong PlpBytesLeft(TdsParserStateObject stateObj)
  bool TryPlpBytesLeft(TdsParserStateObject stateObj, UInt64& left)
  ulong PlpBytesTotalLength(TdsParserStateObject stateObj)
  bool TryProcessUDTMetaData(SqlMetaDataPriv metaData, TdsParserStateObject stateObj)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNIErrorDetails
Наследуется от: ValueType
Поля:
  string errorMessage
  UInt32 nativeError
  UInt32 sniErrorNumber
  int provider
  UInt32 lineNumber
  string function
  Exception exception
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.CallbackType
Наследуется от: Enum
Поля:
  int value__
  CallbackType Read
  CallbackType Write
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.EncryptionOptions
Наследуется от: Enum
Поля:
  int value__
  EncryptionOptions OFF
  EncryptionOptions ON
  EncryptionOptions NOT_SUP
  EncryptionOptions REQ
  EncryptionOptions LOGIN
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.PreLoginHandshakeStatus
Наследуется от: Enum
Поля:
  int value__
  PreLoginHandshakeStatus Successful
  PreLoginHandshakeStatus InstanceFailure
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.PreLoginOptions
Наследуется от: Enum
Поля:
  int value__
  PreLoginOptions VERSION
  PreLoginOptions ENCRYPT
  PreLoginOptions INSTANCE
  PreLoginOptions THREADID
  PreLoginOptions MARS
  PreLoginOptions TRACEID
  PreLoginOptions NUMOPT
  PreLoginOptions LASTOPT
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.RunBehavior
Наследуется от: Enum
Поля:
  int value__
  RunBehavior UntilDone
  RunBehavior ReturnImmediately
  RunBehavior Clean
  RunBehavior Attention
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParserState
Наследуется от: Enum
Поля:
  int value__
  TdsParserState Closed
  TdsParserState OpenNotLoggedIn
  TdsParserState OpenLoggedIn
  TdsParserState Broken
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCollation
Наследуется от: object
Поля:
  UInt32 IgnoreCase
  UInt32 IgnoreNonSpace
  UInt32 IgnoreWidth
  UInt32 IgnoreKanaType
  UInt32 BinarySort
  UInt32 MaskLcid
  int LcidVersionBitOffset
  UInt32 MaskLcidVersion
  UInt32 MaskCompareOpt
  UInt32 info
  byte sortId
Свойства:
  int LCID
  SqlCompareOptions SqlCompareOptions
Методы:
  int FirstSupportedCollationVersion(int lcid)
  int get_LCID()
  void set_LCID(int value)
  SqlCompareOptions get_SqlCompareOptions()
  void set_SqlCompareOptions(SqlCompareOptions value)
  bool AreSame(SqlCollation a, SqlCollation b)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.RoutingInfo
Наследуется от: object
Поля:
  byte <Protocol>k__BackingField
  ushort <Port>k__BackingField
  string <ServerName>k__BackingField
Свойства:
  byte Protocol
  ushort Port
  string ServerName
Методы:
  byte get_Protocol()
  void set_Protocol(byte value)
  ushort get_Port()
  void set_Port(ushort value)
  string get_ServerName()
  void set_ServerName(string value)
  void .ctor(byte protocol, ushort port, string servername)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlEnvChange
Наследуется от: object
Поля:
  byte type
  byte oldLength
  int newLength
  int length
  string newValue
  string oldValue
  Byte[] newBinValue
  Byte[] oldBinValue
  long newLongValue
  long oldLongValue
  SqlCollation newCollation
  SqlCollation oldCollation
  RoutingInfo newRoutingInfo
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlLogin
Наследуется от: object
Поля:
  int timeout
  bool userInstance
  string hostName
  string userName
  string password
  string applicationName
  string serverName
  string language
  string database
  string attachDBFilename
  bool useReplication
  bool useSSPI
  int packetSize
  bool readOnlyIntent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlLoginAck
Наследуется от: object
Поля:
  byte majorVersion
  byte minorVersion
  short buildNum
  UInt32 tdsVersion
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient._SqlMetaData
Наследуется от: SqlMetaDataPriv
Поля:
  string column
  string baseColumn
  MultiPartTableName multiPartTableName
  int ordinal
  byte updatability
  byte tableNum
  bool isDifferentName
  bool isKey
  bool isHidden
  bool isExpression
  bool isIdentity
  bool isColumnSet
  byte op
  ushort operand
Свойства:
  string serverName
  string catalogName
  string schemaName
  string tableName
  bool IsNewKatmaiDateTimeType
  bool IsLargeUdt
Методы:
  void .ctor(int ordinal)
  string get_serverName()
  string get_catalogName()
  string get_schemaName()
  string get_tableName()
  bool get_IsNewKatmaiDateTimeType()
  bool get_IsLargeUdt()
  object Clone()
--------------------------------------------------
Класс: System.Data.SqlClient._SqlMetaDataSet
Наследуется от: object
Поля:
  ushort id
  Int32[] indexMap
  int visibleColumns
  DataTable schemaTable
  _SqlMetaData[] _metaDataArray
  ReadOnlyCollection`1<DbColumn> dbColumnSchema
Свойства:
  int Length
  _SqlMetaData Item
Методы:
  void .ctor(int count)
  void .ctor(_SqlMetaDataSet original)
  int get_Length()
  _SqlMetaData get_Item(int index)
  void set_Item(int index, _SqlMetaData value)
  object Clone()
--------------------------------------------------
Класс: System.Data.SqlClient._SqlMetaDataSetCollection
Наследуется от: object
Поля:
  List`1<_SqlMetaDataSet> _altMetaDataSetArray
  _SqlMetaDataSet metaDataSet
Свойства:
Методы:
  void .ctor()
  void SetAltMetaData(_SqlMetaDataSet altMetaDataSet)
  _SqlMetaDataSet GetAltMetaData(int id)
  object Clone()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlMetaDataPriv
Наследуется от: object
Поля:
  SqlDbType type
  byte tdsType
  byte precision
  byte scale
  int length
  SqlCollation collation
  int codePage
  Encoding encoding
  bool isNullable
  string udtDatabaseName
  string udtSchemaName
  string udtTypeName
  string udtAssemblyQualifiedName
  string xmlSchemaCollectionDatabase
  string xmlSchemaCollectionOwningSchema
  string xmlSchemaCollectionName
  MetaType metaType
Свойства:
Методы:
  void .ctor()
  void CopyFrom(SqlMetaDataPriv original)
--------------------------------------------------
Класс: System.Data.SqlClient._SqlRPC
Наследуется от: object
Поля:
  string rpcName
  ushort ProcID
  ushort options
  SqlParameter[] parameters
  Byte[] paramoptions
  Nullable`1<int> recordsAffected
  int cumulativeRecordsAffected
  int errorsIndexStart
  int errorsIndexEnd
  SqlErrorCollection errors
  int warningsIndexStart
  int warningsIndexEnd
  SqlErrorCollection warnings
Свойства:
Методы:
  string GetCommandTextOrRpcName()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlReturnValue
Наследуется от: SqlMetaDataPriv
Поля:
  string parameter
  SqlBuffer value
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.MultiPartTableName
Наследуется от: ValueType
Поля:
  string _multipartName
  string _serverName
  string _catalogName
  string _schemaName
  string _tableName
  MultiPartTableName Null
Свойства:
  string ServerName
  string CatalogName
  string SchemaName
  string TableName
Методы:
  void .ctor(String[] parts)
  void .ctor(string multipartName)
  string get_ServerName()
  void set_ServerName(string value)
  string get_CatalogName()
  void set_CatalogName(string value)
  string get_SchemaName()
  void set_SchemaName(string value)
  string get_TableName()
  void set_TableName(string value)
  void ParseMultipartName()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParserSessionPool
Наследуется от: object
Поля:
  int MaxInactiveCount
  TdsParser _parser
  List`1<TdsParserStateObject> _cache
  int _cachedCount
  TdsParserStateObject[] _freeStateObjects
  int _freeStateObjectCount
Свойства:
  bool IsDisposed
  int ActiveSessionsCount
Методы:
  void .ctor(TdsParser parser)
  bool get_IsDisposed()
  void Deactivate()
  void Dispose()
  TdsParserStateObject GetSession(object owner)
  void PutSession(TdsParserStateObject session)
  int get_ActiveSessionsCount()
--------------------------------------------------
Класс: System.Data.SqlClient.LastIOTimer
Наследуется от: object
Поля:
  long _value
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParserStateObject
Наследуется от: object
Поля:
  int AttentionTimeoutSeconds
  long CheckConnectionWindow
  TdsParser _parser
  WeakReference _owner
  SharedState _readerState
  int _activateCount
  int _inputHeaderLen
  int _outputHeaderLen
  Byte[] _outBuff
  int _outBytesUsed
  Byte[] _inBuff
  int _inBytesUsed
  int _inBytesRead
  int _inBytesPacket
  byte _outputMessageType
  byte _messageStatus
  byte _outputPacketNumber
  bool _pendingData
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _fResetEventOwned
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _fResetConnectionSent
  bool _errorTokenReceived
  bool _bulkCopyOpperationInProgress
  bool _bulkCopyWriteTimeout
  object _writePacketLockObject
  int _pendingCallbacks
  long _timeoutMilliseconds
  long _timeoutTime
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _attentionSent
  bool _attentionReceived
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _attentionSending
  bool _internalTimeout
  LastIOTimer _lastSuccessfulIOTimer
  bool _cancelled
  int _waitForCancellationLockPollTimeout
  WeakReference _cancellationOwner
  bool _hasOpenResult
  SqlInternalTransaction _executedUnderTransaction
  ulong _longlen
  ulong _longlenleft
  Int32[] _decimalBits
  Byte[] _bTmp
  int _bTmpRead
  Decoder _plpdecoder
  bool _accumulateInfoEvents
  List`1<SqlError> _pendingInfoEvents
  Byte[] _partialHeaderBuffer
  int _partialHeaderBytesRead
  _SqlMetaDataSet _cleanupMetaData
  _SqlMetaDataSetCollection _cleanupAltMetaDataSetArray
  bool _receivedColMetaData
  SniContext _sniContext
  bool _bcpLock
  NullBitmap _nullBitmapInfo
  TaskCompletionSource`1<object> _networkPacketTaskSource
  Timer _networkPacketTimeout
  bool _syncOverAsync
  bool _snapshotReplay
  StateSnapshot _snapshot
  ExecutionContext _executionContext
  bool _asyncReadWithoutSnapshot
  SqlErrorCollection _errors
  SqlErrorCollection _warnings
  object _errorAndWarningsLock
  bool _hasErrorOrWarning
  SqlErrorCollection _preAttentionErrors
  SqlErrorCollection _preAttentionWarnings
  TaskCompletionSource`1 modreq(System.Runtime.CompilerServices.IsVolatile) _writeCompletionSource
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _asyncWriteCount
  Exception modreq(System.Runtime.CompilerServices.IsVolatile) _delayedWriteAsyncCallbackException
  int _readingCount
Свойства:
  bool BcpLock
  bool HasOpenResult
  bool IsOrphaned
  object Owner
  bool HasOwner
  TdsParser Parser
  SniContext SniContext
  UInt32 Status
  object SessionHandle
  bool TimeoutHasExpired
  long TimeoutTime
  bool HasErrorOrWarning
  int ErrorCount
  int WarningCount
  object EmptyReadPacket
Методы:
  void .ctor(TdsParser parser)
  void .ctor(TdsParser parser, TdsParserStateObject physicalConnection, bool async)
  bool get_BcpLock()
  void set_BcpLock(bool value)
  bool get_HasOpenResult()
  bool get_IsOrphaned()
  void set_Owner(object value)
  UInt32 DisabeSsl()
  bool get_HasOwner()
  TdsParser get_Parser()
  UInt32 EnableMars(UInt32& info)
  SniContext get_SniContext()
  void set_SniContext(SniContext value)
  UInt32 get_Status()
  object get_SessionHandle()
  bool get_TimeoutHasExpired()
  long get_TimeoutTime()
  void set_TimeoutTime(long value)
  int GetTimeoutRemaining()
  bool TryStartNewRow(bool isNullCompressed, int nullBitmapColumnsCount)
  bool IsRowTokenReady()
  bool IsNullCompressionBitSet(int columnOrdinal)
  void Activate(object owner)
  void Cancel(object caller)
  void CancelRequest()
  void CheckSetResetConnectionState(UInt32 error, CallbackType callbackType)
  void CloseSession()
  void ResetCancelAndProcessAttention()
  void CreatePhysicalSNIHandle(string serverName, bool ignoreSniOpenTimeout, long timerExpire, Byte[]& instanceName, Byte[]& spnBuffer, bool flushCache, bool async, bool fParallel, bool isIntegratedSecurity)
  UInt32 SniGetConnectionId(Guid& clientConnectionId)
  bool IsFailedHandle()
  void CreateSessionHandle(TdsParserStateObject physicalConnection, bool async)
  void FreeGcHandle(int remaining, bool release)
  UInt32 EnableSsl(UInt32& info)
  UInt32 WaitForSSLHandShakeToComplete()
  void Dispose()
  void DisposePacketCache()
  bool IsPacketEmpty(object readPacket)
  object ReadSyncOverAsync(int timeoutRemaining, bool isMarsOn, UInt32& error)
  object ReadAsync(UInt32& error, Object& handle)
  UInt32 CheckConnection()
  UInt32 SetConnectionBufferSize(UInt32& unsignedPacketSize)
  void ReleasePacket(object syncReadPacket)
  UInt32 SNIPacketGetData(object packet, Byte[] _inBuff, UInt32& dataSize)
  object GetResetWritePacket()
  void ClearAllWritePackets()
  object AddPacketToPendingList(object packet)
  void RemovePacketFromPendingList(object pointer)
  UInt32 GenerateSspiClientContext(Byte[] receivedBuff, UInt32 receivedLength, Byte[]& sendBuff, UInt32& sendLength, Byte[] _sniSpnBuffer)
  bool Deactivate()
  void RemoveOwner()
  void DecrementOpenResultCount()
  int DecrementPendingCallbacks(bool release)
  void DisposeCounters()
  int IncrementAndObtainOpenResultCount(SqlInternalTransaction transaction)
  int IncrementPendingCallbacks()
  void SetTimeoutSeconds(int timeout)
  void SetTimeoutMilliseconds(long timeout)
  void StartSession(object cancellationOwner)
  void ThrowExceptionAndWarning(bool callerHasConnectionLock, bool asyncClose)
  Task ExecuteFlush()
  bool TryProcessHeader()
  bool TryPrepareBuffer()
  void ResetBuffer()
  bool SetPacketSize(int size)
  bool TryPeekByte(Byte& value)
  bool TryReadByteArray(Byte[] buff, int offset, int len)
  bool TryReadByteArray(Byte[] buff, int offset, int len, Int32& totalRead)
  bool TryReadByte(Byte& value)
  bool TryReadChar(Char& value)
  bool TryReadInt16(Int16& value)
  bool TryReadInt32(Int32& value)
  bool TryReadInt64(Int64& value)
  bool TryReadUInt16(UInt16& value)
  bool TryReadUInt32(UInt32& value)
  bool TryReadSingle(Single& value)
  bool TryReadDouble(Double& value)
  bool TryReadString(int length, String& value)
  bool TryReadStringWithEncoding(int length, Encoding encoding, bool isPlp, String& value)
  ulong ReadPlpLength(bool returnPlpNullIfNull)
  bool TryReadPlpLength(bool returnPlpNullIfNull, UInt64& lengthLeft)
  int ReadPlpBytesChunk(Byte[] buff, int offset, int len)
  bool TryReadPlpBytes(Byte[]& buff, int offset, int len, Int32& totalBytesRead)
  bool TrySkipLongBytes(long num)
  bool TrySkipBytes(int num)
  void SetSnapshot()
  void ResetSnapshot()
  bool TryReadNetworkPacket()
  void PrepareReplaySnapshot()
  void ReadSniSyncOverAsync()
  void OnConnectionClosed()
  void OnTimeout(object state)
  void ReadSni(TaskCompletionSource`1<object> completion)
  bool IsConnectionAlive(bool throwOnException)
  bool ValidateSNIConnection()
  void ReadSniError(TdsParserStateObject stateObj, UInt32 error)
  void ProcessSniPacket(object packet, UInt32 error)
  void ChangeNetworkPacketTimeout(int dueTime, int period)
  void ReadAsyncCallback(T packet, UInt32 error)
  void ReadAsyncCallback(IntPtr key, T packet, UInt32 error)
  bool CheckPacket(object packet, TaskCompletionSource`1<object> source)
  void ReadAsyncCallbackCaptureException(TaskCompletionSource`1<object> source)
  void WriteAsyncCallback(T packet, UInt32 sniError)
  void WriteAsyncCallback(IntPtr key, T packet, UInt32 sniError)
  Task WaitForAccumulatedWrites()
  void WriteByte(byte b)
  Task WriteByteArray(Byte[] b, int len, int offsetBuffer, bool canAccumulate, TaskCompletionSource`1<object> completion)
  void WriteByteArraySetupContinuation(Byte[] b, int len, TaskCompletionSource`1<object> completion, int offset, Task packetTask)
  Task WritePacket(byte flushMode, bool canAccumulate)
  void CancelWritePacket()
  Task SNIWritePacket(object packet, UInt32& sniError, bool canAccumulate, bool callerHasConnectionLock)
  bool IsValidPacket(object packetPointer)
  UInt32 WritePacket(object packet, bool sync)
  void SendAttention(bool mustTakeWriteLock)
  object CreateAndSetAttentionPacket()
  void SetPacketData(object packet, Byte[] buffer, int bytesUsed)
  Task WriteSni(bool canAccumulate)
  void SniReadStatisticsAndTracing()
  void SniWriteStatisticsAndTracing()
  void AssertValidState()
  bool get_HasErrorOrWarning()
  void AddError(SqlError error)
  int get_ErrorCount()
  void AddWarning(SqlError error)
  int get_WarningCount()
  object get_EmptyReadPacket()
  SqlErrorCollection GetFullErrorAndWarningCollection(Boolean& broken)
  void AddErrorsToCollection(SqlErrorCollection inCollection, SqlErrorCollection& collectionToAddTo, Boolean& broken)
  void StoreErrorAndWarningForAttention()
  void RestoreErrorAndWarningAfterAttention()
  void CheckThrowSNIException()
  void AssertStateIsClean()
  void CloneCleanupAltMetaDataSetArray()
  bool <DisposeCounters>b__135_0()
  void <ExecuteFlush>b__142_0()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParserStateObjectFactory
Наследуется от: object
Поля:
  TdsParserStateObjectFactory Singleton
Свойства:
  bool UseManagedSNI
  EncryptionOptions EncryptionOptions
  UInt32 SNIStatus
Методы:
  bool get_UseManagedSNI()
  EncryptionOptions get_EncryptionOptions()
  UInt32 get_SNIStatus()
  TdsParserStateObject CreateTdsParserStateObject(TdsParser parser)
  TdsParserStateObject CreateSessionObject(TdsParser tdsParser, TdsParserStateObject _pMarsPhysicalConObj, bool v)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsParserStaticMethods
Наследуется от: object
Поля:
  int NoProcessId
  int s_currentProcessId
  Byte[] s_nicAddress
Свойства:
Методы:
  Byte[] ObfuscatePassword(string password)
  int GetCurrentProcessIdForTdsLoginOnly()
  int GetCurrentThreadIdForTdsLoginOnly()
  Byte[] GetNetworkPhysicalAddressForTdsLoginOnly()
  int GetTimeoutMilliseconds(long timeoutTime)
  long GetTimeout(long timeoutMilliseconds)
  bool TimeoutHasExpired(long timeoutTime)
  int NullAwareStringLength(string str)
  int GetRemainingTimeout(int timeout, long start)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.TdsRecordBufferSetter
Наследуется от: SmiRecordBuffer
Поля:
  TdsValueSetter[] _fieldSetters
  TdsParserStateObject _stateObj
  SmiMetaData _metaData
Свойства:
  bool CanGet
  bool CanSet
Методы:
  void .ctor(TdsParserStateObject stateObj, SmiMetaData md)
  bool get_CanGet()
  bool get_CanSet()
  void SetDBNull(SmiEventSink sink, int ordinal)
  void SetBoolean(SmiEventSink sink, int ordinal, bool value)
  void SetByte(SmiEventSink sink, int ordinal, byte value)
  int SetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetBytesLength(SmiEventSink sink, int ordinal, long length)
  int SetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetCharsLength(SmiEventSink sink, int ordinal, long length)
  void SetString(SmiEventSink sink, int ordinal, string value, int offset, int length)
  void SetInt16(SmiEventSink sink, int ordinal, short value)
  void SetInt32(SmiEventSink sink, int ordinal, int value)
  void SetInt64(SmiEventSink sink, int ordinal, long value)
  void SetSingle(SmiEventSink sink, int ordinal, float value)
  void SetDouble(SmiEventSink sink, int ordinal, double value)
  void SetSqlDecimal(SmiEventSink sink, int ordinal, SqlDecimal value)
  void SetDateTime(SmiEventSink sink, int ordinal, DateTime value)
  void SetGuid(SmiEventSink sink, int ordinal, Guid value)
  void SetTimeSpan(SmiEventSink sink, int ordinal, TimeSpan value)
  void SetDateTimeOffset(SmiEventSink sink, int ordinal, DateTimeOffset value)
  void SetVariantMetaData(SmiEventSink sink, int ordinal, SmiMetaData metaData)
  void NewElement(SmiEventSink sink)
  void EndElements(SmiEventSink sink)
  void CheckWritingToColumn(int ordinal)
  void SkipPossibleDefaultedColumns(int targetColumn)
  void CheckSettingColumn(int ordinal)
--------------------------------------------------
Класс: System.Data.SqlClient.TdsValueSetter
Наследуется от: object
Поля:
  TdsParserStateObject _stateObj
  SmiMetaData _metaData
  bool _isPlp
  bool _plpUnknownSent
  Encoder _encoder
  SmiMetaData _variantType
Свойства:
Методы:
  void .ctor(TdsParserStateObject stateObj, SmiMetaData md)
  void SetDBNull()
  void SetBoolean(bool value)
  void SetByte(byte value)
  int SetBytes(long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetBytesNoOffsetHandling(long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetBytesLength(long length)
  int SetChars(long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetCharsLength(long length)
  void SetString(string value, int offset, int length)
  void SetInt16(short value)
  void SetInt32(int value)
  void SetInt64(long value)
  void SetSingle(float value)
  void SetDouble(double value)
  void SetSqlDecimal(SqlDecimal value)
  void SetDateTime(DateTime value)
  void SetGuid(Guid value)
  void SetTimeSpan(TimeSpan value)
  void SetDateTimeOffset(DateTimeOffset value)
  void SetVariantType(SmiMetaData value)
  void CheckSettingOffset(long offset)
--------------------------------------------------
Класс: System.Data.SqlClient.TransactionState
Наследуется от: Enum
Поля:
  int value__
  TransactionState Pending
  TransactionState Active
  TransactionState Aborted
  TransactionState Committed
  TransactionState Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.TransactionType
Наследуется от: Enum
Поля:
  int value__
  TransactionType LocalFromTSQL
  TransactionType LocalFromAPI
  TransactionType Delegated
  TransactionType Distributed
  TransactionType Context
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlInternalTransaction
Наследуется от: object
Поля:
  long NullTransactionId
  TransactionState _transactionState
  TransactionType _transactionType
  long _transactionId
  int _openResultCount
  SqlInternalConnection _innerConnection
  bool _disposing
  WeakReference _parent
  bool <RestoreBrokenConnection>k__BackingField
  bool <ConnectionHasBeenRestored>k__BackingField
Свойства:
  bool RestoreBrokenConnection
  bool ConnectionHasBeenRestored
  bool HasParentTransaction
  bool IsAborted
  bool IsActive
  bool IsCommitted
  bool IsCompleted
  bool IsDelegated
  bool IsDistributed
  bool IsLocal
  bool IsOrphaned
  bool IsZombied
  int OpenResultsCount
  SqlTransaction Parent
  long TransactionId
Методы:
  bool get_RestoreBrokenConnection()
  void set_RestoreBrokenConnection(bool value)
  bool get_ConnectionHasBeenRestored()
  void set_ConnectionHasBeenRestored(bool value)
  void .ctor(SqlInternalConnection innerConnection, TransactionType type, SqlTransaction outerTransaction)
  void .ctor(SqlInternalConnection innerConnection, TransactionType type, SqlTransaction outerTransaction, long transactionId)
  bool get_HasParentTransaction()
  bool get_IsAborted()
  bool get_IsActive()
  bool get_IsCommitted()
  bool get_IsCompleted()
  bool get_IsDelegated()
  bool get_IsDistributed()
  bool get_IsLocal()
  bool get_IsOrphaned()
  bool get_IsZombied()
  int get_OpenResultsCount()
  SqlTransaction get_Parent()
  long get_TransactionId()
  void set_TransactionId(long value)
  void Activate()
  void CheckTransactionLevelAndZombie()
  void CloseFromConnection()
  void Commit()
  void Completed(TransactionState transactionState)
  int DecrementAndObtainOpenResultCount()
  void Dispose()
  void Dispose(bool disposing)
  int GetServerTransactionLevel()
  int IncrementAndObtainOpenResultCount()
  void InitParent(SqlTransaction transaction)
  void Rollback()
  void Rollback(string transactionName)
  void Save(string savePointName)
  void Zombie()
  void ZombieParent()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlMetaDataFactory
Наследуется от: DbMetaDataFactory
Поля:
  string _serverVersionNormalized90
  string _serverVersionNormalized90782
  string _serverVersionNormalized10
Свойства:
Методы:
  void .ctor(Stream XMLStream, string serverVersion, string serverVersionNormalized)
  void addUDTsToDataTypesTable(DataTable dataTypesTable, SqlConnection connection, string ServerVersion)
  void AddTVPsToDataTypesTable(DataTable dataTypesTable, SqlConnection connection, string ServerVersion)
  DataTable GetDataTypesTable(SqlConnection connection)
  DataTable PrepareCollection(string collectionName, String[] restrictions, DbConnection connection)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlClientPermission
Наследуется от: DBDataPermission
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  void .ctor(PermissionState state, bool allowBlankPassword)
  void .ctor(SqlClientPermission permission)
  void .ctor(SqlClientPermissionAttribute permissionAttribute)
  void .ctor(SqlConnectionString constr)
  void Add(string connectionString, string restrictions, KeyRestrictionBehavior behavior)
  IPermission Copy()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlClientPermissionAttribute
Наследуется от: DBDataPermissionAttribute
Поля:
Свойства:
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Data.SqlClient.SQLDebugging
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCredential
Наследуется от: object
Поля:
  string uid
  SecureString pwd
Свойства:
  string UserId
  SecureString Password
Методы:
  void .ctor(string userId, SecureString password)
  string get_UserId()
  SecureString get_Password()
--------------------------------------------------
Класс: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
Наследуется от: Enum
Поля:
  int value__
  SqlConnectionColumnEncryptionSetting Disabled
  SqlConnectionColumnEncryptionSetting Enabled
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlAuthenticationMethod
Наследуется от: Enum
Поля:
  int value__
  SqlAuthenticationMethod NotSpecified
  SqlAuthenticationMethod SqlPassword
  SqlAuthenticationMethod ActiveDirectoryPassword
  SqlAuthenticationMethod ActiveDirectoryIntegrated
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
Наследуется от: Enum
Поля:
  int value__
  SqlCommandColumnEncryptionSetting UseConnectionSetting
  SqlCommandColumnEncryptionSetting Enabled
  SqlCommandColumnEncryptionSetting ResultSetOnly
  SqlCommandColumnEncryptionSetting Disabled
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.PoolBlockingPeriod
Наследуется от: Enum
Поля:
  int value__
  PoolBlockingPeriod Auto
  PoolBlockingPeriod AlwaysBlock
  PoolBlockingPeriod NeverBlock
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.LocalDB
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetLocalDBConnectionString(string localDbInstance)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIAsyncCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SNIPacket packet, UInt32 sniErrorCode)
  IAsyncResult BeginInvoke(SNIPacket packet, UInt32 sniErrorCode, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIProviders
Наследуется от: Enum
Поля:
  int value__
  SNIProviders HTTP_PROV
  SNIProviders NP_PROV
  SNIProviders SESSION_PROV
  SNIProviders SIGN_PROV
  SNIProviders SM_PROV
  SNIProviders SMUX_PROV
  SNIProviders SSL_PROV
  SNIProviders TCP_PROV
  SNIProviders MAX_PROVS
  SNIProviders INVALID_PROV
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNISMUXHeader
Наследуется от: object
Поля:
  int HEADER_LENGTH
  byte SMID
  byte flags
  ushort sessionId
  UInt32 length
  UInt32 sequenceNumber
  UInt32 highwater
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNISMUXFlags
Наследуется от: Enum
Поля:
  int value__
  SNISMUXFlags SMUX_SYN
  SNISMUXFlags SMUX_ACK
  SNISMUXFlags SMUX_FIN
  SNISMUXFlags SMUX_DATA
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNICommon
Наследуется от: object
Поля:
  int ConnTerminatedError
  int InvalidParameterError
  int ProtocolNotSupportedError
  int ConnTimeoutError
  int ConnNotUsableError
  int InvalidConnStringError
  int HandshakeFailureError
  int InternalExceptionError
  int ConnOpenFailedError
  int ErrorSpnLookup
  int LocalDBErrorCode
  int MultiSubnetFailoverWithMoreThan64IPs
  int MultiSubnetFailoverWithInstanceSpecified
  int MultiSubnetFailoverWithNonTcpProtocol
  int MaxErrorValue
  int LocalDBNoInstanceName
  int LocalDBNoInstallation
  int LocalDBInvalidConfig
  int LocalDBNoSqlUserInstanceDllPath
  int LocalDBInvalidSqlUserInstanceDllPath
  int LocalDBFailedToLoadDll
  int LocalDBBadRuntime
Свойства:
Методы:
  bool ValidateSslServerCertificate(string targetServerName, object sender, X509Certificate cert, X509Chain chain, SslPolicyErrors policyErrors)
  UInt32 ReportSNIError(SNIProviders provider, UInt32 nativeError, UInt32 sniError, string errorMessage)
  UInt32 ReportSNIError(SNIProviders provider, UInt32 sniError, Exception sniException)
  UInt32 ReportSNIError(SNIError error)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIError
Наследуется от: object
Поля:
  SNIProviders provider
  string errorMessage
  UInt32 nativeError
  UInt32 sniError
  string function
  UInt32 lineNumber
  Exception exception
Свойства:
Методы:
  void .ctor(SNIProviders provider, UInt32 nativeError, UInt32 sniErrorCode, string errorMessage)
  void .ctor(SNIProviders provider, UInt32 sniErrorCode, Exception sniException)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIHandle
Наследуется от: object
Поля:
Свойства:
  UInt32 Status
  Guid ConnectionId
Методы:
  void Dispose()
  void SetAsyncCallbacks(SNIAsyncCallback receiveCallback, SNIAsyncCallback sendCallback)
  void SetBufferSize(int bufferSize)
  UInt32 Send(SNIPacket packet)
  UInt32 SendAsync(SNIPacket packet, SNIAsyncCallback callback)
  UInt32 Receive(SNIPacket& packet, int timeoutInMilliseconds)
  UInt32 ReceiveAsync(SNIPacket& packet)
  UInt32 EnableSsl(UInt32 options)
  void DisableSsl()
  UInt32 CheckConnection()
  UInt32 get_Status()
  Guid get_ConnectionId()
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNILoadHandle
Наследуется от: object
Поля:
  SNILoadHandle SingletonInstance
  EncryptionOptions _encryptionOption
  ThreadLocal`1<SNIError> _lastError
  UInt32 _status
Свойства:
  SNIError LastError
  UInt32 Status
  EncryptionOptions Options
Методы:
  SNIError get_LastError()
  void set_LastError(SNIError value)
  UInt32 get_Status()
  EncryptionOptions get_Options()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIMarsConnection
Наследуется от: object
Поля:
  Guid _connectionId
  Dictionary`2<int, SNIMarsHandle> _sessions
  Byte[] _headerBytes
  SNIHandle _lowerHandle
  ushort _nextSessionId
  int _currentHeaderByteCount
  int _dataBytesLeft
  SNISMUXHeader _currentHeader
  SNIPacket _currentPacket
Свойства:
  Guid ConnectionId
Методы:
  Guid get_ConnectionId()
  void .ctor(SNIHandle lowerHandle)
  SNIMarsHandle CreateMarsSession(object callbackObject, bool async)
  UInt32 StartReceive()
  UInt32 Send(SNIPacket packet)
  UInt32 SendAsync(SNIPacket packet, SNIAsyncCallback callback)
  UInt32 ReceiveAsync(SNIPacket& packet)
  UInt32 CheckConnection()
  void HandleReceiveError(SNIPacket packet)
  void HandleSendComplete(SNIPacket packet, UInt32 sniErrorCode)
  void HandleReceiveComplete(SNIPacket packet, UInt32 sniErrorCode)
  UInt32 EnableSsl(UInt32 options)
  void DisableSsl()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIMarsHandle
Наследуется от: SNIHandle
Поля:
  UInt32 ACK_THRESHOLD
  SNIMarsConnection _connection
  UInt32 _status
  Queue`1<SNIPacket> _receivedPacketQueue
  Queue`1<SNIMarsQueuedPacket> _sendPacketQueue
  object _callbackObject
  Guid _connectionId
  ushort _sessionId
  ManualResetEventSlim _packetEvent
  ManualResetEventSlim _ackEvent
  SNISMUXHeader _currentHeader
  UInt32 _sendHighwater
  int _asyncReceives
  UInt32 _receiveHighwater
  UInt32 _receiveHighwaterLastAck
  UInt32 _sequenceNumber
  SNIError _connectionError
Свойства:
  Guid ConnectionId
  UInt32 Status
Методы:
  Guid get_ConnectionId()
  UInt32 get_Status()
  void Dispose()
  void .ctor(SNIMarsConnection connection, ushort sessionId, object callbackObject, bool async)
  void SendControlPacket(SNISMUXFlags flags)
  void GetSMUXHeaderBytes(int length, byte flags, Byte[]& headerBytes)
  SNIPacket GetSMUXEncapsulatedPacket(SNIPacket packet)
  UInt32 Send(SNIPacket packet)
  UInt32 InternalSendAsync(SNIPacket packet, SNIAsyncCallback callback)
  UInt32 SendPendingPackets()
  UInt32 SendAsync(SNIPacket packet, SNIAsyncCallback callback)
  UInt32 ReceiveAsync(SNIPacket& packet)
  void HandleReceiveError(SNIPacket packet)
  void HandleSendComplete(SNIPacket packet, UInt32 sniErrorCode)
  void HandleAck(UInt32 highwater)
  void HandleReceiveComplete(SNIPacket packet, SNISMUXHeader header)
  void SendAckIfNecessary()
  UInt32 Receive(SNIPacket& packet, int timeoutInMilliseconds)
  UInt32 CheckConnection()
  void SetAsyncCallbacks(SNIAsyncCallback receiveCallback, SNIAsyncCallback sendCallback)
  void SetBufferSize(int bufferSize)
  UInt32 EnableSsl(UInt32 options)
  void DisableSsl()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIMarsQueuedPacket
Наследуется от: object
Поля:
  SNIPacket _packet
  SNIAsyncCallback _callback
Свойства:
  SNIPacket Packet
  SNIAsyncCallback Callback
Методы:
  void .ctor(SNIPacket packet, SNIAsyncCallback callback)
  SNIPacket get_Packet()
  void set_Packet(SNIPacket value)
  SNIAsyncCallback get_Callback()
  void set_Callback(SNIAsyncCallback value)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNINpHandle
Наследуется от: SNIHandle
Поля:
  string DefaultPipePath
  int MAX_PIPE_INSTANCES
  string _targetServer
  object _callbackObject
  TaskScheduler _writeScheduler
  TaskFactory _writeTaskFactory
  Stream _stream
  NamedPipeClientStream _pipeStream
  SslOverTdsStream _sslOverTdsStream
  SslStream _sslStream
  SNIAsyncCallback _receiveCallback
  SNIAsyncCallback _sendCallback
  bool _validateCert
  UInt32 _status
  int _bufferSize
  Guid _connectionId
Свойства:
  Guid ConnectionId
  UInt32 Status
Методы:
  void .ctor(string serverName, string pipeName, long timerExpire, object callbackObject)
  Guid get_ConnectionId()
  UInt32 get_Status()
  UInt32 CheckConnection()
  void Dispose()
  UInt32 Receive(SNIPacket& packet, int timeout)
  UInt32 ReceiveAsync(SNIPacket& packet)
  UInt32 Send(SNIPacket packet)
  UInt32 SendAsync(SNIPacket packet, SNIAsyncCallback callback)
  void SetAsyncCallbacks(SNIAsyncCallback receiveCallback, SNIAsyncCallback sendCallback)
  UInt32 EnableSsl(UInt32 options)
  void DisableSsl()
  bool ValidateServerCertificate(object sender, X509Certificate cert, X509Chain chain, SslPolicyErrors policyErrors)
  void SetBufferSize(int bufferSize)
  UInt32 ReportErrorAndReleasePacket(SNIPacket packet, Exception sniException)
  UInt32 ReportErrorAndReleasePacket(SNIPacket packet, UInt32 nativeError, UInt32 sniError, string errorMessage)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIPacket
Наследуется от: object
Поля:
  Byte[] _data
  int _length
  int _capacity
  int _offset
  string _description
  SNIAsyncCallback _completionCallback
Свойства:
  string Description
  int DataLeft
  int Length
  bool IsInvalid
Методы:
  void .ctor(SNIHandle handle)
  string get_Description()
  void set_Description(string value)
  int get_DataLeft()
  int get_Length()
  bool get_IsInvalid()
  void Dispose()
  void SetCompletionCallback(SNIAsyncCallback completionCallback)
  void InvokeCompletionCallback(UInt32 sniErrorCode)
  void Allocate(int capacity)
  SNIPacket Clone()
  void GetData(Byte[] buffer, Int32& dataSize)
  void SetData(Byte[] data, int length)
  int TakeData(SNIPacket packet, int size)
  void AppendData(Byte[] data, int size)
  void AppendPacket(SNIPacket packet)
  int TakeData(Byte[] buffer, int dataOffset, int size)
  void Release()
  void Reset()
  void ReadFromStreamAsync(Stream stream, SNIAsyncCallback callback)
  void ReadFromStream(Stream stream)
  void WriteToStream(Stream stream)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(SNIPacket packet)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNIProxy
Наследуется от: object
Поля:
  int DefaultSqlServerPort
  int DefaultSqlServerDacPort
  string SqlServerSpnHeader
  SNIProxy Singleton
Свойства:
Методы:
  void Terminate()
  UInt32 EnableSsl(SNIHandle handle, UInt32 options)
  UInt32 DisableSsl(SNIHandle handle)
  void GenSspiClientContext(SspiClientContextStatus sspiClientContextStatus, Byte[] receivedBuff, Byte[]& sendBuff, Byte[] serverName)
  bool IsErrorStatus(SecurityStatusPalErrorCode errorCode)
  UInt32 InitializeSspiPackage(UInt32& maxLength)
  UInt32 SetConnectionBufferSize(SNIHandle handle, UInt32 bufferSize)
  UInt32 PacketGetData(SNIPacket packet, Byte[] inBuff, UInt32& dataSize)
  UInt32 ReadSyncOverAsync(SNIHandle handle, SNIPacket& packet, int timeout)
  UInt32 GetConnectionId(SNIHandle handle, Guid& clientConnectionId)
  UInt32 WritePacket(SNIHandle handle, SNIPacket packet, bool sync)
  SNIHandle CreateConnectionHandle(object callbackObject, string fullServerName, bool ignoreSniOpenTimeout, long timerExpire, Byte[]& instanceName, Byte[]& spnBuffer, bool flushCache, bool async, bool parallel, bool isIntegratedSecurity)
  Byte[] GetSqlServerSPN(DataSource dataSource)
  Byte[] GetSqlServerSPN(string hostNameOrAddress, string portOrInstanceName)
  SNITCPHandle CreateTcpHandle(DataSource details, long timerExpire, object callbackObject, bool parallel)
  SNINpHandle CreateNpHandle(DataSource details, long timerExpire, object callbackObject, bool parallel)
  UInt32 ReadAsync(SNIHandle handle, SNIPacket& packet)
  void PacketSetData(SNIPacket packet, Byte[] data, int length)
  void PacketRelease(SNIPacket packet)
  UInt32 CheckConnection(SNIHandle handle)
  SNIError GetLastError()
  string GetLocalDBDataSource(string fullServerName, Boolean& error)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.DataSource
Наследуется от: object
Поля:
  char CommaSeparator
  char BackSlashSeparator
  string DefaultHostName
  string DefaultSqlServerInstanceName
  string PipeBeginning
  string PipeToken
  string LocalDbHost
  string NamedPipeInstanceNameHeader
  string DefaultPipeName
  Protocol ConnectionProtocol
  string <ServerName>k__BackingField
  int <Port>k__BackingField
  string <InstanceName>k__BackingField
  string <PipeName>k__BackingField
  string <PipeHostName>k__BackingField
  string _workingDataSource
  string _dataSourceAfterTrimmingProtocol
  bool <IsBadDataSource>k__BackingField
  bool <IsSsrpRequired>k__BackingField
Свойства:
  string ServerName
  int Port
  string InstanceName
  string PipeName
  string PipeHostName
  bool IsBadDataSource
  bool IsSsrpRequired
Методы:
  string get_ServerName()
  void set_ServerName(string value)
  int get_Port()
  void set_Port(int value)
  string get_InstanceName()
  void set_InstanceName(string value)
  string get_PipeName()
  void set_PipeName(string value)
  string get_PipeHostName()
  void set_PipeHostName(string value)
  bool get_IsBadDataSource()
  void set_IsBadDataSource(bool value)
  bool get_IsSsrpRequired()
  void set_IsSsrpRequired(bool value)
  void .ctor(string dataSource)
  void PopulateProtocol()
  string GetLocalDBInstance(string dataSource, Boolean& error)
  DataSource ParseServerName(string dataSource)
  void InferLocalServerName()
  bool InferConnectionDetails()
  void ReportSNIError(SNIProviders provider)
  bool InferNamedPipesInformation()
  bool IsLocalHost(string serverName)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SNITCPHandle
Наследуется от: SNIHandle
Поля:
  string _targetServer
  object _callbackObject
  Socket _socket
  NetworkStream _tcpStream
  TaskScheduler _writeScheduler
  TaskFactory _writeTaskFactory
  Stream _stream
  SslStream _sslStream
  SslOverTdsStream _sslOverTdsStream
  SNIAsyncCallback _receiveCallback
  SNIAsyncCallback _sendCallback
  bool _validateCert
  int _bufferSize
  UInt32 _status
  Guid _connectionId
  int MaxParallelIpAddresses
Свойства:
  Guid ConnectionId
  UInt32 Status
Методы:
  void Dispose()
  Guid get_ConnectionId()
  UInt32 get_Status()
  void .ctor(string serverName, int port, long timerExpire, object callbackObject, bool parallel)
  Task`1<Socket> ConnectAsync(string serverName, int port)
  Task`1<Socket> ParallelConnectAsync(IPAddress[] serverAddresses, int port)
  void ParallelConnectHelper(Socket socket, Task connectTask, TaskCompletionSource`1<Socket> tcs, StrongBox`1<int> pendingCompleteCount, StrongBox`1<Exception> lastError, List`1<Socket> sockets)
  UInt32 EnableSsl(UInt32 options)
  void DisableSsl()
  bool ValidateServerCertificate(object sender, X509Certificate cert, X509Chain chain, SslPolicyErrors policyErrors)
  void SetBufferSize(int bufferSize)
  UInt32 Send(SNIPacket packet)
  UInt32 Receive(SNIPacket& packet, int timeoutInMilliseconds)
  void SetAsyncCallbacks(SNIAsyncCallback receiveCallback, SNIAsyncCallback sendCallback)
  UInt32 SendAsync(SNIPacket packet, SNIAsyncCallback callback)
  UInt32 ReceiveAsync(SNIPacket& packet)
  UInt32 CheckConnection()
  UInt32 ReportTcpSNIError(Exception sniException)
  UInt32 ReportTcpSNIError(UInt32 nativeError, UInt32 sniError, string errorMessage)
  UInt32 ReportErrorAndReleasePacket(SNIPacket packet, Exception sniException)
  UInt32 ReportErrorAndReleasePacket(SNIPacket packet, UInt32 nativeError, UInt32 sniError, string errorMessage)
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SSRP
Наследуется от: object
Поля:
  char SemicolonSeparator
  int SqlServerBrowserPort
Свойства:
Методы:
  int GetPortByInstanceName(string browserHostName, string instanceName)
  Byte[] CreateInstanceInfoRequest(string instanceName)
  int GetDacPortByInstanceName(string browserHostName, string instanceName)
  Byte[] CreateDacPortInfoRequest(string instanceName)
  Byte[] SendUDPRequest(string browserHostname, int port, Byte[] requestPacket)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SslOverTdsStream
Наследуется от: Stream
Поля:
  Stream _stream
  int _packetBytes
  bool _encapsulate
  int PACKET_SIZE_WITHOUT_HEADER
  int PRELOGIN_PACKET_TYPE
Свойства:
  long Position
  bool CanRead
  bool CanWrite
  bool CanSeek
  long Length
Методы:
  void .ctor(Stream stream)
  void FinishHandshake()
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  void SetLength(long value)
  void Flush()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  bool get_CanRead()
  bool get_CanWrite()
  bool get_CanSeek()
  long get_Length()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.SspiClientContextStatus
Наследуется от: object
Поля:
  SafeFreeCredentials <CredentialsHandle>k__BackingField
  SafeDeleteContext <SecurityContext>k__BackingField
  ContextFlagsPal <ContextFlags>k__BackingField
Свойства:
  SafeFreeCredentials CredentialsHandle
  SafeDeleteContext SecurityContext
  ContextFlagsPal ContextFlags
Методы:
  SafeFreeCredentials get_CredentialsHandle()
  void set_CredentialsHandle(SafeFreeCredentials value)
  SafeDeleteContext get_SecurityContext()
  void set_SecurityContext(SafeDeleteContext value)
  ContextFlagsPal get_ContextFlags()
  void set_ContextFlags(ContextFlagsPal value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlClient.SNI.TdsParserStateObjectManaged
Наследуется от: TdsParserStateObject
Поля:
  SNIMarsConnection _marsConnection
  SNIHandle _sessionHandle
  SNIPacket _sniPacket
  SNIPacket _sniAsyncAttnPacket
  Dictionary`2<SNIPacket, SNIPacket> _pendingWritePackets
  WritePacketCache _writePacketCache
  SspiClientContextStatus sspiClientContextStatus
Свойства:
  SNIHandle Handle
  UInt32 Status
  object SessionHandle
  object EmptyReadPacket
Методы:
  void .ctor(TdsParser parser)
  void .ctor(TdsParser parser, TdsParserStateObject physicalConnection, bool async)
  SNIHandle get_Handle()
  UInt32 get_Status()
  object get_SessionHandle()
  object get_EmptyReadPacket()
  bool CheckPacket(object packet, TaskCompletionSource`1<object> source)
  void CreateSessionHandle(TdsParserStateObject physicalConnection, bool async)
  SNIMarsHandle CreateMarsSession(object callbackObject, bool async)
  UInt32 SNIPacketGetData(object packet, Byte[] _inBuff, UInt32& dataSize)
  void CreatePhysicalSNIHandle(string serverName, bool ignoreSniOpenTimeout, long timerExpire, Byte[]& instanceName, Byte[]& spnBuffer, bool flushCache, bool async, bool parallel, bool isIntegratedSecurity)
  void ReadAsyncCallback(SNIPacket packet, UInt32 error)
  void WriteAsyncCallback(SNIPacket packet, UInt32 sniError)
  void RemovePacketFromPendingList(object packet)
  void Dispose()
  void DisposePacketCache()
  void FreeGcHandle(int remaining, bool release)
  bool IsFailedHandle()
  object ReadSyncOverAsync(int timeoutRemaining, bool isMarsOn, UInt32& error)
  bool IsPacketEmpty(object packet)
  void ReleasePacket(object syncReadPacket)
  UInt32 CheckConnection()
  object ReadAsync(UInt32& error, Object& handle)
  object CreateAndSetAttentionPacket()
  UInt32 WritePacket(object packet, bool sync)
  object AddPacketToPendingList(object packet)
  bool IsValidPacket(object packetPointer)
  object GetResetWritePacket()
  void ClearAllWritePackets()
  void SetPacketData(object packet, Byte[] buffer, int bytesUsed)
  UInt32 SniGetConnectionId(Guid& clientConnectionId)
  UInt32 DisabeSsl()
  UInt32 EnableMars(UInt32& info)
  UInt32 EnableSsl(UInt32& info)
  UInt32 SetConnectionBufferSize(UInt32& unsignedPacketSize)
  UInt32 GenerateSspiClientContext(Byte[] receivedBuff, UInt32 receivedLength, Byte[]& sendBuff, UInt32& sendLength, Byte[] _sniSpnBuffer)
  UInt32 WaitForSSLHandShakeToComplete()
--------------------------------------------------
Класс: System.Data.Odbc.DbSchemaInfo
Наследуется от: object
Поля:
  string _name
  string _typename
  Type _type
  Nullable`1<SQL_TYPE> _dbtype
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.DbCache
Наследуется от: object
Поля:
  Boolean[] _isBadValue
  DbSchemaInfo[] _schema
  Object[] _values
  OdbcDataReader _record
  int _count
  bool _randomaccess
Свойства:
  object Item
  int Count
  Object[] Values
Методы:
  void .ctor(OdbcDataReader record, int count)
  object get_Item(int i)
  void set_Item(int i, object value)
  int get_Count()
  void InvalidateValue(int i)
  Object[] get_Values()
  object AccessIndex(int i)
  DbSchemaInfo GetSchema(int i)
  void FlushValues()
--------------------------------------------------
Класс: System.Data.Odbc.ODBC
Наследуется от: object
Поля:
  string Pwd
Свойства:
Методы:
  Exception ConnectionClosed()
  Exception OpenConnectionNoOwner()
  Exception UnknownSQLType(SQL_TYPE sqltype)
  Exception ConnectionStringTooLong()
  ArgumentException GetSchemaRestrictionRequired()
  ArgumentOutOfRangeException NotSupportedEnumerationValue(Type type, int value)
  ArgumentOutOfRangeException NotSupportedCommandType(CommandType value)
  ArgumentOutOfRangeException NotSupportedIsolationLevel(IsolationLevel value)
  InvalidOperationException NoMappingForSqlTransactionLevel(int value)
  Exception NegativeArgument()
  Exception CantSetPropertyOnOpenConnection()
  Exception CantEnableConnectionpooling(RetCode retcode)
  Exception CantAllocateEnvironmentHandle(RetCode retcode)
  Exception FailedToGetDescriptorHandle(RetCode retcode)
  Exception NotInTransaction()
  Exception UnknownOdbcType(OdbcType odbctype)
  void TraceODBC(int level, string method, RetCode retcode)
  short ShortStringLength(string inputString)
--------------------------------------------------
Класс: System.Data.Odbc.ODBC32
Наследуется от: object
Поля:
  short SQL_COMMIT
  short SQL_ROLLBACK
  IntPtr SQL_AUTOCOMMIT_OFF
  IntPtr SQL_AUTOCOMMIT_ON
  int SIGNED_OFFSET
  int UNSIGNED_OFFSET
  short SQL_ALL_TYPES
  IntPtr SQL_HANDLE_NULL
  int SQL_NULL_DATA
  int SQL_NO_TOTAL
  int SQL_DEFAULT_PARAM
  int COLUMN_NAME
  int COLUMN_TYPE
  int DATA_TYPE
  int COLUMN_SIZE
  int DECIMAL_DIGITS
  int NUM_PREC_RADIX
  IntPtr SQL_OV_ODBC3
  int SQL_NTS
  IntPtr SQL_CP_OFF
  IntPtr SQL_CP_ONE_PER_DRIVER
  IntPtr SQL_CP_ONE_PER_HENV
  int SQL_CD_TRUE
  int SQL_CD_FALSE
  int SQL_DTC_DONE
  int SQL_IS_POINTER
  int SQL_IS_PTR
  int MAX_CONNECTION_STRING_LENGTH
  short SQL_DIAG_SQLSTATE
  short SQL_RESULT_COL
Свойства:
Методы:
  string RetcodeToString(RetCode retcode)
  OdbcErrorCollection GetDiagErrors(string source, OdbcHandle hrHandle, RetCode retcode)
  void GetDiagErrors(OdbcErrorCollection errors, string source, OdbcHandle hrHandle, RetCode retcode)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.TypeMap
Наследуется от: object
Поля:
  TypeMap s_bigInt
  TypeMap s_binary
  TypeMap s_bit
  TypeMap _Char
  TypeMap s_dateTime
  TypeMap s_date
  TypeMap s_time
  TypeMap s_decimal
  TypeMap s_double
  TypeMap _Image
  TypeMap s_int
  TypeMap s_NChar
  TypeMap _NText
  TypeMap s_numeric
  TypeMap _NVarChar
  TypeMap s_real
  TypeMap s_uniqueId
  TypeMap s_smallDT
  TypeMap s_smallInt
  TypeMap _Text
  TypeMap s_timestamp
  TypeMap s_tinyInt
  TypeMap s_varBinary
  TypeMap _VarChar
  TypeMap s_variant
  TypeMap s_UDT
  TypeMap s_XML
  OdbcType _odbcType
  DbType _dbType
  Type _type
  SQL_TYPE _sql_type
  SQL_C _sql_c
  SQL_C _param_sql_c
  int _bufferSize
  int _columnSize
  bool _signType
Свойства:
Методы:
  void .ctor(OdbcType odbcType, DbType dbType, Type type, SQL_TYPE sql_type, SQL_C sql_c, SQL_C param_sql_c, int bsize, int csize, bool signType)
  TypeMap FromOdbcType(OdbcType odbcType)
  TypeMap FromDbType(DbType dbType)
  TypeMap FromSystemType(Type dataType)
  TypeMap FromSqlType(SQL_TYPE sqltype)
  TypeMap UpgradeSignedType(TypeMap typeMap, bool unsigned)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcCommand
Наследуется от: DbCommand
Поля:
  int s_objectTypeCount
  int ObjectID
  string _commandText
  CommandType _commandType
  int _commandTimeout
  UpdateRowSource _updatedRowSource
  bool _designTimeInvisible
  bool _isPrepared
  OdbcConnection _connection
  OdbcTransaction _transaction
  WeakReference _weakDataReaderReference
  CMDWrapper _cmdWrapper
  OdbcParameterCollection _parameterCollection
  ConnectionState _cmdState
Свойства:
  bool Canceling
  string CommandText
  int CommandTimeout
  CommandType CommandType
  OdbcConnection Connection
  DbConnection DbConnection
  DbParameterCollection DbParameterCollection
  DbTransaction DbTransaction
  bool DesignTimeVisible
  bool HasParameters
  OdbcParameterCollection Parameters
  OdbcTransaction Transaction
  UpdateRowSource UpdatedRowSource
Методы:
  void .ctor()
  void .ctor(string cmdText)
  void .ctor(string cmdText, OdbcConnection connection)
  void .ctor(string cmdText, OdbcConnection connection, OdbcTransaction transaction)
  void DisposeDeadDataReader()
  void DisposeDataReader()
  void DisconnectFromDataReaderAndConnection()
  void Dispose(bool disposing)
  bool get_Canceling()
  string get_CommandText()
  void set_CommandText(string value)
  int get_CommandTimeout()
  void set_CommandTimeout(int value)
  void ResetCommandTimeout()
  bool ShouldSerializeCommandTimeout()
  CommandType get_CommandType()
  void set_CommandType(CommandType value)
  OdbcConnection get_Connection()
  void set_Connection(OdbcConnection value)
  DbConnection get_DbConnection()
  void set_DbConnection(DbConnection value)
  DbParameterCollection get_DbParameterCollection()
  DbTransaction get_DbTransaction()
  void set_DbTransaction(DbTransaction value)
  bool get_DesignTimeVisible()
  void set_DesignTimeVisible(bool value)
  bool get_HasParameters()
  OdbcParameterCollection get_Parameters()
  OdbcTransaction get_Transaction()
  void set_Transaction(OdbcTransaction value)
  UpdateRowSource get_UpdatedRowSource()
  void set_UpdatedRowSource(UpdateRowSource value)
  OdbcDescriptorHandle GetDescriptorHandle(SQL_ATTR attribute)
  CMDWrapper GetStatementHandle()
  void Cancel()
  object System.ICloneable.Clone()
  bool RecoverFromConnection()
  void CloseCommandWrapper()
  void CloseFromConnection()
  void CloseFromDataReader()
  OdbcParameter CreateParameter()
  DbParameter CreateDbParameter()
  DbDataReader ExecuteDbDataReader(CommandBehavior behavior)
  int ExecuteNonQuery()
  OdbcDataReader ExecuteReader()
  OdbcDataReader ExecuteReader(CommandBehavior behavior)
  OdbcDataReader ExecuteReaderFromSQLMethod(Object[] methodArguments, SQL_API method)
  OdbcDataReader ExecuteReaderObject(CommandBehavior behavior, string method, bool needReader)
  OdbcDataReader ExecuteReaderObject(CommandBehavior behavior, string method, bool needReader, Object[] methodArguments, SQL_API odbcApiMethod)
  object ExecuteScalar()
  string GetDiagSqlState()
  void PropertyChanging()
  void Prepare()
  void TrySetStatementAttribute(OdbcStatementHandle stmt, SQL_ATTR stmtAttribute, IntPtr value)
  void ValidateOpenConnection(string methodName)
  void ValidateConnectionAndTransaction(string method)
--------------------------------------------------
Класс: System.Data.Odbc.CMDWrapper
Наследуется от: object
Поля:
  OdbcStatementHandle _stmt
  OdbcStatementHandle _keyinfostmt
  OdbcDescriptorHandle _hdesc
  CNativeBuffer _nativeParameterBuffer
  CNativeBuffer _dataReaderBuf
  OdbcConnection _connection
  bool _canceling
  bool _hasBoundColumns
  bool _ssKeyInfoModeOn
  bool _ssKeyInfoModeOff
Свойства:
  bool Canceling
  OdbcConnection Connection
  bool HasBoundColumns
  OdbcStatementHandle StatementHandle
  OdbcStatementHandle KeyInfoStatement
Методы:
  void .ctor(OdbcConnection connection)
  bool get_Canceling()
  void set_Canceling(bool value)
  OdbcConnection get_Connection()
  void set_HasBoundColumns(bool value)
  OdbcStatementHandle get_StatementHandle()
  OdbcStatementHandle get_KeyInfoStatement()
  void CreateKeyInfoStatementHandle()
  void CreateStatementHandle()
  void Dispose()
  void DisposeDescriptorHandle()
  void DisposeStatementHandle()
  void DisposeKeyInfoStatementHandle()
  void FreeStatementHandle(STMT stmt)
  void FreeKeyInfoStatementHandle(STMT stmt)
  OdbcDescriptorHandle GetDescriptorHandle(SQL_ATTR attribute)
  string GetDiagSqlState()
  void StatementErrorHandler(RetCode retcode)
  void UnbindStmtColumns()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcCommandBuilder
Наследуется от: DbCommandBuilder
Поля:
Свойства:
  OdbcDataAdapter DataAdapter
Методы:
  void .ctor()
  void .ctor(OdbcDataAdapter adapter)
  OdbcDataAdapter get_DataAdapter()
  void set_DataAdapter(OdbcDataAdapter value)
  void OdbcRowUpdatingHandler(object sender, OdbcRowUpdatingEventArgs ruevent)
  OdbcCommand GetInsertCommand()
  OdbcCommand GetInsertCommand(bool useColumnsForParameterNames)
  OdbcCommand GetUpdateCommand()
  OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames)
  OdbcCommand GetDeleteCommand()
  OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames)
  string GetParameterName(int parameterOrdinal)
  string GetParameterName(string parameterName)
  string GetParameterPlaceholder(int parameterOrdinal)
  void ApplyParameterInfo(DbParameter parameter, DataRow datarow, StatementType statementType, bool whereClause)
  void DeriveParameters(OdbcCommand command)
  OdbcParameter[] DeriveParametersFromStoredProcedure(OdbcConnection connection, OdbcCommand command)
  string QuoteIdentifier(string unquotedIdentifier)
  string QuoteIdentifier(string unquotedIdentifier, OdbcConnection connection)
  void SetRowUpdatingHandler(DbDataAdapter adapter)
  string UnquoteIdentifier(string quotedIdentifier)
  string UnquoteIdentifier(string quotedIdentifier, OdbcConnection connection)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnection
Наследуется от: DbConnection
Поля:
  int _connectionTimeout
  OdbcInfoMessageEventHandler _infoMessageEventHandler
  WeakReference _weakTransaction
  OdbcConnectionHandle _connectionHandle
  ConnectionState _extraState
  DbConnectionFactory s_connectionFactory
  DbConnectionOptions _userConnectionOptions
  DbConnectionPoolGroup _poolGroup
  DbConnectionInternal _innerConnection
  int _closeCount
Свойства:
  OdbcConnectionHandle ConnectionHandle
  string ConnectionString
  int ConnectionTimeout
  string Database
  string DataSource
  string ServerVersion
  ConnectionState State
  OdbcConnectionPoolGroupProviderInfo ProviderInfo
  ConnectionState InternalState
  bool IsOpen
  OdbcTransaction LocalTransaction
  string Driver
  bool IsV3Driver
  int CloseCount
  DbConnectionFactory ConnectionFactory
  DbConnectionOptions ConnectionOptions
  DbConnectionInternal InnerConnection
  DbConnectionPoolGroup PoolGroup
  DbConnectionOptions UserConnectionOptions
Методы:
  void .ctor(string connectionString)
  void .ctor(OdbcConnection connection)
  OdbcConnectionHandle get_ConnectionHandle()
  void set_ConnectionHandle(OdbcConnectionHandle value)
  string get_ConnectionString()
  void set_ConnectionString(string value)
  int get_ConnectionTimeout()
  void set_ConnectionTimeout(int value)
  string get_Database()
  string get_DataSource()
  string get_ServerVersion()
  ConnectionState get_State()
  OdbcConnectionPoolGroupProviderInfo get_ProviderInfo()
  ConnectionState get_InternalState()
  bool get_IsOpen()
  OdbcTransaction get_LocalTransaction()
  void set_LocalTransaction(OdbcTransaction value)
  string get_Driver()
  bool get_IsV3Driver()
  void add_InfoMessage(OdbcInfoMessageEventHandler value)
  void remove_InfoMessage(OdbcInfoMessageEventHandler value)
  char EscapeChar(string method)
  string QuoteChar(string method)
  OdbcTransaction BeginTransaction()
  OdbcTransaction BeginTransaction(IsolationLevel isolevel)
  void RollbackDeadTransaction()
  void ChangeDatabase(string value)
  void CheckState(string method)
  object System.ICloneable.Clone()
  bool ConnectionIsAlive(Exception innerException)
  OdbcCommand CreateCommand()
  OdbcStatementHandle CreateStatementHandle()
  void Close()
  void DisposeMe(bool disposing)
  string GetConnectAttrString(SQL_ATTR attribute)
  int GetConnectAttr(SQL_ATTR attribute, HANDLER handler)
  string GetDiagSqlState()
  RetCode GetInfoInt16Unhandled(SQL_INFO info, Int16& resultValue)
  RetCode GetInfoInt32Unhandled(SQL_INFO info, Int32& resultValue)
  int GetInfoInt32Unhandled(SQL_INFO infotype)
  string GetInfoStringUnhandled(SQL_INFO info)
  string GetInfoStringUnhandled(SQL_INFO info, bool handleError)
  Exception HandleErrorNoThrow(OdbcHandle hrHandle, RetCode retcode)
  void HandleError(OdbcHandle hrHandle, RetCode retcode)
  void Open()
  void OnInfoMessage(OdbcInfoMessageEventArgs args)
  void ReleaseObjectPool()
  OdbcTransaction SetStateExecuting(string method, OdbcTransaction transaction)
  void SetSupportedType(SQL_TYPE sqltype)
  void FlagRestrictedSqlBindType(SQL_TYPE sqltype)
  void FlagUnsupportedConnectAttr(SQL_ATTR Attribute)
  void FlagUnsupportedStmtAttr(SQL_ATTR Attribute)
  void FlagUnsupportedColAttr(SQL_DESC v3FieldId, SQL_COLUMN v2FieldId)
  bool SQLGetFunctions(SQL_API odbcFunction)
  bool TestTypeSupport(SQL_TYPE sqltype)
  bool TestRestrictedSqlBindType(SQL_TYPE sqltype)
  DbTransaction BeginDbTransaction(IsolationLevel isolationLevel)
  OdbcTransaction Open_BeginTransaction(IsolationLevel isolevel)
  void Open_ChangeDatabase(string value)
  string Open_GetServerVersion()
  void .ctor()
  void CopyFrom(OdbcConnection connection)
  int get_CloseCount()
  DbConnectionFactory get_ConnectionFactory()
  DbConnectionOptions get_ConnectionOptions()
  string ConnectionString_Get()
  void ConnectionString_Set(string value)
  void ConnectionString_Set(DbConnectionPoolKey key)
  DbConnectionInternal get_InnerConnection()
  DbConnectionPoolGroup get_PoolGroup()
  void set_PoolGroup(DbConnectionPoolGroup value)
  DbConnectionOptions get_UserConnectionOptions()
  void Abort(Exception e)
  void AddWeakReference(object value, int tag)
  DbCommand CreateDbCommand()
  void Dispose(bool disposing)
  void NotifyWeakReference(int message)
  void PermissionDemand()
  void RemoveWeakReference(object value)
  void SetInnerConnectionEvent(DbConnectionInternal to)
  bool SetInnerConnectionFrom(DbConnectionInternal to, DbConnectionInternal from)
  void SetInnerConnectionTo(DbConnectionInternal to)
  void .cctor()
  void EnlistDistributedTransaction(ITransaction transaction)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnectionFactory
Наследуется от: DbConnectionFactory
Поля:
  OdbcConnectionFactory SingletonInstance
Свойства:
  DbProviderFactory ProviderFactory
Методы:
  void .ctor()
  DbProviderFactory get_ProviderFactory()
  DbConnectionInternal CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningObject)
  DbConnectionOptions CreateConnectionOptions(string connectionString, DbConnectionOptions previous)
  DbConnectionPoolGroupOptions CreateConnectionPoolGroupOptions(DbConnectionOptions connectionOptions)
  DbConnectionPoolGroupProviderInfo CreateConnectionPoolGroupProviderInfo(DbConnectionOptions connectionOptions)
  DbConnectionPoolGroup GetConnectionPoolGroup(DbConnection connection)
  DbConnectionInternal GetInnerConnection(DbConnection connection)
  void PermissionDemand(DbConnection outerConnection)
  void SetConnectionPoolGroup(DbConnection outerConnection, DbConnectionPoolGroup poolGroup)
  void SetInnerConnectionEvent(DbConnection owningObject, DbConnectionInternal to)
  bool SetInnerConnectionFrom(DbConnection owningObject, DbConnectionInternal to, DbConnectionInternal from)
  void SetInnerConnectionTo(DbConnection owningObject, DbConnectionInternal to)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnectionHandle
Наследуется от: OdbcHandle
Поля:
  HandleState _handleState
Свойства:
Методы:
  void .ctor(OdbcConnection connection, OdbcConnectionString constr, OdbcEnvironmentHandle environmentHandle)
  RetCode AutoCommitOff()
  RetCode BeginTransaction(IsolationLevel& isolevel)
  RetCode CompleteTransaction(short transactionOperation)
  RetCode CompleteTransaction(short transactionOperation, IntPtr handle)
  RetCode Connect(string connectionString)
  bool ReleaseHandle()
  RetCode GetConnectionAttribute(SQL_ATTR attribute, Byte[] buffer, Int32& cbActual)
  RetCode GetFunctions(SQL_API fFunction, Int16& fExists)
  RetCode GetInfo2(SQL_INFO info, Byte[] buffer, Int16& cbActual)
  RetCode GetInfo1(SQL_INFO info, Byte[] buffer)
  RetCode SetConnectionAttribute2(SQL_ATTR attribute, IntPtr value, int length)
  RetCode SetConnectionAttribute3(SQL_ATTR attribute, string buffer, int length)
  RetCode SetConnectionAttribute4(SQL_ATTR attribute, IDtcTransaction transaction, int length)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnectionPoolGroupProviderInfo
Наследуется от: DbConnectionPoolGroupProviderInfo
Поля:
  string _driverName
  string _driverVersion
  string _quoteChar
  char _escapeChar
  bool _hasQuoteChar
  bool _hasEscapeChar
  bool _isV3Driver
  int _supportedSQLTypes
  int _testedSQLTypes
  int _restrictedSQLBindTypes
  bool _noCurrentCatalog
  bool _noConnectionDead
  bool _noQueryTimeout
  bool _noSqlSoptSSNoBrowseTable
  bool _noSqlSoptSSHiddenColumns
  bool _noSqlCASSColumnKey
  bool _noSqlPrimaryKeys
Свойства:
  string DriverName
  string DriverVersion
  bool HasQuoteChar
  bool HasEscapeChar
  string QuoteChar
  char EscapeChar
  bool IsV3Driver
  int SupportedSQLTypes
  int TestedSQLTypes
  int RestrictedSQLBindTypes
  bool NoCurrentCatalog
  bool NoConnectionDead
  bool NoQueryTimeout
  bool NoSqlSoptSSNoBrowseTable
  bool NoSqlSoptSSHiddenColumns
  bool NoSqlCASSColumnKey
  bool NoSqlPrimaryKeys
Методы:
  string get_DriverName()
  void set_DriverName(string value)
  string get_DriverVersion()
  void set_DriverVersion(string value)
  bool get_HasQuoteChar()
  bool get_HasEscapeChar()
  string get_QuoteChar()
  void set_QuoteChar(string value)
  char get_EscapeChar()
  void set_EscapeChar(char value)
  bool get_IsV3Driver()
  void set_IsV3Driver(bool value)
  int get_SupportedSQLTypes()
  void set_SupportedSQLTypes(int value)
  int get_TestedSQLTypes()
  void set_TestedSQLTypes(int value)
  int get_RestrictedSQLBindTypes()
  void set_RestrictedSQLBindTypes(int value)
  bool get_NoCurrentCatalog()
  void set_NoCurrentCatalog(bool value)
  bool get_NoConnectionDead()
  void set_NoConnectionDead(bool value)
  bool get_NoQueryTimeout()
  void set_NoQueryTimeout(bool value)
  bool get_NoSqlSoptSSNoBrowseTable()
  void set_NoSqlSoptSSNoBrowseTable(bool value)
  bool get_NoSqlSoptSSHiddenColumns()
  void set_NoSqlSoptSSHiddenColumns(bool value)
  bool get_NoSqlCASSColumnKey()
  void set_NoSqlCASSColumnKey(bool value)
  bool get_NoSqlPrimaryKeys()
  void set_NoSqlPrimaryKeys(bool value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnectionString
Наследуется от: DbConnectionOptions
Поля:
  string _expandedConnectionString
Свойства:
Методы:
  void .ctor(string connectionString, bool validate)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnectionStringBuilder
Наследуется от: DbConnectionStringBuilder
Поля:
  String[] s_validKeywords
  Dictionary`2<string, Keywords> s_keywords
  String[] _knownKeywords
  string _dsn
  string _driver
Свойства:
  object Item
  string Driver
  string Dsn
  ICollection Keys
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string connectionString)
  object get_Item(string keyword)
  void set_Item(string keyword, object value)
  string get_Driver()
  void set_Driver(string value)
  string get_Dsn()
  void set_Dsn(string value)
  ICollection get_Keys()
  void Clear()
  bool ContainsKey(string keyword)
  string ConvertToString(object value)
  object GetAt(Keywords index)
  bool Remove(string keyword)
  void Reset(Keywords index)
  void SetValue(string keyword, string value)
  bool TryGetValue(string keyword, Object& value)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcDataAdapter
Наследуется от: DbDataAdapter
Поля:
  object s_eventRowUpdated
  object s_eventRowUpdating
  OdbcCommand _deleteCommand
  OdbcCommand _insertCommand
  OdbcCommand _selectCommand
  OdbcCommand _updateCommand
Свойства:
  OdbcCommand DeleteCommand
  IDbCommand System.Data.IDbDataAdapter.DeleteCommand
  OdbcCommand InsertCommand
  IDbCommand System.Data.IDbDataAdapter.InsertCommand
  OdbcCommand SelectCommand
  IDbCommand System.Data.IDbDataAdapter.SelectCommand
  OdbcCommand UpdateCommand
  IDbCommand System.Data.IDbDataAdapter.UpdateCommand
Методы:
  void .ctor()
  void .ctor(OdbcCommand selectCommand)
  void .ctor(string selectCommandText, OdbcConnection selectConnection)
  void .ctor(string selectCommandText, string selectConnectionString)
  void .ctor(OdbcDataAdapter from)
  OdbcCommand get_DeleteCommand()
  void set_DeleteCommand(OdbcCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_DeleteCommand()
  void System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value)
  OdbcCommand get_InsertCommand()
  void set_InsertCommand(OdbcCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_InsertCommand()
  void System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value)
  OdbcCommand get_SelectCommand()
  void set_SelectCommand(OdbcCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_SelectCommand()
  void System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value)
  OdbcCommand get_UpdateCommand()
  void set_UpdateCommand(OdbcCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_UpdateCommand()
  void System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value)
  void add_RowUpdated(OdbcRowUpdatedEventHandler value)
  void remove_RowUpdated(OdbcRowUpdatedEventHandler value)
  void add_RowUpdating(OdbcRowUpdatingEventHandler value)
  void remove_RowUpdating(OdbcRowUpdatingEventHandler value)
  object System.ICloneable.Clone()
  RowUpdatedEventArgs CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  RowUpdatingEventArgs CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  void OnRowUpdated(RowUpdatedEventArgs value)
  void OnRowUpdating(RowUpdatingEventArgs value)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcDataReader
Наследуется от: DbDataReader
Поля:
  OdbcCommand _command
  int _recordAffected
  FieldNameLookup _fieldNameLookup
  DbCache _dataCache
  HasRowsStatus _hasRows
  bool _isClosed
  bool _isRead
  bool _isValidResult
  bool _noMoreResults
  bool _noMoreRows
  bool _skipReadOnce
  int _hiddenColumns
  CommandBehavior _commandBehavior
  int _row
  int _column
  long _sequentialBytesRead
  int s_objectTypeCount
  int ObjectID
  MetaData[] _metadata
  DataTable _schemaTable
  string _cmdText
  CMDWrapper _cmdWrapper
Свойства:
  CNativeBuffer Buffer
  OdbcConnection Connection
  OdbcCommand Command
  OdbcStatementHandle StatementHandle
  OdbcStatementHandle KeyInfoStatementHandle
  bool IsCancelingCommand
  bool IsNonCancelingCommand
  int Depth
  int FieldCount
  bool HasRows
  bool IsClosed
  int RecordsAffected
  object Item
  object Item
Методы:
  void .ctor(OdbcCommand command, CMDWrapper cmdWrapper, CommandBehavior commandbehavior)
  CNativeBuffer get_Buffer()
  OdbcConnection get_Connection()
  OdbcCommand get_Command()
  void set_Command(OdbcCommand value)
  OdbcStatementHandle get_StatementHandle()
  OdbcStatementHandle get_KeyInfoStatementHandle()
  bool IsBehavior(CommandBehavior behavior)
  bool get_IsCancelingCommand()
  bool get_IsNonCancelingCommand()
  int get_Depth()
  int get_FieldCount()
  bool get_HasRows()
  RetCode FieldCountNoThrow(Int16& cColsAffected)
  bool get_IsClosed()
  SQLLEN GetRowCount()
  int CalculateRecordsAffected(int cRowsAffected)
  int get_RecordsAffected()
  object get_Item(int i)
  object get_Item(string value)
  void Close()
  void Close(bool disposing)
  void Dispose(bool disposing)
  string GetDataTypeName(int i)
  IEnumerator GetEnumerator()
  Type GetFieldType(int i)
  string GetName(int i)
  int GetOrdinal(string value)
  int IndexOf(string value)
  bool IsCommandBehavior(CommandBehavior condition)
  object GetValue(int i, TypeMap typemap)
  object GetValue(int i)
  int GetValues(Object[] values)
  TypeMap GetSqlType(int i)
  bool IsDBNull(int i)
  byte GetByte(int i)
  object internalGetByte(int i)
  char GetChar(int i)
  object internalGetChar(int i)
  short GetInt16(int i)
  object internalGetInt16(int i)
  int GetInt32(int i)
  object internalGetInt32(int i)
  long GetInt64(int i)
  object internalGetInt64(int i)
  bool GetBoolean(int i)
  object internalGetBoolean(int i)
  float GetFloat(int i)
  object internalGetFloat(int i)
  DateTime GetDate(int i)
  object internalGetDate(int i)
  DateTime GetDateTime(int i)
  object internalGetDateTime(int i)
  decimal GetDecimal(int i)
  object internalGetDecimal(int i)
  double GetDouble(int i)
  object internalGetDouble(int i)
  Guid GetGuid(int i)
  object internalGetGuid(int i)
  string GetString(int i)
  object internalGetString(int i)
  TimeSpan GetTime(int i)
  object internalGetTime(int i)
  void SetCurrentRowColumnInfo(int row, int column)
  long GetBytes(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  long GetChars(int i, long dataIndex, Char[] buffer, int bufferIndex, int length)
  long GetBytesOrChars(int i, long dataIndex, Array buffer, bool isCharsBuffer, int bufferIndex, int length)
  int readBytesOrCharsSequentialAccess(int i, Array buffer, bool isCharsBuffer, int bufferIndex, long bytesOrCharsLength)
  object internalGetBytes(int i)
  SQLLEN GetColAttribute(int iColumn, SQL_DESC v3FieldId, SQL_COLUMN v2FieldId, HANDLER handler)
  string GetColAttributeStr(int i, SQL_DESC v3FieldId, SQL_COLUMN v2FieldId, HANDLER handler)
  string GetDescFieldStr(int i, SQL_DESC attribute, HANDLER handler)
  bool QueryFieldInfo(int i, SQL_C sqlctype, Int32& cbLengthOrIndicator)
  bool GetData(int i, SQL_C sqlctype)
  bool GetData(int i, SQL_C sqlctype, int cb, Int32& cbLengthOrIndicator)
  bool Read()
  void FirstResult()
  bool NextResult()
  bool NextResult(bool disposing, bool allresults)
  void BuildMetaDataInfo()
  DataTable NewSchemaTable()
  DataTable GetSchemaTable()
  int RetrieveKeyInfo(bool needkeyinfo, QualifiedTableName qualifiedTableName, bool quoted)
  int RetrieveKeyInfoFromStatistics(QualifiedTableName qualifiedTableName, bool quoted)
  bool SameIndexColumn(string currentindexname, string indexname, int ordinal, int ncols)
  int GetOrdinalFromBaseColName(string columnname)
  int GetOrdinalFromBaseColName(string columnname, string tablename)
  string GetTableNameFromCommandText()
  void SetBaseTableNames(QualifiedTableName qualifiedTableName)
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcEnvironment
Наследуется от: object
Поля:
  object s_globalEnvironmentHandle
  object s_globalEnvironmentHandleLock
Свойства:
Методы:
  void .ctor()
  OdbcEnvironmentHandle GetGlobalEnvironmentHandle()
  void ReleaseObjectPool()
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcEnvironmentHandle
Наследуется от: OdbcHandle
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcError
Наследуется от: object
Поля:
  string _message
  string _state
  int _nativeerror
  string _source
Свойства:
  string Message
  string SQLState
  int NativeError
  string Source
Методы:
  void .ctor(string source, string message, string state, int nativeerror)
  string get_Message()
  string get_SQLState()
  int get_NativeError()
  string get_Source()
  void SetSource(string Source)
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcErrorCollection
Наследуется от: object
Поля:
  ArrayList _items
Свойства:
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.ICollection.IsSynchronized
  int Count
  OdbcError Item
Методы:
  void .ctor()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.ICollection.get_IsSynchronized()
  int get_Count()
  OdbcError get_Item(int i)
  void Add(OdbcError error)
  void CopyTo(Array array, int i)
  void CopyTo(OdbcError[] array, int i)
  IEnumerator GetEnumerator()
  void SetSource(string Source)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcException
Наследуется от: DbException
Поля:
  OdbcErrorCollection _odbcErrors
Свойства:
  OdbcErrorCollection Errors
  string Source
Методы:
  OdbcException CreateException(OdbcErrorCollection errors, RetCode retcode)
  void .ctor(string message, OdbcErrorCollection errors)
  OdbcErrorCollection get_Errors()
  void GetObjectData(SerializationInfo si, StreamingContext context)
  string get_Source()
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcFactory
Наследуется от: DbProviderFactory
Поля:
  OdbcFactory Instance
Свойства:
Методы:
  void .ctor()
  DbCommand CreateCommand()
  DbCommandBuilder CreateCommandBuilder()
  DbConnection CreateConnection()
  DbConnectionStringBuilder CreateConnectionStringBuilder()
  DbDataAdapter CreateDataAdapter()
  DbParameter CreateParameter()
  CodeAccessPermission CreatePermission(PermissionState state)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcHandle
Наследуется от: SafeHandle
Поля:
  SQL_HANDLE _handleType
  OdbcHandle _parentHandle
Свойства:
  SQL_HANDLE HandleType
  bool IsInvalid
Методы:
  void .ctor(SQL_HANDLE handleType, OdbcHandle parentHandle)
  void .ctor(OdbcStatementHandle parentHandle, SQL_ATTR attribute)
  SQL_HANDLE get_HandleType()
  bool get_IsInvalid()
  bool ReleaseHandle()
  RetCode GetDiagnosticField(String& sqlState)
  RetCode GetDiagnosticRecord(short record, String& sqlState, StringBuilder message, Int32& nativeError, Int16& cchActual)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcDescriptorHandle
Наследуется от: OdbcHandle
Поля:
Свойства:
Методы:
  void .ctor(OdbcStatementHandle statementHandle, SQL_ATTR attribute)
  RetCode GetDescriptionField(int i, SQL_DESC attribute, CNativeBuffer buffer, Int32& numericAttribute)
  RetCode SetDescriptionField1(short ordinal, SQL_DESC type, IntPtr value)
  RetCode SetDescriptionField2(short ordinal, SQL_DESC type, HandleRef value)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcInfoMessageEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OdbcInfoMessageEventArgs e)
  IAsyncResult BeginInvoke(object sender, OdbcInfoMessageEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcInfoMessageEventArgs
Наследуется от: EventArgs
Поля:
  OdbcErrorCollection _errors
Свойства:
  OdbcErrorCollection Errors
  string Message
Методы:
  void .ctor(OdbcErrorCollection errors)
  OdbcErrorCollection get_Errors()
  string get_Message()
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcMetaDataCollectionNames
Наследуется от: object
Поля:
  string Columns
  string Indexes
  string Procedures
  string ProcedureColumns
  string ProcedureParameters
  string Tables
  string Views
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcMetaDataColumnNames
Наследуется от: object
Поля:
  string BooleanFalseLiteral
  string BooleanTrueLiteral
  string SQLType
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcMetaDataFactory
Наследуется от: DbMetaDataFactory
Поля:
  string _collectionName
  string _populationMechanism
  string _prepareCollection
  SchemaFunctionName[] _schemaMapping
  Char[] KeywordSeparatorChar
Свойства:
Методы:
  void .ctor(Stream XMLStream, string serverVersion, string serverVersionNormalized, OdbcConnection connection)
  object BooleanFromODBC(object odbcSource)
  OdbcCommand GetCommand(OdbcConnection connection)
  DataTable DataTableFromDataReader(IDataReader reader, string tableName)
  void DataTableFromDataReaderDataTypes(DataTable dataTypesTable, OdbcDataReader dataReader, OdbcConnection connection)
  DataTable DataTableFromDataReaderIndex(IDataReader reader, string tableName, string restrictionIndexName)
  DataTable DataTableFromDataReaderProcedureColumns(IDataReader reader, string tableName, bool isColumn)
  DataTable DataTableFromDataReaderProcedures(IDataReader reader, string tableName, short procedureType)
  void FillOutRestrictions(int restrictionsCount, String[] restrictions, Object[] allRestrictions, string collectionName)
  DataTable GetColumnsCollection(String[] restrictions, OdbcConnection connection)
  DataTable GetDataSourceInformationCollection(String[] restrictions, OdbcConnection connection)
  DataTable GetDataTypesCollection(String[] restrictions, OdbcConnection connection)
  DataTable GetIndexCollection(String[] restrictions, OdbcConnection connection)
  DataTable GetProcedureColumnsCollection(String[] restrictions, OdbcConnection connection, bool isColumns)
  DataTable GetProceduresCollection(String[] restrictions, OdbcConnection connection)
  DataTable GetReservedWordsCollection(String[] restrictions, OdbcConnection connection)
  DataTable GetTablesCollection(String[] restrictions, OdbcConnection connection, bool isTables)
  bool IncludeIndexRow(object rowIndexName, string restrictionIndexName, short rowIndexType)
  DataTable NewDataTableFromReader(IDataReader reader, Object[]& values, string tableName)
  DataTable PrepareCollection(string collectionName, String[] restrictions, DbConnection connection)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcParameter
Наследуется от: DbParameter
Поля:
  bool _hasChanged
  bool _userSpecifiedType
  TypeMap _typemap
  TypeMap _bindtype
  string _parameterName
  byte _precision
  byte _scale
  bool _hasScale
  SQL_C _boundSqlCType
  SQL_TYPE _boundParameterType
  int _boundSize
  int _boundScale
  IntPtr _boundBuffer
  IntPtr _boundIntbuffer
  TypeMap _originalbindtype
  byte _internalPrecision
  bool _internalShouldSerializeSize
  int _internalSize
  ParameterDirection _internalDirection
  byte _internalScale
  int _internalOffset
  bool _internalUserSpecifiedType
  object _internalValue
  int _preparedOffset
  int _preparedSize
  int _preparedBufferSize
  object _preparedValue
  int _preparedIntOffset
  int _preparedValueOffset
  SQL_C _prepared_Sql_C_Type
  object _value
  object _parent
  ParameterDirection _direction
  int _size
  int _offset
  string _sourceColumn
  DataRowVersion _sourceVersion
  bool _sourceColumnNullMapping
  bool _isNullable
  object _coercedValue
Свойства:
  DbType DbType
  OdbcType OdbcType
  bool HasChanged
  bool UserSpecifiedType
  string ParameterName
  byte Precision
  byte PrecisionInternal
  byte Scale
  byte ScaleInternal
  object Value
  object CoercedValue
  ParameterDirection Direction
  bool IsNullable
  int Offset
  int Size
  string SourceColumn
  bool SourceColumnNullMapping
  DataRowVersion SourceVersion
Методы:
  void .ctor()
  void .ctor(string name, object value)
  void .ctor(string name, OdbcType type)
  void .ctor(string name, OdbcType type, int size)
  void .ctor(string name, OdbcType type, int size, string sourcecolumn)
  void .ctor(string parameterName, OdbcType odbcType, int size, ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, DataRowVersion srcVersion, object value)
  void .ctor(string parameterName, OdbcType odbcType, int size, ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value)
  DbType get_DbType()
  void set_DbType(DbType value)
  void ResetDbType()
  OdbcType get_OdbcType()
  void set_OdbcType(OdbcType value)
  void ResetOdbcType()
  void set_HasChanged(bool value)
  bool get_UserSpecifiedType()
  string get_ParameterName()
  void set_ParameterName(string value)
  byte get_Precision()
  void set_Precision(byte value)
  byte get_PrecisionInternal()
  void set_PrecisionInternal(byte value)
  bool ShouldSerializePrecision()
  byte get_Scale()
  void set_Scale(byte value)
  byte get_ScaleInternal()
  void set_ScaleInternal(byte value)
  bool ShouldSerializeScale()
  bool ShouldSerializeScale(byte scale)
  int GetColumnSize(object value, int offset, int ordinal)
  int GetValueSize(object value, int offset)
  int GetParameterSize(object value, int offset, int ordinal)
  byte GetParameterPrecision(object value)
  byte GetParameterScale(object value)
  object System.ICloneable.Clone()
  void CopyParameterInternal()
  void CloneHelper(OdbcParameter destination)
  void ClearBinding()
  void PrepareForBind(OdbcCommand command, short ordinal, Int32& parameterBufferSize)
  void Bind(OdbcStatementHandle hstmt, OdbcCommand command, short ordinal, CNativeBuffer parameterBuffer, bool allowReentrance)
  void GetOutputValue(CNativeBuffer parameterBuffer)
  object ProcessAndGetParameterValue()
  void PropertyChanging()
  void PropertyTypeChanging()
  void SetInputValue(object value, SQL_C sql_c_type, int cbsize, int sizeorprecision, int offset, CNativeBuffer parameterBuffer)
  SQL_PARAM SqlDirectionFromParameterDirection()
  object get_Value()
  void set_Value(object value)
  byte ValuePrecision(object value)
  byte ValueScale(object value)
  int ValueSize(object value)
  void .ctor(OdbcParameter source)
  object get_CoercedValue()
  void set_CoercedValue(object value)
  ParameterDirection get_Direction()
  void set_Direction(ParameterDirection value)
  bool get_IsNullable()
  void set_IsNullable(bool value)
  int get_Offset()
  void set_Offset(int value)
  int get_Size()
  void set_Size(int value)
  bool ShouldSerializeSize()
  string get_SourceColumn()
  void set_SourceColumn(string value)
  bool get_SourceColumnNullMapping()
  void set_SourceColumnNullMapping(bool value)
  DataRowVersion get_SourceVersion()
  void set_SourceVersion(DataRowVersion value)
  void CloneHelperCore(OdbcParameter destination)
  object CompareExchangeParent(object value, object comparand)
  void ResetParent()
  string ToString()
  byte ValuePrecisionCore(object value)
  byte ValueScaleCore(object value)
  int ValueSizeCore(object value)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcParameterCollection
Наследуется от: DbParameterCollection
Поля:
  bool _rebindCollection
  Type s_itemType
  List`1<OdbcParameter> _items
Свойства:
  bool RebindCollection
  OdbcParameter Item
  OdbcParameter Item
  int Count
  List`1<OdbcParameter> InnerList
  bool IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor()
  bool get_RebindCollection()
  void set_RebindCollection(bool value)
  OdbcParameter get_Item(int index)
  void set_Item(int index, OdbcParameter value)
  OdbcParameter get_Item(string parameterName)
  void set_Item(string parameterName, OdbcParameter value)
  OdbcParameter Add(OdbcParameter value)
  OdbcParameter Add(string parameterName, object value)
  OdbcParameter AddWithValue(string parameterName, object value)
  OdbcParameter Add(string parameterName, OdbcType odbcType)
  OdbcParameter Add(string parameterName, OdbcType odbcType, int size)
  OdbcParameter Add(string parameterName, OdbcType odbcType, int size, string sourceColumn)
  void AddRange(OdbcParameter[] values)
  void Bind(OdbcCommand command, CMDWrapper cmdWrapper, CNativeBuffer parameterBuffer)
  int CalcParameterBufferSize(OdbcCommand command)
  void ClearBindings()
  bool Contains(string value)
  bool Contains(OdbcParameter value)
  void CopyTo(OdbcParameter[] array, int index)
  void OnChange()
  void GetOutputValues(CMDWrapper cmdWrapper)
  int IndexOf(OdbcParameter value)
  void Insert(int index, OdbcParameter value)
  void Remove(OdbcParameter value)
  int get_Count()
  List`1<OdbcParameter> get_InnerList()
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  object get_SyncRoot()
  int Add(object value)
  void AddRange(Array values)
  int CheckName(string parameterName)
  void Clear()
  bool Contains(object value)
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  DbParameter GetParameter(int index)
  DbParameter GetParameter(string parameterName)
  int IndexOf(IEnumerable items, string parameterName)
  int IndexOf(string parameterName)
  int IndexOf(object value)
  void Insert(int index, object value)
  void RangeCheck(int index)
  void Remove(object value)
  void RemoveAt(int index)
  void RemoveAt(string parameterName)
  void RemoveIndex(int index)
  void Replace(int index, object newValue)
  void SetParameter(int index, DbParameter value)
  void SetParameter(string parameterName, DbParameter value)
  void Validate(int index, object value)
  void ValidateType(object value)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcReferenceCollection
Наследуется от: DbReferenceCollection
Поля:
  int Closing
  int Recover
  int CommandTag
Свойства:
Методы:
  void Add(object value, int tag)
  void NotifyItem(int message, int tag, object value)
  void Remove(object value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcRowUpdatingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OdbcRowUpdatingEventArgs e)
  IAsyncResult BeginInvoke(object sender, OdbcRowUpdatingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcRowUpdatedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OdbcRowUpdatedEventArgs e)
  IAsyncResult BeginInvoke(object sender, OdbcRowUpdatedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcRowUpdatingEventArgs
Наследуется от: RowUpdatingEventArgs
Поля:
Свойства:
  OdbcCommand Command
  IDbCommand BaseCommand
Методы:
  void .ctor(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  OdbcCommand get_Command()
  void set_Command(OdbcCommand value)
  IDbCommand get_BaseCommand()
  void set_BaseCommand(IDbCommand value)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcRowUpdatedEventArgs
Наследуется от: RowUpdatedEventArgs
Поля:
Свойства:
  OdbcCommand Command
Методы:
  void .ctor(DataRow row, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  OdbcCommand get_Command()
--------------------------------------------------
Класс: System.Data.Odbc.SQLLEN
Наследуется от: ValueType
Поля:
  IntPtr _value
Свойства:
Методы:
  void .ctor(int value)
  void .ctor(long value)
  void .ctor(IntPtr value)
  SQLLEN op_Implicit(int value)
  SQLLEN op_Explicit(long value)
  int op_Implicit(SQLLEN value)
  long op_Explicit(SQLLEN value)
  long ToInt64()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcStatementHandle
Наследуется от: OdbcHandle
Поля:
Свойства:
Методы:
  void .ctor(OdbcConnectionHandle connectionHandle)
  RetCode BindColumn2(int columnNumber, SQL_C targetType, HandleRef buffer, IntPtr length, IntPtr srLen_or_Ind)
  RetCode BindColumn3(int columnNumber, SQL_C targetType, IntPtr srLen_or_Ind)
  RetCode BindParameter(short ordinal, short parameterDirection, SQL_C sqlctype, SQL_TYPE sqltype, IntPtr cchSize, IntPtr scale, HandleRef buffer, IntPtr bufferLength, HandleRef intbuffer)
  RetCode Cancel()
  RetCode CloseCursor()
  RetCode ColumnAttribute(int columnNumber, short fieldIdentifier, CNativeBuffer characterAttribute, Int16& stringLength, SQLLEN& numericAttribute)
  RetCode Columns(string tableCatalog, string tableSchema, string tableName, string columnName)
  RetCode Execute()
  RetCode ExecuteDirect(string commandText)
  RetCode Fetch()
  RetCode FreeStatement(STMT stmt)
  RetCode GetData(int index, SQL_C sqlctype, CNativeBuffer buffer, int cb, IntPtr& cbActual)
  RetCode GetStatementAttribute(SQL_ATTR attribute, IntPtr& value, Int32& stringLength)
  RetCode GetTypeInfo(short fSqlType)
  RetCode MoreResults()
  RetCode NumberOfResultColumns(Int16& columnsAffected)
  RetCode Prepare(string commandText)
  RetCode PrimaryKeys(string catalogName, string schemaName, string tableName)
  RetCode Procedures(string procedureCatalog, string procedureSchema, string procedureName)
  RetCode ProcedureColumns(string procedureCatalog, string procedureSchema, string procedureName, string columnName)
  RetCode RowCount(SQLLEN& rowCount)
  RetCode SetStatementAttribute(SQL_ATTR attribute, IntPtr value, SQL_IS stringLength)
  RetCode SpecialColumns(string quotedTable)
  RetCode Statistics(string tableCatalog, string tableSchema, string tableName, short unique, short accuracy)
  RetCode Statistics(string tableName)
  RetCode Tables(string tableCatalog, string tableSchema, string tableName, string tableType)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcTransaction
Наследуется от: DbTransaction
Поля:
  OdbcConnection _connection
  IsolationLevel _isolevel
  OdbcConnectionHandle _handle
Свойства:
  OdbcConnection Connection
  DbConnection DbConnection
  IsolationLevel IsolationLevel
Методы:
  void .ctor(OdbcConnection connection, IsolationLevel isolevel, OdbcConnectionHandle handle)
  OdbcConnection get_Connection()
  DbConnection get_DbConnection()
  IsolationLevel get_IsolationLevel()
  void Commit()
  void Dispose(bool disposing)
  void Rollback()
  void .ctor()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcType
Наследуется от: Enum
Поля:
  int value__
  OdbcType BigInt
  OdbcType Binary
  OdbcType Bit
  OdbcType Char
  OdbcType DateTime
  OdbcType Decimal
  OdbcType Numeric
  OdbcType Double
  OdbcType Image
  OdbcType Int
  OdbcType NChar
  OdbcType NText
  OdbcType NVarChar
  OdbcType Real
  OdbcType UniqueIdentifier
  OdbcType SmallDateTime
  OdbcType SmallInt
  OdbcType Text
  OdbcType Timestamp
  OdbcType TinyInt
  OdbcType VarBinary
  OdbcType VarChar
  OdbcType Date
  OdbcType Time
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Odbc.CNativeBuffer
Наследуется от: DbBuffer
Поля:
Свойства:
  short ShortLength
Методы:
  void .ctor(int initialSize)
  short get_ShortLength()
  object MarshalToManaged(int offset, SQL_C sqlctype, int cb)
  void MarshalToNative(int offset, object value, SQL_C sqlctype, int sizeorprecision, int valueOffset)
  HandleRef PtrOffset(int offset, int length)
  void WriteODBCDateTime(int offset, DateTime value)
--------------------------------------------------
Класс: System.Data.Odbc.CStringTokenizer
Наследуется от: object
Поля:
  StringBuilder _token
  string _sqlstatement
  char _quote
  char _escape
  int _len
  int _idx
Свойства:
  int CurrentPosition
Методы:
  void .ctor(string text, char quote, char escape)
  int get_CurrentPosition()
  string NextToken()
  int GetTokenFromBracket(int curidx)
  int GetTokenFromQuote(int curidx)
  bool IsValidNameChar(char ch)
  int FindTokenIndex(string tokenString)
  bool StartsWith(string tokenString)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcConnectionOpen
Наследуется от: DbConnectionInternal
Поля:
Свойства:
  OdbcConnection OuterConnection
  string ServerVersion
Методы:
  void .ctor(OdbcConnection outerConnection, OdbcConnectionString connectionOptions)
  OdbcConnection get_OuterConnection()
  string get_ServerVersion()
  void Activate(Transaction transaction)
  DbTransaction BeginTransaction(IsolationLevel isolevel)
  OdbcTransaction BeginOdbcTransaction(IsolationLevel isolevel)
  void ChangeDatabase(string value)
  DbReferenceCollection CreateReferenceCollection()
  void Deactivate()
  void EnlistTransaction(Transaction transaction)
--------------------------------------------------
Класс: System.Data.Odbc.OdbcPermission
Наследуется от: DBDataPermission
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  void .ctor(PermissionState state, bool allowBlankPassword)
  void .ctor(OdbcPermission permission)
  void .ctor(OdbcPermissionAttribute permissionAttribute)
  void .ctor(OdbcConnectionString constr)
  void Add(string connectionString, string restrictions, KeyRestrictionBehavior behavior)
  IPermission Copy()
--------------------------------------------------
Класс: System.Data.Odbc.OdbcPermissionAttribute
Наследуется от: DBDataPermissionAttribute
Поля:
Свойства:
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Data.SqlTypes.SQLResource
Наследуется от: object
Поля:
Свойства:
  string NullString
  string MessageString
  string ArithOverflowMessage
  string DivideByZeroMessage
  string NullValueMessage
  string TruncationMessage
  string DateTimeOverflowMessage
  string ConcatDiffCollationMessage
  string CompareDiffCollationMessage
  string InvalidFlagMessage
  string NumeToDecOverflowMessage
  string ConversionOverflowMessage
  string InvalidDateTimeMessage
  string TimeZoneSpecifiedMessage
  string InvalidArraySizeMessage
  string InvalidPrecScaleMessage
  string FormatMessage
  string NotFilledMessage
  string AlreadyFilledMessage
  string ClosedXmlReaderMessage
Методы:
  string get_NullString()
  string get_MessageString()
  string get_ArithOverflowMessage()
  string get_DivideByZeroMessage()
  string get_NullValueMessage()
  string get_TruncationMessage()
  string get_DateTimeOverflowMessage()
  string get_ConcatDiffCollationMessage()
  string get_CompareDiffCollationMessage()
  string get_InvalidFlagMessage()
  string get_NumeToDecOverflowMessage()
  string get_ConversionOverflowMessage()
  string get_InvalidDateTimeMessage()
  string get_TimeZoneSpecifiedMessage()
  string get_InvalidArraySizeMessage()
  string get_InvalidPrecScaleMessage()
  string get_FormatMessage()
  string get_NotFilledMessage()
  string get_AlreadyFilledMessage()
  string get_ClosedXmlReaderMessage()
  string InvalidOpStreamClosed(string method)
  string InvalidOpStreamNonWritable(string method)
  string InvalidOpStreamNonReadable(string method)
  string InvalidOpStreamNonSeekable(string method)
--------------------------------------------------
Класс: System.Data.SqlTypes.INullable
Поля:
Свойства:
  bool IsNull
Методы:
  bool get_IsNull()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlBinary
Наследуется от: ValueType
Поля:
  Byte[] _value
  SqlBinary Null
Свойства:
  bool IsNull
  Byte[] Value
  byte Item
  int Length
Методы:
  void .ctor(bool fNull)
  void .ctor(Byte[] value)
  void .ctor(Byte[] value, bool ignored)
  bool get_IsNull()
  Byte[] get_Value()
  byte get_Item(int index)
  int get_Length()
  SqlBinary op_Implicit(Byte[] x)
  Byte[] op_Explicit(SqlBinary x)
  string ToString()
  SqlBinary op_Addition(SqlBinary x, SqlBinary y)
  EComparison PerformCompareByte(Byte[] x, Byte[] y)
  SqlBinary op_Explicit(SqlGuid x)
  SqlBoolean op_Equality(SqlBinary x, SqlBinary y)
  SqlBoolean op_Inequality(SqlBinary x, SqlBinary y)
  SqlBoolean op_LessThan(SqlBinary x, SqlBinary y)
  SqlBoolean op_GreaterThan(SqlBinary x, SqlBinary y)
  SqlBoolean op_LessThanOrEqual(SqlBinary x, SqlBinary y)
  SqlBoolean op_GreaterThanOrEqual(SqlBinary x, SqlBinary y)
  SqlBinary Add(SqlBinary x, SqlBinary y)
  SqlBinary Concat(SqlBinary x, SqlBinary y)
  SqlBoolean Equals(SqlBinary x, SqlBinary y)
  SqlBoolean NotEquals(SqlBinary x, SqlBinary y)
  SqlBoolean LessThan(SqlBinary x, SqlBinary y)
  SqlBoolean GreaterThan(SqlBinary x, SqlBinary y)
  SqlBoolean LessThanOrEqual(SqlBinary x, SqlBinary y)
  SqlBoolean GreaterThanOrEqual(SqlBinary x, SqlBinary y)
  SqlGuid ToSqlGuid()
  int CompareTo(object value)
  int CompareTo(SqlBinary value)
  bool Equals(object value)
  int HashByteArray(Byte[] rgbValue, int length)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlBoolean
Наследуется от: ValueType
Поля:
  byte m_value
  byte x_Null
  byte x_False
  byte x_True
  SqlBoolean True
  SqlBoolean False
  SqlBoolean Null
  SqlBoolean Zero
  SqlBoolean One
Свойства:
  bool IsNull
  bool Value
  bool IsTrue
  bool IsFalse
  byte ByteValue
Методы:
  void .ctor(bool value)
  void .ctor(int value)
  void .ctor(int value, bool fNull)
  bool get_IsNull()
  bool get_Value()
  bool get_IsTrue()
  bool get_IsFalse()
  SqlBoolean op_Implicit(bool x)
  bool op_Explicit(SqlBoolean x)
  SqlBoolean op_LogicalNot(SqlBoolean x)
  bool op_True(SqlBoolean x)
  bool op_False(SqlBoolean x)
  SqlBoolean op_BitwiseAnd(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_BitwiseOr(SqlBoolean x, SqlBoolean y)
  byte get_ByteValue()
  string ToString()
  SqlBoolean Parse(string s)
  SqlBoolean op_OnesComplement(SqlBoolean x)
  SqlBoolean op_ExclusiveOr(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_Explicit(SqlByte x)
  SqlBoolean op_Explicit(SqlInt16 x)
  SqlBoolean op_Explicit(SqlInt32 x)
  SqlBoolean op_Explicit(SqlInt64 x)
  SqlBoolean op_Explicit(SqlDouble x)
  SqlBoolean op_Explicit(SqlSingle x)
  SqlBoolean op_Explicit(SqlMoney x)
  SqlBoolean op_Explicit(SqlDecimal x)
  SqlBoolean op_Explicit(SqlString x)
  SqlBoolean op_Equality(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_Inequality(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_LessThan(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_GreaterThan(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_LessThanOrEqual(SqlBoolean x, SqlBoolean y)
  SqlBoolean op_GreaterThanOrEqual(SqlBoolean x, SqlBoolean y)
  SqlBoolean OnesComplement(SqlBoolean x)
  SqlBoolean And(SqlBoolean x, SqlBoolean y)
  SqlBoolean Or(SqlBoolean x, SqlBoolean y)
  SqlBoolean Xor(SqlBoolean x, SqlBoolean y)
  SqlBoolean Equals(SqlBoolean x, SqlBoolean y)
  SqlBoolean NotEquals(SqlBoolean x, SqlBoolean y)
  SqlBoolean GreaterThan(SqlBoolean x, SqlBoolean y)
  SqlBoolean LessThan(SqlBoolean x, SqlBoolean y)
  SqlBoolean GreaterThanOrEquals(SqlBoolean x, SqlBoolean y)
  SqlBoolean LessThanOrEquals(SqlBoolean x, SqlBoolean y)
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlBoolean value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlByte
Наследуется от: ValueType
Поля:
  bool m_fNotNull
  byte m_value
  int s_iBitNotByteMax
  SqlByte Null
  SqlByte Zero
  SqlByte MinValue
  SqlByte MaxValue
Свойства:
  bool IsNull
  byte Value
Методы:
  void .ctor(bool fNull)
  void .ctor(byte value)
  bool get_IsNull()
  byte get_Value()
  SqlByte op_Implicit(byte x)
  byte op_Explicit(SqlByte x)
  string ToString()
  SqlByte Parse(string s)
  SqlByte op_OnesComplement(SqlByte x)
  SqlByte op_Addition(SqlByte x, SqlByte y)
  SqlByte op_Subtraction(SqlByte x, SqlByte y)
  SqlByte op_Multiply(SqlByte x, SqlByte y)
  SqlByte op_Division(SqlByte x, SqlByte y)
  SqlByte op_Modulus(SqlByte x, SqlByte y)
  SqlByte op_BitwiseAnd(SqlByte x, SqlByte y)
  SqlByte op_BitwiseOr(SqlByte x, SqlByte y)
  SqlByte op_ExclusiveOr(SqlByte x, SqlByte y)
  SqlByte op_Explicit(SqlBoolean x)
  SqlByte op_Explicit(SqlMoney x)
  SqlByte op_Explicit(SqlInt16 x)
  SqlByte op_Explicit(SqlInt32 x)
  SqlByte op_Explicit(SqlInt64 x)
  SqlByte op_Explicit(SqlSingle x)
  SqlByte op_Explicit(SqlDouble x)
  SqlByte op_Explicit(SqlDecimal x)
  SqlByte op_Explicit(SqlString x)
  SqlBoolean op_Equality(SqlByte x, SqlByte y)
  SqlBoolean op_Inequality(SqlByte x, SqlByte y)
  SqlBoolean op_LessThan(SqlByte x, SqlByte y)
  SqlBoolean op_GreaterThan(SqlByte x, SqlByte y)
  SqlBoolean op_LessThanOrEqual(SqlByte x, SqlByte y)
  SqlBoolean op_GreaterThanOrEqual(SqlByte x, SqlByte y)
  SqlByte OnesComplement(SqlByte x)
  SqlByte Add(SqlByte x, SqlByte y)
  SqlByte Subtract(SqlByte x, SqlByte y)
  SqlByte Multiply(SqlByte x, SqlByte y)
  SqlByte Divide(SqlByte x, SqlByte y)
  SqlByte Mod(SqlByte x, SqlByte y)
  SqlByte Modulus(SqlByte x, SqlByte y)
  SqlByte BitwiseAnd(SqlByte x, SqlByte y)
  SqlByte BitwiseOr(SqlByte x, SqlByte y)
  SqlByte Xor(SqlByte x, SqlByte y)
  SqlBoolean Equals(SqlByte x, SqlByte y)
  SqlBoolean NotEquals(SqlByte x, SqlByte y)
  SqlBoolean LessThan(SqlByte x, SqlByte y)
  SqlBoolean GreaterThan(SqlByte x, SqlByte y)
  SqlBoolean LessThanOrEqual(SqlByte x, SqlByte y)
  SqlBoolean GreaterThanOrEqual(SqlByte x, SqlByte y)
  SqlBoolean ToSqlBoolean()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlByte value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlBytesCharsState
Наследуется от: Enum
Поля:
  int value__
  SqlBytesCharsState Null
  SqlBytesCharsState Buffer
  SqlBytesCharsState Stream
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlBytes
Наследуется от: object
Поля:
  Byte[] _rgbBuf
  long _lCurLen
  Stream _stream
  SqlBytesCharsState _state
  Byte[] _rgbWorkBuf
  long x_lMaxLen
  long x_lNull
Свойства:
  bool IsNull
  Byte[] Buffer
  long Length
  long MaxLength
  Byte[] Value
  byte Item
  StorageState Storage
  Stream Stream
  SqlBytes Null
Методы:
  void .ctor()
  void .ctor(Byte[] buffer)
  void .ctor(SqlBinary value)
  void .ctor(Stream s)
  bool get_IsNull()
  Byte[] get_Buffer()
  long get_Length()
  long get_MaxLength()
  Byte[] get_Value()
  byte get_Item(long offset)
  void set_Item(long offset, byte value)
  StorageState get_Storage()
  Stream get_Stream()
  void set_Stream(Stream value)
  void SetNull()
  void SetLength(long value)
  long Read(long offset, Byte[] buffer, int offsetInBuffer, int count)
  void Write(long offset, Byte[] buffer, int offsetInBuffer, int count)
  SqlBinary ToSqlBinary()
  SqlBinary op_Explicit(SqlBytes value)
  SqlBytes op_Explicit(SqlBinary value)
  void AssertValid()
  void CopyStreamToBuffer()
  bool FStream()
  void SetBuffer(Byte[] buffer)
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader r)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  SqlBytes get_Null()
--------------------------------------------------
Класс: System.Data.SqlTypes.StreamOnSqlBytes
Наследуется от: Stream
Поля:
  SqlBytes _sb
  long _lPosition
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(SqlBytes sb)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  int ReadByte()
  void WriteByte(byte value)
  void SetLength(long value)
  void Flush()
  void Dispose(bool disposing)
  bool FClosed()
  void CheckIfStreamClosed(string methodname)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlChars
Наследуется от: object
Поля:
  Char[] _rgchBuf
  long _lCurLen
  SqlStreamChars _stream
  SqlBytesCharsState _state
  Char[] _rgchWorkBuf
  long x_lMaxLen
  long x_lNull
Свойства:
  bool IsNull
  Char[] Buffer
  long Length
  long MaxLength
  Char[] Value
  char Item
  SqlStreamChars Stream
  StorageState Storage
  SqlChars Null
Методы:
  void .ctor()
  void .ctor(Char[] buffer)
  void .ctor(SqlString value)
  void .ctor(SqlStreamChars s)
  bool get_IsNull()
  Char[] get_Buffer()
  long get_Length()
  long get_MaxLength()
  Char[] get_Value()
  char get_Item(long offset)
  void set_Item(long offset, char value)
  SqlStreamChars get_Stream()
  void set_Stream(SqlStreamChars value)
  StorageState get_Storage()
  void SetNull()
  void SetLength(long value)
  long Read(long offset, Char[] buffer, int offsetInBuffer, int count)
  void Write(long offset, Char[] buffer, int offsetInBuffer, int count)
  SqlString ToSqlString()
  SqlString op_Explicit(SqlChars value)
  SqlChars op_Explicit(SqlString value)
  void AssertValid()
  bool FStream()
  void CopyStreamToBuffer()
  void SetBuffer(Char[] buffer)
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader r)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  SqlChars get_Null()
--------------------------------------------------
Класс: System.Data.SqlTypes.StreamOnSqlChars
Наследуется от: SqlStreamChars
Поля:
  SqlChars _sqlchars
  long _lPosition
Свойства:
  bool IsNull
  long Length
  long Position
Методы:
  void .ctor(SqlChars s)
  bool get_IsNull()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int Read(Char[] buffer, int offset, int count)
  void Write(Char[] buffer, int offset, int count)
  void SetLength(long value)
  void Dispose(bool disposing)
  bool FClosed()
  void CheckIfStreamClosed(string methodname)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlDateTime
Наследуется от: ValueType
Поля:
  bool m_fNotNull
  int m_day
  int m_time
  double s_SQLTicksPerMillisecond
  int SQLTicksPerSecond
  int SQLTicksPerMinute
  int SQLTicksPerHour
  int s_SQLTicksPerDay
  long s_ticksPerSecond
  DateTime s_SQLBaseDate
  long s_SQLBaseDateTicks
  int s_minYear
  int s_maxYear
  int s_minDay
  int s_maxDay
  int s_minTime
  int s_maxTime
  int s_dayBase
  Int32[] s_daysToMonth365
  Int32[] s_daysToMonth366
  DateTime s_minDateTime
  DateTime s_maxDateTime
  TimeSpan s_minTimeSpan
  TimeSpan s_maxTimeSpan
  string s_ISO8601_DateTimeFormat
  String[] s_dateTimeFormats
  DateTimeStyles x_DateTimeStyle
  SqlDateTime MinValue
  SqlDateTime MaxValue
  SqlDateTime Null
Свойства:
  bool IsNull
  DateTime Value
  int DayTicks
  int TimeTicks
Методы:
  void .ctor(bool fNull)
  void .ctor(DateTime value)
  void .ctor(int year, int month, int day)
  void .ctor(int year, int month, int day, int hour, int minute, int second)
  void .ctor(int year, int month, int day, int hour, int minute, int second, double millisecond)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int bilisecond)
  void .ctor(int dayTicks, int timeTicks)
  void .ctor(double dblVal)
  bool get_IsNull()
  TimeSpan ToTimeSpan(SqlDateTime value)
  DateTime ToDateTime(SqlDateTime value)
  DateTime ToDateTime(int daypart, int timepart)
  SqlDateTime FromTimeSpan(TimeSpan value)
  SqlDateTime FromDateTime(DateTime value)
  DateTime get_Value()
  int get_DayTicks()
  int get_TimeTicks()
  SqlDateTime op_Implicit(DateTime value)
  DateTime op_Explicit(SqlDateTime x)
  string ToString()
  SqlDateTime Parse(string s)
  SqlDateTime op_Addition(SqlDateTime x, TimeSpan t)
  SqlDateTime op_Subtraction(SqlDateTime x, TimeSpan t)
  SqlDateTime Add(SqlDateTime x, TimeSpan t)
  SqlDateTime Subtract(SqlDateTime x, TimeSpan t)
  SqlDateTime op_Explicit(SqlString x)
  bool IsLeapYear(int year)
  SqlBoolean op_Equality(SqlDateTime x, SqlDateTime y)
  SqlBoolean op_Inequality(SqlDateTime x, SqlDateTime y)
  SqlBoolean op_LessThan(SqlDateTime x, SqlDateTime y)
  SqlBoolean op_GreaterThan(SqlDateTime x, SqlDateTime y)
  SqlBoolean op_LessThanOrEqual(SqlDateTime x, SqlDateTime y)
  SqlBoolean op_GreaterThanOrEqual(SqlDateTime x, SqlDateTime y)
  SqlBoolean Equals(SqlDateTime x, SqlDateTime y)
  SqlBoolean NotEquals(SqlDateTime x, SqlDateTime y)
  SqlBoolean LessThan(SqlDateTime x, SqlDateTime y)
  SqlBoolean GreaterThan(SqlDateTime x, SqlDateTime y)
  SqlBoolean LessThanOrEqual(SqlDateTime x, SqlDateTime y)
  SqlBoolean GreaterThanOrEqual(SqlDateTime x, SqlDateTime y)
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlDateTime value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlDecimal
Наследуется от: ValueType
Поля:
  byte _bStatus
  byte _bLen
  byte _bPrec
  byte _bScale
  UInt32 _data1
  UInt32 _data2
  UInt32 _data3
  UInt32 _data4
  byte s_NUMERIC_MAX_PRECISION
  byte MaxPrecision
  byte MaxScale
  byte s_bNullMask
  byte s_bIsNull
  byte s_bNotNull
  byte s_bReverseNullMask
  byte s_bSignMask
  byte s_bPositive
  byte s_bNegative
  byte s_bReverseSignMask
  UInt32 s_uiZero
  int s_cNumeMax
  long s_lInt32Base
  ulong s_ulInt32Base
  ulong s_ulInt32BaseForMod
  ulong s_llMax
  UInt32 s_ulBase10
  double s_DUINT_BASE
  double s_DUINT_BASE2
  double s_DUINT_BASE3
  double s_DMAX_NUME
  UInt32 s_DBL_DIG
  byte s_cNumeDivScaleMin
  UInt32[] s_rgulShiftBase
  UInt32[] s_decimalHelpersLo
  UInt32[] s_decimalHelpersMid
  UInt32[] s_decimalHelpersHi
  UInt32[] s_decimalHelpersHiHi
  int HelperTableStartIndexLo
  int HelperTableStartIndexMid
  int HelperTableStartIndexHi
  int HelperTableStartIndexHiHi
  Byte[] s_rgCLenFromPrec
  UInt32 s_ulT1
  UInt32 s_ulT2
  UInt32 s_ulT3
  UInt32 s_ulT4
  UInt32 s_ulT5
  UInt32 s_ulT6
  UInt32 s_ulT7
  UInt32 s_ulT8
  UInt32 s_ulT9
  ulong s_dwlT10
  ulong s_dwlT11
  ulong s_dwlT12
  ulong s_dwlT13
  ulong s_dwlT14
  ulong s_dwlT15
  ulong s_dwlT16
  ulong s_dwlT17
  ulong s_dwlT18
  ulong s_dwlT19
  SqlDecimal Null
  SqlDecimal MinValue
  SqlDecimal MaxValue
Свойства:
  bool IsNull
  decimal Value
  bool IsPositive
  byte Precision
  byte Scale
  Int32[] Data
  Byte[] BinData
Методы:
  byte CalculatePrecision()
  bool VerifyPrecision(byte precision)
  void .ctor(bool fNull)
  void .ctor(decimal value)
  void .ctor(int value)
  void .ctor(long value)
  void .ctor(byte bPrecision, byte bScale, bool fPositive, Int32[] bits)
  void .ctor(byte bPrecision, byte bScale, bool fPositive, int data1, int data2, int data3, int data4)
  void .ctor(double dVal)
  void .ctor(UInt32[] rglData, byte bLen, byte bPrec, byte bScale, bool fPositive)
  bool get_IsNull()
  decimal get_Value()
  bool get_IsPositive()
  void SetPositive()
  void SetSignBit(bool fPositive)
  byte get_Precision()
  byte get_Scale()
  Int32[] get_Data()
  Byte[] get_BinData()
  string ToString()
  SqlDecimal Parse(string s)
  double ToDouble()
  decimal ToDecimal()
  SqlDecimal op_Implicit(decimal x)
  SqlDecimal op_Explicit(double x)
  SqlDecimal op_Implicit(long x)
  decimal op_Explicit(SqlDecimal x)
  SqlDecimal op_UnaryNegation(SqlDecimal x)
  SqlDecimal op_Addition(SqlDecimal x, SqlDecimal y)
  SqlDecimal op_Subtraction(SqlDecimal x, SqlDecimal y)
  SqlDecimal op_Multiply(SqlDecimal x, SqlDecimal y)
  SqlDecimal op_Division(SqlDecimal x, SqlDecimal y)
  SqlDecimal op_Explicit(SqlBoolean x)
  SqlDecimal op_Implicit(SqlByte x)
  SqlDecimal op_Implicit(SqlInt16 x)
  SqlDecimal op_Implicit(SqlInt32 x)
  SqlDecimal op_Implicit(SqlInt64 x)
  SqlDecimal op_Implicit(SqlMoney x)
  SqlDecimal op_Explicit(SqlSingle x)
  SqlDecimal op_Explicit(SqlDouble x)
  SqlDecimal op_Explicit(SqlString x)
  void AssertValid()
  void ZeroToMaxLen(UInt32[] rgulData, int cUI4sCur)
  byte CLenFromPrec(byte bPrec)
  bool FZero()
  bool FGt10_38()
  bool FGt10_38(UInt32[] rglData)
  byte BGetPrecUI4(UInt32 value)
  byte BGetPrecUI8(UInt32 ulU0, UInt32 ulU1)
  byte BGetPrecUI8(ulong dwlVal)
  void AddULong(UInt32 ulAdd)
  void MultByULong(UInt32 uiMultiplier)
  UInt32 DivByULong(UInt32 iDivisor)
  void AdjustScale(int digits, bool fRound)
  SqlDecimal AdjustScale(SqlDecimal n, int digits, bool fRound)
  SqlDecimal ConvertToPrecScale(SqlDecimal n, int precision, int scale)
  int LAbsCmp(SqlDecimal snumOp)
  void MpMove(UInt32[] rgulS, int ciulS, UInt32[] rgulD, Int32& ciulD)
  void MpSet(UInt32[] rgulD, Int32& ciulD, UInt32 iulN)
  void MpNormalize(UInt32[] rgulU, Int32& ciulU)
  void MpMul1(UInt32[] piulD, Int32& ciulD, UInt32 iulX)
  void MpDiv1(UInt32[] rgulU, Int32& ciulU, UInt32 iulD, UInt32& iulR)
  ulong DWL(UInt32 lo, UInt32 hi)
  UInt32 HI(ulong x)
  UInt32 LO(ulong x)
  void MpDiv(UInt32[] rgulU, int ciulU, UInt32[] rgulD, int ciulD, UInt32[] rgulQ, Int32& ciulQ, UInt32[] rgulR, Int32& ciulR)
  EComparison CompareNm(SqlDecimal snumOp)
  void CheckValidPrecScale(byte bPrec, byte bScale)
  void CheckValidPrecScale(int iPrec, int iScale)
  SqlBoolean op_Equality(SqlDecimal x, SqlDecimal y)
  SqlBoolean op_Inequality(SqlDecimal x, SqlDecimal y)
  SqlBoolean op_LessThan(SqlDecimal x, SqlDecimal y)
  SqlBoolean op_GreaterThan(SqlDecimal x, SqlDecimal y)
  SqlBoolean op_LessThanOrEqual(SqlDecimal x, SqlDecimal y)
  SqlBoolean op_GreaterThanOrEqual(SqlDecimal x, SqlDecimal y)
  SqlDecimal Add(SqlDecimal x, SqlDecimal y)
  SqlDecimal Subtract(SqlDecimal x, SqlDecimal y)
  SqlDecimal Multiply(SqlDecimal x, SqlDecimal y)
  SqlDecimal Divide(SqlDecimal x, SqlDecimal y)
  SqlBoolean Equals(SqlDecimal x, SqlDecimal y)
  SqlBoolean NotEquals(SqlDecimal x, SqlDecimal y)
  SqlBoolean LessThan(SqlDecimal x, SqlDecimal y)
  SqlBoolean GreaterThan(SqlDecimal x, SqlDecimal y)
  SqlBoolean LessThanOrEqual(SqlDecimal x, SqlDecimal y)
  SqlBoolean GreaterThanOrEqual(SqlDecimal x, SqlDecimal y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  char ChFromDigit(UInt32 uiDigit)
  void StoreFromWorkingArray(UInt32[] rguiData)
  void SetToZero()
  void MakeInteger(Boolean& fFraction)
  SqlDecimal Abs(SqlDecimal n)
  SqlDecimal Ceiling(SqlDecimal n)
  SqlDecimal Floor(SqlDecimal n)
  SqlInt32 Sign(SqlDecimal n)
  SqlDecimal Round(SqlDecimal n, int lPosition, bool fTruncate)
  SqlDecimal Round(SqlDecimal n, int position)
  SqlDecimal Truncate(SqlDecimal n, int position)
  SqlDecimal Power(SqlDecimal n, double exp)
  int CompareTo(object value)
  int CompareTo(SqlDecimal value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlDouble
Наследуется от: ValueType
Поля:
  bool m_fNotNull
  double m_value
  SqlDouble Null
  SqlDouble Zero
  SqlDouble MinValue
  SqlDouble MaxValue
Свойства:
  bool IsNull
  double Value
Методы:
  void .ctor(bool fNull)
  void .ctor(double value)
  bool get_IsNull()
  double get_Value()
  SqlDouble op_Implicit(double x)
  double op_Explicit(SqlDouble x)
  string ToString()
  SqlDouble Parse(string s)
  SqlDouble op_UnaryNegation(SqlDouble x)
  SqlDouble op_Addition(SqlDouble x, SqlDouble y)
  SqlDouble op_Subtraction(SqlDouble x, SqlDouble y)
  SqlDouble op_Multiply(SqlDouble x, SqlDouble y)
  SqlDouble op_Division(SqlDouble x, SqlDouble y)
  SqlDouble op_Explicit(SqlBoolean x)
  SqlDouble op_Implicit(SqlByte x)
  SqlDouble op_Implicit(SqlInt16 x)
  SqlDouble op_Implicit(SqlInt32 x)
  SqlDouble op_Implicit(SqlInt64 x)
  SqlDouble op_Implicit(SqlSingle x)
  SqlDouble op_Implicit(SqlMoney x)
  SqlDouble op_Implicit(SqlDecimal x)
  SqlDouble op_Explicit(SqlString x)
  SqlBoolean op_Equality(SqlDouble x, SqlDouble y)
  SqlBoolean op_Inequality(SqlDouble x, SqlDouble y)
  SqlBoolean op_LessThan(SqlDouble x, SqlDouble y)
  SqlBoolean op_GreaterThan(SqlDouble x, SqlDouble y)
  SqlBoolean op_LessThanOrEqual(SqlDouble x, SqlDouble y)
  SqlBoolean op_GreaterThanOrEqual(SqlDouble x, SqlDouble y)
  SqlDouble Add(SqlDouble x, SqlDouble y)
  SqlDouble Subtract(SqlDouble x, SqlDouble y)
  SqlDouble Multiply(SqlDouble x, SqlDouble y)
  SqlDouble Divide(SqlDouble x, SqlDouble y)
  SqlBoolean Equals(SqlDouble x, SqlDouble y)
  SqlBoolean NotEquals(SqlDouble x, SqlDouble y)
  SqlBoolean LessThan(SqlDouble x, SqlDouble y)
  SqlBoolean GreaterThan(SqlDouble x, SqlDouble y)
  SqlBoolean LessThanOrEqual(SqlDouble x, SqlDouble y)
  SqlBoolean GreaterThanOrEqual(SqlDouble x, SqlDouble y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlDouble value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlGuid
Наследуется от: ValueType
Поля:
  int s_sizeOfGuid
  Int32[] s_rgiGuidOrder
  Byte[] m_value
  SqlGuid Null
Свойства:
  bool IsNull
  Guid Value
Методы:
  void .ctor(bool fNull)
  void .ctor(Byte[] value)
  void .ctor(Byte[] value, bool ignored)
  void .ctor(string s)
  void .ctor(Guid g)
  void .ctor(int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k)
  bool get_IsNull()
  Guid get_Value()
  SqlGuid op_Implicit(Guid x)
  Guid op_Explicit(SqlGuid x)
  Byte[] ToByteArray()
  string ToString()
  SqlGuid Parse(string s)
  EComparison Compare(SqlGuid x, SqlGuid y)
  SqlGuid op_Explicit(SqlString x)
  SqlGuid op_Explicit(SqlBinary x)
  SqlBoolean op_Equality(SqlGuid x, SqlGuid y)
  SqlBoolean op_Inequality(SqlGuid x, SqlGuid y)
  SqlBoolean op_LessThan(SqlGuid x, SqlGuid y)
  SqlBoolean op_GreaterThan(SqlGuid x, SqlGuid y)
  SqlBoolean op_LessThanOrEqual(SqlGuid x, SqlGuid y)
  SqlBoolean op_GreaterThanOrEqual(SqlGuid x, SqlGuid y)
  SqlBoolean Equals(SqlGuid x, SqlGuid y)
  SqlBoolean NotEquals(SqlGuid x, SqlGuid y)
  SqlBoolean LessThan(SqlGuid x, SqlGuid y)
  SqlBoolean GreaterThan(SqlGuid x, SqlGuid y)
  SqlBoolean LessThanOrEqual(SqlGuid x, SqlGuid y)
  SqlBoolean GreaterThanOrEqual(SqlGuid x, SqlGuid y)
  SqlString ToSqlString()
  SqlBinary ToSqlBinary()
  int CompareTo(object value)
  int CompareTo(SqlGuid value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlInt16
Наследуется от: ValueType
Поля:
  bool m_fNotNull
  short m_value
  int s_MASKI2
  SqlInt16 Null
  SqlInt16 Zero
  SqlInt16 MinValue
  SqlInt16 MaxValue
Свойства:
  bool IsNull
  short Value
Методы:
  void .ctor(bool fNull)
  void .ctor(short value)
  bool get_IsNull()
  short get_Value()
  SqlInt16 op_Implicit(short x)
  short op_Explicit(SqlInt16 x)
  string ToString()
  SqlInt16 Parse(string s)
  SqlInt16 op_UnaryNegation(SqlInt16 x)
  SqlInt16 op_OnesComplement(SqlInt16 x)
  SqlInt16 op_Addition(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_Subtraction(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_Multiply(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_Division(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_Modulus(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_BitwiseAnd(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_BitwiseOr(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_ExclusiveOr(SqlInt16 x, SqlInt16 y)
  SqlInt16 op_Explicit(SqlBoolean x)
  SqlInt16 op_Implicit(SqlByte x)
  SqlInt16 op_Explicit(SqlInt32 x)
  SqlInt16 op_Explicit(SqlInt64 x)
  SqlInt16 op_Explicit(SqlSingle x)
  SqlInt16 op_Explicit(SqlDouble x)
  SqlInt16 op_Explicit(SqlMoney x)
  SqlInt16 op_Explicit(SqlDecimal x)
  SqlInt16 op_Explicit(SqlString x)
  SqlBoolean op_Equality(SqlInt16 x, SqlInt16 y)
  SqlBoolean op_Inequality(SqlInt16 x, SqlInt16 y)
  SqlBoolean op_LessThan(SqlInt16 x, SqlInt16 y)
  SqlBoolean op_GreaterThan(SqlInt16 x, SqlInt16 y)
  SqlBoolean op_LessThanOrEqual(SqlInt16 x, SqlInt16 y)
  SqlBoolean op_GreaterThanOrEqual(SqlInt16 x, SqlInt16 y)
  SqlInt16 OnesComplement(SqlInt16 x)
  SqlInt16 Add(SqlInt16 x, SqlInt16 y)
  SqlInt16 Subtract(SqlInt16 x, SqlInt16 y)
  SqlInt16 Multiply(SqlInt16 x, SqlInt16 y)
  SqlInt16 Divide(SqlInt16 x, SqlInt16 y)
  SqlInt16 Mod(SqlInt16 x, SqlInt16 y)
  SqlInt16 Modulus(SqlInt16 x, SqlInt16 y)
  SqlInt16 BitwiseAnd(SqlInt16 x, SqlInt16 y)
  SqlInt16 BitwiseOr(SqlInt16 x, SqlInt16 y)
  SqlInt16 Xor(SqlInt16 x, SqlInt16 y)
  SqlBoolean Equals(SqlInt16 x, SqlInt16 y)
  SqlBoolean NotEquals(SqlInt16 x, SqlInt16 y)
  SqlBoolean LessThan(SqlInt16 x, SqlInt16 y)
  SqlBoolean GreaterThan(SqlInt16 x, SqlInt16 y)
  SqlBoolean LessThanOrEqual(SqlInt16 x, SqlInt16 y)
  SqlBoolean GreaterThanOrEqual(SqlInt16 x, SqlInt16 y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlInt16 value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlInt32
Наследуется от: ValueType
Поля:
  bool m_fNotNull
  int m_value
  long s_iIntMin
  long s_lBitNotIntMax
  SqlInt32 Null
  SqlInt32 Zero
  SqlInt32 MinValue
  SqlInt32 MaxValue
Свойства:
  bool IsNull
  int Value
Методы:
  void .ctor(bool fNull)
  void .ctor(int value)
  bool get_IsNull()
  int get_Value()
  SqlInt32 op_Implicit(int x)
  int op_Explicit(SqlInt32 x)
  string ToString()
  SqlInt32 Parse(string s)
  SqlInt32 op_UnaryNegation(SqlInt32 x)
  SqlInt32 op_OnesComplement(SqlInt32 x)
  SqlInt32 op_Addition(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_Subtraction(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_Multiply(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_Division(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_Modulus(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_BitwiseAnd(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_BitwiseOr(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_ExclusiveOr(SqlInt32 x, SqlInt32 y)
  SqlInt32 op_Explicit(SqlBoolean x)
  SqlInt32 op_Implicit(SqlByte x)
  SqlInt32 op_Implicit(SqlInt16 x)
  SqlInt32 op_Explicit(SqlInt64 x)
  SqlInt32 op_Explicit(SqlSingle x)
  SqlInt32 op_Explicit(SqlDouble x)
  SqlInt32 op_Explicit(SqlMoney x)
  SqlInt32 op_Explicit(SqlDecimal x)
  SqlInt32 op_Explicit(SqlString x)
  bool SameSignInt(int x, int y)
  SqlBoolean op_Equality(SqlInt32 x, SqlInt32 y)
  SqlBoolean op_Inequality(SqlInt32 x, SqlInt32 y)
  SqlBoolean op_LessThan(SqlInt32 x, SqlInt32 y)
  SqlBoolean op_GreaterThan(SqlInt32 x, SqlInt32 y)
  SqlBoolean op_LessThanOrEqual(SqlInt32 x, SqlInt32 y)
  SqlBoolean op_GreaterThanOrEqual(SqlInt32 x, SqlInt32 y)
  SqlInt32 OnesComplement(SqlInt32 x)
  SqlInt32 Add(SqlInt32 x, SqlInt32 y)
  SqlInt32 Subtract(SqlInt32 x, SqlInt32 y)
  SqlInt32 Multiply(SqlInt32 x, SqlInt32 y)
  SqlInt32 Divide(SqlInt32 x, SqlInt32 y)
  SqlInt32 Mod(SqlInt32 x, SqlInt32 y)
  SqlInt32 Modulus(SqlInt32 x, SqlInt32 y)
  SqlInt32 BitwiseAnd(SqlInt32 x, SqlInt32 y)
  SqlInt32 BitwiseOr(SqlInt32 x, SqlInt32 y)
  SqlInt32 Xor(SqlInt32 x, SqlInt32 y)
  SqlBoolean Equals(SqlInt32 x, SqlInt32 y)
  SqlBoolean NotEquals(SqlInt32 x, SqlInt32 y)
  SqlBoolean LessThan(SqlInt32 x, SqlInt32 y)
  SqlBoolean GreaterThan(SqlInt32 x, SqlInt32 y)
  SqlBoolean LessThanOrEqual(SqlInt32 x, SqlInt32 y)
  SqlBoolean GreaterThanOrEqual(SqlInt32 x, SqlInt32 y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlInt32 value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlInt64
Наследуется от: ValueType
Поля:
  bool m_fNotNull
  long m_value
  long s_lLowIntMask
  long s_lHighIntMask
  SqlInt64 Null
  SqlInt64 Zero
  SqlInt64 MinValue
  SqlInt64 MaxValue
Свойства:
  bool IsNull
  long Value
Методы:
  void .ctor(bool fNull)
  void .ctor(long value)
  bool get_IsNull()
  long get_Value()
  SqlInt64 op_Implicit(long x)
  long op_Explicit(SqlInt64 x)
  string ToString()
  SqlInt64 Parse(string s)
  SqlInt64 op_UnaryNegation(SqlInt64 x)
  SqlInt64 op_OnesComplement(SqlInt64 x)
  SqlInt64 op_Addition(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_Subtraction(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_Multiply(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_Division(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_Modulus(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_BitwiseAnd(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_BitwiseOr(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_ExclusiveOr(SqlInt64 x, SqlInt64 y)
  SqlInt64 op_Explicit(SqlBoolean x)
  SqlInt64 op_Implicit(SqlByte x)
  SqlInt64 op_Implicit(SqlInt16 x)
  SqlInt64 op_Implicit(SqlInt32 x)
  SqlInt64 op_Explicit(SqlSingle x)
  SqlInt64 op_Explicit(SqlDouble x)
  SqlInt64 op_Explicit(SqlMoney x)
  SqlInt64 op_Explicit(SqlDecimal x)
  SqlInt64 op_Explicit(SqlString x)
  bool SameSignLong(long x, long y)
  SqlBoolean op_Equality(SqlInt64 x, SqlInt64 y)
  SqlBoolean op_Inequality(SqlInt64 x, SqlInt64 y)
  SqlBoolean op_LessThan(SqlInt64 x, SqlInt64 y)
  SqlBoolean op_GreaterThan(SqlInt64 x, SqlInt64 y)
  SqlBoolean op_LessThanOrEqual(SqlInt64 x, SqlInt64 y)
  SqlBoolean op_GreaterThanOrEqual(SqlInt64 x, SqlInt64 y)
  SqlInt64 OnesComplement(SqlInt64 x)
  SqlInt64 Add(SqlInt64 x, SqlInt64 y)
  SqlInt64 Subtract(SqlInt64 x, SqlInt64 y)
  SqlInt64 Multiply(SqlInt64 x, SqlInt64 y)
  SqlInt64 Divide(SqlInt64 x, SqlInt64 y)
  SqlInt64 Mod(SqlInt64 x, SqlInt64 y)
  SqlInt64 Modulus(SqlInt64 x, SqlInt64 y)
  SqlInt64 BitwiseAnd(SqlInt64 x, SqlInt64 y)
  SqlInt64 BitwiseOr(SqlInt64 x, SqlInt64 y)
  SqlInt64 Xor(SqlInt64 x, SqlInt64 y)
  SqlBoolean Equals(SqlInt64 x, SqlInt64 y)
  SqlBoolean NotEquals(SqlInt64 x, SqlInt64 y)
  SqlBoolean LessThan(SqlInt64 x, SqlInt64 y)
  SqlBoolean GreaterThan(SqlInt64 x, SqlInt64 y)
  SqlBoolean LessThanOrEqual(SqlInt64 x, SqlInt64 y)
  SqlBoolean GreaterThanOrEqual(SqlInt64 x, SqlInt64 y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlInt64 value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlMoney
Наследуется от: ValueType
Поля:
  bool _fNotNull
  long _value
  int s_iMoneyScale
  long s_lTickBase
  double s_dTickBase
  long s_minLong
  long s_maxLong
  SqlMoney Null
  SqlMoney Zero
  SqlMoney MinValue
  SqlMoney MaxValue
Свойства:
  bool IsNull
  decimal Value
Методы:
  void .ctor(bool fNull)
  void .ctor(long value, int ignored)
  void .ctor(int value)
  void .ctor(long value)
  void .ctor(decimal value)
  void .ctor(double value)
  bool get_IsNull()
  decimal get_Value()
  decimal ToDecimal()
  long ToInt64()
  long ToSqlInternalRepresentation()
  int ToInt32()
  double ToDouble()
  SqlMoney op_Implicit(decimal x)
  SqlMoney op_Explicit(double x)
  SqlMoney op_Implicit(long x)
  decimal op_Explicit(SqlMoney x)
  string ToString()
  SqlMoney Parse(string s)
  SqlMoney op_UnaryNegation(SqlMoney x)
  SqlMoney op_Addition(SqlMoney x, SqlMoney y)
  SqlMoney op_Subtraction(SqlMoney x, SqlMoney y)
  SqlMoney op_Multiply(SqlMoney x, SqlMoney y)
  SqlMoney op_Division(SqlMoney x, SqlMoney y)
  SqlMoney op_Explicit(SqlBoolean x)
  SqlMoney op_Implicit(SqlByte x)
  SqlMoney op_Implicit(SqlInt16 x)
  SqlMoney op_Implicit(SqlInt32 x)
  SqlMoney op_Implicit(SqlInt64 x)
  SqlMoney op_Explicit(SqlSingle x)
  SqlMoney op_Explicit(SqlDouble x)
  SqlMoney op_Explicit(SqlDecimal x)
  SqlMoney op_Explicit(SqlString x)
  SqlBoolean op_Equality(SqlMoney x, SqlMoney y)
  SqlBoolean op_Inequality(SqlMoney x, SqlMoney y)
  SqlBoolean op_LessThan(SqlMoney x, SqlMoney y)
  SqlBoolean op_GreaterThan(SqlMoney x, SqlMoney y)
  SqlBoolean op_LessThanOrEqual(SqlMoney x, SqlMoney y)
  SqlBoolean op_GreaterThanOrEqual(SqlMoney x, SqlMoney y)
  SqlMoney Add(SqlMoney x, SqlMoney y)
  SqlMoney Subtract(SqlMoney x, SqlMoney y)
  SqlMoney Multiply(SqlMoney x, SqlMoney y)
  SqlMoney Divide(SqlMoney x, SqlMoney y)
  SqlBoolean Equals(SqlMoney x, SqlMoney y)
  SqlBoolean NotEquals(SqlMoney x, SqlMoney y)
  SqlBoolean LessThan(SqlMoney x, SqlMoney y)
  SqlBoolean GreaterThan(SqlMoney x, SqlMoney y)
  SqlBoolean LessThanOrEqual(SqlMoney x, SqlMoney y)
  SqlBoolean GreaterThanOrEqual(SqlMoney x, SqlMoney y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlMoney value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlSingle
Наследуется от: ValueType
Поля:
  bool _fNotNull
  float _value
  SqlSingle Null
  SqlSingle Zero
  SqlSingle MinValue
  SqlSingle MaxValue
Свойства:
  bool IsNull
  float Value
Методы:
  void .ctor(bool fNull)
  void .ctor(float value)
  void .ctor(double value)
  bool get_IsNull()
  float get_Value()
  SqlSingle op_Implicit(float x)
  float op_Explicit(SqlSingle x)
  string ToString()
  SqlSingle Parse(string s)
  SqlSingle op_UnaryNegation(SqlSingle x)
  SqlSingle op_Addition(SqlSingle x, SqlSingle y)
  SqlSingle op_Subtraction(SqlSingle x, SqlSingle y)
  SqlSingle op_Multiply(SqlSingle x, SqlSingle y)
  SqlSingle op_Division(SqlSingle x, SqlSingle y)
  SqlSingle op_Explicit(SqlBoolean x)
  SqlSingle op_Implicit(SqlByte x)
  SqlSingle op_Implicit(SqlInt16 x)
  SqlSingle op_Implicit(SqlInt32 x)
  SqlSingle op_Implicit(SqlInt64 x)
  SqlSingle op_Implicit(SqlMoney x)
  SqlSingle op_Implicit(SqlDecimal x)
  SqlSingle op_Explicit(SqlDouble x)
  SqlSingle op_Explicit(SqlString x)
  SqlBoolean op_Equality(SqlSingle x, SqlSingle y)
  SqlBoolean op_Inequality(SqlSingle x, SqlSingle y)
  SqlBoolean op_LessThan(SqlSingle x, SqlSingle y)
  SqlBoolean op_GreaterThan(SqlSingle x, SqlSingle y)
  SqlBoolean op_LessThanOrEqual(SqlSingle x, SqlSingle y)
  SqlBoolean op_GreaterThanOrEqual(SqlSingle x, SqlSingle y)
  SqlSingle Add(SqlSingle x, SqlSingle y)
  SqlSingle Subtract(SqlSingle x, SqlSingle y)
  SqlSingle Multiply(SqlSingle x, SqlSingle y)
  SqlSingle Divide(SqlSingle x, SqlSingle y)
  SqlBoolean Equals(SqlSingle x, SqlSingle y)
  SqlBoolean NotEquals(SqlSingle x, SqlSingle y)
  SqlBoolean LessThan(SqlSingle x, SqlSingle y)
  SqlBoolean GreaterThan(SqlSingle x, SqlSingle y)
  SqlBoolean LessThanOrEqual(SqlSingle x, SqlSingle y)
  SqlBoolean GreaterThanOrEqual(SqlSingle x, SqlSingle y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlString ToSqlString()
  int CompareTo(object value)
  int CompareTo(SqlSingle value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlCompareOptions
Наследуется от: Enum
Поля:
  int value__
  SqlCompareOptions None
  SqlCompareOptions IgnoreCase
  SqlCompareOptions IgnoreNonSpace
  SqlCompareOptions IgnoreKanaType
  SqlCompareOptions IgnoreWidth
  SqlCompareOptions BinarySort
  SqlCompareOptions BinarySort2
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlString
Наследуется от: ValueType
Поля:
  string m_value
  CompareInfo m_cmpInfo
  int m_lcid
  SqlCompareOptions m_flag
  bool m_fNotNull
  SqlString Null
  UnicodeEncoding s_unicodeEncoding
  int IgnoreCase
  int IgnoreWidth
  int IgnoreNonSpace
  int IgnoreKanaType
  int BinarySort
  int BinarySort2
  SqlCompareOptions s_iDefaultFlag
  CompareOptions s_iValidCompareOptionMask
  SqlCompareOptions s_iValidSqlCompareOptionMask
  int s_lcidUSEnglish
  int s_lcidBinary
Свойства:
  bool IsNull
  string Value
  int LCID
  CultureInfo CultureInfo
  CompareInfo CompareInfo
  SqlCompareOptions SqlCompareOptions
Методы:
  void .ctor(bool fNull)
  void .ctor(int lcid, SqlCompareOptions compareOptions, Byte[] data, int index, int count, bool fUnicode)
  void .ctor(int lcid, SqlCompareOptions compareOptions, Byte[] data, bool fUnicode)
  void .ctor(int lcid, SqlCompareOptions compareOptions, Byte[] data, int index, int count)
  void .ctor(int lcid, SqlCompareOptions compareOptions, Byte[] data)
  void .ctor(string data, int lcid, SqlCompareOptions compareOptions)
  void .ctor(string data, int lcid)
  void .ctor(string data)
  void .ctor(int lcid, SqlCompareOptions compareOptions, string data, CompareInfo cmpInfo)
  bool get_IsNull()
  string get_Value()
  int get_LCID()
  CultureInfo get_CultureInfo()
  void SetCompareInfo()
  CompareInfo get_CompareInfo()
  SqlCompareOptions get_SqlCompareOptions()
  SqlString op_Implicit(string x)
  string op_Explicit(SqlString x)
  string ToString()
  Byte[] GetUnicodeBytes()
  Byte[] GetNonUnicodeBytes()
  SqlString op_Addition(SqlString x, SqlString y)
  int StringCompare(SqlString x, SqlString y)
  SqlBoolean Compare(SqlString x, SqlString y, EComparison ecExpectedResult)
  SqlString op_Explicit(SqlBoolean x)
  SqlString op_Explicit(SqlByte x)
  SqlString op_Explicit(SqlInt16 x)
  SqlString op_Explicit(SqlInt32 x)
  SqlString op_Explicit(SqlInt64 x)
  SqlString op_Explicit(SqlSingle x)
  SqlString op_Explicit(SqlDouble x)
  SqlString op_Explicit(SqlDecimal x)
  SqlString op_Explicit(SqlMoney x)
  SqlString op_Explicit(SqlDateTime x)
  SqlString op_Explicit(SqlGuid x)
  SqlString Clone()
  SqlBoolean op_Equality(SqlString x, SqlString y)
  SqlBoolean op_Inequality(SqlString x, SqlString y)
  SqlBoolean op_LessThan(SqlString x, SqlString y)
  SqlBoolean op_GreaterThan(SqlString x, SqlString y)
  SqlBoolean op_LessThanOrEqual(SqlString x, SqlString y)
  SqlBoolean op_GreaterThanOrEqual(SqlString x, SqlString y)
  SqlString Concat(SqlString x, SqlString y)
  SqlString Add(SqlString x, SqlString y)
  SqlBoolean Equals(SqlString x, SqlString y)
  SqlBoolean NotEquals(SqlString x, SqlString y)
  SqlBoolean LessThan(SqlString x, SqlString y)
  SqlBoolean GreaterThan(SqlString x, SqlString y)
  SqlBoolean LessThanOrEqual(SqlString x, SqlString y)
  SqlBoolean GreaterThanOrEqual(SqlString x, SqlString y)
  SqlBoolean ToSqlBoolean()
  SqlByte ToSqlByte()
  SqlDateTime ToSqlDateTime()
  SqlDouble ToSqlDouble()
  SqlInt16 ToSqlInt16()
  SqlInt32 ToSqlInt32()
  SqlInt64 ToSqlInt64()
  SqlMoney ToSqlMoney()
  SqlDecimal ToSqlDecimal()
  SqlSingle ToSqlSingle()
  SqlGuid ToSqlGuid()
  void ValidateSqlCompareOptions(SqlCompareOptions compareOptions)
  CompareOptions CompareOptionsFromSqlCompareOptions(SqlCompareOptions compareOptions)
  bool FBinarySort()
  int CompareBinary(SqlString x, SqlString y)
  int CompareBinary2(SqlString x, SqlString y)
  int CompareTo(object value)
  int CompareTo(SqlString value)
  bool Equals(object value)
  int GetHashCode()
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.EComparison
Наследуется от: Enum
Поля:
  int value__
  EComparison LT
  EComparison LE
  EComparison EQ
  EComparison GE
  EComparison GT
  EComparison NE
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlTypes.StorageState
Наследуется от: Enum
Поля:
  int value__
  StorageState Buffer
  StorageState Stream
  StorageState UnmanagedBuffer
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlTypeException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception e)
  void .ctor(SerializationInfo si, StreamingContext sc)
  SerializationInfo SqlTypeExceptionSerialization(SerializationInfo si, StreamingContext sc)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlNullValueException
Наследуется от: SqlTypeException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception e)
  SerializationInfo SqlNullValueExceptionSerialization(SerializationInfo si, StreamingContext sc)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlTruncateException
Наследуется от: SqlTypeException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception e)
  SerializationInfo SqlTruncateExceptionSerialization(SerializationInfo si, StreamingContext sc)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlNotFilledException
Наследуется от: SqlTypeException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception e)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlAlreadyFilledException
Наследуется от: SqlTypeException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception e)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlStreamChars
Наследуется от: object
Поля:
Свойства:
  bool IsNull
  long Length
  long Position
Методы:
  bool get_IsNull()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int Read(Char[] buffer, int offset, int count)
  void Write(Char[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlXml
Наследуется от: object
Поля:
  Func`4<Stream, XmlReaderSettings, XmlParserContext, XmlReader> s_sqlReaderDelegate
  XmlReaderSettings s_defaultXmlReaderSettings
  XmlReaderSettings s_defaultXmlReaderSettingsCloseInput
  MethodInfo s_createSqlReaderMethodInfo
  MethodInfo _createSqlReaderMethodInfo
  bool _fNotNull
  Stream _stream
  bool _firstCreateReader
Свойства:
  MethodInfo CreateSqlReaderMethodInfo
  bool IsNull
  string Value
  SqlXml Null
Методы:
  void .ctor()
  void .ctor(bool fNull)
  void .ctor(XmlReader value)
  void .ctor(Stream value)
  XmlReader CreateReader()
  XmlReader CreateSqlXmlReader(Stream stream, bool closeInput, bool throwTargetInvocationExceptions)
  Func`4<Stream, XmlReaderSettings, XmlParserContext, XmlReader> CreateSqlReaderDelegate()
  MethodInfo get_CreateSqlReaderMethodInfo()
  bool get_IsNull()
  string get_Value()
  SqlXml get_Null()
  void SetNull()
  Stream CreateMemoryStreamFromXmlReader(XmlReader reader)
  XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
  void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader r)
  void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer)
  XmlQualifiedName GetXsdType(XmlSchemaSet schemaSet)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlXmlStreamWrapper
Наследуется от: Stream
Поля:
  Stream _stream
  long _lPosition
  bool _isClosed
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  int ReadByte()
  void WriteByte(byte value)
  void SetLength(long value)
  void Flush()
  void Dispose(bool disposing)
  void ThrowIfStreamCannotSeek(string method)
  void ThrowIfStreamCannotRead(string method)
  void ThrowIfStreamCannotWrite(string method)
  void ThrowIfStreamClosed(string method)
  bool IsStreamClosed()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlTypeWorkarounds
Наследуется от: object
Поля:
  XmlReaderSettings s_defaultXmlReaderSettings
  XmlReaderSettings s_defaultXmlReaderSettingsCloseInput
  XmlReaderSettings s_defaultXmlReaderSettingsAsyncCloseInput
  SqlCompareOptions SqlStringValidSqlCompareOptionMask
Свойства:
Методы:
  XmlReader SqlXmlCreateSqlXmlReader(Stream stream, bool closeInput, bool async)
  DateTime SqlDateTimeToDateTime(int daypart, int timepart)
  SqlMoney SqlMoneyCtor(long value, int ignored)
  long SqlMoneyToSqlInternalRepresentation(SqlMoney money)
  void SqlDecimalExtractData(SqlDecimal d, UInt32& data1, UInt32& data2, UInt32& data3, UInt32& data4)
  SqlBinary SqlBinaryCtor(Byte[] value, bool ignored)
  SqlGuid SqlGuidCtor(Byte[] value, bool ignored)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlTypesSchemaImporterExtensionHelper
Наследуется от: SchemaImporterExtension
Поля:
  string m_name
  string m_targetNamespace
  String[] m_references
  CodeNamespaceImport[] m_namespaceImports
  string m_destinationType
  bool m_direct
  string SqlTypesNamespace
Свойства:
Методы:
  void .ctor(string name, string targetNamespace, String[] references, CodeNamespaceImport[] namespaceImports, string destinationType, bool direct)
  void .ctor(string name, string destinationType)
  void .ctor(string name, string destinationType, bool direct)
  void Init(string name, string targetNamespace, String[] references, CodeNamespaceImport[] namespaceImports, string destinationType, bool direct)
  string ImportSchemaType(string name, string xmlNamespace, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
  string ImportSchemaType(XmlSchemaType type, XmlSchemaObject context, XmlSchemas schemas, XmlSchemaImporter importer, CodeCompileUnit compileUnit, CodeNamespace mainNamespace, CodeGenerationOptions options, CodeDomProvider codeProvider)
  void .cctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeCharSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeNCharSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeVarCharSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeNVarCharSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeTextSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeNTextSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeVarBinarySchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeBinarySchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeVarImageSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeDecimalSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeNumericSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeBigIntSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeIntSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeSmallIntSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeTinyIntSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeBitSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeFloatSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeRealSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeDateTimeSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeSmallDateTimeSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeMoneySchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeSmallMoneySchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.SqlTypes.TypeUniqueIdentifierSchemaImporterExtension
Наследуется от: SqlTypesSchemaImporterExtensionHelper
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.BasicFieldNameLookup
Наследуется от: object
Поля:
  Dictionary`2<string, int> _fieldNameLookup
  String[] _fieldNames
  CompareInfo _compareInfo
Свойства:
Методы:
  void .ctor(String[] fieldNames)
  void .ctor(ReadOnlyCollection`1<string> columnNames)
  void .ctor(IDataReader reader)
  int GetOrdinal(string fieldName)
  int IndexOfName(string fieldName)
  int IndexOf(string fieldName)
  CompareInfo GetCompareInfo()
  int LinearIndexOf(string fieldName, CompareOptions compareOptions)
  void GenerateLookup()
--------------------------------------------------
Класс: System.Data.ProviderBase.FieldNameLookup
Наследуется от: BasicFieldNameLookup
Поля:
  int _defaultLocaleID
Свойства:
Методы:
  void .ctor(String[] fieldNames, int defaultLocaleID)
  void .ctor(ReadOnlyCollection`1<string> columnNames, int defaultLocaleID)
  void .ctor(IDataReader reader, int defaultLocaleID)
  CompareInfo GetCompareInfo()
--------------------------------------------------
Класс: System.Data.ProviderBase.DataReaderContainer
Наследуется от: object
Поля:
  IDataReader _dataReader
  int _fieldCount
Свойства:
  int FieldCount
  bool ReturnProviderSpecificTypes
  int VisibleFieldCount
Методы:
  DataReaderContainer Create(IDataReader dataReader, bool returnProviderSpecificTypes)
  void .ctor(IDataReader dataReader)
  int get_FieldCount()
  bool get_ReturnProviderSpecificTypes()
  int get_VisibleFieldCount()
  Type GetFieldType(int ordinal)
  object GetValue(int ordinal)
  int GetValues(Object[] values)
  string GetName(int ordinal)
  DataTable GetSchemaTable()
  bool NextResult()
  bool Read()
--------------------------------------------------
Класс: System.Data.ProviderBase.SchemaMapping
Наследуется от: object
Поля:
  int MapExactMatch
  int MapDifferentSize
  int MapReorderedValues
  int MapChapters
  int MapChaptersReordered
  int SqlXml
  int XmlDocument
  DataSet _dataSet
  DataTable _dataTable
  DataAdapter _adapter
  DataReaderContainer _dataReader
  DataTable _schemaTable
  DataTableMapping _tableMapping
  String[] _fieldNames
  Object[] _readerDataValues
  Object[] _mappedDataValues
  Int32[] _indexMap
  Boolean[] _chapterMap
  Int32[] _xmlMap
  int _mappedMode
  int _mappedLength
  LoadOption _loadOption
Свойства:
  DataReaderContainer DataReader
  DataTable DataTable
  Object[] DataValues
Методы:
  void .ctor(DataAdapter adapter, DataSet dataset, DataTable datatable, DataReaderContainer dataReader, bool keyInfo, SchemaType schemaType, string sourceTableName, bool gettingData, DataColumn parentChapterColumn, object parentChapterValue)
  DataReaderContainer get_DataReader()
  DataTable get_DataTable()
  Object[] get_DataValues()
  void ApplyToDataRow(DataRow dataRow)
  void MappedChapterIndex()
  void MappedChapter()
  void MappedIndex()
  void MappedValues()
  Object[] GetMappedValues()
  void LoadDataRowWithClear()
  void LoadDataRow()
  void FreeDataRowChapters()
  int LoadDataRowChapters(DataRow dataRow)
  Int32[] CreateIndexMap(int count, int index)
  String[] GenerateFieldNames(DataReaderContainer dataReader)
  DataColumn[] ResizeColumnArray(DataColumn[] rgcol, int len)
  void AddItemToAllowRollback(List`1& items, object value)
  void RollbackAddedItems(List`1<object> items)
  Object[] SetupSchemaWithoutKeyInfo(MissingMappingAction mappingAction, MissingSchemaAction schemaAction, bool gettingData, DataColumn parentChapterColumn, object chapterValue)
  Object[] SetupSchemaWithKeyInfo(MissingMappingAction mappingAction, MissingSchemaAction schemaAction, bool gettingData, DataColumn parentChapterColumn, object chapterValue)
  void AddAdditionalProperties(DataColumn targetColumn, DataRow schemaRow)
  void AddRelation(DataColumn parentChapterColumn, DataColumn chapterColumn)
  Object[] SetupMapping(int count, DataColumnCollection columnCollection, DataColumn chapterColumn, object chapterValue)
--------------------------------------------------
Класс: System.Data.ProviderBase.DbBuffer
Наследуется от: SafeHandle
Поля:
  int _bufferLength
Свойства:
  int BaseOffset
  bool IsInvalid
  int Length
Методы:
  void .ctor(int initialSize)
  void .ctor(IntPtr invalidHandleValue, bool ownsHandle)
  int get_BaseOffset()
  bool get_IsInvalid()
  int get_Length()
  string PtrToStringUni(int offset)
  string PtrToStringUni(int offset, int length)
  byte ReadByte(int offset)
  Byte[] ReadBytes(int offset, int length)
  Byte[] ReadBytes(int offset, Byte[] destination, int startIndex, int length)
  char ReadChar(int offset)
  Char[] ReadChars(int offset, Char[] destination, int startIndex, int length)
  double ReadDouble(int offset)
  short ReadInt16(int offset)
  void ReadInt16Array(int offset, Int16[] destination, int startIndex, int length)
  int ReadInt32(int offset)
  void ReadInt32Array(int offset, Int32[] destination, int startIndex, int length)
  long ReadInt64(int offset)
  IntPtr ReadIntPtr(int offset)
  float ReadSingle(int offset)
  bool ReleaseHandle()
  void StructureToPtr(int offset, object structure)
  void WriteByte(int offset, byte value)
  void WriteBytes(int offset, Byte[] source, int startIndex, int length)
  void WriteCharArray(int offset, Char[] source, int startIndex, int length)
  void WriteDouble(int offset, double value)
  void WriteInt16(int offset, short value)
  void WriteInt16Array(int offset, Int16[] source, int startIndex, int length)
  void WriteInt32(int offset, int value)
  void WriteInt32Array(int offset, Int32[] source, int startIndex, int length)
  void WriteInt64(int offset, long value)
  void WriteIntPtr(int offset, IntPtr value)
  void WriteSingle(int offset, float value)
  void ZeroMemory()
  Guid ReadGuid(int offset)
  void WriteGuid(int offset, Guid value)
  DateTime ReadDate(int offset)
  void WriteDate(int offset, DateTime value)
  TimeSpan ReadTime(int offset)
  void WriteTime(int offset, TimeSpan value)
  DateTime ReadDateTime(int offset)
  void WriteDateTime(int offset, DateTime value)
  decimal ReadNumeric(int offset)
  void WriteNumeric(int offset, decimal value, byte precision)
  void ValidateCheck(int offset, int count)
  void Validate(int offset, int count)
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionClosed
Наследуется от: DbConnectionInternal
Поля:
Свойства:
  string ServerVersion
Методы:
  void .ctor(ConnectionState state, bool hidePassword, bool allowSetConnectionString)
  string get_ServerVersion()
  void Activate(Transaction transaction)
  DbTransaction BeginTransaction(IsolationLevel il)
  void ChangeDatabase(string database)
  void CloseConnection(DbConnection owningObject, DbConnectionFactory connectionFactory)
  void Deactivate()
  void EnlistTransaction(Transaction transaction)
  DbReferenceCollection CreateReferenceCollection()
  bool TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionBusy
Наследуется от: DbConnectionClosed
Поля:
Свойства:
Методы:
  void .ctor(ConnectionState state)
  bool TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionClosedBusy
Наследуется от: DbConnectionBusy
Поля:
  DbConnectionInternal SingletonInstance
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionOpenBusy
Наследуется от: DbConnectionBusy
Поля:
  DbConnectionInternal SingletonInstance
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionClosedConnecting
Наследуется от: DbConnectionBusy
Поля:
  DbConnectionInternal SingletonInstance
Свойства:
Методы:
  void .ctor()
  void CloseConnection(DbConnection owningObject, DbConnectionFactory connectionFactory)
  bool TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  bool TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionClosedNeverOpened
Наследуется от: DbConnectionClosed
Поля:
  DbConnectionInternal SingletonInstance
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionClosedPreviouslyOpened
Наследуется от: DbConnectionClosed
Поля:
  DbConnectionInternal SingletonInstance
Свойства:
Методы:
  void .ctor()
  bool TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionFactory
Наследуется от: object
Поля:
  Dictionary`2<DbConnectionPoolKey, DbConnectionPoolGroup> _connectionPoolGroups
  List`1<DbConnectionPool> _poolsToRelease
  List`1<DbConnectionPoolGroup> _poolGroupsToRelease
  Timer _pruningTimer
  int PruningDueTime
  int PruningPeriod
  UInt32 s_pendingOpenNonPooledNext
  Task`1[] s_pendingOpenNonPooled
  Task`1<DbConnectionInternal> s_completedTask
Свойства:
  DbProviderFactory ProviderFactory
Методы:
  void .ctor()
  DbProviderFactory get_ProviderFactory()
  void ClearAllPools()
  void ClearPool(DbConnection connection)
  void ClearPool(DbConnectionPoolKey key)
  DbConnectionPoolProviderInfo CreateConnectionPoolProviderInfo(DbConnectionOptions connectionOptions)
  DbConnectionInternal CreateNonPooledConnection(DbConnection owningConnection, DbConnectionPoolGroup poolGroup, DbConnectionOptions userOptions)
  DbConnectionInternal CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
  DbConnectionPoolGroupProviderInfo CreateConnectionPoolGroupProviderInfo(DbConnectionOptions connectionOptions)
  Timer CreatePruningTimer()
  DbConnectionOptions FindConnectionOptions(DbConnectionPoolKey key)
  Task`1<DbConnectionInternal> GetCompletedTask()
  bool TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
  DbConnectionPool GetConnectionPool(DbConnection owningObject, DbConnectionPoolGroup connectionPoolGroup)
  DbConnectionPoolGroup GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
  void PruneConnectionPoolGroups(object state)
  void QueuePoolForRelease(DbConnectionPool pool, bool clearing)
  void QueuePoolGroupForRelease(DbConnectionPoolGroup poolGroup)
  DbConnectionInternal CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
  DbMetaDataFactory GetMetaDataFactory(DbConnectionPoolGroup connectionPoolGroup, DbConnectionInternal internalConnection)
  DbMetaDataFactory CreateMetaDataFactory(DbConnectionInternal internalConnection, Boolean& cacheMetaDataFactory)
  DbConnectionInternal CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection)
  DbConnectionOptions CreateConnectionOptions(string connectionString, DbConnectionOptions previous)
  DbConnectionPoolGroupOptions CreateConnectionPoolGroupOptions(DbConnectionOptions options)
  DbConnectionPoolGroup GetConnectionPoolGroup(DbConnection connection)
  DbConnectionInternal GetInnerConnection(DbConnection connection)
  void PermissionDemand(DbConnection outerConnection)
  void SetConnectionPoolGroup(DbConnection outerConnection, DbConnectionPoolGroup poolGroup)
  void SetInnerConnectionEvent(DbConnection owningObject, DbConnectionInternal to)
  bool SetInnerConnectionFrom(DbConnection owningObject, DbConnectionInternal to, DbConnectionInternal from)
  void SetInnerConnectionTo(DbConnection owningObject, DbConnectionInternal to)
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionInternal
Наследуется от: object
Поля:
  StateChangeEventArgs StateChangeClosed
  StateChangeEventArgs StateChangeOpen
  bool _allowSetConnectionString
  bool _hidePassword
  ConnectionState _state
  WeakReference _owningObject
  DbConnectionPool _connectionPool
  DbReferenceCollection _referenceCollection
  int _pooledCount
  bool _connectionIsDoomed
  bool _cannotBePooled
  bool _isInStasis
  DateTime _createTime
  Transaction _enlistedTransaction
  Transaction _enlistedTransactionOriginal
Свойства:
  bool AllowSetConnectionString
  bool CanBePooled
  Transaction EnlistedTransaction
  bool EnlistedTransactionDisposed
  bool IsTxRootWaitingForTxEnd
  bool UnbindOnTransactionCompletion
  bool IsNonPoolableTransactionRoot
  bool IsTransactionRoot
  bool IsConnectionDoomed
  bool IsEmancipated
  bool IsInPool
  object Owner
  DbConnectionPool Pool
  bool ReadyToPrepareTransaction
  DbReferenceCollection ReferenceCollection
  string ServerVersion
  string ServerVersionNormalized
  bool ShouldHidePassword
  ConnectionState State
Методы:
  void .ctor()
  void .ctor(ConnectionState state, bool hidePassword, bool allowSetConnectionString)
  bool get_AllowSetConnectionString()
  bool get_CanBePooled()
  Transaction get_EnlistedTransaction()
  void set_EnlistedTransaction(Transaction value)
  bool get_EnlistedTransactionDisposed()
  bool get_IsTxRootWaitingForTxEnd()
  bool get_UnbindOnTransactionCompletion()
  bool get_IsNonPoolableTransactionRoot()
  bool get_IsTransactionRoot()
  bool get_IsConnectionDoomed()
  bool get_IsEmancipated()
  bool get_IsInPool()
  object get_Owner()
  DbConnectionPool get_Pool()
  bool get_ReadyToPrepareTransaction()
  DbReferenceCollection get_ReferenceCollection()
  string get_ServerVersion()
  string get_ServerVersionNormalized()
  bool get_ShouldHidePassword()
  ConnectionState get_State()
  void Activate(Transaction transaction)
  void ActivateConnection(Transaction transaction)
  void AddWeakReference(object value, int tag)
  DbTransaction BeginTransaction(IsolationLevel il)
  void ChangeDatabase(string value)
  void CloseConnection(DbConnection owningObject, DbConnectionFactory connectionFactory)
  void PrepareForReplaceConnection()
  void PrepareForCloseConnection()
  object ObtainAdditionalLocksForClose()
  void ReleaseAdditionalLocksForClose(object lockToken)
  DbReferenceCollection CreateReferenceCollection()
  void Deactivate()
  void DeactivateConnection()
  void DelegatedTransactionEnded()
  void Dispose()
  void DoNotPoolThisConnection()
  void DoomThisConnection()
  void EnlistTransaction(Transaction transaction)
  DataTable GetSchema(DbConnectionFactory factory, DbConnectionPoolGroup poolGroup, DbConnection outerConnection, string collectionName, String[] restrictions)
  void MakeNonPooledObject(object owningObject)
  void MakePooledConnection(DbConnectionPool connectionPool)
  void NotifyWeakReference(int message)
  void OpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory)
  bool TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  bool TryReplaceConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  bool TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions)
  void PrePush(object expectedOwner)
  void PostPop(object newOwner)
  void RemoveWeakReference(object value)
  void CleanupTransactionOnCompletion(Transaction transaction)
  void DetachCurrentTransactionIfEnded()
  void DetachTransaction(Transaction transaction, bool isExplicitlyReleasing)
  void CleanupConnectionOnTransactionCompletion(Transaction transaction)
  void TransactionCompletedEvent(object sender, TransactionEventArgs e)
  void TransactionOutcomeEnlist(Transaction transaction)
  void SetInStasis()
  void TerminateStasis(bool returningToPool)
  bool IsConnectionAlive(bool throwOnException)
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionPool
Наследуется от: object
Поля:
  int MAX_Q_SIZE
  int SEMAPHORE_HANDLE
  int ERROR_HANDLE
  int CREATION_HANDLE
  int BOGUS_HANDLE
  int ERROR_WAIT_DEFAULT
  Random s_random
  int _cleanupWait
  DbConnectionPoolIdentity _identity
  DbConnectionFactory _connectionFactory
  DbConnectionPoolGroup _connectionPoolGroup
  DbConnectionPoolGroupOptions _connectionPoolGroupOptions
  DbConnectionPoolProviderInfo _connectionPoolProviderInfo
  State _state
  ConcurrentStack`1<DbConnectionInternal> _stackOld
  ConcurrentStack`1<DbConnectionInternal> _stackNew
  ConcurrentQueue`1<PendingGetConnection> _pendingOpens
  int _pendingOpensWaiting
  WaitCallback _poolCreateRequest
  int _waitCount
  PoolWaitHandles _waitHandles
  Exception _resError
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _errorOccurred
  int _errorWait
  Timer _errorTimer
  Timer _cleanupTimer
  TransactedConnectionPool _transactedConnectionPool
  List`1<DbConnectionInternal> _objectList
  int _totalObjects
Свойства:
  int CreationTimeout
  int Count
  DbConnectionFactory ConnectionFactory
  bool ErrorOccurred
  bool HasTransactionAffinity
  TimeSpan LoadBalanceTimeout
  bool NeedToReplenish
  DbConnectionPoolIdentity Identity
  bool IsRunning
  int MaxPoolSize
  int MinPoolSize
  DbConnectionPoolGroup PoolGroup
  DbConnectionPoolGroupOptions PoolGroupOptions
  DbConnectionPoolProviderInfo ProviderInfo
  bool UseLoadBalancing
  bool UsingIntegrateSecurity
Методы:
  void .ctor(DbConnectionFactory connectionFactory, DbConnectionPoolGroup connectionPoolGroup, DbConnectionPoolIdentity identity, DbConnectionPoolProviderInfo connectionPoolProviderInfo)
  int get_CreationTimeout()
  int get_Count()
  DbConnectionFactory get_ConnectionFactory()
  bool get_ErrorOccurred()
  bool get_HasTransactionAffinity()
  TimeSpan get_LoadBalanceTimeout()
  bool get_NeedToReplenish()
  DbConnectionPoolIdentity get_Identity()
  bool get_IsRunning()
  int get_MaxPoolSize()
  int get_MinPoolSize()
  DbConnectionPoolGroup get_PoolGroup()
  DbConnectionPoolGroupOptions get_PoolGroupOptions()
  DbConnectionPoolProviderInfo get_ProviderInfo()
  bool get_UseLoadBalancing()
  bool get_UsingIntegrateSecurity()
  void CleanupCallback(object state)
  void Clear()
  Timer CreateCleanupTimer()
  DbConnectionInternal CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
  void DeactivateObject(DbConnectionInternal obj)
  void DestroyObject(DbConnectionInternal obj)
  void ErrorCallback(object state)
  Exception TryCloneCachedException()
  void WaitForPendingOpen()
  bool TryGetConnection(DbConnection owningObject, TaskCompletionSource`1<DbConnectionInternal> retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
  bool TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, bool allowCreate, bool onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
  void PrepareConnection(DbConnection owningObject, DbConnectionInternal obj, Transaction transaction)
  DbConnectionInternal ReplaceConnection(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
  DbConnectionInternal GetFromGeneralPool()
  DbConnectionInternal GetFromTransactedPool(Transaction& transaction)
  void PoolCreateRequest(object state)
  void PutNewObject(DbConnectionInternal obj)
  void PutObject(DbConnectionInternal obj, object owningObject)
  void PutObjectFromTransactedPool(DbConnectionInternal obj)
  void QueuePoolCreateRequest()
  bool ReclaimEmancipatedObjects()
  void Startup()
  void Shutdown()
  void TransactionEnded(Transaction transaction, DbConnectionInternal transactedObject)
  DbConnectionInternal UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionPoolGroup
Наследуется от: object
Поля:
  DbConnectionOptions _connectionOptions
  DbConnectionPoolKey _poolKey
  DbConnectionPoolGroupOptions _poolGroupOptions
  ConcurrentDictionary`2<DbConnectionPoolIdentity, DbConnectionPool> _poolCollection
  int _state
  DbConnectionPoolGroupProviderInfo _providerInfo
  DbMetaDataFactory _metaDataFactory
  int PoolGroupStateActive
  int PoolGroupStateIdle
  int PoolGroupStateDisabled
Свойства:
  DbConnectionOptions ConnectionOptions
  DbConnectionPoolKey PoolKey
  DbConnectionPoolGroupProviderInfo ProviderInfo
  bool IsDisabled
  DbConnectionPoolGroupOptions PoolGroupOptions
  DbMetaDataFactory MetaDataFactory
Методы:
  void .ctor(DbConnectionOptions connectionOptions, DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolGroupOptions)
  DbConnectionOptions get_ConnectionOptions()
  DbConnectionPoolKey get_PoolKey()
  DbConnectionPoolGroupProviderInfo get_ProviderInfo()
  void set_ProviderInfo(DbConnectionPoolGroupProviderInfo value)
  bool get_IsDisabled()
  DbConnectionPoolGroupOptions get_PoolGroupOptions()
  DbMetaDataFactory get_MetaDataFactory()
  void set_MetaDataFactory(DbMetaDataFactory value)
  int Clear()
  DbConnectionPool GetConnectionPool(DbConnectionFactory connectionFactory)
  bool MarkPoolGroupAsActive()
  bool Prune()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionPoolGroupProviderInfo
Наследуется от: object
Поля:
  DbConnectionPoolGroup _poolGroup
Свойства:
  DbConnectionPoolGroup PoolGroup
Методы:
  DbConnectionPoolGroup get_PoolGroup()
  void set_PoolGroup(DbConnectionPoolGroup value)
  void .ctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionPoolIdentity
Наследуется от: object
Поля:
  DbConnectionPoolIdentity NoIdentity
  string _sidString
  bool _isRestricted
  bool _isNetwork
  int _hashCode
Свойства:
  bool IsRestricted
Методы:
  DbConnectionPoolIdentity GetCurrent()
  void .ctor(string sidString, bool isRestricted, bool isNetwork)
  bool get_IsRestricted()
  bool Equals(object value)
  int GetHashCode()
  DbConnectionPoolIdentity GetCurrentManaged()
  void .cctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionPoolGroupOptions
Наследуется от: object
Поля:
  bool _poolByIdentity
  int _minPoolSize
  int _maxPoolSize
  int _creationTimeout
  TimeSpan _loadBalanceTimeout
  bool _hasTransactionAffinity
  bool _useLoadBalancing
Свойства:
  int CreationTimeout
  bool HasTransactionAffinity
  TimeSpan LoadBalanceTimeout
  int MaxPoolSize
  int MinPoolSize
  bool PoolByIdentity
  bool UseLoadBalancing
Методы:
  void .ctor(bool poolByIdentity, int minPoolSize, int maxPoolSize, int creationTimeout, int loadBalanceTimeout, bool hasTransactionAffinity)
  int get_CreationTimeout()
  bool get_HasTransactionAffinity()
  TimeSpan get_LoadBalanceTimeout()
  int get_MaxPoolSize()
  int get_MinPoolSize()
  bool get_PoolByIdentity()
  bool get_UseLoadBalancing()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbConnectionPoolProviderInfo
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Data.ProviderBase.DbMetaDataFactory
Наследуется от: object
Поля:
  DataSet _metaDataCollectionsDataSet
  string _normalizedServerVersion
  string _serverVersionString
  string _collectionName
  string _populationMechanism
  string _populationString
  string _maximumVersion
  string _minimumVersion
  string _dataSourceProductVersionNormalized
  string _dataSourceProductVersion
  string _restrictionDefault
  string _restrictionNumber
  string _numberOfRestrictions
  string _restrictionName
  string _parameterName
  string _dataTable
  string _sqlCommand
  string _prepareCollection
Свойства:
  DataSet CollectionDataSet
  string ServerVersion
  string ServerVersionNormalized
Методы:
  void .ctor(Stream xmlStream, string serverVersion, string normalizedServerVersion)
  DataSet get_CollectionDataSet()
  string get_ServerVersion()
  string get_ServerVersionNormalized()
  DataTable CloneAndFilterCollection(string collectionName, String[] hiddenColumnNames)
  void Dispose()
  void Dispose(bool disposing)
  DataTable ExecuteCommand(DataRow requestedCollectionRow, String[] restrictions, DbConnection connection)
  DataColumn[] FilterColumns(DataTable sourceTable, String[] hiddenColumnNames, DataColumnCollection destinationColumns)
  DataRow FindMetaDataCollectionRow(string collectionName)
  void FixUpVersion(DataTable dataSourceInfoTable)
  string GetParameterName(string neededCollectionName, int neededRestrictionNumber)
  DataTable GetSchema(DbConnection connection, string collectionName, String[] restrictions)
  bool IncludeThisColumn(DataColumn sourceColumn, String[] hiddenColumnNames)
  void LoadDataSetFromXml(Stream XmlStream)
  DataTable PrepareCollection(string collectionName, String[] restrictions, DbConnection connection)
  bool SupportedByCurrentVersion(DataRow requestedCollectionRow)
--------------------------------------------------
Класс: System.Data.ProviderBase.DbReferenceCollection
Наследуется от: object
Поля:
  int LockPollTime
  int DefaultCollectionSize
  CollectionEntry[] _items
  object _itemLock
  int _optimisticCount
  int _lastItemIndex
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isNotifying
Свойства:
Методы:
  void .ctor()
  void Add(object value, int tag)
  void AddItem(object value, int tag)
  T FindItem(int tag, Func`2<T, bool> filterMethod)
  void Notify(int message)
  void NotifyItem(int message, int tag, object value)
  void Remove(object value)
  void RemoveItem(object value)
  void TryEnterItemLock(Boolean& lockObtained)
  void ExitItemLockIfNeeded(bool lockObtained)
--------------------------------------------------
Класс: System.Data.ProviderBase.TimeoutTimer
Наследуется от: object
Поля:
  long _timerExpire
  bool _isInfiniteTimeout
  long InfiniteTimeout
Свойства:
  bool IsExpired
  bool IsInfinite
  long LegacyTimerExpire
  long MillisecondsRemaining
Методы:
  TimeoutTimer StartSecondsTimeout(int seconds)
  TimeoutTimer StartMillisecondsTimeout(long milliseconds)
  void SetTimeoutSeconds(int seconds)
  bool get_IsExpired()
  bool get_IsInfinite()
  long get_LegacyTimerExpire()
  long get_MillisecondsRemaining()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.ADP
Наследуется от: object
Поля:
  Task`1<bool> _trueTask
  Task`1<bool> _falseTask
  CompareOptions DefaultCompareOptions
  int DefaultConnectionTimeout
  Type s_stackOverflowType
  Type s_outOfMemoryType
  Type s_threadAbortType
  Type s_nullReferenceType
  Type s_accessViolationType
  Type s_securityType
  bool IsWindowsNT
  bool IsPlatformNT5
  string ConnectionString
  string DataSetColumn
  string DataSetTable
  string Fill
  string FillSchema
  string SourceColumn
  string SourceTable
  string Parameter
  string ParameterName
  string ParameterSetPosition
  int DefaultCommandTimeout
  float FailoverTimeoutStep
  string StrEmpty
  int CharSize
  Version s_systemDataVersion
  String[] AzureSqlServerEndpoints
  int DecimalMaxPrecision
  int DecimalMaxPrecision28
  IntPtr PtrZero
  int PtrSize
  string BeginTransaction
  string ChangeDatabase
  string CommitTransaction
  string CommandTimeout
  string DeriveParameters
  string ExecuteReader
  string ExecuteNonQuery
  string ExecuteScalar
  string GetSchema
  string GetSchemaTable
  string Prepare
  string RollbackTransaction
  string QuoteIdentifier
  string UnquoteIdentifier
Свойства:
  Task`1<bool> TrueTask
  Task`1<bool> FalseTask
Методы:
  Task`1<bool> get_TrueTask()
  Task`1<bool> get_FalseTask()
  void TraceException(string trace, Exception e)
  void TraceExceptionAsReturnValue(Exception e)
  void TraceExceptionWithoutRethrow(Exception e)
  ArgumentException Argument(string error)
  ArgumentException Argument(string error, Exception inner)
  ArgumentException Argument(string error, string parameter)
  ArgumentNullException ArgumentNull(string parameter)
  ArgumentNullException ArgumentNull(string parameter, string error)
  ArgumentOutOfRangeException ArgumentOutOfRange(string parameterName)
  ArgumentOutOfRangeException ArgumentOutOfRange(string message, string parameterName)
  IndexOutOfRangeException IndexOutOfRange(string error)
  InvalidCastException InvalidCast(string error)
  InvalidCastException InvalidCast(string error, Exception inner)
  InvalidOperationException InvalidOperation(string error)
  NotSupportedException NotSupported()
  NotSupportedException NotSupported(string error)
  bool RemoveStringQuotes(string quotePrefix, string quoteSuffix, string quotedString, String& unquotedString)
  ArgumentOutOfRangeException NotSupportedEnumerationValue(Type type, string value, string method)
  InvalidOperationException DataAdapter(string error)
  InvalidOperationException Provider(string error)
  ArgumentException InvalidMultipartName(string property, string value)
  ArgumentException InvalidMultipartNameIncorrectUsageOfQuotes(string property, string value)
  ArgumentException InvalidMultipartNameToManyParts(string property, string value, int limit)
  void CheckArgumentNull(object value, string parameterName)
  bool IsCatchableExceptionType(Exception e)
  bool IsCatchableOrSecurityExceptionType(Exception e)
  ArgumentOutOfRangeException InvalidEnumerationValue(Type type, int value)
  ArgumentException ConnectionStringSyntax(int index)
  ArgumentException KeywordNotSupported(string keyword)
  ArgumentException ConvertFailed(Type fromType, Type toType, Exception innerException)
  Exception InvalidConnectionOptionValue(string key)
  Exception InvalidConnectionOptionValue(string key, Exception inner)
  ArgumentException CollectionRemoveInvalidObject(Type itemType, ICollection collection)
  ArgumentNullException CollectionNullValue(string parameter, Type collection, Type itemType)
  IndexOutOfRangeException CollectionIndexInt32(int index, Type collection, int count)
  IndexOutOfRangeException CollectionIndexString(Type itemType, string propertyName, string propertyValue, Type collection)
  InvalidCastException CollectionInvalidType(Type collection, Type itemType, object invalidValue)
  string ConnectionStateMsg(ConnectionState state)
  Exception StreamClosed(string method)
  string BuildQuotedString(string quotePrefix, string quoteSuffix, string unQuotedString)
  ArgumentException ParametersIsNotParent(Type parameterType, ICollection collection)
  ArgumentException ParametersIsParent(Type parameterType, ICollection collection)
  Exception InternalError(InternalErrorCode internalError)
  Exception DataReaderClosed(string method)
  ArgumentOutOfRangeException InvalidSourceBufferIndex(int maxLen, long srcOffset, string parameterName)
  ArgumentOutOfRangeException InvalidDestinationBufferIndex(int maxLen, int dstOffset, string parameterName)
  IndexOutOfRangeException InvalidBufferSizeOrIndex(int numBytes, int bufferIndex)
  Exception InvalidDataLength(long length)
  bool CompareInsensitiveInvariant(string strvalue, string strconst)
  int DstCompare(string strA, string strB)
  bool IsEmptyArray(String[] array)
  bool IsNull(object value)
  Exception InvalidSeekOrigin(string parameterName)
  void SetCurrentTransaction(Transaction transaction)
  Task`1<T> CreatedTaskWithCancellation()
  void TraceExceptionForCapture(Exception e)
  DataException Data(string message)
  void CheckArgumentLength(string value, string parameterName)
  void CheckArgumentLength(Array value, string parameterName)
  ArgumentOutOfRangeException InvalidAcceptRejectRule(AcceptRejectRule value)
  ArgumentOutOfRangeException InvalidCatalogLocation(CatalogLocation value)
  ArgumentOutOfRangeException InvalidConflictOptions(ConflictOption value)
  ArgumentOutOfRangeException InvalidDataRowState(DataRowState value)
  ArgumentOutOfRangeException InvalidKeyRestrictionBehavior(KeyRestrictionBehavior value)
  ArgumentOutOfRangeException InvalidLoadOption(LoadOption value)
  ArgumentOutOfRangeException InvalidMissingMappingAction(MissingMappingAction value)
  ArgumentOutOfRangeException InvalidMissingSchemaAction(MissingSchemaAction value)
  ArgumentOutOfRangeException InvalidRule(Rule value)
  ArgumentOutOfRangeException InvalidSchemaType(SchemaType value)
  ArgumentOutOfRangeException InvalidStatementType(StatementType value)
  ArgumentOutOfRangeException InvalidUpdateStatus(UpdateStatus value)
  ArgumentOutOfRangeException NotSupportedStatementType(StatementType value, string method)
  ArgumentException InvalidKeyname(string parameterName)
  ArgumentException InvalidValue(string parameterName)
  Exception WrongType(Type got, Type expected)
  Exception CollectionUniqueValue(Type itemType, string propertyName, string propertyValue)
  InvalidOperationException MissingSelectCommand(string method)
  InvalidOperationException DataMapping(string error)
  InvalidOperationException ColumnSchemaExpression(string srcColumn, string cacheColumn)
  InvalidOperationException ColumnSchemaMismatch(string srcColumn, Type srcType, DataColumn column)
  InvalidOperationException ColumnSchemaMissing(string cacheColumn, string tableName, string srcColumn)
  InvalidOperationException MissingColumnMapping(string srcColumn)
  InvalidOperationException MissingTableSchema(string cacheTable, string srcTable)
  InvalidOperationException MissingTableMapping(string srcTable)
  InvalidOperationException MissingTableMappingDestination(string dstTable)
  Exception InvalidSourceColumn(string parameter)
  Exception ColumnsAddNullAttempt(string parameter)
  Exception ColumnsDataSetColumn(string cacheColumn)
  Exception ColumnsIndexInt32(int index, IColumnMappingCollection collection)
  Exception ColumnsIndexSource(string srcColumn)
  Exception ColumnsIsNotParent(ICollection collection)
  Exception ColumnsIsParent(ICollection collection)
  Exception ColumnsUniqueSourceColumn(string srcColumn)
  Exception NotADataColumnMapping(object value)
  Exception InvalidSourceTable(string parameter)
  Exception TablesAddNullAttempt(string parameter)
  Exception TablesDataSetTable(string cacheTable)
  Exception TablesIndexInt32(int index, ITableMappingCollection collection)
  Exception TablesIsNotParent(ICollection collection)
  Exception TablesIsParent(ICollection collection)
  Exception TablesSourceIndex(string srcTable)
  Exception TablesUniqueSourceTable(string srcTable)
  Exception NotADataTableMapping(object value)
  InvalidOperationException UpdateConnectionRequired(StatementType statementType, bool isRowUpdatingCommand)
  InvalidOperationException ConnectionRequired_Res(string method)
  InvalidOperationException UpdateOpenConnectionRequired(StatementType statementType, bool isRowUpdatingCommand, ConnectionState state)
  ArgumentException UnwantedStatementType(StatementType statementType)
  Exception FillSchemaRequiresSourceTableName(string parameter)
  Exception InvalidMaxRecords(string parameter, int max)
  Exception InvalidStartRecord(string parameter, int start)
  Exception FillRequires(string parameter)
  Exception FillRequiresSourceTableName(string parameter)
  Exception FillChapterAutoIncrement()
  InvalidOperationException MissingDataReaderFieldType(int index)
  InvalidOperationException OnlyOneTableForStartRecordOrMaxRecords()
  ArgumentNullException UpdateRequiresNonNullDataSet(string parameter)
  InvalidOperationException UpdateRequiresSourceTable(string defaultSrcTableName)
  InvalidOperationException UpdateRequiresSourceTableName(string srcTable)
  ArgumentNullException UpdateRequiresDataTable(string parameter)
  Exception UpdateConcurrencyViolation(StatementType statementType, int affected, int expected, DataRow[] dataRows)
  InvalidOperationException UpdateRequiresCommand(StatementType statementType, bool isRowUpdatingCommand)
  ArgumentException UpdateMismatchRowTable(int i)
  DataException RowUpdatedErrors()
  DataException RowUpdatingErrors()
  InvalidOperationException ResultsNotAllowedDuringBatch()
  InvalidOperationException DynamicSQLJoinUnsupported()
  InvalidOperationException DynamicSQLNoTableInfo()
  InvalidOperationException DynamicSQLNoKeyInfoDelete()
  InvalidOperationException DynamicSQLNoKeyInfoUpdate()
  InvalidOperationException DynamicSQLNoKeyInfoRowVersionDelete()
  InvalidOperationException DynamicSQLNoKeyInfoRowVersionUpdate()
  InvalidOperationException DynamicSQLNestedQuote(string name, string quote)
  InvalidOperationException NoQuoteChange()
  InvalidOperationException MissingSourceCommand()
  InvalidOperationException MissingSourceCommandConnection()
  DataRow[] SelectAdapterRows(DataTable dataTable, bool sorted)
  void BuildSchemaTableInfoTableNames(String[] columnNameArray)
  int GenerateUniqueName(Dictionary`2<string, int> hash, String& columnName, int index, int uniqueIndex)
  int SrcCompare(string strA, string strB)
  Exception ExceptionWithStackTrace(Exception e)
  IndexOutOfRangeException IndexOutOfRange(int value)
  IndexOutOfRangeException IndexOutOfRange()
  TimeoutException TimeoutException(string error)
  InvalidOperationException InvalidOperation(string error, Exception inner)
  OverflowException Overflow(string error)
  OverflowException Overflow(string error, Exception inner)
  PlatformNotSupportedException DbTypeNotSupported(string dbType)
  InvalidCastException InvalidCast()
  IOException IO(string error)
  IOException IO(string error, Exception inner)
  ObjectDisposedException ObjectDisposed(object instance)
  Exception DataTableDoesNotExist(string collectionName)
  InvalidOperationException MethodCalledTwice(string method)
  ArgumentOutOfRangeException InvalidCommandType(CommandType value)
  ArgumentOutOfRangeException InvalidIsolationLevel(IsolationLevel value)
  ArgumentOutOfRangeException InvalidParameterDirection(ParameterDirection value)
  Exception TooManyRestrictions(string collectionName)
  ArgumentOutOfRangeException InvalidUpdateRowSource(UpdateRowSource value)
  ArgumentException InvalidMinMaxPoolSizeValues()
  InvalidOperationException NoConnectionString()
  Exception MethodNotImplemented(string methodName)
  Exception QueryFailed(string collectionName, Exception e)
  Exception InvalidConnectionOptionValueLength(string key, int limit)
  Exception MissingConnectionOptionValue(string key, string requiredAdditionalKey)
  Exception PooledOpenTimeout()
  Exception NonPooledOpenTimeout()
  InvalidOperationException TransactionConnectionMismatch()
  InvalidOperationException TransactionRequired(string method)
  Exception CommandTextRequired(string method)
  Exception NoColumns()
  InvalidOperationException ConnectionRequired(string method)
  InvalidOperationException OpenConnectionRequired(string method, ConnectionState state)
  Exception OpenReaderExists()
  Exception OpenReaderExists(Exception e)
  Exception NonSeqByteAccess(long badIndex, long currIndex, string method)
  Exception InvalidXml()
  Exception NegativeParameter(string parameterName)
  Exception InvalidXmlMissingColumn(string collectionName, string columnName)
  Exception InvalidMetaDataValue()
  InvalidOperationException NonSequentialColumnAccess(int badCol, int currCol)
  Exception InvalidXmlInvalidValue(string collectionName, string columnName)
  Exception CollectionNameIsNotUnique(string collectionName)
  Exception InvalidCommandTimeout(int value, string property)
  Exception UninitializedParameterSize(int index, Type dataType)
  Exception UnableToBuildCollection(string collectionName)
  Exception PrepareParameterType(DbCommand cmd)
  Exception UndefinedCollection(string collectionName)
  Exception UnsupportedVersion(string collectionName)
  Exception AmbigousCollectionName(string collectionName)
  Exception PrepareParameterSize(DbCommand cmd)
  Exception PrepareParameterScale(DbCommand cmd, string type)
  Exception MissingDataSourceInformationColumn()
  Exception IncorrectNumberOfDataSourceInformationRows()
  Exception MismatchedAsyncResult(string expectedMethod, string gotMethod)
  Exception ClosedConnectionError()
  Exception ConnectionAlreadyOpen(ConnectionState state)
  Exception TransactionPresent()
  Exception LocalTransactionPresent()
  Exception OpenConnectionPropertySet(string property, ConnectionState state)
  Exception EmptyDatabaseName()
  Exception MissingRestrictionColumn()
  Exception InternalConnectionError(ConnectionError internalError)
  Exception InvalidConnectRetryCountValue()
  Exception MissingRestrictionRow()
  Exception InvalidConnectRetryIntervalValue()
  InvalidOperationException AsyncOperationPending()
  IOException ErrorReadingFromStream(Exception internalException)
  ArgumentException InvalidDataType(string typeName)
  ArgumentException UnknownDataType(Type dataType)
  ArgumentException DbTypeNotSupported(DbType type, Type enumtype)
  ArgumentException InvalidOffsetValue(int value)
  ArgumentException InvalidSizeValue(int value)
  ArgumentException ParameterValueOutOfRange(decimal value)
  ArgumentException ParameterValueOutOfRange(SqlDecimal value)
  ArgumentException VersionDoesNotSupportDataType(string typeName)
  Exception ParameterConversionFailed(object value, Type destType, Exception inner)
  Exception ParametersMappingIndex(int index, DbParameterCollection collection)
  Exception ParametersSourceIndex(string parameterName, DbParameterCollection collection, Type parameterType)
  Exception ParameterNull(string parameter, DbParameterCollection collection, Type parameterType)
  Exception UndefinedPopulationMechanism(string populationMechanism)
  Exception InvalidParameterType(DbParameterCollection collection, Type parameterType, object invalidValue)
  Exception ParallelTransactionsNotSupported(DbConnection obj)
  Exception TransactionZombied(DbTransaction obj)
  Delegate FindBuilder(MulticastDelegate mcd)
  void TimerCurrent(Int64& ticks)
  long TimerCurrent()
  long TimerFromSeconds(int seconds)
  long TimerFromMilliseconds(long milliseconds)
  bool TimerHasExpired(long timerExpire)
  long TimerRemaining(long timerExpire)
  long TimerRemainingMilliseconds(long timerExpire)
  long TimerRemainingSeconds(long timerExpire)
  long TimerToMilliseconds(long timerValue)
  long TimerToSeconds(long timerValue)
  string MachineName()
  Transaction GetCurrentTransaction()
  bool IsDirection(DbParameter value, ParameterDirection condition)
  void IsNullOrSqlType(object value, Boolean& isNull, Boolean& isSqlType)
  Version GetAssemblyVersion()
  bool IsAzureSqlServerEndpoint(string dataSource)
  ArgumentOutOfRangeException InvalidDataRowVersion(DataRowVersion value)
  ArgumentException SingleValuedProperty(string propertyName, string value)
  ArgumentException DoubleValuedProperty(string propertyName, string value1, string value2)
  ArgumentException InvalidPrefixSuffix()
  ArgumentOutOfRangeException InvalidCommandBehavior(CommandBehavior value)
  void ValidateCommandBehavior(CommandBehavior value)
  ArgumentOutOfRangeException NotSupportedCommandBehavior(CommandBehavior value, string method)
  ArgumentException BadParameterName(string parameterName)
  Exception DeriveParametersNotSupported(IDbCommand value)
  Exception NoStoredProcedureExists(string sproc)
  InvalidOperationException TransactionCompletedButNotDisposed()
  bool NeedManualEnlistment()
  bool IsEmpty(string str)
  Exception DatabaseNameTooLong()
  int StringLength(string inputString)
  Exception NumericToDecimalOverflow()
  Exception OdbcNoTypesFromProvider()
  ArgumentException InvalidRestrictionValue(string collectionName, string restrictionName, string restrictionValue)
  Exception DataReaderNoData()
  Exception ConnectionIsDisabled(Exception InnerException)
  Exception OffsetOutOfRangeException()
  ArgumentException InvalidDataType(TypeCode typecode)
  InvalidOperationException QuotePrefixNotSet(string method)
  string GetFullPath(string filename)
  InvalidOperationException InvalidDataDirectory()
  ArgumentException UnknownDataTypeCode(Type dataType, TypeCode typeCode)
  void EscapeSpecialCharacters(string unescapedString, StringBuilder escapedString)
  IntPtr IntPtrOffset(IntPtr pbase, int offset)
  ArgumentOutOfRangeException NotSupportedUserDefinedTypeSerializationFormat(Format value, string method)
  ArgumentOutOfRangeException InvalidUserDefinedTypeSerializationFormat(Format value)
  ArgumentOutOfRangeException ArgumentOutOfRange(string message, string parameterName, object value)
  Exception InvalidXMLBadVersion()
  Exception NotAPermissionElement()
  Exception PermissionTypeMismatch()
  ArgumentOutOfRangeException InvalidPermissionState(PermissionState value)
  ConfigurationException Configuration(string message)
  ConfigurationException Configuration(string message, XmlNode node)
  ArgumentException ConfigProviderNotFound()
  InvalidOperationException ConfigProviderInvalid()
  ConfigurationException ConfigProviderNotInstalled()
  ConfigurationException ConfigProviderMissing()
  ConfigurationException ConfigBaseNoChildNodes(XmlNode node)
  ConfigurationException ConfigBaseElementsOnly(XmlNode node)
  ConfigurationException ConfigUnrecognizedAttributes(XmlNode node)
  ConfigurationException ConfigUnrecognizedElement(XmlNode node)
  ConfigurationException ConfigSectionsUnique(string sectionName)
  ConfigurationException ConfigRequiredAttributeMissing(string name, XmlNode node)
  ConfigurationException ConfigRequiredAttributeEmpty(string name, XmlNode node)
  Exception OleDb()
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbConnectionOptions
Наследуется от: object
Поля:
  string ConnectionStringValidKeyPattern
  string ConnectionStringValidValuePattern
  string ConnectionStringQuoteValuePattern
  string ConnectionStringQuoteOdbcValuePattern
  string DataDirectory
  Regex s_connectionStringValidKeyRegex
  Regex s_connectionStringValidValueRegex
  Regex s_connectionStringQuoteValueRegex
  Regex s_connectionStringQuoteOdbcValueRegex
  string _usersConnectionString
  Dictionary`2<string, string> _parsetable
  NameValuePair _keyChain
  bool _hasPasswordKeyword
  bool _useOdbcRules
  bool _hasUserIdKeyword
Свойства:
  bool HasPersistablePassword
  Dictionary`2<string, string> Parsetable
  string Item
  bool IsEmpty
  bool HasBlankPassword
Методы:
  string UsersConnectionString(bool hidePassword)
  string UsersConnectionString(bool hidePassword, bool forceHidePassword)
  bool get_HasPersistablePassword()
  bool ConvertValueToBoolean(string keyName, bool defaultValue)
  bool ConvertValueToBooleanInternal(string keyName, string stringValue)
  bool CompareInsensitiveInvariant(string strvalue, string strconst)
  void DebugTraceKeyValuePair(string keyname, string keyvalue, Dictionary`2<string, string> synonyms)
  string GetKeyName(StringBuilder buffer)
  string GetKeyValue(StringBuilder buffer, bool trimWhitespace)
  int GetKeyValuePair(string connectionString, int currentPosition, StringBuilder buffer, bool useOdbcRules, String& keyname, String& keyvalue)
  bool IsValueValidInternal(string keyvalue)
  bool IsKeyNameValid(string keyname)
  NameValuePair ParseInternal(Dictionary`2<string, string> parsetable, string connectionString, bool buildChain, Dictionary`2<string, string> synonyms, bool firstKey)
  NameValuePair ReplacePasswordPwd(String& constr, bool fakePassword)
  void .ctor(string connectionString, Dictionary`2<string, string> synonyms, bool useOdbcRules)
  Dictionary`2<string, string> get_Parsetable()
  string get_Item(string keyword)
  void AppendKeyValuePairBuilder(StringBuilder builder, string keyName, string keyValue, bool useOdbcRules)
  string Expand()
  string ExpandKeyword(string keyword, string replacementValue)
  void ValidateKeyValuePair(string keyword, string value)
  void .ctor(string connectionString, Dictionary`2<string, string> synonyms)
  void .ctor(DbConnectionOptions connectionOptions)
  bool get_IsEmpty()
  bool TryGetParsetableValue(string key, String& value)
  bool ConvertValueToIntegratedSecurity()
  bool ConvertValueToIntegratedSecurityInternal(string stringValue)
  int ConvertValueToInt32(string keyName, int defaultValue)
  int ConvertToInt32Internal(string keyname, string stringValue)
  string ConvertValueToString(string keyName, string defaultValue)
  bool ContainsKey(string keyword)
  string ExpandDataDirectory(string keyword, string value, String& datadir)
  string ExpandDataDirectories(String& filename, Int32& position)
  bool get_HasBlankPassword()
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbConnectionPoolKey
Наследуется от: object
Поля:
  string _connectionString
Свойства:
  string ConnectionString
Методы:
  void .ctor(string connectionString)
  void .ctor(DbConnectionPoolKey key)
  object Clone()
  string get_ConnectionString()
  void set_ConnectionString(string value)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Data.Common.MultipartIdentifier
Наследуется от: object
Поля:
  int MaxParts
  int ServerIndex
  int CatalogIndex
  int SchemaIndex
  int TableIndex
Свойства:
Методы:
  String[] ParseMultipartIdentifier(string name, string leftQuote, string rightQuote, string property, bool ThrowOnEmptyMultipartName)
  void IncrementStringCount(string name, String[] ary, Int32& position, string property)
  bool IsWhitespace(char ch)
  String[] ParseMultipartIdentifier(string name, string leftQuote, string rightQuote, char separator, int limit, bool removequotes, string property, bool ThrowOnEmptyMultipartName)
  void .ctor()
--------------------------------------------------
Класс: System.Data.Common.NameValuePair
Наследуется от: object
Поля:
  string _name
  string _value
  int _length
  NameValuePair _next
Свойства:
  int Length
  string Name
  string Value
  NameValuePair Next
Методы:
  void .ctor(string name, string value, int length)
  int get_Length()
  string get_Name()
  string get_Value()
  NameValuePair get_Next()
  void set_Next(NameValuePair value)
--------------------------------------------------
Класс: System.Data.Common.CatalogLocation
Наследуется от: Enum
Поля:
  int value__
  CatalogLocation Start
  CatalogLocation End
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.BigIntegerStorage
Наследуется от: DataStorage
Поля:
  BigInteger[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  BigInteger ConvertToBigInteger(object value, IFormatProvider formatProvider)
  object ConvertFromBigInteger(BigInteger value, Type type, IFormatProvider formatProvider)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.BooleanStorage
Наследуется от: DataStorage
Поля:
  bool defaultValue
  Boolean[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.ByteStorage
Наследуется от: DataStorage
Поля:
  byte defaultValue
  Byte[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.CharStorage
Наследуется от: DataStorage
Поля:
  char defaultValue
  Char[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.DbCommandBuilder
Наследуется от: Component
Поля:
  string DeleteFrom
  string InsertInto
  string DefaultValues
  string Values
  string Update
  string Set
  string Where
  string SpaceLeftParenthesis
  string Comma
  string Equal
  string LeftParenthesis
  string RightParenthesis
  string NameSeparator
  string IsNull
  string EqualOne
  string And
  string Or
  DbDataAdapter _dataAdapter
  DbCommand _insertCommand
  DbCommand _updateCommand
  DbCommand _deleteCommand
  MissingMappingAction _missingMappingAction
  ConflictOption _conflictDetection
  bool _setAllValues
  bool _hasPartialPrimaryKey
  DataTable _dbSchemaTable
  DbSchemaRow[] _dbSchemaRows
  String[] _sourceColumnNames
  ParameterNames _parameterNames
  string _quotedBaseTableName
  CatalogLocation _catalogLocation
  string _catalogSeparator
  string _schemaSeparator
  string _quotePrefix
  string _quoteSuffix
  string _parameterNamePattern
  string _parameterMarkerFormat
  int _parameterNameMaxLength
Свойства:
  ConflictOption ConflictOption
  CatalogLocation CatalogLocation
  string CatalogSeparator
  DbDataAdapter DataAdapter
  int ParameterNameMaxLength
  string ParameterNamePattern
  string QuotedBaseTableName
  string QuotePrefix
  string QuoteSuffix
  string SchemaSeparator
  bool SetAllValues
  DbCommand InsertCommand
  DbCommand UpdateCommand
  DbCommand DeleteCommand
Методы:
  void .ctor()
  ConflictOption get_ConflictOption()
  void set_ConflictOption(ConflictOption value)
  CatalogLocation get_CatalogLocation()
  void set_CatalogLocation(CatalogLocation value)
  string get_CatalogSeparator()
  void set_CatalogSeparator(string value)
  DbDataAdapter get_DataAdapter()
  void set_DataAdapter(DbDataAdapter value)
  int get_ParameterNameMaxLength()
  string get_ParameterNamePattern()
  string get_QuotedBaseTableName()
  string get_QuotePrefix()
  void set_QuotePrefix(string value)
  string get_QuoteSuffix()
  void set_QuoteSuffix(string value)
  string get_SchemaSeparator()
  void set_SchemaSeparator(string value)
  bool get_SetAllValues()
  void set_SetAllValues(bool value)
  DbCommand get_InsertCommand()
  void set_InsertCommand(DbCommand value)
  DbCommand get_UpdateCommand()
  void set_UpdateCommand(DbCommand value)
  DbCommand get_DeleteCommand()
  void set_DeleteCommand(DbCommand value)
  void BuildCache(bool closeConnection, DataRow dataRow, bool useColumnsForParameterNames)
  DataTable GetSchemaTable(DbCommand sourceCommand)
  void BuildInformation(DataTable schemaTable)
  DbCommand BuildDeleteCommand(DataTableMapping mappings, DataRow dataRow)
  DbCommand BuildInsertCommand(DataTableMapping mappings, DataRow dataRow)
  DbCommand BuildUpdateCommand(DataTableMapping mappings, DataRow dataRow)
  int BuildWhereClause(DataTableMapping mappings, DataRow dataRow, StringBuilder builder, DbCommand command, int parameterCount, bool isUpdate)
  string CreateParameterForNullTest(DbCommand command, string parameterName, string sourceColumn, DataRowVersion version, int parameterCount, object value, DbSchemaRow row, StatementType statementType, bool whereClause)
  string CreateParameterForValue(DbCommand command, string parameterName, string sourceColumn, DataRowVersion version, int parameterCount, object value, DbSchemaRow row, StatementType statementType, bool whereClause)
  void Dispose(bool disposing)
  DataTableMapping GetTableMapping(DataRow dataRow)
  string GetBaseParameterName(int index)
  string GetOriginalParameterName(int index)
  string GetNullParameterName(int index)
  DbCommand GetSelectCommand()
  DbCommand GetInsertCommand()
  DbCommand GetInsertCommand(bool useColumnsForParameterNames)
  DbCommand GetInsertCommand(DataRow dataRow, bool useColumnsForParameterNames)
  DbCommand GetUpdateCommand()
  DbCommand GetUpdateCommand(bool useColumnsForParameterNames)
  DbCommand GetUpdateCommand(DataRow dataRow, bool useColumnsForParameterNames)
  DbCommand GetDeleteCommand()
  DbCommand GetDeleteCommand(bool useColumnsForParameterNames)
  DbCommand GetDeleteCommand(DataRow dataRow, bool useColumnsForParameterNames)
  object GetColumnValue(DataRow row, string columnName, DataTableMapping mappings, DataRowVersion version)
  object GetColumnValue(DataRow row, DataColumn column, DataRowVersion version)
  DataColumn GetDataColumn(string columnName, DataTableMapping tablemapping, DataRow row)
  DbParameter GetNextParameter(DbCommand command, int pcount)
  bool IncludeInInsertValues(DbSchemaRow row)
  bool IncludeInUpdateSet(DbSchemaRow row)
  bool IncludeInWhereClause(DbSchemaRow row, bool isUpdate)
  bool IncrementWhereCount(DbSchemaRow row)
  DbCommand InitializeCommand(DbCommand command)
  string QuotedColumn(string column)
  string QuoteIdentifier(string unquotedIdentifier)
  void RefreshSchema()
  void RemoveExtraParameters(DbCommand command, int usedParameterCount)
  void RowUpdatingHandler(RowUpdatingEventArgs rowUpdatingEvent)
  void RowUpdatingHandlerBuilder(RowUpdatingEventArgs rowUpdatingEvent)
  string UnquoteIdentifier(string quotedIdentifier)
  void ApplyParameterInfo(DbParameter parameter, DataRow row, StatementType statementType, bool whereClause)
  string GetParameterName(int parameterOrdinal)
  string GetParameterName(string parameterName)
  string GetParameterPlaceholder(int parameterOrdinal)
  void SetRowUpdatingHandler(DbDataAdapter adapter)
--------------------------------------------------
Класс: System.Data.Common.DbSchemaRow
Наследуется от: object
Поля:
  string SchemaMappingUnsortedIndex
  DbSchemaTable _schemaTable
  DataRow _dataRow
Свойства:
  DataRow DataRow
  string ColumnName
  int Size
  string BaseColumnName
  string BaseServerName
  string BaseCatalogName
  string BaseSchemaName
  string BaseTableName
  bool IsAutoIncrement
  bool IsUnique
  bool IsRowVersion
  bool IsKey
  bool IsExpression
  bool IsHidden
  bool IsLong
  bool IsReadOnly
  Type DataType
  bool AllowDBNull
  int UnsortedIndex
Методы:
  DbSchemaRow[] GetSortedSchemaRows(DataTable dataTable, bool returnProviderSpecificTypes)
  void .ctor(DbSchemaTable schemaTable, DataRow dataRow)
  DataRow get_DataRow()
  string get_ColumnName()
  int get_Size()
  string get_BaseColumnName()
  string get_BaseServerName()
  string get_BaseCatalogName()
  string get_BaseSchemaName()
  string get_BaseTableName()
  bool get_IsAutoIncrement()
  bool get_IsUnique()
  bool get_IsRowVersion()
  bool get_IsKey()
  bool get_IsExpression()
  bool get_IsHidden()
  bool get_IsLong()
  bool get_IsReadOnly()
  Type get_DataType()
  bool get_AllowDBNull()
  int get_UnsortedIndex()
--------------------------------------------------
Класс: System.Data.Common.DbSchemaTable
Наследуется от: object
Поля:
  String[] s_DBCOLUMN_NAME
  DataTable _dataTable
  DataColumnCollection _columns
  DataColumn[] _columnCache
  bool _returnProviderSpecificTypes
Свойства:
  DataColumn ColumnName
  DataColumn Size
  DataColumn BaseServerName
  DataColumn BaseColumnName
  DataColumn BaseTableName
  DataColumn BaseCatalogName
  DataColumn BaseSchemaName
  DataColumn IsAutoIncrement
  DataColumn IsUnique
  DataColumn IsKey
  DataColumn IsRowVersion
  DataColumn AllowDBNull
  DataColumn IsExpression
  DataColumn IsHidden
  DataColumn IsLong
  DataColumn IsReadOnly
  DataColumn UnsortedIndex
  DataColumn DataType
Методы:
  void .ctor(DataTable dataTable, bool returnProviderSpecificTypes)
  DataColumn get_ColumnName()
  DataColumn get_Size()
  DataColumn get_BaseServerName()
  DataColumn get_BaseColumnName()
  DataColumn get_BaseTableName()
  DataColumn get_BaseCatalogName()
  DataColumn get_BaseSchemaName()
  DataColumn get_IsAutoIncrement()
  DataColumn get_IsUnique()
  DataColumn get_IsKey()
  DataColumn get_IsRowVersion()
  DataColumn get_AllowDBNull()
  DataColumn get_IsExpression()
  DataColumn get_IsHidden()
  DataColumn get_IsLong()
  DataColumn get_IsReadOnly()
  DataColumn get_UnsortedIndex()
  DataColumn get_DataType()
  DataColumn CachedDataColumn(ColumnEnum column)
  DataColumn CachedDataColumn(ColumnEnum column, ColumnEnum column2)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DataAdapter
Наследуется от: Component
Поля:
  object s_eventFillError
  bool _acceptChangesDuringUpdate
  bool _acceptChangesDuringUpdateAfterInsert
  bool _continueUpdateOnError
  bool _hasFillErrorHandler
  bool _returnProviderSpecificTypes
  bool _acceptChangesDuringFill
  LoadOption _fillLoadOption
  MissingMappingAction _missingMappingAction
  MissingSchemaAction _missingSchemaAction
  DataTableMappingCollection _tableMappings
  int s_objectTypeCount
  int _objectID
Свойства:
  bool AcceptChangesDuringFill
  bool AcceptChangesDuringUpdate
  bool ContinueUpdateOnError
  LoadOption FillLoadOption
  MissingMappingAction MissingMappingAction
  MissingSchemaAction MissingSchemaAction
  int ObjectID
  bool ReturnProviderSpecificTypes
  DataTableMappingCollection TableMappings
  ITableMappingCollection System.Data.IDataAdapter.TableMappings
Методы:
  void AssertReaderHandleFieldCount(DataReaderContainer readerHandler)
  void AssertSchemaMapping(SchemaMapping mapping)
  void .ctor()
  void .ctor(DataAdapter from)
  bool get_AcceptChangesDuringFill()
  void set_AcceptChangesDuringFill(bool value)
  bool ShouldSerializeAcceptChangesDuringFill()
  bool get_AcceptChangesDuringUpdate()
  void set_AcceptChangesDuringUpdate(bool value)
  bool get_ContinueUpdateOnError()
  void set_ContinueUpdateOnError(bool value)
  LoadOption get_FillLoadOption()
  void set_FillLoadOption(LoadOption value)
  void ResetFillLoadOption()
  bool ShouldSerializeFillLoadOption()
  MissingMappingAction get_MissingMappingAction()
  void set_MissingMappingAction(MissingMappingAction value)
  MissingSchemaAction get_MissingSchemaAction()
  void set_MissingSchemaAction(MissingSchemaAction value)
  int get_ObjectID()
  bool get_ReturnProviderSpecificTypes()
  void set_ReturnProviderSpecificTypes(bool value)
  DataTableMappingCollection get_TableMappings()
  ITableMappingCollection System.Data.IDataAdapter.get_TableMappings()
  bool ShouldSerializeTableMappings()
  bool HasTableMappings()
  void add_FillError(FillErrorEventHandler value)
  void remove_FillError(FillErrorEventHandler value)
  DataAdapter CloneInternals()
  void CloneFrom(DataAdapter from)
  DataTableMappingCollection CreateTableMappings()
  void Dispose(bool disposing)
  DataTable[] FillSchema(DataSet dataSet, SchemaType schemaType)
  DataTable[] FillSchema(DataSet dataSet, SchemaType schemaType, string srcTable, IDataReader dataReader)
  DataTable FillSchema(DataTable dataTable, SchemaType schemaType, IDataReader dataReader)
  object FillSchemaFromReader(DataSet dataset, DataTable datatable, SchemaType schemaType, string srcTable, IDataReader dataReader)
  int Fill(DataSet dataSet)
  int Fill(DataSet dataSet, string srcTable, IDataReader dataReader, int startRecord, int maxRecords)
  int Fill(DataTable dataTable, IDataReader dataReader)
  int Fill(DataTable[] dataTables, IDataReader dataReader, int startRecord, int maxRecords)
  int FillFromReader(DataSet dataset, DataTable datatable, string srcTable, DataReaderContainer dataReader, int startRecord, int maxRecords, DataColumn parentChapterColumn, object parentChapterValue)
  int FillLoadDataRowChunk(SchemaMapping mapping, int startRecord, int maxRecords)
  int FillLoadDataRow(SchemaMapping mapping)
  SchemaMapping FillMappingInternal(DataSet dataset, DataTable datatable, string srcTable, DataReaderContainer dataReader, int schemaCount, DataColumn parentChapterColumn, object parentChapterValue)
  SchemaMapping FillMapping(DataSet dataset, DataTable datatable, string srcTable, DataReaderContainer dataReader, int schemaCount, DataColumn parentChapterColumn, object parentChapterValue)
  bool FillNextResult(DataReaderContainer dataReader)
  IDataParameter[] GetFillParameters()
  DataTableMapping GetTableMappingBySchemaAction(string sourceTableName, string dataSetTableName, MissingMappingAction mappingAction)
  int IndexOfDataSetTable(string dataSetTable)
  void OnFillError(FillErrorEventArgs value)
  void OnFillErrorHandler(Exception e, DataTable dataTable, Object[] dataValues)
  int Update(DataSet dataSet)
  DataTable[] AddDataTableToArray(DataTable[] tables, DataTable newTable)
  string GetSourceTableName(string srcTable, int index)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.LoadAdapter
Наследуется от: DataAdapter
Поля:
Свойства:
Методы:
  void .ctor()
  int FillFromReader(DataTable[] dataTables, IDataReader dataReader, int startRecord, int maxRecords)
--------------------------------------------------
Класс: System.Data.Common.DataColumnMapping
Наследуется от: MarshalByRefObject
Поля:
  DataColumnMappingCollection _parent
  string _dataSetColumnName
  string _sourceColumnName
Свойства:
  string DataSetColumn
  DataColumnMappingCollection Parent
  string SourceColumn
Методы:
  void .ctor()
  void .ctor(string sourceColumn, string dataSetColumn)
  string get_DataSetColumn()
  void set_DataSetColumn(string value)
  DataColumnMappingCollection get_Parent()
  void set_Parent(DataColumnMappingCollection value)
  string get_SourceColumn()
  void set_SourceColumn(string value)
  object System.ICloneable.Clone()
  DataColumn GetDataColumnBySchemaAction(DataTable dataTable, Type dataType, MissingSchemaAction schemaAction)
  DataColumn GetDataColumnBySchemaAction(string sourceColumn, string dataSetColumn, DataTable dataTable, Type dataType, MissingSchemaAction schemaAction)
  DataColumn CreateDataColumnBySchemaAction(string sourceColumn, string dataSetColumn, DataTable dataTable, Type dataType, MissingSchemaAction schemaAction)
  string ToString()
--------------------------------------------------
Класс: System.Data.Common.DataColumnMappingCollection
Наследуется от: MarshalByRefObject
Поля:
  List`1<DataColumnMapping> _items
Свойства:
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
  object System.Data.IColumnMappingCollection.Item
  int Count
  Type ItemType
  DataColumnMapping Item
  DataColumnMapping Item
Методы:
  void .ctor()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  object System.Data.IColumnMappingCollection.get_Item(string index)
  void System.Data.IColumnMappingCollection.set_Item(string index, object value)
  IColumnMapping System.Data.IColumnMappingCollection.Add(string sourceColumnName, string dataSetColumnName)
  IColumnMapping System.Data.IColumnMappingCollection.GetByDataSetColumn(string dataSetColumnName)
  int get_Count()
  Type get_ItemType()
  DataColumnMapping get_Item(int index)
  void set_Item(int index, DataColumnMapping value)
  DataColumnMapping get_Item(string sourceColumn)
  void set_Item(string sourceColumn, DataColumnMapping value)
  int Add(object value)
  DataColumnMapping Add(DataColumnMapping value)
  DataColumnMapping Add(string sourceColumn, string dataSetColumn)
  void AddRange(DataColumnMapping[] values)
  void AddRange(Array values)
  void AddEnumerableRange(IEnumerable values, bool doClone)
  void AddWithoutEvents(DataColumnMapping value)
  List`1<DataColumnMapping> ArrayList()
  void Clear()
  void ClearWithoutEvents()
  bool Contains(string value)
  bool Contains(object value)
  void CopyTo(Array array, int index)
  void CopyTo(DataColumnMapping[] array, int index)
  DataColumnMapping GetByDataSetColumn(string value)
  IEnumerator GetEnumerator()
  int IndexOf(object value)
  int IndexOf(string sourceColumn)
  int IndexOfDataSetColumn(string dataSetColumn)
  void Insert(int index, object value)
  void Insert(int index, DataColumnMapping value)
  void RangeCheck(int index)
  int RangeCheck(string sourceColumn)
  void RemoveAt(int index)
  void RemoveAt(string sourceColumn)
  void RemoveIndex(int index)
  void Remove(object value)
  void Remove(DataColumnMapping value)
  void Replace(int index, DataColumnMapping newValue)
  void ValidateType(object value)
  void Validate(int index, DataColumnMapping value)
  void ValidateSourceColumn(int index, string value)
  DataColumn GetDataColumn(DataColumnMappingCollection columnMappings, string sourceColumn, Type dataType, DataTable dataTable, MissingMappingAction mappingAction, MissingSchemaAction schemaAction)
  DataColumnMapping GetColumnMappingBySchemaAction(DataColumnMappingCollection columnMappings, string sourceColumn, MissingMappingAction mappingAction)
--------------------------------------------------
Класс: System.Data.Common.DataRecordInternal
Наследуется от: DbDataRecord
Поля:
  SchemaInfo[] _schemaInfo
  Object[] _values
  PropertyDescriptorCollection _propertyDescriptors
  FieldNameLookup _fieldNameLookup
Свойства:
  int FieldCount
  object Item
  object Item
Методы:
  void .ctor(SchemaInfo[] schemaInfo, Object[] values, PropertyDescriptorCollection descriptors, FieldNameLookup fieldNameLookup)
  int get_FieldCount()
  int GetValues(Object[] values)
  string GetName(int i)
  object GetValue(int i)
  string GetDataTypeName(int i)
  Type GetFieldType(int i)
  int GetOrdinal(string name)
  object get_Item(int i)
  object get_Item(string name)
  bool GetBoolean(int i)
  byte GetByte(int i)
  long GetBytes(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  char GetChar(int i)
  long GetChars(int i, long dataIndex, Char[] buffer, int bufferIndex, int length)
  Guid GetGuid(int i)
  short GetInt16(int i)
  int GetInt32(int i)
  long GetInt64(int i)
  float GetFloat(int i)
  double GetDouble(int i)
  string GetString(int i)
  decimal GetDecimal(int i)
  DateTime GetDateTime(int i)
  bool IsDBNull(int i)
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: System.Data.Common.SchemaInfo
Наследуется от: ValueType
Поля:
  string name
  string typeName
  Type type
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.StorageType
Наследуется от: Enum
Поля:
  int value__
  StorageType Empty
  StorageType Object
  StorageType DBNull
  StorageType Boolean
  StorageType Char
  StorageType SByte
  StorageType Byte
  StorageType Int16
  StorageType UInt16
  StorageType Int32
  StorageType UInt32
  StorageType Int64
  StorageType UInt64
  StorageType Single
  StorageType Double
  StorageType Decimal
  StorageType DateTime
  StorageType TimeSpan
  StorageType String
  StorageType Guid
  StorageType ByteArray
  StorageType CharArray
  StorageType Type
  StorageType DateTimeOffset
  StorageType BigInteger
  StorageType Uri
  StorageType SqlBinary
  StorageType SqlBoolean
  StorageType SqlByte
  StorageType SqlBytes
  StorageType SqlChars
  StorageType SqlDateTime
  StorageType SqlDecimal
  StorageType SqlDouble
  StorageType SqlGuid
  StorageType SqlInt16
  StorageType SqlInt32
  StorageType SqlInt64
  StorageType SqlMoney
  StorageType SqlSingle
  StorageType SqlString
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.DataStorage
Наследуется от: object
Поля:
  Type[] s_storageClassType
  DataColumn _column
  DataTable _table
  Type _dataType
  StorageType _storageTypeCode
  BitArray _dbNullBits
  object _defaultValue
  object _nullValue
  bool _isCloneable
  bool _isCustomDefinedType
  bool _isStringType
  bool _isValueType
  Func`2<Type, Tuple`4<bool, bool, bool, bool>> s_inspectTypeForInterfaces
  ConcurrentDictionary`2<Type, Tuple`4<bool, bool, bool, bool>> s_typeImplementsInterface
Свойства:
  DataSetDateTime DateTimeMode
  IFormatProvider FormatProvider
Методы:
  void .ctor(DataColumn column, Type type, object defaultValue, StorageType storageType)
  void .ctor(DataColumn column, Type type, object defaultValue, object nullValue, StorageType storageType)
  void .ctor(DataColumn column, Type type, object defaultValue, object nullValue, bool isICloneable, StorageType storageType)
  DataSetDateTime get_DateTimeMode()
  IFormatProvider get_FormatProvider()
  object Aggregate(Int32[] recordNos, AggregateType kind)
  object AggregateCount(Int32[] recordNos)
  int CompareBits(int recordNo1, int recordNo2)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo1, object value)
  object ConvertValue(object value)
  void CopyBits(int srcRecordNo, int dstRecordNo)
  void Copy(int recordNo1, int recordNo2)
  object Get(int recordNo)
  object GetBits(int recordNo)
  int GetStringLength(int record)
  bool HasValue(int recordNo)
  bool IsNull(int recordNo)
  void Set(int recordNo, object value)
  void SetNullBit(int recordNo, bool flag)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  object ConvertXmlToObject(XmlReader xmlReader, XmlRootAttribute xmlAttrib)
  string ConvertObjectToXml(object value)
  void ConvertObjectToXml(object value, XmlWriter xmlWriter, XmlRootAttribute xmlAttrib)
  DataStorage CreateStorage(DataColumn column, Type dataType, StorageType typeCode)
  StorageType GetStorageType(Type dataType)
  Type GetTypeStorage(StorageType storageType)
  bool IsTypeCustomType(Type type)
  bool IsTypeCustomType(StorageType typeCode)
  bool IsSqlType(StorageType storageType)
  bool IsSqlType(Type dataType)
  bool DetermineIfValueType(StorageType typeCode, Type dataType)
  void ImplementsInterfaces(StorageType typeCode, Type dataType, Boolean& sqlType, Boolean& nullable, Boolean& xmlSerializable, Boolean& changeTracking, Boolean& revertibleChangeTracking)
  Tuple`4<bool, bool, bool, bool> InspectTypeForInterfaces(Type dataType)
  bool ImplementsINullableValue(StorageType typeCode, Type dataType)
  bool IsObjectNull(object value)
  bool IsObjectSqlNull(object value)
  object GetEmptyStorageInternal(int recordCount)
  void CopyValueInternal(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorageInternal(object store, BitArray nullbits)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void SetNullStorage(BitArray nullbits)
  Type GetType(string value)
  string GetQualifiedName(Type type)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DataTableMapping
Наследуется от: MarshalByRefObject
Поля:
  DataTableMappingCollection _parent
  DataColumnMappingCollection _columnMappings
  string _dataSetTableName
  string _sourceTableName
Свойства:
  IColumnMappingCollection System.Data.ITableMapping.ColumnMappings
  DataColumnMappingCollection ColumnMappings
  string DataSetTable
  DataTableMappingCollection Parent
  string SourceTable
Методы:
  void .ctor()
  void .ctor(string sourceTable, string dataSetTable)
  void .ctor(string sourceTable, string dataSetTable, DataColumnMapping[] columnMappings)
  IColumnMappingCollection System.Data.ITableMapping.get_ColumnMappings()
  DataColumnMappingCollection get_ColumnMappings()
  string get_DataSetTable()
  void set_DataSetTable(string value)
  DataTableMappingCollection get_Parent()
  void set_Parent(DataTableMappingCollection value)
  string get_SourceTable()
  void set_SourceTable(string value)
  object System.ICloneable.Clone()
  DataColumn GetDataColumn(string sourceColumn, Type dataType, DataTable dataTable, MissingMappingAction mappingAction, MissingSchemaAction schemaAction)
  DataColumnMapping GetColumnMappingBySchemaAction(string sourceColumn, MissingMappingAction mappingAction)
  DataTable GetDataTableBySchemaAction(DataSet dataSet, MissingSchemaAction schemaAction)
  string ToString()
--------------------------------------------------
Класс: System.Data.Common.DataTableMappingCollection
Наследуется от: MarshalByRefObject
Поля:
  List`1<DataTableMapping> _items
Свойства:
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
  object System.Data.ITableMappingCollection.Item
  int Count
  Type ItemType
  DataTableMapping Item
  DataTableMapping Item
Методы:
  void .ctor()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  object System.Data.ITableMappingCollection.get_Item(string index)
  void System.Data.ITableMappingCollection.set_Item(string index, object value)
  ITableMapping System.Data.ITableMappingCollection.Add(string sourceTableName, string dataSetTableName)
  ITableMapping System.Data.ITableMappingCollection.GetByDataSetTable(string dataSetTableName)
  int get_Count()
  Type get_ItemType()
  DataTableMapping get_Item(int index)
  void set_Item(int index, DataTableMapping value)
  DataTableMapping get_Item(string sourceTable)
  void set_Item(string sourceTable, DataTableMapping value)
  int Add(object value)
  DataTableMapping Add(DataTableMapping value)
  void AddRange(DataTableMapping[] values)
  void AddRange(Array values)
  void AddEnumerableRange(IEnumerable values, bool doClone)
  DataTableMapping Add(string sourceTable, string dataSetTable)
  void AddWithoutEvents(DataTableMapping value)
  List`1<DataTableMapping> ArrayList()
  void Clear()
  void ClearWithoutEvents()
  bool Contains(string value)
  bool Contains(object value)
  void CopyTo(Array array, int index)
  void CopyTo(DataTableMapping[] array, int index)
  DataTableMapping GetByDataSetTable(string dataSetTable)
  IEnumerator GetEnumerator()
  int IndexOf(object value)
  int IndexOf(string sourceTable)
  int IndexOfDataSetTable(string dataSetTable)
  void Insert(int index, object value)
  void Insert(int index, DataTableMapping value)
  void RangeCheck(int index)
  int RangeCheck(string sourceTable)
  void RemoveAt(int index)
  void RemoveAt(string sourceTable)
  void RemoveIndex(int index)
  void Remove(object value)
  void Remove(DataTableMapping value)
  void Replace(int index, DataTableMapping newValue)
  void ValidateType(object value)
  void Validate(int index, DataTableMapping value)
  void ValidateSourceTable(int index, string value)
  DataTableMapping GetTableMappingBySchemaAction(DataTableMappingCollection tableMappings, string sourceTable, string dataSetTable, MissingMappingAction mappingAction)
--------------------------------------------------
Класс: System.Data.Common.DateTimeOffsetStorage
Наследуется от: DataStorage
Поля:
  DateTimeOffset s_defaultValue
  DateTimeOffset[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DateTimeStorage
Наследуется от: DataStorage
Поля:
  DateTime s_defaultValue
  DateTime[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbColumn
Наследуется от: object
Поля:
  Nullable`1<bool> <AllowDBNull>k__BackingField
  string <BaseCatalogName>k__BackingField
  string <BaseColumnName>k__BackingField
  string <BaseSchemaName>k__BackingField
  string <BaseServerName>k__BackingField
  string <BaseTableName>k__BackingField
  string <ColumnName>k__BackingField
  Nullable`1<int> <ColumnOrdinal>k__BackingField
  Nullable`1<int> <ColumnSize>k__BackingField
  Nullable`1<bool> <IsAliased>k__BackingField
  Nullable`1<bool> <IsAutoIncrement>k__BackingField
  Nullable`1<bool> <IsExpression>k__BackingField
  Nullable`1<bool> <IsHidden>k__BackingField
  Nullable`1<bool> <IsIdentity>k__BackingField
  Nullable`1<bool> <IsKey>k__BackingField
  Nullable`1<bool> <IsLong>k__BackingField
  Nullable`1<bool> <IsReadOnly>k__BackingField
  Nullable`1<bool> <IsUnique>k__BackingField
  Nullable`1<int> <NumericPrecision>k__BackingField
  Nullable`1<int> <NumericScale>k__BackingField
  string <UdtAssemblyQualifiedName>k__BackingField
  Type <DataType>k__BackingField
  string <DataTypeName>k__BackingField
Свойства:
  Nullable`1<bool> AllowDBNull
  string BaseCatalogName
  string BaseColumnName
  string BaseSchemaName
  string BaseServerName
  string BaseTableName
  string ColumnName
  Nullable`1<int> ColumnOrdinal
  Nullable`1<int> ColumnSize
  Nullable`1<bool> IsAliased
  Nullable`1<bool> IsAutoIncrement
  Nullable`1<bool> IsExpression
  Nullable`1<bool> IsHidden
  Nullable`1<bool> IsIdentity
  Nullable`1<bool> IsKey
  Nullable`1<bool> IsLong
  Nullable`1<bool> IsReadOnly
  Nullable`1<bool> IsUnique
  Nullable`1<int> NumericPrecision
  Nullable`1<int> NumericScale
  string UdtAssemblyQualifiedName
  Type DataType
  string DataTypeName
  object Item
Методы:
  Nullable`1<bool> get_AllowDBNull()
  void set_AllowDBNull(Nullable`1<bool> value)
  string get_BaseCatalogName()
  void set_BaseCatalogName(string value)
  string get_BaseColumnName()
  void set_BaseColumnName(string value)
  string get_BaseSchemaName()
  void set_BaseSchemaName(string value)
  string get_BaseServerName()
  void set_BaseServerName(string value)
  string get_BaseTableName()
  void set_BaseTableName(string value)
  string get_ColumnName()
  void set_ColumnName(string value)
  Nullable`1<int> get_ColumnOrdinal()
  void set_ColumnOrdinal(Nullable`1<int> value)
  Nullable`1<int> get_ColumnSize()
  void set_ColumnSize(Nullable`1<int> value)
  Nullable`1<bool> get_IsAliased()
  void set_IsAliased(Nullable`1<bool> value)
  Nullable`1<bool> get_IsAutoIncrement()
  void set_IsAutoIncrement(Nullable`1<bool> value)
  Nullable`1<bool> get_IsExpression()
  void set_IsExpression(Nullable`1<bool> value)
  Nullable`1<bool> get_IsHidden()
  void set_IsHidden(Nullable`1<bool> value)
  Nullable`1<bool> get_IsIdentity()
  void set_IsIdentity(Nullable`1<bool> value)
  Nullable`1<bool> get_IsKey()
  void set_IsKey(Nullable`1<bool> value)
  Nullable`1<bool> get_IsLong()
  void set_IsLong(Nullable`1<bool> value)
  Nullable`1<bool> get_IsReadOnly()
  void set_IsReadOnly(Nullable`1<bool> value)
  Nullable`1<bool> get_IsUnique()
  void set_IsUnique(Nullable`1<bool> value)
  Nullable`1<int> get_NumericPrecision()
  void set_NumericPrecision(Nullable`1<int> value)
  Nullable`1<int> get_NumericScale()
  void set_NumericScale(Nullable`1<int> value)
  string get_UdtAssemblyQualifiedName()
  void set_UdtAssemblyQualifiedName(string value)
  Type get_DataType()
  void set_DataType(Type value)
  string get_DataTypeName()
  void set_DataTypeName(string value)
  object get_Item(string property)
  void .ctor()
--------------------------------------------------
Класс: System.Data.Common.DbCommand
Наследуется от: Component
Поля:
Свойства:
  string CommandText
  int CommandTimeout
  CommandType CommandType
  DbConnection Connection
  IDbConnection System.Data.IDbCommand.Connection
  DbConnection DbConnection
  DbParameterCollection DbParameterCollection
  DbTransaction DbTransaction
  bool DesignTimeVisible
  DbParameterCollection Parameters
  IDataParameterCollection System.Data.IDbCommand.Parameters
  DbTransaction Transaction
  IDbTransaction System.Data.IDbCommand.Transaction
  UpdateRowSource UpdatedRowSource
Методы:
  void .ctor()
  string get_CommandText()
  void set_CommandText(string value)
  int get_CommandTimeout()
  void set_CommandTimeout(int value)
  CommandType get_CommandType()
  void set_CommandType(CommandType value)
  DbConnection get_Connection()
  void set_Connection(DbConnection value)
  IDbConnection System.Data.IDbCommand.get_Connection()
  void System.Data.IDbCommand.set_Connection(IDbConnection value)
  DbConnection get_DbConnection()
  void set_DbConnection(DbConnection value)
  DbParameterCollection get_DbParameterCollection()
  DbTransaction get_DbTransaction()
  void set_DbTransaction(DbTransaction value)
  bool get_DesignTimeVisible()
  void set_DesignTimeVisible(bool value)
  DbParameterCollection get_Parameters()
  IDataParameterCollection System.Data.IDbCommand.get_Parameters()
  DbTransaction get_Transaction()
  void set_Transaction(DbTransaction value)
  IDbTransaction System.Data.IDbCommand.get_Transaction()
  void System.Data.IDbCommand.set_Transaction(IDbTransaction value)
  UpdateRowSource get_UpdatedRowSource()
  void set_UpdatedRowSource(UpdateRowSource value)
  void CancelIgnoreFailure()
  void Cancel()
  DbParameter CreateParameter()
  IDbDataParameter System.Data.IDbCommand.CreateParameter()
  DbParameter CreateDbParameter()
  DbDataReader ExecuteDbDataReader(CommandBehavior behavior)
  int ExecuteNonQuery()
  DbDataReader ExecuteReader()
  IDataReader System.Data.IDbCommand.ExecuteReader()
  DbDataReader ExecuteReader(CommandBehavior behavior)
  IDataReader System.Data.IDbCommand.ExecuteReader(CommandBehavior behavior)
  Task`1<int> ExecuteNonQueryAsync()
  Task`1<int> ExecuteNonQueryAsync(CancellationToken cancellationToken)
  Task`1<DbDataReader> ExecuteReaderAsync()
  Task`1<DbDataReader> ExecuteReaderAsync(CancellationToken cancellationToken)
  Task`1<DbDataReader> ExecuteReaderAsync(CommandBehavior behavior)
  Task`1<DbDataReader> ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
  Task`1<DbDataReader> ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
  Task`1<object> ExecuteScalarAsync()
  Task`1<object> ExecuteScalarAsync(CancellationToken cancellationToken)
  object ExecuteScalar()
  void Prepare()
--------------------------------------------------
Класс: System.Data.Common.DbConnection
Наследуется от: Component
Поля:
  bool _suppressStateChangeForReconnection
  StateChangeEventHandler StateChange
Свойства:
  string ConnectionString
  int ConnectionTimeout
  string Database
  string DataSource
  DbProviderFactory DbProviderFactory
  string ServerVersion
  ConnectionState State
  DbProviderFactory ProviderFactory
Методы:
  void .ctor()
  string get_ConnectionString()
  void set_ConnectionString(string value)
  int get_ConnectionTimeout()
  string get_Database()
  string get_DataSource()
  DbProviderFactory get_DbProviderFactory()
  string get_ServerVersion()
  ConnectionState get_State()
  void add_StateChange(StateChangeEventHandler value)
  void remove_StateChange(StateChangeEventHandler value)
  DbTransaction BeginDbTransaction(IsolationLevel isolationLevel)
  DbTransaction BeginTransaction()
  DbTransaction BeginTransaction(IsolationLevel isolationLevel)
  IDbTransaction System.Data.IDbConnection.BeginTransaction()
  IDbTransaction System.Data.IDbConnection.BeginTransaction(IsolationLevel isolationLevel)
  void Close()
  void ChangeDatabase(string databaseName)
  DbCommand CreateCommand()
  IDbCommand System.Data.IDbConnection.CreateCommand()
  DbCommand CreateDbCommand()
  void EnlistTransaction(Transaction transaction)
  DataTable GetSchema()
  DataTable GetSchema(string collectionName)
  DataTable GetSchema(string collectionName, String[] restrictionValues)
  void OnStateChange(StateChangeEventArgs stateChange)
  void Open()
  Task OpenAsync()
  Task OpenAsync(CancellationToken cancellationToken)
  DbProviderFactory get_ProviderFactory()
--------------------------------------------------
Класс: System.Data.Common.DbConnectionStringBuilder
Наследуется от: object
Поля:
  Dictionary`2<string, object> _currentValues
  string _connectionString
  PropertyDescriptorCollection _propertyDescriptors
  bool _browsableConnectionString
  bool _useOdbcRules
  int s_objectTypeCount
  int _objectID
Свойства:
  ICollection Collection
  IDictionary Dictionary
  Dictionary`2<string, object> CurrentValues
  object System.Collections.IDictionary.Item
  object Item
  bool BrowsableConnectionString
  string ConnectionString
  int Count
  bool IsReadOnly
  bool IsFixedSize
  bool System.Collections.ICollection.IsSynchronized
  ICollection Keys
  int ObjectID
  object System.Collections.ICollection.SyncRoot
  ICollection Values
Методы:
  void .ctor()
  void .ctor(bool useOdbcRules)
  ICollection get_Collection()
  IDictionary get_Dictionary()
  Dictionary`2<string, object> get_CurrentValues()
  object System.Collections.IDictionary.get_Item(object keyword)
  void System.Collections.IDictionary.set_Item(object keyword, object value)
  object get_Item(string keyword)
  void set_Item(string keyword, object value)
  bool get_BrowsableConnectionString()
  void set_BrowsableConnectionString(bool value)
  string get_ConnectionString()
  void set_ConnectionString(string value)
  int get_Count()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool System.Collections.ICollection.get_IsSynchronized()
  ICollection get_Keys()
  int get_ObjectID()
  object System.Collections.ICollection.get_SyncRoot()
  ICollection get_Values()
  string ConvertValueToString(object value)
  void System.Collections.IDictionary.Add(object keyword, object value)
  void Add(string keyword, object value)
  void AppendKeyValuePair(StringBuilder builder, string keyword, string value)
  void AppendKeyValuePair(StringBuilder builder, string keyword, string value, bool useOdbcRules)
  void Clear()
  void ClearPropertyDescriptors()
  bool System.Collections.IDictionary.Contains(object keyword)
  bool ContainsKey(string keyword)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool EquivalentTo(DbConnectionStringBuilder connectionStringBuilder)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  string ObjectToString(object keyword)
  void System.Collections.IDictionary.Remove(object keyword)
  bool Remove(string keyword)
  bool ShouldSerialize(string keyword)
  string ToString()
  bool TryGetValue(string keyword, Object& value)
  Attribute[] GetAttributesFromCollection(AttributeCollection collection)
  PropertyDescriptorCollection GetProperties()
  void GetProperties(Hashtable propertyDescriptors)
  PropertyDescriptorCollection GetProperties(Attribute[] attributes)
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: System.Data.Common.DbConnectionStringBuilderDescriptor
Наследуется от: PropertyDescriptor
Поля:
  bool <RefreshOnChange>k__BackingField
  Type <ComponentType>k__BackingField
  bool <IsReadOnly>k__BackingField
  Type <PropertyType>k__BackingField
Свойства:
  bool RefreshOnChange
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
Методы:
  void .ctor(string propertyName, Type componentType, Type propertyType, bool isReadOnly, Attribute[] attributes)
  bool get_RefreshOnChange()
  void set_RefreshOnChange(bool value)
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  bool CanResetValue(object component)
  object GetValue(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
--------------------------------------------------
Класс: System.Data.Common.DbDataAdapter
Наследуется от: DataAdapter
Поля:
  string DefaultSourceTableName
  object s_parameterValueNonNullValue
  object s_parameterValueNullValue
  IDbCommand _deleteCommand
  IDbCommand _insertCommand
  IDbCommand _selectCommand
  IDbCommand _updateCommand
  CommandBehavior _fillCommandBehavior
Свойства:
  IDbDataAdapter _IDbDataAdapter
  DbCommand DeleteCommand
  IDbCommand System.Data.IDbDataAdapter.DeleteCommand
  CommandBehavior FillCommandBehavior
  DbCommand InsertCommand
  IDbCommand System.Data.IDbDataAdapter.InsertCommand
  DbCommand SelectCommand
  IDbCommand System.Data.IDbDataAdapter.SelectCommand
  int UpdateBatchSize
  DbCommand UpdateCommand
  IDbCommand System.Data.IDbDataAdapter.UpdateCommand
  MissingMappingAction UpdateMappingAction
  MissingSchemaAction UpdateSchemaAction
Методы:
  void .ctor()
  void .ctor(DbDataAdapter adapter)
  IDbDataAdapter get__IDbDataAdapter()
  DbCommand get_DeleteCommand()
  void set_DeleteCommand(DbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_DeleteCommand()
  void System.Data.IDbDataAdapter.set_DeleteCommand(IDbCommand value)
  CommandBehavior get_FillCommandBehavior()
  void set_FillCommandBehavior(CommandBehavior value)
  DbCommand get_InsertCommand()
  void set_InsertCommand(DbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_InsertCommand()
  void System.Data.IDbDataAdapter.set_InsertCommand(IDbCommand value)
  DbCommand get_SelectCommand()
  void set_SelectCommand(DbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_SelectCommand()
  void System.Data.IDbDataAdapter.set_SelectCommand(IDbCommand value)
  int get_UpdateBatchSize()
  void set_UpdateBatchSize(int value)
  DbCommand get_UpdateCommand()
  void set_UpdateCommand(DbCommand value)
  IDbCommand System.Data.IDbDataAdapter.get_UpdateCommand()
  void System.Data.IDbDataAdapter.set_UpdateCommand(IDbCommand value)
  MissingMappingAction get_UpdateMappingAction()
  MissingSchemaAction get_UpdateSchemaAction()
  int AddToBatch(IDbCommand command)
  void ClearBatch()
  object System.ICloneable.Clone()
  void CloneFrom(DbDataAdapter from)
  IDbCommand CloneCommand(IDbCommand command)
  RowUpdatedEventArgs CreateRowUpdatedEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  RowUpdatingEventArgs CreateRowUpdatingEvent(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  void Dispose(bool disposing)
  int ExecuteBatch()
  DataTable FillSchema(DataTable dataTable, SchemaType schemaType)
  DataTable[] FillSchema(DataSet dataSet, SchemaType schemaType)
  DataTable[] FillSchema(DataSet dataSet, SchemaType schemaType, string srcTable)
  DataTable[] FillSchema(DataSet dataSet, SchemaType schemaType, IDbCommand command, string srcTable, CommandBehavior behavior)
  DataTable FillSchema(DataTable dataTable, SchemaType schemaType, IDbCommand command, CommandBehavior behavior)
  object FillSchemaInternal(DataSet dataset, DataTable datatable, SchemaType schemaType, IDbCommand command, string srcTable, CommandBehavior behavior)
  int Fill(DataSet dataSet)
  int Fill(DataSet dataSet, string srcTable)
  int Fill(DataSet dataSet, int startRecord, int maxRecords, string srcTable)
  int Fill(DataSet dataSet, int startRecord, int maxRecords, string srcTable, IDbCommand command, CommandBehavior behavior)
  int Fill(DataTable dataTable)
  int Fill(int startRecord, int maxRecords, DataTable[] dataTables)
  int Fill(DataTable dataTable, IDbCommand command, CommandBehavior behavior)
  int Fill(DataTable[] dataTables, int startRecord, int maxRecords, IDbCommand command, CommandBehavior behavior)
  int FillInternal(DataSet dataset, DataTable[] datatables, int startRecord, int maxRecords, string srcTable, IDbCommand command, CommandBehavior behavior)
  IDataParameter GetBatchedParameter(int commandIdentifier, int parameterIndex)
  bool GetBatchedRecordsAffected(int commandIdentifier, Int32& recordsAffected, Exception& error)
  IDataParameter[] GetFillParameters()
  DataTableMapping GetTableMapping(DataTable dataTable)
  void InitializeBatching()
  void OnRowUpdated(RowUpdatedEventArgs value)
  void OnRowUpdating(RowUpdatingEventArgs value)
  void ParameterInput(IDataParameterCollection parameters, StatementType typeIndex, DataRow row, DataTableMapping mappings)
  void ParameterOutput(IDataParameter parameter, DataRow row, DataTableMapping mappings, MissingMappingAction missingMapping, MissingSchemaAction missingSchema)
  void ParameterOutput(IDataParameterCollection parameters, DataRow row, DataTableMapping mappings)
  void TerminateBatching()
  int Update(DataSet dataSet)
  int Update(DataRow[] dataRows)
  int Update(DataTable dataTable)
  int Update(DataSet dataSet, string srcTable)
  int Update(DataRow[] dataRows, DataTableMapping tableMapping)
  void UpdateBatchExecute(BatchCommandInfo[] batchCommands, int commandCount, RowUpdatedEventArgs rowUpdatedEvent)
  ConnectionState UpdateConnectionOpen(IDbConnection connection, StatementType statementType, IDbConnection[] connections, ConnectionState[] connectionStates, bool useSelectConnectionState)
  int UpdateFromDataTable(DataTable dataTable, DataTableMapping tableMapping)
  void UpdateRowExecute(RowUpdatedEventArgs rowUpdatedEvent, IDbCommand dataCommand, StatementType cmdIndex)
  int UpdatedRowStatus(RowUpdatedEventArgs rowUpdatedEvent, BatchCommandInfo[] batchCommands, int commandCount)
  int UpdatedRowStatusContinue(RowUpdatedEventArgs rowUpdatedEvent, BatchCommandInfo[] batchCommands, int commandCount)
  int UpdatedRowStatusErrors(RowUpdatedEventArgs rowUpdatedEvent, BatchCommandInfo[] batchCommands, int commandCount)
  int UpdatedRowStatusSkip(BatchCommandInfo[] batchCommands, int commandCount)
  void UpdatingRowStatusErrors(RowUpdatingEventArgs rowUpdatedEvent, DataRow dataRow)
  IDbConnection GetConnection1(DbDataAdapter adapter)
  IDbConnection GetConnection3(DbDataAdapter adapter, IDbCommand command, string method)
  IDbConnection GetConnection4(DbDataAdapter adapter, IDbCommand command, StatementType statementType, bool isCommandFromRowUpdating)
  DataRowVersion GetParameterSourceVersion(StatementType statementType, IDataParameter parameter)
  void QuietClose(IDbConnection connection, ConnectionState originalState)
  void QuietOpen(IDbConnection connection, ConnectionState& originalState)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbDataReader
Наследуется от: MarshalByRefObject
Поля:
Свойства:
  int Depth
  int FieldCount
  bool HasRows
  bool IsClosed
  int RecordsAffected
  int VisibleFieldCount
  object Item
  object Item
Методы:
  void .ctor()
  int get_Depth()
  int get_FieldCount()
  bool get_HasRows()
  bool get_IsClosed()
  int get_RecordsAffected()
  int get_VisibleFieldCount()
  object get_Item(int ordinal)
  object get_Item(string name)
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  string GetDataTypeName(int ordinal)
  IEnumerator GetEnumerator()
  Type GetFieldType(int ordinal)
  string GetName(int ordinal)
  int GetOrdinal(string name)
  DataTable GetSchemaTable()
  bool GetBoolean(int ordinal)
  byte GetByte(int ordinal)
  long GetBytes(int ordinal, long dataOffset, Byte[] buffer, int bufferOffset, int length)
  char GetChar(int ordinal)
  long GetChars(int ordinal, long dataOffset, Char[] buffer, int bufferOffset, int length)
  DbDataReader GetData(int ordinal)
  IDataReader System.Data.IDataRecord.GetData(int ordinal)
  DbDataReader GetDbDataReader(int ordinal)
  DateTime GetDateTime(int ordinal)
  decimal GetDecimal(int ordinal)
  double GetDouble(int ordinal)
  float GetFloat(int ordinal)
  Guid GetGuid(int ordinal)
  short GetInt16(int ordinal)
  int GetInt32(int ordinal)
  long GetInt64(int ordinal)
  Type GetProviderSpecificFieldType(int ordinal)
  object GetProviderSpecificValue(int ordinal)
  int GetProviderSpecificValues(Object[] values)
  string GetString(int ordinal)
  Stream GetStream(int ordinal)
  TextReader GetTextReader(int ordinal)
  object GetValue(int ordinal)
  T GetFieldValue(int ordinal)
  Task`1<T> GetFieldValueAsync(int ordinal)
  Task`1<T> GetFieldValueAsync(int ordinal, CancellationToken cancellationToken)
  int GetValues(Object[] values)
  bool IsDBNull(int ordinal)
  Task`1<bool> IsDBNullAsync(int ordinal)
  Task`1<bool> IsDBNullAsync(int ordinal, CancellationToken cancellationToken)
  bool NextResult()
  bool Read()
  Task`1<bool> ReadAsync()
  Task`1<bool> ReadAsync(CancellationToken cancellationToken)
  Task`1<bool> NextResultAsync()
  Task`1<bool> NextResultAsync(CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Data.Common.DbDataReaderExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ReadOnlyCollection`1<DbColumn> GetColumnSchema(DbDataReader reader)
  bool CanGetColumnSchema(DbDataReader reader)
--------------------------------------------------
Класс: System.Data.Common.DbDataRecord
Наследуется от: object
Поля:
Свойства:
  int FieldCount
  object Item
  object Item
Методы:
  void .ctor()
  int get_FieldCount()
  object get_Item(int i)
  object get_Item(string name)
  bool GetBoolean(int i)
  byte GetByte(int i)
  long GetBytes(int i, long dataIndex, Byte[] buffer, int bufferIndex, int length)
  char GetChar(int i)
  long GetChars(int i, long dataIndex, Char[] buffer, int bufferIndex, int length)
  IDataReader GetData(int i)
  DbDataReader GetDbDataReader(int i)
  string GetDataTypeName(int i)
  DateTime GetDateTime(int i)
  decimal GetDecimal(int i)
  double GetDouble(int i)
  Type GetFieldType(int i)
  float GetFloat(int i)
  Guid GetGuid(int i)
  short GetInt16(int i)
  int GetInt32(int i)
  long GetInt64(int i)
  string GetName(int i)
  int GetOrdinal(string name)
  string GetString(int i)
  object GetValue(int i)
  int GetValues(Object[] values)
  bool IsDBNull(int i)
  AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  string System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  string System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType)
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes)
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes)
  object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: System.Data.Common.DbDataSourceEnumerator
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  DataTable GetDataSources()
--------------------------------------------------
Класс: System.Data.Common.DbEnumerator
Наследуется от: object
Поля:
  IDataReader _reader
  DbDataRecord _current
  SchemaInfo[] _schemaInfo
  PropertyDescriptorCollection _descriptors
  FieldNameLookup _fieldNameLookup
  bool _closeReader
Свойства:
  object Current
Методы:
  void .ctor(IDataReader reader)
  void .ctor(IDataReader reader, bool closeReader)
  void .ctor(DbDataReader reader)
  void .ctor(DbDataReader reader, bool closeReader)
  object get_Current()
  bool MoveNext()
  void Reset()
  void BuildSchemaInfo()
--------------------------------------------------
Класс: System.Data.Common.DbException
Наследуется от: ExternalException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, int errorCode)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Data.Common.DbMetaDataCollectionNames
Наследуется от: object
Поля:
  string MetaDataCollections
  string DataSourceInformation
  string DataTypes
  string Restrictions
  string ReservedWords
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbMetaDataColumnNames
Наследуется от: object
Поля:
  string CollectionName
  string ColumnSize
  string CompositeIdentifierSeparatorPattern
  string CreateFormat
  string CreateParameters
  string DataSourceProductName
  string DataSourceProductVersion
  string DataType
  string DataSourceProductVersionNormalized
  string GroupByBehavior
  string IdentifierCase
  string IdentifierPattern
  string IsAutoIncrementable
  string IsBestMatch
  string IsCaseSensitive
  string IsConcurrencyType
  string IsFixedLength
  string IsFixedPrecisionScale
  string IsLiteralSupported
  string IsLong
  string IsNullable
  string IsSearchable
  string IsSearchableWithLike
  string IsUnsigned
  string LiteralPrefix
  string LiteralSuffix
  string MaximumScale
  string MinimumScale
  string NumberOfIdentifierParts
  string NumberOfRestrictions
  string OrderByColumnsInSelect
  string ParameterMarkerFormat
  string ParameterMarkerPattern
  string ParameterNameMaxLength
  string ParameterNamePattern
  string ProviderDbType
  string QuotedIdentifierCase
  string QuotedIdentifierPattern
  string ReservedWord
  string StatementSeparatorPattern
  string StringLiteralPattern
  string SupportedJoinOperators
  string TypeName
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbParameter
Наследуется от: MarshalByRefObject
Поля:
Свойства:
  DbType DbType
  ParameterDirection Direction
  bool IsNullable
  string ParameterName
  byte System.Data.IDbDataParameter.Precision
  byte System.Data.IDbDataParameter.Scale
  byte Precision
  byte Scale
  int Size
  string SourceColumn
  bool SourceColumnNullMapping
  DataRowVersion SourceVersion
  object Value
Методы:
  void .ctor()
  DbType get_DbType()
  void set_DbType(DbType value)
  void ResetDbType()
  ParameterDirection get_Direction()
  void set_Direction(ParameterDirection value)
  bool get_IsNullable()
  void set_IsNullable(bool value)
  string get_ParameterName()
  void set_ParameterName(string value)
  byte System.Data.IDbDataParameter.get_Precision()
  void System.Data.IDbDataParameter.set_Precision(byte value)
  byte System.Data.IDbDataParameter.get_Scale()
  void System.Data.IDbDataParameter.set_Scale(byte value)
  byte get_Precision()
  void set_Precision(byte value)
  byte get_Scale()
  void set_Scale(byte value)
  int get_Size()
  void set_Size(int value)
  string get_SourceColumn()
  void set_SourceColumn(string value)
  bool get_SourceColumnNullMapping()
  void set_SourceColumnNullMapping(bool value)
  DataRowVersion get_SourceVersion()
  void set_SourceVersion(DataRowVersion value)
  object get_Value()
  void set_Value(object value)
--------------------------------------------------
Класс: System.Data.Common.DbParameterCollection
Наследуется от: MarshalByRefObject
Поля:
Свойства:
  int Count
  bool IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
  object System.Collections.IList.Item
  object System.Data.IDataParameterCollection.Item
  DbParameter Item
  DbParameter Item
Методы:
  void .ctor()
  int get_Count()
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  object get_SyncRoot()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  object System.Data.IDataParameterCollection.get_Item(string parameterName)
  void System.Data.IDataParameterCollection.set_Item(string parameterName, object value)
  DbParameter get_Item(int index)
  void set_Item(int index, DbParameter value)
  DbParameter get_Item(string parameterName)
  void set_Item(string parameterName, DbParameter value)
  int Add(object value)
  void AddRange(Array values)
  bool Contains(object value)
  bool Contains(string value)
  void CopyTo(Array array, int index)
  void Clear()
  IEnumerator GetEnumerator()
  DbParameter GetParameter(int index)
  DbParameter GetParameter(string parameterName)
  int IndexOf(object value)
  int IndexOf(string parameterName)
  void Insert(int index, object value)
  void Remove(object value)
  void RemoveAt(int index)
  void RemoveAt(string parameterName)
  void SetParameter(int index, DbParameter value)
  void SetParameter(string parameterName, DbParameter value)
--------------------------------------------------
Класс: System.Data.Common.DbProviderFactory
Наследуется от: object
Поля:
Свойства:
  bool CanCreateDataSourceEnumerator
Методы:
  CodeAccessPermission CreatePermission(PermissionState state)
  void .ctor()
  bool get_CanCreateDataSourceEnumerator()
  DbCommand CreateCommand()
  DbCommandBuilder CreateCommandBuilder()
  DbConnection CreateConnection()
  DbConnectionStringBuilder CreateConnectionStringBuilder()
  DbDataAdapter CreateDataAdapter()
  DbParameter CreateParameter()
  DbDataSourceEnumerator CreateDataSourceEnumerator()
--------------------------------------------------
Класс: System.Data.Common.DbProviderSpecificTypePropertyAttribute
Наследуется от: Attribute
Поля:
  bool <IsProviderSpecificTypeProperty>k__BackingField
Свойства:
  bool IsProviderSpecificTypeProperty
Методы:
  void .ctor(bool isProviderSpecificTypeProperty)
  bool get_IsProviderSpecificTypeProperty()
--------------------------------------------------
Класс: System.Data.Common.DbTransaction
Наследуется от: MarshalByRefObject
Поля:
Свойства:
  DbConnection Connection
  IDbConnection System.Data.IDbTransaction.Connection
  DbConnection DbConnection
  IsolationLevel IsolationLevel
Методы:
  void .ctor()
  DbConnection get_Connection()
  IDbConnection System.Data.IDbTransaction.get_Connection()
  DbConnection get_DbConnection()
  IsolationLevel get_IsolationLevel()
  void Commit()
  void Dispose()
  void Dispose(bool disposing)
  void Rollback()
--------------------------------------------------
Класс: System.Data.Common.DecimalStorage
Наследуется от: DataStorage
Поля:
  decimal s_defaultValue
  Decimal[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DoubleStorage
Наследуется от: DataStorage
Поля:
  double defaultValue
  Double[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.GroupByBehavior
Наследуется от: Enum
Поля:
  int value__
  GroupByBehavior Unknown
  GroupByBehavior NotSupported
  GroupByBehavior Unrelated
  GroupByBehavior MustContainAll
  GroupByBehavior ExactMatch
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.IDbColumnSchemaGenerator
Поля:
Свойства:
Методы:
  ReadOnlyCollection`1<DbColumn> GetColumnSchema()
--------------------------------------------------
Класс: System.Data.Common.Int16Storage
Наследуется от: DataStorage
Поля:
  short defaultValue
  Int16[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.Int32Storage
Наследуется от: DataStorage
Поля:
  int defaultValue
  Int32[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.Int64Storage
Наследуется от: DataStorage
Поля:
  long defaultValue
  Int64[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.ObjectStorage
Наследуется от: DataStorage
Поля:
  object s_defaultValue
  Object[] _values
  bool _implementsIXmlSerializable
  object s_tempAssemblyCacheLock
  Dictionary`2<KeyValuePair`2<Type, XmlRootAttribute>, XmlSerializer> s_tempAssemblyCache
  XmlSerializerFactory s_serializerFactory
Свойства:
Методы:
  void .ctor(DataColumn column, Type type)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo1, object value)
  int CompareTo(object valueNo1, object valueNo2)
  int CompareWithFamilies(object valueNo1, object valueNo2)
  void Copy(int recordNo1, int recordNo2)
  object Get(int recordNo)
  Families GetFamily(Type dataType)
  bool IsNull(int record)
  void Set(int recordNo, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  object ConvertXmlToObject(XmlReader xmlReader, XmlRootAttribute xmlAttrib)
  string ConvertObjectToXml(object value)
  void ConvertObjectToXml(object value, XmlWriter xmlWriter, XmlRootAttribute xmlAttrib)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void VerifyIDynamicMetaObjectProvider(Type type)
  XmlSerializer GetXmlSerializer(Type type)
  XmlSerializer GetXmlSerializer(Type type, XmlRootAttribute attribute)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.RowUpdatedEventArgs
Наследуется от: EventArgs
Поля:
  IDbCommand _command
  StatementType _statementType
  DataTableMapping _tableMapping
  Exception _errors
  DataRow _dataRow
  DataRow[] _dataRows
  UpdateStatus _status
  int _recordsAffected
Свойства:
  IDbCommand Command
  Exception Errors
  int RecordsAffected
  DataRow Row
  DataRow[] Rows
  int RowCount
  StatementType StatementType
  UpdateStatus Status
  DataTableMapping TableMapping
Методы:
  void .ctor(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  IDbCommand get_Command()
  Exception get_Errors()
  void set_Errors(Exception value)
  int get_RecordsAffected()
  DataRow get_Row()
  DataRow[] get_Rows()
  int get_RowCount()
  StatementType get_StatementType()
  UpdateStatus get_Status()
  void set_Status(UpdateStatus value)
  DataTableMapping get_TableMapping()
  void AdapterInit(DataRow[] dataRows)
  void AdapterInit(int recordsAffected)
  void CopyToRows(DataRow[] array)
  void CopyToRows(DataRow[] array, int arrayIndex)
--------------------------------------------------
Класс: System.Data.Common.RowUpdatingEventArgs
Наследуется от: EventArgs
Поля:
  IDbCommand _command
  StatementType _statementType
  DataTableMapping _tableMapping
  Exception _errors
  DataRow _dataRow
  UpdateStatus _status
Свойства:
  IDbCommand BaseCommand
  IDbCommand Command
  Exception Errors
  DataRow Row
  StatementType StatementType
  UpdateStatus Status
  DataTableMapping TableMapping
Методы:
  void .ctor(DataRow dataRow, IDbCommand command, StatementType statementType, DataTableMapping tableMapping)
  IDbCommand get_BaseCommand()
  void set_BaseCommand(IDbCommand value)
  IDbCommand get_Command()
  void set_Command(IDbCommand value)
  Exception get_Errors()
  void set_Errors(Exception value)
  DataRow get_Row()
  StatementType get_StatementType()
  UpdateStatus get_Status()
  void set_Status(UpdateStatus value)
  DataTableMapping get_TableMapping()
--------------------------------------------------
Класс: System.Data.Common.SByteStorage
Наследуется от: DataStorage
Поля:
  sbyte defaultValue
  SByte[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlConvert
Наследуется от: object
Поля:
Свойства:
Методы:
  SqlByte ConvertToSqlByte(object value)
  SqlInt16 ConvertToSqlInt16(object value)
  SqlInt32 ConvertToSqlInt32(object value)
  SqlInt64 ConvertToSqlInt64(object value)
  SqlDouble ConvertToSqlDouble(object value)
  SqlDecimal ConvertToSqlDecimal(object value)
  SqlSingle ConvertToSqlSingle(object value)
  SqlMoney ConvertToSqlMoney(object value)
  SqlDateTime ConvertToSqlDateTime(object value)
  SqlBoolean ConvertToSqlBoolean(object value)
  SqlGuid ConvertToSqlGuid(object value)
  SqlBinary ConvertToSqlBinary(object value)
  SqlString ConvertToSqlString(object value)
  SqlChars ConvertToSqlChars(object value)
  SqlBytes ConvertToSqlBytes(object value)
  DateTimeOffset ConvertStringToDateTimeOffset(string value, IFormatProvider formatProvider)
  object ChangeTypeForDefaultValue(object value, Type type, IFormatProvider formatProvider)
  object ChangeType2(object value, StorageType stype, Type type, IFormatProvider formatProvider)
  object ChangeTypeForXML(object value, Type type)
--------------------------------------------------
Класс: System.Data.Common.SqlBinaryStorage
Наследуется от: DataStorage
Поля:
  SqlBinary[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlByteStorage
Наследуется от: DataStorage
Поля:
  SqlByte[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlBytesStorage
Наследуется от: DataStorage
Поля:
  SqlBytes[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlCharsStorage
Наследуется от: DataStorage
Поля:
  SqlChars[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlDateTimeStorage
Наследуется от: DataStorage
Поля:
  SqlDateTime[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlDecimalStorage
Наследуется от: DataStorage
Поля:
  SqlDecimal[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlDoubleStorage
Наследуется от: DataStorage
Поля:
  SqlDouble[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlGuidStorage
Наследуется от: DataStorage
Поля:
  SqlGuid[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlInt16Storage
Наследуется от: DataStorage
Поля:
  SqlInt16[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlInt32Storage
Наследуется от: DataStorage
Поля:
  SqlInt32[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlInt64Storage
Наследуется от: DataStorage
Поля:
  SqlInt64[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlMoneyStorage
Наследуется от: DataStorage
Поля:
  SqlMoney[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlSingleStorage
Наследуется от: DataStorage
Поля:
  SqlSingle[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlStringStorage
Наследуется от: DataStorage
Поля:
  SqlString[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] recordNos, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int Compare(SqlString valueNo1, SqlString valueNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  int GetStringLength(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlBooleanStorage
Наследуется от: DataStorage
Поля:
  SqlBoolean[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SchemaTableColumn
Наследуется от: object
Поля:
  string ColumnName
  string ColumnOrdinal
  string ColumnSize
  string NumericPrecision
  string NumericScale
  string DataType
  string ProviderType
  string NonVersionedProviderType
  string IsLong
  string AllowDBNull
  string IsAliased
  string IsExpression
  string IsKey
  string IsUnique
  string BaseSchemaName
  string BaseTableName
  string BaseColumnName
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.SchemaTableOptionalColumn
Наследуется от: object
Поля:
  string ProviderSpecificDataType
  string IsAutoIncrement
  string IsHidden
  string IsReadOnly
  string IsRowVersion
  string BaseServerName
  string BaseCatalogName
  string AutoIncrementSeed
  string AutoIncrementStep
  string DefaultValue
  string Expression
  string BaseTableNamespace
  string BaseColumnNamespace
  string ColumnMapping
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.SingleStorage
Наследуется от: DataStorage
Поля:
  float defaultValue
  Single[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SqlUdtStorage
Наследуется от: DataStorage
Поля:
  Object[] _values
  bool _implementsIXmlSerializable
  bool _implementsIComparable
  Dictionary`2<Type, object> s_typeToNull
Свойства:
Методы:
  void .ctor(DataColumn column, Type type)
  void .ctor(DataColumn column, Type type, object nullValue)
  object GetStaticNullForUdtType(Type type)
  bool IsNull(int record)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo1, object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int recordNo)
  void Set(int recordNo, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  object ConvertXmlToObject(XmlReader xmlReader, XmlRootAttribute xmlAttrib)
  string ConvertObjectToXml(object value)
  void ConvertObjectToXml(object value, XmlWriter xmlWriter, XmlRootAttribute xmlAttrib)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.StringStorage
Наследуется от: DataStorage
Поля:
  String[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] recordNos, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int recordNo)
  int GetStringLength(int record)
  bool IsNull(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
--------------------------------------------------
Класс: System.Data.Common.SupportedJoinOperators
Наследуется от: Enum
Поля:
  int value__
  SupportedJoinOperators None
  SupportedJoinOperators Inner
  SupportedJoinOperators LeftOuter
  SupportedJoinOperators RightOuter
  SupportedJoinOperators FullOuter
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.TimeSpanStorage
Наследуется от: DataStorage
Поля:
  TimeSpan s_defaultValue
  TimeSpan[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  TimeSpan ConvertToTimeSpan(object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.UInt16Storage
Наследуется от: DataStorage
Поля:
  ushort s_defaultValue
  UInt16[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.UInt32Storage
Наследуется от: DataStorage
Поля:
  UInt32 s_defaultValue
  UInt32[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.UInt64Storage
Наследуется от: DataStorage
Поля:
  ulong s_defaultValue
  UInt64[] _values
Свойства:
Методы:
  void .ctor(DataColumn column)
  object Aggregate(Int32[] records, AggregateType kind)
  int Compare(int recordNo1, int recordNo2)
  int CompareValueTo(int recordNo, object value)
  object ConvertValue(object value)
  void Copy(int recordNo1, int recordNo2)
  object Get(int record)
  void Set(int record, object value)
  void SetCapacity(int capacity)
  object ConvertXmlToObject(string s)
  string ConvertObjectToXml(object value)
  object GetEmptyStorage(int recordCount)
  void CopyValue(int record, object store, BitArray nullbits, int storeIndex)
  void SetStorage(object store, BitArray nullbits)
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.IdentifierCase
Наследуется от: Enum
Поля:
  int value__
  IdentifierCase Unknown
  IdentifierCase Insensitive
  IdentifierCase Sensitive
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.DBConnectionString
Наследуется от: object
Поля:
  string _encryptedUsersConnectionString
  Dictionary`2<string, string> _parsetable
  NameValuePair _keychain
  bool _hasPassword
  String[] _restrictionValues
  string _restrictions
  KeyRestrictionBehavior _behavior
  string _encryptedActualConnectionString
Свойства:
  KeyRestrictionBehavior Behavior
  string ConnectionString
  bool IsEmpty
  NameValuePair KeyChain
  string Restrictions
  string Item
Методы:
  void .ctor(string value, string restrictions, KeyRestrictionBehavior behavior, Dictionary`2<string, string> synonyms, bool useOdbcRules)
  void .ctor(DbConnectionOptions connectionOptions)
  void .ctor(DbConnectionOptions connectionOptions, string restrictions, KeyRestrictionBehavior behavior, Dictionary`2<string, string> synonyms, bool mustCloneDictionary)
  void .ctor(DBConnectionString connectionString, String[] restrictionValues, KeyRestrictionBehavior behavior)
  KeyRestrictionBehavior get_Behavior()
  string get_ConnectionString()
  bool get_IsEmpty()
  NameValuePair get_KeyChain()
  string get_Restrictions()
  string get_Item(string keyword)
  bool ContainsKey(string keyword)
  DBConnectionString Intersect(DBConnectionString entry)
  void ValidateCombinedSet(DBConnectionString componentSet, DBConnectionString combinedSet)
  bool IsRestrictedKeyword(string key)
  bool IsSupersetOf(DBConnectionString entry)
  String[] NewRestrictionAllowOnly(String[] allowonly, String[] preventusage)
  String[] NewRestrictionIntersect(String[] a, String[] b)
  String[] NoDuplicateUnion(String[] a, String[] b)
  String[] ParseRestrictions(string restrictions, Dictionary`2<string, string> synonyms)
  String[] RemoveDuplicates(String[] restrictions)
  void Verify(String[] restrictionValues)
--------------------------------------------------
Класс: System.Data.Common.ExternDll
Наследуется от: object
Поля:
  string Odbc32
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.NameValuePermission
Наследуется от: object
Поля:
  string _value
  DBConnectionString _entry
  NameValuePermission[] _tree
  NameValuePermission Default
Свойства:
Методы:
  void .ctor()
  void .ctor(string keyword)
  void .ctor(string value, DBConnectionString entry)
  void .ctor(NameValuePermission permit)
  int System.IComparable.CompareTo(object a)
  void AddEntry(NameValuePermission kvtree, ArrayList entries, DBConnectionString entry)
  void Intersect(ArrayList entries, NameValuePermission target)
  void Add(NameValuePermission permit)
  bool CheckValueForKeyPermit(DBConnectionString parsetable)
  NameValuePermission CheckKeyForValue(string keyInQuestion)
  NameValuePermission CopyNameValue()
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.UnsafeNativeMethods
Наследуется от: object
Поля:
Свойства:
Методы:
  RetCode SQLAllocHandle(SQL_HANDLE HandleType, IntPtr InputHandle, IntPtr& OutputHandle)
  RetCode SQLAllocHandle(SQL_HANDLE HandleType, OdbcHandle InputHandle, IntPtr& OutputHandle)
  RetCode SQLBindCol(OdbcStatementHandle StatementHandle, ushort ColumnNumber, SQL_C TargetType, HandleRef TargetValue, IntPtr BufferLength, IntPtr StrLen_or_Ind)
  RetCode SQLBindCol(OdbcStatementHandle StatementHandle, ushort ColumnNumber, SQL_C TargetType, IntPtr TargetValue, IntPtr BufferLength, IntPtr StrLen_or_Ind)
  RetCode SQLBindParameter(OdbcStatementHandle StatementHandle, ushort ParameterNumber, short ParamDirection, SQL_C SQLCType, short SQLType, IntPtr cbColDef, IntPtr ibScale, HandleRef rgbValue, IntPtr BufferLength, HandleRef StrLen_or_Ind)
  RetCode SQLCancel(OdbcStatementHandle StatementHandle)
  RetCode SQLCloseCursor(OdbcStatementHandle StatementHandle)
  RetCode SQLColAttributeW(OdbcStatementHandle StatementHandle, short ColumnNumber, short FieldIdentifier, CNativeBuffer CharacterAttribute, short BufferLength, Int16& StringLength, IntPtr& NumericAttribute)
  RetCode SQLColumnsW(OdbcStatementHandle StatementHandle, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string TableName, short NameLen3, string ColumnName, short NameLen4)
  RetCode SQLDisconnect(IntPtr ConnectionHandle)
  RetCode SQLDriverConnectW(OdbcConnectionHandle hdbc, IntPtr hwnd, string connectionstring, short cbConnectionstring, IntPtr connectionstringout, short cbConnectionstringoutMax, Int16& cbConnectionstringout, short fDriverCompletion)
  RetCode SQLEndTran(SQL_HANDLE HandleType, IntPtr Handle, short CompletionType)
  RetCode SQLExecDirectW(OdbcStatementHandle StatementHandle, string StatementText, int TextLength)
  RetCode SQLExecute(OdbcStatementHandle StatementHandle)
  RetCode SQLFetch(OdbcStatementHandle StatementHandle)
  RetCode SQLFreeHandle(SQL_HANDLE HandleType, IntPtr StatementHandle)
  RetCode SQLFreeStmt(OdbcStatementHandle StatementHandle, STMT Option)
  RetCode SQLGetConnectAttrW(OdbcConnectionHandle ConnectionHandle, SQL_ATTR Attribute, Byte[] Value, int BufferLength, Int32& StringLength)
  RetCode SQLGetData(OdbcStatementHandle StatementHandle, ushort ColumnNumber, SQL_C TargetType, CNativeBuffer TargetValue, IntPtr BufferLength, IntPtr& StrLen_or_Ind)
  RetCode SQLGetDescFieldW(OdbcDescriptorHandle StatementHandle, short RecNumber, SQL_DESC FieldIdentifier, CNativeBuffer ValuePointer, int BufferLength, Int32& StringLength)
  RetCode SQLGetDiagRecW(SQL_HANDLE HandleType, OdbcHandle Handle, short RecNumber, StringBuilder rchState, Int32& NativeError, StringBuilder MessageText, short BufferLength, Int16& TextLength)
  RetCode SQLGetDiagFieldW(SQL_HANDLE HandleType, OdbcHandle Handle, short RecNumber, short DiagIdentifier, StringBuilder rchState, short BufferLength, Int16& StringLength)
  RetCode SQLGetFunctions(OdbcConnectionHandle hdbc, SQL_API fFunction, Int16& pfExists)
  RetCode SQLGetInfoW(OdbcConnectionHandle hdbc, SQL_INFO fInfoType, Byte[] rgbInfoValue, short cbInfoValueMax, Int16& pcbInfoValue)
  RetCode SQLGetInfoW(OdbcConnectionHandle hdbc, SQL_INFO fInfoType, Byte[] rgbInfoValue, short cbInfoValueMax, IntPtr pcbInfoValue)
  RetCode SQLGetStmtAttrW(OdbcStatementHandle StatementHandle, SQL_ATTR Attribute, IntPtr& Value, int BufferLength, Int32& StringLength)
  RetCode SQLGetTypeInfo(OdbcStatementHandle StatementHandle, short fSqlType)
  RetCode SQLMoreResults(OdbcStatementHandle StatementHandle)
  RetCode SQLNumResultCols(OdbcStatementHandle StatementHandle, Int16& ColumnCount)
  RetCode SQLPrepareW(OdbcStatementHandle StatementHandle, string StatementText, int TextLength)
  RetCode SQLPrimaryKeysW(OdbcStatementHandle StatementHandle, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string TableName, short NameLen3)
  RetCode SQLProcedureColumnsW(OdbcStatementHandle StatementHandle, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string ProcName, short NameLen3, string ColumnName, short NameLen4)
  RetCode SQLProceduresW(OdbcStatementHandle StatementHandle, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string ProcName, short NameLen3)
  RetCode SQLRowCount(OdbcStatementHandle StatementHandle, IntPtr& RowCount)
  RetCode SQLSetConnectAttrW(OdbcConnectionHandle ConnectionHandle, SQL_ATTR Attribute, IDtcTransaction Value, int StringLength)
  RetCode SQLSetConnectAttrW(OdbcConnectionHandle ConnectionHandle, SQL_ATTR Attribute, string Value, int StringLength)
  RetCode SQLSetConnectAttrW(OdbcConnectionHandle ConnectionHandle, SQL_ATTR Attribute, IntPtr Value, int StringLength)
  RetCode SQLSetConnectAttrW(IntPtr ConnectionHandle, SQL_ATTR Attribute, IntPtr Value, int StringLength)
  RetCode SQLSetDescFieldW(OdbcDescriptorHandle StatementHandle, short ColumnNumber, SQL_DESC FieldIdentifier, HandleRef CharacterAttribute, int BufferLength)
  RetCode SQLSetDescFieldW(OdbcDescriptorHandle StatementHandle, short ColumnNumber, SQL_DESC FieldIdentifier, IntPtr CharacterAttribute, int BufferLength)
  RetCode SQLSetEnvAttr(OdbcEnvironmentHandle EnvironmentHandle, SQL_ATTR Attribute, IntPtr Value, SQL_IS StringLength)
  RetCode SQLSetStmtAttrW(OdbcStatementHandle StatementHandle, int Attribute, IntPtr Value, int StringLength)
  RetCode SQLSpecialColumnsW(OdbcStatementHandle StatementHandle, SQL_SPECIALCOLS IdentifierType, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string TableName, short NameLen3, SQL_SCOPE Scope, SQL_NULLABILITY Nullable)
  RetCode SQLStatisticsW(OdbcStatementHandle StatementHandle, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string TableName, short NameLen3, short Unique, short Reserved)
  RetCode SQLTablesW(OdbcStatementHandle StatementHandle, string CatalogName, short NameLen1, string SchemaName, short NameLen2, string TableName, short NameLen3, string TableType, short NameLen4)
--------------------------------------------------
Класс: System.Data.Common.ActivityCorrelator
Наследуется от: object
Поля:
  ActivityId t_tlsActivity
Свойства:
  ActivityId Current
Методы:
  ActivityId get_Current()
  ActivityId Next()
--------------------------------------------------
Класс: System.Data.Common.DbConnectionStringBuilderUtil
Наследуется от: object
Поля:
  string ApplicationIntentReadWriteString
  string ApplicationIntentReadOnlyString
Свойства:
Методы:
  bool ConvertToBoolean(object value)
  bool ConvertToIntegratedSecurity(object value)
  int ConvertToInt32(object value)
  string ConvertToString(object value)
  bool TryConvertToApplicationIntent(string value, ApplicationIntent& result)
  bool IsValidApplicationIntentValue(ApplicationIntent value)
  string ApplicationIntentToString(ApplicationIntent value)
  ApplicationIntent ConvertToApplicationIntent(string keyword, object value)
--------------------------------------------------
Класс: System.Data.Common.DbConnectionStringDefaults
Наследуется от: object
Поля:
  ApplicationIntent ApplicationIntent
  string ApplicationName
  string AttachDBFilename
  int ConnectTimeout
  string CurrentLanguage
  string DataSource
  bool Encrypt
  bool Enlist
  string FailoverPartner
  string InitialCatalog
  bool IntegratedSecurity
  int LoadBalanceTimeout
  bool MultipleActiveResultSets
  bool MultiSubnetFailover
  int MaxPoolSize
  int MinPoolSize
  int PacketSize
  string Password
  bool PersistSecurityInfo
  bool Pooling
  bool TrustServerCertificate
  string TypeSystemVersion
  string UserID
  bool UserInstance
  bool Replication
  string WorkstationID
  string TransactionBinding
  int ConnectRetryCount
  int ConnectRetryInterval
  string Dsn
  string Driver
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.DbConnectionStringKeywords
Наследуется от: object
Поля:
  string ApplicationIntent
  string ApplicationName
  string AsynchronousProcessing
  string AttachDBFilename
  string ConnectTimeout
  string ConnectionReset
  string ContextConnection
  string CurrentLanguage
  string Encrypt
  string FailoverPartner
  string InitialCatalog
  string MultipleActiveResultSets
  string MultiSubnetFailover
  string NetworkLibrary
  string PacketSize
  string Replication
  string TransactionBinding
  string TrustServerCertificate
  string TypeSystemVersion
  string UserInstance
  string WorkstationID
  string ConnectRetryCount
  string ConnectRetryInterval
  string DataSource
  string IntegratedSecurity
  string Password
  string Driver
  string PersistSecurityInfo
  string UserID
  string Enlist
  string LoadBalanceTimeout
  string MaxPoolSize
  string Pooling
  string MinPoolSize
  string Dsn
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.DbConnectionStringSynonyms
Наследуется от: object
Поля:
  string Async
  string APP
  string EXTENDEDPROPERTIES
  string INITIALFILENAME
  string CONNECTIONTIMEOUT
  string TIMEOUT
  string LANGUAGE
  string ADDR
  string ADDRESS
  string SERVER
  string NETWORKADDRESS
  string DATABASE
  string TRUSTEDCONNECTION
  string ConnectionLifetime
  string NET
  string NETWORK
  string Pwd
  string PERSISTSECURITYINFO
  string UID
  string User
  string WSID
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.DBDataPermission
Наследуется от: CodeAccessPermission
Поля:
  bool _isUnrestricted
  bool _allowBlankPassword
  NameValuePermission _keyvaluetree
  ArrayList _keyvalues
Свойства:
  bool AllowBlankPassword
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  void .ctor(PermissionState state, bool allowBlankPassword)
  void .ctor(DBDataPermission permission)
  void .ctor(DBDataPermissionAttribute permissionAttribute)
  void .ctor(DbConnectionOptions connectionOptions)
  bool get_AllowBlankPassword()
  void set_AllowBlankPassword(bool value)
  void Add(string connectionString, string restrictions, KeyRestrictionBehavior behavior)
  void AddPermissionEntry(DBConnectionString entry)
  void Clear()
  IPermission Copy()
  void CopyFrom(DBDataPermission permission)
  DBDataPermission CreateInstance()
  IPermission Intersect(IPermission target)
  bool IsEmpty()
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  IPermission Union(IPermission target)
  string DecodeXmlValue(string value)
  string EncodeXmlValue(string value)
  void FromXml(SecurityElement securityElement)
  SecurityElement ToXml()
--------------------------------------------------
Класс: System.Data.Common.DBDataPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  bool _allowBlankPassword
  string _connectionString
  string _restrictions
  KeyRestrictionBehavior _behavior
Свойства:
  bool AllowBlankPassword
  string ConnectionString
  KeyRestrictionBehavior KeyRestrictionBehavior
  string KeyRestrictions
Методы:
  void .ctor(SecurityAction action)
  bool get_AllowBlankPassword()
  void set_AllowBlankPassword(bool value)
  string get_ConnectionString()
  void set_ConnectionString(string value)
  KeyRestrictionBehavior get_KeyRestrictionBehavior()
  void set_KeyRestrictionBehavior(KeyRestrictionBehavior value)
  string get_KeyRestrictions()
  void set_KeyRestrictions(string value)
  bool ShouldSerializeConnectionString()
  bool ShouldSerializeKeyRestrictions()
--------------------------------------------------
Класс: System.Data.Common.DbProviderConfigurationHandler
Наследуется от: object
Поля:
  string settings
Свойства:
Методы:
  void .ctor()
  NameValueCollection CloneParent(NameValueCollection parentConfig)
  object Create(object parent, object configContext, XmlNode section)
  object CreateStatic(object parent, object configContext, XmlNode section)
  string RemoveAttribute(XmlNode node, string name)
--------------------------------------------------
Класс: System.Data.Common.DbProviderFactories
Наследуется от: object
Поля:
  string AssemblyQualifiedName
  string Instance
  string InvariantName
  string Name
  string Description
  ConnectionState _initState
  DataTable _providerTable
  object _lockobj
Свойства:
Методы:
  DbProviderFactory GetFactory(string providerInvariantName)
  DbProviderFactory GetFactory(DataRow providerRow)
  DbProviderFactory GetFactory(DbConnection connection)
  DataTable GetFactoryClasses()
  DataTable IncludeFrameworkFactoryClasses(DataTable configDataTable)
  DataTable GetProviderTable()
  void Initialize()
  void .cctor()
--------------------------------------------------
Класс: System.Data.Common.DbProvidersIndex
Наследуется от: Enum
Поля:
  int value__
  DbProvidersIndex Odbc
  DbProvidersIndex OleDb
  DbProvidersIndex OracleClient
  DbProvidersIndex SqlClient
  DbProvidersIndex DbProvidersIndexCount
Свойства:
Методы:
--------------------------------------------------
Класс: System.Data.Common.DbProviderFactoryConfigSection
Наследуется от: object
Поля:
  Type factType
  string name
  string invariantName
  string description
  string assemblyQualifiedName
Свойства:
  string Name
  string InvariantName
  string Description
  string AssemblyQualifiedName
Методы:
  void .ctor(Type FactoryType, string FactoryName, string FactoryDescription)
  void .ctor(string FactoryName, string FactoryInvariantName, string FactoryDescription, string FactoryAssemblyQualifiedName)
  bool IsNull()
  string get_Name()
  string get_InvariantName()
  string get_Description()
  string get_AssemblyQualifiedName()
--------------------------------------------------
Класс: System.Data.Common.DbProviderFactoriesConfigurationHandler
Наследуется от: object
Поля:
  string sectionName
  string providerGroup
  string odbcProviderName
  string odbcProviderDescription
  string oledbProviderName
  string oledbProviderDescription
  string oracleclientProviderName
  string oracleclientProviderNamespace
  string oracleclientProviderDescription
  string sqlclientProviderName
  string sqlclientProviderDescription
  string sqlclientPartialAssemblyQualifiedName
  string oracleclientPartialAssemblyQualifiedName
Свойства:
Методы:
  void .ctor()
  object Create(object parent, object configContext, XmlNode section)
  object CreateStatic(object parent, object configContext, XmlNode section)
  void HandleProviders(DataSet config, object configContext, XmlNode section, string sectionName)
  DataTable CreateProviderDataTable()
--------------------------------------------------
Класс: System.Data.Common.HandlerBase
Наследуется от: object
Поля:
Свойства:
Методы:
  void CheckForChildNodes(XmlNode node)
  void CheckForNonElement(XmlNode node)
  void CheckForUnrecognizedAttributes(XmlNode node)
  bool IsIgnorableAlsoCheckForNonElement(XmlNode node)
  string RemoveAttribute(XmlNode node, string name, bool required, bool allowEmpty)
  DataSet CloneParent(DataSet parentConfig, bool insenstive)
--------------------------------------------------
Класс: System.Data.Common.DbConnectionOptionKeywords
Наследуется от: object
Поля:
  string Driver
  string Pwd
  string UID
  string DataProvider
  string ExtendedProperties
  string FileName
  string Provider
  string RemoteProvider
  string Password
  string UserID
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.ExtendedClrTypeCode
Наследуется от: Enum
Поля:
  int value__
  ExtendedClrTypeCode Invalid
  ExtendedClrTypeCode Boolean
  ExtendedClrTypeCode Byte
  ExtendedClrTypeCode Char
  ExtendedClrTypeCode DateTime
  ExtendedClrTypeCode DBNull
  ExtendedClrTypeCode Decimal
  ExtendedClrTypeCode Double
  ExtendedClrTypeCode Empty
  ExtendedClrTypeCode Int16
  ExtendedClrTypeCode Int32
  ExtendedClrTypeCode Int64
  ExtendedClrTypeCode SByte
  ExtendedClrTypeCode Single
  ExtendedClrTypeCode String
  ExtendedClrTypeCode UInt16
  ExtendedClrTypeCode UInt32
  ExtendedClrTypeCode UInt64
  ExtendedClrTypeCode Object
  ExtendedClrTypeCode ByteArray
  ExtendedClrTypeCode CharArray
  ExtendedClrTypeCode Guid
  ExtendedClrTypeCode SqlBinary
  ExtendedClrTypeCode SqlBoolean
  ExtendedClrTypeCode SqlByte
  ExtendedClrTypeCode SqlDateTime
  ExtendedClrTypeCode SqlDouble
  ExtendedClrTypeCode SqlGuid
  ExtendedClrTypeCode SqlInt16
  ExtendedClrTypeCode SqlInt32
  ExtendedClrTypeCode SqlInt64
  ExtendedClrTypeCode SqlMoney
  ExtendedClrTypeCode SqlDecimal
  ExtendedClrTypeCode SqlSingle
  ExtendedClrTypeCode SqlString
  ExtendedClrTypeCode SqlChars
  ExtendedClrTypeCode SqlBytes
  ExtendedClrTypeCode SqlXml
  ExtendedClrTypeCode DataTable
  ExtendedClrTypeCode DbDataReader
  ExtendedClrTypeCode IEnumerableOfSqlDataRecord
  ExtendedClrTypeCode TimeSpan
  ExtendedClrTypeCode DateTimeOffset
  ExtendedClrTypeCode Stream
  ExtendedClrTypeCode TextReader
  ExtendedClrTypeCode XmlReader
  ExtendedClrTypeCode Last
  ExtendedClrTypeCode First
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.ITypedGetters
Поля:
Свойства:
Методы:
  bool IsDBNull(int ordinal)
  SqlDbType GetVariantType(int ordinal)
  bool GetBoolean(int ordinal)
  byte GetByte(int ordinal)
  long GetBytes(int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  char GetChar(int ordinal)
  long GetChars(int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  short GetInt16(int ordinal)
  int GetInt32(int ordinal)
  long GetInt64(int ordinal)
  float GetFloat(int ordinal)
  double GetDouble(int ordinal)
  string GetString(int ordinal)
  decimal GetDecimal(int ordinal)
  DateTime GetDateTime(int ordinal)
  Guid GetGuid(int ordinal)
  SqlBoolean GetSqlBoolean(int ordinal)
  SqlByte GetSqlByte(int ordinal)
  SqlInt16 GetSqlInt16(int ordinal)
  SqlInt32 GetSqlInt32(int ordinal)
  SqlInt64 GetSqlInt64(int ordinal)
  SqlSingle GetSqlSingle(int ordinal)
  SqlDouble GetSqlDouble(int ordinal)
  SqlMoney GetSqlMoney(int ordinal)
  SqlDateTime GetSqlDateTime(int ordinal)
  SqlDecimal GetSqlDecimal(int ordinal)
  SqlString GetSqlString(int ordinal)
  SqlBinary GetSqlBinary(int ordinal)
  SqlGuid GetSqlGuid(int ordinal)
  SqlChars GetSqlChars(int ordinal)
  SqlBytes GetSqlBytes(int ordinal)
  SqlXml GetSqlXml(int ordinal)
  SqlBytes GetSqlBytesRef(int ordinal)
  SqlChars GetSqlCharsRef(int ordinal)
  SqlXml GetSqlXmlRef(int ordinal)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.ITypedGettersV3
Поля:
Свойства:
Методы:
  bool IsDBNull(SmiEventSink sink, int ordinal)
  SmiMetaData GetVariantType(SmiEventSink sink, int ordinal)
  bool GetBoolean(SmiEventSink sink, int ordinal)
  byte GetByte(SmiEventSink sink, int ordinal)
  long GetBytesLength(SmiEventSink sink, int ordinal)
  int GetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  long GetCharsLength(SmiEventSink sink, int ordinal)
  int GetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  string GetString(SmiEventSink sink, int ordinal)
  short GetInt16(SmiEventSink sink, int ordinal)
  int GetInt32(SmiEventSink sink, int ordinal)
  long GetInt64(SmiEventSink sink, int ordinal)
  float GetSingle(SmiEventSink sink, int ordinal)
  double GetDouble(SmiEventSink sink, int ordinal)
  SqlDecimal GetSqlDecimal(SmiEventSink sink, int ordinal)
  DateTime GetDateTime(SmiEventSink sink, int ordinal)
  Guid GetGuid(SmiEventSink sink, int ordinal)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.ITypedSetters
Поля:
Свойства:
Методы:
  void SetDBNull(int ordinal)
  void SetBoolean(int ordinal, bool value)
  void SetByte(int ordinal, byte value)
  void SetBytes(int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetChar(int ordinal, char value)
  void SetChars(int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetInt16(int ordinal, short value)
  void SetInt32(int ordinal, int value)
  void SetInt64(int ordinal, long value)
  void SetFloat(int ordinal, float value)
  void SetDouble(int ordinal, double value)
  void SetString(int ordinal, string value)
  void SetString(int ordinal, string value, int offset)
  void SetDecimal(int ordinal, decimal value)
  void SetDateTime(int ordinal, DateTime value)
  void SetGuid(int ordinal, Guid value)
  void SetSqlBoolean(int ordinal, SqlBoolean value)
  void SetSqlByte(int ordinal, SqlByte value)
  void SetSqlInt16(int ordinal, SqlInt16 value)
  void SetSqlInt32(int ordinal, SqlInt32 value)
  void SetSqlInt64(int ordinal, SqlInt64 value)
  void SetSqlSingle(int ordinal, SqlSingle value)
  void SetSqlDouble(int ordinal, SqlDouble value)
  void SetSqlMoney(int ordinal, SqlMoney value)
  void SetSqlDateTime(int ordinal, SqlDateTime value)
  void SetSqlDecimal(int ordinal, SqlDecimal value)
  void SetSqlString(int ordinal, SqlString value)
  void SetSqlString(int ordinal, SqlString value, int offset)
  void SetSqlBinary(int ordinal, SqlBinary value)
  void SetSqlBinary(int ordinal, SqlBinary value, int offset)
  void SetSqlGuid(int ordinal, SqlGuid value)
  void SetSqlChars(int ordinal, SqlChars value)
  void SetSqlChars(int ordinal, SqlChars value, int offset)
  void SetSqlBytes(int ordinal, SqlBytes value)
  void SetSqlBytes(int ordinal, SqlBytes value, int offset)
  void SetSqlXml(int ordinal, SqlXml value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.ITypedSettersV3
Поля:
Свойства:
Методы:
  void SetVariantMetaData(SmiEventSink sink, int ordinal, SmiMetaData metaData)
  void SetDBNull(SmiEventSink sink, int ordinal)
  void SetBoolean(SmiEventSink sink, int ordinal, bool value)
  void SetByte(SmiEventSink sink, int ordinal, byte value)
  int SetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetBytesLength(SmiEventSink sink, int ordinal, long length)
  int SetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetCharsLength(SmiEventSink sink, int ordinal, long length)
  void SetString(SmiEventSink sink, int ordinal, string value, int offset, int length)
  void SetInt16(SmiEventSink sink, int ordinal, short value)
  void SetInt32(SmiEventSink sink, int ordinal, int value)
  void SetInt64(SmiEventSink sink, int ordinal, long value)
  void SetSingle(SmiEventSink sink, int ordinal, float value)
  void SetDouble(SmiEventSink sink, int ordinal, double value)
  void SetSqlDecimal(SmiEventSink sink, int ordinal, SqlDecimal value)
  void SetDateTime(SmiEventSink sink, int ordinal, DateTime value)
  void SetGuid(SmiEventSink sink, int ordinal, Guid value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.MemoryRecordBuffer
Наследуется от: SmiRecordBuffer
Поля:
  SqlRecordBuffer[] _buffer
Свойства:
Методы:
  void .ctor(SmiMetaData[] metaData)
  bool IsDBNull(SmiEventSink sink, int ordinal)
  SmiMetaData GetVariantType(SmiEventSink sink, int ordinal)
  bool GetBoolean(SmiEventSink sink, int ordinal)
  byte GetByte(SmiEventSink sink, int ordinal)
  long GetBytesLength(SmiEventSink sink, int ordinal)
  int GetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  long GetCharsLength(SmiEventSink sink, int ordinal)
  int GetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  string GetString(SmiEventSink sink, int ordinal)
  short GetInt16(SmiEventSink sink, int ordinal)
  int GetInt32(SmiEventSink sink, int ordinal)
  long GetInt64(SmiEventSink sink, int ordinal)
  float GetSingle(SmiEventSink sink, int ordinal)
  double GetDouble(SmiEventSink sink, int ordinal)
  SqlDecimal GetSqlDecimal(SmiEventSink sink, int ordinal)
  DateTime GetDateTime(SmiEventSink sink, int ordinal)
  Guid GetGuid(SmiEventSink sink, int ordinal)
  TimeSpan GetTimeSpan(SmiEventSink sink, int ordinal)
  DateTimeOffset GetDateTimeOffset(SmiEventSink sink, int ordinal)
  void SetDBNull(SmiEventSink sink, int ordinal)
  void SetBoolean(SmiEventSink sink, int ordinal, bool value)
  void SetByte(SmiEventSink sink, int ordinal, byte value)
  int SetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetBytesLength(SmiEventSink sink, int ordinal, long length)
  int SetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetCharsLength(SmiEventSink sink, int ordinal, long length)
  void SetString(SmiEventSink sink, int ordinal, string value, int offset, int length)
  void SetInt16(SmiEventSink sink, int ordinal, short value)
  void SetInt32(SmiEventSink sink, int ordinal, int value)
  void SetInt64(SmiEventSink sink, int ordinal, long value)
  void SetSingle(SmiEventSink sink, int ordinal, float value)
  void SetDouble(SmiEventSink sink, int ordinal, double value)
  void SetSqlDecimal(SmiEventSink sink, int ordinal, SqlDecimal value)
  void SetDateTime(SmiEventSink sink, int ordinal, DateTime value)
  void SetGuid(SmiEventSink sink, int ordinal, Guid value)
  void SetTimeSpan(SmiEventSink sink, int ordinal, TimeSpan value)
  void SetDateTimeOffset(SmiEventSink sink, int ordinal, DateTimeOffset value)
  void SetVariantMetaData(SmiEventSink sink, int ordinal, SmiMetaData metaData)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.MetaDataUtilsSmi
Наследуется от: object
Поля:
  SqlDbType InvalidSqlDbType
  long InvalidMaxLength
  SqlDbType[] s_extendedTypeCodeToSqlDbTypeMap
  Dictionary`2<Type, ExtendedClrTypeCode> s_typeToExtendedTypeCodeMap
Свойства:
Методы:
  Dictionary`2<Type, ExtendedClrTypeCode> CreateTypeToExtendedTypeCodeMap()
  bool IsCharOrXmlType(SqlDbType type)
  bool IsUnicodeType(SqlDbType type)
  bool IsAnsiType(SqlDbType type)
  bool IsBinaryType(SqlDbType type)
  bool IsPlpFormat(SmiMetaData metaData)
  ExtendedClrTypeCode DetermineExtendedTypeCodeForUseWithSqlDbType(SqlDbType dbType, bool isMultiValued, object value)
  ExtendedClrTypeCode DetermineExtendedTypeCodeFromType(Type clrType)
  ExtendedClrTypeCode DetermineExtendedTypeCode(object value)
  SqlDbType InferSqlDbTypeFromTypeCode(ExtendedClrTypeCode typeCode)
  SqlDbType InferSqlDbTypeFromType(Type type)
  SqlDbType InferSqlDbTypeFromType_Katmai(Type type)
  SqlMetaData SmiExtendedMetaDataToSqlMetaData(SmiExtendedMetaData source)
  SmiExtendedMetaData SqlMetaDataToSmiExtendedMetaData(SqlMetaData source)
  bool IsCompatible(SmiMetaData firstMd, SqlMetaData secondMd)
  SmiExtendedMetaData SmiMetaDataFromDataColumn(DataColumn column, DataTable parent)
  long AdjustMaxLength(SqlDbType dbType, long maxLength)
  SmiExtendedMetaData SmiMetaDataFromSchemaTableRow(DataRow schemaRow)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiEventSink
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiEventSink_Default
Наследуется от: SmiEventSink
Поля:
  SqlErrorCollection _errors
  SqlErrorCollection _warnings
Свойства:
  bool HasMessages
  string ServerVersion
Методы:
  bool get_HasMessages()
  string get_ServerVersion()
  void DispatchMessages()
  SqlException ProcessMessages(bool ignoreWarnings)
  void ProcessMessagesAndThrow()
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiGettersStream
Наследуется от: Stream
Поля:
  SmiEventSink_Default _sink
  ITypedGettersV3 _getters
  int _ordinal
  long _readPosition
  SmiMetaData _metaData
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Flush()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiMetaData
Наследуется от: object
Поля:
  SqlDbType _databaseType
  long _maxLength
  byte _precision
  byte _scale
  long _localeId
  SqlCompareOptions _compareOptions
  bool _isMultiValued
  IList`1<SmiExtendedMetaData> _fieldMetaData
  SmiMetaDataPropertyCollection _extendedProperties
  long UnlimitedMaxLengthIndicator
  long MaxUnicodeCharacters
  long MaxANSICharacters
  long MaxBinaryLength
  int MinPrecision
  int MinScale
  int MaxTimeScale
  DateTime MaxSmallDateTime
  DateTime MinSmallDateTime
  SqlMoney MaxSmallMoney
  SqlMoney MinSmallMoney
  SqlCompareOptions DefaultStringCompareOptions
  long MaxNameLength
  IList`1<SmiExtendedMetaData> s_emptyFieldList
  Byte[] s_maxLenFromPrecision
  Byte[] s_maxVarTimeLenOffsetFromScale
  SmiMetaData DefaultBigInt
  SmiMetaData DefaultBinary
  SmiMetaData DefaultBit
  SmiMetaData DefaultChar_NoCollation
  SmiMetaData DefaultDateTime
  SmiMetaData DefaultDecimal
  SmiMetaData DefaultFloat
  SmiMetaData DefaultImage
  SmiMetaData DefaultInt
  SmiMetaData DefaultMoney
  SmiMetaData DefaultNChar_NoCollation
  SmiMetaData DefaultNText_NoCollation
  SmiMetaData DefaultNVarChar_NoCollation
  SmiMetaData DefaultReal
  SmiMetaData DefaultUniqueIdentifier
  SmiMetaData DefaultSmallDateTime
  SmiMetaData DefaultSmallInt
  SmiMetaData DefaultSmallMoney
  SmiMetaData DefaultText_NoCollation
  SmiMetaData DefaultTimestamp
  SmiMetaData DefaultTinyInt
  SmiMetaData DefaultVarBinary
  SmiMetaData DefaultVarChar_NoCollation
  SmiMetaData DefaultVariant
  SmiMetaData DefaultXml
  SmiMetaData DefaultStructured
  SmiMetaData DefaultDate
  SmiMetaData DefaultTime
  SmiMetaData DefaultDateTime2
  SmiMetaData DefaultDateTimeOffset
  SmiMetaData[] s_defaultValues
Свойства:
  SmiMetaData DefaultNVarChar
  SqlCompareOptions CompareOptions
  long LocaleId
  long MaxLength
  byte Precision
  byte Scale
  SqlDbType SqlDbType
  bool IsMultiValued
  IList`1<SmiExtendedMetaData> FieldMetaData
  SmiMetaDataPropertyCollection ExtendedProperties
Методы:
  SmiMetaData get_DefaultNVarChar()
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions)
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool isMultiValued, IList`1<SmiExtendedMetaData> fieldTypes, SmiMetaDataPropertyCollection extendedProperties)
  SqlCompareOptions get_CompareOptions()
  long get_LocaleId()
  long get_MaxLength()
  byte get_Precision()
  byte get_Scale()
  SqlDbType get_SqlDbType()
  bool get_IsMultiValued()
  IList`1<SmiExtendedMetaData> get_FieldMetaData()
  SmiMetaDataPropertyCollection get_ExtendedProperties()
  bool IsSupportedDbType(SqlDbType dbType)
  SmiMetaData GetDefaultForType(SqlDbType dbType)
  void .ctor(SqlDbType sqlDbType, long maxLength, byte precision, byte scale, SqlCompareOptions compareOptions)
  void SetDefaultsForType(SqlDbType dbType)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiExtendedMetaData
Наследуется от: SmiMetaData
Поля:
  string _name
  string _typeSpecificNamePart1
  string _typeSpecificNamePart2
  string _typeSpecificNamePart3
Свойства:
  string Name
  string TypeSpecificNamePart1
  string TypeSpecificNamePart2
  string TypeSpecificNamePart3
Методы:
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, string name, string typeSpecificNamePart1, string typeSpecificNamePart2, string typeSpecificNamePart3)
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool isMultiValued, IList`1<SmiExtendedMetaData> fieldMetaData, SmiMetaDataPropertyCollection extendedProperties, string name, string typeSpecificNamePart1, string typeSpecificNamePart2, string typeSpecificNamePart3)
  string get_Name()
  string get_TypeSpecificNamePart1()
  string get_TypeSpecificNamePart2()
  string get_TypeSpecificNamePart3()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiParameterMetaData
Наследуется от: SmiExtendedMetaData
Поля:
  ParameterDirection _direction
Свойства:
  ParameterDirection Direction
Методы:
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool isMultiValued, IList`1<SmiExtendedMetaData> fieldMetaData, SmiMetaDataPropertyCollection extendedProperties, string name, string typeSpecificNamePart1, string typeSpecificNamePart2, string typeSpecificNamePart3, ParameterDirection direction)
  ParameterDirection get_Direction()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiStorageMetaData
Наследуется от: SmiExtendedMetaData
Поля:
  bool _allowsDBNull
  string _serverName
  string _catalogName
  string _schemaName
  string _tableName
  string _columnName
  SqlBoolean _isKey
  bool _isIdentity
  bool _isColumnSet
Свойства:
  SqlBoolean IsKey
Методы:
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool isMultiValued, IList`1<SmiExtendedMetaData> fieldMetaData, SmiMetaDataPropertyCollection extendedProperties, string name, string typeSpecificNamePart1, string typeSpecificNamePart2, string typeSpecificNamePart3, bool allowsDBNull, string serverName, string catalogName, string schemaName, string tableName, string columnName, SqlBoolean isKey, bool isIdentity, bool isColumnSet)
  SqlBoolean get_IsKey()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiQueryMetaData
Наследуется от: SmiStorageMetaData
Поля:
  bool _isReadOnly
  SqlBoolean _isExpression
  SqlBoolean _isAliased
  SqlBoolean _isHidden
Свойства:
Методы:
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool isMultiValued, IList`1<SmiExtendedMetaData> fieldMetaData, SmiMetaDataPropertyCollection extendedProperties, string name, string typeSpecificNamePart1, string typeSpecificNamePart2, string typeSpecificNamePart3, bool allowsDBNull, string serverName, string catalogName, string schemaName, string tableName, string columnName, SqlBoolean isKey, bool isIdentity, bool isReadOnly, SqlBoolean isExpression, SqlBoolean isAliased, SqlBoolean isHidden)
  void .ctor(SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool isMultiValued, IList`1<SmiExtendedMetaData> fieldMetaData, SmiMetaDataPropertyCollection extendedProperties, string name, string typeSpecificNamePart1, string typeSpecificNamePart2, string typeSpecificNamePart3, bool allowsDBNull, string serverName, string catalogName, string schemaName, string tableName, string columnName, SqlBoolean isKey, bool isIdentity, bool isColumnSet, bool isReadOnly, SqlBoolean isExpression, SqlBoolean isAliased, SqlBoolean isHidden)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiPropertySelector
Наследуется от: Enum
Поля:
  int value__
  SmiPropertySelector DefaultFields
  SmiPropertySelector SortOrder
  SmiPropertySelector UniqueKey
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiMetaDataPropertyCollection
Наследуется от: object
Поля:
  int SelectorCount
  SmiMetaDataProperty[] _properties
  bool _isReadOnly
  SmiDefaultFieldsProperty s_emptyDefaultFields
  SmiOrderProperty s_emptySortOrder
  SmiUniqueKeyProperty s_emptyUniqueKey
  SmiMetaDataPropertyCollection EmptyInstance
Свойства:
  SmiMetaDataProperty Item
  bool IsReadOnly
Методы:
  SmiMetaDataPropertyCollection CreateEmptyInstance()
  void .ctor()
  SmiMetaDataProperty get_Item(SmiPropertySelector key)
  void set_Item(SmiPropertySelector key, SmiMetaDataProperty value)
  bool get_IsReadOnly()
  void SetReadOnly()
  void EnsureWritable()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiMetaDataProperty
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiUniqueKeyProperty
Наследуется от: SmiMetaDataProperty
Поля:
  IList`1<bool> _columns
Свойства:
  bool Item
Методы:
  void .ctor(IList`1<bool> columnIsKey)
  bool get_Item(int ordinal)
  void CheckCount(int countToMatch)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiOrderProperty
Наследуется от: SmiMetaDataProperty
Поля:
  IList`1<SmiColumnOrder> _columns
Свойства:
  SmiColumnOrder Item
Методы:
  void .ctor(IList`1<SmiColumnOrder> columnOrders)
  SmiColumnOrder get_Item(int ordinal)
  void CheckCount(int countToMatch)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiDefaultFieldsProperty
Наследуется от: SmiMetaDataProperty
Поля:
  IList`1<bool> _defaults
Свойства:
  bool Item
Методы:
  void .ctor(IList`1<bool> defaultFields)
  bool get_Item(int ordinal)
  void CheckCount(int countToMatch)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiRecordBuffer
Наследуется от: SmiTypedGetterSetter
Поля:
Свойства:
  bool CanGet
  bool CanSet
Методы:
  bool get_CanGet()
  bool get_CanSet()
  void Dispose()
  bool IsDBNull(int ordinal)
  SqlDbType GetVariantType(int ordinal)
  bool GetBoolean(int ordinal)
  byte GetByte(int ordinal)
  long GetBytes(int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  char GetChar(int ordinal)
  long GetChars(int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  short GetInt16(int ordinal)
  int GetInt32(int ordinal)
  long GetInt64(int ordinal)
  float GetFloat(int ordinal)
  double GetDouble(int ordinal)
  string GetString(int ordinal)
  decimal GetDecimal(int ordinal)
  DateTime GetDateTime(int ordinal)
  Guid GetGuid(int ordinal)
  SqlBoolean GetSqlBoolean(int ordinal)
  SqlByte GetSqlByte(int ordinal)
  SqlInt16 GetSqlInt16(int ordinal)
  SqlInt32 GetSqlInt32(int ordinal)
  SqlInt64 GetSqlInt64(int ordinal)
  SqlSingle GetSqlSingle(int ordinal)
  SqlDouble GetSqlDouble(int ordinal)
  SqlMoney GetSqlMoney(int ordinal)
  SqlDateTime GetSqlDateTime(int ordinal)
  SqlDecimal GetSqlDecimal(int ordinal)
  SqlString GetSqlString(int ordinal)
  SqlBinary GetSqlBinary(int ordinal)
  SqlGuid GetSqlGuid(int ordinal)
  SqlChars GetSqlChars(int ordinal)
  SqlBytes GetSqlBytes(int ordinal)
  SqlXml GetSqlXml(int ordinal)
  SqlXml GetSqlXmlRef(int ordinal)
  SqlBytes GetSqlBytesRef(int ordinal)
  SqlChars GetSqlCharsRef(int ordinal)
  void SetDBNull(int ordinal)
  void SetBoolean(int ordinal, bool value)
  void SetByte(int ordinal, byte value)
  void SetBytes(int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetChar(int ordinal, char value)
  void SetChars(int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetInt16(int ordinal, short value)
  void SetInt32(int ordinal, int value)
  void SetInt64(int ordinal, long value)
  void SetFloat(int ordinal, float value)
  void SetDouble(int ordinal, double value)
  void SetString(int ordinal, string value)
  void SetString(int ordinal, string value, int offset)
  void SetDecimal(int ordinal, decimal value)
  void SetDateTime(int ordinal, DateTime value)
  void SetGuid(int ordinal, Guid value)
  void SetSqlBoolean(int ordinal, SqlBoolean value)
  void SetSqlByte(int ordinal, SqlByte value)
  void SetSqlInt16(int ordinal, SqlInt16 value)
  void SetSqlInt32(int ordinal, SqlInt32 value)
  void SetSqlInt64(int ordinal, SqlInt64 value)
  void SetSqlSingle(int ordinal, SqlSingle value)
  void SetSqlDouble(int ordinal, SqlDouble value)
  void SetSqlMoney(int ordinal, SqlMoney value)
  void SetSqlDateTime(int ordinal, SqlDateTime value)
  void SetSqlDecimal(int ordinal, SqlDecimal value)
  void SetSqlString(int ordinal, SqlString value)
  void SetSqlString(int ordinal, SqlString value, int offset)
  void SetSqlBinary(int ordinal, SqlBinary value)
  void SetSqlBinary(int ordinal, SqlBinary value, int offset)
  void SetSqlGuid(int ordinal, SqlGuid value)
  void SetSqlChars(int ordinal, SqlChars value)
  void SetSqlChars(int ordinal, SqlChars value, int offset)
  void SetSqlBytes(int ordinal, SqlBytes value)
  void SetSqlBytes(int ordinal, SqlBytes value, int offset)
  void SetSqlXml(int ordinal, SqlXml value)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiSettersStream
Наследуется от: Stream
Поля:
  SmiEventSink_Default _sink
  ITypedSettersV3 _setters
  int _ordinal
  long _lengthWritten
  SmiMetaData _metaData
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Flush()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiTypedGetterSetter
Наследуется от: object
Поля:
Свойства:
  bool CanGet
  bool CanSet
Методы:
  bool get_CanGet()
  bool get_CanSet()
  bool IsDBNull(SmiEventSink sink, int ordinal)
  SmiMetaData GetVariantType(SmiEventSink sink, int ordinal)
  bool GetBoolean(SmiEventSink sink, int ordinal)
  byte GetByte(SmiEventSink sink, int ordinal)
  long GetBytesLength(SmiEventSink sink, int ordinal)
  int GetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  long GetCharsLength(SmiEventSink sink, int ordinal)
  int GetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  string GetString(SmiEventSink sink, int ordinal)
  short GetInt16(SmiEventSink sink, int ordinal)
  int GetInt32(SmiEventSink sink, int ordinal)
  long GetInt64(SmiEventSink sink, int ordinal)
  float GetSingle(SmiEventSink sink, int ordinal)
  double GetDouble(SmiEventSink sink, int ordinal)
  SqlDecimal GetSqlDecimal(SmiEventSink sink, int ordinal)
  DateTime GetDateTime(SmiEventSink sink, int ordinal)
  Guid GetGuid(SmiEventSink sink, int ordinal)
  TimeSpan GetTimeSpan(SmiEventSink sink, int ordinal)
  DateTimeOffset GetDateTimeOffset(SmiEventSink sink, int ordinal)
  SmiTypedGetterSetter GetTypedGetterSetter(SmiEventSink sink, int ordinal)
  void SetDBNull(SmiEventSink sink, int ordinal)
  void SetBoolean(SmiEventSink sink, int ordinal, bool value)
  void SetByte(SmiEventSink sink, int ordinal, byte value)
  int SetBytes(SmiEventSink sink, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetBytesLength(SmiEventSink sink, int ordinal, long length)
  int SetChars(SmiEventSink sink, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetCharsLength(SmiEventSink sink, int ordinal, long length)
  void SetString(SmiEventSink sink, int ordinal, string value, int offset, int length)
  void SetInt16(SmiEventSink sink, int ordinal, short value)
  void SetInt32(SmiEventSink sink, int ordinal, int value)
  void SetInt64(SmiEventSink sink, int ordinal, long value)
  void SetSingle(SmiEventSink sink, int ordinal, float value)
  void SetDouble(SmiEventSink sink, int ordinal, double value)
  void SetSqlDecimal(SmiEventSink sink, int ordinal, SqlDecimal value)
  void SetDateTime(SmiEventSink sink, int ordinal, DateTime value)
  void SetGuid(SmiEventSink sink, int ordinal, Guid value)
  void SetTimeSpan(SmiEventSink sink, int ordinal, TimeSpan value)
  void SetDateTimeOffset(SmiEventSink sink, int ordinal, DateTimeOffset value)
  void SetVariantMetaData(SmiEventSink sink, int ordinal, SmiMetaData metaData)
  void NewElement(SmiEventSink sink)
  void EndElements(SmiEventSink sink)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiXetterAccessMap
Наследуется от: object
Поля:
  bool X
  bool _
  Boolean[0...,0...] s_isSetterAccessValid
Свойства:
Методы:
  bool IsSetterAccessValid(SmiMetaData metaData, SmiXetterTypeCode xetterType)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SmiXetterTypeCode
Наследуется от: Enum
Поля:
  int value__
  SmiXetterTypeCode XetBoolean
  SmiXetterTypeCode XetByte
  SmiXetterTypeCode XetBytes
  SmiXetterTypeCode XetChars
  SmiXetterTypeCode XetString
  SmiXetterTypeCode XetInt16
  SmiXetterTypeCode XetInt32
  SmiXetterTypeCode XetInt64
  SmiXetterTypeCode XetSingle
  SmiXetterTypeCode XetDouble
  SmiXetterTypeCode XetSqlDecimal
  SmiXetterTypeCode XetDateTime
  SmiXetterTypeCode XetGuid
  SmiXetterTypeCode GetVariantMetaData
  SmiXetterTypeCode GetXet
  SmiXetterTypeCode XetTime
  SmiXetterTypeCode XetTimeSpan
  SmiXetterTypeCode XetDateTimeOffset
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlDataRecord
Наследуется от: object
Поля:
  SmiRecordBuffer _recordBuffer
  SmiExtendedMetaData[] _columnSmiMetaData
  SmiEventSink_Default _eventSink
  SqlMetaData[] _columnMetaData
  FieldNameLookup _fieldNameLookup
  bool _usesStringStorageForXml
  SmiMetaData s_maxNVarCharForXml
Свойства:
  int FieldCount
  object Item
  object Item
  SmiRecordBuffer RecordBuffer
Методы:
  int get_FieldCount()
  string GetName(int ordinal)
  string GetDataTypeName(int ordinal)
  Type GetFieldType(int ordinal)
  object GetValue(int ordinal)
  int GetValues(Object[] values)
  int GetOrdinal(string name)
  object get_Item(int ordinal)
  object get_Item(string name)
  bool GetBoolean(int ordinal)
  byte GetByte(int ordinal)
  long GetBytes(int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  char GetChar(int ordinal)
  long GetChars(int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  Guid GetGuid(int ordinal)
  short GetInt16(int ordinal)
  int GetInt32(int ordinal)
  long GetInt64(int ordinal)
  float GetFloat(int ordinal)
  double GetDouble(int ordinal)
  string GetString(int ordinal)
  decimal GetDecimal(int ordinal)
  DateTime GetDateTime(int ordinal)
  DateTimeOffset GetDateTimeOffset(int ordinal)
  TimeSpan GetTimeSpan(int ordinal)
  bool IsDBNull(int ordinal)
  SqlMetaData GetSqlMetaData(int ordinal)
  Type GetSqlFieldType(int ordinal)
  object GetSqlValue(int ordinal)
  int GetSqlValues(Object[] values)
  SqlBinary GetSqlBinary(int ordinal)
  SqlBytes GetSqlBytes(int ordinal)
  SqlXml GetSqlXml(int ordinal)
  SqlBoolean GetSqlBoolean(int ordinal)
  SqlByte GetSqlByte(int ordinal)
  SqlChars GetSqlChars(int ordinal)
  SqlInt16 GetSqlInt16(int ordinal)
  SqlInt32 GetSqlInt32(int ordinal)
  SqlInt64 GetSqlInt64(int ordinal)
  SqlSingle GetSqlSingle(int ordinal)
  SqlDouble GetSqlDouble(int ordinal)
  SqlMoney GetSqlMoney(int ordinal)
  SqlDateTime GetSqlDateTime(int ordinal)
  SqlDecimal GetSqlDecimal(int ordinal)
  SqlString GetSqlString(int ordinal)
  SqlGuid GetSqlGuid(int ordinal)
  int SetValues(Object[] values)
  void SetValue(int ordinal, object value)
  void SetBoolean(int ordinal, bool value)
  void SetByte(int ordinal, byte value)
  void SetBytes(int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetChar(int ordinal, char value)
  void SetChars(int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetInt16(int ordinal, short value)
  void SetInt32(int ordinal, int value)
  void SetInt64(int ordinal, long value)
  void SetFloat(int ordinal, float value)
  void SetDouble(int ordinal, double value)
  void SetString(int ordinal, string value)
  void SetDecimal(int ordinal, decimal value)
  void SetDateTime(int ordinal, DateTime value)
  void SetTimeSpan(int ordinal, TimeSpan value)
  void SetDateTimeOffset(int ordinal, DateTimeOffset value)
  void SetDBNull(int ordinal)
  void SetGuid(int ordinal, Guid value)
  void SetSqlBoolean(int ordinal, SqlBoolean value)
  void SetSqlByte(int ordinal, SqlByte value)
  void SetSqlInt16(int ordinal, SqlInt16 value)
  void SetSqlInt32(int ordinal, SqlInt32 value)
  void SetSqlInt64(int ordinal, SqlInt64 value)
  void SetSqlSingle(int ordinal, SqlSingle value)
  void SetSqlDouble(int ordinal, SqlDouble value)
  void SetSqlMoney(int ordinal, SqlMoney value)
  void SetSqlDateTime(int ordinal, SqlDateTime value)
  void SetSqlXml(int ordinal, SqlXml value)
  void SetSqlDecimal(int ordinal, SqlDecimal value)
  void SetSqlString(int ordinal, SqlString value)
  void SetSqlBinary(int ordinal, SqlBinary value)
  void SetSqlGuid(int ordinal, SqlGuid value)
  void SetSqlChars(int ordinal, SqlChars value)
  void SetSqlBytes(int ordinal, SqlBytes value)
  void .ctor(SqlMetaData[] metaData)
  void .ctor(SmiRecordBuffer recordBuffer, SmiExtendedMetaData[] metaData)
  SmiRecordBuffer get_RecordBuffer()
  SqlMetaData[] InternalGetMetaData()
  SmiExtendedMetaData[] InternalGetSmiMetaData()
  SmiExtendedMetaData GetSmiMetaData(int ordinal)
  void ThrowIfInvalidOrdinal(int ordinal)
  void EnsureSubclassOverride()
  IDataReader GetData(int i)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlRecordBuffer
Наследуется от: object
Поля:
  bool _isNull
  StorageType _type
  Storage _value
  object _object
  SmiMetaData _metadata
  bool _isMetaSet
Свойства:
  bool IsNull
  bool Boolean
  byte Byte
  DateTime DateTime
  DateTimeOffset DateTimeOffset
  double Double
  Guid Guid
  short Int16
  int Int32
  long Int64
  float Single
  string String
  SqlDecimal SqlDecimal
  TimeSpan TimeSpan
  long BytesLength
  long CharsLength
  SmiMetaData VariantType
Методы:
  void .ctor(SmiMetaData metaData)
  bool get_IsNull()
  bool get_Boolean()
  void set_Boolean(bool value)
  byte get_Byte()
  void set_Byte(byte value)
  DateTime get_DateTime()
  void set_DateTime(DateTime value)
  DateTimeOffset get_DateTimeOffset()
  void set_DateTimeOffset(DateTimeOffset value)
  double get_Double()
  void set_Double(double value)
  Guid get_Guid()
  void set_Guid(Guid value)
  short get_Int16()
  void set_Int16(short value)
  int get_Int32()
  void set_Int32(int value)
  long get_Int64()
  void set_Int64(long value)
  float get_Single()
  void set_Single(float value)
  string get_String()
  void set_String(string value)
  SqlDecimal get_SqlDecimal()
  void set_SqlDecimal(SqlDecimal value)
  TimeSpan get_TimeSpan()
  void set_TimeSpan(TimeSpan value)
  long get_BytesLength()
  void set_BytesLength(long value)
  long get_CharsLength()
  void set_CharsLength(long value)
  SmiMetaData get_VariantType()
  void set_VariantType(SmiMetaData value)
  int GetBytes(long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  int GetChars(long fieldOffset, Char[] buffer, int bufferOffset, int length)
  int SetBytes(long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  int SetChars(long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetNull()
  void ConvertXmlStringToByteArray()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.ValueUtilsSmi
Наследуется от: object
Поля:
  int __maxByteChunkSize
  int __maxCharChunkSize
  int NoLengthLimit
  int constBinBufferSize
  int constTextBufferSize
  Object[] s_typeSpecificNullForSqlValue
  DateTime s_dtSmallMax
  DateTime s_dtSmallMin
  TimeSpan s_timeMin
  TimeSpan s_timeMax
  bool X
  bool _
  Boolean[0...,0...] s_canAccessGetterDirectly
  Boolean[0...,0...] s_canAccessSetterDirectly
Свойства:
Методы:
  bool IsDBNull(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  bool GetBoolean(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  byte GetByte(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  long GetBytesConversion(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData, long fieldOffset, Byte[] buffer, int bufferOffset, int length, bool throwOnNull)
  long GetBytes(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiExtendedMetaData metaData, long fieldOffset, Byte[] buffer, int bufferOffset, int length, bool throwOnNull)
  long GetBytesInternal(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData, long fieldOffset, Byte[] buffer, int bufferOffset, int length, bool throwOnNull)
  long GetChars(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  DateTime GetDateTime(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  DateTimeOffset GetDateTimeOffset(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData, bool gettersSupportKatmaiDateTime)
  DateTimeOffset GetDateTimeOffset(SmiEventSink_Default sink, SmiTypedGetterSetter getters, int ordinal, SmiMetaData metaData)
  decimal GetDecimal(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  double GetDouble(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  Guid GetGuid(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  short GetInt16(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  int GetInt32(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  long GetInt64(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  float GetSingle(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlBinary GetSqlBinary(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlBoolean GetSqlBoolean(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlByte GetSqlByte(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlBytes GetSqlBytes(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlChars GetSqlChars(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlDateTime GetSqlDateTime(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlDecimal GetSqlDecimal(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlDouble GetSqlDouble(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlGuid GetSqlGuid(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlInt16 GetSqlInt16(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlInt32 GetSqlInt32(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlInt64 GetSqlInt64(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlMoney GetSqlMoney(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlSingle GetSqlSingle(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlString GetSqlString(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  SqlXml GetSqlXml(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  string GetString(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  TimeSpan GetTimeSpan(SmiEventSink_Default sink, SmiTypedGetterSetter getters, int ordinal, SmiMetaData metaData)
  object GetValue200(SmiEventSink_Default sink, SmiTypedGetterSetter getters, int ordinal, SmiMetaData metaData)
  object GetValue(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  object GetSqlValue200(SmiEventSink_Default sink, SmiTypedGetterSetter getters, int ordinal, SmiMetaData metaData)
  object GetSqlValue(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  void SetDBNull(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, bool value)
  void SetBoolean(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, bool value)
  void SetByte(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, byte value)
  long SetBytes(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  long SetBytesLength(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, long length)
  long SetChars(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetDateTime(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTime value)
  void SetDateTimeOffset(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTimeOffset value)
  void SetDecimal(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, decimal value)
  void SetDouble(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, double value)
  void SetGuid(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, Guid value)
  void SetInt16(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, short value)
  void SetInt32(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, int value)
  void SetInt64(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, long value)
  void SetSingle(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, float value)
  void SetSqlBinary(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlBinary value)
  void SetSqlBoolean(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlBoolean value)
  void SetSqlByte(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlByte value)
  void SetSqlBytes(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlBytes value)
  void SetSqlChars(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlChars value)
  void SetSqlDateTime(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlDateTime value)
  void SetSqlDecimal(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlDecimal value)
  void SetSqlDouble(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlDouble value)
  void SetSqlGuid(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlGuid value)
  void SetSqlInt16(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlInt16 value)
  void SetSqlInt32(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlInt32 value)
  void SetSqlInt64(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlInt64 value)
  void SetSqlMoney(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlMoney value)
  void SetSqlSingle(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlSingle value)
  void SetSqlString(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlString value)
  void SetSqlXml(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlXml value)
  void SetString(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, string value)
  void SetTimeSpan(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, TimeSpan value)
  void SetCompatibleValue(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, object value, ExtendedClrTypeCode typeCode, int offset)
  void SetCompatibleValueV200(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, object value, ExtendedClrTypeCode typeCode, int offset, int length, ParameterPeekAheadValue peekAhead, StorageType storageType)
  void SetCompatibleValueV200(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, object value, ExtendedClrTypeCode typeCode, int offset, int length, ParameterPeekAheadValue peekAhead)
  void SetDataTable_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, DataTable value)
  void FillCompatibleITypedSettersFromReader(SmiEventSink_Default sink, ITypedSettersV3 setters, SmiMetaData[] metaData, SqlDataReader reader)
  void FillCompatibleSettersFromReader(SmiEventSink_Default sink, SmiTypedGetterSetter setters, IList`1<SmiExtendedMetaData> metaData, DbDataReader reader)
  void FillCompatibleSettersFromRecord(SmiEventSink_Default sink, SmiTypedGetterSetter setters, SmiMetaData[] metaData, SqlDataRecord record, SmiDefaultFieldsProperty useDefaultValues)
  Stream CopyIntoNewSmiScratchStream(Stream source, SmiEventSink_Default sink)
  decimal GetDecimal_PossiblyMoney(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, SmiMetaData metaData)
  void SetDecimal_PossiblyMoney(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, decimal value)
  void VerifyDateTimeRange(SqlDbType dbType, DateTime value)
  void VerifyTimeRange(SqlDbType dbType, TimeSpan value)
  void SetDateTime_Checked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTime value)
  void SetTimeSpan_Checked(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, TimeSpan value)
  void SetSqlDateTime_Checked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlDateTime value)
  void SetDateTime2_Checked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTime value)
  void SetDate_Checked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTime value)
  void SetSqlMoney_Checked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlMoney value)
  void SetByteArray_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, Byte[] buffer, int offset)
  void SetCharArray_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, Char[] buffer, int offset)
  void SetSqlBinary_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlBinary value, int offset)
  void SetBytes_FromRecord(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlDataRecord record, int offset)
  void SetBytes_FromReader(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, DbDataReader reader, int offset)
  void SetSqlBytes_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlBytes value, int offset)
  void SetChars_FromRecord(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlDataRecord record, int offset)
  void SetCharsOrString_FromReader(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, DbDataReader reader, int offset)
  void SetChars_FromReader(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, DbDataReader reader, int offset)
  void SetString_FromReader(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, DbDataReader reader, int offset)
  void SetSqlChars_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlChars value, int offset)
  void SetSqlString_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlString value, int offset)
  void SetString_LengthChecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, string value, int offset)
  void ThrowIfInvalidSetterAccess(SmiMetaData metaData, ExtendedClrTypeCode setterTypeCode)
  void ThrowIfITypedGettersIsNull(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  bool CanAccessGetterDirectly(SmiMetaData metaData, ExtendedClrTypeCode setterTypeCode)
  bool CanAccessSetterDirectly(SmiMetaData metaData, ExtendedClrTypeCode setterTypeCode)
  long PositiveMin(long first, long second)
  int CheckXetParameters(SqlDbType dbType, long maxLength, long actualLength, long fieldOffset, int bufferLength, int bufferOffset, int length)
  bool IsDBNull_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  bool GetBoolean_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  byte GetByte_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  Byte[] GetByteArray_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  int GetBytes_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  long GetBytesLength_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  Char[] GetCharArray_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  int GetChars_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  long GetCharsLength_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  DateTime GetDateTime_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  DateTimeOffset GetDateTimeOffset_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter getters, int ordinal)
  double GetDouble_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  Guid GetGuid_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  short GetInt16_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  int GetInt32_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  long GetInt64_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  float GetSingle_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  SqlBinary GetSqlBinary_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  SqlDecimal GetSqlDecimal_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  SqlMoney GetSqlMoney_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  SqlXml GetSqlXml_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  string GetString_Unchecked(SmiEventSink_Default sink, ITypedGettersV3 getters, int ordinal)
  TimeSpan GetTimeSpan_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter getters, int ordinal)
  void SetBoolean_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, bool value)
  void SetByteArray_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, Byte[] buffer, int bufferOffset, int length)
  void SetStream_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metadata, StreamDataFeed feed)
  void SetTextReader_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metadata, TextDataFeed feed)
  void SetByte_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, byte value)
  int SetBytes_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, long fieldOffset, Byte[] buffer, int bufferOffset, int length)
  void SetCharArray_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, Char[] buffer, int bufferOffset, int length)
  int SetChars_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, long fieldOffset, Char[] buffer, int bufferOffset, int length)
  void SetDBNull_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal)
  void SetDecimal_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, decimal value)
  void SetDateTime_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, DateTime value)
  void SetDateTime2_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTime value)
  void SetDate_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, DateTime value)
  void SetTimeSpan_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, TimeSpan value)
  void SetDateTimeOffset_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, DateTimeOffset value)
  void SetDouble_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, double value)
  void SetGuid_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, Guid value)
  void SetInt16_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, short value)
  void SetInt32_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, int value)
  void SetInt64_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, long value)
  void SetSingle_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, float value)
  void SetSqlBinary_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlBinary value, int offset, int length)
  void SetSqlBoolean_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlBoolean value)
  void SetSqlByte_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlByte value)
  void SetSqlBytes_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlBytes value, int offset, long length)
  void SetSqlChars_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlChars value, int offset, int length)
  void SetSqlDateTime_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlDateTime value)
  void SetSqlDecimal_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlDecimal value)
  void SetSqlDouble_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlDouble value)
  void SetSqlGuid_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlGuid value)
  void SetSqlInt16_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlInt16 value)
  void SetSqlInt32_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlInt32 value)
  void SetSqlInt64_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlInt64 value)
  void SetSqlMoney_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlMoney value)
  void SetSqlSingle_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlSingle value)
  void SetSqlString_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SmiMetaData metaData, SqlString value, int offset, int length)
  void SetSqlXml_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, SqlXml value)
  void SetXmlReader_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, XmlReader xmlReader)
  void SetString_Unchecked(SmiEventSink_Default sink, ITypedSettersV3 setters, int ordinal, string value, int offset, int length)
  void SetDbDataReader_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, DbDataReader value)
  void SetIEnumerableOfSqlDataRecord_Unchecked(SmiEventSink_Default sink, SmiTypedGetterSetter setters, int ordinal, SmiMetaData metaData, IEnumerable`1<SqlDataRecord> value, ParameterPeekAheadValue peekAhead)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlMetaData
Наследуется от: object
Поля:
  string _strName
  long _lMaxLength
  SqlDbType _sqlDbType
  byte _bPrecision
  byte _bScale
  long _lLocale
  SqlCompareOptions _eCompareOptions
  string _xmlSchemaCollectionDatabase
  string _xmlSchemaCollectionOwningSchema
  string _xmlSchemaCollectionName
  bool _bPartialLength
  bool _useServerDefault
  bool _isUniqueKey
  SortOrder _columnSortOrder
  int _sortOrdinal
  long x_lMax
  long x_lServerMaxUnicode
  long x_lServerMaxANSI
  long x_lServerMaxBinary
  bool x_defaultUseServerDefault
  bool x_defaultIsUniqueKey
  SortOrder x_defaultColumnSortOrder
  int x_defaultSortOrdinal
  SqlCompareOptions x_eDefaultStringCompareOptions
  Byte[] s_maxLenFromPrecision
  byte MaxTimeScale
  Byte[] s_maxVarTimeLenOffsetFromScale
  DateTime s_dtSmallMax
  DateTime s_dtSmallMin
  SqlMoney s_smSmallMax
  SqlMoney s_smSmallMin
  TimeSpan s_timeMin
  TimeSpan s_timeMax
  Int64[] s_unitTicksFromScale
  SqlMetaData[] sxm_rgDefaults
Свойства:
  SqlCompareOptions CompareOptions
  bool IsUniqueKey
  long LocaleId
  long Max
  long MaxLength
  string Name
  byte Precision
  byte Scale
  SortOrder SortOrder
  int SortOrdinal
  SqlDbType SqlDbType
  string TypeName
  bool UseServerDefault
  string XmlSchemaCollectionDatabase
  string XmlSchemaCollectionName
  string XmlSchemaCollectionOwningSchema
  bool IsPartialLength
  DbType DbType
  Type Type
Методы:
  void .ctor(string name, SqlDbType dbType)
  void .ctor(string name, SqlDbType dbType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void .ctor(string name, SqlDbType dbType, long maxLength)
  void .ctor(string name, SqlDbType dbType, long maxLength, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void .ctor(string name, SqlDbType dbType, byte precision, byte scale)
  void .ctor(string name, SqlDbType dbType, byte precision, byte scale, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void .ctor(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions)
  void .ctor(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void .ctor(string name, SqlDbType dbType, string database, string owningSchema, string objectName, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void .ctor(string name, SqlDbType dbType, long maxLength, byte precision, byte scale, long locale, SqlCompareOptions compareOptions, Type userDefinedType)
  void .ctor(string name, SqlDbType dbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, Type userDefinedType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void .ctor(string name, SqlDbType dbType, string database, string owningSchema, string objectName)
  void .ctor(string name, SqlDbType sqlDBType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName, bool partialLength)
  void .ctor(string name, SqlDbType sqlDbType, long maxLength, byte precision, byte scale, long localeId, SqlCompareOptions compareOptions, bool partialLength)
  SqlCompareOptions get_CompareOptions()
  bool get_IsUniqueKey()
  long get_LocaleId()
  long get_Max()
  long get_MaxLength()
  string get_Name()
  byte get_Precision()
  byte get_Scale()
  SortOrder get_SortOrder()
  int get_SortOrdinal()
  SqlDbType get_SqlDbType()
  string get_TypeName()
  bool get_UseServerDefault()
  string get_XmlSchemaCollectionDatabase()
  string get_XmlSchemaCollectionName()
  string get_XmlSchemaCollectionOwningSchema()
  bool get_IsPartialLength()
  void Construct(string name, SqlDbType dbType, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void Construct(string name, SqlDbType dbType, long maxLength, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void Construct(string name, SqlDbType dbType, long maxLength, long locale, SqlCompareOptions compareOptions, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void Construct(string name, SqlDbType dbType, byte precision, byte scale, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void Construct(string name, SqlDbType dbType, string database, string owningSchema, string objectName, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  void AssertNameIsValid(string name)
  void ValidateSortOrder(SortOrder columnSortOrder, int sortOrdinal)
  short Adjust(short value)
  int Adjust(int value)
  long Adjust(long value)
  float Adjust(float value)
  double Adjust(double value)
  string Adjust(string value)
  decimal Adjust(decimal value)
  DateTime Adjust(DateTime value)
  Guid Adjust(Guid value)
  SqlBoolean Adjust(SqlBoolean value)
  SqlByte Adjust(SqlByte value)
  SqlInt16 Adjust(SqlInt16 value)
  SqlInt32 Adjust(SqlInt32 value)
  SqlInt64 Adjust(SqlInt64 value)
  SqlSingle Adjust(SqlSingle value)
  SqlDouble Adjust(SqlDouble value)
  SqlMoney Adjust(SqlMoney value)
  SqlDateTime Adjust(SqlDateTime value)
  SqlDecimal Adjust(SqlDecimal value)
  SqlString Adjust(SqlString value)
  SqlBinary Adjust(SqlBinary value)
  SqlGuid Adjust(SqlGuid value)
  SqlChars Adjust(SqlChars value)
  SqlBytes Adjust(SqlBytes value)
  SqlXml Adjust(SqlXml value)
  TimeSpan Adjust(TimeSpan value)
  DateTimeOffset Adjust(DateTimeOffset value)
  object Adjust(object value)
  SqlMetaData InferFromValue(object value, string name)
  bool Adjust(bool value)
  byte Adjust(byte value)
  Byte[] Adjust(Byte[] value)
  char Adjust(char value)
  Char[] Adjust(Char[] value)
  SqlMetaData GetPartialLengthMetaData(SqlMetaData md)
  void ThrowInvalidType()
  void VerifyDateTimeRange(DateTime value)
  void VerifyMoneyRange(SqlMoney value)
  SqlDecimal InternalAdjustSqlDecimal(SqlDecimal value)
  void VerifyTimeRange(TimeSpan value)
  long InternalAdjustTimeTicks(long ticks)
  byte InferScaleFromTimeTicks(long ticks)
  void SetDefaultsForType(SqlDbType dbType)
  void ThrowIfUdt(SqlDbType dbType)
  void .ctor(string name, SqlDbType dbType, Type userDefinedType)
  DbType get_DbType()
  void .cctor()
  void .ctor(string name, SqlDbType dbType, Type userDefinedType, string serverTypeName)
  void .ctor(string name, SqlDbType dbType, Type userDefinedType, string serverTypeName, bool useServerDefault, bool isUniqueKey, SortOrder columnSortOrder, int sortOrdinal)
  Type get_Type()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlTriggerContext
Наследуется от: object
Поля:
  TriggerAction _triggerAction
  Boolean[] _columnsUpdated
  SqlXml _eventInstanceData
Свойства:
  int ColumnCount
  SqlXml EventData
  TriggerAction TriggerAction
Методы:
  void .ctor(TriggerAction triggerAction, Boolean[] columnsUpdated, SqlXml eventInstanceData)
  int get_ColumnCount()
  SqlXml get_EventData()
  TriggerAction get_TriggerAction()
  bool IsUpdatedColumn(int columnOrdinal)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.IBinarySerialize
Поля:
Свойства:
Методы:
  void Read(BinaryReader r)
  void Write(BinaryWriter w)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlFacetAttribute
Наследуется от: Attribute
Поля:
  bool m_IsFixedLength
  int m_MaxSize
  int m_Scale
  int m_Precision
  bool m_IsNullable
Свойства:
  bool IsFixedLength
  int MaxSize
  int Precision
  int Scale
  bool IsNullable
Методы:
  bool get_IsFixedLength()
  void set_IsFixedLength(bool value)
  int get_MaxSize()
  void set_MaxSize(int value)
  int get_Precision()
  void set_Precision(int value)
  int get_Scale()
  void set_Scale(int value)
  bool get_IsNullable()
  void set_IsNullable(bool value)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.DataAccessKind
Наследуется от: Enum
Поля:
  int value__
  DataAccessKind None
  DataAccessKind Read
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SystemDataAccessKind
Наследуется от: Enum
Поля:
  int value__
  SystemDataAccessKind None
  SystemDataAccessKind Read
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlFunctionAttribute
Наследуется от: Attribute
Поля:
  bool m_fDeterministic
  DataAccessKind m_eDataAccess
  SystemDataAccessKind m_eSystemDataAccess
  bool m_fPrecise
  string m_fName
  string m_fTableDefinition
  string m_FillRowMethodName
Свойства:
  bool IsDeterministic
  DataAccessKind DataAccess
  SystemDataAccessKind SystemDataAccess
  bool IsPrecise
  string Name
  string TableDefinition
  string FillRowMethodName
Методы:
  void .ctor()
  bool get_IsDeterministic()
  void set_IsDeterministic(bool value)
  DataAccessKind get_DataAccess()
  void set_DataAccess(DataAccessKind value)
  SystemDataAccessKind get_SystemDataAccess()
  void set_SystemDataAccess(SystemDataAccessKind value)
  bool get_IsPrecise()
  void set_IsPrecise(bool value)
  string get_Name()
  void set_Name(string value)
  string get_TableDefinition()
  void set_TableDefinition(string value)
  string get_FillRowMethodName()
  void set_FillRowMethodName(string value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlMethodAttribute
Наследуется от: SqlFunctionAttribute
Поля:
  bool m_fCallOnNullInputs
  bool m_fMutator
  bool m_fInvokeIfReceiverIsNull
Свойства:
  bool OnNullCall
  bool IsMutator
  bool InvokeIfReceiverIsNull
Методы:
  void .ctor()
  bool get_OnNullCall()
  void set_OnNullCall(bool value)
  bool get_IsMutator()
  void set_IsMutator(bool value)
  bool get_InvokeIfReceiverIsNull()
  void set_InvokeIfReceiverIsNull(bool value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlProcedureAttribute
Наследуется от: Attribute
Поля:
  string m_fName
Свойства:
  string Name
Методы:
  void .ctor()
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlTriggerAttribute
Наследуется от: Attribute
Поля:
  string m_fName
  string m_fTarget
  string m_fEvent
Свойства:
  string Name
  string Target
  string Event
Методы:
  void .ctor()
  string get_Name()
  void set_Name(string value)
  string get_Target()
  void set_Target(string value)
  string get_Event()
  void set_Event(string value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute
Наследуется от: Attribute
Поля:
  int m_MaxByteSize
  bool m_fInvariantToDup
  bool m_fInvariantToNulls
  bool m_fInvariantToOrder
  bool m_fNullIfEmpty
  Format m_format
  string m_fName
  int MaxByteSizeValue
Свойства:
  int MaxByteSize
  bool IsInvariantToDuplicates
  bool IsInvariantToNulls
  bool IsInvariantToOrder
  bool IsNullIfEmpty
  Format Format
  string Name
Методы:
  void .ctor(Format format)
  int get_MaxByteSize()
  void set_MaxByteSize(int value)
  bool get_IsInvariantToDuplicates()
  void set_IsInvariantToDuplicates(bool value)
  bool get_IsInvariantToNulls()
  void set_IsInvariantToNulls(bool value)
  bool get_IsInvariantToOrder()
  void set_IsInvariantToOrder(bool value)
  bool get_IsNullIfEmpty()
  void set_IsNullIfEmpty(bool value)
  Format get_Format()
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.Format
Наследуется от: Enum
Поля:
  int value__
  Format Unknown
  Format Native
  Format UserDefined
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
Наследуется от: Attribute
Поля:
  int m_MaxByteSize
  bool m_IsFixedLength
  bool m_IsByteOrdered
  Format m_format
  string m_fName
  int YukonMaxByteSizeValue
  string m_ValidationMethodName
Свойства:
  int MaxByteSize
  bool IsFixedLength
  bool IsByteOrdered
  Format Format
  string ValidationMethodName
  string Name
Методы:
  void .ctor(Format format)
  int get_MaxByteSize()
  void set_MaxByteSize(int value)
  bool get_IsFixedLength()
  void set_IsFixedLength(bool value)
  bool get_IsByteOrdered()
  void set_IsByteOrdered(bool value)
  Format get_Format()
  string get_ValidationMethodName()
  void set_ValidationMethodName(string value)
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.EMDEventType
Наследуется от: Enum
Поля:
  int value__
  EMDEventType x_eet_Invalid
  EMDEventType x_eet_Insert
  EMDEventType x_eet_Update
  EMDEventType x_eet_Delete
  EMDEventType x_eet_Create_Table
  EMDEventType x_eet_Alter_Table
  EMDEventType x_eet_Drop_Table
  EMDEventType x_eet_Create_Index
  EMDEventType x_eet_Alter_Index
  EMDEventType x_eet_Drop_Index
  EMDEventType x_eet_Create_Stats
  EMDEventType x_eet_Update_Stats
  EMDEventType x_eet_Drop_Stats
  EMDEventType x_eet_Create_Secexpr
  EMDEventType x_eet_Drop_Secexpr
  EMDEventType x_eet_Create_Synonym
  EMDEventType x_eet_Drop_Synonym
  EMDEventType x_eet_Create_View
  EMDEventType x_eet_Alter_View
  EMDEventType x_eet_Drop_View
  EMDEventType x_eet_Create_Procedure
  EMDEventType x_eet_Alter_Procedure
  EMDEventType x_eet_Drop_Procedure
  EMDEventType x_eet_Create_Function
  EMDEventType x_eet_Alter_Function
  EMDEventType x_eet_Drop_Function
  EMDEventType x_eet_Create_Trigger
  EMDEventType x_eet_Alter_Trigger
  EMDEventType x_eet_Drop_Trigger
  EMDEventType x_eet_Create_Event_Notification
  EMDEventType x_eet_Drop_Event_Notification
  EMDEventType x_eet_Create_Type
  EMDEventType x_eet_Drop_Type
  EMDEventType x_eet_Create_Assembly
  EMDEventType x_eet_Alter_Assembly
  EMDEventType x_eet_Drop_Assembly
  EMDEventType x_eet_Create_User
  EMDEventType x_eet_Alter_User
  EMDEventType x_eet_Drop_User
  EMDEventType x_eet_Create_Role
  EMDEventType x_eet_Alter_Role
  EMDEventType x_eet_Drop_Role
  EMDEventType x_eet_Create_AppRole
  EMDEventType x_eet_Alter_AppRole
  EMDEventType x_eet_Drop_AppRole
  EMDEventType x_eet_Create_Schema
  EMDEventType x_eet_Alter_Schema
  EMDEventType x_eet_Drop_Schema
  EMDEventType x_eet_Create_Login
  EMDEventType x_eet_Alter_Login
  EMDEventType x_eet_Drop_Login
  EMDEventType x_eet_Create_MsgType
  EMDEventType x_eet_Alter_MsgType
  EMDEventType x_eet_Drop_MsgType
  EMDEventType x_eet_Create_Contract
  EMDEventType x_eet_Alter_Contract
  EMDEventType x_eet_Drop_Contract
  EMDEventType x_eet_Create_Queue
  EMDEventType x_eet_Alter_Queue
  EMDEventType x_eet_Drop_Queue
  EMDEventType x_eet_Create_Service
  EMDEventType x_eet_Alter_Service
  EMDEventType x_eet_Drop_Service
  EMDEventType x_eet_Create_Route
  EMDEventType x_eet_Alter_Route
  EMDEventType x_eet_Drop_Route
  EMDEventType x_eet_Grant_Statement
  EMDEventType x_eet_Deny_Statement
  EMDEventType x_eet_Revoke_Statement
  EMDEventType x_eet_Grant_Object
  EMDEventType x_eet_Deny_Object
  EMDEventType x_eet_Revoke_Object
  EMDEventType x_eet_Activation
  EMDEventType x_eet_Create_Binding
  EMDEventType x_eet_Alter_Binding
  EMDEventType x_eet_Drop_Binding
  EMDEventType x_eet_Create_XmlSchema
  EMDEventType x_eet_Alter_XmlSchema
  EMDEventType x_eet_Drop_XmlSchema
  EMDEventType x_eet_Create_HttpEndpoint
  EMDEventType x_eet_Alter_HttpEndpoint
  EMDEventType x_eet_Drop_HttpEndpoint
  EMDEventType x_eet_Create_Partition_Function
  EMDEventType x_eet_Alter_Partition_Function
  EMDEventType x_eet_Drop_Partition_Function
  EMDEventType x_eet_Create_Partition_Scheme
  EMDEventType x_eet_Alter_Partition_Scheme
  EMDEventType x_eet_Drop_Partition_Scheme
  EMDEventType x_eet_Create_Database
  EMDEventType x_eet_Alter_Database
  EMDEventType x_eet_Drop_Database
  EMDEventType x_eet_Trace_Start
  EMDEventType x_eet_Trace_End
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.TriggerAction
Наследуется от: Enum
Поля:
  int value__
  TriggerAction Invalid
  TriggerAction Insert
  TriggerAction Update
  TriggerAction Delete
  TriggerAction CreateTable
  TriggerAction AlterTable
  TriggerAction DropTable
  TriggerAction CreateIndex
  TriggerAction AlterIndex
  TriggerAction DropIndex
  TriggerAction CreateSynonym
  TriggerAction DropSynonym
  TriggerAction CreateSecurityExpression
  TriggerAction DropSecurityExpression
  TriggerAction CreateView
  TriggerAction AlterView
  TriggerAction DropView
  TriggerAction CreateProcedure
  TriggerAction AlterProcedure
  TriggerAction DropProcedure
  TriggerAction CreateFunction
  TriggerAction AlterFunction
  TriggerAction DropFunction
  TriggerAction CreateTrigger
  TriggerAction AlterTrigger
  TriggerAction DropTrigger
  TriggerAction CreateEventNotification
  TriggerAction DropEventNotification
  TriggerAction CreateType
  TriggerAction DropType
  TriggerAction CreateAssembly
  TriggerAction AlterAssembly
  TriggerAction DropAssembly
  TriggerAction CreateUser
  TriggerAction AlterUser
  TriggerAction DropUser
  TriggerAction CreateRole
  TriggerAction AlterRole
  TriggerAction DropRole
  TriggerAction CreateAppRole
  TriggerAction AlterAppRole
  TriggerAction DropAppRole
  TriggerAction CreateSchema
  TriggerAction AlterSchema
  TriggerAction DropSchema
  TriggerAction CreateLogin
  TriggerAction AlterLogin
  TriggerAction DropLogin
  TriggerAction CreateMsgType
  TriggerAction DropMsgType
  TriggerAction CreateContract
  TriggerAction DropContract
  TriggerAction CreateQueue
  TriggerAction AlterQueue
  TriggerAction DropQueue
  TriggerAction CreateService
  TriggerAction AlterService
  TriggerAction DropService
  TriggerAction CreateRoute
  TriggerAction AlterRoute
  TriggerAction DropRoute
  TriggerAction GrantStatement
  TriggerAction DenyStatement
  TriggerAction RevokeStatement
  TriggerAction GrantObject
  TriggerAction DenyObject
  TriggerAction RevokeObject
  TriggerAction CreateBinding
  TriggerAction AlterBinding
  TriggerAction DropBinding
  TriggerAction CreatePartitionFunction
  TriggerAction AlterPartitionFunction
  TriggerAction DropPartitionFunction
  TriggerAction CreatePartitionScheme
  TriggerAction AlterPartitionScheme
  TriggerAction DropPartitionScheme
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.InvalidUdtException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo si, StreamingContext sc)
  void GetObjectData(SerializationInfo si, StreamingContext context)
  InvalidUdtException Create(Type udtType, string resourceReason)
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlContext
Наследуется от: object
Поля:
Свойства:
  bool IsAvailable
  SqlPipe Pipe
  SqlTriggerContext TriggerContext
  WindowsIdentity WindowsIdentity
Методы:
  bool get_IsAvailable()
  SqlPipe get_Pipe()
  SqlTriggerContext get_TriggerContext()
  WindowsIdentity get_WindowsIdentity()
  void .ctor()
--------------------------------------------------
Класс: Microsoft.SqlServer.Server.SqlPipe
Наследуется от: object
Поля:
Свойства:
  bool IsSendingResults
Методы:
  void .ctor()
  bool get_IsSendingResults()
  void ExecuteAndSend(SqlCommand command)
  void Send(string message)
  void Send(SqlDataReader reader)
  void Send(SqlDataRecord record)
  void SendResultsStart(SqlDataRecord record)
  void SendResultsRow(SqlDataRecord record)
  void SendResultsEnd()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeGssNameHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  SafeGssNameHandle CreateUser(string name)
  SafeGssNameHandle CreatePrincipal(string name)
  bool get_IsInvalid()
  bool ReleaseHandle()
  void .ctor()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeGssCredHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  SafeGssCredHandle Create(string username, string password, bool isNtlmOnly)
  void .ctor()
  bool get_IsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeGssContextHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool get_IsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=36 0EE6555EB2C89F29655BD23FAB0573D8D684331A
  __StaticArrayInitTypeSize=512 17D2B80D753AA62E789780119267BDC4ED4D8F2A
  __StaticArrayInitTypeSize=32 185965EC7271286178226334C22A93B4591D8E44
  __StaticArrayInitTypeSize=38 1D7CD6F4EDDA127D3C963A650A77F39144235266
  __StaticArrayInitTypeSize=152 229F48C8598232AD9236772DD710E64615D0EE51
  __StaticArrayInitTypeSize=1575 24E34D04CE6D7404AF777338ABA8DF79AB49D396
  __StaticArrayInitTypeSize=38 2A4F1BD548EC71F652E24985361CD72F0FE1BE7D
  __StaticArrayInitTypeSize=152 547FF12759F2EA9866F3E2095113686A6379ABBF
  __StaticArrayInitTypeSize=176 57F92A12C48A0856350D3C95C4145F2AF4C9DEFF
  __StaticArrayInitTypeSize=152 624B37B4C211942F3422DFFEAE9F44901E57339C
  long 67B1A5A63D8C5CA4CCD90748A3B9D9E7D8AA3E68
  __StaticArrayInitTypeSize=32 8165EBA1F885AC99072C11FAE9D7B5076BF3889B
  long 948B5D74ED2E909D5E0175A9F734AE203D62579F
  long 9640408DDCA98CA64B04248140FE922D1561D20E
  __StaticArrayInitTypeSize=64 B2903BCFDB294DDE6986A52B83755A2C95D3950F
  __StaticArrayInitTypeSize=32 CD8806463E49D88B3B6B737394D99018CBCF8E1B
  __StaticArrayInitTypeSize=1575 D31AAFBFA434830765ED9EBF85EE16207B96F317
  __StaticArrayInitTypeSize=172 D4E5FDC29D5B32E1F527C5DE622FA7E58C342CB4
  __StaticArrayInitTypeSize=52 DD3AEFEADB1CD615F3017763F1568179FEE640B0
  __StaticArrayInitTypeSize=52 E92B39D8233061927D9ACDE54665E68E7535635A
  __StaticArrayInitTypeSize=25 F8EEE276F349A0C349216E39CF4C9875E9DF80C7
  __StaticArrayInitTypeSize=64 FA7899481F1198B5A3F90368A998C285FCE19878
  __StaticArrayInitTypeSize=595 FBD23B7F2208BC8A00CB826F39DC1C1A2E27CD77
  __StaticArrayInitTypeSize=152 FF8FD0AC7542FD42A8A7C8D145E120345BA51C56
Свойства:
Методы:
  UInt32 ComputeStringHash(string s)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  Byte[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] encryptedColumnEncryptionKey)
  Byte[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] columnEncryptionKey)
--------------------------------------------------
Класс: System.Data.SqlTypes.SqlFileStream
Наследуется от: Stream
Поля:
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  string Name
  long Position
  Byte[] TransactionContext
Методы:
  void .ctor(string path, Byte[] transactionContext, FileAccess access)
  void .ctor(string path, Byte[] transactionContext, FileAccess access, FileOptions options, long allocationSize)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  string get_Name()
  long get_Position()
  void set_Position(long value)
  Byte[] get_TransactionContext()
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlColumnEncryptionCertificateStoreProvider
Наследуется от: SqlColumnEncryptionKeyStoreProvider
Поля:
  string ProviderName
Свойства:
Методы:
  void .ctor()
  Byte[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] encryptedColumnEncryptionKey)
  Byte[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] columnEncryptionKey)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlColumnEncryptionCngProvider
Наследуется от: SqlColumnEncryptionKeyStoreProvider
Поля:
  string ProviderName
Свойства:
Методы:
  void .ctor()
  Byte[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] encryptedColumnEncryptionKey)
  Byte[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] columnEncryptionKey)
--------------------------------------------------
Класс: System.Data.SqlClient.SqlColumnEncryptionCspProvider
Наследуется от: SqlColumnEncryptionKeyStoreProvider
Поля:
  string ProviderName
Свойства:
Методы:
  void .ctor()
  Byte[] DecryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] encryptedColumnEncryptionKey)
  Byte[] EncryptColumnEncryptionKey(string masterKeyPath, string encryptionAlgorithm, Byte[] columnEncryptionKey)
--------------------------------------------------
Класс: Unity.ThrowStub
Наследуется от: ObjectDisposedException
Поля:
Свойства:
Методы:
  void ThrowNotSupportedException()
--------------------------------------------------
