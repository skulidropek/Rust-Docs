Сборка: Facepunch.Steamworks.Win64.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.CodeAnalysis.EmbeddedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Steamworks.CallResult`1
Наследуется от: ValueType
Поля:
  SteamAPICall_t call
  ISteamUtils utils
  bool server
Свойства:
  bool IsCompleted
Методы:
  void .ctor(SteamAPICall_t call, bool server)
  void OnCompleted(Action continuation)
  Nullable`1<T> GetResult()
  bool get_IsCompleted()
  CallResult`1<T> GetAwaiter()
--------------------------------------------------
Класс: Steamworks.ICallbackData
Поля:
Свойства:
  CallbackType CallbackType
  int DataSize
Методы:
  CallbackType get_CallbackType()
  int get_DataSize()
--------------------------------------------------
Класс: Steamworks.AuthTicket
Наследуется от: object
Поля:
  Byte[] Data
  UInt32 Handle
Свойства:
Методы:
  void Cancel()
  void Dispose()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.Dispatch
Наследуется от: object
Поля:
  Action`3<CallbackType, string, bool> OnDebugCallback
  Action`1<Exception> OnException
  HSteamPipe <ClientPipe>k__BackingField
  HSteamPipe <ServerPipe>k__BackingField
  bool runningFrame
  List`1<Action`1<IntPtr>> actionsToCall
  Dictionary`2<ulong, ResultCallback> ResultCallbacks
  Dictionary`2<CallbackType, List`1<Callback>> Callbacks
Свойства:
  HSteamPipe ClientPipe
  HSteamPipe ServerPipe
Методы:
  void SteamAPI_ManualDispatch_Init()
  void SteamAPI_ManualDispatch_RunFrame(HSteamPipe pipe)
  bool SteamAPI_ManualDispatch_GetNextCallback(HSteamPipe pipe, CallbackMsg_t& msg)
  bool SteamAPI_ManualDispatch_FreeLastCallback(HSteamPipe pipe)
  HSteamPipe get_ClientPipe()
  void set_ClientPipe(HSteamPipe value)
  HSteamPipe get_ServerPipe()
  void set_ServerPipe(HSteamPipe value)
  void Init()
  void Frame(HSteamPipe pipe)
  void ProcessCallback(CallbackMsg_t msg, bool isServer)
  string CallbackToString(CallbackType type, IntPtr data, int expectedsize)
  void ProcessResult(CallbackMsg_t msg)
  void LoopClientAsync()
  void LoopServerAsync()
  void OnCallComplete(SteamAPICall_t call, Action continuation, bool server)
  void Install(Action`1<T> p, bool server)
  void ShutdownServer()
  void ShutdownClient()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamAPI
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Init()
  void Shutdown()
  HSteamPipe GetHSteamPipe()
  bool RestartAppIfNecessary(UInt32 unOwnAppID)
--------------------------------------------------
Класс: Steamworks.SteamGameServer
Наследуется от: object
Поля:
Свойства:
Методы:
  void RunCallbacks()
  void Shutdown()
  HSteamPipe GetHSteamPipe()
--------------------------------------------------
Класс: Steamworks.SteamInternal
Наследуется от: object
Поля:
Свойства:
Методы:
  bool GameServer_Init(UInt32 unIP, ushort usPort, ushort usGamePort, ushort usQueryPort, int eServerMode, string pchVersionString)
--------------------------------------------------
Класс: Steamworks.CallbackType
Наследуется от: Enum
Поля:
  int value__
  CallbackType SteamServersConnected
  CallbackType SteamServerConnectFailure
  CallbackType SteamServersDisconnected
  CallbackType ClientGameServerDeny
  CallbackType GSPolicyResponse
  CallbackType IPCFailure
  CallbackType LicensesUpdated
  CallbackType ValidateAuthTicketResponse
  CallbackType MicroTxnAuthorizationResponse
  CallbackType EncryptedAppTicketResponse
  CallbackType GetAuthSessionTicketResponse
  CallbackType GameWebCallback
  CallbackType StoreAuthURLResponse
  CallbackType MarketEligibilityResponse
  CallbackType DurationControl
  CallbackType GetTicketForWebApiResponse
  CallbackType GSClientApprove
  CallbackType GSClientDeny
  CallbackType GSClientKick
  CallbackType GSClientAchievementStatus
  CallbackType GSGameplayStats
  CallbackType GSClientGroupStatus
  CallbackType GSReputation
  CallbackType AssociateWithClanResult
  CallbackType ComputeNewPlayerCompatibilityResult
  CallbackType PersonaStateChange
  CallbackType GameOverlayActivated
  CallbackType GameServerChangeRequested
  CallbackType GameLobbyJoinRequested
  CallbackType AvatarImageLoaded
  CallbackType ClanOfficerListResponse
  CallbackType FriendRichPresenceUpdate
  CallbackType GameRichPresenceJoinRequested
  CallbackType GameConnectedClanChatMsg
  CallbackType GameConnectedChatJoin
  CallbackType GameConnectedChatLeave
  CallbackType DownloadClanActivityCountsResult
  CallbackType JoinClanChatRoomCompletionResult
  CallbackType GameConnectedFriendChatMsg
  CallbackType FriendsGetFollowerCount
  CallbackType FriendsIsFollowing
  CallbackType FriendsEnumerateFollowingList
  CallbackType SetPersonaNameResponse
  CallbackType UnreadChatMessagesChanged
  CallbackType OverlayBrowserProtocolNavigation
  CallbackType EquippedProfileItemsChanged
  CallbackType EquippedProfileItems
  CallbackType FavoritesListChanged
  CallbackType LobbyInvite
  CallbackType LobbyEnter
  CallbackType LobbyDataUpdate
  CallbackType LobbyChatUpdate
  CallbackType LobbyChatMsg
  CallbackType LobbyGameCreated
  CallbackType LobbyMatchList
  CallbackType LobbyKicked
  CallbackType LobbyCreated
  CallbackType PSNGameBootInviteResult
  CallbackType FavoritesListAccountsUpdated
  CallbackType IPCountry
  CallbackType LowBatteryPower
  CallbackType SteamAPICallCompleted
  CallbackType SteamShutdown
  CallbackType CheckFileSignature
  CallbackType GamepadTextInputDismissed
  CallbackType AppResumingFromSuspend
  CallbackType FloatingGamepadTextInputDismissed
  CallbackType FilterTextDictionaryChanged
  CallbackType DlcInstalled
  CallbackType NewUrlLaunchParameters
  CallbackType AppProofOfPurchaseKeyResponse
  CallbackType FileDetailsResult
  CallbackType TimedTrialStatus
  CallbackType UserStatsReceived
  CallbackType UserStatsStored
  CallbackType UserAchievementStored
  CallbackType LeaderboardFindResult
  CallbackType LeaderboardScoresDownloaded
  CallbackType LeaderboardScoreUploaded
  CallbackType NumberOfCurrentPlayers
  CallbackType UserStatsUnloaded
  CallbackType GSStatsUnloaded
  CallbackType UserAchievementIconFetched
  CallbackType GlobalAchievementPercentagesReady
  CallbackType LeaderboardUGCSet
  CallbackType GlobalStatsReceived
  CallbackType P2PSessionRequest
  CallbackType P2PSessionConnectFail
  CallbackType SteamNetConnectionStatusChangedCallback
  CallbackType SteamNetAuthenticationStatus
  CallbackType SteamNetworkingFakeIPResult
  CallbackType SteamNetworkingMessagesSessionRequest
  CallbackType SteamNetworkingMessagesSessionFailed
  CallbackType SteamRelayNetworkStatus
  CallbackType RemoteStorageFileShareResult
  CallbackType RemoteStoragePublishFileResult
  CallbackType RemoteStorageDeletePublishedFileResult
  CallbackType RemoteStorageEnumerateUserPublishedFilesResult
  CallbackType RemoteStorageSubscribePublishedFileResult
  CallbackType RemoteStorageEnumerateUserSubscribedFilesResult
  CallbackType RemoteStorageUnsubscribePublishedFileResult
  CallbackType RemoteStorageUpdatePublishedFileResult
  CallbackType RemoteStorageDownloadUGCResult
  CallbackType RemoteStorageGetPublishedFileDetailsResult
  CallbackType RemoteStorageEnumerateWorkshopFilesResult
  CallbackType RemoteStorageGetPublishedItemVoteDetailsResult
  CallbackType RemoteStoragePublishedFileSubscribed
  CallbackType RemoteStoragePublishedFileUnsubscribed
  CallbackType RemoteStoragePublishedFileDeleted
  CallbackType RemoteStorageUpdateUserPublishedItemVoteResult
  CallbackType RemoteStorageUserVoteDetails
  CallbackType RemoteStorageEnumerateUserSharedWorkshopFilesResult
  CallbackType RemoteStorageSetUserPublishedFileActionResult
  CallbackType RemoteStorageEnumeratePublishedFilesByUserActionResult
  CallbackType RemoteStoragePublishFileProgress
  CallbackType RemoteStoragePublishedFileUpdated
  CallbackType RemoteStorageFileWriteAsyncComplete
  CallbackType RemoteStorageFileReadAsyncComplete
  CallbackType RemoteStorageLocalFileChange
  CallbackType GSStatsReceived
  CallbackType GSStatsStored
  CallbackType HTTPRequestCompleted
  CallbackType HTTPRequestHeadersReceived
  CallbackType HTTPRequestDataReceived
  CallbackType ScreenshotReady
  CallbackType ScreenshotRequested
  CallbackType SteamInputDeviceConnected
  CallbackType SteamInputDeviceDisconnected
  CallbackType SteamInputConfigurationLoaded
  CallbackType SteamInputGamepadSlotChange
  CallbackType SteamUGCQueryCompleted
  CallbackType SteamUGCRequestUGCDetailsResult
  CallbackType CreateItemResult
  CallbackType SubmitItemUpdateResult
  CallbackType ItemInstalled
  CallbackType DownloadItemResult
  CallbackType UserFavoriteItemsListChanged
  CallbackType SetUserItemVoteResult
  CallbackType GetUserItemVoteResult
  CallbackType StartPlaytimeTrackingResult
  CallbackType StopPlaytimeTrackingResult
  CallbackType AddUGCDependencyResult
  CallbackType RemoveUGCDependencyResult
  CallbackType AddAppDependencyResult
  CallbackType RemoveAppDependencyResult
  CallbackType GetAppDependenciesResult
  CallbackType DeleteItemResult
  CallbackType UserSubscribedItemsListChanged
  CallbackType WorkshopEULAStatus
  CallbackType SteamAppInstalled
  CallbackType SteamAppUninstalled
  CallbackType PlaybackStatusHasChanged
  CallbackType VolumeHasChanged
  CallbackType MusicPlayerWantsVolume
  CallbackType MusicPlayerSelectsQueueEntry
  CallbackType MusicPlayerSelectsPlaylistEntry
  CallbackType MusicPlayerRemoteWillActivate
  CallbackType MusicPlayerRemoteWillDeactivate
  CallbackType MusicPlayerRemoteToFront
  CallbackType MusicPlayerWillQuit
  CallbackType MusicPlayerWantsPlay
  CallbackType MusicPlayerWantsPause
  CallbackType MusicPlayerWantsPlayPrevious
  CallbackType MusicPlayerWantsPlayNext
  CallbackType MusicPlayerWantsShuffled
  CallbackType MusicPlayerWantsLooped
  CallbackType MusicPlayerWantsPlayingRepeatStatus
  CallbackType HTML_BrowserReady
  CallbackType HTML_NeedsPaint
  CallbackType HTML_StartRequest
  CallbackType HTML_CloseBrowser
  CallbackType HTML_URLChanged
  CallbackType HTML_FinishedRequest
  CallbackType HTML_OpenLinkInNewTab
  CallbackType HTML_ChangedTitle
  CallbackType HTML_SearchResults
  CallbackType HTML_CanGoBackAndForward
  CallbackType HTML_HorizontalScroll
  CallbackType HTML_VerticalScroll
  CallbackType HTML_LinkAtPosition
  CallbackType HTML_JSAlert
  CallbackType HTML_JSConfirm
  CallbackType HTML_FileOpenDialog
  CallbackType HTML_NewWindow
  CallbackType HTML_SetCursor
  CallbackType HTML_StatusText
  CallbackType HTML_ShowToolTip
  CallbackType HTML_UpdateToolTip
  CallbackType HTML_HideToolTip
  CallbackType HTML_BrowserRestarted
  CallbackType GetVideoURLResult
  CallbackType GetOPFSettingsResult
  CallbackType SteamInventoryResultReady
  CallbackType SteamInventoryFullUpdate
  CallbackType SteamInventoryDefinitionUpdate
  CallbackType SteamInventoryEligiblePromoItemDefIDs
  CallbackType SteamInventoryStartPurchaseResult
  CallbackType SteamInventoryRequestPricesResult
  CallbackType SteamParentalSettingsChanged
  CallbackType SearchForGameProgressCallback
  CallbackType SearchForGameResultCallback
  CallbackType RequestPlayersForGameProgressCallback
  CallbackType RequestPlayersForGameResultCallback
  CallbackType RequestPlayersForGameFinalResultCallback
  CallbackType SubmitPlayerResultResultCallback
  CallbackType EndGameResultCallback
  CallbackType JoinPartyCallback
  CallbackType CreateBeaconCallback
  CallbackType ReservationNotificationCallback
  CallbackType ChangeNumOpenSlotsCallback
  CallbackType AvailableBeaconLocationsUpdated
  CallbackType ActiveBeaconsUpdated
  CallbackType SteamRemotePlaySessionConnected
  CallbackType SteamRemotePlaySessionDisconnected
  CallbackType SteamRemotePlayTogetherGuestInvite
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.CallbackTypeFactory
Наследуется от: object
Поля:
  Dictionary`2<CallbackType, Type> All
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Steamworks.ISteamAppList
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamAppList_v001()
  IntPtr GetUserInterfacePointer()
  UInt32 _GetNumInstalledApps(IntPtr self)
  UInt32 GetNumInstalledApps()
  UInt32 _GetInstalledApps(IntPtr self, AppId[] pvecAppID, UInt32 unMaxAppIDs)
  UInt32 GetInstalledApps(AppId[] pvecAppID, UInt32 unMaxAppIDs)
  int _GetAppName(IntPtr self, AppId nAppID, IntPtr pchName, int cchNameMax)
  int GetAppName(AppId nAppID, String& pchName)
  int _GetAppInstallDir(IntPtr self, AppId nAppID, IntPtr pchDirectory, int cchNameMax)
  int GetAppInstallDir(AppId nAppID, String& pchDirectory)
  int _GetAppBuildId(IntPtr self, AppId nAppID)
  int GetAppBuildId(AppId nAppID)
--------------------------------------------------
Класс: Steamworks.ISteamApps
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamApps_v008()
  IntPtr GetUserInterfacePointer()
  bool _BIsSubscribed(IntPtr self)
  bool BIsSubscribed()
  bool _BIsLowViolence(IntPtr self)
  bool BIsLowViolence()
  bool _BIsCybercafe(IntPtr self)
  bool BIsCybercafe()
  bool _BIsVACBanned(IntPtr self)
  bool BIsVACBanned()
  Utf8StringPointer _GetCurrentGameLanguage(IntPtr self)
  string GetCurrentGameLanguage()
  Utf8StringPointer _GetAvailableGameLanguages(IntPtr self)
  string GetAvailableGameLanguages()
  bool _BIsSubscribedApp(IntPtr self, AppId appID)
  bool BIsSubscribedApp(AppId appID)
  bool _BIsDlcInstalled(IntPtr self, AppId appID)
  bool BIsDlcInstalled(AppId appID)
  UInt32 _GetEarliestPurchaseUnixTime(IntPtr self, AppId nAppID)
  UInt32 GetEarliestPurchaseUnixTime(AppId nAppID)
  bool _BIsSubscribedFromFreeWeekend(IntPtr self)
  bool BIsSubscribedFromFreeWeekend()
  int _GetDLCCount(IntPtr self)
  int GetDLCCount()
  bool _BGetDLCDataByIndex(IntPtr self, int iDLC, AppId& pAppID, Boolean& pbAvailable, IntPtr pchName, int cchNameBufferSize)
  bool BGetDLCDataByIndex(int iDLC, AppId& pAppID, Boolean& pbAvailable, String& pchName)
  void _InstallDLC(IntPtr self, AppId nAppID)
  void InstallDLC(AppId nAppID)
  void _UninstallDLC(IntPtr self, AppId nAppID)
  void UninstallDLC(AppId nAppID)
  void _RequestAppProofOfPurchaseKey(IntPtr self, AppId nAppID)
  void RequestAppProofOfPurchaseKey(AppId nAppID)
  bool _GetCurrentBetaName(IntPtr self, IntPtr pchName, int cchNameBufferSize)
  bool GetCurrentBetaName(String& pchName)
  bool _MarkContentCorrupt(IntPtr self, bool bMissingFilesOnly)
  bool MarkContentCorrupt(bool bMissingFilesOnly)
  UInt32 _GetInstalledDepots(IntPtr self, AppId appID, DepotId_t[] pvecDepots, UInt32 cMaxDepots)
  UInt32 GetInstalledDepots(AppId appID, DepotId_t[] pvecDepots, UInt32 cMaxDepots)
  UInt32 _GetAppInstallDir(IntPtr self, AppId appID, IntPtr pchFolder, UInt32 cchFolderBufferSize)
  UInt32 GetAppInstallDir(AppId appID, String& pchFolder)
  bool _BIsAppInstalled(IntPtr self, AppId appID)
  bool BIsAppInstalled(AppId appID)
  SteamId _GetAppOwner(IntPtr self)
  SteamId GetAppOwner()
  Utf8StringPointer _GetLaunchQueryParam(IntPtr self, string pchKey)
  string GetLaunchQueryParam(string pchKey)
  bool _GetDlcDownloadProgress(IntPtr self, AppId nAppID, UInt64& punBytesDownloaded, UInt64& punBytesTotal)
  bool GetDlcDownloadProgress(AppId nAppID, UInt64& punBytesDownloaded, UInt64& punBytesTotal)
  int _GetAppBuildId(IntPtr self)
  int GetAppBuildId()
  void _RequestAllProofOfPurchaseKeys(IntPtr self)
  void RequestAllProofOfPurchaseKeys()
  SteamAPICall_t _GetFileDetails(IntPtr self, string pszFileName)
  CallResult`1<FileDetailsResult_t> GetFileDetails(string pszFileName)
  int _GetLaunchCommandLine(IntPtr self, IntPtr pszCommandLine, int cubCommandLine)
  int GetLaunchCommandLine(String& pszCommandLine)
  bool _BIsSubscribedFromFamilySharing(IntPtr self)
  bool BIsSubscribedFromFamilySharing()
  bool _BIsTimedTrial(IntPtr self, UInt32& punSecondsAllowed, UInt32& punSecondsPlayed)
  bool BIsTimedTrial(UInt32& punSecondsAllowed, UInt32& punSecondsPlayed)
  bool _SetDlcContext(IntPtr self, AppId nAppID)
  bool SetDlcContext(AppId nAppID)
--------------------------------------------------
Класс: Steamworks.ISteamClient
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  HSteamPipe _CreateSteamPipe(IntPtr self)
  HSteamPipe CreateSteamPipe()
  bool _BReleaseSteamPipe(IntPtr self, HSteamPipe hSteamPipe)
  bool BReleaseSteamPipe(HSteamPipe hSteamPipe)
  HSteamUser _ConnectToGlobalUser(IntPtr self, HSteamPipe hSteamPipe)
  HSteamUser ConnectToGlobalUser(HSteamPipe hSteamPipe)
  HSteamUser _CreateLocalUser(IntPtr self, HSteamPipe& phSteamPipe, AccountType eAccountType)
  HSteamUser CreateLocalUser(HSteamPipe& phSteamPipe, AccountType eAccountType)
  void _ReleaseUser(IntPtr self, HSteamPipe hSteamPipe, HSteamUser hUser)
  void ReleaseUser(HSteamPipe hSteamPipe, HSteamUser hUser)
  IntPtr _GetISteamUser(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamUser(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamGameServer(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamGameServer(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  void _SetLocalIPBinding(IntPtr self, SteamIPAddress& unIP, ushort usPort)
  void SetLocalIPBinding(SteamIPAddress& unIP, ushort usPort)
  IntPtr _GetISteamFriends(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamFriends(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamUtils(IntPtr self, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamUtils(HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamMatchmaking(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamMatchmaking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamMatchmakingServers(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamMatchmakingServers(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamGenericInterface(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamGenericInterface(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamUserStats(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamUserStats(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamGameServerStats(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamGameServerStats(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamApps(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamApps(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamNetworking(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamNetworking(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamRemoteStorage(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamRemoteStorage(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamScreenshots(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamScreenshots(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamGameSearch(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamGameSearch(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  UInt32 _GetIPCCallCount(IntPtr self)
  UInt32 GetIPCCallCount()
  void _SetWarningMessageHook(IntPtr self, IntPtr pFunction)
  void SetWarningMessageHook(IntPtr pFunction)
  bool _BShutdownIfAllPipesClosed(IntPtr self)
  bool BShutdownIfAllPipesClosed()
  IntPtr _GetISteamHTTP(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamHTTP(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamController(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamController(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamUGC(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamUGC(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamAppList(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamAppList(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamMusic(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamMusic(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamMusicRemote(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamMusicRemote(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamHTMLSurface(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamHTMLSurface(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamInventory(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamInventory(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamVideo(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamVideo(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamParentalSettings(IntPtr self, HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamParentalSettings(HSteamUser hSteamuser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamInput(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamInput(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamParties(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamParties(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr _GetISteamRemotePlay(IntPtr self, HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
  IntPtr GetISteamRemotePlay(HSteamUser hSteamUser, HSteamPipe hSteamPipe, string pchVersion)
--------------------------------------------------
Класс: Steamworks.ISteamController
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamController_v008()
  IntPtr GetUserInterfacePointer()
  bool _Init(IntPtr self)
  bool Init()
  bool _Shutdown(IntPtr self)
  bool Shutdown()
  void _RunFrame(IntPtr self)
  void RunFrame()
  int _GetConnectedControllers(IntPtr self, ControllerHandle_t[] handlesOut)
  int GetConnectedControllers(ControllerHandle_t[] handlesOut)
  ControllerActionSetHandle_t _GetActionSetHandle(IntPtr self, string pszActionSetName)
  ControllerActionSetHandle_t GetActionSetHandle(string pszActionSetName)
  void _ActivateActionSet(IntPtr self, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle)
  void ActivateActionSet(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle)
  ControllerActionSetHandle_t _GetCurrentActionSet(IntPtr self, ControllerHandle_t controllerHandle)
  ControllerActionSetHandle_t GetCurrentActionSet(ControllerHandle_t controllerHandle)
  void _ActivateActionSetLayer(IntPtr self, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle)
  void ActivateActionSetLayer(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle)
  void _DeactivateActionSetLayer(IntPtr self, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle)
  void DeactivateActionSetLayer(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetLayerHandle)
  void _DeactivateAllActionSetLayers(IntPtr self, ControllerHandle_t controllerHandle)
  void DeactivateAllActionSetLayers(ControllerHandle_t controllerHandle)
  int _GetActiveActionSetLayers(IntPtr self, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t[] handlesOut)
  int GetActiveActionSetLayers(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t[] handlesOut)
  ControllerDigitalActionHandle_t _GetDigitalActionHandle(IntPtr self, string pszActionName)
  ControllerDigitalActionHandle_t GetDigitalActionHandle(string pszActionName)
  DigitalState _GetDigitalActionData(IntPtr self, ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle)
  DigitalState GetDigitalActionData(ControllerHandle_t controllerHandle, ControllerDigitalActionHandle_t digitalActionHandle)
  int _GetDigitalActionOrigins(IntPtr self, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerDigitalActionHandle_t digitalActionHandle, ControllerActionOrigin& originsOut)
  int GetDigitalActionOrigins(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerDigitalActionHandle_t digitalActionHandle, ControllerActionOrigin& originsOut)
  ControllerAnalogActionHandle_t _GetAnalogActionHandle(IntPtr self, string pszActionName)
  ControllerAnalogActionHandle_t GetAnalogActionHandle(string pszActionName)
  AnalogState _GetAnalogActionData(IntPtr self, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle)
  AnalogState GetAnalogActionData(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t analogActionHandle)
  int _GetAnalogActionOrigins(IntPtr self, ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerAnalogActionHandle_t analogActionHandle, ControllerActionOrigin& originsOut)
  int GetAnalogActionOrigins(ControllerHandle_t controllerHandle, ControllerActionSetHandle_t actionSetHandle, ControllerAnalogActionHandle_t analogActionHandle, ControllerActionOrigin& originsOut)
  Utf8StringPointer _GetGlyphForActionOrigin(IntPtr self, ControllerActionOrigin eOrigin)
  string GetGlyphForActionOrigin(ControllerActionOrigin eOrigin)
  Utf8StringPointer _GetStringForActionOrigin(IntPtr self, ControllerActionOrigin eOrigin)
  string GetStringForActionOrigin(ControllerActionOrigin eOrigin)
  void _StopAnalogActionMomentum(IntPtr self, ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t eAction)
  void StopAnalogActionMomentum(ControllerHandle_t controllerHandle, ControllerAnalogActionHandle_t eAction)
  MotionState _GetMotionData(IntPtr self, ControllerHandle_t controllerHandle)
  MotionState GetMotionData(ControllerHandle_t controllerHandle)
  void _TriggerHapticPulse(IntPtr self, ControllerHandle_t controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec)
  void TriggerHapticPulse(ControllerHandle_t controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec)
  void _TriggerRepeatedHapticPulse(IntPtr self, ControllerHandle_t controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, UInt32 nFlags)
  void TriggerRepeatedHapticPulse(ControllerHandle_t controllerHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, UInt32 nFlags)
  void _TriggerVibration(IntPtr self, ControllerHandle_t controllerHandle, ushort usLeftSpeed, ushort usRightSpeed)
  void TriggerVibration(ControllerHandle_t controllerHandle, ushort usLeftSpeed, ushort usRightSpeed)
  void _SetLEDColor(IntPtr self, ControllerHandle_t controllerHandle, byte nColorR, byte nColorG, byte nColorB, UInt32 nFlags)
  void SetLEDColor(ControllerHandle_t controllerHandle, byte nColorR, byte nColorG, byte nColorB, UInt32 nFlags)
  bool _ShowBindingPanel(IntPtr self, ControllerHandle_t controllerHandle)
  bool ShowBindingPanel(ControllerHandle_t controllerHandle)
  InputType _GetInputTypeForHandle(IntPtr self, ControllerHandle_t controllerHandle)
  InputType GetInputTypeForHandle(ControllerHandle_t controllerHandle)
  ControllerHandle_t _GetControllerForGamepadIndex(IntPtr self, int nIndex)
  ControllerHandle_t GetControllerForGamepadIndex(int nIndex)
  int _GetGamepadIndexForController(IntPtr self, ControllerHandle_t ulControllerHandle)
  int GetGamepadIndexForController(ControllerHandle_t ulControllerHandle)
  Utf8StringPointer _GetStringForXboxOrigin(IntPtr self, XboxOrigin eOrigin)
  string GetStringForXboxOrigin(XboxOrigin eOrigin)
  Utf8StringPointer _GetGlyphForXboxOrigin(IntPtr self, XboxOrigin eOrigin)
  string GetGlyphForXboxOrigin(XboxOrigin eOrigin)
  ControllerActionOrigin _GetActionOriginFromXboxOrigin(IntPtr self, ControllerHandle_t controllerHandle, XboxOrigin eOrigin)
  ControllerActionOrigin GetActionOriginFromXboxOrigin(ControllerHandle_t controllerHandle, XboxOrigin eOrigin)
  ControllerActionOrigin _TranslateActionOrigin(IntPtr self, InputType eDestinationInputType, ControllerActionOrigin eSourceOrigin)
  ControllerActionOrigin TranslateActionOrigin(InputType eDestinationInputType, ControllerActionOrigin eSourceOrigin)
  bool _GetControllerBindingRevision(IntPtr self, ControllerHandle_t controllerHandle, Int32& pMajor, Int32& pMinor)
  bool GetControllerBindingRevision(ControllerHandle_t controllerHandle, Int32& pMajor, Int32& pMinor)
--------------------------------------------------
Класс: Steamworks.ISteamFriends
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamFriends_v017()
  IntPtr GetUserInterfacePointer()
  Utf8StringPointer _GetPersonaName(IntPtr self)
  string GetPersonaName()
  SteamAPICall_t _SetPersonaName(IntPtr self, string pchPersonaName)
  CallResult`1<SetPersonaNameResponse_t> SetPersonaName(string pchPersonaName)
  FriendState _GetPersonaState(IntPtr self)
  FriendState GetPersonaState()
  int _GetFriendCount(IntPtr self, int iFriendFlags)
  int GetFriendCount(int iFriendFlags)
  SteamId _GetFriendByIndex(IntPtr self, int iFriend, int iFriendFlags)
  SteamId GetFriendByIndex(int iFriend, int iFriendFlags)
  Relationship _GetFriendRelationship(IntPtr self, SteamId steamIDFriend)
  Relationship GetFriendRelationship(SteamId steamIDFriend)
  FriendState _GetFriendPersonaState(IntPtr self, SteamId steamIDFriend)
  FriendState GetFriendPersonaState(SteamId steamIDFriend)
  Utf8StringPointer _GetFriendPersonaName(IntPtr self, SteamId steamIDFriend)
  string GetFriendPersonaName(SteamId steamIDFriend)
  bool _GetFriendGamePlayed(IntPtr self, SteamId steamIDFriend, FriendGameInfo_t& pFriendGameInfo)
  bool GetFriendGamePlayed(SteamId steamIDFriend, FriendGameInfo_t& pFriendGameInfo)
  Utf8StringPointer _GetFriendPersonaNameHistory(IntPtr self, SteamId steamIDFriend, int iPersonaName)
  string GetFriendPersonaNameHistory(SteamId steamIDFriend, int iPersonaName)
  int _GetFriendSteamLevel(IntPtr self, SteamId steamIDFriend)
  int GetFriendSteamLevel(SteamId steamIDFriend)
  Utf8StringPointer _GetPlayerNickname(IntPtr self, SteamId steamIDPlayer)
  string GetPlayerNickname(SteamId steamIDPlayer)
  int _GetFriendsGroupCount(IntPtr self)
  int GetFriendsGroupCount()
  FriendsGroupID_t _GetFriendsGroupIDByIndex(IntPtr self, int iFG)
  FriendsGroupID_t GetFriendsGroupIDByIndex(int iFG)
  Utf8StringPointer _GetFriendsGroupName(IntPtr self, FriendsGroupID_t friendsGroupID)
  string GetFriendsGroupName(FriendsGroupID_t friendsGroupID)
  int _GetFriendsGroupMembersCount(IntPtr self, FriendsGroupID_t friendsGroupID)
  int GetFriendsGroupMembersCount(FriendsGroupID_t friendsGroupID)
  void _GetFriendsGroupMembersList(IntPtr self, FriendsGroupID_t friendsGroupID, SteamId[] pOutSteamIDMembers, int nMembersCount)
  void GetFriendsGroupMembersList(FriendsGroupID_t friendsGroupID, SteamId[] pOutSteamIDMembers, int nMembersCount)
  bool _HasFriend(IntPtr self, SteamId steamIDFriend, int iFriendFlags)
  bool HasFriend(SteamId steamIDFriend, int iFriendFlags)
  int _GetClanCount(IntPtr self)
  int GetClanCount()
  SteamId _GetClanByIndex(IntPtr self, int iClan)
  SteamId GetClanByIndex(int iClan)
  Utf8StringPointer _GetClanName(IntPtr self, SteamId steamIDClan)
  string GetClanName(SteamId steamIDClan)
  Utf8StringPointer _GetClanTag(IntPtr self, SteamId steamIDClan)
  string GetClanTag(SteamId steamIDClan)
  bool _GetClanActivityCounts(IntPtr self, SteamId steamIDClan, Int32& pnOnline, Int32& pnInGame, Int32& pnChatting)
  bool GetClanActivityCounts(SteamId steamIDClan, Int32& pnOnline, Int32& pnInGame, Int32& pnChatting)
  SteamAPICall_t _DownloadClanActivityCounts(IntPtr self, SteamId[] psteamIDClans, int cClansToRequest)
  CallResult`1<DownloadClanActivityCountsResult_t> DownloadClanActivityCounts(SteamId[] psteamIDClans, int cClansToRequest)
  int _GetFriendCountFromSource(IntPtr self, SteamId steamIDSource)
  int GetFriendCountFromSource(SteamId steamIDSource)
  SteamId _GetFriendFromSourceByIndex(IntPtr self, SteamId steamIDSource, int iFriend)
  SteamId GetFriendFromSourceByIndex(SteamId steamIDSource, int iFriend)
  bool _IsUserInSource(IntPtr self, SteamId steamIDUser, SteamId steamIDSource)
  bool IsUserInSource(SteamId steamIDUser, SteamId steamIDSource)
  void _SetInGameVoiceSpeaking(IntPtr self, SteamId steamIDUser, bool bSpeaking)
  void SetInGameVoiceSpeaking(SteamId steamIDUser, bool bSpeaking)
  void _ActivateGameOverlay(IntPtr self, string pchDialog)
  void ActivateGameOverlay(string pchDialog)
  void _ActivateGameOverlayToUser(IntPtr self, string pchDialog, SteamId steamID)
  void ActivateGameOverlayToUser(string pchDialog, SteamId steamID)
  void _ActivateGameOverlayToWebPage(IntPtr self, string pchURL, ActivateGameOverlayToWebPageMode eMode)
  void ActivateGameOverlayToWebPage(string pchURL, ActivateGameOverlayToWebPageMode eMode)
  void _ActivateGameOverlayToStore(IntPtr self, AppId nAppID, OverlayToStoreFlag eFlag)
  void ActivateGameOverlayToStore(AppId nAppID, OverlayToStoreFlag eFlag)
  void _SetPlayedWith(IntPtr self, SteamId steamIDUserPlayedWith)
  void SetPlayedWith(SteamId steamIDUserPlayedWith)
  void _ActivateGameOverlayInviteDialog(IntPtr self, SteamId steamIDLobby)
  void ActivateGameOverlayInviteDialog(SteamId steamIDLobby)
  int _GetSmallFriendAvatar(IntPtr self, SteamId steamIDFriend)
  int GetSmallFriendAvatar(SteamId steamIDFriend)
  int _GetMediumFriendAvatar(IntPtr self, SteamId steamIDFriend)
  int GetMediumFriendAvatar(SteamId steamIDFriend)
  int _GetLargeFriendAvatar(IntPtr self, SteamId steamIDFriend)
  int GetLargeFriendAvatar(SteamId steamIDFriend)
  bool _RequestUserInformation(IntPtr self, SteamId steamIDUser, bool bRequireNameOnly)
  bool RequestUserInformation(SteamId steamIDUser, bool bRequireNameOnly)
  SteamAPICall_t _RequestClanOfficerList(IntPtr self, SteamId steamIDClan)
  CallResult`1<ClanOfficerListResponse_t> RequestClanOfficerList(SteamId steamIDClan)
  SteamId _GetClanOwner(IntPtr self, SteamId steamIDClan)
  SteamId GetClanOwner(SteamId steamIDClan)
  int _GetClanOfficerCount(IntPtr self, SteamId steamIDClan)
  int GetClanOfficerCount(SteamId steamIDClan)
  SteamId _GetClanOfficerByIndex(IntPtr self, SteamId steamIDClan, int iOfficer)
  SteamId GetClanOfficerByIndex(SteamId steamIDClan, int iOfficer)
  UInt32 _GetUserRestrictions(IntPtr self)
  UInt32 GetUserRestrictions()
  bool _SetRichPresence(IntPtr self, string pchKey, string pchValue)
  bool SetRichPresence(string pchKey, string pchValue)
  void _ClearRichPresence(IntPtr self)
  void ClearRichPresence()
  Utf8StringPointer _GetFriendRichPresence(IntPtr self, SteamId steamIDFriend, string pchKey)
  string GetFriendRichPresence(SteamId steamIDFriend, string pchKey)
  int _GetFriendRichPresenceKeyCount(IntPtr self, SteamId steamIDFriend)
  int GetFriendRichPresenceKeyCount(SteamId steamIDFriend)
  Utf8StringPointer _GetFriendRichPresenceKeyByIndex(IntPtr self, SteamId steamIDFriend, int iKey)
  string GetFriendRichPresenceKeyByIndex(SteamId steamIDFriend, int iKey)
  void _RequestFriendRichPresence(IntPtr self, SteamId steamIDFriend)
  void RequestFriendRichPresence(SteamId steamIDFriend)
  bool _InviteUserToGame(IntPtr self, SteamId steamIDFriend, string pchConnectString)
  bool InviteUserToGame(SteamId steamIDFriend, string pchConnectString)
  int _GetCoplayFriendCount(IntPtr self)
  int GetCoplayFriendCount()
  SteamId _GetCoplayFriend(IntPtr self, int iCoplayFriend)
  SteamId GetCoplayFriend(int iCoplayFriend)
  int _GetFriendCoplayTime(IntPtr self, SteamId steamIDFriend)
  int GetFriendCoplayTime(SteamId steamIDFriend)
  AppId _GetFriendCoplayGame(IntPtr self, SteamId steamIDFriend)
  AppId GetFriendCoplayGame(SteamId steamIDFriend)
  SteamAPICall_t _JoinClanChatRoom(IntPtr self, SteamId steamIDClan)
  CallResult`1<JoinClanChatRoomCompletionResult_t> JoinClanChatRoom(SteamId steamIDClan)
  bool _LeaveClanChatRoom(IntPtr self, SteamId steamIDClan)
  bool LeaveClanChatRoom(SteamId steamIDClan)
  int _GetClanChatMemberCount(IntPtr self, SteamId steamIDClan)
  int GetClanChatMemberCount(SteamId steamIDClan)
  SteamId _GetChatMemberByIndex(IntPtr self, SteamId steamIDClan, int iUser)
  SteamId GetChatMemberByIndex(SteamId steamIDClan, int iUser)
  bool _SendClanChatMessage(IntPtr self, SteamId steamIDClanChat, string pchText)
  bool SendClanChatMessage(SteamId steamIDClanChat, string pchText)
  int _GetClanChatMessage(IntPtr self, SteamId steamIDClanChat, int iMessage, IntPtr prgchText, int cchTextMax, ChatEntryType& peChatEntryType, SteamId& psteamidChatter)
  int GetClanChatMessage(SteamId steamIDClanChat, int iMessage, IntPtr prgchText, int cchTextMax, ChatEntryType& peChatEntryType, SteamId& psteamidChatter)
  bool _IsClanChatAdmin(IntPtr self, SteamId steamIDClanChat, SteamId steamIDUser)
  bool IsClanChatAdmin(SteamId steamIDClanChat, SteamId steamIDUser)
  bool _IsClanChatWindowOpenInSteam(IntPtr self, SteamId steamIDClanChat)
  bool IsClanChatWindowOpenInSteam(SteamId steamIDClanChat)
  bool _OpenClanChatWindowInSteam(IntPtr self, SteamId steamIDClanChat)
  bool OpenClanChatWindowInSteam(SteamId steamIDClanChat)
  bool _CloseClanChatWindowInSteam(IntPtr self, SteamId steamIDClanChat)
  bool CloseClanChatWindowInSteam(SteamId steamIDClanChat)
  bool _SetListenForFriendsMessages(IntPtr self, bool bInterceptEnabled)
  bool SetListenForFriendsMessages(bool bInterceptEnabled)
  bool _ReplyToFriendMessage(IntPtr self, SteamId steamIDFriend, string pchMsgToSend)
  bool ReplyToFriendMessage(SteamId steamIDFriend, string pchMsgToSend)
  int _GetFriendMessage(IntPtr self, SteamId steamIDFriend, int iMessageID, IntPtr pvData, int cubData, ChatEntryType& peChatEntryType)
  int GetFriendMessage(SteamId steamIDFriend, int iMessageID, IntPtr pvData, int cubData, ChatEntryType& peChatEntryType)
  SteamAPICall_t _GetFollowerCount(IntPtr self, SteamId steamID)
  CallResult`1<FriendsGetFollowerCount_t> GetFollowerCount(SteamId steamID)
  SteamAPICall_t _IsFollowing(IntPtr self, SteamId steamID)
  CallResult`1<FriendsIsFollowing_t> IsFollowing(SteamId steamID)
  SteamAPICall_t _EnumerateFollowingList(IntPtr self, UInt32 unStartIndex)
  CallResult`1<FriendsEnumerateFollowingList_t> EnumerateFollowingList(UInt32 unStartIndex)
  bool _IsClanPublic(IntPtr self, SteamId steamIDClan)
  bool IsClanPublic(SteamId steamIDClan)
  bool _IsClanOfficialGameGroup(IntPtr self, SteamId steamIDClan)
  bool IsClanOfficialGameGroup(SteamId steamIDClan)
  int _GetNumChatsWithUnreadPriorityMessages(IntPtr self)
  int GetNumChatsWithUnreadPriorityMessages()
  void _ActivateGameOverlayRemotePlayTogetherInviteDialog(IntPtr self, SteamId steamIDLobby)
  void ActivateGameOverlayRemotePlayTogetherInviteDialog(SteamId steamIDLobby)
  bool _RegisterProtocolInOverlayBrowser(IntPtr self, string pchProtocol)
  bool RegisterProtocolInOverlayBrowser(string pchProtocol)
  void _ActivateGameOverlayInviteDialogConnectString(IntPtr self, string pchConnectString)
  void ActivateGameOverlayInviteDialogConnectString(string pchConnectString)
  SteamAPICall_t _RequestEquippedProfileItems(IntPtr self, SteamId steamID)
  CallResult`1<EquippedProfileItems_t> RequestEquippedProfileItems(SteamId steamID)
  bool _BHasEquippedProfileItem(IntPtr self, SteamId steamID, CommunityProfileItemType itemType)
  bool BHasEquippedProfileItem(SteamId steamID, CommunityProfileItemType itemType)
  Utf8StringPointer _GetProfileItemPropertyString(IntPtr self, SteamId steamID, CommunityProfileItemType itemType, CommunityProfileItemProperty prop)
  string GetProfileItemPropertyString(SteamId steamID, CommunityProfileItemType itemType, CommunityProfileItemProperty prop)
  UInt32 _GetProfileItemPropertyUint(IntPtr self, SteamId steamID, CommunityProfileItemType itemType, CommunityProfileItemProperty prop)
  UInt32 GetProfileItemPropertyUint(SteamId steamID, CommunityProfileItemType itemType, CommunityProfileItemProperty prop)
--------------------------------------------------
Класс: Steamworks.ISteamGameSearch
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamGameSearch_v001()
  IntPtr GetUserInterfacePointer()
  GameSearchErrorCode_t _AddGameSearchParams(IntPtr self, string pchKeyToFind, string pchValuesToFind)
  GameSearchErrorCode_t AddGameSearchParams(string pchKeyToFind, string pchValuesToFind)
  GameSearchErrorCode_t _SearchForGameWithLobby(IntPtr self, SteamId steamIDLobby, int nPlayerMin, int nPlayerMax)
  GameSearchErrorCode_t SearchForGameWithLobby(SteamId steamIDLobby, int nPlayerMin, int nPlayerMax)
  GameSearchErrorCode_t _SearchForGameSolo(IntPtr self, int nPlayerMin, int nPlayerMax)
  GameSearchErrorCode_t SearchForGameSolo(int nPlayerMin, int nPlayerMax)
  GameSearchErrorCode_t _AcceptGame(IntPtr self)
  GameSearchErrorCode_t AcceptGame()
  GameSearchErrorCode_t _DeclineGame(IntPtr self)
  GameSearchErrorCode_t DeclineGame()
  GameSearchErrorCode_t _RetrieveConnectionDetails(IntPtr self, SteamId steamIDHost, IntPtr pchConnectionDetails, int cubConnectionDetails)
  GameSearchErrorCode_t RetrieveConnectionDetails(SteamId steamIDHost, String& pchConnectionDetails)
  GameSearchErrorCode_t _EndGameSearch(IntPtr self)
  GameSearchErrorCode_t EndGameSearch()
  GameSearchErrorCode_t _SetGameHostParams(IntPtr self, string pchKey, string pchValue)
  GameSearchErrorCode_t SetGameHostParams(string pchKey, string pchValue)
  GameSearchErrorCode_t _SetConnectionDetails(IntPtr self, string pchConnectionDetails, int cubConnectionDetails)
  GameSearchErrorCode_t SetConnectionDetails(string pchConnectionDetails, int cubConnectionDetails)
  GameSearchErrorCode_t _RequestPlayersForGame(IntPtr self, int nPlayerMin, int nPlayerMax, int nMaxTeamSize)
  GameSearchErrorCode_t RequestPlayersForGame(int nPlayerMin, int nPlayerMax, int nMaxTeamSize)
  GameSearchErrorCode_t _HostConfirmGameStart(IntPtr self, ulong ullUniqueGameID)
  GameSearchErrorCode_t HostConfirmGameStart(ulong ullUniqueGameID)
  GameSearchErrorCode_t _CancelRequestPlayersForGame(IntPtr self)
  GameSearchErrorCode_t CancelRequestPlayersForGame()
  GameSearchErrorCode_t _SubmitPlayerResult(IntPtr self, ulong ullUniqueGameID, SteamId steamIDPlayer, PlayerResult_t EPlayerResult)
  GameSearchErrorCode_t SubmitPlayerResult(ulong ullUniqueGameID, SteamId steamIDPlayer, PlayerResult_t EPlayerResult)
  GameSearchErrorCode_t _EndGame(IntPtr self, ulong ullUniqueGameID)
  GameSearchErrorCode_t EndGame(ulong ullUniqueGameID)
--------------------------------------------------
Класс: Steamworks.ISteamGameServer
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamGameServer_v015()
  IntPtr GetServerInterfacePointer()
  void _SetProduct(IntPtr self, string pszProduct)
  void SetProduct(string pszProduct)
  void _SetGameDescription(IntPtr self, string pszGameDescription)
  void SetGameDescription(string pszGameDescription)
  void _SetModDir(IntPtr self, string pszModDir)
  void SetModDir(string pszModDir)
  void _SetDedicatedServer(IntPtr self, bool bDedicated)
  void SetDedicatedServer(bool bDedicated)
  void _LogOn(IntPtr self, string pszToken)
  void LogOn(string pszToken)
  void _LogOnAnonymous(IntPtr self)
  void LogOnAnonymous()
  void _LogOff(IntPtr self)
  void LogOff()
  bool _BLoggedOn(IntPtr self)
  bool BLoggedOn()
  bool _BSecure(IntPtr self)
  bool BSecure()
  SteamId _GetSteamID(IntPtr self)
  SteamId GetSteamID()
  bool _WasRestartRequested(IntPtr self)
  bool WasRestartRequested()
  void _SetMaxPlayerCount(IntPtr self, int cPlayersMax)
  void SetMaxPlayerCount(int cPlayersMax)
  void _SetBotPlayerCount(IntPtr self, int cBotplayers)
  void SetBotPlayerCount(int cBotplayers)
  void _SetServerName(IntPtr self, string pszServerName)
  void SetServerName(string pszServerName)
  void _SetMapName(IntPtr self, string pszMapName)
  void SetMapName(string pszMapName)
  void _SetPasswordProtected(IntPtr self, bool bPasswordProtected)
  void SetPasswordProtected(bool bPasswordProtected)
  void _SetSpectatorPort(IntPtr self, ushort unSpectatorPort)
  void SetSpectatorPort(ushort unSpectatorPort)
  void _SetSpectatorServerName(IntPtr self, string pszSpectatorServerName)
  void SetSpectatorServerName(string pszSpectatorServerName)
  void _ClearAllKeyValues(IntPtr self)
  void ClearAllKeyValues()
  void _SetKeyValue(IntPtr self, string pKey, string pValue)
  void SetKeyValue(string pKey, string pValue)
  void _SetGameTags(IntPtr self, string pchGameTags)
  void SetGameTags(string pchGameTags)
  void _SetGameData(IntPtr self, string pchGameData)
  void SetGameData(string pchGameData)
  void _SetRegion(IntPtr self, string pszRegion)
  void SetRegion(string pszRegion)
  void _SetAdvertiseServerActive(IntPtr self, bool bActive)
  void SetAdvertiseServerActive(bool bActive)
  HAuthTicket _GetAuthSessionTicket(IntPtr self, IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket, NetIdentity& pSnid)
  HAuthTicket GetAuthSessionTicket(IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket, NetIdentity& pSnid)
  BeginAuthResult _BeginAuthSession(IntPtr self, IntPtr pAuthTicket, int cbAuthTicket, SteamId steamID)
  BeginAuthResult BeginAuthSession(IntPtr pAuthTicket, int cbAuthTicket, SteamId steamID)
  void _EndAuthSession(IntPtr self, SteamId steamID)
  void EndAuthSession(SteamId steamID)
  void _CancelAuthTicket(IntPtr self, HAuthTicket hAuthTicket)
  void CancelAuthTicket(HAuthTicket hAuthTicket)
  UserHasLicenseForAppResult _UserHasLicenseForApp(IntPtr self, SteamId steamID, AppId appID)
  UserHasLicenseForAppResult UserHasLicenseForApp(SteamId steamID, AppId appID)
  bool _RequestUserGroupStatus(IntPtr self, SteamId steamIDUser, SteamId steamIDGroup)
  bool RequestUserGroupStatus(SteamId steamIDUser, SteamId steamIDGroup)
  void _GetGameplayStats(IntPtr self)
  void GetGameplayStats()
  SteamAPICall_t _GetServerReputation(IntPtr self)
  CallResult`1<GSReputation_t> GetServerReputation()
  SteamIPAddress _GetPublicIP(IntPtr self)
  SteamIPAddress GetPublicIP()
  bool _HandleIncomingPacket(IntPtr self, IntPtr pData, int cbData, UInt32 srcIP, ushort srcPort)
  bool HandleIncomingPacket(IntPtr pData, int cbData, UInt32 srcIP, ushort srcPort)
  int _GetNextOutgoingPacket(IntPtr self, IntPtr pOut, int cbMaxOut, UInt32& pNetAdr, UInt16& pPort)
  int GetNextOutgoingPacket(IntPtr pOut, int cbMaxOut, UInt32& pNetAdr, UInt16& pPort)
  SteamAPICall_t _AssociateWithClan(IntPtr self, SteamId steamIDClan)
  CallResult`1<AssociateWithClanResult_t> AssociateWithClan(SteamId steamIDClan)
  SteamAPICall_t _ComputeNewPlayerCompatibility(IntPtr self, SteamId steamIDNewPlayer)
  CallResult`1<ComputeNewPlayerCompatibilityResult_t> ComputeNewPlayerCompatibility(SteamId steamIDNewPlayer)
  bool _SendUserConnectAndAuthenticate_DEPRECATED(IntPtr self, UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, SteamId& pSteamIDUser)
  bool SendUserConnectAndAuthenticate_DEPRECATED(UInt32 unIPClient, IntPtr pvAuthBlob, UInt32 cubAuthBlobSize, SteamId& pSteamIDUser)
  SteamId _CreateUnauthenticatedUserConnection(IntPtr self)
  SteamId CreateUnauthenticatedUserConnection()
  void _SendUserDisconnect_DEPRECATED(IntPtr self, SteamId steamIDUser)
  void SendUserDisconnect_DEPRECATED(SteamId steamIDUser)
  bool _BUpdateUserData(IntPtr self, SteamId steamIDUser, string pchPlayerName, UInt32 uScore)
  bool BUpdateUserData(SteamId steamIDUser, string pchPlayerName, UInt32 uScore)
--------------------------------------------------
Класс: Steamworks.ISteamGameServerStats
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamGameServerStats_v001()
  IntPtr GetServerInterfacePointer()
  SteamAPICall_t _RequestUserStats(IntPtr self, SteamId steamIDUser)
  CallResult`1<GSStatsReceived_t> RequestUserStats(SteamId steamIDUser)
  bool _GetUserStat(IntPtr self, SteamId steamIDUser, string pchName, Int32& pData)
  bool GetUserStat(SteamId steamIDUser, string pchName, Int32& pData)
  bool _GetUserStat(IntPtr self, SteamId steamIDUser, string pchName, Single& pData)
  bool GetUserStat(SteamId steamIDUser, string pchName, Single& pData)
  bool _GetUserAchievement(IntPtr self, SteamId steamIDUser, string pchName, Boolean& pbAchieved)
  bool GetUserAchievement(SteamId steamIDUser, string pchName, Boolean& pbAchieved)
  bool _SetUserStat(IntPtr self, SteamId steamIDUser, string pchName, int nData)
  bool SetUserStat(SteamId steamIDUser, string pchName, int nData)
  bool _SetUserStat(IntPtr self, SteamId steamIDUser, string pchName, float fData)
  bool SetUserStat(SteamId steamIDUser, string pchName, float fData)
  bool _UpdateUserAvgRateStat(IntPtr self, SteamId steamIDUser, string pchName, float flCountThisSession, double dSessionLength)
  bool UpdateUserAvgRateStat(SteamId steamIDUser, string pchName, float flCountThisSession, double dSessionLength)
  bool _SetUserAchievement(IntPtr self, SteamId steamIDUser, string pchName)
  bool SetUserAchievement(SteamId steamIDUser, string pchName)
  bool _ClearUserAchievement(IntPtr self, SteamId steamIDUser, string pchName)
  bool ClearUserAchievement(SteamId steamIDUser, string pchName)
  SteamAPICall_t _StoreUserStats(IntPtr self, SteamId steamIDUser)
  CallResult`1<GSStatsStored_t> StoreUserStats(SteamId steamIDUser)
--------------------------------------------------
Класс: Steamworks.ISteamHTMLSurface
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamHTMLSurface_v005()
  IntPtr GetUserInterfacePointer()
  bool _Init(IntPtr self)
  bool Init()
  bool _Shutdown(IntPtr self)
  bool Shutdown()
  SteamAPICall_t _CreateBrowser(IntPtr self, string pchUserAgent, string pchUserCSS)
  CallResult`1<HTML_BrowserReady_t> CreateBrowser(string pchUserAgent, string pchUserCSS)
  void _RemoveBrowser(IntPtr self, HHTMLBrowser unBrowserHandle)
  void RemoveBrowser(HHTMLBrowser unBrowserHandle)
  void _LoadURL(IntPtr self, HHTMLBrowser unBrowserHandle, string pchURL, string pchPostData)
  void LoadURL(HHTMLBrowser unBrowserHandle, string pchURL, string pchPostData)
  void _SetSize(IntPtr self, HHTMLBrowser unBrowserHandle, UInt32 unWidth, UInt32 unHeight)
  void SetSize(HHTMLBrowser unBrowserHandle, UInt32 unWidth, UInt32 unHeight)
  void _StopLoad(IntPtr self, HHTMLBrowser unBrowserHandle)
  void StopLoad(HHTMLBrowser unBrowserHandle)
  void _Reload(IntPtr self, HHTMLBrowser unBrowserHandle)
  void Reload(HHTMLBrowser unBrowserHandle)
  void _GoBack(IntPtr self, HHTMLBrowser unBrowserHandle)
  void GoBack(HHTMLBrowser unBrowserHandle)
  void _GoForward(IntPtr self, HHTMLBrowser unBrowserHandle)
  void GoForward(HHTMLBrowser unBrowserHandle)
  void _AddHeader(IntPtr self, HHTMLBrowser unBrowserHandle, string pchKey, string pchValue)
  void AddHeader(HHTMLBrowser unBrowserHandle, string pchKey, string pchValue)
  void _ExecuteJavascript(IntPtr self, HHTMLBrowser unBrowserHandle, string pchScript)
  void ExecuteJavascript(HHTMLBrowser unBrowserHandle, string pchScript)
  void _MouseUp(IntPtr self, HHTMLBrowser unBrowserHandle, IntPtr eMouseButton)
  void MouseUp(HHTMLBrowser unBrowserHandle, IntPtr eMouseButton)
  void _MouseDown(IntPtr self, HHTMLBrowser unBrowserHandle, IntPtr eMouseButton)
  void MouseDown(HHTMLBrowser unBrowserHandle, IntPtr eMouseButton)
  void _MouseDoubleClick(IntPtr self, HHTMLBrowser unBrowserHandle, IntPtr eMouseButton)
  void MouseDoubleClick(HHTMLBrowser unBrowserHandle, IntPtr eMouseButton)
  void _MouseMove(IntPtr self, HHTMLBrowser unBrowserHandle, int x, int y)
  void MouseMove(HHTMLBrowser unBrowserHandle, int x, int y)
  void _MouseWheel(IntPtr self, HHTMLBrowser unBrowserHandle, int nDelta)
  void MouseWheel(HHTMLBrowser unBrowserHandle, int nDelta)
  void _KeyDown(IntPtr self, HHTMLBrowser unBrowserHandle, UInt32 nNativeKeyCode, IntPtr eHTMLKeyModifiers, bool bIsSystemKey)
  void KeyDown(HHTMLBrowser unBrowserHandle, UInt32 nNativeKeyCode, IntPtr eHTMLKeyModifiers, bool bIsSystemKey)
  void _KeyUp(IntPtr self, HHTMLBrowser unBrowserHandle, UInt32 nNativeKeyCode, IntPtr eHTMLKeyModifiers)
  void KeyUp(HHTMLBrowser unBrowserHandle, UInt32 nNativeKeyCode, IntPtr eHTMLKeyModifiers)
  void _KeyChar(IntPtr self, HHTMLBrowser unBrowserHandle, UInt32 cUnicodeChar, IntPtr eHTMLKeyModifiers)
  void KeyChar(HHTMLBrowser unBrowserHandle, UInt32 cUnicodeChar, IntPtr eHTMLKeyModifiers)
  void _SetHorizontalScroll(IntPtr self, HHTMLBrowser unBrowserHandle, UInt32 nAbsolutePixelScroll)
  void SetHorizontalScroll(HHTMLBrowser unBrowserHandle, UInt32 nAbsolutePixelScroll)
  void _SetVerticalScroll(IntPtr self, HHTMLBrowser unBrowserHandle, UInt32 nAbsolutePixelScroll)
  void SetVerticalScroll(HHTMLBrowser unBrowserHandle, UInt32 nAbsolutePixelScroll)
  void _SetKeyFocus(IntPtr self, HHTMLBrowser unBrowserHandle, bool bHasKeyFocus)
  void SetKeyFocus(HHTMLBrowser unBrowserHandle, bool bHasKeyFocus)
  void _ViewSource(IntPtr self, HHTMLBrowser unBrowserHandle)
  void ViewSource(HHTMLBrowser unBrowserHandle)
  void _CopyToClipboard(IntPtr self, HHTMLBrowser unBrowserHandle)
  void CopyToClipboard(HHTMLBrowser unBrowserHandle)
  void _PasteFromClipboard(IntPtr self, HHTMLBrowser unBrowserHandle)
  void PasteFromClipboard(HHTMLBrowser unBrowserHandle)
  void _Find(IntPtr self, HHTMLBrowser unBrowserHandle, string pchSearchStr, bool bCurrentlyInFind, bool bReverse)
  void Find(HHTMLBrowser unBrowserHandle, string pchSearchStr, bool bCurrentlyInFind, bool bReverse)
  void _StopFind(IntPtr self, HHTMLBrowser unBrowserHandle)
  void StopFind(HHTMLBrowser unBrowserHandle)
  void _GetLinkAtPosition(IntPtr self, HHTMLBrowser unBrowserHandle, int x, int y)
  void GetLinkAtPosition(HHTMLBrowser unBrowserHandle, int x, int y)
  void _SetCookie(IntPtr self, string pchHostname, string pchKey, string pchValue, string pchPath, RTime32 nExpires, bool bSecure, bool bHTTPOnly)
  void SetCookie(string pchHostname, string pchKey, string pchValue, string pchPath, RTime32 nExpires, bool bSecure, bool bHTTPOnly)
  void _SetPageScaleFactor(IntPtr self, HHTMLBrowser unBrowserHandle, float flZoom, int nPointX, int nPointY)
  void SetPageScaleFactor(HHTMLBrowser unBrowserHandle, float flZoom, int nPointX, int nPointY)
  void _SetBackgroundMode(IntPtr self, HHTMLBrowser unBrowserHandle, bool bBackgroundMode)
  void SetBackgroundMode(HHTMLBrowser unBrowserHandle, bool bBackgroundMode)
  void _SetDPIScalingFactor(IntPtr self, HHTMLBrowser unBrowserHandle, float flDPIScaling)
  void SetDPIScalingFactor(HHTMLBrowser unBrowserHandle, float flDPIScaling)
  void _OpenDeveloperTools(IntPtr self, HHTMLBrowser unBrowserHandle)
  void OpenDeveloperTools(HHTMLBrowser unBrowserHandle)
  void _AllowStartRequest(IntPtr self, HHTMLBrowser unBrowserHandle, bool bAllowed)
  void AllowStartRequest(HHTMLBrowser unBrowserHandle, bool bAllowed)
  void _JSDialogResponse(IntPtr self, HHTMLBrowser unBrowserHandle, bool bResult)
  void JSDialogResponse(HHTMLBrowser unBrowserHandle, bool bResult)
  void _FileLoadDialogResponse(IntPtr self, HHTMLBrowser unBrowserHandle, string pchSelectedFiles)
  void FileLoadDialogResponse(HHTMLBrowser unBrowserHandle, string pchSelectedFiles)
--------------------------------------------------
Класс: Steamworks.ISteamHTTP
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamHTTP_v003()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerHTTP_v003()
  IntPtr GetServerInterfacePointer()
  HTTPRequestHandle _CreateHTTPRequest(IntPtr self, HTTPMethod eHTTPRequestMethod, string pchAbsoluteURL)
  HTTPRequestHandle CreateHTTPRequest(HTTPMethod eHTTPRequestMethod, string pchAbsoluteURL)
  bool _SetHTTPRequestContextValue(IntPtr self, HTTPRequestHandle hRequest, ulong ulContextValue)
  bool SetHTTPRequestContextValue(HTTPRequestHandle hRequest, ulong ulContextValue)
  bool _SetHTTPRequestNetworkActivityTimeout(IntPtr self, HTTPRequestHandle hRequest, UInt32 unTimeoutSeconds)
  bool SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle hRequest, UInt32 unTimeoutSeconds)
  bool _SetHTTPRequestHeaderValue(IntPtr self, HTTPRequestHandle hRequest, string pchHeaderName, string pchHeaderValue)
  bool SetHTTPRequestHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, string pchHeaderValue)
  bool _SetHTTPRequestGetOrPostParameter(IntPtr self, HTTPRequestHandle hRequest, string pchParamName, string pchParamValue)
  bool SetHTTPRequestGetOrPostParameter(HTTPRequestHandle hRequest, string pchParamName, string pchParamValue)
  bool _SendHTTPRequest(IntPtr self, HTTPRequestHandle hRequest, SteamAPICall_t& pCallHandle)
  bool SendHTTPRequest(HTTPRequestHandle hRequest, SteamAPICall_t& pCallHandle)
  bool _SendHTTPRequestAndStreamResponse(IntPtr self, HTTPRequestHandle hRequest, SteamAPICall_t& pCallHandle)
  bool SendHTTPRequestAndStreamResponse(HTTPRequestHandle hRequest, SteamAPICall_t& pCallHandle)
  bool _DeferHTTPRequest(IntPtr self, HTTPRequestHandle hRequest)
  bool DeferHTTPRequest(HTTPRequestHandle hRequest)
  bool _PrioritizeHTTPRequest(IntPtr self, HTTPRequestHandle hRequest)
  bool PrioritizeHTTPRequest(HTTPRequestHandle hRequest)
  bool _GetHTTPResponseHeaderSize(IntPtr self, HTTPRequestHandle hRequest, string pchHeaderName, UInt32& unResponseHeaderSize)
  bool GetHTTPResponseHeaderSize(HTTPRequestHandle hRequest, string pchHeaderName, UInt32& unResponseHeaderSize)
  bool _GetHTTPResponseHeaderValue(IntPtr self, HTTPRequestHandle hRequest, string pchHeaderName, Byte& pHeaderValueBuffer, UInt32 unBufferSize)
  bool GetHTTPResponseHeaderValue(HTTPRequestHandle hRequest, string pchHeaderName, Byte& pHeaderValueBuffer, UInt32 unBufferSize)
  bool _GetHTTPResponseBodySize(IntPtr self, HTTPRequestHandle hRequest, UInt32& unBodySize)
  bool GetHTTPResponseBodySize(HTTPRequestHandle hRequest, UInt32& unBodySize)
  bool _GetHTTPResponseBodyData(IntPtr self, HTTPRequestHandle hRequest, Byte& pBodyDataBuffer, UInt32 unBufferSize)
  bool GetHTTPResponseBodyData(HTTPRequestHandle hRequest, Byte& pBodyDataBuffer, UInt32 unBufferSize)
  bool _GetHTTPStreamingResponseBodyData(IntPtr self, HTTPRequestHandle hRequest, UInt32 cOffset, Byte& pBodyDataBuffer, UInt32 unBufferSize)
  bool GetHTTPStreamingResponseBodyData(HTTPRequestHandle hRequest, UInt32 cOffset, Byte& pBodyDataBuffer, UInt32 unBufferSize)
  bool _ReleaseHTTPRequest(IntPtr self, HTTPRequestHandle hRequest)
  bool ReleaseHTTPRequest(HTTPRequestHandle hRequest)
  bool _GetHTTPDownloadProgressPct(IntPtr self, HTTPRequestHandle hRequest, Single& pflPercentOut)
  bool GetHTTPDownloadProgressPct(HTTPRequestHandle hRequest, Single& pflPercentOut)
  bool _SetHTTPRequestRawPostBody(IntPtr self, HTTPRequestHandle hRequest, string pchContentType, Byte[] pubBody, UInt32 unBodyLen)
  bool SetHTTPRequestRawPostBody(HTTPRequestHandle hRequest, string pchContentType, Byte[] pubBody, UInt32 unBodyLen)
  HTTPCookieContainerHandle _CreateCookieContainer(IntPtr self, bool bAllowResponsesToModify)
  HTTPCookieContainerHandle CreateCookieContainer(bool bAllowResponsesToModify)
  bool _ReleaseCookieContainer(IntPtr self, HTTPCookieContainerHandle hCookieContainer)
  bool ReleaseCookieContainer(HTTPCookieContainerHandle hCookieContainer)
  bool _SetCookie(IntPtr self, HTTPCookieContainerHandle hCookieContainer, string pchHost, string pchUrl, string pchCookie)
  bool SetCookie(HTTPCookieContainerHandle hCookieContainer, string pchHost, string pchUrl, string pchCookie)
  bool _SetHTTPRequestCookieContainer(IntPtr self, HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer)
  bool SetHTTPRequestCookieContainer(HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer)
  bool _SetHTTPRequestUserAgentInfo(IntPtr self, HTTPRequestHandle hRequest, string pchUserAgentInfo)
  bool SetHTTPRequestUserAgentInfo(HTTPRequestHandle hRequest, string pchUserAgentInfo)
  bool _SetHTTPRequestRequiresVerifiedCertificate(IntPtr self, HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate)
  bool SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate)
  bool _SetHTTPRequestAbsoluteTimeoutMS(IntPtr self, HTTPRequestHandle hRequest, UInt32 unMilliseconds)
  bool SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle hRequest, UInt32 unMilliseconds)
  bool _GetHTTPRequestWasTimedOut(IntPtr self, HTTPRequestHandle hRequest, Boolean& pbWasTimedOut)
  bool GetHTTPRequestWasTimedOut(HTTPRequestHandle hRequest, Boolean& pbWasTimedOut)
--------------------------------------------------
Класс: Steamworks.ISteamInput
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamInput_v006()
  IntPtr GetUserInterfacePointer()
  bool _Init(IntPtr self, bool bExplicitlyCallRunFrame)
  bool Init(bool bExplicitlyCallRunFrame)
  bool _Shutdown(IntPtr self)
  bool Shutdown()
  bool _SetInputActionManifestFilePath(IntPtr self, string pchInputActionManifestAbsolutePath)
  bool SetInputActionManifestFilePath(string pchInputActionManifestAbsolutePath)
  void _RunFrame(IntPtr self, bool bReservedValue)
  void RunFrame(bool bReservedValue)
  bool _BWaitForData(IntPtr self, bool bWaitForever, UInt32 unTimeout)
  bool BWaitForData(bool bWaitForever, UInt32 unTimeout)
  bool _BNewDataAvailable(IntPtr self)
  bool BNewDataAvailable()
  int _GetConnectedControllers(IntPtr self, InputHandle_t[] handlesOut)
  int GetConnectedControllers(InputHandle_t[] handlesOut)
  void _EnableDeviceCallbacks(IntPtr self)
  void EnableDeviceCallbacks()
  InputActionSetHandle_t _GetActionSetHandle(IntPtr self, string pszActionSetName)
  InputActionSetHandle_t GetActionSetHandle(string pszActionSetName)
  void _ActivateActionSet(IntPtr self, InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle)
  void ActivateActionSet(InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle)
  InputActionSetHandle_t _GetCurrentActionSet(IntPtr self, InputHandle_t inputHandle)
  InputActionSetHandle_t GetCurrentActionSet(InputHandle_t inputHandle)
  void _ActivateActionSetLayer(IntPtr self, InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle)
  void ActivateActionSetLayer(InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle)
  void _DeactivateActionSetLayer(IntPtr self, InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle)
  void DeactivateActionSetLayer(InputHandle_t inputHandle, InputActionSetHandle_t actionSetLayerHandle)
  void _DeactivateAllActionSetLayers(IntPtr self, InputHandle_t inputHandle)
  void DeactivateAllActionSetLayers(InputHandle_t inputHandle)
  int _GetActiveActionSetLayers(IntPtr self, InputHandle_t inputHandle, InputActionSetHandle_t[] handlesOut)
  int GetActiveActionSetLayers(InputHandle_t inputHandle, InputActionSetHandle_t[] handlesOut)
  InputDigitalActionHandle_t _GetDigitalActionHandle(IntPtr self, string pszActionName)
  InputDigitalActionHandle_t GetDigitalActionHandle(string pszActionName)
  DigitalState _GetDigitalActionData(IntPtr self, InputHandle_t inputHandle, InputDigitalActionHandle_t digitalActionHandle)
  DigitalState GetDigitalActionData(InputHandle_t inputHandle, InputDigitalActionHandle_t digitalActionHandle)
  int _GetDigitalActionOrigins(IntPtr self, InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputDigitalActionHandle_t digitalActionHandle, InputActionOrigin& originsOut)
  int GetDigitalActionOrigins(InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputDigitalActionHandle_t digitalActionHandle, InputActionOrigin& originsOut)
  Utf8StringPointer _GetStringForDigitalActionName(IntPtr self, InputDigitalActionHandle_t eActionHandle)
  string GetStringForDigitalActionName(InputDigitalActionHandle_t eActionHandle)
  InputAnalogActionHandle_t _GetAnalogActionHandle(IntPtr self, string pszActionName)
  InputAnalogActionHandle_t GetAnalogActionHandle(string pszActionName)
  AnalogState _GetAnalogActionData(IntPtr self, InputHandle_t inputHandle, InputAnalogActionHandle_t analogActionHandle)
  AnalogState GetAnalogActionData(InputHandle_t inputHandle, InputAnalogActionHandle_t analogActionHandle)
  int _GetAnalogActionOrigins(IntPtr self, InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputAnalogActionHandle_t analogActionHandle, InputActionOrigin& originsOut)
  int GetAnalogActionOrigins(InputHandle_t inputHandle, InputActionSetHandle_t actionSetHandle, InputAnalogActionHandle_t analogActionHandle, InputActionOrigin& originsOut)
  Utf8StringPointer _GetGlyphPNGForActionOrigin(IntPtr self, InputActionOrigin eOrigin, GlyphSize eSize, UInt32 unFlags)
  string GetGlyphPNGForActionOrigin(InputActionOrigin eOrigin, GlyphSize eSize, UInt32 unFlags)
  Utf8StringPointer _GetGlyphSVGForActionOrigin(IntPtr self, InputActionOrigin eOrigin, UInt32 unFlags)
  string GetGlyphSVGForActionOrigin(InputActionOrigin eOrigin, UInt32 unFlags)
  Utf8StringPointer _GetGlyphForActionOrigin_Legacy(IntPtr self, InputActionOrigin eOrigin)
  string GetGlyphForActionOrigin_Legacy(InputActionOrigin eOrigin)
  Utf8StringPointer _GetStringForActionOrigin(IntPtr self, InputActionOrigin eOrigin)
  string GetStringForActionOrigin(InputActionOrigin eOrigin)
  Utf8StringPointer _GetStringForAnalogActionName(IntPtr self, InputAnalogActionHandle_t eActionHandle)
  string GetStringForAnalogActionName(InputAnalogActionHandle_t eActionHandle)
  void _StopAnalogActionMomentum(IntPtr self, InputHandle_t inputHandle, InputAnalogActionHandle_t eAction)
  void StopAnalogActionMomentum(InputHandle_t inputHandle, InputAnalogActionHandle_t eAction)
  MotionState _GetMotionData(IntPtr self, InputHandle_t inputHandle)
  MotionState GetMotionData(InputHandle_t inputHandle)
  void _TriggerVibration(IntPtr self, InputHandle_t inputHandle, ushort usLeftSpeed, ushort usRightSpeed)
  void TriggerVibration(InputHandle_t inputHandle, ushort usLeftSpeed, ushort usRightSpeed)
  void _TriggerVibrationExtended(IntPtr self, InputHandle_t inputHandle, ushort usLeftSpeed, ushort usRightSpeed, ushort usLeftTriggerSpeed, ushort usRightTriggerSpeed)
  void TriggerVibrationExtended(InputHandle_t inputHandle, ushort usLeftSpeed, ushort usRightSpeed, ushort usLeftTriggerSpeed, ushort usRightTriggerSpeed)
  void _TriggerSimpleHapticEvent(IntPtr self, InputHandle_t inputHandle, ControllerHapticLocation eHapticLocation, byte nIntensity, char nGainDB, byte nOtherIntensity, char nOtherGainDB)
  void TriggerSimpleHapticEvent(InputHandle_t inputHandle, ControllerHapticLocation eHapticLocation, byte nIntensity, char nGainDB, byte nOtherIntensity, char nOtherGainDB)
  void _SetLEDColor(IntPtr self, InputHandle_t inputHandle, byte nColorR, byte nColorG, byte nColorB, UInt32 nFlags)
  void SetLEDColor(InputHandle_t inputHandle, byte nColorR, byte nColorG, byte nColorB, UInt32 nFlags)
  void _Legacy_TriggerHapticPulse(IntPtr self, InputHandle_t inputHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec)
  void Legacy_TriggerHapticPulse(InputHandle_t inputHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec)
  void _Legacy_TriggerRepeatedHapticPulse(IntPtr self, InputHandle_t inputHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, UInt32 nFlags)
  void Legacy_TriggerRepeatedHapticPulse(InputHandle_t inputHandle, SteamControllerPad eTargetPad, ushort usDurationMicroSec, ushort usOffMicroSec, ushort unRepeat, UInt32 nFlags)
  bool _ShowBindingPanel(IntPtr self, InputHandle_t inputHandle)
  bool ShowBindingPanel(InputHandle_t inputHandle)
  InputType _GetInputTypeForHandle(IntPtr self, InputHandle_t inputHandle)
  InputType GetInputTypeForHandle(InputHandle_t inputHandle)
  InputHandle_t _GetControllerForGamepadIndex(IntPtr self, int nIndex)
  InputHandle_t GetControllerForGamepadIndex(int nIndex)
  int _GetGamepadIndexForController(IntPtr self, InputHandle_t ulinputHandle)
  int GetGamepadIndexForController(InputHandle_t ulinputHandle)
  Utf8StringPointer _GetStringForXboxOrigin(IntPtr self, XboxOrigin eOrigin)
  string GetStringForXboxOrigin(XboxOrigin eOrigin)
  Utf8StringPointer _GetGlyphForXboxOrigin(IntPtr self, XboxOrigin eOrigin)
  string GetGlyphForXboxOrigin(XboxOrigin eOrigin)
  InputActionOrigin _GetActionOriginFromXboxOrigin(IntPtr self, InputHandle_t inputHandle, XboxOrigin eOrigin)
  InputActionOrigin GetActionOriginFromXboxOrigin(InputHandle_t inputHandle, XboxOrigin eOrigin)
  InputActionOrigin _TranslateActionOrigin(IntPtr self, InputType eDestinationInputType, InputActionOrigin eSourceOrigin)
  InputActionOrigin TranslateActionOrigin(InputType eDestinationInputType, InputActionOrigin eSourceOrigin)
  bool _GetDeviceBindingRevision(IntPtr self, InputHandle_t inputHandle, Int32& pMajor, Int32& pMinor)
  bool GetDeviceBindingRevision(InputHandle_t inputHandle, Int32& pMajor, Int32& pMinor)
  UInt32 _GetRemotePlaySessionID(IntPtr self, InputHandle_t inputHandle)
  UInt32 GetRemotePlaySessionID(InputHandle_t inputHandle)
  ushort _GetSessionInputConfigurationSettings(IntPtr self)
  ushort GetSessionInputConfigurationSettings()
--------------------------------------------------
Класс: Steamworks.ISteamInventory
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamInventory_v003()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerInventory_v003()
  IntPtr GetServerInterfacePointer()
  Result _GetResultStatus(IntPtr self, SteamInventoryResult_t resultHandle)
  Result GetResultStatus(SteamInventoryResult_t resultHandle)
  bool _GetResultItems(IntPtr self, SteamInventoryResult_t resultHandle, SteamItemDetails_t[] pOutItemsArray, UInt32& punOutItemsArraySize)
  bool GetResultItems(SteamInventoryResult_t resultHandle, SteamItemDetails_t[] pOutItemsArray, UInt32& punOutItemsArraySize)
  bool _GetResultItemProperty(IntPtr self, SteamInventoryResult_t resultHandle, UInt32 unItemIndex, string pchPropertyName, IntPtr pchValueBuffer, UInt32& punValueBufferSizeOut)
  bool GetResultItemProperty(SteamInventoryResult_t resultHandle, UInt32 unItemIndex, string pchPropertyName, String& pchValueBuffer, UInt32& punValueBufferSizeOut)
  UInt32 _GetResultTimestamp(IntPtr self, SteamInventoryResult_t resultHandle)
  UInt32 GetResultTimestamp(SteamInventoryResult_t resultHandle)
  bool _CheckResultSteamID(IntPtr self, SteamInventoryResult_t resultHandle, SteamId steamIDExpected)
  bool CheckResultSteamID(SteamInventoryResult_t resultHandle, SteamId steamIDExpected)
  void _DestroyResult(IntPtr self, SteamInventoryResult_t resultHandle)
  void DestroyResult(SteamInventoryResult_t resultHandle)
  bool _GetAllItems(IntPtr self, SteamInventoryResult_t& pResultHandle)
  bool GetAllItems(SteamInventoryResult_t& pResultHandle)
  bool _GetItemsByID(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryItemId& pInstanceIDs, UInt32 unCountInstanceIDs)
  bool GetItemsByID(SteamInventoryResult_t& pResultHandle, InventoryItemId& pInstanceIDs, UInt32 unCountInstanceIDs)
  bool _SerializeResult(IntPtr self, SteamInventoryResult_t resultHandle, IntPtr pOutBuffer, UInt32& punOutBufferSize)
  bool SerializeResult(SteamInventoryResult_t resultHandle, IntPtr pOutBuffer, UInt32& punOutBufferSize)
  bool _DeserializeResult(IntPtr self, SteamInventoryResult_t& pOutResultHandle, IntPtr pBuffer, UInt32 unBufferSize, bool bRESERVED_MUST_BE_FALSE)
  bool DeserializeResult(SteamInventoryResult_t& pOutResultHandle, IntPtr pBuffer, UInt32 unBufferSize, bool bRESERVED_MUST_BE_FALSE)
  bool _GenerateItems(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryDefId[] pArrayItemDefs, UInt32[] punArrayQuantity, UInt32 unArrayLength)
  bool GenerateItems(SteamInventoryResult_t& pResultHandle, InventoryDefId[] pArrayItemDefs, UInt32[] punArrayQuantity, UInt32 unArrayLength)
  bool _GrantPromoItems(IntPtr self, SteamInventoryResult_t& pResultHandle)
  bool GrantPromoItems(SteamInventoryResult_t& pResultHandle)
  bool _AddPromoItem(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryDefId itemDef)
  bool AddPromoItem(SteamInventoryResult_t& pResultHandle, InventoryDefId itemDef)
  bool _AddPromoItems(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryDefId[] pArrayItemDefs, UInt32 unArrayLength)
  bool AddPromoItems(SteamInventoryResult_t& pResultHandle, InventoryDefId[] pArrayItemDefs, UInt32 unArrayLength)
  bool _ConsumeItem(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryItemId itemConsume, UInt32 unQuantity)
  bool ConsumeItem(SteamInventoryResult_t& pResultHandle, InventoryItemId itemConsume, UInt32 unQuantity)
  bool _ExchangeItems(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryDefId[] pArrayGenerate, UInt32[] punArrayGenerateQuantity, UInt32 unArrayGenerateLength, InventoryItemId[] pArrayDestroy, UInt32[] punArrayDestroyQuantity, UInt32 unArrayDestroyLength)
  bool ExchangeItems(SteamInventoryResult_t& pResultHandle, InventoryDefId[] pArrayGenerate, UInt32[] punArrayGenerateQuantity, UInt32 unArrayGenerateLength, InventoryItemId[] pArrayDestroy, UInt32[] punArrayDestroyQuantity, UInt32 unArrayDestroyLength)
  bool _TransferItemQuantity(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryItemId itemIdSource, UInt32 unQuantity, InventoryItemId itemIdDest)
  bool TransferItemQuantity(SteamInventoryResult_t& pResultHandle, InventoryItemId itemIdSource, UInt32 unQuantity, InventoryItemId itemIdDest)
  void _SendItemDropHeartbeat(IntPtr self)
  void SendItemDropHeartbeat()
  bool _TriggerItemDrop(IntPtr self, SteamInventoryResult_t& pResultHandle, InventoryDefId dropListDefinition)
  bool TriggerItemDrop(SteamInventoryResult_t& pResultHandle, InventoryDefId dropListDefinition)
  bool _TradeItems(IntPtr self, SteamInventoryResult_t& pResultHandle, SteamId steamIDTradePartner, InventoryItemId[] pArrayGive, UInt32[] pArrayGiveQuantity, UInt32 nArrayGiveLength, InventoryItemId[] pArrayGet, UInt32[] pArrayGetQuantity, UInt32 nArrayGetLength)
  bool TradeItems(SteamInventoryResult_t& pResultHandle, SteamId steamIDTradePartner, InventoryItemId[] pArrayGive, UInt32[] pArrayGiveQuantity, UInt32 nArrayGiveLength, InventoryItemId[] pArrayGet, UInt32[] pArrayGetQuantity, UInt32 nArrayGetLength)
  bool _LoadItemDefinitions(IntPtr self)
  bool LoadItemDefinitions()
  bool _GetItemDefinitionIDs(IntPtr self, InventoryDefId[] pItemDefIDs, UInt32& punItemDefIDsArraySize)
  bool GetItemDefinitionIDs(InventoryDefId[] pItemDefIDs, UInt32& punItemDefIDsArraySize)
  bool _GetItemDefinitionProperty(IntPtr self, InventoryDefId iDefinition, string pchPropertyName, IntPtr pchValueBuffer, UInt32& punValueBufferSizeOut)
  bool GetItemDefinitionProperty(InventoryDefId iDefinition, string pchPropertyName, String& pchValueBuffer, UInt32& punValueBufferSizeOut)
  SteamAPICall_t _RequestEligiblePromoItemDefinitionsIDs(IntPtr self, SteamId steamID)
  CallResult`1<SteamInventoryEligiblePromoItemDefIDs_t> RequestEligiblePromoItemDefinitionsIDs(SteamId steamID)
  bool _GetEligiblePromoItemDefinitionIDs(IntPtr self, SteamId steamID, InventoryDefId[] pItemDefIDs, UInt32& punItemDefIDsArraySize)
  bool GetEligiblePromoItemDefinitionIDs(SteamId steamID, InventoryDefId[] pItemDefIDs, UInt32& punItemDefIDsArraySize)
  SteamAPICall_t _StartPurchase(IntPtr self, InventoryDefId[] pArrayItemDefs, UInt32[] punArrayQuantity, UInt32 unArrayLength)
  CallResult`1<SteamInventoryStartPurchaseResult_t> StartPurchase(InventoryDefId[] pArrayItemDefs, UInt32[] punArrayQuantity, UInt32 unArrayLength)
  SteamAPICall_t _RequestPrices(IntPtr self)
  CallResult`1<SteamInventoryRequestPricesResult_t> RequestPrices()
  UInt32 _GetNumItemsWithPrices(IntPtr self)
  UInt32 GetNumItemsWithPrices()
  bool _GetItemsWithPrices(IntPtr self, InventoryDefId[] pArrayItemDefs, UInt64[] pCurrentPrices, UInt64[] pBasePrices, UInt32 unArrayLength)
  bool GetItemsWithPrices(InventoryDefId[] pArrayItemDefs, UInt64[] pCurrentPrices, UInt64[] pBasePrices, UInt32 unArrayLength)
  bool _GetItemPrice(IntPtr self, InventoryDefId iDefinition, UInt64& pCurrentPrice, UInt64& pBasePrice)
  bool GetItemPrice(InventoryDefId iDefinition, UInt64& pCurrentPrice, UInt64& pBasePrice)
  SteamInventoryUpdateHandle_t _StartUpdateProperties(IntPtr self)
  SteamInventoryUpdateHandle_t StartUpdateProperties()
  bool _RemoveProperty(IntPtr self, SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName)
  bool RemoveProperty(SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName)
  bool _SetProperty(IntPtr self, SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, string pchPropertyValue)
  bool SetProperty(SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, string pchPropertyValue)
  bool _SetProperty(IntPtr self, SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, bool bValue)
  bool SetProperty(SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, bool bValue)
  bool _SetProperty(IntPtr self, SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, long nValue)
  bool SetProperty(SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, long nValue)
  bool _SetProperty(IntPtr self, SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, float flValue)
  bool SetProperty(SteamInventoryUpdateHandle_t handle, InventoryItemId nItemID, string pchPropertyName, float flValue)
  bool _SubmitUpdateProperties(IntPtr self, SteamInventoryUpdateHandle_t handle, SteamInventoryResult_t& pResultHandle)
  bool SubmitUpdateProperties(SteamInventoryUpdateHandle_t handle, SteamInventoryResult_t& pResultHandle)
  bool _InspectItem(IntPtr self, SteamInventoryResult_t& pResultHandle, string pchItemToken)
  bool InspectItem(SteamInventoryResult_t& pResultHandle, string pchItemToken)
--------------------------------------------------
Класс: Steamworks.ISteamMatchmaking
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamMatchmaking_v009()
  IntPtr GetUserInterfacePointer()
  int _GetFavoriteGameCount(IntPtr self)
  int GetFavoriteGameCount()
  bool _GetFavoriteGame(IntPtr self, int iGame, AppId& pnAppID, UInt32& pnIP, UInt16& pnConnPort, UInt16& pnQueryPort, UInt32& punFlags, UInt32& pRTime32LastPlayedOnServer)
  bool GetFavoriteGame(int iGame, AppId& pnAppID, UInt32& pnIP, UInt16& pnConnPort, UInt16& pnQueryPort, UInt32& punFlags, UInt32& pRTime32LastPlayedOnServer)
  int _AddFavoriteGame(IntPtr self, AppId nAppID, UInt32 nIP, ushort nConnPort, ushort nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer)
  int AddFavoriteGame(AppId nAppID, UInt32 nIP, ushort nConnPort, ushort nQueryPort, UInt32 unFlags, UInt32 rTime32LastPlayedOnServer)
  bool _RemoveFavoriteGame(IntPtr self, AppId nAppID, UInt32 nIP, ushort nConnPort, ushort nQueryPort, UInt32 unFlags)
  bool RemoveFavoriteGame(AppId nAppID, UInt32 nIP, ushort nConnPort, ushort nQueryPort, UInt32 unFlags)
  SteamAPICall_t _RequestLobbyList(IntPtr self)
  CallResult`1<LobbyMatchList_t> RequestLobbyList()
  void _AddRequestLobbyListStringFilter(IntPtr self, string pchKeyToMatch, string pchValueToMatch, LobbyComparison eComparisonType)
  void AddRequestLobbyListStringFilter(string pchKeyToMatch, string pchValueToMatch, LobbyComparison eComparisonType)
  void _AddRequestLobbyListNumericalFilter(IntPtr self, string pchKeyToMatch, int nValueToMatch, LobbyComparison eComparisonType)
  void AddRequestLobbyListNumericalFilter(string pchKeyToMatch, int nValueToMatch, LobbyComparison eComparisonType)
  void _AddRequestLobbyListNearValueFilter(IntPtr self, string pchKeyToMatch, int nValueToBeCloseTo)
  void AddRequestLobbyListNearValueFilter(string pchKeyToMatch, int nValueToBeCloseTo)
  void _AddRequestLobbyListFilterSlotsAvailable(IntPtr self, int nSlotsAvailable)
  void AddRequestLobbyListFilterSlotsAvailable(int nSlotsAvailable)
  void _AddRequestLobbyListDistanceFilter(IntPtr self, LobbyDistanceFilter eLobbyDistanceFilter)
  void AddRequestLobbyListDistanceFilter(LobbyDistanceFilter eLobbyDistanceFilter)
  void _AddRequestLobbyListResultCountFilter(IntPtr self, int cMaxResults)
  void AddRequestLobbyListResultCountFilter(int cMaxResults)
  void _AddRequestLobbyListCompatibleMembersFilter(IntPtr self, SteamId steamIDLobby)
  void AddRequestLobbyListCompatibleMembersFilter(SteamId steamIDLobby)
  SteamId _GetLobbyByIndex(IntPtr self, int iLobby)
  SteamId GetLobbyByIndex(int iLobby)
  SteamAPICall_t _CreateLobby(IntPtr self, LobbyType eLobbyType, int cMaxMembers)
  CallResult`1<LobbyCreated_t> CreateLobby(LobbyType eLobbyType, int cMaxMembers)
  SteamAPICall_t _JoinLobby(IntPtr self, SteamId steamIDLobby)
  CallResult`1<LobbyEnter_t> JoinLobby(SteamId steamIDLobby)
  void _LeaveLobby(IntPtr self, SteamId steamIDLobby)
  void LeaveLobby(SteamId steamIDLobby)
  bool _InviteUserToLobby(IntPtr self, SteamId steamIDLobby, SteamId steamIDInvitee)
  bool InviteUserToLobby(SteamId steamIDLobby, SteamId steamIDInvitee)
  int _GetNumLobbyMembers(IntPtr self, SteamId steamIDLobby)
  int GetNumLobbyMembers(SteamId steamIDLobby)
  SteamId _GetLobbyMemberByIndex(IntPtr self, SteamId steamIDLobby, int iMember)
  SteamId GetLobbyMemberByIndex(SteamId steamIDLobby, int iMember)
  Utf8StringPointer _GetLobbyData(IntPtr self, SteamId steamIDLobby, string pchKey)
  string GetLobbyData(SteamId steamIDLobby, string pchKey)
  bool _SetLobbyData(IntPtr self, SteamId steamIDLobby, string pchKey, string pchValue)
  bool SetLobbyData(SteamId steamIDLobby, string pchKey, string pchValue)
  int _GetLobbyDataCount(IntPtr self, SteamId steamIDLobby)
  int GetLobbyDataCount(SteamId steamIDLobby)
  bool _GetLobbyDataByIndex(IntPtr self, SteamId steamIDLobby, int iLobbyData, IntPtr pchKey, int cchKeyBufferSize, IntPtr pchValue, int cchValueBufferSize)
  bool GetLobbyDataByIndex(SteamId steamIDLobby, int iLobbyData, String& pchKey, String& pchValue)
  bool _DeleteLobbyData(IntPtr self, SteamId steamIDLobby, string pchKey)
  bool DeleteLobbyData(SteamId steamIDLobby, string pchKey)
  Utf8StringPointer _GetLobbyMemberData(IntPtr self, SteamId steamIDLobby, SteamId steamIDUser, string pchKey)
  string GetLobbyMemberData(SteamId steamIDLobby, SteamId steamIDUser, string pchKey)
  void _SetLobbyMemberData(IntPtr self, SteamId steamIDLobby, string pchKey, string pchValue)
  void SetLobbyMemberData(SteamId steamIDLobby, string pchKey, string pchValue)
  bool _SendLobbyChatMsg(IntPtr self, SteamId steamIDLobby, IntPtr pvMsgBody, int cubMsgBody)
  bool SendLobbyChatMsg(SteamId steamIDLobby, IntPtr pvMsgBody, int cubMsgBody)
  int _GetLobbyChatEntry(IntPtr self, SteamId steamIDLobby, int iChatID, SteamId& pSteamIDUser, IntPtr pvData, int cubData, ChatEntryType& peChatEntryType)
  int GetLobbyChatEntry(SteamId steamIDLobby, int iChatID, SteamId& pSteamIDUser, IntPtr pvData, int cubData, ChatEntryType& peChatEntryType)
  bool _RequestLobbyData(IntPtr self, SteamId steamIDLobby)
  bool RequestLobbyData(SteamId steamIDLobby)
  void _SetLobbyGameServer(IntPtr self, SteamId steamIDLobby, UInt32 unGameServerIP, ushort unGameServerPort, SteamId steamIDGameServer)
  void SetLobbyGameServer(SteamId steamIDLobby, UInt32 unGameServerIP, ushort unGameServerPort, SteamId steamIDGameServer)
  bool _GetLobbyGameServer(IntPtr self, SteamId steamIDLobby, UInt32& punGameServerIP, UInt16& punGameServerPort, SteamId& psteamIDGameServer)
  bool GetLobbyGameServer(SteamId steamIDLobby, UInt32& punGameServerIP, UInt16& punGameServerPort, SteamId& psteamIDGameServer)
  bool _SetLobbyMemberLimit(IntPtr self, SteamId steamIDLobby, int cMaxMembers)
  bool SetLobbyMemberLimit(SteamId steamIDLobby, int cMaxMembers)
  int _GetLobbyMemberLimit(IntPtr self, SteamId steamIDLobby)
  int GetLobbyMemberLimit(SteamId steamIDLobby)
  bool _SetLobbyType(IntPtr self, SteamId steamIDLobby, LobbyType eLobbyType)
  bool SetLobbyType(SteamId steamIDLobby, LobbyType eLobbyType)
  bool _SetLobbyJoinable(IntPtr self, SteamId steamIDLobby, bool bLobbyJoinable)
  bool SetLobbyJoinable(SteamId steamIDLobby, bool bLobbyJoinable)
  SteamId _GetLobbyOwner(IntPtr self, SteamId steamIDLobby)
  SteamId GetLobbyOwner(SteamId steamIDLobby)
  bool _SetLobbyOwner(IntPtr self, SteamId steamIDLobby, SteamId steamIDNewOwner)
  bool SetLobbyOwner(SteamId steamIDLobby, SteamId steamIDNewOwner)
  bool _SetLinkedLobby(IntPtr self, SteamId steamIDLobby, SteamId steamIDLobbyDependent)
  bool SetLinkedLobby(SteamId steamIDLobby, SteamId steamIDLobbyDependent)
--------------------------------------------------
Класс: Steamworks.ISteamMatchmakingPingResponse
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  void _ServerResponded(IntPtr self, gameserveritem_t& server)
  void ServerResponded(gameserveritem_t& server)
  void _ServerFailedToRespond(IntPtr self)
  void ServerFailedToRespond()
--------------------------------------------------
Класс: Steamworks.ISteamMatchmakingPlayersResponse
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  void _AddPlayerToList(IntPtr self, string pchName, int nScore, float flTimePlayed)
  void AddPlayerToList(string pchName, int nScore, float flTimePlayed)
  void _PlayersFailedToRespond(IntPtr self)
  void PlayersFailedToRespond()
  void _PlayersRefreshComplete(IntPtr self)
  void PlayersRefreshComplete()
--------------------------------------------------
Класс: Steamworks.ISteamMatchmakingRulesResponse
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  void _RulesResponded(IntPtr self, string pchRule, string pchValue)
  void RulesResponded(string pchRule, string pchValue)
  void _RulesFailedToRespond(IntPtr self)
  void RulesFailedToRespond()
  void _RulesRefreshComplete(IntPtr self)
  void RulesRefreshComplete()
--------------------------------------------------
Класс: Steamworks.ISteamMatchmakingServerListResponse
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  void _ServerResponded(IntPtr self, HServerListRequest hRequest, int iServer)
  void ServerResponded(HServerListRequest hRequest, int iServer)
  void _ServerFailedToRespond(IntPtr self, HServerListRequest hRequest, int iServer)
  void ServerFailedToRespond(HServerListRequest hRequest, int iServer)
  void _RefreshComplete(IntPtr self, HServerListRequest hRequest, MatchMakingServerResponse response)
  void RefreshComplete(HServerListRequest hRequest, MatchMakingServerResponse response)
--------------------------------------------------
Класс: Steamworks.ISteamMatchmakingServers
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamMatchmakingServers_v002()
  IntPtr GetUserInterfacePointer()
  HServerListRequest _RequestInternetServerList(IntPtr self, AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest RequestInternetServerList(AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest _RequestLANServerList(IntPtr self, AppId iApp, IntPtr pRequestServersResponse)
  HServerListRequest RequestLANServerList(AppId iApp, IntPtr pRequestServersResponse)
  HServerListRequest _RequestFriendsServerList(IntPtr self, AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest RequestFriendsServerList(AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest _RequestFavoritesServerList(IntPtr self, AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest RequestFavoritesServerList(AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest _RequestHistoryServerList(IntPtr self, AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest RequestHistoryServerList(AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest _RequestSpectatorServerList(IntPtr self, AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  HServerListRequest RequestSpectatorServerList(AppId iApp, MatchMakingKeyValuePair[]& ppchFilters, UInt32 nFilters, IntPtr pRequestServersResponse)
  void _ReleaseRequest(IntPtr self, HServerListRequest hServerListRequest)
  void ReleaseRequest(HServerListRequest hServerListRequest)
  IntPtr _GetServerDetails(IntPtr self, HServerListRequest hRequest, int iServer)
  gameserveritem_t GetServerDetails(HServerListRequest hRequest, int iServer)
  void _CancelQuery(IntPtr self, HServerListRequest hRequest)
  void CancelQuery(HServerListRequest hRequest)
  void _RefreshQuery(IntPtr self, HServerListRequest hRequest)
  void RefreshQuery(HServerListRequest hRequest)
  bool _IsRefreshing(IntPtr self, HServerListRequest hRequest)
  bool IsRefreshing(HServerListRequest hRequest)
  int _GetServerCount(IntPtr self, HServerListRequest hRequest)
  int GetServerCount(HServerListRequest hRequest)
  void _RefreshServer(IntPtr self, HServerListRequest hRequest, int iServer)
  void RefreshServer(HServerListRequest hRequest, int iServer)
  HServerQuery _PingServer(IntPtr self, UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
  HServerQuery PingServer(UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
  HServerQuery _PlayerDetails(IntPtr self, UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
  HServerQuery PlayerDetails(UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
  HServerQuery _ServerRules(IntPtr self, UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
  HServerQuery ServerRules(UInt32 unIP, ushort usPort, IntPtr pRequestServersResponse)
  void _CancelServerQuery(IntPtr self, HServerQuery hServerQuery)
  void CancelServerQuery(HServerQuery hServerQuery)
--------------------------------------------------
Класс: Steamworks.ISteamMusic
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamMusic_v001()
  IntPtr GetUserInterfacePointer()
  bool _BIsEnabled(IntPtr self)
  bool BIsEnabled()
  bool _BIsPlaying(IntPtr self)
  bool BIsPlaying()
  MusicStatus _GetPlaybackStatus(IntPtr self)
  MusicStatus GetPlaybackStatus()
  void _Play(IntPtr self)
  void Play()
  void _Pause(IntPtr self)
  void Pause()
  void _PlayPrevious(IntPtr self)
  void PlayPrevious()
  void _PlayNext(IntPtr self)
  void PlayNext()
  void _SetVolume(IntPtr self, float flVolume)
  void SetVolume(float flVolume)
  float _GetVolume(IntPtr self)
  float GetVolume()
--------------------------------------------------
Класс: Steamworks.ISteamMusicRemote
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamMusicRemote_v001()
  IntPtr GetUserInterfacePointer()
  bool _RegisterSteamMusicRemote(IntPtr self, string pchName)
  bool RegisterSteamMusicRemote(string pchName)
  bool _DeregisterSteamMusicRemote(IntPtr self)
  bool DeregisterSteamMusicRemote()
  bool _BIsCurrentMusicRemote(IntPtr self)
  bool BIsCurrentMusicRemote()
  bool _BActivationSuccess(IntPtr self, bool bValue)
  bool BActivationSuccess(bool bValue)
  bool _SetDisplayName(IntPtr self, string pchDisplayName)
  bool SetDisplayName(string pchDisplayName)
  bool _SetPNGIcon_64x64(IntPtr self, IntPtr pvBuffer, UInt32 cbBufferLength)
  bool SetPNGIcon_64x64(IntPtr pvBuffer, UInt32 cbBufferLength)
  bool _EnablePlayPrevious(IntPtr self, bool bValue)
  bool EnablePlayPrevious(bool bValue)
  bool _EnablePlayNext(IntPtr self, bool bValue)
  bool EnablePlayNext(bool bValue)
  bool _EnableShuffled(IntPtr self, bool bValue)
  bool EnableShuffled(bool bValue)
  bool _EnableLooped(IntPtr self, bool bValue)
  bool EnableLooped(bool bValue)
  bool _EnableQueue(IntPtr self, bool bValue)
  bool EnableQueue(bool bValue)
  bool _EnablePlaylists(IntPtr self, bool bValue)
  bool EnablePlaylists(bool bValue)
  bool _UpdatePlaybackStatus(IntPtr self, MusicStatus nStatus)
  bool UpdatePlaybackStatus(MusicStatus nStatus)
  bool _UpdateShuffled(IntPtr self, bool bValue)
  bool UpdateShuffled(bool bValue)
  bool _UpdateLooped(IntPtr self, bool bValue)
  bool UpdateLooped(bool bValue)
  bool _UpdateVolume(IntPtr self, float flValue)
  bool UpdateVolume(float flValue)
  bool _CurrentEntryWillChange(IntPtr self)
  bool CurrentEntryWillChange()
  bool _CurrentEntryIsAvailable(IntPtr self, bool bAvailable)
  bool CurrentEntryIsAvailable(bool bAvailable)
  bool _UpdateCurrentEntryText(IntPtr self, string pchText)
  bool UpdateCurrentEntryText(string pchText)
  bool _UpdateCurrentEntryElapsedSeconds(IntPtr self, int nValue)
  bool UpdateCurrentEntryElapsedSeconds(int nValue)
  bool _UpdateCurrentEntryCoverArt(IntPtr self, IntPtr pvBuffer, UInt32 cbBufferLength)
  bool UpdateCurrentEntryCoverArt(IntPtr pvBuffer, UInt32 cbBufferLength)
  bool _CurrentEntryDidChange(IntPtr self)
  bool CurrentEntryDidChange()
  bool _QueueWillChange(IntPtr self)
  bool QueueWillChange()
  bool _ResetQueueEntries(IntPtr self)
  bool ResetQueueEntries()
  bool _SetQueueEntry(IntPtr self, int nID, int nPosition, string pchEntryText)
  bool SetQueueEntry(int nID, int nPosition, string pchEntryText)
  bool _SetCurrentQueueEntry(IntPtr self, int nID)
  bool SetCurrentQueueEntry(int nID)
  bool _QueueDidChange(IntPtr self)
  bool QueueDidChange()
  bool _PlaylistWillChange(IntPtr self)
  bool PlaylistWillChange()
  bool _ResetPlaylistEntries(IntPtr self)
  bool ResetPlaylistEntries()
  bool _SetPlaylistEntry(IntPtr self, int nID, int nPosition, string pchEntryText)
  bool SetPlaylistEntry(int nID, int nPosition, string pchEntryText)
  bool _SetCurrentPlaylistEntry(IntPtr self, int nID)
  bool SetCurrentPlaylistEntry(int nID)
  bool _PlaylistDidChange(IntPtr self)
  bool PlaylistDidChange()
--------------------------------------------------
Класс: Steamworks.ISteamNetworking
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamNetworking_v006()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerNetworking_v006()
  IntPtr GetServerInterfacePointer()
  bool _SendP2PPacket(IntPtr self, SteamId steamIDRemote, IntPtr pubData, UInt32 cubData, P2PSend eP2PSendType, int nChannel)
  bool SendP2PPacket(SteamId steamIDRemote, IntPtr pubData, UInt32 cubData, P2PSend eP2PSendType, int nChannel)
  bool _IsP2PPacketAvailable(IntPtr self, UInt32& pcubMsgSize, int nChannel)
  bool IsP2PPacketAvailable(UInt32& pcubMsgSize, int nChannel)
  bool _ReadP2PPacket(IntPtr self, IntPtr pubDest, UInt32 cubDest, UInt32& pcubMsgSize, SteamId& psteamIDRemote, int nChannel)
  bool ReadP2PPacket(IntPtr pubDest, UInt32 cubDest, UInt32& pcubMsgSize, SteamId& psteamIDRemote, int nChannel)
  bool _AcceptP2PSessionWithUser(IntPtr self, SteamId steamIDRemote)
  bool AcceptP2PSessionWithUser(SteamId steamIDRemote)
  bool _CloseP2PSessionWithUser(IntPtr self, SteamId steamIDRemote)
  bool CloseP2PSessionWithUser(SteamId steamIDRemote)
  bool _CloseP2PChannelWithUser(IntPtr self, SteamId steamIDRemote, int nChannel)
  bool CloseP2PChannelWithUser(SteamId steamIDRemote, int nChannel)
  bool _GetP2PSessionState(IntPtr self, SteamId steamIDRemote, P2PSessionState_t& pConnectionState)
  bool GetP2PSessionState(SteamId steamIDRemote, P2PSessionState_t& pConnectionState)
  bool _AllowP2PPacketRelay(IntPtr self, bool bAllow)
  bool AllowP2PPacketRelay(bool bAllow)
  SNetSocket_t _CreateP2PConnectionSocket(IntPtr self, SteamId steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay)
  SNetSocket_t CreateP2PConnectionSocket(SteamId steamIDTarget, int nVirtualPort, int nTimeoutSec, bool bAllowUseOfPacketRelay)
--------------------------------------------------
Класс: Steamworks.ISteamNetworkingFakeUDPPort
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  void _DestroyFakeUDPPort(IntPtr self)
  void DestroyFakeUDPPort()
  Result _SendMessageToFakeIP(IntPtr self, NetAddress& remoteAddress, IntPtr pData, UInt32 cbData, int nSendFlags)
  Result SendMessageToFakeIP(NetAddress& remoteAddress, IntPtr pData, UInt32 cbData, int nSendFlags)
  int _ReceiveMessages(IntPtr self, IntPtr ppOutMessages, int nMaxMessages)
  int ReceiveMessages(IntPtr ppOutMessages, int nMaxMessages)
  void _ScheduleCleanup(IntPtr self, NetAddress& remoteAddress)
  void ScheduleCleanup(NetAddress& remoteAddress)
--------------------------------------------------
Класс: Steamworks.ISteamNetworkingMessages
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamNetworkingMessages_SteamAPI_v002()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerNetworkingMessages_SteamAPI_v002()
  IntPtr GetServerInterfacePointer()
  Result _SendMessageToUser(IntPtr self, NetIdentity& identityRemote, IntPtr[] pubData, UInt32 cubData, int nSendFlags, int nRemoteChannel)
  Result SendMessageToUser(NetIdentity& identityRemote, IntPtr[] pubData, UInt32 cubData, int nSendFlags, int nRemoteChannel)
  int _ReceiveMessagesOnChannel(IntPtr self, int nLocalChannel, IntPtr ppOutMessages, int nMaxMessages)
  int ReceiveMessagesOnChannel(int nLocalChannel, IntPtr ppOutMessages, int nMaxMessages)
  bool _AcceptSessionWithUser(IntPtr self, NetIdentity& identityRemote)
  bool AcceptSessionWithUser(NetIdentity& identityRemote)
  bool _CloseSessionWithUser(IntPtr self, NetIdentity& identityRemote)
  bool CloseSessionWithUser(NetIdentity& identityRemote)
  bool _CloseChannelWithUser(IntPtr self, NetIdentity& identityRemote, int nLocalChannel)
  bool CloseChannelWithUser(NetIdentity& identityRemote, int nLocalChannel)
  ConnectionState _GetSessionConnectionInfo(IntPtr self, NetIdentity& identityRemote, ConnectionInfo& pConnectionInfo, ConnectionStatus& pQuickStatus)
  ConnectionState GetSessionConnectionInfo(NetIdentity& identityRemote, ConnectionInfo& pConnectionInfo, ConnectionStatus& pQuickStatus)
--------------------------------------------------
Класс: Steamworks.ISteamNetworkingSockets
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamNetworkingSockets_SteamAPI_v012()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerNetworkingSockets_SteamAPI_v012()
  IntPtr GetServerInterfacePointer()
  Socket _CreateListenSocketIP(IntPtr self, NetAddress& localAddress, int nOptions, NetKeyValue[] pOptions)
  Socket CreateListenSocketIP(NetAddress& localAddress, int nOptions, NetKeyValue[] pOptions)
  Connection _ConnectByIPAddress(IntPtr self, NetAddress& address, int nOptions, NetKeyValue[] pOptions)
  Connection ConnectByIPAddress(NetAddress& address, int nOptions, NetKeyValue[] pOptions)
  Socket _CreateListenSocketP2P(IntPtr self, int nLocalVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Socket CreateListenSocketP2P(int nLocalVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Connection _ConnectP2P(IntPtr self, NetIdentity& identityRemote, int nRemoteVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Connection ConnectP2P(NetIdentity& identityRemote, int nRemoteVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Result _AcceptConnection(IntPtr self, Connection hConn)
  Result AcceptConnection(Connection hConn)
  bool _CloseConnection(IntPtr self, Connection hPeer, int nReason, string pszDebug, bool bEnableLinger)
  bool CloseConnection(Connection hPeer, int nReason, string pszDebug, bool bEnableLinger)
  bool _CloseListenSocket(IntPtr self, Socket hSocket)
  bool CloseListenSocket(Socket hSocket)
  bool _SetConnectionUserData(IntPtr self, Connection hPeer, long nUserData)
  bool SetConnectionUserData(Connection hPeer, long nUserData)
  long _GetConnectionUserData(IntPtr self, Connection hPeer)
  long GetConnectionUserData(Connection hPeer)
  void _SetConnectionName(IntPtr self, Connection hPeer, string pszName)
  void SetConnectionName(Connection hPeer, string pszName)
  bool _GetConnectionName(IntPtr self, Connection hPeer, IntPtr pszName, int nMaxLen)
  bool GetConnectionName(Connection hPeer, String& pszName)
  Result _SendMessageToConnection(IntPtr self, Connection hConn, IntPtr pData, UInt32 cbData, int nSendFlags, Int64& pOutMessageNumber)
  Result SendMessageToConnection(Connection hConn, IntPtr pData, UInt32 cbData, int nSendFlags, Int64& pOutMessageNumber)
  void _SendMessages(IntPtr self, int nMessages, NetMsg** pMessages, Int64* pOutMessageNumberOrResult)
  void SendMessages(int nMessages, NetMsg** pMessages, Int64* pOutMessageNumberOrResult)
  Result _FlushMessagesOnConnection(IntPtr self, Connection hConn)
  Result FlushMessagesOnConnection(Connection hConn)
  int _ReceiveMessagesOnConnection(IntPtr self, Connection hConn, IntPtr ppOutMessages, int nMaxMessages)
  int ReceiveMessagesOnConnection(Connection hConn, IntPtr ppOutMessages, int nMaxMessages)
  bool _GetConnectionInfo(IntPtr self, Connection hConn, ConnectionInfo& pInfo)
  bool GetConnectionInfo(Connection hConn, ConnectionInfo& pInfo)
  Result _GetConnectionRealTimeStatus(IntPtr self, Connection hConn, ConnectionStatus& pStatus, int nLanes, ConnectionLaneStatus[] pLanes)
  Result GetConnectionRealTimeStatus(Connection hConn, ConnectionStatus& pStatus, int nLanes, ConnectionLaneStatus[] pLanes)
  int _GetDetailedConnectionStatus(IntPtr self, Connection hConn, IntPtr pszBuf, int cbBuf)
  int GetDetailedConnectionStatus(Connection hConn, String& pszBuf)
  bool _GetListenSocketAddress(IntPtr self, Socket hSocket, NetAddress& address)
  bool GetListenSocketAddress(Socket hSocket, NetAddress& address)
  bool _CreateSocketPair(IntPtr self, Connection[] pOutConnection1, Connection[] pOutConnection2, bool bUseNetworkLoopback, NetIdentity& pIdentity1, NetIdentity& pIdentity2)
  bool CreateSocketPair(Connection[] pOutConnection1, Connection[] pOutConnection2, bool bUseNetworkLoopback, NetIdentity& pIdentity1, NetIdentity& pIdentity2)
  Result _ConfigureConnectionLanes(IntPtr self, Connection hConn, int nNumLanes, Int32[] pLanePriorities, UInt16[] pLaneWeights)
  Result ConfigureConnectionLanes(Connection hConn, int nNumLanes, Int32[] pLanePriorities, UInt16[] pLaneWeights)
  bool _GetIdentity(IntPtr self, NetIdentity& pIdentity)
  bool GetIdentity(NetIdentity& pIdentity)
  SteamNetworkingAvailability _InitAuthentication(IntPtr self)
  SteamNetworkingAvailability InitAuthentication()
  SteamNetworkingAvailability _GetAuthenticationStatus(IntPtr self, SteamNetAuthenticationStatus_t& pDetails)
  SteamNetworkingAvailability GetAuthenticationStatus(SteamNetAuthenticationStatus_t& pDetails)
  HSteamNetPollGroup _CreatePollGroup(IntPtr self)
  HSteamNetPollGroup CreatePollGroup()
  bool _DestroyPollGroup(IntPtr self, HSteamNetPollGroup hPollGroup)
  bool DestroyPollGroup(HSteamNetPollGroup hPollGroup)
  bool _SetConnectionPollGroup(IntPtr self, Connection hConn, HSteamNetPollGroup hPollGroup)
  bool SetConnectionPollGroup(Connection hConn, HSteamNetPollGroup hPollGroup)
  int _ReceiveMessagesOnPollGroup(IntPtr self, HSteamNetPollGroup hPollGroup, IntPtr ppOutMessages, int nMaxMessages)
  int ReceiveMessagesOnPollGroup(HSteamNetPollGroup hPollGroup, IntPtr ppOutMessages, int nMaxMessages)
  bool _ReceivedRelayAuthTicket(IntPtr self, IntPtr pvTicket, int cbTicket, SteamDatagramRelayAuthTicket[] pOutParsedTicket)
  bool ReceivedRelayAuthTicket(IntPtr pvTicket, int cbTicket, SteamDatagramRelayAuthTicket[] pOutParsedTicket)
  int _FindRelayAuthTicketForServer(IntPtr self, NetIdentity& identityGameServer, int nRemoteVirtualPort, SteamDatagramRelayAuthTicket[] pOutParsedTicket)
  int FindRelayAuthTicketForServer(NetIdentity& identityGameServer, int nRemoteVirtualPort, SteamDatagramRelayAuthTicket[] pOutParsedTicket)
  Connection _ConnectToHostedDedicatedServer(IntPtr self, NetIdentity& identityTarget, int nRemoteVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Connection ConnectToHostedDedicatedServer(NetIdentity& identityTarget, int nRemoteVirtualPort, int nOptions, NetKeyValue[] pOptions)
  ushort _GetHostedDedicatedServerPort(IntPtr self)
  ushort GetHostedDedicatedServerPort()
  SteamNetworkingPOPID _GetHostedDedicatedServerPOPID(IntPtr self)
  SteamNetworkingPOPID GetHostedDedicatedServerPOPID()
  Result _GetHostedDedicatedServerAddress(IntPtr self, SteamDatagramHostedAddress& pRouting)
  Result GetHostedDedicatedServerAddress(SteamDatagramHostedAddress& pRouting)
  Socket _CreateHostedDedicatedServerListenSocket(IntPtr self, int nLocalVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Socket CreateHostedDedicatedServerListenSocket(int nLocalVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Result _GetGameCoordinatorServerLogin(IntPtr self, SteamDatagramGameCoordinatorServerLogin& pLoginInfo, Int32& pcbSignedBlob, IntPtr pBlob)
  Result GetGameCoordinatorServerLogin(SteamDatagramGameCoordinatorServerLogin& pLoginInfo, Int32& pcbSignedBlob, IntPtr pBlob)
  Connection _ConnectP2PCustomSignaling(IntPtr self, IntPtr pSignaling, NetIdentity& pPeerIdentity, int nRemoteVirtualPort, int nOptions, NetKeyValue[] pOptions)
  Connection ConnectP2PCustomSignaling(IntPtr pSignaling, NetIdentity& pPeerIdentity, int nRemoteVirtualPort, int nOptions, NetKeyValue[] pOptions)
  bool _ReceivedP2PCustomSignal(IntPtr self, IntPtr pMsg, int cbMsg, IntPtr pContext)
  bool ReceivedP2PCustomSignal(IntPtr pMsg, int cbMsg, IntPtr pContext)
  bool _GetCertificateRequest(IntPtr self, Int32& pcbBlob, IntPtr pBlob, NetErrorMessage& errMsg)
  bool GetCertificateRequest(Int32& pcbBlob, IntPtr pBlob, NetErrorMessage& errMsg)
  bool _SetCertificate(IntPtr self, IntPtr pCertificate, int cbCertificate, NetErrorMessage& errMsg)
  bool SetCertificate(IntPtr pCertificate, int cbCertificate, NetErrorMessage& errMsg)
  void _ResetIdentity(IntPtr self, NetIdentity& pIdentity)
  void ResetIdentity(NetIdentity& pIdentity)
  void _RunCallbacks(IntPtr self)
  void RunCallbacks()
  bool _BeginAsyncRequestFakeIP(IntPtr self, int nNumPorts)
  bool BeginAsyncRequestFakeIP(int nNumPorts)
  void _GetFakeIP(IntPtr self, int idxFirstPort, SteamNetworkingFakeIPResult_t& pInfo)
  void GetFakeIP(int idxFirstPort, SteamNetworkingFakeIPResult_t& pInfo)
  Socket _CreateListenSocketP2PFakeIP(IntPtr self, int idxFakePort, int nOptions, NetKeyValue[] pOptions)
  Socket CreateListenSocketP2PFakeIP(int idxFakePort, int nOptions, NetKeyValue[] pOptions)
  Result _GetRemoteFakeIPForConnection(IntPtr self, Connection hConn, NetAddress[] pOutAddr)
  Result GetRemoteFakeIPForConnection(Connection hConn, NetAddress[] pOutAddr)
  IntPtr _CreateFakeUDPPort(IntPtr self, int idxFakeServerPort)
  IntPtr CreateFakeUDPPort(int idxFakeServerPort)
--------------------------------------------------
Класс: Steamworks.ISteamNetworkingUtils
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamNetworkingUtils_SteamAPI_v004()
  IntPtr GetGlobalInterfacePointer()
  NetMsg* _AllocateMessage(IntPtr self, int cbAllocateBuffer)
  NetMsg* AllocateMessage(int cbAllocateBuffer)
  void _InitRelayNetworkAccess(IntPtr self)
  void InitRelayNetworkAccess()
  SteamNetworkingAvailability _GetRelayNetworkStatus(IntPtr self, SteamRelayNetworkStatus_t& pDetails)
  SteamNetworkingAvailability GetRelayNetworkStatus(SteamRelayNetworkStatus_t& pDetails)
  float _GetLocalPingLocation(IntPtr self, NetPingLocation& result)
  float GetLocalPingLocation(NetPingLocation& result)
  int _EstimatePingTimeBetweenTwoLocations(IntPtr self, NetPingLocation& location1, NetPingLocation& location2)
  int EstimatePingTimeBetweenTwoLocations(NetPingLocation& location1, NetPingLocation& location2)
  int _EstimatePingTimeFromLocalHost(IntPtr self, NetPingLocation& remoteLocation)
  int EstimatePingTimeFromLocalHost(NetPingLocation& remoteLocation)
  void _ConvertPingLocationToString(IntPtr self, NetPingLocation& location, IntPtr pszBuf, int cchBufSize)
  void ConvertPingLocationToString(NetPingLocation& location, String& pszBuf)
  bool _ParsePingLocationString(IntPtr self, string pszString, NetPingLocation& result)
  bool ParsePingLocationString(string pszString, NetPingLocation& result)
  bool _CheckPingDataUpToDate(IntPtr self, float flMaxAgeSeconds)
  bool CheckPingDataUpToDate(float flMaxAgeSeconds)
  int _GetPingToDataCenter(IntPtr self, SteamNetworkingPOPID popID, SteamNetworkingPOPID& pViaRelayPoP)
  int GetPingToDataCenter(SteamNetworkingPOPID popID, SteamNetworkingPOPID& pViaRelayPoP)
  int _GetDirectPingToPOP(IntPtr self, SteamNetworkingPOPID popID)
  int GetDirectPingToPOP(SteamNetworkingPOPID popID)
  int _GetPOPCount(IntPtr self)
  int GetPOPCount()
  int _GetPOPList(IntPtr self, SteamNetworkingPOPID& list, int nListSz)
  int GetPOPList(SteamNetworkingPOPID& list, int nListSz)
  long _GetLocalTimestamp(IntPtr self)
  long GetLocalTimestamp()
  void _SetDebugOutputFunction(IntPtr self, NetDebugOutput eDetailLevel, NetDebugFunc pfnFunc)
  void SetDebugOutputFunction(NetDebugOutput eDetailLevel, NetDebugFunc pfnFunc)
  bool _IsFakeIPv4(IntPtr self, UInt32 nIPv4)
  bool IsFakeIPv4(UInt32 nIPv4)
  SteamNetworkingFakeIPType _GetIPv4FakeIPType(IntPtr self, UInt32 nIPv4)
  SteamNetworkingFakeIPType GetIPv4FakeIPType(UInt32 nIPv4)
  Result _GetRealIdentityForFakeIP(IntPtr self, NetAddress& fakeIP, NetIdentity[] pOutRealIdentity)
  Result GetRealIdentityForFakeIP(NetAddress& fakeIP, NetIdentity[] pOutRealIdentity)
  bool _SetGlobalConfigValueInt32(IntPtr self, NetConfig eValue, int val)
  bool SetGlobalConfigValueInt32(NetConfig eValue, int val)
  bool _SetGlobalConfigValueFloat(IntPtr self, NetConfig eValue, float val)
  bool SetGlobalConfigValueFloat(NetConfig eValue, float val)
  bool _SetGlobalConfigValueString(IntPtr self, NetConfig eValue, string val)
  bool SetGlobalConfigValueString(NetConfig eValue, string val)
  bool _SetGlobalConfigValuePtr(IntPtr self, NetConfig eValue, IntPtr val)
  bool SetGlobalConfigValuePtr(NetConfig eValue, IntPtr val)
  bool _SetConnectionConfigValueInt32(IntPtr self, Connection hConn, NetConfig eValue, int val)
  bool SetConnectionConfigValueInt32(Connection hConn, NetConfig eValue, int val)
  bool _SetConnectionConfigValueFloat(IntPtr self, Connection hConn, NetConfig eValue, float val)
  bool SetConnectionConfigValueFloat(Connection hConn, NetConfig eValue, float val)
  bool _SetConnectionConfigValueString(IntPtr self, Connection hConn, NetConfig eValue, string val)
  bool SetConnectionConfigValueString(Connection hConn, NetConfig eValue, string val)
  bool _SetGlobalCallback_SteamNetConnectionStatusChanged(IntPtr self, FnSteamNetConnectionStatusChanged fnCallback)
  bool SetGlobalCallback_SteamNetConnectionStatusChanged(FnSteamNetConnectionStatusChanged fnCallback)
  bool _SetGlobalCallback_SteamNetAuthenticationStatusChanged(IntPtr self, FnSteamNetAuthenticationStatusChanged fnCallback)
  bool SetGlobalCallback_SteamNetAuthenticationStatusChanged(FnSteamNetAuthenticationStatusChanged fnCallback)
  bool _SetGlobalCallback_SteamRelayNetworkStatusChanged(IntPtr self, FnSteamRelayNetworkStatusChanged fnCallback)
  bool SetGlobalCallback_SteamRelayNetworkStatusChanged(FnSteamRelayNetworkStatusChanged fnCallback)
  bool _SetGlobalCallback_FakeIPResult(IntPtr self, FnSteamNetworkingFakeIPResult fnCallback)
  bool SetGlobalCallback_FakeIPResult(FnSteamNetworkingFakeIPResult fnCallback)
  bool _SetGlobalCallback_MessagesSessionRequest(IntPtr self, FnSteamNetworkingMessagesSessionRequest fnCallback)
  bool SetGlobalCallback_MessagesSessionRequest(FnSteamNetworkingMessagesSessionRequest fnCallback)
  bool _SetGlobalCallback_MessagesSessionFailed(IntPtr self, FnSteamNetworkingMessagesSessionFailed fnCallback)
  bool SetGlobalCallback_MessagesSessionFailed(FnSteamNetworkingMessagesSessionFailed fnCallback)
  bool _SetConfigValue(IntPtr self, NetConfig eValue, NetConfigScope eScopeType, IntPtr scopeObj, NetConfigType eDataType, IntPtr pArg)
  bool SetConfigValue(NetConfig eValue, NetConfigScope eScopeType, IntPtr scopeObj, NetConfigType eDataType, IntPtr pArg)
  bool _SetConfigValueStruct(IntPtr self, NetKeyValue& opt, NetConfigScope eScopeType, IntPtr scopeObj)
  bool SetConfigValueStruct(NetKeyValue& opt, NetConfigScope eScopeType, IntPtr scopeObj)
  NetConfigResult _GetConfigValue(IntPtr self, NetConfig eValue, NetConfigScope eScopeType, IntPtr scopeObj, NetConfigType& pOutDataType, IntPtr pResult, UIntPtr& cbResult)
  NetConfigResult GetConfigValue(NetConfig eValue, NetConfigScope eScopeType, IntPtr scopeObj, NetConfigType& pOutDataType, IntPtr pResult, UIntPtr& cbResult)
  Utf8StringPointer _GetConfigValueInfo(IntPtr self, NetConfig eValue, NetConfigType& pOutDataType, NetConfigScope[] pOutScope)
  string GetConfigValueInfo(NetConfig eValue, NetConfigType& pOutDataType, NetConfigScope[] pOutScope)
  NetConfig _IterateGenericEditableConfigValues(IntPtr self, NetConfig eCurrent, bool bEnumerateDevVars)
  NetConfig IterateGenericEditableConfigValues(NetConfig eCurrent, bool bEnumerateDevVars)
  void _SteamNetworkingIPAddr_ToString(IntPtr self, NetAddress& addr, IntPtr buf, UInt32 cbBuf, bool bWithPort)
  void SteamNetworkingIPAddr_ToString(NetAddress& addr, String& buf, bool bWithPort)
  bool _SteamNetworkingIPAddr_ParseString(IntPtr self, NetAddress& pAddr, string pszStr)
  bool SteamNetworkingIPAddr_ParseString(NetAddress& pAddr, string pszStr)
  SteamNetworkingFakeIPType _SteamNetworkingIPAddr_GetFakeIPType(IntPtr self, NetAddress& addr)
  SteamNetworkingFakeIPType SteamNetworkingIPAddr_GetFakeIPType(NetAddress& addr)
  void _SteamNetworkingIdentity_ToString(IntPtr self, NetIdentity& identity, IntPtr buf, UInt32 cbBuf)
  void SteamNetworkingIdentity_ToString(NetIdentity& identity, String& buf)
  bool _SteamNetworkingIdentity_ParseString(IntPtr self, NetIdentity& pIdentity, string pszStr)
  bool SteamNetworkingIdentity_ParseString(NetIdentity& pIdentity, string pszStr)
--------------------------------------------------
Класс: Steamworks.ISteamParentalSettings
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamParentalSettings_v001()
  IntPtr GetUserInterfacePointer()
  bool _BIsParentalLockEnabled(IntPtr self)
  bool BIsParentalLockEnabled()
  bool _BIsParentalLockLocked(IntPtr self)
  bool BIsParentalLockLocked()
  bool _BIsAppBlocked(IntPtr self, AppId nAppID)
  bool BIsAppBlocked(AppId nAppID)
  bool _BIsAppInBlockList(IntPtr self, AppId nAppID)
  bool BIsAppInBlockList(AppId nAppID)
  bool _BIsFeatureBlocked(IntPtr self, ParentalFeature eFeature)
  bool BIsFeatureBlocked(ParentalFeature eFeature)
  bool _BIsFeatureInBlockList(IntPtr self, ParentalFeature eFeature)
  bool BIsFeatureInBlockList(ParentalFeature eFeature)
--------------------------------------------------
Класс: Steamworks.ISteamParties
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamParties_v002()
  IntPtr GetUserInterfacePointer()
  UInt32 _GetNumActiveBeacons(IntPtr self)
  UInt32 GetNumActiveBeacons()
  PartyBeaconID_t _GetBeaconByIndex(IntPtr self, UInt32 unIndex)
  PartyBeaconID_t GetBeaconByIndex(UInt32 unIndex)
  bool _GetBeaconDetails(IntPtr self, PartyBeaconID_t ulBeaconID, SteamId& pSteamIDBeaconOwner, SteamPartyBeaconLocation_t& pLocation, IntPtr pchMetadata, int cchMetadata)
  bool GetBeaconDetails(PartyBeaconID_t ulBeaconID, SteamId& pSteamIDBeaconOwner, SteamPartyBeaconLocation_t& pLocation, String& pchMetadata)
  SteamAPICall_t _JoinParty(IntPtr self, PartyBeaconID_t ulBeaconID)
  CallResult`1<JoinPartyCallback_t> JoinParty(PartyBeaconID_t ulBeaconID)
  bool _GetNumAvailableBeaconLocations(IntPtr self, UInt32& puNumLocations)
  bool GetNumAvailableBeaconLocations(UInt32& puNumLocations)
  bool _GetAvailableBeaconLocations(IntPtr self, SteamPartyBeaconLocation_t& pLocationList, UInt32 uMaxNumLocations)
  bool GetAvailableBeaconLocations(SteamPartyBeaconLocation_t& pLocationList, UInt32 uMaxNumLocations)
  SteamAPICall_t _CreateBeacon(IntPtr self, UInt32 unOpenSlots, SteamPartyBeaconLocation_t& pBeaconLocation, string pchConnectString, string pchMetadata)
  CallResult`1<CreateBeaconCallback_t> CreateBeacon(UInt32 unOpenSlots, SteamPartyBeaconLocation_t pBeaconLocation, string pchConnectString, string pchMetadata)
  void _OnReservationCompleted(IntPtr self, PartyBeaconID_t ulBeacon, SteamId steamIDUser)
  void OnReservationCompleted(PartyBeaconID_t ulBeacon, SteamId steamIDUser)
  void _CancelReservation(IntPtr self, PartyBeaconID_t ulBeacon, SteamId steamIDUser)
  void CancelReservation(PartyBeaconID_t ulBeacon, SteamId steamIDUser)
  SteamAPICall_t _ChangeNumOpenSlots(IntPtr self, PartyBeaconID_t ulBeacon, UInt32 unOpenSlots)
  CallResult`1<ChangeNumOpenSlotsCallback_t> ChangeNumOpenSlots(PartyBeaconID_t ulBeacon, UInt32 unOpenSlots)
  bool _DestroyBeacon(IntPtr self, PartyBeaconID_t ulBeacon)
  bool DestroyBeacon(PartyBeaconID_t ulBeacon)
  bool _GetBeaconLocationData(IntPtr self, SteamPartyBeaconLocation_t BeaconLocation, SteamPartyBeaconLocationData eData, IntPtr pchDataStringOut, int cchDataStringOut)
  bool GetBeaconLocationData(SteamPartyBeaconLocation_t BeaconLocation, SteamPartyBeaconLocationData eData, String& pchDataStringOut)
--------------------------------------------------
Класс: Steamworks.ISteamRemotePlay
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamRemotePlay_v001()
  IntPtr GetUserInterfacePointer()
  UInt32 _GetSessionCount(IntPtr self)
  UInt32 GetSessionCount()
  RemotePlaySessionID_t _GetSessionID(IntPtr self, int iSessionIndex)
  RemotePlaySessionID_t GetSessionID(int iSessionIndex)
  SteamId _GetSessionSteamID(IntPtr self, RemotePlaySessionID_t unSessionID)
  SteamId GetSessionSteamID(RemotePlaySessionID_t unSessionID)
  Utf8StringPointer _GetSessionClientName(IntPtr self, RemotePlaySessionID_t unSessionID)
  string GetSessionClientName(RemotePlaySessionID_t unSessionID)
  SteamDeviceFormFactor _GetSessionClientFormFactor(IntPtr self, RemotePlaySessionID_t unSessionID)
  SteamDeviceFormFactor GetSessionClientFormFactor(RemotePlaySessionID_t unSessionID)
  bool _BGetSessionClientResolution(IntPtr self, RemotePlaySessionID_t unSessionID, Int32& pnResolutionX, Int32& pnResolutionY)
  bool BGetSessionClientResolution(RemotePlaySessionID_t unSessionID, Int32& pnResolutionX, Int32& pnResolutionY)
  bool _BSendRemotePlayTogetherInvite(IntPtr self, SteamId steamIDFriend)
  bool BSendRemotePlayTogetherInvite(SteamId steamIDFriend)
--------------------------------------------------
Класс: Steamworks.ISteamRemoteStorage
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamRemoteStorage_v016()
  IntPtr GetUserInterfacePointer()
  bool _FileWrite(IntPtr self, string pchFile, IntPtr pvData, int cubData)
  bool FileWrite(string pchFile, IntPtr pvData, int cubData)
  int _FileRead(IntPtr self, string pchFile, IntPtr pvData, int cubDataToRead)
  int FileRead(string pchFile, IntPtr pvData, int cubDataToRead)
  SteamAPICall_t _FileWriteAsync(IntPtr self, string pchFile, IntPtr pvData, UInt32 cubData)
  CallResult`1<RemoteStorageFileWriteAsyncComplete_t> FileWriteAsync(string pchFile, IntPtr pvData, UInt32 cubData)
  SteamAPICall_t _FileReadAsync(IntPtr self, string pchFile, UInt32 nOffset, UInt32 cubToRead)
  CallResult`1<RemoteStorageFileReadAsyncComplete_t> FileReadAsync(string pchFile, UInt32 nOffset, UInt32 cubToRead)
  bool _FileReadAsyncComplete(IntPtr self, SteamAPICall_t hReadCall, IntPtr pvBuffer, UInt32 cubToRead)
  bool FileReadAsyncComplete(SteamAPICall_t hReadCall, IntPtr pvBuffer, UInt32 cubToRead)
  bool _FileForget(IntPtr self, string pchFile)
  bool FileForget(string pchFile)
  bool _FileDelete(IntPtr self, string pchFile)
  bool FileDelete(string pchFile)
  SteamAPICall_t _FileShare(IntPtr self, string pchFile)
  CallResult`1<RemoteStorageFileShareResult_t> FileShare(string pchFile)
  bool _SetSyncPlatforms(IntPtr self, string pchFile, RemoteStoragePlatform eRemoteStoragePlatform)
  bool SetSyncPlatforms(string pchFile, RemoteStoragePlatform eRemoteStoragePlatform)
  UGCFileWriteStreamHandle_t _FileWriteStreamOpen(IntPtr self, string pchFile)
  UGCFileWriteStreamHandle_t FileWriteStreamOpen(string pchFile)
  bool _FileWriteStreamWriteChunk(IntPtr self, UGCFileWriteStreamHandle_t writeHandle, IntPtr pvData, int cubData)
  bool FileWriteStreamWriteChunk(UGCFileWriteStreamHandle_t writeHandle, IntPtr pvData, int cubData)
  bool _FileWriteStreamClose(IntPtr self, UGCFileWriteStreamHandle_t writeHandle)
  bool FileWriteStreamClose(UGCFileWriteStreamHandle_t writeHandle)
  bool _FileWriteStreamCancel(IntPtr self, UGCFileWriteStreamHandle_t writeHandle)
  bool FileWriteStreamCancel(UGCFileWriteStreamHandle_t writeHandle)
  bool _FileExists(IntPtr self, string pchFile)
  bool FileExists(string pchFile)
  bool _FilePersisted(IntPtr self, string pchFile)
  bool FilePersisted(string pchFile)
  int _GetFileSize(IntPtr self, string pchFile)
  int GetFileSize(string pchFile)
  long _GetFileTimestamp(IntPtr self, string pchFile)
  long GetFileTimestamp(string pchFile)
  RemoteStoragePlatform _GetSyncPlatforms(IntPtr self, string pchFile)
  RemoteStoragePlatform GetSyncPlatforms(string pchFile)
  int _GetFileCount(IntPtr self)
  int GetFileCount()
  Utf8StringPointer _GetFileNameAndSize(IntPtr self, int iFile, Int32& pnFileSizeInBytes)
  string GetFileNameAndSize(int iFile, Int32& pnFileSizeInBytes)
  bool _GetQuota(IntPtr self, UInt64& pnTotalBytes, UInt64& puAvailableBytes)
  bool GetQuota(UInt64& pnTotalBytes, UInt64& puAvailableBytes)
  bool _IsCloudEnabledForAccount(IntPtr self)
  bool IsCloudEnabledForAccount()
  bool _IsCloudEnabledForApp(IntPtr self)
  bool IsCloudEnabledForApp()
  void _SetCloudEnabledForApp(IntPtr self, bool bEnabled)
  void SetCloudEnabledForApp(bool bEnabled)
  SteamAPICall_t _UGCDownload(IntPtr self, UGCHandle_t hContent, UInt32 unPriority)
  CallResult`1<RemoteStorageDownloadUGCResult_t> UGCDownload(UGCHandle_t hContent, UInt32 unPriority)
  bool _GetUGCDownloadProgress(IntPtr self, UGCHandle_t hContent, Int32& pnBytesDownloaded, Int32& pnBytesExpected)
  bool GetUGCDownloadProgress(UGCHandle_t hContent, Int32& pnBytesDownloaded, Int32& pnBytesExpected)
  bool _GetUGCDetails(IntPtr self, UGCHandle_t hContent, AppId& pnAppID, Char[]& ppchName, Int32& pnFileSizeInBytes, SteamId& pSteamIDOwner)
  bool GetUGCDetails(UGCHandle_t hContent, AppId& pnAppID, Char[]& ppchName, Int32& pnFileSizeInBytes, SteamId& pSteamIDOwner)
  int _UGCRead(IntPtr self, UGCHandle_t hContent, IntPtr pvData, int cubDataToRead, UInt32 cOffset, UGCReadAction eAction)
  int UGCRead(UGCHandle_t hContent, IntPtr pvData, int cubDataToRead, UInt32 cOffset, UGCReadAction eAction)
  int _GetCachedUGCCount(IntPtr self)
  int GetCachedUGCCount()
  UGCHandle_t _GetCachedUGCHandle(IntPtr self, int iCachedContent)
  UGCHandle_t GetCachedUGCHandle(int iCachedContent)
  SteamAPICall_t _UGCDownloadToLocation(IntPtr self, UGCHandle_t hContent, string pchLocation, UInt32 unPriority)
  CallResult`1<RemoteStorageDownloadUGCResult_t> UGCDownloadToLocation(UGCHandle_t hContent, string pchLocation, UInt32 unPriority)
  int _GetLocalFileChangeCount(IntPtr self)
  int GetLocalFileChangeCount()
  Utf8StringPointer _GetLocalFileChange(IntPtr self, int iFile, RemoteStorageLocalFileChange& pEChangeType, RemoteStorageFilePathType& pEFilePathType)
  string GetLocalFileChange(int iFile, RemoteStorageLocalFileChange& pEChangeType, RemoteStorageFilePathType& pEFilePathType)
  bool _BeginFileWriteBatch(IntPtr self)
  bool BeginFileWriteBatch()
  bool _EndFileWriteBatch(IntPtr self)
  bool EndFileWriteBatch()
--------------------------------------------------
Класс: Steamworks.ISteamScreenshots
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamScreenshots_v003()
  IntPtr GetUserInterfacePointer()
  ScreenshotHandle _WriteScreenshot(IntPtr self, IntPtr pubRGB, UInt32 cubRGB, int nWidth, int nHeight)
  ScreenshotHandle WriteScreenshot(IntPtr pubRGB, UInt32 cubRGB, int nWidth, int nHeight)
  ScreenshotHandle _AddScreenshotToLibrary(IntPtr self, string pchFilename, string pchThumbnailFilename, int nWidth, int nHeight)
  ScreenshotHandle AddScreenshotToLibrary(string pchFilename, string pchThumbnailFilename, int nWidth, int nHeight)
  void _TriggerScreenshot(IntPtr self)
  void TriggerScreenshot()
  void _HookScreenshots(IntPtr self, bool bHook)
  void HookScreenshots(bool bHook)
  bool _SetLocation(IntPtr self, ScreenshotHandle hScreenshot, string pchLocation)
  bool SetLocation(ScreenshotHandle hScreenshot, string pchLocation)
  bool _TagUser(IntPtr self, ScreenshotHandle hScreenshot, SteamId steamID)
  bool TagUser(ScreenshotHandle hScreenshot, SteamId steamID)
  bool _TagPublishedFile(IntPtr self, ScreenshotHandle hScreenshot, PublishedFileId unPublishedFileID)
  bool TagPublishedFile(ScreenshotHandle hScreenshot, PublishedFileId unPublishedFileID)
  bool _IsScreenshotsHooked(IntPtr self)
  bool IsScreenshotsHooked()
  ScreenshotHandle _AddVRScreenshotToLibrary(IntPtr self, VRScreenshotType eType, string pchFilename, string pchVRFilename)
  ScreenshotHandle AddVRScreenshotToLibrary(VRScreenshotType eType, string pchFilename, string pchVRFilename)
--------------------------------------------------
Класс: Steamworks.ISteamUGC
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamUGC_v017()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerUGC_v017()
  IntPtr GetServerInterfacePointer()
  UGCQueryHandle_t _CreateQueryUserUGCRequest(IntPtr self, AccountID_t unAccountID, UserUGCList eListType, UgcType eMatchingUGCType, UserUGCListSortOrder eSortOrder, AppId nCreatorAppID, AppId nConsumerAppID, UInt32 unPage)
  UGCQueryHandle_t CreateQueryUserUGCRequest(AccountID_t unAccountID, UserUGCList eListType, UgcType eMatchingUGCType, UserUGCListSortOrder eSortOrder, AppId nCreatorAppID, AppId nConsumerAppID, UInt32 unPage)
  UGCQueryHandle_t _CreateQueryAllUGCRequest(IntPtr self, UGCQuery eQueryType, UgcType eMatchingeMatchingUGCTypeFileType, AppId nCreatorAppID, AppId nConsumerAppID, UInt32 unPage)
  UGCQueryHandle_t CreateQueryAllUGCRequest(UGCQuery eQueryType, UgcType eMatchingeMatchingUGCTypeFileType, AppId nCreatorAppID, AppId nConsumerAppID, UInt32 unPage)
  UGCQueryHandle_t _CreateQueryAllUGCRequest(IntPtr self, UGCQuery eQueryType, UgcType eMatchingeMatchingUGCTypeFileType, AppId nCreatorAppID, AppId nConsumerAppID, string pchCursor)
  UGCQueryHandle_t CreateQueryAllUGCRequest(UGCQuery eQueryType, UgcType eMatchingeMatchingUGCTypeFileType, AppId nCreatorAppID, AppId nConsumerAppID, string pchCursor)
  UGCQueryHandle_t _CreateQueryUGCDetailsRequest(IntPtr self, PublishedFileId[] pvecPublishedFileID, UInt32 unNumPublishedFileIDs)
  UGCQueryHandle_t CreateQueryUGCDetailsRequest(PublishedFileId[] pvecPublishedFileID, UInt32 unNumPublishedFileIDs)
  SteamAPICall_t _SendQueryUGCRequest(IntPtr self, UGCQueryHandle_t handle)
  CallResult`1<SteamUGCQueryCompleted_t> SendQueryUGCRequest(UGCQueryHandle_t handle)
  bool _GetQueryUGCResult(IntPtr self, UGCQueryHandle_t handle, UInt32 index, SteamUGCDetails_t& pDetails)
  bool GetQueryUGCResult(UGCQueryHandle_t handle, UInt32 index, SteamUGCDetails_t& pDetails)
  UInt32 _GetQueryUGCNumTags(IntPtr self, UGCQueryHandle_t handle, UInt32 index)
  UInt32 GetQueryUGCNumTags(UGCQueryHandle_t handle, UInt32 index)
  bool _GetQueryUGCTag(IntPtr self, UGCQueryHandle_t handle, UInt32 index, UInt32 indexTag, IntPtr pchValue, UInt32 cchValueSize)
  bool GetQueryUGCTag(UGCQueryHandle_t handle, UInt32 index, UInt32 indexTag, String& pchValue)
  bool _GetQueryUGCTagDisplayName(IntPtr self, UGCQueryHandle_t handle, UInt32 index, UInt32 indexTag, IntPtr pchValue, UInt32 cchValueSize)
  bool GetQueryUGCTagDisplayName(UGCQueryHandle_t handle, UInt32 index, UInt32 indexTag, String& pchValue)
  bool _GetQueryUGCPreviewURL(IntPtr self, UGCQueryHandle_t handle, UInt32 index, IntPtr pchURL, UInt32 cchURLSize)
  bool GetQueryUGCPreviewURL(UGCQueryHandle_t handle, UInt32 index, String& pchURL)
  bool _GetQueryUGCMetadata(IntPtr self, UGCQueryHandle_t handle, UInt32 index, IntPtr pchMetadata, UInt32 cchMetadatasize)
  bool GetQueryUGCMetadata(UGCQueryHandle_t handle, UInt32 index, String& pchMetadata)
  bool _GetQueryUGCChildren(IntPtr self, UGCQueryHandle_t handle, UInt32 index, PublishedFileId[] pvecPublishedFileID, UInt32 cMaxEntries)
  bool GetQueryUGCChildren(UGCQueryHandle_t handle, UInt32 index, PublishedFileId[] pvecPublishedFileID, UInt32 cMaxEntries)
  bool _GetQueryUGCStatistic(IntPtr self, UGCQueryHandle_t handle, UInt32 index, ItemStatistic eStatType, UInt64& pStatValue)
  bool GetQueryUGCStatistic(UGCQueryHandle_t handle, UInt32 index, ItemStatistic eStatType, UInt64& pStatValue)
  UInt32 _GetQueryUGCNumAdditionalPreviews(IntPtr self, UGCQueryHandle_t handle, UInt32 index)
  UInt32 GetQueryUGCNumAdditionalPreviews(UGCQueryHandle_t handle, UInt32 index)
  bool _GetQueryUGCAdditionalPreview(IntPtr self, UGCQueryHandle_t handle, UInt32 index, UInt32 previewIndex, IntPtr pchURLOrVideoID, UInt32 cchURLSize, IntPtr pchOriginalFileName, UInt32 cchOriginalFileNameSize, ItemPreviewType& pPreviewType)
  bool GetQueryUGCAdditionalPreview(UGCQueryHandle_t handle, UInt32 index, UInt32 previewIndex, String& pchURLOrVideoID, String& pchOriginalFileName, ItemPreviewType& pPreviewType)
  UInt32 _GetQueryUGCNumKeyValueTags(IntPtr self, UGCQueryHandle_t handle, UInt32 index)
  UInt32 GetQueryUGCNumKeyValueTags(UGCQueryHandle_t handle, UInt32 index)
  bool _GetQueryUGCKeyValueTag(IntPtr self, UGCQueryHandle_t handle, UInt32 index, UInt32 keyValueTagIndex, IntPtr pchKey, UInt32 cchKeySize, IntPtr pchValue, UInt32 cchValueSize)
  bool GetQueryUGCKeyValueTag(UGCQueryHandle_t handle, UInt32 index, UInt32 keyValueTagIndex, String& pchKey, String& pchValue)
  bool _GetQueryUGCKeyValueTag(IntPtr self, UGCQueryHandle_t handle, UInt32 index, string pchKey, IntPtr pchValue, UInt32 cchValueSize)
  bool GetQueryUGCKeyValueTag(UGCQueryHandle_t handle, UInt32 index, string pchKey, String& pchValue)
  UInt32 _GetQueryUGCContentDescriptors(IntPtr self, UGCQueryHandle_t handle, UInt32 index, UGCContentDescriptorID[] pvecDescriptors, UInt32 cMaxEntries)
  UInt32 GetQueryUGCContentDescriptors(UGCQueryHandle_t handle, UInt32 index, UGCContentDescriptorID[] pvecDescriptors, UInt32 cMaxEntries)
  bool _ReleaseQueryUGCRequest(IntPtr self, UGCQueryHandle_t handle)
  bool ReleaseQueryUGCRequest(UGCQueryHandle_t handle)
  bool _AddRequiredTag(IntPtr self, UGCQueryHandle_t handle, string pTagName)
  bool AddRequiredTag(UGCQueryHandle_t handle, string pTagName)
  bool _AddRequiredTagGroup(IntPtr self, UGCQueryHandle_t handle, SteamParamStringArray_t& pTagGroups)
  bool AddRequiredTagGroup(UGCQueryHandle_t handle, SteamParamStringArray_t& pTagGroups)
  bool _AddExcludedTag(IntPtr self, UGCQueryHandle_t handle, string pTagName)
  bool AddExcludedTag(UGCQueryHandle_t handle, string pTagName)
  bool _SetReturnOnlyIDs(IntPtr self, UGCQueryHandle_t handle, bool bReturnOnlyIDs)
  bool SetReturnOnlyIDs(UGCQueryHandle_t handle, bool bReturnOnlyIDs)
  bool _SetReturnKeyValueTags(IntPtr self, UGCQueryHandle_t handle, bool bReturnKeyValueTags)
  bool SetReturnKeyValueTags(UGCQueryHandle_t handle, bool bReturnKeyValueTags)
  bool _SetReturnLongDescription(IntPtr self, UGCQueryHandle_t handle, bool bReturnLongDescription)
  bool SetReturnLongDescription(UGCQueryHandle_t handle, bool bReturnLongDescription)
  bool _SetReturnMetadata(IntPtr self, UGCQueryHandle_t handle, bool bReturnMetadata)
  bool SetReturnMetadata(UGCQueryHandle_t handle, bool bReturnMetadata)
  bool _SetReturnChildren(IntPtr self, UGCQueryHandle_t handle, bool bReturnChildren)
  bool SetReturnChildren(UGCQueryHandle_t handle, bool bReturnChildren)
  bool _SetReturnAdditionalPreviews(IntPtr self, UGCQueryHandle_t handle, bool bReturnAdditionalPreviews)
  bool SetReturnAdditionalPreviews(UGCQueryHandle_t handle, bool bReturnAdditionalPreviews)
  bool _SetReturnTotalOnly(IntPtr self, UGCQueryHandle_t handle, bool bReturnTotalOnly)
  bool SetReturnTotalOnly(UGCQueryHandle_t handle, bool bReturnTotalOnly)
  bool _SetReturnPlaytimeStats(IntPtr self, UGCQueryHandle_t handle, UInt32 unDays)
  bool SetReturnPlaytimeStats(UGCQueryHandle_t handle, UInt32 unDays)
  bool _SetLanguage(IntPtr self, UGCQueryHandle_t handle, string pchLanguage)
  bool SetLanguage(UGCQueryHandle_t handle, string pchLanguage)
  bool _SetAllowCachedResponse(IntPtr self, UGCQueryHandle_t handle, UInt32 unMaxAgeSeconds)
  bool SetAllowCachedResponse(UGCQueryHandle_t handle, UInt32 unMaxAgeSeconds)
  bool _SetCloudFileNameFilter(IntPtr self, UGCQueryHandle_t handle, string pMatchCloudFileName)
  bool SetCloudFileNameFilter(UGCQueryHandle_t handle, string pMatchCloudFileName)
  bool _SetMatchAnyTag(IntPtr self, UGCQueryHandle_t handle, bool bMatchAnyTag)
  bool SetMatchAnyTag(UGCQueryHandle_t handle, bool bMatchAnyTag)
  bool _SetSearchText(IntPtr self, UGCQueryHandle_t handle, string pSearchText)
  bool SetSearchText(UGCQueryHandle_t handle, string pSearchText)
  bool _SetRankedByTrendDays(IntPtr self, UGCQueryHandle_t handle, UInt32 unDays)
  bool SetRankedByTrendDays(UGCQueryHandle_t handle, UInt32 unDays)
  bool _SetTimeCreatedDateRange(IntPtr self, UGCQueryHandle_t handle, RTime32 rtStart, RTime32 rtEnd)
  bool SetTimeCreatedDateRange(UGCQueryHandle_t handle, RTime32 rtStart, RTime32 rtEnd)
  bool _SetTimeUpdatedDateRange(IntPtr self, UGCQueryHandle_t handle, RTime32 rtStart, RTime32 rtEnd)
  bool SetTimeUpdatedDateRange(UGCQueryHandle_t handle, RTime32 rtStart, RTime32 rtEnd)
  bool _AddRequiredKeyValueTag(IntPtr self, UGCQueryHandle_t handle, string pKey, string pValue)
  bool AddRequiredKeyValueTag(UGCQueryHandle_t handle, string pKey, string pValue)
  SteamAPICall_t _CreateItem(IntPtr self, AppId nConsumerAppId, WorkshopFileType eFileType)
  CallResult`1<CreateItemResult_t> CreateItem(AppId nConsumerAppId, WorkshopFileType eFileType)
  UGCUpdateHandle_t _StartItemUpdate(IntPtr self, AppId nConsumerAppId, PublishedFileId nPublishedFileID)
  UGCUpdateHandle_t StartItemUpdate(AppId nConsumerAppId, PublishedFileId nPublishedFileID)
  bool _SetItemTitle(IntPtr self, UGCUpdateHandle_t handle, string pchTitle)
  bool SetItemTitle(UGCUpdateHandle_t handle, string pchTitle)
  bool _SetItemDescription(IntPtr self, UGCUpdateHandle_t handle, string pchDescription)
  bool SetItemDescription(UGCUpdateHandle_t handle, string pchDescription)
  bool _SetItemUpdateLanguage(IntPtr self, UGCUpdateHandle_t handle, string pchLanguage)
  bool SetItemUpdateLanguage(UGCUpdateHandle_t handle, string pchLanguage)
  bool _SetItemMetadata(IntPtr self, UGCUpdateHandle_t handle, string pchMetaData)
  bool SetItemMetadata(UGCUpdateHandle_t handle, string pchMetaData)
  bool _SetItemVisibility(IntPtr self, UGCUpdateHandle_t handle, RemoteStoragePublishedFileVisibility eVisibility)
  bool SetItemVisibility(UGCUpdateHandle_t handle, RemoteStoragePublishedFileVisibility eVisibility)
  bool _SetItemTags(IntPtr self, UGCUpdateHandle_t updateHandle, SteamParamStringArray_t& pTags)
  bool SetItemTags(UGCUpdateHandle_t updateHandle, SteamParamStringArray_t& pTags)
  bool _SetItemContent(IntPtr self, UGCUpdateHandle_t handle, string pszContentFolder)
  bool SetItemContent(UGCUpdateHandle_t handle, string pszContentFolder)
  bool _SetItemPreview(IntPtr self, UGCUpdateHandle_t handle, string pszPreviewFile)
  bool SetItemPreview(UGCUpdateHandle_t handle, string pszPreviewFile)
  bool _SetAllowLegacyUpload(IntPtr self, UGCUpdateHandle_t handle, bool bAllowLegacyUpload)
  bool SetAllowLegacyUpload(UGCUpdateHandle_t handle, bool bAllowLegacyUpload)
  bool _RemoveAllItemKeyValueTags(IntPtr self, UGCUpdateHandle_t handle)
  bool RemoveAllItemKeyValueTags(UGCUpdateHandle_t handle)
  bool _RemoveItemKeyValueTags(IntPtr self, UGCUpdateHandle_t handle, string pchKey)
  bool RemoveItemKeyValueTags(UGCUpdateHandle_t handle, string pchKey)
  bool _AddItemKeyValueTag(IntPtr self, UGCUpdateHandle_t handle, string pchKey, string pchValue)
  bool AddItemKeyValueTag(UGCUpdateHandle_t handle, string pchKey, string pchValue)
  bool _AddItemPreviewFile(IntPtr self, UGCUpdateHandle_t handle, string pszPreviewFile, ItemPreviewType type)
  bool AddItemPreviewFile(UGCUpdateHandle_t handle, string pszPreviewFile, ItemPreviewType type)
  bool _AddItemPreviewVideo(IntPtr self, UGCUpdateHandle_t handle, string pszVideoID)
  bool AddItemPreviewVideo(UGCUpdateHandle_t handle, string pszVideoID)
  bool _UpdateItemPreviewFile(IntPtr self, UGCUpdateHandle_t handle, UInt32 index, string pszPreviewFile)
  bool UpdateItemPreviewFile(UGCUpdateHandle_t handle, UInt32 index, string pszPreviewFile)
  bool _UpdateItemPreviewVideo(IntPtr self, UGCUpdateHandle_t handle, UInt32 index, string pszVideoID)
  bool UpdateItemPreviewVideo(UGCUpdateHandle_t handle, UInt32 index, string pszVideoID)
  bool _RemoveItemPreview(IntPtr self, UGCUpdateHandle_t handle, UInt32 index)
  bool RemoveItemPreview(UGCUpdateHandle_t handle, UInt32 index)
  bool _AddContentDescriptor(IntPtr self, UGCUpdateHandle_t handle, UGCContentDescriptorID descid)
  bool AddContentDescriptor(UGCUpdateHandle_t handle, UGCContentDescriptorID descid)
  bool _RemoveContentDescriptor(IntPtr self, UGCUpdateHandle_t handle, UGCContentDescriptorID descid)
  bool RemoveContentDescriptor(UGCUpdateHandle_t handle, UGCContentDescriptorID descid)
  SteamAPICall_t _SubmitItemUpdate(IntPtr self, UGCUpdateHandle_t handle, string pchChangeNote)
  CallResult`1<SubmitItemUpdateResult_t> SubmitItemUpdate(UGCUpdateHandle_t handle, string pchChangeNote)
  ItemUpdateStatus _GetItemUpdateProgress(IntPtr self, UGCUpdateHandle_t handle, UInt64& punBytesProcessed, UInt64& punBytesTotal)
  ItemUpdateStatus GetItemUpdateProgress(UGCUpdateHandle_t handle, UInt64& punBytesProcessed, UInt64& punBytesTotal)
  SteamAPICall_t _SetUserItemVote(IntPtr self, PublishedFileId nPublishedFileID, bool bVoteUp)
  CallResult`1<SetUserItemVoteResult_t> SetUserItemVote(PublishedFileId nPublishedFileID, bool bVoteUp)
  SteamAPICall_t _GetUserItemVote(IntPtr self, PublishedFileId nPublishedFileID)
  CallResult`1<GetUserItemVoteResult_t> GetUserItemVote(PublishedFileId nPublishedFileID)
  SteamAPICall_t _AddItemToFavorites(IntPtr self, AppId nAppId, PublishedFileId nPublishedFileID)
  CallResult`1<UserFavoriteItemsListChanged_t> AddItemToFavorites(AppId nAppId, PublishedFileId nPublishedFileID)
  SteamAPICall_t _RemoveItemFromFavorites(IntPtr self, AppId nAppId, PublishedFileId nPublishedFileID)
  CallResult`1<UserFavoriteItemsListChanged_t> RemoveItemFromFavorites(AppId nAppId, PublishedFileId nPublishedFileID)
  SteamAPICall_t _SubscribeItem(IntPtr self, PublishedFileId nPublishedFileID)
  CallResult`1<RemoteStorageSubscribePublishedFileResult_t> SubscribeItem(PublishedFileId nPublishedFileID)
  SteamAPICall_t _UnsubscribeItem(IntPtr self, PublishedFileId nPublishedFileID)
  CallResult`1<RemoteStorageUnsubscribePublishedFileResult_t> UnsubscribeItem(PublishedFileId nPublishedFileID)
  UInt32 _GetNumSubscribedItems(IntPtr self)
  UInt32 GetNumSubscribedItems()
  UInt32 _GetSubscribedItems(IntPtr self, PublishedFileId[] pvecPublishedFileID, UInt32 cMaxEntries)
  UInt32 GetSubscribedItems(PublishedFileId[] pvecPublishedFileID, UInt32 cMaxEntries)
  UInt32 _GetItemState(IntPtr self, PublishedFileId nPublishedFileID)
  UInt32 GetItemState(PublishedFileId nPublishedFileID)
  bool _GetItemInstallInfo(IntPtr self, PublishedFileId nPublishedFileID, UInt64& punSizeOnDisk, IntPtr pchFolder, UInt32 cchFolderSize, UInt32& punTimeStamp)
  bool GetItemInstallInfo(PublishedFileId nPublishedFileID, UInt64& punSizeOnDisk, String& pchFolder, UInt32& punTimeStamp)
  bool _GetItemDownloadInfo(IntPtr self, PublishedFileId nPublishedFileID, UInt64& punBytesDownloaded, UInt64& punBytesTotal)
  bool GetItemDownloadInfo(PublishedFileId nPublishedFileID, UInt64& punBytesDownloaded, UInt64& punBytesTotal)
  bool _DownloadItem(IntPtr self, PublishedFileId nPublishedFileID, bool bHighPriority)
  bool DownloadItem(PublishedFileId nPublishedFileID, bool bHighPriority)
  bool _BInitWorkshopForGameServer(IntPtr self, DepotId_t unWorkshopDepotID, string pszFolder)
  bool BInitWorkshopForGameServer(DepotId_t unWorkshopDepotID, string pszFolder)
  void _SuspendDownloads(IntPtr self, bool bSuspend)
  void SuspendDownloads(bool bSuspend)
  SteamAPICall_t _StartPlaytimeTracking(IntPtr self, PublishedFileId[] pvecPublishedFileID, UInt32 unNumPublishedFileIDs)
  CallResult`1<StartPlaytimeTrackingResult_t> StartPlaytimeTracking(PublishedFileId[] pvecPublishedFileID, UInt32 unNumPublishedFileIDs)
  SteamAPICall_t _StopPlaytimeTracking(IntPtr self, PublishedFileId[] pvecPublishedFileID, UInt32 unNumPublishedFileIDs)
  CallResult`1<StopPlaytimeTrackingResult_t> StopPlaytimeTracking(PublishedFileId[] pvecPublishedFileID, UInt32 unNumPublishedFileIDs)
  SteamAPICall_t _StopPlaytimeTrackingForAllItems(IntPtr self)
  CallResult`1<StopPlaytimeTrackingResult_t> StopPlaytimeTrackingForAllItems()
  SteamAPICall_t _AddDependency(IntPtr self, PublishedFileId nParentPublishedFileID, PublishedFileId nChildPublishedFileID)
  CallResult`1<AddUGCDependencyResult_t> AddDependency(PublishedFileId nParentPublishedFileID, PublishedFileId nChildPublishedFileID)
  SteamAPICall_t _RemoveDependency(IntPtr self, PublishedFileId nParentPublishedFileID, PublishedFileId nChildPublishedFileID)
  CallResult`1<RemoveUGCDependencyResult_t> RemoveDependency(PublishedFileId nParentPublishedFileID, PublishedFileId nChildPublishedFileID)
  SteamAPICall_t _AddAppDependency(IntPtr self, PublishedFileId nPublishedFileID, AppId nAppID)
  CallResult`1<AddAppDependencyResult_t> AddAppDependency(PublishedFileId nPublishedFileID, AppId nAppID)
  SteamAPICall_t _RemoveAppDependency(IntPtr self, PublishedFileId nPublishedFileID, AppId nAppID)
  CallResult`1<RemoveAppDependencyResult_t> RemoveAppDependency(PublishedFileId nPublishedFileID, AppId nAppID)
  SteamAPICall_t _GetAppDependencies(IntPtr self, PublishedFileId nPublishedFileID)
  CallResult`1<GetAppDependenciesResult_t> GetAppDependencies(PublishedFileId nPublishedFileID)
  SteamAPICall_t _DeleteItem(IntPtr self, PublishedFileId nPublishedFileID)
  CallResult`1<DeleteItemResult_t> DeleteItem(PublishedFileId nPublishedFileID)
  bool _ShowWorkshopEULA(IntPtr self)
  bool ShowWorkshopEULA()
  SteamAPICall_t _GetWorkshopEULAStatus(IntPtr self)
  CallResult`1<WorkshopEULAStatus_t> GetWorkshopEULAStatus()
--------------------------------------------------
Класс: Steamworks.ISteamUser
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamUser_v023()
  IntPtr GetUserInterfacePointer()
  HSteamUser _GetHSteamUser(IntPtr self)
  HSteamUser GetHSteamUser()
  bool _BLoggedOn(IntPtr self)
  bool BLoggedOn()
  SteamId _GetSteamID(IntPtr self)
  SteamId GetSteamID()
  int _InitiateGameConnection_DEPRECATED(IntPtr self, IntPtr pAuthBlob, int cbMaxAuthBlob, SteamId steamIDGameServer, UInt32 unIPServer, ushort usPortServer, bool bSecure)
  int InitiateGameConnection_DEPRECATED(IntPtr pAuthBlob, int cbMaxAuthBlob, SteamId steamIDGameServer, UInt32 unIPServer, ushort usPortServer, bool bSecure)
  void _TerminateGameConnection_DEPRECATED(IntPtr self, UInt32 unIPServer, ushort usPortServer)
  void TerminateGameConnection_DEPRECATED(UInt32 unIPServer, ushort usPortServer)
  void _TrackAppUsageEvent(IntPtr self, GameId gameID, int eAppUsageEvent, string pchExtraInfo)
  void TrackAppUsageEvent(GameId gameID, int eAppUsageEvent, string pchExtraInfo)
  bool _GetUserDataFolder(IntPtr self, IntPtr pchBuffer, int cubBuffer)
  bool GetUserDataFolder(String& pchBuffer)
  void _StartVoiceRecording(IntPtr self)
  void StartVoiceRecording()
  void _StopVoiceRecording(IntPtr self)
  void StopVoiceRecording()
  VoiceResult _GetAvailableVoice(IntPtr self, UInt32& pcbCompressed, UInt32& pcbUncompressed_Deprecated, UInt32 nUncompressedVoiceDesiredSampleRate_Deprecated)
  VoiceResult GetAvailableVoice(UInt32& pcbCompressed, UInt32& pcbUncompressed_Deprecated, UInt32 nUncompressedVoiceDesiredSampleRate_Deprecated)
  VoiceResult _GetVoice(IntPtr self, bool bWantCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, UInt32& nBytesWritten, bool bWantUncompressed_Deprecated, IntPtr pUncompressedDestBuffer_Deprecated, UInt32 cbUncompressedDestBufferSize_Deprecated, UInt32& nUncompressBytesWritten_Deprecated, UInt32 nUncompressedVoiceDesiredSampleRate_Deprecated)
  VoiceResult GetVoice(bool bWantCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, UInt32& nBytesWritten, bool bWantUncompressed_Deprecated, IntPtr pUncompressedDestBuffer_Deprecated, UInt32 cbUncompressedDestBufferSize_Deprecated, UInt32& nUncompressBytesWritten_Deprecated, UInt32 nUncompressedVoiceDesiredSampleRate_Deprecated)
  VoiceResult _DecompressVoice(IntPtr self, IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, UInt32& nBytesWritten, UInt32 nDesiredSampleRate)
  VoiceResult DecompressVoice(IntPtr pCompressed, UInt32 cbCompressed, IntPtr pDestBuffer, UInt32 cbDestBufferSize, UInt32& nBytesWritten, UInt32 nDesiredSampleRate)
  UInt32 _GetVoiceOptimalSampleRate(IntPtr self)
  UInt32 GetVoiceOptimalSampleRate()
  HAuthTicket _GetAuthSessionTicket(IntPtr self, IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket, NetIdentity& pSteamNetworkingIdentity)
  HAuthTicket GetAuthSessionTicket(IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket, NetIdentity& pSteamNetworkingIdentity)
  HAuthTicket _GetAuthTicketForWebApi(IntPtr self, string pchIdentity)
  HAuthTicket GetAuthTicketForWebApi(string pchIdentity)
  BeginAuthResult _BeginAuthSession(IntPtr self, IntPtr pAuthTicket, int cbAuthTicket, SteamId steamID)
  BeginAuthResult BeginAuthSession(IntPtr pAuthTicket, int cbAuthTicket, SteamId steamID)
  void _EndAuthSession(IntPtr self, SteamId steamID)
  void EndAuthSession(SteamId steamID)
  void _CancelAuthTicket(IntPtr self, HAuthTicket hAuthTicket)
  void CancelAuthTicket(HAuthTicket hAuthTicket)
  UserHasLicenseForAppResult _UserHasLicenseForApp(IntPtr self, SteamId steamID, AppId appID)
  UserHasLicenseForAppResult UserHasLicenseForApp(SteamId steamID, AppId appID)
  bool _BIsBehindNAT(IntPtr self)
  bool BIsBehindNAT()
  void _AdvertiseGame(IntPtr self, SteamId steamIDGameServer, UInt32 unIPServer, ushort usPortServer)
  void AdvertiseGame(SteamId steamIDGameServer, UInt32 unIPServer, ushort usPortServer)
  SteamAPICall_t _RequestEncryptedAppTicket(IntPtr self, IntPtr pDataToInclude, int cbDataToInclude)
  CallResult`1<EncryptedAppTicketResponse_t> RequestEncryptedAppTicket(IntPtr pDataToInclude, int cbDataToInclude)
  bool _GetEncryptedAppTicket(IntPtr self, IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket)
  bool GetEncryptedAppTicket(IntPtr pTicket, int cbMaxTicket, UInt32& pcbTicket)
  int _GetGameBadgeLevel(IntPtr self, int nSeries, bool bFoil)
  int GetGameBadgeLevel(int nSeries, bool bFoil)
  int _GetPlayerSteamLevel(IntPtr self)
  int GetPlayerSteamLevel()
  SteamAPICall_t _RequestStoreAuthURL(IntPtr self, string pchRedirectURL)
  CallResult`1<StoreAuthURLResponse_t> RequestStoreAuthURL(string pchRedirectURL)
  bool _BIsPhoneVerified(IntPtr self)
  bool BIsPhoneVerified()
  bool _BIsTwoFactorEnabled(IntPtr self)
  bool BIsTwoFactorEnabled()
  bool _BIsPhoneIdentifying(IntPtr self)
  bool BIsPhoneIdentifying()
  bool _BIsPhoneRequiringVerification(IntPtr self)
  bool BIsPhoneRequiringVerification()
  SteamAPICall_t _GetMarketEligibility(IntPtr self)
  CallResult`1<MarketEligibilityResponse_t> GetMarketEligibility()
  SteamAPICall_t _GetDurationControl(IntPtr self)
  CallResult`1<DurationControl_t> GetDurationControl()
  bool _BSetDurationControlOnlineState(IntPtr self, DurationControlOnlineState eNewState)
  bool BSetDurationControlOnlineState(DurationControlOnlineState eNewState)
--------------------------------------------------
Класс: Steamworks.ISteamUserStats
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamUserStats_v012()
  IntPtr GetUserInterfacePointer()
  bool _RequestCurrentStats(IntPtr self)
  bool RequestCurrentStats()
  bool _GetStat(IntPtr self, string pchName, Int32& pData)
  bool GetStat(string pchName, Int32& pData)
  bool _GetStat(IntPtr self, string pchName, Single& pData)
  bool GetStat(string pchName, Single& pData)
  bool _SetStat(IntPtr self, string pchName, int nData)
  bool SetStat(string pchName, int nData)
  bool _SetStat(IntPtr self, string pchName, float fData)
  bool SetStat(string pchName, float fData)
  bool _UpdateAvgRateStat(IntPtr self, string pchName, float flCountThisSession, double dSessionLength)
  bool UpdateAvgRateStat(string pchName, float flCountThisSession, double dSessionLength)
  bool _GetAchievement(IntPtr self, string pchName, Boolean& pbAchieved)
  bool GetAchievement(string pchName, Boolean& pbAchieved)
  bool _SetAchievement(IntPtr self, string pchName)
  bool SetAchievement(string pchName)
  bool _ClearAchievement(IntPtr self, string pchName)
  bool ClearAchievement(string pchName)
  bool _GetAchievementAndUnlockTime(IntPtr self, string pchName, Boolean& pbAchieved, UInt32& punUnlockTime)
  bool GetAchievementAndUnlockTime(string pchName, Boolean& pbAchieved, UInt32& punUnlockTime)
  bool _StoreStats(IntPtr self)
  bool StoreStats()
  int _GetAchievementIcon(IntPtr self, string pchName)
  int GetAchievementIcon(string pchName)
  Utf8StringPointer _GetAchievementDisplayAttribute(IntPtr self, string pchName, string pchKey)
  string GetAchievementDisplayAttribute(string pchName, string pchKey)
  bool _IndicateAchievementProgress(IntPtr self, string pchName, UInt32 nCurProgress, UInt32 nMaxProgress)
  bool IndicateAchievementProgress(string pchName, UInt32 nCurProgress, UInt32 nMaxProgress)
  UInt32 _GetNumAchievements(IntPtr self)
  UInt32 GetNumAchievements()
  Utf8StringPointer _GetAchievementName(IntPtr self, UInt32 iAchievement)
  string GetAchievementName(UInt32 iAchievement)
  SteamAPICall_t _RequestUserStats(IntPtr self, SteamId steamIDUser)
  CallResult`1<UserStatsReceived_t> RequestUserStats(SteamId steamIDUser)
  bool _GetUserStat(IntPtr self, SteamId steamIDUser, string pchName, Int32& pData)
  bool GetUserStat(SteamId steamIDUser, string pchName, Int32& pData)
  bool _GetUserStat(IntPtr self, SteamId steamIDUser, string pchName, Single& pData)
  bool GetUserStat(SteamId steamIDUser, string pchName, Single& pData)
  bool _GetUserAchievement(IntPtr self, SteamId steamIDUser, string pchName, Boolean& pbAchieved)
  bool GetUserAchievement(SteamId steamIDUser, string pchName, Boolean& pbAchieved)
  bool _GetUserAchievementAndUnlockTime(IntPtr self, SteamId steamIDUser, string pchName, Boolean& pbAchieved, UInt32& punUnlockTime)
  bool GetUserAchievementAndUnlockTime(SteamId steamIDUser, string pchName, Boolean& pbAchieved, UInt32& punUnlockTime)
  bool _ResetAllStats(IntPtr self, bool bAchievementsToo)
  bool ResetAllStats(bool bAchievementsToo)
  SteamAPICall_t _FindOrCreateLeaderboard(IntPtr self, string pchLeaderboardName, LeaderboardSort eLeaderboardSortMethod, LeaderboardDisplay eLeaderboardDisplayType)
  CallResult`1<LeaderboardFindResult_t> FindOrCreateLeaderboard(string pchLeaderboardName, LeaderboardSort eLeaderboardSortMethod, LeaderboardDisplay eLeaderboardDisplayType)
  SteamAPICall_t _FindLeaderboard(IntPtr self, string pchLeaderboardName)
  CallResult`1<LeaderboardFindResult_t> FindLeaderboard(string pchLeaderboardName)
  Utf8StringPointer _GetLeaderboardName(IntPtr self, SteamLeaderboard_t hSteamLeaderboard)
  string GetLeaderboardName(SteamLeaderboard_t hSteamLeaderboard)
  int _GetLeaderboardEntryCount(IntPtr self, SteamLeaderboard_t hSteamLeaderboard)
  int GetLeaderboardEntryCount(SteamLeaderboard_t hSteamLeaderboard)
  LeaderboardSort _GetLeaderboardSortMethod(IntPtr self, SteamLeaderboard_t hSteamLeaderboard)
  LeaderboardSort GetLeaderboardSortMethod(SteamLeaderboard_t hSteamLeaderboard)
  LeaderboardDisplay _GetLeaderboardDisplayType(IntPtr self, SteamLeaderboard_t hSteamLeaderboard)
  LeaderboardDisplay GetLeaderboardDisplayType(SteamLeaderboard_t hSteamLeaderboard)
  SteamAPICall_t _DownloadLeaderboardEntries(IntPtr self, SteamLeaderboard_t hSteamLeaderboard, LeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd)
  CallResult`1<LeaderboardScoresDownloaded_t> DownloadLeaderboardEntries(SteamLeaderboard_t hSteamLeaderboard, LeaderboardDataRequest eLeaderboardDataRequest, int nRangeStart, int nRangeEnd)
  SteamAPICall_t _DownloadLeaderboardEntriesForUsers(IntPtr self, SteamLeaderboard_t hSteamLeaderboard, SteamId[] prgUsers, int cUsers)
  CallResult`1<LeaderboardScoresDownloaded_t> DownloadLeaderboardEntriesForUsers(SteamLeaderboard_t hSteamLeaderboard, SteamId[] prgUsers, int cUsers)
  bool _GetDownloadedLeaderboardEntry(IntPtr self, SteamLeaderboardEntries_t hSteamLeaderboardEntries, int index, LeaderboardEntry_t& pLeaderboardEntry, Int32[] pDetails, int cDetailsMax)
  bool GetDownloadedLeaderboardEntry(SteamLeaderboardEntries_t hSteamLeaderboardEntries, int index, LeaderboardEntry_t& pLeaderboardEntry, Int32[] pDetails, int cDetailsMax)
  SteamAPICall_t _UploadLeaderboardScore(IntPtr self, SteamLeaderboard_t hSteamLeaderboard, LeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, Int32[] pScoreDetails, int cScoreDetailsCount)
  CallResult`1<LeaderboardScoreUploaded_t> UploadLeaderboardScore(SteamLeaderboard_t hSteamLeaderboard, LeaderboardUploadScoreMethod eLeaderboardUploadScoreMethod, int nScore, Int32[] pScoreDetails, int cScoreDetailsCount)
  SteamAPICall_t _AttachLeaderboardUGC(IntPtr self, SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC)
  CallResult`1<LeaderboardUGCSet_t> AttachLeaderboardUGC(SteamLeaderboard_t hSteamLeaderboard, UGCHandle_t hUGC)
  SteamAPICall_t _GetNumberOfCurrentPlayers(IntPtr self)
  CallResult`1<NumberOfCurrentPlayers_t> GetNumberOfCurrentPlayers()
  SteamAPICall_t _RequestGlobalAchievementPercentages(IntPtr self)
  CallResult`1<GlobalAchievementPercentagesReady_t> RequestGlobalAchievementPercentages()
  int _GetMostAchievedAchievementInfo(IntPtr self, IntPtr pchName, UInt32 unNameBufLen, Single& pflPercent, Boolean& pbAchieved)
  int GetMostAchievedAchievementInfo(String& pchName, Single& pflPercent, Boolean& pbAchieved)
  int _GetNextMostAchievedAchievementInfo(IntPtr self, int iIteratorPrevious, IntPtr pchName, UInt32 unNameBufLen, Single& pflPercent, Boolean& pbAchieved)
  int GetNextMostAchievedAchievementInfo(int iIteratorPrevious, String& pchName, Single& pflPercent, Boolean& pbAchieved)
  bool _GetAchievementAchievedPercent(IntPtr self, string pchName, Single& pflPercent)
  bool GetAchievementAchievedPercent(string pchName, Single& pflPercent)
  SteamAPICall_t _RequestGlobalStats(IntPtr self, int nHistoryDays)
  CallResult`1<GlobalStatsReceived_t> RequestGlobalStats(int nHistoryDays)
  bool _GetGlobalStat(IntPtr self, string pchStatName, Int64& pData)
  bool GetGlobalStat(string pchStatName, Int64& pData)
  bool _GetGlobalStat(IntPtr self, string pchStatName, Double& pData)
  bool GetGlobalStat(string pchStatName, Double& pData)
  int _GetGlobalStatHistory(IntPtr self, string pchStatName, Int64[] pData, UInt32 cubData)
  int GetGlobalStatHistory(string pchStatName, Int64[] pData, UInt32 cubData)
  int _GetGlobalStatHistory(IntPtr self, string pchStatName, Double[] pData, UInt32 cubData)
  int GetGlobalStatHistory(string pchStatName, Double[] pData, UInt32 cubData)
  bool _GetAchievementProgressLimits(IntPtr self, string pchName, Int32& pnMinProgress, Int32& pnMaxProgress)
  bool GetAchievementProgressLimits(string pchName, Int32& pnMinProgress, Int32& pnMaxProgress)
  bool _GetAchievementProgressLimits(IntPtr self, string pchName, Single& pfMinProgress, Single& pfMaxProgress)
  bool GetAchievementProgressLimits(string pchName, Single& pfMinProgress, Single& pfMaxProgress)
--------------------------------------------------
Класс: Steamworks.ISteamUtils
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamUtils_v010()
  IntPtr GetUserInterfacePointer()
  IntPtr SteamAPI_SteamGameServerUtils_v010()
  IntPtr GetServerInterfacePointer()
  UInt32 _GetSecondsSinceAppActive(IntPtr self)
  UInt32 GetSecondsSinceAppActive()
  UInt32 _GetSecondsSinceComputerActive(IntPtr self)
  UInt32 GetSecondsSinceComputerActive()
  Universe _GetConnectedUniverse(IntPtr self)
  Universe GetConnectedUniverse()
  UInt32 _GetServerRealTime(IntPtr self)
  UInt32 GetServerRealTime()
  Utf8StringPointer _GetIPCountry(IntPtr self)
  string GetIPCountry()
  bool _GetImageSize(IntPtr self, int iImage, UInt32& pnWidth, UInt32& pnHeight)
  bool GetImageSize(int iImage, UInt32& pnWidth, UInt32& pnHeight)
  bool _GetImageRGBA(IntPtr self, int iImage, Byte[] pubDest, int nDestBufferSize)
  bool GetImageRGBA(int iImage, Byte[] pubDest, int nDestBufferSize)
  byte _GetCurrentBatteryPower(IntPtr self)
  byte GetCurrentBatteryPower()
  UInt32 _GetAppID(IntPtr self)
  UInt32 GetAppID()
  void _SetOverlayNotificationPosition(IntPtr self, NotificationPosition eNotificationPosition)
  void SetOverlayNotificationPosition(NotificationPosition eNotificationPosition)
  bool _IsAPICallCompleted(IntPtr self, SteamAPICall_t hSteamAPICall, Boolean& pbFailed)
  bool IsAPICallCompleted(SteamAPICall_t hSteamAPICall, Boolean& pbFailed)
  SteamAPICallFailure _GetAPICallFailureReason(IntPtr self, SteamAPICall_t hSteamAPICall)
  SteamAPICallFailure GetAPICallFailureReason(SteamAPICall_t hSteamAPICall)
  bool _GetAPICallResult(IntPtr self, SteamAPICall_t hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, Boolean& pbFailed)
  bool GetAPICallResult(SteamAPICall_t hSteamAPICall, IntPtr pCallback, int cubCallback, int iCallbackExpected, Boolean& pbFailed)
  UInt32 _GetIPCCallCount(IntPtr self)
  UInt32 GetIPCCallCount()
  void _SetWarningMessageHook(IntPtr self, IntPtr pFunction)
  void SetWarningMessageHook(IntPtr pFunction)
  bool _IsOverlayEnabled(IntPtr self)
  bool IsOverlayEnabled()
  bool _BOverlayNeedsPresent(IntPtr self)
  bool BOverlayNeedsPresent()
  SteamAPICall_t _CheckFileSignature(IntPtr self, string szFileName)
  CallResult`1<CheckFileSignature_t> CheckFileSignature(string szFileName)
  bool _ShowGamepadTextInput(IntPtr self, GamepadTextInputMode eInputMode, GamepadTextInputLineMode eLineInputMode, string pchDescription, UInt32 unCharMax, string pchExistingText)
  bool ShowGamepadTextInput(GamepadTextInputMode eInputMode, GamepadTextInputLineMode eLineInputMode, string pchDescription, UInt32 unCharMax, string pchExistingText)
  UInt32 _GetEnteredGamepadTextLength(IntPtr self)
  UInt32 GetEnteredGamepadTextLength()
  bool _GetEnteredGamepadTextInput(IntPtr self, IntPtr pchText, UInt32 cchText)
  bool GetEnteredGamepadTextInput(String& pchText)
  Utf8StringPointer _GetSteamUILanguage(IntPtr self)
  string GetSteamUILanguage()
  bool _IsSteamRunningInVR(IntPtr self)
  bool IsSteamRunningInVR()
  void _SetOverlayNotificationInset(IntPtr self, int nHorizontalInset, int nVerticalInset)
  void SetOverlayNotificationInset(int nHorizontalInset, int nVerticalInset)
  bool _IsSteamInBigPictureMode(IntPtr self)
  bool IsSteamInBigPictureMode()
  void _StartVRDashboard(IntPtr self)
  void StartVRDashboard()
  bool _IsVRHeadsetStreamingEnabled(IntPtr self)
  bool IsVRHeadsetStreamingEnabled()
  void _SetVRHeadsetStreamingEnabled(IntPtr self, bool bEnabled)
  void SetVRHeadsetStreamingEnabled(bool bEnabled)
  bool _IsSteamChinaLauncher(IntPtr self)
  bool IsSteamChinaLauncher()
  bool _InitFilterText(IntPtr self, UInt32 unFilterOptions)
  bool InitFilterText(UInt32 unFilterOptions)
  int _FilterText(IntPtr self, TextFilteringContext eContext, SteamId sourceSteamID, string pchInputMessage, IntPtr pchOutFilteredText, UInt32 nByteSizeOutFilteredText)
  int FilterText(TextFilteringContext eContext, SteamId sourceSteamID, string pchInputMessage, String& pchOutFilteredText)
  SteamIPv6ConnectivityState _GetIPv6ConnectivityState(IntPtr self, SteamIPv6ConnectivityProtocol eProtocol)
  SteamIPv6ConnectivityState GetIPv6ConnectivityState(SteamIPv6ConnectivityProtocol eProtocol)
  bool _IsSteamRunningOnSteamDeck(IntPtr self)
  bool IsSteamRunningOnSteamDeck()
  bool _ShowFloatingGamepadTextInput(IntPtr self, TextInputMode eKeyboardMode, int nTextFieldXPosition, int nTextFieldYPosition, int nTextFieldWidth, int nTextFieldHeight)
  bool ShowFloatingGamepadTextInput(TextInputMode eKeyboardMode, int nTextFieldXPosition, int nTextFieldYPosition, int nTextFieldWidth, int nTextFieldHeight)
  void _SetGameLauncherMode(IntPtr self, bool bLauncherMode)
  void SetGameLauncherMode(bool bLauncherMode)
  bool _DismissFloatingGamepadTextInput(IntPtr self)
  bool DismissFloatingGamepadTextInput()
--------------------------------------------------
Класс: Steamworks.ISteamVideo
Наследуется от: SteamInterface
Поля:
Свойства:
Методы:
  void .ctor(bool IsGameServer)
  IntPtr SteamAPI_SteamVideo_v002()
  IntPtr GetUserInterfacePointer()
  void _GetVideoURL(IntPtr self, AppId unVideoAppID)
  void GetVideoURL(AppId unVideoAppID)
  bool _IsBroadcasting(IntPtr self, Int32& pnNumViewers)
  bool IsBroadcasting(Int32& pnNumViewers)
  void _GetOPFSettings(IntPtr self, AppId unVideoAppID)
  void GetOPFSettings(AppId unVideoAppID)
  bool _GetOPFStringForApp(IntPtr self, AppId unVideoAppID, IntPtr pchBuffer, Int32& pnBufferSize)
  bool GetOPFStringForApp(AppId unVideoAppID, String& pchBuffer, Int32& pnBufferSize)
--------------------------------------------------
Класс: Steamworks.SteamIPType
Наследуется от: Enum
Поля:
  int value__
  SteamIPType Type4
  SteamIPType Type6
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Universe
Наследуется от: Enum
Поля:
  int value__
  Universe Invalid
  Universe Public
  Universe Beta
  Universe Internal
  Universe Dev
  Universe Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Result
Наследуется от: Enum
Поля:
  int value__
  Result None
  Result OK
  Result Fail
  Result NoConnection
  Result InvalidPassword
  Result LoggedInElsewhere
  Result InvalidProtocolVer
  Result InvalidParam
  Result FileNotFound
  Result Busy
  Result InvalidState
  Result InvalidName
  Result InvalidEmail
  Result DuplicateName
  Result AccessDenied
  Result Timeout
  Result Banned
  Result AccountNotFound
  Result InvalidSteamID
  Result ServiceUnavailable
  Result NotLoggedOn
  Result Pending
  Result EncryptionFailure
  Result InsufficientPrivilege
  Result LimitExceeded
  Result Revoked
  Result Expired
  Result AlreadyRedeemed
  Result DuplicateRequest
  Result AlreadyOwned
  Result IPNotFound
  Result PersistFailed
  Result LockingFailed
  Result LogonSessionReplaced
  Result ConnectFailed
  Result HandshakeFailed
  Result IOFailure
  Result RemoteDisconnect
  Result ShoppingCartNotFound
  Result Blocked
  Result Ignored
  Result NoMatch
  Result AccountDisabled
  Result ServiceReadOnly
  Result AccountNotFeatured
  Result AdministratorOK
  Result ContentVersion
  Result TryAnotherCM
  Result PasswordRequiredToKickSession
  Result AlreadyLoggedInElsewhere
  Result Suspended
  Result Cancelled
  Result DataCorruption
  Result DiskFull
  Result RemoteCallFailed
  Result PasswordUnset
  Result ExternalAccountUnlinked
  Result PSNTicketInvalid
  Result ExternalAccountAlreadyLinked
  Result RemoteFileConflict
  Result IllegalPassword
  Result SameAsPreviousValue
  Result AccountLogonDenied
  Result CannotUseOldPassword
  Result InvalidLoginAuthCode
  Result AccountLogonDeniedNoMail
  Result HardwareNotCapableOfIPT
  Result IPTInitError
  Result ParentalControlRestricted
  Result FacebookQueryError
  Result ExpiredLoginAuthCode
  Result IPLoginRestrictionFailed
  Result AccountLockedDown
  Result AccountLogonDeniedVerifiedEmailRequired
  Result NoMatchingURL
  Result BadResponse
  Result RequirePasswordReEntry
  Result ValueOutOfRange
  Result UnexpectedError
  Result Disabled
  Result InvalidCEGSubmission
  Result RestrictedDevice
  Result RegionLocked
  Result RateLimitExceeded
  Result AccountLoginDeniedNeedTwoFactor
  Result ItemDeleted
  Result AccountLoginDeniedThrottle
  Result TwoFactorCodeMismatch
  Result TwoFactorActivationCodeMismatch
  Result AccountAssociatedToMultiplePartners
  Result NotModified
  Result NoMobileDevice
  Result TimeNotSynced
  Result SmsCodeFailed
  Result AccountLimitExceeded
  Result AccountActivityLimitExceeded
  Result PhoneActivityLimitExceeded
  Result RefundToWallet
  Result EmailSendFailure
  Result NotSettled
  Result NeedCaptcha
  Result GSLTDenied
  Result GSOwnerDenied
  Result InvalidItemType
  Result IPBanned
  Result GSLTExpired
  Result InsufficientFunds
  Result TooManyPending
  Result NoSiteLicensesFound
  Result WGNetworkSendExceeded
  Result AccountNotFriends
  Result LimitedUserAccount
  Result CantRemoveItem
  Result AccountDeleted
  Result ExistingUserCancelledLicense
  Result CommunityCooldown
  Result NoLauncherSpecified
  Result MustAgreeToSSA
  Result LauncherMigrated
  Result SteamRealmMismatch
  Result InvalidSignature
  Result ParseFailure
  Result NoVerifiedPhone
  Result InsufficientBattery
  Result ChargerRequired
  Result CachedCredentialInvalid
  Result K_EResultPhoneNumberIsVOIP
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.VoiceResult
Наследуется от: Enum
Поля:
  int value__
  VoiceResult OK
  VoiceResult NotInitialized
  VoiceResult NotRecording
  VoiceResult NoData
  VoiceResult BufferTooSmall
  VoiceResult DataCorrupted
  VoiceResult Restricted
  VoiceResult UnsupportedCodec
  VoiceResult ReceiverOutOfDate
  VoiceResult ReceiverDidNotAnswer
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.DenyReason
Наследуется от: Enum
Поля:
  int value__
  DenyReason Invalid
  DenyReason InvalidVersion
  DenyReason Generic
  DenyReason NotLoggedOn
  DenyReason NoLicense
  DenyReason Cheater
  DenyReason LoggedInElseWhere
  DenyReason UnknownText
  DenyReason IncompatibleAnticheat
  DenyReason MemoryCorruption
  DenyReason IncompatibleSoftware
  DenyReason SteamConnectionLost
  DenyReason SteamConnectionError
  DenyReason SteamResponseTimedOut
  DenyReason SteamValidationStalled
  DenyReason SteamOwnerLeftGuestUser
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.BeginAuthResult
Наследуется от: Enum
Поля:
  int value__
  BeginAuthResult OK
  BeginAuthResult InvalidTicket
  BeginAuthResult DuplicateRequest
  BeginAuthResult InvalidVersion
  BeginAuthResult GameMismatch
  BeginAuthResult ExpiredTicket
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.AuthResponse
Наследуется от: Enum
Поля:
  int value__
  AuthResponse OK
  AuthResponse UserNotConnectedToSteam
  AuthResponse NoLicenseOrExpired
  AuthResponse VACBanned
  AuthResponse LoggedInElseWhere
  AuthResponse VACCheckTimedOut
  AuthResponse AuthTicketCanceled
  AuthResponse AuthTicketInvalidAlreadyUsed
  AuthResponse AuthTicketInvalid
  AuthResponse PublisherIssuedBan
  AuthResponse AuthTicketNetworkIdentityFailure
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UserHasLicenseForAppResult
Наследуется от: Enum
Поля:
  int value__
  UserHasLicenseForAppResult HasLicense
  UserHasLicenseForAppResult DoesNotHaveLicense
  UserHasLicenseForAppResult NoAuth
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.AccountType
Наследуется от: Enum
Поля:
  int value__
  AccountType Invalid
  AccountType Individual
  AccountType Multiseat
  AccountType GameServer
  AccountType AnonGameServer
  AccountType Pending
  AccountType ContentServer
  AccountType Clan
  AccountType Chat
  AccountType ConsoleUser
  AccountType AnonUser
  AccountType Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ChatEntryType
Наследуется от: Enum
Поля:
  int value__
  ChatEntryType Invalid
  ChatEntryType ChatMsg
  ChatEntryType Typing
  ChatEntryType InviteGame
  ChatEntryType Emote
  ChatEntryType LeftConversation
  ChatEntryType Entered
  ChatEntryType WasKicked
  ChatEntryType WasBanned
  ChatEntryType Disconnected
  ChatEntryType HistoricalChat
  ChatEntryType LinkBlocked
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.RoomEnter
Наследуется от: Enum
Поля:
  int value__
  RoomEnter Success
  RoomEnter DoesntExist
  RoomEnter NotAllowed
  RoomEnter Full
  RoomEnter Error
  RoomEnter Banned
  RoomEnter Limited
  RoomEnter ClanDisabled
  RoomEnter CommunityBan
  RoomEnter MemberBlockedYou
  RoomEnter YouBlockedMember
  RoomEnter RatelimitExceeded
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ChatSteamIDInstanceFlags
Наследуется от: Enum
Поля:
  int value__
  ChatSteamIDInstanceFlags AccountInstanceMask
  ChatSteamIDInstanceFlags InstanceFlagClan
  ChatSteamIDInstanceFlags InstanceFlagLobby
  ChatSteamIDInstanceFlags InstanceFlagMMSLobby
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NotificationPosition
Наследуется от: Enum
Поля:
  int value__
  NotificationPosition Invalid
  NotificationPosition TopLeft
  NotificationPosition TopRight
  NotificationPosition BottomLeft
  NotificationPosition BottomRight
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.BroadcastUploadResult
Наследуется от: Enum
Поля:
  int value__
  BroadcastUploadResult None
  BroadcastUploadResult OK
  BroadcastUploadResult InitFailed
  BroadcastUploadResult FrameFailed
  BroadcastUploadResult Timeout
  BroadcastUploadResult BandwidthExceeded
  BroadcastUploadResult LowFPS
  BroadcastUploadResult MissingKeyFrames
  BroadcastUploadResult NoConnection
  BroadcastUploadResult RelayFailed
  BroadcastUploadResult SettingsChanged
  BroadcastUploadResult MissingAudio
  BroadcastUploadResult TooFarBehind
  BroadcastUploadResult TranscodeBehind
  BroadcastUploadResult NotAllowedToPlay
  BroadcastUploadResult Busy
  BroadcastUploadResult Banned
  BroadcastUploadResult AlreadyActive
  BroadcastUploadResult ForcedOff
  BroadcastUploadResult AudioBehind
  BroadcastUploadResult Shutdown
  BroadcastUploadResult Disconnect
  BroadcastUploadResult VideoInitFailed
  BroadcastUploadResult AudioInitFailed
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.MarketNotAllowedReasonFlags
Наследуется от: Enum
Поля:
  int value__
  MarketNotAllowedReasonFlags None
  MarketNotAllowedReasonFlags TemporaryFailure
  MarketNotAllowedReasonFlags AccountDisabled
  MarketNotAllowedReasonFlags AccountLockedDown
  MarketNotAllowedReasonFlags AccountLimited
  MarketNotAllowedReasonFlags TradeBanned
  MarketNotAllowedReasonFlags AccountNotTrusted
  MarketNotAllowedReasonFlags SteamGuardNotEnabled
  MarketNotAllowedReasonFlags SteamGuardOnlyRecentlyEnabled
  MarketNotAllowedReasonFlags RecentPasswordReset
  MarketNotAllowedReasonFlags NewPaymentMethod
  MarketNotAllowedReasonFlags InvalidCookie
  MarketNotAllowedReasonFlags UsingNewDevice
  MarketNotAllowedReasonFlags RecentSelfRefund
  MarketNotAllowedReasonFlags NewPaymentMethodCannotBeVerified
  MarketNotAllowedReasonFlags NoRecentPurchases
  MarketNotAllowedReasonFlags AcceptedWalletGift
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.DurationControlProgress
Наследуется от: Enum
Поля:
  int value__
  DurationControlProgress Progress_Full
  DurationControlProgress Progress_Half
  DurationControlProgress Progress_None
  DurationControlProgress ExitSoon_3h
  DurationControlProgress ExitSoon_5h
  DurationControlProgress ExitSoon_Night
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.DurationControlNotification
Наследуется от: Enum
Поля:
  int value__
  DurationControlNotification None
  DurationControlNotification DurationControlNotification1Hour
  DurationControlNotification DurationControlNotification3Hours
  DurationControlNotification HalfProgress
  DurationControlNotification NoProgress
  DurationControlNotification ExitSoon_3h
  DurationControlNotification ExitSoon_5h
  DurationControlNotification ExitSoon_Night
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.DurationControlOnlineState
Наследуется от: Enum
Поля:
  int value__
  DurationControlOnlineState Invalid
  DurationControlOnlineState Offline
  DurationControlOnlineState Online
  DurationControlOnlineState OnlineHighPri
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.GameSearchErrorCode_t
Наследуется от: Enum
Поля:
  int value__
  GameSearchErrorCode_t OK
  GameSearchErrorCode_t Failed_Search_Already_In_Progress
  GameSearchErrorCode_t Failed_No_Search_In_Progress
  GameSearchErrorCode_t Failed_Not_Lobby_Leader
  GameSearchErrorCode_t Failed_No_Host_Available
  GameSearchErrorCode_t Failed_Search_Params_Invalid
  GameSearchErrorCode_t Failed_Offline
  GameSearchErrorCode_t Failed_NotAuthorized
  GameSearchErrorCode_t Failed_Unknown_Error
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.PlayerResult_t
Наследуется от: Enum
Поля:
  int value__
  PlayerResult_t FailedToConnect
  PlayerResult_t Abandoned
  PlayerResult_t Kicked
  PlayerResult_t Incomplete
  PlayerResult_t Completed
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamIPv6ConnectivityProtocol
Наследуется от: Enum
Поля:
  int value__
  SteamIPv6ConnectivityProtocol Invalid
  SteamIPv6ConnectivityProtocol HTTP
  SteamIPv6ConnectivityProtocol UDP
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamIPv6ConnectivityState
Наследуется от: Enum
Поля:
  int value__
  SteamIPv6ConnectivityState Unknown
  SteamIPv6ConnectivityState Good
  SteamIPv6ConnectivityState Bad
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Relationship
Наследуется от: Enum
Поля:
  int value__
  Relationship None
  Relationship Blocked
  Relationship RequestRecipient
  Relationship Friend
  Relationship RequestInitiator
  Relationship Ignored
  Relationship IgnoredFriend
  Relationship Suggested_DEPRECATED
  Relationship Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.FriendState
Наследуется от: Enum
Поля:
  int value__
  FriendState Offline
  FriendState Online
  FriendState Busy
  FriendState Away
  FriendState Snooze
  FriendState LookingToTrade
  FriendState LookingToPlay
  FriendState Invisible
  FriendState Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.FriendFlags
Наследуется от: Enum
Поля:
  int value__
  FriendFlags None
  FriendFlags Blocked
  FriendFlags FriendshipRequested
  FriendFlags Immediate
  FriendFlags ClanMember
  FriendFlags OnGameServer
  FriendFlags RequestingFriendship
  FriendFlags RequestingInfo
  FriendFlags Ignored
  FriendFlags IgnoredFriend
  FriendFlags ChatMember
  FriendFlags All
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UserRestriction
Наследуется от: Enum
Поля:
  int value__
  UserRestriction None
  UserRestriction Unknown
  UserRestriction AnyChat
  UserRestriction VoiceChat
  UserRestriction GroupChat
  UserRestriction Rating
  UserRestriction GameInvites
  UserRestriction Trading
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.OverlayToStoreFlag
Наследуется от: Enum
Поля:
  int value__
  OverlayToStoreFlag None
  OverlayToStoreFlag AddToCart
  OverlayToStoreFlag AddToCartAndShow
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ActivateGameOverlayToWebPageMode
Наследуется от: Enum
Поля:
  int value__
  ActivateGameOverlayToWebPageMode Default
  ActivateGameOverlayToWebPageMode Modal
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.CommunityProfileItemType
Наследуется от: Enum
Поля:
  int value__
  CommunityProfileItemType AnimatedAvatar
  CommunityProfileItemType AvatarFrame
  CommunityProfileItemType ProfileModifier
  CommunityProfileItemType ProfileBackground
  CommunityProfileItemType MiniProfileBackground
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.CommunityProfileItemProperty
Наследуется от: Enum
Поля:
  int value__
  CommunityProfileItemProperty ImageSmall
  CommunityProfileItemProperty ImageLarge
  CommunityProfileItemProperty InternalName
  CommunityProfileItemProperty Title
  CommunityProfileItemProperty Description
  CommunityProfileItemProperty AppID
  CommunityProfileItemProperty TypeID
  CommunityProfileItemProperty Class
  CommunityProfileItemProperty MovieWebM
  CommunityProfileItemProperty MovieMP4
  CommunityProfileItemProperty MovieWebMSmall
  CommunityProfileItemProperty MovieMP4Small
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.PersonaChange
Наследуется от: Enum
Поля:
  int value__
  PersonaChange Name
  PersonaChange Status
  PersonaChange ComeOnline
  PersonaChange GoneOffline
  PersonaChange GamePlayed
  PersonaChange GameServer
  PersonaChange Avatar
  PersonaChange JoinedSource
  PersonaChange LeftSource
  PersonaChange RelationshipChanged
  PersonaChange NameFirstSet
  PersonaChange Broadcast
  PersonaChange Nickname
  PersonaChange SteamLevel
  PersonaChange RichPresence
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamAPICallFailure
Наследуется от: Enum
Поля:
  int value__
  SteamAPICallFailure None
  SteamAPICallFailure SteamGone
  SteamAPICallFailure NetworkFailure
  SteamAPICallFailure InvalidHandle
  SteamAPICallFailure MismatchedCallback
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.GamepadTextInputMode
Наследуется от: Enum
Поля:
  int value__
  GamepadTextInputMode Normal
  GamepadTextInputMode Password
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.GamepadTextInputLineMode
Наследуется от: Enum
Поля:
  int value__
  GamepadTextInputLineMode SingleLine
  GamepadTextInputLineMode MultipleLines
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.TextInputMode
Наследуется от: Enum
Поля:
  int value__
  TextInputMode SingleLine
  TextInputMode MultipleLines
  TextInputMode Email
  TextInputMode Numeric
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.TextFilteringContext
Наследуется от: Enum
Поля:
  int value__
  TextFilteringContext Unknown
  TextFilteringContext GameContent
  TextFilteringContext Chat
  TextFilteringContext Name
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.CheckFileSignature
Наследуется от: Enum
Поля:
  int value__
  CheckFileSignature InvalidSignature
  CheckFileSignature ValidSignature
  CheckFileSignature FileNotFound
  CheckFileSignature NoSignaturesFoundForThisApp
  CheckFileSignature NoSignaturesFoundForThisFile
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.MatchMakingServerResponse
Наследуется от: Enum
Поля:
  int value__
  MatchMakingServerResponse ServerResponded
  MatchMakingServerResponse ServerFailedToRespond
  MatchMakingServerResponse NoServersListedOnMasterServer
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.LobbyType
Наследуется от: Enum
Поля:
  int value__
  LobbyType Private
  LobbyType FriendsOnly
  LobbyType Public
  LobbyType Invisible
  LobbyType PrivateUnique
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.LobbyComparison
Наследуется от: Enum
Поля:
  int value__
  LobbyComparison EqualToOrLessThan
  LobbyComparison LessThan
  LobbyComparison Equal
  LobbyComparison GreaterThan
  LobbyComparison EqualToOrGreaterThan
  LobbyComparison NotEqual
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.LobbyDistanceFilter
Наследуется от: Enum
Поля:
  int value__
  LobbyDistanceFilter Close
  LobbyDistanceFilter Default
  LobbyDistanceFilter Far
  LobbyDistanceFilter Worldwide
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ChatMemberStateChange
Наследуется от: Enum
Поля:
  int value__
  ChatMemberStateChange Entered
  ChatMemberStateChange Left
  ChatMemberStateChange Disconnected
  ChatMemberStateChange Kicked
  ChatMemberStateChange Banned
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamPartyBeaconLocationType
Наследуется от: Enum
Поля:
  int value__
  SteamPartyBeaconLocationType Invalid
  SteamPartyBeaconLocationType ChatGroup
  SteamPartyBeaconLocationType Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamPartyBeaconLocationData
Наследуется от: Enum
Поля:
  int value__
  SteamPartyBeaconLocationData Invalid
  SteamPartyBeaconLocationData Name
  SteamPartyBeaconLocationData IconURLSmall
  SteamPartyBeaconLocationData IconURLMedium
  SteamPartyBeaconLocationData IconURLLarge
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.RemoteStoragePlatform
Наследуется от: Enum
Поля:
  int value__
  RemoteStoragePlatform None
  RemoteStoragePlatform Windows
  RemoteStoragePlatform OSX
  RemoteStoragePlatform PS3
  RemoteStoragePlatform Linux
  RemoteStoragePlatform Switch
  RemoteStoragePlatform Android
  RemoteStoragePlatform IOS
  RemoteStoragePlatform All
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.RemoteStoragePublishedFileVisibility
Наследуется от: Enum
Поля:
  int value__
  RemoteStoragePublishedFileVisibility Public
  RemoteStoragePublishedFileVisibility FriendsOnly
  RemoteStoragePublishedFileVisibility Private
  RemoteStoragePublishedFileVisibility Unlisted
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.WorkshopFileType
Наследуется от: Enum
Поля:
  int value__
  WorkshopFileType First
  WorkshopFileType Community
  WorkshopFileType Microtransaction
  WorkshopFileType Collection
  WorkshopFileType Art
  WorkshopFileType Video
  WorkshopFileType Screenshot
  WorkshopFileType Game
  WorkshopFileType Software
  WorkshopFileType Concept
  WorkshopFileType WebGuide
  WorkshopFileType IntegratedGuide
  WorkshopFileType Merch
  WorkshopFileType ControllerBinding
  WorkshopFileType SteamworksAccessInvite
  WorkshopFileType SteamVideo
  WorkshopFileType GameManagedItem
  WorkshopFileType Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.WorkshopVote
Наследуется от: Enum
Поля:
  int value__
  WorkshopVote Unvoted
  WorkshopVote For
  WorkshopVote Against
  WorkshopVote Later
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.WorkshopFileAction
Наследуется от: Enum
Поля:
  int value__
  WorkshopFileAction Played
  WorkshopFileAction Completed
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.WorkshopEnumerationType
Наследуется от: Enum
Поля:
  int value__
  WorkshopEnumerationType RankedByVote
  WorkshopEnumerationType Recent
  WorkshopEnumerationType Trending
  WorkshopEnumerationType FavoritesOfFriends
  WorkshopEnumerationType VotedByFriends
  WorkshopEnumerationType ContentByFriends
  WorkshopEnumerationType RecentFromFollowedUsers
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.WorkshopVideoProvider
Наследуется от: Enum
Поля:
  int value__
  WorkshopVideoProvider None
  WorkshopVideoProvider Youtube
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UGCReadAction
Наследуется от: Enum
Поля:
  int value__
  UGCReadAction ontinueReadingUntilFinished
  UGCReadAction ontinueReading
  UGCReadAction lose
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.RemoteStorageLocalFileChange
Наследуется от: Enum
Поля:
  int value__
  RemoteStorageLocalFileChange Invalid
  RemoteStorageLocalFileChange FileUpdated
  RemoteStorageLocalFileChange FileDeleted
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.RemoteStorageFilePathType
Наследуется от: Enum
Поля:
  int value__
  RemoteStorageFilePathType Invalid
  RemoteStorageFilePathType Absolute
  RemoteStorageFilePathType APIFilename
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.LeaderboardDataRequest
Наследуется от: Enum
Поля:
  int value__
  LeaderboardDataRequest Global
  LeaderboardDataRequest GlobalAroundUser
  LeaderboardDataRequest Friends
  LeaderboardDataRequest Users
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.LeaderboardUploadScoreMethod
Наследуется от: Enum
Поля:
  int value__
  LeaderboardUploadScoreMethod None
  LeaderboardUploadScoreMethod KeepBest
  LeaderboardUploadScoreMethod ForceUpdate
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.P2PSessionError
Наследуется от: Enum
Поля:
  int value__
  P2PSessionError None
  P2PSessionError NoRightsToApp
  P2PSessionError Timeout
  P2PSessionError NotRunningApp_DELETED
  P2PSessionError DestinationNotLoggedIn_DELETED
  P2PSessionError Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.P2PSend
Наследуется от: Enum
Поля:
  int value__
  P2PSend Unreliable
  P2PSend UnreliableNoDelay
  P2PSend Reliable
  P2PSend ReliableWithBuffering
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.VRScreenshotType
Наследуется от: Enum
Поля:
  int value__
  VRScreenshotType None
  VRScreenshotType Mono
  VRScreenshotType Stereo
  VRScreenshotType MonoCubemap
  VRScreenshotType MonoPanorama
  VRScreenshotType StereoPanorama
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.MusicStatus
Наследуется от: Enum
Поля:
  int value__
  MusicStatus Undefined
  MusicStatus Playing
  MusicStatus Paused
  MusicStatus Idle
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.HTTPMethod
Наследуется от: Enum
Поля:
  int value__
  HTTPMethod Invalid
  HTTPMethod GET
  HTTPMethod HEAD
  HTTPMethod POST
  HTTPMethod PUT
  HTTPMethod DELETE
  HTTPMethod OPTIONS
  HTTPMethod PATCH
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.HTTPStatusCode
Наследуется от: Enum
Поля:
  int value__
  HTTPStatusCode Invalid
  HTTPStatusCode Code100Continue
  HTTPStatusCode Code101SwitchingProtocols
  HTTPStatusCode Code200OK
  HTTPStatusCode Code201Created
  HTTPStatusCode Code202Accepted
  HTTPStatusCode Code203NonAuthoritative
  HTTPStatusCode Code204NoContent
  HTTPStatusCode Code205ResetContent
  HTTPStatusCode Code206PartialContent
  HTTPStatusCode Code300MultipleChoices
  HTTPStatusCode Code301MovedPermanently
  HTTPStatusCode Code302Found
  HTTPStatusCode Code303SeeOther
  HTTPStatusCode Code304NotModified
  HTTPStatusCode Code305UseProxy
  HTTPStatusCode Code307TemporaryRedirect
  HTTPStatusCode Code308PermanentRedirect
  HTTPStatusCode Code400BadRequest
  HTTPStatusCode Code401Unauthorized
  HTTPStatusCode Code402PaymentRequired
  HTTPStatusCode Code403Forbidden
  HTTPStatusCode Code404NotFound
  HTTPStatusCode Code405MethodNotAllowed
  HTTPStatusCode Code406NotAcceptable
  HTTPStatusCode Code407ProxyAuthRequired
  HTTPStatusCode Code408RequestTimeout
  HTTPStatusCode Code409Conflict
  HTTPStatusCode Code410Gone
  HTTPStatusCode Code411LengthRequired
  HTTPStatusCode Code412PreconditionFailed
  HTTPStatusCode Code413RequestEntityTooLarge
  HTTPStatusCode Code414RequestURITooLong
  HTTPStatusCode Code415UnsupportedMediaType
  HTTPStatusCode Code416RequestedRangeNotSatisfiable
  HTTPStatusCode Code417ExpectationFailed
  HTTPStatusCode Code4xxUnknown
  HTTPStatusCode Code429TooManyRequests
  HTTPStatusCode Code444ConnectionClosed
  HTTPStatusCode Code500InternalServerError
  HTTPStatusCode Code501NotImplemented
  HTTPStatusCode Code502BadGateway
  HTTPStatusCode Code503ServiceUnavailable
  HTTPStatusCode Code504GatewayTimeout
  HTTPStatusCode Code505HTTPVersionNotSupported
  HTTPStatusCode Code5xxUnknown
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.InputSourceMode
Наследуется от: Enum
Поля:
  int value__
  InputSourceMode None
  InputSourceMode Dpad
  InputSourceMode Buttons
  InputSourceMode FourButtons
  InputSourceMode AbsoluteMouse
  InputSourceMode RelativeMouse
  InputSourceMode JoystickMove
  InputSourceMode JoystickMouse
  InputSourceMode JoystickCamera
  InputSourceMode ScrollWheel
  InputSourceMode Trigger
  InputSourceMode TouchMenu
  InputSourceMode MouseJoystick
  InputSourceMode MouseRegion
  InputSourceMode RadialMenu
  InputSourceMode SingleButton
  InputSourceMode Switches
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.InputActionOrigin
Наследуется от: Enum
Поля:
  int value__
  InputActionOrigin None
  InputActionOrigin SteamController_A
  InputActionOrigin SteamController_B
  InputActionOrigin SteamController_X
  InputActionOrigin SteamController_Y
  InputActionOrigin SteamController_LeftBumper
  InputActionOrigin SteamController_RightBumper
  InputActionOrigin SteamController_LeftGrip
  InputActionOrigin SteamController_RightGrip
  InputActionOrigin SteamController_Start
  InputActionOrigin SteamController_Back
  InputActionOrigin SteamController_LeftPad_Touch
  InputActionOrigin SteamController_LeftPad_Swipe
  InputActionOrigin SteamController_LeftPad_Click
  InputActionOrigin SteamController_LeftPad_DPadNorth
  InputActionOrigin SteamController_LeftPad_DPadSouth
  InputActionOrigin SteamController_LeftPad_DPadWest
  InputActionOrigin SteamController_LeftPad_DPadEast
  InputActionOrigin SteamController_RightPad_Touch
  InputActionOrigin SteamController_RightPad_Swipe
  InputActionOrigin SteamController_RightPad_Click
  InputActionOrigin SteamController_RightPad_DPadNorth
  InputActionOrigin SteamController_RightPad_DPadSouth
  InputActionOrigin SteamController_RightPad_DPadWest
  InputActionOrigin SteamController_RightPad_DPadEast
  InputActionOrigin SteamController_LeftTrigger_Pull
  InputActionOrigin SteamController_LeftTrigger_Click
  InputActionOrigin SteamController_RightTrigger_Pull
  InputActionOrigin SteamController_RightTrigger_Click
  InputActionOrigin SteamController_LeftStick_Move
  InputActionOrigin SteamController_LeftStick_Click
  InputActionOrigin SteamController_LeftStick_DPadNorth
  InputActionOrigin SteamController_LeftStick_DPadSouth
  InputActionOrigin SteamController_LeftStick_DPadWest
  InputActionOrigin SteamController_LeftStick_DPadEast
  InputActionOrigin SteamController_Gyro_Move
  InputActionOrigin SteamController_Gyro_Pitch
  InputActionOrigin SteamController_Gyro_Yaw
  InputActionOrigin SteamController_Gyro_Roll
  InputActionOrigin SteamController_Reserved0
  InputActionOrigin SteamController_Reserved1
  InputActionOrigin SteamController_Reserved2
  InputActionOrigin SteamController_Reserved3
  InputActionOrigin SteamController_Reserved4
  InputActionOrigin SteamController_Reserved5
  InputActionOrigin SteamController_Reserved6
  InputActionOrigin SteamController_Reserved7
  InputActionOrigin SteamController_Reserved8
  InputActionOrigin SteamController_Reserved9
  InputActionOrigin SteamController_Reserved10
  InputActionOrigin PS4_X
  InputActionOrigin PS4_Circle
  InputActionOrigin PS4_Triangle
  InputActionOrigin PS4_Square
  InputActionOrigin PS4_LeftBumper
  InputActionOrigin PS4_RightBumper
  InputActionOrigin PS4_Options
  InputActionOrigin PS4_Share
  InputActionOrigin PS4_LeftPad_Touch
  InputActionOrigin PS4_LeftPad_Swipe
  InputActionOrigin PS4_LeftPad_Click
  InputActionOrigin PS4_LeftPad_DPadNorth
  InputActionOrigin PS4_LeftPad_DPadSouth
  InputActionOrigin PS4_LeftPad_DPadWest
  InputActionOrigin PS4_LeftPad_DPadEast
  InputActionOrigin PS4_RightPad_Touch
  InputActionOrigin PS4_RightPad_Swipe
  InputActionOrigin PS4_RightPad_Click
  InputActionOrigin PS4_RightPad_DPadNorth
  InputActionOrigin PS4_RightPad_DPadSouth
  InputActionOrigin PS4_RightPad_DPadWest
  InputActionOrigin PS4_RightPad_DPadEast
  InputActionOrigin PS4_CenterPad_Touch
  InputActionOrigin PS4_CenterPad_Swipe
  InputActionOrigin PS4_CenterPad_Click
  InputActionOrigin PS4_CenterPad_DPadNorth
  InputActionOrigin PS4_CenterPad_DPadSouth
  InputActionOrigin PS4_CenterPad_DPadWest
  InputActionOrigin PS4_CenterPad_DPadEast
  InputActionOrigin PS4_LeftTrigger_Pull
  InputActionOrigin PS4_LeftTrigger_Click
  InputActionOrigin PS4_RightTrigger_Pull
  InputActionOrigin PS4_RightTrigger_Click
  InputActionOrigin PS4_LeftStick_Move
  InputActionOrigin PS4_LeftStick_Click
  InputActionOrigin PS4_LeftStick_DPadNorth
  InputActionOrigin PS4_LeftStick_DPadSouth
  InputActionOrigin PS4_LeftStick_DPadWest
  InputActionOrigin PS4_LeftStick_DPadEast
  InputActionOrigin PS4_RightStick_Move
  InputActionOrigin PS4_RightStick_Click
  InputActionOrigin PS4_RightStick_DPadNorth
  InputActionOrigin PS4_RightStick_DPadSouth
  InputActionOrigin PS4_RightStick_DPadWest
  InputActionOrigin PS4_RightStick_DPadEast
  InputActionOrigin PS4_DPad_North
  InputActionOrigin PS4_DPad_South
  InputActionOrigin PS4_DPad_West
  InputActionOrigin PS4_DPad_East
  InputActionOrigin PS4_Gyro_Move
  InputActionOrigin PS4_Gyro_Pitch
  InputActionOrigin PS4_Gyro_Yaw
  InputActionOrigin PS4_Gyro_Roll
  InputActionOrigin PS4_DPad_Move
  InputActionOrigin PS4_Reserved1
  InputActionOrigin PS4_Reserved2
  InputActionOrigin PS4_Reserved3
  InputActionOrigin PS4_Reserved4
  InputActionOrigin PS4_Reserved5
  InputActionOrigin PS4_Reserved6
  InputActionOrigin PS4_Reserved7
  InputActionOrigin PS4_Reserved8
  InputActionOrigin PS4_Reserved9
  InputActionOrigin PS4_Reserved10
  InputActionOrigin XBoxOne_A
  InputActionOrigin XBoxOne_B
  InputActionOrigin XBoxOne_X
  InputActionOrigin XBoxOne_Y
  InputActionOrigin XBoxOne_LeftBumper
  InputActionOrigin XBoxOne_RightBumper
  InputActionOrigin XBoxOne_Menu
  InputActionOrigin XBoxOne_View
  InputActionOrigin XBoxOne_LeftTrigger_Pull
  InputActionOrigin XBoxOne_LeftTrigger_Click
  InputActionOrigin XBoxOne_RightTrigger_Pull
  InputActionOrigin XBoxOne_RightTrigger_Click
  InputActionOrigin XBoxOne_LeftStick_Move
  InputActionOrigin XBoxOne_LeftStick_Click
  InputActionOrigin XBoxOne_LeftStick_DPadNorth
  InputActionOrigin XBoxOne_LeftStick_DPadSouth
  InputActionOrigin XBoxOne_LeftStick_DPadWest
  InputActionOrigin XBoxOne_LeftStick_DPadEast
  InputActionOrigin XBoxOne_RightStick_Move
  InputActionOrigin XBoxOne_RightStick_Click
  InputActionOrigin XBoxOne_RightStick_DPadNorth
  InputActionOrigin XBoxOne_RightStick_DPadSouth
  InputActionOrigin XBoxOne_RightStick_DPadWest
  InputActionOrigin XBoxOne_RightStick_DPadEast
  InputActionOrigin XBoxOne_DPad_North
  InputActionOrigin XBoxOne_DPad_South
  InputActionOrigin XBoxOne_DPad_West
  InputActionOrigin XBoxOne_DPad_East
  InputActionOrigin XBoxOne_DPad_Move
  InputActionOrigin XBoxOne_LeftGrip_Lower
  InputActionOrigin XBoxOne_LeftGrip_Upper
  InputActionOrigin XBoxOne_RightGrip_Lower
  InputActionOrigin XBoxOne_RightGrip_Upper
  InputActionOrigin XBoxOne_Share
  InputActionOrigin XBoxOne_Reserved6
  InputActionOrigin XBoxOne_Reserved7
  InputActionOrigin XBoxOne_Reserved8
  InputActionOrigin XBoxOne_Reserved9
  InputActionOrigin XBoxOne_Reserved10
  InputActionOrigin XBox360_A
  InputActionOrigin XBox360_B
  InputActionOrigin XBox360_X
  InputActionOrigin XBox360_Y
  InputActionOrigin XBox360_LeftBumper
  InputActionOrigin XBox360_RightBumper
  InputActionOrigin XBox360_Start
  InputActionOrigin XBox360_Back
  InputActionOrigin XBox360_LeftTrigger_Pull
  InputActionOrigin XBox360_LeftTrigger_Click
  InputActionOrigin XBox360_RightTrigger_Pull
  InputActionOrigin XBox360_RightTrigger_Click
  InputActionOrigin XBox360_LeftStick_Move
  InputActionOrigin XBox360_LeftStick_Click
  InputActionOrigin XBox360_LeftStick_DPadNorth
  InputActionOrigin XBox360_LeftStick_DPadSouth
  InputActionOrigin XBox360_LeftStick_DPadWest
  InputActionOrigin XBox360_LeftStick_DPadEast
  InputActionOrigin XBox360_RightStick_Move
  InputActionOrigin XBox360_RightStick_Click
  InputActionOrigin XBox360_RightStick_DPadNorth
  InputActionOrigin XBox360_RightStick_DPadSouth
  InputActionOrigin XBox360_RightStick_DPadWest
  InputActionOrigin XBox360_RightStick_DPadEast
  InputActionOrigin XBox360_DPad_North
  InputActionOrigin XBox360_DPad_South
  InputActionOrigin XBox360_DPad_West
  InputActionOrigin XBox360_DPad_East
  InputActionOrigin XBox360_DPad_Move
  InputActionOrigin XBox360_Reserved1
  InputActionOrigin XBox360_Reserved2
  InputActionOrigin XBox360_Reserved3
  InputActionOrigin XBox360_Reserved4
  InputActionOrigin XBox360_Reserved5
  InputActionOrigin XBox360_Reserved6
  InputActionOrigin XBox360_Reserved7
  InputActionOrigin XBox360_Reserved8
  InputActionOrigin XBox360_Reserved9
  InputActionOrigin XBox360_Reserved10
  InputActionOrigin Switch_A
  InputActionOrigin Switch_B
  InputActionOrigin Switch_X
  InputActionOrigin Switch_Y
  InputActionOrigin Switch_LeftBumper
  InputActionOrigin Switch_RightBumper
  InputActionOrigin Switch_Plus
  InputActionOrigin Switch_Minus
  InputActionOrigin Switch_Capture
  InputActionOrigin Switch_LeftTrigger_Pull
  InputActionOrigin Switch_LeftTrigger_Click
  InputActionOrigin Switch_RightTrigger_Pull
  InputActionOrigin Switch_RightTrigger_Click
  InputActionOrigin Switch_LeftStick_Move
  InputActionOrigin Switch_LeftStick_Click
  InputActionOrigin Switch_LeftStick_DPadNorth
  InputActionOrigin Switch_LeftStick_DPadSouth
  InputActionOrigin Switch_LeftStick_DPadWest
  InputActionOrigin Switch_LeftStick_DPadEast
  InputActionOrigin Switch_RightStick_Move
  InputActionOrigin Switch_RightStick_Click
  InputActionOrigin Switch_RightStick_DPadNorth
  InputActionOrigin Switch_RightStick_DPadSouth
  InputActionOrigin Switch_RightStick_DPadWest
  InputActionOrigin Switch_RightStick_DPadEast
  InputActionOrigin Switch_DPad_North
  InputActionOrigin Switch_DPad_South
  InputActionOrigin Switch_DPad_West
  InputActionOrigin Switch_DPad_East
  InputActionOrigin Switch_ProGyro_Move
  InputActionOrigin Switch_ProGyro_Pitch
  InputActionOrigin Switch_ProGyro_Yaw
  InputActionOrigin Switch_ProGyro_Roll
  InputActionOrigin Switch_DPad_Move
  InputActionOrigin Switch_Reserved1
  InputActionOrigin Switch_Reserved2
  InputActionOrigin Switch_Reserved3
  InputActionOrigin Switch_Reserved4
  InputActionOrigin Switch_Reserved5
  InputActionOrigin Switch_Reserved6
  InputActionOrigin Switch_Reserved7
  InputActionOrigin Switch_Reserved8
  InputActionOrigin Switch_Reserved9
  InputActionOrigin Switch_Reserved10
  InputActionOrigin Switch_RightGyro_Move
  InputActionOrigin Switch_RightGyro_Pitch
  InputActionOrigin Switch_RightGyro_Yaw
  InputActionOrigin Switch_RightGyro_Roll
  InputActionOrigin Switch_LeftGyro_Move
  InputActionOrigin Switch_LeftGyro_Pitch
  InputActionOrigin Switch_LeftGyro_Yaw
  InputActionOrigin Switch_LeftGyro_Roll
  InputActionOrigin Switch_LeftGrip_Lower
  InputActionOrigin Switch_LeftGrip_Upper
  InputActionOrigin Switch_RightGrip_Lower
  InputActionOrigin Switch_RightGrip_Upper
  InputActionOrigin Switch_JoyConButton_N
  InputActionOrigin Switch_JoyConButton_E
  InputActionOrigin Switch_JoyConButton_S
  InputActionOrigin Switch_JoyConButton_W
  InputActionOrigin Switch_Reserved15
  InputActionOrigin Switch_Reserved16
  InputActionOrigin Switch_Reserved17
  InputActionOrigin Switch_Reserved18
  InputActionOrigin Switch_Reserved19
  InputActionOrigin Switch_Reserved20
  InputActionOrigin PS5_X
  InputActionOrigin PS5_Circle
  InputActionOrigin PS5_Triangle
  InputActionOrigin PS5_Square
  InputActionOrigin PS5_LeftBumper
  InputActionOrigin PS5_RightBumper
  InputActionOrigin PS5_Option
  InputActionOrigin PS5_Create
  InputActionOrigin PS5_Mute
  InputActionOrigin PS5_LeftPad_Touch
  InputActionOrigin PS5_LeftPad_Swipe
  InputActionOrigin PS5_LeftPad_Click
  InputActionOrigin PS5_LeftPad_DPadNorth
  InputActionOrigin PS5_LeftPad_DPadSouth
  InputActionOrigin PS5_LeftPad_DPadWest
  InputActionOrigin PS5_LeftPad_DPadEast
  InputActionOrigin PS5_RightPad_Touch
  InputActionOrigin PS5_RightPad_Swipe
  InputActionOrigin PS5_RightPad_Click
  InputActionOrigin PS5_RightPad_DPadNorth
  InputActionOrigin PS5_RightPad_DPadSouth
  InputActionOrigin PS5_RightPad_DPadWest
  InputActionOrigin PS5_RightPad_DPadEast
  InputActionOrigin PS5_CenterPad_Touch
  InputActionOrigin PS5_CenterPad_Swipe
  InputActionOrigin PS5_CenterPad_Click
  InputActionOrigin PS5_CenterPad_DPadNorth
  InputActionOrigin PS5_CenterPad_DPadSouth
  InputActionOrigin PS5_CenterPad_DPadWest
  InputActionOrigin PS5_CenterPad_DPadEast
  InputActionOrigin PS5_LeftTrigger_Pull
  InputActionOrigin PS5_LeftTrigger_Click
  InputActionOrigin PS5_RightTrigger_Pull
  InputActionOrigin PS5_RightTrigger_Click
  InputActionOrigin PS5_LeftStick_Move
  InputActionOrigin PS5_LeftStick_Click
  InputActionOrigin PS5_LeftStick_DPadNorth
  InputActionOrigin PS5_LeftStick_DPadSouth
  InputActionOrigin PS5_LeftStick_DPadWest
  InputActionOrigin PS5_LeftStick_DPadEast
  InputActionOrigin PS5_RightStick_Move
  InputActionOrigin PS5_RightStick_Click
  InputActionOrigin PS5_RightStick_DPadNorth
  InputActionOrigin PS5_RightStick_DPadSouth
  InputActionOrigin PS5_RightStick_DPadWest
  InputActionOrigin PS5_RightStick_DPadEast
  InputActionOrigin PS5_DPad_North
  InputActionOrigin PS5_DPad_South
  InputActionOrigin PS5_DPad_West
  InputActionOrigin PS5_DPad_East
  InputActionOrigin PS5_Gyro_Move
  InputActionOrigin PS5_Gyro_Pitch
  InputActionOrigin PS5_Gyro_Yaw
  InputActionOrigin PS5_Gyro_Roll
  InputActionOrigin PS5_DPad_Move
  InputActionOrigin PS5_LeftGrip
  InputActionOrigin PS5_RightGrip
  InputActionOrigin PS5_LeftFn
  InputActionOrigin PS5_RightFn
  InputActionOrigin PS5_Reserved5
  InputActionOrigin PS5_Reserved6
  InputActionOrigin PS5_Reserved7
  InputActionOrigin PS5_Reserved8
  InputActionOrigin PS5_Reserved9
  InputActionOrigin PS5_Reserved10
  InputActionOrigin PS5_Reserved11
  InputActionOrigin PS5_Reserved12
  InputActionOrigin PS5_Reserved13
  InputActionOrigin PS5_Reserved14
  InputActionOrigin PS5_Reserved15
  InputActionOrigin PS5_Reserved16
  InputActionOrigin PS5_Reserved17
  InputActionOrigin PS5_Reserved18
  InputActionOrigin PS5_Reserved19
  InputActionOrigin PS5_Reserved20
  InputActionOrigin SteamDeck_A
  InputActionOrigin SteamDeck_B
  InputActionOrigin SteamDeck_X
  InputActionOrigin SteamDeck_Y
  InputActionOrigin SteamDeck_L1
  InputActionOrigin SteamDeck_R1
  InputActionOrigin SteamDeck_Menu
  InputActionOrigin SteamDeck_View
  InputActionOrigin SteamDeck_LeftPad_Touch
  InputActionOrigin SteamDeck_LeftPad_Swipe
  InputActionOrigin SteamDeck_LeftPad_Click
  InputActionOrigin SteamDeck_LeftPad_DPadNorth
  InputActionOrigin SteamDeck_LeftPad_DPadSouth
  InputActionOrigin SteamDeck_LeftPad_DPadWest
  InputActionOrigin SteamDeck_LeftPad_DPadEast
  InputActionOrigin SteamDeck_RightPad_Touch
  InputActionOrigin SteamDeck_RightPad_Swipe
  InputActionOrigin SteamDeck_RightPad_Click
  InputActionOrigin SteamDeck_RightPad_DPadNorth
  InputActionOrigin SteamDeck_RightPad_DPadSouth
  InputActionOrigin SteamDeck_RightPad_DPadWest
  InputActionOrigin SteamDeck_RightPad_DPadEast
  InputActionOrigin SteamDeck_L2_SoftPull
  InputActionOrigin SteamDeck_L2
  InputActionOrigin SteamDeck_R2_SoftPull
  InputActionOrigin SteamDeck_R2
  InputActionOrigin SteamDeck_LeftStick_Move
  InputActionOrigin SteamDeck_L3
  InputActionOrigin SteamDeck_LeftStick_DPadNorth
  InputActionOrigin SteamDeck_LeftStick_DPadSouth
  InputActionOrigin SteamDeck_LeftStick_DPadWest
  InputActionOrigin SteamDeck_LeftStick_DPadEast
  InputActionOrigin SteamDeck_LeftStick_Touch
  InputActionOrigin SteamDeck_RightStick_Move
  InputActionOrigin SteamDeck_R3
  InputActionOrigin SteamDeck_RightStick_DPadNorth
  InputActionOrigin SteamDeck_RightStick_DPadSouth
  InputActionOrigin SteamDeck_RightStick_DPadWest
  InputActionOrigin SteamDeck_RightStick_DPadEast
  InputActionOrigin SteamDeck_RightStick_Touch
  InputActionOrigin SteamDeck_L4
  InputActionOrigin SteamDeck_R4
  InputActionOrigin SteamDeck_L5
  InputActionOrigin SteamDeck_R5
  InputActionOrigin SteamDeck_DPad_Move
  InputActionOrigin SteamDeck_DPad_North
  InputActionOrigin SteamDeck_DPad_South
  InputActionOrigin SteamDeck_DPad_West
  InputActionOrigin SteamDeck_DPad_East
  InputActionOrigin SteamDeck_Gyro_Move
  InputActionOrigin SteamDeck_Gyro_Pitch
  InputActionOrigin SteamDeck_Gyro_Yaw
  InputActionOrigin SteamDeck_Gyro_Roll
  InputActionOrigin SteamDeck_Reserved1
  InputActionOrigin SteamDeck_Reserved2
  InputActionOrigin SteamDeck_Reserved3
  InputActionOrigin SteamDeck_Reserved4
  InputActionOrigin SteamDeck_Reserved5
  InputActionOrigin SteamDeck_Reserved6
  InputActionOrigin SteamDeck_Reserved7
  InputActionOrigin SteamDeck_Reserved8
  InputActionOrigin SteamDeck_Reserved9
  InputActionOrigin SteamDeck_Reserved10
  InputActionOrigin SteamDeck_Reserved11
  InputActionOrigin SteamDeck_Reserved12
  InputActionOrigin SteamDeck_Reserved13
  InputActionOrigin SteamDeck_Reserved14
  InputActionOrigin SteamDeck_Reserved15
  InputActionOrigin SteamDeck_Reserved16
  InputActionOrigin SteamDeck_Reserved17
  InputActionOrigin SteamDeck_Reserved18
  InputActionOrigin SteamDeck_Reserved19
  InputActionOrigin SteamDeck_Reserved20
  InputActionOrigin Count
  InputActionOrigin MaximumPossibleValue
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.XboxOrigin
Наследуется от: Enum
Поля:
  int value__
  XboxOrigin A
  XboxOrigin B
  XboxOrigin X
  XboxOrigin Y
  XboxOrigin LeftBumper
  XboxOrigin RightBumper
  XboxOrigin Menu
  XboxOrigin View
  XboxOrigin LeftTrigger_Pull
  XboxOrigin LeftTrigger_Click
  XboxOrigin RightTrigger_Pull
  XboxOrigin RightTrigger_Click
  XboxOrigin LeftStick_Move
  XboxOrigin LeftStick_Click
  XboxOrigin LeftStick_DPadNorth
  XboxOrigin LeftStick_DPadSouth
  XboxOrigin LeftStick_DPadWest
  XboxOrigin LeftStick_DPadEast
  XboxOrigin RightStick_Move
  XboxOrigin RightStick_Click
  XboxOrigin RightStick_DPadNorth
  XboxOrigin RightStick_DPadSouth
  XboxOrigin RightStick_DPadWest
  XboxOrigin RightStick_DPadEast
  XboxOrigin DPad_North
  XboxOrigin DPad_South
  XboxOrigin DPad_West
  XboxOrigin DPad_East
  XboxOrigin Count
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamControllerPad
Наследуется от: Enum
Поля:
  int value__
  SteamControllerPad Left
  SteamControllerPad Right
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ControllerHapticLocation
Наследуется от: Enum
Поля:
  int value__
  ControllerHapticLocation Left
  ControllerHapticLocation Right
  ControllerHapticLocation Both
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ControllerHapticType
Наследуется от: Enum
Поля:
  int value__
  ControllerHapticType Off
  ControllerHapticType Tick
  ControllerHapticType Click
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.InputType
Наследуется от: Enum
Поля:
  int value__
  InputType Unknown
  InputType SteamController
  InputType XBox360Controller
  InputType XBoxOneController
  InputType GenericGamepad
  InputType PS4Controller
  InputType AppleMFiController
  InputType AndroidController
  InputType SwitchJoyConPair
  InputType SwitchJoyConSingle
  InputType SwitchProController
  InputType MobileTouch
  InputType PS3Controller
  InputType PS5Controller
  InputType SteamDeckController
  InputType Count
  InputType MaximumPossibleValue
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamInputConfigurationEnableType
Наследуется от: Enum
Поля:
  int value__
  SteamInputConfigurationEnableType None
  SteamInputConfigurationEnableType Playstation
  SteamInputConfigurationEnableType Xbox
  SteamInputConfigurationEnableType Generic
  SteamInputConfigurationEnableType Switch
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamInputLEDFlag
Наследуется от: Enum
Поля:
  int value__
  SteamInputLEDFlag SetColor
  SteamInputLEDFlag RestoreUserDefault
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.GlyphSize
Наследуется от: Enum
Поля:
  int value__
  GlyphSize Small
  GlyphSize Medium
  GlyphSize Large
  GlyphSize Count
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamInputGlyphStyle
Наследуется от: Enum
Поля:
  int value__
  SteamInputGlyphStyle Knockout
  SteamInputGlyphStyle Light
  SteamInputGlyphStyle Dark
  SteamInputGlyphStyle NeutralColorABXY
  SteamInputGlyphStyle SolidABXY
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamInputActionEventType
Наследуется от: Enum
Поля:
  int value__
  SteamInputActionEventType DigitalAction
  SteamInputActionEventType AnalogAction
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ControllerActionOrigin
Наследуется от: Enum
Поля:
  int value__
  ControllerActionOrigin None
  ControllerActionOrigin A
  ControllerActionOrigin B
  ControllerActionOrigin X
  ControllerActionOrigin Y
  ControllerActionOrigin LeftBumper
  ControllerActionOrigin RightBumper
  ControllerActionOrigin LeftGrip
  ControllerActionOrigin RightGrip
  ControllerActionOrigin Start
  ControllerActionOrigin Back
  ControllerActionOrigin LeftPad_Touch
  ControllerActionOrigin LeftPad_Swipe
  ControllerActionOrigin LeftPad_Click
  ControllerActionOrigin LeftPad_DPadNorth
  ControllerActionOrigin LeftPad_DPadSouth
  ControllerActionOrigin LeftPad_DPadWest
  ControllerActionOrigin LeftPad_DPadEast
  ControllerActionOrigin RightPad_Touch
  ControllerActionOrigin RightPad_Swipe
  ControllerActionOrigin RightPad_Click
  ControllerActionOrigin RightPad_DPadNorth
  ControllerActionOrigin RightPad_DPadSouth
  ControllerActionOrigin RightPad_DPadWest
  ControllerActionOrigin RightPad_DPadEast
  ControllerActionOrigin LeftTrigger_Pull
  ControllerActionOrigin LeftTrigger_Click
  ControllerActionOrigin RightTrigger_Pull
  ControllerActionOrigin RightTrigger_Click
  ControllerActionOrigin LeftStick_Move
  ControllerActionOrigin LeftStick_Click
  ControllerActionOrigin LeftStick_DPadNorth
  ControllerActionOrigin LeftStick_DPadSouth
  ControllerActionOrigin LeftStick_DPadWest
  ControllerActionOrigin LeftStick_DPadEast
  ControllerActionOrigin Gyro_Move
  ControllerActionOrigin Gyro_Pitch
  ControllerActionOrigin Gyro_Yaw
  ControllerActionOrigin Gyro_Roll
  ControllerActionOrigin PS4_X
  ControllerActionOrigin PS4_Circle
  ControllerActionOrigin PS4_Triangle
  ControllerActionOrigin PS4_Square
  ControllerActionOrigin PS4_LeftBumper
  ControllerActionOrigin PS4_RightBumper
  ControllerActionOrigin PS4_Options
  ControllerActionOrigin PS4_Share
  ControllerActionOrigin PS4_LeftPad_Touch
  ControllerActionOrigin PS4_LeftPad_Swipe
  ControllerActionOrigin PS4_LeftPad_Click
  ControllerActionOrigin PS4_LeftPad_DPadNorth
  ControllerActionOrigin PS4_LeftPad_DPadSouth
  ControllerActionOrigin PS4_LeftPad_DPadWest
  ControllerActionOrigin PS4_LeftPad_DPadEast
  ControllerActionOrigin PS4_RightPad_Touch
  ControllerActionOrigin PS4_RightPad_Swipe
  ControllerActionOrigin PS4_RightPad_Click
  ControllerActionOrigin PS4_RightPad_DPadNorth
  ControllerActionOrigin PS4_RightPad_DPadSouth
  ControllerActionOrigin PS4_RightPad_DPadWest
  ControllerActionOrigin PS4_RightPad_DPadEast
  ControllerActionOrigin PS4_CenterPad_Touch
  ControllerActionOrigin PS4_CenterPad_Swipe
  ControllerActionOrigin PS4_CenterPad_Click
  ControllerActionOrigin PS4_CenterPad_DPadNorth
  ControllerActionOrigin PS4_CenterPad_DPadSouth
  ControllerActionOrigin PS4_CenterPad_DPadWest
  ControllerActionOrigin PS4_CenterPad_DPadEast
  ControllerActionOrigin PS4_LeftTrigger_Pull
  ControllerActionOrigin PS4_LeftTrigger_Click
  ControllerActionOrigin PS4_RightTrigger_Pull
  ControllerActionOrigin PS4_RightTrigger_Click
  ControllerActionOrigin PS4_LeftStick_Move
  ControllerActionOrigin PS4_LeftStick_Click
  ControllerActionOrigin PS4_LeftStick_DPadNorth
  ControllerActionOrigin PS4_LeftStick_DPadSouth
  ControllerActionOrigin PS4_LeftStick_DPadWest
  ControllerActionOrigin PS4_LeftStick_DPadEast
  ControllerActionOrigin PS4_RightStick_Move
  ControllerActionOrigin PS4_RightStick_Click
  ControllerActionOrigin PS4_RightStick_DPadNorth
  ControllerActionOrigin PS4_RightStick_DPadSouth
  ControllerActionOrigin PS4_RightStick_DPadWest
  ControllerActionOrigin PS4_RightStick_DPadEast
  ControllerActionOrigin PS4_DPad_North
  ControllerActionOrigin PS4_DPad_South
  ControllerActionOrigin PS4_DPad_West
  ControllerActionOrigin PS4_DPad_East
  ControllerActionOrigin PS4_Gyro_Move
  ControllerActionOrigin PS4_Gyro_Pitch
  ControllerActionOrigin PS4_Gyro_Yaw
  ControllerActionOrigin PS4_Gyro_Roll
  ControllerActionOrigin XBoxOne_A
  ControllerActionOrigin XBoxOne_B
  ControllerActionOrigin XBoxOne_X
  ControllerActionOrigin XBoxOne_Y
  ControllerActionOrigin XBoxOne_LeftBumper
  ControllerActionOrigin XBoxOne_RightBumper
  ControllerActionOrigin XBoxOne_Menu
  ControllerActionOrigin XBoxOne_View
  ControllerActionOrigin XBoxOne_LeftTrigger_Pull
  ControllerActionOrigin XBoxOne_LeftTrigger_Click
  ControllerActionOrigin XBoxOne_RightTrigger_Pull
  ControllerActionOrigin XBoxOne_RightTrigger_Click
  ControllerActionOrigin XBoxOne_LeftStick_Move
  ControllerActionOrigin XBoxOne_LeftStick_Click
  ControllerActionOrigin XBoxOne_LeftStick_DPadNorth
  ControllerActionOrigin XBoxOne_LeftStick_DPadSouth
  ControllerActionOrigin XBoxOne_LeftStick_DPadWest
  ControllerActionOrigin XBoxOne_LeftStick_DPadEast
  ControllerActionOrigin XBoxOne_RightStick_Move
  ControllerActionOrigin XBoxOne_RightStick_Click
  ControllerActionOrigin XBoxOne_RightStick_DPadNorth
  ControllerActionOrigin XBoxOne_RightStick_DPadSouth
  ControllerActionOrigin XBoxOne_RightStick_DPadWest
  ControllerActionOrigin XBoxOne_RightStick_DPadEast
  ControllerActionOrigin XBoxOne_DPad_North
  ControllerActionOrigin XBoxOne_DPad_South
  ControllerActionOrigin XBoxOne_DPad_West
  ControllerActionOrigin XBoxOne_DPad_East
  ControllerActionOrigin XBox360_A
  ControllerActionOrigin XBox360_B
  ControllerActionOrigin XBox360_X
  ControllerActionOrigin XBox360_Y
  ControllerActionOrigin XBox360_LeftBumper
  ControllerActionOrigin XBox360_RightBumper
  ControllerActionOrigin XBox360_Start
  ControllerActionOrigin XBox360_Back
  ControllerActionOrigin XBox360_LeftTrigger_Pull
  ControllerActionOrigin XBox360_LeftTrigger_Click
  ControllerActionOrigin XBox360_RightTrigger_Pull
  ControllerActionOrigin XBox360_RightTrigger_Click
  ControllerActionOrigin XBox360_LeftStick_Move
  ControllerActionOrigin XBox360_LeftStick_Click
  ControllerActionOrigin XBox360_LeftStick_DPadNorth
  ControllerActionOrigin XBox360_LeftStick_DPadSouth
  ControllerActionOrigin XBox360_LeftStick_DPadWest
  ControllerActionOrigin XBox360_LeftStick_DPadEast
  ControllerActionOrigin XBox360_RightStick_Move
  ControllerActionOrigin XBox360_RightStick_Click
  ControllerActionOrigin XBox360_RightStick_DPadNorth
  ControllerActionOrigin XBox360_RightStick_DPadSouth
  ControllerActionOrigin XBox360_RightStick_DPadWest
  ControllerActionOrigin XBox360_RightStick_DPadEast
  ControllerActionOrigin XBox360_DPad_North
  ControllerActionOrigin XBox360_DPad_South
  ControllerActionOrigin XBox360_DPad_West
  ControllerActionOrigin XBox360_DPad_East
  ControllerActionOrigin SteamV2_A
  ControllerActionOrigin SteamV2_B
  ControllerActionOrigin SteamV2_X
  ControllerActionOrigin SteamV2_Y
  ControllerActionOrigin SteamV2_LeftBumper
  ControllerActionOrigin SteamV2_RightBumper
  ControllerActionOrigin SteamV2_LeftGrip_Lower
  ControllerActionOrigin SteamV2_LeftGrip_Upper
  ControllerActionOrigin SteamV2_RightGrip_Lower
  ControllerActionOrigin SteamV2_RightGrip_Upper
  ControllerActionOrigin SteamV2_LeftBumper_Pressure
  ControllerActionOrigin SteamV2_RightBumper_Pressure
  ControllerActionOrigin SteamV2_LeftGrip_Pressure
  ControllerActionOrigin SteamV2_RightGrip_Pressure
  ControllerActionOrigin SteamV2_LeftGrip_Upper_Pressure
  ControllerActionOrigin SteamV2_RightGrip_Upper_Pressure
  ControllerActionOrigin SteamV2_Start
  ControllerActionOrigin SteamV2_Back
  ControllerActionOrigin SteamV2_LeftPad_Touch
  ControllerActionOrigin SteamV2_LeftPad_Swipe
  ControllerActionOrigin SteamV2_LeftPad_Click
  ControllerActionOrigin SteamV2_LeftPad_Pressure
  ControllerActionOrigin SteamV2_LeftPad_DPadNorth
  ControllerActionOrigin SteamV2_LeftPad_DPadSouth
  ControllerActionOrigin SteamV2_LeftPad_DPadWest
  ControllerActionOrigin SteamV2_LeftPad_DPadEast
  ControllerActionOrigin SteamV2_RightPad_Touch
  ControllerActionOrigin SteamV2_RightPad_Swipe
  ControllerActionOrigin SteamV2_RightPad_Click
  ControllerActionOrigin SteamV2_RightPad_Pressure
  ControllerActionOrigin SteamV2_RightPad_DPadNorth
  ControllerActionOrigin SteamV2_RightPad_DPadSouth
  ControllerActionOrigin SteamV2_RightPad_DPadWest
  ControllerActionOrigin SteamV2_RightPad_DPadEast
  ControllerActionOrigin SteamV2_LeftTrigger_Pull
  ControllerActionOrigin SteamV2_LeftTrigger_Click
  ControllerActionOrigin SteamV2_RightTrigger_Pull
  ControllerActionOrigin SteamV2_RightTrigger_Click
  ControllerActionOrigin SteamV2_LeftStick_Move
  ControllerActionOrigin SteamV2_LeftStick_Click
  ControllerActionOrigin SteamV2_LeftStick_DPadNorth
  ControllerActionOrigin SteamV2_LeftStick_DPadSouth
  ControllerActionOrigin SteamV2_LeftStick_DPadWest
  ControllerActionOrigin SteamV2_LeftStick_DPadEast
  ControllerActionOrigin SteamV2_Gyro_Move
  ControllerActionOrigin SteamV2_Gyro_Pitch
  ControllerActionOrigin SteamV2_Gyro_Yaw
  ControllerActionOrigin SteamV2_Gyro_Roll
  ControllerActionOrigin Switch_A
  ControllerActionOrigin Switch_B
  ControllerActionOrigin Switch_X
  ControllerActionOrigin Switch_Y
  ControllerActionOrigin Switch_LeftBumper
  ControllerActionOrigin Switch_RightBumper
  ControllerActionOrigin Switch_Plus
  ControllerActionOrigin Switch_Minus
  ControllerActionOrigin Switch_Capture
  ControllerActionOrigin Switch_LeftTrigger_Pull
  ControllerActionOrigin Switch_LeftTrigger_Click
  ControllerActionOrigin Switch_RightTrigger_Pull
  ControllerActionOrigin Switch_RightTrigger_Click
  ControllerActionOrigin Switch_LeftStick_Move
  ControllerActionOrigin Switch_LeftStick_Click
  ControllerActionOrigin Switch_LeftStick_DPadNorth
  ControllerActionOrigin Switch_LeftStick_DPadSouth
  ControllerActionOrigin Switch_LeftStick_DPadWest
  ControllerActionOrigin Switch_LeftStick_DPadEast
  ControllerActionOrigin Switch_RightStick_Move
  ControllerActionOrigin Switch_RightStick_Click
  ControllerActionOrigin Switch_RightStick_DPadNorth
  ControllerActionOrigin Switch_RightStick_DPadSouth
  ControllerActionOrigin Switch_RightStick_DPadWest
  ControllerActionOrigin Switch_RightStick_DPadEast
  ControllerActionOrigin Switch_DPad_North
  ControllerActionOrigin Switch_DPad_South
  ControllerActionOrigin Switch_DPad_West
  ControllerActionOrigin Switch_DPad_East
  ControllerActionOrigin Switch_ProGyro_Move
  ControllerActionOrigin Switch_ProGyro_Pitch
  ControllerActionOrigin Switch_ProGyro_Yaw
  ControllerActionOrigin Switch_ProGyro_Roll
  ControllerActionOrigin Switch_RightGyro_Move
  ControllerActionOrigin Switch_RightGyro_Pitch
  ControllerActionOrigin Switch_RightGyro_Yaw
  ControllerActionOrigin Switch_RightGyro_Roll
  ControllerActionOrigin Switch_LeftGyro_Move
  ControllerActionOrigin Switch_LeftGyro_Pitch
  ControllerActionOrigin Switch_LeftGyro_Yaw
  ControllerActionOrigin Switch_LeftGyro_Roll
  ControllerActionOrigin Switch_LeftGrip_Lower
  ControllerActionOrigin Switch_LeftGrip_Upper
  ControllerActionOrigin Switch_RightGrip_Lower
  ControllerActionOrigin Switch_RightGrip_Upper
  ControllerActionOrigin PS4_DPad_Move
  ControllerActionOrigin XBoxOne_DPad_Move
  ControllerActionOrigin XBox360_DPad_Move
  ControllerActionOrigin Switch_DPad_Move
  ControllerActionOrigin PS5_X
  ControllerActionOrigin PS5_Circle
  ControllerActionOrigin PS5_Triangle
  ControllerActionOrigin PS5_Square
  ControllerActionOrigin PS5_LeftBumper
  ControllerActionOrigin PS5_RightBumper
  ControllerActionOrigin PS5_Option
  ControllerActionOrigin PS5_Create
  ControllerActionOrigin PS5_Mute
  ControllerActionOrigin PS5_LeftPad_Touch
  ControllerActionOrigin PS5_LeftPad_Swipe
  ControllerActionOrigin PS5_LeftPad_Click
  ControllerActionOrigin PS5_LeftPad_DPadNorth
  ControllerActionOrigin PS5_LeftPad_DPadSouth
  ControllerActionOrigin PS5_LeftPad_DPadWest
  ControllerActionOrigin PS5_LeftPad_DPadEast
  ControllerActionOrigin PS5_RightPad_Touch
  ControllerActionOrigin PS5_RightPad_Swipe
  ControllerActionOrigin PS5_RightPad_Click
  ControllerActionOrigin PS5_RightPad_DPadNorth
  ControllerActionOrigin PS5_RightPad_DPadSouth
  ControllerActionOrigin PS5_RightPad_DPadWest
  ControllerActionOrigin PS5_RightPad_DPadEast
  ControllerActionOrigin PS5_CenterPad_Touch
  ControllerActionOrigin PS5_CenterPad_Swipe
  ControllerActionOrigin PS5_CenterPad_Click
  ControllerActionOrigin PS5_CenterPad_DPadNorth
  ControllerActionOrigin PS5_CenterPad_DPadSouth
  ControllerActionOrigin PS5_CenterPad_DPadWest
  ControllerActionOrigin PS5_CenterPad_DPadEast
  ControllerActionOrigin PS5_LeftTrigger_Pull
  ControllerActionOrigin PS5_LeftTrigger_Click
  ControllerActionOrigin PS5_RightTrigger_Pull
  ControllerActionOrigin PS5_RightTrigger_Click
  ControllerActionOrigin PS5_LeftStick_Move
  ControllerActionOrigin PS5_LeftStick_Click
  ControllerActionOrigin PS5_LeftStick_DPadNorth
  ControllerActionOrigin PS5_LeftStick_DPadSouth
  ControllerActionOrigin PS5_LeftStick_DPadWest
  ControllerActionOrigin PS5_LeftStick_DPadEast
  ControllerActionOrigin PS5_RightStick_Move
  ControllerActionOrigin PS5_RightStick_Click
  ControllerActionOrigin PS5_RightStick_DPadNorth
  ControllerActionOrigin PS5_RightStick_DPadSouth
  ControllerActionOrigin PS5_RightStick_DPadWest
  ControllerActionOrigin PS5_RightStick_DPadEast
  ControllerActionOrigin PS5_DPad_Move
  ControllerActionOrigin PS5_DPad_North
  ControllerActionOrigin PS5_DPad_South
  ControllerActionOrigin PS5_DPad_West
  ControllerActionOrigin PS5_DPad_East
  ControllerActionOrigin PS5_Gyro_Move
  ControllerActionOrigin PS5_Gyro_Pitch
  ControllerActionOrigin PS5_Gyro_Yaw
  ControllerActionOrigin PS5_Gyro_Roll
  ControllerActionOrigin XBoxOne_LeftGrip_Lower
  ControllerActionOrigin XBoxOne_LeftGrip_Upper
  ControllerActionOrigin XBoxOne_RightGrip_Lower
  ControllerActionOrigin XBoxOne_RightGrip_Upper
  ControllerActionOrigin XBoxOne_Share
  ControllerActionOrigin SteamDeck_A
  ControllerActionOrigin SteamDeck_B
  ControllerActionOrigin SteamDeck_X
  ControllerActionOrigin SteamDeck_Y
  ControllerActionOrigin SteamDeck_L1
  ControllerActionOrigin SteamDeck_R1
  ControllerActionOrigin SteamDeck_Menu
  ControllerActionOrigin SteamDeck_View
  ControllerActionOrigin SteamDeck_LeftPad_Touch
  ControllerActionOrigin SteamDeck_LeftPad_Swipe
  ControllerActionOrigin SteamDeck_LeftPad_Click
  ControllerActionOrigin SteamDeck_LeftPad_DPadNorth
  ControllerActionOrigin SteamDeck_LeftPad_DPadSouth
  ControllerActionOrigin SteamDeck_LeftPad_DPadWest
  ControllerActionOrigin SteamDeck_LeftPad_DPadEast
  ControllerActionOrigin SteamDeck_RightPad_Touch
  ControllerActionOrigin SteamDeck_RightPad_Swipe
  ControllerActionOrigin SteamDeck_RightPad_Click
  ControllerActionOrigin SteamDeck_RightPad_DPadNorth
  ControllerActionOrigin SteamDeck_RightPad_DPadSouth
  ControllerActionOrigin SteamDeck_RightPad_DPadWest
  ControllerActionOrigin SteamDeck_RightPad_DPadEast
  ControllerActionOrigin SteamDeck_L2_SoftPull
  ControllerActionOrigin SteamDeck_L2
  ControllerActionOrigin SteamDeck_R2_SoftPull
  ControllerActionOrigin SteamDeck_R2
  ControllerActionOrigin SteamDeck_LeftStick_Move
  ControllerActionOrigin SteamDeck_L3
  ControllerActionOrigin SteamDeck_LeftStick_DPadNorth
  ControllerActionOrigin SteamDeck_LeftStick_DPadSouth
  ControllerActionOrigin SteamDeck_LeftStick_DPadWest
  ControllerActionOrigin SteamDeck_LeftStick_DPadEast
  ControllerActionOrigin SteamDeck_LeftStick_Touch
  ControllerActionOrigin SteamDeck_RightStick_Move
  ControllerActionOrigin SteamDeck_R3
  ControllerActionOrigin SteamDeck_RightStick_DPadNorth
  ControllerActionOrigin SteamDeck_RightStick_DPadSouth
  ControllerActionOrigin SteamDeck_RightStick_DPadWest
  ControllerActionOrigin SteamDeck_RightStick_DPadEast
  ControllerActionOrigin SteamDeck_RightStick_Touch
  ControllerActionOrigin SteamDeck_L4
  ControllerActionOrigin SteamDeck_R4
  ControllerActionOrigin SteamDeck_L5
  ControllerActionOrigin SteamDeck_R5
  ControllerActionOrigin SteamDeck_DPad_Move
  ControllerActionOrigin SteamDeck_DPad_North
  ControllerActionOrigin SteamDeck_DPad_South
  ControllerActionOrigin SteamDeck_DPad_West
  ControllerActionOrigin SteamDeck_DPad_East
  ControllerActionOrigin SteamDeck_Gyro_Move
  ControllerActionOrigin SteamDeck_Gyro_Pitch
  ControllerActionOrigin SteamDeck_Gyro_Yaw
  ControllerActionOrigin SteamDeck_Gyro_Roll
  ControllerActionOrigin SteamDeck_Reserved1
  ControllerActionOrigin SteamDeck_Reserved2
  ControllerActionOrigin SteamDeck_Reserved3
  ControllerActionOrigin SteamDeck_Reserved4
  ControllerActionOrigin SteamDeck_Reserved5
  ControllerActionOrigin SteamDeck_Reserved6
  ControllerActionOrigin SteamDeck_Reserved7
  ControllerActionOrigin SteamDeck_Reserved8
  ControllerActionOrigin SteamDeck_Reserved9
  ControllerActionOrigin SteamDeck_Reserved10
  ControllerActionOrigin SteamDeck_Reserved11
  ControllerActionOrigin SteamDeck_Reserved12
  ControllerActionOrigin SteamDeck_Reserved13
  ControllerActionOrigin SteamDeck_Reserved14
  ControllerActionOrigin SteamDeck_Reserved15
  ControllerActionOrigin SteamDeck_Reserved16
  ControllerActionOrigin SteamDeck_Reserved17
  ControllerActionOrigin SteamDeck_Reserved18
  ControllerActionOrigin SteamDeck_Reserved19
  ControllerActionOrigin SteamDeck_Reserved20
  ControllerActionOrigin Switch_JoyConButton_N
  ControllerActionOrigin Switch_JoyConButton_E
  ControllerActionOrigin Switch_JoyConButton_S
  ControllerActionOrigin Switch_JoyConButton_W
  ControllerActionOrigin PS5_LeftGrip
  ControllerActionOrigin PS5_RightGrip
  ControllerActionOrigin PS5_LeftFn
  ControllerActionOrigin PS5_RightFn
  ControllerActionOrigin Count
  ControllerActionOrigin MaximumPossibleValue
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamControllerLEDFlag
Наследуется от: Enum
Поля:
  int value__
  SteamControllerLEDFlag SetColor
  SteamControllerLEDFlag RestoreUserDefault
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UgcType
Наследуется от: Enum
Поля:
  int value__
  UgcType Items
  UgcType Items_Mtx
  UgcType Items_ReadyToUse
  UgcType Collections
  UgcType Artwork
  UgcType Videos
  UgcType Screenshots
  UgcType AllGuides
  UgcType WebGuides
  UgcType IntegratedGuides
  UgcType UsableInGame
  UgcType ControllerBindings
  UgcType GameManagedItems
  UgcType All
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UserUGCList
Наследуется от: Enum
Поля:
  int value__
  UserUGCList Published
  UserUGCList VotedOn
  UserUGCList VotedUp
  UserUGCList VotedDown
  UserUGCList WillVoteLater
  UserUGCList Favorited
  UserUGCList Subscribed
  UserUGCList UsedOrPlayed
  UserUGCList Followed
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UserUGCListSortOrder
Наследуется от: Enum
Поля:
  int value__
  UserUGCListSortOrder CreationOrderDesc
  UserUGCListSortOrder CreationOrderAsc
  UserUGCListSortOrder TitleAsc
  UserUGCListSortOrder LastUpdatedDesc
  UserUGCListSortOrder SubscriptionDateDesc
  UserUGCListSortOrder VoteScoreDesc
  UserUGCListSortOrder ForModeration
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UGCQuery
Наследуется от: Enum
Поля:
  int value__
  UGCQuery RankedByVote
  UGCQuery RankedByPublicationDate
  UGCQuery AcceptedForGameRankedByAcceptanceDate
  UGCQuery RankedByTrend
  UGCQuery FavoritedByFriendsRankedByPublicationDate
  UGCQuery CreatedByFriendsRankedByPublicationDate
  UGCQuery RankedByNumTimesReported
  UGCQuery CreatedByFollowedUsersRankedByPublicationDate
  UGCQuery NotYetRated
  UGCQuery RankedByTotalVotesAsc
  UGCQuery RankedByVotesUp
  UGCQuery RankedByTextSearch
  UGCQuery RankedByTotalUniqueSubscriptions
  UGCQuery RankedByPlaytimeTrend
  UGCQuery RankedByTotalPlaytime
  UGCQuery RankedByAveragePlaytimeTrend
  UGCQuery RankedByLifetimeAveragePlaytime
  UGCQuery RankedByPlaytimeSessionsTrend
  UGCQuery RankedByLifetimePlaytimeSessions
  UGCQuery RankedByLastUpdatedDate
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ItemUpdateStatus
Наследуется от: Enum
Поля:
  int value__
  ItemUpdateStatus Invalid
  ItemUpdateStatus PreparingConfig
  ItemUpdateStatus PreparingContent
  ItemUpdateStatus UploadingContent
  ItemUpdateStatus UploadingPreviewFile
  ItemUpdateStatus CommittingChanges
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ItemState
Наследуется от: Enum
Поля:
  int value__
  ItemState None
  ItemState Subscribed
  ItemState LegacyItem
  ItemState Installed
  ItemState NeedsUpdate
  ItemState Downloading
  ItemState DownloadPending
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ItemStatistic
Наследуется от: Enum
Поля:
  int value__
  ItemStatistic NumSubscriptions
  ItemStatistic NumFavorites
  ItemStatistic NumFollowers
  ItemStatistic NumUniqueSubscriptions
  ItemStatistic NumUniqueFavorites
  ItemStatistic NumUniqueFollowers
  ItemStatistic NumUniqueWebsiteViews
  ItemStatistic ReportScore
  ItemStatistic NumSecondsPlayed
  ItemStatistic NumPlaytimeSessions
  ItemStatistic NumComments
  ItemStatistic NumSecondsPlayedDuringTimePeriod
  ItemStatistic NumPlaytimeSessionsDuringTimePeriod
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ItemPreviewType
Наследуется от: Enum
Поля:
  int value__
  ItemPreviewType Image
  ItemPreviewType YouTubeVideo
  ItemPreviewType Sketchfab
  ItemPreviewType EnvironmentMap_HorizontalCross
  ItemPreviewType EnvironmentMap_LatLong
  ItemPreviewType ReservedMax
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.UGCContentDescriptorID
Наследуется от: Enum
Поля:
  int value__
  UGCContentDescriptorID NudityOrSexualContent
  UGCContentDescriptorID FrequentViolenceOrGore
  UGCContentDescriptorID AdultOnlySexualContent
  UGCContentDescriptorID GratuitousSexualContent
  UGCContentDescriptorID AnyMatureContent
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamItemFlags
Наследуется от: Enum
Поля:
  int value__
  SteamItemFlags NoTrade
  SteamItemFlags Removed
  SteamItemFlags Consumed
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ParentalFeature
Наследуется от: Enum
Поля:
  int value__
  ParentalFeature Invalid
  ParentalFeature Store
  ParentalFeature Community
  ParentalFeature Profile
  ParentalFeature Friends
  ParentalFeature News
  ParentalFeature Trading
  ParentalFeature Settings
  ParentalFeature Console
  ParentalFeature Browser
  ParentalFeature ParentalSetup
  ParentalFeature Library
  ParentalFeature Test
  ParentalFeature SiteLicense
  ParentalFeature KioskMode
  ParentalFeature Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamDeviceFormFactor
Наследуется от: Enum
Поля:
  int value__
  SteamDeviceFormFactor Unknown
  SteamDeviceFormFactor Phone
  SteamDeviceFormFactor Tablet
  SteamDeviceFormFactor Computer
  SteamDeviceFormFactor TV
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamNetworkingAvailability
Наследуется от: Enum
Поля:
  int value__
  SteamNetworkingAvailability CannotTry
  SteamNetworkingAvailability Failed
  SteamNetworkingAvailability Previously
  SteamNetworkingAvailability Retrying
  SteamNetworkingAvailability NeverTried
  SteamNetworkingAvailability Waiting
  SteamNetworkingAvailability Attempting
  SteamNetworkingAvailability Current
  SteamNetworkingAvailability Unknown
  SteamNetworkingAvailability Force32bit
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetIdentityType
Наследуется от: Enum
Поля:
  int value__
  NetIdentityType Invalid
  NetIdentityType SteamID
  NetIdentityType XboxPairwiseID
  NetIdentityType SonyPSN
  NetIdentityType GoogleStadia
  NetIdentityType IPAddress
  NetIdentityType GenericString
  NetIdentityType GenericBytes
  NetIdentityType UnknownType
  NetIdentityType Force32bit
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SteamNetworkingFakeIPType
Наследуется от: Enum
Поля:
  int value__
  SteamNetworkingFakeIPType Invalid
  SteamNetworkingFakeIPType NotFake
  SteamNetworkingFakeIPType GlobalIPv4
  SteamNetworkingFakeIPType LocalIPv4
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ConnectionState
Наследуется от: Enum
Поля:
  int value__
  ConnectionState None
  ConnectionState Connecting
  ConnectionState FindingRoute
  ConnectionState Connected
  ConnectionState ClosedByPeer
  ConnectionState ProblemDetectedLocally
  ConnectionState FinWait
  ConnectionState Linger
  ConnectionState Dead
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetConnectionEnd
Наследуется от: Enum
Поля:
  int value__
  NetConnectionEnd Invalid
  NetConnectionEnd App_Min
  NetConnectionEnd App_Generic
  NetConnectionEnd App_Max
  NetConnectionEnd AppException_Min
  NetConnectionEnd AppException_Generic
  NetConnectionEnd AppException_Max
  NetConnectionEnd Local_Min
  NetConnectionEnd Local_OfflineMode
  NetConnectionEnd Local_ManyRelayConnectivity
  NetConnectionEnd Local_HostedServerPrimaryRelay
  NetConnectionEnd Local_NetworkConfig
  NetConnectionEnd Local_Rights
  NetConnectionEnd Local_P2P_ICE_NoPublicAddresses
  NetConnectionEnd Local_Max
  NetConnectionEnd Remote_Min
  NetConnectionEnd Remote_Timeout
  NetConnectionEnd Remote_BadCrypt
  NetConnectionEnd Remote_BadCert
  NetConnectionEnd Remote_BadProtocolVersion
  NetConnectionEnd Remote_P2P_ICE_NoPublicAddresses
  NetConnectionEnd Remote_Max
  NetConnectionEnd Misc_Min
  NetConnectionEnd Misc_Generic
  NetConnectionEnd Misc_InternalError
  NetConnectionEnd Misc_Timeout
  NetConnectionEnd Misc_SteamConnectivity
  NetConnectionEnd Misc_NoRelaySessionsToClient
  NetConnectionEnd Misc_P2P_Rendezvous
  NetConnectionEnd Misc_P2P_NAT_Firewall
  NetConnectionEnd Misc_PeerSentNoConnection
  NetConnectionEnd Misc_Max
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetConfigScope
Наследуется от: Enum
Поля:
  int value__
  NetConfigScope Global
  NetConfigScope SocketsInterface
  NetConfigScope ListenSocket
  NetConfigScope Connection
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetConfigType
Наследуется от: Enum
Поля:
  int value__
  NetConfigType Int32
  NetConfigType Int64
  NetConfigType Float
  NetConfigType String
  NetConfigType Ptr
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetConfig
Наследуется от: Enum
Поля:
  int value__
  NetConfig Invalid
  NetConfig TimeoutInitial
  NetConfig TimeoutConnected
  NetConfig SendBufferSize
  NetConfig ConnectionUserData
  NetConfig SendRateMin
  NetConfig SendRateMax
  NetConfig NagleTime
  NetConfig IP_AllowWithoutAuth
  NetConfig MTU_PacketSize
  NetConfig MTU_DataSize
  NetConfig Unencrypted
  NetConfig SymmetricConnect
  NetConfig LocalVirtualPort
  NetConfig DualWifi_Enable
  NetConfig EnableDiagnosticsUI
  NetConfig FakePacketLoss_Send
  NetConfig FakePacketLoss_Recv
  NetConfig FakePacketLag_Send
  NetConfig FakePacketLag_Recv
  NetConfig FakePacketReorder_Send
  NetConfig FakePacketReorder_Recv
  NetConfig FakePacketReorder_Time
  NetConfig FakePacketDup_Send
  NetConfig FakePacketDup_Recv
  NetConfig FakePacketDup_TimeMax
  NetConfig PacketTraceMaxBytes
  NetConfig FakeRateLimit_Send_Rate
  NetConfig FakeRateLimit_Send_Burst
  NetConfig FakeRateLimit_Recv_Rate
  NetConfig FakeRateLimit_Recv_Burst
  NetConfig Callback_ConnectionStatusChanged
  NetConfig Callback_AuthStatusChanged
  NetConfig Callback_RelayNetworkStatusChanged
  NetConfig Callback_MessagesSessionRequest
  NetConfig Callback_MessagesSessionFailed
  NetConfig Callback_CreateConnectionSignaling
  NetConfig Callback_FakeIPResult
  NetConfig P2P_STUN_ServerList
  NetConfig P2P_Transport_ICE_Enable
  NetConfig P2P_Transport_ICE_Penalty
  NetConfig P2P_Transport_SDR_Penalty
  NetConfig P2P_TURN_ServerList
  NetConfig P2P_TURN_UserList
  NetConfig P2P_TURN_PassList
  NetConfig P2P_Transport_ICE_Implementation
  NetConfig SDRClient_ConsecutitivePingTimeoutsFailInitial
  NetConfig SDRClient_ConsecutitivePingTimeoutsFail
  NetConfig SDRClient_MinPingsBeforePingAccurate
  NetConfig SDRClient_SingleSocket
  NetConfig SDRClient_ForceRelayCluster
  NetConfig SDRClient_DebugTicketAddress
  NetConfig SDRClient_ForceProxyAddr
  NetConfig SDRClient_FakeClusterPing
  NetConfig LogLevel_AckRTT
  NetConfig LogLevel_PacketDecode
  NetConfig LogLevel_Message
  NetConfig LogLevel_PacketGaps
  NetConfig LogLevel_P2PRendezvous
  NetConfig LogLevel_SDRRelayPings
  NetConfig DELETED_EnumerateDevVars
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetConfigResult
Наследуется от: Enum
Поля:
  int value__
  NetConfigResult BadValue
  NetConfigResult BadScopeObj
  NetConfigResult BufferTooSmall
  NetConfigResult OK
  NetConfigResult OKInherited
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.NetDebugOutput
Наследуется от: Enum
Поля:
  int value__
  NetDebugOutput None
  NetDebugOutput Bug
  NetDebugOutput Error
  NetDebugOutput Important
  NetDebugOutput Warning
  NetDebugOutput Msg
  NetDebugOutput Verbose
  NetDebugOutput Debug
  NetDebugOutput Everything
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.ServerMode
Наследуется от: Enum
Поля:
  int value__
  ServerMode Invalid
  ServerMode NoAuthentication
  ServerMode Authentication
  ServerMode AuthenticationAndSecure
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.BufferManager
Наследуется от: object
Поля:
  Stack`1<ReferenceCounter> ReferenceCounterPool
  Dictionary`2<int, Stack`1<IntPtr>> BufferPools
  Dictionary`2<IntPtr, ReferenceCounter> ReferenceCounters
  FreeFn FreeFunctionPin
  IntPtr FreeFunctionPointer
  int Bucket512
  int Bucket1Kb
  int Bucket4Kb
  int Bucket16Kb
  int Bucket64Kb
  int Bucket256Kb
Свойства:
Методы:
  IntPtr Get(int size, int referenceCount)
  void Free(NetMsg* msg)
  ReferenceCounter AllocateReferenceCounter(IntPtr ptr, int size, int referenceCount)
  void FreeReferenceCounter(ReferenceCounter counter)
  void AllocateBuffer(int minimumSize, IntPtr& ptr, Int32& size)
  void FreeBuffer(IntPtr ptr, int size)
  int GetBucketSize(int size)
  int GetBucketLimit(int size)
  void .cctor()
--------------------------------------------------
Класс: Steamworks.ConnectionManager
Наследуется от: object
Поля:
  IConnectionManager <Interface>k__BackingField
  Connection Connection
  ConnectionInfo <ConnectionInfo>k__BackingField
  bool Connected
  bool Connecting
Свойства:
  IConnectionManager Interface
  ConnectionInfo ConnectionInfo
  string ConnectionName
  long UserData
Методы:
  IConnectionManager get_Interface()
  void set_Interface(IConnectionManager value)
  ConnectionInfo get_ConnectionInfo()
  void set_ConnectionInfo(ConnectionInfo value)
  string get_ConnectionName()
  void set_ConnectionName(string value)
  long get_UserData()
  void set_UserData(long value)
  void Close(bool linger, int reasonCode, string debugString)
  string ToString()
  void OnConnectionChanged(ConnectionInfo info)
  void OnConnecting(ConnectionInfo info)
  void OnConnected(ConnectionInfo info)
  void OnDisconnected(ConnectionInfo info)
  int Receive(int bufferSize, bool receiveToEnd)
  void SendMessages(Connection[] connections, int connectionCount, IntPtr ptr, int size, SendType sendType, Result[] results)
  void SendMessages(Connection[] connections, int connectionCount, Byte[] data, SendType sendType, Result[] results)
  void SendMessages(Connection[] connections, int connectionCount, Byte[] data, int offset, int length, SendType sendType, Result[] results)
  void SendMessages(Connection[] connections, int connectionCount, string str, SendType sendType, Result[] results)
  void ReceiveMessage(NetMsg*& msg)
  void OnMessage(IntPtr data, int size, long messageNum, long recvTime, int channel)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.NetDebugFunc
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(NetDebugOutput nType, IntPtr pszMsg)
  IAsyncResult BeginInvoke(NetDebugOutput nType, IntPtr pszMsg, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.FnSteamNetConnectionStatusChanged
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SteamNetConnectionStatusChangedCallback_t& arg)
  IAsyncResult BeginInvoke(SteamNetConnectionStatusChangedCallback_t& arg, AsyncCallback callback, object object)
  void EndInvoke(SteamNetConnectionStatusChangedCallback_t& arg, IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.FnSteamNetAuthenticationStatusChanged
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SteamNetAuthenticationStatus_t& arg)
  IAsyncResult BeginInvoke(SteamNetAuthenticationStatus_t& arg, AsyncCallback callback, object object)
  void EndInvoke(SteamNetAuthenticationStatus_t& arg, IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.FnSteamRelayNetworkStatusChanged
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SteamRelayNetworkStatus_t& arg)
  IAsyncResult BeginInvoke(SteamRelayNetworkStatus_t& arg, AsyncCallback callback, object object)
  void EndInvoke(SteamRelayNetworkStatus_t& arg, IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.FnSteamNetworkingMessagesSessionRequest
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SteamNetworkingMessagesSessionRequest_t& arg)
  IAsyncResult BeginInvoke(SteamNetworkingMessagesSessionRequest_t& arg, AsyncCallback callback, object object)
  void EndInvoke(SteamNetworkingMessagesSessionRequest_t& arg, IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.FnSteamNetworkingMessagesSessionFailed
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SteamNetworkingMessagesSessionFailed_t& arg)
  IAsyncResult BeginInvoke(SteamNetworkingMessagesSessionFailed_t& arg, AsyncCallback callback, object object)
  void EndInvoke(SteamNetworkingMessagesSessionFailed_t& arg, IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.FnSteamNetworkingFakeIPResult
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(SteamNetworkingFakeIPResult_t& arg)
  IAsyncResult BeginInvoke(SteamNetworkingFakeIPResult_t& arg, AsyncCallback callback, object object)
  void EndInvoke(SteamNetworkingFakeIPResult_t& arg, IAsyncResult result)
--------------------------------------------------
Класс: Steamworks.IConnectionManager
Поля:
Свойства:
Методы:
  void OnConnecting(ConnectionInfo info)
  void OnConnected(ConnectionInfo info)
  void OnDisconnected(ConnectionInfo info)
  void OnMessage(IntPtr data, int size, long messageNum, long recvTime, int channel)
--------------------------------------------------
Класс: Steamworks.ISocketManager
Поля:
Свойства:
Методы:
  void OnConnecting(Connection connection, ConnectionInfo info)
  void OnConnected(Connection connection, ConnectionInfo info)
  void OnDisconnected(Connection connection, ConnectionInfo info)
  void OnMessage(Connection connection, NetIdentity identity, IntPtr data, int size, long messageNum, long recvTime, int channel)
--------------------------------------------------
Класс: Steamworks.SocketManager
Наследуется от: object
Поля:
  ISocketManager <Interface>k__BackingField
  HashSet`1<Connection> Connecting
  HashSet`1<Connection> Connected
  Socket <Socket>k__BackingField
  HSteamNetPollGroup pollGroup
Свойства:
  ISocketManager Interface
  Socket Socket
Методы:
  ISocketManager get_Interface()
  void set_Interface(ISocketManager value)
  Socket get_Socket()
  void set_Socket(Socket value)
  string ToString()
  void Initialize()
  bool Close()
  void OnConnectionChanged(Connection connection, ConnectionInfo info)
  void OnConnecting(Connection connection, ConnectionInfo info)
  void OnConnected(Connection connection, ConnectionInfo info)
  void OnDisconnected(Connection connection, ConnectionInfo info)
  int Receive(int bufferSize, bool receiveToEnd)
  void ReceiveMessage(IntPtr msgPtr)
  void OnMessage(Connection connection, NetIdentity identity, IntPtr data, int size, long messageNum, long recvTime, int channel)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamApps
Наследуется от: SteamSharedClass`1<SteamApps>
Поля:
  Action`1<AppId> OnDlcInstalled
  Action OnNewLaunchParameters
Свойства:
  ISteamApps Internal
  bool IsSubscribed
  bool IsSubscribedFromFamilySharing
  bool IsLowViolence
  bool IsCybercafe
  bool IsVACBanned
  string GameLanguage
  String[] AvailableLanguages
  bool IsSubscribedFromFreeWeekend
  string CurrentBetaName
  SteamId AppOwner
  int BuildId
  string CommandLine
Методы:
  ISteamApps get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents()
  void add_OnDlcInstalled(Action`1<AppId> value)
  void remove_OnDlcInstalled(Action`1<AppId> value)
  void add_OnNewLaunchParameters(Action value)
  void remove_OnNewLaunchParameters(Action value)
  bool get_IsSubscribed()
  bool get_IsSubscribedFromFamilySharing()
  bool get_IsLowViolence()
  bool get_IsCybercafe()
  bool get_IsVACBanned()
  string get_GameLanguage()
  String[] get_AvailableLanguages()
  bool IsSubscribedToApp(AppId appid)
  bool IsDlcInstalled(AppId appid)
  DateTime PurchaseTime(AppId appid)
  bool get_IsSubscribedFromFreeWeekend()
  IEnumerable`1<DlcInformation> DlcInformation()
  void InstallDlc(AppId appid)
  void UninstallDlc(AppId appid)
  string get_CurrentBetaName()
  void MarkContentCorrupt(bool missingFilesOnly)
  IEnumerable`1<DepotId> InstalledDepots(AppId appid)
  string AppInstallDir(AppId appid)
  bool IsAppInstalled(AppId appid)
  SteamId get_AppOwner()
  string GetLaunchParam(string param)
  DownloadProgress DlcDownloadProgress(AppId appid)
  int get_BuildId()
  Task`1<Nullable`1<FileDetails>> GetFileDetailsAsync(string filename)
  string get_CommandLine()
  bool IsTimedTrial(Int32& secondsAllowed, Int32& secondsPlayed)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamClient
Наследуется от: object
Поля:
  bool initialized
  List`1<SteamClass> openInterfaces
  AppId <AppId>k__BackingField
Свойства:
  bool IsValid
  bool IsLoggedOn
  SteamId SteamId
  string Name
  FriendState State
  AppId AppId
Методы:
  void Init(UInt32 appid, bool asyncCallbacks)
  void AddInterface()
  void ShutdownInterfaces()
  bool get_IsValid()
  void Shutdown()
  void Cleanup()
  void RunCallbacks()
  bool get_IsLoggedOn()
  SteamId get_SteamId()
  string get_Name()
  FriendState get_State()
  AppId get_AppId()
  void set_AppId(AppId value)
  bool RestartAppIfNecessary(UInt32 appid)
  void ValidCheck()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamFriends
Наследуется от: SteamClientClass`1<SteamFriends>
Поля:
  Dictionary`2<string, string> richPresence
  Action`3<Friend, string, string> OnChatMessage
  Action`3<Friend, string, string> OnClanChatMessage
  Action`1<Friend> OnPersonaStateChange
  Action`2<Friend, string> OnGameRichPresenceJoinRequested
  Action`1<bool> OnGameOverlayActivated
  Action`2<string, string> OnGameServerChangeRequested
  Action`2<Lobby, SteamId> OnGameLobbyJoinRequested
  Action`1<Friend> OnFriendRichPresenceUpdate
  Action`1<string> OnOverlayBrowserProtocol
  bool _listenForFriendsMessages
Свойства:
  ISteamFriends Internal
  bool ListenForFriendsMessages
Методы:
  ISteamFriends get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents()
  void add_OnChatMessage(Action`3<Friend, string, string> value)
  void remove_OnChatMessage(Action`3<Friend, string, string> value)
  void add_OnClanChatMessage(Action`3<Friend, string, string> value)
  void remove_OnClanChatMessage(Action`3<Friend, string, string> value)
  void add_OnPersonaStateChange(Action`1<Friend> value)
  void remove_OnPersonaStateChange(Action`1<Friend> value)
  void add_OnGameRichPresenceJoinRequested(Action`2<Friend, string> value)
  void remove_OnGameRichPresenceJoinRequested(Action`2<Friend, string> value)
  void add_OnGameOverlayActivated(Action`1<bool> value)
  void remove_OnGameOverlayActivated(Action`1<bool> value)
  void add_OnGameServerChangeRequested(Action`2<string, string> value)
  void remove_OnGameServerChangeRequested(Action`2<string, string> value)
  void add_OnGameLobbyJoinRequested(Action`2<Lobby, SteamId> value)
  void remove_OnGameLobbyJoinRequested(Action`2<Lobby, SteamId> value)
  void add_OnFriendRichPresenceUpdate(Action`1<Friend> value)
  void remove_OnFriendRichPresenceUpdate(Action`1<Friend> value)
  void add_OnOverlayBrowserProtocol(Action`1<string> value)
  void remove_OnOverlayBrowserProtocol(Action`1<string> value)
  void OnFriendChatMessage(GameConnectedFriendChatMsg_t data)
  void OnGameConnectedClanChatMessage(GameConnectedClanChatMsg_t data)
  IEnumerable`1<Friend> GetFriendsWithFlag(FriendFlags flag)
  IEnumerable`1<Friend> GetFriends()
  IEnumerable`1<Friend> GetBlocked()
  IEnumerable`1<Friend> GetFriendsRequested()
  IEnumerable`1<Friend> GetFriendsClanMembers()
  IEnumerable`1<Friend> GetFriendsOnGameServer()
  IEnumerable`1<Friend> GetFriendsRequestingFriendship()
  IEnumerable`1<Friend> GetPlayedWith()
  IEnumerable`1<Friend> GetFromSource(SteamId steamid)
  IEnumerable`1<Clan> GetClans()
  void OpenOverlay(string type)
  void OpenUserOverlay(SteamId id, string type)
  void OpenStoreOverlay(AppId id, OverlayToStoreFlag overlayToStoreFlag)
  void OpenWebOverlay(string url, bool modal)
  void OpenGameInviteOverlay(SteamId lobby)
  void SetPlayedWith(SteamId steamid)
  bool RequestUserInformation(SteamId steamid, bool nameonly)
  Task CacheUserInformationAsync(SteamId steamid, bool nameonly)
  Task`1<Nullable`1<Image>> GetSmallAvatarAsync(SteamId steamid)
  Task`1<Nullable`1<Image>> GetMediumAvatarAsync(SteamId steamid)
  Task`1<Nullable`1<Image>> GetLargeAvatarAsync(SteamId steamid)
  string GetRichPresence(string key)
  bool SetRichPresence(string key, string value)
  void ClearRichPresence()
  bool get_ListenForFriendsMessages()
  void set_ListenForFriendsMessages(bool value)
  Task`1<bool> IsFollowing(SteamId steamID)
  Task`1<int> GetFollowerCount(SteamId steamID)
  Task`1<SteamId[]> GetFollowingList()
  bool RegisterProtocolInOverlayBrowser(string protocol)
  Task`1<bool> JoinClanChatRoom(SteamId chatId)
  bool SendClanChatRoomMessage(SteamId chatId, string message)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamInput
Наследуется от: SteamClientClass`1<SteamInput>
Поля:
  int STEAM_CONTROLLER_MAX_COUNT
  InputHandle_t[] queryArray
  Dictionary`2<string, InputDigitalActionHandle_t> DigitalHandles
  Dictionary`2<string, InputAnalogActionHandle_t> AnalogHandles
  Dictionary`2<string, InputActionSetHandle_t> ActionSets
Свойства:
  ISteamInput Internal
  IEnumerable`1<Controller> Controllers
Методы:
  ISteamInput get_Internal()
  bool InitializeInterface(bool server)
  void RunFrame()
  IEnumerable`1<Controller> get_Controllers()
  string GetDigitalActionGlyph(Controller controller, string action)
  string GetPngActionGlyph(Controller controller, string action, GlyphSize size)
  string GetSvgActionGlyph(Controller controller, string action)
  InputDigitalActionHandle_t GetDigitalActionHandle(string name)
  InputAnalogActionHandle_t GetAnalogActionHandle(string name)
  InputActionSetHandle_t GetActionSetHandle(string name)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamInventory
Наследуется от: SteamSharedClass`1<SteamInventory>
Поля:
  Action`1<InventoryResult> OnInventoryUpdated
  Action OnDefinitionsUpdated
  string <Currency>k__BackingField
  InventoryItem[] <Items>k__BackingField
  InventoryDef[] <Definitions>k__BackingField
  Dictionary`2<int, InventoryDef> _defMap
Свойства:
  ISteamInventory Internal
  string Currency
  InventoryItem[] Items
  InventoryDef[] Definitions
Методы:
  ISteamInventory get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  void InventoryUpdated(SteamInventoryFullUpdate_t x)
  void add_OnInventoryUpdated(Action`1<InventoryResult> value)
  void remove_OnInventoryUpdated(Action`1<InventoryResult> value)
  void add_OnDefinitionsUpdated(Action value)
  void remove_OnDefinitionsUpdated(Action value)
  void LoadDefinitions()
  void LoadItemDefinitions()
  Task`1<bool> WaitForDefinitions(float timeoutSeconds)
  InventoryDef FindDefinition(InventoryDefId defId)
  string get_Currency()
  void set_Currency(string value)
  Task`1<InventoryDef[]> GetDefinitionsWithPricesAsync()
  InventoryItem[] get_Items()
  void set_Items(InventoryItem[] value)
  InventoryDef[] get_Definitions()
  void set_Definitions(InventoryDef[] value)
  InventoryDef[] GetDefinitions()
  bool GetAllItems()
  Task`1<Nullable`1<InventoryResult>> GetAllItemsAsync()
  Task`1<Nullable`1<InventoryResult>> GenerateItemAsync(InventoryDef target, int amount)
  Task`1<Nullable`1<InventoryResult>> CraftItemAsync(InventoryItem[] list, InventoryDef target)
  Task`1<Nullable`1<InventoryResult>> CraftItemAsync(Amount[] list, InventoryDef target)
  Task`1<Nullable`1<InventoryResult>> DeserializeAsync(Byte[] data, int dataLength)
  Task`1<Nullable`1<InventoryResult>> GrantPromoItemsAsync()
  Task`1<Nullable`1<InventoryResult>> TriggerItemDropAsync(InventoryDefId id)
  Task`1<Nullable`1<InventoryResult>> AddPromoItemAsync(InventoryDefId id)
  Task`1<Nullable`1<InventoryPurchaseResult>> StartPurchaseAsync(InventoryDef[] items)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamMatchmaking
Наследуется от: SteamClientClass`1<SteamMatchmaking>
Поля:
  Action`2<Friend, Lobby> OnLobbyInvite
  Action`1<Lobby> OnLobbyEntered
  Action`2<Result, Lobby> OnLobbyCreated
  Action`4<Lobby, UInt32, ushort, SteamId> OnLobbyGameCreated
  Action`1<Lobby> OnLobbyDataChanged
  Action`2<Lobby, Friend> OnLobbyMemberDataChanged
  Action`2<Lobby, Friend> OnLobbyMemberJoined
  Action`2<Lobby, Friend> OnLobbyMemberLeave
  Action`2<Lobby, Friend> OnLobbyMemberDisconnected
  Action`3<Lobby, Friend, Friend> OnLobbyMemberKicked
  Action`3<Lobby, Friend, Friend> OnLobbyMemberBanned
  Action`3<Lobby, Friend, string> OnChatMessage
Свойства:
  ISteamMatchmaking Internal
  int MaxLobbyKeyLength
  LobbyQuery LobbyList
Методы:
  ISteamMatchmaking get_Internal()
  bool InitializeInterface(bool server)
  int get_MaxLobbyKeyLength()
  void InstallEvents()
  void OnLobbyChatMessageRecievedAPI(LobbyChatMsg_t callback)
  void add_OnLobbyInvite(Action`2<Friend, Lobby> value)
  void remove_OnLobbyInvite(Action`2<Friend, Lobby> value)
  void add_OnLobbyEntered(Action`1<Lobby> value)
  void remove_OnLobbyEntered(Action`1<Lobby> value)
  void add_OnLobbyCreated(Action`2<Result, Lobby> value)
  void remove_OnLobbyCreated(Action`2<Result, Lobby> value)
  void add_OnLobbyGameCreated(Action`4<Lobby, UInt32, ushort, SteamId> value)
  void remove_OnLobbyGameCreated(Action`4<Lobby, UInt32, ushort, SteamId> value)
  void add_OnLobbyDataChanged(Action`1<Lobby> value)
  void remove_OnLobbyDataChanged(Action`1<Lobby> value)
  void add_OnLobbyMemberDataChanged(Action`2<Lobby, Friend> value)
  void remove_OnLobbyMemberDataChanged(Action`2<Lobby, Friend> value)
  void add_OnLobbyMemberJoined(Action`2<Lobby, Friend> value)
  void remove_OnLobbyMemberJoined(Action`2<Lobby, Friend> value)
  void add_OnLobbyMemberLeave(Action`2<Lobby, Friend> value)
  void remove_OnLobbyMemberLeave(Action`2<Lobby, Friend> value)
  void add_OnLobbyMemberDisconnected(Action`2<Lobby, Friend> value)
  void remove_OnLobbyMemberDisconnected(Action`2<Lobby, Friend> value)
  void add_OnLobbyMemberKicked(Action`3<Lobby, Friend, Friend> value)
  void remove_OnLobbyMemberKicked(Action`3<Lobby, Friend, Friend> value)
  void add_OnLobbyMemberBanned(Action`3<Lobby, Friend, Friend> value)
  void remove_OnLobbyMemberBanned(Action`3<Lobby, Friend, Friend> value)
  void add_OnChatMessage(Action`3<Lobby, Friend, string> value)
  void remove_OnChatMessage(Action`3<Lobby, Friend, string> value)
  LobbyQuery get_LobbyList()
  Task`1<Nullable`1<Lobby>> CreateLobbyAsync(int maxMembers)
  Task`1<Nullable`1<Lobby>> JoinLobbyAsync(SteamId lobbyId)
  IEnumerable`1<ServerInfo> GetFavoriteServers()
  IEnumerable`1<ServerInfo> GetHistoryServers()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamMatchmakingServers
Наследуется от: SteamClientClass`1<SteamMatchmakingServers>
Поля:
Свойства:
  ISteamMatchmakingServers Internal
Методы:
  ISteamMatchmakingServers get_Internal()
  bool InitializeInterface(bool server)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamMusic
Наследуется от: SteamClientClass`1<SteamMusic>
Поля:
  Action OnPlaybackChanged
  Action`1<float> OnVolumeChanged
Свойства:
  ISteamMusic Internal
  bool IsEnabled
  bool IsPlaying
  MusicStatus Status
  float Volume
Методы:
  ISteamMusic get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents()
  void add_OnPlaybackChanged(Action value)
  void remove_OnPlaybackChanged(Action value)
  void add_OnVolumeChanged(Action`1<float> value)
  void remove_OnVolumeChanged(Action`1<float> value)
  bool get_IsEnabled()
  bool get_IsPlaying()
  MusicStatus get_Status()
  void Play()
  void Pause()
  void PlayPrevious()
  void PlayNext()
  float get_Volume()
  void set_Volume(float value)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamNetworking
Наследуется от: SteamSharedClass`1<SteamNetworking>
Поля:
  Action`1<SteamId> OnP2PSessionRequest
  Action`2<SteamId, P2PSessionError> OnP2PConnectionFailed
Свойства:
  ISteamNetworking Internal
Методы:
  ISteamNetworking get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  bool AcceptP2PSessionWithUser(SteamId user)
  bool AllowP2PPacketRelay(bool allow)
  bool CloseP2PSessionWithUser(SteamId user)
  bool IsP2PPacketAvailable(int channel)
  bool IsP2PPacketAvailable(UInt32& msgSize, int channel)
  Nullable`1<P2Packet> ReadP2PPacket(int channel)
  bool ReadP2PPacket(Byte[] buffer, UInt32& size, SteamId& steamid, int channel)
  bool ReadP2PPacket(Byte* buffer, UInt32 cbuf, UInt32& size, SteamId& steamid, int channel)
  bool SendP2PPacket(SteamId steamid, Byte[] data, int length, int nChannel, P2PSend sendType)
  bool SendP2PPacket(SteamId steamid, Byte* data, UInt32 length, int nChannel, P2PSend sendType)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamNetworkingSockets
Наследуется от: SteamSharedClass`1<SteamNetworkingSockets>
Поля:
  Dictionary`2<UInt32, SocketManager> SocketInterfaces
  Dictionary`2<UInt32, ConnectionManager> ConnectionInterfaces
  Action`2<Connection, ConnectionInfo> OnConnectionStatusChanged
  Action`1<NetAddress> OnFakeIPResult
Свойства:
  ISteamNetworkingSockets Internal
  NetIdentity Identity
Методы:
  ISteamNetworkingSockets get_Internal()
  NetIdentity get_Identity()
  bool InitializeInterface(bool server)
  SocketManager GetSocketManager(UInt32 id)
  void SetSocketManager(UInt32 id, SocketManager manager)
  ConnectionManager GetConnectionManager(UInt32 id)
  void SetConnectionManager(UInt32 id, ConnectionManager manager)
  void InstallEvents(bool server)
  void ConnectionStatusChanged(SteamNetConnectionStatusChangedCallback_t data)
  void add_OnConnectionStatusChanged(Action`2<Connection, ConnectionInfo> value)
  void remove_OnConnectionStatusChanged(Action`2<Connection, ConnectionInfo> value)
  void FakeIPResult(SteamNetworkingFakeIPResult_t data)
  void add_OnFakeIPResult(Action`1<NetAddress> value)
  void remove_OnFakeIPResult(Action`1<NetAddress> value)
  T CreateNormalSocket(NetAddress address)
  SocketManager CreateNormalSocket(NetAddress address, ISocketManager intrface)
  T ConnectNormal(NetAddress address)
  ConnectionManager ConnectNormal(NetAddress address, IConnectionManager iface)
  T CreateRelaySocket(int virtualport)
  SocketManager CreateRelaySocket(int virtualport, ISocketManager intrface)
  T ConnectRelay(SteamId serverId, int virtualport)
  ConnectionManager ConnectRelay(SteamId serverId, int virtualport, IConnectionManager iface)
  bool RequestFakeIP(int numFakePorts)
  Result GetFakeIP(int fakePortIndex, NetAddress& address)
  T CreateRelaySocketFakeIP(int fakePortIndex)
  SocketManager CreateRelaySocketFakeIP(int fakePortIndex, ISocketManager intrface)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamNetworkingUtils
Наследуется от: SteamSharedClass`1<SteamNetworkingUtils>
Поля:
  Action`2<NetDebugOutput, string> OnDebugOutput
  SteamNetworkingAvailability <Status>k__BackingField
  NetDebugOutput _debugLevel
  NetDebugFunc _debugFunc
  ConcurrentQueue`1<DebugMessage> debugMessages
Свойства:
  ISteamNetworkingUtils Internal
  SteamNetworkingAvailability Status
  Nullable`1<NetPingLocation> LocalPingLocation
  long LocalTimestamp
  float FakeSendPacketLoss
  float FakeRecvPacketLoss
  float FakeSendPacketLag
  float FakeRecvPacketLag
  int ConnectionTimeout
  int Timeout
  int SendBufferSize
  int SendRateMin
  int SendRateMax
  int NagleTime
  int AllowWithoutAuth
  int Unencrypted
  int DebugLevelAckRTT
  int DebugLevelPacketDecode
  int DebugLevelMessage
  int DebugLevelPacketGaps
  int DebugLevelP2PRendezvous
  int DebugLevelSDRRelayPings
  NetDebugOutput DebugLevel
Методы:
  ISteamNetworkingUtils get_Internal()
  bool InitializeInterface(bool server)
  void InstallCallbacks(bool server)
  void add_OnDebugOutput(Action`2<NetDebugOutput, string> value)
  void remove_OnDebugOutput(Action`2<NetDebugOutput, string> value)
  SteamNetworkingAvailability get_Status()
  void set_Status(SteamNetworkingAvailability value)
  void InitRelayNetworkAccess()
  Nullable`1<NetPingLocation> get_LocalPingLocation()
  int EstimatePingTo(NetPingLocation target)
  Task WaitForPingDataAsync(float maxAgeInSeconds)
  long get_LocalTimestamp()
  float get_FakeSendPacketLoss()
  void set_FakeSendPacketLoss(float value)
  float get_FakeRecvPacketLoss()
  void set_FakeRecvPacketLoss(float value)
  float get_FakeSendPacketLag()
  void set_FakeSendPacketLag(float value)
  float get_FakeRecvPacketLag()
  void set_FakeRecvPacketLag(float value)
  int get_ConnectionTimeout()
  void set_ConnectionTimeout(int value)
  int get_Timeout()
  void set_Timeout(int value)
  int get_SendBufferSize()
  void set_SendBufferSize(int value)
  int get_SendRateMin()
  void set_SendRateMin(int value)
  int get_SendRateMax()
  void set_SendRateMax(int value)
  int get_NagleTime()
  void set_NagleTime(int value)
  int get_AllowWithoutAuth()
  void set_AllowWithoutAuth(int value)
  int get_Unencrypted()
  void set_Unencrypted(int value)
  int get_DebugLevelAckRTT()
  void set_DebugLevelAckRTT(int value)
  int get_DebugLevelPacketDecode()
  void set_DebugLevelPacketDecode(int value)
  int get_DebugLevelMessage()
  void set_DebugLevelMessage(int value)
  int get_DebugLevelPacketGaps()
  void set_DebugLevelPacketGaps(int value)
  int get_DebugLevelP2PRendezvous()
  void set_DebugLevelP2PRendezvous(int value)
  int get_DebugLevelSDRRelayPings()
  void set_DebugLevelSDRRelayPings(int value)
  NetDebugOutput get_DebugLevel()
  void set_DebugLevel(NetDebugOutput value)
  void OnDebugMessage(NetDebugOutput nType, IntPtr str)
  void LogDebugMessage(NetDebugOutput type, string message)
  void OutputDebugMessages()
  NetMsg* AllocateMessage()
  bool SetConfigInt(NetConfig type, int value)
  int GetConfigInt(NetConfig type)
  bool SetConfigFloat(NetConfig type, float value)
  float GetConfigFloat(NetConfig type)
  bool SetConfigString(NetConfig type, string value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamParental
Наследуется от: SteamSharedClass`1<SteamParental>
Поля:
  Action OnSettingsChanged
Свойства:
  ISteamParentalSettings Internal
  bool IsParentalLockEnabled
  bool IsParentalLockLocked
Методы:
  ISteamParentalSettings get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  void add_OnSettingsChanged(Action value)
  void remove_OnSettingsChanged(Action value)
  bool get_IsParentalLockEnabled()
  bool get_IsParentalLockLocked()
  bool IsAppBlocked(AppId app)
  bool BIsAppInBlockList(AppId app)
  bool IsFeatureBlocked(ParentalFeature feature)
  bool BIsFeatureInBlockList(ParentalFeature feature)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamParties
Наследуется от: SteamClientClass`1<SteamParties>
Поля:
  Action OnBeaconLocationsUpdated
  Action OnActiveBeaconsUpdated
Свойства:
  ISteamParties Internal
  int ActiveBeaconCount
  IEnumerable`1<PartyBeacon> ActiveBeacons
Методы:
  ISteamParties get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  void add_OnBeaconLocationsUpdated(Action value)
  void remove_OnBeaconLocationsUpdated(Action value)
  void add_OnActiveBeaconsUpdated(Action value)
  void remove_OnActiveBeaconsUpdated(Action value)
  int get_ActiveBeaconCount()
  IEnumerable`1<PartyBeacon> get_ActiveBeacons()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamRemotePlay
Наследуется от: SteamClientClass`1<SteamRemotePlay>
Поля:
  Action`1<RemotePlaySession> OnSessionConnected
  Action`1<RemotePlaySession> OnSessionDisconnected
Свойства:
  ISteamRemotePlay Internal
  int SessionCount
Методы:
  ISteamRemotePlay get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  void add_OnSessionConnected(Action`1<RemotePlaySession> value)
  void remove_OnSessionConnected(Action`1<RemotePlaySession> value)
  void add_OnSessionDisconnected(Action`1<RemotePlaySession> value)
  void remove_OnSessionDisconnected(Action`1<RemotePlaySession> value)
  int get_SessionCount()
  RemotePlaySession GetSession(int index)
  bool SendInvite(SteamId steamid)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamRemoteStorage
Наследуется от: SteamClientClass`1<SteamRemoteStorage>
Поля:
Свойства:
  ISteamRemoteStorage Internal
  ulong QuotaBytes
  ulong QuotaUsedBytes
  ulong QuotaRemainingBytes
  bool IsCloudEnabled
  bool IsCloudEnabledForAccount
  bool IsCloudEnabledForApp
  int FileCount
  IEnumerable`1<string> Files
Методы:
  ISteamRemoteStorage get_Internal()
  bool InitializeInterface(bool server)
  bool FileWrite(string filename, Byte[] data)
  Byte[] FileRead(string filename)
  bool FileExists(string filename)
  bool FilePersisted(string filename)
  DateTime FileTime(string filename)
  int FileSize(string filename)
  bool FileForget(string filename)
  bool FileDelete(string filename)
  ulong get_QuotaBytes()
  ulong get_QuotaUsedBytes()
  ulong get_QuotaRemainingBytes()
  bool get_IsCloudEnabled()
  bool get_IsCloudEnabledForAccount()
  bool get_IsCloudEnabledForApp()
  void set_IsCloudEnabledForApp(bool value)
  int get_FileCount()
  IEnumerable`1<string> get_Files()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamScreenshots
Наследуется от: SteamClientClass`1<SteamScreenshots>
Поля:
  Action OnScreenshotRequested
  Action`1<Screenshot> OnScreenshotReady
  Action`1<Result> OnScreenshotFailed
Свойства:
  ISteamScreenshots Internal
  bool Hooked
Методы:
  ISteamScreenshots get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents()
  void add_OnScreenshotRequested(Action value)
  void remove_OnScreenshotRequested(Action value)
  void add_OnScreenshotReady(Action`1<Screenshot> value)
  void remove_OnScreenshotReady(Action`1<Screenshot> value)
  void add_OnScreenshotFailed(Action`1<Result> value)
  void remove_OnScreenshotFailed(Action`1<Result> value)
  Nullable`1<Screenshot> WriteScreenshot(Byte[] data, int width, int height)
  Nullable`1<Screenshot> AddScreenshot(string filename, string thumbnail, int width, int height)
  void TriggerScreenshot()
  bool get_Hooked()
  void set_Hooked(bool value)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamServer
Наследуется от: SteamServerClass`1<SteamServer>
Поля:
  Action`3<SteamId, SteamId, AuthResponse> OnValidateAuthTicketResponse
  Action OnSteamServersConnected
  Action`2<Result, bool> OnSteamServerConnectFailure
  Action`1<Result> OnSteamServersDisconnected
  Action`1<SteamNetworkingAvailability> OnSteamNetAuthenticationStatus
  List`1<SteamClass> openInterfaces
  bool _dedicatedServer
  int _maxplayers
  int _botcount
  string _mapname
  string _modDir
  string _product
  string _gameDescription
  string _serverName
  bool _passworded
  string _gametags
  Dictionary`2<string, string> KeyValue
Свойства:
  ISteamGameServer Internal
  bool IsValid
  bool DedicatedServer
  int MaxPlayers
  int BotCount
  string MapName
  string ModDir
  string Product
  string GameDescription
  string ServerName
  bool Passworded
  string GameTags
  SteamId SteamId
  bool LoggedOn
  IPAddress PublicIp
  bool AutomaticHeartbeats
  bool AdvertiseServer
Методы:
  ISteamGameServer get_Internal()
  bool InitializeInterface(bool server)
  bool get_IsValid()
  void InstallEvents()
  void add_OnValidateAuthTicketResponse(Action`3<SteamId, SteamId, AuthResponse> value)
  void remove_OnValidateAuthTicketResponse(Action`3<SteamId, SteamId, AuthResponse> value)
  void add_OnSteamServersConnected(Action value)
  void remove_OnSteamServersConnected(Action value)
  void add_OnSteamServerConnectFailure(Action`2<Result, bool> value)
  void remove_OnSteamServerConnectFailure(Action`2<Result, bool> value)
  void add_OnSteamServersDisconnected(Action`1<Result> value)
  void remove_OnSteamServersDisconnected(Action`1<Result> value)
  void add_OnSteamNetAuthenticationStatus(Action`1<SteamNetworkingAvailability> value)
  void remove_OnSteamNetAuthenticationStatus(Action`1<SteamNetworkingAvailability> value)
  void Init(AppId appid, SteamServerInit init, bool asyncCallbacks)
  void AddInterface()
  void ShutdownInterfaces()
  void Shutdown()
  void RunCallbacks()
  bool get_DedicatedServer()
  void set_DedicatedServer(bool value)
  int get_MaxPlayers()
  void set_MaxPlayers(int value)
  int get_BotCount()
  void set_BotCount(int value)
  string get_MapName()
  void set_MapName(string value)
  string get_ModDir()
  void set_ModDir(string value)
  string get_Product()
  void set_Product(string value)
  string get_GameDescription()
  void set_GameDescription(string value)
  string get_ServerName()
  void set_ServerName(string value)
  bool get_Passworded()
  void set_Passworded(bool value)
  string get_GameTags()
  void set_GameTags(string value)
  SteamId get_SteamId()
  void LogOnAnonymous()
  void LogOff()
  bool get_LoggedOn()
  IPAddress get_PublicIp()
  void set_AutomaticHeartbeats(bool value)
  void set_AdvertiseServer(bool value)
  void ForceHeartbeat()
  void UpdatePlayer(SteamId steamid, string name, int score)
  void SetKey(string Key, string Value)
  void ClearKeys()
  bool BeginAuthSession(Byte[] data, SteamId steamid)
  void EndSession(SteamId steamid)
  bool GetOutgoingPacket(OutgoingPacket& packet)
  void HandleIncomingPacket(Byte[] data, int size, UInt32 address, ushort port)
  void HandleIncomingPacket(IntPtr ptr, int size, UInt32 address, ushort port)
  UserHasLicenseForAppResult UserHasLicenseForApp(SteamId steamid, AppId appid)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamServerStats
Наследуется от: SteamServerClass`1<SteamServerStats>
Поля:
Свойства:
  ISteamGameServerStats Internal
Методы:
  ISteamGameServerStats get_Internal()
  bool InitializeInterface(bool server)
  Task`1<Result> RequestUserStatsAsync(SteamId steamid)
  bool SetInt(SteamId steamid, string name, int stat)
  bool SetFloat(SteamId steamid, string name, float stat)
  int GetInt(SteamId steamid, string name, int defaultValue)
  float GetFloat(SteamId steamid, string name, float defaultValue)
  bool SetAchievement(SteamId steamid, string name)
  bool ClearAchievement(SteamId steamid, string name)
  bool GetAchievement(SteamId steamid, string name)
  Task`1<Result> StoreUserStats(SteamId steamid)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamUGC
Наследуется от: SteamSharedClass`1<SteamUGC>
Поля:
  Action`1<Result> OnDownloadItemResult
  Action`2<AppId, PublishedFileId> OnItemSubscribed
  Action`2<AppId, PublishedFileId> OnItemUnsubscribed
  Action`2<AppId, PublishedFileId> OnItemInstalled
Свойства:
  ISteamUGC Internal
Методы:
  ISteamUGC get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  void add_OnDownloadItemResult(Action`1<Result> value)
  void remove_OnDownloadItemResult(Action`1<Result> value)
  void add_OnItemSubscribed(Action`2<AppId, PublishedFileId> value)
  void remove_OnItemSubscribed(Action`2<AppId, PublishedFileId> value)
  void add_OnItemUnsubscribed(Action`2<AppId, PublishedFileId> value)
  void remove_OnItemUnsubscribed(Action`2<AppId, PublishedFileId> value)
  void add_OnItemInstalled(Action`2<AppId, PublishedFileId> value)
  void remove_OnItemInstalled(Action`2<AppId, PublishedFileId> value)
  Task`1<bool> DeleteFileAsync(PublishedFileId fileId)
  bool Download(PublishedFileId fileId, bool highPriority)
  Task`1<bool> DownloadAsync(PublishedFileId fileId, Action`1<float> progress, int milisecondsUpdateDelay, CancellationToken ct)
  Task`1<Nullable`1<Item>> QueryFileAsync(PublishedFileId fileId)
  Task`1<bool> StartPlaytimeTracking(PublishedFileId fileId)
  Task`1<bool> StopPlaytimeTracking(PublishedFileId fileId)
  Task`1<bool> StopPlaytimeTrackingForAllItems()
  void SuspendDownloads()
  void ResumeDownloads()
  bool ShowWorkshopEula()
  Task`1<Nullable`1<bool>> GetWorkshopEulaStatus()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamUser
Наследуется от: SteamClientClass`1<SteamUser>
Поля:
  Dictionary`2<string, string> richPresence
  Action OnSteamServersConnected
  Action OnSteamServerConnectFailure
  Action OnSteamServersDisconnected
  Action OnClientGameServerDeny
  Action OnLicensesUpdated
  Action`3<SteamId, SteamId, AuthResponse> OnValidateAuthTicketResponse
  Action`1<GetAuthSessionTicketResponse_t> OnGetAuthSessionTicketResponse
  Action`1<GetTicketForWebApiResponse_t> OnGetTicketForWebApiResponse
  Action`3<AppId, ulong, bool> OnMicroTxnAuthorizationResponse
  Action`1<string> OnGameWebCallback
  Action`1<DurationControl> OnDurationControl
  bool _recordingVoice
  Byte[] readBuffer
  UInt32 sampleRate
Свойства:
  ISteamUser Internal
  bool VoiceRecord
  bool HasVoiceData
  UInt32 SampleRate
  UInt32 OptimalSampleRate
  bool IsBehindNAT
  int SteamLevel
  bool IsPhoneVerified
  bool IsTwoFactorEnabled
  bool IsPhoneIdentifying
  bool IsPhoneRequiringVerification
Методы:
  ISteamUser get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents()
  void add_OnSteamServersConnected(Action value)
  void remove_OnSteamServersConnected(Action value)
  void add_OnSteamServerConnectFailure(Action value)
  void remove_OnSteamServerConnectFailure(Action value)
  void add_OnSteamServersDisconnected(Action value)
  void remove_OnSteamServersDisconnected(Action value)
  void add_OnClientGameServerDeny(Action value)
  void remove_OnClientGameServerDeny(Action value)
  void add_OnLicensesUpdated(Action value)
  void remove_OnLicensesUpdated(Action value)
  void add_OnValidateAuthTicketResponse(Action`3<SteamId, SteamId, AuthResponse> value)
  void remove_OnValidateAuthTicketResponse(Action`3<SteamId, SteamId, AuthResponse> value)
  void add_OnGetAuthSessionTicketResponse(Action`1<GetAuthSessionTicketResponse_t> value)
  void remove_OnGetAuthSessionTicketResponse(Action`1<GetAuthSessionTicketResponse_t> value)
  void add_OnGetTicketForWebApiResponse(Action`1<GetTicketForWebApiResponse_t> value)
  void remove_OnGetTicketForWebApiResponse(Action`1<GetTicketForWebApiResponse_t> value)
  void add_OnMicroTxnAuthorizationResponse(Action`3<AppId, ulong, bool> value)
  void remove_OnMicroTxnAuthorizationResponse(Action`3<AppId, ulong, bool> value)
  void add_OnGameWebCallback(Action`1<string> value)
  void remove_OnGameWebCallback(Action`1<string> value)
  void add_OnDurationControl(Action`1<DurationControl> value)
  void remove_OnDurationControl(Action`1<DurationControl> value)
  bool get_VoiceRecord()
  void set_VoiceRecord(bool value)
  bool get_HasVoiceData()
  int ReadVoiceData(Stream stream)
  Byte[] ReadVoiceDataBytes()
  UInt32 get_SampleRate()
  void set_SampleRate(UInt32 value)
  UInt32 get_OptimalSampleRate()
  int DecompressVoice(Stream input, int length, Stream output)
  int DecompressVoice(Byte[] from, Stream output)
  int DecompressVoice(IntPtr from, int length, IntPtr to, int bufferSize)
  AuthTicket GetAuthSessionTicket(NetIdentity identity)
  Task`1<AuthTicket> GetAuthSessionTicketAsync(NetIdentity identity, double timeoutSeconds)
  AuthTicket GetAuthTicketForWebApi(string identity)
  Task`1<AuthTicket> GetAuthTicketForWebApiAsync(string identity, double timeoutSeconds)
  BeginAuthResult BeginAuthSession(Byte[] ticketData, SteamId steamid)
  void EndAuthSession(SteamId steamid)
  bool get_IsBehindNAT()
  int get_SteamLevel()
  Task`1<string> GetStoreAuthUrlAsync(string url)
  bool get_IsPhoneVerified()
  bool get_IsTwoFactorEnabled()
  bool get_IsPhoneIdentifying()
  bool get_IsPhoneRequiringVerification()
  Task`1<Byte[]> RequestEncryptedAppTicketAsync(Byte[] dataToInclude)
  Task`1<Byte[]> RequestEncryptedAppTicketAsync()
  Task`1<DurationControl> GetDurationControl()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamUserStats
Наследуется от: SteamClientClass`1<SteamUserStats>
Поля:
  bool <StatsRecieved>k__BackingField
  Action`2<string, int> OnAchievementIconFetched
  Action`2<SteamId, Result> OnUserStatsReceived
  Action`1<Result> OnUserStatsStored
  Action`3<Achievement, int, int> OnAchievementProgress
  Action`1<SteamId> OnUserStatsUnloaded
Свойства:
  ISteamUserStats Internal
  bool StatsRecieved
  IEnumerable`1<Achievement> Achievements
Методы:
  ISteamUserStats get_Internal()
  bool InitializeInterface(bool server)
  bool get_StatsRecieved()
  void set_StatsRecieved(bool value)
  void InstallEvents()
  void add_OnAchievementIconFetched(Action`2<string, int> value)
  void remove_OnAchievementIconFetched(Action`2<string, int> value)
  void add_OnUserStatsReceived(Action`2<SteamId, Result> value)
  void remove_OnUserStatsReceived(Action`2<SteamId, Result> value)
  void add_OnUserStatsStored(Action`1<Result> value)
  void remove_OnUserStatsStored(Action`1<Result> value)
  void add_OnAchievementProgress(Action`3<Achievement, int, int> value)
  void remove_OnAchievementProgress(Action`3<Achievement, int, int> value)
  void add_OnUserStatsUnloaded(Action`1<SteamId> value)
  void remove_OnUserStatsUnloaded(Action`1<SteamId> value)
  IEnumerable`1<Achievement> get_Achievements()
  bool IndicateAchievementProgress(string achName, int curProg, int maxProg)
  Task`1<int> PlayerCountAsync()
  bool StoreStats()
  bool RequestCurrentStats()
  Task`1<Result> RequestGlobalStatsAsync(int days)
  Task`1<Nullable`1<Leaderboard>> FindOrCreateLeaderboardAsync(string name, LeaderboardSort sort, LeaderboardDisplay display)
  Task`1<Nullable`1<Leaderboard>> FindLeaderboardAsync(string name)
  bool AddStat(string name, int amount)
  bool AddStat(string name, float amount)
  bool SetStat(string name, int value)
  bool SetStat(string name, float value)
  int GetStatInt(string name)
  float GetStatFloat(string name)
  bool ResetAll(bool includeAchievements)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamUtils
Наследуется от: SteamSharedClass`1<SteamUtils>
Поля:
  Action OnIpCountryChanged
  Action`1<int> OnLowBatteryPower
  Action OnSteamShutdown
  Action`1<bool> OnGamepadTextInputDismissed
  NotificationPosition overlayNotificationPosition
Свойства:
  ISteamUtils Internal
  UInt32 SecondsSinceAppActive
  UInt32 SecondsSinceComputerActive
  Universe ConnectedUniverse
  DateTime SteamServerTime
  string IpCountry
  bool UsingBatteryPower
  float CurrentBatteryPower
  NotificationPosition OverlayNotificationPosition
  bool IsOverlayEnabled
  bool DoesOverlayNeedPresent
  string SteamUILanguage
  bool IsSteamRunningInVR
  bool IsSteamInBigPictureMode
  bool VrHeadsetStreaming
  bool IsSteamChinaLauncher
  bool IsRunningOnSteamDeck
Методы:
  ISteamUtils get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents(bool server)
  void SteamClosed()
  void add_OnIpCountryChanged(Action value)
  void remove_OnIpCountryChanged(Action value)
  void add_OnLowBatteryPower(Action`1<int> value)
  void remove_OnLowBatteryPower(Action`1<int> value)
  void add_OnSteamShutdown(Action value)
  void remove_OnSteamShutdown(Action value)
  void add_OnGamepadTextInputDismissed(Action`1<bool> value)
  void remove_OnGamepadTextInputDismissed(Action`1<bool> value)
  UInt32 get_SecondsSinceAppActive()
  UInt32 get_SecondsSinceComputerActive()
  Universe get_ConnectedUniverse()
  DateTime get_SteamServerTime()
  string get_IpCountry()
  bool GetImageSize(int image, UInt32& width, UInt32& height)
  Nullable`1<Image> GetImage(int image)
  bool get_UsingBatteryPower()
  float get_CurrentBatteryPower()
  NotificationPosition get_OverlayNotificationPosition()
  void set_OverlayNotificationPosition(NotificationPosition value)
  bool get_IsOverlayEnabled()
  bool get_DoesOverlayNeedPresent()
  Task`1<CheckFileSignature> CheckFileSignatureAsync(string filename)
  bool ShowGamepadTextInput(GamepadTextInputMode inputMode, GamepadTextInputLineMode lineInputMode, string description, int maxChars, string existingText)
  string GetEnteredGamepadText()
  string get_SteamUILanguage()
  bool get_IsSteamRunningInVR()
  void SetOverlayNotificationInset(int x, int y)
  bool get_IsSteamInBigPictureMode()
  void StartVRDashboard()
  bool get_VrHeadsetStreaming()
  void set_VrHeadsetStreaming(bool value)
  bool IsCallComplete(SteamAPICall_t call, Boolean& failed)
  bool get_IsSteamChinaLauncher()
  bool InitFilterText()
  string FilterText(TextFilteringContext context, SteamId sourceSteamID, string inputMessage)
  bool get_IsRunningOnSteamDeck()
  void SetGameLauncherMode(bool mode)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamVideo
Наследуется от: SteamClientClass`1<SteamVideo>
Поля:
Свойства:
  ISteamVideo Internal
  bool IsBroadcasting
  int NumViewers
Методы:
  ISteamVideo get_Internal()
  bool InitializeInterface(bool server)
  void InstallEvents()
  bool get_IsBroadcasting()
  int get_NumViewers()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.AppId
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  string ToString()
  AppId op_Implicit(UInt32 value)
  AppId op_Implicit(int value)
  UInt32 op_Implicit(AppId value)
--------------------------------------------------
Класс: Steamworks.Clan
Наследуется от: ValueType
Поля:
  SteamId Id
Свойства:
  string Name
  string Tag
  int ChatMemberCount
  Friend Owner
  bool Public
  bool Official
Методы:
  void .ctor(SteamId id)
  string get_Name()
  string get_Tag()
  int get_ChatMemberCount()
  Friend get_Owner()
  bool get_Public()
  bool get_Official()
  Task`1<bool> RequestOfficerList()
  IEnumerable`1<Friend> GetOfficers()
--------------------------------------------------
Класс: Steamworks.Controller
Наследуется от: ValueType
Поля:
  InputHandle_t Handle
Свойства:
  ulong Id
  InputType InputType
  string ActionSet
Методы:
  void .ctor(InputHandle_t inputHandle_t)
  ulong get_Id()
  InputType get_InputType()
  void set_ActionSet(string value)
  void DeactivateLayer(string layer)
  void ActivateLayer(string layer)
  void ClearLayers()
  DigitalState GetDigitalState(string actionName)
  AnalogState GetAnalogState(string actionName)
  string ToString()
  bool op_Equality(Controller a, Controller b)
  bool op_Inequality(Controller a, Controller b)
  bool Equals(object p)
  int GetHashCode()
  bool Equals(Controller p)
--------------------------------------------------
Класс: Steamworks.AnalogState
Наследуется от: ValueType
Поля:
  InputSourceMode EMode
  float X
  float Y
  byte BActive
Свойства:
  bool Active
Методы:
  bool get_Active()
--------------------------------------------------
Класс: Steamworks.MotionState
Наследуется от: ValueType
Поля:
  float RotQuatX
  float RotQuatY
  float RotQuatZ
  float RotQuatW
  float PosAccelX
  float PosAccelY
  float PosAccelZ
  float RotVelX
  float RotVelY
  float RotVelZ
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.DigitalState
Наследуется от: ValueType
Поля:
  byte BState
  byte BActive
Свойства:
  bool Pressed
  bool Active
Методы:
  bool get_Pressed()
  bool get_Active()
--------------------------------------------------
Класс: Steamworks.Friend
Наследуется от: ValueType
Поля:
  SteamId Id
Свойства:
  bool IsMe
  bool IsFriend
  bool IsBlocked
  bool IsPlayingThisGame
  bool IsOnline
  bool IsAway
  bool IsBusy
  bool IsSnoozing
  Relationship Relationship
  FriendState State
  string Name
  IEnumerable`1<string> NameHistory
  int SteamLevel
  Nullable`1<FriendGameInfo> GameInfo
Методы:
  void .ctor(SteamId steamid)
  string ToString()
  bool get_IsMe()
  bool get_IsFriend()
  bool get_IsBlocked()
  bool get_IsPlayingThisGame()
  bool get_IsOnline()
  Task RequestInfoAsync()
  bool get_IsAway()
  bool get_IsBusy()
  bool get_IsSnoozing()
  Relationship get_Relationship()
  FriendState get_State()
  string get_Name()
  IEnumerable`1<string> get_NameHistory()
  int get_SteamLevel()
  Nullable`1<FriendGameInfo> get_GameInfo()
  bool IsIn(SteamId group_or_room)
  Task`1<Nullable`1<Image>> GetSmallAvatarAsync()
  Task`1<Nullable`1<Image>> GetMediumAvatarAsync()
  Task`1<Nullable`1<Image>> GetLargeAvatarAsync()
  string GetRichPresence(string key)
  bool InviteToGame(string Text)
  bool SendMessage(string message)
  Task`1<bool> RequestUserStatsAsync()
  float GetStatFloat(string statName, float defult)
  int GetStatInt(string statName, int defult)
  bool GetAchievement(string statName, bool defult)
  DateTime GetAchievementUnlockTime(string statName)
--------------------------------------------------
Класс: Steamworks.InventoryDef
Наследуется от: object
Поля:
  InventoryDefId _id
  Dictionary`2<string, string> _properties
  InventoryRecipe[] _recContaining
Свойства:
  int Id
  string Name
  string Description
  string IconUrl
  string IconUrlLarge
  string PriceCategory
  string Type
  bool IsGenerator
  string ExchangeSchema
  bool Marketable
  bool Tradable
  DateTime Created
  DateTime Modified
  IEnumerable`1<KeyValuePair`2<string, string>> Properties
  int LocalPrice
  string LocalPriceFormatted
  int LocalBasePrice
  string LocalBasePriceFormatted
Методы:
  void .ctor(InventoryDefId defId)
  int get_Id()
  string get_Name()
  string get_Description()
  string get_IconUrl()
  string get_IconUrlLarge()
  string get_PriceCategory()
  string get_Type()
  bool get_IsGenerator()
  string get_ExchangeSchema()
  InventoryRecipe[] GetRecipes()
  bool get_Marketable()
  bool get_Tradable()
  DateTime get_Created()
  DateTime get_Modified()
  string GetProperty(string name)
  bool GetBoolProperty(string name)
  T GetProperty(string name)
  IEnumerable`1<KeyValuePair`2<string, string>> get_Properties()
  int get_LocalPrice()
  string get_LocalPriceFormatted()
  int get_LocalBasePrice()
  string get_LocalBasePriceFormatted()
  InventoryRecipe[] GetRecipesContainingThis()
  bool op_Equality(InventoryDef a, InventoryDef b)
  bool op_Inequality(InventoryDef a, InventoryDef b)
  bool Equals(object p)
  int GetHashCode()
  bool Equals(InventoryDef p)
  InventoryRecipe <GetRecipes>b__21_0(string x)
  bool <GetRecipesContainingThis>b__44_3(InventoryRecipe x)
--------------------------------------------------
Класс: Steamworks.InventoryItem
Наследуется от: ValueType
Поля:
  InventoryItemId _id
  InventoryDefId _def
  SteamItemFlags _flags
  ushort _quantity
  Dictionary`2<string, string> _properties
Свойства:
  InventoryItemId Id
  InventoryDefId DefId
  int Quantity
  InventoryDef Def
  Dictionary`2<string, string> Properties
  bool IsNoTrade
  bool IsRemoved
  bool IsConsumed
  DateTime Acquired
  string Origin
Методы:
  InventoryItemId get_Id()
  InventoryDefId get_DefId()
  int get_Quantity()
  InventoryDef get_Def()
  Dictionary`2<string, string> get_Properties()
  bool get_IsNoTrade()
  bool get_IsRemoved()
  bool get_IsConsumed()
  Task`1<Nullable`1<InventoryResult>> ConsumeAsync(int amount)
  Task`1<Nullable`1<InventoryResult>> SplitStackAsync(int quantity)
  Task`1<Nullable`1<InventoryResult>> AddAsync(InventoryItem add, int quantity)
  InventoryItem From(SteamItemDetails_t details)
  Dictionary`2<string, string> GetProperties(SteamInventoryResult_t result, int index)
  DateTime get_Acquired()
  string get_Origin()
  bool op_Equality(InventoryItem a, InventoryItem b)
  bool op_Inequality(InventoryItem a, InventoryItem b)
  bool Equals(object p)
  int GetHashCode()
  bool Equals(InventoryItem p)
--------------------------------------------------
Класс: Steamworks.InventoryRecipe
Наследуется от: ValueType
Поля:
  InventoryDef Result
  Ingredient[] Ingredients
  string Source
Свойства:
Методы:
  InventoryRecipe FromString(string part, InventoryDef Result)
  bool ContainsIngredient(InventoryDef inventoryDef)
  bool op_Equality(InventoryRecipe a, InventoryRecipe b)
  bool op_Inequality(InventoryRecipe a, InventoryRecipe b)
  bool Equals(object p)
  int GetHashCode()
  bool Equals(InventoryRecipe p)
--------------------------------------------------
Класс: Steamworks.InventoryResult
Наследуется от: ValueType
Поля:
  SteamInventoryResult_t _id
  bool <Expired>k__BackingField
Свойства:
  bool Expired
  int ItemCount
Методы:
  bool get_Expired()
  void set_Expired(bool value)
  void .ctor(SteamInventoryResult_t id, bool expired)
  int get_ItemCount()
  bool BelongsTo(SteamId steamId)
  InventoryItem[] GetItems(bool includeProperties)
  void Dispose()
  Task`1<Nullable`1<InventoryResult>> GetAsync(SteamInventoryResult_t sresult)
  Byte[] Serialize()
--------------------------------------------------
Класс: Steamworks.PartyBeacon
Наследуется от: ValueType
Поля:
  PartyBeaconID_t Id
Свойства:
  ISteamParties Internal
  SteamId Owner
  string MetaData
Методы:
  ISteamParties get_Internal()
  SteamId get_Owner()
  string get_MetaData()
  Task`1<string> JoinAsync()
  void OnReservationCompleted(SteamId steamid)
  void CancelReservation(SteamId steamid)
  bool Destroy()
--------------------------------------------------
Класс: Steamworks.SteamServerInit
Наследуется от: ValueType
Поля:
  IPAddress IpAddress
  ushort GamePort
  ushort QueryPort
  bool Secure
  string VersionString
  string ModDir
  string GameDescription
  bool DedicatedServer
Свойства:
Методы:
  void .ctor(string modDir, string gameDesc)
  SteamServerInit WithQueryShareGamePort()
--------------------------------------------------
Класс: Steamworks.SteamId
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
  UInt32 AccountId
  bool IsValid
Методы:
  SteamId op_Implicit(ulong value)
  ulong op_Implicit(SteamId value)
  string ToString()
  UInt32 get_AccountId()
  bool get_IsValid()
--------------------------------------------------
Класс: Steamworks.Epoch
Наследуется от: object
Поля:
  DateTime epoch
Свойства:
  int Current
Методы:
  int get_Current()
  DateTime ToDateTime(decimal unixTime)
  UInt32 FromDateTime(DateTime dt)
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Helpers
Наследуется от: object
Поля:
  int MemoryBufferSize
  Byte[][] BufferPool
  int BufferPoolIndex
Свойства:
Методы:
  Memory TakeMemory()
  Byte[] TakeBuffer(int minSize)
  string MemoryToString(IntPtr ptr)
  void .cctor()
--------------------------------------------------
Класс: Steamworks.MonoPInvokeCallbackAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Steamworks.PreserveAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Steamworks.Platform
Наследуется от: object
Поля:
  int StructPlatformPackSize
  string LibraryName
  CallingConvention CC
  int StructPackSize
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.SourceServerQuery
Наследуется от: object
Поля:
  Byte[] A2S_SERVERQUERY_GETCHALLENGE
  byte A2S_RULES
  Dictionary`2<IPEndPoint, Task`1<Dictionary`2<string, string>>> PendingQueries
Свойства:
Методы:
  Task`1<Dictionary`2<string, string>> GetRules(ServerInfo server)
  Task`1<Dictionary`2<string, string>> GetRulesImpl(IPEndPoint endpoint)
  Task`1<Dictionary`2<string, string>> GetRules(UdpClient client)
  Task`1<Byte[]> Receive(UdpClient client)
  Task`1<Byte[]> GetChallengeData(UdpClient client)
  Task Send(UdpClient client, Byte[] message)
  Byte[] Combine(Byte[][] arrays)
  void .cctor()
--------------------------------------------------
Класс: Steamworks.SteamInterface
Наследуется от: object
Поля:
  IntPtr Self
  IntPtr SelfGlobal
  IntPtr SelfServer
  IntPtr SelfClient
  bool <IsServer>k__BackingField
Свойства:
  bool IsValid
  bool IsServer
Методы:
  IntPtr GetUserInterfacePointer()
  IntPtr GetServerInterfacePointer()
  IntPtr GetGlobalInterfacePointer()
  bool get_IsValid()
  bool get_IsServer()
  void set_IsServer(bool value)
  void SetupInterface(bool gameServer)
  void ShutdownInterface()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamClass
Наследуется от: object
Поля:
Свойства:
Методы:
  bool InitializeInterface(bool server)
  void DestroyInterface(bool server)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamSharedClass`1
Наследуется от: SteamClass
Поля:
  SteamInterface InterfaceClient
  SteamInterface InterfaceServer
Свойства:
  SteamInterface Interface
Методы:
  SteamInterface get_Interface()
  bool InitializeInterface(bool server)
  void SetInterface(bool server, SteamInterface iface)
  void DestroyInterface(bool server)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamClientClass`1
Наследуется от: SteamClass
Поля:
  SteamInterface Interface
Свойства:
Методы:
  bool InitializeInterface(bool server)
  void SetInterface(bool server, SteamInterface iface)
  void DestroyInterface(bool server)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.SteamServerClass`1
Наследуется от: SteamClass
Поля:
  SteamInterface Interface
Свойства:
Методы:
  bool InitializeInterface(bool server)
  void SetInterface(bool server, SteamInterface iface)
  void DestroyInterface(bool server)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.Utf8StringToNative
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr MarshalManagedToNative(object managedObj)
  object MarshalNativeToManaged(IntPtr pNativeData)
  void CleanUpNativeData(IntPtr pNativeData)
  void CleanUpManagedData(object managedObj)
  int GetNativeDataSize()
  ICustomMarshaler GetInstance(string cookie)
  void .ctor()
--------------------------------------------------
Класс: Steamworks.Utf8StringPointer
Наследуется от: ValueType
Поля:
  IntPtr ptr
Свойства:
Методы:
  string op_Implicit(Utf8StringPointer p)
--------------------------------------------------
Класс: Steamworks.Utility
Наследуется от: object
Поля:
  Byte[] readBuffer
Свойства:
Методы:
  T ToType(IntPtr ptr)
  object ToType(IntPtr ptr, Type t)
  UInt32 Swap(UInt32 x)
  UInt32 IpToInt32(IPAddress ipAddress)
  IPAddress Int32ToIp(UInt32 ipAddress)
  string FormatPrice(string currency, double price)
  string ReadNullTerminatedUTF8String(BinaryReader br)
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Ugc.SteamParamStringArray
Наследуется от: ValueType
Поля:
  SteamParamStringArray_t Value
  IntPtr[] NativeStrings
  IntPtr NativeArray
Свойства:
Методы:
  SteamParamStringArray From(String[] array)
  void Dispose()
--------------------------------------------------
Класс: Steamworks.Ugc.Editor
Наследуется от: ValueType
Поля:
  PublishedFileId fileId
  bool creatingNew
  WorkshopFileType creatingType
  AppId consumerAppId
  string Title
  string Description
  string MetaData
  string ChangeLog
  string Language
  string PreviewFile
  DirectoryInfo ContentFolder
  Nullable`1<RemoteStoragePublishedFileVisibility> Visibility
  List`1<string> Tags
  Dictionary`2<string, List`1<string>> KeyValueTags
  HashSet`1<string> KeyValueTagsToRemove
Свойства:
  Editor NewCommunityFile
  Editor NewCollection
  Editor NewMicrotransactionFile
  Editor NewGameManagedFile
Методы:
  void .ctor(WorkshopFileType filetype)
  void .ctor(PublishedFileId fileId)
  Editor get_NewCommunityFile()
  Editor get_NewCollection()
  Editor get_NewMicrotransactionFile()
  Editor get_NewGameManagedFile()
  Editor ForAppId(AppId id)
  Editor WithTitle(string t)
  Editor WithDescription(string t)
  Editor WithMetaData(string t)
  Editor WithChangeLog(string t)
  Editor InLanguage(string t)
  Editor WithPreviewFile(string t)
  Editor WithContent(DirectoryInfo t)
  Editor WithContent(string folderName)
  Editor WithPublicVisibility()
  Editor WithFriendsOnlyVisibility()
  Editor WithPrivateVisibility()
  Editor WithTag(string tag)
  Editor AddKeyValueTag(string key, string value)
  Editor RemoveKeyValueTags(string key)
  Task`1<PublishResult> SubmitAsync(IProgress`1<float> progress, Action`1<PublishResult> onItemCreated)
--------------------------------------------------
Класс: Steamworks.Ugc.PublishResult
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId FileId
  bool NeedsWorkshopAgreement
Свойства:
  bool Success
Методы:
  bool get_Success()
--------------------------------------------------
Класс: Steamworks.Ugc.Item
Наследуется от: ValueType
Поля:
  SteamUGCDetails_t details
  PublishedFileId _id
  string <Title>k__BackingField
  string <Description>k__BackingField
  String[] <Tags>k__BackingField
  Dictionary`2<string, string> <KeyValueTags>k__BackingField
  PublishedFileId[] Children
  UgcAdditionalPreview[] <AdditionalPreviews>k__BackingField
  ulong <NumSubscriptions>k__BackingField
  ulong <NumFavorites>k__BackingField
  ulong <NumFollowers>k__BackingField
  ulong <NumUniqueSubscriptions>k__BackingField
  ulong <NumUniqueFavorites>k__BackingField
  ulong <NumUniqueFollowers>k__BackingField
  ulong <NumUniqueWebsiteViews>k__BackingField
  ulong <ReportScore>k__BackingField
  ulong <NumSecondsPlayed>k__BackingField
  ulong <NumPlaytimeSessions>k__BackingField
  ulong <NumComments>k__BackingField
  ulong <NumSecondsPlayedDuringTimePeriod>k__BackingField
  ulong <NumPlaytimeSessionsDuringTimePeriod>k__BackingField
  string <PreviewImageUrl>k__BackingField
  string <Metadata>k__BackingField
Свойства:
  PublishedFileId Id
  string Title
  string Description
  String[] Tags
  Dictionary`2<string, string> KeyValueTags
  AppId CreatorApp
  AppId ConsumerApp
  Friend Owner
  float Score
  DateTime Created
  DateTime Updated
  bool IsPublic
  bool IsFriendsOnly
  bool IsPrivate
  bool IsBanned
  bool IsAcceptedForUse
  UInt32 VotesUp
  UInt32 VotesDown
  UgcAdditionalPreview[] AdditionalPreviews
  bool IsInstalled
  bool IsDownloading
  bool IsDownloadPending
  bool IsSubscribed
  bool NeedsUpdate
  string Directory
  long DownloadBytesTotal
  long DownloadBytesDownloaded
  long SizeBytes
  float DownloadAmount
  ItemState State
  string Url
  string ChangelogUrl
  string CommentsUrl
  string DiscussUrl
  string StatsUrl
  ulong NumSubscriptions
  ulong NumFavorites
  ulong NumFollowers
  ulong NumUniqueSubscriptions
  ulong NumUniqueFavorites
  ulong NumUniqueFollowers
  ulong NumUniqueWebsiteViews
  ulong ReportScore
  ulong NumSecondsPlayed
  ulong NumPlaytimeSessions
  ulong NumComments
  ulong NumSecondsPlayedDuringTimePeriod
  ulong NumPlaytimeSessionsDuringTimePeriod
  string PreviewImageUrl
  string Metadata
  Result Result
Методы:
  void .ctor(PublishedFileId id)
  PublishedFileId get_Id()
  string get_Title()
  void set_Title(string value)
  string get_Description()
  void set_Description(string value)
  String[] get_Tags()
  void set_Tags(String[] value)
  Dictionary`2<string, string> get_KeyValueTags()
  void set_KeyValueTags(Dictionary`2<string, string> value)
  AppId get_CreatorApp()
  AppId get_ConsumerApp()
  Friend get_Owner()
  float get_Score()
  DateTime get_Created()
  DateTime get_Updated()
  bool get_IsPublic()
  bool get_IsFriendsOnly()
  bool get_IsPrivate()
  bool get_IsBanned()
  bool get_IsAcceptedForUse()
  UInt32 get_VotesUp()
  UInt32 get_VotesDown()
  UgcAdditionalPreview[] get_AdditionalPreviews()
  void set_AdditionalPreviews(UgcAdditionalPreview[] value)
  bool get_IsInstalled()
  bool get_IsDownloading()
  bool get_IsDownloadPending()
  bool get_IsSubscribed()
  bool get_NeedsUpdate()
  string get_Directory()
  bool Download(bool highPriority)
  long get_DownloadBytesTotal()
  long get_DownloadBytesDownloaded()
  long get_SizeBytes()
  float get_DownloadAmount()
  ItemState get_State()
  Task`1<Nullable`1<Item>> GetAsync(PublishedFileId id, int maxageseconds)
  Item From(SteamUGCDetails_t details)
  bool HasTag(string find)
  Task`1<bool> Subscribe()
  Task`1<bool> DownloadAsync(Action`1<float> progress, int milisecondsUpdateDelay, CancellationToken ct)
  Task`1<bool> Unsubscribe()
  Task`1<bool> AddFavorite()
  Task`1<bool> RemoveFavorite()
  Task`1<Nullable`1<Result>> Vote(bool up)
  Task`1<Nullable`1<UserItemVote>> GetUserVote()
  string get_Url()
  string get_ChangelogUrl()
  string get_CommentsUrl()
  string get_DiscussUrl()
  string get_StatsUrl()
  ulong get_NumSubscriptions()
  void set_NumSubscriptions(ulong value)
  ulong get_NumFavorites()
  void set_NumFavorites(ulong value)
  ulong get_NumFollowers()
  void set_NumFollowers(ulong value)
  ulong get_NumUniqueSubscriptions()
  void set_NumUniqueSubscriptions(ulong value)
  ulong get_NumUniqueFavorites()
  void set_NumUniqueFavorites(ulong value)
  ulong get_NumUniqueFollowers()
  void set_NumUniqueFollowers(ulong value)
  ulong get_NumUniqueWebsiteViews()
  void set_NumUniqueWebsiteViews(ulong value)
  ulong get_ReportScore()
  void set_ReportScore(ulong value)
  ulong get_NumSecondsPlayed()
  void set_NumSecondsPlayed(ulong value)
  ulong get_NumPlaytimeSessions()
  void set_NumPlaytimeSessions(ulong value)
  ulong get_NumComments()
  void set_NumComments(ulong value)
  ulong get_NumSecondsPlayedDuringTimePeriod()
  void set_NumSecondsPlayedDuringTimePeriod(ulong value)
  ulong get_NumPlaytimeSessionsDuringTimePeriod()
  void set_NumPlaytimeSessionsDuringTimePeriod(ulong value)
  string get_PreviewImageUrl()
  void set_PreviewImageUrl(string value)
  string get_Metadata()
  void set_Metadata(string value)
  Editor Edit()
  Task`1<bool> AddDependency(PublishedFileId child)
  Task`1<bool> RemoveDependency(PublishedFileId child)
  Result get_Result()
--------------------------------------------------
Класс: Steamworks.Ugc.Query
Наследуется от: ValueType
Поля:
  UgcType matchingType
  UGCQuery queryType
  AppId consumerApp
  AppId creatorApp
  string searchText
  Nullable`1<SteamId> steamid
  UserUGCList userType
  UserUGCListSortOrder userSort
  PublishedFileId[] Files
  Nullable`1<int> maxCacheAge
  string language
  Nullable`1<int> trendDays
  List`1<string> requiredTags
  Nullable`1<bool> matchAnyTag
  List`1<string> excludedTags
  Dictionary`2<string, string> requiredKv
  Nullable`1<bool> WantsReturnOnlyIDs
  Nullable`1<bool> WantsReturnKeyValueTags
  Nullable`1<bool> WantsReturnLongDescription
  Nullable`1<bool> WantsReturnMetadata
  Nullable`1<bool> WantsReturnChildren
  Nullable`1<bool> WantsReturnAdditionalPreviews
  Nullable`1<bool> WantsReturnTotalOnly
  Nullable`1<UInt32> WantsReturnPlaytimeStats
  Nullable`1<bool> WantsDefaultStats
Свойства:
  Query All
  Query Items
  Query ItemsMtx
  Query ItemsReadyToUse
  Query Collections
  Query Artwork
  Query Videos
  Query Screenshots
  Query AllGuides
  Query WebGuides
  Query IntegratedGuides
  Query UsableInGame
  Query ControllerBindings
  Query GameManagedItems
Методы:
  void .ctor(UgcType type)
  Query get_All()
  Query get_Items()
  Query get_ItemsMtx()
  Query get_ItemsReadyToUse()
  Query get_Collections()
  Query get_Artwork()
  Query get_Videos()
  Query get_Screenshots()
  Query get_AllGuides()
  Query get_WebGuides()
  Query get_IntegratedGuides()
  Query get_UsableInGame()
  Query get_ControllerBindings()
  Query get_GameManagedItems()
  Query RankedByVote()
  Query RankedByPublicationDate()
  Query RankedByAcceptanceDate()
  Query RankedByTrend()
  Query FavoritedByFriends()
  Query CreatedByFriends()
  Query RankedByNumTimesReported()
  Query CreatedByFollowedUsers()
  Query NotYetRated()
  Query RankedByTotalVotesAsc()
  Query RankedByVotesUp()
  Query RankedByTextSearch()
  Query RankedByTotalUniqueSubscriptions()
  Query RankedByPlaytimeTrend()
  Query RankedByTotalPlaytime()
  Query RankedByAveragePlaytimeTrend()
  Query RankedByLifetimeAveragePlaytime()
  Query RankedByPlaytimeSessionsTrend()
  Query RankedByLifetimePlaytimeSessions()
  Query LimitUser(SteamId steamid)
  Query WhereUserPublished(SteamId user)
  Query WhereUserVotedOn(SteamId user)
  Query WhereUserVotedUp(SteamId user)
  Query WhereUserVotedDown(SteamId user)
  Query WhereUserWillVoteLater(SteamId user)
  Query WhereUserFavorited(SteamId user)
  Query WhereUserSubscribed(SteamId user)
  Query WhereUserUsedOrPlayed(SteamId user)
  Query WhereUserFollowed(SteamId user)
  Query SortByCreationDate()
  Query SortByCreationDateAsc()
  Query SortByTitleAsc()
  Query SortByUpdateDate()
  Query SortBySubscriptionDate()
  Query SortByVoteScore()
  Query SortByModeration()
  Query WhereSearchText(string searchText)
  Query WithFileId(PublishedFileId[] files)
  Task`1<Nullable`1<ResultPage>> GetPageAsync(int page)
  Query WithType(UgcType type)
  Query AllowCachedResponse(int maxSecondsAge)
  Query InLanguage(string lang)
  Query WithTrendDays(int days)
  Query MatchAnyTag()
  Query MatchAllTags()
  Query WithTag(string tag)
  Query AddRequiredKeyValueTag(string key, string value)
  Query WithoutTag(string tag)
  void ApplyConstraints(UGCQueryHandle_t handle)
  Query WithOnlyIDs(bool b)
  Query WithKeyValueTags(bool b)
  Query WithKeyValueTag(bool b)
  Query WithLongDescription(bool b)
  Query WithMetadata(bool b)
  Query WithChildren(bool b)
  Query WithAdditionalPreviews(bool b)
  Query WithTotalOnly(bool b)
  Query WithPlaytimeStats(UInt32 unDays)
  void ApplyReturns(UGCQueryHandle_t handle)
  Query WithDefaultStats(bool b)
--------------------------------------------------
Класс: Steamworks.Ugc.ResultPage
Наследуется от: ValueType
Поля:
  UGCQueryHandle_t Handle
  int ResultCount
  int TotalCount
  bool CachedData
  bool ReturnsKeyValueTags
  bool ReturnsDefaultStats
  bool ReturnsMetadata
  bool ReturnsChildren
  bool ReturnsAdditionalPreviews
Свойства:
  IEnumerable`1<Item> Entries
Методы:
  IEnumerable`1<Item> get_Entries()
  ulong GetStat(UInt32 index, ItemStatistic stat)
  void Dispose()
--------------------------------------------------
Класс: Steamworks.Ugc.UserItemVote
Наследуется от: ValueType
Поля:
  bool VotedUp
  bool VotedDown
  bool VoteSkipped
Свойства:
Методы:
  Nullable`1<UserItemVote> From(GetUserItemVoteResult_t result)
--------------------------------------------------
Класс: Steamworks.ServerList.Base
Наследуется от: object
Поля:
  AppId <AppId>k__BackingField
  Action OnChanges
  Action`1<ServerInfo> OnResponsiveServer
  List`1<ServerInfo> Responsive
  List`1<ServerInfo> Unresponsive
  List`1<ServerInfo> Unqueried
  HServerListRequest request
  List`1<MatchMakingKeyValuePair> filters
  List`1<int> watchList
  int LastCount
Свойства:
  ISteamMatchmakingServers Internal
  AppId AppId
  int Count
  bool IsRefreshing
Методы:
  ISteamMatchmakingServers get_Internal()
  AppId get_AppId()
  void set_AppId(AppId value)
  void add_OnChanges(Action value)
  void remove_OnChanges(Action value)
  void add_OnResponsiveServer(Action`1<ServerInfo> value)
  void remove_OnResponsiveServer(Action`1<ServerInfo> value)
  void .ctor()
  Task`1<bool> RunQueryAsync(float timeoutSeconds)
  void Cancel()
  void LaunchQuery()
  MatchMakingKeyValuePair[] GetFilters()
  void AddFilter(string key, string value)
  int get_Count()
  bool get_IsRefreshing()
  void Reset()
  void ReleaseQuery()
  void Dispose()
  void InvokeChanges()
  void UpdatePending()
  void UpdateResponsive()
  void MovePendingToUnresponsive()
  void OnServer(ServerInfo serverInfo, bool responded)
  bool <UpdateResponsive>b__34_0(int x)
  bool <MovePendingToUnresponsive>b__35_0(int x)
--------------------------------------------------
Класс: Steamworks.ServerList.Favourites
Наследуется от: Base
Поля:
Свойства:
Методы:
  void LaunchQuery()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.ServerList.Friends
Наследуется от: Base
Поля:
Свойства:
Методы:
  void LaunchQuery()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.ServerList.History
Наследуется от: Base
Поля:
Свойства:
Методы:
  void LaunchQuery()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.ServerList.Internet
Наследуется от: Base
Поля:
Свойства:
Методы:
  void LaunchQuery()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.ServerList.IpList
Наследуется от: Internet
Поля:
  List`1<string> Ips
  bool wantsCancel
Свойства:
Методы:
  void .ctor(IEnumerable`1<string> list)
  void .ctor(String[] list)
  Task`1<bool> RunQueryAsync(float timeoutSeconds)
  void Cancel()
--------------------------------------------------
Класс: Steamworks.ServerList.LocalNetwork
Наследуется от: Base
Поля:
Свойства:
Методы:
  void LaunchQuery()
  void .ctor()
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardDisplay
Наследуется от: Enum
Поля:
  int value__
  LeaderboardDisplay Numeric
  LeaderboardDisplay TimeSeconds
  LeaderboardDisplay TimeMilliSeconds
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardSort
Наследуется от: Enum
Поля:
  int value__
  LeaderboardSort Ascending
  LeaderboardSort Descending
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SendType
Наследуется от: Enum
Поля:
  int value__
  SendType Unreliable
  SendType NoNagle
  SendType NoDelay
  SendType Reliable
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SteamServersConnected_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamServerConnectFailure_t
Наследуется от: ValueType
Поля:
  Result Result
  bool StillRetrying
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamServersDisconnected_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ClientGameServerDeny_t
Наследуется от: ValueType
Поля:
  UInt32 AppID
  UInt32 GameServerIP
  ushort GameServerPort
  ushort Secure
  UInt32 Reason
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.IPCFailure_t
Наследуется от: ValueType
Поля:
  byte FailureType
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LicensesUpdated_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ValidateAuthTicketResponse_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  AuthResponse AuthSessionResponse
  ulong OwnerSteamID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MicroTxnAuthorizationResponse_t
Наследуется от: ValueType
Поля:
  UInt32 AppID
  ulong OrderID
  byte Authorized
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.EncryptedAppTicketResponse_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GetAuthSessionTicketResponse_t
Наследуется от: ValueType
Поля:
  UInt32 AuthTicket
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameWebCallback_t
Наследуется от: ValueType
Поля:
  Byte[] URL
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string URLUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.StoreAuthURLResponse_t
Наследуется от: ValueType
Поля:
  Byte[] URL
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string URLUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MarketEligibilityResponse_t
Наследуется от: ValueType
Поля:
  bool Allowed
  MarketNotAllowedReasonFlags NotAllowedReason
  UInt32 TAllowedAtTime
  int CdaySteamGuardRequiredDays
  int CdayNewDeviceCooldown
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.DurationControl_t
Наследуется от: ValueType
Поля:
  Result Result
  AppId Appid
  bool Applicable
  int CsecsLast5h
  DurationControlProgress Progress
  DurationControlNotification Otification
  int CsecsToday
  int CsecsRemaining
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GetTicketForWebApiResponse_t
Наследуется от: ValueType
Поля:
  UInt32 AuthTicket
  Result Result
  int Ticket
  Byte[] GubTicket
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.PersonaStateChange_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  int ChangeFlags
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameOverlayActivated_t
Наследуется от: ValueType
Поля:
  byte Active
  bool UserInitiated
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameServerChangeRequested_t
Наследуется от: ValueType
Поля:
  Byte[] Server
  Byte[] Password
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string ServerUTF8()
  string PasswordUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameLobbyJoinRequested_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  ulong SteamIDFriend
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AvatarImageLoaded_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  int Image
  int Wide
  int Tall
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ClanOfficerListResponse_t
Наследуется от: ValueType
Поля:
  ulong SteamIDClan
  int COfficers
  byte Success
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FriendRichPresenceUpdate_t
Наследуется от: ValueType
Поля:
  ulong SteamIDFriend
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameRichPresenceJoinRequested_t
Наследуется от: ValueType
Поля:
  ulong SteamIDFriend
  Byte[] Connect
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string ConnectUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameConnectedClanChatMsg_t
Наследуется от: ValueType
Поля:
  ulong SteamIDClanChat
  ulong SteamIDUser
  int MessageID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameConnectedChatJoin_t
Наследуется от: ValueType
Поля:
  ulong SteamIDClanChat
  ulong SteamIDUser
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameConnectedChatLeave_t
Наследуется от: ValueType
Поля:
  ulong SteamIDClanChat
  ulong SteamIDUser
  bool Kicked
  bool Dropped
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.DownloadClanActivityCountsResult_t
Наследуется от: ValueType
Поля:
  bool Success
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.JoinClanChatRoomCompletionResult_t
Наследуется от: ValueType
Поля:
  ulong SteamIDClanChat
  RoomEnter ChatRoomEnterResponse
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GameConnectedFriendChatMsg_t
Наследуется от: ValueType
Поля:
  ulong SteamIDUser
  int MessageID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FriendsGetFollowerCount_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamID
  int Count
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FriendsIsFollowing_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamID
  bool IsFollowing
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FriendsEnumerateFollowingList_t
Наследуется от: ValueType
Поля:
  Result Result
  UInt64[] GSteamID
  int ResultsReturned
  int TotalResultCount
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SetPersonaNameResponse_t
Наследуется от: ValueType
Поля:
  bool Success
  bool LocalSuccess
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UnreadChatMessagesChanged_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.OverlayBrowserProtocolNavigation_t
Наследуется от: ValueType
Поля:
  Byte[] RgchURI
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string RgchURIUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.EquippedProfileItemsChanged_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.EquippedProfileItems_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamID
  bool HasAnimatedAvatar
  bool HasAvatarFrame
  bool HasProfileModifier
  bool HasProfileBackground
  bool HasMiniProfileBackground
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.IPCountry_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LowBatteryPower_t
Наследуется от: ValueType
Поля:
  byte MinutesBatteryLeft
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamAPICallCompleted_t
Наследуется от: ValueType
Поля:
  ulong AsyncCall
  int Callback
  UInt32 ParamCount
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamShutdown_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.CheckFileSignature_t
Наследуется от: ValueType
Поля:
  CheckFileSignature CheckFileSignature
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GamepadTextInputDismissed_t
Наследуется от: ValueType
Поля:
  bool Submitted
  UInt32 SubmittedText
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AppResumingFromSuspend_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FloatingGamepadTextInputDismissed_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FilterTextDictionaryChanged_t
Наследуется от: ValueType
Поля:
  int Language
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FavoritesListChanged_t
Наследуется от: ValueType
Поля:
  UInt32 IP
  UInt32 QueryPort
  UInt32 ConnPort
  UInt32 AppID
  UInt32 Flags
  bool Add
  UInt32 AccountId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyInvite_t
Наследуется от: ValueType
Поля:
  ulong SteamIDUser
  ulong SteamIDLobby
  ulong GameID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyEnter_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  UInt32 GfChatPermissions
  bool Locked
  UInt32 EChatRoomEnterResponse
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyDataUpdate_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  ulong SteamIDMember
  byte Success
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyChatUpdate_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  ulong SteamIDUserChanged
  ulong SteamIDMakingChange
  UInt32 GfChatMemberStateChange
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyChatMsg_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  ulong SteamIDUser
  byte ChatEntryType
  UInt32 ChatID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyGameCreated_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  ulong SteamIDGameServer
  UInt32 IP
  ushort Port
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyMatchList_t
Наследуется от: ValueType
Поля:
  UInt32 LobbiesMatching
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyKicked_t
Наследуется от: ValueType
Поля:
  ulong SteamIDLobby
  ulong SteamIDAdmin
  byte KickedDueToDisconnect
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LobbyCreated_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamIDLobby
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.PSNGameBootInviteResult_t
Наследуется от: ValueType
Поля:
  bool GameBootInviteExists
  ulong SteamIDLobby
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FavoritesListAccountsUpdated_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SearchForGameProgressCallback_t
Наследуется от: ValueType
Поля:
  ulong LSearchID
  Result Result
  ulong LobbyID
  ulong SteamIDEndedSearch
  int SecondsRemainingEstimate
  int CPlayersSearching
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SearchForGameResultCallback_t
Наследуется от: ValueType
Поля:
  ulong LSearchID
  Result Result
  int CountPlayersInGame
  int CountAcceptedGame
  ulong SteamIDHost
  bool FinalCallback
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RequestPlayersForGameProgressCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong LSearchID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RequestPlayersForGameResultCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong LSearchID
  ulong SteamIDPlayerFound
  ulong SteamIDLobby
  PlayerAcceptState_t PlayerAcceptState
  int PlayerIndex
  int TotalPlayersFound
  int TotalPlayersAcceptedGame
  int SuggestedTeamIndex
  ulong LUniqueGameID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RequestPlayersForGameFinalResultCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong LSearchID
  ulong LUniqueGameID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SubmitPlayerResultResultCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong UllUniqueGameID
  ulong SteamIDPlayer
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.EndGameResultCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong UllUniqueGameID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.JoinPartyCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong BeaconID
  ulong SteamIDBeaconOwner
  Byte[] ConnectString
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string ConnectStringUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.CreateBeaconCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong BeaconID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ReservationNotificationCallback_t
Наследуется от: ValueType
Поля:
  ulong BeaconID
  ulong SteamIDJoiner
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ChangeNumOpenSlotsCallback_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AvailableBeaconLocationsUpdated_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ActiveBeaconsUpdated_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageFileShareResult_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong File
  Byte[] Filename
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string FilenameUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStoragePublishFileResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  bool UserNeedsToAcceptWorkshopLegalAgreement
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageDeletePublishedFileResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageEnumerateUserPublishedFilesResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int ResultsReturned
  int TotalResultCount
  PublishedFileId[] GPublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageSubscribePublishedFileResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageEnumerateUserSubscribedFilesResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int ResultsReturned
  int TotalResultCount
  PublishedFileId[] GPublishedFileId
  UInt32[] GRTimeSubscribed
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageUnsubscribePublishedFileResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageUpdatePublishedFileResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  bool UserNeedsToAcceptWorkshopLegalAgreement
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageDownloadUGCResult_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong File
  AppId AppID
  int SizeInBytes
  Byte[] PchFileName
  ulong SteamIDOwner
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string PchFileNameUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageGetPublishedFileDetailsResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  AppId CreatorAppID
  AppId ConsumerAppID
  Byte[] Title
  Byte[] Description
  ulong File
  ulong PreviewFile
  ulong SteamIDOwner
  UInt32 TimeCreated
  UInt32 TimeUpdated
  RemoteStoragePublishedFileVisibility Visibility
  bool Banned
  Byte[] Tags
  bool TagsTruncated
  Byte[] PchFileName
  int FileSize
  int PreviewFileSize
  Byte[] URL
  WorkshopFileType FileType
  bool AcceptedForUse
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string TitleUTF8()
  string DescriptionUTF8()
  string TagsUTF8()
  string PchFileNameUTF8()
  string URLUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageEnumerateWorkshopFilesResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int ResultsReturned
  int TotalResultCount
  PublishedFileId[] GPublishedFileId
  Single[] GScore
  AppId AppId
  UInt32 StartIndex
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageGetPublishedItemVoteDetailsResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  int VotesFor
  int VotesAgainst
  int Reports
  float FScore
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStoragePublishedFileSubscribed_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStoragePublishedFileUnsubscribed_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStoragePublishedFileDeleted_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageUpdateUserPublishedItemVoteResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageUserVoteDetails_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  WorkshopVote Vote
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageEnumerateUserSharedWorkshopFilesResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int ResultsReturned
  int TotalResultCount
  PublishedFileId[] GPublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageSetUserPublishedFileActionResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  WorkshopFileAction Action
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageEnumeratePublishedFilesByUserActionResult_t
Наследуется от: ValueType
Поля:
  Result Result
  WorkshopFileAction Action
  int ResultsReturned
  int TotalResultCount
  PublishedFileId[] GPublishedFileId
  UInt32[] GRTimeUpdated
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStoragePublishFileProgress_t
Наследуется от: ValueType
Поля:
  double DPercentFile
  bool Preview
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStoragePublishedFileUpdated_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  AppId AppID
  ulong Unused
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageFileWriteAsyncComplete_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageFileReadAsyncComplete_t
Наследуется от: ValueType
Поля:
  ulong FileReadAsync
  Result Result
  UInt32 Offset
  UInt32 Read
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoteStorageLocalFileChange_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserStatsReceived_t
Наследуется от: ValueType
Поля:
  ulong GameID
  Result Result
  ulong SteamIDUser
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserStatsStored_t
Наследуется от: ValueType
Поля:
  ulong GameID
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserAchievementStored_t
Наследуется от: ValueType
Поля:
  ulong GameID
  bool GroupAchievement
  Byte[] AchievementName
  UInt32 CurProgress
  UInt32 MaxProgress
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string AchievementNameUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardFindResult_t
Наследуется от: ValueType
Поля:
  ulong SteamLeaderboard
  byte LeaderboardFound
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardScoresDownloaded_t
Наследуется от: ValueType
Поля:
  ulong SteamLeaderboard
  ulong SteamLeaderboardEntries
  int CEntryCount
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardScoreUploaded_t
Наследуется от: ValueType
Поля:
  byte Success
  ulong SteamLeaderboard
  int Score
  byte ScoreChanged
  int GlobalRankNew
  int GlobalRankPrevious
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.NumberOfCurrentPlayers_t
Наследуется от: ValueType
Поля:
  byte Success
  int CPlayers
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserStatsUnloaded_t
Наследуется от: ValueType
Поля:
  ulong SteamIDUser
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserAchievementIconFetched_t
Наследуется от: ValueType
Поля:
  GameId GameID
  Byte[] AchievementName
  bool Achieved
  int IconHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string AchievementNameUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GlobalAchievementPercentagesReady_t
Наследуется от: ValueType
Поля:
  ulong GameID
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardUGCSet_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamLeaderboard
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GlobalStatsReceived_t
Наследуется от: ValueType
Поля:
  ulong GameID
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.DlcInstalled_t
Наследуется от: ValueType
Поля:
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.NewUrlLaunchParameters_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AppProofOfPurchaseKeyResponse_t
Наследуется от: ValueType
Поля:
  Result Result
  UInt32 AppID
  UInt32 CchKeyLength
  Byte[] Key
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string KeyUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.FileDetailsResult_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong FileSize
  Byte[] FileSHA
  UInt32 Flags
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.TimedTrialStatus_t
Наследуется от: ValueType
Поля:
  AppId AppID
  bool IsOffline
  UInt32 SecondsAllowed
  UInt32 SecondsPlayed
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.P2PSessionRequest_t
Наследуется от: ValueType
Поля:
  ulong SteamIDRemote
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.P2PSessionConnectFail_t
Наследуется от: ValueType
Поля:
  ulong SteamIDRemote
  byte P2PSessionError
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ScreenshotReady_t
Наследуется от: ValueType
Поля:
  UInt32 Local
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ScreenshotRequested_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.PlaybackStatusHasChanged_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.VolumeHasChanged_t
Наследуется от: ValueType
Поля:
  float NewVolume
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerRemoteWillActivate_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerRemoteWillDeactivate_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerRemoteToFront_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWillQuit_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsPlay_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsPause_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsPlayPrevious_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsPlayNext_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsShuffled_t
Наследуется от: ValueType
Поля:
  bool Shuffled
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsLooped_t
Наследуется от: ValueType
Поля:
  bool Looped
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsVolume_t
Наследуется от: ValueType
Поля:
  float NewVolume
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerSelectsQueueEntry_t
Наследуется от: ValueType
Поля:
  int NID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerSelectsPlaylistEntry_t
Наследуется от: ValueType
Поля:
  int NID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.MusicPlayerWantsPlayingRepeatStatus_t
Наследуется от: ValueType
Поля:
  int PlayingRepeatStatus
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTTPRequestCompleted_t
Наследуется от: ValueType
Поля:
  UInt32 Request
  ulong ContextValue
  bool RequestSuccessful
  HTTPStatusCode StatusCode
  UInt32 BodySize
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTTPRequestHeadersReceived_t
Наследуется от: ValueType
Поля:
  UInt32 Request
  ulong ContextValue
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTTPRequestDataReceived_t
Наследуется от: ValueType
Поля:
  UInt32 Request
  ulong ContextValue
  UInt32 COffset
  UInt32 CBytesReceived
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInputDeviceConnected_t
Наследуется от: ValueType
Поля:
  ulong ConnectedDeviceHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInputDeviceDisconnected_t
Наследуется от: ValueType
Поля:
  ulong DisconnectedDeviceHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInputConfigurationLoaded_t
Наследуется от: ValueType
Поля:
  AppId AppID
  ulong DeviceHandle
  ulong MappingCreator
  UInt32 MajorRevision
  UInt32 MinorRevision
  bool UsesSteamInputAPI
  bool UsesGamepadAPI
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInputGamepadSlotChange_t
Наследуется от: ValueType
Поля:
  AppId AppID
  ulong DeviceHandle
  InputType DeviceType
  int OldGamepadSlot
  int NewGamepadSlot
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamUGCQueryCompleted_t
Наследуется от: ValueType
Поля:
  ulong Handle
  Result Result
  UInt32 NumResultsReturned
  UInt32 TotalMatchingResults
  bool CachedData
  Byte[] NextCursor
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string NextCursorUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamUGCRequestUGCDetailsResult_t
Наследуется от: ValueType
Поля:
  SteamUGCDetails_t Details
  bool CachedData
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.CreateItemResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  bool UserNeedsToAcceptWorkshopLegalAgreement
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SubmitItemUpdateResult_t
Наследуется от: ValueType
Поля:
  Result Result
  bool UserNeedsToAcceptWorkshopLegalAgreement
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ItemInstalled_t
Наследуется от: ValueType
Поля:
  AppId AppID
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.DownloadItemResult_t
Наследуется от: ValueType
Поля:
  AppId AppID
  PublishedFileId PublishedFileId
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserFavoriteItemsListChanged_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  Result Result
  bool WasAddRequest
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SetUserItemVoteResult_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  Result Result
  bool VoteUp
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GetUserItemVoteResult_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  Result Result
  bool VotedUp
  bool VotedDown
  bool VoteSkipped
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.StartPlaytimeTrackingResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.StopPlaytimeTrackingResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AddUGCDependencyResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  PublishedFileId ChildPublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoveUGCDependencyResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  PublishedFileId ChildPublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AddAppDependencyResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.RemoveAppDependencyResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GetAppDependenciesResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  AppId[] GAppIDs
  UInt32 NumAppDependencies
  UInt32 TotalNumAppDependencies
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.DeleteItemResult_t
Наследуется от: ValueType
Поля:
  Result Result
  PublishedFileId PublishedFileId
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.UserSubscribedItemsListChanged_t
Наследуется от: ValueType
Поля:
  AppId AppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.WorkshopEULAStatus_t
Наследуется от: ValueType
Поля:
  Result Result
  AppId AppID
  UInt32 Version
  UInt32 TAction
  bool Accepted
  bool NeedsAction
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamAppInstalled_t
Наследуется от: ValueType
Поля:
  AppId AppID
  int InstallFolderIndex
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamAppUninstalled_t
Наследуется от: ValueType
Поля:
  AppId AppID
  int InstallFolderIndex
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_BrowserReady_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_NeedsPaint_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PBGRA
  UInt32 UnWide
  UInt32 UnTall
  UInt32 UnUpdateX
  UInt32 UnUpdateY
  UInt32 UnUpdateWide
  UInt32 UnUpdateTall
  UInt32 UnScrollX
  UInt32 UnScrollY
  float FlPageScale
  UInt32 UnPageSerial
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_StartRequest_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchURL
  string PchTarget
  string PchPostData
  bool BIsRedirect
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_CloseBrowser_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_URLChanged_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchURL
  string PchPostData
  bool BIsRedirect
  string PchPageTitle
  bool BNewNavigation
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_FinishedRequest_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchURL
  string PchPageTitle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_OpenLinkInNewTab_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchURL
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_ChangedTitle_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchTitle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_SearchResults_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  UInt32 UnResults
  UInt32 UnCurrentMatch
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_CanGoBackAndForward_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  bool BCanGoBack
  bool BCanGoForward
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_HorizontalScroll_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  UInt32 UnScrollMax
  UInt32 UnScrollCurrent
  float FlPageScale
  bool BVisible
  UInt32 UnPageSize
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_VerticalScroll_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  UInt32 UnScrollMax
  UInt32 UnScrollCurrent
  float FlPageScale
  bool BVisible
  UInt32 UnPageSize
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_LinkAtPosition_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  UInt32 X
  UInt32 Y
  string PchURL
  bool BInput
  bool BLiveLink
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_JSAlert_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchMessage
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_JSConfirm_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchMessage
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_FileOpenDialog_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchTitle
  string PchInitialFile
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_NewWindow_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchURL
  UInt32 UnX
  UInt32 UnY
  UInt32 UnWide
  UInt32 UnTall
  UInt32 UnNewWindow_BrowserHandle_IGNORE
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_SetCursor_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  UInt32 EMouseCursor
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_StatusText_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchMsg
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_ShowToolTip_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchMsg
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_UpdateToolTip_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  string PchMsg
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_HideToolTip_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.HTML_BrowserRestarted_t
Наследуется от: ValueType
Поля:
  UInt32 UnBrowserHandle
  UInt32 UnOldBrowserHandle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryResultReady_t
Наследуется от: ValueType
Поля:
  int Handle
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryFullUpdate_t
Наследуется от: ValueType
Поля:
  int Handle
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryDefinitionUpdate_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryEligiblePromoItemDefIDs_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamID
  int UmEligiblePromoItemDefs
  bool CachedData
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryStartPurchaseResult_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong OrderID
  ulong TransID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryRequestPricesResult_t
Наследуется от: ValueType
Поля:
  Result Result
  Byte[] Currency
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string CurrencyUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GetVideoURLResult_t
Наследуется от: ValueType
Поля:
  Result Result
  AppId VideoAppID
  Byte[] URL
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string URLUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GetOPFSettingsResult_t
Наследуется от: ValueType
Поля:
  Result Result
  AppId VideoAppID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamParentalSettingsChanged_t
Наследуется от: ValueType
Поля:
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamRemotePlaySessionConnected_t
Наследуется от: ValueType
Поля:
  UInt32 SessionID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamRemotePlaySessionDisconnected_t
Наследуется от: ValueType
Поля:
  UInt32 SessionID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamRemotePlayTogetherGuestInvite_t
Наследуется от: ValueType
Поля:
  Byte[] ConnectURL
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string ConnectURLUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamNetworkingMessagesSessionRequest_t
Наследуется от: ValueType
Поля:
  NetIdentity DentityRemote
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamNetworkingMessagesSessionFailed_t
Наследуется от: ValueType
Поля:
  ConnectionInfo Nfo
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamNetConnectionStatusChangedCallback_t
Наследуется от: ValueType
Поля:
  Connection Conn
  ConnectionInfo Nfo
  ConnectionState OldState
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamNetAuthenticationStatus_t
Наследуется от: ValueType
Поля:
  SteamNetworkingAvailability Avail
  Byte[] DebugMsg
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string DebugMsgUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamRelayNetworkStatus_t
Наследуется от: ValueType
Поля:
  SteamNetworkingAvailability Avail
  int PingMeasurementInProgress
  SteamNetworkingAvailability AvailNetworkConfig
  SteamNetworkingAvailability AvailAnyRelay
  Byte[] DebugMsg
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string DebugMsgUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSClientApprove_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  ulong OwnerSteamID
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSClientDeny_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  DenyReason DenyReason
  Byte[] OptionalText
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string OptionalTextUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSClientKick_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  DenyReason DenyReason
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSClientAchievementStatus_t
Наследуется от: ValueType
Поля:
  ulong SteamID
  Byte[] PchAchievement
  bool Unlocked
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  string PchAchievementUTF8()
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSPolicyResponse_t
Наследуется от: ValueType
Поля:
  byte Secure
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSGameplayStats_t
Наследуется от: ValueType
Поля:
  Result Result
  int Rank
  UInt32 TotalConnects
  UInt32 TotalMinutesPlayed
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSClientGroupStatus_t
Наследуется от: ValueType
Поля:
  ulong SteamIDUser
  ulong SteamIDGroup
  bool Member
  bool Officer
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSReputation_t
Наследуется от: ValueType
Поля:
  Result Result
  UInt32 ReputationScore
  bool Banned
  UInt32 BannedIP
  ushort BannedPort
  ulong BannedGameID
  UInt32 BanExpires
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.AssociateWithClanResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.ComputeNewPlayerCompatibilityResult_t
Наследуется от: ValueType
Поля:
  Result Result
  int CPlayersThatDontLikeCandidate
  int CPlayersThatCandidateDoesntLike
  int CClanPlayersThatDontLikeCandidate
  ulong SteamIDCandidate
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSStatsReceived_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamIDUser
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSStatsStored_t
Наследуется от: ValueType
Поля:
  Result Result
  ulong SteamIDUser
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.GSStatsUnloaded_t
Наследуется от: ValueType
Поля:
  ulong SteamIDUser
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.SteamNetworkingFakeIPResult_t
Наследуется от: ValueType
Поля:
  Result Result
  NetIdentity Dentity
  UInt32 IP
  UInt16[] Ports
  int _datasize
Свойства:
  int DataSize
  CallbackType CallbackType
Методы:
  int get_DataSize()
  CallbackType get_CallbackType()
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.Defines
Наследуется от: object
Поля:
  AppId k_uAppIdInvalid
  DepotId_t k_uDepotIdInvalid
  SteamAPICall_t k_uAPICallInvalid
  PartyBeaconID_t k_ulPartyBeaconIdInvalid
  HAuthTicket k_HAuthTicketInvalid
  UInt32 k_unSteamAccountIDMask
  UInt32 k_unSteamAccountInstanceMask
  UInt32 k_unSteamUserDefaultInstance
  int k_cchGameExtraInfoMax
  int k_cchMaxFriendsGroupName
  int k_cFriendsGroupLimit
  FriendsGroupID_t k_FriendsGroupID_Invalid
  int k_cEnumerateFollowersMax
  UInt32 k_cubChatMetadataMax
  int k_cbMaxGameServerGameDir
  int k_cbMaxGameServerMapName
  int k_cbMaxGameServerGameDescription
  int k_cbMaxGameServerName
  int k_cbMaxGameServerTags
  int k_cbMaxGameServerGameData
  int HSERVERQUERY_INVALID
  UInt32 k_unFavoriteFlagNone
  UInt32 k_unFavoriteFlagFavorite
  UInt32 k_unFavoriteFlagHistory
  UInt32 k_unMaxCloudFileChunkSize
  PublishedFileId k_PublishedFileIdInvalid
  UGCHandle_t k_UGCHandleInvalid
  PublishedFileUpdateHandle_t k_PublishedFileUpdateHandleInvalid
  UGCFileWriteStreamHandle_t k_UGCFileStreamHandleInvalid
  UInt32 k_cchPublishedDocumentTitleMax
  UInt32 k_cchPublishedDocumentDescriptionMax
  UInt32 k_cchPublishedDocumentChangeDescriptionMax
  UInt32 k_unEnumeratePublishedFilesMaxResults
  UInt32 k_cchTagListMax
  UInt32 k_cchFilenameMax
  UInt32 k_cchPublishedFileURLMax
  int k_cubAppProofOfPurchaseKeyMax
  UInt32 k_nScreenshotMaxTaggedUsers
  UInt32 k_nScreenshotMaxTaggedPublishedFiles
  int k_cubUFSTagTypeMax
  int k_cubUFSTagValueMax
  int k_ScreenshotThumbWidth
  UGCQueryHandle_t k_UGCQueryHandleInvalid
  UGCUpdateHandle_t k_UGCUpdateHandleInvalid
  UInt32 kNumUGCResultsPerPage
  UInt32 k_cchDeveloperMetadataMax
  UInt32 INVALID_HTMLBROWSER
  InventoryItemId k_SteamItemInstanceIDInvalid
  SteamInventoryResult_t k_SteamInventoryResultInvalid
  SteamInventoryUpdateHandle_t k_SteamInventoryUpdateHandleInvalid
  Connection k_HSteamNetConnection_Invalid
  Socket k_HSteamListenSocket_Invalid
  HSteamNetPollGroup k_HSteamNetPollGroup_Invalid
  int k_cchMaxSteamNetworkingErrMsg
  int k_cchSteamNetworkingMaxConnectionCloseReason
  int k_cchSteamNetworkingMaxConnectionDescription
  int k_cchSteamNetworkingMaxConnectionAppName
  int k_nSteamNetworkConnectionInfoFlags_Unauthenticated
  int k_nSteamNetworkConnectionInfoFlags_Unencrypted
  int k_nSteamNetworkConnectionInfoFlags_LoopbackBuffers
  int k_nSteamNetworkConnectionInfoFlags_Fast
  int k_nSteamNetworkConnectionInfoFlags_Relayed
  int k_nSteamNetworkConnectionInfoFlags_DualWifi
  int k_cbMaxSteamNetworkingSocketsMessageSizeSend
  int k_nSteamNetworkingSend_Unreliable
  int k_nSteamNetworkingSend_NoNagle
  int k_nSteamNetworkingSend_UnreliableNoNagle
  int k_nSteamNetworkingSend_NoDelay
  int k_nSteamNetworkingSend_UnreliableNoDelay
  int k_nSteamNetworkingSend_Reliable
  int k_nSteamNetworkingSend_ReliableNoNagle
  int k_nSteamNetworkingSend_UseCurrentThread
  int k_nSteamNetworkingSend_AutoRestartBrokenSession
  int k_cchMaxSteamNetworkingPingLocationString
  int k_nSteamNetworkingPing_Failed
  int k_nSteamNetworkingPing_Unknown
  int k_nSteamNetworkingConfig_P2P_Transport_ICE_Enable_Default
  int k_nSteamNetworkingConfig_P2P_Transport_ICE_Enable_Disable
  int k_nSteamNetworkingConfig_P2P_Transport_ICE_Enable_Relay
  int k_nSteamNetworkingConfig_P2P_Transport_ICE_Enable_Private
  int k_nSteamNetworkingConfig_P2P_Transport_ICE_Enable_Public
  int k_nSteamNetworkingConfig_P2P_Transport_ICE_Enable_All
  SteamNetworkingPOPID k_SteamDatagramPOPID_dev
  ushort STEAMGAMESERVER_QUERY_PORT_SHARED
  ushort MASTERSERVERUPDATERPORT_USEGAMESOCKETSHARE
  UInt32 k_cbSteamDatagramMaxSerializedTicket
  UInt32 k_cbMaxSteamDatagramGameCoordinatorServerLoginAppData
  UInt32 k_cbMaxSteamDatagramGameCoordinatorServerLoginSerialized
  int k_cbSteamNetworkingSocketsFakeUDPPortRecommendedMTU
  int k_cbSteamNetworkingSocketsFakeUDPPortMaxMessageSize
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.gameserveritem_t
Наследуется от: ValueType
Поля:
  servernetadr_t NetAdr
  int Ping
  bool HadSuccessfulResponse
  bool DoNotRefresh
  Byte[] GameDir
  Byte[] Map
  Byte[] GameDescription
  UInt32 AppID
  int Players
  int MaxPlayers
  int BotPlayers
  bool Password
  bool Secure
  UInt32 TimeLastPlayed
  int ServerVersion
  Byte[] ServerName
  Byte[] GameTags
  ulong SteamID
Свойства:
Методы:
  void InternalConstruct(gameserveritem_t& self)
  Utf8StringPointer InternalGetName(gameserveritem_t& self)
  void InternalSetName(gameserveritem_t& self, string pName)
  string GameDirUTF8()
  string MapUTF8()
  string GameDescriptionUTF8()
  string ServerNameUTF8()
  string GameTagsUTF8()
--------------------------------------------------
Класс: Steamworks.Data.MatchMakingKeyValuePair
Наследуется от: ValueType
Поля:
  string Key
  string Value
Свойства:
Методы:
  void InternalConstruct(MatchMakingKeyValuePair& self)
--------------------------------------------------
Класс: Steamworks.Data.servernetadr_t
Наследуется от: ValueType
Поля:
  ushort ConnectionPort
  ushort QueryPort
  UInt32 IP
Свойства:
Методы:
  void InternalConstruct(servernetadr_t& self)
  void InternalInit(servernetadr_t& self, UInt32 ip, ushort usQueryPort, ushort usConnectionPort)
  ushort InternalGetQueryPort(servernetadr_t& self)
  void InternalSetQueryPort(servernetadr_t& self, ushort usPort)
  ushort InternalGetConnectionPort(servernetadr_t& self)
  void InternalSetConnectionPort(servernetadr_t& self, ushort usPort)
  UInt32 InternalGetIP(servernetadr_t& self)
  void InternalSetIP(servernetadr_t& self, UInt32 unIP)
  Utf8StringPointer InternalGetConnectionAddressString(servernetadr_t& self)
  Utf8StringPointer InternalGetQueryAddressString(servernetadr_t& self)
  bool InternalIsLessThan(servernetadr_t& self, servernetadr_t& netadr)
  void InternalAssign(servernetadr_t& self, servernetadr_t& that)
--------------------------------------------------
Класс: Steamworks.Data.SteamDatagramHostedAddress
Наследуется от: ValueType
Поля:
  int CbSize
  Byte[] Data
Свойства:
Методы:
  void InternalClear(SteamDatagramHostedAddress& self)
  SteamNetworkingPOPID InternalGetPopID(SteamDatagramHostedAddress& self)
  void InternalSetDevAddress(SteamDatagramHostedAddress& self, UInt32 nIP, ushort nPort, SteamNetworkingPOPID popid)
  string DataUTF8()
--------------------------------------------------
Класс: Steamworks.Data.SteamIPAddress
Наследуется от: ValueType
Поля:
  UInt32 Ip4Address
  SteamIPType Type
Свойства:
Методы:
  bool InternalIsSet(SteamIPAddress& self)
  IPAddress op_Implicit(SteamIPAddress value)
--------------------------------------------------
Класс: Steamworks.Data.NetKeyValue
Наследуется от: ValueType
Поля:
  NetConfig Value
  NetConfigType DataType
  long Int64Value
  int Int32Value
  float FloatValue
  IntPtr PointerValue
Свойства:
Методы:
  void InternalSetInt32(NetKeyValue& self, NetConfig eVal, int data)
  void InternalSetInt64(NetKeyValue& self, NetConfig eVal, long data)
  void InternalSetFloat(NetKeyValue& self, NetConfig eVal, float data)
  void InternalSetPtr(NetKeyValue& self, NetConfig eVal, IntPtr data)
  void InternalSetString(NetKeyValue& self, NetConfig eVal, string data)
--------------------------------------------------
Класс: Steamworks.Data.NetIdentity
Наследуется от: ValueType
Поля:
  IdentityType type
  int size
  ulong steamid
  NetAddress netaddress
Свойства:
  NetIdentity LocalHost
  bool IsSteamId
  bool IsIpAddress
  bool IsLocalHost
  SteamId SteamId
  NetAddress Address
Методы:
  void InternalClear(NetIdentity& self)
  bool InternalIsInvalid(NetIdentity& self)
  void InternalSetSteamID(NetIdentity& self, SteamId steamID)
  SteamId InternalGetSteamID(NetIdentity& self)
  void InternalSetSteamID64(NetIdentity& self, ulong steamID)
  ulong InternalGetSteamID64(NetIdentity& self)
  bool InternalSetXboxPairwiseID(NetIdentity& self, string pszString)
  Utf8StringPointer InternalGetXboxPairwiseID(NetIdentity& self)
  void InternalSetPSNID(NetIdentity& self, ulong id)
  ulong InternalGetPSNID(NetIdentity& self)
  void InternalSetStadiaID(NetIdentity& self, ulong id)
  ulong InternalGetStadiaID(NetIdentity& self)
  void InternalSetIPAddr(NetIdentity& self, NetAddress& addr)
  IntPtr InternalGetIPAddr(NetIdentity& self)
  void InternalSetIPv4Addr(NetIdentity& self, UInt32 nIPv4, ushort nPort)
  UInt32 InternalGetIPv4(NetIdentity& self)
  SteamNetworkingFakeIPType InternalGetFakeIPType(NetIdentity& self)
  bool InternalIsFakeIP(NetIdentity& self)
  void InternalSetLocalHost(NetIdentity& self)
  bool InternalIsLocalHost(NetIdentity& self)
  bool InternalSetGenericString(NetIdentity& self, string pszString)
  Utf8StringPointer InternalGetGenericString(NetIdentity& self)
  bool InternalSetGenericBytes(NetIdentity& self, IntPtr data, UInt32 cbLen)
  byte InternalGetGenericBytes(NetIdentity& self, Int32& cbLen)
  bool InternalIsEqualTo(NetIdentity& self, NetIdentity& x)
  void InternalToString(NetIdentity& self, IntPtr buf, UInt32 cbBuf)
  bool InternalParseString(NetIdentity& self, string pszStr)
  NetIdentity get_LocalHost()
  bool get_IsSteamId()
  bool get_IsIpAddress()
  bool get_IsLocalHost()
  NetIdentity op_Implicit(SteamId value)
  NetIdentity op_Implicit(NetAddress address)
  SteamId op_Implicit(NetIdentity value)
  SteamId get_SteamId()
  NetAddress get_Address()
  string ToString()
--------------------------------------------------
Класс: Steamworks.Data.NetAddress
Наследуется от: ValueType
Поля:
  IPV4 ip
  ushort port
Свойства:
  ushort Port
  NetAddress Cleared
  bool IsIPv6AllZeros
  bool IsIPv4
  bool IsFakeIPv4
  bool IsLocalHost
  IPAddress Address
Методы:
  void InternalClear(NetAddress& self)
  bool InternalIsIPv6AllZeros(NetAddress& self)
  void InternalSetIPv6(NetAddress& self, Byte& ipv6, ushort nPort)
  void InternalSetIPv4(NetAddress& self, UInt32 nIP, ushort nPort)
  bool InternalIsIPv4(NetAddress& self)
  UInt32 InternalGetIPv4(NetAddress& self)
  void InternalSetIPv6LocalHost(NetAddress& self, ushort nPort)
  bool InternalIsLocalHost(NetAddress& self)
  void InternalToString(NetAddress& self, IntPtr buf, UInt32 cbBuf, bool bWithPort)
  bool InternalParseString(NetAddress& self, string pszStr)
  bool InternalIsEqualTo(NetAddress& self, NetAddress& x)
  SteamNetworkingFakeIPType InternalGetFakeIPType(NetAddress& self)
  bool InternalIsFakeIP(NetAddress& self)
  ushort get_Port()
  NetAddress AnyIp(ushort port)
  NetAddress LocalHost(ushort port)
  NetAddress From(string addrStr, ushort port)
  NetAddress From(IPAddress address, ushort port)
  NetAddress get_Cleared()
  bool get_IsIPv6AllZeros()
  bool get_IsIPv4()
  bool get_IsFakeIPv4()
  bool get_IsLocalHost()
  IPAddress get_Address()
  string ToString()
--------------------------------------------------
Класс: Steamworks.Data.NetMsg
Наследуется от: ValueType
Поля:
  IntPtr DataPtr
  int DataSize
  Connection Connection
  NetIdentity Identity
  long ConnectionUserData
  long RecvTime
  long MessageNumber
  IntPtr FreeDataPtr
  IntPtr ReleasePtr
  int Channel
  SendType Flags
  long UserData
  ushort IdxLane
  ushort _pad1__
Свойства:
Методы:
  void InternalRelease(NetMsg* self)
--------------------------------------------------
Класс: Steamworks.Data.FriendGameInfo_t
Наследуется от: ValueType
Поля:
  GameId GameID
  UInt32 GameIP
  ushort GamePort
  ushort QueryPort
  ulong SteamIDLobby
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SteamPartyBeaconLocation_t
Наследуется от: ValueType
Поля:
  SteamPartyBeaconLocationType Type
  ulong LocationID
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SteamParamStringArray_t
Наследуется от: ValueType
Поля:
  IntPtr Strings
  int NumStrings
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardEntry_t
Наследуется от: ValueType
Поля:
  ulong SteamIDUser
  int GlobalRank
  int Score
  int CDetails
  ulong UGC
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.P2PSessionState_t
Наследуется от: ValueType
Поля:
  byte ConnectionActive
  byte Connecting
  byte P2PSessionError
  byte UsingRelay
  int BytesQueuedForSend
  int PacketsQueuedForSend
  UInt32 RemoteIP
  ushort RemotePort
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.InputMotionDataV2_t
Наследуется от: ValueType
Поля:
  float DriftCorrectedQuatX
  float DriftCorrectedQuatY
  float DriftCorrectedQuatZ
  float DriftCorrectedQuatW
  float SensorFusionQuatX
  float SensorFusionQuatY
  float SensorFusionQuatZ
  float SensorFusionQuatW
  float DeferredSensorFusionQuatX
  float DeferredSensorFusionQuatY
  float DeferredSensorFusionQuatZ
  float DeferredSensorFusionQuatW
  float GravityX
  float GravityY
  float GravityZ
  float DegreesPerSecondX
  float DegreesPerSecondY
  float DegreesPerSecondZ
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SteamInputActionEvent_t
Наследуется от: ValueType
Поля:
  ulong ControllerHandle
  SteamInputActionEventType EEventType
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SteamUGCDetails_t
Наследуется от: ValueType
Поля:
  PublishedFileId PublishedFileId
  Result Result
  WorkshopFileType FileType
  AppId CreatorAppID
  AppId ConsumerAppID
  Byte[] Title
  Byte[] Description
  ulong SteamIDOwner
  UInt32 TimeCreated
  UInt32 TimeUpdated
  UInt32 TimeAddedToUserList
  RemoteStoragePublishedFileVisibility Visibility
  bool Banned
  bool AcceptedForUse
  bool TagsTruncated
  Byte[] Tags
  ulong File
  ulong PreviewFile
  Byte[] PchFileName
  int FileSize
  int PreviewFileSize
  Byte[] URL
  UInt32 VotesUp
  UInt32 VotesDown
  float Score
  UInt32 NumChildren
Свойства:
Методы:
  string TitleUTF8()
  string DescriptionUTF8()
  string TagsUTF8()
  string PchFileNameUTF8()
  string URLUTF8()
--------------------------------------------------
Класс: Steamworks.Data.SteamItemDetails_t
Наследуется от: ValueType
Поля:
  InventoryItemId ItemId
  InventoryDefId Definition
  ushort Quantity
  ushort Flags
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.SteamDatagramGameCoordinatorServerLogin
Наследуется от: ValueType
Поля:
  NetIdentity Dentity
  SteamDatagramHostedAddress Outing
  AppId AppID
  UInt32 Time
  int CbAppData
  Byte[] AppData
Свойства:
Методы:
  string AppDataUTF8()
--------------------------------------------------
Класс: Steamworks.Data.DepotId_t
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  DepotId_t op_Implicit(UInt32 value)
  UInt32 op_Implicit(DepotId_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(DepotId_t p)
  bool op_Equality(DepotId_t a, DepotId_t b)
  bool op_Inequality(DepotId_t a, DepotId_t b)
  int CompareTo(DepotId_t other)
--------------------------------------------------
Класс: Steamworks.Data.RTime32
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  RTime32 op_Implicit(UInt32 value)
  UInt32 op_Implicit(RTime32 value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(RTime32 p)
  bool op_Equality(RTime32 a, RTime32 b)
  bool op_Inequality(RTime32 a, RTime32 b)
  int CompareTo(RTime32 other)
--------------------------------------------------
Класс: Steamworks.Data.SteamAPICall_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  SteamAPICall_t op_Implicit(ulong value)
  ulong op_Implicit(SteamAPICall_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SteamAPICall_t p)
  bool op_Equality(SteamAPICall_t a, SteamAPICall_t b)
  bool op_Inequality(SteamAPICall_t a, SteamAPICall_t b)
  int CompareTo(SteamAPICall_t other)
--------------------------------------------------
Класс: Steamworks.Data.AccountID_t
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  AccountID_t op_Implicit(UInt32 value)
  UInt32 op_Implicit(AccountID_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(AccountID_t p)
  bool op_Equality(AccountID_t a, AccountID_t b)
  bool op_Inequality(AccountID_t a, AccountID_t b)
  int CompareTo(AccountID_t other)
--------------------------------------------------
Класс: Steamworks.Data.PartyBeaconID_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  PartyBeaconID_t op_Implicit(ulong value)
  ulong op_Implicit(PartyBeaconID_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(PartyBeaconID_t p)
  bool op_Equality(PartyBeaconID_t a, PartyBeaconID_t b)
  bool op_Inequality(PartyBeaconID_t a, PartyBeaconID_t b)
  int CompareTo(PartyBeaconID_t other)
--------------------------------------------------
Класс: Steamworks.Data.HAuthTicket
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  HAuthTicket op_Implicit(UInt32 value)
  UInt32 op_Implicit(HAuthTicket value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HAuthTicket p)
  bool op_Equality(HAuthTicket a, HAuthTicket b)
  bool op_Inequality(HAuthTicket a, HAuthTicket b)
  int CompareTo(HAuthTicket other)
--------------------------------------------------
Класс: Steamworks.Data.HSteamPipe
Наследуется от: ValueType
Поля:
  int Value
Свойства:
Методы:
  HSteamPipe op_Implicit(int value)
  int op_Implicit(HSteamPipe value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HSteamPipe p)
  bool op_Equality(HSteamPipe a, HSteamPipe b)
  bool op_Inequality(HSteamPipe a, HSteamPipe b)
  int CompareTo(HSteamPipe other)
--------------------------------------------------
Класс: Steamworks.Data.HSteamUser
Наследуется от: ValueType
Поля:
  int Value
Свойства:
Методы:
  HSteamUser op_Implicit(int value)
  int op_Implicit(HSteamUser value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HSteamUser p)
  bool op_Equality(HSteamUser a, HSteamUser b)
  bool op_Inequality(HSteamUser a, HSteamUser b)
  int CompareTo(HSteamUser other)
--------------------------------------------------
Класс: Steamworks.Data.FriendsGroupID_t
Наследуется от: ValueType
Поля:
  short Value
Свойства:
Методы:
  FriendsGroupID_t op_Implicit(short value)
  short op_Implicit(FriendsGroupID_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(FriendsGroupID_t p)
  bool op_Equality(FriendsGroupID_t a, FriendsGroupID_t b)
  bool op_Inequality(FriendsGroupID_t a, FriendsGroupID_t b)
  int CompareTo(FriendsGroupID_t other)
--------------------------------------------------
Класс: Steamworks.Data.HServerListRequest
Наследуется от: ValueType
Поля:
  IntPtr Value
Свойства:
Методы:
  HServerListRequest op_Implicit(IntPtr value)
  IntPtr op_Implicit(HServerListRequest value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HServerListRequest p)
  bool op_Equality(HServerListRequest a, HServerListRequest b)
  bool op_Inequality(HServerListRequest a, HServerListRequest b)
  int CompareTo(HServerListRequest other)
--------------------------------------------------
Класс: Steamworks.Data.HServerQuery
Наследуется от: ValueType
Поля:
  int Value
Свойства:
Методы:
  HServerQuery op_Implicit(int value)
  int op_Implicit(HServerQuery value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HServerQuery p)
  bool op_Equality(HServerQuery a, HServerQuery b)
  bool op_Inequality(HServerQuery a, HServerQuery b)
  int CompareTo(HServerQuery other)
--------------------------------------------------
Класс: Steamworks.Data.UGCHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  UGCHandle_t op_Implicit(ulong value)
  ulong op_Implicit(UGCHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(UGCHandle_t p)
  bool op_Equality(UGCHandle_t a, UGCHandle_t b)
  bool op_Inequality(UGCHandle_t a, UGCHandle_t b)
  int CompareTo(UGCHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.PublishedFileUpdateHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  PublishedFileUpdateHandle_t op_Implicit(ulong value)
  ulong op_Implicit(PublishedFileUpdateHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(PublishedFileUpdateHandle_t p)
  bool op_Equality(PublishedFileUpdateHandle_t a, PublishedFileUpdateHandle_t b)
  bool op_Inequality(PublishedFileUpdateHandle_t a, PublishedFileUpdateHandle_t b)
  int CompareTo(PublishedFileUpdateHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.PublishedFileId
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  PublishedFileId op_Implicit(ulong value)
  ulong op_Implicit(PublishedFileId value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(PublishedFileId p)
  bool op_Equality(PublishedFileId a, PublishedFileId b)
  bool op_Inequality(PublishedFileId a, PublishedFileId b)
  int CompareTo(PublishedFileId other)
--------------------------------------------------
Класс: Steamworks.Data.UGCFileWriteStreamHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  UGCFileWriteStreamHandle_t op_Implicit(ulong value)
  ulong op_Implicit(UGCFileWriteStreamHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(UGCFileWriteStreamHandle_t p)
  bool op_Equality(UGCFileWriteStreamHandle_t a, UGCFileWriteStreamHandle_t b)
  bool op_Inequality(UGCFileWriteStreamHandle_t a, UGCFileWriteStreamHandle_t b)
  int CompareTo(UGCFileWriteStreamHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.SteamLeaderboard_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  SteamLeaderboard_t op_Implicit(ulong value)
  ulong op_Implicit(SteamLeaderboard_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SteamLeaderboard_t p)
  bool op_Equality(SteamLeaderboard_t a, SteamLeaderboard_t b)
  bool op_Inequality(SteamLeaderboard_t a, SteamLeaderboard_t b)
  int CompareTo(SteamLeaderboard_t other)
--------------------------------------------------
Класс: Steamworks.Data.SteamLeaderboardEntries_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  SteamLeaderboardEntries_t op_Implicit(ulong value)
  ulong op_Implicit(SteamLeaderboardEntries_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SteamLeaderboardEntries_t p)
  bool op_Equality(SteamLeaderboardEntries_t a, SteamLeaderboardEntries_t b)
  bool op_Inequality(SteamLeaderboardEntries_t a, SteamLeaderboardEntries_t b)
  int CompareTo(SteamLeaderboardEntries_t other)
--------------------------------------------------
Класс: Steamworks.Data.SNetSocket_t
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  SNetSocket_t op_Implicit(UInt32 value)
  UInt32 op_Implicit(SNetSocket_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SNetSocket_t p)
  bool op_Equality(SNetSocket_t a, SNetSocket_t b)
  bool op_Inequality(SNetSocket_t a, SNetSocket_t b)
  int CompareTo(SNetSocket_t other)
--------------------------------------------------
Класс: Steamworks.Data.SNetListenSocket_t
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  SNetListenSocket_t op_Implicit(UInt32 value)
  UInt32 op_Implicit(SNetListenSocket_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SNetListenSocket_t p)
  bool op_Equality(SNetListenSocket_t a, SNetListenSocket_t b)
  bool op_Inequality(SNetListenSocket_t a, SNetListenSocket_t b)
  int CompareTo(SNetListenSocket_t other)
--------------------------------------------------
Класс: Steamworks.Data.ScreenshotHandle
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  ScreenshotHandle op_Implicit(UInt32 value)
  UInt32 op_Implicit(ScreenshotHandle value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(ScreenshotHandle p)
  bool op_Equality(ScreenshotHandle a, ScreenshotHandle b)
  bool op_Inequality(ScreenshotHandle a, ScreenshotHandle b)
  int CompareTo(ScreenshotHandle other)
--------------------------------------------------
Класс: Steamworks.Data.HTTPRequestHandle
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  HTTPRequestHandle op_Implicit(UInt32 value)
  UInt32 op_Implicit(HTTPRequestHandle value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HTTPRequestHandle p)
  bool op_Equality(HTTPRequestHandle a, HTTPRequestHandle b)
  bool op_Inequality(HTTPRequestHandle a, HTTPRequestHandle b)
  int CompareTo(HTTPRequestHandle other)
--------------------------------------------------
Класс: Steamworks.Data.HTTPCookieContainerHandle
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  HTTPCookieContainerHandle op_Implicit(UInt32 value)
  UInt32 op_Implicit(HTTPCookieContainerHandle value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HTTPCookieContainerHandle p)
  bool op_Equality(HTTPCookieContainerHandle a, HTTPCookieContainerHandle b)
  bool op_Inequality(HTTPCookieContainerHandle a, HTTPCookieContainerHandle b)
  int CompareTo(HTTPCookieContainerHandle other)
--------------------------------------------------
Класс: Steamworks.Data.InputHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  InputHandle_t op_Implicit(ulong value)
  ulong op_Implicit(InputHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(InputHandle_t p)
  bool op_Equality(InputHandle_t a, InputHandle_t b)
  bool op_Inequality(InputHandle_t a, InputHandle_t b)
  int CompareTo(InputHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.InputActionSetHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  InputActionSetHandle_t op_Implicit(ulong value)
  ulong op_Implicit(InputActionSetHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(InputActionSetHandle_t p)
  bool op_Equality(InputActionSetHandle_t a, InputActionSetHandle_t b)
  bool op_Inequality(InputActionSetHandle_t a, InputActionSetHandle_t b)
  int CompareTo(InputActionSetHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.InputDigitalActionHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  InputDigitalActionHandle_t op_Implicit(ulong value)
  ulong op_Implicit(InputDigitalActionHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(InputDigitalActionHandle_t p)
  bool op_Equality(InputDigitalActionHandle_t a, InputDigitalActionHandle_t b)
  bool op_Inequality(InputDigitalActionHandle_t a, InputDigitalActionHandle_t b)
  int CompareTo(InputDigitalActionHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.InputAnalogActionHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  InputAnalogActionHandle_t op_Implicit(ulong value)
  ulong op_Implicit(InputAnalogActionHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(InputAnalogActionHandle_t p)
  bool op_Equality(InputAnalogActionHandle_t a, InputAnalogActionHandle_t b)
  bool op_Inequality(InputAnalogActionHandle_t a, InputAnalogActionHandle_t b)
  int CompareTo(InputAnalogActionHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.ControllerHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  ControllerHandle_t op_Implicit(ulong value)
  ulong op_Implicit(ControllerHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(ControllerHandle_t p)
  bool op_Equality(ControllerHandle_t a, ControllerHandle_t b)
  bool op_Inequality(ControllerHandle_t a, ControllerHandle_t b)
  int CompareTo(ControllerHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.ControllerActionSetHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  ControllerActionSetHandle_t op_Implicit(ulong value)
  ulong op_Implicit(ControllerActionSetHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(ControllerActionSetHandle_t p)
  bool op_Equality(ControllerActionSetHandle_t a, ControllerActionSetHandle_t b)
  bool op_Inequality(ControllerActionSetHandle_t a, ControllerActionSetHandle_t b)
  int CompareTo(ControllerActionSetHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.ControllerDigitalActionHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  ControllerDigitalActionHandle_t op_Implicit(ulong value)
  ulong op_Implicit(ControllerDigitalActionHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(ControllerDigitalActionHandle_t p)
  bool op_Equality(ControllerDigitalActionHandle_t a, ControllerDigitalActionHandle_t b)
  bool op_Inequality(ControllerDigitalActionHandle_t a, ControllerDigitalActionHandle_t b)
  int CompareTo(ControllerDigitalActionHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.ControllerAnalogActionHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  ControllerAnalogActionHandle_t op_Implicit(ulong value)
  ulong op_Implicit(ControllerAnalogActionHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(ControllerAnalogActionHandle_t p)
  bool op_Equality(ControllerAnalogActionHandle_t a, ControllerAnalogActionHandle_t b)
  bool op_Inequality(ControllerAnalogActionHandle_t a, ControllerAnalogActionHandle_t b)
  int CompareTo(ControllerAnalogActionHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.UGCQueryHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  UGCQueryHandle_t op_Implicit(ulong value)
  ulong op_Implicit(UGCQueryHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(UGCQueryHandle_t p)
  bool op_Equality(UGCQueryHandle_t a, UGCQueryHandle_t b)
  bool op_Inequality(UGCQueryHandle_t a, UGCQueryHandle_t b)
  int CompareTo(UGCQueryHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.UGCUpdateHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  UGCUpdateHandle_t op_Implicit(ulong value)
  ulong op_Implicit(UGCUpdateHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(UGCUpdateHandle_t p)
  bool op_Equality(UGCUpdateHandle_t a, UGCUpdateHandle_t b)
  bool op_Inequality(UGCUpdateHandle_t a, UGCUpdateHandle_t b)
  int CompareTo(UGCUpdateHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.HHTMLBrowser
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  HHTMLBrowser op_Implicit(UInt32 value)
  UInt32 op_Implicit(HHTMLBrowser value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HHTMLBrowser p)
  bool op_Equality(HHTMLBrowser a, HHTMLBrowser b)
  bool op_Inequality(HHTMLBrowser a, HHTMLBrowser b)
  int CompareTo(HHTMLBrowser other)
--------------------------------------------------
Класс: Steamworks.Data.InventoryItemId
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  InventoryItemId op_Implicit(ulong value)
  ulong op_Implicit(InventoryItemId value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(InventoryItemId p)
  bool op_Equality(InventoryItemId a, InventoryItemId b)
  bool op_Inequality(InventoryItemId a, InventoryItemId b)
  int CompareTo(InventoryItemId other)
--------------------------------------------------
Класс: Steamworks.Data.InventoryDefId
Наследуется от: ValueType
Поля:
  int Value
Свойства:
Методы:
  InventoryDefId op_Implicit(int value)
  int op_Implicit(InventoryDefId value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(InventoryDefId p)
  bool op_Equality(InventoryDefId a, InventoryDefId b)
  bool op_Inequality(InventoryDefId a, InventoryDefId b)
  int CompareTo(InventoryDefId other)
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryResult_t
Наследуется от: ValueType
Поля:
  int Value
Свойства:
Методы:
  SteamInventoryResult_t op_Implicit(int value)
  int op_Implicit(SteamInventoryResult_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SteamInventoryResult_t p)
  bool op_Equality(SteamInventoryResult_t a, SteamInventoryResult_t b)
  bool op_Inequality(SteamInventoryResult_t a, SteamInventoryResult_t b)
  int CompareTo(SteamInventoryResult_t other)
--------------------------------------------------
Класс: Steamworks.Data.SteamInventoryUpdateHandle_t
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  SteamInventoryUpdateHandle_t op_Implicit(ulong value)
  ulong op_Implicit(SteamInventoryUpdateHandle_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SteamInventoryUpdateHandle_t p)
  bool op_Equality(SteamInventoryUpdateHandle_t a, SteamInventoryUpdateHandle_t b)
  bool op_Inequality(SteamInventoryUpdateHandle_t a, SteamInventoryUpdateHandle_t b)
  int CompareTo(SteamInventoryUpdateHandle_t other)
--------------------------------------------------
Класс: Steamworks.Data.RemotePlaySessionID_t
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  RemotePlaySessionID_t op_Implicit(UInt32 value)
  UInt32 op_Implicit(RemotePlaySessionID_t value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(RemotePlaySessionID_t p)
  bool op_Equality(RemotePlaySessionID_t a, RemotePlaySessionID_t b)
  bool op_Inequality(RemotePlaySessionID_t a, RemotePlaySessionID_t b)
  int CompareTo(RemotePlaySessionID_t other)
--------------------------------------------------
Класс: Steamworks.Data.HSteamNetPollGroup
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  HSteamNetPollGroup op_Implicit(UInt32 value)
  UInt32 op_Implicit(HSteamNetPollGroup value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(HSteamNetPollGroup p)
  bool op_Equality(HSteamNetPollGroup a, HSteamNetPollGroup b)
  bool op_Inequality(HSteamNetPollGroup a, HSteamNetPollGroup b)
  int CompareTo(HSteamNetPollGroup other)
--------------------------------------------------
Класс: Steamworks.Data.SteamNetworkingPOPID
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  SteamNetworkingPOPID op_Implicit(UInt32 value)
  UInt32 op_Implicit(SteamNetworkingPOPID value)
  string ToString()
  int GetHashCode()
  bool Equals(object p)
  bool Equals(SteamNetworkingPOPID p)
  bool op_Equality(SteamNetworkingPOPID a, SteamNetworkingPOPID b)
  bool op_Inequality(SteamNetworkingPOPID a, SteamNetworkingPOPID b)
  int CompareTo(SteamNetworkingPOPID other)
--------------------------------------------------
Класс: Steamworks.Data.Connection
Наследуется от: ValueType
Поля:
  UInt32 <Id>k__BackingField
Свойства:
  UInt32 Id
  long UserData
  string ConnectionName
Методы:
  UInt32 get_Id()
  void set_Id(UInt32 value)
  bool Equals(Connection other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  Connection op_Implicit(UInt32 value)
  UInt32 op_Implicit(Connection value)
  bool op_Equality(Connection value1, Connection value2)
  bool op_Inequality(Connection value1, Connection value2)
  Result Accept()
  bool Close(bool linger, int reasonCode, string debugString)
  long get_UserData()
  void set_UserData(long value)
  string get_ConnectionName()
  void set_ConnectionName(string value)
  Result SendMessage(IntPtr ptr, int size, SendType sendType, ushort laneIndex)
  Result SendMessage(Byte[] data, SendType sendType, ushort laneIndex)
  Result SendMessage(Byte[] data, int offset, int length, SendType sendType, ushort laneIndex)
  Result SendMessage(string str, SendType sendType, ushort laneIndex)
  Result Flush()
  string DetailedStatus()
  ConnectionStatus QuickStatus()
  Result ConfigureConnectionLanes(Int32[] lanePriorities, UInt16[] laneWeights)
--------------------------------------------------
Класс: Steamworks.Data.ConnectionInfo
Наследуется от: ValueType
Поля:
  NetIdentity identity
  long userData
  Socket listenSocket
  NetAddress address
  ushort pad
  SteamNetworkingPOPID popRemote
  SteamNetworkingPOPID popRelay
  ConnectionState state
  int endReason
  string endDebug
  string connectionDescription
Свойства:
  ConnectionState State
  NetAddress Address
  NetIdentity Identity
  NetConnectionEnd EndReason
Методы:
  ConnectionState get_State()
  NetAddress get_Address()
  NetIdentity get_Identity()
  NetConnectionEnd get_EndReason()
--------------------------------------------------
Класс: Steamworks.Data.ConnectionLaneStatus
Наследуется от: ValueType
Поля:
  int cbPendingUnreliable
  int cbPendingReliable
  int cbSentUnackedReliable
  int _reservePad1
  long ecQueueTime
  UInt32[] reserved
Свойства:
  int PendingUnreliable
  int PendingReliable
  int SentUnackedReliable
Методы:
  int get_PendingUnreliable()
  int get_PendingReliable()
  int get_SentUnackedReliable()
--------------------------------------------------
Класс: Steamworks.Data.ConnectionStatus
Наследуется от: ValueType
Поля:
  ConnectionState state
  int ping
  float connectionQualityLocal
  float connectionQualityRemote
  float outPacketsPerSec
  float outBytesPerSec
  float inPacketsPerSec
  float inBytesPerSec
  int sendRateBytesPerSecond
  int cbPendingUnreliable
  int cbPendingReliable
  int cbSentUnackedReliable
  long ecQueueTime
  UInt32[] reserved
Свойства:
  int Ping
  float OutPacketsPerSec
  float OutBytesPerSec
  float InPacketsPerSec
  float InBytesPerSec
  float ConnectionQualityLocal
  float ConnectionQualityRemote
  int PendingUnreliable
  int PendingReliable
  int SentUnackedReliable
Методы:
  int get_Ping()
  float get_OutPacketsPerSec()
  float get_OutBytesPerSec()
  float get_InPacketsPerSec()
  float get_InBytesPerSec()
  float get_ConnectionQualityLocal()
  float get_ConnectionQualityRemote()
  int get_PendingUnreliable()
  int get_PendingReliable()
  int get_SentUnackedReliable()
--------------------------------------------------
Класс: Steamworks.Data.NetErrorMessage
Наследуется от: ValueType
Поля:
  <Value>e__FixedBuffer Value
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.NetPingLocation
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  Nullable`1<NetPingLocation> TryParseFromString(string str)
  string ToString()
  int EstimatePingTo(NetPingLocation target)
--------------------------------------------------
Класс: Steamworks.Data.Socket
Наследуется от: ValueType
Поля:
  UInt32 Id
Свойства:
  SocketManager Manager
Методы:
  string ToString()
  Socket op_Implicit(UInt32 value)
  UInt32 op_Implicit(Socket value)
  bool Close()
  SocketManager get_Manager()
  void set_Manager(SocketManager value)
--------------------------------------------------
Класс: Steamworks.Data.SteamDatagramRelayAuthTicket
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.Achievement
Наследуется от: ValueType
Поля:
  string Value
Свойства:
  bool State
  string Identifier
  string Name
  string Description
  Nullable`1<DateTime> UnlockTime
  float GlobalUnlocked
Методы:
  void .ctor(string name)
  string ToString()
  bool get_State()
  string get_Identifier()
  string get_Name()
  string get_Description()
  Nullable`1<DateTime> get_UnlockTime()
  Nullable`1<Image> GetIcon()
  Task`1<Nullable`1<Image>> GetIconAsync(int timeout)
  float get_GlobalUnlocked()
  bool Trigger(bool apply)
  bool Clear()
--------------------------------------------------
Класс: Steamworks.Data.DepotId
Наследуется от: ValueType
Поля:
  UInt32 Value
Свойства:
Методы:
  DepotId op_Implicit(UInt32 value)
  DepotId op_Implicit(int value)
  UInt32 op_Implicit(DepotId value)
  string ToString()
--------------------------------------------------
Класс: Steamworks.Data.DlcInformation
Наследуется от: ValueType
Поля:
  AppId <AppId>k__BackingField
  string <Name>k__BackingField
  bool <Available>k__BackingField
Свойства:
  AppId AppId
  string Name
  bool Available
Методы:
  AppId get_AppId()
  void set_AppId(AppId value)
  string get_Name()
  void set_Name(string value)
  bool get_Available()
  void set_Available(bool value)
--------------------------------------------------
Класс: Steamworks.Data.DownloadProgress
Наследуется от: ValueType
Поля:
  bool Active
  ulong BytesDownloaded
  ulong BytesTotal
Свойства:
  ulong BytesRemaining
Методы:
  ulong get_BytesRemaining()
--------------------------------------------------
Класс: Steamworks.Data.DurationControl
Наследуется от: ValueType
Поля:
  DurationControl_t _inner
Свойства:
  AppId Appid
  bool Applicable
  TimeSpan PlaytimeInLastFiveHours
  TimeSpan PlaytimeToday
  DurationControlProgress Progress
Методы:
  AppId get_Appid()
  bool get_Applicable()
  TimeSpan get_PlaytimeInLastFiveHours()
  TimeSpan get_PlaytimeToday()
  DurationControlProgress get_Progress()
--------------------------------------------------
Класс: Steamworks.Data.FileDetails
Наследуется от: ValueType
Поля:
  ulong SizeInBytes
  string Sha1
  UInt32 Flags
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.GameId
Наследуется от: ValueType
Поля:
  ulong Value
Свойства:
Методы:
  GameId op_Implicit(ulong value)
  ulong op_Implicit(GameId value)
--------------------------------------------------
Класс: Steamworks.Data.Image
Наследуется от: ValueType
Поля:
  UInt32 Width
  UInt32 Height
  Byte[] Data
Свойства:
Методы:
  Color GetPixel(int x, int y)
  string ToString()
--------------------------------------------------
Класс: Steamworks.Data.Color
Наследуется от: ValueType
Поля:
  byte r
  byte g
  byte b
  byte a
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.InventoryPurchaseResult
Наследуется от: ValueType
Поля:
  Result Result
  ulong OrderID
  ulong TransID
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.Leaderboard
Наследуется от: ValueType
Поля:
  SteamLeaderboard_t Id
  Int32[] detailsBuffer
  Int32[] noDetails
Свойства:
  string Name
  LeaderboardSort Sort
  LeaderboardDisplay Display
  int EntryCount
Методы:
  string get_Name()
  LeaderboardSort get_Sort()
  LeaderboardDisplay get_Display()
  int get_EntryCount()
  Task`1<Nullable`1<LeaderboardUpdate>> ReplaceScore(int score, Int32[] details)
  Task`1<Nullable`1<LeaderboardUpdate>> SubmitScoreAsync(int score, Int32[] details)
  Task`1<Result> AttachUgc(Ugc file)
  Task`1<LeaderboardEntry[]> GetScoresForUsersAsync(SteamId[] users)
  Task`1<LeaderboardEntry[]> GetScoresAsync(int count, int offset)
  Task`1<LeaderboardEntry[]> GetScoresAroundUserAsync(int start, int end)
  Task`1<LeaderboardEntry[]> GetScoresFromFriendsAsync()
  Task`1<LeaderboardEntry[]> LeaderboardResultToEntries(LeaderboardScoresDownloaded_t r)
  Task WaitForUserNames(LeaderboardEntry[] entries)
  void .cctor()
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardEntry
Наследуется от: ValueType
Поля:
  Friend User
  int GlobalRank
  int Score
  Int32[] Details
Свойства:
Методы:
  LeaderboardEntry From(LeaderboardEntry_t e, Int32[] detailsBuffer)
--------------------------------------------------
Класс: Steamworks.Data.LeaderboardUpdate
Наследуется от: ValueType
Поля:
  int Score
  bool Changed
  int NewGlobalRank
  int OldGlobalRank
Свойства:
  int RankChange
Методы:
  int get_RankChange()
  LeaderboardUpdate From(LeaderboardScoreUploaded_t e)
--------------------------------------------------
Класс: Steamworks.Data.Lobby
Наследуется от: ValueType
Поля:
  SteamId <Id>k__BackingField
Свойства:
  SteamId Id
  int MemberCount
  IEnumerable`1<Friend> Members
  IEnumerable`1<KeyValuePair`2<string, string>> Data
  int MaxMembers
  Friend Owner
Методы:
  SteamId get_Id()
  void set_Id(SteamId value)
  void .ctor(SteamId id)
  Task`1<RoomEnter> Join()
  void Leave()
  bool InviteFriend(SteamId steamid)
  int get_MemberCount()
  IEnumerable`1<Friend> get_Members()
  string GetData(string key)
  bool SetData(string key, string value)
  bool DeleteData(string key)
  IEnumerable`1<KeyValuePair`2<string, string>> get_Data()
  string GetMemberData(Friend member, string key)
  void SetMemberData(string key, string value)
  bool SendChatString(string message)
  bool SendChatBytes(Byte[] data)
  bool SendChatBytesUnsafe(Byte* ptr, int length)
  bool Refresh()
  int get_MaxMembers()
  void set_MaxMembers(int value)
  bool SetPublic()
  bool SetPrivate()
  bool SetInvisible()
  bool SetFriendsOnly()
  bool SetJoinable(bool b)
  void SetGameServer(SteamId steamServer)
  void SetGameServer(string ip, ushort port)
  bool GetGameServer(UInt32& ip, UInt16& port, SteamId& serverId)
  Friend get_Owner()
  void set_Owner(Friend value)
  bool IsOwnedBy(SteamId k)
--------------------------------------------------
Класс: Steamworks.Data.LobbyQuery
Наследуется от: ValueType
Поля:
  Nullable`1<LobbyDistanceFilter> distance
  Dictionary`2<string, string> stringFilters
  List`1<NumericalFilter> numericalFilters
  Dictionary`2<string, int> nearValFilters
  Nullable`1<int> slotsAvailable
  Nullable`1<int> maxResults
Свойства:
Методы:
  LobbyQuery FilterDistanceClose()
  LobbyQuery FilterDistanceFar()
  LobbyQuery FilterDistanceWorldwide()
  LobbyQuery WithKeyValue(string key, string value)
  LobbyQuery WithLower(string key, int value)
  LobbyQuery WithHigher(string key, int value)
  LobbyQuery WithEqual(string key, int value)
  LobbyQuery WithNotEqual(string key, int value)
  void AddNumericalFilter(string key, int value, LobbyComparison compare)
  LobbyQuery OrderByNear(string key, int value)
  LobbyQuery WithSlotsAvailable(int minSlots)
  LobbyQuery WithMaxResults(int max)
  void ApplyFilters()
  Task`1<Lobby[]> RequestAsync()
--------------------------------------------------
Класс: Steamworks.Data.NumericalFilter
Наследуется от: ValueType
Поля:
  string <Key>k__BackingField
  int <Value>k__BackingField
  LobbyComparison <Comparer>k__BackingField
Свойства:
  string Key
  int Value
  LobbyComparison Comparer
Методы:
  string get_Key()
  void set_Key(string value)
  int get_Value()
  void set_Value(int value)
  LobbyComparison get_Comparer()
  void set_Comparer(LobbyComparison value)
  void .ctor(string k, int v, LobbyComparison c)
--------------------------------------------------
Класс: Steamworks.Data.OutgoingPacket
Наследуется от: ValueType
Поля:
  UInt32 <Address>k__BackingField
  ushort <Port>k__BackingField
  Byte[] <Data>k__BackingField
  int <Size>k__BackingField
Свойства:
  UInt32 Address
  ushort Port
  Byte[] Data
  int Size
Методы:
  UInt32 get_Address()
  void set_Address(UInt32 value)
  ushort get_Port()
  void set_Port(ushort value)
  Byte[] get_Data()
  void set_Data(Byte[] value)
  int get_Size()
  void set_Size(int value)
--------------------------------------------------
Класс: Steamworks.Data.P2Packet
Наследуется от: ValueType
Поля:
  SteamId SteamId
  Byte[] Data
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.RemotePlaySession
Наследуется от: ValueType
Поля:
  UInt32 <Id>k__BackingField
Свойства:
  UInt32 Id
  bool IsValid
  SteamId SteamId
  string ClientName
  SteamDeviceFormFactor FormFactor
Методы:
  UInt32 get_Id()
  void set_Id(UInt32 value)
  string ToString()
  RemotePlaySession op_Implicit(UInt32 value)
  UInt32 op_Implicit(RemotePlaySession value)
  bool get_IsValid()
  SteamId get_SteamId()
  string get_ClientName()
  SteamDeviceFormFactor get_FormFactor()
--------------------------------------------------
Класс: Steamworks.Data.Screenshot
Наследуется от: ValueType
Поля:
  ScreenshotHandle Value
Свойства:
Методы:
  bool TagUser(SteamId user)
  bool SetLocation(string location)
  bool TagPublishedFile(PublishedFileId file)
--------------------------------------------------
Класс: Steamworks.Data.ServerInfo
Наследуется от: ValueType
Поля:
  string <Name>k__BackingField
  int <Ping>k__BackingField
  string <GameDir>k__BackingField
  string <Map>k__BackingField
  string <Description>k__BackingField
  UInt32 <AppId>k__BackingField
  int <Players>k__BackingField
  int <MaxPlayers>k__BackingField
  int <BotPlayers>k__BackingField
  bool <Passworded>k__BackingField
  bool <Secure>k__BackingField
  UInt32 <LastTimePlayed>k__BackingField
  int <Version>k__BackingField
  string <TagString>k__BackingField
  ulong <SteamId>k__BackingField
  UInt32 <AddressRaw>k__BackingField
  IPAddress <Address>k__BackingField
  int <ConnectionPort>k__BackingField
  int <QueryPort>k__BackingField
  String[] _tags
  UInt32 k_unFavoriteFlagNone
  UInt32 k_unFavoriteFlagFavorite
  UInt32 k_unFavoriteFlagHistory
Свойства:
  string Name
  int Ping
  string GameDir
  string Map
  string Description
  UInt32 AppId
  int Players
  int MaxPlayers
  int BotPlayers
  bool Passworded
  bool Secure
  UInt32 LastTimePlayed
  int Version
  string TagString
  ulong SteamId
  UInt32 AddressRaw
  IPAddress Address
  int ConnectionPort
  int QueryPort
  String[] Tags
Методы:
  string get_Name()
  void set_Name(string value)
  int get_Ping()
  void set_Ping(int value)
  string get_GameDir()
  void set_GameDir(string value)
  string get_Map()
  void set_Map(string value)
  string get_Description()
  void set_Description(string value)
  UInt32 get_AppId()
  void set_AppId(UInt32 value)
  int get_Players()
  void set_Players(int value)
  int get_MaxPlayers()
  void set_MaxPlayers(int value)
  int get_BotPlayers()
  void set_BotPlayers(int value)
  bool get_Passworded()
  void set_Passworded(bool value)
  bool get_Secure()
  void set_Secure(bool value)
  UInt32 get_LastTimePlayed()
  void set_LastTimePlayed(UInt32 value)
  int get_Version()
  void set_Version(int value)
  string get_TagString()
  void set_TagString(string value)
  ulong get_SteamId()
  void set_SteamId(ulong value)
  UInt32 get_AddressRaw()
  void set_AddressRaw(UInt32 value)
  IPAddress get_Address()
  void set_Address(IPAddress value)
  int get_ConnectionPort()
  void set_ConnectionPort(int value)
  int get_QueryPort()
  void set_QueryPort(int value)
  String[] get_Tags()
  ServerInfo From(gameserveritem_t item)
  void .ctor(UInt32 ip, ushort cport, ushort qport, UInt32 timeplayed)
  void AddToHistory()
  Task`1<Dictionary`2<string, string>> QueryRulesAsync()
  void RemoveFromHistory()
  void AddToFavourites()
  void RemoveFromFavourites()
  bool Equals(ServerInfo other)
  int GetHashCode()
--------------------------------------------------
Класс: Steamworks.Data.Stat
Наследуется от: ValueType
Поля:
  string <Name>k__BackingField
  SteamId <UserId>k__BackingField
Свойства:
  string Name
  SteamId UserId
Методы:
  string get_Name()
  void set_Name(string value)
  SteamId get_UserId()
  void set_UserId(SteamId value)
  void .ctor(string name)
  void .ctor(string name, SteamId user)
  void LocalUserOnly(string caller)
  double GetGlobalFloat()
  long GetGlobalInt()
  Task`1<Int64[]> GetGlobalIntDaysAsync(int days)
  Task`1<Double[]> GetGlobalFloatDays(int days)
  float GetFloat()
  int GetInt()
  bool Set(int val)
  bool Set(float val)
  bool Add(int val)
  bool Add(float val)
  bool UpdateAverageRate(float count, float sessionlength)
  bool Store()
--------------------------------------------------
Класс: Steamworks.Data.Ugc
Наследуется от: ValueType
Поля:
  UGCHandle_t Handle
Свойства:
Методы:
--------------------------------------------------
Класс: Steamworks.Data.UgcAdditionalPreview
Наследуется от: ValueType
Поля:
  string <UrlOrVideoID>k__BackingField
  string <OriginalFileName>k__BackingField
  ItemPreviewType <ItemPreviewType>k__BackingField
Свойства:
  string UrlOrVideoID
  string OriginalFileName
  ItemPreviewType ItemPreviewType
Методы:
  void .ctor(string urlOrVideoID, string originalFileName, ItemPreviewType itemPreviewType)
  string get_UrlOrVideoID()
  void set_UrlOrVideoID(string value)
  string get_OriginalFileName()
  void set_OriginalFileName(string value)
  ItemPreviewType get_ItemPreviewType()
  void set_ItemPreviewType(ItemPreviewType value)
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=5 B1A9AA820F353E1BEF1F7D40CD3F58447AA91D123BC2539918BC70F8A66E75B9
Свойства:
Методы:
  UInt32 ComputeStringHash(string s)
--------------------------------------------------
