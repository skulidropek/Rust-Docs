Сборка: UnityEngine.TextCoreTextEngineModule.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.Character
Наследуется от: TextElement
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(UInt32 unicode, Glyph glyph)
  void .ctor(UInt32 unicode, FontAsset fontAsset, Glyph glyph)
  void .ctor(UInt32 unicode, UInt32 glyphIndex)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.ColorUtilities
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CompareColors(Color32 a, Color32 b)
  bool CompareColorsRgb(Color32 a, Color32 b)
  bool CompareColors(Color a, Color b)
  bool CompareColorsRgb(Color a, Color b)
  Color32 MultiplyColors(Color32 c1, Color32 c2)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FastAction
Наследуется от: object
Поля:
  LinkedList`1<Action> delegates
  Dictionary`2<Action, LinkedListNode`1<Action>> lookup
Свойства:
Методы:
  void Add(Action rhs)
  void Remove(Action rhs)
  void Call()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FastAction`1
Наследуется от: object
Поля:
  LinkedList`1<Action`1<A>> delegates
  Dictionary`2<Action`1<A>, LinkedListNode`1<Action`1<A>>> lookup
Свойства:
Методы:
  void Add(Action`1<A> rhs)
  void Remove(Action`1<A> rhs)
  void Call(A a)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FastAction`2
Наследуется от: object
Поля:
  LinkedList`1<Action`2<A, B>> delegates
  Dictionary`2<Action`2<A, B>, LinkedListNode`1<Action`2<A, B>>> lookup
Свойства:
Методы:
  void Add(Action`2<A, B> rhs)
  void Remove(Action`2<A, B> rhs)
  void Call(A a, B b)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FastAction`3
Наследуется от: object
Поля:
  LinkedList`1<Action`3<A, B, C>> delegates
  Dictionary`2<Action`3<A, B, C>, LinkedListNode`1<Action`3<A, B, C>>> lookup
Свойства:
Методы:
  void Add(Action`3<A, B, C> rhs)
  void Remove(Action`3<A, B, C> rhs)
  void Call(A a, B b, C c)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextFontWeight
Наследуется от: Enum
Поля:
  int value__
  TextFontWeight Thin
  TextFontWeight ExtraLight
  TextFontWeight Light
  TextFontWeight Regular
  TextFontWeight Medium
  TextFontWeight SemiBold
  TextFontWeight Bold
  TextFontWeight Heavy
  TextFontWeight Black
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontWeightPair
Наследуется от: ValueType
Поля:
  FontAsset regularTypeface
  FontAsset italicTypeface
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontAssetCreationEditorSettings
Наследуется от: ValueType
Поля:
  string sourceFontFileGUID
  int faceIndex
  int pointSizeSamplingMode
  int pointSize
  int padding
  int packingMode
  int atlasWidth
  int atlasHeight
  int characterSetSelectionMode
  string characterSequence
  string referencedFontAssetGUID
  string referencedTextAssetGUID
  int fontStyle
  float fontStyleModifier
  int renderMode
  bool includeFontFeatures
Свойства:
Методы:
  void .ctor(string sourceFontFileGUID, int pointSize, int pointSizeSamplingMode, int padding, int packingMode, int atlasWidth, int atlasHeight, int characterSelectionMode, string characterSet, int renderMode)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.AtlasPopulationMode
Наследуется от: Enum
Поля:
  int value__
  AtlasPopulationMode Static
  AtlasPopulationMode Dynamic
  AtlasPopulationMode DynamicOS
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontAsset
Наследуется от: TextAsset
Поля:
  string m_SourceFontFileGUID
  Font m_SourceFontFile
  AtlasPopulationMode m_AtlasPopulationMode
  bool InternalDynamicOS
  FaceInfo m_FaceInfo
  int m_FamilyNameHashCode
  int m_StyleNameHashCode
  FontWeightPair[] m_FontWeightTable
  List`1<Glyph> m_GlyphTable
  Dictionary`2<UInt32, Glyph> m_GlyphLookupDictionary
  List`1<Character> m_CharacterTable
  Dictionary`2<UInt32, Character> m_CharacterLookupDictionary
  Texture2D m_AtlasTexture
  Texture2D[] m_AtlasTextures
  int m_AtlasTextureIndex
  bool m_IsMultiAtlasTexturesEnabled
  bool m_ClearDynamicDataOnBuild
  int m_AtlasWidth
  int m_AtlasHeight
  int m_AtlasPadding
  GlyphRenderMode m_AtlasRenderMode
  List`1<GlyphRect> m_UsedGlyphRects
  List`1<GlyphRect> m_FreeGlyphRects
  FontFeatureTable m_FontFeatureTable
  List`1<FontAsset> m_FallbackFontAssetTable
  FontAssetCreationEditorSettings m_fontAssetCreationEditorSettings
  float m_RegularStyleWeight
  float m_RegularStyleSpacing
  float m_BoldStyleWeight
  float m_BoldStyleSpacing
  byte m_ItalicStyleSlant
  byte m_TabMultiple
  bool IsFontAssetLookupTablesDirty
  ProfilerMarker k_ReadFontAssetDefinitionMarker
  ProfilerMarker k_AddSynthesizedCharactersMarker
  ProfilerMarker k_TryAddCharacterMarker
  ProfilerMarker k_TryAddCharactersMarker
  ProfilerMarker k_UpdateGlyphAdjustmentRecordsMarker
  ProfilerMarker k_ClearFontAssetDataMarker
  ProfilerMarker k_UpdateFontAssetDataMarker
  string s_DefaultMaterialSuffix
  HashSet`1<int> k_SearchedFontAssetLookup
  List`1<FontAsset> k_FontAssets_FontFeaturesUpdateQueue
  HashSet`1<int> k_FontAssets_FontFeaturesUpdateQueueLookup
  List`1<Texture2D> k_FontAssets_AtlasTexturesUpdateQueue
  HashSet`1<int> k_FontAssets_AtlasTexturesUpdateQueueLookup
  List`1<Glyph> m_GlyphsToRender
  List`1<Glyph> m_GlyphsRendered
  List`1<UInt32> m_GlyphIndexList
  List`1<UInt32> m_GlyphIndexListNewlyAdded
  List`1<UInt32> m_GlyphsToAdd
  HashSet`1<UInt32> m_GlyphsToAddLookup
  List`1<Character> m_CharactersToAdd
  HashSet`1<UInt32> m_CharactersToAddLookup
  List`1<UInt32> s_MissingCharacterList
  HashSet`1<UInt32> m_MissingUnicodesFromFontFile
  UInt32[] k_GlyphIndexArray
Свойства:
  Font sourceFontFile
  AtlasPopulationMode atlasPopulationMode
  FaceInfo faceInfo
  int familyNameHashCode
  int styleNameHashCode
  FontWeightPair[] fontWeightTable
  List`1<Glyph> glyphTable
  Dictionary`2<UInt32, Glyph> glyphLookupTable
  List`1<Character> characterTable
  Dictionary`2<UInt32, Character> characterLookupTable
  Texture2D atlasTexture
  Texture2D[] atlasTextures
  int atlasTextureCount
  bool isMultiAtlasTexturesEnabled
  bool clearDynamicDataOnBuild
  int atlasWidth
  int atlasHeight
  int atlasPadding
  GlyphRenderMode atlasRenderMode
  List`1<GlyphRect> usedGlyphRects
  List`1<GlyphRect> freeGlyphRects
  FontFeatureTable fontFeatureTable
  List`1<FontAsset> fallbackFontAssetTable
  FontAssetCreationEditorSettings fontAssetCreationEditorSettings
  float regularStyleWeight
  float regularStyleSpacing
  float boldStyleWeight
  float boldStyleSpacing
  byte italicStyleSlant
  byte tabMultiple
Методы:
  Font get_sourceFontFile()
  void set_sourceFontFile(Font value)
  AtlasPopulationMode get_atlasPopulationMode()
  void set_atlasPopulationMode(AtlasPopulationMode value)
  FaceInfo get_faceInfo()
  void set_faceInfo(FaceInfo value)
  int get_familyNameHashCode()
  void set_familyNameHashCode(int value)
  int get_styleNameHashCode()
  void set_styleNameHashCode(int value)
  FontWeightPair[] get_fontWeightTable()
  void set_fontWeightTable(FontWeightPair[] value)
  List`1<Glyph> get_glyphTable()
  void set_glyphTable(List`1<Glyph> value)
  Dictionary`2<UInt32, Glyph> get_glyphLookupTable()
  List`1<Character> get_characterTable()
  void set_characterTable(List`1<Character> value)
  Dictionary`2<UInt32, Character> get_characterLookupTable()
  Texture2D get_atlasTexture()
  Texture2D[] get_atlasTextures()
  void set_atlasTextures(Texture2D[] value)
  int get_atlasTextureCount()
  bool get_isMultiAtlasTexturesEnabled()
  void set_isMultiAtlasTexturesEnabled(bool value)
  bool get_clearDynamicDataOnBuild()
  void set_clearDynamicDataOnBuild(bool value)
  int get_atlasWidth()
  void set_atlasWidth(int value)
  int get_atlasHeight()
  void set_atlasHeight(int value)
  int get_atlasPadding()
  void set_atlasPadding(int value)
  GlyphRenderMode get_atlasRenderMode()
  void set_atlasRenderMode(GlyphRenderMode value)
  List`1<GlyphRect> get_usedGlyphRects()
  void set_usedGlyphRects(List`1<GlyphRect> value)
  List`1<GlyphRect> get_freeGlyphRects()
  void set_freeGlyphRects(List`1<GlyphRect> value)
  FontFeatureTable get_fontFeatureTable()
  void set_fontFeatureTable(FontFeatureTable value)
  List`1<FontAsset> get_fallbackFontAssetTable()
  void set_fallbackFontAssetTable(List`1<FontAsset> value)
  FontAssetCreationEditorSettings get_fontAssetCreationEditorSettings()
  void set_fontAssetCreationEditorSettings(FontAssetCreationEditorSettings value)
  float get_regularStyleWeight()
  void set_regularStyleWeight(float value)
  float get_regularStyleSpacing()
  void set_regularStyleSpacing(float value)
  float get_boldStyleWeight()
  void set_boldStyleWeight(float value)
  float get_boldStyleSpacing()
  void set_boldStyleSpacing(float value)
  byte get_italicStyleSlant()
  void set_italicStyleSlant(byte value)
  byte get_tabMultiple()
  void set_tabMultiple(byte value)
  FontAsset CreateFontAsset(string familyName, string styleName, int pointSize)
  FontAsset CreateFontAsset(string fontFilePath, int faceIndex, int samplingPointSize, int atlasPadding, GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport)
  FontAsset CreateFontAsset(Font font)
  FontAsset CreateFontAsset(Font font, int samplingPointSize, int atlasPadding, GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport)
  FontAsset CreateFontAsset(Font font, int faceIndex, int samplingPointSize, int atlasPadding, GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport)
  FontAsset CreateFontAssetInstance(Font font, int atlasPadding, GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport)
  void Awake()
  void OnDestroy()
  void ReadFontAssetDefinition()
  void InitializeDictionaryLookupTables()
  void InitializeGlyphLookupDictionary()
  void InitializeCharacterLookupDictionary()
  void InitializeGlyphPaidAdjustmentRecordsLookupDictionary()
  void AddSynthesizedCharactersAndFaceMetrics()
  void AddSynthesizedCharacter(UInt32 unicode, bool isFontFaceLoaded, bool addImmediately)
  void AddCharacterToLookupCache(UInt32 unicode, Character character)
  FontEngineError LoadFontFace()
  void SortCharacterTable()
  void SortGlyphTable()
  void SortFontFeatureTable()
  void SortAllTables()
  bool HasCharacter(int character)
  bool HasCharacter(char character, bool searchFallbacks, bool tryAddCharacter)
  bool HasCharacter_Internal(UInt32 character, bool searchFallbacks, bool tryAddCharacter)
  bool HasCharacters(string text, List`1& missingCharacters)
  bool HasCharacters(string text, UInt32[]& missingCharacters, bool searchFallbacks, bool tryAddCharacter)
  bool HasCharacters(string text)
  string GetCharacters(FontAsset fontAsset)
  Int32[] GetCharactersArray(FontAsset fontAsset)
  UInt32 GetGlyphIndex(UInt32 unicode)
  void RegisterFontAssetForFontFeatureUpdate(FontAsset fontAsset)
  void UpdateFontFeaturesForFontAssetsInQueue()
  void RegisterAtlasTextureForApply(Texture2D texture)
  void UpdateAtlasTexturesInQueue()
  void UpdateFontAssetInUpdateQueue()
  bool TryAddCharacters(UInt32[] unicodes, bool includeFontFeatures)
  bool TryAddCharacters(UInt32[] unicodes, UInt32[]& missingUnicodes, bool includeFontFeatures)
  bool TryAddCharacters(string characters, bool includeFontFeatures)
  bool TryAddCharacters(string characters, String& missingCharacters, bool includeFontFeatures)
  bool TryAddCharacterInternal(UInt32 unicode, Character& character, bool shouldGetFontFeatures)
  bool TryGetCharacter_and_QueueRenderToTexture(UInt32 unicode, Character& character, bool shouldGetFontFeatures)
  void TryAddGlyphsToAtlasTextures()
  bool TryAddGlyphsToNewAtlasTexture()
  void SetupNewAtlasTexture()
  void UpdateAtlasTexture()
  void UpdateGlyphAdjustmentRecords()
  void UpdateGlyphAdjustmentRecords(UInt32[] glyphIndexes)
  void UpdateGlyphAdjustmentRecords(List`1<UInt32> glyphIndexes)
  void UpdateGlyphAdjustmentRecords(List`1<UInt32> newGlyphIndexes, List`1<UInt32> allGlyphIndexes)
  void CopyListDataToArray(List`1<T> srcList, T[]& dstArray)
  void ClearFontAssetData(bool setAtlasSizeToZero)
  void ClearFontAssetDataInternal()
  void UpdateFontAssetData()
  void ClearFontAssetTables()
  void ClearAtlasTextures(bool setAtlasSizeToZero)
  void DestroyAtlasTextures()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontAssetUtilities
Наследуется от: object
Поля:
  HashSet`1<int> k_SearchedAssets
Свойства:
Методы:
  Character GetCharacterFromFontAsset(UInt32 unicode, FontAsset sourceFontAsset, bool includeFallbacks, FontStyles fontStyle, TextFontWeight fontWeight, Boolean& isAlternativeTypeface)
  Character GetCharacterFromFontAsset_Internal(UInt32 unicode, FontAsset sourceFontAsset, bool includeFallbacks, FontStyles fontStyle, TextFontWeight fontWeight, Boolean& isAlternativeTypeface)
  Character GetCharacterFromFontAssets(UInt32 unicode, FontAsset sourceFontAsset, List`1<FontAsset> fontAssets, bool includeFallbacks, FontStyles fontStyle, TextFontWeight fontWeight, Boolean& isAlternativeTypeface)
  SpriteCharacter GetSpriteCharacterFromSpriteAsset(UInt32 unicode, SpriteAsset spriteAsset, bool includeFallbacks)
  SpriteCharacter GetSpriteCharacterFromSpriteAsset_Internal(UInt32 unicode, SpriteAsset spriteAsset, bool includeFallbacks)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontFeatureTable
Наследуется от: object
Поля:
  List`1<GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecords
  Dictionary`2<UInt32, GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecordLookup
Свойства:
  List`1<GlyphPairAdjustmentRecord> glyphPairAdjustmentRecords
Методы:
  List`1<GlyphPairAdjustmentRecord> get_glyphPairAdjustmentRecords()
  void set_glyphPairAdjustmentRecords(List`1<GlyphPairAdjustmentRecord> value)
  void .ctor()
  void SortGlyphPairAdjustmentRecords()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.Extents
Наследуется от: ValueType
Поля:
  Vector2 min
  Vector2 max
Свойства:
Методы:
  void .ctor(Vector2 min, Vector2 max)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.LineInfo
Наследуется от: ValueType
Поля:
  int controlCharacterCount
  int characterCount
  int visibleCharacterCount
  int spaceCount
  int visibleSpaceCount
  int wordCount
  int firstCharacterIndex
  int firstVisibleCharacterIndex
  int lastCharacterIndex
  int lastVisibleCharacterIndex
  float length
  float lineHeight
  float ascender
  float baseline
  float descender
  float maxAdvance
  float width
  float marginLeft
  float marginRight
  TextAlignment alignment
  Extents lineExtents
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.LinkInfo
Наследуется от: ValueType
Поля:
  int hashCode
  int linkIdFirstCharacterIndex
  int linkIdLength
  int linkTextfirstCharacterIndex
  int linkTextLength
  Char[] linkId
Свойства:
Методы:
  void SetLinkId(Char[] text, int startIndex, int length)
  string GetLinkText(TextInfo textInfo)
  string GetLinkId()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.MaterialManager
Наследуется от: object
Поля:
  Dictionary`2<long, Material> s_FallbackMaterials
Свойства:
Методы:
  Material GetFallbackMaterial(Material sourceMaterial, Material targetMaterial)
  Material GetFallbackMaterial(FontAsset fontAsset, Material sourceMaterial, int atlasIndex)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.MaterialReference
Наследуется от: ValueType
Поля:
  int index
  FontAsset fontAsset
  SpriteAsset spriteAsset
  Material material
  bool isDefaultMaterial
  bool isFallbackMaterial
  Material fallbackMaterial
  float padding
  int referenceCount
Свойства:
Методы:
  void .ctor(int index, FontAsset fontAsset, SpriteAsset spriteAsset, Material material, float padding)
  bool Contains(MaterialReference[] materialReferences, FontAsset fontAsset)
  int AddMaterialReference(Material material, FontAsset fontAsset, MaterialReference[]& materialReferences, Dictionary`2<int, int> materialReferenceIndexLookup)
  int AddMaterialReference(Material material, SpriteAsset spriteAsset, MaterialReference[]& materialReferences, Dictionary`2<int, int> materialReferenceIndexLookup)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.MaterialReferenceManager
Наследуется от: object
Поля:
  MaterialReferenceManager s_Instance
  Dictionary`2<int, Material> m_FontMaterialReferenceLookup
  Dictionary`2<int, FontAsset> m_FontAssetReferenceLookup
  Dictionary`2<int, SpriteAsset> m_SpriteAssetReferenceLookup
  Dictionary`2<int, TextColorGradient> m_ColorGradientReferenceLookup
Свойства:
  MaterialReferenceManager instance
Методы:
  MaterialReferenceManager get_instance()
  void AddFontAsset(FontAsset fontAsset)
  void AddFontAssetInternal(FontAsset fontAsset)
  void AddSpriteAsset(SpriteAsset spriteAsset)
  void AddSpriteAssetInternal(SpriteAsset spriteAsset)
  void AddSpriteAsset(int hashCode, SpriteAsset spriteAsset)
  void AddSpriteAssetInternal(int hashCode, SpriteAsset spriteAsset)
  void AddFontMaterial(int hashCode, Material material)
  void AddFontMaterialInternal(int hashCode, Material material)
  void AddColorGradientPreset(int hashCode, TextColorGradient spriteAsset)
  void AddColorGradientPreset_Internal(int hashCode, TextColorGradient spriteAsset)
  bool Contains(FontAsset font)
  bool Contains(SpriteAsset sprite)
  bool TryGetFontAsset(int hashCode, FontAsset& fontAsset)
  bool TryGetFontAssetInternal(int hashCode, FontAsset& fontAsset)
  bool TryGetSpriteAsset(int hashCode, SpriteAsset& spriteAsset)
  bool TryGetSpriteAssetInternal(int hashCode, SpriteAsset& spriteAsset)
  bool TryGetColorGradientPreset(int hashCode, TextColorGradient& gradientPreset)
  bool TryGetColorGradientPresetInternal(int hashCode, TextColorGradient& gradientPreset)
  bool TryGetMaterial(int hashCode, Material& material)
  bool TryGetMaterialInternal(int hashCode, Material& material)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.VertexSortingOrder
Наследуется от: Enum
Поля:
  int value__
  VertexSortingOrder Normal
  VertexSortingOrder Reverse
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.MeshInfo
Наследуется от: ValueType
Поля:
  Color32 k_DefaultColor
  int vertexCount
  Vector3[] vertices
  Vector2[] uvs0
  Vector2[] uvs2
  Color32[] colors32
  Int32[] triangles
  Material material
Свойства:
Методы:
  void .ctor(int size)
  void ResizeMeshInfo(int size)
  void Clear(bool uploadChanges)
  void ClearUnusedVertices()
  void ClearUnusedVertices(int startIndex)
  void SortGeometry(VertexSortingOrder order)
  void SwapVertexData(int src, int dst)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.SpriteAsset
Наследуется от: TextAsset
Поля:
  Dictionary`2<int, int> m_NameLookup
  Dictionary`2<UInt32, int> m_GlyphIndexLookup
  FaceInfo m_FaceInfo
  Texture m_SpriteAtlasTexture
  List`1<SpriteCharacter> m_SpriteCharacterTable
  Dictionary`2<UInt32, SpriteCharacter> m_SpriteCharacterLookup
  List`1<SpriteGlyph> m_SpriteGlyphTable
  Dictionary`2<UInt32, SpriteGlyph> m_SpriteGlyphLookup
  List`1<SpriteAsset> fallbackSpriteAssets
  bool m_IsSpriteAssetLookupTablesDirty
  HashSet`1<int> k_searchedSpriteAssets
Свойства:
  FaceInfo faceInfo
  Texture spriteSheet
  List`1<SpriteCharacter> spriteCharacterTable
  Dictionary`2<UInt32, SpriteCharacter> spriteCharacterLookupTable
  List`1<SpriteGlyph> spriteGlyphTable
Методы:
  FaceInfo get_faceInfo()
  void set_faceInfo(FaceInfo value)
  Texture get_spriteSheet()
  void set_spriteSheet(Texture value)
  List`1<SpriteCharacter> get_spriteCharacterTable()
  void set_spriteCharacterTable(List`1<SpriteCharacter> value)
  Dictionary`2<UInt32, SpriteCharacter> get_spriteCharacterLookupTable()
  void set_spriteCharacterLookupTable(Dictionary`2<UInt32, SpriteCharacter> value)
  List`1<SpriteGlyph> get_spriteGlyphTable()
  void set_spriteGlyphTable(List`1<SpriteGlyph> value)
  void Awake()
  void UpdateLookupTables()
  int GetSpriteIndexFromHashcode(int hashCode)
  int GetSpriteIndexFromUnicode(UInt32 unicode)
  int GetSpriteIndexFromName(string name)
  SpriteAsset SearchForSpriteByUnicode(SpriteAsset spriteAsset, UInt32 unicode, bool includeFallbacks, Int32& spriteIndex)
  SpriteAsset SearchForSpriteByUnicodeInternal(List`1<SpriteAsset> spriteAssets, UInt32 unicode, bool includeFallbacks, Int32& spriteIndex)
  SpriteAsset SearchForSpriteByUnicodeInternal(SpriteAsset spriteAsset, UInt32 unicode, bool includeFallbacks, Int32& spriteIndex)
  SpriteAsset SearchForSpriteByHashCode(SpriteAsset spriteAsset, int hashCode, bool includeFallbacks, Int32& spriteIndex, TextSettings textSettings)
  SpriteAsset SearchForSpriteByHashCodeInternal(List`1<SpriteAsset> spriteAssets, int hashCode, bool searchFallbacks, Int32& spriteIndex)
  SpriteAsset SearchForSpriteByHashCodeInternal(SpriteAsset spriteAsset, int hashCode, bool searchFallbacks, Int32& spriteIndex)
  void SortGlyphTable()
  void SortCharacterTable()
  void SortGlyphAndCharacterTables()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.SpriteCharacter
Наследуется от: TextElement
Поля:
  string m_Name
  int m_HashCode
Свойства:
  string name
  int hashCode
Методы:
  string get_name()
  void set_name(string value)
  int get_hashCode()
  void .ctor()
  void .ctor(UInt32 unicode, SpriteGlyph glyph)
  void .ctor(UInt32 unicode, SpriteAsset spriteAsset, SpriteGlyph glyph)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.SpriteGlyph
Наследуется от: Glyph
Поля:
  Sprite sprite
Свойства:
Методы:
  void .ctor()
  void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex)
  void .ctor(UInt32 index, GlyphMetrics metrics, GlyphRect glyphRect, float scale, int atlasIndex, Sprite sprite)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextAsset
Наследуется от: ScriptableObject
Поля:
  string m_Version
  int m_InstanceID
  int m_HashCode
  Material m_Material
  int m_MaterialHashCode
Свойства:
  string version
  int instanceID
  int hashCode
  Material material
  int materialHashCode
Методы:
  string get_version()
  void set_version(string value)
  int get_instanceID()
  int get_hashCode()
  void set_hashCode(int value)
  Material get_material()
  void set_material(Material value)
  int get_materialHashCode()
  void set_materialHashCode(int value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.ColorGradientMode
Наследуется от: Enum
Поля:
  int value__
  ColorGradientMode Single
  ColorGradientMode HorizontalGradient
  ColorGradientMode VerticalGradient
  ColorGradientMode FourCornersGradient
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextColorGradient
Наследуется от: ScriptableObject
Поля:
  ColorGradientMode colorMode
  Color topLeft
  Color topRight
  Color bottomLeft
  Color bottomRight
  ColorGradientMode k_DefaultColorMode
  Color k_DefaultColor
Свойства:
Методы:
  void .ctor()
  void .ctor(Color color)
  void .ctor(Color color0, Color color1, Color color2, Color color3)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextElementType
Наследуется от: Enum
Поля:
  byte value__
  TextElementType Character
  TextElementType Sprite
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextElement
Наследуется от: object
Поля:
  TextElementType m_ElementType
  UInt32 m_Unicode
  TextAsset m_TextAsset
  Glyph m_Glyph
  UInt32 m_GlyphIndex
  float m_Scale
Свойства:
  TextElementType elementType
  UInt32 unicode
  TextAsset textAsset
  Glyph glyph
  UInt32 glyphIndex
  float scale
Методы:
  TextElementType get_elementType()
  UInt32 get_unicode()
  void set_unicode(UInt32 value)
  TextAsset get_textAsset()
  void set_textAsset(TextAsset value)
  Glyph get_glyph()
  void set_glyph(Glyph value)
  UInt32 get_glyphIndex()
  void set_glyphIndex(UInt32 value)
  float get_scale()
  void set_scale(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextVertex
Наследуется от: ValueType
Поля:
  Vector3 position
  Vector2 uv
  Vector2 uv2
  Vector2 uv4
  Color32 color
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextElementInfo
Наследуется от: ValueType
Поля:
  char character
  int index
  TextElementType elementType
  TextElement textElement
  FontAsset fontAsset
  SpriteAsset spriteAsset
  int spriteIndex
  Material material
  int materialReferenceIndex
  bool isUsingAlternateTypeface
  float pointSize
  int lineNumber
  int pageNumber
  int vertexIndex
  TextVertex vertexTopLeft
  TextVertex vertexBottomLeft
  TextVertex vertexTopRight
  TextVertex vertexBottomRight
  Vector3 topLeft
  Vector3 bottomLeft
  Vector3 topRight
  Vector3 bottomRight
  float origin
  float ascender
  float baseLine
  float descender
  float xAdvance
  float aspectRatio
  float scale
  Color32 color
  Color32 underlineColor
  Color32 strikethroughColor
  Color32 highlightColor
  FontStyles style
  bool isVisible
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextEventManager
Наследуется от: object
Поля:
  FastAction`2<bool, Material> MATERIAL_PROPERTY_EVENT
  FastAction`2<bool, Object> FONT_PROPERTY_EVENT
  FastAction`2<bool, Object> SPRITE_ASSET_PROPERTY_EVENT
  FastAction`2<bool, Object> TEXTMESHPRO_PROPERTY_EVENT
  FastAction`3<GameObject, Material, Material> DRAG_AND_DROP_MATERIAL_EVENT
  FastAction`1<bool> TEXT_STYLE_PROPERTY_EVENT
  FastAction`1<Object> COLOR_GRADIENT_PROPERTY_EVENT
  FastAction TMP_SETTINGS_PROPERTY_EVENT
  FastAction RESOURCE_LOAD_EVENT
  FastAction`2<bool, Object> TEXTMESHPRO_UGUI_PROPERTY_EVENT
  FastAction OnPreRenderObject_Event
  FastAction`1<Object> TEXT_CHANGED_EVENT
Свойства:
Методы:
  void ON_PRE_RENDER_OBJECT_CHANGED()
  void ON_MATERIAL_PROPERTY_CHANGED(bool isChanged, Material mat)
  void ON_FONT_PROPERTY_CHANGED(bool isChanged, Object font)
  void ON_SPRITE_ASSET_PROPERTY_CHANGED(bool isChanged, Object obj)
  void ON_TEXTMESHPRO_PROPERTY_CHANGED(bool isChanged, Object obj)
  void ON_DRAG_AND_DROP_MATERIAL_CHANGED(GameObject sender, Material currentMaterial, Material newMaterial)
  void ON_TEXT_STYLE_PROPERTY_CHANGED(bool isChanged)
  void ON_COLOR_GRADIENT_PROPERTY_CHANGED(Object gradient)
  void ON_TEXT_CHANGED(Object obj)
  void ON_TMP_SETTINGS_CHANGED()
  void ON_RESOURCES_LOADED()
  void ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(bool isChanged, Object obj)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextOverflowMode
Наследуется от: Enum
Поля:
  int value__
  TextOverflowMode Overflow
  TextOverflowMode Ellipsis
  TextOverflowMode Masking
  TextOverflowMode Truncate
  TextOverflowMode ScrollRect
  TextOverflowMode Page
  TextOverflowMode Linked
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextureMapping
Наследуется от: Enum
Поля:
  int value__
  TextureMapping Character
  TextureMapping Line
  TextureMapping Paragraph
  TextureMapping MatchAspect
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextGenerationSettings
Наследуется от: object
Поля:
  string text
  Rect screenRect
  Vector4 margins
  float scale
  FontAsset fontAsset
  Material material
  SpriteAsset spriteAsset
  TextStyleSheet styleSheet
  FontStyles fontStyle
  TextSettings textSettings
  TextAlignment textAlignment
  TextOverflowMode overflowMode
  bool wordWrap
  float wordWrappingRatio
  Color color
  TextColorGradient fontColorGradient
  bool tintSprites
  bool overrideRichTextColors
  float fontSize
  bool autoSize
  float fontSizeMin
  float fontSizeMax
  bool enableKerning
  bool richText
  bool isRightToLeft
  bool extraPadding
  bool parseControlCharacters
  float characterSpacing
  float wordSpacing
  float lineSpacing
  float paragraphSpacing
  float lineSpacingMax
  int maxVisibleCharacters
  int maxVisibleWords
  int maxVisibleLines
  int firstVisibleCharacter
  bool useMaxVisibleDescender
  TextFontWeight fontWeight
  int pageToDisplay
  TextureMapping horizontalMapping
  TextureMapping verticalMapping
  float uvLineOffset
  VertexSortingOrder geometrySortingOrder
  bool inverseYAxis
  float charWidthMaxAdj
Свойства:
Методы:
  bool Equals(TextGenerationSettings other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(TextGenerationSettings left, TextGenerationSettings right)
  bool op_Inequality(TextGenerationSettings left, TextGenerationSettings right)
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextGenerator
Наследуется от: object
Поля:
  int k_Tab
  int k_LineFeed
  int k_CarriageReturn
  int k_Space
  int k_DoubleQuotes
  int k_NumberSign
  int k_PercentSign
  int k_SingleQuote
  int k_Plus
  int k_Minus
  int k_Period
  int k_LesserThan
  int k_Equal
  int k_GreaterThan
  int k_Underline
  int k_NoBreakSpace
  int k_SoftHyphen
  int k_HyphenMinus
  int k_FigureSpace
  int k_Hyphen
  int k_NonBreakingHyphen
  int k_ZeroWidthSpace
  int k_NarrowNoBreakSpace
  int k_WordJoiner
  int k_HorizontalEllipsis
  int k_RightSingleQuote
  int k_Square
  int k_HangulJamoStart
  int k_HangulJamoEnd
  int k_CjkStart
  int k_CjkEnd
  int k_HangulJameExtendedStart
  int k_HangulJameExtendedEnd
  int k_HangulSyllablesStart
  int k_HangulSyllablesEnd
  int k_CjkIdeographsStart
  int k_CjkIdeographsEnd
  int k_CjkFormsStart
  int k_CjkFormsEnd
  int k_CjkHalfwidthStart
  int k_CjkHalfwidthEnd
  int k_VerticesMax
  int k_SpritesStart
  float k_FloatUnset
  int k_MaxCharacters
  TextGenerator s_TextGenerator
  Vector3[] m_RectTransformCorners
  float m_MarginWidth
  float m_MarginHeight
  Int32[] m_CharBuffer
  float m_PreferredWidth
  float m_PreferredHeight
  FontAsset m_CurrentFontAsset
  Material m_CurrentMaterial
  int m_CurrentMaterialIndex
  TextProcessingStack`1<MaterialReference> m_MaterialReferenceStack
  float m_Padding
  SpriteAsset m_CurrentSpriteAsset
  int m_TotalCharacterCount
  float m_FontScale
  float m_FontSize
  float m_FontScaleMultiplier
  float m_CurrentFontSize
  TextProcessingStack`1<float> m_SizeStack
  FontStyles m_FontStyleInternal
  FontStyleStack m_FontStyleStack
  TextFontWeight m_FontWeightInternal
  TextProcessingStack`1<TextFontWeight> m_FontWeightStack
  TextAlignment m_LineJustification
  TextProcessingStack`1<TextAlignment> m_LineJustificationStack
  float m_BaselineOffset
  TextProcessingStack`1<float> m_BaselineOffsetStack
  Color32 m_FontColor32
  Color32 m_HtmlColor
  Color32 m_UnderlineColor
  Color32 m_StrikethroughColor
  TextProcessingStack`1<Color32> m_ColorStack
  TextProcessingStack`1<Color32> m_UnderlineColorStack
  TextProcessingStack`1<Color32> m_StrikethroughColorStack
  TextProcessingStack`1<Color32> m_HighlightColorStack
  TextColorGradient m_ColorGradientPreset
  TextProcessingStack`1<TextColorGradient> m_ColorGradientStack
  TextProcessingStack`1<int> m_ActionStack
  bool m_IsFxMatrixSet
  float m_LineOffset
  float m_LineHeight
  float m_CSpacing
  float m_MonoSpacing
  float m_XAdvance
  float m_TagLineIndent
  float m_TagIndent
  TextProcessingStack`1<float> m_IndentStack
  bool m_TagNoParsing
  int m_CharacterCount
  int m_FirstCharacterOfLine
  int m_LastCharacterOfLine
  int m_FirstVisibleCharacterOfLine
  int m_LastVisibleCharacterOfLine
  float m_MaxLineAscender
  float m_MaxLineDescender
  int m_LineNumber
  int m_LineVisibleCharacterCount
  int m_FirstOverflowCharacterIndex
  int m_PageNumber
  float m_MarginLeft
  float m_MarginRight
  float m_Width
  Extents m_MeshExtents
  float m_MaxCapHeight
  float m_MaxAscender
  float m_MaxDescender
  bool m_IsNewPage
  bool m_IsNonBreakingSpace
  WordWrapState m_SavedWordWrapState
  WordWrapState m_SavedLineState
  int m_LoopCountA
  TextElementType m_TextElementType
  bool m_IsParsingText
  int m_SpriteIndex
  Color32 m_SpriteColor
  TextElement m_CachedTextElement
  Color32 m_HighlightColor
  float m_CharWidthAdjDelta
  Matrix4x4 m_FxMatrix
  float m_MaxFontSize
  float m_MinFontSize
  bool m_IsCharacterWrappingEnabled
  float m_StartOfLineAscender
  float m_LineSpacingDelta
  bool m_IsMaskingEnabled
  MaterialReference[] m_MaterialReferences
  int m_SpriteCount
  TextProcessingStack`1<int> m_StyleStack
  int m_SpriteAnimationId
  UInt32[] m_InternalTextParsingBuffer
  RichTextTagAttribute[] m_Attributes
  XmlTagAttribute[] m_XmlAttribute
  Char[] m_RichTextTag
  Dictionary`2<int, int> m_MaterialReferenceIndexLookup
  bool m_IsCalculatingPreferredValues
  SpriteAsset m_DefaultSpriteAsset
  bool m_TintSprite
  SpecialCharacter m_Ellipsis
  SpecialCharacter m_Underline
  bool m_IsUsingBold
  bool m_IsSdfShader
  TextElementInfo[] m_InternalTextElementInfo
  int m_RecursiveCount
Свойства:
Методы:
  TextGenerator GetTextGenerator()
  void GenerateText(TextGenerationSettings settings, TextInfo textInfo)
  Vector2 GetCursorPosition(TextGenerationSettings settings, int index)
  Vector2 GetCursorPosition(TextInfo textInfo, Rect screenRect, int index, bool inverseYAxis)
  float GetPreferredWidth(TextGenerationSettings settings, TextInfo textInfo)
  float GetPreferredHeight(TextGenerationSettings settings, TextInfo textInfo)
  Vector2 GetPreferredValues(TextGenerationSettings settings, TextInfo textInfo)
  void Prepare(TextGenerationSettings generationSettings, TextInfo textInfo)
  void GenerateTextMesh(TextGenerationSettings generationSettings, TextInfo textInfo)
  void SaveWordWrappingState(WordWrapState& state, int index, int count, TextInfo textInfo)
  int RestoreWordWrappingState(WordWrapState& state, TextInfo textInfo)
  bool ValidateRichTextTag(string sourceText, Int32& readIndex, Int32& writeIndex, TextGenerationSettings generationSettings, TextInfo textInfo)
  bool ValidateHtmlTag(Int32[] chars, int startIndex, Int32& endIndex, TextGenerationSettings generationSettings, TextInfo textInfo)
  void SaveGlyphVertexInfo(float padding, float stylePadding, Color32 vertexColor, TextGenerationSettings generationSettings, TextInfo textInfo)
  void SaveSpriteVertexInfo(Color32 vertexColor, TextGenerationSettings generationSettings, TextInfo textInfo)
  void DrawUnderlineMesh(Vector3 start, Vector3 end, Int32& index, float startScale, float endScale, float maxScale, float sdfScale, Color32 underlineColor, TextGenerationSettings generationSettings, TextInfo textInfo)
  void DrawTextHighlight(Vector3 start, Vector3 end, Int32& index, Color32 highlightColor, TextGenerationSettings generationSettings, TextInfo textInfo)
  void ClearMesh(bool updateMesh, TextInfo textInfo)
  void EnableMasking()
  void DisableMasking()
  void SetArraySizes(Int32[] chars, TextGenerationSettings generationSettings, TextInfo textInfo)
  TextElement GetTextElement(TextGenerationSettings generationSettings, UInt32 unicode, FontAsset fontAsset, FontStyles fontStyle, TextFontWeight fontWeight, Boolean& isUsingAlternativeTypeface)
  void ComputeMarginSize(Rect rect, Vector4 margins)
  void GetSpecialCharacters(TextGenerationSettings generationSettings)
  void GetEllipsisSpecialCharacter(TextGenerationSettings generationSettings)
  void GetUnderlineSpecialCharacter(TextGenerationSettings generationSettings)
  float GetPaddingForMaterial(Material material, bool extraPadding)
  float GetPreferredWidthInternal(TextGenerationSettings generationSettings, TextInfo textInfo)
  float GetPreferredHeightInternal(TextGenerationSettings generationSettings, TextInfo textInfo)
  Vector2 GetPreferredValuesInternal(TextGenerationSettings generationSettings, TextInfo textInfo)
  Vector2 CalculatePreferredValues(float defaultFontSize, Vector2 marginSize, bool ignoreTextAutoSizing, TextGenerationSettings generationSettings, TextInfo textInfo)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.HorizontalAlignment
Наследуется от: Enum
Поля:
  int value__
  HorizontalAlignment Left
  HorizontalAlignment Center
  HorizontalAlignment Right
  HorizontalAlignment Justified
  HorizontalAlignment Flush
  HorizontalAlignment Geometry
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.VerticalAlignment
Наследуется от: Enum
Поля:
  int value__
  VerticalAlignment Top
  VerticalAlignment Middle
  VerticalAlignment Bottom
  VerticalAlignment Baseline
  VerticalAlignment Midline
  VerticalAlignment Capline
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextAlignment
Наследуется от: Enum
Поля:
  int value__
  TextAlignment TopLeft
  TextAlignment TopCenter
  TextAlignment TopRight
  TextAlignment TopJustified
  TextAlignment TopFlush
  TextAlignment TopGeoAligned
  TextAlignment MiddleLeft
  TextAlignment MiddleCenter
  TextAlignment MiddleRight
  TextAlignment MiddleJustified
  TextAlignment MiddleFlush
  TextAlignment MiddleGeoAligned
  TextAlignment BottomLeft
  TextAlignment BottomCenter
  TextAlignment BottomRight
  TextAlignment BottomJustified
  TextAlignment BottomFlush
  TextAlignment BottomGeoAligned
  TextAlignment BaselineLeft
  TextAlignment BaselineCenter
  TextAlignment BaselineRight
  TextAlignment BaselineJustified
  TextAlignment BaselineFlush
  TextAlignment BaselineGeoAligned
  TextAlignment MidlineLeft
  TextAlignment MidlineCenter
  TextAlignment MidlineRight
  TextAlignment MidlineJustified
  TextAlignment MidlineFlush
  TextAlignment MidlineGeoAligned
  TextAlignment CaplineLeft
  TextAlignment CaplineCenter
  TextAlignment CaplineRight
  TextAlignment CaplineJustified
  TextAlignment CaplineFlush
  TextAlignment CaplineGeoAligned
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontStyles
Наследуется от: Enum
Поля:
  int value__
  FontStyles Normal
  FontStyles Bold
  FontStyles Italic
  FontStyles Underline
  FontStyles LowerCase
  FontStyles UpperCase
  FontStyles SmallCaps
  FontStyles Strikethrough
  FontStyles Superscript
  FontStyles Subscript
  FontStyles Highlight
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.MeshExtents
Наследуется от: ValueType
Поля:
  Vector2 min
  Vector2 max
Свойства:
Методы:
  void .ctor(Vector2 min, Vector2 max)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.XmlTagAttribute
Наследуется от: ValueType
Поля:
  int nameHashCode
  TagValueType valueType
  int valueStartIndex
  int valueLength
  int valueHashCode
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.RichTextTagAttribute
Наследуется от: ValueType
Поля:
  int nameHashCode
  int valueHashCode
  TagValueType valueType
  int valueStartIndex
  int valueLength
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.WordWrapState
Наследуется от: ValueType
Поля:
  int previousWordBreak
  int totalCharacterCount
  int visibleCharacterCount
  int visibleSpriteCount
  int visibleLinkCount
  int firstCharacterIndex
  int firstVisibleCharacterIndex
  int lastCharacterIndex
  int lastVisibleCharIndex
  int lineNumber
  float maxCapHeight
  float maxAscender
  float maxDescender
  float maxLineAscender
  float maxLineDescender
  float previousLineAscender
  float xAdvance
  float preferredWidth
  float preferredHeight
  float previousLineScale
  int wordCount
  FontStyles fontStyle
  float fontScale
  float fontScaleMultiplier
  float currentFontSize
  float baselineOffset
  float lineOffset
  TextInfo textInfo
  LineInfo lineInfo
  Color32 vertexColor
  Color32 underlineColor
  Color32 strikethroughColor
  Color32 highlightColor
  FontStyleStack basicStyleStack
  TextProcessingStack`1<Color32> colorStack
  TextProcessingStack`1<Color32> underlineColorStack
  TextProcessingStack`1<Color32> strikethroughColorStack
  TextProcessingStack`1<Color32> highlightColorStack
  TextProcessingStack`1<TextColorGradient> colorGradientStack
  TextProcessingStack`1<float> sizeStack
  TextProcessingStack`1<float> indentStack
  TextProcessingStack`1<TextFontWeight> fontWeightStack
  TextProcessingStack`1<int> styleStack
  TextProcessingStack`1<float> baselineStack
  TextProcessingStack`1<int> actionStack
  TextProcessingStack`1<MaterialReference> materialReferenceStack
  TextProcessingStack`1<TextAlignment> lineJustificationStack
  int spriteAnimationId
  FontAsset currentFontAsset
  SpriteAsset currentSpriteAsset
  Material currentMaterial
  int currentMaterialIndex
  Extents meshExtents
  bool tagNoParsing
  bool isNonBreakingSpace
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextGeneratorUtilities
Наследуется от: object
Поля:
  Vector2 largePositiveVector2
  Vector2 largeNegativeVector2
  float largePositiveFloat
  float largeNegativeFloat
Свойства:
Методы:
  bool Approximately(float a, float b)
  Color32 HexCharsToColor(Char[] hexChars, int tagCount)
  Color32 HexCharsToColor(Char[] hexChars, int startIndex, int length)
  int HexToInt(char hex)
  float ConvertToFloat(Char[] chars, int startIndex, int length)
  float ConvertToFloat(Char[] chars, int startIndex, int length, Int32& lastIndex)
  Vector2 PackUV(float x, float y, float scale)
  void StringToCharArray(string sourceText, Int32[]& charBuffer, TextProcessingStack`1& styleStack, TextGenerationSettings generationSettings)
  void ResizeInternalArray(T[]& array)
  void ResizeArray(T[] array)
  bool IsTagName(String& text, string tag, int index)
  bool IsTagName(Int32[]& text, string tag, int index)
  bool ReplaceOpeningStyleTag(Int32[]& sourceText, int srcIndex, Int32& srcOffset, Int32[]& charBuffer, Int32& writeIndex, TextProcessingStack`1& styleStack, TextGenerationSettings& generationSettings)
  bool ReplaceOpeningStyleTag(String& sourceText, int srcIndex, Int32& srcOffset, Int32[]& charBuffer, Int32& writeIndex, TextProcessingStack`1& styleStack, TextGenerationSettings& generationSettings)
  void ReplaceClosingStyleTag(Int32[]& charBuffer, Int32& writeIndex, TextProcessingStack`1& styleStack, TextGenerationSettings& generationSettings)
  TextStyle GetStyle(TextGenerationSettings generationSetting, int hashCode)
  int GetUtf32(string text, int i)
  int GetUtf16(string text, int i)
  int GetTagHashCode(Int32[]& text, int index, Int32& closeIndex)
  int GetTagHashCode(String& text, int index, Int32& closeIndex)
  void FillCharacterVertexBuffers(int i, TextGenerationSettings generationSettings, TextInfo textInfo)
  void FillSpriteVertexBuffers(int i, TextGenerationSettings generationSettings, TextInfo textInfo)
  void AdjustLineOffset(int startIndex, int endIndex, float offset, TextInfo textInfo)
  void ResizeLineExtents(int size, TextInfo textInfo)
  FontStyles LegacyStyleToNewStyle(FontStyle fontStyle)
  TextAlignment LegacyAlignmentToNewAlignment(TextAnchor anchor)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.PageInfo
Наследуется от: ValueType
Поля:
  int firstCharacterIndex
  int lastCharacterIndex
  float ascender
  float baseLine
  float descender
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.WordInfo
Наследуется от: ValueType
Поля:
  int firstCharacterIndex
  int lastCharacterIndex
  int characterCount
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextInfo
Наследуется от: object
Поля:
  Vector2 s_InfinityVectorPositive
  Vector2 s_InfinityVectorNegative
  int characterCount
  int spriteCount
  int spaceCount
  int wordCount
  int linkCount
  int lineCount
  int pageCount
  int materialCount
  TextElementInfo[] textElementInfo
  WordInfo[] wordInfo
  LinkInfo[] linkInfo
  LineInfo[] lineInfo
  PageInfo[] pageInfo
  MeshInfo[] meshInfo
  bool isDirty
Свойства:
Методы:
  void .ctor()
  void Clear()
  void ClearMeshInfo(bool updateMesh)
  void ClearLineInfo()
  void Resize(T[]& array, int size)
  void Resize(T[]& array, int size, bool isBlockAllocated)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.MarkupTag
Наследуется от: Enum
Поля:
  int value__
  MarkupTag BOLD
  MarkupTag SLASH_BOLD
  MarkupTag ITALIC
  MarkupTag SLASH_ITALIC
  MarkupTag UNDERLINE
  MarkupTag SLASH_UNDERLINE
  MarkupTag STRIKETHROUGH
  MarkupTag SLASH_STRIKETHROUGH
  MarkupTag MARK
  MarkupTag SLASH_MARK
  MarkupTag SUBSCRIPT
  MarkupTag SLASH_SUBSCRIPT
  MarkupTag SUPERSCRIPT
  MarkupTag SLASH_SUPERSCRIPT
  MarkupTag COLOR
  MarkupTag SLASH_COLOR
  MarkupTag ALPHA
  MarkupTag A
  MarkupTag SLASH_A
  MarkupTag SIZE
  MarkupTag SLASH_SIZE
  MarkupTag SPRITE
  MarkupTag NO_BREAK
  MarkupTag SLASH_NO_BREAK
  MarkupTag STYLE
  MarkupTag SLASH_STYLE
  MarkupTag FONT
  MarkupTag SLASH_FONT
  MarkupTag SLASH_MATERIAL
  MarkupTag LINK
  MarkupTag SLASH_LINK
  MarkupTag FONT_WEIGHT
  MarkupTag SLASH_FONT_WEIGHT
  MarkupTag NO_PARSE
  MarkupTag SLASH_NO_PARSE
  MarkupTag POSITION
  MarkupTag SLASH_POSITION
  MarkupTag VERTICAL_OFFSET
  MarkupTag SLASH_VERTICAL_OFFSET
  MarkupTag SPACE
  MarkupTag SLASH_SPACE
  MarkupTag PAGE
  MarkupTag SLASH_PAGE
  MarkupTag ALIGN
  MarkupTag SLASH_ALIGN
  MarkupTag WIDTH
  MarkupTag SLASH_WIDTH
  MarkupTag GRADIENT
  MarkupTag SLASH_GRADIENT
  MarkupTag CHARACTER_SPACE
  MarkupTag SLASH_CHARACTER_SPACE
  MarkupTag MONOSPACE
  MarkupTag SLASH_MONOSPACE
  MarkupTag CLASS
  MarkupTag INDENT
  MarkupTag SLASH_INDENT
  MarkupTag LINE_INDENT
  MarkupTag SLASH_LINE_INDENT
  MarkupTag MARGIN
  MarkupTag SLASH_MARGIN
  MarkupTag MARGIN_LEFT
  MarkupTag MARGIN_RIGHT
  MarkupTag LINE_HEIGHT
  MarkupTag SLASH_LINE_HEIGHT
  MarkupTag ACTION
  MarkupTag SLASH_ACTION
  MarkupTag SCALE
  MarkupTag SLASH_SCALE
  MarkupTag ROTATE
  MarkupTag SLASH_ROTATE
  MarkupTag LOWERCASE
  MarkupTag SLASH_LOWERCASE
  MarkupTag ALLCAPS
  MarkupTag SLASH_ALLCAPS
  MarkupTag UPPERCASE
  MarkupTag SLASH_UPPERCASE
  MarkupTag SMALLCAPS
  MarkupTag SLASH_SMALLCAPS
  MarkupTag LIGA
  MarkupTag SLASH_LIGA
  MarkupTag FRAC
  MarkupTag SLASH_FRAC
  MarkupTag NAME
  MarkupTag INDEX
  MarkupTag TINT
  MarkupTag ANIM
  MarkupTag MATERIAL
  MarkupTag HREF
  MarkupTag ANGLE
  MarkupTag RED
  MarkupTag GREEN
  MarkupTag BLUE
  MarkupTag YELLOW
  MarkupTag ORANGE
  MarkupTag BLACK
  MarkupTag WHITE
  MarkupTag PURPLE
  MarkupTag BR
  MarkupTag ZWSP
  MarkupTag NBSP
  MarkupTag SHY
  MarkupTag LEFT
  MarkupTag RIGHT
  MarkupTag CENTER
  MarkupTag JUSTIFIED
  MarkupTag FLUSH
  MarkupTag NONE
  MarkupTag PLUS
  MarkupTag MINUS
  MarkupTag PX
  MarkupTag PLUS_PX
  MarkupTag MINUS_PX
  MarkupTag EM
  MarkupTag PLUS_EM
  MarkupTag MINUS_EM
  MarkupTag PCT
  MarkupTag PLUS_PCT
  MarkupTag MINUS_PCT
  MarkupTag PERCENTAGE
  MarkupTag PLUS_PERCENTAGE
  MarkupTag MINUS_PERCENTAGE
  MarkupTag TRUE
  MarkupTag FALSE
  MarkupTag INVALID
  MarkupTag NORMAL
  MarkupTag DEFAULT
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TagValueType
Наследуется от: Enum
Поля:
  int value__
  TagValueType None
  TagValueType NumericalValue
  TagValueType StringValue
  TagValueType ColorValue
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TagUnitType
Наследуется от: Enum
Поля:
  int value__
  TagUnitType Pixels
  TagUnitType FontUnits
  TagUnitType Percentage
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.UnicodeCodePoint
Наследуется от: object
Поля:
  UInt32 SPACE
  UInt32 DOUBLE_QUOTE
  UInt32 NUMBER_SIGN
  UInt32 PERCENTAGE
  UInt32 PLUS
  UInt32 MINUS
  UInt32 PERIOD
  UInt32 HYPHEN_MINUS
  UInt32 SOFT_HYPHEN
  UInt32 HYPHEN
  UInt32 NON_BREAKING_HYPHEN
  UInt32 ZERO_WIDTH_SPACE
  UInt32 RIGHT_SINGLE_QUOTATION
  UInt32 APOSTROPHE
  UInt32 WORD_JOINER
  UInt32 HIGH_SURROGATE_START
  UInt32 HIGH_SURROGATE_END
  UInt32 LOW_SURROGATE_START
  UInt32 LOW_SURROGATE_END
  int UNICODE_PLANE01_START
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.FontStyleStack
Наследуется от: ValueType
Поля:
  byte bold
  byte italic
  byte underline
  byte strikethrough
  byte highlight
  byte superscript
  byte subscript
  byte uppercase
  byte lowercase
  byte smallcaps
Свойства:
Методы:
  void Clear()
  byte Add(FontStyles style)
  byte Remove(FontStyles style)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextProcessingStack`1
Наследуется от: ValueType
Поля:
  T[] itemStack
  int index
  T m_DefaultItem
  int m_Capacity
  int m_RolloverSize
  int m_Count
  int k_DefaultCapacity
Свойства:
  int Count
  T current
  int rolloverSize
Методы:
  void .ctor(T[] stack)
  void .ctor(int capacity)
  void .ctor(int capacity, int rolloverSize)
  int get_Count()
  T get_current()
  int get_rolloverSize()
  void set_rolloverSize(int value)
  void SetDefault(TextProcessingStack`1[] stack, T item)
  void Clear()
  void SetDefault(T item)
  void Add(T item)
  T Remove()
  void Push(T item)
  T Pop()
  T Peek()
  T CurrentItem()
  T PreviousItem()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextResourceManager
Наследуется от: object
Поля:
  Dictionary`2<int, FontAssetRef> s_FontAssetReferences
  Dictionary`2<int, FontAsset> s_FontAssetNameReferenceLookup
  Dictionary`2<long, FontAsset> s_FontAssetFamilyNameAndStyleReferenceLookup
  List`1<int> s_FontAssetRemovalList
  int k_RegularStyleHashCode
Свойства:
Методы:
  void AddFontAsset(FontAsset fontAsset)
  void RemoveFontAsset(FontAsset fontAsset)
  bool TryGetFontAssetByName(int nameHashcode, FontAsset& fontAsset)
  bool TryGetFontAssetByFamilyName(int familyNameHashCode, int styleNameHashCode, FontAsset& fontAsset)
  void RebuildFontAssetCache()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextSettings
Наследуется от: ScriptableObject
Поля:
  string m_Version
  FontAsset m_DefaultFontAsset
  string m_DefaultFontAssetPath
  List`1<FontAsset> m_FallbackFontAssets
  bool m_MatchMaterialPreset
  int m_MissingCharacterUnicode
  bool m_ClearDynamicDataOnBuild
  SpriteAsset m_DefaultSpriteAsset
  string m_DefaultSpriteAssetPath
  List`1<SpriteAsset> m_FallbackSpriteAssets
  UInt32 m_MissingSpriteCharacterUnicode
  TextStyleSheet m_DefaultStyleSheet
  string m_StyleSheetsResourcePath
  string m_DefaultColorGradientPresetsPath
  UnicodeLineBreakingRules m_UnicodeLineBreakingRules
  bool m_DisplayWarnings
  Dictionary`2<int, FontAsset> m_FontLookup
  List`1<FontReferenceMap> m_FontReferences
Свойства:
  string version
  FontAsset defaultFontAsset
  string defaultFontAssetPath
  List`1<FontAsset> fallbackFontAssets
  bool matchMaterialPreset
  int missingCharacterUnicode
  bool clearDynamicDataOnBuild
  SpriteAsset defaultSpriteAsset
  string defaultSpriteAssetPath
  List`1<SpriteAsset> fallbackSpriteAssets
  UInt32 missingSpriteCharacterUnicode
  TextStyleSheet defaultStyleSheet
  string styleSheetsResourcePath
  string defaultColorGradientPresetsPath
  UnicodeLineBreakingRules lineBreakingRules
  bool displayWarnings
Методы:
  string get_version()
  void set_version(string value)
  FontAsset get_defaultFontAsset()
  void set_defaultFontAsset(FontAsset value)
  string get_defaultFontAssetPath()
  void set_defaultFontAssetPath(string value)
  List`1<FontAsset> get_fallbackFontAssets()
  void set_fallbackFontAssets(List`1<FontAsset> value)
  bool get_matchMaterialPreset()
  void set_matchMaterialPreset(bool value)
  int get_missingCharacterUnicode()
  void set_missingCharacterUnicode(int value)
  bool get_clearDynamicDataOnBuild()
  void set_clearDynamicDataOnBuild(bool value)
  SpriteAsset get_defaultSpriteAsset()
  void set_defaultSpriteAsset(SpriteAsset value)
  string get_defaultSpriteAssetPath()
  void set_defaultSpriteAssetPath(string value)
  List`1<SpriteAsset> get_fallbackSpriteAssets()
  void set_fallbackSpriteAssets(List`1<SpriteAsset> value)
  UInt32 get_missingSpriteCharacterUnicode()
  void set_missingSpriteCharacterUnicode(UInt32 value)
  TextStyleSheet get_defaultStyleSheet()
  void set_defaultStyleSheet(TextStyleSheet value)
  string get_styleSheetsResourcePath()
  void set_styleSheetsResourcePath(string value)
  string get_defaultColorGradientPresetsPath()
  void set_defaultColorGradientPresetsPath(string value)
  UnicodeLineBreakingRules get_lineBreakingRules()
  void set_lineBreakingRules(UnicodeLineBreakingRules value)
  bool get_displayWarnings()
  void set_displayWarnings(bool value)
  void InitializeFontReferenceLookup()
  FontAsset GetCachedFontAssetInternal(Font font)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextShaderUtilities
Наследуется от: object
Поля:
  int ID_MainTex
  int ID_FaceTex
  int ID_FaceColor
  int ID_FaceDilate
  int ID_Shininess
  int ID_UnderlayColor
  int ID_UnderlayOffsetX
  int ID_UnderlayOffsetY
  int ID_UnderlayDilate
  int ID_UnderlaySoftness
  int ID_WeightNormal
  int ID_WeightBold
  int ID_OutlineTex
  int ID_OutlineWidth
  int ID_OutlineSoftness
  int ID_OutlineColor
  int ID_Outline2Color
  int ID_Outline2Width
  int ID_Padding
  int ID_GradientScale
  int ID_ScaleX
  int ID_ScaleY
  int ID_PerspectiveFilter
  int ID_Sharpness
  int ID_TextureWidth
  int ID_TextureHeight
  int ID_BevelAmount
  int ID_GlowColor
  int ID_GlowOffset
  int ID_GlowPower
  int ID_GlowOuter
  int ID_GlowInner
  int ID_LightAngle
  int ID_EnvMap
  int ID_EnvMatrix
  int ID_EnvMatrixRotation
  int ID_MaskCoord
  int ID_ClipRect
  int ID_MaskSoftnessX
  int ID_MaskSoftnessY
  int ID_VertexOffsetX
  int ID_VertexOffsetY
  int ID_UseClipRect
  int ID_StencilID
  int ID_StencilOp
  int ID_StencilComp
  int ID_StencilReadMask
  int ID_StencilWriteMask
  int ID_ShaderFlags
  int ID_ScaleRatio_A
  int ID_ScaleRatio_B
  int ID_ScaleRatio_C
  string Keyword_Bevel
  string Keyword_Glow
  string Keyword_Underlay
  string Keyword_Ratios
  string Keyword_MASK_SOFT
  string Keyword_MASK_HARD
  string Keyword_MASK_TEX
  string Keyword_Outline
  string ShaderTag_ZTestMode
  string ShaderTag_CullMode
  float m_clamp
  bool isInitialized
  Shader k_ShaderRef_MobileSDF
  Shader k_ShaderRef_MobileBitmap
  Shader k_ShaderRef_Sprite
Свойства:
  Shader ShaderRef_MobileSDF
  Shader ShaderRef_MobileBitmap
  Shader ShaderRef_Sprite
Методы:
  Shader get_ShaderRef_MobileSDF()
  Shader get_ShaderRef_MobileBitmap()
  Shader get_ShaderRef_Sprite()
  void .cctor()
  void GetShaderPropertyIDs()
  void UpdateShaderRatios(Material mat)
  Vector4 GetFontExtent(Material material)
  bool IsMaskingEnabled(Material material)
  float GetPadding(Material material, bool enableExtraPadding, bool isBold)
  float GetPadding(Material[] materials, bool enableExtraPadding, bool isBold)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextStyle
Наследуется от: object
Поля:
  TextStyle k_NormalStyle
  string m_Name
  int m_HashCode
  string m_OpeningDefinition
  string m_ClosingDefinition
  Int32[] m_OpeningTagArray
  Int32[] m_ClosingTagArray
  UInt32[] m_OpeningTagUnicodeArray
  UInt32[] m_ClosingTagUnicodeArray
Свойства:
  TextStyle NormalStyle
  string name
  int hashCode
  string styleOpeningDefinition
  string styleClosingDefinition
  Int32[] styleOpeningTagArray
  Int32[] styleClosingTagArray
Методы:
  TextStyle get_NormalStyle()
  string get_name()
  void set_name(string value)
  int get_hashCode()
  void set_hashCode(int value)
  string get_styleOpeningDefinition()
  string get_styleClosingDefinition()
  Int32[] get_styleOpeningTagArray()
  Int32[] get_styleClosingTagArray()
  void .ctor(string styleName, string styleOpeningDefinition, string styleClosingDefinition)
  void RefreshStyle()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextStyleSheet
Наследуется от: ScriptableObject
Поля:
  List`1<TextStyle> m_StyleList
  Dictionary`2<int, TextStyle> m_StyleLookupDictionary
Свойства:
  List`1<TextStyle> styles
Методы:
  List`1<TextStyle> get_styles()
  TextStyle GetStyle(int hashCode)
  TextStyle GetStyle(string name)
  void RefreshStyles()
  void LoadStyleDictionaryInternal()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.TextUtilities
Наследуется от: object
Поля:
  string k_LookupStringL
  string k_LookupStringU
Свойства:
Методы:
  void ResizeArray(T[]& array)
  void ResizeArray(T[]& array, int size)
  int NextPowerOfTwo(int v)
  char ToLowerFast(char c)
  char ToUpperFast(char c)
  UInt32 ToUpperASCIIFast(UInt32 c)
  UInt32 ToLowerASCIIFast(UInt32 c)
  int GetHashCodeCaseSensitive(string s)
  int GetHashCodeCaseInSensitive(string s)
  UInt32 GetSimpleHashCodeLowercase(string s)
  UInt32 ConvertToUTF32(UInt32 highSurrogate, UInt32 lowSurrogate)
  UInt32 ReadUTF16(UInt32[] text, int index)
  UInt32 ReadUTF32(UInt32[] text, int index)
  UInt32 HexToInt(char hex)
  UInt32 StringHexToInt(string s)
  string UintToString(List`1<UInt32> unicodes)
--------------------------------------------------
Класс: UnityEngine.TextCore.Text.UnicodeLineBreakingRules
Наследуется от: object
Поля:
  UnicodeLineBreakingRules s_Instance
  TextAsset m_UnicodeLineBreakingRules
  TextAsset m_LeadingCharacters
  TextAsset m_FollowingCharacters
  bool m_UseModernHangulLineBreakingRules
  HashSet`1<UInt32> s_LeadingCharactersLookup
  HashSet`1<UInt32> s_FollowingCharactersLookup
Свойства:
  TextAsset lineBreakingRules
  TextAsset leadingCharacters
  TextAsset followingCharacters
  HashSet`1<UInt32> leadingCharactersLookup
  HashSet`1<UInt32> followingCharactersLookup
  bool useModernHangulLineBreakingRules
Методы:
  TextAsset get_lineBreakingRules()
  TextAsset get_leadingCharacters()
  TextAsset get_followingCharacters()
  HashSet`1<UInt32> get_leadingCharactersLookup()
  void set_leadingCharactersLookup(HashSet`1<UInt32> value)
  HashSet`1<UInt32> get_followingCharactersLookup()
  void set_followingCharactersLookup(HashSet`1<UInt32> value)
  bool get_useModernHangulLineBreakingRules()
  void set_useModernHangulLineBreakingRules(bool value)
  void LoadLineBreakingRules()
  void LoadLineBreakingRules(TextAsset leadingRules, TextAsset followingRules)
  HashSet`1<UInt32> GetCharacters(TextAsset file)
  void .ctor()
  void .cctor()
--------------------------------------------------
