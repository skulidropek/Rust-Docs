Сборка: Unity.Mathematics.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IL2CPP.CompilerServices.Il2CppEagerStaticClassConstructionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Mathematics.bool2
Наследуется от: ValueType
Поля:
  bool x
  bool y
Свойства:
  bool4 xxxx
  bool4 xxxy
  bool4 xxyx
  bool4 xxyy
  bool4 xyxx
  bool4 xyxy
  bool4 xyyx
  bool4 xyyy
  bool4 yxxx
  bool4 yxxy
  bool4 yxyx
  bool4 yxyy
  bool4 yyxx
  bool4 yyxy
  bool4 yyyx
  bool4 yyyy
  bool3 xxx
  bool3 xxy
  bool3 xyx
  bool3 xyy
  bool3 yxx
  bool3 yxy
  bool3 yyx
  bool3 yyy
  bool2 xx
  bool2 xy
  bool2 yx
  bool2 yy
  bool Item
Методы:
  void .ctor(bool x, bool y)
  void .ctor(bool2 xy)
  void .ctor(bool v)
  bool2 op_Implicit(bool v)
  bool2 op_Equality(bool2 lhs, bool2 rhs)
  bool2 op_Equality(bool2 lhs, bool rhs)
  bool2 op_Equality(bool lhs, bool2 rhs)
  bool2 op_Inequality(bool2 lhs, bool2 rhs)
  bool2 op_Inequality(bool2 lhs, bool rhs)
  bool2 op_Inequality(bool lhs, bool2 rhs)
  bool2 op_LogicalNot(bool2 val)
  bool2 op_BitwiseAnd(bool2 lhs, bool2 rhs)
  bool2 op_BitwiseAnd(bool2 lhs, bool rhs)
  bool2 op_BitwiseAnd(bool lhs, bool2 rhs)
  bool2 op_BitwiseOr(bool2 lhs, bool2 rhs)
  bool2 op_BitwiseOr(bool2 lhs, bool rhs)
  bool2 op_BitwiseOr(bool lhs, bool2 rhs)
  bool2 op_ExclusiveOr(bool2 lhs, bool2 rhs)
  bool2 op_ExclusiveOr(bool2 lhs, bool rhs)
  bool2 op_ExclusiveOr(bool lhs, bool2 rhs)
  bool4 get_xxxx()
  bool4 get_xxxy()
  bool4 get_xxyx()
  bool4 get_xxyy()
  bool4 get_xyxx()
  bool4 get_xyxy()
  bool4 get_xyyx()
  bool4 get_xyyy()
  bool4 get_yxxx()
  bool4 get_yxxy()
  bool4 get_yxyx()
  bool4 get_yxyy()
  bool4 get_yyxx()
  bool4 get_yyxy()
  bool4 get_yyyx()
  bool4 get_yyyy()
  bool3 get_xxx()
  bool3 get_xxy()
  bool3 get_xyx()
  bool3 get_xyy()
  bool3 get_yxx()
  bool3 get_yxy()
  bool3 get_yyx()
  bool3 get_yyy()
  bool2 get_xx()
  bool2 get_xy()
  void set_xy(bool2 value)
  bool2 get_yx()
  void set_yx(bool2 value)
  bool2 get_yy()
  bool get_Item(int index)
  void set_Item(int index, bool value)
  bool Equals(bool2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.math
Наследуется от: object
Поля:
  double E_DBL
  double LOG2E_DBL
  double LOG10E_DBL
  double LN2_DBL
  double LN10_DBL
  double PI_DBL
  double SQRT2_DBL
  double EPSILON_DBL
  double INFINITY_DBL
  double NAN_DBL
  float FLT_MIN_NORMAL
  double DBL_MIN_NORMAL
  float E
  float LOG2E
  float LOG10E
  float LN2
  float LN10
  float PI
  float SQRT2
  float EPSILON
  float INFINITY
  float NAN
Свойства:
Методы:
  bool2 bool2(bool x, bool y)
  bool2 bool2(bool2 xy)
  bool2 bool2(bool v)
  UInt32 hash(bool2 v)
  uint2 hashwide(bool2 v)
  bool shuffle(bool2 left, bool2 right, ShuffleComponent x)
  bool2 shuffle(bool2 left, bool2 right, ShuffleComponent x, ShuffleComponent y)
  bool3 shuffle(bool2 left, bool2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  bool4 shuffle(bool2 left, bool2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  bool select_shuffle_component(bool2 a, bool2 b, ShuffleComponent component)
  bool2x2 bool2x2(bool2 c0, bool2 c1)
  bool2x2 bool2x2(bool m00, bool m01, bool m10, bool m11)
  bool2x2 bool2x2(bool v)
  bool2x2 transpose(bool2x2 v)
  UInt32 hash(bool2x2 v)
  uint2 hashwide(bool2x2 v)
  bool2x3 bool2x3(bool2 c0, bool2 c1, bool2 c2)
  bool2x3 bool2x3(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12)
  bool2x3 bool2x3(bool v)
  bool3x2 transpose(bool2x3 v)
  UInt32 hash(bool2x3 v)
  uint2 hashwide(bool2x3 v)
  bool2x4 bool2x4(bool2 c0, bool2 c1, bool2 c2, bool2 c3)
  bool2x4 bool2x4(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13)
  bool2x4 bool2x4(bool v)
  bool4x2 transpose(bool2x4 v)
  UInt32 hash(bool2x4 v)
  uint2 hashwide(bool2x4 v)
  bool3 bool3(bool x, bool y, bool z)
  bool3 bool3(bool x, bool2 yz)
  bool3 bool3(bool2 xy, bool z)
  bool3 bool3(bool3 xyz)
  bool3 bool3(bool v)
  UInt32 hash(bool3 v)
  uint3 hashwide(bool3 v)
  bool shuffle(bool3 left, bool3 right, ShuffleComponent x)
  bool2 shuffle(bool3 left, bool3 right, ShuffleComponent x, ShuffleComponent y)
  bool3 shuffle(bool3 left, bool3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  bool4 shuffle(bool3 left, bool3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  bool select_shuffle_component(bool3 a, bool3 b, ShuffleComponent component)
  bool3x2 bool3x2(bool3 c0, bool3 c1)
  bool3x2 bool3x2(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21)
  bool3x2 bool3x2(bool v)
  bool2x3 transpose(bool3x2 v)
  UInt32 hash(bool3x2 v)
  uint3 hashwide(bool3x2 v)
  bool3x3 bool3x3(bool3 c0, bool3 c1, bool3 c2)
  bool3x3 bool3x3(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22)
  bool3x3 bool3x3(bool v)
  bool3x3 transpose(bool3x3 v)
  UInt32 hash(bool3x3 v)
  uint3 hashwide(bool3x3 v)
  bool3x4 bool3x4(bool3 c0, bool3 c1, bool3 c2, bool3 c3)
  bool3x4 bool3x4(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23)
  bool3x4 bool3x4(bool v)
  bool4x3 transpose(bool3x4 v)
  UInt32 hash(bool3x4 v)
  uint3 hashwide(bool3x4 v)
  bool4 bool4(bool x, bool y, bool z, bool w)
  bool4 bool4(bool x, bool y, bool2 zw)
  bool4 bool4(bool x, bool2 yz, bool w)
  bool4 bool4(bool x, bool3 yzw)
  bool4 bool4(bool2 xy, bool z, bool w)
  bool4 bool4(bool2 xy, bool2 zw)
  bool4 bool4(bool3 xyz, bool w)
  bool4 bool4(bool4 xyzw)
  bool4 bool4(bool v)
  UInt32 hash(bool4 v)
  uint4 hashwide(bool4 v)
  bool shuffle(bool4 left, bool4 right, ShuffleComponent x)
  bool2 shuffle(bool4 left, bool4 right, ShuffleComponent x, ShuffleComponent y)
  bool3 shuffle(bool4 left, bool4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  bool4 shuffle(bool4 left, bool4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  bool select_shuffle_component(bool4 a, bool4 b, ShuffleComponent component)
  bool4x2 bool4x2(bool4 c0, bool4 c1)
  bool4x2 bool4x2(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21, bool m30, bool m31)
  bool4x2 bool4x2(bool v)
  bool2x4 transpose(bool4x2 v)
  UInt32 hash(bool4x2 v)
  uint4 hashwide(bool4x2 v)
  bool4x3 bool4x3(bool4 c0, bool4 c1, bool4 c2)
  bool4x3 bool4x3(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22, bool m30, bool m31, bool m32)
  bool4x3 bool4x3(bool v)
  bool3x4 transpose(bool4x3 v)
  UInt32 hash(bool4x3 v)
  uint4 hashwide(bool4x3 v)
  bool4x4 bool4x4(bool4 c0, bool4 c1, bool4 c2, bool4 c3)
  bool4x4 bool4x4(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23, bool m30, bool m31, bool m32, bool m33)
  bool4x4 bool4x4(bool v)
  bool4x4 transpose(bool4x4 v)
  UInt32 hash(bool4x4 v)
  uint4 hashwide(bool4x4 v)
  double2 double2(double x, double y)
  double2 double2(double2 xy)
  double2 double2(double v)
  double2 double2(bool v)
  double2 double2(bool2 v)
  double2 double2(int v)
  double2 double2(int2 v)
  double2 double2(UInt32 v)
  double2 double2(uint2 v)
  double2 double2(half v)
  double2 double2(half2 v)
  double2 double2(float v)
  double2 double2(float2 v)
  UInt32 hash(double2 v)
  uint2 hashwide(double2 v)
  double shuffle(double2 left, double2 right, ShuffleComponent x)
  double2 shuffle(double2 left, double2 right, ShuffleComponent x, ShuffleComponent y)
  double3 shuffle(double2 left, double2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  double4 shuffle(double2 left, double2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  double select_shuffle_component(double2 a, double2 b, ShuffleComponent component)
  double2x2 double2x2(double2 c0, double2 c1)
  double2x2 double2x2(double m00, double m01, double m10, double m11)
  double2x2 double2x2(double v)
  double2x2 double2x2(bool v)
  double2x2 double2x2(bool2x2 v)
  double2x2 double2x2(int v)
  double2x2 double2x2(int2x2 v)
  double2x2 double2x2(UInt32 v)
  double2x2 double2x2(uint2x2 v)
  double2x2 double2x2(float v)
  double2x2 double2x2(float2x2 v)
  double2x2 transpose(double2x2 v)
  double2x2 inverse(double2x2 m)
  double determinant(double2x2 m)
  UInt32 hash(double2x2 v)
  uint2 hashwide(double2x2 v)
  double2x3 double2x3(double2 c0, double2 c1, double2 c2)
  double2x3 double2x3(double m00, double m01, double m02, double m10, double m11, double m12)
  double2x3 double2x3(double v)
  double2x3 double2x3(bool v)
  double2x3 double2x3(bool2x3 v)
  double2x3 double2x3(int v)
  double2x3 double2x3(int2x3 v)
  double2x3 double2x3(UInt32 v)
  double2x3 double2x3(uint2x3 v)
  double2x3 double2x3(float v)
  double2x3 double2x3(float2x3 v)
  double3x2 transpose(double2x3 v)
  UInt32 hash(double2x3 v)
  uint2 hashwide(double2x3 v)
  double2x4 double2x4(double2 c0, double2 c1, double2 c2, double2 c3)
  double2x4 double2x4(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13)
  double2x4 double2x4(double v)
  double2x4 double2x4(bool v)
  double2x4 double2x4(bool2x4 v)
  double2x4 double2x4(int v)
  double2x4 double2x4(int2x4 v)
  double2x4 double2x4(UInt32 v)
  double2x4 double2x4(uint2x4 v)
  double2x4 double2x4(float v)
  double2x4 double2x4(float2x4 v)
  double4x2 transpose(double2x4 v)
  UInt32 hash(double2x4 v)
  uint2 hashwide(double2x4 v)
  double3 double3(double x, double y, double z)
  double3 double3(double x, double2 yz)
  double3 double3(double2 xy, double z)
  double3 double3(double3 xyz)
  double3 double3(double v)
  double3 double3(bool v)
  double3 double3(bool3 v)
  double3 double3(int v)
  double3 double3(int3 v)
  double3 double3(UInt32 v)
  double3 double3(uint3 v)
  double3 double3(half v)
  double3 double3(half3 v)
  double3 double3(float v)
  double3 double3(float3 v)
  UInt32 hash(double3 v)
  uint3 hashwide(double3 v)
  double shuffle(double3 left, double3 right, ShuffleComponent x)
  double2 shuffle(double3 left, double3 right, ShuffleComponent x, ShuffleComponent y)
  double3 shuffle(double3 left, double3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  double4 shuffle(double3 left, double3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  double select_shuffle_component(double3 a, double3 b, ShuffleComponent component)
  double3x2 double3x2(double3 c0, double3 c1)
  double3x2 double3x2(double m00, double m01, double m10, double m11, double m20, double m21)
  double3x2 double3x2(double v)
  double3x2 double3x2(bool v)
  double3x2 double3x2(bool3x2 v)
  double3x2 double3x2(int v)
  double3x2 double3x2(int3x2 v)
  double3x2 double3x2(UInt32 v)
  double3x2 double3x2(uint3x2 v)
  double3x2 double3x2(float v)
  double3x2 double3x2(float3x2 v)
  double2x3 transpose(double3x2 v)
  UInt32 hash(double3x2 v)
  uint3 hashwide(double3x2 v)
  double3x3 double3x3(double3 c0, double3 c1, double3 c2)
  double3x3 double3x3(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22)
  double3x3 double3x3(double v)
  double3x3 double3x3(bool v)
  double3x3 double3x3(bool3x3 v)
  double3x3 double3x3(int v)
  double3x3 double3x3(int3x3 v)
  double3x3 double3x3(UInt32 v)
  double3x3 double3x3(uint3x3 v)
  double3x3 double3x3(float v)
  double3x3 double3x3(float3x3 v)
  double3x3 transpose(double3x3 v)
  double3x3 inverse(double3x3 m)
  double determinant(double3x3 m)
  UInt32 hash(double3x3 v)
  uint3 hashwide(double3x3 v)
  double3x4 double3x4(double3 c0, double3 c1, double3 c2, double3 c3)
  double3x4 double3x4(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23)
  double3x4 double3x4(double v)
  double3x4 double3x4(bool v)
  double3x4 double3x4(bool3x4 v)
  double3x4 double3x4(int v)
  double3x4 double3x4(int3x4 v)
  double3x4 double3x4(UInt32 v)
  double3x4 double3x4(uint3x4 v)
  double3x4 double3x4(float v)
  double3x4 double3x4(float3x4 v)
  double4x3 transpose(double3x4 v)
  double3x4 fastinverse(double3x4 m)
  UInt32 hash(double3x4 v)
  uint3 hashwide(double3x4 v)
  double4 double4(double x, double y, double z, double w)
  double4 double4(double x, double y, double2 zw)
  double4 double4(double x, double2 yz, double w)
  double4 double4(double x, double3 yzw)
  double4 double4(double2 xy, double z, double w)
  double4 double4(double2 xy, double2 zw)
  double4 double4(double3 xyz, double w)
  double4 double4(double4 xyzw)
  double4 double4(double v)
  double4 double4(bool v)
  double4 double4(bool4 v)
  double4 double4(int v)
  double4 double4(int4 v)
  double4 double4(UInt32 v)
  double4 double4(uint4 v)
  double4 double4(half v)
  double4 double4(half4 v)
  double4 double4(float v)
  double4 double4(float4 v)
  UInt32 hash(double4 v)
  uint4 hashwide(double4 v)
  double shuffle(double4 left, double4 right, ShuffleComponent x)
  double2 shuffle(double4 left, double4 right, ShuffleComponent x, ShuffleComponent y)
  double3 shuffle(double4 left, double4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  double4 shuffle(double4 left, double4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  double select_shuffle_component(double4 a, double4 b, ShuffleComponent component)
  double4x2 double4x2(double4 c0, double4 c1)
  double4x2 double4x2(double m00, double m01, double m10, double m11, double m20, double m21, double m30, double m31)
  double4x2 double4x2(double v)
  double4x2 double4x2(bool v)
  double4x2 double4x2(bool4x2 v)
  double4x2 double4x2(int v)
  double4x2 double4x2(int4x2 v)
  double4x2 double4x2(UInt32 v)
  double4x2 double4x2(uint4x2 v)
  double4x2 double4x2(float v)
  double4x2 double4x2(float4x2 v)
  double2x4 transpose(double4x2 v)
  UInt32 hash(double4x2 v)
  uint4 hashwide(double4x2 v)
  double4x3 double4x3(double4 c0, double4 c1, double4 c2)
  double4x3 double4x3(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22, double m30, double m31, double m32)
  double4x3 double4x3(double v)
  double4x3 double4x3(bool v)
  double4x3 double4x3(bool4x3 v)
  double4x3 double4x3(int v)
  double4x3 double4x3(int4x3 v)
  double4x3 double4x3(UInt32 v)
  double4x3 double4x3(uint4x3 v)
  double4x3 double4x3(float v)
  double4x3 double4x3(float4x3 v)
  double3x4 transpose(double4x3 v)
  UInt32 hash(double4x3 v)
  uint4 hashwide(double4x3 v)
  double4x4 double4x4(double4 c0, double4 c1, double4 c2, double4 c3)
  double4x4 double4x4(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23, double m30, double m31, double m32, double m33)
  double4x4 double4x4(double v)
  double4x4 double4x4(bool v)
  double4x4 double4x4(bool4x4 v)
  double4x4 double4x4(int v)
  double4x4 double4x4(int4x4 v)
  double4x4 double4x4(UInt32 v)
  double4x4 double4x4(uint4x4 v)
  double4x4 double4x4(float v)
  double4x4 double4x4(float4x4 v)
  double3 rotate(double4x4 a, double3 b)
  double3 transform(double4x4 a, double3 b)
  double4x4 transpose(double4x4 v)
  double4x4 inverse(double4x4 m)
  double4x4 fastinverse(double4x4 m)
  double determinant(double4x4 m)
  UInt32 hash(double4x4 v)
  uint4 hashwide(double4x4 v)
  float2 float2(float x, float y)
  float2 float2(float2 xy)
  float2 float2(float v)
  float2 float2(bool v)
  float2 float2(bool2 v)
  float2 float2(int v)
  float2 float2(int2 v)
  float2 float2(UInt32 v)
  float2 float2(uint2 v)
  float2 float2(half v)
  float2 float2(half2 v)
  float2 float2(double v)
  float2 float2(double2 v)
  UInt32 hash(float2 v)
  uint2 hashwide(float2 v)
  float shuffle(float2 left, float2 right, ShuffleComponent x)
  float2 shuffle(float2 left, float2 right, ShuffleComponent x, ShuffleComponent y)
  float3 shuffle(float2 left, float2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  float4 shuffle(float2 left, float2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  float select_shuffle_component(float2 a, float2 b, ShuffleComponent component)
  float2x2 float2x2(float2 c0, float2 c1)
  float2x2 float2x2(float m00, float m01, float m10, float m11)
  float2x2 float2x2(float v)
  float2x2 float2x2(bool v)
  float2x2 float2x2(bool2x2 v)
  float2x2 float2x2(int v)
  float2x2 float2x2(int2x2 v)
  float2x2 float2x2(UInt32 v)
  float2x2 float2x2(uint2x2 v)
  float2x2 float2x2(double v)
  float2x2 float2x2(double2x2 v)
  float2x2 transpose(float2x2 v)
  float2x2 inverse(float2x2 m)
  float determinant(float2x2 m)
  UInt32 hash(float2x2 v)
  uint2 hashwide(float2x2 v)
  float2x3 float2x3(float2 c0, float2 c1, float2 c2)
  float2x3 float2x3(float m00, float m01, float m02, float m10, float m11, float m12)
  float2x3 float2x3(float v)
  float2x3 float2x3(bool v)
  float2x3 float2x3(bool2x3 v)
  float2x3 float2x3(int v)
  float2x3 float2x3(int2x3 v)
  float2x3 float2x3(UInt32 v)
  float2x3 float2x3(uint2x3 v)
  float2x3 float2x3(double v)
  float2x3 float2x3(double2x3 v)
  float3x2 transpose(float2x3 v)
  UInt32 hash(float2x3 v)
  uint2 hashwide(float2x3 v)
  float2x4 float2x4(float2 c0, float2 c1, float2 c2, float2 c3)
  float2x4 float2x4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13)
  float2x4 float2x4(float v)
  float2x4 float2x4(bool v)
  float2x4 float2x4(bool2x4 v)
  float2x4 float2x4(int v)
  float2x4 float2x4(int2x4 v)
  float2x4 float2x4(UInt32 v)
  float2x4 float2x4(uint2x4 v)
  float2x4 float2x4(double v)
  float2x4 float2x4(double2x4 v)
  float4x2 transpose(float2x4 v)
  UInt32 hash(float2x4 v)
  uint2 hashwide(float2x4 v)
  float3 float3(float x, float y, float z)
  float3 float3(float x, float2 yz)
  float3 float3(float2 xy, float z)
  float3 float3(float3 xyz)
  float3 float3(float v)
  float3 float3(bool v)
  float3 float3(bool3 v)
  float3 float3(int v)
  float3 float3(int3 v)
  float3 float3(UInt32 v)
  float3 float3(uint3 v)
  float3 float3(half v)
  float3 float3(half3 v)
  float3 float3(double v)
  float3 float3(double3 v)
  UInt32 hash(float3 v)
  uint3 hashwide(float3 v)
  float shuffle(float3 left, float3 right, ShuffleComponent x)
  float2 shuffle(float3 left, float3 right, ShuffleComponent x, ShuffleComponent y)
  float3 shuffle(float3 left, float3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  float4 shuffle(float3 left, float3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  float select_shuffle_component(float3 a, float3 b, ShuffleComponent component)
  float3x2 float3x2(float3 c0, float3 c1)
  float3x2 float3x2(float m00, float m01, float m10, float m11, float m20, float m21)
  float3x2 float3x2(float v)
  float3x2 float3x2(bool v)
  float3x2 float3x2(bool3x2 v)
  float3x2 float3x2(int v)
  float3x2 float3x2(int3x2 v)
  float3x2 float3x2(UInt32 v)
  float3x2 float3x2(uint3x2 v)
  float3x2 float3x2(double v)
  float3x2 float3x2(double3x2 v)
  float2x3 transpose(float3x2 v)
  UInt32 hash(float3x2 v)
  uint3 hashwide(float3x2 v)
  float3x3 float3x3(float3 c0, float3 c1, float3 c2)
  float3x3 float3x3(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22)
  float3x3 float3x3(float v)
  float3x3 float3x3(bool v)
  float3x3 float3x3(bool3x3 v)
  float3x3 float3x3(int v)
  float3x3 float3x3(int3x3 v)
  float3x3 float3x3(UInt32 v)
  float3x3 float3x3(uint3x3 v)
  float3x3 float3x3(double v)
  float3x3 float3x3(double3x3 v)
  float3x3 transpose(float3x3 v)
  float3x3 inverse(float3x3 m)
  float determinant(float3x3 m)
  UInt32 hash(float3x3 v)
  uint3 hashwide(float3x3 v)
  float3x4 float3x4(float3 c0, float3 c1, float3 c2, float3 c3)
  float3x4 float3x4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23)
  float3x4 float3x4(float v)
  float3x4 float3x4(bool v)
  float3x4 float3x4(bool3x4 v)
  float3x4 float3x4(int v)
  float3x4 float3x4(int3x4 v)
  float3x4 float3x4(UInt32 v)
  float3x4 float3x4(uint3x4 v)
  float3x4 float3x4(double v)
  float3x4 float3x4(double3x4 v)
  float4x3 transpose(float3x4 v)
  float3x4 fastinverse(float3x4 m)
  UInt32 hash(float3x4 v)
  uint3 hashwide(float3x4 v)
  float4 float4(float x, float y, float z, float w)
  float4 float4(float x, float y, float2 zw)
  float4 float4(float x, float2 yz, float w)
  float4 float4(float x, float3 yzw)
  float4 float4(float2 xy, float z, float w)
  float4 float4(float2 xy, float2 zw)
  float4 float4(float3 xyz, float w)
  float4 float4(float4 xyzw)
  float4 float4(float v)
  float4 float4(bool v)
  float4 float4(bool4 v)
  float4 float4(int v)
  float4 float4(int4 v)
  float4 float4(UInt32 v)
  float4 float4(uint4 v)
  float4 float4(half v)
  float4 float4(half4 v)
  float4 float4(double v)
  float4 float4(double4 v)
  UInt32 hash(float4 v)
  uint4 hashwide(float4 v)
  float shuffle(float4 left, float4 right, ShuffleComponent x)
  float2 shuffle(float4 left, float4 right, ShuffleComponent x, ShuffleComponent y)
  float3 shuffle(float4 left, float4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  float4 shuffle(float4 left, float4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  float select_shuffle_component(float4 a, float4 b, ShuffleComponent component)
  float4x2 float4x2(float4 c0, float4 c1)
  float4x2 float4x2(float m00, float m01, float m10, float m11, float m20, float m21, float m30, float m31)
  float4x2 float4x2(float v)
  float4x2 float4x2(bool v)
  float4x2 float4x2(bool4x2 v)
  float4x2 float4x2(int v)
  float4x2 float4x2(int4x2 v)
  float4x2 float4x2(UInt32 v)
  float4x2 float4x2(uint4x2 v)
  float4x2 float4x2(double v)
  float4x2 float4x2(double4x2 v)
  float2x4 transpose(float4x2 v)
  UInt32 hash(float4x2 v)
  uint4 hashwide(float4x2 v)
  float4x3 float4x3(float4 c0, float4 c1, float4 c2)
  float4x3 float4x3(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22, float m30, float m31, float m32)
  float4x3 float4x3(float v)
  float4x3 float4x3(bool v)
  float4x3 float4x3(bool4x3 v)
  float4x3 float4x3(int v)
  float4x3 float4x3(int4x3 v)
  float4x3 float4x3(UInt32 v)
  float4x3 float4x3(uint4x3 v)
  float4x3 float4x3(double v)
  float4x3 float4x3(double4x3 v)
  float3x4 transpose(float4x3 v)
  UInt32 hash(float4x3 v)
  uint4 hashwide(float4x3 v)
  float4x4 float4x4(float4 c0, float4 c1, float4 c2, float4 c3)
  float4x4 float4x4(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33)
  float4x4 float4x4(float v)
  float4x4 float4x4(bool v)
  float4x4 float4x4(bool4x4 v)
  float4x4 float4x4(int v)
  float4x4 float4x4(int4x4 v)
  float4x4 float4x4(UInt32 v)
  float4x4 float4x4(uint4x4 v)
  float4x4 float4x4(double v)
  float4x4 float4x4(double4x4 v)
  float3 rotate(float4x4 a, float3 b)
  float3 transform(float4x4 a, float3 b)
  float4x4 transpose(float4x4 v)
  float4x4 inverse(float4x4 m)
  float4x4 fastinverse(float4x4 m)
  float determinant(float4x4 m)
  UInt32 hash(float4x4 v)
  uint4 hashwide(float4x4 v)
  half half(half x)
  half half(float v)
  half half(double v)
  UInt32 hash(half v)
  half2 half2(half x, half y)
  half2 half2(half2 xy)
  half2 half2(half v)
  half2 half2(float v)
  half2 half2(float2 v)
  half2 half2(double v)
  half2 half2(double2 v)
  UInt32 hash(half2 v)
  uint2 hashwide(half2 v)
  half3 half3(half x, half y, half z)
  half3 half3(half x, half2 yz)
  half3 half3(half2 xy, half z)
  half3 half3(half3 xyz)
  half3 half3(half v)
  half3 half3(float v)
  half3 half3(float3 v)
  half3 half3(double v)
  half3 half3(double3 v)
  UInt32 hash(half3 v)
  uint3 hashwide(half3 v)
  half4 half4(half x, half y, half z, half w)
  half4 half4(half x, half y, half2 zw)
  half4 half4(half x, half2 yz, half w)
  half4 half4(half x, half3 yzw)
  half4 half4(half2 xy, half z, half w)
  half4 half4(half2 xy, half2 zw)
  half4 half4(half3 xyz, half w)
  half4 half4(half4 xyzw)
  half4 half4(half v)
  half4 half4(float v)
  half4 half4(float4 v)
  half4 half4(double v)
  half4 half4(double4 v)
  UInt32 hash(half4 v)
  uint4 hashwide(half4 v)
  int2 int2(int x, int y)
  int2 int2(int2 xy)
  int2 int2(int v)
  int2 int2(bool v)
  int2 int2(bool2 v)
  int2 int2(UInt32 v)
  int2 int2(uint2 v)
  int2 int2(float v)
  int2 int2(float2 v)
  int2 int2(double v)
  int2 int2(double2 v)
  UInt32 hash(int2 v)
  uint2 hashwide(int2 v)
  int shuffle(int2 left, int2 right, ShuffleComponent x)
  int2 shuffle(int2 left, int2 right, ShuffleComponent x, ShuffleComponent y)
  int3 shuffle(int2 left, int2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  int4 shuffle(int2 left, int2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  int select_shuffle_component(int2 a, int2 b, ShuffleComponent component)
  int2x2 int2x2(int2 c0, int2 c1)
  int2x2 int2x2(int m00, int m01, int m10, int m11)
  int2x2 int2x2(int v)
  int2x2 int2x2(bool v)
  int2x2 int2x2(bool2x2 v)
  int2x2 int2x2(UInt32 v)
  int2x2 int2x2(uint2x2 v)
  int2x2 int2x2(float v)
  int2x2 int2x2(float2x2 v)
  int2x2 int2x2(double v)
  int2x2 int2x2(double2x2 v)
  int2x2 transpose(int2x2 v)
  int determinant(int2x2 m)
  UInt32 hash(int2x2 v)
  uint2 hashwide(int2x2 v)
  int2x3 int2x3(int2 c0, int2 c1, int2 c2)
  int2x3 int2x3(int m00, int m01, int m02, int m10, int m11, int m12)
  int2x3 int2x3(int v)
  int2x3 int2x3(bool v)
  int2x3 int2x3(bool2x3 v)
  int2x3 int2x3(UInt32 v)
  int2x3 int2x3(uint2x3 v)
  int2x3 int2x3(float v)
  int2x3 int2x3(float2x3 v)
  int2x3 int2x3(double v)
  int2x3 int2x3(double2x3 v)
  int3x2 transpose(int2x3 v)
  UInt32 hash(int2x3 v)
  uint2 hashwide(int2x3 v)
  int2x4 int2x4(int2 c0, int2 c1, int2 c2, int2 c3)
  int2x4 int2x4(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13)
  int2x4 int2x4(int v)
  int2x4 int2x4(bool v)
  int2x4 int2x4(bool2x4 v)
  int2x4 int2x4(UInt32 v)
  int2x4 int2x4(uint2x4 v)
  int2x4 int2x4(float v)
  int2x4 int2x4(float2x4 v)
  int2x4 int2x4(double v)
  int2x4 int2x4(double2x4 v)
  int4x2 transpose(int2x4 v)
  UInt32 hash(int2x4 v)
  uint2 hashwide(int2x4 v)
  int3 int3(int x, int y, int z)
  int3 int3(int x, int2 yz)
  int3 int3(int2 xy, int z)
  int3 int3(int3 xyz)
  int3 int3(int v)
  int3 int3(bool v)
  int3 int3(bool3 v)
  int3 int3(UInt32 v)
  int3 int3(uint3 v)
  int3 int3(float v)
  int3 int3(float3 v)
  int3 int3(double v)
  int3 int3(double3 v)
  UInt32 hash(int3 v)
  uint3 hashwide(int3 v)
  int shuffle(int3 left, int3 right, ShuffleComponent x)
  int2 shuffle(int3 left, int3 right, ShuffleComponent x, ShuffleComponent y)
  int3 shuffle(int3 left, int3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  int4 shuffle(int3 left, int3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  int select_shuffle_component(int3 a, int3 b, ShuffleComponent component)
  int3x2 int3x2(int3 c0, int3 c1)
  int3x2 int3x2(int m00, int m01, int m10, int m11, int m20, int m21)
  int3x2 int3x2(int v)
  int3x2 int3x2(bool v)
  int3x2 int3x2(bool3x2 v)
  int3x2 int3x2(UInt32 v)
  int3x2 int3x2(uint3x2 v)
  int3x2 int3x2(float v)
  int3x2 int3x2(float3x2 v)
  int3x2 int3x2(double v)
  int3x2 int3x2(double3x2 v)
  int2x3 transpose(int3x2 v)
  UInt32 hash(int3x2 v)
  uint3 hashwide(int3x2 v)
  int3x3 int3x3(int3 c0, int3 c1, int3 c2)
  int3x3 int3x3(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22)
  int3x3 int3x3(int v)
  int3x3 int3x3(bool v)
  int3x3 int3x3(bool3x3 v)
  int3x3 int3x3(UInt32 v)
  int3x3 int3x3(uint3x3 v)
  int3x3 int3x3(float v)
  int3x3 int3x3(float3x3 v)
  int3x3 int3x3(double v)
  int3x3 int3x3(double3x3 v)
  int3x3 transpose(int3x3 v)
  int determinant(int3x3 m)
  UInt32 hash(int3x3 v)
  uint3 hashwide(int3x3 v)
  int3x4 int3x4(int3 c0, int3 c1, int3 c2, int3 c3)
  int3x4 int3x4(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23)
  int3x4 int3x4(int v)
  int3x4 int3x4(bool v)
  int3x4 int3x4(bool3x4 v)
  int3x4 int3x4(UInt32 v)
  int3x4 int3x4(uint3x4 v)
  int3x4 int3x4(float v)
  int3x4 int3x4(float3x4 v)
  int3x4 int3x4(double v)
  int3x4 int3x4(double3x4 v)
  int4x3 transpose(int3x4 v)
  UInt32 hash(int3x4 v)
  uint3 hashwide(int3x4 v)
  int4 int4(int x, int y, int z, int w)
  int4 int4(int x, int y, int2 zw)
  int4 int4(int x, int2 yz, int w)
  int4 int4(int x, int3 yzw)
  int4 int4(int2 xy, int z, int w)
  int4 int4(int2 xy, int2 zw)
  int4 int4(int3 xyz, int w)
  int4 int4(int4 xyzw)
  int4 int4(int v)
  int4 int4(bool v)
  int4 int4(bool4 v)
  int4 int4(UInt32 v)
  int4 int4(uint4 v)
  int4 int4(float v)
  int4 int4(float4 v)
  int4 int4(double v)
  int4 int4(double4 v)
  UInt32 hash(int4 v)
  uint4 hashwide(int4 v)
  int shuffle(int4 left, int4 right, ShuffleComponent x)
  int2 shuffle(int4 left, int4 right, ShuffleComponent x, ShuffleComponent y)
  int3 shuffle(int4 left, int4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  int4 shuffle(int4 left, int4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  int select_shuffle_component(int4 a, int4 b, ShuffleComponent component)
  int4x2 int4x2(int4 c0, int4 c1)
  int4x2 int4x2(int m00, int m01, int m10, int m11, int m20, int m21, int m30, int m31)
  int4x2 int4x2(int v)
  int4x2 int4x2(bool v)
  int4x2 int4x2(bool4x2 v)
  int4x2 int4x2(UInt32 v)
  int4x2 int4x2(uint4x2 v)
  int4x2 int4x2(float v)
  int4x2 int4x2(float4x2 v)
  int4x2 int4x2(double v)
  int4x2 int4x2(double4x2 v)
  int2x4 transpose(int4x2 v)
  UInt32 hash(int4x2 v)
  uint4 hashwide(int4x2 v)
  int4x3 int4x3(int4 c0, int4 c1, int4 c2)
  int4x3 int4x3(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22, int m30, int m31, int m32)
  int4x3 int4x3(int v)
  int4x3 int4x3(bool v)
  int4x3 int4x3(bool4x3 v)
  int4x3 int4x3(UInt32 v)
  int4x3 int4x3(uint4x3 v)
  int4x3 int4x3(float v)
  int4x3 int4x3(float4x3 v)
  int4x3 int4x3(double v)
  int4x3 int4x3(double4x3 v)
  int3x4 transpose(int4x3 v)
  UInt32 hash(int4x3 v)
  uint4 hashwide(int4x3 v)
  int4x4 int4x4(int4 c0, int4 c1, int4 c2, int4 c3)
  int4x4 int4x4(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23, int m30, int m31, int m32, int m33)
  int4x4 int4x4(int v)
  int4x4 int4x4(bool v)
  int4x4 int4x4(bool4x4 v)
  int4x4 int4x4(UInt32 v)
  int4x4 int4x4(uint4x4 v)
  int4x4 int4x4(float v)
  int4x4 int4x4(float4x4 v)
  int4x4 int4x4(double v)
  int4x4 int4x4(double4x4 v)
  int4x4 transpose(int4x4 v)
  int determinant(int4x4 m)
  UInt32 hash(int4x4 v)
  uint4 hashwide(int4x4 v)
  int asint(UInt32 x)
  int2 asint(uint2 x)
  int3 asint(uint3 x)
  int4 asint(uint4 x)
  int asint(float x)
  int2 asint(float2 x)
  int3 asint(float3 x)
  int4 asint(float4 x)
  UInt32 asuint(int x)
  uint2 asuint(int2 x)
  uint3 asuint(int3 x)
  uint4 asuint(int4 x)
  UInt32 asuint(float x)
  uint2 asuint(float2 x)
  uint3 asuint(float3 x)
  uint4 asuint(float4 x)
  long aslong(ulong x)
  long aslong(double x)
  ulong asulong(long x)
  ulong asulong(double x)
  float asfloat(int x)
  float2 asfloat(int2 x)
  float3 asfloat(int3 x)
  float4 asfloat(int4 x)
  float asfloat(UInt32 x)
  float2 asfloat(uint2 x)
  float3 asfloat(uint3 x)
  float4 asfloat(uint4 x)
  int bitmask(bool4 value)
  double asdouble(long x)
  double asdouble(ulong x)
  bool isfinite(float x)
  bool2 isfinite(float2 x)
  bool3 isfinite(float3 x)
  bool4 isfinite(float4 x)
  bool isfinite(double x)
  bool2 isfinite(double2 x)
  bool3 isfinite(double3 x)
  bool4 isfinite(double4 x)
  bool isinf(float x)
  bool2 isinf(float2 x)
  bool3 isinf(float3 x)
  bool4 isinf(float4 x)
  bool isinf(double x)
  bool2 isinf(double2 x)
  bool3 isinf(double3 x)
  bool4 isinf(double4 x)
  bool isnan(float x)
  bool2 isnan(float2 x)
  bool3 isnan(float3 x)
  bool4 isnan(float4 x)
  bool isnan(double x)
  bool2 isnan(double2 x)
  bool3 isnan(double3 x)
  bool4 isnan(double4 x)
  bool ispow2(int x)
  bool2 ispow2(int2 x)
  bool3 ispow2(int3 x)
  bool4 ispow2(int4 x)
  bool ispow2(UInt32 x)
  bool2 ispow2(uint2 x)
  bool3 ispow2(uint3 x)
  bool4 ispow2(uint4 x)
  int min(int x, int y)
  int2 min(int2 x, int2 y)
  int3 min(int3 x, int3 y)
  int4 min(int4 x, int4 y)
  UInt32 min(UInt32 x, UInt32 y)
  uint2 min(uint2 x, uint2 y)
  uint3 min(uint3 x, uint3 y)
  uint4 min(uint4 x, uint4 y)
  long min(long x, long y)
  ulong min(ulong x, ulong y)
  float min(float x, float y)
  float2 min(float2 x, float2 y)
  float3 min(float3 x, float3 y)
  float4 min(float4 x, float4 y)
  double min(double x, double y)
  double2 min(double2 x, double2 y)
  double3 min(double3 x, double3 y)
  double4 min(double4 x, double4 y)
  int max(int x, int y)
  int2 max(int2 x, int2 y)
  int3 max(int3 x, int3 y)
  int4 max(int4 x, int4 y)
  UInt32 max(UInt32 x, UInt32 y)
  uint2 max(uint2 x, uint2 y)
  uint3 max(uint3 x, uint3 y)
  uint4 max(uint4 x, uint4 y)
  long max(long x, long y)
  ulong max(ulong x, ulong y)
  float max(float x, float y)
  float2 max(float2 x, float2 y)
  float3 max(float3 x, float3 y)
  float4 max(float4 x, float4 y)
  double max(double x, double y)
  double2 max(double2 x, double2 y)
  double3 max(double3 x, double3 y)
  double4 max(double4 x, double4 y)
  float lerp(float x, float y, float s)
  float2 lerp(float2 x, float2 y, float s)
  float3 lerp(float3 x, float3 y, float s)
  float4 lerp(float4 x, float4 y, float s)
  float2 lerp(float2 x, float2 y, float2 s)
  float3 lerp(float3 x, float3 y, float3 s)
  float4 lerp(float4 x, float4 y, float4 s)
  double lerp(double x, double y, double s)
  double2 lerp(double2 x, double2 y, double s)
  double3 lerp(double3 x, double3 y, double s)
  double4 lerp(double4 x, double4 y, double s)
  double2 lerp(double2 x, double2 y, double2 s)
  double3 lerp(double3 x, double3 y, double3 s)
  double4 lerp(double4 x, double4 y, double4 s)
  float unlerp(float a, float b, float x)
  float2 unlerp(float2 a, float2 b, float2 x)
  float3 unlerp(float3 a, float3 b, float3 x)
  float4 unlerp(float4 a, float4 b, float4 x)
  double unlerp(double a, double b, double x)
  double2 unlerp(double2 a, double2 b, double2 x)
  double3 unlerp(double3 a, double3 b, double3 x)
  double4 unlerp(double4 a, double4 b, double4 x)
  float remap(float a, float b, float c, float d, float x)
  float2 remap(float2 a, float2 b, float2 c, float2 d, float2 x)
  float3 remap(float3 a, float3 b, float3 c, float3 d, float3 x)
  float4 remap(float4 a, float4 b, float4 c, float4 d, float4 x)
  double remap(double a, double b, double c, double d, double x)
  double2 remap(double2 a, double2 b, double2 c, double2 d, double2 x)
  double3 remap(double3 a, double3 b, double3 c, double3 d, double3 x)
  double4 remap(double4 a, double4 b, double4 c, double4 d, double4 x)
  int mad(int a, int b, int c)
  int2 mad(int2 a, int2 b, int2 c)
  int3 mad(int3 a, int3 b, int3 c)
  int4 mad(int4 a, int4 b, int4 c)
  UInt32 mad(UInt32 a, UInt32 b, UInt32 c)
  uint2 mad(uint2 a, uint2 b, uint2 c)
  uint3 mad(uint3 a, uint3 b, uint3 c)
  uint4 mad(uint4 a, uint4 b, uint4 c)
  long mad(long a, long b, long c)
  ulong mad(ulong a, ulong b, ulong c)
  float mad(float a, float b, float c)
  float2 mad(float2 a, float2 b, float2 c)
  float3 mad(float3 a, float3 b, float3 c)
  float4 mad(float4 a, float4 b, float4 c)
  double mad(double a, double b, double c)
  double2 mad(double2 a, double2 b, double2 c)
  double3 mad(double3 a, double3 b, double3 c)
  double4 mad(double4 a, double4 b, double4 c)
  int clamp(int x, int a, int b)
  int2 clamp(int2 x, int2 a, int2 b)
  int3 clamp(int3 x, int3 a, int3 b)
  int4 clamp(int4 x, int4 a, int4 b)
  UInt32 clamp(UInt32 x, UInt32 a, UInt32 b)
  uint2 clamp(uint2 x, uint2 a, uint2 b)
  uint3 clamp(uint3 x, uint3 a, uint3 b)
  uint4 clamp(uint4 x, uint4 a, uint4 b)
  long clamp(long x, long a, long b)
  ulong clamp(ulong x, ulong a, ulong b)
  float clamp(float x, float a, float b)
  float2 clamp(float2 x, float2 a, float2 b)
  float3 clamp(float3 x, float3 a, float3 b)
  float4 clamp(float4 x, float4 a, float4 b)
  double clamp(double x, double a, double b)
  double2 clamp(double2 x, double2 a, double2 b)
  double3 clamp(double3 x, double3 a, double3 b)
  double4 clamp(double4 x, double4 a, double4 b)
  float saturate(float x)
  float2 saturate(float2 x)
  float3 saturate(float3 x)
  float4 saturate(float4 x)
  double saturate(double x)
  double2 saturate(double2 x)
  double3 saturate(double3 x)
  double4 saturate(double4 x)
  int abs(int x)
  int2 abs(int2 x)
  int3 abs(int3 x)
  int4 abs(int4 x)
  long abs(long x)
  float abs(float x)
  float2 abs(float2 x)
  float3 abs(float3 x)
  float4 abs(float4 x)
  double abs(double x)
  double2 abs(double2 x)
  double3 abs(double3 x)
  double4 abs(double4 x)
  int dot(int x, int y)
  int dot(int2 x, int2 y)
  int dot(int3 x, int3 y)
  int dot(int4 x, int4 y)
  UInt32 dot(UInt32 x, UInt32 y)
  UInt32 dot(uint2 x, uint2 y)
  UInt32 dot(uint3 x, uint3 y)
  UInt32 dot(uint4 x, uint4 y)
  float dot(float x, float y)
  float dot(float2 x, float2 y)
  float dot(float3 x, float3 y)
  float dot(float4 x, float4 y)
  double dot(double x, double y)
  double dot(double2 x, double2 y)
  double dot(double3 x, double3 y)
  double dot(double4 x, double4 y)
  float tan(float x)
  float2 tan(float2 x)
  float3 tan(float3 x)
  float4 tan(float4 x)
  double tan(double x)
  double2 tan(double2 x)
  double3 tan(double3 x)
  double4 tan(double4 x)
  float tanh(float x)
  float2 tanh(float2 x)
  float3 tanh(float3 x)
  float4 tanh(float4 x)
  double tanh(double x)
  double2 tanh(double2 x)
  double3 tanh(double3 x)
  double4 tanh(double4 x)
  float atan(float x)
  float2 atan(float2 x)
  float3 atan(float3 x)
  float4 atan(float4 x)
  double atan(double x)
  double2 atan(double2 x)
  double3 atan(double3 x)
  double4 atan(double4 x)
  float atan2(float y, float x)
  float2 atan2(float2 y, float2 x)
  float3 atan2(float3 y, float3 x)
  float4 atan2(float4 y, float4 x)
  double atan2(double y, double x)
  double2 atan2(double2 y, double2 x)
  double3 atan2(double3 y, double3 x)
  double4 atan2(double4 y, double4 x)
  float cos(float x)
  float2 cos(float2 x)
  float3 cos(float3 x)
  float4 cos(float4 x)
  double cos(double x)
  double2 cos(double2 x)
  double3 cos(double3 x)
  double4 cos(double4 x)
  float cosh(float x)
  float2 cosh(float2 x)
  float3 cosh(float3 x)
  float4 cosh(float4 x)
  double cosh(double x)
  double2 cosh(double2 x)
  double3 cosh(double3 x)
  double4 cosh(double4 x)
  float acos(float x)
  float2 acos(float2 x)
  float3 acos(float3 x)
  float4 acos(float4 x)
  double acos(double x)
  double2 acos(double2 x)
  double3 acos(double3 x)
  double4 acos(double4 x)
  float sin(float x)
  float2 sin(float2 x)
  float3 sin(float3 x)
  float4 sin(float4 x)
  double sin(double x)
  double2 sin(double2 x)
  double3 sin(double3 x)
  double4 sin(double4 x)
  float sinh(float x)
  float2 sinh(float2 x)
  float3 sinh(float3 x)
  float4 sinh(float4 x)
  double sinh(double x)
  double2 sinh(double2 x)
  double3 sinh(double3 x)
  double4 sinh(double4 x)
  float asin(float x)
  float2 asin(float2 x)
  float3 asin(float3 x)
  float4 asin(float4 x)
  double asin(double x)
  double2 asin(double2 x)
  double3 asin(double3 x)
  double4 asin(double4 x)
  float floor(float x)
  float2 floor(float2 x)
  float3 floor(float3 x)
  float4 floor(float4 x)
  double floor(double x)
  double2 floor(double2 x)
  double3 floor(double3 x)
  double4 floor(double4 x)
  float ceil(float x)
  float2 ceil(float2 x)
  float3 ceil(float3 x)
  float4 ceil(float4 x)
  double ceil(double x)
  double2 ceil(double2 x)
  double3 ceil(double3 x)
  double4 ceil(double4 x)
  float round(float x)
  float2 round(float2 x)
  float3 round(float3 x)
  float4 round(float4 x)
  double round(double x)
  double2 round(double2 x)
  double3 round(double3 x)
  double4 round(double4 x)
  float trunc(float x)
  float2 trunc(float2 x)
  float3 trunc(float3 x)
  float4 trunc(float4 x)
  double trunc(double x)
  double2 trunc(double2 x)
  double3 trunc(double3 x)
  double4 trunc(double4 x)
  float frac(float x)
  float2 frac(float2 x)
  float3 frac(float3 x)
  float4 frac(float4 x)
  double frac(double x)
  double2 frac(double2 x)
  double3 frac(double3 x)
  double4 frac(double4 x)
  float rcp(float x)
  float2 rcp(float2 x)
  float3 rcp(float3 x)
  float4 rcp(float4 x)
  double rcp(double x)
  double2 rcp(double2 x)
  double3 rcp(double3 x)
  double4 rcp(double4 x)
  float sign(float x)
  float2 sign(float2 x)
  float3 sign(float3 x)
  float4 sign(float4 x)
  double sign(double x)
  double2 sign(double2 x)
  double3 sign(double3 x)
  double4 sign(double4 x)
  float pow(float x, float y)
  float2 pow(float2 x, float2 y)
  float3 pow(float3 x, float3 y)
  float4 pow(float4 x, float4 y)
  double pow(double x, double y)
  double2 pow(double2 x, double2 y)
  double3 pow(double3 x, double3 y)
  double4 pow(double4 x, double4 y)
  float exp(float x)
  float2 exp(float2 x)
  float3 exp(float3 x)
  float4 exp(float4 x)
  double exp(double x)
  double2 exp(double2 x)
  double3 exp(double3 x)
  double4 exp(double4 x)
  float exp2(float x)
  float2 exp2(float2 x)
  float3 exp2(float3 x)
  float4 exp2(float4 x)
  double exp2(double x)
  double2 exp2(double2 x)
  double3 exp2(double3 x)
  double4 exp2(double4 x)
  float exp10(float x)
  float2 exp10(float2 x)
  float3 exp10(float3 x)
  float4 exp10(float4 x)
  double exp10(double x)
  double2 exp10(double2 x)
  double3 exp10(double3 x)
  double4 exp10(double4 x)
  float log(float x)
  float2 log(float2 x)
  float3 log(float3 x)
  float4 log(float4 x)
  double log(double x)
  double2 log(double2 x)
  double3 log(double3 x)
  double4 log(double4 x)
  float log2(float x)
  float2 log2(float2 x)
  float3 log2(float3 x)
  float4 log2(float4 x)
  double log2(double x)
  double2 log2(double2 x)
  double3 log2(double3 x)
  double4 log2(double4 x)
  float log10(float x)
  float2 log10(float2 x)
  float3 log10(float3 x)
  float4 log10(float4 x)
  double log10(double x)
  double2 log10(double2 x)
  double3 log10(double3 x)
  double4 log10(double4 x)
  float fmod(float x, float y)
  float2 fmod(float2 x, float2 y)
  float3 fmod(float3 x, float3 y)
  float4 fmod(float4 x, float4 y)
  double fmod(double x, double y)
  double2 fmod(double2 x, double2 y)
  double3 fmod(double3 x, double3 y)
  double4 fmod(double4 x, double4 y)
  float modf(float x, Single& i)
  float2 modf(float2 x, float2& i)
  float3 modf(float3 x, float3& i)
  float4 modf(float4 x, float4& i)
  double modf(double x, Double& i)
  double2 modf(double2 x, double2& i)
  double3 modf(double3 x, double3& i)
  double4 modf(double4 x, double4& i)
  float sqrt(float x)
  float2 sqrt(float2 x)
  float3 sqrt(float3 x)
  float4 sqrt(float4 x)
  double sqrt(double x)
  double2 sqrt(double2 x)
  double3 sqrt(double3 x)
  double4 sqrt(double4 x)
  float rsqrt(float x)
  float2 rsqrt(float2 x)
  float3 rsqrt(float3 x)
  float4 rsqrt(float4 x)
  double rsqrt(double x)
  double2 rsqrt(double2 x)
  double3 rsqrt(double3 x)
  double4 rsqrt(double4 x)
  float2 normalize(float2 x)
  float3 normalize(float3 x)
  float4 normalize(float4 x)
  double2 normalize(double2 x)
  double3 normalize(double3 x)
  double4 normalize(double4 x)
  float2 normalizesafe(float2 x, float2 defaultvalue)
  float3 normalizesafe(float3 x, float3 defaultvalue)
  float4 normalizesafe(float4 x, float4 defaultvalue)
  double2 normalizesafe(double2 x, double2 defaultvalue)
  double3 normalizesafe(double3 x, double3 defaultvalue)
  double4 normalizesafe(double4 x, double4 defaultvalue)
  float length(float x)
  float length(float2 x)
  float length(float3 x)
  float length(float4 x)
  double length(double x)
  double length(double2 x)
  double length(double3 x)
  double length(double4 x)
  float lengthsq(float x)
  float lengthsq(float2 x)
  float lengthsq(float3 x)
  float lengthsq(float4 x)
  double lengthsq(double x)
  double lengthsq(double2 x)
  double lengthsq(double3 x)
  double lengthsq(double4 x)
  float distance(float x, float y)
  float distance(float2 x, float2 y)
  float distance(float3 x, float3 y)
  float distance(float4 x, float4 y)
  double distance(double x, double y)
  double distance(double2 x, double2 y)
  double distance(double3 x, double3 y)
  double distance(double4 x, double4 y)
  float distancesq(float x, float y)
  float distancesq(float2 x, float2 y)
  float distancesq(float3 x, float3 y)
  float distancesq(float4 x, float4 y)
  double distancesq(double x, double y)
  double distancesq(double2 x, double2 y)
  double distancesq(double3 x, double3 y)
  double distancesq(double4 x, double4 y)
  float3 cross(float3 x, float3 y)
  double3 cross(double3 x, double3 y)
  float smoothstep(float a, float b, float x)
  float2 smoothstep(float2 a, float2 b, float2 x)
  float3 smoothstep(float3 a, float3 b, float3 x)
  float4 smoothstep(float4 a, float4 b, float4 x)
  double smoothstep(double a, double b, double x)
  double2 smoothstep(double2 a, double2 b, double2 x)
  double3 smoothstep(double3 a, double3 b, double3 x)
  double4 smoothstep(double4 a, double4 b, double4 x)
  bool any(bool2 x)
  bool any(bool3 x)
  bool any(bool4 x)
  bool any(int2 x)
  bool any(int3 x)
  bool any(int4 x)
  bool any(uint2 x)
  bool any(uint3 x)
  bool any(uint4 x)
  bool any(float2 x)
  bool any(float3 x)
  bool any(float4 x)
  bool any(double2 x)
  bool any(double3 x)
  bool any(double4 x)
  bool all(bool2 x)
  bool all(bool3 x)
  bool all(bool4 x)
  bool all(int2 x)
  bool all(int3 x)
  bool all(int4 x)
  bool all(uint2 x)
  bool all(uint3 x)
  bool all(uint4 x)
  bool all(float2 x)
  bool all(float3 x)
  bool all(float4 x)
  bool all(double2 x)
  bool all(double3 x)
  bool all(double4 x)
  int select(int a, int b, bool c)
  int2 select(int2 a, int2 b, bool c)
  int3 select(int3 a, int3 b, bool c)
  int4 select(int4 a, int4 b, bool c)
  int2 select(int2 a, int2 b, bool2 c)
  int3 select(int3 a, int3 b, bool3 c)
  int4 select(int4 a, int4 b, bool4 c)
  UInt32 select(UInt32 a, UInt32 b, bool c)
  uint2 select(uint2 a, uint2 b, bool c)
  uint3 select(uint3 a, uint3 b, bool c)
  uint4 select(uint4 a, uint4 b, bool c)
  uint2 select(uint2 a, uint2 b, bool2 c)
  uint3 select(uint3 a, uint3 b, bool3 c)
  uint4 select(uint4 a, uint4 b, bool4 c)
  long select(long a, long b, bool c)
  ulong select(ulong a, ulong b, bool c)
  float select(float a, float b, bool c)
  float2 select(float2 a, float2 b, bool c)
  float3 select(float3 a, float3 b, bool c)
  float4 select(float4 a, float4 b, bool c)
  float2 select(float2 a, float2 b, bool2 c)
  float3 select(float3 a, float3 b, bool3 c)
  float4 select(float4 a, float4 b, bool4 c)
  double select(double a, double b, bool c)
  double2 select(double2 a, double2 b, bool c)
  double3 select(double3 a, double3 b, bool c)
  double4 select(double4 a, double4 b, bool c)
  double2 select(double2 a, double2 b, bool2 c)
  double3 select(double3 a, double3 b, bool3 c)
  double4 select(double4 a, double4 b, bool4 c)
  float step(float y, float x)
  float2 step(float2 y, float2 x)
  float3 step(float3 y, float3 x)
  float4 step(float4 y, float4 x)
  double step(double y, double x)
  double2 step(double2 y, double2 x)
  double3 step(double3 y, double3 x)
  double4 step(double4 y, double4 x)
  float2 reflect(float2 i, float2 n)
  float3 reflect(float3 i, float3 n)
  float4 reflect(float4 i, float4 n)
  double2 reflect(double2 i, double2 n)
  double3 reflect(double3 i, double3 n)
  double4 reflect(double4 i, double4 n)
  float2 refract(float2 i, float2 n, float eta)
  float3 refract(float3 i, float3 n, float eta)
  float4 refract(float4 i, float4 n, float eta)
  double2 refract(double2 i, double2 n, double eta)
  double3 refract(double3 i, double3 n, double eta)
  double4 refract(double4 i, double4 n, double eta)
  float2 project(float2 a, float2 b)
  float3 project(float3 a, float3 b)
  float4 project(float4 a, float4 b)
  float2 projectsafe(float2 a, float2 b, float2 defaultValue)
  float3 projectsafe(float3 a, float3 b, float3 defaultValue)
  float4 projectsafe(float4 a, float4 b, float4 defaultValue)
  double2 project(double2 a, double2 b)
  double3 project(double3 a, double3 b)
  double4 project(double4 a, double4 b)
  double2 projectsafe(double2 a, double2 b, double2 defaultValue)
  double3 projectsafe(double3 a, double3 b, double3 defaultValue)
  double4 projectsafe(double4 a, double4 b, double4 defaultValue)
  float2 faceforward(float2 n, float2 i, float2 ng)
  float3 faceforward(float3 n, float3 i, float3 ng)
  float4 faceforward(float4 n, float4 i, float4 ng)
  double2 faceforward(double2 n, double2 i, double2 ng)
  double3 faceforward(double3 n, double3 i, double3 ng)
  double4 faceforward(double4 n, double4 i, double4 ng)
  void sincos(float x, Single& s, Single& c)
  void sincos(float2 x, float2& s, float2& c)
  void sincos(float3 x, float3& s, float3& c)
  void sincos(float4 x, float4& s, float4& c)
  void sincos(double x, Double& s, Double& c)
  void sincos(double2 x, double2& s, double2& c)
  void sincos(double3 x, double3& s, double3& c)
  void sincos(double4 x, double4& s, double4& c)
  int countbits(int x)
  int2 countbits(int2 x)
  int3 countbits(int3 x)
  int4 countbits(int4 x)
  int countbits(UInt32 x)
  int2 countbits(uint2 x)
  int3 countbits(uint3 x)
  int4 countbits(uint4 x)
  int countbits(ulong x)
  int countbits(long x)
  int lzcnt(int x)
  int2 lzcnt(int2 x)
  int3 lzcnt(int3 x)
  int4 lzcnt(int4 x)
  int lzcnt(UInt32 x)
  int2 lzcnt(uint2 x)
  int3 lzcnt(uint3 x)
  int4 lzcnt(uint4 x)
  int lzcnt(long x)
  int lzcnt(ulong x)
  int tzcnt(int x)
  int2 tzcnt(int2 x)
  int3 tzcnt(int3 x)
  int4 tzcnt(int4 x)
  int tzcnt(UInt32 x)
  int2 tzcnt(uint2 x)
  int3 tzcnt(uint3 x)
  int4 tzcnt(uint4 x)
  int tzcnt(long x)
  int tzcnt(ulong x)
  int reversebits(int x)
  int2 reversebits(int2 x)
  int3 reversebits(int3 x)
  int4 reversebits(int4 x)
  UInt32 reversebits(UInt32 x)
  uint2 reversebits(uint2 x)
  uint3 reversebits(uint3 x)
  uint4 reversebits(uint4 x)
  long reversebits(long x)
  ulong reversebits(ulong x)
  int rol(int x, int n)
  int2 rol(int2 x, int n)
  int3 rol(int3 x, int n)
  int4 rol(int4 x, int n)
  UInt32 rol(UInt32 x, int n)
  uint2 rol(uint2 x, int n)
  uint3 rol(uint3 x, int n)
  uint4 rol(uint4 x, int n)
  long rol(long x, int n)
  ulong rol(ulong x, int n)
  int ror(int x, int n)
  int2 ror(int2 x, int n)
  int3 ror(int3 x, int n)
  int4 ror(int4 x, int n)
  UInt32 ror(UInt32 x, int n)
  uint2 ror(uint2 x, int n)
  uint3 ror(uint3 x, int n)
  uint4 ror(uint4 x, int n)
  long ror(long x, int n)
  ulong ror(ulong x, int n)
  int ceilpow2(int x)
  int2 ceilpow2(int2 x)
  int3 ceilpow2(int3 x)
  int4 ceilpow2(int4 x)
  UInt32 ceilpow2(UInt32 x)
  uint2 ceilpow2(uint2 x)
  uint3 ceilpow2(uint3 x)
  uint4 ceilpow2(uint4 x)
  long ceilpow2(long x)
  ulong ceilpow2(ulong x)
  int ceillog2(int x)
  int2 ceillog2(int2 x)
  int3 ceillog2(int3 x)
  int4 ceillog2(int4 x)
  int ceillog2(UInt32 x)
  int2 ceillog2(uint2 x)
  int3 ceillog2(uint3 x)
  int4 ceillog2(uint4 x)
  int floorlog2(int x)
  int2 floorlog2(int2 x)
  int3 floorlog2(int3 x)
  int4 floorlog2(int4 x)
  int floorlog2(UInt32 x)
  int2 floorlog2(uint2 x)
  int3 floorlog2(uint3 x)
  int4 floorlog2(uint4 x)
  float radians(float x)
  float2 radians(float2 x)
  float3 radians(float3 x)
  float4 radians(float4 x)
  double radians(double x)
  double2 radians(double2 x)
  double3 radians(double3 x)
  double4 radians(double4 x)
  float degrees(float x)
  float2 degrees(float2 x)
  float3 degrees(float3 x)
  float4 degrees(float4 x)
  double degrees(double x)
  double2 degrees(double2 x)
  double3 degrees(double3 x)
  double4 degrees(double4 x)
  int cmin(int2 x)
  int cmin(int3 x)
  int cmin(int4 x)
  UInt32 cmin(uint2 x)
  UInt32 cmin(uint3 x)
  UInt32 cmin(uint4 x)
  float cmin(float2 x)
  float cmin(float3 x)
  float cmin(float4 x)
  double cmin(double2 x)
  double cmin(double3 x)
  double cmin(double4 x)
  int cmax(int2 x)
  int cmax(int3 x)
  int cmax(int4 x)
  UInt32 cmax(uint2 x)
  UInt32 cmax(uint3 x)
  UInt32 cmax(uint4 x)
  float cmax(float2 x)
  float cmax(float3 x)
  float cmax(float4 x)
  double cmax(double2 x)
  double cmax(double3 x)
  double cmax(double4 x)
  int csum(int2 x)
  int csum(int3 x)
  int csum(int4 x)
  UInt32 csum(uint2 x)
  UInt32 csum(uint3 x)
  UInt32 csum(uint4 x)
  float csum(float2 x)
  float csum(float3 x)
  float csum(float4 x)
  double csum(double2 x)
  double csum(double3 x)
  double csum(double4 x)
  int compress(Int32* output, int index, int4 val, bool4 mask)
  int compress(UInt32* output, int index, uint4 val, bool4 mask)
  int compress(Single* output, int index, float4 val, bool4 mask)
  float f16tof32(UInt32 x)
  float2 f16tof32(uint2 x)
  float3 f16tof32(uint3 x)
  float4 f16tof32(uint4 x)
  UInt32 f32tof16(float x)
  uint2 f32tof16(float2 x)
  uint3 f32tof16(float3 x)
  uint4 f32tof16(float4 x)
  UInt32 hash(Void* pBuffer, int numBytes, UInt32 seed)
  float3 up()
  float3 down()
  float3 forward()
  float3 back()
  float3 left()
  float3 right()
  float4 unpacklo(float4 a, float4 b)
  double4 unpacklo(double4 a, double4 b)
  float4 unpackhi(float4 a, float4 b)
  double4 unpackhi(double4 a, double4 b)
  float4 movelh(float4 a, float4 b)
  double4 movelh(double4 a, double4 b)
  float4 movehl(float4 a, float4 b)
  double4 movehl(double4 a, double4 b)
  UInt32 fold_to_uint(double x)
  uint2 fold_to_uint(double2 x)
  uint3 fold_to_uint(double3 x)
  uint4 fold_to_uint(double4 x)
  float3x3 float3x3(float4x4 f4x4)
  float3x3 float3x3(quaternion rotation)
  float4x4 float4x4(float3x3 rotation, float3 translation)
  float4x4 float4x4(quaternion rotation, float3 translation)
  float4x4 float4x4(RigidTransform transform)
  float3x3 orthonormalize(float3x3 i)
  float mul(float a, float b)
  float mul(float2 a, float2 b)
  float2 mul(float2 a, float2x2 b)
  float3 mul(float2 a, float2x3 b)
  float4 mul(float2 a, float2x4 b)
  float mul(float3 a, float3 b)
  float2 mul(float3 a, float3x2 b)
  float3 mul(float3 a, float3x3 b)
  float4 mul(float3 a, float3x4 b)
  float mul(float4 a, float4 b)
  float2 mul(float4 a, float4x2 b)
  float3 mul(float4 a, float4x3 b)
  float4 mul(float4 a, float4x4 b)
  float2 mul(float2x2 a, float2 b)
  float2x2 mul(float2x2 a, float2x2 b)
  float2x3 mul(float2x2 a, float2x3 b)
  float2x4 mul(float2x2 a, float2x4 b)
  float2 mul(float2x3 a, float3 b)
  float2x2 mul(float2x3 a, float3x2 b)
  float2x3 mul(float2x3 a, float3x3 b)
  float2x4 mul(float2x3 a, float3x4 b)
  float2 mul(float2x4 a, float4 b)
  float2x2 mul(float2x4 a, float4x2 b)
  float2x3 mul(float2x4 a, float4x3 b)
  float2x4 mul(float2x4 a, float4x4 b)
  float3 mul(float3x2 a, float2 b)
  float3x2 mul(float3x2 a, float2x2 b)
  float3x3 mul(float3x2 a, float2x3 b)
  float3x4 mul(float3x2 a, float2x4 b)
  float3 mul(float3x3 a, float3 b)
  float3x2 mul(float3x3 a, float3x2 b)
  float3x3 mul(float3x3 a, float3x3 b)
  float3x4 mul(float3x3 a, float3x4 b)
  float3 mul(float3x4 a, float4 b)
  float3x2 mul(float3x4 a, float4x2 b)
  float3x3 mul(float3x4 a, float4x3 b)
  float3x4 mul(float3x4 a, float4x4 b)
  float4 mul(float4x2 a, float2 b)
  float4x2 mul(float4x2 a, float2x2 b)
  float4x3 mul(float4x2 a, float2x3 b)
  float4x4 mul(float4x2 a, float2x4 b)
  float4 mul(float4x3 a, float3 b)
  float4x2 mul(float4x3 a, float3x2 b)
  float4x3 mul(float4x3 a, float3x3 b)
  float4x4 mul(float4x3 a, float3x4 b)
  float4 mul(float4x4 a, float4 b)
  float4x2 mul(float4x4 a, float4x2 b)
  float4x3 mul(float4x4 a, float4x3 b)
  float4x4 mul(float4x4 a, float4x4 b)
  double mul(double a, double b)
  double mul(double2 a, double2 b)
  double2 mul(double2 a, double2x2 b)
  double3 mul(double2 a, double2x3 b)
  double4 mul(double2 a, double2x4 b)
  double mul(double3 a, double3 b)
  double2 mul(double3 a, double3x2 b)
  double3 mul(double3 a, double3x3 b)
  double4 mul(double3 a, double3x4 b)
  double mul(double4 a, double4 b)
  double2 mul(double4 a, double4x2 b)
  double3 mul(double4 a, double4x3 b)
  double4 mul(double4 a, double4x4 b)
  double2 mul(double2x2 a, double2 b)
  double2x2 mul(double2x2 a, double2x2 b)
  double2x3 mul(double2x2 a, double2x3 b)
  double2x4 mul(double2x2 a, double2x4 b)
  double2 mul(double2x3 a, double3 b)
  double2x2 mul(double2x3 a, double3x2 b)
  double2x3 mul(double2x3 a, double3x3 b)
  double2x4 mul(double2x3 a, double3x4 b)
  double2 mul(double2x4 a, double4 b)
  double2x2 mul(double2x4 a, double4x2 b)
  double2x3 mul(double2x4 a, double4x3 b)
  double2x4 mul(double2x4 a, double4x4 b)
  double3 mul(double3x2 a, double2 b)
  double3x2 mul(double3x2 a, double2x2 b)
  double3x3 mul(double3x2 a, double2x3 b)
  double3x4 mul(double3x2 a, double2x4 b)
  double3 mul(double3x3 a, double3 b)
  double3x2 mul(double3x3 a, double3x2 b)
  double3x3 mul(double3x3 a, double3x3 b)
  double3x4 mul(double3x3 a, double3x4 b)
  double3 mul(double3x4 a, double4 b)
  double3x2 mul(double3x4 a, double4x2 b)
  double3x3 mul(double3x4 a, double4x3 b)
  double3x4 mul(double3x4 a, double4x4 b)
  double4 mul(double4x2 a, double2 b)
  double4x2 mul(double4x2 a, double2x2 b)
  double4x3 mul(double4x2 a, double2x3 b)
  double4x4 mul(double4x2 a, double2x4 b)
  double4 mul(double4x3 a, double3 b)
  double4x2 mul(double4x3 a, double3x2 b)
  double4x3 mul(double4x3 a, double3x3 b)
  double4x4 mul(double4x3 a, double3x4 b)
  double4 mul(double4x4 a, double4 b)
  double4x2 mul(double4x4 a, double4x2 b)
  double4x3 mul(double4x4 a, double4x3 b)
  double4x4 mul(double4x4 a, double4x4 b)
  int mul(int a, int b)
  int mul(int2 a, int2 b)
  int2 mul(int2 a, int2x2 b)
  int3 mul(int2 a, int2x3 b)
  int4 mul(int2 a, int2x4 b)
  int mul(int3 a, int3 b)
  int2 mul(int3 a, int3x2 b)
  int3 mul(int3 a, int3x3 b)
  int4 mul(int3 a, int3x4 b)
  int mul(int4 a, int4 b)
  int2 mul(int4 a, int4x2 b)
  int3 mul(int4 a, int4x3 b)
  int4 mul(int4 a, int4x4 b)
  int2 mul(int2x2 a, int2 b)
  int2x2 mul(int2x2 a, int2x2 b)
  int2x3 mul(int2x2 a, int2x3 b)
  int2x4 mul(int2x2 a, int2x4 b)
  int2 mul(int2x3 a, int3 b)
  int2x2 mul(int2x3 a, int3x2 b)
  int2x3 mul(int2x3 a, int3x3 b)
  int2x4 mul(int2x3 a, int3x4 b)
  int2 mul(int2x4 a, int4 b)
  int2x2 mul(int2x4 a, int4x2 b)
  int2x3 mul(int2x4 a, int4x3 b)
  int2x4 mul(int2x4 a, int4x4 b)
  int3 mul(int3x2 a, int2 b)
  int3x2 mul(int3x2 a, int2x2 b)
  int3x3 mul(int3x2 a, int2x3 b)
  int3x4 mul(int3x2 a, int2x4 b)
  int3 mul(int3x3 a, int3 b)
  int3x2 mul(int3x3 a, int3x2 b)
  int3x3 mul(int3x3 a, int3x3 b)
  int3x4 mul(int3x3 a, int3x4 b)
  int3 mul(int3x4 a, int4 b)
  int3x2 mul(int3x4 a, int4x2 b)
  int3x3 mul(int3x4 a, int4x3 b)
  int3x4 mul(int3x4 a, int4x4 b)
  int4 mul(int4x2 a, int2 b)
  int4x2 mul(int4x2 a, int2x2 b)
  int4x3 mul(int4x2 a, int2x3 b)
  int4x4 mul(int4x2 a, int2x4 b)
  int4 mul(int4x3 a, int3 b)
  int4x2 mul(int4x3 a, int3x2 b)
  int4x3 mul(int4x3 a, int3x3 b)
  int4x4 mul(int4x3 a, int3x4 b)
  int4 mul(int4x4 a, int4 b)
  int4x2 mul(int4x4 a, int4x2 b)
  int4x3 mul(int4x4 a, int4x3 b)
  int4x4 mul(int4x4 a, int4x4 b)
  UInt32 mul(UInt32 a, UInt32 b)
  UInt32 mul(uint2 a, uint2 b)
  uint2 mul(uint2 a, uint2x2 b)
  uint3 mul(uint2 a, uint2x3 b)
  uint4 mul(uint2 a, uint2x4 b)
  UInt32 mul(uint3 a, uint3 b)
  uint2 mul(uint3 a, uint3x2 b)
  uint3 mul(uint3 a, uint3x3 b)
  uint4 mul(uint3 a, uint3x4 b)
  UInt32 mul(uint4 a, uint4 b)
  uint2 mul(uint4 a, uint4x2 b)
  uint3 mul(uint4 a, uint4x3 b)
  uint4 mul(uint4 a, uint4x4 b)
  uint2 mul(uint2x2 a, uint2 b)
  uint2x2 mul(uint2x2 a, uint2x2 b)
  uint2x3 mul(uint2x2 a, uint2x3 b)
  uint2x4 mul(uint2x2 a, uint2x4 b)
  uint2 mul(uint2x3 a, uint3 b)
  uint2x2 mul(uint2x3 a, uint3x2 b)
  uint2x3 mul(uint2x3 a, uint3x3 b)
  uint2x4 mul(uint2x3 a, uint3x4 b)
  uint2 mul(uint2x4 a, uint4 b)
  uint2x2 mul(uint2x4 a, uint4x2 b)
  uint2x3 mul(uint2x4 a, uint4x3 b)
  uint2x4 mul(uint2x4 a, uint4x4 b)
  uint3 mul(uint3x2 a, uint2 b)
  uint3x2 mul(uint3x2 a, uint2x2 b)
  uint3x3 mul(uint3x2 a, uint2x3 b)
  uint3x4 mul(uint3x2 a, uint2x4 b)
  uint3 mul(uint3x3 a, uint3 b)
  uint3x2 mul(uint3x3 a, uint3x2 b)
  uint3x3 mul(uint3x3 a, uint3x3 b)
  uint3x4 mul(uint3x3 a, uint3x4 b)
  uint3 mul(uint3x4 a, uint4 b)
  uint3x2 mul(uint3x4 a, uint4x2 b)
  uint3x3 mul(uint3x4 a, uint4x3 b)
  uint3x4 mul(uint3x4 a, uint4x4 b)
  uint4 mul(uint4x2 a, uint2 b)
  uint4x2 mul(uint4x2 a, uint2x2 b)
  uint4x3 mul(uint4x2 a, uint2x3 b)
  uint4x4 mul(uint4x2 a, uint2x4 b)
  uint4 mul(uint4x3 a, uint3 b)
  uint4x2 mul(uint4x3 a, uint3x2 b)
  uint4x3 mul(uint4x3 a, uint3x3 b)
  uint4x4 mul(uint4x3 a, uint3x4 b)
  uint4 mul(uint4x4 a, uint4 b)
  uint4x2 mul(uint4x4 a, uint4x2 b)
  uint4x3 mul(uint4x4 a, uint4x3 b)
  uint4x4 mul(uint4x4 a, uint4x4 b)
  quaternion quaternion(float x, float y, float z, float w)
  quaternion quaternion(float4 value)
  quaternion quaternion(float3x3 m)
  quaternion quaternion(float4x4 m)
  quaternion conjugate(quaternion q)
  quaternion inverse(quaternion q)
  float dot(quaternion a, quaternion b)
  float length(quaternion q)
  float lengthsq(quaternion q)
  quaternion normalize(quaternion q)
  quaternion normalizesafe(quaternion q)
  quaternion normalizesafe(quaternion q, quaternion defaultvalue)
  quaternion unitexp(quaternion q)
  quaternion exp(quaternion q)
  quaternion unitlog(quaternion q)
  quaternion log(quaternion q)
  quaternion mul(quaternion a, quaternion b)
  float3 mul(quaternion q, float3 v)
  float3 rotate(quaternion q, float3 v)
  quaternion nlerp(quaternion q1, quaternion q2, float t)
  quaternion slerp(quaternion q1, quaternion q2, float t)
  UInt32 hash(quaternion q)
  uint4 hashwide(quaternion q)
  float3 forward(quaternion q)
  RigidTransform RigidTransform(quaternion rot, float3 pos)
  RigidTransform RigidTransform(float3x3 rotation, float3 translation)
  RigidTransform RigidTransform(float4x4 transform)
  RigidTransform inverse(RigidTransform t)
  RigidTransform mul(RigidTransform a, RigidTransform b)
  float4 mul(RigidTransform a, float4 pos)
  float3 rotate(RigidTransform a, float3 dir)
  float3 transform(RigidTransform a, float3 pos)
  UInt32 hash(RigidTransform t)
  uint4 hashwide(RigidTransform t)
  uint2 uint2(UInt32 x, UInt32 y)
  uint2 uint2(uint2 xy)
  uint2 uint2(UInt32 v)
  uint2 uint2(bool v)
  uint2 uint2(bool2 v)
  uint2 uint2(int v)
  uint2 uint2(int2 v)
  uint2 uint2(float v)
  uint2 uint2(float2 v)
  uint2 uint2(double v)
  uint2 uint2(double2 v)
  UInt32 hash(uint2 v)
  uint2 hashwide(uint2 v)
  UInt32 shuffle(uint2 left, uint2 right, ShuffleComponent x)
  uint2 shuffle(uint2 left, uint2 right, ShuffleComponent x, ShuffleComponent y)
  uint3 shuffle(uint2 left, uint2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  uint4 shuffle(uint2 left, uint2 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  UInt32 select_shuffle_component(uint2 a, uint2 b, ShuffleComponent component)
  uint2x2 uint2x2(uint2 c0, uint2 c1)
  uint2x2 uint2x2(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11)
  uint2x2 uint2x2(UInt32 v)
  uint2x2 uint2x2(bool v)
  uint2x2 uint2x2(bool2x2 v)
  uint2x2 uint2x2(int v)
  uint2x2 uint2x2(int2x2 v)
  uint2x2 uint2x2(float v)
  uint2x2 uint2x2(float2x2 v)
  uint2x2 uint2x2(double v)
  uint2x2 uint2x2(double2x2 v)
  uint2x2 transpose(uint2x2 v)
  UInt32 hash(uint2x2 v)
  uint2 hashwide(uint2x2 v)
  uint2x3 uint2x3(uint2 c0, uint2 c1, uint2 c2)
  uint2x3 uint2x3(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12)
  uint2x3 uint2x3(UInt32 v)
  uint2x3 uint2x3(bool v)
  uint2x3 uint2x3(bool2x3 v)
  uint2x3 uint2x3(int v)
  uint2x3 uint2x3(int2x3 v)
  uint2x3 uint2x3(float v)
  uint2x3 uint2x3(float2x3 v)
  uint2x3 uint2x3(double v)
  uint2x3 uint2x3(double2x3 v)
  uint3x2 transpose(uint2x3 v)
  UInt32 hash(uint2x3 v)
  uint2 hashwide(uint2x3 v)
  uint2x4 uint2x4(uint2 c0, uint2 c1, uint2 c2, uint2 c3)
  uint2x4 uint2x4(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13)
  uint2x4 uint2x4(UInt32 v)
  uint2x4 uint2x4(bool v)
  uint2x4 uint2x4(bool2x4 v)
  uint2x4 uint2x4(int v)
  uint2x4 uint2x4(int2x4 v)
  uint2x4 uint2x4(float v)
  uint2x4 uint2x4(float2x4 v)
  uint2x4 uint2x4(double v)
  uint2x4 uint2x4(double2x4 v)
  uint4x2 transpose(uint2x4 v)
  UInt32 hash(uint2x4 v)
  uint2 hashwide(uint2x4 v)
  uint3 uint3(UInt32 x, UInt32 y, UInt32 z)
  uint3 uint3(UInt32 x, uint2 yz)
  uint3 uint3(uint2 xy, UInt32 z)
  uint3 uint3(uint3 xyz)
  uint3 uint3(UInt32 v)
  uint3 uint3(bool v)
  uint3 uint3(bool3 v)
  uint3 uint3(int v)
  uint3 uint3(int3 v)
  uint3 uint3(float v)
  uint3 uint3(float3 v)
  uint3 uint3(double v)
  uint3 uint3(double3 v)
  UInt32 hash(uint3 v)
  uint3 hashwide(uint3 v)
  UInt32 shuffle(uint3 left, uint3 right, ShuffleComponent x)
  uint2 shuffle(uint3 left, uint3 right, ShuffleComponent x, ShuffleComponent y)
  uint3 shuffle(uint3 left, uint3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  uint4 shuffle(uint3 left, uint3 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  UInt32 select_shuffle_component(uint3 a, uint3 b, ShuffleComponent component)
  uint3x2 uint3x2(uint3 c0, uint3 c1)
  uint3x2 uint3x2(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21)
  uint3x2 uint3x2(UInt32 v)
  uint3x2 uint3x2(bool v)
  uint3x2 uint3x2(bool3x2 v)
  uint3x2 uint3x2(int v)
  uint3x2 uint3x2(int3x2 v)
  uint3x2 uint3x2(float v)
  uint3x2 uint3x2(float3x2 v)
  uint3x2 uint3x2(double v)
  uint3x2 uint3x2(double3x2 v)
  uint2x3 transpose(uint3x2 v)
  UInt32 hash(uint3x2 v)
  uint3 hashwide(uint3x2 v)
  uint3x3 uint3x3(uint3 c0, uint3 c1, uint3 c2)
  uint3x3 uint3x3(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22)
  uint3x3 uint3x3(UInt32 v)
  uint3x3 uint3x3(bool v)
  uint3x3 uint3x3(bool3x3 v)
  uint3x3 uint3x3(int v)
  uint3x3 uint3x3(int3x3 v)
  uint3x3 uint3x3(float v)
  uint3x3 uint3x3(float3x3 v)
  uint3x3 uint3x3(double v)
  uint3x3 uint3x3(double3x3 v)
  uint3x3 transpose(uint3x3 v)
  UInt32 hash(uint3x3 v)
  uint3 hashwide(uint3x3 v)
  uint3x4 uint3x4(uint3 c0, uint3 c1, uint3 c2, uint3 c3)
  uint3x4 uint3x4(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23)
  uint3x4 uint3x4(UInt32 v)
  uint3x4 uint3x4(bool v)
  uint3x4 uint3x4(bool3x4 v)
  uint3x4 uint3x4(int v)
  uint3x4 uint3x4(int3x4 v)
  uint3x4 uint3x4(float v)
  uint3x4 uint3x4(float3x4 v)
  uint3x4 uint3x4(double v)
  uint3x4 uint3x4(double3x4 v)
  uint4x3 transpose(uint3x4 v)
  UInt32 hash(uint3x4 v)
  uint3 hashwide(uint3x4 v)
  uint4 uint4(UInt32 x, UInt32 y, UInt32 z, UInt32 w)
  uint4 uint4(UInt32 x, UInt32 y, uint2 zw)
  uint4 uint4(UInt32 x, uint2 yz, UInt32 w)
  uint4 uint4(UInt32 x, uint3 yzw)
  uint4 uint4(uint2 xy, UInt32 z, UInt32 w)
  uint4 uint4(uint2 xy, uint2 zw)
  uint4 uint4(uint3 xyz, UInt32 w)
  uint4 uint4(uint4 xyzw)
  uint4 uint4(UInt32 v)
  uint4 uint4(bool v)
  uint4 uint4(bool4 v)
  uint4 uint4(int v)
  uint4 uint4(int4 v)
  uint4 uint4(float v)
  uint4 uint4(float4 v)
  uint4 uint4(double v)
  uint4 uint4(double4 v)
  UInt32 hash(uint4 v)
  uint4 hashwide(uint4 v)
  UInt32 shuffle(uint4 left, uint4 right, ShuffleComponent x)
  uint2 shuffle(uint4 left, uint4 right, ShuffleComponent x, ShuffleComponent y)
  uint3 shuffle(uint4 left, uint4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z)
  uint4 shuffle(uint4 left, uint4 right, ShuffleComponent x, ShuffleComponent y, ShuffleComponent z, ShuffleComponent w)
  UInt32 select_shuffle_component(uint4 a, uint4 b, ShuffleComponent component)
  uint4x2 uint4x2(uint4 c0, uint4 c1)
  uint4x2 uint4x2(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21, UInt32 m30, UInt32 m31)
  uint4x2 uint4x2(UInt32 v)
  uint4x2 uint4x2(bool v)
  uint4x2 uint4x2(bool4x2 v)
  uint4x2 uint4x2(int v)
  uint4x2 uint4x2(int4x2 v)
  uint4x2 uint4x2(float v)
  uint4x2 uint4x2(float4x2 v)
  uint4x2 uint4x2(double v)
  uint4x2 uint4x2(double4x2 v)
  uint2x4 transpose(uint4x2 v)
  UInt32 hash(uint4x2 v)
  uint4 hashwide(uint4x2 v)
  uint4x3 uint4x3(uint4 c0, uint4 c1, uint4 c2)
  uint4x3 uint4x3(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m30, UInt32 m31, UInt32 m32)
  uint4x3 uint4x3(UInt32 v)
  uint4x3 uint4x3(bool v)
  uint4x3 uint4x3(bool4x3 v)
  uint4x3 uint4x3(int v)
  uint4x3 uint4x3(int4x3 v)
  uint4x3 uint4x3(float v)
  uint4x3 uint4x3(float4x3 v)
  uint4x3 uint4x3(double v)
  uint4x3 uint4x3(double4x3 v)
  uint3x4 transpose(uint4x3 v)
  UInt32 hash(uint4x3 v)
  uint4 hashwide(uint4x3 v)
  uint4x4 uint4x4(uint4 c0, uint4 c1, uint4 c2, uint4 c3)
  uint4x4 uint4x4(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23, UInt32 m30, UInt32 m31, UInt32 m32, UInt32 m33)
  uint4x4 uint4x4(UInt32 v)
  uint4x4 uint4x4(bool v)
  uint4x4 uint4x4(bool4x4 v)
  uint4x4 uint4x4(int v)
  uint4x4 uint4x4(int4x4 v)
  uint4x4 uint4x4(float v)
  uint4x4 uint4x4(float4x4 v)
  uint4x4 uint4x4(double v)
  uint4x4 uint4x4(double4x4 v)
  uint4x4 transpose(uint4x4 v)
  UInt32 hash(uint4x4 v)
  uint4 hashwide(uint4x4 v)
--------------------------------------------------
Класс: Unity.Mathematics.bool2x2
Наследуется от: ValueType
Поля:
  bool2 c0
  bool2 c1
Свойства:
  bool2& Item
Методы:
  void .ctor(bool2 c0, bool2 c1)
  void .ctor(bool m00, bool m01, bool m10, bool m11)
  void .ctor(bool v)
  bool2x2 op_Implicit(bool v)
  bool2x2 op_Equality(bool2x2 lhs, bool2x2 rhs)
  bool2x2 op_Equality(bool2x2 lhs, bool rhs)
  bool2x2 op_Equality(bool lhs, bool2x2 rhs)
  bool2x2 op_Inequality(bool2x2 lhs, bool2x2 rhs)
  bool2x2 op_Inequality(bool2x2 lhs, bool rhs)
  bool2x2 op_Inequality(bool lhs, bool2x2 rhs)
  bool2x2 op_LogicalNot(bool2x2 val)
  bool2x2 op_BitwiseAnd(bool2x2 lhs, bool2x2 rhs)
  bool2x2 op_BitwiseAnd(bool2x2 lhs, bool rhs)
  bool2x2 op_BitwiseAnd(bool lhs, bool2x2 rhs)
  bool2x2 op_BitwiseOr(bool2x2 lhs, bool2x2 rhs)
  bool2x2 op_BitwiseOr(bool2x2 lhs, bool rhs)
  bool2x2 op_BitwiseOr(bool lhs, bool2x2 rhs)
  bool2x2 op_ExclusiveOr(bool2x2 lhs, bool2x2 rhs)
  bool2x2 op_ExclusiveOr(bool2x2 lhs, bool rhs)
  bool2x2 op_ExclusiveOr(bool lhs, bool2x2 rhs)
  bool2& get_Item(int index)
  bool Equals(bool2x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool2x3
Наследуется от: ValueType
Поля:
  bool2 c0
  bool2 c1
  bool2 c2
Свойства:
  bool2& Item
Методы:
  void .ctor(bool2 c0, bool2 c1, bool2 c2)
  void .ctor(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12)
  void .ctor(bool v)
  bool2x3 op_Implicit(bool v)
  bool2x3 op_Equality(bool2x3 lhs, bool2x3 rhs)
  bool2x3 op_Equality(bool2x3 lhs, bool rhs)
  bool2x3 op_Equality(bool lhs, bool2x3 rhs)
  bool2x3 op_Inequality(bool2x3 lhs, bool2x3 rhs)
  bool2x3 op_Inequality(bool2x3 lhs, bool rhs)
  bool2x3 op_Inequality(bool lhs, bool2x3 rhs)
  bool2x3 op_LogicalNot(bool2x3 val)
  bool2x3 op_BitwiseAnd(bool2x3 lhs, bool2x3 rhs)
  bool2x3 op_BitwiseAnd(bool2x3 lhs, bool rhs)
  bool2x3 op_BitwiseAnd(bool lhs, bool2x3 rhs)
  bool2x3 op_BitwiseOr(bool2x3 lhs, bool2x3 rhs)
  bool2x3 op_BitwiseOr(bool2x3 lhs, bool rhs)
  bool2x3 op_BitwiseOr(bool lhs, bool2x3 rhs)
  bool2x3 op_ExclusiveOr(bool2x3 lhs, bool2x3 rhs)
  bool2x3 op_ExclusiveOr(bool2x3 lhs, bool rhs)
  bool2x3 op_ExclusiveOr(bool lhs, bool2x3 rhs)
  bool2& get_Item(int index)
  bool Equals(bool2x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool2x4
Наследуется от: ValueType
Поля:
  bool2 c0
  bool2 c1
  bool2 c2
  bool2 c3
Свойства:
  bool2& Item
Методы:
  void .ctor(bool2 c0, bool2 c1, bool2 c2, bool2 c3)
  void .ctor(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13)
  void .ctor(bool v)
  bool2x4 op_Implicit(bool v)
  bool2x4 op_Equality(bool2x4 lhs, bool2x4 rhs)
  bool2x4 op_Equality(bool2x4 lhs, bool rhs)
  bool2x4 op_Equality(bool lhs, bool2x4 rhs)
  bool2x4 op_Inequality(bool2x4 lhs, bool2x4 rhs)
  bool2x4 op_Inequality(bool2x4 lhs, bool rhs)
  bool2x4 op_Inequality(bool lhs, bool2x4 rhs)
  bool2x4 op_LogicalNot(bool2x4 val)
  bool2x4 op_BitwiseAnd(bool2x4 lhs, bool2x4 rhs)
  bool2x4 op_BitwiseAnd(bool2x4 lhs, bool rhs)
  bool2x4 op_BitwiseAnd(bool lhs, bool2x4 rhs)
  bool2x4 op_BitwiseOr(bool2x4 lhs, bool2x4 rhs)
  bool2x4 op_BitwiseOr(bool2x4 lhs, bool rhs)
  bool2x4 op_BitwiseOr(bool lhs, bool2x4 rhs)
  bool2x4 op_ExclusiveOr(bool2x4 lhs, bool2x4 rhs)
  bool2x4 op_ExclusiveOr(bool2x4 lhs, bool rhs)
  bool2x4 op_ExclusiveOr(bool lhs, bool2x4 rhs)
  bool2& get_Item(int index)
  bool Equals(bool2x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool3
Наследуется от: ValueType
Поля:
  bool x
  bool y
  bool z
Свойства:
  bool4 xxxx
  bool4 xxxy
  bool4 xxxz
  bool4 xxyx
  bool4 xxyy
  bool4 xxyz
  bool4 xxzx
  bool4 xxzy
  bool4 xxzz
  bool4 xyxx
  bool4 xyxy
  bool4 xyxz
  bool4 xyyx
  bool4 xyyy
  bool4 xyyz
  bool4 xyzx
  bool4 xyzy
  bool4 xyzz
  bool4 xzxx
  bool4 xzxy
  bool4 xzxz
  bool4 xzyx
  bool4 xzyy
  bool4 xzyz
  bool4 xzzx
  bool4 xzzy
  bool4 xzzz
  bool4 yxxx
  bool4 yxxy
  bool4 yxxz
  bool4 yxyx
  bool4 yxyy
  bool4 yxyz
  bool4 yxzx
  bool4 yxzy
  bool4 yxzz
  bool4 yyxx
  bool4 yyxy
  bool4 yyxz
  bool4 yyyx
  bool4 yyyy
  bool4 yyyz
  bool4 yyzx
  bool4 yyzy
  bool4 yyzz
  bool4 yzxx
  bool4 yzxy
  bool4 yzxz
  bool4 yzyx
  bool4 yzyy
  bool4 yzyz
  bool4 yzzx
  bool4 yzzy
  bool4 yzzz
  bool4 zxxx
  bool4 zxxy
  bool4 zxxz
  bool4 zxyx
  bool4 zxyy
  bool4 zxyz
  bool4 zxzx
  bool4 zxzy
  bool4 zxzz
  bool4 zyxx
  bool4 zyxy
  bool4 zyxz
  bool4 zyyx
  bool4 zyyy
  bool4 zyyz
  bool4 zyzx
  bool4 zyzy
  bool4 zyzz
  bool4 zzxx
  bool4 zzxy
  bool4 zzxz
  bool4 zzyx
  bool4 zzyy
  bool4 zzyz
  bool4 zzzx
  bool4 zzzy
  bool4 zzzz
  bool3 xxx
  bool3 xxy
  bool3 xxz
  bool3 xyx
  bool3 xyy
  bool3 xyz
  bool3 xzx
  bool3 xzy
  bool3 xzz
  bool3 yxx
  bool3 yxy
  bool3 yxz
  bool3 yyx
  bool3 yyy
  bool3 yyz
  bool3 yzx
  bool3 yzy
  bool3 yzz
  bool3 zxx
  bool3 zxy
  bool3 zxz
  bool3 zyx
  bool3 zyy
  bool3 zyz
  bool3 zzx
  bool3 zzy
  bool3 zzz
  bool2 xx
  bool2 xy
  bool2 xz
  bool2 yx
  bool2 yy
  bool2 yz
  bool2 zx
  bool2 zy
  bool2 zz
  bool Item
Методы:
  void .ctor(bool x, bool y, bool z)
  void .ctor(bool x, bool2 yz)
  void .ctor(bool2 xy, bool z)
  void .ctor(bool3 xyz)
  void .ctor(bool v)
  bool3 op_Implicit(bool v)
  bool3 op_Equality(bool3 lhs, bool3 rhs)
  bool3 op_Equality(bool3 lhs, bool rhs)
  bool3 op_Equality(bool lhs, bool3 rhs)
  bool3 op_Inequality(bool3 lhs, bool3 rhs)
  bool3 op_Inequality(bool3 lhs, bool rhs)
  bool3 op_Inequality(bool lhs, bool3 rhs)
  bool3 op_LogicalNot(bool3 val)
  bool3 op_BitwiseAnd(bool3 lhs, bool3 rhs)
  bool3 op_BitwiseAnd(bool3 lhs, bool rhs)
  bool3 op_BitwiseAnd(bool lhs, bool3 rhs)
  bool3 op_BitwiseOr(bool3 lhs, bool3 rhs)
  bool3 op_BitwiseOr(bool3 lhs, bool rhs)
  bool3 op_BitwiseOr(bool lhs, bool3 rhs)
  bool3 op_ExclusiveOr(bool3 lhs, bool3 rhs)
  bool3 op_ExclusiveOr(bool3 lhs, bool rhs)
  bool3 op_ExclusiveOr(bool lhs, bool3 rhs)
  bool4 get_xxxx()
  bool4 get_xxxy()
  bool4 get_xxxz()
  bool4 get_xxyx()
  bool4 get_xxyy()
  bool4 get_xxyz()
  bool4 get_xxzx()
  bool4 get_xxzy()
  bool4 get_xxzz()
  bool4 get_xyxx()
  bool4 get_xyxy()
  bool4 get_xyxz()
  bool4 get_xyyx()
  bool4 get_xyyy()
  bool4 get_xyyz()
  bool4 get_xyzx()
  bool4 get_xyzy()
  bool4 get_xyzz()
  bool4 get_xzxx()
  bool4 get_xzxy()
  bool4 get_xzxz()
  bool4 get_xzyx()
  bool4 get_xzyy()
  bool4 get_xzyz()
  bool4 get_xzzx()
  bool4 get_xzzy()
  bool4 get_xzzz()
  bool4 get_yxxx()
  bool4 get_yxxy()
  bool4 get_yxxz()
  bool4 get_yxyx()
  bool4 get_yxyy()
  bool4 get_yxyz()
  bool4 get_yxzx()
  bool4 get_yxzy()
  bool4 get_yxzz()
  bool4 get_yyxx()
  bool4 get_yyxy()
  bool4 get_yyxz()
  bool4 get_yyyx()
  bool4 get_yyyy()
  bool4 get_yyyz()
  bool4 get_yyzx()
  bool4 get_yyzy()
  bool4 get_yyzz()
  bool4 get_yzxx()
  bool4 get_yzxy()
  bool4 get_yzxz()
  bool4 get_yzyx()
  bool4 get_yzyy()
  bool4 get_yzyz()
  bool4 get_yzzx()
  bool4 get_yzzy()
  bool4 get_yzzz()
  bool4 get_zxxx()
  bool4 get_zxxy()
  bool4 get_zxxz()
  bool4 get_zxyx()
  bool4 get_zxyy()
  bool4 get_zxyz()
  bool4 get_zxzx()
  bool4 get_zxzy()
  bool4 get_zxzz()
  bool4 get_zyxx()
  bool4 get_zyxy()
  bool4 get_zyxz()
  bool4 get_zyyx()
  bool4 get_zyyy()
  bool4 get_zyyz()
  bool4 get_zyzx()
  bool4 get_zyzy()
  bool4 get_zyzz()
  bool4 get_zzxx()
  bool4 get_zzxy()
  bool4 get_zzxz()
  bool4 get_zzyx()
  bool4 get_zzyy()
  bool4 get_zzyz()
  bool4 get_zzzx()
  bool4 get_zzzy()
  bool4 get_zzzz()
  bool3 get_xxx()
  bool3 get_xxy()
  bool3 get_xxz()
  bool3 get_xyx()
  bool3 get_xyy()
  bool3 get_xyz()
  void set_xyz(bool3 value)
  bool3 get_xzx()
  bool3 get_xzy()
  void set_xzy(bool3 value)
  bool3 get_xzz()
  bool3 get_yxx()
  bool3 get_yxy()
  bool3 get_yxz()
  void set_yxz(bool3 value)
  bool3 get_yyx()
  bool3 get_yyy()
  bool3 get_yyz()
  bool3 get_yzx()
  void set_yzx(bool3 value)
  bool3 get_yzy()
  bool3 get_yzz()
  bool3 get_zxx()
  bool3 get_zxy()
  void set_zxy(bool3 value)
  bool3 get_zxz()
  bool3 get_zyx()
  void set_zyx(bool3 value)
  bool3 get_zyy()
  bool3 get_zyz()
  bool3 get_zzx()
  bool3 get_zzy()
  bool3 get_zzz()
  bool2 get_xx()
  bool2 get_xy()
  void set_xy(bool2 value)
  bool2 get_xz()
  void set_xz(bool2 value)
  bool2 get_yx()
  void set_yx(bool2 value)
  bool2 get_yy()
  bool2 get_yz()
  void set_yz(bool2 value)
  bool2 get_zx()
  void set_zx(bool2 value)
  bool2 get_zy()
  void set_zy(bool2 value)
  bool2 get_zz()
  bool get_Item(int index)
  void set_Item(int index, bool value)
  bool Equals(bool3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool3x2
Наследуется от: ValueType
Поля:
  bool3 c0
  bool3 c1
Свойства:
  bool3& Item
Методы:
  void .ctor(bool3 c0, bool3 c1)
  void .ctor(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21)
  void .ctor(bool v)
  bool3x2 op_Implicit(bool v)
  bool3x2 op_Equality(bool3x2 lhs, bool3x2 rhs)
  bool3x2 op_Equality(bool3x2 lhs, bool rhs)
  bool3x2 op_Equality(bool lhs, bool3x2 rhs)
  bool3x2 op_Inequality(bool3x2 lhs, bool3x2 rhs)
  bool3x2 op_Inequality(bool3x2 lhs, bool rhs)
  bool3x2 op_Inequality(bool lhs, bool3x2 rhs)
  bool3x2 op_LogicalNot(bool3x2 val)
  bool3x2 op_BitwiseAnd(bool3x2 lhs, bool3x2 rhs)
  bool3x2 op_BitwiseAnd(bool3x2 lhs, bool rhs)
  bool3x2 op_BitwiseAnd(bool lhs, bool3x2 rhs)
  bool3x2 op_BitwiseOr(bool3x2 lhs, bool3x2 rhs)
  bool3x2 op_BitwiseOr(bool3x2 lhs, bool rhs)
  bool3x2 op_BitwiseOr(bool lhs, bool3x2 rhs)
  bool3x2 op_ExclusiveOr(bool3x2 lhs, bool3x2 rhs)
  bool3x2 op_ExclusiveOr(bool3x2 lhs, bool rhs)
  bool3x2 op_ExclusiveOr(bool lhs, bool3x2 rhs)
  bool3& get_Item(int index)
  bool Equals(bool3x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool3x3
Наследуется от: ValueType
Поля:
  bool3 c0
  bool3 c1
  bool3 c2
Свойства:
  bool3& Item
Методы:
  void .ctor(bool3 c0, bool3 c1, bool3 c2)
  void .ctor(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22)
  void .ctor(bool v)
  bool3x3 op_Implicit(bool v)
  bool3x3 op_Equality(bool3x3 lhs, bool3x3 rhs)
  bool3x3 op_Equality(bool3x3 lhs, bool rhs)
  bool3x3 op_Equality(bool lhs, bool3x3 rhs)
  bool3x3 op_Inequality(bool3x3 lhs, bool3x3 rhs)
  bool3x3 op_Inequality(bool3x3 lhs, bool rhs)
  bool3x3 op_Inequality(bool lhs, bool3x3 rhs)
  bool3x3 op_LogicalNot(bool3x3 val)
  bool3x3 op_BitwiseAnd(bool3x3 lhs, bool3x3 rhs)
  bool3x3 op_BitwiseAnd(bool3x3 lhs, bool rhs)
  bool3x3 op_BitwiseAnd(bool lhs, bool3x3 rhs)
  bool3x3 op_BitwiseOr(bool3x3 lhs, bool3x3 rhs)
  bool3x3 op_BitwiseOr(bool3x3 lhs, bool rhs)
  bool3x3 op_BitwiseOr(bool lhs, bool3x3 rhs)
  bool3x3 op_ExclusiveOr(bool3x3 lhs, bool3x3 rhs)
  bool3x3 op_ExclusiveOr(bool3x3 lhs, bool rhs)
  bool3x3 op_ExclusiveOr(bool lhs, bool3x3 rhs)
  bool3& get_Item(int index)
  bool Equals(bool3x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool3x4
Наследуется от: ValueType
Поля:
  bool3 c0
  bool3 c1
  bool3 c2
  bool3 c3
Свойства:
  bool3& Item
Методы:
  void .ctor(bool3 c0, bool3 c1, bool3 c2, bool3 c3)
  void .ctor(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23)
  void .ctor(bool v)
  bool3x4 op_Implicit(bool v)
  bool3x4 op_Equality(bool3x4 lhs, bool3x4 rhs)
  bool3x4 op_Equality(bool3x4 lhs, bool rhs)
  bool3x4 op_Equality(bool lhs, bool3x4 rhs)
  bool3x4 op_Inequality(bool3x4 lhs, bool3x4 rhs)
  bool3x4 op_Inequality(bool3x4 lhs, bool rhs)
  bool3x4 op_Inequality(bool lhs, bool3x4 rhs)
  bool3x4 op_LogicalNot(bool3x4 val)
  bool3x4 op_BitwiseAnd(bool3x4 lhs, bool3x4 rhs)
  bool3x4 op_BitwiseAnd(bool3x4 lhs, bool rhs)
  bool3x4 op_BitwiseAnd(bool lhs, bool3x4 rhs)
  bool3x4 op_BitwiseOr(bool3x4 lhs, bool3x4 rhs)
  bool3x4 op_BitwiseOr(bool3x4 lhs, bool rhs)
  bool3x4 op_BitwiseOr(bool lhs, bool3x4 rhs)
  bool3x4 op_ExclusiveOr(bool3x4 lhs, bool3x4 rhs)
  bool3x4 op_ExclusiveOr(bool3x4 lhs, bool rhs)
  bool3x4 op_ExclusiveOr(bool lhs, bool3x4 rhs)
  bool3& get_Item(int index)
  bool Equals(bool3x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool4
Наследуется от: ValueType
Поля:
  bool x
  bool y
  bool z
  bool w
Свойства:
  bool4 xxxx
  bool4 xxxy
  bool4 xxxz
  bool4 xxxw
  bool4 xxyx
  bool4 xxyy
  bool4 xxyz
  bool4 xxyw
  bool4 xxzx
  bool4 xxzy
  bool4 xxzz
  bool4 xxzw
  bool4 xxwx
  bool4 xxwy
  bool4 xxwz
  bool4 xxww
  bool4 xyxx
  bool4 xyxy
  bool4 xyxz
  bool4 xyxw
  bool4 xyyx
  bool4 xyyy
  bool4 xyyz
  bool4 xyyw
  bool4 xyzx
  bool4 xyzy
  bool4 xyzz
  bool4 xyzw
  bool4 xywx
  bool4 xywy
  bool4 xywz
  bool4 xyww
  bool4 xzxx
  bool4 xzxy
  bool4 xzxz
  bool4 xzxw
  bool4 xzyx
  bool4 xzyy
  bool4 xzyz
  bool4 xzyw
  bool4 xzzx
  bool4 xzzy
  bool4 xzzz
  bool4 xzzw
  bool4 xzwx
  bool4 xzwy
  bool4 xzwz
  bool4 xzww
  bool4 xwxx
  bool4 xwxy
  bool4 xwxz
  bool4 xwxw
  bool4 xwyx
  bool4 xwyy
  bool4 xwyz
  bool4 xwyw
  bool4 xwzx
  bool4 xwzy
  bool4 xwzz
  bool4 xwzw
  bool4 xwwx
  bool4 xwwy
  bool4 xwwz
  bool4 xwww
  bool4 yxxx
  bool4 yxxy
  bool4 yxxz
  bool4 yxxw
  bool4 yxyx
  bool4 yxyy
  bool4 yxyz
  bool4 yxyw
  bool4 yxzx
  bool4 yxzy
  bool4 yxzz
  bool4 yxzw
  bool4 yxwx
  bool4 yxwy
  bool4 yxwz
  bool4 yxww
  bool4 yyxx
  bool4 yyxy
  bool4 yyxz
  bool4 yyxw
  bool4 yyyx
  bool4 yyyy
  bool4 yyyz
  bool4 yyyw
  bool4 yyzx
  bool4 yyzy
  bool4 yyzz
  bool4 yyzw
  bool4 yywx
  bool4 yywy
  bool4 yywz
  bool4 yyww
  bool4 yzxx
  bool4 yzxy
  bool4 yzxz
  bool4 yzxw
  bool4 yzyx
  bool4 yzyy
  bool4 yzyz
  bool4 yzyw
  bool4 yzzx
  bool4 yzzy
  bool4 yzzz
  bool4 yzzw
  bool4 yzwx
  bool4 yzwy
  bool4 yzwz
  bool4 yzww
  bool4 ywxx
  bool4 ywxy
  bool4 ywxz
  bool4 ywxw
  bool4 ywyx
  bool4 ywyy
  bool4 ywyz
  bool4 ywyw
  bool4 ywzx
  bool4 ywzy
  bool4 ywzz
  bool4 ywzw
  bool4 ywwx
  bool4 ywwy
  bool4 ywwz
  bool4 ywww
  bool4 zxxx
  bool4 zxxy
  bool4 zxxz
  bool4 zxxw
  bool4 zxyx
  bool4 zxyy
  bool4 zxyz
  bool4 zxyw
  bool4 zxzx
  bool4 zxzy
  bool4 zxzz
  bool4 zxzw
  bool4 zxwx
  bool4 zxwy
  bool4 zxwz
  bool4 zxww
  bool4 zyxx
  bool4 zyxy
  bool4 zyxz
  bool4 zyxw
  bool4 zyyx
  bool4 zyyy
  bool4 zyyz
  bool4 zyyw
  bool4 zyzx
  bool4 zyzy
  bool4 zyzz
  bool4 zyzw
  bool4 zywx
  bool4 zywy
  bool4 zywz
  bool4 zyww
  bool4 zzxx
  bool4 zzxy
  bool4 zzxz
  bool4 zzxw
  bool4 zzyx
  bool4 zzyy
  bool4 zzyz
  bool4 zzyw
  bool4 zzzx
  bool4 zzzy
  bool4 zzzz
  bool4 zzzw
  bool4 zzwx
  bool4 zzwy
  bool4 zzwz
  bool4 zzww
  bool4 zwxx
  bool4 zwxy
  bool4 zwxz
  bool4 zwxw
  bool4 zwyx
  bool4 zwyy
  bool4 zwyz
  bool4 zwyw
  bool4 zwzx
  bool4 zwzy
  bool4 zwzz
  bool4 zwzw
  bool4 zwwx
  bool4 zwwy
  bool4 zwwz
  bool4 zwww
  bool4 wxxx
  bool4 wxxy
  bool4 wxxz
  bool4 wxxw
  bool4 wxyx
  bool4 wxyy
  bool4 wxyz
  bool4 wxyw
  bool4 wxzx
  bool4 wxzy
  bool4 wxzz
  bool4 wxzw
  bool4 wxwx
  bool4 wxwy
  bool4 wxwz
  bool4 wxww
  bool4 wyxx
  bool4 wyxy
  bool4 wyxz
  bool4 wyxw
  bool4 wyyx
  bool4 wyyy
  bool4 wyyz
  bool4 wyyw
  bool4 wyzx
  bool4 wyzy
  bool4 wyzz
  bool4 wyzw
  bool4 wywx
  bool4 wywy
  bool4 wywz
  bool4 wyww
  bool4 wzxx
  bool4 wzxy
  bool4 wzxz
  bool4 wzxw
  bool4 wzyx
  bool4 wzyy
  bool4 wzyz
  bool4 wzyw
  bool4 wzzx
  bool4 wzzy
  bool4 wzzz
  bool4 wzzw
  bool4 wzwx
  bool4 wzwy
  bool4 wzwz
  bool4 wzww
  bool4 wwxx
  bool4 wwxy
  bool4 wwxz
  bool4 wwxw
  bool4 wwyx
  bool4 wwyy
  bool4 wwyz
  bool4 wwyw
  bool4 wwzx
  bool4 wwzy
  bool4 wwzz
  bool4 wwzw
  bool4 wwwx
  bool4 wwwy
  bool4 wwwz
  bool4 wwww
  bool3 xxx
  bool3 xxy
  bool3 xxz
  bool3 xxw
  bool3 xyx
  bool3 xyy
  bool3 xyz
  bool3 xyw
  bool3 xzx
  bool3 xzy
  bool3 xzz
  bool3 xzw
  bool3 xwx
  bool3 xwy
  bool3 xwz
  bool3 xww
  bool3 yxx
  bool3 yxy
  bool3 yxz
  bool3 yxw
  bool3 yyx
  bool3 yyy
  bool3 yyz
  bool3 yyw
  bool3 yzx
  bool3 yzy
  bool3 yzz
  bool3 yzw
  bool3 ywx
  bool3 ywy
  bool3 ywz
  bool3 yww
  bool3 zxx
  bool3 zxy
  bool3 zxz
  bool3 zxw
  bool3 zyx
  bool3 zyy
  bool3 zyz
  bool3 zyw
  bool3 zzx
  bool3 zzy
  bool3 zzz
  bool3 zzw
  bool3 zwx
  bool3 zwy
  bool3 zwz
  bool3 zww
  bool3 wxx
  bool3 wxy
  bool3 wxz
  bool3 wxw
  bool3 wyx
  bool3 wyy
  bool3 wyz
  bool3 wyw
  bool3 wzx
  bool3 wzy
  bool3 wzz
  bool3 wzw
  bool3 wwx
  bool3 wwy
  bool3 wwz
  bool3 www
  bool2 xx
  bool2 xy
  bool2 xz
  bool2 xw
  bool2 yx
  bool2 yy
  bool2 yz
  bool2 yw
  bool2 zx
  bool2 zy
  bool2 zz
  bool2 zw
  bool2 wx
  bool2 wy
  bool2 wz
  bool2 ww
  bool Item
Методы:
  void .ctor(bool x, bool y, bool z, bool w)
  void .ctor(bool x, bool y, bool2 zw)
  void .ctor(bool x, bool2 yz, bool w)
  void .ctor(bool x, bool3 yzw)
  void .ctor(bool2 xy, bool z, bool w)
  void .ctor(bool2 xy, bool2 zw)
  void .ctor(bool3 xyz, bool w)
  void .ctor(bool4 xyzw)
  void .ctor(bool v)
  bool4 op_Implicit(bool v)
  bool4 op_Equality(bool4 lhs, bool4 rhs)
  bool4 op_Equality(bool4 lhs, bool rhs)
  bool4 op_Equality(bool lhs, bool4 rhs)
  bool4 op_Inequality(bool4 lhs, bool4 rhs)
  bool4 op_Inequality(bool4 lhs, bool rhs)
  bool4 op_Inequality(bool lhs, bool4 rhs)
  bool4 op_LogicalNot(bool4 val)
  bool4 op_BitwiseAnd(bool4 lhs, bool4 rhs)
  bool4 op_BitwiseAnd(bool4 lhs, bool rhs)
  bool4 op_BitwiseAnd(bool lhs, bool4 rhs)
  bool4 op_BitwiseOr(bool4 lhs, bool4 rhs)
  bool4 op_BitwiseOr(bool4 lhs, bool rhs)
  bool4 op_BitwiseOr(bool lhs, bool4 rhs)
  bool4 op_ExclusiveOr(bool4 lhs, bool4 rhs)
  bool4 op_ExclusiveOr(bool4 lhs, bool rhs)
  bool4 op_ExclusiveOr(bool lhs, bool4 rhs)
  bool4 get_xxxx()
  bool4 get_xxxy()
  bool4 get_xxxz()
  bool4 get_xxxw()
  bool4 get_xxyx()
  bool4 get_xxyy()
  bool4 get_xxyz()
  bool4 get_xxyw()
  bool4 get_xxzx()
  bool4 get_xxzy()
  bool4 get_xxzz()
  bool4 get_xxzw()
  bool4 get_xxwx()
  bool4 get_xxwy()
  bool4 get_xxwz()
  bool4 get_xxww()
  bool4 get_xyxx()
  bool4 get_xyxy()
  bool4 get_xyxz()
  bool4 get_xyxw()
  bool4 get_xyyx()
  bool4 get_xyyy()
  bool4 get_xyyz()
  bool4 get_xyyw()
  bool4 get_xyzx()
  bool4 get_xyzy()
  bool4 get_xyzz()
  bool4 get_xyzw()
  void set_xyzw(bool4 value)
  bool4 get_xywx()
  bool4 get_xywy()
  bool4 get_xywz()
  void set_xywz(bool4 value)
  bool4 get_xyww()
  bool4 get_xzxx()
  bool4 get_xzxy()
  bool4 get_xzxz()
  bool4 get_xzxw()
  bool4 get_xzyx()
  bool4 get_xzyy()
  bool4 get_xzyz()
  bool4 get_xzyw()
  void set_xzyw(bool4 value)
  bool4 get_xzzx()
  bool4 get_xzzy()
  bool4 get_xzzz()
  bool4 get_xzzw()
  bool4 get_xzwx()
  bool4 get_xzwy()
  void set_xzwy(bool4 value)
  bool4 get_xzwz()
  bool4 get_xzww()
  bool4 get_xwxx()
  bool4 get_xwxy()
  bool4 get_xwxz()
  bool4 get_xwxw()
  bool4 get_xwyx()
  bool4 get_xwyy()
  bool4 get_xwyz()
  void set_xwyz(bool4 value)
  bool4 get_xwyw()
  bool4 get_xwzx()
  bool4 get_xwzy()
  void set_xwzy(bool4 value)
  bool4 get_xwzz()
  bool4 get_xwzw()
  bool4 get_xwwx()
  bool4 get_xwwy()
  bool4 get_xwwz()
  bool4 get_xwww()
  bool4 get_yxxx()
  bool4 get_yxxy()
  bool4 get_yxxz()
  bool4 get_yxxw()
  bool4 get_yxyx()
  bool4 get_yxyy()
  bool4 get_yxyz()
  bool4 get_yxyw()
  bool4 get_yxzx()
  bool4 get_yxzy()
  bool4 get_yxzz()
  bool4 get_yxzw()
  void set_yxzw(bool4 value)
  bool4 get_yxwx()
  bool4 get_yxwy()
  bool4 get_yxwz()
  void set_yxwz(bool4 value)
  bool4 get_yxww()
  bool4 get_yyxx()
  bool4 get_yyxy()
  bool4 get_yyxz()
  bool4 get_yyxw()
  bool4 get_yyyx()
  bool4 get_yyyy()
  bool4 get_yyyz()
  bool4 get_yyyw()
  bool4 get_yyzx()
  bool4 get_yyzy()
  bool4 get_yyzz()
  bool4 get_yyzw()
  bool4 get_yywx()
  bool4 get_yywy()
  bool4 get_yywz()
  bool4 get_yyww()
  bool4 get_yzxx()
  bool4 get_yzxy()
  bool4 get_yzxz()
  bool4 get_yzxw()
  void set_yzxw(bool4 value)
  bool4 get_yzyx()
  bool4 get_yzyy()
  bool4 get_yzyz()
  bool4 get_yzyw()
  bool4 get_yzzx()
  bool4 get_yzzy()
  bool4 get_yzzz()
  bool4 get_yzzw()
  bool4 get_yzwx()
  void set_yzwx(bool4 value)
  bool4 get_yzwy()
  bool4 get_yzwz()
  bool4 get_yzww()
  bool4 get_ywxx()
  bool4 get_ywxy()
  bool4 get_ywxz()
  void set_ywxz(bool4 value)
  bool4 get_ywxw()
  bool4 get_ywyx()
  bool4 get_ywyy()
  bool4 get_ywyz()
  bool4 get_ywyw()
  bool4 get_ywzx()
  void set_ywzx(bool4 value)
  bool4 get_ywzy()
  bool4 get_ywzz()
  bool4 get_ywzw()
  bool4 get_ywwx()
  bool4 get_ywwy()
  bool4 get_ywwz()
  bool4 get_ywww()
  bool4 get_zxxx()
  bool4 get_zxxy()
  bool4 get_zxxz()
  bool4 get_zxxw()
  bool4 get_zxyx()
  bool4 get_zxyy()
  bool4 get_zxyz()
  bool4 get_zxyw()
  void set_zxyw(bool4 value)
  bool4 get_zxzx()
  bool4 get_zxzy()
  bool4 get_zxzz()
  bool4 get_zxzw()
  bool4 get_zxwx()
  bool4 get_zxwy()
  void set_zxwy(bool4 value)
  bool4 get_zxwz()
  bool4 get_zxww()
  bool4 get_zyxx()
  bool4 get_zyxy()
  bool4 get_zyxz()
  bool4 get_zyxw()
  void set_zyxw(bool4 value)
  bool4 get_zyyx()
  bool4 get_zyyy()
  bool4 get_zyyz()
  bool4 get_zyyw()
  bool4 get_zyzx()
  bool4 get_zyzy()
  bool4 get_zyzz()
  bool4 get_zyzw()
  bool4 get_zywx()
  void set_zywx(bool4 value)
  bool4 get_zywy()
  bool4 get_zywz()
  bool4 get_zyww()
  bool4 get_zzxx()
  bool4 get_zzxy()
  bool4 get_zzxz()
  bool4 get_zzxw()
  bool4 get_zzyx()
  bool4 get_zzyy()
  bool4 get_zzyz()
  bool4 get_zzyw()
  bool4 get_zzzx()
  bool4 get_zzzy()
  bool4 get_zzzz()
  bool4 get_zzzw()
  bool4 get_zzwx()
  bool4 get_zzwy()
  bool4 get_zzwz()
  bool4 get_zzww()
  bool4 get_zwxx()
  bool4 get_zwxy()
  void set_zwxy(bool4 value)
  bool4 get_zwxz()
  bool4 get_zwxw()
  bool4 get_zwyx()
  void set_zwyx(bool4 value)
  bool4 get_zwyy()
  bool4 get_zwyz()
  bool4 get_zwyw()
  bool4 get_zwzx()
  bool4 get_zwzy()
  bool4 get_zwzz()
  bool4 get_zwzw()
  bool4 get_zwwx()
  bool4 get_zwwy()
  bool4 get_zwwz()
  bool4 get_zwww()
  bool4 get_wxxx()
  bool4 get_wxxy()
  bool4 get_wxxz()
  bool4 get_wxxw()
  bool4 get_wxyx()
  bool4 get_wxyy()
  bool4 get_wxyz()
  void set_wxyz(bool4 value)
  bool4 get_wxyw()
  bool4 get_wxzx()
  bool4 get_wxzy()
  void set_wxzy(bool4 value)
  bool4 get_wxzz()
  bool4 get_wxzw()
  bool4 get_wxwx()
  bool4 get_wxwy()
  bool4 get_wxwz()
  bool4 get_wxww()
  bool4 get_wyxx()
  bool4 get_wyxy()
  bool4 get_wyxz()
  void set_wyxz(bool4 value)
  bool4 get_wyxw()
  bool4 get_wyyx()
  bool4 get_wyyy()
  bool4 get_wyyz()
  bool4 get_wyyw()
  bool4 get_wyzx()
  void set_wyzx(bool4 value)
  bool4 get_wyzy()
  bool4 get_wyzz()
  bool4 get_wyzw()
  bool4 get_wywx()
  bool4 get_wywy()
  bool4 get_wywz()
  bool4 get_wyww()
  bool4 get_wzxx()
  bool4 get_wzxy()
  void set_wzxy(bool4 value)
  bool4 get_wzxz()
  bool4 get_wzxw()
  bool4 get_wzyx()
  void set_wzyx(bool4 value)
  bool4 get_wzyy()
  bool4 get_wzyz()
  bool4 get_wzyw()
  bool4 get_wzzx()
  bool4 get_wzzy()
  bool4 get_wzzz()
  bool4 get_wzzw()
  bool4 get_wzwx()
  bool4 get_wzwy()
  bool4 get_wzwz()
  bool4 get_wzww()
  bool4 get_wwxx()
  bool4 get_wwxy()
  bool4 get_wwxz()
  bool4 get_wwxw()
  bool4 get_wwyx()
  bool4 get_wwyy()
  bool4 get_wwyz()
  bool4 get_wwyw()
  bool4 get_wwzx()
  bool4 get_wwzy()
  bool4 get_wwzz()
  bool4 get_wwzw()
  bool4 get_wwwx()
  bool4 get_wwwy()
  bool4 get_wwwz()
  bool4 get_wwww()
  bool3 get_xxx()
  bool3 get_xxy()
  bool3 get_xxz()
  bool3 get_xxw()
  bool3 get_xyx()
  bool3 get_xyy()
  bool3 get_xyz()
  void set_xyz(bool3 value)
  bool3 get_xyw()
  void set_xyw(bool3 value)
  bool3 get_xzx()
  bool3 get_xzy()
  void set_xzy(bool3 value)
  bool3 get_xzz()
  bool3 get_xzw()
  void set_xzw(bool3 value)
  bool3 get_xwx()
  bool3 get_xwy()
  void set_xwy(bool3 value)
  bool3 get_xwz()
  void set_xwz(bool3 value)
  bool3 get_xww()
  bool3 get_yxx()
  bool3 get_yxy()
  bool3 get_yxz()
  void set_yxz(bool3 value)
  bool3 get_yxw()
  void set_yxw(bool3 value)
  bool3 get_yyx()
  bool3 get_yyy()
  bool3 get_yyz()
  bool3 get_yyw()
  bool3 get_yzx()
  void set_yzx(bool3 value)
  bool3 get_yzy()
  bool3 get_yzz()
  bool3 get_yzw()
  void set_yzw(bool3 value)
  bool3 get_ywx()
  void set_ywx(bool3 value)
  bool3 get_ywy()
  bool3 get_ywz()
  void set_ywz(bool3 value)
  bool3 get_yww()
  bool3 get_zxx()
  bool3 get_zxy()
  void set_zxy(bool3 value)
  bool3 get_zxz()
  bool3 get_zxw()
  void set_zxw(bool3 value)
  bool3 get_zyx()
  void set_zyx(bool3 value)
  bool3 get_zyy()
  bool3 get_zyz()
  bool3 get_zyw()
  void set_zyw(bool3 value)
  bool3 get_zzx()
  bool3 get_zzy()
  bool3 get_zzz()
  bool3 get_zzw()
  bool3 get_zwx()
  void set_zwx(bool3 value)
  bool3 get_zwy()
  void set_zwy(bool3 value)
  bool3 get_zwz()
  bool3 get_zww()
  bool3 get_wxx()
  bool3 get_wxy()
  void set_wxy(bool3 value)
  bool3 get_wxz()
  void set_wxz(bool3 value)
  bool3 get_wxw()
  bool3 get_wyx()
  void set_wyx(bool3 value)
  bool3 get_wyy()
  bool3 get_wyz()
  void set_wyz(bool3 value)
  bool3 get_wyw()
  bool3 get_wzx()
  void set_wzx(bool3 value)
  bool3 get_wzy()
  void set_wzy(bool3 value)
  bool3 get_wzz()
  bool3 get_wzw()
  bool3 get_wwx()
  bool3 get_wwy()
  bool3 get_wwz()
  bool3 get_www()
  bool2 get_xx()
  bool2 get_xy()
  void set_xy(bool2 value)
  bool2 get_xz()
  void set_xz(bool2 value)
  bool2 get_xw()
  void set_xw(bool2 value)
  bool2 get_yx()
  void set_yx(bool2 value)
  bool2 get_yy()
  bool2 get_yz()
  void set_yz(bool2 value)
  bool2 get_yw()
  void set_yw(bool2 value)
  bool2 get_zx()
  void set_zx(bool2 value)
  bool2 get_zy()
  void set_zy(bool2 value)
  bool2 get_zz()
  bool2 get_zw()
  void set_zw(bool2 value)
  bool2 get_wx()
  void set_wx(bool2 value)
  bool2 get_wy()
  void set_wy(bool2 value)
  bool2 get_wz()
  void set_wz(bool2 value)
  bool2 get_ww()
  bool get_Item(int index)
  void set_Item(int index, bool value)
  bool Equals(bool4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool4x2
Наследуется от: ValueType
Поля:
  bool4 c0
  bool4 c1
Свойства:
  bool4& Item
Методы:
  void .ctor(bool4 c0, bool4 c1)
  void .ctor(bool m00, bool m01, bool m10, bool m11, bool m20, bool m21, bool m30, bool m31)
  void .ctor(bool v)
  bool4x2 op_Implicit(bool v)
  bool4x2 op_Equality(bool4x2 lhs, bool4x2 rhs)
  bool4x2 op_Equality(bool4x2 lhs, bool rhs)
  bool4x2 op_Equality(bool lhs, bool4x2 rhs)
  bool4x2 op_Inequality(bool4x2 lhs, bool4x2 rhs)
  bool4x2 op_Inequality(bool4x2 lhs, bool rhs)
  bool4x2 op_Inequality(bool lhs, bool4x2 rhs)
  bool4x2 op_LogicalNot(bool4x2 val)
  bool4x2 op_BitwiseAnd(bool4x2 lhs, bool4x2 rhs)
  bool4x2 op_BitwiseAnd(bool4x2 lhs, bool rhs)
  bool4x2 op_BitwiseAnd(bool lhs, bool4x2 rhs)
  bool4x2 op_BitwiseOr(bool4x2 lhs, bool4x2 rhs)
  bool4x2 op_BitwiseOr(bool4x2 lhs, bool rhs)
  bool4x2 op_BitwiseOr(bool lhs, bool4x2 rhs)
  bool4x2 op_ExclusiveOr(bool4x2 lhs, bool4x2 rhs)
  bool4x2 op_ExclusiveOr(bool4x2 lhs, bool rhs)
  bool4x2 op_ExclusiveOr(bool lhs, bool4x2 rhs)
  bool4& get_Item(int index)
  bool Equals(bool4x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool4x3
Наследуется от: ValueType
Поля:
  bool4 c0
  bool4 c1
  bool4 c2
Свойства:
  bool4& Item
Методы:
  void .ctor(bool4 c0, bool4 c1, bool4 c2)
  void .ctor(bool m00, bool m01, bool m02, bool m10, bool m11, bool m12, bool m20, bool m21, bool m22, bool m30, bool m31, bool m32)
  void .ctor(bool v)
  bool4x3 op_Implicit(bool v)
  bool4x3 op_Equality(bool4x3 lhs, bool4x3 rhs)
  bool4x3 op_Equality(bool4x3 lhs, bool rhs)
  bool4x3 op_Equality(bool lhs, bool4x3 rhs)
  bool4x3 op_Inequality(bool4x3 lhs, bool4x3 rhs)
  bool4x3 op_Inequality(bool4x3 lhs, bool rhs)
  bool4x3 op_Inequality(bool lhs, bool4x3 rhs)
  bool4x3 op_LogicalNot(bool4x3 val)
  bool4x3 op_BitwiseAnd(bool4x3 lhs, bool4x3 rhs)
  bool4x3 op_BitwiseAnd(bool4x3 lhs, bool rhs)
  bool4x3 op_BitwiseAnd(bool lhs, bool4x3 rhs)
  bool4x3 op_BitwiseOr(bool4x3 lhs, bool4x3 rhs)
  bool4x3 op_BitwiseOr(bool4x3 lhs, bool rhs)
  bool4x3 op_BitwiseOr(bool lhs, bool4x3 rhs)
  bool4x3 op_ExclusiveOr(bool4x3 lhs, bool4x3 rhs)
  bool4x3 op_ExclusiveOr(bool4x3 lhs, bool rhs)
  bool4x3 op_ExclusiveOr(bool lhs, bool4x3 rhs)
  bool4& get_Item(int index)
  bool Equals(bool4x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.bool4x4
Наследуется от: ValueType
Поля:
  bool4 c0
  bool4 c1
  bool4 c2
  bool4 c3
Свойства:
  bool4& Item
Методы:
  void .ctor(bool4 c0, bool4 c1, bool4 c2, bool4 c3)
  void .ctor(bool m00, bool m01, bool m02, bool m03, bool m10, bool m11, bool m12, bool m13, bool m20, bool m21, bool m22, bool m23, bool m30, bool m31, bool m32, bool m33)
  void .ctor(bool v)
  bool4x4 op_Implicit(bool v)
  bool4x4 op_Equality(bool4x4 lhs, bool4x4 rhs)
  bool4x4 op_Equality(bool4x4 lhs, bool rhs)
  bool4x4 op_Equality(bool lhs, bool4x4 rhs)
  bool4x4 op_Inequality(bool4x4 lhs, bool4x4 rhs)
  bool4x4 op_Inequality(bool4x4 lhs, bool rhs)
  bool4x4 op_Inequality(bool lhs, bool4x4 rhs)
  bool4x4 op_LogicalNot(bool4x4 val)
  bool4x4 op_BitwiseAnd(bool4x4 lhs, bool4x4 rhs)
  bool4x4 op_BitwiseAnd(bool4x4 lhs, bool rhs)
  bool4x4 op_BitwiseAnd(bool lhs, bool4x4 rhs)
  bool4x4 op_BitwiseOr(bool4x4 lhs, bool4x4 rhs)
  bool4x4 op_BitwiseOr(bool4x4 lhs, bool rhs)
  bool4x4 op_BitwiseOr(bool lhs, bool4x4 rhs)
  bool4x4 op_ExclusiveOr(bool4x4 lhs, bool4x4 rhs)
  bool4x4 op_ExclusiveOr(bool4x4 lhs, bool rhs)
  bool4x4 op_ExclusiveOr(bool lhs, bool4x4 rhs)
  bool4& get_Item(int index)
  bool Equals(bool4x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.double2
Наследуется от: ValueType
Поля:
  double x
  double y
  double2 zero
Свойства:
  double4 xxxx
  double4 xxxy
  double4 xxyx
  double4 xxyy
  double4 xyxx
  double4 xyxy
  double4 xyyx
  double4 xyyy
  double4 yxxx
  double4 yxxy
  double4 yxyx
  double4 yxyy
  double4 yyxx
  double4 yyxy
  double4 yyyx
  double4 yyyy
  double3 xxx
  double3 xxy
  double3 xyx
  double3 xyy
  double3 yxx
  double3 yxy
  double3 yyx
  double3 yyy
  double2 xx
  double2 xy
  double2 yx
  double2 yy
  double Item
Методы:
  void .ctor(double x, double y)
  void .ctor(double2 xy)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool2 v)
  void .ctor(int v)
  void .ctor(int2 v)
  void .ctor(UInt32 v)
  void .ctor(uint2 v)
  void .ctor(half v)
  void .ctor(half2 v)
  void .ctor(float v)
  void .ctor(float2 v)
  double2 op_Implicit(double v)
  double2 op_Explicit(bool v)
  double2 op_Explicit(bool2 v)
  double2 op_Implicit(int v)
  double2 op_Implicit(int2 v)
  double2 op_Implicit(UInt32 v)
  double2 op_Implicit(uint2 v)
  double2 op_Implicit(half v)
  double2 op_Implicit(half2 v)
  double2 op_Implicit(float v)
  double2 op_Implicit(float2 v)
  double2 op_Multiply(double2 lhs, double2 rhs)
  double2 op_Multiply(double2 lhs, double rhs)
  double2 op_Multiply(double lhs, double2 rhs)
  double2 op_Addition(double2 lhs, double2 rhs)
  double2 op_Addition(double2 lhs, double rhs)
  double2 op_Addition(double lhs, double2 rhs)
  double2 op_Subtraction(double2 lhs, double2 rhs)
  double2 op_Subtraction(double2 lhs, double rhs)
  double2 op_Subtraction(double lhs, double2 rhs)
  double2 op_Division(double2 lhs, double2 rhs)
  double2 op_Division(double2 lhs, double rhs)
  double2 op_Division(double lhs, double2 rhs)
  double2 op_Modulus(double2 lhs, double2 rhs)
  double2 op_Modulus(double2 lhs, double rhs)
  double2 op_Modulus(double lhs, double2 rhs)
  double2 op_Increment(double2 val)
  double2 op_Decrement(double2 val)
  bool2 op_LessThan(double2 lhs, double2 rhs)
  bool2 op_LessThan(double2 lhs, double rhs)
  bool2 op_LessThan(double lhs, double2 rhs)
  bool2 op_LessThanOrEqual(double2 lhs, double2 rhs)
  bool2 op_LessThanOrEqual(double2 lhs, double rhs)
  bool2 op_LessThanOrEqual(double lhs, double2 rhs)
  bool2 op_GreaterThan(double2 lhs, double2 rhs)
  bool2 op_GreaterThan(double2 lhs, double rhs)
  bool2 op_GreaterThan(double lhs, double2 rhs)
  bool2 op_GreaterThanOrEqual(double2 lhs, double2 rhs)
  bool2 op_GreaterThanOrEqual(double2 lhs, double rhs)
  bool2 op_GreaterThanOrEqual(double lhs, double2 rhs)
  double2 op_UnaryNegation(double2 val)
  double2 op_UnaryPlus(double2 val)
  bool2 op_Equality(double2 lhs, double2 rhs)
  bool2 op_Equality(double2 lhs, double rhs)
  bool2 op_Equality(double lhs, double2 rhs)
  bool2 op_Inequality(double2 lhs, double2 rhs)
  bool2 op_Inequality(double2 lhs, double rhs)
  bool2 op_Inequality(double lhs, double2 rhs)
  double4 get_xxxx()
  double4 get_xxxy()
  double4 get_xxyx()
  double4 get_xxyy()
  double4 get_xyxx()
  double4 get_xyxy()
  double4 get_xyyx()
  double4 get_xyyy()
  double4 get_yxxx()
  double4 get_yxxy()
  double4 get_yxyx()
  double4 get_yxyy()
  double4 get_yyxx()
  double4 get_yyxy()
  double4 get_yyyx()
  double4 get_yyyy()
  double3 get_xxx()
  double3 get_xxy()
  double3 get_xyx()
  double3 get_xyy()
  double3 get_yxx()
  double3 get_yxy()
  double3 get_yyx()
  double3 get_yyy()
  double2 get_xx()
  double2 get_xy()
  void set_xy(double2 value)
  double2 get_yx()
  void set_yx(double2 value)
  double2 get_yy()
  double get_Item(int index)
  void set_Item(int index, double value)
  bool Equals(double2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double2x2
Наследуется от: ValueType
Поля:
  double2 c0
  double2 c1
  double2x2 identity
  double2x2 zero
Свойства:
  double2& Item
Методы:
  void .ctor(double2 c0, double2 c1)
  void .ctor(double m00, double m01, double m10, double m11)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool2x2 v)
  void .ctor(int v)
  void .ctor(int2x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x2 v)
  void .ctor(float v)
  void .ctor(float2x2 v)
  double2x2 op_Implicit(double v)
  double2x2 op_Explicit(bool v)
  double2x2 op_Explicit(bool2x2 v)
  double2x2 op_Implicit(int v)
  double2x2 op_Implicit(int2x2 v)
  double2x2 op_Implicit(UInt32 v)
  double2x2 op_Implicit(uint2x2 v)
  double2x2 op_Implicit(float v)
  double2x2 op_Implicit(float2x2 v)
  double2x2 op_Multiply(double2x2 lhs, double2x2 rhs)
  double2x2 op_Multiply(double2x2 lhs, double rhs)
  double2x2 op_Multiply(double lhs, double2x2 rhs)
  double2x2 op_Addition(double2x2 lhs, double2x2 rhs)
  double2x2 op_Addition(double2x2 lhs, double rhs)
  double2x2 op_Addition(double lhs, double2x2 rhs)
  double2x2 op_Subtraction(double2x2 lhs, double2x2 rhs)
  double2x2 op_Subtraction(double2x2 lhs, double rhs)
  double2x2 op_Subtraction(double lhs, double2x2 rhs)
  double2x2 op_Division(double2x2 lhs, double2x2 rhs)
  double2x2 op_Division(double2x2 lhs, double rhs)
  double2x2 op_Division(double lhs, double2x2 rhs)
  double2x2 op_Modulus(double2x2 lhs, double2x2 rhs)
  double2x2 op_Modulus(double2x2 lhs, double rhs)
  double2x2 op_Modulus(double lhs, double2x2 rhs)
  double2x2 op_Increment(double2x2 val)
  double2x2 op_Decrement(double2x2 val)
  bool2x2 op_LessThan(double2x2 lhs, double2x2 rhs)
  bool2x2 op_LessThan(double2x2 lhs, double rhs)
  bool2x2 op_LessThan(double lhs, double2x2 rhs)
  bool2x2 op_LessThanOrEqual(double2x2 lhs, double2x2 rhs)
  bool2x2 op_LessThanOrEqual(double2x2 lhs, double rhs)
  bool2x2 op_LessThanOrEqual(double lhs, double2x2 rhs)
  bool2x2 op_GreaterThan(double2x2 lhs, double2x2 rhs)
  bool2x2 op_GreaterThan(double2x2 lhs, double rhs)
  bool2x2 op_GreaterThan(double lhs, double2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(double2x2 lhs, double2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(double2x2 lhs, double rhs)
  bool2x2 op_GreaterThanOrEqual(double lhs, double2x2 rhs)
  double2x2 op_UnaryNegation(double2x2 val)
  double2x2 op_UnaryPlus(double2x2 val)
  bool2x2 op_Equality(double2x2 lhs, double2x2 rhs)
  bool2x2 op_Equality(double2x2 lhs, double rhs)
  bool2x2 op_Equality(double lhs, double2x2 rhs)
  bool2x2 op_Inequality(double2x2 lhs, double2x2 rhs)
  bool2x2 op_Inequality(double2x2 lhs, double rhs)
  bool2x2 op_Inequality(double lhs, double2x2 rhs)
  double2& get_Item(int index)
  bool Equals(double2x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.double2x3
Наследуется от: ValueType
Поля:
  double2 c0
  double2 c1
  double2 c2
  double2x3 zero
Свойства:
  double2& Item
Методы:
  void .ctor(double2 c0, double2 c1, double2 c2)
  void .ctor(double m00, double m01, double m02, double m10, double m11, double m12)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool2x3 v)
  void .ctor(int v)
  void .ctor(int2x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x3 v)
  void .ctor(float v)
  void .ctor(float2x3 v)
  double2x3 op_Implicit(double v)
  double2x3 op_Explicit(bool v)
  double2x3 op_Explicit(bool2x3 v)
  double2x3 op_Implicit(int v)
  double2x3 op_Implicit(int2x3 v)
  double2x3 op_Implicit(UInt32 v)
  double2x3 op_Implicit(uint2x3 v)
  double2x3 op_Implicit(float v)
  double2x3 op_Implicit(float2x3 v)
  double2x3 op_Multiply(double2x3 lhs, double2x3 rhs)
  double2x3 op_Multiply(double2x3 lhs, double rhs)
  double2x3 op_Multiply(double lhs, double2x3 rhs)
  double2x3 op_Addition(double2x3 lhs, double2x3 rhs)
  double2x3 op_Addition(double2x3 lhs, double rhs)
  double2x3 op_Addition(double lhs, double2x3 rhs)
  double2x3 op_Subtraction(double2x3 lhs, double2x3 rhs)
  double2x3 op_Subtraction(double2x3 lhs, double rhs)
  double2x3 op_Subtraction(double lhs, double2x3 rhs)
  double2x3 op_Division(double2x3 lhs, double2x3 rhs)
  double2x3 op_Division(double2x3 lhs, double rhs)
  double2x3 op_Division(double lhs, double2x3 rhs)
  double2x3 op_Modulus(double2x3 lhs, double2x3 rhs)
  double2x3 op_Modulus(double2x3 lhs, double rhs)
  double2x3 op_Modulus(double lhs, double2x3 rhs)
  double2x3 op_Increment(double2x3 val)
  double2x3 op_Decrement(double2x3 val)
  bool2x3 op_LessThan(double2x3 lhs, double2x3 rhs)
  bool2x3 op_LessThan(double2x3 lhs, double rhs)
  bool2x3 op_LessThan(double lhs, double2x3 rhs)
  bool2x3 op_LessThanOrEqual(double2x3 lhs, double2x3 rhs)
  bool2x3 op_LessThanOrEqual(double2x3 lhs, double rhs)
  bool2x3 op_LessThanOrEqual(double lhs, double2x3 rhs)
  bool2x3 op_GreaterThan(double2x3 lhs, double2x3 rhs)
  bool2x3 op_GreaterThan(double2x3 lhs, double rhs)
  bool2x3 op_GreaterThan(double lhs, double2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(double2x3 lhs, double2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(double2x3 lhs, double rhs)
  bool2x3 op_GreaterThanOrEqual(double lhs, double2x3 rhs)
  double2x3 op_UnaryNegation(double2x3 val)
  double2x3 op_UnaryPlus(double2x3 val)
  bool2x3 op_Equality(double2x3 lhs, double2x3 rhs)
  bool2x3 op_Equality(double2x3 lhs, double rhs)
  bool2x3 op_Equality(double lhs, double2x3 rhs)
  bool2x3 op_Inequality(double2x3 lhs, double2x3 rhs)
  bool2x3 op_Inequality(double2x3 lhs, double rhs)
  bool2x3 op_Inequality(double lhs, double2x3 rhs)
  double2& get_Item(int index)
  bool Equals(double2x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double2x4
Наследуется от: ValueType
Поля:
  double2 c0
  double2 c1
  double2 c2
  double2 c3
  double2x4 zero
Свойства:
  double2& Item
Методы:
  void .ctor(double2 c0, double2 c1, double2 c2, double2 c3)
  void .ctor(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool2x4 v)
  void .ctor(int v)
  void .ctor(int2x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x4 v)
  void .ctor(float v)
  void .ctor(float2x4 v)
  double2x4 op_Implicit(double v)
  double2x4 op_Explicit(bool v)
  double2x4 op_Explicit(bool2x4 v)
  double2x4 op_Implicit(int v)
  double2x4 op_Implicit(int2x4 v)
  double2x4 op_Implicit(UInt32 v)
  double2x4 op_Implicit(uint2x4 v)
  double2x4 op_Implicit(float v)
  double2x4 op_Implicit(float2x4 v)
  double2x4 op_Multiply(double2x4 lhs, double2x4 rhs)
  double2x4 op_Multiply(double2x4 lhs, double rhs)
  double2x4 op_Multiply(double lhs, double2x4 rhs)
  double2x4 op_Addition(double2x4 lhs, double2x4 rhs)
  double2x4 op_Addition(double2x4 lhs, double rhs)
  double2x4 op_Addition(double lhs, double2x4 rhs)
  double2x4 op_Subtraction(double2x4 lhs, double2x4 rhs)
  double2x4 op_Subtraction(double2x4 lhs, double rhs)
  double2x4 op_Subtraction(double lhs, double2x4 rhs)
  double2x4 op_Division(double2x4 lhs, double2x4 rhs)
  double2x4 op_Division(double2x4 lhs, double rhs)
  double2x4 op_Division(double lhs, double2x4 rhs)
  double2x4 op_Modulus(double2x4 lhs, double2x4 rhs)
  double2x4 op_Modulus(double2x4 lhs, double rhs)
  double2x4 op_Modulus(double lhs, double2x4 rhs)
  double2x4 op_Increment(double2x4 val)
  double2x4 op_Decrement(double2x4 val)
  bool2x4 op_LessThan(double2x4 lhs, double2x4 rhs)
  bool2x4 op_LessThan(double2x4 lhs, double rhs)
  bool2x4 op_LessThan(double lhs, double2x4 rhs)
  bool2x4 op_LessThanOrEqual(double2x4 lhs, double2x4 rhs)
  bool2x4 op_LessThanOrEqual(double2x4 lhs, double rhs)
  bool2x4 op_LessThanOrEqual(double lhs, double2x4 rhs)
  bool2x4 op_GreaterThan(double2x4 lhs, double2x4 rhs)
  bool2x4 op_GreaterThan(double2x4 lhs, double rhs)
  bool2x4 op_GreaterThan(double lhs, double2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(double2x4 lhs, double2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(double2x4 lhs, double rhs)
  bool2x4 op_GreaterThanOrEqual(double lhs, double2x4 rhs)
  double2x4 op_UnaryNegation(double2x4 val)
  double2x4 op_UnaryPlus(double2x4 val)
  bool2x4 op_Equality(double2x4 lhs, double2x4 rhs)
  bool2x4 op_Equality(double2x4 lhs, double rhs)
  bool2x4 op_Equality(double lhs, double2x4 rhs)
  bool2x4 op_Inequality(double2x4 lhs, double2x4 rhs)
  bool2x4 op_Inequality(double2x4 lhs, double rhs)
  bool2x4 op_Inequality(double lhs, double2x4 rhs)
  double2& get_Item(int index)
  bool Equals(double2x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double3
Наследуется от: ValueType
Поля:
  double x
  double y
  double z
  double3 zero
Свойства:
  double4 xxxx
  double4 xxxy
  double4 xxxz
  double4 xxyx
  double4 xxyy
  double4 xxyz
  double4 xxzx
  double4 xxzy
  double4 xxzz
  double4 xyxx
  double4 xyxy
  double4 xyxz
  double4 xyyx
  double4 xyyy
  double4 xyyz
  double4 xyzx
  double4 xyzy
  double4 xyzz
  double4 xzxx
  double4 xzxy
  double4 xzxz
  double4 xzyx
  double4 xzyy
  double4 xzyz
  double4 xzzx
  double4 xzzy
  double4 xzzz
  double4 yxxx
  double4 yxxy
  double4 yxxz
  double4 yxyx
  double4 yxyy
  double4 yxyz
  double4 yxzx
  double4 yxzy
  double4 yxzz
  double4 yyxx
  double4 yyxy
  double4 yyxz
  double4 yyyx
  double4 yyyy
  double4 yyyz
  double4 yyzx
  double4 yyzy
  double4 yyzz
  double4 yzxx
  double4 yzxy
  double4 yzxz
  double4 yzyx
  double4 yzyy
  double4 yzyz
  double4 yzzx
  double4 yzzy
  double4 yzzz
  double4 zxxx
  double4 zxxy
  double4 zxxz
  double4 zxyx
  double4 zxyy
  double4 zxyz
  double4 zxzx
  double4 zxzy
  double4 zxzz
  double4 zyxx
  double4 zyxy
  double4 zyxz
  double4 zyyx
  double4 zyyy
  double4 zyyz
  double4 zyzx
  double4 zyzy
  double4 zyzz
  double4 zzxx
  double4 zzxy
  double4 zzxz
  double4 zzyx
  double4 zzyy
  double4 zzyz
  double4 zzzx
  double4 zzzy
  double4 zzzz
  double3 xxx
  double3 xxy
  double3 xxz
  double3 xyx
  double3 xyy
  double3 xyz
  double3 xzx
  double3 xzy
  double3 xzz
  double3 yxx
  double3 yxy
  double3 yxz
  double3 yyx
  double3 yyy
  double3 yyz
  double3 yzx
  double3 yzy
  double3 yzz
  double3 zxx
  double3 zxy
  double3 zxz
  double3 zyx
  double3 zyy
  double3 zyz
  double3 zzx
  double3 zzy
  double3 zzz
  double2 xx
  double2 xy
  double2 xz
  double2 yx
  double2 yy
  double2 yz
  double2 zx
  double2 zy
  double2 zz
  double Item
Методы:
  void .ctor(double x, double y, double z)
  void .ctor(double x, double2 yz)
  void .ctor(double2 xy, double z)
  void .ctor(double3 xyz)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool3 v)
  void .ctor(int v)
  void .ctor(int3 v)
  void .ctor(UInt32 v)
  void .ctor(uint3 v)
  void .ctor(half v)
  void .ctor(half3 v)
  void .ctor(float v)
  void .ctor(float3 v)
  double3 op_Implicit(double v)
  double3 op_Explicit(bool v)
  double3 op_Explicit(bool3 v)
  double3 op_Implicit(int v)
  double3 op_Implicit(int3 v)
  double3 op_Implicit(UInt32 v)
  double3 op_Implicit(uint3 v)
  double3 op_Implicit(half v)
  double3 op_Implicit(half3 v)
  double3 op_Implicit(float v)
  double3 op_Implicit(float3 v)
  double3 op_Multiply(double3 lhs, double3 rhs)
  double3 op_Multiply(double3 lhs, double rhs)
  double3 op_Multiply(double lhs, double3 rhs)
  double3 op_Addition(double3 lhs, double3 rhs)
  double3 op_Addition(double3 lhs, double rhs)
  double3 op_Addition(double lhs, double3 rhs)
  double3 op_Subtraction(double3 lhs, double3 rhs)
  double3 op_Subtraction(double3 lhs, double rhs)
  double3 op_Subtraction(double lhs, double3 rhs)
  double3 op_Division(double3 lhs, double3 rhs)
  double3 op_Division(double3 lhs, double rhs)
  double3 op_Division(double lhs, double3 rhs)
  double3 op_Modulus(double3 lhs, double3 rhs)
  double3 op_Modulus(double3 lhs, double rhs)
  double3 op_Modulus(double lhs, double3 rhs)
  double3 op_Increment(double3 val)
  double3 op_Decrement(double3 val)
  bool3 op_LessThan(double3 lhs, double3 rhs)
  bool3 op_LessThan(double3 lhs, double rhs)
  bool3 op_LessThan(double lhs, double3 rhs)
  bool3 op_LessThanOrEqual(double3 lhs, double3 rhs)
  bool3 op_LessThanOrEqual(double3 lhs, double rhs)
  bool3 op_LessThanOrEqual(double lhs, double3 rhs)
  bool3 op_GreaterThan(double3 lhs, double3 rhs)
  bool3 op_GreaterThan(double3 lhs, double rhs)
  bool3 op_GreaterThan(double lhs, double3 rhs)
  bool3 op_GreaterThanOrEqual(double3 lhs, double3 rhs)
  bool3 op_GreaterThanOrEqual(double3 lhs, double rhs)
  bool3 op_GreaterThanOrEqual(double lhs, double3 rhs)
  double3 op_UnaryNegation(double3 val)
  double3 op_UnaryPlus(double3 val)
  bool3 op_Equality(double3 lhs, double3 rhs)
  bool3 op_Equality(double3 lhs, double rhs)
  bool3 op_Equality(double lhs, double3 rhs)
  bool3 op_Inequality(double3 lhs, double3 rhs)
  bool3 op_Inequality(double3 lhs, double rhs)
  bool3 op_Inequality(double lhs, double3 rhs)
  double4 get_xxxx()
  double4 get_xxxy()
  double4 get_xxxz()
  double4 get_xxyx()
  double4 get_xxyy()
  double4 get_xxyz()
  double4 get_xxzx()
  double4 get_xxzy()
  double4 get_xxzz()
  double4 get_xyxx()
  double4 get_xyxy()
  double4 get_xyxz()
  double4 get_xyyx()
  double4 get_xyyy()
  double4 get_xyyz()
  double4 get_xyzx()
  double4 get_xyzy()
  double4 get_xyzz()
  double4 get_xzxx()
  double4 get_xzxy()
  double4 get_xzxz()
  double4 get_xzyx()
  double4 get_xzyy()
  double4 get_xzyz()
  double4 get_xzzx()
  double4 get_xzzy()
  double4 get_xzzz()
  double4 get_yxxx()
  double4 get_yxxy()
  double4 get_yxxz()
  double4 get_yxyx()
  double4 get_yxyy()
  double4 get_yxyz()
  double4 get_yxzx()
  double4 get_yxzy()
  double4 get_yxzz()
  double4 get_yyxx()
  double4 get_yyxy()
  double4 get_yyxz()
  double4 get_yyyx()
  double4 get_yyyy()
  double4 get_yyyz()
  double4 get_yyzx()
  double4 get_yyzy()
  double4 get_yyzz()
  double4 get_yzxx()
  double4 get_yzxy()
  double4 get_yzxz()
  double4 get_yzyx()
  double4 get_yzyy()
  double4 get_yzyz()
  double4 get_yzzx()
  double4 get_yzzy()
  double4 get_yzzz()
  double4 get_zxxx()
  double4 get_zxxy()
  double4 get_zxxz()
  double4 get_zxyx()
  double4 get_zxyy()
  double4 get_zxyz()
  double4 get_zxzx()
  double4 get_zxzy()
  double4 get_zxzz()
  double4 get_zyxx()
  double4 get_zyxy()
  double4 get_zyxz()
  double4 get_zyyx()
  double4 get_zyyy()
  double4 get_zyyz()
  double4 get_zyzx()
  double4 get_zyzy()
  double4 get_zyzz()
  double4 get_zzxx()
  double4 get_zzxy()
  double4 get_zzxz()
  double4 get_zzyx()
  double4 get_zzyy()
  double4 get_zzyz()
  double4 get_zzzx()
  double4 get_zzzy()
  double4 get_zzzz()
  double3 get_xxx()
  double3 get_xxy()
  double3 get_xxz()
  double3 get_xyx()
  double3 get_xyy()
  double3 get_xyz()
  void set_xyz(double3 value)
  double3 get_xzx()
  double3 get_xzy()
  void set_xzy(double3 value)
  double3 get_xzz()
  double3 get_yxx()
  double3 get_yxy()
  double3 get_yxz()
  void set_yxz(double3 value)
  double3 get_yyx()
  double3 get_yyy()
  double3 get_yyz()
  double3 get_yzx()
  void set_yzx(double3 value)
  double3 get_yzy()
  double3 get_yzz()
  double3 get_zxx()
  double3 get_zxy()
  void set_zxy(double3 value)
  double3 get_zxz()
  double3 get_zyx()
  void set_zyx(double3 value)
  double3 get_zyy()
  double3 get_zyz()
  double3 get_zzx()
  double3 get_zzy()
  double3 get_zzz()
  double2 get_xx()
  double2 get_xy()
  void set_xy(double2 value)
  double2 get_xz()
  void set_xz(double2 value)
  double2 get_yx()
  void set_yx(double2 value)
  double2 get_yy()
  double2 get_yz()
  void set_yz(double2 value)
  double2 get_zx()
  void set_zx(double2 value)
  double2 get_zy()
  void set_zy(double2 value)
  double2 get_zz()
  double get_Item(int index)
  void set_Item(int index, double value)
  bool Equals(double3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double3x2
Наследуется от: ValueType
Поля:
  double3 c0
  double3 c1
  double3x2 zero
Свойства:
  double3& Item
Методы:
  void .ctor(double3 c0, double3 c1)
  void .ctor(double m00, double m01, double m10, double m11, double m20, double m21)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool3x2 v)
  void .ctor(int v)
  void .ctor(int3x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x2 v)
  void .ctor(float v)
  void .ctor(float3x2 v)
  double3x2 op_Implicit(double v)
  double3x2 op_Explicit(bool v)
  double3x2 op_Explicit(bool3x2 v)
  double3x2 op_Implicit(int v)
  double3x2 op_Implicit(int3x2 v)
  double3x2 op_Implicit(UInt32 v)
  double3x2 op_Implicit(uint3x2 v)
  double3x2 op_Implicit(float v)
  double3x2 op_Implicit(float3x2 v)
  double3x2 op_Multiply(double3x2 lhs, double3x2 rhs)
  double3x2 op_Multiply(double3x2 lhs, double rhs)
  double3x2 op_Multiply(double lhs, double3x2 rhs)
  double3x2 op_Addition(double3x2 lhs, double3x2 rhs)
  double3x2 op_Addition(double3x2 lhs, double rhs)
  double3x2 op_Addition(double lhs, double3x2 rhs)
  double3x2 op_Subtraction(double3x2 lhs, double3x2 rhs)
  double3x2 op_Subtraction(double3x2 lhs, double rhs)
  double3x2 op_Subtraction(double lhs, double3x2 rhs)
  double3x2 op_Division(double3x2 lhs, double3x2 rhs)
  double3x2 op_Division(double3x2 lhs, double rhs)
  double3x2 op_Division(double lhs, double3x2 rhs)
  double3x2 op_Modulus(double3x2 lhs, double3x2 rhs)
  double3x2 op_Modulus(double3x2 lhs, double rhs)
  double3x2 op_Modulus(double lhs, double3x2 rhs)
  double3x2 op_Increment(double3x2 val)
  double3x2 op_Decrement(double3x2 val)
  bool3x2 op_LessThan(double3x2 lhs, double3x2 rhs)
  bool3x2 op_LessThan(double3x2 lhs, double rhs)
  bool3x2 op_LessThan(double lhs, double3x2 rhs)
  bool3x2 op_LessThanOrEqual(double3x2 lhs, double3x2 rhs)
  bool3x2 op_LessThanOrEqual(double3x2 lhs, double rhs)
  bool3x2 op_LessThanOrEqual(double lhs, double3x2 rhs)
  bool3x2 op_GreaterThan(double3x2 lhs, double3x2 rhs)
  bool3x2 op_GreaterThan(double3x2 lhs, double rhs)
  bool3x2 op_GreaterThan(double lhs, double3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(double3x2 lhs, double3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(double3x2 lhs, double rhs)
  bool3x2 op_GreaterThanOrEqual(double lhs, double3x2 rhs)
  double3x2 op_UnaryNegation(double3x2 val)
  double3x2 op_UnaryPlus(double3x2 val)
  bool3x2 op_Equality(double3x2 lhs, double3x2 rhs)
  bool3x2 op_Equality(double3x2 lhs, double rhs)
  bool3x2 op_Equality(double lhs, double3x2 rhs)
  bool3x2 op_Inequality(double3x2 lhs, double3x2 rhs)
  bool3x2 op_Inequality(double3x2 lhs, double rhs)
  bool3x2 op_Inequality(double lhs, double3x2 rhs)
  double3& get_Item(int index)
  bool Equals(double3x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double3x3
Наследуется от: ValueType
Поля:
  double3 c0
  double3 c1
  double3 c2
  double3x3 identity
  double3x3 zero
Свойства:
  double3& Item
Методы:
  void .ctor(double3 c0, double3 c1, double3 c2)
  void .ctor(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool3x3 v)
  void .ctor(int v)
  void .ctor(int3x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x3 v)
  void .ctor(float v)
  void .ctor(float3x3 v)
  double3x3 op_Implicit(double v)
  double3x3 op_Explicit(bool v)
  double3x3 op_Explicit(bool3x3 v)
  double3x3 op_Implicit(int v)
  double3x3 op_Implicit(int3x3 v)
  double3x3 op_Implicit(UInt32 v)
  double3x3 op_Implicit(uint3x3 v)
  double3x3 op_Implicit(float v)
  double3x3 op_Implicit(float3x3 v)
  double3x3 op_Multiply(double3x3 lhs, double3x3 rhs)
  double3x3 op_Multiply(double3x3 lhs, double rhs)
  double3x3 op_Multiply(double lhs, double3x3 rhs)
  double3x3 op_Addition(double3x3 lhs, double3x3 rhs)
  double3x3 op_Addition(double3x3 lhs, double rhs)
  double3x3 op_Addition(double lhs, double3x3 rhs)
  double3x3 op_Subtraction(double3x3 lhs, double3x3 rhs)
  double3x3 op_Subtraction(double3x3 lhs, double rhs)
  double3x3 op_Subtraction(double lhs, double3x3 rhs)
  double3x3 op_Division(double3x3 lhs, double3x3 rhs)
  double3x3 op_Division(double3x3 lhs, double rhs)
  double3x3 op_Division(double lhs, double3x3 rhs)
  double3x3 op_Modulus(double3x3 lhs, double3x3 rhs)
  double3x3 op_Modulus(double3x3 lhs, double rhs)
  double3x3 op_Modulus(double lhs, double3x3 rhs)
  double3x3 op_Increment(double3x3 val)
  double3x3 op_Decrement(double3x3 val)
  bool3x3 op_LessThan(double3x3 lhs, double3x3 rhs)
  bool3x3 op_LessThan(double3x3 lhs, double rhs)
  bool3x3 op_LessThan(double lhs, double3x3 rhs)
  bool3x3 op_LessThanOrEqual(double3x3 lhs, double3x3 rhs)
  bool3x3 op_LessThanOrEqual(double3x3 lhs, double rhs)
  bool3x3 op_LessThanOrEqual(double lhs, double3x3 rhs)
  bool3x3 op_GreaterThan(double3x3 lhs, double3x3 rhs)
  bool3x3 op_GreaterThan(double3x3 lhs, double rhs)
  bool3x3 op_GreaterThan(double lhs, double3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(double3x3 lhs, double3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(double3x3 lhs, double rhs)
  bool3x3 op_GreaterThanOrEqual(double lhs, double3x3 rhs)
  double3x3 op_UnaryNegation(double3x3 val)
  double3x3 op_UnaryPlus(double3x3 val)
  bool3x3 op_Equality(double3x3 lhs, double3x3 rhs)
  bool3x3 op_Equality(double3x3 lhs, double rhs)
  bool3x3 op_Equality(double lhs, double3x3 rhs)
  bool3x3 op_Inequality(double3x3 lhs, double3x3 rhs)
  bool3x3 op_Inequality(double3x3 lhs, double rhs)
  bool3x3 op_Inequality(double lhs, double3x3 rhs)
  double3& get_Item(int index)
  bool Equals(double3x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.double3x4
Наследуется от: ValueType
Поля:
  double3 c0
  double3 c1
  double3 c2
  double3 c3
  double3x4 zero
Свойства:
  double3& Item
Методы:
  void .ctor(double3 c0, double3 c1, double3 c2, double3 c3)
  void .ctor(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool3x4 v)
  void .ctor(int v)
  void .ctor(int3x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x4 v)
  void .ctor(float v)
  void .ctor(float3x4 v)
  double3x4 op_Implicit(double v)
  double3x4 op_Explicit(bool v)
  double3x4 op_Explicit(bool3x4 v)
  double3x4 op_Implicit(int v)
  double3x4 op_Implicit(int3x4 v)
  double3x4 op_Implicit(UInt32 v)
  double3x4 op_Implicit(uint3x4 v)
  double3x4 op_Implicit(float v)
  double3x4 op_Implicit(float3x4 v)
  double3x4 op_Multiply(double3x4 lhs, double3x4 rhs)
  double3x4 op_Multiply(double3x4 lhs, double rhs)
  double3x4 op_Multiply(double lhs, double3x4 rhs)
  double3x4 op_Addition(double3x4 lhs, double3x4 rhs)
  double3x4 op_Addition(double3x4 lhs, double rhs)
  double3x4 op_Addition(double lhs, double3x4 rhs)
  double3x4 op_Subtraction(double3x4 lhs, double3x4 rhs)
  double3x4 op_Subtraction(double3x4 lhs, double rhs)
  double3x4 op_Subtraction(double lhs, double3x4 rhs)
  double3x4 op_Division(double3x4 lhs, double3x4 rhs)
  double3x4 op_Division(double3x4 lhs, double rhs)
  double3x4 op_Division(double lhs, double3x4 rhs)
  double3x4 op_Modulus(double3x4 lhs, double3x4 rhs)
  double3x4 op_Modulus(double3x4 lhs, double rhs)
  double3x4 op_Modulus(double lhs, double3x4 rhs)
  double3x4 op_Increment(double3x4 val)
  double3x4 op_Decrement(double3x4 val)
  bool3x4 op_LessThan(double3x4 lhs, double3x4 rhs)
  bool3x4 op_LessThan(double3x4 lhs, double rhs)
  bool3x4 op_LessThan(double lhs, double3x4 rhs)
  bool3x4 op_LessThanOrEqual(double3x4 lhs, double3x4 rhs)
  bool3x4 op_LessThanOrEqual(double3x4 lhs, double rhs)
  bool3x4 op_LessThanOrEqual(double lhs, double3x4 rhs)
  bool3x4 op_GreaterThan(double3x4 lhs, double3x4 rhs)
  bool3x4 op_GreaterThan(double3x4 lhs, double rhs)
  bool3x4 op_GreaterThan(double lhs, double3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(double3x4 lhs, double3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(double3x4 lhs, double rhs)
  bool3x4 op_GreaterThanOrEqual(double lhs, double3x4 rhs)
  double3x4 op_UnaryNegation(double3x4 val)
  double3x4 op_UnaryPlus(double3x4 val)
  bool3x4 op_Equality(double3x4 lhs, double3x4 rhs)
  bool3x4 op_Equality(double3x4 lhs, double rhs)
  bool3x4 op_Equality(double lhs, double3x4 rhs)
  bool3x4 op_Inequality(double3x4 lhs, double3x4 rhs)
  bool3x4 op_Inequality(double3x4 lhs, double rhs)
  bool3x4 op_Inequality(double lhs, double3x4 rhs)
  double3& get_Item(int index)
  bool Equals(double3x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double4
Наследуется от: ValueType
Поля:
  double x
  double y
  double z
  double w
  double4 zero
Свойства:
  double4 xxxx
  double4 xxxy
  double4 xxxz
  double4 xxxw
  double4 xxyx
  double4 xxyy
  double4 xxyz
  double4 xxyw
  double4 xxzx
  double4 xxzy
  double4 xxzz
  double4 xxzw
  double4 xxwx
  double4 xxwy
  double4 xxwz
  double4 xxww
  double4 xyxx
  double4 xyxy
  double4 xyxz
  double4 xyxw
  double4 xyyx
  double4 xyyy
  double4 xyyz
  double4 xyyw
  double4 xyzx
  double4 xyzy
  double4 xyzz
  double4 xyzw
  double4 xywx
  double4 xywy
  double4 xywz
  double4 xyww
  double4 xzxx
  double4 xzxy
  double4 xzxz
  double4 xzxw
  double4 xzyx
  double4 xzyy
  double4 xzyz
  double4 xzyw
  double4 xzzx
  double4 xzzy
  double4 xzzz
  double4 xzzw
  double4 xzwx
  double4 xzwy
  double4 xzwz
  double4 xzww
  double4 xwxx
  double4 xwxy
  double4 xwxz
  double4 xwxw
  double4 xwyx
  double4 xwyy
  double4 xwyz
  double4 xwyw
  double4 xwzx
  double4 xwzy
  double4 xwzz
  double4 xwzw
  double4 xwwx
  double4 xwwy
  double4 xwwz
  double4 xwww
  double4 yxxx
  double4 yxxy
  double4 yxxz
  double4 yxxw
  double4 yxyx
  double4 yxyy
  double4 yxyz
  double4 yxyw
  double4 yxzx
  double4 yxzy
  double4 yxzz
  double4 yxzw
  double4 yxwx
  double4 yxwy
  double4 yxwz
  double4 yxww
  double4 yyxx
  double4 yyxy
  double4 yyxz
  double4 yyxw
  double4 yyyx
  double4 yyyy
  double4 yyyz
  double4 yyyw
  double4 yyzx
  double4 yyzy
  double4 yyzz
  double4 yyzw
  double4 yywx
  double4 yywy
  double4 yywz
  double4 yyww
  double4 yzxx
  double4 yzxy
  double4 yzxz
  double4 yzxw
  double4 yzyx
  double4 yzyy
  double4 yzyz
  double4 yzyw
  double4 yzzx
  double4 yzzy
  double4 yzzz
  double4 yzzw
  double4 yzwx
  double4 yzwy
  double4 yzwz
  double4 yzww
  double4 ywxx
  double4 ywxy
  double4 ywxz
  double4 ywxw
  double4 ywyx
  double4 ywyy
  double4 ywyz
  double4 ywyw
  double4 ywzx
  double4 ywzy
  double4 ywzz
  double4 ywzw
  double4 ywwx
  double4 ywwy
  double4 ywwz
  double4 ywww
  double4 zxxx
  double4 zxxy
  double4 zxxz
  double4 zxxw
  double4 zxyx
  double4 zxyy
  double4 zxyz
  double4 zxyw
  double4 zxzx
  double4 zxzy
  double4 zxzz
  double4 zxzw
  double4 zxwx
  double4 zxwy
  double4 zxwz
  double4 zxww
  double4 zyxx
  double4 zyxy
  double4 zyxz
  double4 zyxw
  double4 zyyx
  double4 zyyy
  double4 zyyz
  double4 zyyw
  double4 zyzx
  double4 zyzy
  double4 zyzz
  double4 zyzw
  double4 zywx
  double4 zywy
  double4 zywz
  double4 zyww
  double4 zzxx
  double4 zzxy
  double4 zzxz
  double4 zzxw
  double4 zzyx
  double4 zzyy
  double4 zzyz
  double4 zzyw
  double4 zzzx
  double4 zzzy
  double4 zzzz
  double4 zzzw
  double4 zzwx
  double4 zzwy
  double4 zzwz
  double4 zzww
  double4 zwxx
  double4 zwxy
  double4 zwxz
  double4 zwxw
  double4 zwyx
  double4 zwyy
  double4 zwyz
  double4 zwyw
  double4 zwzx
  double4 zwzy
  double4 zwzz
  double4 zwzw
  double4 zwwx
  double4 zwwy
  double4 zwwz
  double4 zwww
  double4 wxxx
  double4 wxxy
  double4 wxxz
  double4 wxxw
  double4 wxyx
  double4 wxyy
  double4 wxyz
  double4 wxyw
  double4 wxzx
  double4 wxzy
  double4 wxzz
  double4 wxzw
  double4 wxwx
  double4 wxwy
  double4 wxwz
  double4 wxww
  double4 wyxx
  double4 wyxy
  double4 wyxz
  double4 wyxw
  double4 wyyx
  double4 wyyy
  double4 wyyz
  double4 wyyw
  double4 wyzx
  double4 wyzy
  double4 wyzz
  double4 wyzw
  double4 wywx
  double4 wywy
  double4 wywz
  double4 wyww
  double4 wzxx
  double4 wzxy
  double4 wzxz
  double4 wzxw
  double4 wzyx
  double4 wzyy
  double4 wzyz
  double4 wzyw
  double4 wzzx
  double4 wzzy
  double4 wzzz
  double4 wzzw
  double4 wzwx
  double4 wzwy
  double4 wzwz
  double4 wzww
  double4 wwxx
  double4 wwxy
  double4 wwxz
  double4 wwxw
  double4 wwyx
  double4 wwyy
  double4 wwyz
  double4 wwyw
  double4 wwzx
  double4 wwzy
  double4 wwzz
  double4 wwzw
  double4 wwwx
  double4 wwwy
  double4 wwwz
  double4 wwww
  double3 xxx
  double3 xxy
  double3 xxz
  double3 xxw
  double3 xyx
  double3 xyy
  double3 xyz
  double3 xyw
  double3 xzx
  double3 xzy
  double3 xzz
  double3 xzw
  double3 xwx
  double3 xwy
  double3 xwz
  double3 xww
  double3 yxx
  double3 yxy
  double3 yxz
  double3 yxw
  double3 yyx
  double3 yyy
  double3 yyz
  double3 yyw
  double3 yzx
  double3 yzy
  double3 yzz
  double3 yzw
  double3 ywx
  double3 ywy
  double3 ywz
  double3 yww
  double3 zxx
  double3 zxy
  double3 zxz
  double3 zxw
  double3 zyx
  double3 zyy
  double3 zyz
  double3 zyw
  double3 zzx
  double3 zzy
  double3 zzz
  double3 zzw
  double3 zwx
  double3 zwy
  double3 zwz
  double3 zww
  double3 wxx
  double3 wxy
  double3 wxz
  double3 wxw
  double3 wyx
  double3 wyy
  double3 wyz
  double3 wyw
  double3 wzx
  double3 wzy
  double3 wzz
  double3 wzw
  double3 wwx
  double3 wwy
  double3 wwz
  double3 www
  double2 xx
  double2 xy
  double2 xz
  double2 xw
  double2 yx
  double2 yy
  double2 yz
  double2 yw
  double2 zx
  double2 zy
  double2 zz
  double2 zw
  double2 wx
  double2 wy
  double2 wz
  double2 ww
  double Item
Методы:
  void .ctor(double x, double y, double z, double w)
  void .ctor(double x, double y, double2 zw)
  void .ctor(double x, double2 yz, double w)
  void .ctor(double x, double3 yzw)
  void .ctor(double2 xy, double z, double w)
  void .ctor(double2 xy, double2 zw)
  void .ctor(double3 xyz, double w)
  void .ctor(double4 xyzw)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool4 v)
  void .ctor(int v)
  void .ctor(int4 v)
  void .ctor(UInt32 v)
  void .ctor(uint4 v)
  void .ctor(half v)
  void .ctor(half4 v)
  void .ctor(float v)
  void .ctor(float4 v)
  double4 op_Implicit(double v)
  double4 op_Explicit(bool v)
  double4 op_Explicit(bool4 v)
  double4 op_Implicit(int v)
  double4 op_Implicit(int4 v)
  double4 op_Implicit(UInt32 v)
  double4 op_Implicit(uint4 v)
  double4 op_Implicit(half v)
  double4 op_Implicit(half4 v)
  double4 op_Implicit(float v)
  double4 op_Implicit(float4 v)
  double4 op_Multiply(double4 lhs, double4 rhs)
  double4 op_Multiply(double4 lhs, double rhs)
  double4 op_Multiply(double lhs, double4 rhs)
  double4 op_Addition(double4 lhs, double4 rhs)
  double4 op_Addition(double4 lhs, double rhs)
  double4 op_Addition(double lhs, double4 rhs)
  double4 op_Subtraction(double4 lhs, double4 rhs)
  double4 op_Subtraction(double4 lhs, double rhs)
  double4 op_Subtraction(double lhs, double4 rhs)
  double4 op_Division(double4 lhs, double4 rhs)
  double4 op_Division(double4 lhs, double rhs)
  double4 op_Division(double lhs, double4 rhs)
  double4 op_Modulus(double4 lhs, double4 rhs)
  double4 op_Modulus(double4 lhs, double rhs)
  double4 op_Modulus(double lhs, double4 rhs)
  double4 op_Increment(double4 val)
  double4 op_Decrement(double4 val)
  bool4 op_LessThan(double4 lhs, double4 rhs)
  bool4 op_LessThan(double4 lhs, double rhs)
  bool4 op_LessThan(double lhs, double4 rhs)
  bool4 op_LessThanOrEqual(double4 lhs, double4 rhs)
  bool4 op_LessThanOrEqual(double4 lhs, double rhs)
  bool4 op_LessThanOrEqual(double lhs, double4 rhs)
  bool4 op_GreaterThan(double4 lhs, double4 rhs)
  bool4 op_GreaterThan(double4 lhs, double rhs)
  bool4 op_GreaterThan(double lhs, double4 rhs)
  bool4 op_GreaterThanOrEqual(double4 lhs, double4 rhs)
  bool4 op_GreaterThanOrEqual(double4 lhs, double rhs)
  bool4 op_GreaterThanOrEqual(double lhs, double4 rhs)
  double4 op_UnaryNegation(double4 val)
  double4 op_UnaryPlus(double4 val)
  bool4 op_Equality(double4 lhs, double4 rhs)
  bool4 op_Equality(double4 lhs, double rhs)
  bool4 op_Equality(double lhs, double4 rhs)
  bool4 op_Inequality(double4 lhs, double4 rhs)
  bool4 op_Inequality(double4 lhs, double rhs)
  bool4 op_Inequality(double lhs, double4 rhs)
  double4 get_xxxx()
  double4 get_xxxy()
  double4 get_xxxz()
  double4 get_xxxw()
  double4 get_xxyx()
  double4 get_xxyy()
  double4 get_xxyz()
  double4 get_xxyw()
  double4 get_xxzx()
  double4 get_xxzy()
  double4 get_xxzz()
  double4 get_xxzw()
  double4 get_xxwx()
  double4 get_xxwy()
  double4 get_xxwz()
  double4 get_xxww()
  double4 get_xyxx()
  double4 get_xyxy()
  double4 get_xyxz()
  double4 get_xyxw()
  double4 get_xyyx()
  double4 get_xyyy()
  double4 get_xyyz()
  double4 get_xyyw()
  double4 get_xyzx()
  double4 get_xyzy()
  double4 get_xyzz()
  double4 get_xyzw()
  void set_xyzw(double4 value)
  double4 get_xywx()
  double4 get_xywy()
  double4 get_xywz()
  void set_xywz(double4 value)
  double4 get_xyww()
  double4 get_xzxx()
  double4 get_xzxy()
  double4 get_xzxz()
  double4 get_xzxw()
  double4 get_xzyx()
  double4 get_xzyy()
  double4 get_xzyz()
  double4 get_xzyw()
  void set_xzyw(double4 value)
  double4 get_xzzx()
  double4 get_xzzy()
  double4 get_xzzz()
  double4 get_xzzw()
  double4 get_xzwx()
  double4 get_xzwy()
  void set_xzwy(double4 value)
  double4 get_xzwz()
  double4 get_xzww()
  double4 get_xwxx()
  double4 get_xwxy()
  double4 get_xwxz()
  double4 get_xwxw()
  double4 get_xwyx()
  double4 get_xwyy()
  double4 get_xwyz()
  void set_xwyz(double4 value)
  double4 get_xwyw()
  double4 get_xwzx()
  double4 get_xwzy()
  void set_xwzy(double4 value)
  double4 get_xwzz()
  double4 get_xwzw()
  double4 get_xwwx()
  double4 get_xwwy()
  double4 get_xwwz()
  double4 get_xwww()
  double4 get_yxxx()
  double4 get_yxxy()
  double4 get_yxxz()
  double4 get_yxxw()
  double4 get_yxyx()
  double4 get_yxyy()
  double4 get_yxyz()
  double4 get_yxyw()
  double4 get_yxzx()
  double4 get_yxzy()
  double4 get_yxzz()
  double4 get_yxzw()
  void set_yxzw(double4 value)
  double4 get_yxwx()
  double4 get_yxwy()
  double4 get_yxwz()
  void set_yxwz(double4 value)
  double4 get_yxww()
  double4 get_yyxx()
  double4 get_yyxy()
  double4 get_yyxz()
  double4 get_yyxw()
  double4 get_yyyx()
  double4 get_yyyy()
  double4 get_yyyz()
  double4 get_yyyw()
  double4 get_yyzx()
  double4 get_yyzy()
  double4 get_yyzz()
  double4 get_yyzw()
  double4 get_yywx()
  double4 get_yywy()
  double4 get_yywz()
  double4 get_yyww()
  double4 get_yzxx()
  double4 get_yzxy()
  double4 get_yzxz()
  double4 get_yzxw()
  void set_yzxw(double4 value)
  double4 get_yzyx()
  double4 get_yzyy()
  double4 get_yzyz()
  double4 get_yzyw()
  double4 get_yzzx()
  double4 get_yzzy()
  double4 get_yzzz()
  double4 get_yzzw()
  double4 get_yzwx()
  void set_yzwx(double4 value)
  double4 get_yzwy()
  double4 get_yzwz()
  double4 get_yzww()
  double4 get_ywxx()
  double4 get_ywxy()
  double4 get_ywxz()
  void set_ywxz(double4 value)
  double4 get_ywxw()
  double4 get_ywyx()
  double4 get_ywyy()
  double4 get_ywyz()
  double4 get_ywyw()
  double4 get_ywzx()
  void set_ywzx(double4 value)
  double4 get_ywzy()
  double4 get_ywzz()
  double4 get_ywzw()
  double4 get_ywwx()
  double4 get_ywwy()
  double4 get_ywwz()
  double4 get_ywww()
  double4 get_zxxx()
  double4 get_zxxy()
  double4 get_zxxz()
  double4 get_zxxw()
  double4 get_zxyx()
  double4 get_zxyy()
  double4 get_zxyz()
  double4 get_zxyw()
  void set_zxyw(double4 value)
  double4 get_zxzx()
  double4 get_zxzy()
  double4 get_zxzz()
  double4 get_zxzw()
  double4 get_zxwx()
  double4 get_zxwy()
  void set_zxwy(double4 value)
  double4 get_zxwz()
  double4 get_zxww()
  double4 get_zyxx()
  double4 get_zyxy()
  double4 get_zyxz()
  double4 get_zyxw()
  void set_zyxw(double4 value)
  double4 get_zyyx()
  double4 get_zyyy()
  double4 get_zyyz()
  double4 get_zyyw()
  double4 get_zyzx()
  double4 get_zyzy()
  double4 get_zyzz()
  double4 get_zyzw()
  double4 get_zywx()
  void set_zywx(double4 value)
  double4 get_zywy()
  double4 get_zywz()
  double4 get_zyww()
  double4 get_zzxx()
  double4 get_zzxy()
  double4 get_zzxz()
  double4 get_zzxw()
  double4 get_zzyx()
  double4 get_zzyy()
  double4 get_zzyz()
  double4 get_zzyw()
  double4 get_zzzx()
  double4 get_zzzy()
  double4 get_zzzz()
  double4 get_zzzw()
  double4 get_zzwx()
  double4 get_zzwy()
  double4 get_zzwz()
  double4 get_zzww()
  double4 get_zwxx()
  double4 get_zwxy()
  void set_zwxy(double4 value)
  double4 get_zwxz()
  double4 get_zwxw()
  double4 get_zwyx()
  void set_zwyx(double4 value)
  double4 get_zwyy()
  double4 get_zwyz()
  double4 get_zwyw()
  double4 get_zwzx()
  double4 get_zwzy()
  double4 get_zwzz()
  double4 get_zwzw()
  double4 get_zwwx()
  double4 get_zwwy()
  double4 get_zwwz()
  double4 get_zwww()
  double4 get_wxxx()
  double4 get_wxxy()
  double4 get_wxxz()
  double4 get_wxxw()
  double4 get_wxyx()
  double4 get_wxyy()
  double4 get_wxyz()
  void set_wxyz(double4 value)
  double4 get_wxyw()
  double4 get_wxzx()
  double4 get_wxzy()
  void set_wxzy(double4 value)
  double4 get_wxzz()
  double4 get_wxzw()
  double4 get_wxwx()
  double4 get_wxwy()
  double4 get_wxwz()
  double4 get_wxww()
  double4 get_wyxx()
  double4 get_wyxy()
  double4 get_wyxz()
  void set_wyxz(double4 value)
  double4 get_wyxw()
  double4 get_wyyx()
  double4 get_wyyy()
  double4 get_wyyz()
  double4 get_wyyw()
  double4 get_wyzx()
  void set_wyzx(double4 value)
  double4 get_wyzy()
  double4 get_wyzz()
  double4 get_wyzw()
  double4 get_wywx()
  double4 get_wywy()
  double4 get_wywz()
  double4 get_wyww()
  double4 get_wzxx()
  double4 get_wzxy()
  void set_wzxy(double4 value)
  double4 get_wzxz()
  double4 get_wzxw()
  double4 get_wzyx()
  void set_wzyx(double4 value)
  double4 get_wzyy()
  double4 get_wzyz()
  double4 get_wzyw()
  double4 get_wzzx()
  double4 get_wzzy()
  double4 get_wzzz()
  double4 get_wzzw()
  double4 get_wzwx()
  double4 get_wzwy()
  double4 get_wzwz()
  double4 get_wzww()
  double4 get_wwxx()
  double4 get_wwxy()
  double4 get_wwxz()
  double4 get_wwxw()
  double4 get_wwyx()
  double4 get_wwyy()
  double4 get_wwyz()
  double4 get_wwyw()
  double4 get_wwzx()
  double4 get_wwzy()
  double4 get_wwzz()
  double4 get_wwzw()
  double4 get_wwwx()
  double4 get_wwwy()
  double4 get_wwwz()
  double4 get_wwww()
  double3 get_xxx()
  double3 get_xxy()
  double3 get_xxz()
  double3 get_xxw()
  double3 get_xyx()
  double3 get_xyy()
  double3 get_xyz()
  void set_xyz(double3 value)
  double3 get_xyw()
  void set_xyw(double3 value)
  double3 get_xzx()
  double3 get_xzy()
  void set_xzy(double3 value)
  double3 get_xzz()
  double3 get_xzw()
  void set_xzw(double3 value)
  double3 get_xwx()
  double3 get_xwy()
  void set_xwy(double3 value)
  double3 get_xwz()
  void set_xwz(double3 value)
  double3 get_xww()
  double3 get_yxx()
  double3 get_yxy()
  double3 get_yxz()
  void set_yxz(double3 value)
  double3 get_yxw()
  void set_yxw(double3 value)
  double3 get_yyx()
  double3 get_yyy()
  double3 get_yyz()
  double3 get_yyw()
  double3 get_yzx()
  void set_yzx(double3 value)
  double3 get_yzy()
  double3 get_yzz()
  double3 get_yzw()
  void set_yzw(double3 value)
  double3 get_ywx()
  void set_ywx(double3 value)
  double3 get_ywy()
  double3 get_ywz()
  void set_ywz(double3 value)
  double3 get_yww()
  double3 get_zxx()
  double3 get_zxy()
  void set_zxy(double3 value)
  double3 get_zxz()
  double3 get_zxw()
  void set_zxw(double3 value)
  double3 get_zyx()
  void set_zyx(double3 value)
  double3 get_zyy()
  double3 get_zyz()
  double3 get_zyw()
  void set_zyw(double3 value)
  double3 get_zzx()
  double3 get_zzy()
  double3 get_zzz()
  double3 get_zzw()
  double3 get_zwx()
  void set_zwx(double3 value)
  double3 get_zwy()
  void set_zwy(double3 value)
  double3 get_zwz()
  double3 get_zww()
  double3 get_wxx()
  double3 get_wxy()
  void set_wxy(double3 value)
  double3 get_wxz()
  void set_wxz(double3 value)
  double3 get_wxw()
  double3 get_wyx()
  void set_wyx(double3 value)
  double3 get_wyy()
  double3 get_wyz()
  void set_wyz(double3 value)
  double3 get_wyw()
  double3 get_wzx()
  void set_wzx(double3 value)
  double3 get_wzy()
  void set_wzy(double3 value)
  double3 get_wzz()
  double3 get_wzw()
  double3 get_wwx()
  double3 get_wwy()
  double3 get_wwz()
  double3 get_www()
  double2 get_xx()
  double2 get_xy()
  void set_xy(double2 value)
  double2 get_xz()
  void set_xz(double2 value)
  double2 get_xw()
  void set_xw(double2 value)
  double2 get_yx()
  void set_yx(double2 value)
  double2 get_yy()
  double2 get_yz()
  void set_yz(double2 value)
  double2 get_yw()
  void set_yw(double2 value)
  double2 get_zx()
  void set_zx(double2 value)
  double2 get_zy()
  void set_zy(double2 value)
  double2 get_zz()
  double2 get_zw()
  void set_zw(double2 value)
  double2 get_wx()
  void set_wx(double2 value)
  double2 get_wy()
  void set_wy(double2 value)
  double2 get_wz()
  void set_wz(double2 value)
  double2 get_ww()
  double get_Item(int index)
  void set_Item(int index, double value)
  bool Equals(double4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double4x2
Наследуется от: ValueType
Поля:
  double4 c0
  double4 c1
  double4x2 zero
Свойства:
  double4& Item
Методы:
  void .ctor(double4 c0, double4 c1)
  void .ctor(double m00, double m01, double m10, double m11, double m20, double m21, double m30, double m31)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool4x2 v)
  void .ctor(int v)
  void .ctor(int4x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x2 v)
  void .ctor(float v)
  void .ctor(float4x2 v)
  double4x2 op_Implicit(double v)
  double4x2 op_Explicit(bool v)
  double4x2 op_Explicit(bool4x2 v)
  double4x2 op_Implicit(int v)
  double4x2 op_Implicit(int4x2 v)
  double4x2 op_Implicit(UInt32 v)
  double4x2 op_Implicit(uint4x2 v)
  double4x2 op_Implicit(float v)
  double4x2 op_Implicit(float4x2 v)
  double4x2 op_Multiply(double4x2 lhs, double4x2 rhs)
  double4x2 op_Multiply(double4x2 lhs, double rhs)
  double4x2 op_Multiply(double lhs, double4x2 rhs)
  double4x2 op_Addition(double4x2 lhs, double4x2 rhs)
  double4x2 op_Addition(double4x2 lhs, double rhs)
  double4x2 op_Addition(double lhs, double4x2 rhs)
  double4x2 op_Subtraction(double4x2 lhs, double4x2 rhs)
  double4x2 op_Subtraction(double4x2 lhs, double rhs)
  double4x2 op_Subtraction(double lhs, double4x2 rhs)
  double4x2 op_Division(double4x2 lhs, double4x2 rhs)
  double4x2 op_Division(double4x2 lhs, double rhs)
  double4x2 op_Division(double lhs, double4x2 rhs)
  double4x2 op_Modulus(double4x2 lhs, double4x2 rhs)
  double4x2 op_Modulus(double4x2 lhs, double rhs)
  double4x2 op_Modulus(double lhs, double4x2 rhs)
  double4x2 op_Increment(double4x2 val)
  double4x2 op_Decrement(double4x2 val)
  bool4x2 op_LessThan(double4x2 lhs, double4x2 rhs)
  bool4x2 op_LessThan(double4x2 lhs, double rhs)
  bool4x2 op_LessThan(double lhs, double4x2 rhs)
  bool4x2 op_LessThanOrEqual(double4x2 lhs, double4x2 rhs)
  bool4x2 op_LessThanOrEqual(double4x2 lhs, double rhs)
  bool4x2 op_LessThanOrEqual(double lhs, double4x2 rhs)
  bool4x2 op_GreaterThan(double4x2 lhs, double4x2 rhs)
  bool4x2 op_GreaterThan(double4x2 lhs, double rhs)
  bool4x2 op_GreaterThan(double lhs, double4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(double4x2 lhs, double4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(double4x2 lhs, double rhs)
  bool4x2 op_GreaterThanOrEqual(double lhs, double4x2 rhs)
  double4x2 op_UnaryNegation(double4x2 val)
  double4x2 op_UnaryPlus(double4x2 val)
  bool4x2 op_Equality(double4x2 lhs, double4x2 rhs)
  bool4x2 op_Equality(double4x2 lhs, double rhs)
  bool4x2 op_Equality(double lhs, double4x2 rhs)
  bool4x2 op_Inequality(double4x2 lhs, double4x2 rhs)
  bool4x2 op_Inequality(double4x2 lhs, double rhs)
  bool4x2 op_Inequality(double lhs, double4x2 rhs)
  double4& get_Item(int index)
  bool Equals(double4x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double4x3
Наследуется от: ValueType
Поля:
  double4 c0
  double4 c1
  double4 c2
  double4x3 zero
Свойства:
  double4& Item
Методы:
  void .ctor(double4 c0, double4 c1, double4 c2)
  void .ctor(double m00, double m01, double m02, double m10, double m11, double m12, double m20, double m21, double m22, double m30, double m31, double m32)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool4x3 v)
  void .ctor(int v)
  void .ctor(int4x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x3 v)
  void .ctor(float v)
  void .ctor(float4x3 v)
  double4x3 op_Implicit(double v)
  double4x3 op_Explicit(bool v)
  double4x3 op_Explicit(bool4x3 v)
  double4x3 op_Implicit(int v)
  double4x3 op_Implicit(int4x3 v)
  double4x3 op_Implicit(UInt32 v)
  double4x3 op_Implicit(uint4x3 v)
  double4x3 op_Implicit(float v)
  double4x3 op_Implicit(float4x3 v)
  double4x3 op_Multiply(double4x3 lhs, double4x3 rhs)
  double4x3 op_Multiply(double4x3 lhs, double rhs)
  double4x3 op_Multiply(double lhs, double4x3 rhs)
  double4x3 op_Addition(double4x3 lhs, double4x3 rhs)
  double4x3 op_Addition(double4x3 lhs, double rhs)
  double4x3 op_Addition(double lhs, double4x3 rhs)
  double4x3 op_Subtraction(double4x3 lhs, double4x3 rhs)
  double4x3 op_Subtraction(double4x3 lhs, double rhs)
  double4x3 op_Subtraction(double lhs, double4x3 rhs)
  double4x3 op_Division(double4x3 lhs, double4x3 rhs)
  double4x3 op_Division(double4x3 lhs, double rhs)
  double4x3 op_Division(double lhs, double4x3 rhs)
  double4x3 op_Modulus(double4x3 lhs, double4x3 rhs)
  double4x3 op_Modulus(double4x3 lhs, double rhs)
  double4x3 op_Modulus(double lhs, double4x3 rhs)
  double4x3 op_Increment(double4x3 val)
  double4x3 op_Decrement(double4x3 val)
  bool4x3 op_LessThan(double4x3 lhs, double4x3 rhs)
  bool4x3 op_LessThan(double4x3 lhs, double rhs)
  bool4x3 op_LessThan(double lhs, double4x3 rhs)
  bool4x3 op_LessThanOrEqual(double4x3 lhs, double4x3 rhs)
  bool4x3 op_LessThanOrEqual(double4x3 lhs, double rhs)
  bool4x3 op_LessThanOrEqual(double lhs, double4x3 rhs)
  bool4x3 op_GreaterThan(double4x3 lhs, double4x3 rhs)
  bool4x3 op_GreaterThan(double4x3 lhs, double rhs)
  bool4x3 op_GreaterThan(double lhs, double4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(double4x3 lhs, double4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(double4x3 lhs, double rhs)
  bool4x3 op_GreaterThanOrEqual(double lhs, double4x3 rhs)
  double4x3 op_UnaryNegation(double4x3 val)
  double4x3 op_UnaryPlus(double4x3 val)
  bool4x3 op_Equality(double4x3 lhs, double4x3 rhs)
  bool4x3 op_Equality(double4x3 lhs, double rhs)
  bool4x3 op_Equality(double lhs, double4x3 rhs)
  bool4x3 op_Inequality(double4x3 lhs, double4x3 rhs)
  bool4x3 op_Inequality(double4x3 lhs, double rhs)
  bool4x3 op_Inequality(double lhs, double4x3 rhs)
  double4& get_Item(int index)
  bool Equals(double4x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.double4x4
Наследуется от: ValueType
Поля:
  double4 c0
  double4 c1
  double4 c2
  double4 c3
  double4x4 identity
  double4x4 zero
Свойства:
  double4& Item
Методы:
  void .ctor(double4 c0, double4 c1, double4 c2, double4 c3)
  void .ctor(double m00, double m01, double m02, double m03, double m10, double m11, double m12, double m13, double m20, double m21, double m22, double m23, double m30, double m31, double m32, double m33)
  void .ctor(double v)
  void .ctor(bool v)
  void .ctor(bool4x4 v)
  void .ctor(int v)
  void .ctor(int4x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x4 v)
  void .ctor(float v)
  void .ctor(float4x4 v)
  double4x4 op_Implicit(double v)
  double4x4 op_Explicit(bool v)
  double4x4 op_Explicit(bool4x4 v)
  double4x4 op_Implicit(int v)
  double4x4 op_Implicit(int4x4 v)
  double4x4 op_Implicit(UInt32 v)
  double4x4 op_Implicit(uint4x4 v)
  double4x4 op_Implicit(float v)
  double4x4 op_Implicit(float4x4 v)
  double4x4 op_Multiply(double4x4 lhs, double4x4 rhs)
  double4x4 op_Multiply(double4x4 lhs, double rhs)
  double4x4 op_Multiply(double lhs, double4x4 rhs)
  double4x4 op_Addition(double4x4 lhs, double4x4 rhs)
  double4x4 op_Addition(double4x4 lhs, double rhs)
  double4x4 op_Addition(double lhs, double4x4 rhs)
  double4x4 op_Subtraction(double4x4 lhs, double4x4 rhs)
  double4x4 op_Subtraction(double4x4 lhs, double rhs)
  double4x4 op_Subtraction(double lhs, double4x4 rhs)
  double4x4 op_Division(double4x4 lhs, double4x4 rhs)
  double4x4 op_Division(double4x4 lhs, double rhs)
  double4x4 op_Division(double lhs, double4x4 rhs)
  double4x4 op_Modulus(double4x4 lhs, double4x4 rhs)
  double4x4 op_Modulus(double4x4 lhs, double rhs)
  double4x4 op_Modulus(double lhs, double4x4 rhs)
  double4x4 op_Increment(double4x4 val)
  double4x4 op_Decrement(double4x4 val)
  bool4x4 op_LessThan(double4x4 lhs, double4x4 rhs)
  bool4x4 op_LessThan(double4x4 lhs, double rhs)
  bool4x4 op_LessThan(double lhs, double4x4 rhs)
  bool4x4 op_LessThanOrEqual(double4x4 lhs, double4x4 rhs)
  bool4x4 op_LessThanOrEqual(double4x4 lhs, double rhs)
  bool4x4 op_LessThanOrEqual(double lhs, double4x4 rhs)
  bool4x4 op_GreaterThan(double4x4 lhs, double4x4 rhs)
  bool4x4 op_GreaterThan(double4x4 lhs, double rhs)
  bool4x4 op_GreaterThan(double lhs, double4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(double4x4 lhs, double4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(double4x4 lhs, double rhs)
  bool4x4 op_GreaterThanOrEqual(double lhs, double4x4 rhs)
  double4x4 op_UnaryNegation(double4x4 val)
  double4x4 op_UnaryPlus(double4x4 val)
  bool4x4 op_Equality(double4x4 lhs, double4x4 rhs)
  bool4x4 op_Equality(double4x4 lhs, double rhs)
  bool4x4 op_Equality(double lhs, double4x4 rhs)
  bool4x4 op_Inequality(double4x4 lhs, double4x4 rhs)
  bool4x4 op_Inequality(double4x4 lhs, double rhs)
  bool4x4 op_Inequality(double lhs, double4x4 rhs)
  double4& get_Item(int index)
  bool Equals(double4x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.float2
Наследуется от: ValueType
Поля:
  float x
  float y
  float2 zero
Свойства:
  float4 xxxx
  float4 xxxy
  float4 xxyx
  float4 xxyy
  float4 xyxx
  float4 xyxy
  float4 xyyx
  float4 xyyy
  float4 yxxx
  float4 yxxy
  float4 yxyx
  float4 yxyy
  float4 yyxx
  float4 yyxy
  float4 yyyx
  float4 yyyy
  float3 xxx
  float3 xxy
  float3 xyx
  float3 xyy
  float3 yxx
  float3 yxy
  float3 yyx
  float3 yyy
  float2 xx
  float2 xy
  float2 yx
  float2 yy
  float Item
Методы:
  void .ctor(float x, float y)
  void .ctor(float2 xy)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool2 v)
  void .ctor(int v)
  void .ctor(int2 v)
  void .ctor(UInt32 v)
  void .ctor(uint2 v)
  void .ctor(half v)
  void .ctor(half2 v)
  void .ctor(double v)
  void .ctor(double2 v)
  float2 op_Implicit(float v)
  float2 op_Explicit(bool v)
  float2 op_Explicit(bool2 v)
  float2 op_Implicit(int v)
  float2 op_Implicit(int2 v)
  float2 op_Implicit(UInt32 v)
  float2 op_Implicit(uint2 v)
  float2 op_Implicit(half v)
  float2 op_Implicit(half2 v)
  float2 op_Explicit(double v)
  float2 op_Explicit(double2 v)
  float2 op_Multiply(float2 lhs, float2 rhs)
  float2 op_Multiply(float2 lhs, float rhs)
  float2 op_Multiply(float lhs, float2 rhs)
  float2 op_Addition(float2 lhs, float2 rhs)
  float2 op_Addition(float2 lhs, float rhs)
  float2 op_Addition(float lhs, float2 rhs)
  float2 op_Subtraction(float2 lhs, float2 rhs)
  float2 op_Subtraction(float2 lhs, float rhs)
  float2 op_Subtraction(float lhs, float2 rhs)
  float2 op_Division(float2 lhs, float2 rhs)
  float2 op_Division(float2 lhs, float rhs)
  float2 op_Division(float lhs, float2 rhs)
  float2 op_Modulus(float2 lhs, float2 rhs)
  float2 op_Modulus(float2 lhs, float rhs)
  float2 op_Modulus(float lhs, float2 rhs)
  float2 op_Increment(float2 val)
  float2 op_Decrement(float2 val)
  bool2 op_LessThan(float2 lhs, float2 rhs)
  bool2 op_LessThan(float2 lhs, float rhs)
  bool2 op_LessThan(float lhs, float2 rhs)
  bool2 op_LessThanOrEqual(float2 lhs, float2 rhs)
  bool2 op_LessThanOrEqual(float2 lhs, float rhs)
  bool2 op_LessThanOrEqual(float lhs, float2 rhs)
  bool2 op_GreaterThan(float2 lhs, float2 rhs)
  bool2 op_GreaterThan(float2 lhs, float rhs)
  bool2 op_GreaterThan(float lhs, float2 rhs)
  bool2 op_GreaterThanOrEqual(float2 lhs, float2 rhs)
  bool2 op_GreaterThanOrEqual(float2 lhs, float rhs)
  bool2 op_GreaterThanOrEqual(float lhs, float2 rhs)
  float2 op_UnaryNegation(float2 val)
  float2 op_UnaryPlus(float2 val)
  bool2 op_Equality(float2 lhs, float2 rhs)
  bool2 op_Equality(float2 lhs, float rhs)
  bool2 op_Equality(float lhs, float2 rhs)
  bool2 op_Inequality(float2 lhs, float2 rhs)
  bool2 op_Inequality(float2 lhs, float rhs)
  bool2 op_Inequality(float lhs, float2 rhs)
  float4 get_xxxx()
  float4 get_xxxy()
  float4 get_xxyx()
  float4 get_xxyy()
  float4 get_xyxx()
  float4 get_xyxy()
  float4 get_xyyx()
  float4 get_xyyy()
  float4 get_yxxx()
  float4 get_yxxy()
  float4 get_yxyx()
  float4 get_yxyy()
  float4 get_yyxx()
  float4 get_yyxy()
  float4 get_yyyx()
  float4 get_yyyy()
  float3 get_xxx()
  float3 get_xxy()
  float3 get_xyx()
  float3 get_xyy()
  float3 get_yxx()
  float3 get_yxy()
  float3 get_yyx()
  float3 get_yyy()
  float2 get_xx()
  float2 get_xy()
  void set_xy(float2 value)
  float2 get_yx()
  void set_yx(float2 value)
  float2 get_yy()
  float get_Item(int index)
  void set_Item(int index, float value)
  bool Equals(float2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  Vector2 op_Implicit(float2 v)
  float2 op_Implicit(Vector2 v)
--------------------------------------------------
Класс: Unity.Mathematics.float2x2
Наследуется от: ValueType
Поля:
  float2 c0
  float2 c1
  float2x2 identity
  float2x2 zero
Свойства:
  float2& Item
Методы:
  void .ctor(float2 c0, float2 c1)
  void .ctor(float m00, float m01, float m10, float m11)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool2x2 v)
  void .ctor(int v)
  void .ctor(int2x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x2 v)
  void .ctor(double v)
  void .ctor(double2x2 v)
  float2x2 op_Implicit(float v)
  float2x2 op_Explicit(bool v)
  float2x2 op_Explicit(bool2x2 v)
  float2x2 op_Implicit(int v)
  float2x2 op_Implicit(int2x2 v)
  float2x2 op_Implicit(UInt32 v)
  float2x2 op_Implicit(uint2x2 v)
  float2x2 op_Explicit(double v)
  float2x2 op_Explicit(double2x2 v)
  float2x2 op_Multiply(float2x2 lhs, float2x2 rhs)
  float2x2 op_Multiply(float2x2 lhs, float rhs)
  float2x2 op_Multiply(float lhs, float2x2 rhs)
  float2x2 op_Addition(float2x2 lhs, float2x2 rhs)
  float2x2 op_Addition(float2x2 lhs, float rhs)
  float2x2 op_Addition(float lhs, float2x2 rhs)
  float2x2 op_Subtraction(float2x2 lhs, float2x2 rhs)
  float2x2 op_Subtraction(float2x2 lhs, float rhs)
  float2x2 op_Subtraction(float lhs, float2x2 rhs)
  float2x2 op_Division(float2x2 lhs, float2x2 rhs)
  float2x2 op_Division(float2x2 lhs, float rhs)
  float2x2 op_Division(float lhs, float2x2 rhs)
  float2x2 op_Modulus(float2x2 lhs, float2x2 rhs)
  float2x2 op_Modulus(float2x2 lhs, float rhs)
  float2x2 op_Modulus(float lhs, float2x2 rhs)
  float2x2 op_Increment(float2x2 val)
  float2x2 op_Decrement(float2x2 val)
  bool2x2 op_LessThan(float2x2 lhs, float2x2 rhs)
  bool2x2 op_LessThan(float2x2 lhs, float rhs)
  bool2x2 op_LessThan(float lhs, float2x2 rhs)
  bool2x2 op_LessThanOrEqual(float2x2 lhs, float2x2 rhs)
  bool2x2 op_LessThanOrEqual(float2x2 lhs, float rhs)
  bool2x2 op_LessThanOrEqual(float lhs, float2x2 rhs)
  bool2x2 op_GreaterThan(float2x2 lhs, float2x2 rhs)
  bool2x2 op_GreaterThan(float2x2 lhs, float rhs)
  bool2x2 op_GreaterThan(float lhs, float2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(float2x2 lhs, float2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(float2x2 lhs, float rhs)
  bool2x2 op_GreaterThanOrEqual(float lhs, float2x2 rhs)
  float2x2 op_UnaryNegation(float2x2 val)
  float2x2 op_UnaryPlus(float2x2 val)
  bool2x2 op_Equality(float2x2 lhs, float2x2 rhs)
  bool2x2 op_Equality(float2x2 lhs, float rhs)
  bool2x2 op_Equality(float lhs, float2x2 rhs)
  bool2x2 op_Inequality(float2x2 lhs, float2x2 rhs)
  bool2x2 op_Inequality(float2x2 lhs, float rhs)
  bool2x2 op_Inequality(float lhs, float2x2 rhs)
  float2& get_Item(int index)
  bool Equals(float2x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  float2x2 Rotate(float angle)
  float2x2 Scale(float s)
  float2x2 Scale(float x, float y)
  float2x2 Scale(float2 v)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.float2x3
Наследуется от: ValueType
Поля:
  float2 c0
  float2 c1
  float2 c2
  float2x3 zero
Свойства:
  float2& Item
Методы:
  void .ctor(float2 c0, float2 c1, float2 c2)
  void .ctor(float m00, float m01, float m02, float m10, float m11, float m12)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool2x3 v)
  void .ctor(int v)
  void .ctor(int2x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x3 v)
  void .ctor(double v)
  void .ctor(double2x3 v)
  float2x3 op_Implicit(float v)
  float2x3 op_Explicit(bool v)
  float2x3 op_Explicit(bool2x3 v)
  float2x3 op_Implicit(int v)
  float2x3 op_Implicit(int2x3 v)
  float2x3 op_Implicit(UInt32 v)
  float2x3 op_Implicit(uint2x3 v)
  float2x3 op_Explicit(double v)
  float2x3 op_Explicit(double2x3 v)
  float2x3 op_Multiply(float2x3 lhs, float2x3 rhs)
  float2x3 op_Multiply(float2x3 lhs, float rhs)
  float2x3 op_Multiply(float lhs, float2x3 rhs)
  float2x3 op_Addition(float2x3 lhs, float2x3 rhs)
  float2x3 op_Addition(float2x3 lhs, float rhs)
  float2x3 op_Addition(float lhs, float2x3 rhs)
  float2x3 op_Subtraction(float2x3 lhs, float2x3 rhs)
  float2x3 op_Subtraction(float2x3 lhs, float rhs)
  float2x3 op_Subtraction(float lhs, float2x3 rhs)
  float2x3 op_Division(float2x3 lhs, float2x3 rhs)
  float2x3 op_Division(float2x3 lhs, float rhs)
  float2x3 op_Division(float lhs, float2x3 rhs)
  float2x3 op_Modulus(float2x3 lhs, float2x3 rhs)
  float2x3 op_Modulus(float2x3 lhs, float rhs)
  float2x3 op_Modulus(float lhs, float2x3 rhs)
  float2x3 op_Increment(float2x3 val)
  float2x3 op_Decrement(float2x3 val)
  bool2x3 op_LessThan(float2x3 lhs, float2x3 rhs)
  bool2x3 op_LessThan(float2x3 lhs, float rhs)
  bool2x3 op_LessThan(float lhs, float2x3 rhs)
  bool2x3 op_LessThanOrEqual(float2x3 lhs, float2x3 rhs)
  bool2x3 op_LessThanOrEqual(float2x3 lhs, float rhs)
  bool2x3 op_LessThanOrEqual(float lhs, float2x3 rhs)
  bool2x3 op_GreaterThan(float2x3 lhs, float2x3 rhs)
  bool2x3 op_GreaterThan(float2x3 lhs, float rhs)
  bool2x3 op_GreaterThan(float lhs, float2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(float2x3 lhs, float2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(float2x3 lhs, float rhs)
  bool2x3 op_GreaterThanOrEqual(float lhs, float2x3 rhs)
  float2x3 op_UnaryNegation(float2x3 val)
  float2x3 op_UnaryPlus(float2x3 val)
  bool2x3 op_Equality(float2x3 lhs, float2x3 rhs)
  bool2x3 op_Equality(float2x3 lhs, float rhs)
  bool2x3 op_Equality(float lhs, float2x3 rhs)
  bool2x3 op_Inequality(float2x3 lhs, float2x3 rhs)
  bool2x3 op_Inequality(float2x3 lhs, float rhs)
  bool2x3 op_Inequality(float lhs, float2x3 rhs)
  float2& get_Item(int index)
  bool Equals(float2x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.float2x4
Наследуется от: ValueType
Поля:
  float2 c0
  float2 c1
  float2 c2
  float2 c3
  float2x4 zero
Свойства:
  float2& Item
Методы:
  void .ctor(float2 c0, float2 c1, float2 c2, float2 c3)
  void .ctor(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool2x4 v)
  void .ctor(int v)
  void .ctor(int2x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x4 v)
  void .ctor(double v)
  void .ctor(double2x4 v)
  float2x4 op_Implicit(float v)
  float2x4 op_Explicit(bool v)
  float2x4 op_Explicit(bool2x4 v)
  float2x4 op_Implicit(int v)
  float2x4 op_Implicit(int2x4 v)
  float2x4 op_Implicit(UInt32 v)
  float2x4 op_Implicit(uint2x4 v)
  float2x4 op_Explicit(double v)
  float2x4 op_Explicit(double2x4 v)
  float2x4 op_Multiply(float2x4 lhs, float2x4 rhs)
  float2x4 op_Multiply(float2x4 lhs, float rhs)
  float2x4 op_Multiply(float lhs, float2x4 rhs)
  float2x4 op_Addition(float2x4 lhs, float2x4 rhs)
  float2x4 op_Addition(float2x4 lhs, float rhs)
  float2x4 op_Addition(float lhs, float2x4 rhs)
  float2x4 op_Subtraction(float2x4 lhs, float2x4 rhs)
  float2x4 op_Subtraction(float2x4 lhs, float rhs)
  float2x4 op_Subtraction(float lhs, float2x4 rhs)
  float2x4 op_Division(float2x4 lhs, float2x4 rhs)
  float2x4 op_Division(float2x4 lhs, float rhs)
  float2x4 op_Division(float lhs, float2x4 rhs)
  float2x4 op_Modulus(float2x4 lhs, float2x4 rhs)
  float2x4 op_Modulus(float2x4 lhs, float rhs)
  float2x4 op_Modulus(float lhs, float2x4 rhs)
  float2x4 op_Increment(float2x4 val)
  float2x4 op_Decrement(float2x4 val)
  bool2x4 op_LessThan(float2x4 lhs, float2x4 rhs)
  bool2x4 op_LessThan(float2x4 lhs, float rhs)
  bool2x4 op_LessThan(float lhs, float2x4 rhs)
  bool2x4 op_LessThanOrEqual(float2x4 lhs, float2x4 rhs)
  bool2x4 op_LessThanOrEqual(float2x4 lhs, float rhs)
  bool2x4 op_LessThanOrEqual(float lhs, float2x4 rhs)
  bool2x4 op_GreaterThan(float2x4 lhs, float2x4 rhs)
  bool2x4 op_GreaterThan(float2x4 lhs, float rhs)
  bool2x4 op_GreaterThan(float lhs, float2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(float2x4 lhs, float2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(float2x4 lhs, float rhs)
  bool2x4 op_GreaterThanOrEqual(float lhs, float2x4 rhs)
  float2x4 op_UnaryNegation(float2x4 val)
  float2x4 op_UnaryPlus(float2x4 val)
  bool2x4 op_Equality(float2x4 lhs, float2x4 rhs)
  bool2x4 op_Equality(float2x4 lhs, float rhs)
  bool2x4 op_Equality(float lhs, float2x4 rhs)
  bool2x4 op_Inequality(float2x4 lhs, float2x4 rhs)
  bool2x4 op_Inequality(float2x4 lhs, float rhs)
  bool2x4 op_Inequality(float lhs, float2x4 rhs)
  float2& get_Item(int index)
  bool Equals(float2x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.float3
Наследуется от: ValueType
Поля:
  float x
  float y
  float z
  float3 zero
Свойства:
  float4 xxxx
  float4 xxxy
  float4 xxxz
  float4 xxyx
  float4 xxyy
  float4 xxyz
  float4 xxzx
  float4 xxzy
  float4 xxzz
  float4 xyxx
  float4 xyxy
  float4 xyxz
  float4 xyyx
  float4 xyyy
  float4 xyyz
  float4 xyzx
  float4 xyzy
  float4 xyzz
  float4 xzxx
  float4 xzxy
  float4 xzxz
  float4 xzyx
  float4 xzyy
  float4 xzyz
  float4 xzzx
  float4 xzzy
  float4 xzzz
  float4 yxxx
  float4 yxxy
  float4 yxxz
  float4 yxyx
  float4 yxyy
  float4 yxyz
  float4 yxzx
  float4 yxzy
  float4 yxzz
  float4 yyxx
  float4 yyxy
  float4 yyxz
  float4 yyyx
  float4 yyyy
  float4 yyyz
  float4 yyzx
  float4 yyzy
  float4 yyzz
  float4 yzxx
  float4 yzxy
  float4 yzxz
  float4 yzyx
  float4 yzyy
  float4 yzyz
  float4 yzzx
  float4 yzzy
  float4 yzzz
  float4 zxxx
  float4 zxxy
  float4 zxxz
  float4 zxyx
  float4 zxyy
  float4 zxyz
  float4 zxzx
  float4 zxzy
  float4 zxzz
  float4 zyxx
  float4 zyxy
  float4 zyxz
  float4 zyyx
  float4 zyyy
  float4 zyyz
  float4 zyzx
  float4 zyzy
  float4 zyzz
  float4 zzxx
  float4 zzxy
  float4 zzxz
  float4 zzyx
  float4 zzyy
  float4 zzyz
  float4 zzzx
  float4 zzzy
  float4 zzzz
  float3 xxx
  float3 xxy
  float3 xxz
  float3 xyx
  float3 xyy
  float3 xyz
  float3 xzx
  float3 xzy
  float3 xzz
  float3 yxx
  float3 yxy
  float3 yxz
  float3 yyx
  float3 yyy
  float3 yyz
  float3 yzx
  float3 yzy
  float3 yzz
  float3 zxx
  float3 zxy
  float3 zxz
  float3 zyx
  float3 zyy
  float3 zyz
  float3 zzx
  float3 zzy
  float3 zzz
  float2 xx
  float2 xy
  float2 xz
  float2 yx
  float2 yy
  float2 yz
  float2 zx
  float2 zy
  float2 zz
  float Item
Методы:
  void .ctor(float x, float y, float z)
  void .ctor(float x, float2 yz)
  void .ctor(float2 xy, float z)
  void .ctor(float3 xyz)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool3 v)
  void .ctor(int v)
  void .ctor(int3 v)
  void .ctor(UInt32 v)
  void .ctor(uint3 v)
  void .ctor(half v)
  void .ctor(half3 v)
  void .ctor(double v)
  void .ctor(double3 v)
  float3 op_Implicit(float v)
  float3 op_Explicit(bool v)
  float3 op_Explicit(bool3 v)
  float3 op_Implicit(int v)
  float3 op_Implicit(int3 v)
  float3 op_Implicit(UInt32 v)
  float3 op_Implicit(uint3 v)
  float3 op_Implicit(half v)
  float3 op_Implicit(half3 v)
  float3 op_Explicit(double v)
  float3 op_Explicit(double3 v)
  float3 op_Multiply(float3 lhs, float3 rhs)
  float3 op_Multiply(float3 lhs, float rhs)
  float3 op_Multiply(float lhs, float3 rhs)
  float3 op_Addition(float3 lhs, float3 rhs)
  float3 op_Addition(float3 lhs, float rhs)
  float3 op_Addition(float lhs, float3 rhs)
  float3 op_Subtraction(float3 lhs, float3 rhs)
  float3 op_Subtraction(float3 lhs, float rhs)
  float3 op_Subtraction(float lhs, float3 rhs)
  float3 op_Division(float3 lhs, float3 rhs)
  float3 op_Division(float3 lhs, float rhs)
  float3 op_Division(float lhs, float3 rhs)
  float3 op_Modulus(float3 lhs, float3 rhs)
  float3 op_Modulus(float3 lhs, float rhs)
  float3 op_Modulus(float lhs, float3 rhs)
  float3 op_Increment(float3 val)
  float3 op_Decrement(float3 val)
  bool3 op_LessThan(float3 lhs, float3 rhs)
  bool3 op_LessThan(float3 lhs, float rhs)
  bool3 op_LessThan(float lhs, float3 rhs)
  bool3 op_LessThanOrEqual(float3 lhs, float3 rhs)
  bool3 op_LessThanOrEqual(float3 lhs, float rhs)
  bool3 op_LessThanOrEqual(float lhs, float3 rhs)
  bool3 op_GreaterThan(float3 lhs, float3 rhs)
  bool3 op_GreaterThan(float3 lhs, float rhs)
  bool3 op_GreaterThan(float lhs, float3 rhs)
  bool3 op_GreaterThanOrEqual(float3 lhs, float3 rhs)
  bool3 op_GreaterThanOrEqual(float3 lhs, float rhs)
  bool3 op_GreaterThanOrEqual(float lhs, float3 rhs)
  float3 op_UnaryNegation(float3 val)
  float3 op_UnaryPlus(float3 val)
  bool3 op_Equality(float3 lhs, float3 rhs)
  bool3 op_Equality(float3 lhs, float rhs)
  bool3 op_Equality(float lhs, float3 rhs)
  bool3 op_Inequality(float3 lhs, float3 rhs)
  bool3 op_Inequality(float3 lhs, float rhs)
  bool3 op_Inequality(float lhs, float3 rhs)
  float4 get_xxxx()
  float4 get_xxxy()
  float4 get_xxxz()
  float4 get_xxyx()
  float4 get_xxyy()
  float4 get_xxyz()
  float4 get_xxzx()
  float4 get_xxzy()
  float4 get_xxzz()
  float4 get_xyxx()
  float4 get_xyxy()
  float4 get_xyxz()
  float4 get_xyyx()
  float4 get_xyyy()
  float4 get_xyyz()
  float4 get_xyzx()
  float4 get_xyzy()
  float4 get_xyzz()
  float4 get_xzxx()
  float4 get_xzxy()
  float4 get_xzxz()
  float4 get_xzyx()
  float4 get_xzyy()
  float4 get_xzyz()
  float4 get_xzzx()
  float4 get_xzzy()
  float4 get_xzzz()
  float4 get_yxxx()
  float4 get_yxxy()
  float4 get_yxxz()
  float4 get_yxyx()
  float4 get_yxyy()
  float4 get_yxyz()
  float4 get_yxzx()
  float4 get_yxzy()
  float4 get_yxzz()
  float4 get_yyxx()
  float4 get_yyxy()
  float4 get_yyxz()
  float4 get_yyyx()
  float4 get_yyyy()
  float4 get_yyyz()
  float4 get_yyzx()
  float4 get_yyzy()
  float4 get_yyzz()
  float4 get_yzxx()
  float4 get_yzxy()
  float4 get_yzxz()
  float4 get_yzyx()
  float4 get_yzyy()
  float4 get_yzyz()
  float4 get_yzzx()
  float4 get_yzzy()
  float4 get_yzzz()
  float4 get_zxxx()
  float4 get_zxxy()
  float4 get_zxxz()
  float4 get_zxyx()
  float4 get_zxyy()
  float4 get_zxyz()
  float4 get_zxzx()
  float4 get_zxzy()
  float4 get_zxzz()
  float4 get_zyxx()
  float4 get_zyxy()
  float4 get_zyxz()
  float4 get_zyyx()
  float4 get_zyyy()
  float4 get_zyyz()
  float4 get_zyzx()
  float4 get_zyzy()
  float4 get_zyzz()
  float4 get_zzxx()
  float4 get_zzxy()
  float4 get_zzxz()
  float4 get_zzyx()
  float4 get_zzyy()
  float4 get_zzyz()
  float4 get_zzzx()
  float4 get_zzzy()
  float4 get_zzzz()
  float3 get_xxx()
  float3 get_xxy()
  float3 get_xxz()
  float3 get_xyx()
  float3 get_xyy()
  float3 get_xyz()
  void set_xyz(float3 value)
  float3 get_xzx()
  float3 get_xzy()
  void set_xzy(float3 value)
  float3 get_xzz()
  float3 get_yxx()
  float3 get_yxy()
  float3 get_yxz()
  void set_yxz(float3 value)
  float3 get_yyx()
  float3 get_yyy()
  float3 get_yyz()
  float3 get_yzx()
  void set_yzx(float3 value)
  float3 get_yzy()
  float3 get_yzz()
  float3 get_zxx()
  float3 get_zxy()
  void set_zxy(float3 value)
  float3 get_zxz()
  float3 get_zyx()
  void set_zyx(float3 value)
  float3 get_zyy()
  float3 get_zyz()
  float3 get_zzx()
  float3 get_zzy()
  float3 get_zzz()
  float2 get_xx()
  float2 get_xy()
  void set_xy(float2 value)
  float2 get_xz()
  void set_xz(float2 value)
  float2 get_yx()
  void set_yx(float2 value)
  float2 get_yy()
  float2 get_yz()
  void set_yz(float2 value)
  float2 get_zx()
  void set_zx(float2 value)
  float2 get_zy()
  void set_zy(float2 value)
  float2 get_zz()
  float get_Item(int index)
  void set_Item(int index, float value)
  bool Equals(float3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  Vector3 op_Implicit(float3 v)
  float3 op_Implicit(Vector3 v)
--------------------------------------------------
Класс: Unity.Mathematics.float3x2
Наследуется от: ValueType
Поля:
  float3 c0
  float3 c1
  float3x2 zero
Свойства:
  float3& Item
Методы:
  void .ctor(float3 c0, float3 c1)
  void .ctor(float m00, float m01, float m10, float m11, float m20, float m21)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool3x2 v)
  void .ctor(int v)
  void .ctor(int3x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x2 v)
  void .ctor(double v)
  void .ctor(double3x2 v)
  float3x2 op_Implicit(float v)
  float3x2 op_Explicit(bool v)
  float3x2 op_Explicit(bool3x2 v)
  float3x2 op_Implicit(int v)
  float3x2 op_Implicit(int3x2 v)
  float3x2 op_Implicit(UInt32 v)
  float3x2 op_Implicit(uint3x2 v)
  float3x2 op_Explicit(double v)
  float3x2 op_Explicit(double3x2 v)
  float3x2 op_Multiply(float3x2 lhs, float3x2 rhs)
  float3x2 op_Multiply(float3x2 lhs, float rhs)
  float3x2 op_Multiply(float lhs, float3x2 rhs)
  float3x2 op_Addition(float3x2 lhs, float3x2 rhs)
  float3x2 op_Addition(float3x2 lhs, float rhs)
  float3x2 op_Addition(float lhs, float3x2 rhs)
  float3x2 op_Subtraction(float3x2 lhs, float3x2 rhs)
  float3x2 op_Subtraction(float3x2 lhs, float rhs)
  float3x2 op_Subtraction(float lhs, float3x2 rhs)
  float3x2 op_Division(float3x2 lhs, float3x2 rhs)
  float3x2 op_Division(float3x2 lhs, float rhs)
  float3x2 op_Division(float lhs, float3x2 rhs)
  float3x2 op_Modulus(float3x2 lhs, float3x2 rhs)
  float3x2 op_Modulus(float3x2 lhs, float rhs)
  float3x2 op_Modulus(float lhs, float3x2 rhs)
  float3x2 op_Increment(float3x2 val)
  float3x2 op_Decrement(float3x2 val)
  bool3x2 op_LessThan(float3x2 lhs, float3x2 rhs)
  bool3x2 op_LessThan(float3x2 lhs, float rhs)
  bool3x2 op_LessThan(float lhs, float3x2 rhs)
  bool3x2 op_LessThanOrEqual(float3x2 lhs, float3x2 rhs)
  bool3x2 op_LessThanOrEqual(float3x2 lhs, float rhs)
  bool3x2 op_LessThanOrEqual(float lhs, float3x2 rhs)
  bool3x2 op_GreaterThan(float3x2 lhs, float3x2 rhs)
  bool3x2 op_GreaterThan(float3x2 lhs, float rhs)
  bool3x2 op_GreaterThan(float lhs, float3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(float3x2 lhs, float3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(float3x2 lhs, float rhs)
  bool3x2 op_GreaterThanOrEqual(float lhs, float3x2 rhs)
  float3x2 op_UnaryNegation(float3x2 val)
  float3x2 op_UnaryPlus(float3x2 val)
  bool3x2 op_Equality(float3x2 lhs, float3x2 rhs)
  bool3x2 op_Equality(float3x2 lhs, float rhs)
  bool3x2 op_Equality(float lhs, float3x2 rhs)
  bool3x2 op_Inequality(float3x2 lhs, float3x2 rhs)
  bool3x2 op_Inequality(float3x2 lhs, float rhs)
  bool3x2 op_Inequality(float lhs, float3x2 rhs)
  float3& get_Item(int index)
  bool Equals(float3x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.float3x3
Наследуется от: ValueType
Поля:
  float3 c0
  float3 c1
  float3 c2
  float3x3 identity
  float3x3 zero
Свойства:
  float3& Item
Методы:
  void .ctor(float3 c0, float3 c1, float3 c2)
  void .ctor(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool3x3 v)
  void .ctor(int v)
  void .ctor(int3x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x3 v)
  void .ctor(double v)
  void .ctor(double3x3 v)
  float3x3 op_Implicit(float v)
  float3x3 op_Explicit(bool v)
  float3x3 op_Explicit(bool3x3 v)
  float3x3 op_Implicit(int v)
  float3x3 op_Implicit(int3x3 v)
  float3x3 op_Implicit(UInt32 v)
  float3x3 op_Implicit(uint3x3 v)
  float3x3 op_Explicit(double v)
  float3x3 op_Explicit(double3x3 v)
  float3x3 op_Multiply(float3x3 lhs, float3x3 rhs)
  float3x3 op_Multiply(float3x3 lhs, float rhs)
  float3x3 op_Multiply(float lhs, float3x3 rhs)
  float3x3 op_Addition(float3x3 lhs, float3x3 rhs)
  float3x3 op_Addition(float3x3 lhs, float rhs)
  float3x3 op_Addition(float lhs, float3x3 rhs)
  float3x3 op_Subtraction(float3x3 lhs, float3x3 rhs)
  float3x3 op_Subtraction(float3x3 lhs, float rhs)
  float3x3 op_Subtraction(float lhs, float3x3 rhs)
  float3x3 op_Division(float3x3 lhs, float3x3 rhs)
  float3x3 op_Division(float3x3 lhs, float rhs)
  float3x3 op_Division(float lhs, float3x3 rhs)
  float3x3 op_Modulus(float3x3 lhs, float3x3 rhs)
  float3x3 op_Modulus(float3x3 lhs, float rhs)
  float3x3 op_Modulus(float lhs, float3x3 rhs)
  float3x3 op_Increment(float3x3 val)
  float3x3 op_Decrement(float3x3 val)
  bool3x3 op_LessThan(float3x3 lhs, float3x3 rhs)
  bool3x3 op_LessThan(float3x3 lhs, float rhs)
  bool3x3 op_LessThan(float lhs, float3x3 rhs)
  bool3x3 op_LessThanOrEqual(float3x3 lhs, float3x3 rhs)
  bool3x3 op_LessThanOrEqual(float3x3 lhs, float rhs)
  bool3x3 op_LessThanOrEqual(float lhs, float3x3 rhs)
  bool3x3 op_GreaterThan(float3x3 lhs, float3x3 rhs)
  bool3x3 op_GreaterThan(float3x3 lhs, float rhs)
  bool3x3 op_GreaterThan(float lhs, float3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(float3x3 lhs, float3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(float3x3 lhs, float rhs)
  bool3x3 op_GreaterThanOrEqual(float lhs, float3x3 rhs)
  float3x3 op_UnaryNegation(float3x3 val)
  float3x3 op_UnaryPlus(float3x3 val)
  bool3x3 op_Equality(float3x3 lhs, float3x3 rhs)
  bool3x3 op_Equality(float3x3 lhs, float rhs)
  bool3x3 op_Equality(float lhs, float3x3 rhs)
  bool3x3 op_Inequality(float3x3 lhs, float3x3 rhs)
  bool3x3 op_Inequality(float3x3 lhs, float rhs)
  bool3x3 op_Inequality(float lhs, float3x3 rhs)
  float3& get_Item(int index)
  bool Equals(float3x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .ctor(float4x4 f4x4)
  void .ctor(quaternion q)
  float3x3 AxisAngle(float3 axis, float angle)
  float3x3 EulerXYZ(float3 xyz)
  float3x3 EulerXZY(float3 xyz)
  float3x3 EulerYXZ(float3 xyz)
  float3x3 EulerYZX(float3 xyz)
  float3x3 EulerZXY(float3 xyz)
  float3x3 EulerZYX(float3 xyz)
  float3x3 EulerXYZ(float x, float y, float z)
  float3x3 EulerXZY(float x, float y, float z)
  float3x3 EulerYXZ(float x, float y, float z)
  float3x3 EulerYZX(float x, float y, float z)
  float3x3 EulerZXY(float x, float y, float z)
  float3x3 EulerZYX(float x, float y, float z)
  float3x3 Euler(float3 xyz, RotationOrder order)
  float3x3 Euler(float x, float y, float z, RotationOrder order)
  float3x3 RotateX(float angle)
  float3x3 RotateY(float angle)
  float3x3 RotateZ(float angle)
  float3x3 Scale(float s)
  float3x3 Scale(float x, float y, float z)
  float3x3 Scale(float3 v)
  float3x3 LookRotation(float3 forward, float3 up)
  float3x3 LookRotationSafe(float3 forward, float3 up)
  float3x3 op_Explicit(float4x4 f4x4)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.float3x4
Наследуется от: ValueType
Поля:
  float3 c0
  float3 c1
  float3 c2
  float3 c3
  float3x4 zero
Свойства:
  float3& Item
Методы:
  void .ctor(float3 c0, float3 c1, float3 c2, float3 c3)
  void .ctor(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool3x4 v)
  void .ctor(int v)
  void .ctor(int3x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x4 v)
  void .ctor(double v)
  void .ctor(double3x4 v)
  float3x4 op_Implicit(float v)
  float3x4 op_Explicit(bool v)
  float3x4 op_Explicit(bool3x4 v)
  float3x4 op_Implicit(int v)
  float3x4 op_Implicit(int3x4 v)
  float3x4 op_Implicit(UInt32 v)
  float3x4 op_Implicit(uint3x4 v)
  float3x4 op_Explicit(double v)
  float3x4 op_Explicit(double3x4 v)
  float3x4 op_Multiply(float3x4 lhs, float3x4 rhs)
  float3x4 op_Multiply(float3x4 lhs, float rhs)
  float3x4 op_Multiply(float lhs, float3x4 rhs)
  float3x4 op_Addition(float3x4 lhs, float3x4 rhs)
  float3x4 op_Addition(float3x4 lhs, float rhs)
  float3x4 op_Addition(float lhs, float3x4 rhs)
  float3x4 op_Subtraction(float3x4 lhs, float3x4 rhs)
  float3x4 op_Subtraction(float3x4 lhs, float rhs)
  float3x4 op_Subtraction(float lhs, float3x4 rhs)
  float3x4 op_Division(float3x4 lhs, float3x4 rhs)
  float3x4 op_Division(float3x4 lhs, float rhs)
  float3x4 op_Division(float lhs, float3x4 rhs)
  float3x4 op_Modulus(float3x4 lhs, float3x4 rhs)
  float3x4 op_Modulus(float3x4 lhs, float rhs)
  float3x4 op_Modulus(float lhs, float3x4 rhs)
  float3x4 op_Increment(float3x4 val)
  float3x4 op_Decrement(float3x4 val)
  bool3x4 op_LessThan(float3x4 lhs, float3x4 rhs)
  bool3x4 op_LessThan(float3x4 lhs, float rhs)
  bool3x4 op_LessThan(float lhs, float3x4 rhs)
  bool3x4 op_LessThanOrEqual(float3x4 lhs, float3x4 rhs)
  bool3x4 op_LessThanOrEqual(float3x4 lhs, float rhs)
  bool3x4 op_LessThanOrEqual(float lhs, float3x4 rhs)
  bool3x4 op_GreaterThan(float3x4 lhs, float3x4 rhs)
  bool3x4 op_GreaterThan(float3x4 lhs, float rhs)
  bool3x4 op_GreaterThan(float lhs, float3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(float3x4 lhs, float3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(float3x4 lhs, float rhs)
  bool3x4 op_GreaterThanOrEqual(float lhs, float3x4 rhs)
  float3x4 op_UnaryNegation(float3x4 val)
  float3x4 op_UnaryPlus(float3x4 val)
  bool3x4 op_Equality(float3x4 lhs, float3x4 rhs)
  bool3x4 op_Equality(float3x4 lhs, float rhs)
  bool3x4 op_Equality(float lhs, float3x4 rhs)
  bool3x4 op_Inequality(float3x4 lhs, float3x4 rhs)
  bool3x4 op_Inequality(float3x4 lhs, float rhs)
  bool3x4 op_Inequality(float lhs, float3x4 rhs)
  float3& get_Item(int index)
  bool Equals(float3x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.float4
Наследуется от: ValueType
Поля:
  float x
  float y
  float z
  float w
  float4 zero
Свойства:
  float4 xxxx
  float4 xxxy
  float4 xxxz
  float4 xxxw
  float4 xxyx
  float4 xxyy
  float4 xxyz
  float4 xxyw
  float4 xxzx
  float4 xxzy
  float4 xxzz
  float4 xxzw
  float4 xxwx
  float4 xxwy
  float4 xxwz
  float4 xxww
  float4 xyxx
  float4 xyxy
  float4 xyxz
  float4 xyxw
  float4 xyyx
  float4 xyyy
  float4 xyyz
  float4 xyyw
  float4 xyzx
  float4 xyzy
  float4 xyzz
  float4 xyzw
  float4 xywx
  float4 xywy
  float4 xywz
  float4 xyww
  float4 xzxx
  float4 xzxy
  float4 xzxz
  float4 xzxw
  float4 xzyx
  float4 xzyy
  float4 xzyz
  float4 xzyw
  float4 xzzx
  float4 xzzy
  float4 xzzz
  float4 xzzw
  float4 xzwx
  float4 xzwy
  float4 xzwz
  float4 xzww
  float4 xwxx
  float4 xwxy
  float4 xwxz
  float4 xwxw
  float4 xwyx
  float4 xwyy
  float4 xwyz
  float4 xwyw
  float4 xwzx
  float4 xwzy
  float4 xwzz
  float4 xwzw
  float4 xwwx
  float4 xwwy
  float4 xwwz
  float4 xwww
  float4 yxxx
  float4 yxxy
  float4 yxxz
  float4 yxxw
  float4 yxyx
  float4 yxyy
  float4 yxyz
  float4 yxyw
  float4 yxzx
  float4 yxzy
  float4 yxzz
  float4 yxzw
  float4 yxwx
  float4 yxwy
  float4 yxwz
  float4 yxww
  float4 yyxx
  float4 yyxy
  float4 yyxz
  float4 yyxw
  float4 yyyx
  float4 yyyy
  float4 yyyz
  float4 yyyw
  float4 yyzx
  float4 yyzy
  float4 yyzz
  float4 yyzw
  float4 yywx
  float4 yywy
  float4 yywz
  float4 yyww
  float4 yzxx
  float4 yzxy
  float4 yzxz
  float4 yzxw
  float4 yzyx
  float4 yzyy
  float4 yzyz
  float4 yzyw
  float4 yzzx
  float4 yzzy
  float4 yzzz
  float4 yzzw
  float4 yzwx
  float4 yzwy
  float4 yzwz
  float4 yzww
  float4 ywxx
  float4 ywxy
  float4 ywxz
  float4 ywxw
  float4 ywyx
  float4 ywyy
  float4 ywyz
  float4 ywyw
  float4 ywzx
  float4 ywzy
  float4 ywzz
  float4 ywzw
  float4 ywwx
  float4 ywwy
  float4 ywwz
  float4 ywww
  float4 zxxx
  float4 zxxy
  float4 zxxz
  float4 zxxw
  float4 zxyx
  float4 zxyy
  float4 zxyz
  float4 zxyw
  float4 zxzx
  float4 zxzy
  float4 zxzz
  float4 zxzw
  float4 zxwx
  float4 zxwy
  float4 zxwz
  float4 zxww
  float4 zyxx
  float4 zyxy
  float4 zyxz
  float4 zyxw
  float4 zyyx
  float4 zyyy
  float4 zyyz
  float4 zyyw
  float4 zyzx
  float4 zyzy
  float4 zyzz
  float4 zyzw
  float4 zywx
  float4 zywy
  float4 zywz
  float4 zyww
  float4 zzxx
  float4 zzxy
  float4 zzxz
  float4 zzxw
  float4 zzyx
  float4 zzyy
  float4 zzyz
  float4 zzyw
  float4 zzzx
  float4 zzzy
  float4 zzzz
  float4 zzzw
  float4 zzwx
  float4 zzwy
  float4 zzwz
  float4 zzww
  float4 zwxx
  float4 zwxy
  float4 zwxz
  float4 zwxw
  float4 zwyx
  float4 zwyy
  float4 zwyz
  float4 zwyw
  float4 zwzx
  float4 zwzy
  float4 zwzz
  float4 zwzw
  float4 zwwx
  float4 zwwy
  float4 zwwz
  float4 zwww
  float4 wxxx
  float4 wxxy
  float4 wxxz
  float4 wxxw
  float4 wxyx
  float4 wxyy
  float4 wxyz
  float4 wxyw
  float4 wxzx
  float4 wxzy
  float4 wxzz
  float4 wxzw
  float4 wxwx
  float4 wxwy
  float4 wxwz
  float4 wxww
  float4 wyxx
  float4 wyxy
  float4 wyxz
  float4 wyxw
  float4 wyyx
  float4 wyyy
  float4 wyyz
  float4 wyyw
  float4 wyzx
  float4 wyzy
  float4 wyzz
  float4 wyzw
  float4 wywx
  float4 wywy
  float4 wywz
  float4 wyww
  float4 wzxx
  float4 wzxy
  float4 wzxz
  float4 wzxw
  float4 wzyx
  float4 wzyy
  float4 wzyz
  float4 wzyw
  float4 wzzx
  float4 wzzy
  float4 wzzz
  float4 wzzw
  float4 wzwx
  float4 wzwy
  float4 wzwz
  float4 wzww
  float4 wwxx
  float4 wwxy
  float4 wwxz
  float4 wwxw
  float4 wwyx
  float4 wwyy
  float4 wwyz
  float4 wwyw
  float4 wwzx
  float4 wwzy
  float4 wwzz
  float4 wwzw
  float4 wwwx
  float4 wwwy
  float4 wwwz
  float4 wwww
  float3 xxx
  float3 xxy
  float3 xxz
  float3 xxw
  float3 xyx
  float3 xyy
  float3 xyz
  float3 xyw
  float3 xzx
  float3 xzy
  float3 xzz
  float3 xzw
  float3 xwx
  float3 xwy
  float3 xwz
  float3 xww
  float3 yxx
  float3 yxy
  float3 yxz
  float3 yxw
  float3 yyx
  float3 yyy
  float3 yyz
  float3 yyw
  float3 yzx
  float3 yzy
  float3 yzz
  float3 yzw
  float3 ywx
  float3 ywy
  float3 ywz
  float3 yww
  float3 zxx
  float3 zxy
  float3 zxz
  float3 zxw
  float3 zyx
  float3 zyy
  float3 zyz
  float3 zyw
  float3 zzx
  float3 zzy
  float3 zzz
  float3 zzw
  float3 zwx
  float3 zwy
  float3 zwz
  float3 zww
  float3 wxx
  float3 wxy
  float3 wxz
  float3 wxw
  float3 wyx
  float3 wyy
  float3 wyz
  float3 wyw
  float3 wzx
  float3 wzy
  float3 wzz
  float3 wzw
  float3 wwx
  float3 wwy
  float3 wwz
  float3 www
  float2 xx
  float2 xy
  float2 xz
  float2 xw
  float2 yx
  float2 yy
  float2 yz
  float2 yw
  float2 zx
  float2 zy
  float2 zz
  float2 zw
  float2 wx
  float2 wy
  float2 wz
  float2 ww
  float Item
Методы:
  void .ctor(float x, float y, float z, float w)
  void .ctor(float x, float y, float2 zw)
  void .ctor(float x, float2 yz, float w)
  void .ctor(float x, float3 yzw)
  void .ctor(float2 xy, float z, float w)
  void .ctor(float2 xy, float2 zw)
  void .ctor(float3 xyz, float w)
  void .ctor(float4 xyzw)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool4 v)
  void .ctor(int v)
  void .ctor(int4 v)
  void .ctor(UInt32 v)
  void .ctor(uint4 v)
  void .ctor(half v)
  void .ctor(half4 v)
  void .ctor(double v)
  void .ctor(double4 v)
  float4 op_Implicit(float v)
  float4 op_Explicit(bool v)
  float4 op_Explicit(bool4 v)
  float4 op_Implicit(int v)
  float4 op_Implicit(int4 v)
  float4 op_Implicit(UInt32 v)
  float4 op_Implicit(uint4 v)
  float4 op_Implicit(half v)
  float4 op_Implicit(half4 v)
  float4 op_Explicit(double v)
  float4 op_Explicit(double4 v)
  float4 op_Multiply(float4 lhs, float4 rhs)
  float4 op_Multiply(float4 lhs, float rhs)
  float4 op_Multiply(float lhs, float4 rhs)
  float4 op_Addition(float4 lhs, float4 rhs)
  float4 op_Addition(float4 lhs, float rhs)
  float4 op_Addition(float lhs, float4 rhs)
  float4 op_Subtraction(float4 lhs, float4 rhs)
  float4 op_Subtraction(float4 lhs, float rhs)
  float4 op_Subtraction(float lhs, float4 rhs)
  float4 op_Division(float4 lhs, float4 rhs)
  float4 op_Division(float4 lhs, float rhs)
  float4 op_Division(float lhs, float4 rhs)
  float4 op_Modulus(float4 lhs, float4 rhs)
  float4 op_Modulus(float4 lhs, float rhs)
  float4 op_Modulus(float lhs, float4 rhs)
  float4 op_Increment(float4 val)
  float4 op_Decrement(float4 val)
  bool4 op_LessThan(float4 lhs, float4 rhs)
  bool4 op_LessThan(float4 lhs, float rhs)
  bool4 op_LessThan(float lhs, float4 rhs)
  bool4 op_LessThanOrEqual(float4 lhs, float4 rhs)
  bool4 op_LessThanOrEqual(float4 lhs, float rhs)
  bool4 op_LessThanOrEqual(float lhs, float4 rhs)
  bool4 op_GreaterThan(float4 lhs, float4 rhs)
  bool4 op_GreaterThan(float4 lhs, float rhs)
  bool4 op_GreaterThan(float lhs, float4 rhs)
  bool4 op_GreaterThanOrEqual(float4 lhs, float4 rhs)
  bool4 op_GreaterThanOrEqual(float4 lhs, float rhs)
  bool4 op_GreaterThanOrEqual(float lhs, float4 rhs)
  float4 op_UnaryNegation(float4 val)
  float4 op_UnaryPlus(float4 val)
  bool4 op_Equality(float4 lhs, float4 rhs)
  bool4 op_Equality(float4 lhs, float rhs)
  bool4 op_Equality(float lhs, float4 rhs)
  bool4 op_Inequality(float4 lhs, float4 rhs)
  bool4 op_Inequality(float4 lhs, float rhs)
  bool4 op_Inequality(float lhs, float4 rhs)
  float4 get_xxxx()
  float4 get_xxxy()
  float4 get_xxxz()
  float4 get_xxxw()
  float4 get_xxyx()
  float4 get_xxyy()
  float4 get_xxyz()
  float4 get_xxyw()
  float4 get_xxzx()
  float4 get_xxzy()
  float4 get_xxzz()
  float4 get_xxzw()
  float4 get_xxwx()
  float4 get_xxwy()
  float4 get_xxwz()
  float4 get_xxww()
  float4 get_xyxx()
  float4 get_xyxy()
  float4 get_xyxz()
  float4 get_xyxw()
  float4 get_xyyx()
  float4 get_xyyy()
  float4 get_xyyz()
  float4 get_xyyw()
  float4 get_xyzx()
  float4 get_xyzy()
  float4 get_xyzz()
  float4 get_xyzw()
  void set_xyzw(float4 value)
  float4 get_xywx()
  float4 get_xywy()
  float4 get_xywz()
  void set_xywz(float4 value)
  float4 get_xyww()
  float4 get_xzxx()
  float4 get_xzxy()
  float4 get_xzxz()
  float4 get_xzxw()
  float4 get_xzyx()
  float4 get_xzyy()
  float4 get_xzyz()
  float4 get_xzyw()
  void set_xzyw(float4 value)
  float4 get_xzzx()
  float4 get_xzzy()
  float4 get_xzzz()
  float4 get_xzzw()
  float4 get_xzwx()
  float4 get_xzwy()
  void set_xzwy(float4 value)
  float4 get_xzwz()
  float4 get_xzww()
  float4 get_xwxx()
  float4 get_xwxy()
  float4 get_xwxz()
  float4 get_xwxw()
  float4 get_xwyx()
  float4 get_xwyy()
  float4 get_xwyz()
  void set_xwyz(float4 value)
  float4 get_xwyw()
  float4 get_xwzx()
  float4 get_xwzy()
  void set_xwzy(float4 value)
  float4 get_xwzz()
  float4 get_xwzw()
  float4 get_xwwx()
  float4 get_xwwy()
  float4 get_xwwz()
  float4 get_xwww()
  float4 get_yxxx()
  float4 get_yxxy()
  float4 get_yxxz()
  float4 get_yxxw()
  float4 get_yxyx()
  float4 get_yxyy()
  float4 get_yxyz()
  float4 get_yxyw()
  float4 get_yxzx()
  float4 get_yxzy()
  float4 get_yxzz()
  float4 get_yxzw()
  void set_yxzw(float4 value)
  float4 get_yxwx()
  float4 get_yxwy()
  float4 get_yxwz()
  void set_yxwz(float4 value)
  float4 get_yxww()
  float4 get_yyxx()
  float4 get_yyxy()
  float4 get_yyxz()
  float4 get_yyxw()
  float4 get_yyyx()
  float4 get_yyyy()
  float4 get_yyyz()
  float4 get_yyyw()
  float4 get_yyzx()
  float4 get_yyzy()
  float4 get_yyzz()
  float4 get_yyzw()
  float4 get_yywx()
  float4 get_yywy()
  float4 get_yywz()
  float4 get_yyww()
  float4 get_yzxx()
  float4 get_yzxy()
  float4 get_yzxz()
  float4 get_yzxw()
  void set_yzxw(float4 value)
  float4 get_yzyx()
  float4 get_yzyy()
  float4 get_yzyz()
  float4 get_yzyw()
  float4 get_yzzx()
  float4 get_yzzy()
  float4 get_yzzz()
  float4 get_yzzw()
  float4 get_yzwx()
  void set_yzwx(float4 value)
  float4 get_yzwy()
  float4 get_yzwz()
  float4 get_yzww()
  float4 get_ywxx()
  float4 get_ywxy()
  float4 get_ywxz()
  void set_ywxz(float4 value)
  float4 get_ywxw()
  float4 get_ywyx()
  float4 get_ywyy()
  float4 get_ywyz()
  float4 get_ywyw()
  float4 get_ywzx()
  void set_ywzx(float4 value)
  float4 get_ywzy()
  float4 get_ywzz()
  float4 get_ywzw()
  float4 get_ywwx()
  float4 get_ywwy()
  float4 get_ywwz()
  float4 get_ywww()
  float4 get_zxxx()
  float4 get_zxxy()
  float4 get_zxxz()
  float4 get_zxxw()
  float4 get_zxyx()
  float4 get_zxyy()
  float4 get_zxyz()
  float4 get_zxyw()
  void set_zxyw(float4 value)
  float4 get_zxzx()
  float4 get_zxzy()
  float4 get_zxzz()
  float4 get_zxzw()
  float4 get_zxwx()
  float4 get_zxwy()
  void set_zxwy(float4 value)
  float4 get_zxwz()
  float4 get_zxww()
  float4 get_zyxx()
  float4 get_zyxy()
  float4 get_zyxz()
  float4 get_zyxw()
  void set_zyxw(float4 value)
  float4 get_zyyx()
  float4 get_zyyy()
  float4 get_zyyz()
  float4 get_zyyw()
  float4 get_zyzx()
  float4 get_zyzy()
  float4 get_zyzz()
  float4 get_zyzw()
  float4 get_zywx()
  void set_zywx(float4 value)
  float4 get_zywy()
  float4 get_zywz()
  float4 get_zyww()
  float4 get_zzxx()
  float4 get_zzxy()
  float4 get_zzxz()
  float4 get_zzxw()
  float4 get_zzyx()
  float4 get_zzyy()
  float4 get_zzyz()
  float4 get_zzyw()
  float4 get_zzzx()
  float4 get_zzzy()
  float4 get_zzzz()
  float4 get_zzzw()
  float4 get_zzwx()
  float4 get_zzwy()
  float4 get_zzwz()
  float4 get_zzww()
  float4 get_zwxx()
  float4 get_zwxy()
  void set_zwxy(float4 value)
  float4 get_zwxz()
  float4 get_zwxw()
  float4 get_zwyx()
  void set_zwyx(float4 value)
  float4 get_zwyy()
  float4 get_zwyz()
  float4 get_zwyw()
  float4 get_zwzx()
  float4 get_zwzy()
  float4 get_zwzz()
  float4 get_zwzw()
  float4 get_zwwx()
  float4 get_zwwy()
  float4 get_zwwz()
  float4 get_zwww()
  float4 get_wxxx()
  float4 get_wxxy()
  float4 get_wxxz()
  float4 get_wxxw()
  float4 get_wxyx()
  float4 get_wxyy()
  float4 get_wxyz()
  void set_wxyz(float4 value)
  float4 get_wxyw()
  float4 get_wxzx()
  float4 get_wxzy()
  void set_wxzy(float4 value)
  float4 get_wxzz()
  float4 get_wxzw()
  float4 get_wxwx()
  float4 get_wxwy()
  float4 get_wxwz()
  float4 get_wxww()
  float4 get_wyxx()
  float4 get_wyxy()
  float4 get_wyxz()
  void set_wyxz(float4 value)
  float4 get_wyxw()
  float4 get_wyyx()
  float4 get_wyyy()
  float4 get_wyyz()
  float4 get_wyyw()
  float4 get_wyzx()
  void set_wyzx(float4 value)
  float4 get_wyzy()
  float4 get_wyzz()
  float4 get_wyzw()
  float4 get_wywx()
  float4 get_wywy()
  float4 get_wywz()
  float4 get_wyww()
  float4 get_wzxx()
  float4 get_wzxy()
  void set_wzxy(float4 value)
  float4 get_wzxz()
  float4 get_wzxw()
  float4 get_wzyx()
  void set_wzyx(float4 value)
  float4 get_wzyy()
  float4 get_wzyz()
  float4 get_wzyw()
  float4 get_wzzx()
  float4 get_wzzy()
  float4 get_wzzz()
  float4 get_wzzw()
  float4 get_wzwx()
  float4 get_wzwy()
  float4 get_wzwz()
  float4 get_wzww()
  float4 get_wwxx()
  float4 get_wwxy()
  float4 get_wwxz()
  float4 get_wwxw()
  float4 get_wwyx()
  float4 get_wwyy()
  float4 get_wwyz()
  float4 get_wwyw()
  float4 get_wwzx()
  float4 get_wwzy()
  float4 get_wwzz()
  float4 get_wwzw()
  float4 get_wwwx()
  float4 get_wwwy()
  float4 get_wwwz()
  float4 get_wwww()
  float3 get_xxx()
  float3 get_xxy()
  float3 get_xxz()
  float3 get_xxw()
  float3 get_xyx()
  float3 get_xyy()
  float3 get_xyz()
  void set_xyz(float3 value)
  float3 get_xyw()
  void set_xyw(float3 value)
  float3 get_xzx()
  float3 get_xzy()
  void set_xzy(float3 value)
  float3 get_xzz()
  float3 get_xzw()
  void set_xzw(float3 value)
  float3 get_xwx()
  float3 get_xwy()
  void set_xwy(float3 value)
  float3 get_xwz()
  void set_xwz(float3 value)
  float3 get_xww()
  float3 get_yxx()
  float3 get_yxy()
  float3 get_yxz()
  void set_yxz(float3 value)
  float3 get_yxw()
  void set_yxw(float3 value)
  float3 get_yyx()
  float3 get_yyy()
  float3 get_yyz()
  float3 get_yyw()
  float3 get_yzx()
  void set_yzx(float3 value)
  float3 get_yzy()
  float3 get_yzz()
  float3 get_yzw()
  void set_yzw(float3 value)
  float3 get_ywx()
  void set_ywx(float3 value)
  float3 get_ywy()
  float3 get_ywz()
  void set_ywz(float3 value)
  float3 get_yww()
  float3 get_zxx()
  float3 get_zxy()
  void set_zxy(float3 value)
  float3 get_zxz()
  float3 get_zxw()
  void set_zxw(float3 value)
  float3 get_zyx()
  void set_zyx(float3 value)
  float3 get_zyy()
  float3 get_zyz()
  float3 get_zyw()
  void set_zyw(float3 value)
  float3 get_zzx()
  float3 get_zzy()
  float3 get_zzz()
  float3 get_zzw()
  float3 get_zwx()
  void set_zwx(float3 value)
  float3 get_zwy()
  void set_zwy(float3 value)
  float3 get_zwz()
  float3 get_zww()
  float3 get_wxx()
  float3 get_wxy()
  void set_wxy(float3 value)
  float3 get_wxz()
  void set_wxz(float3 value)
  float3 get_wxw()
  float3 get_wyx()
  void set_wyx(float3 value)
  float3 get_wyy()
  float3 get_wyz()
  void set_wyz(float3 value)
  float3 get_wyw()
  float3 get_wzx()
  void set_wzx(float3 value)
  float3 get_wzy()
  void set_wzy(float3 value)
  float3 get_wzz()
  float3 get_wzw()
  float3 get_wwx()
  float3 get_wwy()
  float3 get_wwz()
  float3 get_www()
  float2 get_xx()
  float2 get_xy()
  void set_xy(float2 value)
  float2 get_xz()
  void set_xz(float2 value)
  float2 get_xw()
  void set_xw(float2 value)
  float2 get_yx()
  void set_yx(float2 value)
  float2 get_yy()
  float2 get_yz()
  void set_yz(float2 value)
  float2 get_yw()
  void set_yw(float2 value)
  float2 get_zx()
  void set_zx(float2 value)
  float2 get_zy()
  void set_zy(float2 value)
  float2 get_zz()
  float2 get_zw()
  void set_zw(float2 value)
  float2 get_wx()
  void set_wx(float2 value)
  float2 get_wy()
  void set_wy(float2 value)
  float2 get_wz()
  void set_wz(float2 value)
  float2 get_ww()
  float get_Item(int index)
  void set_Item(int index, float value)
  bool Equals(float4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  float4 op_Implicit(Vector4 v)
  Vector4 op_Implicit(float4 v)
--------------------------------------------------
Класс: Unity.Mathematics.float4x2
Наследуется от: ValueType
Поля:
  float4 c0
  float4 c1
  float4x2 zero
Свойства:
  float4& Item
Методы:
  void .ctor(float4 c0, float4 c1)
  void .ctor(float m00, float m01, float m10, float m11, float m20, float m21, float m30, float m31)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool4x2 v)
  void .ctor(int v)
  void .ctor(int4x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x2 v)
  void .ctor(double v)
  void .ctor(double4x2 v)
  float4x2 op_Implicit(float v)
  float4x2 op_Explicit(bool v)
  float4x2 op_Explicit(bool4x2 v)
  float4x2 op_Implicit(int v)
  float4x2 op_Implicit(int4x2 v)
  float4x2 op_Implicit(UInt32 v)
  float4x2 op_Implicit(uint4x2 v)
  float4x2 op_Explicit(double v)
  float4x2 op_Explicit(double4x2 v)
  float4x2 op_Multiply(float4x2 lhs, float4x2 rhs)
  float4x2 op_Multiply(float4x2 lhs, float rhs)
  float4x2 op_Multiply(float lhs, float4x2 rhs)
  float4x2 op_Addition(float4x2 lhs, float4x2 rhs)
  float4x2 op_Addition(float4x2 lhs, float rhs)
  float4x2 op_Addition(float lhs, float4x2 rhs)
  float4x2 op_Subtraction(float4x2 lhs, float4x2 rhs)
  float4x2 op_Subtraction(float4x2 lhs, float rhs)
  float4x2 op_Subtraction(float lhs, float4x2 rhs)
  float4x2 op_Division(float4x2 lhs, float4x2 rhs)
  float4x2 op_Division(float4x2 lhs, float rhs)
  float4x2 op_Division(float lhs, float4x2 rhs)
  float4x2 op_Modulus(float4x2 lhs, float4x2 rhs)
  float4x2 op_Modulus(float4x2 lhs, float rhs)
  float4x2 op_Modulus(float lhs, float4x2 rhs)
  float4x2 op_Increment(float4x2 val)
  float4x2 op_Decrement(float4x2 val)
  bool4x2 op_LessThan(float4x2 lhs, float4x2 rhs)
  bool4x2 op_LessThan(float4x2 lhs, float rhs)
  bool4x2 op_LessThan(float lhs, float4x2 rhs)
  bool4x2 op_LessThanOrEqual(float4x2 lhs, float4x2 rhs)
  bool4x2 op_LessThanOrEqual(float4x2 lhs, float rhs)
  bool4x2 op_LessThanOrEqual(float lhs, float4x2 rhs)
  bool4x2 op_GreaterThan(float4x2 lhs, float4x2 rhs)
  bool4x2 op_GreaterThan(float4x2 lhs, float rhs)
  bool4x2 op_GreaterThan(float lhs, float4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(float4x2 lhs, float4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(float4x2 lhs, float rhs)
  bool4x2 op_GreaterThanOrEqual(float lhs, float4x2 rhs)
  float4x2 op_UnaryNegation(float4x2 val)
  float4x2 op_UnaryPlus(float4x2 val)
  bool4x2 op_Equality(float4x2 lhs, float4x2 rhs)
  bool4x2 op_Equality(float4x2 lhs, float rhs)
  bool4x2 op_Equality(float lhs, float4x2 rhs)
  bool4x2 op_Inequality(float4x2 lhs, float4x2 rhs)
  bool4x2 op_Inequality(float4x2 lhs, float rhs)
  bool4x2 op_Inequality(float lhs, float4x2 rhs)
  float4& get_Item(int index)
  bool Equals(float4x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.float4x3
Наследуется от: ValueType
Поля:
  float4 c0
  float4 c1
  float4 c2
  float4x3 zero
Свойства:
  float4& Item
Методы:
  void .ctor(float4 c0, float4 c1, float4 c2)
  void .ctor(float m00, float m01, float m02, float m10, float m11, float m12, float m20, float m21, float m22, float m30, float m31, float m32)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool4x3 v)
  void .ctor(int v)
  void .ctor(int4x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x3 v)
  void .ctor(double v)
  void .ctor(double4x3 v)
  float4x3 op_Implicit(float v)
  float4x3 op_Explicit(bool v)
  float4x3 op_Explicit(bool4x3 v)
  float4x3 op_Implicit(int v)
  float4x3 op_Implicit(int4x3 v)
  float4x3 op_Implicit(UInt32 v)
  float4x3 op_Implicit(uint4x3 v)
  float4x3 op_Explicit(double v)
  float4x3 op_Explicit(double4x3 v)
  float4x3 op_Multiply(float4x3 lhs, float4x3 rhs)
  float4x3 op_Multiply(float4x3 lhs, float rhs)
  float4x3 op_Multiply(float lhs, float4x3 rhs)
  float4x3 op_Addition(float4x3 lhs, float4x3 rhs)
  float4x3 op_Addition(float4x3 lhs, float rhs)
  float4x3 op_Addition(float lhs, float4x3 rhs)
  float4x3 op_Subtraction(float4x3 lhs, float4x3 rhs)
  float4x3 op_Subtraction(float4x3 lhs, float rhs)
  float4x3 op_Subtraction(float lhs, float4x3 rhs)
  float4x3 op_Division(float4x3 lhs, float4x3 rhs)
  float4x3 op_Division(float4x3 lhs, float rhs)
  float4x3 op_Division(float lhs, float4x3 rhs)
  float4x3 op_Modulus(float4x3 lhs, float4x3 rhs)
  float4x3 op_Modulus(float4x3 lhs, float rhs)
  float4x3 op_Modulus(float lhs, float4x3 rhs)
  float4x3 op_Increment(float4x3 val)
  float4x3 op_Decrement(float4x3 val)
  bool4x3 op_LessThan(float4x3 lhs, float4x3 rhs)
  bool4x3 op_LessThan(float4x3 lhs, float rhs)
  bool4x3 op_LessThan(float lhs, float4x3 rhs)
  bool4x3 op_LessThanOrEqual(float4x3 lhs, float4x3 rhs)
  bool4x3 op_LessThanOrEqual(float4x3 lhs, float rhs)
  bool4x3 op_LessThanOrEqual(float lhs, float4x3 rhs)
  bool4x3 op_GreaterThan(float4x3 lhs, float4x3 rhs)
  bool4x3 op_GreaterThan(float4x3 lhs, float rhs)
  bool4x3 op_GreaterThan(float lhs, float4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(float4x3 lhs, float4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(float4x3 lhs, float rhs)
  bool4x3 op_GreaterThanOrEqual(float lhs, float4x3 rhs)
  float4x3 op_UnaryNegation(float4x3 val)
  float4x3 op_UnaryPlus(float4x3 val)
  bool4x3 op_Equality(float4x3 lhs, float4x3 rhs)
  bool4x3 op_Equality(float4x3 lhs, float rhs)
  bool4x3 op_Equality(float lhs, float4x3 rhs)
  bool4x3 op_Inequality(float4x3 lhs, float4x3 rhs)
  bool4x3 op_Inequality(float4x3 lhs, float rhs)
  bool4x3 op_Inequality(float lhs, float4x3 rhs)
  float4& get_Item(int index)
  bool Equals(float4x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.float4x4
Наследуется от: ValueType
Поля:
  float4 c0
  float4 c1
  float4 c2
  float4 c3
  float4x4 identity
  float4x4 zero
Свойства:
  float4& Item
Методы:
  void .ctor(float4 c0, float4 c1, float4 c2, float4 c3)
  void .ctor(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33)
  void .ctor(float v)
  void .ctor(bool v)
  void .ctor(bool4x4 v)
  void .ctor(int v)
  void .ctor(int4x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x4 v)
  void .ctor(double v)
  void .ctor(double4x4 v)
  float4x4 op_Implicit(float v)
  float4x4 op_Explicit(bool v)
  float4x4 op_Explicit(bool4x4 v)
  float4x4 op_Implicit(int v)
  float4x4 op_Implicit(int4x4 v)
  float4x4 op_Implicit(UInt32 v)
  float4x4 op_Implicit(uint4x4 v)
  float4x4 op_Explicit(double v)
  float4x4 op_Explicit(double4x4 v)
  float4x4 op_Multiply(float4x4 lhs, float4x4 rhs)
  float4x4 op_Multiply(float4x4 lhs, float rhs)
  float4x4 op_Multiply(float lhs, float4x4 rhs)
  float4x4 op_Addition(float4x4 lhs, float4x4 rhs)
  float4x4 op_Addition(float4x4 lhs, float rhs)
  float4x4 op_Addition(float lhs, float4x4 rhs)
  float4x4 op_Subtraction(float4x4 lhs, float4x4 rhs)
  float4x4 op_Subtraction(float4x4 lhs, float rhs)
  float4x4 op_Subtraction(float lhs, float4x4 rhs)
  float4x4 op_Division(float4x4 lhs, float4x4 rhs)
  float4x4 op_Division(float4x4 lhs, float rhs)
  float4x4 op_Division(float lhs, float4x4 rhs)
  float4x4 op_Modulus(float4x4 lhs, float4x4 rhs)
  float4x4 op_Modulus(float4x4 lhs, float rhs)
  float4x4 op_Modulus(float lhs, float4x4 rhs)
  float4x4 op_Increment(float4x4 val)
  float4x4 op_Decrement(float4x4 val)
  bool4x4 op_LessThan(float4x4 lhs, float4x4 rhs)
  bool4x4 op_LessThan(float4x4 lhs, float rhs)
  bool4x4 op_LessThan(float lhs, float4x4 rhs)
  bool4x4 op_LessThanOrEqual(float4x4 lhs, float4x4 rhs)
  bool4x4 op_LessThanOrEqual(float4x4 lhs, float rhs)
  bool4x4 op_LessThanOrEqual(float lhs, float4x4 rhs)
  bool4x4 op_GreaterThan(float4x4 lhs, float4x4 rhs)
  bool4x4 op_GreaterThan(float4x4 lhs, float rhs)
  bool4x4 op_GreaterThan(float lhs, float4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(float4x4 lhs, float4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(float4x4 lhs, float rhs)
  bool4x4 op_GreaterThanOrEqual(float lhs, float4x4 rhs)
  float4x4 op_UnaryNegation(float4x4 val)
  float4x4 op_UnaryPlus(float4x4 val)
  bool4x4 op_Equality(float4x4 lhs, float4x4 rhs)
  bool4x4 op_Equality(float4x4 lhs, float rhs)
  bool4x4 op_Equality(float lhs, float4x4 rhs)
  bool4x4 op_Inequality(float4x4 lhs, float4x4 rhs)
  bool4x4 op_Inequality(float4x4 lhs, float rhs)
  bool4x4 op_Inequality(float lhs, float4x4 rhs)
  float4& get_Item(int index)
  bool Equals(float4x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  float4x4 op_Implicit(Matrix4x4 m)
  Matrix4x4 op_Implicit(float4x4 m)
  void .ctor(float3x3 rotation, float3 translation)
  void .ctor(quaternion rotation, float3 translation)
  void .ctor(RigidTransform transform)
  float4x4 AxisAngle(float3 axis, float angle)
  float4x4 EulerXYZ(float3 xyz)
  float4x4 EulerXZY(float3 xyz)
  float4x4 EulerYXZ(float3 xyz)
  float4x4 EulerYZX(float3 xyz)
  float4x4 EulerZXY(float3 xyz)
  float4x4 EulerZYX(float3 xyz)
  float4x4 EulerXYZ(float x, float y, float z)
  float4x4 EulerXZY(float x, float y, float z)
  float4x4 EulerYXZ(float x, float y, float z)
  float4x4 EulerYZX(float x, float y, float z)
  float4x4 EulerZXY(float x, float y, float z)
  float4x4 EulerZYX(float x, float y, float z)
  float4x4 Euler(float3 xyz, RotationOrder order)
  float4x4 Euler(float x, float y, float z, RotationOrder order)
  float4x4 RotateX(float angle)
  float4x4 RotateY(float angle)
  float4x4 RotateZ(float angle)
  float4x4 Scale(float s)
  float4x4 Scale(float x, float y, float z)
  float4x4 Scale(float3 scales)
  float4x4 Translate(float3 vector)
  float4x4 LookAt(float3 eye, float3 target, float3 up)
  float4x4 Ortho(float width, float height, float near, float far)
  float4x4 OrthoOffCenter(float left, float right, float bottom, float top, float near, float far)
  float4x4 PerspectiveFov(float verticalFov, float aspect, float near, float far)
  float4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float near, float far)
  float4x4 TRS(float3 translation, quaternion rotation, float3 scale)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.half
Наследуется от: ValueType
Поля:
  ushort value
  half zero
Свойства:
  float MaxValue
  float MinValue
  half MaxValueAsHalf
  half MinValueAsHalf
Методы:
  float get_MaxValue()
  float get_MinValue()
  half get_MaxValueAsHalf()
  half get_MinValueAsHalf()
  void .ctor(half x)
  void .ctor(float v)
  void .ctor(double v)
  half op_Explicit(float v)
  half op_Explicit(double v)
  float op_Implicit(half d)
  double op_Implicit(half d)
  bool op_Equality(half lhs, half rhs)
  bool op_Inequality(half lhs, half rhs)
  bool Equals(half rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.half2
Наследуется от: ValueType
Поля:
  half x
  half y
  half2 zero
Свойства:
  half4 xxxx
  half4 xxxy
  half4 xxyx
  half4 xxyy
  half4 xyxx
  half4 xyxy
  half4 xyyx
  half4 xyyy
  half4 yxxx
  half4 yxxy
  half4 yxyx
  half4 yxyy
  half4 yyxx
  half4 yyxy
  half4 yyyx
  half4 yyyy
  half3 xxx
  half3 xxy
  half3 xyx
  half3 xyy
  half3 yxx
  half3 yxy
  half3 yyx
  half3 yyy
  half2 xx
  half2 xy
  half2 yx
  half2 yy
  half Item
Методы:
  void .ctor(half x, half y)
  void .ctor(half2 xy)
  void .ctor(half v)
  void .ctor(float v)
  void .ctor(float2 v)
  void .ctor(double v)
  void .ctor(double2 v)
  half2 op_Implicit(half v)
  half2 op_Explicit(float v)
  half2 op_Explicit(float2 v)
  half2 op_Explicit(double v)
  half2 op_Explicit(double2 v)
  bool2 op_Equality(half2 lhs, half2 rhs)
  bool2 op_Equality(half2 lhs, half rhs)
  bool2 op_Equality(half lhs, half2 rhs)
  bool2 op_Inequality(half2 lhs, half2 rhs)
  bool2 op_Inequality(half2 lhs, half rhs)
  bool2 op_Inequality(half lhs, half2 rhs)
  half4 get_xxxx()
  half4 get_xxxy()
  half4 get_xxyx()
  half4 get_xxyy()
  half4 get_xyxx()
  half4 get_xyxy()
  half4 get_xyyx()
  half4 get_xyyy()
  half4 get_yxxx()
  half4 get_yxxy()
  half4 get_yxyx()
  half4 get_yxyy()
  half4 get_yyxx()
  half4 get_yyxy()
  half4 get_yyyx()
  half4 get_yyyy()
  half3 get_xxx()
  half3 get_xxy()
  half3 get_xyx()
  half3 get_xyy()
  half3 get_yxx()
  half3 get_yxy()
  half3 get_yyx()
  half3 get_yyy()
  half2 get_xx()
  half2 get_xy()
  void set_xy(half2 value)
  half2 get_yx()
  void set_yx(half2 value)
  half2 get_yy()
  half get_Item(int index)
  void set_Item(int index, half value)
  bool Equals(half2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.half3
Наследуется от: ValueType
Поля:
  half x
  half y
  half z
  half3 zero
Свойства:
  half4 xxxx
  half4 xxxy
  half4 xxxz
  half4 xxyx
  half4 xxyy
  half4 xxyz
  half4 xxzx
  half4 xxzy
  half4 xxzz
  half4 xyxx
  half4 xyxy
  half4 xyxz
  half4 xyyx
  half4 xyyy
  half4 xyyz
  half4 xyzx
  half4 xyzy
  half4 xyzz
  half4 xzxx
  half4 xzxy
  half4 xzxz
  half4 xzyx
  half4 xzyy
  half4 xzyz
  half4 xzzx
  half4 xzzy
  half4 xzzz
  half4 yxxx
  half4 yxxy
  half4 yxxz
  half4 yxyx
  half4 yxyy
  half4 yxyz
  half4 yxzx
  half4 yxzy
  half4 yxzz
  half4 yyxx
  half4 yyxy
  half4 yyxz
  half4 yyyx
  half4 yyyy
  half4 yyyz
  half4 yyzx
  half4 yyzy
  half4 yyzz
  half4 yzxx
  half4 yzxy
  half4 yzxz
  half4 yzyx
  half4 yzyy
  half4 yzyz
  half4 yzzx
  half4 yzzy
  half4 yzzz
  half4 zxxx
  half4 zxxy
  half4 zxxz
  half4 zxyx
  half4 zxyy
  half4 zxyz
  half4 zxzx
  half4 zxzy
  half4 zxzz
  half4 zyxx
  half4 zyxy
  half4 zyxz
  half4 zyyx
  half4 zyyy
  half4 zyyz
  half4 zyzx
  half4 zyzy
  half4 zyzz
  half4 zzxx
  half4 zzxy
  half4 zzxz
  half4 zzyx
  half4 zzyy
  half4 zzyz
  half4 zzzx
  half4 zzzy
  half4 zzzz
  half3 xxx
  half3 xxy
  half3 xxz
  half3 xyx
  half3 xyy
  half3 xyz
  half3 xzx
  half3 xzy
  half3 xzz
  half3 yxx
  half3 yxy
  half3 yxz
  half3 yyx
  half3 yyy
  half3 yyz
  half3 yzx
  half3 yzy
  half3 yzz
  half3 zxx
  half3 zxy
  half3 zxz
  half3 zyx
  half3 zyy
  half3 zyz
  half3 zzx
  half3 zzy
  half3 zzz
  half2 xx
  half2 xy
  half2 xz
  half2 yx
  half2 yy
  half2 yz
  half2 zx
  half2 zy
  half2 zz
  half Item
Методы:
  void .ctor(half x, half y, half z)
  void .ctor(half x, half2 yz)
  void .ctor(half2 xy, half z)
  void .ctor(half3 xyz)
  void .ctor(half v)
  void .ctor(float v)
  void .ctor(float3 v)
  void .ctor(double v)
  void .ctor(double3 v)
  half3 op_Implicit(half v)
  half3 op_Explicit(float v)
  half3 op_Explicit(float3 v)
  half3 op_Explicit(double v)
  half3 op_Explicit(double3 v)
  bool3 op_Equality(half3 lhs, half3 rhs)
  bool3 op_Equality(half3 lhs, half rhs)
  bool3 op_Equality(half lhs, half3 rhs)
  bool3 op_Inequality(half3 lhs, half3 rhs)
  bool3 op_Inequality(half3 lhs, half rhs)
  bool3 op_Inequality(half lhs, half3 rhs)
  half4 get_xxxx()
  half4 get_xxxy()
  half4 get_xxxz()
  half4 get_xxyx()
  half4 get_xxyy()
  half4 get_xxyz()
  half4 get_xxzx()
  half4 get_xxzy()
  half4 get_xxzz()
  half4 get_xyxx()
  half4 get_xyxy()
  half4 get_xyxz()
  half4 get_xyyx()
  half4 get_xyyy()
  half4 get_xyyz()
  half4 get_xyzx()
  half4 get_xyzy()
  half4 get_xyzz()
  half4 get_xzxx()
  half4 get_xzxy()
  half4 get_xzxz()
  half4 get_xzyx()
  half4 get_xzyy()
  half4 get_xzyz()
  half4 get_xzzx()
  half4 get_xzzy()
  half4 get_xzzz()
  half4 get_yxxx()
  half4 get_yxxy()
  half4 get_yxxz()
  half4 get_yxyx()
  half4 get_yxyy()
  half4 get_yxyz()
  half4 get_yxzx()
  half4 get_yxzy()
  half4 get_yxzz()
  half4 get_yyxx()
  half4 get_yyxy()
  half4 get_yyxz()
  half4 get_yyyx()
  half4 get_yyyy()
  half4 get_yyyz()
  half4 get_yyzx()
  half4 get_yyzy()
  half4 get_yyzz()
  half4 get_yzxx()
  half4 get_yzxy()
  half4 get_yzxz()
  half4 get_yzyx()
  half4 get_yzyy()
  half4 get_yzyz()
  half4 get_yzzx()
  half4 get_yzzy()
  half4 get_yzzz()
  half4 get_zxxx()
  half4 get_zxxy()
  half4 get_zxxz()
  half4 get_zxyx()
  half4 get_zxyy()
  half4 get_zxyz()
  half4 get_zxzx()
  half4 get_zxzy()
  half4 get_zxzz()
  half4 get_zyxx()
  half4 get_zyxy()
  half4 get_zyxz()
  half4 get_zyyx()
  half4 get_zyyy()
  half4 get_zyyz()
  half4 get_zyzx()
  half4 get_zyzy()
  half4 get_zyzz()
  half4 get_zzxx()
  half4 get_zzxy()
  half4 get_zzxz()
  half4 get_zzyx()
  half4 get_zzyy()
  half4 get_zzyz()
  half4 get_zzzx()
  half4 get_zzzy()
  half4 get_zzzz()
  half3 get_xxx()
  half3 get_xxy()
  half3 get_xxz()
  half3 get_xyx()
  half3 get_xyy()
  half3 get_xyz()
  void set_xyz(half3 value)
  half3 get_xzx()
  half3 get_xzy()
  void set_xzy(half3 value)
  half3 get_xzz()
  half3 get_yxx()
  half3 get_yxy()
  half3 get_yxz()
  void set_yxz(half3 value)
  half3 get_yyx()
  half3 get_yyy()
  half3 get_yyz()
  half3 get_yzx()
  void set_yzx(half3 value)
  half3 get_yzy()
  half3 get_yzz()
  half3 get_zxx()
  half3 get_zxy()
  void set_zxy(half3 value)
  half3 get_zxz()
  half3 get_zyx()
  void set_zyx(half3 value)
  half3 get_zyy()
  half3 get_zyz()
  half3 get_zzx()
  half3 get_zzy()
  half3 get_zzz()
  half2 get_xx()
  half2 get_xy()
  void set_xy(half2 value)
  half2 get_xz()
  void set_xz(half2 value)
  half2 get_yx()
  void set_yx(half2 value)
  half2 get_yy()
  half2 get_yz()
  void set_yz(half2 value)
  half2 get_zx()
  void set_zx(half2 value)
  half2 get_zy()
  void set_zy(half2 value)
  half2 get_zz()
  half get_Item(int index)
  void set_Item(int index, half value)
  bool Equals(half3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.half4
Наследуется от: ValueType
Поля:
  half x
  half y
  half z
  half w
  half4 zero
Свойства:
  half4 xxxx
  half4 xxxy
  half4 xxxz
  half4 xxxw
  half4 xxyx
  half4 xxyy
  half4 xxyz
  half4 xxyw
  half4 xxzx
  half4 xxzy
  half4 xxzz
  half4 xxzw
  half4 xxwx
  half4 xxwy
  half4 xxwz
  half4 xxww
  half4 xyxx
  half4 xyxy
  half4 xyxz
  half4 xyxw
  half4 xyyx
  half4 xyyy
  half4 xyyz
  half4 xyyw
  half4 xyzx
  half4 xyzy
  half4 xyzz
  half4 xyzw
  half4 xywx
  half4 xywy
  half4 xywz
  half4 xyww
  half4 xzxx
  half4 xzxy
  half4 xzxz
  half4 xzxw
  half4 xzyx
  half4 xzyy
  half4 xzyz
  half4 xzyw
  half4 xzzx
  half4 xzzy
  half4 xzzz
  half4 xzzw
  half4 xzwx
  half4 xzwy
  half4 xzwz
  half4 xzww
  half4 xwxx
  half4 xwxy
  half4 xwxz
  half4 xwxw
  half4 xwyx
  half4 xwyy
  half4 xwyz
  half4 xwyw
  half4 xwzx
  half4 xwzy
  half4 xwzz
  half4 xwzw
  half4 xwwx
  half4 xwwy
  half4 xwwz
  half4 xwww
  half4 yxxx
  half4 yxxy
  half4 yxxz
  half4 yxxw
  half4 yxyx
  half4 yxyy
  half4 yxyz
  half4 yxyw
  half4 yxzx
  half4 yxzy
  half4 yxzz
  half4 yxzw
  half4 yxwx
  half4 yxwy
  half4 yxwz
  half4 yxww
  half4 yyxx
  half4 yyxy
  half4 yyxz
  half4 yyxw
  half4 yyyx
  half4 yyyy
  half4 yyyz
  half4 yyyw
  half4 yyzx
  half4 yyzy
  half4 yyzz
  half4 yyzw
  half4 yywx
  half4 yywy
  half4 yywz
  half4 yyww
  half4 yzxx
  half4 yzxy
  half4 yzxz
  half4 yzxw
  half4 yzyx
  half4 yzyy
  half4 yzyz
  half4 yzyw
  half4 yzzx
  half4 yzzy
  half4 yzzz
  half4 yzzw
  half4 yzwx
  half4 yzwy
  half4 yzwz
  half4 yzww
  half4 ywxx
  half4 ywxy
  half4 ywxz
  half4 ywxw
  half4 ywyx
  half4 ywyy
  half4 ywyz
  half4 ywyw
  half4 ywzx
  half4 ywzy
  half4 ywzz
  half4 ywzw
  half4 ywwx
  half4 ywwy
  half4 ywwz
  half4 ywww
  half4 zxxx
  half4 zxxy
  half4 zxxz
  half4 zxxw
  half4 zxyx
  half4 zxyy
  half4 zxyz
  half4 zxyw
  half4 zxzx
  half4 zxzy
  half4 zxzz
  half4 zxzw
  half4 zxwx
  half4 zxwy
  half4 zxwz
  half4 zxww
  half4 zyxx
  half4 zyxy
  half4 zyxz
  half4 zyxw
  half4 zyyx
  half4 zyyy
  half4 zyyz
  half4 zyyw
  half4 zyzx
  half4 zyzy
  half4 zyzz
  half4 zyzw
  half4 zywx
  half4 zywy
  half4 zywz
  half4 zyww
  half4 zzxx
  half4 zzxy
  half4 zzxz
  half4 zzxw
  half4 zzyx
  half4 zzyy
  half4 zzyz
  half4 zzyw
  half4 zzzx
  half4 zzzy
  half4 zzzz
  half4 zzzw
  half4 zzwx
  half4 zzwy
  half4 zzwz
  half4 zzww
  half4 zwxx
  half4 zwxy
  half4 zwxz
  half4 zwxw
  half4 zwyx
  half4 zwyy
  half4 zwyz
  half4 zwyw
  half4 zwzx
  half4 zwzy
  half4 zwzz
  half4 zwzw
  half4 zwwx
  half4 zwwy
  half4 zwwz
  half4 zwww
  half4 wxxx
  half4 wxxy
  half4 wxxz
  half4 wxxw
  half4 wxyx
  half4 wxyy
  half4 wxyz
  half4 wxyw
  half4 wxzx
  half4 wxzy
  half4 wxzz
  half4 wxzw
  half4 wxwx
  half4 wxwy
  half4 wxwz
  half4 wxww
  half4 wyxx
  half4 wyxy
  half4 wyxz
  half4 wyxw
  half4 wyyx
  half4 wyyy
  half4 wyyz
  half4 wyyw
  half4 wyzx
  half4 wyzy
  half4 wyzz
  half4 wyzw
  half4 wywx
  half4 wywy
  half4 wywz
  half4 wyww
  half4 wzxx
  half4 wzxy
  half4 wzxz
  half4 wzxw
  half4 wzyx
  half4 wzyy
  half4 wzyz
  half4 wzyw
  half4 wzzx
  half4 wzzy
  half4 wzzz
  half4 wzzw
  half4 wzwx
  half4 wzwy
  half4 wzwz
  half4 wzww
  half4 wwxx
  half4 wwxy
  half4 wwxz
  half4 wwxw
  half4 wwyx
  half4 wwyy
  half4 wwyz
  half4 wwyw
  half4 wwzx
  half4 wwzy
  half4 wwzz
  half4 wwzw
  half4 wwwx
  half4 wwwy
  half4 wwwz
  half4 wwww
  half3 xxx
  half3 xxy
  half3 xxz
  half3 xxw
  half3 xyx
  half3 xyy
  half3 xyz
  half3 xyw
  half3 xzx
  half3 xzy
  half3 xzz
  half3 xzw
  half3 xwx
  half3 xwy
  half3 xwz
  half3 xww
  half3 yxx
  half3 yxy
  half3 yxz
  half3 yxw
  half3 yyx
  half3 yyy
  half3 yyz
  half3 yyw
  half3 yzx
  half3 yzy
  half3 yzz
  half3 yzw
  half3 ywx
  half3 ywy
  half3 ywz
  half3 yww
  half3 zxx
  half3 zxy
  half3 zxz
  half3 zxw
  half3 zyx
  half3 zyy
  half3 zyz
  half3 zyw
  half3 zzx
  half3 zzy
  half3 zzz
  half3 zzw
  half3 zwx
  half3 zwy
  half3 zwz
  half3 zww
  half3 wxx
  half3 wxy
  half3 wxz
  half3 wxw
  half3 wyx
  half3 wyy
  half3 wyz
  half3 wyw
  half3 wzx
  half3 wzy
  half3 wzz
  half3 wzw
  half3 wwx
  half3 wwy
  half3 wwz
  half3 www
  half2 xx
  half2 xy
  half2 xz
  half2 xw
  half2 yx
  half2 yy
  half2 yz
  half2 yw
  half2 zx
  half2 zy
  half2 zz
  half2 zw
  half2 wx
  half2 wy
  half2 wz
  half2 ww
  half Item
Методы:
  void .ctor(half x, half y, half z, half w)
  void .ctor(half x, half y, half2 zw)
  void .ctor(half x, half2 yz, half w)
  void .ctor(half x, half3 yzw)
  void .ctor(half2 xy, half z, half w)
  void .ctor(half2 xy, half2 zw)
  void .ctor(half3 xyz, half w)
  void .ctor(half4 xyzw)
  void .ctor(half v)
  void .ctor(float v)
  void .ctor(float4 v)
  void .ctor(double v)
  void .ctor(double4 v)
  half4 op_Implicit(half v)
  half4 op_Explicit(float v)
  half4 op_Explicit(float4 v)
  half4 op_Explicit(double v)
  half4 op_Explicit(double4 v)
  bool4 op_Equality(half4 lhs, half4 rhs)
  bool4 op_Equality(half4 lhs, half rhs)
  bool4 op_Equality(half lhs, half4 rhs)
  bool4 op_Inequality(half4 lhs, half4 rhs)
  bool4 op_Inequality(half4 lhs, half rhs)
  bool4 op_Inequality(half lhs, half4 rhs)
  half4 get_xxxx()
  half4 get_xxxy()
  half4 get_xxxz()
  half4 get_xxxw()
  half4 get_xxyx()
  half4 get_xxyy()
  half4 get_xxyz()
  half4 get_xxyw()
  half4 get_xxzx()
  half4 get_xxzy()
  half4 get_xxzz()
  half4 get_xxzw()
  half4 get_xxwx()
  half4 get_xxwy()
  half4 get_xxwz()
  half4 get_xxww()
  half4 get_xyxx()
  half4 get_xyxy()
  half4 get_xyxz()
  half4 get_xyxw()
  half4 get_xyyx()
  half4 get_xyyy()
  half4 get_xyyz()
  half4 get_xyyw()
  half4 get_xyzx()
  half4 get_xyzy()
  half4 get_xyzz()
  half4 get_xyzw()
  void set_xyzw(half4 value)
  half4 get_xywx()
  half4 get_xywy()
  half4 get_xywz()
  void set_xywz(half4 value)
  half4 get_xyww()
  half4 get_xzxx()
  half4 get_xzxy()
  half4 get_xzxz()
  half4 get_xzxw()
  half4 get_xzyx()
  half4 get_xzyy()
  half4 get_xzyz()
  half4 get_xzyw()
  void set_xzyw(half4 value)
  half4 get_xzzx()
  half4 get_xzzy()
  half4 get_xzzz()
  half4 get_xzzw()
  half4 get_xzwx()
  half4 get_xzwy()
  void set_xzwy(half4 value)
  half4 get_xzwz()
  half4 get_xzww()
  half4 get_xwxx()
  half4 get_xwxy()
  half4 get_xwxz()
  half4 get_xwxw()
  half4 get_xwyx()
  half4 get_xwyy()
  half4 get_xwyz()
  void set_xwyz(half4 value)
  half4 get_xwyw()
  half4 get_xwzx()
  half4 get_xwzy()
  void set_xwzy(half4 value)
  half4 get_xwzz()
  half4 get_xwzw()
  half4 get_xwwx()
  half4 get_xwwy()
  half4 get_xwwz()
  half4 get_xwww()
  half4 get_yxxx()
  half4 get_yxxy()
  half4 get_yxxz()
  half4 get_yxxw()
  half4 get_yxyx()
  half4 get_yxyy()
  half4 get_yxyz()
  half4 get_yxyw()
  half4 get_yxzx()
  half4 get_yxzy()
  half4 get_yxzz()
  half4 get_yxzw()
  void set_yxzw(half4 value)
  half4 get_yxwx()
  half4 get_yxwy()
  half4 get_yxwz()
  void set_yxwz(half4 value)
  half4 get_yxww()
  half4 get_yyxx()
  half4 get_yyxy()
  half4 get_yyxz()
  half4 get_yyxw()
  half4 get_yyyx()
  half4 get_yyyy()
  half4 get_yyyz()
  half4 get_yyyw()
  half4 get_yyzx()
  half4 get_yyzy()
  half4 get_yyzz()
  half4 get_yyzw()
  half4 get_yywx()
  half4 get_yywy()
  half4 get_yywz()
  half4 get_yyww()
  half4 get_yzxx()
  half4 get_yzxy()
  half4 get_yzxz()
  half4 get_yzxw()
  void set_yzxw(half4 value)
  half4 get_yzyx()
  half4 get_yzyy()
  half4 get_yzyz()
  half4 get_yzyw()
  half4 get_yzzx()
  half4 get_yzzy()
  half4 get_yzzz()
  half4 get_yzzw()
  half4 get_yzwx()
  void set_yzwx(half4 value)
  half4 get_yzwy()
  half4 get_yzwz()
  half4 get_yzww()
  half4 get_ywxx()
  half4 get_ywxy()
  half4 get_ywxz()
  void set_ywxz(half4 value)
  half4 get_ywxw()
  half4 get_ywyx()
  half4 get_ywyy()
  half4 get_ywyz()
  half4 get_ywyw()
  half4 get_ywzx()
  void set_ywzx(half4 value)
  half4 get_ywzy()
  half4 get_ywzz()
  half4 get_ywzw()
  half4 get_ywwx()
  half4 get_ywwy()
  half4 get_ywwz()
  half4 get_ywww()
  half4 get_zxxx()
  half4 get_zxxy()
  half4 get_zxxz()
  half4 get_zxxw()
  half4 get_zxyx()
  half4 get_zxyy()
  half4 get_zxyz()
  half4 get_zxyw()
  void set_zxyw(half4 value)
  half4 get_zxzx()
  half4 get_zxzy()
  half4 get_zxzz()
  half4 get_zxzw()
  half4 get_zxwx()
  half4 get_zxwy()
  void set_zxwy(half4 value)
  half4 get_zxwz()
  half4 get_zxww()
  half4 get_zyxx()
  half4 get_zyxy()
  half4 get_zyxz()
  half4 get_zyxw()
  void set_zyxw(half4 value)
  half4 get_zyyx()
  half4 get_zyyy()
  half4 get_zyyz()
  half4 get_zyyw()
  half4 get_zyzx()
  half4 get_zyzy()
  half4 get_zyzz()
  half4 get_zyzw()
  half4 get_zywx()
  void set_zywx(half4 value)
  half4 get_zywy()
  half4 get_zywz()
  half4 get_zyww()
  half4 get_zzxx()
  half4 get_zzxy()
  half4 get_zzxz()
  half4 get_zzxw()
  half4 get_zzyx()
  half4 get_zzyy()
  half4 get_zzyz()
  half4 get_zzyw()
  half4 get_zzzx()
  half4 get_zzzy()
  half4 get_zzzz()
  half4 get_zzzw()
  half4 get_zzwx()
  half4 get_zzwy()
  half4 get_zzwz()
  half4 get_zzww()
  half4 get_zwxx()
  half4 get_zwxy()
  void set_zwxy(half4 value)
  half4 get_zwxz()
  half4 get_zwxw()
  half4 get_zwyx()
  void set_zwyx(half4 value)
  half4 get_zwyy()
  half4 get_zwyz()
  half4 get_zwyw()
  half4 get_zwzx()
  half4 get_zwzy()
  half4 get_zwzz()
  half4 get_zwzw()
  half4 get_zwwx()
  half4 get_zwwy()
  half4 get_zwwz()
  half4 get_zwww()
  half4 get_wxxx()
  half4 get_wxxy()
  half4 get_wxxz()
  half4 get_wxxw()
  half4 get_wxyx()
  half4 get_wxyy()
  half4 get_wxyz()
  void set_wxyz(half4 value)
  half4 get_wxyw()
  half4 get_wxzx()
  half4 get_wxzy()
  void set_wxzy(half4 value)
  half4 get_wxzz()
  half4 get_wxzw()
  half4 get_wxwx()
  half4 get_wxwy()
  half4 get_wxwz()
  half4 get_wxww()
  half4 get_wyxx()
  half4 get_wyxy()
  half4 get_wyxz()
  void set_wyxz(half4 value)
  half4 get_wyxw()
  half4 get_wyyx()
  half4 get_wyyy()
  half4 get_wyyz()
  half4 get_wyyw()
  half4 get_wyzx()
  void set_wyzx(half4 value)
  half4 get_wyzy()
  half4 get_wyzz()
  half4 get_wyzw()
  half4 get_wywx()
  half4 get_wywy()
  half4 get_wywz()
  half4 get_wyww()
  half4 get_wzxx()
  half4 get_wzxy()
  void set_wzxy(half4 value)
  half4 get_wzxz()
  half4 get_wzxw()
  half4 get_wzyx()
  void set_wzyx(half4 value)
  half4 get_wzyy()
  half4 get_wzyz()
  half4 get_wzyw()
  half4 get_wzzx()
  half4 get_wzzy()
  half4 get_wzzz()
  half4 get_wzzw()
  half4 get_wzwx()
  half4 get_wzwy()
  half4 get_wzwz()
  half4 get_wzww()
  half4 get_wwxx()
  half4 get_wwxy()
  half4 get_wwxz()
  half4 get_wwxw()
  half4 get_wwyx()
  half4 get_wwyy()
  half4 get_wwyz()
  half4 get_wwyw()
  half4 get_wwzx()
  half4 get_wwzy()
  half4 get_wwzz()
  half4 get_wwzw()
  half4 get_wwwx()
  half4 get_wwwy()
  half4 get_wwwz()
  half4 get_wwww()
  half3 get_xxx()
  half3 get_xxy()
  half3 get_xxz()
  half3 get_xxw()
  half3 get_xyx()
  half3 get_xyy()
  half3 get_xyz()
  void set_xyz(half3 value)
  half3 get_xyw()
  void set_xyw(half3 value)
  half3 get_xzx()
  half3 get_xzy()
  void set_xzy(half3 value)
  half3 get_xzz()
  half3 get_xzw()
  void set_xzw(half3 value)
  half3 get_xwx()
  half3 get_xwy()
  void set_xwy(half3 value)
  half3 get_xwz()
  void set_xwz(half3 value)
  half3 get_xww()
  half3 get_yxx()
  half3 get_yxy()
  half3 get_yxz()
  void set_yxz(half3 value)
  half3 get_yxw()
  void set_yxw(half3 value)
  half3 get_yyx()
  half3 get_yyy()
  half3 get_yyz()
  half3 get_yyw()
  half3 get_yzx()
  void set_yzx(half3 value)
  half3 get_yzy()
  half3 get_yzz()
  half3 get_yzw()
  void set_yzw(half3 value)
  half3 get_ywx()
  void set_ywx(half3 value)
  half3 get_ywy()
  half3 get_ywz()
  void set_ywz(half3 value)
  half3 get_yww()
  half3 get_zxx()
  half3 get_zxy()
  void set_zxy(half3 value)
  half3 get_zxz()
  half3 get_zxw()
  void set_zxw(half3 value)
  half3 get_zyx()
  void set_zyx(half3 value)
  half3 get_zyy()
  half3 get_zyz()
  half3 get_zyw()
  void set_zyw(half3 value)
  half3 get_zzx()
  half3 get_zzy()
  half3 get_zzz()
  half3 get_zzw()
  half3 get_zwx()
  void set_zwx(half3 value)
  half3 get_zwy()
  void set_zwy(half3 value)
  half3 get_zwz()
  half3 get_zww()
  half3 get_wxx()
  half3 get_wxy()
  void set_wxy(half3 value)
  half3 get_wxz()
  void set_wxz(half3 value)
  half3 get_wxw()
  half3 get_wyx()
  void set_wyx(half3 value)
  half3 get_wyy()
  half3 get_wyz()
  void set_wyz(half3 value)
  half3 get_wyw()
  half3 get_wzx()
  void set_wzx(half3 value)
  half3 get_wzy()
  void set_wzy(half3 value)
  half3 get_wzz()
  half3 get_wzw()
  half3 get_wwx()
  half3 get_wwy()
  half3 get_wwz()
  half3 get_www()
  half2 get_xx()
  half2 get_xy()
  void set_xy(half2 value)
  half2 get_xz()
  void set_xz(half2 value)
  half2 get_xw()
  void set_xw(half2 value)
  half2 get_yx()
  void set_yx(half2 value)
  half2 get_yy()
  half2 get_yz()
  void set_yz(half2 value)
  half2 get_yw()
  void set_yw(half2 value)
  half2 get_zx()
  void set_zx(half2 value)
  half2 get_zy()
  void set_zy(half2 value)
  half2 get_zz()
  half2 get_zw()
  void set_zw(half2 value)
  half2 get_wx()
  void set_wx(half2 value)
  half2 get_wy()
  void set_wy(half2 value)
  half2 get_wz()
  void set_wz(half2 value)
  half2 get_ww()
  half get_Item(int index)
  void set_Item(int index, half value)
  bool Equals(half4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int2
Наследуется от: ValueType
Поля:
  int x
  int y
  int2 zero
Свойства:
  int4 xxxx
  int4 xxxy
  int4 xxyx
  int4 xxyy
  int4 xyxx
  int4 xyxy
  int4 xyyx
  int4 xyyy
  int4 yxxx
  int4 yxxy
  int4 yxyx
  int4 yxyy
  int4 yyxx
  int4 yyxy
  int4 yyyx
  int4 yyyy
  int3 xxx
  int3 xxy
  int3 xyx
  int3 xyy
  int3 yxx
  int3 yxy
  int3 yyx
  int3 yyy
  int2 xx
  int2 xy
  int2 yx
  int2 yy
  int Item
Методы:
  void .ctor(int x, int y)
  void .ctor(int2 xy)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool2 v)
  void .ctor(UInt32 v)
  void .ctor(uint2 v)
  void .ctor(float v)
  void .ctor(float2 v)
  void .ctor(double v)
  void .ctor(double2 v)
  int2 op_Implicit(int v)
  int2 op_Explicit(bool v)
  int2 op_Explicit(bool2 v)
  int2 op_Explicit(UInt32 v)
  int2 op_Explicit(uint2 v)
  int2 op_Explicit(float v)
  int2 op_Explicit(float2 v)
  int2 op_Explicit(double v)
  int2 op_Explicit(double2 v)
  int2 op_Multiply(int2 lhs, int2 rhs)
  int2 op_Multiply(int2 lhs, int rhs)
  int2 op_Multiply(int lhs, int2 rhs)
  int2 op_Addition(int2 lhs, int2 rhs)
  int2 op_Addition(int2 lhs, int rhs)
  int2 op_Addition(int lhs, int2 rhs)
  int2 op_Subtraction(int2 lhs, int2 rhs)
  int2 op_Subtraction(int2 lhs, int rhs)
  int2 op_Subtraction(int lhs, int2 rhs)
  int2 op_Division(int2 lhs, int2 rhs)
  int2 op_Division(int2 lhs, int rhs)
  int2 op_Division(int lhs, int2 rhs)
  int2 op_Modulus(int2 lhs, int2 rhs)
  int2 op_Modulus(int2 lhs, int rhs)
  int2 op_Modulus(int lhs, int2 rhs)
  int2 op_Increment(int2 val)
  int2 op_Decrement(int2 val)
  bool2 op_LessThan(int2 lhs, int2 rhs)
  bool2 op_LessThan(int2 lhs, int rhs)
  bool2 op_LessThan(int lhs, int2 rhs)
  bool2 op_LessThanOrEqual(int2 lhs, int2 rhs)
  bool2 op_LessThanOrEqual(int2 lhs, int rhs)
  bool2 op_LessThanOrEqual(int lhs, int2 rhs)
  bool2 op_GreaterThan(int2 lhs, int2 rhs)
  bool2 op_GreaterThan(int2 lhs, int rhs)
  bool2 op_GreaterThan(int lhs, int2 rhs)
  bool2 op_GreaterThanOrEqual(int2 lhs, int2 rhs)
  bool2 op_GreaterThanOrEqual(int2 lhs, int rhs)
  bool2 op_GreaterThanOrEqual(int lhs, int2 rhs)
  int2 op_UnaryNegation(int2 val)
  int2 op_UnaryPlus(int2 val)
  int2 op_LeftShift(int2 x, int n)
  int2 op_RightShift(int2 x, int n)
  bool2 op_Equality(int2 lhs, int2 rhs)
  bool2 op_Equality(int2 lhs, int rhs)
  bool2 op_Equality(int lhs, int2 rhs)
  bool2 op_Inequality(int2 lhs, int2 rhs)
  bool2 op_Inequality(int2 lhs, int rhs)
  bool2 op_Inequality(int lhs, int2 rhs)
  int2 op_OnesComplement(int2 val)
  int2 op_BitwiseAnd(int2 lhs, int2 rhs)
  int2 op_BitwiseAnd(int2 lhs, int rhs)
  int2 op_BitwiseAnd(int lhs, int2 rhs)
  int2 op_BitwiseOr(int2 lhs, int2 rhs)
  int2 op_BitwiseOr(int2 lhs, int rhs)
  int2 op_BitwiseOr(int lhs, int2 rhs)
  int2 op_ExclusiveOr(int2 lhs, int2 rhs)
  int2 op_ExclusiveOr(int2 lhs, int rhs)
  int2 op_ExclusiveOr(int lhs, int2 rhs)
  int4 get_xxxx()
  int4 get_xxxy()
  int4 get_xxyx()
  int4 get_xxyy()
  int4 get_xyxx()
  int4 get_xyxy()
  int4 get_xyyx()
  int4 get_xyyy()
  int4 get_yxxx()
  int4 get_yxxy()
  int4 get_yxyx()
  int4 get_yxyy()
  int4 get_yyxx()
  int4 get_yyxy()
  int4 get_yyyx()
  int4 get_yyyy()
  int3 get_xxx()
  int3 get_xxy()
  int3 get_xyx()
  int3 get_xyy()
  int3 get_yxx()
  int3 get_yxy()
  int3 get_yyx()
  int3 get_yyy()
  int2 get_xx()
  int2 get_xy()
  void set_xy(int2 value)
  int2 get_yx()
  void set_yx(int2 value)
  int2 get_yy()
  int get_Item(int index)
  void set_Item(int index, int value)
  bool Equals(int2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int2x2
Наследуется от: ValueType
Поля:
  int2 c0
  int2 c1
  int2x2 identity
  int2x2 zero
Свойства:
  int2& Item
Методы:
  void .ctor(int2 c0, int2 c1)
  void .ctor(int m00, int m01, int m10, int m11)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool2x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x2 v)
  void .ctor(float v)
  void .ctor(float2x2 v)
  void .ctor(double v)
  void .ctor(double2x2 v)
  int2x2 op_Implicit(int v)
  int2x2 op_Explicit(bool v)
  int2x2 op_Explicit(bool2x2 v)
  int2x2 op_Explicit(UInt32 v)
  int2x2 op_Explicit(uint2x2 v)
  int2x2 op_Explicit(float v)
  int2x2 op_Explicit(float2x2 v)
  int2x2 op_Explicit(double v)
  int2x2 op_Explicit(double2x2 v)
  int2x2 op_Multiply(int2x2 lhs, int2x2 rhs)
  int2x2 op_Multiply(int2x2 lhs, int rhs)
  int2x2 op_Multiply(int lhs, int2x2 rhs)
  int2x2 op_Addition(int2x2 lhs, int2x2 rhs)
  int2x2 op_Addition(int2x2 lhs, int rhs)
  int2x2 op_Addition(int lhs, int2x2 rhs)
  int2x2 op_Subtraction(int2x2 lhs, int2x2 rhs)
  int2x2 op_Subtraction(int2x2 lhs, int rhs)
  int2x2 op_Subtraction(int lhs, int2x2 rhs)
  int2x2 op_Division(int2x2 lhs, int2x2 rhs)
  int2x2 op_Division(int2x2 lhs, int rhs)
  int2x2 op_Division(int lhs, int2x2 rhs)
  int2x2 op_Modulus(int2x2 lhs, int2x2 rhs)
  int2x2 op_Modulus(int2x2 lhs, int rhs)
  int2x2 op_Modulus(int lhs, int2x2 rhs)
  int2x2 op_Increment(int2x2 val)
  int2x2 op_Decrement(int2x2 val)
  bool2x2 op_LessThan(int2x2 lhs, int2x2 rhs)
  bool2x2 op_LessThan(int2x2 lhs, int rhs)
  bool2x2 op_LessThan(int lhs, int2x2 rhs)
  bool2x2 op_LessThanOrEqual(int2x2 lhs, int2x2 rhs)
  bool2x2 op_LessThanOrEqual(int2x2 lhs, int rhs)
  bool2x2 op_LessThanOrEqual(int lhs, int2x2 rhs)
  bool2x2 op_GreaterThan(int2x2 lhs, int2x2 rhs)
  bool2x2 op_GreaterThan(int2x2 lhs, int rhs)
  bool2x2 op_GreaterThan(int lhs, int2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(int2x2 lhs, int2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(int2x2 lhs, int rhs)
  bool2x2 op_GreaterThanOrEqual(int lhs, int2x2 rhs)
  int2x2 op_UnaryNegation(int2x2 val)
  int2x2 op_UnaryPlus(int2x2 val)
  int2x2 op_LeftShift(int2x2 x, int n)
  int2x2 op_RightShift(int2x2 x, int n)
  bool2x2 op_Equality(int2x2 lhs, int2x2 rhs)
  bool2x2 op_Equality(int2x2 lhs, int rhs)
  bool2x2 op_Equality(int lhs, int2x2 rhs)
  bool2x2 op_Inequality(int2x2 lhs, int2x2 rhs)
  bool2x2 op_Inequality(int2x2 lhs, int rhs)
  bool2x2 op_Inequality(int lhs, int2x2 rhs)
  int2x2 op_OnesComplement(int2x2 val)
  int2x2 op_BitwiseAnd(int2x2 lhs, int2x2 rhs)
  int2x2 op_BitwiseAnd(int2x2 lhs, int rhs)
  int2x2 op_BitwiseAnd(int lhs, int2x2 rhs)
  int2x2 op_BitwiseOr(int2x2 lhs, int2x2 rhs)
  int2x2 op_BitwiseOr(int2x2 lhs, int rhs)
  int2x2 op_BitwiseOr(int lhs, int2x2 rhs)
  int2x2 op_ExclusiveOr(int2x2 lhs, int2x2 rhs)
  int2x2 op_ExclusiveOr(int2x2 lhs, int rhs)
  int2x2 op_ExclusiveOr(int lhs, int2x2 rhs)
  int2& get_Item(int index)
  bool Equals(int2x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.int2x3
Наследуется от: ValueType
Поля:
  int2 c0
  int2 c1
  int2 c2
  int2x3 zero
Свойства:
  int2& Item
Методы:
  void .ctor(int2 c0, int2 c1, int2 c2)
  void .ctor(int m00, int m01, int m02, int m10, int m11, int m12)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool2x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x3 v)
  void .ctor(float v)
  void .ctor(float2x3 v)
  void .ctor(double v)
  void .ctor(double2x3 v)
  int2x3 op_Implicit(int v)
  int2x3 op_Explicit(bool v)
  int2x3 op_Explicit(bool2x3 v)
  int2x3 op_Explicit(UInt32 v)
  int2x3 op_Explicit(uint2x3 v)
  int2x3 op_Explicit(float v)
  int2x3 op_Explicit(float2x3 v)
  int2x3 op_Explicit(double v)
  int2x3 op_Explicit(double2x3 v)
  int2x3 op_Multiply(int2x3 lhs, int2x3 rhs)
  int2x3 op_Multiply(int2x3 lhs, int rhs)
  int2x3 op_Multiply(int lhs, int2x3 rhs)
  int2x3 op_Addition(int2x3 lhs, int2x3 rhs)
  int2x3 op_Addition(int2x3 lhs, int rhs)
  int2x3 op_Addition(int lhs, int2x3 rhs)
  int2x3 op_Subtraction(int2x3 lhs, int2x3 rhs)
  int2x3 op_Subtraction(int2x3 lhs, int rhs)
  int2x3 op_Subtraction(int lhs, int2x3 rhs)
  int2x3 op_Division(int2x3 lhs, int2x3 rhs)
  int2x3 op_Division(int2x3 lhs, int rhs)
  int2x3 op_Division(int lhs, int2x3 rhs)
  int2x3 op_Modulus(int2x3 lhs, int2x3 rhs)
  int2x3 op_Modulus(int2x3 lhs, int rhs)
  int2x3 op_Modulus(int lhs, int2x3 rhs)
  int2x3 op_Increment(int2x3 val)
  int2x3 op_Decrement(int2x3 val)
  bool2x3 op_LessThan(int2x3 lhs, int2x3 rhs)
  bool2x3 op_LessThan(int2x3 lhs, int rhs)
  bool2x3 op_LessThan(int lhs, int2x3 rhs)
  bool2x3 op_LessThanOrEqual(int2x3 lhs, int2x3 rhs)
  bool2x3 op_LessThanOrEqual(int2x3 lhs, int rhs)
  bool2x3 op_LessThanOrEqual(int lhs, int2x3 rhs)
  bool2x3 op_GreaterThan(int2x3 lhs, int2x3 rhs)
  bool2x3 op_GreaterThan(int2x3 lhs, int rhs)
  bool2x3 op_GreaterThan(int lhs, int2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(int2x3 lhs, int2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(int2x3 lhs, int rhs)
  bool2x3 op_GreaterThanOrEqual(int lhs, int2x3 rhs)
  int2x3 op_UnaryNegation(int2x3 val)
  int2x3 op_UnaryPlus(int2x3 val)
  int2x3 op_LeftShift(int2x3 x, int n)
  int2x3 op_RightShift(int2x3 x, int n)
  bool2x3 op_Equality(int2x3 lhs, int2x3 rhs)
  bool2x3 op_Equality(int2x3 lhs, int rhs)
  bool2x3 op_Equality(int lhs, int2x3 rhs)
  bool2x3 op_Inequality(int2x3 lhs, int2x3 rhs)
  bool2x3 op_Inequality(int2x3 lhs, int rhs)
  bool2x3 op_Inequality(int lhs, int2x3 rhs)
  int2x3 op_OnesComplement(int2x3 val)
  int2x3 op_BitwiseAnd(int2x3 lhs, int2x3 rhs)
  int2x3 op_BitwiseAnd(int2x3 lhs, int rhs)
  int2x3 op_BitwiseAnd(int lhs, int2x3 rhs)
  int2x3 op_BitwiseOr(int2x3 lhs, int2x3 rhs)
  int2x3 op_BitwiseOr(int2x3 lhs, int rhs)
  int2x3 op_BitwiseOr(int lhs, int2x3 rhs)
  int2x3 op_ExclusiveOr(int2x3 lhs, int2x3 rhs)
  int2x3 op_ExclusiveOr(int2x3 lhs, int rhs)
  int2x3 op_ExclusiveOr(int lhs, int2x3 rhs)
  int2& get_Item(int index)
  bool Equals(int2x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int2x4
Наследуется от: ValueType
Поля:
  int2 c0
  int2 c1
  int2 c2
  int2 c3
  int2x4 zero
Свойства:
  int2& Item
Методы:
  void .ctor(int2 c0, int2 c1, int2 c2, int2 c3)
  void .ctor(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool2x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint2x4 v)
  void .ctor(float v)
  void .ctor(float2x4 v)
  void .ctor(double v)
  void .ctor(double2x4 v)
  int2x4 op_Implicit(int v)
  int2x4 op_Explicit(bool v)
  int2x4 op_Explicit(bool2x4 v)
  int2x4 op_Explicit(UInt32 v)
  int2x4 op_Explicit(uint2x4 v)
  int2x4 op_Explicit(float v)
  int2x4 op_Explicit(float2x4 v)
  int2x4 op_Explicit(double v)
  int2x4 op_Explicit(double2x4 v)
  int2x4 op_Multiply(int2x4 lhs, int2x4 rhs)
  int2x4 op_Multiply(int2x4 lhs, int rhs)
  int2x4 op_Multiply(int lhs, int2x4 rhs)
  int2x4 op_Addition(int2x4 lhs, int2x4 rhs)
  int2x4 op_Addition(int2x4 lhs, int rhs)
  int2x4 op_Addition(int lhs, int2x4 rhs)
  int2x4 op_Subtraction(int2x4 lhs, int2x4 rhs)
  int2x4 op_Subtraction(int2x4 lhs, int rhs)
  int2x4 op_Subtraction(int lhs, int2x4 rhs)
  int2x4 op_Division(int2x4 lhs, int2x4 rhs)
  int2x4 op_Division(int2x4 lhs, int rhs)
  int2x4 op_Division(int lhs, int2x4 rhs)
  int2x4 op_Modulus(int2x4 lhs, int2x4 rhs)
  int2x4 op_Modulus(int2x4 lhs, int rhs)
  int2x4 op_Modulus(int lhs, int2x4 rhs)
  int2x4 op_Increment(int2x4 val)
  int2x4 op_Decrement(int2x4 val)
  bool2x4 op_LessThan(int2x4 lhs, int2x4 rhs)
  bool2x4 op_LessThan(int2x4 lhs, int rhs)
  bool2x4 op_LessThan(int lhs, int2x4 rhs)
  bool2x4 op_LessThanOrEqual(int2x4 lhs, int2x4 rhs)
  bool2x4 op_LessThanOrEqual(int2x4 lhs, int rhs)
  bool2x4 op_LessThanOrEqual(int lhs, int2x4 rhs)
  bool2x4 op_GreaterThan(int2x4 lhs, int2x4 rhs)
  bool2x4 op_GreaterThan(int2x4 lhs, int rhs)
  bool2x4 op_GreaterThan(int lhs, int2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(int2x4 lhs, int2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(int2x4 lhs, int rhs)
  bool2x4 op_GreaterThanOrEqual(int lhs, int2x4 rhs)
  int2x4 op_UnaryNegation(int2x4 val)
  int2x4 op_UnaryPlus(int2x4 val)
  int2x4 op_LeftShift(int2x4 x, int n)
  int2x4 op_RightShift(int2x4 x, int n)
  bool2x4 op_Equality(int2x4 lhs, int2x4 rhs)
  bool2x4 op_Equality(int2x4 lhs, int rhs)
  bool2x4 op_Equality(int lhs, int2x4 rhs)
  bool2x4 op_Inequality(int2x4 lhs, int2x4 rhs)
  bool2x4 op_Inequality(int2x4 lhs, int rhs)
  bool2x4 op_Inequality(int lhs, int2x4 rhs)
  int2x4 op_OnesComplement(int2x4 val)
  int2x4 op_BitwiseAnd(int2x4 lhs, int2x4 rhs)
  int2x4 op_BitwiseAnd(int2x4 lhs, int rhs)
  int2x4 op_BitwiseAnd(int lhs, int2x4 rhs)
  int2x4 op_BitwiseOr(int2x4 lhs, int2x4 rhs)
  int2x4 op_BitwiseOr(int2x4 lhs, int rhs)
  int2x4 op_BitwiseOr(int lhs, int2x4 rhs)
  int2x4 op_ExclusiveOr(int2x4 lhs, int2x4 rhs)
  int2x4 op_ExclusiveOr(int2x4 lhs, int rhs)
  int2x4 op_ExclusiveOr(int lhs, int2x4 rhs)
  int2& get_Item(int index)
  bool Equals(int2x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int3
Наследуется от: ValueType
Поля:
  int x
  int y
  int z
  int3 zero
Свойства:
  int4 xxxx
  int4 xxxy
  int4 xxxz
  int4 xxyx
  int4 xxyy
  int4 xxyz
  int4 xxzx
  int4 xxzy
  int4 xxzz
  int4 xyxx
  int4 xyxy
  int4 xyxz
  int4 xyyx
  int4 xyyy
  int4 xyyz
  int4 xyzx
  int4 xyzy
  int4 xyzz
  int4 xzxx
  int4 xzxy
  int4 xzxz
  int4 xzyx
  int4 xzyy
  int4 xzyz
  int4 xzzx
  int4 xzzy
  int4 xzzz
  int4 yxxx
  int4 yxxy
  int4 yxxz
  int4 yxyx
  int4 yxyy
  int4 yxyz
  int4 yxzx
  int4 yxzy
  int4 yxzz
  int4 yyxx
  int4 yyxy
  int4 yyxz
  int4 yyyx
  int4 yyyy
  int4 yyyz
  int4 yyzx
  int4 yyzy
  int4 yyzz
  int4 yzxx
  int4 yzxy
  int4 yzxz
  int4 yzyx
  int4 yzyy
  int4 yzyz
  int4 yzzx
  int4 yzzy
  int4 yzzz
  int4 zxxx
  int4 zxxy
  int4 zxxz
  int4 zxyx
  int4 zxyy
  int4 zxyz
  int4 zxzx
  int4 zxzy
  int4 zxzz
  int4 zyxx
  int4 zyxy
  int4 zyxz
  int4 zyyx
  int4 zyyy
  int4 zyyz
  int4 zyzx
  int4 zyzy
  int4 zyzz
  int4 zzxx
  int4 zzxy
  int4 zzxz
  int4 zzyx
  int4 zzyy
  int4 zzyz
  int4 zzzx
  int4 zzzy
  int4 zzzz
  int3 xxx
  int3 xxy
  int3 xxz
  int3 xyx
  int3 xyy
  int3 xyz
  int3 xzx
  int3 xzy
  int3 xzz
  int3 yxx
  int3 yxy
  int3 yxz
  int3 yyx
  int3 yyy
  int3 yyz
  int3 yzx
  int3 yzy
  int3 yzz
  int3 zxx
  int3 zxy
  int3 zxz
  int3 zyx
  int3 zyy
  int3 zyz
  int3 zzx
  int3 zzy
  int3 zzz
  int2 xx
  int2 xy
  int2 xz
  int2 yx
  int2 yy
  int2 yz
  int2 zx
  int2 zy
  int2 zz
  int Item
Методы:
  void .ctor(int x, int y, int z)
  void .ctor(int x, int2 yz)
  void .ctor(int2 xy, int z)
  void .ctor(int3 xyz)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool3 v)
  void .ctor(UInt32 v)
  void .ctor(uint3 v)
  void .ctor(float v)
  void .ctor(float3 v)
  void .ctor(double v)
  void .ctor(double3 v)
  int3 op_Implicit(int v)
  int3 op_Explicit(bool v)
  int3 op_Explicit(bool3 v)
  int3 op_Explicit(UInt32 v)
  int3 op_Explicit(uint3 v)
  int3 op_Explicit(float v)
  int3 op_Explicit(float3 v)
  int3 op_Explicit(double v)
  int3 op_Explicit(double3 v)
  int3 op_Multiply(int3 lhs, int3 rhs)
  int3 op_Multiply(int3 lhs, int rhs)
  int3 op_Multiply(int lhs, int3 rhs)
  int3 op_Addition(int3 lhs, int3 rhs)
  int3 op_Addition(int3 lhs, int rhs)
  int3 op_Addition(int lhs, int3 rhs)
  int3 op_Subtraction(int3 lhs, int3 rhs)
  int3 op_Subtraction(int3 lhs, int rhs)
  int3 op_Subtraction(int lhs, int3 rhs)
  int3 op_Division(int3 lhs, int3 rhs)
  int3 op_Division(int3 lhs, int rhs)
  int3 op_Division(int lhs, int3 rhs)
  int3 op_Modulus(int3 lhs, int3 rhs)
  int3 op_Modulus(int3 lhs, int rhs)
  int3 op_Modulus(int lhs, int3 rhs)
  int3 op_Increment(int3 val)
  int3 op_Decrement(int3 val)
  bool3 op_LessThan(int3 lhs, int3 rhs)
  bool3 op_LessThan(int3 lhs, int rhs)
  bool3 op_LessThan(int lhs, int3 rhs)
  bool3 op_LessThanOrEqual(int3 lhs, int3 rhs)
  bool3 op_LessThanOrEqual(int3 lhs, int rhs)
  bool3 op_LessThanOrEqual(int lhs, int3 rhs)
  bool3 op_GreaterThan(int3 lhs, int3 rhs)
  bool3 op_GreaterThan(int3 lhs, int rhs)
  bool3 op_GreaterThan(int lhs, int3 rhs)
  bool3 op_GreaterThanOrEqual(int3 lhs, int3 rhs)
  bool3 op_GreaterThanOrEqual(int3 lhs, int rhs)
  bool3 op_GreaterThanOrEqual(int lhs, int3 rhs)
  int3 op_UnaryNegation(int3 val)
  int3 op_UnaryPlus(int3 val)
  int3 op_LeftShift(int3 x, int n)
  int3 op_RightShift(int3 x, int n)
  bool3 op_Equality(int3 lhs, int3 rhs)
  bool3 op_Equality(int3 lhs, int rhs)
  bool3 op_Equality(int lhs, int3 rhs)
  bool3 op_Inequality(int3 lhs, int3 rhs)
  bool3 op_Inequality(int3 lhs, int rhs)
  bool3 op_Inequality(int lhs, int3 rhs)
  int3 op_OnesComplement(int3 val)
  int3 op_BitwiseAnd(int3 lhs, int3 rhs)
  int3 op_BitwiseAnd(int3 lhs, int rhs)
  int3 op_BitwiseAnd(int lhs, int3 rhs)
  int3 op_BitwiseOr(int3 lhs, int3 rhs)
  int3 op_BitwiseOr(int3 lhs, int rhs)
  int3 op_BitwiseOr(int lhs, int3 rhs)
  int3 op_ExclusiveOr(int3 lhs, int3 rhs)
  int3 op_ExclusiveOr(int3 lhs, int rhs)
  int3 op_ExclusiveOr(int lhs, int3 rhs)
  int4 get_xxxx()
  int4 get_xxxy()
  int4 get_xxxz()
  int4 get_xxyx()
  int4 get_xxyy()
  int4 get_xxyz()
  int4 get_xxzx()
  int4 get_xxzy()
  int4 get_xxzz()
  int4 get_xyxx()
  int4 get_xyxy()
  int4 get_xyxz()
  int4 get_xyyx()
  int4 get_xyyy()
  int4 get_xyyz()
  int4 get_xyzx()
  int4 get_xyzy()
  int4 get_xyzz()
  int4 get_xzxx()
  int4 get_xzxy()
  int4 get_xzxz()
  int4 get_xzyx()
  int4 get_xzyy()
  int4 get_xzyz()
  int4 get_xzzx()
  int4 get_xzzy()
  int4 get_xzzz()
  int4 get_yxxx()
  int4 get_yxxy()
  int4 get_yxxz()
  int4 get_yxyx()
  int4 get_yxyy()
  int4 get_yxyz()
  int4 get_yxzx()
  int4 get_yxzy()
  int4 get_yxzz()
  int4 get_yyxx()
  int4 get_yyxy()
  int4 get_yyxz()
  int4 get_yyyx()
  int4 get_yyyy()
  int4 get_yyyz()
  int4 get_yyzx()
  int4 get_yyzy()
  int4 get_yyzz()
  int4 get_yzxx()
  int4 get_yzxy()
  int4 get_yzxz()
  int4 get_yzyx()
  int4 get_yzyy()
  int4 get_yzyz()
  int4 get_yzzx()
  int4 get_yzzy()
  int4 get_yzzz()
  int4 get_zxxx()
  int4 get_zxxy()
  int4 get_zxxz()
  int4 get_zxyx()
  int4 get_zxyy()
  int4 get_zxyz()
  int4 get_zxzx()
  int4 get_zxzy()
  int4 get_zxzz()
  int4 get_zyxx()
  int4 get_zyxy()
  int4 get_zyxz()
  int4 get_zyyx()
  int4 get_zyyy()
  int4 get_zyyz()
  int4 get_zyzx()
  int4 get_zyzy()
  int4 get_zyzz()
  int4 get_zzxx()
  int4 get_zzxy()
  int4 get_zzxz()
  int4 get_zzyx()
  int4 get_zzyy()
  int4 get_zzyz()
  int4 get_zzzx()
  int4 get_zzzy()
  int4 get_zzzz()
  int3 get_xxx()
  int3 get_xxy()
  int3 get_xxz()
  int3 get_xyx()
  int3 get_xyy()
  int3 get_xyz()
  void set_xyz(int3 value)
  int3 get_xzx()
  int3 get_xzy()
  void set_xzy(int3 value)
  int3 get_xzz()
  int3 get_yxx()
  int3 get_yxy()
  int3 get_yxz()
  void set_yxz(int3 value)
  int3 get_yyx()
  int3 get_yyy()
  int3 get_yyz()
  int3 get_yzx()
  void set_yzx(int3 value)
  int3 get_yzy()
  int3 get_yzz()
  int3 get_zxx()
  int3 get_zxy()
  void set_zxy(int3 value)
  int3 get_zxz()
  int3 get_zyx()
  void set_zyx(int3 value)
  int3 get_zyy()
  int3 get_zyz()
  int3 get_zzx()
  int3 get_zzy()
  int3 get_zzz()
  int2 get_xx()
  int2 get_xy()
  void set_xy(int2 value)
  int2 get_xz()
  void set_xz(int2 value)
  int2 get_yx()
  void set_yx(int2 value)
  int2 get_yy()
  int2 get_yz()
  void set_yz(int2 value)
  int2 get_zx()
  void set_zx(int2 value)
  int2 get_zy()
  void set_zy(int2 value)
  int2 get_zz()
  int get_Item(int index)
  void set_Item(int index, int value)
  bool Equals(int3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int3x2
Наследуется от: ValueType
Поля:
  int3 c0
  int3 c1
  int3x2 zero
Свойства:
  int3& Item
Методы:
  void .ctor(int3 c0, int3 c1)
  void .ctor(int m00, int m01, int m10, int m11, int m20, int m21)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool3x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x2 v)
  void .ctor(float v)
  void .ctor(float3x2 v)
  void .ctor(double v)
  void .ctor(double3x2 v)
  int3x2 op_Implicit(int v)
  int3x2 op_Explicit(bool v)
  int3x2 op_Explicit(bool3x2 v)
  int3x2 op_Explicit(UInt32 v)
  int3x2 op_Explicit(uint3x2 v)
  int3x2 op_Explicit(float v)
  int3x2 op_Explicit(float3x2 v)
  int3x2 op_Explicit(double v)
  int3x2 op_Explicit(double3x2 v)
  int3x2 op_Multiply(int3x2 lhs, int3x2 rhs)
  int3x2 op_Multiply(int3x2 lhs, int rhs)
  int3x2 op_Multiply(int lhs, int3x2 rhs)
  int3x2 op_Addition(int3x2 lhs, int3x2 rhs)
  int3x2 op_Addition(int3x2 lhs, int rhs)
  int3x2 op_Addition(int lhs, int3x2 rhs)
  int3x2 op_Subtraction(int3x2 lhs, int3x2 rhs)
  int3x2 op_Subtraction(int3x2 lhs, int rhs)
  int3x2 op_Subtraction(int lhs, int3x2 rhs)
  int3x2 op_Division(int3x2 lhs, int3x2 rhs)
  int3x2 op_Division(int3x2 lhs, int rhs)
  int3x2 op_Division(int lhs, int3x2 rhs)
  int3x2 op_Modulus(int3x2 lhs, int3x2 rhs)
  int3x2 op_Modulus(int3x2 lhs, int rhs)
  int3x2 op_Modulus(int lhs, int3x2 rhs)
  int3x2 op_Increment(int3x2 val)
  int3x2 op_Decrement(int3x2 val)
  bool3x2 op_LessThan(int3x2 lhs, int3x2 rhs)
  bool3x2 op_LessThan(int3x2 lhs, int rhs)
  bool3x2 op_LessThan(int lhs, int3x2 rhs)
  bool3x2 op_LessThanOrEqual(int3x2 lhs, int3x2 rhs)
  bool3x2 op_LessThanOrEqual(int3x2 lhs, int rhs)
  bool3x2 op_LessThanOrEqual(int lhs, int3x2 rhs)
  bool3x2 op_GreaterThan(int3x2 lhs, int3x2 rhs)
  bool3x2 op_GreaterThan(int3x2 lhs, int rhs)
  bool3x2 op_GreaterThan(int lhs, int3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(int3x2 lhs, int3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(int3x2 lhs, int rhs)
  bool3x2 op_GreaterThanOrEqual(int lhs, int3x2 rhs)
  int3x2 op_UnaryNegation(int3x2 val)
  int3x2 op_UnaryPlus(int3x2 val)
  int3x2 op_LeftShift(int3x2 x, int n)
  int3x2 op_RightShift(int3x2 x, int n)
  bool3x2 op_Equality(int3x2 lhs, int3x2 rhs)
  bool3x2 op_Equality(int3x2 lhs, int rhs)
  bool3x2 op_Equality(int lhs, int3x2 rhs)
  bool3x2 op_Inequality(int3x2 lhs, int3x2 rhs)
  bool3x2 op_Inequality(int3x2 lhs, int rhs)
  bool3x2 op_Inequality(int lhs, int3x2 rhs)
  int3x2 op_OnesComplement(int3x2 val)
  int3x2 op_BitwiseAnd(int3x2 lhs, int3x2 rhs)
  int3x2 op_BitwiseAnd(int3x2 lhs, int rhs)
  int3x2 op_BitwiseAnd(int lhs, int3x2 rhs)
  int3x2 op_BitwiseOr(int3x2 lhs, int3x2 rhs)
  int3x2 op_BitwiseOr(int3x2 lhs, int rhs)
  int3x2 op_BitwiseOr(int lhs, int3x2 rhs)
  int3x2 op_ExclusiveOr(int3x2 lhs, int3x2 rhs)
  int3x2 op_ExclusiveOr(int3x2 lhs, int rhs)
  int3x2 op_ExclusiveOr(int lhs, int3x2 rhs)
  int3& get_Item(int index)
  bool Equals(int3x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int3x3
Наследуется от: ValueType
Поля:
  int3 c0
  int3 c1
  int3 c2
  int3x3 identity
  int3x3 zero
Свойства:
  int3& Item
Методы:
  void .ctor(int3 c0, int3 c1, int3 c2)
  void .ctor(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool3x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x3 v)
  void .ctor(float v)
  void .ctor(float3x3 v)
  void .ctor(double v)
  void .ctor(double3x3 v)
  int3x3 op_Implicit(int v)
  int3x3 op_Explicit(bool v)
  int3x3 op_Explicit(bool3x3 v)
  int3x3 op_Explicit(UInt32 v)
  int3x3 op_Explicit(uint3x3 v)
  int3x3 op_Explicit(float v)
  int3x3 op_Explicit(float3x3 v)
  int3x3 op_Explicit(double v)
  int3x3 op_Explicit(double3x3 v)
  int3x3 op_Multiply(int3x3 lhs, int3x3 rhs)
  int3x3 op_Multiply(int3x3 lhs, int rhs)
  int3x3 op_Multiply(int lhs, int3x3 rhs)
  int3x3 op_Addition(int3x3 lhs, int3x3 rhs)
  int3x3 op_Addition(int3x3 lhs, int rhs)
  int3x3 op_Addition(int lhs, int3x3 rhs)
  int3x3 op_Subtraction(int3x3 lhs, int3x3 rhs)
  int3x3 op_Subtraction(int3x3 lhs, int rhs)
  int3x3 op_Subtraction(int lhs, int3x3 rhs)
  int3x3 op_Division(int3x3 lhs, int3x3 rhs)
  int3x3 op_Division(int3x3 lhs, int rhs)
  int3x3 op_Division(int lhs, int3x3 rhs)
  int3x3 op_Modulus(int3x3 lhs, int3x3 rhs)
  int3x3 op_Modulus(int3x3 lhs, int rhs)
  int3x3 op_Modulus(int lhs, int3x3 rhs)
  int3x3 op_Increment(int3x3 val)
  int3x3 op_Decrement(int3x3 val)
  bool3x3 op_LessThan(int3x3 lhs, int3x3 rhs)
  bool3x3 op_LessThan(int3x3 lhs, int rhs)
  bool3x3 op_LessThan(int lhs, int3x3 rhs)
  bool3x3 op_LessThanOrEqual(int3x3 lhs, int3x3 rhs)
  bool3x3 op_LessThanOrEqual(int3x3 lhs, int rhs)
  bool3x3 op_LessThanOrEqual(int lhs, int3x3 rhs)
  bool3x3 op_GreaterThan(int3x3 lhs, int3x3 rhs)
  bool3x3 op_GreaterThan(int3x3 lhs, int rhs)
  bool3x3 op_GreaterThan(int lhs, int3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(int3x3 lhs, int3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(int3x3 lhs, int rhs)
  bool3x3 op_GreaterThanOrEqual(int lhs, int3x3 rhs)
  int3x3 op_UnaryNegation(int3x3 val)
  int3x3 op_UnaryPlus(int3x3 val)
  int3x3 op_LeftShift(int3x3 x, int n)
  int3x3 op_RightShift(int3x3 x, int n)
  bool3x3 op_Equality(int3x3 lhs, int3x3 rhs)
  bool3x3 op_Equality(int3x3 lhs, int rhs)
  bool3x3 op_Equality(int lhs, int3x3 rhs)
  bool3x3 op_Inequality(int3x3 lhs, int3x3 rhs)
  bool3x3 op_Inequality(int3x3 lhs, int rhs)
  bool3x3 op_Inequality(int lhs, int3x3 rhs)
  int3x3 op_OnesComplement(int3x3 val)
  int3x3 op_BitwiseAnd(int3x3 lhs, int3x3 rhs)
  int3x3 op_BitwiseAnd(int3x3 lhs, int rhs)
  int3x3 op_BitwiseAnd(int lhs, int3x3 rhs)
  int3x3 op_BitwiseOr(int3x3 lhs, int3x3 rhs)
  int3x3 op_BitwiseOr(int3x3 lhs, int rhs)
  int3x3 op_BitwiseOr(int lhs, int3x3 rhs)
  int3x3 op_ExclusiveOr(int3x3 lhs, int3x3 rhs)
  int3x3 op_ExclusiveOr(int3x3 lhs, int rhs)
  int3x3 op_ExclusiveOr(int lhs, int3x3 rhs)
  int3& get_Item(int index)
  bool Equals(int3x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.int3x4
Наследуется от: ValueType
Поля:
  int3 c0
  int3 c1
  int3 c2
  int3 c3
  int3x4 zero
Свойства:
  int3& Item
Методы:
  void .ctor(int3 c0, int3 c1, int3 c2, int3 c3)
  void .ctor(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool3x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint3x4 v)
  void .ctor(float v)
  void .ctor(float3x4 v)
  void .ctor(double v)
  void .ctor(double3x4 v)
  int3x4 op_Implicit(int v)
  int3x4 op_Explicit(bool v)
  int3x4 op_Explicit(bool3x4 v)
  int3x4 op_Explicit(UInt32 v)
  int3x4 op_Explicit(uint3x4 v)
  int3x4 op_Explicit(float v)
  int3x4 op_Explicit(float3x4 v)
  int3x4 op_Explicit(double v)
  int3x4 op_Explicit(double3x4 v)
  int3x4 op_Multiply(int3x4 lhs, int3x4 rhs)
  int3x4 op_Multiply(int3x4 lhs, int rhs)
  int3x4 op_Multiply(int lhs, int3x4 rhs)
  int3x4 op_Addition(int3x4 lhs, int3x4 rhs)
  int3x4 op_Addition(int3x4 lhs, int rhs)
  int3x4 op_Addition(int lhs, int3x4 rhs)
  int3x4 op_Subtraction(int3x4 lhs, int3x4 rhs)
  int3x4 op_Subtraction(int3x4 lhs, int rhs)
  int3x4 op_Subtraction(int lhs, int3x4 rhs)
  int3x4 op_Division(int3x4 lhs, int3x4 rhs)
  int3x4 op_Division(int3x4 lhs, int rhs)
  int3x4 op_Division(int lhs, int3x4 rhs)
  int3x4 op_Modulus(int3x4 lhs, int3x4 rhs)
  int3x4 op_Modulus(int3x4 lhs, int rhs)
  int3x4 op_Modulus(int lhs, int3x4 rhs)
  int3x4 op_Increment(int3x4 val)
  int3x4 op_Decrement(int3x4 val)
  bool3x4 op_LessThan(int3x4 lhs, int3x4 rhs)
  bool3x4 op_LessThan(int3x4 lhs, int rhs)
  bool3x4 op_LessThan(int lhs, int3x4 rhs)
  bool3x4 op_LessThanOrEqual(int3x4 lhs, int3x4 rhs)
  bool3x4 op_LessThanOrEqual(int3x4 lhs, int rhs)
  bool3x4 op_LessThanOrEqual(int lhs, int3x4 rhs)
  bool3x4 op_GreaterThan(int3x4 lhs, int3x4 rhs)
  bool3x4 op_GreaterThan(int3x4 lhs, int rhs)
  bool3x4 op_GreaterThan(int lhs, int3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(int3x4 lhs, int3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(int3x4 lhs, int rhs)
  bool3x4 op_GreaterThanOrEqual(int lhs, int3x4 rhs)
  int3x4 op_UnaryNegation(int3x4 val)
  int3x4 op_UnaryPlus(int3x4 val)
  int3x4 op_LeftShift(int3x4 x, int n)
  int3x4 op_RightShift(int3x4 x, int n)
  bool3x4 op_Equality(int3x4 lhs, int3x4 rhs)
  bool3x4 op_Equality(int3x4 lhs, int rhs)
  bool3x4 op_Equality(int lhs, int3x4 rhs)
  bool3x4 op_Inequality(int3x4 lhs, int3x4 rhs)
  bool3x4 op_Inequality(int3x4 lhs, int rhs)
  bool3x4 op_Inequality(int lhs, int3x4 rhs)
  int3x4 op_OnesComplement(int3x4 val)
  int3x4 op_BitwiseAnd(int3x4 lhs, int3x4 rhs)
  int3x4 op_BitwiseAnd(int3x4 lhs, int rhs)
  int3x4 op_BitwiseAnd(int lhs, int3x4 rhs)
  int3x4 op_BitwiseOr(int3x4 lhs, int3x4 rhs)
  int3x4 op_BitwiseOr(int3x4 lhs, int rhs)
  int3x4 op_BitwiseOr(int lhs, int3x4 rhs)
  int3x4 op_ExclusiveOr(int3x4 lhs, int3x4 rhs)
  int3x4 op_ExclusiveOr(int3x4 lhs, int rhs)
  int3x4 op_ExclusiveOr(int lhs, int3x4 rhs)
  int3& get_Item(int index)
  bool Equals(int3x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int4
Наследуется от: ValueType
Поля:
  int x
  int y
  int z
  int w
  int4 zero
Свойства:
  int4 xxxx
  int4 xxxy
  int4 xxxz
  int4 xxxw
  int4 xxyx
  int4 xxyy
  int4 xxyz
  int4 xxyw
  int4 xxzx
  int4 xxzy
  int4 xxzz
  int4 xxzw
  int4 xxwx
  int4 xxwy
  int4 xxwz
  int4 xxww
  int4 xyxx
  int4 xyxy
  int4 xyxz
  int4 xyxw
  int4 xyyx
  int4 xyyy
  int4 xyyz
  int4 xyyw
  int4 xyzx
  int4 xyzy
  int4 xyzz
  int4 xyzw
  int4 xywx
  int4 xywy
  int4 xywz
  int4 xyww
  int4 xzxx
  int4 xzxy
  int4 xzxz
  int4 xzxw
  int4 xzyx
  int4 xzyy
  int4 xzyz
  int4 xzyw
  int4 xzzx
  int4 xzzy
  int4 xzzz
  int4 xzzw
  int4 xzwx
  int4 xzwy
  int4 xzwz
  int4 xzww
  int4 xwxx
  int4 xwxy
  int4 xwxz
  int4 xwxw
  int4 xwyx
  int4 xwyy
  int4 xwyz
  int4 xwyw
  int4 xwzx
  int4 xwzy
  int4 xwzz
  int4 xwzw
  int4 xwwx
  int4 xwwy
  int4 xwwz
  int4 xwww
  int4 yxxx
  int4 yxxy
  int4 yxxz
  int4 yxxw
  int4 yxyx
  int4 yxyy
  int4 yxyz
  int4 yxyw
  int4 yxzx
  int4 yxzy
  int4 yxzz
  int4 yxzw
  int4 yxwx
  int4 yxwy
  int4 yxwz
  int4 yxww
  int4 yyxx
  int4 yyxy
  int4 yyxz
  int4 yyxw
  int4 yyyx
  int4 yyyy
  int4 yyyz
  int4 yyyw
  int4 yyzx
  int4 yyzy
  int4 yyzz
  int4 yyzw
  int4 yywx
  int4 yywy
  int4 yywz
  int4 yyww
  int4 yzxx
  int4 yzxy
  int4 yzxz
  int4 yzxw
  int4 yzyx
  int4 yzyy
  int4 yzyz
  int4 yzyw
  int4 yzzx
  int4 yzzy
  int4 yzzz
  int4 yzzw
  int4 yzwx
  int4 yzwy
  int4 yzwz
  int4 yzww
  int4 ywxx
  int4 ywxy
  int4 ywxz
  int4 ywxw
  int4 ywyx
  int4 ywyy
  int4 ywyz
  int4 ywyw
  int4 ywzx
  int4 ywzy
  int4 ywzz
  int4 ywzw
  int4 ywwx
  int4 ywwy
  int4 ywwz
  int4 ywww
  int4 zxxx
  int4 zxxy
  int4 zxxz
  int4 zxxw
  int4 zxyx
  int4 zxyy
  int4 zxyz
  int4 zxyw
  int4 zxzx
  int4 zxzy
  int4 zxzz
  int4 zxzw
  int4 zxwx
  int4 zxwy
  int4 zxwz
  int4 zxww
  int4 zyxx
  int4 zyxy
  int4 zyxz
  int4 zyxw
  int4 zyyx
  int4 zyyy
  int4 zyyz
  int4 zyyw
  int4 zyzx
  int4 zyzy
  int4 zyzz
  int4 zyzw
  int4 zywx
  int4 zywy
  int4 zywz
  int4 zyww
  int4 zzxx
  int4 zzxy
  int4 zzxz
  int4 zzxw
  int4 zzyx
  int4 zzyy
  int4 zzyz
  int4 zzyw
  int4 zzzx
  int4 zzzy
  int4 zzzz
  int4 zzzw
  int4 zzwx
  int4 zzwy
  int4 zzwz
  int4 zzww
  int4 zwxx
  int4 zwxy
  int4 zwxz
  int4 zwxw
  int4 zwyx
  int4 zwyy
  int4 zwyz
  int4 zwyw
  int4 zwzx
  int4 zwzy
  int4 zwzz
  int4 zwzw
  int4 zwwx
  int4 zwwy
  int4 zwwz
  int4 zwww
  int4 wxxx
  int4 wxxy
  int4 wxxz
  int4 wxxw
  int4 wxyx
  int4 wxyy
  int4 wxyz
  int4 wxyw
  int4 wxzx
  int4 wxzy
  int4 wxzz
  int4 wxzw
  int4 wxwx
  int4 wxwy
  int4 wxwz
  int4 wxww
  int4 wyxx
  int4 wyxy
  int4 wyxz
  int4 wyxw
  int4 wyyx
  int4 wyyy
  int4 wyyz
  int4 wyyw
  int4 wyzx
  int4 wyzy
  int4 wyzz
  int4 wyzw
  int4 wywx
  int4 wywy
  int4 wywz
  int4 wyww
  int4 wzxx
  int4 wzxy
  int4 wzxz
  int4 wzxw
  int4 wzyx
  int4 wzyy
  int4 wzyz
  int4 wzyw
  int4 wzzx
  int4 wzzy
  int4 wzzz
  int4 wzzw
  int4 wzwx
  int4 wzwy
  int4 wzwz
  int4 wzww
  int4 wwxx
  int4 wwxy
  int4 wwxz
  int4 wwxw
  int4 wwyx
  int4 wwyy
  int4 wwyz
  int4 wwyw
  int4 wwzx
  int4 wwzy
  int4 wwzz
  int4 wwzw
  int4 wwwx
  int4 wwwy
  int4 wwwz
  int4 wwww
  int3 xxx
  int3 xxy
  int3 xxz
  int3 xxw
  int3 xyx
  int3 xyy
  int3 xyz
  int3 xyw
  int3 xzx
  int3 xzy
  int3 xzz
  int3 xzw
  int3 xwx
  int3 xwy
  int3 xwz
  int3 xww
  int3 yxx
  int3 yxy
  int3 yxz
  int3 yxw
  int3 yyx
  int3 yyy
  int3 yyz
  int3 yyw
  int3 yzx
  int3 yzy
  int3 yzz
  int3 yzw
  int3 ywx
  int3 ywy
  int3 ywz
  int3 yww
  int3 zxx
  int3 zxy
  int3 zxz
  int3 zxw
  int3 zyx
  int3 zyy
  int3 zyz
  int3 zyw
  int3 zzx
  int3 zzy
  int3 zzz
  int3 zzw
  int3 zwx
  int3 zwy
  int3 zwz
  int3 zww
  int3 wxx
  int3 wxy
  int3 wxz
  int3 wxw
  int3 wyx
  int3 wyy
  int3 wyz
  int3 wyw
  int3 wzx
  int3 wzy
  int3 wzz
  int3 wzw
  int3 wwx
  int3 wwy
  int3 wwz
  int3 www
  int2 xx
  int2 xy
  int2 xz
  int2 xw
  int2 yx
  int2 yy
  int2 yz
  int2 yw
  int2 zx
  int2 zy
  int2 zz
  int2 zw
  int2 wx
  int2 wy
  int2 wz
  int2 ww
  int Item
Методы:
  void .ctor(int x, int y, int z, int w)
  void .ctor(int x, int y, int2 zw)
  void .ctor(int x, int2 yz, int w)
  void .ctor(int x, int3 yzw)
  void .ctor(int2 xy, int z, int w)
  void .ctor(int2 xy, int2 zw)
  void .ctor(int3 xyz, int w)
  void .ctor(int4 xyzw)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool4 v)
  void .ctor(UInt32 v)
  void .ctor(uint4 v)
  void .ctor(float v)
  void .ctor(float4 v)
  void .ctor(double v)
  void .ctor(double4 v)
  int4 op_Implicit(int v)
  int4 op_Explicit(bool v)
  int4 op_Explicit(bool4 v)
  int4 op_Explicit(UInt32 v)
  int4 op_Explicit(uint4 v)
  int4 op_Explicit(float v)
  int4 op_Explicit(float4 v)
  int4 op_Explicit(double v)
  int4 op_Explicit(double4 v)
  int4 op_Multiply(int4 lhs, int4 rhs)
  int4 op_Multiply(int4 lhs, int rhs)
  int4 op_Multiply(int lhs, int4 rhs)
  int4 op_Addition(int4 lhs, int4 rhs)
  int4 op_Addition(int4 lhs, int rhs)
  int4 op_Addition(int lhs, int4 rhs)
  int4 op_Subtraction(int4 lhs, int4 rhs)
  int4 op_Subtraction(int4 lhs, int rhs)
  int4 op_Subtraction(int lhs, int4 rhs)
  int4 op_Division(int4 lhs, int4 rhs)
  int4 op_Division(int4 lhs, int rhs)
  int4 op_Division(int lhs, int4 rhs)
  int4 op_Modulus(int4 lhs, int4 rhs)
  int4 op_Modulus(int4 lhs, int rhs)
  int4 op_Modulus(int lhs, int4 rhs)
  int4 op_Increment(int4 val)
  int4 op_Decrement(int4 val)
  bool4 op_LessThan(int4 lhs, int4 rhs)
  bool4 op_LessThan(int4 lhs, int rhs)
  bool4 op_LessThan(int lhs, int4 rhs)
  bool4 op_LessThanOrEqual(int4 lhs, int4 rhs)
  bool4 op_LessThanOrEqual(int4 lhs, int rhs)
  bool4 op_LessThanOrEqual(int lhs, int4 rhs)
  bool4 op_GreaterThan(int4 lhs, int4 rhs)
  bool4 op_GreaterThan(int4 lhs, int rhs)
  bool4 op_GreaterThan(int lhs, int4 rhs)
  bool4 op_GreaterThanOrEqual(int4 lhs, int4 rhs)
  bool4 op_GreaterThanOrEqual(int4 lhs, int rhs)
  bool4 op_GreaterThanOrEqual(int lhs, int4 rhs)
  int4 op_UnaryNegation(int4 val)
  int4 op_UnaryPlus(int4 val)
  int4 op_LeftShift(int4 x, int n)
  int4 op_RightShift(int4 x, int n)
  bool4 op_Equality(int4 lhs, int4 rhs)
  bool4 op_Equality(int4 lhs, int rhs)
  bool4 op_Equality(int lhs, int4 rhs)
  bool4 op_Inequality(int4 lhs, int4 rhs)
  bool4 op_Inequality(int4 lhs, int rhs)
  bool4 op_Inequality(int lhs, int4 rhs)
  int4 op_OnesComplement(int4 val)
  int4 op_BitwiseAnd(int4 lhs, int4 rhs)
  int4 op_BitwiseAnd(int4 lhs, int rhs)
  int4 op_BitwiseAnd(int lhs, int4 rhs)
  int4 op_BitwiseOr(int4 lhs, int4 rhs)
  int4 op_BitwiseOr(int4 lhs, int rhs)
  int4 op_BitwiseOr(int lhs, int4 rhs)
  int4 op_ExclusiveOr(int4 lhs, int4 rhs)
  int4 op_ExclusiveOr(int4 lhs, int rhs)
  int4 op_ExclusiveOr(int lhs, int4 rhs)
  int4 get_xxxx()
  int4 get_xxxy()
  int4 get_xxxz()
  int4 get_xxxw()
  int4 get_xxyx()
  int4 get_xxyy()
  int4 get_xxyz()
  int4 get_xxyw()
  int4 get_xxzx()
  int4 get_xxzy()
  int4 get_xxzz()
  int4 get_xxzw()
  int4 get_xxwx()
  int4 get_xxwy()
  int4 get_xxwz()
  int4 get_xxww()
  int4 get_xyxx()
  int4 get_xyxy()
  int4 get_xyxz()
  int4 get_xyxw()
  int4 get_xyyx()
  int4 get_xyyy()
  int4 get_xyyz()
  int4 get_xyyw()
  int4 get_xyzx()
  int4 get_xyzy()
  int4 get_xyzz()
  int4 get_xyzw()
  void set_xyzw(int4 value)
  int4 get_xywx()
  int4 get_xywy()
  int4 get_xywz()
  void set_xywz(int4 value)
  int4 get_xyww()
  int4 get_xzxx()
  int4 get_xzxy()
  int4 get_xzxz()
  int4 get_xzxw()
  int4 get_xzyx()
  int4 get_xzyy()
  int4 get_xzyz()
  int4 get_xzyw()
  void set_xzyw(int4 value)
  int4 get_xzzx()
  int4 get_xzzy()
  int4 get_xzzz()
  int4 get_xzzw()
  int4 get_xzwx()
  int4 get_xzwy()
  void set_xzwy(int4 value)
  int4 get_xzwz()
  int4 get_xzww()
  int4 get_xwxx()
  int4 get_xwxy()
  int4 get_xwxz()
  int4 get_xwxw()
  int4 get_xwyx()
  int4 get_xwyy()
  int4 get_xwyz()
  void set_xwyz(int4 value)
  int4 get_xwyw()
  int4 get_xwzx()
  int4 get_xwzy()
  void set_xwzy(int4 value)
  int4 get_xwzz()
  int4 get_xwzw()
  int4 get_xwwx()
  int4 get_xwwy()
  int4 get_xwwz()
  int4 get_xwww()
  int4 get_yxxx()
  int4 get_yxxy()
  int4 get_yxxz()
  int4 get_yxxw()
  int4 get_yxyx()
  int4 get_yxyy()
  int4 get_yxyz()
  int4 get_yxyw()
  int4 get_yxzx()
  int4 get_yxzy()
  int4 get_yxzz()
  int4 get_yxzw()
  void set_yxzw(int4 value)
  int4 get_yxwx()
  int4 get_yxwy()
  int4 get_yxwz()
  void set_yxwz(int4 value)
  int4 get_yxww()
  int4 get_yyxx()
  int4 get_yyxy()
  int4 get_yyxz()
  int4 get_yyxw()
  int4 get_yyyx()
  int4 get_yyyy()
  int4 get_yyyz()
  int4 get_yyyw()
  int4 get_yyzx()
  int4 get_yyzy()
  int4 get_yyzz()
  int4 get_yyzw()
  int4 get_yywx()
  int4 get_yywy()
  int4 get_yywz()
  int4 get_yyww()
  int4 get_yzxx()
  int4 get_yzxy()
  int4 get_yzxz()
  int4 get_yzxw()
  void set_yzxw(int4 value)
  int4 get_yzyx()
  int4 get_yzyy()
  int4 get_yzyz()
  int4 get_yzyw()
  int4 get_yzzx()
  int4 get_yzzy()
  int4 get_yzzz()
  int4 get_yzzw()
  int4 get_yzwx()
  void set_yzwx(int4 value)
  int4 get_yzwy()
  int4 get_yzwz()
  int4 get_yzww()
  int4 get_ywxx()
  int4 get_ywxy()
  int4 get_ywxz()
  void set_ywxz(int4 value)
  int4 get_ywxw()
  int4 get_ywyx()
  int4 get_ywyy()
  int4 get_ywyz()
  int4 get_ywyw()
  int4 get_ywzx()
  void set_ywzx(int4 value)
  int4 get_ywzy()
  int4 get_ywzz()
  int4 get_ywzw()
  int4 get_ywwx()
  int4 get_ywwy()
  int4 get_ywwz()
  int4 get_ywww()
  int4 get_zxxx()
  int4 get_zxxy()
  int4 get_zxxz()
  int4 get_zxxw()
  int4 get_zxyx()
  int4 get_zxyy()
  int4 get_zxyz()
  int4 get_zxyw()
  void set_zxyw(int4 value)
  int4 get_zxzx()
  int4 get_zxzy()
  int4 get_zxzz()
  int4 get_zxzw()
  int4 get_zxwx()
  int4 get_zxwy()
  void set_zxwy(int4 value)
  int4 get_zxwz()
  int4 get_zxww()
  int4 get_zyxx()
  int4 get_zyxy()
  int4 get_zyxz()
  int4 get_zyxw()
  void set_zyxw(int4 value)
  int4 get_zyyx()
  int4 get_zyyy()
  int4 get_zyyz()
  int4 get_zyyw()
  int4 get_zyzx()
  int4 get_zyzy()
  int4 get_zyzz()
  int4 get_zyzw()
  int4 get_zywx()
  void set_zywx(int4 value)
  int4 get_zywy()
  int4 get_zywz()
  int4 get_zyww()
  int4 get_zzxx()
  int4 get_zzxy()
  int4 get_zzxz()
  int4 get_zzxw()
  int4 get_zzyx()
  int4 get_zzyy()
  int4 get_zzyz()
  int4 get_zzyw()
  int4 get_zzzx()
  int4 get_zzzy()
  int4 get_zzzz()
  int4 get_zzzw()
  int4 get_zzwx()
  int4 get_zzwy()
  int4 get_zzwz()
  int4 get_zzww()
  int4 get_zwxx()
  int4 get_zwxy()
  void set_zwxy(int4 value)
  int4 get_zwxz()
  int4 get_zwxw()
  int4 get_zwyx()
  void set_zwyx(int4 value)
  int4 get_zwyy()
  int4 get_zwyz()
  int4 get_zwyw()
  int4 get_zwzx()
  int4 get_zwzy()
  int4 get_zwzz()
  int4 get_zwzw()
  int4 get_zwwx()
  int4 get_zwwy()
  int4 get_zwwz()
  int4 get_zwww()
  int4 get_wxxx()
  int4 get_wxxy()
  int4 get_wxxz()
  int4 get_wxxw()
  int4 get_wxyx()
  int4 get_wxyy()
  int4 get_wxyz()
  void set_wxyz(int4 value)
  int4 get_wxyw()
  int4 get_wxzx()
  int4 get_wxzy()
  void set_wxzy(int4 value)
  int4 get_wxzz()
  int4 get_wxzw()
  int4 get_wxwx()
  int4 get_wxwy()
  int4 get_wxwz()
  int4 get_wxww()
  int4 get_wyxx()
  int4 get_wyxy()
  int4 get_wyxz()
  void set_wyxz(int4 value)
  int4 get_wyxw()
  int4 get_wyyx()
  int4 get_wyyy()
  int4 get_wyyz()
  int4 get_wyyw()
  int4 get_wyzx()
  void set_wyzx(int4 value)
  int4 get_wyzy()
  int4 get_wyzz()
  int4 get_wyzw()
  int4 get_wywx()
  int4 get_wywy()
  int4 get_wywz()
  int4 get_wyww()
  int4 get_wzxx()
  int4 get_wzxy()
  void set_wzxy(int4 value)
  int4 get_wzxz()
  int4 get_wzxw()
  int4 get_wzyx()
  void set_wzyx(int4 value)
  int4 get_wzyy()
  int4 get_wzyz()
  int4 get_wzyw()
  int4 get_wzzx()
  int4 get_wzzy()
  int4 get_wzzz()
  int4 get_wzzw()
  int4 get_wzwx()
  int4 get_wzwy()
  int4 get_wzwz()
  int4 get_wzww()
  int4 get_wwxx()
  int4 get_wwxy()
  int4 get_wwxz()
  int4 get_wwxw()
  int4 get_wwyx()
  int4 get_wwyy()
  int4 get_wwyz()
  int4 get_wwyw()
  int4 get_wwzx()
  int4 get_wwzy()
  int4 get_wwzz()
  int4 get_wwzw()
  int4 get_wwwx()
  int4 get_wwwy()
  int4 get_wwwz()
  int4 get_wwww()
  int3 get_xxx()
  int3 get_xxy()
  int3 get_xxz()
  int3 get_xxw()
  int3 get_xyx()
  int3 get_xyy()
  int3 get_xyz()
  void set_xyz(int3 value)
  int3 get_xyw()
  void set_xyw(int3 value)
  int3 get_xzx()
  int3 get_xzy()
  void set_xzy(int3 value)
  int3 get_xzz()
  int3 get_xzw()
  void set_xzw(int3 value)
  int3 get_xwx()
  int3 get_xwy()
  void set_xwy(int3 value)
  int3 get_xwz()
  void set_xwz(int3 value)
  int3 get_xww()
  int3 get_yxx()
  int3 get_yxy()
  int3 get_yxz()
  void set_yxz(int3 value)
  int3 get_yxw()
  void set_yxw(int3 value)
  int3 get_yyx()
  int3 get_yyy()
  int3 get_yyz()
  int3 get_yyw()
  int3 get_yzx()
  void set_yzx(int3 value)
  int3 get_yzy()
  int3 get_yzz()
  int3 get_yzw()
  void set_yzw(int3 value)
  int3 get_ywx()
  void set_ywx(int3 value)
  int3 get_ywy()
  int3 get_ywz()
  void set_ywz(int3 value)
  int3 get_yww()
  int3 get_zxx()
  int3 get_zxy()
  void set_zxy(int3 value)
  int3 get_zxz()
  int3 get_zxw()
  void set_zxw(int3 value)
  int3 get_zyx()
  void set_zyx(int3 value)
  int3 get_zyy()
  int3 get_zyz()
  int3 get_zyw()
  void set_zyw(int3 value)
  int3 get_zzx()
  int3 get_zzy()
  int3 get_zzz()
  int3 get_zzw()
  int3 get_zwx()
  void set_zwx(int3 value)
  int3 get_zwy()
  void set_zwy(int3 value)
  int3 get_zwz()
  int3 get_zww()
  int3 get_wxx()
  int3 get_wxy()
  void set_wxy(int3 value)
  int3 get_wxz()
  void set_wxz(int3 value)
  int3 get_wxw()
  int3 get_wyx()
  void set_wyx(int3 value)
  int3 get_wyy()
  int3 get_wyz()
  void set_wyz(int3 value)
  int3 get_wyw()
  int3 get_wzx()
  void set_wzx(int3 value)
  int3 get_wzy()
  void set_wzy(int3 value)
  int3 get_wzz()
  int3 get_wzw()
  int3 get_wwx()
  int3 get_wwy()
  int3 get_wwz()
  int3 get_www()
  int2 get_xx()
  int2 get_xy()
  void set_xy(int2 value)
  int2 get_xz()
  void set_xz(int2 value)
  int2 get_xw()
  void set_xw(int2 value)
  int2 get_yx()
  void set_yx(int2 value)
  int2 get_yy()
  int2 get_yz()
  void set_yz(int2 value)
  int2 get_yw()
  void set_yw(int2 value)
  int2 get_zx()
  void set_zx(int2 value)
  int2 get_zy()
  void set_zy(int2 value)
  int2 get_zz()
  int2 get_zw()
  void set_zw(int2 value)
  int2 get_wx()
  void set_wx(int2 value)
  int2 get_wy()
  void set_wy(int2 value)
  int2 get_wz()
  void set_wz(int2 value)
  int2 get_ww()
  int get_Item(int index)
  void set_Item(int index, int value)
  bool Equals(int4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int4x2
Наследуется от: ValueType
Поля:
  int4 c0
  int4 c1
  int4x2 zero
Свойства:
  int4& Item
Методы:
  void .ctor(int4 c0, int4 c1)
  void .ctor(int m00, int m01, int m10, int m11, int m20, int m21, int m30, int m31)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool4x2 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x2 v)
  void .ctor(float v)
  void .ctor(float4x2 v)
  void .ctor(double v)
  void .ctor(double4x2 v)
  int4x2 op_Implicit(int v)
  int4x2 op_Explicit(bool v)
  int4x2 op_Explicit(bool4x2 v)
  int4x2 op_Explicit(UInt32 v)
  int4x2 op_Explicit(uint4x2 v)
  int4x2 op_Explicit(float v)
  int4x2 op_Explicit(float4x2 v)
  int4x2 op_Explicit(double v)
  int4x2 op_Explicit(double4x2 v)
  int4x2 op_Multiply(int4x2 lhs, int4x2 rhs)
  int4x2 op_Multiply(int4x2 lhs, int rhs)
  int4x2 op_Multiply(int lhs, int4x2 rhs)
  int4x2 op_Addition(int4x2 lhs, int4x2 rhs)
  int4x2 op_Addition(int4x2 lhs, int rhs)
  int4x2 op_Addition(int lhs, int4x2 rhs)
  int4x2 op_Subtraction(int4x2 lhs, int4x2 rhs)
  int4x2 op_Subtraction(int4x2 lhs, int rhs)
  int4x2 op_Subtraction(int lhs, int4x2 rhs)
  int4x2 op_Division(int4x2 lhs, int4x2 rhs)
  int4x2 op_Division(int4x2 lhs, int rhs)
  int4x2 op_Division(int lhs, int4x2 rhs)
  int4x2 op_Modulus(int4x2 lhs, int4x2 rhs)
  int4x2 op_Modulus(int4x2 lhs, int rhs)
  int4x2 op_Modulus(int lhs, int4x2 rhs)
  int4x2 op_Increment(int4x2 val)
  int4x2 op_Decrement(int4x2 val)
  bool4x2 op_LessThan(int4x2 lhs, int4x2 rhs)
  bool4x2 op_LessThan(int4x2 lhs, int rhs)
  bool4x2 op_LessThan(int lhs, int4x2 rhs)
  bool4x2 op_LessThanOrEqual(int4x2 lhs, int4x2 rhs)
  bool4x2 op_LessThanOrEqual(int4x2 lhs, int rhs)
  bool4x2 op_LessThanOrEqual(int lhs, int4x2 rhs)
  bool4x2 op_GreaterThan(int4x2 lhs, int4x2 rhs)
  bool4x2 op_GreaterThan(int4x2 lhs, int rhs)
  bool4x2 op_GreaterThan(int lhs, int4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(int4x2 lhs, int4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(int4x2 lhs, int rhs)
  bool4x2 op_GreaterThanOrEqual(int lhs, int4x2 rhs)
  int4x2 op_UnaryNegation(int4x2 val)
  int4x2 op_UnaryPlus(int4x2 val)
  int4x2 op_LeftShift(int4x2 x, int n)
  int4x2 op_RightShift(int4x2 x, int n)
  bool4x2 op_Equality(int4x2 lhs, int4x2 rhs)
  bool4x2 op_Equality(int4x2 lhs, int rhs)
  bool4x2 op_Equality(int lhs, int4x2 rhs)
  bool4x2 op_Inequality(int4x2 lhs, int4x2 rhs)
  bool4x2 op_Inequality(int4x2 lhs, int rhs)
  bool4x2 op_Inequality(int lhs, int4x2 rhs)
  int4x2 op_OnesComplement(int4x2 val)
  int4x2 op_BitwiseAnd(int4x2 lhs, int4x2 rhs)
  int4x2 op_BitwiseAnd(int4x2 lhs, int rhs)
  int4x2 op_BitwiseAnd(int lhs, int4x2 rhs)
  int4x2 op_BitwiseOr(int4x2 lhs, int4x2 rhs)
  int4x2 op_BitwiseOr(int4x2 lhs, int rhs)
  int4x2 op_BitwiseOr(int lhs, int4x2 rhs)
  int4x2 op_ExclusiveOr(int4x2 lhs, int4x2 rhs)
  int4x2 op_ExclusiveOr(int4x2 lhs, int rhs)
  int4x2 op_ExclusiveOr(int lhs, int4x2 rhs)
  int4& get_Item(int index)
  bool Equals(int4x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int4x3
Наследуется от: ValueType
Поля:
  int4 c0
  int4 c1
  int4 c2
  int4x3 zero
Свойства:
  int4& Item
Методы:
  void .ctor(int4 c0, int4 c1, int4 c2)
  void .ctor(int m00, int m01, int m02, int m10, int m11, int m12, int m20, int m21, int m22, int m30, int m31, int m32)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool4x3 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x3 v)
  void .ctor(float v)
  void .ctor(float4x3 v)
  void .ctor(double v)
  void .ctor(double4x3 v)
  int4x3 op_Implicit(int v)
  int4x3 op_Explicit(bool v)
  int4x3 op_Explicit(bool4x3 v)
  int4x3 op_Explicit(UInt32 v)
  int4x3 op_Explicit(uint4x3 v)
  int4x3 op_Explicit(float v)
  int4x3 op_Explicit(float4x3 v)
  int4x3 op_Explicit(double v)
  int4x3 op_Explicit(double4x3 v)
  int4x3 op_Multiply(int4x3 lhs, int4x3 rhs)
  int4x3 op_Multiply(int4x3 lhs, int rhs)
  int4x3 op_Multiply(int lhs, int4x3 rhs)
  int4x3 op_Addition(int4x3 lhs, int4x3 rhs)
  int4x3 op_Addition(int4x3 lhs, int rhs)
  int4x3 op_Addition(int lhs, int4x3 rhs)
  int4x3 op_Subtraction(int4x3 lhs, int4x3 rhs)
  int4x3 op_Subtraction(int4x3 lhs, int rhs)
  int4x3 op_Subtraction(int lhs, int4x3 rhs)
  int4x3 op_Division(int4x3 lhs, int4x3 rhs)
  int4x3 op_Division(int4x3 lhs, int rhs)
  int4x3 op_Division(int lhs, int4x3 rhs)
  int4x3 op_Modulus(int4x3 lhs, int4x3 rhs)
  int4x3 op_Modulus(int4x3 lhs, int rhs)
  int4x3 op_Modulus(int lhs, int4x3 rhs)
  int4x3 op_Increment(int4x3 val)
  int4x3 op_Decrement(int4x3 val)
  bool4x3 op_LessThan(int4x3 lhs, int4x3 rhs)
  bool4x3 op_LessThan(int4x3 lhs, int rhs)
  bool4x3 op_LessThan(int lhs, int4x3 rhs)
  bool4x3 op_LessThanOrEqual(int4x3 lhs, int4x3 rhs)
  bool4x3 op_LessThanOrEqual(int4x3 lhs, int rhs)
  bool4x3 op_LessThanOrEqual(int lhs, int4x3 rhs)
  bool4x3 op_GreaterThan(int4x3 lhs, int4x3 rhs)
  bool4x3 op_GreaterThan(int4x3 lhs, int rhs)
  bool4x3 op_GreaterThan(int lhs, int4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(int4x3 lhs, int4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(int4x3 lhs, int rhs)
  bool4x3 op_GreaterThanOrEqual(int lhs, int4x3 rhs)
  int4x3 op_UnaryNegation(int4x3 val)
  int4x3 op_UnaryPlus(int4x3 val)
  int4x3 op_LeftShift(int4x3 x, int n)
  int4x3 op_RightShift(int4x3 x, int n)
  bool4x3 op_Equality(int4x3 lhs, int4x3 rhs)
  bool4x3 op_Equality(int4x3 lhs, int rhs)
  bool4x3 op_Equality(int lhs, int4x3 rhs)
  bool4x3 op_Inequality(int4x3 lhs, int4x3 rhs)
  bool4x3 op_Inequality(int4x3 lhs, int rhs)
  bool4x3 op_Inequality(int lhs, int4x3 rhs)
  int4x3 op_OnesComplement(int4x3 val)
  int4x3 op_BitwiseAnd(int4x3 lhs, int4x3 rhs)
  int4x3 op_BitwiseAnd(int4x3 lhs, int rhs)
  int4x3 op_BitwiseAnd(int lhs, int4x3 rhs)
  int4x3 op_BitwiseOr(int4x3 lhs, int4x3 rhs)
  int4x3 op_BitwiseOr(int4x3 lhs, int rhs)
  int4x3 op_BitwiseOr(int lhs, int4x3 rhs)
  int4x3 op_ExclusiveOr(int4x3 lhs, int4x3 rhs)
  int4x3 op_ExclusiveOr(int4x3 lhs, int rhs)
  int4x3 op_ExclusiveOr(int lhs, int4x3 rhs)
  int4& get_Item(int index)
  bool Equals(int4x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.int4x4
Наследуется от: ValueType
Поля:
  int4 c0
  int4 c1
  int4 c2
  int4 c3
  int4x4 identity
  int4x4 zero
Свойства:
  int4& Item
Методы:
  void .ctor(int4 c0, int4 c1, int4 c2, int4 c3)
  void .ctor(int m00, int m01, int m02, int m03, int m10, int m11, int m12, int m13, int m20, int m21, int m22, int m23, int m30, int m31, int m32, int m33)
  void .ctor(int v)
  void .ctor(bool v)
  void .ctor(bool4x4 v)
  void .ctor(UInt32 v)
  void .ctor(uint4x4 v)
  void .ctor(float v)
  void .ctor(float4x4 v)
  void .ctor(double v)
  void .ctor(double4x4 v)
  int4x4 op_Implicit(int v)
  int4x4 op_Explicit(bool v)
  int4x4 op_Explicit(bool4x4 v)
  int4x4 op_Explicit(UInt32 v)
  int4x4 op_Explicit(uint4x4 v)
  int4x4 op_Explicit(float v)
  int4x4 op_Explicit(float4x4 v)
  int4x4 op_Explicit(double v)
  int4x4 op_Explicit(double4x4 v)
  int4x4 op_Multiply(int4x4 lhs, int4x4 rhs)
  int4x4 op_Multiply(int4x4 lhs, int rhs)
  int4x4 op_Multiply(int lhs, int4x4 rhs)
  int4x4 op_Addition(int4x4 lhs, int4x4 rhs)
  int4x4 op_Addition(int4x4 lhs, int rhs)
  int4x4 op_Addition(int lhs, int4x4 rhs)
  int4x4 op_Subtraction(int4x4 lhs, int4x4 rhs)
  int4x4 op_Subtraction(int4x4 lhs, int rhs)
  int4x4 op_Subtraction(int lhs, int4x4 rhs)
  int4x4 op_Division(int4x4 lhs, int4x4 rhs)
  int4x4 op_Division(int4x4 lhs, int rhs)
  int4x4 op_Division(int lhs, int4x4 rhs)
  int4x4 op_Modulus(int4x4 lhs, int4x4 rhs)
  int4x4 op_Modulus(int4x4 lhs, int rhs)
  int4x4 op_Modulus(int lhs, int4x4 rhs)
  int4x4 op_Increment(int4x4 val)
  int4x4 op_Decrement(int4x4 val)
  bool4x4 op_LessThan(int4x4 lhs, int4x4 rhs)
  bool4x4 op_LessThan(int4x4 lhs, int rhs)
  bool4x4 op_LessThan(int lhs, int4x4 rhs)
  bool4x4 op_LessThanOrEqual(int4x4 lhs, int4x4 rhs)
  bool4x4 op_LessThanOrEqual(int4x4 lhs, int rhs)
  bool4x4 op_LessThanOrEqual(int lhs, int4x4 rhs)
  bool4x4 op_GreaterThan(int4x4 lhs, int4x4 rhs)
  bool4x4 op_GreaterThan(int4x4 lhs, int rhs)
  bool4x4 op_GreaterThan(int lhs, int4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(int4x4 lhs, int4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(int4x4 lhs, int rhs)
  bool4x4 op_GreaterThanOrEqual(int lhs, int4x4 rhs)
  int4x4 op_UnaryNegation(int4x4 val)
  int4x4 op_UnaryPlus(int4x4 val)
  int4x4 op_LeftShift(int4x4 x, int n)
  int4x4 op_RightShift(int4x4 x, int n)
  bool4x4 op_Equality(int4x4 lhs, int4x4 rhs)
  bool4x4 op_Equality(int4x4 lhs, int rhs)
  bool4x4 op_Equality(int lhs, int4x4 rhs)
  bool4x4 op_Inequality(int4x4 lhs, int4x4 rhs)
  bool4x4 op_Inequality(int4x4 lhs, int rhs)
  bool4x4 op_Inequality(int lhs, int4x4 rhs)
  int4x4 op_OnesComplement(int4x4 val)
  int4x4 op_BitwiseAnd(int4x4 lhs, int4x4 rhs)
  int4x4 op_BitwiseAnd(int4x4 lhs, int rhs)
  int4x4 op_BitwiseAnd(int lhs, int4x4 rhs)
  int4x4 op_BitwiseOr(int4x4 lhs, int4x4 rhs)
  int4x4 op_BitwiseOr(int4x4 lhs, int rhs)
  int4x4 op_BitwiseOr(int lhs, int4x4 rhs)
  int4x4 op_ExclusiveOr(int4x4 lhs, int4x4 rhs)
  int4x4 op_ExclusiveOr(int4x4 lhs, int rhs)
  int4x4 op_ExclusiveOr(int lhs, int4x4 rhs)
  int4& get_Item(int index)
  bool Equals(int4x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.quaternion
Наследуется от: ValueType
Поля:
  float4 value
  quaternion identity
Свойства:
Методы:
  Quaternion op_Implicit(quaternion q)
  quaternion op_Implicit(Quaternion q)
  void .ctor(float x, float y, float z, float w)
  void .ctor(float4 value)
  quaternion op_Implicit(float4 v)
  void .ctor(float3x3 m)
  void .ctor(float4x4 m)
  quaternion AxisAngle(float3 axis, float angle)
  quaternion EulerXYZ(float3 xyz)
  quaternion EulerXZY(float3 xyz)
  quaternion EulerYXZ(float3 xyz)
  quaternion EulerYZX(float3 xyz)
  quaternion EulerZXY(float3 xyz)
  quaternion EulerZYX(float3 xyz)
  quaternion EulerXYZ(float x, float y, float z)
  quaternion EulerXZY(float x, float y, float z)
  quaternion EulerYXZ(float x, float y, float z)
  quaternion EulerYZX(float x, float y, float z)
  quaternion EulerZXY(float x, float y, float z)
  quaternion EulerZYX(float x, float y, float z)
  quaternion Euler(float3 xyz, RotationOrder order)
  quaternion Euler(float x, float y, float z, RotationOrder order)
  quaternion RotateX(float angle)
  quaternion RotateY(float angle)
  quaternion RotateZ(float angle)
  quaternion LookRotation(float3 forward, float3 up)
  quaternion LookRotationSafe(float3 forward, float3 up)
  bool Equals(quaternion x)
  bool Equals(object x)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.noise
Наследуется от: object
Поля:
Свойства:
Методы:
  float2 cellular(float2 P)
  float2 cellular2x2(float2 P)
  float2 cellular2x2x2(float3 P)
  float2 cellular(float3 P)
  float cnoise(float2 P)
  float pnoise(float2 P, float2 rep)
  float cnoise(float3 P)
  float pnoise(float3 P, float3 rep)
  float cnoise(float4 P)
  float pnoise(float4 P, float4 rep)
  float mod289(float x)
  float2 mod289(float2 x)
  float3 mod289(float3 x)
  float4 mod289(float4 x)
  float3 mod7(float3 x)
  float4 mod7(float4 x)
  float permute(float x)
  float3 permute(float3 x)
  float4 permute(float4 x)
  float taylorInvSqrt(float r)
  float4 taylorInvSqrt(float4 r)
  float2 fade(float2 t)
  float3 fade(float3 t)
  float4 fade(float4 t)
  float4 grad4(float j, float4 ip)
  float2 rgrad2(float2 p, float rot)
  float snoise(float2 v)
  float snoise(float3 v)
  float snoise(float3 v, float3& gradient)
  float snoise(float4 v)
  float3 psrdnoise(float2 pos, float2 per, float rot)
  float3 psrdnoise(float2 pos, float2 per)
  float psrnoise(float2 pos, float2 per, float rot)
  float psrnoise(float2 pos, float2 per)
  float3 srdnoise(float2 pos, float rot)
  float3 srdnoise(float2 pos)
  float srnoise(float2 pos, float rot)
  float srnoise(float2 pos)
--------------------------------------------------
Класс: Unity.Mathematics.PostNormalizeAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Mathematics.DoNotNormalizeAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Mathematics.Random
Наследуется от: ValueType
Поля:
  UInt32 state
Свойства:
Методы:
  void .ctor(UInt32 seed)
  Random CreateFromIndex(UInt32 index)
  UInt32 WangHash(UInt32 n)
  void InitState(UInt32 seed)
  bool NextBool()
  bool2 NextBool2()
  bool3 NextBool3()
  bool4 NextBool4()
  int NextInt()
  int2 NextInt2()
  int3 NextInt3()
  int4 NextInt4()
  int NextInt(int max)
  int2 NextInt2(int2 max)
  int3 NextInt3(int3 max)
  int4 NextInt4(int4 max)
  int NextInt(int min, int max)
  int2 NextInt2(int2 min, int2 max)
  int3 NextInt3(int3 min, int3 max)
  int4 NextInt4(int4 min, int4 max)
  UInt32 NextUInt()
  uint2 NextUInt2()
  uint3 NextUInt3()
  uint4 NextUInt4()
  UInt32 NextUInt(UInt32 max)
  uint2 NextUInt2(uint2 max)
  uint3 NextUInt3(uint3 max)
  uint4 NextUInt4(uint4 max)
  UInt32 NextUInt(UInt32 min, UInt32 max)
  uint2 NextUInt2(uint2 min, uint2 max)
  uint3 NextUInt3(uint3 min, uint3 max)
  uint4 NextUInt4(uint4 min, uint4 max)
  float NextFloat()
  float2 NextFloat2()
  float3 NextFloat3()
  float4 NextFloat4()
  float NextFloat(float max)
  float2 NextFloat2(float2 max)
  float3 NextFloat3(float3 max)
  float4 NextFloat4(float4 max)
  float NextFloat(float min, float max)
  float2 NextFloat2(float2 min, float2 max)
  float3 NextFloat3(float3 min, float3 max)
  float4 NextFloat4(float4 min, float4 max)
  double NextDouble()
  double2 NextDouble2()
  double3 NextDouble3()
  double4 NextDouble4()
  double NextDouble(double max)
  double2 NextDouble2(double2 max)
  double3 NextDouble3(double3 max)
  double4 NextDouble4(double4 max)
  double NextDouble(double min, double max)
  double2 NextDouble2(double2 min, double2 max)
  double3 NextDouble3(double3 min, double3 max)
  double4 NextDouble4(double4 min, double4 max)
  float2 NextFloat2Direction()
  double2 NextDouble2Direction()
  float3 NextFloat3Direction()
  double3 NextDouble3Direction()
  quaternion NextQuaternionRotation()
  UInt32 NextState()
  void CheckInitState()
  void CheckIndexForHash(UInt32 index)
  void CheckState()
  void CheckNextIntMax(int max)
  void CheckNextIntMinMax(int min, int max)
  void CheckNextUIntMinMax(UInt32 min, UInt32 max)
--------------------------------------------------
Класс: Unity.Mathematics.RigidTransform
Наследуется от: ValueType
Поля:
  quaternion rot
  float3 pos
  RigidTransform identity
Свойства:
Методы:
  void .ctor(quaternion rotation, float3 translation)
  void .ctor(float3x3 rotation, float3 translation)
  void .ctor(float4x4 transform)
  RigidTransform AxisAngle(float3 axis, float angle)
  RigidTransform EulerXYZ(float3 xyz)
  RigidTransform EulerXZY(float3 xyz)
  RigidTransform EulerYXZ(float3 xyz)
  RigidTransform EulerYZX(float3 xyz)
  RigidTransform EulerZXY(float3 xyz)
  RigidTransform EulerZYX(float3 xyz)
  RigidTransform EulerXYZ(float x, float y, float z)
  RigidTransform EulerXZY(float x, float y, float z)
  RigidTransform EulerYXZ(float x, float y, float z)
  RigidTransform EulerYZX(float x, float y, float z)
  RigidTransform EulerZXY(float x, float y, float z)
  RigidTransform EulerZYX(float x, float y, float z)
  RigidTransform Euler(float3 xyz, RotationOrder order)
  RigidTransform Euler(float x, float y, float z, RotationOrder order)
  RigidTransform RotateX(float angle)
  RigidTransform RotateY(float angle)
  RigidTransform RotateZ(float angle)
  RigidTransform Translate(float3 vector)
  bool Equals(RigidTransform x)
  bool Equals(object x)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.uint2
Наследуется от: ValueType
Поля:
  UInt32 x
  UInt32 y
  uint2 zero
Свойства:
  uint4 xxxx
  uint4 xxxy
  uint4 xxyx
  uint4 xxyy
  uint4 xyxx
  uint4 xyxy
  uint4 xyyx
  uint4 xyyy
  uint4 yxxx
  uint4 yxxy
  uint4 yxyx
  uint4 yxyy
  uint4 yyxx
  uint4 yyxy
  uint4 yyyx
  uint4 yyyy
  uint3 xxx
  uint3 xxy
  uint3 xyx
  uint3 xyy
  uint3 yxx
  uint3 yxy
  uint3 yyx
  uint3 yyy
  uint2 xx
  uint2 xy
  uint2 yx
  uint2 yy
  UInt32 Item
Методы:
  void .ctor(UInt32 x, UInt32 y)
  void .ctor(uint2 xy)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool2 v)
  void .ctor(int v)
  void .ctor(int2 v)
  void .ctor(float v)
  void .ctor(float2 v)
  void .ctor(double v)
  void .ctor(double2 v)
  uint2 op_Implicit(UInt32 v)
  uint2 op_Explicit(bool v)
  uint2 op_Explicit(bool2 v)
  uint2 op_Explicit(int v)
  uint2 op_Explicit(int2 v)
  uint2 op_Explicit(float v)
  uint2 op_Explicit(float2 v)
  uint2 op_Explicit(double v)
  uint2 op_Explicit(double2 v)
  uint2 op_Multiply(uint2 lhs, uint2 rhs)
  uint2 op_Multiply(uint2 lhs, UInt32 rhs)
  uint2 op_Multiply(UInt32 lhs, uint2 rhs)
  uint2 op_Addition(uint2 lhs, uint2 rhs)
  uint2 op_Addition(uint2 lhs, UInt32 rhs)
  uint2 op_Addition(UInt32 lhs, uint2 rhs)
  uint2 op_Subtraction(uint2 lhs, uint2 rhs)
  uint2 op_Subtraction(uint2 lhs, UInt32 rhs)
  uint2 op_Subtraction(UInt32 lhs, uint2 rhs)
  uint2 op_Division(uint2 lhs, uint2 rhs)
  uint2 op_Division(uint2 lhs, UInt32 rhs)
  uint2 op_Division(UInt32 lhs, uint2 rhs)
  uint2 op_Modulus(uint2 lhs, uint2 rhs)
  uint2 op_Modulus(uint2 lhs, UInt32 rhs)
  uint2 op_Modulus(UInt32 lhs, uint2 rhs)
  uint2 op_Increment(uint2 val)
  uint2 op_Decrement(uint2 val)
  bool2 op_LessThan(uint2 lhs, uint2 rhs)
  bool2 op_LessThan(uint2 lhs, UInt32 rhs)
  bool2 op_LessThan(UInt32 lhs, uint2 rhs)
  bool2 op_LessThanOrEqual(uint2 lhs, uint2 rhs)
  bool2 op_LessThanOrEqual(uint2 lhs, UInt32 rhs)
  bool2 op_LessThanOrEqual(UInt32 lhs, uint2 rhs)
  bool2 op_GreaterThan(uint2 lhs, uint2 rhs)
  bool2 op_GreaterThan(uint2 lhs, UInt32 rhs)
  bool2 op_GreaterThan(UInt32 lhs, uint2 rhs)
  bool2 op_GreaterThanOrEqual(uint2 lhs, uint2 rhs)
  bool2 op_GreaterThanOrEqual(uint2 lhs, UInt32 rhs)
  bool2 op_GreaterThanOrEqual(UInt32 lhs, uint2 rhs)
  uint2 op_UnaryNegation(uint2 val)
  uint2 op_UnaryPlus(uint2 val)
  uint2 op_LeftShift(uint2 x, int n)
  uint2 op_RightShift(uint2 x, int n)
  bool2 op_Equality(uint2 lhs, uint2 rhs)
  bool2 op_Equality(uint2 lhs, UInt32 rhs)
  bool2 op_Equality(UInt32 lhs, uint2 rhs)
  bool2 op_Inequality(uint2 lhs, uint2 rhs)
  bool2 op_Inequality(uint2 lhs, UInt32 rhs)
  bool2 op_Inequality(UInt32 lhs, uint2 rhs)
  uint2 op_OnesComplement(uint2 val)
  uint2 op_BitwiseAnd(uint2 lhs, uint2 rhs)
  uint2 op_BitwiseAnd(uint2 lhs, UInt32 rhs)
  uint2 op_BitwiseAnd(UInt32 lhs, uint2 rhs)
  uint2 op_BitwiseOr(uint2 lhs, uint2 rhs)
  uint2 op_BitwiseOr(uint2 lhs, UInt32 rhs)
  uint2 op_BitwiseOr(UInt32 lhs, uint2 rhs)
  uint2 op_ExclusiveOr(uint2 lhs, uint2 rhs)
  uint2 op_ExclusiveOr(uint2 lhs, UInt32 rhs)
  uint2 op_ExclusiveOr(UInt32 lhs, uint2 rhs)
  uint4 get_xxxx()
  uint4 get_xxxy()
  uint4 get_xxyx()
  uint4 get_xxyy()
  uint4 get_xyxx()
  uint4 get_xyxy()
  uint4 get_xyyx()
  uint4 get_xyyy()
  uint4 get_yxxx()
  uint4 get_yxxy()
  uint4 get_yxyx()
  uint4 get_yxyy()
  uint4 get_yyxx()
  uint4 get_yyxy()
  uint4 get_yyyx()
  uint4 get_yyyy()
  uint3 get_xxx()
  uint3 get_xxy()
  uint3 get_xyx()
  uint3 get_xyy()
  uint3 get_yxx()
  uint3 get_yxy()
  uint3 get_yyx()
  uint3 get_yyy()
  uint2 get_xx()
  uint2 get_xy()
  void set_xy(uint2 value)
  uint2 get_yx()
  void set_yx(uint2 value)
  uint2 get_yy()
  UInt32 get_Item(int index)
  void set_Item(int index, UInt32 value)
  bool Equals(uint2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint2x2
Наследуется от: ValueType
Поля:
  uint2 c0
  uint2 c1
  uint2x2 identity
  uint2x2 zero
Свойства:
  uint2& Item
Методы:
  void .ctor(uint2 c0, uint2 c1)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool2x2 v)
  void .ctor(int v)
  void .ctor(int2x2 v)
  void .ctor(float v)
  void .ctor(float2x2 v)
  void .ctor(double v)
  void .ctor(double2x2 v)
  uint2x2 op_Implicit(UInt32 v)
  uint2x2 op_Explicit(bool v)
  uint2x2 op_Explicit(bool2x2 v)
  uint2x2 op_Explicit(int v)
  uint2x2 op_Explicit(int2x2 v)
  uint2x2 op_Explicit(float v)
  uint2x2 op_Explicit(float2x2 v)
  uint2x2 op_Explicit(double v)
  uint2x2 op_Explicit(double2x2 v)
  uint2x2 op_Multiply(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_Multiply(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_Multiply(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_Addition(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_Addition(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_Addition(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_Subtraction(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_Subtraction(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_Subtraction(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_Division(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_Division(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_Division(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_Modulus(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_Modulus(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_Modulus(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_Increment(uint2x2 val)
  uint2x2 op_Decrement(uint2x2 val)
  bool2x2 op_LessThan(uint2x2 lhs, uint2x2 rhs)
  bool2x2 op_LessThan(uint2x2 lhs, UInt32 rhs)
  bool2x2 op_LessThan(UInt32 lhs, uint2x2 rhs)
  bool2x2 op_LessThanOrEqual(uint2x2 lhs, uint2x2 rhs)
  bool2x2 op_LessThanOrEqual(uint2x2 lhs, UInt32 rhs)
  bool2x2 op_LessThanOrEqual(UInt32 lhs, uint2x2 rhs)
  bool2x2 op_GreaterThan(uint2x2 lhs, uint2x2 rhs)
  bool2x2 op_GreaterThan(uint2x2 lhs, UInt32 rhs)
  bool2x2 op_GreaterThan(UInt32 lhs, uint2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(uint2x2 lhs, uint2x2 rhs)
  bool2x2 op_GreaterThanOrEqual(uint2x2 lhs, UInt32 rhs)
  bool2x2 op_GreaterThanOrEqual(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_UnaryNegation(uint2x2 val)
  uint2x2 op_UnaryPlus(uint2x2 val)
  uint2x2 op_LeftShift(uint2x2 x, int n)
  uint2x2 op_RightShift(uint2x2 x, int n)
  bool2x2 op_Equality(uint2x2 lhs, uint2x2 rhs)
  bool2x2 op_Equality(uint2x2 lhs, UInt32 rhs)
  bool2x2 op_Equality(UInt32 lhs, uint2x2 rhs)
  bool2x2 op_Inequality(uint2x2 lhs, uint2x2 rhs)
  bool2x2 op_Inequality(uint2x2 lhs, UInt32 rhs)
  bool2x2 op_Inequality(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_OnesComplement(uint2x2 val)
  uint2x2 op_BitwiseAnd(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_BitwiseAnd(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_BitwiseAnd(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_BitwiseOr(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_BitwiseOr(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_BitwiseOr(UInt32 lhs, uint2x2 rhs)
  uint2x2 op_ExclusiveOr(uint2x2 lhs, uint2x2 rhs)
  uint2x2 op_ExclusiveOr(uint2x2 lhs, UInt32 rhs)
  uint2x2 op_ExclusiveOr(UInt32 lhs, uint2x2 rhs)
  uint2& get_Item(int index)
  bool Equals(uint2x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.uint2x3
Наследуется от: ValueType
Поля:
  uint2 c0
  uint2 c1
  uint2 c2
  uint2x3 zero
Свойства:
  uint2& Item
Методы:
  void .ctor(uint2 c0, uint2 c1, uint2 c2)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool2x3 v)
  void .ctor(int v)
  void .ctor(int2x3 v)
  void .ctor(float v)
  void .ctor(float2x3 v)
  void .ctor(double v)
  void .ctor(double2x3 v)
  uint2x3 op_Implicit(UInt32 v)
  uint2x3 op_Explicit(bool v)
  uint2x3 op_Explicit(bool2x3 v)
  uint2x3 op_Explicit(int v)
  uint2x3 op_Explicit(int2x3 v)
  uint2x3 op_Explicit(float v)
  uint2x3 op_Explicit(float2x3 v)
  uint2x3 op_Explicit(double v)
  uint2x3 op_Explicit(double2x3 v)
  uint2x3 op_Multiply(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_Multiply(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_Multiply(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_Addition(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_Addition(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_Addition(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_Subtraction(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_Subtraction(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_Subtraction(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_Division(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_Division(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_Division(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_Modulus(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_Modulus(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_Modulus(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_Increment(uint2x3 val)
  uint2x3 op_Decrement(uint2x3 val)
  bool2x3 op_LessThan(uint2x3 lhs, uint2x3 rhs)
  bool2x3 op_LessThan(uint2x3 lhs, UInt32 rhs)
  bool2x3 op_LessThan(UInt32 lhs, uint2x3 rhs)
  bool2x3 op_LessThanOrEqual(uint2x3 lhs, uint2x3 rhs)
  bool2x3 op_LessThanOrEqual(uint2x3 lhs, UInt32 rhs)
  bool2x3 op_LessThanOrEqual(UInt32 lhs, uint2x3 rhs)
  bool2x3 op_GreaterThan(uint2x3 lhs, uint2x3 rhs)
  bool2x3 op_GreaterThan(uint2x3 lhs, UInt32 rhs)
  bool2x3 op_GreaterThan(UInt32 lhs, uint2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(uint2x3 lhs, uint2x3 rhs)
  bool2x3 op_GreaterThanOrEqual(uint2x3 lhs, UInt32 rhs)
  bool2x3 op_GreaterThanOrEqual(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_UnaryNegation(uint2x3 val)
  uint2x3 op_UnaryPlus(uint2x3 val)
  uint2x3 op_LeftShift(uint2x3 x, int n)
  uint2x3 op_RightShift(uint2x3 x, int n)
  bool2x3 op_Equality(uint2x3 lhs, uint2x3 rhs)
  bool2x3 op_Equality(uint2x3 lhs, UInt32 rhs)
  bool2x3 op_Equality(UInt32 lhs, uint2x3 rhs)
  bool2x3 op_Inequality(uint2x3 lhs, uint2x3 rhs)
  bool2x3 op_Inequality(uint2x3 lhs, UInt32 rhs)
  bool2x3 op_Inequality(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_OnesComplement(uint2x3 val)
  uint2x3 op_BitwiseAnd(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_BitwiseAnd(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_BitwiseAnd(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_BitwiseOr(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_BitwiseOr(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_BitwiseOr(UInt32 lhs, uint2x3 rhs)
  uint2x3 op_ExclusiveOr(uint2x3 lhs, uint2x3 rhs)
  uint2x3 op_ExclusiveOr(uint2x3 lhs, UInt32 rhs)
  uint2x3 op_ExclusiveOr(UInt32 lhs, uint2x3 rhs)
  uint2& get_Item(int index)
  bool Equals(uint2x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint2x4
Наследуется от: ValueType
Поля:
  uint2 c0
  uint2 c1
  uint2 c2
  uint2 c3
  uint2x4 zero
Свойства:
  uint2& Item
Методы:
  void .ctor(uint2 c0, uint2 c1, uint2 c2, uint2 c3)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool2x4 v)
  void .ctor(int v)
  void .ctor(int2x4 v)
  void .ctor(float v)
  void .ctor(float2x4 v)
  void .ctor(double v)
  void .ctor(double2x4 v)
  uint2x4 op_Implicit(UInt32 v)
  uint2x4 op_Explicit(bool v)
  uint2x4 op_Explicit(bool2x4 v)
  uint2x4 op_Explicit(int v)
  uint2x4 op_Explicit(int2x4 v)
  uint2x4 op_Explicit(float v)
  uint2x4 op_Explicit(float2x4 v)
  uint2x4 op_Explicit(double v)
  uint2x4 op_Explicit(double2x4 v)
  uint2x4 op_Multiply(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_Multiply(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_Multiply(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_Addition(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_Addition(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_Addition(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_Subtraction(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_Subtraction(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_Subtraction(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_Division(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_Division(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_Division(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_Modulus(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_Modulus(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_Modulus(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_Increment(uint2x4 val)
  uint2x4 op_Decrement(uint2x4 val)
  bool2x4 op_LessThan(uint2x4 lhs, uint2x4 rhs)
  bool2x4 op_LessThan(uint2x4 lhs, UInt32 rhs)
  bool2x4 op_LessThan(UInt32 lhs, uint2x4 rhs)
  bool2x4 op_LessThanOrEqual(uint2x4 lhs, uint2x4 rhs)
  bool2x4 op_LessThanOrEqual(uint2x4 lhs, UInt32 rhs)
  bool2x4 op_LessThanOrEqual(UInt32 lhs, uint2x4 rhs)
  bool2x4 op_GreaterThan(uint2x4 lhs, uint2x4 rhs)
  bool2x4 op_GreaterThan(uint2x4 lhs, UInt32 rhs)
  bool2x4 op_GreaterThan(UInt32 lhs, uint2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(uint2x4 lhs, uint2x4 rhs)
  bool2x4 op_GreaterThanOrEqual(uint2x4 lhs, UInt32 rhs)
  bool2x4 op_GreaterThanOrEqual(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_UnaryNegation(uint2x4 val)
  uint2x4 op_UnaryPlus(uint2x4 val)
  uint2x4 op_LeftShift(uint2x4 x, int n)
  uint2x4 op_RightShift(uint2x4 x, int n)
  bool2x4 op_Equality(uint2x4 lhs, uint2x4 rhs)
  bool2x4 op_Equality(uint2x4 lhs, UInt32 rhs)
  bool2x4 op_Equality(UInt32 lhs, uint2x4 rhs)
  bool2x4 op_Inequality(uint2x4 lhs, uint2x4 rhs)
  bool2x4 op_Inequality(uint2x4 lhs, UInt32 rhs)
  bool2x4 op_Inequality(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_OnesComplement(uint2x4 val)
  uint2x4 op_BitwiseAnd(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_BitwiseAnd(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_BitwiseAnd(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_BitwiseOr(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_BitwiseOr(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_BitwiseOr(UInt32 lhs, uint2x4 rhs)
  uint2x4 op_ExclusiveOr(uint2x4 lhs, uint2x4 rhs)
  uint2x4 op_ExclusiveOr(uint2x4 lhs, UInt32 rhs)
  uint2x4 op_ExclusiveOr(UInt32 lhs, uint2x4 rhs)
  uint2& get_Item(int index)
  bool Equals(uint2x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint3
Наследуется от: ValueType
Поля:
  UInt32 x
  UInt32 y
  UInt32 z
  uint3 zero
Свойства:
  uint4 xxxx
  uint4 xxxy
  uint4 xxxz
  uint4 xxyx
  uint4 xxyy
  uint4 xxyz
  uint4 xxzx
  uint4 xxzy
  uint4 xxzz
  uint4 xyxx
  uint4 xyxy
  uint4 xyxz
  uint4 xyyx
  uint4 xyyy
  uint4 xyyz
  uint4 xyzx
  uint4 xyzy
  uint4 xyzz
  uint4 xzxx
  uint4 xzxy
  uint4 xzxz
  uint4 xzyx
  uint4 xzyy
  uint4 xzyz
  uint4 xzzx
  uint4 xzzy
  uint4 xzzz
  uint4 yxxx
  uint4 yxxy
  uint4 yxxz
  uint4 yxyx
  uint4 yxyy
  uint4 yxyz
  uint4 yxzx
  uint4 yxzy
  uint4 yxzz
  uint4 yyxx
  uint4 yyxy
  uint4 yyxz
  uint4 yyyx
  uint4 yyyy
  uint4 yyyz
  uint4 yyzx
  uint4 yyzy
  uint4 yyzz
  uint4 yzxx
  uint4 yzxy
  uint4 yzxz
  uint4 yzyx
  uint4 yzyy
  uint4 yzyz
  uint4 yzzx
  uint4 yzzy
  uint4 yzzz
  uint4 zxxx
  uint4 zxxy
  uint4 zxxz
  uint4 zxyx
  uint4 zxyy
  uint4 zxyz
  uint4 zxzx
  uint4 zxzy
  uint4 zxzz
  uint4 zyxx
  uint4 zyxy
  uint4 zyxz
  uint4 zyyx
  uint4 zyyy
  uint4 zyyz
  uint4 zyzx
  uint4 zyzy
  uint4 zyzz
  uint4 zzxx
  uint4 zzxy
  uint4 zzxz
  uint4 zzyx
  uint4 zzyy
  uint4 zzyz
  uint4 zzzx
  uint4 zzzy
  uint4 zzzz
  uint3 xxx
  uint3 xxy
  uint3 xxz
  uint3 xyx
  uint3 xyy
  uint3 xyz
  uint3 xzx
  uint3 xzy
  uint3 xzz
  uint3 yxx
  uint3 yxy
  uint3 yxz
  uint3 yyx
  uint3 yyy
  uint3 yyz
  uint3 yzx
  uint3 yzy
  uint3 yzz
  uint3 zxx
  uint3 zxy
  uint3 zxz
  uint3 zyx
  uint3 zyy
  uint3 zyz
  uint3 zzx
  uint3 zzy
  uint3 zzz
  uint2 xx
  uint2 xy
  uint2 xz
  uint2 yx
  uint2 yy
  uint2 yz
  uint2 zx
  uint2 zy
  uint2 zz
  UInt32 Item
Методы:
  void .ctor(UInt32 x, UInt32 y, UInt32 z)
  void .ctor(UInt32 x, uint2 yz)
  void .ctor(uint2 xy, UInt32 z)
  void .ctor(uint3 xyz)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool3 v)
  void .ctor(int v)
  void .ctor(int3 v)
  void .ctor(float v)
  void .ctor(float3 v)
  void .ctor(double v)
  void .ctor(double3 v)
  uint3 op_Implicit(UInt32 v)
  uint3 op_Explicit(bool v)
  uint3 op_Explicit(bool3 v)
  uint3 op_Explicit(int v)
  uint3 op_Explicit(int3 v)
  uint3 op_Explicit(float v)
  uint3 op_Explicit(float3 v)
  uint3 op_Explicit(double v)
  uint3 op_Explicit(double3 v)
  uint3 op_Multiply(uint3 lhs, uint3 rhs)
  uint3 op_Multiply(uint3 lhs, UInt32 rhs)
  uint3 op_Multiply(UInt32 lhs, uint3 rhs)
  uint3 op_Addition(uint3 lhs, uint3 rhs)
  uint3 op_Addition(uint3 lhs, UInt32 rhs)
  uint3 op_Addition(UInt32 lhs, uint3 rhs)
  uint3 op_Subtraction(uint3 lhs, uint3 rhs)
  uint3 op_Subtraction(uint3 lhs, UInt32 rhs)
  uint3 op_Subtraction(UInt32 lhs, uint3 rhs)
  uint3 op_Division(uint3 lhs, uint3 rhs)
  uint3 op_Division(uint3 lhs, UInt32 rhs)
  uint3 op_Division(UInt32 lhs, uint3 rhs)
  uint3 op_Modulus(uint3 lhs, uint3 rhs)
  uint3 op_Modulus(uint3 lhs, UInt32 rhs)
  uint3 op_Modulus(UInt32 lhs, uint3 rhs)
  uint3 op_Increment(uint3 val)
  uint3 op_Decrement(uint3 val)
  bool3 op_LessThan(uint3 lhs, uint3 rhs)
  bool3 op_LessThan(uint3 lhs, UInt32 rhs)
  bool3 op_LessThan(UInt32 lhs, uint3 rhs)
  bool3 op_LessThanOrEqual(uint3 lhs, uint3 rhs)
  bool3 op_LessThanOrEqual(uint3 lhs, UInt32 rhs)
  bool3 op_LessThanOrEqual(UInt32 lhs, uint3 rhs)
  bool3 op_GreaterThan(uint3 lhs, uint3 rhs)
  bool3 op_GreaterThan(uint3 lhs, UInt32 rhs)
  bool3 op_GreaterThan(UInt32 lhs, uint3 rhs)
  bool3 op_GreaterThanOrEqual(uint3 lhs, uint3 rhs)
  bool3 op_GreaterThanOrEqual(uint3 lhs, UInt32 rhs)
  bool3 op_GreaterThanOrEqual(UInt32 lhs, uint3 rhs)
  uint3 op_UnaryNegation(uint3 val)
  uint3 op_UnaryPlus(uint3 val)
  uint3 op_LeftShift(uint3 x, int n)
  uint3 op_RightShift(uint3 x, int n)
  bool3 op_Equality(uint3 lhs, uint3 rhs)
  bool3 op_Equality(uint3 lhs, UInt32 rhs)
  bool3 op_Equality(UInt32 lhs, uint3 rhs)
  bool3 op_Inequality(uint3 lhs, uint3 rhs)
  bool3 op_Inequality(uint3 lhs, UInt32 rhs)
  bool3 op_Inequality(UInt32 lhs, uint3 rhs)
  uint3 op_OnesComplement(uint3 val)
  uint3 op_BitwiseAnd(uint3 lhs, uint3 rhs)
  uint3 op_BitwiseAnd(uint3 lhs, UInt32 rhs)
  uint3 op_BitwiseAnd(UInt32 lhs, uint3 rhs)
  uint3 op_BitwiseOr(uint3 lhs, uint3 rhs)
  uint3 op_BitwiseOr(uint3 lhs, UInt32 rhs)
  uint3 op_BitwiseOr(UInt32 lhs, uint3 rhs)
  uint3 op_ExclusiveOr(uint3 lhs, uint3 rhs)
  uint3 op_ExclusiveOr(uint3 lhs, UInt32 rhs)
  uint3 op_ExclusiveOr(UInt32 lhs, uint3 rhs)
  uint4 get_xxxx()
  uint4 get_xxxy()
  uint4 get_xxxz()
  uint4 get_xxyx()
  uint4 get_xxyy()
  uint4 get_xxyz()
  uint4 get_xxzx()
  uint4 get_xxzy()
  uint4 get_xxzz()
  uint4 get_xyxx()
  uint4 get_xyxy()
  uint4 get_xyxz()
  uint4 get_xyyx()
  uint4 get_xyyy()
  uint4 get_xyyz()
  uint4 get_xyzx()
  uint4 get_xyzy()
  uint4 get_xyzz()
  uint4 get_xzxx()
  uint4 get_xzxy()
  uint4 get_xzxz()
  uint4 get_xzyx()
  uint4 get_xzyy()
  uint4 get_xzyz()
  uint4 get_xzzx()
  uint4 get_xzzy()
  uint4 get_xzzz()
  uint4 get_yxxx()
  uint4 get_yxxy()
  uint4 get_yxxz()
  uint4 get_yxyx()
  uint4 get_yxyy()
  uint4 get_yxyz()
  uint4 get_yxzx()
  uint4 get_yxzy()
  uint4 get_yxzz()
  uint4 get_yyxx()
  uint4 get_yyxy()
  uint4 get_yyxz()
  uint4 get_yyyx()
  uint4 get_yyyy()
  uint4 get_yyyz()
  uint4 get_yyzx()
  uint4 get_yyzy()
  uint4 get_yyzz()
  uint4 get_yzxx()
  uint4 get_yzxy()
  uint4 get_yzxz()
  uint4 get_yzyx()
  uint4 get_yzyy()
  uint4 get_yzyz()
  uint4 get_yzzx()
  uint4 get_yzzy()
  uint4 get_yzzz()
  uint4 get_zxxx()
  uint4 get_zxxy()
  uint4 get_zxxz()
  uint4 get_zxyx()
  uint4 get_zxyy()
  uint4 get_zxyz()
  uint4 get_zxzx()
  uint4 get_zxzy()
  uint4 get_zxzz()
  uint4 get_zyxx()
  uint4 get_zyxy()
  uint4 get_zyxz()
  uint4 get_zyyx()
  uint4 get_zyyy()
  uint4 get_zyyz()
  uint4 get_zyzx()
  uint4 get_zyzy()
  uint4 get_zyzz()
  uint4 get_zzxx()
  uint4 get_zzxy()
  uint4 get_zzxz()
  uint4 get_zzyx()
  uint4 get_zzyy()
  uint4 get_zzyz()
  uint4 get_zzzx()
  uint4 get_zzzy()
  uint4 get_zzzz()
  uint3 get_xxx()
  uint3 get_xxy()
  uint3 get_xxz()
  uint3 get_xyx()
  uint3 get_xyy()
  uint3 get_xyz()
  void set_xyz(uint3 value)
  uint3 get_xzx()
  uint3 get_xzy()
  void set_xzy(uint3 value)
  uint3 get_xzz()
  uint3 get_yxx()
  uint3 get_yxy()
  uint3 get_yxz()
  void set_yxz(uint3 value)
  uint3 get_yyx()
  uint3 get_yyy()
  uint3 get_yyz()
  uint3 get_yzx()
  void set_yzx(uint3 value)
  uint3 get_yzy()
  uint3 get_yzz()
  uint3 get_zxx()
  uint3 get_zxy()
  void set_zxy(uint3 value)
  uint3 get_zxz()
  uint3 get_zyx()
  void set_zyx(uint3 value)
  uint3 get_zyy()
  uint3 get_zyz()
  uint3 get_zzx()
  uint3 get_zzy()
  uint3 get_zzz()
  uint2 get_xx()
  uint2 get_xy()
  void set_xy(uint2 value)
  uint2 get_xz()
  void set_xz(uint2 value)
  uint2 get_yx()
  void set_yx(uint2 value)
  uint2 get_yy()
  uint2 get_yz()
  void set_yz(uint2 value)
  uint2 get_zx()
  void set_zx(uint2 value)
  uint2 get_zy()
  void set_zy(uint2 value)
  uint2 get_zz()
  UInt32 get_Item(int index)
  void set_Item(int index, UInt32 value)
  bool Equals(uint3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint3x2
Наследуется от: ValueType
Поля:
  uint3 c0
  uint3 c1
  uint3x2 zero
Свойства:
  uint3& Item
Методы:
  void .ctor(uint3 c0, uint3 c1)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool3x2 v)
  void .ctor(int v)
  void .ctor(int3x2 v)
  void .ctor(float v)
  void .ctor(float3x2 v)
  void .ctor(double v)
  void .ctor(double3x2 v)
  uint3x2 op_Implicit(UInt32 v)
  uint3x2 op_Explicit(bool v)
  uint3x2 op_Explicit(bool3x2 v)
  uint3x2 op_Explicit(int v)
  uint3x2 op_Explicit(int3x2 v)
  uint3x2 op_Explicit(float v)
  uint3x2 op_Explicit(float3x2 v)
  uint3x2 op_Explicit(double v)
  uint3x2 op_Explicit(double3x2 v)
  uint3x2 op_Multiply(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_Multiply(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_Multiply(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_Addition(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_Addition(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_Addition(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_Subtraction(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_Subtraction(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_Subtraction(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_Division(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_Division(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_Division(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_Modulus(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_Modulus(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_Modulus(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_Increment(uint3x2 val)
  uint3x2 op_Decrement(uint3x2 val)
  bool3x2 op_LessThan(uint3x2 lhs, uint3x2 rhs)
  bool3x2 op_LessThan(uint3x2 lhs, UInt32 rhs)
  bool3x2 op_LessThan(UInt32 lhs, uint3x2 rhs)
  bool3x2 op_LessThanOrEqual(uint3x2 lhs, uint3x2 rhs)
  bool3x2 op_LessThanOrEqual(uint3x2 lhs, UInt32 rhs)
  bool3x2 op_LessThanOrEqual(UInt32 lhs, uint3x2 rhs)
  bool3x2 op_GreaterThan(uint3x2 lhs, uint3x2 rhs)
  bool3x2 op_GreaterThan(uint3x2 lhs, UInt32 rhs)
  bool3x2 op_GreaterThan(UInt32 lhs, uint3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(uint3x2 lhs, uint3x2 rhs)
  bool3x2 op_GreaterThanOrEqual(uint3x2 lhs, UInt32 rhs)
  bool3x2 op_GreaterThanOrEqual(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_UnaryNegation(uint3x2 val)
  uint3x2 op_UnaryPlus(uint3x2 val)
  uint3x2 op_LeftShift(uint3x2 x, int n)
  uint3x2 op_RightShift(uint3x2 x, int n)
  bool3x2 op_Equality(uint3x2 lhs, uint3x2 rhs)
  bool3x2 op_Equality(uint3x2 lhs, UInt32 rhs)
  bool3x2 op_Equality(UInt32 lhs, uint3x2 rhs)
  bool3x2 op_Inequality(uint3x2 lhs, uint3x2 rhs)
  bool3x2 op_Inequality(uint3x2 lhs, UInt32 rhs)
  bool3x2 op_Inequality(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_OnesComplement(uint3x2 val)
  uint3x2 op_BitwiseAnd(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_BitwiseAnd(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_BitwiseAnd(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_BitwiseOr(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_BitwiseOr(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_BitwiseOr(UInt32 lhs, uint3x2 rhs)
  uint3x2 op_ExclusiveOr(uint3x2 lhs, uint3x2 rhs)
  uint3x2 op_ExclusiveOr(uint3x2 lhs, UInt32 rhs)
  uint3x2 op_ExclusiveOr(UInt32 lhs, uint3x2 rhs)
  uint3& get_Item(int index)
  bool Equals(uint3x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint3x3
Наследуется от: ValueType
Поля:
  uint3 c0
  uint3 c1
  uint3 c2
  uint3x3 identity
  uint3x3 zero
Свойства:
  uint3& Item
Методы:
  void .ctor(uint3 c0, uint3 c1, uint3 c2)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool3x3 v)
  void .ctor(int v)
  void .ctor(int3x3 v)
  void .ctor(float v)
  void .ctor(float3x3 v)
  void .ctor(double v)
  void .ctor(double3x3 v)
  uint3x3 op_Implicit(UInt32 v)
  uint3x3 op_Explicit(bool v)
  uint3x3 op_Explicit(bool3x3 v)
  uint3x3 op_Explicit(int v)
  uint3x3 op_Explicit(int3x3 v)
  uint3x3 op_Explicit(float v)
  uint3x3 op_Explicit(float3x3 v)
  uint3x3 op_Explicit(double v)
  uint3x3 op_Explicit(double3x3 v)
  uint3x3 op_Multiply(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_Multiply(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_Multiply(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_Addition(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_Addition(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_Addition(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_Subtraction(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_Subtraction(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_Subtraction(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_Division(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_Division(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_Division(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_Modulus(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_Modulus(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_Modulus(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_Increment(uint3x3 val)
  uint3x3 op_Decrement(uint3x3 val)
  bool3x3 op_LessThan(uint3x3 lhs, uint3x3 rhs)
  bool3x3 op_LessThan(uint3x3 lhs, UInt32 rhs)
  bool3x3 op_LessThan(UInt32 lhs, uint3x3 rhs)
  bool3x3 op_LessThanOrEqual(uint3x3 lhs, uint3x3 rhs)
  bool3x3 op_LessThanOrEqual(uint3x3 lhs, UInt32 rhs)
  bool3x3 op_LessThanOrEqual(UInt32 lhs, uint3x3 rhs)
  bool3x3 op_GreaterThan(uint3x3 lhs, uint3x3 rhs)
  bool3x3 op_GreaterThan(uint3x3 lhs, UInt32 rhs)
  bool3x3 op_GreaterThan(UInt32 lhs, uint3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(uint3x3 lhs, uint3x3 rhs)
  bool3x3 op_GreaterThanOrEqual(uint3x3 lhs, UInt32 rhs)
  bool3x3 op_GreaterThanOrEqual(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_UnaryNegation(uint3x3 val)
  uint3x3 op_UnaryPlus(uint3x3 val)
  uint3x3 op_LeftShift(uint3x3 x, int n)
  uint3x3 op_RightShift(uint3x3 x, int n)
  bool3x3 op_Equality(uint3x3 lhs, uint3x3 rhs)
  bool3x3 op_Equality(uint3x3 lhs, UInt32 rhs)
  bool3x3 op_Equality(UInt32 lhs, uint3x3 rhs)
  bool3x3 op_Inequality(uint3x3 lhs, uint3x3 rhs)
  bool3x3 op_Inequality(uint3x3 lhs, UInt32 rhs)
  bool3x3 op_Inequality(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_OnesComplement(uint3x3 val)
  uint3x3 op_BitwiseAnd(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_BitwiseAnd(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_BitwiseAnd(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_BitwiseOr(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_BitwiseOr(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_BitwiseOr(UInt32 lhs, uint3x3 rhs)
  uint3x3 op_ExclusiveOr(uint3x3 lhs, uint3x3 rhs)
  uint3x3 op_ExclusiveOr(uint3x3 lhs, UInt32 rhs)
  uint3x3 op_ExclusiveOr(UInt32 lhs, uint3x3 rhs)
  uint3& get_Item(int index)
  bool Equals(uint3x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.uint3x4
Наследуется от: ValueType
Поля:
  uint3 c0
  uint3 c1
  uint3 c2
  uint3 c3
  uint3x4 zero
Свойства:
  uint3& Item
Методы:
  void .ctor(uint3 c0, uint3 c1, uint3 c2, uint3 c3)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool3x4 v)
  void .ctor(int v)
  void .ctor(int3x4 v)
  void .ctor(float v)
  void .ctor(float3x4 v)
  void .ctor(double v)
  void .ctor(double3x4 v)
  uint3x4 op_Implicit(UInt32 v)
  uint3x4 op_Explicit(bool v)
  uint3x4 op_Explicit(bool3x4 v)
  uint3x4 op_Explicit(int v)
  uint3x4 op_Explicit(int3x4 v)
  uint3x4 op_Explicit(float v)
  uint3x4 op_Explicit(float3x4 v)
  uint3x4 op_Explicit(double v)
  uint3x4 op_Explicit(double3x4 v)
  uint3x4 op_Multiply(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_Multiply(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_Multiply(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_Addition(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_Addition(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_Addition(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_Subtraction(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_Subtraction(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_Subtraction(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_Division(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_Division(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_Division(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_Modulus(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_Modulus(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_Modulus(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_Increment(uint3x4 val)
  uint3x4 op_Decrement(uint3x4 val)
  bool3x4 op_LessThan(uint3x4 lhs, uint3x4 rhs)
  bool3x4 op_LessThan(uint3x4 lhs, UInt32 rhs)
  bool3x4 op_LessThan(UInt32 lhs, uint3x4 rhs)
  bool3x4 op_LessThanOrEqual(uint3x4 lhs, uint3x4 rhs)
  bool3x4 op_LessThanOrEqual(uint3x4 lhs, UInt32 rhs)
  bool3x4 op_LessThanOrEqual(UInt32 lhs, uint3x4 rhs)
  bool3x4 op_GreaterThan(uint3x4 lhs, uint3x4 rhs)
  bool3x4 op_GreaterThan(uint3x4 lhs, UInt32 rhs)
  bool3x4 op_GreaterThan(UInt32 lhs, uint3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(uint3x4 lhs, uint3x4 rhs)
  bool3x4 op_GreaterThanOrEqual(uint3x4 lhs, UInt32 rhs)
  bool3x4 op_GreaterThanOrEqual(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_UnaryNegation(uint3x4 val)
  uint3x4 op_UnaryPlus(uint3x4 val)
  uint3x4 op_LeftShift(uint3x4 x, int n)
  uint3x4 op_RightShift(uint3x4 x, int n)
  bool3x4 op_Equality(uint3x4 lhs, uint3x4 rhs)
  bool3x4 op_Equality(uint3x4 lhs, UInt32 rhs)
  bool3x4 op_Equality(UInt32 lhs, uint3x4 rhs)
  bool3x4 op_Inequality(uint3x4 lhs, uint3x4 rhs)
  bool3x4 op_Inequality(uint3x4 lhs, UInt32 rhs)
  bool3x4 op_Inequality(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_OnesComplement(uint3x4 val)
  uint3x4 op_BitwiseAnd(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_BitwiseAnd(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_BitwiseAnd(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_BitwiseOr(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_BitwiseOr(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_BitwiseOr(UInt32 lhs, uint3x4 rhs)
  uint3x4 op_ExclusiveOr(uint3x4 lhs, uint3x4 rhs)
  uint3x4 op_ExclusiveOr(uint3x4 lhs, UInt32 rhs)
  uint3x4 op_ExclusiveOr(UInt32 lhs, uint3x4 rhs)
  uint3& get_Item(int index)
  bool Equals(uint3x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint4
Наследуется от: ValueType
Поля:
  UInt32 x
  UInt32 y
  UInt32 z
  UInt32 w
  uint4 zero
Свойства:
  uint4 xxxx
  uint4 xxxy
  uint4 xxxz
  uint4 xxxw
  uint4 xxyx
  uint4 xxyy
  uint4 xxyz
  uint4 xxyw
  uint4 xxzx
  uint4 xxzy
  uint4 xxzz
  uint4 xxzw
  uint4 xxwx
  uint4 xxwy
  uint4 xxwz
  uint4 xxww
  uint4 xyxx
  uint4 xyxy
  uint4 xyxz
  uint4 xyxw
  uint4 xyyx
  uint4 xyyy
  uint4 xyyz
  uint4 xyyw
  uint4 xyzx
  uint4 xyzy
  uint4 xyzz
  uint4 xyzw
  uint4 xywx
  uint4 xywy
  uint4 xywz
  uint4 xyww
  uint4 xzxx
  uint4 xzxy
  uint4 xzxz
  uint4 xzxw
  uint4 xzyx
  uint4 xzyy
  uint4 xzyz
  uint4 xzyw
  uint4 xzzx
  uint4 xzzy
  uint4 xzzz
  uint4 xzzw
  uint4 xzwx
  uint4 xzwy
  uint4 xzwz
  uint4 xzww
  uint4 xwxx
  uint4 xwxy
  uint4 xwxz
  uint4 xwxw
  uint4 xwyx
  uint4 xwyy
  uint4 xwyz
  uint4 xwyw
  uint4 xwzx
  uint4 xwzy
  uint4 xwzz
  uint4 xwzw
  uint4 xwwx
  uint4 xwwy
  uint4 xwwz
  uint4 xwww
  uint4 yxxx
  uint4 yxxy
  uint4 yxxz
  uint4 yxxw
  uint4 yxyx
  uint4 yxyy
  uint4 yxyz
  uint4 yxyw
  uint4 yxzx
  uint4 yxzy
  uint4 yxzz
  uint4 yxzw
  uint4 yxwx
  uint4 yxwy
  uint4 yxwz
  uint4 yxww
  uint4 yyxx
  uint4 yyxy
  uint4 yyxz
  uint4 yyxw
  uint4 yyyx
  uint4 yyyy
  uint4 yyyz
  uint4 yyyw
  uint4 yyzx
  uint4 yyzy
  uint4 yyzz
  uint4 yyzw
  uint4 yywx
  uint4 yywy
  uint4 yywz
  uint4 yyww
  uint4 yzxx
  uint4 yzxy
  uint4 yzxz
  uint4 yzxw
  uint4 yzyx
  uint4 yzyy
  uint4 yzyz
  uint4 yzyw
  uint4 yzzx
  uint4 yzzy
  uint4 yzzz
  uint4 yzzw
  uint4 yzwx
  uint4 yzwy
  uint4 yzwz
  uint4 yzww
  uint4 ywxx
  uint4 ywxy
  uint4 ywxz
  uint4 ywxw
  uint4 ywyx
  uint4 ywyy
  uint4 ywyz
  uint4 ywyw
  uint4 ywzx
  uint4 ywzy
  uint4 ywzz
  uint4 ywzw
  uint4 ywwx
  uint4 ywwy
  uint4 ywwz
  uint4 ywww
  uint4 zxxx
  uint4 zxxy
  uint4 zxxz
  uint4 zxxw
  uint4 zxyx
  uint4 zxyy
  uint4 zxyz
  uint4 zxyw
  uint4 zxzx
  uint4 zxzy
  uint4 zxzz
  uint4 zxzw
  uint4 zxwx
  uint4 zxwy
  uint4 zxwz
  uint4 zxww
  uint4 zyxx
  uint4 zyxy
  uint4 zyxz
  uint4 zyxw
  uint4 zyyx
  uint4 zyyy
  uint4 zyyz
  uint4 zyyw
  uint4 zyzx
  uint4 zyzy
  uint4 zyzz
  uint4 zyzw
  uint4 zywx
  uint4 zywy
  uint4 zywz
  uint4 zyww
  uint4 zzxx
  uint4 zzxy
  uint4 zzxz
  uint4 zzxw
  uint4 zzyx
  uint4 zzyy
  uint4 zzyz
  uint4 zzyw
  uint4 zzzx
  uint4 zzzy
  uint4 zzzz
  uint4 zzzw
  uint4 zzwx
  uint4 zzwy
  uint4 zzwz
  uint4 zzww
  uint4 zwxx
  uint4 zwxy
  uint4 zwxz
  uint4 zwxw
  uint4 zwyx
  uint4 zwyy
  uint4 zwyz
  uint4 zwyw
  uint4 zwzx
  uint4 zwzy
  uint4 zwzz
  uint4 zwzw
  uint4 zwwx
  uint4 zwwy
  uint4 zwwz
  uint4 zwww
  uint4 wxxx
  uint4 wxxy
  uint4 wxxz
  uint4 wxxw
  uint4 wxyx
  uint4 wxyy
  uint4 wxyz
  uint4 wxyw
  uint4 wxzx
  uint4 wxzy
  uint4 wxzz
  uint4 wxzw
  uint4 wxwx
  uint4 wxwy
  uint4 wxwz
  uint4 wxww
  uint4 wyxx
  uint4 wyxy
  uint4 wyxz
  uint4 wyxw
  uint4 wyyx
  uint4 wyyy
  uint4 wyyz
  uint4 wyyw
  uint4 wyzx
  uint4 wyzy
  uint4 wyzz
  uint4 wyzw
  uint4 wywx
  uint4 wywy
  uint4 wywz
  uint4 wyww
  uint4 wzxx
  uint4 wzxy
  uint4 wzxz
  uint4 wzxw
  uint4 wzyx
  uint4 wzyy
  uint4 wzyz
  uint4 wzyw
  uint4 wzzx
  uint4 wzzy
  uint4 wzzz
  uint4 wzzw
  uint4 wzwx
  uint4 wzwy
  uint4 wzwz
  uint4 wzww
  uint4 wwxx
  uint4 wwxy
  uint4 wwxz
  uint4 wwxw
  uint4 wwyx
  uint4 wwyy
  uint4 wwyz
  uint4 wwyw
  uint4 wwzx
  uint4 wwzy
  uint4 wwzz
  uint4 wwzw
  uint4 wwwx
  uint4 wwwy
  uint4 wwwz
  uint4 wwww
  uint3 xxx
  uint3 xxy
  uint3 xxz
  uint3 xxw
  uint3 xyx
  uint3 xyy
  uint3 xyz
  uint3 xyw
  uint3 xzx
  uint3 xzy
  uint3 xzz
  uint3 xzw
  uint3 xwx
  uint3 xwy
  uint3 xwz
  uint3 xww
  uint3 yxx
  uint3 yxy
  uint3 yxz
  uint3 yxw
  uint3 yyx
  uint3 yyy
  uint3 yyz
  uint3 yyw
  uint3 yzx
  uint3 yzy
  uint3 yzz
  uint3 yzw
  uint3 ywx
  uint3 ywy
  uint3 ywz
  uint3 yww
  uint3 zxx
  uint3 zxy
  uint3 zxz
  uint3 zxw
  uint3 zyx
  uint3 zyy
  uint3 zyz
  uint3 zyw
  uint3 zzx
  uint3 zzy
  uint3 zzz
  uint3 zzw
  uint3 zwx
  uint3 zwy
  uint3 zwz
  uint3 zww
  uint3 wxx
  uint3 wxy
  uint3 wxz
  uint3 wxw
  uint3 wyx
  uint3 wyy
  uint3 wyz
  uint3 wyw
  uint3 wzx
  uint3 wzy
  uint3 wzz
  uint3 wzw
  uint3 wwx
  uint3 wwy
  uint3 wwz
  uint3 www
  uint2 xx
  uint2 xy
  uint2 xz
  uint2 xw
  uint2 yx
  uint2 yy
  uint2 yz
  uint2 yw
  uint2 zx
  uint2 zy
  uint2 zz
  uint2 zw
  uint2 wx
  uint2 wy
  uint2 wz
  uint2 ww
  UInt32 Item
Методы:
  void .ctor(UInt32 x, UInt32 y, UInt32 z, UInt32 w)
  void .ctor(UInt32 x, UInt32 y, uint2 zw)
  void .ctor(UInt32 x, uint2 yz, UInt32 w)
  void .ctor(UInt32 x, uint3 yzw)
  void .ctor(uint2 xy, UInt32 z, UInt32 w)
  void .ctor(uint2 xy, uint2 zw)
  void .ctor(uint3 xyz, UInt32 w)
  void .ctor(uint4 xyzw)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool4 v)
  void .ctor(int v)
  void .ctor(int4 v)
  void .ctor(float v)
  void .ctor(float4 v)
  void .ctor(double v)
  void .ctor(double4 v)
  uint4 op_Implicit(UInt32 v)
  uint4 op_Explicit(bool v)
  uint4 op_Explicit(bool4 v)
  uint4 op_Explicit(int v)
  uint4 op_Explicit(int4 v)
  uint4 op_Explicit(float v)
  uint4 op_Explicit(float4 v)
  uint4 op_Explicit(double v)
  uint4 op_Explicit(double4 v)
  uint4 op_Multiply(uint4 lhs, uint4 rhs)
  uint4 op_Multiply(uint4 lhs, UInt32 rhs)
  uint4 op_Multiply(UInt32 lhs, uint4 rhs)
  uint4 op_Addition(uint4 lhs, uint4 rhs)
  uint4 op_Addition(uint4 lhs, UInt32 rhs)
  uint4 op_Addition(UInt32 lhs, uint4 rhs)
  uint4 op_Subtraction(uint4 lhs, uint4 rhs)
  uint4 op_Subtraction(uint4 lhs, UInt32 rhs)
  uint4 op_Subtraction(UInt32 lhs, uint4 rhs)
  uint4 op_Division(uint4 lhs, uint4 rhs)
  uint4 op_Division(uint4 lhs, UInt32 rhs)
  uint4 op_Division(UInt32 lhs, uint4 rhs)
  uint4 op_Modulus(uint4 lhs, uint4 rhs)
  uint4 op_Modulus(uint4 lhs, UInt32 rhs)
  uint4 op_Modulus(UInt32 lhs, uint4 rhs)
  uint4 op_Increment(uint4 val)
  uint4 op_Decrement(uint4 val)
  bool4 op_LessThan(uint4 lhs, uint4 rhs)
  bool4 op_LessThan(uint4 lhs, UInt32 rhs)
  bool4 op_LessThan(UInt32 lhs, uint4 rhs)
  bool4 op_LessThanOrEqual(uint4 lhs, uint4 rhs)
  bool4 op_LessThanOrEqual(uint4 lhs, UInt32 rhs)
  bool4 op_LessThanOrEqual(UInt32 lhs, uint4 rhs)
  bool4 op_GreaterThan(uint4 lhs, uint4 rhs)
  bool4 op_GreaterThan(uint4 lhs, UInt32 rhs)
  bool4 op_GreaterThan(UInt32 lhs, uint4 rhs)
  bool4 op_GreaterThanOrEqual(uint4 lhs, uint4 rhs)
  bool4 op_GreaterThanOrEqual(uint4 lhs, UInt32 rhs)
  bool4 op_GreaterThanOrEqual(UInt32 lhs, uint4 rhs)
  uint4 op_UnaryNegation(uint4 val)
  uint4 op_UnaryPlus(uint4 val)
  uint4 op_LeftShift(uint4 x, int n)
  uint4 op_RightShift(uint4 x, int n)
  bool4 op_Equality(uint4 lhs, uint4 rhs)
  bool4 op_Equality(uint4 lhs, UInt32 rhs)
  bool4 op_Equality(UInt32 lhs, uint4 rhs)
  bool4 op_Inequality(uint4 lhs, uint4 rhs)
  bool4 op_Inequality(uint4 lhs, UInt32 rhs)
  bool4 op_Inequality(UInt32 lhs, uint4 rhs)
  uint4 op_OnesComplement(uint4 val)
  uint4 op_BitwiseAnd(uint4 lhs, uint4 rhs)
  uint4 op_BitwiseAnd(uint4 lhs, UInt32 rhs)
  uint4 op_BitwiseAnd(UInt32 lhs, uint4 rhs)
  uint4 op_BitwiseOr(uint4 lhs, uint4 rhs)
  uint4 op_BitwiseOr(uint4 lhs, UInt32 rhs)
  uint4 op_BitwiseOr(UInt32 lhs, uint4 rhs)
  uint4 op_ExclusiveOr(uint4 lhs, uint4 rhs)
  uint4 op_ExclusiveOr(uint4 lhs, UInt32 rhs)
  uint4 op_ExclusiveOr(UInt32 lhs, uint4 rhs)
  uint4 get_xxxx()
  uint4 get_xxxy()
  uint4 get_xxxz()
  uint4 get_xxxw()
  uint4 get_xxyx()
  uint4 get_xxyy()
  uint4 get_xxyz()
  uint4 get_xxyw()
  uint4 get_xxzx()
  uint4 get_xxzy()
  uint4 get_xxzz()
  uint4 get_xxzw()
  uint4 get_xxwx()
  uint4 get_xxwy()
  uint4 get_xxwz()
  uint4 get_xxww()
  uint4 get_xyxx()
  uint4 get_xyxy()
  uint4 get_xyxz()
  uint4 get_xyxw()
  uint4 get_xyyx()
  uint4 get_xyyy()
  uint4 get_xyyz()
  uint4 get_xyyw()
  uint4 get_xyzx()
  uint4 get_xyzy()
  uint4 get_xyzz()
  uint4 get_xyzw()
  void set_xyzw(uint4 value)
  uint4 get_xywx()
  uint4 get_xywy()
  uint4 get_xywz()
  void set_xywz(uint4 value)
  uint4 get_xyww()
  uint4 get_xzxx()
  uint4 get_xzxy()
  uint4 get_xzxz()
  uint4 get_xzxw()
  uint4 get_xzyx()
  uint4 get_xzyy()
  uint4 get_xzyz()
  uint4 get_xzyw()
  void set_xzyw(uint4 value)
  uint4 get_xzzx()
  uint4 get_xzzy()
  uint4 get_xzzz()
  uint4 get_xzzw()
  uint4 get_xzwx()
  uint4 get_xzwy()
  void set_xzwy(uint4 value)
  uint4 get_xzwz()
  uint4 get_xzww()
  uint4 get_xwxx()
  uint4 get_xwxy()
  uint4 get_xwxz()
  uint4 get_xwxw()
  uint4 get_xwyx()
  uint4 get_xwyy()
  uint4 get_xwyz()
  void set_xwyz(uint4 value)
  uint4 get_xwyw()
  uint4 get_xwzx()
  uint4 get_xwzy()
  void set_xwzy(uint4 value)
  uint4 get_xwzz()
  uint4 get_xwzw()
  uint4 get_xwwx()
  uint4 get_xwwy()
  uint4 get_xwwz()
  uint4 get_xwww()
  uint4 get_yxxx()
  uint4 get_yxxy()
  uint4 get_yxxz()
  uint4 get_yxxw()
  uint4 get_yxyx()
  uint4 get_yxyy()
  uint4 get_yxyz()
  uint4 get_yxyw()
  uint4 get_yxzx()
  uint4 get_yxzy()
  uint4 get_yxzz()
  uint4 get_yxzw()
  void set_yxzw(uint4 value)
  uint4 get_yxwx()
  uint4 get_yxwy()
  uint4 get_yxwz()
  void set_yxwz(uint4 value)
  uint4 get_yxww()
  uint4 get_yyxx()
  uint4 get_yyxy()
  uint4 get_yyxz()
  uint4 get_yyxw()
  uint4 get_yyyx()
  uint4 get_yyyy()
  uint4 get_yyyz()
  uint4 get_yyyw()
  uint4 get_yyzx()
  uint4 get_yyzy()
  uint4 get_yyzz()
  uint4 get_yyzw()
  uint4 get_yywx()
  uint4 get_yywy()
  uint4 get_yywz()
  uint4 get_yyww()
  uint4 get_yzxx()
  uint4 get_yzxy()
  uint4 get_yzxz()
  uint4 get_yzxw()
  void set_yzxw(uint4 value)
  uint4 get_yzyx()
  uint4 get_yzyy()
  uint4 get_yzyz()
  uint4 get_yzyw()
  uint4 get_yzzx()
  uint4 get_yzzy()
  uint4 get_yzzz()
  uint4 get_yzzw()
  uint4 get_yzwx()
  void set_yzwx(uint4 value)
  uint4 get_yzwy()
  uint4 get_yzwz()
  uint4 get_yzww()
  uint4 get_ywxx()
  uint4 get_ywxy()
  uint4 get_ywxz()
  void set_ywxz(uint4 value)
  uint4 get_ywxw()
  uint4 get_ywyx()
  uint4 get_ywyy()
  uint4 get_ywyz()
  uint4 get_ywyw()
  uint4 get_ywzx()
  void set_ywzx(uint4 value)
  uint4 get_ywzy()
  uint4 get_ywzz()
  uint4 get_ywzw()
  uint4 get_ywwx()
  uint4 get_ywwy()
  uint4 get_ywwz()
  uint4 get_ywww()
  uint4 get_zxxx()
  uint4 get_zxxy()
  uint4 get_zxxz()
  uint4 get_zxxw()
  uint4 get_zxyx()
  uint4 get_zxyy()
  uint4 get_zxyz()
  uint4 get_zxyw()
  void set_zxyw(uint4 value)
  uint4 get_zxzx()
  uint4 get_zxzy()
  uint4 get_zxzz()
  uint4 get_zxzw()
  uint4 get_zxwx()
  uint4 get_zxwy()
  void set_zxwy(uint4 value)
  uint4 get_zxwz()
  uint4 get_zxww()
  uint4 get_zyxx()
  uint4 get_zyxy()
  uint4 get_zyxz()
  uint4 get_zyxw()
  void set_zyxw(uint4 value)
  uint4 get_zyyx()
  uint4 get_zyyy()
  uint4 get_zyyz()
  uint4 get_zyyw()
  uint4 get_zyzx()
  uint4 get_zyzy()
  uint4 get_zyzz()
  uint4 get_zyzw()
  uint4 get_zywx()
  void set_zywx(uint4 value)
  uint4 get_zywy()
  uint4 get_zywz()
  uint4 get_zyww()
  uint4 get_zzxx()
  uint4 get_zzxy()
  uint4 get_zzxz()
  uint4 get_zzxw()
  uint4 get_zzyx()
  uint4 get_zzyy()
  uint4 get_zzyz()
  uint4 get_zzyw()
  uint4 get_zzzx()
  uint4 get_zzzy()
  uint4 get_zzzz()
  uint4 get_zzzw()
  uint4 get_zzwx()
  uint4 get_zzwy()
  uint4 get_zzwz()
  uint4 get_zzww()
  uint4 get_zwxx()
  uint4 get_zwxy()
  void set_zwxy(uint4 value)
  uint4 get_zwxz()
  uint4 get_zwxw()
  uint4 get_zwyx()
  void set_zwyx(uint4 value)
  uint4 get_zwyy()
  uint4 get_zwyz()
  uint4 get_zwyw()
  uint4 get_zwzx()
  uint4 get_zwzy()
  uint4 get_zwzz()
  uint4 get_zwzw()
  uint4 get_zwwx()
  uint4 get_zwwy()
  uint4 get_zwwz()
  uint4 get_zwww()
  uint4 get_wxxx()
  uint4 get_wxxy()
  uint4 get_wxxz()
  uint4 get_wxxw()
  uint4 get_wxyx()
  uint4 get_wxyy()
  uint4 get_wxyz()
  void set_wxyz(uint4 value)
  uint4 get_wxyw()
  uint4 get_wxzx()
  uint4 get_wxzy()
  void set_wxzy(uint4 value)
  uint4 get_wxzz()
  uint4 get_wxzw()
  uint4 get_wxwx()
  uint4 get_wxwy()
  uint4 get_wxwz()
  uint4 get_wxww()
  uint4 get_wyxx()
  uint4 get_wyxy()
  uint4 get_wyxz()
  void set_wyxz(uint4 value)
  uint4 get_wyxw()
  uint4 get_wyyx()
  uint4 get_wyyy()
  uint4 get_wyyz()
  uint4 get_wyyw()
  uint4 get_wyzx()
  void set_wyzx(uint4 value)
  uint4 get_wyzy()
  uint4 get_wyzz()
  uint4 get_wyzw()
  uint4 get_wywx()
  uint4 get_wywy()
  uint4 get_wywz()
  uint4 get_wyww()
  uint4 get_wzxx()
  uint4 get_wzxy()
  void set_wzxy(uint4 value)
  uint4 get_wzxz()
  uint4 get_wzxw()
  uint4 get_wzyx()
  void set_wzyx(uint4 value)
  uint4 get_wzyy()
  uint4 get_wzyz()
  uint4 get_wzyw()
  uint4 get_wzzx()
  uint4 get_wzzy()
  uint4 get_wzzz()
  uint4 get_wzzw()
  uint4 get_wzwx()
  uint4 get_wzwy()
  uint4 get_wzwz()
  uint4 get_wzww()
  uint4 get_wwxx()
  uint4 get_wwxy()
  uint4 get_wwxz()
  uint4 get_wwxw()
  uint4 get_wwyx()
  uint4 get_wwyy()
  uint4 get_wwyz()
  uint4 get_wwyw()
  uint4 get_wwzx()
  uint4 get_wwzy()
  uint4 get_wwzz()
  uint4 get_wwzw()
  uint4 get_wwwx()
  uint4 get_wwwy()
  uint4 get_wwwz()
  uint4 get_wwww()
  uint3 get_xxx()
  uint3 get_xxy()
  uint3 get_xxz()
  uint3 get_xxw()
  uint3 get_xyx()
  uint3 get_xyy()
  uint3 get_xyz()
  void set_xyz(uint3 value)
  uint3 get_xyw()
  void set_xyw(uint3 value)
  uint3 get_xzx()
  uint3 get_xzy()
  void set_xzy(uint3 value)
  uint3 get_xzz()
  uint3 get_xzw()
  void set_xzw(uint3 value)
  uint3 get_xwx()
  uint3 get_xwy()
  void set_xwy(uint3 value)
  uint3 get_xwz()
  void set_xwz(uint3 value)
  uint3 get_xww()
  uint3 get_yxx()
  uint3 get_yxy()
  uint3 get_yxz()
  void set_yxz(uint3 value)
  uint3 get_yxw()
  void set_yxw(uint3 value)
  uint3 get_yyx()
  uint3 get_yyy()
  uint3 get_yyz()
  uint3 get_yyw()
  uint3 get_yzx()
  void set_yzx(uint3 value)
  uint3 get_yzy()
  uint3 get_yzz()
  uint3 get_yzw()
  void set_yzw(uint3 value)
  uint3 get_ywx()
  void set_ywx(uint3 value)
  uint3 get_ywy()
  uint3 get_ywz()
  void set_ywz(uint3 value)
  uint3 get_yww()
  uint3 get_zxx()
  uint3 get_zxy()
  void set_zxy(uint3 value)
  uint3 get_zxz()
  uint3 get_zxw()
  void set_zxw(uint3 value)
  uint3 get_zyx()
  void set_zyx(uint3 value)
  uint3 get_zyy()
  uint3 get_zyz()
  uint3 get_zyw()
  void set_zyw(uint3 value)
  uint3 get_zzx()
  uint3 get_zzy()
  uint3 get_zzz()
  uint3 get_zzw()
  uint3 get_zwx()
  void set_zwx(uint3 value)
  uint3 get_zwy()
  void set_zwy(uint3 value)
  uint3 get_zwz()
  uint3 get_zww()
  uint3 get_wxx()
  uint3 get_wxy()
  void set_wxy(uint3 value)
  uint3 get_wxz()
  void set_wxz(uint3 value)
  uint3 get_wxw()
  uint3 get_wyx()
  void set_wyx(uint3 value)
  uint3 get_wyy()
  uint3 get_wyz()
  void set_wyz(uint3 value)
  uint3 get_wyw()
  uint3 get_wzx()
  void set_wzx(uint3 value)
  uint3 get_wzy()
  void set_wzy(uint3 value)
  uint3 get_wzz()
  uint3 get_wzw()
  uint3 get_wwx()
  uint3 get_wwy()
  uint3 get_wwz()
  uint3 get_www()
  uint2 get_xx()
  uint2 get_xy()
  void set_xy(uint2 value)
  uint2 get_xz()
  void set_xz(uint2 value)
  uint2 get_xw()
  void set_xw(uint2 value)
  uint2 get_yx()
  void set_yx(uint2 value)
  uint2 get_yy()
  uint2 get_yz()
  void set_yz(uint2 value)
  uint2 get_yw()
  void set_yw(uint2 value)
  uint2 get_zx()
  void set_zx(uint2 value)
  uint2 get_zy()
  void set_zy(uint2 value)
  uint2 get_zz()
  uint2 get_zw()
  void set_zw(uint2 value)
  uint2 get_wx()
  void set_wx(uint2 value)
  uint2 get_wy()
  void set_wy(uint2 value)
  uint2 get_wz()
  void set_wz(uint2 value)
  uint2 get_ww()
  UInt32 get_Item(int index)
  void set_Item(int index, UInt32 value)
  bool Equals(uint4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint4x2
Наследуется от: ValueType
Поля:
  uint4 c0
  uint4 c1
  uint4x2 zero
Свойства:
  uint4& Item
Методы:
  void .ctor(uint4 c0, uint4 c1)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m10, UInt32 m11, UInt32 m20, UInt32 m21, UInt32 m30, UInt32 m31)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool4x2 v)
  void .ctor(int v)
  void .ctor(int4x2 v)
  void .ctor(float v)
  void .ctor(float4x2 v)
  void .ctor(double v)
  void .ctor(double4x2 v)
  uint4x2 op_Implicit(UInt32 v)
  uint4x2 op_Explicit(bool v)
  uint4x2 op_Explicit(bool4x2 v)
  uint4x2 op_Explicit(int v)
  uint4x2 op_Explicit(int4x2 v)
  uint4x2 op_Explicit(float v)
  uint4x2 op_Explicit(float4x2 v)
  uint4x2 op_Explicit(double v)
  uint4x2 op_Explicit(double4x2 v)
  uint4x2 op_Multiply(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_Multiply(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_Multiply(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_Addition(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_Addition(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_Addition(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_Subtraction(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_Subtraction(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_Subtraction(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_Division(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_Division(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_Division(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_Modulus(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_Modulus(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_Modulus(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_Increment(uint4x2 val)
  uint4x2 op_Decrement(uint4x2 val)
  bool4x2 op_LessThan(uint4x2 lhs, uint4x2 rhs)
  bool4x2 op_LessThan(uint4x2 lhs, UInt32 rhs)
  bool4x2 op_LessThan(UInt32 lhs, uint4x2 rhs)
  bool4x2 op_LessThanOrEqual(uint4x2 lhs, uint4x2 rhs)
  bool4x2 op_LessThanOrEqual(uint4x2 lhs, UInt32 rhs)
  bool4x2 op_LessThanOrEqual(UInt32 lhs, uint4x2 rhs)
  bool4x2 op_GreaterThan(uint4x2 lhs, uint4x2 rhs)
  bool4x2 op_GreaterThan(uint4x2 lhs, UInt32 rhs)
  bool4x2 op_GreaterThan(UInt32 lhs, uint4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(uint4x2 lhs, uint4x2 rhs)
  bool4x2 op_GreaterThanOrEqual(uint4x2 lhs, UInt32 rhs)
  bool4x2 op_GreaterThanOrEqual(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_UnaryNegation(uint4x2 val)
  uint4x2 op_UnaryPlus(uint4x2 val)
  uint4x2 op_LeftShift(uint4x2 x, int n)
  uint4x2 op_RightShift(uint4x2 x, int n)
  bool4x2 op_Equality(uint4x2 lhs, uint4x2 rhs)
  bool4x2 op_Equality(uint4x2 lhs, UInt32 rhs)
  bool4x2 op_Equality(UInt32 lhs, uint4x2 rhs)
  bool4x2 op_Inequality(uint4x2 lhs, uint4x2 rhs)
  bool4x2 op_Inequality(uint4x2 lhs, UInt32 rhs)
  bool4x2 op_Inequality(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_OnesComplement(uint4x2 val)
  uint4x2 op_BitwiseAnd(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_BitwiseAnd(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_BitwiseAnd(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_BitwiseOr(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_BitwiseOr(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_BitwiseOr(UInt32 lhs, uint4x2 rhs)
  uint4x2 op_ExclusiveOr(uint4x2 lhs, uint4x2 rhs)
  uint4x2 op_ExclusiveOr(uint4x2 lhs, UInt32 rhs)
  uint4x2 op_ExclusiveOr(UInt32 lhs, uint4x2 rhs)
  uint4& get_Item(int index)
  bool Equals(uint4x2 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint4x3
Наследуется от: ValueType
Поля:
  uint4 c0
  uint4 c1
  uint4 c2
  uint4x3 zero
Свойства:
  uint4& Item
Методы:
  void .ctor(uint4 c0, uint4 c1, uint4 c2)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m30, UInt32 m31, UInt32 m32)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool4x3 v)
  void .ctor(int v)
  void .ctor(int4x3 v)
  void .ctor(float v)
  void .ctor(float4x3 v)
  void .ctor(double v)
  void .ctor(double4x3 v)
  uint4x3 op_Implicit(UInt32 v)
  uint4x3 op_Explicit(bool v)
  uint4x3 op_Explicit(bool4x3 v)
  uint4x3 op_Explicit(int v)
  uint4x3 op_Explicit(int4x3 v)
  uint4x3 op_Explicit(float v)
  uint4x3 op_Explicit(float4x3 v)
  uint4x3 op_Explicit(double v)
  uint4x3 op_Explicit(double4x3 v)
  uint4x3 op_Multiply(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_Multiply(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_Multiply(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_Addition(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_Addition(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_Addition(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_Subtraction(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_Subtraction(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_Subtraction(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_Division(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_Division(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_Division(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_Modulus(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_Modulus(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_Modulus(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_Increment(uint4x3 val)
  uint4x3 op_Decrement(uint4x3 val)
  bool4x3 op_LessThan(uint4x3 lhs, uint4x3 rhs)
  bool4x3 op_LessThan(uint4x3 lhs, UInt32 rhs)
  bool4x3 op_LessThan(UInt32 lhs, uint4x3 rhs)
  bool4x3 op_LessThanOrEqual(uint4x3 lhs, uint4x3 rhs)
  bool4x3 op_LessThanOrEqual(uint4x3 lhs, UInt32 rhs)
  bool4x3 op_LessThanOrEqual(UInt32 lhs, uint4x3 rhs)
  bool4x3 op_GreaterThan(uint4x3 lhs, uint4x3 rhs)
  bool4x3 op_GreaterThan(uint4x3 lhs, UInt32 rhs)
  bool4x3 op_GreaterThan(UInt32 lhs, uint4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(uint4x3 lhs, uint4x3 rhs)
  bool4x3 op_GreaterThanOrEqual(uint4x3 lhs, UInt32 rhs)
  bool4x3 op_GreaterThanOrEqual(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_UnaryNegation(uint4x3 val)
  uint4x3 op_UnaryPlus(uint4x3 val)
  uint4x3 op_LeftShift(uint4x3 x, int n)
  uint4x3 op_RightShift(uint4x3 x, int n)
  bool4x3 op_Equality(uint4x3 lhs, uint4x3 rhs)
  bool4x3 op_Equality(uint4x3 lhs, UInt32 rhs)
  bool4x3 op_Equality(UInt32 lhs, uint4x3 rhs)
  bool4x3 op_Inequality(uint4x3 lhs, uint4x3 rhs)
  bool4x3 op_Inequality(uint4x3 lhs, UInt32 rhs)
  bool4x3 op_Inequality(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_OnesComplement(uint4x3 val)
  uint4x3 op_BitwiseAnd(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_BitwiseAnd(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_BitwiseAnd(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_BitwiseOr(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_BitwiseOr(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_BitwiseOr(UInt32 lhs, uint4x3 rhs)
  uint4x3 op_ExclusiveOr(uint4x3 lhs, uint4x3 rhs)
  uint4x3 op_ExclusiveOr(uint4x3 lhs, UInt32 rhs)
  uint4x3 op_ExclusiveOr(UInt32 lhs, uint4x3 rhs)
  uint4& get_Item(int index)
  bool Equals(uint4x3 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: Unity.Mathematics.uint4x4
Наследуется от: ValueType
Поля:
  uint4 c0
  uint4 c1
  uint4 c2
  uint4 c3
  uint4x4 identity
  uint4x4 zero
Свойства:
  uint4& Item
Методы:
  void .ctor(uint4 c0, uint4 c1, uint4 c2, uint4 c3)
  void .ctor(UInt32 m00, UInt32 m01, UInt32 m02, UInt32 m03, UInt32 m10, UInt32 m11, UInt32 m12, UInt32 m13, UInt32 m20, UInt32 m21, UInt32 m22, UInt32 m23, UInt32 m30, UInt32 m31, UInt32 m32, UInt32 m33)
  void .ctor(UInt32 v)
  void .ctor(bool v)
  void .ctor(bool4x4 v)
  void .ctor(int v)
  void .ctor(int4x4 v)
  void .ctor(float v)
  void .ctor(float4x4 v)
  void .ctor(double v)
  void .ctor(double4x4 v)
  uint4x4 op_Implicit(UInt32 v)
  uint4x4 op_Explicit(bool v)
  uint4x4 op_Explicit(bool4x4 v)
  uint4x4 op_Explicit(int v)
  uint4x4 op_Explicit(int4x4 v)
  uint4x4 op_Explicit(float v)
  uint4x4 op_Explicit(float4x4 v)
  uint4x4 op_Explicit(double v)
  uint4x4 op_Explicit(double4x4 v)
  uint4x4 op_Multiply(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_Multiply(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_Multiply(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_Addition(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_Addition(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_Addition(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_Subtraction(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_Subtraction(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_Subtraction(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_Division(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_Division(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_Division(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_Modulus(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_Modulus(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_Modulus(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_Increment(uint4x4 val)
  uint4x4 op_Decrement(uint4x4 val)
  bool4x4 op_LessThan(uint4x4 lhs, uint4x4 rhs)
  bool4x4 op_LessThan(uint4x4 lhs, UInt32 rhs)
  bool4x4 op_LessThan(UInt32 lhs, uint4x4 rhs)
  bool4x4 op_LessThanOrEqual(uint4x4 lhs, uint4x4 rhs)
  bool4x4 op_LessThanOrEqual(uint4x4 lhs, UInt32 rhs)
  bool4x4 op_LessThanOrEqual(UInt32 lhs, uint4x4 rhs)
  bool4x4 op_GreaterThan(uint4x4 lhs, uint4x4 rhs)
  bool4x4 op_GreaterThan(uint4x4 lhs, UInt32 rhs)
  bool4x4 op_GreaterThan(UInt32 lhs, uint4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(uint4x4 lhs, uint4x4 rhs)
  bool4x4 op_GreaterThanOrEqual(uint4x4 lhs, UInt32 rhs)
  bool4x4 op_GreaterThanOrEqual(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_UnaryNegation(uint4x4 val)
  uint4x4 op_UnaryPlus(uint4x4 val)
  uint4x4 op_LeftShift(uint4x4 x, int n)
  uint4x4 op_RightShift(uint4x4 x, int n)
  bool4x4 op_Equality(uint4x4 lhs, uint4x4 rhs)
  bool4x4 op_Equality(uint4x4 lhs, UInt32 rhs)
  bool4x4 op_Equality(UInt32 lhs, uint4x4 rhs)
  bool4x4 op_Inequality(uint4x4 lhs, uint4x4 rhs)
  bool4x4 op_Inequality(uint4x4 lhs, UInt32 rhs)
  bool4x4 op_Inequality(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_OnesComplement(uint4x4 val)
  uint4x4 op_BitwiseAnd(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_BitwiseAnd(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_BitwiseAnd(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_BitwiseOr(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_BitwiseOr(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_BitwiseOr(UInt32 lhs, uint4x4 rhs)
  uint4x4 op_ExclusiveOr(uint4x4 lhs, uint4x4 rhs)
  uint4x4 op_ExclusiveOr(uint4x4 lhs, UInt32 rhs)
  uint4x4 op_ExclusiveOr(UInt32 lhs, uint4x4 rhs)
  uint4& get_Item(int index)
  bool Equals(uint4x4 rhs)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
--------------------------------------------------
Класс: Unity.Mathematics.Geometry.MinMaxAABB
Наследуется от: ValueType
Поля:
  float3 Min
  float3 Max
Свойства:
  float3 Extents
  float3 HalfExtents
  float3 Center
  bool IsValid
  float SurfaceArea
Методы:
  void .ctor(float3 min, float3 max)
  MinMaxAABB CreateFromCenterAndExtents(float3 center, float3 extents)
  MinMaxAABB CreateFromCenterAndHalfExtents(float3 center, float3 halfExtents)
  float3 get_Extents()
  float3 get_HalfExtents()
  float3 get_Center()
  bool get_IsValid()
  float get_SurfaceArea()
  bool Contains(float3 point)
  bool Contains(MinMaxAABB aabb)
  bool Overlaps(MinMaxAABB aabb)
  void Expand(float signedDistance)
  void Encapsulate(MinMaxAABB aabb)
  void Encapsulate(float3 point)
  bool Equals(MinMaxAABB other)
  string ToString()
--------------------------------------------------
Класс: Unity.Mathematics.Geometry.Math
Наследуется от: object
Поля:
Свойства:
Методы:
  MinMaxAABB Transform(RigidTransform transform, MinMaxAABB aabb)
  MinMaxAABB Transform(float4x4 transform, MinMaxAABB aabb)
  MinMaxAABB Transform(float3x3 transform, MinMaxAABB aabb)
--------------------------------------------------
Класс: Unity.Mathematics.Geometry.Plane
Наследуется от: ValueType
Поля:
  float4 NormalAndDistance
Свойства:
  float3 Normal
  float Distance
  Plane Flipped
Методы:
  void .ctor(float coefficientA, float coefficientB, float coefficientC, float coefficientD)
  void .ctor(float3 normal, float distance)
  void .ctor(float3 normal, float3 pointInPlane)
  void .ctor(float3 vector1InPlane, float3 vector2InPlane, float3 pointInPlane)
  Plane CreateFromUnitNormalAndDistance(float3 unitNormal, float distance)
  Plane CreateFromUnitNormalAndPointInPlane(float3 unitNormal, float3 pointInPlane)
  float3 get_Normal()
  void set_Normal(float3 value)
  float get_Distance()
  void set_Distance(float value)
  Plane Normalize(Plane plane)
  float4 Normalize(float4 planeCoefficients)
  float SignedDistanceToPoint(float3 point)
  float3 Projection(float3 point)
  Plane get_Flipped()
  float4 op_Implicit(Plane plane)
  void CheckPlaneIsNormalized()
--------------------------------------------------
