Сборка: UnityEngine.Physics2DModule.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PhysicsScene2D
Наследуется от: ValueType
Поля:
  int m_Handle
Свойства:
Методы:
  string ToString()
  bool op_Equality(PhysicsScene2D lhs, PhysicsScene2D rhs)
  bool op_Inequality(PhysicsScene2D lhs, PhysicsScene2D rhs)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(PhysicsScene2D other)
  bool IsValid()
  bool IsValid_Internal(PhysicsScene2D physicsScene)
  bool IsEmpty()
  bool IsEmpty_Internal(PhysicsScene2D physicsScene)
  bool Simulate(float step)
  RaycastHit2D Linecast(Vector2 start, Vector2 end, int layerMask)
  RaycastHit2D Linecast(Vector2 start, Vector2 end, ContactFilter2D contactFilter)
  RaycastHit2D Linecast_Internal(PhysicsScene2D physicsScene, Vector2 start, Vector2 end, ContactFilter2D contactFilter)
  int Linecast(Vector2 start, Vector2 end, RaycastHit2D[] results, int layerMask)
  int Linecast(Vector2 start, Vector2 end, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int LinecastArray_Internal(PhysicsScene2D physicsScene, Vector2 start, Vector2 end, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Linecast(Vector2 start, Vector2 end, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  int LinecastNonAllocList_Internal(PhysicsScene2D physicsScene, Vector2 start, Vector2 end, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction, float distance, int layerMask)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter)
  RaycastHit2D Raycast_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter)
  int Raycast(Vector2 origin, Vector2 direction, float distance, RaycastHit2D[] results, int layerMask)
  int Raycast(Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int RaycastArray_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Raycast(Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  int RaycastList_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter)
  RaycastHit2D CircleCast_Internal(PhysicsScene2D physicsScene, Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter)
  int CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, RaycastHit2D[] results, int layerMask)
  int CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int CircleCastArray_Internal(PhysicsScene2D physicsScene, Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  int CircleCastList_Internal(PhysicsScene2D physicsScene, Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter)
  RaycastHit2D BoxCast_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter)
  int BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, RaycastHit2D[] results, int layerMask)
  int BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int BoxCastArray_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  int BoxCastList_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter)
  RaycastHit2D CapsuleCast_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter)
  int CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, RaycastHit2D[] results, int layerMask)
  int CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int CapsuleCastArray_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  int CapsuleCastList_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  RaycastHit2D GetRayIntersection(Ray ray, float distance, int layerMask)
  RaycastHit2D GetRayIntersection_Internal(PhysicsScene2D physicsScene, Vector3 origin, Vector3 direction, float distance, int layerMask)
  int GetRayIntersection(Ray ray, float distance, RaycastHit2D[] results, int layerMask)
  int GetRayIntersectionArray_Internal(PhysicsScene2D physicsScene, Vector3 origin, Vector3 direction, float distance, int layerMask, RaycastHit2D[] results)
  int GetRayIntersectionList_Internal(PhysicsScene2D physicsScene, Vector3 origin, Vector3 direction, float distance, int layerMask, List`1<RaycastHit2D> results)
  Collider2D OverlapPoint(Vector2 point, int layerMask)
  Collider2D OverlapPoint(Vector2 point, ContactFilter2D contactFilter)
  Collider2D OverlapPoint_Internal(PhysicsScene2D physicsScene, Vector2 point, ContactFilter2D contactFilter)
  int OverlapPoint(Vector2 point, Collider2D[] results, int layerMask)
  int OverlapPoint(Vector2 point, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapPointArray_Internal(PhysicsScene2D physicsScene, Vector2 point, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapPoint(Vector2 point, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapPointList_Internal(PhysicsScene2D physicsScene, Vector2 point, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D OverlapCircle(Vector2 point, float radius, int layerMask)
  Collider2D OverlapCircle(Vector2 point, float radius, ContactFilter2D contactFilter)
  Collider2D OverlapCircle_Internal(PhysicsScene2D physicsScene, Vector2 point, float radius, ContactFilter2D contactFilter)
  int OverlapCircle(Vector2 point, float radius, Collider2D[] results, int layerMask)
  int OverlapCircle(Vector2 point, float radius, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCircleArray_Internal(PhysicsScene2D physicsScene, Vector2 point, float radius, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCircle(Vector2 point, float radius, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapCircleList_Internal(PhysicsScene2D physicsScene, Vector2 point, float radius, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D OverlapBox(Vector2 point, Vector2 size, float angle, int layerMask)
  Collider2D OverlapBox(Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter)
  Collider2D OverlapBox_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter)
  int OverlapBox(Vector2 point, Vector2 size, float angle, Collider2D[] results, int layerMask)
  int OverlapBox(Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapBoxArray_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapBox(Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapBoxList_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D OverlapArea(Vector2 pointA, Vector2 pointB, int layerMask)
  Collider2D OverlapArea(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter)
  Collider2D OverlapAreaToBoxArray_Internal(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter)
  int OverlapArea(Vector2 pointA, Vector2 pointB, Collider2D[] results, int layerMask)
  int OverlapArea(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapAreaToBoxArray_Internal(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapArea(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapAreaToBoxList_Internal(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask)
  Collider2D OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter)
  Collider2D OverlapCapsule_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter)
  int OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, Collider2D[] results, int layerMask)
  int OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCapsuleArray_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapCapsuleList_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapCollider(Collider2D collider, Collider2D[] results, int layerMask)
  int OverlapCollider(Collider2D collider, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapColliderArray_Internal(Collider2D collider, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCollider(Collider2D collider, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapColliderList_Internal(Collider2D collider, ContactFilter2D contactFilter, List`1<Collider2D> results)
  bool IsValid_Internal_Injected(PhysicsScene2D& physicsScene)
  bool IsEmpty_Internal_Injected(PhysicsScene2D& physicsScene)
  void Linecast_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& start, Vector2& end, ContactFilter2D& contactFilter, RaycastHit2D& ret)
  int LinecastArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& start, Vector2& end, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int LinecastNonAllocList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& start, Vector2& end, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
  void Raycast_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D& ret)
  int RaycastArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int RaycastList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& direction, float distance, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
  void CircleCast_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, float radius, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D& ret)
  int CircleCastArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, float radius, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int CircleCastList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, float radius, Vector2& direction, float distance, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
  void BoxCast_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D& ret)
  int BoxCastArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int BoxCastList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
  void CapsuleCast_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, CapsuleDirection2D capsuleDirection, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D& ret)
  int CapsuleCastArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, CapsuleDirection2D capsuleDirection, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int CapsuleCastList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, CapsuleDirection2D capsuleDirection, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
  void GetRayIntersection_Internal_Injected(PhysicsScene2D& physicsScene, Vector3& origin, Vector3& direction, float distance, int layerMask, RaycastHit2D& ret)
  int GetRayIntersectionArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector3& origin, Vector3& direction, float distance, int layerMask, RaycastHit2D[] results)
  int GetRayIntersectionList_Internal_Injected(PhysicsScene2D& physicsScene, Vector3& origin, Vector3& direction, float distance, int layerMask, List`1<RaycastHit2D> results)
  Collider2D OverlapPoint_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, ContactFilter2D& contactFilter)
  int OverlapPointArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, ContactFilter2D& contactFilter, Collider2D[] results)
  int OverlapPointList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, ContactFilter2D& contactFilter, List`1<Collider2D> results)
  Collider2D OverlapCircle_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, float radius, ContactFilter2D& contactFilter)
  int OverlapCircleArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, float radius, ContactFilter2D& contactFilter, Collider2D[] results)
  int OverlapCircleList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, float radius, ContactFilter2D& contactFilter, List`1<Collider2D> results)
  Collider2D OverlapBox_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, float angle, ContactFilter2D& contactFilter)
  int OverlapBoxArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, float angle, ContactFilter2D& contactFilter, Collider2D[] results)
  int OverlapBoxList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, float angle, ContactFilter2D& contactFilter, List`1<Collider2D> results)
  Collider2D OverlapCapsule_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, CapsuleDirection2D direction, float angle, ContactFilter2D& contactFilter)
  int OverlapCapsuleArray_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, CapsuleDirection2D direction, float angle, ContactFilter2D& contactFilter, Collider2D[] results)
  int OverlapCapsuleList_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, CapsuleDirection2D direction, float angle, ContactFilter2D& contactFilter, List`1<Collider2D> results)
  int OverlapColliderArray_Internal_Injected(Collider2D collider, ContactFilter2D& contactFilter, Collider2D[] results)
  int OverlapColliderList_Internal_Injected(Collider2D collider, ContactFilter2D& contactFilter, List`1<Collider2D> results)
--------------------------------------------------
Класс: UnityEngine.PhysicsSceneExtensions2D
Наследуется от: object
Поля:
Свойства:
Методы:
  PhysicsScene2D GetPhysicsScene2D(Scene scene)
  PhysicsScene2D GetPhysicsScene_Internal(Scene scene)
  void GetPhysicsScene_Internal_Injected(Scene& scene, PhysicsScene2D& ret)
--------------------------------------------------
Класс: UnityEngine.Physics2D
Наследуется от: object
Поля:
  int IgnoreRaycastLayer
  int DefaultRaycastLayers
  int AllLayers
  int MaxPolygonShapeVertices
  List`1<Rigidbody2D> m_LastDisabledRigidbody2D
Свойства:
  PhysicsScene2D defaultPhysicsScene
  int velocityIterations
  int positionIterations
  Vector2 gravity
  bool queriesHitTriggers
  bool queriesStartInColliders
  bool callbacksOnDisable
  bool reuseCollisionCallbacks
  bool autoSyncTransforms
  SimulationMode2D simulationMode
  PhysicsJobOptions2D jobOptions
  float velocityThreshold
  float maxLinearCorrection
  float maxAngularCorrection
  float maxTranslationSpeed
  float maxRotationSpeed
  float defaultContactOffset
  float baumgarteScale
  float baumgarteTOIScale
  float timeToSleep
  float linearSleepTolerance
  float angularSleepTolerance
  bool alwaysShowColliders
  bool showColliderSleep
  bool showColliderContacts
  bool showColliderAABB
  float contactArrowScale
  Color colliderAwakeColor
  Color colliderAsleepColor
  Color colliderContactColor
  Color colliderAABBColor
Методы:
  PhysicsScene2D get_defaultPhysicsScene()
  int get_velocityIterations()
  void set_velocityIterations(int value)
  int get_positionIterations()
  void set_positionIterations(int value)
  Vector2 get_gravity()
  void set_gravity(Vector2 value)
  bool get_queriesHitTriggers()
  void set_queriesHitTriggers(bool value)
  bool get_queriesStartInColliders()
  void set_queriesStartInColliders(bool value)
  bool get_callbacksOnDisable()
  void set_callbacksOnDisable(bool value)
  bool get_reuseCollisionCallbacks()
  void set_reuseCollisionCallbacks(bool value)
  bool get_autoSyncTransforms()
  void set_autoSyncTransforms(bool value)
  SimulationMode2D get_simulationMode()
  void set_simulationMode(SimulationMode2D value)
  PhysicsJobOptions2D get_jobOptions()
  void set_jobOptions(PhysicsJobOptions2D value)
  float get_velocityThreshold()
  void set_velocityThreshold(float value)
  float get_maxLinearCorrection()
  void set_maxLinearCorrection(float value)
  float get_maxAngularCorrection()
  void set_maxAngularCorrection(float value)
  float get_maxTranslationSpeed()
  void set_maxTranslationSpeed(float value)
  float get_maxRotationSpeed()
  void set_maxRotationSpeed(float value)
  float get_defaultContactOffset()
  void set_defaultContactOffset(float value)
  float get_baumgarteScale()
  void set_baumgarteScale(float value)
  float get_baumgarteTOIScale()
  void set_baumgarteTOIScale(float value)
  float get_timeToSleep()
  void set_timeToSleep(float value)
  float get_linearSleepTolerance()
  void set_linearSleepTolerance(float value)
  float get_angularSleepTolerance()
  void set_angularSleepTolerance(float value)
  bool get_alwaysShowColliders()
  void set_alwaysShowColliders(bool value)
  bool get_showColliderSleep()
  void set_showColliderSleep(bool value)
  bool get_showColliderContacts()
  void set_showColliderContacts(bool value)
  bool get_showColliderAABB()
  void set_showColliderAABB(bool value)
  float get_contactArrowScale()
  void set_contactArrowScale(float value)
  Color get_colliderAwakeColor()
  void set_colliderAwakeColor(Color value)
  Color get_colliderAsleepColor()
  void set_colliderAsleepColor(Color value)
  Color get_colliderContactColor()
  void set_colliderContactColor(Color value)
  Color get_colliderAABBColor()
  void set_colliderAABBColor(Color value)
  bool Simulate(float step)
  bool Simulate_Internal(PhysicsScene2D physicsScene, float step)
  void SyncTransforms()
  void IgnoreCollision(Collider2D collider1, Collider2D collider2)
  void IgnoreCollision(Collider2D collider1, Collider2D collider2, bool ignore)
  bool GetIgnoreCollision(Collider2D collider1, Collider2D collider2)
  void IgnoreLayerCollision(int layer1, int layer2)
  void IgnoreLayerCollision(int layer1, int layer2, bool ignore)
  void IgnoreLayerCollision_Internal(int layer1, int layer2, bool ignore)
  bool GetIgnoreLayerCollision(int layer1, int layer2)
  bool GetIgnoreLayerCollision_Internal(int layer1, int layer2)
  void SetLayerCollisionMask(int layer, int layerMask)
  void SetLayerCollisionMask_Internal(int layer, int layerMask)
  int GetLayerCollisionMask(int layer)
  int GetLayerCollisionMask_Internal(int layer)
  bool IsTouching(Collider2D collider1, Collider2D collider2)
  bool IsTouching(Collider2D collider1, Collider2D collider2, ContactFilter2D contactFilter)
  bool IsTouching_TwoCollidersWithFilter(Collider2D collider1, Collider2D collider2, ContactFilter2D contactFilter)
  bool IsTouching(Collider2D collider, ContactFilter2D contactFilter)
  bool IsTouching_SingleColliderWithFilter(Collider2D collider, ContactFilter2D contactFilter)
  bool IsTouchingLayers(Collider2D collider)
  bool IsTouchingLayers(Collider2D collider, int layerMask)
  ColliderDistance2D Distance(Collider2D colliderA, Collider2D colliderB)
  ColliderDistance2D Distance_Internal(Collider2D colliderA, Collider2D colliderB)
  Vector2 ClosestPoint(Vector2 position, Collider2D collider)
  Vector2 ClosestPoint(Vector2 position, Rigidbody2D rigidbody)
  Vector2 ClosestPoint_Collider(Vector2 position, Collider2D collider)
  Vector2 ClosestPoint_Rigidbody(Vector2 position, Rigidbody2D rigidbody)
  RaycastHit2D Linecast(Vector2 start, Vector2 end)
  RaycastHit2D Linecast(Vector2 start, Vector2 end, int layerMask)
  RaycastHit2D Linecast(Vector2 start, Vector2 end, int layerMask, float minDepth)
  RaycastHit2D Linecast(Vector2 start, Vector2 end, int layerMask, float minDepth, float maxDepth)
  int Linecast(Vector2 start, Vector2 end, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Linecast(Vector2 start, Vector2 end, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  RaycastHit2D[] LinecastAll(Vector2 start, Vector2 end)
  RaycastHit2D[] LinecastAll(Vector2 start, Vector2 end, int layerMask)
  RaycastHit2D[] LinecastAll(Vector2 start, Vector2 end, int layerMask, float minDepth)
  RaycastHit2D[] LinecastAll(Vector2 start, Vector2 end, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D[] LinecastAll_Internal(PhysicsScene2D physicsScene, Vector2 start, Vector2 end, ContactFilter2D contactFilter)
  int LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results)
  int LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results, int layerMask)
  int LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results, int layerMask, float minDepth)
  int LinecastNonAlloc(Vector2 start, Vector2 end, RaycastHit2D[] results, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction, float distance)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction, float distance, int layerMask)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D Raycast(Vector2 origin, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  int Raycast(Vector2 origin, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Raycast(Vector2 origin, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int Raycast(Vector2 origin, Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance)
  int RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results)
  int RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, float distance)
  int RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask)
  int RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth)
  int RaycastNonAlloc(Vector2 origin, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D[] RaycastAll(Vector2 origin, Vector2 direction)
  RaycastHit2D[] RaycastAll(Vector2 origin, Vector2 direction, float distance)
  RaycastHit2D[] RaycastAll(Vector2 origin, Vector2 direction, float distance, int layerMask)
  RaycastHit2D[] RaycastAll(Vector2 origin, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D[] RaycastAll(Vector2 origin, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D[] RaycastAll_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 direction, float distance, ContactFilter2D contactFilter)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction, float distance)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D CircleCast(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  int CircleCast(Vector2 origin, float radius, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int CircleCast(Vector2 origin, float radius, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int CircleCast(Vector2 origin, float radius, Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance)
  RaycastHit2D[] CircleCastAll(Vector2 origin, float radius, Vector2 direction)
  RaycastHit2D[] CircleCastAll(Vector2 origin, float radius, Vector2 direction, float distance)
  RaycastHit2D[] CircleCastAll(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask)
  RaycastHit2D[] CircleCastAll(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D[] CircleCastAll(Vector2 origin, float radius, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D[] CircleCastAll_Internal(PhysicsScene2D physicsScene, Vector2 origin, float radius, Vector2 direction, float distance, ContactFilter2D contactFilter)
  int CircleCastNonAlloc(Vector2 origin, float radius, Vector2 direction, RaycastHit2D[] results)
  int CircleCastNonAlloc(Vector2 origin, float radius, Vector2 direction, RaycastHit2D[] results, float distance)
  int CircleCastNonAlloc(Vector2 origin, float radius, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask)
  int CircleCastNonAlloc(Vector2 origin, float radius, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth)
  int CircleCastNonAlloc(Vector2 origin, float radius, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  int BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int BoxCast(Vector2 origin, Vector2 size, float angle, Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance)
  RaycastHit2D[] BoxCastAll(Vector2 origin, Vector2 size, float angle, Vector2 direction)
  RaycastHit2D[] BoxCastAll(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance)
  RaycastHit2D[] BoxCastAll(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask)
  RaycastHit2D[] BoxCastAll(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D[] BoxCastAll(Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D[] BoxCastAll_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter)
  int BoxCastNonAlloc(Vector2 origin, Vector2 size, float angle, Vector2 direction, RaycastHit2D[] results)
  int BoxCastNonAlloc(Vector2 origin, Vector2 size, float angle, Vector2 direction, RaycastHit2D[] results, float distance)
  int BoxCastNonAlloc(Vector2 origin, Vector2 size, float angle, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask)
  int BoxCastNonAlloc(Vector2 origin, Vector2 size, float angle, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth)
  int BoxCastNonAlloc(Vector2 origin, Vector2 size, float angle, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  int CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int CapsuleCast(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance)
  RaycastHit2D[] CapsuleCastAll(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction)
  RaycastHit2D[] CapsuleCastAll(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance)
  RaycastHit2D[] CapsuleCastAll_Internal(PhysicsScene2D physicsScene, Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, ContactFilter2D contactFilter)
  RaycastHit2D[] CapsuleCastAll(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask)
  RaycastHit2D[] CapsuleCastAll(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask, float minDepth)
  RaycastHit2D[] CapsuleCastAll(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth)
  int CapsuleCastNonAlloc(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, RaycastHit2D[] results)
  int CapsuleCastNonAlloc(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, RaycastHit2D[] results, float distance)
  int CapsuleCastNonAlloc(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask)
  int CapsuleCastNonAlloc(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth)
  int CapsuleCastNonAlloc(Vector2 origin, Vector2 size, CapsuleDirection2D capsuleDirection, float angle, Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth, float maxDepth)
  RaycastHit2D GetRayIntersection(Ray ray)
  RaycastHit2D GetRayIntersection(Ray ray, float distance)
  RaycastHit2D GetRayIntersection(Ray ray, float distance, int layerMask)
  RaycastHit2D[] GetRayIntersectionAll(Ray ray)
  RaycastHit2D[] GetRayIntersectionAll(Ray ray, float distance)
  RaycastHit2D[] GetRayIntersectionAll(Ray ray, float distance, int layerMask)
  RaycastHit2D[] GetRayIntersectionAll_Internal(PhysicsScene2D physicsScene, Vector3 origin, Vector3 direction, float distance, int layerMask)
  int GetRayIntersectionNonAlloc(Ray ray, RaycastHit2D[] results)
  int GetRayIntersectionNonAlloc(Ray ray, RaycastHit2D[] results, float distance)
  int GetRayIntersectionNonAlloc(Ray ray, RaycastHit2D[] results, float distance, int layerMask)
  Collider2D OverlapPoint(Vector2 point)
  Collider2D OverlapPoint(Vector2 point, int layerMask)
  Collider2D OverlapPoint(Vector2 point, int layerMask, float minDepth)
  Collider2D OverlapPoint(Vector2 point, int layerMask, float minDepth, float maxDepth)
  int OverlapPoint(Vector2 point, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapPoint(Vector2 point, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D[] OverlapPointAll(Vector2 point)
  Collider2D[] OverlapPointAll(Vector2 point, int layerMask)
  Collider2D[] OverlapPointAll(Vector2 point, int layerMask, float minDepth)
  Collider2D[] OverlapPointAll(Vector2 point, int layerMask, float minDepth, float maxDepth)
  Collider2D[] OverlapPointAll_Internal(PhysicsScene2D physicsScene, Vector2 point, ContactFilter2D contactFilter)
  int OverlapPointNonAlloc(Vector2 point, Collider2D[] results)
  int OverlapPointNonAlloc(Vector2 point, Collider2D[] results, int layerMask)
  int OverlapPointNonAlloc(Vector2 point, Collider2D[] results, int layerMask, float minDepth)
  int OverlapPointNonAlloc(Vector2 point, Collider2D[] results, int layerMask, float minDepth, float maxDepth)
  Collider2D OverlapCircle(Vector2 point, float radius)
  Collider2D OverlapCircle(Vector2 point, float radius, int layerMask)
  Collider2D OverlapCircle(Vector2 point, float radius, int layerMask, float minDepth)
  Collider2D OverlapCircle(Vector2 point, float radius, int layerMask, float minDepth, float maxDepth)
  int OverlapCircle(Vector2 point, float radius, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCircle(Vector2 point, float radius, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D[] OverlapCircleAll(Vector2 point, float radius)
  Collider2D[] OverlapCircleAll(Vector2 point, float radius, int layerMask)
  Collider2D[] OverlapCircleAll(Vector2 point, float radius, int layerMask, float minDepth)
  Collider2D[] OverlapCircleAll(Vector2 point, float radius, int layerMask, float minDepth, float maxDepth)
  Collider2D[] OverlapCircleAll_Internal(PhysicsScene2D physicsScene, Vector2 point, float radius, ContactFilter2D contactFilter)
  int OverlapCircleNonAlloc(Vector2 point, float radius, Collider2D[] results)
  int OverlapCircleNonAlloc(Vector2 point, float radius, Collider2D[] results, int layerMask)
  int OverlapCircleNonAlloc(Vector2 point, float radius, Collider2D[] results, int layerMask, float minDepth)
  int OverlapCircleNonAlloc(Vector2 point, float radius, Collider2D[] results, int layerMask, float minDepth, float maxDepth)
  Collider2D OverlapBox(Vector2 point, Vector2 size, float angle)
  Collider2D OverlapBox(Vector2 point, Vector2 size, float angle, int layerMask)
  Collider2D OverlapBox(Vector2 point, Vector2 size, float angle, int layerMask, float minDepth)
  Collider2D OverlapBox(Vector2 point, Vector2 size, float angle, int layerMask, float minDepth, float maxDepth)
  int OverlapBox(Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapBox(Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D[] OverlapBoxAll(Vector2 point, Vector2 size, float angle)
  Collider2D[] OverlapBoxAll(Vector2 point, Vector2 size, float angle, int layerMask)
  Collider2D[] OverlapBoxAll(Vector2 point, Vector2 size, float angle, int layerMask, float minDepth)
  Collider2D[] OverlapBoxAll(Vector2 point, Vector2 size, float angle, int layerMask, float minDepth, float maxDepth)
  Collider2D[] OverlapBoxAll_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, float angle, ContactFilter2D contactFilter)
  int OverlapBoxNonAlloc(Vector2 point, Vector2 size, float angle, Collider2D[] results)
  int OverlapBoxNonAlloc(Vector2 point, Vector2 size, float angle, Collider2D[] results, int layerMask)
  int OverlapBoxNonAlloc(Vector2 point, Vector2 size, float angle, Collider2D[] results, int layerMask, float minDepth)
  int OverlapBoxNonAlloc(Vector2 point, Vector2 size, float angle, Collider2D[] results, int layerMask, float minDepth, float maxDepth)
  Collider2D OverlapArea(Vector2 pointA, Vector2 pointB)
  Collider2D OverlapArea(Vector2 pointA, Vector2 pointB, int layerMask)
  Collider2D OverlapArea(Vector2 pointA, Vector2 pointB, int layerMask, float minDepth)
  Collider2D OverlapArea(Vector2 pointA, Vector2 pointB, int layerMask, float minDepth, float maxDepth)
  int OverlapArea(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapArea(Vector2 pointA, Vector2 pointB, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D[] OverlapAreaAll(Vector2 pointA, Vector2 pointB)
  Collider2D[] OverlapAreaAll(Vector2 pointA, Vector2 pointB, int layerMask)
  Collider2D[] OverlapAreaAll(Vector2 pointA, Vector2 pointB, int layerMask, float minDepth)
  Collider2D[] OverlapAreaAll(Vector2 pointA, Vector2 pointB, int layerMask, float minDepth, float maxDepth)
  Collider2D[] OverlapAreaAllToBox_Internal(Vector2 pointA, Vector2 pointB, int layerMask, float minDepth, float maxDepth)
  int OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results)
  int OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results, int layerMask)
  int OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results, int layerMask, float minDepth)
  int OverlapAreaNonAlloc(Vector2 pointA, Vector2 pointB, Collider2D[] results, int layerMask, float minDepth, float maxDepth)
  Collider2D OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle)
  Collider2D OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask)
  Collider2D OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask, float minDepth)
  Collider2D OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask, float minDepth, float maxDepth)
  int OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCapsule(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter, List`1<Collider2D> results)
  Collider2D[] OverlapCapsuleAll(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle)
  Collider2D[] OverlapCapsuleAll(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask)
  Collider2D[] OverlapCapsuleAll(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask, float minDepth)
  Collider2D[] OverlapCapsuleAll(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, int layerMask, float minDepth, float maxDepth)
  Collider2D[] OverlapCapsuleAll_Internal(PhysicsScene2D physicsScene, Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, ContactFilter2D contactFilter)
  int OverlapCapsuleNonAlloc(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, Collider2D[] results)
  int OverlapCapsuleNonAlloc(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, Collider2D[] results, int layerMask)
  int OverlapCapsuleNonAlloc(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, Collider2D[] results, int layerMask, float minDepth)
  int OverlapCapsuleNonAlloc(Vector2 point, Vector2 size, CapsuleDirection2D direction, float angle, Collider2D[] results, int layerMask, float minDepth, float maxDepth)
  int OverlapCollider(Collider2D collider, ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCollider(Collider2D collider, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int GetContacts(Collider2D collider1, Collider2D collider2, ContactFilter2D contactFilter, ContactPoint2D[] contacts)
  int GetContacts(Collider2D collider, ContactPoint2D[] contacts)
  int GetContacts(Collider2D collider, ContactFilter2D contactFilter, ContactPoint2D[] contacts)
  int GetContacts(Collider2D collider, Collider2D[] colliders)
  int GetContacts(Collider2D collider, ContactFilter2D contactFilter, Collider2D[] colliders)
  int GetContacts(Rigidbody2D rigidbody, ContactPoint2D[] contacts)
  int GetContacts(Rigidbody2D rigidbody, ContactFilter2D contactFilter, ContactPoint2D[] contacts)
  int GetContacts(Rigidbody2D rigidbody, Collider2D[] colliders)
  int GetContacts(Rigidbody2D rigidbody, ContactFilter2D contactFilter, Collider2D[] colliders)
  int GetColliderContactsArray(Collider2D collider, ContactFilter2D contactFilter, ContactPoint2D[] results)
  int GetColliderColliderContactsArray(Collider2D collider1, Collider2D collider2, ContactFilter2D contactFilter, ContactPoint2D[] results)
  int GetRigidbodyContactsArray(Rigidbody2D rigidbody, ContactFilter2D contactFilter, ContactPoint2D[] results)
  int GetColliderContactsCollidersOnlyArray(Collider2D collider, ContactFilter2D contactFilter, Collider2D[] results)
  int GetRigidbodyContactsCollidersOnlyArray(Rigidbody2D rigidbody, ContactFilter2D contactFilter, Collider2D[] results)
  int GetContacts(Collider2D collider1, Collider2D collider2, ContactFilter2D contactFilter, List`1<ContactPoint2D> contacts)
  int GetContacts(Collider2D collider, List`1<ContactPoint2D> contacts)
  int GetContacts(Collider2D collider, ContactFilter2D contactFilter, List`1<ContactPoint2D> contacts)
  int GetContacts(Collider2D collider, List`1<Collider2D> colliders)
  int GetContacts(Collider2D collider, ContactFilter2D contactFilter, List`1<Collider2D> colliders)
  int GetContacts(Rigidbody2D rigidbody, List`1<ContactPoint2D> contacts)
  int GetContacts(Rigidbody2D rigidbody, ContactFilter2D contactFilter, List`1<ContactPoint2D> contacts)
  int GetContacts(Rigidbody2D rigidbody, List`1<Collider2D> colliders)
  int GetContacts(Rigidbody2D rigidbody, ContactFilter2D contactFilter, List`1<Collider2D> colliders)
  int GetColliderContactsList(Collider2D collider, ContactFilter2D contactFilter, List`1<ContactPoint2D> results)
  int GetColliderColliderContactsList(Collider2D collider1, Collider2D collider2, ContactFilter2D contactFilter, List`1<ContactPoint2D> results)
  int GetRigidbodyContactsList(Rigidbody2D rigidbody, ContactFilter2D contactFilter, List`1<ContactPoint2D> results)
  int GetColliderContactsCollidersOnlyList(Collider2D collider, ContactFilter2D contactFilter, List`1<Collider2D> results)
  int GetRigidbodyContactsCollidersOnlyList(Rigidbody2D rigidbody, ContactFilter2D contactFilter, List`1<Collider2D> results)
  void SetEditorDragMovement(bool dragging, GameObject[] objs)
  void .ctor()
  void .cctor()
  void get_gravity_Injected(Vector2& ret)
  void set_gravity_Injected(Vector2& value)
  void get_jobOptions_Injected(PhysicsJobOptions2D& ret)
  void set_jobOptions_Injected(PhysicsJobOptions2D& value)
  void get_colliderAwakeColor_Injected(Color& ret)
  void set_colliderAwakeColor_Injected(Color& value)
  void get_colliderAsleepColor_Injected(Color& ret)
  void set_colliderAsleepColor_Injected(Color& value)
  void get_colliderContactColor_Injected(Color& ret)
  void set_colliderContactColor_Injected(Color& value)
  void get_colliderAABBColor_Injected(Color& ret)
  void set_colliderAABBColor_Injected(Color& value)
  bool Simulate_Internal_Injected(PhysicsScene2D& physicsScene, float step)
  bool IsTouching_TwoCollidersWithFilter_Injected(Collider2D collider1, Collider2D collider2, ContactFilter2D& contactFilter)
  bool IsTouching_SingleColliderWithFilter_Injected(Collider2D collider, ContactFilter2D& contactFilter)
  void Distance_Internal_Injected(Collider2D colliderA, Collider2D colliderB, ColliderDistance2D& ret)
  void ClosestPoint_Collider_Injected(Vector2& position, Collider2D collider, Vector2& ret)
  void ClosestPoint_Rigidbody_Injected(Vector2& position, Rigidbody2D rigidbody, Vector2& ret)
  RaycastHit2D[] LinecastAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& start, Vector2& end, ContactFilter2D& contactFilter)
  RaycastHit2D[] RaycastAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& direction, float distance, ContactFilter2D& contactFilter)
  RaycastHit2D[] CircleCastAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, float radius, Vector2& direction, float distance, ContactFilter2D& contactFilter)
  RaycastHit2D[] BoxCastAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter)
  RaycastHit2D[] CapsuleCastAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& origin, Vector2& size, CapsuleDirection2D capsuleDirection, float angle, Vector2& direction, float distance, ContactFilter2D& contactFilter)
  RaycastHit2D[] GetRayIntersectionAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector3& origin, Vector3& direction, float distance, int layerMask)
  Collider2D[] OverlapPointAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, ContactFilter2D& contactFilter)
  Collider2D[] OverlapCircleAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, float radius, ContactFilter2D& contactFilter)
  Collider2D[] OverlapBoxAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, float angle, ContactFilter2D& contactFilter)
  Collider2D[] OverlapCapsuleAll_Internal_Injected(PhysicsScene2D& physicsScene, Vector2& point, Vector2& size, CapsuleDirection2D direction, float angle, ContactFilter2D& contactFilter)
  int GetColliderContactsArray_Injected(Collider2D collider, ContactFilter2D& contactFilter, ContactPoint2D[] results)
  int GetColliderColliderContactsArray_Injected(Collider2D collider1, Collider2D collider2, ContactFilter2D& contactFilter, ContactPoint2D[] results)
  int GetRigidbodyContactsArray_Injected(Rigidbody2D rigidbody, ContactFilter2D& contactFilter, ContactPoint2D[] results)
  int GetColliderContactsCollidersOnlyArray_Injected(Collider2D collider, ContactFilter2D& contactFilter, Collider2D[] results)
  int GetRigidbodyContactsCollidersOnlyArray_Injected(Rigidbody2D rigidbody, ContactFilter2D& contactFilter, Collider2D[] results)
  int GetColliderContactsList_Injected(Collider2D collider, ContactFilter2D& contactFilter, List`1<ContactPoint2D> results)
  int GetColliderColliderContactsList_Injected(Collider2D collider1, Collider2D collider2, ContactFilter2D& contactFilter, List`1<ContactPoint2D> results)
  int GetRigidbodyContactsList_Injected(Rigidbody2D rigidbody, ContactFilter2D& contactFilter, List`1<ContactPoint2D> results)
  int GetColliderContactsCollidersOnlyList_Injected(Collider2D collider, ContactFilter2D& contactFilter, List`1<Collider2D> results)
  int GetRigidbodyContactsCollidersOnlyList_Injected(Rigidbody2D rigidbody, ContactFilter2D& contactFilter, List`1<Collider2D> results)
--------------------------------------------------
Класс: UnityEngine.SimulationMode2D
Наследуется от: Enum
Поля:
  int value__
  SimulationMode2D FixedUpdate
  SimulationMode2D Update
  SimulationMode2D Script
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CapsuleDirection2D
Наследуется от: Enum
Поля:
  int value__
  CapsuleDirection2D Vertical
  CapsuleDirection2D Horizontal
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RigidbodyConstraints2D
Наследуется от: Enum
Поля:
  int value__
  RigidbodyConstraints2D None
  RigidbodyConstraints2D FreezePositionX
  RigidbodyConstraints2D FreezePositionY
  RigidbodyConstraints2D FreezeRotation
  RigidbodyConstraints2D FreezePosition
  RigidbodyConstraints2D FreezeAll
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RigidbodyInterpolation2D
Наследуется от: Enum
Поля:
  int value__
  RigidbodyInterpolation2D None
  RigidbodyInterpolation2D Interpolate
  RigidbodyInterpolation2D Extrapolate
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RigidbodySleepMode2D
Наследуется от: Enum
Поля:
  int value__
  RigidbodySleepMode2D NeverSleep
  RigidbodySleepMode2D StartAwake
  RigidbodySleepMode2D StartAsleep
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CollisionDetectionMode2D
Наследуется от: Enum
Поля:
  int value__
  CollisionDetectionMode2D None
  CollisionDetectionMode2D Discrete
  CollisionDetectionMode2D Continuous
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RigidbodyType2D
Наследуется от: Enum
Поля:
  int value__
  RigidbodyType2D Dynamic
  RigidbodyType2D Kinematic
  RigidbodyType2D Static
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ForceMode2D
Наследуется от: Enum
Поля:
  int value__
  ForceMode2D Force
  ForceMode2D Impulse
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ColliderErrorState2D
Наследуется от: Enum
Поля:
  int value__
  ColliderErrorState2D None
  ColliderErrorState2D NoShapes
  ColliderErrorState2D RemovedShapes
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.JointLimitState2D
Наследуется от: Enum
Поля:
  int value__
  JointLimitState2D Inactive
  JointLimitState2D LowerLimit
  JointLimitState2D UpperLimit
  JointLimitState2D EqualLimits
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.EffectorSelection2D
Наследуется от: Enum
Поля:
  int value__
  EffectorSelection2D Rigidbody
  EffectorSelection2D Collider
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.EffectorForceMode2D
Наследуется от: Enum
Поля:
  int value__
  EffectorForceMode2D Constant
  EffectorForceMode2D InverseLinear
  EffectorForceMode2D InverseSquared
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PhysicsShapeType2D
Наследуется от: Enum
Поля:
  int value__
  PhysicsShapeType2D Circle
  PhysicsShapeType2D Capsule
  PhysicsShapeType2D Polygon
  PhysicsShapeType2D Edges
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PhysicsShape2D
Наследуется от: ValueType
Поля:
  PhysicsShapeType2D m_ShapeType
  float m_Radius
  int m_VertexStartIndex
  int m_VertexCount
  int m_UseAdjacentStart
  int m_UseAdjacentEnd
  Vector2 m_AdjacentStart
  Vector2 m_AdjacentEnd
Свойства:
  PhysicsShapeType2D shapeType
  float radius
  int vertexStartIndex
  int vertexCount
  bool useAdjacentStart
  bool useAdjacentEnd
  Vector2 adjacentStart
  Vector2 adjacentEnd
Методы:
  PhysicsShapeType2D get_shapeType()
  void set_shapeType(PhysicsShapeType2D value)
  float get_radius()
  void set_radius(float value)
  int get_vertexStartIndex()
  void set_vertexStartIndex(int value)
  int get_vertexCount()
  void set_vertexCount(int value)
  bool get_useAdjacentStart()
  void set_useAdjacentStart(bool value)
  bool get_useAdjacentEnd()
  void set_useAdjacentEnd(bool value)
  Vector2 get_adjacentStart()
  void set_adjacentStart(Vector2 value)
  Vector2 get_adjacentEnd()
  void set_adjacentEnd(Vector2 value)
--------------------------------------------------
Класс: UnityEngine.PhysicsShapeGroup2D
Наследуется от: object
Поля:
  GroupState m_GroupState
  float MinVertexSeparation
Свойства:
  List`1<Vector2> groupVertices
  List`1<PhysicsShape2D> groupShapes
  int shapeCount
  int vertexCount
  Matrix4x4 localToWorldMatrix
Методы:
  List`1<Vector2> get_groupVertices()
  List`1<PhysicsShape2D> get_groupShapes()
  int get_shapeCount()
  int get_vertexCount()
  Matrix4x4 get_localToWorldMatrix()
  void set_localToWorldMatrix(Matrix4x4 value)
  void .ctor(int shapeCapacity, int vertexCapacity)
  void Clear()
  void Add(PhysicsShapeGroup2D physicsShapeGroup)
  void GetShapeData(List`1<PhysicsShape2D> shapes, List`1<Vector2> vertices)
  void GetShapeData(NativeArray`1<PhysicsShape2D> shapes, NativeArray`1<Vector2> vertices)
  void GetShapeVertices(int shapeIndex, List`1<Vector2> vertices)
  Vector2 GetShapeVertex(int shapeIndex, int vertexIndex)
  void SetShapeVertex(int shapeIndex, int vertexIndex, Vector2 vertex)
  void SetShapeRadius(int shapeIndex, float radius)
  void SetShapeAdjacentVertices(int shapeIndex, bool useAdjacentStart, bool useAdjacentEnd, Vector2 adjacentStart, Vector2 adjacentEnd)
  void DeleteShape(int shapeIndex)
  PhysicsShape2D GetShape(int shapeIndex)
  int AddCircle(Vector2 center, float radius)
  int AddCapsule(Vector2 vertex0, Vector2 vertex1, float radius)
  int AddBox(Vector2 center, Vector2 size, float angle, float edgeRadius)
  int AddPolygon(List`1<Vector2> vertices)
  int AddEdges(List`1<Vector2> vertices, float edgeRadius)
  int AddEdges(List`1<Vector2> vertices, bool useAdjacentStart, bool useAdjacentEnd, Vector2 adjacentStart, Vector2 adjacentEnd, float edgeRadius)
  Vector2 <AddBox>g__Rotate|28_0(float cos, float sin, Vector2 value)
--------------------------------------------------
Класс: UnityEngine.ColliderDistance2D
Наследуется от: ValueType
Поля:
  Vector2 m_PointA
  Vector2 m_PointB
  Vector2 m_Normal
  float m_Distance
  int m_IsValid
Свойства:
  Vector2 pointA
  Vector2 pointB
  Vector2 normal
  float distance
  bool isOverlapped
  bool isValid
Методы:
  Vector2 get_pointA()
  void set_pointA(Vector2 value)
  Vector2 get_pointB()
  void set_pointB(Vector2 value)
  Vector2 get_normal()
  float get_distance()
  void set_distance(float value)
  bool get_isOverlapped()
  bool get_isValid()
  void set_isValid(bool value)
--------------------------------------------------
Класс: UnityEngine.ContactFilter2D
Наследуется от: ValueType
Поля:
  bool useTriggers
  bool useLayerMask
  bool useDepth
  bool useOutsideDepth
  bool useNormalAngle
  bool useOutsideNormalAngle
  LayerMask layerMask
  float minDepth
  float maxDepth
  float minNormalAngle
  float maxNormalAngle
  float NormalAngleUpperLimit
Свойства:
  bool isFiltering
Методы:
  ContactFilter2D NoFilter()
  void CheckConsistency()
  void ClearLayerMask()
  void SetLayerMask(LayerMask layerMask)
  void ClearDepth()
  void SetDepth(float minDepth, float maxDepth)
  void ClearNormalAngle()
  void SetNormalAngle(float minNormalAngle, float maxNormalAngle)
  bool get_isFiltering()
  bool IsFilteringTrigger(Collider2D collider)
  bool IsFilteringLayerMask(GameObject obj)
  bool IsFilteringDepth(GameObject obj)
  bool IsFilteringNormalAngle(Vector2 normal)
  bool IsFilteringNormalAngle(float angle)
  bool IsFilteringNormalAngleUsingAngle(float angle)
  ContactFilter2D CreateLegacyFilter(int layerMask, float minDepth, float maxDepth)
  void CheckConsistency_Injected(ContactFilter2D& _unity_self)
  bool IsFilteringNormalAngle_Injected(ContactFilter2D& _unity_self, Vector2& normal)
  bool IsFilteringNormalAngleUsingAngle_Injected(ContactFilter2D& _unity_self, float angle)
--------------------------------------------------
Класс: UnityEngine.Collision2D
Наследуется от: object
Поля:
  int m_Collider
  int m_OtherCollider
  int m_Rigidbody
  int m_OtherRigidbody
  Vector2 m_RelativeVelocity
  int m_Enabled
  int m_ContactCount
  ContactPoint2D[] m_ReusedContacts
  ContactPoint2D[] m_LegacyContacts
Свойства:
  Collider2D collider
  Collider2D otherCollider
  Rigidbody2D rigidbody
  Rigidbody2D otherRigidbody
  Transform transform
  GameObject gameObject
  Vector2 relativeVelocity
  bool enabled
  ContactPoint2D[] contacts
  int contactCount
Методы:
  ContactPoint2D[] GetContacts_Internal()
  Collider2D get_collider()
  Collider2D get_otherCollider()
  Rigidbody2D get_rigidbody()
  Rigidbody2D get_otherRigidbody()
  Transform get_transform()
  GameObject get_gameObject()
  Vector2 get_relativeVelocity()
  bool get_enabled()
  ContactPoint2D[] get_contacts()
  int get_contactCount()
  ContactPoint2D GetContact(int index)
  int GetContacts(ContactPoint2D[] contacts)
  int GetContacts(List`1<ContactPoint2D> contacts)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ContactPoint2D
Наследуется от: ValueType
Поля:
  Vector2 m_Point
  Vector2 m_Normal
  Vector2 m_RelativeVelocity
  float m_Separation
  float m_NormalImpulse
  float m_TangentImpulse
  int m_Collider
  int m_OtherCollider
  int m_Rigidbody
  int m_OtherRigidbody
  int m_Enabled
Свойства:
  Vector2 point
  Vector2 normal
  float separation
  float normalImpulse
  float tangentImpulse
  Vector2 relativeVelocity
  Collider2D collider
  Collider2D otherCollider
  Rigidbody2D rigidbody
  Rigidbody2D otherRigidbody
  bool enabled
Методы:
  Vector2 get_point()
  Vector2 get_normal()
  float get_separation()
  float get_normalImpulse()
  float get_tangentImpulse()
  Vector2 get_relativeVelocity()
  Collider2D get_collider()
  Collider2D get_otherCollider()
  Rigidbody2D get_rigidbody()
  Rigidbody2D get_otherRigidbody()
  bool get_enabled()
--------------------------------------------------
Класс: UnityEngine.JointAngleLimits2D
Наследуется от: ValueType
Поля:
  float m_LowerAngle
  float m_UpperAngle
Свойства:
  float min
  float max
Методы:
  float get_min()
  void set_min(float value)
  float get_max()
  void set_max(float value)
--------------------------------------------------
Класс: UnityEngine.JointTranslationLimits2D
Наследуется от: ValueType
Поля:
  float m_LowerTranslation
  float m_UpperTranslation
Свойства:
  float min
  float max
Методы:
  float get_min()
  void set_min(float value)
  float get_max()
  void set_max(float value)
--------------------------------------------------
Класс: UnityEngine.JointMotor2D
Наследуется от: ValueType
Поля:
  float m_MotorSpeed
  float m_MaximumMotorTorque
Свойства:
  float motorSpeed
  float maxMotorTorque
Методы:
  float get_motorSpeed()
  void set_motorSpeed(float value)
  float get_maxMotorTorque()
  void set_maxMotorTorque(float value)
--------------------------------------------------
Класс: UnityEngine.JointSuspension2D
Наследуется от: ValueType
Поля:
  float m_DampingRatio
  float m_Frequency
  float m_Angle
Свойства:
  float dampingRatio
  float frequency
  float angle
Методы:
  float get_dampingRatio()
  void set_dampingRatio(float value)
  float get_frequency()
  void set_frequency(float value)
  float get_angle()
  void set_angle(float value)
--------------------------------------------------
Класс: UnityEngine.RaycastHit2D
Наследуется от: ValueType
Поля:
  Vector2 m_Centroid
  Vector2 m_Point
  Vector2 m_Normal
  float m_Distance
  float m_Fraction
  int m_Collider
Свойства:
  Vector2 centroid
  Vector2 point
  Vector2 normal
  float distance
  float fraction
  Collider2D collider
  Rigidbody2D rigidbody
  Transform transform
Методы:
  Vector2 get_centroid()
  void set_centroid(Vector2 value)
  Vector2 get_point()
  void set_point(Vector2 value)
  Vector2 get_normal()
  void set_normal(Vector2 value)
  float get_distance()
  void set_distance(float value)
  float get_fraction()
  void set_fraction(float value)
  Collider2D get_collider()
  Rigidbody2D get_rigidbody()
  Transform get_transform()
  bool op_Implicit(RaycastHit2D hit)
  int CompareTo(RaycastHit2D other)
--------------------------------------------------
Класс: UnityEngine.PhysicsJobOptions2D
Наследуется от: ValueType
Поля:
  bool m_UseMultithreading
  bool m_UseConsistencySorting
  int m_InterpolationPosesPerJob
  int m_NewContactsPerJob
  int m_CollideContactsPerJob
  int m_ClearFlagsPerJob
  int m_ClearBodyForcesPerJob
  int m_SyncDiscreteFixturesPerJob
  int m_SyncContinuousFixturesPerJob
  int m_FindNearestContactsPerJob
  int m_UpdateTriggerContactsPerJob
  int m_IslandSolverCostThreshold
  int m_IslandSolverBodyCostScale
  int m_IslandSolverContactCostScale
  int m_IslandSolverJointCostScale
  int m_IslandSolverBodiesPerJob
  int m_IslandSolverContactsPerJob
Свойства:
  bool useMultithreading
  bool useConsistencySorting
  int interpolationPosesPerJob
  int newContactsPerJob
  int collideContactsPerJob
  int clearFlagsPerJob
  int clearBodyForcesPerJob
  int syncDiscreteFixturesPerJob
  int syncContinuousFixturesPerJob
  int findNearestContactsPerJob
  int updateTriggerContactsPerJob
  int islandSolverCostThreshold
  int islandSolverBodyCostScale
  int islandSolverContactCostScale
  int islandSolverJointCostScale
  int islandSolverBodiesPerJob
  int islandSolverContactsPerJob
Методы:
  bool get_useMultithreading()
  void set_useMultithreading(bool value)
  bool get_useConsistencySorting()
  void set_useConsistencySorting(bool value)
  int get_interpolationPosesPerJob()
  void set_interpolationPosesPerJob(int value)
  int get_newContactsPerJob()
  void set_newContactsPerJob(int value)
  int get_collideContactsPerJob()
  void set_collideContactsPerJob(int value)
  int get_clearFlagsPerJob()
  void set_clearFlagsPerJob(int value)
  int get_clearBodyForcesPerJob()
  void set_clearBodyForcesPerJob(int value)
  int get_syncDiscreteFixturesPerJob()
  void set_syncDiscreteFixturesPerJob(int value)
  int get_syncContinuousFixturesPerJob()
  void set_syncContinuousFixturesPerJob(int value)
  int get_findNearestContactsPerJob()
  void set_findNearestContactsPerJob(int value)
  int get_updateTriggerContactsPerJob()
  void set_updateTriggerContactsPerJob(int value)
  int get_islandSolverCostThreshold()
  void set_islandSolverCostThreshold(int value)
  int get_islandSolverBodyCostScale()
  void set_islandSolverBodyCostScale(int value)
  int get_islandSolverContactCostScale()
  void set_islandSolverContactCostScale(int value)
  int get_islandSolverJointCostScale()
  void set_islandSolverJointCostScale(int value)
  int get_islandSolverBodiesPerJob()
  void set_islandSolverBodiesPerJob(int value)
  int get_islandSolverContactsPerJob()
  void set_islandSolverContactsPerJob(int value)
--------------------------------------------------
Класс: UnityEngine.Rigidbody2D
Наследуется от: Component
Поля:
Свойства:
  Vector2 position
  float rotation
  Vector2 velocity
  float angularVelocity
  bool useAutoMass
  float mass
  PhysicsMaterial2D sharedMaterial
  Vector2 centerOfMass
  Vector2 worldCenterOfMass
  float inertia
  float drag
  float angularDrag
  float gravityScale
  RigidbodyType2D bodyType
  bool useFullKinematicContacts
  bool isKinematic
  bool fixedAngle
  bool freezeRotation
  RigidbodyConstraints2D constraints
  bool simulated
  RigidbodyInterpolation2D interpolation
  RigidbodySleepMode2D sleepMode
  CollisionDetectionMode2D collisionDetectionMode
  int attachedColliderCount
Методы:
  Vector2 get_position()
  void set_position(Vector2 value)
  float get_rotation()
  void set_rotation(float value)
  void SetRotation(float angle)
  void SetRotation_Angle(float angle)
  void SetRotation(Quaternion rotation)
  void SetRotation_Quaternion(Quaternion rotation)
  void MovePosition(Vector2 position)
  void MoveRotation(float angle)
  void MoveRotation_Angle(float angle)
  void MoveRotation(Quaternion rotation)
  void MoveRotation_Quaternion(Quaternion rotation)
  Vector2 get_velocity()
  void set_velocity(Vector2 value)
  float get_angularVelocity()
  void set_angularVelocity(float value)
  bool get_useAutoMass()
  void set_useAutoMass(bool value)
  float get_mass()
  void set_mass(float value)
  PhysicsMaterial2D get_sharedMaterial()
  void set_sharedMaterial(PhysicsMaterial2D value)
  Vector2 get_centerOfMass()
  void set_centerOfMass(Vector2 value)
  Vector2 get_worldCenterOfMass()
  float get_inertia()
  void set_inertia(float value)
  float get_drag()
  void set_drag(float value)
  float get_angularDrag()
  void set_angularDrag(float value)
  float get_gravityScale()
  void set_gravityScale(float value)
  RigidbodyType2D get_bodyType()
  void set_bodyType(RigidbodyType2D value)
  void SetDragBehaviour(bool dragged)
  bool get_useFullKinematicContacts()
  void set_useFullKinematicContacts(bool value)
  bool get_isKinematic()
  void set_isKinematic(bool value)
  bool get_fixedAngle()
  void set_fixedAngle(bool value)
  bool get_freezeRotation()
  void set_freezeRotation(bool value)
  RigidbodyConstraints2D get_constraints()
  void set_constraints(RigidbodyConstraints2D value)
  bool IsSleeping()
  bool IsAwake()
  void Sleep()
  void WakeUp()
  bool get_simulated()
  void set_simulated(bool value)
  RigidbodyInterpolation2D get_interpolation()
  void set_interpolation(RigidbodyInterpolation2D value)
  RigidbodySleepMode2D get_sleepMode()
  void set_sleepMode(RigidbodySleepMode2D value)
  CollisionDetectionMode2D get_collisionDetectionMode()
  void set_collisionDetectionMode(CollisionDetectionMode2D value)
  int get_attachedColliderCount()
  bool IsTouching(Collider2D collider)
  bool IsTouching(Collider2D collider, ContactFilter2D contactFilter)
  bool IsTouching_OtherColliderWithFilter_Internal(Collider2D collider, ContactFilter2D contactFilter)
  bool IsTouching(ContactFilter2D contactFilter)
  bool IsTouching_AnyColliderWithFilter_Internal(ContactFilter2D contactFilter)
  bool IsTouchingLayers()
  bool IsTouchingLayers(int layerMask)
  bool OverlapPoint(Vector2 point)
  ColliderDistance2D Distance(Collider2D collider)
  ColliderDistance2D Distance_Internal(Collider2D collider)
  Vector2 ClosestPoint(Vector2 position)
  void AddForce(Vector2 force)
  void AddForce(Vector2 force, ForceMode2D mode)
  void AddRelativeForce(Vector2 relativeForce)
  void AddRelativeForce(Vector2 relativeForce, ForceMode2D mode)
  void AddForceAtPosition(Vector2 force, Vector2 position)
  void AddForceAtPosition(Vector2 force, Vector2 position, ForceMode2D mode)
  void AddTorque(float torque)
  void AddTorque(float torque, ForceMode2D mode)
  Vector2 GetPoint(Vector2 point)
  Vector2 GetRelativePoint(Vector2 relativePoint)
  Vector2 GetVector(Vector2 vector)
  Vector2 GetRelativeVector(Vector2 relativeVector)
  Vector2 GetPointVelocity(Vector2 point)
  Vector2 GetRelativePointVelocity(Vector2 relativePoint)
  int OverlapCollider(ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapColliderArray_Internal(ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCollider(ContactFilter2D contactFilter, List`1<Collider2D> results)
  int OverlapColliderList_Internal(ContactFilter2D contactFilter, List`1<Collider2D> results)
  int GetContacts(ContactPoint2D[] contacts)
  int GetContacts(List`1<ContactPoint2D> contacts)
  int GetContacts(ContactFilter2D contactFilter, ContactPoint2D[] contacts)
  int GetContacts(ContactFilter2D contactFilter, List`1<ContactPoint2D> contacts)
  int GetContacts(Collider2D[] colliders)
  int GetContacts(List`1<Collider2D> colliders)
  int GetContacts(ContactFilter2D contactFilter, Collider2D[] colliders)
  int GetContacts(ContactFilter2D contactFilter, List`1<Collider2D> colliders)
  int GetAttachedColliders(Collider2D[] results)
  int GetAttachedCollidersArray_Internal(Collider2D[] results)
  int GetAttachedColliders(List`1<Collider2D> results)
  int GetAttachedCollidersList_Internal(List`1<Collider2D> results)
  int Cast(Vector2 direction, RaycastHit2D[] results)
  int Cast(Vector2 direction, RaycastHit2D[] results, float distance)
  int CastArray_Internal(Vector2 direction, float distance, RaycastHit2D[] results)
  int Cast(Vector2 direction, List`1<RaycastHit2D> results, float distance)
  int CastList_Internal(Vector2 direction, float distance, List`1<RaycastHit2D> results)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int CastFilteredArray_Internal(Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance)
  int CastFilteredList_Internal(Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  int GetShapes(PhysicsShapeGroup2D physicsShapeGroup)
  int GetShapes_Internal(GroupState& physicsShapeGroupState)
  void .ctor()
  void get_position_Injected(Vector2& ret)
  void set_position_Injected(Vector2& value)
  void SetRotation_Quaternion_Injected(Quaternion& rotation)
  void MovePosition_Injected(Vector2& position)
  void MoveRotation_Quaternion_Injected(Quaternion& rotation)
  void get_velocity_Injected(Vector2& ret)
  void set_velocity_Injected(Vector2& value)
  void get_centerOfMass_Injected(Vector2& ret)
  void set_centerOfMass_Injected(Vector2& value)
  void get_worldCenterOfMass_Injected(Vector2& ret)
  bool IsTouching_OtherColliderWithFilter_Internal_Injected(Collider2D collider, ContactFilter2D& contactFilter)
  bool IsTouching_AnyColliderWithFilter_Internal_Injected(ContactFilter2D& contactFilter)
  bool OverlapPoint_Injected(Vector2& point)
  void Distance_Internal_Injected(Collider2D collider, ColliderDistance2D& ret)
  void AddForce_Injected(Vector2& force, ForceMode2D mode)
  void AddRelativeForce_Injected(Vector2& relativeForce, ForceMode2D mode)
  void AddForceAtPosition_Injected(Vector2& force, Vector2& position, ForceMode2D mode)
  void GetPoint_Injected(Vector2& point, Vector2& ret)
  void GetRelativePoint_Injected(Vector2& relativePoint, Vector2& ret)
  void GetVector_Injected(Vector2& vector, Vector2& ret)
  void GetRelativeVector_Injected(Vector2& relativeVector, Vector2& ret)
  void GetPointVelocity_Injected(Vector2& point, Vector2& ret)
  void GetRelativePointVelocity_Injected(Vector2& relativePoint, Vector2& ret)
  int OverlapColliderArray_Internal_Injected(ContactFilter2D& contactFilter, Collider2D[] results)
  int OverlapColliderList_Internal_Injected(ContactFilter2D& contactFilter, List`1<Collider2D> results)
  int CastArray_Internal_Injected(Vector2& direction, float distance, RaycastHit2D[] results)
  int CastList_Internal_Injected(Vector2& direction, float distance, List`1<RaycastHit2D> results)
  int CastFilteredArray_Internal_Injected(Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int CastFilteredList_Internal_Injected(Vector2& direction, float distance, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
--------------------------------------------------
Класс: UnityEngine.Collider2D
Наследуется от: Behaviour
Поля:
Свойства:
  float density
  bool isTrigger
  bool usedByEffector
  bool usedByComposite
  CompositeCollider2D composite
  Vector2 offset
  Rigidbody2D attachedRigidbody
  int shapeCount
  Bounds bounds
  ColliderErrorState2D errorState
  bool compositeCapable
  PhysicsMaterial2D sharedMaterial
  float friction
  float bounciness
Методы:
  float get_density()
  void set_density(float value)
  bool get_isTrigger()
  void set_isTrigger(bool value)
  bool get_usedByEffector()
  void set_usedByEffector(bool value)
  bool get_usedByComposite()
  void set_usedByComposite(bool value)
  CompositeCollider2D get_composite()
  Vector2 get_offset()
  void set_offset(Vector2 value)
  Rigidbody2D get_attachedRigidbody()
  int get_shapeCount()
  Mesh CreateMesh(bool useBodyPosition, bool useBodyRotation)
  UInt32 GetShapeHash()
  int GetShapes(PhysicsShapeGroup2D physicsShapeGroup)
  int GetShapes(PhysicsShapeGroup2D physicsShapeGroup, int shapeIndex, int shapeCount)
  int GetShapes_Internal(GroupState& physicsShapeGroupState, int shapeIndex, int shapeCount)
  Bounds get_bounds()
  ColliderErrorState2D get_errorState()
  bool get_compositeCapable()
  PhysicsMaterial2D get_sharedMaterial()
  void set_sharedMaterial(PhysicsMaterial2D value)
  float get_friction()
  float get_bounciness()
  bool IsTouching(Collider2D collider)
  bool IsTouching(Collider2D collider, ContactFilter2D contactFilter)
  bool IsTouching_OtherColliderWithFilter(Collider2D collider, ContactFilter2D contactFilter)
  bool IsTouching(ContactFilter2D contactFilter)
  bool IsTouching_AnyColliderWithFilter(ContactFilter2D contactFilter)
  bool IsTouchingLayers()
  bool IsTouchingLayers(int layerMask)
  bool OverlapPoint(Vector2 point)
  ColliderDistance2D Distance(Collider2D collider)
  int OverlapCollider(ContactFilter2D contactFilter, Collider2D[] results)
  int OverlapCollider(ContactFilter2D contactFilter, List`1<Collider2D> results)
  int GetContacts(ContactPoint2D[] contacts)
  int GetContacts(List`1<ContactPoint2D> contacts)
  int GetContacts(ContactFilter2D contactFilter, ContactPoint2D[] contacts)
  int GetContacts(ContactFilter2D contactFilter, List`1<ContactPoint2D> contacts)
  int GetContacts(Collider2D[] colliders)
  int GetContacts(List`1<Collider2D> colliders)
  int GetContacts(ContactFilter2D contactFilter, Collider2D[] colliders)
  int GetContacts(ContactFilter2D contactFilter, List`1<Collider2D> colliders)
  int Cast(Vector2 direction, RaycastHit2D[] results)
  int Cast(Vector2 direction, RaycastHit2D[] results, float distance)
  int Cast(Vector2 direction, RaycastHit2D[] results, float distance, bool ignoreSiblingColliders)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance, bool ignoreSiblingColliders)
  int CastArray_Internal(Vector2 direction, float distance, ContactFilter2D contactFilter, bool ignoreSiblingColliders, RaycastHit2D[] results)
  int Cast(Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance, bool ignoreSiblingColliders)
  int CastList_Internal(Vector2 direction, float distance, ContactFilter2D contactFilter, bool ignoreSiblingColliders, List`1<RaycastHit2D> results)
  int Raycast(Vector2 direction, RaycastHit2D[] results)
  int Raycast(Vector2 direction, RaycastHit2D[] results, float distance)
  int Raycast(Vector2 direction, RaycastHit2D[] results, float distance, int layerMask)
  int Raycast(Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth)
  int Raycast(Vector2 direction, RaycastHit2D[] results, float distance, int layerMask, float minDepth, float maxDepth)
  int Raycast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Raycast(Vector2 direction, ContactFilter2D contactFilter, RaycastHit2D[] results, float distance)
  int RaycastArray_Internal(Vector2 direction, float distance, ContactFilter2D contactFilter, RaycastHit2D[] results)
  int Raycast(Vector2 direction, ContactFilter2D contactFilter, List`1<RaycastHit2D> results, float distance)
  int RaycastList_Internal(Vector2 direction, float distance, ContactFilter2D contactFilter, List`1<RaycastHit2D> results)
  Vector2 ClosestPoint(Vector2 position)
  void .ctor()
  void get_offset_Injected(Vector2& ret)
  void set_offset_Injected(Vector2& value)
  void get_bounds_Injected(Bounds& ret)
  bool IsTouching_OtherColliderWithFilter_Injected(Collider2D collider, ContactFilter2D& contactFilter)
  bool IsTouching_AnyColliderWithFilter_Injected(ContactFilter2D& contactFilter)
  bool OverlapPoint_Injected(Vector2& point)
  int CastArray_Internal_Injected(Vector2& direction, float distance, ContactFilter2D& contactFilter, bool ignoreSiblingColliders, RaycastHit2D[] results)
  int CastList_Internal_Injected(Vector2& direction, float distance, ContactFilter2D& contactFilter, bool ignoreSiblingColliders, List`1<RaycastHit2D> results)
  int RaycastArray_Internal_Injected(Vector2& direction, float distance, ContactFilter2D& contactFilter, RaycastHit2D[] results)
  int RaycastList_Internal_Injected(Vector2& direction, float distance, ContactFilter2D& contactFilter, List`1<RaycastHit2D> results)
--------------------------------------------------
Класс: UnityEngine.CustomCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  int customShapeCount
  int customVertexCount
Методы:
  int get_customShapeCount()
  int get_customVertexCount()
  int GetCustomShapes(PhysicsShapeGroup2D physicsShapeGroup)
  int GetCustomShapes(PhysicsShapeGroup2D physicsShapeGroup, int shapeIndex, int shapeCount)
  int GetCustomShapes_Internal(GroupState& physicsShapeGroupState, int shapeIndex, int shapeCount)
  int GetCustomShapes(NativeArray`1<PhysicsShape2D> shapes, NativeArray`1<Vector2> vertices)
  int GetCustomShapesNative_Internal(IntPtr shapesPtr, int shapeCount, IntPtr verticesPtr, int vertexCount)
  void SetCustomShapes(PhysicsShapeGroup2D physicsShapeGroup)
  void SetCustomShapesAll_Internal(GroupState& physicsShapeGroupState)
  void SetCustomShapes(NativeArray`1<PhysicsShape2D> shapes, NativeArray`1<Vector2> vertices)
  void SetCustomShapesNative_Internal(IntPtr shapesPtr, int shapeCount, IntPtr verticesPtr, int vertexCount)
  void SetCustomShape(PhysicsShapeGroup2D physicsShapeGroup, int srcShapeIndex, int dstShapeIndex)
  void SetCustomShape_Internal(GroupState& physicsShapeGroupState, int srcShapeIndex, int dstShapeIndex)
  void SetCustomShape(NativeArray`1<PhysicsShape2D> shapes, NativeArray`1<Vector2> vertices, int srcShapeIndex, int dstShapeIndex)
  void SetCustomShapeNative_Internal(IntPtr shapesPtr, int shapeCount, IntPtr verticesPtr, int vertexCount, int srcShapeIndex, int dstShapeIndex)
  void ClearCustomShapes(int shapeIndex, int shapeCount)
  void ClearCustomShapes_Internal(int shapeIndex, int shapeCount)
  void ClearCustomShapes()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.CircleCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  float radius
Методы:
  float get_radius()
  void set_radius(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.CapsuleCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  Vector2 size
  CapsuleDirection2D direction
Методы:
  Vector2 get_size()
  void set_size(Vector2 value)
  CapsuleDirection2D get_direction()
  void set_direction(CapsuleDirection2D value)
  void .ctor()
  void get_size_Injected(Vector2& ret)
  void set_size_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.EdgeCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  float edgeRadius
  int edgeCount
  int pointCount
  Vector2[] points
  bool useAdjacentStartPoint
  bool useAdjacentEndPoint
  Vector2 adjacentStartPoint
  Vector2 adjacentEndPoint
Методы:
  void Reset()
  float get_edgeRadius()
  void set_edgeRadius(float value)
  int get_edgeCount()
  int get_pointCount()
  Vector2[] get_points()
  void set_points(Vector2[] value)
  int GetPoints(List`1<Vector2> points)
  bool SetPoints(List`1<Vector2> points)
  bool get_useAdjacentStartPoint()
  void set_useAdjacentStartPoint(bool value)
  bool get_useAdjacentEndPoint()
  void set_useAdjacentEndPoint(bool value)
  Vector2 get_adjacentStartPoint()
  void set_adjacentStartPoint(Vector2 value)
  Vector2 get_adjacentEndPoint()
  void set_adjacentEndPoint(Vector2 value)
  void .ctor()
  void get_adjacentStartPoint_Injected(Vector2& ret)
  void set_adjacentStartPoint_Injected(Vector2& value)
  void get_adjacentEndPoint_Injected(Vector2& ret)
  void set_adjacentEndPoint_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.BoxCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  Vector2 size
  float edgeRadius
  bool autoTiling
Методы:
  Vector2 get_size()
  void set_size(Vector2 value)
  float get_edgeRadius()
  void set_edgeRadius(float value)
  bool get_autoTiling()
  void set_autoTiling(bool value)
  void .ctor()
  void get_size_Injected(Vector2& ret)
  void set_size_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.PolygonCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  bool autoTiling
  Vector2[] points
  int pathCount
Методы:
  bool get_autoTiling()
  void set_autoTiling(bool value)
  int GetTotalPointCount()
  Vector2[] get_points()
  void set_points(Vector2[] value)
  int get_pathCount()
  void set_pathCount(int value)
  Vector2[] GetPath(int index)
  Vector2[] GetPath_Internal(int index)
  void SetPath(int index, Vector2[] points)
  void SetPath_Internal(int index, Vector2[] points)
  int GetPath(int index, List`1<Vector2> points)
  int GetPathList_Internal(int index, List`1<Vector2> points)
  void SetPath(int index, List`1<Vector2> points)
  void SetPathList_Internal(int index, List`1<Vector2> points)
  void CreatePrimitive(int sides)
  void CreatePrimitive(int sides, Vector2 scale)
  void CreatePrimitive(int sides, Vector2 scale, Vector2 offset)
  void CreatePrimitive_Internal(int sides, Vector2 scale, Vector2 offset, bool autoRefresh)
  void .ctor()
  void CreatePrimitive_Internal_Injected(int sides, Vector2& scale, Vector2& offset, bool autoRefresh)
--------------------------------------------------
Класс: UnityEngine.CompositeCollider2D
Наследуется от: Collider2D
Поля:
Свойства:
  GeometryType geometryType
  GenerationType generationType
  float vertexDistance
  float edgeRadius
  float offsetDistance
  int pathCount
  int pointCount
Методы:
  GeometryType get_geometryType()
  void set_geometryType(GeometryType value)
  GenerationType get_generationType()
  void set_generationType(GenerationType value)
  float get_vertexDistance()
  void set_vertexDistance(float value)
  float get_edgeRadius()
  void set_edgeRadius(float value)
  float get_offsetDistance()
  void set_offsetDistance(float value)
  void GenerateGeometry()
  int GetPathPointCount(int index)
  int GetPathPointCount_Internal(int index)
  int get_pathCount()
  int get_pointCount()
  int GetPath(int index, Vector2[] points)
  int GetPathArray_Internal(int index, Vector2[] points)
  int GetPath(int index, List`1<Vector2> points)
  int GetPathList_Internal(int index, List`1<Vector2> points)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Joint2D
Наследуется от: Behaviour
Поля:
Свойства:
  Rigidbody2D attachedRigidbody
  Rigidbody2D connectedBody
  bool enableCollision
  float breakForce
  float breakTorque
  Vector2 reactionForce
  float reactionTorque
Методы:
  Rigidbody2D get_attachedRigidbody()
  Rigidbody2D get_connectedBody()
  void set_connectedBody(Rigidbody2D value)
  bool get_enableCollision()
  void set_enableCollision(bool value)
  float get_breakForce()
  void set_breakForce(float value)
  float get_breakTorque()
  void set_breakTorque(float value)
  Vector2 get_reactionForce()
  float get_reactionTorque()
  Vector2 GetReactionForce(float timeStep)
  float GetReactionTorque(float timeStep)
  void .ctor()
  void get_reactionForce_Injected(Vector2& ret)
  void GetReactionForce_Injected(float timeStep, Vector2& ret)
--------------------------------------------------
Класс: UnityEngine.AnchoredJoint2D
Наследуется от: Joint2D
Поля:
Свойства:
  Vector2 anchor
  Vector2 connectedAnchor
  bool autoConfigureConnectedAnchor
Методы:
  Vector2 get_anchor()
  void set_anchor(Vector2 value)
  Vector2 get_connectedAnchor()
  void set_connectedAnchor(Vector2 value)
  bool get_autoConfigureConnectedAnchor()
  void set_autoConfigureConnectedAnchor(bool value)
  void .ctor()
  void get_anchor_Injected(Vector2& ret)
  void set_anchor_Injected(Vector2& value)
  void get_connectedAnchor_Injected(Vector2& ret)
  void set_connectedAnchor_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.SpringJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  bool autoConfigureDistance
  float distance
  float dampingRatio
  float frequency
Методы:
  bool get_autoConfigureDistance()
  void set_autoConfigureDistance(bool value)
  float get_distance()
  void set_distance(float value)
  float get_dampingRatio()
  void set_dampingRatio(float value)
  float get_frequency()
  void set_frequency(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.DistanceJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  bool autoConfigureDistance
  float distance
  bool maxDistanceOnly
Методы:
  bool get_autoConfigureDistance()
  void set_autoConfigureDistance(bool value)
  float get_distance()
  void set_distance(float value)
  bool get_maxDistanceOnly()
  void set_maxDistanceOnly(bool value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.FrictionJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  float maxForce
  float maxTorque
Методы:
  float get_maxForce()
  void set_maxForce(float value)
  float get_maxTorque()
  void set_maxTorque(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.HingeJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  bool useMotor
  bool useLimits
  JointMotor2D motor
  JointAngleLimits2D limits
  JointLimitState2D limitState
  float referenceAngle
  float jointAngle
  float jointSpeed
Методы:
  bool get_useMotor()
  void set_useMotor(bool value)
  bool get_useLimits()
  void set_useLimits(bool value)
  JointMotor2D get_motor()
  void set_motor(JointMotor2D value)
  JointAngleLimits2D get_limits()
  void set_limits(JointAngleLimits2D value)
  JointLimitState2D get_limitState()
  float get_referenceAngle()
  float get_jointAngle()
  float get_jointSpeed()
  float GetMotorTorque(float timeStep)
  void .ctor()
  void get_motor_Injected(JointMotor2D& ret)
  void set_motor_Injected(JointMotor2D& value)
  void get_limits_Injected(JointAngleLimits2D& ret)
  void set_limits_Injected(JointAngleLimits2D& value)
--------------------------------------------------
Класс: UnityEngine.RelativeJoint2D
Наследуется от: Joint2D
Поля:
Свойства:
  float maxForce
  float maxTorque
  float correctionScale
  bool autoConfigureOffset
  Vector2 linearOffset
  float angularOffset
  Vector2 target
Методы:
  float get_maxForce()
  void set_maxForce(float value)
  float get_maxTorque()
  void set_maxTorque(float value)
  float get_correctionScale()
  void set_correctionScale(float value)
  bool get_autoConfigureOffset()
  void set_autoConfigureOffset(bool value)
  Vector2 get_linearOffset()
  void set_linearOffset(Vector2 value)
  float get_angularOffset()
  void set_angularOffset(float value)
  Vector2 get_target()
  void .ctor()
  void get_linearOffset_Injected(Vector2& ret)
  void set_linearOffset_Injected(Vector2& value)
  void get_target_Injected(Vector2& ret)
--------------------------------------------------
Класс: UnityEngine.SliderJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  bool autoConfigureAngle
  float angle
  bool useMotor
  bool useLimits
  JointMotor2D motor
  JointTranslationLimits2D limits
  JointLimitState2D limitState
  float referenceAngle
  float jointTranslation
  float jointSpeed
Методы:
  bool get_autoConfigureAngle()
  void set_autoConfigureAngle(bool value)
  float get_angle()
  void set_angle(float value)
  bool get_useMotor()
  void set_useMotor(bool value)
  bool get_useLimits()
  void set_useLimits(bool value)
  JointMotor2D get_motor()
  void set_motor(JointMotor2D value)
  JointTranslationLimits2D get_limits()
  void set_limits(JointTranslationLimits2D value)
  JointLimitState2D get_limitState()
  float get_referenceAngle()
  float get_jointTranslation()
  float get_jointSpeed()
  float GetMotorForce(float timeStep)
  void .ctor()
  void get_motor_Injected(JointMotor2D& ret)
  void set_motor_Injected(JointMotor2D& value)
  void get_limits_Injected(JointTranslationLimits2D& ret)
  void set_limits_Injected(JointTranslationLimits2D& value)
--------------------------------------------------
Класс: UnityEngine.TargetJoint2D
Наследуется от: Joint2D
Поля:
Свойства:
  Vector2 anchor
  Vector2 target
  bool autoConfigureTarget
  float maxForce
  float dampingRatio
  float frequency
Методы:
  Vector2 get_anchor()
  void set_anchor(Vector2 value)
  Vector2 get_target()
  void set_target(Vector2 value)
  bool get_autoConfigureTarget()
  void set_autoConfigureTarget(bool value)
  float get_maxForce()
  void set_maxForce(float value)
  float get_dampingRatio()
  void set_dampingRatio(float value)
  float get_frequency()
  void set_frequency(float value)
  void .ctor()
  void get_anchor_Injected(Vector2& ret)
  void set_anchor_Injected(Vector2& value)
  void get_target_Injected(Vector2& ret)
  void set_target_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.FixedJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  float dampingRatio
  float frequency
  float referenceAngle
Методы:
  float get_dampingRatio()
  void set_dampingRatio(float value)
  float get_frequency()
  void set_frequency(float value)
  float get_referenceAngle()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.WheelJoint2D
Наследуется от: AnchoredJoint2D
Поля:
Свойства:
  JointSuspension2D suspension
  bool useMotor
  JointMotor2D motor
  float jointTranslation
  float jointLinearSpeed
  float jointSpeed
  float jointAngle
Методы:
  JointSuspension2D get_suspension()
  void set_suspension(JointSuspension2D value)
  bool get_useMotor()
  void set_useMotor(bool value)
  JointMotor2D get_motor()
  void set_motor(JointMotor2D value)
  float get_jointTranslation()
  float get_jointLinearSpeed()
  float get_jointSpeed()
  float get_jointAngle()
  float GetMotorTorque(float timeStep)
  void .ctor()
  void get_suspension_Injected(JointSuspension2D& ret)
  void set_suspension_Injected(JointSuspension2D& value)
  void get_motor_Injected(JointMotor2D& ret)
  void set_motor_Injected(JointMotor2D& value)
--------------------------------------------------
Класс: UnityEngine.Effector2D
Наследуется от: Behaviour
Поля:
Свойства:
  bool useColliderMask
  int colliderMask
  bool requiresCollider
  bool designedForTrigger
  bool designedForNonTrigger
Методы:
  bool get_useColliderMask()
  void set_useColliderMask(bool value)
  int get_colliderMask()
  void set_colliderMask(int value)
  bool get_requiresCollider()
  bool get_designedForTrigger()
  bool get_designedForNonTrigger()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.AreaEffector2D
Наследуется от: Effector2D
Поля:
Свойства:
  float forceAngle
  bool useGlobalAngle
  float forceMagnitude
  float forceVariation
  float drag
  float angularDrag
  EffectorSelection2D forceTarget
Методы:
  float get_forceAngle()
  void set_forceAngle(float value)
  bool get_useGlobalAngle()
  void set_useGlobalAngle(bool value)
  float get_forceMagnitude()
  void set_forceMagnitude(float value)
  float get_forceVariation()
  void set_forceVariation(float value)
  float get_drag()
  void set_drag(float value)
  float get_angularDrag()
  void set_angularDrag(float value)
  EffectorSelection2D get_forceTarget()
  void set_forceTarget(EffectorSelection2D value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.BuoyancyEffector2D
Наследуется от: Effector2D
Поля:
Свойства:
  float surfaceLevel
  float density
  float linearDrag
  float angularDrag
  float flowAngle
  float flowMagnitude
  float flowVariation
Методы:
  float get_surfaceLevel()
  void set_surfaceLevel(float value)
  float get_density()
  void set_density(float value)
  float get_linearDrag()
  void set_linearDrag(float value)
  float get_angularDrag()
  void set_angularDrag(float value)
  float get_flowAngle()
  void set_flowAngle(float value)
  float get_flowMagnitude()
  void set_flowMagnitude(float value)
  float get_flowVariation()
  void set_flowVariation(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PointEffector2D
Наследуется от: Effector2D
Поля:
Свойства:
  float forceMagnitude
  float forceVariation
  float distanceScale
  float drag
  float angularDrag
  EffectorSelection2D forceSource
  EffectorSelection2D forceTarget
  EffectorForceMode2D forceMode
Методы:
  float get_forceMagnitude()
  void set_forceMagnitude(float value)
  float get_forceVariation()
  void set_forceVariation(float value)
  float get_distanceScale()
  void set_distanceScale(float value)
  float get_drag()
  void set_drag(float value)
  float get_angularDrag()
  void set_angularDrag(float value)
  EffectorSelection2D get_forceSource()
  void set_forceSource(EffectorSelection2D value)
  EffectorSelection2D get_forceTarget()
  void set_forceTarget(EffectorSelection2D value)
  EffectorForceMode2D get_forceMode()
  void set_forceMode(EffectorForceMode2D value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PlatformEffector2D
Наследуется от: Effector2D
Поля:
Свойства:
  bool useOneWay
  bool useOneWayGrouping
  bool useSideFriction
  bool useSideBounce
  float surfaceArc
  float sideArc
  float rotationalOffset
Методы:
  bool get_useOneWay()
  void set_useOneWay(bool value)
  bool get_useOneWayGrouping()
  void set_useOneWayGrouping(bool value)
  bool get_useSideFriction()
  void set_useSideFriction(bool value)
  bool get_useSideBounce()
  void set_useSideBounce(bool value)
  float get_surfaceArc()
  void set_surfaceArc(float value)
  float get_sideArc()
  void set_sideArc(float value)
  float get_rotationalOffset()
  void set_rotationalOffset(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.SurfaceEffector2D
Наследуется от: Effector2D
Поля:
Свойства:
  float speed
  float speedVariation
  float forceScale
  bool useContactForce
  bool useFriction
  bool useBounce
Методы:
  float get_speed()
  void set_speed(float value)
  float get_speedVariation()
  void set_speedVariation(float value)
  float get_forceScale()
  void set_forceScale(float value)
  bool get_useContactForce()
  void set_useContactForce(bool value)
  bool get_useFriction()
  void set_useFriction(bool value)
  bool get_useBounce()
  void set_useBounce(bool value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PhysicsUpdateBehaviour2D
Наследуется от: Behaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ConstantForce2D
Наследуется от: PhysicsUpdateBehaviour2D
Поля:
Свойства:
  Vector2 force
  Vector2 relativeForce
  float torque
Методы:
  Vector2 get_force()
  void set_force(Vector2 value)
  Vector2 get_relativeForce()
  void set_relativeForce(Vector2 value)
  float get_torque()
  void set_torque(float value)
  void .ctor()
  void get_force_Injected(Vector2& ret)
  void set_force_Injected(Vector2& value)
  void get_relativeForce_Injected(Vector2& ret)
  void set_relativeForce_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.PhysicsMaterial2D
Наследуется от: Object
Поля:
Свойства:
  float bounciness
  float friction
Методы:
  void .ctor()
  void .ctor(string name)
  void Create_Internal(PhysicsMaterial2D scriptMaterial, string name)
  float get_bounciness()
  void set_bounciness(float value)
  float get_friction()
  void set_friction(float value)
--------------------------------------------------
