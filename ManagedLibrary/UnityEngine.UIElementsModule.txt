Сборка: UnityEngine.UIElementsModule.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.CodeAnalysis.EmbeddedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.AlignmentUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  float RoundToPixelGrid(float v, float pixelsPerPoint, float offset)
  float CeilToPixelGrid(float v, float pixelsPerPoint, float offset)
  float FloorToPixelGrid(float v, float pixelsPerPoint, float offset)
--------------------------------------------------
Класс: UnityEngine.UIElements.AtlasBase
Наследуется от: object
Поля:
  TextureRegistry textureRegistry
Свойства:
Методы:
  bool TryGetAtlas(VisualElement ctx, Texture2D src, TextureId& atlas, RectInt& atlasRect)
  void ReturnAtlas(VisualElement ctx, Texture2D src, TextureId atlas)
  void Reset()
  void OnAssignedToPanel(IPanel panel)
  void OnRemovedFromPanel(IPanel panel)
  void OnUpdateDynamicTextures(IPanel panel)
  void InvokeAssignedToPanel(IPanel panel)
  void InvokeRemovedFromPanel(IPanel panel)
  void InvokeUpdateDynamicTextures(IPanel panel)
  void RepaintTexturedElements(IPanel panel)
  TextureId AllocateDynamicTexture()
  void FreeDynamicTexture(TextureId id)
  void SetDynamicTexture(TextureId id, Texture texture)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlasFilters
Наследуется от: Enum
Поля:
  int value__
  DynamicAtlasFilters None
  DynamicAtlasFilters Readability
  DynamicAtlasFilters Size
  DynamicAtlasFilters Format
  DynamicAtlasFilters ColorSpace
  DynamicAtlasFilters FilterMode
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlasCustomFilter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(Texture2D texture, DynamicAtlasFilters& filtersToApply)
  IAsyncResult BeginInvoke(Texture2D texture, DynamicAtlasFilters& filtersToApply, AsyncCallback callback, object object)
  bool EndInvoke(DynamicAtlasFilters& filtersToApply, IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlas
Наследуется от: AtlasBase
Поля:
  Dictionary`2<Texture, TextureInfo> m_Database
  DynamicAtlasPage m_PointPage
  DynamicAtlasPage m_BilinearPage
  ColorSpace m_ColorSpace
  List`1<IPanel> m_Panels
  int m_MinAtlasSize
  int m_MaxAtlasSize
  int m_MaxSubTextureSize
  DynamicAtlasFilters m_ActiveFilters
  DynamicAtlasCustomFilter m_CustomFilter
Свойства:
  bool isInitialized
  int minAtlasSize
  int maxAtlasSize
  DynamicAtlasFilters defaultFilters
  DynamicAtlasFilters activeFilters
  int maxSubTextureSize
  DynamicAtlasCustomFilter customFilter
Методы:
  bool get_isInitialized()
  void OnAssignedToPanel(IPanel panel)
  void OnRemovedFromPanel(IPanel panel)
  void Reset()
  void InitPages()
  void DestroyPages()
  bool TryGetAtlas(VisualElement ve, Texture2D src, TextureId& atlas, RectInt& atlasRect)
  void ReturnAtlas(VisualElement ve, Texture2D src, TextureId atlas)
  void OnUpdateDynamicTextures(IPanel panel)
  bool IsTextureFormatSupported(TextureFormat format)
  bool IsTextureValid(Texture2D texture, FilterMode atlasFilterMode)
  void SetDirty(Texture2D tex)
  int get_minAtlasSize()
  void set_minAtlasSize(int value)
  int get_maxAtlasSize()
  void set_maxAtlasSize(int value)
  DynamicAtlasFilters get_defaultFilters()
  DynamicAtlasFilters get_activeFilters()
  void set_activeFilters(DynamicAtlasFilters value)
  int get_maxSubTextureSize()
  void set_maxSubTextureSize(int value)
  DynamicAtlasCustomFilter get_customFilter()
  void set_customFilter(DynamicAtlasCustomFilter value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.BindableElement
Наследуется от: VisualElement
Поля:
  IBinding <binding>k__BackingField
  string <bindingPath>k__BackingField
Свойства:
  IBinding binding
  string bindingPath
Методы:
  IBinding get_binding()
  void set_binding(IBinding value)
  string get_bindingPath()
  void set_bindingPath(string value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ClampedDragger`1
Наследуется от: Clickable
Поля:
  Action dragging
  DragDirection<T> <dragDirection>k__BackingField
  BaseSlider`1<T> <slider>k__BackingField
  Vector2 <startMousePosition>k__BackingField
Свойства:
  DragDirection<T> dragDirection
  BaseSlider`1<T> slider
  Vector2 startMousePosition
  Vector2 delta
Методы:
  void add_dragging(Action value)
  void remove_dragging(Action value)
  DragDirection<T> get_dragDirection()
  void set_dragDirection(DragDirection<T> value)
  BaseSlider`1<T> get_slider()
  void set_slider(BaseSlider`1<T> value)
  Vector2 get_startMousePosition()
  void set_startMousePosition(Vector2 value)
  Vector2 get_delta()
  void .ctor(BaseSlider`1<T> slider, Action clickHandler, Action dragHandler)
  void ProcessDownEvent(EventBase evt, Vector2 localPosition, int pointerId)
  void ProcessMoveEvent(EventBase evt, Vector2 localPosition)
--------------------------------------------------
Класс: UnityEngine.UIElements.Clickable
Наследуется от: PointerManipulator
Поля:
  Action`1<EventBase> clickedWithEventInfo
  Action clicked
  long m_Delay
  long m_Interval
  bool <active>k__BackingField
  Vector2 <lastMousePosition>k__BackingField
  int m_ActivePointerId
  bool m_AcceptClicksIfDisabled
  IVisualElementScheduledItem m_Repeater
Свойства:
  bool active
  Vector2 lastMousePosition
  bool acceptClicksIfDisabled
  InvokePolicy invokePolicy
Методы:
  void add_clickedWithEventInfo(Action`1<EventBase> value)
  void remove_clickedWithEventInfo(Action`1<EventBase> value)
  void add_clicked(Action value)
  void remove_clicked(Action value)
  bool get_active()
  void set_active(bool value)
  Vector2 get_lastMousePosition()
  void set_lastMousePosition(Vector2 value)
  bool get_acceptClicksIfDisabled()
  void set_acceptClicksIfDisabled(bool value)
  InvokePolicy get_invokePolicy()
  void .ctor(Action handler, long delay, long interval)
  void .ctor(Action`1<EventBase> handler)
  void .ctor(Action handler)
  void OnTimer(TimerState timerState)
  bool IsRepeatable()
  void RegisterCallbacksOnTarget()
  void UnregisterCallbacksFromTarget()
  void OnMouseDown(MouseDownEvent evt)
  void OnMouseMove(MouseMoveEvent evt)
  void OnMouseUp(MouseUpEvent evt)
  void OnMouseCaptureOut(MouseCaptureOutEvent evt)
  void OnPointerDown(PointerDownEvent evt)
  void OnPointerMove(PointerMoveEvent evt)
  void OnPointerUp(PointerUpEvent evt)
  void OnPointerCancel(PointerCancelEvent evt)
  void OnPointerCaptureOut(PointerCaptureOutEvent evt)
  bool ContainsPointer(int pointerId)
  bool IsNotMouseEvent(int pointerId)
  void Invoke(EventBase evt)
  void SimulateSingleClick(EventBase evt, int delayMs)
  void ProcessDownEvent(EventBase evt, Vector2 localPosition, int pointerId)
  void ProcessMoveEvent(EventBase evt, Vector2 localPosition)
  void ProcessUpEvent(EventBase evt, Vector2 localPosition, int pointerId)
  void ProcessCancelEvent(EventBase evt, int pointerId)
  void <SimulateSingleClick>b__43_0()
--------------------------------------------------
Класс: UnityEngine.UIElements.ClickDetector
Наследуется от: object
Поля:
  List`1<ButtonClickStatus> m_ClickStatus
  int <s_DoubleClickTime>k__BackingField
Свойства:
  int s_DoubleClickTime
Методы:
  int get_s_DoubleClickTime()
  void set_s_DoubleClickTime(int value)
  void .ctor()
  void StartClickTracking(EventBase evt)
  void SendClickEvent(EventBase evt)
  void CancelClickTracking(EventBase evt)
  void ProcessEvent(EventBase evt)
  bool ContainsPointer(VisualElement element, Vector2 position)
  void Cleanup(List`1<VisualElement> elements)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ContextualMenuManager
Наследуется от: object
Поля:
  bool <displayMenuHandledOSX>k__BackingField
Свойства:
  bool displayMenuHandledOSX
Методы:
  bool get_displayMenuHandledOSX()
  void set_displayMenuHandledOSX(bool value)
  void DisplayMenuIfEventMatches(EventBase evt, IEventHandler eventHandler)
  void DisplayMenu(EventBase triggerEvent, IEventHandler target)
  void DoDisplayMenu(DropdownMenu menu, EventBase triggerEvent)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ContextualMenuManipulator
Наследуется от: MouseManipulator
Поля:
  Action`1<ContextualMenuPopulateEvent> m_MenuBuilder
Свойства:
Методы:
  void .ctor(Action`1<ContextualMenuPopulateEvent> menuBuilder)
  void RegisterCallbacksOnTarget()
  void UnregisterCallbacksFromTarget()
  void OnMouseUpDownEvent(IMouseEvent evt)
  void OnMouseDownEventOSX(MouseDownEvent evt)
  void OnMouseUpEventOSX(MouseUpEvent evt)
  void OnKeyUpEvent(KeyUpEvent evt)
  void DoDisplayMenu(EventBase evt)
  void OnContextualMenuEvent(ContextualMenuPopulateEvent evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.Cursor
Наследуется от: ValueType
Поля:
  Texture2D <texture>k__BackingField
  Vector2 <hotspot>k__BackingField
  int <defaultCursorId>k__BackingField
Свойства:
  Texture2D texture
  Vector2 hotspot
  int defaultCursorId
Методы:
  Texture2D get_texture()
  void set_texture(Texture2D value)
  Vector2 get_hotspot()
  void set_hotspot(Vector2 value)
  int get_defaultCursorId()
  void set_defaultCursorId(int value)
  bool Equals(object obj)
  bool Equals(Cursor other)
  int GetHashCode()
  bool op_Equality(Cursor style1, Cursor style2)
  bool op_Inequality(Cursor style1, Cursor style2)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.ICursorManager
Поля:
Свойства:
Методы:
  void SetCursor(Cursor cursor)
  void ResetCursor()
--------------------------------------------------
Класс: UnityEngine.UIElements.CursorManager
Наследуется от: object
Поля:
  bool <isCursorOverriden>k__BackingField
Свойства:
  bool isCursorOverriden
Методы:
  bool get_isCursorOverriden()
  void set_isCursorOverriden(bool value)
  void SetCursor(Cursor cursor)
  void ResetCursor()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DefaultEventSystem
Наследуется от: object
Поля:
  Func`1<bool> IsEditorRemoteConnected
  IInput m_Input
  string m_HorizontalAxis
  string m_VerticalAxis
  string m_SubmitButton
  string m_CancelButton
  float m_InputActionsPerSecond
  float m_RepeatDelay
  bool m_SendingTouchEvents
  Event m_Event
  BaseRuntimePanel m_FocusedPanel
  int m_ConsecutiveMoveCount
  Vector2 m_LastMoveVector
  float m_PrevActionTime
Свойства:
  bool isAppFocused
  IInput input
  BaseRuntimePanel focusedPanel
Методы:
  bool get_isAppFocused()
  IInput get_input()
  void set_input(IInput value)
  IInput GetDefaultInput()
  bool ShouldIgnoreEventsOnAppNotFocused()
  BaseRuntimePanel get_focusedPanel()
  void set_focusedPanel(BaseRuntimePanel value)
  void Update(UpdateMode updateMode)
  void SendIMGUIEvents()
  void SendInputEvents()
  void SendFocusBasedEvent(Func`2<TArg, EventBase> evtFactory, TArg arg)
  void SendPositionBasedEvent(Vector3 mousePosition, Vector3 delta, int pointerId, Func`4<Vector3, Vector3, TArg, EventBase> evtFactory, TArg arg, bool deselectIfNoTarget)
  void SendPositionBasedEvent(Vector3 mousePosition, Vector3 delta, int pointerId, Nullable`1<int> targetDisplay, Func`4<Vector3, Vector3, TArg, EventBase> evtFactory, TArg arg, bool deselectIfNoTarget)
  void UpdateFocusedPanel(BaseRuntimePanel runtimePanel)
  EventBase MakeTouchEvent(Touch touch, EventModifiers modifiers)
  bool ProcessTouchEvents()
  Vector2 GetRawMoveVector()
  bool ShouldSendMoveFromInput()
  Vector2 GetLocalScreenPosition(Event evt, Nullable`1& targetDisplay)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DisposeHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void NotifyMissingDispose(IDisposable disposable)
  void NotifyDisposedUsed(IDisposable disposable)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownMenuEventInfo
Наследуется от: object
Поля:
  EventModifiers <modifiers>k__BackingField
  Vector2 <mousePosition>k__BackingField
  Vector2 <localMousePosition>k__BackingField
  char <character>k__BackingField
  KeyCode <keyCode>k__BackingField
Свойства:
  EventModifiers modifiers
  Vector2 mousePosition
  Vector2 localMousePosition
  char character
  KeyCode keyCode
Методы:
  EventModifiers get_modifiers()
  Vector2 get_mousePosition()
  Vector2 get_localMousePosition()
  char get_character()
  KeyCode get_keyCode()
  void .ctor(EventBase e)
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownMenuItem
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownMenuSeparator
Наследуется от: DropdownMenuItem
Поля:
  string <subMenuPath>k__BackingField
Свойства:
  string subMenuPath
Методы:
  string get_subMenuPath()
  void .ctor(string subMenuPath)
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownMenuAction
Наследуется от: DropdownMenuItem
Поля:
  string <name>k__BackingField
  Status <status>k__BackingField
  DropdownMenuEventInfo <eventInfo>k__BackingField
  object <userData>k__BackingField
  Action`1<DropdownMenuAction> actionCallback
  Func`2<DropdownMenuAction, Status> actionStatusCallback
Свойства:
  string name
  Status status
  DropdownMenuEventInfo eventInfo
  object userData
Методы:
  string get_name()
  Status get_status()
  void set_status(Status value)
  DropdownMenuEventInfo get_eventInfo()
  void set_eventInfo(DropdownMenuEventInfo value)
  object get_userData()
  void set_userData(object value)
  Status AlwaysEnabled(DropdownMenuAction a)
  Status AlwaysDisabled(DropdownMenuAction a)
  void .ctor(string actionName, Action`1<DropdownMenuAction> actionCallback, Func`2<DropdownMenuAction, Status> actionStatusCallback, object userData)
  void UpdateActionStatus(DropdownMenuEventInfo eventInfo)
  void Execute()
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownMenu
Наследуется от: object
Поля:
  List`1<DropdownMenuItem> m_MenuItems
  DropdownMenuEventInfo m_DropdownMenuEventInfo
Свойства:
Методы:
  List`1<DropdownMenuItem> MenuItems()
  void AppendAction(string actionName, Action`1<DropdownMenuAction> action, Func`2<DropdownMenuAction, Status> actionStatusCallback, object userData)
  void AppendAction(string actionName, Action`1<DropdownMenuAction> action, Status status)
  void InsertAction(int atIndex, string actionName, Action`1<DropdownMenuAction> action, Func`2<DropdownMenuAction, Status> actionStatusCallback, object userData)
  void InsertAction(int atIndex, string actionName, Action`1<DropdownMenuAction> action, Status status)
  void AppendSeparator(string subMenuPath)
  void InsertSeparator(string subMenuPath, int atIndex)
  void RemoveItemAt(int index)
  void PrepareForDisplay(EventBase e)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownUtility
Наследуется от: object
Поля:
  Func`1<IGenericMenu> MakeDropdownFunc
Свойства:
Методы:
  IGenericMenu CreateDropdown()
--------------------------------------------------
Класс: UnityEngine.UIElements.DispatchMode
Наследуется от: Enum
Поля:
  int value__
  DispatchMode Default
  DispatchMode Queued
  DispatchMode Immediate
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDispatcherGate
Наследуется от: ValueType
Поля:
  EventDispatcher m_Dispatcher
Свойства:
Методы:
  void .ctor(EventDispatcher d)
  void Dispose()
  bool Equals(EventDispatcherGate other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(EventDispatcherGate left, EventDispatcherGate right)
  bool op_Inequality(EventDispatcherGate left, EventDispatcherGate right)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDispatcher
Наследуется от: object
Поля:
  ClickDetector m_ClickDetector
  List`1<IEventDispatchingStrategy> m_DispatchingStrategies
  ObjectPool`1<Queue`1<EventRecord>> k_EventQueuePool
  Queue`1<EventRecord> m_Queue
  PointerDispatchState <pointerState>k__BackingField
  UInt32 m_GateCount
  Stack`1<DispatchContext> m_DispatchContexts
  IEventDispatchingStrategy[] s_EditorStrategies
  bool m_Immediate
  bool <processingEvents>k__BackingField
Свойства:
  PointerDispatchState pointerState
  bool dispatchImmediately
  bool processingEvents
Методы:
  PointerDispatchState get_pointerState()
  EventDispatcher CreateDefault()
  EventDispatcher CreateForRuntime(IList`1<IEventDispatchingStrategy> strategies)
  void .ctor()
  void .ctor(IList`1<IEventDispatchingStrategy> strategies)
  bool get_dispatchImmediately()
  bool get_processingEvents()
  void set_processingEvents(bool value)
  void Dispatch(EventBase evt, IPanel panel, DispatchMode dispatchMode)
  void PushDispatcherContext()
  void PopDispatcherContext()
  void CloseGate()
  void OpenGate()
  void ProcessEventQueue()
  void ProcessEvent(EventBase evt, IPanel panel)
  void ApplyDispatchingStrategies(EventBase evt, IPanel panel, bool imguiEventIsInitiallyUsed)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Focusable
Наследуется от: CallbackEventHandler
Поля:
  bool <focusable>k__BackingField
  int <tabIndex>k__BackingField
  bool m_DelegatesFocus
  bool m_ExcludeFromFocusRing
  bool isIMGUIContainer
Свойства:
  FocusController focusController
  bool focusable
  int tabIndex
  bool delegatesFocus
  bool excludeFromFocusRing
  bool canGrabFocus
Методы:
  void .ctor()
  FocusController get_focusController()
  bool get_focusable()
  void set_focusable(bool value)
  int get_tabIndex()
  void set_tabIndex(int value)
  bool get_delegatesFocus()
  void set_delegatesFocus(bool value)
  bool get_excludeFromFocusRing()
  void set_excludeFromFocusRing(bool value)
  bool get_canGrabFocus()
  void Focus()
  void Blur()
  void BlurImmediately()
  Focusable GetFocusDelegate()
  Focusable GetFirstFocusableChild(VisualElement ve)
  void ExecuteDefaultAction(EventBase evt)
  void ExecuteDefaultActionDisabled(EventBase evt)
  void ProcessEvent(EventBase evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.FocusChangeDirection
Наследуется от: object
Поля:
  FocusChangeDirection <unspecified>k__BackingField
  FocusChangeDirection <none>k__BackingField
  FocusChangeDirection <lastValue>k__BackingField
  int m_Value
Свойства:
  FocusChangeDirection unspecified
  FocusChangeDirection none
  FocusChangeDirection lastValue
Методы:
  FocusChangeDirection get_unspecified()
  FocusChangeDirection get_none()
  FocusChangeDirection get_lastValue()
  void .ctor(int value)
  int op_Implicit(FocusChangeDirection fcd)
  void System.IDisposable.Dispose()
  void Dispose()
  void ApplyTo(FocusController focusController, Focusable f)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IFocusRing
Поля:
Свойства:
Методы:
  FocusChangeDirection GetFocusChangeDirection(Focusable currentFocusable, EventBase e)
  Focusable GetNextFocusable(Focusable currentFocusable, FocusChangeDirection direction)
--------------------------------------------------
Класс: UnityEngine.UIElements.FocusController
Наследуется от: object
Поля:
  IFocusRing <focusRing>k__BackingField
  List`1<FocusedElement> m_FocusedElements
  Focusable m_LastFocusedElement
  Focusable m_LastPendingFocusedElement
  int m_PendingFocusCount
  int <imguiKeyboardControl>k__BackingField
Свойства:
  IFocusRing focusRing
  Focusable focusedElement
  int imguiKeyboardControl
Методы:
  void .ctor(IFocusRing focusRing)
  IFocusRing get_focusRing()
  Focusable get_focusedElement()
  bool IsFocused(Focusable f)
  Focusable GetRetargetedFocusedElement(VisualElement retargetAgainst)
  Focusable GetLeafFocusedElement()
  bool IsLocalElement(Focusable f)
  void ClearPendingFocusEvents()
  bool IsPendingFocus(Focusable f)
  void SetFocusToLastFocusedElement()
  void BlurLastFocusedElement()
  void DoFocusChange(Focusable f)
  Focusable FocusNextInDirection(FocusChangeDirection direction)
  void AboutToReleaseFocus(Focusable focusable, Focusable willGiveFocusTo, FocusChangeDirection direction, DispatchMode dispatchMode)
  void ReleaseFocus(Focusable focusable, Focusable willGiveFocusTo, FocusChangeDirection direction, DispatchMode dispatchMode)
  void AboutToGrabFocus(Focusable focusable, Focusable willTakeFocusFrom, FocusChangeDirection direction, DispatchMode dispatchMode)
  void GrabFocus(Focusable focusable, Focusable willTakeFocusFrom, FocusChangeDirection direction, bool bIsFocusDelegated, DispatchMode dispatchMode)
  void Blur(Focusable focusable, bool bIsFocusDelegated, DispatchMode dispatchMode)
  void SwitchFocus(Focusable newFocusedElement, bool bIsFocusDelegated, DispatchMode dispatchMode)
  void SwitchFocus(Focusable newFocusedElement, FocusChangeDirection direction, bool bIsFocusDelegated, DispatchMode dispatchMode)
  Focusable SwitchFocusOnEvent(EventBase e)
  void ReevaluateFocus()
  bool GetFocusableParentForPointerEvent(Focusable target, Focusable& effectiveTarget)
  int get_imguiKeyboardControl()
  void set_imguiKeyboardControl(int value)
  void SyncIMGUIFocus(int imguiKeyboardControlID, Focusable imguiContainerHavingKeyboardControl, bool forceSwitch)
--------------------------------------------------
Класс: UnityEngine.UIElements.GroupBoxUtility
Наследуется от: object
Поля:
  Dictionary`2<IGroupBox, IGroupManager> s_GroupManagers
  Dictionary`2<IGroupBoxOption, IGroupManager> s_GroupOptionManagerCache
  Type k_GenericGroupBoxType
Свойства:
Методы:
  void RegisterGroupBoxOptionCallbacks(T option)
  void OnOptionSelected(T selectedOption)
  IGroupBoxOption GetSelectedOption(IGroupBox groupBox)
  IGroupManager GetGroupManager(IGroupBox groupBox)
  void OnOptionAttachToPanel(AttachToPanelEvent evt)
  void OnOptionDetachFromPanel(DetachFromPanelEvent evt)
  IGroupManager FindOrCreateGroupManager(IGroupBox groupBox)
  void OnGroupBoxDetachedFromPanel(DetachFromPanelEvent evt)
  void OnPanelDestroyed(BaseVisualElementPanel panel)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IDataWatchHandle
Поля:
Свойства:
  Object watched
  bool disposed
Методы:
  Object get_watched()
  bool get_disposed()
--------------------------------------------------
Класс: UnityEngine.UIElements.IDataWatchService
Поля:
Свойства:
Методы:
  IDataWatchHandle AddWatch(Object watched, Action`1<Object> onDataChanged)
  void RemoveWatch(IDataWatchHandle handle)
  void ForceDirtyNextPoll(Object obj)
--------------------------------------------------
Класс: UnityEngine.UIElements.IGroupBoxOption
Поля:
Свойства:
Методы:
  void SetSelected(bool selected)
--------------------------------------------------
Класс: UnityEngine.UIElements.IGroupBox
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IGroupBox`1
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IGroupManager
Поля:
Свойства:
Методы:
  IGroupBoxOption GetSelectedOption()
  void OnOptionSelectionChanged(IGroupBoxOption selectedOption)
  void RegisterOption(IGroupBoxOption option)
  void UnregisterOption(IGroupBoxOption option)
--------------------------------------------------
Класс: UnityEngine.UIElements.DefaultGroupManager
Наследуется от: object
Поля:
  List`1<IGroupBoxOption> m_GroupOptions
  IGroupBoxOption m_SelectedOption
Свойства:
Методы:
  IGroupBoxOption GetSelectedOption()
  void OnOptionSelectionChanged(IGroupBoxOption selectedOption)
  void RegisterOption(IGroupBoxOption option)
  void UnregisterOption(IGroupBoxOption option)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ILiveReloadAssetTracker`1
Поля:
Свойства:
Методы:
  int StartTrackingAsset(T asset)
  void StopTrackingAsset(T asset)
  bool IsTrackingAsset(T asset)
  bool IsTrackingAssets()
  bool CheckTrackedAssetsDirty()
  void UpdateAssetTrackerCounts(T asset, int newDirtyCount, int newElementCount, int newInlinePropertiesCount, int newAttributePropertiesDirtyCount)
  void OnAssetsImported(HashSet`1<T> changedAssets, HashSet`1<string> deletedAssets)
  void OnTrackedAssetChanged()
--------------------------------------------------
Класс: UnityEngine.UIElements.IMGUIContainer
Наследуется от: VisualElement
Поля:
  Action m_OnGUIHandler
  ObjectGUIState m_ObjectGUIState
  bool useOwnerObjectGUIState
  Rect <lastWorldClip>k__BackingField
  bool m_CullingEnabled
  bool m_IsFocusDelegated
  bool m_RefreshCachedLayout
  LayoutCache m_Cache
  Rect m_CachedClippingRect
  Matrix4x4 m_CachedTransform
  ContextType <contextType>k__BackingField
  bool lostFocus
  bool receivedFocus
  FocusChangeDirection focusChangeDirection
  bool hasFocusableControls
  int newKeyboardFocusControlID
  bool <focusOnlyIfHasFocusableControls>k__BackingField
  string ussClassName
  string ussFoldoutChildDepthClassName
  List`1<string> ussFoldoutChildDepthClassNames
  GUIGlobals m_GUIGlobals
  ProfilerMarker k_OnGUIMarker
  ProfilerMarker k_ImmediateCallbackMarker
  Event s_DefaultMeasureEvent
  Event s_MeasureEvent
  Event s_CurrentEvent
Свойства:
  Action onGUIHandler
  ObjectGUIState guiState
  Rect lastWorldClip
  bool cullingEnabled
  LayoutCache cache
  float layoutMeasuredWidth
  float layoutMeasuredHeight
  ContextType contextType
  bool focusOnlyIfHasFocusableControls
  bool canGrabFocus
Методы:
  Action get_onGUIHandler()
  void set_onGUIHandler(Action value)
  ObjectGUIState get_guiState()
  Rect get_lastWorldClip()
  void set_lastWorldClip(Rect value)
  bool get_cullingEnabled()
  void set_cullingEnabled(bool value)
  LayoutCache get_cache()
  float get_layoutMeasuredWidth()
  float get_layoutMeasuredHeight()
  ContextType get_contextType()
  void set_contextType(ContextType value)
  bool get_focusOnlyIfHasFocusableControls()
  void set_focusOnlyIfHasFocusableControls(bool value)
  bool get_canGrabFocus()
  void .cctor()
  void .ctor()
  void .ctor(Action onGUIHandler)
  void OnGenerateVisualContent(MeshGenerationContext mgc)
  void SaveGlobals()
  void RestoreGlobals()
  void DoOnGUI(Event evt, Matrix4x4 parentTransform, Rect clippingRect, bool isComputingLayout, Rect layoutSize, Action onGUIHandler, bool canAffectFocus)
  void MarkDirtyLayout()
  void HandleEvent(EventBase evt)
  void DoIMGUIRepaint()
  bool SendEventToIMGUI(EventBase evt, bool canAffectFocus, bool verifyBounds)
  bool SendEventToIMGUIRaw(EventBase evt, bool canAffectFocus, bool verifyBounds)
  bool VerifyBounds(EventBase evt)
  bool IsContainerCapturingTheMouse()
  bool IsLocalEvent(EventBase evt)
  bool IsEventInsideLocalWindow(EventBase evt)
  bool IsDockAreaMouseUp(EventBase evt)
  bool HandleIMGUIEvent(Event e, bool canAffectFocus)
  bool HandleIMGUIEvent(Event e, Action onGUIHandler, bool canAffectFocus)
  bool HandleIMGUIEvent(Event e, Matrix4x4 worldTransform, Rect clippingRect, Action onGUIHandler, bool canAffectFocus)
  void ExecuteDefaultAction(EventBase evt)
  void SetFoldoutDepthClass()
  Vector2 DoMeasure(float desiredWidth, MeasureMode widthMode, float desiredHeight, MeasureMode heightMode)
  Rect GetCurrentClipRect()
  void GetCurrentTransformAndClip(IMGUIContainer container, Event evt, Matrix4x4& transform, Rect& clipRect)
  void Dispose()
  void Dispose(bool disposeManaged)
  void <DoOnGUI>b__56_0()
--------------------------------------------------
Класс: UnityEngine.UIElements.ImmediateModeElement
Наследуется от: VisualElement
Поля:
  Dictionary`2<Type, ProfilerMarker> s_Markers
  ProfilerMarker m_ImmediateRepaintMarker
  bool m_CullingEnabled
Свойства:
  bool cullingEnabled
Методы:
  bool get_cullingEnabled()
  void set_cullingEnabled(bool value)
  void .ctor()
  void OnGenerateVisualContent(MeshGenerationContext mgc)
  void CallImmediateRepaint()
  void ImmediateRepaint()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ImmediateModeException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor(Exception inner)
--------------------------------------------------
Класс: UnityEngine.UIElements.SelectionType
Наследуется от: Enum
Поля:
  int value__
  SelectionType None
  SelectionType Single
  SelectionType Multiple
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.ISerializableJsonDictionary
Поля:
Свойства:
Методы:
  void Set(string key, T value)
  T Get(string key)
  T GetScriptable(string key)
  void Overwrite(object obj, string key)
  bool ContainsKey(string key)
  void OnBeforeSerialize()
  void OnAfterDeserialize()
--------------------------------------------------
Класс: UnityEngine.UIElements.ITransform
Поля:
Свойства:
  Vector3 position
  Quaternion rotation
  Vector3 scale
  Matrix4x4 matrix
Методы:
  Vector3 get_position()
  void set_position(Vector3 value)
  Quaternion get_rotation()
  void set_rotation(Quaternion value)
  Vector3 get_scale()
  void set_scale(Vector3 value)
  Matrix4x4 get_matrix()
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyboardNavigationOperation
Наследуется от: Enum
Поля:
  int value__
  KeyboardNavigationOperation None
  KeyboardNavigationOperation SelectAll
  KeyboardNavigationOperation Cancel
  KeyboardNavigationOperation Submit
  KeyboardNavigationOperation Previous
  KeyboardNavigationOperation Next
  KeyboardNavigationOperation PageUp
  KeyboardNavigationOperation PageDown
  KeyboardNavigationOperation Begin
  KeyboardNavigationOperation End
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyboardNavigationManipulator
Наследуется от: Manipulator
Поля:
  Action`2<KeyboardNavigationOperation, EventBase> m_Action
Свойства:
Методы:
  void .ctor(Action`2<KeyboardNavigationOperation, EventBase> action)
  void RegisterCallbacksOnTarget()
  void UnregisterCallbacksFromTarget()
  void OnKeyDown(KeyDownEvent evt)
  void OnRuntimeKeyDown(KeyDownEvent evt)
  void OnEditorKeyDown(KeyDownEvent evt)
  void OnNavigationCancel(NavigationCancelEvent evt)
  void OnNavigationSubmit(NavigationSubmitEvent evt)
  void OnNavigationMove(NavigationMoveEvent evt)
  void Invoke(KeyboardNavigationOperation operation, EventBase evt)
  KeyboardNavigationOperation <OnRuntimeKeyDown>g__GetOperation|5_0(<>c__DisplayClass5_0& )
  KeyboardNavigationOperation <OnEditorKeyDown>g__GetOperation|6_0(<>c__DisplayClass6_0& )
--------------------------------------------------
Класс: UnityEngine.UIElements.ManipulatorActivationFilter
Наследуется от: ValueType
Поля:
  MouseButton <button>k__BackingField
  EventModifiers <modifiers>k__BackingField
  int <clickCount>k__BackingField
Свойства:
  MouseButton button
  EventModifiers modifiers
  int clickCount
Методы:
  MouseButton get_button()
  void set_button(MouseButton value)
  EventModifiers get_modifiers()
  void set_modifiers(EventModifiers value)
  int get_clickCount()
  void set_clickCount(int value)
  bool Equals(object obj)
  bool Equals(ManipulatorActivationFilter other)
  int GetHashCode()
  bool Matches(IMouseEvent e)
  bool HasModifiers(IMouseEvent e)
  bool Matches(IPointerEvent e)
  bool HasModifiers(IPointerEvent e)
  bool MatchModifiers(bool alt, bool ctrl, bool shift, bool command)
  bool op_Equality(ManipulatorActivationFilter filter1, ManipulatorActivationFilter filter2)
  bool op_Inequality(ManipulatorActivationFilter filter1, ManipulatorActivationFilter filter2)
--------------------------------------------------
Класс: UnityEngine.UIElements.IManipulator
Поля:
Свойства:
  VisualElement target
Методы:
  VisualElement get_target()
  void set_target(VisualElement value)
--------------------------------------------------
Класс: UnityEngine.UIElements.Manipulator
Наследуется от: object
Поля:
  VisualElement m_Target
Свойства:
  VisualElement target
Методы:
  void RegisterCallbacksOnTarget()
  void UnregisterCallbacksFromTarget()
  VisualElement get_target()
  void set_target(VisualElement value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseButton
Наследуется от: Enum
Поля:
  int value__
  MouseButton LeftMouse
  MouseButton RightMouse
  MouseButton MiddleMouse
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseCaptureController
Наследуется от: object
Поля:
  bool m_IsMouseCapturedWarningEmitted
  bool m_ReleaseMouseWarningEmitted
Свойства:
Методы:
  bool IsMouseCaptured()
  bool HasMouseCapture(IEventHandler handler)
  void CaptureMouse(IEventHandler handler)
  void ReleaseMouse(IEventHandler handler)
  void ReleaseMouse()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseManipulator
Наследуется от: Manipulator
Поля:
  List`1<ManipulatorActivationFilter> <activators>k__BackingField
  ManipulatorActivationFilter m_currentActivator
Свойства:
  List`1<ManipulatorActivationFilter> activators
Методы:
  List`1<ManipulatorActivationFilter> get_activators()
  void set_activators(List`1<ManipulatorActivationFilter> value)
  void .ctor()
  bool CanStartManipulation(IMouseEvent e)
  bool CanStopManipulation(IMouseEvent e)
--------------------------------------------------
Класс: UnityEngine.UIElements.ObjectPool`1
Наследуется от: object
Поля:
  Stack`1<T> m_Stack
  int m_MaxSize
Свойства:
  int maxSize
Методы:
  int get_maxSize()
  void set_maxSize(int value)
  void .ctor(int maxSize)
  int Size()
  void Clear()
  T Get()
  void Release(T element)
--------------------------------------------------
Класс: UnityEngine.UIElements.ContextType
Наследуется от: Enum
Поля:
  int value__
  ContextType Player
  ContextType Editor
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.VersionChangeType
Наследуется от: Enum
Поля:
  int value__
  VersionChangeType Bindings
  VersionChangeType ViewData
  VersionChangeType Hierarchy
  VersionChangeType Layout
  VersionChangeType StyleSheet
  VersionChangeType Styles
  VersionChangeType Overflow
  VersionChangeType BorderRadius
  VersionChangeType BorderWidth
  VersionChangeType Transform
  VersionChangeType Size
  VersionChangeType Repaint
  VersionChangeType Opacity
  VersionChangeType Color
  VersionChangeType RenderHints
  VersionChangeType TransitionProperty
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UsageHints
Наследуется от: Enum
Поля:
  int value__
  UsageHints None
  UsageHints DynamicTransform
  UsageHints GroupTransform
  UsageHints MaskContainer
  UsageHints DynamicColor
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.RenderHints
Наследуется от: Enum
Поля:
  int value__
  RenderHints None
  RenderHints GroupTransform
  RenderHints BoneTransform
  RenderHints ClipWithScissors
  RenderHints MaskContainer
  RenderHints DynamicColor
  RenderHints DirtyOffset
  RenderHints DirtyGroupTransform
  RenderHints DirtyBoneTransform
  RenderHints DirtyClipWithScissors
  RenderHints DirtyMaskContainer
  RenderHints DirtyAll
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelClearFlags
Наследуется от: Enum
Поля:
  int value__
  PanelClearFlags None
  PanelClearFlags Color
  PanelClearFlags Depth
  PanelClearFlags All
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelClearSettings
Наследуется от: ValueType
Поля:
  bool clearDepthStencil
  bool clearColor
  Color color
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.RepaintData
Наследуется от: object
Поля:
  Matrix4x4 <currentOffset>k__BackingField
  Vector2 <mousePosition>k__BackingField
  Rect <currentWorldClip>k__BackingField
  Event <repaintEvent>k__BackingField
Свойства:
  Matrix4x4 currentOffset
  Vector2 mousePosition
  Rect currentWorldClip
  Event repaintEvent
Методы:
  Matrix4x4 get_currentOffset()
  void set_currentOffset(Matrix4x4 value)
  Vector2 get_mousePosition()
  void set_mousePosition(Vector2 value)
  Rect get_currentWorldClip()
  void set_currentWorldClip(Rect value)
  Event get_repaintEvent()
  void set_repaintEvent(Event value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.HierarchyEvent
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(VisualElement ve, HierarchyChangeType changeType)
  IAsyncResult BeginInvoke(VisualElement ve, HierarchyChangeType changeType, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.IPanel
Поля:
Свойства:
  VisualElement visualTree
  EventDispatcher dispatcher
  ContextType contextType
  FocusController focusController
  ContextualMenuManager contextualMenuManager
Методы:
  VisualElement get_visualTree()
  EventDispatcher get_dispatcher()
  ContextType get_contextType()
  FocusController get_focusController()
  VisualElement Pick(Vector2 point)
  VisualElement PickAll(Vector2 point, List`1<VisualElement> picked)
  ContextualMenuManager get_contextualMenuManager()
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseVisualElementPanel
Наследуется от: object
Поля:
  Action`1<BaseVisualElementPanel> panelDisposed
  float m_Scale
  YogaConfig yogaConfig
  float m_PixelsPerPoint
  PanelClearSettings <clearSettings>k__BackingField
  bool <duringLayoutPhase>k__BackingField
  RepaintData <repaintData>k__BackingField
  ICursorManager <cursorManager>k__BackingField
  ContextualMenuManager <contextualMenuManager>k__BackingField
  bool <disposed>k__BackingField
  ElementUnderPointer m_TopElementUnderPointers
  Action standardShaderChanged
  Action standardWorldSpaceShaderChanged
  Action atlasChanged
  Action`1<Material> updateMaterial
  HierarchyEvent hierarchyChanged
  Action`1<IPanel> beforeUpdate
Свойства:
  EventInterests IMGUIEventInterests
  ScriptableObject ownerObject
  SavePersistentViewData saveViewData
  GetViewDataDictionary getViewDataDictionary
  int IMGUIContainersCount
  FocusController focusController
  IMGUIContainer rootIMGUIContainer
  float scale
  float pixelsPerPoint
  float scaledPixelsPerPoint
  PanelClearFlags clearFlags
  PanelClearSettings clearSettings
  bool duringLayoutPhase
  bool isDirty
  UInt32 version
  UInt32 repaintVersion
  UInt32 hierarchyVersion
  RepaintData repaintData
  ICursorManager cursorManager
  ContextualMenuManager contextualMenuManager
  VisualElement visualTree
  EventDispatcher dispatcher
  IScheduler scheduler
  IStylePropertyAnimationSystem styleAnimationSystem
  ContextType contextType
  bool disposed
  Shader standardShader
  Shader standardWorldSpaceShader
  AtlasBase atlas
Методы:
  EventInterests get_IMGUIEventInterests()
  void set_IMGUIEventInterests(EventInterests value)
  ScriptableObject get_ownerObject()
  void set_ownerObject(ScriptableObject value)
  SavePersistentViewData get_saveViewData()
  void set_saveViewData(SavePersistentViewData value)
  GetViewDataDictionary get_getViewDataDictionary()
  void set_getViewDataDictionary(GetViewDataDictionary value)
  int get_IMGUIContainersCount()
  void set_IMGUIContainersCount(int value)
  FocusController get_focusController()
  void set_focusController(FocusController value)
  IMGUIContainer get_rootIMGUIContainer()
  void set_rootIMGUIContainer(IMGUIContainer value)
  void add_panelDisposed(Action`1<BaseVisualElementPanel> value)
  void remove_panelDisposed(Action`1<BaseVisualElementPanel> value)
  void .ctor()
  void Dispose()
  void Dispose(bool disposing)
  void Repaint(Event e)
  void ValidateLayout()
  void UpdateAnimations()
  void UpdateBindings()
  void ApplyStyles()
  float get_scale()
  void set_scale(float value)
  float get_pixelsPerPoint()
  void set_pixelsPerPoint(float value)
  float get_scaledPixelsPerPoint()
  PanelClearFlags get_clearFlags()
  void set_clearFlags(PanelClearFlags value)
  PanelClearSettings get_clearSettings()
  void set_clearSettings(PanelClearSettings value)
  bool get_duringLayoutPhase()
  void set_duringLayoutPhase(bool value)
  bool get_isDirty()
  UInt32 get_version()
  UInt32 get_repaintVersion()
  UInt32 get_hierarchyVersion()
  void OnVersionChanged(VisualElement ele, VersionChangeType changeTypeFlag)
  void SetUpdater(IVisualTreeUpdater updater, VisualTreeUpdatePhase phase)
  RepaintData get_repaintData()
  void set_repaintData(RepaintData value)
  ICursorManager get_cursorManager()
  void set_cursorManager(ICursorManager value)
  ContextualMenuManager get_contextualMenuManager()
  void set_contextualMenuManager(ContextualMenuManager value)
  VisualElement get_visualTree()
  EventDispatcher get_dispatcher()
  void set_dispatcher(EventDispatcher value)
  void SendEvent(EventBase e, DispatchMode dispatchMode)
  IScheduler get_scheduler()
  IStylePropertyAnimationSystem get_styleAnimationSystem()
  void set_styleAnimationSystem(IStylePropertyAnimationSystem value)
  ContextType get_contextType()
  void set_contextType(ContextType value)
  VisualElement Pick(Vector2 point)
  VisualElement PickAll(Vector2 point, List`1<VisualElement> picked)
  bool get_disposed()
  void set_disposed(bool value)
  IVisualTreeUpdater GetUpdater(VisualTreeUpdatePhase phase)
  VisualElement GetTopElementUnderPointer(int pointerId)
  VisualElement RecomputeTopElementUnderPointer(int pointerId, Vector2 pointerPos, EventBase triggerEvent)
  void ClearCachedElementUnderPointer(int pointerId, EventBase triggerEvent)
  void CommitElementUnderPointers()
  Shader get_standardShader()
  void set_standardShader(Shader value)
  Shader get_standardWorldSpaceShader()
  void set_standardWorldSpaceShader(Shader value)
  void add_standardShaderChanged(Action value)
  void remove_standardShaderChanged(Action value)
  void add_standardWorldSpaceShaderChanged(Action value)
  void remove_standardWorldSpaceShaderChanged(Action value)
  void InvokeStandardShaderChanged()
  void InvokeStandardWorldSpaceShaderChanged()
  void add_atlasChanged(Action value)
  void remove_atlasChanged(Action value)
  void InvokeAtlasChanged()
  AtlasBase get_atlas()
  void set_atlas(AtlasBase value)
  void add_updateMaterial(Action`1<Material> value)
  void remove_updateMaterial(Action`1<Material> value)
  void InvokeUpdateMaterial(Material mat)
  void add_hierarchyChanged(HierarchyEvent value)
  void remove_hierarchyChanged(HierarchyEvent value)
  void InvokeHierarchyChanged(VisualElement ve, HierarchyChangeType changeType)
  void add_beforeUpdate(Action`1<IPanel> value)
  void remove_beforeUpdate(Action`1<IPanel> value)
  void InvokeBeforeUpdate()
  void UpdateElementUnderPointers()
  void Update()
--------------------------------------------------
Класс: UnityEngine.UIElements.LoadResourceFunction
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  Object Invoke(string pathName, Type type, float dpiScaling)
  IAsyncResult BeginInvoke(string pathName, Type type, float dpiScaling, AsyncCallback callback, object object)
  Object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.TimeMsFunction
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  long Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  long EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.GetViewDataDictionary
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  ISerializableJsonDictionary Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  ISerializableJsonDictionary EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.SavePersistentViewData
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.Panel
Наследуется от: BaseVisualElementPanel
Поля:
  VisualElement m_RootContainer
  VisualTreeUpdater m_VisualTreeUpdater
  IStylePropertyAnimationSystem m_StylePropertyAnimationSystem
  string m_PanelName
  UInt32 m_Version
  UInt32 m_RepaintVersion
  UInt32 m_HierarchyVersion
  ProfilerMarker m_MarkerBeforeUpdate
  ProfilerMarker m_MarkerUpdate
  ProfilerMarker m_MarkerLayout
  ProfilerMarker m_MarkerBindings
  ProfilerMarker m_MarkerAnimations
  ProfilerMarker s_MarkerPickAll
  EventDispatcher <dispatcher>k__BackingField
  TimerEventScheduler m_Scheduler
  ScriptableObject <ownerObject>k__BackingField
  ContextType <contextType>k__BackingField
  SavePersistentViewData <saveViewData>k__BackingField
  GetViewDataDictionary <getViewDataDictionary>k__BackingField
  FocusController <focusController>k__BackingField
  EventInterests <IMGUIEventInterests>k__BackingField
  LoadResourceFunction <loadResourceFunc>k__BackingField
  TimeMsFunction <TimeSinceStartup>k__BackingField
  int <IMGUIContainersCount>k__BackingField
  IMGUIContainer <rootIMGUIContainer>k__BackingField
  Shader m_StandardShader
  AtlasBase m_Atlas
  bool m_ValidatingLayout
  Action`1<Panel> beforeAnyRepaint
Свойства:
  VisualElement visualTree
  EventDispatcher dispatcher
  TimerEventScheduler timerEventScheduler
  IScheduler scheduler
  VisualTreeUpdater visualTreeUpdater
  IStylePropertyAnimationSystem styleAnimationSystem
  ScriptableObject ownerObject
  ContextType contextType
  SavePersistentViewData saveViewData
  GetViewDataDictionary getViewDataDictionary
  FocusController focusController
  EventInterests IMGUIEventInterests
  LoadResourceFunction loadResourceFunc
  string name
  TimeMsFunction TimeSinceStartup
  int IMGUIContainersCount
  IMGUIContainer rootIMGUIContainer
  UInt32 version
  UInt32 repaintVersion
  UInt32 hierarchyVersion
  Shader standardShader
  AtlasBase atlas
Методы:
  VisualElement get_visualTree()
  EventDispatcher get_dispatcher()
  void set_dispatcher(EventDispatcher value)
  TimerEventScheduler get_timerEventScheduler()
  IScheduler get_scheduler()
  VisualTreeUpdater get_visualTreeUpdater()
  IStylePropertyAnimationSystem get_styleAnimationSystem()
  void set_styleAnimationSystem(IStylePropertyAnimationSystem value)
  ScriptableObject get_ownerObject()
  void set_ownerObject(ScriptableObject value)
  ContextType get_contextType()
  void set_contextType(ContextType value)
  SavePersistentViewData get_saveViewData()
  void set_saveViewData(SavePersistentViewData value)
  GetViewDataDictionary get_getViewDataDictionary()
  void set_getViewDataDictionary(GetViewDataDictionary value)
  FocusController get_focusController()
  void set_focusController(FocusController value)
  EventInterests get_IMGUIEventInterests()
  void set_IMGUIEventInterests(EventInterests value)
  LoadResourceFunction get_loadResourceFunc()
  void set_loadResourceFunc(LoadResourceFunction value)
  Object LoadResource(string pathName, Type type, float dpiScaling)
  void Focus()
  void Blur()
  string get_name()
  void set_name(string value)
  void CreateMarkers()
  TimeMsFunction get_TimeSinceStartup()
  void set_TimeSinceStartup(TimeMsFunction value)
  int get_IMGUIContainersCount()
  void set_IMGUIContainersCount(int value)
  IMGUIContainer get_rootIMGUIContainer()
  void set_rootIMGUIContainer(IMGUIContainer value)
  UInt32 get_version()
  UInt32 get_repaintVersion()
  UInt32 get_hierarchyVersion()
  Shader get_standardShader()
  void set_standardShader(Shader value)
  AtlasBase get_atlas()
  void set_atlas(AtlasBase value)
  Panel CreateEditorPanel(ScriptableObject ownerObject)
  void .ctor(ScriptableObject ownerObject, ContextType contextType, EventDispatcher dispatcher)
  void Dispose(bool disposing)
  long TimeSinceStartupMs()
  long DefaultTimeSinceStartupMs()
  VisualElement PickAllWithoutValidatingLayout(VisualElement root, Vector2 point)
  VisualElement PickAll(VisualElement root, Vector2 point, List`1<VisualElement> picked)
  VisualElement PerformPick(VisualElement root, Vector2 point, List`1<VisualElement> picked)
  VisualElement PickAll(Vector2 point, List`1<VisualElement> picked)
  VisualElement Pick(Vector2 point)
  void ValidateLayout()
  void UpdateAnimations()
  void UpdateBindings()
  void ApplyStyles()
  void UpdateForRepaint()
  void add_beforeAnyRepaint(Action`1<Panel> value)
  void remove_beforeAnyRepaint(Action`1<Panel> value)
  void Repaint(Event e)
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void SetUpdater(IVisualTreeUpdater updater, VisualTreeUpdatePhase phase)
  IVisualTreeUpdater GetUpdater(VisualTreeUpdatePhase phase)
  void .cctor()
  Vector2Int <Pick>g__PixelOf|99_0(Vector2 p)
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseRuntimePanel
Наследуется от: Panel
Поля:
  GameObject m_SelectableGameObject
  int s_CurrentRuntimePanelCounter
  int m_RuntimePanelCreationIndex
  float m_SortingPriority
  Action destroyed
  Shader m_StandardWorldSpaceShader
  bool m_DrawToCameras
  RenderTexture targetTexture
  Matrix4x4 panelToWorld
  int <targetDisplay>k__BackingField
  Func`2<Vector2, Vector2> DefaultScreenToPanelSpace
  Func`2<Vector2, Vector2> m_ScreenToPanelSpace
Свойства:
  GameObject selectableGameObject
  float sortingPriority
  Shader standardWorldSpaceShader
  bool drawToCameras
  int targetDisplay
  int screenRenderingWidth
  int screenRenderingHeight
  Func`2<Vector2, Vector2> screenToPanelSpace
Методы:
  GameObject get_selectableGameObject()
  void set_selectableGameObject(GameObject value)
  float get_sortingPriority()
  void set_sortingPriority(float value)
  void add_destroyed(Action value)
  void remove_destroyed(Action value)
  void .ctor(ScriptableObject ownerObject, EventDispatcher dispatcher)
  void Dispose(bool disposing)
  Shader get_standardWorldSpaceShader()
  void set_standardWorldSpaceShader(Shader value)
  bool get_drawToCameras()
  void set_drawToCameras(bool value)
  int get_targetDisplay()
  void set_targetDisplay(int value)
  int get_screenRenderingWidth()
  int get_screenRenderingHeight()
  void Repaint(Event e)
  Func`2<Vector2, Vector2> get_screenToPanelSpace()
  void set_screenToPanelSpace(Func`2<Vector2, Vector2> value)
  Vector2 ScreenToPanel(Vector2 screen)
  bool ScreenToPanel(Vector2 screenPosition, Vector2 screenDelta, Vector2& panelPosition, Vector2& panelDelta, bool allowOutside)
  void AssignPanelToComponents(BaseRuntimePanel panel)
  void PointerLeavesPanel(int pointerId, Vector2 position)
  void PointerEntersPanel(int pointerId, Vector2 position)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IRuntimePanelComponent
Поля:
Свойства:
  IPanel panel
Методы:
  IPanel get_panel()
  void set_panel(IPanel value)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerCaptureHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  PointerDispatchState GetStateFor(IEventHandler handler)
  bool HasPointerCapture(IEventHandler handler, int pointerId)
  void CapturePointer(IEventHandler handler, int pointerId)
  void ReleasePointer(IEventHandler handler, int pointerId)
  IEventHandler GetCapturingElement(IPanel panel, int pointerId)
  void ReleasePointer(IPanel panel, int pointerId)
  void ActivateCompatibilityMouseEvents(IPanel panel, int pointerId)
  void PreventCompatibilityMouseEvents(IPanel panel, int pointerId)
  bool ShouldSendCompatibilityMouseEvents(IPanel panel, IPointerEvent evt)
  void ProcessPointerCapture(IPanel panel, int pointerId)
  void ResetPointerDispatchState(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerDispatchState
Наследуется от: object
Поля:
  IEventHandler[] m_PendingPointerCapture
  IEventHandler[] m_PointerCapture
  Boolean[] m_ShouldSendCompatibilityMouseEvents
Свойства:
Методы:
  void .ctor()
  void Reset()
  IEventHandler GetCapturingElement(int pointerId)
  bool HasPointerCapture(IEventHandler handler, int pointerId)
  void CapturePointer(IEventHandler handler, int pointerId)
  void ReleasePointer(int pointerId)
  void ReleasePointer(IEventHandler handler, int pointerId)
  void ProcessPointerCapture(int pointerId)
  void ActivateCompatibilityMouseEvents(int pointerId)
  void PreventCompatibilityMouseEvents(int pointerId)
  bool ShouldSendCompatibilityMouseEvents(IPointerEvent evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerManipulator
Наследуется от: MouseManipulator
Поля:
  int m_CurrentPointerId
Свойства:
Методы:
  bool CanStartManipulation(IPointerEvent e)
  bool CanStopManipulation(IPointerEvent e)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ProjectionUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  Matrix4x4 Ortho(float left, float right, float bottom, float top, float near, float far)
--------------------------------------------------
Класс: UnityEngine.UIElements.TimerState
Наследуется от: ValueType
Поля:
  long <start>k__BackingField
  long <now>k__BackingField
Свойства:
  long start
  long now
  long deltaTime
Методы:
  long get_start()
  void set_start(long value)
  long get_now()
  void set_now(long value)
  long get_deltaTime()
  bool Equals(object obj)
  bool Equals(TimerState other)
  int GetHashCode()
  bool op_Equality(TimerState state1, TimerState state2)
  bool op_Inequality(TimerState state1, TimerState state2)
--------------------------------------------------
Класс: UnityEngine.UIElements.IScheduler
Поля:
Свойства:
Методы:
  ScheduledItem ScheduleOnce(Action`1<TimerState> timerUpdateEvent, long delayMs)
  ScheduledItem ScheduleUntil(Action`1<TimerState> timerUpdateEvent, long delayMs, long intervalMs, Func`1<bool> stopCondition)
  ScheduledItem ScheduleForDuration(Action`1<TimerState> timerUpdateEvent, long delayMs, long intervalMs, long durationMs)
  void Unschedule(ScheduledItem item)
  void Schedule(ScheduledItem item)
  void UpdateScheduledEvents()
--------------------------------------------------
Класс: UnityEngine.UIElements.ScheduledItem
Наследуется от: object
Поля:
  Func`1<bool> timerUpdateStopCondition
  Func`1<bool> OnceCondition
  Func`1<bool> ForeverCondition
  long <startMs>k__BackingField
  long <delayMs>k__BackingField
  long <intervalMs>k__BackingField
  long <endTimeMs>k__BackingField
Свойства:
  long startMs
  long delayMs
  long intervalMs
  long endTimeMs
Методы:
  long get_startMs()
  void set_startMs(long value)
  long get_delayMs()
  void set_delayMs(long value)
  long get_intervalMs()
  void set_intervalMs(long value)
  long get_endTimeMs()
  void set_endTimeMs(long value)
  void .ctor()
  void ResetStartTime()
  void SetDuration(long durationMs)
  void PerformTimerUpdate(TimerState state)
  void OnItemUnscheduled()
  bool ShouldUnschedule()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TimerEventScheduler
Наследуется от: object
Поля:
  List`1<ScheduledItem> m_ScheduledItems
  bool m_TransactionMode
  List`1<ScheduledItem> m_ScheduleTransactions
  HashSet`1<ScheduledItem> m_UnscheduleTransactions
  bool disableThrottling
  int m_LastUpdatedIndex
Свойства:
Методы:
  void Schedule(ScheduledItem item)
  ScheduledItem ScheduleOnce(Action`1<TimerState> timerUpdateEvent, long delayMs)
  ScheduledItem ScheduleUntil(Action`1<TimerState> timerUpdateEvent, long delayMs, long intervalMs, Func`1<bool> stopCondition)
  ScheduledItem ScheduleForDuration(Action`1<TimerState> timerUpdateEvent, long delayMs, long intervalMs, long durationMs)
  bool RemovedScheduledItemAt(int index)
  void Unschedule(ScheduledItem item)
  bool PrivateUnSchedule(ScheduledItem sItem)
  void UpdateScheduledEvents()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Spacing
Наследуется от: ValueType
Поля:
  float left
  float top
  float right
  float bottom
Свойства:
  float horizontal
  float vertical
Методы:
  float get_horizontal()
  float get_vertical()
  void .ctor(float left, float top, float right, float bottom)
  Rect op_Addition(Rect r, Spacing a)
  Rect op_Subtraction(Rect r, Spacing a)
--------------------------------------------------
Класс: UnityEngine.UIElements.StringUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  int LevenshteinDistance(string s, string t)
--------------------------------------------------
Класс: UnityEngine.UIElements.StringUtilsExtensions
Наследуется от: object
Поля:
  char NoDelimiter
  Char[] WordDelimiters
Свойства:
Методы:
  string ToPascalCase(string text)
  string ToCamelCase(string text)
  string ToKebabCase(string text)
  string ToTrainCase(string text)
  string ToSnakeCase(string text)
  string ConvertCase(string text, char outputWordDelimiter, Func`2<char, char> startOfStringCaseHandler, Func`2<char, char> middleStringCaseHandler)
  bool EndsWithIgnoreCaseFast(string a, string b)
  bool StartsWithIgnoreCaseFast(string a, string b)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Position
Наследуется от: Enum
Поля:
  int value__
  Position Relative
  Position Absolute
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Overflow
Наследуется от: Enum
Поля:
  int value__
  Overflow Visible
  Overflow Hidden
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.OverflowInternal
Наследуется от: Enum
Поля:
  int value__
  OverflowInternal Visible
  OverflowInternal Hidden
  OverflowInternal Scroll
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.OverflowClipBox
Наследуется от: Enum
Поля:
  int value__
  OverflowClipBox PaddingBox
  OverflowClipBox ContentBox
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.FlexDirection
Наследуется от: Enum
Поля:
  int value__
  FlexDirection Column
  FlexDirection ColumnReverse
  FlexDirection Row
  FlexDirection RowReverse
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Wrap
Наследуется от: Enum
Поля:
  int value__
  Wrap NoWrap
  Wrap Wrap
  Wrap WrapReverse
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Align
Наследуется от: Enum
Поля:
  int value__
  Align Auto
  Align FlexStart
  Align Center
  Align FlexEnd
  Align Stretch
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Justify
Наследуется от: Enum
Поля:
  int value__
  Justify FlexStart
  Justify Center
  Justify FlexEnd
  Justify SpaceBetween
  Justify SpaceAround
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.TextOverflowPosition
Наследуется от: Enum
Поля:
  int value__
  TextOverflowPosition End
  TextOverflowPosition Start
  TextOverflowPosition Middle
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.TextOverflow
Наследуется от: Enum
Поля:
  int value__
  TextOverflow Clip
  TextOverflow Ellipsis
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.TransformOriginOffset
Наследуется от: Enum
Поля:
  int value__
  TransformOriginOffset Left
  TransformOriginOffset Right
  TransformOriginOffset Top
  TransformOriginOffset Bottom
  TransformOriginOffset Center
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Visibility
Наследуется от: Enum
Поля:
  int value__
  Visibility Visible
  Visibility Hidden
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.WhiteSpace
Наследуется от: Enum
Поля:
  int value__
  WhiteSpace Normal
  WhiteSpace NoWrap
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.DisplayStyle
Наследуется от: Enum
Поля:
  int value__
  DisplayStyle Flex
  DisplayStyle None
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IStylePainter
Поля:
Свойства:
  VisualElement visualElement
Методы:
  MeshWriteData DrawMesh(int vertexCount, int indexCount, Texture texture, Material material, MeshFlags flags)
  void DrawText(TextParams textParams, ITextHandle handle, float pixelsPerPoint)
  void DrawRectangle(RectangleParams rectParams)
  void DrawBorder(BorderParams borderParams)
  void DrawImmediate(Action callback, bool cullingEnabled)
  VisualElement get_visualElement()
--------------------------------------------------
Класс: UnityEngine.UIElements.CursorPositionStylePainterParameters
Наследуется от: ValueType
Поля:
  Rect rect
  string text
  Font font
  int fontSize
  FontStyle fontStyle
  TextAnchor anchor
  float wordWrapWidth
  bool richText
  int cursorIndex
Свойства:
Методы:
  CursorPositionStylePainterParameters GetDefault(VisualElement ve, string text)
  TextNativeSettings GetTextNativeSettings(float scaling)
--------------------------------------------------
Класс: UnityEngine.UIElements.IStylePropertyAnimations
Поля:
Свойства:
  int runningAnimationCount
  int completedAnimationCount
Методы:
  bool Start(StylePropertyId id, float from, float to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, int from, int to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Length from, Length to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Color from, Color to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartEnum(StylePropertyId id, int from, int to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Background from, Background to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, FontDefinition from, FontDefinition to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Font from, Font to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, TextShadow from, TextShadow to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Scale from, Scale to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Translate from, Translate to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, Rotate from, Rotate to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool Start(StylePropertyId id, TransformOrigin from, TransformOrigin to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool HasRunningAnimation(StylePropertyId id)
  void UpdateAnimation(StylePropertyId id)
  void GetAllAnimations(List`1<StylePropertyId> outPropertyIds)
  void CancelAnimation(StylePropertyId id)
  void CancelAllAnimations()
  int get_runningAnimationCount()
  void set_runningAnimationCount(int value)
  int get_completedAnimationCount()
  void set_completedAnimationCount(int value)
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElement
Наследуется от: Focusable
Поля:
  int <UnityEngine.UIElements.IStylePropertyAnimations.runningAnimationCount>k__BackingField
  int <UnityEngine.UIElements.IStylePropertyAnimations.completedAnimationCount>k__BackingField
  UInt32 s_NextId
  List`1<string> s_EmptyClassList
  PropertyName userDataPropertyKey
  string disabledUssClassName
  string m_Name
  List`1<string> m_ClassList
  List`1<KeyValuePair`2<PropertyName, object>> m_PropertyBag
  VisualElementFlags m_Flags
  string m_ViewDataKey
  RenderHints m_RenderHints
  Rect lastLayout
  Rect lastPseudoPadding
  RenderChainVEData renderChainData
  Rect m_Layout
  Rect m_BoundingBox
  Rect m_WorldBoundingBox
  Matrix4x4 m_WorldTransformCache
  Matrix4x4 m_WorldTransformInverseCache
  Rect m_WorldClip
  Rect m_WorldClipMinusGroup
  bool m_WorldClipIsInfinite
  Rect s_InfiniteRect
  PseudoStates triggerPseudoMask
  PseudoStates dependencyPseudoMask
  PseudoStates m_PseudoStates
  int <containedPointerIds>k__BackingField
  PickingMode <pickingMode>k__BackingField
  YogaNode <yogaNode>k__BackingField
  ComputedStyle m_Style
  StyleVariableContext variableContext
  int inheritedStylesHash
  UInt32 controlid
  int imguiContainerDescendantCount
  bool <enabledSelf>k__BackingField
  Action`1<MeshGenerationContext> <generateVisualContent>k__BackingField
  ProfilerMarker k_GenerateVisualContentMarker
  RenderTargetMode m_SubRenderTargetMode
  Material s_runtimeMaterial
  Material m_defaultMaterial
  List`1<IValueAnimationUpdate> m_RunningAnimations
  string k_RootVisualContainerName
  Hierarchy <hierarchy>k__BackingField
  bool <isRootVisualContainer>k__BackingField
  bool <cacheAsBitmap>k__BackingField
  VisualElement m_PhysicalParent
  VisualElement m_LogicalParent
  List`1<VisualElement> s_EmptyList
  List`1<VisualElement> m_Children
  BaseVisualElementPanel <elementPanel>k__BackingField
  VisualTreeAsset m_VisualTreeAssetSource
  CustomStyleAccess s_CustomStyleAccess
  InlineStyleAccess inlineStyleAccess
  List`1<StyleSheet> styleSheetList
  Regex s_InternalStyleSheetPath
  PropertyName tooltipPropertyKey
  Dictionary`2<Type, TypeData> s_TypeData
  TypeData m_TypeData
Свойства:
  bool hasRunningAnimations
  bool hasCompletedAnimations
  int UnityEngine.UIElements.IStylePropertyAnimations.runningAnimationCount
  int UnityEngine.UIElements.IStylePropertyAnimations.completedAnimationCount
  IStylePropertyAnimations styleAnimation
  bool isCompositeRoot
  bool isHierarchyDisplayed
  string viewDataKey
  bool enableViewDataPersistence
  object userData
  bool canGrabFocus
  FocusController focusController
  UsageHints usageHints
  RenderHints renderHints
  ITransform transform
  Vector3 UnityEngine.UIElements.ITransform.position
  Quaternion UnityEngine.UIElements.ITransform.rotation
  Vector3 UnityEngine.UIElements.ITransform.scale
  Matrix4x4 UnityEngine.UIElements.ITransform.matrix
  bool isLayoutManual
  float scaledPixelsPerPoint
  Rect layout
  Rect contentRect
  Rect paddingRect
  bool isBoundingBoxDirty
  bool isWorldBoundingBoxDirty
  Rect boundingBox
  Rect worldBoundingBox
  Rect boundingBoxInParentSpace
  Rect worldBound
  Rect localBound
  Rect rect
  bool isWorldTransformDirty
  bool isWorldTransformInverseDirty
  Matrix4x4 worldTransform
  Matrix4x4& worldTransformRef
  Matrix4x4& worldTransformInverse
  bool isWorldClipDirty
  Rect worldClip
  Rect worldClipMinusGroup
  bool worldClipIsInfinite
  PseudoStates pseudoStates
  int containedPointerIds
  PickingMode pickingMode
  string name
  List`1<string> classList
  string fullTypeName
  string typeName
  YogaNode yogaNode
  ComputedStyle& computedStyle
  bool hasInlineStyle
  bool styleInitialized
  float opacity
  bool isParentEnabledInHierarchy
  bool enabledInHierarchy
  bool enabledSelf
  bool visible
  Action`1<MeshGenerationContext> generateVisualContent
  bool requireMeasureFunction
  RenderTargetMode subRenderTargetMode
  Material defaultMaterial
  IExperimentalFeatures experimental
  ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures.animation
  Hierarchy hierarchy
  bool isRootVisualContainer
  bool cacheAsBitmap
  bool disableClipping
  VisualElement parent
  BaseVisualElementPanel elementPanel
  IPanel panel
  VisualElement contentContainer
  VisualTreeAsset visualTreeAssetSource
  VisualElement Item
  int childCount
  Vector3 positionWithLayout
  bool hasDefaultRotationAndScale
  IVisualElementScheduler schedule
  IStyle style
  ICustomStyle customStyle
  VisualElementStyleSheetSet styleSheets
  string tooltip
  TypeData typeData
  IResolvedStyle resolvedStyle
  Align UnityEngine.UIElements.IResolvedStyle.alignContent
  Align UnityEngine.UIElements.IResolvedStyle.alignItems
  Align UnityEngine.UIElements.IResolvedStyle.alignSelf
  Color UnityEngine.UIElements.IResolvedStyle.backgroundColor
  Background UnityEngine.UIElements.IResolvedStyle.backgroundImage
  Color UnityEngine.UIElements.IResolvedStyle.borderBottomColor
  float UnityEngine.UIElements.IResolvedStyle.borderBottomLeftRadius
  float UnityEngine.UIElements.IResolvedStyle.borderBottomRightRadius
  float UnityEngine.UIElements.IResolvedStyle.borderBottomWidth
  Color UnityEngine.UIElements.IResolvedStyle.borderLeftColor
  float UnityEngine.UIElements.IResolvedStyle.borderLeftWidth
  Color UnityEngine.UIElements.IResolvedStyle.borderRightColor
  float UnityEngine.UIElements.IResolvedStyle.borderRightWidth
  Color UnityEngine.UIElements.IResolvedStyle.borderTopColor
  float UnityEngine.UIElements.IResolvedStyle.borderTopLeftRadius
  float UnityEngine.UIElements.IResolvedStyle.borderTopRightRadius
  float UnityEngine.UIElements.IResolvedStyle.borderTopWidth
  float UnityEngine.UIElements.IResolvedStyle.bottom
  Color UnityEngine.UIElements.IResolvedStyle.color
  DisplayStyle UnityEngine.UIElements.IResolvedStyle.display
  StyleFloat UnityEngine.UIElements.IResolvedStyle.flexBasis
  FlexDirection UnityEngine.UIElements.IResolvedStyle.flexDirection
  float UnityEngine.UIElements.IResolvedStyle.flexGrow
  float UnityEngine.UIElements.IResolvedStyle.flexShrink
  Wrap UnityEngine.UIElements.IResolvedStyle.flexWrap
  float UnityEngine.UIElements.IResolvedStyle.fontSize
  float UnityEngine.UIElements.IResolvedStyle.height
  Justify UnityEngine.UIElements.IResolvedStyle.justifyContent
  float UnityEngine.UIElements.IResolvedStyle.left
  float UnityEngine.UIElements.IResolvedStyle.letterSpacing
  float UnityEngine.UIElements.IResolvedStyle.marginBottom
  float UnityEngine.UIElements.IResolvedStyle.marginLeft
  float UnityEngine.UIElements.IResolvedStyle.marginRight
  float UnityEngine.UIElements.IResolvedStyle.marginTop
  StyleFloat UnityEngine.UIElements.IResolvedStyle.maxHeight
  StyleFloat UnityEngine.UIElements.IResolvedStyle.maxWidth
  StyleFloat UnityEngine.UIElements.IResolvedStyle.minHeight
  StyleFloat UnityEngine.UIElements.IResolvedStyle.minWidth
  float UnityEngine.UIElements.IResolvedStyle.opacity
  float UnityEngine.UIElements.IResolvedStyle.paddingBottom
  float UnityEngine.UIElements.IResolvedStyle.paddingLeft
  float UnityEngine.UIElements.IResolvedStyle.paddingRight
  float UnityEngine.UIElements.IResolvedStyle.paddingTop
  Position UnityEngine.UIElements.IResolvedStyle.position
  float UnityEngine.UIElements.IResolvedStyle.right
  Rotate UnityEngine.UIElements.IResolvedStyle.rotate
  Scale UnityEngine.UIElements.IResolvedStyle.scale
  TextOverflow UnityEngine.UIElements.IResolvedStyle.textOverflow
  float UnityEngine.UIElements.IResolvedStyle.top
  Vector3 UnityEngine.UIElements.IResolvedStyle.transformOrigin
  IEnumerable`1<TimeValue> UnityEngine.UIElements.IResolvedStyle.transitionDelay
  IEnumerable`1<TimeValue> UnityEngine.UIElements.IResolvedStyle.transitionDuration
  IEnumerable`1<StylePropertyName> UnityEngine.UIElements.IResolvedStyle.transitionProperty
  IEnumerable`1<EasingFunction> UnityEngine.UIElements.IResolvedStyle.transitionTimingFunction
  Vector3 UnityEngine.UIElements.IResolvedStyle.translate
  Color UnityEngine.UIElements.IResolvedStyle.unityBackgroundImageTintColor
  ScaleMode UnityEngine.UIElements.IResolvedStyle.unityBackgroundScaleMode
  Font UnityEngine.UIElements.IResolvedStyle.unityFont
  FontDefinition UnityEngine.UIElements.IResolvedStyle.unityFontDefinition
  FontStyle UnityEngine.UIElements.IResolvedStyle.unityFontStyleAndWeight
  float UnityEngine.UIElements.IResolvedStyle.unityParagraphSpacing
  int UnityEngine.UIElements.IResolvedStyle.unitySliceBottom
  int UnityEngine.UIElements.IResolvedStyle.unitySliceLeft
  int UnityEngine.UIElements.IResolvedStyle.unitySliceRight
  int UnityEngine.UIElements.IResolvedStyle.unitySliceTop
  TextAnchor UnityEngine.UIElements.IResolvedStyle.unityTextAlign
  Color UnityEngine.UIElements.IResolvedStyle.unityTextOutlineColor
  float UnityEngine.UIElements.IResolvedStyle.unityTextOutlineWidth
  TextOverflowPosition UnityEngine.UIElements.IResolvedStyle.unityTextOverflowPosition
  Visibility UnityEngine.UIElements.IResolvedStyle.visibility
  WhiteSpace UnityEngine.UIElements.IResolvedStyle.whiteSpace
  float UnityEngine.UIElements.IResolvedStyle.width
  float UnityEngine.UIElements.IResolvedStyle.wordSpacing
Методы:
  bool get_hasRunningAnimations()
  bool get_hasCompletedAnimations()
  int UnityEngine.UIElements.IStylePropertyAnimations.get_runningAnimationCount()
  void UnityEngine.UIElements.IStylePropertyAnimations.set_runningAnimationCount(int value)
  int UnityEngine.UIElements.IStylePropertyAnimations.get_completedAnimationCount()
  void UnityEngine.UIElements.IStylePropertyAnimations.set_completedAnimationCount(int value)
  IStylePropertyAnimationSystem GetStylePropertyAnimationSystem()
  IStylePropertyAnimations get_styleAnimation()
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, float from, float to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, int from, int to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Length from, Length to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Color from, Color to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.StartEnum(StylePropertyId id, int from, int to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Background from, Background to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, FontDefinition from, FontDefinition to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Font from, Font to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, TextShadow from, TextShadow to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Scale from, Scale to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Translate from, Translate to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, Rotate from, Rotate to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool UnityEngine.UIElements.IStylePropertyAnimations.Start(StylePropertyId id, TransformOrigin from, TransformOrigin to, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  void UnityEngine.UIElements.IStylePropertyAnimations.CancelAnimation(StylePropertyId id)
  void UnityEngine.UIElements.IStylePropertyAnimations.CancelAllAnimations()
  bool UnityEngine.UIElements.IStylePropertyAnimations.HasRunningAnimation(StylePropertyId id)
  void UnityEngine.UIElements.IStylePropertyAnimations.UpdateAnimation(StylePropertyId id)
  void UnityEngine.UIElements.IStylePropertyAnimations.GetAllAnimations(List`1<StylePropertyId> outPropertyIds)
  bool TryConvertLengthUnits(StylePropertyId id, Length& from, Length& to, int subPropertyIndex)
  bool TryConvertTransformOriginUnits(TransformOrigin& from, TransformOrigin& to)
  bool TryConvertTranslateUnits(Translate& from, Translate& to)
  Nullable`1<float> GetParentSizeForLengthConversion(StylePropertyId id, int subPropertyIndex)
  bool get_isCompositeRoot()
  void set_isCompositeRoot(bool value)
  bool get_isHierarchyDisplayed()
  void set_isHierarchyDisplayed(bool value)
  string get_viewDataKey()
  void set_viewDataKey(string value)
  bool get_enableViewDataPersistence()
  void set_enableViewDataPersistence(bool value)
  object get_userData()
  void set_userData(object value)
  bool get_canGrabFocus()
  FocusController get_focusController()
  UsageHints get_usageHints()
  void set_usageHints(UsageHints value)
  RenderHints get_renderHints()
  void set_renderHints(RenderHints value)
  void MarkRenderHintsClean()
  ITransform get_transform()
  Vector3 UnityEngine.UIElements.ITransform.get_position()
  void UnityEngine.UIElements.ITransform.set_position(Vector3 value)
  Quaternion UnityEngine.UIElements.ITransform.get_rotation()
  void UnityEngine.UIElements.ITransform.set_rotation(Quaternion value)
  Vector3 UnityEngine.UIElements.ITransform.get_scale()
  void UnityEngine.UIElements.ITransform.set_scale(Vector3 value)
  Matrix4x4 UnityEngine.UIElements.ITransform.get_matrix()
  bool get_isLayoutManual()
  void set_isLayoutManual(bool value)
  float get_scaledPixelsPerPoint()
  Rect get_layout()
  void set_layout(Rect value)
  Rect get_contentRect()
  Rect get_paddingRect()
  bool get_isBoundingBoxDirty()
  void set_isBoundingBoxDirty(bool value)
  bool get_isWorldBoundingBoxDirty()
  void set_isWorldBoundingBoxDirty(bool value)
  Rect get_boundingBox()
  Rect get_worldBoundingBox()
  Rect get_boundingBoxInParentSpace()
  void UpdateBoundingBox()
  void UpdateWorldBoundingBox()
  Rect get_worldBound()
  Rect get_localBound()
  Rect get_rect()
  bool get_isWorldTransformDirty()
  void set_isWorldTransformDirty(bool value)
  bool get_isWorldTransformInverseDirty()
  void set_isWorldTransformInverseDirty(bool value)
  Matrix4x4 get_worldTransform()
  Matrix4x4& get_worldTransformRef()
  Matrix4x4& get_worldTransformInverse()
  void UpdateWorldTransform()
  void UpdateWorldTransformInverse()
  bool get_isWorldClipDirty()
  void set_isWorldClipDirty(bool value)
  Rect get_worldClip()
  Rect get_worldClipMinusGroup()
  bool get_worldClipIsInfinite()
  void EnsureWorldTransformAndClipUpToDate()
  void UpdateWorldClip()
  Rect CombineClipRects(Rect rect, Rect parentRect)
  Rect SubstractBorderPadding(Rect worldRect)
  Rect ComputeAAAlignedBound(Rect position, Matrix4x4 mat)
  PseudoStates get_pseudoStates()
  void set_pseudoStates(PseudoStates value)
  int get_containedPointerIds()
  void set_containedPointerIds(int value)
  void UpdateHoverPseudoState()
  PickingMode get_pickingMode()
  void set_pickingMode(PickingMode value)
  string get_name()
  void set_name(string value)
  List`1<string> get_classList()
  string get_fullTypeName()
  string get_typeName()
  YogaNode get_yogaNode()
  void set_yogaNode(YogaNode value)
  ComputedStyle& get_computedStyle()
  bool get_hasInlineStyle()
  bool get_styleInitialized()
  void set_styleInitialized(bool value)
  float get_opacity()
  void set_opacity(float value)
  void ChangeIMGUIContainerCount(int delta)
  void .ctor()
  void ExecuteDefaultAction(EventBase evt)
  Rect GetTooltipRect()
  void SetTooltip(TooltipEvent e)
  void Focus()
  void SetPanel(BaseVisualElementPanel p)
  void WillChangePanel(BaseVisualElementPanel destinationPanel)
  void HasChangedPanel(BaseVisualElementPanel prevPanel)
  void SendEvent(EventBase e)
  void SendEvent(EventBase e, DispatchMode dispatchMode)
  void IncrementVersion(VersionChangeType changeType)
  void InvokeHierarchyChanged(HierarchyChangeType changeType)
  bool SetEnabledFromHierarchy(bool state)
  bool SetEnabledFromHierarchyPrivate(bool state)
  bool get_isParentEnabledInHierarchy()
  bool get_enabledInHierarchy()
  bool get_enabledSelf()
  void set_enabledSelf(bool value)
  void SetEnabled(bool value)
  void PropagateEnabledToChildren(bool value)
  bool get_visible()
  void set_visible(bool value)
  void MarkDirtyRepaint()
  Action`1<MeshGenerationContext> get_generateVisualContent()
  void set_generateVisualContent(Action`1<MeshGenerationContext> value)
  void InvokeGenerateVisualContent(MeshGenerationContext mgc)
  void GetFullHierarchicalViewDataKey(StringBuilder key)
  string GetFullHierarchicalViewDataKey()
  T GetOrCreateViewData(object existing, string key)
  T GetOrCreateViewData(ScriptableObject existing, string key)
  void OverwriteFromViewData(object obj, string key)
  void SaveViewData()
  bool IsViewDataPersitenceSupportedOnChildren(bool existingState)
  void OnViewDataReady(bool enablePersistence)
  void OnViewDataReady()
  bool ContainsPoint(Vector2 localPoint)
  bool Overlaps(Rect rectangle)
  bool get_requireMeasureFunction()
  void set_requireMeasureFunction(bool value)
  void AssignMeasureFunction()
  void RemoveMeasureFunction()
  Vector2 DoMeasure(float desiredWidth, MeasureMode widthMode, float desiredHeight, MeasureMode heightMode)
  YogaSize Measure(YogaNode node, float width, YogaMeasureMode widthMode, float height, YogaMeasureMode heightMode)
  void SetSize(Vector2 size)
  void FinalizeLayout()
  void SetInlineRule(StyleSheet sheet, StyleRule rule)
  void UpdateInlineRule(StyleSheet sheet, StyleRule rule)
  void SetComputedStyle(ComputedStyle& newStyle)
  void ResetPositionProperties()
  string ToString()
  IEnumerable`1<string> GetClasses()
  List`1<string> GetClassesForIteration()
  void ClearClassList()
  void AddToClassList(string className)
  void RemoveFromClassList(string className)
  void ToggleInClassList(string className)
  void EnableInClassList(string className, bool enable)
  bool ClassListContains(string cls)
  object FindAncestorUserData()
  object GetProperty(PropertyName key)
  void SetProperty(PropertyName key, object value)
  bool HasProperty(PropertyName key)
  bool TryGetPropertyInternal(PropertyName key, Object& value)
  void CheckUserKeyArgument(PropertyName key)
  void SetPropertyInternal(PropertyName key, object value)
  void UpdateCursorStyle(long eventType)
  RenderTargetMode get_subRenderTargetMode()
  void set_subRenderTargetMode(RenderTargetMode value)
  Material getRuntimeMaterial()
  Material get_defaultMaterial()
  void set_defaultMaterial(Material value)
  VisualElementAnimationSystem GetAnimationSystem()
  void RegisterAnimation(IValueAnimationUpdate anim)
  void UnregisterAnimation(IValueAnimationUpdate anim)
  void UnregisterRunningAnimations()
  void RegisterRunningAnimations()
  ValueAnimation`1<float> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(float from, float to, int durationMs, Action`2<VisualElement, float> onValueChanged)
  ValueAnimation`1<Rect> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Rect from, Rect to, int durationMs, Action`2<VisualElement, Rect> onValueChanged)
  ValueAnimation`1<Color> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Color from, Color to, int durationMs, Action`2<VisualElement, Color> onValueChanged)
  ValueAnimation`1<Vector3> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Vector3 from, Vector3 to, int durationMs, Action`2<VisualElement, Vector3> onValueChanged)
  ValueAnimation`1<Vector2> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Vector2 from, Vector2 to, int durationMs, Action`2<VisualElement, Vector2> onValueChanged)
  ValueAnimation`1<Quaternion> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Quaternion from, Quaternion to, int durationMs, Action`2<VisualElement, Quaternion> onValueChanged)
  ValueAnimation`1<StyleValues> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(StyleValues from, StyleValues to, int durationMs)
  ValueAnimation`1<float> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Func`2<VisualElement, float> fromValueGetter, float to, int durationMs, Action`2<VisualElement, float> onValueChanged)
  ValueAnimation`1<Rect> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Func`2<VisualElement, Rect> fromValueGetter, Rect to, int durationMs, Action`2<VisualElement, Rect> onValueChanged)
  ValueAnimation`1<Color> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Func`2<VisualElement, Color> fromValueGetter, Color to, int durationMs, Action`2<VisualElement, Color> onValueChanged)
  ValueAnimation`1<Vector3> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Func`2<VisualElement, Vector3> fromValueGetter, Vector3 to, int durationMs, Action`2<VisualElement, Vector3> onValueChanged)
  ValueAnimation`1<Vector2> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Func`2<VisualElement, Vector2> fromValueGetter, Vector2 to, int durationMs, Action`2<VisualElement, Vector2> onValueChanged)
  ValueAnimation`1<Quaternion> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(Func`2<VisualElement, Quaternion> fromValueGetter, Quaternion to, int durationMs, Action`2<VisualElement, Quaternion> onValueChanged)
  ValueAnimation`1<T> StartAnimation(ValueAnimation`1<T> anim, Func`2<VisualElement, T> fromValueGetter, T to, int durationMs, Action`2<VisualElement, T> onValueChanged)
  void AssignStyleValues(VisualElement ve, StyleValues src)
  StyleValues ReadCurrentValues(VisualElement ve, StyleValues targetValuesToRead)
  ValueAnimation`1<StyleValues> UnityEngine.UIElements.Experimental.ITransitionAnimations.Start(StyleValues to, int durationMs)
  ValueAnimation`1<StyleValues> Start(Func`2<VisualElement, StyleValues> fromValueGetter, StyleValues to, int durationMs)
  ValueAnimation`1<Rect> UnityEngine.UIElements.Experimental.ITransitionAnimations.Layout(Rect to, int durationMs)
  ValueAnimation`1<Vector2> UnityEngine.UIElements.Experimental.ITransitionAnimations.TopLeft(Vector2 to, int durationMs)
  ValueAnimation`1<Vector2> UnityEngine.UIElements.Experimental.ITransitionAnimations.Size(Vector2 to, int durationMs)
  ValueAnimation`1<float> UnityEngine.UIElements.Experimental.ITransitionAnimations.Scale(float to, int durationMs)
  ValueAnimation`1<Vector3> UnityEngine.UIElements.Experimental.ITransitionAnimations.Position(Vector3 to, int durationMs)
  ValueAnimation`1<Quaternion> UnityEngine.UIElements.Experimental.ITransitionAnimations.Rotation(Quaternion to, int durationMs)
  IExperimentalFeatures get_experimental()
  ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures.get_animation()
  Hierarchy get_hierarchy()
  void set_hierarchy(Hierarchy value)
  bool get_isRootVisualContainer()
  void set_isRootVisualContainer(bool value)
  bool get_cacheAsBitmap()
  void set_cacheAsBitmap(bool value)
  bool get_disableClipping()
  void set_disableClipping(bool value)
  bool ShouldClip()
  VisualElement get_parent()
  BaseVisualElementPanel get_elementPanel()
  void set_elementPanel(BaseVisualElementPanel value)
  IPanel get_panel()
  VisualElement get_contentContainer()
  VisualTreeAsset get_visualTreeAssetSource()
  void set_visualTreeAssetSource(VisualTreeAsset value)
  void Add(VisualElement child)
  void Insert(int index, VisualElement element)
  void Remove(VisualElement element)
  void RemoveAt(int index)
  void Clear()
  VisualElement ElementAt(int index)
  VisualElement get_Item(int key)
  int get_childCount()
  int IndexOf(VisualElement element)
  VisualElement ElementAtTreePath(List`1<int> childIndexes)
  bool FindElementInTree(VisualElement element, List`1<int> outChildIndexes)
  IEnumerable`1<VisualElement> Children()
  void Sort(Comparison`1<VisualElement> comp)
  void BringToFront()
  void SendToBack()
  void PlaceBehind(VisualElement sibling)
  void PlaceInFront(VisualElement sibling)
  void RemoveFromHierarchy()
  T GetFirstOfType()
  T GetFirstAncestorOfType()
  bool Contains(VisualElement child)
  void GatherAllChildren(List`1<VisualElement> elements)
  VisualElement FindCommonAncestor(VisualElement other)
  VisualElement GetRoot()
  VisualElement GetRootVisualContainer()
  VisualElement GetNextElementDepthFirst()
  VisualElement GetPreviousElementDepthFirst()
  VisualElement RetargetElement(VisualElement retargetAgainst)
  Vector3 get_positionWithLayout()
  void GetPivotedMatrixWithLayout(Matrix4x4& result)
  bool get_hasDefaultRotationAndScale()
  float Min(float a, float b, float c, float d)
  float Max(float a, float b, float c, float d)
  void TransformAlignedRectToParentSpace(Rect& rect)
  Rect CalculateConservativeRect(Matrix4x4& matrix, Rect rect)
  void TransformAlignedRect(Matrix4x4& matrix, Rect& rect)
  void OrderMinMaxRect(Rect& rect)
  Vector2 MultiplyMatrix44Point2(Matrix4x4& lhs, Vector2 point)
  Vector2 MultiplyVector2(Matrix4x4& lhs, Vector2 vector)
  Rect MultiplyMatrix44Rect2(Matrix4x4& lhs, Rect r)
  void MultiplyMatrix34(Matrix4x4& lhs, Matrix4x4& rhs, Matrix4x4& res)
  void TranslateMatrix34(Matrix4x4& lhs, Vector3 rhs, Matrix4x4& res)
  void TranslateMatrix34InPlace(Matrix4x4& lhs, Vector3 rhs)
  IVisualElementScheduler get_schedule()
  IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(Action`1<TimerState> timerUpdateEvent)
  IVisualElementScheduledItem UnityEngine.UIElements.IVisualElementScheduler.Execute(Action updateEvent)
  IStyle get_style()
  ICustomStyle get_customStyle()
  VisualElementStyleSheetSet get_styleSheets()
  void AddStyleSheetPath(string sheetPath)
  bool HasStyleSheetPath(string sheetPath)
  void RemoveStyleSheetPath(string sheetPath)
  StyleFloat ResolveLengthValue(Length length, bool isRow)
  Vector3 ResolveTranslate()
  Vector3 ResolveTransformOrigin()
  Quaternion ResolveRotation()
  Vector3 ResolveScale()
  string get_tooltip()
  void set_tooltip(string value)
  TypeData get_typeData()
  IResolvedStyle get_resolvedStyle()
  Align UnityEngine.UIElements.IResolvedStyle.get_alignContent()
  Align UnityEngine.UIElements.IResolvedStyle.get_alignItems()
  Align UnityEngine.UIElements.IResolvedStyle.get_alignSelf()
  Color UnityEngine.UIElements.IResolvedStyle.get_backgroundColor()
  Background UnityEngine.UIElements.IResolvedStyle.get_backgroundImage()
  Color UnityEngine.UIElements.IResolvedStyle.get_borderBottomColor()
  float UnityEngine.UIElements.IResolvedStyle.get_borderBottomLeftRadius()
  float UnityEngine.UIElements.IResolvedStyle.get_borderBottomRightRadius()
  float UnityEngine.UIElements.IResolvedStyle.get_borderBottomWidth()
  Color UnityEngine.UIElements.IResolvedStyle.get_borderLeftColor()
  float UnityEngine.UIElements.IResolvedStyle.get_borderLeftWidth()
  Color UnityEngine.UIElements.IResolvedStyle.get_borderRightColor()
  float UnityEngine.UIElements.IResolvedStyle.get_borderRightWidth()
  Color UnityEngine.UIElements.IResolvedStyle.get_borderTopColor()
  float UnityEngine.UIElements.IResolvedStyle.get_borderTopLeftRadius()
  float UnityEngine.UIElements.IResolvedStyle.get_borderTopRightRadius()
  float UnityEngine.UIElements.IResolvedStyle.get_borderTopWidth()
  float UnityEngine.UIElements.IResolvedStyle.get_bottom()
  Color UnityEngine.UIElements.IResolvedStyle.get_color()
  DisplayStyle UnityEngine.UIElements.IResolvedStyle.get_display()
  StyleFloat UnityEngine.UIElements.IResolvedStyle.get_flexBasis()
  FlexDirection UnityEngine.UIElements.IResolvedStyle.get_flexDirection()
  float UnityEngine.UIElements.IResolvedStyle.get_flexGrow()
  float UnityEngine.UIElements.IResolvedStyle.get_flexShrink()
  Wrap UnityEngine.UIElements.IResolvedStyle.get_flexWrap()
  float UnityEngine.UIElements.IResolvedStyle.get_fontSize()
  float UnityEngine.UIElements.IResolvedStyle.get_height()
  Justify UnityEngine.UIElements.IResolvedStyle.get_justifyContent()
  float UnityEngine.UIElements.IResolvedStyle.get_left()
  float UnityEngine.UIElements.IResolvedStyle.get_letterSpacing()
  float UnityEngine.UIElements.IResolvedStyle.get_marginBottom()
  float UnityEngine.UIElements.IResolvedStyle.get_marginLeft()
  float UnityEngine.UIElements.IResolvedStyle.get_marginRight()
  float UnityEngine.UIElements.IResolvedStyle.get_marginTop()
  StyleFloat UnityEngine.UIElements.IResolvedStyle.get_maxHeight()
  StyleFloat UnityEngine.UIElements.IResolvedStyle.get_maxWidth()
  StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minHeight()
  StyleFloat UnityEngine.UIElements.IResolvedStyle.get_minWidth()
  float UnityEngine.UIElements.IResolvedStyle.get_opacity()
  float UnityEngine.UIElements.IResolvedStyle.get_paddingBottom()
  float UnityEngine.UIElements.IResolvedStyle.get_paddingLeft()
  float UnityEngine.UIElements.IResolvedStyle.get_paddingRight()
  float UnityEngine.UIElements.IResolvedStyle.get_paddingTop()
  Position UnityEngine.UIElements.IResolvedStyle.get_position()
  float UnityEngine.UIElements.IResolvedStyle.get_right()
  Rotate UnityEngine.UIElements.IResolvedStyle.get_rotate()
  Scale UnityEngine.UIElements.IResolvedStyle.get_scale()
  TextOverflow UnityEngine.UIElements.IResolvedStyle.get_textOverflow()
  float UnityEngine.UIElements.IResolvedStyle.get_top()
  Vector3 UnityEngine.UIElements.IResolvedStyle.get_transformOrigin()
  IEnumerable`1<TimeValue> UnityEngine.UIElements.IResolvedStyle.get_transitionDelay()
  IEnumerable`1<TimeValue> UnityEngine.UIElements.IResolvedStyle.get_transitionDuration()
  IEnumerable`1<StylePropertyName> UnityEngine.UIElements.IResolvedStyle.get_transitionProperty()
  IEnumerable`1<EasingFunction> UnityEngine.UIElements.IResolvedStyle.get_transitionTimingFunction()
  Vector3 UnityEngine.UIElements.IResolvedStyle.get_translate()
  Color UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundImageTintColor()
  ScaleMode UnityEngine.UIElements.IResolvedStyle.get_unityBackgroundScaleMode()
  Font UnityEngine.UIElements.IResolvedStyle.get_unityFont()
  FontDefinition UnityEngine.UIElements.IResolvedStyle.get_unityFontDefinition()
  FontStyle UnityEngine.UIElements.IResolvedStyle.get_unityFontStyleAndWeight()
  float UnityEngine.UIElements.IResolvedStyle.get_unityParagraphSpacing()
  int UnityEngine.UIElements.IResolvedStyle.get_unitySliceBottom()
  int UnityEngine.UIElements.IResolvedStyle.get_unitySliceLeft()
  int UnityEngine.UIElements.IResolvedStyle.get_unitySliceRight()
  int UnityEngine.UIElements.IResolvedStyle.get_unitySliceTop()
  TextAnchor UnityEngine.UIElements.IResolvedStyle.get_unityTextAlign()
  Color UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineColor()
  float UnityEngine.UIElements.IResolvedStyle.get_unityTextOutlineWidth()
  TextOverflowPosition UnityEngine.UIElements.IResolvedStyle.get_unityTextOverflowPosition()
  Visibility UnityEngine.UIElements.IResolvedStyle.get_visibility()
  WhiteSpace UnityEngine.UIElements.IResolvedStyle.get_whiteSpace()
  float UnityEngine.UIElements.IResolvedStyle.get_width()
  float UnityEngine.UIElements.IResolvedStyle.get_wordSpacing()
  void .cctor()
  YogaSize <AssignMeasureFunction>b__253_0(YogaNode node, float f, YogaMeasureMode mode, float f1, YogaMeasureMode heightMode)
--------------------------------------------------
Класс: UnityEngine.UIElements.IStylePropertyAnimationSystem
Поля:
Свойства:
Методы:
  bool StartTransition(VisualElement owner, StylePropertyId prop, float startValue, float endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Length startValue, Length endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Color startValue, Color endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationEnum(VisualElement owner, StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Background startValue, Background endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, FontDefinition startValue, FontDefinition endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Font startValue, Font endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, TextShadow startValue, TextShadow endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Scale startValue, Scale endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, TransformOrigin startValue, TransformOrigin endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Translate startValue, Translate endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Rotate startValue, Rotate endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  void CancelAllAnimations()
  void CancelAllAnimations(VisualElement owner)
  void CancelAnimation(VisualElement owner, StylePropertyId id)
  bool HasRunningAnimation(VisualElement owner, StylePropertyId id)
  void UpdateAnimation(VisualElement owner, StylePropertyId id)
  void GetAllAnimations(VisualElement owner, List`1<StylePropertyId> propertyIds)
  void Update()
--------------------------------------------------
Класс: UnityEngine.UIElements.StylePropertyAnimationSystem
Наследуется от: object
Поля:
  long m_CurrentTimeMs
  ValuesFloat m_Floats
  ValuesInt m_Ints
  ValuesLength m_Lengths
  ValuesColor m_Colors
  ValuesEnum m_Enums
  ValuesBackground m_Backgrounds
  ValuesFontDefinition m_FontDefinitions
  ValuesFont m_Fonts
  ValuesTextShadow m_TextShadows
  ValuesScale m_Scale
  ValuesRotate m_Rotate
  ValuesTranslate m_Translate
  ValuesTransformOrigin m_TransformOrigin
  List`1<Values> m_AllValues
  Dictionary`2<StylePropertyId, Values> m_PropertyToValues
Свойства:
Методы:
  void .ctor()
  T GetOrCreate(T& values)
  bool StartTransition(VisualElement owner, StylePropertyId prop, T startValue, T endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve, Values`1<T> values)
  bool StartTransition(VisualElement owner, StylePropertyId prop, float startValue, float endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Length startValue, Length endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Color startValue, Color endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationEnum(VisualElement owner, StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Background startValue, Background endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, FontDefinition startValue, FontDefinition endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Font startValue, Font endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, TextShadow startValue, TextShadow endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Scale startValue, Scale endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Rotate startValue, Rotate endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Translate startValue, Translate endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, TransformOrigin startValue, TransformOrigin endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  void CancelAllAnimations()
  void CancelAllAnimations(VisualElement owner)
  void CancelAnimation(VisualElement owner, StylePropertyId id)
  bool HasRunningAnimation(VisualElement owner, StylePropertyId id)
  void UpdateAnimation(VisualElement owner, StylePropertyId id)
  void GetAllAnimations(VisualElement owner, List`1<StylePropertyId> propertyIds)
  void UpdateTracking(Values`1<T> values)
  long CurrentTimeMs()
  void Update()
--------------------------------------------------
Класс: UnityEngine.UIElements.EmptyStylePropertyAnimationSystem
Наследуется от: object
Поля:
Свойства:
Методы:
  bool StartTransition(VisualElement owner, StylePropertyId prop, float startValue, float endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Length startValue, Length endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Color startValue, Color endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationEnum(VisualElement owner, StylePropertyId prop, int startValue, int endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Background startValue, Background endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, FontDefinition startValue, FontDefinition endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Font startValue, Font endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, TextShadow startValue, TextShadow endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Scale startValue, Scale endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, TransformOrigin startValue, TransformOrigin endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Translate startValue, Translate endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartTransition(VisualElement owner, StylePropertyId prop, Rotate startValue, Rotate endValue, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  void CancelAllAnimations()
  void CancelAllAnimations(VisualElement owner)
  void CancelAnimation(VisualElement owner, StylePropertyId id)
  bool HasRunningAnimation(VisualElement owner, StylePropertyId id)
  void UpdateAnimation(VisualElement owner, StylePropertyId id)
  void GetAllAnimations(VisualElement owner, List`1<StylePropertyId> propertyIds)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StylePropertyName
Наследуется от: ValueType
Поля:
  StylePropertyId <id>k__BackingField
  string <name>k__BackingField
Свойства:
  StylePropertyId id
  string name
Методы:
  StylePropertyId get_id()
  string get_name()
  StylePropertyId StylePropertyIdFromString(string name)
  void .ctor(StylePropertyId stylePropertyId)
  void .ctor(string name)
  bool IsNullOrEmpty(StylePropertyName propertyName)
  bool op_Equality(StylePropertyName lhs, StylePropertyName rhs)
  bool op_Inequality(StylePropertyName lhs, StylePropertyName rhs)
  StylePropertyName op_Implicit(string name)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(StylePropertyName other)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.TemplateContainer
Наследуется от: BindableElement
Поля:
  string <templateId>k__BackingField
  VisualElement m_ContentContainer
  VisualTreeAsset m_TemplateSource
Свойства:
  string templateId
  VisualTreeAsset templateSource
  VisualElement contentContainer
Методы:
  string get_templateId()
  void set_templateId(string value)
  VisualTreeAsset get_templateSource()
  void set_templateSource(VisualTreeAsset value)
  void .ctor()
  void .ctor(string templateId)
  VisualElement get_contentContainer()
  void SetContentContainer(VisualElement content)
--------------------------------------------------
Класс: UnityEngine.UIElements.ITextElement
Поля:
Свойства:
  string text
Методы:
  string get_text()
  void set_text(string value)
--------------------------------------------------
Класс: UnityEngine.UIElements.TextElement
Наследуется от: BindableElement
Поля:
  string ussClassName
  ITextHandle m_TextHandle
  int maxTextVertices
  string m_Text
  bool m_EnableRichText
  bool m_DisplayTooltipWhenElided
  bool <isElided>k__BackingField
  string k_EllipsisText
  bool m_WasElided
  bool m_UpdateTextParams
  TextParams m_TextParams
  int m_PreviousTextParamsHashCode
Свойства:
  ITextHandle textHandle
  string text
  bool enableRichText
  bool displayTooltipWhenElided
  bool isElided
  string UnityEngine.UIElements.INotifyValueChanged<System.String>.value
Методы:
  void .ctor()
  ITextHandle get_textHandle()
  void set_textHandle(ITextHandle value)
  void HandleEvent(EventBase evt)
  void OnGeometryChanged(GeometryChangedEvent e)
  string get_text()
  void set_text(string value)
  bool get_enableRichText()
  void set_enableRichText(bool value)
  bool get_displayTooltipWhenElided()
  void set_displayTooltipWhenElided(bool value)
  bool get_isElided()
  void set_isElided(bool value)
  void OnGenerateVisualContent(MeshGenerationContext mgc)
  string ElideText(string drawText, string ellipsisText, float width, TextOverflowPosition textOverflowPosition)
  void UpdateTooltip()
  void UpdateVisibleText()
  bool ShouldElide()
  bool TextLibraryCanElide()
  Vector2 MeasureTextSize(string textToMeasure, float width, MeasureMode widthMode, float height, MeasureMode heightMode)
  Vector2 MeasureVisualElementTextSize(VisualElement ve, string textToMeasure, float width, MeasureMode widthMode, float height, MeasureMode heightMode, TextHandle textHandle)
  Vector2 DoMeasure(float desiredWidth, MeasureMode widthMode, float desiredHeight, MeasureMode heightMode)
  int VerticesCount(string text)
  string UnityEngine.UIElements.INotifyValueChanged<System.String>.get_value()
  void UnityEngine.UIElements.INotifyValueChanged<System.String>.set_value(string value)
  void UnityEngine.UIElements.INotifyValueChanged<System.String>.SetValueWithoutNotify(string newValue)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextShadow
Наследуется от: ValueType
Поля:
  Vector2 offset
  float blurRadius
  Color color
Свойства:
Методы:
  bool Equals(object obj)
  bool Equals(TextShadow other)
  int GetHashCode()
  bool op_Equality(TextShadow style1, TextShadow style2)
  bool op_Inequality(TextShadow style1, TextShadow style2)
  string ToString()
  TextShadow LerpUnclamped(TextShadow a, TextShadow b, float t)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIElementsPackageUtility
Наследуется от: object
Поля:
  string EditorResourcesBasePath
  bool IsUIEPackageLoaded
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIElementsRuntimeUtility
Наследуется от: object
Поля:
  Action s_onRepaintOverlayPanels
  Action`1<BaseRuntimePanel> onCreatePanel
  bool s_RegisteredPlayerloopCallback
  List`1<Panel> s_SortedRuntimePanels
  bool s_PanelOrderingDirty
  string s_RepaintProfilerMarkerName
  ProfilerMarker s_RepaintProfilerMarker
  int currentOverlayIndex
  Object <activeEventSystem>k__BackingField
  DefaultEventSystem s_DefaultEventSystem
  List`1<PanelSettings> s_PotentiallyEmptyPanelSettings
Свойства:
  Object activeEventSystem
  bool useDefaultEventSystem
  DefaultEventSystem defaultEventSystem
Методы:
  void add_s_onRepaintOverlayPanels(Action value)
  void remove_s_onRepaintOverlayPanels(Action value)
  void add_onRepaintOverlayPanels(Action value)
  void remove_onRepaintOverlayPanels(Action value)
  void add_onCreatePanel(Action`1<BaseRuntimePanel> value)
  void remove_onCreatePanel(Action`1<BaseRuntimePanel> value)
  void .cctor()
  EventBase CreateEvent(Event systemEvent)
  BaseRuntimePanel FindOrCreateRuntimePanel(ScriptableObject ownerObject, CreateRuntimePanelDelegate createDelegate)
  void DisposeRuntimePanel(ScriptableObject ownerObject)
  void RegisterCachedPanelInternal(int instanceID, IPanel panel)
  void RemoveCachedPanelInternal(int instanceID)
  void RepaintOverlayPanels()
  void RepaintOffscreenPanels()
  void RepaintOverlayPanel(BaseRuntimePanel panel)
  void BeginRenderOverlays(int displayIndex)
  void RenderOverlaysBeforePriority(int displayIndex, float maxPriority)
  void EndRenderOverlays(int displayIndex)
  Object get_activeEventSystem()
  void set_activeEventSystem(Object value)
  bool get_useDefaultEventSystem()
  void RegisterEventSystem(Object eventSystem)
  void UnregisterEventSystem(Object eventSystem)
  DefaultEventSystem get_defaultEventSystem()
  void UpdateRuntimePanels()
  void MarkPotentiallyEmpty(PanelSettings settings)
  void RemoveUnusedPanels()
  void RegisterPlayerloopCallback()
  void UnregisterPlayerloopCallback()
  void SetPanelOrderingDirty()
  List`1<Panel> GetSortedPlayerPanels()
  void SortPanels()
  Vector2 MultiDisplayBottomLeftToPanelPosition(Vector2 position, Nullable`1& targetDisplay)
  Vector2 MultiDisplayToLocalScreenPosition(Vector2 position, Nullable`1& targetDisplay)
  Vector2 ScreenBottomLeftToPanelPosition(Vector2 position, int targetDisplay)
  Vector2 ScreenBottomLeftToPanelDelta(Vector2 delta)
--------------------------------------------------
Класс: UnityEngine.UIElements.IUIElementsUtility
Поля:
Свойства:
Методы:
  bool TakeCapture()
  bool ReleaseCapture()
  bool ProcessEvent(int instanceID, IntPtr nativeEventPtr, Boolean& eventHandled)
  bool CleanupRoots()
  bool EndContainerGUIFromException(Exception exception)
  bool MakeCurrentIMGUIContainerDirty()
  void UpdateSchedulers()
  void RequestRepaintForPanels(Action`1<ScriptableObject> repaintCallback)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIEventRegistration
Наследуется от: object
Поля:
  List`1<IUIElementsUtility> s_Utilities
Свойства:
Методы:
  void .cctor()
  void RegisterUIElementSystem(IUIElementsUtility utility)
  void TakeCapture()
  void ReleaseCapture()
  bool EndContainerGUIFromException(Exception exception)
  bool ProcessEvent(int instanceID, IntPtr nativeEventPtr)
  void CleanupRoots()
  void MakeCurrentIMGUIContainerDirty()
  void UpdateSchedulers()
  void RequestRepaintForPanels(Action`1<ScriptableObject> repaintCallback)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIElementsUtility
Наследуется от: object
Поля:
  Stack`1<IMGUIContainer> s_ContainerStack
  Dictionary`2<int, Panel> s_UIElementsCache
  Event s_EventInstance
  Color editorPlayModeTintColor
  float singleLineHeight
  UIElementsUtility s_Instance
  List`1<Panel> s_PanelsIterationList
  string s_RepaintProfilerMarkerName
  string s_EventProfilerMarkerName
  ProfilerMarker s_RepaintProfilerMarker
  ProfilerMarker s_EventProfilerMarker
Свойства:
Методы:
  void .ctor()
  IMGUIContainer GetCurrentIMGUIContainer()
  bool UnityEngine.UIElements.IUIElementsUtility.MakeCurrentIMGUIContainerDirty()
  bool UnityEngine.UIElements.IUIElementsUtility.TakeCapture()
  bool UnityEngine.UIElements.IUIElementsUtility.ReleaseCapture()
  bool UnityEngine.UIElements.IUIElementsUtility.ProcessEvent(int instanceID, IntPtr nativeEventPtr, Boolean& eventHandled)
  bool UnityEngine.UIElements.IUIElementsUtility.CleanupRoots()
  bool UnityEngine.UIElements.IUIElementsUtility.EndContainerGUIFromException(Exception exception)
  void UnityEngine.UIElements.IUIElementsUtility.UpdateSchedulers()
  void UnityEngine.UIElements.IUIElementsUtility.RequestRepaintForPanels(Action`1<ScriptableObject> repaintCallback)
  void RegisterCachedPanel(int instanceID, Panel panel)
  void RemoveCachedPanel(int instanceID)
  bool TryGetPanel(int instanceID, Panel& panel)
  void BeginContainerGUI(LayoutCache cache, Event evt, IMGUIContainer container)
  void EndContainerGUI(Event evt, Rect layoutSize)
  EventBase CreateEvent(Event systemEvent)
  EventBase CreateEvent(Event systemEvent, EventType eventType)
  bool DoDispatch(BaseVisualElementPanel panel)
  void GetAllPanels(List`1<Panel> panels, ContextType contextType)
  Enumerator<int, Panel> GetPanelsIterator()
  Panel FindOrCreateEditorPanel(ScriptableObject ownerObject)
  float PixelsPerUnitScaleForElement(VisualElement ve, Sprite sprite)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.RuleMatcher
Наследуется от: ValueType
Поля:
  StyleSheet sheet
  StyleComplexSelector complexSelector
Свойства:
Методы:
  void .ctor(StyleSheet sheet, StyleComplexSelector complexSelector, int styleSheetIndexInStack)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.UQuery
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UQueryState`1
Наследуется от: ValueType
Поля:
  ActionQueryMatcher<T> s_Action
  VisualElement m_Element
  List`1<RuleMatcher> m_Matchers
  ListQueryMatcher`1<T, T> s_List
  ListQueryMatcher`1<T, VisualElement> s_EnumerationList
Свойства:
Методы:
  void .ctor(VisualElement element, List`1<RuleMatcher> matchers)
  UQueryState`1<T> RebuildOn(VisualElement element)
  T Single(SingleQueryMatcher matcher)
  T First()
  T Last()
  void ToList(List`1<T> results)
  List`1<T> ToList()
  T AtIndex(int index)
  void ForEach(Action`1<T> funcCall)
  void ForEach(List`1<T2> result, Func`2<T, T2> funcCall)
  List`1<T2> ForEach(Func`2<T, T2> funcCall)
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Equals(UQueryState`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(UQueryState`1<T> state1, UQueryState`1<T> state2)
  bool op_Inequality(UQueryState`1<T> state1, UQueryState`1<T> state2)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UQueryBuilder`1
Наследуется от: ValueType
Поля:
  List`1<StyleSelector> m_StyleSelectors
  List`1<StyleSelectorPart> m_Parts
  VisualElement m_Element
  List`1<RuleMatcher> m_Matchers
  StyleSelectorRelationship m_Relationship
  int pseudoStatesMask
  int negatedPseudoStatesMask
Свойства:
  List`1<StyleSelector> styleSelectors
  List`1<StyleSelectorPart> parts
Методы:
  List`1<StyleSelector> get_styleSelectors()
  List`1<StyleSelectorPart> get_parts()
  void .ctor(VisualElement visualElement)
  UQueryBuilder`1<T> Class(string classname)
  UQueryBuilder`1<T> Name(string id)
  UQueryBuilder`1<T2> Descendents(string name, String[] classNames)
  UQueryBuilder`1<T2> Descendents(string name, string classname)
  UQueryBuilder`1<T2> Children(string name, String[] classes)
  UQueryBuilder`1<T2> Children(string name, string className)
  UQueryBuilder`1<T2> OfType(string name, String[] classes)
  UQueryBuilder`1<T2> OfType(string name, string className)
  UQueryBuilder`1<T> SingleBaseType()
  UQueryBuilder`1<T> Where(Func`2<T, bool> selectorPredicate)
  void AddClass(string c)
  void AddClasses(String[] classes)
  void AddName(string id)
  void AddType()
  UQueryBuilder`1<T> AddPseudoState(PseudoStates s)
  UQueryBuilder`1<T> AddNegativePseudoState(PseudoStates s)
  UQueryBuilder`1<T> Active()
  UQueryBuilder`1<T> NotActive()
  UQueryBuilder`1<T> Visible()
  UQueryBuilder`1<T> NotVisible()
  UQueryBuilder`1<T> Hovered()
  UQueryBuilder`1<T> NotHovered()
  UQueryBuilder`1<T> Checked()
  UQueryBuilder`1<T> NotChecked()
  UQueryBuilder`1<T> Selected()
  UQueryBuilder`1<T> NotSelected()
  UQueryBuilder`1<T> Enabled()
  UQueryBuilder`1<T> NotEnabled()
  UQueryBuilder`1<T> Focused()
  UQueryBuilder`1<T> NotFocused()
  UQueryBuilder`1<T2> AddRelationship(StyleSelectorRelationship relationship)
  void AddPseudoStatesRuleIfNecessasy()
  void FinishSelector()
  bool CurrentSelectorEmpty()
  void FinishCurrentSelector()
  UQueryState`1<T> Build()
  T op_Implicit(UQueryBuilder`1<T> s)
  bool op_Equality(UQueryBuilder`1<T> builder1, UQueryBuilder`1<T> builder2)
  bool op_Inequality(UQueryBuilder`1<T> builder1, UQueryBuilder`1<T> builder2)
  T First()
  T Last()
  List`1<T> ToList()
  void ToList(List`1<T> results)
  T AtIndex(int index)
  void ForEach(List`1<T2> result, Func`2<T, T2> funcCall)
  List`1<T2> ForEach(Func`2<T, T2> funcCall)
  void ForEach(Action`1<T> funcCall)
  bool Equals(UQueryBuilder`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.UQueryExtensions
Наследуется от: object
Поля:
  UQueryState`1<VisualElement> SingleElementEmptyQuery
  UQueryState`1<VisualElement> SingleElementNameQuery
  UQueryState`1<VisualElement> SingleElementClassQuery
  UQueryState`1<VisualElement> SingleElementNameAndClassQuery
  UQueryState`1<VisualElement> SingleElementTypeQuery
  UQueryState`1<VisualElement> SingleElementTypeAndNameQuery
  UQueryState`1<VisualElement> SingleElementTypeAndClassQuery
  UQueryState`1<VisualElement> SingleElementTypeAndNameAndClassQuery
Свойства:
Методы:
  T Q(VisualElement e, string name, String[] classes)
  VisualElement Q(VisualElement e, string name, String[] classes)
  T Q(VisualElement e, string name, string className)
  T MandatoryQ(VisualElement e, string name, string className)
  VisualElement Q(VisualElement e, string name, string className)
  VisualElement MandatoryQ(VisualElement e, string name, string className)
  UQueryBuilder`1<VisualElement> Query(VisualElement e, string name, String[] classes)
  UQueryBuilder`1<VisualElement> Query(VisualElement e, string name, string className)
  UQueryBuilder`1<T> Query(VisualElement e, string name, String[] classes)
  UQueryBuilder`1<T> Query(VisualElement e, string name, string className)
  UQueryBuilder`1<VisualElement> Query(VisualElement e)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.GradientType
Наследуется от: Enum
Поля:
  int value__
  GradientType Linear
  GradientType Radial
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.AddressMode
Наследуется от: Enum
Поля:
  int value__
  AddressMode Wrap
  AddressMode Clamp
  AddressMode Mirror
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.VectorImageVertex
Наследуется от: ValueType
Поля:
  Vector3 position
  Color32 tint
  Vector2 uv
  UInt32 settingIndex
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.GradientSettings
Наследуется от: ValueType
Поля:
  GradientType gradientType
  AddressMode addressMode
  Vector2 radialFocus
  RectInt location
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.VectorImage
Наследуется от: ScriptableObject
Поля:
  Texture2D atlas
  VectorImageVertex[] vertices
  UInt16[] indices
  GradientSettings[] settings
  Vector2 size
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PseudoStates
Наследуется от: Enum
Поля:
  int value__
  PseudoStates Active
  PseudoStates Hover
  PseudoStates Checked
  PseudoStates Disabled
  PseudoStates Focus
  PseudoStates Root
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementFlags
Наследуется от: Enum
Поля:
  int value__
  VisualElementFlags WorldTransformDirty
  VisualElementFlags WorldTransformInverseDirty
  VisualElementFlags WorldClipDirty
  VisualElementFlags BoundingBoxDirty
  VisualElementFlags WorldBoundingBoxDirty
  VisualElementFlags LayoutManual
  VisualElementFlags CompositeRoot
  VisualElementFlags RequireMeasureFunction
  VisualElementFlags EnableViewDataPersistence
  VisualElementFlags DisableClipping
  VisualElementFlags NeedsAttachToPanelEvent
  VisualElementFlags HierarchyDisplayed
  VisualElementFlags StyleInitialized
  VisualElementFlags Init
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.PickingMode
Наследуется от: Enum
Поля:
  int value__
  PickingMode Position
  PickingMode Ignore
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementListPool
Наследуется от: object
Поля:
  ObjectPool`1<List`1<VisualElement>> pool
Свойства:
Методы:
  List`1<VisualElement> Copy(List`1<VisualElement> elements)
  List`1<VisualElement> Get(int initialCapacity)
  void Release(List`1<VisualElement> elements)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ObjectListPool`1
Наследуется от: object
Поля:
  ObjectPool`1<List`1<T>> pool
Свойства:
Методы:
  List`1<T> Get()
  void Release(List`1<T> elements)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StringListPool
Наследуется от: ObjectListPool`1<string>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StringObjectListPool
Наследуется от: ObjectListPool`1<string>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void StretchToParentSize(VisualElement elem)
  void StretchToParentWidth(VisualElement elem)
  void AddManipulator(VisualElement ele, IManipulator manipulator)
  void RemoveManipulator(VisualElement ele, IManipulator manipulator)
  Vector2 WorldToLocal(VisualElement ele, Vector2 p)
  Vector2 LocalToWorld(VisualElement ele, Vector2 p)
  Rect WorldToLocal(VisualElement ele, Rect r)
  Rect LocalToWorld(VisualElement ele, Rect r)
  Vector2 ChangeCoordinatesTo(VisualElement src, VisualElement dest, Vector2 point)
  Rect ChangeCoordinatesTo(VisualElement src, VisualElement dest, Rect rect)
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementDebugExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetDisplayName(VisualElement ve, bool withHashCode)
--------------------------------------------------
Класс: UnityEngine.UIElements.IExperimentalFeatures
Поля:
Свойства:
  ITransitionAnimations animation
Методы:
  ITransitionAnimations get_animation()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementFocusChangeDirection
Наследуется от: FocusChangeDirection
Поля:
  VisualElementFocusChangeDirection s_Left
  VisualElementFocusChangeDirection s_Right
Свойства:
  FocusChangeDirection left
  FocusChangeDirection right
  VisualElementFocusChangeDirection lastValue
Методы:
  FocusChangeDirection get_left()
  FocusChangeDirection get_right()
  VisualElementFocusChangeDirection get_lastValue()
  void .ctor(int value)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementFocusChangeTarget
Наследуется от: FocusChangeDirection
Поля:
  ObjectPool`1<VisualElementFocusChangeTarget> Pool
  Focusable <target>k__BackingField
Свойства:
  Focusable target
Методы:
  VisualElementFocusChangeTarget GetPooled(Focusable target)
  void Dispose()
  void ApplyTo(FocusController focusController, Focusable f)
  void .ctor()
  Focusable get_target()
  void set_target(Focusable value)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementFocusRing
Наследуется от: object
Поля:
  VisualElement root
  DefaultFocusOrder <defaultFocusOrder>k__BackingField
  List`1<FocusRingRecord> m_FocusRing
Свойства:
  FocusController focusController
  DefaultFocusOrder defaultFocusOrder
Методы:
  void .ctor(VisualElement root, DefaultFocusOrder dfo)
  FocusController get_focusController()
  DefaultFocusOrder get_defaultFocusOrder()
  void set_defaultFocusOrder(DefaultFocusOrder value)
  int FocusRingAutoIndexSort(FocusRingRecord a, FocusRingRecord b)
  int FocusRingSort(FocusRingRecord a, FocusRingRecord b)
  void DoUpdate()
  void BuildRingForScopeRecursive(VisualElement ve, Int32& scopeIndex, List`1<FocusRingRecord> scopeList)
  void SortAndFlattenScopeLists(List`1<FocusRingRecord> rootScopeList)
  int GetFocusableInternalIndex(Focusable f)
  FocusChangeDirection GetFocusChangeDirection(Focusable currentFocusable, EventBase e)
  FocusChangeDirection GetKeyDownFocusChangeDirection(EventBase e)
  Focusable GetNextFocusable(Focusable currentFocusable, FocusChangeDirection direction)
  Focusable GetNextFocusableInTree(VisualElement currentFocusable)
  Focusable GetPreviousFocusableInTree(VisualElement currentFocusable)
--------------------------------------------------
Класс: UnityEngine.UIElements.IVisualElementScheduledItem
Поля:
Свойства:
  VisualElement element
  bool isActive
Методы:
  VisualElement get_element()
  bool get_isActive()
  void Resume()
  void Pause()
  void ExecuteLater(long delayMs)
  IVisualElementScheduledItem StartingIn(long delayMs)
  IVisualElementScheduledItem Every(long intervalMs)
  IVisualElementScheduledItem Until(Func`1<bool> stopCondition)
  IVisualElementScheduledItem ForDuration(long durationMs)
--------------------------------------------------
Класс: UnityEngine.UIElements.IVisualElementScheduler
Поля:
Свойства:
Методы:
  IVisualElementScheduledItem Execute(Action`1<TimerState> timerUpdateEvent)
  IVisualElementScheduledItem Execute(Action updateEvent)
--------------------------------------------------
Класс: UnityEngine.UIElements.IVisualElementPanelActivatable
Поля:
Свойства:
  VisualElement element
Методы:
  VisualElement get_element()
  bool CanBeActivated()
  void OnPanelActivate()
  void OnPanelDeactivate()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementPanelActivator
Наследуется от: object
Поля:
  IVisualElementPanelActivatable m_Activatable
  bool <isActive>k__BackingField
  bool <isDetaching>k__BackingField
Свойства:
  bool isActive
  bool isDetaching
Методы:
  bool get_isActive()
  void set_isActive(bool value)
  bool get_isDetaching()
  void set_isDetaching(bool value)
  void .ctor(IVisualElementPanelActivatable activatable)
  void SetActive(bool action)
  void SendActivation()
  void SendDeactivation()
  void OnEnter(AttachToPanelEvent evt)
  void OnLeave(DetachFromPanelEvent evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementStyleSheetSet
Наследуется от: ValueType
Поля:
  VisualElement m_Element
Свойства:
  int count
  StyleSheet Item
Методы:
  void .ctor(VisualElement element)
  void Add(StyleSheet styleSheet)
  void Clear()
  bool Remove(StyleSheet styleSheet)
  void Swap(StyleSheet old, StyleSheet new)
  bool Contains(StyleSheet styleSheet)
  int get_count()
  StyleSheet get_Item(int index)
  bool Equals(VisualElementStyleSheetSet other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(VisualElementStyleSheetSet left, VisualElementStyleSheetSet right)
  bool op_Inequality(VisualElementStyleSheetSet left, VisualElementStyleSheetSet right)
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementUtils
Наследуется от: object
Поля:
  HashSet`1<string> s_usedNames
  Type s_FoldoutType
Свойства:
Методы:
  string GetUniqueName(string nameBase)
  int GetFoldoutDepth(VisualElement element)
  int GetListAndFoldoutDepth(VisualElement element)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementAnimationSystem
Наследуется от: BaseVisualTreeUpdater
Поля:
  HashSet`1<IValueAnimationUpdate> m_Animations
  List`1<IValueAnimationUpdate> m_IterationList
  bool m_HasNewAnimations
  bool m_IterationListDirty
  string s_Description
  ProfilerMarker s_ProfilerMarker
  string s_StylePropertyAnimationDescription
  ProfilerMarker s_StylePropertyAnimationProfilerMarker
  long lastUpdate
Свойства:
  ProfilerMarker profilerMarker
  ProfilerMarker stylePropertyAnimationProfilerMarker
Методы:
  long CurrentTimeMs()
  ProfilerMarker get_profilerMarker()
  ProfilerMarker get_stylePropertyAnimationProfilerMarker()
  void UnregisterAnimation(IValueAnimationUpdate anim)
  void UnregisterAnimations(List`1<IValueAnimationUpdate> anims)
  void RegisterAnimation(IValueAnimationUpdate anim)
  void RegisterAnimations(List`1<IValueAnimationUpdate> anims)
  void Update()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.HierarchyChangeType
Наследуется от: Enum
Поля:
  int value__
  HierarchyChangeType Add
  HierarchyChangeType Remove
  HierarchyChangeType Move
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseVisualTreeHierarchyTrackerUpdater
Наследуется от: BaseVisualTreeUpdater
Поля:
  State m_State
  VisualElement m_CurrentChangeElement
  VisualElement m_CurrentChangeParent
Свойства:
Методы:
  void OnHierarchyChange(VisualElement ve, HierarchyChangeType type)
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void Update()
  void ProcessNewChange(VisualElement ve)
  void ProcessAddOrMove(VisualElement ve)
  void ProcessRemove(VisualElement ve)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleCache
Наследуется от: object
Поля:
  Dictionary`2<long, ComputedStyle> s_ComputedStyleCache
  Dictionary`2<int, StyleVariableContext> s_StyleVariableContextCache
  Dictionary`2<int, ComputedTransitionProperty[]> s_ComputedTransitionsCache
Свойства:
Методы:
  bool TryGetValue(long hash, ComputedStyle& data)
  void SetValue(long hash, ComputedStyle& data)
  bool TryGetValue(int hash, StyleVariableContext& data)
  void SetValue(int hash, StyleVariableContext data)
  bool TryGetValue(int hash, ComputedTransitionProperty[]& data)
  void SetValue(int hash, ComputedTransitionProperty[] data)
  void ClearStyleCache()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeStyleUpdater
Наследуется от: BaseVisualTreeUpdater
Поля:
  HashSet`1<VisualElement> m_ApplyStyleUpdateList
  HashSet`1<VisualElement> m_TransitionPropertyUpdateList
  bool m_IsApplyingStyles
  UInt32 m_Version
  UInt32 m_LastVersion
  VisualTreeStyleUpdaterTraversal m_StyleContextHierarchyTraversal
  string s_Description
  ProfilerMarker s_ProfilerMarker
Свойства:
  VisualTreeStyleUpdaterTraversal traversal
  ProfilerMarker profilerMarker
Методы:
  VisualTreeStyleUpdaterTraversal get_traversal()
  void set_traversal(VisualTreeStyleUpdaterTraversal value)
  ProfilerMarker get_profilerMarker()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void Update()
  void ApplyStyles()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleMatchingContext
Наследуется от: object
Поля:
  List`1<StyleSheet> m_StyleSheetStack
  StyleVariableContext variableContext
  VisualElement currentElement
  Action`2<VisualElement, MatchResultInfo> processResult
Свойства:
  int styleSheetCount
Методы:
  int get_styleSheetCount()
  void .ctor(Action`2<VisualElement, MatchResultInfo> processResult)
  void AddStyleSheet(StyleSheet sheet)
  void RemoveStyleSheetRange(int index, int count)
  StyleSheet GetStyleSheetAt(int index)
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeStyleUpdaterTraversal
Наследуется от: HierarchyTraversal
Поля:
  StyleVariableContext m_ProcessVarContext
  HashSet`1<VisualElement> m_UpdateList
  HashSet`1<VisualElement> m_ParentList
  List`1<SelectorMatchRecord> m_TempMatchResults
  float <currentPixelsPerPoint>k__BackingField
  StyleMatchingContext m_StyleMatchingContext
  StylePropertyReader m_StylePropertyReader
  List`1<StylePropertyId> m_AnimatedProperties
Свойства:
  float currentPixelsPerPoint
  StyleMatchingContext styleMatchingContext
Методы:
  float get_currentPixelsPerPoint()
  void set_currentPixelsPerPoint(float value)
  StyleMatchingContext get_styleMatchingContext()
  void PrepareTraversal(float pixelsPerPoint)
  void AddChangedElement(VisualElement ve, VersionChangeType versionChangeType)
  void Clear()
  void PropagateToChildren(VisualElement ve)
  void PropagateToParents(VisualElement ve)
  void OnProcessMatchResult(VisualElement current, MatchResultInfo info)
  void TraverseRecursive(VisualElement element, int depth)
  void ProcessTransitions(VisualElement element, ComputedStyle& oldStyle, ComputedStyle& newStyle)
  void ForceUpdateTransitions(VisualElement element)
  void CancelAnimationsWithNoTransitionProperty(VisualElement element, ComputedStyle& newStyle)
  bool ShouldSkipElement(VisualElement element)
  ComputedStyle ProcessMatchedRules(VisualElement element, List`1<SelectorMatchRecord> matchingSelectors)
  void ProcessMatchedVariables(StyleSheet sheet, StyleRule rule)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeTransformClipUpdater
Наследуется от: BaseVisualTreeUpdater
Поля:
  UInt32 m_Version
  UInt32 m_LastVersion
  string s_Description
  ProfilerMarker s_ProfilerMarker
Свойства:
  ProfilerMarker profilerMarker
Методы:
  ProfilerMarker get_profilerMarker()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void DirtyHierarchy(VisualElement ve, bool mustDirtyWorldTransform, bool mustDirtyWorldClip)
  void DirtyBoundingBoxHierarchy(VisualElement ve)
  void Update()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeUpdatePhase
Наследуется от: Enum
Поля:
  int value__
  VisualTreeUpdatePhase ViewData
  VisualTreeUpdatePhase Bindings
  VisualTreeUpdatePhase Animation
  VisualTreeUpdatePhase Styles
  VisualTreeUpdatePhase Layout
  VisualTreeUpdatePhase TransformClip
  VisualTreeUpdatePhase Repaint
  VisualTreeUpdatePhase Count
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeUpdater
Наследуется от: object
Поля:
  BaseVisualElementPanel m_Panel
  UpdaterArray m_UpdaterArray
Свойства:
Методы:
  void .ctor(BaseVisualElementPanel panel)
  void Dispose()
  void UpdateVisualTree()
  void UpdateVisualTreePhase(VisualTreeUpdatePhase phase)
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void SetUpdater(IVisualTreeUpdater updater, VisualTreeUpdatePhase phase)
  void SetUpdater(VisualTreeUpdatePhase phase)
  IVisualTreeUpdater GetUpdater(VisualTreeUpdatePhase phase)
  void SetDefaultUpdaters()
--------------------------------------------------
Класс: UnityEngine.UIElements.IVisualTreeUpdater
Поля:
Свойства:
  BaseVisualElementPanel panel
  ProfilerMarker profilerMarker
Методы:
  BaseVisualElementPanel get_panel()
  void set_panel(BaseVisualElementPanel value)
  ProfilerMarker get_profilerMarker()
  void Update()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseVisualTreeUpdater
Наследуется от: object
Поля:
  Action`1<BaseVisualElementPanel> panelChanged
  BaseVisualElementPanel m_Panel
Свойства:
  BaseVisualElementPanel panel
  VisualElement visualTree
  ProfilerMarker profilerMarker
Методы:
  void add_panelChanged(Action`1<BaseVisualElementPanel> value)
  void remove_panelChanged(Action`1<BaseVisualElementPanel> value)
  BaseVisualElementPanel get_panel()
  void set_panel(BaseVisualElementPanel value)
  VisualElement get_visualTree()
  ProfilerMarker get_profilerMarker()
  void Dispose()
  void Dispose(bool disposing)
  void Update()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeViewDataUpdater
Наследуется от: BaseVisualTreeUpdater
Поля:
  HashSet`1<VisualElement> m_UpdateList
  HashSet`1<VisualElement> m_ParentList
  int kMaxValidatePersistentDataCount
  UInt32 m_Version
  UInt32 m_LastVersion
  string s_Description
  ProfilerMarker s_ProfilerMarker
Свойства:
  ProfilerMarker profilerMarker
Методы:
  ProfilerMarker get_profilerMarker()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void Update()
  void ValidateViewDataOnSubTree(VisualElement ve, bool enablePersistence)
  void PropagateToParents(VisualElement ve)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IBindingRequest
Поля:
Свойства:
Методы:
  void Bind(VisualElement element)
  void Release()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeBindingsUpdater
Наследуется от: BaseVisualTreeHierarchyTrackerUpdater
Поля:
  PropertyName s_BindingRequestObjectVEPropertyName
  PropertyName s_AdditionalBindingObjectVEPropertyName
  string s_Description
  ProfilerMarker s_ProfilerMarker
  ProfilerMarker s_ProfilerBindingRequestsMarker
  ProfilerMarker s_MarkerUpdate
  ProfilerMarker s_MarkerPoll
  bool <disableBindingsThrottling>k__BackingField
  HashSet`1<VisualElement> m_ElementsWithBindings
  HashSet`1<VisualElement> m_ElementsToAdd
  HashSet`1<VisualElement> m_ElementsToRemove
  int k_MinUpdateDelayMs
  int k_MaxBindingTimeMs
  long m_LastUpdateTime
  HashSet`1<VisualElement> m_ElementsToBind
  Dictionary`2<object, object> <temporaryObjectCache>k__BackingField
  List`1<IBinding> updatedBindings
Свойства:
  ProfilerMarker profilerMarker
  bool disableBindingsThrottling
  Dictionary`2<object, object> temporaryObjectCache
Методы:
  ProfilerMarker get_profilerMarker()
  bool get_disableBindingsThrottling()
  void set_disableBindingsThrottling(bool value)
  IBinding GetBindingObjectFromElement(VisualElement ve)
  void StartTracking(VisualElement ve)
  void StopTracking(VisualElement ve)
  Dictionary`2<object, object> get_temporaryObjectCache()
  void set_temporaryObjectCache(Dictionary`2<object, object> value)
  void SetAdditionalBinding(VisualElement ve, IBinding b)
  void ClearAdditionalBinding(VisualElement ve)
  IBinding GetAdditionalBinding(VisualElement ve)
  void AddBindingRequest(VisualElement ve, IBindingRequest req)
  void RemoveBindingRequest(VisualElement ve, IBindingRequest req)
  void ClearBindingRequests(VisualElement ve)
  void StartTrackingRecursive(VisualElement ve)
  void StopTrackingRecursive(VisualElement ve)
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void OnHierarchyChange(VisualElement ve, HierarchyChangeType type)
  long CurrentTime()
  bool ShouldThrottle(long startTime)
  void PerformTrackingOperations()
  void Update()
  void UpdateBindings()
  void PollElementsWithBindings(Action`2<VisualElement, IBinding> callback)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.CollectionViewController
Наследуется от: object
Поля:
  BaseVerticalCollectionView m_View
  IList m_ItemsSource
  Action itemsSourceChanged
  Action`2<int, int> itemIndexChanged
Свойства:
  IList itemsSource
  BaseVerticalCollectionView view
Методы:
  void add_itemsSourceChanged(Action value)
  void remove_itemsSourceChanged(Action value)
  void add_itemIndexChanged(Action`2<int, int> value)
  void remove_itemIndexChanged(Action`2<int, int> value)
  IList get_itemsSource()
  void set_itemsSource(IList value)
  void SetItemsSourceWithoutNotify(IList source)
  BaseVerticalCollectionView get_view()
  void SetView(BaseVerticalCollectionView view)
  int GetItemCount()
  int GetIndexForId(int id)
  int GetIdForIndex(int index)
  object GetItemForIndex(int index)
  void InvokeMakeItem(ReusableCollectionItem reusableItem)
  void InvokeBindItem(ReusableCollectionItem reusableItem, int index)
  void InvokeUnbindItem(ReusableCollectionItem reusableItem, int index)
  void InvokeDestroyItem(ReusableCollectionItem reusableItem)
  VisualElement MakeItem()
  void BindItem(VisualElement element, int index)
  void UnbindItem(VisualElement element, int index)
  void DestroyItem(VisualElement element)
  void RaiseItemsSourceChanged()
  void RaiseItemIndexChanged(int srcIndex, int dstIndex)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ListViewController
Наследуется от: CollectionViewController
Поля:
  Action itemsSourceSizeChanged
  Action`1<IEnumerable`1<int>> itemsAdded
  Action`1<IEnumerable`1<int>> itemsRemoved
Свойства:
  ListView listView
Методы:
  void add_itemsSourceSizeChanged(Action value)
  void remove_itemsSourceSizeChanged(Action value)
  void add_itemsAdded(Action`1<IEnumerable`1<int>> value)
  void remove_itemsAdded(Action`1<IEnumerable`1<int>> value)
  void add_itemsRemoved(Action`1<IEnumerable`1<int>> value)
  void remove_itemsRemoved(Action`1<IEnumerable`1<int>> value)
  ListView get_listView()
  void InvokeMakeItem(ReusableCollectionItem reusableItem)
  void InvokeBindItem(ReusableCollectionItem reusableItem, int index)
  bool NeedsDragHandle(int index)
  void AddItems(int itemCount)
  void Move(int index, int newIndex)
  void RemoveItem(int index)
  void RemoveItems(List`1<int> indices)
  void RaiseOnSizeChanged()
  void RaiseItemsAdded(IEnumerable`1<int> indices)
  void RaiseItemsRemoved(IEnumerable`1<int> indices)
  Array AddToArray(Array source, int itemCount)
  Array RemoveFromArray(Array source, List`1<int> indicesToRemove)
  void Swap(int lhs, int rhs)
  void EnsureItemSourceCanBeResized()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeViewController
Наследуется от: CollectionViewController
Поля:
  Dictionary`2<int, TreeItem> m_TreeItems
  List`1<int> m_RootIndices
  List`1<TreeViewItemWrapper> m_ItemWrappers
  List`1<TreeViewItemWrapper> m_WrapperInsertionList
Свойства:
  TreeView treeView
Методы:
  TreeView get_treeView()
  void RebuildTree()
  IEnumerable`1<int> GetRootItemIds()
  IEnumerable`1<int> GetAllItemIds(IEnumerable`1<int> rootIds)
  int GetParentId(int id)
  IEnumerable`1<int> GetChildrenIds(int id)
  void Move(int id, int newParentId, int childIndex)
  bool TryRemoveItem(int id)
  void InvokeMakeItem(ReusableCollectionItem reusableItem)
  void InvokeBindItem(ReusableCollectionItem reusableItem, int index)
  void InvokeDestroyItem(ReusableCollectionItem reusableItem)
  void OnItemPointerUp(PointerUpEvent evt)
  void ToggleExpandedState(ChangeEvent`1<bool> evt)
  int GetItemCount()
  int GetTreeCount()
  int GetIndexForId(int id)
  int GetIdForIndex(int index)
  bool HasChildren(int id)
  bool HasChildrenByIndex(int index)
  IEnumerable`1<int> GetChildrenIdsByIndex(int index)
  int GetChildIndexForId(int id)
  int GetIndentationDepth(int index)
  bool IsExpanded(int id)
  bool IsExpandedByIndex(int index)
  void ExpandItemByIndex(int index, bool expandAllChildren, bool refresh)
  void ExpandItem(int id, bool expandAllChildren)
  void CollapseItemByIndex(int index, bool collapseAllChildren)
  void CollapseItem(int id, bool collapseAllChildren)
  void ExpandAll()
  void CollapseAll()
  void RegenerateWrappers()
  void CreateWrappers(IEnumerable`1<int> treeViewItemIds, int depth, List`1& wrappers)
  bool IsIndexValid(int index)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DefaultTreeViewController`1
Наследуется от: TreeViewController
Поля:
  TreeData`1<T> m_TreeData
  Stack`1<IEnumerator`1<int>> m_IteratorStack
Свойства:
Методы:
  void SetRootItems(IList`1<TreeViewItemData`1<T>> items)
  void AddItem(TreeViewItemData`1& item, int parentId, int childIndex)
  bool TryRemoveItem(int id)
  T GetDataForId(int id)
  T GetDataForIndex(int index)
  object GetItemForIndex(int index)
  int GetParentId(int id)
  bool HasChildren(int id)
  IEnumerable`1<int> GetItemIds(IEnumerable`1<TreeViewItemData`1<T>> items)
  IEnumerable`1<int> GetChildrenIds(int id)
  void Move(int id, int newParentId, int childIndex)
  bool IsChildOf(int childId, int id)
  IEnumerable`1<int> GetAllItemIds(IEnumerable`1<int> rootIds)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.CollectionVirtualizationController
Наследуется от: object
Поля:
  ScrollView m_ScrollView
Свойства:
  int firstVisibleIndex
  int lastVisibleIndex
  int visibleItemCount
  IEnumerable`1<ReusableCollectionItem> activeItems
Методы:
  int get_firstVisibleIndex()
  int get_lastVisibleIndex()
  int get_visibleItemCount()
  void .ctor(ScrollView scrollView)
  void Refresh(bool rebuild)
  void ScrollToItem(int id)
  void Resize(Vector2 size, int layoutPass)
  void OnScroll(Vector2 offset)
  int GetIndexFromPosition(Vector2 position)
  float GetItemHeight(int index)
  void OnFocus(VisualElement leafTarget)
  void OnBlur(VisualElement willFocus)
  void UpdateBackground()
  IEnumerable`1<ReusableCollectionItem> get_activeItems()
  void ReplaceActiveItem(int index)
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicHeightVirtualizationController`1
Наследуется от: VerticalVirtualizationController`1<T>
Поля:
  int InitialAverageHeight
  Dictionary`2<int, float> m_ItemHeightCache
  HashSet`1<int> m_WaitingCache
  int m_ForcedFirstVisibleItem
  int m_ForcedLastVisibleItem
  bool m_StickToBottom
  float m_AverageHeight
  float m_AccumulatedHeight
  float m_StoredPadding
  Action m_FillCallback
  Action`1<ReusableCollectionItem> m_GeometryChangedCallback
  IVisualElementScheduledItem m_ScheduledItem
  Predicate`1<int> m_IndexOutOfBoundsPredicate
Свойства:
Методы:
  void .ctor(BaseVerticalCollectionView collectionView)
  void Refresh(bool rebuild)
  void ScrollToItem(int index)
  void Resize(Vector2 size, int layoutPass)
  void OnScroll(Vector2 scrollOffset)
  bool NeedsFill()
  void Fill()
  int GetIndexFromPosition(Vector2 position)
  float GetItemHeight(int index)
  int GetFirstVisibleItem(float offset)
  void UpdateScrollViewContainer(int index, float previousHeight, float newHeight)
  void ApplyScrollViewUpdate()
  void OnViewportGeometryChanged(GeometryChangedEvent evt)
  float GetContentHeight()
  float GetContentHeightForIndex(int lastIndex)
  void RegisterItemHeight(int index, float height)
  void UnregisterItemHeight(int index, float height)
  void OnRecycledItemGeometryChanged(ReusableCollectionItem item)
  T GetOrMakeItem()
  void ReplaceActiveItem(int index)
  void ReleaseItem(int activeItemsIndex)
  bool IsIndexOutOfBounds(int i)
  void .cctor()
  void <.ctor>b__13_0(VisualElement element)
--------------------------------------------------
Класс: UnityEngine.UIElements.FixedHeightVirtualizationController`1
Наследуется от: VerticalVirtualizationController`1<T>
Поля:
Свойства:
  float resolvedItemHeight
Методы:
  float get_resolvedItemHeight()
  bool VisibleItemPredicate(T i)
  void .ctor(BaseVerticalCollectionView collectionView)
  int GetIndexFromPosition(Vector2 position)
  float GetItemHeight(int index)
  void ScrollToItem(int index)
  void Resize(Vector2 size, int layoutPass)
  void OnScroll(Vector2 scrollOffset)
  T GetOrMakeItem()
--------------------------------------------------
Класс: UnityEngine.UIElements.ReusableCollectionItem
Наследуется от: object
Поля:
  int UndefinedIndex
  VisualElement <bindableElement>k__BackingField
  ValueAnimation`1<StyleValues> <animator>k__BackingField
  int <index>k__BackingField
  int <id>k__BackingField
  Action`1<ReusableCollectionItem> onGeometryChanged
  EventCallback`1<GeometryChangedEvent> m_GeometryChangedEventCallback
Свойства:
  VisualElement rootElement
  VisualElement bindableElement
  ValueAnimation`1<StyleValues> animator
  int index
  int id
Методы:
  VisualElement get_rootElement()
  VisualElement get_bindableElement()
  void set_bindableElement(VisualElement value)
  ValueAnimation`1<StyleValues> get_animator()
  void set_animator(ValueAnimation`1<StyleValues> value)
  int get_index()
  void set_index(int value)
  int get_id()
  void set_id(int value)
  void add_onGeometryChanged(Action`1<ReusableCollectionItem> value)
  void remove_onGeometryChanged(Action`1<ReusableCollectionItem> value)
  void .ctor()
  void Init(VisualElement item)
  void PreAttachElement()
  void DetachElement()
  void SetSelected(bool selected)
  void OnGeometryChanged(GeometryChangedEvent evt)
  VisualElement GetRootElement()
--------------------------------------------------
Класс: UnityEngine.UIElements.ReusableListViewItem
Наследуется от: ReusableCollectionItem
Поля:
  VisualElement m_Container
  VisualElement m_DragHandle
  VisualElement m_ItemContainer
Свойства:
  VisualElement rootElement
Методы:
  VisualElement get_rootElement()
  void Init(VisualElement item, bool usesAnimatedDragger)
  void UpdateHierarchy(bool usesAnimatedDragger)
  void UpdateDragHandle(bool needsDragHandle)
  void PreAttachElement()
  void DetachElement()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ReusableTreeViewItem
Наследуется от: ReusableCollectionItem
Поля:
  Toggle m_Toggle
  VisualElement m_Container
  VisualElement m_IndentContainer
  VisualElement m_BindableContainer
  Action`1<PointerUpEvent> onPointerUp
  Action`1<ChangeEvent`1<bool>> onToggleValueChanged
  ObjectPool`1<VisualElement> m_IndentPool
  EventCallback`1<PointerUpEvent> m_PointerUpCallback
  EventCallback`1<ChangeEvent`1<bool>> m_ToggleValueChangedCallback
Свойства:
  VisualElement rootElement
Методы:
  VisualElement get_rootElement()
  void add_onPointerUp(Action`1<PointerUpEvent> value)
  void remove_onPointerUp(Action`1<PointerUpEvent> value)
  void add_onToggleValueChanged(Action`1<ChangeEvent`1<bool>> value)
  void remove_onToggleValueChanged(Action`1<ChangeEvent`1<bool>> value)
  void .ctor()
  void Init(VisualElement item)
  void PreAttachElement()
  void DetachElement()
  void Indent(int depth)
  void SetExpandedWithoutNotify(bool expanded)
  void SetToggleVisibility(bool visible)
  void OnPointerUp(PointerUpEvent evt)
  void OnToggleValueChanged(ChangeEvent`1<bool> evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.VerticalVirtualizationController`1
Наследуется от: CollectionVirtualizationController
Поля:
  BaseVerticalCollectionView m_ListView
  int k_ExtraVisibleItems
  ObjectPool`1<T> m_Pool
  List`1<T> m_ActiveItems
  int m_LastFocusedElementIndex
  List`1<int> m_LastFocusedElementTreeChildIndexes
  int m_FirstVisibleIndex
  Func`2<T, bool> m_VisibleItemPredicateDelegate
  List`1<T> m_ScrollInsertionList
  VisualElement k_EmptyRows
Свойства:
  IEnumerable`1<ReusableCollectionItem> activeItems
  T firstVisibleItem
  T lastVisibleItem
  int visibleItemCount
  int firstVisibleIndex
  int lastVisibleIndex
  float lastHeight
Методы:
  IEnumerable`1<ReusableCollectionItem> get_activeItems()
  bool VisibleItemPredicate(T i)
  T get_firstVisibleItem()
  T get_lastVisibleItem()
  int get_visibleItemCount()
  int get_firstVisibleIndex()
  int get_lastVisibleIndex()
  float get_lastHeight()
  void .ctor(BaseVerticalCollectionView collectionView)
  void Refresh(bool rebuild)
  void Setup(T recycledItem, int newIndex)
  void OnFocus(VisualElement leafTarget)
  void OnBlur(VisualElement willFocus)
  void HandleFocus(ReusableCollectionItem recycledItem, int previousIndex)
  void UpdateBackground()
  void ReplaceActiveItem(int index)
  T GetOrMakeItem()
  void ReleaseItem(int activeItemsIndex)
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseBoolField
Наследуется от: BaseField`1<bool>
Поля:
  Label m_Label
  VisualElement m_CheckMark
  Clickable m_Clickable
  string m_OriginalText
Свойства:
  string text
Методы:
  void .ctor(string label)
  void OnNavigationSubmit(NavigationSubmitEvent evt)
  void OnKeyDown(KeyDownEvent evt)
  string get_text()
  void set_text(string value)
  void InitLabel()
  void SetValueWithoutNotify(bool newValue)
  void OnClickEvent(EventBase evt)
  void ToggleValue()
  void UpdateMixedValueContent()
--------------------------------------------------
Класс: UnityEngine.UIElements.IPrefixLabel
Поля:
Свойства:
  string label
Методы:
  string get_label()
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseField`1
Наследуется от: BindableElement
Поля:
  string ussClassName
  string labelUssClassName
  string inputUssClassName
  string noLabelVariantUssClassName
  string labelDraggerVariantUssClassName
  string mixedValueLabelUssClassName
  string alignedFieldUssClassName
  string inspectorFieldUssClassName
  int kIndentPerLevel
  string mixedValueString
  PropertyName serializedPropertyCopyName
  CustomStyleProperty`1<float> s_LabelWidthRatioProperty
  CustomStyleProperty`1<float> s_LabelExtraPaddingProperty
  CustomStyleProperty`1<float> s_LabelBaseMinWidthProperty
  float m_LabelWidthRatio
  float m_LabelExtraPadding
  float m_LabelBaseMinWidth
  VisualElement m_VisualInput
  TValueType m_Value
  Label <labelElement>k__BackingField
  bool m_ShowMixedValue
  Label m_MixedValueLabel
  VisualElement m_CachedInspectorElement
  int m_CachedListAndFoldoutDepth
Свойства:
  VisualElement visualInput
  TValueType rawValue
  TValueType value
  Label labelElement
  string label
  bool showMixedValue
  Label mixedValueLabel
Методы:
  VisualElement get_visualInput()
  void set_visualInput(VisualElement value)
  TValueType get_rawValue()
  void set_rawValue(TValueType value)
  TValueType get_value()
  void set_value(TValueType value)
  Label get_labelElement()
  void set_labelElement(Label value)
  string get_label()
  void set_label(string value)
  bool get_showMixedValue()
  void set_showMixedValue(bool value)
  Label get_mixedValueLabel()
  void .ctor(string label)
  void .ctor(string label, VisualElement visualInput)
  void OnAttachToPanel(AttachToPanelEvent e)
  void OnCustomStyleResolved(CustomStyleResolvedEvent evt)
  void OnInspectorFieldGeometryChanged(GeometryChangedEvent e)
  void AlignLabel()
  void UpdateMixedValueContent()
  void SetValueWithoutNotify(TValueType newValue)
  void OnViewDataReady()
  Rect GetTooltipRect()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseFieldTraits`2
Наследуется от: UxmlTraits<TValueType>
Поля:
  TValueUxmlAttributeType m_Value
Свойства:
Методы:
  void Init(VisualElement ve, IUxmlAttributes bag, CreationContext cc)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.SliderDirection
Наследуется от: Enum
Поля:
  int value__
  SliderDirection Horizontal
  SliderDirection Vertical
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseSlider`1
Наследуется от: BaseField`1<TValueType>
Поля:
  VisualElement <dragContainer>k__BackingField
  VisualElement <dragElement>k__BackingField
  VisualElement <dragBorderElement>k__BackingField
  TextField <inputTextField>k__BackingField
  TValueType m_LowValue
  TValueType m_HighValue
  float m_PageSize
  bool m_ShowInputField
  bool <clamped>k__BackingField
  ClampedDragger`1<TValueType> <clampedDragger>k__BackingField
  Rect m_DragElementStartPos
  SliderDirection m_Direction
  bool m_Inverted
  float kDefaultPageSize
  bool kDefaultShowInputField
  bool kDefaultInverted
  string ussClassName
  string labelUssClassName
  string inputUssClassName
  string horizontalVariantUssClassName
  string verticalVariantUssClassName
  string dragContainerUssClassName
  string trackerUssClassName
  string draggerUssClassName
  string draggerBorderUssClassName
  string textFieldClassName
Свойства:
  VisualElement dragContainer
  VisualElement dragElement
  VisualElement dragBorderElement
  TextField inputTextField
  TValueType lowValue
  TValueType highValue
  TValueType range
  float pageSize
  bool showInputField
  bool clamped
  ClampedDragger`1<TValueType> clampedDragger
  TValueType value
  SliderDirection direction
  bool inverted
Методы:
  VisualElement get_dragContainer()
  void set_dragContainer(VisualElement value)
  VisualElement get_dragElement()
  void set_dragElement(VisualElement value)
  VisualElement get_dragBorderElement()
  void set_dragBorderElement(VisualElement value)
  TextField get_inputTextField()
  void set_inputTextField(TextField value)
  TValueType get_lowValue()
  void set_lowValue(TValueType value)
  TValueType get_highValue()
  void set_highValue(TValueType value)
  void SetHighValueWithoutNotify(TValueType newHighValue)
  TValueType get_range()
  float get_pageSize()
  void set_pageSize(float value)
  bool get_showInputField()
  void set_showInputField(bool value)
  bool get_clamped()
  void set_clamped(bool value)
  ClampedDragger`1<TValueType> get_clampedDragger()
  void set_clampedDragger(ClampedDragger`1<TValueType> value)
  TValueType Clamp(TValueType value, TValueType lowBound, TValueType highBound)
  TValueType GetClampedValue(TValueType newValue)
  TValueType get_value()
  void set_value(TValueType value)
  void SetValueWithoutNotify(TValueType newValue)
  SliderDirection get_direction()
  void set_direction(SliderDirection value)
  bool get_inverted()
  void set_inverted(bool value)
  void .ctor(string label, TValueType start, TValueType end, SliderDirection direction, float pageSize)
  float GetClosestPowerOfTen(float positiveNumber)
  float RoundToMultipleOf(float value, float roundingValue)
  void ClampValue()
  TValueType SliderLerpUnclamped(TValueType a, TValueType b, float interpolant)
  float SliderNormalizeValue(TValueType currentValue, TValueType lowerValue, TValueType higherValue)
  TValueType SliderRange()
  TValueType ParseStringToValue(string stringValue)
  void ComputeValueFromKey(SliderKey<TValueType> sliderKey, bool isShift)
  TValueType SliderLerpDirectionalUnclamped(TValueType a, TValueType b, float positionInterpolant)
  void SetSliderValueFromDrag()
  void ComputeValueAndDirectionFromDrag(float sliderLength, float dragElementLength, float dragElementPos)
  void SetSliderValueFromClick()
  void OnKeyDown(KeyDownEvent evt)
  void ComputeValueAndDirectionFromClick(float sliderLength, float dragElementLength, float dragElementPos, float dragElementLastPos)
  void AdjustDragElement(float factor)
  void UpdateDragElementPosition(GeometryChangedEvent evt)
  void OnViewDataReady()
  bool SameValues(float a, float b, float epsilon)
  void UpdateDragElementPosition()
  void ExecuteDefaultAction(EventBase evt)
  void UpdateTextFieldVisibility()
  void UpdateTextFieldValue()
  void OnTextFieldFocusOut(FocusOutEvent evt)
  void OnTextFieldValueChange(ChangeEvent`1<string> evt)
  void UpdateMixedValueContent()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.AlternatingRowBackground
Наследуется от: Enum
Поля:
  int value__
  AlternatingRowBackground None
  AlternatingRowBackground ContentOnly
  AlternatingRowBackground All
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.CollectionVirtualizationMethod
Наследуется от: Enum
Поля:
  int value__
  CollectionVirtualizationMethod FixedHeight
  CollectionVirtualizationMethod DynamicHeight
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseVerticalCollectionView
Наследуется от: BindableElement
Поля:
  Action`1<object> onItemChosen
  Action`1<IEnumerable`1<object>> onItemsChosen
  Action`1<List`1<object>> onSelectionChanged
  Action`1<IEnumerable`1<object>> onSelectionChange
  Action`1<IEnumerable`1<int>> onSelectedIndicesChange
  Action`2<int, int> itemIndexChanged
  Action itemsSourceChanged
  Func`2<int, int> m_GetItemId
  Func`1<VisualElement> m_MakeItem
  Action`2<VisualElement, int> m_BindItem
  Action`2<VisualElement, int> <unbindItem>k__BackingField
  Action`1<VisualElement> <destroyItem>k__BackingField
  SelectionType m_SelectionType
  List`1<ReusableCollectionItem> k_EmptyItems
  bool m_HorizontalScrollingEnabled
  AlternatingRowBackground m_ShowAlternatingRowBackgrounds
  int s_DefaultItemHeight
  float m_FixedItemHeight
  bool m_ItemHeightIsInline
  CollectionVirtualizationMethod m_VirtualizationMethod
  ScrollView m_ScrollView
  CollectionViewController m_ViewController
  CollectionVirtualizationController m_VirtualizationController
  KeyboardNavigationManipulator m_NavigationManipulator
  Vector2 m_ScrollOffset
  List`1<int> m_SelectedIds
  List`1<int> m_SelectedIndices
  List`1<object> m_SelectedItems
  float m_LastHeight
  bool m_IsRangeSelectionDirectionUp
  ListViewDragger m_Dragger
  float ItemHeightUnset
  CustomStyleProperty`1<int> s_ItemHeightProperty
  Action`2<int, int> m_ItemIndexChangedCallback
  Action m_ItemsSourceChangedCallback
  string ussClassName
  string borderUssClassName
  string itemUssClassName
  string dragHoverBarUssClassName
  string itemDragHoverUssClassName
  string itemSelectedVariantUssClassName
  string itemAlternativeBackgroundUssClassName
  string listScrollViewUssClassName
  string backgroundFillUssClassName
  Vector3 m_TouchDownPosition
Свойства:
  Func`2<int, int> getItemId
  IList itemsSource
  bool sourceIncludesArraySize
  Func`1<VisualElement> makeItem
  Action`2<VisualElement, int> bindItem
  Action`2<VisualElement, int> unbindItem
  Action`1<VisualElement> destroyItem
  VisualElement contentContainer
  SelectionType selectionType
  object selectedItem
  IEnumerable`1<object> selectedItems
  int selectedIndex
  IEnumerable`1<int> selectedIndices
  List`1<int> currentSelectionIds
  IEnumerable`1<ReusableCollectionItem> activeItems
  ScrollView scrollView
  ListViewDragger dragger
  CollectionViewController viewController
  CollectionVirtualizationController virtualizationController
  float resolvedItemHeight
  bool showBorder
  bool reorderable
  bool horizontalScrollingEnabled
  AlternatingRowBackground showAlternatingRowBackgrounds
  CollectionVirtualizationMethod virtualizationMethod
  int itemHeight
  float fixedItemHeight
  float lastHeight
Методы:
  void add_onItemChosen(Action`1<object> value)
  void remove_onItemChosen(Action`1<object> value)
  void add_onItemsChosen(Action`1<IEnumerable`1<object>> value)
  void remove_onItemsChosen(Action`1<IEnumerable`1<object>> value)
  void add_onSelectionChanged(Action`1<List`1<object>> value)
  void remove_onSelectionChanged(Action`1<List`1<object>> value)
  void add_onSelectionChange(Action`1<IEnumerable`1<object>> value)
  void remove_onSelectionChange(Action`1<IEnumerable`1<object>> value)
  void add_onSelectedIndicesChange(Action`1<IEnumerable`1<int>> value)
  void remove_onSelectedIndicesChange(Action`1<IEnumerable`1<int>> value)
  void add_itemIndexChanged(Action`2<int, int> value)
  void remove_itemIndexChanged(Action`2<int, int> value)
  void add_itemsSourceChanged(Action value)
  void remove_itemsSourceChanged(Action value)
  Func`2<int, int> get_getItemId()
  void set_getItemId(Func`2<int, int> value)
  IList get_itemsSource()
  void set_itemsSource(IList value)
  bool get_sourceIncludesArraySize()
  Func`1<VisualElement> get_makeItem()
  void set_makeItem(Func`1<VisualElement> value)
  Action`2<VisualElement, int> get_bindItem()
  void set_bindItem(Action`2<VisualElement, int> value)
  void SetMakeItemWithoutNotify(Func`1<VisualElement> func)
  void SetBindItemWithoutNotify(Action`2<VisualElement, int> callback)
  Action`2<VisualElement, int> get_unbindItem()
  void set_unbindItem(Action`2<VisualElement, int> value)
  Action`1<VisualElement> get_destroyItem()
  void set_destroyItem(Action`1<VisualElement> value)
  VisualElement get_contentContainer()
  SelectionType get_selectionType()
  void set_selectionType(SelectionType value)
  object get_selectedItem()
  IEnumerable`1<object> get_selectedItems()
  int get_selectedIndex()
  void set_selectedIndex(int value)
  IEnumerable`1<int> get_selectedIndices()
  List`1<int> get_currentSelectionIds()
  IEnumerable`1<ReusableCollectionItem> get_activeItems()
  ScrollView get_scrollView()
  ListViewDragger get_dragger()
  CollectionViewController get_viewController()
  CollectionVirtualizationController get_virtualizationController()
  float get_resolvedItemHeight()
  float ResolveItemHeight(float height)
  bool get_showBorder()
  void set_showBorder(bool value)
  bool get_reorderable()
  void set_reorderable(bool value)
  bool get_horizontalScrollingEnabled()
  void set_horizontalScrollingEnabled(bool value)
  AlternatingRowBackground get_showAlternatingRowBackgrounds()
  void set_showAlternatingRowBackgrounds(AlternatingRowBackground value)
  CollectionVirtualizationMethod get_virtualizationMethod()
  void set_virtualizationMethod(CollectionVirtualizationMethod value)
  int get_itemHeight()
  void set_itemHeight(int value)
  float get_fixedItemHeight()
  void set_fixedItemHeight(float value)
  float get_lastHeight()
  void CreateVirtualizationController()
  CollectionVirtualizationController GetOrCreateVirtualizationController()
  void CreateVirtualizationController()
  CollectionViewController GetOrCreateViewController()
  void CreateViewController()
  void SetViewController(CollectionViewController controller)
  ListViewDragger CreateDragger()
  void InitializeDragAndDropController()
  ICollectionDragAndDropController CreateDragAndDropController()
  void SetDragAndDropController(ICollectionDragAndDropController dragAndDropController)
  ICollectionDragAndDropController GetDragAndDropController()
  void .ctor()
  void .ctor(IList itemsSource, float itemHeight, Func`1<VisualElement> makeItem, Action`2<VisualElement, int> bindItem)
  VisualElement GetRootElementForId(int id)
  VisualElement GetRootElementForIndex(int index)
  bool HasValidDataAndBindings()
  void OnItemIndexChanged(int srcIndex, int dstIndex)
  void OnItemsSourceChanged()
  void RefreshItem(int index)
  void RefreshItems()
  void Refresh()
  void Rebuild()
  void RefreshSelection()
  void PostRefresh()
  void ScrollTo(VisualElement visualElement)
  void ScrollToItem(int index)
  void ScrollToId(int id)
  void OnScroll(Vector2 offset)
  void Resize(Vector2 size, int layoutPass)
  void OnAttachToPanel(AttachToPanelEvent evt)
  void OnDetachFromPanel(DetachFromPanelEvent evt)
  void OnKeyDown(KeyDownEvent evt)
  bool Apply(KeyboardNavigationOperation op, bool shiftKey)
  void Apply(KeyboardNavigationOperation op, EventBase sourceEvent)
  void OnPointerMove(PointerMoveEvent evt)
  void OnPointerDown(PointerDownEvent evt)
  void OnPointerCancel(PointerCancelEvent evt)
  void OnPointerUp(PointerUpEvent evt)
  void ProcessPointerDown(IPointerEvent evt)
  void ProcessPointerUp(IPointerEvent evt)
  void DoSelect(Vector2 localPosition, int clickCount, bool actionKey, bool shiftKey)
  void DoRangeSelection(int rangeSelectionFinalIndex)
  void ProcessSingleClick(int clickedIndex)
  void SelectAll()
  void AddToSelection(int index)
  void AddToSelection(IList`1<int> indexes)
  void AddToSelectionWithoutValidation(int index)
  void RemoveFromSelection(int index)
  void RemoveFromSelectionWithoutValidation(int index)
  void SetSelection(int index)
  void SetSelection(IEnumerable`1<int> indices)
  void SetSelectionWithoutNotify(IEnumerable`1<int> indices)
  void SetSelectionInternal(IEnumerable`1<int> indices, bool sendNotification)
  void NotifyOfSelectionChange()
  void ClearSelection()
  void ClearSelectionWithoutValidation()
  void OnViewDataReady()
  void ExecuteDefaultAction(EventBase evt)
  void OnSizeChanged(GeometryChangedEvent evt)
  void OnCustomStyleResolved(CustomStyleResolvedEvent e)
  void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
  void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
  void .cctor()
  void <.ctor>b__143_0(float v)
  void <Apply>g__HandleSelectionAndScroll|164_0(int index, <>c__DisplayClass164_0& )
--------------------------------------------------
Класс: UnityEngine.UIElements.IBindable
Поля:
Свойства:
  IBinding binding
  string bindingPath
Методы:
  IBinding get_binding()
  void set_binding(IBinding value)
  string get_bindingPath()
  void set_bindingPath(string value)
--------------------------------------------------
Класс: UnityEngine.UIElements.IBinding
Поля:
Свойства:
Методы:
  void PreUpdate()
  void Update()
  void Release()
--------------------------------------------------
Класс: UnityEngine.UIElements.IBindingExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsBound(IBindable control)
--------------------------------------------------
Класс: UnityEngine.UIElements.IInternalListViewBinding
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Box
Наследуется от: VisualElement
Поля:
  string ussClassName
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Button
Наследуется от: TextElement
Поля:
  string ussClassName
  Clickable m_Clickable
  string NonEmptyString
Свойства:
  Clickable clickable
Методы:
  Clickable get_clickable()
  void set_clickable(Clickable value)
  void add_onClick(Action value)
  void remove_onClick(Action value)
  void add_clicked(Action value)
  void remove_clicked(Action value)
  void .ctor()
  void .ctor(Action clickEvent)
  void OnNavigationSubmit(NavigationSubmitEvent evt)
  void OnKeyDown(KeyDownEvent evt)
  Vector2 DoMeasure(float desiredWidth, MeasureMode widthMode, float desiredHeight, MeasureMode heightMode)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ButtonStripField
Наследуется от: BaseField`1<int>
Поля:
  string className
  string k_ButtonClass
  string k_IconClass
  string k_ButtonLeftClass
  string k_ButtonMiddleClass
  string k_ButtonRightClass
  string k_ButtonAloneClass
  List`1<Button> m_Buttons
Свойства:
  List`1<Button> buttons
Методы:
  List`1<Button> get_buttons()
  void AddButton(string text, string name)
  void AddButton(Background icon, string name)
  Button CreateButton(string name)
  void OnButtonDetachFromPanel(DetachFromPanelEvent evt)
  void RefreshButtonsStyling()
  void .ctor()
  void .ctor(string label)
  void SetValueWithoutNotify(int newValue)
  void EnsureValueIsValid()
  void RefreshButtonsState()
--------------------------------------------------
Класс: UnityEngine.UIElements.DropdownField
Наследуется от: BaseField`1<string>
Поля:
  List`1<string> m_Choices
  TextElement m_TextElement
  VisualElement m_ArrowElement
  Func`2<string, string> m_FormatSelectedValueCallback
  Func`2<string, string> m_FormatListItemCallback
  Func`1<IGenericMenu> createMenuCallback
  int m_Index
  string ussClassNameBasePopupField
  string textUssClassNameBasePopupField
  string arrowUssClassNameBasePopupField
  string labelUssClassNameBasePopupField
  string inputUssClassNameBasePopupField
  string ussClassNamePopupField
  string labelUssClassNamePopupField
  string inputUssClassNamePopupField
Свойства:
  TextElement textElement
  string text
  Func`2<string, string> formatSelectedValueCallback
  Func`2<string, string> formatListItemCallback
  int index
  List`1<string> choices
  string value
Методы:
  TextElement get_textElement()
  string get_text()
  string GetValueToDisplay()
  string GetListItemToDisplay(string value)
  Func`2<string, string> get_formatSelectedValueCallback()
  void set_formatSelectedValueCallback(Func`2<string, string> value)
  Func`2<string, string> get_formatListItemCallback()
  void set_formatListItemCallback(Func`2<string, string> value)
  int get_index()
  void set_index(int value)
  void .ctor()
  void .ctor(string label)
  void .ctor(List`1<string> choices, string defaultValue, Func`2<string, string> formatSelectedValueCallback, Func`2<string, string> formatListItemCallback)
  void .ctor(string label, List`1<string> choices, string defaultValue, Func`2<string, string> formatSelectedValueCallback, Func`2<string, string> formatListItemCallback)
  void .ctor(List`1<string> choices, int defaultIndex, Func`2<string, string> formatSelectedValueCallback, Func`2<string, string> formatListItemCallback)
  void .ctor(string label, List`1<string> choices, int defaultIndex, Func`2<string, string> formatSelectedValueCallback, Func`2<string, string> formatListItemCallback)
  void AddMenuItems(IGenericMenu menu)
  void ChangeValueFromMenu(string menuItem)
  List`1<string> get_choices()
  void set_choices(List`1<string> value)
  string get_value()
  void set_value(string value)
  void SetValueWithoutNotify(string newValue)
  void ExecuteDefaultActionAtTarget(EventBase evt)
  void ShowMenu()
  void UpdateMixedValueContent()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Foldout
Наследуется от: BindableElement
Поля:
  Toggle m_Toggle
  VisualElement m_Container
  bool m_Value
  string ussClassName
  string toggleUssClassName
  string contentUssClassName
  string inputUssClassName
  string checkmarkUssClassName
  string textUssClassName
  string ussFoldoutDepthClassName
  int ussFoldoutMaxDepth
Свойства:
  VisualElement contentContainer
  string text
  bool value
Методы:
  VisualElement get_contentContainer()
  string get_text()
  void set_text(string value)
  bool get_value()
  void set_value(bool value)
  void SetValueWithoutNotify(bool newValue)
  void OnViewDataReady()
  void .ctor()
  void OnAttachToPanel(AttachToPanelEvent evt)
  void .cctor()
  void <.ctor>b__23_0(ChangeEvent`1<bool> evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.IGenericMenu
Поля:
Свойства:
Методы:
  void AddItem(string itemName, bool isChecked, Action action)
  void AddItem(string itemName, bool isChecked, Action`1<object> action, object data)
  void AddDisabledItem(string itemName, bool isChecked)
  void AddSeparator(string path)
  void DropDown(Rect position, VisualElement targetElement, bool anchored)
--------------------------------------------------
Класс: UnityEngine.UIElements.GenericDropdownMenu
Наследуется от: object
Поля:
  string ussClassName
  string itemUssClassName
  string labelUssClassName
  string containerInnerUssClassName
  string containerOuterUssClassName
  string checkmarkUssClassName
  string separatorUssClassName
  List`1<MenuItem> m_Items
  VisualElement m_MenuContainer
  VisualElement m_OuterContainer
  ScrollView m_ScrollView
  VisualElement m_PanelRootVisualContainer
  VisualElement m_TargetElement
  Rect m_DesiredRect
  KeyboardNavigationManipulator m_NavigationManipulator
  Vector2 m_MousePosition
Свойства:
  List`1<MenuItem> items
  VisualElement menuContainer
  VisualElement contentContainer
Методы:
  List`1<MenuItem> get_items()
  VisualElement get_menuContainer()
  VisualElement get_contentContainer()
  void .ctor()
  void OnAttachToPanel(AttachToPanelEvent evt)
  void OnDetachFromPanel(DetachFromPanelEvent evt)
  void Hide()
  void Apply(KeyboardNavigationOperation op, EventBase sourceEvent)
  bool Apply(KeyboardNavigationOperation op)
  void OnPointerDown(PointerDownEvent evt)
  void OnPointerMove(PointerMoveEvent evt)
  void OnPointerUp(PointerUpEvent evt)
  void OnFocusOut(FocusOutEvent evt)
  void OnParentResized(GeometryChangedEvent evt)
  void UpdateSelection(VisualElement target)
  void ChangeSelectedIndex(int newIndex, int previousIndex)
  int GetSelectedIndex()
  void AddItem(string itemName, bool isChecked, Action action)
  void AddItem(string itemName, bool isChecked, Action`1<object> action, object data)
  void AddDisabledItem(string itemName, bool isChecked)
  void AddSeparator(string path)
  MenuItem AddItem(string itemName, bool isChecked, bool isEnabled, object data)
  void DropDown(Rect position, VisualElement targetElement, bool anchored)
  void OnTargetElementDetachFromPanel(DetachFromPanelEvent evt)
  void OnContainerGeometryChanged(GeometryChangedEvent evt)
  void EnsureVisibilityInParent()
  void .cctor()
  void <Apply>g__UpdateSelectionDown|27_0(int newIndex, <>c__DisplayClass27_0& )
  void <Apply>g__UpdateSelectionUp|27_1(int newIndex, <>c__DisplayClass27_0& )
--------------------------------------------------
Класс: UnityEngine.UIElements.GroupBox
Наследуется от: BindableElement
Поля:
  string ussClassName
  string labelUssClassName
  Label m_TitleLabel
Свойства:
  string text
Методы:
  string get_text()
  void set_text(string value)
  void .ctor()
  void .ctor(string text)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.HelpBoxMessageType
Наследуется от: Enum
Поля:
  int value__
  HelpBoxMessageType None
  HelpBoxMessageType Info
  HelpBoxMessageType Warning
  HelpBoxMessageType Error
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.HelpBox
Наследуется от: VisualElement
Поля:
  string ussClassName
  string labelUssClassName
  string iconUssClassName
  string iconInfoUssClassName
  string iconwarningUssClassName
  string iconErrorUssClassName
  HelpBoxMessageType m_HelpBoxMessageType
  VisualElement m_Icon
  string m_IconClass
  Label m_Label
Свойства:
  string text
  HelpBoxMessageType messageType
Методы:
  string get_text()
  void set_text(string value)
  HelpBoxMessageType get_messageType()
  void set_messageType(HelpBoxMessageType value)
  void .ctor()
  void .ctor(string text, HelpBoxMessageType messageType)
  string GetIconClass(HelpBoxMessageType messageType)
  void UpdateIcon(HelpBoxMessageType messageType)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Image
Наследуется от: VisualElement
Поля:
  ScaleMode m_ScaleMode
  Texture m_Image
  Sprite m_Sprite
  VectorImage m_VectorImage
  Rect m_UV
  Color m_TintColor
  bool m_ImageIsInline
  bool m_ScaleModeIsInline
  bool m_TintColorIsInline
  string ussClassName
  CustomStyleProperty`1<Texture2D> s_ImageProperty
  CustomStyleProperty`1<Sprite> s_SpriteProperty
  CustomStyleProperty`1<VectorImage> s_VectorImageProperty
  CustomStyleProperty`1<string> s_ScaleModeProperty
  CustomStyleProperty`1<Color> s_TintColorProperty
Свойства:
  Texture image
  Sprite sprite
  VectorImage vectorImage
  Rect sourceRect
  Rect uv
  ScaleMode scaleMode
  Color tintColor
Методы:
  Texture get_image()
  void set_image(Texture value)
  Sprite get_sprite()
  void set_sprite(Sprite value)
  VectorImage get_vectorImage()
  void set_vectorImage(VectorImage value)
  Rect get_sourceRect()
  void set_sourceRect(Rect value)
  Rect get_uv()
  void set_uv(Rect value)
  ScaleMode get_scaleMode()
  void set_scaleMode(ScaleMode value)
  Color get_tintColor()
  void set_tintColor(Color value)
  void .ctor()
  Vector2 GetTextureDisplaySize(Texture texture)
  Vector2 GetTextureDisplaySize(Sprite sprite)
  Vector2 DoMeasure(float desiredWidth, MeasureMode widthMode, float desiredHeight, MeasureMode heightMode)
  void OnGenerateVisualContent(MeshGenerationContext mgc)
  void OnCustomStyleResolved(CustomStyleResolvedEvent e)
  void SetScaleMode(ScaleMode mode)
  void CalculateUV(Rect srcRect)
  Rect GetSourceRect()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IMixedValueSupport
Поля:
Свойства:
  bool showMixedValue
Методы:
  bool get_showMixedValue()
  void set_showMixedValue(bool value)
--------------------------------------------------
Класс: UnityEngine.UIElements.INotifyValueChanged`1
Поля:
Свойства:
  T value
Методы:
  T get_value()
  void set_value(T value)
  void SetValueWithoutNotify(T newValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.INotifyValueChangedExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool RegisterValueChangedCallback(INotifyValueChanged`1<T> control, EventCallback`1<ChangeEvent`1<T>> callback)
  bool UnregisterValueChangedCallback(INotifyValueChanged`1<T> control, EventCallback`1<ChangeEvent`1<T>> callback)
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyboardTextEditorEventHandler
Наследуется от: TextEditorEventHandler
Поля:
  int kDragThreshold
  bool m_Changed
  bool m_Dragged
  bool m_DragToPosition
  bool m_SelectAllOnMouseUp
  string m_PreDrawCursorText
  bool m_IsClicking
  Vector2 m_ClickStartPosition
  Event m_ImguiEvent
Свойства:
  bool isClicking
Методы:
  bool get_isClicking()
  void set_isClicking(bool value)
  void .ctor(TextEditorEngine editorEngine, ITextInputField textInputField)
  void ExecuteDefaultActionAtTarget(EventBase evt)
  void OnFocus(FocusEvent _)
  void OnBlur(BlurEvent _)
  void OnMouseDown(MouseDownEvent evt)
  void OnMouseUp(MouseUpEvent evt)
  void OnMouseMove(MouseMoveEvent evt)
  void ProcessDragMove(MouseMoveEvent evt)
  bool MoveDistanceQualifiesForDrag(Vector2 start, Vector2 current)
  void OnKeyDown(KeyDownEvent evt)
  void OnValidateCommandEvent(ValidateCommandEvent evt)
  void OnExecuteCommandEvent(ExecuteCommandEvent evt)
  void PreDrawCursor(string newText)
  void PostDrawCursor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Label
Наследуется от: TextElement
Поля:
  string ussClassName
Свойства:
Методы:
  void .ctor()
  void .ctor(string text)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ListViewReorderMode
Наследуется от: Enum
Поля:
  int value__
  ListViewReorderMode Simple
  ListViewReorderMode Animated
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.ListView
Наследуется от: BaseVerticalCollectionView
Поля:
  bool m_ShowBoundCollectionSize
  bool m_ShowFoldoutHeader
  string m_HeaderTitle
  Action`1<IEnumerable`1<int>> itemsAdded
  Action`1<IEnumerable`1<int>> itemsRemoved
  Label m_EmptyListLabel
  Foldout m_Foldout
  TextField m_ArraySizeField
  VisualElement m_Footer
  Button m_AddButton
  Button m_RemoveButton
  Action`1<IEnumerable`1<int>> m_ItemAddedCallback
  Action`1<IEnumerable`1<int>> m_ItemRemovedCallback
  Action m_ItemsSourceSizeChangedCallback
  ListViewController m_ListViewController
  ListViewReorderMode m_ReorderMode
  string ussClassName
  string itemUssClassName
  string emptyLabelUssClassName
  string reorderableUssClassName
  string reorderableItemUssClassName
  string reorderableItemContainerUssClassName
  string reorderableItemHandleUssClassName
  string reorderableItemHandleBarUssClassName
  string footerUssClassName
  string foldoutHeaderUssClassName
  string arraySizeFieldUssClassName
  string listViewWithHeaderUssClassName
  string listViewWithFooterUssClassName
  string scrollViewWithFooterUssClassName
  string footerAddButtonName
  string footerRemoveButtonName
Свойства:
  bool showBoundCollectionSize
  bool sourceIncludesArraySize
  bool showFoldoutHeader
  string headerTitle
  bool showAddRemoveFooter
  Foldout headerFoldout
  ListViewController viewController
  ListViewReorderMode reorderMode
Методы:
  bool get_showBoundCollectionSize()
  void set_showBoundCollectionSize(bool value)
  bool get_sourceIncludesArraySize()
  bool get_showFoldoutHeader()
  void set_showFoldoutHeader(bool value)
  void SetupArraySizeField()
  string get_headerTitle()
  void set_headerTitle(string value)
  bool get_showAddRemoveFooter()
  void set_showAddRemoveFooter(bool value)
  Foldout get_headerFoldout()
  void EnableFooter(bool enabled)
  void add_itemsAdded(Action`1<IEnumerable`1<int>> value)
  void remove_itemsAdded(Action`1<IEnumerable`1<int>> value)
  void add_itemsRemoved(Action`1<IEnumerable`1<int>> value)
  void remove_itemsRemoved(Action`1<IEnumerable`1<int>> value)
  void AddItems(int itemCount)
  void RemoveItems(List`1<int> indices)
  void OnArraySizeFieldChanged(ChangeEvent`1<string> evt)
  void UpdateArraySizeField()
  void UpdateEmpty()
  void OnAddClicked()
  void OnRemoveClicked()
  ListViewController get_viewController()
  void CreateVirtualizationController()
  void CreateViewController()
  void SetViewController(ListViewController controller)
  void OnItemAdded(IEnumerable`1<int> indices)
  void OnItemsRemoved(IEnumerable`1<int> indices)
  void OnItemsSourceSizeChanged()
  ListViewReorderMode get_reorderMode()
  void set_reorderMode(ListViewReorderMode value)
  ListViewDragger CreateDragger()
  ICollectionDragAndDropController CreateDragAndDropController()
  void .ctor()
  void .ctor(IList itemsSource, float itemHeight, Func`1<VisualElement> makeItem, Action`2<VisualElement, int> bindItem)
  void PostRefresh()
  void .cctor()
  void <OnAddClicked>b__35_0()
--------------------------------------------------
Класс: UnityEngine.UIElements.MinMaxSlider
Наследуется от: BaseField`1<Vector2>
Поля:
  VisualElement <dragElement>k__BackingField
  VisualElement <dragMinThumb>k__BackingField
  VisualElement <dragMaxThumb>k__BackingField
  ClampedDragger`1<float> <clampedDragger>k__BackingField
  Vector2 m_DragElementStartPos
  Vector2 m_ValueStartPos
  Rect m_DragMinThumbRect
  Rect m_DragMaxThumbRect
  DragState m_DragState
  float m_MinLimit
  float m_MaxLimit
  float kDefaultHighValue
  string ussClassName
  string labelUssClassName
  string inputUssClassName
  string trackerUssClassName
  string draggerUssClassName
  string minThumbUssClassName
  string maxThumbUssClassName
Свойства:
  VisualElement dragElement
  VisualElement dragMinThumb
  VisualElement dragMaxThumb
  ClampedDragger`1<float> clampedDragger
  float minValue
  float maxValue
  Vector2 value
  float range
  float lowLimit
  float highLimit
Методы:
  VisualElement get_dragElement()
  void set_dragElement(VisualElement value)
  VisualElement get_dragMinThumb()
  void set_dragMinThumb(VisualElement value)
  VisualElement get_dragMaxThumb()
  void set_dragMaxThumb(VisualElement value)
  ClampedDragger`1<float> get_clampedDragger()
  void set_clampedDragger(ClampedDragger`1<float> value)
  float get_minValue()
  void set_minValue(float value)
  float get_maxValue()
  void set_maxValue(float value)
  Vector2 get_value()
  void set_value(Vector2 value)
  void SetValueWithoutNotify(Vector2 newValue)
  float get_range()
  float get_lowLimit()
  void set_lowLimit(float value)
  float get_highLimit()
  void set_highLimit(float value)
  void .ctor()
  void .ctor(float minValue, float maxValue, float minLimit, float maxLimit)
  void .ctor(string label, float minValue, float maxValue, float minLimit, float maxLimit)
  Vector2 ClampValues(Vector2 valueToClamp)
  void UpdateDragElementPosition(GeometryChangedEvent evt)
  void UpdateDragElementPosition()
  float SliderLerpUnclamped(float a, float b, float interpolant)
  float SliderNormalizeValue(float currentValue, float lowerValue, float higherValue)
  float ComputeValueFromPosition(float positionToConvert)
  void ExecuteDefaultAction(EventBase evt)
  void SetSliderValueFromDrag()
  void SetSliderValueFromClick()
  void ComputeValueDragStateNoThumb(float lowLimitPosition, float highLimitPosition, float dragElementPos)
  void ComputeValueFromDraggingThumb(float dragElementStartPos, float dragElementEndPos)
  void UpdateMixedValueContent()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PopupWindow
Наследуется от: TextElement
Поля:
  VisualElement m_ContentContainer
  string ussClassName
  string contentUssClassName
Свойства:
  VisualElement contentContainer
Методы:
  void .ctor()
  VisualElement get_contentContainer()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.AbstractProgressBar
Наследуется от: BindableElement
Поля:
  string ussClassName
  string containerUssClassName
  string titleUssClassName
  string titleContainerUssClassName
  string progressUssClassName
  string backgroundUssClassName
  VisualElement m_Background
  VisualElement m_Progress
  Label m_Title
  float m_LowValue
  float m_HighValue
  float m_Value
  float k_MinVisibleProgress
Свойства:
  string title
  float lowValue
  float highValue
  float value
Методы:
  string get_title()
  void set_title(string value)
  float get_lowValue()
  void set_lowValue(float value)
  float get_highValue()
  void set_highValue(float value)
  void .ctor()
  void OnGeometryChanged(GeometryChangedEvent e)
  float get_value()
  void set_value(float value)
  void SetValueWithoutNotify(float newValue)
  void SetProgress(float p)
  float CalculateProgressWidth(float width)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ProgressBar
Наследуется от: AbstractProgressBar
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.RadioButton
Наследуется от: BaseBoolField
Поля:
  string ussClassName
  string labelUssClassName
  string inputUssClassName
  string checkmarkBackgroundUssClassName
  string checkmarkUssClassName
  string textUssClassName
  VisualElement m_CheckmarkBackground
Свойства:
  bool value
Методы:
  bool get_value()
  void set_value(bool value)
  void .ctor()
  void .ctor(string label)
  void InitLabel()
  void ToggleValue()
  void SetSelected(bool selected)
  void SetValueWithoutNotify(bool newValue)
  void UpdateCheckmark()
  void UpdateMixedValueContent()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.RadioButtonGroup
Наследуется от: BaseField`1<int>
Поля:
  string ussClassName
  IEnumerable`1<string> m_Choices
  List`1<RadioButton> m_RadioButtons
  EventCallback`1<ChangeEvent`1<bool>> m_RadioButtonValueChangedCallback
Свойства:
  IEnumerable`1<string> choices
Методы:
  IEnumerable`1<string> get_choices()
  void set_choices(IEnumerable`1<string> value)
  void .ctor()
  void .ctor(string label, List`1<string> radioButtonChoices)
  void RadioButtonValueChangedCallback(ChangeEvent`1<bool> evt)
  void SetValueWithoutNotify(int newValue)
  void UpdateRadioButtons()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.RepeatButton
Наследуется от: TextElement
Поля:
  Clickable m_Clickable
  string ussClassName
Свойства:
Методы:
  void .ctor()
  void .ctor(Action clickEvent, long delay, long interval)
  void SetAction(Action clickEvent, long delay, long interval)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Scroller
Наследуется от: VisualElement
Поля:
  Action`1<float> valueChanged
  Slider <slider>k__BackingField
  RepeatButton <lowButton>k__BackingField
  RepeatButton <highButton>k__BackingField
  float kDefaultPageSize
  string ussClassName
  string horizontalVariantUssClassName
  string verticalVariantUssClassName
  string sliderUssClassName
  string lowButtonUssClassName
  string highButtonUssClassName
Свойства:
  Slider slider
  RepeatButton lowButton
  RepeatButton highButton
  float value
  float lowValue
  float highValue
  SliderDirection direction
Методы:
  void add_valueChanged(Action`1<float> value)
  void remove_valueChanged(Action`1<float> value)
  Slider get_slider()
  void set_slider(Slider value)
  RepeatButton get_lowButton()
  void set_lowButton(RepeatButton value)
  RepeatButton get_highButton()
  void set_highButton(RepeatButton value)
  float get_value()
  void set_value(float value)
  float get_lowValue()
  void set_lowValue(float value)
  float get_highValue()
  void set_highValue(float value)
  SliderDirection get_direction()
  void set_direction(SliderDirection value)
  void .ctor()
  void .ctor(float lowValue, float highValue, Action`1<float> valueChanged, SliderDirection direction)
  void Adjust(float factor)
  void OnSliderValueChange(ChangeEvent`1<float> evt)
  void ScrollPageUp()
  void ScrollPageDown()
  void ScrollPageUp(float factor)
  void ScrollPageDown(float factor)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ScrollViewMode
Наследуется от: Enum
Поля:
  int value__
  ScrollViewMode Vertical
  ScrollViewMode Horizontal
  ScrollViewMode VerticalAndHorizontal
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.ScrollerVisibility
Наследуется от: Enum
Поля:
  int value__
  ScrollerVisibility Auto
  ScrollerVisibility AlwaysVisible
  ScrollerVisibility Hidden
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.ScrollView
Наследуется от: VisualElement
Поля:
  ScrollerVisibility m_HorizontalScrollerVisibility
  ScrollerVisibility m_VerticalScrollerVisibility
  float k_SizeThreshold
  VisualElement m_AttachedRootVisualContainer
  float m_SingleLineHeight
  string k_SingleLineHeightPropertyName
  float k_ScrollPageOverlapFactor
  float k_UnsetPageSizeValue
  float k_MouseWheelScrollSizeDefaultValue
  float k_MouseWheelScrollSizeUnset
  bool m_MouseWheelScrollSizeIsInline
  float m_HorizontalPageSize
  float m_VerticalPageSize
  float m_MouseWheelScrollSize
  float k_DefaultScrollDecelerationRate
  float m_ScrollDecelerationRate
  float k_DefaultElasticity
  float m_Elasticity
  TouchScrollBehavior m_TouchScrollBehavior
  NestedInteractionKind m_NestedInteractionKind
  VisualElement <contentViewport>k__BackingField
  Scroller <horizontalScroller>k__BackingField
  Scroller <verticalScroller>k__BackingField
  VisualElement m_ContentContainer
  VisualElement m_ContentAndVerticalScrollContainer
  string ussClassName
  string viewportUssClassName
  string contentAndVerticalScrollUssClassName
  string contentUssClassName
  string hScrollerUssClassName
  string vScrollerUssClassName
  string horizontalVariantUssClassName
  string verticalVariantUssClassName
  string verticalHorizontalVariantUssClassName
  string scrollVariantUssClassName
  ScrollViewMode m_Mode
  int m_ScrollingPointerId
  float k_VelocityLerpTimeFactor
  float ScrollThresholdSquared
  Vector2 m_StartPosition
  Vector2 m_PointerStartPosition
  Vector2 m_Velocity
  Vector2 m_SpringBackVelocity
  Vector2 m_LowBounds
  Vector2 m_HighBounds
  float m_LastVelocityLerpTime
  bool m_StartedMoving
  bool m_TouchStoppedVelocity
  VisualElement m_CapturedTarget
  EventCallback`1<PointerMoveEvent> m_CapturedTargetPointerMoveCallback
  EventCallback`1<PointerUpEvent> m_CapturedTargetPointerUpCallback
  IVisualElementScheduledItem m_PostPointerUpAnimation
Свойства:
  ScrollerVisibility horizontalScrollerVisibility
  ScrollerVisibility verticalScrollerVisibility
  bool showHorizontal
  bool showVertical
  bool needsHorizontal
  bool needsVertical
  bool isVerticalScrollDisplayed
  bool isHorizontalScrollDisplayed
  Vector2 scrollOffset
  float horizontalPageSize
  float verticalPageSize
  float mouseWheelScrollSize
  float scrollableWidth
  float scrollableHeight
  bool hasInertia
  float scrollDecelerationRate
  float elasticity
  TouchScrollBehavior touchScrollBehavior
  NestedInteractionKind nestedInteractionKind
  VisualElement contentViewport
  Scroller horizontalScroller
  Scroller verticalScroller
  VisualElement contentContainer
  ScrollViewMode mode
Методы:
  ScrollerVisibility get_horizontalScrollerVisibility()
  void set_horizontalScrollerVisibility(ScrollerVisibility value)
  ScrollerVisibility get_verticalScrollerVisibility()
  void set_verticalScrollerVisibility(ScrollerVisibility value)
  bool get_showHorizontal()
  void set_showHorizontal(bool value)
  bool get_showVertical()
  void set_showVertical(bool value)
  bool get_needsHorizontal()
  bool get_needsVertical()
  bool get_isVerticalScrollDisplayed()
  bool get_isHorizontalScrollDisplayed()
  Vector2 get_scrollOffset()
  void set_scrollOffset(Vector2 value)
  float get_horizontalPageSize()
  void set_horizontalPageSize(float value)
  float get_verticalPageSize()
  void set_verticalPageSize(float value)
  float get_mouseWheelScrollSize()
  void set_mouseWheelScrollSize(float value)
  float get_scrollableWidth()
  float get_scrollableHeight()
  bool get_hasInertia()
  float get_scrollDecelerationRate()
  void set_scrollDecelerationRate(float value)
  float get_elasticity()
  void set_elasticity(float value)
  TouchScrollBehavior get_touchScrollBehavior()
  void set_touchScrollBehavior(TouchScrollBehavior value)
  NestedInteractionKind get_nestedInteractionKind()
  void set_nestedInteractionKind(NestedInteractionKind value)
  void OnHorizontalScrollDragElementChanged(GeometryChangedEvent evt)
  void OnVerticalScrollDragElementChanged(GeometryChangedEvent evt)
  void UpdateHorizontalSliderPageSize()
  void UpdateVerticalSliderPageSize()
  void UpdateContentViewTransform()
  void ScrollTo(VisualElement child)
  float GetXDeltaOffset(VisualElement child)
  float GetYDeltaOffset(VisualElement child)
  float GetDeltaDistance(float viewMin, float viewMax, float childBoundaryMin, float childBoundaryMax)
  VisualElement get_contentViewport()
  void set_contentViewport(VisualElement value)
  Scroller get_horizontalScroller()
  void set_horizontalScroller(Scroller value)
  Scroller get_verticalScroller()
  void set_verticalScroller(Scroller value)
  VisualElement get_contentContainer()
  void .ctor()
  void .ctor(ScrollViewMode scrollViewMode)
  ScrollViewMode get_mode()
  void set_mode(ScrollViewMode value)
  void SetScrollViewMode(ScrollViewMode mode)
  void OnAttachToPanel(AttachToPanelEvent evt)
  void OnDetachFromPanel(DetachFromPanelEvent evt)
  void OnPointerCapture(PointerCaptureEvent evt)
  void OnPointerCaptureOut(PointerCaptureOutEvent evt)
  void OnGeometryChanged(GeometryChangedEvent evt)
  float ComputeElasticOffset(float deltaPointer, float initialScrollOffset, float lowLimit, float hardLowLimit, float highLimit, float hardHighLimit)
  void ComputeInitialSpringBackVelocity()
  void SpringBack()
  void ApplyScrollInertia()
  void PostPointerUpAnimation()
  void OnPointerDown(PointerDownEvent evt)
  void OnPointerMove(PointerMoveEvent evt)
  void OnPointerCancel(PointerCancelEvent evt)
  void OnPointerUp(PointerUpEvent evt)
  void InitTouchScrolling(Vector2 position)
  TouchScrollingResult ComputeTouchScrolling(Vector2 position)
  bool ApplyTouchScrolling(Vector2 newScrollOffset)
  bool ReleaseScrolling(int pointerId, IEventHandler target)
  void AdjustScrollers()
  void UpdateScrollers(bool displayHorizontal, bool displayVertical)
  void OnScrollersGeometryChanged(GeometryChangedEvent evt)
  void OnScrollWheel(WheelEvent evt)
  void OnRootCustomStyleResolved(CustomStyleResolvedEvent evt)
  void ReadSingleLineHeight()
  void .cctor()
  void <.ctor>b__110_0(float value)
  void <.ctor>b__110_1(float value)
--------------------------------------------------
Класс: UnityEngine.UIElements.Slider
Наследуется от: BaseSlider`1<float>
Поля:
  float kDefaultHighValue
  string ussClassName
  string labelUssClassName
  string inputUssClassName
Свойства:
Методы:
  void .ctor()
  void .ctor(float start, float end, SliderDirection direction, float pageSize)
  void .ctor(string label, float start, float end, SliderDirection direction, float pageSize)
  float SliderLerpUnclamped(float a, float b, float interpolant)
  float SliderNormalizeValue(float currentValue, float lowerValue, float higherValue)
  float SliderRange()
  float ParseStringToValue(string stringValue)
  void ComputeValueFromKey(SliderKey<float> sliderKey, bool isShift)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.SliderInt
Наследуется от: BaseSlider`1<int>
Поля:
  int kDefaultHighValue
  string ussClassName
  string labelUssClassName
  string inputUssClassName
Свойства:
  float pageSize
Методы:
  void .ctor()
  void .ctor(int start, int end, SliderDirection direction, float pageSize)
  void .ctor(string label, int start, int end, SliderDirection direction, float pageSize)
  float get_pageSize()
  void set_pageSize(float value)
  int SliderLerpUnclamped(int a, int b, float interpolant)
  float SliderNormalizeValue(int currentValue, int lowerValue, int higherValue)
  int SliderRange()
  int ParseStringToValue(string stringValue)
  void ComputeValueAndDirectionFromClick(float sliderLength, float dragElementLength, float dragElementPos, float dragElementLastPos)
  void ComputeValueFromKey(SliderKey<int> sliderKey, bool isShift)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextEditorEventHandler
Наследуется от: object
Поля:
  TextEditorEngine <editorEngine>k__BackingField
  ITextInputField <textInputField>k__BackingField
Свойства:
  TextEditorEngine editorEngine
  ITextInputField textInputField
Методы:
  TextEditorEngine get_editorEngine()
  void set_editorEngine(TextEditorEngine value)
  ITextInputField get_textInputField()
  void set_textInputField(ITextInputField value)
  void .ctor(TextEditorEngine editorEngine, ITextInputField textInputField)
  void ExecuteDefaultActionAtTarget(EventBase evt)
  void ExecuteDefaultAction(EventBase evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.TextEditorEngine
Наследуется от: TextEditor
Поля:
  OnDetectFocusChangeFunction m_DetectFocusChangeFunction
  OnIndexChangeFunction m_IndexChangeFunction
Свойства:
  Rect localPosition
Методы:
  void .ctor(OnDetectFocusChangeFunction detectFocusChange, OnIndexChangeFunction indexChangeFunction)
  Rect get_localPosition()
  void OnDetectFocusChange()
  void OnCursorIndexChange()
  void OnSelectIndexChange()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextField
Наследуется от: TextInputBaseField`1<string>
Поля:
  string ussClassName
  string labelUssClassName
  string inputUssClassName
Свойства:
  TextInput textInput
  bool multiline
  string value
Методы:
  TextInput get_textInput()
  bool get_multiline()
  void set_multiline(bool value)
  void SelectRange(int rangeCursorIndex, int selectionIndex)
  void .ctor()
  void .ctor(int maxLength, bool multiline, bool isPasswordField, char maskChar)
  void .ctor(string label)
  void .ctor(string label, int maxLength, bool multiline, bool isPasswordField, char maskChar)
  string get_value()
  void set_value(string value)
  void SetValueWithoutNotify(string newValue)
  void OnViewDataReady()
  string ValueToString(string value)
  string StringToValue(string str)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ITextInputField
Поля:
Свойства:
  bool hasFocus
  bool doubleClickSelectsWord
  bool tripleClickSelectsLine
  bool isReadOnly
  bool isDelayed
  bool isPasswordField
  TextEditorEngine editorEngine
Методы:
  bool get_hasFocus()
  bool get_doubleClickSelectsWord()
  bool get_tripleClickSelectsLine()
  bool get_isReadOnly()
  bool get_isDelayed()
  bool get_isPasswordField()
  TextEditorEngine get_editorEngine()
  void SyncTextEngine()
  bool AcceptCharacter(char c)
  string CullString(string s)
  void UpdateText(string value)
  void UpdateValueFromText()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextInputBaseField`1
Наследуется от: BaseField`1<TValueType>
Поля:
  CustomStyleProperty`1<Color> s_SelectionColorProperty
  CustomStyleProperty`1<Color> s_CursorColorProperty
  int m_VisualInputTabIndex
  TextInputBase<TValueType> m_TextInputBase
  int kMaxLengthNone
  char kMaskCharDefault
  ITextHandle <iTextHandle>k__BackingField
  string ussClassName
  string labelUssClassName
  string inputUssClassName
  string singleLineInputUssClassName
  string multilineInputUssClassName
  string textInputUssName
  Action`1<bool> onIsReadOnlyChanged
Свойства:
  TextInputBase<TValueType> textInputBase
  TextHandle textHandle
  ITextHandle iTextHandle
  string text
  bool isReadOnly
  bool isPasswordField
  Color selectionColor
  Color cursorColor
  int cursorIndex
  int selectIndex
  int maxLength
  bool doubleClickSelectsWord
  bool tripleClickSelectsLine
  bool isDelayed
  char maskChar
  TextEditorEventHandler editorEventHandler
  TextEditorEngine editorEngine
  bool hasFocus
Методы:
  TextInputBase<TValueType> get_textInputBase()
  TextHandle get_textHandle()
  ITextHandle get_iTextHandle()
  void set_iTextHandle(ITextHandle value)
  string get_text()
  void set_text(string value)
  void add_onIsReadOnlyChanged(Action`1<bool> value)
  void remove_onIsReadOnlyChanged(Action`1<bool> value)
  bool get_isReadOnly()
  void set_isReadOnly(bool value)
  bool get_isPasswordField()
  void set_isPasswordField(bool value)
  Color get_selectionColor()
  Color get_cursorColor()
  int get_cursorIndex()
  int get_selectIndex()
  int get_maxLength()
  void set_maxLength(int value)
  bool get_doubleClickSelectsWord()
  void set_doubleClickSelectsWord(bool value)
  bool get_tripleClickSelectsLine()
  void set_tripleClickSelectsLine(bool value)
  bool get_isDelayed()
  void set_isDelayed(bool value)
  char get_maskChar()
  void set_maskChar(char value)
  Vector2 MeasureTextSize(string textToMeasure, float width, MeasureMode widthMode, float height, MeasureMode heightMode)
  TextEditorEventHandler get_editorEventHandler()
  TextEditorEngine get_editorEngine()
  bool get_hasFocus()
  string ValueToString(TValueType value)
  TValueType StringToValue(string str)
  void SelectAll()
  void SyncTextEngine()
  void DrawWithTextSelectionAndCursor(MeshGenerationContext mgc, string newText)
  void .ctor(int maxLength, char maskChar, TextInputBase<TValueType> textInputBase)
  void .ctor(string label, int maxLength, char maskChar, TextInputBase<TValueType> textInputBase)
  void OnAttachToPanel(AttachToPanelEvent e)
  void OnFieldCustomStyleResolved(CustomStyleResolvedEvent e)
  void ExecuteDefaultActionAtTarget(EventBase evt)
  void UpdateMixedValueContent()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Toggle
Наследуется от: BaseBoolField
Поля:
  string ussClassName
  string labelUssClassName
  string inputUssClassName
  string noTextVariantUssClassName
  string checkmarkUssClassName
  string textUssClassName
Свойства:
Методы:
  void .ctor()
  void .ctor(string label)
  void InitLabel()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TouchScreenTextEditorEventHandler
Наследуется от: TextEditorEventHandler
Поля:
  IVisualElementScheduledItem m_TouchKeyboardPoller
  VisualElement m_LastPointerDownTarget
Свойства:
Методы:
  void .ctor(TextEditorEngine editorEngine, ITextInputField textInputField)
  void PollTouchScreenKeyboard()
  void DoPollTouchScreenKeyboard()
  void ExecuteDefaultActionAtTarget(EventBase evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeView
Наследуется от: VisualElement
Поля:
  string s_ListViewName
  string s_ItemName
  string s_ItemToggleName
  string s_ItemIndentsContainerName
  string s_ItemIndentName
  string s_ItemContentContainerName
  Func`1<VisualElement> m_MakeItem
  Action`1<IEnumerable`1<ITreeViewItem>> onItemsChosen
  Action`1<IEnumerable`1<ITreeViewItem>> onSelectionChange
  List`1<ITreeViewItem> m_SelectedItems
  Action`2<VisualElement, ITreeViewItem> m_BindItem
  Action`2<VisualElement, ITreeViewItem> <unbindItem>k__BackingField
  IList`1<ITreeViewItem> m_RootItems
  List`1<int> m_ExpandedItemIds
  List`1<TreeViewItemWrapper> m_ItemWrappers
  ListView m_ListView
  ScrollView m_ScrollView
Свойства:
  Func`1<VisualElement> makeItem
  ITreeViewItem selectedItem
  IEnumerable`1<ITreeViewItem> selectedItems
  Action`2<VisualElement, ITreeViewItem> bindItem
  Action`2<VisualElement, ITreeViewItem> unbindItem
  IList`1<ITreeViewItem> rootItems
  IEnumerable`1<ITreeViewItem> items
  float resolvedItemHeight
  int itemHeight
  bool horizontalScrollingEnabled
  bool showBorder
  SelectionType selectionType
  AlternatingRowBackground showAlternatingRowBackgrounds
Методы:
  Func`1<VisualElement> get_makeItem()
  void set_makeItem(Func`1<VisualElement> value)
  void add_onItemsChosen(Action`1<IEnumerable`1<ITreeViewItem>> value)
  void remove_onItemsChosen(Action`1<IEnumerable`1<ITreeViewItem>> value)
  void add_onSelectionChange(Action`1<IEnumerable`1<ITreeViewItem>> value)
  void remove_onSelectionChange(Action`1<IEnumerable`1<ITreeViewItem>> value)
  ITreeViewItem get_selectedItem()
  IEnumerable`1<ITreeViewItem> get_selectedItems()
  Action`2<VisualElement, ITreeViewItem> get_bindItem()
  void set_bindItem(Action`2<VisualElement, ITreeViewItem> value)
  Action`2<VisualElement, ITreeViewItem> get_unbindItem()
  void set_unbindItem(Action`2<VisualElement, ITreeViewItem> value)
  IList`1<ITreeViewItem> get_rootItems()
  void set_rootItems(IList`1<ITreeViewItem> value)
  IEnumerable`1<ITreeViewItem> get_items()
  float get_resolvedItemHeight()
  int get_itemHeight()
  void set_itemHeight(int value)
  bool get_horizontalScrollingEnabled()
  void set_horizontalScrollingEnabled(bool value)
  bool get_showBorder()
  void set_showBorder(bool value)
  SelectionType get_selectionType()
  void set_selectionType(SelectionType value)
  AlternatingRowBackground get_showAlternatingRowBackgrounds()
  void set_showAlternatingRowBackgrounds(AlternatingRowBackground value)
  void .ctor()
  void .ctor(IList`1<ITreeViewItem> items, int fixedItemHeight, Func`1<VisualElement> makeItem, Action`2<VisualElement, ITreeViewItem> bindItem)
  void RefreshItems()
  void Rebuild()
  void OnViewDataReady()
  IEnumerable`1<ITreeViewItem> GetAllItems(IEnumerable`1<ITreeViewItem> rootItems)
  void OnKeyDown(KeyDownEvent evt)
  void SetSelection(int id)
  void SetSelection(IEnumerable`1<int> ids)
  void SetSelectionWithoutNotify(IEnumerable`1<int> ids)
  void SetSelectionInternal(IEnumerable`1<int> ids, bool sendNotification)
  void AddToSelection(int id)
  void RemoveFromSelection(int id)
  int GetItemIndex(int id, bool expand)
  void ClearSelection()
  void ScrollTo(VisualElement visualElement)
  void ScrollToItem(int id)
  void CopyExpandedStates(ITreeViewItem source, ITreeViewItem target)
  bool IsExpanded(int id)
  void CollapseItem(int id)
  void ExpandItem(int id)
  ITreeViewItem FindItem(int id)
  void ListViewRefresh()
  void OnItemsChosen(IEnumerable`1<object> chosenItems)
  void OnSelectionChange(IEnumerable`1<object> selectedListItems)
  void OnTreeViewMouseUp(MouseUpEvent evt)
  void OnItemMouseUp(MouseUpEvent evt)
  VisualElement MakeTreeItem()
  void UnbindTreeItem(VisualElement element, int index)
  void BindTreeItem(VisualElement element, int index)
  int GetItemId(int index)
  bool IsExpandedByIndex(int index)
  void CollapseItemByIndex(int index)
  void ExpandItemByIndex(int index)
  void ToggleExpandedState(ChangeEvent`1<bool> evt)
  void CreateWrappers(IEnumerable`1<ITreeViewItem> treeViewItems, int depth, List`1& wrappers)
  void RegenerateWrappers()
  void OnCustomStyleResolved(CustomStyleResolvedEvent e)
  void .cctor()
  int <SetSelectionInternal>b__69_0(int id)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeData`1
Наследуется от: ValueType
Поля:
  IList`1<int> m_RootItemIds
  Dictionary`2<int, TreeViewItemData`1<T>> m_Tree
  Dictionary`2<int, int> m_ParentIds
  Dictionary`2<int, List`1<int>> m_ChildrenIds
Свойства:
  IEnumerable`1<int> rootItemIds
Методы:
  IEnumerable`1<int> get_rootItemIds()
  void .ctor(IList`1<TreeViewItemData`1<T>> rootItems)
  TreeViewItemData`1<T> GetDataForId(int id)
  int GetParentId(int id)
  void AddItem(TreeViewItemData`1<T> item, int parentId, int childIndex)
  bool TryRemove(int id)
  void Move(int id, int newParentId, int childIndex)
  void AddItemToParent(TreeViewItemData`1<T> item, int parentId, int childIndex)
  void RemoveFromParent(int id, int parentId)
  void UpdateParentTree(TreeViewItemData`1<T> current)
  bool TryRemoveChildrenIds(int id)
  void RefreshTree(IList`1<TreeViewItemData`1<T>> rootItems)
  void BuildTree(IEnumerable`1<TreeViewItemData`1<T>> items, bool isRoot)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeItem
Наследуется от: ValueType
Поля:
  int invalidId
  int <id>k__BackingField
  int <parentId>k__BackingField
  IEnumerable`1<int> <childrenIds>k__BackingField
Свойства:
  int id
  int parentId
  IEnumerable`1<int> childrenIds
  bool hasChildren
Методы:
  int get_id()
  int get_parentId()
  IEnumerable`1<int> get_childrenIds()
  bool get_hasChildren()
  void .ctor(int id, int parentId, IEnumerable`1<int> childrenIds)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeViewItemWrapper
Наследуется от: ValueType
Поля:
  TreeItem item
  int depth
Свойства:
  int id
  int parentId
  IEnumerable`1<int> childrenIds
  bool hasChildren
Методы:
  int get_id()
  int get_parentId()
  IEnumerable`1<int> get_childrenIds()
  bool get_hasChildren()
  void .ctor(TreeItem item, int depth)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeViewItemData`1
Наследуется от: ValueType
Поля:
  int <id>k__BackingField
  T m_Data
  IList`1<TreeViewItemData`1<T>> m_Children
Свойства:
  int id
  T data
  IEnumerable`1<TreeViewItemData`1<T>> children
  bool hasChildren
Методы:
  int get_id()
  T get_data()
  IEnumerable`1<TreeViewItemData`1<T>> get_children()
  bool get_hasChildren()
  void .ctor(int id, T data, List`1<TreeViewItemData`1<T>> children)
  void AddChild(TreeViewItemData`1<T> child)
  void AddChildren(IList`1<TreeViewItemData`1<T>> children)
  void InsertChild(TreeViewItemData`1<T> child, int index)
  void RemoveChild(int childId)
  int GetChildIndex(int itemId)
  bool HasChildRecursive(int childId)
  void ReplaceChild(TreeViewItemData`1<T> newChild)
--------------------------------------------------
Класс: UnityEngine.UIElements.TwoPaneSplitView
Наследуется от: VisualElement
Поля:
  string s_UssClassName
  string s_ContentContainerClassName
  string s_HandleDragLineClassName
  string s_HandleDragLineVerticalClassName
  string s_HandleDragLineHorizontalClassName
  string s_HandleDragLineAnchorClassName
  string s_HandleDragLineAnchorVerticalClassName
  string s_HandleDragLineAnchorHorizontalClassName
  string s_VerticalClassName
  string s_HorizontalClassName
  VisualElement m_LeftPane
  VisualElement m_RightPane
  VisualElement m_FixedPane
  VisualElement m_FlexedPane
  float m_FixedPaneDimension
  VisualElement m_DragLine
  VisualElement m_DragLineAnchor
  bool m_CollapseMode
  VisualElement m_Content
  TwoPaneSplitViewOrientation m_Orientation
  int m_FixedPaneIndex
  float m_FixedPaneInitialDimension
  TwoPaneSplitViewResizer m_Resizer
Свойства:
  VisualElement fixedPane
  VisualElement flexedPane
  int fixedPaneIndex
  float fixedPaneInitialDimension
  TwoPaneSplitViewOrientation orientation
  float fixedPaneDimension
  VisualElement contentContainer
Методы:
  VisualElement get_fixedPane()
  VisualElement get_flexedPane()
  int get_fixedPaneIndex()
  void set_fixedPaneIndex(int value)
  float get_fixedPaneInitialDimension()
  void set_fixedPaneInitialDimension(float value)
  TwoPaneSplitViewOrientation get_orientation()
  void set_orientation(TwoPaneSplitViewOrientation value)
  float get_fixedPaneDimension()
  void set_fixedPaneDimension(float value)
  void .ctor()
  void .ctor(int fixedPaneIndex, float fixedPaneStartDimension, TwoPaneSplitViewOrientation orientation)
  void CollapseChild(int index)
  void UnCollapse()
  void Init(int fixedPaneIndex, float fixedPaneInitialDimension, TwoPaneSplitViewOrientation orientation)
  void OnPostDisplaySetup(GeometryChangedEvent evt)
  void PostDisplaySetup()
  void OnSizeChange(GeometryChangedEvent evt)
  void OnSizeChange()
  VisualElement get_contentContainer()
  void OnViewDataReady()
  void SetDragLineOffset(float offset)
  void SetFixedPaneDimension(float dimension)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TwoPaneSplitViewOrientation
Наследуется от: Enum
Поля:
  int value__
  TwoPaneSplitViewOrientation Horizontal
  TwoPaneSplitViewOrientation Vertical
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.TwoPaneSplitViewResizer
Наследуется от: PointerManipulator
Поля:
  Vector3 m_Start
  bool m_Active
  TwoPaneSplitView m_SplitView
  int m_Direction
  TwoPaneSplitViewOrientation m_Orientation
Свойства:
  VisualElement fixedPane
  VisualElement flexedPane
  float fixedPaneMinDimension
  float flexedPaneMinDimension
Методы:
  VisualElement get_fixedPane()
  VisualElement get_flexedPane()
  float get_fixedPaneMinDimension()
  float get_flexedPaneMinDimension()
  void .ctor(TwoPaneSplitView splitView, int dir, TwoPaneSplitViewOrientation orientation)
  void RegisterCallbacksOnTarget()
  void UnregisterCallbacksFromTarget()
  void ApplyDelta(float delta)
  void OnPointerDown(PointerDownEvent e)
  void OnPointerMove(PointerMoveEvent e)
  void OnPointerUp(PointerUpEvent e)
--------------------------------------------------
Класс: UnityEngine.UIElements.InternalTreeView
Наследуется от: VisualElement
Поля:
  string s_ListViewName
  string s_ItemToggleName
  string s_ItemIndentsContainerName
  string s_ItemIndentName
  string s_ItemContentContainerName
  string itemUssClassName
  Func`1<VisualElement> m_MakeItem
  Action`1<IEnumerable`1<ITreeViewItem>> onItemsChosen
  Action`1<IEnumerable`1<ITreeViewItem>> onSelectionChange
  List`1<ITreeViewItem> m_SelectedItems
  Action`2<VisualElement, ITreeViewItem> m_BindItem
  Action`2<VisualElement, ITreeViewItem> <unbindItem>k__BackingField
  IList`1<ITreeViewItem> m_RootItems
  List`1<int> m_ExpandedItemIds
  List`1<TreeViewItemWrapper> m_ItemWrappers
  ListView m_ListView
  ScrollView m_ScrollView
Свойства:
  Func`1<VisualElement> makeItem
  ITreeViewItem selectedItem
  IEnumerable`1<ITreeViewItem> selectedItems
  Action`2<VisualElement, ITreeViewItem> bindItem
  Action`2<VisualElement, ITreeViewItem> unbindItem
  IList`1<ITreeViewItem> rootItems
  IEnumerable`1<ITreeViewItem> items
  float resolvedItemHeight
  int itemHeight
  bool horizontalScrollingEnabled
  bool showBorder
  SelectionType selectionType
  AlternatingRowBackground showAlternatingRowBackgrounds
Методы:
  Func`1<VisualElement> get_makeItem()
  void set_makeItem(Func`1<VisualElement> value)
  void add_onItemsChosen(Action`1<IEnumerable`1<ITreeViewItem>> value)
  void remove_onItemsChosen(Action`1<IEnumerable`1<ITreeViewItem>> value)
  void add_onSelectionChange(Action`1<IEnumerable`1<ITreeViewItem>> value)
  void remove_onSelectionChange(Action`1<IEnumerable`1<ITreeViewItem>> value)
  ITreeViewItem get_selectedItem()
  IEnumerable`1<ITreeViewItem> get_selectedItems()
  Action`2<VisualElement, ITreeViewItem> get_bindItem()
  void set_bindItem(Action`2<VisualElement, ITreeViewItem> value)
  Action`2<VisualElement, ITreeViewItem> get_unbindItem()
  void set_unbindItem(Action`2<VisualElement, ITreeViewItem> value)
  IList`1<ITreeViewItem> get_rootItems()
  void set_rootItems(IList`1<ITreeViewItem> value)
  IEnumerable`1<ITreeViewItem> get_items()
  float get_resolvedItemHeight()
  int get_itemHeight()
  void set_itemHeight(int value)
  bool get_horizontalScrollingEnabled()
  void set_horizontalScrollingEnabled(bool value)
  bool get_showBorder()
  void set_showBorder(bool value)
  SelectionType get_selectionType()
  void set_selectionType(SelectionType value)
  AlternatingRowBackground get_showAlternatingRowBackgrounds()
  void set_showAlternatingRowBackgrounds(AlternatingRowBackground value)
  void .ctor()
  void .ctor(IList`1<ITreeViewItem> items, int fixedItemHeight, Func`1<VisualElement> makeItem, Action`2<VisualElement, ITreeViewItem> bindItem)
  void RefreshItems()
  void Rebuild()
  void OnViewDataReady()
  IEnumerable`1<ITreeViewItem> GetAllItems(IEnumerable`1<ITreeViewItem> rootItems)
  void OnKeyDown(KeyDownEvent evt)
  void SetSelection(int id)
  void SetSelection(IEnumerable`1<int> ids)
  void SetSelectionWithoutNotify(IEnumerable`1<int> ids)
  void SetSelectionInternal(IEnumerable`1<int> ids, bool sendNotification)
  void SetSelectionByIndices(IEnumerable`1<int> indexes, bool sendNotification)
  void AddToSelection(int id)
  void RemoveFromSelection(int id)
  int GetItemIndex(int id, bool expand)
  void ClearSelection()
  void ScrollTo(VisualElement visualElement)
  void ScrollToItem(int id)
  void CopyExpandedStates(ITreeViewItem source, ITreeViewItem target)
  bool IsExpanded(int id)
  void CollapseItem(int id)
  void ExpandItem(int id)
  ITreeViewItem FindItem(int id)
  void ListViewRefresh()
  void OnItemsChosen(IEnumerable`1<object> chosenItems)
  void OnSelectionChange(IEnumerable`1<object> selectedListItems)
  void OnTreeViewMouseUp(MouseUpEvent evt)
  void OnItemMouseUp(MouseUpEvent evt)
  VisualElement MakeTreeItem()
  void UnbindTreeItem(VisualElement element, int index)
  void BindTreeItem(VisualElement element, int index)
  int GetItemId(int index)
  bool IsExpandedByIndex(int index)
  void CollapseItemByIndex(int index)
  void ExpandItemByIndex(int index)
  void ToggleExpandedState(ChangeEvent`1<bool> evt)
  void CreateWrappers(IEnumerable`1<ITreeViewItem> treeViewItems, int depth, List`1& wrappers)
  void CollapseAll()
  void RegenerateWrappers()
  void OnCustomStyleResolved(CustomStyleResolvedEvent e)
  void .cctor()
  int <SetSelectionInternal>b__69_0(int id)
--------------------------------------------------
Класс: UnityEngine.UIElements.ITreeViewItem
Поля:
Свойства:
  int id
  ITreeViewItem parent
  IEnumerable`1<ITreeViewItem> children
  bool hasChildren
Методы:
  int get_id()
  ITreeViewItem get_parent()
  IEnumerable`1<ITreeViewItem> get_children()
  bool get_hasChildren()
  void AddChild(ITreeViewItem child)
  void AddChildren(IList`1<ITreeViewItem> children)
  void RemoveChild(ITreeViewItem child)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeViewItem`1
Наследуется от: object
Поля:
  int <id>k__BackingField
  TreeViewItem`1<T> m_Parent
  List`1<ITreeViewItem> m_Children
  T <data>k__BackingField
Свойства:
  int id
  ITreeViewItem parent
  IEnumerable`1<ITreeViewItem> children
  bool hasChildren
  T data
Методы:
  int get_id()
  void set_id(int value)
  ITreeViewItem get_parent()
  IEnumerable`1<ITreeViewItem> get_children()
  bool get_hasChildren()
  T get_data()
  void set_data(T value)
  void .ctor(int id, T data, List`1<TreeViewItem`1<T>> children)
  void AddChild(ITreeViewItem child)
  void AddChildren(IList`1<ITreeViewItem> children)
  void RemoveChild(ITreeViewItem child)
--------------------------------------------------
Класс: UnityEngine.UIElements.BaseReorderableDragAndDropController
Наследуется от: object
Поля:
  BaseVerticalCollectionView m_View
  List`1<int> m_SelectedIndices
  bool <enableReordering>k__BackingField
Свойства:
  bool enableReordering
Методы:
  void .ctor(BaseVerticalCollectionView view)
  bool get_enableReordering()
  void set_enableReordering(bool value)
  bool CanStartDrag(IEnumerable`1<int> itemIndices)
  StartDragArgs SetupDragAndDrop(IEnumerable`1<int> itemIndices, bool skipText)
  DragVisualMode HandleDragAndDrop(IListDragAndDropArgs args)
  void OnDrop(IListDragAndDropArgs args)
--------------------------------------------------
Класс: UnityEngine.UIElements.DragAndDropUtility
Наследуется от: object
Поля:
  Func`1<IDragAndDrop> s_MakeClientFunc
  IDragAndDrop s_DragAndDrop
Свойства:
  IDragAndDrop dragAndDrop
Методы:
  IDragAndDrop get_dragAndDrop()
  void RegisterMakeClientFunc(Func`1<IDragAndDrop> makeClient)
--------------------------------------------------
Класс: UnityEngine.UIElements.DefaultDragAndDropClient
Наследуется от: object
Поля:
  StartDragArgs m_StartDragArgs
Свойства:
  object userData
  IEnumerable`1<Object> unityObjectReferences
  IDragAndDropData data
Методы:
  object get_userData()
  IEnumerable`1<Object> get_unityObjectReferences()
  void StartDrag(StartDragArgs args)
  void AcceptDrag()
  void SetVisualMode(DragVisualMode visualMode)
  IDragAndDropData get_data()
  object GetGenericData(string key)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DragEventsProcessor
Наследуется от: object
Поля:
  bool m_IsRegistered
  DragState m_DragState
  Vector3 m_Start
  VisualElement m_Target
  int k_DistanceToActivation
  DefaultDragAndDropClient dragAndDropClient
Свойства:
  bool isRegistered
  bool supportsDragEvents
  bool useDragEvents
  bool isEditorContext
Методы:
  bool get_isRegistered()
  bool get_supportsDragEvents()
  bool get_useDragEvents()
  bool get_isEditorContext()
  void .ctor(VisualElement target)
  void RegisterCallbacksFromTarget(AttachToPanelEvent evt)
  void RegisterCallbacksFromTarget()
  void UnregisterCallbacksFromTarget(DetachFromPanelEvent evt)
  void UnregisterCallbacksFromTarget(bool unregisterPanelEvents)
  bool CanStartDrag(Vector3 pointerPosition)
  StartDragArgs StartDrag(Vector3 pointerPosition)
  DragVisualMode UpdateDrag(Vector3 pointerPosition)
  void OnDrop(Vector3 pointerPosition)
  void ClearDragAndDropUI()
  void OnPointerDownEvent(PointerDownEvent evt)
  void OnPointerUpEvent(PointerUpEvent evt)
  void OnPointerLeaveEvent(PointerLeaveEvent evt)
  void OnPointerCancelEvent(PointerCancelEvent evt)
  void OnPointerMoveEvent(PointerMoveEvent evt)
--------------------------------------------------
Класс: UnityEngine.UIElements.ICollectionDragAndDropController
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IDragAndDrop
Поля:
Свойства:
  IDragAndDropData data
Методы:
  void StartDrag(StartDragArgs args)
  void AcceptDrag()
  void SetVisualMode(DragVisualMode visualMode)
  IDragAndDropData get_data()
--------------------------------------------------
Класс: UnityEngine.UIElements.IDragAndDropData
Поля:
Свойства:
  object userData
  IEnumerable`1<Object> unityObjectReferences
Методы:
  object GetGenericData(string key)
  object get_userData()
  IEnumerable`1<Object> get_unityObjectReferences()
--------------------------------------------------
Класс: UnityEngine.UIElements.IDragAndDropController`1
Поля:
Свойства:
Методы:
  bool CanStartDrag(IEnumerable`1<int> itemIndices)
  StartDragArgs SetupDragAndDrop(IEnumerable`1<int> itemIndices, bool skipText)
  DragVisualMode HandleDragAndDrop(TArgs args)
  void OnDrop(TArgs args)
--------------------------------------------------
Класс: UnityEngine.UIElements.DragVisualMode
Наследуется от: Enum
Поля:
  int value__
  DragVisualMode None
  DragVisualMode Copy
  DragVisualMode Move
  DragVisualMode Rejected
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StartDragArgs
Наследуется от: object
Поля:
  string <title>k__BackingField
  object <userData>k__BackingField
  Hashtable m_GenericData
  IEnumerable`1<Object> <unityObjectReferences>k__BackingField
Свойства:
  string title
  object userData
  Hashtable genericData
  IEnumerable`1<Object> unityObjectReferences
Методы:
  string get_title()
  object get_userData()
  Hashtable get_genericData()
  IEnumerable`1<Object> get_unityObjectReferences()
  void set_unityObjectReferences(IEnumerable`1<Object> value)
  void .ctor()
  void .ctor(string title, object userData)
  void SetGenericData(string key, object data)
  void SetUnityObjectReferences(IEnumerable`1<Object> references)
--------------------------------------------------
Класс: UnityEngine.UIElements.IListDragAndDropArgs
Поля:
Свойства:
  object target
  int insertAtIndex
  IDragAndDropData dragAndDropData
  DragAndDropPosition dragAndDropPosition
Методы:
  object get_target()
  int get_insertAtIndex()
  IDragAndDropData get_dragAndDropData()
  DragAndDropPosition get_dragAndDropPosition()
--------------------------------------------------
Класс: UnityEngine.UIElements.ListDragAndDropArgs
Наследуется от: ValueType
Поля:
  object <target>k__BackingField
  int <insertAtIndex>k__BackingField
  DragAndDropPosition <dragAndDropPosition>k__BackingField
  IDragAndDropData <dragAndDropData>k__BackingField
Свойства:
  object target
  int insertAtIndex
  DragAndDropPosition dragAndDropPosition
  IDragAndDropData dragAndDropData
Методы:
  object get_target()
  void set_target(object value)
  int get_insertAtIndex()
  void set_insertAtIndex(int value)
  DragAndDropPosition get_dragAndDropPosition()
  void set_dragAndDropPosition(DragAndDropPosition value)
  IDragAndDropData get_dragAndDropData()
  void set_dragAndDropData(IDragAndDropData value)
--------------------------------------------------
Класс: UnityEngine.UIElements.DragAndDropPosition
Наследуется от: Enum
Поля:
  int value__
  DragAndDropPosition OverItem
  DragAndDropPosition BetweenItems
  DragAndDropPosition OutsideItems
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IReorderable
Поля:
Свойства:
  bool enableReordering
Методы:
  bool get_enableReordering()
  void set_enableReordering(bool value)
--------------------------------------------------
Класс: UnityEngine.UIElements.ListViewDragger
Наследуется от: DragEventsProcessor
Поля:
  DragPosition m_LastDragPosition
  VisualElement m_DragHoverBar
  int k_AutoScrollAreaSize
  int k_BetweenElementsAreaSize
  int k_PanSpeed
  int k_DragHoverBarHeight
  ICollectionDragAndDropController <dragAndDropController>k__BackingField
Свойства:
  BaseVerticalCollectionView targetListView
  ScrollView targetScrollView
  ICollectionDragAndDropController dragAndDropController
Методы:
  BaseVerticalCollectionView get_targetListView()
  ScrollView get_targetScrollView()
  ICollectionDragAndDropController get_dragAndDropController()
  void set_dragAndDropController(ICollectionDragAndDropController value)
  void .ctor(BaseVerticalCollectionView listView)
  bool CanStartDrag(Vector3 pointerPosition)
  StartDragArgs StartDrag(Vector3 pointerPosition)
  DragVisualMode UpdateDrag(Vector3 pointerPosition)
  DragVisualMode GetVisualMode(Vector3 pointerPosition, DragPosition& dragPosition)
  void OnDrop(Vector3 pointerPosition)
  void HandleDragAndScroll(Vector2 pointerPosition)
  void ApplyDragAndDropUI(DragPosition dragPosition)
  bool TryGetDragPosition(Vector2 pointerPosition, DragPosition& dragPosition)
  ListDragAndDropArgs MakeDragAndDropArgs(DragPosition dragPosition)
  void PlaceHoverBarAtElement(VisualElement element)
  void PlaceHoverBarAt(float top)
  void ClearDragAndDropUI()
  ReusableCollectionItem GetRecycledItem(Vector3 pointerPosition)
  void <ApplyDragAndDropUI>b__22_0(GeometryChangedEvent e)
--------------------------------------------------
Класс: UnityEngine.UIElements.ListViewDraggerExtension
Наследуется от: object
Поля:
Свойства:
Методы:
  ReusableCollectionItem GetRecycledItemFromIndex(BaseVerticalCollectionView listView, int index)
--------------------------------------------------
Класс: UnityEngine.UIElements.ListViewDraggerAnimated
Наследуется от: ListViewDragger
Поля:
  int m_DragStartIndex
  int m_CurrentIndex
  float m_SelectionHeight
  float m_LocalOffsetOnStart
  Vector3 m_CurrentPointerPosition
  ReusableCollectionItem m_Item
  ReusableCollectionItem m_OffsetItem
Свойства:
  bool isDragging
  ReusableCollectionItem draggedItem
  bool supportsDragEvents
Методы:
  bool get_isDragging()
  ReusableCollectionItem get_draggedItem()
  bool get_supportsDragEvents()
  void .ctor(BaseVerticalCollectionView listView)
  StartDragArgs StartDrag(Vector3 pointerPosition)
  DragVisualMode UpdateDrag(Vector3 pointerPosition)
  void Animate(ReusableCollectionItem element, float paddingTop)
  void OnDrop(Vector3 pointerPosition)
  void ClearDragAndDropUI()
  bool TryGetDragPosition(Vector2 pointerPosition, DragPosition& dragPosition)
--------------------------------------------------
Класс: UnityEngine.UIElements.ListViewReorderableDragAndDropController
Наследуется от: BaseReorderableDragAndDropController
Поля:
  ListView m_ListView
Свойства:
Методы:
  void .ctor(ListView view)
  DragVisualMode HandleDragAndDrop(IListDragAndDropArgs args)
  void OnDrop(IListDragAndDropArgs args)
--------------------------------------------------
Класс: UnityEngine.UIElements.TreeViewReorderableDragAndDropController
Наследуется от: BaseReorderableDragAndDropController
Поля:
  TreeView m_TreeView
Свойства:
Методы:
  void .ctor(TreeView view)
  DragVisualMode HandleDragAndDrop(IListDragAndDropArgs args)
  void OnDrop(IListDragAndDropArgs args)
--------------------------------------------------
Класс: UnityEngine.UIElements.IPointerCaptureEvent
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IPointerCaptureEventInternal
Поля:
Свойства:
  int pointerId
Методы:
  int get_pointerId()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerCaptureEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  IEventHandler <relatedTarget>k__BackingField
  int <pointerId>k__BackingField
Свойства:
  IEventHandler relatedTarget
  int pointerId
Методы:
  IEventHandler get_relatedTarget()
  void set_relatedTarget(IEventHandler value)
  int get_pointerId()
  void set_pointerId(int value)
  void Init()
  void LocalInit()
  T GetPooled(IEventHandler target, IEventHandler relatedTarget, int pointerId)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerCaptureOutEvent
Наследуется от: PointerCaptureEventBase`1<PointerCaptureOutEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerCaptureEvent
Наследуется от: PointerCaptureEventBase`1<PointerCaptureEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IMouseCaptureEvent
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseCaptureEventBase`1
Наследуется от: PointerCaptureEventBase`1<T>
Поля:
Свойства:
  IEventHandler relatedTarget
Методы:
  IEventHandler get_relatedTarget()
  T GetPooled(IEventHandler target, IEventHandler relatedTarget)
  void Init()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseCaptureOutEvent
Наследуется от: MouseCaptureEventBase`1<MouseCaptureOutEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseCaptureEvent
Наследуется от: MouseCaptureEventBase`1<MouseCaptureEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IChangeEvent
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.ChangeEvent`1
Наследуется от: EventBase`1<ChangeEvent`1<T>>
Поля:
  T <previousValue>k__BackingField
  T <newValue>k__BackingField
Свойства:
  T previousValue
  T newValue
Методы:
  T get_previousValue()
  void set_previousValue(T value)
  T get_newValue()
  void set_newValue(T value)
  void Init()
  void LocalInit()
  ChangeEvent`1<T> GetPooled(T previousValue, T newValue)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.CommandEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ICommandEvent
Поля:
Свойства:
  string commandName
Методы:
  string get_commandName()
--------------------------------------------------
Класс: UnityEngine.UIElements.CommandEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  string m_CommandName
Свойства:
  string commandName
Методы:
  string get_commandName()
  void set_commandName(string value)
  void Init()
  void LocalInit()
  T GetPooled(Event systemEvent)
  T GetPooled(string commandName)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ValidateCommandEvent
Наследуется от: CommandEventBase`1<ValidateCommandEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ExecuteCommandEvent
Наследуется от: CommandEventBase`1<ExecuteCommandEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DebuggerEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void PostDispatch(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DefaultDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ElementUnderPointer
Наследуется от: object
Поля:
  VisualElement[] m_PendingTopElementUnderPointer
  VisualElement[] m_TopElementUnderPointer
  IPointerEvent[] m_TriggerPointerEvent
  IMouseEvent[] m_TriggerMouseEvent
  Vector2[] m_PickingPointerPositions
  Boolean[] m_IsPickingPointerTemporaries
Свойства:
Методы:
  VisualElement GetTopElementUnderPointer(int pointerId, Vector2& pickPosition, Boolean& isTemporary)
  VisualElement GetTopElementUnderPointer(int pointerId)
  void SetElementUnderPointer(VisualElement newElementUnderPointer, int pointerId, Vector2 pointerPos)
  Vector2 GetEventPointerPosition(EventBase triggerEvent)
  void SetTemporaryElementUnderPointer(VisualElement newElementUnderPointer, int pointerId, EventBase triggerEvent)
  void SetElementUnderPointer(VisualElement newElementUnderPointer, int pointerId, EventBase triggerEvent)
  void SetElementUnderPointer(VisualElement newElementUnderPointer, int pointerId, EventBase triggerEvent, bool temporary)
  void CommitElementUnderPointers(EventDispatcher dispatcher, ContextType contextType)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventBase
Наследуется от: object
Поля:
  long s_LastTypeId
  ulong s_NextEventId
  long <timestamp>k__BackingField
  ulong <eventId>k__BackingField
  ulong <triggerEventId>k__BackingField
  EventPropagation <propagation>k__BackingField
  PropagationPaths m_Path
  LifeCycleStatus <lifeCycleStatus>k__BackingField
  IEventHandler <leafTarget>k__BackingField
  IEventHandler m_Target
  List`1<IEventHandler> <skipElements>k__BackingField
  PropagationPhase <propagationPhase>k__BackingField
  IEventHandler m_CurrentTarget
  Event m_ImguiEvent
  Vector2 <originalMousePosition>k__BackingField
Свойства:
  long eventTypeId
  long timestamp
  ulong eventId
  ulong triggerEventId
  EventPropagation propagation
  PropagationPaths path
  LifeCycleStatus lifeCycleStatus
  bool bubbles
  bool tricklesDown
  bool skipDisabledElements
  bool ignoreCompositeRoots
  IEventHandler leafTarget
  IEventHandler target
  List`1<IEventHandler> skipElements
  bool isPropagationStopped
  bool isImmediatePropagationStopped
  bool isDefaultPrevented
  PropagationPhase propagationPhase
  IEventHandler currentTarget
  bool dispatch
  bool dispatched
  bool processed
  bool processedByFocusController
  bool stopDispatch
  bool propagateToIMGUI
  bool imguiEventIsValid
  Event imguiEvent
  Vector2 originalMousePosition
  bool pooled
Методы:
  long RegisterEventType()
  long get_eventTypeId()
  long get_timestamp()
  void set_timestamp(long value)
  ulong get_eventId()
  void set_eventId(ulong value)
  ulong get_triggerEventId()
  void set_triggerEventId(ulong value)
  void SetTriggerEventId(ulong id)
  EventPropagation get_propagation()
  void set_propagation(EventPropagation value)
  PropagationPaths get_path()
  void set_path(PropagationPaths value)
  LifeCycleStatus get_lifeCycleStatus()
  void set_lifeCycleStatus(LifeCycleStatus value)
  void PreDispatch()
  void PreDispatch(IPanel panel)
  void PostDispatch()
  void PostDispatch(IPanel panel)
  bool get_bubbles()
  void set_bubbles(bool value)
  bool get_tricklesDown()
  void set_tricklesDown(bool value)
  bool get_skipDisabledElements()
  void set_skipDisabledElements(bool value)
  bool get_ignoreCompositeRoots()
  void set_ignoreCompositeRoots(bool value)
  IEventHandler get_leafTarget()
  void set_leafTarget(IEventHandler value)
  IEventHandler get_target()
  void set_target(IEventHandler value)
  List`1<IEventHandler> get_skipElements()
  bool Skip(IEventHandler h)
  bool get_isPropagationStopped()
  void set_isPropagationStopped(bool value)
  void StopPropagation()
  bool get_isImmediatePropagationStopped()
  void set_isImmediatePropagationStopped(bool value)
  void StopImmediatePropagation()
  bool get_isDefaultPrevented()
  void set_isDefaultPrevented(bool value)
  void PreventDefault()
  PropagationPhase get_propagationPhase()
  void set_propagationPhase(PropagationPhase value)
  IEventHandler get_currentTarget()
  void set_currentTarget(IEventHandler value)
  bool get_dispatch()
  void set_dispatch(bool value)
  void MarkReceivedByDispatcher()
  bool get_dispatched()
  void set_dispatched(bool value)
  bool get_processed()
  void set_processed(bool value)
  bool get_processedByFocusController()
  void set_processedByFocusController(bool value)
  bool get_stopDispatch()
  void set_stopDispatch(bool value)
  bool get_propagateToIMGUI()
  void set_propagateToIMGUI(bool value)
  bool get_imguiEventIsValid()
  void set_imguiEventIsValid(bool value)
  Event get_imguiEvent()
  void set_imguiEvent(Event value)
  Vector2 get_originalMousePosition()
  void set_originalMousePosition(Vector2 value)
  void Init()
  void LocalInit()
  void .ctor()
  bool get_pooled()
  void set_pooled(bool value)
  void Acquire()
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventBase`1
Наследуется от: EventBase
Поля:
  long s_TypeId
  ObjectPool`1<T> s_Pool
  int m_RefCount
Свойства:
  long eventTypeId
Методы:
  void .ctor()
  long TypeId()
  void Init()
  T GetPooled()
  T GetPooled(EventBase e)
  void ReleasePooled(T evt)
  void Acquire()
  void Dispose()
  long get_eventTypeId()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallback`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(TEventType evt)
  IAsyncResult BeginInvoke(TEventType evt, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallback`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(TEventType evt, TCallbackArgs userArgs)
  IAsyncResult BeginInvoke(TEventType evt, TCallbackArgs userArgs, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallbackFunctorBase
Наследуется от: object
Поля:
  CallbackPhase <phase>k__BackingField
  InvokePolicy <invokePolicy>k__BackingField
Свойства:
  CallbackPhase phase
  InvokePolicy invokePolicy
Методы:
  CallbackPhase get_phase()
  InvokePolicy get_invokePolicy()
  void .ctor(CallbackPhase phase, InvokePolicy invokePolicy)
  void Invoke(EventBase evt, PropagationPhase propagationPhase)
  bool IsEquivalentTo(long eventTypeId, Delegate callback, CallbackPhase phase)
  bool PhaseMatches(PropagationPhase propagationPhase)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallbackFunctor`1
Наследуется от: EventCallbackFunctorBase
Поля:
  EventCallback`1<TEventType> m_Callback
  long m_EventTypeId
Свойства:
Методы:
  void .ctor(EventCallback`1<TEventType> callback, CallbackPhase phase, InvokePolicy invokePolicy)
  void Invoke(EventBase evt, PropagationPhase propagationPhase)
  bool IsEquivalentTo(long eventTypeId, Delegate callback, CallbackPhase phase)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallbackFunctor`2
Наследуется от: EventCallbackFunctorBase
Поля:
  EventCallback`2<TEventType, TCallbackArgs> m_Callback
  long m_EventTypeId
  TCallbackArgs <userArgs>k__BackingField
Свойства:
  TCallbackArgs userArgs
Методы:
  TCallbackArgs get_userArgs()
  void set_userArgs(TCallbackArgs value)
  void .ctor(EventCallback`2<TEventType, TCallbackArgs> callback, TCallbackArgs userArgs, CallbackPhase phase, InvokePolicy invokePolicy)
  void Invoke(EventBase evt, PropagationPhase propagationPhase)
  bool IsEquivalentTo(long eventTypeId, Delegate callback, CallbackPhase phase)
--------------------------------------------------
Класс: UnityEngine.UIElements.TrickleDown
Наследуется от: Enum
Поля:
  int value__
  TrickleDown NoTrickleDown
  TrickleDown TrickleDown
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.CallbackPhase
Наследуется от: Enum
Поля:
  int value__
  CallbackPhase TargetAndBubbleUp
  CallbackPhase TrickleDownAndTarget
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.InvokePolicy
Наследуется от: Enum
Поля:
  int value__
  InvokePolicy Default
  InvokePolicy IncludeDisabled
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallbackListPool
Наследуется от: object
Поля:
  Stack`1<EventCallbackList> m_Stack
Свойства:
Методы:
  EventCallbackList Get(EventCallbackList initializer)
  void Release(EventCallbackList element)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallbackList
Наследуется от: object
Поля:
  List`1<EventCallbackFunctorBase> m_List
  int <trickleDownCallbackCount>k__BackingField
  int <bubbleUpCallbackCount>k__BackingField
Свойства:
  int trickleDownCallbackCount
  int bubbleUpCallbackCount
  int Count
  EventCallbackFunctorBase Item
Методы:
  int get_trickleDownCallbackCount()
  void set_trickleDownCallbackCount(int value)
  int get_bubbleUpCallbackCount()
  void set_bubbleUpCallbackCount(int value)
  void .ctor()
  void .ctor(EventCallbackList source)
  bool Contains(long eventTypeId, Delegate callback, CallbackPhase phase)
  EventCallbackFunctorBase Find(long eventTypeId, Delegate callback, CallbackPhase phase)
  bool Remove(long eventTypeId, Delegate callback, CallbackPhase phase)
  void Add(EventCallbackFunctorBase item)
  void AddRange(EventCallbackList list)
  int get_Count()
  EventCallbackFunctorBase get_Item(int i)
  void set_Item(int i, EventCallbackFunctorBase value)
  void Clear()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventCallbackRegistry
Наследуется от: object
Поля:
  EventCallbackListPool s_ListPool
  EventCallbackList m_Callbacks
  EventCallbackList m_TemporaryCallbacks
  int m_IsInvoking
Свойства:
Методы:
  EventCallbackList GetCallbackList(EventCallbackList initializer)
  void ReleaseCallbackList(EventCallbackList toRelease)
  void .ctor()
  EventCallbackList GetCallbackListForWriting()
  EventCallbackList GetCallbackListForReading()
  bool ShouldRegisterCallback(long eventTypeId, Delegate callback, CallbackPhase phase)
  bool UnregisterCallback(long eventTypeId, Delegate callback, TrickleDown useTrickleDown)
  void RegisterCallback(EventCallback`1<TEventType> callback, TrickleDown useTrickleDown, InvokePolicy invokePolicy)
  void RegisterCallback(EventCallback`2<TEventType, TCallbackArgs> callback, TCallbackArgs userArgs, TrickleDown useTrickleDown, InvokePolicy invokePolicy)
  bool UnregisterCallback(EventCallback`1<TEventType> callback, TrickleDown useTrickleDown)
  bool UnregisterCallback(EventCallback`2<TEventType, TCallbackArgs> callback, TrickleDown useTrickleDown)
  bool TryGetUserArgs(EventCallback`2<TEventType, TCallbackArgs> callback, TrickleDown useTrickleDown, TCallbackArgs& userArgs)
  void InvokeCallbacks(EventBase evt, PropagationPhase propagationPhase)
  bool HasTrickleDownHandlers()
  bool HasBubbleHandlers()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IEventHandler
Поля:
Свойства:
Методы:
  void SendEvent(EventBase e)
  void HandleEvent(EventBase evt)
  bool HasTrickleDownHandlers()
  bool HasBubbleUpHandlers()
--------------------------------------------------
Класс: UnityEngine.UIElements.CallbackEventHandler
Наследуется от: object
Поля:
  EventCallbackRegistry m_CallbackRegistry
Свойства:
Методы:
  void RegisterCallback(EventCallback`1<TEventType> callback, TrickleDown useTrickleDown)
  void RegisterCallback(EventCallback`2<TEventType, TUserArgsType> callback, TUserArgsType userArgs, TrickleDown useTrickleDown)
  void RegisterCallback(EventCallback`1<TEventType> callback, InvokePolicy invokePolicy, TrickleDown useTrickleDown)
  void UnregisterCallback(EventCallback`1<TEventType> callback, TrickleDown useTrickleDown)
  void UnregisterCallback(EventCallback`2<TEventType, TUserArgsType> callback, TrickleDown useTrickleDown)
  bool TryGetUserArgs(EventCallback`2<TEventType, TCallbackArgs> callback, TrickleDown useTrickleDown, TCallbackArgs& userData)
  void SendEvent(EventBase e)
  void SendEvent(EventBase e, DispatchMode dispatchMode)
  void HandleEventAtTargetPhase(EventBase evt)
  void HandleEvent(EventBase evt)
  bool HasTrickleDownHandlers()
  bool HasBubbleUpHandlers()
  void ExecuteDefaultActionAtTarget(EventBase evt)
  void ExecuteDefaultAction(EventBase evt)
  void ExecuteDefaultActionDisabledAtTarget(EventBase evt)
  void ExecuteDefaultActionDisabled(EventBase evt)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IFocusEvent
Поля:
Свойства:
  Focusable relatedTarget
  FocusChangeDirection direction
Методы:
  Focusable get_relatedTarget()
  FocusChangeDirection get_direction()
--------------------------------------------------
Класс: UnityEngine.UIElements.FocusEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  Focusable <relatedTarget>k__BackingField
  FocusChangeDirection <direction>k__BackingField
  FocusController <focusController>k__BackingField
  bool <IsFocusDelegated>k__BackingField
Свойства:
  Focusable relatedTarget
  FocusChangeDirection direction
  FocusController focusController
  bool IsFocusDelegated
Методы:
  Focusable get_relatedTarget()
  void set_relatedTarget(Focusable value)
  FocusChangeDirection get_direction()
  void set_direction(FocusChangeDirection value)
  FocusController get_focusController()
  void set_focusController(FocusController value)
  bool get_IsFocusDelegated()
  void set_IsFocusDelegated(bool value)
  void Init()
  void LocalInit()
  T GetPooled(IEventHandler target, Focusable relatedTarget, FocusChangeDirection direction, FocusController focusController, bool bIsFocusDelegated)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.FocusOutEvent
Наследуется от: FocusEventBase`1<FocusOutEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.BlurEvent
Наследуется от: FocusEventBase`1<BlurEvent>
Поля:
Свойства:
Методы:
  void PreDispatch(IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.FocusInEvent
Наследуется от: FocusEventBase`1<FocusInEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.FocusEvent
Наследуется от: FocusEventBase`1<FocusEvent>
Поля:
Свойства:
Методы:
  void PreDispatch(IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PropagationPhase
Наследуется от: Enum
Поля:
  int value__
  PropagationPhase None
  PropagationPhase TrickleDown
  PropagationPhase AtTarget
  PropagationPhase DefaultActionAtTarget
  PropagationPhase BubbleUp
  PropagationPhase DefaultAction
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.IEventDispatchingStrategy
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDispatchUtilities
Наследуется от: object
Поля:
Свойства:
Методы:
  void PropagateEvent(EventBase evt)
  void PropagateToIMGUIContainer(VisualElement root, EventBase evt)
  void ExecuteDefaultAction(EventBase evt, IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.IMGUIEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.InputEvent
Наследуется от: EventBase`1<InputEvent>
Поля:
  string <previousData>k__BackingField
  string <newData>k__BackingField
Свойства:
  string previousData
  string newData
Методы:
  string get_previousData()
  void set_previousData(string value)
  string get_newData()
  void set_newData(string value)
  void Init()
  void LocalInit()
  InputEvent GetPooled(string previousData, string newData)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyboardEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IKeyboardEvent
Поля:
Свойства:
  EventModifiers modifiers
  char character
  KeyCode keyCode
  bool shiftKey
  bool ctrlKey
  bool commandKey
  bool altKey
  bool actionKey
Методы:
  EventModifiers get_modifiers()
  char get_character()
  KeyCode get_keyCode()
  bool get_shiftKey()
  bool get_ctrlKey()
  bool get_commandKey()
  bool get_altKey()
  bool get_actionKey()
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyboardEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  EventModifiers <modifiers>k__BackingField
  char <character>k__BackingField
  KeyCode <keyCode>k__BackingField
Свойства:
  EventModifiers modifiers
  char character
  KeyCode keyCode
  bool shiftKey
  bool ctrlKey
  bool commandKey
  bool altKey
  bool actionKey
Методы:
  EventModifiers get_modifiers()
  void set_modifiers(EventModifiers value)
  char get_character()
  void set_character(char value)
  KeyCode get_keyCode()
  void set_keyCode(KeyCode value)
  bool get_shiftKey()
  bool get_ctrlKey()
  bool get_commandKey()
  bool get_altKey()
  bool get_actionKey()
  void Init()
  void LocalInit()
  T GetPooled(char c, KeyCode keyCode, EventModifiers modifiers)
  T GetPooled(Event systemEvent)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyDownEvent
Наследуется от: KeyboardEventBase`1<KeyDownEvent>
Поля:
Свойства:
Методы:
  void GetEquivalentImguiEvent(Event outImguiEvent)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.KeyUpEvent
Наследуется от: KeyboardEventBase`1<KeyUpEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.GeometryChangedEvent
Наследуется от: EventBase`1<GeometryChangedEvent>
Поля:
  Rect <oldRect>k__BackingField
  Rect <newRect>k__BackingField
  int <layoutPass>k__BackingField
Свойства:
  Rect oldRect
  Rect newRect
  int layoutPass
Методы:
  GeometryChangedEvent GetPooled(Rect oldRect, Rect newRect)
  void Init()
  void LocalInit()
  Rect get_oldRect()
  void set_oldRect(Rect value)
  Rect get_newRect()
  void set_newRect(Rect value)
  int get_layoutPass()
  void set_layoutPass(int value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseCaptureDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel iPanel)
  bool SendEventToTarget(EventBase evt, BaseVisualElementPanel panel)
  bool SendEventToRegularTarget(EventBase evt, BaseVisualElementPanel panel)
  bool SendEventToIMGUIContainer(EventBase evt, BaseVisualElementPanel panel)
  void SetBestTargetForEvent(EventBase evt, BaseVisualElementPanel panel)
  void UpdateElementUnderMouse(EventBase evt, BaseVisualElementPanel panel, VisualElement& elementUnderMouse)
  bool IsDone(EventBase evt)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IMouseEvent
Поля:
Свойства:
  EventModifiers modifiers
  Vector2 mousePosition
  Vector2 localMousePosition
  Vector2 mouseDelta
  int clickCount
  int button
  int pressedButtons
  bool shiftKey
  bool ctrlKey
  bool commandKey
  bool altKey
  bool actionKey
Методы:
  EventModifiers get_modifiers()
  Vector2 get_mousePosition()
  Vector2 get_localMousePosition()
  Vector2 get_mouseDelta()
  int get_clickCount()
  int get_button()
  int get_pressedButtons()
  bool get_shiftKey()
  bool get_ctrlKey()
  bool get_commandKey()
  bool get_altKey()
  bool get_actionKey()
--------------------------------------------------
Класс: UnityEngine.UIElements.IMouseEventInternal
Поля:
Свойства:
  bool triggeredByOS
  bool recomputeTopElementUnderMouse
  IPointerEvent sourcePointerEvent
Методы:
  bool get_triggeredByOS()
  void set_triggeredByOS(bool value)
  bool get_recomputeTopElementUnderMouse()
  void set_recomputeTopElementUnderMouse(bool value)
  IPointerEvent get_sourcePointerEvent()
  void set_sourcePointerEvent(IPointerEvent value)
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  EventModifiers <modifiers>k__BackingField
  Vector2 <mousePosition>k__BackingField
  Vector2 <localMousePosition>k__BackingField
  Vector2 <mouseDelta>k__BackingField
  int <clickCount>k__BackingField
  int <button>k__BackingField
  int <pressedButtons>k__BackingField
  bool <UnityEngine.UIElements.IMouseEventInternal.triggeredByOS>k__BackingField
  bool <UnityEngine.UIElements.IMouseEventInternal.recomputeTopElementUnderMouse>k__BackingField
  IPointerEvent <UnityEngine.UIElements.IMouseEventInternal.sourcePointerEvent>k__BackingField
Свойства:
  EventModifiers modifiers
  Vector2 mousePosition
  Vector2 localMousePosition
  Vector2 mouseDelta
  int clickCount
  int button
  int pressedButtons
  bool shiftKey
  bool ctrlKey
  bool commandKey
  bool altKey
  bool actionKey
  bool UnityEngine.UIElements.IMouseEventInternal.triggeredByOS
  bool UnityEngine.UIElements.IMouseEventInternal.recomputeTopElementUnderMouse
  IPointerEvent UnityEngine.UIElements.IMouseEventInternal.sourcePointerEvent
  IEventHandler currentTarget
Методы:
  EventModifiers get_modifiers()
  void set_modifiers(EventModifiers value)
  Vector2 get_mousePosition()
  void set_mousePosition(Vector2 value)
  Vector2 get_localMousePosition()
  void set_localMousePosition(Vector2 value)
  Vector2 get_mouseDelta()
  void set_mouseDelta(Vector2 value)
  int get_clickCount()
  void set_clickCount(int value)
  int get_button()
  void set_button(int value)
  int get_pressedButtons()
  void set_pressedButtons(int value)
  bool get_shiftKey()
  bool get_ctrlKey()
  bool get_commandKey()
  bool get_altKey()
  bool get_actionKey()
  bool UnityEngine.UIElements.IMouseEventInternal.get_triggeredByOS()
  void UnityEngine.UIElements.IMouseEventInternal.set_triggeredByOS(bool value)
  bool UnityEngine.UIElements.IMouseEventInternal.get_recomputeTopElementUnderMouse()
  void UnityEngine.UIElements.IMouseEventInternal.set_recomputeTopElementUnderMouse(bool value)
  IPointerEvent UnityEngine.UIElements.IMouseEventInternal.get_sourcePointerEvent()
  void UnityEngine.UIElements.IMouseEventInternal.set_sourcePointerEvent(IPointerEvent value)
  void Init()
  void LocalInit()
  IEventHandler get_currentTarget()
  void set_currentTarget(IEventHandler value)
  void PreDispatch(IPanel panel)
  void PostDispatch(IPanel panel)
  T GetPooled(Event systemEvent)
  T GetPooled(Vector2 position, int button, int clickCount, Vector2 delta, EventModifiers modifiers)
  T GetPooled(Vector2 position, int button, int clickCount, Vector2 delta, EventModifiers modifiers, bool fromOS)
  T GetPooled(IMouseEvent triggerEvent, Vector2 mousePosition, bool recomputeTopElementUnderMouse)
  T GetPooled(IMouseEvent triggerEvent)
  T GetPooled(IPointerEvent pointerEvent)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseDownEvent
Наследуется от: MouseEventBase`1<MouseDownEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  MouseDownEvent GetPooled(Event systemEvent)
  MouseDownEvent MakeFromPointerEvent(IPointerEvent pointerEvent)
  MouseDownEvent GetPooled(PointerDownEvent pointerEvent)
  MouseDownEvent GetPooled(PointerMoveEvent pointerEvent)
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseUpEvent
Наследуется от: MouseEventBase`1<MouseUpEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  MouseUpEvent GetPooled(Event systemEvent)
  MouseUpEvent MakeFromPointerEvent(IPointerEvent pointerEvent)
  MouseUpEvent GetPooled(PointerUpEvent pointerEvent)
  MouseUpEvent GetPooled(PointerMoveEvent pointerEvent)
  MouseUpEvent GetPooled(PointerCancelEvent pointerEvent)
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseMoveEvent
Наследуется от: MouseEventBase`1<MouseMoveEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  MouseMoveEvent GetPooled(Event systemEvent)
  MouseMoveEvent GetPooled(PointerMoveEvent pointerEvent)
--------------------------------------------------
Класс: UnityEngine.UIElements.ContextClickEvent
Наследуется от: MouseEventBase`1<ContextClickEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.WheelEvent
Наследуется от: MouseEventBase`1<WheelEvent>
Поля:
  Vector3 <delta>k__BackingField
Свойства:
  Vector3 delta
Методы:
  Vector3 get_delta()
  void set_delta(Vector3 value)
  WheelEvent GetPooled(Event systemEvent)
  WheelEvent GetPooled(Vector3 delta, Vector3 mousePosition)
  WheelEvent GetPooled(Vector3 delta, IPointerEvent pointerEvent)
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseEnterEvent
Наследуется от: MouseEventBase`1<MouseEnterEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseLeaveEvent
Наследуется от: MouseEventBase`1<MouseLeaveEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseEnterWindowEvent
Наследуется от: MouseEventBase`1<MouseEnterWindowEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseLeaveWindowEvent
Наследуется от: MouseEventBase`1<MouseLeaveWindowEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  MouseLeaveWindowEvent GetPooled(Event systemEvent)
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseOverEvent
Наследуется от: MouseEventBase`1<MouseOverEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseOutEvent
Наследуется от: MouseEventBase`1<MouseOutEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ContextualMenuPopulateEvent
Наследуется от: MouseEventBase`1<ContextualMenuPopulateEvent>
Поля:
  DropdownMenu <menu>k__BackingField
  EventBase <triggerEvent>k__BackingField
  ContextualMenuManager m_ContextualMenuManager
Свойства:
  DropdownMenu menu
  EventBase triggerEvent
Методы:
  DropdownMenu get_menu()
  void set_menu(DropdownMenu value)
  EventBase get_triggerEvent()
  void set_triggerEvent(EventBase value)
  ContextualMenuPopulateEvent GetPooled(EventBase triggerEvent, DropdownMenu menu, IEventHandler target, ContextualMenuManager menuManager)
  void Init()
  void LocalInit()
  void .ctor()
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.MouseEventsHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void SendEnterLeave(VisualElement previousTopElementUnderMouse, VisualElement currentTopElementUnderMouse, IMouseEvent triggerEvent, Vector2 mousePosition)
  void SendMouseOverMouseOut(VisualElement previousTopElementUnderMouse, VisualElement currentTopElementUnderMouse, IMouseEvent triggerEvent, Vector2 mousePosition)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerEventsHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void SendEnterLeave(VisualElement previousTopElementUnderPointer, VisualElement currentTopElementUnderPointer, IPointerEvent triggerEvent, Vector2 position, int pointerId)
  void SendOverOut(VisualElement previousTopElementUnderPointer, VisualElement currentTopElementUnderPointer, IPointerEvent triggerEvent, Vector2 position, int pointerId)
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigationEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.INavigationEvent
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigationEventBase`1
Наследуется от: EventBase`1<T>
Поля:
Свойства:
Методы:
  void .ctor()
  void Init()
  void LocalInit()
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigationMoveEvent
Наследуется от: NavigationEventBase`1<NavigationMoveEvent>
Поля:
  Direction <direction>k__BackingField
  Vector2 <move>k__BackingField
Свойства:
  Direction direction
  Vector2 move
Методы:
  Direction DetermineMoveDirection(float x, float y, float deadZone)
  Direction get_direction()
  void set_direction(Direction value)
  Vector2 get_move()
  void set_move(Vector2 value)
  NavigationMoveEvent GetPooled(Vector2 moveVector)
  NavigationMoveEvent GetPooled(Direction direction)
  void Init()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigationTabEvent
Наследуется от: NavigationEventBase`1<NavigationTabEvent>
Поля:
  Direction <direction>k__BackingField
Свойства:
  Direction direction
Методы:
  Direction get_direction()
  void set_direction(Direction value)
  Direction DetermineMoveDirection(int moveValue)
  NavigationTabEvent GetPooled(int moveValue)
  void Init()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigationCancelEvent
Наследуется от: NavigationEventBase`1<NavigationCancelEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigationSubmitEvent
Наследуется от: NavigationEventBase`1<NavigationSubmitEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IPanelChangedEvent
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelChangedEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  IPanel <originPanel>k__BackingField
  IPanel <destinationPanel>k__BackingField
Свойства:
  IPanel originPanel
  IPanel destinationPanel
Методы:
  IPanel get_originPanel()
  void set_originPanel(IPanel value)
  IPanel get_destinationPanel()
  void set_destinationPanel(IPanel value)
  void Init()
  void LocalInit()
  T GetPooled(IPanel originPanel, IPanel destinationPanel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.AttachToPanelEvent
Наследуется от: PanelChangedEventBase`1<AttachToPanelEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DetachFromPanelEvent
Наследуется от: PanelChangedEventBase`1<DetachFromPanelEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerCaptureDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerDeviceState
Наследуется от: object
Поля:
  PointerLocation[] s_PlayerPointerLocations
  Int32[] s_PressedButtons
  IPanel[] s_PlayerPanelWithSoftPointerCapture
Свойства:
Методы:
  void Reset()
  void RemovePanelData(IPanel panel)
  void SavePointerPosition(int pointerId, Vector2 position, IPanel panel, ContextType contextType)
  void PressButton(int pointerId, int buttonId)
  void ReleaseButton(int pointerId, int buttonId)
  void ReleaseAllButtons(int pointerId)
  Vector2 GetPointerPosition(int pointerId, ContextType contextType)
  IPanel GetPanel(int pointerId, ContextType contextType)
  bool HasFlagFast(LocationFlag flagSet, LocationFlag flag)
  bool HasLocationFlag(int pointerId, ContextType contextType, LocationFlag flag)
  int GetPressedButtons(int pointerId)
  bool HasAdditionalPressedButtons(int pointerId, int exceptButtonId)
  void SetPlayerPanelWithSoftPointerCapture(int pointerId, IPanel panel)
  IPanel GetPlayerPanelWithSoftPointerCapture(int pointerId)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerEventDispatchingStrategy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CanDispatchEvent(EventBase evt)
  void DispatchEvent(EventBase evt, IPanel panel)
  void SendEventToTarget(EventBase evt)
  void SetBestTargetForEvent(EventBase evt, IPanel panel)
  void UpdateElementUnderPointer(EventBase evt, IPanel panel, VisualElement& elementUnderPointer)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerType
Наследуется от: object
Поля:
  string mouse
  string touch
  string pen
  string unknown
Свойства:
Методы:
  string GetPointerType(int pointerId)
  bool IsDirectManipulationDevice(string pointerType)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerId
Наследуется от: object
Поля:
  int maxPointers
  int invalidPointerId
  int mousePointerId
  int touchPointerIdBase
  int touchPointerCount
  int penPointerIdBase
  int penPointerCount
  Int32[] hoveringPointers
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IPointerEvent
Поля:
Свойства:
  int pointerId
  string pointerType
  bool isPrimary
  int button
  int pressedButtons
  Vector3 position
  Vector3 localPosition
  Vector3 deltaPosition
  float deltaTime
  int clickCount
  float pressure
  float tangentialPressure
  float altitudeAngle
  float azimuthAngle
  float twist
  Vector2 radius
  Vector2 radiusVariance
  EventModifiers modifiers
  bool shiftKey
  bool ctrlKey
  bool commandKey
  bool altKey
  bool actionKey
Методы:
  int get_pointerId()
  string get_pointerType()
  bool get_isPrimary()
  int get_button()
  int get_pressedButtons()
  Vector3 get_position()
  Vector3 get_localPosition()
  Vector3 get_deltaPosition()
  float get_deltaTime()
  int get_clickCount()
  float get_pressure()
  float get_tangentialPressure()
  float get_altitudeAngle()
  float get_azimuthAngle()
  float get_twist()
  Vector2 get_radius()
  Vector2 get_radiusVariance()
  EventModifiers get_modifiers()
  bool get_shiftKey()
  bool get_ctrlKey()
  bool get_commandKey()
  bool get_altKey()
  bool get_actionKey()
--------------------------------------------------
Класс: UnityEngine.UIElements.IPointerEventInternal
Поля:
Свойства:
  bool triggeredByOS
  bool recomputeTopElementUnderPointer
Методы:
  bool get_triggeredByOS()
  void set_triggeredByOS(bool value)
  bool get_recomputeTopElementUnderPointer()
  void set_recomputeTopElementUnderPointer(bool value)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  int <pointerId>k__BackingField
  string <pointerType>k__BackingField
  bool <isPrimary>k__BackingField
  int <button>k__BackingField
  int <pressedButtons>k__BackingField
  Vector3 <position>k__BackingField
  Vector3 <localPosition>k__BackingField
  Vector3 <deltaPosition>k__BackingField
  float <deltaTime>k__BackingField
  int <clickCount>k__BackingField
  float <pressure>k__BackingField
  float <tangentialPressure>k__BackingField
  float <altitudeAngle>k__BackingField
  float <azimuthAngle>k__BackingField
  float <twist>k__BackingField
  Vector2 <radius>k__BackingField
  Vector2 <radiusVariance>k__BackingField
  EventModifiers <modifiers>k__BackingField
  bool <UnityEngine.UIElements.IPointerEventInternal.triggeredByOS>k__BackingField
  bool <UnityEngine.UIElements.IPointerEventInternal.recomputeTopElementUnderPointer>k__BackingField
Свойства:
  int pointerId
  string pointerType
  bool isPrimary
  int button
  int pressedButtons
  Vector3 position
  Vector3 localPosition
  Vector3 deltaPosition
  float deltaTime
  int clickCount
  float pressure
  float tangentialPressure
  float altitudeAngle
  float azimuthAngle
  float twist
  Vector2 radius
  Vector2 radiusVariance
  EventModifiers modifiers
  bool shiftKey
  bool ctrlKey
  bool commandKey
  bool altKey
  bool actionKey
  bool UnityEngine.UIElements.IPointerEventInternal.triggeredByOS
  bool UnityEngine.UIElements.IPointerEventInternal.recomputeTopElementUnderPointer
  IEventHandler currentTarget
Методы:
  int get_pointerId()
  void set_pointerId(int value)
  string get_pointerType()
  void set_pointerType(string value)
  bool get_isPrimary()
  void set_isPrimary(bool value)
  int get_button()
  void set_button(int value)
  int get_pressedButtons()
  void set_pressedButtons(int value)
  Vector3 get_position()
  void set_position(Vector3 value)
  Vector3 get_localPosition()
  void set_localPosition(Vector3 value)
  Vector3 get_deltaPosition()
  void set_deltaPosition(Vector3 value)
  float get_deltaTime()
  void set_deltaTime(float value)
  int get_clickCount()
  void set_clickCount(int value)
  float get_pressure()
  void set_pressure(float value)
  float get_tangentialPressure()
  void set_tangentialPressure(float value)
  float get_altitudeAngle()
  void set_altitudeAngle(float value)
  float get_azimuthAngle()
  void set_azimuthAngle(float value)
  float get_twist()
  void set_twist(float value)
  Vector2 get_radius()
  void set_radius(Vector2 value)
  Vector2 get_radiusVariance()
  void set_radiusVariance(Vector2 value)
  EventModifiers get_modifiers()
  void set_modifiers(EventModifiers value)
  bool get_shiftKey()
  bool get_ctrlKey()
  bool get_commandKey()
  bool get_altKey()
  bool get_actionKey()
  bool UnityEngine.UIElements.IPointerEventInternal.get_triggeredByOS()
  void UnityEngine.UIElements.IPointerEventInternal.set_triggeredByOS(bool value)
  bool UnityEngine.UIElements.IPointerEventInternal.get_recomputeTopElementUnderPointer()
  void UnityEngine.UIElements.IPointerEventInternal.set_recomputeTopElementUnderPointer(bool value)
  void Init()
  void LocalInit()
  IEventHandler get_currentTarget()
  void set_currentTarget(IEventHandler value)
  bool IsMouse(Event systemEvent)
  T GetPooled(Event systemEvent)
  T GetPooled(Touch touch, EventModifiers modifiers)
  T GetPooled(IPointerEvent triggerEvent, Vector2 position, int pointerId)
  T GetPooled(IPointerEvent triggerEvent)
  void PreDispatch(IPanel panel)
  void PostDispatch(IPanel panel)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerDownEvent
Наследуется от: PointerEventBase`1<PointerDownEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerMoveEvent
Наследуется от: PointerEventBase`1<PointerMoveEvent>
Поля:
  bool <isHandledByDraggable>k__BackingField
Свойства:
  bool isHandledByDraggable
Методы:
  bool get_isHandledByDraggable()
  void set_isHandledByDraggable(bool value)
  void Init()
  void LocalInit()
  void .ctor()
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerStationaryEvent
Наследуется от: PointerEventBase`1<PointerStationaryEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerUpEvent
Наследуется от: PointerEventBase`1<PointerUpEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerCancelEvent
Наследуется от: PointerEventBase`1<PointerCancelEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  void PostDispatch(IPanel panel)
--------------------------------------------------
Класс: UnityEngine.UIElements.ClickEvent
Наследуется от: PointerEventBase`1<ClickEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
  ClickEvent GetPooled(PointerUpEvent pointerEvent, int clickCount)
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerEnterEvent
Наследуется от: PointerEventBase`1<PointerEnterEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerLeaveEvent
Наследуется от: PointerEventBase`1<PointerLeaveEvent>
Поля:
Свойства:
Методы:
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerOverEvent
Наследуется от: PointerEventBase`1<PointerOverEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PointerOutEvent
Наследуется от: PointerEventBase`1<PointerOutEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PropagationPaths
Наследуется от: object
Поля:
  ObjectPool`1<PropagationPaths> s_Pool
  List`1<VisualElement> trickleDownPath
  List`1<VisualElement> targetElements
  List`1<VisualElement> bubbleUpPath
  int k_DefaultPropagationDepth
  int k_DefaultTargetCount
Свойства:
Методы:
  void .ctor()
  void .ctor(PropagationPaths paths)
  PropagationPaths Copy(PropagationPaths paths)
  PropagationPaths Build(VisualElement elem, EventBase evt, Type pathTypesRequested)
  void Release()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.CustomStyleResolvedEvent
Наследуется от: EventBase`1<CustomStyleResolvedEvent>
Поля:
Свойства:
  ICustomStyle customStyle
Методы:
  ICustomStyle get_customStyle()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TooltipEvent
Наследуется от: EventBase`1<TooltipEvent>
Поля:
  string <tooltip>k__BackingField
  Rect <rect>k__BackingField
Свойства:
  string tooltip
  Rect rect
Методы:
  string get_tooltip()
  void set_tooltip(string value)
  Rect get_rect()
  void set_rect(Rect value)
  void Init()
  void LocalInit()
  TooltipEvent GetPooled(string tooltip, Rect rect)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ITransitionEvent
Поля:
Свойства:
  StylePropertyNameCollection stylePropertyNames
  double elapsedTime
Методы:
  StylePropertyNameCollection get_stylePropertyNames()
  double get_elapsedTime()
--------------------------------------------------
Класс: UnityEngine.UIElements.StylePropertyNameCollection
Наследуется от: ValueType
Поля:
  List`1<StylePropertyName> propertiesList
Свойства:
Методы:
  void .ctor(List`1<StylePropertyName> list)
  Enumerator GetEnumerator()
  IEnumerator`1<StylePropertyName> System.Collections.Generic.IEnumerable<UnityEngine.UIElements.StylePropertyName>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Contains(StylePropertyName stylePropertyName)
--------------------------------------------------
Класс: UnityEngine.UIElements.TransitionEventBase`1
Наследуется от: EventBase`1<T>
Поля:
  StylePropertyNameCollection <stylePropertyNames>k__BackingField
  double <elapsedTime>k__BackingField
Свойства:
  StylePropertyNameCollection stylePropertyNames
  double elapsedTime
Методы:
  StylePropertyNameCollection get_stylePropertyNames()
  double get_elapsedTime()
  void set_elapsedTime(double value)
  void .ctor()
  void Init()
  void LocalInit()
  T GetPooled(StylePropertyName stylePropertyName, double elapsedTime)
  bool AffectsProperty(StylePropertyName stylePropertyName)
--------------------------------------------------
Класс: UnityEngine.UIElements.TransitionRunEvent
Наследуется от: TransitionEventBase`1<TransitionRunEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TransitionStartEvent
Наследуется от: TransitionEventBase`1<TransitionStartEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TransitionEndEvent
Наследуется от: TransitionEventBase`1<TransitionEndEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TransitionCancelEvent
Наследуется от: TransitionEventBase`1<TransitionCancelEvent>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.IMGUIEvent
Наследуется от: EventBase`1<IMGUIEvent>
Поля:
Свойства:
Методы:
  IMGUIEvent GetPooled(Event systemEvent)
  void Init()
  void LocalInit()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerLogCall
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  void .ctor(Delegate callback, EventBase evt)
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerLogIMGUICall
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  void .ctor(EventBase evt)
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerLogExecuteDefaultAction
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  void .ctor(EventBase evt)
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebugger
Наследуется от: object
Поля:
  IPanel <panel>k__BackingField
  bool <isReplaying>k__BackingField
  float <playbackSpeed>k__BackingField
  bool <isPlaybackPaused>k__BackingField
  Dictionary`2<IPanel, List`1<EventDebuggerCallTrace>> m_EventCalledObjects
  Dictionary`2<IPanel, List`1<EventDebuggerDefaultActionTrace>> m_EventDefaultActionObjects
  Dictionary`2<IPanel, List`1<EventDebuggerPathTrace>> m_EventPathObjects
  Dictionary`2<IPanel, List`1<EventDebuggerTrace>> m_EventProcessedEvents
  Dictionary`2<IPanel, Stack`1<EventDebuggerTrace>> m_StackOfProcessedEvent
  Dictionary`2<IPanel, Dictionary`2<long, int>> m_EventTypeProcessedCount
  Dictionary`2<IPanel, long> m_ModificationCount
  bool m_Log
  bool <suspended>k__BackingField
Свойства:
  IPanel panel
  bool isReplaying
  float playbackSpeed
  bool isPlaybackPaused
  Dictionary`2<long, int> eventTypeProcessedCount
  bool suspended
Методы:
  IPanel get_panel()
  void set_panel(IPanel value)
  bool get_isReplaying()
  void set_isReplaying(bool value)
  float get_playbackSpeed()
  void set_playbackSpeed(float value)
  bool get_isPlaybackPaused()
  void set_isPlaybackPaused(bool value)
  void UpdateModificationCount()
  void BeginProcessEvent(EventBase evt, IEventHandler mouseCapture)
  void EndProcessEvent(EventBase evt, long duration, IEventHandler mouseCapture)
  void LogCall(int cbHashCode, string cbName, EventBase evt, bool propagationHasStopped, bool immediatePropagationHasStopped, bool defaultHasBeenPrevented, long duration, IEventHandler mouseCapture)
  void LogIMGUICall(EventBase evt, long duration, IEventHandler mouseCapture)
  void LogExecuteDefaultAction(EventBase evt, PropagationPhase phase, long duration, IEventHandler mouseCapture)
  void LogPropagationPaths(EventBase evt, PropagationPaths paths)
  void LogPropagationPathsInternal(EventBase evt, PropagationPaths paths)
  List`1<EventDebuggerCallTrace> GetCalls(IPanel panel, EventDebuggerEventRecord evt)
  List`1<EventDebuggerDefaultActionTrace> GetDefaultActions(IPanel panel, EventDebuggerEventRecord evt)
  List`1<EventDebuggerPathTrace> GetPropagationPaths(IPanel panel, EventDebuggerEventRecord evt)
  List`1<EventDebuggerTrace> GetBeginEndProcessedEvents(IPanel panel, EventDebuggerEventRecord evt)
  long GetModificationCount(IPanel panel)
  void ClearLogs()
  void SaveReplaySessionFromSelection(string path, List`1<EventDebuggerEventRecord> eventList)
  EventDebuggerRecordList LoadReplaySession(string path)
  IEnumerator ReplayEvents(IEnumerable`1<EventDebuggerEventRecord> eventBases, Action`2<int, int> refreshList)
  void StopPlayback()
  IEnumerator DoReplayEvents(IEnumerable`1<EventDebuggerEventRecord> eventBases, Action`2<int, int> refreshList)
  Dictionary`2<string, HistogramRecord> ComputeHistogram(List`1<EventDebuggerEventRecord> eventBases)
  Dictionary`2<long, int> get_eventTypeProcessedCount()
  bool get_suspended()
  void set_suspended(bool value)
  void .ctor()
  void AddCallObject(int cbHashCode, string cbName, EventBase evt, bool propagationHasStopped, bool immediatePropagationHasStopped, bool defaultHasBeenPrevented, long duration, IEventHandler mouseCapture)
  void AddExecuteDefaultAction(EventBase evt, PropagationPhase phase, long duration, IEventHandler mouseCapture)
  void AddPropagationPaths(EventBase evt, PropagationPaths paths)
  void AddIMGUICall(EventBase evt, long duration, IEventHandler mouseCapture)
  void AddBeginProcessEvent(EventBase evt, IEventHandler mouseCapture)
  void AddEndProcessEvent(EventBase evt, long duration, IEventHandler mouseCapture)
  string GetObjectDisplayName(object obj, bool withHashCode)
  string GetTypeDisplayName(Type type)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerRecordList
Наследуется от: object
Поля:
  List`1<EventDebuggerEventRecord> eventList
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerEventRecord
Наследуется от: object
Поля:
  string <eventBaseName>k__BackingField
  long <eventTypeId>k__BackingField
  ulong <eventId>k__BackingField
  ulong <triggerEventId>k__BackingField
  long <timestamp>k__BackingField
  IEventHandler <target>k__BackingField
  List`1<IEventHandler> <skipElements>k__BackingField
  bool <hasUnderlyingPhysicalEvent>k__BackingField
  bool <isPropagationStopped>k__BackingField
  bool <isImmediatePropagationStopped>k__BackingField
  bool <isDefaultPrevented>k__BackingField
  PropagationPhase <propagationPhase>k__BackingField
  IEventHandler <currentTarget>k__BackingField
  bool <dispatch>k__BackingField
  Vector2 <originalMousePosition>k__BackingField
  EventModifiers <modifiers>k__BackingField
  Vector2 <mousePosition>k__BackingField
  int <clickCount>k__BackingField
  int <button>k__BackingField
  int <pressedButtons>k__BackingField
  Vector3 <delta>k__BackingField
  char <character>k__BackingField
  KeyCode <keyCode>k__BackingField
  string <commandName>k__BackingField
Свойства:
  string eventBaseName
  long eventTypeId
  ulong eventId
  ulong triggerEventId
  long timestamp
  IEventHandler target
  List`1<IEventHandler> skipElements
  bool hasUnderlyingPhysicalEvent
  bool isPropagationStopped
  bool isImmediatePropagationStopped
  bool isDefaultPrevented
  PropagationPhase propagationPhase
  IEventHandler currentTarget
  bool dispatch
  Vector2 originalMousePosition
  EventModifiers modifiers
  Vector2 mousePosition
  int clickCount
  int button
  int pressedButtons
  Vector3 delta
  char character
  KeyCode keyCode
  string commandName
Методы:
  string get_eventBaseName()
  void set_eventBaseName(string value)
  long get_eventTypeId()
  void set_eventTypeId(long value)
  ulong get_eventId()
  void set_eventId(ulong value)
  ulong get_triggerEventId()
  void set_triggerEventId(ulong value)
  long get_timestamp()
  void set_timestamp(long value)
  IEventHandler get_target()
  void set_target(IEventHandler value)
  List`1<IEventHandler> get_skipElements()
  void set_skipElements(List`1<IEventHandler> value)
  bool get_hasUnderlyingPhysicalEvent()
  void set_hasUnderlyingPhysicalEvent(bool value)
  bool get_isPropagationStopped()
  void set_isPropagationStopped(bool value)
  bool get_isImmediatePropagationStopped()
  void set_isImmediatePropagationStopped(bool value)
  bool get_isDefaultPrevented()
  void set_isDefaultPrevented(bool value)
  PropagationPhase get_propagationPhase()
  void set_propagationPhase(PropagationPhase value)
  IEventHandler get_currentTarget()
  void set_currentTarget(IEventHandler value)
  bool get_dispatch()
  void set_dispatch(bool value)
  Vector2 get_originalMousePosition()
  void set_originalMousePosition(Vector2 value)
  EventModifiers get_modifiers()
  void set_modifiers(EventModifiers value)
  Vector2 get_mousePosition()
  void set_mousePosition(Vector2 value)
  int get_clickCount()
  void set_clickCount(int value)
  int get_button()
  void set_button(int value)
  int get_pressedButtons()
  void set_pressedButtons(int value)
  Vector3 get_delta()
  void set_delta(Vector3 value)
  char get_character()
  void set_character(char value)
  KeyCode get_keyCode()
  void set_keyCode(KeyCode value)
  string get_commandName()
  void set_commandName(string value)
  void Init(EventBase evt)
  void .ctor(EventBase evt)
  string TimestampString()
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerTrace
Наследуется от: object
Поля:
  EventDebuggerEventRecord <eventBase>k__BackingField
  IEventHandler <focusedElement>k__BackingField
  IEventHandler <mouseCapture>k__BackingField
  long <duration>k__BackingField
Свойства:
  EventDebuggerEventRecord eventBase
  IEventHandler focusedElement
  IEventHandler mouseCapture
  long duration
Методы:
  EventDebuggerEventRecord get_eventBase()
  IEventHandler get_focusedElement()
  IEventHandler get_mouseCapture()
  long get_duration()
  void set_duration(long value)
  void .ctor(IPanel panel, EventBase evt, long duration, IEventHandler mouseCapture)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerCallTrace
Наследуется от: EventDebuggerTrace
Поля:
  int <callbackHashCode>k__BackingField
  string <callbackName>k__BackingField
  bool <propagationHasStopped>k__BackingField
  bool <immediatePropagationHasStopped>k__BackingField
  bool <defaultHasBeenPrevented>k__BackingField
Свойства:
  int callbackHashCode
  string callbackName
  bool propagationHasStopped
  bool immediatePropagationHasStopped
  bool defaultHasBeenPrevented
Методы:
  int get_callbackHashCode()
  string get_callbackName()
  bool get_propagationHasStopped()
  bool get_immediatePropagationHasStopped()
  bool get_defaultHasBeenPrevented()
  void .ctor(IPanel panel, EventBase evt, int cbHashCode, string cbName, bool propagationHasStopped, bool immediatePropagationHasStopped, bool defaultHasBeenPrevented, long duration, IEventHandler mouseCapture)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerDefaultActionTrace
Наследуется от: EventDebuggerTrace
Поля:
  PropagationPhase <phase>k__BackingField
Свойства:
  PropagationPhase phase
  string targetName
Методы:
  PropagationPhase get_phase()
  string get_targetName()
  void .ctor(IPanel panel, EventBase evt, PropagationPhase phase, long duration, IEventHandler mouseCapture)
--------------------------------------------------
Класс: UnityEngine.UIElements.EventDebuggerPathTrace
Наследуется от: EventDebuggerTrace
Поля:
  PropagationPaths <paths>k__BackingField
Свойства:
  PropagationPaths paths
Методы:
  PropagationPaths get_paths()
  void .ctor(IPanel panel, EventBase evt, PropagationPaths paths)
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlasFiltersInternal
Наследуется от: Enum
Поля:
  int value__
  DynamicAtlasFiltersInternal None
  DynamicAtlasFiltersInternal Readability
  DynamicAtlasFiltersInternal Size
  DynamicAtlasFiltersInternal Format
  DynamicAtlasFiltersInternal ColorSpace
  DynamicAtlasFiltersInternal FilterMode
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlasSettings
Наследуется от: object
Поля:
  int m_MinAtlasSize
  int m_MaxAtlasSize
  int m_MaxSubTextureSize
  DynamicAtlasFiltersInternal m_ActiveFilters
  DynamicAtlasCustomFilter m_CustomFilter
Свойства:
  int minAtlasSize
  int maxAtlasSize
  int maxSubTextureSize
  DynamicAtlasFilters activeFilters
  DynamicAtlasFilters defaultFilters
  DynamicAtlasCustomFilter customFilter
  DynamicAtlasSettings defaults
Методы:
  int get_minAtlasSize()
  void set_minAtlasSize(int value)
  int get_maxAtlasSize()
  void set_maxAtlasSize(int value)
  int get_maxSubTextureSize()
  void set_maxSubTextureSize(int value)
  DynamicAtlasFilters get_activeFilters()
  void set_activeFilters(DynamicAtlasFilters value)
  DynamicAtlasFilters get_defaultFilters()
  DynamicAtlasCustomFilter get_customFilter()
  void set_customFilter(DynamicAtlasCustomFilter value)
  DynamicAtlasSettings get_defaults()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.NavigateFocusRing
Наследуется от: object
Поля:
  ChangeDirection Left
  ChangeDirection Right
  ChangeDirection Up
  ChangeDirection Down
  ChangeDirection Next
  ChangeDirection Previous
  VisualElement m_Root
  VisualElementFocusRing m_Ring
Свойства:
  FocusController focusController
Методы:
  FocusController get_focusController()
  void .ctor(VisualElement root)
  FocusChangeDirection GetFocusChangeDirection(Focusable currentFocusable, EventBase e)
  Focusable GetNextFocusable(Focusable currentFocusable, FocusChangeDirection direction)
  Focusable GetNextFocusable2D(Focusable currentFocusable, ChangeDirection direction)
  bool IsActive(VisualElement v)
  bool IsNavigable(Focusable focusable)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelScaleMode
Наследуется от: Enum
Поля:
  int value__
  PanelScaleMode ConstantPixelSize
  PanelScaleMode ConstantPhysicalSize
  PanelScaleMode ScaleWithScreenSize
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelScreenMatchMode
Наследуется от: Enum
Поля:
  int value__
  PanelScreenMatchMode MatchWidthOrHeight
  PanelScreenMatchMode Shrink
  PanelScreenMatchMode Expand
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelSettings
Наследуется от: ScriptableObject
Поля:
  int k_DefaultSortingOrder
  float k_DefaultScaleValue
  string k_DefaultStyleSheetPath
  ThemeStyleSheet themeUss
  RenderTexture m_TargetTexture
  PanelScaleMode m_ScaleMode
  float m_Scale
  float DefaultDpi
  float m_ReferenceDpi
  float m_FallbackDpi
  Vector2Int m_ReferenceResolution
  PanelScreenMatchMode m_ScreenMatchMode
  float m_Match
  float m_SortingOrder
  int m_TargetDisplay
  bool m_ClearDepthStencil
  bool m_ClearColor
  Color m_ColorClearValue
  RuntimePanelAccess m_PanelAccess
  UIDocumentList m_AttachedUIDocumentsList
  DynamicAtlasSettings m_DynamicAtlasSettings
  Shader m_AtlasBlitShader
  Shader m_RuntimeShader
  Shader m_RuntimeWorldShader
  PanelTextSettings textSettings
  Rect m_TargetRect
  float m_ResolvedScale
  StyleSheet m_OldThemeUss
  int m_EmptyPanelCounter
  float <ScreenDPI>k__BackingField
  Func`2<Vector2, Vector2> m_AssignedScreenToPanel
Свойства:
  ThemeStyleSheet themeStyleSheet
  RenderTexture targetTexture
  PanelScaleMode scaleMode
  float scale
  float referenceDpi
  float fallbackDpi
  Vector2Int referenceResolution
  PanelScreenMatchMode screenMatchMode
  float match
  float sortingOrder
  int targetDisplay
  bool clearDepthStencil
  float depthClearValue
  bool clearColor
  Color colorClearValue
  BaseRuntimePanel panel
  VisualElement visualTree
  DynamicAtlasSettings dynamicAtlasSettings
  float ScreenDPI
Методы:
  ThemeStyleSheet get_themeStyleSheet()
  void set_themeStyleSheet(ThemeStyleSheet value)
  RenderTexture get_targetTexture()
  void set_targetTexture(RenderTexture value)
  PanelScaleMode get_scaleMode()
  void set_scaleMode(PanelScaleMode value)
  float get_scale()
  void set_scale(float value)
  float get_referenceDpi()
  void set_referenceDpi(float value)
  float get_fallbackDpi()
  void set_fallbackDpi(float value)
  Vector2Int get_referenceResolution()
  void set_referenceResolution(Vector2Int value)
  PanelScreenMatchMode get_screenMatchMode()
  void set_screenMatchMode(PanelScreenMatchMode value)
  float get_match()
  void set_match(float value)
  float get_sortingOrder()
  void set_sortingOrder(float value)
  void ApplySortingOrder()
  int get_targetDisplay()
  void set_targetDisplay(int value)
  bool get_clearDepthStencil()
  void set_clearDepthStencil(bool value)
  float get_depthClearValue()
  bool get_clearColor()
  void set_clearColor(bool value)
  Color get_colorClearValue()
  void set_colorClearValue(Color value)
  BaseRuntimePanel get_panel()
  VisualElement get_visualTree()
  DynamicAtlasSettings get_dynamicAtlasSettings()
  void set_dynamicAtlasSettings(DynamicAtlasSettings value)
  void .ctor()
  void Reset()
  void OnEnable()
  void OnDisable()
  void DisposePanel()
  float get_ScreenDPI()
  void set_ScreenDPI(float value)
  void UpdateScreenDPI()
  void ApplyThemeStyleSheet(VisualElement root)
  void InitializeShaders()
  void ApplyPanelSettings()
  void SetScreenToPanelSpaceFunction(Func`2<Vector2, Vector2> screentoPanelSpaceFunction)
  float ResolveScale(Rect targetRect, float screenDpi)
  Rect GetDisplayRect()
  void AttachAndInsertUIDocumentToVisualTree(UIDocument uiDocument)
  void DetachUIDocument(UIDocument uiDocument)
--------------------------------------------------
Класс: UnityEngine.UIElements.RuntimeEventDispatcher
Наследуется от: object
Поля:
Свойства:
Методы:
  EventDispatcher Create()
--------------------------------------------------
Класс: UnityEngine.UIElements.IRuntimePanel
Поля:
Свойства:
  PanelSettings panelSettings
  GameObject selectableGameObject
Методы:
  PanelSettings get_panelSettings()
  GameObject get_selectableGameObject()
  void set_selectableGameObject(GameObject value)
--------------------------------------------------
Класс: UnityEngine.UIElements.RuntimePanel
Наследуется от: BaseRuntimePanel
Поля:
  EventDispatcher s_EventDispatcher
  PanelSettings m_PanelSettings
Свойства:
  PanelSettings panelSettings
Методы:
  PanelSettings get_panelSettings()
  RuntimePanel Create(ScriptableObject ownerObject)
  void .ctor(ScriptableObject ownerObject)
  void Update()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.RuntimePanelUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector2 ScreenToPanel(IPanel panel, Vector2 screenPosition)
  Vector2 CameraTransformWorldToPanel(IPanel panel, Vector3 worldPosition, Camera camera)
  Rect CameraTransformWorldToPanelRect(IPanel panel, Vector3 worldPosition, Vector2 worldSize, Camera camera)
  void ResetDynamicAtlas(IPanel panel)
  void SetTextureDirty(IPanel panel, Texture2D texture)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIDocumentList
Наследуется от: object
Поля:
  List`1<UIDocument> m_AttachedUIDocuments
Свойства:
Методы:
  void RemoveFromListAndFromVisualTree(UIDocument uiDocument)
  void AddToListAndToVisualTree(UIDocument uiDocument, VisualElement visualTree, int firstInsertIndex)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIDocument
Наследуется от: MonoBehaviour
Поля:
  string k_RootStyleClassName
  string k_VisualElementNameSuffix
  int k_DefaultSortingOrder
  int s_CurrentUIDocumentCounter
  int m_UIDocumentCreationIndex
  PanelSettings m_PanelSettings
  PanelSettings m_PreviousPanelSettings
  UIDocument m_ParentUI
  UIDocumentList m_ChildrenContent
  List`1<UIDocument> m_ChildrenContentCopy
  VisualTreeAsset sourceAsset
  VisualElement m_RootVisualElement
  int m_FirstChildInsertIndex
  float m_SortingOrder
Свойства:
  PanelSettings panelSettings
  UIDocument parentUI
  VisualTreeAsset visualTreeAsset
  VisualElement rootVisualElement
  int firstChildInserIndex
  float sortingOrder
Методы:
  PanelSettings get_panelSettings()
  void set_panelSettings(PanelSettings value)
  UIDocument get_parentUI()
  void set_parentUI(UIDocument value)
  VisualTreeAsset get_visualTreeAsset()
  void set_visualTreeAsset(VisualTreeAsset value)
  VisualElement get_rootVisualElement()
  int get_firstChildInserIndex()
  float get_sortingOrder()
  void set_sortingOrder(float value)
  void ApplySortingOrder()
  void .ctor()
  void Awake()
  void OnEnable()
  void SetupFromHierarchy()
  UIDocument FindUIDocumentParent()
  void Reset()
  void AddChildAndInsertContentToVisualTree(UIDocument child)
  void RemoveChild(UIDocument child)
  void RecreateUI()
  void SetupRootClassList()
  void AddRootVisualElementToTree()
  void RemoveFromHierarchy()
  void OnDisable()
  void OnTransformChildrenChanged()
  void OnTransformParentChanged()
  void ReactToHierarchyChanged()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIDocumentHierarchyUtil
Наследуется от: object
Поля:
  UIDocumentHierarchicalIndexComparer indexComparer
Свойства:
Методы:
  int FindHierarchicalSortedIndex(SortedDictionary`2<UIDocumentHierarchicalIndex, UIDocument> children, UIDocument child)
  void SetHierarchicalIndex(Transform childTransform, Transform directParentTransform, Transform mainParentTransform, UIDocumentHierarchicalIndex& hierarchicalIndex)
  void SetGlobalIndex(Transform objectTransform, Transform directParentTransform, UIDocumentHierarchicalIndex& globalIndex)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIDocumentHierarchicalIndexComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  int Compare(UIDocumentHierarchicalIndex x, UIDocumentHierarchicalIndex y)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIDocumentHierarchicalIndex
Наследуется от: ValueType
Поля:
  Int32[] pathToParent
Свойства:
Методы:
  int CompareTo(UIDocumentHierarchicalIndex other)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIRAtlasAllocator
Наследуется от: object
Поля:
  int <maxAtlasSize>k__BackingField
  int <maxImageWidth>k__BackingField
  int <maxImageHeight>k__BackingField
  int <virtualWidth>k__BackingField
  int <virtualHeight>k__BackingField
  int <physicalWidth>k__BackingField
  int <physicalHeight>k__BackingField
  AreaNode m_FirstUnpartitionedArea
  Row[] m_OpenRows
  int m_1SidePadding
  int m_2SidePadding
  ProfilerMarker s_MarkerTryAllocate
  bool <disposed>k__BackingField
Свойства:
  int maxAtlasSize
  int maxImageWidth
  int maxImageHeight
  int virtualWidth
  int virtualHeight
  int physicalWidth
  int physicalHeight
  bool disposed
Методы:
  int get_maxAtlasSize()
  int get_maxImageWidth()
  int get_maxImageHeight()
  int get_virtualWidth()
  void set_virtualWidth(int value)
  int get_virtualHeight()
  void set_virtualHeight(int value)
  int get_physicalWidth()
  void set_physicalWidth(int value)
  int get_physicalHeight()
  void set_physicalHeight(int value)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  int GetLog2OfNextPower(int n)
  void .ctor(int initialAtlasSize, int maxAtlasSize, int sidePadding)
  bool TryAllocate(int width, int height, RectInt& location)
  bool TryPartitionArea(AreaNode areaNode, int rowIndex, int rowHeight, int minWidth)
  void BuildAreas()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlasCore
Наследуется от: object
Поля:
  int m_InitialSize
  UIRAtlasAllocator m_Allocator
  Dictionary`2<Texture2D, RectInt> m_UVs
  bool m_ForceReblitAll
  FilterMode m_FilterMode
  ColorSpace m_ColorSpace
  TextureBlitter m_Blitter
  int m_2SidePadding
  int m_1SidePadding
  int m_MaxAtlasSize
  ProfilerMarker s_MarkerReset
  int <maxImageSize>k__BackingField
  RenderTextureFormat <format>k__BackingField
  int s_TextureCounter
  RenderTexture <atlas>k__BackingField
  bool <disposed>k__BackingField
Свойства:
  int maxImageSize
  RenderTextureFormat format
  RenderTexture atlas
  bool disposed
Методы:
  int get_maxImageSize()
  RenderTextureFormat get_format()
  RenderTexture get_atlas()
  void set_atlas(RenderTexture value)
  void .ctor(RenderTextureFormat format, FilterMode filterMode, int maxImageSize, int initialSize, int maxAtlasSize)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  void LogDisposeError()
  bool IsReleased()
  bool TryGetRect(Texture2D image, RectInt& uvs, Func`2<Texture2D, bool> filter)
  void UpdateTexture(Texture2D image)
  bool AllocateRect(int width, int height, RectInt& uvs)
  void EnqueueBlit(Texture image, RectInt srcRect, int x, int y, bool addBorder, Color tint)
  void Commit()
  void UpdateAtlasTexture()
  RenderTexture CreateAtlasTexture()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.DynamicAtlasPage
Наследуется от: object
Поля:
  TextureId <textureId>k__BackingField
  RenderTexture <atlas>k__BackingField
  RenderTextureFormat <format>k__BackingField
  FilterMode <filterMode>k__BackingField
  Vector2Int <minSize>k__BackingField
  Vector2Int <maxSize>k__BackingField
  int m_1Padding
  int m_2Padding
  Allocator2D m_Allocator
  TextureBlitter m_Blitter
  Vector2Int m_CurrentSize
  int s_TextureCounter
  bool <disposed>k__BackingField
Свойства:
  TextureId textureId
  RenderTexture atlas
  RenderTextureFormat format
  FilterMode filterMode
  Vector2Int minSize
  Vector2Int maxSize
  Vector2Int currentSize
  bool disposed
Методы:
  TextureId get_textureId()
  void set_textureId(TextureId value)
  RenderTexture get_atlas()
  void set_atlas(RenderTexture value)
  RenderTextureFormat get_format()
  FilterMode get_filterMode()
  Vector2Int get_minSize()
  Vector2Int get_maxSize()
  Vector2Int get_currentSize()
  void .ctor(RenderTextureFormat format, FilterMode filterMode, Vector2Int minSize, Vector2Int maxSize)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  bool TryAdd(Texture2D image, Alloc2D& alloc, RectInt& rect)
  void Update(Texture2D image, RectInt rect)
  void Remove(Alloc2D alloc)
  void Commit()
  void UpdateAtlasTexture()
  RenderTexture CreateAtlasTexture()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIRLayoutUpdater
Наследуется от: BaseVisualTreeUpdater
Поля:
  int kMaxValidateLayoutCount
  string s_Description
  ProfilerMarker s_ProfilerMarker
Свойства:
  ProfilerMarker profilerMarker
Методы:
  ProfilerMarker get_profilerMarker()
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void Update()
  void UpdateSubTree(VisualElement ve, int currentLayoutPass, bool isDisplayed)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Vertex
Наследуется от: ValueType
Поля:
  float nearZ
  Vector3 position
  Color32 tint
  Vector2 uv
  Color32 xformClipPages
  Color32 ids
  Color32 flags
  Color32 opacityColorPages
  Vector4 circle
  float textureId
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.MeshWriteData
Наследуется от: object
Поля:
  NativeSlice`1<Vertex> m_Vertices
  NativeSlice`1<ushort> m_Indices
  Rect m_UVRegion
  int currentIndex
  int currentVertex
Свойства:
  int vertexCount
  int indexCount
  Rect uvRegion
Методы:
  void .ctor()
  int get_vertexCount()
  int get_indexCount()
  Rect get_uvRegion()
  void SetNextVertex(Vertex vertex)
  void SetNextIndex(ushort index)
  void SetAllVertices(Vertex[] vertices)
  void SetAllVertices(NativeSlice`1<Vertex> vertices)
  void SetAllIndices(UInt16[] indices)
  void SetAllIndices(NativeSlice`1<ushort> indices)
  void Reset(NativeSlice`1<Vertex> vertices, NativeSlice`1<ushort> indices)
  void Reset(NativeSlice`1<Vertex> vertices, NativeSlice`1<ushort> indices, Rect uvRegion)
--------------------------------------------------
Класс: UnityEngine.UIElements.ColorPage
Наследуется от: ValueType
Поля:
  bool isValid
  Color32 pageAndID
Свойства:
Методы:
  ColorPage Init(RenderChain renderChain, BMPAlloc alloc)
--------------------------------------------------
Класс: UnityEngine.UIElements.MeshGenerationContextUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  void Rectangle(MeshGenerationContext mgc, RectangleParams rectParams)
  void Border(MeshGenerationContext mgc, BorderParams borderParams)
  void Text(MeshGenerationContext mgc, TextParams textParams, ITextHandle handle, float pixelsPerPoint)
  Vector2 ConvertBorderRadiusPercentToPoints(Vector2 borderRectSize, Length length)
  void GetVisualElementRadii(VisualElement ve, Vector2& topLeft, Vector2& bottomLeft, Vector2& topRight, Vector2& bottomRight)
  void AdjustBackgroundSizeForBorders(VisualElement visualElement, Rect& rect)
--------------------------------------------------
Класс: UnityEngine.UIElements.MeshGenerationContext
Наследуется от: object
Поля:
  IStylePainter painter
Свойства:
  VisualElement visualElement
Методы:
  VisualElement get_visualElement()
  void .ctor(IStylePainter painter)
  MeshWriteData Allocate(int vertexCount, int indexCount, Texture texture)
  MeshWriteData Allocate(int vertexCount, int indexCount, Texture texture, Material material, MeshFlags flags)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIRRepaintUpdater
Наследуется от: BaseVisualTreeUpdater
Поля:
  BaseVisualElementPanel attachedPanel
  RenderChain renderChain
  string s_Description
  ProfilerMarker s_ProfilerMarker
  bool <drawStats>k__BackingField
  bool <breakBatches>k__BackingField
  bool <disposed>k__BackingField
Свойства:
  ProfilerMarker profilerMarker
  bool drawStats
  bool breakBatches
  bool disposed
Методы:
  void .ctor()
  ProfilerMarker get_profilerMarker()
  bool get_drawStats()
  void set_drawStats(bool value)
  bool get_breakBatches()
  void set_breakBatches(bool value)
  void OnVersionChanged(VisualElement ve, VersionChangeType versionChangeType)
  void Update()
  RenderChain CreateRenderChain()
  void .cctor()
  void OnGraphicsResourcesRecreate(bool recreate)
  void OnPanelChanged(BaseVisualElementPanel obj)
  void AttachToPanel()
  void DetachFromPanel()
  void InitRenderChain()
  void DestroyRenderChain()
  void OnPanelAtlasChanged()
  void OnPanelHierarchyChanged(VisualElement ve, HierarchyChangeType changeType)
  void OnPanelStandardShaderChanged()
  void OnPanelStandardWorldSpaceShaderChanged()
  void ResetAllElementsDataRecursive(VisualElement ve)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: UnityEngine.UIElements.TextureId
Наследуется от: ValueType
Поля:
  int m_Index
  TextureId invalid
Свойства:
  int index
Методы:
  void .ctor(int index)
  int get_index()
  float ConvertToGpu()
  bool Equals(object obj)
  bool Equals(TextureId other)
  int GetHashCode()
  bool op_Equality(TextureId left, TextureId right)
  bool op_Inequality(TextureId left, TextureId right)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextureRegistry
Наследуется от: object
Поля:
  List`1<TextureInfo> m_Textures
  Dictionary`2<Texture, TextureId> m_TextureToId
  Stack`1<TextureId> m_FreeIds
  int maxTextures
  TextureRegistry <instance>k__BackingField
Свойства:
  TextureRegistry instance
Методы:
  TextureRegistry get_instance()
  Texture GetTexture(TextureId id)
  TextureId AllocAndAcquireDynamic()
  void UpdateDynamic(TextureId id, Texture texture)
  TextureId AllocAndAcquire(Texture texture, bool dynamic)
  TextureId Acquire(Texture tex)
  void Acquire(TextureId id)
  void Release(TextureId id)
  TextureId TextureToId(Texture texture)
  Statistics GatherStatistics()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIRUtility
Наследуется от: object
Поля:
  string k_DefaultShaderName
  string k_DefaultWorldSpaceShaderName
  float k_Epsilon
  float k_ClearZ
  float k_MeshPosZ
  float k_MaskPosZ
  int k_MaxMaskDepth
Свойства:
Методы:
  bool ShapeWindingIsClockwise(int maskDepth, int stencilRef)
  Vector4 ToVector4(Rect rc)
  bool IsRoundRect(VisualElement ve)
  void Multiply2D(Quaternion rotation, Vector2& point)
  bool IsVectorImageBackground(VisualElement ve)
  bool IsElementSelfHidden(VisualElement ve)
  void Destroy(Object obj)
  int GetPrevPow2(int n)
  int GetNextPow2(int n)
  int GetNextPow2Exp(int n)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.AngleUnit
Наследуется от: Enum
Поля:
  int value__
  AngleUnit Degree
  AngleUnit Gradian
  AngleUnit Radian
  AngleUnit Turn
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Angle
Наследуется от: ValueType
Поля:
  float m_Value
  Unit m_Unit
Свойства:
  float value
  AngleUnit unit
Методы:
  Angle Degrees(float value)
  Angle None()
  float get_value()
  void set_value(float value)
  AngleUnit get_unit()
  void set_unit(AngleUnit value)
  bool IsNone()
  void .ctor(float value)
  void .ctor(float value, AngleUnit unit)
  void .ctor(float value, Unit unit)
  float ToDegrees()
  Angle op_Implicit(float value)
  bool op_Equality(Angle lhs, Angle rhs)
  bool op_Inequality(Angle lhs, Angle rhs)
  bool Equals(Angle other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.Background
Наследуется от: ValueType
Поля:
  Texture2D m_Texture
  Sprite m_Sprite
  RenderTexture m_RenderTexture
  VectorImage m_VectorImage
Свойства:
  Texture2D texture
  Sprite sprite
  RenderTexture renderTexture
  VectorImage vectorImage
Методы:
  Texture2D get_texture()
  void set_texture(Texture2D value)
  Sprite get_sprite()
  void set_sprite(Sprite value)
  RenderTexture get_renderTexture()
  void set_renderTexture(RenderTexture value)
  VectorImage get_vectorImage()
  void set_vectorImage(VectorImage value)
  void .ctor(Texture2D t)
  Background FromTexture2D(Texture2D t)
  Background FromRenderTexture(RenderTexture rt)
  Background FromSprite(Sprite s)
  Background FromVectorImage(VectorImage vi)
  Background FromObject(object obj)
  bool op_Equality(Background lhs, Background rhs)
  bool op_Inequality(Background lhs, Background rhs)
  bool Equals(Background other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.ComputedStyle
Наследуется от: ValueType
Поля:
  StyleDataRef`1<InheritedData> inheritedData
  StyleDataRef`1<LayoutData> layoutData
  StyleDataRef`1<RareData> rareData
  StyleDataRef`1<TransformData> transformData
  StyleDataRef`1<TransitionData> transitionData
  StyleDataRef`1<VisualData> visualData
  YogaNode yogaNode
  Dictionary`2<string, StylePropertyValue> customProperties
  long matchingRulesHash
  float dpiScaling
  ComputedTransitionProperty[] computedTransitions
Свойства:
  int customPropertiesCount
  bool hasTransition
  Align alignContent
  Align alignItems
  Align alignSelf
  Color backgroundColor
  Background backgroundImage
  Color borderBottomColor
  Length borderBottomLeftRadius
  Length borderBottomRightRadius
  float borderBottomWidth
  Color borderLeftColor
  float borderLeftWidth
  Color borderRightColor
  float borderRightWidth
  Color borderTopColor
  Length borderTopLeftRadius
  Length borderTopRightRadius
  float borderTopWidth
  Length bottom
  Color color
  Cursor cursor
  DisplayStyle display
  Length flexBasis
  FlexDirection flexDirection
  float flexGrow
  float flexShrink
  Wrap flexWrap
  Length fontSize
  Length height
  Justify justifyContent
  Length left
  Length letterSpacing
  Length marginBottom
  Length marginLeft
  Length marginRight
  Length marginTop
  Length maxHeight
  Length maxWidth
  Length minHeight
  Length minWidth
  float opacity
  OverflowInternal overflow
  Length paddingBottom
  Length paddingLeft
  Length paddingRight
  Length paddingTop
  Position position
  Length right
  Rotate rotate
  Scale scale
  TextOverflow textOverflow
  TextShadow textShadow
  Length top
  TransformOrigin transformOrigin
  List`1<TimeValue> transitionDelay
  List`1<TimeValue> transitionDuration
  List`1<StylePropertyName> transitionProperty
  List`1<EasingFunction> transitionTimingFunction
  Translate translate
  Color unityBackgroundImageTintColor
  ScaleMode unityBackgroundScaleMode
  Font unityFont
  FontDefinition unityFontDefinition
  FontStyle unityFontStyleAndWeight
  OverflowClipBox unityOverflowClipBox
  Length unityParagraphSpacing
  int unitySliceBottom
  int unitySliceLeft
  int unitySliceRight
  int unitySliceTop
  TextAnchor unityTextAlign
  Color unityTextOutlineColor
  float unityTextOutlineWidth
  TextOverflowPosition unityTextOverflowPosition
  Visibility visibility
  WhiteSpace whiteSpace
  Length width
  Length wordSpacing
Методы:
  int get_customPropertiesCount()
  bool get_hasTransition()
  ComputedStyle Create()
  void FinalizeApply(ComputedStyle& parentStyle)
  void SyncWithLayout(YogaNode targetNode)
  bool ApplyGlobalKeyword(StylePropertyReader reader, ComputedStyle& parentStyle)
  bool ApplyGlobalKeyword(StylePropertyId id, StyleKeyword keyword, ComputedStyle& parentStyle)
  void RemoveCustomStyleProperty(StylePropertyReader reader)
  void ApplyCustomStyleProperty(StylePropertyReader reader)
  void ApplyAllPropertyInitial()
  void ResetComputedTransitions()
  VersionChangeType CompareChanges(ComputedStyle& x, ComputedStyle& y)
  bool StartAnimationInlineTextShadow(VisualElement element, ComputedStyle& computedStyle, StyleTextShadow textShadow, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationInlineRotate(VisualElement element, ComputedStyle& computedStyle, StyleRotate rotate, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationInlineTranslate(VisualElement element, ComputedStyle& computedStyle, StyleTranslate translate, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationInlineScale(VisualElement element, ComputedStyle& computedStyle, StyleScale scale, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationInlineTransformOrigin(VisualElement element, ComputedStyle& computedStyle, StyleTransformOrigin transformOrigin, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  Align get_alignContent()
  Align get_alignItems()
  Align get_alignSelf()
  Color get_backgroundColor()
  Background get_backgroundImage()
  Color get_borderBottomColor()
  Length get_borderBottomLeftRadius()
  Length get_borderBottomRightRadius()
  float get_borderBottomWidth()
  Color get_borderLeftColor()
  float get_borderLeftWidth()
  Color get_borderRightColor()
  float get_borderRightWidth()
  Color get_borderTopColor()
  Length get_borderTopLeftRadius()
  Length get_borderTopRightRadius()
  float get_borderTopWidth()
  Length get_bottom()
  Color get_color()
  Cursor get_cursor()
  DisplayStyle get_display()
  Length get_flexBasis()
  FlexDirection get_flexDirection()
  float get_flexGrow()
  float get_flexShrink()
  Wrap get_flexWrap()
  Length get_fontSize()
  Length get_height()
  Justify get_justifyContent()
  Length get_left()
  Length get_letterSpacing()
  Length get_marginBottom()
  Length get_marginLeft()
  Length get_marginRight()
  Length get_marginTop()
  Length get_maxHeight()
  Length get_maxWidth()
  Length get_minHeight()
  Length get_minWidth()
  float get_opacity()
  OverflowInternal get_overflow()
  Length get_paddingBottom()
  Length get_paddingLeft()
  Length get_paddingRight()
  Length get_paddingTop()
  Position get_position()
  Length get_right()
  Rotate get_rotate()
  Scale get_scale()
  TextOverflow get_textOverflow()
  TextShadow get_textShadow()
  Length get_top()
  TransformOrigin get_transformOrigin()
  List`1<TimeValue> get_transitionDelay()
  List`1<TimeValue> get_transitionDuration()
  List`1<StylePropertyName> get_transitionProperty()
  List`1<EasingFunction> get_transitionTimingFunction()
  Translate get_translate()
  Color get_unityBackgroundImageTintColor()
  ScaleMode get_unityBackgroundScaleMode()
  Font get_unityFont()
  FontDefinition get_unityFontDefinition()
  FontStyle get_unityFontStyleAndWeight()
  OverflowClipBox get_unityOverflowClipBox()
  Length get_unityParagraphSpacing()
  int get_unitySliceBottom()
  int get_unitySliceLeft()
  int get_unitySliceRight()
  int get_unitySliceTop()
  TextAnchor get_unityTextAlign()
  Color get_unityTextOutlineColor()
  float get_unityTextOutlineWidth()
  TextOverflowPosition get_unityTextOverflowPosition()
  Visibility get_visibility()
  WhiteSpace get_whiteSpace()
  Length get_width()
  Length get_wordSpacing()
  ComputedStyle Create(ComputedStyle& parentStyle)
  ComputedStyle CreateInitial()
  ComputedStyle Acquire()
  void Release()
  void CopyFrom(ComputedStyle& other)
  void ApplyProperties(StylePropertyReader reader, ComputedStyle& parentStyle)
  void ApplyStyleValue(StyleValue sv, ComputedStyle& parentStyle)
  void ApplyStyleValueManaged(StyleValueManaged sv, ComputedStyle& parentStyle)
  void ApplyStyleCursor(Cursor cursor)
  void ApplyStyleTextShadow(TextShadow st)
  void ApplyFromComputedStyle(StylePropertyId id, ComputedStyle& other)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Length newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, float newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, int newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Color newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Background newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Font newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, FontDefinition newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, TextShadow newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Translate newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, TransformOrigin newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Rotate newValue)
  void ApplyPropertyAnimation(VisualElement ve, StylePropertyId id, Scale newValue)
  bool StartAnimation(VisualElement element, StylePropertyId id, ComputedStyle& oldStyle, ComputedStyle& newStyle, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationAllProperty(VisualElement element, ComputedStyle& oldStyle, ComputedStyle& newStyle, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  bool StartAnimationInline(VisualElement element, StylePropertyId id, ComputedStyle& computedStyle, StyleValue sv, int durationMs, int delayMs, Func`2<float, float> easingCurve)
  void ApplyStyleTransformOrigin(TransformOrigin st)
  void ApplyStyleTranslate(Translate translateValue)
  void ApplyStyleRotate(Rotate rotateValue)
  void ApplyStyleScale(Scale scaleValue)
  void ApplyInitialValue(StylePropertyReader reader)
  void ApplyInitialValue(StylePropertyId id)
  void ApplyUnsetValue(StylePropertyReader reader, ComputedStyle& parentStyle)
  void ApplyUnsetValue(StylePropertyId id, ComputedStyle& parentStyle)
--------------------------------------------------
Класс: UnityEngine.UIElements.ComputedTransitionProperty
Наследуется от: ValueType
Поля:
  StylePropertyId id
  int durationMs
  int delayMs
  Func`2<float, float> easingCurve
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.ComputedTransitionUtils
Наследуется от: object
Поля:
  List`1<ComputedTransitionProperty> s_ComputedTransitionsBuffer
Свойства:
Методы:
  void UpdateComputedTransitions(ComputedStyle& computedStyle)
  bool HasTransitionProperty(ComputedStyle& computedStyle, StylePropertyId id)
  bool GetTransitionProperty(ComputedStyle& computedStyle, StylePropertyId id, ComputedTransitionProperty& result)
  ComputedTransitionProperty[] GetOrComputeTransitionPropertyData(ComputedStyle& computedStyle)
  int GetTransitionHashCode(ComputedStyle& cs)
  bool SameTransitionProperty(ComputedStyle& x, ComputedStyle& y)
  bool SameTransitionProperty(List`1<StylePropertyName> a, List`1<StylePropertyName> b)
  bool SameTransitionProperty(List`1<TimeValue> a, List`1<TimeValue> b)
  void ComputeTransitionPropertyData(ComputedStyle& computedStyle, List`1<ComputedTransitionProperty> outData)
  T GetWrappingTransitionData(List`1<T> list, int i, T defaultValue)
  int ConvertTransitionTime(TimeValue time)
  Func`2<float, float> ConvertTransitionFunction(EasingMode mode)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.CustomStyleProperty`1
Наследуется от: ValueType
Поля:
  string <name>k__BackingField
Свойства:
  string name
Методы:
  string get_name()
  void set_name(string value)
  void .ctor(string propertyName)
  bool Equals(object obj)
  bool Equals(CustomStyleProperty`1<T> other)
  int GetHashCode()
  bool op_Equality(CustomStyleProperty`1<T> a, CustomStyleProperty`1<T> b)
  bool op_Inequality(CustomStyleProperty`1<T> a, CustomStyleProperty`1<T> b)
--------------------------------------------------
Класс: UnityEngine.UIElements.ICustomStyle
Поля:
Свойства:
Методы:
  bool TryGetValue(CustomStyleProperty`1<float> property, Single& value)
  bool TryGetValue(CustomStyleProperty`1<int> property, Int32& value)
  bool TryGetValue(CustomStyleProperty`1<bool> property, Boolean& value)
  bool TryGetValue(CustomStyleProperty`1<Color> property, Color& value)
  bool TryGetValue(CustomStyleProperty`1<Texture2D> property, Texture2D& value)
  bool TryGetValue(CustomStyleProperty`1<Sprite> property, Sprite& value)
  bool TryGetValue(CustomStyleProperty`1<VectorImage> property, VectorImage& value)
  bool TryGetValue(CustomStyleProperty`1<T> property, T& value)
  bool TryGetValue(CustomStyleProperty`1<string> property, String& value)
--------------------------------------------------
Класс: UnityEngine.UIElements.EasingMode
Наследуется от: Enum
Поля:
  int value__
  EasingMode Ease
  EasingMode EaseIn
  EasingMode EaseOut
  EasingMode EaseInOut
  EasingMode Linear
  EasingMode EaseInSine
  EasingMode EaseOutSine
  EasingMode EaseInOutSine
  EasingMode EaseInCubic
  EasingMode EaseOutCubic
  EasingMode EaseInOutCubic
  EasingMode EaseInCirc
  EasingMode EaseOutCirc
  EasingMode EaseInOutCirc
  EasingMode EaseInElastic
  EasingMode EaseOutElastic
  EasingMode EaseInOutElastic
  EasingMode EaseInBack
  EasingMode EaseOutBack
  EasingMode EaseInOutBack
  EasingMode EaseInBounce
  EasingMode EaseOutBounce
  EasingMode EaseInOutBounce
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.EasingFunction
Наследуется от: ValueType
Поля:
  EasingMode m_Mode
Свойства:
  EasingMode mode
Методы:
  EasingMode get_mode()
  void set_mode(EasingMode value)
  void .ctor(EasingMode mode)
  EasingFunction op_Implicit(EasingMode easingMode)
  bool op_Equality(EasingFunction lhs, EasingFunction rhs)
  bool op_Inequality(EasingFunction lhs, EasingFunction rhs)
  bool Equals(EasingFunction other)
  bool Equals(object obj)
  string ToString()
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.FontDefinition
Наследуется от: ValueType
Поля:
  Font m_Font
  FontAsset m_FontAsset
Свойства:
  Font font
  FontAsset fontAsset
Методы:
  Font get_font()
  void set_font(Font value)
  FontAsset get_fontAsset()
  void set_fontAsset(FontAsset value)
  FontDefinition FromFont(Font f)
  FontDefinition FromSDFFont(FontAsset f)
  FontDefinition FromObject(object obj)
  bool IsEmpty()
  string ToString()
  bool Equals(FontDefinition other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(FontDefinition left, FontDefinition right)
  bool op_Inequality(FontDefinition left, FontDefinition right)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueCollection
Наследуется от: object
Поля:
  List`1<StyleValue> m_Values
Свойства:
Методы:
  StyleLength GetStyleLength(StylePropertyId id)
  StyleFloat GetStyleFloat(StylePropertyId id)
  StyleInt GetStyleInt(StylePropertyId id)
  StyleColor GetStyleColor(StylePropertyId id)
  StyleBackground GetStyleBackground(StylePropertyId id)
  StyleFont GetStyleFont(StylePropertyId id)
  StyleFontDefinition GetStyleFontDefinition(StylePropertyId id)
  bool TryGetStyleValue(StylePropertyId id, StyleValue& value)
  void SetStyleValue(StyleValue value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.InlineStyleAccess
Наследуется от: StyleValueCollection
Поля:
  StylePropertyReader s_StylePropertyReader
  List`1<StyleValueManaged> m_ValuesManaged
  VisualElement <ve>k__BackingField
  bool m_HasInlineCursor
  StyleCursor m_InlineCursor
  bool m_HasInlineTextShadow
  StyleTextShadow m_InlineTextShadow
  bool m_HasInlineTransformOrigin
  StyleTransformOrigin m_InlineTransformOrigin
  bool m_HasInlineTranslate
  StyleTranslate m_InlineTranslateOperation
  bool m_HasInlineRotate
  StyleRotate m_InlineRotateOperation
  bool m_HasInlineScale
  StyleScale m_InlineScale
  InlineRule m_InlineRule
Свойства:
  VisualElement ve
  InlineRule inlineRule
  StyleCursor UnityEngine.UIElements.IStyle.cursor
  StyleTextShadow UnityEngine.UIElements.IStyle.textShadow
  StyleTransformOrigin UnityEngine.UIElements.IStyle.transformOrigin
  StyleTranslate UnityEngine.UIElements.IStyle.translate
  StyleRotate UnityEngine.UIElements.IStyle.rotate
  StyleScale UnityEngine.UIElements.IStyle.scale
  StyleEnum`1<Align> UnityEngine.UIElements.IStyle.alignContent
  StyleEnum`1<Align> UnityEngine.UIElements.IStyle.alignItems
  StyleEnum`1<Align> UnityEngine.UIElements.IStyle.alignSelf
  StyleColor UnityEngine.UIElements.IStyle.backgroundColor
  StyleBackground UnityEngine.UIElements.IStyle.backgroundImage
  StyleColor UnityEngine.UIElements.IStyle.borderBottomColor
  StyleLength UnityEngine.UIElements.IStyle.borderBottomLeftRadius
  StyleLength UnityEngine.UIElements.IStyle.borderBottomRightRadius
  StyleFloat UnityEngine.UIElements.IStyle.borderBottomWidth
  StyleColor UnityEngine.UIElements.IStyle.borderLeftColor
  StyleFloat UnityEngine.UIElements.IStyle.borderLeftWidth
  StyleColor UnityEngine.UIElements.IStyle.borderRightColor
  StyleFloat UnityEngine.UIElements.IStyle.borderRightWidth
  StyleColor UnityEngine.UIElements.IStyle.borderTopColor
  StyleLength UnityEngine.UIElements.IStyle.borderTopLeftRadius
  StyleLength UnityEngine.UIElements.IStyle.borderTopRightRadius
  StyleFloat UnityEngine.UIElements.IStyle.borderTopWidth
  StyleLength UnityEngine.UIElements.IStyle.bottom
  StyleColor UnityEngine.UIElements.IStyle.color
  StyleEnum`1<DisplayStyle> UnityEngine.UIElements.IStyle.display
  StyleLength UnityEngine.UIElements.IStyle.flexBasis
  StyleEnum`1<FlexDirection> UnityEngine.UIElements.IStyle.flexDirection
  StyleFloat UnityEngine.UIElements.IStyle.flexGrow
  StyleFloat UnityEngine.UIElements.IStyle.flexShrink
  StyleEnum`1<Wrap> UnityEngine.UIElements.IStyle.flexWrap
  StyleLength UnityEngine.UIElements.IStyle.fontSize
  StyleLength UnityEngine.UIElements.IStyle.height
  StyleEnum`1<Justify> UnityEngine.UIElements.IStyle.justifyContent
  StyleLength UnityEngine.UIElements.IStyle.left
  StyleLength UnityEngine.UIElements.IStyle.letterSpacing
  StyleLength UnityEngine.UIElements.IStyle.marginBottom
  StyleLength UnityEngine.UIElements.IStyle.marginLeft
  StyleLength UnityEngine.UIElements.IStyle.marginRight
  StyleLength UnityEngine.UIElements.IStyle.marginTop
  StyleLength UnityEngine.UIElements.IStyle.maxHeight
  StyleLength UnityEngine.UIElements.IStyle.maxWidth
  StyleLength UnityEngine.UIElements.IStyle.minHeight
  StyleLength UnityEngine.UIElements.IStyle.minWidth
  StyleFloat UnityEngine.UIElements.IStyle.opacity
  StyleEnum`1<Overflow> UnityEngine.UIElements.IStyle.overflow
  StyleLength UnityEngine.UIElements.IStyle.paddingBottom
  StyleLength UnityEngine.UIElements.IStyle.paddingLeft
  StyleLength UnityEngine.UIElements.IStyle.paddingRight
  StyleLength UnityEngine.UIElements.IStyle.paddingTop
  StyleEnum`1<Position> UnityEngine.UIElements.IStyle.position
  StyleLength UnityEngine.UIElements.IStyle.right
  StyleEnum`1<TextOverflow> UnityEngine.UIElements.IStyle.textOverflow
  StyleLength UnityEngine.UIElements.IStyle.top
  StyleList`1<TimeValue> UnityEngine.UIElements.IStyle.transitionDelay
  StyleList`1<TimeValue> UnityEngine.UIElements.IStyle.transitionDuration
  StyleList`1<StylePropertyName> UnityEngine.UIElements.IStyle.transitionProperty
  StyleList`1<EasingFunction> UnityEngine.UIElements.IStyle.transitionTimingFunction
  StyleColor UnityEngine.UIElements.IStyle.unityBackgroundImageTintColor
  StyleEnum`1<ScaleMode> UnityEngine.UIElements.IStyle.unityBackgroundScaleMode
  StyleFont UnityEngine.UIElements.IStyle.unityFont
  StyleFontDefinition UnityEngine.UIElements.IStyle.unityFontDefinition
  StyleEnum`1<FontStyle> UnityEngine.UIElements.IStyle.unityFontStyleAndWeight
  StyleEnum`1<OverflowClipBox> UnityEngine.UIElements.IStyle.unityOverflowClipBox
  StyleLength UnityEngine.UIElements.IStyle.unityParagraphSpacing
  StyleInt UnityEngine.UIElements.IStyle.unitySliceBottom
  StyleInt UnityEngine.UIElements.IStyle.unitySliceLeft
  StyleInt UnityEngine.UIElements.IStyle.unitySliceRight
  StyleInt UnityEngine.UIElements.IStyle.unitySliceTop
  StyleEnum`1<TextAnchor> UnityEngine.UIElements.IStyle.unityTextAlign
  StyleColor UnityEngine.UIElements.IStyle.unityTextOutlineColor
  StyleFloat UnityEngine.UIElements.IStyle.unityTextOutlineWidth
  StyleEnum`1<TextOverflowPosition> UnityEngine.UIElements.IStyle.unityTextOverflowPosition
  StyleEnum`1<Visibility> UnityEngine.UIElements.IStyle.visibility
  StyleEnum`1<WhiteSpace> UnityEngine.UIElements.IStyle.whiteSpace
  StyleLength UnityEngine.UIElements.IStyle.width
  StyleLength UnityEngine.UIElements.IStyle.wordSpacing
Методы:
  VisualElement get_ve()
  void set_ve(VisualElement value)
  InlineRule get_inlineRule()
  void .ctor(VisualElement ve)
  void Finalize()
  void SetInlineRule(StyleSheet sheet, StyleRule rule)
  bool IsValueSet(StylePropertyId id)
  void ApplyInlineStyles(ComputedStyle& computedStyle)
  StyleCursor UnityEngine.UIElements.IStyle.get_cursor()
  void UnityEngine.UIElements.IStyle.set_cursor(StyleCursor value)
  StyleTextShadow UnityEngine.UIElements.IStyle.get_textShadow()
  void UnityEngine.UIElements.IStyle.set_textShadow(StyleTextShadow value)
  StyleList`1<T> GetStyleList(StylePropertyId id)
  void SetStyleValueManaged(StyleValueManaged value)
  bool TryGetStyleValueManaged(StylePropertyId id, StyleValueManaged& value)
  StyleTransformOrigin UnityEngine.UIElements.IStyle.get_transformOrigin()
  void UnityEngine.UIElements.IStyle.set_transformOrigin(StyleTransformOrigin value)
  StyleTranslate UnityEngine.UIElements.IStyle.get_translate()
  void UnityEngine.UIElements.IStyle.set_translate(StyleTranslate value)
  StyleRotate UnityEngine.UIElements.IStyle.get_rotate()
  void UnityEngine.UIElements.IStyle.set_rotate(StyleRotate value)
  StyleScale UnityEngine.UIElements.IStyle.get_scale()
  void UnityEngine.UIElements.IStyle.set_scale(StyleScale value)
  bool SetStyleValue(StylePropertyId id, StyleLength inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleFloat inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleInt inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleColor inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleEnum`1<T> inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleBackground inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleFontDefinition inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleFont inlineValue)
  bool SetStyleValue(StylePropertyId id, StyleList`1<T> inlineValue)
  bool SetInlineCursor(StyleCursor inlineValue)
  void ApplyStyleCursor(StyleCursor cursor)
  bool SetInlineTextShadow(StyleTextShadow inlineValue)
  void ApplyStyleTextShadow(StyleTextShadow textShadow)
  bool SetInlineTransformOrigin(StyleTransformOrigin inlineValue)
  void ApplyStyleTransformOrigin(StyleTransformOrigin transformOrigin)
  bool SetInlineTranslate(StyleTranslate inlineValue)
  void ApplyStyleTranslate(StyleTranslate translate)
  bool SetInlineScale(StyleScale inlineValue)
  void ApplyStyleScale(StyleScale scale)
  bool SetInlineRotate(StyleRotate inlineValue)
  void ApplyStyleRotate(StyleRotate rotate)
  void ApplyStyleValue(StyleValue value)
  void ApplyStyleValue(StyleValueManaged value)
  bool RemoveInlineStyle(StylePropertyId id)
  void ApplyFromComputedStyle(StylePropertyId id, ComputedStyle& newStyle)
  bool TryGetInlineCursor(StyleCursor& value)
  bool TryGetInlineTextShadow(StyleTextShadow& value)
  bool TryGetInlineTransformOrigin(StyleTransformOrigin& value)
  bool TryGetInlineTranslate(StyleTranslate& value)
  bool TryGetInlineRotate(StyleRotate& value)
  bool TryGetInlineScale(StyleScale& value)
  StyleEnum`1<Align> UnityEngine.UIElements.IStyle.get_alignContent()
  void UnityEngine.UIElements.IStyle.set_alignContent(StyleEnum`1<Align> value)
  StyleEnum`1<Align> UnityEngine.UIElements.IStyle.get_alignItems()
  void UnityEngine.UIElements.IStyle.set_alignItems(StyleEnum`1<Align> value)
  StyleEnum`1<Align> UnityEngine.UIElements.IStyle.get_alignSelf()
  void UnityEngine.UIElements.IStyle.set_alignSelf(StyleEnum`1<Align> value)
  StyleColor UnityEngine.UIElements.IStyle.get_backgroundColor()
  void UnityEngine.UIElements.IStyle.set_backgroundColor(StyleColor value)
  StyleBackground UnityEngine.UIElements.IStyle.get_backgroundImage()
  void UnityEngine.UIElements.IStyle.set_backgroundImage(StyleBackground value)
  StyleColor UnityEngine.UIElements.IStyle.get_borderBottomColor()
  void UnityEngine.UIElements.IStyle.set_borderBottomColor(StyleColor value)
  StyleLength UnityEngine.UIElements.IStyle.get_borderBottomLeftRadius()
  void UnityEngine.UIElements.IStyle.set_borderBottomLeftRadius(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_borderBottomRightRadius()
  void UnityEngine.UIElements.IStyle.set_borderBottomRightRadius(StyleLength value)
  StyleFloat UnityEngine.UIElements.IStyle.get_borderBottomWidth()
  void UnityEngine.UIElements.IStyle.set_borderBottomWidth(StyleFloat value)
  StyleColor UnityEngine.UIElements.IStyle.get_borderLeftColor()
  void UnityEngine.UIElements.IStyle.set_borderLeftColor(StyleColor value)
  StyleFloat UnityEngine.UIElements.IStyle.get_borderLeftWidth()
  void UnityEngine.UIElements.IStyle.set_borderLeftWidth(StyleFloat value)
  StyleColor UnityEngine.UIElements.IStyle.get_borderRightColor()
  void UnityEngine.UIElements.IStyle.set_borderRightColor(StyleColor value)
  StyleFloat UnityEngine.UIElements.IStyle.get_borderRightWidth()
  void UnityEngine.UIElements.IStyle.set_borderRightWidth(StyleFloat value)
  StyleColor UnityEngine.UIElements.IStyle.get_borderTopColor()
  void UnityEngine.UIElements.IStyle.set_borderTopColor(StyleColor value)
  StyleLength UnityEngine.UIElements.IStyle.get_borderTopLeftRadius()
  void UnityEngine.UIElements.IStyle.set_borderTopLeftRadius(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_borderTopRightRadius()
  void UnityEngine.UIElements.IStyle.set_borderTopRightRadius(StyleLength value)
  StyleFloat UnityEngine.UIElements.IStyle.get_borderTopWidth()
  void UnityEngine.UIElements.IStyle.set_borderTopWidth(StyleFloat value)
  StyleLength UnityEngine.UIElements.IStyle.get_bottom()
  void UnityEngine.UIElements.IStyle.set_bottom(StyleLength value)
  StyleColor UnityEngine.UIElements.IStyle.get_color()
  void UnityEngine.UIElements.IStyle.set_color(StyleColor value)
  StyleEnum`1<DisplayStyle> UnityEngine.UIElements.IStyle.get_display()
  void UnityEngine.UIElements.IStyle.set_display(StyleEnum`1<DisplayStyle> value)
  StyleLength UnityEngine.UIElements.IStyle.get_flexBasis()
  void UnityEngine.UIElements.IStyle.set_flexBasis(StyleLength value)
  StyleEnum`1<FlexDirection> UnityEngine.UIElements.IStyle.get_flexDirection()
  void UnityEngine.UIElements.IStyle.set_flexDirection(StyleEnum`1<FlexDirection> value)
  StyleFloat UnityEngine.UIElements.IStyle.get_flexGrow()
  void UnityEngine.UIElements.IStyle.set_flexGrow(StyleFloat value)
  StyleFloat UnityEngine.UIElements.IStyle.get_flexShrink()
  void UnityEngine.UIElements.IStyle.set_flexShrink(StyleFloat value)
  StyleEnum`1<Wrap> UnityEngine.UIElements.IStyle.get_flexWrap()
  void UnityEngine.UIElements.IStyle.set_flexWrap(StyleEnum`1<Wrap> value)
  StyleLength UnityEngine.UIElements.IStyle.get_fontSize()
  void UnityEngine.UIElements.IStyle.set_fontSize(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_height()
  void UnityEngine.UIElements.IStyle.set_height(StyleLength value)
  StyleEnum`1<Justify> UnityEngine.UIElements.IStyle.get_justifyContent()
  void UnityEngine.UIElements.IStyle.set_justifyContent(StyleEnum`1<Justify> value)
  StyleLength UnityEngine.UIElements.IStyle.get_left()
  void UnityEngine.UIElements.IStyle.set_left(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_letterSpacing()
  void UnityEngine.UIElements.IStyle.set_letterSpacing(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_marginBottom()
  void UnityEngine.UIElements.IStyle.set_marginBottom(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_marginLeft()
  void UnityEngine.UIElements.IStyle.set_marginLeft(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_marginRight()
  void UnityEngine.UIElements.IStyle.set_marginRight(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_marginTop()
  void UnityEngine.UIElements.IStyle.set_marginTop(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_maxHeight()
  void UnityEngine.UIElements.IStyle.set_maxHeight(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_maxWidth()
  void UnityEngine.UIElements.IStyle.set_maxWidth(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_minHeight()
  void UnityEngine.UIElements.IStyle.set_minHeight(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_minWidth()
  void UnityEngine.UIElements.IStyle.set_minWidth(StyleLength value)
  StyleFloat UnityEngine.UIElements.IStyle.get_opacity()
  void UnityEngine.UIElements.IStyle.set_opacity(StyleFloat value)
  StyleEnum`1<Overflow> UnityEngine.UIElements.IStyle.get_overflow()
  void UnityEngine.UIElements.IStyle.set_overflow(StyleEnum`1<Overflow> value)
  StyleLength UnityEngine.UIElements.IStyle.get_paddingBottom()
  void UnityEngine.UIElements.IStyle.set_paddingBottom(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_paddingLeft()
  void UnityEngine.UIElements.IStyle.set_paddingLeft(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_paddingRight()
  void UnityEngine.UIElements.IStyle.set_paddingRight(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_paddingTop()
  void UnityEngine.UIElements.IStyle.set_paddingTop(StyleLength value)
  StyleEnum`1<Position> UnityEngine.UIElements.IStyle.get_position()
  void UnityEngine.UIElements.IStyle.set_position(StyleEnum`1<Position> value)
  StyleLength UnityEngine.UIElements.IStyle.get_right()
  void UnityEngine.UIElements.IStyle.set_right(StyleLength value)
  StyleEnum`1<TextOverflow> UnityEngine.UIElements.IStyle.get_textOverflow()
  void UnityEngine.UIElements.IStyle.set_textOverflow(StyleEnum`1<TextOverflow> value)
  StyleLength UnityEngine.UIElements.IStyle.get_top()
  void UnityEngine.UIElements.IStyle.set_top(StyleLength value)
  StyleList`1<TimeValue> UnityEngine.UIElements.IStyle.get_transitionDelay()
  void UnityEngine.UIElements.IStyle.set_transitionDelay(StyleList`1<TimeValue> value)
  StyleList`1<TimeValue> UnityEngine.UIElements.IStyle.get_transitionDuration()
  void UnityEngine.UIElements.IStyle.set_transitionDuration(StyleList`1<TimeValue> value)
  StyleList`1<StylePropertyName> UnityEngine.UIElements.IStyle.get_transitionProperty()
  void UnityEngine.UIElements.IStyle.set_transitionProperty(StyleList`1<StylePropertyName> value)
  StyleList`1<EasingFunction> UnityEngine.UIElements.IStyle.get_transitionTimingFunction()
  void UnityEngine.UIElements.IStyle.set_transitionTimingFunction(StyleList`1<EasingFunction> value)
  StyleColor UnityEngine.UIElements.IStyle.get_unityBackgroundImageTintColor()
  void UnityEngine.UIElements.IStyle.set_unityBackgroundImageTintColor(StyleColor value)
  StyleEnum`1<ScaleMode> UnityEngine.UIElements.IStyle.get_unityBackgroundScaleMode()
  void UnityEngine.UIElements.IStyle.set_unityBackgroundScaleMode(StyleEnum`1<ScaleMode> value)
  StyleFont UnityEngine.UIElements.IStyle.get_unityFont()
  void UnityEngine.UIElements.IStyle.set_unityFont(StyleFont value)
  StyleFontDefinition UnityEngine.UIElements.IStyle.get_unityFontDefinition()
  void UnityEngine.UIElements.IStyle.set_unityFontDefinition(StyleFontDefinition value)
  StyleEnum`1<FontStyle> UnityEngine.UIElements.IStyle.get_unityFontStyleAndWeight()
  void UnityEngine.UIElements.IStyle.set_unityFontStyleAndWeight(StyleEnum`1<FontStyle> value)
  StyleEnum`1<OverflowClipBox> UnityEngine.UIElements.IStyle.get_unityOverflowClipBox()
  void UnityEngine.UIElements.IStyle.set_unityOverflowClipBox(StyleEnum`1<OverflowClipBox> value)
  StyleLength UnityEngine.UIElements.IStyle.get_unityParagraphSpacing()
  void UnityEngine.UIElements.IStyle.set_unityParagraphSpacing(StyleLength value)
  StyleInt UnityEngine.UIElements.IStyle.get_unitySliceBottom()
  void UnityEngine.UIElements.IStyle.set_unitySliceBottom(StyleInt value)
  StyleInt UnityEngine.UIElements.IStyle.get_unitySliceLeft()
  void UnityEngine.UIElements.IStyle.set_unitySliceLeft(StyleInt value)
  StyleInt UnityEngine.UIElements.IStyle.get_unitySliceRight()
  void UnityEngine.UIElements.IStyle.set_unitySliceRight(StyleInt value)
  StyleInt UnityEngine.UIElements.IStyle.get_unitySliceTop()
  void UnityEngine.UIElements.IStyle.set_unitySliceTop(StyleInt value)
  StyleEnum`1<TextAnchor> UnityEngine.UIElements.IStyle.get_unityTextAlign()
  void UnityEngine.UIElements.IStyle.set_unityTextAlign(StyleEnum`1<TextAnchor> value)
  StyleColor UnityEngine.UIElements.IStyle.get_unityTextOutlineColor()
  void UnityEngine.UIElements.IStyle.set_unityTextOutlineColor(StyleColor value)
  StyleFloat UnityEngine.UIElements.IStyle.get_unityTextOutlineWidth()
  void UnityEngine.UIElements.IStyle.set_unityTextOutlineWidth(StyleFloat value)
  StyleEnum`1<TextOverflowPosition> UnityEngine.UIElements.IStyle.get_unityTextOverflowPosition()
  void UnityEngine.UIElements.IStyle.set_unityTextOverflowPosition(StyleEnum`1<TextOverflowPosition> value)
  StyleEnum`1<Visibility> UnityEngine.UIElements.IStyle.get_visibility()
  void UnityEngine.UIElements.IStyle.set_visibility(StyleEnum`1<Visibility> value)
  StyleEnum`1<WhiteSpace> UnityEngine.UIElements.IStyle.get_whiteSpace()
  void UnityEngine.UIElements.IStyle.set_whiteSpace(StyleEnum`1<WhiteSpace> value)
  StyleLength UnityEngine.UIElements.IStyle.get_width()
  void UnityEngine.UIElements.IStyle.set_width(StyleLength value)
  StyleLength UnityEngine.UIElements.IStyle.get_wordSpacing()
  void UnityEngine.UIElements.IStyle.set_wordSpacing(StyleLength value)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.LengthUnit
Наследуется от: Enum
Поля:
  int value__
  LengthUnit Pixel
  LengthUnit Percent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.Length
Наследуется от: ValueType
Поля:
  float k_MaxValue
  float m_Value
  Unit m_Unit
Свойства:
  float value
  LengthUnit unit
Методы:
  Length Percent(float value)
  Length Auto()
  Length None()
  float get_value()
  void set_value(float value)
  LengthUnit get_unit()
  void set_unit(LengthUnit value)
  bool IsAuto()
  bool IsNone()
  void .ctor(float value)
  void .ctor(float value, LengthUnit unit)
  void .ctor(float value, Unit unit)
  Length op_Implicit(float value)
  bool op_Equality(Length lhs, Length rhs)
  bool op_Inequality(Length lhs, Length rhs)
  bool Equals(Length other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.Rotate
Наследуется от: ValueType
Поля:
  Angle m_Angle
  Vector3 m_Axis
  bool m_IsNone
Свойства:
  Angle angle
  Vector3 axis
Методы:
  void .ctor(Angle angle, Vector3 axis)
  void .ctor(Angle angle)
  Rotate Initial()
  Rotate None()
  Angle get_angle()
  void set_angle(Angle value)
  Vector3 get_axis()
  void set_axis(Vector3 value)
  bool IsNone()
  bool op_Equality(Rotate lhs, Rotate rhs)
  bool op_Inequality(Rotate lhs, Rotate rhs)
  bool Equals(Rotate other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  Quaternion ToQuaternion()
--------------------------------------------------
Класс: UnityEngine.UIElements.Scale
Наследуется от: ValueType
Поля:
  Vector3 m_Scale
  bool m_IsNone
Свойства:
  Vector3 value
Методы:
  void .ctor(Vector3 scale)
  Scale Initial()
  Scale None()
  Vector3 get_value()
  void set_value(Vector3 value)
  bool IsNone()
  bool op_Equality(Scale lhs, Scale rhs)
  bool op_Inequality(Scale lhs, Scale rhs)
  bool Equals(Scale other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleBackground
Наследуется от: ValueType
Поля:
  Background m_Value
  StyleKeyword m_Keyword
Свойства:
  Background value
  StyleKeyword keyword
Методы:
  Background get_value()
  void set_value(Background value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Background v)
  void .ctor(Texture2D v)
  void .ctor(Sprite v)
  void .ctor(VectorImage v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Texture2D v, StyleKeyword keyword)
  void .ctor(Sprite v, StyleKeyword keyword)
  void .ctor(VectorImage v, StyleKeyword keyword)
  void .ctor(Background v, StyleKeyword keyword)
  bool op_Equality(StyleBackground lhs, StyleBackground rhs)
  bool op_Inequality(StyleBackground lhs, StyleBackground rhs)
  StyleBackground op_Implicit(StyleKeyword keyword)
  StyleBackground op_Implicit(Background v)
  StyleBackground op_Implicit(Texture2D v)
  bool Equals(StyleBackground other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleColor
Наследуется от: ValueType
Поля:
  Color m_Value
  StyleKeyword m_Keyword
Свойства:
  Color value
  StyleKeyword keyword
Методы:
  Color get_value()
  void set_value(Color value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Color v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Color v, StyleKeyword keyword)
  bool op_Equality(StyleColor lhs, StyleColor rhs)
  bool op_Inequality(StyleColor lhs, StyleColor rhs)
  bool op_Equality(StyleColor lhs, Color rhs)
  bool op_Inequality(StyleColor lhs, Color rhs)
  StyleColor op_Implicit(StyleKeyword keyword)
  StyleColor op_Implicit(Color v)
  bool Equals(StyleColor other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleCursor
Наследуется от: ValueType
Поля:
  Cursor m_Value
  StyleKeyword m_Keyword
Свойства:
  Cursor value
  StyleKeyword keyword
Методы:
  Cursor get_value()
  void set_value(Cursor value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Cursor v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Cursor v, StyleKeyword keyword)
  bool op_Equality(StyleCursor lhs, StyleCursor rhs)
  bool op_Inequality(StyleCursor lhs, StyleCursor rhs)
  StyleCursor op_Implicit(StyleKeyword keyword)
  StyleCursor op_Implicit(Cursor v)
  bool Equals(StyleCursor other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleDataRef`1
Наследуется от: ValueType
Поля:
  RefCounted<T> m_Ref
Свойства:
  int refCount
  UInt32 id
Методы:
  int get_refCount()
  UInt32 get_id()
  StyleDataRef`1<T> Acquire()
  void Release()
  void CopyFrom(StyleDataRef`1<T> other)
  T& modreq(System.Runtime.InteropServices.InAttribute) Read()
  T& Write()
  StyleDataRef`1<T> Create()
  int GetHashCode()
  bool op_Equality(StyleDataRef`1<T> lhs, StyleDataRef`1<T> rhs)
  bool op_Inequality(StyleDataRef`1<T> lhs, StyleDataRef`1<T> rhs)
  bool Equals(StyleDataRef`1<T> other)
  bool Equals(object obj)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleDebug
Наследуется от: object
Поля:
  int UnitySpecificity
  int UndefinedSpecificity
  int InheritedSpecificity
  int InlineSpecificity
Свойства:
Методы:
  String[] GetStylePropertyNames()
  String[] GetLonghandPropertyNames(string shorthandName)
  StylePropertyId GetStylePropertyIdFromName(string name)
  object GetComputedStyleValue(ComputedStyle& computedStyle, string name)
  object GetInlineStyleValue(IStyle style, string name)
  void SetInlineStyleValue(IStyle style, string name, object value)
  Type GetInlineStyleType(string name)
  Type GetComputedStyleType(string name)
  void FindSpecifiedStyles(ComputedStyle& computedStyle, IEnumerable`1<SelectorMatchRecord> matchRecords, Dictionary`2<StylePropertyId, int> result)
  object GetComputedStyleValue(ComputedStyle& computedStyle, StylePropertyId id)
  Type GetComputedStyleType(StylePropertyId id)
  object GetInlineStyleValue(IStyle style, StylePropertyId id)
  void SetInlineStyleValue(IStyle style, StylePropertyId id, object value)
  object ConvertComputedToInlineStyleValue(StylePropertyId id, object value)
  Type GetInlineStyleType(StylePropertyId id)
  String[] GetLonghandPropertyNames(StylePropertyId id)
  bool IsShorthandProperty(StylePropertyId id)
  bool IsInheritedProperty(StylePropertyId id)
  StylePropertyId[] GetInheritedProperties()
  bool IsDiscreteTypeProperty(StylePropertyId id)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleEnum`1
Наследуется от: ValueType
Поля:
  T m_Value
  StyleKeyword m_Keyword
Свойства:
  T value
  StyleKeyword keyword
Методы:
  T get_value()
  void set_value(T value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(T v)
  void .ctor(StyleKeyword keyword)
  void .ctor(T v, StyleKeyword keyword)
  bool op_Equality(StyleEnum`1<T> lhs, StyleEnum`1<T> rhs)
  bool op_Inequality(StyleEnum`1<T> lhs, StyleEnum`1<T> rhs)
  StyleEnum`1<T> op_Implicit(StyleKeyword keyword)
  StyleEnum`1<T> op_Implicit(T v)
  bool Equals(StyleEnum`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleFloat
Наследуется от: ValueType
Поля:
  float m_Value
  StyleKeyword m_Keyword
Свойства:
  float value
  StyleKeyword keyword
Методы:
  float get_value()
  void set_value(float value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(float v)
  void .ctor(StyleKeyword keyword)
  void .ctor(float v, StyleKeyword keyword)
  bool op_Equality(StyleFloat lhs, StyleFloat rhs)
  bool op_Inequality(StyleFloat lhs, StyleFloat rhs)
  StyleFloat op_Implicit(StyleKeyword keyword)
  StyleFloat op_Implicit(float v)
  bool Equals(StyleFloat other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleFont
Наследуется от: ValueType
Поля:
  Font m_Value
  StyleKeyword m_Keyword
Свойства:
  Font value
  StyleKeyword keyword
Методы:
  Font get_value()
  void set_value(Font value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Font v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Font v, StyleKeyword keyword)
  bool op_Equality(StyleFont lhs, StyleFont rhs)
  bool op_Inequality(StyleFont lhs, StyleFont rhs)
  StyleFont op_Implicit(StyleKeyword keyword)
  StyleFont op_Implicit(Font v)
  bool Equals(StyleFont other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleFontDefinition
Наследуется от: ValueType
Поля:
  StyleKeyword m_Keyword
  FontDefinition m_Value
Свойства:
  FontDefinition value
  StyleKeyword keyword
Методы:
  FontDefinition get_value()
  void set_value(FontDefinition value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(FontDefinition f)
  void .ctor(FontAsset f)
  void .ctor(Font f)
  void .ctor(StyleKeyword keyword)
  void .ctor(object obj, StyleKeyword keyword)
  void .ctor(object obj)
  void .ctor(FontAsset f, StyleKeyword keyword)
  void .ctor(Font f, StyleKeyword keyword)
  void .ctor(GCHandle gcHandle, StyleKeyword keyword)
  void .ctor(FontDefinition f, StyleKeyword keyword)
  void .ctor(StyleFontDefinition sfd)
  StyleFontDefinition op_Implicit(StyleKeyword keyword)
  StyleFontDefinition op_Implicit(FontDefinition f)
  bool Equals(StyleFontDefinition other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(StyleFontDefinition left, StyleFontDefinition right)
  bool op_Inequality(StyleFontDefinition left, StyleFontDefinition right)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleInt
Наследуется от: ValueType
Поля:
  int m_Value
  StyleKeyword m_Keyword
Свойства:
  int value
  StyleKeyword keyword
Методы:
  int get_value()
  void set_value(int value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(int v)
  void .ctor(StyleKeyword keyword)
  void .ctor(int v, StyleKeyword keyword)
  bool op_Equality(StyleInt lhs, StyleInt rhs)
  bool op_Inequality(StyleInt lhs, StyleInt rhs)
  StyleInt op_Implicit(StyleKeyword keyword)
  StyleInt op_Implicit(int v)
  bool Equals(StyleInt other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleLength
Наследуется от: ValueType
Поля:
  Length m_Value
  StyleKeyword m_Keyword
Свойства:
  Length value
  StyleKeyword keyword
Методы:
  Length get_value()
  void set_value(Length value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(float v)
  void .ctor(Length v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Length v, StyleKeyword keyword)
  bool op_Equality(StyleLength lhs, StyleLength rhs)
  bool op_Inequality(StyleLength lhs, StyleLength rhs)
  StyleLength op_Implicit(StyleKeyword keyword)
  StyleLength op_Implicit(float v)
  StyleLength op_Implicit(Length v)
  bool Equals(StyleLength other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleList`1
Наследуется от: ValueType
Поля:
  StyleKeyword m_Keyword
  List`1<T> m_Value
Свойства:
  List`1<T> value
  StyleKeyword keyword
Методы:
  List`1<T> get_value()
  void set_value(List`1<T> value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(List`1<T> v)
  void .ctor(StyleKeyword keyword)
  void .ctor(List`1<T> v, StyleKeyword keyword)
  bool op_Equality(StyleList`1<T> lhs, StyleList`1<T> rhs)
  bool op_Inequality(StyleList`1<T> lhs, StyleList`1<T> rhs)
  StyleList`1<T> op_Implicit(StyleKeyword keyword)
  StyleList`1<T> op_Implicit(List`1<T> v)
  bool Equals(StyleList`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleRotate
Наследуется от: ValueType
Поля:
  Rotate m_Value
  StyleKeyword m_Keyword
Свойства:
  Rotate value
  StyleKeyword keyword
Методы:
  Rotate get_value()
  void set_value(Rotate value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Rotate v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Rotate v, StyleKeyword keyword)
  bool op_Equality(StyleRotate lhs, StyleRotate rhs)
  bool op_Inequality(StyleRotate lhs, StyleRotate rhs)
  StyleRotate op_Implicit(StyleKeyword keyword)
  StyleRotate op_Implicit(Rotate v)
  bool Equals(StyleRotate other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleScale
Наследуется от: ValueType
Поля:
  Scale m_Value
  StyleKeyword m_Keyword
Свойства:
  Scale value
  StyleKeyword keyword
Методы:
  Scale get_value()
  void set_value(Scale value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Scale v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Scale v, StyleKeyword keyword)
  bool op_Equality(StyleScale lhs, StyleScale rhs)
  bool op_Inequality(StyleScale lhs, StyleScale rhs)
  StyleScale op_Implicit(StyleKeyword keyword)
  StyleScale op_Implicit(Scale v)
  bool Equals(StyleScale other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleTranslate
Наследуется от: ValueType
Поля:
  Translate m_Value
  StyleKeyword m_Keyword
Свойства:
  Translate value
  StyleKeyword keyword
Методы:
  Translate get_value()
  void set_value(Translate value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(Translate v)
  void .ctor(StyleKeyword keyword)
  void .ctor(Translate v, StyleKeyword keyword)
  bool op_Equality(StyleTranslate lhs, StyleTranslate rhs)
  bool op_Inequality(StyleTranslate lhs, StyleTranslate rhs)
  StyleTranslate op_Implicit(StyleKeyword keyword)
  StyleTranslate op_Implicit(Translate v)
  bool Equals(StyleTranslate other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleTextShadow
Наследуется от: ValueType
Поля:
  StyleKeyword m_Keyword
  TextShadow m_Value
Свойства:
  TextShadow value
  StyleKeyword keyword
Методы:
  TextShadow get_value()
  void set_value(TextShadow value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(TextShadow v)
  void .ctor(StyleKeyword keyword)
  void .ctor(TextShadow v, StyleKeyword keyword)
  bool op_Equality(StyleTextShadow lhs, StyleTextShadow rhs)
  bool op_Inequality(StyleTextShadow lhs, StyleTextShadow rhs)
  StyleTextShadow op_Implicit(StyleKeyword keyword)
  StyleTextShadow op_Implicit(TextShadow v)
  bool Equals(StyleTextShadow other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleTransformOrigin
Наследуется от: ValueType
Поля:
  TransformOrigin m_Value
  StyleKeyword m_Keyword
Свойства:
  TransformOrigin value
  StyleKeyword keyword
Методы:
  TransformOrigin get_value()
  void set_value(TransformOrigin value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
  void .ctor(TransformOrigin v)
  void .ctor(StyleKeyword keyword)
  void .ctor(TransformOrigin v, StyleKeyword keyword)
  bool op_Equality(StyleTransformOrigin lhs, StyleTransformOrigin rhs)
  bool op_Inequality(StyleTransformOrigin lhs, StyleTransformOrigin rhs)
  StyleTransformOrigin op_Implicit(StyleKeyword keyword)
  StyleTransformOrigin op_Implicit(TransformOrigin v)
  bool Equals(StyleTransformOrigin other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.IStyleValue`1
Поля:
Свойства:
  T value
  StyleKeyword keyword
Методы:
  T get_value()
  void set_value(T value)
  StyleKeyword get_keyword()
  void set_keyword(StyleKeyword value)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleKeyword
Наследуется от: Enum
Поля:
  int value__
  StyleKeyword Undefined
  StyleKeyword Null
  StyleKeyword Auto
  StyleKeyword None
  StyleKeyword Initial
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  string DebugString(IStyleValue`1<T> styleValue)
  YogaValue ToYogaValue(Length length)
  Length ToLength(StyleKeyword keyword)
  Rotate ToRotate(StyleKeyword keyword)
  Scale ToScale(StyleKeyword keyword)
  Translate ToTranslate(StyleKeyword keyword)
  Length ToLength(StyleLength styleLength)
  void CopyFrom(List`1<T> list, List`1<T> other)
--------------------------------------------------
Класс: UnityEngine.UIElements.TimeUnit
Наследуется от: Enum
Поля:
  int value__
  TimeUnit Second
  TimeUnit Millisecond
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.TimeValue
Наследуется от: ValueType
Поля:
  float m_Value
  TimeUnit m_Unit
Свойства:
  float value
  TimeUnit unit
Методы:
  float get_value()
  void set_value(float value)
  TimeUnit get_unit()
  void set_unit(TimeUnit value)
  void .ctor(float value)
  void .ctor(float value, TimeUnit unit)
  TimeValue op_Implicit(float value)
  bool op_Equality(TimeValue lhs, TimeValue rhs)
  bool op_Inequality(TimeValue lhs, TimeValue rhs)
  bool Equals(TimeValue other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.TransformOrigin
Наследуется от: ValueType
Поля:
  Length m_X
  Length m_Y
  float m_Z
Свойства:
  Length x
  Length y
  float z
Методы:
  void .ctor(Length x, Length y, float z)
  void .ctor(Length x, Length y)
  TransformOrigin Initial()
  Length get_x()
  void set_x(Length value)
  Length get_y()
  void set_y(Length value)
  float get_z()
  void set_z(float value)
  bool op_Equality(TransformOrigin lhs, TransformOrigin rhs)
  bool op_Inequality(TransformOrigin lhs, TransformOrigin rhs)
  bool Equals(TransformOrigin other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.Translate
Наследуется от: ValueType
Поля:
  Length m_X
  Length m_Y
  float m_Z
  bool m_isNone
Свойства:
  Length x
  Length y
  float z
Методы:
  void .ctor(Length x, Length y, float z)
  void .ctor(Length x, Length y)
  Translate None()
  Length get_x()
  void set_x(Length value)
  Length get_y()
  void set_y(Length value)
  float get_z()
  void set_z(float value)
  bool IsNone()
  bool op_Equality(Translate lhs, Translate rhs)
  bool op_Inequality(Translate lhs, Translate rhs)
  bool Equals(Translate other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.IResolvedStyle
Поля:
Свойства:
  Align alignContent
  Align alignItems
  Align alignSelf
  Color backgroundColor
  Background backgroundImage
  Color borderBottomColor
  float borderBottomLeftRadius
  float borderBottomRightRadius
  float borderBottomWidth
  Color borderLeftColor
  float borderLeftWidth
  Color borderRightColor
  float borderRightWidth
  Color borderTopColor
  float borderTopLeftRadius
  float borderTopRightRadius
  float borderTopWidth
  float bottom
  Color color
  DisplayStyle display
  StyleFloat flexBasis
  FlexDirection flexDirection
  float flexGrow
  float flexShrink
  Wrap flexWrap
  float fontSize
  float height
  Justify justifyContent
  float left
  float letterSpacing
  float marginBottom
  float marginLeft
  float marginRight
  float marginTop
  StyleFloat maxHeight
  StyleFloat maxWidth
  StyleFloat minHeight
  StyleFloat minWidth
  float opacity
  float paddingBottom
  float paddingLeft
  float paddingRight
  float paddingTop
  Position position
  float right
  Rotate rotate
  Scale scale
  TextOverflow textOverflow
  float top
  Vector3 transformOrigin
  IEnumerable`1<TimeValue> transitionDelay
  IEnumerable`1<TimeValue> transitionDuration
  IEnumerable`1<StylePropertyName> transitionProperty
  IEnumerable`1<EasingFunction> transitionTimingFunction
  Vector3 translate
  Color unityBackgroundImageTintColor
  ScaleMode unityBackgroundScaleMode
  Font unityFont
  FontDefinition unityFontDefinition
  FontStyle unityFontStyleAndWeight
  float unityParagraphSpacing
  int unitySliceBottom
  int unitySliceLeft
  int unitySliceRight
  int unitySliceTop
  TextAnchor unityTextAlign
  Color unityTextOutlineColor
  float unityTextOutlineWidth
  TextOverflowPosition unityTextOverflowPosition
  Visibility visibility
  WhiteSpace whiteSpace
  float width
  float wordSpacing
Методы:
  Align get_alignContent()
  Align get_alignItems()
  Align get_alignSelf()
  Color get_backgroundColor()
  Background get_backgroundImage()
  Color get_borderBottomColor()
  float get_borderBottomLeftRadius()
  float get_borderBottomRightRadius()
  float get_borderBottomWidth()
  Color get_borderLeftColor()
  float get_borderLeftWidth()
  Color get_borderRightColor()
  float get_borderRightWidth()
  Color get_borderTopColor()
  float get_borderTopLeftRadius()
  float get_borderTopRightRadius()
  float get_borderTopWidth()
  float get_bottom()
  Color get_color()
  DisplayStyle get_display()
  StyleFloat get_flexBasis()
  FlexDirection get_flexDirection()
  float get_flexGrow()
  float get_flexShrink()
  Wrap get_flexWrap()
  float get_fontSize()
  float get_height()
  Justify get_justifyContent()
  float get_left()
  float get_letterSpacing()
  float get_marginBottom()
  float get_marginLeft()
  float get_marginRight()
  float get_marginTop()
  StyleFloat get_maxHeight()
  StyleFloat get_maxWidth()
  StyleFloat get_minHeight()
  StyleFloat get_minWidth()
  float get_opacity()
  float get_paddingBottom()
  float get_paddingLeft()
  float get_paddingRight()
  float get_paddingTop()
  Position get_position()
  float get_right()
  Rotate get_rotate()
  Scale get_scale()
  TextOverflow get_textOverflow()
  float get_top()
  Vector3 get_transformOrigin()
  IEnumerable`1<TimeValue> get_transitionDelay()
  IEnumerable`1<TimeValue> get_transitionDuration()
  IEnumerable`1<StylePropertyName> get_transitionProperty()
  IEnumerable`1<EasingFunction> get_transitionTimingFunction()
  Vector3 get_translate()
  Color get_unityBackgroundImageTintColor()
  ScaleMode get_unityBackgroundScaleMode()
  Font get_unityFont()
  FontDefinition get_unityFontDefinition()
  FontStyle get_unityFontStyleAndWeight()
  float get_unityParagraphSpacing()
  int get_unitySliceBottom()
  int get_unitySliceLeft()
  int get_unitySliceRight()
  int get_unitySliceTop()
  TextAnchor get_unityTextAlign()
  Color get_unityTextOutlineColor()
  float get_unityTextOutlineWidth()
  TextOverflowPosition get_unityTextOverflowPosition()
  Visibility get_visibility()
  WhiteSpace get_whiteSpace()
  float get_width()
  float get_wordSpacing()
--------------------------------------------------
Класс: UnityEngine.UIElements.IStyle
Поля:
Свойства:
  StyleEnum`1<Align> alignContent
  StyleEnum`1<Align> alignItems
  StyleEnum`1<Align> alignSelf
  StyleColor backgroundColor
  StyleBackground backgroundImage
  StyleColor borderBottomColor
  StyleLength borderBottomLeftRadius
  StyleLength borderBottomRightRadius
  StyleFloat borderBottomWidth
  StyleColor borderLeftColor
  StyleFloat borderLeftWidth
  StyleColor borderRightColor
  StyleFloat borderRightWidth
  StyleColor borderTopColor
  StyleLength borderTopLeftRadius
  StyleLength borderTopRightRadius
  StyleFloat borderTopWidth
  StyleLength bottom
  StyleColor color
  StyleCursor cursor
  StyleEnum`1<DisplayStyle> display
  StyleLength flexBasis
  StyleEnum`1<FlexDirection> flexDirection
  StyleFloat flexGrow
  StyleFloat flexShrink
  StyleEnum`1<Wrap> flexWrap
  StyleLength fontSize
  StyleLength height
  StyleEnum`1<Justify> justifyContent
  StyleLength left
  StyleLength letterSpacing
  StyleLength marginBottom
  StyleLength marginLeft
  StyleLength marginRight
  StyleLength marginTop
  StyleLength maxHeight
  StyleLength maxWidth
  StyleLength minHeight
  StyleLength minWidth
  StyleFloat opacity
  StyleEnum`1<Overflow> overflow
  StyleLength paddingBottom
  StyleLength paddingLeft
  StyleLength paddingRight
  StyleLength paddingTop
  StyleEnum`1<Position> position
  StyleLength right
  StyleRotate rotate
  StyleScale scale
  StyleEnum`1<TextOverflow> textOverflow
  StyleTextShadow textShadow
  StyleLength top
  StyleTransformOrigin transformOrigin
  StyleList`1<TimeValue> transitionDelay
  StyleList`1<TimeValue> transitionDuration
  StyleList`1<StylePropertyName> transitionProperty
  StyleList`1<EasingFunction> transitionTimingFunction
  StyleTranslate translate
  StyleColor unityBackgroundImageTintColor
  StyleEnum`1<ScaleMode> unityBackgroundScaleMode
  StyleFont unityFont
  StyleFontDefinition unityFontDefinition
  StyleEnum`1<FontStyle> unityFontStyleAndWeight
  StyleEnum`1<OverflowClipBox> unityOverflowClipBox
  StyleLength unityParagraphSpacing
  StyleInt unitySliceBottom
  StyleInt unitySliceLeft
  StyleInt unitySliceRight
  StyleInt unitySliceTop
  StyleEnum`1<TextAnchor> unityTextAlign
  StyleColor unityTextOutlineColor
  StyleFloat unityTextOutlineWidth
  StyleEnum`1<TextOverflowPosition> unityTextOverflowPosition
  StyleEnum`1<Visibility> visibility
  StyleEnum`1<WhiteSpace> whiteSpace
  StyleLength width
  StyleLength wordSpacing
Методы:
  StyleEnum`1<Align> get_alignContent()
  void set_alignContent(StyleEnum`1<Align> value)
  StyleEnum`1<Align> get_alignItems()
  void set_alignItems(StyleEnum`1<Align> value)
  StyleEnum`1<Align> get_alignSelf()
  void set_alignSelf(StyleEnum`1<Align> value)
  StyleColor get_backgroundColor()
  void set_backgroundColor(StyleColor value)
  StyleBackground get_backgroundImage()
  void set_backgroundImage(StyleBackground value)
  StyleColor get_borderBottomColor()
  void set_borderBottomColor(StyleColor value)
  StyleLength get_borderBottomLeftRadius()
  void set_borderBottomLeftRadius(StyleLength value)
  StyleLength get_borderBottomRightRadius()
  void set_borderBottomRightRadius(StyleLength value)
  StyleFloat get_borderBottomWidth()
  void set_borderBottomWidth(StyleFloat value)
  StyleColor get_borderLeftColor()
  void set_borderLeftColor(StyleColor value)
  StyleFloat get_borderLeftWidth()
  void set_borderLeftWidth(StyleFloat value)
  StyleColor get_borderRightColor()
  void set_borderRightColor(StyleColor value)
  StyleFloat get_borderRightWidth()
  void set_borderRightWidth(StyleFloat value)
  StyleColor get_borderTopColor()
  void set_borderTopColor(StyleColor value)
  StyleLength get_borderTopLeftRadius()
  void set_borderTopLeftRadius(StyleLength value)
  StyleLength get_borderTopRightRadius()
  void set_borderTopRightRadius(StyleLength value)
  StyleFloat get_borderTopWidth()
  void set_borderTopWidth(StyleFloat value)
  StyleLength get_bottom()
  void set_bottom(StyleLength value)
  StyleColor get_color()
  void set_color(StyleColor value)
  StyleCursor get_cursor()
  void set_cursor(StyleCursor value)
  StyleEnum`1<DisplayStyle> get_display()
  void set_display(StyleEnum`1<DisplayStyle> value)
  StyleLength get_flexBasis()
  void set_flexBasis(StyleLength value)
  StyleEnum`1<FlexDirection> get_flexDirection()
  void set_flexDirection(StyleEnum`1<FlexDirection> value)
  StyleFloat get_flexGrow()
  void set_flexGrow(StyleFloat value)
  StyleFloat get_flexShrink()
  void set_flexShrink(StyleFloat value)
  StyleEnum`1<Wrap> get_flexWrap()
  void set_flexWrap(StyleEnum`1<Wrap> value)
  StyleLength get_fontSize()
  void set_fontSize(StyleLength value)
  StyleLength get_height()
  void set_height(StyleLength value)
  StyleEnum`1<Justify> get_justifyContent()
  void set_justifyContent(StyleEnum`1<Justify> value)
  StyleLength get_left()
  void set_left(StyleLength value)
  StyleLength get_letterSpacing()
  void set_letterSpacing(StyleLength value)
  StyleLength get_marginBottom()
  void set_marginBottom(StyleLength value)
  StyleLength get_marginLeft()
  void set_marginLeft(StyleLength value)
  StyleLength get_marginRight()
  void set_marginRight(StyleLength value)
  StyleLength get_marginTop()
  void set_marginTop(StyleLength value)
  StyleLength get_maxHeight()
  void set_maxHeight(StyleLength value)
  StyleLength get_maxWidth()
  void set_maxWidth(StyleLength value)
  StyleLength get_minHeight()
  void set_minHeight(StyleLength value)
  StyleLength get_minWidth()
  void set_minWidth(StyleLength value)
  StyleFloat get_opacity()
  void set_opacity(StyleFloat value)
  StyleEnum`1<Overflow> get_overflow()
  void set_overflow(StyleEnum`1<Overflow> value)
  StyleLength get_paddingBottom()
  void set_paddingBottom(StyleLength value)
  StyleLength get_paddingLeft()
  void set_paddingLeft(StyleLength value)
  StyleLength get_paddingRight()
  void set_paddingRight(StyleLength value)
  StyleLength get_paddingTop()
  void set_paddingTop(StyleLength value)
  StyleEnum`1<Position> get_position()
  void set_position(StyleEnum`1<Position> value)
  StyleLength get_right()
  void set_right(StyleLength value)
  StyleRotate get_rotate()
  void set_rotate(StyleRotate value)
  StyleScale get_scale()
  void set_scale(StyleScale value)
  StyleEnum`1<TextOverflow> get_textOverflow()
  void set_textOverflow(StyleEnum`1<TextOverflow> value)
  StyleTextShadow get_textShadow()
  void set_textShadow(StyleTextShadow value)
  StyleLength get_top()
  void set_top(StyleLength value)
  StyleTransformOrigin get_transformOrigin()
  void set_transformOrigin(StyleTransformOrigin value)
  StyleList`1<TimeValue> get_transitionDelay()
  void set_transitionDelay(StyleList`1<TimeValue> value)
  StyleList`1<TimeValue> get_transitionDuration()
  void set_transitionDuration(StyleList`1<TimeValue> value)
  StyleList`1<StylePropertyName> get_transitionProperty()
  void set_transitionProperty(StyleList`1<StylePropertyName> value)
  StyleList`1<EasingFunction> get_transitionTimingFunction()
  void set_transitionTimingFunction(StyleList`1<EasingFunction> value)
  StyleTranslate get_translate()
  void set_translate(StyleTranslate value)
  StyleColor get_unityBackgroundImageTintColor()
  void set_unityBackgroundImageTintColor(StyleColor value)
  StyleEnum`1<ScaleMode> get_unityBackgroundScaleMode()
  void set_unityBackgroundScaleMode(StyleEnum`1<ScaleMode> value)
  StyleFont get_unityFont()
  void set_unityFont(StyleFont value)
  StyleFontDefinition get_unityFontDefinition()
  void set_unityFontDefinition(StyleFontDefinition value)
  StyleEnum`1<FontStyle> get_unityFontStyleAndWeight()
  void set_unityFontStyleAndWeight(StyleEnum`1<FontStyle> value)
  StyleEnum`1<OverflowClipBox> get_unityOverflowClipBox()
  void set_unityOverflowClipBox(StyleEnum`1<OverflowClipBox> value)
  StyleLength get_unityParagraphSpacing()
  void set_unityParagraphSpacing(StyleLength value)
  StyleInt get_unitySliceBottom()
  void set_unitySliceBottom(StyleInt value)
  StyleInt get_unitySliceLeft()
  void set_unitySliceLeft(StyleInt value)
  StyleInt get_unitySliceRight()
  void set_unitySliceRight(StyleInt value)
  StyleInt get_unitySliceTop()
  void set_unitySliceTop(StyleInt value)
  StyleEnum`1<TextAnchor> get_unityTextAlign()
  void set_unityTextAlign(StyleEnum`1<TextAnchor> value)
  StyleColor get_unityTextOutlineColor()
  void set_unityTextOutlineColor(StyleColor value)
  StyleFloat get_unityTextOutlineWidth()
  void set_unityTextOutlineWidth(StyleFloat value)
  StyleEnum`1<TextOverflowPosition> get_unityTextOverflowPosition()
  void set_unityTextOverflowPosition(StyleEnum`1<TextOverflowPosition> value)
  StyleEnum`1<Visibility> get_visibility()
  void set_visibility(StyleEnum`1<Visibility> value)
  StyleEnum`1<WhiteSpace> get_whiteSpace()
  void set_whiteSpace(StyleEnum`1<WhiteSpace> value)
  StyleLength get_width()
  void set_width(StyleLength value)
  StyleLength get_wordSpacing()
  void set_wordSpacing(StyleLength value)
--------------------------------------------------
Класс: UnityEngine.UIElements.IStyleDataGroup`1
Поля:
Свойства:
Методы:
  T Copy()
  void CopyFrom(T& other)
--------------------------------------------------
Класс: UnityEngine.UIElements.InheritedData
Наследуется от: ValueType
Поля:
  Color color
  Length fontSize
  Length letterSpacing
  TextShadow textShadow
  Font unityFont
  FontDefinition unityFontDefinition
  FontStyle unityFontStyleAndWeight
  Length unityParagraphSpacing
  TextAnchor unityTextAlign
  Color unityTextOutlineColor
  float unityTextOutlineWidth
  Visibility visibility
  WhiteSpace whiteSpace
  Length wordSpacing
Свойства:
Методы:
  InheritedData Copy()
  void CopyFrom(InheritedData& other)
  bool op_Equality(InheritedData lhs, InheritedData rhs)
  bool op_Inequality(InheritedData lhs, InheritedData rhs)
  bool Equals(InheritedData other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.LayoutData
Наследуется от: ValueType
Поля:
  Align alignContent
  Align alignItems
  Align alignSelf
  float borderBottomWidth
  float borderLeftWidth
  float borderRightWidth
  float borderTopWidth
  Length bottom
  DisplayStyle display
  Length flexBasis
  FlexDirection flexDirection
  float flexGrow
  float flexShrink
  Wrap flexWrap
  Length height
  Justify justifyContent
  Length left
  Length marginBottom
  Length marginLeft
  Length marginRight
  Length marginTop
  Length maxHeight
  Length maxWidth
  Length minHeight
  Length minWidth
  Length paddingBottom
  Length paddingLeft
  Length paddingRight
  Length paddingTop
  Position position
  Length right
  Length top
  Length width
Свойства:
Методы:
  LayoutData Copy()
  void CopyFrom(LayoutData& other)
  bool op_Equality(LayoutData lhs, LayoutData rhs)
  bool op_Inequality(LayoutData lhs, LayoutData rhs)
  bool Equals(LayoutData other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.RareData
Наследуется от: ValueType
Поля:
  Cursor cursor
  TextOverflow textOverflow
  Color unityBackgroundImageTintColor
  ScaleMode unityBackgroundScaleMode
  OverflowClipBox unityOverflowClipBox
  int unitySliceBottom
  int unitySliceLeft
  int unitySliceRight
  int unitySliceTop
  TextOverflowPosition unityTextOverflowPosition
Свойства:
Методы:
  RareData Copy()
  void CopyFrom(RareData& other)
  bool op_Equality(RareData lhs, RareData rhs)
  bool op_Inequality(RareData lhs, RareData rhs)
  bool Equals(RareData other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.TransformData
Наследуется от: ValueType
Поля:
  Rotate rotate
  Scale scale
  TransformOrigin transformOrigin
  Translate translate
Свойства:
Методы:
  TransformData Copy()
  void CopyFrom(TransformData& other)
  bool op_Equality(TransformData lhs, TransformData rhs)
  bool op_Inequality(TransformData lhs, TransformData rhs)
  bool Equals(TransformData other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.TransitionData
Наследуется от: ValueType
Поля:
  List`1<TimeValue> transitionDelay
  List`1<TimeValue> transitionDuration
  List`1<StylePropertyName> transitionProperty
  List`1<EasingFunction> transitionTimingFunction
Свойства:
Методы:
  TransitionData Copy()
  void CopyFrom(TransitionData& other)
  bool op_Equality(TransitionData lhs, TransitionData rhs)
  bool op_Inequality(TransitionData lhs, TransitionData rhs)
  bool Equals(TransitionData other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualData
Наследуется от: ValueType
Поля:
  Color backgroundColor
  Background backgroundImage
  Color borderBottomColor
  Length borderBottomLeftRadius
  Length borderBottomRightRadius
  Color borderLeftColor
  Color borderRightColor
  Color borderTopColor
  Length borderTopLeftRadius
  Length borderTopRightRadius
  float opacity
  OverflowInternal overflow
Свойства:
Методы:
  VisualData Copy()
  void CopyFrom(VisualData& other)
  bool op_Equality(VisualData lhs, VisualData rhs)
  bool op_Inequality(VisualData lhs, VisualData rhs)
  bool Equals(VisualData other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleComplexSelector
Наследуется от: object
Поля:
  int m_Specificity
  StyleRule <rule>k__BackingField
  StyleSelector[] m_Selectors
  int ruleIndex
  StyleComplexSelector nextInTable
  int orderInStyleSheet
  Dictionary`2<string, PseudoStateData> s_PseudoStates
Свойства:
  int specificity
  StyleRule rule
  bool isSimple
  StyleSelector[] selectors
Методы:
  int get_specificity()
  void set_specificity(int value)
  StyleRule get_rule()
  void set_rule(StyleRule value)
  bool get_isSimple()
  StyleSelector[] get_selectors()
  void set_selectors(StyleSelector[] value)
  void CachePseudoStateMasks()
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleProperty
Наследуется от: object
Поля:
  string m_Name
  int m_Line
  StyleValueHandle[] m_Values
  bool isCustomProperty
  bool requireVariableResolve
Свойства:
  string name
  int line
  StyleValueHandle[] values
Методы:
  string get_name()
  void set_name(string value)
  int get_line()
  void set_line(int value)
  StyleValueHandle[] get_values()
  void set_values(StyleValueHandle[] value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleRule
Наследуется от: object
Поля:
  StyleProperty[] m_Properties
  int line
  int customPropertiesCount
Свойства:
  StyleProperty[] properties
Методы:
  StyleProperty[] get_properties()
  void set_properties(StyleProperty[] value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSelector
Наследуется от: object
Поля:
  StyleSelectorPart[] m_Parts
  StyleSelectorRelationship m_PreviousRelationship
  int pseudoStateMask
  int negatedPseudoStateMask
Свойства:
  StyleSelectorPart[] parts
  StyleSelectorRelationship previousRelationship
Методы:
  StyleSelectorPart[] get_parts()
  void set_parts(StyleSelectorPart[] value)
  StyleSelectorRelationship get_previousRelationship()
  void set_previousRelationship(StyleSelectorRelationship value)
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSelectorPart
Наследуется от: ValueType
Поля:
  string m_Value
  StyleSelectorType m_Type
  object tempData
Свойства:
  string value
  StyleSelectorType type
Методы:
  string get_value()
  void set_value(string value)
  StyleSelectorType get_type()
  void set_type(StyleSelectorType value)
  string ToString()
  StyleSelectorPart CreateClass(string className)
  StyleSelectorPart CreatePseudoClass(string className)
  StyleSelectorPart CreateId(string Id)
  StyleSelectorPart CreateType(Type t)
  StyleSelectorPart CreateType(string typeName)
  StyleSelectorPart CreatePredicate(object predicate)
  StyleSelectorPart CreateWildCard()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSelectorRelationship
Наследуется от: Enum
Поля:
  int value__
  StyleSelectorRelationship None
  StyleSelectorRelationship Child
  StyleSelectorRelationship Descendent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSelectorType
Наследуется от: Enum
Поля:
  int value__
  StyleSelectorType Unknown
  StyleSelectorType Wildcard
  StyleSelectorType Type
  StyleSelectorType Class
  StyleSelectorType PseudoClass
  StyleSelectorType RecursivePseudoClass
  StyleSelectorType ID
  StyleSelectorType Predicate
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheet
Наследуется от: ScriptableObject
Поля:
  bool m_ImportedWithErrors
  bool m_ImportedWithWarnings
  StyleRule[] m_Rules
  StyleComplexSelector[] m_ComplexSelectors
  Single[] floats
  Dimension[] dimensions
  Color[] colors
  String[] strings
  Object[] assets
  ImportStruct[] imports
  List`1<StyleSheet> m_FlattenedImportedStyleSheets
  int m_ContentHash
  ScalableImage[] scalableImages
  Dictionary`2<string, StyleComplexSelector> orderedNameSelectors
  Dictionary`2<string, StyleComplexSelector> orderedTypeSelectors
  Dictionary`2<string, StyleComplexSelector> orderedClassSelectors
  bool m_IsDefaultStyleSheet
  string kCustomPropertyMarker
Свойства:
  bool importedWithErrors
  bool importedWithWarnings
  StyleRule[] rules
  StyleComplexSelector[] complexSelectors
  List`1<StyleSheet> flattenedRecursiveImports
  int contentHash
  bool isDefaultStyleSheet
Методы:
  bool get_importedWithErrors()
  void set_importedWithErrors(bool value)
  bool get_importedWithWarnings()
  void set_importedWithWarnings(bool value)
  StyleRule[] get_rules()
  void set_rules(StyleRule[] value)
  StyleComplexSelector[] get_complexSelectors()
  void set_complexSelectors(StyleComplexSelector[] value)
  List`1<StyleSheet> get_flattenedRecursiveImports()
  int get_contentHash()
  void set_contentHash(int value)
  bool get_isDefaultStyleSheet()
  void set_isDefaultStyleSheet(bool value)
  bool TryCheckAccess(T[] list, StyleValueType type, StyleValueHandle handle, T& value)
  T CheckAccess(T[] list, StyleValueType type, StyleValueHandle handle)
  void OnEnable()
  void FlattenImportedStyleSheetsRecursive()
  void FlattenImportedStyleSheetsRecursive(StyleSheet sheet)
  void SetupReferences()
  StyleValueKeyword ReadKeyword(StyleValueHandle handle)
  float ReadFloat(StyleValueHandle handle)
  bool TryReadFloat(StyleValueHandle handle, Single& value)
  Dimension ReadDimension(StyleValueHandle handle)
  bool TryReadDimension(StyleValueHandle handle, Dimension& value)
  Color ReadColor(StyleValueHandle handle)
  bool TryReadColor(StyleValueHandle handle, Color& value)
  string ReadString(StyleValueHandle handle)
  bool TryReadString(StyleValueHandle handle, String& value)
  string ReadEnum(StyleValueHandle handle)
  bool TryReadEnum(StyleValueHandle handle, String& value)
  string ReadVariable(StyleValueHandle handle)
  bool TryReadVariable(StyleValueHandle handle, String& value)
  string ReadResourcePath(StyleValueHandle handle)
  bool TryReadResourcePath(StyleValueHandle handle, String& value)
  Object ReadAssetReference(StyleValueHandle handle)
  string ReadMissingAssetReferenceUrl(StyleValueHandle handle)
  bool TryReadAssetReference(StyleValueHandle handle, Object& value)
  StyleValueFunction ReadFunction(StyleValueHandle handle)
  string ReadFunctionName(StyleValueHandle handle)
  ScalableImage ReadScalableImage(StyleValueHandle handle)
  bool CustomStartsWith(string originalString, string pattern)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueFunction
Наследуется от: Enum
Поля:
  int value__
  StyleValueFunction Unknown
  StyleValueFunction Var
  StyleValueFunction Env
  StyleValueFunction LinearGradient
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueFunctionExtension
Наследуется от: object
Поля:
  string k_Var
  string k_Env
  string k_LinearGradient
Свойства:
Методы:
  StyleValueFunction FromUssString(string ussValue)
  string ToUssString(StyleValueFunction svf)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueHandle
Наследуется от: ValueType
Поля:
  StyleValueType m_ValueType
  int valueIndex
Свойства:
  StyleValueType valueType
Методы:
  StyleValueType get_valueType()
  void set_valueType(StyleValueType value)
  void .ctor(int valueIndex, StyleValueType valueType)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueKeyword
Наследуется от: Enum
Поля:
  int value__
  StyleValueKeyword Inherit
  StyleValueKeyword Initial
  StyleValueKeyword Auto
  StyleValueKeyword Unset
  StyleValueKeyword True
  StyleValueKeyword False
  StyleValueKeyword None
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueKeywordExtension
Наследуется от: object
Поля:
Свойства:
Методы:
  string ToUssString(StyleValueKeyword svk)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleValueType
Наследуется от: Enum
Поля:
  int value__
  StyleValueType Invalid
  StyleValueType Keyword
  StyleValueType Float
  StyleValueType Dimension
  StyleValueType Color
  StyleValueType ResourcePath
  StyleValueType AssetReference
  StyleValueType Enum
  StyleValueType Variable
  StyleValueType String
  StyleValueType Function
  StyleValueType CommaSeparator
  StyleValueType ScalableImage
  StyleValueType MissingAssetReference
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleVariable
Наследуется от: ValueType
Поля:
  string name
  StyleSheet sheet
  StyleValueHandle[] handles
Свойства:
Методы:
  void .ctor(string name, StyleSheet sheet, StyleValueHandle[] handles)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleVariableContext
Наследуется от: object
Поля:
  StyleVariableContext none
  int m_VariableHash
  List`1<StyleVariable> m_Variables
  List`1<int> m_SortedHash
Свойства:
Методы:
  void Add(StyleVariable sv)
  void AddInitialRange(StyleVariableContext other)
  void Clear()
  void .ctor()
  void .ctor(StyleVariableContext other)
  bool TryFindVariable(string name, StyleVariable& v)
  int GetVariableHash()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleVariableResolver
Наследуется от: object
Поля:
  int kMaxResolves
  StyleSyntaxParser s_SyntaxParser
  StylePropertyValueMatcher m_Matcher
  List`1<StylePropertyValue> m_ResolvedValues
  Stack`1<string> m_ResolvedVarStack
  StyleProperty m_Property
  Stack`1<ResolveContext> m_ContextStack
  ResolveContext m_CurrentContext
  StyleVariableContext <variableContext>k__BackingField
Свойства:
  StyleSheet currentSheet
  StyleValueHandle[] currentHandles
  List`1<StylePropertyValue> resolvedValues
  StyleVariableContext variableContext
Методы:
  StyleSheet get_currentSheet()
  StyleValueHandle[] get_currentHandles()
  List`1<StylePropertyValue> get_resolvedValues()
  StyleVariableContext get_variableContext()
  void set_variableContext(StyleVariableContext value)
  void Init(StyleProperty property, StyleSheet sheet, StyleValueHandle[] handles)
  void PushContext(StyleSheet sheet, StyleValueHandle[] handles)
  void PopContext()
  void AddValue(StyleValueHandle handle)
  bool ResolveVarFunction(Int32& index)
  Result ResolveVarFunction(Int32& index, int argc, string varName)
  bool ValidateResolvedValues()
  Result ResolveVariable(string variableName)
  Result ResolveFallback(Int32& index)
  void ParseVarFunction(StyleSheet sheet, StyleValueHandle[] handles, Int32& index, Int32& argCount, String& variableName)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ThemeStyleSheet
Наследуется от: StyleSheet
Поля:
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.PanelTextSettings
Наследуется от: TextSettings
Поля:
  PanelTextSettings s_DefaultPanelTextSettings
  Func`2<string, Object> EditorGUIUtilityLoad
  Func`1<SystemLanguage> GetCurrentLanguage
  string s_DefaultEditorPanelTextSettingPath
Свойства:
  PanelTextSettings defaultPanelTextSettings
Методы:
  PanelTextSettings get_defaultPanelTextSettings()
  void UpdateLocalizationFontAsset()
  FontAsset GetCachedFontAsset(Font font)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.ITextHandle
Поля:
Свойства:
  Vector2 MeasuredSizes
  Vector2 RoundedSizes
Методы:
  Vector2 GetCursorPosition(CursorPositionStylePainterParameters parms, float scaling)
  float ComputeTextWidth(TextParams parms, float scaling)
  float ComputeTextHeight(TextParams parms, float scaling)
  float GetLineHeight(int characterIndex, TextParams textParams, float textScaling, float pixelPerPoint)
  TextInfo Update(TextParams parms, float pixelsPerPoint)
  int VerticesCount(TextParams parms, float pixelPerPoint)
  ITextHandle New()
  bool IsLegacy()
  void SetDirty()
  bool IsElided()
  Vector2 get_MeasuredSizes()
  void set_MeasuredSizes(Vector2 value)
  Vector2 get_RoundedSizes()
  void set_RoundedSizes(Vector2 value)
--------------------------------------------------
Класс: UnityEngine.UIElements.TextHandle
Наследуется от: ValueType
Поля:
  ITextHandle textHandle
Свойства:
  Vector2 MeasuredSizes
  Vector2 RoundedSizes
Методы:
  Vector2 get_MeasuredSizes()
  void set_MeasuredSizes(Vector2 value)
  Vector2 get_RoundedSizes()
  void set_RoundedSizes(Vector2 value)
  Vector2 GetCursorPosition(CursorPositionStylePainterParameters parms, float scaling)
  float GetLineHeight(int characterIndex, TextParams textParams, float textScaling, float pixelPerPoint)
  float ComputeTextWidth(TextParams parms, float scaling)
  float ComputeTextHeight(TextParams parms, float scaling)
  TextInfo Update(TextParams parms, float pixelsPerPoint)
  int VerticesCount(TextParams parms, float pixelPerPoint)
  ITextHandle New()
  bool IsLegacy()
  void SetDirty()
  bool IsElided()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextCoreHandle
Наследуется от: ValueType
Поля:
  Vector2 <MeasuredSizes>k__BackingField
  Vector2 <RoundedSizes>k__BackingField
  Vector2 m_PreferredSize
  int m_PreviousGenerationSettingsHash
  TextGenerationSettings m_CurrentGenerationSettings
  TextGenerationSettings s_LayoutSettings
  TextInfo m_TextInfoMesh
  TextInfo s_TextInfoLayout
  bool isDirty
Свойства:
  Vector2 MeasuredSizes
  Vector2 RoundedSizes
  TextInfo textInfoMesh
  TextInfo textInfoLayout
Методы:
  Vector2 get_MeasuredSizes()
  void set_MeasuredSizes(Vector2 value)
  Vector2 get_RoundedSizes()
  void set_RoundedSizes(Vector2 value)
  ITextHandle New()
  TextInfo get_textInfoMesh()
  TextInfo get_textInfoLayout()
  bool IsTextInfoAllocated()
  bool IsLegacy()
  void SetDirty()
  bool IsDirty(TextParams parms)
  Vector2 GetCursorPosition(CursorPositionStylePainterParameters parms, float scaling)
  float ComputeTextWidth(TextParams parms, float scaling)
  float ComputeTextHeight(TextParams parms, float scaling)
  float GetLineHeight(int characterIndex, TextParams textParams, float textScaling, float pixelPerPoint)
  int VerticesCount(TextParams parms, float pixelPerPoint)
  ITextHandle UnityEngine.UIElements.ITextHandle.New()
  TextInfo Update(TextParams parms, float pixelsPerPoint)
  void UpdatePreferredValues(TextParams parms)
  TextOverflowMode GetTextOverflowMode(TextParams textParams)
  void UpdateGenerationSettingsCommon(TextParams painterParams, TextGenerationSettings settings)
  bool IsElided()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextNativeHandle
Наследуется от: ValueType
Поля:
  Vector2 <MeasuredSizes>k__BackingField
  Vector2 <RoundedSizes>k__BackingField
  NativeArray`1<TextVertex> textVertices
  int m_PreviousTextParamsHash
Свойства:
  Vector2 MeasuredSizes
  Vector2 RoundedSizes
Методы:
  Vector2 get_MeasuredSizes()
  void set_MeasuredSizes(Vector2 value)
  Vector2 get_RoundedSizes()
  void set_RoundedSizes(Vector2 value)
  ITextHandle New()
  bool IsLegacy()
  void SetDirty()
  ITextHandle UnityEngine.UIElements.ITextHandle.New()
  float GetLineHeight(int characterIndex, TextParams textParams, float textScaling, float pixelPerPoint)
  TextInfo Update(TextParams parms, float pixelsPerPoint)
  int VerticesCount(TextParams parms, float pixelPerPoint)
  NativeArray`1<TextVertex> GetVertices(TextParams parms, float scaling)
  Vector2 GetCursorPosition(CursorPositionStylePainterParameters parms, float scaling)
  float ComputeTextWidth(TextParams parms, float scaling)
  float ComputeTextHeight(TextParams parms, float scaling)
  bool IsElided()
--------------------------------------------------
Класс: UnityEngine.UIElements.TextUtilities
Наследуется от: object
Поля:
Свойства:
Методы:
  float ComputeTextScaling(Matrix4x4 worldMatrix, float pixelsPerPoint)
  Vector2 MeasureVisualElementTextSize(VisualElement ve, string textToMeasure, float width, MeasureMode widthMode, float height, MeasureMode heightMode, ITextHandle textHandle)
  FontAsset GetFontAsset(TextParams textParam)
  FontAsset GetFontAsset(VisualElement ve)
  Font GetFont(TextParams textParam)
  Font GetFont(VisualElement ve)
  bool IsFontAssigned(VisualElement ve)
  bool IsFontAssigned(TextParams textParams)
  PanelTextSettings GetTextSettingsFrom(VisualElement ve)
  PanelTextSettings GetTextSettingsFrom(TextParams textParam)
  TextCoreSettings GetTextCoreSettingsForElement(VisualElement ve)
--------------------------------------------------
Класс: UnityEngine.UIElements.IUxmlAttributes
Поля:
Свойства:
Методы:
  bool TryGetAttributeValue(string attributeName, String& value)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlGenericAttributeNames
Наследуется от: object
Поля:
  string k_NameAttributeName
  string k_PathAttributeName
  string k_SrcAttributeName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlRootElementFactory
Наследуется от: UxmlFactory`2<VisualElement, UxmlRootElementTraits>
Поля:
  string k_ElementName
Свойства:
  string uxmlName
  string uxmlQualifiedName
  string substituteForTypeName
  string substituteForTypeNamespace
  string substituteForTypeQualifiedName
Методы:
  string get_uxmlName()
  string get_uxmlQualifiedName()
  string get_substituteForTypeName()
  string get_substituteForTypeNamespace()
  string get_substituteForTypeQualifiedName()
  VisualElement Create(IUxmlAttributes bag, CreationContext cc)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlRootElementTraits
Наследуется от: UxmlTraits
Поля:
  UxmlStringAttributeDescription m_Name
  UxmlStringAttributeDescription m_Class
Свойства:
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
Методы:
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlStyleFactory
Наследуется от: UxmlFactory`2<VisualElement, UxmlStyleTraits>
Поля:
  string k_ElementName
Свойства:
  string uxmlName
  string uxmlQualifiedName
  string substituteForTypeName
  string substituteForTypeNamespace
  string substituteForTypeQualifiedName
Методы:
  string get_uxmlName()
  string get_uxmlQualifiedName()
  string get_substituteForTypeName()
  string get_substituteForTypeNamespace()
  string get_substituteForTypeQualifiedName()
  VisualElement Create(IUxmlAttributes bag, CreationContext cc)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlStyleTraits
Наследуется от: UxmlTraits
Поля:
  UxmlStringAttributeDescription m_Name
  UxmlStringAttributeDescription m_Path
  UxmlStringAttributeDescription m_Src
Свойства:
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
Методы:
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlTemplateFactory
Наследуется от: UxmlFactory`2<VisualElement, UxmlTemplateTraits>
Поля:
  string k_ElementName
Свойства:
  string uxmlName
  string uxmlQualifiedName
  string substituteForTypeName
  string substituteForTypeNamespace
  string substituteForTypeQualifiedName
Методы:
  string get_uxmlName()
  string get_uxmlQualifiedName()
  string get_substituteForTypeName()
  string get_substituteForTypeNamespace()
  string get_substituteForTypeQualifiedName()
  VisualElement Create(IUxmlAttributes bag, CreationContext cc)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlTemplateTraits
Наследуется от: UxmlTraits
Поля:
  UxmlStringAttributeDescription m_Name
  UxmlStringAttributeDescription m_Path
  UxmlStringAttributeDescription m_Src
Свойства:
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
Методы:
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlAttributeOverridesFactory
Наследуется от: UxmlFactory`2<VisualElement, UxmlAttributeOverridesTraits>
Поля:
  string k_ElementName
Свойства:
  string uxmlName
  string uxmlQualifiedName
  string substituteForTypeName
  string substituteForTypeNamespace
  string substituteForTypeQualifiedName
Методы:
  string get_uxmlName()
  string get_uxmlQualifiedName()
  string get_substituteForTypeName()
  string get_substituteForTypeNamespace()
  string get_substituteForTypeQualifiedName()
  VisualElement Create(IUxmlAttributes bag, CreationContext cc)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlAttributeOverridesTraits
Наследуется от: UxmlTraits
Поля:
  string k_ElementNameAttributeName
  UxmlStringAttributeDescription m_ElementName
Свойства:
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
Методы:
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.TemplateAsset
Наследуется от: VisualElementAsset
Поля:
  string m_TemplateAlias
  List`1<AttributeOverride> m_AttributeOverrides
  List`1<SlotUsageEntry> m_SlotUsages
Свойства:
  string templateAlias
  List`1<AttributeOverride> attributeOverrides
  List`1<SlotUsageEntry> slotUsages
Методы:
  string get_templateAlias()
  void set_templateAlias(string value)
  List`1<AttributeOverride> get_attributeOverrides()
  void set_attributeOverrides(List`1<AttributeOverride> value)
  List`1<SlotUsageEntry> get_slotUsages()
  void set_slotUsages(List`1<SlotUsageEntry> value)
  void .ctor(string templateAlias, string fullTypeName)
  void AddSlotUsage(string slotName, int resId)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlAttributeDescription
Наследуется от: object
Поля:
  string xmlSchemaNamespace
  string <name>k__BackingField
  String[] m_ObsoleteNames
  string <type>k__BackingField
  string <typeNamespace>k__BackingField
  Use <use>k__BackingField
  UxmlTypeRestriction <restriction>k__BackingField
Свойства:
  string name
  IEnumerable`1<string> obsoleteNames
  string type
  string typeNamespace
  string defaultValueAsString
  Use use
  UxmlTypeRestriction restriction
Методы:
  void .ctor()
  string get_name()
  void set_name(string value)
  IEnumerable`1<string> get_obsoleteNames()
  void set_obsoleteNames(IEnumerable`1<string> value)
  string get_type()
  void set_type(string value)
  string get_typeNamespace()
  void set_typeNamespace(string value)
  string get_defaultValueAsString()
  Use get_use()
  void set_use(Use value)
  UxmlTypeRestriction get_restriction()
  void set_restriction(UxmlTypeRestriction value)
  bool TryGetValueFromBagAsString(IUxmlAttributes bag, CreationContext cc, String& value)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Func`3<string, T, T> converterFunc, T defaultValue, T& value)
  T GetValueFromBag(IUxmlAttributes bag, CreationContext cc, Func`3<string, T, T> converterFunc, T defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.TypedUxmlAttributeDescription`1
Наследуется от: UxmlAttributeDescription
Поля:
  T <defaultValue>k__BackingField
Свойства:
  T defaultValue
  string defaultValueAsString
Методы:
  T GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  T get_defaultValue()
  void set_defaultValue(T value)
  string get_defaultValueAsString()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlStringAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<string>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  string GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, String& value)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlFloatAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<float>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  float GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Single& value)
  float ConvertValueToFloat(string v, float defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlDoubleAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<double>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  double GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Double& value)
  double ConvertValueToDouble(string v, double defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlIntAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<int>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  int GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Int32& value)
  int ConvertValueToInt(string v, int defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlLongAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<long>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  long GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Int64& value)
  long ConvertValueToLong(string v, long defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlBoolAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<bool>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  bool GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Boolean& value)
  bool ConvertValueToBool(string v, bool defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlColorAttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<Color>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  Color GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Color& value)
  Color ConvertValueToColor(string v, Color defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlTypeAttributeDescription`1
Наследуется от: TypedUxmlAttributeDescription`1<Type>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  Type GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Type& value)
  Type ConvertValueToType(string v, Type defaultValue)
  Type <GetValueFromBag>b__3_0(string s, Type type1)
  Type <TryGetValueFromBag>b__4_0(string s, Type type1)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlEnumAttributeDescription`1
Наследуется от: TypedUxmlAttributeDescription`1<T>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  T GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, T& value)
  U ConvertValueToEnum(string v, U defaultValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlHash128AttributeDescription
Наследуется от: TypedUxmlAttributeDescription`1<Hash128>
Поля:
Свойства:
  string defaultValueAsString
Методы:
  void .ctor()
  string get_defaultValueAsString()
  Hash128 GetValueFromBag(IUxmlAttributes bag, CreationContext cc)
  bool TryGetValueFromBag(IUxmlAttributes bag, CreationContext cc, Hash128& value)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlChildElementDescription
Наследуется от: object
Поля:
  string <elementName>k__BackingField
  string <elementNamespace>k__BackingField
Свойства:
  string elementName
  string elementNamespace
Методы:
  void .ctor(Type t)
  string get_elementName()
  void set_elementName(string value)
  string get_elementNamespace()
  void set_elementNamespace(string value)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlTraits
Наследуется от: object
Поля:
  bool <canHaveAnyAttribute>k__BackingField
Свойства:
  bool canHaveAnyAttribute
  IEnumerable`1<UxmlAttributeDescription> uxmlAttributesDescription
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
Методы:
  void .ctor()
  bool get_canHaveAnyAttribute()
  void set_canHaveAnyAttribute(bool value)
  IEnumerable`1<UxmlAttributeDescription> get_uxmlAttributesDescription()
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  void Init(VisualElement ve, IUxmlAttributes bag, CreationContext cc)
  IEnumerable`1<UxmlAttributeDescription> GetAllAttributeDescriptionForType(Type t)
--------------------------------------------------
Класс: UnityEngine.UIElements.IUxmlFactory
Поля:
Свойства:
  string uxmlName
  string uxmlNamespace
  string uxmlQualifiedName
  bool canHaveAnyAttribute
  IEnumerable`1<UxmlAttributeDescription> uxmlAttributesDescription
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
  string substituteForTypeName
  string substituteForTypeNamespace
  string substituteForTypeQualifiedName
Методы:
  string get_uxmlName()
  string get_uxmlNamespace()
  string get_uxmlQualifiedName()
  bool get_canHaveAnyAttribute()
  IEnumerable`1<UxmlAttributeDescription> get_uxmlAttributesDescription()
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  string get_substituteForTypeName()
  string get_substituteForTypeNamespace()
  string get_substituteForTypeQualifiedName()
  bool AcceptsAttributeBag(IUxmlAttributes bag, CreationContext cc)
  VisualElement Create(IUxmlAttributes bag, CreationContext cc)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlFactory`2
Наследуется от: object
Поля:
  TTraits m_Traits
Свойства:
  string uxmlName
  string uxmlNamespace
  string uxmlQualifiedName
  bool canHaveAnyAttribute
  IEnumerable`1<UxmlAttributeDescription> uxmlAttributesDescription
  IEnumerable`1<UxmlChildElementDescription> uxmlChildElementsDescription
  string substituteForTypeName
  string substituteForTypeNamespace
  string substituteForTypeQualifiedName
Методы:
  void .ctor()
  string get_uxmlName()
  string get_uxmlNamespace()
  string get_uxmlQualifiedName()
  bool get_canHaveAnyAttribute()
  IEnumerable`1<UxmlAttributeDescription> get_uxmlAttributesDescription()
  IEnumerable`1<UxmlChildElementDescription> get_uxmlChildElementsDescription()
  string get_substituteForTypeName()
  string get_substituteForTypeNamespace()
  string get_substituteForTypeQualifiedName()
  bool AcceptsAttributeBag(IUxmlAttributes bag, CreationContext cc)
  VisualElement Create(IUxmlAttributes bag, CreationContext cc)
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlFactory`1
Наследуется от: UxmlFactory`2<TCreatedType, UxmlTraits>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlTypeRestriction
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(UxmlTypeRestriction other)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlValueMatches
Наследуется от: UxmlTypeRestriction
Поля:
  string <regex>k__BackingField
Свойства:
  string regex
Методы:
  string get_regex()
  void set_regex(string value)
  bool Equals(UxmlTypeRestriction other)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlValueBounds
Наследуется от: UxmlTypeRestriction
Поля:
  string <min>k__BackingField
  string <max>k__BackingField
  bool <excludeMin>k__BackingField
  bool <excludeMax>k__BackingField
Свойства:
  string min
  string max
  bool excludeMin
  bool excludeMax
Методы:
  string get_min()
  void set_min(string value)
  string get_max()
  void set_max(string value)
  bool get_excludeMin()
  void set_excludeMin(bool value)
  bool get_excludeMax()
  void set_excludeMax(bool value)
  bool Equals(UxmlTypeRestriction other)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UxmlEnumeration
Наследуется от: UxmlTypeRestriction
Поля:
  List`1<string> m_Values
Свойства:
  IEnumerable`1<string> values
Методы:
  IEnumerable`1<string> get_values()
  void set_values(IEnumerable`1<string> value)
  bool Equals(UxmlTypeRestriction other)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementAsset
Наследуется от: object
Поля:
  string m_Name
  int m_Id
  int m_OrderInDocument
  int m_ParentId
  int m_RuleIndex
  string m_Text
  PickingMode m_PickingMode
  string m_FullTypeName
  String[] m_Classes
  List`1<string> m_StylesheetPaths
  List`1<StyleSheet> m_Stylesheets
  List`1<string> m_Properties
Свойства:
  int id
  int orderInDocument
  int parentId
  int ruleIndex
  string fullTypeName
  String[] classes
  List`1<string> stylesheetPaths
  bool hasStylesheetPaths
  List`1<StyleSheet> stylesheets
  bool hasStylesheets
Методы:
  int get_id()
  void set_id(int value)
  int get_orderInDocument()
  void set_orderInDocument(int value)
  int get_parentId()
  void set_parentId(int value)
  int get_ruleIndex()
  void set_ruleIndex(int value)
  string get_fullTypeName()
  void set_fullTypeName(string value)
  String[] get_classes()
  void set_classes(String[] value)
  List`1<string> get_stylesheetPaths()
  void set_stylesheetPaths(List`1<string> value)
  bool get_hasStylesheetPaths()
  List`1<StyleSheet> get_stylesheets()
  void set_stylesheets(List`1<StyleSheet> value)
  bool get_hasStylesheets()
  void .ctor(string fullTypeName)
  void OnBeforeSerialize()
  void OnAfterDeserialize()
  void AddProperty(string propertyName, string propertyValue)
  void SetOrAddProperty(string propertyName, string propertyValue)
  bool TryGetAttributeValue(string propertyName, String& value)
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualElementFactoryRegistry
Наследуется от: object
Поля:
  Dictionary`2<string, List`1<IUxmlFactory>> s_Factories
Свойства:
  Dictionary`2<string, List`1<IUxmlFactory>> factories
Методы:
  Dictionary`2<string, List`1<IUxmlFactory>> get_factories()
  void RegisterFactory(IUxmlFactory factory)
  bool TryGetValue(string fullTypeName, List`1& factoryList)
  void RegisterEngineFactories()
  void RegisterUserFactories()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.VisualTreeAsset
Наследуется от: ScriptableObject
Поля:
  string LinkedVEAInTemplatePropertyName
  bool m_ImportedWithErrors
  bool m_ImportedWithWarnings
  Dictionary`2<string, VisualElement> s_TemporarySlotInsertionPoints
  List`1<UsingEntry> m_Usings
  StyleSheet inlineSheet
  List`1<VisualElementAsset> m_VisualElementAssets
  List`1<TemplateAsset> m_TemplateAssets
  List`1<SlotDefinition> m_Slots
  int m_ContentContainerId
  int m_ContentHash
Свойства:
  bool importedWithErrors
  bool importedWithWarnings
  IEnumerable`1<VisualTreeAsset> templateDependencies
  IEnumerable`1<StyleSheet> stylesheets
  List`1<VisualElementAsset> visualElementAssets
  List`1<TemplateAsset> templateAssets
  List`1<SlotDefinition> slots
  int contentContainerId
  int contentHash
Методы:
  bool get_importedWithErrors()
  void set_importedWithErrors(bool value)
  bool get_importedWithWarnings()
  void set_importedWithWarnings(bool value)
  int GetNextChildSerialNumber()
  IEnumerable`1<VisualTreeAsset> get_templateDependencies()
  IEnumerable`1<StyleSheet> get_stylesheets()
  List`1<VisualElementAsset> get_visualElementAssets()
  void set_visualElementAssets(List`1<VisualElementAsset> value)
  List`1<TemplateAsset> get_templateAssets()
  void set_templateAssets(List`1<TemplateAsset> value)
  List`1<SlotDefinition> get_slots()
  void set_slots(List`1<SlotDefinition> value)
  int get_contentContainerId()
  void set_contentContainerId(int value)
  TemplateContainer Instantiate()
  TemplateContainer Instantiate(string bindingPath)
  TemplateContainer CloneTree()
  TemplateContainer CloneTree(string bindingPath)
  void CloneTree(VisualElement target)
  void CloneTree(VisualElement target, Int32& firstElementIndex, Int32& elementAddedCount)
  void CloneTree(VisualElement target, Dictionary`2<string, VisualElement> slotInsertionPoints, List`1<AttributeOverride> attributeOverrides)
  VisualElement CloneSetupRecursively(VisualElementAsset root, Dictionary`2<int, List`1<VisualElementAsset>> idToChildren, CreationContext context)
  int CompareForOrder(VisualElementAsset a, VisualElementAsset b)
  bool TryGetSlotInsertionPoint(int insertionPointId, String& slotName)
  VisualTreeAsset ResolveTemplate(string templateName)
  VisualElement Create(VisualElementAsset asset, CreationContext ctx)
  void AssignClassListFromAssetToElement(VisualElementAsset asset, VisualElement element)
  void AssignStyleSheetFromAssetToElement(VisualElementAsset asset, VisualElement element)
  int get_contentHash()
  void set_contentHash(int value)
  void .ctor()
  void .cctor()
  VisualElement <Create>g__CreateError|49_0(<>c__DisplayClass49_0& )
--------------------------------------------------
Класс: UnityEngine.UIElements.CreationContext
Наследуется от: ValueType
Поля:
  CreationContext Default
  VisualElement <target>k__BackingField
  VisualTreeAsset <visualTreeAsset>k__BackingField
  Dictionary`2<string, VisualElement> <slotInsertionPoints>k__BackingField
  List`1<AttributeOverride> <attributeOverrides>k__BackingField
Свойства:
  VisualElement target
  VisualTreeAsset visualTreeAsset
  Dictionary`2<string, VisualElement> slotInsertionPoints
  List`1<AttributeOverride> attributeOverrides
Методы:
  VisualElement get_target()
  void set_target(VisualElement value)
  VisualTreeAsset get_visualTreeAsset()
  void set_visualTreeAsset(VisualTreeAsset value)
  Dictionary`2<string, VisualElement> get_slotInsertionPoints()
  void set_slotInsertionPoints(Dictionary`2<string, VisualElement> value)
  List`1<AttributeOverride> get_attributeOverrides()
  void set_attributeOverrides(List`1<AttributeOverride> value)
  void .ctor(Dictionary`2<string, VisualElement> slotInsertionPoints, VisualTreeAsset vta, VisualElement target)
  void .ctor(Dictionary`2<string, VisualElement> slotInsertionPoints, List`1<AttributeOverride> attributeOverrides, VisualTreeAsset vta, VisualElement target)
  bool Equals(object obj)
  bool Equals(CreationContext other)
  int GetHashCode()
  bool op_Equality(CreationContext context1, CreationContext context2)
  bool op_Inequality(CreationContext context1, CreationContext context2)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Allocator2D
Наследуется от: object
Поля:
  Vector2Int m_MinSize
  Vector2Int m_MaxSize
  Vector2Int m_MaxAllocSize
  int m_RowHeightBias
  Row[] m_Rows
  List`1<Area> m_Areas
Свойства:
  Vector2Int minSize
  Vector2Int maxSize
  Vector2Int maxAllocSize
Методы:
  Vector2Int get_minSize()
  Vector2Int get_maxSize()
  Vector2Int get_maxAllocSize()
  void .ctor(int minSize, int maxSize, int rowHeightBias)
  void .ctor(Vector2Int minSize, Vector2Int maxSize, int rowHeightBias)
  bool TryAllocate(int width, int height, Alloc2D& alloc2D)
  void Free(Alloc2D alloc2D)
  void BuildAreas(List`1<Area> areas, Vector2Int minSize, Vector2Int maxSize)
  Vector2Int ComputeMaxAllocSize(List`1<Area> areas, int rowHeightBias)
  Row[] BuildRowArray(int maxRowHeight, int rowHeightBias)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.GradientSettingsAtlas
Наследуется от: object
Поля:
  ProfilerMarker s_MarkerWrite
  ProfilerMarker s_MarkerCommit
  int m_Length
  int m_ElemWidth
  BestFitAllocator m_Allocator
  Texture2D m_Atlas
  RawTexture m_RawAtlas
  int s_TextureCounter
  bool <disposed>k__BackingField
  bool <MustCommit>k__BackingField
Свойства:
  int length
  bool disposed
  Texture2D atlas
  bool MustCommit
Методы:
  int get_length()
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  void .ctor(int length)
  void Reset()
  Texture2D get_atlas()
  Alloc Add(int count)
  void Remove(Alloc alloc)
  void Write(Alloc alloc, GradientSettings[] settings, GradientRemap remap)
  bool get_MustCommit()
  void set_MustCommit(bool value)
  void Commit()
  void PrepareAtlas()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.LinkedPoolItem`1
Наследуется от: object
Поля:
  T poolNext
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.LinkedPool`1
Наследуется от: object
Поля:
  Func`1<T> m_CreateFunc
  Action`1<T> m_ResetAction
  int m_Limit
  T m_PoolFirst
  int <Count>k__BackingField
Свойства:
  int Count
Методы:
  void .ctor(Func`1<T> createFunc, Action`1<T> resetAction, int limit)
  int get_Count()
  void set_Count(int value)
  void Clear()
  T Get()
  void Return(T item)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.BasicNode`1
Наследуется от: LinkedPoolItem`1<BasicNode`1<T>>
Поля:
  BasicNode`1<T> next
  T data
Свойства:
Методы:
  void AppendTo(BasicNode`1& first)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.BasicNodePool`1
Наследуется от: LinkedPool`1<BasicNode`1<T>>
Поля:
Свойства:
Методы:
  void Reset(BasicNode`1<T> node)
  BasicNode`1<T> Create()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.MeshBuilder
Наследуется от: object
Поля:
  ProfilerMarker s_VectorGraphics9Slice
  ProfilerMarker s_VectorGraphicsSplitTriangle
  ProfilerMarker s_VectorGraphicsScaleTriangle
  ProfilerMarker s_VectorGraphicsStretch
  int s_MaxTextMeshVertices
  UInt16[] slicedQuadIndices
  Single[] k_TexCoordSlicesX
  Single[] k_TexCoordSlicesY
  Single[] k_PositionSlicesX
  Single[] k_PositionSlicesY
  VertexClipEdge[] s_AllClipEdges
Свойства:
Методы:
  void MakeBorder(BorderParams borderParams, float posZ, AllocMeshData meshAlloc)
  void MakeSolidRect(RectangleParams rectParams, float posZ, AllocMeshData meshAlloc)
  void MakeTexturedRect(RectangleParams rectParams, float posZ, AllocMeshData meshAlloc, ColorPage colorPage)
  Vertex ConvertTextVertexToUIRVertex(MeshInfo info, int index, Vector2 offset, VertexFlags flags, bool isDynamicColor)
  Vertex ConvertTextVertexToUIRVertex(TextVertex textVertex, Vector2 offset)
  int LimitTextVertices(int vertexCount, bool logTruncation)
  void MakeText(MeshInfo meshInfo, Vector2 offset, AllocMeshData meshAlloc, VertexFlags flags, bool isDynamicColor)
  void MakeText(NativeArray`1<TextVertex> uiVertices, Vector2 offset, AllocMeshData meshAlloc)
  void UpdateText(NativeArray`1<TextVertex> uiVertices, Vector2 offset, Matrix4x4 transform, Color32 xformClipPages, Color32 ids, Color32 flags, Color32 opacityPageSettingIndex, NativeSlice`1<Vertex> vertices)
  void MakeQuad(Rect rcPosition, Rect rcTexCoord, Color color, float posZ, AllocMeshData meshAlloc, ColorPage colorPage)
  void MakeSlicedQuad(RectangleParams& rectParams, float posZ, AllocMeshData meshAlloc)
  void MakeVectorGraphics(RectangleParams rectParams, int settingIndexOffset, AllocMeshData meshAlloc, Int32& finalVertexCount, Int32& finalIndexCount)
  void MakeVectorGraphicsStretchBackground(Vertex[] svgVertices, UInt16[] svgIndices, float svgWidth, float svgHeight, Rect targetRect, Rect sourceUV, ScaleMode scaleMode, Color tint, int settingIndexOffset, AllocMeshData meshAlloc, Int32& finalVertexCount, Int32& finalIndexCount)
  void SplitTriangle(Vertex* vertices, UInt16* indices, Int32& vertexCount, int indexToProcess, Int32& indexCount, float svgWidth, float svgHeight, Vector4 sliceLTRB, int sliceIndex)
  void ScaleSplittedTriangles(Vertex* vertices, int vertexCount, float svgWidth, float svgHeight, Rect targetRect, Vector4 sliceLTRB)
  void MakeVectorGraphics9SliceBackground(Vertex[] svgVertices, UInt16[] svgIndices, float svgWidth, float svgHeight, Rect targetRect, Vector4 sliceLTRB, bool stretch, Color tint, int settingIndexOffset, AllocMeshData meshAlloc)
  ClipCounts UpperBoundApproximateRectClippingResults(Vertex[] vertices, UInt16[] indices, Vector4 clipRectMinMax)
  void RectClip(Vertex[] vertices, UInt16[] indices, Vector4 clipRectMinMax, MeshWriteData mwd, ClipCounts cc, Int32& newVertexCount)
  void RectClipTriangle(Vertex* vt, UInt16* it, Vector4 clipRectMinMax, MeshWriteData mwd, UInt16& nextNewVertex)
  Vector3 GetVertexBaryCentricCoordinates(Vertex* vt, float x, float y)
  Vertex InterpolateVertexInTriangle(Vertex* vt, float x, float y, Vector3 uvw)
  Vertex InterpolateVertexInTriangleEdge(Vertex* vt, int e0, int e1, float t)
  float IntersectSegments(float ax, float ay, float bx, float by, float cx, float cy, float dx, float dy)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.ChainBuilderStats
Наследуется от: ValueType
Поля:
  UInt32 elementsAdded
  UInt32 elementsRemoved
  UInt32 recursiveClipUpdates
  UInt32 recursiveClipUpdatesExpanded
  UInt32 nonRecursiveClipUpdates
  UInt32 recursiveTransformUpdates
  UInt32 recursiveTransformUpdatesExpanded
  UInt32 recursiveOpacityUpdates
  UInt32 recursiveOpacityUpdatesExpanded
  UInt32 colorUpdates
  UInt32 colorUpdatesExpanded
  UInt32 recursiveVisualUpdates
  UInt32 recursiveVisualUpdatesExpanded
  UInt32 nonRecursiveVisualUpdates
  UInt32 dirtyProcessed
  UInt32 nudgeTransformed
  UInt32 boneTransformed
  UInt32 skipTransformed
  UInt32 visualUpdateTransformed
  UInt32 updatedMeshAllocations
  UInt32 newMeshAllocations
  UInt32 groupTransformElementsChanged
  UInt32 immedateRenderersActive
  UInt32 textUpdates
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.RenderChain
Наследуется от: object
Поля:
  RenderChainCommand m_FirstCommand
  DepthOrderedDirtyTracking m_DirtyTracker
  LinkedPool`1<RenderChainCommand> m_CommandPool
  BasicNodePool`1<TextureEntry> m_TexturePool
  List`1<RenderNodeData> m_RenderNodesData
  Shader m_DefaultShader
  Shader m_DefaultWorldSpaceShader
  Material m_DefaultMat
  Material m_DefaultWorldSpaceMat
  bool m_BlockDirtyRegistration
  int m_StaticIndex
  int m_ActiveRenderNodes
  int m_CustomMaterialCommands
  ChainBuilderStats m_Stats
  UInt32 m_StatsElementsAdded
  UInt32 m_StatsElementsRemoved
  VisualElement m_FirstTextElement
  UIRTextUpdatePainter m_TextUpdatePainter
  int m_TextElementCount
  int m_DirtyTextStartIndex
  int m_DirtyTextRemaining
  bool m_FontWasReset
  Dictionary`2<VisualElement, Vector2> m_LastGroupTransformElementScale
  TextureRegistry m_TextureRegistry
  ProfilerMarker s_MarkerProcess
  ProfilerMarker s_MarkerClipProcessing
  ProfilerMarker s_MarkerOpacityProcessing
  ProfilerMarker s_MarkerColorsProcessing
  ProfilerMarker s_MarkerTransformProcessing
  ProfilerMarker s_MarkerVisualsProcessing
  ProfilerMarker s_MarkerTextRegen
  bool <disposed>k__BackingField
  Action OnPreRender
  BaseVisualElementPanel <panel>k__BackingField
  UIRenderDevice <device>k__BackingField
  AtlasBase <atlas>k__BackingField
  VectorImageManager <vectorImageManager>k__BackingField
  UIRVEShaderInfoAllocator shaderInfoAllocator
  UIRStylePainter <painter>k__BackingField
  bool <drawStats>k__BackingField
  bool <drawInCameras>k__BackingField
Свойства:
  RenderChainCommand firstCommand
  bool disposed
  ChainBuilderStats stats
  BaseVisualElementPanel panel
  UIRenderDevice device
  AtlasBase atlas
  VectorImageManager vectorImageManager
  UIRStylePainter painter
  bool drawStats
  bool drawInCameras
  Shader defaultShader
  Shader defaultWorldSpaceShader
Методы:
  RenderChainCommand get_firstCommand()
  void .cctor()
  void .ctor(BaseVisualElementPanel panel)
  void .ctor(BaseVisualElementPanel panel, UIRenderDevice device, AtlasBase atlas, VectorImageManager vectorImageManager)
  void Constructor(BaseVisualElementPanel panelObj, UIRenderDevice deviceObj, AtlasBase atlas, VectorImageManager vectorImageMan)
  void Destructor()
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  ChainBuilderStats get_stats()
  void ProcessChanges()
  void Render()
  void ProcessTextRegen(bool timeSliced)
  void UIEOnChildAdded(VisualElement ve)
  void UIEOnChildrenReordered(VisualElement ve)
  void UIEOnChildRemoving(VisualElement ve)
  void StopTrackingGroupTransformElement(VisualElement ve)
  void UIEOnRenderHintsChanged(VisualElement ve)
  void UIEOnClippingChanged(VisualElement ve, bool hierarchical)
  void UIEOnOpacityChanged(VisualElement ve, bool hierarchical)
  void UIEOnColorChanged(VisualElement ve)
  void UIEOnTransformOrSizeChanged(VisualElement ve, bool transformChanged, bool clipRectSizeChanged)
  void UIEOnVisualsChanged(VisualElement ve, bool hierarchical)
  BaseVisualElementPanel get_panel()
  void set_panel(BaseVisualElementPanel value)
  UIRenderDevice get_device()
  void set_device(UIRenderDevice value)
  AtlasBase get_atlas()
  void set_atlas(AtlasBase value)
  VectorImageManager get_vectorImageManager()
  void set_vectorImageManager(VectorImageManager value)
  UIRStylePainter get_painter()
  void set_painter(UIRStylePainter value)
  bool get_drawStats()
  void set_drawStats(bool value)
  bool get_drawInCameras()
  void set_drawInCameras(bool value)
  Shader get_defaultShader()
  void set_defaultShader(Shader value)
  Shader get_defaultWorldSpaceShader()
  void set_defaultWorldSpaceShader(Shader value)
  Material GetStandardMaterial()
  Material GetStandardWorldSpaceMaterial()
  void EnsureFitsDepth(int depth)
  void ChildWillBeRemoved(VisualElement ve)
  RenderChainCommand AllocCommand()
  void FreeCommand(RenderChainCommand cmd)
  void OnRenderCommandAdded(RenderChainCommand command)
  void OnRenderCommandsRemoved(RenderChainCommand firstCommand, RenderChainCommand lastCommand)
  void AddTextElement(VisualElement ve)
  void RemoveTextElement(VisualElement ve)
  void OnGroupTransformElementChangedTransform(VisualElement ve)
  RenderNodeData AccessRenderNodeData(IntPtr obj)
  void OnRenderNodeExecute(IntPtr obj)
  void OnRegisterIntermediateRenderers(Camera camera)
  void OnRegisterIntermediateRendererMat(BaseRuntimePanel rtp, RenderChain renderChain, RenderNodeData& rnd, Camera camera, int sameDistanceSortPriority)
  void RepaintTexturedElements()
  void OnFontReset(Font font)
  void AppendTexture(VisualElement ve, Texture src, TextureId id, bool isAtlas)
  void ResetTextures(VisualElement ve)
  void DrawStats()
  VisualElement GetFirstElementInPanel(VisualElement ve)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.RenderDataDirtyTypes
Наследуется от: Enum
Поля:
  int value__
  RenderDataDirtyTypes None
  RenderDataDirtyTypes Transform
  RenderDataDirtyTypes ClipRectSize
  RenderDataDirtyTypes Clipping
  RenderDataDirtyTypes ClippingHierarchy
  RenderDataDirtyTypes Visuals
  RenderDataDirtyTypes VisualsHierarchy
  RenderDataDirtyTypes Opacity
  RenderDataDirtyTypes OpacityHierarchy
  RenderDataDirtyTypes Color
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.RenderDataDirtyTypeClasses
Наследуется от: Enum
Поля:
  int value__
  RenderDataDirtyTypeClasses Clipping
  RenderDataDirtyTypeClasses Opacity
  RenderDataDirtyTypeClasses Color
  RenderDataDirtyTypeClasses TransformSize
  RenderDataDirtyTypeClasses Visuals
  RenderDataDirtyTypeClasses Count
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.RenderChainVEData
Наследуется от: ValueType
Поля:
  VisualElement prev
  VisualElement next
  VisualElement groupTransformAncestor
  VisualElement boneTransformAncestor
  VisualElement prevDirty
  VisualElement nextDirty
  int hierarchyDepth
  RenderDataDirtyTypes dirtiedValues
  UInt32 dirtyID
  RenderChainCommand firstCommand
  RenderChainCommand lastCommand
  RenderChainCommand firstClosingCommand
  RenderChainCommand lastClosingCommand
  bool isInChain
  bool isHierarchyHidden
  bool localFlipsWinding
  bool localTransformScaleZero
  bool worldFlipsWinding
  ClipMethod clipMethod
  int childrenStencilRef
  int childrenMaskDepth
  bool disableNudging
  bool usesLegacyText
  MeshHandle data
  MeshHandle closingData
  Matrix4x4 verticesSpace
  int displacementUVStart
  int displacementUVEnd
  BMPAlloc transformID
  BMPAlloc clipRectID
  BMPAlloc opacityID
  BMPAlloc textCoreSettingsID
  BMPAlloc backgroundColorID
  BMPAlloc borderLeftColorID
  BMPAlloc borderTopColorID
  BMPAlloc borderRightColorID
  BMPAlloc borderBottomColorID
  BMPAlloc tintColorID
  float compositeOpacity
  Color backgroundColor
  VisualElement prevText
  VisualElement nextText
  List`1<RenderChainTextEntry> textEntries
  BasicNode`1<TextureEntry> textures
Свойства:
  RenderChainCommand lastClosingOrLastCommand
Методы:
  RenderChainCommand get_lastClosingOrLastCommand()
  bool AllocatesID(BMPAlloc alloc)
  bool InheritsID(BMPAlloc alloc)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.RenderChainTextEntry
Наследуется от: ValueType
Поля:
  RenderChainCommand command
  int firstVertex
  int vertexCount
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.TextureEntry
Наследуется от: ValueType
Поля:
  Texture source
  TextureId actual
  bool replaced
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.BaseShaderInfoStorage
Наследуется от: object
Поля:
  int s_TextureCounter
  ProfilerMarker s_MarkerCopyTexture
  ProfilerMarker s_MarkerGetTextureData
  ProfilerMarker s_MarkerUpdateTexture
  bool <disposed>k__BackingField
Свойства:
  Texture2D texture
  bool disposed
Методы:
  Texture2D get_texture()
  bool AllocateRect(int width, int height, RectInt& uvs)
  void SetTexel(int x, int y, Color color)
  void UpdateTexture()
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.ShaderInfoStorage`1
Наследуется от: BaseShaderInfoStorage
Поля:
  int m_InitialSize
  int m_MaxSize
  TextureFormat m_Format
  Func`2<Color, T> m_Convert
  UIRAtlasAllocator m_Allocator
  Texture2D m_Texture
  NativeArray`1<T> m_Texels
Свойства:
  Texture2D texture
Методы:
  void .ctor(TextureFormat format, Func`2<Color, T> convert, int initialSize, int maxSize)
  void Dispose(bool disposing)
  Texture2D get_texture()
  bool AllocateRect(int width, int height, RectInt& uvs)
  void SetTexel(int x, int y, Color color)
  void UpdateTexture()
  void CreateOrExpandTexture()
  void CpuBlit(NativeArray`1<T> src, int srcWidth, int srcHeight, NativeArray`1<T> dst, int dstWidth, int dstHeight)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.ShaderInfoStorageRGBA32
Наследуется от: ShaderInfoStorage`1<Color32>
Поля:
  Func`2<Color, Color32> s_Convert
Свойства:
Методы:
  void .ctor(int initialSize, int maxSize)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.ShaderInfoStorageRGBAFloat
Наследуется от: ShaderInfoStorage`1<Color>
Поля:
  Func`2<Color, Color> s_Convert
Свойства:
Методы:
  void .ctor(int initialSize, int maxSize)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Shaders
Наследуется от: object
Поля:
  string k_AtlasBlit
  string k_Editor
  string k_Runtime
  string k_RuntimeWorld
  string k_GraphView
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Tessellation
Наследуется от: object
Поля:
  float kEpsilon
  float kUnusedArc
  ushort kSubdivisions
  ProfilerMarker s_MarkerTessellateRect
  ProfilerMarker s_MarkerTessellateBorder
  int kMaxEdgeBit
  Edges[] s_AllEdges
Свойства:
Методы:
  void TessellateRect(RectangleParams rectParams, float posZ, AllocMeshData meshAlloc, bool computeUVs)
  void TessellateQuad(RectangleParams rectParams, float posZ, AllocMeshData meshAlloc)
  void TessellateBorder(BorderParams borderParams, float posZ, AllocMeshData meshAlloc)
  void TessellateRoundedCorners(RectangleParams& rectParams, float posZ, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateRoundedBorders(BorderParams& border, float posZ, MeshWriteData mesh, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateRoundedCorner(Rect rect, Color32 color, float posZ, Vector2 radius, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateRoundedBorder(Rect rect, Color32 leftColor, Color32 topColor, float posZ, Vector2 radius, float leftWidth, float topWidth, MeshWriteData mesh, ColorPage leftColorPage, ColorPage topColorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  Vector2 IntersectLines(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3)
  int LooseCompare(float a, float b)
  void TessellateComplexBorderCorner(Rect rect, Vector2 radius, float leftWidth, float topWidth, Color32 leftColor, Color32 topColor, float posZ, MeshWriteData mesh, ColorPage leftColorPage, ColorPage topColorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateQuad(Rect rect, Color32 color, float posZ, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateQuad(Rect rect, Edges smoothedEdges, Color32 color, float posZ, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  int EdgesCount(Edges edges)
  void TessellateQuad(Rect rect, Edges smoothedEdges, Vector2* offsets, Color32 color, float posZ, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void EncodeStraightArc(Vertex& v0, Vertex& v1, Vertex& center, float radius)
  void ExpandTriangle(Vector3& v0, Vector3& v1, Vector3 center, float factor)
  void TessellateQuadSingleEdge(Rect rect, Edges smoothedEdge, Color32 color, float posZ, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateStraightBorder(Rect rect, Edges smoothedEdge, float miterOffset, Color color, float posZ, MeshWriteData mesh, ColorPage colorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  Vector4 GetInterpolatedCircle(Vector2 p, Vertex& v0, Vertex& v1, Vertex& v2)
  void ComputeBarycentricCoordinates(Vector2 p, Vector2 a, Vector2 b, Vector2 c, Single& u, Single& v, Single& w)
  void TessellateFilledFan(Vector2 center, Vector2 radius, Vector2 miterOffset, float leftWidth, float topWidth, Color32 leftColor, Color32 topColor, float posZ, MeshWriteData mesh, ColorPage leftColorPage, ColorPage topColorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void TessellateBorderedFan(Vector2 center, Vector2 outerRadius, float leftWidth, float topWidth, Color32 leftColor, Color32 topColor, float posZ, MeshWriteData mesh, ColorPage leftColorPage, ColorPage topColorPage, UInt16& vertexCount, UInt16& indexCount, bool countOnly)
  void MirrorVertices(Rect rect, NativeSlice`1<Vertex> vertices, int vertexStart, int vertexCount, bool flipHorizontal)
  void FlipWinding(NativeSlice`1<ushort> indices, int indexStart, int indexCount)
  void ComputeUVs(Rect tessellatedRect, Rect textureRect, Rect uvRegion, NativeSlice`1<Vertex> vertices)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.TextCoreSettings
Наследуется от: ValueType
Поля:
  Color faceColor
  Color outlineColor
  float outlineWidth
  Color underlayColor
  Vector2 underlayOffset
  float underlaySoftness
Свойства:
Методы:
  bool Equals(object obj)
  bool Equals(TextCoreSettings other)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.TextureBlitter
Наследуется от: object
Поля:
  int k_TextureSlotCount
  Int32[] k_TextureIds
  ProfilerMarker s_CommitSampler
  BlitInfo[] m_SingleBlit
  Material m_BlitMaterial
  MaterialPropertyBlock m_Properties
  RectInt m_Viewport
  RenderTexture m_PrevRT
  List`1<BlitInfo> m_PendingBlits
  bool <disposed>k__BackingField
Свойства:
  bool disposed
  int queueLength
Методы:
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  void .cctor()
  void .ctor(int capacity)
  void QueueBlit(Texture src, RectInt srcRect, Vector2Int dstPos, bool addBorder, Color tint)
  void BlitOneNow(RenderTexture dst, Texture src, RectInt srcRect, Vector2Int dstPos, bool addBorder, Color tint)
  int get_queueLength()
  void Commit(RenderTexture dst)
  void Reset()
  void BeginBlit(RenderTexture dst)
  void DoBlit(IList`1<BlitInfo> blitInfos, int startIndex)
  void EndBlit()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.TextureSlotManager
Наследуется от: object
Поля:
  int k_SlotCount
  Int32[] slotIds
  int textureTableId
  TextureId[] m_Textures
  Int32[] m_Tickets
  int m_CurrentTicket
  int m_FirstUsedTicket
  Vector4[] m_GpuTextures
  int <FreeSlots>k__BackingField
  TextureRegistry textureRegistry
Свойства:
  int FreeSlots
Методы:
  void .cctor()
  void .ctor()
  void Reset()
  void StartNewBatch()
  int IndexOf(TextureId id)
  void MarkUsed(int slotIndex)
  int get_FreeSlots()
  void set_FreeSlots(int value)
  int FindOldestSlot()
  void Bind(TextureId id, int slot, MaterialPropertyBlock mat)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.VectorImageRenderInfoPool
Наследуется от: LinkedPool`1<VectorImageRenderInfo>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.VectorImageRenderInfo
Наследуется от: LinkedPoolItem`1<VectorImageRenderInfo>
Поля:
  int useCount
  GradientRemap firstGradientRemap
  Alloc gradientSettingsAlloc
Свойства:
Методы:
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.GradientRemapPool
Наследуется от: LinkedPool`1<GradientRemap>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.GradientRemap
Наследуется от: LinkedPoolItem`1<GradientRemap>
Поля:
  int origIndex
  int destIndex
  RectInt location
  GradientRemap next
  TextureId atlas
Свойства:
Методы:
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.VectorImageManager
Наследуется от: object
Поля:
  List`1<VectorImageManager> instances
  ProfilerMarker s_MarkerRegister
  ProfilerMarker s_MarkerUnregister
  AtlasBase m_Atlas
  Dictionary`2<VectorImage, VectorImageRenderInfo> m_Registered
  VectorImageRenderInfoPool m_RenderInfoPool
  GradientRemapPool m_GradientRemapPool
  GradientSettingsAtlas m_GradientSettingsAtlas
  bool m_LoggedExhaustedSettingsAtlas
  bool <disposed>k__BackingField
Свойства:
  Texture2D atlas
  bool disposed
Методы:
  Texture2D get_atlas()
  void .ctor(AtlasBase atlas)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  void Reset()
  void Commit()
  GradientRemap AddUser(VectorImage vi, VisualElement context)
  void RemoveUser(VectorImage vi)
  VectorImageRenderInfo Register(VectorImage vi, VisualElement context)
  void Unregister(VectorImage vi, VectorImageRenderInfo renderInfo)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.OwnedState
Наследуется от: Enum
Поля:
  byte value__
  OwnedState Inherited
  OwnedState Owned
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.BMPAlloc
Наследуется от: ValueType
Поля:
  BMPAlloc Invalid
  int page
  ushort pageLine
  byte bitIndex
  OwnedState ownedState
Свойства:
Методы:
  bool Equals(BMPAlloc other)
  bool IsValid()
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.BitmapAllocator32
Наследуется от: ValueType
Поля:
  int kPageWidth
  int m_PageHeight
  List`1<Page> m_Pages
  List`1<UInt32> m_AllocMap
  int m_EntryWidth
  int m_EntryHeight
Свойства:
  int entryWidth
  int entryHeight
Методы:
  void Construct(int pageHeight, int entryWidth, int entryHeight)
  void ForceFirstAlloc(ushort firstPageX, ushort firstPageY)
  BMPAlloc Allocate(BaseShaderInfoStorage storage)
  void Free(BMPAlloc alloc)
  int get_entryWidth()
  int get_entryHeight()
  void GetAllocPageAtlasLocation(int page, UInt16& x, UInt16& y)
  byte CountTrailingZeroes(UInt32 val)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.UIRVEShaderInfoAllocator
Наследуется от: ValueType
Поля:
  BaseShaderInfoStorage m_Storage
  BitmapAllocator32 m_TransformAllocator
  BitmapAllocator32 m_ClipRectAllocator
  BitmapAllocator32 m_OpacityAllocator
  BitmapAllocator32 m_ColorAllocator
  BitmapAllocator32 m_TextSettingsAllocator
  bool m_StorageReallyCreated
  bool m_VertexTexturingEnabled
  NativeArray`1<Transform3x4> m_Transforms
  NativeArray`1<Vector4> m_ClipRects
  Vector2Int identityTransformTexel
  Vector2Int infiniteClipRectTexel
  Vector2Int fullOpacityTexel
  Vector2Int clearColorTexel
  Vector2Int defaultTextCoreSettingsTexel
  Matrix4x4 identityTransformValue
  Vector4 identityTransformRow0Value
  Vector4 identityTransformRow1Value
  Vector4 identityTransformRow2Value
  Vector4 infiniteClipRectValue
  Vector4 fullOpacityValue
  Vector4 clearColorValue
  TextCoreSettings defaultTextCoreSettingsValue
  BMPAlloc identityTransform
  BMPAlloc infiniteClipRect
  BMPAlloc fullOpacity
  BMPAlloc clearColor
  BMPAlloc defaultTextCoreSettings
Свойства:
  int pageWidth
  int pageHeight
  NativeSlice`1<Transform3x4> transformConstants
  NativeSlice`1<Vector4> clipRectConstants
  Texture atlas
  bool internalAtlasCreated
Методы:
  int get_pageWidth()
  int get_pageHeight()
  Vector2Int AllocToTexelCoord(BitmapAllocator32& allocator, BMPAlloc alloc)
  int AllocToConstantBufferIndex(BMPAlloc alloc)
  bool AtlasRectMatchesPage(BitmapAllocator32& allocator, BMPAlloc defAlloc, RectInt atlasRect)
  NativeSlice`1<Transform3x4> get_transformConstants()
  NativeSlice`1<Vector4> get_clipRectConstants()
  Texture get_atlas()
  bool get_internalAtlasCreated()
  void Construct()
  void ReallyCreateStorage()
  void Dispose()
  void IssuePendingStorageChanges()
  BMPAlloc AllocTransform()
  BMPAlloc AllocClipRect()
  BMPAlloc AllocOpacity()
  BMPAlloc AllocColor()
  BMPAlloc AllocTextCoreSettings(TextCoreSettings settings)
  void SetTransformValue(BMPAlloc alloc, Matrix4x4 xform)
  void SetClipRectValue(BMPAlloc alloc, Vector4 clipRect)
  void SetOpacityValue(BMPAlloc alloc, float opacity)
  void SetColorValue(BMPAlloc alloc, Color color, bool isEditorContext)
  void SetTextCoreSettingValue(BMPAlloc alloc, TextCoreSettings settings, bool isEditorContext)
  void FreeTransform(BMPAlloc alloc)
  void FreeClipRect(BMPAlloc alloc)
  void FreeOpacity(BMPAlloc alloc)
  void FreeColor(BMPAlloc alloc)
  void FreeTextCoreSettings(BMPAlloc alloc)
  Color32 TransformAllocToVertexData(BMPAlloc alloc)
  Color32 ClipRectAllocToVertexData(BMPAlloc alloc)
  Color32 OpacityAllocToVertexData(BMPAlloc alloc)
  Color32 ColorAllocToVertexData(BMPAlloc alloc)
  Color32 TextCoreSettingsToVertexData(BMPAlloc alloc)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Transform3x4
Наследуется от: ValueType
Поля:
  Vector4 v0
  Vector4 v1
  Vector4 v2
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.MeshHandle
Наследуется от: LinkedPoolItem`1<MeshHandle>
Поля:
  Alloc allocVerts
  Alloc allocIndices
  UInt32 triangleCount
  Page allocPage
  UInt32 allocTime
  UInt32 updateAllocID
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.UIRenderDevice
Наследуется от: object
Поля:
  UInt32 k_MaxQueuedFrameCount
  int k_PruneEmptyPageFrameCount
  bool m_MockDevice
  IntPtr m_DefaultStencilState
  IntPtr m_VertexDecl
  Page m_FirstPage
  UInt32 m_NextPageVertexCount
  UInt32 m_LargeMeshVertexCount
  float m_IndexToVertexCountRatio
  List`1<List`1<AllocToFree>> m_DeferredFrees
  List`1<List`1<AllocToUpdate>> m_Updates
  UInt32[] m_Fences
  MaterialPropertyBlock m_StandardMatProps
  UInt32 m_FrameIndex
  UInt32 m_NextUpdateID
  DrawStatistics m_DrawStats
  LinkedPool`1<MeshHandle> m_MeshHandles
  DrawParams m_DrawParams
  TextureSlotManager m_TextureSlotManager
  LinkedList`1<DeviceToFree> m_DeviceFreeQueue
  int m_ActiveDeviceCount
  bool m_SubscribedToNotifications
  bool m_SynchronousFree
  int s_FontTexPropID
  int s_FontTexSDFScaleID
  int s_GradientSettingsTexID
  int s_ShaderInfoTexID
  int s_TransformsPropID
  int s_ClipRectsPropID
  int s_ClipSpaceParamsID
  ProfilerMarker s_MarkerAllocate
  ProfilerMarker s_MarkerFree
  ProfilerMarker s_MarkerAdvanceFrame
  ProfilerMarker s_MarkerFence
  ProfilerMarker s_MarkerBeforeDraw
  Nullable`1<bool> s_VertexTexturingIsAvailable
  string k_VertexTexturingIsAvailableTag
  string k_VertexTexturingIsAvailableTrue
  Nullable`1<bool> s_ShaderModelIs35
  string k_ShaderModelIs35Tag
  string k_ShaderModelIs35True
  UInt32 <maxVerticesPerPage>k__BackingField
  bool <breakBatches>k__BackingField
  Texture2D s_DefaultShaderInfoTexFloat
  Texture2D s_DefaultShaderInfoTexARGB8
  bool <disposed>k__BackingField
Свойства:
  UInt32 maxVerticesPerPage
  bool breakBatches
  Texture2D defaultShaderInfoTexFloat
  Texture2D defaultShaderInfoTexARGB8
  bool vertexTexturingIsAvailable
  bool shaderModelIs35
  bool fullyCreated
  bool disposed
Методы:
  UInt32 get_maxVerticesPerPage()
  bool get_breakBatches()
  void set_breakBatches(bool value)
  void .cctor()
  void .ctor(UInt32 initialVertexCapacity, UInt32 initialIndexCapacity)
  void .ctor(UInt32 initialVertexCapacity, UInt32 initialIndexCapacity, bool mockDevice)
  Texture2D get_defaultShaderInfoTexFloat()
  Texture2D get_defaultShaderInfoTexARGB8()
  bool get_vertexTexturingIsAvailable()
  bool get_shaderModelIs35()
  void InitVertexDeclaration()
  void CompleteCreation()
  bool get_fullyCreated()
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void DisposeImmediate()
  void Dispose(bool disposing)
  MeshHandle Allocate(UInt32 vertexCount, UInt32 indexCount, NativeSlice`1& vertexData, NativeSlice`1& indexData, UInt16& indexOffset)
  void Update(MeshHandle mesh, UInt32 vertexCount, NativeSlice`1& vertexData)
  void Update(MeshHandle mesh, UInt32 vertexCount, UInt32 indexCount, NativeSlice`1& vertexData, NativeSlice`1& indexData, UInt16& indexOffset)
  void UpdateCopyBackIndices(MeshHandle mesh, bool copyBackIndices)
  List`1<AllocToUpdate> ActiveUpdatesForMeshHandle(MeshHandle mesh)
  bool TryAllocFromPage(Page page, UInt32 vertexCount, UInt32 indexCount, Alloc& va, Alloc& ia, bool shortLived)
  void Allocate(MeshHandle meshHandle, UInt32 vertexCount, UInt32 indexCount, NativeSlice`1& vertexData, NativeSlice`1& indexData, bool shortLived)
  void UpdateAfterGPUUsedData(MeshHandle mesh, UInt32 vertexCount, UInt32 indexCount, NativeSlice`1& vertexData, NativeSlice`1& indexData, UInt16& indexOffset, AllocToUpdate& allocToUpdate, bool copyBackIndices)
  void Free(MeshHandle mesh)
  Vector4 GetClipSpaceParams()
  void OnFrameRenderingBegin()
  NativeSlice`1<T> PtrToSlice(Void* p, int count)
  void ApplyDrawCommandState(RenderChainCommand cmd, int textureSlot, Material newMat, bool newMatDiffers, bool newFontDiffers, EvaluationState& st)
  void ApplyBatchState(EvaluationState& st, bool allowMaterialChange)
  void EvaluateChain(RenderChainCommand head, Material initialMat, Material defaultMat, Texture gradientSettings, Texture shaderInfo, float pixelsPerPoint, NativeSlice`1<Transform3x4> transforms, NativeSlice`1<Vector4> clipRects, MaterialPropertyBlock stateMatProps, bool allowMaterialChange, Exception& immediateException)
  void UpdateFenceValue()
  void KickRanges(DrawBufferRange* ranges, Int32& rangesReady, Int32& rangesStart, int rangesCount, Page curPage)
  void DrawRanges(GPUBuffer`1<I> ib, GPUBuffer`1<T> vb, NativeSlice`1<DrawBufferRange> ranges)
  void WaitOnAllCpuFences()
  void WaitOnCpuFence(UInt32 fence)
  void AdvanceFrame()
  void PruneUnusedPages()
  void PrepareForGfxDeviceRecreate()
  void WrapUpGfxDeviceRecreate()
  void FlushAllPendingDeviceDisposes()
  AllocationStatistics GatherAllocationStatistics()
  DrawStatistics GatherDrawStatistics()
  void ProcessDeviceFreeQueue()
  void OnEngineUpdateGlobal()
  void OnFlushPendingResources()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Alloc
Наследуется от: ValueType
Поля:
  UInt32 start
  UInt32 size
  object handle
  bool shortLived
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.HeapStatistics
Наследуется от: ValueType
Поля:
  UInt32 numAllocs
  UInt32 totalSize
  UInt32 allocatedSize
  UInt32 freeSize
  UInt32 largestAvailableBlock
  UInt32 availableBlocksCount
  UInt32 blockCount
  UInt32 highWatermark
  float fragmentation
  HeapStatistics[] subAllocators
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.BestFitAllocator
Наследуется от: object
Поля:
  UInt32 <totalSize>k__BackingField
  Block m_FirstBlock
  Block m_FirstAvailableBlock
  BlockPool m_BlockPool
  UInt32 m_HighWatermark
Свойства:
  UInt32 totalSize
  UInt32 highWatermark
Методы:
  void .ctor(UInt32 size)
  UInt32 get_totalSize()
  UInt32 get_highWatermark()
  Alloc Allocate(UInt32 size)
  void Free(Alloc alloc)
  Block CoalesceBlockWithPrevious(Block block)
  HeapStatistics GatherStatistics()
  Block BestFitFindAvailableBlock(UInt32 size)
  void SplitBlock(Block block, UInt32 size)
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.GPUBufferAllocator
Наследуется от: object
Поля:
  BestFitAllocator m_Low
  BestFitAllocator m_High
Свойства:
  bool isEmpty
Методы:
  void .ctor(UInt32 maxSize)
  Alloc Allocate(UInt32 size, bool shortLived)
  void Free(Alloc alloc)
  bool get_isEmpty()
  HeapStatistics GatherStatistics()
  bool HighLowCollide()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Page
Наследуется от: object
Поля:
  bool <disposed>k__BackingField
  DataSet`1<Vertex> vertices
  DataSet`1<ushort> indices
  Page next
  int framesEmpty
Свойства:
  bool disposed
  bool isEmpty
Методы:
  void .ctor(UInt32 vertexMaxCount, UInt32 indexMaxCount, UInt32 maxQueuedFrameCount, bool mockPage)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  bool get_isEmpty()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.VertexFlags
Наследуется от: Enum
Поля:
  int value__
  VertexFlags IsSolid
  VertexFlags IsText
  VertexFlags IsTextured
  VertexFlags IsDynamic
  VertexFlags IsSvgGradients
  VertexFlags LastType
  VertexFlags IsGraphViewEdge
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.State
Наследуется от: ValueType
Поля:
  Material material
  Texture font
  float fontTexSDFScale
  TextureId texture
  int stencilRef
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.CommandType
Наследуется от: Enum
Поля:
  int value__
  CommandType Draw
  CommandType ImmediateCull
  CommandType Immediate
  CommandType PushView
  CommandType PopView
  CommandType PushScissor
  CommandType PopScissor
  CommandType PushRenderTexture
  CommandType PopRenderTexture
  CommandType BlitToPreviousRT
  CommandType PushDefaultMaterial
  CommandType PopDefaultMaterial
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.DrawParams
Наследуется от: object
Поля:
  Rect k_UnlimitedRect
  Rect k_FullNormalizedRect
  Stack`1<Matrix4x4> view
  Stack`1<Rect> scissor
  List`1<RenderTexture> renderTexture
  List`1<Material> defaultMaterial
Свойства:
Методы:
  void Reset()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.RenderChainCommand
Наследуется от: LinkedPoolItem`1<RenderChainCommand>
Поля:
  VisualElement owner
  RenderChainCommand prev
  RenderChainCommand next
  bool closing
  CommandType type
  State state
  MeshHandle mesh
  int indexOffset
  int indexCount
  Action callback
  int k_ID_MainTex
  ProfilerMarker s_ImmediateOverheadMarker
Свойства:
Методы:
  void Reset()
  void ExecuteNonDrawMesh(DrawParams drawParams, float pixelsPerPoint, Exception& immediateException)
  void Blit(Texture source, RenderTexture destination, float depth)
  Vector4 RectToClipSpace(Rect rc)
  Rect CombineScissorRects(Rect r0, Rect r1)
  RectInt RectPointsToPixelsAndFlipYAxis(Rect rect, float pixelsPerPoint)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Implementation.CommandGenerator
Наследуется от: object
Поля:
  ProfilerMarker k_ConvertEntriesToCommandsMarker
  ProfilerMarker k_NudgeVerticesMarker
  ProfilerMarker k_ComputeTransformMatrixMarker
  Material s_blitMaterial_LinearToGamma
  Material s_blitMaterial_GammaToLinear
  Material s_blitMaterial_NoChange
  Shader s_blitShader
Свойства:
Методы:
  void GetVerticesTransformInfo(VisualElement ve, Matrix4x4& transform)
  void ComputeTransformMatrix(VisualElement ve, VisualElement ancestor, Matrix4x4& result)
  bool IsParentOrAncestorOf(VisualElement ve, VisualElement child)
  ClosingInfo PaintElement(RenderChain renderChain, VisualElement ve, ChainBuilderStats& stats)
  Material CreateBlitShader(float colorConversion)
  Material GetBlitMaterial(RenderTargetMode mode)
  void ClosePaintElement(VisualElement ve, ClosingInfo closingInfo, RenderChain renderChain, ChainBuilderStats& stats)
  void UpdateOrAllocate(MeshHandle& data, int vertexCount, int indexCount, UIRenderDevice device, NativeSlice`1& verts, NativeSlice`1& indices, UInt16& indexOffset, ChainBuilderStats& stats)
  void CopyTransformVertsPos(NativeSlice`1<Vertex> source, NativeSlice`1<Vertex> target, Matrix4x4 mat, Color32 xformClipPages, Color32 ids, Color32 addFlags, Color32 opacityPage, Color32 textCoreSettingsPage, bool isText, float textureId)
  void CopyTransformVertsPosAndVec(NativeSlice`1<Vertex> source, NativeSlice`1<Vertex> target, Matrix4x4 mat, Color32 xformClipPages, Color32 ids, Color32 addFlags, Color32 opacityPage, Color32 textCoreSettingsPage, bool isText, float textureId)
  void CopyTriangleIndicesFlipWindingOrder(NativeSlice`1<ushort> source, NativeSlice`1<ushort> target)
  void CopyTriangleIndicesFlipWindingOrder(NativeSlice`1<ushort> source, NativeSlice`1<ushort> target, int indexOffset)
  void CopyTriangleIndices(NativeSlice`1<ushort> source, NativeSlice`1<ushort> target, int indexOffset)
  bool NudgeVerticesToNewSpace(VisualElement ve, UIRenderDevice device)
  void DoNudgeVertices(VisualElement ve, UIRenderDevice device, MeshHandle mesh, Matrix4x4& nudgeTransform)
  RenderChainCommand InjectMeshDrawCommand(RenderChain renderChain, VisualElement ve, RenderChainCommand& cmdPrev, RenderChainCommand& cmdNext, MeshHandle mesh, int indexCount, int indexOffset, Material material, TextureId texture, Texture font, int stencilRef)
  RenderChainCommand InjectClosingMeshDrawCommand(RenderChain renderChain, VisualElement ve, RenderChainCommand& cmdPrev, RenderChainCommand& cmdNext, MeshHandle mesh, int indexCount, int indexOffset, Material material, TextureId texture, Texture font, int stencilRef)
  void FindCommandInsertionPoint(VisualElement ve, RenderChainCommand& prev, RenderChainCommand& next)
  void FindClosingCommandInsertionPoint(VisualElement ve, RenderChainCommand& prev, RenderChainCommand& next)
  void InjectCommandInBetween(RenderChain renderChain, RenderChainCommand cmd, RenderChainCommand& prev, RenderChainCommand& next)
  void InjectClosingCommandInBetween(RenderChain renderChain, RenderChainCommand cmd, RenderChainCommand& prev, RenderChainCommand& next)
  void ResetCommands(RenderChain renderChain, VisualElement ve)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Implementation.ClipMethod
Наследуется от: Enum
Поля:
  int value__
  ClipMethod Undetermined
  ClipMethod NotClipped
  ClipMethod Scissor
  ClipMethod ShaderDiscard
  ClipMethod Stencil
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Implementation.RenderEvents
Наследуется от: object
Поля:
  float VisibilityTreshold
Свойства:
Методы:
  void ProcessOnClippingChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, ChainBuilderStats& stats)
  void ProcessOnOpacityChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, ChainBuilderStats& stats)
  void ProcessOnColorChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, ChainBuilderStats& stats)
  void ProcessOnTransformOrSizeChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, ChainBuilderStats& stats)
  void ProcessOnVisualsChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, ChainBuilderStats& stats)
  void ProcessRegenText(RenderChain renderChain, VisualElement ve, UIRTextUpdatePainter painter, UIRenderDevice device, ChainBuilderStats& stats)
  Matrix4x4 GetTransformIDTransformInfo(VisualElement ve)
  Vector4 GetClipRectIDClipInfo(VisualElement ve)
  UInt32 DepthFirstOnChildAdded(RenderChain renderChain, VisualElement parent, VisualElement ve, int index, bool resetState)
  UInt32 DepthFirstOnChildRemoving(RenderChain renderChain, VisualElement ve)
  void DepthFirstOnClippingChanged(RenderChain renderChain, VisualElement parent, VisualElement ve, UInt32 dirtyID, bool hierarchical, bool isRootOfChange, bool isPendingHierarchicalRepaint, bool inheritedClipRectIDChanged, bool inheritedMaskingChanged, UIRenderDevice device, ChainBuilderStats& stats)
  void DepthFirstOnOpacityChanged(RenderChain renderChain, float parentCompositeOpacity, VisualElement ve, UInt32 dirtyID, bool hierarchical, ChainBuilderStats& stats, bool isDoingFullVertexRegeneration)
  void OnColorChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, ChainBuilderStats& stats)
  void DepthFirstOnTransformOrSizeChanged(RenderChain renderChain, VisualElement parent, VisualElement ve, UInt32 dirtyID, UIRenderDevice device, bool isAncestorOfChangeSkinned, bool transformChanged, ChainBuilderStats& stats)
  void DepthFirstOnVisualsChanged(RenderChain renderChain, VisualElement ve, UInt32 dirtyID, bool parentHierarchyHidden, bool hierarchical, ChainBuilderStats& stats)
  bool UpdateTextCoreSettings(RenderChain renderChain, VisualElement ve)
  bool IsElementHierarchyHidden(VisualElement ve)
  VisualElement GetLastDeepestChild(VisualElement ve)
  VisualElement GetNextDepthFirst(VisualElement ve)
  ClipMethod DetermineSelfClipMethod(RenderChain renderChain, VisualElement ve)
  bool UpdateLocalFlipsWinding(VisualElement ve)
  void UpdateWorldFlipsWinding(VisualElement ve)
  void UpdateZeroScaling(VisualElement ve)
  bool NeedsTransformID(VisualElement ve)
  bool TransformIDHasChanged(Alloc before, Alloc after)
  bool NeedsColorID(VisualElement ve)
  bool InitColorIDs(RenderChain renderChain, VisualElement ve)
  void ResetColorIDs(VisualElement ve)
  void SetColorValues(RenderChain renderChain, VisualElement ve)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Implementation.UIRStylePainter
Наследуется от: object
Поля:
  RenderChain m_Owner
  List`1<Entry> m_Entries
  AtlasBase m_Atlas
  VectorImageManager m_VectorImageManager
  Entry m_CurrentEntry
  ClosingInfo m_ClosingInfo
  int m_MaskDepth
  int m_StencilRef
  BMPAlloc m_ClipRectID
  int m_SVGBackgroundEntryIndex
  TempDataAlloc`1<Vertex> m_VertsPool
  TempDataAlloc`1<ushort> m_IndicesPool
  List`1<MeshWriteData> m_MeshWriteDataPool
  int m_NextMeshWriteDataPoolItem
  Allocator m_AllocRawVertsIndicesDelegate
  Allocator m_AllocThroughDrawMeshDelegate
  Allocator m_AllocThroughDrawGradientsDelegate
  MeshGenerationContext <meshGenerationContext>k__BackingField
  VisualElement <currentElement>k__BackingField
  int <totalVertices>k__BackingField
  int <totalIndices>k__BackingField
  bool <disposed>k__BackingField
Свойства:
  MeshGenerationContext meshGenerationContext
  VisualElement currentElement
  List`1<Entry> entries
  ClosingInfo closingInfo
  int totalVertices
  int totalIndices
  bool disposed
  VisualElement visualElement
Методы:
  MeshWriteData GetPooledMeshWriteData()
  MeshWriteData AllocRawVertsIndices(UInt32 vertexCount, UInt32 indexCount, AllocMeshData& allocatorData)
  MeshWriteData AllocThroughDrawMesh(UInt32 vertexCount, UInt32 indexCount, AllocMeshData& allocatorData)
  MeshWriteData AllocThroughDrawGradients(UInt32 vertexCount, UInt32 indexCount, AllocMeshData& allocatorData)
  void .ctor(RenderChain renderChain)
  MeshGenerationContext get_meshGenerationContext()
  VisualElement get_currentElement()
  void set_currentElement(VisualElement value)
  List`1<Entry> get_entries()
  ClosingInfo get_closingInfo()
  int get_totalVertices()
  void set_totalVertices(int value)
  int get_totalIndices()
  void set_totalIndices(int value)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  void Begin(VisualElement ve)
  void LandClipUnregisterMeshDrawCommand(RenderChainCommand cmd)
  void LandClipRegisterMesh(NativeSlice`1<Vertex> vertices, NativeSlice`1<ushort> indices, int indexOffset)
  MeshWriteData AddGradientsEntry(int vertexCount, int indexCount, TextureId texture, Material material, MeshFlags flags)
  MeshWriteData DrawMesh(int vertexCount, int indexCount, Texture texture, Material material, MeshFlags flags)
  void DrawText(TextParams textParams, ITextHandle handle, float pixelsPerPoint)
  void DrawTextNative(TextParams textParams, ITextHandle handle, float pixelsPerPoint)
  void DrawTextCore(TextParams textParams, ITextHandle handle, float pixelsPerPoint)
  void DrawRectangle(RectangleParams rectParams)
  void DrawBorder(BorderParams borderParams)
  void DrawImmediate(Action callback, bool cullingEnabled)
  VisualElement get_visualElement()
  void DrawVisualElementBackground()
  void DrawVisualElementBorder()
  void ApplyVisualElementClipping()
  UInt16[] AdjustSpriteWinding(Vector2[] vertices, UInt16[] indices)
  void DrawSprite(RectangleParams rectParams)
  void DrawVectorImage(RectangleParams rectParams)
  void Reset()
  void ValidateMeshWriteData()
  void GenerateStencilClipEntryForRoundedRectBackground()
  void GenerateStencilClipEntryForSVGBackground()
--------------------------------------------------
Класс: UnityEngine.UIElements.UIR.Implementation.UIRTextUpdatePainter
Наследуется от: object
Поля:
  VisualElement m_CurrentElement
  int m_TextEntryIndex
  NativeArray`1<Vertex> m_DudVerts
  NativeArray`1<ushort> m_DudIndices
  NativeSlice`1<Vertex> m_MeshDataVerts
  Color32 m_XFormClipPages
  Color32 m_IDs
  Color32 m_Flags
  Color32 m_OpacityColorPages
  MeshGenerationContext <meshGenerationContext>k__BackingField
Свойства:
  MeshGenerationContext meshGenerationContext
  VisualElement visualElement
Методы:
  MeshGenerationContext get_meshGenerationContext()
  void .ctor()
  void Begin(VisualElement ve, UIRenderDevice device)
  void End()
  void Dispose()
  void DrawRectangle(RectangleParams rectParams)
  void DrawBorder(BorderParams borderParams)
  void DrawImmediate(Action callback, bool cullingEnabled)
  VisualElement get_visualElement()
  MeshWriteData DrawMesh(int vertexCount, int indexCount, Texture texture, Material material, MeshFlags flags)
  void DrawText(TextParams textParams, ITextHandle handle, float pixelsPerPoint)
--------------------------------------------------
Класс: UnityEngine.UIElements.Collections.DictionaryExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  TValue Get(IDictionary`2<TKey, TValue> dict, TKey key, TValue fallbackValue)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.HierarchyTraversal
Наследуется от: object
Поля:
Свойства:
Методы:
  void Traverse(VisualElement element)
  void TraverseRecursive(VisualElement element, int depth)
  void Recurse(VisualElement element, int depth)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyUtil
Наследуется от: object
Поля:
  HashSet`1<StylePropertyId> s_AnimatablePropertiesHash
  int k_GroupOffset
  Dictionary`2<string, StylePropertyId> s_NameToId
  Dictionary`2<StylePropertyId, string> s_IdToName
  StylePropertyId[] s_AnimatableProperties
Свойства:
Методы:
  void .cctor()
  bool IsAnimatable(StylePropertyId id)
  bool TryGetEnumIntValue(StyleEnumType enumType, string value, Int32& intValue)
  bool IsMatchingShorthand(StylePropertyId shorthand, StylePropertyId id)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.InitialStyle
Наследуется от: object
Поля:
  ComputedStyle s_InitialStyle
Свойства:
  Align alignContent
  Align alignItems
  Align alignSelf
  Color backgroundColor
  Background backgroundImage
  Color borderBottomColor
  Length borderBottomLeftRadius
  Length borderBottomRightRadius
  float borderBottomWidth
  Color borderLeftColor
  float borderLeftWidth
  Color borderRightColor
  float borderRightWidth
  Color borderTopColor
  Length borderTopLeftRadius
  Length borderTopRightRadius
  float borderTopWidth
  Length bottom
  Color color
  Cursor cursor
  DisplayStyle display
  Length flexBasis
  FlexDirection flexDirection
  float flexGrow
  float flexShrink
  Wrap flexWrap
  Length fontSize
  Length height
  Justify justifyContent
  Length left
  Length letterSpacing
  Length marginBottom
  Length marginLeft
  Length marginRight
  Length marginTop
  Length maxHeight
  Length maxWidth
  Length minHeight
  Length minWidth
  float opacity
  OverflowInternal overflow
  Length paddingBottom
  Length paddingLeft
  Length paddingRight
  Length paddingTop
  Position position
  Length right
  Rotate rotate
  Scale scale
  TextOverflow textOverflow
  TextShadow textShadow
  Length top
  TransformOrigin transformOrigin
  List`1<TimeValue> transitionDelay
  List`1<TimeValue> transitionDuration
  List`1<StylePropertyName> transitionProperty
  List`1<EasingFunction> transitionTimingFunction
  Translate translate
  Color unityBackgroundImageTintColor
  ScaleMode unityBackgroundScaleMode
  Font unityFont
  FontDefinition unityFontDefinition
  FontStyle unityFontStyleAndWeight
  OverflowClipBox unityOverflowClipBox
  Length unityParagraphSpacing
  int unitySliceBottom
  int unitySliceLeft
  int unitySliceRight
  int unitySliceTop
  TextAnchor unityTextAlign
  Color unityTextOutlineColor
  float unityTextOutlineWidth
  TextOverflowPosition unityTextOverflowPosition
  Visibility visibility
  WhiteSpace whiteSpace
  Length width
  Length wordSpacing
Методы:
  ComputedStyle& Get()
  ComputedStyle Acquire()
  void .cctor()
  Align get_alignContent()
  Align get_alignItems()
  Align get_alignSelf()
  Color get_backgroundColor()
  Background get_backgroundImage()
  Color get_borderBottomColor()
  Length get_borderBottomLeftRadius()
  Length get_borderBottomRightRadius()
  float get_borderBottomWidth()
  Color get_borderLeftColor()
  float get_borderLeftWidth()
  Color get_borderRightColor()
  float get_borderRightWidth()
  Color get_borderTopColor()
  Length get_borderTopLeftRadius()
  Length get_borderTopRightRadius()
  float get_borderTopWidth()
  Length get_bottom()
  Color get_color()
  Cursor get_cursor()
  DisplayStyle get_display()
  Length get_flexBasis()
  FlexDirection get_flexDirection()
  float get_flexGrow()
  float get_flexShrink()
  Wrap get_flexWrap()
  Length get_fontSize()
  Length get_height()
  Justify get_justifyContent()
  Length get_left()
  Length get_letterSpacing()
  Length get_marginBottom()
  Length get_marginLeft()
  Length get_marginRight()
  Length get_marginTop()
  Length get_maxHeight()
  Length get_maxWidth()
  Length get_minHeight()
  Length get_minWidth()
  float get_opacity()
  OverflowInternal get_overflow()
  Length get_paddingBottom()
  Length get_paddingLeft()
  Length get_paddingRight()
  Length get_paddingTop()
  Position get_position()
  Length get_right()
  Rotate get_rotate()
  Scale get_scale()
  TextOverflow get_textOverflow()
  TextShadow get_textShadow()
  Length get_top()
  TransformOrigin get_transformOrigin()
  List`1<TimeValue> get_transitionDelay()
  List`1<TimeValue> get_transitionDuration()
  List`1<StylePropertyName> get_transitionProperty()
  List`1<EasingFunction> get_transitionTimingFunction()
  Translate get_translate()
  Color get_unityBackgroundImageTintColor()
  ScaleMode get_unityBackgroundScaleMode()
  Font get_unityFont()
  FontDefinition get_unityFontDefinition()
  FontStyle get_unityFontStyleAndWeight()
  OverflowClipBox get_unityOverflowClipBox()
  Length get_unityParagraphSpacing()
  int get_unitySliceBottom()
  int get_unitySliceLeft()
  int get_unitySliceRight()
  int get_unitySliceTop()
  TextAnchor get_unityTextAlign()
  Color get_unityTextOutlineColor()
  float get_unityTextOutlineWidth()
  TextOverflowPosition get_unityTextOverflowPosition()
  Visibility get_visibility()
  WhiteSpace get_whiteSpace()
  Length get_width()
  Length get_wordSpacing()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.ShorthandApplicator
Наследуется от: object
Поля:
  List`1<TimeValue> s_TransitionDelayList
  List`1<TimeValue> s_TransitionDurationList
  List`1<StylePropertyName> s_TransitionPropertyList
  List`1<EasingFunction> s_TransitionTimingFunctionList
Свойства:
Методы:
  void ApplyBorderColor(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyBorderRadius(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyBorderWidth(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyFlex(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyMargin(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyPadding(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyTransition(StylePropertyReader reader, ComputedStyle& computedStyle)
  void ApplyUnityTextOutline(StylePropertyReader reader, ComputedStyle& computedStyle)
  bool CompileFlexShorthand(StylePropertyReader reader, Single& grow, Single& shrink, Length& basis)
  void CompileBorderRadius(StylePropertyReader reader, Length& top, Length& right, Length& bottom, Length& left)
  void CompileBoxArea(StylePropertyReader reader, Length& top, Length& right, Length& bottom, Length& left)
  void CompileBoxArea(StylePropertyReader reader, Single& top, Single& right, Single& bottom, Single& left)
  void CompileBoxArea(StylePropertyReader reader, Color& top, Color& right, Color& bottom, Color& left)
  void CompileTextOutline(StylePropertyReader reader, Color& outlineColor, Single& outlineWidth)
  void CompileTransition(StylePropertyReader reader, List`1& outDelay, List`1& outDuration, List`1& outProperty, List`1& outTimingFunction)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyCache
Наследуется от: object
Поля:
  Dictionary`2<string, string> s_PropertySyntaxCache
  Dictionary`2<string, string> s_NonTerminalValues
Свойства:
Методы:
  bool TryGetSyntax(string name, String& syntax)
  bool TryGetNonTerminalValue(string name, String& syntax)
  string FindClosestPropertyName(string name)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyGroup
Наследуется от: Enum
Поля:
  int value__
  StylePropertyGroup Inherited
  StylePropertyGroup Layout
  StylePropertyGroup Rare
  StylePropertyGroup Shorthand
  StylePropertyGroup Transform
  StylePropertyGroup Transition
  StylePropertyGroup Visual
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleEnumType
Наследуется от: Enum
Поля:
  int value__
  StyleEnumType Align
  StyleEnumType DisplayStyle
  StyleEnumType EasingMode
  StyleEnumType FlexDirection
  StyleEnumType FontStyle
  StyleEnumType Justify
  StyleEnumType Overflow
  StyleEnumType OverflowClipBox
  StyleEnumType OverflowInternal
  StyleEnumType Position
  StyleEnumType ScaleMode
  StyleEnumType TextAnchor
  StyleEnumType TextOverflow
  StyleEnumType TextOverflowPosition
  StyleEnumType TransformOriginOffset
  StyleEnumType Visibility
  StyleEnumType WhiteSpace
  StyleEnumType Wrap
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyId
Наследуется от: Enum
Поля:
  int value__
  StylePropertyId Unknown
  StylePropertyId Custom
  StylePropertyId AlignContent
  StylePropertyId AlignItems
  StylePropertyId AlignSelf
  StylePropertyId All
  StylePropertyId BackgroundColor
  StylePropertyId BackgroundImage
  StylePropertyId BorderBottomColor
  StylePropertyId BorderBottomLeftRadius
  StylePropertyId BorderBottomRightRadius
  StylePropertyId BorderBottomWidth
  StylePropertyId BorderColor
  StylePropertyId BorderLeftColor
  StylePropertyId BorderLeftWidth
  StylePropertyId BorderRadius
  StylePropertyId BorderRightColor
  StylePropertyId BorderRightWidth
  StylePropertyId BorderTopColor
  StylePropertyId BorderTopLeftRadius
  StylePropertyId BorderTopRightRadius
  StylePropertyId BorderTopWidth
  StylePropertyId BorderWidth
  StylePropertyId Bottom
  StylePropertyId Color
  StylePropertyId Cursor
  StylePropertyId Display
  StylePropertyId Flex
  StylePropertyId FlexBasis
  StylePropertyId FlexDirection
  StylePropertyId FlexGrow
  StylePropertyId FlexShrink
  StylePropertyId FlexWrap
  StylePropertyId FontSize
  StylePropertyId Height
  StylePropertyId JustifyContent
  StylePropertyId Left
  StylePropertyId LetterSpacing
  StylePropertyId Margin
  StylePropertyId MarginBottom
  StylePropertyId MarginLeft
  StylePropertyId MarginRight
  StylePropertyId MarginTop
  StylePropertyId MaxHeight
  StylePropertyId MaxWidth
  StylePropertyId MinHeight
  StylePropertyId MinWidth
  StylePropertyId Opacity
  StylePropertyId Overflow
  StylePropertyId Padding
  StylePropertyId PaddingBottom
  StylePropertyId PaddingLeft
  StylePropertyId PaddingRight
  StylePropertyId PaddingTop
  StylePropertyId Position
  StylePropertyId Right
  StylePropertyId Rotate
  StylePropertyId Scale
  StylePropertyId TextOverflow
  StylePropertyId TextShadow
  StylePropertyId Top
  StylePropertyId TransformOrigin
  StylePropertyId Transition
  StylePropertyId TransitionDelay
  StylePropertyId TransitionDuration
  StylePropertyId TransitionProperty
  StylePropertyId TransitionTimingFunction
  StylePropertyId Translate
  StylePropertyId UnityBackgroundImageTintColor
  StylePropertyId UnityBackgroundScaleMode
  StylePropertyId UnityFont
  StylePropertyId UnityFontDefinition
  StylePropertyId UnityFontStyleAndWeight
  StylePropertyId UnityOverflowClipBox
  StylePropertyId UnityParagraphSpacing
  StylePropertyId UnitySliceBottom
  StylePropertyId UnitySliceLeft
  StylePropertyId UnitySliceRight
  StylePropertyId UnitySliceTop
  StylePropertyId UnityTextAlign
  StylePropertyId UnityTextOutline
  StylePropertyId UnityTextOutlineColor
  StylePropertyId UnityTextOutlineWidth
  StylePropertyId UnityTextOverflowPosition
  StylePropertyId Visibility
  StylePropertyId WhiteSpace
  StylePropertyId Width
  StylePropertyId WordSpacing
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.CSSSpec
Наследуется от: object
Поля:
  Regex rgx
  int typeSelectorWeight
  int classSelectorWeight
  int idSelectorWeight
Свойства:
Методы:
  int GetSelectorSpecificity(string selector)
  int GetSelectorSpecificity(StyleSelectorPart[] parts)
  bool ParseSelector(string selector, StyleSelectorPart[]& parts)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Dimension
Наследуется от: ValueType
Поля:
  Unit unit
  float value
Свойства:
Методы:
  void .ctor(float value, Unit unit)
  Length ToLength()
  TimeValue ToTime()
  Angle ToAngle()
  bool op_Equality(Dimension lhs, Dimension rhs)
  bool op_Inequality(Dimension lhs, Dimension rhs)
  bool Equals(Dimension other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.ScalableImage
Наследуется от: ValueType
Поля:
  Texture2D normalImage
  Texture2D highResolutionImage
Свойства:
Методы:
  string ToString()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyValue
Наследуется от: ValueType
Поля:
  StyleSheet sheet
  StyleValueHandle handle
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.ImageSource
Наследуется от: ValueType
Поля:
  Texture2D texture
  Sprite sprite
  VectorImage vectorImage
  RenderTexture renderTexture
Свойства:
Методы:
  bool IsNull()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyReader
Наследуется от: object
Поля:
  GetCursorIdFunction getCursorIdFunc
  List`1<StylePropertyValue> m_Values
  List`1<int> m_ValueCount
  StyleVariableResolver m_Resolver
  StyleSheet m_Sheet
  StyleProperty[] m_Properties
  StylePropertyId[] m_PropertyIds
  int m_CurrentValueIndex
  int m_CurrentPropertyIndex
  StyleProperty <property>k__BackingField
  StylePropertyId <propertyId>k__BackingField
  int <valueCount>k__BackingField
  float <dpiScaling>k__BackingField
Свойства:
  StyleProperty property
  StylePropertyId propertyId
  int valueCount
  float dpiScaling
Методы:
  StyleProperty get_property()
  void set_property(StyleProperty value)
  StylePropertyId get_propertyId()
  void set_propertyId(StylePropertyId value)
  int get_valueCount()
  void set_valueCount(int value)
  float get_dpiScaling()
  void set_dpiScaling(float value)
  void SetContext(StyleSheet sheet, StyleComplexSelector selector, StyleVariableContext varContext, float dpiScaling)
  void SetInlineContext(StyleSheet sheet, StyleProperty[] properties, StylePropertyId[] propertyIds, float dpiScaling)
  StylePropertyId MoveNextProperty()
  StylePropertyValue GetValue(int index)
  StyleValueType GetValueType(int index)
  bool IsValueType(int index, StyleValueType type)
  bool IsKeyword(int index, StyleValueKeyword keyword)
  string ReadAsString(int index)
  Length ReadLength(int index)
  TimeValue ReadTimeValue(int index)
  Translate ReadTranslate(int index)
  TransformOrigin ReadTransformOrigin(int index)
  Rotate ReadRotate(int index)
  Scale ReadScale(int index)
  float ReadFloat(int index)
  int ReadInt(int index)
  Color ReadColor(int index)
  int ReadEnum(StyleEnumType enumType, int index)
  FontDefinition ReadFontDefinition(int index)
  Font ReadFont(int index)
  Background ReadBackground(int index)
  Cursor ReadCursor(int index)
  TextShadow ReadTextShadow(int index)
  void ReadListEasingFunction(List`1<EasingFunction> list, int index)
  void ReadListTimeValue(List`1<TimeValue> list, int index)
  void ReadListStylePropertyName(List`1<StylePropertyName> list, int index)
  void ReadListString(List`1<string> list, int index)
  void LoadProperties()
  void SetCurrentProperty()
  TransformOrigin ReadTransformOrigin(int valCount, StylePropertyValue val1, StylePropertyValue val2, StylePropertyValue zVvalue)
  Length ReadTransformOriginEnum(StylePropertyValue value, Boolean& isVertical, Boolean& isHorizontal)
  Translate ReadTranslate(int valCount, StylePropertyValue val1, StylePropertyValue val2, StylePropertyValue val3)
  Scale ReadScale(int valCount, StylePropertyValue val1, StylePropertyValue val2, StylePropertyValue val3)
  Rotate ReadRotate(int valCount, StylePropertyValue val1, StylePropertyValue val2, StylePropertyValue val3, StylePropertyValue val4)
  int ReadEnum(StyleEnumType enumType, StylePropertyValue value)
  Angle ReadAngle(StylePropertyValue value)
  bool TryGetImageSourceFromValue(StylePropertyValue propertyValue, float dpiScaling, ImageSource& source)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.MatchResultInfo
Наследуется от: ValueType
Поля:
  bool success
  PseudoStates triggerPseudoMask
  PseudoStates dependencyPseudoMask
Свойства:
Методы:
  void .ctor(bool success, PseudoStates triggerPseudoMask, PseudoStates dependencyPseudoMask)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.SelectorMatchRecord
Наследуется от: ValueType
Поля:
  StyleSheet sheet
  int styleSheetIndexInStack
  StyleComplexSelector complexSelector
Свойства:
Методы:
  void .ctor(StyleSheet sheet, int styleSheetIndexInStack)
  int Compare(SelectorMatchRecord a, SelectorMatchRecord b)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleSelectorHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  MatchResultInfo MatchesSelector(VisualElement element, StyleSelector selector)
  bool MatchRightToLeft(VisualElement element, StyleComplexSelector complexSelector, Action`2<VisualElement, MatchResultInfo> processResult)
  void FastLookup(IDictionary`2<string, StyleComplexSelector> table, List`1<SelectorMatchRecord> matchedSelectors, StyleMatchingContext context, string input, SelectorMatchRecord& record)
  void FindMatches(StyleMatchingContext context, List`1<SelectorMatchRecord> matchedSelectors)
  void FindMatches(StyleMatchingContext context, List`1<SelectorMatchRecord> matchedSelectors, int parentSheetIndex)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleSheetBuilder
Наследуется от: object
Поля:
  BuilderState m_BuilderState
  List`1<float> m_Floats
  List`1<Dimension> m_Dimensions
  List`1<Color> m_Colors
  List`1<string> m_Strings
  List`1<StyleRule> m_Rules
  List`1<Object> m_Assets
  List`1<ScalableImage> m_ScalableImages
  List`1<StyleComplexSelector> m_ComplexSelectors
  List`1<StyleProperty> m_CurrentProperties
  List`1<StyleValueHandle> m_CurrentValues
  StyleComplexSelector m_CurrentComplexSelector
  List`1<StyleSelector> m_CurrentSelectors
  StyleProperty m_CurrentProperty
  StyleRule m_CurrentRule
  List`1<ImportStruct> m_Imports
Свойства:
  StyleProperty currentProperty
Методы:
  StyleProperty get_currentProperty()
  StyleRule BeginRule(int ruleLine)
  ComplexSelectorScope BeginComplexSelector(int specificity)
  void AddSimpleSelector(StyleSelectorPart[] parts, StyleSelectorRelationship previousRelationsip)
  void EndComplexSelector()
  StyleProperty BeginProperty(string name, int line)
  void AddImport(ImportStruct importStruct)
  void AddValue(float value)
  void AddValue(Dimension value)
  void AddValue(StyleValueKeyword keyword)
  void AddValue(StyleValueFunction function)
  void AddCommaSeparator()
  void AddValue(string value, StyleValueType type)
  void AddValue(Color value)
  void AddValue(Object value)
  void AddValue(ScalableImage value)
  void EndProperty()
  int EndRule()
  void BuildTo(StyleSheet writeTo)
  void RegisterVariable(string value)
  void RegisterValue(List`1<T> list, StyleValueType type, T value)
  void Log(string msg)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleSheetCache
Наследуется от: object
Поля:
  SheetHandleKeyComparer s_Comparer
  Dictionary`2<SheetHandleKey, StylePropertyId[]> s_RulePropertyIdsCache
Свойства:
Методы:
  void ClearCaches()
  StylePropertyId[] GetPropertyIds(StyleSheet sheet, int ruleIndex)
  StylePropertyId[] GetPropertyIds(StyleRule rule)
  StylePropertyId GetPropertyId(StyleRule rule, int index)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleSheetColor
Наследуется от: object
Поля:
  Dictionary`2<string, Color32> s_NameToColor
Свойства:
Методы:
  bool TryGetColor(string name, Color& color)
  Color32 HexToColor32(UInt32 color)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleSheetExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  string ReadAsString(StyleSheet sheet, StyleValueHandle handle)
  bool IsVarFunction(StyleValueHandle handle)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleValue
Наследуется от: ValueType
Поля:
  StylePropertyId id
  StyleKeyword keyword
  float number
  Length length
  Color color
  GCHandle resource
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleValueManaged
Наследуется от: ValueType
Поля:
  StylePropertyId id
  StyleKeyword keyword
  object value
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.MatchResultErrorCode
Наследуется от: Enum
Поля:
  int value__
  MatchResultErrorCode None
  MatchResultErrorCode Syntax
  MatchResultErrorCode EmptyValue
  MatchResultErrorCode ExpectedEndOfValue
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.MatchResult
Наследуется от: ValueType
Поля:
  MatchResultErrorCode errorCode
  string errorValue
Свойства:
  bool success
Методы:
  bool get_success()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.BaseStyleMatcher
Наследуется от: object
Поля:
  Regex s_CustomIdentRegex
  Stack`1<MatchContext> m_ContextStack
  MatchContext m_CurrentContext
Свойства:
  int valueCount
  bool isCurrentVariable
  bool isCurrentComma
  bool hasCurrent
  int currentIndex
  int matchedVariableCount
Методы:
  bool MatchKeyword(string keyword)
  bool MatchNumber()
  bool MatchInteger()
  bool MatchLength()
  bool MatchPercentage()
  bool MatchColor()
  bool MatchResource()
  bool MatchUrl()
  bool MatchTime()
  bool MatchAngle()
  bool MatchCustomIdent()
  int get_valueCount()
  bool get_isCurrentVariable()
  bool get_isCurrentComma()
  bool get_hasCurrent()
  int get_currentIndex()
  void set_currentIndex(int value)
  int get_matchedVariableCount()
  void set_matchedVariableCount(int value)
  void Initialize()
  void MoveNext()
  void SaveContext()
  void RestoreContext()
  void DropContext()
  bool Match(Expression exp)
  bool MatchExpression(Expression exp)
  bool MatchExpressionWithMultiplier(Expression exp)
  bool MatchGroup(Expression exp)
  bool MatchCombinator(Expression exp)
  bool MatchOr(Expression exp)
  bool MatchOrOr(Expression exp)
  bool MatchAndAnd(Expression exp)
  int MatchMany(Expression exp)
  int MatchManyByOrder(Expression exp, Int32* matchOrder)
  bool MatchJuxtaposition(Expression exp)
  bool MatchDataType(Expression exp)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleMatcher
Наследуется от: BaseStyleMatcher
Поля:
  StylePropertyValueParser m_Parser
  String[] m_PropertyParts
  Regex s_NumberRegex
  Regex s_IntegerRegex
  Regex s_ZeroRegex
  Regex s_LengthRegex
  Regex s_PercentRegex
  Regex s_HexColorRegex
  Regex s_RgbRegex
  Regex s_RgbaRegex
  Regex s_VarFunctionRegex
  Regex s_ResourceRegex
  Regex s_UrlRegex
  Regex s_TimeRegex
  Regex s_AngleRegex
Свойства:
  string current
  int valueCount
  bool isCurrentVariable
  bool isCurrentComma
Методы:
  string get_current()
  int get_valueCount()
  bool get_isCurrentVariable()
  bool get_isCurrentComma()
  void Initialize(string propertyValue)
  MatchResult Match(Expression exp, string propertyValue)
  bool MatchKeyword(string keyword)
  bool MatchNumber()
  bool MatchInteger()
  bool MatchLength()
  bool MatchPercentage()
  bool MatchColor()
  bool MatchResource()
  bool MatchUrl()
  bool MatchTime()
  bool MatchAngle()
  bool MatchCustomIdent()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyValueMatcher
Наследуется от: BaseStyleMatcher
Поля:
  List`1<StylePropertyValue> m_Values
Свойства:
  StylePropertyValue current
  int valueCount
  bool isCurrentVariable
  bool isCurrentComma
Методы:
  StylePropertyValue get_current()
  int get_valueCount()
  bool get_isCurrentVariable()
  bool get_isCurrentComma()
  MatchResult Match(Expression exp, List`1<StylePropertyValue> values)
  bool MatchKeyword(string keyword)
  bool MatchNumber()
  bool MatchInteger()
  bool MatchLength()
  bool MatchPercentage()
  bool MatchColor()
  bool MatchResource()
  bool MatchUrl()
  bool MatchTime()
  bool MatchCustomIdent()
  bool MatchAngle()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StylePropertyValueParser
Наследуется от: object
Поля:
  string m_PropertyValue
  List`1<string> m_ValueList
  StringBuilder m_StringBuilder
  int m_ParseIndex
Свойства:
Методы:
  String[] Parse(string propertyValue)
  void AddValuePart()
  void AppendFunction()
  void EatSpace()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleValidationStatus
Наследуется от: Enum
Поля:
  int value__
  StyleValidationStatus Ok
  StyleValidationStatus Error
  StyleValidationStatus Warning
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleValidationResult
Наследуется от: ValueType
Поля:
  StyleValidationStatus status
  string message
  string errorValue
  string hint
Свойства:
  bool success
Методы:
  bool get_success()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.StyleValidator
Наследуется от: object
Поля:
  StyleSyntaxParser m_SyntaxParser
  StyleMatcher m_StyleMatcher
Свойства:
Методы:
  void .ctor()
  StyleValidationResult ValidateProperty(string name, string value)
  bool IsUnitMissing(string propertySyntax, string propertyValue, String& unitHint)
  bool IsUnsupportedColor(string propertySyntax)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.Expression
Наследуется от: object
Поля:
  ExpressionType type
  ExpressionMultiplier multiplier
  DataType dataType
  ExpressionCombinator combinator
  Expression[] subExpressions
  string keyword
Свойства:
Методы:
  void .ctor(ExpressionType type)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.ExpressionType
Наследуется от: Enum
Поля:
  int value__
  ExpressionType Unknown
  ExpressionType Data
  ExpressionType Keyword
  ExpressionType Combinator
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.DataType
Наследуется от: Enum
Поля:
  int value__
  DataType None
  DataType Number
  DataType Integer
  DataType Length
  DataType Percentage
  DataType Color
  DataType Resource
  DataType Url
  DataType Time
  DataType Angle
  DataType CustomIdent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.ExpressionCombinator
Наследуется от: Enum
Поля:
  int value__
  ExpressionCombinator None
  ExpressionCombinator Or
  ExpressionCombinator OrOr
  ExpressionCombinator AndAnd
  ExpressionCombinator Juxtaposition
  ExpressionCombinator Group
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplierType
Наследуется от: Enum
Поля:
  int value__
  ExpressionMultiplierType None
  ExpressionMultiplierType ZeroOrMore
  ExpressionMultiplierType OneOrMore
  ExpressionMultiplierType ZeroOrOne
  ExpressionMultiplierType Ranges
  ExpressionMultiplierType OneOrMoreComma
  ExpressionMultiplierType GroupAtLeastOne
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.ExpressionMultiplier
Наследуется от: ValueType
Поля:
  int Infinity
  ExpressionMultiplierType m_Type
  int min
  int max
Свойства:
  ExpressionMultiplierType type
Методы:
  ExpressionMultiplierType get_type()
  void set_type(ExpressionMultiplierType value)
  void .ctor(ExpressionMultiplierType type)
  void SetType(ExpressionMultiplierType value)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxParser
Наследуется от: object
Поля:
  List`1<Expression> m_ProcessExpressionList
  Stack`1<Expression> m_ExpressionStack
  Stack`1<ExpressionCombinator> m_CombinatorStack
  Dictionary`2<string, Expression> m_ParsedExpressionCache
Свойства:
Методы:
  Expression Parse(string syntax)
  Expression ParseExpression(StyleSyntaxTokenizer tokenizer)
  void ProcessCombinatorStack()
  Expression ParseTerm(StyleSyntaxTokenizer tokenizer)
  ExpressionCombinator ParseCombinatorType(StyleSyntaxTokenizer tokenizer)
  Expression ParseGroup(StyleSyntaxTokenizer tokenizer)
  Expression ParseDataType(StyleSyntaxTokenizer tokenizer)
  Expression ParseNonTerminalValue(string syntax)
  Expression ParseProperty(StyleSyntaxTokenizer tokenizer)
  void ParseMultiplier(StyleSyntaxTokenizer tokenizer, ExpressionMultiplier& multiplier)
  void ParseRanges(StyleSyntaxTokenizer tokenizer, Int32& min, Int32& max)
  void EatSpace(StyleSyntaxTokenizer tokenizer)
  bool IsExpressionEnd(StyleSyntaxToken token)
  bool IsCombinator(StyleSyntaxToken token)
  bool IsMultiplier(StyleSyntaxToken token)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenType
Наследуется от: Enum
Поля:
  int value__
  StyleSyntaxTokenType Unknown
  StyleSyntaxTokenType String
  StyleSyntaxTokenType Number
  StyleSyntaxTokenType Space
  StyleSyntaxTokenType SingleBar
  StyleSyntaxTokenType DoubleBar
  StyleSyntaxTokenType DoubleAmpersand
  StyleSyntaxTokenType Comma
  StyleSyntaxTokenType SingleQuote
  StyleSyntaxTokenType Asterisk
  StyleSyntaxTokenType Plus
  StyleSyntaxTokenType QuestionMark
  StyleSyntaxTokenType HashMark
  StyleSyntaxTokenType ExclamationPoint
  StyleSyntaxTokenType OpenBracket
  StyleSyntaxTokenType CloseBracket
  StyleSyntaxTokenType OpenBrace
  StyleSyntaxTokenType CloseBrace
  StyleSyntaxTokenType LessThan
  StyleSyntaxTokenType GreaterThan
  StyleSyntaxTokenType End
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxToken
Наследуется от: ValueType
Поля:
  StyleSyntaxTokenType type
  string text
  int number
Свойства:
Методы:
  void .ctor(StyleSyntaxTokenType t)
  void .ctor(StyleSyntaxTokenType type, string text)
  void .ctor(StyleSyntaxTokenType type, int number)
--------------------------------------------------
Класс: UnityEngine.UIElements.StyleSheets.Syntax.StyleSyntaxTokenizer
Наследуется от: object
Поля:
  List`1<StyleSyntaxToken> m_Tokens
  int m_CurrentTokenIndex
Свойства:
  StyleSyntaxToken current
Методы:
  StyleSyntaxToken get_current()
  StyleSyntaxToken MoveNext()
  StyleSyntaxToken PeekNext()
  void Tokenize(string syntax)
  bool IsNextCharacter(string s, int index, char c)
  bool IsNextLetterOrDash(string s, int index)
  bool IsNextNumber(string s, int index)
  int GlobCharacter(string s, int index, char c)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.Easing
Наследуется от: object
Поля:
  float HalfPi
Свойства:
Методы:
  float Step(float t)
  float Linear(float t)
  float InSine(float t)
  float OutSine(float t)
  float InOutSine(float t)
  float InQuad(float t)
  float OutQuad(float t)
  float InOutQuad(float t)
  float InCubic(float t)
  float OutCubic(float t)
  float InOutCubic(float t)
  float InPower(float t, int power)
  float OutPower(float t, int power)
  float InOutPower(float t, int power)
  float InBounce(float t)
  float OutBounce(float t)
  float InOutBounce(float t)
  float InElastic(float t)
  float OutElastic(float t)
  float InOutElastic(float t)
  float InBack(float t)
  float OutBack(float t)
  float InOutBack(float t)
  float InBack(float t, float s)
  float OutBack(float t, float s)
  float InOutBack(float t, float s)
  float InCirc(float t)
  float OutCirc(float t)
  float InOutCirc(float t)
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.StyleValues
Наследуется от: ValueType
Поля:
  StyleValueCollection m_StyleValues
Свойства:
  float top
  float left
  float width
  float height
  float right
  float bottom
  Color color
  Color backgroundColor
  Color unityBackgroundImageTintColor
  Color borderColor
  float marginLeft
  float marginTop
  float marginRight
  float marginBottom
  float paddingLeft
  float paddingTop
  float paddingRight
  float paddingBottom
  float borderLeftWidth
  float borderRightWidth
  float borderTopWidth
  float borderBottomWidth
  float borderTopLeftRadius
  float borderTopRightRadius
  float borderBottomLeftRadius
  float borderBottomRightRadius
  float opacity
  float flexGrow
  float flexShrink
Методы:
  float get_top()
  void set_top(float value)
  float get_left()
  void set_left(float value)
  float get_width()
  void set_width(float value)
  float get_height()
  void set_height(float value)
  float get_right()
  void set_right(float value)
  float get_bottom()
  void set_bottom(float value)
  Color get_color()
  void set_color(Color value)
  Color get_backgroundColor()
  void set_backgroundColor(Color value)
  Color get_unityBackgroundImageTintColor()
  void set_unityBackgroundImageTintColor(Color value)
  Color get_borderColor()
  void set_borderColor(Color value)
  float get_marginLeft()
  void set_marginLeft(float value)
  float get_marginTop()
  void set_marginTop(float value)
  float get_marginRight()
  void set_marginRight(float value)
  float get_marginBottom()
  void set_marginBottom(float value)
  float get_paddingLeft()
  void set_paddingLeft(float value)
  float get_paddingTop()
  void set_paddingTop(float value)
  float get_paddingRight()
  void set_paddingRight(float value)
  float get_paddingBottom()
  void set_paddingBottom(float value)
  float get_borderLeftWidth()
  void set_borderLeftWidth(float value)
  float get_borderRightWidth()
  void set_borderRightWidth(float value)
  float get_borderTopWidth()
  void set_borderTopWidth(float value)
  float get_borderBottomWidth()
  void set_borderBottomWidth(float value)
  float get_borderTopLeftRadius()
  void set_borderTopLeftRadius(float value)
  float get_borderTopRightRadius()
  void set_borderTopRightRadius(float value)
  float get_borderBottomLeftRadius()
  void set_borderBottomLeftRadius(float value)
  float get_borderBottomRightRadius()
  void set_borderBottomRightRadius(float value)
  float get_opacity()
  void set_opacity(float value)
  float get_flexGrow()
  void set_flexGrow(float value)
  float get_flexShrink()
  void set_flexShrink(float value)
  void SetValue(StylePropertyId id, float value)
  void SetValue(StylePropertyId id, Color value)
  StyleValueCollection Values()
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.ITransitionAnimations
Поля:
Свойства:
Методы:
  ValueAnimation`1<float> Start(float from, float to, int durationMs, Action`2<VisualElement, float> onValueChanged)
  ValueAnimation`1<Rect> Start(Rect from, Rect to, int durationMs, Action`2<VisualElement, Rect> onValueChanged)
  ValueAnimation`1<Color> Start(Color from, Color to, int durationMs, Action`2<VisualElement, Color> onValueChanged)
  ValueAnimation`1<Vector3> Start(Vector3 from, Vector3 to, int durationMs, Action`2<VisualElement, Vector3> onValueChanged)
  ValueAnimation`1<Vector2> Start(Vector2 from, Vector2 to, int durationMs, Action`2<VisualElement, Vector2> onValueChanged)
  ValueAnimation`1<Quaternion> Start(Quaternion from, Quaternion to, int durationMs, Action`2<VisualElement, Quaternion> onValueChanged)
  ValueAnimation`1<StyleValues> Start(StyleValues from, StyleValues to, int durationMs)
  ValueAnimation`1<StyleValues> Start(StyleValues to, int durationMs)
  ValueAnimation`1<float> Start(Func`2<VisualElement, float> fromValueGetter, float to, int durationMs, Action`2<VisualElement, float> onValueChanged)
  ValueAnimation`1<Rect> Start(Func`2<VisualElement, Rect> fromValueGetter, Rect to, int durationMs, Action`2<VisualElement, Rect> onValueChanged)
  ValueAnimation`1<Color> Start(Func`2<VisualElement, Color> fromValueGetter, Color to, int durationMs, Action`2<VisualElement, Color> onValueChanged)
  ValueAnimation`1<Vector3> Start(Func`2<VisualElement, Vector3> fromValueGetter, Vector3 to, int durationMs, Action`2<VisualElement, Vector3> onValueChanged)
  ValueAnimation`1<Vector2> Start(Func`2<VisualElement, Vector2> fromValueGetter, Vector2 to, int durationMs, Action`2<VisualElement, Vector2> onValueChanged)
  ValueAnimation`1<Quaternion> Start(Func`2<VisualElement, Quaternion> fromValueGetter, Quaternion to, int durationMs, Action`2<VisualElement, Quaternion> onValueChanged)
  ValueAnimation`1<Rect> Layout(Rect to, int durationMs)
  ValueAnimation`1<Vector2> TopLeft(Vector2 to, int durationMs)
  ValueAnimation`1<Vector2> Size(Vector2 to, int durationMs)
  ValueAnimation`1<float> Scale(float to, int duration)
  ValueAnimation`1<Vector3> Position(Vector3 to, int duration)
  ValueAnimation`1<Quaternion> Rotation(Quaternion to, int duration)
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.Lerp
Наследуется от: object
Поля:
Свойства:
Методы:
  float Interpolate(float start, float end, float ratio)
  int Interpolate(int start, int end, float ratio)
  Rect Interpolate(Rect r1, Rect r2, float ratio)
  Color Interpolate(Color start, Color end, float ratio)
  Vector2 Interpolate(Vector2 start, Vector2 end, float ratio)
  Vector3 Interpolate(Vector3 start, Vector3 end, float ratio)
  Quaternion Interpolate(Quaternion start, Quaternion end, float ratio)
  StyleValues Interpolate(StyleValues start, StyleValues end, float ratio)
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.IValueAnimationUpdate
Поля:
Свойства:
Методы:
  void Tick(long currentTimeMs)
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.IValueAnimation
Поля:
Свойства:
  bool isRunning
  int durationMs
Методы:
  void Start()
  void Stop()
  void Recycle()
  bool get_isRunning()
  int get_durationMs()
  void set_durationMs(int value)
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.ValueAnimation`1
Наследуется от: object
Поля:
  int k_DefaultDurationMs
  int k_DefaultMaxPoolSize
  long m_StartTimeMs
  int m_DurationMs
  Func`2<float, float> <easingCurve>k__BackingField
  bool <isRunning>k__BackingField
  Action <onAnimationCompleted>k__BackingField
  bool <autoRecycle>k__BackingField
  bool <recycled>k__BackingField
  ObjectPool`1<ValueAnimation`1<T>> sObjectPool
  VisualElement <owner>k__BackingField
  Action`2<VisualElement, T> <valueUpdated>k__BackingField
  Func`2<VisualElement, T> <initialValue>k__BackingField
  Func`4<T, T, float, T> <interpolator>k__BackingField
  T _from
  bool fromValueSet
  T <to>k__BackingField
Свойства:
  int durationMs
  Func`2<float, float> easingCurve
  bool isRunning
  Action onAnimationCompleted
  bool autoRecycle
  bool recycled
  VisualElement owner
  Action`2<VisualElement, T> valueUpdated
  Func`2<VisualElement, T> initialValue
  Func`4<T, T, float, T> interpolator
  T from
  T to
Методы:
  int get_durationMs()
  void set_durationMs(int value)
  Func`2<float, float> get_easingCurve()
  void set_easingCurve(Func`2<float, float> value)
  bool get_isRunning()
  void set_isRunning(bool value)
  Action get_onAnimationCompleted()
  void set_onAnimationCompleted(Action value)
  bool get_autoRecycle()
  void set_autoRecycle(bool value)
  bool get_recycled()
  void set_recycled(bool value)
  VisualElement get_owner()
  void set_owner(VisualElement value)
  Action`2<VisualElement, T> get_valueUpdated()
  void set_valueUpdated(Action`2<VisualElement, T> value)
  Func`2<VisualElement, T> get_initialValue()
  void set_initialValue(Func`2<VisualElement, T> value)
  Func`4<T, T, float, T> get_interpolator()
  void set_interpolator(Func`4<T, T, float, T> value)
  T get_from()
  void set_from(T value)
  T get_to()
  void set_to(T value)
  void .ctor()
  void Start()
  void Stop()
  void Recycle()
  void UnityEngine.UIElements.Experimental.IValueAnimationUpdate.Tick(long currentTimeMs)
  void SetDefaultValues()
  void Unregister()
  void Register()
  void SetOwner(VisualElement e)
  void CheckNotRecycled()
  ValueAnimation`1<T> Create(VisualElement e, Func`4<T, T, float, T> interpolator)
  ValueAnimation`1<T> Ease(Func`2<float, float> easing)
  ValueAnimation`1<T> OnCompleted(Action callback)
  ValueAnimation`1<T> KeepAlive()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UIElements.Experimental.TreeView
Наследуется от: BaseVerticalCollectionView
Поля:
  string ussClassName
  string itemUssClassName
  string itemToggleUssClassName
  string itemIndentsContainerUssClassName
  string itemIndentUssClassName
  string itemContentContainerUssClassName
  bool m_AutoExpand
  List`1<int> m_ExpandedItemIds
Свойства:
  IList itemsSource
  TreeViewController viewController
  bool autoExpand
  List`1<int> expandedItemIds
Методы:
  IList get_itemsSource()
  void set_itemsSource(IList value)
  void SetRootItems(IList`1<TreeViewItemData`1<T>> rootItems)
  IEnumerable`1<int> GetRootIds()
  int GetTreeCount()
  TreeViewController get_viewController()
  void CreateVirtualizationController()
  void CreateViewController()
  void SetViewController(TreeViewController controller)
  void OnItemIndexChanged(int srcIndex, int dstIndex)
  ICollectionDragAndDropController CreateDragAndDropController()
  bool get_autoExpand()
  void set_autoExpand(bool value)
  List`1<int> get_expandedItemIds()
  void set_expandedItemIds(List`1<int> value)
  void .ctor()
  int GetIdForIndex(int index)
  int GetParentIdForIndex(int index)
  IEnumerable`1<int> GetChildrenIdsForIndex(int index)
  T GetItemDataForIndex(int index)
  T GetItemDataForId(int id)
  void AddItem(TreeViewItemData`1<T> item, int parentId, int childIndex)
  bool TryRemoveItem(int id)
  void OnViewDataReady()
  void OnScrollViewKeyDown(KeyDownEvent evt)
  void SetSelectionById(int id)
  void SetSelectionById(IEnumerable`1<int> ids)
  void SetSelectionByIdWithoutNotify(IEnumerable`1<int> ids)
  void SetSelectionInternalById(IEnumerable`1<int> ids, bool sendNotification)
  void CopyExpandedStates(ITreeViewItem source, ITreeViewItem target)
  bool IsExpanded(int id)
  void CollapseItem(int id, bool collapseAllChildren)
  void ExpandItem(int id, bool expandAllChildren)
  void ExpandRootItems()
  void ExpandAll()
  void CollapseAll()
  void OnTreeViewMouseUp(MouseUpEvent evt)
  bool IsExpandedByIndex(int index)
  void CollapseItemByIndex(int index, bool collapseAll)
  void ExpandItemByIndex(int index, bool expandAll)
  void .cctor()
  int <SetSelectionInternalById>b__42_0(int id)
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=108 2658253827592C8000DF6C48FD5487B674D9E695DB670A56FDEAB2B7F291523E
  __StaticArrayInitTypeSize=6 4D78FF6FE5CFBF0DDA5FBF045C418C22AA3234F494C392FF385CF1697479A9B7
Свойства:
Методы:
--------------------------------------------------
