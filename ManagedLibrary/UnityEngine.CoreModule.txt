Сборка: UnityEngine.CoreModule.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.CodeAnalysis.EmbeddedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsUnmanagedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AOT.MonoPInvokeCallbackAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(Type type)
--------------------------------------------------
Класс: UnityEditor.Experimental.RenderSettings
Наследуется от: object
Поля:
  bool <useRadianceAmbientProbe>k__BackingField
Свойства:
  bool useRadianceAmbientProbe
Методы:
  bool get_useRadianceAmbientProbe()
  void set_useRadianceAmbientProbe(bool value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngineInternal.GITextureType
Наследуется от: Enum
Поля:
  int value__
  GITextureType Charting
  GITextureType Albedo
  GITextureType Emissive
  GITextureType Irradiance
  GITextureType Directionality
  GITextureType Baked
  GITextureType BakedDirectional
  GITextureType InputWorkspace
  GITextureType BakedShadowMask
  GITextureType BakedAlbedo
  GITextureType BakedEmissive
  GITextureType BakedCharting
  GITextureType BakedTexelValidity
  GITextureType BakedUVOverlap
  GITextureType BakedLightmapCulling
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngineInternal.GIDebugVisualisation
Наследуется от: object
Поля:
Свойства:
  bool cycleMode
  bool pauseCycleMode
  GITextureType texType
Методы:
  void ResetRuntimeInputTextures()
  void PlayCycleMode()
  void PauseCycleMode()
  void StopCycleMode()
  void CycleSkipSystems(int skip)
  void CycleSkipInstances(int skip)
  bool get_cycleMode()
  bool get_pauseCycleMode()
  GITextureType get_texType()
  void set_texType(GITextureType value)
--------------------------------------------------
Класс: UnityEngineInternal.MemorylessMode
Наследуется от: Enum
Поля:
  int value__
  MemorylessMode Unused
  MemorylessMode Forced
  MemorylessMode Automatic
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngineInternal.MemorylessManager
Наследуется от: object
Поля:
Свойства:
  MemorylessMode depthMemorylessMode
Методы:
  MemorylessMode get_depthMemorylessMode()
  void set_depthMemorylessMode(MemorylessMode value)
  MemorylessMode GetFramebufferDepthMemorylessMode()
  void SetFramebufferDepthMemorylessMode(MemorylessMode mode)
  void .ctor()
--------------------------------------------------
Класс: UnityEngineInternal.GraphicsDeviceDebugSettings
Наследуется от: ValueType
Поля:
  float sleepAtStartOfGraphicsJobs
  float sleepBeforeTextureUpload
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngineInternal.GraphicsDeviceDebug
Наследуется от: object
Поля:
Свойства:
  GraphicsDeviceDebugSettings settings
Методы:
  GraphicsDeviceDebugSettings get_settings()
  void set_settings(GraphicsDeviceDebugSettings value)
  void get_settings_Injected(GraphicsDeviceDebugSettings& ret)
  void set_settings_Injected(GraphicsDeviceDebugSettings& value)
--------------------------------------------------
Класс: UnityEngineInternal.LightmapType
Наследуется от: Enum
Поля:
  int value__
  LightmapType NoLightmap
  LightmapType StaticLightmap
  LightmapType DynamicLightmap
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngineInternal.MathfInternal
Наследуется от: ValueType
Поля:
  Single modreq(System.Runtime.CompilerServices.IsVolatile) FloatMinNormal
  Single modreq(System.Runtime.CompilerServices.IsVolatile) FloatMinDenormal
  bool IsFlushToZeroEnabled
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: UnityEngineInternal.APIUpdaterRuntimeServices
Наследуется от: object
Поля:
Свойства:
Методы:
  Component AddComponent(GameObject go, string sourceInfo, string name)
  void .ctor()
--------------------------------------------------
Класс: UnityEngineInternal.TypeInferenceRules
Наследуется от: Enum
Поля:
  int value__
  TypeInferenceRules TypeReferencedByFirstArgument
  TypeInferenceRules TypeReferencedBySecondArgument
  TypeInferenceRules ArrayOfTypeReferencedByFirstArgument
  TypeInferenceRules TypeOfFirstArgument
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngineInternal.TypeInferenceRuleAttribute
Наследуется от: Attribute
Поля:
  string _rule
Свойства:
Методы:
  void .ctor(TypeInferenceRules rule)
  void .ctor(string rule)
  string ToString()
--------------------------------------------------
Класс: UnityEngineInternal.GenericStack
Наследуется от: Stack
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Baselib.BaselibNativeLibrary
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Baselib.ErrorState
Наследуется от: ValueType
Поля:
  Baselib_ErrorState nativeErrorState
Свойства:
  Baselib_ErrorCode ErrorCode
  Baselib_ErrorState* NativeErrorStatePtr
Методы:
  void ThrowIfFailed()
  Baselib_ErrorCode get_ErrorCode()
  Baselib_ErrorState* get_NativeErrorStatePtr()
  string Explain(Baselib_ErrorState_ExplainVerbosity verbosity)
--------------------------------------------------
Класс: Unity.Baselib.BaselibException
Наследуется от: Exception
Поля:
  ErrorState errorState
Свойства:
  Baselib_ErrorCode ErrorCode
Методы:
  void .ctor(ErrorState errorState)
  Baselib_ErrorCode get_ErrorCode()
--------------------------------------------------
Класс: Unity.Baselib.LowLevel.Binding
Наследуется от: object
Поля:
  UIntPtr Baselib_Memory_MaxAlignment
  UIntPtr Baselib_Memory_MinGuaranteedAlignment
  UInt32 Baselib_NetworkAddress_IpMaxStringLength
  IntPtr Baselib_RegisteredNetwork_Buffer_Id_Invalid
  UInt32 Baselib_RegisteredNetwork_Endpoint_MaxSize
  IntPtr Baselib_Thread_InvalidId
  UIntPtr Baselib_Thread_MaxThreadNameLength
  UInt32 Baselib_TLS_MinimumGuaranteedSlots
  ulong Baselib_SecondsPerMinute
  ulong Baselib_MillisecondsPerSecond
  ulong Baselib_MillisecondsPerMinute
  ulong Baselib_MicrosecondsPerMillisecond
  ulong Baselib_MicrosecondsPerSecond
  ulong Baselib_MicrosecondsPerMinute
  ulong Baselib_NanosecondsPerMicrosecond
  ulong Baselib_NanosecondsPerMillisecond
  ulong Baselib_NanosecondsPerSecond
  ulong Baselib_NanosecondsPerMinute
  ulong Baselib_Timer_MaxNumberOfNanosecondsPerTick
  double Baselib_Timer_MinNumberOfNanosecondsPerTick
  Baselib_Memory_PageAllocation Baselib_Memory_PageAllocation_Invalid
  Baselib_RegisteredNetwork_Socket_UDP Baselib_RegisteredNetwork_Socket_UDP_Invalid
  Baselib_Socket_Handle Baselib_Socket_Handle_Invalid
  Baselib_DynamicLibrary_Handle Baselib_DynamicLibrary_Handle_Invalid
  Baselib_FileIO_EventQueue Baselib_FileIO_EventQueue_Invalid
  Baselib_FileIO_AsyncFile Baselib_FileIO_AsyncFile_Invalid
  Baselib_FileIO_SyncFile Baselib_FileIO_SyncFile_Invalid
Свойства:
Методы:
  Baselib_DynamicLibrary_Handle Baselib_DynamicLibrary_OpenUtf8(Byte* pathnameUtf8, Baselib_ErrorState* errorState)
  Baselib_DynamicLibrary_Handle Baselib_DynamicLibrary_OpenUtf16(Char* pathnameUtf16, Baselib_ErrorState* errorState)
  Baselib_DynamicLibrary_Handle Baselib_DynamicLibrary_OpenProgramHandle(Baselib_ErrorState* errorState)
  Baselib_DynamicLibrary_Handle Baselib_DynamicLibrary_FromNativeHandle(ulong handle, UInt32 type, Baselib_ErrorState* errorState)
  IntPtr Baselib_DynamicLibrary_GetFunction(Baselib_DynamicLibrary_Handle handle, Byte* functionName, Baselib_ErrorState* errorState)
  void Baselib_DynamicLibrary_Close(Baselib_DynamicLibrary_Handle handle)
  UInt32 Baselib_ErrorState_Explain(Baselib_ErrorState* errorState, Byte* buffer, UInt32 bufferLen, Baselib_ErrorState_ExplainVerbosity verbosity)
  Baselib_FileIO_EventQueue Baselib_FileIO_EventQueue_Create()
  void Baselib_FileIO_EventQueue_Free(Baselib_FileIO_EventQueue eq)
  ulong Baselib_FileIO_EventQueue_Dequeue(Baselib_FileIO_EventQueue eq, Baselib_FileIO_EventQueue_Result* results, ulong count, UInt32 timeoutInMilliseconds)
  void Baselib_FileIO_EventQueue_Shutdown(Baselib_FileIO_EventQueue eq, UInt32 threadCount)
  Baselib_FileIO_AsyncFile Baselib_FileIO_AsyncOpen(Baselib_FileIO_EventQueue eq, Byte* pathname, ulong userdata, Baselib_FileIO_Priority priority)
  void Baselib_FileIO_AsyncRead(Baselib_FileIO_AsyncFile file, Baselib_FileIO_ReadRequest* requests, ulong count, ulong userdata, Baselib_FileIO_Priority priority)
  void Baselib_FileIO_AsyncClose(Baselib_FileIO_AsyncFile file)
  Baselib_FileIO_SyncFile Baselib_FileIO_SyncOpen(Byte* pathname, Baselib_FileIO_OpenFlags openFlags, Baselib_ErrorState* errorState)
  Baselib_FileIO_SyncFile Baselib_FileIO_SyncFileFromNativeHandle(ulong handle, UInt32 type)
  ulong Baselib_FileIO_SyncRead(Baselib_FileIO_SyncFile file, ulong offset, IntPtr buffer, ulong size, Baselib_ErrorState* errorState)
  ulong Baselib_FileIO_SyncWrite(Baselib_FileIO_SyncFile file, ulong offset, IntPtr buffer, ulong size, Baselib_ErrorState* errorState)
  void Baselib_FileIO_SyncFlush(Baselib_FileIO_SyncFile file, Baselib_ErrorState* errorState)
  void Baselib_FileIO_SyncSetFileSize(Baselib_FileIO_SyncFile file, ulong size, Baselib_ErrorState* errorState)
  ulong Baselib_FileIO_SyncGetFileSize(Baselib_FileIO_SyncFile file, Baselib_ErrorState* errorState)
  void Baselib_FileIO_SyncClose(Baselib_FileIO_SyncFile file, Baselib_ErrorState* errorState)
  void Baselib_Memory_GetPageSizeInfo(Baselib_Memory_PageSizeInfo* outPagesSizeInfo)
  IntPtr Baselib_Memory_Allocate(UIntPtr size)
  IntPtr Baselib_Memory_Reallocate(IntPtr ptr, UIntPtr newSize)
  void Baselib_Memory_Free(IntPtr ptr)
  IntPtr Baselib_Memory_AlignedAllocate(UIntPtr size, UIntPtr alignment)
  IntPtr Baselib_Memory_AlignedReallocate(IntPtr ptr, UIntPtr newSize, UIntPtr alignment)
  void Baselib_Memory_AlignedFree(IntPtr ptr)
  Baselib_Memory_PageAllocation Baselib_Memory_AllocatePages(ulong pageSize, ulong pageCount, ulong alignmentInMultipleOfPageSize, Baselib_Memory_PageState pageState, Baselib_ErrorState* errorState)
  void Baselib_Memory_ReleasePages(Baselib_Memory_PageAllocation pageAllocation, Baselib_ErrorState* errorState)
  void Baselib_Memory_SetPageState(IntPtr addressOfFirstPage, ulong pageSize, ulong pageCount, Baselib_Memory_PageState pageState, Baselib_ErrorState* errorState)
  void Baselib_NetworkAddress_Encode(Baselib_NetworkAddress* dstAddress, Baselib_NetworkAddress_Family family, Byte* ip, ushort port, Baselib_ErrorState* errorState)
  void Baselib_NetworkAddress_Decode(Baselib_NetworkAddress* srcAddress, Baselib_NetworkAddress_Family* family, Byte* ipAddressBuffer, UInt32 ipAddressBufferLen, UInt16* port, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_Buffer Baselib_RegisteredNetwork_Buffer_Register(Baselib_Memory_PageAllocation pageAllocation, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Buffer_Deregister(Baselib_RegisteredNetwork_Buffer buffer)
  Baselib_RegisteredNetwork_BufferSlice Baselib_RegisteredNetwork_BufferSlice_Create(Baselib_RegisteredNetwork_Buffer buffer, UInt32 offset, UInt32 size)
  Baselib_RegisteredNetwork_BufferSlice Baselib_RegisteredNetwork_BufferSlice_Empty()
  Baselib_RegisteredNetwork_Endpoint Baselib_RegisteredNetwork_Endpoint_Create(Baselib_NetworkAddress* srcAddress, Baselib_RegisteredNetwork_BufferSlice dstSlice, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_Endpoint Baselib_RegisteredNetwork_Endpoint_Empty()
  void Baselib_RegisteredNetwork_Endpoint_GetNetworkAddress(Baselib_RegisteredNetwork_Endpoint endpoint, Baselib_NetworkAddress* dstAddress, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_Socket_UDP Baselib_RegisteredNetwork_Socket_UDP_Create(Baselib_NetworkAddress* bindAddress, Baselib_NetworkAddress_AddressReuse endpointReuse, UInt32 sendQueueSize, UInt32 recvQueueSize, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_ScheduleRecv(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_RegisteredNetwork_Request* requests, UInt32 requestsCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_ScheduleSend(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_RegisteredNetwork_Request* requests, UInt32 requestsCount, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_ProcessStatus Baselib_RegisteredNetwork_Socket_UDP_ProcessRecv(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_ProcessStatus Baselib_RegisteredNetwork_Socket_UDP_ProcessSend(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_CompletionQueueStatus Baselib_RegisteredNetwork_Socket_UDP_WaitForCompletedRecv(Baselib_RegisteredNetwork_Socket_UDP socket, UInt32 timeoutInMilliseconds, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_CompletionQueueStatus Baselib_RegisteredNetwork_Socket_UDP_WaitForCompletedSend(Baselib_RegisteredNetwork_Socket_UDP socket, UInt32 timeoutInMilliseconds, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_DequeueRecv(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_RegisteredNetwork_CompletionResult* results, UInt32 resultsCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_DequeueSend(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_RegisteredNetwork_CompletionResult* results, UInt32 resultsCount, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Socket_UDP_GetNetworkAddress(Baselib_RegisteredNetwork_Socket_UDP socket, Baselib_NetworkAddress* dstAddress, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Socket_UDP_Close(Baselib_RegisteredNetwork_Socket_UDP socket)
  Baselib_Socket_Handle Baselib_Socket_Create(Baselib_NetworkAddress_Family family, Baselib_Socket_Protocol protocol, Baselib_ErrorState* errorState)
  void Baselib_Socket_Bind(Baselib_Socket_Handle socket, Baselib_NetworkAddress* address, Baselib_NetworkAddress_AddressReuse addressReuse, Baselib_ErrorState* errorState)
  void Baselib_Socket_TCP_Connect(Baselib_Socket_Handle socket, Baselib_NetworkAddress* address, Baselib_NetworkAddress_AddressReuse addressReuse, Baselib_ErrorState* errorState)
  void Baselib_Socket_Poll(Baselib_Socket_PollFd* sockets, UInt32 socketsCount, UInt32 timeoutInMilliseconds, Baselib_ErrorState* errorState)
  void Baselib_Socket_GetAddress(Baselib_Socket_Handle socket, Baselib_NetworkAddress* address, Baselib_ErrorState* errorState)
  void Baselib_Socket_TCP_Listen(Baselib_Socket_Handle socket, Baselib_ErrorState* errorState)
  Baselib_Socket_Handle Baselib_Socket_TCP_Accept(Baselib_Socket_Handle socket, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_UDP_Send(Baselib_Socket_Handle socket, Baselib_Socket_Message* messages, UInt32 messagesCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_TCP_Send(Baselib_Socket_Handle socket, IntPtr data, UInt32 dataLen, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_UDP_Recv(Baselib_Socket_Handle socket, Baselib_Socket_Message* messages, UInt32 messagesCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_TCP_Recv(Baselib_Socket_Handle socket, IntPtr data, UInt32 dataLen, Baselib_ErrorState* errorState)
  void Baselib_Socket_Close(Baselib_Socket_Handle socket)
  void Baselib_Thread_YieldExecution()
  IntPtr Baselib_Thread_GetCurrentThreadId()
  UIntPtr Baselib_TLS_Alloc()
  void Baselib_TLS_Free(UIntPtr handle)
  void Baselib_TLS_Set(UIntPtr handle, UIntPtr value)
  UIntPtr Baselib_TLS_Get(UIntPtr handle)
  Baselib_Timer_TickToNanosecondConversionRatio Baselib_Timer_GetTicksToNanosecondsConversionRatio()
  ulong Baselib_Timer_GetHighPrecisionTimerTicks()
  void Baselib_Timer_WaitForAtLeast(UInt32 timeInMilliseconds)
  double Baselib_Timer_GetTimeSinceStartupInSeconds()
  void .cctor()
  void Baselib_DynamicLibrary_OpenUtf8_Injected(Byte* pathnameUtf8, Baselib_ErrorState* errorState, Baselib_DynamicLibrary_Handle& ret)
  void Baselib_DynamicLibrary_OpenUtf16_Injected(Char* pathnameUtf16, Baselib_ErrorState* errorState, Baselib_DynamicLibrary_Handle& ret)
  void Baselib_DynamicLibrary_OpenProgramHandle_Injected(Baselib_ErrorState* errorState, Baselib_DynamicLibrary_Handle& ret)
  void Baselib_DynamicLibrary_FromNativeHandle_Injected(ulong handle, UInt32 type, Baselib_ErrorState* errorState, Baselib_DynamicLibrary_Handle& ret)
  IntPtr Baselib_DynamicLibrary_GetFunction_Injected(Baselib_DynamicLibrary_Handle& handle, Byte* functionName, Baselib_ErrorState* errorState)
  void Baselib_DynamicLibrary_Close_Injected(Baselib_DynamicLibrary_Handle& handle)
  void Baselib_FileIO_EventQueue_Create_Injected(Baselib_FileIO_EventQueue& ret)
  void Baselib_FileIO_EventQueue_Free_Injected(Baselib_FileIO_EventQueue& eq)
  ulong Baselib_FileIO_EventQueue_Dequeue_Injected(Baselib_FileIO_EventQueue& eq, Baselib_FileIO_EventQueue_Result* results, ulong count, UInt32 timeoutInMilliseconds)
  void Baselib_FileIO_EventQueue_Shutdown_Injected(Baselib_FileIO_EventQueue& eq, UInt32 threadCount)
  void Baselib_FileIO_AsyncOpen_Injected(Baselib_FileIO_EventQueue& eq, Byte* pathname, ulong userdata, Baselib_FileIO_Priority priority, Baselib_FileIO_AsyncFile& ret)
  void Baselib_FileIO_AsyncRead_Injected(Baselib_FileIO_AsyncFile& file, Baselib_FileIO_ReadRequest* requests, ulong count, ulong userdata, Baselib_FileIO_Priority priority)
  void Baselib_FileIO_AsyncClose_Injected(Baselib_FileIO_AsyncFile& file)
  void Baselib_FileIO_SyncOpen_Injected(Byte* pathname, Baselib_FileIO_OpenFlags openFlags, Baselib_ErrorState* errorState, Baselib_FileIO_SyncFile& ret)
  void Baselib_FileIO_SyncFileFromNativeHandle_Injected(ulong handle, UInt32 type, Baselib_FileIO_SyncFile& ret)
  ulong Baselib_FileIO_SyncRead_Injected(Baselib_FileIO_SyncFile& file, ulong offset, IntPtr buffer, ulong size, Baselib_ErrorState* errorState)
  ulong Baselib_FileIO_SyncWrite_Injected(Baselib_FileIO_SyncFile& file, ulong offset, IntPtr buffer, ulong size, Baselib_ErrorState* errorState)
  void Baselib_FileIO_SyncFlush_Injected(Baselib_FileIO_SyncFile& file, Baselib_ErrorState* errorState)
  void Baselib_FileIO_SyncSetFileSize_Injected(Baselib_FileIO_SyncFile& file, ulong size, Baselib_ErrorState* errorState)
  ulong Baselib_FileIO_SyncGetFileSize_Injected(Baselib_FileIO_SyncFile& file, Baselib_ErrorState* errorState)
  void Baselib_FileIO_SyncClose_Injected(Baselib_FileIO_SyncFile& file, Baselib_ErrorState* errorState)
  void Baselib_Memory_AllocatePages_Injected(ulong pageSize, ulong pageCount, ulong alignmentInMultipleOfPageSize, Baselib_Memory_PageState pageState, Baselib_ErrorState* errorState, Baselib_Memory_PageAllocation& ret)
  void Baselib_Memory_ReleasePages_Injected(Baselib_Memory_PageAllocation& pageAllocation, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Buffer_Register_Injected(Baselib_Memory_PageAllocation& pageAllocation, Baselib_ErrorState* errorState, Baselib_RegisteredNetwork_Buffer& ret)
  void Baselib_RegisteredNetwork_Buffer_Deregister_Injected(Baselib_RegisteredNetwork_Buffer& buffer)
  void Baselib_RegisteredNetwork_BufferSlice_Create_Injected(Baselib_RegisteredNetwork_Buffer& buffer, UInt32 offset, UInt32 size, Baselib_RegisteredNetwork_BufferSlice& ret)
  void Baselib_RegisteredNetwork_BufferSlice_Empty_Injected(Baselib_RegisteredNetwork_BufferSlice& ret)
  void Baselib_RegisteredNetwork_Endpoint_Create_Injected(Baselib_NetworkAddress* srcAddress, Baselib_RegisteredNetwork_BufferSlice& dstSlice, Baselib_ErrorState* errorState, Baselib_RegisteredNetwork_Endpoint& ret)
  void Baselib_RegisteredNetwork_Endpoint_Empty_Injected(Baselib_RegisteredNetwork_Endpoint& ret)
  void Baselib_RegisteredNetwork_Endpoint_GetNetworkAddress_Injected(Baselib_RegisteredNetwork_Endpoint& endpoint, Baselib_NetworkAddress* dstAddress, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Socket_UDP_Create_Injected(Baselib_NetworkAddress* bindAddress, Baselib_NetworkAddress_AddressReuse endpointReuse, UInt32 sendQueueSize, UInt32 recvQueueSize, Baselib_ErrorState* errorState, Baselib_RegisteredNetwork_Socket_UDP& ret)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_ScheduleRecv_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_RegisteredNetwork_Request* requests, UInt32 requestsCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_ScheduleSend_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_RegisteredNetwork_Request* requests, UInt32 requestsCount, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_ProcessStatus Baselib_RegisteredNetwork_Socket_UDP_ProcessRecv_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_ProcessStatus Baselib_RegisteredNetwork_Socket_UDP_ProcessSend_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_CompletionQueueStatus Baselib_RegisteredNetwork_Socket_UDP_WaitForCompletedRecv_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, UInt32 timeoutInMilliseconds, Baselib_ErrorState* errorState)
  Baselib_RegisteredNetwork_CompletionQueueStatus Baselib_RegisteredNetwork_Socket_UDP_WaitForCompletedSend_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, UInt32 timeoutInMilliseconds, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_DequeueRecv_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_RegisteredNetwork_CompletionResult* results, UInt32 resultsCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_RegisteredNetwork_Socket_UDP_DequeueSend_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_RegisteredNetwork_CompletionResult* results, UInt32 resultsCount, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Socket_UDP_GetNetworkAddress_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket, Baselib_NetworkAddress* dstAddress, Baselib_ErrorState* errorState)
  void Baselib_RegisteredNetwork_Socket_UDP_Close_Injected(Baselib_RegisteredNetwork_Socket_UDP& socket)
  void Baselib_Socket_Create_Injected(Baselib_NetworkAddress_Family family, Baselib_Socket_Protocol protocol, Baselib_ErrorState* errorState, Baselib_Socket_Handle& ret)
  void Baselib_Socket_Bind_Injected(Baselib_Socket_Handle& socket, Baselib_NetworkAddress* address, Baselib_NetworkAddress_AddressReuse addressReuse, Baselib_ErrorState* errorState)
  void Baselib_Socket_TCP_Connect_Injected(Baselib_Socket_Handle& socket, Baselib_NetworkAddress* address, Baselib_NetworkAddress_AddressReuse addressReuse, Baselib_ErrorState* errorState)
  void Baselib_Socket_GetAddress_Injected(Baselib_Socket_Handle& socket, Baselib_NetworkAddress* address, Baselib_ErrorState* errorState)
  void Baselib_Socket_TCP_Listen_Injected(Baselib_Socket_Handle& socket, Baselib_ErrorState* errorState)
  void Baselib_Socket_TCP_Accept_Injected(Baselib_Socket_Handle& socket, Baselib_ErrorState* errorState, Baselib_Socket_Handle& ret)
  UInt32 Baselib_Socket_UDP_Send_Injected(Baselib_Socket_Handle& socket, Baselib_Socket_Message* messages, UInt32 messagesCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_TCP_Send_Injected(Baselib_Socket_Handle& socket, IntPtr data, UInt32 dataLen, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_UDP_Recv_Injected(Baselib_Socket_Handle& socket, Baselib_Socket_Message* messages, UInt32 messagesCount, Baselib_ErrorState* errorState)
  UInt32 Baselib_Socket_TCP_Recv_Injected(Baselib_Socket_Handle& socket, IntPtr data, UInt32 dataLen, Baselib_ErrorState* errorState)
  void Baselib_Socket_Close_Injected(Baselib_Socket_Handle& socket)
  void Baselib_Timer_GetTicksToNanosecondsConversionRatio_Injected(Baselib_Timer_TickToNanosecondConversionRatio& ret)
--------------------------------------------------
Класс: Unity.Profiling.ProfilerCategory
Наследуется от: ValueType
Поля:
  ushort m_CategoryId
Свойства:
  string Name
  Color32 Color
  ProfilerCategory Render
  ProfilerCategory Scripts
  ProfilerCategory Gui
  ProfilerCategory Physics
  ProfilerCategory Animation
  ProfilerCategory Ai
  ProfilerCategory Audio
  ProfilerCategory Video
  ProfilerCategory Particles
  ProfilerCategory Lighting
  ProfilerCategory Network
  ProfilerCategory Loading
  ProfilerCategory Vr
  ProfilerCategory Input
  ProfilerCategory Memory
  ProfilerCategory VirtualTexturing
  ProfilerCategory FileIO
  ProfilerCategory Internal
  ProfilerCategory Any
  ProfilerCategory GPU
Методы:
  void .ctor(string categoryName)
  void .ctor(string categoryName, ProfilerCategoryColor color)
  void .ctor(ushort category)
  string get_Name()
  Color32 get_Color()
  string ToString()
  ProfilerCategory get_Render()
  ProfilerCategory get_Scripts()
  ProfilerCategory get_Gui()
  ProfilerCategory get_Physics()
  ProfilerCategory get_Animation()
  ProfilerCategory get_Ai()
  ProfilerCategory get_Audio()
  ProfilerCategory get_Video()
  ProfilerCategory get_Particles()
  ProfilerCategory get_Lighting()
  ProfilerCategory get_Network()
  ProfilerCategory get_Loading()
  ProfilerCategory get_Vr()
  ProfilerCategory get_Input()
  ProfilerCategory get_Memory()
  ProfilerCategory get_VirtualTexturing()
  ProfilerCategory get_FileIO()
  ProfilerCategory get_Internal()
  ProfilerCategory get_Any()
  ProfilerCategory get_GPU()
  ushort op_Implicit(ProfilerCategory category)
--------------------------------------------------
Класс: Unity.Profiling.ProfilerCategoryFlags
Наследуется от: Enum
Поля:
  ushort value__
  ProfilerCategoryFlags None
  ProfilerCategoryFlags Builtin
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.ProfilerCategoryColor
Наследуется от: Enum
Поля:
  ushort value__
  ProfilerCategoryColor Render
  ProfilerCategoryColor Scripts
  ProfilerCategoryColor BurstJobs
  ProfilerCategoryColor Other
  ProfilerCategoryColor Physics
  ProfilerCategoryColor Animation
  ProfilerCategoryColor Audio
  ProfilerCategoryColor AudioJob
  ProfilerCategoryColor AudioUpdateJob
  ProfilerCategoryColor Lighting
  ProfilerCategoryColor GC
  ProfilerCategoryColor VSync
  ProfilerCategoryColor Memory
  ProfilerCategoryColor Internal
  ProfilerCategoryColor UI
  ProfilerCategoryColor Build
  ProfilerCategoryColor Input
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.ProfilerMarker
Наследуется от: ValueType
Поля:
  IntPtr m_Ptr
Свойства:
  IntPtr Handle
Методы:
  IntPtr get_Handle()
  void .ctor(string name)
  void .ctor(Char* name, int nameLen)
  void .ctor(ProfilerCategory category, string name)
  void .ctor(ProfilerCategory category, Char* name, int nameLen)
  void .ctor(ProfilerCategory category, string name, MarkerFlags flags)
  void .ctor(ProfilerCategory category, Char* name, int nameLen, MarkerFlags flags)
  void Begin()
  void Begin(Object contextUnityObject)
  void End()
  void GetName(String& name)
  AutoScope Auto()
--------------------------------------------------
Класс: Unity.Profiling.ProfilerFlowEventType
Наследуется от: Enum
Поля:
  byte value__
  ProfilerFlowEventType Begin
  ProfilerFlowEventType ParallelNext
  ProfilerFlowEventType End
  ProfilerFlowEventType Next
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.ProfilerMarkerDataUnit
Наследуется от: Enum
Поля:
  byte value__
  ProfilerMarkerDataUnit Undefined
  ProfilerMarkerDataUnit TimeNanoseconds
  ProfilerMarkerDataUnit Bytes
  ProfilerMarkerDataUnit Count
  ProfilerMarkerDataUnit Percent
  ProfilerMarkerDataUnit FrequencyHz
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.ProfilerCounterOptions
Наследуется от: Enum
Поля:
  ushort value__
  ProfilerCounterOptions None
  ProfilerCounterOptions FlushOnEndOfFrame
  ProfilerCounterOptions ResetToZeroOnFlush
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.ProfilerMarkerWithStringData
Наследуется от: ValueType
Поля:
  MethodImplOptions AggressiveInlining
  IntPtr _marker
Свойства:
Методы:
  ProfilerMarkerWithStringData Create(string name, string parameterName)
  AutoScope Auto(bool enabled, Func`1<string> parameterValue)
  AutoScope Auto(string value)
--------------------------------------------------
Класс: Unity.Profiling.ProfilerRecorderOptions
Наследуется от: Enum
Поля:
  int value__
  ProfilerRecorderOptions None
  ProfilerRecorderOptions StartImmediately
  ProfilerRecorderOptions KeepAliveDuringDomainReload
  ProfilerRecorderOptions CollectOnlyOnCurrentThread
  ProfilerRecorderOptions WrapAroundWhenCapacityReached
  ProfilerRecorderOptions SumAllSamplesInFrame
  ProfilerRecorderOptions GpuRecorder
  ProfilerRecorderOptions Default
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.ProfilerRecorderSample
Наследуется от: ValueType
Поля:
  long value
  long count
  long refValue
Свойства:
  long Value
  long Count
Методы:
  long get_Value()
  long get_Count()
--------------------------------------------------
Класс: Unity.Profiling.ProfilerRecorder
Наследуется от: ValueType
Поля:
  ulong handle
  ProfilerRecorderOptions SharedRecorder
Свойства:
  bool Valid
  ProfilerMarkerDataType DataType
  ProfilerMarkerDataUnit UnitType
  long CurrentValue
  double CurrentValueAsDouble
  long LastValue
  double LastValueAsDouble
  int Capacity
  int Count
  bool IsRunning
  bool WrappedAround
Методы:
  void .ctor(ProfilerRecorderOptions options)
  void .ctor(string statName, int capacity, ProfilerRecorderOptions options)
  void .ctor(string categoryName, string statName, int capacity, ProfilerRecorderOptions options)
  void .ctor(ProfilerCategory category, string statName, int capacity, ProfilerRecorderOptions options)
  void .ctor(ProfilerCategory category, Char* statName, int statNameLen, int capacity, ProfilerRecorderOptions options)
  void .ctor(ProfilerMarker marker, int capacity, ProfilerRecorderOptions options)
  void .ctor(ProfilerRecorderHandle statHandle, int capacity, ProfilerRecorderOptions options)
  ProfilerRecorder StartNew(ProfilerCategory category, string statName, int capacity, ProfilerRecorderOptions options)
  ProfilerRecorder StartNew(ProfilerMarker marker, int capacity, ProfilerRecorderOptions options)
  ProfilerRecorder StartNew()
  bool get_Valid()
  ProfilerMarkerDataType get_DataType()
  ProfilerMarkerDataUnit get_UnitType()
  void Start()
  void Stop()
  void Reset()
  long get_CurrentValue()
  double get_CurrentValueAsDouble()
  long get_LastValue()
  double get_LastValueAsDouble()
  int get_Capacity()
  int get_Count()
  bool get_IsRunning()
  bool get_WrappedAround()
  ProfilerRecorderSample GetSample(int index)
  void CopyTo(List`1<ProfilerRecorderSample> outSamples, bool reset)
  int CopyTo(ProfilerRecorderSample* dest, int destSize, bool reset)
  ProfilerRecorderSample[] ToArray()
  void FilterToCurrentThread()
  void CollectFromAllThreads()
  ProfilerRecorder Create(ProfilerRecorderHandle statHandle, int maxSampleCount, ProfilerRecorderOptions options)
  void Control(ProfilerRecorder handle, ControlOptions options)
  ProfilerMarkerDataUnit GetValueUnitType(ProfilerRecorder handle)
  ProfilerMarkerDataType GetValueDataType(ProfilerRecorder handle)
  long GetCurrentValue(ProfilerRecorder handle)
  double GetCurrentValueAsDouble(ProfilerRecorder handle)
  long GetLastValue(ProfilerRecorder handle)
  double GetLastValueAsDouble(ProfilerRecorder handle)
  int GetCount(ProfilerRecorder handle, CountOptions countOptions)
  bool GetValid(ProfilerRecorder handle)
  bool GetWrapped(ProfilerRecorder handle)
  bool GetRunning(ProfilerRecorder handle)
  ProfilerRecorderSample GetSampleInternal(ProfilerRecorder handle, int index)
  void CopyTo_List(ProfilerRecorder handle, List`1<ProfilerRecorderSample> outSamples, bool reset)
  int CopyTo_Pointer(ProfilerRecorder handle, ProfilerRecorderSample* outSamples, int outSamplesSize, bool reset)
  void Dispose()
  void CheckInitializedWithParamsAndThrow(ProfilerRecorderSample* dest)
  void CheckInitializedAndThrow()
  void Create_Injected(ProfilerRecorderHandle& statHandle, int maxSampleCount, ProfilerRecorderOptions options, ProfilerRecorder& ret)
  void Control_Injected(ProfilerRecorder& handle, ControlOptions options)
  ProfilerMarkerDataUnit GetValueUnitType_Injected(ProfilerRecorder& handle)
  ProfilerMarkerDataType GetValueDataType_Injected(ProfilerRecorder& handle)
  long GetCurrentValue_Injected(ProfilerRecorder& handle)
  double GetCurrentValueAsDouble_Injected(ProfilerRecorder& handle)
  long GetLastValue_Injected(ProfilerRecorder& handle)
  double GetLastValueAsDouble_Injected(ProfilerRecorder& handle)
  int GetCount_Injected(ProfilerRecorder& handle, CountOptions countOptions)
  bool GetValid_Injected(ProfilerRecorder& handle)
  bool GetWrapped_Injected(ProfilerRecorder& handle)
  bool GetRunning_Injected(ProfilerRecorder& handle)
  void GetSampleInternal_Injected(ProfilerRecorder& handle, int index, ProfilerRecorderSample& ret)
  void CopyTo_List_Injected(ProfilerRecorder& handle, List`1<ProfilerRecorderSample> outSamples, bool reset)
  int CopyTo_Pointer_Injected(ProfilerRecorder& handle, ProfilerRecorderSample* outSamples, int outSamplesSize, bool reset)
--------------------------------------------------
Класс: Unity.Profiling.ProfilerRecorderDebugView
Наследуется от: object
Поля:
  ProfilerRecorder m_Recorder
Свойства:
  ProfilerRecorderSample[] Items
Методы:
  void .ctor(ProfilerRecorder r)
  ProfilerRecorderSample[] get_Items()
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.MarkerFlags
Наследуется от: Enum
Поля:
  ushort value__
  MarkerFlags Default
  MarkerFlags Script
  MarkerFlags ScriptInvoke
  MarkerFlags ScriptDeepProfiler
  MarkerFlags AvailabilityEditor
  MarkerFlags AvailabilityNonDevelopment
  MarkerFlags Warning
  MarkerFlags Counter
  MarkerFlags SampleGPU
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.ProfilerMarkerDataType
Наследуется от: Enum
Поля:
  byte value__
  ProfilerMarkerDataType Int32
  ProfilerMarkerDataType UInt32
  ProfilerMarkerDataType Int64
  ProfilerMarkerDataType UInt64
  ProfilerMarkerDataType Float
  ProfilerMarkerDataType Double
  ProfilerMarkerDataType String16
  ProfilerMarkerDataType Blob8
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderDescription
Наследуется от: ValueType
Поля:
  ProfilerCategory category
  MarkerFlags flags
  ProfilerMarkerDataType dataType
  ProfilerMarkerDataUnit unitType
  int reserved0
  int nameUtf8Len
  Byte* nameUtf8
Свойства:
  ProfilerCategory Category
  MarkerFlags Flags
  ProfilerMarkerDataType DataType
  ProfilerMarkerDataUnit UnitType
  int NameUtf8Len
  Byte* NameUtf8
  string Name
Методы:
  ProfilerCategory get_Category()
  MarkerFlags get_Flags()
  ProfilerMarkerDataType get_DataType()
  ProfilerMarkerDataUnit get_UnitType()
  int get_NameUtf8Len()
  Byte* get_NameUtf8()
  string get_Name()
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderHandle
Наследуется от: ValueType
Поля:
  ulong k_InvalidHandle
  ulong handle
Свойства:
  bool Valid
Методы:
  void .ctor(ulong handle)
  bool get_Valid()
  ProfilerRecorderHandle Get(ProfilerMarker marker)
  ProfilerRecorderHandle Get(ProfilerCategory category, string statName)
  ProfilerRecorderDescription GetDescription(ProfilerRecorderHandle handle)
  void GetAvailable(List`1<ProfilerRecorderHandle> outRecorderHandleList)
  ProfilerRecorderHandle GetByName(ProfilerCategory category, string name)
  ProfilerRecorderHandle GetByName__Unmanaged(ProfilerCategory category, Byte* name, int nameLen)
  ProfilerRecorderHandle GetByName(ProfilerCategory category, Char* name, int nameLen)
  ProfilerRecorderHandle GetByName_Unsafe(ProfilerCategory category, Char* name, int nameLen)
  ProfilerRecorderDescription GetDescriptionInternal(ProfilerRecorderHandle handle)
  void GetByName_Injected(ProfilerCategory& category, string name, ProfilerRecorderHandle& ret)
  void GetByName__Unmanaged_Injected(ProfilerCategory& category, Byte* name, int nameLen, ProfilerRecorderHandle& ret)
  void GetByName_Unsafe_Injected(ProfilerCategory& category, Char* name, int nameLen, ProfilerRecorderHandle& ret)
  void GetDescriptionInternal_Injected(ProfilerRecorderHandle& handle, ProfilerRecorderDescription& ret)
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.Unsafe.ProfilerMarkerData
Наследуется от: ValueType
Поля:
  byte Type
  byte reserved0
  ushort reserved1
  UInt32 Size
  Void* Ptr
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.Unsafe.ProfilerCategoryDescription
Наследуется от: ValueType
Поля:
  ushort Id
  ushort Flags
  Color32 Color
  int reserved0
  int NameUtf8Len
  Byte* NameUtf8
Свойства:
  string Name
Методы:
  string get_Name()
--------------------------------------------------
Класс: Unity.Profiling.LowLevel.Unsafe.ProfilerUnsafeUtility
Наследуется от: object
Поля:
  ushort CategoryRender
  ushort CategoryScripts
  ushort CategoryGUI
  ushort CategoryPhysics
  ushort CategoryAnimation
  ushort CategoryAi
  ushort CategoryAudio
  ushort CategoryVideo
  ushort CategoryParticles
  ushort CategoryLighting
  ushort CategoryLightning
  ushort CategoryNetwork
  ushort CategoryLoading
  ushort CategoryOther
  ushort CategoryVr
  ushort CategoryAllocation
  ushort CategoryInternal
  ushort CategoryFileIO
  ushort CategoryInput
  ushort CategoryVirtualTexturing
  ushort CategoryGPU
  ushort CategoryAny
Свойства:
  long Timestamp
  TimestampConversionRatio TimestampToNanosecondsConversionRatio
Методы:
  ushort CreateCategory(string name, ProfilerCategoryColor colorIndex)
  ushort CreateCategory__Unmanaged(Byte* name, int nameLen, ProfilerCategoryColor colorIndex)
  ushort CreateCategory(Char* name, int nameLen, ProfilerCategoryColor colorIndex)
  ushort CreateCategory_Unsafe(Char* name, int nameLen, ProfilerCategoryColor colorIndex)
  ushort GetCategoryByName(Char* name, int nameLen)
  ushort GetCategoryByName_Unsafe(Char* name, int nameLen)
  ProfilerCategoryDescription GetCategoryDescription(ushort categoryId)
  Color32 GetCategoryColor(ProfilerCategoryColor colorIndex)
  IntPtr CreateMarker(string name, ushort categoryId, MarkerFlags flags, int metadataCount)
  IntPtr CreateMarker__Unmanaged(Byte* name, int nameLen, ushort categoryId, MarkerFlags flags, int metadataCount)
  IntPtr CreateMarker(Char* name, int nameLen, ushort categoryId, MarkerFlags flags, int metadataCount)
  IntPtr CreateMarker_Unsafe(Char* name, int nameLen, ushort categoryId, MarkerFlags flags, int metadataCount)
  IntPtr GetMarker(string name)
  void SetMarkerMetadata(IntPtr markerPtr, int index, string name, byte type, byte unit)
  void SetMarkerMetadata__Unmanaged(IntPtr markerPtr, int index, Byte* name, int nameLen, byte type, byte unit)
  void SetMarkerMetadata(IntPtr markerPtr, int index, Char* name, int nameLen, byte type, byte unit)
  void SetMarkerMetadata_Unsafe(IntPtr markerPtr, int index, Char* name, int nameLen, byte type, byte unit)
  void BeginSample(IntPtr markerPtr)
  void BeginSampleWithMetadata(IntPtr markerPtr, int metadataCount, Void* metadata)
  void EndSample(IntPtr markerPtr)
  void SingleSampleWithMetadata(IntPtr markerPtr, int metadataCount, Void* metadata)
  Void* CreateCounterValue(IntPtr& counterPtr, string name, ushort categoryId, MarkerFlags flags, byte dataType, byte dataUnit, int dataSize, ProfilerCounterOptions counterOptions)
  Void* CreateCounterValue__Unmanaged(IntPtr& counterPtr, Byte* name, int nameLen, ushort categoryId, MarkerFlags flags, byte dataType, byte dataUnit, int dataSize, ProfilerCounterOptions counterOptions)
  Void* CreateCounterValue(IntPtr& counterPtr, Char* name, int nameLen, ushort categoryId, MarkerFlags flags, byte dataType, byte dataUnit, int dataSize, ProfilerCounterOptions counterOptions)
  Void* CreateCounterValue_Unsafe(IntPtr& counterPtr, Char* name, int nameLen, ushort categoryId, MarkerFlags flags, byte dataType, byte dataUnit, int dataSize, ProfilerCounterOptions counterOptions)
  void FlushCounterValue(Void* counterValuePtr)
  string Utf8ToString(Byte* chars, int charsLen)
  UInt32 CreateFlow(ushort categoryId)
  void FlowEvent(UInt32 flowId, ProfilerFlowEventType flowEventType)
  void Internal_BeginWithObject(IntPtr markerPtr, Object contextUnityObject)
  string Internal_GetName(IntPtr markerPtr)
  long get_Timestamp()
  TimestampConversionRatio get_TimestampToNanosecondsConversionRatio()
  void GetCategoryDescription_Injected(ushort categoryId, ProfilerCategoryDescription& ret)
  void GetCategoryColor_Injected(ProfilerCategoryColor colorIndex, Color32& ret)
  void get_TimestampToNanosecondsConversionRatio_Injected(TimestampConversionRatio& ret)
--------------------------------------------------
Класс: Unity.Jobs.IJob
Поля:
Свойства:
Методы:
  void Execute()
--------------------------------------------------
Класс: Unity.Jobs.IJobExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  JobHandle Schedule(T jobData, JobHandle dependsOn)
  void Run(T jobData)
--------------------------------------------------
Класс: Unity.Jobs.IJobFor
Поля:
Свойства:
Методы:
  void Execute(int index)
--------------------------------------------------
Класс: Unity.Jobs.IJobForExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  JobHandle Schedule(T jobData, int arrayLength, JobHandle dependency)
  JobHandle ScheduleParallel(T jobData, int arrayLength, int innerloopBatchCount, JobHandle dependency)
  void Run(T jobData, int arrayLength)
--------------------------------------------------
Класс: Unity.Jobs.IJobParallelFor
Поля:
Свойства:
Методы:
  void Execute(int index)
--------------------------------------------------
Класс: Unity.Jobs.IJobParallelForExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  JobHandle Schedule(T jobData, int arrayLength, int innerloopBatchCount, JobHandle dependsOn)
  void Run(T jobData, int arrayLength)
--------------------------------------------------
Класс: Unity.Jobs.JobHandle
Наследуется от: ValueType
Поля:
  IntPtr jobGroup
  int version
Свойства:
  bool IsCompleted
Методы:
  void Complete()
  void CompleteAll(JobHandle& job0, JobHandle& job1)
  void CompleteAll(JobHandle& job0, JobHandle& job1, JobHandle& job2)
  void CompleteAll(NativeArray`1<JobHandle> jobs)
  bool get_IsCompleted()
  void ScheduleBatchedJobs()
  void ScheduleBatchedJobsAndComplete(JobHandle& job)
  bool ScheduleBatchedJobsAndIsCompleted(JobHandle& job)
  void ScheduleBatchedJobsAndCompleteAll(Void* jobs, int count)
  JobHandle CombineDependencies(JobHandle job0, JobHandle job1)
  JobHandle CombineDependencies(JobHandle job0, JobHandle job1, JobHandle job2)
  JobHandle CombineDependencies(NativeArray`1<JobHandle> jobs)
  JobHandle CombineDependencies(NativeSlice`1<JobHandle> jobs)
  JobHandle CombineDependenciesInternal2(JobHandle& job0, JobHandle& job1)
  JobHandle CombineDependenciesInternal3(JobHandle& job0, JobHandle& job1, JobHandle& job2)
  JobHandle CombineDependenciesInternalPtr(Void* jobs, int count)
  bool CheckFenceIsDependencyOrDidSyncFence(JobHandle jobHandle, JobHandle dependsOn)
  void CombineDependenciesInternal2_Injected(JobHandle& job0, JobHandle& job1, JobHandle& ret)
  void CombineDependenciesInternal3_Injected(JobHandle& job0, JobHandle& job1, JobHandle& job2, JobHandle& ret)
  void CombineDependenciesInternalPtr_Injected(Void* jobs, int count, JobHandle& ret)
  bool CheckFenceIsDependencyOrDidSyncFence_Injected(JobHandle& jobHandle, JobHandle& dependsOn)
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.BatchQueryJob`2
Наследуется от: ValueType
Поля:
  NativeArray`1<CommandT> commands
  NativeArray`1<ResultT> results
Свойства:
Методы:
  void .ctor(NativeArray`1<CommandT> commands, NativeArray`1<ResultT> results)
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.BatchQueryJobStruct`1
Наследуется от: ValueType
Поля:
  IntPtr jobReflectionData
Свойства:
Методы:
  IntPtr Initialize()
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.JobHandleUnsafeUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  JobHandle CombineDependencies(JobHandle* jobs, int count)
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.JobProducerTypeAttribute
Наследуется от: Attribute
Поля:
  Type <ProducerType>k__BackingField
Свойства:
  Type ProducerType
Методы:
  Type get_ProducerType()
  void .ctor(Type producerType)
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.JobRanges
Наследуется от: ValueType
Поля:
  int BatchSize
  int NumJobs
  int TotalIterationCount
  int NumPhases
  IntPtr StartEndIndex
  IntPtr PhaseData
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.ScheduleMode
Наследуется от: Enum
Поля:
  int value__
  ScheduleMode Run
  ScheduleMode Batched
  ScheduleMode Parallel
  ScheduleMode Single
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.JobType
Наследуется от: Enum
Поля:
  int value__
  JobType Single
  JobType ParallelFor
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Jobs.LowLevel.Unsafe.JobsUtility
Наследуется от: object
Поля:
  int MaxJobThreadCount
  int CacheLineSize
  PanicFunction_ PanicFunction
Свойства:
  bool IsExecutingJob
  bool JobDebuggerEnabled
  bool JobCompilerEnabled
  int JobWorkerMaximumCount
  int JobWorkerCount
Методы:
  void GetJobRange(JobRanges& ranges, int jobIndex, Int32& beginIndex, Int32& endIndex)
  bool GetWorkStealingRange(JobRanges& ranges, int jobIndex, Int32& beginIndex, Int32& endIndex)
  JobHandle Schedule(JobScheduleParameters& parameters)
  JobHandle ScheduleParallelFor(JobScheduleParameters& parameters, int arrayLength, int innerloopBatchCount)
  JobHandle ScheduleParallelForDeferArraySize(JobScheduleParameters& parameters, int innerloopBatchCount, Void* listData, Void* listDataAtomicSafetyHandle)
  JobHandle ScheduleParallelForTransform(JobScheduleParameters& parameters, IntPtr transfromAccesssArray)
  JobHandle ScheduleParallelForTransformReadOnly(JobScheduleParameters& parameters, IntPtr transfromAccesssArray, int innerloopBatchCount)
  void PatchBufferMinMaxRanges(IntPtr bufferRangePatchData, Void* jobdata, int startIndex, int rangeSize)
  IntPtr CreateJobReflectionData(Type wrapperJobType, Type userJobType, object managedJobFunction0, object managedJobFunction1, object managedJobFunction2)
  IntPtr CreateJobReflectionData(Type type, JobType jobType, object managedJobFunction0, object managedJobFunction1, object managedJobFunction2)
  IntPtr CreateJobReflectionData(Type type, object managedJobFunction0, object managedJobFunction1, object managedJobFunction2)
  IntPtr CreateJobReflectionData(Type wrapperJobType, Type userJobType, JobType jobType, object managedJobFunction0)
  IntPtr CreateJobReflectionData(Type wrapperJobType, Type userJobType, object managedJobFunction0)
  bool get_IsExecutingJob()
  bool get_JobDebuggerEnabled()
  void set_JobDebuggerEnabled(bool value)
  bool get_JobCompilerEnabled()
  void set_JobCompilerEnabled(bool value)
  int GetJobQueueWorkerThreadCount()
  void SetJobQueueMaximumActiveThreadCount(int count)
  int get_JobWorkerMaximumCount()
  void ResetJobWorkerCount()
  int get_JobWorkerCount()
  void set_JobWorkerCount(int value)
  IntPtr GetSystemIdCellPtr()
  void ClearSystemIds()
  int GetSystemIdMappings(JobHandle* handles, Int32* systemIds, int maxCount)
  void InvokePanicFunction()
  void Schedule_Injected(JobScheduleParameters& parameters, JobHandle& ret)
  void ScheduleParallelFor_Injected(JobScheduleParameters& parameters, int arrayLength, int innerloopBatchCount, JobHandle& ret)
  void ScheduleParallelForDeferArraySize_Injected(JobScheduleParameters& parameters, int innerloopBatchCount, Void* listData, Void* listDataAtomicSafetyHandle, JobHandle& ret)
  void ScheduleParallelForTransform_Injected(JobScheduleParameters& parameters, IntPtr transfromAccesssArray, JobHandle& ret)
  void ScheduleParallelForTransformReadOnly_Injected(JobScheduleParameters& parameters, IntPtr transfromAccesssArray, int innerloopBatchCount, JobHandle& ret)
--------------------------------------------------
Класс: Unity.Rendering.HybridV2.DOTSInstancingCbuffer
Наследуется от: ValueType
Поля:
  int NameID
  int CbufferIndex
  int SizeBytes
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Rendering.HybridV2.DOTSInstancingPropertyType
Наследуется от: Enum
Поля:
  int value__
  DOTSInstancingPropertyType Unknown
  DOTSInstancingPropertyType Float
  DOTSInstancingPropertyType Half
  DOTSInstancingPropertyType Int
  DOTSInstancingPropertyType Short
  DOTSInstancingPropertyType Uint
  DOTSInstancingPropertyType Bool
  DOTSInstancingPropertyType Struct
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Rendering.HybridV2.DOTSInstancingProperty
Наследуется от: ValueType
Поля:
  int MetadataNameID
  int ConstantNameID
  int CbufferIndex
  int MetadataOffset
  int SizeBytes
  DOTSInstancingPropertyType ConstantType
  int Cols
  int Rows
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Rendering.HybridV2.HybridV2ShaderReflection
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr GetDOTSInstancingCbuffersPointer(Shader shader, Int32& cbufferCount)
  IntPtr GetDOTSInstancingPropertiesPointer(Shader shader, Int32& propertyCount)
  UInt32 GetDOTSReflectionVersionNumber()
  NativeArray`1<DOTSInstancingCbuffer> GetDOTSInstancingCbuffers(Shader shader)
  NativeArray`1<DOTSInstancingProperty> GetDOTSInstancingProperties(Shader shader)
  void .ctor()
--------------------------------------------------
Класс: Unity.IL2CPP.CompilerServices.Il2CppEagerStaticClassConstructionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.ReadCommand
Наследуется от: ValueType
Поля:
  Void* Buffer
  long Offset
  long Size
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.ReadCommandArray
Наследуется от: ValueType
Поля:
  ReadCommand* ReadCommands
  int CommandCount
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.FileState
Наследуется от: Enum
Поля:
  int value__
  FileState Absent
  FileState Exists
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.FileStatus
Наследуется от: Enum
Поля:
  int value__
  FileStatus Closed
  FileStatus Pending
  FileStatus Open
  FileStatus OpenFailed
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.FileInfoResult
Наследуется от: ValueType
Поля:
  long FileSize
  FileState FileState
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.AssetLoadingSubsystem
Наследуется от: Enum
Поля:
  int value__
  AssetLoadingSubsystem Other
  AssetLoadingSubsystem Texture
  AssetLoadingSubsystem VirtualTexture
  AssetLoadingSubsystem Mesh
  AssetLoadingSubsystem Audio
  AssetLoadingSubsystem Scripts
  AssetLoadingSubsystem EntitiesScene
  AssetLoadingSubsystem EntitiesStreamBinaryReader
  AssetLoadingSubsystem FileInfo
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.ReadStatus
Наследуется от: Enum
Поля:
  int value__
  ReadStatus Complete
  ReadStatus InProgress
  ReadStatus Failed
  ReadStatus Truncated
  ReadStatus Canceled
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.Priority
Наследуется от: Enum
Поля:
  int value__
  Priority PriorityLow
  Priority PriorityHigh
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.FileHandle
Наследуется от: ValueType
Поля:
  IntPtr fileCommandPtr
  int version
Свойства:
  FileStatus Status
  JobHandle JobHandle
Методы:
  FileStatus get_Status()
  JobHandle get_JobHandle()
  bool IsValid()
  JobHandle Close(JobHandle dependency)
  bool IsFileHandleValid(FileHandle& handle)
  FileStatus GetFileStatus_Internal(FileHandle& handle)
  JobHandle GetJobHandle_Internal(FileHandle& handle)
  void GetJobHandle_Internal_Injected(FileHandle& handle, JobHandle& ret)
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.ReadHandle
Наследуется от: ValueType
Поля:
  IntPtr ptr
  int version
Свойства:
  JobHandle JobHandle
  ReadStatus Status
  long ReadCount
Методы:
  bool IsValid()
  void Dispose()
  void Cancel()
  void CancelInternal(ReadHandle handle)
  JobHandle get_JobHandle()
  ReadStatus get_Status()
  long get_ReadCount()
  long GetBytesRead()
  long GetBytesRead(UInt32 readCommandIndex)
  UInt64* GetBytesReadArray()
  ReadStatus GetReadStatus(ReadHandle handle)
  long GetReadCount(ReadHandle handle)
  long GetBytesRead(ReadHandle handle)
  long GetBytesReadForCommand(ReadHandle handle, UInt32 readCommandIndex)
  UInt64* GetBytesReadArray(ReadHandle handle)
  void ReleaseReadHandle(ReadHandle handle)
  bool IsReadHandleValid(ReadHandle handle)
  JobHandle GetJobHandle(ReadHandle handle)
  void CancelInternal_Injected(ReadHandle& handle)
  ReadStatus GetReadStatus_Injected(ReadHandle& handle)
  long GetReadCount_Injected(ReadHandle& handle)
  long GetBytesRead_Injected(ReadHandle& handle)
  long GetBytesReadForCommand_Injected(ReadHandle& handle, UInt32 readCommandIndex)
  UInt64* GetBytesReadArray_Injected(ReadHandle& handle)
  void ReleaseReadHandle_Injected(ReadHandle& handle)
  bool IsReadHandleValid_Injected(ReadHandle& handle)
  void GetJobHandle_Injected(ReadHandle& handle, JobHandle& ret)
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.AsyncReadManager
Наследуется от: object
Поля:
Свойства:
Методы:
  ReadHandle ReadInternal(string filename, Void* cmds, UInt32 cmdCount, string assetName, ulong typeID, AssetLoadingSubsystem subsystem)
  ReadHandle Read(string filename, ReadCommand* readCmds, UInt32 readCmdCount, string assetName, ulong typeID, AssetLoadingSubsystem subsystem)
  ReadHandle GetFileInfoInternal(string filename, Void* cmd)
  ReadHandle GetFileInfo(string filename, FileInfoResult* result)
  ReadHandle ReadWithHandlesInternal_NativePtr(FileHandle& fileHandle, Void* readCmdArray, JobHandle dependency)
  ReadHandle ReadWithHandlesInternal_NativeCopy(FileHandle& fileHandle, Void* readCmdArray)
  ReadHandle ReadDeferred(FileHandle& fileHandle, ReadCommandArray* readCmdArray, JobHandle dependency)
  ReadHandle Read(FileHandle& fileHandle, ReadCommandArray readCmdArray)
  FileHandle OpenFileAsync_Internal(string fileName)
  FileHandle OpenFileAsync(string fileName)
  JobHandle CloseFileAsync(FileHandle& fileHandle, JobHandle dependency)
  JobHandle CloseCachedFileAsync(string fileName, JobHandle dependency)
  void ReadInternal_Injected(string filename, Void* cmds, UInt32 cmdCount, string assetName, ulong typeID, AssetLoadingSubsystem subsystem, ReadHandle& ret)
  void GetFileInfoInternal_Injected(string filename, Void* cmd, ReadHandle& ret)
  void ReadWithHandlesInternal_NativePtr_Injected(FileHandle& fileHandle, Void* readCmdArray, JobHandle& dependency, ReadHandle& ret)
  void ReadWithHandlesInternal_NativeCopy_Injected(FileHandle& fileHandle, Void* readCmdArray, ReadHandle& ret)
  void OpenFileAsync_Internal_Injected(string fileName, FileHandle& ret)
  void CloseFileAsync_Injected(FileHandle& fileHandle, JobHandle& dependency, JobHandle& ret)
  void CloseCachedFileAsync_Injected(string fileName, JobHandle& dependency, JobHandle& ret)
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.ProcessingState
Наследуется от: Enum
Поля:
  int value__
  ProcessingState Unknown
  ProcessingState InQueue
  ProcessingState Reading
  ProcessingState Completed
  ProcessingState Failed
  ProcessingState Canceled
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.FileReadType
Наследуется от: Enum
Поля:
  int value__
  FileReadType Sync
  FileReadType Async
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.AsyncReadManagerRequestMetric
Наследуется от: ValueType
Поля:
  string <AssetName>k__BackingField
  string <FileName>k__BackingField
  ulong <OffsetBytes>k__BackingField
  ulong <SizeBytes>k__BackingField
  ulong <AssetTypeId>k__BackingField
  ulong <CurrentBytesRead>k__BackingField
  UInt32 <BatchReadCount>k__BackingField
  bool <IsBatchRead>k__BackingField
  ProcessingState <State>k__BackingField
  FileReadType <ReadType>k__BackingField
  Priority <PriorityLevel>k__BackingField
  AssetLoadingSubsystem <Subsystem>k__BackingField
  double <RequestTimeMicroseconds>k__BackingField
  double <TimeInQueueMicroseconds>k__BackingField
  double <TotalTimeMicroseconds>k__BackingField
Свойства:
  string AssetName
  string FileName
  ulong OffsetBytes
  ulong SizeBytes
  ulong AssetTypeId
  ulong CurrentBytesRead
  UInt32 BatchReadCount
  bool IsBatchRead
  ProcessingState State
  FileReadType ReadType
  Priority PriorityLevel
  AssetLoadingSubsystem Subsystem
  double RequestTimeMicroseconds
  double TimeInQueueMicroseconds
  double TotalTimeMicroseconds
Методы:
  string get_AssetName()
  string get_FileName()
  ulong get_OffsetBytes()
  ulong get_SizeBytes()
  ulong get_AssetTypeId()
  ulong get_CurrentBytesRead()
  UInt32 get_BatchReadCount()
  bool get_IsBatchRead()
  ProcessingState get_State()
  FileReadType get_ReadType()
  Priority get_PriorityLevel()
  AssetLoadingSubsystem get_Subsystem()
  double get_RequestTimeMicroseconds()
  double get_TimeInQueueMicroseconds()
  double get_TotalTimeMicroseconds()
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.AsyncReadManagerMetrics
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsEnabled()
  void ClearMetrics_Internal()
  void ClearCompletedMetrics()
  AsyncReadManagerRequestMetric[] GetMetrics_Internal(bool clear)
  void GetMetrics_NoAlloc_Internal(List`1<AsyncReadManagerRequestMetric> metrics, bool clear)
  AsyncReadManagerRequestMetric[] GetMetrics_Filtered_Internal(AsyncReadManagerMetricsFilters filters, bool clear)
  void GetMetrics_NoAlloc_Filtered_Internal(List`1<AsyncReadManagerRequestMetric> metrics, AsyncReadManagerMetricsFilters filters, bool clear)
  AsyncReadManagerRequestMetric[] GetMetrics(AsyncReadManagerMetricsFilters filters, Flags flags)
  void GetMetrics(List`1<AsyncReadManagerRequestMetric> outMetrics, AsyncReadManagerMetricsFilters filters, Flags flags)
  AsyncReadManagerRequestMetric[] GetMetrics(Flags flags)
  void GetMetrics(List`1<AsyncReadManagerRequestMetric> outMetrics, Flags flags)
  void StartCollectingMetrics()
  void StopCollectingMetrics()
  AsyncReadManagerSummaryMetrics GetSummaryMetrics_Internal(bool clear)
  AsyncReadManagerSummaryMetrics GetCurrentSummaryMetrics(Flags flags)
  AsyncReadManagerSummaryMetrics GetSummaryMetricsWithFilters_Internal(AsyncReadManagerMetricsFilters metricsFilters, bool clear)
  AsyncReadManagerSummaryMetrics GetCurrentSummaryMetrics(AsyncReadManagerMetricsFilters metricsFilters, Flags flags)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetrics_Internal(AsyncReadManagerRequestMetric[] metrics)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetrics(AsyncReadManagerRequestMetric[] metrics)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetrics_FromContainer_Internal(List`1<AsyncReadManagerRequestMetric> metrics)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetrics(List`1<AsyncReadManagerRequestMetric> metrics)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetricsWithFilters_Internal(AsyncReadManagerRequestMetric[] metrics, AsyncReadManagerMetricsFilters metricsFilters)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetrics(AsyncReadManagerRequestMetric[] metrics, AsyncReadManagerMetricsFilters metricsFilters)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetricsWithFilters_FromContainer_Internal(List`1<AsyncReadManagerRequestMetric> metrics, AsyncReadManagerMetricsFilters metricsFilters)
  AsyncReadManagerSummaryMetrics GetSummaryOfMetrics(List`1<AsyncReadManagerRequestMetric> metrics, AsyncReadManagerMetricsFilters metricsFilters)
  ulong GetTotalSizeOfNonASRMReadsBytes(bool emptyAfterRead)
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.AsyncReadManagerSummaryMetrics
Наследуется от: object
Поля:
  ulong <TotalBytesRead>k__BackingField
  float <AverageBandwidthMBPerSecond>k__BackingField
  float <AverageReadSizeInBytes>k__BackingField
  float <AverageWaitTimeMicroseconds>k__BackingField
  float <AverageReadTimeMicroseconds>k__BackingField
  float <AverageTotalRequestTimeMicroseconds>k__BackingField
  float <AverageThroughputMBPerSecond>k__BackingField
  float <LongestWaitTimeMicroseconds>k__BackingField
  float <LongestReadTimeMicroseconds>k__BackingField
  ulong <LongestReadAssetType>k__BackingField
  ulong <LongestWaitAssetType>k__BackingField
  AssetLoadingSubsystem <LongestReadSubsystem>k__BackingField
  AssetLoadingSubsystem <LongestWaitSubsystem>k__BackingField
  int <NumberOfInProgressRequests>k__BackingField
  int <NumberOfCompletedRequests>k__BackingField
  int <NumberOfFailedRequests>k__BackingField
  int <NumberOfWaitingRequests>k__BackingField
  int <NumberOfCanceledRequests>k__BackingField
  int <TotalNumberOfRequests>k__BackingField
  int <NumberOfCachedReads>k__BackingField
  int <NumberOfAsyncReads>k__BackingField
  int <NumberOfSyncReads>k__BackingField
Свойства:
  ulong TotalBytesRead
  float AverageBandwidthMBPerSecond
  float AverageReadSizeInBytes
  float AverageWaitTimeMicroseconds
  float AverageReadTimeMicroseconds
  float AverageTotalRequestTimeMicroseconds
  float AverageThroughputMBPerSecond
  float LongestWaitTimeMicroseconds
  float LongestReadTimeMicroseconds
  ulong LongestReadAssetType
  ulong LongestWaitAssetType
  AssetLoadingSubsystem LongestReadSubsystem
  AssetLoadingSubsystem LongestWaitSubsystem
  int NumberOfInProgressRequests
  int NumberOfCompletedRequests
  int NumberOfFailedRequests
  int NumberOfWaitingRequests
  int NumberOfCanceledRequests
  int TotalNumberOfRequests
  int NumberOfCachedReads
  int NumberOfAsyncReads
  int NumberOfSyncReads
Методы:
  ulong get_TotalBytesRead()
  float get_AverageBandwidthMBPerSecond()
  float get_AverageReadSizeInBytes()
  float get_AverageWaitTimeMicroseconds()
  float get_AverageReadTimeMicroseconds()
  float get_AverageTotalRequestTimeMicroseconds()
  float get_AverageThroughputMBPerSecond()
  float get_LongestWaitTimeMicroseconds()
  float get_LongestReadTimeMicroseconds()
  ulong get_LongestReadAssetType()
  ulong get_LongestWaitAssetType()
  AssetLoadingSubsystem get_LongestReadSubsystem()
  AssetLoadingSubsystem get_LongestWaitSubsystem()
  int get_NumberOfInProgressRequests()
  int get_NumberOfCompletedRequests()
  int get_NumberOfFailedRequests()
  int get_NumberOfWaitingRequests()
  int get_NumberOfCanceledRequests()
  int get_TotalNumberOfRequests()
  int get_NumberOfCachedReads()
  int get_NumberOfAsyncReads()
  int get_NumberOfSyncReads()
  void .ctor()
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.AsyncReadManagerMetricsFilters
Наследуется от: object
Поля:
  UInt64[] TypeIDs
  ProcessingState[] States
  FileReadType[] ReadTypes
  Priority[] PriorityLevels
  AssetLoadingSubsystem[] Subsystems
Свойства:
Методы:
  void .ctor()
  void .ctor(ulong typeID)
  void .ctor(ProcessingState state)
  void .ctor(FileReadType readType)
  void .ctor(Priority priorityLevel)
  void .ctor(AssetLoadingSubsystem subsystem)
  void .ctor(UInt64[] typeIDs)
  void .ctor(ProcessingState[] states)
  void .ctor(FileReadType[] readTypes)
  void .ctor(Priority[] priorityLevels)
  void .ctor(AssetLoadingSubsystem[] subsystems)
  void .ctor(UInt64[] typeIDs, ProcessingState[] states, FileReadType[] readTypes, Priority[] priorityLevels, AssetLoadingSubsystem[] subsystems)
  void SetTypeIDFilter(UInt64[] _typeIDs)
  void SetStateFilter(ProcessingState[] _states)
  void SetReadTypeFilter(FileReadType[] _readTypes)
  void SetPriorityFilter(Priority[] _priorityLevels)
  void SetSubsystemFilter(AssetLoadingSubsystem[] _subsystems)
  void SetTypeIDFilter(ulong _typeID)
  void SetStateFilter(ProcessingState _state)
  void SetReadTypeFilter(FileReadType _readType)
  void SetPriorityFilter(Priority _priorityLevel)
  void SetSubsystemFilter(AssetLoadingSubsystem _subsystem)
  void RemoveTypeIDFilter()
  void RemoveStateFilter()
  void RemoveReadTypeFilter()
  void RemovePriorityFilter()
  void RemoveSubsystemFilter()
  void ClearFilters()
--------------------------------------------------
Класс: Unity.IO.LowLevel.Unsafe.VirtualFileSystem
Наследуется от: object
Поля:
Свойства:
Методы:
  bool GetLocalFileSystemName(string vfsFileName, String& localFileName, UInt64& localFileOffset, UInt64& localFileSize)
--------------------------------------------------
Класс: Unity.Collections.ReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.WriteOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.DeallocateOnJobCompletionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.NativeFixedLengthAttribute
Наследуется от: Attribute
Поля:
  int FixedLength
Свойства:
Методы:
  void .ctor(int fixedLength)
--------------------------------------------------
Класс: Unity.Collections.NativeMatchesParallelForLengthAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.NativeDisableParallelForRestrictionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.Allocator
Наследуется от: Enum
Поля:
  int value__
  Allocator Invalid
  Allocator None
  Allocator Temp
  Allocator TempJob
  Allocator Persistent
  Allocator AudioKernel
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Collections.LeakCategory
Наследуется от: Enum
Поля:
  int value__
  LeakCategory Invalid
  LeakCategory Malloc
  LeakCategory TempJob
  LeakCategory Persistent
  LeakCategory LightProbesQuery
  LeakCategory NativeTest
  LeakCategory MeshDataArray
  LeakCategory TransformAccessArray
  LeakCategory NavMeshQuery
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Collections.NativeLeakDetectionMode
Наследуется от: Enum
Поля:
  int value__
  NativeLeakDetectionMode EnabledWithStackTrace
  NativeLeakDetectionMode Enabled
  NativeLeakDetectionMode Disabled
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Collections.NativeLeakDetection
Наследуется от: object
Поля:
  int s_NativeLeakDetectionMode
  string kNativeLeakDetectionModePrefsString
Свойства:
  NativeLeakDetectionMode Mode
Методы:
  void Initialize()
  NativeLeakDetectionMode get_Mode()
  void set_Mode(NativeLeakDetectionMode value)
--------------------------------------------------
Класс: Unity.Collections.NativeArrayOptions
Наследуется от: Enum
Поля:
  int value__
  NativeArrayOptions UninitializedMemory
  NativeArrayOptions ClearMemory
Свойства:
Методы:
--------------------------------------------------
Класс: Unity.Collections.NativeArray`1
Наследуется от: ValueType
Поля:
  Void* m_Buffer
  int m_Length
  Allocator m_AllocatorLabel
Свойства:
  int Length
  T Item
  bool IsCreated
Методы:
  void .ctor(int length, Allocator allocator, NativeArrayOptions options)
  void .ctor(T[] array, Allocator allocator)
  void .ctor(NativeArray`1<T> array, Allocator allocator)
  void CheckAllocateArguments(int length, Allocator allocator, long totalSize)
  void Allocate(int length, Allocator allocator, NativeArray`1& array)
  int get_Length()
  void IsUnmanagedAndThrow()
  void CheckElementReadAccess(int index)
  void CheckElementWriteAccess(int index)
  T get_Item(int index)
  void set_Item(int index, T value)
  bool get_IsCreated()
  void Dispose()
  JobHandle Dispose(JobHandle inputDeps)
  void CopyFrom(T[] array)
  void CopyFrom(NativeArray`1<T> array)
  void CopyTo(T[] array)
  void CopyTo(NativeArray`1<T> array)
  T[] ToArray()
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Equals(NativeArray`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(NativeArray`1<T> left, NativeArray`1<T> right)
  bool op_Inequality(NativeArray`1<T> left, NativeArray`1<T> right)
  void CheckCopyLengths(int srcLength, int dstLength)
  void Copy(NativeArray`1<T> src, NativeArray`1<T> dst)
  void Copy(ReadOnly<T> src, NativeArray`1<T> dst)
  void Copy(T[] src, NativeArray`1<T> dst)
  void Copy(NativeArray`1<T> src, T[] dst)
  void Copy(ReadOnly<T> src, T[] dst)
  void Copy(NativeArray`1<T> src, NativeArray`1<T> dst, int length)
  void Copy(ReadOnly<T> src, NativeArray`1<T> dst, int length)
  void Copy(T[] src, NativeArray`1<T> dst, int length)
  void Copy(NativeArray`1<T> src, T[] dst, int length)
  void Copy(ReadOnly<T> src, T[] dst, int length)
  void CheckCopyArguments(int srcLength, int srcIndex, int dstLength, int dstIndex, int length)
  void Copy(NativeArray`1<T> src, int srcIndex, NativeArray`1<T> dst, int dstIndex, int length)
  void Copy(ReadOnly<T> src, int srcIndex, NativeArray`1<T> dst, int dstIndex, int length)
  void Copy(T[] src, int srcIndex, NativeArray`1<T> dst, int dstIndex, int length)
  void Copy(NativeArray`1<T> src, int srcIndex, T[] dst, int dstIndex, int length)
  void Copy(ReadOnly<T> src, int srcIndex, T[] dst, int dstIndex, int length)
  void CheckReinterpretLoadRange(int sourceIndex)
  void CheckReinterpretStoreRange(int destIndex)
  U ReinterpretLoad(int sourceIndex)
  void ReinterpretStore(int destIndex, U data)
  NativeArray`1<U> InternalReinterpret(int length)
  void CheckReinterpretSize()
  NativeArray`1<U> Reinterpret()
  void CheckReinterpretSize(long tSize, long uSize, int expectedTypeSize, long byteLen, long uLen)
  NativeArray`1<U> Reinterpret(int expectedTypeSize)
  void CheckGetSubArrayArguments(int start, int length)
  NativeArray`1<T> GetSubArray(int start, int length)
  ReadOnly<T> AsReadOnly()
--------------------------------------------------
Класс: Unity.Collections.NativeArrayDispose
Наследуется от: ValueType
Поля:
  Void* m_Buffer
  Allocator m_AllocatorLabel
Свойства:
Методы:
  void Dispose()
--------------------------------------------------
Класс: Unity.Collections.NativeArrayDisposeJob
Наследуется от: ValueType
Поля:
  NativeArrayDispose Data
Свойства:
Методы:
  void Execute()
--------------------------------------------------
Класс: Unity.Collections.NativeArrayDebugView`1
Наследуется от: object
Поля:
  NativeArray`1<T> m_Array
Свойства:
  T[] Items
Методы:
  void .ctor(NativeArray`1<T> array)
  T[] get_Items()
--------------------------------------------------
Класс: Unity.Collections.NativeArrayReadOnlyDebugView`1
Наследуется от: object
Поля:
  ReadOnly<T> m_Array
Свойства:
  T[] Items
Методы:
  void .ctor(ReadOnly<T> array)
  T[] get_Items()
--------------------------------------------------
Класс: Unity.Collections.NativeSliceExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  NativeSlice`1<T> Slice(NativeArray`1<T> thisArray)
  NativeSlice`1<T> Slice(NativeArray`1<T> thisArray, int start)
  NativeSlice`1<T> Slice(NativeArray`1<T> thisArray, int start, int length)
  NativeSlice`1<T> Slice(NativeSlice`1<T> thisSlice)
  NativeSlice`1<T> Slice(NativeSlice`1<T> thisSlice, int start)
  NativeSlice`1<T> Slice(NativeSlice`1<T> thisSlice, int start, int length)
--------------------------------------------------
Класс: Unity.Collections.NativeSlice`1
Наследуется от: ValueType
Поля:
  Byte* m_Buffer
  int m_Stride
  int m_Length
Свойства:
  T Item
  int Stride
  int Length
Методы:
  void .ctor(NativeSlice`1<T> slice, int start)
  void .ctor(NativeSlice`1<T> slice, int start, int length)
  void .ctor(NativeArray`1<T> array)
  void .ctor(NativeArray`1<T> array, int start)
  NativeSlice`1<T> op_Implicit(NativeArray`1<T> array)
  void .ctor(NativeArray`1<T> array, int start, int length)
  NativeSlice`1<U> SliceConvert()
  NativeSlice`1<U> SliceWithStride(int offset)
  NativeSlice`1<U> SliceWithStride()
  void CheckReadIndex(int index)
  void CheckWriteIndex(int index)
  T get_Item(int index)
  void set_Item(int index, T value)
  void CopyFrom(NativeSlice`1<T> slice)
  void CopyFrom(T[] array)
  void CopyTo(NativeArray`1<T> array)
  void CopyTo(T[] array)
  T[] ToArray()
  int get_Stride()
  int get_Length()
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Equals(NativeSlice`1<T> other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(NativeSlice`1<T> left, NativeSlice`1<T> right)
  bool op_Inequality(NativeSlice`1<T> left, NativeSlice`1<T> right)
--------------------------------------------------
Класс: Unity.Collections.NativeSliceDebugView`1
Наследуется от: object
Поля:
  NativeSlice`1<T> m_Array
Свойства:
  T[] Items
Методы:
  void .ctor(NativeSlice`1<T> array)
  T[] get_Items()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.BurstLike
Наследуется от: object
Поля:
Свойства:
Методы:
  int NativeFunctionCall_Int_IntPtr_IntPtr(IntPtr function, IntPtr p0, IntPtr p1, Int32& error)
  IntPtr StaticDataGetOrCreate(int key, int sizeInBytes, Int32& error)
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerIsReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerIsAtomicWriteOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsMinMaxWriteRestrictionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsDeallocateOnJobCompletionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsDeferredConvertListToArray
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeSetThreadIndexAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeContainerNeedsThreadIndexAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.WriteAccessRequiredAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeDisableUnsafePtrRestrictionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeDisableContainerSafetyRestrictionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeSetClassTypeToNullOnScheduleAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeArrayUnsafeUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  void CheckConvertArguments(int length, Allocator allocator)
  NativeArray`1<T> ConvertExistingDataToNativeArray(Void* dataPointer, int length, Allocator allocator)
  Void* GetUnsafePtr(NativeArray`1<T> nativeArray)
  Void* GetUnsafeReadOnlyPtr(NativeArray`1<T> nativeArray)
  Void* GetUnsafeReadOnlyPtr(ReadOnly<T> nativeArray)
  Void* GetUnsafeBufferPointerWithoutChecks(NativeArray`1<T> nativeArray)
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.NativeSliceUnsafeUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  NativeSlice`1<T> ConvertExistingDataToNativeSlice(Void* dataPointer, int stride, int length)
  Void* GetUnsafePtr(NativeSlice`1<T> nativeSlice)
  Void* GetUnsafeReadOnlyPtr(NativeSlice`1<T> nativeSlice)
--------------------------------------------------
Класс: Unity.Collections.LowLevel.Unsafe.UnsafeUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  int GetFieldOffsetInStruct(FieldInfo field)
  int GetFieldOffsetInClass(FieldInfo field)
  int GetFieldOffset(FieldInfo field)
  Void* PinGCObjectAndGetAddress(object target, UInt64& gcHandle)
  Void* PinGCArrayAndGetDataAddress(Array target, UInt64& gcHandle)
  Void* PinSystemArrayAndGetAddress(object target, UInt64& gcHandle)
  Void* PinSystemObjectAndGetAddress(object target, UInt64& gcHandle)
  void ReleaseGCObject(ulong gcHandle)
  void CopyObjectAddressToPtr(object target, Void* dstPtr)
  bool IsBlittable()
  int CheckForLeaks()
  int ForgiveLeaks()
  NativeLeakDetectionMode GetLeakDetectionMode()
  void SetLeakDetectionMode(NativeLeakDetectionMode value)
  int LeakRecord(IntPtr handle, LeakCategory category, int callstacksToSkip)
  int LeakErase(IntPtr handle, LeakCategory category)
  Void* MallocTracked(long size, int alignment, Allocator allocator, int callstacksToSkip)
  void FreeTracked(Void* memory, Allocator allocator)
  Void* Malloc(long size, int alignment, Allocator allocator)
  void Free(Void* memory, Allocator allocator)
  bool IsValidAllocator(Allocator allocator)
  void MemCpy(Void* destination, Void* source, long size)
  void MemCpyReplicate(Void* destination, Void* source, int size, int count)
  void MemCpyStride(Void* destination, int destinationStride, Void* source, int sourceStride, int elementSize, int count)
  void MemMove(Void* destination, Void* source, long size)
  void MemSet(Void* destination, byte value, long size)
  void MemClear(Void* destination, long size)
  int MemCmp(Void* ptr1, Void* ptr2, long size)
  int SizeOf(Type type)
  bool IsBlittable(Type type)
  bool IsUnmanaged(Type type)
  bool IsValidNativeContainerElementType(Type type)
  void LogError(string msg, string filename, int linenumber)
  bool IsBlittableValueType(Type t)
  string GetReasonForTypeNonBlittableImpl(Type t, string name)
  bool IsArrayBlittable(Array arr)
  bool IsGenericListBlittable()
  string GetReasonForArrayNonBlittable(Array arr)
  string GetReasonForGenericListNonBlittable()
  string GetReasonForTypeNonBlittable(Type t)
  string GetReasonForValueTypeNonBlittable()
  bool IsUnmanaged()
  bool IsValidNativeContainerElementType()
  int AlignOf()
  void CopyPtrToStructure(Void* ptr, T& output)
  void InternalCopyPtrToStructure(Void* ptr, T& output)
  void CopyStructureToPtr(T& input, Void* ptr)
  void InternalCopyStructureToPtr(T& input, Void* ptr)
  T ReadArrayElement(Void* source, int index)
  T ReadArrayElementWithStride(Void* source, int index, int stride)
  void WriteArrayElement(Void* destination, int index, T value)
  void WriteArrayElementWithStride(Void* destination, int index, int stride, T value)
  Void* AddressOf(T& output)
  int SizeOf()
  T& As(U& from)
  T& AsRef(Void* ptr)
  T& ArrayElementAsRef(Void* ptr, int index)
  int EnumToInt(T enumValue)
  void InternalEnumToInt(T& enumValue, Int32& intValue)
  bool EnumEquals(T lhs, T rhs)
--------------------------------------------------
Класс: Unity.Burst.BurstAuthorizedExternalMethodAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Burst.BurstDiscardAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Unity.Burst.LowLevel.BurstCompilerService
Наследуется от: object
Поля:
Свойства:
  bool IsInitialized
Методы:
  string InitializeInternal(string path, ExtractCompilerFlags extractCompilerFlags)
  string GetDisassembly(MethodInfo m, string compilerOptions)
  int CompileAsyncDelegateMethod(object delegateMethod, string compilerOptions)
  Void* GetAsyncCompiledAsyncDelegateMethod(int userID)
  Void* GetOrCreateSharedMemory(Hash128& key, UInt32 size_of, UInt32 alignment)
  string GetMethodSignature(MethodInfo method)
  bool get_IsInitialized()
  void SetCurrentExecutionMode(UInt32 environment)
  UInt32 GetCurrentExecutionMode()
  void Log(Void* userData, BurstLogType logType, Byte* message, Byte* filename, int lineNumber)
  bool LoadBurstLibrary(string fullPathToLibBurstGenerated)
  void Initialize(string folderRuntime, ExtractCompilerFlags extractCompilerFlags)
--------------------------------------------------
Класс: JetBrains.Annotations.CanBeNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.NotNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.ItemNotNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.ItemCanBeNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.StringFormatMethodAttribute
Наследуется от: Attribute
Поля:
  string <FormatParameterName>k__BackingField
Свойства:
  string FormatParameterName
Методы:
  void .ctor(string formatParameterName)
  string get_FormatParameterName()
--------------------------------------------------
Класс: JetBrains.Annotations.ValueProviderAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
--------------------------------------------------
Класс: JetBrains.Annotations.InvokerParameterNameAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute
Наследуется от: Attribute
Поля:
  string <ParameterName>k__BackingField
Свойства:
  string ParameterName
Методы:
  void .ctor()
  void .ctor(string parameterName)
  string get_ParameterName()
--------------------------------------------------
Класс: JetBrains.Annotations.ContractAnnotationAttribute
Наследуется от: Attribute
Поля:
  string <Contract>k__BackingField
  bool <ForceFullStates>k__BackingField
Свойства:
  string Contract
  bool ForceFullStates
Методы:
  void .ctor(string contract)
  void .ctor(string contract, bool forceFullStates)
  string get_Contract()
  bool get_ForceFullStates()
--------------------------------------------------
Класс: JetBrains.Annotations.LocalizationRequiredAttribute
Наследуется от: Attribute
Поля:
  bool <Required>k__BackingField
Свойства:
  bool Required
Методы:
  void .ctor()
  void .ctor(bool required)
  bool get_Required()
--------------------------------------------------
Класс: JetBrains.Annotations.CannotApplyEqualityOperatorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.BaseTypeRequiredAttribute
Наследуется от: Attribute
Поля:
  Type <BaseType>k__BackingField
Свойства:
  Type BaseType
Методы:
  void .ctor(Type baseType)
  Type get_BaseType()
--------------------------------------------------
Класс: JetBrains.Annotations.UsedImplicitlyAttribute
Наследуется от: Attribute
Поля:
  ImplicitUseKindFlags <UseKindFlags>k__BackingField
  ImplicitUseTargetFlags <TargetFlags>k__BackingField
Свойства:
  ImplicitUseKindFlags UseKindFlags
  ImplicitUseTargetFlags TargetFlags
Методы:
  void .ctor()
  void .ctor(ImplicitUseKindFlags useKindFlags)
  void .ctor(ImplicitUseTargetFlags targetFlags)
  void .ctor(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)
  ImplicitUseKindFlags get_UseKindFlags()
  ImplicitUseTargetFlags get_TargetFlags()
--------------------------------------------------
Класс: JetBrains.Annotations.MeansImplicitUseAttribute
Наследуется от: Attribute
Поля:
  ImplicitUseKindFlags <UseKindFlags>k__BackingField
  ImplicitUseTargetFlags <TargetFlags>k__BackingField
Свойства:
  ImplicitUseKindFlags UseKindFlags
  ImplicitUseTargetFlags TargetFlags
Методы:
  void .ctor()
  void .ctor(ImplicitUseKindFlags useKindFlags)
  void .ctor(ImplicitUseTargetFlags targetFlags)
  void .ctor(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags)
  ImplicitUseKindFlags get_UseKindFlags()
  ImplicitUseTargetFlags get_TargetFlags()
--------------------------------------------------
Класс: JetBrains.Annotations.ImplicitUseKindFlags
Наследуется от: Enum
Поля:
  int value__
  ImplicitUseKindFlags Default
  ImplicitUseKindFlags Access
  ImplicitUseKindFlags Assign
  ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
  ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
Свойства:
Методы:
--------------------------------------------------
Класс: JetBrains.Annotations.ImplicitUseTargetFlags
Наследуется от: Enum
Поля:
  int value__
  ImplicitUseTargetFlags Default
  ImplicitUseTargetFlags Itself
  ImplicitUseTargetFlags Members
  ImplicitUseTargetFlags WithMembers
Свойства:
Методы:
--------------------------------------------------
Класс: JetBrains.Annotations.PublicAPIAttribute
Наследуется от: Attribute
Поля:
  string <Comment>k__BackingField
Свойства:
  string Comment
Методы:
  void .ctor()
  void .ctor(string comment)
  string get_Comment()
--------------------------------------------------
Класс: JetBrains.Annotations.InstantHandleAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.PureAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.MustUseReturnValueAttribute
Наследуется от: Attribute
Поля:
  string <Justification>k__BackingField
Свойства:
  string Justification
Методы:
  void .ctor()
  void .ctor(string justification)
  string get_Justification()
--------------------------------------------------
Класс: JetBrains.Annotations.ProvidesContextAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.PathReferenceAttribute
Наследуется от: Attribute
Поля:
  string <BasePath>k__BackingField
Свойства:
  string BasePath
Методы:
  void .ctor()
  void .ctor(string basePath)
  string get_BasePath()
--------------------------------------------------
Класс: JetBrains.Annotations.SourceTemplateAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.MacroAttribute
Наследуется от: Attribute
Поля:
  string <Expression>k__BackingField
  int <Editable>k__BackingField
  string <Target>k__BackingField
Свойства:
  string Expression
  int Editable
  string Target
Методы:
  string get_Expression()
  void set_Expression(string value)
  int get_Editable()
  void set_Editable(int value)
  string get_Target()
  void set_Target(string value)
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.CollectionAccessAttribute
Наследуется от: Attribute
Поля:
  CollectionAccessType <CollectionAccessType>k__BackingField
Свойства:
  CollectionAccessType CollectionAccessType
Методы:
  void .ctor(CollectionAccessType collectionAccessType)
  CollectionAccessType get_CollectionAccessType()
--------------------------------------------------
Класс: JetBrains.Annotations.CollectionAccessType
Наследуется от: Enum
Поля:
  int value__
  CollectionAccessType None
  CollectionAccessType Read
  CollectionAccessType ModifyExistingContent
  CollectionAccessType UpdatedContent
Свойства:
Методы:
--------------------------------------------------
Класс: JetBrains.Annotations.AssertionMethodAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.AssertionConditionAttribute
Наследуется от: Attribute
Поля:
  AssertionConditionType <ConditionType>k__BackingField
Свойства:
  AssertionConditionType ConditionType
Методы:
  void .ctor(AssertionConditionType conditionType)
  AssertionConditionType get_ConditionType()
--------------------------------------------------
Класс: JetBrains.Annotations.AssertionConditionType
Наследуется от: Enum
Поля:
  int value__
  AssertionConditionType IS_TRUE
  AssertionConditionType IS_FALSE
  AssertionConditionType IS_NULL
  AssertionConditionType IS_NOT_NULL
Свойства:
Методы:
--------------------------------------------------
Класс: JetBrains.Annotations.TerminatesProgramAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.LinqTunnelAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.NoEnumerationAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.RegexPatternAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JetBrains.Annotations.NoReorderAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.SendMessageOptions
Наследуется от: Enum
Поля:
  int value__
  SendMessageOptions RequireReceiver
  SendMessageOptions DontRequireReceiver
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PrimitiveType
Наследуется от: Enum
Поля:
  int value__
  PrimitiveType Sphere
  PrimitiveType Capsule
  PrimitiveType Cylinder
  PrimitiveType Cube
  PrimitiveType Plane
  PrimitiveType Quad
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Space
Наследуется от: Enum
Поля:
  int value__
  Space World
  Space Self
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RuntimePlatform
Наследуется от: Enum
Поля:
  int value__
  RuntimePlatform OSXEditor
  RuntimePlatform OSXPlayer
  RuntimePlatform WindowsPlayer
  RuntimePlatform OSXWebPlayer
  RuntimePlatform OSXDashboardPlayer
  RuntimePlatform WindowsWebPlayer
  RuntimePlatform WindowsEditor
  RuntimePlatform IPhonePlayer
  RuntimePlatform XBOX360
  RuntimePlatform PS3
  RuntimePlatform Android
  RuntimePlatform NaCl
  RuntimePlatform FlashPlayer
  RuntimePlatform LinuxPlayer
  RuntimePlatform LinuxEditor
  RuntimePlatform WebGLPlayer
  RuntimePlatform MetroPlayerX86
  RuntimePlatform WSAPlayerX86
  RuntimePlatform MetroPlayerX64
  RuntimePlatform WSAPlayerX64
  RuntimePlatform MetroPlayerARM
  RuntimePlatform WSAPlayerARM
  RuntimePlatform WP8Player
  RuntimePlatform BlackBerryPlayer
  RuntimePlatform TizenPlayer
  RuntimePlatform PSP2
  RuntimePlatform PS4
  RuntimePlatform PSM
  RuntimePlatform XboxOne
  RuntimePlatform SamsungTVPlayer
  RuntimePlatform WiiU
  RuntimePlatform tvOS
  RuntimePlatform Switch
  RuntimePlatform Lumin
  RuntimePlatform Stadia
  RuntimePlatform CloudRendering
  RuntimePlatform GameCoreScarlett
  RuntimePlatform GameCoreXboxSeries
  RuntimePlatform GameCoreXboxOne
  RuntimePlatform PS5
  RuntimePlatform EmbeddedLinuxArm64
  RuntimePlatform EmbeddedLinuxArm32
  RuntimePlatform EmbeddedLinuxX64
  RuntimePlatform EmbeddedLinuxX86
  RuntimePlatform LinuxServer
  RuntimePlatform WindowsServer
  RuntimePlatform OSXServer
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SystemLanguage
Наследуется от: Enum
Поля:
  int value__
  SystemLanguage Afrikaans
  SystemLanguage Arabic
  SystemLanguage Basque
  SystemLanguage Belarusian
  SystemLanguage Bulgarian
  SystemLanguage Catalan
  SystemLanguage Chinese
  SystemLanguage Czech
  SystemLanguage Danish
  SystemLanguage Dutch
  SystemLanguage English
  SystemLanguage Estonian
  SystemLanguage Faroese
  SystemLanguage Finnish
  SystemLanguage French
  SystemLanguage German
  SystemLanguage Greek
  SystemLanguage Hebrew
  SystemLanguage Icelandic
  SystemLanguage Indonesian
  SystemLanguage Italian
  SystemLanguage Japanese
  SystemLanguage Korean
  SystemLanguage Latvian
  SystemLanguage Lithuanian
  SystemLanguage Norwegian
  SystemLanguage Polish
  SystemLanguage Portuguese
  SystemLanguage Romanian
  SystemLanguage Russian
  SystemLanguage SerboCroatian
  SystemLanguage Slovak
  SystemLanguage Slovenian
  SystemLanguage Spanish
  SystemLanguage Swedish
  SystemLanguage Thai
  SystemLanguage Turkish
  SystemLanguage Ukrainian
  SystemLanguage Vietnamese
  SystemLanguage ChineseSimplified
  SystemLanguage ChineseTraditional
  SystemLanguage Unknown
  SystemLanguage Hungarian
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LogType
Наследуется от: Enum
Поля:
  int value__
  LogType Error
  LogType Assert
  LogType Warning
  LogType Log
  LogType Exception
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LogOption
Наследуется от: Enum
Поля:
  int value__
  LogOption None
  LogOption NoStacktrace
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ThreadPriority
Наследуется от: Enum
Поля:
  int value__
  ThreadPriority Low
  ThreadPriority BelowNormal
  ThreadPriority Normal
  ThreadPriority High
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SortingLayer
Наследуется от: ValueType
Поля:
  int m_Id
Свойства:
  int id
  string name
  int value
  SortingLayer[] layers
Методы:
  int get_id()
  string get_name()
  int get_value()
  SortingLayer[] get_layers()
  Int32[] GetSortingLayerIDsInternal()
  int GetLayerValueFromID(int id)
  int GetLayerValueFromName(string name)
  int NameToID(string name)
  string IDToName(int id)
  bool IsValid(int id)
--------------------------------------------------
Класс: UnityEngine.WeightedMode
Наследуется от: Enum
Поля:
  int value__
  WeightedMode None
  WeightedMode In
  WeightedMode Out
  WeightedMode Both
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Keyframe
Наследуется от: ValueType
Поля:
  float m_Time
  float m_Value
  float m_InTangent
  float m_OutTangent
  int m_WeightedMode
  float m_InWeight
  float m_OutWeight
Свойства:
  float time
  float value
  float inTangent
  float outTangent
  float inWeight
  float outWeight
  WeightedMode weightedMode
  int tangentMode
  int tangentModeInternal
Методы:
  void .ctor(float time, float value)
  void .ctor(float time, float value, float inTangent, float outTangent)
  void .ctor(float time, float value, float inTangent, float outTangent, float inWeight, float outWeight)
  float get_time()
  void set_time(float value)
  float get_value()
  void set_value(float value)
  float get_inTangent()
  void set_inTangent(float value)
  float get_outTangent()
  void set_outTangent(float value)
  float get_inWeight()
  void set_inWeight(float value)
  float get_outWeight()
  void set_outWeight(float value)
  WeightedMode get_weightedMode()
  void set_weightedMode(WeightedMode value)
  int get_tangentMode()
  void set_tangentMode(int value)
  int get_tangentModeInternal()
  void set_tangentModeInternal(int value)
--------------------------------------------------
Класс: UnityEngine.WrapMode
Наследуется от: Enum
Поля:
  int value__
  WrapMode Once
  WrapMode Loop
  WrapMode PingPong
  WrapMode Default
  WrapMode ClampForever
  WrapMode Clamp
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.AnimationCurve
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  Keyframe[] keys
  Keyframe Item
  int length
  WrapMode preWrapMode
  WrapMode postWrapMode
Методы:
  void Internal_Destroy(IntPtr ptr)
  IntPtr Internal_Create(Keyframe[] keys)
  bool Internal_Equals(IntPtr other)
  void Finalize()
  float Evaluate(float time)
  Keyframe[] get_keys()
  void set_keys(Keyframe[] value)
  int AddKey(float time, float value)
  int AddKey(Keyframe key)
  int AddKey_Internal(Keyframe key)
  int MoveKey(int index, Keyframe key)
  void RemoveKey(int index)
  Keyframe get_Item(int index)
  int get_length()
  void SetKeys(Keyframe[] keys)
  Keyframe GetKey(int index)
  Keyframe[] GetKeys()
  void SmoothTangents(int index, float weight)
  AnimationCurve Constant(float timeStart, float timeEnd, float value)
  AnimationCurve Linear(float timeStart, float valueStart, float timeEnd, float valueEnd)
  AnimationCurve EaseInOut(float timeStart, float valueStart, float timeEnd, float valueEnd)
  WrapMode get_preWrapMode()
  void set_preWrapMode(WrapMode value)
  WrapMode get_postWrapMode()
  void set_postWrapMode(WrapMode value)
  void .ctor(Keyframe[] keys)
  void .ctor()
  bool Equals(object o)
  bool Equals(AnimationCurve other)
  int GetHashCode()
  int AddKey_Internal_Injected(Keyframe& key)
  int MoveKey_Injected(int index, Keyframe& key)
  void GetKey_Injected(int index, Keyframe& ret)
--------------------------------------------------
Класс: UnityEngine.Application
Наследуется от: object
Поля:
  LowMemoryCallback lowMemory
  LogCallback s_LogCallbackHandler
  LogCallback s_LogCallbackHandlerThreaded
  AdvertisingIdentifierCallback OnAdvertisingIdentifierCallback
  Action`1<bool> focusChanged
  Action`1<string> deepLinkActivated
  Func`1<bool> wantsToQuit
  Action quitting
  Action unloading
  LogCallback modreq(System.Runtime.CompilerServices.IsVolatile) s_RegisterLogCallbackDeprecated
Свойства:
  bool isLoadingLevel
  int streamedBytes
  bool webSecurityEnabled
  bool isPlaying
  bool isFocused
  string buildGUID
  bool runInBackground
  bool isBatchMode
  bool isTestRun
  bool isHumanControllingUs
  string dataPath
  string streamingAssetsPath
  string persistentDataPath
  string temporaryCachePath
  string absoluteURL
  string unityVersion
  int unityVersionVer
  int unityVersionMaj
  int unityVersionMin
  string version
  string installerName
  string identifier
  ApplicationInstallMode installMode
  ApplicationSandboxType sandboxType
  string productName
  string companyName
  string cloudProjectId
  int targetFrameRate
  StackTraceLogType stackTraceLogType
  string consoleLogPath
  ThreadPriority backgroundLoadingPriority
  bool genuine
  bool genuineCheckAvailable
  bool submitAnalytics
  bool isShowingSplashScreen
  RuntimePlatform platform
  bool isMobilePlatform
  bool isConsolePlatform
  SystemLanguage systemLanguage
  NetworkReachability internetReachability
  bool isPlayer
  int levelCount
  int loadedLevel
  string loadedLevelName
  bool isEditor
Методы:
  void Quit(int exitCode)
  void Quit()
  void CancelQuit()
  void Unload()
  bool get_isLoadingLevel()
  float GetStreamProgressForLevel(int levelIndex)
  float GetStreamProgressForLevel(string levelName)
  int get_streamedBytes()
  bool get_webSecurityEnabled()
  bool CanStreamedLevelBeLoaded(int levelIndex)
  bool CanStreamedLevelBeLoaded(string levelName)
  bool get_isPlaying()
  bool IsPlaying(Object obj)
  bool get_isFocused()
  String[] GetBuildTags()
  void SetBuildTags(String[] buildTags)
  string get_buildGUID()
  bool get_runInBackground()
  void set_runInBackground(bool value)
  bool HasProLicense()
  bool get_isBatchMode()
  bool get_isTestRun()
  bool get_isHumanControllingUs()
  bool HasARGV(string name)
  string GetValueForARGV(string name)
  string get_dataPath()
  string get_streamingAssetsPath()
  string get_persistentDataPath()
  string get_temporaryCachePath()
  string get_absoluteURL()
  void ExternalEval(string script)
  void Internal_ExternalCall(string script)
  string get_unityVersion()
  int get_unityVersionVer()
  int get_unityVersionMaj()
  int get_unityVersionMin()
  string get_version()
  string get_installerName()
  string get_identifier()
  ApplicationInstallMode get_installMode()
  ApplicationSandboxType get_sandboxType()
  string get_productName()
  string get_companyName()
  string get_cloudProjectId()
  bool RequestAdvertisingIdentifierAsync(AdvertisingIdentifierCallback delegateMethod)
  void OpenURL(string url)
  void ForceCrash(int mode)
  int get_targetFrameRate()
  void set_targetFrameRate(int value)
  void SetLogCallbackDefined(bool defined)
  StackTraceLogType get_stackTraceLogType()
  void set_stackTraceLogType(StackTraceLogType value)
  StackTraceLogType GetStackTraceLogType(LogType logType)
  void SetStackTraceLogType(LogType logType, StackTraceLogType stackTraceType)
  string get_consoleLogPath()
  ThreadPriority get_backgroundLoadingPriority()
  void set_backgroundLoadingPriority(ThreadPriority value)
  bool get_genuine()
  bool get_genuineCheckAvailable()
  AsyncOperation RequestUserAuthorization(UserAuthorization mode)
  bool HasUserAuthorization(UserAuthorization mode)
  bool get_submitAnalytics()
  bool get_isShowingSplashScreen()
  RuntimePlatform get_platform()
  bool get_isMobilePlatform()
  bool get_isConsolePlatform()
  SystemLanguage get_systemLanguage()
  NetworkReachability get_internetReachability()
  void add_lowMemory(LowMemoryCallback value)
  void remove_lowMemory(LowMemoryCallback value)
  void CallLowMemory()
  void add_logMessageReceived(LogCallback value)
  void remove_logMessageReceived(LogCallback value)
  void add_logMessageReceivedThreaded(LogCallback value)
  void remove_logMessageReceivedThreaded(LogCallback value)
  void CallLogCallback(string logString, string stackTrace, LogType type, bool invokedOnMainThread)
  void InvokeOnAdvertisingIdentifierCallback(string advertisingId, bool trackingEnabled)
  string ObjectToJSString(object o)
  void ExternalCall(string functionName, Object[] args)
  string BuildInvocationForArguments(string functionName, Object[] args)
  bool get_isPlayer()
  void DontDestroyOnLoad(Object o)
  void CaptureScreenshot(string filename, int superSize)
  void CaptureScreenshot(string filename)
  void add_onBeforeRender(UnityAction value)
  void remove_onBeforeRender(UnityAction value)
  void add_focusChanged(Action`1<bool> value)
  void remove_focusChanged(Action`1<bool> value)
  void add_deepLinkActivated(Action`1<string> value)
  void remove_deepLinkActivated(Action`1<string> value)
  void add_wantsToQuit(Func`1<bool> value)
  void remove_wantsToQuit(Func`1<bool> value)
  void add_quitting(Action value)
  void remove_quitting(Action value)
  void add_unloading(Action value)
  void remove_unloading(Action value)
  bool Internal_ApplicationWantsToQuit()
  void Internal_ApplicationQuit()
  void Internal_ApplicationUnload()
  void InvokeOnBeforeRender()
  void InvokeFocusChanged(bool focus)
  void InvokeDeepLinkActivated(string url)
  void RegisterLogCallback(LogCallback handler)
  void RegisterLogCallbackThreaded(LogCallback handler)
  void RegisterLogCallback(LogCallback handler, bool threaded)
  int get_levelCount()
  int get_loadedLevel()
  string get_loadedLevelName()
  void LoadLevel(int index)
  void LoadLevel(string name)
  void LoadLevelAdditive(int index)
  void LoadLevelAdditive(string name)
  AsyncOperation LoadLevelAsync(int index)
  AsyncOperation LoadLevelAsync(string levelName)
  AsyncOperation LoadLevelAdditiveAsync(int index)
  AsyncOperation LoadLevelAdditiveAsync(string levelName)
  bool UnloadLevel(int index)
  bool UnloadLevel(string scenePath)
  bool get_isEditor()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.StackTraceLogType
Наследуется от: Enum
Поля:
  int value__
  StackTraceLogType None
  StackTraceLogType ScriptOnly
  StackTraceLogType Full
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NetworkReachability
Наследуется от: Enum
Поля:
  int value__
  NetworkReachability NotReachable
  NetworkReachability ReachableViaCarrierDataNetwork
  NetworkReachability ReachableViaLocalAreaNetwork
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UserAuthorization
Наследуется от: Enum
Поля:
  int value__
  UserAuthorization WebCam
  UserAuthorization Microphone
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ApplicationInstallMode
Наследуется от: Enum
Поля:
  int value__
  ApplicationInstallMode Unknown
  ApplicationInstallMode Store
  ApplicationInstallMode DeveloperBuild
  ApplicationInstallMode Adhoc
  ApplicationInstallMode Enterprise
  ApplicationInstallMode Editor
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ApplicationSandboxType
Наследуется от: Enum
Поля:
  int value__
  ApplicationSandboxType Unknown
  ApplicationSandboxType NotSandboxed
  ApplicationSandboxType Sandboxed
  ApplicationSandboxType SandboxBroken
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.AudioType
Наследуется от: Enum
Поля:
  int value__
  AudioType UNKNOWN
  AudioType ACC
  AudioType AIFF
  AudioType IT
  AudioType MOD
  AudioType MPEG
  AudioType OGGVORBIS
  AudioType S3M
  AudioType WAV
  AudioType XM
  AudioType XMA
  AudioType VAG
  AudioType AUDIOQUEUE
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.BootConfigData
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
Методы:
  void AddKey(string key)
  string Get(string key)
  string Get(string key, int index)
  void Append(string key, string value)
  void Set(string key, string value)
  string GetValue(string key, int index)
  BootConfigData WrapBootConfigData(IntPtr nativeHandle)
  void .ctor(IntPtr nativeHandle)
--------------------------------------------------
Класс: UnityEngine.CachedAssetBundle
Наследуется от: ValueType
Поля:
  string m_Name
  Hash128 m_Hash
Свойства:
  string name
  Hash128 hash
Методы:
  void .ctor(string name, Hash128 hash)
  string get_name()
  void set_name(string value)
  Hash128 get_hash()
  void set_hash(Hash128 value)
--------------------------------------------------
Класс: UnityEngine.Cache
Наследуется от: ValueType
Поля:
  int m_Handle
Свойства:
  int handle
  bool valid
  bool ready
  bool readOnly
  string path
  int index
  long spaceFree
  long maximumAvailableStorageSpace
  long spaceOccupied
  int expirationDelay
Методы:
  int get_handle()
  bool op_Equality(Cache lhs, Cache rhs)
  bool op_Inequality(Cache lhs, Cache rhs)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Cache other)
  bool get_valid()
  bool Cache_IsValid(int handle)
  bool get_ready()
  bool Cache_IsReady(int handle)
  bool get_readOnly()
  bool Cache_IsReadonly(int handle)
  string get_path()
  string Cache_GetPath(int handle)
  int get_index()
  int Cache_GetIndex(int handle)
  long get_spaceFree()
  long Cache_GetSpaceFree(int handle)
  long get_maximumAvailableStorageSpace()
  void set_maximumAvailableStorageSpace(long value)
  long Cache_GetMaximumDiskSpaceAvailable(int handle)
  void Cache_SetMaximumDiskSpaceAvailable(int handle, long value)
  long get_spaceOccupied()
  long Cache_GetCachingDiskSpaceUsed(int handle)
  int get_expirationDelay()
  void set_expirationDelay(int value)
  int Cache_GetExpirationDelay(int handle)
  void Cache_SetExpirationDelay(int handle, int value)
  bool ClearCache()
  bool Cache_ClearCache(int handle)
  bool ClearCache(int expiration)
  bool Cache_ClearCache_Expiration(int handle, int expiration)
--------------------------------------------------
Класс: UnityEngine.CacheIndex
Наследуется от: ValueType
Поля:
  string name
  int bytesUsed
  int expires
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Caching
Наследуется от: object
Поля:
Свойства:
  bool compressionEnabled
  bool ready
  int spaceUsed
  long spaceOccupied
  int spaceAvailable
  long spaceFree
  long maximumAvailableDiskSpace
  int expirationDelay
  int cacheCount
  Cache defaultCache
  Cache currentCacheForWriting
Методы:
  bool get_compressionEnabled()
  void set_compressionEnabled(bool value)
  bool get_ready()
  bool ClearCache()
  bool ClearCache(int expiration)
  bool ClearCache_Int(int expiration)
  bool ClearCachedVersion(string assetBundleName, Hash128 hash)
  bool ClearCachedVersionInternal(string assetBundleName, Hash128 hash)
  bool ClearOtherCachedVersions(string assetBundleName, Hash128 hash)
  bool ClearAllCachedVersions(string assetBundleName)
  bool ClearCachedVersions(string assetBundleName, Hash128 hash, bool keepInputVersion)
  Hash128[] GetCachedVersions(string assetBundleName)
  void GetCachedVersions(string assetBundleName, List`1<Hash128> outCachedVersions)
  bool IsVersionCached(string url, int version)
  bool IsVersionCached(string url, Hash128 hash)
  bool IsVersionCached(CachedAssetBundle cachedBundle)
  bool IsVersionCached(string url, string assetBundleName, Hash128 hash)
  bool MarkAsUsed(string url, int version)
  bool MarkAsUsed(string url, Hash128 hash)
  bool MarkAsUsed(CachedAssetBundle cachedBundle)
  bool MarkAsUsed(string url, string assetBundleName, Hash128 hash)
  int GetVersionFromCache(string url)
  int get_spaceUsed()
  long get_spaceOccupied()
  int get_spaceAvailable()
  long get_spaceFree()
  long get_maximumAvailableDiskSpace()
  void set_maximumAvailableDiskSpace(long value)
  int get_expirationDelay()
  void set_expirationDelay(int value)
  Cache AddCache(string cachePath)
  Cache AddCache(string cachePath, bool isReadonly)
  Cache GetCacheAt(int cacheIndex)
  Cache GetCacheByPath(string cachePath)
  void GetAllCachePaths(List`1<string> cachePaths)
  bool RemoveCache(Cache cache)
  void MoveCacheBefore(Cache src, Cache dst)
  void MoveCacheAfter(Cache src, Cache dst)
  int get_cacheCount()
  Cache get_defaultCache()
  Cache get_currentCacheForWriting()
  void set_currentCacheForWriting(Cache value)
  bool CleanCache()
  void .ctor()
  bool ClearCachedVersionInternal_Injected(string assetBundleName, Hash128& hash)
  bool ClearCachedVersions_Injected(string assetBundleName, Hash128& hash, bool keepInputVersion)
  bool IsVersionCached_Injected(string url, string assetBundleName, Hash128& hash)
  bool MarkAsUsed_Injected(string url, string assetBundleName, Hash128& hash)
  void AddCache_Injected(string cachePath, bool isReadonly, Cache& ret)
  void GetCacheAt_Injected(int cacheIndex, Cache& ret)
  void GetCacheByPath_Injected(string cachePath, Cache& ret)
  bool RemoveCache_Injected(Cache& cache)
  void MoveCacheBefore_Injected(Cache& src, Cache& dst)
  void MoveCacheAfter_Injected(Cache& src, Cache& dst)
  void get_defaultCache_Injected(Cache& ret)
  void get_currentCacheForWriting_Injected(Cache& ret)
  void set_currentCacheForWriting_Injected(Cache& value)
--------------------------------------------------
Класс: UnityEngine.Camera
Наследуется от: Behaviour
Поля:
  CameraCallback onPreCull
  CameraCallback onPreRender
  CameraCallback onPostRender
Свойства:
  float nearClipPlane
  float farClipPlane
  float fieldOfView
  RenderingPath renderingPath
  RenderingPath actualRenderingPath
  bool allowHDR
  bool allowMSAA
  bool allowDynamicResolution
  bool forceIntoRenderTexture
  float orthographicSize
  bool orthographic
  OpaqueSortMode opaqueSortMode
  TransparencySortMode transparencySortMode
  Vector3 transparencySortAxis
  float depth
  float aspect
  Vector3 velocity
  int cullingMask
  int eventMask
  bool layerCullSpherical
  CameraType cameraType
  Material skyboxMaterial
  ulong overrideSceneCullingMask
  ulong sceneCullingMask
  Single[] layerCullDistances
  int PreviewCullingLayer
  bool useOcclusionCulling
  Matrix4x4 cullingMatrix
  Color backgroundColor
  CameraClearFlags clearFlags
  DepthTextureMode depthTextureMode
  bool clearStencilAfterLightingPass
  ProjectionMatrixMode projectionMatrixMode
  bool usePhysicalProperties
  Vector2 sensorSize
  Vector2 lensShift
  float focalLength
  GateFitMode gateFit
  Rect rect
  Rect pixelRect
  int pixelWidth
  int pixelHeight
  int scaledPixelWidth
  int scaledPixelHeight
  RenderTexture targetTexture
  RenderTexture activeTexture
  int targetDisplay
  Matrix4x4 cameraToWorldMatrix
  Matrix4x4 worldToCameraMatrix
  Matrix4x4 projectionMatrix
  Matrix4x4 nonJitteredProjectionMatrix
  bool useJitteredProjectionMatrixForTransparentRendering
  Matrix4x4 previousViewProjectionMatrix
  Camera main
  Camera current
  Scene scene
  bool stereoEnabled
  float stereoSeparation
  float stereoConvergence
  bool areVRStereoViewMatricesWithinSingleCullTolerance
  StereoTargetEyeMask stereoTargetEye
  MonoOrStereoscopicEye stereoActiveEye
  int allCamerasCount
  Camera[] allCameras
  SceneViewFilterMode sceneViewFilterMode
  int commandBufferCount
Методы:
  void .ctor()
  float get_nearClipPlane()
  void set_nearClipPlane(float value)
  float get_farClipPlane()
  void set_farClipPlane(float value)
  float get_fieldOfView()
  void set_fieldOfView(float value)
  RenderingPath get_renderingPath()
  void set_renderingPath(RenderingPath value)
  RenderingPath get_actualRenderingPath()
  void Reset()
  bool get_allowHDR()
  void set_allowHDR(bool value)
  bool get_allowMSAA()
  void set_allowMSAA(bool value)
  bool get_allowDynamicResolution()
  void set_allowDynamicResolution(bool value)
  bool get_forceIntoRenderTexture()
  void set_forceIntoRenderTexture(bool value)
  float get_orthographicSize()
  void set_orthographicSize(float value)
  bool get_orthographic()
  void set_orthographic(bool value)
  OpaqueSortMode get_opaqueSortMode()
  void set_opaqueSortMode(OpaqueSortMode value)
  TransparencySortMode get_transparencySortMode()
  void set_transparencySortMode(TransparencySortMode value)
  Vector3 get_transparencySortAxis()
  void set_transparencySortAxis(Vector3 value)
  void ResetTransparencySortSettings()
  float get_depth()
  void set_depth(float value)
  float get_aspect()
  void set_aspect(float value)
  void ResetAspect()
  Vector3 get_velocity()
  int get_cullingMask()
  void set_cullingMask(int value)
  int get_eventMask()
  void set_eventMask(int value)
  bool get_layerCullSpherical()
  void set_layerCullSpherical(bool value)
  CameraType get_cameraType()
  void set_cameraType(CameraType value)
  Material get_skyboxMaterial()
  ulong get_overrideSceneCullingMask()
  void set_overrideSceneCullingMask(ulong value)
  ulong get_sceneCullingMask()
  Single[] GetLayerCullDistances()
  void SetLayerCullDistances(Single[] d)
  Single[] get_layerCullDistances()
  void set_layerCullDistances(Single[] value)
  int get_PreviewCullingLayer()
  bool get_useOcclusionCulling()
  void set_useOcclusionCulling(bool value)
  Matrix4x4 get_cullingMatrix()
  void set_cullingMatrix(Matrix4x4 value)
  void ResetCullingMatrix()
  Color get_backgroundColor()
  void set_backgroundColor(Color value)
  CameraClearFlags get_clearFlags()
  void set_clearFlags(CameraClearFlags value)
  DepthTextureMode get_depthTextureMode()
  void set_depthTextureMode(DepthTextureMode value)
  bool get_clearStencilAfterLightingPass()
  void set_clearStencilAfterLightingPass(bool value)
  void SetReplacementShader(Shader shader, string replacementTag)
  void ResetReplacementShader()
  ProjectionMatrixMode get_projectionMatrixMode()
  bool get_usePhysicalProperties()
  void set_usePhysicalProperties(bool value)
  Vector2 get_sensorSize()
  void set_sensorSize(Vector2 value)
  Vector2 get_lensShift()
  void set_lensShift(Vector2 value)
  float get_focalLength()
  void set_focalLength(float value)
  GateFitMode get_gateFit()
  void set_gateFit(GateFitMode value)
  float GetGateFittedFieldOfView()
  Vector2 GetGateFittedLensShift()
  Vector3 GetLocalSpaceAim()
  Rect get_rect()
  void set_rect(Rect value)
  Rect get_pixelRect()
  void set_pixelRect(Rect value)
  int get_pixelWidth()
  int get_pixelHeight()
  int get_scaledPixelWidth()
  int get_scaledPixelHeight()
  RenderTexture get_targetTexture()
  void set_targetTexture(RenderTexture value)
  RenderTexture get_activeTexture()
  int get_targetDisplay()
  void set_targetDisplay(int value)
  void SetTargetBuffersImpl(RenderBuffer color, RenderBuffer depth)
  void SetTargetBuffers(RenderBuffer colorBuffer, RenderBuffer depthBuffer)
  void SetTargetBuffersMRTImpl(RenderBuffer[] color, RenderBuffer depth)
  void SetTargetBuffers(RenderBuffer[] colorBuffer, RenderBuffer depthBuffer)
  String[] GetCameraBufferWarnings()
  Matrix4x4 get_cameraToWorldMatrix()
  Matrix4x4 get_worldToCameraMatrix()
  void set_worldToCameraMatrix(Matrix4x4 value)
  Matrix4x4 get_projectionMatrix()
  void set_projectionMatrix(Matrix4x4 value)
  Matrix4x4 get_nonJitteredProjectionMatrix()
  void set_nonJitteredProjectionMatrix(Matrix4x4 value)
  bool get_useJitteredProjectionMatrixForTransparentRendering()
  void set_useJitteredProjectionMatrixForTransparentRendering(bool value)
  Matrix4x4 get_previousViewProjectionMatrix()
  void ResetWorldToCameraMatrix()
  void ResetProjectionMatrix()
  Matrix4x4 CalculateObliqueMatrix(Vector4 clipPlane)
  Vector3 WorldToScreenPoint(Vector3 position, MonoOrStereoscopicEye eye)
  Vector3 WorldToViewportPoint(Vector3 position, MonoOrStereoscopicEye eye)
  Vector3 ViewportToWorldPoint(Vector3 position, MonoOrStereoscopicEye eye)
  Vector3 ScreenToWorldPoint(Vector3 position, MonoOrStereoscopicEye eye)
  Vector3 WorldToScreenPoint(Vector3 position)
  Vector3 WorldToViewportPoint(Vector3 position)
  Vector3 ViewportToWorldPoint(Vector3 position)
  Vector3 ScreenToWorldPoint(Vector3 position)
  Vector3 ScreenToViewportPoint(Vector3 position)
  Vector3 ViewportToScreenPoint(Vector3 position)
  Vector2 GetFrustumPlaneSizeAt(float distance)
  Ray ViewportPointToRay(Vector2 pos, MonoOrStereoscopicEye eye)
  Ray ViewportPointToRay(Vector3 pos, MonoOrStereoscopicEye eye)
  Ray ViewportPointToRay(Vector3 pos)
  Ray ScreenPointToRay(Vector2 pos, MonoOrStereoscopicEye eye)
  Ray ScreenPointToRay(Vector3 pos, MonoOrStereoscopicEye eye)
  Ray ScreenPointToRay(Vector3 pos)
  void CalculateFrustumCornersInternal(Rect viewport, float z, MonoOrStereoscopicEye eye, Vector3[] outCorners)
  void CalculateFrustumCorners(Rect viewport, float z, MonoOrStereoscopicEye eye, Vector3[] outCorners)
  void CalculateProjectionMatrixFromPhysicalPropertiesInternal(Matrix4x4& output, float focalLength, Vector2 sensorSize, Vector2 lensShift, float nearClip, float farClip, float gateAspect, GateFitMode gateFitMode)
  void CalculateProjectionMatrixFromPhysicalProperties(Matrix4x4& output, float focalLength, Vector2 sensorSize, Vector2 lensShift, float nearClip, float farClip, GateFitParameters gateFitParameters)
  float FocalLengthToFieldOfView(float focalLength, float sensorSize)
  float FieldOfViewToFocalLength(float fieldOfView, float sensorSize)
  float HorizontalToVerticalFieldOfView(float horizontalFieldOfView, float aspectRatio)
  float VerticalToHorizontalFieldOfView(float verticalFieldOfView, float aspectRatio)
  Camera get_main()
  Camera get_current()
  Scene get_scene()
  void set_scene(Scene value)
  bool get_stereoEnabled()
  float get_stereoSeparation()
  void set_stereoSeparation(float value)
  float get_stereoConvergence()
  void set_stereoConvergence(float value)
  bool get_areVRStereoViewMatricesWithinSingleCullTolerance()
  StereoTargetEyeMask get_stereoTargetEye()
  void set_stereoTargetEye(StereoTargetEyeMask value)
  MonoOrStereoscopicEye get_stereoActiveEye()
  Matrix4x4 GetStereoNonJitteredProjectionMatrix(StereoscopicEye eye)
  Matrix4x4 GetStereoViewMatrix(StereoscopicEye eye)
  void CopyStereoDeviceProjectionMatrixToNonJittered(StereoscopicEye eye)
  Matrix4x4 GetStereoProjectionMatrix(StereoscopicEye eye)
  void SetStereoProjectionMatrix(StereoscopicEye eye, Matrix4x4 matrix)
  void ResetStereoProjectionMatrices()
  void SetStereoViewMatrix(StereoscopicEye eye, Matrix4x4 matrix)
  void ResetStereoViewMatrices()
  int GetAllCamerasCount()
  int GetAllCamerasImpl(Camera[] cam)
  int get_allCamerasCount()
  Camera[] get_allCameras()
  int GetAllCameras(Camera[] cameras)
  bool RenderToCubemapImpl(Texture tex, int faceMask)
  bool RenderToCubemap(Cubemap cubemap, int faceMask)
  bool RenderToCubemap(Cubemap cubemap)
  bool RenderToCubemap(RenderTexture cubemap, int faceMask)
  bool RenderToCubemap(RenderTexture cubemap)
  int GetFilterMode()
  SceneViewFilterMode get_sceneViewFilterMode()
  bool RenderToCubemapEyeImpl(RenderTexture cubemap, int faceMask, MonoOrStereoscopicEye stereoEye)
  bool RenderToCubemap(RenderTexture cubemap, int faceMask, MonoOrStereoscopicEye stereoEye)
  void Render()
  void RenderWithShader(Shader shader, string replacementTag)
  void RenderDontRestore()
  void SubmitRenderRequests(List`1<RenderRequest> renderRequests)
  void SubmitRenderRequestsInternal(object requests)
  void SetupCurrent(Camera cur)
  void CopyFrom(Camera other)
  int get_commandBufferCount()
  void RemoveCommandBuffers(CameraEvent evt)
  void RemoveAllCommandBuffers()
  void AddCommandBufferImpl(CameraEvent evt, CommandBuffer buffer)
  void AddCommandBufferAsyncImpl(CameraEvent evt, CommandBuffer buffer, ComputeQueueType queueType)
  void RemoveCommandBufferImpl(CameraEvent evt, CommandBuffer buffer)
  void AddCommandBuffer(CameraEvent evt, CommandBuffer buffer)
  void AddCommandBufferAsync(CameraEvent evt, CommandBuffer buffer, ComputeQueueType queueType)
  void RemoveCommandBuffer(CameraEvent evt, CommandBuffer buffer)
  CommandBuffer[] GetCommandBuffers(CameraEvent evt)
  void FireOnPreCull(Camera cam)
  void FireOnPreRender(Camera cam)
  void FireOnPostRender(Camera cam)
  void OnlyUsedForTesting1()
  void OnlyUsedForTesting2()
  bool TryGetCullingParameters(ScriptableCullingParameters& cullingParameters)
  bool TryGetCullingParameters(bool stereoAware, ScriptableCullingParameters& cullingParameters)
  bool GetCullingParameters_Internal(Camera camera, bool stereoAware, ScriptableCullingParameters& cullingParameters, int managedCullingParametersSize)
  void get_transparencySortAxis_Injected(Vector3& ret)
  void set_transparencySortAxis_Injected(Vector3& value)
  void get_velocity_Injected(Vector3& ret)
  void get_cullingMatrix_Injected(Matrix4x4& ret)
  void set_cullingMatrix_Injected(Matrix4x4& value)
  void get_backgroundColor_Injected(Color& ret)
  void set_backgroundColor_Injected(Color& value)
  void get_sensorSize_Injected(Vector2& ret)
  void set_sensorSize_Injected(Vector2& value)
  void get_lensShift_Injected(Vector2& ret)
  void set_lensShift_Injected(Vector2& value)
  void GetGateFittedLensShift_Injected(Vector2& ret)
  void GetLocalSpaceAim_Injected(Vector3& ret)
  void get_rect_Injected(Rect& ret)
  void set_rect_Injected(Rect& value)
  void get_pixelRect_Injected(Rect& ret)
  void set_pixelRect_Injected(Rect& value)
  void SetTargetBuffersImpl_Injected(RenderBuffer& color, RenderBuffer& depth)
  void SetTargetBuffersMRTImpl_Injected(RenderBuffer[] color, RenderBuffer& depth)
  void get_cameraToWorldMatrix_Injected(Matrix4x4& ret)
  void get_worldToCameraMatrix_Injected(Matrix4x4& ret)
  void set_worldToCameraMatrix_Injected(Matrix4x4& value)
  void get_projectionMatrix_Injected(Matrix4x4& ret)
  void set_projectionMatrix_Injected(Matrix4x4& value)
  void get_nonJitteredProjectionMatrix_Injected(Matrix4x4& ret)
  void set_nonJitteredProjectionMatrix_Injected(Matrix4x4& value)
  void get_previousViewProjectionMatrix_Injected(Matrix4x4& ret)
  void CalculateObliqueMatrix_Injected(Vector4& clipPlane, Matrix4x4& ret)
  void WorldToScreenPoint_Injected(Vector3& position, MonoOrStereoscopicEye eye, Vector3& ret)
  void WorldToViewportPoint_Injected(Vector3& position, MonoOrStereoscopicEye eye, Vector3& ret)
  void ViewportToWorldPoint_Injected(Vector3& position, MonoOrStereoscopicEye eye, Vector3& ret)
  void ScreenToWorldPoint_Injected(Vector3& position, MonoOrStereoscopicEye eye, Vector3& ret)
  void ScreenToViewportPoint_Injected(Vector3& position, Vector3& ret)
  void ViewportToScreenPoint_Injected(Vector3& position, Vector3& ret)
  void GetFrustumPlaneSizeAt_Injected(float distance, Vector2& ret)
  void ViewportPointToRay_Injected(Vector2& pos, MonoOrStereoscopicEye eye, Ray& ret)
  void ScreenPointToRay_Injected(Vector2& pos, MonoOrStereoscopicEye eye, Ray& ret)
  void CalculateFrustumCornersInternal_Injected(Rect& viewport, float z, MonoOrStereoscopicEye eye, Vector3[] outCorners)
  void CalculateProjectionMatrixFromPhysicalPropertiesInternal_Injected(Matrix4x4& output, float focalLength, Vector2& sensorSize, Vector2& lensShift, float nearClip, float farClip, float gateAspect, GateFitMode gateFitMode)
  void get_scene_Injected(Scene& ret)
  void set_scene_Injected(Scene& value)
  void GetStereoNonJitteredProjectionMatrix_Injected(StereoscopicEye eye, Matrix4x4& ret)
  void GetStereoViewMatrix_Injected(StereoscopicEye eye, Matrix4x4& ret)
  void GetStereoProjectionMatrix_Injected(StereoscopicEye eye, Matrix4x4& ret)
  void SetStereoProjectionMatrix_Injected(StereoscopicEye eye, Matrix4x4& matrix)
  void SetStereoViewMatrix_Injected(StereoscopicEye eye, Matrix4x4& matrix)
--------------------------------------------------
Класс: UnityEngine.BoundingSphere
Наследуется от: ValueType
Поля:
  Vector3 position
  float radius
Свойства:
Методы:
  void .ctor(Vector3 pos, float rad)
  void .ctor(Vector4 packedSphere)
--------------------------------------------------
Класс: UnityEngine.CullingQueryOptions
Наследуется от: Enum
Поля:
  int value__
  CullingQueryOptions Normal
  CullingQueryOptions IgnoreVisibility
  CullingQueryOptions IgnoreDistance
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CullingGroupEvent
Наследуется от: ValueType
Поля:
  int m_Index
  byte m_PrevState
  byte m_ThisState
  byte kIsVisibleMask
  byte kDistanceMask
Свойства:
  int index
  bool isVisible
  bool wasVisible
  bool hasBecomeVisible
  bool hasBecomeInvisible
  int currentDistance
  int previousDistance
Методы:
  int get_index()
  bool get_isVisible()
  bool get_wasVisible()
  bool get_hasBecomeVisible()
  bool get_hasBecomeInvisible()
  int get_currentDistance()
  int get_previousDistance()
--------------------------------------------------
Класс: UnityEngine.CullingGroup
Наследуется от: object
Поля:
  IntPtr m_Ptr
  StateChanged m_OnStateChanged
Свойства:
  StateChanged onStateChanged
  bool enabled
  Camera targetCamera
Методы:
  void .ctor()
  void Finalize()
  void DisposeInternal()
  void Dispose()
  StateChanged get_onStateChanged()
  void set_onStateChanged(StateChanged value)
  bool get_enabled()
  void set_enabled(bool value)
  Camera get_targetCamera()
  void set_targetCamera(Camera value)
  void SetBoundingSpheres(BoundingSphere[] array)
  void SetBoundingSphereCount(int count)
  void EraseSwapBack(int index)
  void EraseSwapBack(int index, T[] myArray, Int32& size)
  int QueryIndices(bool visible, Int32[] result, int firstIndex)
  int QueryIndices(int distanceIndex, Int32[] result, int firstIndex)
  int QueryIndices(bool visible, int distanceIndex, Int32[] result, int firstIndex)
  int QueryIndices(bool visible, int distanceIndex, CullingQueryOptions options, Int32[] result, int firstIndex)
  bool IsVisible(int index)
  int GetDistance(int index)
  void SetBoundingDistances(Single[] distances)
  void SetDistanceReferencePoint_InternalVector3(Vector3 point)
  void SetDistanceReferencePoint_InternalTransform(Transform transform)
  void SetDistanceReferencePoint(Vector3 point)
  void SetDistanceReferencePoint(Transform transform)
  void SendEvents(CullingGroup cullingGroup, IntPtr eventsPtr, int count)
  IntPtr Init(object scripting)
  void FinalizerFailure()
  void SetDistanceReferencePoint_InternalVector3_Injected(Vector3& point)
--------------------------------------------------
Класс: UnityEngine.FlareLayer
Наследуется от: Behaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ReflectionProbe
Наследуется от: Behaviour
Поля:
  Action`2<ReflectionProbe, ReflectionProbeEvent> reflectionProbeChanged
  Action`1<Cubemap> defaultReflectionSet
  Action`1<Texture> defaultReflectionTexture
Свойства:
  ReflectionProbeType type
  Vector3 size
  Vector3 center
  float nearClipPlane
  float farClipPlane
  float intensity
  Bounds bounds
  bool hdr
  bool renderDynamicObjects
  float shadowDistance
  int resolution
  int cullingMask
  ReflectionProbeClearFlags clearFlags
  Color backgroundColor
  float blendDistance
  bool boxProjection
  ReflectionProbeMode mode
  int importance
  ReflectionProbeRefreshMode refreshMode
  ReflectionProbeTimeSlicingMode timeSlicingMode
  Texture bakedTexture
  Texture customBakedTexture
  RenderTexture realtimeTexture
  Texture texture
  Vector4 textureHDRDecodeValues
  int minBakedCubemapResolution
  int maxBakedCubemapResolution
  Vector4 defaultTextureHDRDecodeValues
  Texture defaultTexture
Методы:
  ReflectionProbeType get_type()
  void set_type(ReflectionProbeType value)
  Vector3 get_size()
  void set_size(Vector3 value)
  Vector3 get_center()
  void set_center(Vector3 value)
  float get_nearClipPlane()
  void set_nearClipPlane(float value)
  float get_farClipPlane()
  void set_farClipPlane(float value)
  float get_intensity()
  void set_intensity(float value)
  Bounds get_bounds()
  bool get_hdr()
  void set_hdr(bool value)
  bool get_renderDynamicObjects()
  void set_renderDynamicObjects(bool value)
  float get_shadowDistance()
  void set_shadowDistance(float value)
  int get_resolution()
  void set_resolution(int value)
  int get_cullingMask()
  void set_cullingMask(int value)
  ReflectionProbeClearFlags get_clearFlags()
  void set_clearFlags(ReflectionProbeClearFlags value)
  Color get_backgroundColor()
  void set_backgroundColor(Color value)
  float get_blendDistance()
  void set_blendDistance(float value)
  bool get_boxProjection()
  void set_boxProjection(bool value)
  ReflectionProbeMode get_mode()
  void set_mode(ReflectionProbeMode value)
  int get_importance()
  void set_importance(int value)
  ReflectionProbeRefreshMode get_refreshMode()
  void set_refreshMode(ReflectionProbeRefreshMode value)
  ReflectionProbeTimeSlicingMode get_timeSlicingMode()
  void set_timeSlicingMode(ReflectionProbeTimeSlicingMode value)
  Texture get_bakedTexture()
  void set_bakedTexture(Texture value)
  Texture get_customBakedTexture()
  void set_customBakedTexture(Texture value)
  RenderTexture get_realtimeTexture()
  void set_realtimeTexture(RenderTexture value)
  Texture get_texture()
  Vector4 get_textureHDRDecodeValues()
  void Reset()
  int RenderProbe()
  int RenderProbe(RenderTexture targetTexture)
  bool IsFinishedRendering(int renderId)
  int ScheduleRender(ReflectionProbeTimeSlicingMode timeSlicingMode, RenderTexture targetTexture)
  bool BlendCubemap(Texture src, Texture dst, float blend, RenderTexture target)
  void UpdateCachedState()
  int get_minBakedCubemapResolution()
  int get_maxBakedCubemapResolution()
  Vector4 get_defaultTextureHDRDecodeValues()
  Texture get_defaultTexture()
  void add_reflectionProbeChanged(Action`2<ReflectionProbe, ReflectionProbeEvent> value)
  void remove_reflectionProbeChanged(Action`2<ReflectionProbe, ReflectionProbeEvent> value)
  void add_defaultReflectionSet(Action`1<Cubemap> value)
  void remove_defaultReflectionSet(Action`1<Cubemap> value)
  void add_defaultReflectionTexture(Action`1<Texture> value)
  void remove_defaultReflectionTexture(Action`1<Texture> value)
  void CallReflectionProbeEvent(ReflectionProbe probe, ReflectionProbeEvent probeEvent)
  void CallSetDefaultReflection(Texture defaultReflectionCubemap)
  void .ctor()
  void get_size_Injected(Vector3& ret)
  void set_size_Injected(Vector3& value)
  void get_center_Injected(Vector3& ret)
  void set_center_Injected(Vector3& value)
  void get_bounds_Injected(Bounds& ret)
  void get_backgroundColor_Injected(Color& ret)
  void set_backgroundColor_Injected(Color& value)
  void get_textureHDRDecodeValues_Injected(Vector4& ret)
  void get_defaultTextureHDRDecodeValues_Injected(Vector4& ret)
--------------------------------------------------
Класс: UnityEngine.CrashReport
Наследуется от: object
Поля:
  List`1<CrashReport> internalReports
  object reportsLock
  string id
  DateTime time
  string text
Свойства:
  CrashReport[] reports
  CrashReport lastReport
Методы:
  int Compare(CrashReport c1, CrashReport c2)
  void PopulateReports()
  CrashReport[] get_reports()
  CrashReport get_lastReport()
  void RemoveAll()
  void .ctor(string id, DateTime time, string text)
  void Remove()
  String[] GetReports()
  string GetReportData(string id, Double& secondsSinceUnixEpoch)
  bool RemoveReport(string id)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.DebugLogHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  void Internal_Log(LogType level, LogOption options, string msg, Object obj)
  void Internal_LogException(Exception ex, Object obj)
  void LogFormat(LogType logType, Object context, string format, Object[] args)
  void LogFormat(LogType logType, LogOption logOptions, Object context, string format, Object[] args)
  void LogException(Exception exception, Object context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Debug
Наследуется от: object
Поля:
  ILogger s_DefaultLogger
  ILogger s_Logger
Свойства:
  ILogger unityLogger
  bool developerConsoleVisible
  bool isDebugBuild
  DiagnosticSwitch[] diagnosticSwitches
  ILogger logger
Методы:
  ILogger get_unityLogger()
  void DrawLine(Vector3 start, Vector3 end, Color color, float duration)
  void DrawLine(Vector3 start, Vector3 end, Color color)
  void DrawLine(Vector3 start, Vector3 end)
  void DrawLine(Vector3 start, Vector3 end, Color color, float duration, bool depthTest)
  void DrawRay(Vector3 start, Vector3 dir, Color color, float duration)
  void DrawRay(Vector3 start, Vector3 dir, Color color)
  void DrawRay(Vector3 start, Vector3 dir)
  void DrawRay(Vector3 start, Vector3 dir, Color color, float duration, bool depthTest)
  void Break()
  void DebugBreak()
  int ExtractStackTraceNoAlloc(Byte* buffer, int bufferMax, string projectFolder)
  void Log(object message)
  void Log(object message, Object context)
  void LogFormat(string format, Object[] args)
  void LogFormat(Object context, string format, Object[] args)
  void LogFormat(LogType logType, LogOption logOptions, Object context, string format, Object[] args)
  void LogError(object message)
  void LogError(object message, Object context)
  void LogErrorFormat(string format, Object[] args)
  void LogErrorFormat(Object context, string format, Object[] args)
  void ClearDeveloperConsole()
  bool get_developerConsoleVisible()
  void set_developerConsoleVisible(bool value)
  void LogException(Exception exception)
  void LogException(Exception exception, Object context)
  void LogWarning(object message)
  void LogWarning(object message, Object context)
  void LogWarningFormat(string format, Object[] args)
  void LogWarningFormat(Object context, string format, Object[] args)
  void Assert(bool condition)
  void Assert(bool condition, Object context)
  void Assert(bool condition, object message)
  void Assert(bool condition, string message)
  void Assert(bool condition, object message, Object context)
  void Assert(bool condition, string message, Object context)
  void AssertFormat(bool condition, string format, Object[] args)
  void AssertFormat(bool condition, Object context, string format, Object[] args)
  void LogAssertion(object message)
  void LogAssertion(object message, Object context)
  void LogAssertionFormat(string format, Object[] args)
  void LogAssertionFormat(Object context, string format, Object[] args)
  bool get_isDebugBuild()
  void OpenConsoleFile()
  DiagnosticSwitch[] get_diagnosticSwitches()
  DiagnosticSwitch GetDiagnosticSwitch(string name)
  bool CallOverridenDebugHandler(Exception exception, Object obj)
  bool IsLoggingEnabled()
  void Assert(bool condition, string format, Object[] args)
  ILogger get_logger()
  void .ctor()
  void .cctor()
  void DrawLine_Injected(Vector3& start, Vector3& end, Color& color, float duration, bool depthTest)
--------------------------------------------------
Класс: UnityEngine.DiagnosticSwitch
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  string name
  string description
  string owningModule
  Flags flags
  object value
  object defaultValue
  object minValue
  object maxValue
  object persistentValue
  EnumInfo enumInfo
  bool isSetToDefault
  bool needsRestart
Методы:
  void .ctor()
  string get_name()
  string get_description()
  string get_owningModule()
  Flags get_flags()
  object get_value()
  void set_value(object value)
  object get_defaultValue()
  object get_minValue()
  object get_maxValue()
  object get_persistentValue()
  void set_persistentValue(object value)
  EnumInfo get_enumInfo()
  object GetScriptingValue()
  object GetScriptingPersistentValue()
  void SetScriptingValue(object value, bool setPersistent)
  bool get_isSetToDefault()
  bool get_needsRestart()
--------------------------------------------------
Класс: UnityEngine.ExposedPropertyResolver
Наследуется от: ValueType
Поля:
  IntPtr table
Свойства:
Методы:
  Object ResolveReferenceInternal(IntPtr ptr, PropertyName name, Boolean& isValid)
  Object ResolveReferenceBindingsInternal(IntPtr ptr, PropertyName name, Boolean& isValid)
  Object ResolveReferenceBindingsInternal_Injected(IntPtr ptr, PropertyName& name, Boolean& isValid)
--------------------------------------------------
Класс: UnityEngine.ExposedReference`1
Наследуется от: ValueType
Поля:
  PropertyName exposedName
  Object defaultValue
Свойства:
Методы:
  T Resolve(IExposedPropertyTable resolver)
--------------------------------------------------
Класс: UnityEngine.IExposedPropertyTable
Поля:
Свойства:
Методы:
  void SetReferenceValue(PropertyName id, Object value)
  Object GetReferenceValue(PropertyName id, Boolean& idValid)
  void ClearReferenceValue(PropertyName id)
--------------------------------------------------
Класс: UnityEngine.Bounds
Наследуется от: ValueType
Поля:
  Vector3 m_Center
  Vector3 m_Extents
Свойства:
  Vector3 center
  Vector3 size
  Vector3 extents
  Vector3 min
  Vector3 max
Методы:
  void .ctor(Vector3 center, Vector3 size)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Bounds other)
  Vector3 get_center()
  void set_center(Vector3 value)
  Vector3 get_size()
  void set_size(Vector3 value)
  Vector3 get_extents()
  void set_extents(Vector3 value)
  Vector3 get_min()
  void set_min(Vector3 value)
  Vector3 get_max()
  void set_max(Vector3 value)
  bool op_Equality(Bounds lhs, Bounds rhs)
  bool op_Inequality(Bounds lhs, Bounds rhs)
  void SetMinMax(Vector3 min, Vector3 max)
  void Encapsulate(Vector3 point)
  void Encapsulate(Bounds bounds)
  void Expand(float amount)
  void Expand(Vector3 amount)
  bool Intersects(Bounds bounds)
  bool IntersectRay(Ray ray)
  bool IntersectRay(Ray ray, Single& distance)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  bool Contains(Vector3 point)
  float SqrDistance(Vector3 point)
  bool IntersectRayAABB(Ray ray, Bounds bounds, Single& dist)
  Vector3 ClosestPoint(Vector3 point)
  bool Contains_Injected(Bounds& _unity_self, Vector3& point)
  float SqrDistance_Injected(Bounds& _unity_self, Vector3& point)
  bool IntersectRayAABB_Injected(Ray& ray, Bounds& bounds, Single& dist)
  void ClosestPoint_Injected(Bounds& _unity_self, Vector3& point, Vector3& ret)
--------------------------------------------------
Класс: UnityEngine.BoundsInt
Наследуется от: ValueType
Поля:
  Vector3Int m_Position
  Vector3Int m_Size
Свойства:
  int x
  int y
  int z
  Vector3 center
  Vector3Int min
  Vector3Int max
  int xMin
  int yMin
  int zMin
  int xMax
  int yMax
  int zMax
  Vector3Int position
  Vector3Int size
  PositionEnumerator allPositionsWithin
Методы:
  int get_x()
  void set_x(int value)
  int get_y()
  void set_y(int value)
  int get_z()
  void set_z(int value)
  Vector3 get_center()
  Vector3Int get_min()
  void set_min(Vector3Int value)
  Vector3Int get_max()
  void set_max(Vector3Int value)
  int get_xMin()
  void set_xMin(int value)
  int get_yMin()
  void set_yMin(int value)
  int get_zMin()
  void set_zMin(int value)
  int get_xMax()
  void set_xMax(int value)
  int get_yMax()
  void set_yMax(int value)
  int get_zMax()
  void set_zMax(int value)
  Vector3Int get_position()
  void set_position(Vector3Int value)
  Vector3Int get_size()
  void set_size(Vector3Int value)
  void .ctor(int xMin, int yMin, int zMin, int sizeX, int sizeY, int sizeZ)
  void .ctor(Vector3Int position, Vector3Int size)
  void SetMinMax(Vector3Int minPosition, Vector3Int maxPosition)
  void ClampToBounds(BoundsInt bounds)
  bool Contains(Vector3Int position)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  bool op_Equality(BoundsInt lhs, BoundsInt rhs)
  bool op_Inequality(BoundsInt lhs, BoundsInt rhs)
  bool Equals(object other)
  bool Equals(BoundsInt other)
  int GetHashCode()
  PositionEnumerator get_allPositionsWithin()
--------------------------------------------------
Класс: UnityEngine.GeometryUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  Plane[] CalculateFrustumPlanes(Camera camera)
  Plane[] CalculateFrustumPlanes(Matrix4x4 worldToProjectionMatrix)
  void CalculateFrustumPlanes(Camera camera, Plane[] planes)
  void CalculateFrustumPlanes(Matrix4x4 worldToProjectionMatrix, Plane[] planes)
  Bounds CalculateBounds(Vector3[] positions, Matrix4x4 transform)
  bool TryCreatePlaneFromPolygon(Vector3[] vertices, Plane& plane)
  bool TestPlanesAABB(Plane[] planes, Bounds bounds)
  void Internal_ExtractPlanes(Plane[] planes, Matrix4x4 worldToProjectionMatrix)
  Bounds Internal_CalculateBounds(Vector3[] positions, Matrix4x4 transform)
  void .ctor()
  bool TestPlanesAABB_Injected(Plane[] planes, Bounds& bounds)
  void Internal_ExtractPlanes_Injected(Plane[] planes, Matrix4x4& worldToProjectionMatrix)
  void Internal_CalculateBounds_Injected(Vector3[] positions, Matrix4x4& transform, Bounds& ret)
--------------------------------------------------
Класс: UnityEngine.Plane
Наследуется от: ValueType
Поля:
  int size
  Vector3 m_Normal
  float m_Distance
Свойства:
  Vector3 normal
  float distance
  Plane flipped
Методы:
  Vector3 get_normal()
  void set_normal(Vector3 value)
  float get_distance()
  void set_distance(float value)
  void .ctor(Vector3 inNormal, Vector3 inPoint)
  void .ctor(Vector3 inNormal, float d)
  void .ctor(Vector3 a, Vector3 b, Vector3 c)
  void SetNormalAndPosition(Vector3 inNormal, Vector3 inPoint)
  void Set3Points(Vector3 a, Vector3 b, Vector3 c)
  void Flip()
  Plane get_flipped()
  void Translate(Vector3 translation)
  Plane Translate(Plane plane, Vector3 translation)
  Vector3 ClosestPointOnPlane(Vector3 point)
  float GetDistanceToPoint(Vector3 point)
  bool GetSide(Vector3 point)
  bool SameSide(Vector3 inPt0, Vector3 inPt1)
  bool Raycast(Ray ray, Single& enter)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: UnityEngine.Ray
Наследуется от: ValueType
Поля:
  Vector3 m_Origin
  Vector3 m_Direction
Свойства:
  Vector3 origin
  Vector3 direction
Методы:
  void .ctor(Vector3 origin, Vector3 direction)
  Vector3 get_origin()
  void set_origin(Vector3 value)
  Vector3 get_direction()
  void set_direction(Vector3 value)
  Vector3 GetPoint(float distance)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: UnityEngine.Ray2D
Наследуется от: ValueType
Поля:
  Vector2 m_Origin
  Vector2 m_Direction
Свойства:
  Vector2 origin
  Vector2 direction
Методы:
  void .ctor(Vector2 origin, Vector2 direction)
  Vector2 get_origin()
  void set_origin(Vector2 value)
  Vector2 get_direction()
  void set_direction(Vector2 value)
  Vector2 GetPoint(float distance)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: UnityEngine.Rect
Наследуется от: ValueType
Поля:
  float m_XMin
  float m_YMin
  float m_Width
  float m_Height
Свойства:
  Rect zero
  float x
  float y
  Vector2 position
  Vector2 center
  Vector2 min
  Vector2 max
  float width
  float height
  Vector2 size
  float xMin
  float yMin
  float xMax
  float yMax
  float left
  float right
  float top
  float bottom
Методы:
  void .ctor(float x, float y, float width, float height)
  void .ctor(Vector2 position, Vector2 size)
  void .ctor(Rect source)
  Rect get_zero()
  Rect MinMaxRect(float xmin, float ymin, float xmax, float ymax)
  void Set(float x, float y, float width, float height)
  float get_x()
  void set_x(float value)
  float get_y()
  void set_y(float value)
  Vector2 get_position()
  void set_position(Vector2 value)
  Vector2 get_center()
  void set_center(Vector2 value)
  Vector2 get_min()
  void set_min(Vector2 value)
  Vector2 get_max()
  void set_max(Vector2 value)
  float get_width()
  void set_width(float value)
  float get_height()
  void set_height(float value)
  Vector2 get_size()
  void set_size(Vector2 value)
  float get_xMin()
  void set_xMin(float value)
  float get_yMin()
  void set_yMin(float value)
  float get_xMax()
  void set_xMax(float value)
  float get_yMax()
  void set_yMax(float value)
  bool Contains(Vector2 point)
  bool Contains(Vector3 point)
  bool Contains(Vector3 point, bool allowInverse)
  Rect OrderMinMax(Rect rect)
  bool Overlaps(Rect other)
  bool Overlaps(Rect other, bool allowInverse)
  Vector2 NormalizedToPoint(Rect rectangle, Vector2 normalizedRectCoordinates)
  Vector2 PointToNormalized(Rect rectangle, Vector2 point)
  bool op_Inequality(Rect lhs, Rect rhs)
  bool op_Equality(Rect lhs, Rect rhs)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Rect other)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  float get_left()
  float get_right()
  float get_top()
  float get_bottom()
--------------------------------------------------
Класс: UnityEngine.RectInt
Наследуется от: ValueType
Поля:
  int m_XMin
  int m_YMin
  int m_Width
  int m_Height
Свойства:
  int x
  int y
  Vector2 center
  Vector2Int min
  Vector2Int max
  int width
  int height
  int xMin
  int yMin
  int xMax
  int yMax
  Vector2Int position
  Vector2Int size
  PositionEnumerator allPositionsWithin
Методы:
  int get_x()
  void set_x(int value)
  int get_y()
  void set_y(int value)
  Vector2 get_center()
  Vector2Int get_min()
  void set_min(Vector2Int value)
  Vector2Int get_max()
  void set_max(Vector2Int value)
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
  int get_xMin()
  void set_xMin(int value)
  int get_yMin()
  void set_yMin(int value)
  int get_xMax()
  void set_xMax(int value)
  int get_yMax()
  void set_yMax(int value)
  Vector2Int get_position()
  void set_position(Vector2Int value)
  Vector2Int get_size()
  void set_size(Vector2Int value)
  void SetMinMax(Vector2Int minPosition, Vector2Int maxPosition)
  void .ctor(int xMin, int yMin, int width, int height)
  void .ctor(Vector2Int position, Vector2Int size)
  void ClampToBounds(RectInt bounds)
  bool Contains(Vector2Int position)
  bool Overlaps(RectInt other)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  bool Equals(RectInt other)
  PositionEnumerator get_allPositionsWithin()
--------------------------------------------------
Класс: UnityEngine.RectOffset
Наследуется от: object
Поля:
  IntPtr m_Ptr
  object m_SourceStyle
Свойства:
  int left
  int right
  int top
  int bottom
  int horizontal
  int vertical
Методы:
  void .ctor()
  void .ctor(object sourceStyle, IntPtr source)
  void Finalize()
  void .ctor(int left, int right, int top, int bottom)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  void Destroy()
  IntPtr InternalCreate()
  void InternalDestroy(IntPtr ptr)
  int get_left()
  void set_left(int value)
  int get_right()
  void set_right(int value)
  int get_top()
  void set_top(int value)
  int get_bottom()
  void set_bottom(int value)
  int get_horizontal()
  int get_vertical()
  Rect Add(Rect rect)
  Rect Remove(Rect rect)
  void Add_Injected(Rect& rect, Rect& ret)
  void Remove_Injected(Rect& rect, Rect& ret)
--------------------------------------------------
Класс: UnityEngine.DynamicGI
Наследуется от: object
Поля:
Свойства:
  float indirectScale
  float updateThreshold
  int materialUpdateTimeSlice
  bool synchronousMode
  bool isConverged
  int scheduledMaterialUpdatesCount
  bool asyncMaterialUpdates
Методы:
  float get_indirectScale()
  void set_indirectScale(float value)
  float get_updateThreshold()
  void set_updateThreshold(float value)
  int get_materialUpdateTimeSlice()
  void set_materialUpdateTimeSlice(int value)
  void SetEmissive(Renderer renderer, Color color)
  void SetEnvironmentData(Single[] input)
  bool get_synchronousMode()
  void set_synchronousMode(bool value)
  bool get_isConverged()
  int get_scheduledMaterialUpdatesCount()
  bool get_asyncMaterialUpdates()
  void set_asyncMaterialUpdates(bool value)
  void UpdateEnvironment()
  void UpdateMaterials(Renderer renderer)
  void UpdateMaterials(Object renderer)
  void UpdateMaterials(Object renderer, int x, int y, int width, int height)
  void .ctor()
  void SetEmissive_Injected(Renderer renderer, Color& color)
--------------------------------------------------
Класс: UnityEngine.LightingSettings
Наследуется от: Object
Поля:
Свойства:
  bool bakedGI
  bool realtimeGI
  bool realtimeEnvironmentLighting
Методы:
  void LightingSettingsDontStripMe()
  void .ctor()
  void Internal_Create(LightingSettings self)
  bool get_bakedGI()
  void set_bakedGI(bool value)
  bool get_realtimeGI()
  void set_realtimeGI(bool value)
  bool get_realtimeEnvironmentLighting()
  void set_realtimeEnvironmentLighting(bool value)
--------------------------------------------------
Класс: UnityEngine.Gizmos
Наследуется от: object
Поля:
Свойства:
  Color color
  Matrix4x4 matrix
  Texture exposure
  float probeSize
Методы:
  void DrawLine(Vector3 from, Vector3 to)
  void DrawWireSphere(Vector3 center, float radius)
  void DrawSphere(Vector3 center, float radius)
  void DrawWireCube(Vector3 center, Vector3 size)
  void DrawCube(Vector3 center, Vector3 size)
  void DrawMesh(Mesh mesh, int submeshIndex, Vector3 position, Quaternion rotation, Vector3 scale)
  void DrawWireMesh(Mesh mesh, int submeshIndex, Vector3 position, Quaternion rotation, Vector3 scale)
  void DrawIcon(Vector3 center, string name, bool allowScaling)
  void DrawIcon(Vector3 center, string name, bool allowScaling, Color tint)
  void DrawGUITexture(Rect screenRect, Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Material mat)
  Color get_color()
  void set_color(Color value)
  Matrix4x4 get_matrix()
  void set_matrix(Matrix4x4 value)
  Texture get_exposure()
  void set_exposure(Texture value)
  float get_probeSize()
  void DrawFrustum(Vector3 center, float fov, float maxRange, float minRange, float aspect)
  void DrawRay(Ray r)
  void DrawRay(Vector3 from, Vector3 direction)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation)
  void DrawMesh(Mesh mesh, Vector3 position)
  void DrawMesh(Mesh mesh)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Vector3 scale)
  void DrawMesh(Mesh mesh, int submeshIndex, Vector3 position, Quaternion rotation)
  void DrawMesh(Mesh mesh, int submeshIndex, Vector3 position)
  void DrawMesh(Mesh mesh, int submeshIndex)
  void DrawWireMesh(Mesh mesh, Vector3 position, Quaternion rotation)
  void DrawWireMesh(Mesh mesh, Vector3 position)
  void DrawWireMesh(Mesh mesh)
  void DrawWireMesh(Mesh mesh, Vector3 position, Quaternion rotation, Vector3 scale)
  void DrawWireMesh(Mesh mesh, int submeshIndex, Vector3 position, Quaternion rotation)
  void DrawWireMesh(Mesh mesh, int submeshIndex, Vector3 position)
  void DrawWireMesh(Mesh mesh, int submeshIndex)
  void DrawIcon(Vector3 center, string name)
  void DrawGUITexture(Rect screenRect, Texture texture)
  void DrawGUITexture(Rect screenRect, Texture texture, Material mat)
  void DrawGUITexture(Rect screenRect, Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder)
  void .ctor()
  void DrawLine_Injected(Vector3& from, Vector3& to)
  void DrawWireSphere_Injected(Vector3& center, float radius)
  void DrawSphere_Injected(Vector3& center, float radius)
  void DrawWireCube_Injected(Vector3& center, Vector3& size)
  void DrawCube_Injected(Vector3& center, Vector3& size)
  void DrawMesh_Injected(Mesh mesh, int submeshIndex, Vector3& position, Quaternion& rotation, Vector3& scale)
  void DrawWireMesh_Injected(Mesh mesh, int submeshIndex, Vector3& position, Quaternion& rotation, Vector3& scale)
  void DrawIcon_Injected(Vector3& center, string name, bool allowScaling, Color& tint)
  void DrawGUITexture_Injected(Rect& screenRect, Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Material mat)
  void get_color_Injected(Color& ret)
  void set_color_Injected(Color& value)
  void get_matrix_Injected(Matrix4x4& ret)
  void set_matrix_Injected(Matrix4x4& value)
  void DrawFrustum_Injected(Vector3& center, float fov, float maxRange, float minRange, float aspect)
--------------------------------------------------
Класс: UnityEngine.BeforeRenderOrderAttribute
Наследуется от: Attribute
Поля:
  int <order>k__BackingField
Свойства:
  int order
Методы:
  int get_order()
  void set_order(int value)
  void .ctor(int order)
--------------------------------------------------
Класс: UnityEngine.BeforeRenderHelper
Наследуется от: object
Поля:
  List`1<OrderBlock> s_OrderBlocks
Свойства:
Методы:
  int GetUpdateOrder(UnityAction callback)
  void RegisterCallback(UnityAction callback)
  void UnregisterCallback(UnityAction callback)
  void Invoke()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.BillboardAsset
Наследуется от: Object
Поля:
Свойства:
  float width
  float height
  float bottom
  int imageCount
  int vertexCount
  int indexCount
  Material material
Методы:
  void .ctor()
  void Internal_Create(BillboardAsset obj)
  float get_width()
  void set_width(float value)
  float get_height()
  void set_height(float value)
  float get_bottom()
  void set_bottom(float value)
  int get_imageCount()
  int get_vertexCount()
  int get_indexCount()
  Material get_material()
  void set_material(Material value)
  void GetImageTexCoords(List`1<Vector4> imageTexCoords)
  Vector4[] GetImageTexCoords()
  void GetImageTexCoordsInternal(object list)
  void SetImageTexCoords(List`1<Vector4> imageTexCoords)
  void SetImageTexCoords(Vector4[] imageTexCoords)
  void SetImageTexCoordsInternalList(object list)
  void GetVertices(List`1<Vector2> vertices)
  Vector2[] GetVertices()
  void GetVerticesInternal(object list)
  void SetVertices(List`1<Vector2> vertices)
  void SetVertices(Vector2[] vertices)
  void SetVerticesInternalList(object list)
  void GetIndices(List`1<ushort> indices)
  UInt16[] GetIndices()
  void GetIndicesInternal(object list)
  void SetIndices(List`1<ushort> indices)
  void SetIndices(UInt16[] indices)
  void SetIndicesInternalList(object list)
  void MakeMaterialProperties(MaterialPropertyBlock properties, Camera camera)
--------------------------------------------------
Класс: UnityEngine.BillboardRenderer
Наследуется от: Renderer
Поля:
Свойства:
  BillboardAsset billboard
Методы:
  BillboardAsset get_billboard()
  void set_billboard(BillboardAsset value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.CustomRenderTextureManager
Наследуется от: object
Поля:
  Action`1<CustomRenderTexture> textureLoaded
  Action`1<CustomRenderTexture> textureUnloaded
  Action`2<CustomRenderTexture, int> updateTriggered
  Action`1<CustomRenderTexture> initializeTriggered
Свойства:
Методы:
  void add_textureLoaded(Action`1<CustomRenderTexture> value)
  void remove_textureLoaded(Action`1<CustomRenderTexture> value)
  void InvokeOnTextureLoaded_Internal(CustomRenderTexture source)
  void add_textureUnloaded(Action`1<CustomRenderTexture> value)
  void remove_textureUnloaded(Action`1<CustomRenderTexture> value)
  void InvokeOnTextureUnloaded_Internal(CustomRenderTexture source)
  void GetAllCustomRenderTextures(List`1<CustomRenderTexture> currentCustomRenderTextures)
  void add_updateTriggered(Action`2<CustomRenderTexture, int> value)
  void remove_updateTriggered(Action`2<CustomRenderTexture, int> value)
  void InvokeTriggerUpdate(CustomRenderTexture crt, int updateCount)
  void add_initializeTriggered(Action`1<CustomRenderTexture> value)
  void remove_initializeTriggered(Action`1<CustomRenderTexture> value)
  void InvokeTriggerInitialize(CustomRenderTexture crt)
--------------------------------------------------
Класс: UnityEngine.Display
Наследуется от: object
Поля:
  IntPtr nativeDisplay
  Display[] displays
  Display _mainDisplay
  int m_ActiveEditorGameViewTarget
  DisplaysUpdatedDelegate onDisplaysUpdated
Свойства:
  int renderingWidth
  int renderingHeight
  int systemWidth
  int systemHeight
  RenderBuffer colorBuffer
  RenderBuffer depthBuffer
  bool active
  bool requiresBlitToBackbuffer
  bool requiresSrgbBlitToBackbuffer
  Display main
  int activeEditorGameViewTarget
Методы:
  void .ctor()
  void .ctor(IntPtr nativeDisplay)
  int get_renderingWidth()
  int get_renderingHeight()
  int get_systemWidth()
  int get_systemHeight()
  RenderBuffer get_colorBuffer()
  RenderBuffer get_depthBuffer()
  bool get_active()
  bool get_requiresBlitToBackbuffer()
  bool get_requiresSrgbBlitToBackbuffer()
  void Activate()
  void Activate(int width, int height, int refreshRate)
  void SetParams(int width, int height, int x, int y)
  void SetRenderingResolution(int w, int h)
  bool MultiDisplayLicense()
  Vector3 RelativeMouseAt(Vector3 inputMouseCoordinates)
  Display get_main()
  int get_activeEditorGameViewTarget()
  void set_activeEditorGameViewTarget(int value)
  void RecreateDisplayList(IntPtr[] nativeDisplay)
  void FireDisplaysUpdated()
  void add_onDisplaysUpdated(DisplaysUpdatedDelegate value)
  void remove_onDisplaysUpdated(DisplaysUpdatedDelegate value)
  void GetSystemExtImpl(IntPtr nativeDisplay, Int32& w, Int32& h)
  void GetRenderingExtImpl(IntPtr nativeDisplay, Int32& w, Int32& h)
  void GetRenderingBuffersImpl(IntPtr nativeDisplay, RenderBuffer& color, RenderBuffer& depth)
  void SetRenderingResolutionImpl(IntPtr nativeDisplay, int w, int h)
  void ActivateDisplayImpl(IntPtr nativeDisplay, int width, int height, int refreshRate)
  void SetParamsImpl(IntPtr nativeDisplay, int width, int height, int x, int y)
  int RelativeMouseAtImpl(int x, int y, Int32& rx, Int32& ry)
  bool GetActiveImpl(IntPtr nativeDisplay)
  bool RequiresBlitToBackbufferImpl(IntPtr nativeDisplay)
  bool RequiresSrgbBlitToBackbufferImpl(IntPtr nativeDisplay)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.EnabledOrientation
Наследуется от: Enum
Поля:
  int value__
  EnabledOrientation kAutorotateToPortrait
  EnabledOrientation kAutorotateToPortraitUpsideDown
  EnabledOrientation kAutorotateToLandscapeLeft
  EnabledOrientation kAutorotateToLandscapeRight
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.FullScreenMode
Наследуется от: Enum
Поля:
  int value__
  FullScreenMode ExclusiveFullScreen
  FullScreenMode FullScreenWindow
  FullScreenMode MaximizedWindow
  FullScreenMode Windowed
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RefreshRate
Наследуется от: ValueType
Поля:
  UInt32 numerator
  UInt32 denominator
Свойства:
  double value
Методы:
  double get_value()
  bool Equals(RefreshRate other)
--------------------------------------------------
Класс: UnityEngine.DisplayInfo
Наследуется от: ValueType
Поля:
  ulong handle
  int width
  int height
  RefreshRate refreshRate
  RectInt workArea
  string name
Свойства:
Методы:
  bool Equals(DisplayInfo other)
--------------------------------------------------
Класс: UnityEngine.SleepTimeout
Наследуется от: object
Поля:
  int NeverSleep
  int SystemSetting
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Screen
Наследуется от: object
Поля:
Свойства:
  int width
  int height
  float dpi
  ScreenOrientation orientation
  int sleepTimeout
  bool autorotateToPortrait
  bool autorotateToPortraitUpsideDown
  bool autorotateToLandscapeLeft
  bool autorotateToLandscapeRight
  Resolution currentResolution
  bool fullScreen
  FullScreenMode fullScreenMode
  Rect safeArea
  Rect[] cutouts
  Vector2Int mainWindowPosition
  DisplayInfo mainWindowDisplayInfo
  Resolution[] resolutions
  float brightness
  bool lockCursor
Методы:
  int get_width()
  int get_height()
  float get_dpi()
  void RequestOrientation(ScreenOrientation orient)
  ScreenOrientation GetScreenOrientation()
  ScreenOrientation get_orientation()
  void set_orientation(ScreenOrientation value)
  int get_sleepTimeout()
  void set_sleepTimeout(int value)
  bool IsOrientationEnabled(EnabledOrientation orient)
  void SetOrientationEnabled(EnabledOrientation orient, bool enabled)
  bool get_autorotateToPortrait()
  void set_autorotateToPortrait(bool value)
  bool get_autorotateToPortraitUpsideDown()
  void set_autorotateToPortraitUpsideDown(bool value)
  bool get_autorotateToLandscapeLeft()
  void set_autorotateToLandscapeLeft(bool value)
  bool get_autorotateToLandscapeRight()
  void set_autorotateToLandscapeRight(bool value)
  Resolution get_currentResolution()
  bool get_fullScreen()
  void set_fullScreen(bool value)
  FullScreenMode get_fullScreenMode()
  void set_fullScreenMode(FullScreenMode value)
  Rect get_safeArea()
  Rect[] get_cutouts()
  void SetResolution(int width, int height, FullScreenMode fullscreenMode, int preferredRefreshRate)
  void SetResolution(int width, int height, FullScreenMode fullscreenMode)
  void SetResolution(int width, int height, bool fullscreen, int preferredRefreshRate)
  void SetResolution(int width, int height, bool fullscreen)
  Vector2Int get_mainWindowPosition()
  DisplayInfo get_mainWindowDisplayInfo()
  void GetDisplayLayout(List`1<DisplayInfo> displayLayout)
  AsyncOperation MoveMainWindowTo(DisplayInfo& display, Vector2Int position)
  Vector2Int GetMainWindowPosition()
  DisplayInfo GetMainWindowDisplayInfo()
  void GetDisplayLayoutImpl(List`1<DisplayInfo> displayLayout)
  AsyncOperation MoveMainWindowImpl(DisplayInfo& display, Vector2Int position)
  Resolution[] get_resolutions()
  float get_brightness()
  void set_brightness(float value)
  bool get_lockCursor()
  void set_lockCursor(bool value)
  void .ctor()
  void get_currentResolution_Injected(Resolution& ret)
  void get_safeArea_Injected(Rect& ret)
  void GetMainWindowPosition_Injected(Vector2Int& ret)
  void GetMainWindowDisplayInfo_Injected(DisplayInfo& ret)
  AsyncOperation MoveMainWindowImpl_Injected(DisplayInfo& display, Vector2Int& position)
--------------------------------------------------
Класс: UnityEngine.RenderBuffer
Наследуется от: ValueType
Поля:
  int m_RenderTextureInstanceID
  IntPtr m_BufferPtr
Свойства:
  RenderBufferLoadAction loadAction
  RenderBufferStoreAction storeAction
Методы:
  void SetLoadAction(RenderBufferLoadAction action)
  void SetStoreAction(RenderBufferStoreAction action)
  RenderBufferLoadAction GetLoadAction()
  RenderBufferStoreAction GetStoreAction()
  IntPtr GetNativeRenderBufferPtr()
  RenderBufferLoadAction get_loadAction()
  void set_loadAction(RenderBufferLoadAction value)
  RenderBufferStoreAction get_storeAction()
  void set_storeAction(RenderBufferStoreAction value)
  void SetLoadAction_Injected(RenderBuffer& _unity_self, RenderBufferLoadAction action)
  void SetStoreAction_Injected(RenderBuffer& _unity_self, RenderBufferStoreAction action)
  RenderBufferLoadAction GetLoadAction_Injected(RenderBuffer& _unity_self)
  RenderBufferStoreAction GetStoreAction_Injected(RenderBuffer& _unity_self)
  IntPtr GetNativeRenderBufferPtr_Injected(RenderBuffer& _unity_self)
--------------------------------------------------
Класс: UnityEngine.ComputeBufferMode
Наследуется от: Enum
Поля:
  int value__
  ComputeBufferMode Immutable
  ComputeBufferMode Dynamic
  ComputeBufferMode Circular
  ComputeBufferMode StreamOut
  ComputeBufferMode SubUpdates
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Graphics
Наследуется от: object
Поля:
  int kMaxDrawMeshInstanceCount
  Dictionary`2<int, RenderInstancedDataLayout> s_RenderInstancedDataLayouts
Свойства:
  ColorGamut activeColorGamut
  GraphicsTier activeTier
  bool preserveFramebufferAlpha
  OpenGLESVersion minOpenGLESVersion
  RenderBuffer activeColorBuffer
  RenderBuffer activeDepthBuffer
Методы:
  int Internal_GetMaxDrawMeshInstanceCount()
  ColorGamut GetActiveColorGamut()
  ColorGamut get_activeColorGamut()
  GraphicsTier get_activeTier()
  void set_activeTier(GraphicsTier value)
  bool GetPreserveFramebufferAlpha()
  bool get_preserveFramebufferAlpha()
  OpenGLESVersion GetMinOpenGLESVersion()
  OpenGLESVersion get_minOpenGLESVersion()
  RenderBuffer GetActiveColorBuffer()
  RenderBuffer GetActiveDepthBuffer()
  void Internal_SetNullRT()
  void Internal_SetRTSimple(RenderBuffer color, RenderBuffer depth, int mip, CubemapFace face, int depthSlice)
  void Internal_SetMRTSimple(RenderBuffer[] color, RenderBuffer depth, int mip, CubemapFace face, int depthSlice)
  void Internal_SetMRTFullSetup(RenderBuffer[] color, RenderBuffer depth, int mip, CubemapFace face, int depthSlice, RenderBufferLoadAction[] colorLA, RenderBufferStoreAction[] colorSA, RenderBufferLoadAction depthLA, RenderBufferStoreAction depthSA)
  void Internal_SetRandomWriteTargetRT(int index, RenderTexture uav)
  void Internal_SetRandomWriteTargetBuffer(int index, ComputeBuffer uav, bool preserveCounterValue)
  void Internal_SetRandomWriteTargetGraphicsBuffer(int index, GraphicsBuffer uav, bool preserveCounterValue)
  void ClearRandomWriteTargets()
  void CopyTexture_Full(Texture src, Texture dst)
  void CopyTexture_Slice_AllMips(Texture src, int srcElement, Texture dst, int dstElement)
  void CopyTexture_Slice(Texture src, int srcElement, int srcMip, Texture dst, int dstElement, int dstMip)
  void CopyTexture_Region(Texture src, int srcElement, int srcMip, int srcX, int srcY, int srcWidth, int srcHeight, Texture dst, int dstElement, int dstMip, int dstX, int dstY)
  bool ConvertTexture_Full(Texture src, Texture dst)
  bool ConvertTexture_Slice(Texture src, int srcElement, Texture dst, int dstElement)
  void CopyBufferImpl(GraphicsBuffer source, GraphicsBuffer dest)
  void Internal_DrawMeshNow1(Mesh mesh, int subsetIndex, Vector3 position, Quaternion rotation)
  void Internal_DrawMeshNow2(Mesh mesh, int subsetIndex, Matrix4x4 matrix)
  void Internal_DrawTexture(Internal_DrawTextureArguments& args)
  void Internal_RenderMesh(RenderParams rparams, Mesh mesh, int submeshIndex, Matrix4x4 objectToWorld, Matrix4x4* prevObjectToWorld)
  void Internal_RenderMeshInstanced(RenderParams rparams, Mesh mesh, int submeshIndex, IntPtr instanceData, RenderInstancedDataLayout layout, UInt32 instanceCount)
  void Internal_RenderMeshIndirect(RenderParams rparams, Mesh mesh, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void Internal_RenderMeshPrimitives(RenderParams rparams, Mesh mesh, int submeshIndex, int instanceCount)
  void Internal_RenderPrimitives(RenderParams rparams, MeshTopology topology, int vertexCount, int instanceCount)
  void Internal_RenderPrimitivesIndexed(RenderParams rparams, MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int startIndex, int instanceCount)
  void Internal_RenderPrimitivesIndirect(RenderParams rparams, MeshTopology topology, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void Internal_RenderPrimitivesIndexedIndirect(RenderParams rparams, MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void Internal_DrawMesh(Mesh mesh, int submeshIndex, Matrix4x4 matrix, Material material, int layer, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstancedProcedural(Mesh mesh, int submeshIndex, Material material, Bounds bounds, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, Bounds bounds, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstancedIndirectGraphicsBuffer(Mesh mesh, int submeshIndex, Material material, Bounds bounds, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawProceduralNow(MeshTopology topology, int vertexCount, int instanceCount)
  void Internal_DrawProceduralIndexedNow(MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int instanceCount)
  void Internal_DrawProceduralIndirectNow(MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset)
  void Internal_DrawProceduralIndexedIndirectNow(MeshTopology topology, GraphicsBuffer indexBuffer, ComputeBuffer bufferWithArgs, int argsOffset)
  void Internal_DrawProceduralIndirectNowGraphicsBuffer(MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset)
  void Internal_DrawProceduralIndexedIndirectNowGraphicsBuffer(MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer bufferWithArgs, int argsOffset)
  void Internal_DrawProcedural(Material material, Bounds bounds, MeshTopology topology, int vertexCount, int instanceCount, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndexed(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int instanceCount, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndirect(Material material, Bounds bounds, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndirectGraphicsBuffer(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndexedIndirect(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer indexBuffer, ComputeBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndexedIndirectGraphicsBuffer(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_BlitMaterial5(Texture source, RenderTexture dest, Material mat, int pass, bool setRT)
  void Internal_BlitMaterial6(Texture source, RenderTexture dest, Material mat, int pass, bool setRT, int destDepthSlice)
  void Internal_BlitMultiTap4(Texture source, RenderTexture dest, Material mat, Vector2[] offsets)
  void Internal_BlitMultiTap5(Texture source, RenderTexture dest, Material mat, Vector2[] offsets, int destDepthSlice)
  void Blit2(Texture source, RenderTexture dest)
  void Blit3(Texture source, RenderTexture dest, int sourceDepthSlice, int destDepthSlice)
  void Blit4(Texture source, RenderTexture dest, Vector2 scale, Vector2 offset)
  void Blit5(Texture source, RenderTexture dest, Vector2 scale, Vector2 offset, int sourceDepthSlice, int destDepthSlice)
  IntPtr CreateGPUFenceImpl(GraphicsFenceType fenceType, SynchronisationStageFlags stage)
  void WaitOnGPUFenceImpl(IntPtr fencePtr, SynchronisationStageFlags stage)
  void ExecuteCommandBuffer(CommandBuffer buffer)
  void ExecuteCommandBufferAsync(CommandBuffer buffer, ComputeQueueType queueType)
  void CheckLoadActionValid(RenderBufferLoadAction load, string bufferType)
  void CheckStoreActionValid(RenderBufferStoreAction store, string bufferType)
  void SetRenderTargetImpl(RenderTargetSetup setup)
  void SetRenderTargetImpl(RenderBuffer colorBuffer, RenderBuffer depthBuffer, int mipLevel, CubemapFace face, int depthSlice)
  void SetRenderTargetImpl(RenderTexture rt, int mipLevel, CubemapFace face, int depthSlice)
  void SetRenderTargetImpl(RenderBuffer[] colorBuffers, RenderBuffer depthBuffer, int mipLevel, CubemapFace face, int depthSlice)
  void SetRenderTarget(RenderTexture rt, int mipLevel, CubemapFace face, int depthSlice)
  void SetRenderTarget(RenderBuffer colorBuffer, RenderBuffer depthBuffer, int mipLevel, CubemapFace face, int depthSlice)
  void SetRenderTarget(RenderBuffer[] colorBuffers, RenderBuffer depthBuffer)
  void SetRenderTarget(RenderTargetSetup setup)
  RenderBuffer get_activeColorBuffer()
  RenderBuffer get_activeDepthBuffer()
  void SetRandomWriteTarget(int index, RenderTexture uav)
  void SetRandomWriteTarget(int index, ComputeBuffer uav, bool preserveCounterValue)
  void SetRandomWriteTarget(int index, GraphicsBuffer uav, bool preserveCounterValue)
  void CopyTexture(Texture src, Texture dst)
  void CopyTexture(Texture src, int srcElement, Texture dst, int dstElement)
  void CopyTexture(Texture src, int srcElement, int srcMip, Texture dst, int dstElement, int dstMip)
  void CopyTexture(Texture src, int srcElement, int srcMip, int srcX, int srcY, int srcWidth, int srcHeight, Texture dst, int dstElement, int dstMip, int dstX, int dstY)
  bool ConvertTexture(Texture src, Texture dst)
  bool ConvertTexture(Texture src, int srcElement, Texture dst, int dstElement)
  GraphicsFence CreateAsyncGraphicsFence(SynchronisationStage stage)
  GraphicsFence CreateAsyncGraphicsFence()
  GraphicsFence CreateGraphicsFence(GraphicsFenceType fenceType, SynchronisationStageFlags stage)
  void WaitOnAsyncGraphicsFence(GraphicsFence fence)
  void WaitOnAsyncGraphicsFence(GraphicsFence fence, SynchronisationStage stage)
  void ValidateCopyBuffer(GraphicsBuffer source, GraphicsBuffer dest)
  void CopyBuffer(GraphicsBuffer source, GraphicsBuffer dest)
  void DrawTextureImpl(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Color color, Material mat, int pass)
  void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Color color, Material mat, int pass)
  void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Material mat, int pass)
  void DrawTexture(Rect screenRect, Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Material mat, int pass)
  void DrawTexture(Rect screenRect, Texture texture, Material mat, int pass)
  void RenderMesh(RenderParams& rparams, Mesh mesh, int submeshIndex, Matrix4x4 objectToWorld, Nullable`1<Matrix4x4> prevObjectToWorld)
  RenderInstancedDataLayout GetCachedRenderInstancedDataLayout(Type type)
  void RenderMeshInstanced(RenderParams& rparams, Mesh mesh, int submeshIndex, T[] instanceData, int instanceCount, int startInstance)
  void RenderMeshInstanced(RenderParams& rparams, Mesh mesh, int submeshIndex, List`1<T> instanceData, int instanceCount, int startInstance)
  void RenderMeshInstanced(RenderParams rparams, Mesh mesh, int submeshIndex, NativeArray`1<T> instanceData, int instanceCount, int startInstance)
  void RenderMeshIndirect(RenderParams& rparams, Mesh mesh, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void RenderMeshPrimitives(RenderParams& rparams, Mesh mesh, int submeshIndex, int instanceCount)
  void RenderPrimitives(RenderParams& rparams, MeshTopology topology, int vertexCount, int instanceCount)
  void RenderPrimitivesIndexed(RenderParams& rparams, MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int startIndex, int instanceCount)
  void RenderPrimitivesIndirect(RenderParams& rparams, MeshTopology topology, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void RenderPrimitivesIndexedIndirect(RenderParams& rparams, MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void DrawMeshNow(Mesh mesh, Vector3 position, Quaternion rotation, int materialIndex)
  void DrawMeshNow(Mesh mesh, Matrix4x4 matrix, int materialIndex)
  void DrawMeshNow(Mesh mesh, Vector3 position, Quaternion rotation)
  void DrawMeshNow(Mesh mesh, Matrix4x4 matrix)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, bool castShadows, bool receiveShadows, bool useLightProbes)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor, bool useLightProbes)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, bool castShadows, bool receiveShadows, bool useLightProbes)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void DrawMeshInstancedProcedural(Mesh mesh, int submeshIndex, Material material, Bounds bounds, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, Bounds bounds, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, Bounds bounds, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void DrawProceduralNow(MeshTopology topology, int vertexCount, int instanceCount)
  void DrawProceduralNow(MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int instanceCount)
  void DrawProceduralIndirectNow(MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirectNow(MeshTopology topology, GraphicsBuffer indexBuffer, ComputeBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirectNow(MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirectNow(MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer bufferWithArgs, int argsOffset)
  void DrawProcedural(Material material, Bounds bounds, MeshTopology topology, int vertexCount, int instanceCount, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawProcedural(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int instanceCount, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawProceduralIndirect(Material material, Bounds bounds, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawProceduralIndirect(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawProceduralIndirect(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer indexBuffer, ComputeBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawProceduralIndirect(Material material, Bounds bounds, MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Blit(Texture source, RenderTexture dest)
  void Blit(Texture source, RenderTexture dest, int sourceDepthSlice, int destDepthSlice)
  void Blit(Texture source, RenderTexture dest, Vector2 scale, Vector2 offset)
  void Blit(Texture source, RenderTexture dest, Vector2 scale, Vector2 offset, int sourceDepthSlice, int destDepthSlice)
  void Blit(Texture source, RenderTexture dest, Material mat, int pass)
  void Blit(Texture source, RenderTexture dest, Material mat, int pass, int destDepthSlice)
  void Blit(Texture source, RenderTexture dest, Material mat)
  void Blit(Texture source, Material mat, int pass)
  void Blit(Texture source, Material mat, int pass, int destDepthSlice)
  void Blit(Texture source, Material mat)
  void BlitMultiTap(Texture source, RenderTexture dest, Material mat, Vector2[] offsets)
  void BlitMultiTap(Texture source, RenderTexture dest, Material mat, int destDepthSlice, Vector2[] offsets)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, bool castShadows)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, bool castShadows, bool receiveShadows)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows)
  void DrawMesh(Mesh mesh, Vector3 position, Quaternion rotation, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, bool castShadows)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, bool castShadows, bool receiveShadows)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor, bool useLightProbes)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int layer, Camera camera, int submeshIndex, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor, LightProbeUsage lightProbeUsage)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties, ShadowCastingMode castShadows)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, List`1<Matrix4x4> matrices, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, Bounds bounds, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, Bounds bounds, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage)
  void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Color color, Material mat)
  void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Color color)
  void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Material mat)
  void DrawTexture(Rect screenRect, Texture texture, Rect sourceRect, int leftBorder, int rightBorder, int topBorder, int bottomBorder)
  void DrawTexture(Rect screenRect, Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder, Material mat)
  void DrawTexture(Rect screenRect, Texture texture, int leftBorder, int rightBorder, int topBorder, int bottomBorder)
  void DrawTexture(Rect screenRect, Texture texture, Material mat)
  void DrawTexture(Rect screenRect, Texture texture)
  void SetRenderTarget(RenderTexture rt)
  void SetRenderTarget(RenderTexture rt, int mipLevel)
  void SetRenderTarget(RenderTexture rt, int mipLevel, CubemapFace face)
  void SetRenderTarget(RenderBuffer colorBuffer, RenderBuffer depthBuffer)
  void SetRenderTarget(RenderBuffer colorBuffer, RenderBuffer depthBuffer, int mipLevel)
  void SetRenderTarget(RenderBuffer colorBuffer, RenderBuffer depthBuffer, int mipLevel, CubemapFace face)
  void SetRandomWriteTarget(int index, ComputeBuffer uav)
  void SetRandomWriteTarget(int index, GraphicsBuffer uav)
  void .ctor()
  void .cctor()
  void GetActiveColorBuffer_Injected(RenderBuffer& ret)
  void GetActiveDepthBuffer_Injected(RenderBuffer& ret)
  void Internal_SetRTSimple_Injected(RenderBuffer& color, RenderBuffer& depth, int mip, CubemapFace face, int depthSlice)
  void Internal_SetMRTSimple_Injected(RenderBuffer[] color, RenderBuffer& depth, int mip, CubemapFace face, int depthSlice)
  void Internal_SetMRTFullSetup_Injected(RenderBuffer[] color, RenderBuffer& depth, int mip, CubemapFace face, int depthSlice, RenderBufferLoadAction[] colorLA, RenderBufferStoreAction[] colorSA, RenderBufferLoadAction depthLA, RenderBufferStoreAction depthSA)
  void Internal_DrawMeshNow1_Injected(Mesh mesh, int subsetIndex, Vector3& position, Quaternion& rotation)
  void Internal_DrawMeshNow2_Injected(Mesh mesh, int subsetIndex, Matrix4x4& matrix)
  void Internal_RenderMesh_Injected(RenderParams& rparams, Mesh mesh, int submeshIndex, Matrix4x4& objectToWorld, Matrix4x4* prevObjectToWorld)
  void Internal_RenderMeshInstanced_Injected(RenderParams& rparams, Mesh mesh, int submeshIndex, IntPtr instanceData, RenderInstancedDataLayout& layout, UInt32 instanceCount)
  void Internal_RenderMeshIndirect_Injected(RenderParams& rparams, Mesh mesh, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void Internal_RenderMeshPrimitives_Injected(RenderParams& rparams, Mesh mesh, int submeshIndex, int instanceCount)
  void Internal_RenderPrimitives_Injected(RenderParams& rparams, MeshTopology topology, int vertexCount, int instanceCount)
  void Internal_RenderPrimitivesIndexed_Injected(RenderParams& rparams, MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int startIndex, int instanceCount)
  void Internal_RenderPrimitivesIndirect_Injected(RenderParams& rparams, MeshTopology topology, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void Internal_RenderPrimitivesIndexedIndirect_Injected(RenderParams& rparams, MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer commandBuffer, int commandCount, int startCommand)
  void Internal_DrawMesh_Injected(Mesh mesh, int submeshIndex, Matrix4x4& matrix, Material material, int layer, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, Transform probeAnchor, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstancedProcedural_Injected(Mesh mesh, int submeshIndex, Material material, Bounds& bounds, int count, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstancedIndirect_Injected(Mesh mesh, int submeshIndex, Material material, Bounds& bounds, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawMeshInstancedIndirectGraphicsBuffer_Injected(Mesh mesh, int submeshIndex, Material material, Bounds& bounds, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer, Camera camera, LightProbeUsage lightProbeUsage, LightProbeProxyVolume lightProbeProxyVolume)
  void Internal_DrawProcedural_Injected(Material material, Bounds& bounds, MeshTopology topology, int vertexCount, int instanceCount, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndexed_Injected(Material material, Bounds& bounds, MeshTopology topology, GraphicsBuffer indexBuffer, int indexCount, int instanceCount, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndirect_Injected(Material material, Bounds& bounds, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndirectGraphicsBuffer_Injected(Material material, Bounds& bounds, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndexedIndirect_Injected(Material material, Bounds& bounds, MeshTopology topology, GraphicsBuffer indexBuffer, ComputeBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Internal_DrawProceduralIndexedIndirectGraphicsBuffer_Injected(Material material, Bounds& bounds, MeshTopology topology, GraphicsBuffer indexBuffer, GraphicsBuffer bufferWithArgs, int argsOffset, Camera camera, MaterialPropertyBlock properties, ShadowCastingMode castShadows, bool receiveShadows, int layer)
  void Blit4_Injected(Texture source, RenderTexture dest, Vector2& scale, Vector2& offset)
  void Blit5_Injected(Texture source, RenderTexture dest, Vector2& scale, Vector2& offset, int sourceDepthSlice, int destDepthSlice)
--------------------------------------------------
Класс: UnityEngine.GL
Наследуется от: object
Поля:
  int TRIANGLES
  int TRIANGLE_STRIP
  int QUADS
  int LINES
  int LINE_STRIP
Свойства:
  bool wireframe
  bool sRGBWrite
  bool invertCulling
  Matrix4x4 modelview
Методы:
  void Vertex3(float x, float y, float z)
  void Vertex(Vector3 v)
  void Vertices(Vector3* v, Vector3* coords, Vector4* colors, int length)
  void TexCoord3(float x, float y, float z)
  void TexCoord(Vector3 v)
  void TexCoord2(float x, float y)
  void MultiTexCoord3(int unit, float x, float y, float z)
  void MultiTexCoord(int unit, Vector3 v)
  void MultiTexCoord2(int unit, float x, float y)
  void ImmediateColor(float r, float g, float b, float a)
  void Color(Color c)
  bool get_wireframe()
  void set_wireframe(bool value)
  bool get_sRGBWrite()
  void set_sRGBWrite(bool value)
  bool get_invertCulling()
  void set_invertCulling(bool value)
  void Flush()
  void RenderTargetBarrier()
  Matrix4x4 GetWorldViewMatrix()
  void SetViewMatrix(Matrix4x4 m)
  Matrix4x4 get_modelview()
  void set_modelview(Matrix4x4 value)
  void MultMatrix(Matrix4x4 m)
  void IssuePluginEvent(int eventID)
  void SetRevertBackfacing(bool revertBackFaces)
  void PushMatrix()
  void PopMatrix()
  void LoadIdentity()
  void LoadOrtho()
  void LoadPixelMatrix()
  void LoadProjectionMatrix(Matrix4x4 mat)
  void InvalidateState()
  Matrix4x4 GetGPUProjectionMatrix(Matrix4x4 proj, bool renderIntoTexture)
  void GLLoadPixelMatrixScript(float left, float right, float bottom, float top)
  void LoadPixelMatrix(float left, float right, float bottom, float top)
  void GLIssuePluginEvent(IntPtr callback, int eventID)
  void IssuePluginEvent(IntPtr callback, int eventID)
  void Begin(int mode)
  void End()
  void GLClear(bool clearDepth, bool clearColor, Color backgroundColor, float depth)
  void Clear(bool clearDepth, bool clearColor, Color backgroundColor, float depth)
  void Clear(bool clearDepth, bool clearColor, Color backgroundColor)
  void Viewport(Rect pixelRect)
  void ClearWithSkybox(bool clearDepth, Camera camera)
  void .ctor()
  void GetWorldViewMatrix_Injected(Matrix4x4& ret)
  void SetViewMatrix_Injected(Matrix4x4& m)
  void MultMatrix_Injected(Matrix4x4& m)
  void LoadProjectionMatrix_Injected(Matrix4x4& mat)
  void GetGPUProjectionMatrix_Injected(Matrix4x4& proj, bool renderIntoTexture, Matrix4x4& ret)
  void GLClear_Injected(bool clearDepth, bool clearColor, Color& backgroundColor, float depth)
  void Viewport_Injected(Rect& pixelRect)
--------------------------------------------------
Класс: UnityEngine.ScalableBufferManager
Наследуется от: object
Поля:
Свойства:
  float widthScaleFactor
  float heightScaleFactor
Методы:
  float get_widthScaleFactor()
  float get_heightScaleFactor()
  void ResizeBuffers(float widthScale, float heightScale)
--------------------------------------------------
Класс: UnityEngine.FrameTiming
Наследуется от: ValueType
Поля:
  ulong cpuTimePresentCalled
  double cpuFrameTime
  ulong cpuTimeFrameComplete
  double gpuFrameTime
  float heightScale
  float widthScale
  UInt32 syncInterval
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.FrameTimingManager
Наследуется от: object
Поля:
Свойства:
Методы:
  void CaptureFrameTimings()
  UInt32 GetLatestTimings(UInt32 numFrames, FrameTiming[] timings)
  float GetVSyncsPerSecond()
  ulong GetGpuTimerFrequency()
  ulong GetCpuTimerFrequency()
--------------------------------------------------
Класс: UnityEngine.LightmapData
Наследуется от: object
Поля:
  Texture2D m_Light
  Texture2D m_Dir
  Texture2D m_ShadowMask
Свойства:
  Texture2D lightmapLight
  Texture2D lightmapColor
  Texture2D lightmapDir
  Texture2D shadowMask
Методы:
  Texture2D get_lightmapLight()
  void set_lightmapLight(Texture2D value)
  Texture2D get_lightmapColor()
  void set_lightmapColor(Texture2D value)
  Texture2D get_lightmapDir()
  void set_lightmapDir(Texture2D value)
  Texture2D get_shadowMask()
  void set_shadowMask(Texture2D value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LightmapSettings
Наследуется от: Object
Поля:
Свойства:
  LightmapData[] lightmaps
  LightmapsMode lightmapsMode
  LightProbes lightProbes
  LightmapsModeLegacy lightmapsModeLegacy
  ColorSpace bakedColorSpace
Методы:
  void .ctor()
  LightmapData[] get_lightmaps()
  void set_lightmaps(LightmapData[] value)
  LightmapsMode get_lightmapsMode()
  void set_lightmapsMode(LightmapsMode value)
  LightProbes get_lightProbes()
  void set_lightProbes(LightProbes value)
  void Reset()
  LightmapsModeLegacy get_lightmapsModeLegacy()
  void set_lightmapsModeLegacy(LightmapsModeLegacy value)
  ColorSpace get_bakedColorSpace()
  void set_bakedColorSpace(ColorSpace value)
--------------------------------------------------
Класс: UnityEngine.LightProbes
Наследуется от: Object
Поля:
  Action tetrahedralizationCompleted
  Action needsRetetrahedralization
Свойства:
  Vector3[] positions
  SphericalHarmonicsL2[] bakedProbes
  int count
  int cellCount
  Single[] coefficients
Методы:
  void .ctor()
  void add_tetrahedralizationCompleted(Action value)
  void remove_tetrahedralizationCompleted(Action value)
  void Internal_CallTetrahedralizationCompletedFunction()
  void add_needsRetetrahedralization(Action value)
  void remove_needsRetetrahedralization(Action value)
  void Internal_CallNeedsRetetrahedralizationFunction()
  void Tetrahedralize()
  void TetrahedralizeAsync()
  void GetInterpolatedProbe(Vector3 position, Renderer renderer, SphericalHarmonicsL2& probe)
  bool AreLightProbesAllowed(Renderer renderer)
  void CalculateInterpolatedLightAndOcclusionProbes(Vector3[] positions, SphericalHarmonicsL2[] lightProbes, Vector4[] occlusionProbes)
  void CalculateInterpolatedLightAndOcclusionProbes(List`1<Vector3> positions, List`1<SphericalHarmonicsL2> lightProbes, List`1<Vector4> occlusionProbes)
  void CalculateInterpolatedLightAndOcclusionProbes_Internal(Vector3[] positions, int positionsCount, SphericalHarmonicsL2[] lightProbes, Vector4[] occlusionProbes)
  Vector3[] get_positions()
  SphericalHarmonicsL2[] get_bakedProbes()
  void set_bakedProbes(SphericalHarmonicsL2[] value)
  int get_count()
  int get_cellCount()
  int GetCount()
  void GetInterpolatedLightProbe(Vector3 position, Renderer renderer, Single[] coefficients)
  Single[] get_coefficients()
  void set_coefficients(Single[] value)
  void GetInterpolatedProbe_Injected(Vector3& position, Renderer renderer, SphericalHarmonicsL2& probe)
--------------------------------------------------
Класс: UnityEngine.D3DHDRDisplayBitDepth
Наследуется от: Enum
Поля:
  int value__
  D3DHDRDisplayBitDepth D3DHDRDisplayBitDepth10
  D3DHDRDisplayBitDepth D3DHDRDisplayBitDepth16
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.HDROutputSettings
Наследуется от: object
Поля:
  int m_DisplayIndex
  HDROutputSettings[] displays
  HDROutputSettings _mainDisplay
Свойства:
  HDROutputSettings main
  bool active
  bool available
  bool automaticHDRTonemapping
  ColorGamut displayColorGamut
  RenderTextureFormat format
  GraphicsFormat graphicsFormat
  float paperWhiteNits
  int maxFullFrameToneMapLuminance
  int maxToneMapLuminance
  int minToneMapLuminance
  bool HDRModeChangeRequested
Методы:
  void .ctor()
  void .ctor(int displayIndex)
  HDROutputSettings get_main()
  bool get_active()
  bool get_available()
  bool get_automaticHDRTonemapping()
  void set_automaticHDRTonemapping(bool value)
  ColorGamut get_displayColorGamut()
  RenderTextureFormat get_format()
  GraphicsFormat get_graphicsFormat()
  float get_paperWhiteNits()
  void set_paperWhiteNits(float value)
  int get_maxFullFrameToneMapLuminance()
  int get_maxToneMapLuminance()
  int get_minToneMapLuminance()
  bool get_HDRModeChangeRequested()
  void RequestHDRModeChange(bool enabled)
  void SetPaperWhiteInNits(float paperWhite)
  bool GetActive(int displayIndex)
  bool GetAvailable(int displayIndex)
  bool GetAutomaticHDRTonemapping(int displayIndex)
  void SetAutomaticHDRTonemapping(int displayIndex, bool scripted)
  ColorGamut GetDisplayColorGamut(int displayIndex)
  GraphicsFormat GetGraphicsFormat(int displayIndex)
  float GetPaperWhiteNits(int displayIndex)
  void SetPaperWhiteNits(int displayIndex, float paperWhite)
  int GetMaxFullFrameToneMapLuminance(int displayIndex)
  int GetMaxToneMapLuminance(int displayIndex)
  int GetMinToneMapLuminance(int displayIndex)
  bool GetHDRModeChangeRequested(int displayIndex)
  void RequestHDRModeChangeInternal(int displayIndex, bool enabled)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Resolution
Наследуется от: ValueType
Поля:
  int m_Width
  int m_Height
  int m_RefreshRate
Свойства:
  int width
  int height
  int refreshRate
Методы:
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
  int get_refreshRate()
  void set_refreshRate(int value)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.RenderTargetSetup
Наследуется от: ValueType
Поля:
  RenderBuffer[] color
  RenderBuffer depth
  int mipLevel
  CubemapFace cubemapFace
  int depthSlice
  RenderBufferLoadAction[] colorLoad
  RenderBufferStoreAction[] colorStore
  RenderBufferLoadAction depthLoad
  RenderBufferStoreAction depthStore
Свойства:
Методы:
  void .ctor(RenderBuffer[] color, RenderBuffer depth, int mip, CubemapFace face, RenderBufferLoadAction[] colorLoad, RenderBufferStoreAction[] colorStore, RenderBufferLoadAction depthLoad, RenderBufferStoreAction depthStore)
  RenderBufferLoadAction[] LoadActions(RenderBuffer[] buf)
  RenderBufferStoreAction[] StoreActions(RenderBuffer[] buf)
  void .ctor(RenderBuffer color, RenderBuffer depth)
  void .ctor(RenderBuffer color, RenderBuffer depth, int mipLevel)
  void .ctor(RenderBuffer color, RenderBuffer depth, int mipLevel, CubemapFace face)
  void .ctor(RenderBuffer color, RenderBuffer depth, int mipLevel, CubemapFace face, int depthSlice)
  void .ctor(RenderBuffer[] color, RenderBuffer depth)
  void .ctor(RenderBuffer[] color, RenderBuffer depth, int mipLevel)
  void .ctor(RenderBuffer[] color, RenderBuffer depth, int mip, CubemapFace face)
--------------------------------------------------
Класс: UnityEngine.RenderParams
Наследуется от: ValueType
Поля:
  int <layer>k__BackingField
  UInt32 <renderingLayerMask>k__BackingField
  int <rendererPriority>k__BackingField
  Bounds <worldBounds>k__BackingField
  Camera <camera>k__BackingField
  MotionVectorGenerationMode <motionVectorMode>k__BackingField
  ReflectionProbeUsage <reflectionProbeUsage>k__BackingField
  Material <material>k__BackingField
  MaterialPropertyBlock <matProps>k__BackingField
  ShadowCastingMode <shadowCastingMode>k__BackingField
  bool <receiveShadows>k__BackingField
  LightProbeUsage <lightProbeUsage>k__BackingField
  LightProbeProxyVolume <lightProbeProxyVolume>k__BackingField
Свойства:
  int layer
  UInt32 renderingLayerMask
  int rendererPriority
  Bounds worldBounds
  Camera camera
  MotionVectorGenerationMode motionVectorMode
  ReflectionProbeUsage reflectionProbeUsage
  Material material
  MaterialPropertyBlock matProps
  ShadowCastingMode shadowCastingMode
  bool receiveShadows
  LightProbeUsage lightProbeUsage
  LightProbeProxyVolume lightProbeProxyVolume
Методы:
  void .ctor(Material mat)
  int get_layer()
  void set_layer(int value)
  UInt32 get_renderingLayerMask()
  void set_renderingLayerMask(UInt32 value)
  int get_rendererPriority()
  void set_rendererPriority(int value)
  Bounds get_worldBounds()
  void set_worldBounds(Bounds value)
  Camera get_camera()
  void set_camera(Camera value)
  MotionVectorGenerationMode get_motionVectorMode()
  void set_motionVectorMode(MotionVectorGenerationMode value)
  ReflectionProbeUsage get_reflectionProbeUsage()
  void set_reflectionProbeUsage(ReflectionProbeUsage value)
  Material get_material()
  void set_material(Material value)
  MaterialPropertyBlock get_matProps()
  void set_matProps(MaterialPropertyBlock value)
  ShadowCastingMode get_shadowCastingMode()
  void set_shadowCastingMode(ShadowCastingMode value)
  bool get_receiveShadows()
  void set_receiveShadows(bool value)
  LightProbeUsage get_lightProbeUsage()
  void set_lightProbeUsage(LightProbeUsage value)
  LightProbeProxyVolume get_lightProbeProxyVolume()
  void set_lightProbeProxyVolume(LightProbeProxyVolume value)
--------------------------------------------------
Класс: UnityEngine.RenderInstancedDataLayout
Наследуется от: ValueType
Поля:
  int <size>k__BackingField
  int <offsetObjectToWorld>k__BackingField
  int <offsetPrevObjectToWorld>k__BackingField
  int <offsetRenderingLayerMask>k__BackingField
Свойства:
  int size
  int offsetObjectToWorld
  int offsetPrevObjectToWorld
  int offsetRenderingLayerMask
Методы:
  void .ctor(Type t)
  int get_size()
  int get_offsetObjectToWorld()
  int get_offsetPrevObjectToWorld()
  int get_offsetRenderingLayerMask()
--------------------------------------------------
Класс: UnityEngine.Internal_DrawTextureArguments
Наследуется от: ValueType
Поля:
  Rect screenRect
  Rect sourceRect
  int leftBorder
  int rightBorder
  int topBorder
  int bottomBorder
  Color leftBorderColor
  Color rightBorderColor
  Color topBorderColor
  Color bottomBorderColor
  Color color
  Vector4 borderWidths
  Vector4 cornerRadiuses
  bool smoothCorners
  int pass
  Texture texture
  Material mat
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.QualitySettings
Наследуется от: Object
Поля:
Свойства:
  QualityLevel currentLevel
  int pixelLightCount
  ShadowQuality shadows
  ShadowProjection shadowProjection
  int shadowCascades
  float shadowDistance
  ShadowResolution shadowResolution
  ShadowmaskMode shadowmaskMode
  float shadowNearPlaneOffset
  float shadowCascade2Split
  Vector3 shadowCascade4Split
  float lodBias
  AnisotropicFiltering anisotropicFiltering
  int masterTextureLimit
  int maximumLODLevel
  int particleRaycastBudget
  bool softParticles
  bool softVegetation
  int vSyncCount
  int realtimeGICPUUsage
  int antiAliasing
  int asyncUploadTimeSlice
  int asyncUploadBufferSize
  bool asyncUploadPersistentBuffer
  bool realtimeReflectionProbes
  bool billboardsFaceCameraPosition
  float resolutionScalingFixedDPIFactor
  ScriptableObject INTERNAL_renderPipeline
  RenderPipelineAsset renderPipeline
  BlendWeights blendWeights
  SkinWeights skinWeights
  bool streamingMipmapsActive
  float streamingMipmapsMemoryBudget
  int streamingMipmapsRenderersPerFrame
  int streamingMipmapsMaxLevelReduction
  bool streamingMipmapsAddAllCameras
  int streamingMipmapsMaxFileIORequests
  int maxQueuedFrames
  String[] names
  ColorSpace desiredColorSpace
  ColorSpace activeColorSpace
Методы:
  void IncreaseLevel(bool applyExpensiveChanges)
  void DecreaseLevel(bool applyExpensiveChanges)
  void SetQualityLevel(int index)
  void IncreaseLevel()
  void DecreaseLevel()
  QualityLevel get_currentLevel()
  void set_currentLevel(QualityLevel value)
  void .ctor()
  int get_pixelLightCount()
  void set_pixelLightCount(int value)
  ShadowQuality get_shadows()
  void set_shadows(ShadowQuality value)
  ShadowProjection get_shadowProjection()
  void set_shadowProjection(ShadowProjection value)
  int get_shadowCascades()
  void set_shadowCascades(int value)
  float get_shadowDistance()
  void set_shadowDistance(float value)
  ShadowResolution get_shadowResolution()
  void set_shadowResolution(ShadowResolution value)
  ShadowmaskMode get_shadowmaskMode()
  void set_shadowmaskMode(ShadowmaskMode value)
  float get_shadowNearPlaneOffset()
  void set_shadowNearPlaneOffset(float value)
  float get_shadowCascade2Split()
  void set_shadowCascade2Split(float value)
  Vector3 get_shadowCascade4Split()
  void set_shadowCascade4Split(Vector3 value)
  float get_lodBias()
  void set_lodBias(float value)
  AnisotropicFiltering get_anisotropicFiltering()
  void set_anisotropicFiltering(AnisotropicFiltering value)
  int get_masterTextureLimit()
  void set_masterTextureLimit(int value)
  int get_maximumLODLevel()
  void set_maximumLODLevel(int value)
  int get_particleRaycastBudget()
  void set_particleRaycastBudget(int value)
  bool get_softParticles()
  void set_softParticles(bool value)
  bool get_softVegetation()
  void set_softVegetation(bool value)
  int get_vSyncCount()
  void set_vSyncCount(int value)
  int get_realtimeGICPUUsage()
  void set_realtimeGICPUUsage(int value)
  int get_antiAliasing()
  void set_antiAliasing(int value)
  int get_asyncUploadTimeSlice()
  void set_asyncUploadTimeSlice(int value)
  int get_asyncUploadBufferSize()
  void set_asyncUploadBufferSize(int value)
  bool get_asyncUploadPersistentBuffer()
  void set_asyncUploadPersistentBuffer(bool value)
  void SetLODSettings(float lodBias, int maximumLODLevel, bool setDirty)
  bool get_realtimeReflectionProbes()
  void set_realtimeReflectionProbes(bool value)
  bool get_billboardsFaceCameraPosition()
  void set_billboardsFaceCameraPosition(bool value)
  float get_resolutionScalingFixedDPIFactor()
  void set_resolutionScalingFixedDPIFactor(float value)
  ScriptableObject get_INTERNAL_renderPipeline()
  void set_INTERNAL_renderPipeline(ScriptableObject value)
  RenderPipelineAsset get_renderPipeline()
  void set_renderPipeline(RenderPipelineAsset value)
  ScriptableObject InternalGetRenderPipelineAssetAt(int index)
  RenderPipelineAsset GetRenderPipelineAssetAt(int index)
  BlendWeights get_blendWeights()
  void set_blendWeights(BlendWeights value)
  SkinWeights get_skinWeights()
  void set_skinWeights(SkinWeights value)
  bool get_streamingMipmapsActive()
  void set_streamingMipmapsActive(bool value)
  float get_streamingMipmapsMemoryBudget()
  void set_streamingMipmapsMemoryBudget(float value)
  int get_streamingMipmapsRenderersPerFrame()
  void set_streamingMipmapsRenderersPerFrame(int value)
  int get_streamingMipmapsMaxLevelReduction()
  void set_streamingMipmapsMaxLevelReduction(int value)
  bool get_streamingMipmapsAddAllCameras()
  void set_streamingMipmapsAddAllCameras(bool value)
  int get_streamingMipmapsMaxFileIORequests()
  void set_streamingMipmapsMaxFileIORequests(int value)
  int get_maxQueuedFrames()
  void set_maxQueuedFrames(int value)
  int GetQualityLevel()
  Object GetQualitySettings()
  void SetQualityLevel(int index, bool applyExpensiveChanges)
  String[] get_names()
  ColorSpace get_desiredColorSpace()
  ColorSpace get_activeColorSpace()
  void get_shadowCascade4Split_Injected(Vector3& ret)
  void set_shadowCascade4Split_Injected(Vector3& value)
--------------------------------------------------
Класс: UnityEngine.RendererExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void UpdateGIMaterials(Renderer renderer)
  void UpdateGIMaterialsForRenderer(Renderer renderer)
--------------------------------------------------
Класс: UnityEngine.ImageEffectTransformsToLDR
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ImageEffectAllowedInSceneView
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ImageEffectOpaque
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ImageEffectAfterScale
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ImageEffectUsesCommandBuffer
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LightmapsModeLegacy
Наследуется от: Enum
Поля:
  int value__
  LightmapsModeLegacy Single
  LightmapsModeLegacy Dual
  LightmapsModeLegacy Directional
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TrailRenderer
Наследуется от: Renderer
Поля:
Свойства:
  int numPositions
  float time
  float startWidth
  float endWidth
  float widthMultiplier
  bool autodestruct
  bool emitting
  int numCornerVertices
  int numCapVertices
  float minVertexDistance
  Color startColor
  Color endColor
  int positionCount
  float shadowBias
  bool generateLightingData
  LineTextureMode textureMode
  LineAlignment alignment
  AnimationCurve widthCurve
  Gradient colorGradient
Методы:
  int get_numPositions()
  float get_time()
  void set_time(float value)
  float get_startWidth()
  void set_startWidth(float value)
  float get_endWidth()
  void set_endWidth(float value)
  float get_widthMultiplier()
  void set_widthMultiplier(float value)
  bool get_autodestruct()
  void set_autodestruct(bool value)
  bool get_emitting()
  void set_emitting(bool value)
  int get_numCornerVertices()
  void set_numCornerVertices(int value)
  int get_numCapVertices()
  void set_numCapVertices(int value)
  float get_minVertexDistance()
  void set_minVertexDistance(float value)
  Color get_startColor()
  void set_startColor(Color value)
  Color get_endColor()
  void set_endColor(Color value)
  int get_positionCount()
  void SetPosition(int index, Vector3 position)
  Vector3 GetPosition(int index)
  float get_shadowBias()
  void set_shadowBias(float value)
  bool get_generateLightingData()
  void set_generateLightingData(bool value)
  LineTextureMode get_textureMode()
  void set_textureMode(LineTextureMode value)
  LineAlignment get_alignment()
  void set_alignment(LineAlignment value)
  void Clear()
  void BakeMesh(Mesh mesh, bool useTransform)
  void BakeMesh(Mesh mesh, Camera camera, bool useTransform)
  AnimationCurve get_widthCurve()
  void set_widthCurve(AnimationCurve value)
  Gradient get_colorGradient()
  void set_colorGradient(Gradient value)
  AnimationCurve GetWidthCurveCopy()
  void SetWidthCurve(AnimationCurve curve)
  Gradient GetColorGradientCopy()
  void SetColorGradient(Gradient curve)
  int GetPositions(Vector3[] positions)
  int GetVisiblePositions(Vector3[] positions)
  void SetPositions(Vector3[] positions)
  void AddPosition(Vector3 position)
  void AddPositions(Vector3[] positions)
  void SetPositions(NativeArray`1<Vector3> positions)
  void SetPositions(NativeSlice`1<Vector3> positions)
  int GetPositions(NativeArray`1<Vector3> positions)
  int GetPositions(NativeSlice`1<Vector3> positions)
  int GetVisiblePositions(NativeArray`1<Vector3> positions)
  int GetVisiblePositions(NativeSlice`1<Vector3> positions)
  void AddPositions(NativeArray`1<Vector3> positions)
  void AddPositions(NativeSlice`1<Vector3> positions)
  void SetPositionsWithNativeContainer(IntPtr positions, int count)
  int GetPositionsWithNativeContainer(IntPtr positions, int length)
  int GetVisiblePositionsWithNativeContainer(IntPtr positions, int length)
  void AddPositionsWithNativeContainer(IntPtr positions, int length)
  void .ctor()
  void get_startColor_Injected(Color& ret)
  void set_startColor_Injected(Color& value)
  void get_endColor_Injected(Color& ret)
  void set_endColor_Injected(Color& value)
  void SetPosition_Injected(int index, Vector3& position)
  void GetPosition_Injected(int index, Vector3& ret)
  void AddPosition_Injected(Vector3& position)
--------------------------------------------------
Класс: UnityEngine.LineRenderer
Наследуется от: Renderer
Поля:
Свойства:
  int numPositions
  float startWidth
  float endWidth
  float widthMultiplier
  int numCornerVertices
  int numCapVertices
  bool useWorldSpace
  bool loop
  Color startColor
  Color endColor
  int positionCount
  float shadowBias
  bool generateLightingData
  LineTextureMode textureMode
  LineAlignment alignment
  AnimationCurve widthCurve
  Gradient colorGradient
Методы:
  void SetWidth(float start, float end)
  void SetColors(Color start, Color end)
  void SetVertexCount(int count)
  int get_numPositions()
  void set_numPositions(int value)
  float get_startWidth()
  void set_startWidth(float value)
  float get_endWidth()
  void set_endWidth(float value)
  float get_widthMultiplier()
  void set_widthMultiplier(float value)
  int get_numCornerVertices()
  void set_numCornerVertices(int value)
  int get_numCapVertices()
  void set_numCapVertices(int value)
  bool get_useWorldSpace()
  void set_useWorldSpace(bool value)
  bool get_loop()
  void set_loop(bool value)
  Color get_startColor()
  void set_startColor(Color value)
  Color get_endColor()
  void set_endColor(Color value)
  int get_positionCount()
  void set_positionCount(int value)
  void SetPosition(int index, Vector3 position)
  Vector3 GetPosition(int index)
  float get_shadowBias()
  void set_shadowBias(float value)
  bool get_generateLightingData()
  void set_generateLightingData(bool value)
  LineTextureMode get_textureMode()
  void set_textureMode(LineTextureMode value)
  LineAlignment get_alignment()
  void set_alignment(LineAlignment value)
  void Simplify(float tolerance)
  void BakeMesh(Mesh mesh, bool useTransform)
  void BakeMesh(Mesh mesh, Camera camera, bool useTransform)
  AnimationCurve get_widthCurve()
  void set_widthCurve(AnimationCurve value)
  Gradient get_colorGradient()
  void set_colorGradient(Gradient value)
  AnimationCurve GetWidthCurveCopy()
  void SetWidthCurve(AnimationCurve curve)
  Gradient GetColorGradientCopy()
  void SetColorGradient(Gradient curve)
  int GetPositions(Vector3[] positions)
  void SetPositions(Vector3[] positions)
  void SetPositions(NativeArray`1<Vector3> positions)
  void SetPositions(NativeSlice`1<Vector3> positions)
  int GetPositions(NativeArray`1<Vector3> positions)
  int GetPositions(NativeSlice`1<Vector3> positions)
  void SetPositionsWithNativeContainer(IntPtr positions, int count)
  int GetPositionsWithNativeContainer(IntPtr positions, int length)
  void .ctor()
  void get_startColor_Injected(Color& ret)
  void set_startColor_Injected(Color& value)
  void get_endColor_Injected(Color& ret)
  void set_endColor_Injected(Color& value)
  void SetPosition_Injected(int index, Vector3& position)
  void GetPosition_Injected(int index, Vector3& ret)
--------------------------------------------------
Класс: UnityEngine.MaterialPropertyBlock
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  bool isEmpty
Методы:
  void AddFloat(string name, float value)
  void AddFloat(int nameID, float value)
  void AddVector(string name, Vector4 value)
  void AddVector(int nameID, Vector4 value)
  void AddColor(string name, Color value)
  void AddColor(int nameID, Color value)
  void AddMatrix(string name, Matrix4x4 value)
  void AddMatrix(int nameID, Matrix4x4 value)
  void AddTexture(string name, Texture value)
  void AddTexture(int nameID, Texture value)
  int GetIntImpl(int name)
  float GetFloatImpl(int name)
  Vector4 GetVectorImpl(int name)
  Color GetColorImpl(int name)
  Matrix4x4 GetMatrixImpl(int name)
  Texture GetTextureImpl(int name)
  bool HasPropertyImpl(int name)
  bool HasFloatImpl(int name)
  bool HasIntImpl(int name)
  bool HasTextureImpl(int name)
  bool HasMatrixImpl(int name)
  bool HasVectorImpl(int name)
  bool HasBufferImpl(int name)
  bool HasConstantBufferImpl(int name)
  void SetIntImpl(int name, int value)
  void SetFloatImpl(int name, float value)
  void SetVectorImpl(int name, Vector4 value)
  void SetColorImpl(int name, Color value)
  void SetMatrixImpl(int name, Matrix4x4 value)
  void SetTextureImpl(int name, Texture value)
  void SetRenderTextureImpl(int name, RenderTexture value, RenderTextureSubElement element)
  void SetBufferImpl(int name, ComputeBuffer value)
  void SetGraphicsBufferImpl(int name, GraphicsBuffer value)
  void SetConstantBufferImpl(int name, ComputeBuffer value, int offset, int size)
  void SetConstantGraphicsBufferImpl(int name, GraphicsBuffer value, int offset, int size)
  void SetFloatArrayImpl(int name, Single[] values, int count)
  void SetVectorArrayImpl(int name, Vector4[] values, int count)
  void SetMatrixArrayImpl(int name, Matrix4x4[] values, int count)
  Single[] GetFloatArrayImpl(int name)
  Vector4[] GetVectorArrayImpl(int name)
  Matrix4x4[] GetMatrixArrayImpl(int name)
  int GetFloatArrayCountImpl(int name)
  int GetVectorArrayCountImpl(int name)
  int GetMatrixArrayCountImpl(int name)
  void ExtractFloatArrayImpl(int name, Single[] val)
  void ExtractVectorArrayImpl(int name, Vector4[] val)
  void ExtractMatrixArrayImpl(int name, Matrix4x4[] val)
  void Internal_CopySHCoefficientArraysFrom(MaterialPropertyBlock properties, SphericalHarmonicsL2[] lightProbes, int sourceStart, int destStart, int count)
  void Internal_CopyProbeOcclusionArrayFrom(MaterialPropertyBlock properties, Vector4[] occlusionProbes, int sourceStart, int destStart, int count)
  IntPtr CreateImpl()
  void DestroyImpl(IntPtr mpb)
  bool get_isEmpty()
  void Clear(bool keepMemory)
  void Clear()
  void SetFloatArray(int name, Single[] values, int count)
  void SetVectorArray(int name, Vector4[] values, int count)
  void SetMatrixArray(int name, Matrix4x4[] values, int count)
  void ExtractFloatArray(int name, List`1<float> values)
  void ExtractVectorArray(int name, List`1<Vector4> values)
  void ExtractMatrixArray(int name, List`1<Matrix4x4> values)
  void .ctor()
  void Finalize()
  void Dispose()
  void SetInt(string name, int value)
  void SetInt(int nameID, int value)
  void SetFloat(string name, float value)
  void SetFloat(int nameID, float value)
  void SetInteger(string name, int value)
  void SetInteger(int nameID, int value)
  void SetVector(string name, Vector4 value)
  void SetVector(int nameID, Vector4 value)
  void SetColor(string name, Color value)
  void SetColor(int nameID, Color value)
  void SetMatrix(string name, Matrix4x4 value)
  void SetMatrix(int nameID, Matrix4x4 value)
  void SetBuffer(string name, ComputeBuffer value)
  void SetBuffer(int nameID, ComputeBuffer value)
  void SetBuffer(string name, GraphicsBuffer value)
  void SetBuffer(int nameID, GraphicsBuffer value)
  void SetTexture(string name, Texture value)
  void SetTexture(int nameID, Texture value)
  void SetTexture(string name, RenderTexture value, RenderTextureSubElement element)
  void SetTexture(int nameID, RenderTexture value, RenderTextureSubElement element)
  void SetConstantBuffer(string name, ComputeBuffer value, int offset, int size)
  void SetConstantBuffer(int nameID, ComputeBuffer value, int offset, int size)
  void SetConstantBuffer(string name, GraphicsBuffer value, int offset, int size)
  void SetConstantBuffer(int nameID, GraphicsBuffer value, int offset, int size)
  void SetFloatArray(string name, List`1<float> values)
  void SetFloatArray(int nameID, List`1<float> values)
  void SetFloatArray(string name, Single[] values)
  void SetFloatArray(int nameID, Single[] values)
  void SetVectorArray(string name, List`1<Vector4> values)
  void SetVectorArray(int nameID, List`1<Vector4> values)
  void SetVectorArray(string name, Vector4[] values)
  void SetVectorArray(int nameID, Vector4[] values)
  void SetMatrixArray(string name, List`1<Matrix4x4> values)
  void SetMatrixArray(int nameID, List`1<Matrix4x4> values)
  void SetMatrixArray(string name, Matrix4x4[] values)
  void SetMatrixArray(int nameID, Matrix4x4[] values)
  bool HasProperty(string name)
  bool HasProperty(int nameID)
  bool HasInt(string name)
  bool HasInt(int nameID)
  bool HasFloat(string name)
  bool HasFloat(int nameID)
  bool HasInteger(string name)
  bool HasInteger(int nameID)
  bool HasTexture(string name)
  bool HasTexture(int nameID)
  bool HasMatrix(string name)
  bool HasMatrix(int nameID)
  bool HasVector(string name)
  bool HasVector(int nameID)
  bool HasColor(string name)
  bool HasColor(int nameID)
  bool HasBuffer(string name)
  bool HasBuffer(int nameID)
  bool HasConstantBuffer(string name)
  bool HasConstantBuffer(int nameID)
  float GetFloat(string name)
  float GetFloat(int nameID)
  int GetInt(string name)
  int GetInt(int nameID)
  int GetInteger(string name)
  int GetInteger(int nameID)
  Vector4 GetVector(string name)
  Vector4 GetVector(int nameID)
  Color GetColor(string name)
  Color GetColor(int nameID)
  Matrix4x4 GetMatrix(string name)
  Matrix4x4 GetMatrix(int nameID)
  Texture GetTexture(string name)
  Texture GetTexture(int nameID)
  Single[] GetFloatArray(string name)
  Single[] GetFloatArray(int nameID)
  Vector4[] GetVectorArray(string name)
  Vector4[] GetVectorArray(int nameID)
  Matrix4x4[] GetMatrixArray(string name)
  Matrix4x4[] GetMatrixArray(int nameID)
  void GetFloatArray(string name, List`1<float> values)
  void GetFloatArray(int nameID, List`1<float> values)
  void GetVectorArray(string name, List`1<Vector4> values)
  void GetVectorArray(int nameID, List`1<Vector4> values)
  void GetMatrixArray(string name, List`1<Matrix4x4> values)
  void GetMatrixArray(int nameID, List`1<Matrix4x4> values)
  void CopySHCoefficientArraysFrom(List`1<SphericalHarmonicsL2> lightProbes)
  void CopySHCoefficientArraysFrom(SphericalHarmonicsL2[] lightProbes)
  void CopySHCoefficientArraysFrom(List`1<SphericalHarmonicsL2> lightProbes, int sourceStart, int destStart, int count)
  void CopySHCoefficientArraysFrom(SphericalHarmonicsL2[] lightProbes, int sourceStart, int destStart, int count)
  void CopyProbeOcclusionArrayFrom(List`1<Vector4> occlusionProbes)
  void CopyProbeOcclusionArrayFrom(Vector4[] occlusionProbes)
  void CopyProbeOcclusionArrayFrom(List`1<Vector4> occlusionProbes, int sourceStart, int destStart, int count)
  void CopyProbeOcclusionArrayFrom(Vector4[] occlusionProbes, int sourceStart, int destStart, int count)
  void GetVectorImpl_Injected(int name, Vector4& ret)
  void GetColorImpl_Injected(int name, Color& ret)
  void GetMatrixImpl_Injected(int name, Matrix4x4& ret)
  void SetVectorImpl_Injected(int name, Vector4& value)
  void SetColorImpl_Injected(int name, Color& value)
  void SetMatrixImpl_Injected(int name, Matrix4x4& value)
--------------------------------------------------
Класс: UnityEngine.Renderer
Наследуется от: Component
Поля:
Свойства:
  bool castShadows
  bool motionVectors
  bool useLightProbes
  Bounds bounds
  Bounds localBounds
  bool enabled
  bool isVisible
  ShadowCastingMode shadowCastingMode
  bool receiveShadows
  bool forceRenderingOff
  bool staticShadowCaster
  MotionVectorGenerationMode motionVectorGenerationMode
  LightProbeUsage lightProbeUsage
  ReflectionProbeUsage reflectionProbeUsage
  UInt32 renderingLayerMask
  int rendererPriority
  RayTracingMode rayTracingMode
  string sortingLayerName
  int sortingLayerID
  int sortingOrder
  int sortingGroupID
  int sortingGroupOrder
  bool allowOcclusionWhenDynamic
  Transform staticBatchRootTransform
  int staticBatchIndex
  bool isPartOfStaticBatch
  Matrix4x4 worldToLocalMatrix
  Matrix4x4 localToWorldMatrix
  GameObject lightProbeProxyVolumeOverride
  Transform probeAnchor
  int lightmapIndex
  int realtimeLightmapIndex
  Vector4 lightmapScaleOffset
  Vector4 realtimeLightmapScaleOffset
  Material[] materials
  Material material
  Material sharedMaterial
  Material[] sharedMaterials
Методы:
  bool get_castShadows()
  void set_castShadows(bool value)
  bool get_motionVectors()
  void set_motionVectors(bool value)
  bool get_useLightProbes()
  void set_useLightProbes(bool value)
  Bounds get_bounds()
  void set_bounds(Bounds value)
  Bounds get_localBounds()
  void set_localBounds(Bounds value)
  void ResetBounds()
  void ResetLocalBounds()
  void SetStaticLightmapST(Vector4 st)
  Material GetMaterial()
  Material GetSharedMaterial()
  void SetMaterial(Material m)
  Material[] GetMaterialArray()
  void CopyMaterialArray(Material[] m)
  void CopySharedMaterialArray(Material[] m)
  void SetMaterialArray(Material[] m)
  void Internal_SetPropertyBlock(MaterialPropertyBlock properties)
  void Internal_GetPropertyBlock(MaterialPropertyBlock dest)
  void Internal_SetPropertyBlockMaterialIndex(MaterialPropertyBlock properties, int materialIndex)
  void Internal_GetPropertyBlockMaterialIndex(MaterialPropertyBlock dest, int materialIndex)
  bool HasPropertyBlock()
  void SetPropertyBlock(MaterialPropertyBlock properties)
  void SetPropertyBlock(MaterialPropertyBlock properties, int materialIndex)
  void GetPropertyBlock(MaterialPropertyBlock properties)
  void GetPropertyBlock(MaterialPropertyBlock properties, int materialIndex)
  void GetClosestReflectionProbesInternal(object result)
  bool get_enabled()
  void set_enabled(bool value)
  bool get_isVisible()
  ShadowCastingMode get_shadowCastingMode()
  void set_shadowCastingMode(ShadowCastingMode value)
  bool get_receiveShadows()
  void set_receiveShadows(bool value)
  bool get_forceRenderingOff()
  void set_forceRenderingOff(bool value)
  bool GetIsStaticShadowCaster()
  void SetIsStaticShadowCaster(bool value)
  bool get_staticShadowCaster()
  void set_staticShadowCaster(bool value)
  MotionVectorGenerationMode get_motionVectorGenerationMode()
  void set_motionVectorGenerationMode(MotionVectorGenerationMode value)
  LightProbeUsage get_lightProbeUsage()
  void set_lightProbeUsage(LightProbeUsage value)
  ReflectionProbeUsage get_reflectionProbeUsage()
  void set_reflectionProbeUsage(ReflectionProbeUsage value)
  UInt32 get_renderingLayerMask()
  void set_renderingLayerMask(UInt32 value)
  int get_rendererPriority()
  void set_rendererPriority(int value)
  RayTracingMode get_rayTracingMode()
  void set_rayTracingMode(RayTracingMode value)
  string get_sortingLayerName()
  void set_sortingLayerName(string value)
  int get_sortingLayerID()
  void set_sortingLayerID(int value)
  int get_sortingOrder()
  void set_sortingOrder(int value)
  int get_sortingGroupID()
  void set_sortingGroupID(int value)
  int get_sortingGroupOrder()
  void set_sortingGroupOrder(int value)
  bool get_allowOcclusionWhenDynamic()
  void set_allowOcclusionWhenDynamic(bool value)
  Transform get_staticBatchRootTransform()
  void set_staticBatchRootTransform(Transform value)
  int get_staticBatchIndex()
  void SetStaticBatchInfo(int firstSubMesh, int subMeshCount)
  bool get_isPartOfStaticBatch()
  Matrix4x4 get_worldToLocalMatrix()
  Matrix4x4 get_localToWorldMatrix()
  GameObject get_lightProbeProxyVolumeOverride()
  void set_lightProbeProxyVolumeOverride(GameObject value)
  Transform get_probeAnchor()
  void set_probeAnchor(Transform value)
  int GetLightmapIndex(LightmapType lt)
  void SetLightmapIndex(int index, LightmapType lt)
  Vector4 GetLightmapST(LightmapType lt)
  void SetLightmapST(Vector4 st, LightmapType lt)
  int get_lightmapIndex()
  void set_lightmapIndex(int value)
  int get_realtimeLightmapIndex()
  void set_realtimeLightmapIndex(int value)
  Vector4 get_lightmapScaleOffset()
  void set_lightmapScaleOffset(Vector4 value)
  Vector4 get_realtimeLightmapScaleOffset()
  void set_realtimeLightmapScaleOffset(Vector4 value)
  int GetMaterialCount()
  Material[] GetSharedMaterialArray()
  Material[] get_materials()
  void set_materials(Material[] value)
  Material get_material()
  void set_material(Material value)
  Material get_sharedMaterial()
  void set_sharedMaterial(Material value)
  Material[] get_sharedMaterials()
  void set_sharedMaterials(Material[] value)
  void GetMaterials(List`1<Material> m)
  void GetSharedMaterials(List`1<Material> m)
  void GetClosestReflectionProbes(List`1<ReflectionProbeBlendInfo> result)
  void .ctor()
  void get_bounds_Injected(Bounds& ret)
  void set_bounds_Injected(Bounds& value)
  void get_localBounds_Injected(Bounds& ret)
  void set_localBounds_Injected(Bounds& value)
  void SetStaticLightmapST_Injected(Vector4& st)
  void get_worldToLocalMatrix_Injected(Matrix4x4& ret)
  void get_localToWorldMatrix_Injected(Matrix4x4& ret)
  void GetLightmapST_Injected(LightmapType lt, Vector4& ret)
  void SetLightmapST_Injected(Vector4& st, LightmapType lt)
--------------------------------------------------
Класс: UnityEngine.RenderSettings
Наследуется от: Object
Поля:
Свойства:
  float ambientSkyboxAmount
  bool fog
  float fogStartDistance
  float fogEndDistance
  FogMode fogMode
  Color fogColor
  float fogDensity
  AmbientMode ambientMode
  Color ambientSkyColor
  Color ambientEquatorColor
  Color ambientGroundColor
  float ambientIntensity
  Color ambientLight
  Color subtractiveShadowColor
  Material skybox
  Light sun
  SphericalHarmonicsL2 ambientProbe
  Texture customReflection
  float reflectionIntensity
  int reflectionBounces
  Cubemap defaultReflection
  DefaultReflectionMode defaultReflectionMode
  int defaultReflectionResolution
  float haloStrength
  float flareStrength
  float flareFadeSpeed
Методы:
  float get_ambientSkyboxAmount()
  void set_ambientSkyboxAmount(float value)
  void .ctor()
  bool get_fog()
  void set_fog(bool value)
  float get_fogStartDistance()
  void set_fogStartDistance(float value)
  float get_fogEndDistance()
  void set_fogEndDistance(float value)
  FogMode get_fogMode()
  void set_fogMode(FogMode value)
  Color get_fogColor()
  void set_fogColor(Color value)
  float get_fogDensity()
  void set_fogDensity(float value)
  AmbientMode get_ambientMode()
  void set_ambientMode(AmbientMode value)
  Color get_ambientSkyColor()
  void set_ambientSkyColor(Color value)
  Color get_ambientEquatorColor()
  void set_ambientEquatorColor(Color value)
  Color get_ambientGroundColor()
  void set_ambientGroundColor(Color value)
  float get_ambientIntensity()
  void set_ambientIntensity(float value)
  Color get_ambientLight()
  void set_ambientLight(Color value)
  Color get_subtractiveShadowColor()
  void set_subtractiveShadowColor(Color value)
  Material get_skybox()
  void set_skybox(Material value)
  Light get_sun()
  void set_sun(Light value)
  SphericalHarmonicsL2 get_ambientProbe()
  void set_ambientProbe(SphericalHarmonicsL2 value)
  Texture get_customReflection()
  void set_customReflection(Texture value)
  float get_reflectionIntensity()
  void set_reflectionIntensity(float value)
  int get_reflectionBounces()
  void set_reflectionBounces(int value)
  Cubemap get_defaultReflection()
  DefaultReflectionMode get_defaultReflectionMode()
  void set_defaultReflectionMode(DefaultReflectionMode value)
  int get_defaultReflectionResolution()
  void set_defaultReflectionResolution(int value)
  float get_haloStrength()
  void set_haloStrength(float value)
  float get_flareStrength()
  void set_flareStrength(float value)
  float get_flareFadeSpeed()
  void set_flareFadeSpeed(float value)
  Object GetRenderSettings()
  void Reset()
  void get_fogColor_Injected(Color& ret)
  void set_fogColor_Injected(Color& value)
  void get_ambientSkyColor_Injected(Color& ret)
  void set_ambientSkyColor_Injected(Color& value)
  void get_ambientEquatorColor_Injected(Color& ret)
  void set_ambientEquatorColor_Injected(Color& value)
  void get_ambientGroundColor_Injected(Color& ret)
  void set_ambientGroundColor_Injected(Color& value)
  void get_ambientLight_Injected(Color& ret)
  void set_ambientLight_Injected(Color& value)
  void get_subtractiveShadowColor_Injected(Color& ret)
  void set_subtractiveShadowColor_Injected(Color& value)
  void get_ambientProbe_Injected(SphericalHarmonicsL2& ret)
  void set_ambientProbe_Injected(SphericalHarmonicsL2& value)
--------------------------------------------------
Класс: UnityEngine.Shader
Наследуется от: Object
Поля:
Свойства:
  ShaderHardwareTier globalShaderHardwareTier
  int maximumChunksOverride
  int maximumLOD
  int globalMaximumLOD
  bool isSupported
  string globalRenderPipeline
  GlobalKeyword[] enabledGlobalKeywords
  GlobalKeyword[] globalKeywords
  LocalKeywordSpace keywordSpace
  int renderQueue
  DisableBatchingType disableBatching
  int passCount
  int subshaderCount
Методы:
  ShaderHardwareTier get_globalShaderHardwareTier()
  void set_globalShaderHardwareTier(ShaderHardwareTier value)
  Shader Find(string name)
  Shader FindBuiltin(string name)
  int get_maximumChunksOverride()
  void set_maximumChunksOverride(int value)
  int get_maximumLOD()
  void set_maximumLOD(int value)
  int get_globalMaximumLOD()
  void set_globalMaximumLOD(int value)
  bool get_isSupported()
  string get_globalRenderPipeline()
  void set_globalRenderPipeline(string value)
  GlobalKeyword[] get_enabledGlobalKeywords()
  GlobalKeyword[] get_globalKeywords()
  LocalKeywordSpace get_keywordSpace()
  GlobalKeyword[] GetEnabledGlobalKeywords()
  GlobalKeyword[] GetAllGlobalKeywords()
  void EnableKeyword(string keyword)
  void DisableKeyword(string keyword)
  bool IsKeywordEnabled(string keyword)
  void EnableKeywordFast(GlobalKeyword keyword)
  void DisableKeywordFast(GlobalKeyword keyword)
  void SetKeywordFast(GlobalKeyword keyword, bool value)
  bool IsKeywordEnabledFast(GlobalKeyword keyword)
  void EnableKeyword(GlobalKeyword& keyword)
  void DisableKeyword(GlobalKeyword& keyword)
  void SetKeyword(GlobalKeyword& keyword, bool value)
  bool IsKeywordEnabled(GlobalKeyword& keyword)
  int get_renderQueue()
  DisableBatchingType get_disableBatching()
  void WarmupAllShaders()
  int TagToID(string name)
  string IDToTag(int name)
  int PropertyToID(string name)
  Shader GetDependency(string name)
  int get_passCount()
  int get_subshaderCount()
  int GetPassCountInSubshader(int subshaderIndex)
  ShaderTagId FindPassTagValue(int passIndex, ShaderTagId tagName)
  ShaderTagId FindPassTagValue(int subshaderIndex, int passIndex, ShaderTagId tagName)
  ShaderTagId FindSubshaderTagValue(int subshaderIndex, ShaderTagId tagName)
  int Internal_FindPassTagValue(int passIndex, int tagName)
  int Internal_FindPassTagValueInSubShader(int subShaderIndex, int passIndex, int tagName)
  int Internal_FindSubshaderTagValue(int subShaderIndex, int tagName)
  void SetGlobalIntImpl(int name, int value)
  void SetGlobalFloatImpl(int name, float value)
  void SetGlobalVectorImpl(int name, Vector4 value)
  void SetGlobalMatrixImpl(int name, Matrix4x4 value)
  void SetGlobalTextureImpl(int name, Texture value)
  void SetGlobalRenderTextureImpl(int name, RenderTexture value, RenderTextureSubElement element)
  void SetGlobalBufferImpl(int name, ComputeBuffer value)
  void SetGlobalGraphicsBufferImpl(int name, GraphicsBuffer value)
  void SetGlobalConstantBufferImpl(int name, ComputeBuffer value, int offset, int size)
  void SetGlobalConstantGraphicsBufferImpl(int name, GraphicsBuffer value, int offset, int size)
  int GetGlobalIntImpl(int name)
  float GetGlobalFloatImpl(int name)
  Vector4 GetGlobalVectorImpl(int name)
  Matrix4x4 GetGlobalMatrixImpl(int name)
  Texture GetGlobalTextureImpl(int name)
  void SetGlobalFloatArrayImpl(int name, Single[] values, int count)
  void SetGlobalVectorArrayImpl(int name, Vector4[] values, int count)
  void SetGlobalMatrixArrayImpl(int name, Matrix4x4[] values, int count)
  Single[] GetGlobalFloatArrayImpl(int name)
  Vector4[] GetGlobalVectorArrayImpl(int name)
  Matrix4x4[] GetGlobalMatrixArrayImpl(int name)
  int GetGlobalFloatArrayCountImpl(int name)
  int GetGlobalVectorArrayCountImpl(int name)
  int GetGlobalMatrixArrayCountImpl(int name)
  void ExtractGlobalFloatArrayImpl(int name, Single[] val)
  void ExtractGlobalVectorArrayImpl(int name, Vector4[] val)
  void ExtractGlobalMatrixArrayImpl(int name, Matrix4x4[] val)
  void SetGlobalFloatArray(int name, Single[] values, int count)
  void SetGlobalVectorArray(int name, Vector4[] values, int count)
  void SetGlobalMatrixArray(int name, Matrix4x4[] values, int count)
  void ExtractGlobalFloatArray(int name, List`1<float> values)
  void ExtractGlobalVectorArray(int name, List`1<Vector4> values)
  void ExtractGlobalMatrixArray(int name, List`1<Matrix4x4> values)
  void SetGlobalInt(string name, int value)
  void SetGlobalInt(int nameID, int value)
  void SetGlobalFloat(string name, float value)
  void SetGlobalFloat(int nameID, float value)
  void SetGlobalInteger(string name, int value)
  void SetGlobalInteger(int nameID, int value)
  void SetGlobalVector(string name, Vector4 value)
  void SetGlobalVector(int nameID, Vector4 value)
  void SetGlobalColor(string name, Color value)
  void SetGlobalColor(int nameID, Color value)
  void SetGlobalMatrix(string name, Matrix4x4 value)
  void SetGlobalMatrix(int nameID, Matrix4x4 value)
  void SetGlobalTexture(string name, Texture value)
  void SetGlobalTexture(int nameID, Texture value)
  void SetGlobalTexture(string name, RenderTexture value, RenderTextureSubElement element)
  void SetGlobalTexture(int nameID, RenderTexture value, RenderTextureSubElement element)
  void SetGlobalBuffer(string name, ComputeBuffer value)
  void SetGlobalBuffer(int nameID, ComputeBuffer value)
  void SetGlobalBuffer(string name, GraphicsBuffer value)
  void SetGlobalBuffer(int nameID, GraphicsBuffer value)
  void SetGlobalConstantBuffer(string name, ComputeBuffer value, int offset, int size)
  void SetGlobalConstantBuffer(int nameID, ComputeBuffer value, int offset, int size)
  void SetGlobalConstantBuffer(string name, GraphicsBuffer value, int offset, int size)
  void SetGlobalConstantBuffer(int nameID, GraphicsBuffer value, int offset, int size)
  void SetGlobalFloatArray(string name, List`1<float> values)
  void SetGlobalFloatArray(int nameID, List`1<float> values)
  void SetGlobalFloatArray(string name, Single[] values)
  void SetGlobalFloatArray(int nameID, Single[] values)
  void SetGlobalVectorArray(string name, List`1<Vector4> values)
  void SetGlobalVectorArray(int nameID, List`1<Vector4> values)
  void SetGlobalVectorArray(string name, Vector4[] values)
  void SetGlobalVectorArray(int nameID, Vector4[] values)
  void SetGlobalMatrixArray(string name, List`1<Matrix4x4> values)
  void SetGlobalMatrixArray(int nameID, List`1<Matrix4x4> values)
  void SetGlobalMatrixArray(string name, Matrix4x4[] values)
  void SetGlobalMatrixArray(int nameID, Matrix4x4[] values)
  int GetGlobalInt(string name)
  int GetGlobalInt(int nameID)
  float GetGlobalFloat(string name)
  float GetGlobalFloat(int nameID)
  int GetGlobalInteger(string name)
  int GetGlobalInteger(int nameID)
  Vector4 GetGlobalVector(string name)
  Vector4 GetGlobalVector(int nameID)
  Color GetGlobalColor(string name)
  Color GetGlobalColor(int nameID)
  Matrix4x4 GetGlobalMatrix(string name)
  Matrix4x4 GetGlobalMatrix(int nameID)
  Texture GetGlobalTexture(string name)
  Texture GetGlobalTexture(int nameID)
  Single[] GetGlobalFloatArray(string name)
  Single[] GetGlobalFloatArray(int nameID)
  Vector4[] GetGlobalVectorArray(string name)
  Vector4[] GetGlobalVectorArray(int nameID)
  Matrix4x4[] GetGlobalMatrixArray(string name)
  Matrix4x4[] GetGlobalMatrixArray(int nameID)
  void GetGlobalFloatArray(string name, List`1<float> values)
  void GetGlobalFloatArray(int nameID, List`1<float> values)
  void GetGlobalVectorArray(string name, List`1<Vector4> values)
  void GetGlobalVectorArray(int nameID, List`1<Vector4> values)
  void GetGlobalMatrixArray(string name, List`1<Matrix4x4> values)
  void GetGlobalMatrixArray(int nameID, List`1<Matrix4x4> values)
  void .ctor()
  string GetPropertyName(Shader shader, int propertyIndex)
  int GetPropertyNameId(Shader shader, int propertyIndex)
  ShaderPropertyType GetPropertyType(Shader shader, int propertyIndex)
  string GetPropertyDescription(Shader shader, int propertyIndex)
  ShaderPropertyFlags GetPropertyFlags(Shader shader, int propertyIndex)
  String[] GetPropertyAttributes(Shader shader, int propertyIndex)
  int GetPropertyDefaultIntValue(Shader shader, int propertyIndex)
  Vector4 GetPropertyDefaultValue(Shader shader, int propertyIndex)
  TextureDimension GetPropertyTextureDimension(Shader shader, int propertyIndex)
  string GetPropertyTextureDefaultName(Shader shader, int propertyIndex)
  bool FindTextureStackImpl(Shader s, int propertyIdx, String& stackName, Int32& layerIndex)
  void CheckPropertyIndex(Shader s, int propertyIndex)
  int GetPropertyCount()
  int FindPropertyIndex(string propertyName)
  string GetPropertyName(int propertyIndex)
  int GetPropertyNameId(int propertyIndex)
  ShaderPropertyType GetPropertyType(int propertyIndex)
  string GetPropertyDescription(int propertyIndex)
  ShaderPropertyFlags GetPropertyFlags(int propertyIndex)
  String[] GetPropertyAttributes(int propertyIndex)
  float GetPropertyDefaultFloatValue(int propertyIndex)
  Vector4 GetPropertyDefaultVectorValue(int propertyIndex)
  Vector2 GetPropertyRangeLimits(int propertyIndex)
  TextureDimension GetPropertyTextureDimension(int propertyIndex)
  string GetPropertyTextureDefaultName(int propertyIndex)
  bool FindTextureStack(int propertyIndex, String& stackName, Int32& layerIndex)
  void get_keywordSpace_Injected(LocalKeywordSpace& ret)
  void EnableKeywordFast_Injected(GlobalKeyword& keyword)
  void DisableKeywordFast_Injected(GlobalKeyword& keyword)
  void SetKeywordFast_Injected(GlobalKeyword& keyword, bool value)
  bool IsKeywordEnabledFast_Injected(GlobalKeyword& keyword)
  void SetGlobalVectorImpl_Injected(int name, Vector4& value)
  void SetGlobalMatrixImpl_Injected(int name, Matrix4x4& value)
  void GetGlobalVectorImpl_Injected(int name, Vector4& ret)
  void GetGlobalMatrixImpl_Injected(int name, Matrix4x4& ret)
  void GetPropertyDefaultValue_Injected(Shader shader, int propertyIndex, Vector4& ret)
--------------------------------------------------
Класс: UnityEngine.Material
Наследуется от: Object
Поля:
Свойства:
  Shader shader
  Color color
  Texture mainTexture
  Vector2 mainTextureOffset
  Vector2 mainTextureScale
  int renderQueue
  int rawRenderQueue
  LocalKeyword[] enabledKeywords
  MaterialGlobalIlluminationFlags globalIlluminationFlags
  bool doubleSidedGI
  bool enableInstancing
  int passCount
  String[] shaderKeywords
Методы:
  Material Create(string scriptContents)
  void CreateWithShader(Material self, Shader shader)
  void CreateWithMaterial(Material self, Material source)
  void CreateWithString(Material self)
  void .ctor(Shader shader)
  void .ctor(Material source)
  void .ctor(string contents)
  Material GetDefaultMaterial()
  Material GetDefaultParticleMaterial()
  Material GetDefaultLineMaterial()
  Shader get_shader()
  void set_shader(Shader value)
  Color get_color()
  void set_color(Color value)
  Texture get_mainTexture()
  void set_mainTexture(Texture value)
  Vector2 get_mainTextureOffset()
  void set_mainTextureOffset(Vector2 value)
  Vector2 get_mainTextureScale()
  void set_mainTextureScale(Vector2 value)
  int GetFirstPropertyNameIdByAttribute(ShaderPropertyFlags attributeFlag)
  bool HasProperty(int nameID)
  bool HasProperty(string name)
  bool HasFloatImpl(int name)
  bool HasFloat(string name)
  bool HasFloat(int nameID)
  bool HasInt(string name)
  bool HasInt(int nameID)
  bool HasIntImpl(int name)
  bool HasInteger(string name)
  bool HasInteger(int nameID)
  bool HasTextureImpl(int name)
  bool HasTexture(string name)
  bool HasTexture(int nameID)
  bool HasMatrixImpl(int name)
  bool HasMatrix(string name)
  bool HasMatrix(int nameID)
  bool HasVectorImpl(int name)
  bool HasVector(string name)
  bool HasVector(int nameID)
  bool HasColor(string name)
  bool HasColor(int nameID)
  bool HasBufferImpl(int name)
  bool HasBuffer(string name)
  bool HasBuffer(int nameID)
  bool HasConstantBufferImpl(int name)
  bool HasConstantBuffer(string name)
  bool HasConstantBuffer(int nameID)
  int get_renderQueue()
  void set_renderQueue(int value)
  int get_rawRenderQueue()
  void EnableKeyword(string keyword)
  void DisableKeyword(string keyword)
  bool IsKeywordEnabled(string keyword)
  void EnableLocalKeyword(LocalKeyword keyword)
  void DisableLocalKeyword(LocalKeyword keyword)
  void SetLocalKeyword(LocalKeyword keyword, bool value)
  bool IsLocalKeywordEnabled(LocalKeyword keyword)
  void EnableKeyword(LocalKeyword& keyword)
  void DisableKeyword(LocalKeyword& keyword)
  void SetKeyword(LocalKeyword& keyword, bool value)
  bool IsKeywordEnabled(LocalKeyword& keyword)
  LocalKeyword[] GetEnabledKeywords()
  void SetEnabledKeywords(LocalKeyword[] keywords)
  LocalKeyword[] get_enabledKeywords()
  void set_enabledKeywords(LocalKeyword[] value)
  MaterialGlobalIlluminationFlags get_globalIlluminationFlags()
  void set_globalIlluminationFlags(MaterialGlobalIlluminationFlags value)
  bool get_doubleSidedGI()
  void set_doubleSidedGI(bool value)
  bool get_enableInstancing()
  void set_enableInstancing(bool value)
  int get_passCount()
  void SetShaderPassEnabled(string passName, bool enabled)
  bool GetShaderPassEnabled(string passName)
  string GetPassName(int pass)
  int FindPass(string passName)
  void SetOverrideTag(string tag, string val)
  string GetTagImpl(string tag, bool currentSubShaderOnly, string defaultValue)
  string GetTag(string tag, bool searchFallbacks, string defaultValue)
  string GetTag(string tag, bool searchFallbacks)
  void Lerp(Material start, Material end, float t)
  bool SetPass(int pass)
  void CopyPropertiesFromMaterial(Material mat)
  void CopyMatchingPropertiesFromMaterial(Material mat)
  String[] GetShaderKeywords()
  void SetShaderKeywords(String[] names)
  String[] get_shaderKeywords()
  void set_shaderKeywords(String[] value)
  int ComputeCRC()
  String[] GetTexturePropertyNames()
  Int32[] GetTexturePropertyNameIDs()
  void GetTexturePropertyNamesInternal(object outNames)
  void GetTexturePropertyNameIDsInternal(object outNames)
  void GetTexturePropertyNames(List`1<string> outNames)
  void GetTexturePropertyNameIDs(List`1<int> outNames)
  void SetIntImpl(int name, int value)
  void SetFloatImpl(int name, float value)
  void SetColorImpl(int name, Color value)
  void SetMatrixImpl(int name, Matrix4x4 value)
  void SetTextureImpl(int name, Texture value)
  void SetRenderTextureImpl(int name, RenderTexture value, RenderTextureSubElement element)
  void SetBufferImpl(int name, ComputeBuffer value)
  void SetGraphicsBufferImpl(int name, GraphicsBuffer value)
  void SetConstantBufferImpl(int name, ComputeBuffer value, int offset, int size)
  void SetConstantGraphicsBufferImpl(int name, GraphicsBuffer value, int offset, int size)
  int GetIntImpl(int name)
  float GetFloatImpl(int name)
  Color GetColorImpl(int name)
  Matrix4x4 GetMatrixImpl(int name)
  Texture GetTextureImpl(int name)
  void SetFloatArrayImpl(int name, Single[] values, int count)
  void SetVectorArrayImpl(int name, Vector4[] values, int count)
  void SetColorArrayImpl(int name, Color[] values, int count)
  void SetMatrixArrayImpl(int name, Matrix4x4[] values, int count)
  Single[] GetFloatArrayImpl(int name)
  Vector4[] GetVectorArrayImpl(int name)
  Color[] GetColorArrayImpl(int name)
  Matrix4x4[] GetMatrixArrayImpl(int name)
  int GetFloatArrayCountImpl(int name)
  int GetVectorArrayCountImpl(int name)
  int GetColorArrayCountImpl(int name)
  int GetMatrixArrayCountImpl(int name)
  void ExtractFloatArrayImpl(int name, Single[] val)
  void ExtractVectorArrayImpl(int name, Vector4[] val)
  void ExtractColorArrayImpl(int name, Color[] val)
  void ExtractMatrixArrayImpl(int name, Matrix4x4[] val)
  Vector4 GetTextureScaleAndOffsetImpl(int name)
  void SetTextureOffsetImpl(int name, Vector2 offset)
  void SetTextureScaleImpl(int name, Vector2 scale)
  void SetFloatArray(int name, Single[] values, int count)
  void SetVectorArray(int name, Vector4[] values, int count)
  void SetColorArray(int name, Color[] values, int count)
  void SetMatrixArray(int name, Matrix4x4[] values, int count)
  void ExtractFloatArray(int name, List`1<float> values)
  void ExtractVectorArray(int name, List`1<Vector4> values)
  void ExtractColorArray(int name, List`1<Color> values)
  void ExtractMatrixArray(int name, List`1<Matrix4x4> values)
  void SetInt(string name, int value)
  void SetInt(int nameID, int value)
  void SetFloat(string name, float value)
  void SetFloat(int nameID, float value)
  void SetInteger(string name, int value)
  void SetInteger(int nameID, int value)
  void SetColor(string name, Color value)
  void SetColor(int nameID, Color value)
  void SetVector(string name, Vector4 value)
  void SetVector(int nameID, Vector4 value)
  void SetMatrix(string name, Matrix4x4 value)
  void SetMatrix(int nameID, Matrix4x4 value)
  void SetTexture(string name, Texture value)
  void SetTexture(int nameID, Texture value)
  void SetTexture(string name, RenderTexture value, RenderTextureSubElement element)
  void SetTexture(int nameID, RenderTexture value, RenderTextureSubElement element)
  void SetBuffer(string name, ComputeBuffer value)
  void SetBuffer(int nameID, ComputeBuffer value)
  void SetBuffer(string name, GraphicsBuffer value)
  void SetBuffer(int nameID, GraphicsBuffer value)
  void SetConstantBuffer(string name, ComputeBuffer value, int offset, int size)
  void SetConstantBuffer(int nameID, ComputeBuffer value, int offset, int size)
  void SetConstantBuffer(string name, GraphicsBuffer value, int offset, int size)
  void SetConstantBuffer(int nameID, GraphicsBuffer value, int offset, int size)
  void SetFloatArray(string name, List`1<float> values)
  void SetFloatArray(int nameID, List`1<float> values)
  void SetFloatArray(string name, Single[] values)
  void SetFloatArray(int nameID, Single[] values)
  void SetColorArray(string name, List`1<Color> values)
  void SetColorArray(int nameID, List`1<Color> values)
  void SetColorArray(string name, Color[] values)
  void SetColorArray(int nameID, Color[] values)
  void SetVectorArray(string name, List`1<Vector4> values)
  void SetVectorArray(int nameID, List`1<Vector4> values)
  void SetVectorArray(string name, Vector4[] values)
  void SetVectorArray(int nameID, Vector4[] values)
  void SetMatrixArray(string name, List`1<Matrix4x4> values)
  void SetMatrixArray(int nameID, List`1<Matrix4x4> values)
  void SetMatrixArray(string name, Matrix4x4[] values)
  void SetMatrixArray(int nameID, Matrix4x4[] values)
  int GetInt(string name)
  int GetInt(int nameID)
  float GetFloat(string name)
  float GetFloat(int nameID)
  int GetInteger(string name)
  int GetInteger(int nameID)
  Color GetColor(string name)
  Color GetColor(int nameID)
  Vector4 GetVector(string name)
  Vector4 GetVector(int nameID)
  Matrix4x4 GetMatrix(string name)
  Matrix4x4 GetMatrix(int nameID)
  Texture GetTexture(string name)
  Texture GetTexture(int nameID)
  Single[] GetFloatArray(string name)
  Single[] GetFloatArray(int nameID)
  Color[] GetColorArray(string name)
  Color[] GetColorArray(int nameID)
  Vector4[] GetVectorArray(string name)
  Vector4[] GetVectorArray(int nameID)
  Matrix4x4[] GetMatrixArray(string name)
  Matrix4x4[] GetMatrixArray(int nameID)
  void GetFloatArray(string name, List`1<float> values)
  void GetFloatArray(int nameID, List`1<float> values)
  void GetColorArray(string name, List`1<Color> values)
  void GetColorArray(int nameID, List`1<Color> values)
  void GetVectorArray(string name, List`1<Vector4> values)
  void GetVectorArray(int nameID, List`1<Vector4> values)
  void GetMatrixArray(string name, List`1<Matrix4x4> values)
  void GetMatrixArray(int nameID, List`1<Matrix4x4> values)
  void SetTextureOffset(string name, Vector2 value)
  void SetTextureOffset(int nameID, Vector2 value)
  void SetTextureScale(string name, Vector2 value)
  void SetTextureScale(int nameID, Vector2 value)
  Vector2 GetTextureOffset(string name)
  Vector2 GetTextureOffset(int nameID)
  Vector2 GetTextureScale(string name)
  Vector2 GetTextureScale(int nameID)
  void EnableLocalKeyword_Injected(LocalKeyword& keyword)
  void DisableLocalKeyword_Injected(LocalKeyword& keyword)
  void SetLocalKeyword_Injected(LocalKeyword& keyword, bool value)
  bool IsLocalKeywordEnabled_Injected(LocalKeyword& keyword)
  void SetColorImpl_Injected(int name, Color& value)
  void SetMatrixImpl_Injected(int name, Matrix4x4& value)
  void GetColorImpl_Injected(int name, Color& ret)
  void GetMatrixImpl_Injected(int name, Matrix4x4& ret)
  void GetTextureScaleAndOffsetImpl_Injected(int name, Vector4& ret)
  void SetTextureOffsetImpl_Injected(int name, Vector2& offset)
  void SetTextureScaleImpl_Injected(int name, Vector2& scale)
--------------------------------------------------
Класс: UnityEngine.GraphicsBuffer
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  int count
  int stride
  Target target
  string name
Методы:
  void Finalize()
  void Dispose()
  void Dispose(bool disposing)
  bool RequiresCompute(Target target)
  bool IsVertexIndexOrCopyOnly(Target target)
  IntPtr InitBuffer(Target target, int count, int stride)
  void DestroyBuffer(GraphicsBuffer buf)
  void .ctor(Target target, int count, int stride)
  void Release()
  bool IsValidBuffer(GraphicsBuffer buf)
  bool IsValid()
  int get_count()
  int get_stride()
  Target get_target()
  void SetData(Array data)
  void SetData(List`1<T> data)
  void SetData(NativeArray`1<T> data)
  void SetData(Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetData(List`1<T> data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetData(NativeArray`1<T> data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count)
  void InternalSetNativeData(IntPtr data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count, int elemSize)
  void InternalSetData(Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count, int elemSize)
  void GetData(Array data)
  void GetData(Array data, int managedBufferStartIndex, int computeBufferStartIndex, int count)
  void InternalGetData(Array data, int managedBufferStartIndex, int computeBufferStartIndex, int count, int elemSize)
  IntPtr GetNativeBufferPtr()
  void set_name(string value)
  void SetName(string name)
  void SetCounterValue(UInt32 counterValue)
  void CopyCountCC(ComputeBuffer src, ComputeBuffer dst, int dstOffsetBytes)
  void CopyCountGC(GraphicsBuffer src, ComputeBuffer dst, int dstOffsetBytes)
  void CopyCountCG(ComputeBuffer src, GraphicsBuffer dst, int dstOffsetBytes)
  void CopyCountGG(GraphicsBuffer src, GraphicsBuffer dst, int dstOffsetBytes)
  void CopyCount(ComputeBuffer src, ComputeBuffer dst, int dstOffsetBytes)
  void CopyCount(GraphicsBuffer src, ComputeBuffer dst, int dstOffsetBytes)
  void CopyCount(ComputeBuffer src, GraphicsBuffer dst, int dstOffsetBytes)
  void CopyCount(GraphicsBuffer src, GraphicsBuffer dst, int dstOffsetBytes)
--------------------------------------------------
Класс: UnityEngine.OcclusionPortal
Наследуется от: Component
Поля:
Свойства:
  bool open
Методы:
  bool get_open()
  void set_open(bool value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.OcclusionArea
Наследуется от: Component
Поля:
Свойства:
  Vector3 center
  Vector3 size
Методы:
  Vector3 get_center()
  void set_center(Vector3 value)
  Vector3 get_size()
  void set_size(Vector3 value)
  void .ctor()
  void get_center_Injected(Vector3& ret)
  void set_center_Injected(Vector3& value)
  void get_size_Injected(Vector3& ret)
  void set_size_Injected(Vector3& value)
--------------------------------------------------
Класс: UnityEngine.Flare
Наследуется от: Object
Поля:
Свойства:
Методы:
  void .ctor()
  void Internal_Create(Flare self)
--------------------------------------------------
Класс: UnityEngine.LensFlare
Наследуется от: Behaviour
Поля:
Свойства:
  float brightness
  float fadeSpeed
  Color color
  Flare flare
Методы:
  float get_brightness()
  void set_brightness(float value)
  float get_fadeSpeed()
  void set_fadeSpeed(float value)
  Color get_color()
  void set_color(Color value)
  Flare get_flare()
  void set_flare(Flare value)
  void .ctor()
  void get_color_Injected(Color& ret)
  void set_color_Injected(Color& value)
--------------------------------------------------
Класс: UnityEngine.Projector
Наследуется от: Behaviour
Поля:
Свойства:
  float nearClipPlane
  float farClipPlane
  float fieldOfView
  float aspectRatio
  bool orthographic
  float orthographicSize
  int ignoreLayers
  Material material
Методы:
  float get_nearClipPlane()
  void set_nearClipPlane(float value)
  float get_farClipPlane()
  void set_farClipPlane(float value)
  float get_fieldOfView()
  void set_fieldOfView(float value)
  float get_aspectRatio()
  void set_aspectRatio(float value)
  bool get_orthographic()
  void set_orthographic(bool value)
  float get_orthographicSize()
  void set_orthographicSize(float value)
  int get_ignoreLayers()
  void set_ignoreLayers(int value)
  Material get_material()
  void set_material(Material value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LightBakingOutput
Наследуется от: ValueType
Поля:
  int probeOcclusionLightIndex
  int occlusionMaskChannel
  LightmapBakeType lightmapBakeType
  MixedLightingMode mixedLightingMode
  bool isBaked
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightShadowCasterMode
Наследуется от: Enum
Поля:
  int value__
  LightShadowCasterMode Default
  LightShadowCasterMode NonLightmappedOnly
  LightShadowCasterMode Everything
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Light
Наследуется от: Behaviour
Поля:
  int m_BakedIndex
Свойства:
  LightType type
  LightShape shape
  float spotAngle
  float innerSpotAngle
  Color color
  float colorTemperature
  bool useColorTemperature
  float intensity
  float bounceIntensity
  bool useBoundingSphereOverride
  Vector4 boundingSphereOverride
  bool useViewFrustumForShadowCasterCull
  int shadowCustomResolution
  float shadowBias
  float shadowNormalBias
  float shadowNearPlane
  bool useShadowMatrixOverride
  Matrix4x4 shadowMatrixOverride
  float range
  Flare flare
  LightBakingOutput bakingOutput
  int cullingMask
  int renderingLayerMask
  LightShadowCasterMode lightShadowCasterMode
  LightShadows shadows
  float shadowStrength
  LightShadowResolution shadowResolution
  float shadowSoftness
  float shadowSoftnessFade
  Single[] layerShadowCullDistances
  float cookieSize
  Texture cookie
  LightRenderMode renderMode
  int bakedIndex
  int commandBufferCount
  int pixelLightCount
  float shadowConstantBias
  float shadowObjectSizeBias
  bool attenuate
Методы:
  LightType get_type()
  void set_type(LightType value)
  LightShape get_shape()
  void set_shape(LightShape value)
  float get_spotAngle()
  void set_spotAngle(float value)
  float get_innerSpotAngle()
  void set_innerSpotAngle(float value)
  Color get_color()
  void set_color(Color value)
  float get_colorTemperature()
  void set_colorTemperature(float value)
  bool get_useColorTemperature()
  void set_useColorTemperature(bool value)
  float get_intensity()
  void set_intensity(float value)
  float get_bounceIntensity()
  void set_bounceIntensity(float value)
  bool get_useBoundingSphereOverride()
  void set_useBoundingSphereOverride(bool value)
  Vector4 get_boundingSphereOverride()
  void set_boundingSphereOverride(Vector4 value)
  bool get_useViewFrustumForShadowCasterCull()
  void set_useViewFrustumForShadowCasterCull(bool value)
  int get_shadowCustomResolution()
  void set_shadowCustomResolution(int value)
  float get_shadowBias()
  void set_shadowBias(float value)
  float get_shadowNormalBias()
  void set_shadowNormalBias(float value)
  float get_shadowNearPlane()
  void set_shadowNearPlane(float value)
  bool get_useShadowMatrixOverride()
  void set_useShadowMatrixOverride(bool value)
  Matrix4x4 get_shadowMatrixOverride()
  void set_shadowMatrixOverride(Matrix4x4 value)
  float get_range()
  void set_range(float value)
  Flare get_flare()
  void set_flare(Flare value)
  LightBakingOutput get_bakingOutput()
  void set_bakingOutput(LightBakingOutput value)
  int get_cullingMask()
  void set_cullingMask(int value)
  int get_renderingLayerMask()
  void set_renderingLayerMask(int value)
  LightShadowCasterMode get_lightShadowCasterMode()
  void set_lightShadowCasterMode(LightShadowCasterMode value)
  void Reset()
  LightShadows get_shadows()
  void set_shadows(LightShadows value)
  float get_shadowStrength()
  void set_shadowStrength(float value)
  LightShadowResolution get_shadowResolution()
  void set_shadowResolution(LightShadowResolution value)
  float get_shadowSoftness()
  void set_shadowSoftness(float value)
  float get_shadowSoftnessFade()
  void set_shadowSoftnessFade(float value)
  Single[] get_layerShadowCullDistances()
  void set_layerShadowCullDistances(Single[] value)
  float get_cookieSize()
  void set_cookieSize(float value)
  Texture get_cookie()
  void set_cookie(Texture value)
  LightRenderMode get_renderMode()
  void set_renderMode(LightRenderMode value)
  int get_bakedIndex()
  void set_bakedIndex(int value)
  void AddCommandBuffer(LightEvent evt, CommandBuffer buffer)
  void AddCommandBuffer(LightEvent evt, CommandBuffer buffer, ShadowMapPass shadowPassMask)
  void AddCommandBufferAsync(LightEvent evt, CommandBuffer buffer, ComputeQueueType queueType)
  void AddCommandBufferAsync(LightEvent evt, CommandBuffer buffer, ShadowMapPass shadowPassMask, ComputeQueueType queueType)
  void RemoveCommandBuffer(LightEvent evt, CommandBuffer buffer)
  void RemoveCommandBuffers(LightEvent evt)
  void RemoveAllCommandBuffers()
  CommandBuffer[] GetCommandBuffers(LightEvent evt)
  int get_commandBufferCount()
  int get_pixelLightCount()
  void set_pixelLightCount(int value)
  Light[] GetLights(LightType type, int layer)
  float get_shadowConstantBias()
  void set_shadowConstantBias(float value)
  float get_shadowObjectSizeBias()
  void set_shadowObjectSizeBias(float value)
  bool get_attenuate()
  void set_attenuate(bool value)
  void .ctor()
  void get_color_Injected(Color& ret)
  void set_color_Injected(Color& value)
  void get_boundingSphereOverride_Injected(Vector4& ret)
  void set_boundingSphereOverride_Injected(Vector4& value)
  void get_shadowMatrixOverride_Injected(Matrix4x4& ret)
  void set_shadowMatrixOverride_Injected(Matrix4x4& value)
  void get_bakingOutput_Injected(LightBakingOutput& ret)
  void set_bakingOutput_Injected(LightBakingOutput& value)
--------------------------------------------------
Класс: UnityEngine.Skybox
Наследуется от: Behaviour
Поля:
Свойства:
  Material material
Методы:
  Material get_material()
  void set_material(Material value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.MeshFilter
Наследуется от: Component
Поля:
Свойства:
  Mesh sharedMesh
  Mesh mesh
Методы:
  void DontStripMeshFilter()
  Mesh get_sharedMesh()
  void set_sharedMesh(Mesh value)
  Mesh get_mesh()
  void set_mesh(Mesh value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Halo
Наследуется от: Behaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.RenderingPath
Наследуется от: Enum
Поля:
  int value__
  RenderingPath UsePlayerSettings
  RenderingPath VertexLit
  RenderingPath Forward
  RenderingPath DeferredLighting
  RenderingPath DeferredShading
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TransparencySortMode
Наследуется от: Enum
Поля:
  int value__
  TransparencySortMode Default
  TransparencySortMode Perspective
  TransparencySortMode Orthographic
  TransparencySortMode CustomAxis
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.StereoTargetEyeMask
Наследуется от: Enum
Поля:
  int value__
  StereoTargetEyeMask None
  StereoTargetEyeMask Left
  StereoTargetEyeMask Right
  StereoTargetEyeMask Both
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CameraType
Наследуется от: Enum
Поля:
  int value__
  CameraType Game
  CameraType SceneView
  CameraType Preview
  CameraType VR
  CameraType Reflection
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ComputeBufferType
Наследуется от: Enum
Поля:
  int value__
  ComputeBufferType Default
  ComputeBufferType Raw
  ComputeBufferType Append
  ComputeBufferType Counter
  ComputeBufferType Constant
  ComputeBufferType Structured
  ComputeBufferType DrawIndirect
  ComputeBufferType IndirectArguments
  ComputeBufferType GPUMemory
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightType
Наследуется от: Enum
Поля:
  int value__
  LightType Spot
  LightType Directional
  LightType Point
  LightType Area
  LightType Rectangle
  LightType Disc
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightShape
Наследуется от: Enum
Поля:
  int value__
  LightShape Cone
  LightShape Pyramid
  LightShape Box
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightRenderMode
Наследуется от: Enum
Поля:
  int value__
  LightRenderMode Auto
  LightRenderMode ForcePixel
  LightRenderMode ForceVertex
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightShadows
Наследуется от: Enum
Поля:
  int value__
  LightShadows None
  LightShadows Hard
  LightShadows Soft
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.FogMode
Наследуется от: Enum
Поля:
  int value__
  FogMode Linear
  FogMode Exponential
  FogMode ExponentialSquared
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightmapBakeType
Наследуется от: Enum
Поля:
  int value__
  LightmapBakeType Realtime
  LightmapBakeType Baked
  LightmapBakeType Mixed
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.MixedLightingMode
Наследуется от: Enum
Поля:
  int value__
  MixedLightingMode IndirectOnly
  MixedLightingMode Shadowmask
  MixedLightingMode Subtractive
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ReceiveGI
Наследуется от: Enum
Поля:
  int value__
  ReceiveGI Lightmaps
  ReceiveGI LightProbes
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightmapCompression
Наследуется от: Enum
Поля:
  int value__
  LightmapCompression None
  LightmapCompression LowQuality
  LightmapCompression NormalQuality
  LightmapCompression HighQuality
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.QualityLevel
Наследуется от: Enum
Поля:
  int value__
  QualityLevel Fastest
  QualityLevel Fast
  QualityLevel Simple
  QualityLevel Good
  QualityLevel Beautiful
  QualityLevel Fantastic
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ShadowProjection
Наследуется от: Enum
Поля:
  int value__
  ShadowProjection CloseFit
  ShadowProjection StableFit
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ShadowQuality
Наследуется от: Enum
Поля:
  int value__
  ShadowQuality Disable
  ShadowQuality HardOnly
  ShadowQuality All
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ShadowResolution
Наследуется от: Enum
Поля:
  int value__
  ShadowResolution Low
  ShadowResolution Medium
  ShadowResolution High
  ShadowResolution VeryHigh
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ShadowmaskMode
Наследуется от: Enum
Поля:
  int value__
  ShadowmaskMode Shadowmask
  ShadowmaskMode DistanceShadowmask
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ShadowObjectsFilter
Наследуется от: Enum
Поля:
  int value__
  ShadowObjectsFilter AllObjects
  ShadowObjectsFilter DynamicOnly
  ShadowObjectsFilter StaticOnly
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CameraClearFlags
Наследуется от: Enum
Поля:
  int value__
  CameraClearFlags Skybox
  CameraClearFlags Color
  CameraClearFlags SolidColor
  CameraClearFlags Depth
  CameraClearFlags Nothing
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.DepthTextureMode
Наследуется от: Enum
Поля:
  int value__
  DepthTextureMode None
  DepthTextureMode Depth
  DepthTextureMode DepthNormals
  DepthTextureMode MotionVectors
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TexGenMode
Наследуется от: Enum
Поля:
  int value__
  TexGenMode None
  TexGenMode SphereMap
  TexGenMode Object
  TexGenMode EyeLinear
  TexGenMode CubeReflect
  TexGenMode CubeNormal
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.AnisotropicFiltering
Наследуется от: Enum
Поля:
  int value__
  AnisotropicFiltering Disable
  AnisotropicFiltering Enable
  AnisotropicFiltering ForceEnable
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.BlendWeights
Наследуется от: Enum
Поля:
  int value__
  BlendWeights OneBone
  BlendWeights TwoBones
  BlendWeights FourBones
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SkinWeights
Наследуется от: Enum
Поля:
  int value__
  SkinWeights OneBone
  SkinWeights TwoBones
  SkinWeights FourBones
  SkinWeights Unlimited
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.MeshTopology
Наследуется от: Enum
Поля:
  int value__
  MeshTopology Triangles
  MeshTopology Quads
  MeshTopology Lines
  MeshTopology LineStrip
  MeshTopology Points
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SkinQuality
Наследуется от: Enum
Поля:
  int value__
  SkinQuality Auto
  SkinQuality Bone1
  SkinQuality Bone2
  SkinQuality Bone4
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ColorSpace
Наследуется от: Enum
Поля:
  int value__
  ColorSpace Uninitialized
  ColorSpace Gamma
  ColorSpace Linear
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ColorGamut
Наследуется от: Enum
Поля:
  int value__
  ColorGamut sRGB
  ColorGamut Rec709
  ColorGamut Rec2020
  ColorGamut DisplayP3
  ColorGamut HDR10
  ColorGamut DolbyHDR
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ScreenOrientation
Наследуется от: Enum
Поля:
  int value__
  ScreenOrientation Unknown
  ScreenOrientation Landscape
  ScreenOrientation Portrait
  ScreenOrientation PortraitUpsideDown
  ScreenOrientation LandscapeLeft
  ScreenOrientation LandscapeRight
  ScreenOrientation AutoRotation
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.FilterMode
Наследуется от: Enum
Поля:
  int value__
  FilterMode Point
  FilterMode Bilinear
  FilterMode Trilinear
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextureWrapMode
Наследуется от: Enum
Поля:
  int value__
  TextureWrapMode Repeat
  TextureWrapMode Clamp
  TextureWrapMode Mirror
  TextureWrapMode MirrorOnce
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NPOTSupport
Наследуется от: Enum
Поля:
  int value__
  NPOTSupport None
  NPOTSupport Restricted
  NPOTSupport Full
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextureFormat
Наследуется от: Enum
Поля:
  int value__
  TextureFormat Alpha8
  TextureFormat ARGB4444
  TextureFormat RGB24
  TextureFormat RGBA32
  TextureFormat ARGB32
  TextureFormat RGB565
  TextureFormat R16
  TextureFormat DXT1
  TextureFormat DXT5
  TextureFormat RGBA4444
  TextureFormat BGRA32
  TextureFormat RHalf
  TextureFormat RGHalf
  TextureFormat RGBAHalf
  TextureFormat RFloat
  TextureFormat RGFloat
  TextureFormat RGBAFloat
  TextureFormat YUY2
  TextureFormat RGB9e5Float
  TextureFormat BC4
  TextureFormat BC5
  TextureFormat BC6H
  TextureFormat BC7
  TextureFormat DXT1Crunched
  TextureFormat DXT5Crunched
  TextureFormat PVRTC_RGB2
  TextureFormat PVRTC_RGBA2
  TextureFormat PVRTC_RGB4
  TextureFormat PVRTC_RGBA4
  TextureFormat ETC_RGB4
  TextureFormat EAC_R
  TextureFormat EAC_R_SIGNED
  TextureFormat EAC_RG
  TextureFormat EAC_RG_SIGNED
  TextureFormat ETC2_RGB
  TextureFormat ETC2_RGBA1
  TextureFormat ETC2_RGBA8
  TextureFormat ASTC_4x4
  TextureFormat ASTC_5x5
  TextureFormat ASTC_6x6
  TextureFormat ASTC_8x8
  TextureFormat ASTC_10x10
  TextureFormat ASTC_12x12
  TextureFormat ETC_RGB4_3DS
  TextureFormat ETC_RGBA8_3DS
  TextureFormat RG16
  TextureFormat R8
  TextureFormat ETC_RGB4Crunched
  TextureFormat ETC2_RGBA8Crunched
  TextureFormat ASTC_HDR_4x4
  TextureFormat ASTC_HDR_5x5
  TextureFormat ASTC_HDR_6x6
  TextureFormat ASTC_HDR_8x8
  TextureFormat ASTC_HDR_10x10
  TextureFormat ASTC_HDR_12x12
  TextureFormat RG32
  TextureFormat RGB48
  TextureFormat RGBA64
  TextureFormat ASTC_RGB_4x4
  TextureFormat ASTC_RGB_5x5
  TextureFormat ASTC_RGB_6x6
  TextureFormat ASTC_RGB_8x8
  TextureFormat ASTC_RGB_10x10
  TextureFormat ASTC_RGB_12x12
  TextureFormat ASTC_RGBA_4x4
  TextureFormat ASTC_RGBA_5x5
  TextureFormat ASTC_RGBA_6x6
  TextureFormat ASTC_RGBA_8x8
  TextureFormat ASTC_RGBA_10x10
  TextureFormat ASTC_RGBA_12x12
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TextureColorSpace
Наследуется от: Enum
Поля:
  int value__
  TextureColorSpace Linear
  TextureColorSpace sRGB
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CubemapFace
Наследуется от: Enum
Поля:
  int value__
  CubemapFace Unknown
  CubemapFace PositiveX
  CubemapFace NegativeX
  CubemapFace PositiveY
  CubemapFace NegativeY
  CubemapFace PositiveZ
  CubemapFace NegativeZ
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RenderTextureFormat
Наследуется от: Enum
Поля:
  int value__
  RenderTextureFormat ARGB32
  RenderTextureFormat Depth
  RenderTextureFormat ARGBHalf
  RenderTextureFormat Shadowmap
  RenderTextureFormat RGB565
  RenderTextureFormat ARGB4444
  RenderTextureFormat ARGB1555
  RenderTextureFormat Default
  RenderTextureFormat ARGB2101010
  RenderTextureFormat DefaultHDR
  RenderTextureFormat ARGB64
  RenderTextureFormat ARGBFloat
  RenderTextureFormat RGFloat
  RenderTextureFormat RGHalf
  RenderTextureFormat RFloat
  RenderTextureFormat RHalf
  RenderTextureFormat R8
  RenderTextureFormat ARGBInt
  RenderTextureFormat RGInt
  RenderTextureFormat RInt
  RenderTextureFormat BGRA32
  RenderTextureFormat RGB111110Float
  RenderTextureFormat RG32
  RenderTextureFormat RGBAUShort
  RenderTextureFormat RG16
  RenderTextureFormat BGRA10101010_XR
  RenderTextureFormat BGR101010_XR
  RenderTextureFormat R16
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.VRTextureUsage
Наследуется от: Enum
Поля:
  int value__
  VRTextureUsage None
  VRTextureUsage OneEye
  VRTextureUsage TwoEyes
  VRTextureUsage DeviceSpecific
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RenderTextureCreationFlags
Наследуется от: Enum
Поля:
  int value__
  RenderTextureCreationFlags MipMap
  RenderTextureCreationFlags AutoGenerateMips
  RenderTextureCreationFlags SRGB
  RenderTextureCreationFlags EyeTexture
  RenderTextureCreationFlags EnableRandomWrite
  RenderTextureCreationFlags CreatedFromScript
  RenderTextureCreationFlags AllowVerticalFlip
  RenderTextureCreationFlags NoResolvedColorSurface
  RenderTextureCreationFlags DynamicallyScalable
  RenderTextureCreationFlags BindMS
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RenderTextureReadWrite
Наследуется от: Enum
Поля:
  int value__
  RenderTextureReadWrite Default
  RenderTextureReadWrite Linear
  RenderTextureReadWrite sRGB
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RenderTextureMemoryless
Наследуется от: Enum
Поля:
  int value__
  RenderTextureMemoryless None
  RenderTextureMemoryless Color
  RenderTextureMemoryless Depth
  RenderTextureMemoryless MSAA
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.HDRDisplaySupportFlags
Наследуется от: Enum
Поля:
  int value__
  HDRDisplaySupportFlags None
  HDRDisplaySupportFlags Supported
  HDRDisplaySupportFlags RuntimeSwitchable
  HDRDisplaySupportFlags AutomaticTonemapping
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightmapsMode
Наследуется от: Enum
Поля:
  int value__
  LightmapsMode NonDirectional
  LightmapsMode CombinedDirectional
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.MaterialGlobalIlluminationFlags
Наследуется от: Enum
Поля:
  int value__
  MaterialGlobalIlluminationFlags None
  MaterialGlobalIlluminationFlags RealtimeEmissive
  MaterialGlobalIlluminationFlags BakedEmissive
  MaterialGlobalIlluminationFlags EmissiveIsBlack
  MaterialGlobalIlluminationFlags AnyEmissive
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LightProbeProxyVolume
Наследуется от: Behaviour
Поля:
Свойства:
  bool isFeatureSupported
  Bounds boundsGlobal
  Vector3 sizeCustom
  Vector3 originCustom
  float probeDensity
  int gridResolutionX
  int gridResolutionY
  int gridResolutionZ
  BoundingBoxMode boundingBoxMode
  ResolutionMode resolutionMode
  ProbePositionMode probePositionMode
  RefreshMode refreshMode
  QualityMode qualityMode
  DataFormat dataFormat
Методы:
  bool get_isFeatureSupported()
  Bounds get_boundsGlobal()
  Vector3 get_sizeCustom()
  void set_sizeCustom(Vector3 value)
  Vector3 get_originCustom()
  void set_originCustom(Vector3 value)
  float get_probeDensity()
  void set_probeDensity(float value)
  int get_gridResolutionX()
  void set_gridResolutionX(int value)
  int get_gridResolutionY()
  void set_gridResolutionY(int value)
  int get_gridResolutionZ()
  void set_gridResolutionZ(int value)
  BoundingBoxMode get_boundingBoxMode()
  void set_boundingBoxMode(BoundingBoxMode value)
  ResolutionMode get_resolutionMode()
  void set_resolutionMode(ResolutionMode value)
  ProbePositionMode get_probePositionMode()
  void set_probePositionMode(ProbePositionMode value)
  RefreshMode get_refreshMode()
  void set_refreshMode(RefreshMode value)
  QualityMode get_qualityMode()
  void set_qualityMode(QualityMode value)
  DataFormat get_dataFormat()
  void set_dataFormat(DataFormat value)
  void Update()
  void SetDirtyFlag(bool flag)
  void .ctor()
  void get_boundsGlobal_Injected(Bounds& ret)
  void get_sizeCustom_Injected(Vector3& ret)
  void set_sizeCustom_Injected(Vector3& value)
  void get_originCustom_Injected(Vector3& ret)
  void set_originCustom_Injected(Vector3& value)
--------------------------------------------------
Класс: UnityEngine.CustomRenderTextureInitializationSource
Наследуется от: Enum
Поля:
  int value__
  CustomRenderTextureInitializationSource TextureAndColor
  CustomRenderTextureInitializationSource Material
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CustomRenderTextureUpdateMode
Наследуется от: Enum
Поля:
  int value__
  CustomRenderTextureUpdateMode OnLoad
  CustomRenderTextureUpdateMode Realtime
  CustomRenderTextureUpdateMode OnDemand
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CustomRenderTextureUpdateZoneSpace
Наследуется от: Enum
Поля:
  int value__
  CustomRenderTextureUpdateZoneSpace Normalized
  CustomRenderTextureUpdateZoneSpace Pixel
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.MotionVectorGenerationMode
Наследуется от: Enum
Поля:
  int value__
  MotionVectorGenerationMode Camera
  MotionVectorGenerationMode Object
  MotionVectorGenerationMode ForceNoMotion
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LineTextureMode
Наследуется от: Enum
Поля:
  int value__
  LineTextureMode Stretch
  LineTextureMode Tile
  LineTextureMode DistributePerSegment
  LineTextureMode RepeatPerSegment
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LineAlignment
Наследуется от: Enum
Поля:
  int value__
  LineAlignment View
  LineAlignment Local
  LineAlignment TransformZ
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SkinnedMeshRenderer
Наследуется от: Renderer
Поля:
Свойства:
  SkinQuality quality
  bool updateWhenOffscreen
  bool forceMatrixRecalculationPerRender
  Transform rootBone
  Transform[] bones
  Mesh sharedMesh
  bool skinnedMotionVectors
  Target vertexBufferTarget
Методы:
  SkinQuality get_quality()
  void set_quality(SkinQuality value)
  bool get_updateWhenOffscreen()
  void set_updateWhenOffscreen(bool value)
  bool get_forceMatrixRecalculationPerRender()
  void set_forceMatrixRecalculationPerRender(bool value)
  Transform get_rootBone()
  void set_rootBone(Transform value)
  Transform[] get_bones()
  void set_bones(Transform[] value)
  Mesh get_sharedMesh()
  void set_sharedMesh(Mesh value)
  bool get_skinnedMotionVectors()
  void set_skinnedMotionVectors(bool value)
  float GetBlendShapeWeight(int index)
  void SetBlendShapeWeight(int index, float value)
  void BakeMesh(Mesh mesh)
  void BakeMesh(Mesh mesh, bool useScale)
  GraphicsBuffer GetVertexBuffer()
  GraphicsBuffer GetPreviousVertexBuffer()
  GraphicsBuffer GetVertexBufferImpl()
  GraphicsBuffer GetPreviousVertexBufferImpl()
  Target get_vertexBufferTarget()
  void set_vertexBufferTarget(Target value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.MeshRenderer
Наследуется от: Renderer
Поля:
Свойства:
  Mesh additionalVertexStreams
  Mesh enlightenVertexStream
  int subMeshStartIndex
Методы:
  void DontStripMeshRenderer()
  Mesh get_additionalVertexStreams()
  void set_additionalVertexStreams(Mesh value)
  Mesh get_enlightenVertexStream()
  void set_enlightenVertexStream(Mesh value)
  int get_subMeshStartIndex()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LightProbeGroup
Наследуется от: Behaviour
Поля:
Свойства:
  Vector3[] probePositions
Методы:
  Vector3[] get_probePositions()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LineUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  void Simplify(List`1<Vector3> points, float tolerance, List`1<int> pointsToKeep)
  void Simplify(List`1<Vector3> points, float tolerance, List`1<Vector3> simplifiedPoints)
  void Simplify(List`1<Vector2> points, float tolerance, List`1<int> pointsToKeep)
  void Simplify(List`1<Vector2> points, float tolerance, List`1<Vector2> simplifiedPoints)
  void GeneratePointsToKeep3D(object pointsList, float tolerance, object pointsToKeepList)
  void GeneratePointsToKeep2D(object pointsList, float tolerance, object pointsToKeepList)
  void GenerateSimplifiedPoints3D(object pointsList, float tolerance, object simplifiedPoints)
  void GenerateSimplifiedPoints2D(object pointsList, float tolerance, object simplifiedPoints)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LODFadeMode
Наследуется от: Enum
Поля:
  int value__
  LODFadeMode None
  LODFadeMode CrossFade
  LODFadeMode SpeedTree
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LOD
Наследуется от: ValueType
Поля:
  float screenRelativeTransitionHeight
  float fadeTransitionWidth
  Renderer[] renderers
Свойства:
Методы:
  void .ctor(float screenRelativeTransitionHeight, Renderer[] renderers)
--------------------------------------------------
Класс: UnityEngine.LODGroup
Наследуется от: Component
Поля:
Свойства:
  Vector3 localReferencePoint
  float size
  int lodCount
  LODFadeMode fadeMode
  bool animateCrossFading
  bool enabled
  float crossFadeAnimationDuration
  Vector3 worldReferencePoint
Методы:
  Vector3 get_localReferencePoint()
  void set_localReferencePoint(Vector3 value)
  float get_size()
  void set_size(float value)
  int get_lodCount()
  LODFadeMode get_fadeMode()
  void set_fadeMode(LODFadeMode value)
  bool get_animateCrossFading()
  void set_animateCrossFading(bool value)
  bool get_enabled()
  void set_enabled(bool value)
  void RecalculateBounds()
  LOD[] GetLODs()
  void SetLODS(LOD[] lods)
  void SetLODs(LOD[] lods)
  void ForceLOD(int index)
  float get_crossFadeAnimationDuration()
  void set_crossFadeAnimationDuration(float value)
  Vector3 get_worldReferencePoint()
  void .ctor()
  void get_localReferencePoint_Injected(Vector3& ret)
  void set_localReferencePoint_Injected(Vector3& value)
  void get_worldReferencePoint_Injected(Vector3& ret)
--------------------------------------------------
Класс: UnityEngine.Mesh
Наследуется от: Object
Поля:
Свойства:
  IndexFormat indexFormat
  int vertexBufferCount
  Target vertexBufferTarget
  Target indexBufferTarget
  int blendShapeCount
  Matrix4x4[] bindposes
  bool isReadable
  bool canAccess
  int vertexCount
  int subMeshCount
  Bounds bounds
  Vector3[] vertices
  Vector3[] normals
  Vector4[] tangents
  Vector2[] uv
  Vector2[] uv2
  Vector2[] uv3
  Vector2[] uv4
  Vector2[] uv5
  Vector2[] uv6
  Vector2[] uv7
  Vector2[] uv8
  Color[] colors
  Color32[] colors32
  int vertexAttributeCount
  Int32[] triangles
  BoneWeight[] boneWeights
Методы:
  void Internal_Create(Mesh mono)
  void .ctor()
  Mesh FromInstanceID(int id)
  IndexFormat get_indexFormat()
  void set_indexFormat(IndexFormat value)
  UInt32 GetTotalIndexCount()
  void SetIndexBufferParams(int indexCount, IndexFormat format)
  void InternalSetIndexBufferData(IntPtr data, int dataStart, int meshBufferStart, int count, int elemSize, MeshUpdateFlags flags)
  void InternalSetIndexBufferDataFromArray(Array data, int dataStart, int meshBufferStart, int count, int elemSize, MeshUpdateFlags flags)
  void SetVertexBufferParamsFromPtr(int vertexCount, IntPtr attributesPtr, int attributesCount)
  void SetVertexBufferParamsFromArray(int vertexCount, VertexAttributeDescriptor[] attributes)
  void InternalSetVertexBufferData(int stream, IntPtr data, int dataStart, int meshBufferStart, int count, int elemSize, MeshUpdateFlags flags)
  void InternalSetVertexBufferDataFromArray(int stream, Array data, int dataStart, int meshBufferStart, int count, int elemSize, MeshUpdateFlags flags)
  Array GetVertexAttributesAlloc()
  int GetVertexAttributesArray(VertexAttributeDescriptor[] attributes)
  int GetVertexAttributesList(List`1<VertexAttributeDescriptor> attributes)
  int GetVertexAttributeCountImpl()
  VertexAttributeDescriptor GetVertexAttribute(int index)
  UInt32 GetIndexStartImpl(int submesh)
  UInt32 GetIndexCountImpl(int submesh)
  UInt32 GetTrianglesCountImpl(int submesh)
  UInt32 GetBaseVertexImpl(int submesh)
  Int32[] GetTrianglesImpl(int submesh, bool applyBaseVertex)
  Int32[] GetIndicesImpl(int submesh, bool applyBaseVertex)
  void SetIndicesImpl(int submesh, MeshTopology topology, IndexFormat indicesFormat, Array indices, int arrayStart, int arraySize, bool calculateBounds, int baseVertex)
  void SetIndicesNativeArrayImpl(int submesh, MeshTopology topology, IndexFormat indicesFormat, IntPtr indices, int arrayStart, int arraySize, bool calculateBounds, int baseVertex)
  void GetTrianglesNonAllocImpl(Int32[] values, int submesh, bool applyBaseVertex)
  void GetTrianglesNonAllocImpl16(UInt16[] values, int submesh, bool applyBaseVertex)
  void GetIndicesNonAllocImpl(Int32[] values, int submesh, bool applyBaseVertex)
  void GetIndicesNonAllocImpl16(UInt16[] values, int submesh, bool applyBaseVertex)
  void PrintErrorCantAccessChannel(VertexAttribute ch)
  bool HasVertexAttribute(VertexAttribute attr)
  int GetVertexAttributeDimension(VertexAttribute attr)
  VertexAttributeFormat GetVertexAttributeFormat(VertexAttribute attr)
  int GetVertexAttributeStream(VertexAttribute attr)
  int GetVertexAttributeOffset(VertexAttribute attr)
  void SetArrayForChannelImpl(VertexAttribute channel, VertexAttributeFormat format, int dim, Array values, int arraySize, int valuesStart, int valuesCount, MeshUpdateFlags flags)
  void SetNativeArrayForChannelImpl(VertexAttribute channel, VertexAttributeFormat format, int dim, IntPtr values, int arraySize, int valuesStart, int valuesCount, MeshUpdateFlags flags)
  Array GetAllocArrayFromChannelImpl(VertexAttribute channel, VertexAttributeFormat format, int dim)
  void GetArrayFromChannelImpl(VertexAttribute channel, VertexAttributeFormat format, int dim, Array values)
  int get_vertexBufferCount()
  int GetVertexBufferStride(int stream)
  IntPtr GetNativeVertexBufferPtr(int index)
  IntPtr GetNativeIndexBufferPtr()
  GraphicsBuffer GetVertexBufferImpl(int index)
  GraphicsBuffer GetIndexBufferImpl()
  Target get_vertexBufferTarget()
  void set_vertexBufferTarget(Target value)
  Target get_indexBufferTarget()
  void set_indexBufferTarget(Target value)
  int get_blendShapeCount()
  void ClearBlendShapes()
  string GetBlendShapeName(int shapeIndex)
  int GetBlendShapeIndex(string blendShapeName)
  int GetBlendShapeFrameCount(int shapeIndex)
  float GetBlendShapeFrameWeight(int shapeIndex, int frameIndex)
  void GetBlendShapeFrameVertices(int shapeIndex, int frameIndex, Vector3[] deltaVertices, Vector3[] deltaNormals, Vector3[] deltaTangents)
  void AddBlendShapeFrame(string shapeName, float frameWeight, Vector3[] deltaVertices, Vector3[] deltaNormals, Vector3[] deltaTangents)
  bool HasBoneWeights()
  BoneWeight[] GetBoneWeightsImpl()
  void SetBoneWeightsImpl(BoneWeight[] weights)
  void SetBoneWeights(NativeArray`1<byte> bonesPerVertex, NativeArray`1<BoneWeight1> weights)
  void InternalSetBoneWeights(IntPtr bonesPerVertex, int bonesPerVertexSize, IntPtr weights, int weightsSize)
  NativeArray`1<BoneWeight1> GetAllBoneWeights()
  NativeArray`1<byte> GetBonesPerVertex()
  int GetAllBoneWeightsArraySize()
  IntPtr GetAllBoneWeightsArray()
  IntPtr GetBonesPerVertexArray()
  int GetBindposeCount()
  Matrix4x4[] get_bindposes()
  void set_bindposes(Matrix4x4[] value)
  void GetBoneWeightsNonAllocImpl(BoneWeight[] values)
  void GetBindposesNonAllocImpl(Matrix4x4[] values)
  bool get_isReadable()
  bool get_canAccess()
  int get_vertexCount()
  int get_subMeshCount()
  void set_subMeshCount(int value)
  void SetSubMesh(int index, SubMeshDescriptor desc, MeshUpdateFlags flags)
  SubMeshDescriptor GetSubMesh(int index)
  void SetAllSubMeshesAtOnceFromArray(SubMeshDescriptor[] desc, int start, int count, MeshUpdateFlags flags)
  void SetAllSubMeshesAtOnceFromNativeArray(IntPtr desc, int start, int count, MeshUpdateFlags flags)
  Bounds get_bounds()
  void set_bounds(Bounds value)
  void ClearImpl(bool keepVertexLayout)
  void RecalculateBoundsImpl(MeshUpdateFlags flags)
  void RecalculateNormalsImpl(MeshUpdateFlags flags)
  void RecalculateTangentsImpl(MeshUpdateFlags flags)
  void MarkDynamicImpl()
  void MarkModified()
  void UploadMeshDataImpl(bool markNoLongerReadable)
  MeshTopology GetTopologyImpl(int submesh)
  void RecalculateUVDistributionMetricImpl(int uvSetIndex, float uvAreaThreshold)
  void RecalculateUVDistributionMetricsImpl(float uvAreaThreshold)
  float GetUVDistributionMetric(int uvSetIndex)
  void CombineMeshesImpl(CombineInstance[] combine, bool mergeSubMeshes, bool useMatrices, bool hasLightmapData)
  void OptimizeImpl()
  void OptimizeIndexBuffersImpl()
  void OptimizeReorderVertexBufferImpl()
  VertexAttribute GetUVChannel(int uvIndex)
  int DefaultDimensionForChannel(VertexAttribute channel)
  T[] GetAllocArrayFromChannel(VertexAttribute channel, VertexAttributeFormat format, int dim)
  T[] GetAllocArrayFromChannel(VertexAttribute channel)
  void SetSizedArrayForChannel(VertexAttribute channel, VertexAttributeFormat format, int dim, Array values, int valuesArrayLength, int valuesStart, int valuesCount, MeshUpdateFlags flags)
  void SetSizedNativeArrayForChannel(VertexAttribute channel, VertexAttributeFormat format, int dim, IntPtr values, int valuesArrayLength, int valuesStart, int valuesCount, MeshUpdateFlags flags)
  void SetArrayForChannel(VertexAttribute channel, VertexAttributeFormat format, int dim, T[] values, MeshUpdateFlags flags)
  void SetArrayForChannel(VertexAttribute channel, T[] values, MeshUpdateFlags flags)
  void SetListForChannel(VertexAttribute channel, VertexAttributeFormat format, int dim, List`1<T> values, int start, int length, MeshUpdateFlags flags)
  void SetListForChannel(VertexAttribute channel, List`1<T> values, int start, int length, MeshUpdateFlags flags)
  void GetListForChannel(List`1<T> buffer, int capacity, VertexAttribute channel, int dim)
  void GetListForChannel(List`1<T> buffer, int capacity, VertexAttribute channel, int dim, VertexAttributeFormat channelType)
  Vector3[] get_vertices()
  void set_vertices(Vector3[] value)
  Vector3[] get_normals()
  void set_normals(Vector3[] value)
  Vector4[] get_tangents()
  void set_tangents(Vector4[] value)
  Vector2[] get_uv()
  void set_uv(Vector2[] value)
  Vector2[] get_uv2()
  void set_uv2(Vector2[] value)
  Vector2[] get_uv3()
  void set_uv3(Vector2[] value)
  Vector2[] get_uv4()
  void set_uv4(Vector2[] value)
  Vector2[] get_uv5()
  void set_uv5(Vector2[] value)
  Vector2[] get_uv6()
  void set_uv6(Vector2[] value)
  Vector2[] get_uv7()
  void set_uv7(Vector2[] value)
  Vector2[] get_uv8()
  void set_uv8(Vector2[] value)
  Color[] get_colors()
  void set_colors(Color[] value)
  Color32[] get_colors32()
  void set_colors32(Color32[] value)
  void GetVertices(List`1<Vector3> vertices)
  void SetVertices(List`1<Vector3> inVertices)
  void SetVertices(List`1<Vector3> inVertices, int start, int length)
  void SetVertices(List`1<Vector3> inVertices, int start, int length, MeshUpdateFlags flags)
  void SetVertices(Vector3[] inVertices)
  void SetVertices(Vector3[] inVertices, int start, int length)
  void SetVertices(Vector3[] inVertices, int start, int length, MeshUpdateFlags flags)
  void SetVertices(NativeArray`1<T> inVertices)
  void SetVertices(NativeArray`1<T> inVertices, int start, int length)
  void SetVertices(NativeArray`1<T> inVertices, int start, int length, MeshUpdateFlags flags)
  void GetNormals(List`1<Vector3> normals)
  void SetNormals(List`1<Vector3> inNormals)
  void SetNormals(List`1<Vector3> inNormals, int start, int length)
  void SetNormals(List`1<Vector3> inNormals, int start, int length, MeshUpdateFlags flags)
  void SetNormals(Vector3[] inNormals)
  void SetNormals(Vector3[] inNormals, int start, int length)
  void SetNormals(Vector3[] inNormals, int start, int length, MeshUpdateFlags flags)
  void SetNormals(NativeArray`1<T> inNormals)
  void SetNormals(NativeArray`1<T> inNormals, int start, int length)
  void SetNormals(NativeArray`1<T> inNormals, int start, int length, MeshUpdateFlags flags)
  void GetTangents(List`1<Vector4> tangents)
  void SetTangents(List`1<Vector4> inTangents)
  void SetTangents(List`1<Vector4> inTangents, int start, int length)
  void SetTangents(List`1<Vector4> inTangents, int start, int length, MeshUpdateFlags flags)
  void SetTangents(Vector4[] inTangents)
  void SetTangents(Vector4[] inTangents, int start, int length)
  void SetTangents(Vector4[] inTangents, int start, int length, MeshUpdateFlags flags)
  void SetTangents(NativeArray`1<T> inTangents)
  void SetTangents(NativeArray`1<T> inTangents, int start, int length)
  void SetTangents(NativeArray`1<T> inTangents, int start, int length, MeshUpdateFlags flags)
  void GetColors(List`1<Color> colors)
  void SetColors(List`1<Color> inColors)
  void SetColors(List`1<Color> inColors, int start, int length)
  void SetColors(List`1<Color> inColors, int start, int length, MeshUpdateFlags flags)
  void SetColors(Color[] inColors)
  void SetColors(Color[] inColors, int start, int length)
  void SetColors(Color[] inColors, int start, int length, MeshUpdateFlags flags)
  void GetColors(List`1<Color32> colors)
  void SetColors(List`1<Color32> inColors)
  void SetColors(List`1<Color32> inColors, int start, int length)
  void SetColors(List`1<Color32> inColors, int start, int length, MeshUpdateFlags flags)
  void SetColors(Color32[] inColors)
  void SetColors(Color32[] inColors, int start, int length)
  void SetColors(Color32[] inColors, int start, int length, MeshUpdateFlags flags)
  void SetColors(NativeArray`1<T> inColors)
  void SetColors(NativeArray`1<T> inColors, int start, int length)
  void SetColors(NativeArray`1<T> inColors, int start, int length, MeshUpdateFlags flags)
  void SetUvsImpl(int uvIndex, int dim, List`1<T> uvs, int start, int length, MeshUpdateFlags flags)
  void SetUVs(int channel, List`1<Vector2> uvs)
  void SetUVs(int channel, List`1<Vector3> uvs)
  void SetUVs(int channel, List`1<Vector4> uvs)
  void SetUVs(int channel, List`1<Vector2> uvs, int start, int length)
  void SetUVs(int channel, List`1<Vector2> uvs, int start, int length, MeshUpdateFlags flags)
  void SetUVs(int channel, List`1<Vector3> uvs, int start, int length)
  void SetUVs(int channel, List`1<Vector3> uvs, int start, int length, MeshUpdateFlags flags)
  void SetUVs(int channel, List`1<Vector4> uvs, int start, int length)
  void SetUVs(int channel, List`1<Vector4> uvs, int start, int length, MeshUpdateFlags flags)
  void SetUvsImpl(int uvIndex, int dim, Array uvs, int arrayStart, int arraySize, MeshUpdateFlags flags)
  void SetUVs(int channel, Vector2[] uvs)
  void SetUVs(int channel, Vector3[] uvs)
  void SetUVs(int channel, Vector4[] uvs)
  void SetUVs(int channel, Vector2[] uvs, int start, int length)
  void SetUVs(int channel, Vector2[] uvs, int start, int length, MeshUpdateFlags flags)
  void SetUVs(int channel, Vector3[] uvs, int start, int length)
  void SetUVs(int channel, Vector3[] uvs, int start, int length, MeshUpdateFlags flags)
  void SetUVs(int channel, Vector4[] uvs, int start, int length)
  void SetUVs(int channel, Vector4[] uvs, int start, int length, MeshUpdateFlags flags)
  void SetUVs(int channel, NativeArray`1<T> uvs)
  void SetUVs(int channel, NativeArray`1<T> uvs, int start, int length)
  void SetUVs(int channel, NativeArray`1<T> uvs, int start, int length, MeshUpdateFlags flags)
  void GetUVsImpl(int uvIndex, List`1<T> uvs, int dim)
  void GetUVs(int channel, List`1<Vector2> uvs)
  void GetUVs(int channel, List`1<Vector3> uvs)
  void GetUVs(int channel, List`1<Vector4> uvs)
  int get_vertexAttributeCount()
  VertexAttributeDescriptor[] GetVertexAttributes()
  int GetVertexAttributes(VertexAttributeDescriptor[] attributes)
  int GetVertexAttributes(List`1<VertexAttributeDescriptor> attributes)
  void SetVertexBufferParams(int vertexCount, VertexAttributeDescriptor[] attributes)
  void SetVertexBufferParams(int vertexCount, NativeArray`1<VertexAttributeDescriptor> attributes)
  void SetVertexBufferData(NativeArray`1<T> data, int dataStart, int meshBufferStart, int count, int stream, MeshUpdateFlags flags)
  void SetVertexBufferData(T[] data, int dataStart, int meshBufferStart, int count, int stream, MeshUpdateFlags flags)
  void SetVertexBufferData(List`1<T> data, int dataStart, int meshBufferStart, int count, int stream, MeshUpdateFlags flags)
  MeshDataArray AcquireReadOnlyMeshData(Mesh mesh)
  MeshDataArray AcquireReadOnlyMeshData(Mesh[] meshes)
  MeshDataArray AcquireReadOnlyMeshData(List`1<Mesh> meshes)
  MeshDataArray AllocateWritableMeshData(int meshCount)
  void ApplyAndDisposeWritableMeshData(MeshDataArray data, Mesh mesh, MeshUpdateFlags flags)
  void ApplyAndDisposeWritableMeshData(MeshDataArray data, Mesh[] meshes, MeshUpdateFlags flags)
  void ApplyAndDisposeWritableMeshData(MeshDataArray data, List`1<Mesh> meshes, MeshUpdateFlags flags)
  GraphicsBuffer GetVertexBuffer(int index)
  GraphicsBuffer GetIndexBuffer()
  void PrintErrorCantAccessIndices()
  bool CheckCanAccessSubmesh(int submesh, bool errorAboutTriangles)
  bool CheckCanAccessSubmeshTriangles(int submesh)
  bool CheckCanAccessSubmeshIndices(int submesh)
  Int32[] get_triangles()
  void set_triangles(Int32[] value)
  Int32[] GetTriangles(int submesh)
  Int32[] GetTriangles(int submesh, bool applyBaseVertex)
  void GetTriangles(List`1<int> triangles, int submesh)
  void GetTriangles(List`1<int> triangles, int submesh, bool applyBaseVertex)
  void GetTriangles(List`1<ushort> triangles, int submesh, bool applyBaseVertex)
  Int32[] GetIndices(int submesh)
  Int32[] GetIndices(int submesh, bool applyBaseVertex)
  void GetIndices(List`1<int> indices, int submesh)
  void GetIndices(List`1<int> indices, int submesh, bool applyBaseVertex)
  void GetIndices(List`1<ushort> indices, int submesh, bool applyBaseVertex)
  void SetIndexBufferData(NativeArray`1<T> data, int dataStart, int meshBufferStart, int count, MeshUpdateFlags flags)
  void SetIndexBufferData(T[] data, int dataStart, int meshBufferStart, int count, MeshUpdateFlags flags)
  void SetIndexBufferData(List`1<T> data, int dataStart, int meshBufferStart, int count, MeshUpdateFlags flags)
  UInt32 GetIndexStart(int submesh)
  UInt32 GetIndexCount(int submesh)
  UInt32 GetBaseVertex(int submesh)
  void CheckIndicesArrayRange(int valuesLength, int start, int length)
  void SetTrianglesImpl(int submesh, IndexFormat indicesFormat, Array triangles, int trianglesArrayLength, int start, int length, bool calculateBounds, int baseVertex)
  void SetTriangles(Int32[] triangles, int submesh)
  void SetTriangles(Int32[] triangles, int submesh, bool calculateBounds)
  void SetTriangles(Int32[] triangles, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(Int32[] triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(UInt16[] triangles, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(UInt16[] triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(List`1<int> triangles, int submesh)
  void SetTriangles(List`1<int> triangles, int submesh, bool calculateBounds)
  void SetTriangles(List`1<int> triangles, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(List`1<int> triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(List`1<ushort> triangles, int submesh, bool calculateBounds, int baseVertex)
  void SetTriangles(List`1<ushort> triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(Int32[] indices, MeshTopology topology, int submesh)
  void SetIndices(Int32[] indices, MeshTopology topology, int submesh, bool calculateBounds)
  void SetIndices(Int32[] indices, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(Int32[] indices, int indicesStart, int indicesLength, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(UInt16[] indices, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(UInt16[] indices, int indicesStart, int indicesLength, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(NativeArray`1<T> indices, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(NativeArray`1<T> indices, int indicesStart, int indicesLength, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(List`1<int> indices, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(List`1<int> indices, int indicesStart, int indicesLength, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(List`1<ushort> indices, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetIndices(List`1<ushort> indices, int indicesStart, int indicesLength, MeshTopology topology, int submesh, bool calculateBounds, int baseVertex)
  void SetSubMeshes(SubMeshDescriptor[] desc, int start, int count, MeshUpdateFlags flags)
  void SetSubMeshes(SubMeshDescriptor[] desc, MeshUpdateFlags flags)
  void SetSubMeshes(List`1<SubMeshDescriptor> desc, int start, int count, MeshUpdateFlags flags)
  void SetSubMeshes(List`1<SubMeshDescriptor> desc, MeshUpdateFlags flags)
  void SetSubMeshes(NativeArray`1<T> desc, int start, int count, MeshUpdateFlags flags)
  void SetSubMeshes(NativeArray`1<T> desc, MeshUpdateFlags flags)
  void GetBindposes(List`1<Matrix4x4> bindposes)
  void GetBoneWeights(List`1<BoneWeight> boneWeights)
  BoneWeight[] get_boneWeights()
  void set_boneWeights(BoneWeight[] value)
  void Clear(bool keepVertexLayout)
  void Clear()
  void RecalculateBounds()
  void RecalculateNormals()
  void RecalculateTangents()
  void RecalculateBounds(MeshUpdateFlags flags)
  void RecalculateNormals(MeshUpdateFlags flags)
  void RecalculateTangents(MeshUpdateFlags flags)
  void RecalculateUVDistributionMetric(int uvSetIndex, float uvAreaThreshold)
  void RecalculateUVDistributionMetrics(float uvAreaThreshold)
  void MarkDynamic()
  void UploadMeshData(bool markNoLongerReadable)
  void Optimize()
  void OptimizeIndexBuffers()
  void OptimizeReorderVertexBuffer()
  MeshTopology GetTopology(int submesh)
  void CombineMeshes(CombineInstance[] combine, bool mergeSubMeshes, bool useMatrices, bool hasLightmapData)
  void CombineMeshes(CombineInstance[] combine, bool mergeSubMeshes, bool useMatrices)
  void CombineMeshes(CombineInstance[] combine, bool mergeSubMeshes)
  void CombineMeshes(CombineInstance[] combine)
  void GetVertexAttribute_Injected(int index, VertexAttributeDescriptor& ret)
  void SetSubMesh_Injected(int index, SubMeshDescriptor& desc, MeshUpdateFlags flags)
  void GetSubMesh_Injected(int index, SubMeshDescriptor& ret)
  void get_bounds_Injected(Bounds& ret)
  void set_bounds_Injected(Bounds& value)
--------------------------------------------------
Класс: UnityEngine.StaticBatchingHelper
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  Mesh InternalCombineVertices(MeshInstance[] meshes, string meshName)
  void InternalCombineIndices(SubMeshInstance[] submeshes, Mesh combinedMesh)
  bool IsMeshBatchable(Mesh mesh)
--------------------------------------------------
Класс: UnityEngine.BoneWeight
Наследуется от: ValueType
Поля:
  float m_Weight0
  float m_Weight1
  float m_Weight2
  float m_Weight3
  int m_BoneIndex0
  int m_BoneIndex1
  int m_BoneIndex2
  int m_BoneIndex3
Свойства:
  float weight0
  float weight1
  float weight2
  float weight3
  int boneIndex0
  int boneIndex1
  int boneIndex2
  int boneIndex3
Методы:
  float get_weight0()
  void set_weight0(float value)
  float get_weight1()
  void set_weight1(float value)
  float get_weight2()
  void set_weight2(float value)
  float get_weight3()
  void set_weight3(float value)
  int get_boneIndex0()
  void set_boneIndex0(int value)
  int get_boneIndex1()
  void set_boneIndex1(int value)
  int get_boneIndex2()
  void set_boneIndex2(int value)
  int get_boneIndex3()
  void set_boneIndex3(int value)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(BoneWeight other)
  bool op_Equality(BoneWeight lhs, BoneWeight rhs)
  bool op_Inequality(BoneWeight lhs, BoneWeight rhs)
--------------------------------------------------
Класс: UnityEngine.BoneWeight1
Наследуется от: ValueType
Поля:
  float m_Weight
  int m_BoneIndex
Свойства:
  float weight
  int boneIndex
Методы:
  float get_weight()
  void set_weight(float value)
  int get_boneIndex()
  void set_boneIndex(int value)
  bool Equals(object other)
  bool Equals(BoneWeight1 other)
  int GetHashCode()
  bool op_Equality(BoneWeight1 lhs, BoneWeight1 rhs)
  bool op_Inequality(BoneWeight1 lhs, BoneWeight1 rhs)
--------------------------------------------------
Класс: UnityEngine.CombineInstance
Наследуется от: ValueType
Поля:
  int m_MeshInstanceID
  int m_SubMeshIndex
  Matrix4x4 m_Transform
  Vector4 m_LightmapScaleOffset
  Vector4 m_RealtimeLightmapScaleOffset
Свойства:
  Mesh mesh
  int subMeshIndex
  Matrix4x4 transform
  Vector4 lightmapScaleOffset
  Vector4 realtimeLightmapScaleOffset
Методы:
  Mesh get_mesh()
  void set_mesh(Mesh value)
  int get_subMeshIndex()
  void set_subMeshIndex(int value)
  Matrix4x4 get_transform()
  void set_transform(Matrix4x4 value)
  Vector4 get_lightmapScaleOffset()
  void set_lightmapScaleOffset(Vector4 value)
  Vector4 get_realtimeLightmapScaleOffset()
  void set_realtimeLightmapScaleOffset(Vector4 value)
--------------------------------------------------
Класс: UnityEngine.Texture
Наследуется от: Object
Поля:
  int GenerateAllMips
Свойства:
  int masterTextureLimit
  int mipmapCount
  AnisotropicFiltering anisotropicFiltering
  GraphicsFormat graphicsFormat
  int width
  int height
  TextureDimension dimension
  bool isReadable
  TextureWrapMode wrapMode
  TextureWrapMode wrapModeU
  TextureWrapMode wrapModeV
  TextureWrapMode wrapModeW
  FilterMode filterMode
  int anisoLevel
  float mipMapBias
  Vector2 texelSize
  UInt32 updateCount
  ColorSpace activeTextureColorSpace
  bool isDataSRGB
  ulong totalTextureMemory
  ulong desiredTextureMemory
  ulong targetTextureMemory
  ulong currentTextureMemory
  ulong nonStreamingTextureMemory
  ulong streamingMipmapUploadCount
  ulong streamingRendererCount
  ulong streamingTextureCount
  ulong nonStreamingTextureCount
  ulong streamingTexturePendingLoadCount
  ulong streamingTextureLoadingCount
  bool streamingTextureForceLoadAll
  bool streamingTextureDiscardUnusedMips
  bool allowThreadedTextureCreation
Методы:
  void .ctor()
  int get_masterTextureLimit()
  void set_masterTextureLimit(int value)
  int get_mipmapCount()
  AnisotropicFiltering get_anisotropicFiltering()
  void set_anisotropicFiltering(AnisotropicFiltering value)
  void SetGlobalAnisotropicFilteringLimits(int forcedMin, int globalMax)
  GraphicsFormat get_graphicsFormat()
  int GetDataWidth()
  int GetDataHeight()
  TextureDimension GetDimension()
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
  TextureDimension get_dimension()
  void set_dimension(TextureDimension value)
  bool get_isReadable()
  TextureWrapMode get_wrapMode()
  void set_wrapMode(TextureWrapMode value)
  TextureWrapMode get_wrapModeU()
  void set_wrapModeU(TextureWrapMode value)
  TextureWrapMode get_wrapModeV()
  void set_wrapModeV(TextureWrapMode value)
  TextureWrapMode get_wrapModeW()
  void set_wrapModeW(TextureWrapMode value)
  FilterMode get_filterMode()
  void set_filterMode(FilterMode value)
  int get_anisoLevel()
  void set_anisoLevel(int value)
  float get_mipMapBias()
  void set_mipMapBias(float value)
  Vector2 get_texelSize()
  IntPtr GetNativeTexturePtr()
  int GetNativeTextureID()
  UInt32 get_updateCount()
  void IncrementUpdateCount()
  int Internal_GetActiveTextureColorSpace()
  ColorSpace get_activeTextureColorSpace()
  TextureColorSpace Internal_GetStoredColorSpace()
  bool get_isDataSRGB()
  ulong get_totalTextureMemory()
  ulong get_desiredTextureMemory()
  ulong get_targetTextureMemory()
  ulong get_currentTextureMemory()
  ulong get_nonStreamingTextureMemory()
  ulong get_streamingMipmapUploadCount()
  ulong get_streamingRendererCount()
  ulong get_streamingTextureCount()
  ulong get_nonStreamingTextureCount()
  ulong get_streamingTexturePendingLoadCount()
  ulong get_streamingTextureLoadingCount()
  void SetStreamingTextureMaterialDebugProperties()
  bool get_streamingTextureForceLoadAll()
  void set_streamingTextureForceLoadAll(bool value)
  bool get_streamingTextureDiscardUnusedMips()
  void set_streamingTextureDiscardUnusedMips(bool value)
  bool get_allowThreadedTextureCreation()
  void set_allowThreadedTextureCreation(bool value)
  ulong GetPixelDataSize(int mipLevel, int element)
  ulong GetPixelDataOffset(int mipLevel, int element)
  TextureColorSpace GetTextureColorSpace(bool linear)
  TextureColorSpace GetTextureColorSpace(GraphicsFormat format)
  bool ValidateFormat(RenderTextureFormat format)
  bool ValidateFormat(TextureFormat format)
  bool ValidateFormat(GraphicsFormat format, FormatUsage usage)
  UnityException CreateNonReadableException(Texture t)
  UnityException CreateNativeArrayLengthOverflowException()
  void .cctor()
  void get_texelSize_Injected(Vector2& ret)
--------------------------------------------------
Класс: UnityEngine.Texture2D
Наследуется от: Texture
Поля:
  int streamingMipmapsPriorityMin
  int streamingMipmapsPriorityMax
Свойства:
  TextureFormat format
  bool ignoreMipmapLimit
  Texture2D whiteTexture
  Texture2D blackTexture
  Texture2D redTexture
  Texture2D grayTexture
  Texture2D linearGrayTexture
  Texture2D normalTexture
  bool isReadable
  bool vtOnly
  bool isPreProcessed
  bool streamingMipmaps
  int streamingMipmapsPriority
  int requestedMipmapLevel
  int minimumMipmapLevel
  bool loadAllMips
  int calculatedMipmapLevel
  int desiredMipmapLevel
  int loadingMipmapLevel
  int loadedMipmapLevel
Методы:
  TextureFormat get_format()
  bool get_ignoreMipmapLimit()
  void set_ignoreMipmapLimit(bool value)
  Texture2D get_whiteTexture()
  Texture2D get_blackTexture()
  Texture2D get_redTexture()
  Texture2D get_grayTexture()
  Texture2D get_linearGrayTexture()
  Texture2D get_normalTexture()
  void Compress(bool highQuality)
  bool Internal_CreateImpl(Texture2D mono, int w, int h, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags, IntPtr nativeTex)
  void Internal_Create(Texture2D mono, int w, int h, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags, IntPtr nativeTex)
  bool get_isReadable()
  bool get_vtOnly()
  void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable)
  bool ReinitializeImpl(int width, int height)
  void SetPixelImpl(int image, int mip, int x, int y, Color color)
  Color GetPixelImpl(int image, int mip, int x, int y)
  Color GetPixelBilinearImpl(int image, int mip, float u, float v)
  bool ReinitializeWithFormatImpl(int width, int height, GraphicsFormat format, bool hasMipMap)
  void ReadPixelsImpl(Rect source, int destX, int destY, bool recalculateMipMaps)
  void SetPixelsImpl(int x, int y, int w, int h, Color[] pixel, int miplevel, int frame)
  bool LoadRawTextureDataImpl(IntPtr data, ulong size)
  bool LoadRawTextureDataImplArray(Byte[] data)
  bool SetPixelDataImplArray(Array data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex)
  bool SetPixelDataImpl(IntPtr data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex)
  IntPtr GetWritableImageData(int frame)
  ulong GetRawImageDataSize()
  void GenerateAtlasImpl(Vector2[] sizes, int padding, int atlasSize, Rect[] rect)
  bool get_isPreProcessed()
  bool get_streamingMipmaps()
  int get_streamingMipmapsPriority()
  int get_requestedMipmapLevel()
  void set_requestedMipmapLevel(int value)
  int get_minimumMipmapLevel()
  void set_minimumMipmapLevel(int value)
  bool get_loadAllMips()
  void set_loadAllMips(bool value)
  int get_calculatedMipmapLevel()
  int get_desiredMipmapLevel()
  int get_loadingMipmapLevel()
  int get_loadedMipmapLevel()
  void ClearRequestedMipmapLevel()
  bool IsRequestedMipmapLevelLoaded()
  void ClearMinimumMipmapLevel()
  void UpdateExternalTexture(IntPtr nativeTex)
  void SetAllPixels32(Color32[] colors, int miplevel)
  void SetBlockOfPixels32(int x, int y, int blockWidth, int blockHeight, Color32[] colors, int miplevel)
  Byte[] GetRawTextureData()
  Color[] GetPixels(int x, int y, int blockWidth, int blockHeight, int miplevel)
  Color[] GetPixels(int x, int y, int blockWidth, int blockHeight)
  Color32[] GetPixels32(int miplevel)
  Color32[] GetPixels32()
  Rect[] PackTextures(Texture2D[] textures, int padding, int maximumAtlasSize, bool makeNoLongerReadable)
  Rect[] PackTextures(Texture2D[] textures, int padding, int maximumAtlasSize)
  Rect[] PackTextures(Texture2D[] textures, int padding)
  bool ValidateFormat(TextureFormat format, int width, int height)
  bool ValidateFormat(GraphicsFormat format, int width, int height)
  void .ctor(int width, int height, GraphicsFormat format, TextureCreationFlags flags, int mipCount, IntPtr nativeTex)
  void .ctor(int width, int height, DefaultFormat format, TextureCreationFlags flags)
  void .ctor(int width, int height, GraphicsFormat format, TextureCreationFlags flags)
  void .ctor(int width, int height, GraphicsFormat format, int mipCount, TextureCreationFlags flags)
  void .ctor(int width, int height, TextureFormat textureFormat, int mipCount, bool linear, IntPtr nativeTex)
  void .ctor(int width, int height, TextureFormat textureFormat, int mipCount, bool linear)
  void .ctor(int width, int height, TextureFormat textureFormat, bool mipChain, bool linear)
  void .ctor(int width, int height, TextureFormat textureFormat, bool mipChain)
  void .ctor(int width, int height)
  Texture2D CreateExternalTexture(int width, int height, TextureFormat format, bool mipChain, bool linear, IntPtr nativeTex)
  void SetPixel(int x, int y, Color color)
  void SetPixel(int x, int y, Color color, int mipLevel)
  void SetPixels(int x, int y, int blockWidth, int blockHeight, Color[] colors, int miplevel)
  void SetPixels(int x, int y, int blockWidth, int blockHeight, Color[] colors)
  void SetPixels(Color[] colors, int miplevel)
  void SetPixels(Color[] colors)
  Color GetPixel(int x, int y)
  Color GetPixel(int x, int y, int mipLevel)
  Color GetPixelBilinear(float u, float v)
  Color GetPixelBilinear(float u, float v, int mipLevel)
  void LoadRawTextureData(IntPtr data, int size)
  void LoadRawTextureData(Byte[] data)
  void LoadRawTextureData(NativeArray`1<T> data)
  void SetPixelData(T[] data, int mipLevel, int sourceDataStartIndex)
  void SetPixelData(NativeArray`1<T> data, int mipLevel, int sourceDataStartIndex)
  NativeArray`1<T> GetPixelData(int mipLevel)
  NativeArray`1<T> GetRawTextureData()
  void Apply(bool updateMipmaps, bool makeNoLongerReadable)
  void Apply(bool updateMipmaps)
  void Apply()
  bool Reinitialize(int width, int height)
  bool Reinitialize(int width, int height, TextureFormat format, bool hasMipMap)
  bool Reinitialize(int width, int height, GraphicsFormat format, bool hasMipMap)
  bool Resize(int width, int height)
  bool Resize(int width, int height, TextureFormat format, bool hasMipMap)
  bool Resize(int width, int height, GraphicsFormat format, bool hasMipMap)
  void ReadPixels(Rect source, int destX, int destY, bool recalculateMipMaps)
  void ReadPixels(Rect source, int destX, int destY)
  bool GenerateAtlas(Vector2[] sizes, int padding, int atlasSize, List`1<Rect> results)
  void SetPixels32(Color32[] colors, int miplevel)
  void SetPixels32(Color32[] colors)
  void SetPixels32(int x, int y, int blockWidth, int blockHeight, Color32[] colors, int miplevel)
  void SetPixels32(int x, int y, int blockWidth, int blockHeight, Color32[] colors)
  Color[] GetPixels(int miplevel)
  Color[] GetPixels()
  void SetPixelImpl_Injected(int image, int mip, int x, int y, Color& color)
  void GetPixelImpl_Injected(int image, int mip, int x, int y, Color& ret)
  void GetPixelBilinearImpl_Injected(int image, int mip, float u, float v, Color& ret)
  void ReadPixelsImpl_Injected(Rect& source, int destX, int destY, bool recalculateMipMaps)
--------------------------------------------------
Класс: UnityEngine.Cubemap
Наследуется от: Texture
Поля:
Свойства:
  TextureFormat format
  bool isReadable
  bool isPreProcessed
  bool streamingMipmaps
  int streamingMipmapsPriority
  int requestedMipmapLevel
  bool loadAllMips
  int desiredMipmapLevel
  int loadingMipmapLevel
  int loadedMipmapLevel
Методы:
  TextureFormat get_format()
  bool Internal_CreateImpl(Cubemap mono, int ext, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags, IntPtr nativeTex)
  void Internal_Create(Cubemap mono, int ext, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags, IntPtr nativeTex)
  void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable)
  void UpdateExternalTexture(IntPtr nativeTexture)
  bool get_isReadable()
  void SetPixelImpl(int image, int mip, int x, int y, Color color)
  Color GetPixelImpl(int image, int mip, int x, int y)
  void SmoothEdges(int smoothRegionWidthInPixels)
  void SmoothEdges()
  Color[] GetPixels(CubemapFace face, int miplevel)
  Color[] GetPixels(CubemapFace face)
  void SetPixels(Color[] colors, CubemapFace face, int miplevel)
  bool SetPixelDataImplArray(Array data, int mipLevel, int face, int elementSize, int dataArraySize, int sourceDataStartIndex)
  bool SetPixelDataImpl(IntPtr data, int mipLevel, int face, int elementSize, int dataArraySize, int sourceDataStartIndex)
  void SetPixels(Color[] colors, CubemapFace face)
  IntPtr GetWritableImageData(int frame)
  bool get_isPreProcessed()
  bool get_streamingMipmaps()
  int get_streamingMipmapsPriority()
  int get_requestedMipmapLevel()
  void set_requestedMipmapLevel(int value)
  bool get_loadAllMips()
  void set_loadAllMips(bool value)
  int get_desiredMipmapLevel()
  int get_loadingMipmapLevel()
  int get_loadedMipmapLevel()
  void ClearRequestedMipmapLevel()
  bool IsRequestedMipmapLevelLoaded()
  bool ValidateFormat(TextureFormat format, int width)
  bool ValidateFormat(GraphicsFormat format, int width)
  void .ctor(int width, DefaultFormat format, TextureCreationFlags flags)
  void .ctor(int width, GraphicsFormat format, TextureCreationFlags flags)
  void .ctor(int width, TextureFormat format, int mipCount)
  void .ctor(int width, GraphicsFormat format, TextureCreationFlags flags, int mipCount)
  void .ctor(int width, TextureFormat textureFormat, int mipCount, IntPtr nativeTex)
  void .ctor(int width, TextureFormat textureFormat, bool mipChain, IntPtr nativeTex)
  void .ctor(int width, TextureFormat textureFormat, bool mipChain)
  Cubemap CreateExternalTexture(int width, TextureFormat format, bool mipmap, IntPtr nativeTex)
  void SetPixelData(T[] data, int mipLevel, CubemapFace face, int sourceDataStartIndex)
  void SetPixelData(NativeArray`1<T> data, int mipLevel, CubemapFace face, int sourceDataStartIndex)
  NativeArray`1<T> GetPixelData(int mipLevel, CubemapFace face)
  void SetPixel(CubemapFace face, int x, int y, Color color)
  void SetPixel(CubemapFace face, int x, int y, Color color, int mip)
  Color GetPixel(CubemapFace face, int x, int y)
  Color GetPixel(CubemapFace face, int x, int y, int mip)
  void Apply(bool updateMipmaps, bool makeNoLongerReadable)
  void Apply(bool updateMipmaps)
  void Apply()
  void ValidateIsNotCrunched(TextureCreationFlags flags)
  void SetPixelImpl_Injected(int image, int mip, int x, int y, Color& color)
  void GetPixelImpl_Injected(int image, int mip, int x, int y, Color& ret)
--------------------------------------------------
Класс: UnityEngine.Texture3D
Наследуется от: Texture
Поля:
Свойства:
  int depth
  TextureFormat format
  bool isReadable
Методы:
  int get_depth()
  TextureFormat get_format()
  bool get_isReadable()
  void SetPixelImpl(int mip, int x, int y, int z, Color color)
  Color GetPixelImpl(int mip, int x, int y, int z)
  Color GetPixelBilinearImpl(int mip, float u, float v, float w)
  bool Internal_CreateImpl(Texture3D mono, int w, int h, int d, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags, IntPtr nativeTex)
  void Internal_Create(Texture3D mono, int w, int h, int d, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags, IntPtr nativeTex)
  void UpdateExternalTexture(IntPtr nativeTex)
  void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable)
  Color[] GetPixels(int miplevel)
  Color[] GetPixels()
  Color32[] GetPixels32(int miplevel)
  Color32[] GetPixels32()
  void SetPixels(Color[] colors, int miplevel)
  void SetPixels(Color[] colors)
  void SetPixels32(Color32[] colors, int miplevel)
  void SetPixels32(Color32[] colors)
  bool SetPixelDataImplArray(Array data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex)
  bool SetPixelDataImpl(IntPtr data, int mipLevel, int elementSize, int dataArraySize, int sourceDataStartIndex)
  IntPtr GetImageDataPointer()
  void .ctor(int width, int height, int depth, DefaultFormat format, TextureCreationFlags flags)
  void .ctor(int width, int height, int depth, GraphicsFormat format, TextureCreationFlags flags)
  void .ctor(int width, int height, int depth, GraphicsFormat format, TextureCreationFlags flags, int mipCount)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, int mipCount)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, int mipCount, IntPtr nativeTex)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain, IntPtr nativeTex)
  Texture3D CreateExternalTexture(int width, int height, int depth, TextureFormat format, bool mipChain, IntPtr nativeTex)
  void Apply(bool updateMipmaps, bool makeNoLongerReadable)
  void Apply(bool updateMipmaps)
  void Apply()
  void SetPixel(int x, int y, int z, Color color)
  void SetPixel(int x, int y, int z, Color color, int mipLevel)
  Color GetPixel(int x, int y, int z)
  Color GetPixel(int x, int y, int z, int mipLevel)
  Color GetPixelBilinear(float u, float v, float w)
  Color GetPixelBilinear(float u, float v, float w, int mipLevel)
  void SetPixelData(T[] data, int mipLevel, int sourceDataStartIndex)
  void SetPixelData(NativeArray`1<T> data, int mipLevel, int sourceDataStartIndex)
  NativeArray`1<T> GetPixelData(int mipLevel)
  void ValidateIsNotCrunched(TextureCreationFlags flags)
  void SetPixelImpl_Injected(int mip, int x, int y, int z, Color& color)
  void GetPixelImpl_Injected(int mip, int x, int y, int z, Color& ret)
  void GetPixelBilinearImpl_Injected(int mip, float u, float v, float w, Color& ret)
--------------------------------------------------
Класс: UnityEngine.Texture2DArray
Наследуется от: Texture
Поля:
Свойства:
  int allSlices
  int depth
  TextureFormat format
  bool isReadable
Методы:
  int get_allSlices()
  int get_depth()
  TextureFormat get_format()
  bool get_isReadable()
  bool Internal_CreateImpl(Texture2DArray mono, int w, int h, int d, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags)
  void Internal_Create(Texture2DArray mono, int w, int h, int d, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags)
  void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable)
  Color[] GetPixels(int arrayElement, int miplevel)
  Color[] GetPixels(int arrayElement)
  bool SetPixelDataImplArray(Array data, int mipLevel, int element, int elementSize, int dataArraySize, int sourceDataStartIndex)
  bool SetPixelDataImpl(IntPtr data, int mipLevel, int element, int elementSize, int dataArraySize, int sourceDataStartIndex)
  Color32[] GetPixels32(int arrayElement, int miplevel)
  Color32[] GetPixels32(int arrayElement)
  void SetPixels(Color[] colors, int arrayElement, int miplevel)
  void SetPixels(Color[] colors, int arrayElement)
  void SetPixels32(Color32[] colors, int arrayElement, int miplevel)
  void SetPixels32(Color32[] colors, int arrayElement)
  IntPtr GetImageDataPointer()
  bool ValidateFormat(TextureFormat format, int width, int height)
  bool ValidateFormat(GraphicsFormat format, int width, int height)
  void .ctor(int width, int height, int depth, DefaultFormat format, TextureCreationFlags flags)
  void .ctor(int width, int height, int depth, GraphicsFormat format, TextureCreationFlags flags)
  void .ctor(int width, int height, int depth, GraphicsFormat format, TextureCreationFlags flags, int mipCount)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, int mipCount, bool linear)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain, bool linear)
  void .ctor(int width, int height, int depth, TextureFormat textureFormat, bool mipChain)
  void Apply(bool updateMipmaps, bool makeNoLongerReadable)
  void Apply(bool updateMipmaps)
  void Apply()
  void SetPixelData(T[] data, int mipLevel, int element, int sourceDataStartIndex)
  void SetPixelData(NativeArray`1<T> data, int mipLevel, int element, int sourceDataStartIndex)
  NativeArray`1<T> GetPixelData(int mipLevel, int element)
  void ValidateIsNotCrunched(TextureCreationFlags flags)
--------------------------------------------------
Класс: UnityEngine.CubemapArray
Наследуется от: Texture
Поля:
Свойства:
  int cubemapCount
  TextureFormat format
  bool isReadable
Методы:
  int get_cubemapCount()
  TextureFormat get_format()
  bool get_isReadable()
  bool Internal_CreateImpl(CubemapArray mono, int ext, int count, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags)
  void Internal_Create(CubemapArray mono, int ext, int count, int mipCount, GraphicsFormat format, TextureColorSpace colorSpace, TextureCreationFlags flags)
  void ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable)
  Color[] GetPixels(CubemapFace face, int arrayElement, int miplevel)
  Color[] GetPixels(CubemapFace face, int arrayElement)
  Color32[] GetPixels32(CubemapFace face, int arrayElement, int miplevel)
  Color32[] GetPixels32(CubemapFace face, int arrayElement)
  void SetPixels(Color[] colors, CubemapFace face, int arrayElement, int miplevel)
  void SetPixels(Color[] colors, CubemapFace face, int arrayElement)
  void SetPixels32(Color32[] colors, CubemapFace face, int arrayElement, int miplevel)
  void SetPixels32(Color32[] colors, CubemapFace face, int arrayElement)
  bool SetPixelDataImplArray(Array data, int mipLevel, int face, int element, int elementSize, int dataArraySize, int sourceDataStartIndex)
  bool SetPixelDataImpl(IntPtr data, int mipLevel, int face, int element, int elementSize, int dataArraySize, int sourceDataStartIndex)
  IntPtr GetImageDataPointer()
  void .ctor(int width, int cubemapCount, DefaultFormat format, TextureCreationFlags flags)
  void .ctor(int width, int cubemapCount, GraphicsFormat format, TextureCreationFlags flags)
  void .ctor(int width, int cubemapCount, GraphicsFormat format, TextureCreationFlags flags, int mipCount)
  void .ctor(int width, int cubemapCount, TextureFormat textureFormat, int mipCount, bool linear)
  void .ctor(int width, int cubemapCount, TextureFormat textureFormat, bool mipChain, bool linear)
  void .ctor(int width, int cubemapCount, TextureFormat textureFormat, bool mipChain)
  void Apply(bool updateMipmaps, bool makeNoLongerReadable)
  void Apply(bool updateMipmaps)
  void Apply()
  void SetPixelData(T[] data, int mipLevel, CubemapFace face, int element, int sourceDataStartIndex)
  void SetPixelData(NativeArray`1<T> data, int mipLevel, CubemapFace face, int element, int sourceDataStartIndex)
  NativeArray`1<T> GetPixelData(int mipLevel, CubemapFace face, int element)
  void ValidateIsNotCrunched(TextureCreationFlags flags)
--------------------------------------------------
Класс: UnityEngine.SparseTexture
Наследуется от: Texture
Поля:
Свойства:
  int tileWidth
  int tileHeight
  bool isCreated
Методы:
  int get_tileWidth()
  int get_tileHeight()
  bool get_isCreated()
  void Internal_Create(SparseTexture mono, int width, int height, GraphicsFormat format, TextureColorSpace colorSpace, int mipCount)
  void UpdateTile(int tileX, int tileY, int miplevel, Color32[] data)
  void UpdateTileRaw(int tileX, int tileY, int miplevel, Byte[] data)
  void UnloadTile(int tileX, int tileY, int miplevel)
  bool ValidateFormat(TextureFormat format, int width, int height)
  bool ValidateFormat(GraphicsFormat format, int width, int height)
  bool ValidateSize(int width, int height, GraphicsFormat format)
  void ValidateIsNotCrunched(TextureFormat textureFormat)
  void .ctor(int width, int height, DefaultFormat format, int mipCount)
  void .ctor(int width, int height, GraphicsFormat format, int mipCount)
  void .ctor(int width, int height, TextureFormat textureFormat, int mipCount)
  void .ctor(int width, int height, TextureFormat textureFormat, int mipCount, bool linear)
--------------------------------------------------
Класс: UnityEngine.RenderTexture
Наследуется от: Texture
Поля:
Свойства:
  int width
  int height
  TextureDimension dimension
  GraphicsFormat graphicsFormat
  bool useMipMap
  bool sRGB
  VRTextureUsage vrUsage
  RenderTextureMemoryless memorylessMode
  RenderTextureFormat format
  GraphicsFormat stencilFormat
  GraphicsFormat depthStencilFormat
  bool autoGenerateMips
  int volumeDepth
  int antiAliasing
  bool bindTextureMS
  bool enableRandomWrite
  bool useDynamicScale
  bool isPowerOfTwo
  RenderTexture active
  RenderBuffer colorBuffer
  RenderBuffer depthBuffer
  int depth
  RenderTextureDescriptor descriptor
  bool isCubemap
  bool isVolume
  bool enabled
Методы:
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
  TextureDimension get_dimension()
  void set_dimension(TextureDimension value)
  GraphicsFormat get_graphicsFormat()
  void set_graphicsFormat(GraphicsFormat value)
  bool get_useMipMap()
  void set_useMipMap(bool value)
  bool get_sRGB()
  VRTextureUsage get_vrUsage()
  void set_vrUsage(VRTextureUsage value)
  RenderTextureMemoryless get_memorylessMode()
  void set_memorylessMode(RenderTextureMemoryless value)
  RenderTextureFormat get_format()
  void set_format(RenderTextureFormat value)
  GraphicsFormat get_stencilFormat()
  void set_stencilFormat(GraphicsFormat value)
  GraphicsFormat get_depthStencilFormat()
  void set_depthStencilFormat(GraphicsFormat value)
  bool get_autoGenerateMips()
  void set_autoGenerateMips(bool value)
  int get_volumeDepth()
  void set_volumeDepth(int value)
  int get_antiAliasing()
  void set_antiAliasing(int value)
  bool get_bindTextureMS()
  void set_bindTextureMS(bool value)
  bool get_enableRandomWrite()
  void set_enableRandomWrite(bool value)
  bool get_useDynamicScale()
  void set_useDynamicScale(bool value)
  bool GetIsPowerOfTwo()
  bool get_isPowerOfTwo()
  void set_isPowerOfTwo(bool value)
  RenderTexture GetActive()
  void SetActive(RenderTexture rt)
  RenderTexture get_active()
  void set_active(RenderTexture value)
  RenderBuffer GetColorBuffer()
  RenderBuffer GetDepthBuffer()
  void SetMipMapCount(int count)
  void SetShadowSamplingMode(ShadowSamplingMode samplingMode)
  RenderBuffer get_colorBuffer()
  RenderBuffer get_depthBuffer()
  IntPtr GetNativeDepthBufferPtr()
  void DiscardContents(bool discardColor, bool discardDepth)
  void MarkRestoreExpected()
  void DiscardContents()
  void ResolveAA()
  void ResolveAATo(RenderTexture rt)
  void ResolveAntiAliasedSurface()
  void ResolveAntiAliasedSurface(RenderTexture target)
  void SetGlobalShaderProperty(string propertyName)
  bool Create()
  void Release()
  bool IsCreated()
  void GenerateMips()
  void ConvertToEquirect(RenderTexture equirect, MonoOrStereoscopicEye eye)
  void SetSRGBReadWrite(bool srgb)
  void Internal_Create(RenderTexture rt)
  bool SupportsStencil(RenderTexture rt)
  void SetRenderTextureDescriptor(RenderTextureDescriptor desc)
  RenderTextureDescriptor GetDescriptor()
  RenderTexture GetTemporary_Internal(RenderTextureDescriptor desc)
  void ReleaseTemporary(RenderTexture temp)
  int get_depth()
  void set_depth(int value)
  void .ctor()
  void .ctor(RenderTextureDescriptor desc)
  void .ctor(RenderTexture textureToCopy)
  void .ctor(int width, int height, int depth, DefaultFormat format)
  void .ctor(int width, int height, int depth, GraphicsFormat format)
  void .ctor(int width, int height, int depth, GraphicsFormat format, int mipCount)
  void .ctor(int width, int height, GraphicsFormat colorFormat, GraphicsFormat depthStencilFormat, int mipCount)
  void .ctor(int width, int height, GraphicsFormat colorFormat, GraphicsFormat depthStencilFormat)
  void .ctor(int width, int height, int depth, RenderTextureFormat format, RenderTextureReadWrite readWrite)
  void .ctor(int width, int height, int depth, RenderTextureFormat format)
  void .ctor(int width, int height, int depth)
  void .ctor(int width, int height, int depth, RenderTextureFormat format, int mipCount)
  void Initialize(int width, int height, int depth, RenderTextureFormat format, RenderTextureReadWrite readWrite, int mipCount)
  GraphicsFormat GetDepthStencilFormatLegacy(int depthBits, GraphicsFormat colorFormat)
  GraphicsFormat GetDepthStencilFormatLegacy(int depthBits, RenderTextureFormat format)
  GraphicsFormat GetDepthStencilFormatLegacy(int depthBits, DefaultFormat format)
  GraphicsFormat GetDepthStencilFormatLegacy(int depthBits, bool requestedShadowMap)
  RenderTextureDescriptor get_descriptor()
  void set_descriptor(RenderTextureDescriptor value)
  void ValidateRenderTextureDesc(RenderTextureDescriptor desc)
  GraphicsFormat GetDefaultColorFormat(DefaultFormat format)
  GraphicsFormat GetDefaultDepthStencilFormat(DefaultFormat format, int depth)
  GraphicsFormat GetCompatibleFormat(RenderTextureFormat renderTextureFormat, RenderTextureReadWrite readWrite)
  RenderTexture GetTemporary(RenderTextureDescriptor desc)
  RenderTexture GetTemporaryImpl(int width, int height, GraphicsFormat depthStencilFormat, GraphicsFormat colorFormat, int antiAliasing, RenderTextureMemoryless memorylessMode, VRTextureUsage vrUsage, bool useDynamicScale)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, GraphicsFormat format, int antiAliasing, RenderTextureMemoryless memorylessMode, VRTextureUsage vrUsage, bool useDynamicScale)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, GraphicsFormat format, int antiAliasing, RenderTextureMemoryless memorylessMode, VRTextureUsage vrUsage)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, GraphicsFormat format, int antiAliasing, RenderTextureMemoryless memorylessMode)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, GraphicsFormat format, int antiAliasing)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, GraphicsFormat format)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, RenderTextureMemoryless memorylessMode, VRTextureUsage vrUsage, bool useDynamicScale)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, RenderTextureMemoryless memorylessMode, VRTextureUsage vrUsage)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, RenderTextureMemoryless memorylessMode)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format, RenderTextureReadWrite readWrite)
  RenderTexture GetTemporary(int width, int height, int depthBuffer, RenderTextureFormat format)
  RenderTexture GetTemporary(int width, int height, int depthBuffer)
  RenderTexture GetTemporary(int width, int height)
  bool get_isCubemap()
  void set_isCubemap(bool value)
  bool get_isVolume()
  void set_isVolume(bool value)
  bool get_enabled()
  void set_enabled(bool value)
  Vector2 GetTexelOffset()
  void GetColorBuffer_Injected(RenderBuffer& ret)
  void GetDepthBuffer_Injected(RenderBuffer& ret)
  void SetRenderTextureDescriptor_Injected(RenderTextureDescriptor& desc)
  void GetDescriptor_Injected(RenderTextureDescriptor& ret)
  RenderTexture GetTemporary_Internal_Injected(RenderTextureDescriptor& desc)
--------------------------------------------------
Класс: UnityEngine.CustomRenderTextureUpdateZone
Наследуется от: ValueType
Поля:
  Vector3 updateZoneCenter
  Vector3 updateZoneSize
  float rotation
  int passIndex
  bool needSwap
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CustomRenderTexture
Наследуется от: RenderTexture
Поля:
Свойства:
  Material material
  Material initializationMaterial
  Texture initializationTexture
  CustomRenderTextureInitializationSource initializationSource
  Color initializationColor
  CustomRenderTextureUpdateMode updateMode
  CustomRenderTextureUpdateMode initializationMode
  CustomRenderTextureUpdateZoneSpace updateZoneSpace
  int shaderPass
  UInt32 cubemapFaceMask
  bool doubleBuffered
  bool wrapUpdateZones
  float updatePeriod
Методы:
  void Internal_CreateCustomRenderTexture(CustomRenderTexture rt)
  void TriggerUpdate(int count)
  void Update(int count)
  void Update()
  void TriggerInitialization()
  void Initialize()
  void ClearUpdateZones()
  Material get_material()
  void set_material(Material value)
  Material get_initializationMaterial()
  void set_initializationMaterial(Material value)
  Texture get_initializationTexture()
  void set_initializationTexture(Texture value)
  void GetUpdateZonesInternal(object updateZones)
  void GetUpdateZones(List`1<CustomRenderTextureUpdateZone> updateZones)
  void SetUpdateZonesInternal(CustomRenderTextureUpdateZone[] updateZones)
  RenderTexture GetDoubleBufferRenderTexture()
  void EnsureDoubleBufferConsistency()
  void SetUpdateZones(CustomRenderTextureUpdateZone[] updateZones)
  CustomRenderTextureInitializationSource get_initializationSource()
  void set_initializationSource(CustomRenderTextureInitializationSource value)
  Color get_initializationColor()
  void set_initializationColor(Color value)
  CustomRenderTextureUpdateMode get_updateMode()
  void set_updateMode(CustomRenderTextureUpdateMode value)
  CustomRenderTextureUpdateMode get_initializationMode()
  void set_initializationMode(CustomRenderTextureUpdateMode value)
  CustomRenderTextureUpdateZoneSpace get_updateZoneSpace()
  void set_updateZoneSpace(CustomRenderTextureUpdateZoneSpace value)
  int get_shaderPass()
  void set_shaderPass(int value)
  UInt32 get_cubemapFaceMask()
  void set_cubemapFaceMask(UInt32 value)
  bool get_doubleBuffered()
  void set_doubleBuffered(bool value)
  bool get_wrapUpdateZones()
  void set_wrapUpdateZones(bool value)
  float get_updatePeriod()
  void set_updatePeriod(float value)
  void .ctor(int width, int height, RenderTextureFormat format, RenderTextureReadWrite readWrite)
  void .ctor(int width, int height, RenderTextureFormat format)
  void .ctor(int width, int height)
  void .ctor(int width, int height, DefaultFormat defaultFormat)
  void .ctor(int width, int height, GraphicsFormat format)
  void get_initializationColor_Injected(Color& ret)
  void set_initializationColor_Injected(Color& value)
--------------------------------------------------
Класс: UnityEngine.RenderTextureDescriptor
Наследуется от: ValueType
Поля:
  int <width>k__BackingField
  int <height>k__BackingField
  int <msaaSamples>k__BackingField
  int <volumeDepth>k__BackingField
  int <mipCount>k__BackingField
  GraphicsFormat _graphicsFormat
  GraphicsFormat <stencilFormat>k__BackingField
  GraphicsFormat <depthStencilFormat>k__BackingField
  TextureDimension <dimension>k__BackingField
  ShadowSamplingMode <shadowSamplingMode>k__BackingField
  VRTextureUsage <vrUsage>k__BackingField
  RenderTextureCreationFlags _flags
  RenderTextureMemoryless <memoryless>k__BackingField
Свойства:
  int width
  int height
  int msaaSamples
  int volumeDepth
  int mipCount
  GraphicsFormat graphicsFormat
  GraphicsFormat stencilFormat
  GraphicsFormat depthStencilFormat
  RenderTextureFormat colorFormat
  bool sRGB
  int depthBufferBits
  TextureDimension dimension
  ShadowSamplingMode shadowSamplingMode
  VRTextureUsage vrUsage
  RenderTextureCreationFlags flags
  RenderTextureMemoryless memoryless
  bool useMipMap
  bool autoGenerateMips
  bool enableRandomWrite
  bool bindMS
  bool createdFromScript
  bool useDynamicScale
Методы:
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
  int get_msaaSamples()
  void set_msaaSamples(int value)
  int get_volumeDepth()
  void set_volumeDepth(int value)
  int get_mipCount()
  void set_mipCount(int value)
  GraphicsFormat get_graphicsFormat()
  void set_graphicsFormat(GraphicsFormat value)
  GraphicsFormat get_stencilFormat()
  void set_stencilFormat(GraphicsFormat value)
  GraphicsFormat get_depthStencilFormat()
  void set_depthStencilFormat(GraphicsFormat value)
  RenderTextureFormat get_colorFormat()
  void set_colorFormat(RenderTextureFormat value)
  bool get_sRGB()
  void set_sRGB(bool value)
  int get_depthBufferBits()
  void set_depthBufferBits(int value)
  TextureDimension get_dimension()
  void set_dimension(TextureDimension value)
  ShadowSamplingMode get_shadowSamplingMode()
  void set_shadowSamplingMode(ShadowSamplingMode value)
  VRTextureUsage get_vrUsage()
  void set_vrUsage(VRTextureUsage value)
  RenderTextureCreationFlags get_flags()
  RenderTextureMemoryless get_memoryless()
  void set_memoryless(RenderTextureMemoryless value)
  void .ctor(int width, int height)
  void .ctor(int width, int height, RenderTextureFormat colorFormat)
  void .ctor(int width, int height, RenderTextureFormat colorFormat, int depthBufferBits)
  void .ctor(int width, int height, GraphicsFormat colorFormat, int depthBufferBits)
  void .ctor(int width, int height, RenderTextureFormat colorFormat, int depthBufferBits, int mipCount)
  void .ctor(int width, int height, RenderTextureFormat colorFormat, int depthBufferBits, int mipCount, RenderTextureReadWrite readWrite)
  void .ctor(int width, int height, GraphicsFormat colorFormat, int depthBufferBits, int mipCount)
  void .ctor(int width, int height, GraphicsFormat colorFormat, GraphicsFormat depthStencilFormat)
  void .ctor(int width, int height, GraphicsFormat colorFormat, GraphicsFormat depthStencilFormat, int mipCount)
  void SetOrClearRenderTextureCreationFlag(bool value, RenderTextureCreationFlags flag)
  bool get_useMipMap()
  void set_useMipMap(bool value)
  bool get_autoGenerateMips()
  void set_autoGenerateMips(bool value)
  bool get_enableRandomWrite()
  void set_enableRandomWrite(bool value)
  bool get_bindMS()
  void set_bindMS(bool value)
  bool get_createdFromScript()
  void set_createdFromScript(bool value)
  bool get_useDynamicScale()
  void set_useDynamicScale(bool value)
--------------------------------------------------
Класс: UnityEngine.Hash128
Наследуется от: ValueType
Поля:
  ulong u64_0
  ulong u64_1
  ulong kConst
Свойства:
  bool isValid
Методы:
  void .ctor(UInt32 u32_0, UInt32 u32_1, UInt32 u32_2, UInt32 u32_3)
  void .ctor(ulong u64_0, ulong u64_1)
  bool get_isValid()
  int CompareTo(Hash128 rhs)
  string ToString()
  Hash128 Parse(string hashString)
  string Hash128ToStringImpl(Hash128 hash)
  void ComputeFromString(string data, Hash128& hash)
  void ComputeFromPtr(IntPtr data, int start, int count, int elemSize, Hash128& hash)
  void ComputeFromArray(Array data, int start, int count, int elemSize, Hash128& hash)
  Hash128 Compute(string data)
  Hash128 Compute(NativeArray`1<T> data)
  Hash128 Compute(NativeArray`1<T> data, int start, int count)
  Hash128 Compute(T[] data)
  Hash128 Compute(T[] data, int start, int count)
  Hash128 Compute(List`1<T> data)
  Hash128 Compute(List`1<T> data, int start, int count)
  Hash128 Compute(T& val)
  Hash128 Compute(int val)
  Hash128 Compute(float val)
  Hash128 Compute(Void* data, ulong size)
  void Append(string data)
  void Append(NativeArray`1<T> data)
  void Append(NativeArray`1<T> data, int start, int count)
  void Append(T[] data)
  void Append(T[] data, int start, int count)
  void Append(List`1<T> data)
  void Append(List`1<T> data, int start, int count)
  void Append(T& val)
  void Append(int val)
  void Append(float val)
  void Append(Void* data, ulong size)
  bool Equals(object obj)
  bool Equals(Hash128 obj)
  int GetHashCode()
  int CompareTo(object obj)
  bool op_Equality(Hash128 hash1, Hash128 hash2)
  bool op_Inequality(Hash128 hash1, Hash128 hash2)
  bool op_LessThan(Hash128 x, Hash128 y)
  bool op_GreaterThan(Hash128 x, Hash128 y)
  void ShortHash4(UInt32 data)
  void ShortEnd(UInt64& h0, UInt64& h1, UInt64& h2, UInt64& h3)
  void Rot64(UInt64& x, int k)
  void Parse_Injected(string hashString, Hash128& ret)
  string Hash128ToStringImpl_Injected(Hash128& hash)
--------------------------------------------------
Класс: UnityEngine.HashUtilities
Наследуется от: object
Поля:
Свойства:
Методы:
  void AppendHash(Hash128& inHash, Hash128& outHash)
  void QuantisedMatrixHash(Matrix4x4& value, Hash128& hash)
  void QuantisedVectorHash(Vector3& value, Hash128& hash)
  void ComputeHash128(T& value, Hash128& hash)
  void ComputeHash128(Byte[] value, Hash128& hash)
--------------------------------------------------
Класс: UnityEngine.HashUnsafeUtilities
Наследуется от: object
Поля:
Свойства:
Методы:
  void ComputeHash128(Void* data, ulong dataSize, UInt64* hash1, UInt64* hash2)
  void ComputeHash128(Void* data, ulong dataSize, Hash128* hash)
--------------------------------------------------
Класс: UnityEngine.SpookyHash
Наследуется от: object
Поля:
  bool AllowUnalignedRead
  int k_NumVars
  int k_BlockSize
  int k_BufferSize
  ulong k_DeadBeefConst
Свойства:
Методы:
  bool AttemptDetectAllowUnalignedRead()
  void Hash(Void* message, ulong length, UInt64* hash1, UInt64* hash2)
  void End(UInt64* data, UInt64& h0, UInt64& h1, UInt64& h2, UInt64& h3, UInt64& h4, UInt64& h5, UInt64& h6, UInt64& h7, UInt64& h8, UInt64& h9, UInt64& h10, UInt64& h11)
  void EndPartial(UInt64& h0, UInt64& h1, UInt64& h2, UInt64& h3, UInt64& h4, UInt64& h5, UInt64& h6, UInt64& h7, UInt64& h8, UInt64& h9, UInt64& h10, UInt64& h11)
  void Rot64(UInt64& x, int k)
  void Short(Void* message, ulong length, UInt64* hash1, UInt64* hash2)
  void ShortMix(UInt64& h0, UInt64& h1, UInt64& h2, UInt64& h3)
  void ShortEnd(UInt64& h0, UInt64& h1, UInt64& h2, UInt64& h3)
  void Mix(UInt64* data, UInt64& s0, UInt64& s1, UInt64& s2, UInt64& s3, UInt64& s4, UInt64& s5, UInt64& s6, UInt64& s7, UInt64& s8, UInt64& s9, UInt64& s10, UInt64& s11)
  void memset(Void* dst, int value, ulong numberOfBytes)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.HotReloadDeserializer
Наследуется от: object
Поля:
Свойства:
Методы:
  void PrepareHotReload()
  void FinishHotReload(Type[] typesToReset)
  Object CreateEmptyAsset(Type type)
  void DeserializeAsset(Object asset, Byte[] data)
  void RemapInstanceIds(Object editorAsset, Int32[] editorToPlayerInstanceIdMapKeys, Int32[] editorToPlayerInstanceIdMapValues)
  void RemapInstanceIds(Object editorAsset, Dictionary`2<int, int> editorToPlayerInstanceIdMap)
  void FinalizeAssetCreation(Object asset)
  Object[] GetDependencies(Object asset)
  Int32[] GetNullDependencies(Object asset)
--------------------------------------------------
Класс: UnityEngine.ScrollWaitDefinitions
Наследуется от: object
Поля:
  int firstWait
  int regularWait
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CursorMode
Наследуется от: Enum
Поля:
  int value__
  CursorMode Auto
  CursorMode ForceSoftware
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.CursorLockMode
Наследуется от: Enum
Поля:
  int value__
  CursorLockMode None
  CursorLockMode Locked
  CursorLockMode Confined
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Cursor
Наследуется от: object
Поля:
Свойства:
  bool visible
  CursorLockMode lockState
Методы:
  void SetCursor(Texture2D texture, CursorMode cursorMode)
  void SetCursor(Texture2D texture, Vector2 hotspot, CursorMode cursorMode)
  bool get_visible()
  void set_visible(bool value)
  CursorLockMode get_lockState()
  void set_lockState(CursorLockMode value)
  void .ctor()
  void SetCursor_Injected(Texture2D texture, Vector2& hotspot, CursorMode cursorMode)
--------------------------------------------------
Класс: UnityEngine.KeyCode
Наследуется от: Enum
Поля:
  int value__
  KeyCode None
  KeyCode Backspace
  KeyCode Delete
  KeyCode Tab
  KeyCode Clear
  KeyCode Return
  KeyCode Pause
  KeyCode Escape
  KeyCode Space
  KeyCode Keypad0
  KeyCode Keypad1
  KeyCode Keypad2
  KeyCode Keypad3
  KeyCode Keypad4
  KeyCode Keypad5
  KeyCode Keypad6
  KeyCode Keypad7
  KeyCode Keypad8
  KeyCode Keypad9
  KeyCode KeypadPeriod
  KeyCode KeypadDivide
  KeyCode KeypadMultiply
  KeyCode KeypadMinus
  KeyCode KeypadPlus
  KeyCode KeypadEnter
  KeyCode KeypadEquals
  KeyCode UpArrow
  KeyCode DownArrow
  KeyCode RightArrow
  KeyCode LeftArrow
  KeyCode Insert
  KeyCode Home
  KeyCode End
  KeyCode PageUp
  KeyCode PageDown
  KeyCode F1
  KeyCode F2
  KeyCode F3
  KeyCode F4
  KeyCode F5
  KeyCode F6
  KeyCode F7
  KeyCode F8
  KeyCode F9
  KeyCode F10
  KeyCode F11
  KeyCode F12
  KeyCode F13
  KeyCode F14
  KeyCode F15
  KeyCode Alpha0
  KeyCode Alpha1
  KeyCode Alpha2
  KeyCode Alpha3
  KeyCode Alpha4
  KeyCode Alpha5
  KeyCode Alpha6
  KeyCode Alpha7
  KeyCode Alpha8
  KeyCode Alpha9
  KeyCode Exclaim
  KeyCode DoubleQuote
  KeyCode Hash
  KeyCode Dollar
  KeyCode Percent
  KeyCode Ampersand
  KeyCode Quote
  KeyCode LeftParen
  KeyCode RightParen
  KeyCode Asterisk
  KeyCode Plus
  KeyCode Comma
  KeyCode Minus
  KeyCode Period
  KeyCode Slash
  KeyCode Colon
  KeyCode Semicolon
  KeyCode Less
  KeyCode Equals
  KeyCode Greater
  KeyCode Question
  KeyCode At
  KeyCode LeftBracket
  KeyCode Backslash
  KeyCode RightBracket
  KeyCode Caret
  KeyCode Underscore
  KeyCode BackQuote
  KeyCode A
  KeyCode B
  KeyCode C
  KeyCode D
  KeyCode E
  KeyCode F
  KeyCode G
  KeyCode H
  KeyCode I
  KeyCode J
  KeyCode K
  KeyCode L
  KeyCode M
  KeyCode N
  KeyCode O
  KeyCode P
  KeyCode Q
  KeyCode R
  KeyCode S
  KeyCode T
  KeyCode U
  KeyCode V
  KeyCode W
  KeyCode X
  KeyCode Y
  KeyCode Z
  KeyCode LeftCurlyBracket
  KeyCode Pipe
  KeyCode RightCurlyBracket
  KeyCode Tilde
  KeyCode Numlock
  KeyCode CapsLock
  KeyCode ScrollLock
  KeyCode RightShift
  KeyCode LeftShift
  KeyCode RightControl
  KeyCode LeftControl
  KeyCode RightAlt
  KeyCode LeftAlt
  KeyCode LeftMeta
  KeyCode LeftCommand
  KeyCode LeftApple
  KeyCode LeftWindows
  KeyCode RightMeta
  KeyCode RightCommand
  KeyCode RightApple
  KeyCode RightWindows
  KeyCode AltGr
  KeyCode Help
  KeyCode Print
  KeyCode SysReq
  KeyCode Break
  KeyCode Menu
  KeyCode Mouse0
  KeyCode Mouse1
  KeyCode Mouse2
  KeyCode Mouse3
  KeyCode Mouse4
  KeyCode Mouse5
  KeyCode Mouse6
  KeyCode JoystickButton0
  KeyCode JoystickButton1
  KeyCode JoystickButton2
  KeyCode JoystickButton3
  KeyCode JoystickButton4
  KeyCode JoystickButton5
  KeyCode JoystickButton6
  KeyCode JoystickButton7
  KeyCode JoystickButton8
  KeyCode JoystickButton9
  KeyCode JoystickButton10
  KeyCode JoystickButton11
  KeyCode JoystickButton12
  KeyCode JoystickButton13
  KeyCode JoystickButton14
  KeyCode JoystickButton15
  KeyCode JoystickButton16
  KeyCode JoystickButton17
  KeyCode JoystickButton18
  KeyCode JoystickButton19
  KeyCode Joystick1Button0
  KeyCode Joystick1Button1
  KeyCode Joystick1Button2
  KeyCode Joystick1Button3
  KeyCode Joystick1Button4
  KeyCode Joystick1Button5
  KeyCode Joystick1Button6
  KeyCode Joystick1Button7
  KeyCode Joystick1Button8
  KeyCode Joystick1Button9
  KeyCode Joystick1Button10
  KeyCode Joystick1Button11
  KeyCode Joystick1Button12
  KeyCode Joystick1Button13
  KeyCode Joystick1Button14
  KeyCode Joystick1Button15
  KeyCode Joystick1Button16
  KeyCode Joystick1Button17
  KeyCode Joystick1Button18
  KeyCode Joystick1Button19
  KeyCode Joystick2Button0
  KeyCode Joystick2Button1
  KeyCode Joystick2Button2
  KeyCode Joystick2Button3
  KeyCode Joystick2Button4
  KeyCode Joystick2Button5
  KeyCode Joystick2Button6
  KeyCode Joystick2Button7
  KeyCode Joystick2Button8
  KeyCode Joystick2Button9
  KeyCode Joystick2Button10
  KeyCode Joystick2Button11
  KeyCode Joystick2Button12
  KeyCode Joystick2Button13
  KeyCode Joystick2Button14
  KeyCode Joystick2Button15
  KeyCode Joystick2Button16
  KeyCode Joystick2Button17
  KeyCode Joystick2Button18
  KeyCode Joystick2Button19
  KeyCode Joystick3Button0
  KeyCode Joystick3Button1
  KeyCode Joystick3Button2
  KeyCode Joystick3Button3
  KeyCode Joystick3Button4
  KeyCode Joystick3Button5
  KeyCode Joystick3Button6
  KeyCode Joystick3Button7
  KeyCode Joystick3Button8
  KeyCode Joystick3Button9
  KeyCode Joystick3Button10
  KeyCode Joystick3Button11
  KeyCode Joystick3Button12
  KeyCode Joystick3Button13
  KeyCode Joystick3Button14
  KeyCode Joystick3Button15
  KeyCode Joystick3Button16
  KeyCode Joystick3Button17
  KeyCode Joystick3Button18
  KeyCode Joystick3Button19
  KeyCode Joystick4Button0
  KeyCode Joystick4Button1
  KeyCode Joystick4Button2
  KeyCode Joystick4Button3
  KeyCode Joystick4Button4
  KeyCode Joystick4Button5
  KeyCode Joystick4Button6
  KeyCode Joystick4Button7
  KeyCode Joystick4Button8
  KeyCode Joystick4Button9
  KeyCode Joystick4Button10
  KeyCode Joystick4Button11
  KeyCode Joystick4Button12
  KeyCode Joystick4Button13
  KeyCode Joystick4Button14
  KeyCode Joystick4Button15
  KeyCode Joystick4Button16
  KeyCode Joystick4Button17
  KeyCode Joystick4Button18
  KeyCode Joystick4Button19
  KeyCode Joystick5Button0
  KeyCode Joystick5Button1
  KeyCode Joystick5Button2
  KeyCode Joystick5Button3
  KeyCode Joystick5Button4
  KeyCode Joystick5Button5
  KeyCode Joystick5Button6
  KeyCode Joystick5Button7
  KeyCode Joystick5Button8
  KeyCode Joystick5Button9
  KeyCode Joystick5Button10
  KeyCode Joystick5Button11
  KeyCode Joystick5Button12
  KeyCode Joystick5Button13
  KeyCode Joystick5Button14
  KeyCode Joystick5Button15
  KeyCode Joystick5Button16
  KeyCode Joystick5Button17
  KeyCode Joystick5Button18
  KeyCode Joystick5Button19
  KeyCode Joystick6Button0
  KeyCode Joystick6Button1
  KeyCode Joystick6Button2
  KeyCode Joystick6Button3
  KeyCode Joystick6Button4
  KeyCode Joystick6Button5
  KeyCode Joystick6Button6
  KeyCode Joystick6Button7
  KeyCode Joystick6Button8
  KeyCode Joystick6Button9
  KeyCode Joystick6Button10
  KeyCode Joystick6Button11
  KeyCode Joystick6Button12
  KeyCode Joystick6Button13
  KeyCode Joystick6Button14
  KeyCode Joystick6Button15
  KeyCode Joystick6Button16
  KeyCode Joystick6Button17
  KeyCode Joystick6Button18
  KeyCode Joystick6Button19
  KeyCode Joystick7Button0
  KeyCode Joystick7Button1
  KeyCode Joystick7Button2
  KeyCode Joystick7Button3
  KeyCode Joystick7Button4
  KeyCode Joystick7Button5
  KeyCode Joystick7Button6
  KeyCode Joystick7Button7
  KeyCode Joystick7Button8
  KeyCode Joystick7Button9
  KeyCode Joystick7Button10
  KeyCode Joystick7Button11
  KeyCode Joystick7Button12
  KeyCode Joystick7Button13
  KeyCode Joystick7Button14
  KeyCode Joystick7Button15
  KeyCode Joystick7Button16
  KeyCode Joystick7Button17
  KeyCode Joystick7Button18
  KeyCode Joystick7Button19
  KeyCode Joystick8Button0
  KeyCode Joystick8Button1
  KeyCode Joystick8Button2
  KeyCode Joystick8Button3
  KeyCode Joystick8Button4
  KeyCode Joystick8Button5
  KeyCode Joystick8Button6
  KeyCode Joystick8Button7
  KeyCode Joystick8Button8
  KeyCode Joystick8Button9
  KeyCode Joystick8Button10
  KeyCode Joystick8Button11
  KeyCode Joystick8Button12
  KeyCode Joystick8Button13
  KeyCode Joystick8Button14
  KeyCode Joystick8Button15
  KeyCode Joystick8Button16
  KeyCode Joystick8Button17
  KeyCode Joystick8Button18
  KeyCode Joystick8Button19
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ILogger
Поля:
Свойства:
  ILogHandler logHandler
  bool logEnabled
  LogType filterLogType
Методы:
  ILogHandler get_logHandler()
  void set_logHandler(ILogHandler value)
  bool get_logEnabled()
  void set_logEnabled(bool value)
  LogType get_filterLogType()
  void set_filterLogType(LogType value)
  bool IsLogTypeAllowed(LogType logType)
  void Log(LogType logType, object message)
  void Log(LogType logType, object message, Object context)
  void Log(LogType logType, string tag, object message)
  void Log(LogType logType, string tag, object message, Object context)
  void Log(object message)
  void Log(string tag, object message)
  void Log(string tag, object message, Object context)
  void LogWarning(string tag, object message)
  void LogWarning(string tag, object message, Object context)
  void LogError(string tag, object message)
  void LogError(string tag, object message, Object context)
  void LogFormat(LogType logType, string format, Object[] args)
  void LogException(Exception exception)
--------------------------------------------------
Класс: UnityEngine.ILogHandler
Поля:
Свойства:
Методы:
  void LogFormat(LogType logType, Object context, string format, Object[] args)
  void LogException(Exception exception, Object context)
--------------------------------------------------
Класс: UnityEngine.Logger
Наследуется от: object
Поля:
  string kNoTagFormat
  string kTagFormat
  ILogHandler <logHandler>k__BackingField
  bool <logEnabled>k__BackingField
  LogType <filterLogType>k__BackingField
Свойства:
  ILogHandler logHandler
  bool logEnabled
  LogType filterLogType
Методы:
  void .ctor()
  void .ctor(ILogHandler logHandler)
  ILogHandler get_logHandler()
  void set_logHandler(ILogHandler value)
  bool get_logEnabled()
  void set_logEnabled(bool value)
  LogType get_filterLogType()
  void set_filterLogType(LogType value)
  bool IsLogTypeAllowed(LogType logType)
  string GetString(object message)
  void Log(LogType logType, object message)
  void Log(LogType logType, object message, Object context)
  void Log(LogType logType, string tag, object message)
  void Log(LogType logType, string tag, object message, Object context)
  void Log(object message)
  void Log(string tag, object message)
  void Log(string tag, object message, Object context)
  void LogWarning(string tag, object message)
  void LogWarning(string tag, object message, Object context)
  void LogError(string tag, object message)
  void LogError(string tag, object message, Object context)
  void LogException(Exception exception)
  void LogException(Exception exception, Object context)
  void LogFormat(LogType logType, string format, Object[] args)
  void LogFormat(LogType logType, Object context, string format, Object[] args)
--------------------------------------------------
Класс: UnityEngine.UnityLogWriter
Наследуется от: TextWriter
Поля:
Свойства:
  Encoding Encoding
Методы:
  void WriteStringToUnityLog(string s)
  void WriteStringToUnityLogImpl(string s)
  void Init()
  Encoding get_Encoding()
  void Write(char value)
  void Write(string s)
  void Write(Char[] buffer, int index, int count)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Color
Наследуется от: ValueType
Поля:
  float r
  float g
  float b
  float a
Свойства:
  Color red
  Color green
  Color blue
  Color white
  Color black
  Color yellow
  Color cyan
  Color magenta
  Color gray
  Color grey
  Color clear
  float grayscale
  Color linear
  Color gamma
  float maxColorComponent
  float Item
Методы:
  void .ctor(float r, float g, float b, float a)
  void .ctor(float r, float g, float b)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Color other)
  Color op_Addition(Color a, Color b)
  Color op_Subtraction(Color a, Color b)
  Color op_Multiply(Color a, Color b)
  Color op_Multiply(Color a, float b)
  Color op_Multiply(float b, Color a)
  Color op_Division(Color a, float b)
  bool op_Equality(Color lhs, Color rhs)
  bool op_Inequality(Color lhs, Color rhs)
  Color Lerp(Color a, Color b, float t)
  Color LerpUnclamped(Color a, Color b, float t)
  Color RGBMultiplied(float multiplier)
  Color AlphaMultiplied(float multiplier)
  Color RGBMultiplied(Color multiplier)
  Color get_red()
  Color get_green()
  Color get_blue()
  Color get_white()
  Color get_black()
  Color get_yellow()
  Color get_cyan()
  Color get_magenta()
  Color get_gray()
  Color get_grey()
  Color get_clear()
  float get_grayscale()
  Color get_linear()
  Color get_gamma()
  float get_maxColorComponent()
  Vector4 op_Implicit(Color c)
  Color op_Implicit(Vector4 v)
  float get_Item(int index)
  void set_Item(int index, float value)
  void RGBToHSV(Color rgbColor, Single& H, Single& S, Single& V)
  void RGBToHSVHelper(float offset, float dominantcolor, float colorone, float colortwo, Single& H, Single& S, Single& V)
  Color HSVToRGB(float H, float S, float V)
  Color HSVToRGB(float H, float S, float V, bool hdr)
--------------------------------------------------
Класс: UnityEngine.Color32
Наследуется от: ValueType
Поля:
  int rgba
  byte r
  byte g
  byte b
  byte a
Свойства:
  byte Item
Методы:
  void .ctor(byte r, byte g, byte b, byte a)
  Color32 op_Implicit(Color c)
  Color op_Implicit(Color32 c)
  Color32 Lerp(Color32 a, Color32 b, float t)
  Color32 LerpUnclamped(Color32 a, Color32 b, float t)
  byte get_Item(int index)
  void set_Item(int index, byte value)
  bool InternalEquals(Color32 other)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: UnityEngine.ColorUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  bool DoTryParseHtmlColor(string htmlString, Color32& color)
  bool TryParseHtmlString(string htmlString, Color& color)
  string ToHtmlStringRGB(Color color)
  string ToHtmlStringRGBA(Color color)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.GradientColorKey
Наследуется от: ValueType
Поля:
  Color color
  float time
Свойства:
Методы:
  void .ctor(Color col, float time)
--------------------------------------------------
Класс: UnityEngine.GradientAlphaKey
Наследуется от: ValueType
Поля:
  float alpha
  float time
Свойства:
Методы:
  void .ctor(float alpha, float time)
--------------------------------------------------
Класс: UnityEngine.GradientMode
Наследуется от: Enum
Поля:
  int value__
  GradientMode Blend
  GradientMode Fixed
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Gradient
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  GradientColorKey[] colorKeys
  GradientAlphaKey[] alphaKeys
  GradientMode mode
Методы:
  IntPtr Init()
  void Cleanup()
  bool Internal_Equals(IntPtr other)
  void .ctor()
  void Finalize()
  Color Evaluate(float time)
  GradientColorKey[] get_colorKeys()
  void set_colorKeys(GradientColorKey[] value)
  GradientAlphaKey[] get_alphaKeys()
  void set_alphaKeys(GradientAlphaKey[] value)
  GradientMode get_mode()
  void set_mode(GradientMode value)
  void SetKeys(GradientColorKey[] colorKeys, GradientAlphaKey[] alphaKeys)
  bool Equals(object o)
  bool Equals(Gradient other)
  int GetHashCode()
  void Evaluate_Injected(float time, Color& ret)
--------------------------------------------------
Класс: UnityEngine.FrustumPlanes
Наследуется от: ValueType
Поля:
  float left
  float right
  float bottom
  float top
  float zNear
  float zFar
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Matrix4x4
Наследуется от: ValueType
Поля:
  float m00
  float m10
  float m20
  float m30
  float m01
  float m11
  float m21
  float m31
  float m02
  float m12
  float m22
  float m32
  float m03
  float m13
  float m23
  float m33
  Matrix4x4 zeroMatrix
  Matrix4x4 identityMatrix
Свойства:
  Quaternion rotation
  Vector3 lossyScale
  bool isIdentity
  float determinant
  FrustumPlanes decomposeProjection
  Matrix4x4 inverse
  Matrix4x4 transpose
  float Item
  float Item
  Matrix4x4 zero
  Matrix4x4 identity
Методы:
  Quaternion GetRotation()
  Vector3 GetLossyScale()
  bool IsIdentity()
  float GetDeterminant()
  FrustumPlanes DecomposeProjection()
  Quaternion get_rotation()
  Vector3 get_lossyScale()
  bool get_isIdentity()
  float get_determinant()
  FrustumPlanes get_decomposeProjection()
  bool ValidTRS()
  float Determinant(Matrix4x4 m)
  Matrix4x4 TRS(Vector3 pos, Quaternion q, Vector3 s)
  void SetTRS(Vector3 pos, Quaternion q, Vector3 s)
  bool Inverse3DAffine(Matrix4x4 input, Matrix4x4& result)
  Matrix4x4 Inverse(Matrix4x4 m)
  Matrix4x4 get_inverse()
  Matrix4x4 Transpose(Matrix4x4 m)
  Matrix4x4 get_transpose()
  Matrix4x4 Ortho(float left, float right, float bottom, float top, float zNear, float zFar)
  Matrix4x4 Perspective(float fov, float aspect, float zNear, float zFar)
  Matrix4x4 LookAt(Vector3 from, Vector3 to, Vector3 up)
  Matrix4x4 Frustum(float left, float right, float bottom, float top, float zNear, float zFar)
  Matrix4x4 Frustum(FrustumPlanes fp)
  void .ctor(Vector4 column0, Vector4 column1, Vector4 column2, Vector4 column3)
  float get_Item(int row, int column)
  void set_Item(int row, int column, float value)
  float get_Item(int index)
  void set_Item(int index, float value)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Matrix4x4 other)
  Matrix4x4 op_Multiply(Matrix4x4 lhs, Matrix4x4 rhs)
  Vector4 op_Multiply(Matrix4x4 lhs, Vector4 vector)
  bool op_Equality(Matrix4x4 lhs, Matrix4x4 rhs)
  bool op_Inequality(Matrix4x4 lhs, Matrix4x4 rhs)
  Vector4 GetColumn(int index)
  Vector4 GetRow(int index)
  Vector3 GetPosition()
  void SetColumn(int index, Vector4 column)
  void SetRow(int index, Vector4 row)
  Vector3 MultiplyPoint(Vector3 point)
  Vector3 MultiplyPoint3x4(Vector3 point)
  Vector3 MultiplyVector(Vector3 vector)
  Plane TransformPlane(Plane plane)
  Matrix4x4 Scale(Vector3 vector)
  Matrix4x4 Translate(Vector3 vector)
  Matrix4x4 Rotate(Quaternion q)
  Matrix4x4 get_zero()
  Matrix4x4 get_identity()
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  void .cctor()
  void GetRotation_Injected(Matrix4x4& _unity_self, Quaternion& ret)
  void GetLossyScale_Injected(Matrix4x4& _unity_self, Vector3& ret)
  bool IsIdentity_Injected(Matrix4x4& _unity_self)
  float GetDeterminant_Injected(Matrix4x4& _unity_self)
  void DecomposeProjection_Injected(Matrix4x4& _unity_self, FrustumPlanes& ret)
  bool ValidTRS_Injected(Matrix4x4& _unity_self)
  void TRS_Injected(Vector3& pos, Quaternion& q, Vector3& s, Matrix4x4& ret)
  bool Inverse3DAffine_Injected(Matrix4x4& input, Matrix4x4& result)
  void Inverse_Injected(Matrix4x4& m, Matrix4x4& ret)
  void Transpose_Injected(Matrix4x4& m, Matrix4x4& ret)
  void Ortho_Injected(float left, float right, float bottom, float top, float zNear, float zFar, Matrix4x4& ret)
  void Perspective_Injected(float fov, float aspect, float zNear, float zFar, Matrix4x4& ret)
  void LookAt_Injected(Vector3& from, Vector3& to, Vector3& up, Matrix4x4& ret)
  void Frustum_Injected(float left, float right, float bottom, float top, float zNear, float zFar, Matrix4x4& ret)
--------------------------------------------------
Класс: UnityEngine.Vector3
Наследуется от: ValueType
Поля:
  float kEpsilon
  float kEpsilonNormalSqrt
  float x
  float y
  float z
  Vector3 zeroVector
  Vector3 oneVector
  Vector3 upVector
  Vector3 downVector
  Vector3 leftVector
  Vector3 rightVector
  Vector3 forwardVector
  Vector3 backVector
  Vector3 positiveInfinityVector
  Vector3 negativeInfinityVector
Свойства:
  float Item
  Vector3 normalized
  float magnitude
  float sqrMagnitude
  Vector3 zero
  Vector3 one
  Vector3 forward
  Vector3 back
  Vector3 up
  Vector3 down
  Vector3 left
  Vector3 right
  Vector3 positiveInfinity
  Vector3 negativeInfinity
  Vector3 fwd
Методы:
  Vector3 Slerp(Vector3 a, Vector3 b, float t)
  Vector3 SlerpUnclamped(Vector3 a, Vector3 b, float t)
  void OrthoNormalize2(Vector3& a, Vector3& b)
  void OrthoNormalize(Vector3& normal, Vector3& tangent)
  void OrthoNormalize3(Vector3& a, Vector3& b, Vector3& c)
  void OrthoNormalize(Vector3& normal, Vector3& tangent, Vector3& binormal)
  Vector3 RotateTowards(Vector3 current, Vector3 target, float maxRadiansDelta, float maxMagnitudeDelta)
  Vector3 Lerp(Vector3 a, Vector3 b, float t)
  Vector3 LerpUnclamped(Vector3 a, Vector3 b, float t)
  Vector3 MoveTowards(Vector3 current, Vector3 target, float maxDistanceDelta)
  Vector3 SmoothDamp(Vector3 current, Vector3 target, Vector3& currentVelocity, float smoothTime, float maxSpeed)
  Vector3 SmoothDamp(Vector3 current, Vector3 target, Vector3& currentVelocity, float smoothTime)
  Vector3 SmoothDamp(Vector3 current, Vector3 target, Vector3& currentVelocity, float smoothTime, float maxSpeed, float deltaTime)
  float get_Item(int index)
  void set_Item(int index, float value)
  void .ctor(float x, float y, float z)
  void .ctor(float x, float y)
  void Set(float newX, float newY, float newZ)
  Vector3 Scale(Vector3 a, Vector3 b)
  void Scale(Vector3 scale)
  Vector3 Cross(Vector3 lhs, Vector3 rhs)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Vector3 other)
  Vector3 Reflect(Vector3 inDirection, Vector3 inNormal)
  Vector3 Normalize(Vector3 value)
  void Normalize()
  Vector3 get_normalized()
  float Dot(Vector3 lhs, Vector3 rhs)
  Vector3 Project(Vector3 vector, Vector3 onNormal)
  Vector3 ProjectOnPlane(Vector3 vector, Vector3 planeNormal)
  float Angle(Vector3 from, Vector3 to)
  float SignedAngle(Vector3 from, Vector3 to, Vector3 axis)
  float Distance(Vector3 a, Vector3 b)
  Vector3 ClampMagnitude(Vector3 vector, float maxLength)
  float Magnitude(Vector3 vector)
  float get_magnitude()
  float SqrMagnitude(Vector3 vector)
  float get_sqrMagnitude()
  Vector3 Min(Vector3 lhs, Vector3 rhs)
  Vector3 Max(Vector3 lhs, Vector3 rhs)
  Vector3 get_zero()
  Vector3 get_one()
  Vector3 get_forward()
  Vector3 get_back()
  Vector3 get_up()
  Vector3 get_down()
  Vector3 get_left()
  Vector3 get_right()
  Vector3 get_positiveInfinity()
  Vector3 get_negativeInfinity()
  Vector3 op_Addition(Vector3 a, Vector3 b)
  Vector3 op_Subtraction(Vector3 a, Vector3 b)
  Vector3 op_UnaryNegation(Vector3 a)
  Vector3 op_Multiply(Vector3 a, float d)
  Vector3 op_Multiply(float d, Vector3 a)
  Vector3 op_Division(Vector3 a, float d)
  bool op_Equality(Vector3 lhs, Vector3 rhs)
  bool op_Inequality(Vector3 lhs, Vector3 rhs)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  Vector3 get_fwd()
  float AngleBetween(Vector3 from, Vector3 to)
  Vector3 Exclude(Vector3 excludeThis, Vector3 fromThat)
  void .cctor()
  void Slerp_Injected(Vector3& a, Vector3& b, float t, Vector3& ret)
  void SlerpUnclamped_Injected(Vector3& a, Vector3& b, float t, Vector3& ret)
  void RotateTowards_Injected(Vector3& current, Vector3& target, float maxRadiansDelta, float maxMagnitudeDelta, Vector3& ret)
--------------------------------------------------
Класс: UnityEngine.Quaternion
Наследуется от: ValueType
Поля:
  float x
  float y
  float z
  float w
  Quaternion identityQuaternion
  float kEpsilon
Свойства:
  float Item
  Quaternion identity
  Vector3 eulerAngles
  Quaternion normalized
Методы:
  Quaternion FromToRotation(Vector3 fromDirection, Vector3 toDirection)
  Quaternion Inverse(Quaternion rotation)
  Quaternion Slerp(Quaternion a, Quaternion b, float t)
  Quaternion SlerpUnclamped(Quaternion a, Quaternion b, float t)
  Quaternion Lerp(Quaternion a, Quaternion b, float t)
  Quaternion LerpUnclamped(Quaternion a, Quaternion b, float t)
  Quaternion Internal_FromEulerRad(Vector3 euler)
  Vector3 Internal_ToEulerRad(Quaternion rotation)
  void Internal_ToAxisAngleRad(Quaternion q, Vector3& axis, Single& angle)
  Quaternion AngleAxis(float angle, Vector3 axis)
  Quaternion LookRotation(Vector3 forward, Vector3 upwards)
  Quaternion LookRotation(Vector3 forward)
  float get_Item(int index)
  void set_Item(int index, float value)
  void .ctor(float x, float y, float z, float w)
  void Set(float newX, float newY, float newZ, float newW)
  Quaternion get_identity()
  Quaternion op_Multiply(Quaternion lhs, Quaternion rhs)
  Vector3 op_Multiply(Quaternion rotation, Vector3 point)
  bool IsEqualUsingDot(float dot)
  bool op_Equality(Quaternion lhs, Quaternion rhs)
  bool op_Inequality(Quaternion lhs, Quaternion rhs)
  float Dot(Quaternion a, Quaternion b)
  void SetLookRotation(Vector3 view)
  void SetLookRotation(Vector3 view, Vector3 up)
  float Angle(Quaternion a, Quaternion b)
  Vector3 Internal_MakePositive(Vector3 euler)
  Vector3 get_eulerAngles()
  void set_eulerAngles(Vector3 value)
  Quaternion Euler(float x, float y, float z)
  Quaternion Euler(Vector3 euler)
  void ToAngleAxis(Single& angle, Vector3& axis)
  void SetFromToRotation(Vector3 fromDirection, Vector3 toDirection)
  Quaternion RotateTowards(Quaternion from, Quaternion to, float maxDegreesDelta)
  Quaternion Normalize(Quaternion q)
  void Normalize()
  Quaternion get_normalized()
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Quaternion other)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  Quaternion EulerRotation(float x, float y, float z)
  Quaternion EulerRotation(Vector3 euler)
  void SetEulerRotation(float x, float y, float z)
  void SetEulerRotation(Vector3 euler)
  Vector3 ToEuler()
  Quaternion EulerAngles(float x, float y, float z)
  Quaternion EulerAngles(Vector3 euler)
  void ToAxisAngle(Vector3& axis, Single& angle)
  void SetEulerAngles(float x, float y, float z)
  void SetEulerAngles(Vector3 euler)
  Vector3 ToEulerAngles(Quaternion rotation)
  Vector3 ToEulerAngles()
  void SetAxisAngle(Vector3 axis, float angle)
  Quaternion AxisAngle(Vector3 axis, float angle)
  void .cctor()
  void FromToRotation_Injected(Vector3& fromDirection, Vector3& toDirection, Quaternion& ret)
  void Inverse_Injected(Quaternion& rotation, Quaternion& ret)
  void Slerp_Injected(Quaternion& a, Quaternion& b, float t, Quaternion& ret)
  void SlerpUnclamped_Injected(Quaternion& a, Quaternion& b, float t, Quaternion& ret)
  void Lerp_Injected(Quaternion& a, Quaternion& b, float t, Quaternion& ret)
  void LerpUnclamped_Injected(Quaternion& a, Quaternion& b, float t, Quaternion& ret)
  void Internal_FromEulerRad_Injected(Vector3& euler, Quaternion& ret)
  void Internal_ToEulerRad_Injected(Quaternion& rotation, Vector3& ret)
  void Internal_ToAxisAngleRad_Injected(Quaternion& q, Vector3& axis, Single& angle)
  void AngleAxis_Injected(float angle, Vector3& axis, Quaternion& ret)
  void LookRotation_Injected(Vector3& forward, Vector3& upwards, Quaternion& ret)
--------------------------------------------------
Класс: UnityEngine.Mathf
Наследуется от: ValueType
Поля:
  float PI
  float Infinity
  float NegativeInfinity
  float Deg2Rad
  float Rad2Deg
  float Epsilon
Свойства:
Методы:
  int ClosestPowerOfTwo(int value)
  bool IsPowerOfTwo(int value)
  int NextPowerOfTwo(int value)
  float GammaToLinearSpace(float value)
  float LinearToGammaSpace(float value)
  Color CorrelatedColorTemperatureToRGB(float kelvin)
  ushort FloatToHalf(float val)
  float HalfToFloat(ushort val)
  float PerlinNoise(float x, float y)
  float Sin(float f)
  float Cos(float f)
  float Tan(float f)
  float Asin(float f)
  float Acos(float f)
  float Atan(float f)
  float Atan2(float y, float x)
  float Sqrt(float f)
  float Abs(float f)
  int Abs(int value)
  float Min(float a, float b)
  float Min(Single[] values)
  int Min(int a, int b)
  int Min(Int32[] values)
  float Max(float a, float b)
  float Max(Single[] values)
  int Max(int a, int b)
  int Max(Int32[] values)
  float Pow(float f, float p)
  float Exp(float power)
  float Log(float f, float p)
  float Log(float f)
  float Log10(float f)
  float Ceil(float f)
  float Floor(float f)
  float Round(float f)
  int CeilToInt(float f)
  int FloorToInt(float f)
  int RoundToInt(float f)
  float Sign(float f)
  float Clamp(float value, float min, float max)
  int Clamp(int value, int min, int max)
  float Clamp01(float value)
  float Lerp(float a, float b, float t)
  float LerpUnclamped(float a, float b, float t)
  float LerpAngle(float a, float b, float t)
  float MoveTowards(float current, float target, float maxDelta)
  float MoveTowardsAngle(float current, float target, float maxDelta)
  float SmoothStep(float from, float to, float t)
  float Gamma(float value, float absmax, float gamma)
  bool Approximately(float a, float b)
  float SmoothDamp(float current, float target, Single& currentVelocity, float smoothTime, float maxSpeed)
  float SmoothDamp(float current, float target, Single& currentVelocity, float smoothTime)
  float SmoothDamp(float current, float target, Single& currentVelocity, float smoothTime, float maxSpeed, float deltaTime)
  float SmoothDampAngle(float current, float target, Single& currentVelocity, float smoothTime, float maxSpeed)
  float SmoothDampAngle(float current, float target, Single& currentVelocity, float smoothTime)
  float SmoothDampAngle(float current, float target, Single& currentVelocity, float smoothTime, float maxSpeed, float deltaTime)
  float Repeat(float t, float length)
  float PingPong(float t, float length)
  float InverseLerp(float a, float b, float value)
  float DeltaAngle(float current, float target)
  bool LineIntersection(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2& result)
  bool LineSegmentIntersection(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2& result)
  long RandomToLong(Random r)
  void .cctor()
  void CorrelatedColorTemperatureToRGB_Injected(float kelvin, Color& ret)
--------------------------------------------------
Класс: UnityEngine.MethodImplOptionsEx
Наследуется от: object
Поля:
  short AggressiveInlining
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Vector2
Наследуется от: ValueType
Поля:
  float x
  float y
  Vector2 zeroVector
  Vector2 oneVector
  Vector2 upVector
  Vector2 downVector
  Vector2 leftVector
  Vector2 rightVector
  Vector2 positiveInfinityVector
  Vector2 negativeInfinityVector
  float kEpsilon
  float kEpsilonNormalSqrt
Свойства:
  float Item
  Vector2 normalized
  float magnitude
  float sqrMagnitude
  Vector2 zero
  Vector2 one
  Vector2 up
  Vector2 down
  Vector2 left
  Vector2 right
  Vector2 positiveInfinity
  Vector2 negativeInfinity
Методы:
  float get_Item(int index)
  void set_Item(int index, float value)
  void .ctor(float x, float y)
  void Set(float newX, float newY)
  Vector2 Lerp(Vector2 a, Vector2 b, float t)
  Vector2 LerpUnclamped(Vector2 a, Vector2 b, float t)
  Vector2 MoveTowards(Vector2 current, Vector2 target, float maxDistanceDelta)
  Vector2 Scale(Vector2 a, Vector2 b)
  void Scale(Vector2 scale)
  void Normalize()
  Vector2 get_normalized()
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Vector2 other)
  Vector2 Reflect(Vector2 inDirection, Vector2 inNormal)
  Vector2 Perpendicular(Vector2 inDirection)
  float Dot(Vector2 lhs, Vector2 rhs)
  float get_magnitude()
  float get_sqrMagnitude()
  float Angle(Vector2 from, Vector2 to)
  float SignedAngle(Vector2 from, Vector2 to)
  float Distance(Vector2 a, Vector2 b)
  Vector2 ClampMagnitude(Vector2 vector, float maxLength)
  float SqrMagnitude(Vector2 a)
  float SqrMagnitude()
  Vector2 Min(Vector2 lhs, Vector2 rhs)
  Vector2 Max(Vector2 lhs, Vector2 rhs)
  Vector2 SmoothDamp(Vector2 current, Vector2 target, Vector2& currentVelocity, float smoothTime, float maxSpeed)
  Vector2 SmoothDamp(Vector2 current, Vector2 target, Vector2& currentVelocity, float smoothTime)
  Vector2 SmoothDamp(Vector2 current, Vector2 target, Vector2& currentVelocity, float smoothTime, float maxSpeed, float deltaTime)
  Vector2 op_Addition(Vector2 a, Vector2 b)
  Vector2 op_Subtraction(Vector2 a, Vector2 b)
  Vector2 op_Multiply(Vector2 a, Vector2 b)
  Vector2 op_Division(Vector2 a, Vector2 b)
  Vector2 op_UnaryNegation(Vector2 a)
  Vector2 op_Multiply(Vector2 a, float d)
  Vector2 op_Multiply(float d, Vector2 a)
  Vector2 op_Division(Vector2 a, float d)
  bool op_Equality(Vector2 lhs, Vector2 rhs)
  bool op_Inequality(Vector2 lhs, Vector2 rhs)
  Vector2 op_Implicit(Vector3 v)
  Vector3 op_Implicit(Vector2 v)
  Vector2 get_zero()
  Vector2 get_one()
  Vector2 get_up()
  Vector2 get_down()
  Vector2 get_left()
  Vector2 get_right()
  Vector2 get_positiveInfinity()
  Vector2 get_negativeInfinity()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Vector2Int
Наследуется от: ValueType
Поля:
  int m_X
  int m_Y
  Vector2Int s_Zero
  Vector2Int s_One
  Vector2Int s_Up
  Vector2Int s_Down
  Vector2Int s_Left
  Vector2Int s_Right
Свойства:
  int x
  int y
  int Item
  float magnitude
  int sqrMagnitude
  Vector2Int zero
  Vector2Int one
  Vector2Int up
  Vector2Int down
  Vector2Int left
  Vector2Int right
Методы:
  int get_x()
  void set_x(int value)
  int get_y()
  void set_y(int value)
  void .ctor(int x, int y)
  void Set(int x, int y)
  int get_Item(int index)
  void set_Item(int index, int value)
  float get_magnitude()
  int get_sqrMagnitude()
  float Distance(Vector2Int a, Vector2Int b)
  Vector2Int Min(Vector2Int lhs, Vector2Int rhs)
  Vector2Int Max(Vector2Int lhs, Vector2Int rhs)
  Vector2Int Scale(Vector2Int a, Vector2Int b)
  void Scale(Vector2Int scale)
  void Clamp(Vector2Int min, Vector2Int max)
  Vector2 op_Implicit(Vector2Int v)
  Vector3Int op_Explicit(Vector2Int v)
  Vector2Int FloorToInt(Vector2 v)
  Vector2Int CeilToInt(Vector2 v)
  Vector2Int RoundToInt(Vector2 v)
  Vector2Int op_UnaryNegation(Vector2Int v)
  Vector2Int op_Addition(Vector2Int a, Vector2Int b)
  Vector2Int op_Subtraction(Vector2Int a, Vector2Int b)
  Vector2Int op_Multiply(Vector2Int a, Vector2Int b)
  Vector2Int op_Multiply(int a, Vector2Int b)
  Vector2Int op_Multiply(Vector2Int a, int b)
  Vector2Int op_Division(Vector2Int a, int b)
  bool op_Equality(Vector2Int lhs, Vector2Int rhs)
  bool op_Inequality(Vector2Int lhs, Vector2Int rhs)
  bool Equals(object other)
  bool Equals(Vector2Int other)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  Vector2Int get_zero()
  Vector2Int get_one()
  Vector2Int get_up()
  Vector2Int get_down()
  Vector2Int get_left()
  Vector2Int get_right()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Vector3Int
Наследуется от: ValueType
Поля:
  int m_X
  int m_Y
  int m_Z
  Vector3Int s_Zero
  Vector3Int s_One
  Vector3Int s_Up
  Vector3Int s_Down
  Vector3Int s_Left
  Vector3Int s_Right
  Vector3Int s_Forward
  Vector3Int s_Back
Свойства:
  int x
  int y
  int z
  int Item
  float magnitude
  int sqrMagnitude
  Vector3Int zero
  Vector3Int one
  Vector3Int up
  Vector3Int down
  Vector3Int left
  Vector3Int right
  Vector3Int forward
  Vector3Int back
Методы:
  int get_x()
  void set_x(int value)
  int get_y()
  void set_y(int value)
  int get_z()
  void set_z(int value)
  void .ctor(int x, int y)
  void .ctor(int x, int y, int z)
  void Set(int x, int y, int z)
  int get_Item(int index)
  void set_Item(int index, int value)
  float get_magnitude()
  int get_sqrMagnitude()
  float Distance(Vector3Int a, Vector3Int b)
  Vector3Int Min(Vector3Int lhs, Vector3Int rhs)
  Vector3Int Max(Vector3Int lhs, Vector3Int rhs)
  Vector3Int Scale(Vector3Int a, Vector3Int b)
  void Scale(Vector3Int scale)
  void Clamp(Vector3Int min, Vector3Int max)
  Vector3 op_Implicit(Vector3Int v)
  Vector2Int op_Explicit(Vector3Int v)
  Vector3Int FloorToInt(Vector3 v)
  Vector3Int CeilToInt(Vector3 v)
  Vector3Int RoundToInt(Vector3 v)
  Vector3Int op_Addition(Vector3Int a, Vector3Int b)
  Vector3Int op_Subtraction(Vector3Int a, Vector3Int b)
  Vector3Int op_Multiply(Vector3Int a, Vector3Int b)
  Vector3Int op_UnaryNegation(Vector3Int a)
  Vector3Int op_Multiply(Vector3Int a, int b)
  Vector3Int op_Multiply(int a, Vector3Int b)
  Vector3Int op_Division(Vector3Int a, int b)
  bool op_Equality(Vector3Int lhs, Vector3Int rhs)
  bool op_Inequality(Vector3Int lhs, Vector3Int rhs)
  bool Equals(object other)
  bool Equals(Vector3Int other)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  Vector3Int get_zero()
  Vector3Int get_one()
  Vector3Int get_up()
  Vector3Int get_down()
  Vector3Int get_left()
  Vector3Int get_right()
  Vector3Int get_forward()
  Vector3Int get_back()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Vector4
Наследуется от: ValueType
Поля:
  float kEpsilon
  float x
  float y
  float z
  float w
  Vector4 zeroVector
  Vector4 oneVector
  Vector4 positiveInfinityVector
  Vector4 negativeInfinityVector
Свойства:
  float Item
  Vector4 normalized
  float magnitude
  float sqrMagnitude
  Vector4 zero
  Vector4 one
  Vector4 positiveInfinity
  Vector4 negativeInfinity
Методы:
  float get_Item(int index)
  void set_Item(int index, float value)
  void .ctor(float x, float y, float z, float w)
  void .ctor(float x, float y, float z)
  void .ctor(float x, float y)
  void Set(float newX, float newY, float newZ, float newW)
  Vector4 Lerp(Vector4 a, Vector4 b, float t)
  Vector4 LerpUnclamped(Vector4 a, Vector4 b, float t)
  Vector4 MoveTowards(Vector4 current, Vector4 target, float maxDistanceDelta)
  Vector4 Scale(Vector4 a, Vector4 b)
  void Scale(Vector4 scale)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(Vector4 other)
  Vector4 Normalize(Vector4 a)
  void Normalize()
  Vector4 get_normalized()
  float Dot(Vector4 a, Vector4 b)
  Vector4 Project(Vector4 a, Vector4 b)
  float Distance(Vector4 a, Vector4 b)
  float Magnitude(Vector4 a)
  float get_magnitude()
  float get_sqrMagnitude()
  Vector4 Min(Vector4 lhs, Vector4 rhs)
  Vector4 Max(Vector4 lhs, Vector4 rhs)
  Vector4 get_zero()
  Vector4 get_one()
  Vector4 get_positiveInfinity()
  Vector4 get_negativeInfinity()
  Vector4 op_Addition(Vector4 a, Vector4 b)
  Vector4 op_Subtraction(Vector4 a, Vector4 b)
  Vector4 op_UnaryNegation(Vector4 a)
  Vector4 op_Multiply(Vector4 a, float d)
  Vector4 op_Multiply(float d, Vector4 a)
  Vector4 op_Division(Vector4 a, float d)
  bool op_Equality(Vector4 lhs, Vector4 rhs)
  bool op_Inequality(Vector4 lhs, Vector4 rhs)
  Vector4 op_Implicit(Vector3 v)
  Vector3 op_Implicit(Vector4 v)
  Vector4 op_Implicit(Vector2 v)
  Vector2 op_Implicit(Vector4 v)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  float SqrMagnitude(Vector4 a)
  float SqrMagnitude()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Ping
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  bool isDone
  int time
  string ip
Методы:
  void .ctor(string address)
  void Finalize()
  void DestroyPing()
  void Internal_Destroy(IntPtr ptr)
  IntPtr Internal_Create(string address)
  bool get_isDone()
  bool Internal_IsDone()
  int get_time()
  string get_ip()
--------------------------------------------------
Класс: UnityEngine.IPlayerEditorConnectionNative
Поля:
Свойства:
Методы:
  void Initialize()
  void DisconnectAll()
  void SendMessage(Guid messageId, Byte[] data, int playerId)
  bool TrySendMessage(Guid messageId, Byte[] data, int playerId)
  void Poll()
  void RegisterInternal(Guid messageId)
  void UnregisterInternal(Guid messageId)
  bool IsConnected()
--------------------------------------------------
Класс: UnityEngine.PlayerConnectionInternal
Наследуется от: object
Поля:
Свойства:
Методы:
  void UnityEngine.IPlayerEditorConnectionNative.SendMessage(Guid messageId, Byte[] data, int playerId)
  bool UnityEngine.IPlayerEditorConnectionNative.TrySendMessage(Guid messageId, Byte[] data, int playerId)
  void UnityEngine.IPlayerEditorConnectionNative.Poll()
  void UnityEngine.IPlayerEditorConnectionNative.RegisterInternal(Guid messageId)
  void UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal(Guid messageId)
  void UnityEngine.IPlayerEditorConnectionNative.Initialize()
  bool UnityEngine.IPlayerEditorConnectionNative.IsConnected()
  void UnityEngine.IPlayerEditorConnectionNative.DisconnectAll()
  bool IsConnected()
  void Initialize()
  void RegisterInternal(string messageId)
  void UnregisterInternal(string messageId)
  void SendMessage(string messageId, Byte[] data, int playerId)
  bool TrySendMessage(string messageId, Byte[] data, int playerId)
  void PollInternal()
  void DisconnectAll()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PlayerPrefsException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor(string error)
--------------------------------------------------
Класс: UnityEngine.PlayerPrefs
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TrySetInt(string key, int value)
  bool TrySetFloat(string key, float value)
  bool TrySetSetString(string key, string value)
  void SetInt(string key, int value)
  int GetInt(string key, int defaultValue)
  int GetInt(string key)
  void SetFloat(string key, float value)
  float GetFloat(string key, float defaultValue)
  float GetFloat(string key)
  void SetString(string key, string value)
  string GetString(string key, string defaultValue)
  string GetString(string key)
  bool HasKey(string key)
  void DeleteKey(string key)
  void DeleteAll()
  void Save()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.DrivenPropertyManager
Наследуется от: object
Поля:
Свойства:
Методы:
  void RegisterProperty(Object driver, Object target, string propertyPath)
  void TryRegisterProperty(Object driver, Object target, string propertyPath)
  void UnregisterProperty(Object driver, Object target, string propertyPath)
  void UnregisterProperties(Object driver)
  void RegisterPropertyPartial(Object driver, Object target, string propertyPath)
  void TryRegisterPropertyPartial(Object driver, Object target, string propertyPath)
  void UnregisterPropertyPartial(Object driver, Object target, string propertyPath)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PropertyAttribute
Наследуется от: Attribute
Поля:
  int <order>k__BackingField
Свойства:
  int order
Методы:
  int get_order()
  void set_order(int value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ContextMenuItemAttribute
Наследуется от: PropertyAttribute
Поля:
  string name
  string function
Свойства:
Методы:
  void .ctor(string name, string function)
--------------------------------------------------
Класс: UnityEngine.InspectorNameAttribute
Наследуется от: PropertyAttribute
Поля:
  string displayName
Свойства:
Методы:
  void .ctor(string displayName)
--------------------------------------------------
Класс: UnityEngine.TooltipAttribute
Наследуется от: PropertyAttribute
Поля:
  string tooltip
Свойства:
Методы:
  void .ctor(string tooltip)
--------------------------------------------------
Класс: UnityEngine.SpaceAttribute
Наследуется от: PropertyAttribute
Поля:
  float height
Свойства:
Методы:
  void .ctor()
  void .ctor(float height)
--------------------------------------------------
Класс: UnityEngine.HeaderAttribute
Наследуется от: PropertyAttribute
Поля:
  string header
Свойства:
Методы:
  void .ctor(string header)
--------------------------------------------------
Класс: UnityEngine.RangeAttribute
Наследуется от: PropertyAttribute
Поля:
  float min
  float max
Свойства:
Методы:
  void .ctor(float min, float max)
--------------------------------------------------
Класс: UnityEngine.MinAttribute
Наследуется от: PropertyAttribute
Поля:
  float min
Свойства:
Методы:
  void .ctor(float min)
--------------------------------------------------
Класс: UnityEngine.MultilineAttribute
Наследуется от: PropertyAttribute
Поля:
  int lines
Свойства:
Методы:
  void .ctor()
  void .ctor(int lines)
--------------------------------------------------
Класс: UnityEngine.TextAreaAttribute
Наследуется от: PropertyAttribute
Поля:
  int minLines
  int maxLines
Свойства:
Методы:
  void .ctor()
  void .ctor(int minLines, int maxLines)
--------------------------------------------------
Класс: UnityEngine.ColorUsageAttribute
Наследуется от: PropertyAttribute
Поля:
  bool showAlpha
  bool hdr
  float minBrightness
  float maxBrightness
  float minExposureValue
  float maxExposureValue
Свойства:
Методы:
  void .ctor(bool showAlpha)
  void .ctor(bool showAlpha, bool hdr)
  void .ctor(bool showAlpha, bool hdr, float minBrightness, float maxBrightness, float minExposureValue, float maxExposureValue)
--------------------------------------------------
Класс: UnityEngine.GradientUsageAttribute
Наследуется от: PropertyAttribute
Поля:
  bool hdr
  ColorSpace colorSpace
Свойства:
Методы:
  void .ctor(bool hdr)
  void .ctor(bool hdr, ColorSpace colorSpace)
--------------------------------------------------
Класс: UnityEngine.DelayedAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.NonReorderableAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PropertyNameUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  PropertyName PropertyNameFromString(string name)
  void .ctor()
  void PropertyNameFromString_Injected(string name, PropertyName& ret)
--------------------------------------------------
Класс: UnityEngine.PropertyName
Наследуется от: ValueType
Поля:
  int id
Свойства:
Методы:
  void .ctor(string name)
  void .ctor(PropertyName other)
  void .ctor(int id)
  bool IsNullOrEmpty(PropertyName prop)
  bool op_Equality(PropertyName lhs, PropertyName rhs)
  bool op_Inequality(PropertyName lhs, PropertyName rhs)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(PropertyName other)
  PropertyName op_Implicit(string name)
  PropertyName op_Implicit(int id)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.Random
Наследуется от: object
Поля:
Свойства:
  State state
  float value
  Vector3 insideUnitSphere
  Vector2 insideUnitCircle
  Vector3 onUnitSphere
  Quaternion rotation
  Quaternion rotationUniform
  int seed
Методы:
  void InitState(int seed)
  State get_state()
  void set_state(State value)
  float Range(float minInclusive, float maxInclusive)
  int Range(int minInclusive, int maxExclusive)
  int RandomRangeInt(int minInclusive, int maxExclusive)
  float get_value()
  Vector3 get_insideUnitSphere()
  void GetRandomUnitCircle(Vector2& output)
  Vector2 get_insideUnitCircle()
  Vector3 get_onUnitSphere()
  Quaternion get_rotation()
  Quaternion get_rotationUniform()
  int get_seed()
  void set_seed(int value)
  float RandomRange(float min, float max)
  int RandomRange(int min, int max)
  Color ColorHSV()
  Color ColorHSV(float hueMin, float hueMax)
  Color ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax)
  Color ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax, float valueMin, float valueMax)
  Color ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax, float valueMin, float valueMax, float alphaMin, float alphaMax)
  void get_state_Injected(State& ret)
  void set_state_Injected(State& value)
  void get_insideUnitSphere_Injected(Vector3& ret)
  void get_onUnitSphere_Injected(Vector3& ret)
  void get_rotation_Injected(Quaternion& ret)
  void get_rotationUniform_Injected(Quaternion& ret)
--------------------------------------------------
Класс: UnityEngine.IconAttribute
Наследуется от: Attribute
Поля:
  string m_IconPath
Свойства:
  string path
Методы:
  string get_path()
  void .ctor()
  void .ctor(string path)
--------------------------------------------------
Класс: UnityEngine.ResourceRequest
Наследуется от: AsyncOperation
Поля:
  string m_Path
  Type m_Type
Свойства:
  Object asset
Методы:
  Object GetResult()
  Object get_asset()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ResourcesAPIInternal
Наследуется от: object
Поля:
Свойства:
Методы:
  Object[] FindObjectsOfTypeAll(Type type)
  Shader FindShaderByName(string name)
  Object Load(string path, Type systemTypeInstance)
  Object[] LoadAll(string path, Type systemTypeInstance)
  ResourceRequest LoadAsyncInternal(string path, Type type)
  void UnloadAsset(Object assetToUnload)
--------------------------------------------------
Класс: UnityEngine.ResourcesAPI
Наследуется от: object
Поля:
  ResourcesAPI s_DefaultAPI
  ResourcesAPI <overrideAPI>k__BackingField
Свойства:
  ResourcesAPI ActiveAPI
  ResourcesAPI overrideAPI
Методы:
  ResourcesAPI get_ActiveAPI()
  ResourcesAPI get_overrideAPI()
  void set_overrideAPI(ResourcesAPI value)
  void .ctor()
  Object[] FindObjectsOfTypeAll(Type systemTypeInstance)
  Shader FindShaderByName(string name)
  Object Load(string path, Type systemTypeInstance)
  Object[] LoadAll(string path, Type systemTypeInstance)
  ResourceRequest LoadAsync(string path, Type systemTypeInstance)
  void UnloadAsset(Object assetToUnload)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Resources
Наследуется от: object
Поля:
Свойства:
Методы:
  T[] ConvertObjects(Object[] rawObjects)
  Object[] FindObjectsOfTypeAll(Type type)
  T[] FindObjectsOfTypeAll()
  Object Load(string path)
  T Load(string path)
  Object Load(string path, Type systemTypeInstance)
  ResourceRequest LoadAsync(string path)
  ResourceRequest LoadAsync(string path)
  ResourceRequest LoadAsync(string path, Type type)
  Object[] LoadAll(string path, Type systemTypeInstance)
  Object[] LoadAll(string path)
  T[] LoadAll(string path)
  Object GetBuiltinResource(Type type, string path)
  T GetBuiltinResource(string path)
  void UnloadAsset(Object assetToUnload)
  void UnloadAssetImplResourceManager(Object assetToUnload)
  AsyncOperation UnloadUnusedAssets()
  Object InstanceIDToObject(int instanceID)
  void InstanceIDToObjectList(IntPtr instanceIDs, int instanceCount, List`1<Object> objects)
  void InstanceIDToObjectList(NativeArray`1<int> instanceIDs, List`1<Object> objects)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.AsyncOperation
Наследуется от: YieldInstruction
Поля:
  IntPtr m_Ptr
  Action`1<AsyncOperation> m_completeCallback
Свойства:
  bool isDone
  float progress
  int priority
  bool allowSceneActivation
Методы:
  void InternalDestroy(IntPtr ptr)
  bool get_isDone()
  float get_progress()
  int get_priority()
  void set_priority(int value)
  bool get_allowSceneActivation()
  void set_allowSceneActivation(bool value)
  void Finalize()
  void InvokeCompletionEvent()
  void add_completed(Action`1<AsyncOperation> value)
  void remove_completed(Action`1<AsyncOperation> value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.AttributeHelperEngine
Наследуется от: object
Поля:
Свойства:
Методы:
  Type GetParentTypeDisallowingMultipleInclusion(Type type)
  Type[] GetRequiredComponents(Type klass)
  int GetExecuteMode(Type klass)
  int CheckIsEditorScript(Type klass)
  int GetDefaultExecutionOrderFor(Type klass)
  T GetCustomAttributeOfType(Type klass)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.DisallowMultipleComponent
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.RequireComponent
Наследуется от: Attribute
Поля:
  Type m_Type0
  Type m_Type1
  Type m_Type2
Свойства:
Методы:
  void .ctor(Type requiredComponent)
  void .ctor(Type requiredComponent, Type requiredComponent2)
  void .ctor(Type requiredComponent, Type requiredComponent2, Type requiredComponent3)
--------------------------------------------------
Класс: UnityEngine.AddComponentMenu
Наследуется от: Attribute
Поля:
  string m_AddComponentMenu
  int m_Ordering
Свойства:
  string componentMenu
  int componentOrder
Методы:
  void .ctor(string menuName)
  void .ctor(string menuName, int order)
  string get_componentMenu()
  int get_componentOrder()
--------------------------------------------------
Класс: UnityEngine.CreateAssetMenuAttribute
Наследуется от: Attribute
Поля:
  string <menuName>k__BackingField
  string <fileName>k__BackingField
  int <order>k__BackingField
Свойства:
  string menuName
  string fileName
  int order
Методы:
  string get_menuName()
  void set_menuName(string value)
  string get_fileName()
  void set_fileName(string value)
  int get_order()
  void set_order(int value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ContextMenu
Наследуется от: Attribute
Поля:
  string menuItem
  bool validate
  int priority
Свойства:
Методы:
  void .ctor(string itemName)
  void .ctor(string itemName, bool isValidateFunction)
  void .ctor(string itemName, bool isValidateFunction, int priority)
--------------------------------------------------
Класс: UnityEngine.ExecuteInEditMode
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ExecuteAlways
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.HideInInspector
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.HideInCallstackAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.HelpURLAttribute
Наследуется от: Attribute
Поля:
  string m_Url
  bool m_Dispatcher
  string m_DispatchingFieldName
Свойства:
  string URL
Методы:
  void .ctor(string url)
  void .ctor(string defaultURL, string dispatchingFieldName)
  string get_URL()
--------------------------------------------------
Класс: UnityEngine.DefaultExecutionOrder
Наследуется от: Attribute
Поля:
  int m_Order
Свойства:
  int order
Методы:
  void .ctor(int order)
  int get_order()
--------------------------------------------------
Класс: UnityEngine.AssemblyIsEditorAssembly
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ExcludeFromPresetAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Behaviour
Наследуется от: Component
Поля:
Свойства:
  bool enabled
  bool isActiveAndEnabled
Методы:
  bool get_enabled()
  void set_enabled(bool value)
  bool get_isActiveAndEnabled()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.CastHelper`1
Наследуется от: ValueType
Поля:
  T t
  IntPtr onePointerFurtherThanT
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ClassLibraryInitializer
Наследуется от: object
Поля:
Свойства:
Методы:
  void Init()
--------------------------------------------------
Класс: UnityEngine.Component
Наследуется от: Object
Поля:
Свойства:
  Transform transform
  GameObject gameObject
  string tag
Методы:
  Transform get_transform()
  GameObject get_gameObject()
  Component GetComponent(Type type)
  void GetComponentFastPath(Type type, IntPtr oneFurtherThanResultValue)
  T GetComponent()
  bool TryGetComponent(Type type, Component& component)
  bool TryGetComponent(T& component)
  Component GetComponent(string type)
  Component GetComponentInChildren(Type t, bool includeInactive)
  Component GetComponentInChildren(Type t)
  T GetComponentInChildren(bool includeInactive)
  T GetComponentInChildren()
  Component[] GetComponentsInChildren(Type t, bool includeInactive)
  Component[] GetComponentsInChildren(Type t)
  T[] GetComponentsInChildren(bool includeInactive)
  void GetComponentsInChildren(bool includeInactive, List`1<T> result)
  T[] GetComponentsInChildren()
  void GetComponentsInChildren(List`1<T> results)
  Component GetComponentInParent(Type t, bool includeInactive)
  Component GetComponentInParent(Type t)
  T GetComponentInParent(bool includeInactive)
  T GetComponentInParent()
  Component[] GetComponentsInParent(Type t, bool includeInactive)
  Component[] GetComponentsInParent(Type t)
  T[] GetComponentsInParent(bool includeInactive)
  void GetComponentsInParent(bool includeInactive, List`1<T> results)
  T[] GetComponentsInParent()
  Component[] GetComponents(Type type)
  void GetComponentsForListInternal(Type searchType, object resultList)
  void GetComponents(Type type, List`1<Component> results)
  void GetComponents(List`1<T> results)
  string get_tag()
  void set_tag(string value)
  T[] GetComponents()
  bool CompareTag(string tag)
  void SendMessageUpwards(string methodName, object value, SendMessageOptions options)
  void SendMessageUpwards(string methodName, object value)
  void SendMessageUpwards(string methodName)
  void SendMessageUpwards(string methodName, SendMessageOptions options)
  void SendMessage(string methodName, object value)
  void SendMessage(string methodName)
  void SendMessage(string methodName, object value, SendMessageOptions options)
  void SendMessage(string methodName, SendMessageOptions options)
  void BroadcastMessage(string methodName, object parameter, SendMessageOptions options)
  void BroadcastMessage(string methodName, object parameter)
  void BroadcastMessage(string methodName)
  void BroadcastMessage(string methodName, SendMessageOptions options)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Coroutine
Наследуется от: YieldInstruction
Поля:
  IntPtr m_Ptr
Свойства:
Методы:
  void .ctor()
  void Finalize()
  void ReleaseCoroutine(IntPtr ptr)
--------------------------------------------------
Класс: UnityEngine.SetupCoroutine
Наследуется от: object
Поля:
Свойства:
Методы:
  void InvokeMoveNext(IEnumerator enumerator, IntPtr returnValueAddress)
  object InvokeMember(object behaviour, string name, object variable)
  object InvokeStatic(Type klass, string name, object variable)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.CustomYieldInstruction
Наследуется от: object
Поля:
Свойства:
  bool keepWaiting
  object Current
Методы:
  bool get_keepWaiting()
  object get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.EnumData
Наследуется от: ValueType
Поля:
  Enum[] values
  Int32[] flagValues
  String[] displayNames
  String[] names
  String[] tooltip
  bool flags
  Type underlyingType
  bool unsigned
  bool serializable
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.EnumDataUtility
Наследуется от: object
Поля:
  Dictionary`2<Type, EnumData> s_NonObsoleteEnumData
  Dictionary`2<Type, EnumData> s_EnumData
Свойства:
Методы:
  EnumData GetCachedEnumData(Type enumType, bool excludeObsolete, Func`2<string, string> nicifyName)
  int EnumFlagsToInt(EnumData enumData, Enum enumValue)
  Enum IntToEnumFlags(Type enumType, int value)
  bool CheckObsoleteAddition(FieldInfo field, bool excludeObsolete)
  string EnumTooltipFromEnumField(FieldInfo field)
  string EnumNameFromEnumField(FieldInfo field, Func`2<string, string> nicifyName)
  void .cctor()
  string <EnumNameFromEnumField>g__NicifyName|7_0(<>c__DisplayClass7_0& )
--------------------------------------------------
Класс: UnityEngine.EnumInfo
Наследуется от: object
Поля:
  String[] names
  Int32[] values
  String[] annotations
  bool isFlags
Свойства:
Методы:
  EnumInfo CreateEnumInfoFromNativeEnum(String[] names, Int32[] values, String[] annotations, bool isFlags)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ExcludeFromObjectFactoryAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ExtensionOfNativeClassAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.FailedToLoadScriptObject
Наследуется от: Object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.GameObject
Наследуется от: Object
Поля:
Свойства:
  Transform transform
  int layer
  bool active
  bool activeSelf
  bool activeInHierarchy
  bool isStatic
  bool isStaticBatchable
  string tag
  Scene scene
  ulong sceneCullingMask
  GameObject gameObject
Методы:
  GameObject CreatePrimitive(PrimitiveType type)
  T GetComponent()
  Component GetComponent(Type type)
  void GetComponentFastPath(Type type, IntPtr oneFurtherThanResultValue)
  Component GetComponentByName(string type)
  Component GetComponent(string type)
  Component GetComponentInChildren(Type type, bool includeInactive)
  Component GetComponentInChildren(Type type)
  T GetComponentInChildren()
  T GetComponentInChildren(bool includeInactive)
  Component GetComponentInParent(Type type, bool includeInactive)
  Component GetComponentInParent(Type type)
  T GetComponentInParent()
  T GetComponentInParent(bool includeInactive)
  Array GetComponentsInternal(Type type, bool useSearchTypeAsArrayReturnType, bool recursive, bool includeInactive, bool reverse, object resultList)
  Component[] GetComponents(Type type)
  T[] GetComponents()
  void GetComponents(Type type, List`1<Component> results)
  void GetComponents(List`1<T> results)
  Component[] GetComponentsInChildren(Type type)
  Component[] GetComponentsInChildren(Type type, bool includeInactive)
  T[] GetComponentsInChildren(bool includeInactive)
  void GetComponentsInChildren(bool includeInactive, List`1<T> results)
  T[] GetComponentsInChildren()
  void GetComponentsInChildren(List`1<T> results)
  Component[] GetComponentsInParent(Type type)
  Component[] GetComponentsInParent(Type type, bool includeInactive)
  void GetComponentsInParent(bool includeInactive, List`1<T> results)
  T[] GetComponentsInParent(bool includeInactive)
  T[] GetComponentsInParent()
  bool TryGetComponent(T& component)
  bool TryGetComponent(Type type, Component& component)
  Component TryGetComponentInternal(Type type)
  void TryGetComponentFastPath(Type type, IntPtr oneFurtherThanResultValue)
  GameObject FindWithTag(string tag)
  void SendMessageUpwards(string methodName, SendMessageOptions options)
  void SendMessage(string methodName, SendMessageOptions options)
  void BroadcastMessage(string methodName, SendMessageOptions options)
  Component AddComponentInternal(string className)
  Component Internal_AddComponentWithType(Type componentType)
  Component AddComponent(Type componentType)
  T AddComponent()
  Transform get_transform()
  int get_layer()
  void set_layer(int value)
  bool get_active()
  void set_active(bool value)
  void SetActive(bool value)
  bool get_activeSelf()
  bool get_activeInHierarchy()
  void SetActiveRecursively(bool state)
  bool get_isStatic()
  void set_isStatic(bool value)
  bool get_isStaticBatchable()
  string get_tag()
  void set_tag(string value)
  bool CompareTag(string tag)
  GameObject FindGameObjectWithTag(string tag)
  GameObject[] FindGameObjectsWithTag(string tag)
  void SendMessageUpwards(string methodName, object value, SendMessageOptions options)
  void SendMessageUpwards(string methodName, object value)
  void SendMessageUpwards(string methodName)
  void SendMessage(string methodName, object value, SendMessageOptions options)
  void SendMessage(string methodName, object value)
  void SendMessage(string methodName)
  void BroadcastMessage(string methodName, object parameter, SendMessageOptions options)
  void BroadcastMessage(string methodName, object parameter)
  void BroadcastMessage(string methodName)
  void .ctor(string name)
  void .ctor()
  void .ctor(string name, Type[] components)
  void Internal_CreateGameObject(GameObject self, string name)
  GameObject Find(string name)
  Scene get_scene()
  ulong get_sceneCullingMask()
  GameObject get_gameObject()
  void get_scene_Injected(Scene& ret)
--------------------------------------------------
Класс: UnityEngine.LayerMask
Наследуется от: ValueType
Поля:
  int m_Mask
Свойства:
  int value
Методы:
  int op_Implicit(LayerMask mask)
  LayerMask op_Implicit(int intVal)
  int get_value()
  void set_value(int value)
  string LayerToName(int layer)
  int NameToLayer(string layerName)
  int GetMask(String[] layerNames)
--------------------------------------------------
Класс: UnityEngine.LazyLoadReference`1
Наследуется от: ValueType
Поля:
  int kInstanceID_None
  int m_InstanceID
Свойства:
  bool isSet
  bool isBroken
  T asset
  int instanceID
Методы:
  bool get_isSet()
  bool get_isBroken()
  T get_asset()
  void set_asset(T value)
  int get_instanceID()
  void set_instanceID(int value)
  void .ctor(T asset)
  void .ctor(int instanceID)
  LazyLoadReference`1<T> op_Implicit(T asset)
  LazyLoadReference`1<T> op_Implicit(int instanceID)
--------------------------------------------------
Класс: UnityEngine.ManagedStreamHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  void ValidateLoadFromStream(Stream stream)
  void ManagedStreamRead(Byte[] buffer, int offset, int count, Stream stream, IntPtr returnValueAddress)
  void ManagedStreamSeek(long offset, UInt32 origin, Stream stream, IntPtr returnValueAddress)
  void ManagedStreamLength(Stream stream, IntPtr returnValueAddress)
--------------------------------------------------
Класс: UnityEngine.MonoBehaviour
Наследуется от: Behaviour
Поля:
Свойства:
  bool useGUILayout
Методы:
  bool IsInvoking()
  void CancelInvoke()
  void Invoke(string methodName, float time)
  void InvokeRepeating(string methodName, float time, float repeatRate)
  void CancelInvoke(string methodName)
  bool IsInvoking(string methodName)
  Coroutine StartCoroutine(string methodName)
  Coroutine StartCoroutine(string methodName, object value)
  Coroutine StartCoroutine(IEnumerator routine)
  Coroutine StartCoroutine_Auto(IEnumerator routine)
  void StopCoroutine(IEnumerator routine)
  void StopCoroutine(Coroutine routine)
  void StopCoroutine(string methodName)
  void StopAllCoroutines()
  bool get_useGUILayout()
  void set_useGUILayout(bool value)
  void print(object message)
  void Internal_CancelInvokeAll(MonoBehaviour self)
  bool Internal_IsInvokingAll(MonoBehaviour self)
  void InvokeDelayed(MonoBehaviour self, string methodName, float time, float repeatRate)
  void CancelInvoke(MonoBehaviour self, string methodName)
  bool IsInvoking(MonoBehaviour self, string methodName)
  bool IsObjectMonoBehaviour(Object obj)
  Coroutine StartCoroutineManaged(string methodName, object value)
  Coroutine StartCoroutineManaged2(IEnumerator enumerator)
  void StopCoroutineManaged(Coroutine routine)
  void StopCoroutineFromEnumeratorManaged(IEnumerator routine)
  string GetScriptClassName()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.NoAllocHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  void ResizeList(List`1<T> list, int size)
  void EnsureListElemCount(List`1<T> list, int count)
  int SafeLength(Array values)
  int SafeLength(List`1<T> values)
  T[] ExtractArrayFromListT(List`1<T> list)
  void Internal_ResizeList(object list, int size)
  Array ExtractArrayFromList(object list)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.RangeInt
Наследуется от: ValueType
Поля:
  int start
  int length
Свойства:
  int end
Методы:
  int get_end()
  void .ctor(int start, int length)
--------------------------------------------------
Класс: UnityEngine.RuntimeInitializeLoadType
Наследуется от: Enum
Поля:
  int value__
  RuntimeInitializeLoadType AfterSceneLoad
  RuntimeInitializeLoadType BeforeSceneLoad
  RuntimeInitializeLoadType AfterAssembliesLoaded
  RuntimeInitializeLoadType BeforeSplashScreen
  RuntimeInitializeLoadType SubsystemRegistration
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.RuntimeInitializeOnLoadMethodAttribute
Наследуется от: PreserveAttribute
Поля:
  RuntimeInitializeLoadType m_LoadType
Свойства:
  RuntimeInitializeLoadType loadType
Методы:
  void .ctor()
  void .ctor(RuntimeInitializeLoadType loadType)
  RuntimeInitializeLoadType get_loadType()
  void set_loadType(RuntimeInitializeLoadType value)
--------------------------------------------------
Класс: UnityEngine.ScriptableObject
Наследуется от: Object
Поля:
Свойства:
Методы:
  void .ctor()
  void SetDirty()
  ScriptableObject CreateInstance(string className)
  ScriptableObject CreateInstance(Type type)
  T CreateInstance()
  ScriptableObject CreateInstance(Type type, Action`1<ScriptableObject> initialize)
  void CreateScriptableObject(ScriptableObject self)
  ScriptableObject CreateScriptableObjectInstanceFromName(string className)
  ScriptableObject CreateScriptableObjectInstanceFromType(Type type, bool applyDefaultsAndReset)
  void ResetAndApplyDefaultInstances(Object obj)
--------------------------------------------------
Класс: UnityEngine.ScriptingRuntime
Наследуется от: object
Поля:
Свойства:
Методы:
  String[] GetAllUserAssemblies()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ScriptingUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsManagedCodeWorking()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.SelectionBaseAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.StackTraceUtility
Наследуется от: object
Поля:
  string projectFolder
Свойства:
Методы:
  void SetProjectFolder(string folder)
  string ExtractStackTrace()
  string ExtractStringFromException(object exception)
  void ExtractStringFromExceptionInternal(object exceptiono, String& message, String& stackTrace)
  string ExtractFormattedStackTrace(StackTrace stackTrace)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.UnityException
Наследуется от: SystemException
Поля:
  int Result
  string unityStackTrace
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: UnityEngine.MissingComponentException
Наследуется от: SystemException
Поля:
  int Result
  string unityStackTrace
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: UnityEngine.UnassignedReferenceException
Наследуется от: SystemException
Поля:
  int Result
  string unityStackTrace
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: UnityEngine.MissingReferenceException
Наследуется от: SystemException
Поля:
  int Result
  string unityStackTrace
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: UnityEngine.TextAsset
Наследуется от: Object
Поля:
Свойства:
  Byte[] bytes
  string text
  long dataSize
Методы:
  Byte[] get_bytes()
  Byte[] GetPreviewBytes(int maxByteCount)
  void Internal_CreateInstance(TextAsset self, string text)
  IntPtr GetDataPtr()
  long GetDataSize()
  string get_text()
  long get_dataSize()
  string ToString()
  void .ctor()
  void .ctor(string text)
  void .ctor(CreateOptions options, string text)
  NativeArray`1<T> GetData()
  string GetPreview(int maxChars)
  string DecodeString(Byte[] bytes)
--------------------------------------------------
Класс: UnityEngine.TrackedReference
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
Методы:
  void .ctor()
  bool op_Equality(TrackedReference x, TrackedReference y)
  bool op_Inequality(TrackedReference x, TrackedReference y)
  bool Equals(object o)
  int GetHashCode()
  bool op_Implicit(TrackedReference exists)
--------------------------------------------------
Класс: UnityEngine.UnhandledExceptionHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  void RegisterUECatcher()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UnityAPICompatibilityVersionAttribute
Наследуется от: Attribute
Поля:
  string _version
  String[] _configurationAssembliesHashes
Свойства:
  string version
  String[] configurationAssembliesHashes
Методы:
  void .ctor(string version)
  void .ctor(string version, bool checkOnlyUnityVersion)
  void .ctor(string version, String[] configurationAssembliesHashes)
  string get_version()
  String[] get_configurationAssembliesHashes()
--------------------------------------------------
Класс: UnityEngine.HideFlags
Наследуется от: Enum
Поля:
  int value__
  HideFlags None
  HideFlags HideInHierarchy
  HideFlags HideInInspector
  HideFlags DontSaveInEditor
  HideFlags NotEditable
  HideFlags DontSaveInBuild
  HideFlags DontUnloadUnusedAsset
  HideFlags DontSave
  HideFlags HideAndDontSave
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.FindObjectsSortMode
Наследуется от: Enum
Поля:
  int value__
  FindObjectsSortMode None
  FindObjectsSortMode InstanceID
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.FindObjectsInactive
Наследуется от: Enum
Поля:
  int value__
  FindObjectsInactive Exclude
  FindObjectsInactive Include
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Object
Наследуется от: object
Поля:
  IntPtr m_CachedPtr
  int OffsetOfInstanceIDInCPlusPlusObject
  string objectIsNullMessage
  string cloneDestroyedMessage
Свойства:
  string name
  HideFlags hideFlags
Методы:
  int GetInstanceID()
  int GetHashCode()
  bool Equals(object other)
  bool op_Implicit(Object exists)
  bool CompareBaseObjects(Object lhs, Object rhs)
  void EnsureRunningOnMainThread()
  bool IsNativeObjectAlive(Object o)
  IntPtr GetCachedPtr()
  string get_name()
  void set_name(string value)
  Object Instantiate(Object original, Vector3 position, Quaternion rotation)
  Object Instantiate(Object original, Vector3 position, Quaternion rotation, Transform parent)
  Object Instantiate(Object original)
  Object Instantiate(Object original, Transform parent)
  Object Instantiate(Object original, Transform parent, bool instantiateInWorldSpace)
  T Instantiate(T original)
  T Instantiate(T original, Vector3 position, Quaternion rotation)
  T Instantiate(T original, Vector3 position, Quaternion rotation, Transform parent)
  T Instantiate(T original, Transform parent)
  T Instantiate(T original, Transform parent, bool worldPositionStays)
  void Destroy(Object obj, float t)
  void Destroy(Object obj)
  void DestroyImmediate(Object obj, bool allowDestroyingAssets)
  void DestroyImmediate(Object obj)
  Object[] FindObjectsOfType(Type type)
  Object[] FindObjectsOfType(Type type, bool includeInactive)
  Object[] FindObjectsByType(Type type, FindObjectsSortMode sortMode)
  Object[] FindObjectsByType(Type type, FindObjectsInactive findObjectsInactive, FindObjectsSortMode sortMode)
  void DontDestroyOnLoad(Object target)
  HideFlags get_hideFlags()
  void set_hideFlags(HideFlags value)
  void DestroyObject(Object obj, float t)
  void DestroyObject(Object obj)
  Object[] FindSceneObjectsOfType(Type type)
  Object[] FindObjectsOfTypeIncludingAssets(Type type)
  T[] FindObjectsOfType()
  T[] FindObjectsByType(FindObjectsSortMode sortMode)
  T[] FindObjectsOfType(bool includeInactive)
  T[] FindObjectsByType(FindObjectsInactive findObjectsInactive, FindObjectsSortMode sortMode)
  T FindObjectOfType()
  T FindObjectOfType(bool includeInactive)
  T FindFirstObjectByType()
  T FindAnyObjectByType()
  T FindFirstObjectByType(FindObjectsInactive findObjectsInactive)
  T FindAnyObjectByType(FindObjectsInactive findObjectsInactive)
  Object[] FindObjectsOfTypeAll(Type type)
  void CheckNullArgument(object arg, string message)
  Object FindObjectOfType(Type type)
  Object FindFirstObjectByType(Type type)
  Object FindAnyObjectByType(Type type)
  Object FindObjectOfType(Type type, bool includeInactive)
  Object FindFirstObjectByType(Type type, FindObjectsInactive findObjectsInactive)
  Object FindAnyObjectByType(Type type, FindObjectsInactive findObjectsInactive)
  string ToString()
  bool op_Equality(Object x, Object y)
  bool op_Inequality(Object x, Object y)
  int GetOffsetOfInstanceIDInCPlusPlusObject()
  bool CurrentThreadIsMainThread()
  Object Internal_CloneSingle(Object data)
  Object Internal_CloneSingleWithParent(Object data, Transform parent, bool worldPositionStays)
  Object Internal_InstantiateSingle(Object data, Vector3 pos, Quaternion rot)
  Object Internal_InstantiateSingleWithParent(Object data, Transform parent, Vector3 pos, Quaternion rot)
  string ToString(Object obj)
  string GetName(Object obj)
  bool IsPersistent(Object obj)
  void SetName(Object obj, string name)
  bool DoesObjectWithInstanceIDExist(int instanceID)
  Object FindObjectFromInstanceID(int instanceID)
  Object ForceLoadFromInstanceID(int instanceID)
  void .ctor()
  void .cctor()
  Object Internal_InstantiateSingle_Injected(Object data, Vector3& pos, Quaternion& rot)
  Object Internal_InstantiateSingleWithParent_Injected(Object data, Transform parent, Vector3& pos, Quaternion& rot)
--------------------------------------------------
Класс: UnityEngine.UnitySynchronizationContext
Наследуется от: SynchronizationContext
Поля:
  int kAwqInitialCapacity
  List`1<WorkRequest> m_AsyncWorkQueue
  List`1<WorkRequest> m_CurrentFrameWork
  int m_MainThreadID
  int m_TrackedCount
Свойства:
Методы:
  void .ctor(int mainThreadID)
  void .ctor(List`1<WorkRequest> queue, int mainThreadID)
  void Send(SendOrPostCallback callback, object state)
  void OperationStarted()
  void OperationCompleted()
  void Post(SendOrPostCallback callback, object state)
  SynchronizationContext CreateCopy()
  void Exec()
  bool HasPendingTasks()
  void InitializeSynchronizationContext()
  void ExecuteTasks()
  bool ExecutePendingTasks(long millisecondsTimeout)
--------------------------------------------------
Класс: UnityEngine.WaitForEndOfFrame
Наследуется от: YieldInstruction
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.WaitForFixedUpdate
Наследуется от: YieldInstruction
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.WaitForSeconds
Наследуется от: YieldInstruction
Поля:
  float m_Seconds
Свойства:
Методы:
  void .ctor(float seconds)
--------------------------------------------------
Класс: UnityEngine.WaitForSecondsRealtime
Наследуется от: CustomYieldInstruction
Поля:
  float <waitTime>k__BackingField
  float m_WaitUntilTime
Свойства:
  float waitTime
  bool keepWaiting
Методы:
  float get_waitTime()
  void set_waitTime(float value)
  bool get_keepWaiting()
  void .ctor(float time)
  void Reset()
--------------------------------------------------
Класс: UnityEngine.WaitUntil
Наследуется от: CustomYieldInstruction
Поля:
  Func`1<bool> m_Predicate
Свойства:
  bool keepWaiting
Методы:
  bool get_keepWaiting()
  void .ctor(Func`1<bool> predicate)
--------------------------------------------------
Класс: UnityEngine.WaitWhile
Наследуется от: CustomYieldInstruction
Поля:
  Func`1<bool> m_Predicate
Свойства:
  bool keepWaiting
Методы:
  bool get_keepWaiting()
  void .ctor(Func`1<bool> predicate)
--------------------------------------------------
Класс: UnityEngine.YieldInstruction
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Security
Наследуется от: object
Поля:
Свойства:
Методы:
  Assembly LoadAndVerifyAssembly(Byte[] assemblyData, string authorizationKey)
  Assembly LoadAndVerifyAssembly(Byte[] assemblyData)
  bool PrefetchSocketPolicy(string ip, int atPort)
  bool PrefetchSocketPolicy(string ip, int atPort, int timeout)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Types
Наследуется от: object
Поля:
Свойства:
Методы:
  Type GetType(string typeName, string assemblyName)
--------------------------------------------------
Класс: UnityEngine.SerializeField
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.SerializeReference
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PreferBinarySerialization
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.ISerializationCallbackReceiver
Поля:
Свойства:
Методы:
  void OnBeforeSerialize()
  void OnAfterDeserialize()
--------------------------------------------------
Класс: UnityEngine.ComputeBuffer
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  int count
  int stride
  ComputeBufferMode usage
  string name
Методы:
  void Finalize()
  void Dispose()
  void Dispose(bool disposing)
  IntPtr InitBuffer(int count, int stride, ComputeBufferType type, ComputeBufferMode usage)
  void DestroyBuffer(ComputeBuffer buf)
  void .ctor(int count, int stride)
  void .ctor(int count, int stride, ComputeBufferType type)
  void .ctor(int count, int stride, ComputeBufferType type, ComputeBufferMode usage)
  void .ctor(int count, int stride, ComputeBufferType type, ComputeBufferMode usage, int stackDepth)
  void Release()
  bool IsValidBuffer(ComputeBuffer buf)
  bool IsValid()
  int get_count()
  int get_stride()
  ComputeBufferMode get_usage()
  void SetData(Array data)
  void SetData(List`1<T> data)
  void SetData(NativeArray`1<T> data)
  void SetData(Array data, int managedBufferStartIndex, int computeBufferStartIndex, int count)
  void SetData(List`1<T> data, int managedBufferStartIndex, int computeBufferStartIndex, int count)
  void SetData(NativeArray`1<T> data, int nativeBufferStartIndex, int computeBufferStartIndex, int count)
  void InternalSetNativeData(IntPtr data, int nativeBufferStartIndex, int computeBufferStartIndex, int count, int elemSize)
  void InternalSetData(Array data, int managedBufferStartIndex, int computeBufferStartIndex, int count, int elemSize)
  void GetData(Array data)
  void GetData(Array data, int managedBufferStartIndex, int computeBufferStartIndex, int count)
  void InternalGetData(Array data, int managedBufferStartIndex, int computeBufferStartIndex, int count, int elemSize)
  Void* BeginBufferWrite(int offset, int size)
  NativeArray`1<T> BeginWrite(int computeBufferStartIndex, int count)
  void EndBufferWrite(int bytesWritten)
  void EndWrite(int countWritten)
  void set_name(string value)
  void SetName(string name)
  void SetCounterValue(UInt32 counterValue)
  void CopyCount(ComputeBuffer src, ComputeBuffer dst, int dstOffsetBytes)
  IntPtr GetNativeBufferPtr()
--------------------------------------------------
Класс: UnityEngine.ComputeShader
Наследуется от: Object
Поля:
Свойства:
  LocalKeywordSpace keywordSpace
  String[] shaderKeywords
  LocalKeyword[] enabledKeywords
Методы:
  int FindKernel(string name)
  bool HasKernel(string name)
  void SetFloat(int nameID, float val)
  void SetInt(int nameID, int val)
  void SetVector(int nameID, Vector4 val)
  void SetMatrix(int nameID, Matrix4x4 val)
  void SetFloatArray(int nameID, Single[] values)
  void SetIntArray(int nameID, Int32[] values)
  void SetVectorArray(int nameID, Vector4[] values)
  void SetMatrixArray(int nameID, Matrix4x4[] values)
  void SetTexture(int kernelIndex, int nameID, Texture texture, int mipLevel)
  void SetRenderTexture(int kernelIndex, int nameID, RenderTexture texture, int mipLevel, RenderTextureSubElement element)
  void SetTextureFromGlobal(int kernelIndex, int nameID, int globalTextureNameID)
  void Internal_SetBuffer(int kernelIndex, int nameID, ComputeBuffer buffer)
  void Internal_SetGraphicsBuffer(int kernelIndex, int nameID, GraphicsBuffer buffer)
  void SetBuffer(int kernelIndex, int nameID, ComputeBuffer buffer)
  void SetBuffer(int kernelIndex, int nameID, GraphicsBuffer buffer)
  void SetConstantComputeBuffer(int nameID, ComputeBuffer buffer, int offset, int size)
  void SetConstantGraphicsBuffer(int nameID, GraphicsBuffer buffer, int offset, int size)
  void GetKernelThreadGroupSizes(int kernelIndex, UInt32& x, UInt32& y, UInt32& z)
  void Dispatch(int kernelIndex, int threadGroupsX, int threadGroupsY, int threadGroupsZ)
  void Internal_DispatchIndirect(int kernelIndex, ComputeBuffer argsBuffer, UInt32 argsOffset)
  void Internal_DispatchIndirectGraphicsBuffer(int kernelIndex, GraphicsBuffer argsBuffer, UInt32 argsOffset)
  LocalKeywordSpace get_keywordSpace()
  void EnableKeyword(string keyword)
  void DisableKeyword(string keyword)
  bool IsKeywordEnabled(string keyword)
  void EnableLocalKeyword(LocalKeyword keyword)
  void DisableLocalKeyword(LocalKeyword keyword)
  void SetLocalKeyword(LocalKeyword keyword, bool value)
  bool IsLocalKeywordEnabled(LocalKeyword keyword)
  void EnableKeyword(LocalKeyword& keyword)
  void DisableKeyword(LocalKeyword& keyword)
  void SetKeyword(LocalKeyword& keyword, bool value)
  bool IsKeywordEnabled(LocalKeyword& keyword)
  bool IsSupported(int kernelIndex)
  String[] GetShaderKeywords()
  void SetShaderKeywords(String[] names)
  String[] get_shaderKeywords()
  void set_shaderKeywords(String[] value)
  LocalKeyword[] GetEnabledKeywords()
  void SetEnabledKeywords(LocalKeyword[] keywords)
  LocalKeyword[] get_enabledKeywords()
  void set_enabledKeywords(LocalKeyword[] value)
  void .ctor()
  void SetFloat(string name, float val)
  void SetInt(string name, int val)
  void SetVector(string name, Vector4 val)
  void SetMatrix(string name, Matrix4x4 val)
  void SetVectorArray(string name, Vector4[] values)
  void SetMatrixArray(string name, Matrix4x4[] values)
  void SetFloats(string name, Single[] values)
  void SetFloats(int nameID, Single[] values)
  void SetInts(string name, Int32[] values)
  void SetInts(int nameID, Int32[] values)
  void SetBool(string name, bool val)
  void SetBool(int nameID, bool val)
  void SetTexture(int kernelIndex, int nameID, Texture texture)
  void SetTexture(int kernelIndex, string name, Texture texture)
  void SetTexture(int kernelIndex, string name, Texture texture, int mipLevel)
  void SetTexture(int kernelIndex, int nameID, RenderTexture texture, int mipLevel, RenderTextureSubElement element)
  void SetTexture(int kernelIndex, string name, RenderTexture texture, int mipLevel, RenderTextureSubElement element)
  void SetTextureFromGlobal(int kernelIndex, string name, string globalTextureName)
  void SetBuffer(int kernelIndex, string name, ComputeBuffer buffer)
  void SetBuffer(int kernelIndex, string name, GraphicsBuffer buffer)
  void SetConstantBuffer(int nameID, ComputeBuffer buffer, int offset, int size)
  void SetConstantBuffer(string name, ComputeBuffer buffer, int offset, int size)
  void SetConstantBuffer(int nameID, GraphicsBuffer buffer, int offset, int size)
  void SetConstantBuffer(string name, GraphicsBuffer buffer, int offset, int size)
  void DispatchIndirect(int kernelIndex, ComputeBuffer argsBuffer, UInt32 argsOffset)
  void DispatchIndirect(int kernelIndex, ComputeBuffer argsBuffer)
  void DispatchIndirect(int kernelIndex, GraphicsBuffer argsBuffer, UInt32 argsOffset)
  void DispatchIndirect(int kernelIndex, GraphicsBuffer argsBuffer)
  void SetVector_Injected(int nameID, Vector4& val)
  void SetMatrix_Injected(int nameID, Matrix4x4& val)
  void get_keywordSpace_Injected(LocalKeywordSpace& ret)
  void EnableLocalKeyword_Injected(LocalKeyword& keyword)
  void DisableLocalKeyword_Injected(LocalKeyword& keyword)
  void SetLocalKeyword_Injected(LocalKeyword& keyword, bool value)
  bool IsLocalKeywordEnabled_Injected(LocalKeyword& keyword)
--------------------------------------------------
Класс: UnityEngine.DisableBatchingType
Наследуется от: Enum
Поля:
  int value__
  DisableBatchingType False
  DisableBatchingType True
  DisableBatchingType WhenLODFading
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ShaderVariantCollection
Наследуется от: Object
Поля:
Свойства:
  int shaderCount
  int variantCount
  bool isWarmedUp
Методы:
  int get_shaderCount()
  int get_variantCount()
  bool get_isWarmedUp()
  bool AddVariant(Shader shader, PassType passType, String[] keywords)
  bool RemoveVariant(Shader shader, PassType passType, String[] keywords)
  bool ContainsVariant(Shader shader, PassType passType, String[] keywords)
  void Clear()
  void WarmUp()
  void Internal_Create(ShaderVariantCollection svc)
  void .ctor()
  bool Add(ShaderVariant variant)
  bool Remove(ShaderVariant variant)
  bool Contains(ShaderVariant variant)
--------------------------------------------------
Класс: UnityEngine.SnapAxis
Наследуется от: Enum
Поля:
  byte value__
  SnapAxis None
  SnapAxis X
  SnapAxis Y
  SnapAxis Z
  SnapAxis All
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SnapAxisFilter
Наследуется от: ValueType
Поля:
  SnapAxis X
  SnapAxis Y
  SnapAxis Z
  SnapAxisFilter all
  SnapAxis m_Mask
Свойства:
  float x
  float y
  float z
  int active
  float Item
Методы:
  float get_x()
  float get_y()
  float get_z()
  void .ctor(Vector3 v)
  void .ctor(SnapAxis axis)
  string ToString()
  int get_active()
  Vector3 op_Implicit(SnapAxisFilter mask)
  SnapAxisFilter op_Explicit(Vector3 v)
  SnapAxis op_Explicit(SnapAxisFilter mask)
  SnapAxisFilter op_BitwiseOr(SnapAxisFilter left, SnapAxisFilter right)
  SnapAxisFilter op_BitwiseAnd(SnapAxisFilter left, SnapAxisFilter right)
  SnapAxisFilter op_ExclusiveOr(SnapAxisFilter left, SnapAxisFilter right)
  SnapAxisFilter op_OnesComplement(SnapAxisFilter left)
  Vector3 op_Multiply(SnapAxisFilter mask, float value)
  Vector3 op_Multiply(SnapAxisFilter mask, Vector3 right)
  Vector3 op_Multiply(Quaternion rotation, SnapAxisFilter mask)
  bool op_Equality(SnapAxisFilter left, SnapAxisFilter right)
  bool op_Inequality(SnapAxisFilter left, SnapAxisFilter right)
  float get_Item(int i)
  void set_Item(int i, float value)
  bool Equals(SnapAxisFilter other)
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Snapping
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsCardinalDirection(Vector3 direction)
  float Snap(float val, float snap)
  Vector2 Snap(Vector2 val, Vector2 snap)
  Vector3 Snap(Vector3 val, Vector3 snap, SnapAxis axis)
--------------------------------------------------
Класс: UnityEngine.StaticBatchingUtility
Наследуется от: object
Поля:
  ProfilerMarker s_CombineMarker
  ProfilerMarker s_SortMarker
  ProfilerMarker s_MakeBatchMarker
Свойства:
Методы:
  void Combine(GameObject staticBatchRoot)
  void Combine(GameObject[] gos, GameObject staticBatchRoot)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.InternalStaticBatchingUtility
Наследуется от: object
Поля:
  int MaxVerticesInBatch
  string CombinedMeshPrefix
Свойства:
Методы:
  void CombineRoot(GameObject staticBatchRoot, StaticBatcherGOSorter sorter)
  void Combine(GameObject staticBatchRoot, bool combineOnlyStatic, bool isEditorPostprocessScene, StaticBatcherGOSorter sorter)
  UInt32 GetMeshFormatHash(Mesh mesh)
  GameObject[] SortGameObjectsForStaticBatching(GameObject[] gos, StaticBatcherGOSorter sorter)
  void CombineGameObjects(GameObject[] gos, GameObject staticBatchRoot, bool isEditorPostprocessScene, StaticBatcherGOSorter sorter)
  void MakeBatch(List`1<MeshContainer> meshes, Transform staticBatchRootTransform, int batchIndex)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.MeshSubsetCombineUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.LowerResBlitTexture
Наследуется от: Object
Поля:
Свойства:
Методы:
  void LowerResBlitTextureDontStripMe()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PreloadData
Наследуется от: Object
Поля:
Свойства:
Методы:
  void PreloadDataDontStripMe()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.BatteryStatus
Наследуется от: Enum
Поля:
  int value__
  BatteryStatus Unknown
  BatteryStatus Charging
  BatteryStatus Discharging
  BatteryStatus NotCharging
  BatteryStatus Full
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.OperatingSystemFamily
Наследуется от: Enum
Поля:
  int value__
  OperatingSystemFamily Other
  OperatingSystemFamily MacOSX
  OperatingSystemFamily Windows
  OperatingSystemFamily Linux
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.DeviceType
Наследуется от: Enum
Поля:
  int value__
  DeviceType Unknown
  DeviceType Handheld
  DeviceType Console
  DeviceType Desktop
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SystemInfo
Наследуется от: object
Поля:
  string unsupportedIdentifier
Свойства:
  float batteryLevel
  BatteryStatus batteryStatus
  string operatingSystem
  OperatingSystemFamily operatingSystemFamily
  string processorType
  int processorFrequency
  int processorCount
  int systemMemorySize
  string deviceUniqueIdentifier
  string deviceName
  string deviceModel
  bool supportsAccelerometer
  bool supportsGyroscope
  bool supportsLocationService
  bool supportsVibration
  bool supportsAudio
  DeviceType deviceType
  int graphicsMemorySize
  string graphicsDeviceName
  string graphicsDeviceVendor
  int graphicsDeviceID
  int graphicsDeviceVendorID
  GraphicsDeviceType graphicsDeviceType
  bool graphicsUVStartsAtTop
  string graphicsDeviceVersion
  int graphicsShaderLevel
  bool graphicsMultiThreaded
  RenderingThreadingMode renderingThreadingMode
  bool hasHiddenSurfaceRemovalOnGPU
  bool hasDynamicUniformArrayIndexingInFragmentShaders
  bool supportsShadows
  bool supportsRawShadowDepthSampling
  bool supportsRenderTextures
  bool supportsMotionVectors
  bool supportsRenderToCubemap
  bool supportsImageEffects
  bool supports3DTextures
  bool supportsCompressed3DTextures
  bool supports2DArrayTextures
  bool supports3DRenderTextures
  bool supportsCubemapArrayTextures
  bool supportsAnisotropicFilter
  CopyTextureSupport copyTextureSupport
  bool supportsComputeShaders
  bool supportsGeometryShaders
  bool supportsTessellationShaders
  bool supportsRenderTargetArrayIndexFromVertexShader
  bool supportsInstancing
  bool supportsHardwareQuadTopology
  bool supports32bitsIndexBuffer
  bool supportsSparseTextures
  int supportedRenderTargetCount
  bool supportsSeparatedRenderTargetsBlend
  int supportedRandomWriteTargetCount
  int supportsMultisampledTextures
  bool supportsMultisampled2DArrayTextures
  bool supportsMultisampleAutoResolve
  int supportsTextureWrapMirrorOnce
  bool usesReversedZBuffer
  int supportsStencil
  NPOTSupport npotSupport
  int maxTextureSize
  int maxTexture3DSize
  int maxTextureArraySlices
  int maxCubemapSize
  int maxAnisotropyLevel
  int maxRenderTextureSize
  int maxComputeBufferInputsVertex
  int maxComputeBufferInputsFragment
  int maxComputeBufferInputsGeometry
  int maxComputeBufferInputsDomain
  int maxComputeBufferInputsHull
  int maxComputeBufferInputsCompute
  int maxComputeWorkGroupSize
  int maxComputeWorkGroupSizeX
  int maxComputeWorkGroupSizeY
  int maxComputeWorkGroupSizeZ
  int computeSubGroupSize
  bool supportsAsyncCompute
  bool supportsGpuRecorder
  bool supportsGraphicsFence
  bool supportsAsyncGPUReadback
  bool supportsRayTracing
  bool supportsSetConstantBuffer
  int constantBufferOffsetAlignment
  long maxGraphicsBufferSize
  bool minConstantBufferOffsetAlignment
  bool hasMipMaxLevel
  bool supportsMipStreaming
  int graphicsPixelFillrate
  bool usesLoadStoreActions
  HDRDisplaySupportFlags hdrDisplaySupportFlags
  bool supportsConservativeRaster
  bool supportsMultiview
  bool supportsStoreAndResolveAction
  bool supportsMultisampleResolveDepth
  bool supportsVertexPrograms
  bool supportsGPUFence
Методы:
  float get_batteryLevel()
  BatteryStatus get_batteryStatus()
  string get_operatingSystem()
  OperatingSystemFamily get_operatingSystemFamily()
  string get_processorType()
  int get_processorFrequency()
  int get_processorCount()
  int get_systemMemorySize()
  string get_deviceUniqueIdentifier()
  string get_deviceName()
  string get_deviceModel()
  bool get_supportsAccelerometer()
  bool get_supportsGyroscope()
  bool get_supportsLocationService()
  bool get_supportsVibration()
  bool get_supportsAudio()
  DeviceType get_deviceType()
  int get_graphicsMemorySize()
  string get_graphicsDeviceName()
  string get_graphicsDeviceVendor()
  int get_graphicsDeviceID()
  int get_graphicsDeviceVendorID()
  GraphicsDeviceType get_graphicsDeviceType()
  bool get_graphicsUVStartsAtTop()
  string get_graphicsDeviceVersion()
  int get_graphicsShaderLevel()
  bool get_graphicsMultiThreaded()
  RenderingThreadingMode get_renderingThreadingMode()
  bool get_hasHiddenSurfaceRemovalOnGPU()
  bool get_hasDynamicUniformArrayIndexingInFragmentShaders()
  bool get_supportsShadows()
  bool get_supportsRawShadowDepthSampling()
  bool get_supportsRenderTextures()
  bool get_supportsMotionVectors()
  bool get_supportsRenderToCubemap()
  bool get_supportsImageEffects()
  bool get_supports3DTextures()
  bool get_supportsCompressed3DTextures()
  bool get_supports2DArrayTextures()
  bool get_supports3DRenderTextures()
  bool get_supportsCubemapArrayTextures()
  bool get_supportsAnisotropicFilter()
  CopyTextureSupport get_copyTextureSupport()
  bool get_supportsComputeShaders()
  bool get_supportsGeometryShaders()
  bool get_supportsTessellationShaders()
  bool get_supportsRenderTargetArrayIndexFromVertexShader()
  bool get_supportsInstancing()
  bool get_supportsHardwareQuadTopology()
  bool get_supports32bitsIndexBuffer()
  bool get_supportsSparseTextures()
  int get_supportedRenderTargetCount()
  bool get_supportsSeparatedRenderTargetsBlend()
  int get_supportedRandomWriteTargetCount()
  int get_supportsMultisampledTextures()
  bool get_supportsMultisampled2DArrayTextures()
  bool get_supportsMultisampleAutoResolve()
  int get_supportsTextureWrapMirrorOnce()
  bool get_usesReversedZBuffer()
  int get_supportsStencil()
  bool IsValidEnumValue(Enum value)
  bool SupportsRenderTextureFormat(RenderTextureFormat format)
  bool SupportsBlendingOnRenderTextureFormat(RenderTextureFormat format)
  bool SupportsRandomWriteOnRenderTextureFormat(RenderTextureFormat format)
  bool SupportsTextureFormat(TextureFormat format)
  bool SupportsVertexAttributeFormat(VertexAttributeFormat format, int dimension)
  NPOTSupport get_npotSupport()
  int get_maxTextureSize()
  int get_maxTexture3DSize()
  int get_maxTextureArraySlices()
  int get_maxCubemapSize()
  int get_maxAnisotropyLevel()
  int get_maxRenderTextureSize()
  int get_maxComputeBufferInputsVertex()
  int get_maxComputeBufferInputsFragment()
  int get_maxComputeBufferInputsGeometry()
  int get_maxComputeBufferInputsDomain()
  int get_maxComputeBufferInputsHull()
  int get_maxComputeBufferInputsCompute()
  int get_maxComputeWorkGroupSize()
  int get_maxComputeWorkGroupSizeX()
  int get_maxComputeWorkGroupSizeY()
  int get_maxComputeWorkGroupSizeZ()
  int get_computeSubGroupSize()
  bool get_supportsAsyncCompute()
  bool get_supportsGpuRecorder()
  bool get_supportsGraphicsFence()
  bool get_supportsAsyncGPUReadback()
  bool get_supportsRayTracing()
  bool get_supportsSetConstantBuffer()
  int get_constantBufferOffsetAlignment()
  long get_maxGraphicsBufferSize()
  bool get_minConstantBufferOffsetAlignment()
  bool get_hasMipMaxLevel()
  bool get_supportsMipStreaming()
  int get_graphicsPixelFillrate()
  bool get_usesLoadStoreActions()
  HDRDisplaySupportFlags get_hdrDisplaySupportFlags()
  bool get_supportsConservativeRaster()
  bool get_supportsMultiview()
  bool get_supportsStoreAndResolveAction()
  bool get_supportsMultisampleResolveDepth()
  bool get_supportsVertexPrograms()
  float GetBatteryLevel()
  BatteryStatus GetBatteryStatus()
  string GetOperatingSystem()
  OperatingSystemFamily GetOperatingSystemFamily()
  string GetProcessorType()
  int GetProcessorFrequencyMHz()
  int GetProcessorCount()
  int GetPhysicalMemoryMB()
  string GetDeviceUniqueIdentifier()
  string GetDeviceName()
  string GetDeviceModel()
  bool SupportsAccelerometer()
  bool IsGyroAvailable()
  bool SupportsLocationService()
  bool SupportsVibration()
  bool SupportsAudio()
  DeviceType GetDeviceType()
  int GetGraphicsMemorySize()
  string GetGraphicsDeviceName()
  string GetGraphicsDeviceVendor()
  int GetGraphicsDeviceID()
  int GetGraphicsDeviceVendorID()
  GraphicsDeviceType GetGraphicsDeviceType()
  bool GetGraphicsUVStartsAtTop()
  string GetGraphicsDeviceVersion()
  int GetGraphicsShaderLevel()
  bool GetGraphicsMultiThreaded()
  RenderingThreadingMode GetRenderingThreadingMode()
  bool HasHiddenSurfaceRemovalOnGPU()
  bool HasDynamicUniformArrayIndexingInFragmentShaders()
  bool SupportsShadows()
  bool SupportsRawShadowDepthSampling()
  bool SupportsMotionVectors()
  bool Supports3DTextures()
  bool SupportsCompressed3DTextures()
  bool Supports2DArrayTextures()
  bool Supports3DRenderTextures()
  bool SupportsCubemapArrayTextures()
  bool SupportsAnisotropicFilter()
  CopyTextureSupport GetCopyTextureSupport()
  bool SupportsComputeShaders()
  bool SupportsGeometryShaders()
  bool SupportsTessellationShaders()
  bool SupportsRenderTargetArrayIndexFromVertexShader()
  bool SupportsInstancing()
  bool SupportsHardwareQuadTopology()
  bool Supports32bitsIndexBuffer()
  bool SupportsSparseTextures()
  int SupportedRenderTargetCount()
  bool SupportsSeparatedRenderTargetsBlend()
  int SupportedRandomWriteTargetCount()
  int MaxComputeBufferInputsVertex()
  int MaxComputeBufferInputsFragment()
  int MaxComputeBufferInputsGeometry()
  int MaxComputeBufferInputsDomain()
  int MaxComputeBufferInputsHull()
  int MaxComputeBufferInputsCompute()
  int SupportsMultisampledTextures()
  bool SupportsMultisampled2DArrayTextures()
  bool SupportsMultisampleAutoResolve()
  int SupportsTextureWrapMirrorOnce()
  bool UsesReversedZBuffer()
  bool HasRenderTextureNative(RenderTextureFormat format)
  bool SupportsBlendingOnRenderTextureFormatNative(RenderTextureFormat format)
  bool SupportsRandomWriteOnRenderTextureFormatNative(RenderTextureFormat format)
  bool SupportsTextureFormatNative(TextureFormat format)
  bool SupportsVertexAttributeFormatNative(VertexAttributeFormat format, int dimension)
  NPOTSupport GetNPOTSupport()
  int GetMaxTextureSize()
  int GetMaxTexture3DSize()
  int GetMaxTextureArraySlices()
  int GetMaxCubemapSize()
  int GetMaxAnisotropyLevel()
  int GetMaxRenderTextureSize()
  int GetMaxComputeWorkGroupSize()
  int GetMaxComputeWorkGroupSizeX()
  int GetMaxComputeWorkGroupSizeY()
  int GetMaxComputeWorkGroupSizeZ()
  int GetComputeSubGroupSize()
  bool SupportsAsyncCompute()
  bool SupportsGpuRecorder()
  bool SupportsGPUFence()
  bool SupportsAsyncGPUReadback()
  bool SupportsRayTracing()
  bool SupportsSetConstantBuffer()
  int MinConstantBufferOffsetAlignment()
  long MaxGraphicsBufferSize()
  bool HasMipMaxLevel()
  bool SupportsMipStreaming()
  bool IsFormatSupported(GraphicsFormat format, FormatUsage usage)
  GraphicsFormat GetCompatibleFormat(GraphicsFormat format, FormatUsage usage)
  GraphicsFormat GetGraphicsFormat(DefaultFormat format)
  int GetRenderTextureSupportedMSAASampleCount(RenderTextureDescriptor desc)
  bool UsesLoadStoreActions()
  HDRDisplaySupportFlags GetHDRDisplaySupportFlags()
  bool SupportsConservativeRaster()
  bool SupportsMultiview()
  bool SupportsStoreAndResolveAction()
  bool SupportsMultisampleResolveDepth()
  bool get_supportsGPUFence()
  void .ctor()
  int GetRenderTextureSupportedMSAASampleCount_Injected(RenderTextureDescriptor& desc)
--------------------------------------------------
Класс: UnityEngine.SystemClock
Наследуется от: object
Поля:
  DateTime s_Epoch
Свойства:
  DateTime now
Методы:
  DateTime get_now()
  long ToUnixTimeMilliseconds(DateTime date)
  long ToUnixTimeSeconds(DateTime date)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Time
Наследуется от: object
Поля:
Свойства:
  float time
  double timeAsDouble
  float timeSinceLevelLoad
  double timeSinceLevelLoadAsDouble
  float deltaTime
  float fixedTime
  double fixedTimeAsDouble
  float unscaledTime
  double unscaledTimeAsDouble
  float fixedUnscaledTime
  double fixedUnscaledTimeAsDouble
  float unscaledDeltaTime
  float fixedUnscaledDeltaTime
  float fixedDeltaTime
  float maximumDeltaTime
  float smoothDeltaTime
  float maximumParticleDeltaTime
  float timeScale
  int frameCount
  int renderedFrameCount
  float realtimeSinceStartup
  double realtimeSinceStartupAsDouble
  float captureDeltaTime
  int captureFramerate
  bool inFixedTimeStep
Методы:
  float get_time()
  double get_timeAsDouble()
  float get_timeSinceLevelLoad()
  double get_timeSinceLevelLoadAsDouble()
  float get_deltaTime()
  float get_fixedTime()
  double get_fixedTimeAsDouble()
  float get_unscaledTime()
  double get_unscaledTimeAsDouble()
  float get_fixedUnscaledTime()
  double get_fixedUnscaledTimeAsDouble()
  float get_unscaledDeltaTime()
  float get_fixedUnscaledDeltaTime()
  float get_fixedDeltaTime()
  void set_fixedDeltaTime(float value)
  float get_maximumDeltaTime()
  void set_maximumDeltaTime(float value)
  float get_smoothDeltaTime()
  float get_maximumParticleDeltaTime()
  void set_maximumParticleDeltaTime(float value)
  float get_timeScale()
  void set_timeScale(float value)
  int get_frameCount()
  int get_renderedFrameCount()
  float get_realtimeSinceStartup()
  double get_realtimeSinceStartupAsDouble()
  float get_captureDeltaTime()
  void set_captureDeltaTime(float value)
  int get_captureFramerate()
  void set_captureFramerate(int value)
  bool get_inFixedTimeStep()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TouchScreenKeyboard_InternalConstructorHelperArguments
Наследуется от: ValueType
Поля:
  UInt32 keyboardType
  UInt32 autocorrection
  UInt32 multiline
  UInt32 secure
  UInt32 alert
  int characterLimit
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TouchScreenKeyboard
Наследуется от: object
Поля:
  IntPtr m_Ptr
  bool <disableInPlaceEditing>k__BackingField
Свойства:
  bool isSupported
  bool disableInPlaceEditing
  bool isInPlaceEditingAllowed
  bool isRequiredToForceOpen
  string text
  bool hideInput
  bool active
  bool done
  bool wasCanceled
  Status status
  int characterLimit
  bool canGetSelection
  bool canSetSelection
  RangeInt selection
  TouchScreenKeyboardType type
  int targetDisplay
  Rect area
  bool visible
Методы:
  void Internal_Destroy(IntPtr ptr)
  void Destroy()
  void Finalize()
  void .ctor(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder, int characterLimit)
  IntPtr TouchScreenKeyboard_InternalConstructorHelper(TouchScreenKeyboard_InternalConstructorHelperArguments& arguments, string text, string textPlaceholder)
  bool get_isSupported()
  bool get_disableInPlaceEditing()
  void set_disableInPlaceEditing(bool value)
  bool get_isInPlaceEditingAllowed()
  bool get_isRequiredToForceOpen()
  bool IsRequiredToForceOpen()
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder, int characterLimit)
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, string textPlaceholder)
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert)
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure)
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline)
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType, bool autocorrection)
  TouchScreenKeyboard Open(string text, TouchScreenKeyboardType keyboardType)
  TouchScreenKeyboard Open(string text)
  string get_text()
  void set_text(string value)
  bool get_hideInput()
  void set_hideInput(bool value)
  bool get_active()
  void set_active(bool value)
  bool GetDone(IntPtr ptr)
  bool get_done()
  bool GetWasCanceled(IntPtr ptr)
  bool get_wasCanceled()
  Status get_status()
  int get_characterLimit()
  void set_characterLimit(int value)
  bool get_canGetSelection()
  bool get_canSetSelection()
  RangeInt get_selection()
  void set_selection(RangeInt value)
  void GetSelection(Int32& start, Int32& length)
  void SetSelection(int start, int length)
  TouchScreenKeyboardType get_type()
  int get_targetDisplay()
  void set_targetDisplay(int value)
  Rect get_area()
  bool get_visible()
  void get_area_Injected(Rect& ret)
--------------------------------------------------
Класс: UnityEngine.TouchScreenKeyboardType
Наследуется от: Enum
Поля:
  int value__
  TouchScreenKeyboardType Default
  TouchScreenKeyboardType ASCIICapable
  TouchScreenKeyboardType NumbersAndPunctuation
  TouchScreenKeyboardType URL
  TouchScreenKeyboardType NumberPad
  TouchScreenKeyboardType PhonePad
  TouchScreenKeyboardType NamePhonePad
  TouchScreenKeyboardType EmailAddress
  TouchScreenKeyboardType NintendoNetworkAccount
  TouchScreenKeyboardType Social
  TouchScreenKeyboardType Search
  TouchScreenKeyboardType DecimalPad
  TouchScreenKeyboardType OneTimeCode
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UnityEventQueueSystem
Наследуется от: object
Поля:
Свойства:
Методы:
  string GenerateEventIdForPayload(string eventPayloadName)
  IntPtr GetGlobalEventQueue()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Pose
Наследуется от: ValueType
Поля:
  Vector3 position
  Quaternion rotation
  Pose k_Identity
Свойства:
  Vector3 forward
  Vector3 right
  Vector3 up
  Pose identity
Методы:
  void .ctor(Vector3 position, Quaternion rotation)
  string ToString()
  string ToString(string format)
  Pose GetTransformedBy(Pose lhs)
  Pose GetTransformedBy(Transform lhs)
  Vector3 get_forward()
  Vector3 get_right()
  Vector3 get_up()
  Pose get_identity()
  bool Equals(object obj)
  bool Equals(Pose other)
  int GetHashCode()
  bool op_Equality(Pose a, Pose b)
  bool op_Inequality(Pose a, Pose b)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.FrameDebugger
Наследуется от: object
Поля:
Свойства:
  bool enabled
Методы:
  bool get_enabled()
  bool IsLocalEnabled()
  bool IsRemoteEnabled()
--------------------------------------------------
Класс: UnityEngine.DrivenTransformProperties
Наследуется от: Enum
Поля:
  int value__
  DrivenTransformProperties None
  DrivenTransformProperties All
  DrivenTransformProperties AnchoredPositionX
  DrivenTransformProperties AnchoredPositionY
  DrivenTransformProperties AnchoredPositionZ
  DrivenTransformProperties Rotation
  DrivenTransformProperties ScaleX
  DrivenTransformProperties ScaleY
  DrivenTransformProperties ScaleZ
  DrivenTransformProperties AnchorMinX
  DrivenTransformProperties AnchorMinY
  DrivenTransformProperties AnchorMaxX
  DrivenTransformProperties AnchorMaxY
  DrivenTransformProperties SizeDeltaX
  DrivenTransformProperties SizeDeltaY
  DrivenTransformProperties PivotX
  DrivenTransformProperties PivotY
  DrivenTransformProperties AnchoredPosition
  DrivenTransformProperties AnchoredPosition3D
  DrivenTransformProperties Scale
  DrivenTransformProperties AnchorMin
  DrivenTransformProperties AnchorMax
  DrivenTransformProperties Anchors
  DrivenTransformProperties SizeDelta
  DrivenTransformProperties Pivot
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.DrivenRectTransformTracker
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  bool CanRecordModifications()
  void Add(Object driver, RectTransform rectTransform, DrivenTransformProperties drivenProperties)
  void Clear(bool revertValues)
  void Clear()
--------------------------------------------------
Класс: UnityEngine.RectTransform
Наследуется от: Transform
Поля:
  ReapplyDrivenProperties reapplyDrivenProperties
Свойства:
  Rect rect
  Vector2 anchorMin
  Vector2 anchorMax
  Vector2 anchoredPosition
  Vector2 sizeDelta
  Vector2 pivot
  Vector3 anchoredPosition3D
  Vector2 offsetMin
  Vector2 offsetMax
  Object drivenByObject
  DrivenTransformProperties drivenProperties
Методы:
  void add_reapplyDrivenProperties(ReapplyDrivenProperties value)
  void remove_reapplyDrivenProperties(ReapplyDrivenProperties value)
  Rect get_rect()
  Vector2 get_anchorMin()
  void set_anchorMin(Vector2 value)
  Vector2 get_anchorMax()
  void set_anchorMax(Vector2 value)
  Vector2 get_anchoredPosition()
  void set_anchoredPosition(Vector2 value)
  Vector2 get_sizeDelta()
  void set_sizeDelta(Vector2 value)
  Vector2 get_pivot()
  void set_pivot(Vector2 value)
  Vector3 get_anchoredPosition3D()
  void set_anchoredPosition3D(Vector3 value)
  Vector2 get_offsetMin()
  void set_offsetMin(Vector2 value)
  Vector2 get_offsetMax()
  void set_offsetMax(Vector2 value)
  Object get_drivenByObject()
  void set_drivenByObject(Object value)
  DrivenTransformProperties get_drivenProperties()
  void set_drivenProperties(DrivenTransformProperties value)
  void ForceUpdateRectTransforms()
  void GetLocalCorners(Vector3[] fourCornersArray)
  void GetWorldCorners(Vector3[] fourCornersArray)
  void SetInsetAndSizeFromParentEdge(Edge edge, float inset, float size)
  void SetSizeWithCurrentAnchors(Axis axis, float size)
  void SendReapplyDrivenProperties(RectTransform driven)
  Rect GetRectInParentSpace()
  Vector2 GetParentSize()
  void .ctor()
  void get_rect_Injected(Rect& ret)
  void get_anchorMin_Injected(Vector2& ret)
  void set_anchorMin_Injected(Vector2& value)
  void get_anchorMax_Injected(Vector2& ret)
  void set_anchorMax_Injected(Vector2& value)
  void get_anchoredPosition_Injected(Vector2& ret)
  void set_anchoredPosition_Injected(Vector2& value)
  void get_sizeDelta_Injected(Vector2& ret)
  void set_sizeDelta_Injected(Vector2& value)
  void get_pivot_Injected(Vector2& ret)
  void set_pivot_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.RotationOrder
Наследуется от: Enum
Поля:
  int value__
  RotationOrder OrderXYZ
  RotationOrder OrderXZY
  RotationOrder OrderYZX
  RotationOrder OrderYXZ
  RotationOrder OrderZXY
  RotationOrder OrderZYX
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Transform
Наследуется от: Component
Поля:
Свойства:
  Vector3 position
  Vector3 localPosition
  Vector3 eulerAngles
  Vector3 localEulerAngles
  Vector3 right
  Vector3 up
  Vector3 forward
  Quaternion rotation
  Quaternion localRotation
  RotationOrder rotationOrder
  Vector3 localScale
  Transform parent
  Transform parentInternal
  Matrix4x4 worldToLocalMatrix
  Matrix4x4 localToWorldMatrix
  Transform root
  int childCount
  Vector3 lossyScale
  bool hasChanged
  int hierarchyCapacity
  int hierarchyCount
  bool constrainProportionsScale
Методы:
  void .ctor()
  Vector3 get_position()
  void set_position(Vector3 value)
  Vector3 get_localPosition()
  void set_localPosition(Vector3 value)
  Vector3 GetLocalEulerAngles(RotationOrder order)
  void SetLocalEulerAngles(Vector3 euler, RotationOrder order)
  void SetLocalEulerHint(Vector3 euler)
  Vector3 get_eulerAngles()
  void set_eulerAngles(Vector3 value)
  Vector3 get_localEulerAngles()
  void set_localEulerAngles(Vector3 value)
  Vector3 get_right()
  void set_right(Vector3 value)
  Vector3 get_up()
  void set_up(Vector3 value)
  Vector3 get_forward()
  void set_forward(Vector3 value)
  Quaternion get_rotation()
  void set_rotation(Quaternion value)
  Quaternion get_localRotation()
  void set_localRotation(Quaternion value)
  RotationOrder get_rotationOrder()
  void set_rotationOrder(RotationOrder value)
  int GetRotationOrderInternal()
  void SetRotationOrderInternal(RotationOrder rotationOrder)
  Vector3 get_localScale()
  void set_localScale(Vector3 value)
  Transform get_parent()
  void set_parent(Transform value)
  Transform get_parentInternal()
  void set_parentInternal(Transform value)
  Transform GetParent()
  void SetParent(Transform p)
  void SetParent(Transform parent, bool worldPositionStays)
  Matrix4x4 get_worldToLocalMatrix()
  Matrix4x4 get_localToWorldMatrix()
  void SetPositionAndRotation(Vector3 position, Quaternion rotation)
  void SetLocalPositionAndRotation(Vector3 localPosition, Quaternion localRotation)
  void GetPositionAndRotation(Vector3& position, Quaternion& rotation)
  void GetLocalPositionAndRotation(Vector3& localPosition, Quaternion& localRotation)
  void Translate(Vector3 translation, Space relativeTo)
  void Translate(Vector3 translation)
  void Translate(float x, float y, float z, Space relativeTo)
  void Translate(float x, float y, float z)
  void Translate(Vector3 translation, Transform relativeTo)
  void Translate(float x, float y, float z, Transform relativeTo)
  void Rotate(Vector3 eulers, Space relativeTo)
  void Rotate(Vector3 eulers)
  void Rotate(float xAngle, float yAngle, float zAngle, Space relativeTo)
  void Rotate(float xAngle, float yAngle, float zAngle)
  void RotateAroundInternal(Vector3 axis, float angle)
  void Rotate(Vector3 axis, float angle, Space relativeTo)
  void Rotate(Vector3 axis, float angle)
  void RotateAround(Vector3 point, Vector3 axis, float angle)
  void LookAt(Transform target, Vector3 worldUp)
  void LookAt(Transform target)
  void LookAt(Vector3 worldPosition, Vector3 worldUp)
  void LookAt(Vector3 worldPosition)
  void Internal_LookAt(Vector3 worldPosition, Vector3 worldUp)
  Vector3 TransformDirection(Vector3 direction)
  Vector3 TransformDirection(float x, float y, float z)
  Vector3 InverseTransformDirection(Vector3 direction)
  Vector3 InverseTransformDirection(float x, float y, float z)
  Vector3 TransformVector(Vector3 vector)
  Vector3 TransformVector(float x, float y, float z)
  Vector3 InverseTransformVector(Vector3 vector)
  Vector3 InverseTransformVector(float x, float y, float z)
  Vector3 TransformPoint(Vector3 position)
  Vector3 TransformPoint(float x, float y, float z)
  Vector3 InverseTransformPoint(Vector3 position)
  Vector3 InverseTransformPoint(float x, float y, float z)
  Transform get_root()
  Transform GetRoot()
  int get_childCount()
  void DetachChildren()
  void SetAsFirstSibling()
  void SetAsLastSibling()
  void SetSiblingIndex(int index)
  void MoveAfterSibling(Transform transform, bool notifyEditorAndMarkDirty)
  int GetSiblingIndex()
  Transform FindRelativeTransformWithPath(Transform transform, string path, bool isActiveOnly)
  Transform Find(string n)
  void SendTransformChangedScale()
  Vector3 get_lossyScale()
  bool IsChildOf(Transform parent)
  bool get_hasChanged()
  void set_hasChanged(bool value)
  Transform FindChild(string n)
  IEnumerator GetEnumerator()
  void RotateAround(Vector3 axis, float angle)
  void RotateAroundLocal(Vector3 axis, float angle)
  Transform GetChild(int index)
  int GetChildCount()
  int get_hierarchyCapacity()
  void set_hierarchyCapacity(int value)
  int internal_getHierarchyCapacity()
  void internal_setHierarchyCapacity(int value)
  int get_hierarchyCount()
  int internal_getHierarchyCount()
  bool IsNonUniformScaleTransform()
  bool get_constrainProportionsScale()
  void set_constrainProportionsScale(bool value)
  void SetConstrainProportionsScale(bool isLinked)
  bool IsConstrainProportionsScale()
  void get_position_Injected(Vector3& ret)
  void set_position_Injected(Vector3& value)
  void get_localPosition_Injected(Vector3& ret)
  void set_localPosition_Injected(Vector3& value)
  void GetLocalEulerAngles_Injected(RotationOrder order, Vector3& ret)
  void SetLocalEulerAngles_Injected(Vector3& euler, RotationOrder order)
  void SetLocalEulerHint_Injected(Vector3& euler)
  void get_rotation_Injected(Quaternion& ret)
  void set_rotation_Injected(Quaternion& value)
  void get_localRotation_Injected(Quaternion& ret)
  void set_localRotation_Injected(Quaternion& value)
  void get_localScale_Injected(Vector3& ret)
  void set_localScale_Injected(Vector3& value)
  void get_worldToLocalMatrix_Injected(Matrix4x4& ret)
  void get_localToWorldMatrix_Injected(Matrix4x4& ret)
  void SetPositionAndRotation_Injected(Vector3& position, Quaternion& rotation)
  void SetLocalPositionAndRotation_Injected(Vector3& localPosition, Quaternion& localRotation)
  void RotateAroundInternal_Injected(Vector3& axis, float angle)
  void Internal_LookAt_Injected(Vector3& worldPosition, Vector3& worldUp)
  void TransformDirection_Injected(Vector3& direction, Vector3& ret)
  void InverseTransformDirection_Injected(Vector3& direction, Vector3& ret)
  void TransformVector_Injected(Vector3& vector, Vector3& ret)
  void InverseTransformVector_Injected(Vector3& vector, Vector3& ret)
  void TransformPoint_Injected(Vector3& position, Vector3& ret)
  void InverseTransformPoint_Injected(Vector3& position, Vector3& ret)
  void get_lossyScale_Injected(Vector3& ret)
  void RotateAround_Injected(Vector3& axis, float angle)
  void RotateAroundLocal_Injected(Vector3& axis, float angle)
--------------------------------------------------
Класс: UnityEngine.SpriteDrawMode
Наследуется от: Enum
Поля:
  int value__
  SpriteDrawMode Simple
  SpriteDrawMode Sliced
  SpriteDrawMode Tiled
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpriteTileMode
Наследуется от: Enum
Поля:
  int value__
  SpriteTileMode Continuous
  SpriteTileMode Adaptive
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpriteMaskInteraction
Наследуется от: Enum
Поля:
  int value__
  SpriteMaskInteraction None
  SpriteMaskInteraction VisibleInsideMask
  SpriteMaskInteraction VisibleOutsideMask
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpriteRenderer
Наследуется от: Renderer
Поля:
  UnityEvent`1<SpriteRenderer> m_SpriteChangeEvent
Свойства:
  bool shouldSupportTiling
  Sprite sprite
  SpriteDrawMode drawMode
  Vector2 size
  float adaptiveModeThreshold
  SpriteTileMode tileMode
  Color color
  SpriteMaskInteraction maskInteraction
  bool flipX
  bool flipY
  SpriteSortPoint spriteSortPoint
Методы:
  void RegisterSpriteChangeCallback(UnityAction`1<SpriteRenderer> callback)
  void UnregisterSpriteChangeCallback(UnityAction`1<SpriteRenderer> callback)
  void InvokeSpriteChanged()
  bool get_shouldSupportTiling()
  Sprite get_sprite()
  void set_sprite(Sprite value)
  SpriteDrawMode get_drawMode()
  void set_drawMode(SpriteDrawMode value)
  Vector2 get_size()
  void set_size(Vector2 value)
  float get_adaptiveModeThreshold()
  void set_adaptiveModeThreshold(float value)
  SpriteTileMode get_tileMode()
  void set_tileMode(SpriteTileMode value)
  Color get_color()
  void set_color(Color value)
  SpriteMaskInteraction get_maskInteraction()
  void set_maskInteraction(SpriteMaskInteraction value)
  bool get_flipX()
  void set_flipX(bool value)
  bool get_flipY()
  void set_flipY(bool value)
  SpriteSortPoint get_spriteSortPoint()
  void set_spriteSortPoint(SpriteSortPoint value)
  Bounds Internal_GetSpriteBounds(SpriteDrawMode mode)
  Bounds GetSpriteBounds()
  void .ctor()
  void get_size_Injected(Vector2& ret)
  void set_size_Injected(Vector2& value)
  void get_color_Injected(Color& ret)
  void set_color_Injected(Color& value)
  void Internal_GetSpriteBounds_Injected(SpriteDrawMode mode, Bounds& ret)
--------------------------------------------------
Класс: UnityEngine.SpriteMeshType
Наследуется от: Enum
Поля:
  int value__
  SpriteMeshType FullRect
  SpriteMeshType Tight
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpriteAlignment
Наследуется от: Enum
Поля:
  int value__
  SpriteAlignment Center
  SpriteAlignment TopLeft
  SpriteAlignment TopCenter
  SpriteAlignment TopRight
  SpriteAlignment LeftCenter
  SpriteAlignment RightCenter
  SpriteAlignment BottomLeft
  SpriteAlignment BottomCenter
  SpriteAlignment BottomRight
  SpriteAlignment Custom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpritePackingMode
Наследуется от: Enum
Поля:
  int value__
  SpritePackingMode Tight
  SpritePackingMode Rectangle
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpritePackingRotation
Наследуется от: Enum
Поля:
  int value__
  SpritePackingRotation None
  SpritePackingRotation FlipHorizontal
  SpritePackingRotation FlipVertical
  SpritePackingRotation Rotate180
  SpritePackingRotation Any
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SpriteSortPoint
Наследуется от: Enum
Поля:
  int value__
  SpriteSortPoint Center
  SpriteSortPoint Pivot
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SecondarySpriteTexture
Наследуется от: ValueType
Поля:
  string name
  Texture2D texture
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Sprite
Наследуется от: Object
Поля:
Свойства:
  Bounds bounds
  Rect rect
  Vector4 border
  Texture2D texture
  float pixelsPerUnit
  float spriteAtlasTextureScale
  Texture2D associatedAlphaSplitTexture
  Vector2 pivot
  bool packed
  SpritePackingMode packingMode
  SpritePackingRotation packingRotation
  Rect textureRect
  Vector2 textureRectOffset
  Vector2[] vertices
  UInt16[] triangles
  Vector2[] uv
Методы:
  void .ctor()
  int GetPackingMode()
  int GetPackingRotation()
  int GetPacked()
  Rect GetTextureRect()
  Vector2 GetTextureRectOffset()
  Vector4 GetInnerUVs()
  Vector4 GetOuterUVs()
  Vector4 GetPadding()
  Sprite CreateSpriteWithoutTextureScripting(Rect rect, Vector2 pivot, float pixelsToUnits, Texture2D texture)
  Sprite CreateSprite(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, UInt32 extrude, SpriteMeshType meshType, Vector4 border, bool generateFallbackPhysicsShape)
  Bounds get_bounds()
  Rect get_rect()
  Vector4 get_border()
  Texture2D get_texture()
  Texture2D GetSecondaryTexture(int index)
  float get_pixelsPerUnit()
  float get_spriteAtlasTextureScale()
  Texture2D get_associatedAlphaSplitTexture()
  Vector2 get_pivot()
  bool get_packed()
  SpritePackingMode get_packingMode()
  SpritePackingRotation get_packingRotation()
  Rect get_textureRect()
  Vector2 get_textureRectOffset()
  Vector2[] get_vertices()
  UInt16[] get_triangles()
  Vector2[] get_uv()
  int GetPhysicsShapeCount()
  int GetPhysicsShapePointCount(int shapeIdx)
  int Internal_GetPhysicsShapePointCount(int shapeIdx)
  int GetPhysicsShape(int shapeIdx, List`1<Vector2> physicsShape)
  void GetPhysicsShapeImpl(Sprite sprite, int shapeIdx, List`1<Vector2> physicsShape)
  void OverridePhysicsShape(IList`1<Vector2[]> physicsShapes)
  void OverridePhysicsShapeCount(Sprite sprite, int physicsShapeCount)
  void OverridePhysicsShape(Sprite sprite, Vector2[] physicsShape, int idx)
  void OverrideGeometry(Vector2[] vertices, UInt16[] triangles)
  Sprite Create(Rect rect, Vector2 pivot, float pixelsToUnits, Texture2D texture)
  Sprite Create(Rect rect, Vector2 pivot, float pixelsToUnits)
  Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, UInt32 extrude, SpriteMeshType meshType, Vector4 border, bool generateFallbackPhysicsShape)
  Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, UInt32 extrude, SpriteMeshType meshType, Vector4 border)
  Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, UInt32 extrude, SpriteMeshType meshType)
  Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit, UInt32 extrude)
  Sprite Create(Texture2D texture, Rect rect, Vector2 pivot, float pixelsPerUnit)
  Sprite Create(Texture2D texture, Rect rect, Vector2 pivot)
  void GetTextureRect_Injected(Rect& ret)
  void GetTextureRectOffset_Injected(Vector2& ret)
  void GetInnerUVs_Injected(Vector4& ret)
  void GetOuterUVs_Injected(Vector4& ret)
  void GetPadding_Injected(Vector4& ret)
  Sprite CreateSpriteWithoutTextureScripting_Injected(Rect& rect, Vector2& pivot, float pixelsToUnits, Texture2D texture)
  Sprite CreateSprite_Injected(Texture2D texture, Rect& rect, Vector2& pivot, float pixelsPerUnit, UInt32 extrude, SpriteMeshType meshType, Vector4& border, bool generateFallbackPhysicsShape)
  void get_bounds_Injected(Bounds& ret)
  void get_rect_Injected(Rect& ret)
  void get_border_Injected(Vector4& ret)
  void get_pivot_Injected(Vector2& ret)
--------------------------------------------------
Класс: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  bool GetMovedFromAttributeDataForType(Type sourceType, String& assembly, String& nsp, String& klass)
  bool GetObsoleteTypeRedirection(Type sourceType, String& assemblyName, String& nsp, String& className)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Sprites.DataUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector4 GetInnerUV(Sprite sprite)
  Vector4 GetOuterUV(Sprite sprite)
  Vector4 GetPadding(Sprite sprite)
  Vector2 GetMinSize(Sprite sprite)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.U2D.Light2DBase
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.U2D.Light2DType
Наследуется от: Enum
Поля:
  int value__
  Light2DType Parametric
  Light2DType Freeform
  Light2DType Sprite
  Light2DType Point
  Light2DType Global
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.U2D.PixelPerfectRendering
Наследуется от: object
Поля:
Свойства:
  float pixelSnapSpacing
Методы:
  float get_pixelSnapSpacing()
  void set_pixelSnapSpacing(float value)
--------------------------------------------------
Класс: UnityEngine.U2D.SpriteBone
Наследуется от: ValueType
Поля:
  string m_Name
  string m_Guid
  Vector3 m_Position
  Quaternion m_Rotation
  float m_Length
  int m_ParentId
  Color32 m_Color
Свойства:
  string name
  string guid
  Vector3 position
  Quaternion rotation
  float length
  int parentId
  Color32 color
Методы:
  string get_name()
  void set_name(string value)
  string get_guid()
  void set_guid(string value)
  Vector3 get_position()
  void set_position(Vector3 value)
  Quaternion get_rotation()
  void set_rotation(Quaternion value)
  float get_length()
  void set_length(float value)
  int get_parentId()
  void set_parentId(int value)
  Color32 get_color()
  void set_color(Color32 value)
--------------------------------------------------
Класс: UnityEngine.U2D.SpriteChannelInfo
Наследуется от: ValueType
Поля:
  IntPtr m_Buffer
  int m_Count
  int m_Offset
  int m_Stride
Свойства:
  Void* buffer
  int count
  int offset
  int stride
Методы:
  Void* get_buffer()
  void set_buffer(Void* value)
  int get_count()
  void set_count(int value)
  int get_offset()
  void set_offset(int value)
  int get_stride()
  void set_stride(int value)
--------------------------------------------------
Класс: UnityEngine.U2D.SpriteDataAccessExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void CheckAttributeTypeMatchesAndThrow(VertexAttribute channel)
  NativeSlice`1<T> GetVertexAttribute(Sprite sprite, VertexAttribute channel)
  void SetVertexAttribute(Sprite sprite, VertexAttribute channel, NativeArray`1<T> src)
  NativeArray`1<Matrix4x4> GetBindPoses(Sprite sprite)
  void SetBindPoses(Sprite sprite, NativeArray`1<Matrix4x4> src)
  NativeArray`1<ushort> GetIndices(Sprite sprite)
  void SetIndices(Sprite sprite, NativeArray`1<ushort> src)
  SpriteBone[] GetBones(Sprite sprite)
  void SetBones(Sprite sprite, SpriteBone[] src)
  bool HasVertexAttribute(Sprite sprite, VertexAttribute channel)
  void SetVertexCount(Sprite sprite, int count)
  int GetVertexCount(Sprite sprite)
  SpriteChannelInfo GetBindPoseInfo(Sprite sprite)
  void SetBindPoseData(Sprite sprite, Void* src, int count)
  SpriteChannelInfo GetIndicesInfo(Sprite sprite)
  void SetIndicesData(Sprite sprite, Void* src, int count)
  SpriteChannelInfo GetChannelInfo(Sprite sprite, VertexAttribute channel)
  void SetChannelData(Sprite sprite, VertexAttribute channel, Void* src)
  SpriteBone[] GetBoneInfo(Sprite sprite)
  void SetBoneData(Sprite sprite, SpriteBone[] src)
  int GetPrimaryVertexStreamSize(Sprite sprite)
  void GetBindPoseInfo_Injected(Sprite sprite, SpriteChannelInfo& ret)
  void GetIndicesInfo_Injected(Sprite sprite, SpriteChannelInfo& ret)
  void GetChannelInfo_Injected(Sprite sprite, VertexAttribute channel, SpriteChannelInfo& ret)
--------------------------------------------------
Класс: UnityEngine.U2D.SpriteRendererDataAccessExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void SetDeformableBuffer(SpriteRenderer spriteRenderer, NativeArray`1<byte> src)
  void SetDeformableBuffer(SpriteRenderer spriteRenderer, NativeArray`1<Vector3> src)
  void SetBatchDeformableBufferAndLocalAABBArray(SpriteRenderer[] spriteRenderers, NativeArray`1<IntPtr> buffers, NativeArray`1<int> bufferSizes, NativeArray`1<Bounds> bounds)
  bool IsUsingDeformableBuffer(SpriteRenderer spriteRenderer, IntPtr buffer)
  void DeactivateDeformableBuffer(SpriteRenderer renderer)
  void SetLocalAABB(SpriteRenderer renderer, Bounds aabb)
  void SetDeformableBuffer(SpriteRenderer spriteRenderer, Void* src, int count)
  void SetBatchDeformableBufferAndLocalAABBArray(SpriteRenderer[] spriteRenderers, Void* buffers, Void* bufferSizes, Void* bounds, int count)
  bool IsUsingDeformableBuffer(SpriteRenderer spriteRenderer, Void* buffer)
  void SetLocalAABB_Injected(SpriteRenderer renderer, Bounds& aabb)
--------------------------------------------------
Класс: UnityEngine.U2D.SpriteAtlasManager
Наследуется от: object
Поля:
  Action`2<string, Action`1<SpriteAtlas>> atlasRequested
  Action`1<SpriteAtlas> atlasRegistered
Свойства:
Методы:
  void add_atlasRequested(Action`2<string, Action`1<SpriteAtlas>> value)
  void remove_atlasRequested(Action`2<string, Action`1<SpriteAtlas>> value)
  bool RequestAtlas(string tag)
  void add_atlasRegistered(Action`1<SpriteAtlas> value)
  void remove_atlasRegistered(Action`1<SpriteAtlas> value)
  void PostRegisteredAtlas(SpriteAtlas spriteAtlas)
  void Register(SpriteAtlas spriteAtlas)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.U2D.SpriteAtlas
Наследуется от: Object
Поля:
Свойства:
  bool isVariant
  string tag
  int spriteCount
Методы:
  bool get_isVariant()
  string get_tag()
  int get_spriteCount()
  bool CanBindTo(Sprite sprite)
  Sprite GetSprite(string name)
  int GetSprites(Sprite[] sprites)
  int GetSprites(Sprite[] sprites, string name)
  int GetSpritesScripting(Sprite[] sprites)
  int GetSpritesWithNameScripting(Sprite[] sprites, string name)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Profiling.ProfilerArea
Наследуется от: Enum
Поля:
  int value__
  ProfilerArea CPU
  ProfilerArea GPU
  ProfilerArea Rendering
  ProfilerArea Memory
  ProfilerArea Audio
  ProfilerArea Video
  ProfilerArea Physics
  ProfilerArea Physics2D
  ProfilerArea NetworkMessages
  ProfilerArea NetworkOperations
  ProfilerArea UI
  ProfilerArea UIDetails
  ProfilerArea GlobalIllumination
  ProfilerArea VirtualTexturing
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Profiling.Profiler
Наследуется от: object
Поля:
  UInt32 invalidProfilerArea
Свойства:
  bool supported
  string logFile
  bool enableBinaryLog
  int maxUsedMemory
  bool enabled
  bool enableAllocationCallstacks
  int areaCount
  int maxNumberOfSamplesPerFrame
  UInt32 usedHeapSize
  long usedHeapSizeLong
Методы:
  void .ctor()
  bool get_supported()
  string get_logFile()
  void set_logFile(string value)
  bool get_enableBinaryLog()
  void set_enableBinaryLog(bool value)
  int get_maxUsedMemory()
  void set_maxUsedMemory(int value)
  bool get_enabled()
  void set_enabled(bool value)
  bool get_enableAllocationCallstacks()
  void set_enableAllocationCallstacks(bool value)
  void SetAreaEnabled(ProfilerArea area, bool enabled)
  int get_areaCount()
  bool GetAreaEnabled(ProfilerArea area)
  void AddFramesFromFile(string file)
  void AddFramesFromFile_Internal(string file, bool keepExistingFrames)
  void BeginThreadProfiling(string threadGroupName, string threadName)
  void BeginThreadProfilingInternal(string threadGroupName, string threadName)
  void EndThreadProfiling()
  void BeginSample(string name)
  void BeginSample(string name, Object targetObject)
  void ValidateArguments(string name)
  void BeginSampleImpl(string name, Object targetObject)
  void EndSample()
  int get_maxNumberOfSamplesPerFrame()
  void set_maxNumberOfSamplesPerFrame(int value)
  UInt32 get_usedHeapSize()
  long get_usedHeapSizeLong()
  int GetRuntimeMemorySize(Object o)
  long GetRuntimeMemorySizeLong(Object o)
  UInt32 GetMonoHeapSize()
  long GetMonoHeapSizeLong()
  UInt32 GetMonoUsedSize()
  long GetMonoUsedSizeLong()
  bool SetTempAllocatorRequestedSize(UInt32 size)
  UInt32 GetTempAllocatorSize()
  UInt32 GetTotalAllocatedMemory()
  long GetTotalAllocatedMemoryLong()
  UInt32 GetTotalUnusedReservedMemory()
  long GetTotalUnusedReservedMemoryLong()
  UInt32 GetTotalReservedMemory()
  long GetTotalReservedMemoryLong()
  long GetTotalFragmentationInfo(NativeArray`1<int> stats)
  long InternalGetTotalFragmentationInfo(IntPtr pStats, int count)
  long GetAllocatedMemoryForGraphicsDriver()
  void EmitFrameMetaData(Guid id, int tag, Array data)
  void EmitFrameMetaData(Guid id, int tag, List`1<T> data)
  void EmitFrameMetaData(Guid id, int tag, NativeArray`1<T> data)
  void EmitSessionMetaData(Guid id, int tag, Array data)
  void EmitSessionMetaData(Guid id, int tag, List`1<T> data)
  void EmitSessionMetaData(Guid id, int tag, NativeArray`1<T> data)
  void Internal_EmitGlobalMetaData_Array(Void* id, int idLen, int tag, Array data, int count, int elementSize, bool frameData)
  void Internal_EmitGlobalMetaData_Native(Void* id, int idLen, int tag, IntPtr data, int count, int elementSize, bool frameData)
  void SetCategoryEnabled(ProfilerCategory category, bool enabled)
  bool IsCategoryEnabled(ProfilerCategory category)
  UInt32 GetCategoriesCount()
  void GetAllCategories(ProfilerCategory[] categories)
  void GetAllCategories(NativeArray`1<ProfilerCategory> categories)
  void Internal_SetCategoryEnabled(ushort categoryId, bool enabled)
  bool Internal_IsCategoryEnabled(ushort categoryId)
--------------------------------------------------
Класс: UnityEngine.Profiling.Recorder
Наследуется от: object
Поля:
  ProfilerRecorderOptions s_RecorderDefaultOptions
  Recorder s_InvalidRecorder
  ProfilerRecorder m_RecorderCPU
  ProfilerRecorder m_RecorderGPU
Свойства:
  bool isValid
  bool enabled
  long elapsedNanoseconds
  long gpuElapsedNanoseconds
  int sampleBlockCount
  int gpuSampleBlockCount
Методы:
  void .ctor()
  void .ctor(ProfilerRecorderHandle handle)
  void Finalize()
  Recorder Get(string samplerName)
  bool get_isValid()
  bool get_enabled()
  void set_enabled(bool value)
  long get_elapsedNanoseconds()
  long get_gpuElapsedNanoseconds()
  int get_sampleBlockCount()
  int get_gpuSampleBlockCount()
  void FilterToCurrentThread()
  void CollectFromAllThreads()
  void SetEnabled(bool state)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Profiling.Sampler
Наследуется от: object
Поля:
  IntPtr m_Ptr
  Sampler s_InvalidSampler
Свойства:
  bool isValid
  string name
Методы:
  void .ctor()
  void .ctor(IntPtr ptr)
  bool get_isValid()
  Recorder GetRecorder()
  Sampler Get(string name)
  int GetNames(List`1<string> names)
  string get_name()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Profiling.CustomSampler
Наследуется от: Sampler
Поля:
  CustomSampler s_InvalidCustomSampler
Свойства:
Методы:
  void .ctor()
  void .ctor(IntPtr ptr)
  CustomSampler Create(string name, bool collectGpuData)
  void Begin()
  void Begin(Object targetObject)
  void End()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Profiling.Experimental.DebugScreenCapture
Наследуется от: ValueType
Поля:
  NativeArray`1<byte> <rawImageDataReference>k__BackingField
  TextureFormat <imageFormat>k__BackingField
  int <width>k__BackingField
  int <height>k__BackingField
Свойства:
  NativeArray`1<byte> rawImageDataReference
  TextureFormat imageFormat
  int width
  int height
Методы:
  NativeArray`1<byte> get_rawImageDataReference()
  void set_rawImageDataReference(NativeArray`1<byte> value)
  TextureFormat get_imageFormat()
  void set_imageFormat(TextureFormat value)
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
--------------------------------------------------
Класс: UnityEngine.Profiling.Memory.Experimental.CaptureFlags
Наследуется от: Enum
Поля:
  UInt32 value__
  CaptureFlags ManagedObjects
  CaptureFlags NativeObjects
  CaptureFlags NativeAllocations
  CaptureFlags NativeAllocationSites
  CaptureFlags NativeStackTraces
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Profiling.Memory.Experimental.MetaData
Наследуется от: object
Поля:
  string content
  string platform
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler
Наследуется от: object
Поля:
  Action`2<string, bool> m_SnapshotFinished
  Action`3<string, bool, DebugScreenCapture> m_SaveScreenshotToDisk
  Action`1<MetaData> createMetaData
Свойства:
Методы:
  void add_m_SnapshotFinished(Action`2<string, bool> value)
  void remove_m_SnapshotFinished(Action`2<string, bool> value)
  void add_m_SaveScreenshotToDisk(Action`3<string, bool, DebugScreenCapture> value)
  void remove_m_SaveScreenshotToDisk(Action`3<string, bool, DebugScreenCapture> value)
  void add_createMetaData(Action`1<MetaData> value)
  void remove_createMetaData(Action`1<MetaData> value)
  void StartOperation(UInt32 captureFlag, bool requestScreenshot, string path, bool isRemote)
  void TakeSnapshot(string path, Action`2<string, bool> finishCallback, CaptureFlags captureFlags)
  void TakeSnapshot(string path, Action`2<string, bool> finishCallback, Action`3<string, bool, DebugScreenCapture> screenshotCallback, CaptureFlags captureFlags)
  void TakeTempSnapshot(Action`2<string, bool> finishCallback, CaptureFlags captureFlags)
  Byte[] PrepareMetadata()
  int WriteIntToByteArray(Byte[] array, int offset, int value)
  int WriteStringToByteArray(Byte[] array, int offset, string value)
  void FinalizeSnapshot(string path, bool result)
  void SaveScreenshotToDisk(string path, bool result, IntPtr pixelsPtr, int pixelsCount, TextureFormat format, int width, int height)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Jobs.IJobParallelForTransform
Поля:
Свойства:
Методы:
  void Execute(int index, TransformAccess transform)
--------------------------------------------------
Класс: UnityEngine.Jobs.IJobParallelForTransformExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  JobHandle Schedule(T jobData, TransformAccessArray transforms, JobHandle dependsOn)
  JobHandle ScheduleReadOnly(T jobData, TransformAccessArray transforms, int batchSize, JobHandle dependsOn)
  void RunReadOnly(T jobData, TransformAccessArray transforms)
--------------------------------------------------
Класс: UnityEngine.Jobs.TransformAccess
Наследуется от: ValueType
Поля:
  IntPtr hierarchy
  int index
Свойства:
  Vector3 position
  Quaternion rotation
  Vector3 localPosition
  Quaternion localRotation
  Vector3 localScale
  Matrix4x4 localToWorldMatrix
  Matrix4x4 worldToLocalMatrix
  bool isValid
Методы:
  Vector3 get_position()
  void set_position(Vector3 value)
  Quaternion get_rotation()
  void set_rotation(Quaternion value)
  Vector3 get_localPosition()
  void set_localPosition(Vector3 value)
  Quaternion get_localRotation()
  void set_localRotation(Quaternion value)
  Vector3 get_localScale()
  void set_localScale(Vector3 value)
  Matrix4x4 get_localToWorldMatrix()
  Matrix4x4 get_worldToLocalMatrix()
  bool get_isValid()
  void SetPositionAndRotation(Vector3 position, Quaternion rotation)
  void SetLocalPositionAndRotation(Vector3 localPosition, Quaternion localRotation)
  void GetPositionAndRotation(Vector3& position, Quaternion& rotation)
  void GetLocalPositionAndRotation(Vector3& localPosition, Quaternion& localRotation)
  void SetPositionAndRotation_Internal(TransformAccess& access, Vector3& position, Quaternion& rotation)
  void SetLocalPositionAndRotation_Internal(TransformAccess& access, Vector3& localPosition, Quaternion& localRotation)
  void GetPositionAndRotation_Internal(TransformAccess& access, Vector3& position, Quaternion& rotation)
  void GetLocalPositionAndRotation_Internal(TransformAccess& access, Vector3& localPosition, Quaternion& localRotation)
  void GetPosition(TransformAccess& access, Vector3& p)
  void SetPosition(TransformAccess& access, Vector3& p)
  void GetRotation(TransformAccess& access, Quaternion& r)
  void SetRotation(TransformAccess& access, Quaternion& r)
  void GetLocalPosition(TransformAccess& access, Vector3& p)
  void SetLocalPosition(TransformAccess& access, Vector3& p)
  void GetLocalRotation(TransformAccess& access, Quaternion& r)
  void SetLocalRotation(TransformAccess& access, Quaternion& r)
  void GetLocalScale(TransformAccess& access, Vector3& r)
  void SetLocalScale(TransformAccess& access, Vector3& r)
  void GetLocalToWorldMatrix(TransformAccess& access, Matrix4x4& m)
  void GetWorldToLocalMatrix(TransformAccess& access, Matrix4x4& m)
  void CheckHierarchyValid()
  void MarkReadWrite()
  void MarkReadOnly()
  void CheckWriteAccess()
--------------------------------------------------
Класс: UnityEngine.Jobs.TransformAccessArray
Наследуется от: ValueType
Поля:
  IntPtr m_TransformArray
Свойства:
  bool isCreated
  Transform Item
  int capacity
  int length
Методы:
  void .ctor(Transform[] transforms, int desiredJobCount)
  void .ctor(int capacity, int desiredJobCount)
  void Allocate(int capacity, int desiredJobCount, TransformAccessArray& array)
  bool get_isCreated()
  void Dispose()
  IntPtr GetTransformAccessArrayForSchedule()
  Transform get_Item(int index)
  void set_Item(int index, Transform value)
  int get_capacity()
  void set_capacity(int value)
  int get_length()
  void Add(Transform transform)
  void RemoveAtSwapBack(int index)
  void SetTransforms(Transform[] transforms)
  IntPtr Create(int capacity, int desiredJobCount)
  void DestroyTransformAccessArray(IntPtr transformArray)
  void SetTransforms(IntPtr transformArrayIntPtr, Transform[] transforms)
  void Add(IntPtr transformArrayIntPtr, Transform transform)
  void RemoveAtSwapBack(IntPtr transformArrayIntPtr, int index)
  IntPtr GetSortedTransformAccess(IntPtr transformArrayIntPtr)
  IntPtr GetSortedToUserIndex(IntPtr transformArrayIntPtr)
  int GetLength(IntPtr transformArrayIntPtr)
  int GetCapacity(IntPtr transformArrayIntPtr)
  void SetCapacity(IntPtr transformArrayIntPtr, int capacity)
  Transform GetTransform(IntPtr transformArrayIntPtr, int index)
  void SetTransform(IntPtr transformArrayIntPtr, int index, Transform transform)
--------------------------------------------------
Класс: UnityEngine.Windows.CrashReporting
Наследуется от: object
Поля:
Свойства:
  string crashReportFolder
Методы:
  string get_crashReportFolder()
--------------------------------------------------
Класс: UnityEngine.Windows.Input
Наследуется от: object
Поля:
Свойства:
Методы:
  void ForwardRawInputImpl(UInt32* rawInputHeaderIndices, UInt32* rawInputDataIndices, UInt32 indicesCount, Byte* rawInputData, UInt32 rawInputDataSize)
  void ForwardRawInput(IntPtr rawInputHeaderIndices, IntPtr rawInputDataIndices, UInt32 indicesCount, IntPtr rawInputData, UInt32 rawInputDataSize)
  void ForwardRawInput(UInt32* rawInputHeaderIndices, UInt32* rawInputDataIndices, UInt32 indicesCount, Byte* rawInputData, UInt32 rawInputDataSize)
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.PhraseRecognitionSystem
Наследуется от: object
Поля:
  ErrorDelegate OnError
  StatusDelegate OnStatusChanged
Свойства:
  bool isSupported
  SpeechSystemStatus Status
Методы:
  bool get_isSupported()
  SpeechSystemStatus get_Status()
  void Restart()
  void Shutdown()
  void add_OnError(ErrorDelegate value)
  void remove_OnError(ErrorDelegate value)
  void add_OnStatusChanged(StatusDelegate value)
  void remove_OnStatusChanged(StatusDelegate value)
  void PhraseRecognitionSystem_InvokeErrorEvent(SpeechError errorCode)
  void PhraseRecognitionSystem_InvokeStatusChangedEvent(SpeechSystemStatus status)
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.PhraseRecognizer
Наследуется от: object
Поля:
  IntPtr m_Recognizer
  PhraseRecognizedDelegate OnPhraseRecognized
Свойства:
  bool IsRunning
Методы:
  IntPtr CreateFromKeywords(object self, String[] keywords, ConfidenceLevel minimumConfidence)
  IntPtr CreateFromGrammarFile(object self, string grammarFilePath, ConfidenceLevel minimumConfidence)
  void Start_Internal(IntPtr recognizer)
  void Stop_Internal(IntPtr recognizer)
  bool IsRunning_Internal(IntPtr recognizer)
  void Destroy(IntPtr recognizer)
  void DestroyThreaded(IntPtr recognizer)
  void add_OnPhraseRecognized(PhraseRecognizedDelegate value)
  void remove_OnPhraseRecognized(PhraseRecognizedDelegate value)
  void .ctor()
  void Finalize()
  void Start()
  void Stop()
  void Dispose()
  bool get_IsRunning()
  void InvokePhraseRecognizedEvent(string text, ConfidenceLevel confidence, SemanticMeaning[] semanticMeanings, long phraseStartFileTime, long phraseDurationTicks)
  SemanticMeaning[] MarshalSemanticMeaning(IntPtr keys, IntPtr values, IntPtr valueSizes, int valueCount)
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.DictationRecognizer
Наследуется от: object
Поля:
  IntPtr m_Recognizer
  DictationHypothesisDelegate DictationHypothesis
  DictationResultDelegate DictationResult
  DictationCompletedDelegate DictationComplete
  DictationErrorHandler DictationError
Свойства:
  SpeechSystemStatus Status
  float AutoSilenceTimeoutSeconds
  float InitialSilenceTimeoutSeconds
Методы:
  IntPtr Create(object self, ConfidenceLevel minimumConfidence, DictationTopicConstraint topicConstraint)
  void Start(IntPtr self)
  void Stop(IntPtr self)
  void Destroy(IntPtr self)
  void DestroyThreaded(IntPtr self)
  SpeechSystemStatus GetStatus(IntPtr self)
  float GetAutoSilenceTimeoutSeconds(IntPtr self)
  void SetAutoSilenceTimeoutSeconds(IntPtr self, float value)
  float GetInitialSilenceTimeoutSeconds(IntPtr self)
  void SetInitialSilenceTimeoutSeconds(IntPtr self, float value)
  void add_DictationHypothesis(DictationHypothesisDelegate value)
  void remove_DictationHypothesis(DictationHypothesisDelegate value)
  void add_DictationResult(DictationResultDelegate value)
  void remove_DictationResult(DictationResultDelegate value)
  void add_DictationComplete(DictationCompletedDelegate value)
  void remove_DictationComplete(DictationCompletedDelegate value)
  void add_DictationError(DictationErrorHandler value)
  void remove_DictationError(DictationErrorHandler value)
  SpeechSystemStatus get_Status()
  float get_AutoSilenceTimeoutSeconds()
  void set_AutoSilenceTimeoutSeconds(float value)
  float get_InitialSilenceTimeoutSeconds()
  void set_InitialSilenceTimeoutSeconds(float value)
  void .ctor()
  void .ctor(ConfidenceLevel confidenceLevel)
  void .ctor(DictationTopicConstraint topic)
  void .ctor(ConfidenceLevel minimumConfidence, DictationTopicConstraint topic)
  void Finalize()
  void Start()
  void Stop()
  void Dispose()
  void DictationRecognizer_InvokeHypothesisGeneratedEvent(string keyword)
  void DictationRecognizer_InvokeResultGeneratedEvent(string keyword, ConfidenceLevel minimumConfidence)
  void DictationRecognizer_InvokeCompletedEvent(DictationCompletionCause cause)
  void DictationRecognizer_InvokeErrorEvent(string error, int hresult)
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.ConfidenceLevel
Наследуется от: Enum
Поля:
  int value__
  ConfidenceLevel High
  ConfidenceLevel Medium
  ConfidenceLevel Low
  ConfidenceLevel Rejected
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.SpeechSystemStatus
Наследуется от: Enum
Поля:
  int value__
  SpeechSystemStatus Stopped
  SpeechSystemStatus Running
  SpeechSystemStatus Failed
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.SpeechError
Наследуется от: Enum
Поля:
  int value__
  SpeechError NoError
  SpeechError TopicLanguageNotSupported
  SpeechError GrammarLanguageMismatch
  SpeechError GrammarCompilationFailure
  SpeechError AudioQualityFailure
  SpeechError PauseLimitExceeded
  SpeechError TimeoutExceeded
  SpeechError NetworkFailure
  SpeechError MicrophoneUnavailable
  SpeechError UnknownError
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.DictationTopicConstraint
Наследуется от: Enum
Поля:
  int value__
  DictationTopicConstraint WebSearch
  DictationTopicConstraint Form
  DictationTopicConstraint Dictation
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.DictationCompletionCause
Наследуется от: Enum
Поля:
  int value__
  DictationCompletionCause Complete
  DictationCompletionCause AudioQualityFailure
  DictationCompletionCause Canceled
  DictationCompletionCause TimeoutExceeded
  DictationCompletionCause PauseLimitExceeded
  DictationCompletionCause NetworkFailure
  DictationCompletionCause MicrophoneUnavailable
  DictationCompletionCause UnknownError
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.SemanticMeaning
Наследуется от: ValueType
Поля:
  string key
  String[] values
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.PhraseRecognizedEventArgs
Наследуется от: ValueType
Поля:
  ConfidenceLevel confidence
  SemanticMeaning[] semanticMeanings
  string text
  DateTime phraseStartTime
  TimeSpan phraseDuration
Свойства:
Методы:
  void .ctor(string text, ConfidenceLevel confidence, SemanticMeaning[] semanticMeanings, DateTime phraseStartTime, TimeSpan phraseDuration)
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.KeywordRecognizer
Наследуется от: PhraseRecognizer
Поля:
  IEnumerable`1<string> <Keywords>k__BackingField
Свойства:
  IEnumerable`1<string> Keywords
Методы:
  IEnumerable`1<string> get_Keywords()
  void set_Keywords(IEnumerable`1<string> value)
  void .ctor(String[] keywords)
  void .ctor(String[] keywords, ConfidenceLevel minimumConfidence)
--------------------------------------------------
Класс: UnityEngine.Windows.Speech.GrammarRecognizer
Наследуется от: PhraseRecognizer
Поля:
  string <GrammarFilePath>k__BackingField
Свойства:
  string GrammarFilePath
Методы:
  string get_GrammarFilePath()
  void set_GrammarFilePath(string value)
  void .ctor(string grammarFilePath)
  void .ctor(string grammarFilePath, ConfidenceLevel minimumConfidence)
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.PhotoCaptureFileOutputFormat
Наследуется от: Enum
Поля:
  int value__
  PhotoCaptureFileOutputFormat PNG
  PhotoCaptureFileOutputFormat JPG
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.PhotoCapture
Наследуется от: object
Поля:
  IntPtr m_NativePtr
  Resolution[] s_SupportedResolutions
  long HR_SUCCESS
Свойства:
  IEnumerable`1<Resolution> SupportedResolutions
Методы:
  PhotoCaptureResult MakeCaptureResult(CaptureResultType resultType, long hResult)
  PhotoCaptureResult MakeCaptureResult(long hResult)
  IEnumerable`1<Resolution> get_SupportedResolutions()
  Resolution[] GetSupportedResolutions_Internal()
  void CreateAsync(bool showHolograms, OnCaptureResourceCreatedCallback onCreatedCallback)
  void CreateAsync(OnCaptureResourceCreatedCallback onCreatedCallback)
  IntPtr Instantiate_Internal(bool showHolograms, OnCaptureResourceCreatedCallback onCreatedCallback)
  void InvokeOnCreatedResourceDelegate(OnCaptureResourceCreatedCallback callback, IntPtr nativePtr)
  void .ctor(IntPtr nativeCaptureObject)
  void StartPhotoModeAsync(CameraParameters setupParams, OnPhotoModeStartedCallback onPhotoModeStartedCallback)
  void StartPhotoMode_Internal(CameraParameters setupParams, OnPhotoModeStartedCallback onPhotoModeStartedCallback)
  void InvokeOnPhotoModeStartedDelegate(OnPhotoModeStartedCallback callback, long hResult)
  void StopPhotoModeAsync(OnPhotoModeStoppedCallback onPhotoModeStoppedCallback)
  void InvokeOnPhotoModeStoppedDelegate(OnPhotoModeStoppedCallback callback, long hResult)
  void TakePhotoAsync(string filename, PhotoCaptureFileOutputFormat fileOutputFormat, OnCapturedToDiskCallback onCapturedPhotoToDiskCallback)
  void CapturePhotoToDisk_Internal(string filename, PhotoCaptureFileOutputFormat fileOutputFormat, OnCapturedToDiskCallback onCapturedPhotoToDiskCallback)
  void InvokeOnCapturedPhotoToDiskDelegate(OnCapturedToDiskCallback callback, long hResult)
  void TakePhotoAsync(OnCapturedToMemoryCallback onCapturedPhotoToMemoryCallback)
  void CapturePhotoToMemory_Internal(OnCapturedToMemoryCallback onCapturedPhotoToMemoryCallback)
  void InvokeOnCapturedPhotoToMemoryDelegate(OnCapturedToMemoryCallback callback, long hResult, IntPtr photoCaptureFramePtr)
  IntPtr GetUnsafePointerToVideoDeviceController()
  void Dispose()
  void Dispose_Internal()
  void Finalize()
  void DisposeThreaded_Internal()
  void StartPhotoMode_Internal_Injected(CameraParameters& setupParams, OnPhotoModeStartedCallback onPhotoModeStartedCallback)
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.PhotoCaptureFrame
Наследуется от: object
Поля:
  IntPtr m_NativePtr
  int <dataLength>k__BackingField
  bool <hasLocationData>k__BackingField
  CapturePixelFormat <pixelFormat>k__BackingField
Свойства:
  int dataLength
  bool hasLocationData
  CapturePixelFormat pixelFormat
Методы:
  int get_dataLength()
  void set_dataLength(int value)
  bool get_hasLocationData()
  void set_hasLocationData(bool value)
  CapturePixelFormat get_pixelFormat()
  void set_pixelFormat(CapturePixelFormat value)
  int GetDataLength()
  bool GetHasLocationData()
  CapturePixelFormat GetCapturePixelFormat()
  bool TryGetCameraToWorldMatrix(Matrix4x4& cameraToWorldMatrix)
  Matrix4x4 GetCameraToWorldMatrix()
  bool TryGetProjectionMatrix(Matrix4x4& projectionMatrix)
  bool TryGetProjectionMatrix(float nearClipPlane, float farClipPlane, Matrix4x4& projectionMatrix)
  Matrix4x4 GetProjection()
  void UploadImageDataToTexture(Texture2D targetTexture)
  void UploadImageDataToTexture_Internal(Texture2D targetTexture)
  IntPtr GetUnsafePointerToBuffer()
  void CopyRawImageDataIntoBuffer(List`1<byte> byteBuffer)
  void CopyRawImageDataIntoBuffer_Internal(Byte[] byteArray)
  void .ctor(IntPtr nativePtr)
  void Cleanup()
  void Dispose_Internal()
  void Dispose()
  void Finalize()
  void GetCameraToWorldMatrix_Injected(Matrix4x4& ret)
  void GetProjection_Injected(Matrix4x4& ret)
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.VideoCapture
Наследуется от: object
Поля:
  IntPtr m_NativePtr
  Resolution[] s_SupportedResolutions
  long HR_SUCCESS
Свойства:
  IEnumerable`1<Resolution> SupportedResolutions
  bool IsRecording
Методы:
  VideoCaptureResult MakeCaptureResult(CaptureResultType resultType, long hResult)
  VideoCaptureResult MakeCaptureResult(long hResult)
  IEnumerable`1<Resolution> get_SupportedResolutions()
  Resolution[] GetSupportedResolutions_Internal()
  IEnumerable`1<float> GetSupportedFrameRatesForResolution(Resolution resolution)
  Single[] GetSupportedFrameRatesForResolution_Internal(int resolutionWidth, int resolutionHeight)
  bool get_IsRecording()
  void CreateAsync(bool showHolograms, OnVideoCaptureResourceCreatedCallback onCreatedCallback)
  void CreateAsync(OnVideoCaptureResourceCreatedCallback onCreatedCallback)
  void Instantiate_Internal(bool showHolograms, OnVideoCaptureResourceCreatedCallback onCreatedCallback)
  void InvokeOnCreatedVideoCaptureResourceDelegate(OnVideoCaptureResourceCreatedCallback callback, IntPtr nativePtr)
  void .ctor(IntPtr nativeCaptureObject)
  void StartVideoModeAsync(CameraParameters setupParams, AudioState audioState, OnVideoModeStartedCallback onVideoModeStartedCallback)
  void StartVideoMode_Internal(CameraParameters cameraParameters, AudioState audioState, OnVideoModeStartedCallback onVideoModeStartedCallback)
  void InvokeOnVideoModeStartedDelegate(OnVideoModeStartedCallback callback, long hResult)
  void StopVideoModeAsync(OnVideoModeStoppedCallback onVideoModeStoppedCallback)
  void InvokeOnVideoModeStoppedDelegate(OnVideoModeStoppedCallback callback, long hResult)
  void StartRecordingAsync(string filename, OnStartedRecordingVideoCallback onStartedRecordingVideoCallback)
  void StartRecordingVideoToDisk_Internal(string filename, OnStartedRecordingVideoCallback onStartedRecordingVideoCallback)
  void InvokeOnStartedRecordingVideoToDiskDelegate(OnStartedRecordingVideoCallback callback, long hResult)
  void StopRecordingAsync(OnStoppedRecordingVideoCallback onStoppedRecordingVideoCallback)
  void InvokeOnStoppedRecordingVideoToDiskDelegate(OnStoppedRecordingVideoCallback callback, long hResult)
  IntPtr GetUnsafePointerToVideoDeviceController()
  void Dispose()
  void Dispose_Internal()
  void Finalize()
  void DisposeThreaded_Internal()
  void StartVideoMode_Internal_Injected(CameraParameters& cameraParameters, AudioState audioState, OnVideoModeStartedCallback onVideoModeStartedCallback)
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.CapturePixelFormat
Наследуется от: Enum
Поля:
  int value__
  CapturePixelFormat BGRA32
  CapturePixelFormat NV12
  CapturePixelFormat JPEG
  CapturePixelFormat PNG
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.WebCamMode
Наследуется от: Enum
Поля:
  int value__
  WebCamMode None
  WebCamMode PhotoMode
  WebCamMode VideoMode
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.WebCam
Наследуется от: object
Поля:
Свойства:
  WebCamMode Mode
Методы:
  WebCamMode get_Mode()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Windows.WebCam.CameraParameters
Наследуется от: ValueType
Поля:
  float m_HologramOpacity
  float m_FrameRate
  int m_CameraResolutionWidth
  int m_CameraResolutionHeight
  CapturePixelFormat m_PixelFormat
Свойства:
  float hologramOpacity
  float frameRate
  int cameraResolutionWidth
  int cameraResolutionHeight
  CapturePixelFormat pixelFormat
Методы:
  float get_hologramOpacity()
  void set_hologramOpacity(float value)
  float get_frameRate()
  void set_frameRate(float value)
  int get_cameraResolutionWidth()
  void set_cameraResolutionWidth(int value)
  int get_cameraResolutionHeight()
  void set_cameraResolutionHeight(int value)
  CapturePixelFormat get_pixelFormat()
  void set_pixelFormat(CapturePixelFormat value)
  void .ctor(WebCamMode webCamMode)
--------------------------------------------------
Класс: UnityEngine.Events.PersistentListenerMode
Наследуется от: Enum
Поля:
  int value__
  PersistentListenerMode EventDefined
  PersistentListenerMode Void
  PersistentListenerMode Object
  PersistentListenerMode Int
  PersistentListenerMode Float
  PersistentListenerMode String
  PersistentListenerMode Bool
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Events.UnityEventTools
Наследуется от: object
Поля:
Свойства:
Методы:
  string TidyAssemblyTypeName(string assemblyTypeName)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Events.ArgumentCache
Наследуется от: object
Поля:
  Object m_ObjectArgument
  string m_ObjectArgumentAssemblyTypeName
  int m_IntArgument
  float m_FloatArgument
  string m_StringArgument
  bool m_BoolArgument
Свойства:
  Object unityObjectArgument
  string unityObjectArgumentAssemblyTypeName
  int intArgument
  float floatArgument
  string stringArgument
  bool boolArgument
Методы:
  Object get_unityObjectArgument()
  void set_unityObjectArgument(Object value)
  string get_unityObjectArgumentAssemblyTypeName()
  int get_intArgument()
  void set_intArgument(int value)
  float get_floatArgument()
  void set_floatArgument(float value)
  string get_stringArgument()
  void set_stringArgument(string value)
  bool get_boolArgument()
  void set_boolArgument(bool value)
  void OnBeforeSerialize()
  void OnAfterDeserialize()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Events.BaseInvokableCall
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(object target, MethodInfo function)
  void Invoke(Object[] args)
  void ThrowOnInvalidArg(object arg)
  bool AllowInvoke(Delegate delegate)
  bool Find(object targetObj, MethodInfo method)
--------------------------------------------------
Класс: UnityEngine.Events.InvokableCall
Наследуется от: BaseInvokableCall
Поля:
  UnityAction Delegate
Свойства:
Методы:
  void add_Delegate(UnityAction value)
  void remove_Delegate(UnityAction value)
  void .ctor(object target, MethodInfo theFunction)
  void .ctor(UnityAction action)
  void Invoke(Object[] args)
  void Invoke()
  bool Find(object targetObj, MethodInfo method)
--------------------------------------------------
Класс: UnityEngine.Events.InvokableCall`1
Наследуется от: BaseInvokableCall
Поля:
  UnityAction`1<T1> Delegate
Свойства:
Методы:
  void add_Delegate(UnityAction`1<T1> value)
  void remove_Delegate(UnityAction`1<T1> value)
  void .ctor(object target, MethodInfo theFunction)
  void .ctor(UnityAction`1<T1> action)
  void Invoke(Object[] args)
  void Invoke(T1 args0)
  bool Find(object targetObj, MethodInfo method)
--------------------------------------------------
Класс: UnityEngine.Events.InvokableCall`2
Наследуется от: BaseInvokableCall
Поля:
  UnityAction`2<T1, T2> Delegate
Свойства:
Методы:
  void add_Delegate(UnityAction`2<T1, T2> value)
  void remove_Delegate(UnityAction`2<T1, T2> value)
  void .ctor(object target, MethodInfo theFunction)
  void .ctor(UnityAction`2<T1, T2> action)
  void Invoke(Object[] args)
  void Invoke(T1 args0, T2 args1)
  bool Find(object targetObj, MethodInfo method)
--------------------------------------------------
Класс: UnityEngine.Events.InvokableCall`3
Наследуется от: BaseInvokableCall
Поля:
  UnityAction`3<T1, T2, T3> Delegate
Свойства:
Методы:
  void add_Delegate(UnityAction`3<T1, T2, T3> value)
  void remove_Delegate(UnityAction`3<T1, T2, T3> value)
  void .ctor(object target, MethodInfo theFunction)
  void .ctor(UnityAction`3<T1, T2, T3> action)
  void Invoke(Object[] args)
  void Invoke(T1 args0, T2 args1, T3 args2)
  bool Find(object targetObj, MethodInfo method)
--------------------------------------------------
Класс: UnityEngine.Events.InvokableCall`4
Наследуется от: BaseInvokableCall
Поля:
  UnityAction`4<T1, T2, T3, T4> Delegate
Свойства:
Методы:
  void add_Delegate(UnityAction`4<T1, T2, T3, T4> value)
  void remove_Delegate(UnityAction`4<T1, T2, T3, T4> value)
  void .ctor(object target, MethodInfo theFunction)
  void .ctor(UnityAction`4<T1, T2, T3, T4> action)
  void Invoke(Object[] args)
  void Invoke(T1 args0, T2 args1, T3 args2, T4 args3)
  bool Find(object targetObj, MethodInfo method)
--------------------------------------------------
Класс: UnityEngine.Events.CachedInvokableCall`1
Наследуется от: InvokableCall`1<T>
Поля:
  T m_Arg1
Свойства:
Методы:
  void .ctor(Object target, MethodInfo theFunction, T argument)
  void Invoke(Object[] args)
  void Invoke(T arg0)
--------------------------------------------------
Класс: UnityEngine.Events.UnityEventCallState
Наследуется от: Enum
Поля:
  int value__
  UnityEventCallState Off
  UnityEventCallState EditorAndRuntime
  UnityEventCallState RuntimeOnly
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Events.PersistentCall
Наследуется от: object
Поля:
  Object m_Target
  string m_TargetAssemblyTypeName
  string m_MethodName
  PersistentListenerMode m_Mode
  ArgumentCache m_Arguments
  UnityEventCallState m_CallState
Свойства:
  Object target
  string targetAssemblyTypeName
  string methodName
  PersistentListenerMode mode
  ArgumentCache arguments
  UnityEventCallState callState
Методы:
  Object get_target()
  string get_targetAssemblyTypeName()
  string get_methodName()
  PersistentListenerMode get_mode()
  void set_mode(PersistentListenerMode value)
  ArgumentCache get_arguments()
  UnityEventCallState get_callState()
  void set_callState(UnityEventCallState value)
  bool IsValid()
  BaseInvokableCall GetRuntimeCall(UnityEventBase theEvent)
  BaseInvokableCall GetObjectCall(Object target, MethodInfo method, ArgumentCache arguments)
  void RegisterPersistentListener(Object ttarget, Type targetType, string mmethodName)
  void UnregisterPersistentListener()
  void OnBeforeSerialize()
  void OnAfterDeserialize()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Events.PersistentCallGroup
Наследуется от: object
Поля:
  List`1<PersistentCall> m_Calls
Свойства:
  int Count
Методы:
  void .ctor()
  int get_Count()
  PersistentCall GetListener(int index)
  IEnumerable`1<PersistentCall> GetListeners()
  void AddListener()
  void AddListener(PersistentCall call)
  void RemoveListener(int index)
  void Clear()
  void RegisterEventPersistentListener(int index, Object targetObj, Type targetObjType, string methodName)
  void RegisterVoidPersistentListener(int index, Object targetObj, Type targetObjType, string methodName)
  void RegisterObjectPersistentListener(int index, Object targetObj, Type targetObjType, Object argument, string methodName)
  void RegisterIntPersistentListener(int index, Object targetObj, Type targetObjType, int argument, string methodName)
  void RegisterFloatPersistentListener(int index, Object targetObj, Type targetObjType, float argument, string methodName)
  void RegisterStringPersistentListener(int index, Object targetObj, Type targetObjType, string argument, string methodName)
  void RegisterBoolPersistentListener(int index, Object targetObj, Type targetObjType, bool argument, string methodName)
  void UnregisterPersistentListener(int index)
  void RemoveListeners(Object target, string methodName)
  void Initialize(InvokableCallList invokableList, UnityEventBase unityEventBase)
--------------------------------------------------
Класс: UnityEngine.Events.InvokableCallList
Наследуется от: object
Поля:
  List`1<BaseInvokableCall> m_PersistentCalls
  List`1<BaseInvokableCall> m_RuntimeCalls
  List`1<BaseInvokableCall> m_ExecutingCalls
  bool m_NeedsUpdate
Свойства:
  int Count
Методы:
  int get_Count()
  void AddPersistentInvokableCall(BaseInvokableCall call)
  void AddListener(BaseInvokableCall call)
  void RemoveListener(object targetObj, MethodInfo method)
  void Clear()
  void ClearPersistent()
  List`1<BaseInvokableCall> PrepareInvoke()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Events.UnityEventBase
Наследуется от: object
Поля:
  InvokableCallList m_Calls
  PersistentCallGroup m_PersistentCalls
  bool m_CallsDirty
Свойства:
Методы:
  void .ctor()
  void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
  void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
  MethodInfo FindMethod_Impl(string name, object targetObj)
  MethodInfo FindMethod_Impl(string name, Type targetObjType)
  BaseInvokableCall GetDelegate(object target, MethodInfo theFunction)
  MethodInfo FindMethod(PersistentCall call)
  MethodInfo FindMethod(string name, Type listenerType, PersistentListenerMode mode, Type argumentType)
  int GetPersistentEventCount()
  Object GetPersistentTarget(int index)
  string GetPersistentMethodName(int index)
  void DirtyPersistentCalls()
  void RebuildPersistentCallsIfNeeded()
  void SetPersistentListenerState(int index, UnityEventCallState state)
  UnityEventCallState GetPersistentListenerState(int index)
  void AddListener(object targetObj, MethodInfo method)
  void AddCall(BaseInvokableCall call)
  void RemoveListener(object targetObj, MethodInfo method)
  void RemoveAllListeners()
  List`1<BaseInvokableCall> PrepareInvoke()
  void Invoke(Object[] parameters)
  string ToString()
  MethodInfo GetValidMethodInfo(object obj, string functionName, Type[] argumentTypes)
  MethodInfo GetValidMethodInfo(Type objectType, string functionName, Type[] argumentTypes)
--------------------------------------------------
Класс: UnityEngine.Events.UnityAction
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.Events.UnityEvent
Наследуется от: UnityEventBase
Поля:
  Object[] m_InvokeArray
Свойства:
Методы:
  void .ctor()
  void AddListener(UnityAction call)
  void RemoveListener(UnityAction call)
  MethodInfo FindMethod_Impl(string name, Type targetObjType)
  BaseInvokableCall GetDelegate(object target, MethodInfo theFunction)
  BaseInvokableCall GetDelegate(UnityAction action)
  void Invoke()
--------------------------------------------------
Класс: UnityEngine.Events.UnityAction`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T0 arg0)
  IAsyncResult BeginInvoke(T0 arg0, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.Events.UnityEvent`1
Наследуется от: UnityEventBase
Поля:
  Object[] m_InvokeArray
Свойства:
Методы:
  void .ctor()
  void AddListener(UnityAction`1<T0> call)
  void RemoveListener(UnityAction`1<T0> call)
  MethodInfo FindMethod_Impl(string name, Type targetObjType)
  BaseInvokableCall GetDelegate(object target, MethodInfo theFunction)
  BaseInvokableCall GetDelegate(UnityAction`1<T0> action)
  void Invoke(T0 arg0)
--------------------------------------------------
Класс: UnityEngine.Events.UnityAction`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T0 arg0, T1 arg1)
  IAsyncResult BeginInvoke(T0 arg0, T1 arg1, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.Events.UnityEvent`2
Наследуется от: UnityEventBase
Поля:
  Object[] m_InvokeArray
Свойства:
Методы:
  void .ctor()
  void AddListener(UnityAction`2<T0, T1> call)
  void RemoveListener(UnityAction`2<T0, T1> call)
  MethodInfo FindMethod_Impl(string name, Type targetObjType)
  BaseInvokableCall GetDelegate(object target, MethodInfo theFunction)
  BaseInvokableCall GetDelegate(UnityAction`2<T0, T1> action)
  void Invoke(T0 arg0, T1 arg1)
--------------------------------------------------
Класс: UnityEngine.Events.UnityAction`3
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T0 arg0, T1 arg1, T2 arg2)
  IAsyncResult BeginInvoke(T0 arg0, T1 arg1, T2 arg2, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.Events.UnityEvent`3
Наследуется от: UnityEventBase
Поля:
  Object[] m_InvokeArray
Свойства:
Методы:
  void .ctor()
  void AddListener(UnityAction`3<T0, T1, T2> call)
  void RemoveListener(UnityAction`3<T0, T1, T2> call)
  MethodInfo FindMethod_Impl(string name, Type targetObjType)
  BaseInvokableCall GetDelegate(object target, MethodInfo theFunction)
  BaseInvokableCall GetDelegate(UnityAction`3<T0, T1, T2> action)
  void Invoke(T0 arg0, T1 arg1, T2 arg2)
--------------------------------------------------
Класс: UnityEngine.Events.UnityAction`4
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
  IAsyncResult BeginInvoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: UnityEngine.Events.UnityEvent`4
Наследуется от: UnityEventBase
Поля:
  Object[] m_InvokeArray
Свойства:
Методы:
  void .ctor()
  void AddListener(UnityAction`4<T0, T1, T2, T3> call)
  void RemoveListener(UnityAction`4<T0, T1, T2, T3> call)
  MethodInfo FindMethod_Impl(string name, Type targetObjType)
  BaseInvokableCall GetDelegate(object target, MethodInfo theFunction)
  BaseInvokableCall GetDelegate(UnityAction`4<T0, T1, T2, T3> action)
  void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
--------------------------------------------------
Класс: UnityEngine.Serialization.FormerlySerializedAsAttribute
Наследуется от: Attribute
Поля:
  string m_oldName
Свойства:
  string oldName
Методы:
  void .ctor(string oldName)
  string get_oldName()
--------------------------------------------------
Класс: UnityEngine.Serialization.UnitySurrogateSelector
Наследуется от: object
Поля:
Свойства:
Методы:
  ISerializationSurrogate GetSurrogate(Type type, StreamingContext context, ISurrogateSelector& selector)
  void ChainSelector(ISurrogateSelector selector)
  ISurrogateSelector GetNextSelector()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Serialization.ListSerializationSurrogate
Наследуется от: object
Поля:
  ISerializationSurrogate Default
Свойства:
Методы:
  void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
  object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
  Array ArrayFromGenericList(IList list)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Serialization.DictionarySerializationSurrogate`2
Наследуется от: object
Поля:
Свойства:
Методы:
  void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
  object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Search.SearchViewFlags
Наследуется от: Enum
Поля:
  int value__
  SearchViewFlags None
  SearchViewFlags Debug
  SearchViewFlags NoIndexing
  SearchViewFlags Packages
  SearchViewFlags OpenLeftSidePanel
  SearchViewFlags OpenInspectorPreview
  SearchViewFlags Centered
  SearchViewFlags HideSearchBar
  SearchViewFlags CompactView
  SearchViewFlags ListView
  SearchViewFlags GridView
  SearchViewFlags TableView
  SearchViewFlags EnableSearchQuery
  SearchViewFlags DisableInspectorPreview
  SearchViewFlags DisableSavedSearchQuery
  SearchViewFlags OpenInBuilderMode
  SearchViewFlags OpenInTextMode
  SearchViewFlags DisableBuilderModeToggle
  SearchViewFlags Borderless
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Search.SearchContextAttribute
Наследуется от: PropertyAttribute
Поля:
  string <query>k__BackingField
  String[] <providerIds>k__BackingField
  Type[] <instantiableProviders>k__BackingField
  SearchViewFlags <flags>k__BackingField
Свойства:
  string query
  String[] providerIds
  Type[] instantiableProviders
  SearchViewFlags flags
Методы:
  string get_query()
  void set_query(string value)
  String[] get_providerIds()
  void set_providerIds(String[] value)
  Type[] get_instantiableProviders()
  void set_instantiableProviders(Type[] value)
  SearchViewFlags get_flags()
  void set_flags(SearchViewFlags value)
  void .ctor(string query)
  void .ctor(string query, SearchViewFlags flags)
  void .ctor(string query, string providerIdsCommaSeparated)
  void .ctor(string query, string providerIdsCommaSeparated, SearchViewFlags flags)
  void .ctor(string query, Type[] instantiableProviders)
  void .ctor(string query, SearchViewFlags flags, Type[] instantiableProviders)
  void .ctor(string query, SearchViewFlags flags, string providerIdsCommaSeparated, Type[] instantiableProviders)
--------------------------------------------------
Класс: UnityEngine.SearchService.ObjectSelectorHandlerWithLabelsAttribute
Наследуется от: Attribute
Поля:
  String[] <labels>k__BackingField
  bool <matchAll>k__BackingField
Свойства:
  String[] labels
  bool matchAll
Методы:
  String[] get_labels()
  bool get_matchAll()
  void .ctor(String[] labels)
  void .ctor(bool matchAll, String[] labels)
--------------------------------------------------
Класс: UnityEngine.SearchService.ObjectSelectorHandlerWithTagsAttribute
Наследуется от: Attribute
Поля:
  String[] <tags>k__BackingField
Свойства:
  String[] tags
Методы:
  String[] get_tags()
  void .ctor(String[] tags)
--------------------------------------------------
Класс: UnityEngine.Scripting.AlwaysLinkAssemblyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Scripting.GarbageCollector
Наследуется от: object
Поля:
  Action`1<Mode> GCModeChanged
Свойства:
  Mode GCMode
  bool isIncremental
  ulong incrementalTimeSliceNanoseconds
Методы:
  void add_GCModeChanged(Action`1<Mode> value)
  void remove_GCModeChanged(Action`1<Mode> value)
  Mode get_GCMode()
  void set_GCMode(Mode value)
  void SetMode(Mode mode)
  Mode GetMode()
  bool get_isIncremental()
  ulong get_incrementalTimeSliceNanoseconds()
  void set_incrementalTimeSliceNanoseconds(ulong value)
  bool CollectIncremental(ulong nanoseconds)
--------------------------------------------------
Класс: UnityEngine.Scripting.PreserveAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Scripting.RequireAttributeUsagesAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Scripting.RequireDerivedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Scripting.RequiredInterfaceAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(Type interfaceType)
--------------------------------------------------
Класс: UnityEngine.Scripting.RequiredMemberAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Scripting.RequireImplementorsAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Scripting.APIUpdating.MovedFromAttributeData
Наследуется от: ValueType
Поля:
  string className
  string nameSpace
  string assembly
  bool classHasChanged
  bool nameSpaceHasChanged
  bool assemblyHasChanged
  bool autoUdpateAPI
Свойства:
Методы:
  void Set(bool autoUpdateAPI, string sourceNamespace, string sourceAssembly, string sourceClassName)
--------------------------------------------------
Класс: UnityEngine.Scripting.APIUpdating.MovedFromAttribute
Наследуется от: Attribute
Поля:
  MovedFromAttributeData data
Свойства:
  bool AffectsAPIUpdater
  bool IsInDifferentAssembly
Методы:
  void .ctor(bool autoUpdateAPI, string sourceNamespace, string sourceAssembly, string sourceClassName)
  void .ctor(string sourceNamespace)
  bool get_AffectsAPIUpdater()
  bool get_IsInDifferentAssembly()
--------------------------------------------------
Класс: UnityEngine.SceneManagement.Scene
Наследуется от: ValueType
Поля:
  int m_Handle
Свойства:
  int handle
  LoadingState loadingState
  string guid
  string path
  string name
  bool isLoaded
  int buildIndex
  bool isDirty
  int dirtyID
  int rootCount
  bool isSubScene
Методы:
  bool IsValidInternal(int sceneHandle)
  string GetPathInternal(int sceneHandle)
  string GetNameInternal(int sceneHandle)
  void SetNameInternal(int sceneHandle, string name)
  string GetGUIDInternal(int sceneHandle)
  bool IsSubScene(int sceneHandle)
  void SetIsSubScene(int sceneHandle, bool value)
  bool GetIsLoadedInternal(int sceneHandle)
  LoadingState GetLoadingStateInternal(int sceneHandle)
  bool GetIsDirtyInternal(int sceneHandle)
  int GetDirtyID(int sceneHandle)
  int GetBuildIndexInternal(int sceneHandle)
  int GetRootCountInternal(int sceneHandle)
  void GetRootGameObjectsInternal(int sceneHandle, object resultRootList)
  void .ctor(int handle)
  int get_handle()
  LoadingState get_loadingState()
  string get_guid()
  bool IsValid()
  string get_path()
  string get_name()
  void set_name(string value)
  bool get_isLoaded()
  int get_buildIndex()
  bool get_isDirty()
  int get_dirtyID()
  int get_rootCount()
  bool get_isSubScene()
  void set_isSubScene(bool value)
  GameObject[] GetRootGameObjects()
  void GetRootGameObjects(List`1<GameObject> rootGameObjects)
  bool op_Equality(Scene lhs, Scene rhs)
  bool op_Inequality(Scene lhs, Scene rhs)
  int GetHashCode()
  bool Equals(object other)
--------------------------------------------------
Класс: UnityEngine.SceneManagement.SceneManagerAPIInternal
Наследуется от: object
Поля:
Свойства:
Методы:
  int GetNumScenesInBuildSettings()
  Scene GetSceneByBuildIndex(int buildIndex)
  AsyncOperation LoadSceneAsyncNameIndexInternal(string sceneName, int sceneBuildIndex, LoadSceneParameters parameters, bool mustCompleteNextFrame)
  AsyncOperation UnloadSceneNameIndexInternal(string sceneName, int sceneBuildIndex, bool immediately, UnloadSceneOptions options, Boolean& outSuccess)
  void GetSceneByBuildIndex_Injected(int buildIndex, Scene& ret)
  AsyncOperation LoadSceneAsyncNameIndexInternal_Injected(string sceneName, int sceneBuildIndex, LoadSceneParameters& parameters, bool mustCompleteNextFrame)
--------------------------------------------------
Класс: UnityEngine.SceneManagement.SceneManagerAPI
Наследуется от: object
Поля:
  SceneManagerAPI s_DefaultAPI
  SceneManagerAPI <overrideAPI>k__BackingField
Свойства:
  SceneManagerAPI ActiveAPI
  SceneManagerAPI overrideAPI
Методы:
  SceneManagerAPI get_ActiveAPI()
  SceneManagerAPI get_overrideAPI()
  void set_overrideAPI(SceneManagerAPI value)
  void .ctor()
  int GetNumScenesInBuildSettings()
  Scene GetSceneByBuildIndex(int buildIndex)
  AsyncOperation LoadSceneAsyncByNameOrIndex(string sceneName, int sceneBuildIndex, LoadSceneParameters parameters, bool mustCompleteNextFrame)
  AsyncOperation UnloadSceneAsyncByNameOrIndex(string sceneName, int sceneBuildIndex, bool immediately, UnloadSceneOptions options, Boolean& outSuccess)
  AsyncOperation LoadFirstScene(bool mustLoadAsync)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.SceneManagement.SceneManager
Наследуется от: object
Поля:
  bool s_AllowLoadScene
  UnityAction`2<Scene, LoadSceneMode> sceneLoaded
  UnityAction`1<Scene> sceneUnloaded
  UnityAction`2<Scene, Scene> activeSceneChanged
Свойства:
  int sceneCount
  int sceneCountInBuildSettings
Методы:
  int get_sceneCount()
  int get_sceneCountInBuildSettings()
  Scene GetActiveScene()
  bool SetActiveScene(Scene scene)
  Scene GetSceneByPath(string scenePath)
  Scene GetSceneByName(string name)
  Scene GetSceneByBuildIndex(int buildIndex)
  Scene GetSceneAt(int index)
  Scene CreateScene(string sceneName, CreateSceneParameters parameters)
  bool UnloadSceneInternal(Scene scene, UnloadSceneOptions options)
  AsyncOperation UnloadSceneAsyncInternal(Scene scene, UnloadSceneOptions options)
  AsyncOperation LoadSceneAsyncNameIndexInternal(string sceneName, int sceneBuildIndex, LoadSceneParameters parameters, bool mustCompleteNextFrame)
  AsyncOperation UnloadSceneNameIndexInternal(string sceneName, int sceneBuildIndex, bool immediately, UnloadSceneOptions options, Boolean& outSuccess)
  void MergeScenes(Scene sourceScene, Scene destinationScene)
  void MoveGameObjectToScene(GameObject go, Scene scene)
  AsyncOperation LoadFirstScene_Internal(bool async)
  void add_sceneLoaded(UnityAction`2<Scene, LoadSceneMode> value)
  void remove_sceneLoaded(UnityAction`2<Scene, LoadSceneMode> value)
  void add_sceneUnloaded(UnityAction`1<Scene> value)
  void remove_sceneUnloaded(UnityAction`1<Scene> value)
  void add_activeSceneChanged(UnityAction`2<Scene, Scene> value)
  void remove_activeSceneChanged(UnityAction`2<Scene, Scene> value)
  Scene[] GetAllScenes()
  Scene CreateScene(string sceneName)
  void LoadScene(string sceneName, LoadSceneMode mode)
  void LoadScene(string sceneName)
  Scene LoadScene(string sceneName, LoadSceneParameters parameters)
  void LoadScene(int sceneBuildIndex, LoadSceneMode mode)
  void LoadScene(int sceneBuildIndex)
  Scene LoadScene(int sceneBuildIndex, LoadSceneParameters parameters)
  AsyncOperation LoadSceneAsync(int sceneBuildIndex, LoadSceneMode mode)
  AsyncOperation LoadSceneAsync(int sceneBuildIndex)
  AsyncOperation LoadSceneAsync(int sceneBuildIndex, LoadSceneParameters parameters)
  AsyncOperation LoadSceneAsync(string sceneName, LoadSceneMode mode)
  AsyncOperation LoadSceneAsync(string sceneName)
  AsyncOperation LoadSceneAsync(string sceneName, LoadSceneParameters parameters)
  bool UnloadScene(Scene scene)
  bool UnloadScene(int sceneBuildIndex)
  bool UnloadScene(string sceneName)
  AsyncOperation UnloadSceneAsync(int sceneBuildIndex)
  AsyncOperation UnloadSceneAsync(string sceneName)
  AsyncOperation UnloadSceneAsync(Scene scene)
  AsyncOperation UnloadSceneAsync(int sceneBuildIndex, UnloadSceneOptions options)
  AsyncOperation UnloadSceneAsync(string sceneName, UnloadSceneOptions options)
  AsyncOperation UnloadSceneAsync(Scene scene, UnloadSceneOptions options)
  void Internal_SceneLoaded(Scene scene, LoadSceneMode mode)
  void Internal_SceneUnloaded(Scene scene)
  void Internal_ActiveSceneChanged(Scene previousActiveScene, Scene newActiveScene)
  void .ctor()
  void .cctor()
  void GetActiveScene_Injected(Scene& ret)
  bool SetActiveScene_Injected(Scene& scene)
  void GetSceneByPath_Injected(string scenePath, Scene& ret)
  void GetSceneByName_Injected(string name, Scene& ret)
  void GetSceneAt_Injected(int index, Scene& ret)
  void CreateScene_Injected(string sceneName, CreateSceneParameters& parameters, Scene& ret)
  bool UnloadSceneInternal_Injected(Scene& scene, UnloadSceneOptions options)
  AsyncOperation UnloadSceneAsyncInternal_Injected(Scene& scene, UnloadSceneOptions options)
  void MergeScenes_Injected(Scene& sourceScene, Scene& destinationScene)
  void MoveGameObjectToScene_Injected(GameObject go, Scene& scene)
--------------------------------------------------
Класс: UnityEngine.SceneManagement.LoadSceneMode
Наследуется от: Enum
Поля:
  int value__
  LoadSceneMode Single
  LoadSceneMode Additive
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SceneManagement.LocalPhysicsMode
Наследуется от: Enum
Поля:
  int value__
  LocalPhysicsMode None
  LocalPhysicsMode Physics2D
  LocalPhysicsMode Physics3D
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SceneManagement.LoadSceneParameters
Наследуется от: ValueType
Поля:
  LoadSceneMode m_LoadSceneMode
  LocalPhysicsMode m_LocalPhysicsMode
Свойства:
  LoadSceneMode loadSceneMode
  LocalPhysicsMode localPhysicsMode
Методы:
  LoadSceneMode get_loadSceneMode()
  void set_loadSceneMode(LoadSceneMode value)
  LocalPhysicsMode get_localPhysicsMode()
  void set_localPhysicsMode(LocalPhysicsMode value)
  void .ctor(LoadSceneMode mode)
  void .ctor(LoadSceneMode mode, LocalPhysicsMode physicsMode)
--------------------------------------------------
Класс: UnityEngine.SceneManagement.CreateSceneParameters
Наследуется от: ValueType
Поля:
  LocalPhysicsMode m_LocalPhysicsMode
Свойства:
  LocalPhysicsMode localPhysicsMode
Методы:
  LocalPhysicsMode get_localPhysicsMode()
  void set_localPhysicsMode(LocalPhysicsMode value)
  void .ctor(LocalPhysicsMode physicsMode)
--------------------------------------------------
Класс: UnityEngine.SceneManagement.UnloadSceneOptions
Наследуется от: Enum
Поля:
  int value__
  UnloadSceneOptions None
  UnloadSceneOptions UnloadAllEmbeddedSceneObjects
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.SceneManagement.SceneUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetScenePathByBuildIndex(int buildIndex)
  int GetBuildIndexByScenePath(string scenePath)
--------------------------------------------------
Класс: UnityEngine.LowLevel.PlayerLoopSystemInternal
Наследуется от: ValueType
Поля:
  Type type
  UpdateFunction updateDelegate
  IntPtr updateFunction
  IntPtr loopConditionFunction
  int numSubSystems
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.LowLevel.PlayerLoopSystem
Наследуется от: ValueType
Поля:
  Type type
  PlayerLoopSystem[] subSystemList
  UpdateFunction updateDelegate
  IntPtr updateFunction
  IntPtr loopConditionFunction
Свойства:
Методы:
  string ToString()
--------------------------------------------------
Класс: UnityEngine.LowLevel.PlayerLoop
Наследуется от: object
Поля:
Свойства:
Методы:
  PlayerLoopSystem GetDefaultPlayerLoop()
  PlayerLoopSystem GetCurrentPlayerLoop()
  void SetPlayerLoop(PlayerLoopSystem loop)
  int PlayerLoopSystemToInternal(PlayerLoopSystem sys, List`1& internalSys)
  PlayerLoopSystem InternalToPlayerLoopSystem(PlayerLoopSystemInternal[] internalSys, Int32& offset)
  PlayerLoopSystemInternal[] GetDefaultPlayerLoopInternal()
  PlayerLoopSystemInternal[] GetCurrentPlayerLoopInternal()
  void SetPlayerLoopInternal(PlayerLoopSystemInternal[] loop)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.TimeUpdate
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.Initialization
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.EarlyUpdate
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.FixedUpdate
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.PreUpdate
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.Update
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.PreLateUpdate
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.PlayerLoop.PostLateUpdate
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Pool.CollectionPool`2
Наследуется от: object
Поля:
  ObjectPool`1<TCollection> s_Pool
Свойства:
Методы:
  TCollection Get()
  PooledObject`1<TCollection> Get(TCollection& value)
  void Release(TCollection toRelease)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Pool.ListPool`1
Наследуется от: CollectionPool`2<List`1<T>, T>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Pool.HashSetPool`1
Наследуется от: CollectionPool`2<HashSet`1<T>, T>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Pool.DictionaryPool`2
Наследуется от: CollectionPool`2<Dictionary`2<TKey, TValue>, KeyValuePair`2<TKey, TValue>>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Pool.GenericPool`1
Наследуется от: object
Поля:
  ObjectPool`1<T> s_Pool
Свойства:
Методы:
  T Get()
  PooledObject`1<T> Get(T& value)
  void Release(T toRelease)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Pool.IObjectPool`1
Поля:
Свойства:
  int CountInactive
Методы:
  int get_CountInactive()
  T Get()
  PooledObject`1<T> Get(T& v)
  void Release(T element)
  void Clear()
--------------------------------------------------
Класс: UnityEngine.Pool.LinkedPool`1
Наследуется от: object
Поля:
  Func`1<T> m_CreateFunc
  Action`1<T> m_ActionOnGet
  Action`1<T> m_ActionOnRelease
  Action`1<T> m_ActionOnDestroy
  int m_Limit
  LinkedPoolItem<T> m_PoolFirst
  LinkedPoolItem<T> m_NextAvailableListItem
  bool m_CollectionCheck
  int <CountInactive>k__BackingField
Свойства:
  int CountInactive
Методы:
  void .ctor(Func`1<T> createFunc, Action`1<T> actionOnGet, Action`1<T> actionOnRelease, Action`1<T> actionOnDestroy, bool collectionCheck, int maxSize)
  int get_CountInactive()
  void set_CountInactive(int value)
  T Get()
  PooledObject`1<T> Get(T& v)
  void Release(T item)
  void Clear()
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.Pool.ObjectPool`1
Наследуется от: object
Поля:
  List`1<T> m_List
  Func`1<T> m_CreateFunc
  Action`1<T> m_ActionOnGet
  Action`1<T> m_ActionOnRelease
  Action`1<T> m_ActionOnDestroy
  int m_MaxSize
  bool m_CollectionCheck
  int <CountAll>k__BackingField
Свойства:
  int CountAll
  int CountActive
  int CountInactive
Методы:
  int get_CountAll()
  void set_CountAll(int value)
  int get_CountActive()
  int get_CountInactive()
  void .ctor(Func`1<T> createFunc, Action`1<T> actionOnGet, Action`1<T> actionOnRelease, Action`1<T> actionOnDestroy, bool collectionCheck, int defaultCapacity, int maxSize)
  T Get()
  PooledObject`1<T> Get(T& v)
  void Release(T element)
  void Clear()
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.Pool.PooledObject`1
Наследуется от: ValueType
Поля:
  T m_ToReturn
  IObjectPool`1<T> m_Pool
Свойства:
Методы:
  void .ctor(T value, IObjectPool`1<T> pool)
  void System.IDisposable.Dispose()
--------------------------------------------------
Класс: UnityEngine.Pool.UnsafeGenericPool`1
Наследуется от: object
Поля:
  ObjectPool`1<T> s_Pool
Свойства:
Методы:
  T Get()
  PooledObject`1<T> Get(T& value)
  void Release(T toRelease)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Networking.PlayerConnection.ConnectionTarget
Наследуется от: Enum
Поля:
  int value__
  ConnectionTarget None
  ConnectionTarget Player
  ConnectionTarget Editor
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Networking.PlayerConnection.IConnectionState
Поля:
Свойства:
  ConnectionTarget connectedToTarget
  string connectionName
Методы:
  ConnectionTarget get_connectedToTarget()
  string get_connectionName()
--------------------------------------------------
Класс: UnityEngine.Networking.PlayerConnection.MessageEventArgs
Наследуется от: object
Поля:
  int playerId
  Byte[] data
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Networking.PlayerConnection.IEditorPlayerConnection
Поля:
Свойства:
Методы:
  void Register(Guid messageId, UnityAction`1<MessageEventArgs> callback)
  void Unregister(Guid messageId, UnityAction`1<MessageEventArgs> callback)
  void DisconnectAll()
  void RegisterConnection(UnityAction`1<int> callback)
  void RegisterDisconnection(UnityAction`1<int> callback)
  void UnregisterConnection(UnityAction`1<int> callback)
  void UnregisterDisconnection(UnityAction`1<int> callback)
  void Send(Guid messageId, Byte[] data)
  bool TrySend(Guid messageId, Byte[] data)
--------------------------------------------------
Класс: UnityEngine.Networking.PlayerConnection.PlayerConnection
Наследуется от: ScriptableObject
Поля:
  IPlayerEditorConnectionNative connectionNative
  PlayerEditorConnectionEvents m_PlayerEditorConnectionEvents
  List`1<int> m_connectedPlayers
  bool m_IsInitilized
  PlayerConnection s_Instance
Свойства:
  PlayerConnection instance
  bool isConnected
Методы:
  PlayerConnection get_instance()
  bool get_isConnected()
  PlayerConnection CreateInstance()
  void OnEnable()
  IPlayerEditorConnectionNative GetConnectionNativeApi()
  void Register(Guid messageId, UnityAction`1<MessageEventArgs> callback)
  void Unregister(Guid messageId, UnityAction`1<MessageEventArgs> callback)
  void RegisterConnection(UnityAction`1<int> callback)
  void RegisterDisconnection(UnityAction`1<int> callback)
  void UnregisterConnection(UnityAction`1<int> callback)
  void UnregisterDisconnection(UnityAction`1<int> callback)
  void Send(Guid messageId, Byte[] data)
  bool TrySend(Guid messageId, Byte[] data)
  bool BlockUntilRecvMsg(Guid messageId, int timeout)
  void DisconnectAll()
  void MessageCallbackInternal(IntPtr data, ulong size, ulong guid, string messageId)
  void ConnectedCallbackInternal(int playerId)
  void DisconnectedCallback(int playerId)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents
Наследуется от: object
Поля:
  List`1<MessageTypeSubscribers> messageTypeSubscribers
  ConnectionChangeEvent connectionEvent
  ConnectionChangeEvent disconnectionEvent
Свойства:
Методы:
  void InvokeMessageIdSubscribers(Guid messageId, Byte[] data, int playerId)
  UnityEvent`1<MessageEventArgs> AddAndCreate(Guid messageId)
  void UnregisterManagedCallback(Guid messageId, UnityAction`1<MessageEventArgs> callback)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Lumin.UsesLuminPlatformLevelAttribute
Наследуется от: Attribute
Поля:
  UInt32 m_PlatformLevel
Свойства:
  UInt32 platformLevel
Методы:
  void .ctor(UInt32 platformLevel)
  UInt32 get_platformLevel()
--------------------------------------------------
Класс: UnityEngine.Lumin.UsesLuminPrivilegeAttribute
Наследуется от: Attribute
Поля:
  string m_Privilege
Свойства:
  string privilege
Методы:
  void .ctor(string privilege)
  string get_privilege()
--------------------------------------------------
Класс: UnityEngine.Internal.DefaultValueAttribute
Наследуется от: Attribute
Поля:
  object DefaultValue
Свойства:
  object Value
Методы:
  void .ctor(string value)
  object get_Value()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.Internal.ExcludeFromDocsAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Internal.ISubAssetNotDuplicatable
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.AsyncGPUReadbackRequest
Наследуется от: ValueType
Поля:
  IntPtr m_Ptr
  int m_Version
Свойства:
  bool done
  bool hasError
  int layerCount
  int layerDataSize
  int width
  int height
  int depth
Методы:
  void Update()
  void WaitForCompletion()
  NativeArray`1<T> GetData(int layer)
  bool get_done()
  bool get_hasError()
  int get_layerCount()
  int get_layerDataSize()
  int get_width()
  int get_height()
  int get_depth()
  bool IsDone()
  bool HasError()
  int GetLayerCount()
  int GetLayerDataSize()
  int GetWidth()
  int GetHeight()
  int GetDepth()
  void SetScriptingCallback(Action`1<AsyncGPUReadbackRequest> callback)
  IntPtr GetDataRaw(int layer)
  void Update_Injected(AsyncGPUReadbackRequest& _unity_self)
  void WaitForCompletion_Injected(AsyncGPUReadbackRequest& _unity_self)
  bool IsDone_Injected(AsyncGPUReadbackRequest& _unity_self)
  bool HasError_Injected(AsyncGPUReadbackRequest& _unity_self)
  int GetLayerCount_Injected(AsyncGPUReadbackRequest& _unity_self)
  int GetLayerDataSize_Injected(AsyncGPUReadbackRequest& _unity_self)
  int GetWidth_Injected(AsyncGPUReadbackRequest& _unity_self)
  int GetHeight_Injected(AsyncGPUReadbackRequest& _unity_self)
  int GetDepth_Injected(AsyncGPUReadbackRequest& _unity_self)
  void SetScriptingCallback_Injected(AsyncGPUReadbackRequest& _unity_self, Action`1<AsyncGPUReadbackRequest> callback)
  IntPtr GetDataRaw_Injected(AsyncGPUReadbackRequest& _unity_self, int layer)
--------------------------------------------------
Класс: UnityEngine.Rendering.AsyncRequestNativeArrayData
Наследуется от: ValueType
Поля:
  Void* nativeArrayBuffer
  long lengthInBytes
Свойства:
Методы:
  AsyncRequestNativeArrayData CreateAndCheckAccess(NativeArray`1<T> array)
  AsyncRequestNativeArrayData CreateAndCheckAccess(NativeSlice`1<T> array)
--------------------------------------------------
Класс: UnityEngine.Rendering.AsyncGPUReadback
Наследуется от: object
Поля:
Свойства:
Методы:
  void ValidateFormat(Texture src, GraphicsFormat dstformat)
  void WaitAllRequests()
  AsyncGPUReadbackRequest Request(ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(Texture src, int mipIndex, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest RequestIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  AsyncGPUReadbackRequest Request_Internal_ComputeBuffer_1(ComputeBuffer buffer, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_ComputeBuffer_2(ComputeBuffer src, int size, int offset, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_GraphicsBuffer_1(GraphicsBuffer buffer, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_GraphicsBuffer_2(GraphicsBuffer src, int size, int offset, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_Texture_1(Texture src, int mipIndex, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_Texture_2(Texture src, int mipIndex, GraphicsFormat dstFormat, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_Texture_3(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, AsyncRequestNativeArrayData* data)
  AsyncGPUReadbackRequest Request_Internal_Texture_4(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, AsyncRequestNativeArrayData* data)
  void Request_Internal_ComputeBuffer_1_Injected(ComputeBuffer buffer, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_ComputeBuffer_2_Injected(ComputeBuffer src, int size, int offset, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_GraphicsBuffer_1_Injected(GraphicsBuffer buffer, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_GraphicsBuffer_2_Injected(GraphicsBuffer src, int size, int offset, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_Texture_1_Injected(Texture src, int mipIndex, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_Texture_2_Injected(Texture src, int mipIndex, GraphicsFormat dstFormat, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_Texture_3_Injected(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
  void Request_Internal_Texture_4_Injected(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, AsyncRequestNativeArrayData* data, AsyncGPUReadbackRequest& ret)
--------------------------------------------------
Класс: UnityEngine.Rendering.SynchronisationStage
Наследуется от: Enum
Поля:
  int value__
  SynchronisationStage VertexProcessing
  SynchronisationStage PixelProcessing
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.GPUFence
Наследуется от: ValueType
Поля:
Свойства:
  bool passed
Методы:
  bool get_passed()
--------------------------------------------------
Класс: UnityEngine.Rendering.PIX
Наследуется от: object
Поля:
Свойства:
Методы:
  void BeginGPUCapture()
  void EndGPUCapture()
  bool IsAttached()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderHardwareTier
Наследуется от: Enum
Поля:
  int value__
  ShaderHardwareTier Tier1
  ShaderHardwareTier Tier2
  ShaderHardwareTier Tier3
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.IndexFormat
Наследуется от: Enum
Поля:
  int value__
  IndexFormat UInt16
  IndexFormat UInt32
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.MeshUpdateFlags
Наследуется от: Enum
Поля:
  int value__
  MeshUpdateFlags Default
  MeshUpdateFlags DontValidateIndices
  MeshUpdateFlags DontResetBoneBounds
  MeshUpdateFlags DontNotifyMeshUsers
  MeshUpdateFlags DontRecalculateBounds
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.VertexAttributeFormat
Наследуется от: Enum
Поля:
  int value__
  VertexAttributeFormat Float32
  VertexAttributeFormat Float16
  VertexAttributeFormat UNorm8
  VertexAttributeFormat SNorm8
  VertexAttributeFormat UNorm16
  VertexAttributeFormat SNorm16
  VertexAttributeFormat UInt8
  VertexAttributeFormat SInt8
  VertexAttributeFormat UInt16
  VertexAttributeFormat SInt16
  VertexAttributeFormat UInt32
  VertexAttributeFormat SInt32
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.VertexAttribute
Наследуется от: Enum
Поля:
  int value__
  VertexAttribute Position
  VertexAttribute Normal
  VertexAttribute Tangent
  VertexAttribute Color
  VertexAttribute TexCoord0
  VertexAttribute TexCoord1
  VertexAttribute TexCoord2
  VertexAttribute TexCoord3
  VertexAttribute TexCoord4
  VertexAttribute TexCoord5
  VertexAttribute TexCoord6
  VertexAttribute TexCoord7
  VertexAttribute BlendWeight
  VertexAttribute BlendIndices
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderParamType
Наследуется от: Enum
Поля:
  int value__
  ShaderParamType Float
  ShaderParamType Int
  ShaderParamType Bool
  ShaderParamType Half
  ShaderParamType Short
  ShaderParamType UInt
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderConstantType
Наследуется от: Enum
Поля:
  int value__
  ShaderConstantType Vector
  ShaderConstantType Matrix
  ShaderConstantType Struct
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.OpaqueSortMode
Наследуется от: Enum
Поля:
  int value__
  OpaqueSortMode Default
  OpaqueSortMode FrontToBack
  OpaqueSortMode NoDistanceSort
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderQueue
Наследуется от: Enum
Поля:
  int value__
  RenderQueue Background
  RenderQueue Geometry
  RenderQueue AlphaTest
  RenderQueue GeometryLast
  RenderQueue Transparent
  RenderQueue Overlay
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderBufferLoadAction
Наследуется от: Enum
Поля:
  int value__
  RenderBufferLoadAction Load
  RenderBufferLoadAction Clear
  RenderBufferLoadAction DontCare
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderBufferStoreAction
Наследуется от: Enum
Поля:
  int value__
  RenderBufferStoreAction Store
  RenderBufferStoreAction Resolve
  RenderBufferStoreAction StoreAndResolve
  RenderBufferStoreAction DontCare
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.FastMemoryFlags
Наследуется от: Enum
Поля:
  int value__
  FastMemoryFlags None
  FastMemoryFlags SpillTop
  FastMemoryFlags SpillBottom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BlendMode
Наследуется от: Enum
Поля:
  int value__
  BlendMode Zero
  BlendMode One
  BlendMode DstColor
  BlendMode SrcColor
  BlendMode OneMinusDstColor
  BlendMode SrcAlpha
  BlendMode OneMinusSrcColor
  BlendMode DstAlpha
  BlendMode OneMinusDstAlpha
  BlendMode SrcAlphaSaturate
  BlendMode OneMinusSrcAlpha
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BlendOp
Наследуется от: Enum
Поля:
  int value__
  BlendOp Add
  BlendOp Subtract
  BlendOp ReverseSubtract
  BlendOp Min
  BlendOp Max
  BlendOp LogicalClear
  BlendOp LogicalSet
  BlendOp LogicalCopy
  BlendOp LogicalCopyInverted
  BlendOp LogicalNoop
  BlendOp LogicalInvert
  BlendOp LogicalAnd
  BlendOp LogicalNand
  BlendOp LogicalOr
  BlendOp LogicalNor
  BlendOp LogicalXor
  BlendOp LogicalEquivalence
  BlendOp LogicalAndReverse
  BlendOp LogicalAndInverted
  BlendOp LogicalOrReverse
  BlendOp LogicalOrInverted
  BlendOp Multiply
  BlendOp Screen
  BlendOp Overlay
  BlendOp Darken
  BlendOp Lighten
  BlendOp ColorDodge
  BlendOp ColorBurn
  BlendOp HardLight
  BlendOp SoftLight
  BlendOp Difference
  BlendOp Exclusion
  BlendOp HSLHue
  BlendOp HSLSaturation
  BlendOp HSLColor
  BlendOp HSLLuminosity
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CompareFunction
Наследуется от: Enum
Поля:
  int value__
  CompareFunction Disabled
  CompareFunction Never
  CompareFunction Less
  CompareFunction Equal
  CompareFunction LessEqual
  CompareFunction Greater
  CompareFunction NotEqual
  CompareFunction GreaterEqual
  CompareFunction Always
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CullMode
Наследуется от: Enum
Поля:
  int value__
  CullMode Off
  CullMode Front
  CullMode Back
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ColorWriteMask
Наследуется от: Enum
Поля:
  int value__
  ColorWriteMask Alpha
  ColorWriteMask Blue
  ColorWriteMask Green
  ColorWriteMask Red
  ColorWriteMask All
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.StencilOp
Наследуется от: Enum
Поля:
  int value__
  StencilOp Keep
  StencilOp Zero
  StencilOp Replace
  StencilOp IncrementSaturate
  StencilOp DecrementSaturate
  StencilOp Invert
  StencilOp IncrementWrap
  StencilOp DecrementWrap
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.AmbientMode
Наследуется от: Enum
Поля:
  int value__
  AmbientMode Skybox
  AmbientMode Trilight
  AmbientMode Flat
  AmbientMode Custom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.DefaultReflectionMode
Наследуется от: Enum
Поля:
  int value__
  DefaultReflectionMode Skybox
  DefaultReflectionMode Custom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionCubemapCompression
Наследуется от: Enum
Поля:
  int value__
  ReflectionCubemapCompression Uncompressed
  ReflectionCubemapCompression Compressed
  ReflectionCubemapCompression Auto
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CameraEvent
Наследуется от: Enum
Поля:
  int value__
  CameraEvent BeforeDepthTexture
  CameraEvent AfterDepthTexture
  CameraEvent BeforeDepthNormalsTexture
  CameraEvent AfterDepthNormalsTexture
  CameraEvent BeforeGBuffer
  CameraEvent AfterGBuffer
  CameraEvent BeforeLighting
  CameraEvent AfterLighting
  CameraEvent BeforeFinalPass
  CameraEvent AfterFinalPass
  CameraEvent BeforeForwardOpaque
  CameraEvent AfterForwardOpaque
  CameraEvent BeforeImageEffectsOpaque
  CameraEvent AfterImageEffectsOpaque
  CameraEvent BeforeSkybox
  CameraEvent AfterSkybox
  CameraEvent BeforeForwardAlpha
  CameraEvent AfterForwardAlpha
  CameraEvent BeforeImageEffects
  CameraEvent AfterImageEffects
  CameraEvent AfterEverything
  CameraEvent BeforeReflections
  CameraEvent AfterReflections
  CameraEvent BeforeHaloAndLensFlares
  CameraEvent AfterHaloAndLensFlares
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CameraEventUtils
Наследуется от: object
Поля:
  CameraEvent k_MinimumValue
  CameraEvent k_MaximumValue
Свойства:
Методы:
  bool IsValid(CameraEvent value)
--------------------------------------------------
Класс: UnityEngine.Rendering.LightEvent
Наследуется от: Enum
Поля:
  int value__
  LightEvent BeforeShadowMap
  LightEvent AfterShadowMap
  LightEvent BeforeScreenspaceMask
  LightEvent AfterScreenspaceMask
  LightEvent BeforeShadowMapPass
  LightEvent AfterShadowMapPass
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShadowMapPass
Наследуется от: Enum
Поля:
  int value__
  ShadowMapPass PointlightPositiveX
  ShadowMapPass PointlightNegativeX
  ShadowMapPass PointlightPositiveY
  ShadowMapPass PointlightNegativeY
  ShadowMapPass PointlightPositiveZ
  ShadowMapPass PointlightNegativeZ
  ShadowMapPass DirectionalCascade0
  ShadowMapPass DirectionalCascade1
  ShadowMapPass DirectionalCascade2
  ShadowMapPass DirectionalCascade3
  ShadowMapPass Spotlight
  ShadowMapPass Pointlight
  ShadowMapPass Directional
  ShadowMapPass All
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BuiltinRenderTextureType
Наследуется от: Enum
Поля:
  int value__
  BuiltinRenderTextureType PropertyName
  BuiltinRenderTextureType BufferPtr
  BuiltinRenderTextureType RenderTexture
  BuiltinRenderTextureType BindableTexture
  BuiltinRenderTextureType None
  BuiltinRenderTextureType CurrentActive
  BuiltinRenderTextureType CameraTarget
  BuiltinRenderTextureType Depth
  BuiltinRenderTextureType DepthNormals
  BuiltinRenderTextureType ResolvedDepth
  BuiltinRenderTextureType PrepassNormalsSpec
  BuiltinRenderTextureType PrepassLight
  BuiltinRenderTextureType PrepassLightSpec
  BuiltinRenderTextureType GBuffer0
  BuiltinRenderTextureType GBuffer1
  BuiltinRenderTextureType GBuffer2
  BuiltinRenderTextureType GBuffer3
  BuiltinRenderTextureType Reflections
  BuiltinRenderTextureType MotionVectors
  BuiltinRenderTextureType GBuffer4
  BuiltinRenderTextureType GBuffer5
  BuiltinRenderTextureType GBuffer6
  BuiltinRenderTextureType GBuffer7
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PassType
Наследуется от: Enum
Поля:
  int value__
  PassType Normal
  PassType Vertex
  PassType VertexLM
  PassType VertexLMRGBM
  PassType ForwardBase
  PassType ForwardAdd
  PassType LightPrePassBase
  PassType LightPrePassFinal
  PassType ShadowCaster
  PassType Deferred
  PassType Meta
  PassType MotionVectors
  PassType ScriptableRenderPipeline
  PassType ScriptableRenderPipelineDefaultUnlit
  PassType GrabPass
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShadowCastingMode
Наследуется от: Enum
Поля:
  int value__
  ShadowCastingMode Off
  ShadowCastingMode On
  ShadowCastingMode TwoSided
  ShadowCastingMode ShadowsOnly
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.LightShadowResolution
Наследуется от: Enum
Поля:
  int value__
  LightShadowResolution FromQualitySettings
  LightShadowResolution Low
  LightShadowResolution Medium
  LightShadowResolution High
  LightShadowResolution VeryHigh
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.GraphicsDeviceType
Наследуется от: Enum
Поля:
  int value__
  GraphicsDeviceType OpenGL2
  GraphicsDeviceType Direct3D9
  GraphicsDeviceType Direct3D11
  GraphicsDeviceType PlayStation3
  GraphicsDeviceType Null
  GraphicsDeviceType Xbox360
  GraphicsDeviceType OpenGLES2
  GraphicsDeviceType OpenGLES3
  GraphicsDeviceType PlayStationVita
  GraphicsDeviceType PlayStation4
  GraphicsDeviceType XboxOne
  GraphicsDeviceType PlayStationMobile
  GraphicsDeviceType Metal
  GraphicsDeviceType OpenGLCore
  GraphicsDeviceType Direct3D12
  GraphicsDeviceType N3DS
  GraphicsDeviceType Vulkan
  GraphicsDeviceType Switch
  GraphicsDeviceType XboxOneD3D12
  GraphicsDeviceType GameCoreXboxOne
  GraphicsDeviceType GameCoreScarlett
  GraphicsDeviceType GameCoreXboxSeries
  GraphicsDeviceType PlayStation5
  GraphicsDeviceType PlayStation5NGGC
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.GraphicsTier
Наследуется от: Enum
Поля:
  int value__
  GraphicsTier Tier1
  GraphicsTier Tier2
  GraphicsTier Tier3
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.SubMeshDescriptor
Наследуется от: ValueType
Поля:
  Bounds <bounds>k__BackingField
  MeshTopology <topology>k__BackingField
  int <indexStart>k__BackingField
  int <indexCount>k__BackingField
  int <baseVertex>k__BackingField
  int <firstVertex>k__BackingField
  int <vertexCount>k__BackingField
Свойства:
  Bounds bounds
  MeshTopology topology
  int indexStart
  int indexCount
  int baseVertex
  int firstVertex
  int vertexCount
Методы:
  void .ctor(int indexStart, int indexCount, MeshTopology topology)
  Bounds get_bounds()
  void set_bounds(Bounds value)
  MeshTopology get_topology()
  void set_topology(MeshTopology value)
  int get_indexStart()
  void set_indexStart(int value)
  int get_indexCount()
  void set_indexCount(int value)
  int get_baseVertex()
  void set_baseVertex(int value)
  int get_firstVertex()
  void set_firstVertex(int value)
  int get_vertexCount()
  void set_vertexCount(int value)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.Rendering.VertexAttributeDescriptor
Наследуется от: ValueType
Поля:
  VertexAttribute <attribute>k__BackingField
  VertexAttributeFormat <format>k__BackingField
  int <dimension>k__BackingField
  int <stream>k__BackingField
Свойства:
  VertexAttribute attribute
  VertexAttributeFormat format
  int dimension
  int stream
Методы:
  VertexAttribute get_attribute()
  void set_attribute(VertexAttribute value)
  VertexAttributeFormat get_format()
  void set_format(VertexAttributeFormat value)
  int get_dimension()
  void set_dimension(int value)
  int get_stream()
  void set_stream(int value)
  void .ctor(VertexAttribute attribute, VertexAttributeFormat format, int dimension, int stream)
  string ToString()
  int GetHashCode()
  bool Equals(object other)
  bool Equals(VertexAttributeDescriptor other)
  bool op_Equality(VertexAttributeDescriptor lhs, VertexAttributeDescriptor rhs)
  bool op_Inequality(VertexAttributeDescriptor lhs, VertexAttributeDescriptor rhs)
--------------------------------------------------
Класс: UnityEngine.Rendering.FormatSwizzle
Наследуется от: Enum
Поля:
  int value__
  FormatSwizzle FormatSwizzleR
  FormatSwizzle FormatSwizzleG
  FormatSwizzle FormatSwizzleB
  FormatSwizzle FormatSwizzleA
  FormatSwizzle FormatSwizzle0
  FormatSwizzle FormatSwizzle1
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderTargetIdentifier
Наследуется от: ValueType
Поля:
  int AllDepthSlices
  BuiltinRenderTextureType m_Type
  int m_NameID
  int m_InstanceID
  IntPtr m_BufferPointer
  int m_MipLevel
  CubemapFace m_CubeFace
  int m_DepthSlice
Свойства:
Методы:
  void .ctor(BuiltinRenderTextureType type)
  void .ctor(BuiltinRenderTextureType type, int mipLevel, CubemapFace cubeFace, int depthSlice)
  void .ctor(string name)
  void .ctor(string name, int mipLevel, CubemapFace cubeFace, int depthSlice)
  void .ctor(int nameID)
  void .ctor(int nameID, int mipLevel, CubemapFace cubeFace, int depthSlice)
  void .ctor(RenderTargetIdentifier renderTargetIdentifier, int mipLevel, CubemapFace cubeFace, int depthSlice)
  void .ctor(Texture tex)
  void .ctor(Texture tex, int mipLevel, CubemapFace cubeFace, int depthSlice)
  void .ctor(RenderBuffer buf, int mipLevel, CubemapFace cubeFace, int depthSlice)
  RenderTargetIdentifier op_Implicit(BuiltinRenderTextureType type)
  RenderTargetIdentifier op_Implicit(string name)
  RenderTargetIdentifier op_Implicit(int nameID)
  RenderTargetIdentifier op_Implicit(Texture tex)
  RenderTargetIdentifier op_Implicit(RenderBuffer buf)
  string ToString()
  int GetHashCode()
  bool Equals(RenderTargetIdentifier rhs)
  bool Equals(object obj)
  bool op_Equality(RenderTargetIdentifier lhs, RenderTargetIdentifier rhs)
  bool op_Inequality(RenderTargetIdentifier lhs, RenderTargetIdentifier rhs)
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderTargetFlags
Наследуется от: Enum
Поля:
  int value__
  RenderTargetFlags None
  RenderTargetFlags ReadOnlyDepth
  RenderTargetFlags ReadOnlyStencil
  RenderTargetFlags ReadOnlyDepthStencil
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderTargetBinding
Наследуется от: ValueType
Поля:
  RenderTargetIdentifier[] m_ColorRenderTargets
  RenderTargetIdentifier m_DepthRenderTarget
  RenderBufferLoadAction[] m_ColorLoadActions
  RenderBufferStoreAction[] m_ColorStoreActions
  RenderBufferLoadAction m_DepthLoadAction
  RenderBufferStoreAction m_DepthStoreAction
  RenderTargetFlags m_Flags
Свойства:
  RenderTargetIdentifier[] colorRenderTargets
  RenderTargetIdentifier depthRenderTarget
  RenderBufferLoadAction[] colorLoadActions
  RenderBufferStoreAction[] colorStoreActions
  RenderBufferLoadAction depthLoadAction
  RenderBufferStoreAction depthStoreAction
  RenderTargetFlags flags
Методы:
  RenderTargetIdentifier[] get_colorRenderTargets()
  void set_colorRenderTargets(RenderTargetIdentifier[] value)
  RenderTargetIdentifier get_depthRenderTarget()
  void set_depthRenderTarget(RenderTargetIdentifier value)
  RenderBufferLoadAction[] get_colorLoadActions()
  void set_colorLoadActions(RenderBufferLoadAction[] value)
  RenderBufferStoreAction[] get_colorStoreActions()
  void set_colorStoreActions(RenderBufferStoreAction[] value)
  RenderBufferLoadAction get_depthLoadAction()
  void set_depthLoadAction(RenderBufferLoadAction value)
  RenderBufferStoreAction get_depthStoreAction()
  void set_depthStoreAction(RenderBufferStoreAction value)
  RenderTargetFlags get_flags()
  void set_flags(RenderTargetFlags value)
  void .ctor(RenderTargetIdentifier[] colorRenderTargets, RenderBufferLoadAction[] colorLoadActions, RenderBufferStoreAction[] colorStoreActions, RenderTargetIdentifier depthRenderTarget, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void .ctor(RenderTargetIdentifier colorRenderTarget, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderTargetIdentifier depthRenderTarget, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void .ctor(RenderTargetSetup setup)
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeUsage
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeUsage Off
  ReflectionProbeUsage BlendProbes
  ReflectionProbeUsage BlendProbesAndSkybox
  ReflectionProbeUsage Simple
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeType
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeType Cube
  ReflectionProbeType Card
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeClearFlags
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeClearFlags Skybox
  ReflectionProbeClearFlags SolidColor
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeMode
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeMode Baked
  ReflectionProbeMode Realtime
  ReflectionProbeMode Custom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeBlendInfo
Наследуется от: ValueType
Поля:
  ReflectionProbe probe
  float weight
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeRefreshMode
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeRefreshMode OnAwake
  ReflectionProbeRefreshMode EveryFrame
  ReflectionProbeRefreshMode ViaScripting
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeTimeSlicingMode
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeTimeSlicingMode AllFacesAtOnce
  ReflectionProbeTimeSlicingMode IndividualFaces
  ReflectionProbeTimeSlicingMode NoTimeSlicing
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShadowSamplingMode
Наследуется от: Enum
Поля:
  int value__
  ShadowSamplingMode CompareDepths
  ShadowSamplingMode RawDepth
  ShadowSamplingMode None
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.LightProbeUsage
Наследуется от: Enum
Поля:
  int value__
  LightProbeUsage Off
  LightProbeUsage BlendProbes
  LightProbeUsage UseProxyVolume
  LightProbeUsage CustomProvided
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BuiltinShaderType
Наследуется от: Enum
Поля:
  int value__
  BuiltinShaderType DeferredShading
  BuiltinShaderType DeferredReflections
  BuiltinShaderType LegacyDeferredLighting
  BuiltinShaderType ScreenSpaceShadows
  BuiltinShaderType DepthNormals
  BuiltinShaderType MotionVectors
  BuiltinShaderType LightHalo
  BuiltinShaderType LensFlare
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BuiltinShaderMode
Наследуется от: Enum
Поля:
  int value__
  BuiltinShaderMode Disabled
  BuiltinShaderMode UseBuiltin
  BuiltinShaderMode UseCustom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BuiltinShaderDefine
Наследуется от: Enum
Поля:
  int value__
  BuiltinShaderDefine UNITY_NO_DXT5nm
  BuiltinShaderDefine UNITY_NO_RGBM
  BuiltinShaderDefine UNITY_USE_NATIVE_HDR
  BuiltinShaderDefine UNITY_ENABLE_REFLECTION_BUFFERS
  BuiltinShaderDefine UNITY_FRAMEBUFFER_FETCH_AVAILABLE
  BuiltinShaderDefine UNITY_ENABLE_NATIVE_SHADOW_LOOKUPS
  BuiltinShaderDefine UNITY_METAL_SHADOWS_USE_POINT_FILTERING
  BuiltinShaderDefine UNITY_NO_CUBEMAP_ARRAY
  BuiltinShaderDefine UNITY_NO_SCREENSPACE_SHADOWS
  BuiltinShaderDefine UNITY_USE_DITHER_MASK_FOR_ALPHABLENDED_SHADOWS
  BuiltinShaderDefine UNITY_PBS_USE_BRDF1
  BuiltinShaderDefine UNITY_PBS_USE_BRDF2
  BuiltinShaderDefine UNITY_PBS_USE_BRDF3
  BuiltinShaderDefine UNITY_NO_FULL_STANDARD_SHADER
  BuiltinShaderDefine UNITY_SPECCUBE_BOX_PROJECTION
  BuiltinShaderDefine UNITY_SPECCUBE_BLENDING
  BuiltinShaderDefine UNITY_ENABLE_DETAIL_NORMALMAP
  BuiltinShaderDefine SHADER_API_MOBILE
  BuiltinShaderDefine SHADER_API_DESKTOP
  BuiltinShaderDefine UNITY_HARDWARE_TIER1
  BuiltinShaderDefine UNITY_HARDWARE_TIER2
  BuiltinShaderDefine UNITY_HARDWARE_TIER3
  BuiltinShaderDefine UNITY_COLORSPACE_GAMMA
  BuiltinShaderDefine UNITY_LIGHT_PROBE_PROXY_VOLUME
  BuiltinShaderDefine UNITY_HALF_PRECISION_FRAGMENT_SHADER_REGISTERS
  BuiltinShaderDefine UNITY_LIGHTMAP_DLDR_ENCODING
  BuiltinShaderDefine UNITY_LIGHTMAP_RGBM_ENCODING
  BuiltinShaderDefine UNITY_LIGHTMAP_FULL_HDR
  BuiltinShaderDefine UNITY_VIRTUAL_TEXTURING
  BuiltinShaderDefine UNITY_PRETRANSFORM_TO_DISPLAY_ORIENTATION
  BuiltinShaderDefine UNITY_ASTC_NORMALMAP_ENCODING
  BuiltinShaderDefine SHADER_API_GLES30
  BuiltinShaderDefine UNITY_UNIFIED_SHADER_PRECISION_MODEL
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.VideoShadersIncludeMode
Наследуется от: Enum
Поля:
  int value__
  VideoShadersIncludeMode Never
  VideoShadersIncludeMode Referenced
  VideoShadersIncludeMode Always
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.TextureDimension
Наследуется от: Enum
Поля:
  int value__
  TextureDimension Unknown
  TextureDimension None
  TextureDimension Any
  TextureDimension Tex2D
  TextureDimension Tex3D
  TextureDimension Cube
  TextureDimension Tex2DArray
  TextureDimension CubeArray
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CopyTextureSupport
Наследуется от: Enum
Поля:
  int value__
  CopyTextureSupport None
  CopyTextureSupport Basic
  CopyTextureSupport Copy3D
  CopyTextureSupport DifferentTypes
  CopyTextureSupport TextureToRT
  CopyTextureSupport RTToTexture
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CameraHDRMode
Наследуется от: Enum
Поля:
  int value__
  CameraHDRMode FP16
  CameraHDRMode R11G11B10
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RealtimeGICPUUsage
Наследуется от: Enum
Поля:
  int value__
  RealtimeGICPUUsage Low
  RealtimeGICPUUsage Medium
  RealtimeGICPUUsage High
  RealtimeGICPUUsage Unlimited
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ComputeQueueType
Наследуется от: Enum
Поля:
  int value__
  ComputeQueueType Default
  ComputeQueueType Background
  ComputeQueueType Urgent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.SinglePassStereoMode
Наследуется от: Enum
Поля:
  int value__
  SinglePassStereoMode None
  SinglePassStereoMode SideBySide
  SinglePassStereoMode Instancing
  SinglePassStereoMode Multiview
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CommandBufferExecutionFlags
Наследуется от: Enum
Поля:
  int value__
  CommandBufferExecutionFlags None
  CommandBufferExecutionFlags AsyncCompute
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RTClearFlags
Наследуется от: Enum
Поля:
  int value__
  RTClearFlags None
  RTClearFlags Color
  RTClearFlags Depth
  RTClearFlags Stencil
  RTClearFlags All
  RTClearFlags DepthStencil
  RTClearFlags ColorDepth
  RTClearFlags ColorStencil
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderTextureSubElement
Наследуется от: Enum
Поля:
  int value__
  RenderTextureSubElement Color
  RenderTextureSubElement Depth
  RenderTextureSubElement Stencil
  RenderTextureSubElement Default
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderingThreadingMode
Наследуется от: Enum
Поля:
  int value__
  RenderingThreadingMode Direct
  RenderingThreadingMode SingleThreaded
  RenderingThreadingMode MultiThreaded
  RenderingThreadingMode LegacyJobified
  RenderingThreadingMode NativeGraphicsJobs
  RenderingThreadingMode NativeGraphicsJobsWithoutRenderThread
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.CameraLateLatchMatrixType
Наследуется от: Enum
Поля:
  int value__
  CameraLateLatchMatrixType View
  CameraLateLatchMatrixType InverseView
  CameraLateLatchMatrixType ViewProjection
  CameraLateLatchMatrixType InverseViewProjection
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.OpenGLESVersion
Наследуется от: Enum
Поля:
  int value__
  OpenGLESVersion None
  OpenGLESVersion OpenGLES20
  OpenGLESVersion OpenGLES30
  OpenGLESVersion OpenGLES31
  OpenGLESVersion OpenGLES31AEP
  OpenGLESVersion OpenGLES32
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.SynchronisationStageFlags
Наследуется от: Enum
Поля:
  int value__
  SynchronisationStageFlags VertexProcessing
  SynchronisationStageFlags PixelProcessing
  SynchronisationStageFlags ComputeProcessing
  SynchronisationStageFlags AllGPUOperations
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.GraphicsFenceType
Наследуется от: Enum
Поля:
  int value__
  GraphicsFenceType AsyncQueueSynchronisation
  GraphicsFenceType CPUSynchronisation
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.GraphicsFence
Наследуется от: ValueType
Поля:
  IntPtr m_Ptr
  int m_Version
  GraphicsFenceType m_FenceType
Свойства:
  bool passed
Методы:
  SynchronisationStageFlags TranslateSynchronizationStageToFlags(SynchronisationStage s)
  bool get_passed()
  bool HasFencePassed_Internal(IntPtr fencePtr)
  void InitPostAllocation()
  bool IsFencePending()
  void Validate()
  int GetPlatformNotSupportedVersion()
  int GetVersionNumber(IntPtr fencePtr)
--------------------------------------------------
Класс: UnityEngine.Rendering.GraphicsSettings
Наследуется от: Object
Поля:
Свойства:
  TransparencySortMode transparencySortMode
  Vector3 transparencySortAxis
  bool realtimeDirectRectangularAreaLights
  bool lightsUseLinearIntensity
  bool lightsUseColorTemperature
  UInt32 defaultRenderingLayerMask
  bool useScriptableRenderPipelineBatching
  bool logWhenShaderIsCompiled
  bool disableBuiltinCustomRenderTextureUpdate
  VideoShadersIncludeMode videoShadersIncludeMode
  ScriptableObject INTERNAL_currentRenderPipeline
  RenderPipelineAsset currentRenderPipeline
  RenderPipelineAsset renderPipelineAsset
  ScriptableObject INTERNAL_defaultRenderPipeline
  RenderPipelineAsset defaultRenderPipeline
  RenderPipelineAsset[] allConfiguredRenderPipelines
  bool cameraRelativeLightCulling
  bool cameraRelativeShadowCulling
Методы:
  void .ctor()
  TransparencySortMode get_transparencySortMode()
  void set_transparencySortMode(TransparencySortMode value)
  Vector3 get_transparencySortAxis()
  void set_transparencySortAxis(Vector3 value)
  bool get_realtimeDirectRectangularAreaLights()
  void set_realtimeDirectRectangularAreaLights(bool value)
  bool get_lightsUseLinearIntensity()
  void set_lightsUseLinearIntensity(bool value)
  bool get_lightsUseColorTemperature()
  void set_lightsUseColorTemperature(bool value)
  UInt32 get_defaultRenderingLayerMask()
  void set_defaultRenderingLayerMask(UInt32 value)
  bool get_useScriptableRenderPipelineBatching()
  void set_useScriptableRenderPipelineBatching(bool value)
  bool get_logWhenShaderIsCompiled()
  void set_logWhenShaderIsCompiled(bool value)
  bool get_disableBuiltinCustomRenderTextureUpdate()
  void set_disableBuiltinCustomRenderTextureUpdate(bool value)
  VideoShadersIncludeMode get_videoShadersIncludeMode()
  bool HasShaderDefine(GraphicsTier tier, BuiltinShaderDefine defineHash)
  bool HasShaderDefine(BuiltinShaderDefine defineHash)
  ScriptableObject get_INTERNAL_currentRenderPipeline()
  RenderPipelineAsset get_currentRenderPipeline()
  RenderPipelineAsset get_renderPipelineAsset()
  void set_renderPipelineAsset(RenderPipelineAsset value)
  ScriptableObject get_INTERNAL_defaultRenderPipeline()
  void set_INTERNAL_defaultRenderPipeline(ScriptableObject value)
  RenderPipelineAsset get_defaultRenderPipeline()
  void set_defaultRenderPipeline(RenderPipelineAsset value)
  ScriptableObject[] GetAllConfiguredRenderPipelines()
  RenderPipelineAsset[] get_allConfiguredRenderPipelines()
  Object GetGraphicsSettings()
  void SetShaderMode(BuiltinShaderType type, BuiltinShaderMode mode)
  BuiltinShaderMode GetShaderMode(BuiltinShaderType type)
  void SetCustomShader(BuiltinShaderType type, Shader shader)
  Shader GetCustomShader(BuiltinShaderType type)
  void RegisterRenderPipelineSettings(RenderPipelineGlobalSettings settings)
  void RegisterRenderPipeline(string renderpipelineName, Object settings)
  void UnregisterRenderPipelineSettings()
  void UnregisterRenderPipeline(string renderpipelineName)
  RenderPipelineGlobalSettings GetSettingsForRenderPipeline()
  Object GetSettingsForRenderPipeline(string renderpipelineName)
  bool get_cameraRelativeLightCulling()
  void set_cameraRelativeLightCulling(bool value)
  bool get_cameraRelativeShadowCulling()
  void set_cameraRelativeShadowCulling(bool value)
  void get_transparencySortAxis_Injected(Vector3& ret)
  void set_transparencySortAxis_Injected(Vector3& value)
--------------------------------------------------
Класс: UnityEngine.Rendering.OnDemandRendering
Наследуется от: object
Поля:
  int m_RenderFrameInterval
Свойства:
  bool willCurrentFrameRender
  int renderFrameInterval
  int effectiveRenderFrameRate
Методы:
  bool get_willCurrentFrameRender()
  int get_renderFrameInterval()
  void set_renderFrameInterval(int value)
  void GetRenderFrameInterval(Int32& frameInterval)
  float GetEffectiveRenderFrameRate()
  int get_effectiveRenderFrameRate()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.CommandBuffer
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
  string name
  int sizeInBytes
Методы:
  void ConvertTexture(RenderTargetIdentifier src, RenderTargetIdentifier dst)
  void ConvertTexture(RenderTargetIdentifier src, int srcElement, RenderTargetIdentifier dst, int dstElement)
  void WaitAllAsyncReadbackRequests()
  void RequestAsyncReadback(ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, int mipIndex, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadback(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeArray(NativeArray`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, TextureFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void RequestAsyncReadbackIntoNativeSlice(NativeSlice`1& output, Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback)
  void Internal_RequestAsyncReadback_1(ComputeBuffer src, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_2(ComputeBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_3(Texture src, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_4(Texture src, int mipIndex, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_5(Texture src, int mipIndex, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_6(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_7(Texture src, int mipIndex, int x, int width, int y, int height, int z, int depth, GraphicsFormat dstFormat, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_8(GraphicsBuffer src, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void Internal_RequestAsyncReadback_9(GraphicsBuffer src, int size, int offset, Action`1<AsyncGPUReadbackRequest> callback, AsyncRequestNativeArrayData* nativeArrayData)
  void SetInvertCulling(bool invertCulling)
  void ConvertTexture_Internal(RenderTargetIdentifier src, int srcElement, RenderTargetIdentifier dst, int dstElement)
  void Internal_SetSinglePassStereo(SinglePassStereoMode mode)
  IntPtr InitBuffer()
  IntPtr CreateGPUFence_Internal(GraphicsFenceType fenceType, SynchronisationStageFlags stage)
  void WaitOnGPUFence_Internal(IntPtr fencePtr, SynchronisationStageFlags stage)
  void ReleaseBuffer()
  void SetComputeFloatParam(ComputeShader computeShader, int nameID, float val)
  void SetComputeIntParam(ComputeShader computeShader, int nameID, int val)
  void SetComputeVectorParam(ComputeShader computeShader, int nameID, Vector4 val)
  void SetComputeVectorArrayParam(ComputeShader computeShader, int nameID, Vector4[] values)
  void SetComputeMatrixParam(ComputeShader computeShader, int nameID, Matrix4x4 val)
  void SetComputeMatrixArrayParam(ComputeShader computeShader, int nameID, Matrix4x4[] values)
  void Internal_SetComputeFloats(ComputeShader computeShader, int nameID, Single[] values)
  void Internal_SetComputeInts(ComputeShader computeShader, int nameID, Int32[] values)
  void Internal_SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, int nameID, RenderTargetIdentifier& rt, int mipLevel, RenderTextureSubElement element)
  void Internal_SetComputeBufferParam(ComputeShader computeShader, int kernelIndex, int nameID, ComputeBuffer buffer)
  void Internal_SetComputeGraphicsBufferParam(ComputeShader computeShader, int kernelIndex, int nameID, GraphicsBuffer buffer)
  void Internal_SetComputeConstantComputeBufferParam(ComputeShader computeShader, int nameID, ComputeBuffer buffer, int offset, int size)
  void Internal_SetComputeConstantGraphicsBufferParam(ComputeShader computeShader, int nameID, GraphicsBuffer buffer, int offset, int size)
  void Internal_DispatchCompute(ComputeShader computeShader, int kernelIndex, int threadGroupsX, int threadGroupsY, int threadGroupsZ)
  void Internal_DispatchComputeIndirect(ComputeShader computeShader, int kernelIndex, ComputeBuffer indirectBuffer, UInt32 argsOffset)
  void Internal_DispatchComputeIndirectGraphicsBuffer(ComputeShader computeShader, int kernelIndex, GraphicsBuffer indirectBuffer, UInt32 argsOffset)
  void Internal_SetRayTracingBufferParam(RayTracingShader rayTracingShader, int nameID, ComputeBuffer buffer)
  void Internal_SetRayTracingConstantComputeBufferParam(RayTracingShader rayTracingShader, int nameID, ComputeBuffer buffer, int offset, int size)
  void Internal_SetRayTracingConstantGraphicsBufferParam(RayTracingShader rayTracingShader, int nameID, GraphicsBuffer buffer, int offset, int size)
  void Internal_SetRayTracingTextureParam(RayTracingShader rayTracingShader, int nameID, RenderTargetIdentifier& rt)
  void Internal_SetRayTracingFloatParam(RayTracingShader rayTracingShader, int nameID, float val)
  void Internal_SetRayTracingIntParam(RayTracingShader rayTracingShader, int nameID, int val)
  void Internal_SetRayTracingVectorParam(RayTracingShader rayTracingShader, int nameID, Vector4 val)
  void Internal_SetRayTracingVectorArrayParam(RayTracingShader rayTracingShader, int nameID, Vector4[] values)
  void Internal_SetRayTracingMatrixParam(RayTracingShader rayTracingShader, int nameID, Matrix4x4 val)
  void Internal_SetRayTracingMatrixArrayParam(RayTracingShader rayTracingShader, int nameID, Matrix4x4[] values)
  void Internal_SetRayTracingFloats(RayTracingShader rayTracingShader, int nameID, Single[] values)
  void Internal_SetRayTracingInts(RayTracingShader rayTracingShader, int nameID, Int32[] values)
  void Internal_BuildRayTracingAccelerationStructure(RayTracingAccelerationStructure accelerationStructure, Vector3 relativeOrigin)
  void Internal_SetRayTracingAccelerationStructure(RayTracingShader rayTracingShader, int nameID, RayTracingAccelerationStructure accelerationStructure)
  void SetRayTracingShaderPass(RayTracingShader rayTracingShader, string passName)
  void Internal_DispatchRays(RayTracingShader rayTracingShader, string rayGenShaderName, UInt32 width, UInt32 height, UInt32 depth, Camera camera)
  void Internal_GenerateMips(RenderTargetIdentifier rt)
  void Internal_ResolveAntiAliasedSurface(RenderTexture rt, RenderTexture target)
  void CopyCounterValueCC(ComputeBuffer src, ComputeBuffer dst, UInt32 dstOffsetBytes)
  void CopyCounterValueGC(GraphicsBuffer src, ComputeBuffer dst, UInt32 dstOffsetBytes)
  void CopyCounterValueCG(ComputeBuffer src, GraphicsBuffer dst, UInt32 dstOffsetBytes)
  void CopyCounterValueGG(GraphicsBuffer src, GraphicsBuffer dst, UInt32 dstOffsetBytes)
  string get_name()
  void set_name(string value)
  int get_sizeInBytes()
  void Clear()
  void Internal_DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int submeshIndex, int shaderPass, MaterialPropertyBlock properties)
  void Internal_DrawRenderer(Renderer renderer, Material material, int submeshIndex, int shaderPass)
  void Internal_DrawRendererList(RendererList rendererList)
  void Internal_DrawRenderer(Renderer renderer, Material material, int submeshIndex)
  void Internal_DrawRenderer(Renderer renderer, Material material)
  void Internal_DrawProcedural(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int vertexCount, int instanceCount, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndexed(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int indexCount, int instanceCount, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndexedIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndirectGraphicsBuffer(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndexedIndirectGraphicsBuffer(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, int shaderPass, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties)
  void Internal_DrawMeshInstancedProcedural(Mesh mesh, int submeshIndex, Material material, int shaderPass, int count, MaterialPropertyBlock properties)
  void Internal_DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawMeshInstancedIndirectGraphicsBuffer(Mesh mesh, int submeshIndex, Material material, int shaderPass, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawOcclusionMesh(RectInt normalizedCamViewport)
  void SetRandomWriteTarget_Texture(int index, RenderTargetIdentifier& rt)
  void SetRandomWriteTarget_Buffer(int index, ComputeBuffer uav, bool preserveCounterValue)
  void SetRandomWriteTarget_GraphicsBuffer(int index, GraphicsBuffer uav, bool preserveCounterValue)
  void ClearRandomWriteTargets()
  void SetViewport(Rect pixelRect)
  void EnableScissorRect(Rect scissor)
  void DisableScissorRect()
  void CopyTexture_Internal(RenderTargetIdentifier& src, int srcElement, int srcMip, int srcX, int srcY, int srcWidth, int srcHeight, RenderTargetIdentifier& dst, int dstElement, int dstMip, int dstX, int dstY, int mode)
  void Blit_Texture(Texture source, RenderTargetIdentifier& dest, Material mat, int pass, Vector2 scale, Vector2 offset, int sourceDepthSlice, int destDepthSlice)
  void Blit_Identifier(RenderTargetIdentifier& source, RenderTargetIdentifier& dest, Material mat, int pass, Vector2 scale, Vector2 offset, int sourceDepthSlice, int destDepthSlice)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing, bool enableRandomWrite, RenderTextureMemoryless memorylessMode, bool useDynamicScale)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing, bool enableRandomWrite, RenderTextureMemoryless memorylessMode)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing, bool enableRandomWrite)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, GraphicsFormat format)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, bool enableRandomWrite, RenderTextureMemoryless memorylessMode, bool useDynamicScale)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, bool enableRandomWrite, RenderTextureMemoryless memorylessMode)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, bool enableRandomWrite)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter, RenderTextureFormat format)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer, FilterMode filter)
  void GetTemporaryRT(int nameID, int width, int height, int depthBuffer)
  void GetTemporaryRT(int nameID, int width, int height)
  void GetTemporaryRTWithDescriptor(int nameID, RenderTextureDescriptor desc, FilterMode filter)
  void GetTemporaryRT(int nameID, RenderTextureDescriptor desc, FilterMode filter)
  void GetTemporaryRT(int nameID, RenderTextureDescriptor desc)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing, bool enableRandomWrite, bool useDynamicScale)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing, bool enableRandomWrite)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, GraphicsFormat format, int antiAliasing)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, GraphicsFormat format)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing, bool enableRandomWrite)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite, int antiAliasing)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter, RenderTextureFormat format)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer, FilterMode filter)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices, int depthBuffer)
  void GetTemporaryRTArray(int nameID, int width, int height, int slices)
  void ReleaseTemporaryRT(int nameID)
  void ClearRenderTarget(RTClearFlags clearFlags, Color backgroundColor, float depth, UInt32 stencil)
  void ClearRenderTarget(bool clearDepth, bool clearColor, Color backgroundColor)
  void ClearRenderTarget(bool clearDepth, bool clearColor, Color backgroundColor, float depth)
  void SetGlobalFloat(int nameID, float value)
  void SetGlobalInt(int nameID, int value)
  void SetGlobalInteger(int nameID, int value)
  void SetGlobalVector(int nameID, Vector4 value)
  void SetGlobalColor(int nameID, Color value)
  void SetGlobalMatrix(int nameID, Matrix4x4 value)
  void EnableShaderKeyword(string keyword)
  void EnableGlobalKeyword(GlobalKeyword keyword)
  void EnableMaterialKeyword(Material material, LocalKeyword keyword)
  void EnableComputeKeyword(ComputeShader computeShader, LocalKeyword keyword)
  void EnableKeyword(GlobalKeyword& keyword)
  void EnableKeyword(Material material, LocalKeyword& keyword)
  void EnableKeyword(ComputeShader computeShader, LocalKeyword& keyword)
  void DisableShaderKeyword(string keyword)
  void DisableGlobalKeyword(GlobalKeyword keyword)
  void DisableMaterialKeyword(Material material, LocalKeyword keyword)
  void DisableComputeKeyword(ComputeShader computeShader, LocalKeyword keyword)
  void DisableKeyword(GlobalKeyword& keyword)
  void DisableKeyword(Material material, LocalKeyword& keyword)
  void DisableKeyword(ComputeShader computeShader, LocalKeyword& keyword)
  void SetGlobalKeyword(GlobalKeyword keyword, bool value)
  void SetMaterialKeyword(Material material, LocalKeyword keyword, bool value)
  void SetComputeKeyword(ComputeShader computeShader, LocalKeyword keyword, bool value)
  void SetKeyword(GlobalKeyword& keyword, bool value)
  void SetKeyword(Material material, LocalKeyword& keyword, bool value)
  void SetKeyword(ComputeShader computeShader, LocalKeyword& keyword, bool value)
  void SetViewMatrix(Matrix4x4 view)
  void SetProjectionMatrix(Matrix4x4 proj)
  void SetViewProjectionMatrices(Matrix4x4 view, Matrix4x4 proj)
  void SetGlobalDepthBias(float bias, float slopeBias)
  void SetExecutionFlags(CommandBufferExecutionFlags flags)
  bool ValidateAgainstExecutionFlags(CommandBufferExecutionFlags requiredFlags, CommandBufferExecutionFlags invalidFlags)
  void SetGlobalFloatArrayListImpl(int nameID, object values)
  void SetGlobalVectorArrayListImpl(int nameID, object values)
  void SetGlobalMatrixArrayListImpl(int nameID, object values)
  void SetGlobalFloatArray(int nameID, Single[] values)
  void SetGlobalVectorArray(int nameID, Vector4[] values)
  void SetGlobalMatrixArray(int nameID, Matrix4x4[] values)
  void SetLateLatchProjectionMatrices(Matrix4x4[] projectionMat)
  void MarkLateLatchMatrixShaderPropertyID(CameraLateLatchMatrixType matrixPropertyType, int shaderPropertyID)
  void UnmarkLateLatchMatrix(CameraLateLatchMatrixType matrixPropertyType)
  void SetGlobalTexture_Impl(int nameID, RenderTargetIdentifier& rt, RenderTextureSubElement element)
  void SetGlobalBufferInternal(int nameID, ComputeBuffer value)
  void SetGlobalGraphicsBufferInternal(int nameID, GraphicsBuffer value)
  void SetShadowSamplingMode_Impl(RenderTargetIdentifier& shadowmap, ShadowSamplingMode mode)
  void IssuePluginEventInternal(IntPtr callback, int eventID)
  void BeginSample(string name)
  void EndSample(string name)
  void BeginSample(CustomSampler sampler)
  void EndSample(CustomSampler sampler)
  void BeginSample_CustomSampler(CustomSampler sampler)
  void EndSample_CustomSampler(CustomSampler sampler)
  void IssuePluginEventAndDataInternal(IntPtr callback, int eventID, IntPtr data)
  void IssuePluginCustomBlitInternal(IntPtr callback, UInt32 command, RenderTargetIdentifier& source, RenderTargetIdentifier& dest, UInt32 commandParam, UInt32 commandFlags)
  void IssuePluginCustomTextureUpdateInternal(IntPtr callback, Texture targetTexture, UInt32 userData, bool useNewUnityRenderingExtTextureUpdateParamsV2)
  void SetGlobalConstantBufferInternal(ComputeBuffer buffer, int nameID, int offset, int size)
  void SetGlobalConstantGraphicsBufferInternal(GraphicsBuffer buffer, int nameID, int offset, int size)
  void IncrementUpdateCount(RenderTargetIdentifier dest)
  void SetInstanceMultiplier(UInt32 multiplier)
  void SetRenderTarget(RenderTargetIdentifier rt)
  void SetRenderTarget(RenderTargetIdentifier rt, RenderBufferLoadAction loadAction, RenderBufferStoreAction storeAction)
  void SetRenderTarget(RenderTargetIdentifier rt, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void SetRenderTarget(RenderTargetIdentifier rt, int mipLevel)
  void SetRenderTarget(RenderTargetIdentifier rt, int mipLevel, CubemapFace cubemapFace)
  void SetRenderTarget(RenderTargetIdentifier rt, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void SetRenderTarget(RenderTargetIdentifier color, RenderTargetIdentifier depth)
  void SetRenderTarget(RenderTargetIdentifier color, RenderTargetIdentifier depth, int mipLevel)
  void SetRenderTarget(RenderTargetIdentifier color, RenderTargetIdentifier depth, int mipLevel, CubemapFace cubemapFace)
  void SetRenderTarget(RenderTargetIdentifier color, RenderTargetIdentifier depth, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void SetRenderTarget(RenderTargetIdentifier color, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderTargetIdentifier depth, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void SetRenderTarget(RenderTargetIdentifier[] colors, RenderTargetIdentifier depth)
  void SetRenderTarget(RenderTargetIdentifier[] colors, RenderTargetIdentifier depth, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void SetRenderTarget(RenderTargetBinding binding, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void SetRenderTarget(RenderTargetBinding binding)
  void SetRenderTargetSingle_Internal(RenderTargetIdentifier rt, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void SetRenderTargetColorDepth_Internal(RenderTargetIdentifier color, RenderTargetIdentifier depth, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, RenderTargetFlags flags)
  void SetRenderTargetMulti_Internal(RenderTargetIdentifier[] colors, RenderTargetIdentifier depth, RenderBufferLoadAction[] colorLoadActions, RenderBufferStoreAction[] colorStoreActions, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, RenderTargetFlags flags)
  void SetRenderTargetColorDepthSubtarget(RenderTargetIdentifier color, RenderTargetIdentifier depth, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void SetRenderTargetMultiSubtarget(RenderTargetIdentifier[] colors, RenderTargetIdentifier depth, RenderBufferLoadAction[] colorLoadActions, RenderBufferStoreAction[] colorStoreActions, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void Internal_ProcessVTFeedback(RenderTargetIdentifier rt, IntPtr resolver, int slice, int x, int width, int y, int height, int mip)
  void SetBufferData(ComputeBuffer buffer, Array data)
  void SetBufferData(ComputeBuffer buffer, List`1<T> data)
  void SetBufferData(ComputeBuffer buffer, NativeArray`1<T> data)
  void SetBufferData(ComputeBuffer buffer, Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetBufferData(ComputeBuffer buffer, List`1<T> data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetBufferData(ComputeBuffer buffer, NativeArray`1<T> data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetBufferCounterValue(ComputeBuffer buffer, UInt32 counterValue)
  void InternalSetComputeBufferNativeData(ComputeBuffer buffer, IntPtr data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count, int elemSize)
  void InternalSetComputeBufferData(ComputeBuffer buffer, Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count, int elemSize)
  void InternalSetComputeBufferCounterValue(ComputeBuffer buffer, UInt32 counterValue)
  void SetBufferData(GraphicsBuffer buffer, Array data)
  void SetBufferData(GraphicsBuffer buffer, List`1<T> data)
  void SetBufferData(GraphicsBuffer buffer, NativeArray`1<T> data)
  void SetBufferData(GraphicsBuffer buffer, Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetBufferData(GraphicsBuffer buffer, List`1<T> data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetBufferData(GraphicsBuffer buffer, NativeArray`1<T> data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetBufferCounterValue(GraphicsBuffer buffer, UInt32 counterValue)
  void InternalSetGraphicsBufferNativeData(GraphicsBuffer buffer, IntPtr data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count, int elemSize)
  void InternalSetGraphicsBufferData(GraphicsBuffer buffer, Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count, int elemSize)
  void InternalSetGraphicsBufferCounterValue(GraphicsBuffer buffer, UInt32 counterValue)
  void CopyBufferImpl(GraphicsBuffer source, GraphicsBuffer dest)
  void Finalize()
  void Dispose()
  void Dispose(bool disposing)
  void .ctor()
  void Release()
  GraphicsFence CreateAsyncGraphicsFence()
  GraphicsFence CreateAsyncGraphicsFence(SynchronisationStage stage)
  GraphicsFence CreateGraphicsFence(GraphicsFenceType fenceType, SynchronisationStageFlags stage)
  void WaitOnAsyncGraphicsFence(GraphicsFence fence)
  void WaitOnAsyncGraphicsFence(GraphicsFence fence, SynchronisationStage stage)
  void WaitOnAsyncGraphicsFence(GraphicsFence fence, SynchronisationStageFlags stage)
  void SetComputeFloatParam(ComputeShader computeShader, string name, float val)
  void SetComputeIntParam(ComputeShader computeShader, string name, int val)
  void SetComputeVectorParam(ComputeShader computeShader, string name, Vector4 val)
  void SetComputeVectorArrayParam(ComputeShader computeShader, string name, Vector4[] values)
  void SetComputeMatrixParam(ComputeShader computeShader, string name, Matrix4x4 val)
  void SetComputeMatrixArrayParam(ComputeShader computeShader, string name, Matrix4x4[] values)
  void SetComputeFloatParams(ComputeShader computeShader, string name, Single[] values)
  void SetComputeFloatParams(ComputeShader computeShader, int nameID, Single[] values)
  void SetComputeIntParams(ComputeShader computeShader, string name, Int32[] values)
  void SetComputeIntParams(ComputeShader computeShader, int nameID, Int32[] values)
  void SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, string name, RenderTargetIdentifier rt)
  void SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, int nameID, RenderTargetIdentifier rt)
  void SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, string name, RenderTargetIdentifier rt, int mipLevel)
  void SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, int nameID, RenderTargetIdentifier rt, int mipLevel)
  void SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, string name, RenderTargetIdentifier rt, int mipLevel, RenderTextureSubElement element)
  void SetComputeTextureParam(ComputeShader computeShader, int kernelIndex, int nameID, RenderTargetIdentifier rt, int mipLevel, RenderTextureSubElement element)
  void SetComputeBufferParam(ComputeShader computeShader, int kernelIndex, int nameID, ComputeBuffer buffer)
  void SetComputeBufferParam(ComputeShader computeShader, int kernelIndex, string name, ComputeBuffer buffer)
  void SetComputeBufferParam(ComputeShader computeShader, int kernelIndex, int nameID, GraphicsBuffer buffer)
  void SetComputeBufferParam(ComputeShader computeShader, int kernelIndex, string name, GraphicsBuffer buffer)
  void SetComputeConstantBufferParam(ComputeShader computeShader, int nameID, ComputeBuffer buffer, int offset, int size)
  void SetComputeConstantBufferParam(ComputeShader computeShader, string name, ComputeBuffer buffer, int offset, int size)
  void SetComputeConstantBufferParam(ComputeShader computeShader, int nameID, GraphicsBuffer buffer, int offset, int size)
  void SetComputeConstantBufferParam(ComputeShader computeShader, string name, GraphicsBuffer buffer, int offset, int size)
  void DispatchCompute(ComputeShader computeShader, int kernelIndex, int threadGroupsX, int threadGroupsY, int threadGroupsZ)
  void DispatchCompute(ComputeShader computeShader, int kernelIndex, ComputeBuffer indirectBuffer, UInt32 argsOffset)
  void DispatchCompute(ComputeShader computeShader, int kernelIndex, GraphicsBuffer indirectBuffer, UInt32 argsOffset)
  void BuildRayTracingAccelerationStructure(RayTracingAccelerationStructure accelerationStructure)
  void BuildRayTracingAccelerationStructure(RayTracingAccelerationStructure accelerationStructure, Vector3 relativeOrigin)
  void SetRayTracingAccelerationStructure(RayTracingShader rayTracingShader, string name, RayTracingAccelerationStructure rayTracingAccelerationStructure)
  void SetRayTracingAccelerationStructure(RayTracingShader rayTracingShader, int nameID, RayTracingAccelerationStructure rayTracingAccelerationStructure)
  void SetRayTracingBufferParam(RayTracingShader rayTracingShader, string name, ComputeBuffer buffer)
  void SetRayTracingBufferParam(RayTracingShader rayTracingShader, int nameID, ComputeBuffer buffer)
  void SetRayTracingConstantBufferParam(RayTracingShader rayTracingShader, int nameID, ComputeBuffer buffer, int offset, int size)
  void SetRayTracingConstantBufferParam(RayTracingShader rayTracingShader, string name, ComputeBuffer buffer, int offset, int size)
  void SetRayTracingConstantBufferParam(RayTracingShader rayTracingShader, int nameID, GraphicsBuffer buffer, int offset, int size)
  void SetRayTracingConstantBufferParam(RayTracingShader rayTracingShader, string name, GraphicsBuffer buffer, int offset, int size)
  void SetRayTracingTextureParam(RayTracingShader rayTracingShader, string name, RenderTargetIdentifier rt)
  void SetRayTracingTextureParam(RayTracingShader rayTracingShader, int nameID, RenderTargetIdentifier rt)
  void SetRayTracingFloatParam(RayTracingShader rayTracingShader, string name, float val)
  void SetRayTracingFloatParam(RayTracingShader rayTracingShader, int nameID, float val)
  void SetRayTracingFloatParams(RayTracingShader rayTracingShader, string name, Single[] values)
  void SetRayTracingFloatParams(RayTracingShader rayTracingShader, int nameID, Single[] values)
  void SetRayTracingIntParam(RayTracingShader rayTracingShader, string name, int val)
  void SetRayTracingIntParam(RayTracingShader rayTracingShader, int nameID, int val)
  void SetRayTracingIntParams(RayTracingShader rayTracingShader, string name, Int32[] values)
  void SetRayTracingIntParams(RayTracingShader rayTracingShader, int nameID, Int32[] values)
  void SetRayTracingVectorParam(RayTracingShader rayTracingShader, string name, Vector4 val)
  void SetRayTracingVectorParam(RayTracingShader rayTracingShader, int nameID, Vector4 val)
  void SetRayTracingVectorArrayParam(RayTracingShader rayTracingShader, string name, Vector4[] values)
  void SetRayTracingVectorArrayParam(RayTracingShader rayTracingShader, int nameID, Vector4[] values)
  void SetRayTracingMatrixParam(RayTracingShader rayTracingShader, string name, Matrix4x4 val)
  void SetRayTracingMatrixParam(RayTracingShader rayTracingShader, int nameID, Matrix4x4 val)
  void SetRayTracingMatrixArrayParam(RayTracingShader rayTracingShader, string name, Matrix4x4[] values)
  void SetRayTracingMatrixArrayParam(RayTracingShader rayTracingShader, int nameID, Matrix4x4[] values)
  void DispatchRays(RayTracingShader rayTracingShader, string rayGenName, UInt32 width, UInt32 height, UInt32 depth, Camera camera)
  void GenerateMips(RenderTargetIdentifier rt)
  void GenerateMips(RenderTexture rt)
  void ResolveAntiAliasedSurface(RenderTexture rt, RenderTexture target)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int submeshIndex, int shaderPass, MaterialPropertyBlock properties)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int submeshIndex, int shaderPass)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material, int submeshIndex)
  void DrawMesh(Mesh mesh, Matrix4x4 matrix, Material material)
  void DrawRenderer(Renderer renderer, Material material, int submeshIndex, int shaderPass)
  void DrawRenderer(Renderer renderer, Material material, int submeshIndex)
  void DrawRenderer(Renderer renderer, Material material)
  void DrawRendererList(RendererList rendererList)
  void DrawProcedural(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int vertexCount, int instanceCount, MaterialPropertyBlock properties)
  void DrawProcedural(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int vertexCount, int instanceCount)
  void DrawProcedural(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int vertexCount)
  void DrawProcedural(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int indexCount, int instanceCount, MaterialPropertyBlock properties)
  void DrawProcedural(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int indexCount, int instanceCount)
  void DrawProcedural(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, int indexCount)
  void DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs)
  void DrawProceduralIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void DrawProceduralIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs)
  void DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirect(Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs)
  void DrawProceduralIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void DrawProceduralIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset)
  void DrawProceduralIndirect(GraphicsBuffer indexBuffer, Matrix4x4 matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, int shaderPass, Matrix4x4[] matrices, int count, MaterialPropertyBlock properties)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, int shaderPass, Matrix4x4[] matrices, int count)
  void DrawMeshInstanced(Mesh mesh, int submeshIndex, Material material, int shaderPass, Matrix4x4[] matrices)
  void DrawMeshInstancedProcedural(Mesh mesh, int submeshIndex, Material material, int shaderPass, int count, MaterialPropertyBlock properties)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, ComputeBuffer bufferWithArgs, int argsOffset)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, ComputeBuffer bufferWithArgs)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, GraphicsBuffer bufferWithArgs, int argsOffset)
  void DrawMeshInstancedIndirect(Mesh mesh, int submeshIndex, Material material, int shaderPass, GraphicsBuffer bufferWithArgs)
  void DrawOcclusionMesh(RectInt normalizedCamViewport)
  void SetRandomWriteTarget(int index, RenderTargetIdentifier rt)
  void SetRandomWriteTarget(int index, ComputeBuffer buffer, bool preserveCounterValue)
  void SetRandomWriteTarget(int index, ComputeBuffer buffer)
  void SetRandomWriteTarget(int index, GraphicsBuffer buffer, bool preserveCounterValue)
  void SetRandomWriteTarget(int index, GraphicsBuffer buffer)
  void CopyCounterValue(ComputeBuffer src, ComputeBuffer dst, UInt32 dstOffsetBytes)
  void CopyCounterValue(GraphicsBuffer src, ComputeBuffer dst, UInt32 dstOffsetBytes)
  void CopyCounterValue(ComputeBuffer src, GraphicsBuffer dst, UInt32 dstOffsetBytes)
  void CopyCounterValue(GraphicsBuffer src, GraphicsBuffer dst, UInt32 dstOffsetBytes)
  void CopyTexture(RenderTargetIdentifier src, RenderTargetIdentifier dst)
  void CopyTexture(RenderTargetIdentifier src, int srcElement, RenderTargetIdentifier dst, int dstElement)
  void CopyTexture(RenderTargetIdentifier src, int srcElement, int srcMip, RenderTargetIdentifier dst, int dstElement, int dstMip)
  void CopyTexture(RenderTargetIdentifier src, int srcElement, int srcMip, int srcX, int srcY, int srcWidth, int srcHeight, RenderTargetIdentifier dst, int dstElement, int dstMip, int dstX, int dstY)
  void Blit(Texture source, RenderTargetIdentifier dest)
  void Blit(Texture source, RenderTargetIdentifier dest, Vector2 scale, Vector2 offset)
  void Blit(Texture source, RenderTargetIdentifier dest, Material mat)
  void Blit(Texture source, RenderTargetIdentifier dest, Material mat, int pass)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest, Vector2 scale, Vector2 offset)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest, Material mat)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest, Material mat, int pass)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest, int sourceDepthSlice, int destDepthSlice)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest, Vector2 scale, Vector2 offset, int sourceDepthSlice, int destDepthSlice)
  void Blit(RenderTargetIdentifier source, RenderTargetIdentifier dest, Material mat, int pass, int destDepthSlice)
  void SetGlobalFloat(string name, float value)
  void SetGlobalInt(string name, int value)
  void SetGlobalInteger(string name, int value)
  void SetGlobalVector(string name, Vector4 value)
  void SetGlobalColor(string name, Color value)
  void SetGlobalMatrix(string name, Matrix4x4 value)
  void SetGlobalFloatArray(string propertyName, List`1<float> values)
  void SetGlobalFloatArray(int nameID, List`1<float> values)
  void SetGlobalFloatArray(string propertyName, Single[] values)
  void SetGlobalVectorArray(string propertyName, List`1<Vector4> values)
  void SetGlobalVectorArray(int nameID, List`1<Vector4> values)
  void SetGlobalVectorArray(string propertyName, Vector4[] values)
  void SetGlobalMatrixArray(string propertyName, List`1<Matrix4x4> values)
  void SetGlobalMatrixArray(int nameID, List`1<Matrix4x4> values)
  void SetGlobalMatrixArray(string propertyName, Matrix4x4[] values)
  void SetGlobalTexture(string name, RenderTargetIdentifier value)
  void SetGlobalTexture(int nameID, RenderTargetIdentifier value)
  void SetGlobalTexture(string name, RenderTargetIdentifier value, RenderTextureSubElement element)
  void SetGlobalTexture(int nameID, RenderTargetIdentifier value, RenderTextureSubElement element)
  void SetGlobalBuffer(string name, ComputeBuffer value)
  void SetGlobalBuffer(int nameID, ComputeBuffer value)
  void SetGlobalBuffer(string name, GraphicsBuffer value)
  void SetGlobalBuffer(int nameID, GraphicsBuffer value)
  void SetGlobalConstantBuffer(ComputeBuffer buffer, int nameID, int offset, int size)
  void SetGlobalConstantBuffer(ComputeBuffer buffer, string name, int offset, int size)
  void SetGlobalConstantBuffer(GraphicsBuffer buffer, int nameID, int offset, int size)
  void SetGlobalConstantBuffer(GraphicsBuffer buffer, string name, int offset, int size)
  void SetShadowSamplingMode(RenderTargetIdentifier shadowmap, ShadowSamplingMode mode)
  void SetSinglePassStereo(SinglePassStereoMode mode)
  void IssuePluginEvent(IntPtr callback, int eventID)
  void IssuePluginEventAndData(IntPtr callback, int eventID, IntPtr data)
  void IssuePluginCustomBlit(IntPtr callback, UInt32 command, RenderTargetIdentifier source, RenderTargetIdentifier dest, UInt32 commandParam, UInt32 commandFlags)
  void IssuePluginCustomTextureUpdate(IntPtr callback, Texture targetTexture, UInt32 userData)
  void IssuePluginCustomTextureUpdateV1(IntPtr callback, Texture targetTexture, UInt32 userData)
  void IssuePluginCustomTextureUpdateV2(IntPtr callback, Texture targetTexture, UInt32 userData)
  void ProcessVTFeedback(RenderTargetIdentifier rt, IntPtr resolver, int slice, int x, int width, int y, int height, int mip)
  void CopyBuffer(GraphicsBuffer source, GraphicsBuffer dest)
  GPUFence CreateGPUFence(SynchronisationStage stage)
  GPUFence CreateGPUFence()
  void WaitOnGPUFence(GPUFence fence, SynchronisationStage stage)
  void WaitOnGPUFence(GPUFence fence)
  void SetComputeBufferData(ComputeBuffer buffer, Array data)
  void SetComputeBufferData(ComputeBuffer buffer, List`1<T> data)
  void SetComputeBufferData(ComputeBuffer buffer, NativeArray`1<T> data)
  void SetComputeBufferData(ComputeBuffer buffer, Array data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetComputeBufferData(ComputeBuffer buffer, List`1<T> data, int managedBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetComputeBufferData(ComputeBuffer buffer, NativeArray`1<T> data, int nativeBufferStartIndex, int graphicsBufferStartIndex, int count)
  void SetComputeBufferCounterValue(ComputeBuffer buffer, UInt32 counterValue)
  void ConvertTexture_Internal_Injected(RenderTargetIdentifier& src, int srcElement, RenderTargetIdentifier& dst, int dstElement)
  void SetComputeVectorParam_Injected(ComputeShader computeShader, int nameID, Vector4& val)
  void SetComputeMatrixParam_Injected(ComputeShader computeShader, int nameID, Matrix4x4& val)
  void Internal_SetRayTracingVectorParam_Injected(RayTracingShader rayTracingShader, int nameID, Vector4& val)
  void Internal_SetRayTracingMatrixParam_Injected(RayTracingShader rayTracingShader, int nameID, Matrix4x4& val)
  void Internal_BuildRayTracingAccelerationStructure_Injected(RayTracingAccelerationStructure accelerationStructure, Vector3& relativeOrigin)
  void Internal_GenerateMips_Injected(RenderTargetIdentifier& rt)
  void Internal_DrawMesh_Injected(Mesh mesh, Matrix4x4& matrix, Material material, int submeshIndex, int shaderPass, MaterialPropertyBlock properties)
  void Internal_DrawRendererList_Injected(RendererList& rendererList)
  void Internal_DrawProcedural_Injected(Matrix4x4& matrix, Material material, int shaderPass, MeshTopology topology, int vertexCount, int instanceCount, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndexed_Injected(GraphicsBuffer indexBuffer, Matrix4x4& matrix, Material material, int shaderPass, MeshTopology topology, int indexCount, int instanceCount, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndirect_Injected(Matrix4x4& matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndexedIndirect_Injected(GraphicsBuffer indexBuffer, Matrix4x4& matrix, Material material, int shaderPass, MeshTopology topology, ComputeBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndirectGraphicsBuffer_Injected(Matrix4x4& matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawProceduralIndexedIndirectGraphicsBuffer_Injected(GraphicsBuffer indexBuffer, Matrix4x4& matrix, Material material, int shaderPass, MeshTopology topology, GraphicsBuffer bufferWithArgs, int argsOffset, MaterialPropertyBlock properties)
  void Internal_DrawOcclusionMesh_Injected(RectInt& normalizedCamViewport)
  void SetViewport_Injected(Rect& pixelRect)
  void EnableScissorRect_Injected(Rect& scissor)
  void Blit_Texture_Injected(Texture source, RenderTargetIdentifier& dest, Material mat, int pass, Vector2& scale, Vector2& offset, int sourceDepthSlice, int destDepthSlice)
  void Blit_Identifier_Injected(RenderTargetIdentifier& source, RenderTargetIdentifier& dest, Material mat, int pass, Vector2& scale, Vector2& offset, int sourceDepthSlice, int destDepthSlice)
  void GetTemporaryRTWithDescriptor_Injected(int nameID, RenderTextureDescriptor& desc, FilterMode filter)
  void ClearRenderTarget_Injected(RTClearFlags clearFlags, Color& backgroundColor, float depth, UInt32 stencil)
  void SetGlobalVector_Injected(int nameID, Vector4& value)
  void SetGlobalColor_Injected(int nameID, Color& value)
  void SetGlobalMatrix_Injected(int nameID, Matrix4x4& value)
  void EnableGlobalKeyword_Injected(GlobalKeyword& keyword)
  void EnableMaterialKeyword_Injected(Material material, LocalKeyword& keyword)
  void EnableComputeKeyword_Injected(ComputeShader computeShader, LocalKeyword& keyword)
  void DisableGlobalKeyword_Injected(GlobalKeyword& keyword)
  void DisableMaterialKeyword_Injected(Material material, LocalKeyword& keyword)
  void DisableComputeKeyword_Injected(ComputeShader computeShader, LocalKeyword& keyword)
  void SetGlobalKeyword_Injected(GlobalKeyword& keyword, bool value)
  void SetMaterialKeyword_Injected(Material material, LocalKeyword& keyword, bool value)
  void SetComputeKeyword_Injected(ComputeShader computeShader, LocalKeyword& keyword, bool value)
  void SetViewMatrix_Injected(Matrix4x4& view)
  void SetProjectionMatrix_Injected(Matrix4x4& proj)
  void SetViewProjectionMatrices_Injected(Matrix4x4& view, Matrix4x4& proj)
  void IncrementUpdateCount_Injected(RenderTargetIdentifier& dest)
  void SetRenderTargetSingle_Internal_Injected(RenderTargetIdentifier& rt, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void SetRenderTargetColorDepth_Internal_Injected(RenderTargetIdentifier& color, RenderTargetIdentifier& depth, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, RenderTargetFlags flags)
  void SetRenderTargetMulti_Internal_Injected(RenderTargetIdentifier[] colors, RenderTargetIdentifier& depth, RenderBufferLoadAction[] colorLoadActions, RenderBufferStoreAction[] colorStoreActions, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, RenderTargetFlags flags)
  void SetRenderTargetColorDepthSubtarget_Injected(RenderTargetIdentifier& color, RenderTargetIdentifier& depth, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void SetRenderTargetMultiSubtarget_Injected(RenderTargetIdentifier[] colors, RenderTargetIdentifier& depth, RenderBufferLoadAction[] colorLoadActions, RenderBufferStoreAction[] colorStoreActions, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction, int mipLevel, CubemapFace cubemapFace, int depthSlice)
  void Internal_ProcessVTFeedback_Injected(RenderTargetIdentifier& rt, IntPtr resolver, int slice, int x, int width, int y, int height, int mip)
--------------------------------------------------
Класс: UnityEngine.Rendering.CommandBufferExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void Internal_SwitchIntoFastMemory(CommandBuffer cmd, RenderTargetIdentifier& rt, FastMemoryFlags fastMemoryFlags, float residency, bool copyContents)
  void Internal_SwitchOutOfFastMemory(CommandBuffer cmd, RenderTargetIdentifier& rt, bool copyContents)
  void SwitchIntoFastMemory(CommandBuffer cmd, RenderTargetIdentifier rid, FastMemoryFlags fastMemoryFlags, float residency, bool copyContents)
  void SwitchOutOfFastMemory(CommandBuffer cmd, RenderTargetIdentifier rid, bool copyContents)
--------------------------------------------------
Класс: UnityEngine.Rendering.SplashScreen
Наследуется от: object
Поля:
Свойства:
  bool isFinished
Методы:
  bool get_isFinished()
  void CancelSplashScreen()
  void BeginSplashScreenFade()
  void Begin()
  void Stop(StopBehavior stopBehavior)
  void Draw()
  void SetTime(float time)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.SphericalHarmonicsL2
Наследуется от: ValueType
Поля:
  float shr0
  float shr1
  float shr2
  float shr3
  float shr4
  float shr5
  float shr6
  float shr7
  float shr8
  float shg0
  float shg1
  float shg2
  float shg3
  float shg4
  float shg5
  float shg6
  float shg7
  float shg8
  float shb0
  float shb1
  float shb2
  float shb3
  float shb4
  float shb5
  float shb6
  float shb7
  float shb8
Свойства:
  float Item
Методы:
  void Clear()
  void SetZero()
  void AddAmbientLight(Color color)
  void AddDirectionalLight(Vector3 direction, Color color, float intensity)
  void AddDirectionalLightInternal(SphericalHarmonicsL2& sh, Vector3 direction, Color color)
  void Evaluate(Vector3[] directions, Color[] results)
  void EvaluateInternal(SphericalHarmonicsL2& sh, Vector3[] directions, Color[] results)
  float get_Item(int rgb, int coefficient)
  void set_Item(int rgb, int coefficient, float value)
  int GetHashCode()
  bool Equals(object other)
  bool Equals(SphericalHarmonicsL2 other)
  SphericalHarmonicsL2 op_Multiply(SphericalHarmonicsL2 lhs, float rhs)
  SphericalHarmonicsL2 op_Multiply(float lhs, SphericalHarmonicsL2 rhs)
  SphericalHarmonicsL2 op_Addition(SphericalHarmonicsL2 lhs, SphericalHarmonicsL2 rhs)
  bool op_Equality(SphericalHarmonicsL2 lhs, SphericalHarmonicsL2 rhs)
  bool op_Inequality(SphericalHarmonicsL2 lhs, SphericalHarmonicsL2 rhs)
  void SetZero_Injected(SphericalHarmonicsL2& _unity_self)
  void AddAmbientLight_Injected(SphericalHarmonicsL2& _unity_self, Color& color)
  void AddDirectionalLightInternal_Injected(SphericalHarmonicsL2& sh, Vector3& direction, Color& color)
--------------------------------------------------
Класс: UnityEngine.Rendering.BatchVisibility
Наследуется от: ValueType
Поля:
  int offset
  int instancesCount
  int visibleCount
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BatchCullingContext
Наследуется от: ValueType
Поля:
  NativeArray`1<Plane> cullingPlanes
  NativeArray`1<BatchVisibility> batchVisibility
  NativeArray`1<int> visibleIndices
  NativeArray`1<int> visibleIndicesY
  LODParameters lodParameters
  Matrix4x4 cullingMatrix
  float nearPlane
Свойства:
Методы:
  void .ctor(NativeArray`1<Plane> inCullingPlanes, NativeArray`1<BatchVisibility> inOutBatchVisibility, NativeArray`1<int> outVisibleIndices, LODParameters inLodParameters)
  void .ctor(NativeArray`1<Plane> inCullingPlanes, NativeArray`1<BatchVisibility> inOutBatchVisibility, NativeArray`1<int> outVisibleIndices, LODParameters inLodParameters, Matrix4x4 inCullingMatrix, float inNearPlane)
  void .ctor(NativeArray`1<Plane> inCullingPlanes, NativeArray`1<BatchVisibility> inOutBatchVisibility, NativeArray`1<int> outVisibleIndices, NativeArray`1<int> outVisibleIndicesY, LODParameters inLodParameters, Matrix4x4 inCullingMatrix, float inNearPlane)
--------------------------------------------------
Класс: UnityEngine.Rendering.BatchRendererCullingOutput
Наследуется от: ValueType
Поля:
  JobHandle cullingJobsFence
  Matrix4x4 cullingMatrix
  Plane* cullingPlanes
  BatchVisibility* batchVisibility
  Int32* visibleIndices
  Int32* visibleIndicesY
  int cullingPlanesCount
  int batchVisibilityCount
  int visibleIndicesCount
  float nearPlane
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.BatchRendererGroup
Наследуется от: object
Поля:
  IntPtr m_GroupHandle
  OnPerformCulling m_PerformCulling
Свойства:
Методы:
  void .ctor(OnPerformCulling cullingCallback)
  void Dispose()
  int AddBatch(Mesh mesh, int subMeshIndex, Material material, int layer, ShadowCastingMode castShadows, bool receiveShadows, bool invertCulling, Bounds bounds, int instanceCount, MaterialPropertyBlock customProps, GameObject associatedSceneObject, ulong sceneCullingMask, UInt32 renderingLayerMask)
  void SetBatchFlags(int batchIndex, ulong flags)
  void SetBatchPropertyMetadata(int batchIndex, NativeArray`1<int> cbufferLengths, NativeArray`1<int> cbufferMetadata)
  void InternalSetBatchPropertyMetadata(int batchIndex, IntPtr cbufferLengths, int cbufferLengthsCount, IntPtr cbufferMetadata, int cbufferMetadataCount)
  void SetInstancingData(int batchIndex, int instanceCount, MaterialPropertyBlock customProps)
  NativeArray`1<Matrix4x4> GetBatchMatrices(int batchIndex)
  NativeArray`1<int> GetBatchScalarArrayInt(int batchIndex, string propertyName)
  NativeArray`1<float> GetBatchScalarArray(int batchIndex, string propertyName)
  NativeArray`1<int> GetBatchVectorArrayInt(int batchIndex, string propertyName)
  NativeArray`1<Vector4> GetBatchVectorArray(int batchIndex, string propertyName)
  NativeArray`1<Matrix4x4> GetBatchMatrixArray(int batchIndex, string propertyName)
  NativeArray`1<int> GetBatchScalarArrayInt(int batchIndex, int propertyName)
  NativeArray`1<float> GetBatchScalarArray(int batchIndex, int propertyName)
  NativeArray`1<int> GetBatchVectorArrayInt(int batchIndex, int propertyName)
  NativeArray`1<Vector4> GetBatchVectorArray(int batchIndex, int propertyName)
  NativeArray`1<Matrix4x4> GetBatchMatrixArray(int batchIndex, int propertyName)
  void SetBatchBounds(int batchIndex, Bounds bounds)
  int GetNumBatches()
  void RemoveBatch(int index)
  Void* GetBatchMatrices(int batchIndex, Int32& matrixCount)
  Void* GetBatchScalarArray(int batchIndex, string propertyName, Int32& elementCount)
  Void* GetBatchVectorArray(int batchIndex, string propertyName, Int32& elementCount)
  Void* GetBatchMatrixArray(int batchIndex, string propertyName, Int32& elementCount)
  Void* GetBatchScalarArray_Internal(int batchIndex, int propertyName, Int32& elementCount)
  Void* GetBatchVectorArray_Internal(int batchIndex, int propertyName, Int32& elementCount)
  Void* GetBatchMatrixArray_Internal(int batchIndex, int propertyName, Int32& elementCount)
  void EnableVisibleIndicesYArray(bool enabled)
  IntPtr Create(BatchRendererGroup group)
  void Destroy(IntPtr groupHandle)
  void InvokeOnPerformCulling(BatchRendererGroup group, BatchRendererCullingOutput& context, LODParameters& lodParameters)
  int AddBatch_Injected(Mesh mesh, int subMeshIndex, Material material, int layer, ShadowCastingMode castShadows, bool receiveShadows, bool invertCulling, Bounds& bounds, int instanceCount, MaterialPropertyBlock customProps, GameObject associatedSceneObject, ulong sceneCullingMask, UInt32 renderingLayerMask)
  void SetBatchBounds_Injected(int batchIndex, Bounds& bounds)
--------------------------------------------------
Класс: UnityEngine.Rendering.AttachmentDescriptor
Наследуется от: ValueType
Поля:
  RenderBufferLoadAction m_LoadAction
  RenderBufferStoreAction m_StoreAction
  GraphicsFormat m_Format
  RenderTargetIdentifier m_LoadStoreTarget
  RenderTargetIdentifier m_ResolveTarget
  Color m_ClearColor
  float m_ClearDepth
  UInt32 m_ClearStencil
Свойства:
  RenderBufferLoadAction loadAction
  RenderBufferStoreAction storeAction
  GraphicsFormat graphicsFormat
  RenderTextureFormat format
  RenderTargetIdentifier loadStoreTarget
  RenderTargetIdentifier resolveTarget
  Color clearColor
  float clearDepth
  UInt32 clearStencil
Методы:
  RenderBufferLoadAction get_loadAction()
  void set_loadAction(RenderBufferLoadAction value)
  RenderBufferStoreAction get_storeAction()
  void set_storeAction(RenderBufferStoreAction value)
  GraphicsFormat get_graphicsFormat()
  void set_graphicsFormat(GraphicsFormat value)
  RenderTextureFormat get_format()
  void set_format(RenderTextureFormat value)
  RenderTargetIdentifier get_loadStoreTarget()
  void set_loadStoreTarget(RenderTargetIdentifier value)
  RenderTargetIdentifier get_resolveTarget()
  void set_resolveTarget(RenderTargetIdentifier value)
  Color get_clearColor()
  void set_clearColor(Color value)
  float get_clearDepth()
  void set_clearDepth(float value)
  UInt32 get_clearStencil()
  void set_clearStencil(UInt32 value)
  void ConfigureTarget(RenderTargetIdentifier target, bool loadExistingContents, bool storeResults)
  void ConfigureResolveTarget(RenderTargetIdentifier target)
  void ConfigureClear(Color clearColor, float clearDepth, UInt32 clearStencil)
  void .ctor(GraphicsFormat format)
  void .ctor(RenderTextureFormat format)
  void .ctor(RenderTextureFormat format, RenderTargetIdentifier target, bool loadExistingContents, bool storeResults, bool resolve)
  bool Equals(AttachmentDescriptor other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(AttachmentDescriptor left, AttachmentDescriptor right)
  bool op_Inequality(AttachmentDescriptor left, AttachmentDescriptor right)
--------------------------------------------------
Класс: UnityEngine.Rendering.BlendState
Наследуется от: ValueType
Поля:
  RenderTargetBlendState m_BlendState0
  RenderTargetBlendState m_BlendState1
  RenderTargetBlendState m_BlendState2
  RenderTargetBlendState m_BlendState3
  RenderTargetBlendState m_BlendState4
  RenderTargetBlendState m_BlendState5
  RenderTargetBlendState m_BlendState6
  RenderTargetBlendState m_BlendState7
  byte m_SeparateMRTBlendStates
  byte m_AlphaToMask
  short m_Padding
Свойства:
  BlendState defaultValue
  bool separateMRTBlendStates
  bool alphaToMask
  RenderTargetBlendState blendState0
  RenderTargetBlendState blendState1
  RenderTargetBlendState blendState2
  RenderTargetBlendState blendState3
  RenderTargetBlendState blendState4
  RenderTargetBlendState blendState5
  RenderTargetBlendState blendState6
  RenderTargetBlendState blendState7
Методы:
  BlendState get_defaultValue()
  void .ctor(bool separateMRTBlend, bool alphaToMask)
  bool get_separateMRTBlendStates()
  void set_separateMRTBlendStates(bool value)
  bool get_alphaToMask()
  void set_alphaToMask(bool value)
  RenderTargetBlendState get_blendState0()
  void set_blendState0(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState1()
  void set_blendState1(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState2()
  void set_blendState2(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState3()
  void set_blendState3(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState4()
  void set_blendState4(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState5()
  void set_blendState5(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState6()
  void set_blendState6(RenderTargetBlendState value)
  RenderTargetBlendState get_blendState7()
  void set_blendState7(RenderTargetBlendState value)
  bool Equals(BlendState other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(BlendState left, BlendState right)
  bool op_Inequality(BlendState left, BlendState right)
--------------------------------------------------
Класс: UnityEngine.Rendering.CoreCameraValues
Наследуется от: ValueType
Поля:
  int filterMode
  UInt32 cullingMask
  int instanceID
Свойства:
Методы:
  bool Equals(CoreCameraValues other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CoreCameraValues left, CoreCameraValues right)
  bool op_Inequality(CoreCameraValues left, CoreCameraValues right)
--------------------------------------------------
Класс: UnityEngine.Rendering.CameraProperties
Наследуется от: ValueType
Поля:
  int k_NumLayers
  Rect screenRect
  Vector3 viewDir
  float projectionNear
  float projectionFar
  float cameraNear
  float cameraFar
  float cameraAspect
  Matrix4x4 cameraToWorld
  Matrix4x4 actualWorldToClip
  Matrix4x4 cameraClipToWorld
  Matrix4x4 cameraWorldToClip
  Matrix4x4 implicitProjection
  Matrix4x4 stereoWorldToClipLeft
  Matrix4x4 stereoWorldToClipRight
  Matrix4x4 worldToCamera
  Vector3 up
  Vector3 right
  Vector3 transformDirection
  Vector3 cameraEuler
  Vector3 velocity
  float farPlaneWorldSpaceLength
  UInt32 rendererCount
  int k_PlaneCount
  <m_ShadowCullPlanes>e__FixedBuffer m_ShadowCullPlanes
  <m_CameraCullPlanes>e__FixedBuffer m_CameraCullPlanes
  float baseFarDistance
  Vector3 shadowCullCenter
  <layerCullDistances>e__FixedBuffer layerCullDistances
  int layerCullSpherical
  CoreCameraValues coreCameraValues
  UInt32 cameraType
  int projectionIsOblique
  int isImplicitProjectionMatrix
Свойства:
Методы:
  Plane GetShadowCullingPlane(int index)
  void SetShadowCullingPlane(int index, Plane plane)
  Plane GetCameraCullingPlane(int index)
  void SetCameraCullingPlane(int index, Plane plane)
  bool Equals(CameraProperties other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CameraProperties left, CameraProperties right)
  bool op_Inequality(CameraProperties left, CameraProperties right)
--------------------------------------------------
Класс: UnityEngine.Rendering.CullingOptions
Наследуется от: Enum
Поля:
  int value__
  CullingOptions None
  CullingOptions ForceEvenIfCameraIsNotActive
  CullingOptions OcclusionCull
  CullingOptions NeedsLighting
  CullingOptions NeedsReflectionProbes
  CullingOptions Stereo
  CullingOptions DisablePerObjectCulling
  CullingOptions ShadowCasters
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ScriptableCullingParameters
Наследуется от: ValueType
Поля:
  int m_IsOrthographic
  LODParameters m_LODParameters
  int k_MaximumCullingPlaneCount
  int maximumCullingPlaneCount
  <m_CullingPlanes>e__FixedBuffer m_CullingPlanes
  int m_CullingPlaneCount
  UInt32 m_CullingMask
  ulong m_SceneMask
  int k_LayerCount
  int layerCount
  <m_LayerFarCullDistances>e__FixedBuffer m_LayerFarCullDistances
  int m_LayerCull
  Matrix4x4 m_CullingMatrix
  Vector3 m_Origin
  float m_ShadowDistance
  float m_ShadowNearPlaneOffset
  CullingOptions m_CullingOptions
  ReflectionProbeSortingCriteria m_ReflectionProbeSortingCriteria
  CameraProperties m_CameraProperties
  float m_AccurateOcclusionThreshold
  int m_MaximumPortalCullingJobs
  int k_CullingJobCountLowerLimit
  int k_CullingJobCountUpperLimit
  Matrix4x4 m_StereoViewMatrix
  Matrix4x4 m_StereoProjectionMatrix
  float m_StereoSeparationDistance
  int m_maximumVisibleLights
  bool m_ConservativeEnclosingSphere
  int m_NumIterationsEnclosingSphere
Свойства:
  int maximumVisibleLights
  bool conservativeEnclosingSphere
  int numIterationsEnclosingSphere
  int cullingPlaneCount
  bool isOrthographic
  LODParameters lodParameters
  UInt32 cullingMask
  Matrix4x4 cullingMatrix
  Vector3 origin
  float shadowDistance
  float shadowNearPlaneOffset
  CullingOptions cullingOptions
  ReflectionProbeSortingCriteria reflectionProbeSortingCriteria
  CameraProperties cameraProperties
  Matrix4x4 stereoViewMatrix
  Matrix4x4 stereoProjectionMatrix
  float stereoSeparationDistance
  float accurateOcclusionThreshold
  int maximumPortalCullingJobs
  int cullingJobsLowerLimit
  int cullingJobsUpperLimit
Методы:
  int get_maximumVisibleLights()
  void set_maximumVisibleLights(int value)
  bool get_conservativeEnclosingSphere()
  void set_conservativeEnclosingSphere(bool value)
  int get_numIterationsEnclosingSphere()
  void set_numIterationsEnclosingSphere(int value)
  int get_cullingPlaneCount()
  void set_cullingPlaneCount(int value)
  bool get_isOrthographic()
  void set_isOrthographic(bool value)
  LODParameters get_lodParameters()
  void set_lodParameters(LODParameters value)
  UInt32 get_cullingMask()
  void set_cullingMask(UInt32 value)
  Matrix4x4 get_cullingMatrix()
  void set_cullingMatrix(Matrix4x4 value)
  Vector3 get_origin()
  void set_origin(Vector3 value)
  float get_shadowDistance()
  void set_shadowDistance(float value)
  float get_shadowNearPlaneOffset()
  void set_shadowNearPlaneOffset(float value)
  CullingOptions get_cullingOptions()
  void set_cullingOptions(CullingOptions value)
  ReflectionProbeSortingCriteria get_reflectionProbeSortingCriteria()
  void set_reflectionProbeSortingCriteria(ReflectionProbeSortingCriteria value)
  CameraProperties get_cameraProperties()
  void set_cameraProperties(CameraProperties value)
  Matrix4x4 get_stereoViewMatrix()
  void set_stereoViewMatrix(Matrix4x4 value)
  Matrix4x4 get_stereoProjectionMatrix()
  void set_stereoProjectionMatrix(Matrix4x4 value)
  float get_stereoSeparationDistance()
  void set_stereoSeparationDistance(float value)
  float get_accurateOcclusionThreshold()
  void set_accurateOcclusionThreshold(float value)
  int get_maximumPortalCullingJobs()
  void set_maximumPortalCullingJobs(int value)
  int get_cullingJobsLowerLimit()
  int get_cullingJobsUpperLimit()
  float GetLayerCullingDistance(int layerIndex)
  void SetLayerCullingDistance(int layerIndex, float distance)
  Plane GetCullingPlane(int index)
  void SetCullingPlane(int index, Plane plane)
  bool Equals(ScriptableCullingParameters other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(ScriptableCullingParameters left, ScriptableCullingParameters right)
  bool op_Inequality(ScriptableCullingParameters left, ScriptableCullingParameters right)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.CullingResults
Наследуется от: ValueType
Поля:
  IntPtr ptr
  CullingAllocationInfo* m_AllocationInfo
Свойства:
  NativeArray`1<VisibleLight> visibleLights
  NativeArray`1<VisibleLight> visibleOffscreenVertexLights
  NativeArray`1<VisibleReflectionProbe> visibleReflectionProbes
  int lightIndexCount
  int reflectionProbeIndexCount
  int lightAndReflectionProbeIndexCount
Методы:
  int GetLightIndexCount(IntPtr cullingResultsPtr)
  int GetReflectionProbeIndexCount(IntPtr cullingResultsPtr)
  void FillLightAndReflectionProbeIndices(IntPtr cullingResultsPtr, ComputeBuffer computeBuffer)
  void FillLightAndReflectionProbeIndicesGraphicsBuffer(IntPtr cullingResultsPtr, GraphicsBuffer buffer)
  int GetLightIndexMapSize(IntPtr cullingResultsPtr)
  int GetReflectionProbeIndexMapSize(IntPtr cullingResultsPtr)
  void FillLightIndexMap(IntPtr cullingResultsPtr, IntPtr indexMapPtr, int indexMapSize)
  void FillReflectionProbeIndexMap(IntPtr cullingResultsPtr, IntPtr indexMapPtr, int indexMapSize)
  void SetLightIndexMap(IntPtr cullingResultsPtr, IntPtr indexMapPtr, int indexMapSize)
  void SetReflectionProbeIndexMap(IntPtr cullingResultsPtr, IntPtr indexMapPtr, int indexMapSize)
  bool GetShadowCasterBounds(IntPtr cullingResultsPtr, int lightIndex, Bounds& bounds)
  bool ComputeSpotShadowMatricesAndCullingPrimitives(IntPtr cullingResultsPtr, int activeLightIndex, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
  bool ComputePointShadowMatricesAndCullingPrimitives(IntPtr cullingResultsPtr, int activeLightIndex, CubemapFace cubemapFace, float fovBias, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
  bool ComputeDirectionalShadowMatricesAndCullingPrimitives(IntPtr cullingResultsPtr, int activeLightIndex, int splitIndex, int splitCount, Vector3 splitRatio, int shadowResolution, float shadowNearPlaneOffset, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
  NativeArray`1<VisibleLight> get_visibleLights()
  NativeArray`1<VisibleLight> get_visibleOffscreenVertexLights()
  NativeArray`1<VisibleReflectionProbe> get_visibleReflectionProbes()
  NativeArray`1<T> GetNativeArray(Void* dataPointer, int length)
  int get_lightIndexCount()
  int get_reflectionProbeIndexCount()
  int get_lightAndReflectionProbeIndexCount()
  void FillLightAndReflectionProbeIndices(ComputeBuffer computeBuffer)
  void FillLightAndReflectionProbeIndices(GraphicsBuffer buffer)
  NativeArray`1<int> GetLightIndexMap(Allocator allocator)
  void SetLightIndexMap(NativeArray`1<int> lightIndexMap)
  NativeArray`1<int> GetReflectionProbeIndexMap(Allocator allocator)
  void SetReflectionProbeIndexMap(NativeArray`1<int> lightIndexMap)
  bool GetShadowCasterBounds(int lightIndex, Bounds& outBounds)
  bool ComputeSpotShadowMatricesAndCullingPrimitives(int activeLightIndex, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
  bool ComputePointShadowMatricesAndCullingPrimitives(int activeLightIndex, CubemapFace cubemapFace, float fovBias, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
  bool ComputeDirectionalShadowMatricesAndCullingPrimitives(int activeLightIndex, int splitIndex, int splitCount, Vector3 splitRatio, int shadowResolution, float shadowNearPlaneOffset, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
  void Validate()
  bool Equals(CullingResults other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CullingResults left, CullingResults right)
  bool op_Inequality(CullingResults left, CullingResults right)
  bool ComputeDirectionalShadowMatricesAndCullingPrimitives_Injected(IntPtr cullingResultsPtr, int activeLightIndex, int splitIndex, int splitCount, Vector3& splitRatio, int shadowResolution, float shadowNearPlaneOffset, Matrix4x4& viewMatrix, Matrix4x4& projMatrix, ShadowSplitData& shadowSplitData)
--------------------------------------------------
Класс: UnityEngine.Rendering.CullingAllocationInfo
Наследуется от: ValueType
Поля:
  VisibleLight* visibleLightsPtr
  VisibleLight* visibleOffscreenVertexLightsPtr
  VisibleReflectionProbe* visibleReflectionProbesPtr
  int visibleLightCount
  int visibleOffscreenVertexLightCount
  int visibleReflectionProbeCount
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.DepthState
Наследуется от: ValueType
Поля:
  byte m_WriteEnabled
  sbyte m_CompareFunction
Свойства:
  DepthState defaultValue
  bool writeEnabled
  CompareFunction compareFunction
Методы:
  DepthState get_defaultValue()
  void .ctor(bool writeEnabled, CompareFunction compareFunction)
  bool get_writeEnabled()
  void set_writeEnabled(bool value)
  CompareFunction get_compareFunction()
  void set_compareFunction(CompareFunction value)
  bool Equals(DepthState other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(DepthState left, DepthState right)
  bool op_Inequality(DepthState left, DepthState right)
--------------------------------------------------
Класс: UnityEngine.Rendering.DrawingSettings
Наследуется от: ValueType
Поля:
  int kMaxShaderPasses
  int maxShaderPasses
  SortingSettings m_SortingSettings
  <shaderPassNames>e__FixedBuffer shaderPassNames
  PerObjectData m_PerObjectData
  DrawRendererFlags m_Flags
  int m_OverrideMaterialInstanceId
  int m_OverrideMaterialPassIndex
  int m_fallbackMaterialInstanceId
  int m_MainLightIndex
  int m_UseSrpBatcher
Свойства:
  SortingSettings sortingSettings
  PerObjectData perObjectData
  bool enableDynamicBatching
  bool enableInstancing
  Material overrideMaterial
  int overrideMaterialPassIndex
  Material fallbackMaterial
  int mainLightIndex
Методы:
  void .ctor(ShaderTagId shaderPassName, SortingSettings sortingSettings)
  SortingSettings get_sortingSettings()
  void set_sortingSettings(SortingSettings value)
  PerObjectData get_perObjectData()
  void set_perObjectData(PerObjectData value)
  bool get_enableDynamicBatching()
  void set_enableDynamicBatching(bool value)
  bool get_enableInstancing()
  void set_enableInstancing(bool value)
  Material get_overrideMaterial()
  void set_overrideMaterial(Material value)
  int get_overrideMaterialPassIndex()
  void set_overrideMaterialPassIndex(int value)
  Material get_fallbackMaterial()
  void set_fallbackMaterial(Material value)
  int get_mainLightIndex()
  void set_mainLightIndex(int value)
  ShaderTagId GetShaderPassName(int index)
  void SetShaderPassName(int index, ShaderTagId shaderPassName)
  bool Equals(DrawingSettings other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(DrawingSettings left, DrawingSettings right)
  bool op_Inequality(DrawingSettings left, DrawingSettings right)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.DrawRendererFlags
Наследуется от: Enum
Поля:
  int value__
  DrawRendererFlags None
  DrawRendererFlags EnableDynamicBatching
  DrawRendererFlags EnableInstancing
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.FilteringSettings
Наследуется от: ValueType
Поля:
  RenderQueueRange m_RenderQueueRange
  int m_LayerMask
  UInt32 m_RenderingLayerMask
  int m_ExcludeMotionVectorObjects
  SortingLayerRange m_SortingLayerRange
Свойства:
  FilteringSettings defaultValue
  RenderQueueRange renderQueueRange
  int layerMask
  UInt32 renderingLayerMask
  bool excludeMotionVectorObjects
  SortingLayerRange sortingLayerRange
Методы:
  FilteringSettings get_defaultValue()
  void .ctor(Nullable`1<RenderQueueRange> renderQueueRange, int layerMask, UInt32 renderingLayerMask, int excludeMotionVectorObjects)
  RenderQueueRange get_renderQueueRange()
  void set_renderQueueRange(RenderQueueRange value)
  int get_layerMask()
  void set_layerMask(int value)
  UInt32 get_renderingLayerMask()
  void set_renderingLayerMask(UInt32 value)
  bool get_excludeMotionVectorObjects()
  void set_excludeMotionVectorObjects(bool value)
  SortingLayerRange get_sortingLayerRange()
  void set_sortingLayerRange(SortingLayerRange value)
  bool Equals(FilteringSettings other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(FilteringSettings left, FilteringSettings right)
  bool op_Inequality(FilteringSettings left, FilteringSettings right)
--------------------------------------------------
Класс: UnityEngine.Rendering.GizmoSubset
Наследуется от: Enum
Поля:
  int value__
  GizmoSubset PreImageEffects
  GizmoSubset PostImageEffects
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.LODParameters
Наследуется от: ValueType
Поля:
  int m_IsOrthographic
  Vector3 m_CameraPosition
  float m_FieldOfView
  float m_OrthoSize
  int m_CameraPixelHeight
Свойства:
  bool isOrthographic
  Vector3 cameraPosition
  float fieldOfView
  float orthoSize
  int cameraPixelHeight
Методы:
  bool get_isOrthographic()
  void set_isOrthographic(bool value)
  Vector3 get_cameraPosition()
  void set_cameraPosition(Vector3 value)
  float get_fieldOfView()
  void set_fieldOfView(float value)
  float get_orthoSize()
  void set_orthoSize(float value)
  int get_cameraPixelHeight()
  void set_cameraPixelHeight(int value)
  bool Equals(LODParameters other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(LODParameters left, LODParameters right)
  bool op_Inequality(LODParameters left, LODParameters right)
--------------------------------------------------
Класс: UnityEngine.Rendering.PerObjectData
Наследуется от: Enum
Поля:
  int value__
  PerObjectData None
  PerObjectData LightProbe
  PerObjectData ReflectionProbes
  PerObjectData LightProbeProxyVolume
  PerObjectData Lightmaps
  PerObjectData LightData
  PerObjectData MotionVectors
  PerObjectData LightIndices
  PerObjectData ReflectionProbeData
  PerObjectData OcclusionProbe
  PerObjectData OcclusionProbeProxyVolume
  PerObjectData ShadowMask
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RasterState
Наследуется от: ValueType
Поля:
  RasterState defaultValue
  CullMode m_CullingMode
  int m_OffsetUnits
  float m_OffsetFactor
  byte m_DepthClip
  byte m_Conservative
  byte m_Padding1
  byte m_Padding2
Свойства:
  CullMode cullingMode
  bool depthClip
  bool conservative
  int offsetUnits
  float offsetFactor
Методы:
  void .ctor(CullMode cullingMode, int offsetUnits, float offsetFactor, bool depthClip)
  CullMode get_cullingMode()
  void set_cullingMode(CullMode value)
  bool get_depthClip()
  void set_depthClip(bool value)
  bool get_conservative()
  void set_conservative(bool value)
  int get_offsetUnits()
  void set_offsetUnits(int value)
  float get_offsetFactor()
  void set_offsetFactor(float value)
  bool Equals(RasterState other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(RasterState left, RasterState right)
  bool op_Inequality(RasterState left, RasterState right)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.ReflectionProbeSortingCriteria
Наследуется от: Enum
Поля:
  int value__
  ReflectionProbeSortingCriteria None
  ReflectionProbeSortingCriteria Importance
  ReflectionProbeSortingCriteria Size
  ReflectionProbeSortingCriteria ImportanceThenSize
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderPipeline
Наследуется от: object
Поля:
  bool <disposed>k__BackingField
Свойства:
  bool disposed
  RenderPipelineGlobalSettings defaultSettings
Методы:
  void Render(ScriptableRenderContext context, Camera[] cameras)
  void ProcessRenderRequests(ScriptableRenderContext context, Camera camera, List`1<RenderRequest> renderRequests)
  void BeginFrameRendering(ScriptableRenderContext context, Camera[] cameras)
  void BeginContextRendering(ScriptableRenderContext context, List`1<Camera> cameras)
  void BeginCameraRendering(ScriptableRenderContext context, Camera camera)
  void EndContextRendering(ScriptableRenderContext context, List`1<Camera> cameras)
  void EndFrameRendering(ScriptableRenderContext context, Camera[] cameras)
  void EndCameraRendering(ScriptableRenderContext context, Camera camera)
  void Render(ScriptableRenderContext context, List`1<Camera> cameras)
  void InternalRender(ScriptableRenderContext context, List`1<Camera> cameras)
  void InternalRenderWithRequests(ScriptableRenderContext context, List`1<Camera> cameras, List`1<RenderRequest> renderRequests)
  bool get_disposed()
  void set_disposed(bool value)
  void Dispose()
  void Dispose(bool disposing)
  RenderPipelineGlobalSettings get_defaultSettings()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderPipelineAsset
Наследуется от: ScriptableObject
Поля:
Свойства:
  String[] renderingLayerMaskNames
  String[] prefixedRenderingLayerMaskNames
  Material defaultMaterial
  Shader autodeskInteractiveShader
  Shader autodeskInteractiveTransparentShader
  Shader autodeskInteractiveMaskedShader
  Shader terrainDetailLitShader
  Shader terrainDetailGrassShader
  Shader terrainDetailGrassBillboardShader
  Material defaultParticleMaterial
  Material defaultLineMaterial
  Material defaultTerrainMaterial
  Material defaultUIMaterial
  Material defaultUIOverdrawMaterial
  Material defaultUIETC1SupportedMaterial
  Material default2DMaterial
  Material default2DMaskMaterial
  Shader defaultShader
  Shader defaultSpeedTree7Shader
  Shader defaultSpeedTree8Shader
Методы:
  RenderPipeline InternalCreatePipeline()
  String[] get_renderingLayerMaskNames()
  String[] get_prefixedRenderingLayerMaskNames()
  Material get_defaultMaterial()
  Shader get_autodeskInteractiveShader()
  Shader get_autodeskInteractiveTransparentShader()
  Shader get_autodeskInteractiveMaskedShader()
  Shader get_terrainDetailLitShader()
  Shader get_terrainDetailGrassShader()
  Shader get_terrainDetailGrassBillboardShader()
  Material get_defaultParticleMaterial()
  Material get_defaultLineMaterial()
  Material get_defaultTerrainMaterial()
  Material get_defaultUIMaterial()
  Material get_defaultUIOverdrawMaterial()
  Material get_defaultUIETC1SupportedMaterial()
  Material get_default2DMaterial()
  Material get_default2DMaskMaterial()
  Shader get_defaultShader()
  Shader get_defaultSpeedTree7Shader()
  Shader get_defaultSpeedTree8Shader()
  RenderPipeline CreatePipeline()
  void OnValidate()
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderPipelineGlobalSettings
Наследуется от: ScriptableObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderPipelineManager
Наследуется от: object
Поля:
  RenderPipelineAsset s_CurrentPipelineAsset
  List`1<Camera> s_Cameras
  string s_currentPipelineType
  string s_builtinPipelineName
  RenderPipeline s_currentPipeline
  Action`2<ScriptableRenderContext, List`1<Camera>> beginContextRendering
  Action`2<ScriptableRenderContext, List`1<Camera>> endContextRendering
  Action`2<ScriptableRenderContext, Camera[]> beginFrameRendering
  Action`2<ScriptableRenderContext, Camera> beginCameraRendering
  Action`2<ScriptableRenderContext, Camera[]> endFrameRendering
  Action`2<ScriptableRenderContext, Camera> endCameraRendering
  Action activeRenderPipelineTypeChanged
Свойства:
  RenderPipeline currentPipeline
  bool pipelineSwitchCompleted
Методы:
  RenderPipeline get_currentPipeline()
  void set_currentPipeline(RenderPipeline value)
  void add_beginContextRendering(Action`2<ScriptableRenderContext, List`1<Camera>> value)
  void remove_beginContextRendering(Action`2<ScriptableRenderContext, List`1<Camera>> value)
  void add_endContextRendering(Action`2<ScriptableRenderContext, List`1<Camera>> value)
  void remove_endContextRendering(Action`2<ScriptableRenderContext, List`1<Camera>> value)
  void add_beginFrameRendering(Action`2<ScriptableRenderContext, Camera[]> value)
  void remove_beginFrameRendering(Action`2<ScriptableRenderContext, Camera[]> value)
  void add_beginCameraRendering(Action`2<ScriptableRenderContext, Camera> value)
  void remove_beginCameraRendering(Action`2<ScriptableRenderContext, Camera> value)
  void add_endFrameRendering(Action`2<ScriptableRenderContext, Camera[]> value)
  void remove_endFrameRendering(Action`2<ScriptableRenderContext, Camera[]> value)
  void add_endCameraRendering(Action`2<ScriptableRenderContext, Camera> value)
  void remove_endCameraRendering(Action`2<ScriptableRenderContext, Camera> value)
  void add_activeRenderPipelineTypeChanged(Action value)
  void remove_activeRenderPipelineTypeChanged(Action value)
  void BeginContextRendering(ScriptableRenderContext context, List`1<Camera> cameras)
  void BeginCameraRendering(ScriptableRenderContext context, Camera camera)
  void EndContextRendering(ScriptableRenderContext context, List`1<Camera> cameras)
  void EndCameraRendering(ScriptableRenderContext context, Camera camera)
  void OnActiveRenderPipelineTypeChanged()
  void HandleRenderPipelineChange(RenderPipelineAsset pipelineAsset)
  void CleanupRenderPipeline()
  string GetCurrentPipelineAssetType()
  void DoRenderLoop_Internal(RenderPipelineAsset pipe, IntPtr loopPtr, List`1<RenderRequest> renderRequests)
  void PrepareRenderPipeline(RenderPipelineAsset pipelineAsset)
  bool get_pipelineSwitchCompleted()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderQueueRange
Наследуется от: ValueType
Поля:
  int m_LowerBound
  int m_UpperBound
  int k_MinimumBound
  int minimumBound
  int k_MaximumBound
  int maximumBound
Свойства:
  RenderQueueRange all
  RenderQueueRange opaque
  RenderQueueRange transparent
  int lowerBound
  int upperBound
Методы:
  void .ctor(int lowerBound, int upperBound)
  RenderQueueRange get_all()
  RenderQueueRange get_opaque()
  RenderQueueRange get_transparent()
  int get_lowerBound()
  void set_lowerBound(int value)
  int get_upperBound()
  void set_upperBound(int value)
  bool Equals(RenderQueueRange other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(RenderQueueRange left, RenderQueueRange right)
  bool op_Inequality(RenderQueueRange left, RenderQueueRange right)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderStateBlock
Наследуется от: ValueType
Поля:
  BlendState m_BlendState
  RasterState m_RasterState
  DepthState m_DepthState
  StencilState m_StencilState
  int m_StencilReference
  RenderStateMask m_Mask
Свойства:
  BlendState blendState
  RasterState rasterState
  DepthState depthState
  StencilState stencilState
  int stencilReference
  RenderStateMask mask
Методы:
  void .ctor(RenderStateMask mask)
  BlendState get_blendState()
  void set_blendState(BlendState value)
  RasterState get_rasterState()
  void set_rasterState(RasterState value)
  DepthState get_depthState()
  void set_depthState(DepthState value)
  StencilState get_stencilState()
  void set_stencilState(StencilState value)
  int get_stencilReference()
  void set_stencilReference(int value)
  RenderStateMask get_mask()
  void set_mask(RenderStateMask value)
  bool Equals(RenderStateBlock other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(RenderStateBlock left, RenderStateBlock right)
  bool op_Inequality(RenderStateBlock left, RenderStateBlock right)
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderStateMask
Наследуется от: Enum
Поля:
  int value__
  RenderStateMask Nothing
  RenderStateMask Blend
  RenderStateMask Raster
  RenderStateMask Depth
  RenderStateMask Stencil
  RenderStateMask Everything
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RenderTargetBlendState
Наследуется от: ValueType
Поля:
  byte m_WriteMask
  byte m_SourceColorBlendMode
  byte m_DestinationColorBlendMode
  byte m_SourceAlphaBlendMode
  byte m_DestinationAlphaBlendMode
  byte m_ColorBlendOperation
  byte m_AlphaBlendOperation
  byte m_Padding
Свойства:
  RenderTargetBlendState defaultValue
  ColorWriteMask writeMask
  BlendMode sourceColorBlendMode
  BlendMode destinationColorBlendMode
  BlendMode sourceAlphaBlendMode
  BlendMode destinationAlphaBlendMode
  BlendOp colorBlendOperation
  BlendOp alphaBlendOperation
Методы:
  RenderTargetBlendState get_defaultValue()
  void .ctor(ColorWriteMask writeMask, BlendMode sourceColorBlendMode, BlendMode destinationColorBlendMode, BlendMode sourceAlphaBlendMode, BlendMode destinationAlphaBlendMode, BlendOp colorBlendOperation, BlendOp alphaBlendOperation)
  ColorWriteMask get_writeMask()
  void set_writeMask(ColorWriteMask value)
  BlendMode get_sourceColorBlendMode()
  void set_sourceColorBlendMode(BlendMode value)
  BlendMode get_destinationColorBlendMode()
  void set_destinationColorBlendMode(BlendMode value)
  BlendMode get_sourceAlphaBlendMode()
  void set_sourceAlphaBlendMode(BlendMode value)
  BlendMode get_destinationAlphaBlendMode()
  void set_destinationAlphaBlendMode(BlendMode value)
  BlendOp get_colorBlendOperation()
  void set_colorBlendOperation(BlendOp value)
  BlendOp get_alphaBlendOperation()
  void set_alphaBlendOperation(BlendOp value)
  bool Equals(RenderTargetBlendState other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(RenderTargetBlendState left, RenderTargetBlendState right)
  bool op_Inequality(RenderTargetBlendState left, RenderTargetBlendState right)
--------------------------------------------------
Класс: UnityEngine.Rendering.ScopedRenderPass
Наследуется от: ValueType
Поля:
  ScriptableRenderContext m_Context
Свойства:
Методы:
  void .ctor(ScriptableRenderContext context)
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.Rendering.ScopedSubPass
Наследуется от: ValueType
Поля:
  ScriptableRenderContext m_Context
Свойства:
Методы:
  void .ctor(ScriptableRenderContext context)
  void Dispose()
--------------------------------------------------
Класс: UnityEngine.Rendering.ScriptableRenderContext
Наследуется от: ValueType
Поля:
  ShaderTagId kRenderTypeTag
  IntPtr m_Ptr
Свойства:
Методы:
  void BeginRenderPass_Internal(IntPtr self, int width, int height, int samples, IntPtr colors, int colorCount, int depthAttachmentIndex)
  void BeginSubPass_Internal(IntPtr self, IntPtr colors, int colorCount, IntPtr inputs, int inputCount, bool isDepthReadOnly, bool isStencilReadOnly)
  void EndSubPass_Internal(IntPtr self)
  void EndRenderPass_Internal(IntPtr self)
  void Internal_Cull(ScriptableCullingParameters& parameters, ScriptableRenderContext renderLoop, IntPtr results)
  void InitializeSortSettings(Camera camera, SortingSettings& sortingSettings)
  void Submit_Internal()
  bool SubmitForRenderPassValidation_Internal()
  void GetCameras_Internal(Type listType, object resultList)
  void DrawRenderers_Internal(IntPtr cullResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, ShaderTagId tagName, bool isPassTagName, IntPtr tagValues, IntPtr stateBlocks, int stateCount)
  void DrawShadows_Internal(IntPtr shadowDrawingSettings)
  void EmitGeometryForCamera(Camera camera)
  void ExecuteCommandBuffer_Internal(CommandBuffer commandBuffer)
  void ExecuteCommandBufferAsync_Internal(CommandBuffer commandBuffer, ComputeQueueType queueType)
  void SetupCameraProperties_Internal(Camera camera, bool stereoSetup, int eye)
  void StereoEndRender_Internal(Camera camera, int eye, bool isFinalPass)
  void StartMultiEye_Internal(Camera camera, int eye)
  void StopMultiEye_Internal(Camera camera)
  void DrawSkybox_Internal(Camera camera)
  void InvokeOnRenderObjectCallback_Internal()
  void DrawGizmos_Internal(Camera camera, GizmoSubset gizmoSubset)
  void DrawWireOverlay_Impl(Camera camera)
  void DrawUIOverlay_Internal(Camera camera)
  IntPtr Internal_GetPtr()
  RendererList CreateRendererList_Internal(IntPtr cullResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, ShaderTagId tagName, bool isPassTagName, IntPtr tagValues, IntPtr stateBlocks, int stateCount)
  void PrepareRendererListsAsync_Internal(object rendererLists)
  RendererListStatus QueryRendererListStatus_Internal(RendererList handle)
  void .ctor(IntPtr ptr)
  void BeginRenderPass(int width, int height, int samples, NativeArray`1<AttachmentDescriptor> attachments, int depthAttachmentIndex)
  ScopedRenderPass BeginScopedRenderPass(int width, int height, int samples, NativeArray`1<AttachmentDescriptor> attachments, int depthAttachmentIndex)
  void BeginSubPass(NativeArray`1<int> colors, NativeArray`1<int> inputs, bool isDepthReadOnly, bool isStencilReadOnly)
  void BeginSubPass(NativeArray`1<int> colors, NativeArray`1<int> inputs, bool isDepthStencilReadOnly)
  void BeginSubPass(NativeArray`1<int> colors, bool isDepthReadOnly, bool isStencilReadOnly)
  void BeginSubPass(NativeArray`1<int> colors, bool isDepthStencilReadOnly)
  ScopedSubPass BeginScopedSubPass(NativeArray`1<int> colors, NativeArray`1<int> inputs, bool isDepthReadOnly, bool isStencilReadOnly)
  ScopedSubPass BeginScopedSubPass(NativeArray`1<int> colors, NativeArray`1<int> inputs, bool isDepthStencilReadOnly)
  ScopedSubPass BeginScopedSubPass(NativeArray`1<int> colors, bool isDepthReadOnly, bool isStencilReadOnly)
  ScopedSubPass BeginScopedSubPass(NativeArray`1<int> colors, bool isDepthStencilReadOnly)
  void EndSubPass()
  void EndRenderPass()
  void Submit()
  bool SubmitForRenderPassValidation()
  void GetCameras(List`1<Camera> results)
  void DrawRenderers(CullingResults cullingResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings)
  void DrawRenderers(CullingResults cullingResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, RenderStateBlock& stateBlock)
  void DrawRenderers(CullingResults cullingResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, NativeArray`1<ShaderTagId> renderTypes, NativeArray`1<RenderStateBlock> stateBlocks)
  void DrawRenderers(CullingResults cullingResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, ShaderTagId tagName, bool isPassTagName, NativeArray`1<ShaderTagId> tagValues, NativeArray`1<RenderStateBlock> stateBlocks)
  void DrawShadows(ShadowDrawingSettings& settings)
  void ExecuteCommandBuffer(CommandBuffer commandBuffer)
  void ExecuteCommandBufferAsync(CommandBuffer commandBuffer, ComputeQueueType queueType)
  void SetupCameraProperties(Camera camera, bool stereoSetup)
  void SetupCameraProperties(Camera camera, bool stereoSetup, int eye)
  void StereoEndRender(Camera camera)
  void StereoEndRender(Camera camera, int eye)
  void StereoEndRender(Camera camera, int eye, bool isFinalPass)
  void StartMultiEye(Camera camera)
  void StartMultiEye(Camera camera, int eye)
  void StopMultiEye(Camera camera)
  void DrawSkybox(Camera camera)
  void InvokeOnRenderObjectCallback()
  void DrawGizmos(Camera camera, GizmoSubset gizmoSubset)
  void DrawWireOverlay(Camera camera)
  void DrawUIOverlay(Camera camera)
  CullingResults Cull(ScriptableCullingParameters& parameters)
  void Validate()
  bool Equals(ScriptableRenderContext other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(ScriptableRenderContext left, ScriptableRenderContext right)
  bool op_Inequality(ScriptableRenderContext left, ScriptableRenderContext right)
  RendererList CreateRendererList(RendererListDesc desc)
  void PrepareRendererListsAsync(List`1<RendererList> rendererLists)
  RendererListStatus QueryRendererListStatus(RendererList rendererList)
  void .cctor()
  void Internal_Cull_Injected(ScriptableCullingParameters& parameters, ScriptableRenderContext& renderLoop, IntPtr results)
  void Submit_Internal_Injected(ScriptableRenderContext& _unity_self)
  bool SubmitForRenderPassValidation_Internal_Injected(ScriptableRenderContext& _unity_self)
  void GetCameras_Internal_Injected(ScriptableRenderContext& _unity_self, Type listType, object resultList)
  void DrawRenderers_Internal_Injected(ScriptableRenderContext& _unity_self, IntPtr cullResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, ShaderTagId& tagName, bool isPassTagName, IntPtr tagValues, IntPtr stateBlocks, int stateCount)
  void DrawShadows_Internal_Injected(ScriptableRenderContext& _unity_self, IntPtr shadowDrawingSettings)
  void ExecuteCommandBuffer_Internal_Injected(ScriptableRenderContext& _unity_self, CommandBuffer commandBuffer)
  void ExecuteCommandBufferAsync_Internal_Injected(ScriptableRenderContext& _unity_self, CommandBuffer commandBuffer, ComputeQueueType queueType)
  void SetupCameraProperties_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera, bool stereoSetup, int eye)
  void StereoEndRender_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera, int eye, bool isFinalPass)
  void StartMultiEye_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera, int eye)
  void StopMultiEye_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera)
  void DrawSkybox_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera)
  void InvokeOnRenderObjectCallback_Internal_Injected(ScriptableRenderContext& _unity_self)
  void DrawGizmos_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera, GizmoSubset gizmoSubset)
  void DrawWireOverlay_Impl_Injected(ScriptableRenderContext& _unity_self, Camera camera)
  void DrawUIOverlay_Internal_Injected(ScriptableRenderContext& _unity_self, Camera camera)
  void CreateRendererList_Internal_Injected(ScriptableRenderContext& _unity_self, IntPtr cullResults, DrawingSettings& drawingSettings, FilteringSettings& filteringSettings, ShaderTagId& tagName, bool isPassTagName, IntPtr tagValues, IntPtr stateBlocks, int stateCount, RendererList& ret)
  void PrepareRendererListsAsync_Internal_Injected(ScriptableRenderContext& _unity_self, object rendererLists)
  RendererListStatus QueryRendererListStatus_Internal_Injected(ScriptableRenderContext& _unity_self, RendererList& handle)
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderTagId
Наследуется от: ValueType
Поля:
  ShaderTagId none
  int m_Id
Свойства:
  int id
  string name
Методы:
  void .ctor(string name)
  int get_id()
  void set_id(int value)
  string get_name()
  bool Equals(object obj)
  bool Equals(ShaderTagId other)
  int GetHashCode()
  bool op_Equality(ShaderTagId tag1, ShaderTagId tag2)
  bool op_Inequality(ShaderTagId tag1, ShaderTagId tag2)
  ShaderTagId op_Explicit(string name)
  string op_Explicit(ShaderTagId tagId)
--------------------------------------------------
Класс: UnityEngine.Rendering.ShadowDrawingSettings
Наследуется от: ValueType
Поля:
  CullingResults m_CullingResults
  int m_LightIndex
  int m_UseRenderingLayerMaskTest
  ShadowSplitData m_SplitData
  ShadowObjectsFilter m_ObjectsFilter
Свойства:
  CullingResults cullingResults
  int lightIndex
  bool useRenderingLayerMaskTest
  ShadowSplitData splitData
  ShadowObjectsFilter objectsFilter
Методы:
  CullingResults get_cullingResults()
  void set_cullingResults(CullingResults value)
  int get_lightIndex()
  void set_lightIndex(int value)
  bool get_useRenderingLayerMaskTest()
  void set_useRenderingLayerMaskTest(bool value)
  ShadowSplitData get_splitData()
  void set_splitData(ShadowSplitData value)
  ShadowObjectsFilter get_objectsFilter()
  void set_objectsFilter(ShadowObjectsFilter value)
  void .ctor(CullingResults cullingResults, int lightIndex)
  bool Equals(ShadowDrawingSettings other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(ShadowDrawingSettings left, ShadowDrawingSettings right)
  bool op_Inequality(ShadowDrawingSettings left, ShadowDrawingSettings right)
--------------------------------------------------
Класс: UnityEngine.Rendering.ShadowSplitData
Наследуется от: ValueType
Поля:
  int k_MaximumCullingPlaneCount
  int maximumCullingPlaneCount
  int m_CullingPlaneCount
  <m_CullingPlanes>e__FixedBuffer m_CullingPlanes
  Vector4 m_CullingSphere
  float m_ShadowCascadeBlendCullingFactor
  float m_CullingNearPlane
Свойства:
  int cullingPlaneCount
  Vector4 cullingSphere
  float shadowCascadeBlendCullingFactor
Методы:
  int get_cullingPlaneCount()
  void set_cullingPlaneCount(int value)
  Vector4 get_cullingSphere()
  void set_cullingSphere(Vector4 value)
  float get_shadowCascadeBlendCullingFactor()
  void set_shadowCascadeBlendCullingFactor(float value)
  Plane GetCullingPlane(int index)
  void SetCullingPlane(int index, Plane plane)
  bool Equals(ShadowSplitData other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(ShadowSplitData left, ShadowSplitData right)
  bool op_Inequality(ShadowSplitData left, ShadowSplitData right)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.SortingCriteria
Наследуется от: Enum
Поля:
  int value__
  SortingCriteria None
  SortingCriteria SortingLayer
  SortingCriteria RenderQueue
  SortingCriteria BackToFront
  SortingCriteria QuantizedFrontToBack
  SortingCriteria OptimizeStateChanges
  SortingCriteria CanvasOrder
  SortingCriteria RendererPriority
  SortingCriteria CommonOpaque
  SortingCriteria CommonTransparent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.SortingLayerRange
Наследуется от: ValueType
Поля:
  short m_LowerBound
  short m_UpperBound
Свойства:
  short lowerBound
  short upperBound
  SortingLayerRange all
Методы:
  void .ctor(short lowerBound, short upperBound)
  short get_lowerBound()
  void set_lowerBound(short value)
  short get_upperBound()
  void set_upperBound(short value)
  SortingLayerRange get_all()
  bool Equals(SortingLayerRange other)
  bool Equals(object obj)
  bool op_Inequality(SortingLayerRange lhs, SortingLayerRange rhs)
  bool op_Equality(SortingLayerRange lhs, SortingLayerRange rhs)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.Rendering.DistanceMetric
Наследуется от: Enum
Поля:
  int value__
  DistanceMetric Perspective
  DistanceMetric Orthographic
  DistanceMetric CustomAxis
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.SortingSettings
Наследуется от: ValueType
Поля:
  Matrix4x4 m_WorldToCameraMatrix
  Vector3 m_CameraPosition
  Vector3 m_CustomAxis
  SortingCriteria m_Criteria
  DistanceMetric m_DistanceMetric
  Matrix4x4 m_PreviousVPMatrix
  Matrix4x4 m_NonJitteredVPMatrix
Свойства:
  Matrix4x4 worldToCameraMatrix
  Vector3 cameraPosition
  Vector3 customAxis
  SortingCriteria criteria
  DistanceMetric distanceMetric
Методы:
  void .ctor(Camera camera)
  Matrix4x4 get_worldToCameraMatrix()
  void set_worldToCameraMatrix(Matrix4x4 value)
  Vector3 get_cameraPosition()
  void set_cameraPosition(Vector3 value)
  Vector3 get_customAxis()
  void set_customAxis(Vector3 value)
  SortingCriteria get_criteria()
  void set_criteria(SortingCriteria value)
  DistanceMetric get_distanceMetric()
  void set_distanceMetric(DistanceMetric value)
  bool Equals(SortingSettings other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(SortingSettings left, SortingSettings right)
  bool op_Inequality(SortingSettings left, SortingSettings right)
--------------------------------------------------
Класс: UnityEngine.Rendering.StencilState
Наследуется от: ValueType
Поля:
  byte m_Enabled
  byte m_ReadMask
  byte m_WriteMask
  byte m_Padding
  byte m_CompareFunctionFront
  byte m_PassOperationFront
  byte m_FailOperationFront
  byte m_ZFailOperationFront
  byte m_CompareFunctionBack
  byte m_PassOperationBack
  byte m_FailOperationBack
  byte m_ZFailOperationBack
Свойства:
  StencilState defaultValue
  bool enabled
  byte readMask
  byte writeMask
  CompareFunction compareFunctionFront
  StencilOp passOperationFront
  StencilOp failOperationFront
  StencilOp zFailOperationFront
  CompareFunction compareFunctionBack
  StencilOp passOperationBack
  StencilOp failOperationBack
  StencilOp zFailOperationBack
Методы:
  StencilState get_defaultValue()
  void .ctor(bool enabled, byte readMask, byte writeMask, CompareFunction compareFunction, StencilOp passOperation, StencilOp failOperation, StencilOp zFailOperation)
  void .ctor(bool enabled, byte readMask, byte writeMask, CompareFunction compareFunctionFront, StencilOp passOperationFront, StencilOp failOperationFront, StencilOp zFailOperationFront, CompareFunction compareFunctionBack, StencilOp passOperationBack, StencilOp failOperationBack, StencilOp zFailOperationBack)
  bool get_enabled()
  void set_enabled(bool value)
  byte get_readMask()
  void set_readMask(byte value)
  byte get_writeMask()
  void set_writeMask(byte value)
  void SetCompareFunction(CompareFunction value)
  void SetPassOperation(StencilOp value)
  void SetFailOperation(StencilOp value)
  void SetZFailOperation(StencilOp value)
  CompareFunction get_compareFunctionFront()
  void set_compareFunctionFront(CompareFunction value)
  StencilOp get_passOperationFront()
  void set_passOperationFront(StencilOp value)
  StencilOp get_failOperationFront()
  void set_failOperationFront(StencilOp value)
  StencilOp get_zFailOperationFront()
  void set_zFailOperationFront(StencilOp value)
  CompareFunction get_compareFunctionBack()
  void set_compareFunctionBack(CompareFunction value)
  StencilOp get_passOperationBack()
  void set_passOperationBack(StencilOp value)
  StencilOp get_failOperationBack()
  void set_failOperationBack(StencilOp value)
  StencilOp get_zFailOperationBack()
  void set_zFailOperationBack(StencilOp value)
  bool Equals(StencilState other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(StencilState left, StencilState right)
  bool op_Inequality(StencilState left, StencilState right)
--------------------------------------------------
Класс: UnityEngine.Rendering.SupportedRenderingFeatures
Наследуется от: object
Поля:
  SupportedRenderingFeatures s_Active
  ReflectionProbeModes <reflectionProbeModes>k__BackingField
  LightmapMixedBakeModes <defaultMixedLightingModes>k__BackingField
  LightmapMixedBakeModes <mixedLightingModes>k__BackingField
  LightmapBakeType <lightmapBakeTypes>k__BackingField
  LightmapsMode <lightmapsModes>k__BackingField
  bool <enlightenLightmapper>k__BackingField
  bool <enlighten>k__BackingField
  bool <lightProbeProxyVolumes>k__BackingField
  bool <motionVectors>k__BackingField
  bool <receiveShadows>k__BackingField
  bool <reflectionProbes>k__BackingField
  bool <reflectionProbesBlendDistance>k__BackingField
  bool <rendererPriority>k__BackingField
  bool <rendersUIOverlay>k__BackingField
  bool <overridesEnvironmentLighting>k__BackingField
  bool <overridesFog>k__BackingField
  bool <overridesRealtimeReflectionProbes>k__BackingField
  bool <overridesOtherLightingSettings>k__BackingField
  bool <editableMaterialRenderQueue>k__BackingField
  bool <overridesLODBias>k__BackingField
  bool <overridesMaximumLODLevel>k__BackingField
  bool <rendererProbes>k__BackingField
  bool <particleSystemInstancing>k__BackingField
  bool <autoAmbientProbeBaking>k__BackingField
  bool <autoDefaultReflectionProbeBaking>k__BackingField
  bool <overridesShadowmask>k__BackingField
  string <overrideShadowmaskMessage>k__BackingField
Свойства:
  SupportedRenderingFeatures active
  ReflectionProbeModes reflectionProbeModes
  LightmapMixedBakeModes defaultMixedLightingModes
  LightmapMixedBakeModes mixedLightingModes
  LightmapBakeType lightmapBakeTypes
  LightmapsMode lightmapsModes
  bool enlightenLightmapper
  bool enlighten
  bool lightProbeProxyVolumes
  bool motionVectors
  bool receiveShadows
  bool reflectionProbes
  bool reflectionProbesBlendDistance
  bool rendererPriority
  bool rendersUIOverlay
  bool overridesEnvironmentLighting
  bool overridesFog
  bool overridesRealtimeReflectionProbes
  bool overridesOtherLightingSettings
  bool editableMaterialRenderQueue
  bool overridesLODBias
  bool overridesMaximumLODLevel
  bool rendererProbes
  bool particleSystemInstancing
  bool autoAmbientProbeBaking
  bool autoDefaultReflectionProbeBaking
  bool overridesShadowmask
  string overrideShadowmaskMessage
  string shadowmaskMessage
  bool terrainDetailUnsupported
Методы:
  SupportedRenderingFeatures get_active()
  void set_active(SupportedRenderingFeatures value)
  ReflectionProbeModes get_reflectionProbeModes()
  void set_reflectionProbeModes(ReflectionProbeModes value)
  LightmapMixedBakeModes get_defaultMixedLightingModes()
  void set_defaultMixedLightingModes(LightmapMixedBakeModes value)
  LightmapMixedBakeModes get_mixedLightingModes()
  void set_mixedLightingModes(LightmapMixedBakeModes value)
  LightmapBakeType get_lightmapBakeTypes()
  void set_lightmapBakeTypes(LightmapBakeType value)
  LightmapsMode get_lightmapsModes()
  void set_lightmapsModes(LightmapsMode value)
  bool get_enlightenLightmapper()
  void set_enlightenLightmapper(bool value)
  bool get_enlighten()
  void set_enlighten(bool value)
  bool get_lightProbeProxyVolumes()
  void set_lightProbeProxyVolumes(bool value)
  bool get_motionVectors()
  void set_motionVectors(bool value)
  bool get_receiveShadows()
  void set_receiveShadows(bool value)
  bool get_reflectionProbes()
  void set_reflectionProbes(bool value)
  bool get_reflectionProbesBlendDistance()
  void set_reflectionProbesBlendDistance(bool value)
  bool get_rendererPriority()
  void set_rendererPriority(bool value)
  bool get_rendersUIOverlay()
  void set_rendersUIOverlay(bool value)
  bool get_overridesEnvironmentLighting()
  void set_overridesEnvironmentLighting(bool value)
  bool get_overridesFog()
  void set_overridesFog(bool value)
  bool get_overridesRealtimeReflectionProbes()
  void set_overridesRealtimeReflectionProbes(bool value)
  bool get_overridesOtherLightingSettings()
  void set_overridesOtherLightingSettings(bool value)
  bool get_editableMaterialRenderQueue()
  void set_editableMaterialRenderQueue(bool value)
  bool get_overridesLODBias()
  void set_overridesLODBias(bool value)
  bool get_overridesMaximumLODLevel()
  void set_overridesMaximumLODLevel(bool value)
  bool get_rendererProbes()
  void set_rendererProbes(bool value)
  bool get_particleSystemInstancing()
  void set_particleSystemInstancing(bool value)
  bool get_autoAmbientProbeBaking()
  void set_autoAmbientProbeBaking(bool value)
  bool get_autoDefaultReflectionProbeBaking()
  void set_autoDefaultReflectionProbeBaking(bool value)
  bool get_overridesShadowmask()
  void set_overridesShadowmask(bool value)
  string get_overrideShadowmaskMessage()
  void set_overrideShadowmaskMessage(string value)
  string get_shadowmaskMessage()
  MixedLightingMode FallbackMixedLightingMode()
  void FallbackMixedLightingModeByRef(IntPtr fallbackModePtr)
  bool IsMixedLightingModeSupported(MixedLightingMode mixedMode)
  void IsMixedLightingModeSupportedByRef(MixedLightingMode mixedMode, IntPtr isSupportedPtr)
  bool IsLightmapBakeTypeSupported(LightmapBakeType bakeType)
  void IsLightmapBakeTypeSupportedByRef(LightmapBakeType bakeType, IntPtr isSupportedPtr)
  bool IsLightmapsModeSupported(LightmapsMode mode)
  void IsLightmapsModeSupportedByRef(LightmapsMode mode, IntPtr isSupportedPtr)
  bool IsLightmapperSupported(int lightmapper)
  void IsLightmapperSupportedByRef(int lightmapper, IntPtr isSupportedPtr)
  void IsUIOverlayRenderedBySRP(IntPtr isSupportedPtr)
  void IsAutoAmbientProbeBakingSupported(IntPtr isSupportedPtr)
  void IsAutoDefaultReflectionProbeBakingSupported(IntPtr isSupportedPtr)
  int FallbackLightmapper()
  void FallbackLightmapperByRef(IntPtr lightmapperPtr)
  bool get_terrainDetailUnsupported()
  void set_terrainDetailUnsupported(bool value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.VisibleLight
Наследуется от: ValueType
Поля:
  LightType m_LightType
  Color m_FinalColor
  Rect m_ScreenRect
  Matrix4x4 m_LocalToWorldMatrix
  float m_Range
  float m_SpotAngle
  int m_InstanceId
  VisibleLightFlags m_Flags
Свойства:
  Light light
  LightType lightType
  Color finalColor
  Rect screenRect
  Matrix4x4 localToWorldMatrix
  float range
  float spotAngle
  bool intersectsNearPlane
  bool intersectsFarPlane
Методы:
  Light get_light()
  LightType get_lightType()
  void set_lightType(LightType value)
  Color get_finalColor()
  void set_finalColor(Color value)
  Rect get_screenRect()
  void set_screenRect(Rect value)
  Matrix4x4 get_localToWorldMatrix()
  void set_localToWorldMatrix(Matrix4x4 value)
  float get_range()
  void set_range(float value)
  float get_spotAngle()
  void set_spotAngle(float value)
  bool get_intersectsNearPlane()
  void set_intersectsNearPlane(bool value)
  bool get_intersectsFarPlane()
  void set_intersectsFarPlane(bool value)
  bool Equals(VisibleLight other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(VisibleLight left, VisibleLight right)
  bool op_Inequality(VisibleLight left, VisibleLight right)
--------------------------------------------------
Класс: UnityEngine.Rendering.VisibleLightFlags
Наследуется от: Enum
Поля:
  int value__
  VisibleLightFlags IntersectsNearPlane
  VisibleLightFlags IntersectsFarPlane
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.VisibleReflectionProbe
Наследуется от: ValueType
Поля:
  Bounds m_Bounds
  Matrix4x4 m_LocalToWorldMatrix
  Vector4 m_HdrData
  Vector3 m_Center
  float m_BlendDistance
  int m_Importance
  int m_BoxProjection
  int m_InstanceId
  int m_TextureId
Свойства:
  Texture texture
  ReflectionProbe reflectionProbe
  Bounds bounds
  Matrix4x4 localToWorldMatrix
  Vector4 hdrData
  Vector3 center
  float blendDistance
  int importance
  bool isBoxProjection
Методы:
  Texture get_texture()
  ReflectionProbe get_reflectionProbe()
  Bounds get_bounds()
  void set_bounds(Bounds value)
  Matrix4x4 get_localToWorldMatrix()
  void set_localToWorldMatrix(Matrix4x4 value)
  Vector4 get_hdrData()
  void set_hdrData(Vector4 value)
  Vector3 get_center()
  void set_center(Vector3 value)
  float get_blendDistance()
  void set_blendDistance(float value)
  int get_importance()
  void set_importance(int value)
  bool get_isBoxProjection()
  void set_isBoxProjection(bool value)
  bool Equals(VisibleReflectionProbe other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(VisibleReflectionProbe left, VisibleReflectionProbe right)
  bool op_Inequality(VisibleReflectionProbe left, VisibleReflectionProbe right)
--------------------------------------------------
Класс: UnityEngine.Rendering.GlobalKeyword
Наследуется от: ValueType
Поля:
  string m_Name
  UInt32 m_Index
Свойства:
  string name
Методы:
  UInt32 GetGlobalKeywordCount()
  UInt32 GetGlobalKeywordIndex(string keyword)
  void CreateGlobalKeyword(string keyword)
  string get_name()
  GlobalKeyword Create(string name)
  void .ctor(string name)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.Rendering.LocalKeyword
Наследуется от: ValueType
Поля:
  LocalKeywordSpace m_SpaceInfo
  string m_Name
  UInt32 m_Index
Свойства:
  string name
  bool isOverridable
  bool isValid
  ShaderKeywordType type
Методы:
  bool IsOverridable(LocalKeyword kw)
  UInt32 GetShaderKeywordCount(Shader shader)
  UInt32 GetShaderKeywordIndex(Shader shader, string keyword)
  UInt32 GetComputeShaderKeywordCount(ComputeShader shader)
  UInt32 GetComputeShaderKeywordIndex(ComputeShader shader, string keyword)
  ShaderKeywordType GetKeywordType(LocalKeywordSpace spaceInfo, UInt32 keyword)
  bool IsValid(LocalKeywordSpace spaceInfo, UInt32 keyword)
  string get_name()
  bool get_isOverridable()
  bool get_isValid()
  ShaderKeywordType get_type()
  void .ctor(Shader shader, string name)
  void .ctor(ComputeShader shader, string name)
  string ToString()
  bool Equals(object o)
  bool Equals(LocalKeyword rhs)
  bool op_Equality(LocalKeyword lhs, LocalKeyword rhs)
  bool op_Inequality(LocalKeyword lhs, LocalKeyword rhs)
  int GetHashCode()
  bool IsOverridable_Injected(LocalKeyword& kw)
  ShaderKeywordType GetKeywordType_Injected(LocalKeywordSpace& spaceInfo, UInt32 keyword)
  bool IsValid_Injected(LocalKeywordSpace& spaceInfo, UInt32 keyword)
--------------------------------------------------
Класс: UnityEngine.Rendering.LocalKeywordSpace
Наследуется от: ValueType
Поля:
  IntPtr m_KeywordSpace
Свойства:
  LocalKeyword[] keywords
  String[] keywordNames
  UInt32 keywordCount
Методы:
  LocalKeyword[] GetKeywords()
  String[] GetKeywordNames()
  UInt32 GetKeywordCount()
  LocalKeyword GetKeyword(string name)
  LocalKeyword[] get_keywords()
  String[] get_keywordNames()
  UInt32 get_keywordCount()
  LocalKeyword FindKeyword(string name)
  bool Equals(object o)
  bool Equals(LocalKeywordSpace rhs)
  bool op_Equality(LocalKeywordSpace lhs, LocalKeywordSpace rhs)
  bool op_Inequality(LocalKeywordSpace lhs, LocalKeywordSpace rhs)
  int GetHashCode()
  LocalKeyword[] GetKeywords_Injected(LocalKeywordSpace& _unity_self)
  String[] GetKeywordNames_Injected(LocalKeywordSpace& _unity_self)
  UInt32 GetKeywordCount_Injected(LocalKeywordSpace& _unity_self)
  void GetKeyword_Injected(LocalKeywordSpace& _unity_self, string name, LocalKeyword& ret)
--------------------------------------------------
Класс: UnityEngine.Rendering.PassIdentifier
Наследуется от: ValueType
Поля:
  UInt32 m_SubShaderIndex
  UInt32 m_PassIndex
Свойства:
  UInt32 SubshaderIndex
  UInt32 PassIndex
Методы:
  UInt32 get_SubshaderIndex()
  UInt32 get_PassIndex()
  bool Equals(object o)
  bool Equals(PassIdentifier rhs)
  bool op_Equality(PassIdentifier lhs, PassIdentifier rhs)
  bool op_Inequality(PassIdentifier lhs, PassIdentifier rhs)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.Rendering.PlatformKeywordSet
Наследуется от: ValueType
Поля:
  int k_SizeInBits
  ulong m_Bits
Свойства:
Методы:
  ulong ComputeKeywordMask(BuiltinShaderDefine define)
  bool IsEnabled(BuiltinShaderDefine define)
  void Enable(BuiltinShaderDefine define)
  void Disable(BuiltinShaderDefine define)
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderKeywordType
Наследуется от: Enum
Поля:
  int value__
  ShaderKeywordType None
  ShaderKeywordType BuiltinDefault
  ShaderKeywordType BuiltinExtra
  ShaderKeywordType BuiltinAutoStripped
  ShaderKeywordType UserDefined
  ShaderKeywordType Plugin
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderKeyword
Наследуется от: ValueType
Поля:
  string m_Name
  UInt32 m_Index
  bool m_IsLocal
  bool m_IsCompute
  bool m_IsValid
Свойства:
  string name
  int index
Методы:
  UInt32 GetGlobalKeywordCount()
  UInt32 GetGlobalKeywordIndex(string keyword)
  UInt32 GetKeywordCount(Shader shader)
  UInt32 GetKeywordIndex(Shader shader, string keyword)
  UInt32 GetComputeShaderKeywordCount(ComputeShader shader)
  UInt32 GetComputeShaderKeywordIndex(ComputeShader shader, string keyword)
  void CreateGlobalKeyword(string keyword)
  ShaderKeywordType GetGlobalShaderKeywordType(UInt32 keyword)
  string get_name()
  ShaderKeywordType GetGlobalKeywordType(ShaderKeyword index)
  void .ctor(string keywordName)
  void .ctor(Shader shader, string keywordName)
  void .ctor(ComputeShader shader, string keywordName)
  bool IsKeywordLocal(ShaderKeyword keyword)
  bool IsValid()
  bool IsValid(ComputeShader shader)
  bool IsValid(Shader shader)
  int get_index()
  string ToString()
  ShaderKeywordType GetKeywordType(Shader shader, ShaderKeyword index)
  ShaderKeywordType GetKeywordType(ComputeShader shader, ShaderKeyword index)
  string GetGlobalKeywordName(ShaderKeyword index)
  string GetKeywordName(Shader shader, ShaderKeyword index)
  string GetKeywordName(ComputeShader shader, ShaderKeyword index)
  ShaderKeywordType GetKeywordType()
  string GetKeywordName()
  string GetName()
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderKeywordSet
Наследуется от: ValueType
Поля:
  IntPtr m_KeywordState
  IntPtr m_Shader
  IntPtr m_ComputeShader
  ulong m_StateIndex
Свойства:
Методы:
  bool IsGlobalKeywordEnabled(ShaderKeywordSet state, UInt32 index)
  bool IsKeywordEnabled(ShaderKeywordSet state, LocalKeywordSpace keywordSpace, UInt32 index)
  bool IsKeywordNameEnabled(ShaderKeywordSet state, string name)
  void EnableGlobalKeyword(ShaderKeywordSet state, UInt32 index)
  void EnableKeywordName(ShaderKeywordSet state, string name)
  void DisableGlobalKeyword(ShaderKeywordSet state, UInt32 index)
  void DisableKeywordName(ShaderKeywordSet state, string name)
  ShaderKeyword[] GetEnabledKeywords(ShaderKeywordSet state)
  void CheckKeywordCompatible(ShaderKeyword keyword)
  bool IsEnabled(ShaderKeyword keyword)
  bool IsEnabled(GlobalKeyword keyword)
  bool IsEnabled(LocalKeyword keyword)
  void Enable(ShaderKeyword keyword)
  void Disable(ShaderKeyword keyword)
  ShaderKeyword[] GetShaderKeywords()
  bool IsGlobalKeywordEnabled_Injected(ShaderKeywordSet& state, UInt32 index)
  bool IsKeywordEnabled_Injected(ShaderKeywordSet& state, LocalKeywordSpace& keywordSpace, UInt32 index)
  bool IsKeywordNameEnabled_Injected(ShaderKeywordSet& state, string name)
  void EnableGlobalKeyword_Injected(ShaderKeywordSet& state, UInt32 index)
  void EnableKeywordName_Injected(ShaderKeywordSet& state, string name)
  void DisableGlobalKeyword_Injected(ShaderKeywordSet& state, UInt32 index)
  void DisableKeywordName_Injected(ShaderKeywordSet& state, string name)
  ShaderKeyword[] GetEnabledKeywords_Injected(ShaderKeywordSet& state)
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderPropertyType
Наследуется от: Enum
Поля:
  int value__
  ShaderPropertyType Color
  ShaderPropertyType Vector
  ShaderPropertyType Float
  ShaderPropertyType Range
  ShaderPropertyType Texture
  ShaderPropertyType Int
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.ShaderPropertyFlags
Наследуется от: Enum
Поля:
  int value__
  ShaderPropertyFlags None
  ShaderPropertyFlags HideInInspector
  ShaderPropertyFlags PerRendererData
  ShaderPropertyFlags NoScaleOffset
  ShaderPropertyFlags Normal
  ShaderPropertyFlags HDR
  ShaderPropertyFlags Gamma
  ShaderPropertyFlags NonModifiableTextureData
  ShaderPropertyFlags MainTexture
  ShaderPropertyFlags MainColor
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.SortingGroup
Наследуется от: Behaviour
Поля:
Свойства:
  int invalidSortingGroupID
  string sortingLayerName
  int sortingLayerID
  int sortingOrder
  int sortingGroupID
  int sortingGroupOrder
  int index
Методы:
  int get_invalidSortingGroupID()
  void UpdateAllSortingGroups()
  SortingGroup GetSortingGroupByIndex(int index)
  string get_sortingLayerName()
  void set_sortingLayerName(string value)
  int get_sortingLayerID()
  void set_sortingLayerID(int value)
  int get_sortingOrder()
  void set_sortingOrder(int value)
  int get_sortingGroupID()
  int get_sortingGroupOrder()
  int get_index()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.RendererUtils.RendererListStatus
Наследуется от: Enum
Поля:
  int value__
  RendererListStatus kRendererListInvalid
  RendererListStatus kRendererListProcessing
  RendererListStatus kRendererListEmpty
  RendererListStatus kRendererListPopulated
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.RendererUtils.RendererList
Наследуется от: ValueType
Поля:
  UIntPtr context
  UInt32 index
  UInt32 frame
  RendererList nullRendererList
Свойства:
  bool isValid
Методы:
  bool get_isValid()
  void .ctor(UIntPtr ctx, UInt32 indx)
  void .cctor()
  bool get_isValid_Injected(RendererList& _unity_self)
--------------------------------------------------
Класс: UnityEngine.Rendering.RendererUtils.RendererListDesc
Наследуется от: ValueType
Поля:
  SortingCriteria sortingCriteria
  PerObjectData rendererConfiguration
  RenderQueueRange renderQueueRange
  Nullable`1<RenderStateBlock> stateBlock
  Material overrideMaterial
  bool excludeObjectMotionVectors
  int layerMask
  int overrideMaterialPassIndex
  CullingResults <cullingResult>k__BackingField
  Camera <camera>k__BackingField
  ShaderTagId <passName>k__BackingField
  ShaderTagId[] <passNames>k__BackingField
Свойства:
  CullingResults cullingResult
  Camera camera
  ShaderTagId passName
  ShaderTagId[] passNames
Методы:
  CullingResults get_cullingResult()
  void set_cullingResult(CullingResults value)
  Camera get_camera()
  void set_camera(Camera value)
  ShaderTagId get_passName()
  void set_passName(ShaderTagId value)
  ShaderTagId[] get_passNames()
  void set_passNames(ShaderTagId[] value)
  void .ctor(ShaderTagId passName, CullingResults cullingResult, Camera camera)
  void .ctor(ShaderTagId[] passNames, CullingResults cullingResult, Camera camera)
  bool IsValid()
--------------------------------------------------
Класс: UnityEngine.Rendering.RendererUtils.RendererListParams
Наследуется от: ValueType
Поля:
  ShaderTagId s_EmptyName
  RendererListParams nullRendererList
  bool <isValid>k__BackingField
  CullingResults cullingResult
  DrawingSettings drawSettings
  FilteringSettings filteringSettings
  Nullable`1<RenderStateBlock> stateBlock
Свойства:
  bool isValid
Методы:
  bool get_isValid()
  void set_isValid(bool value)
  RendererListParams Create(RendererListDesc& desc)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.IO.ThreadIORestrictionMode
Наследуется от: Enum
Поля:
  int value__
  ThreadIORestrictionMode Allowed
  ThreadIORestrictionMode TreatAsError
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.IO.File
Наследуется от: object
Поля:
Свойства:
  ulong totalOpenCalls
  ulong totalCloseCalls
  ulong totalReadCalls
  ulong totalWriteCalls
  ulong totalSeekCalls
  ulong totalZeroSeekCalls
  ulong totalFilesOpened
  ulong totalFilesClosed
  ulong totalBytesRead
  ulong totalBytesWritten
  bool recordZeroSeeks
  ThreadIORestrictionMode MainThreadIORestrictionMode
Методы:
  ulong get_totalOpenCalls()
  ulong get_totalCloseCalls()
  ulong get_totalReadCalls()
  ulong get_totalWriteCalls()
  ulong get_totalSeekCalls()
  ulong get_totalZeroSeekCalls()
  ulong get_totalFilesOpened()
  ulong get_totalFilesClosed()
  ulong get_totalBytesRead()
  ulong get_totalBytesWritten()
  void set_recordZeroSeeks(bool value)
  bool get_recordZeroSeeks()
  ThreadIORestrictionMode get_MainThreadIORestrictionMode()
  void set_MainThreadIORestrictionMode(ThreadIORestrictionMode value)
  void SetRecordZeroSeeks(bool enable)
  bool GetRecordZeroSeeks()
  ulong GetTotalOpenCalls()
  ulong GetTotalCloseCalls()
  ulong GetTotalReadCalls()
  ulong GetTotalWriteCalls()
  ulong GetTotalSeekCalls()
  ulong GetTotalZeroSeekCalls()
  ulong GetTotalFilesOpened()
  ulong GetTotalFilesClosed()
  ulong GetTotalBytesRead()
  ulong GetTotalBytesWritten()
  void SetMainThreadFileIORestriction(ThreadIORestrictionMode mode)
  ThreadIORestrictionMode GetMainThreadFileIORestriction()
--------------------------------------------------
Класс: UnityEngine.Playables.FrameData
Наследуется от: ValueType
Поля:
  ulong m_FrameID
  double m_DeltaTime
  float m_Weight
  float m_EffectiveWeight
  double m_EffectiveParentDelay
  float m_EffectiveParentSpeed
  float m_EffectiveSpeed
  Flags m_Flags
  PlayableOutput m_Output
Свойства:
  ulong frameId
  float deltaTime
  float weight
  float effectiveWeight
  double effectiveParentDelay
  float effectiveParentSpeed
  float effectiveSpeed
  EvaluationType evaluationType
  bool seekOccurred
  bool timeLooped
  bool timeHeld
  PlayableOutput output
  PlayState effectivePlayState
Методы:
  bool HasFlags(Flags flag)
  ulong get_frameId()
  float get_deltaTime()
  float get_weight()
  float get_effectiveWeight()
  double get_effectiveParentDelay()
  float get_effectiveParentSpeed()
  float get_effectiveSpeed()
  EvaluationType get_evaluationType()
  bool get_seekOccurred()
  bool get_timeLooped()
  bool get_timeHeld()
  PlayableOutput get_output()
  PlayState get_effectivePlayState()
--------------------------------------------------
Класс: UnityEngine.Playables.FrameRate
Наследуется от: ValueType
Поля:
  FrameRate k_24Fps
  FrameRate k_23_976Fps
  FrameRate k_25Fps
  FrameRate k_30Fps
  FrameRate k_29_97Fps
  FrameRate k_50Fps
  FrameRate k_60Fps
  FrameRate k_59_94Fps
  int m_Rate
Свойства:
  bool dropFrame
  double rate
Методы:
  bool get_dropFrame()
  double get_rate()
  void .ctor(UInt32 frameRate, bool drop)
  bool IsValid()
  bool Equals(FrameRate other)
  bool Equals(object obj)
  bool op_Equality(FrameRate a, FrameRate b)
  bool op_Inequality(FrameRate a, FrameRate b)
  bool op_LessThan(FrameRate a, FrameRate b)
  bool op_LessThanOrEqual(FrameRate a, FrameRate b)
  bool op_GreaterThan(FrameRate a, FrameRate b)
  bool op_GreaterThanOrEqual(FrameRate a, FrameRate b)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  int FrameRateToInt(FrameRate framerate)
  FrameRate DoubleToFrameRate(double framerate)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Playables.INotification
Поля:
Свойства:
  PropertyName id
Методы:
  PropertyName get_id()
--------------------------------------------------
Класс: UnityEngine.Playables.INotificationReceiver
Поля:
Свойства:
Методы:
  void OnNotify(Playable origin, INotification notification, object context)
--------------------------------------------------
Класс: UnityEngine.Playables.IPlayable
Поля:
Свойства:
Методы:
  PlayableHandle GetHandle()
--------------------------------------------------
Класс: UnityEngine.Playables.IPlayableBehaviour
Поля:
Свойства:
Методы:
  void OnGraphStart(Playable playable)
  void OnGraphStop(Playable playable)
  void OnPlayableCreate(Playable playable)
  void OnPlayableDestroy(Playable playable)
  void OnBehaviourPlay(Playable playable, FrameData info)
  void OnBehaviourPause(Playable playable, FrameData info)
  void PrepareFrame(Playable playable, FrameData info)
  void ProcessFrame(Playable playable, FrameData info, object playerData)
--------------------------------------------------
Класс: UnityEngine.Playables.IPlayableOutput
Поля:
Свойства:
Методы:
  PlayableOutputHandle GetHandle()
--------------------------------------------------
Класс: UnityEngine.Playables.Notification
Наследуется от: object
Поля:
  PropertyName <id>k__BackingField
Свойства:
  PropertyName id
Методы:
  void .ctor(string name)
  PropertyName get_id()
--------------------------------------------------
Класс: UnityEngine.Playables.DirectorWrapMode
Наследуется от: Enum
Поля:
  int value__
  DirectorWrapMode Hold
  DirectorWrapMode Loop
  DirectorWrapMode None
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Playables.Playable
Наследуется от: ValueType
Поля:
  PlayableHandle m_Handle
  Playable m_NullPlayable
Свойства:
  Playable Null
Методы:
  Playable get_Null()
  Playable Create(PlayableGraph graph, int inputCount)
  void .ctor(PlayableHandle handle)
  PlayableHandle GetHandle()
  bool IsPlayableOfType()
  Type GetPlayableType()
  bool Equals(Playable other)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Playables.IPlayableAsset
Поля:
Свойства:
  double duration
  IEnumerable`1<PlayableBinding> outputs
Методы:
  Playable CreatePlayable(PlayableGraph graph, GameObject owner)
  double get_duration()
  IEnumerable`1<PlayableBinding> get_outputs()
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableAsset
Наследуется от: ScriptableObject
Поля:
Свойства:
  double duration
  IEnumerable`1<PlayableBinding> outputs
Методы:
  Playable CreatePlayable(PlayableGraph graph, GameObject owner)
  double get_duration()
  IEnumerable`1<PlayableBinding> get_outputs()
  void Internal_CreatePlayable(PlayableAsset asset, PlayableGraph graph, GameObject go, IntPtr ptr)
  void Internal_GetPlayableAssetDuration(PlayableAsset asset, IntPtr ptrToDouble)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableBehaviour
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void OnGraphStart(Playable playable)
  void OnGraphStop(Playable playable)
  void OnPlayableCreate(Playable playable)
  void OnPlayableDestroy(Playable playable)
  void OnBehaviourDelay(Playable playable, FrameData info)
  void OnBehaviourPlay(Playable playable, FrameData info)
  void OnBehaviourPause(Playable playable, FrameData info)
  void PrepareData(Playable playable, FrameData info)
  void PrepareFrame(Playable playable, FrameData info)
  void ProcessFrame(Playable playable, FrameData info, object playerData)
  object Clone()
--------------------------------------------------
Класс: UnityEngine.Playables.DataStreamType
Наследуется от: Enum
Поля:
  int value__
  DataStreamType Animation
  DataStreamType Audio
  DataStreamType Texture
  DataStreamType None
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableBinding
Наследуется от: ValueType
Поля:
  string m_StreamName
  Object m_SourceObject
  Type m_SourceBindingType
  CreateOutputMethod m_CreateOutputMethod
  PlayableBinding[] None
  double DefaultDuration
Свойства:
  string streamName
  Object sourceObject
  Type outputTargetType
  Type sourceBindingType
  DataStreamType streamType
Методы:
  string get_streamName()
  void set_streamName(string value)
  Object get_sourceObject()
  void set_sourceObject(Object value)
  Type get_outputTargetType()
  Type get_sourceBindingType()
  void set_sourceBindingType(Type value)
  DataStreamType get_streamType()
  void set_streamType(DataStreamType value)
  PlayableOutput CreateOutput(PlayableGraph graph)
  PlayableBinding CreateInternal(string name, Object sourceObject, Type sourceType, CreateOutputMethod createFunction)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableTraversalMode
Наследуется от: Enum
Поля:
  int value__
  PlayableTraversalMode Mix
  PlayableTraversalMode Passthrough
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsNull(U playable)
  bool IsValid(U playable)
  void Destroy(U playable)
  PlayableGraph GetGraph(U playable)
  void SetPlayState(U playable, PlayState value)
  PlayState GetPlayState(U playable)
  void Play(U playable)
  void Pause(U playable)
  void SetSpeed(U playable, double value)
  double GetSpeed(U playable)
  void SetDuration(U playable, double value)
  double GetDuration(U playable)
  void SetTime(U playable, double value)
  double GetTime(U playable)
  double GetPreviousTime(U playable)
  void SetDone(U playable, bool value)
  bool IsDone(U playable)
  void SetPropagateSetTime(U playable, bool value)
  bool GetPropagateSetTime(U playable)
  bool CanChangeInputs(U playable)
  bool CanSetWeights(U playable)
  bool CanDestroy(U playable)
  void SetInputCount(U playable, int value)
  int GetInputCount(U playable)
  void SetOutputCount(U playable, int value)
  int GetOutputCount(U playable)
  Playable GetInput(U playable, int inputPort)
  Playable GetOutput(U playable, int outputPort)
  void SetInputWeight(U playable, int inputIndex, float weight)
  void SetInputWeight(U playable, V input, float weight)
  float GetInputWeight(U playable, int inputIndex)
  void ConnectInput(U playable, int inputIndex, V sourcePlayable, int sourceOutputIndex)
  void ConnectInput(U playable, int inputIndex, V sourcePlayable, int sourceOutputIndex, float weight)
  void DisconnectInput(U playable, int inputPort)
  int AddInput(U playable, V sourcePlayable, int sourceOutputIndex, float weight)
  void SetDelay(U playable, double delay)
  double GetDelay(U playable)
  bool IsDelayed(U playable)
  void SetLeadTime(U playable, float value)
  float GetLeadTime(U playable)
  PlayableTraversalMode GetTraversalMode(U playable)
  void SetTraversalMode(U playable, PlayableTraversalMode mode)
  DirectorWrapMode GetTimeWrapMode(U playable)
  void SetTimeWrapMode(U playable, DirectorWrapMode value)
--------------------------------------------------
Класс: UnityEngine.Playables.DirectorUpdateMode
Наследуется от: Enum
Поля:
  int value__
  DirectorUpdateMode DSPClock
  DirectorUpdateMode GameTime
  DirectorUpdateMode UnscaledGameTime
  DirectorUpdateMode Manual
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableGraph
Наследуется от: ValueType
Поля:
  IntPtr m_Handle
  UInt32 m_Version
Свойства:
Методы:
  Playable GetRootPlayable(int index)
  bool Connect(U source, int sourceOutputPort, V destination, int destinationInputPort)
  void Disconnect(U input, int inputPort)
  void DestroyPlayable(U playable)
  void DestroySubgraph(U playable)
  void DestroyOutput(U output)
  int GetOutputCountByType()
  PlayableOutput GetOutput(int index)
  PlayableOutput GetOutputByType(int index)
  void Evaluate()
  PlayableGraph Create()
  PlayableGraph Create(string name)
  void Destroy()
  bool IsValid()
  bool IsPlaying()
  bool IsDone()
  void Play()
  void Stop()
  void Evaluate(float deltaTime)
  DirectorUpdateMode GetTimeUpdateMode()
  void SetTimeUpdateMode(DirectorUpdateMode value)
  IExposedPropertyTable GetResolver()
  void SetResolver(IExposedPropertyTable value)
  int GetPlayableCount()
  int GetRootPlayableCount()
  void SynchronizeEvaluation(PlayableGraph playable)
  int GetOutputCount()
  PlayableHandle CreatePlayableHandle()
  bool CreateScriptOutputInternal(string name, PlayableOutputHandle& handle)
  PlayableHandle GetRootPlayableInternal(int index)
  void DestroyOutputInternal(PlayableOutputHandle handle)
  bool IsMatchFrameRateEnabled()
  void EnableMatchFrameRate(FrameRate frameRate)
  void DisableMatchFrameRate()
  FrameRate GetFrameRate()
  bool GetOutputInternal(int index, PlayableOutputHandle& handle)
  int GetOutputCountByTypeInternal(Type outputType)
  bool GetOutputByTypeInternal(Type outputType, int index, PlayableOutputHandle& handle)
  bool ConnectInternal(PlayableHandle source, int sourceOutputPort, PlayableHandle destination, int destinationInputPort)
  void DisconnectInternal(PlayableHandle playable, int inputPort)
  void DestroyPlayableInternal(PlayableHandle playable)
  void DestroySubgraphInternal(PlayableHandle playable)
  void Create_Injected(string name, PlayableGraph& ret)
  void Destroy_Injected(PlayableGraph& _unity_self)
  bool IsValid_Injected(PlayableGraph& _unity_self)
  bool IsPlaying_Injected(PlayableGraph& _unity_self)
  bool IsDone_Injected(PlayableGraph& _unity_self)
  void Play_Injected(PlayableGraph& _unity_self)
  void Stop_Injected(PlayableGraph& _unity_self)
  void Evaluate_Injected(PlayableGraph& _unity_self, float deltaTime)
  DirectorUpdateMode GetTimeUpdateMode_Injected(PlayableGraph& _unity_self)
  void SetTimeUpdateMode_Injected(PlayableGraph& _unity_self, DirectorUpdateMode value)
  IExposedPropertyTable GetResolver_Injected(PlayableGraph& _unity_self)
  void SetResolver_Injected(PlayableGraph& _unity_self, IExposedPropertyTable value)
  int GetPlayableCount_Injected(PlayableGraph& _unity_self)
  int GetRootPlayableCount_Injected(PlayableGraph& _unity_self)
  void SynchronizeEvaluation_Injected(PlayableGraph& _unity_self, PlayableGraph& playable)
  int GetOutputCount_Injected(PlayableGraph& _unity_self)
  void CreatePlayableHandle_Injected(PlayableGraph& _unity_self, PlayableHandle& ret)
  bool CreateScriptOutputInternal_Injected(PlayableGraph& _unity_self, string name, PlayableOutputHandle& handle)
  void GetRootPlayableInternal_Injected(PlayableGraph& _unity_self, int index, PlayableHandle& ret)
  void DestroyOutputInternal_Injected(PlayableGraph& _unity_self, PlayableOutputHandle& handle)
  bool IsMatchFrameRateEnabled_Injected(PlayableGraph& _unity_self)
  void EnableMatchFrameRate_Injected(PlayableGraph& _unity_self, FrameRate& frameRate)
  void DisableMatchFrameRate_Injected(PlayableGraph& _unity_self)
  void GetFrameRate_Injected(PlayableGraph& _unity_self, FrameRate& ret)
  bool GetOutputInternal_Injected(PlayableGraph& _unity_self, int index, PlayableOutputHandle& handle)
  int GetOutputCountByTypeInternal_Injected(PlayableGraph& _unity_self, Type outputType)
  bool GetOutputByTypeInternal_Injected(PlayableGraph& _unity_self, Type outputType, int index, PlayableOutputHandle& handle)
  bool ConnectInternal_Injected(PlayableGraph& _unity_self, PlayableHandle& source, int sourceOutputPort, PlayableHandle& destination, int destinationInputPort)
  void DisconnectInternal_Injected(PlayableGraph& _unity_self, PlayableHandle& playable, int inputPort)
  void DestroyPlayableInternal_Injected(PlayableGraph& _unity_self, PlayableHandle& playable)
  void DestroySubgraphInternal_Injected(PlayableGraph& _unity_self, PlayableHandle& playable)
--------------------------------------------------
Класс: UnityEngine.Playables.PlayState
Наследуется от: Enum
Поля:
  int value__
  PlayState Paused
  PlayState Playing
  PlayState Delayed
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableHandle
Наследуется от: ValueType
Поля:
  IntPtr m_Handle
  UInt32 m_Version
  PlayableHandle m_Null
Свойства:
  PlayableHandle Null
Методы:
  T GetObject()
  bool IsPlayableOfType()
  PlayableHandle get_Null()
  Playable GetInput(int inputPort)
  Playable GetOutput(int outputPort)
  bool SetInputWeight(int inputIndex, float weight)
  float GetInputWeight(int inputIndex)
  void Destroy()
  bool op_Equality(PlayableHandle x, PlayableHandle y)
  bool op_Inequality(PlayableHandle x, PlayableHandle y)
  bool Equals(object p)
  bool Equals(PlayableHandle other)
  int GetHashCode()
  bool CompareVersion(PlayableHandle lhs, PlayableHandle rhs)
  bool CheckInputBounds(int inputIndex)
  bool CheckInputBounds(int inputIndex, bool acceptAny)
  bool IsNull()
  bool IsValid()
  Type GetPlayableType()
  Type GetJobType()
  void SetScriptInstance(object scriptInstance)
  bool CanChangeInputs()
  bool CanSetWeights()
  bool CanDestroy()
  PlayState GetPlayState()
  void Play()
  void Pause()
  double GetSpeed()
  void SetSpeed(double value)
  double GetTime()
  void SetTime(double value)
  bool IsDone()
  void SetDone(bool value)
  double GetDuration()
  void SetDuration(double value)
  bool GetPropagateSetTime()
  void SetPropagateSetTime(bool value)
  PlayableGraph GetGraph()
  int GetInputCount()
  void SetInputCount(int value)
  int GetOutputCount()
  void SetOutputCount(int value)
  void SetInputWeight(PlayableHandle input, float weight)
  void SetDelay(double delay)
  double GetDelay()
  bool IsDelayed()
  double GetPreviousTime()
  void SetLeadTime(float value)
  float GetLeadTime()
  PlayableTraversalMode GetTraversalMode()
  void SetTraversalMode(PlayableTraversalMode mode)
  IntPtr GetJobData()
  DirectorWrapMode GetTimeWrapMode()
  void SetTimeWrapMode(DirectorWrapMode mode)
  object GetScriptInstance()
  PlayableHandle GetInputHandle(int index)
  PlayableHandle GetOutputHandle(int index)
  void SetInputWeightFromIndex(int index, float weight)
  float GetInputWeightFromIndex(int index)
  void .cctor()
  bool IsNull_Injected(PlayableHandle& _unity_self)
  bool IsValid_Injected(PlayableHandle& _unity_self)
  Type GetPlayableType_Injected(PlayableHandle& _unity_self)
  Type GetJobType_Injected(PlayableHandle& _unity_self)
  void SetScriptInstance_Injected(PlayableHandle& _unity_self, object scriptInstance)
  bool CanChangeInputs_Injected(PlayableHandle& _unity_self)
  bool CanSetWeights_Injected(PlayableHandle& _unity_self)
  bool CanDestroy_Injected(PlayableHandle& _unity_self)
  PlayState GetPlayState_Injected(PlayableHandle& _unity_self)
  void Play_Injected(PlayableHandle& _unity_self)
  void Pause_Injected(PlayableHandle& _unity_self)
  double GetSpeed_Injected(PlayableHandle& _unity_self)
  void SetSpeed_Injected(PlayableHandle& _unity_self, double value)
  double GetTime_Injected(PlayableHandle& _unity_self)
  void SetTime_Injected(PlayableHandle& _unity_self, double value)
  bool IsDone_Injected(PlayableHandle& _unity_self)
  void SetDone_Injected(PlayableHandle& _unity_self, bool value)
  double GetDuration_Injected(PlayableHandle& _unity_self)
  void SetDuration_Injected(PlayableHandle& _unity_self, double value)
  bool GetPropagateSetTime_Injected(PlayableHandle& _unity_self)
  void SetPropagateSetTime_Injected(PlayableHandle& _unity_self, bool value)
  void GetGraph_Injected(PlayableHandle& _unity_self, PlayableGraph& ret)
  int GetInputCount_Injected(PlayableHandle& _unity_self)
  void SetInputCount_Injected(PlayableHandle& _unity_self, int value)
  int GetOutputCount_Injected(PlayableHandle& _unity_self)
  void SetOutputCount_Injected(PlayableHandle& _unity_self, int value)
  void SetInputWeight_Injected(PlayableHandle& _unity_self, PlayableHandle& input, float weight)
  void SetDelay_Injected(PlayableHandle& _unity_self, double delay)
  double GetDelay_Injected(PlayableHandle& _unity_self)
  bool IsDelayed_Injected(PlayableHandle& _unity_self)
  double GetPreviousTime_Injected(PlayableHandle& _unity_self)
  void SetLeadTime_Injected(PlayableHandle& _unity_self, float value)
  float GetLeadTime_Injected(PlayableHandle& _unity_self)
  PlayableTraversalMode GetTraversalMode_Injected(PlayableHandle& _unity_self)
  void SetTraversalMode_Injected(PlayableHandle& _unity_self, PlayableTraversalMode mode)
  IntPtr GetJobData_Injected(PlayableHandle& _unity_self)
  DirectorWrapMode GetTimeWrapMode_Injected(PlayableHandle& _unity_self)
  void SetTimeWrapMode_Injected(PlayableHandle& _unity_self, DirectorWrapMode mode)
  object GetScriptInstance_Injected(PlayableHandle& _unity_self)
  void GetInputHandle_Injected(PlayableHandle& _unity_self, int index, PlayableHandle& ret)
  void GetOutputHandle_Injected(PlayableHandle& _unity_self, int index, PlayableHandle& ret)
  void SetInputWeightFromIndex_Injected(PlayableHandle& _unity_self, int index, float weight)
  float GetInputWeightFromIndex_Injected(PlayableHandle& _unity_self, int index)
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableOutput
Наследуется от: ValueType
Поля:
  PlayableOutputHandle m_Handle
  PlayableOutput m_NullPlayableOutput
Свойства:
  PlayableOutput Null
Методы:
  PlayableOutput get_Null()
  void .ctor(PlayableOutputHandle handle)
  PlayableOutputHandle GetHandle()
  bool IsPlayableOutputOfType()
  Type GetPlayableOutputType()
  bool Equals(PlayableOutput other)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableOutputExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsOutputNull(U output)
  bool IsOutputValid(U output)
  Object GetReferenceObject(U output)
  void SetReferenceObject(U output, Object value)
  Object GetUserData(U output)
  void SetUserData(U output, Object value)
  Playable GetSourcePlayable(U output)
  void SetSourcePlayable(U output, V value)
  void SetSourcePlayable(U output, V value, int port)
  int GetSourceOutputPort(U output)
  float GetWeight(U output)
  void SetWeight(U output, float value)
  void PushNotification(U output, Playable origin, INotification notification, object context)
  INotificationReceiver[] GetNotificationReceivers(U output)
  void AddNotificationReceiver(U output, INotificationReceiver receiver)
  void RemoveNotificationReceiver(U output, INotificationReceiver receiver)
  int GetSourceInputPort(U output)
  void SetSourceInputPort(U output, int value)
  void SetSourceOutputPort(U output, int value)
--------------------------------------------------
Класс: UnityEngine.Playables.PlayableOutputHandle
Наследуется от: ValueType
Поля:
  IntPtr m_Handle
  UInt32 m_Version
  PlayableOutputHandle m_Null
Свойства:
  PlayableOutputHandle Null
Методы:
  PlayableOutputHandle get_Null()
  bool IsPlayableOutputOfType()
  int GetHashCode()
  bool op_Equality(PlayableOutputHandle lhs, PlayableOutputHandle rhs)
  bool op_Inequality(PlayableOutputHandle lhs, PlayableOutputHandle rhs)
  bool Equals(object p)
  bool Equals(PlayableOutputHandle other)
  bool CompareVersion(PlayableOutputHandle lhs, PlayableOutputHandle rhs)
  bool IsNull()
  bool IsValid()
  Type GetPlayableOutputType()
  Object GetReferenceObject()
  void SetReferenceObject(Object target)
  Object GetUserData()
  void SetUserData(Object target)
  PlayableHandle GetSourcePlayable()
  void SetSourcePlayable(PlayableHandle target, int port)
  int GetSourceOutputPort()
  float GetWeight()
  void SetWeight(float weight)
  void PushNotification(PlayableHandle origin, INotification notification, object context)
  INotificationReceiver[] GetNotificationReceivers()
  void AddNotificationReceiver(INotificationReceiver receiver)
  void RemoveNotificationReceiver(INotificationReceiver receiver)
  void .cctor()
  bool IsNull_Injected(PlayableOutputHandle& _unity_self)
  bool IsValid_Injected(PlayableOutputHandle& _unity_self)
  Type GetPlayableOutputType_Injected(PlayableOutputHandle& _unity_self)
  Object GetReferenceObject_Injected(PlayableOutputHandle& _unity_self)
  void SetReferenceObject_Injected(PlayableOutputHandle& _unity_self, Object target)
  Object GetUserData_Injected(PlayableOutputHandle& _unity_self)
  void SetUserData_Injected(PlayableOutputHandle& _unity_self, Object target)
  void GetSourcePlayable_Injected(PlayableOutputHandle& _unity_self, PlayableHandle& ret)
  void SetSourcePlayable_Injected(PlayableOutputHandle& _unity_self, PlayableHandle& target, int port)
  int GetSourceOutputPort_Injected(PlayableOutputHandle& _unity_self)
  float GetWeight_Injected(PlayableOutputHandle& _unity_self)
  void SetWeight_Injected(PlayableOutputHandle& _unity_self, float weight)
  void PushNotification_Injected(PlayableOutputHandle& _unity_self, PlayableHandle& origin, INotification notification, object context)
  INotificationReceiver[] GetNotificationReceivers_Injected(PlayableOutputHandle& _unity_self)
  void AddNotificationReceiver_Injected(PlayableOutputHandle& _unity_self, INotificationReceiver receiver)
  void RemoveNotificationReceiver_Injected(PlayableOutputHandle& _unity_self, INotificationReceiver receiver)
--------------------------------------------------
Класс: UnityEngine.Playables.ScriptPlayable`1
Наследуется от: ValueType
Поля:
  PlayableHandle m_Handle
  ScriptPlayable`1<T> m_NullPlayable
Свойства:
  ScriptPlayable`1<T> Null
Методы:
  ScriptPlayable`1<T> get_Null()
  ScriptPlayable`1<T> Create(PlayableGraph graph, int inputCount)
  ScriptPlayable`1<T> Create(PlayableGraph graph, T template, int inputCount)
  PlayableHandle CreateHandle(PlayableGraph graph, T template, int inputCount)
  object CreateScriptInstance()
  object CloneScriptInstance(IPlayableBehaviour source)
  object CloneScriptInstanceFromEngineObject(Object source)
  object CloneScriptInstanceFromIClonable(ICloneable source)
  void .ctor(PlayableHandle handle)
  PlayableHandle GetHandle()
  T GetBehaviour()
  Playable op_Implicit(ScriptPlayable`1<T> playable)
  ScriptPlayable`1<T> op_Explicit(Playable playable)
  bool Equals(ScriptPlayable`1<T> other)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Playables.ScriptPlayableBinding
Наследуется от: object
Поля:
Свойства:
Методы:
  PlayableBinding Create(string name, Object key, Type type)
  PlayableOutput CreateScriptOutput(PlayableGraph graph, string name)
--------------------------------------------------
Класс: UnityEngine.Playables.ScriptPlayableOutput
Наследуется от: ValueType
Поля:
  PlayableOutputHandle m_Handle
Свойства:
  ScriptPlayableOutput Null
Методы:
  ScriptPlayableOutput Create(PlayableGraph graph, string name)
  void .ctor(PlayableOutputHandle handle)
  ScriptPlayableOutput get_Null()
  PlayableOutputHandle GetHandle()
  PlayableOutput op_Implicit(ScriptPlayableOutput output)
  ScriptPlayableOutput op_Explicit(PlayableOutput output)
--------------------------------------------------
Класс: UnityEngine.Diagnostics.ForcedCrashCategory
Наследуется от: Enum
Поля:
  int value__
  ForcedCrashCategory AccessViolation
  ForcedCrashCategory FatalError
  ForcedCrashCategory Abort
  ForcedCrashCategory PureVirtualFunction
  ForcedCrashCategory MonoAbort
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Diagnostics.Utils
Наследуется от: object
Поля:
Свойства:
Методы:
  void ForceCrash(ForcedCrashCategory crashCategory)
  void NativeAssert(string message)
  void NativeError(string message)
  void NativeWarning(string message)
--------------------------------------------------
Класс: UnityEngine.Diagnostics.PlayerConnection
Наследуется от: object
Поля:
Свойства:
  bool connected
Методы:
  bool get_connected()
  void SendFile(string remoteFilePath, Byte[] data)
--------------------------------------------------
Класс: UnityEngine.Device.Application
Наследуется от: object
Поля:
Свойства:
  string absoluteURL
  ThreadPriority backgroundLoadingPriority
  string buildGUID
  string cloudProjectId
  string companyName
  string consoleLogPath
  string dataPath
  bool genuine
  bool genuineCheckAvailable
  string identifier
  string installerName
  ApplicationInstallMode installMode
  NetworkReachability internetReachability
  bool isBatchMode
  bool isConsolePlatform
  bool isEditor
  bool isFocused
  bool isMobilePlatform
  bool isPlaying
  string persistentDataPath
  RuntimePlatform platform
  string productName
  bool runInBackground
  ApplicationSandboxType sandboxType
  string streamingAssetsPath
  SystemLanguage systemLanguage
  int targetFrameRate
  string temporaryCachePath
  string unityVersion
  string version
Методы:
  string get_absoluteURL()
  ThreadPriority get_backgroundLoadingPriority()
  void set_backgroundLoadingPriority(ThreadPriority value)
  string get_buildGUID()
  string get_cloudProjectId()
  string get_companyName()
  string get_consoleLogPath()
  string get_dataPath()
  bool get_genuine()
  bool get_genuineCheckAvailable()
  string get_identifier()
  string get_installerName()
  ApplicationInstallMode get_installMode()
  NetworkReachability get_internetReachability()
  bool get_isBatchMode()
  bool get_isConsolePlatform()
  bool get_isEditor()
  bool get_isFocused()
  bool get_isMobilePlatform()
  bool get_isPlaying()
  string get_persistentDataPath()
  RuntimePlatform get_platform()
  string get_productName()
  bool get_runInBackground()
  void set_runInBackground(bool value)
  ApplicationSandboxType get_sandboxType()
  string get_streamingAssetsPath()
  SystemLanguage get_systemLanguage()
  int get_targetFrameRate()
  void set_targetFrameRate(int value)
  string get_temporaryCachePath()
  string get_unityVersion()
  string get_version()
  void add_deepLinkActivated(Action`1<string> value)
  void remove_deepLinkActivated(Action`1<string> value)
  void add_focusChanged(Action`1<bool> value)
  void remove_focusChanged(Action`1<bool> value)
  void add_logMessageReceived(LogCallback value)
  void remove_logMessageReceived(LogCallback value)
  void add_logMessageReceivedThreaded(LogCallback value)
  void remove_logMessageReceivedThreaded(LogCallback value)
  void add_lowMemory(LowMemoryCallback value)
  void remove_lowMemory(LowMemoryCallback value)
  void add_onBeforeRender(UnityAction value)
  void remove_onBeforeRender(UnityAction value)
  void add_quitting(Action value)
  void remove_quitting(Action value)
  void add_wantsToQuit(Func`1<bool> value)
  void remove_wantsToQuit(Func`1<bool> value)
  void add_unloading(Action value)
  void remove_unloading(Action value)
  bool CanStreamedLevelBeLoaded(int levelIndex)
  bool CanStreamedLevelBeLoaded(string levelName)
  String[] GetBuildTags()
  StackTraceLogType GetStackTraceLogType(LogType logType)
  bool HasProLicense()
  bool HasUserAuthorization(UserAuthorization mode)
  bool IsPlaying(Object obj)
  void OpenURL(string url)
  void Quit()
  void Quit(int exitCode)
  bool RequestAdvertisingIdentifierAsync(AdvertisingIdentifierCallback delegateMethod)
  AsyncOperation RequestUserAuthorization(UserAuthorization mode)
  void SetBuildTags(String[] buildTags)
  void SetStackTraceLogType(LogType logType, StackTraceLogType stackTraceType)
  void Unload()
--------------------------------------------------
Класс: UnityEngine.Device.Screen
Наследуется от: object
Поля:
Свойства:
  float brightness
  bool autorotateToLandscapeLeft
  bool autorotateToLandscapeRight
  bool autorotateToPortrait
  bool autorotateToPortraitUpsideDown
  Resolution currentResolution
  Rect[] cutouts
  float dpi
  bool fullScreen
  FullScreenMode fullScreenMode
  int height
  int width
  ScreenOrientation orientation
  Resolution[] resolutions
  Rect safeArea
  int sleepTimeout
  Vector2Int mainWindowPosition
  DisplayInfo mainWindowDisplayInfo
Методы:
  float get_brightness()
  void set_brightness(float value)
  bool get_autorotateToLandscapeLeft()
  void set_autorotateToLandscapeLeft(bool value)
  bool get_autorotateToLandscapeRight()
  void set_autorotateToLandscapeRight(bool value)
  bool get_autorotateToPortrait()
  void set_autorotateToPortrait(bool value)
  bool get_autorotateToPortraitUpsideDown()
  void set_autorotateToPortraitUpsideDown(bool value)
  Resolution get_currentResolution()
  Rect[] get_cutouts()
  float get_dpi()
  bool get_fullScreen()
  void set_fullScreen(bool value)
  FullScreenMode get_fullScreenMode()
  void set_fullScreenMode(FullScreenMode value)
  int get_height()
  int get_width()
  ScreenOrientation get_orientation()
  void set_orientation(ScreenOrientation value)
  Resolution[] get_resolutions()
  Rect get_safeArea()
  int get_sleepTimeout()
  void set_sleepTimeout(int value)
  void SetResolution(int width, int height, FullScreenMode fullscreenMode, int preferredRefreshRate)
  void SetResolution(int width, int height, FullScreenMode fullscreenMode)
  void SetResolution(int width, int height, bool fullscreen, int preferredRefreshRate)
  void SetResolution(int width, int height, bool fullscreen)
  Vector2Int get_mainWindowPosition()
  DisplayInfo get_mainWindowDisplayInfo()
  void GetDisplayLayout(List`1<DisplayInfo> displayLayout)
  AsyncOperation MoveMainWindowTo(DisplayInfo& display, Vector2Int position)
--------------------------------------------------
Класс: UnityEngine.Device.SystemInfo
Наследуется от: object
Поля:
  string unsupportedIdentifier
Свойства:
  float batteryLevel
  BatteryStatus batteryStatus
  string operatingSystem
  OperatingSystemFamily operatingSystemFamily
  string processorType
  int processorFrequency
  int processorCount
  int systemMemorySize
  string deviceUniqueIdentifier
  string deviceName
  string deviceModel
  bool supportsAccelerometer
  bool supportsGyroscope
  bool supportsLocationService
  bool supportsVibration
  bool supportsAudio
  DeviceType deviceType
  int graphicsMemorySize
  string graphicsDeviceName
  string graphicsDeviceVendor
  int graphicsDeviceID
  int graphicsDeviceVendorID
  GraphicsDeviceType graphicsDeviceType
  bool graphicsUVStartsAtTop
  string graphicsDeviceVersion
  int graphicsShaderLevel
  bool graphicsMultiThreaded
  RenderingThreadingMode renderingThreadingMode
  bool hasHiddenSurfaceRemovalOnGPU
  bool hasDynamicUniformArrayIndexingInFragmentShaders
  bool supportsShadows
  bool supportsRawShadowDepthSampling
  bool supportsMotionVectors
  bool supports3DTextures
  bool supportsCompressed3DTextures
  bool supports2DArrayTextures
  bool supports3DRenderTextures
  bool supportsCubemapArrayTextures
  bool supportsAnisotropicFilter
  CopyTextureSupport copyTextureSupport
  bool supportsComputeShaders
  bool supportsGeometryShaders
  bool supportsTessellationShaders
  bool supportsRenderTargetArrayIndexFromVertexShader
  bool supportsInstancing
  bool supportsHardwareQuadTopology
  bool supports32bitsIndexBuffer
  bool supportsSparseTextures
  int supportedRenderTargetCount
  bool supportsSeparatedRenderTargetsBlend
  int supportedRandomWriteTargetCount
  int supportsMultisampledTextures
  bool supportsMultisampled2DArrayTextures
  bool supportsMultisampleAutoResolve
  int supportsTextureWrapMirrorOnce
  bool usesReversedZBuffer
  NPOTSupport npotSupport
  int maxTextureSize
  int maxTexture3DSize
  int maxTextureArraySlices
  int maxCubemapSize
  int maxAnisotropyLevel
  int maxComputeBufferInputsVertex
  int maxComputeBufferInputsFragment
  int maxComputeBufferInputsGeometry
  int maxComputeBufferInputsDomain
  int maxComputeBufferInputsHull
  int maxComputeBufferInputsCompute
  int maxComputeWorkGroupSize
  int maxComputeWorkGroupSizeX
  int maxComputeWorkGroupSizeY
  int maxComputeWorkGroupSizeZ
  int computeSubGroupSize
  bool supportsAsyncCompute
  bool supportsGpuRecorder
  bool supportsGraphicsFence
  bool supportsAsyncGPUReadback
  bool supportsRayTracing
  bool supportsSetConstantBuffer
  int constantBufferOffsetAlignment
  long maxGraphicsBufferSize
  bool hasMipMaxLevel
  bool supportsMipStreaming
  bool usesLoadStoreActions
  HDRDisplaySupportFlags hdrDisplaySupportFlags
  bool supportsConservativeRaster
  bool supportsMultiview
  bool supportsStoreAndResolveAction
  bool supportsMultisampleResolveDepth
Методы:
  float get_batteryLevel()
  BatteryStatus get_batteryStatus()
  string get_operatingSystem()
  OperatingSystemFamily get_operatingSystemFamily()
  string get_processorType()
  int get_processorFrequency()
  int get_processorCount()
  int get_systemMemorySize()
  string get_deviceUniqueIdentifier()
  string get_deviceName()
  string get_deviceModel()
  bool get_supportsAccelerometer()
  bool get_supportsGyroscope()
  bool get_supportsLocationService()
  bool get_supportsVibration()
  bool get_supportsAudio()
  DeviceType get_deviceType()
  int get_graphicsMemorySize()
  string get_graphicsDeviceName()
  string get_graphicsDeviceVendor()
  int get_graphicsDeviceID()
  int get_graphicsDeviceVendorID()
  GraphicsDeviceType get_graphicsDeviceType()
  bool get_graphicsUVStartsAtTop()
  string get_graphicsDeviceVersion()
  int get_graphicsShaderLevel()
  bool get_graphicsMultiThreaded()
  RenderingThreadingMode get_renderingThreadingMode()
  bool get_hasHiddenSurfaceRemovalOnGPU()
  bool get_hasDynamicUniformArrayIndexingInFragmentShaders()
  bool get_supportsShadows()
  bool get_supportsRawShadowDepthSampling()
  bool get_supportsMotionVectors()
  bool get_supports3DTextures()
  bool get_supportsCompressed3DTextures()
  bool get_supports2DArrayTextures()
  bool get_supports3DRenderTextures()
  bool get_supportsCubemapArrayTextures()
  bool get_supportsAnisotropicFilter()
  CopyTextureSupport get_copyTextureSupport()
  bool get_supportsComputeShaders()
  bool get_supportsGeometryShaders()
  bool get_supportsTessellationShaders()
  bool get_supportsRenderTargetArrayIndexFromVertexShader()
  bool get_supportsInstancing()
  bool get_supportsHardwareQuadTopology()
  bool get_supports32bitsIndexBuffer()
  bool get_supportsSparseTextures()
  int get_supportedRenderTargetCount()
  bool get_supportsSeparatedRenderTargetsBlend()
  int get_supportedRandomWriteTargetCount()
  int get_supportsMultisampledTextures()
  bool get_supportsMultisampled2DArrayTextures()
  bool get_supportsMultisampleAutoResolve()
  int get_supportsTextureWrapMirrorOnce()
  bool get_usesReversedZBuffer()
  bool SupportsRenderTextureFormat(RenderTextureFormat format)
  bool SupportsBlendingOnRenderTextureFormat(RenderTextureFormat format)
  bool SupportsTextureFormat(TextureFormat format)
  bool SupportsVertexAttributeFormat(VertexAttributeFormat format, int dimension)
  NPOTSupport get_npotSupport()
  int get_maxTextureSize()
  int get_maxTexture3DSize()
  int get_maxTextureArraySlices()
  int get_maxCubemapSize()
  int get_maxAnisotropyLevel()
  int get_maxComputeBufferInputsVertex()
  int get_maxComputeBufferInputsFragment()
  int get_maxComputeBufferInputsGeometry()
  int get_maxComputeBufferInputsDomain()
  int get_maxComputeBufferInputsHull()
  int get_maxComputeBufferInputsCompute()
  int get_maxComputeWorkGroupSize()
  int get_maxComputeWorkGroupSizeX()
  int get_maxComputeWorkGroupSizeY()
  int get_maxComputeWorkGroupSizeZ()
  int get_computeSubGroupSize()
  bool get_supportsAsyncCompute()
  bool get_supportsGpuRecorder()
  bool get_supportsGraphicsFence()
  bool get_supportsAsyncGPUReadback()
  bool get_supportsRayTracing()
  bool get_supportsSetConstantBuffer()
  int get_constantBufferOffsetAlignment()
  long get_maxGraphicsBufferSize()
  bool get_hasMipMaxLevel()
  bool get_supportsMipStreaming()
  bool get_usesLoadStoreActions()
  HDRDisplaySupportFlags get_hdrDisplaySupportFlags()
  bool get_supportsConservativeRaster()
  bool get_supportsMultiview()
  bool get_supportsStoreAndResolveAction()
  bool get_supportsMultisampleResolveDepth()
  bool IsFormatSupported(GraphicsFormat format, FormatUsage usage)
  GraphicsFormat GetCompatibleFormat(GraphicsFormat format, FormatUsage usage)
  GraphicsFormat GetGraphicsFormat(DefaultFormat format)
  int GetRenderTextureSupportedMSAASampleCount(RenderTextureDescriptor desc)
  bool SupportsRandomWriteOnRenderTextureFormat(RenderTextureFormat format)
--------------------------------------------------
Класс: UnityEngine.Experimental.U2D.SpriteIntermediateRendererInfo
Наследуется от: ValueType
Поля:
  int SpriteID
  int TextureID
  int MaterialID
  Color Color
  Matrix4x4 Transform
  Bounds Bounds
  int Layer
  int SortingLayer
  int SortingOrder
  ulong SceneCullingMask
  IntPtr IndexData
  IntPtr VertexData
  int IndexCount
  int VertexCount
  int ShaderChannelMask
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.U2D.SpriteRendererGroup
Наследуется от: object
Поля:
Свойства:
Методы:
  void AddRenderers(NativeArray`1<SpriteIntermediateRendererInfo> renderers)
  void AddRenderers(Void* renderers, int count)
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.LightType
Наследуется от: Enum
Поля:
  byte value__
  LightType Directional
  LightType Point
  LightType Spot
  LightType Rectangle
  LightType Disc
  LightType SpotPyramidShape
  LightType SpotBoxShape
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.LightMode
Наследуется от: Enum
Поля:
  byte value__
  LightMode Realtime
  LightMode Mixed
  LightMode Baked
  LightMode Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.FalloffType
Наследуется от: Enum
Поля:
  byte value__
  FalloffType InverseSquared
  FalloffType InverseSquaredNoRangeAttenuation
  FalloffType Linear
  FalloffType Legacy
  FalloffType Undefined
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.AngularFalloffType
Наследуется от: Enum
Поля:
  byte value__
  AngularFalloffType LUT
  AngularFalloffType AnalyticAndInnerAngle
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.LinearColor
Наследуется от: ValueType
Поля:
  float m_red
  float m_green
  float m_blue
  float m_intensity
Свойства:
  float red
  float green
  float blue
  float intensity
Методы:
  float get_red()
  void set_red(float value)
  float get_green()
  void set_green(float value)
  float get_blue()
  void set_blue(float value)
  float get_intensity()
  void set_intensity(float value)
  LinearColor Convert(Color color, float intensity)
  LinearColor Black()
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.DirectionalLight
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float penumbraWidthRadian
  Vector3 direction
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.PointLight
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float range
  float sphereRadius
  FalloffType falloff
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.SpotLight
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float range
  float sphereRadius
  float coneAngle
  float innerConeAngle
  FalloffType falloff
  AngularFalloffType angularFalloff
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.RectangleLight
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float range
  float width
  float height
  FalloffType falloff
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.DiscLight
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float range
  float radius
  FalloffType falloff
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.SpotLightBoxShape
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float range
  float width
  float height
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.SpotLightPyramidShape
Наследуется от: ValueType
Поля:
  int instanceID
  bool shadow
  LightMode mode
  Vector3 position
  Quaternion orientation
  LinearColor color
  LinearColor indirectColor
  float range
  float angle
  float aspectRatio
  FalloffType falloff
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.Cookie
Наследуется от: ValueType
Поля:
  int instanceID
  float scale
  Vector2 sizes
Свойства:
Методы:
  Cookie Defaults()
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.LightDataGI
Наследуется от: ValueType
Поля:
  int instanceID
  int cookieID
  float cookieScale
  LinearColor color
  LinearColor indirectColor
  Quaternion orientation
  Vector3 position
  float range
  float coneAngle
  float innerConeAngle
  float shape0
  float shape1
  LightType type
  LightMode mode
  byte shadow
  FalloffType falloff
Свойства:
Методы:
  void Init(DirectionalLight& light, Cookie& cookie)
  void Init(PointLight& light, Cookie& cookie)
  void Init(SpotLight& light, Cookie& cookie)
  void Init(RectangleLight& light, Cookie& cookie)
  void Init(DiscLight& light, Cookie& cookie)
  void Init(SpotLightBoxShape& light, Cookie& cookie)
  void Init(SpotLightPyramidShape& light, Cookie& cookie)
  void Init(DirectionalLight& light)
  void Init(PointLight& light)
  void Init(SpotLight& light)
  void Init(RectangleLight& light)
  void Init(DiscLight& light)
  void Init(SpotLightBoxShape& light)
  void Init(SpotLightPyramidShape& light)
  void InitNoBake(int lightInstanceID)
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  LightMode Extract(LightmapBakeType baketype)
  LinearColor ExtractIndirect(Light l)
  float ExtractInnerCone(Light l)
  Color ExtractColorTemperature(Light l)
  void ApplyColorTemperature(Color cct, LinearColor& lightColor)
  void Extract(Light l, DirectionalLight& dir)
  void Extract(Light l, PointLight& point)
  void Extract(Light l, SpotLight& spot)
  void Extract(Light l, RectangleLight& rect)
  void Extract(Light l, DiscLight& disc)
  void Extract(Light l, Cookie& cookie)
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.Lightmapping
Наследуется от: object
Поля:
  RequestLightsDelegate s_DefaultDelegate
  RequestLightsDelegate s_RequestLightsDelegate
Свойства:
Методы:
  void SetDelegate(RequestLightsDelegate del)
  RequestLightsDelegate GetDelegate()
  void ResetDelegate()
  void RequestLights(Light[] lights, IntPtr outLightsPtr, int outLightsCount)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.GlobalIllumination.RenderSettings
Наследуется от: object
Поля:
Свойства:
  bool useRadianceAmbientProbe
Методы:
  bool get_useRadianceAmbientProbe()
  void set_useRadianceAmbientProbe(bool value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.Playables.CameraPlayable
Наследуется от: ValueType
Поля:
  PlayableHandle m_Handle
Свойства:
Методы:
  CameraPlayable Create(PlayableGraph graph, Camera camera)
  PlayableHandle CreateHandle(PlayableGraph graph, Camera camera)
  void .ctor(PlayableHandle handle)
  PlayableHandle GetHandle()
  Playable op_Implicit(CameraPlayable playable)
  CameraPlayable op_Explicit(Playable playable)
  bool Equals(CameraPlayable other)
  Camera GetCamera()
  void SetCamera(Camera value)
  Camera GetCameraInternal(PlayableHandle& hdl)
  void SetCameraInternal(PlayableHandle& hdl, Camera camera)
  bool InternalCreateCameraPlayable(PlayableGraph& graph, Camera camera, PlayableHandle& handle)
  bool ValidateType(PlayableHandle& hdl)
--------------------------------------------------
Класс: UnityEngine.Experimental.Playables.MaterialEffectPlayable
Наследуется от: ValueType
Поля:
  PlayableHandle m_Handle
Свойства:
Методы:
  MaterialEffectPlayable Create(PlayableGraph graph, Material material, int pass)
  PlayableHandle CreateHandle(PlayableGraph graph, Material material, int pass)
  void .ctor(PlayableHandle handle)
  PlayableHandle GetHandle()
  Playable op_Implicit(MaterialEffectPlayable playable)
  MaterialEffectPlayable op_Explicit(Playable playable)
  bool Equals(MaterialEffectPlayable other)
  Material GetMaterial()
  void SetMaterial(Material value)
  int GetPass()
  void SetPass(int value)
  Material GetMaterialInternal(PlayableHandle& hdl)
  void SetMaterialInternal(PlayableHandle& hdl, Material material)
  int GetPassInternal(PlayableHandle& hdl)
  void SetPassInternal(PlayableHandle& hdl, int pass)
  bool InternalCreateMaterialEffectPlayable(PlayableGraph& graph, Material material, int pass, PlayableHandle& handle)
  bool ValidateType(PlayableHandle& hdl)
--------------------------------------------------
Класс: UnityEngine.Experimental.Playables.TextureMixerPlayable
Наследуется от: ValueType
Поля:
  PlayableHandle m_Handle
Свойства:
Методы:
  TextureMixerPlayable Create(PlayableGraph graph)
  PlayableHandle CreateHandle(PlayableGraph graph)
  void .ctor(PlayableHandle handle)
  PlayableHandle GetHandle()
  Playable op_Implicit(TextureMixerPlayable playable)
  TextureMixerPlayable op_Explicit(Playable playable)
  bool Equals(TextureMixerPlayable other)
  bool CreateTextureMixerPlayableInternal(PlayableGraph& graph, PlayableHandle& handle)
--------------------------------------------------
Класс: UnityEngine.Experimental.Playables.TexturePlayableBinding
Наследуется от: object
Поля:
Свойства:
Методы:
  PlayableBinding Create(string name, Object key)
  PlayableOutput CreateTextureOutput(PlayableGraph graph, string name)
--------------------------------------------------
Класс: UnityEngine.Experimental.Playables.TexturePlayableGraphExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool InternalCreateTextureOutput(PlayableGraph& graph, string name, PlayableOutputHandle& handle)
--------------------------------------------------
Класс: UnityEngine.Experimental.Playables.TexturePlayableOutput
Наследуется от: ValueType
Поля:
  PlayableOutputHandle m_Handle
Свойства:
  TexturePlayableOutput Null
Методы:
  TexturePlayableOutput Create(PlayableGraph graph, string name, RenderTexture target)
  void .ctor(PlayableOutputHandle handle)
  TexturePlayableOutput get_Null()
  PlayableOutputHandle GetHandle()
  PlayableOutput op_Implicit(TexturePlayableOutput output)
  TexturePlayableOutput op_Explicit(PlayableOutput output)
  RenderTexture GetTarget()
  void SetTarget(RenderTexture value)
  RenderTexture InternalGetTarget(PlayableOutputHandle& output)
  void InternalSetTarget(PlayableOutputHandle& output, RenderTexture target)
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.BuiltinRuntimeReflectionSystem
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TickRealtimeProbes()
  void Dispose()
  void Dispose(bool disposing)
  bool BuiltinUpdate()
  BuiltinRuntimeReflectionSystem Internal_BuiltinRuntimeReflectionSystem_New()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.IScriptableRuntimeReflectionSystem
Поля:
Свойства:
Методы:
  bool TickRealtimeProbes()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.ScriptableRuntimeReflectionSystem
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TickRealtimeProbes()
  void Dispose(bool disposing)
  void System.IDisposable.Dispose()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.ScriptableRuntimeReflectionSystemSettings
Наследуется от: object
Поля:
  ScriptableRuntimeReflectionSystemWrapper s_Instance
Свойства:
  IScriptableRuntimeReflectionSystem system
  IScriptableRuntimeReflectionSystem Internal_ScriptableRuntimeReflectionSystemSettings_system
  ScriptableRuntimeReflectionSystemWrapper Internal_ScriptableRuntimeReflectionSystemSettings_instance
Методы:
  IScriptableRuntimeReflectionSystem get_system()
  void set_system(IScriptableRuntimeReflectionSystem value)
  IScriptableRuntimeReflectionSystem get_Internal_ScriptableRuntimeReflectionSystemSettings_system()
  void set_Internal_ScriptableRuntimeReflectionSystemSettings_system(IScriptableRuntimeReflectionSystem value)
  ScriptableRuntimeReflectionSystemWrapper get_Internal_ScriptableRuntimeReflectionSystemSettings_instance()
  void ScriptingDirtyReflectionSystemInstance()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.ScriptableRuntimeReflectionSystemWrapper
Наследуется от: object
Поля:
  IScriptableRuntimeReflectionSystem <implementation>k__BackingField
Свойства:
  IScriptableRuntimeReflectionSystem implementation
Методы:
  IScriptableRuntimeReflectionSystem get_implementation()
  void set_implementation(IScriptableRuntimeReflectionSystem value)
  void Internal_ScriptableRuntimeReflectionSystemWrapper_TickRealtimeProbes(Boolean& result)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.ExternalGPUProfiler
Наследуется от: object
Поля:
Свойства:
Методы:
  void BeginGPUCapture()
  void EndGPUCapture()
  bool IsAttached()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.WaitForPresentSyncPoint
Наследуется от: Enum
Поля:
  int value__
  WaitForPresentSyncPoint BeginFrame
  WaitForPresentSyncPoint EndFrame
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.GraphicsJobsSyncPoint
Наследуется от: Enum
Поля:
  int value__
  GraphicsJobsSyncPoint EndOfFrame
  GraphicsJobsSyncPoint AfterScriptUpdate
  GraphicsJobsSyncPoint AfterScriptLateUpdate
  GraphicsJobsSyncPoint WaitForPresent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.GraphicsDeviceSettings
Наследуется от: object
Поля:
Свойства:
  WaitForPresentSyncPoint waitForPresentSyncPoint
  GraphicsJobsSyncPoint graphicsJobsSyncPoint
Методы:
  WaitForPresentSyncPoint get_waitForPresentSyncPoint()
  void set_waitForPresentSyncPoint(WaitForPresentSyncPoint value)
  GraphicsJobsSyncPoint get_graphicsJobsSyncPoint()
  void set_graphicsJobsSyncPoint(GraphicsJobsSyncPoint value)
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.TextureCreationFlags
Наследуется от: Enum
Поля:
  int value__
  TextureCreationFlags None
  TextureCreationFlags MipChain
  TextureCreationFlags Crunch
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.FormatUsage
Наследуется от: Enum
Поля:
  int value__
  FormatUsage Sample
  FormatUsage Linear
  FormatUsage Sparse
  FormatUsage Render
  FormatUsage Blend
  FormatUsage GetPixels
  FormatUsage SetPixels
  FormatUsage SetPixels32
  FormatUsage ReadPixels
  FormatUsage LoadStore
  FormatUsage MSAA2x
  FormatUsage MSAA4x
  FormatUsage MSAA8x
  FormatUsage StencilSampling
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.DefaultFormat
Наследуется от: Enum
Поля:
  int value__
  DefaultFormat LDR
  DefaultFormat HDR
  DefaultFormat DepthStencil
  DefaultFormat Shadow
  DefaultFormat Video
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.GraphicsFormat
Наследуется от: Enum
Поля:
  int value__
  GraphicsFormat None
  GraphicsFormat R8_SRGB
  GraphicsFormat R8G8_SRGB
  GraphicsFormat R8G8B8_SRGB
  GraphicsFormat R8G8B8A8_SRGB
  GraphicsFormat R8_UNorm
  GraphicsFormat R8G8_UNorm
  GraphicsFormat R8G8B8_UNorm
  GraphicsFormat R8G8B8A8_UNorm
  GraphicsFormat R8_SNorm
  GraphicsFormat R8G8_SNorm
  GraphicsFormat R8G8B8_SNorm
  GraphicsFormat R8G8B8A8_SNorm
  GraphicsFormat R8_UInt
  GraphicsFormat R8G8_UInt
  GraphicsFormat R8G8B8_UInt
  GraphicsFormat R8G8B8A8_UInt
  GraphicsFormat R8_SInt
  GraphicsFormat R8G8_SInt
  GraphicsFormat R8G8B8_SInt
  GraphicsFormat R8G8B8A8_SInt
  GraphicsFormat R16_UNorm
  GraphicsFormat R16G16_UNorm
  GraphicsFormat R16G16B16_UNorm
  GraphicsFormat R16G16B16A16_UNorm
  GraphicsFormat R16_SNorm
  GraphicsFormat R16G16_SNorm
  GraphicsFormat R16G16B16_SNorm
  GraphicsFormat R16G16B16A16_SNorm
  GraphicsFormat R16_UInt
  GraphicsFormat R16G16_UInt
  GraphicsFormat R16G16B16_UInt
  GraphicsFormat R16G16B16A16_UInt
  GraphicsFormat R16_SInt
  GraphicsFormat R16G16_SInt
  GraphicsFormat R16G16B16_SInt
  GraphicsFormat R16G16B16A16_SInt
  GraphicsFormat R32_UInt
  GraphicsFormat R32G32_UInt
  GraphicsFormat R32G32B32_UInt
  GraphicsFormat R32G32B32A32_UInt
  GraphicsFormat R32_SInt
  GraphicsFormat R32G32_SInt
  GraphicsFormat R32G32B32_SInt
  GraphicsFormat R32G32B32A32_SInt
  GraphicsFormat R16_SFloat
  GraphicsFormat R16G16_SFloat
  GraphicsFormat R16G16B16_SFloat
  GraphicsFormat R16G16B16A16_SFloat
  GraphicsFormat R32_SFloat
  GraphicsFormat R32G32_SFloat
  GraphicsFormat R32G32B32_SFloat
  GraphicsFormat R32G32B32A32_SFloat
  GraphicsFormat B8G8R8_SRGB
  GraphicsFormat B8G8R8A8_SRGB
  GraphicsFormat B8G8R8_UNorm
  GraphicsFormat B8G8R8A8_UNorm
  GraphicsFormat B8G8R8_SNorm
  GraphicsFormat B8G8R8A8_SNorm
  GraphicsFormat B8G8R8_UInt
  GraphicsFormat B8G8R8A8_UInt
  GraphicsFormat B8G8R8_SInt
  GraphicsFormat B8G8R8A8_SInt
  GraphicsFormat R4G4B4A4_UNormPack16
  GraphicsFormat B4G4R4A4_UNormPack16
  GraphicsFormat R5G6B5_UNormPack16
  GraphicsFormat B5G6R5_UNormPack16
  GraphicsFormat R5G5B5A1_UNormPack16
  GraphicsFormat B5G5R5A1_UNormPack16
  GraphicsFormat A1R5G5B5_UNormPack16
  GraphicsFormat E5B9G9R9_UFloatPack32
  GraphicsFormat B10G11R11_UFloatPack32
  GraphicsFormat A2B10G10R10_UNormPack32
  GraphicsFormat A2B10G10R10_UIntPack32
  GraphicsFormat A2B10G10R10_SIntPack32
  GraphicsFormat A2R10G10B10_UNormPack32
  GraphicsFormat A2R10G10B10_UIntPack32
  GraphicsFormat A2R10G10B10_SIntPack32
  GraphicsFormat A2R10G10B10_XRSRGBPack32
  GraphicsFormat A2R10G10B10_XRUNormPack32
  GraphicsFormat R10G10B10_XRSRGBPack32
  GraphicsFormat R10G10B10_XRUNormPack32
  GraphicsFormat A10R10G10B10_XRSRGBPack32
  GraphicsFormat A10R10G10B10_XRUNormPack32
  GraphicsFormat D16_UNorm
  GraphicsFormat D24_UNorm
  GraphicsFormat D24_UNorm_S8_UInt
  GraphicsFormat D32_SFloat
  GraphicsFormat D32_SFloat_S8_UInt
  GraphicsFormat S8_UInt
  GraphicsFormat RGB_DXT1_SRGB
  GraphicsFormat RGBA_DXT1_SRGB
  GraphicsFormat RGB_DXT1_UNorm
  GraphicsFormat RGBA_DXT1_UNorm
  GraphicsFormat RGBA_DXT3_SRGB
  GraphicsFormat RGBA_DXT3_UNorm
  GraphicsFormat RGBA_DXT5_SRGB
  GraphicsFormat RGBA_DXT5_UNorm
  GraphicsFormat R_BC4_UNorm
  GraphicsFormat R_BC4_SNorm
  GraphicsFormat RG_BC5_UNorm
  GraphicsFormat RG_BC5_SNorm
  GraphicsFormat RGB_BC6H_UFloat
  GraphicsFormat RGB_BC6H_SFloat
  GraphicsFormat RGBA_BC7_SRGB
  GraphicsFormat RGBA_BC7_UNorm
  GraphicsFormat RGB_PVRTC_2Bpp_SRGB
  GraphicsFormat RGB_PVRTC_2Bpp_UNorm
  GraphicsFormat RGB_PVRTC_4Bpp_SRGB
  GraphicsFormat RGB_PVRTC_4Bpp_UNorm
  GraphicsFormat RGBA_PVRTC_2Bpp_SRGB
  GraphicsFormat RGBA_PVRTC_2Bpp_UNorm
  GraphicsFormat RGBA_PVRTC_4Bpp_SRGB
  GraphicsFormat RGBA_PVRTC_4Bpp_UNorm
  GraphicsFormat RGB_ETC_UNorm
  GraphicsFormat RGB_ETC2_SRGB
  GraphicsFormat RGB_ETC2_UNorm
  GraphicsFormat RGB_A1_ETC2_SRGB
  GraphicsFormat RGB_A1_ETC2_UNorm
  GraphicsFormat RGBA_ETC2_SRGB
  GraphicsFormat RGBA_ETC2_UNorm
  GraphicsFormat R_EAC_UNorm
  GraphicsFormat R_EAC_SNorm
  GraphicsFormat RG_EAC_UNorm
  GraphicsFormat RG_EAC_SNorm
  GraphicsFormat RGBA_ASTC4X4_SRGB
  GraphicsFormat RGBA_ASTC4X4_UNorm
  GraphicsFormat RGBA_ASTC5X5_SRGB
  GraphicsFormat RGBA_ASTC5X5_UNorm
  GraphicsFormat RGBA_ASTC6X6_SRGB
  GraphicsFormat RGBA_ASTC6X6_UNorm
  GraphicsFormat RGBA_ASTC8X8_SRGB
  GraphicsFormat RGBA_ASTC8X8_UNorm
  GraphicsFormat RGBA_ASTC10X10_SRGB
  GraphicsFormat RGBA_ASTC10X10_UNorm
  GraphicsFormat RGBA_ASTC12X12_SRGB
  GraphicsFormat RGBA_ASTC12X12_UNorm
  GraphicsFormat YUV2
  GraphicsFormat DepthAuto
  GraphicsFormat ShadowAuto
  GraphicsFormat VideoAuto
  GraphicsFormat RGBA_ASTC4X4_UFloat
  GraphicsFormat RGBA_ASTC5X5_UFloat
  GraphicsFormat RGBA_ASTC6X6_UFloat
  GraphicsFormat RGBA_ASTC8X8_UFloat
  GraphicsFormat RGBA_ASTC10X10_UFloat
  GraphicsFormat RGBA_ASTC12X12_UFloat
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.RayTracingMode
Наследуется от: Enum
Поля:
  int value__
  RayTracingMode Off
  RayTracingMode Static
  RayTracingMode DynamicTransform
  RayTracingMode DynamicGeometry
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.GraphicsFormatUtility
Наследуется от: object
Поля:
  GraphicsFormat[] tableNoStencil
  GraphicsFormat[] tableStencil
Свойства:
Методы:
  GraphicsFormat GetFormat(Texture texture)
  GraphicsFormat GetGraphicsFormat(TextureFormat format, bool isSRGB)
  GraphicsFormat GetGraphicsFormat_Native_TextureFormat(TextureFormat format, bool isSRGB)
  TextureFormat GetTextureFormat(GraphicsFormat format)
  TextureFormat GetTextureFormat_Native_GraphicsFormat(GraphicsFormat format)
  GraphicsFormat GetGraphicsFormat(RenderTextureFormat format, bool isSRGB)
  GraphicsFormat GetGraphicsFormat_Native_RenderTextureFormat(RenderTextureFormat format, bool isSRGB)
  GraphicsFormat GetGraphicsFormat(RenderTextureFormat format, RenderTextureReadWrite readWrite)
  GraphicsFormat GetDepthStencilFormatFromBitsLegacy_Native(int minimumDepthBits)
  GraphicsFormat GetDepthStencilFormat(int minimumDepthBits)
  int GetDepthBits(GraphicsFormat format)
  GraphicsFormat GetDepthStencilFormat(int minimumDepthBits, int minimumStencilBits)
  bool IsSRGBFormat(GraphicsFormat format)
  bool IsSwizzleFormat(GraphicsFormat format)
  GraphicsFormat GetSRGBFormat(GraphicsFormat format)
  GraphicsFormat GetLinearFormat(GraphicsFormat format)
  RenderTextureFormat GetRenderTextureFormat(GraphicsFormat format)
  UInt32 GetColorComponentCount(GraphicsFormat format)
  UInt32 GetAlphaComponentCount(GraphicsFormat format)
  UInt32 GetComponentCount(GraphicsFormat format)
  string GetFormatString(GraphicsFormat format)
  bool IsCompressedFormat(GraphicsFormat format)
  bool IsCompressedTextureFormat(TextureFormat format)
  bool CanDecompressFormat(GraphicsFormat format, bool wholeImage)
  bool CanDecompressFormat(GraphicsFormat format)
  bool IsPackedFormat(GraphicsFormat format)
  bool Is16BitPackedFormat(GraphicsFormat format)
  GraphicsFormat ConvertToAlphaFormat(GraphicsFormat format)
  bool IsAlphaOnlyFormat(GraphicsFormat format)
  bool IsAlphaTestFormat(GraphicsFormat format)
  bool HasAlphaChannel(GraphicsFormat format)
  bool IsDepthFormat(GraphicsFormat format)
  bool IsStencilFormat(GraphicsFormat format)
  bool IsIEEE754Format(GraphicsFormat format)
  bool IsFloatFormat(GraphicsFormat format)
  bool IsHalfFormat(GraphicsFormat format)
  bool IsUnsignedFormat(GraphicsFormat format)
  bool IsSignedFormat(GraphicsFormat format)
  bool IsNormFormat(GraphicsFormat format)
  bool IsUNormFormat(GraphicsFormat format)
  bool IsSNormFormat(GraphicsFormat format)
  bool IsIntegerFormat(GraphicsFormat format)
  bool IsUIntFormat(GraphicsFormat format)
  bool IsSIntFormat(GraphicsFormat format)
  bool IsXRFormat(GraphicsFormat format)
  bool IsDXTCFormat(GraphicsFormat format)
  bool IsRGTCFormat(GraphicsFormat format)
  bool IsBPTCFormat(GraphicsFormat format)
  bool IsBCFormat(GraphicsFormat format)
  bool IsPVRTCFormat(GraphicsFormat format)
  bool IsETCFormat(GraphicsFormat format)
  bool IsEACFormat(GraphicsFormat format)
  bool IsASTCFormat(GraphicsFormat format)
  bool IsCrunchFormat(TextureFormat format)
  FormatSwizzle GetSwizzleR(GraphicsFormat format)
  FormatSwizzle GetSwizzleG(GraphicsFormat format)
  FormatSwizzle GetSwizzleB(GraphicsFormat format)
  FormatSwizzle GetSwizzleA(GraphicsFormat format)
  UInt32 GetBlockSize(GraphicsFormat format)
  UInt32 GetBlockWidth(GraphicsFormat format)
  UInt32 GetBlockHeight(GraphicsFormat format)
  UInt32 ComputeMipmapSize(int width, int height, GraphicsFormat format)
  UInt32 ComputeMipmapSize_Native_2D(int width, int height, GraphicsFormat format)
  UInt32 ComputeMipmapSize(int width, int height, int depth, GraphicsFormat format)
  UInt32 ComputeMipmapSize_Native_3D(int width, int height, int depth, GraphicsFormat format)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.RayTracingSubMeshFlags
Наследуется от: Enum
Поля:
  int value__
  RayTracingSubMeshFlags Disabled
  RayTracingSubMeshFlags Enabled
  RayTracingSubMeshFlags ClosestHitOnly
  RayTracingSubMeshFlags UniqueAnyHitCalls
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.RayTracingAccelerationStructure
Наследуется от: object
Поля:
  IntPtr m_Ptr
Свойства:
Методы:
  void Finalize()
  void Dispose()
  void Dispose(bool disposing)
  void .ctor(RASSettings settings)
  void .ctor()
  IntPtr Create(RASSettings desc)
  void Destroy(RayTracingAccelerationStructure accelStruct)
  void Release()
  void Build()
  void Update()
  void Build(Vector3 relativeOrigin)
  void Update(Vector3 relativeOrigin)
  void AddInstance(Renderer targetRenderer, Boolean[] subMeshMask, Boolean[] subMeshTransparencyFlags, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, UInt32 id)
  void AddInstance(Renderer targetRenderer, RayTracingSubMeshFlags[] subMeshFlags, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, UInt32 id)
  void RemoveInstance(Renderer targetRenderer)
  void AddInstance(GraphicsBuffer aabbBuffer, UInt32 numElements, Material material, bool isCutOff, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, bool reuseBounds, UInt32 id)
  void AddInstance(GraphicsBuffer aabbBuffer, UInt32 numElements, Material material, Matrix4x4 instanceTransform, bool isCutOff, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, bool reuseBounds, UInt32 id)
  void AddInstance_Procedural(GraphicsBuffer aabbBuffer, UInt32 numElements, Material material, Matrix4x4 instanceTransform, bool isCutOff, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, bool reuseBounds, UInt32 id)
  void UpdateInstanceTransform(Renderer renderer)
  void UpdateInstanceMask(Renderer renderer, UInt32 mask)
  void UpdateInstanceID(Renderer renderer, UInt32 instanceID)
  ulong GetSize()
  UInt32 GetInstanceCount()
  void AddInstanceSubMeshFlagsArray(Renderer targetRenderer, RayTracingSubMeshFlags[] subMeshFlags, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, UInt32 id)
  IntPtr Create_Injected(RASSettings& desc)
  void Build_Injected(Vector3& relativeOrigin)
  void Update_Injected(Vector3& relativeOrigin)
  void AddInstance_Procedural_Injected(GraphicsBuffer aabbBuffer, UInt32 numElements, Material material, Matrix4x4& instanceTransform, bool isCutOff, bool enableTriangleCulling, bool frontTriangleCounterClockwise, UInt32 mask, bool reuseBounds, UInt32 id)
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.ShaderWarmupSetup
Наследуется от: ValueType
Поля:
  VertexAttributeDescriptor[] vdecl
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.ShaderWarmup
Наследуется от: object
Поля:
Свойства:
Методы:
  void WarmupShader(Shader shader, ShaderWarmupSetup setup)
  void WarmupShaderFromCollection(ShaderVariantCollection collection, Shader shader, ShaderWarmupSetup setup)
  void WarmupShader_Injected(Shader shader, ShaderWarmupSetup& setup)
  void WarmupShaderFromCollection_Injected(ShaderVariantCollection collection, Shader shader, ShaderWarmupSetup& setup)
--------------------------------------------------
Класс: UnityEngine.Experimental.Rendering.RayTracingShader
Наследуется от: Object
Поля:
Свойства:
  float maxRecursionDepth
Методы:
  float get_maxRecursionDepth()
  void SetFloat(int nameID, float val)
  void SetInt(int nameID, int val)
  void SetVector(int nameID, Vector4 val)
  void SetMatrix(int nameID, Matrix4x4 val)
  void SetFloatArray(int nameID, Single[] values)
  void SetIntArray(int nameID, Int32[] values)
  void SetVectorArray(int nameID, Vector4[] values)
  void SetMatrixArray(int nameID, Matrix4x4[] values)
  void SetTexture(int nameID, Texture texture)
  void SetBuffer(int nameID, ComputeBuffer buffer)
  void SetGraphicsBuffer(int nameID, GraphicsBuffer buffer)
  void SetConstantComputeBuffer(int nameID, ComputeBuffer buffer, int offset, int size)
  void SetConstantGraphicsBuffer(int nameID, GraphicsBuffer buffer, int offset, int size)
  void SetAccelerationStructure(int nameID, RayTracingAccelerationStructure accelerationStructure)
  void SetShaderPass(string passName)
  void SetTextureFromGlobal(int nameID, int globalTextureNameID)
  void Dispatch(string rayGenFunctionName, int width, int height, int depth, Camera camera)
  void SetBuffer(int nameID, GraphicsBuffer buffer)
  void .ctor()
  void SetFloat(string name, float val)
  void SetInt(string name, int val)
  void SetVector(string name, Vector4 val)
  void SetMatrix(string name, Matrix4x4 val)
  void SetVectorArray(string name, Vector4[] values)
  void SetMatrixArray(string name, Matrix4x4[] values)
  void SetFloats(string name, Single[] values)
  void SetFloats(int nameID, Single[] values)
  void SetInts(string name, Int32[] values)
  void SetInts(int nameID, Int32[] values)
  void SetBool(string name, bool val)
  void SetBool(int nameID, bool val)
  void SetTexture(string name, Texture texture)
  void SetBuffer(string name, ComputeBuffer buffer)
  void SetBuffer(string name, GraphicsBuffer buffer)
  void SetConstantBuffer(int nameID, ComputeBuffer buffer, int offset, int size)
  void SetConstantBuffer(string name, ComputeBuffer buffer, int offset, int size)
  void SetConstantBuffer(int nameID, GraphicsBuffer buffer, int offset, int size)
  void SetConstantBuffer(string name, GraphicsBuffer buffer, int offset, int size)
  void SetAccelerationStructure(string name, RayTracingAccelerationStructure accelerationStructure)
  void SetTextureFromGlobal(string name, string globalTextureName)
  void SetVector_Injected(int nameID, Vector4& val)
  void SetMatrix_Injected(int nameID, Matrix4x4& val)
--------------------------------------------------
Класс: UnityEngine.Assertions.Assert
Наследуется от: object
Поля:
  string UNITY_ASSERTIONS
  bool raiseExceptions
Свойства:
Методы:
  void Fail(string message, string userMessage)
  bool Equals(object obj1, object obj2)
  bool ReferenceEquals(object obj1, object obj2)
  void IsTrue(bool condition)
  void IsTrue(bool condition, string message)
  void IsFalse(bool condition)
  void IsFalse(bool condition, string message)
  void AreApproximatelyEqual(float expected, float actual)
  void AreApproximatelyEqual(float expected, float actual, string message)
  void AreApproximatelyEqual(float expected, float actual, float tolerance)
  void AreApproximatelyEqual(float expected, float actual, float tolerance, string message)
  void AreNotApproximatelyEqual(float expected, float actual)
  void AreNotApproximatelyEqual(float expected, float actual, string message)
  void AreNotApproximatelyEqual(float expected, float actual, float tolerance)
  void AreNotApproximatelyEqual(float expected, float actual, float tolerance, string message)
  void AreEqual(T expected, T actual)
  void AreEqual(T expected, T actual, string message)
  void AreEqual(T expected, T actual, string message, IEqualityComparer`1<T> comparer)
  void AreEqual(Object expected, Object actual, string message)
  void AreNotEqual(T expected, T actual)
  void AreNotEqual(T expected, T actual, string message)
  void AreNotEqual(T expected, T actual, string message, IEqualityComparer`1<T> comparer)
  void AreNotEqual(Object expected, Object actual, string message)
  void IsNull(T value)
  void IsNull(T value, string message)
  void IsNull(Object value, string message)
  void IsNotNull(T value)
  void IsNotNull(T value, string message)
  void IsNotNull(Object value, string message)
  void AreEqual(sbyte expected, sbyte actual)
  void AreEqual(sbyte expected, sbyte actual, string message)
  void AreNotEqual(sbyte expected, sbyte actual)
  void AreNotEqual(sbyte expected, sbyte actual, string message)
  void AreEqual(byte expected, byte actual)
  void AreEqual(byte expected, byte actual, string message)
  void AreNotEqual(byte expected, byte actual)
  void AreNotEqual(byte expected, byte actual, string message)
  void AreEqual(char expected, char actual)
  void AreEqual(char expected, char actual, string message)
  void AreNotEqual(char expected, char actual)
  void AreNotEqual(char expected, char actual, string message)
  void AreEqual(short expected, short actual)
  void AreEqual(short expected, short actual, string message)
  void AreNotEqual(short expected, short actual)
  void AreNotEqual(short expected, short actual, string message)
  void AreEqual(ushort expected, ushort actual)
  void AreEqual(ushort expected, ushort actual, string message)
  void AreNotEqual(ushort expected, ushort actual)
  void AreNotEqual(ushort expected, ushort actual, string message)
  void AreEqual(int expected, int actual)
  void AreEqual(int expected, int actual, string message)
  void AreNotEqual(int expected, int actual)
  void AreNotEqual(int expected, int actual, string message)
  void AreEqual(UInt32 expected, UInt32 actual)
  void AreEqual(UInt32 expected, UInt32 actual, string message)
  void AreNotEqual(UInt32 expected, UInt32 actual)
  void AreNotEqual(UInt32 expected, UInt32 actual, string message)
  void AreEqual(long expected, long actual)
  void AreEqual(long expected, long actual, string message)
  void AreNotEqual(long expected, long actual)
  void AreNotEqual(long expected, long actual, string message)
  void AreEqual(ulong expected, ulong actual)
  void AreEqual(ulong expected, ulong actual, string message)
  void AreNotEqual(ulong expected, ulong actual)
  void AreNotEqual(ulong expected, ulong actual, string message)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Assertions.AssertionException
Наследуется от: Exception
Поля:
  string m_UserMessage
Свойства:
  string Message
Методы:
  void .ctor(string message, string userMessage)
  string get_Message()
--------------------------------------------------
Класс: UnityEngine.Assertions.AssertionMessageUtil
Наследуется от: object
Поля:
  string k_Expected
  string k_AssertionFailed
Свойства:
Методы:
  string GetMessage(string failureMessage)
  string GetMessage(string failureMessage, string expected)
  string GetEqualityMessage(object actual, object expected, bool expectEqual)
  string NullFailureMessage(object value, bool expectNull)
  string BooleanFailureMessage(bool expected)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Assertions.Must.MustExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void MustBeTrue(bool value)
  void MustBeTrue(bool value, string message)
  void MustBeFalse(bool value)
  void MustBeFalse(bool value, string message)
  void MustBeApproximatelyEqual(float actual, float expected)
  void MustBeApproximatelyEqual(float actual, float expected, string message)
  void MustBeApproximatelyEqual(float actual, float expected, float tolerance)
  void MustBeApproximatelyEqual(float actual, float expected, float tolerance, string message)
  void MustNotBeApproximatelyEqual(float actual, float expected)
  void MustNotBeApproximatelyEqual(float actual, float expected, string message)
  void MustNotBeApproximatelyEqual(float actual, float expected, float tolerance)
  void MustNotBeApproximatelyEqual(float actual, float expected, float tolerance, string message)
  void MustBeEqual(T actual, T expected)
  void MustBeEqual(T actual, T expected, string message)
  void MustNotBeEqual(T actual, T expected)
  void MustNotBeEqual(T actual, T expected, string message)
  void MustBeNull(T expected)
  void MustBeNull(T expected, string message)
  void MustNotBeNull(T expected)
  void MustNotBeNull(T expected, string message)
--------------------------------------------------
Класс: UnityEngine.Assertions.Comparers.FloatComparer
Наследуется от: object
Поля:
  float m_Error
  bool m_Relative
  FloatComparer s_ComparerWithDefaultTolerance
  float kEpsilon
Свойства:
Методы:
  void .ctor()
  void .ctor(bool relative)
  void .ctor(float error)
  void .ctor(float error, bool relative)
  bool Equals(float a, float b)
  int GetHashCode(float obj)
  bool AreEqual(float expected, float actual, float error)
  bool AreEqualRelative(float expected, float actual, float error)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Apple.FrameCaptureDestination
Наследуется от: Enum
Поля:
  int value__
  FrameCaptureDestination DevTools
  FrameCaptureDestination GPUTraceDocument
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Apple.FrameCapture
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  bool IsDestinationSupportedImpl(FrameCaptureDestination dest)
  void BeginCaptureImpl(FrameCaptureDestination dest, string path)
  void EndCaptureImpl()
  void CaptureNextFrameImpl(FrameCaptureDestination dest, string path)
  bool IsDestinationSupported(FrameCaptureDestination dest)
  void BeginCaptureToXcode()
  void BeginCaptureToFile(string path)
  void EndCapture()
  void CaptureNextFrameToXcode()
  void CaptureNextFrameToFile(string path)
--------------------------------------------------
Класс: UnityEngine.TestTools.ExcludeFromCoverageAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.TestTools.CoveredSequencePoint
Наследуется от: ValueType
Поля:
  MethodBase method
  UInt32 ilOffset
  UInt32 hitCount
  string filename
  UInt32 line
  UInt32 column
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.TestTools.CoveredMethodStats
Наследуется от: ValueType
Поля:
  MethodBase method
  int totalSequencePoints
  int uncoveredSequencePoints
Свойства:
Методы:
  string GetTypeDisplayName(Type t)
  string ToString()
--------------------------------------------------
Класс: UnityEngine.TestTools.Coverage
Наследуется от: object
Поля:
Свойства:
  bool enabled
Методы:
  bool get_enabled()
  void set_enabled(bool value)
  CoveredSequencePoint[] GetSequencePointsFor_Internal(MethodBase method)
  void ResetFor_Internal(MethodBase method)
  CoveredMethodStats GetStatsFor_Internal(MethodBase method)
  CoveredSequencePoint[] GetSequencePointsFor(MethodBase method)
  CoveredMethodStats GetStatsFor(MethodBase method)
  CoveredMethodStats[] GetStatsFor(MethodBase[] methods)
  CoveredMethodStats[] GetStatsFor(Type type)
  CoveredMethodStats[] GetStatsForAllCoveredMethods()
  void ResetFor(MethodBase method)
  void ResetAll()
  void GetStatsFor_Internal_Injected(MethodBase method, CoveredMethodStats& ret)
--------------------------------------------------
