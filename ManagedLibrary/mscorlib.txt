Сборка: mscorlib.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.CodeAnalysis.EmbeddedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsUnmanagedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Interop
Наследуется от: object
Поля:
Свойства:
Методы:
  void GetRandomBytes(Byte* buffer, int length)
  IntPtr MemAlloc(UIntPtr sizeInBytes)
  void MemFree(IntPtr allocatedMemory)
--------------------------------------------------
Класс: AssemblyRef
Наследуется от: object
Поля:
  string SystemConfiguration
  string System
  string EcmaPublicKey
  string FrameworkPublicKeyFull
  string FrameworkPublicKeyFull2
  string MicrosoftPublicKey
  string MicrosoftJScript
  string MicrosoftVSDesigner
  string SystemData
  string SystemDesign
  string SystemDrawing
  string SystemWeb
  string SystemWebExtensions
  string SystemWindowsForms
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoCorlibVersion
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: Locale
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string GetText(string msg)
  string GetText(string fmt, Object[] args)
--------------------------------------------------
Класс: SR
Наследуется от: object
Поля:
  string RTL
  string ContinueButtonText
  string DebugMessageTruncated
  string DebugAssertTitleShort
  string DebugAssertTitle
  string NotSupported
  string DebugLaunchFailed
  string DebugLaunchFailedTitle
  string ObjectDisposed
  string ExceptionOccurred
  string MustAddListener
  string ToStringNull
  string EnumConverterInvalidValue
  string ConvertFromException
  string ConvertToException
  string ConvertInvalidPrimitive
  string ErrorMissingPropertyAccessors
  string ErrorInvalidPropertyType
  string ErrorMissingEventAccessors
  string ErrorInvalidEventHandler
  string ErrorInvalidEventType
  string InvalidMemberName
  string ErrorBadExtenderType
  string NullableConverterBadCtorArg
  string TypeDescriptorExpectedElementType
  string TypeDescriptorSameAssociation
  string TypeDescriptorAlreadyAssociated
  string TypeDescriptorProviderError
  string TypeDescriptorUnsupportedRemoteObject
  string TypeDescriptorArgsCountMismatch
  string ErrorCreateSystemEvents
  string ErrorCreateTimer
  string ErrorKillTimer
  string ErrorSystemEventsNotSupported
  string ErrorGetTempPath
  string CHECKOUTCanceled
  string ErrorInvalidServiceInstance
  string ErrorServiceExists
  string Argument_InvalidNumberStyles
  string Argument_InvalidHexStyle
  string Argument_ByteArrayLengthMustBeAMultipleOf4
  string Argument_InvalidCharactersInString
  string Argument_ParsedStringWasInvalid
  string Argument_MustBeBigInt
  string Format_InvalidFormatSpecifier
  string Format_TooLarge
  string ArgumentOutOfRange_MustBeLessThanUInt32MaxValue
  string ArgumentOutOfRange_MustBeNonNeg
  string NotSupported_NumberStyle
  string Overflow_BigIntInfinity
  string Overflow_NotANumber
  string Overflow_ParseBigInteger
  string Overflow_Int32
  string Overflow_Int64
  string Overflow_UInt32
  string Overflow_UInt64
  string Overflow_Decimal
  string Argument_FrameworkNameTooShort
  string Argument_FrameworkNameInvalid
  string Argument_FrameworkNameInvalidVersion
  string Argument_FrameworkNameMissingVersion
  string ArgumentNull_Key
  string Argument_InvalidValue
  string Arg_MultiRank
  string Barrier_ctor_ArgumentOutOfRange
  string Barrier_AddParticipants_NonPositive_ArgumentOutOfRange
  string Barrier_AddParticipants_Overflow_ArgumentOutOfRange
  string Barrier_InvalidOperation_CalledFromPHA
  string Barrier_RemoveParticipants_NonPositive_ArgumentOutOfRange
  string Barrier_RemoveParticipants_ArgumentOutOfRange
  string Barrier_RemoveParticipants_InvalidOperation
  string Barrier_SignalAndWait_ArgumentOutOfRange
  string Barrier_SignalAndWait_InvalidOperation_ZeroTotal
  string Barrier_SignalAndWait_InvalidOperation_ThreadsExceeded
  string Barrier_Dispose
  string BarrierPostPhaseException
  string UriTypeConverter_ConvertFrom_CannotConvert
  string UriTypeConverter_ConvertTo_CannotConvert
  string ISupportInitializeDescr
  string CantModifyListSortDescriptionCollection
  string Argument_NullComment
  string InvalidPrimitiveType
  string Cannot_Specify_Both_Compiler_Path_And_Version
  string CodeGenOutputWriter
  string CodeGenReentrance
  string InvalidLanguageIdentifier
  string InvalidTypeName
  string Empty_attribute
  string Invalid_nonnegative_integer_attribute
  string CodeDomProvider_NotDefined
  string Language_Names_Cannot_Be_Empty
  string Extension_Names_Cannot_Be_Empty_Or_Non_Period_Based
  string Unable_To_Locate_Type
  string NotSupported_CodeDomAPI
  string ArityDoesntMatch
  string PartialTrustErrorTextReplacement
  string PartialTrustIllegalProvider
  string IllegalAssemblyReference
  string NullOrEmpty_Value_in_Property
  string AutoGen_Comment_Line1
  string AutoGen_Comment_Line2
  string AutoGen_Comment_Line3
  string AutoGen_Comment_Line4
  string AutoGen_Comment_Line5
  string CantContainNullEntries
  string InvalidPathCharsInChecksum
  string InvalidRegion
  string Provider_does_not_support_options
  string MetaExtenderName
  string InvalidEnumArgument
  string InvalidArgument
  string InvalidNullArgument
  string LicExceptionTypeOnly
  string LicExceptionTypeAndInstance
  string LicMgrContextCannotBeChanged
  string LicMgrAlreadyLocked
  string LicMgrDifferentUser
  string InvalidElementType
  string InvalidIdentifier
  string ExecFailedToCreate
  string ExecTimeout
  string ExecBadreturn
  string ExecCantGetRetCode
  string ExecCantExec
  string ExecCantRevert
  string CompilerNotFound
  string DuplicateFileName
  string CollectionReadOnly
  string BitVectorFull
  string ArrayConverterText
  string CollectionConverterText
  string MultilineStringConverterText
  string CultureInfoConverterDefaultCultureString
  string CultureInfoConverterInvalidCulture
  string InvalidPrimitive
  string TimerInvalidInterval
  string TraceSwitchLevelTooHigh
  string TraceSwitchLevelTooLow
  string TraceSwitchInvalidLevel
  string TraceListenerIndentSize
  string TraceListenerFail
  string TraceAsTraceSource
  string InvalidLowBoundArgument
  string DuplicateComponentName
  string NotImplemented
  string OutOfMemory
  string EOF
  string IOError
  string BadChar
  string toStringNone
  string toStringUnknown
  string InvalidEnum
  string IndexOutOfRange
  string ErrorPropertyAccessorException
  string InvalidOperation
  string EmptyStack
  string PerformanceCounterDesc
  string PCCategoryName
  string PCCounterName
  string PCInstanceName
  string PCMachineName
  string PCInstanceLifetime
  string PropertyCategoryAction
  string PropertyCategoryAppearance
  string PropertyCategoryAsynchronous
  string PropertyCategoryBehavior
  string PropertyCategoryData
  string PropertyCategoryDDE
  string PropertyCategoryDesign
  string PropertyCategoryDragDrop
  string PropertyCategoryFocus
  string PropertyCategoryFont
  string PropertyCategoryFormat
  string PropertyCategoryKey
  string PropertyCategoryList
  string PropertyCategoryLayout
  string PropertyCategoryDefault
  string PropertyCategoryMouse
  string PropertyCategoryPosition
  string PropertyCategoryText
  string PropertyCategoryScale
  string PropertyCategoryWindowStyle
  string PropertyCategoryConfig
  string ArgumentNull_ArrayWithNullElements
  string OnlyAllowedOnce
  string BeginIndexNotNegative
  string LengthNotNegative
  string UnimplementedState
  string UnexpectedOpcode
  string NoResultOnFailed
  string UnterminatedBracket
  string TooManyParens
  string NestedQuantify
  string QuantifyAfterNothing
  string InternalError
  string IllegalRange
  string NotEnoughParens
  string BadClassInCharRange
  string ReversedCharRange
  string UndefinedReference
  string MalformedReference
  string UnrecognizedGrouping
  string UnterminatedComment
  string IllegalEndEscape
  string MalformedNameRef
  string UndefinedBackref
  string UndefinedNameRef
  string TooFewHex
  string MissingControl
  string UnrecognizedControl
  string UnrecognizedEscape
  string IllegalCondition
  string TooManyAlternates
  string MakeException
  string IncompleteSlashP
  string MalformedSlashP
  string InvalidGroupName
  string CapnumNotZero
  string AlternationCantCapture
  string AlternationCantHaveComment
  string CaptureGroupOutOfRange
  string SubtractionMustBeLast
  string UnknownProperty
  string ReplacementError
  string CountTooSmall
  string EnumNotStarted
  string Arg_InvalidArrayType
  string RegexMatchTimeoutException_Occurred
  string IllegalDefaultRegexMatchTimeoutInAppDomain
  string FileObject_AlreadyOpen
  string FileObject_Closed
  string FileObject_NotWhileWriting
  string FileObject_FileDoesNotExist
  string FileObject_MustBeClosed
  string FileObject_MustBeFileName
  string FileObject_InvalidInternalState
  string FileObject_PathNotSet
  string FileObject_Reading
  string FileObject_Writing
  string FileObject_InvalidEnumeration
  string FileObject_NoReset
  string DirectoryObject_MustBeDirName
  string DirectoryObjectPathDescr
  string FileObjectDetectEncodingDescr
  string FileObjectEncodingDescr
  string FileObjectPathDescr
  string Arg_EnumIllegalVal
  string Arg_OutOfRange_NeedNonNegNum
  string Argument_InvalidPermissionState
  string Argument_InvalidOidValue
  string Argument_WrongType
  string Arg_EmptyOrNullString
  string Arg_EmptyOrNullArray
  string Argument_InvalidClassAttribute
  string Argument_InvalidNameType
  string InvalidOperation_DuplicateItemNotAllowed
  string Cryptography_Asn_MismatchedOidInCollection
  string Cryptography_Cms_Envelope_Empty_Content
  string Cryptography_Cms_Invalid_Recipient_Info_Type
  string Cryptography_Cms_Invalid_Subject_Identifier_Type
  string Cryptography_Cms_Invalid_Subject_Identifier_Type_Value_Mismatch
  string Cryptography_Cms_Key_Agree_Date_Not_Available
  string Cryptography_Cms_Key_Agree_Other_Key_Attribute_Not_Available
  string Cryptography_Cms_MessageNotSigned
  string Cryptography_Cms_MessageNotSignedByNoSignature
  string Cryptography_Cms_MessageNotEncrypted
  string Cryptography_Cms_Not_Supported
  string Cryptography_Cms_RecipientCertificateNotFound
  string Cryptography_Cms_Sign_Empty_Content
  string Cryptography_Cms_Sign_No_Signature_First_Signer
  string Cryptography_DpApi_InvalidMemoryLength
  string Cryptography_InvalidHandle
  string Cryptography_InvalidContextHandle
  string Cryptography_InvalidStoreHandle
  string Cryptography_Oid_InvalidValue
  string Cryptography_Pkcs9_ExplicitAddNotAllowed
  string Cryptography_Pkcs9_InvalidOid
  string Cryptography_Pkcs9_MultipleSigningTimeNotAllowed
  string Cryptography_Pkcs9_AttributeMismatch
  string Cryptography_X509_AddFailed
  string Cryptography_X509_BadEncoding
  string Cryptography_X509_ExportFailed
  string Cryptography_X509_ExtensionMismatch
  string Cryptography_X509_InvalidFindType
  string Cryptography_X509_InvalidFindValue
  string Cryptography_X509_InvalidEncodingFormat
  string Cryptography_X509_InvalidContentType
  string Cryptography_X509_KeyMismatch
  string Cryptography_X509_RemoveFailed
  string Cryptography_X509_StoreNotOpen
  string Environment_NotInteractive
  string NotSupported_InvalidKeyImpl
  string NotSupported_KeyAlgorithm
  string NotSupported_PlatformRequiresNT
  string NotSupported_UnreadableStream
  string Security_InvalidValue
  string Unknown_Error
  string security_ServiceNameCollection_EmptyServiceName
  string security_ExtendedProtectionPolicy_UseDifferentConstructorForNever
  string security_ExtendedProtectionPolicy_NoEmptyServiceNameCollection
  string security_ExtendedProtection_NoOSSupport
  string net_nonClsCompliantException
  string net_illegalConfigWith
  string net_illegalConfigWithout
  string net_resubmitcanceled
  string net_redirect_perm
  string net_resubmitprotofailed
  string net_invalidversion
  string net_toolong
  string net_connclosed
  string net_mutualauthfailed
  string net_invasync
  string net_inasync
  string net_mustbeuri
  string net_format_shexp
  string net_cannot_load_proxy_helper
  string net_io_no_0timeouts
  string net_tooManyRedirections
  string net_authmodulenotregistered
  string net_authschemenotregistered
  string net_proxyschemenotsupported
  string net_maxsrvpoints
  string net_notconnected
  string net_notstream
  string net_nocontentlengthonget
  string net_contentlengthmissing
  string net_nonhttpproxynotallowed
  string net_need_writebuffering
  string net_nodefaultcreds
  string net_stopped
  string net_udpconnected
  string net_no_concurrent_io_allowed
  string net_needmorethreads
  string net_MethodNotSupportedException
  string net_ProtocolNotSupportedException
  string net_SelectModeNotSupportedException
  string net_InvalidSocketHandle
  string net_InvalidAddressFamily
  string net_InvalidEndPointAddressFamily
  string net_InvalidSocketAddressSize
  string net_invalidAddressList
  string net_invalidPingBufferSize
  string net_cant_perform_during_shutdown
  string net_cant_create_environment
  string net_protocol_invalid_family
  string net_protocol_invalid_multicast_family
  string net_empty_osinstalltype
  string net_unknown_osinstalltype
  string net_cant_determine_osinstalltype
  string net_osinstalltype
  string net_entire_body_not_written
  string net_must_provide_request_body
  string net_sockets_zerolist
  string net_sockets_blocking
  string net_sockets_useblocking
  string net_sockets_select
  string net_sockets_toolarge_select
  string net_sockets_empty_select
  string net_sockets_mustbind
  string net_sockets_mustlisten
  string net_sockets_mustnotlisten
  string net_sockets_mustnotbebound
  string net_sockets_namedmustnotbebound
  string net_sockets_invalid_socketinformation
  string net_sockets_invalid_ipaddress_length
  string net_sockets_invalid_optionValue
  string net_sockets_invalid_optionValue_all
  string net_sockets_invalid_dnsendpoint
  string net_sockets_disconnectedConnect
  string net_sockets_disconnectedAccept
  string net_tcplistener_mustbestopped
  string net_sockets_no_duplicate_async
  string net_socketopinprogress
  string net_buffercounttoosmall
  string net_multibuffernotsupported
  string net_ambiguousbuffers
  string net_sockets_ipv6only
  string net_perfcounter_initialized_success
  string net_perfcounter_initialized_error
  string net_perfcounter_nocategory
  string net_perfcounter_initialization_started
  string net_perfcounter_cant_queue_workitem
  string net_config_proxy
  string net_config_proxy_module_not_public
  string net_config_authenticationmodules
  string net_config_webrequestmodules
  string net_config_requestcaching
  string net_config_section_permission
  string net_config_element_permission
  string net_config_property_permission
  string net_WebResponseParseError_InvalidHeaderName
  string net_WebResponseParseError_InvalidContentLength
  string net_WebResponseParseError_IncompleteHeaderLine
  string net_WebResponseParseError_CrLfError
  string net_WebResponseParseError_InvalidChunkFormat
  string net_WebResponseParseError_UnexpectedServerResponse
  string net_webstatus_Success
  string net_webstatus_ReceiveFailure
  string net_webstatus_SendFailure
  string net_webstatus_PipelineFailure
  string net_webstatus_RequestCanceled
  string net_webstatus_ConnectionClosed
  string net_webstatus_TrustFailure
  string net_webstatus_SecureChannelFailure
  string net_webstatus_ServerProtocolViolation
  string net_webstatus_KeepAliveFailure
  string net_webstatus_ProxyNameResolutionFailure
  string net_webstatus_MessageLengthLimitExceeded
  string net_webstatus_CacheEntryNotFound
  string net_webstatus_RequestProhibitedByCachePolicy
  string net_webstatus_RequestProhibitedByProxy
  string net_httpstatuscode_NoContent
  string net_httpstatuscode_NonAuthoritativeInformation
  string net_httpstatuscode_ResetContent
  string net_httpstatuscode_PartialContent
  string net_httpstatuscode_MultipleChoices
  string net_httpstatuscode_Ambiguous
  string net_httpstatuscode_MovedPermanently
  string net_httpstatuscode_Moved
  string net_httpstatuscode_Found
  string net_httpstatuscode_Redirect
  string net_httpstatuscode_SeeOther
  string net_httpstatuscode_RedirectMethod
  string net_httpstatuscode_NotModified
  string net_httpstatuscode_UseProxy
  string net_httpstatuscode_TemporaryRedirect
  string net_httpstatuscode_RedirectKeepVerb
  string net_httpstatuscode_BadRequest
  string net_httpstatuscode_Unauthorized
  string net_httpstatuscode_PaymentRequired
  string net_httpstatuscode_Forbidden
  string net_httpstatuscode_NotFound
  string net_httpstatuscode_MethodNotAllowed
  string net_httpstatuscode_NotAcceptable
  string net_httpstatuscode_ProxyAuthenticationRequired
  string net_httpstatuscode_RequestTimeout
  string net_httpstatuscode_Conflict
  string net_httpstatuscode_Gone
  string net_httpstatuscode_LengthRequired
  string net_httpstatuscode_InternalServerError
  string net_httpstatuscode_NotImplemented
  string net_httpstatuscode_BadGateway
  string net_httpstatuscode_ServiceUnavailable
  string net_httpstatuscode_GatewayTimeout
  string net_httpstatuscode_HttpVersionNotSupported
  string net_emptystringset
  string net_emptystringcall
  string net_headers_req
  string net_headers_rsp
  string net_headers_toolong
  string net_WebHeaderInvalidNonAsciiChars
  string net_WebHeaderMissingColon
  string net_headerrestrict
  string net_io_completionportwasbound
  string net_io_writefailure
  string net_io_readfailure
  string net_io_connectionclosed
  string net_io_transportfailure
  string net_io_internal_bind
  string net_io_invalidnestedcall
  string net_io_must_be_rw_stream
  string net_io_header_id
  string net_io_out_range
  string net_io_encrypt
  string net_io_decrypt
  string net_io_read
  string net_io_write
  string net_io_eof
  string net_io_async_result
  string net_tls_version
  string net_perm_target
  string net_perm_both_regex
  string net_perm_none
  string net_perm_attrib_count
  string net_perm_invalid_val
  string net_perm_attrib_multi
  string net_perm_epname
  string net_perm_invalid_val_in_element
  string net_invalid_ip_addr
  string dns_bad_ip_address
  string net_bad_mac_address
  string net_ping
  string net_bad_ip_address_prefix
  string net_max_ip_address_list_length_exceeded
  string net_ipv4_not_installed
  string net_ipv6_not_installed
  string net_webclient
  string net_webclient_ContentType
  string net_webclient_Multipart
  string net_webclient_no_concurrent_io_allowed
  string net_webclient_invalid_baseaddress
  string net_container_add_cookie
  string net_cookie_invalid
  string net_cookie_size
  string net_cookie_parse_header
  string net_cookie_attribute
  string net_cookie_format
  string net_cookie_capacity_range
  string net_set_token
  string net_revert_token
  string net_ssl_io_async_context
  string net_ssl_io_encrypt
  string net_ssl_io_decrypt
  string net_ssl_io_context_expired
  string net_ssl_io_handshake_start
  string net_ssl_io_handshake
  string net_ssl_io_frame
  string net_ssl_io_corrupted
  string net_ssl_io_cert_validation
  string net_ssl_io_invalid_end_call
  string net_ssl_io_invalid_begin_call
  string net_ssl_io_no_server_cert
  string net_auth_bad_client_creds
  string net_auth_bad_client_creds_or_target_mismatch
  string net_auth_context_expectation
  string net_auth_context_expectation_remote
  string net_auth_supported_impl_levels
  string net_auth_no_anonymous_support
  string net_auth_reauth
  string net_auth_noauth
  string net_auth_client_server
  string net_auth_noencryption
  string net_auth_SSPI
  string net_auth_failure
  string net_auth_eof
  string net_auth_alert
  string net_auth_ignored_reauth
  string net_auth_empty_read
  string net_auth_must_specify_extended_protection_scheme
  string net_frame_size
  string net_frame_read_io
  string net_frame_read_size
  string net_frame_max_size
  string net_jscript_load
  string net_proxy_not_gmt
  string net_proxy_invalid_dayofweek
  string net_proxy_invalid_url_format
  string net_param_not_string
  string net_value_cannot_be_negative
  string net_invalid_offset
  string net_offset_plus_count
  string net_cannot_be_false
  string net_cache_shadowstream_not_writable
  string net_cache_validator_fail
  string net_cache_access_denied
  string net_cache_validator_result
  string net_cache_retrieve_failure
  string net_cache_not_supported_body
  string net_cache_not_supported_command
  string net_cache_not_accept_response
  string net_cache_method_failed
  string net_cache_key_failed
  string net_cache_no_stream
  string net_cache_unsupported_partial_stream
  string net_cache_not_configured
  string net_cache_non_seekable_stream_not_supported
  string net_invalid_cast
  string net_collection_readonly
  string net_not_ipermission
  string net_no_classname
  string net_no_typename
  string net_servicePointAddressNotSupportedInHostMode
  string net_Websockets_WebSocketBaseFaulted
  string net_WebSockets_Generic
  string net_WebSockets_NotAWebSocket_Generic
  string net_WebSockets_UnsupportedWebSocketVersion_Generic
  string net_WebSockets_HeaderError_Generic
  string net_WebSockets_UnsupportedProtocol_Generic
  string net_WebSockets_ClientSecWebSocketProtocolsBlank
  string net_WebSockets_InvalidState_Generic
  string net_WebSockets_InvalidMessageType_Generic
  string net_WebSockets_ConnectionClosedPrematurely_Generic
  string net_WebSockets_Scheme
  string net_WebSockets_AlreadyStarted
  string net_WebSockets_Connect101Expected
  string net_WebSockets_InvalidResponseHeader
  string net_WebSockets_NotConnected
  string net_WebSockets_InvalidRegistration
  string net_WebSockets_NoDuplicateProtocol
  string net_log_exception
  string net_log_sspi_enumerating_security_packages
  string net_log_sspi_security_package_not_found
  string net_log_sspi_security_context_input_buffer
  string net_log_sspi_security_context_input_buffers
  string net_log_sspi_selected_cipher_suite
  string net_log_remote_certificate
  string net_log_locating_private_key_for_certificate
  string net_log_cert_is_of_type_2
  string net_log_found_cert_in_store
  string net_log_did_not_find_cert_in_store
  string net_log_open_store_failed
  string net_log_got_certificate_from_delegate
  string net_log_no_delegate_and_have_no_client_cert
  string net_log_no_delegate_but_have_client_cert
  string net_log_attempting_restart_using_cert
  string net_log_no_issuers_try_all_certs
  string net_log_server_issuers_look_for_matching_certs
  string net_log_selected_cert
  string net_log_n_certs_after_filtering
  string net_log_finding_matching_certs
  string net_log_using_cached_credential
  string net_log_remote_cert_user_declared_valid
  string net_log_remote_cert_user_declared_invalid
  string net_log_remote_cert_has_no_errors
  string net_log_remote_cert_has_errors
  string net_log_remote_cert_not_available
  string net_log_remote_cert_name_mismatch
  string net_log_proxy_autodetect_script_location_parse_error
  string net_log_proxy_autodetect_failed
  string net_log_proxy_script_execution_error
  string net_log_proxy_script_download_compile_error
  string net_log_proxy_system_setting_update
  string net_log_proxy_update_due_to_ip_config_change
  string net_log_proxy_called_with_null_parameter
  string net_log_proxy_called_with_invalid_parameter
  string net_log_proxy_ras_supported
  string net_log_proxy_ras_notsupported_exception
  string net_log_proxy_winhttp_cant_open_session
  string net_log_proxy_winhttp_getproxy_failed
  string net_log_proxy_winhttp_timeout_error
  string net_log_cache_validation_failed_resubmit
  string net_log_cache_refused_server_response
  string net_log_cache_ftp_proxy_doesnt_support_partial
  string net_log_cache_ftp_method
  string net_log_cache_ftp_supports_bin_only
  string net_log_cache_replacing_entry_with_HTTP_200
  string net_log_cache_now_time
  string net_log_cache_max_age_absolute
  string net_log_cache_age1
  string net_log_cache_age1_date_header
  string net_log_cache_age1_last_synchronized
  string net_log_cache_age1_last_synchronized_age_header
  string net_log_cache_age2
  string net_log_cache_max_age_cache_s_max_age
  string net_log_cache_max_age_expires_date
  string net_log_cache_max_age_cache_max_age
  string net_log_cache_no_max_age_use_10_percent
  string net_log_cache_no_max_age_use_default
  string net_log_cache_validator_invalid_for_policy
  string net_log_cache_response_last_modified
  string net_log_cache_cache_last_modified
  string net_log_cache_partial_and_non_zero_content_offset
  string net_log_cache_response_valid_based_on_policy
  string net_log_cache_null_response_failure
  string net_log_cache_ftp_response_status
  string net_log_cache_resp_valid_based_on_retry
  string net_log_cache_no_update_based_on_method
  string net_log_cache_removed_existing_invalid_entry
  string net_log_cache_not_updated_based_on_policy
  string net_log_cache_not_updated_because_no_response
  string net_log_cache_removed_existing_based_on_method
  string net_log_cache_existing_not_removed_because_unexpected_response_status
  string net_log_cache_removed_existing_based_on_policy
  string net_log_cache_not_updated_based_on_ftp_response_status
  string net_log_cache_update_not_supported_for_ftp_restart
  string net_log_cache_removed_entry_because_ftp_restart_response_changed
  string net_log_cache_last_synchronized
  string net_log_cache_suppress_update_because_synched_last_minute
  string net_log_cache_updating_last_synchronized
  string net_log_cache_cannot_remove
  string net_log_cache_key_status
  string net_log_cache_key_remove_failed_status
  string net_log_cache_usecount_file
  string net_log_cache_stream
  string net_log_cache_filename
  string net_log_cache_lookup_failed
  string net_log_cache_exception
  string net_log_cache_expected_length
  string net_log_cache_last_modified
  string net_log_cache_expires
  string net_log_cache_max_stale
  string net_log_cache_dumping_metadata
  string net_log_cache_create_failed
  string net_log_cache_set_expires
  string net_log_cache_set_last_modified
  string net_log_cache_set_last_synchronized
  string net_log_cache_enable_max_stale
  string net_log_cache_disable_max_stale
  string net_log_cache_set_new_metadata
  string net_log_cache_dumping
  string net_log_cache_key
  string net_log_cache_no_commit
  string net_log_cache_error_deleting_filename
  string net_log_cache_update_failed
  string net_log_cache_delete_failed
  string net_log_cache_commit_failed
  string net_log_cache_committed_as_partial
  string net_log_cache_max_stale_and_update_status
  string net_log_cache_failing_request_with_exception
  string net_log_cache_request_method
  string net_log_cache_http_status_parse_failure
  string net_log_cache_http_status_line
  string net_log_cache_cache_control
  string net_log_cache_invalid_http_version
  string net_log_cache_no_http_response_header
  string net_log_cache_http_header_parse_error
  string net_log_cache_metadata_name_value_parse_error
  string net_log_cache_content_range_error
  string net_log_cache_cache_control_error
  string net_log_cache_unexpected_status
  string net_log_cache_object_and_exception
  string net_log_cache_revalidation_not_needed
  string net_log_cache_not_updated_based_on_cache_protocol_status
  string net_log_cache_closing_cache_stream
  string net_log_cache_exception_ignored
  string net_log_cache_no_cache_entry
  string net_log_cache_null_cached_stream
  string net_log_cache_requested_combined_but_null_cached_stream
  string net_log_cache_returned_range_cache
  string net_log_cache_entry_not_found_freshness_undefined
  string net_log_cache_dumping_cache_context
  string net_log_cache_result
  string net_log_cache_uri_with_query_has_no_expiration
  string net_log_cache_uri_with_query_and_cached_resp_from_http_10
  string net_log_cache_valid_as_fresh_or_because_policy
  string net_log_cache_accept_based_on_retry_count
  string net_log_cache_date_header_older_than_cache_entry
  string net_log_cache_server_didnt_satisfy_range
  string net_log_cache_304_received_on_unconditional_request
  string net_log_cache_304_received_on_unconditional_request_expected_200_206
  string net_log_cache_last_modified_header_older_than_cache_entry
  string net_log_cache_freshness_outside_policy_limits
  string net_log_cache_need_to_remove_invalid_cache_entry_304
  string net_log_cache_resp_status
  string net_log_cache_resp_304_or_request_head
  string net_log_cache_dont_update_cached_headers
  string net_log_cache_update_cached_headers
  string net_log_cache_partial_resp_not_combined_with_existing_entry
  string net_log_cache_request_contains_conditional_header
  string net_log_cache_not_a_get_head_post
  string net_log_cache_cannot_update_cache_if_304
  string net_log_cache_cannot_update_cache_with_head_resp
  string net_log_cache_http_resp_is_null
  string net_log_cache_resp_cache_control_is_no_store
  string net_log_cache_resp_cache_control_is_public
  string net_log_cache_resp_cache_control_is_private
  string net_log_cache_resp_cache_control_is_private_plus_headers
  string net_log_cache_resp_older_than_cache
  string net_log_cache_revalidation_required
  string net_log_cache_needs_revalidation
  string net_log_cache_resp_allows_caching
  string net_log_cache_auth_header_and_no_s_max_age
  string net_log_cache_post_resp_without_cache_control_or_expires
  string net_log_cache_valid_based_on_status_code
  string net_log_cache_resp_no_cache_control
  string net_log_cache_age
  string net_log_cache_policy_min_fresh
  string net_log_cache_policy_max_age
  string net_log_cache_policy_cache_sync_date
  string net_log_cache_policy_max_stale
  string net_log_cache_control_no_cache
  string net_log_cache_control_no_cache_removing_some_headers
  string net_log_cache_control_must_revalidate
  string net_log_cache_cached_auth_header
  string net_log_cache_cached_auth_header_no_control_directive
  string net_log_cache_after_validation
  string net_log_cache_resp_status_304
  string net_log_cache_head_resp_has_different_content_length
  string net_log_cache_head_resp_has_different_content_md5
  string net_log_cache_head_resp_has_different_etag
  string net_log_cache_304_head_resp_has_different_last_modified
  string net_log_cache_existing_entry_has_to_be_discarded
  string net_log_cache_existing_entry_should_be_discarded
  string net_log_cache_206_resp_non_matching_entry
  string net_log_cache_206_resp_starting_position_not_adjusted
  string net_log_cache_combined_resp_requested
  string net_log_cache_updating_headers_on_304
  string net_log_cache_suppressing_headers_update_on_304
  string net_log_cache_status_code_not_304_206
  string net_log_cache_sxx_resp_cache_only
  string net_log_cache_sxx_resp_can_be_replaced
  string net_log_cache_vary_header_empty
  string net_log_cache_vary_header_contains_asterisks
  string net_log_cache_no_headers_in_metadata
  string net_log_cache_vary_header_mismatched_count
  string net_log_cache_vary_header_mismatched_field
  string net_log_cache_vary_header_match
  string net_log_cache_range
  string net_log_cache_range_invalid_format
  string net_log_cache_range_not_in_cache
  string net_log_cache_range_in_cache
  string net_log_cache_partial_resp
  string net_log_cache_range_request_range
  string net_log_cache_could_be_partial
  string net_log_cache_condition_if_none_match
  string net_log_cache_condition_if_modified_since
  string net_log_cache_cannot_construct_conditional_request
  string net_log_cache_cannot_construct_conditional_range_request
  string net_log_cache_entry_size_too_big
  string net_log_cache_condition_if_range
  string net_log_cache_conditional_range_not_implemented_on_http_10
  string net_log_cache_saving_request_headers
  string net_log_cache_only_byte_range_implemented
  string net_log_cache_multiple_complex_range_not_implemented
  string net_log_digest_hash_algorithm_not_supported
  string net_log_digest_qop_not_supported
  string net_log_digest_requires_nonce
  string net_log_auth_invalid_challenge
  string net_log_unknown
  string net_log_operation_returned_something
  string net_log_buffered_n_bytes
  string net_log_method_equal
  string net_log_releasing_connection
  string net_log_unexpected_exception
  string net_log_server_response_error_code
  string net_log_resubmitting_request
  string net_log_retrieving_localhost_exception
  string net_log_resolved_servicepoint_may_not_be_remote_server
  string net_log_closed_idle
  string net_log_received_status_line
  string net_log_sending_headers
  string net_log_received_headers
  string net_log_shell_expression_pattern_format_warning
  string net_log_exception_in_callback
  string net_log_sending_command
  string net_log_received_response
  string net_log_socket_connected
  string net_log_socket_accepted
  string net_log_socket_not_logged_file
  string net_log_socket_connect_dnsendpoint
  string MailAddressInvalidFormat
  string MailSubjectInvalidFormat
  string MailBase64InvalidCharacter
  string MailCollectionIsReadOnly
  string MailDateInvalidFormat
  string MailHeaderFieldAlreadyExists
  string MailHeaderFieldInvalidCharacter
  string MailHeaderFieldMalformedHeader
  string MailHeaderFieldMismatchedName
  string MailHeaderIndexOutOfBounds
  string MailHeaderItemAccessorOnlySingleton
  string MailHeaderListHasChanged
  string MailHeaderResetCalledBeforeEOF
  string MailHeaderTargetArrayTooSmall
  string MailHeaderInvalidCID
  string MailHostNotFound
  string MailReaderGetContentStreamAlreadyCalled
  string MailReaderTruncated
  string MailWriterIsInContent
  string MailServerDoesNotSupportStartTls
  string MailServerResponse
  string SSPIAuthenticationOrSPNNull
  string SSPIPInvokeError
  string SmtpAlreadyConnected
  string SmtpAuthenticationFailed
  string SmtpAuthenticationFailedNoCreds
  string SmtpDataStreamOpen
  string SmtpDefaultMimePreamble
  string SmtpDefaultSubject
  string SmtpInvalidResponse
  string SmtpNotConnected
  string SmtpSystemStatus
  string SmtpHelpMessage
  string SmtpServiceReady
  string SmtpServiceClosingTransmissionChannel
  string SmtpOK
  string SmtpUserNotLocalWillForward
  string SmtpStartMailInput
  string SmtpServiceNotAvailable
  string SmtpMailboxBusy
  string SmtpLocalErrorInProcessing
  string SmtpInsufficientStorage
  string SmtpPermissionDenied
  string SmtpCommandUnrecognized
  string SmtpSyntaxError
  string SmtpCommandNotImplemented
  string SmtpBadCommandSequence
  string SmtpCommandParameterNotImplemented
  string SmtpMailboxUnavailable
  string SmtpUserNotLocalTryAlternatePath
  string SmtpExceededStorageAllocation
  string SmtpMailboxNameNotAllowed
  string SmtpTransactionFailed
  string SmtpSendMailFailure
  string SmtpRecipientFailed
  string SmtpRecipientRequired
  string SmtpFromRequired
  string SmtpAllRecipientsFailed
  string SmtpClientNotPermitted
  string SmtpMustIssueStartTlsFirst
  string SmtpNeedAbsolutePickupDirectory
  string SmtpGetIisPickupDirectoryFailed
  string SmtpPickupDirectoryDoesnotSupportSsl
  string SmtpOperationInProgress
  string SmtpAuthResponseInvalid
  string SmtpEhloResponseInvalid
  string SmtpNonAsciiUserNotSupported
  string SmtpInvalidHostName
  string MimeTransferEncodingNotSupported
  string SeekNotSupported
  string WriteNotSupported
  string InvalidHexDigit
  string InvalidSSPIContext
  string InvalidSSPIContextKey
  string InvalidSSPINegotiationElement
  string InvalidHeaderName
  string InvalidHeaderValue
  string CannotGetEffectiveTimeOfSSPIContext
  string CannotGetExpiryTimeOfSSPIContext
  string ReadNotSupported
  string InvalidAsyncResult
  string UnspecifiedHost
  string InvalidPort
  string SmtpInvalidOperationDuringSend
  string MimePartCantResetStream
  string MediaTypeInvalid
  string ContentTypeInvalid
  string ContentDispositionInvalid
  string AttributeNotSupported
  string Cannot_remove_with_null
  string Config_base_elements_only
  string Config_base_no_child_nodes
  string Config_base_required_attribute_empty
  string Config_base_required_attribute_missing
  string Config_base_time_overflow
  string Config_base_type_must_be_configurationvalidation
  string Config_base_type_must_be_typeconverter
  string Config_base_unknown_format
  string Config_base_unrecognized_attribute
  string Config_base_unrecognized_element
  string Config_invalid_boolean_attribute
  string Config_invalid_integer_attribute
  string Config_invalid_positive_integer_attribute
  string Config_invalid_type_attribute
  string Config_missing_required_attribute
  string Config_name_value_file_section_file_invalid_root
  string Config_provider_must_implement_type
  string Config_provider_name_null_or_empty
  string Config_provider_not_found
  string Config_property_name_cannot_be_empty
  string Config_section_cannot_clear_locked_section
  string Config_section_record_not_found
  string Config_source_cannot_contain_file
  string Config_system_already_set
  string Config_unable_to_read_security_policy
  string Config_write_xml_returned_null
  string Cannot_clear_sections_within_group
  string Cannot_exit_up_top_directory
  string Could_not_create_listener
  string TL_InitializeData_NotSpecified
  string Could_not_create_type_instance
  string Could_not_find_type
  string Could_not_get_constructor
  string EmptyTypeName_NotAllowed
  string Incorrect_base_type
  string Only_specify_one
  string Provider_Already_Initialized
  string Reference_listener_cant_have_properties
  string Reference_to_nonexistent_listener
  string SettingsPropertyNotFound
  string SettingsPropertyReadOnly
  string SettingsPropertyWrongType
  string Type_isnt_tracelistener
  string Unable_to_convert_type_from_string
  string Unable_to_convert_type_to_string
  string Value_must_be_numeric
  string Could_not_create_from_default_value
  string Could_not_create_from_default_value_2
  string InvalidDirName
  string FSW_IOError
  string PatternInvalidChar
  string BufferSizeTooLarge
  string FSW_ChangedFilter
  string FSW_Enabled
  string FSW_Filter
  string FSW_IncludeSubdirectories
  string FSW_Path
  string FSW_SynchronizingObject
  string FSW_Changed
  string FSW_Created
  string FSW_Deleted
  string FSW_Renamed
  string FSW_BufferOverflow
  string FileSystemWatcherDesc
  string NotSet
  string TimerAutoReset
  string TimerEnabled
  string TimerInterval
  string TimerIntervalElapsed
  string TimerSynchronizingObject
  string MismatchedCounterTypes
  string NoPropertyForAttribute
  string InvalidAttributeType
  string Generic_ArgCantBeEmptyString
  string BadLogName
  string InvalidProperty
  string CantMonitorEventLog
  string InitTwice
  string InvalidParameter
  string MissingParameter
  string ParameterTooLong
  string LocalSourceAlreadyExists
  string SourceAlreadyExists
  string LocalLogAlreadyExistsAsSource
  string LogAlreadyExistsAsSource
  string DuplicateLogName
  string RegKeyMissing
  string LocalRegKeyMissing
  string RegKeyMissingShort
  string InvalidParameterFormat
  string NoLogName
  string RegKeyNoAccess
  string MissingLog
  string SourceNotRegistered
  string LocalSourceNotRegistered
  string CantRetrieveEntries
  string IndexOutOfBounds
  string CantReadLogEntryAt
  string MissingLogProperty
  string CantOpenLog
  string NeedSourceToOpen
  string NeedSourceToWrite
  string CantOpenLogAccess
  string LogEntryTooLong
  string TooManyReplacementStrings
  string LogSourceMismatch
  string NoAccountInfo
  string NoCurrentEntry
  string MessageNotFormatted
  string EventID
  string LogDoesNotExists
  string InvalidCustomerLogName
  string CannotDeleteEqualSource
  string RentionDaysOutOfRange
  string MaximumKilobytesOutOfRange
  string SomeLogsInaccessible
  string SomeLogsInaccessibleToCreate
  string BadConfigSwitchValue
  string ConfigSectionsUnique
  string ConfigSectionsUniquePerSection
  string SourceListenerDoesntExist
  string SourceSwitchDoesntExist
  string CategoryHelpCorrupt
  string CounterNameCorrupt
  string CounterDataCorrupt
  string ReadOnlyCounter
  string ReadOnlyRemoveInstance
  string NotCustomCounter
  string CategoryNameMissing
  string CounterNameMissing
  string InstanceNameProhibited
  string InstanceNameRequired
  string MissingInstance
  string PerformanceCategoryExists
  string InvalidCounterName
  string DuplicateCounterName
  string CantChangeCategoryRegistration
  string CantDeleteCategory
  string MissingCategory
  string MissingCategoryDetail
  string CantReadCategory
  string MissingCounter
  string CategoryNameNotSet
  string CounterExists
  string CantReadCategoryIndex
  string CantReadCounter
  string CantReadInstance
  string RemoteWriting
  string CounterLayout
  string PossibleDeadlock
  string SharedMemoryGhosted
  string HelpNotAvailable
  string PerfInvalidHelp
  string PerfInvalidCounterName
  string PerfInvalidCategoryName
  string MustAddCounterCreationData
  string RemoteCounterAdmin
  string NoInstanceInformation
  string PerfCounterPdhError
  string MultiInstanceOnly
  string SingleInstanceOnly
  string InstanceNameTooLong
  string CategoryNameTooLong
  string InstanceLifetimeProcessonReadOnly
  string InstanceLifetimeProcessforSingleInstance
  string InstanceAlreadyExists
  string CantSetLifetimeAfterInitialized
  string ProcessLifetimeNotValidInGlobal
  string CantConvertProcessToGlobal
  string CantConvertGlobalToProcess
  string PCNotSupportedUnderAppContainer
  string PriorityClassNotSupported
  string WinNTRequired
  string Win2kRequired
  string NoAssociatedProcess
  string ProcessIdRequired
  string NotSupportedRemote
  string NoProcessInfo
  string WaitTillExit
  string NoProcessHandle
  string MissingProccess
  string BadMinWorkset
  string BadMaxWorkset
  string WinNTRequiredForRemote
  string ProcessHasExited
  string ProcessHasExitedNoId
  string ThreadExited
  string Win2000Required
  string ProcessNotFound
  string CantGetProcessId
  string ProcessDisabled
  string WaitReasonUnavailable
  string NotSupportedRemoteThread
  string UseShellExecuteRequiresSTA
  string CantRedirectStreams
  string CantUseEnvVars
  string CantStartAsUser
  string CouldntConnectToRemoteMachine
  string CouldntGetProcessInfos
  string InputIdleUnkownError
  string FileNameMissing
  string EnvironmentBlock
  string EnumProcessModuleFailed
  string EnumProcessModuleFailedDueToWow
  string PendingAsyncOperation
  string NoAsyncOperation
  string InvalidApplication
  string StandardOutputEncodingNotAllowed
  string StandardErrorEncodingNotAllowed
  string CountersOOM
  string MappingCorrupted
  string SetSecurityDescriptorFailed
  string CantCreateFileMapping
  string CantMapFileView
  string CantGetMappingSize
  string CantGetStandardOut
  string CantGetStandardIn
  string CantGetStandardError
  string CantMixSyncAsyncOperation
  string NoFileMappingSize
  string EnvironmentBlockTooLong
  string Arg_SecurityException
  string ArgumentNull_Array
  string ArgumentNull_Buffer
  string IO_UnknownError
  string NotSupported_UnwritableStream
  string ObjectDisposed_WriterClosed
  string NotSupportedOS
  string BaudRate
  string DataBits
  string DiscardNull
  string DtrEnable
  string EncodingMonitoringDescription
  string Handshake
  string NewLine
  string Parity
  string ParityReplace
  string PortName
  string ReadBufferSize
  string ReadTimeout
  string ReceivedBytesThreshold
  string RtsEnable
  string SerialPortDesc
  string StopBits
  string WriteBufferSize
  string WriteTimeout
  string SerialErrorReceived
  string SerialPinChanged
  string SerialDataReceived
  string CounterType
  string CounterName
  string CounterHelp
  string EventLogDesc
  string ErrorDataReceived
  string LogEntries
  string LogLog
  string LogMachineName
  string LogMonitoring
  string LogSynchronizingObject
  string LogSource
  string LogEntryWritten
  string LogEntryMachineName
  string LogEntryData
  string LogEntryIndex
  string LogEntryCategory
  string LogEntryCategoryNumber
  string LogEntryEventID
  string LogEntryEntryType
  string LogEntryMessage
  string LogEntrySource
  string LogEntryReplacementStrings
  string LogEntryResourceId
  string LogEntryTimeGenerated
  string LogEntryTimeWritten
  string LogEntryUserName
  string OutputDataReceived
  string PC_CounterHelp
  string PC_CounterType
  string PC_ReadOnly
  string PC_RawValue
  string ProcessAssociated
  string ProcessDesc
  string ProcessExitCode
  string ProcessTerminated
  string ProcessExitTime
  string ProcessHandle
  string ProcessHandleCount
  string ProcessId
  string ProcessMachineName
  string ProcessMainModule
  string ProcessModules
  string ProcessSynchronizingObject
  string ProcessSessionId
  string ProcessThreads
  string ProcessEnableRaisingEvents
  string ProcessExited
  string ProcessFileName
  string ProcessWorkingDirectory
  string ProcessBasePriority
  string ProcessMainWindowHandle
  string ProcessMainWindowTitle
  string ProcessMaxWorkingSet
  string ProcessMinWorkingSet
  string ProcessNonpagedSystemMemorySize
  string ProcessPagedMemorySize
  string ProcessPagedSystemMemorySize
  string ProcessPeakPagedMemorySize
  string ProcessPeakWorkingSet
  string ProcessPeakVirtualMemorySize
  string ProcessPriorityBoostEnabled
  string ProcessPriorityClass
  string ProcessPrivateMemorySize
  string ProcessPrivilegedProcessorTime
  string ProcessProcessName
  string ProcessProcessorAffinity
  string ProcessResponding
  string ProcessStandardError
  string ProcessStandardInput
  string ProcessStandardOutput
  string ProcessStartInfo
  string ProcessStartTime
  string ProcessTotalProcessorTime
  string ProcessUserProcessorTime
  string ProcessVirtualMemorySize
  string ProcessWorkingSet
  string ProcModModuleName
  string ProcModFileName
  string ProcModBaseAddress
  string ProcModModuleMemorySize
  string ProcModEntryPointAddress
  string ProcessVerb
  string ProcessArguments
  string ProcessErrorDialog
  string ProcessWindowStyle
  string ProcessCreateNoWindow
  string ProcessEnvironmentVariables
  string ProcessRedirectStandardInput
  string ProcessRedirectStandardOutput
  string ProcessRedirectStandardError
  string ProcessUseShellExecute
  string ThreadBasePriority
  string ThreadCurrentPriority
  string ThreadId
  string ThreadPriorityBoostEnabled
  string ThreadPriorityLevel
  string ThreadPrivilegedProcessorTime
  string ThreadStartAddress
  string ThreadStartTime
  string ThreadThreadState
  string ThreadTotalProcessorTime
  string ThreadUserProcessorTime
  string ThreadWaitReason
  string VerbEditorDefault
  string AppSettingsReaderNoKey
  string AppSettingsReaderNoParser
  string AppSettingsReaderCantParse
  string AppSettingsReaderEmptyString
  string InvalidPermissionState
  string PermissionNumberOfElements
  string PermissionItemExists
  string PermissionItemDoesntExist
  string PermissionBadParameterEnum
  string PermissionInvalidLength
  string PermissionTypeMismatch
  string Argument_NotAPermissionElement
  string Argument_InvalidXMLBadVersion
  string InvalidPermissionLevel
  string TargetNotWebBrowserPermissionLevel
  string WebBrowserBadXml
  string KeyedCollNeedNonNegativeNum
  string KeyedCollDuplicateKey
  string KeyedCollReferenceKeyNotFound
  string KeyedCollKeyNotFound
  string KeyedCollInvalidKey
  string KeyedCollCapacityOverflow
  string OrderedDictionary_ReadOnly
  string OrderedDictionary_SerializationMismatch
  string Async_ExceptionOccurred
  string Async_QueueingFailed
  string Async_OperationCancelled
  string Async_OperationAlreadyCompleted
  string Async_NullDelegate
  string BackgroundWorker_AlreadyRunning
  string BackgroundWorker_CancellationNotSupported
  string BackgroundWorker_OperationCompleted
  string BackgroundWorker_ProgressNotSupported
  string BackgroundWorker_WorkerAlreadyRunning
  string BackgroundWorker_WorkerDoesntReportProgress
  string BackgroundWorker_WorkerDoesntSupportCancellation
  string Async_ProgressChangedEventArgs_ProgressPercentage
  string Async_ProgressChangedEventArgs_UserState
  string Async_AsyncEventArgs_Cancelled
  string Async_AsyncEventArgs_Error
  string Async_AsyncEventArgs_UserState
  string BackgroundWorker_CancellationPending
  string BackgroundWorker_DoWork
  string BackgroundWorker_IsBusy
  string BackgroundWorker_ProgressChanged
  string BackgroundWorker_RunWorkerCompleted
  string BackgroundWorker_WorkerReportsProgress
  string BackgroundWorker_WorkerSupportsCancellation
  string BackgroundWorker_DoWorkEventArgs_Argument
  string BackgroundWorker_DoWorkEventArgs_Result
  string BackgroundWorker_Desc
  string InstanceCreationEditorDefaultText
  string PropertyTabAttributeBadPropertyTabScope
  string PropertyTabAttributeTypeLoadException
  string PropertyTabAttributeArrayLengthMismatch
  string PropertyTabAttributeParamsBothNull
  string InstanceDescriptorCannotBeStatic
  string InstanceDescriptorMustBeStatic
  string InstanceDescriptorMustBeReadable
  string InstanceDescriptorLengthMismatch
  string ToolboxItemAttributeFailedGetType
  string PropertyDescriptorCollectionBadValue
  string PropertyDescriptorCollectionBadKey
  string AspNetHostingPermissionBadXml
  string CorruptedGZipHeader
  string UnknownCompressionMode
  string UnknownState
  string InvalidHuffmanData
  string InvalidCRC
  string InvalidStreamSize
  string UnknownBlockType
  string InvalidBlockLength
  string GenericInvalidData
  string CannotReadFromDeflateStream
  string CannotWriteToDeflateStream
  string NotReadableStream
  string NotWriteableStream
  string InvalidArgumentOffsetCount
  string InvalidBeginCall
  string InvalidEndCall
  string StreamSizeOverflow
  string ZLibErrorDLLLoadError
  string ZLibErrorUnexpected
  string ZLibErrorInconsistentStream
  string ZLibErrorSteamFreedPrematurely
  string ZLibErrorNotEnoughMemory
  string ZLibErrorIncorrectInitParameters
  string ZLibErrorVersionMismatch
  string InvalidOperation_HCCountOverflow
  string Argument_InvalidThreshold
  string Argument_SemaphoreInitialMaximum
  string Argument_WaitHandleNameTooLong
  string WaitHandleCannotBeOpenedException_InvalidHandle
  string ArgumentNotAPermissionElement
  string ArgumentWrongType
  string BadXmlVersion
  string BinarySerializationNotSupported
  string BothScopeAttributes
  string NoScopeAttributes
  string PositionOutOfRange
  string ProviderInstantiationFailed
  string ProviderTypeLoadFailed
  string SaveAppScopedNotSupported
  string SettingsResetFailed
  string SettingsSaveFailed
  string SettingsSaveFailedNoSection
  string StringDeserializationFailed
  string StringSerializationFailed
  string UnknownSerializationFormat
  string UnknownSeekOrigin
  string UnknownUserLevel
  string UserSettingsNotSupported
  string XmlDeserializationFailed
  string XmlSerializationFailed
  string MemberRelationshipService_RelationshipNotSupported
  string MaskedTextProviderPasswordAndPromptCharError
  string MaskedTextProviderInvalidCharError
  string MaskedTextProviderMaskNullOrEmpty
  string MaskedTextProviderMaskInvalidChar
  string StandardOleMarshalObjectGetMarshalerFailed
  string SoundAPIBadSoundLocation
  string SoundAPIFileDoesNotExist
  string SoundAPIFormatNotSupported
  string SoundAPIInvalidWaveFile
  string SoundAPIInvalidWaveHeader
  string SoundAPILoadTimedOut
  string SoundAPILoadTimeout
  string SoundAPIReadError
  string WrongActionForCtor
  string MustBeResetAddOrRemoveActionForCtor
  string ResetActionRequiresNullItem
  string ResetActionRequiresIndexMinus1
  string IndexCannotBeNegative
  string ObservableCollectionReentrancyNotAllowed
  string Arg_ArgumentOutOfRangeException
  string mono_net_io_shutdown
  string mono_net_io_renegotiate
  string net_ssl_io_already_shutdown
  string net_log_set_socketoption_reuseport_default_on
  string net_log_set_socketoption_reuseport_not_supported
  string net_log_set_socketoption_reuseport
  string net_ssl_app_protocols_invalid
  string net_ssl_app_protocol_invalid
  string net_conflicting_options
  string Arg_NonZeroLowerBound
  string Arg_WrongType
  string Arg_ArrayPlusOffTooSmall
  string ArgumentOutOfRange_NeedNonNegNum
  string ArgumentOutOfRange_SmallCapacity
  string Argument_InvalidOffLen
  string Argument_AddingDuplicate
  string InvalidOperation_ConcurrentOperationsNotSupported
  string InvalidOperation_EmptyQueue
  string InvalidOperation_EnumOpCantHappen
  string InvalidOperation_EnumFailedVersion
  string InvalidOperation_EmptyStack
  string InvalidOperation_EnumNotStarted
  string InvalidOperation_EnumEnded
  string NotSupported_KeyCollectionSet
  string NotSupported_ValueCollectionSet
  string Arg_ArrayLengthsDiffer
  string Arg_BitArrayTypeUnsupported
  string Arg_HSCapacityOverflow
  string Arg_HTCapacityOverflow
  string Arg_InsufficientSpace
  string Arg_RankMultiDimNotSupported
  string Argument_ArrayTooLarge
  string Argument_InvalidArrayType
  string ArgumentOutOfRange_BiggerThanCollection
  string ArgumentOutOfRange_Index
  string ExternalLinkedListNode
  string LinkedListEmpty
  string LinkedListNodeIsAttached
  string NotSupported_SortedListNestedWrite
  string SortedSet_LowerValueGreaterThanUpperValue
  string Serialization_InvalidOnDeser
  string Serialization_MismatchedCount
  string Serialization_MissingKeys
  string Serialization_MissingValues
  string Arg_KeyNotFoundWithKey
  string BlockingCollection_Add_ConcurrentCompleteAdd
  string BlockingCollection_Add_Failed
  string BlockingCollection_CantAddAnyWhenCompleted
  string BlockingCollection_CantTakeAnyWhenAllDone
  string BlockingCollection_CantTakeWhenDone
  string BlockingCollection_Completed
  string BlockingCollection_CopyTo_IncorrectType
  string BlockingCollection_CopyTo_MultiDim
  string BlockingCollection_CopyTo_NonNegative
  string Collection_CopyTo_TooManyElems
  string BlockingCollection_ctor_BoundedCapacityRange
  string BlockingCollection_ctor_CountMoreThanCapacity
  string BlockingCollection_Disposed
  string BlockingCollection_Take_CollectionModified
  string BlockingCollection_TimeoutInvalid
  string BlockingCollection_ValidateCollectionsArray_DispElems
  string BlockingCollection_ValidateCollectionsArray_LargeSize
  string BlockingCollection_ValidateCollectionsArray_NullElems
  string BlockingCollection_ValidateCollectionsArray_ZeroSize
  string Common_OperationCanceled
  string ConcurrentBag_Ctor_ArgumentNullException
  string ConcurrentBag_CopyTo_ArgumentNullException
  string Collection_CopyTo_ArgumentOutOfRangeException
  string ConcurrentCollection_SyncRoot_NotSupported
  string ConcurrentDictionary_ArrayIncorrectType
  string ConcurrentDictionary_SourceContainsDuplicateKeys
  string ConcurrentDictionary_ConcurrencyLevelMustBePositive
  string ConcurrentDictionary_CapacityMustNotBeNegative
  string ConcurrentDictionary_IndexIsNegative
  string ConcurrentDictionary_ArrayNotLargeEnough
  string ConcurrentDictionary_KeyAlreadyExisted
  string ConcurrentDictionary_ItemKeyIsNull
  string ConcurrentDictionary_TypeOfKeyIncorrect
  string ConcurrentDictionary_TypeOfValueIncorrect
  string ConcurrentStack_PushPopRange_CountOutOfRange
  string ConcurrentStack_PushPopRange_InvalidCount
  string ConcurrentStack_PushPopRange_StartOutOfRange
  string Partitioner_DynamicPartitionsNotSupported
  string PartitionerStatic_CanNotCallGetEnumeratorAfterSourceHasBeenDisposed
  string PartitionerStatic_CurrentCalledBeforeMoveNext
  string ConcurrentBag_Enumerator_EnumerationNotStartedOrAlreadyFinished
  string Argument_AddingDuplicate__
  string Argument_ImplementIComparable
  string Arg_RemoveArgNotFound
  string ArgumentNull_Dictionary
  string ArgumentOutOfRange_QueueGrowFactor
  string Array
  string Collection
  string none
  string Null
  string Text
  string InvalidColor
  string TextParseFailedFormat
  string PropertyValueInvalidEntry
  string ArgumentException_BufferNotFromPool
  string Arg_FileIsDirectory_Name
  string Arg_HandleNotAsync
  string Arg_HandleNotSync
  string Arg_InvalidFileAttrs
  string Arg_InvalidHandle
  string Arg_InvalidSearchPattern
  string Arg_Path2IsRooted
  string Arg_PathIsVolume
  string ArgumentNull_FileName
  string ArgumentNull_Path
  string ArgumentOutOfRange_Enum
  string ArgumentOutOfRange_FileLengthTooBig
  string ArgumentOutOfRange_NeedPosNum
  string Argument_EmptyFileName
  string Argument_EmptyPath
  string Argument_FileNotResized
  string Argument_InvalidAppendMode
  string Argument_InvalidFileModeAndAccessCombo
  string Argument_InvalidPathChars
  string Argument_InvalidSeekOrigin
  string Argument_InvalidSubPath
  string Argument_PathEmpty
  string IO_AlreadyExists_Name
  string IO_BindHandleFailed
  string IO_CannotCreateDirectory
  string IO_EOF_ReadBeyondEOF
  string IO_FileCreateAlreadyExists
  string IO_FileExists_Name
  string IO_FileNotFound
  string IO_FileNotFound_FileName
  string IO_FileStreamHandlePosition
  string IO_FileTooLong2GB
  string IO_FileTooLongOrHandleNotSync
  string IO_PathNotFound_NoPathName
  string IO_PathNotFound_Path
  string IO_PathTooLong
  string IO_SeekAppendOverwrite
  string IO_SetLengthAppendTruncate
  string IO_SharingViolation_File
  string IO_SharingViolation_NoFileName
  string IO_SourceDestMustBeDifferent
  string IO_SourceDestMustHaveSameRoot
  string IO_SyncOpOnUIThread
  string IO_UnknownFileName
  string IndexOutOfRange_IORaceCondition
  string NotSupported_UnseekableStream
  string ObjectDisposed_FileClosed
  string UnauthorizedAccess_IODenied_NoPathName
  string UnauthorizedAccess_IODenied_Path
  string ObjectDisposed_StreamClosed
  string PlatformNotSupported_FileEncryption
  string IO_PathTooLong_Path
  string InvalidDirName_NotExists
  string EventStream_FailedToStart
  string IOException_INotifyInstanceSystemLimitExceeded
  string IOException_INotifyInstanceUserLimitExceeded_Value
  string IOException_INotifyWatchesUserLimitExceeded_Value
  string IOException_INotifyInstanceUserLimitExceeded
  string IOException_INotifyWatchesUserLimitExceeded
  string BaseStream_Invalid_Not_Open
  string PortNameEmpty_String
  string Port_not_open
  string Port_already_open
  string Cant_be_set_when_open
  string Max_Baud
  string In_Break_State
  string Write_timed_out
  string CantSetRtsWithHandshaking
  string NotSupportedEncoding
  string Arg_InvalidSerialPort
  string Arg_InvalidSerialPortExtended
  string ArgumentOutOfRange_Bounds_Lower_Upper
  string ArgumentOutOfRange_NeedNonNegNumRequired
  string ArgumentOutOfRange_Timeout
  string ArgumentOutOfRange_WriteTimeout
  string IO_OperationAborted
  string InvalidNullEmptyArgument
  string Arg_WrongAsyncResult
  string InvalidOperation_EndReadCalledMultiple
  string InvalidOperation_EndWriteCalledMultiple
  string IO_PortNotFound
  string IO_PortNotFoundFileName
  string PlatformNotSupported_IOPorts
  string PlatformNotSupported_SerialPort_GetPortNames
  string NotSupported_CannotCallEqualsOnSpan
  string NotSupported_CannotCallGetHashCodeOnSpan
  string Argument_InvalidTypeWithPointersNotSupported
  string Argument_DestinationTooShort
  string MemoryDisposed
  string OutstandingReferences
  string Argument_BadFormatSpecifier
  string Argument_GWithPrecisionNotSupported
  string Argument_CannotParsePrecision
  string Argument_PrecisionTooLarge
  string Argument_OverlapAlignmentMismatch
  string EndPositionNotReached
  string UnexpectedSegmentType
  string net_log_listener_delegate_exception
  string net_log_listener_unsupported_authentication_scheme
  string net_log_listener_unmatched_authentication_scheme
  string net_io_invalidasyncresult
  string net_io_invalidendcall
  string net_listener_cannot_set_custom_cbt
  string net_listener_detach_error
  string net_listener_scheme
  string net_listener_host
  string net_listener_not_supported
  string net_listener_mustcall
  string net_listener_slash
  string net_listener_already
  string net_log_listener_no_cbt_disabled
  string net_log_listener_no_cbt_http
  string net_log_listener_no_cbt_trustedproxy
  string net_log_listener_cbt
  string net_log_listener_no_spn_kerberos
  string net_log_listener_no_spn_disabled
  string net_log_listener_no_spn_cbt
  string net_log_listener_no_spn_whensupported
  string net_log_listener_no_spn_loopback
  string net_log_listener_spn
  string net_log_listener_spn_passed
  string net_log_listener_spn_failed
  string net_log_listener_spn_failed_always
  string net_log_listener_spn_failed_empty
  string net_log_listener_spn_failed_dump
  string net_log_listener_spn_add
  string net_log_listener_spn_not_add
  string net_log_listener_spn_remove
  string net_log_listener_spn_not_remove
  string net_listener_no_spns
  string net_ssp_dont_support_cbt
  string net_PropertyNotImplementedException
  string net_array_too_small
  string net_listener_mustcompletecall
  string net_listener_invalid_cbt_type
  string net_listener_callinprogress
  string net_log_listener_cant_create_uri
  string net_log_listener_cant_convert_raw_path
  string net_log_listener_cant_convert_percent_value
  string net_log_listener_cant_convert_to_utf8
  string net_log_listener_cant_convert_bytes
  string net_invalidstatus
  string net_WebHeaderInvalidControlChars
  string net_rspsubmitted
  string net_nochunkuploadonhttp10
  string net_cookie_exists
  string net_clsmall
  string net_wrongversion
  string net_noseek
  string net_writeonlystream
  string net_entitytoobig
  string net_io_notenoughbyteswritten
  string net_listener_close_urlgroup_error
  string net_WebSockets_NativeSendResponseHeaders
  string net_WebSockets_ClientAcceptingNoProtocols
  string net_WebSockets_AcceptUnsupportedProtocol
  string net_WebSockets_AcceptNotAWebSocket
  string net_WebSockets_AcceptHeaderNotFound
  string net_WebSockets_AcceptUnsupportedWebSocketVersion
  string net_WebSockets_InvalidEmptySubProtocol
  string net_WebSockets_InvalidCharInProtocolString
  string net_WebSockets_ReasonNotNull
  string net_WebSockets_InvalidCloseStatusCode
  string net_WebSockets_InvalidCloseStatusDescription
  string net_WebSockets_ArgumentOutOfRange_TooSmall
  string net_WebSockets_ArgumentOutOfRange_TooBig
  string net_WebSockets_UnsupportedPlatform
  string net_readonlystream
  string net_WebSockets_InvalidState_ClosedOrAborted
  string net_WebSockets_ReceiveAsyncDisallowedAfterCloseAsync
  string net_Websockets_AlreadyOneOutstandingOperation
  string net_WebSockets_InvalidMessageType
  string net_WebSockets_InvalidBufferType
  string net_WebSockets_ArgumentOutOfRange_InternalBuffer
  string net_WebSockets_Argument_InvalidMessageType
  string net_securitypackagesupport
  string net_log_operation_failed_with_error
  string net_MethodNotImplementedException
  string event_OperationReturnedSomething
  string net_invalid_enum
  string net_auth_message_not_encrypted
  string SSPIInvalidHandleType
  string net_io_operation_aborted
  string net_invalid_path
  string net_listener_auth_errors
  string net_listener_close
  string net_invalid_port
  string net_WebSockets_InvalidState
  string net_unknown_prefix
  string net_reqsubmitted
  string net_io_timeout_use_ge_zero
  string net_writestarted
  string net_badmethod
  string net_servererror
  string net_reqaborted
  string net_OperationNotSupportedException
  string net_nouploadonget
  string net_repcall
  string net_securityprotocolnotsupported
  string net_requestaborted
  string net_webstatus_Timeout
  string net_baddate
  string net_connarg
  string net_fromto
  string net_needchunked
  string net_no100
  string net_nochunked
  string net_nottoken
  string net_rangetoosmall
  string net_rangetype
  string net_toosmall
  string net_WebHeaderInvalidCRLFChars
  string net_WebHeaderInvalidHeaderChars
  string net_timeout
  string net_completed_result
  string net_PropertyNotSupportedException
  string net_InvalidStatusCode
  string net_io_timeout_use_gt_zero
  string net_ftp_servererror
  string net_ftp_active_address_different
  string net_ftp_invalid_method_name
  string net_ftp_invalid_renameto
  string net_ftp_invalid_response_filename
  string net_ftp_invalid_status_response
  string net_ftp_invalid_uri
  string net_ftp_no_defaultcreds
  string net_ftp_response_invalid_format
  string net_ftp_server_failed_passive
  string net_ftp_unsupported_method
  string net_ftp_protocolerror
  string net_ftp_receivefailure
  string net_webstatus_NameResolutionFailure
  string net_webstatus_ConnectFailure
  string net_ftpstatuscode_ServiceNotAvailable
  string net_ftpstatuscode_CantOpenData
  string net_ftpstatuscode_ConnectionClosed
  string net_ftpstatuscode_ActionNotTakenFileUnavailableOrBusy
  string net_ftpstatuscode_ActionAbortedLocalProcessingError
  string net_ftpstatuscode_ActionNotTakenInsufficientSpace
  string net_ftpstatuscode_CommandSyntaxError
  string net_ftpstatuscode_ArgumentSyntaxError
  string net_ftpstatuscode_CommandNotImplemented
  string net_ftpstatuscode_BadCommandSequence
  string net_ftpstatuscode_NotLoggedIn
  string net_ftpstatuscode_AccountNeeded
  string net_ftpstatuscode_ActionNotTakenFileUnavailable
  string net_ftpstatuscode_ActionAbortedUnknownPageType
  string net_ftpstatuscode_FileActionAborted
  string net_ftpstatuscode_ActionNotTakenFilenameNotAllowed
  string net_invalid_host
  string net_sockets_connect_multiconnect_notsupported
  string net_sockets_dualmode_receivefrom_notsupported
  string net_sockets_accept_receive_notsupported
  string net_sockets_duplicateandclose_notsupported
  string net_sockets_transmitfileoptions_notsupported
  string ArgumentOutOfRange_PathLengthInvalid
  string net_io_readwritefailure
  string PlatformNotSupported_AcceptSocket
  string PlatformNotSupported_IOControl
  string PlatformNotSupported_IPProtectionLevel
  string InvalidOperation_BufferNotExplicitArray
  string InvalidOperation_IncorrectToken
  string InvalidOperation_MultipleContinuations
  string net_http_httpmethod_format_error
  string net_http_httpmethod_notsupported_error
  string net_http_reasonphrase_format_error
  string net_http_copyto_array_too_small
  string net_http_headers_not_found
  string net_http_headers_single_value_header
  string net_http_headers_invalid_header_name
  string net_http_headers_invalid_value
  string net_http_headers_not_allowed_header_name
  string net_http_headers_invalid_host_header
  string net_http_headers_invalid_from_header
  string net_http_headers_invalid_etag_name
  string net_http_headers_invalid_range
  string net_http_headers_no_newlines
  string net_http_content_buffersize_exceeded
  string net_http_content_no_task_returned
  string net_http_content_stream_already_read
  string net_http_content_readonly_stream
  string net_http_content_invalid_charset
  string net_http_content_stream_copy_error
  string net_http_argument_empty_string
  string net_http_client_request_already_sent
  string net_http_operation_started
  string net_http_client_execution_error
  string net_http_client_absolute_baseaddress_required
  string net_http_client_invalid_requesturi
  string net_http_client_http_baseaddress_required
  string net_http_parser_invalid_base64_string
  string net_http_handler_noresponse
  string net_http_handler_norequest
  string net_http_message_not_success_statuscode
  string net_http_content_field_too_long
  string net_http_log_headers_no_newlines
  string net_http_log_headers_invalid_quality
  string net_http_log_headers_wrong_email_format
  string net_http_handler_not_assigned
  string net_http_invalid_enable_first
  string net_http_content_buffersize_limit
  string net_http_value_not_supported
  string net_http_io_read
  string net_http_io_read_incomplete
  string net_http_io_write
  string net_http_chunked_not_allowed_with_empty_content
  string net_http_invalid_cookiecontainer
  string net_http_invalid_proxyusepolicy
  string net_http_invalid_proxy
  string net_http_value_must_be_greater_than
  string net_http_unix_invalid_credential
  string net_http_unix_https_support_unavailable_libcurl
  string net_http_content_no_concurrent_reads
  string net_http_username_empty_string
  string net_http_no_concurrent_io_allowed
  string net_http_invalid_response
  string net_http_unix_handler_disposed
  string net_http_buffer_insufficient_length
  string net_http_response_headers_exceeded_length
  string ArgumentOutOfRange_NeedNonNegativeNum
  string net_http_libcurl_callback_notsupported_sslbackend
  string net_http_libcurl_callback_notsupported_os
  string net_http_libcurl_clientcerts_notsupported_sslbackend
  string net_http_libcurl_clientcerts_notsupported_os
  string net_http_libcurl_revocation_notsupported_sslbackend
  string net_http_feature_requires_Windows10Version1607
  string net_http_feature_UWPClientCertSupportRequiresCertInPersonalCertificateStore
  string net_http_invalid_proxy_scheme
  string net_http_request_invalid_char_encoding
  string net_http_ssl_connection_failed
  string net_http_unsupported_chunking
  string net_http_unsupported_version
  string IO_SeekBeforeBegin
  string net_http_request_no_host
  string net_http_winhttp_error
  string net_http_authconnectionfailure
  string net_nego_server_not_supported
  string net_nego_protection_level_not_supported
  string net_context_buffer_too_small
  string net_gssapi_operation_failed_detailed
  string net_gssapi_operation_failed
  string net_nego_channel_binding_not_supported
  string net_ntlm_not_possible_default_cred
  string net_nego_not_supported_empty_target_with_defaultcreds
  string Arg_ElementsInSourceIsGreaterThanDestination
  string Arg_NullArgumentNullRef
  string Arg_TypeNotSupported
  string Arg_InsufficientNumberOfElements
  string NoMetadataTokenAvailable
  string PlatformNotSupported_ReflectionTypeExtensions
  string Argument_EmptyApplicationName
  string ArgumentOutOfRange_GenericPositive
  string ArgumentOutOfRange_MustBePositive
  string InvalidOperation_ComputerName
  string InvalidOperation_GetVersion
  string PersistedFiles_NoHomeDirectory
  string Argument_BadResourceScopeTypeBits
  string Argument_BadResourceScopeVisibilityBits
  string ArgumentNull_TypeRequiredByResourceScope
  string Argument_ResourceScopeWrongDirection
  string AppDomain_Name
  string AppDomain_NoContextPolicies
  string Arg_MustBeTrue
  string Arg_CannotUnloadAppDomainException
  string Arg_AppDomainUnloadedException
  string ZeroLengthString
  string EntryPointNotFound
  string Arg_ContextMarshalException
  string AppDomain_Policy_PrincipalTwice
  string ArgumentNull_Collection
  string ArgumentOutOfRange_ArrayListInsert
  string ArgumentOutOfRange_Count
  string ArgumentOutOfRange_HashtableLoadFactor
  string ArgumentOutOfRange_MustBeNonNegNum
  string Arg_CannotMixComparisonInfrastructure
  string InvalidOperation_HashInsertFailed
  string InvalidOperation_UnderlyingArrayListChanged
  string NotSupported_FixedSizeCollection
  string NotSupported_RangeCollection
  string NotSupported_ReadOnlyCollection
  string Serialization_KeyValueDifferentSizes
  string Serialization_NullKey
  string NotSupported_CannotWriteToBufferedStreamIfReadBufferCannotBeFlushed
  string Argument_StreamNotReadable
  string Argument_StreamNotWritable
  string ObjectDisposed_ReaderClosed
  string ArgumentNull_Child
  string Argument_AttributeNamesMustBeUnique
  string Argument_InvalidElementName
  string Argument_InvalidElementTag
  string Argument_InvalidElementText
  string Argument_InvalidElementValue
  string Argument_InvalidFlag
  string PlatformNotSupported_AppDomains
  string PlatformNotSupported_CAS
  string PlatformNotSupported_AppDomain_ResMon
  string Argument_EmptyValue
  string PlatformNotSupported_RuntimeInformation
  string Overflow_Negative_Unsigned
  string Cryptography_Oid_InvalidName
  string Cryptography_SSE_InvalidDataSize
  string Cryptography_Der_Invalid_Encoding
  string ObjectDisposed_Generic
  string Cryptography_Asn_EnumeratedValueRequiresNonFlagsEnum
  string Cryptography_Asn_NamedBitListRequiresFlagsEnum
  string Cryptography_Asn_NamedBitListValueTooBig
  string Cryptography_Asn_UniversalValueIsFixed
  string Cryptography_Asn_UnusedBitCountRange
  string Cryptography_AsnSerializer_AmbiguousFieldType
  string Cryptography_AsnSerializer_Choice_AllowNullNonNullable
  string Cryptography_AsnSerializer_Choice_ConflictingTagMapping
  string Cryptography_AsnSerializer_Choice_DefaultValueDisallowed
  string Cryptography_AsnSerializer_Choice_NoChoiceWasMade
  string Cryptography_AsnSerializer_Choice_NonNullableField
  string Cryptography_AsnSerializer_Choice_TooManyValues
  string Cryptography_AsnSerializer_Choice_TypeCycle
  string Cryptography_AsnSerializer_MultipleAsnTypeAttributes
  string Cryptography_AsnSerializer_NoJaggedArrays
  string Cryptography_AsnSerializer_NoMultiDimensionalArrays
  string Cryptography_AsnSerializer_NoOpenTypes
  string Cryptography_AsnSerializer_Optional_NonNullableField
  string Cryptography_AsnSerializer_PopulateFriendlyNameOnString
  string Cryptography_AsnSerializer_SetValueException
  string Cryptography_AsnSerializer_SpecificTagChoice
  string Cryptography_AsnSerializer_UnexpectedTypeForAttribute
  string Cryptography_AsnSerializer_UtcTimeTwoDigitYearMaxTooSmall
  string Cryptography_AsnSerializer_UnhandledType
  string Cryptography_AsnWriter_EncodeUnbalancedStack
  string Cryptography_AsnWriter_PopWrongTag
  string Cryptography_BadHashValue
  string Cryptography_BadSignature
  string Cryptography_Cms_CannotDetermineSignatureAlgorithm
  string Cryptography_Cms_IncompleteCertChain
  string Cryptography_Cms_Invalid_Originator_Identifier_Choice
  string Cryptography_Cms_InvalidMessageType
  string Cryptography_Cms_InvalidSignerHashForSignatureAlg
  string Cryptography_Cms_MissingAuthenticatedAttribute
  string Cryptography_Cms_NoCounterCounterSigner
  string Cryptography_Cms_NoRecipients
  string Cryptography_Cms_NoSignerCert
  string Cryptography_Cms_NoSignerAtIndex
  string Cryptography_Cms_RecipientNotFound
  string Cryptography_Cms_RecipientType_NotSupported
  string Cryptography_Cms_SignerNotFound
  string Cryptography_Cms_Signing_RequiresPrivateKey
  string Cryptography_Cms_TrustFailure
  string Cryptography_Cms_UnknownAlgorithm
  string Cryptography_Cms_UnknownKeySpec
  string Cryptography_Cms_WrongKeyUsage
  string Cryptography_Pkcs_InvalidSignatureParameters
  string Cryptography_Pkcs_PssParametersMissing
  string Cryptography_Pkcs_PssParametersHashMismatch
  string Cryptography_Pkcs_PssParametersMgfHashMismatch
  string Cryptography_Pkcs_PssParametersMgfNotSupported
  string Cryptography_Pkcs_PssParametersSaltMismatch
  string Cryptography_TimestampReq_BadNonce
  string Cryptography_TimestampReq_BadResponse
  string Cryptography_TimestampReq_Failure
  string Cryptography_TimestampReq_NoCertFound
  string Cryptography_TimestampReq_UnexpectedCertFound
  string InvalidOperation_WrongOidInAsnCollection
  string PlatformNotSupported_CryptographyPkcs
  string Cryptography_Invalid_IA5String
  string Cryptography_UnknownHashAlgorithm
  string Cryptography_WriteEncodedValue_OneValueAtATime
  string Arg_CryptographyException
  string Cryptography_CryptoStream_FlushFinalBlockTwice
  string Cryptography_DefaultAlgorithm_NotSupported
  string Cryptography_HashNotYetFinalized
  string Cryptography_InvalidFeedbackSize
  string Cryptography_InvalidBlockSize
  string Cryptography_InvalidCipherMode
  string Cryptography_InvalidIVSize
  string Cryptography_InvalidKeySize
  string Cryptography_InvalidPaddingMode
  string HashNameMultipleSetNotSupported
  string CryptoConfigNotSupported
  string InvalidOperation_IncorrectImplementation
  string Cryptography_DpApi_ProfileMayNotBeLoaded
  string PlatformNotSupported_CryptographyProtectedData
  string Cryptography_Partial_Chain
  string Cryptography_Xml_BadWrappedKeySize
  string Cryptography_Xml_CipherValueElementRequired
  string Cryptography_Xml_CreateHashAlgorithmFailed
  string Cryptography_Xml_CreateTransformFailed
  string Cryptography_Xml_CreatedKeyFailed
  string Cryptography_Xml_DigestMethodRequired
  string Cryptography_Xml_DigestValueRequired
  string Cryptography_Xml_EnvelopedSignatureRequiresContext
  string Cryptography_Xml_InvalidElement
  string Cryptography_Xml_InvalidEncryptionProperty
  string Cryptography_Xml_InvalidKeySize
  string Cryptography_Xml_InvalidReference
  string Cryptography_Xml_InvalidSignatureLength
  string Cryptography_Xml_InvalidSignatureLength2
  string Cryptography_Xml_InvalidX509IssuerSerialNumber
  string Cryptography_Xml_KeyInfoRequired
  string Cryptography_Xml_KW_BadKeySize
  string Cryptography_Xml_LoadKeyFailed
  string Cryptography_Xml_MissingAlgorithm
  string Cryptography_Xml_MissingCipherData
  string Cryptography_Xml_MissingDecryptionKey
  string Cryptography_Xml_MissingEncryptionKey
  string Cryptography_Xml_NotSupportedCryptographicTransform
  string Cryptography_Xml_ReferenceElementRequired
  string Cryptography_Xml_ReferenceTypeRequired
  string Cryptography_Xml_SelfReferenceRequiresContext
  string Cryptography_Xml_SignatureDescriptionNotCreated
  string Cryptography_Xml_SignatureMethodKeyMismatch
  string Cryptography_Xml_SignatureMethodRequired
  string Cryptography_Xml_SignatureValueRequired
  string Cryptography_Xml_SignedInfoRequired
  string Cryptography_Xml_TransformIncorrectInputType
  string Cryptography_Xml_IncorrectObjectType
  string Cryptography_Xml_UnknownTransform
  string Cryptography_Xml_UriNotResolved
  string Cryptography_Xml_UriNotSupported
  string Cryptography_Xml_UriRequired
  string Cryptography_Xml_XrmlMissingContext
  string Cryptography_Xml_XrmlMissingIRelDecryptor
  string Cryptography_Xml_XrmlMissingIssuer
  string Cryptography_Xml_XrmlMissingLicence
  string Cryptography_Xml_XrmlUnableToDecryptGrant
  string Log_ActualHashValue
  string Log_BeginCanonicalization
  string Log_BeginSignatureComputation
  string Log_BeginSignatureVerification
  string Log_BuildX509Chain
  string Log_CanonicalizationSettings
  string Log_CanonicalizedOutput
  string Log_CertificateChain
  string Log_CheckSignatureFormat
  string Log_CheckSignedInfo
  string Log_FormatValidationSuccessful
  string Log_FormatValidationNotSuccessful
  string Log_KeyUsages
  string Log_NoNamespacesPropagated
  string Log_PropagatingNamespace
  string Log_RawSignatureValue
  string Log_ReferenceHash
  string Log_RevocationMode
  string Log_RevocationFlag
  string Log_SigningAsymmetric
  string Log_SigningHmac
  string Log_SigningReference
  string Log_TransformedReferenceContents
  string Log_UnsafeCanonicalizationMethod
  string Log_UrlTimeout
  string Log_VerificationFailed
  string Log_VerificationFailed_References
  string Log_VerificationFailed_SignedInfo
  string Log_VerificationFailed_X509Chain
  string Log_VerificationFailed_X509KeyUsage
  string Log_VerificationFlag
  string Log_VerificationTime
  string Log_VerificationWithKeySuccessful
  string Log_VerificationWithKeyNotSuccessful
  string Log_VerifyReference
  string Log_VerifySignedInfoAsymmetric
  string Log_VerifySignedInfoHmac
  string Log_X509ChainError
  string Log_XmlContext
  string Log_SignedXmlRecursionLimit
  string Log_UnsafeTransformMethod
  string Arg_InvalidType
  string Chain_NoPolicyMatch
  string Cryptography_BadHashSize_ForAlgorithm
  string Cryptography_Cert_AlreadyHasPrivateKey
  string Cryptography_CertReq_AlgorithmMustMatch
  string Cryptography_CertReq_BasicConstraintsRequired
  string Cryptography_CertReq_DatesReversed
  string Cryptography_CertReq_DateTooOld
  string Cryptography_CertReq_DuplicateExtension
  string Cryptography_CertReq_IssuerBasicConstraintsInvalid
  string Cryptography_CertReq_IssuerKeyUsageInvalid
  string Cryptography_CertReq_IssuerRequiresPrivateKey
  string Cryptography_CertReq_NotAfterNotNested
  string Cryptography_CertReq_NotBeforeNotNested
  string Cryptography_CertReq_NoKeyProvided
  string Cryptography_CertReq_RSAPaddingRequired
  string Cryptography_CSP_NoPrivateKey
  string Cryptography_CurveNotSupported
  string Cryptography_ECC_NamedCurvesOnly
  string Cryptography_Encryption_MessageTooLong
  string Cryptography_HashAlgorithmNameNullOrEmpty
  string Cryptography_InvalidOID
  string Cryptography_InvalidPublicKey_Object
  string Cryptography_InvalidRsaParameters
  string Cryptography_KeyTooSmall
  string Cryptography_OAEP_Decryption_Failed
  string Cryptography_OpenInvalidHandle
  string Cryptography_PrivateKey_DoesNotMatch
  string Cryptography_PrivateKey_WrongAlgorithm
  string Cryptography_RSA_DecryptWrongSize
  string Cryptography_SignHash_WrongSize
  string Cryptography_Unix_X509_DisallowedStoreNotEmpty
  string Cryptography_Unix_X509_MachineStoresReadOnly
  string Cryptography_Unix_X509_MachineStoresRootOnly
  string Cryptography_Unix_X509_NoDisallowedStore
  string Cryptography_Unix_X509_PropertyNotSettable
  string Cryptography_UnknownKeyAlgorithm
  string Cryptography_Unix_X509_SerializedExport
  string Cryptography_Unmapped_System_Typed_Error
  string Cryptography_X509_InvalidFlagCombination
  string Cryptography_X509_PKCS7_NoSigner
  string Cryptography_X509_StoreAddFailure
  string Cryptography_X509_StoreNoFileAvailable
  string Cryptography_X509_StoreNotFound
  string Cryptography_X509_StoreReadOnly
  string Cryptography_X509_StoreCannotCreate
  string NotSupported_ECDsa_Csp
  string NotSupported_Export_MultiplePrivateCerts
  string NotSupported_LegacyBasicConstraints
  string NotSupported_ImmutableX509Certificate
  string Security_AccessDenied
  string Cryptography_FileStatusError
  string Cryptography_InvalidDirectoryPermissions
  string Cryptography_OwnerNotCurrentUser
  string Cryptography_InvalidFilePermissions
  string Cryptography_Invalid_X500Name
  string Cryptography_X509_NoEphemeralPfx
  string Cryptography_X509Store_WouldModifyUserTrust
  string Cryptography_X509Store_WouldModifyAdminTrust
  string Cryptography_DSA_KeyGenNotSupported
  string Cryptography_InvalidDsaParameters_MissingFields
  string Cryptography_InvalidDsaParameters_MismatchedPGY
  string Cryptography_InvalidDsaParameters_MismatchedQX
  string Cryptography_InvalidDsaParameters_MismatchedPJ
  string Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey
  string Cryptography_InvalidDsaParameters_QRestriction_ShortKey
  string Cryptography_InvalidDsaParameters_QRestriction_LargeKey
  string InvalidEmptyArgument
  string PlatformNotSupported_CompileToAssembly
  string Parallel_Invoke_ActionNull
  string Parallel_ForEach_OrderedPartitionerKeysNotNormalized
  string Parallel_ForEach_PartitionerNotDynamic
  string Parallel_ForEach_PartitionerReturnedNull
  string Parallel_ForEach_NullEnumerator
  string ParallelState_Break_InvalidOperationException_BreakAfterStop
  string ParallelState_Stop_InvalidOperationException_StopAfterBreak
  string ParallelState_NotSupportedException_UnsupportedMethod
  string ArgumentOutOfRange_InvalidThreshold
  string Argument_ItemNotExist
  string AmbiguousImplementationException_NullMessage
  string Arg_AccessException
  string Arg_AccessViolationException
  string Arg_ApplicationException
  string Arg_ArgumentException
  string Arg_ArithmeticException
  string Arg_ArrayTypeMismatchException
  string Arg_ArrayZeroError
  string Arg_BadImageFormatException
  string Arg_BogusIComparer
  string Arg_CannotBeNaN
  string Arg_CannotHaveNegativeValue
  string Arg_CopyNonBlittableArray
  string Arg_CopyOutOfRange
  string Arg_DataMisalignedException
  string Arg_DateTimeRange
  string Arg_DirectoryNotFoundException
  string Arg_DecBitCtor
  string Arg_DivideByZero
  string Arg_DlgtNullInst
  string Arg_DlgtTypeMis
  string Arg_DuplicateWaitObjectException
  string Arg_EHClauseNotFilter
  string Arg_EnumAndObjectMustBeSameType
  string Arg_EntryPointNotFoundException
  string Arg_EntryPointNotFoundExceptionParameterized
  string Arg_ExecutionEngineException
  string Arg_ExternalException
  string Arg_FieldAccessException
  string Arg_FormatException
  string Arg_GuidArrayCtor
  string Arg_HexStyleNotSupported
  string Arg_IndexOutOfRangeException
  string Arg_InsufficientExecutionStackException
  string Arg_InvalidBase
  string Arg_InvalidCastException
  string Arg_InvalidHexStyle
  string Arg_InvalidOperationException
  string Arg_OleAutDateInvalid
  string Arg_OleAutDateScale
  string Arg_InvalidRuntimeTypeHandle
  string Arg_IOException
  string Arg_KeyNotFound
  string Arg_LongerThanSrcString
  string Arg_LowerBoundsMustMatch
  string Arg_MissingFieldException
  string Arg_MethodAccessException
  string Arg_MissingMemberException
  string Arg_MissingMethodException
  string Arg_MulticastNotSupportedException
  string Arg_MustBeBoolean
  string Arg_MustBeByte
  string Arg_MustBeChar
  string Arg_MustBeDateTime
  string Arg_MustBeDateTimeOffset
  string Arg_MustBeDecimal
  string Arg_MustBeDouble
  string Arg_MustBeEnum
  string Arg_MustBeGuid
  string Arg_MustBeInt16
  string Arg_MustBeInt32
  string Arg_MustBeInt64
  string Arg_MustBePrimArray
  string Arg_MustBeSByte
  string Arg_MustBeSingle
  string Arg_MustBeStatic
  string Arg_MustBeString
  string Arg_MustBeStringPtrNotAtom
  string Arg_MustBeTimeSpan
  string Arg_MustBeUInt16
  string Arg_MustBeUInt32
  string Arg_MustBeUInt64
  string Arg_MustBeVersion
  string Arg_NeedAtLeast1Rank
  string Arg_Need2DArray
  string Arg_Need3DArray
  string Arg_NegativeArgCount
  string Arg_NotFiniteNumberException
  string Arg_NotGenericParameter
  string Arg_NotImplementedException
  string Arg_NotSupportedException
  string Arg_NotSupportedNonZeroLowerBound
  string Arg_NullReferenceException
  string Arg_ObjObjEx
  string Arg_OverflowException
  string Arg_OutOfMemoryException
  string Arg_PlatformNotSupported
  string Arg_ParamName_Name
  string Arg_PathEmpty
  string Arg_PathIllegalUNC_Path
  string Arg_RankException
  string Arg_RankIndices
  string Arg_RanksAndBounds
  string Arg_RegGetOverflowBug
  string Arg_RegKeyNotFound
  string Arg_RegInvalidKeyName
  string Arg_StackOverflowException
  string Arg_SynchronizationLockException
  string Arg_SystemException
  string Arg_TargetInvocationException
  string Arg_TargetParameterCountException
  string Arg_DefaultValueMissingException
  string Arg_ThreadStartException
  string Arg_ThreadStateException
  string Arg_TimeoutException
  string Arg_TypeAccessException
  string Arg_TypeLoadException
  string Arg_UnauthorizedAccessException
  string Arg_VersionString
  string Argument_AbsolutePathRequired
  string Argument_AdjustmentRulesNoNulls
  string Argument_AdjustmentRulesOutOfOrder
  string Argument_CodepageNotSupported
  string Argument_CompareOptionOrdinal
  string Argument_ConflictingDateTimeRoundtripStyles
  string Argument_ConflictingDateTimeStyles
  string Argument_ConversionOverflow
  string Argument_ConvertMismatch
  string Argument_CultureInvalidIdentifier
  string Argument_CultureIetfNotSupported
  string Argument_CultureIsNeutral
  string Argument_CultureNotSupported
  string Argument_CustomCultureCannotBePassedByNumber
  string Argument_DateTimeBadBinaryData
  string Argument_DateTimeHasTicks
  string Argument_DateTimeHasTimeOfDay
  string Argument_DateTimeIsInvalid
  string Argument_DateTimeIsNotAmbiguous
  string Argument_DateTimeKindMustBeUnspecified
  string Argument_DateTimeKindMustBeUnspecifiedOrUtc
  string Argument_DateTimeOffsetInvalidDateTimeStyles
  string Argument_DateTimeOffsetIsNotAmbiguous
  string Argument_EmptyDecString
  string Argument_EmptyName
  string Argument_EmptyWaithandleArray
  string Argument_EncoderFallbackNotEmpty
  string Argument_EncodingConversionOverflowBytes
  string Argument_EncodingConversionOverflowChars
  string Argument_EncodingNotSupported
  string Argument_EnumTypeDoesNotMatch
  string Argument_FallbackBufferNotEmpty
  string Argument_InvalidArgumentForComparison
  string Argument_InvalidArrayLength
  string Argument_InvalidCalendar
  string Argument_InvalidCharSequence
  string Argument_InvalidCharSequenceNoIndex
  string Argument_InvalidCodePageBytesIndex
  string Argument_InvalidCodePageConversionIndex
  string Argument_InvalidCultureName
  string Argument_InvalidDateTimeKind
  string Argument_InvalidDateTimeStyles
  string Argument_InvalidDigitSubstitution
  string Argument_InvalidEnumValue
  string Argument_InvalidGroupSize
  string Argument_InvalidHighSurrogate
  string Argument_InvalidId
  string Argument_InvalidLowSurrogate
  string Argument_InvalidNativeDigitCount
  string Argument_InvalidNativeDigitValue
  string Argument_InvalidNeutralRegionName
  string Argument_InvalidNormalizationForm
  string Argument_InvalidREG_TZI_FORMAT
  string Argument_InvalidResourceCultureName
  string Argument_InvalidSerializedString
  string Argument_InvalidTimeSpanStyles
  string Argument_MustBeFalse
  string Argument_MustBeRuntimeType
  string Argument_NoEra
  string Argument_NoRegionInvariantCulture
  string Argument_NotIsomorphic
  string Argument_OffsetLocalMismatch
  string Argument_OffsetPrecision
  string Argument_OffsetOutOfRange
  string Argument_OffsetUtcMismatch
  string Argument_OneOfCulturesNotSupported
  string Argument_OnlyMscorlib
  string Argument_OutOfOrderDateTimes
  string ArgumentOutOfRange_HugeArrayNotSupported
  string ArgumentOutOfRange_Length
  string ArgumentOutOfRange_LengthTooLarge
  string ArgumentOutOfRange_NeedValidId
  string Argument_InvalidTypeName
  string Argument_PathFormatNotSupported_Path
  string Argument_RecursiveFallback
  string Argument_RecursiveFallbackBytes
  string Argument_ResultCalendarRange
  string Argument_TimeSpanHasSeconds
  string Argument_TimeZoneNotFound
  string Argument_TimeZoneInfoBadTZif
  string Argument_TimeZoneInfoInvalidTZif
  string Argument_ToExclusiveLessThanFromExclusive
  string Argument_TransitionTimesAreIdentical
  string Argument_UTCOutOfRange
  string ArgumentException_OtherNotArrayOfCorrectLength
  string ArgumentException_TupleIncorrectType
  string ArgumentException_TupleLastArgumentNotATuple
  string ArgumentException_ValueTupleIncorrectType
  string ArgumentException_ValueTupleLastArgumentNotAValueTuple
  string ArgumentNull_ArrayElement
  string ArgumentNull_ArrayValue
  string ArgumentNull_Generic
  string ArgumentNull_Obj
  string ArgumentNull_String
  string ArgumentNull_Type
  string ArgumentNull_Waithandles
  string ArgumentOutOfRange_AddValue
  string ArgumentOutOfRange_ActualValue
  string ArgumentOutOfRange_BadYearMonthDay
  string ArgumentOutOfRange_BadHourMinuteSecond
  string ArgumentOutOfRange_CalendarRange
  string ArgumentOutOfRange_Capacity
  string ArgumentOutOfRange_DateArithmetic
  string ArgumentOutOfRange_DateTimeBadMonths
  string ArgumentOutOfRange_DateTimeBadTicks
  string ArgumentOutOfRange_DateTimeBadYears
  string ArgumentOutOfRange_Day
  string ArgumentOutOfRange_DayOfWeek
  string ArgumentOutOfRange_DayParam
  string ArgumentOutOfRange_DecimalRound
  string ArgumentOutOfRange_DecimalScale
  string ArgumentOutOfRange_EndIndexStartIndex
  string ArgumentOutOfRange_Era
  string ArgumentOutOfRange_FileTimeInvalid
  string ArgumentOutOfRange_GetByteCountOverflow
  string ArgumentOutOfRange_GetCharCountOverflow
  string ArgumentOutOfRange_IndexCount
  string ArgumentOutOfRange_IndexCountBuffer
  string ArgumentOutOfRange_IndexLength
  string ArgumentOutOfRange_IndexString
  string ArgumentOutOfRange_InvalidEraValue
  string ArgumentOutOfRange_InvalidHighSurrogate
  string ArgumentOutOfRange_InvalidLowSurrogate
  string ArgumentOutOfRange_InvalidUTF32
  string ArgumentOutOfRange_LengthGreaterThanCapacity
  string ArgumentOutOfRange_ListInsert
  string ArgumentOutOfRange_ListItem
  string ArgumentOutOfRange_ListRemoveAt
  string ArgumentOutOfRange_Month
  string ArgumentOutOfRange_MonthParam
  string ArgumentOutOfRange_MustBeNonNegInt32
  string ArgumentOutOfRange_NeedNonNegOrNegative1
  string ArgumentOutOfRange_NegativeCapacity
  string ArgumentOutOfRange_NegativeCount
  string ArgumentOutOfRange_NegativeLength
  string ArgumentOutOfRange_NoGCLohSizeGreaterTotalSize
  string ArgumentOutOfRange_OffsetLength
  string ArgumentOutOfRange_OffsetOut
  string ArgumentOutOfRange_PartialWCHAR
  string ArgumentOutOfRange_Range
  string ArgumentOutOfRange_RoundingDigits
  string ArgumentOutOfRange_SmallMaxCapacity
  string ArgumentOutOfRange_StartIndex
  string ArgumentOutOfRange_StartIndexLargerThanLength
  string ArgumentOutOfRange_StartIndexLessThanLength
  string ArgumentOutOfRange_UtcOffset
  string ArgumentOutOfRange_UtcOffsetAndDaylightDelta
  string ArgumentOutOfRange_Version
  string ArgumentOutOfRange_Week
  string ArgumentOutOfRange_Year
  string Arithmetic_NaN
  string ArrayTypeMismatch_CantAssignType
  string BadImageFormatException_CouldNotLoadFileOrAssembly
  string CollectionCorrupted
  string Exception_EndOfInnerExceptionStack
  string Exception_WasThrown
  string Format_BadBase64Char
  string Format_BadBase64CharArrayLength
  string Format_BadBoolean
  string Format_BadFormatSpecifier
  string Format_NoFormatSpecifier
  string Format_BadQuote
  string Format_EmptyInputString
  string Format_GuidHexPrefix
  string Format_GuidInvLen
  string Format_GuidInvalidChar
  string Format_GuidBrace
  string Format_GuidComma
  string Format_GuidBraceAfterLastNumber
  string Format_GuidDashes
  string Format_GuidEndBrace
  string Format_ExtraJunkAtEnd
  string Format_GuidUnrecognized
  string Format_IndexOutOfRange
  string Format_InvalidGuidFormatSpecification
  string Format_InvalidString
  string Format_NeedSingleChar
  string Format_NoParsibleDigits
  string Format_BadTimeSpan
  string InsufficientMemory_MemFailPoint
  string InsufficientMemory_MemFailPoint_TooBig
  string InsufficientMemory_MemFailPoint_VAFrag
  string InvalidCast_CannotCastNullToValueType
  string InvalidCast_DownCastArrayElement
  string InvalidCast_FromTo
  string InvalidCast_IConvertible
  string InvalidCast_StoreArrayElement
  string InvalidOperation_Calling
  string InvalidOperation_DateTimeParsing
  string InvalidOperation_HandleIsNotInitialized
  string InvalidOperation_IComparerFailed
  string InvalidOperation_NoValue
  string InvalidOperation_NullArray
  string InvalidOperation_Overlapped_Pack
  string InvalidOperation_ReadOnly
  string InvalidOperation_ThreadWrongThreadStart
  string InvalidOperation_UnknownEnumType
  string InvalidOperation_WriteOnce
  string InvalidOperation_ArrayCreateInstance_NotARuntimeType
  string InvalidOperation_TooEarly
  string InvalidOperation_NullContext
  string InvalidOperation_CannotUseAFCOtherThread
  string InvalidOperation_CannotRestoreUnsupressedFlow
  string InvalidOperation_CannotSupressFlowMultipleTimes
  string InvalidOperation_CannotUseAFCMultiple
  string InvalidOperation_AsyncFlowCtrlCtxMismatch
  string InvalidOperation_AsyncIOInProgress
  string InvalidProgram_Default
  string InvalidProgram_Specific
  string InvalidProgram_Vararg
  string InvalidProgram_CallVirtFinalize
  string InvalidProgram_NativeCallable
  string InvalidTimeZone_InvalidRegistryData
  string InvalidTimeZone_InvalidFileData
  string InvalidTimeZone_InvalidJulianDay
  string InvalidTimeZone_NJulianDayNotSupported
  string InvalidTimeZone_NoTTInfoStructures
  string InvalidTimeZone_UnparseablePosixMDateString
  string IO_DriveNotFound_Drive
  string IO_FileName_Name
  string IO_FileLoad
  string IO_FileLoad_FileName
  string Lazy_CreateValue_NoParameterlessCtorForT
  string Lazy_ctor_ModeInvalid
  string Lazy_StaticInit_InvalidOperation
  string Lazy_ToString_ValueNotCreated
  string Lazy_Value_RecursiveCallsToValue
  string MissingConstructor_Name
  string MustUseCCRewrite
  string NotSupported_MaxWaitHandles
  string NotSupported_NoCodepageData
  string NotSupported_StringComparison
  string NotSupported_VoidArray
  string NotSupported_ByRefLike
  string NotSupported_Type
  string NotSupported_WaitAllSTAThread
  string ObjectDisposed_ObjectName_Name
  string Overflow_Byte
  string Overflow_Char
  string Overflow_Double
  string Overflow_TimeSpanElementTooLarge
  string Overflow_Duration
  string Overflow_Int16
  string Overflow_NegateTwosCompNum
  string Overflow_NegativeUnsigned
  string Overflow_SByte
  string Overflow_Single
  string Overflow_TimeSpanTooLong
  string Overflow_UInt16
  string Rank_MultiDimNotSupported
  string RuntimeWrappedException
  string SpinWait_SpinUntil_ArgumentNull
  string Serialization_CorruptField
  string Serialization_InvalidData
  string Serialization_InvalidEscapeSequence
  string Serialization_InvalidType
  string SpinWait_SpinUntil_TimeoutWrong
  string Threading_AbandonedMutexException
  string Threading_SemaphoreFullException
  string Threading_ThreadInterrupted
  string Threading_WaitHandleCannotBeOpenedException
  string Threading_WaitHandleCannotBeOpenedException_InvalidHandle
  string TimeZoneNotFound_MissingData
  string TypeInitialization_Default
  string TypeInitialization_Type
  string TypeInitialization_Type_NoTypeAvailable
  string Verification_Exception
  string Arg_EnumFormatUnderlyingTypeAndObjectMustBeSameType
  string Format_InvalidEnumFormatSpecification
  string Arg_MustBeEnumBaseTypeOrEnum
  string Arg_EnumUnderlyingTypeAndObjectMustBeSameType
  string Arg_MustBeType
  string Arg_MustContainEnumInfo
  string Arg_EnumValueNotFound
  string Argument_StringZeroLength
  string Argument_StringFirstCharIsZero
  string Argument_LongEnvVarValue
  string Argument_IllegalEnvVarName
  string AssumptionFailed
  string AssumptionFailed_Cnd
  string AssertionFailed
  string AssertionFailed_Cnd
  string PreconditionFailed
  string PreconditionFailed_Cnd
  string PostconditionFailed
  string PostconditionFailed_Cnd
  string PostconditionOnExceptionFailed
  string PostconditionOnExceptionFailed_Cnd
  string InvariantFailed
  string InvariantFailed_Cnd
  string MissingEncodingNameResource
  string Globalization_cp_1200
  string Globalization_cp_1201
  string Globalization_cp_12000
  string Globalization_cp_12001
  string Globalization_cp_20127
  string Globalization_cp_28591
  string Globalization_cp_65000
  string Globalization_cp_65001
  string DebugAssertBanner
  string DebugAssertLongMessage
  string DebugAssertShortMessage
  string InvalidCast_Empty
  string Arg_UnknownTypeCode
  string Format_BadDatePattern
  string Format_BadDateTime
  string Format_BadDateTimeCalendar
  string Format_BadDayOfWeek
  string Format_DateOutOfRange
  string Format_MissingIncompleteDate
  string Format_OffsetOutOfRange
  string Format_RepeatDateTimePattern
  string Format_UnknownDateTimeWord
  string Format_UTCOutOfRange
  string RFLCT_Ambiguous
  string AggregateException_ctor_DefaultMessage
  string AggregateException_ctor_InnerExceptionNull
  string AggregateException_DeserializationFailure
  string AggregateException_InnerException
  string ArgumentOutOfRange_TimeoutTooLarge
  string ArgumentOutOfRange_PeriodTooLarge
  string TaskScheduler_FromCurrentSynchronizationContext_NoCurrent
  string TaskScheduler_ExecuteTask_WrongTaskScheduler
  string TaskScheduler_InconsistentStateAfterTryExecuteTaskInline
  string TaskSchedulerException_ctor_DefaultMessage
  string Task_MultiTaskContinuation_FireOptions
  string Task_ContinueWith_ESandLR
  string Task_MultiTaskContinuation_EmptyTaskList
  string Task_MultiTaskContinuation_NullTask
  string Task_FromAsync_PreferFairness
  string Task_FromAsync_LongRunning
  string AsyncMethodBuilder_InstanceNotInitialized
  string TaskT_TransitionToFinal_AlreadyCompleted
  string TaskT_DebuggerNoResult
  string OperationCanceled
  string CancellationToken_CreateLinkedToken_TokensIsEmpty
  string CancellationTokenSource_Disposed
  string CancellationToken_SourceDisposed
  string TaskExceptionHolder_UnknownExceptionType
  string TaskExceptionHolder_UnhandledException
  string Task_Delay_InvalidMillisecondsDelay
  string Task_Delay_InvalidDelay
  string Task_Dispose_NotCompleted
  string Task_WaitMulti_NullTask
  string Task_ContinueWith_NotOnAnything
  string Task_RunSynchronously_AlreadyStarted
  string Task_ThrowIfDisposed
  string Task_RunSynchronously_TaskCompleted
  string Task_RunSynchronously_Promise
  string Task_RunSynchronously_Continuation
  string Task_Start_AlreadyStarted
  string Task_Start_ContinuationTask
  string Task_Start_Promise
  string Task_Start_TaskCompleted
  string TaskCanceledException_ctor_DefaultMessage
  string TaskCompletionSourceT_TrySetException_NoExceptions
  string TaskCompletionSourceT_TrySetException_NullException
  string Argument_MinMaxValue
  string ExecutionContext_ExceptionInAsyncLocalNotification
  string InvalidOperation_WrongAsyncResultOrEndCalledMultiple
  string SpinLock_IsHeldByCurrentThread
  string SpinLock_TryEnter_LockRecursionException
  string SpinLock_Exit_SynchronizationLockException
  string SpinLock_TryReliableEnter_ArgumentException
  string SpinLock_TryEnter_ArgumentOutOfRange
  string ManualResetEventSlim_Disposed
  string ManualResetEventSlim_ctor_SpinCountOutOfRange
  string ManualResetEventSlim_ctor_TooManyWaiters
  string InvalidOperation_SendNotSupportedOnWindowsRTSynchronizationContext
  string SemaphoreSlim_Disposed
  string SemaphoreSlim_Release_CountWrong
  string SemaphoreSlim_Wait_TimeoutWrong
  string SemaphoreSlim_ctor_MaxCountWrong
  string SemaphoreSlim_ctor_InitialCountWrong
  string ThreadLocal_ValuesNotAvailable
  string ThreadLocal_Value_RecursiveCallsToValue
  string ThreadLocal_Disposed
  string LockRecursionException_WriteAfterReadNotAllowed
  string LockRecursionException_RecursiveWriteNotAllowed
  string LockRecursionException_ReadAfterWriteNotAllowed
  string LockRecursionException_RecursiveUpgradeNotAllowed
  string LockRecursionException_RecursiveReadNotAllowed
  string SynchronizationLockException_IncorrectDispose
  string SynchronizationLockException_MisMatchedWrite
  string LockRecursionException_UpgradeAfterReadNotAllowed
  string LockRecursionException_UpgradeAfterWriteNotAllowed
  string SynchronizationLockException_MisMatchedUpgrade
  string SynchronizationLockException_MisMatchedRead
  string InvalidOperation_TimeoutsNotSupported
  string NotSupported_SubclassOverride
  string InvalidOperation_NoPublicRemoveMethod
  string InvalidOperation_NoPublicAddMethod
  string SerializationException
  string Serialization_NotFound
  string Serialization_OptionalFieldVersionValue
  string Serialization_SameNameTwice
  string NotSupported_AbstractNonCLS
  string NotSupported_NoTypeInfo
  string Arg_CustomAttributeFormatException
  string Argument_InvalidMemberForNamedArgument
  string Arg_InvalidFilterCriteriaException
  string Arg_ParmArraySize
  string Arg_MustBePointer
  string Argument_InvalidEnum
  string Argument_MustHaveAttributeBaseClass
  string InvalidFilterCriteriaException_CritString
  string InvalidFilterCriteriaException_CritInt
  string InvalidOperation_NotSupportedOnWinRTEvent
  string PlatformNotSupported_ReflectionOnly
  string PlatformNotSupported_OSXFileLocking
  string PlatformNotSupported_ReflectionEmit
  string MissingMember_Name
  string MissingMethod_Name
  string MissingField_Name
  string Format_StringZeroLength
  string Security_CannotReadFileData
  string Security_CannotReadRegistryData
  string Security_InvalidAssemblyPublicKey
  string Security_RegistryPermission
  string ClassLoad_General
  string ClassLoad_RankTooLarge
  string ClassLoad_ExplicitGeneric
  string ClassLoad_BadFormat
  string ClassLoad_ValueClassTooLarge
  string ClassLoad_ExplicitLayout
  string EE_MissingMethod
  string EE_MissingField
  string UnauthorizedAccess_RegistryKeyGeneric_Key
  string UnknownError_Num
  string Argument_NeedStructWithNoRefs
  string ArgumentOutOfRange_AddressSpace
  string ArgumentOutOfRange_UIntPtrMax
  string Arg_BufferTooSmall
  string InvalidOperation_MustCallInitialize
  string Argument_InvalidSafeBufferOffLen
  string Argument_NotEnoughBytesToRead
  string Argument_NotEnoughBytesToWrite
  string Argument_OffsetAndCapacityOutOfBounds
  string ArgumentOutOfRange_UnmanagedMemStreamLength
  string Argument_UnmanagedMemAccessorWrapAround
  string ArgumentOutOfRange_StreamLength
  string ArgumentOutOfRange_UnmanagedMemStreamWrapAround
  string InvalidOperation_CalledTwice
  string IO_FixedCapacity
  string IO_StreamTooLong
  string Arg_BadDecimal
  string NotSupported_Reading
  string NotSupported_UmsSafeBuffer
  string NotSupported_Writing
  string IndexOutOfRange_UMSPosition
  string ObjectDisposed_ViewAccessorClosed
  string ArgumentOutOfRange_PositionLessThanCapacityRequired
  string Arg_EndOfStreamException
  string Argument_InvalidHandle
  string Argument_AlreadyBoundOrSyncHandle
  string Argument_PreAllocatedAlreadyAllocated
  string Argument_NativeOverlappedAlreadyFree
  string Argument_NativeOverlappedWrongBoundHandle
  string NotSupported_FileStreamOnNonFiles
  string Arg_ResourceFileUnsupportedVersion
  string Resources_StreamNotValid
  string BadImageFormat_ResourcesHeaderCorrupted
  string BadImageFormat_NegativeStringLength
  string BadImageFormat_ResourcesNameInvalidOffset
  string BadImageFormat_TypeMismatch
  string BadImageFormat_ResourceNameCorrupted_NameIndex
  string BadImageFormat_ResourcesDataInvalidOffset
  string Format_Bad7BitInt32
  string BadImageFormat_InvalidType
  string ResourceReaderIsClosed
  string Arg_MissingManifestResourceException
  string UnauthorizedAccess_MemStreamBuffer
  string NotSupported_MemStreamNotExpandable
  string ArgumentNull_Stream
  string IO_InvalidStringLen_Len
  string ArgumentOutOfRange_BinaryReaderFillBuffer
  string Serialization_InsufficientDeserializationState
  string NotSupported_UnitySerHolder
  string Serialization_UnableToFindModule
  string Argument_InvalidUnity
  string InvalidOperation_InvalidHandle
  string PlatformNotSupported_NamedSynchronizationPrimitives
  string Overflow_MutexReacquireCount
  string Serialization_InsufficientState
  string Serialization_UnknownMember
  string Serialization_NullSignature
  string Serialization_MemberTypeNotRecognized
  string Serialization_BadParameterInfo
  string Serialization_NoParameterInfo
  string ArgumentNull_Assembly
  string Arg_InvalidNeutralResourcesLanguage_Asm_Culture
  string Arg_InvalidNeutralResourcesLanguage_FallbackLoc
  string Arg_InvalidSatelliteContract_Asm_Ver
  string Arg_ResMgrNotResSet
  string BadImageFormat_ResourceNameCorrupted
  string BadImageFormat_ResourcesNameTooLong
  string InvalidOperation_ResMgrBadResSet_Type
  string InvalidOperation_ResourceNotStream_Name
  string MissingManifestResource_MultipleBlobs
  string MissingManifestResource_NoNeutralAsm
  string MissingManifestResource_NoNeutralDisk
  string MissingManifestResource_NoPRIresources
  string MissingManifestResource_ResWFileNotLoaded
  string MissingSatelliteAssembly_Culture_Name
  string MissingSatelliteAssembly_Default
  string NotSupported_ObsoleteResourcesFile
  string NotSupported_ResourceObjectSerialization
  string ObjectDisposed_ResourceSet
  string Arg_ResourceNameNotExist
  string BadImageFormat_ResourceDataLengthInvalid
  string BadImageFormat_ResourcesIndexTooLong
  string InvalidOperation_ResourceNotString_Name
  string InvalidOperation_ResourceNotString_Type
  string NotSupported_WrongResourceReader_Type
  string Arg_MustBeDelegate
  string NotSupported_GlobalMethodSerialization
  string NotSupported_DelegateSerHolderSerial
  string DelegateSer_InsufficientMetadata
  string Argument_NoUninitializedStrings
  string ArgumentOutOfRangeException_NoGCRegionSizeTooLarge
  string InvalidOperationException_AlreadyInNoGCRegion
  string InvalidOperationException_NoGCRegionAllocationExceeded
  string InvalidOperationException_NoGCRegionInduced
  string InvalidOperationException_NoGCRegionNotInProgress
  string InvalidOperationException_SetLatencyModeNoGC
  string InvalidOperation_NotWithConcurrentGC
  string ThreadState_AlreadyStarted
  string ThreadState_Dead_Priority
  string ThreadState_Dead_State
  string ThreadState_NotStarted
  string ThreadState_SetPriorityFailed
  string Serialization_InvalidFieldState
  string Acc_CreateAbst
  string Acc_CreateGeneric
  string NotSupported_ManagedActivation
  string PlatformNotSupported_ResourceManager_ResWFileUnsupportedMethod
  string PlatformNotSupported_ResourceManager_ResWFileUnsupportedProperty
  string Serialization_NonSerType
  string InvalidCast_DBNull
  string NotSupported_NYI
  string Delegate_GarbageCollected
  string Arg_AmbiguousMatchException
  string NotSupported_ChangeType
  string Arg_EmptyArray
  string MissingMember
  string MissingField
  string InvalidCast_FromDBNull
  string NotSupported_DBNullSerial
  string Serialization_StringBuilderCapacity
  string Serialization_StringBuilderMaxCapacity
  string PlatformNotSupported_Remoting
  string PlatformNotSupported_StrongNameSigning
  string Serialization_MissingDateTimeData
  string Serialization_DateTimeTicksOutOfRange
  string FeatureRemoved_Message
  string Arg_InvalidANSIString
  string PlatformNotSupported_ArgIterator
  string Arg_TypeUnloadedException
  string Overflow_Currency
  string PlatformNotSupported_SecureBinarySerialization
  string Serialization_InvalidPtrValue
  string EventSource_AbstractMustNotDeclareEventMethods
  string EventSource_AbstractMustNotDeclareKTOC
  string EventSource_AddScalarOutOfRange
  string EventSource_BadHexDigit
  string EventSource_ChannelTypeDoesNotMatchEventChannelValue
  string EventSource_DataDescriptorsOutOfRange
  string EventSource_DuplicateStringKey
  string EventSource_EnumKindMismatch
  string EventSource_EvenHexDigits
  string EventSource_EventChannelOutOfRange
  string EventSource_EventIdReused
  string EventSource_EventMustHaveTaskIfNonDefaultOpcode
  string EventSource_EventMustNotBeExplicitImplementation
  string EventSource_EventNameDoesNotEqualTaskPlusOpcode
  string EventSource_EventNameReused
  string EventSource_EventParametersMismatch
  string EventSource_EventSourceGuidInUse
  string EventSource_EventTooBig
  string EventSource_EventWithAdminChannelMustHaveMessage
  string EventSource_IllegalKeywordsValue
  string EventSource_IllegalOpcodeValue
  string EventSource_IllegalTaskValue
  string EventSource_IllegalValue
  string EventSource_IncorrentlyAuthoredTypeInfo
  string EventSource_InvalidCommand
  string EventSource_InvalidEventFormat
  string EventSource_KeywordCollision
  string EventSource_KeywordNeedPowerOfTwo
  string EventSource_ListenerCreatedInsideCallback
  string EventSource_ListenerNotFound
  string EventSource_ListenerWriteFailure
  string EventSource_MaxChannelExceeded
  string EventSource_MismatchIdToWriteEvent
  string EventSource_NeedGuid
  string EventSource_NeedName
  string EventSource_NeedPositiveId
  string EventSource_NoFreeBuffers
  string EventSource_NonCompliantTypeError
  string EventSource_NoRelatedActivityId
  string EventSource_NotSupportedArrayOfBinary
  string EventSource_NotSupportedArrayOfNil
  string EventSource_NotSupportedArrayOfNullTerminatedString
  string EventSource_NotSupportedCustomSerializedData
  string EventSource_NotSupportedNestedArraysEnums
  string EventSource_NullInput
  string EventSource_OpcodeCollision
  string EventSource_PinArrayOutOfRange
  string EventSource_RecursiveTypeDefinition
  string EventSource_SessionIdError
  string EventSource_StopsFollowStarts
  string EventSource_TaskCollision
  string EventSource_TaskOpcodePairReused
  string EventSource_TooManyArgs
  string EventSource_TooManyFields
  string EventSource_ToString
  string EventSource_TraitEven
  string EventSource_TypeMustBeSealedOrAbstract
  string EventSource_TypeMustDeriveFromEventSource
  string EventSource_UndefinedChannel
  string EventSource_UndefinedKeyword
  string EventSource_UndefinedOpcode
  string EventSource_UnknownEtwTrait
  string EventSource_UnsupportedEventTypeInManifest
  string EventSource_UnsupportedMessageProperty
  string EventSource_VarArgsParameterMismatch
  string Arg_SurrogatesNotAllowedAsSingleChar
  string CustomAttributeFormat_InvalidFieldFail
  string CustomAttributeFormat_InvalidPropertyFail
  string ArrayTypeMismatch_ConstrainedCopy
  string Arg_DllNotFoundException
  string Arg_DllNotFoundExceptionParameterized
  string Arg_DriveNotFoundException
  string WrongSizeArrayInNStruct
  string Arg_InteropMarshalUnmappableChar
  string Arg_MarshalDirectiveException
  string Arg_RegSubKeyValueAbsent
  string Arg_RegValStrLenBug
  string Serialization_DelegatesNotSupported
  string Arg_OpenType
  string Arg_PlatformNotSupported_AssemblyName_GetAssemblyName
  string NotSupported_OpenType
  string NotSupported_ByRefLikeArray
  string StackTrace_AtWord
  string StackTrace_EndStackTraceFromPreviousThrow
  string InvalidAssemblyName
  string Argument_HasToBeArrayClass
  string Argument_IdnBadBidi
  string Argument_IdnBadLabelSize
  string Argument_IdnBadNameSize
  string Argument_IdnBadPunycode
  string Argument_IdnBadStd3
  string Argument_IdnIllegalName
  string InvalidOperation_NotGenericType
  string NotSupported_SignatureType
  string Memory_OutstandingReferences
  string HashCode_HashCodeNotSupported
  string HashCode_EqualityNotSupported
  string IO_InvalidReadLength
  string Arg_BasePathNotFullyQualified
  string NullReference_InvokeNullRefReturned
  string Thread_Operation_RequiresCurrentThread
  string InvalidOperation_WrongAsyncResultOrEndReadCalledMultiple
  string InvalidOperation_WrongAsyncResultOrEndWriteCalledMultiple
  string ArgumentOutOfRange_Week_ISO
  string net_uri_BadAuthority
  string net_uri_BadAuthorityTerminator
  string net_uri_BadFormat
  string net_uri_NeedFreshParser
  string net_uri_AlreadyRegistered
  string net_uri_BadHostName
  string net_uri_BadPort
  string net_uri_BadScheme
  string net_uri_BadString
  string net_uri_BadUserPassword
  string net_uri_CannotCreateRelative
  string net_uri_SchemeLimit
  string net_uri_EmptyUri
  string net_uri_InvalidUriKind
  string net_uri_MustRootedPath
  string net_uri_NotAbsolute
  string net_uri_PortOutOfRange
  string net_uri_SizeLimit
  string net_uri_UserDrivenParsing
  string net_uri_NotJustSerialization
  string net_uri_BadUnicodeHostForIdn
  string Argument_ExtraNotValid
  string Argument_InvalidUriSubcomponent
  string AccessControl_InvalidHandle
  string Arg_RegSubKeyAbsent
  string Arg_RegKeyDelHive
  string Arg_RegKeyNoRemoteConnect
  string Arg_RegKeyOutOfRange
  string Arg_RegKeyStrLenBug
  string Arg_RegBadKeyKind
  string Arg_RegSetMismatchedKind
  string Arg_RegSetBadArrType
  string Arg_RegSetStrArrNull
  string Arg_DllInitFailure
  string Argument_InvalidRegistryOptionsCheck
  string Argument_InvalidRegistryViewCheck
  string Argument_InvalidRegistryKeyPermissionCheck
  string InvalidOperation_RegRemoveSubKey
  string ObjectDisposed_RegKeyClosed
  string PlatformNotSupported_Registry
  string UnauthorizedAccess_RegistryNoWrite
  string Cryptography_ArgECDHKeySizeMismatch
  string Cryptography_ArgECDHRequiresECDHKey
  string Cryptography_TlsRequiresLabelAndSeed
  string Cryptography_TlsRequires64ByteSeed
  string Cryptography_Config_EncodedOIDError
  string Cryptography_ECXmlSerializationFormatRequired
  string Cryptography_InvalidCurveOid
  string Cryptography_InvalidCurveKeyParameters
  string Cryptography_InvalidECCharacteristic2Curve
  string Cryptography_InvalidECPrimeCurve
  string Cryptography_InvalidECNamedCurve
  string Cryptography_InvalidKey_SemiWeak
  string Cryptography_InvalidKey_Weak
  string Cryptography_InvalidOperation
  string Cryptography_InvalidPadding
  string Cryptography_MissingIV
  string Cryptography_MissingKey
  string Cryptography_MissingOID
  string Cryptography_MustTransformWholeBlock
  string Cryptography_NotValidPrivateKey
  string Cryptography_NotValidPublicOrPrivateKey
  string Cryptography_PartialBlock
  string Cryptography_PasswordDerivedBytes_FewBytesSalt
  string Cryptography_RC2_EKS40
  string Cryptography_RC2_EKSKS
  string Cryptography_RC2_EKSKS2
  string Cryptography_Rijndael_BlockSize
  string Cryptography_TransformBeyondEndOfBuffer
  string Cryptography_CipherModeNotSupported
  string Cryptography_UnknownPaddingMode
  string Cryptography_UnexpectedTransformTruncation
  string Cryptography_UnsupportedPaddingMode
  string NotSupported_Method
  string Cryptography_AlgorithmTypesMustBeVisible
  string Cryptography_AddNullOrEmptyName
  string ArgumentOutOfRange_ConsoleKey
  string Arg_InvalidComObjectException
  string Arg_MustBeNullTerminatedString
  string Arg_InvalidOleVariantTypeException
  string Arg_SafeArrayRankMismatchException
  string Arg_SafeArrayTypeMismatchException
  string TypeNotDelegate
  string InvalidOperationException_ActorGraphCircular
  string InvalidOperation_ClaimCannotBeRemoved
  string PlatformNotSupported_Serialization
  string PrivilegeNotHeld_Default
  string PrivilegeNotHeld_Named
  string CountdownEvent_Decrement_BelowZero
  string CountdownEvent_Increment_AlreadyZero
  string CountdownEvent_Increment_AlreadyMax
  string ArrayWithOffsetOverflow
  string Arg_NotIsomorphic
  string StructArrayTooLarge
  string IO_DriveNotFound
  string Argument_MustSupplyParent
  string Argument_MemberAndArray
  string Argument_MustSupplyContainer
  string Serialization_NoID
  string Arg_SwitchExpressionException
  string SwitchExpressionException_UnmatchedValue
  string Argument_InvalidRandomRange
  string BufferWriterAdvancedTooFar
  string net_gssapi_operation_failed_detailed_majoronly
  string net_gssapi_operation_failed_majoronly
Свойства:
Методы:
  string GetString(string name, Object[] args)
  string GetString(CultureInfo culture, string name, Object[] args)
  string GetString(string name)
  string GetString(CultureInfo culture, string name)
  string Format(string resourceFormat, Object[] args)
  string Format(string resourceFormat, object p1)
  string Format(string resourceFormat, object p1, object p2)
  string Format(CultureInfo ci, string resourceFormat, object p1, object p2)
  string Format(string resourceFormat, object p1, object p2, object p3)
  string GetResourceString(string str)
  object GetObject(string name)
--------------------------------------------------
Класс: Mono.CertificateImportFlags
Наследуется от: Enum
Поля:
  int value__
  CertificateImportFlags None
  CertificateImportFlags DisableNativeBackend
  CertificateImportFlags DisableAutomaticFallback
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.DataConverter
Наследуется от: object
Поля:
  DataConverter SwapConv
  DataConverter CopyConv
  bool IsLittleEndian
Свойства:
  DataConverter LittleEndian
  DataConverter BigEndian
  DataConverter Native
Методы:
  double GetDouble(Byte[] data, int index)
  float GetFloat(Byte[] data, int index)
  long GetInt64(Byte[] data, int index)
  int GetInt32(Byte[] data, int index)
  short GetInt16(Byte[] data, int index)
  UInt32 GetUInt32(Byte[] data, int index)
  ushort GetUInt16(Byte[] data, int index)
  ulong GetUInt64(Byte[] data, int index)
  void PutBytes(Byte[] dest, int destIdx, double value)
  void PutBytes(Byte[] dest, int destIdx, float value)
  void PutBytes(Byte[] dest, int destIdx, int value)
  void PutBytes(Byte[] dest, int destIdx, long value)
  void PutBytes(Byte[] dest, int destIdx, short value)
  void PutBytes(Byte[] dest, int destIdx, ushort value)
  void PutBytes(Byte[] dest, int destIdx, UInt32 value)
  void PutBytes(Byte[] dest, int destIdx, ulong value)
  Byte[] GetBytes(double value)
  Byte[] GetBytes(float value)
  Byte[] GetBytes(int value)
  Byte[] GetBytes(long value)
  Byte[] GetBytes(short value)
  Byte[] GetBytes(ushort value)
  Byte[] GetBytes(UInt32 value)
  Byte[] GetBytes(ulong value)
  DataConverter get_LittleEndian()
  DataConverter get_BigEndian()
  DataConverter get_Native()
  int Align(int current, int align)
  Byte[] Pack(string description, Object[] args)
  Byte[] PackEnumerable(string description, IEnumerable args)
  bool PackOne(PackContext b, object oarg)
  bool Prepare(Byte[] buffer, Int32& idx, int size, Boolean& align)
  IList Unpack(string description, Byte[] buffer, int startIndex)
  void Check(Byte[] dest, int destIdx, int size)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.DependencyInjector
Наследуется от: object
Поля:
  string TypeName
  object locker
  ISystemDependencyProvider systemDependency
Свойства:
  ISystemDependencyProvider SystemProvider
Методы:
  ISystemDependencyProvider get_SystemProvider()
  void Register(ISystemDependencyProvider provider)
  ISystemDependencyProvider ReflectionLoad()
  void .cctor()
--------------------------------------------------
Класс: Mono.ISystemCertificateProvider
Поля:
Свойства:
Методы:
  X509CertificateImpl Import(Byte[] data, CertificateImportFlags importFlags)
  X509CertificateImpl Import(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags, CertificateImportFlags importFlags)
  X509CertificateImpl Import(X509Certificate cert, CertificateImportFlags importFlags)
--------------------------------------------------
Класс: Mono.ISystemDependencyProvider
Поля:
Свойства:
  ISystemCertificateProvider CertificateProvider
Методы:
  ISystemCertificateProvider get_CertificateProvider()
--------------------------------------------------
Класс: Mono.Runtime
Наследуется от: object
Поля:
  object dump
Свойства:
Методы:
  void mono_runtime_install_handlers()
  void InstallSignalHandlers()
  string GetDisplayName()
  string GetNativeStackTrace(Exception exception)
  bool SetGCAllowSynchronousMajor(bool flag)
  string ExceptionToState_internal(Exception exc, UInt64& portable_hash, UInt64& unportable_hash)
  Tuple`3<string, ulong, ulong> ExceptionToState(Exception exc)
  void DisableMicrosoftTelemetry()
  void EnableMicrosoftTelemetry_internal(IntPtr appBundleID, IntPtr appSignature, IntPtr appVersion, IntPtr merpGUIPath, IntPtr appPath, IntPtr configDir)
  void SendMicrosoftTelemetry_internal(IntPtr payload, ulong portable_hash, ulong unportable_hash)
  void WriteStateToFile_internal(IntPtr payload, ulong portable_hash, ulong unportable_hash)
  void WriteStateToFile(Exception exc)
  void SendMicrosoftTelemetry(string payload_str, ulong portable_hash, ulong unportable_hash)
  void SendExceptionToTelemetry(Exception exc)
  void EnableMicrosoftTelemetry(string appBundleID_str, string appSignature_str, string appVersion_str, string merpGUIPath_str, string unused, string appPath_str, string configDir_str)
  string DumpStateSingle_internal(UInt64& portable_hash, UInt64& unportable_hash)
  string DumpStateTotal_internal(UInt64& portable_hash, UInt64& unportable_hash)
  Tuple`3<string, ulong, ulong> DumpStateSingle()
  Tuple`3<string, ulong, ulong> DumpStateTotal()
  void RegisterReportingForAllNativeLibs_internal()
  void RegisterReportingForAllNativeLibs()
  void RegisterReportingForNativeLib_internal(IntPtr modulePathSuffix, IntPtr moduleName)
  void RegisterReportingForNativeLib(string modulePathSuffix_str, string moduleName_str)
  void EnableCrashReportLog_internal(IntPtr directory)
  void EnableCrashReportLog(string directory_str)
  int CheckCrashReportLog_internal(IntPtr directory, bool clear)
  CrashReportLogLevel CheckCrashReportLog(string directory_str, bool clear)
  string get_breadcrumb_value(string file_prefix, string directory_str, bool clear)
  long CheckCrashReportHash(string directory_str, bool clear)
  string CheckCrashReportReason(string directory_str, bool clear)
  void AnnotateMicrosoftTelemetry_internal(IntPtr key, IntPtr val)
  void AnnotateMicrosoftTelemetry(string key, string val)
  void .cctor()
--------------------------------------------------
Класс: Mono.RuntimeClassHandle
Наследуется от: ValueType
Поля:
  MonoClass* value
Свойства:
  MonoClass* Value
Методы:
  void .ctor(MonoClass* value)
  void .ctor(IntPtr ptr)
  MonoClass* get_Value()
  bool Equals(object obj)
  int GetHashCode()
  bool Equals(RuntimeClassHandle handle)
  bool op_Equality(RuntimeClassHandle left, object right)
  bool op_Inequality(RuntimeClassHandle left, object right)
  bool op_Equality(object left, RuntimeClassHandle right)
  bool op_Inequality(object left, RuntimeClassHandle right)
  IntPtr GetTypeFromClass(MonoClass* klass)
  RuntimeTypeHandle GetTypeHandle()
--------------------------------------------------
Класс: Mono.RuntimeRemoteClassHandle
Наследуется от: ValueType
Поля:
  RemoteClass* value
Свойства:
  RuntimeClassHandle ProxyClass
Методы:
  void .ctor(RemoteClass* value)
  RuntimeClassHandle get_ProxyClass()
--------------------------------------------------
Класс: Mono.RuntimeGenericParamInfoHandle
Наследуется от: ValueType
Поля:
  GenericParamInfo* value
Свойства:
  Type[] Constraints
  GenericParameterAttributes Attributes
Методы:
  void .ctor(GenericParamInfo* value)
  void .ctor(IntPtr ptr)
  Type[] get_Constraints()
  GenericParameterAttributes get_Attributes()
  Type[] GetConstraints()
  int GetConstraintsCount()
--------------------------------------------------
Класс: Mono.RuntimeEventHandle
Наследуется от: ValueType
Поля:
  IntPtr value
Свойства:
  IntPtr Value
Методы:
  void .ctor(IntPtr v)
  IntPtr get_Value()
  bool Equals(object obj)
  bool Equals(RuntimeEventHandle handle)
  int GetHashCode()
  bool op_Equality(RuntimeEventHandle left, RuntimeEventHandle right)
  bool op_Inequality(RuntimeEventHandle left, RuntimeEventHandle right)
--------------------------------------------------
Класс: Mono.RuntimePropertyHandle
Наследуется от: ValueType
Поля:
  IntPtr value
Свойства:
  IntPtr Value
Методы:
  void .ctor(IntPtr v)
  IntPtr get_Value()
  bool Equals(object obj)
  bool Equals(RuntimePropertyHandle handle)
  int GetHashCode()
  bool op_Equality(RuntimePropertyHandle left, RuntimePropertyHandle right)
  bool op_Inequality(RuntimePropertyHandle left, RuntimePropertyHandle right)
--------------------------------------------------
Класс: Mono.RuntimeGPtrArrayHandle
Наследуется от: ValueType
Поля:
  GPtrArray* value
Свойства:
  int Length
  IntPtr Item
Методы:
  void .ctor(GPtrArray* value)
  void .ctor(IntPtr ptr)
  int get_Length()
  IntPtr get_Item(int i)
  IntPtr Lookup(int i)
  void GPtrArrayFree(GPtrArray* value)
  void DestroyAndFree(RuntimeGPtrArrayHandle& h)
--------------------------------------------------
Класс: Mono.RuntimeMarshal
Наследуется от: object
Поля:
Свойства:
Методы:
  string PtrToUtf8String(IntPtr ptr)
  SafeStringMarshal MarshalString(string str)
  int DecodeBlobSize(IntPtr in_ptr, IntPtr& out_ptr)
  Byte[] DecodeBlobArray(IntPtr ptr)
  int AsciHexDigitValue(int c)
  void FreeAssemblyName(MonoAssemblyName& name, bool freeStruct)
--------------------------------------------------
Класс: Mono.RuntimeStructs
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.MonoAssemblyName
Наследуется от: ValueType
Поля:
  int MONO_PUBLIC_KEY_TOKEN_LENGTH
  IntPtr name
  IntPtr culture
  IntPtr hash_value
  IntPtr public_key
  <public_key_token>e__FixedBuffer public_key_token
  UInt32 hash_alg
  UInt32 hash_len
  UInt32 flags
  ushort major
  ushort minor
  ushort build
  ushort revision
  ushort arch
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.ValueTuple
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.ValueTuple`1
Наследуется от: ValueType
Поля:
  T1 Item1
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.ValueTuple`2
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.ValueTuple`3
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.ValueTuple`4
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.ValueTuple`5
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.NullByRefReturnException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.SafeGPtrArrayHandle
Наследуется от: ValueType
Поля:
  RuntimeGPtrArrayHandle handle
Свойства:
  int Length
  IntPtr Item
Методы:
  void .ctor(IntPtr ptr)
  void Dispose()
  int get_Length()
  IntPtr get_Item(int i)
--------------------------------------------------
Класс: Mono.SafeStringMarshal
Наследуется от: ValueType
Поля:
  string str
  IntPtr marshaled_string
Свойства:
  IntPtr Value
Методы:
  IntPtr StringToUtf8_icall(String& str)
  IntPtr StringToUtf8(string str)
  void GFree(IntPtr ptr)
  void .ctor(string str)
  IntPtr get_Value()
  void Dispose()
--------------------------------------------------
Класс: Mono.Xml.SecurityParser
Наследуется от: SmallXmlParser
Поля:
  SecurityElement root
  SecurityElement current
  Stack stack
Свойства:
Методы:
  void .ctor()
  void LoadXml(string xml)
  SecurityElement ToXml()
  void OnStartParsing(SmallXmlParser parser)
  void OnProcessingInstruction(string name, string text)
  void OnIgnorableWhitespace(string s)
  void OnStartElement(string name, IAttrList attrs)
  void OnEndElement(string name)
  void OnChars(string ch)
  void OnEndParsing(SmallXmlParser parser)
--------------------------------------------------
Класс: Mono.Xml.DefaultHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  void OnStartParsing(SmallXmlParser parser)
  void OnEndParsing(SmallXmlParser parser)
  void OnStartElement(string name, IAttrList attrs)
  void OnEndElement(string name)
  void OnChars(string s)
  void OnIgnorableWhitespace(string s)
  void OnProcessingInstruction(string name, string text)
  void .ctor()
--------------------------------------------------
Класс: Mono.Xml.SmallXmlParser
Наследуется от: object
Поля:
  IContentHandler handler
  TextReader reader
  Stack elementNames
  Stack xmlSpaces
  string xmlSpace
  StringBuilder buffer
  Char[] nameBuffer
  bool isWhitespace
  AttrListImpl attributes
  int line
  int column
  bool resetColumn
Свойства:
Методы:
  void .ctor()
  Exception Error(string msg)
  Exception UnexpectedEndError()
  bool IsNameChar(char c, bool start)
  bool IsWhitespace(int c)
  void SkipWhitespaces()
  void HandleWhitespaces()
  void SkipWhitespaces(bool expected)
  int Peek()
  int Read()
  void Expect(int c)
  string ReadUntil(char until, bool handleReferences)
  string ReadName()
  void Parse(TextReader input, IContentHandler handler)
  void Cleanup()
  void ReadContent()
  void HandleBufferedContent()
  void ReadCharacters()
  void ReadReference()
  int ReadCharacterReference()
  void ReadAttribute(AttrListImpl a)
  void ReadCDATASection()
  void ReadComment()
--------------------------------------------------
Класс: Mono.Xml.SmallXmlParserException
Наследуется от: SystemException
Поля:
  int line
  int column
Свойства:
  int Line
  int Column
Методы:
  void .ctor(string msg, int line, int column)
  int get_Line()
  int get_Column()
--------------------------------------------------
Класс: Mono.Interop.ComInteropProxy
Наследуется от: RealProxy
Поля:
  __ComObject com_object
  int ref_count
  string type_name
Свойства:
  string TypeName
Методы:
  void AddProxy(IntPtr pItf, ComInteropProxy& proxy)
  void FindProxy(IntPtr pItf, ComInteropProxy& proxy)
  void .ctor(Type t)
  void CacheProxy()
  void .ctor(IntPtr pUnk)
  void .ctor(IntPtr pUnk, Type t)
  ComInteropProxy GetProxy(IntPtr pItf, Type t)
  ComInteropProxy CreateProxy(Type t)
  IMessage Invoke(IMessage msg)
  string get_TypeName()
  void set_TypeName(string value)
  bool CanCastTo(Type fromType, object o)
--------------------------------------------------
Класс: Mono.Interop.IDispatch
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Interop.IUnknown
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Interop.MonoPInvokeCallbackAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(Type t)
--------------------------------------------------
Класс: Mono.Globalization.Unicode.CodePointIndexer
Наследуется от: object
Поля:
  TableRange[] ranges
  int TotalCount
  int defaultIndex
  int defaultCP
Свойства:
Методы:
  Array CompressArray(Array source, Type type, CodePointIndexer indexer)
  void .ctor(Int32[] starts, Int32[] ends, int defaultIndex, int defaultCP)
  int ToIndex(int cp)
  int ToCodePoint(int i)
--------------------------------------------------
Класс: Mono.Globalization.Unicode.TailoringInfo
Наследуется от: object
Поля:
  int LCID
  int TailoringIndex
  int TailoringCount
  bool FrenchSort
Свойства:
Методы:
  void .ctor(int lcid, int tailoringIndex, int tailoringCount, bool frenchSort)
--------------------------------------------------
Класс: Mono.Globalization.Unicode.Contraction
Наследуется от: object
Поля:
  int Index
  Char[] Source
  string Replacement
  Byte[] SortKey
Свойства:
Методы:
  void .ctor(int index, Char[] source, string replacement, Byte[] sortkey)
--------------------------------------------------
Класс: Mono.Globalization.Unicode.ContractionComparer
Наследуется от: object
Поля:
  ContractionComparer Instance
Свойства:
Методы:
  int Compare(Contraction c1, Contraction c2)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.Globalization.Unicode.Level2Map
Наследуется от: object
Поля:
  byte Source
  byte Replace
Свойства:
Методы:
  void .ctor(byte source, byte replace)
--------------------------------------------------
Класс: Mono.Globalization.Unicode.MSCompatUnicodeTable
Наследуется от: object
Поля:
  int MaxExpansionLength
  Byte* ignorableFlags
  Byte* categories
  Byte* level1
  Byte* level2
  Byte* level3
  Byte* cjkCHScategory
  Byte* cjkCHTcategory
  Byte* cjkJAcategory
  Byte* cjkKOcategory
  Byte* cjkCHSlv1
  Byte* cjkCHTlv1
  Byte* cjkJAlv1
  Byte* cjkKOlv1
  Byte* cjkKOlv2
  int ResourceVersionSize
  Char[] tailoringArr
  TailoringInfo[] tailoringInfos
  object forLock
  bool isReady
Свойства:
  bool IsReady
Методы:
  TailoringInfo GetTailoringInfo(int lcid)
  void BuildTailoringTables(CultureInfo culture, TailoringInfo t, Contraction[]& contractions, Level2Map[]& diacriticals)
  void SetCJKReferences(string name, CodePointIndexer& cjkIndexer, Byte*& catTable, Byte*& lv1Table, CodePointIndexer& lv2Indexer, Byte*& lv2Table)
  byte Category(int cp)
  byte Level1(int cp)
  byte Level2(int cp)
  byte Level3(int cp)
  bool IsSortable(string s)
  bool IsSortable(int cp)
  bool IsIgnorable(int cp)
  bool IsIgnorable(int cp, byte flag)
  bool IsIgnorableSymbol(int cp)
  bool IsIgnorableNonSpacing(int cp)
  int ToKanaTypeInsensitive(int i)
  int ToWidthCompat(int i)
  bool HasSpecialWeight(char c)
  byte GetJapaneseDashType(char c)
  bool IsHalfWidthKana(char c)
  bool IsHiragana(char c)
  bool IsJapaneseSmallLetter(char c)
  bool get_IsReady()
  IntPtr GetResource(string name)
  UInt32 UInt32FromBytePtr(Byte* raw, UInt32 idx)
  void .cctor()
  void FillCJK(string culture, CodePointIndexer& cjkIndexer, Byte*& catTable, Byte*& lv1Table, CodePointIndexer& lv2Indexer, Byte*& lv2Table)
  void FillCJKCore(string culture, CodePointIndexer& cjkIndexer, Byte*& catTable, Byte*& lv1Table, CodePointIndexer& cjkLv2Indexer, Byte*& lv2Table)
  void .ctor()
--------------------------------------------------
Класс: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil
Наследуется от: object
Поля:
  byte ResourceVersion
  CodePointIndexer Ignorable
  CodePointIndexer Category
  CodePointIndexer Level1
  CodePointIndexer Level2
  CodePointIndexer Level3
  CodePointIndexer CjkCHS
  CodePointIndexer Cjk
Свойства:
Методы:
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: Mono.Globalization.Unicode.NormalizationTableUtil
Наследуется от: object
Поля:
  CodePointIndexer Prop
  CodePointIndexer Map
  CodePointIndexer Combining
  CodePointIndexer Composite
  CodePointIndexer Helper
Свойства:
  int PropCount
  int MapCount
Методы:
  void .cctor()
  int PropIdx(int cp)
  int PropCP(int index)
  int get_PropCount()
  int MapIdx(int cp)
  int MapCP(int index)
  int CbIdx(int cp)
  int CbCP(int index)
  int get_MapCount()
  void .ctor()
--------------------------------------------------
Класс: Mono.Globalization.Unicode.SimpleCollator
Наследуется от: object
Поля:
  SimpleCollator invariant
  TextInfo textInfo
  CodePointIndexer cjkIndexer
  Contraction[] contractions
  Level2Map[] level2Maps
  Byte[] unsafeFlags
  Byte* cjkCatTable
  Byte* cjkLv1Table
  Byte* cjkLv2Table
  CodePointIndexer cjkLv2Indexer
  int lcid
  bool frenchSort
  int UnsafeFlagLength
Свойства:
Методы:
  void .ctor(CultureInfo culture)
  void SetCJKTable(CultureInfo culture, CodePointIndexer& cjkIndexer, Byte*& catTable, Byte*& lv1Table, CodePointIndexer& lv2Indexer, Byte*& lv2Table)
  CultureInfo GetNeutralCulture(CultureInfo info)
  byte Category(int cp)
  byte Level1(int cp)
  byte Level2(int cp, ExtenderType ext)
  bool IsHalfKana(int cp, CompareOptions opt)
  Contraction GetContraction(string s, int start, int end)
  Contraction GetContraction(string s, int start, int end, Contraction[] clist)
  Contraction GetTailContraction(string s, int start, int end)
  Contraction GetTailContraction(string s, int start, int end, Contraction[] clist)
  Contraction GetContraction(char c)
  Contraction GetContraction(char c, Contraction[] clist)
  int FilterOptions(int i, CompareOptions opt)
  ExtenderType GetExtenderType(int i)
  byte ToDashTypeValue(ExtenderType ext, CompareOptions opt)
  int FilterExtender(int i, ExtenderType ext, CompareOptions opt)
  bool IsIgnorable(int i, CompareOptions opt)
  bool IsSafe(int i)
  SortKey GetSortKey(string s)
  SortKey GetSortKey(string s, CompareOptions options)
  SortKey GetSortKey(string s, int start, int length, CompareOptions options)
  void GetSortKey(string s, int start, int end, SortKeyBuffer buf, CompareOptions opt)
  void FillSortKeyRaw(int i, ExtenderType ext, SortKeyBuffer buf, CompareOptions opt)
  void FillSurrogateSortKeyRaw(int i, SortKeyBuffer buf)
  int Compare(string s1, string s2)
  int System.Globalization.ISimpleCollator.Compare(string s1, int idx1, int len1, string s2, int idx2, int len2, CompareOptions options)
  int Compare(string s1, int idx1, int len1, string s2, int idx2, int len2, CompareOptions options)
  void ClearBuffer(Byte* buffer, int size)
  int CompareInternal(string s1, int idx1, int len1, string s2, int idx2, int len2, Boolean& targetConsumed, Boolean& sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, Context& ctx)
  int CompareFlagPair(bool b1, bool b2)
  bool IsPrefix(string src, string target, CompareOptions opt)
  bool IsPrefix(string s, string target, int start, int length, CompareOptions opt)
  bool IsPrefix(string s, string target, int start, int length, bool skipHeadingExtenders, Context& ctx)
  bool IsSuffix(string src, string target, CompareOptions opt)
  bool IsSuffix(string s, string target, int start, int length, CompareOptions opt)
  int IndexOf(string s, string target, CompareOptions opt)
  int QuickIndexOf(string s, string target, int start, int length, Boolean& testWasUnable)
  int IndexOf(string s, string target, int start, int length, CompareOptions opt)
  int IndexOfOrdinal(string s, string target, int start, int length)
  int IndexOf(string s, char target, CompareOptions opt)
  int IndexOf(string s, char target, int start, int length, CompareOptions opt)
  int IndexOfOrdinal(string s, char target, int start, int length)
  int IndexOfSortKey(string s, int start, int length, Byte* sortkey, char target, int ti, bool noLv4, Context& ctx)
  int IndexOf(string s, string target, int start, int length, Byte* targetSortKey, Context& ctx)
  int LastIndexOf(string s, string target, CompareOptions opt)
  int LastIndexOf(string s, string target, int start, int length, CompareOptions opt)
  int LastIndexOfOrdinal(string s, string target, int start, int length)
  int LastIndexOf(string s, char target, CompareOptions opt)
  int LastIndexOf(string s, char target, int start, int length, CompareOptions opt)
  int LastIndexOfSortKey(string s, int start, int orgStart, int length, Byte* sortkey, int ti, bool noLv4, Context& ctx)
  int LastIndexOf(string s, string target, int start, int length, Byte* targetSortKey, Context& ctx)
  bool MatchesForward(string s, Int32& idx, int end, int ti, Byte* sortkey, bool noLv4, Context& ctx)
  bool MatchesForwardCore(string s, Int32& idx, int end, int ti, Byte* sortkey, bool noLv4, ExtenderType ext, Contraction& ct, Context& ctx)
  bool MatchesPrimitive(CompareOptions opt, Byte* source, int si, ExtenderType ext, Byte* target, int ti, bool noLv4)
  bool MatchesBackward(string s, Int32& idx, int end, int orgStart, int ti, Byte* sortkey, bool noLv4, Context& ctx)
  bool MatchesBackwardCore(string s, Int32& idx, int end, int orgStart, int ti, Byte* sortkey, bool noLv4, ExtenderType ext, Contraction& ct, Context& ctx)
  void .cctor()
--------------------------------------------------
Класс: Mono.Globalization.Unicode.SortKeyBuffer
Наследуется от: object
Поля:
  Byte[] l1b
  Byte[] l2b
  Byte[] l3b
  Byte[] l4sb
  Byte[] l4tb
  Byte[] l4kb
  Byte[] l4wb
  Byte[] l5b
  string source
  int l1
  int l2
  int l3
  int l4s
  int l4t
  int l4k
  int l4w
  int l5
  int lcid
  CompareOptions options
  bool processLevel2
  bool frenchSort
  bool frenchSorted
Свойства:
Методы:
  void .ctor(int lcid)
  void Reset()
  void ClearBuffer()
  void Initialize(CompareOptions options, int lcid, string s, bool frenchSort)
  void AppendCJKExtension(byte lv1msb, byte lv1lsb)
  void AppendKana(byte category, byte lv1, byte lv2, byte lv3, bool isSmallKana, byte markType, bool isKatakana, bool isHalfWidth)
  void AppendNormal(byte category, byte lv1, byte lv2, byte lv3)
  void AppendLevel5(byte category, byte lv1)
  void AppendBufferPrimitive(byte value, Byte[]& buf, Int32& bidx)
  SortKey GetResultAndReset()
  int GetOptimizedLength(Byte[] data, int len, byte defaultValue)
  SortKey GetResult()
--------------------------------------------------
Класс: Mono.Security.ASN1
Наследуется от: object
Поля:
  byte m_nTag
  Byte[] m_aValue
  ArrayList elist
Свойства:
  int Count
  byte Tag
  int Length
  Byte[] Value
  ASN1 Item
Методы:
  void .ctor()
  void .ctor(byte tag)
  void .ctor(byte tag, Byte[] data)
  void .ctor(Byte[] data)
  int get_Count()
  byte get_Tag()
  int get_Length()
  Byte[] get_Value()
  void set_Value(Byte[] value)
  bool CompareArray(Byte[] array1, Byte[] array2)
  bool Equals(Byte[] asn1)
  bool CompareValue(Byte[] value)
  ASN1 Add(ASN1 asn1)
  Byte[] GetBytes()
  void Decode(Byte[] asn1, Int32& anPos, int anLength)
  void DecodeTLV(Byte[] asn1, Int32& pos, Byte& tag, Int32& length, Byte[]& content)
  ASN1 get_Item(int index)
  ASN1 Element(int index, byte anTag)
  string ToString()
  void SaveToFile(string filename)
--------------------------------------------------
Класс: Mono.Security.ASN1Convert
Наследуется от: object
Поля:
Свойства:
Методы:
  ASN1 FromDateTime(DateTime dt)
  ASN1 FromInt32(int value)
  ASN1 FromOid(string oid)
  ASN1 FromUnsignedBigInteger(Byte[] big)
  int ToInt32(ASN1 asn1)
  string ToOid(ASN1 asn1)
  DateTime ToDateTime(ASN1 time)
--------------------------------------------------
Класс: Mono.Security.BitConverterLE
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  Byte[] GetUShortBytes(Byte* bytes)
  Byte[] GetUIntBytes(Byte* bytes)
  Byte[] GetULongBytes(Byte* bytes)
  Byte[] GetBytes(bool value)
  Byte[] GetBytes(char value)
  Byte[] GetBytes(short value)
  Byte[] GetBytes(int value)
  Byte[] GetBytes(long value)
  Byte[] GetBytes(ushort value)
  Byte[] GetBytes(UInt32 value)
  Byte[] GetBytes(ulong value)
  Byte[] GetBytes(float value)
  Byte[] GetBytes(double value)
  void UShortFromBytes(Byte* dst, Byte[] src, int startIndex)
  void UIntFromBytes(Byte* dst, Byte[] src, int startIndex)
  void ULongFromBytes(Byte* dst, Byte[] src, int startIndex)
  bool ToBoolean(Byte[] value, int startIndex)
  char ToChar(Byte[] value, int startIndex)
  short ToInt16(Byte[] value, int startIndex)
  int ToInt32(Byte[] value, int startIndex)
  long ToInt64(Byte[] value, int startIndex)
  ushort ToUInt16(Byte[] value, int startIndex)
  UInt32 ToUInt32(Byte[] value, int startIndex)
  ulong ToUInt64(Byte[] value, int startIndex)
  float ToSingle(Byte[] value, int startIndex)
  double ToDouble(Byte[] value, int startIndex)
--------------------------------------------------
Класс: Mono.Security.StrongName
Наследуется от: object
Поля:
  RSA rsa
  Byte[] publicKey
  Byte[] keyToken
  string tokenAlgorithm
  object lockObject
  bool initialized
Свойства:
  bool CanSign
  RSA RSA
  Byte[] PublicKey
  Byte[] PublicKeyToken
  string TokenAlgorithm
Методы:
  void .ctor()
  void .ctor(int keySize)
  void .ctor(Byte[] data)
  void .ctor(RSA rsa)
  void InvalidateCache()
  bool get_CanSign()
  RSA get_RSA()
  void set_RSA(RSA value)
  Byte[] get_PublicKey()
  Byte[] get_PublicKeyToken()
  HashAlgorithm GetHashAlgorithm(string algorithm)
  string get_TokenAlgorithm()
  void set_TokenAlgorithm(string value)
  Byte[] GetBytes()
  UInt32 RVAtoPosition(UInt32 r, int sections, Byte[] headers)
  StrongNameSignature Error(string a)
  Byte[] ReadMore(Stream stream, Byte[] a, int newSize)
  StrongNameSignature StrongHash(Stream stream, StrongNameOptions options)
  Byte[] Hash(string fileName)
  bool Sign(string fileName)
  bool Verify(string fileName)
  bool Verify(Stream stream)
  bool IsAssemblyStrongnamed(string assemblyName)
  bool VerifySignature(Byte[] publicKey, int algorithm, Byte[] hash, Byte[] signature)
  bool Verify(RSA rsa, AssemblyHashAlgorithm algorithm, Byte[] hash, Byte[] signature)
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.StrongNameManager
Наследуется от: object
Поля:
  Hashtable mappings
  Hashtable tokens
Свойства:
Методы:
  void LoadConfig(string filename)
  void LoadMapping(SecurityElement mapping)
  void LoadVerificationSettings(SecurityElement settings)
  Byte[] GetMappedPublicKey(Byte[] token)
  bool MustVerify(AssemblyName an)
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: Mono.Security.UriPartial
Наследуется от: Enum
Поля:
  int value__
  UriPartial Scheme
  UriPartial Authority
  UriPartial Path
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Security.Uri
Наследуется от: object
Поля:
  bool isUnixFilePath
  string source
  string scheme
  string host
  int port
  string path
  string query
  string fragment
  string userinfo
  bool isUnc
  bool isOpaquePart
  String[] segments
  bool userEscaped
  string cachedAbsoluteUri
  string cachedToString
  string cachedLocalPath
  int cachedHashCode
  bool reduce
  string hexUpperChars
  string SchemeDelimiter
  string UriSchemeFile
  string UriSchemeFtp
  string UriSchemeGopher
  string UriSchemeHttp
  string UriSchemeHttps
  string UriSchemeMailto
  string UriSchemeNews
  string UriSchemeNntp
  UriScheme[] schemes
Свойства:
  string AbsolutePath
  string AbsoluteUri
  string Authority
  string Fragment
  string Host
  bool IsDefaultPort
  bool IsFile
  bool IsLoopback
  bool IsUnc
  string LocalPath
  string PathAndQuery
  int Port
  string Query
  string Scheme
  String[] Segments
  bool UserEscaped
  string UserInfo
Методы:
  void .ctor(string uriString)
  void .ctor(string uriString, bool dontEscape)
  void .ctor(string uriString, bool dontEscape, bool reduce)
  void .ctor(Uri baseUri, string relativeUri)
  void .ctor(Uri baseUri, string relativeUri, bool dontEscape)
  string get_AbsolutePath()
  string get_AbsoluteUri()
  string get_Authority()
  string get_Fragment()
  string get_Host()
  bool get_IsDefaultPort()
  bool get_IsFile()
  bool get_IsLoopback()
  bool get_IsUnc()
  string get_LocalPath()
  string get_PathAndQuery()
  int get_Port()
  string get_Query()
  string get_Scheme()
  String[] get_Segments()
  bool get_UserEscaped()
  string get_UserInfo()
  bool IsIPv4Address(string name)
  bool IsDomainAddress(string name)
  bool CheckSchemeName(string schemeName)
  bool Equals(object comparant)
  int GetHashCode()
  string GetLeftPart(UriPartial part)
  int FromHex(char digit)
  string HexEscape(char character)
  char HexUnescape(string pattern, Int32& index)
  bool IsHexDigit(char digit)
  bool IsHexEncoding(string pattern, int index)
  string MakeRelative(Uri toUri)
  string ToString()
  void Escape()
  string EscapeString(string str)
  string EscapeString(string str, bool escapeReserved, bool escapeHex, bool escapeBrackets)
  void Parse()
  string Unescape(string str)
  string Unescape(string str, bool excludeSharp)
  void ParseAsWindowsUNC(string uriString)
  void ParseAsWindowsAbsoluteFilePath(string uriString)
  void ParseAsUnixAbsoluteFilePath(string uriString)
  void Parse(string uriString)
  string Reduce(string path)
  string GetSchemeDelimiter(string scheme)
  int GetDefaultPort(string scheme)
  string GetOpaqueWiseSchemeDelimiter()
  bool IsBadFileSystemCharacter(char ch)
  bool IsExcludedCharacter(char ch)
  bool IsPredefinedScheme(string scheme)
  bool IsReservedCharacter(char ch)
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.Cryptography.ARC4Managed
Наследуется от: RC4
Поля:
  Byte[] key
  Byte[] state
  byte x
  byte y
  bool m_disposed
Свойства:
  Byte[] Key
  bool CanReuseTransform
  bool CanTransformMultipleBlocks
  int InputBlockSize
  int OutputBlockSize
Методы:
  void .ctor()
  void Finalize()
  void Dispose(bool disposing)
  Byte[] get_Key()
  void set_Key(Byte[] value)
  bool get_CanReuseTransform()
  ICryptoTransform CreateEncryptor(Byte[] rgbKey, Byte[] rgvIV)
  ICryptoTransform CreateDecryptor(Byte[] rgbKey, Byte[] rgvIV)
  void GenerateIV()
  void GenerateKey()
  bool get_CanTransformMultipleBlocks()
  int get_InputBlockSize()
  int get_OutputBlockSize()
  void KeySetup(Byte[] key)
  void CheckInput(Byte[] inputBuffer, int inputOffset, int inputCount)
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  int InternalTransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
--------------------------------------------------
Класс: Mono.Security.Cryptography.CryptoConvert
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  int ToInt32LE(Byte[] bytes, int offset)
  UInt32 ToUInt32LE(Byte[] bytes, int offset)
  Byte[] GetBytesLE(int val)
  Byte[] Trim(Byte[] array)
  bool TryImportCapiPrivateKeyBlob(Byte[] blob, int offset)
  RSA FromCapiPrivateKeyBlob(Byte[] blob)
  RSA FromCapiPrivateKeyBlob(Byte[] blob, int offset)
  RSAParameters GetParametersFromCapiPrivateKeyBlob(Byte[] blob, int offset)
  DSA FromCapiPrivateKeyBlobDSA(Byte[] blob)
  DSA FromCapiPrivateKeyBlobDSA(Byte[] blob, int offset)
  Byte[] ToCapiPrivateKeyBlob(RSA rsa)
  Byte[] ToCapiPrivateKeyBlob(DSA dsa)
  bool TryImportCapiPublicKeyBlob(Byte[] blob, int offset)
  RSA FromCapiPublicKeyBlob(Byte[] blob)
  RSA FromCapiPublicKeyBlob(Byte[] blob, int offset)
  RSAParameters GetParametersFromCapiPublicKeyBlob(Byte[] blob, int offset)
  DSA FromCapiPublicKeyBlobDSA(Byte[] blob)
  DSA FromCapiPublicKeyBlobDSA(Byte[] blob, int offset)
  Byte[] ToCapiPublicKeyBlob(RSA rsa)
  Byte[] ToCapiPublicKeyBlob(DSA dsa)
  RSA FromCapiKeyBlob(Byte[] blob)
  RSA FromCapiKeyBlob(Byte[] blob, int offset)
  DSA FromCapiKeyBlobDSA(Byte[] blob)
  DSA FromCapiKeyBlobDSA(Byte[] blob, int offset)
  Byte[] ToCapiKeyBlob(AsymmetricAlgorithm keypair, bool includePrivateKey)
  Byte[] ToCapiKeyBlob(RSA rsa, bool includePrivateKey)
  Byte[] ToCapiKeyBlob(DSA dsa, bool includePrivateKey)
  string ToHex(Byte[] input)
  byte FromHexChar(char c)
  Byte[] FromHex(string hex)
--------------------------------------------------
Класс: Mono.Security.Cryptography.KeyBuilder
Наследуется от: object
Поля:
  RandomNumberGenerator rng
Свойства:
  RandomNumberGenerator Rng
Методы:
  void .ctor()
  RandomNumberGenerator get_Rng()
  Byte[] Key(int size)
  Byte[] IV(int size)
--------------------------------------------------
Класс: Mono.Security.Cryptography.BlockProcessor
Наследуется от: object
Поля:
  ICryptoTransform transform
  Byte[] block
  int blockSize
  int blockCount
Свойства:
Методы:
  void .ctor(ICryptoTransform transform)
  void .ctor(ICryptoTransform transform, int blockSize)
  void Finalize()
  void Initialize()
  void Core(Byte[] rgb)
  void Core(Byte[] rgb, int ib, int cb)
  Byte[] Final()
--------------------------------------------------
Класс: Mono.Security.Cryptography.KeyPairPersistence
Наследуется от: object
Поля:
  bool _userPathExists
  string _userPath
  bool _machinePathExists
  string _machinePath
  CspParameters _params
  string _keyvalue
  string _filename
  string _container
  object lockobj
Свойства:
  string Filename
  string KeyValue
  CspParameters Parameters
  string UserPath
  string MachinePath
  bool CanChange
  bool UseDefaultKeyContainer
  bool UseMachineKeyStore
  string ContainerName
Методы:
  void .ctor(CspParameters parameters)
  void .ctor(CspParameters parameters, string keyPair)
  string get_Filename()
  string get_KeyValue()
  void set_KeyValue(string value)
  CspParameters get_Parameters()
  bool Load()
  void Save()
  void Remove()
  string get_UserPath()
  string get_MachinePath()
  bool _CanSecure(Char* root)
  bool _ProtectUser(Char* path)
  bool _ProtectMachine(Char* path)
  bool _IsUserProtected(Char* path)
  bool _IsMachineProtected(Char* path)
  bool CanSecure(string path)
  bool ProtectUser(string path)
  bool ProtectMachine(string path)
  bool IsUserProtected(string path)
  bool IsMachineProtected(string path)
  bool get_CanChange()
  bool get_UseDefaultKeyContainer()
  bool get_UseMachineKeyStore()
  string get_ContainerName()
  CspParameters Copy(CspParameters p)
  void FromXml(string xml)
  string ToXml()
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.Cryptography.MD2
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  MD2 Create()
  MD2 Create(string hashName)
--------------------------------------------------
Класс: Mono.Security.Cryptography.MD2Managed
Наследуется от: MD2
Поля:
  Byte[] state
  Byte[] checksum
  Byte[] buffer
  int count
  Byte[] x
  Byte[] PI_SUBST
Свойства:
Методы:
  Byte[] Padding(int nLength)
  void .ctor()
  void Initialize()
  void HashCore(Byte[] array, int ibStart, int cbSize)
  Byte[] HashFinal()
  void MD2Transform(Byte[] state, Byte[] checksum, Byte[] block, int index)
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.Cryptography.MD4
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  MD4 Create()
  MD4 Create(string hashName)
--------------------------------------------------
Класс: Mono.Security.Cryptography.MD4Managed
Наследуется от: MD4
Поля:
  UInt32[] state
  Byte[] buffer
  UInt32[] count
  UInt32[] x
  int S11
  int S12
  int S13
  int S14
  int S21
  int S22
  int S23
  int S24
  int S31
  int S32
  int S33
  int S34
  Byte[] digest
Свойства:
Методы:
  void .ctor()
  void Initialize()
  void HashCore(Byte[] array, int ibStart, int cbSize)
  Byte[] HashFinal()
  Byte[] Padding(int nLength)
  UInt32 F(UInt32 x, UInt32 y, UInt32 z)
  UInt32 G(UInt32 x, UInt32 y, UInt32 z)
  UInt32 H(UInt32 x, UInt32 y, UInt32 z)
  UInt32 ROL(UInt32 x, byte n)
  void FF(UInt32& a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, byte s)
  void GG(UInt32& a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, byte s)
  void HH(UInt32& a, UInt32 b, UInt32 c, UInt32 d, UInt32 x, byte s)
  void Encode(Byte[] output, UInt32[] input)
  void Decode(UInt32[] output, Byte[] input, int index)
  void MD4Transform(UInt32[] state, Byte[] block, int index)
--------------------------------------------------
Класс: Mono.Security.Cryptography.PKCS1
Наследуется от: object
Поля:
  Byte[] emptySHA1
  Byte[] emptySHA256
  Byte[] emptySHA384
  Byte[] emptySHA512
Свойства:
Методы:
  void .ctor()
  bool Compare(Byte[] array1, Byte[] array2)
  Byte[] xor(Byte[] array1, Byte[] array2)
  Byte[] GetEmptyHash(HashAlgorithm hash)
  Byte[] I2OSP(int x, int size)
  Byte[] I2OSP(Byte[] x, int size)
  Byte[] OS2IP(Byte[] x)
  Byte[] RSAEP(RSA rsa, Byte[] m)
  Byte[] RSADP(RSA rsa, Byte[] c)
  Byte[] RSASP1(RSA rsa, Byte[] m)
  Byte[] RSAVP1(RSA rsa, Byte[] s)
  Byte[] Encrypt_OAEP(RSA rsa, HashAlgorithm hash, RandomNumberGenerator rng, Byte[] M)
  Byte[] Decrypt_OAEP(RSA rsa, HashAlgorithm hash, Byte[] C)
  Byte[] Encrypt_v15(RSA rsa, RandomNumberGenerator rng, Byte[] M)
  Byte[] Decrypt_v15(RSA rsa, Byte[] C)
  Byte[] Sign_v15(RSA rsa, HashAlgorithm hash, Byte[] hashValue)
  Byte[] Sign_v15(RSA rsa, string hashName, Byte[] hashValue)
  bool Verify_v15(RSA rsa, HashAlgorithm hash, Byte[] hashValue, Byte[] signature)
  bool Verify_v15(RSA rsa, string hashName, Byte[] hashValue, Byte[] signature)
  bool Verify_v15(RSA rsa, HashAlgorithm hash, Byte[] hashValue, Byte[] signature, bool tryNonStandardEncoding)
  Byte[] Encode_v15(HashAlgorithm hash, Byte[] hashValue, int emLength)
  Byte[] MGF1(HashAlgorithm hash, Byte[] mgfSeed, int maskLen)
  string HashNameFromOid(string oid, bool throwOnError)
  HashAlgorithm CreateFromOid(string oid)
  HashAlgorithm CreateFromName(string name)
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.Cryptography.RC4
Наследуется от: SymmetricAlgorithm
Поля:
  KeySizes[] s_legalBlockSizes
  KeySizes[] s_legalKeySizes
Свойства:
  Byte[] IV
Методы:
  void .ctor()
  Byte[] get_IV()
  void set_IV(Byte[] value)
  RC4 Create()
  RC4 Create(string algName)
  void .cctor()
--------------------------------------------------
Класс: Mono.Security.Cryptography.RSAManaged
Наследуется от: RSA
Поля:
  int defaultKeySize
  bool isCRTpossible
  bool keyBlinding
  bool keypairGenerated
  bool m_disposed
  BigInteger d
  BigInteger p
  BigInteger q
  BigInteger dp
  BigInteger dq
  BigInteger qInv
  BigInteger n
  BigInteger e
  KeyGeneratedEventHandler KeyGenerated
Свойства:
  int KeySize
  string KeyExchangeAlgorithm
  bool PublicOnly
  string SignatureAlgorithm
  bool UseKeyBlinding
  bool IsCrtPossible
Методы:
  void .ctor()
  void .ctor(int keySize)
  void Finalize()
  void GenerateKeyPair()
  int get_KeySize()
  string get_KeyExchangeAlgorithm()
  bool get_PublicOnly()
  string get_SignatureAlgorithm()
  Byte[] DecryptValue(Byte[] rgb)
  Byte[] EncryptValue(Byte[] rgb)
  RSAParameters ExportParameters(bool includePrivateParameters)
  void ImportParameters(RSAParameters parameters)
  void Dispose(bool disposing)
  void add_KeyGenerated(KeyGeneratedEventHandler value)
  void remove_KeyGenerated(KeyGeneratedEventHandler value)
  string ToXmlString(bool includePrivateParameters)
  bool get_UseKeyBlinding()
  void set_UseKeyBlinding(bool value)
  bool get_IsCrtPossible()
  Byte[] GetPaddedValue(BigInteger value, int length)
--------------------------------------------------
Класс: Mono.Security.Cryptography.SymmetricTransform
Наследуется от: object
Поля:
  SymmetricAlgorithm algo
  bool encrypt
  int BlockSizeByte
  Byte[] temp
  Byte[] temp2
  Byte[] workBuff
  Byte[] workout
  PaddingMode padmode
  int FeedBackByte
  bool m_disposed
  bool lastBlock
  RandomNumberGenerator _rng
Свойства:
  bool CanTransformMultipleBlocks
  bool CanReuseTransform
  int InputBlockSize
  int OutputBlockSize
  bool KeepLastBlock
Методы:
  void .ctor(SymmetricAlgorithm symmAlgo, bool encryption, Byte[] rgbIV)
  void Finalize()
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  bool get_CanTransformMultipleBlocks()
  bool get_CanReuseTransform()
  int get_InputBlockSize()
  int get_OutputBlockSize()
  void Transform(Byte[] input, Byte[] output)
  void ECB(Byte[] input, Byte[] output)
  void CBC(Byte[] input, Byte[] output)
  void CFB(Byte[] input, Byte[] output)
  void OFB(Byte[] input, Byte[] output)
  void CTS(Byte[] input, Byte[] output)
  void CheckInput(Byte[] inputBuffer, int inputOffset, int inputCount)
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  bool get_KeepLastBlock()
  int InternalTransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  void Random(Byte[] buffer, int start, int length)
  void ThrowBadPaddingException(PaddingMode padding, int length, int position)
  Byte[] FinalEncrypt(Byte[] inputBuffer, int inputOffset, int inputCount)
  Byte[] FinalDecrypt(Byte[] inputBuffer, int inputOffset, int inputCount)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
--------------------------------------------------
Класс: Mono.Security.Cryptography.DSAManaged
Наследуется от: DSA
Поля:
  int defaultKeySize
  bool keypairGenerated
  bool m_disposed
  BigInteger p
  BigInteger q
  BigInteger g
  BigInteger x
  BigInteger y
  BigInteger j
  BigInteger seed
  int counter
  bool j_missing
  RandomNumberGenerator rng
  KeyGeneratedEventHandler KeyGenerated
Свойства:
  RandomNumberGenerator Random
  int KeySize
  string KeyExchangeAlgorithm
  bool PublicOnly
  string SignatureAlgorithm
Методы:
  void .ctor()
  void .ctor(int dwKeySize)
  void Finalize()
  void Generate()
  void GenerateKeyPair()
  void add(Byte[] a, Byte[] b, int value)
  void GenerateParams(int keyLength)
  RandomNumberGenerator get_Random()
  int get_KeySize()
  string get_KeyExchangeAlgorithm()
  bool get_PublicOnly()
  string get_SignatureAlgorithm()
  Byte[] NormalizeArray(Byte[] array)
  DSAParameters ExportParameters(bool includePrivateParameters)
  void ImportParameters(DSAParameters parameters)
  Byte[] CreateSignature(Byte[] rgbHash)
  bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature)
  void Dispose(bool disposing)
  void add_KeyGenerated(KeyGeneratedEventHandler value)
  void remove_KeyGenerated(KeyGeneratedEventHandler value)
--------------------------------------------------
Класс: Mono.Security.Cryptography.HMACAlgorithm
Наследуется от: object
Поля:
  Byte[] key
  Byte[] hash
  HashAlgorithm algo
  string hashName
  BlockProcessor block
Свойства:
  HashAlgorithm Algo
  string HashName
  Byte[] Key
Методы:
  void .ctor(string algoName)
  void Finalize()
  void CreateHash(string algoName)
  void Dispose()
  HashAlgorithm get_Algo()
  string get_HashName()
  void set_HashName(string value)
  Byte[] get_Key()
  void set_Key(Byte[] value)
  void Initialize()
  Byte[] KeySetup(Byte[] key, byte padding)
  void Core(Byte[] rgb, int ib, int cb)
  Byte[] Final()
--------------------------------------------------
Класс: Mono.Security.Cryptography.MACAlgorithm
Наследуется от: object
Поля:
  SymmetricAlgorithm algo
  ICryptoTransform enc
  Byte[] block
  int blockSize
  int blockCount
Свойства:
Методы:
  void .ctor(SymmetricAlgorithm algorithm)
  void Initialize(Byte[] key)
  void Core(Byte[] rgb, int ib, int cb)
  Byte[] Final()
--------------------------------------------------
Класс: Mono.Math.BigInteger
Наследуется от: object
Поля:
  UInt32 length
  UInt32[] data
  UInt32 DEFAULT_LEN
  UInt32[] smallPrimes
  string WouldReturnNegVal
  RandomNumberGenerator rng
Свойства:
  RandomNumberGenerator Rng
Методы:
  void .ctor()
  void .ctor(Sign sign, UInt32 len)
  void .ctor(BigInteger bi)
  void .ctor(BigInteger bi, UInt32 len)
  void .ctor(Byte[] inData)
  void .ctor(UInt32[] inData)
  void .ctor(UInt32 ui)
  void .ctor(ulong ul)
  BigInteger op_Implicit(UInt32 value)
  BigInteger op_Implicit(int value)
  BigInteger op_Implicit(ulong value)
  BigInteger Parse(string number)
  BigInteger op_Addition(BigInteger bi1, BigInteger bi2)
  BigInteger op_Subtraction(BigInteger bi1, BigInteger bi2)
  int op_Modulus(BigInteger bi, int i)
  UInt32 op_Modulus(BigInteger bi, UInt32 ui)
  BigInteger op_Modulus(BigInteger bi1, BigInteger bi2)
  BigInteger op_Division(BigInteger bi, int i)
  BigInteger op_Division(BigInteger bi1, BigInteger bi2)
  BigInteger op_Multiply(BigInteger bi1, BigInteger bi2)
  BigInteger op_Multiply(BigInteger bi, int i)
  BigInteger op_LeftShift(BigInteger bi1, int shiftVal)
  BigInteger op_RightShift(BigInteger bi1, int shiftVal)
  BigInteger Add(BigInteger bi1, BigInteger bi2)
  BigInteger Subtract(BigInteger bi1, BigInteger bi2)
  int Modulus(BigInteger bi, int i)
  UInt32 Modulus(BigInteger bi, UInt32 ui)
  BigInteger Modulus(BigInteger bi1, BigInteger bi2)
  BigInteger Divid(BigInteger bi, int i)
  BigInteger Divid(BigInteger bi1, BigInteger bi2)
  BigInteger Multiply(BigInteger bi1, BigInteger bi2)
  BigInteger Multiply(BigInteger bi, int i)
  RandomNumberGenerator get_Rng()
  BigInteger GenerateRandom(int bits, RandomNumberGenerator rng)
  BigInteger GenerateRandom(int bits)
  void Randomize(RandomNumberGenerator rng)
  void Randomize()
  int BitCount()
  bool TestBit(UInt32 bitNum)
  bool TestBit(int bitNum)
  void SetBit(UInt32 bitNum)
  void ClearBit(UInt32 bitNum)
  void SetBit(UInt32 bitNum, bool value)
  int LowestSetBit()
  Byte[] GetBytes()
  bool op_Equality(BigInteger bi1, UInt32 ui)
  bool op_Inequality(BigInteger bi1, UInt32 ui)
  bool op_Equality(BigInteger bi1, BigInteger bi2)
  bool op_Inequality(BigInteger bi1, BigInteger bi2)
  bool op_GreaterThan(BigInteger bi1, BigInteger bi2)
  bool op_LessThan(BigInteger bi1, BigInteger bi2)
  bool op_GreaterThanOrEqual(BigInteger bi1, BigInteger bi2)
  bool op_LessThanOrEqual(BigInteger bi1, BigInteger bi2)
  Sign Compare(BigInteger bi)
  string ToString(UInt32 radix)
  string ToString(UInt32 radix, string characterSet)
  void Normalize()
  void Clear()
  int GetHashCode()
  string ToString()
  bool Equals(object o)
  BigInteger GCD(BigInteger bi)
  BigInteger ModInverse(BigInteger modulus)
  BigInteger ModPow(BigInteger exp, BigInteger n)
  bool IsProbablePrime()
  BigInteger NextHighestPrime(BigInteger bi)
  BigInteger GeneratePseudoPrime(int bits)
  void Incr2()
  void .cctor()
--------------------------------------------------
Класс: Mono.Math.Prime.ConfidenceFactor
Наследуется от: Enum
Поля:
  int value__
  ConfidenceFactor ExtraLow
  ConfidenceFactor Low
  ConfidenceFactor Medium
  ConfidenceFactor High
  ConfidenceFactor ExtraHigh
  ConfidenceFactor Provable
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Math.Prime.PrimalityTest
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(BigInteger bi, ConfidenceFactor confidence)
  IAsyncResult BeginInvoke(BigInteger bi, ConfidenceFactor confidence, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Math.Prime.PrimalityTests
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  int GetSPPRounds(BigInteger bi, ConfidenceFactor confidence)
  bool Test(BigInteger n, ConfidenceFactor confidence)
  bool RabinMillerTest(BigInteger n, ConfidenceFactor confidence)
  bool SmallPrimeSppTest(BigInteger bi, ConfidenceFactor confidence)
--------------------------------------------------
Класс: Mono.Math.Prime.Generator.NextPrimeFinder
Наследуется от: SequentialSearchPrimeGeneratorBase
Поля:
Свойства:
Методы:
  BigInteger GenerateSearchBase(int bits, object Context)
  void .ctor()
--------------------------------------------------
Класс: Mono.Math.Prime.Generator.PrimeGeneratorBase
Наследуется от: object
Поля:
Свойства:
  ConfidenceFactor Confidence
  PrimalityTest PrimalityTest
  int TrialDivisionBounds
Методы:
  ConfidenceFactor get_Confidence()
  PrimalityTest get_PrimalityTest()
  int get_TrialDivisionBounds()
  bool PostTrialDivisionTests(BigInteger bi)
  BigInteger GenerateNewPrime(int bits)
  void .ctor()
--------------------------------------------------
Класс: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
Наследуется от: PrimeGeneratorBase
Поля:
Свойства:
Методы:
  BigInteger GenerateSearchBase(int bits, object context)
  BigInteger GenerateNewPrime(int bits)
  BigInteger GenerateNewPrime(int bits, object context)
  bool IsPrimeAcceptable(BigInteger bi, object context)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.Win32.Registry
Наследуется от: object
Поля:
  RegistryKey CurrentUser
  RegistryKey LocalMachine
  RegistryKey ClassesRoot
  RegistryKey Users
  RegistryKey PerformanceData
  RegistryKey CurrentConfig
  RegistryKey DynData
Свойства:
Методы:
  object GetValue(string keyName, string valueName, object defaultValue)
  void SetValue(string keyName, string valueName, object value)
  void SetValue(string keyName, string valueName, object value, RegistryValueKind valueKind)
  RegistryKey GetBaseKeyFromKeyName(string keyName, String& subKeyName)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.Win32.RegistryHive
Наследуется от: Enum
Поля:
  int value__
  RegistryHive ClassesRoot
  RegistryHive CurrentUser
  RegistryHive LocalMachine
  RegistryHive Users
  RegistryHive PerformanceData
  RegistryHive CurrentConfig
  RegistryHive DynData
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.RegistryKey
Наследуется от: MarshalByRefObject
Поля:
  IntPtr HKEY_CLASSES_ROOT
  IntPtr HKEY_CURRENT_USER
  IntPtr HKEY_LOCAL_MACHINE
  IntPtr HKEY_USERS
  IntPtr HKEY_PERFORMANCE_DATA
  IntPtr HKEY_CURRENT_CONFIG
  IntPtr HKEY_DYN_DATA
  String[] s_hkeyNames
  int MaxKeyLength
  int MaxValueLength
  SafeRegistryHandle modreq(System.Runtime.CompilerServices.IsVolatile) _hkey
  String modreq(System.Runtime.CompilerServices.IsVolatile) _keyName
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _remoteKey
  StateFlags modreq(System.Runtime.CompilerServices.IsVolatile) _state
  RegistryKeyPermissionCheck modreq(System.Runtime.CompilerServices.IsVolatile) _checkMode
  RegistryView modreq(System.Runtime.CompilerServices.IsVolatile) _regView
Свойства:
  SafeRegistryHandle SystemKeyHandle
  int SubKeyCount
  RegistryView View
  SafeRegistryHandle Handle
  int ValueCount
  string Name
Методы:
  void ClosePerfDataKey()
  void FlushCore()
  RegistryKey CreateSubKeyInternalCore(string subkey, RegistryKeyPermissionCheck permissionCheck, object registrySecurityObj, RegistryOptions registryOptions)
  void DeleteSubKeyCore(string subkey, bool throwOnMissingSubKey)
  void DeleteSubKeyTreeCore(string subkey)
  void DeleteValueCore(string name, bool throwOnMissingValue)
  RegistryKey OpenBaseKeyCore(RegistryHive hKeyHive, RegistryView view)
  RegistryKey OpenRemoteBaseKeyCore(RegistryHive hKey, string machineName, RegistryView view)
  RegistryKey InternalOpenSubKeyCore(string name, RegistryKeyPermissionCheck permissionCheck, int rights, bool throwOnPermissionFailure)
  RegistryKey InternalOpenSubKeyCore(string name, bool writable, bool throwOnPermissionFailure)
  RegistryKey InternalOpenSubKeyWithoutSecurityChecksCore(string name, bool writable)
  SafeRegistryHandle get_SystemKeyHandle()
  int InternalSubKeyCountCore()
  String[] InternalGetSubKeyNamesCore(int subkeys)
  int InternalValueCountCore()
  String[] GetValueNamesCore(int values)
  object InternalGetValueCore(string name, object defaultValue, bool doNotExpand)
  RegistryValueKind GetValueKindCore(string name)
  void SetValueCore(string name, object value, RegistryValueKind valueKind)
  void Win32Error(int errorCode, string str)
  void Win32ErrorStatic(int errorCode, string str)
  int GetRegistryKeyAccess(bool isWritable)
  int GetRegistryKeyAccess(RegistryKeyPermissionCheck mode)
  void .ctor(SafeRegistryHandle hkey, bool writable, RegistryView view)
  void .ctor(SafeRegistryHandle hkey, bool writable, bool systemkey, bool remoteKey, bool isPerfData, RegistryView view)
  void Flush()
  void Close()
  void Dispose()
  RegistryKey CreateSubKey(string subkey)
  RegistryKey CreateSubKey(string subkey, bool writable)
  RegistryKey CreateSubKey(string subkey, bool writable, RegistryOptions options)
  RegistryKey CreateSubKey(string subkey, RegistryKeyPermissionCheck permissionCheck)
  RegistryKey CreateSubKey(string subkey, RegistryKeyPermissionCheck permissionCheck, RegistryOptions registryOptions)
  RegistryKey CreateSubKey(string subkey, RegistryKeyPermissionCheck permissionCheck, RegistryOptions registryOptions, RegistrySecurity registrySecurity)
  RegistryKey CreateSubKey(string subkey, RegistryKeyPermissionCheck permissionCheck, RegistrySecurity registrySecurity)
  RegistryKey CreateSubKeyInternal(string subkey, RegistryKeyPermissionCheck permissionCheck, object registrySecurityObj, RegistryOptions registryOptions)
  void DeleteSubKey(string subkey)
  void DeleteSubKey(string subkey, bool throwOnMissingSubKey)
  void DeleteSubKeyTree(string subkey)
  void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey)
  void DeleteSubKeyTreeInternal(string subkey)
  void DeleteValue(string name)
  void DeleteValue(string name, bool throwOnMissingValue)
  RegistryKey OpenBaseKey(RegistryHive hKey, RegistryView view)
  RegistryKey OpenRemoteBaseKey(RegistryHive hKey, string machineName)
  RegistryKey OpenRemoteBaseKey(RegistryHive hKey, string machineName, RegistryView view)
  RegistryKey OpenSubKey(string name)
  RegistryKey OpenSubKey(string name, bool writable)
  RegistryKey OpenSubKey(string name, RegistryKeyPermissionCheck permissionCheck)
  RegistryKey OpenSubKey(string name, RegistryRights rights)
  RegistryKey OpenSubKey(string name, RegistryKeyPermissionCheck permissionCheck, RegistryRights rights)
  RegistryKey InternalOpenSubKey(string name, RegistryKeyPermissionCheck permissionCheck, int rights)
  RegistryKey InternalOpenSubKeyWithoutSecurityChecks(string name, bool writable)
  RegistrySecurity GetAccessControl()
  RegistrySecurity GetAccessControl(AccessControlSections includeSections)
  void SetAccessControl(RegistrySecurity registrySecurity)
  int get_SubKeyCount()
  RegistryView get_View()
  SafeRegistryHandle get_Handle()
  RegistryKey FromHandle(SafeRegistryHandle handle)
  RegistryKey FromHandle(SafeRegistryHandle handle, RegistryView view)
  int InternalSubKeyCount()
  String[] GetSubKeyNames()
  String[] InternalGetSubKeyNames()
  int get_ValueCount()
  int InternalValueCount()
  String[] GetValueNames()
  object GetValue(string name)
  object GetValue(string name, object defaultValue)
  object GetValue(string name, object defaultValue, RegistryValueOptions options)
  object InternalGetValue(string name, object defaultValue, bool doNotExpand, bool checkSecurity)
  RegistryValueKind GetValueKind(string name)
  string get_Name()
  void SetValue(string name, object value)
  void SetValue(string name, object value, RegistryValueKind valueKind)
  RegistryValueKind CalculateValueKind(object value)
  string ToString()
  string FixupName(string name)
  void FixupPath(StringBuilder path)
  void EnsureNotDisposed()
  void EnsureWriteable()
  RegistryKeyPermissionCheck GetSubKeyPermissionCheck(bool subkeyWritable)
  void ValidateKeyName(string name)
  void ValidateKeyMode(RegistryKeyPermissionCheck mode)
  void ValidateKeyOptions(RegistryOptions options)
  void ValidateKeyView(RegistryView view)
  void ValidateKeyRights(int rights)
  bool IsDirty()
  bool IsSystemKey()
  bool IsWritable()
  bool IsPerfDataKey()
  void SetDirty()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: Microsoft.Win32.RegistryKeyPermissionCheck
Наследуется от: Enum
Поля:
  int value__
  RegistryKeyPermissionCheck Default
  RegistryKeyPermissionCheck ReadSubTree
  RegistryKeyPermissionCheck ReadWriteSubTree
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.RegistryOptions
Наследуется от: Enum
Поля:
  int value__
  RegistryOptions None
  RegistryOptions Volatile
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.RegistryValueKind
Наследуется от: Enum
Поля:
  int value__
  RegistryValueKind String
  RegistryValueKind ExpandString
  RegistryValueKind Binary
  RegistryValueKind DWord
  RegistryValueKind MultiString
  RegistryValueKind QWord
  RegistryValueKind Unknown
  RegistryValueKind None
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.RegistryValueOptions
Наследуется от: Enum
Поля:
  int value__
  RegistryValueOptions None
  RegistryValueOptions DoNotExpandEnvironmentNames
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.RegistryView
Наследуется от: Enum
Поля:
  int value__
  RegistryView Default
  RegistryView Registry64
  RegistryView Registry32
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.ThrowHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void ThrowArgumentException(string msg)
  void ThrowArgumentException(string msg, string argument)
  void ThrowArgumentNullException(string argument)
  void ThrowInvalidOperationException(string msg)
  void ThrowSecurityException(string msg)
  void ThrowUnauthorizedAccessException(string msg)
  void ThrowObjectDisposedException(string objectName, string msg)
--------------------------------------------------
Класс: Microsoft.Win32.NativeMethods
Наследуется от: object
Поля:
Свойства:
Методы:
  int GetCurrentProcessId()
--------------------------------------------------
Класс: Microsoft.Win32.Win32Native
Наследуется от: object
Поля:
  string ADVAPI32
  int ERROR_SUCCESS
  int ERROR_INVALID_FUNCTION
  int ERROR_FILE_NOT_FOUND
  int ERROR_PATH_NOT_FOUND
  int ERROR_ACCESS_DENIED
  int ERROR_INVALID_HANDLE
  int ERROR_NOT_ENOUGH_MEMORY
  int ERROR_INVALID_DATA
  int ERROR_INVALID_DRIVE
  int ERROR_NO_MORE_FILES
  int ERROR_NOT_READY
  int ERROR_BAD_LENGTH
  int ERROR_SHARING_VIOLATION
  int ERROR_NOT_SUPPORTED
  int ERROR_FILE_EXISTS
  int ERROR_INVALID_PARAMETER
  int ERROR_BROKEN_PIPE
  int ERROR_CALL_NOT_IMPLEMENTED
  int ERROR_INSUFFICIENT_BUFFER
  int ERROR_INVALID_NAME
  int ERROR_BAD_PATHNAME
  int ERROR_ALREADY_EXISTS
  int ERROR_ENVVAR_NOT_FOUND
  int ERROR_FILENAME_EXCED_RANGE
  int ERROR_NO_DATA
  int ERROR_PIPE_NOT_CONNECTED
  int ERROR_MORE_DATA
  int ERROR_DIRECTORY
  int ERROR_OPERATION_ABORTED
  int ERROR_NOT_FOUND
  int ERROR_NO_TOKEN
  int ERROR_DLL_INIT_FAILED
  int ERROR_NON_ACCOUNT_SID
  int ERROR_NOT_ALL_ASSIGNED
  int ERROR_UNKNOWN_REVISION
  int ERROR_INVALID_OWNER
  int ERROR_INVALID_PRIMARY_GROUP
  int ERROR_NO_SUCH_PRIVILEGE
  int ERROR_PRIVILEGE_NOT_HELD
  int ERROR_NONE_MAPPED
  int ERROR_INVALID_ACL
  int ERROR_INVALID_SID
  int ERROR_INVALID_SECURITY_DESCR
  int ERROR_BAD_IMPERSONATION_LEVEL
  int ERROR_CANT_OPEN_ANONYMOUS
  int ERROR_NO_SECURITY_ON_OBJECT
  int ERROR_TRUSTED_RELATIONSHIP_FAILURE
  FileAttributes FILE_ATTRIBUTE_DIRECTORY
Свойства:
Методы:
  string GetMessage(int hr)
  int MakeHRFromErrorCode(int errorCode)
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeHandleCache`1
Наследуется от: object
Поля:
  T s_invalidHandle
Свойства:
Методы:
  T GetInvalidHandle(Func`1<T> invalidHandleFactory)
  bool IsCachedInvalidHandle(SafeHandle handle)
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeLibraryHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(bool ownsHandle)
  bool ReleaseHandle()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeRegistryHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  bool ReleaseHandle()
  void .ctor()
  void .ctor(IntPtr preexistingHandle, bool ownsHandle)
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafePasswordHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
  SafePasswordHandle InvalidHandle
Методы:
  IntPtr CreateHandle(string password)
  IntPtr CreateHandle(SecureString password)
  void FreeHandle()
  void .ctor(string password)
  void .ctor(SecureString password)
  bool ReleaseHandle()
  void Dispose(bool disposing)
  bool get_IsInvalid()
  SafePasswordHandle get_InvalidHandle()
  string Mono_DangerousGetString()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeThreadPoolIOHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .cctor()
  void .ctor()
  bool get_IsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeFileHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(IntPtr preexistingHandle, bool ownsHandle)
  bool ReleaseHandle()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeFindHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(IntPtr preexistingHandle)
  bool ReleaseHandle()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeWaitHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(IntPtr existingHandle, bool ownsHandle)
  bool ReleaseHandle()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor(bool ownsHandle)
  bool get_IsInvalid()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid
Наследуется от: SafeHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor(bool ownsHandle)
  bool get_IsInvalid()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid
Наследуется от: CriticalHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool get_IsInvalid()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid
Наследуется от: CriticalHandle
Поля:
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool get_IsInvalid()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
Наследуется от: SafeHandle
Поля:
Свойства:
  SafeAccessTokenHandle InvalidHandle
  bool IsInvalid
Методы:
  void .ctor()
  void .ctor(IntPtr handle)
  SafeAccessTokenHandle get_InvalidHandle()
  bool get_IsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: Internal.Threading.Tasks.Tracing.TaskTrace
Наследуется от: object
Поля:
  TaskTraceCallbacks s_callbacks
Свойства:
  bool Enabled
Методы:
  bool get_Enabled()
  void Initialize(TaskTraceCallbacks callbacks)
  void TaskWaitBegin_Asynchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskWaitBegin_Synchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskWaitEnd(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskScheduled(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID, int CreatingTaskID, int TaskCreationOptions)
  void TaskStarted(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskCompleted(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID, bool IsExceptional)
--------------------------------------------------
Класс: Internal.Runtime.CompilerServices.RelocatedTypeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(string originalAssemblySimpleName)
--------------------------------------------------
Класс: Internal.Runtime.Augments.CausalityRelation
Наследуется от: Enum
Поля:
  int value__
  CausalityRelation AssignDelegate
  CausalityRelation Join
  CausalityRelation Choice
  CausalityRelation Cancel
  CausalityRelation Error
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Runtime.Augments.CausalitySource
Наследуется от: Enum
Поля:
  int value__
  CausalitySource Application
  CausalitySource Library
  CausalitySource System
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Runtime.Augments.CausalityTraceLevel
Наследуется от: Enum
Поля:
  int value__
  CausalityTraceLevel Required
  CausalityTraceLevel Important
  CausalityTraceLevel Verbose
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Runtime.Augments.AsyncStatus
Наследуется от: Enum
Поля:
  int value__
  AsyncStatus Started
  AsyncStatus Completed
  AsyncStatus Canceled
  AsyncStatus Error
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Runtime.Augments.CausalitySynchronousWork
Наследуется от: Enum
Поля:
  int value__
  CausalitySynchronousWork CompletionNotification
  CausalitySynchronousWork ProgressNotification
  CausalitySynchronousWork Execution
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Runtime.Augments.TaskTraceCallbacks
Наследуется от: object
Поля:
Свойства:
  bool Enabled
Методы:
  bool get_Enabled()
  void TaskWaitBegin_Asynchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskWaitBegin_Synchronous(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskWaitEnd(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskScheduled(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID, int CreatingTaskID, int TaskCreationOptions)
  void TaskStarted(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID)
  void TaskCompleted(int OriginatingTaskSchedulerID, int OriginatingTaskID, int TaskID, bool IsExceptional)
  void .ctor()
--------------------------------------------------
Класс: Internal.Runtime.Augments.EnvironmentAugments
Наследуется от: object
Поля:
  string StackTrace
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Internal.Runtime.Augments.RuntimeAugments
Наследуется от: object
Поля:
  ReflectionExecutionDomainCallbacks s_reflectionExecutionDomainCallbacks
Свойства:
  ReflectionExecutionDomainCallbacks Callbacks
Методы:
  void ReportUnhandledException(Exception exception)
  ReflectionExecutionDomainCallbacks get_Callbacks()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Internal.Runtime.Augments.ReflectionExecutionDomainCallbacks
Наследуется от: object
Поля:
Свойства:
Методы:
  Exception CreateMissingMetadataException(Type attributeType)
  void .ctor()
--------------------------------------------------
Класс: Internal.Runtime.Augments.RuntimeThread
Наследуется от: object
Поля:
  int OptimalMaxSpinWaitsPerSpinIteration
  Thread thread
Свойства:
  bool IsBackground
Методы:
  void .ctor(Thread t)
  void ResetThreadPoolThread()
  RuntimeThread InitializeThreadPoolThread()
  RuntimeThread Create(ParameterizedThreadStart start, int maxStackSize)
  bool get_IsBackground()
  void set_IsBackground(bool value)
  void Start()
  void Start(object state)
  void Sleep(int millisecondsTimeout)
  bool Yield()
  bool SpinWait(int iterations)
  int GetCurrentProcessorId()
  void .cctor()
--------------------------------------------------
Класс: Internal.Cryptography.Helpers
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte[] CloneByteArray(Byte[] src)
  KeySizes[] CloneKeySizesArray(KeySizes[] src)
  bool UsesIv(CipherMode cipherMode)
  Byte[] GetCipherIv(CipherMode cipherMode, Byte[] iv)
  bool IsLegalSize(int size, KeySizes[] legalSizes)
  Byte[] GenerateRandom(int count)
  void WriteInt(UInt32 i, Byte[] arr, int offset)
  Byte[] FixupKeyParity(Byte[] key)
  void ConvertIntToByteArray(UInt32 value, Byte[] dest)
  Char[] ToHexArrayUpper(Byte[] bytes)
  string ToHexStringUpper(Byte[] bytes)
  Byte[] DecodeHexString(string s)
  byte HexToByte(char val)
  char NibbleToHex(byte b)
  bool ContentsEqual(Byte[] a1, Byte[] a2)
  void AddRange(ICollection`1<T> coll, IEnumerable`1<T> newData)
  bool IsValidDay(Calendar calendar, int year, int month, int day, int era)
  bool IsValidMonth(Calendar calendar, int year, int month, int era)
  bool IsValidYear(Calendar calendar, int year, int era)
  void DisposeAll(IEnumerable`1<IDisposable> disposables)
--------------------------------------------------
Класс: Internal.Cryptography.ErrorCode
Наследуется от: object
Поля:
  int CERT_E_CHAINING
  int CERT_E_CRITICAL
  int CERT_E_EXPIRED
  int CERT_E_INVALID_NAME
  int CERT_E_INVALID_POLICY
  int CERT_E_UNTRUSTEDROOT
  int CERT_E_VALIDITYPERIODNESTING
  int CERT_E_WRONG_USAGE
  int CERTSRV_E_WEAK_SIGNATURE_OR_KEY
  int CRYPT_E_NO_REVOCATION_CHECK
  int CRYPT_E_NOT_FOUND
  int CRYPT_E_REVOCATION_OFFLINE
  int CRYPT_E_REVOKED
  int CRYPT_E_SIGNER_NOT_FOUND
  int E_POINTER
  int ERROR_INVALID_PARAMETER
  int HRESULT_INVALID_HANDLE
  int NTE_BAD_PUBLIC_KEY
  int TRUST_E_BASIC_CONSTRAINTS
  int TRUST_E_CERT_SIGNATURE
  int TRUST_E_EXPLICIT_DISTRUST
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Cryptography.PinAndClear
Наследуется от: ValueType
Поля:
  Byte[] _data
  GCHandle _gcHandle
Свойства:
Методы:
  PinAndClear Track(Byte[] data)
  void Dispose()
--------------------------------------------------
Класс: Internal.IO.File
Наследуется от: object
Поля:
Свойства:
Методы:
  bool InternalExists(string fullPath)
  int FillAttributeInfo(string path, WIN32_FILE_ATTRIBUTE_DATA& data, bool returnErrorOnNotFound)
--------------------------------------------------
Класс: System.String
Наследуется от: object
Поля:
  int StackallocIntBufferSizeLimit
  int PROBABILISTICMAP_BLOCK_INDEX_MASK
  int PROBABILISTICMAP_BLOCK_INDEX_SHIFT
  int PROBABILISTICMAP_SIZE
  int _stringLength
  char _firstChar
  string Empty
Свойства:
  int Length
  char Chars
Методы:
  int CompareOrdinalIgnoreCaseHelper(string strA, string strB)
  bool EqualsHelper(string strA, string strB)
  int CompareOrdinalHelper(string strA, int indexA, int countA, string strB, int indexB, int countB)
  bool EqualsIgnoreCaseAsciiHelper(string strA, string strB)
  int CompareOrdinalHelper(string strA, string strB)
  int Compare(string strA, string strB)
  int Compare(string strA, string strB, bool ignoreCase)
  int Compare(string strA, string strB, StringComparison comparisonType)
  int Compare(string strA, string strB, CultureInfo culture, CompareOptions options)
  int Compare(string strA, string strB, bool ignoreCase, CultureInfo culture)
  int Compare(string strA, int indexA, string strB, int indexB, int length)
  int Compare(string strA, int indexA, string strB, int indexB, int length, bool ignoreCase)
  int Compare(string strA, int indexA, string strB, int indexB, int length, bool ignoreCase, CultureInfo culture)
  int Compare(string strA, int indexA, string strB, int indexB, int length, CultureInfo culture, CompareOptions options)
  int Compare(string strA, int indexA, string strB, int indexB, int length, StringComparison comparisonType)
  int CompareOrdinal(string strA, string strB)
  int CompareOrdinal(ReadOnlySpan`1<char> strA, ReadOnlySpan`1<char> strB)
  int CompareOrdinal(string strA, int indexA, string strB, int indexB, int length)
  int CompareTo(object value)
  int CompareTo(string strB)
  bool EndsWith(string value)
  bool EndsWith(string value, StringComparison comparisonType)
  bool EndsWith(string value, bool ignoreCase, CultureInfo culture)
  bool EndsWith(char value)
  bool Equals(object obj)
  bool Equals(string value)
  bool Equals(string value, StringComparison comparisonType)
  bool Equals(string a, string b)
  bool Equals(string a, string b, StringComparison comparisonType)
  bool op_Equality(string a, string b)
  bool op_Inequality(string a, string b)
  int GetHashCode()
  int GetHashCode(StringComparison comparisonType)
  int GetLegacyNonRandomizedHashCode()
  bool StartsWith(string value)
  bool StartsWith(string value, StringComparison comparisonType)
  bool StartsWith(string value, bool ignoreCase, CultureInfo culture)
  bool StartsWith(char value)
  void CheckStringComparison(StringComparison comparisonType)
  void .ctor(Char[] value)
  string Ctor(Char[] value)
  void .ctor(Char[] value, int startIndex, int length)
  string Ctor(Char[] value, int startIndex, int length)
  void .ctor(Char* value)
  string Ctor(Char* ptr)
  void .ctor(Char* value, int startIndex, int length)
  string Ctor(Char* ptr, int startIndex, int length)
  void .ctor(SByte* value)
  string Ctor(SByte* value)
  void .ctor(SByte* value, int startIndex, int length)
  string Ctor(SByte* value, int startIndex, int length)
  string CreateStringForSByteConstructor(Byte* pb, int numBytes)
  void .ctor(SByte* value, int startIndex, int length, Encoding enc)
  string Ctor(SByte* value, int startIndex, int length, Encoding enc)
  void .ctor(char c, int count)
  string Ctor(char c, int count)
  void .ctor(ReadOnlySpan`1<char> value)
  string Ctor(ReadOnlySpan`1<char> value)
  string Create(int length, TState state, SpanAction`2<char, TState> action)
  ReadOnlySpan`1<char> op_Implicit(string value)
  object Clone()
  string Copy(string str)
  void CopyTo(int sourceIndex, Char[] destination, int destinationIndex, int count)
  Char[] ToCharArray()
  Char[] ToCharArray(int startIndex, int length)
  bool IsNullOrEmpty(string value)
  bool IsNullOrWhiteSpace(string value)
  Char& GetRawStringData()
  string CreateStringFromEncoding(Byte* bytes, int byteLength, Encoding encoding)
  string CreateFromChar(char c)
  void wstrcpy(Char* dmem, Char* smem, int charCount)
  string ToString()
  string ToString(IFormatProvider provider)
  CharEnumerator GetEnumerator()
  IEnumerator`1<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int wcslen(Char* ptr)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  bool IsNormalized()
  bool IsNormalized(NormalizationForm normalizationForm)
  string Normalize()
  string Normalize(NormalizationForm normalizationForm)
  void FillStringChecked(string dest, int destPos, string src)
  string Concat(object arg0)
  string Concat(object arg0, object arg1)
  string Concat(object arg0, object arg1, object arg2)
  string Concat(Object[] args)
  string Concat(IEnumerable`1<T> values)
  string Concat(IEnumerable`1<string> values)
  string Concat(string str0, string str1)
  string Concat(string str0, string str1, string str2)
  string Concat(string str0, string str1, string str2, string str3)
  string Concat(String[] values)
  string Format(string format, object arg0)
  string Format(string format, object arg0, object arg1)
  string Format(string format, object arg0, object arg1, object arg2)
  string Format(string format, Object[] args)
  string Format(IFormatProvider provider, string format, object arg0)
  string Format(IFormatProvider provider, string format, object arg0, object arg1)
  string Format(IFormatProvider provider, string format, object arg0, object arg1, object arg2)
  string Format(IFormatProvider provider, string format, Object[] args)
  string FormatHelper(IFormatProvider provider, string format, ParamsArray args)
  string Insert(int startIndex, string value)
  string Join(char separator, String[] value)
  string Join(char separator, Object[] values)
  string Join(char separator, IEnumerable`1<T> values)
  string Join(char separator, String[] value, int startIndex, int count)
  string Join(string separator, String[] value)
  string Join(string separator, Object[] values)
  string Join(string separator, IEnumerable`1<T> values)
  string Join(string separator, IEnumerable`1<string> values)
  string Join(string separator, String[] value, int startIndex, int count)
  string JoinCore(Char* separator, int separatorLength, Object[] values)
  string JoinCore(Char* separator, int separatorLength, IEnumerable`1<T> values)
  string JoinCore(Char* separator, int separatorLength, String[] value, int startIndex, int count)
  string PadLeft(int totalWidth)
  string PadLeft(int totalWidth, char paddingChar)
  string PadRight(int totalWidth)
  string PadRight(int totalWidth, char paddingChar)
  string Remove(int startIndex, int count)
  string Remove(int startIndex)
  string Replace(string oldValue, string newValue, bool ignoreCase, CultureInfo culture)
  string Replace(string oldValue, string newValue, StringComparison comparisonType)
  string ReplaceCore(string oldValue, string newValue, CultureInfo culture, CompareOptions options)
  string Replace(char oldChar, char newChar)
  string Replace(string oldValue, string newValue)
  string ReplaceHelper(int oldValueLength, string newValue, ReadOnlySpan`1<int> indices)
  String[] Split(char separator, StringSplitOptions options)
  String[] Split(char separator, int count, StringSplitOptions options)
  String[] Split(Char[] separator)
  String[] Split(Char[] separator, int count)
  String[] Split(Char[] separator, StringSplitOptions options)
  String[] Split(Char[] separator, int count, StringSplitOptions options)
  String[] SplitInternal(ReadOnlySpan`1<char> separators, int count, StringSplitOptions options)
  String[] Split(string separator, StringSplitOptions options)
  String[] Split(string separator, int count, StringSplitOptions options)
  String[] Split(String[] separator, StringSplitOptions options)
  String[] Split(String[] separator, int count, StringSplitOptions options)
  String[] SplitInternal(string separator, String[] separators, int count, StringSplitOptions options)
  String[] SplitInternal(string separator, int count, StringSplitOptions options)
  String[] SplitKeepEmptyEntries(ReadOnlySpan`1<int> sepList, ReadOnlySpan`1<int> lengthList, int defaultLength, int count)
  String[] SplitOmitEmptyEntries(ReadOnlySpan`1<int> sepList, ReadOnlySpan`1<int> lengthList, int defaultLength, int count)
  void MakeSeparatorList(ReadOnlySpan`1<char> separators, ValueListBuilder`1& sepListBuilder)
  void MakeSeparatorList(string separator, ValueListBuilder`1& sepListBuilder)
  void MakeSeparatorList(String[] separators, ValueListBuilder`1& sepListBuilder, ValueListBuilder`1& lengthListBuilder)
  string Substring(int startIndex)
  string Substring(int startIndex, int length)
  string InternalSubString(int startIndex, int length)
  string ToLower()
  string ToLower(CultureInfo culture)
  string ToLowerInvariant()
  string ToUpper()
  string ToUpper(CultureInfo culture)
  string ToUpperInvariant()
  string Trim()
  string Trim(char trimChar)
  string Trim(Char[] trimChars)
  string TrimStart()
  string TrimStart(char trimChar)
  string TrimStart(Char[] trimChars)
  string TrimEnd()
  string TrimEnd(char trimChar)
  string TrimEnd(Char[] trimChars)
  string TrimWhiteSpaceHelper(TrimType trimType)
  string TrimHelper(Char* trimChars, int trimCharsLength, TrimType trimType)
  string CreateTrimmedString(int start, int end)
  bool Contains(string value)
  bool Contains(string value, StringComparison comparisonType)
  bool Contains(char value)
  bool Contains(char value, StringComparison comparisonType)
  int IndexOf(char value)
  int IndexOf(char value, int startIndex)
  int IndexOf(char value, StringComparison comparisonType)
  int IndexOf(char value, int startIndex, int count)
  int IndexOfAny(Char[] anyOf)
  int IndexOfAny(Char[] anyOf, int startIndex)
  int IndexOfAny(Char[] anyOf, int startIndex, int count)
  int IndexOfAny(char value1, char value2, int startIndex, int count)
  int IndexOfAny(char value1, char value2, char value3, int startIndex, int count)
  int IndexOfCharArray(Char[] anyOf, int startIndex, int count)
  void InitializeProbabilisticMap(UInt32* charMap, ReadOnlySpan`1<char> anyOf)
  bool ArrayContains(char searchChar, Char[] anyOf)
  bool IsCharBitSet(UInt32* charMap, byte value)
  void SetCharBit(UInt32* charMap, byte value)
  int IndexOf(string value)
  int IndexOf(string value, int startIndex)
  int IndexOf(string value, int startIndex, int count)
  int IndexOf(string value, StringComparison comparisonType)
  int IndexOf(string value, int startIndex, StringComparison comparisonType)
  int IndexOf(string value, int startIndex, int count, StringComparison comparisonType)
  int LastIndexOf(char value)
  int LastIndexOf(char value, int startIndex)
  int LastIndexOf(char value, int startIndex, int count)
  int LastIndexOfAny(Char[] anyOf)
  int LastIndexOfAny(Char[] anyOf, int startIndex)
  int LastIndexOfAny(Char[] anyOf, int startIndex, int count)
  int LastIndexOfCharArray(Char[] anyOf, int startIndex, int count)
  int LastIndexOf(string value)
  int LastIndexOf(string value, int startIndex)
  int LastIndexOf(string value, int startIndex, int count)
  int LastIndexOf(string value, StringComparison comparisonType)
  int LastIndexOf(string value, int startIndex, StringComparison comparisonType)
  int LastIndexOf(string value, int startIndex, int count, StringComparison comparisonType)
  int get_Length()
  int IndexOfUnchecked(string value, int startIndex, int count)
  string Concat(object arg0, object arg1, object arg2, object arg3)
  int IndexOfUncheckedIgnoreCase(string value, int startIndex, int count)
  int LastIndexOfUnchecked(string value, int startIndex, int count)
  int LastIndexOfUncheckedIgnoreCase(string value, int startIndex, int count)
  bool StartsWithOrdinalUnchecked(string value)
  string FastAllocateString(int length)
  string InternalIsInterned(string str)
  string InternalIntern(string str)
  int FastCompareStringHelper(UInt32* strAChars, int countA, UInt32* strBChars, int countB)
  void memset(Byte* dest, int val, int len)
  void memcpy(Byte* dest, Byte* src, int size)
  void bzero(Byte* dest, int len)
  void bzero_aligned_1(Byte* dest, int len)
  void bzero_aligned_2(Byte* dest, int len)
  void bzero_aligned_4(Byte* dest, int len)
  void bzero_aligned_8(Byte* dest, int len)
  void memcpy_aligned_1(Byte* dest, Byte* src, int size)
  void memcpy_aligned_2(Byte* dest, Byte* src, int size)
  void memcpy_aligned_4(Byte* dest, Byte* src, int size)
  void memcpy_aligned_8(Byte* dest, Byte* src, int size)
  string CreateString(SByte* value)
  string CreateString(SByte* value, int startIndex, int length)
  string CreateString(Char* value)
  string CreateString(Char* value, int startIndex, int length)
  string CreateString(Char[] val, int startIndex, int length)
  string CreateString(Char[] val)
  string CreateString(char c, int count)
  string CreateString(SByte* value, int startIndex, int length, Encoding enc)
  string CreateString(ReadOnlySpan`1<char> value)
  char get_Chars(int index)
  string Intern(string str)
  string IsInterned(string str)
  int LegacyStringGetHashCode()
--------------------------------------------------
Класс: System.TimeZoneInfo
Наследуется от: object
Поля:
  string TimeZonesRegistryHive
  string DisplayValue
  string DaylightValue
  string StandardValue
  string MuiDisplayValue
  string MuiDaylightValue
  string MuiStandardValue
  string TimeZoneInfoValue
  string FirstEntryValue
  string LastEntryValue
  int MaxKeyLength
  Lazy`1<bool> lazyHaveRegistry
  UInt32 TIME_ZONE_ID_INVALID
  UInt32 ERROR_NO_MORE_ITEMS
  string _id
  string _displayName
  string _standardDisplayName
  string _daylightDisplayName
  TimeSpan _baseUtcOffset
  bool _supportsDaylightSavingTime
  AdjustmentRule[] _adjustmentRules
  string UtcId
  string LocalId
  TimeZoneInfo s_utcTimeZone
  CachedData s_cachedData
  DateTime s_maxDateOnly
  DateTime s_minDateOnly
  TimeSpan MaxOffset
  TimeSpan MinOffset
Свойства:
  bool HaveRegistry
  string Id
  string DisplayName
  string StandardName
  string DaylightName
  TimeSpan BaseUtcOffset
  bool SupportsDaylightSavingTime
  TimeZoneInfo Local
  TimeZoneInfo Utc
Методы:
  AdjustmentRule[] GetAdjustmentRules()
  void PopulateAllSystemTimeZones(CachedData cachedData)
  void PopulateAllSystemTimeZonesFromRegistry(CachedData cachedData)
  void .ctor(TIME_ZONE_INFORMATION& zone, bool dstDisabled)
  bool CheckDaylightSavingTimeNotSupported(TIME_ZONE_INFORMATION& timeZone)
  AdjustmentRule CreateAdjustmentRuleFromTimeZoneInformation(REG_TZI_FORMAT& timeZoneInformation, DateTime startDate, DateTime endDate, int defaultBaseUtcOffset)
  string FindIdFromTimeZoneInformation(TIME_ZONE_INFORMATION& timeZone, Boolean& dstDisabled)
  TimeZoneInfo GetLocalTimeZone(CachedData cachedData)
  TimeZoneInfo GetLocalTimeZoneFromWin32Data(TIME_ZONE_INFORMATION& timeZoneInformation, bool dstDisabled)
  TimeZoneInfo FindSystemTimeZoneById(string id)
  TimeSpan GetDateTimeNowUtcOffsetFromUtc(DateTime time, Boolean& isAmbiguousLocalDst)
  bool TransitionTimeFromTimeZoneInformation(REG_TZI_FORMAT& timeZoneInformation, TransitionTime& transitionTime, bool readStartDate)
  bool TryCreateAdjustmentRules(string id, REG_TZI_FORMAT& defaultTimeZoneInformation, AdjustmentRule[]& rules, Exception& e, int defaultBaseUtcOffset)
  bool TryGetTimeZoneEntryFromRegistry(RegistryKey key, string name, REG_TZI_FORMAT& dtzi)
  bool TryCompareStandardDate(TIME_ZONE_INFORMATION& timeZone, REG_TZI_FORMAT& registryTimeZoneInfo)
  bool TryCompareTimeZoneInformationToRegistry(TIME_ZONE_INFORMATION& timeZone, string id, Boolean& dstDisabled)
  string TryGetLocalizedNameByMuiNativeResource(string resource)
  string TryGetLocalizedNameByNativeResource(string filePath, int resource)
  void GetLocalizedNamesByRegistryKey(RegistryKey key, String& displayName, String& standardName, String& daylightName)
  TimeZoneInfoResult TryGetTimeZoneFromLocalMachine(string id, TimeZoneInfo& value, Exception& e)
  TimeZoneInfoResult TryGetTimeZoneFromLocalRegistry(string id, TimeZoneInfo& value, Exception& e)
  bool get_HaveRegistry()
  UInt32 EnumDynamicTimeZoneInformation(UInt32 dwIndex, DYNAMIC_TIME_ZONE_INFORMATION& lpTimeZoneInformation)
  UInt32 GetDynamicTimeZoneInformation(DYNAMIC_TIME_ZONE_INFORMATION& pTimeZoneInformation)
  UInt32 GetDynamicTimeZoneInformationEffectiveYears(DYNAMIC_TIME_ZONE_INFORMATION& lpTimeZoneInformation, UInt32& FirstYear, UInt32& LastYear)
  bool GetTimeZoneInformationForYear(ushort wYear, DYNAMIC_TIME_ZONE_INFORMATION& pdtzi, TIME_ZONE_INFORMATION& ptzi)
  AdjustmentRule CreateAdjustmentRuleFromTimeZoneInformation(DYNAMIC_TIME_ZONE_INFORMATION& timeZoneInformation, DateTime startDate, DateTime endDate, int defaultBaseUtcOffset)
  bool TransitionTimeFromTimeZoneInformation(DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation, TransitionTime& transitionTime, bool readStartDate)
  TimeZoneInfo TryCreateTimeZone(DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation)
  TimeZoneInfo GetLocalTimeZoneInfoWinRTFallback()
  TimeZoneInfo FindSystemTimeZoneByIdWinRTFallback(string id)
  void GetSystemTimeZonesWinRTFallback(CachedData cachedData)
  string get_Id()
  string get_DisplayName()
  string get_StandardName()
  string get_DaylightName()
  TimeSpan get_BaseUtcOffset()
  bool get_SupportsDaylightSavingTime()
  TimeSpan[] GetAmbiguousTimeOffsets(DateTimeOffset dateTimeOffset)
  TimeSpan[] GetAmbiguousTimeOffsets(DateTime dateTime)
  AdjustmentRule GetAdjustmentRuleForAmbiguousOffsets(DateTime adjustedTime, Nullable`1& ruleIndex)
  AdjustmentRule GetPreviousAdjustmentRule(AdjustmentRule rule, Nullable`1<int> ruleIndex)
  TimeSpan GetUtcOffset(DateTimeOffset dateTimeOffset)
  TimeSpan GetUtcOffset(DateTime dateTime)
  TimeSpan GetLocalUtcOffset(DateTime dateTime, TimeZoneInfoOptions flags)
  TimeSpan GetUtcOffset(DateTime dateTime, TimeZoneInfoOptions flags)
  TimeSpan GetUtcOffset(DateTime dateTime, TimeZoneInfoOptions flags, CachedData cachedData)
  bool IsAmbiguousTime(DateTimeOffset dateTimeOffset)
  bool IsAmbiguousTime(DateTime dateTime)
  bool IsAmbiguousTime(DateTime dateTime, TimeZoneInfoOptions flags)
  bool IsDaylightSavingTime(DateTimeOffset dateTimeOffset)
  bool IsDaylightSavingTime(DateTime dateTime)
  bool IsDaylightSavingTime(DateTime dateTime, TimeZoneInfoOptions flags)
  bool IsDaylightSavingTime(DateTime dateTime, TimeZoneInfoOptions flags, CachedData cachedData)
  bool IsInvalidTime(DateTime dateTime)
  void ClearCachedData()
  DateTimeOffset ConvertTimeBySystemTimeZoneId(DateTimeOffset dateTimeOffset, string destinationTimeZoneId)
  DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, string destinationTimeZoneId)
  DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId)
  DateTimeOffset ConvertTime(DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone)
  DateTime ConvertTime(DateTime dateTime, TimeZoneInfo destinationTimeZone)
  DateTime ConvertTime(DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone)
  DateTime ConvertTime(DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone, TimeZoneInfoOptions flags)
  DateTime ConvertTime(DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone, TimeZoneInfoOptions flags, CachedData cachedData)
  DateTime ConvertTimeFromUtc(DateTime dateTime, TimeZoneInfo destinationTimeZone)
  DateTime ConvertTimeToUtc(DateTime dateTime)
  DateTime ConvertTimeToUtc(DateTime dateTime, TimeZoneInfoOptions flags)
  DateTime ConvertTimeToUtc(DateTime dateTime, TimeZoneInfo sourceTimeZone)
  bool Equals(TimeZoneInfo other)
  bool Equals(object obj)
  TimeZoneInfo FromSerializedString(string source)
  int GetHashCode()
  ReadOnlyCollection`1<TimeZoneInfo> GetSystemTimeZones()
  bool HasSameRules(TimeZoneInfo other)
  TimeZoneInfo get_Local()
  string ToSerializedString()
  string ToString()
  TimeZoneInfo get_Utc()
  void .ctor(string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime)
  TimeZoneInfo CreateCustomTimeZone(string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName)
  TimeZoneInfo CreateCustomTimeZone(string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, AdjustmentRule[] adjustmentRules)
  TimeZoneInfo CreateCustomTimeZone(string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor(SerializationInfo info, StreamingContext context)
  AdjustmentRule GetAdjustmentRuleForTime(DateTime dateTime, Nullable`1& ruleIndex)
  AdjustmentRule GetAdjustmentRuleForTime(DateTime dateTime, bool dateTimeisUtc, Nullable`1& ruleIndex)
  int CompareAdjustmentRuleToDateTime(AdjustmentRule rule, AdjustmentRule previousRule, DateTime dateTime, DateTime dateOnly, bool dateTimeisUtc)
  DateTime ConvertToUtc(DateTime dateTime, TimeSpan daylightDelta, TimeSpan baseUtcOffsetDelta)
  DateTime ConvertFromUtc(DateTime dateTime, TimeSpan daylightDelta, TimeSpan baseUtcOffsetDelta)
  DateTime ConvertToFromUtc(DateTime dateTime, TimeSpan daylightDelta, TimeSpan baseUtcOffsetDelta, bool convertToUtc)
  DateTime ConvertUtcToTimeZone(long ticks, TimeZoneInfo destinationTimeZone, Boolean& isAmbiguousLocalDst)
  DaylightTimeStruct GetDaylightTime(int year, AdjustmentRule rule, Nullable`1<int> ruleIndex)
  bool GetIsDaylightSavings(DateTime time, AdjustmentRule rule, DaylightTimeStruct daylightTime, TimeZoneInfoOptions flags)
  TimeSpan GetDaylightSavingsStartOffsetFromUtc(TimeSpan baseUtcOffset, AdjustmentRule rule, Nullable`1<int> ruleIndex)
  TimeSpan GetDaylightSavingsEndOffsetFromUtc(TimeSpan baseUtcOffset, AdjustmentRule rule)
  bool GetIsDaylightSavingsFromUtc(DateTime time, int year, TimeSpan utc, AdjustmentRule rule, Nullable`1<int> ruleIndex, Boolean& isAmbiguousLocalDst, TimeZoneInfo zone)
  bool CheckIsDst(DateTime startTime, DateTime time, DateTime endTime, bool ignoreYearAdjustment, AdjustmentRule rule)
  bool GetIsAmbiguousTime(DateTime time, AdjustmentRule rule, DaylightTimeStruct daylightTime)
  bool GetIsInvalidTime(DateTime time, AdjustmentRule rule, DaylightTimeStruct daylightTime)
  TimeSpan GetUtcOffset(DateTime time, TimeZoneInfo zone, TimeZoneInfoOptions flags)
  TimeSpan GetUtcOffsetFromUtc(DateTime time, TimeZoneInfo zone)
  TimeSpan GetUtcOffsetFromUtc(DateTime time, TimeZoneInfo zone, Boolean& isDaylightSavings)
  TimeSpan GetUtcOffsetFromUtc(DateTime time, TimeZoneInfo zone, Boolean& isDaylightSavings, Boolean& isAmbiguousLocalDst)
  DateTime TransitionTimeToDateTime(int year, TransitionTime transitionTime)
  TimeZoneInfoResult TryGetTimeZone(string id, bool dstDisabled, TimeZoneInfo& value, Exception& e, CachedData cachedData, bool alwaysFallbackToLocalMachine)
  TimeZoneInfoResult TryGetTimeZoneFromLocalMachine(string id, bool dstDisabled, TimeZoneInfo& value, Exception& e, CachedData cachedData)
  void ValidateTimeZoneInfo(string id, TimeSpan baseUtcOffset, AdjustmentRule[] adjustmentRules, Boolean& adjustmentRulesSupportDst)
  bool UtcOffsetOutOfRange(TimeSpan offset)
  TimeSpan GetUtcOffset(TimeSpan baseUtcOffset, AdjustmentRule adjustmentRule)
  bool IsValidAdjustmentRuleOffest(TimeSpan baseUtcOffset, AdjustmentRule adjustmentRule)
  void NormalizeAdjustmentRuleOffset(TimeSpan baseUtcOffset, AdjustmentRule& adjustmentRule)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.TimeZoneInfoOptions
Наследуется от: Enum
Поля:
  int value__
  TimeZoneInfoOptions None
  TimeZoneInfoOptions NoThrowOnInvalidTime
Свойства:
Методы:
--------------------------------------------------
Класс: System.AccessViolationException
Наследуется от: SystemException
Поля:
  IntPtr _ip
  IntPtr _target
  int _accessType
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Action
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T obj)
  IAsyncResult BeginInvoke(T obj, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`3
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2, T3 arg3)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`4
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`5
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`6
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`7
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Action`8
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T arg)
  IAsyncResult BeginInvoke(T arg, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`3
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`4
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2, T3 arg3)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`5
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`6
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`7
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`8
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Func`9
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TResult Invoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8)
  IAsyncResult BeginInvoke(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, AsyncCallback callback, object object)
  TResult EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Comparison`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  int Invoke(T x, T y)
  IAsyncResult BeginInvoke(T x, T y, AsyncCallback callback, object object)
  int EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Converter`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  TOutput Invoke(TInput input)
  IAsyncResult BeginInvoke(TInput input, AsyncCallback callback, object object)
  TOutput EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Predicate`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(T obj)
  IAsyncResult BeginInvoke(T obj, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.AggregateException
Наследуется от: Exception
Поля:
  ReadOnlyCollection`1<Exception> m_innerExceptions
Свойства:
  ReadOnlyCollection`1<Exception> InnerExceptions
  string Message
  int InnerExceptionCount
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(IEnumerable`1<Exception> innerExceptions)
  void .ctor(Exception[] innerExceptions)
  void .ctor(string message, IEnumerable`1<Exception> innerExceptions)
  void .ctor(string message, Exception[] innerExceptions)
  void .ctor(string message, IList`1<Exception> innerExceptions)
  void .ctor(IEnumerable`1<ExceptionDispatchInfo> innerExceptionInfos)
  void .ctor(string message, IEnumerable`1<ExceptionDispatchInfo> innerExceptionInfos)
  void .ctor(string message, IList`1<ExceptionDispatchInfo> innerExceptionInfos)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Exception GetBaseException()
  ReadOnlyCollection`1<Exception> get_InnerExceptions()
  void Handle(Func`2<Exception, bool> predicate)
  AggregateException Flatten()
  string get_Message()
  string ToString()
  int get_InnerExceptionCount()
--------------------------------------------------
Класс: System.ApplicationException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ArgumentException
Наследуется от: SystemException
Поля:
  string _paramName
Свойства:
  string Message
  string ParamName
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, string paramName, Exception innerException)
  void .ctor(string message, string paramName)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Message()
  string get_ParamName()
--------------------------------------------------
Класс: System.ArgumentNullException
Наследуется от: ArgumentException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string paramName)
  void .ctor(string message, Exception innerException)
  void .ctor(string paramName, string message)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ArgumentOutOfRangeException
Наследуется от: ArgumentException
Поля:
  object _actualValue
Свойства:
  string Message
  object ActualValue
Методы:
  void .ctor()
  void .ctor(string paramName)
  void .ctor(string paramName, string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string paramName, object actualValue, string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Message()
  object get_ActualValue()
--------------------------------------------------
Класс: System.ArithmeticException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ArraySegment`1
Наследуется от: ValueType
Поля:
  ArraySegment`1<T> <Empty>k__BackingField
  T[] _array
  int _offset
  int _count
Свойства:
  ArraySegment`1<T> Empty
  T[] Array
  int Offset
  int Count
  T Item
  T System.Collections.Generic.IList<T>.Item
  T System.Collections.Generic.IReadOnlyList<T>.Item
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
Методы:
  ArraySegment`1<T> get_Empty()
  void .ctor(T[] array)
  void .ctor(T[] array, int offset, int count)
  T[] get_Array()
  int get_Offset()
  int get_Count()
  T get_Item(int index)
  void set_Item(int index, T value)
  Enumerator<T> GetEnumerator()
  int GetHashCode()
  void CopyTo(T[] destination)
  void CopyTo(T[] destination, int destinationIndex)
  void CopyTo(ArraySegment`1<T> destination)
  bool Equals(object obj)
  bool Equals(ArraySegment`1<T> obj)
  ArraySegment`1<T> Slice(int index)
  ArraySegment`1<T> Slice(int index, int count)
  T[] ToArray()
  bool op_Equality(ArraySegment`1<T> a, ArraySegment`1<T> b)
  bool op_Inequality(ArraySegment`1<T> a, ArraySegment`1<T> b)
  ArraySegment`1<T> op_Implicit(T[] array)
  T System.Collections.Generic.IList<T>.get_Item(int index)
  void System.Collections.Generic.IList<T>.set_Item(int index, T value)
  int System.Collections.Generic.IList<T>.IndexOf(T item)
  void System.Collections.Generic.IList<T>.Insert(int index, T item)
  void System.Collections.Generic.IList<T>.RemoveAt(int index)
  T System.Collections.Generic.IReadOnlyList<T>.get_Item(int index)
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  void System.Collections.Generic.ICollection<T>.Add(T item)
  void System.Collections.Generic.ICollection<T>.Clear()
  bool System.Collections.Generic.ICollection<T>.Contains(T item)
  bool System.Collections.Generic.ICollection<T>.Remove(T item)
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void ThrowInvalidOperationIfDefault()
  void .cctor()
--------------------------------------------------
Класс: System.ArrayTypeMismatchException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.AssemblyLoadEventArgs
Наследуется от: EventArgs
Поля:
  Assembly <LoadedAssembly>k__BackingField
Свойства:
  Assembly LoadedAssembly
Методы:
  void .ctor(Assembly loadedAssembly)
  Assembly get_LoadedAssembly()
--------------------------------------------------
Класс: System.AssemblyLoadEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, AssemblyLoadEventArgs args)
  IAsyncResult BeginInvoke(object sender, AssemblyLoadEventArgs args, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.AsyncCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(IAsyncResult ar)
  IAsyncResult BeginInvoke(IAsyncResult ar, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.AttributeTargets
Наследуется от: Enum
Поля:
  int value__
  AttributeTargets Assembly
  AttributeTargets Module
  AttributeTargets Class
  AttributeTargets Struct
  AttributeTargets Enum
  AttributeTargets Constructor
  AttributeTargets Method
  AttributeTargets Property
  AttributeTargets Field
  AttributeTargets Event
  AttributeTargets Interface
  AttributeTargets Parameter
  AttributeTargets Delegate
  AttributeTargets ReturnValue
  AttributeTargets GenericParameter
  AttributeTargets All
Свойства:
Методы:
--------------------------------------------------
Класс: System.AttributeUsageAttribute
Наследуется от: Attribute
Поля:
  AttributeTargets _attributeTarget
  bool _allowMultiple
  bool _inherited
  AttributeUsageAttribute Default
Свойства:
  AttributeTargets ValidOn
  bool AllowMultiple
  bool Inherited
Методы:
  void .ctor(AttributeTargets validOn)
  void .ctor(AttributeTargets validOn, bool allowMultiple, bool inherited)
  AttributeTargets get_ValidOn()
  bool get_AllowMultiple()
  void set_AllowMultiple(bool value)
  bool get_Inherited()
  void set_Inherited(bool value)
  void .cctor()
--------------------------------------------------
Класс: System.BadImageFormatException
Наследуется от: SystemException
Поля:
  string _fileName
  string _fusionLog
Свойства:
  string Message
  string FileName
  string FusionLog
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string message, string fileName)
  void .ctor(string message, string fileName, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Message()
  void SetMessageField()
  string get_FileName()
  string ToString()
  string get_FusionLog()
--------------------------------------------------
Класс: System.BitConverter
Наследуется от: object
Поля:
  bool IsLittleEndian
Свойства:
Методы:
  Byte[] GetBytes(bool value)
  bool TryWriteBytes(Span`1<byte> destination, bool value)
  Byte[] GetBytes(char value)
  bool TryWriteBytes(Span`1<byte> destination, char value)
  Byte[] GetBytes(short value)
  bool TryWriteBytes(Span`1<byte> destination, short value)
  Byte[] GetBytes(int value)
  bool TryWriteBytes(Span`1<byte> destination, int value)
  Byte[] GetBytes(long value)
  bool TryWriteBytes(Span`1<byte> destination, long value)
  Byte[] GetBytes(ushort value)
  bool TryWriteBytes(Span`1<byte> destination, ushort value)
  Byte[] GetBytes(UInt32 value)
  bool TryWriteBytes(Span`1<byte> destination, UInt32 value)
  Byte[] GetBytes(ulong value)
  bool TryWriteBytes(Span`1<byte> destination, ulong value)
  Byte[] GetBytes(float value)
  bool TryWriteBytes(Span`1<byte> destination, float value)
  Byte[] GetBytes(double value)
  bool TryWriteBytes(Span`1<byte> destination, double value)
  char ToChar(Byte[] value, int startIndex)
  char ToChar(ReadOnlySpan`1<byte> value)
  short ToInt16(Byte[] value, int startIndex)
  short ToInt16(ReadOnlySpan`1<byte> value)
  int ToInt32(Byte[] value, int startIndex)
  int ToInt32(ReadOnlySpan`1<byte> value)
  long ToInt64(Byte[] value, int startIndex)
  long ToInt64(ReadOnlySpan`1<byte> value)
  ushort ToUInt16(Byte[] value, int startIndex)
  ushort ToUInt16(ReadOnlySpan`1<byte> value)
  UInt32 ToUInt32(Byte[] value, int startIndex)
  UInt32 ToUInt32(ReadOnlySpan`1<byte> value)
  ulong ToUInt64(Byte[] value, int startIndex)
  ulong ToUInt64(ReadOnlySpan`1<byte> value)
  float ToSingle(Byte[] value, int startIndex)
  float ToSingle(ReadOnlySpan`1<byte> value)
  double ToDouble(Byte[] value, int startIndex)
  double ToDouble(ReadOnlySpan`1<byte> value)
  string ToString(Byte[] value, int startIndex, int length)
  string ToString(Byte[] value)
  string ToString(Byte[] value, int startIndex)
  bool ToBoolean(Byte[] value, int startIndex)
  bool ToBoolean(ReadOnlySpan`1<byte> value)
  long DoubleToInt64Bits(double value)
  double Int64BitsToDouble(long value)
  int SingleToInt32Bits(float value)
  float Int32BitsToSingle(int value)
  void .cctor()
--------------------------------------------------
Класс: System.Boolean
Наследуется от: ValueType
Поля:
  bool m_value
  int True
  int False
  string TrueLiteral
  string FalseLiteral
  string TrueString
  string FalseString
Свойства:
Методы:
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten)
  bool Equals(object obj)
  bool Equals(bool obj)
  int CompareTo(object obj)
  int CompareTo(bool value)
  bool Parse(string value)
  bool Parse(ReadOnlySpan`1<char> value)
  bool TryParse(string value, Boolean& result)
  bool TryParse(ReadOnlySpan`1<char> value, Boolean& result)
  ReadOnlySpan`1<char> TrimWhiteSpaceAndNull(ReadOnlySpan`1<char> value)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  void .cctor()
--------------------------------------------------
Класс: System.Byte
Наследуется от: ValueType
Поля:
  byte m_value
  byte MaxValue
  byte MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(byte value)
  bool Equals(object obj)
  bool Equals(byte obj)
  int GetHashCode()
  byte Parse(string s)
  byte Parse(string s, NumberStyles style)
  byte Parse(string s, IFormatProvider provider)
  byte Parse(string s, NumberStyles style, IFormatProvider provider)
  byte Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  byte Parse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info)
  bool TryParse(string s, Byte& result)
  bool TryParse(ReadOnlySpan`1<char> s, Byte& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Byte& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Byte& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info, Byte& result)
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider provider)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.CLSCompliantAttribute
Наследуется от: Attribute
Поля:
  bool _compliant
Свойства:
  bool IsCompliant
Методы:
  void .ctor(bool isCompliant)
  bool get_IsCompliant()
--------------------------------------------------
Класс: System.Char
Наследуется от: ValueType
Поля:
  char m_value
  char MaxValue
  char MinValue
  Byte[] s_categoryForLatin1
  int UNICODE_PLANE00_END
  int UNICODE_PLANE01_START
  int UNICODE_PLANE16_END
  int HIGH_SURROGATE_START
  int LOW_SURROGATE_END
Свойства:
Методы:
  bool IsLatin1(char ch)
  bool IsAscii(char ch)
  UnicodeCategory GetLatin1UnicodeCategory(char ch)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(char obj)
  int CompareTo(object value)
  int CompareTo(char value)
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(char c)
  char Parse(string s)
  bool TryParse(string s, Char& result)
  bool IsDigit(char c)
  bool CheckLetter(UnicodeCategory uc)
  bool IsLetter(char c)
  bool IsWhiteSpaceLatin1(char c)
  bool IsWhiteSpace(char c)
  bool IsUpper(char c)
  bool IsLower(char c)
  bool CheckPunctuation(UnicodeCategory uc)
  bool IsPunctuation(char c)
  bool CheckLetterOrDigit(UnicodeCategory uc)
  bool IsLetterOrDigit(char c)
  char ToUpper(char c, CultureInfo culture)
  char ToUpper(char c)
  char ToUpperInvariant(char c)
  char ToLower(char c, CultureInfo culture)
  char ToLower(char c)
  char ToLowerInvariant(char c)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  bool IsControl(char c)
  bool IsControl(string s, int index)
  bool IsDigit(string s, int index)
  bool IsLetter(string s, int index)
  bool IsLetterOrDigit(string s, int index)
  bool IsLower(string s, int index)
  bool CheckNumber(UnicodeCategory uc)
  bool IsNumber(char c)
  bool IsNumber(string s, int index)
  bool IsPunctuation(string s, int index)
  bool CheckSeparator(UnicodeCategory uc)
  bool IsSeparatorLatin1(char c)
  bool IsSeparator(char c)
  bool IsSeparator(string s, int index)
  bool IsSurrogate(char c)
  bool IsSurrogate(string s, int index)
  bool CheckSymbol(UnicodeCategory uc)
  bool IsSymbol(char c)
  bool IsSymbol(string s, int index)
  bool IsUpper(string s, int index)
  bool IsWhiteSpace(string s, int index)
  UnicodeCategory GetUnicodeCategory(char c)
  UnicodeCategory GetUnicodeCategory(string s, int index)
  double GetNumericValue(char c)
  double GetNumericValue(string s, int index)
  bool IsHighSurrogate(char c)
  bool IsHighSurrogate(string s, int index)
  bool IsLowSurrogate(char c)
  bool IsLowSurrogate(string s, int index)
  bool IsSurrogatePair(string s, int index)
  bool IsSurrogatePair(char highSurrogate, char lowSurrogate)
  string ConvertFromUtf32(int utf32)
  int ConvertToUtf32(char highSurrogate, char lowSurrogate)
  int ConvertToUtf32(string s, int index)
  void .cctor()
--------------------------------------------------
Класс: System.CharEnumerator
Наследуется от: object
Поля:
  string _str
  int _index
  char _currentElement
Свойства:
  object System.Collections.IEnumerator.Current
  char Current
Методы:
  void .ctor(string str)
  object Clone()
  bool MoveNext()
  void Dispose()
  object System.Collections.IEnumerator.get_Current()
  char get_Current()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Convert
Наследуется от: object
Поля:
  SByte[] s_decodingMap
  byte EncodingPad
  Type[] ConvertTypes
  Type EnumType
  Char[] base64Table
  int base64LineBreakPosition
  object DBNull
Свойства:
Методы:
  bool TryDecodeFromUtf16(ReadOnlySpan`1<char> utf16, Span`1<byte> bytes, Int32& consumed, Int32& written)
  int Decode(Char& encodedChars, SByte& decodingMap)
  void WriteThreeLowOrderBytes(Byte& destination, int value)
  TypeCode GetTypeCode(object value)
  bool IsDBNull(object value)
  object ChangeType(object value, TypeCode typeCode)
  object ChangeType(object value, TypeCode typeCode, IFormatProvider provider)
  object DefaultToType(IConvertible value, Type targetType, IFormatProvider provider)
  object ChangeType(object value, Type conversionType)
  object ChangeType(object value, Type conversionType, IFormatProvider provider)
  void ThrowCharOverflowException()
  void ThrowByteOverflowException()
  void ThrowSByteOverflowException()
  void ThrowInt16OverflowException()
  void ThrowUInt16OverflowException()
  void ThrowInt32OverflowException()
  void ThrowUInt32OverflowException()
  void ThrowInt64OverflowException()
  void ThrowUInt64OverflowException()
  bool ToBoolean(object value)
  bool ToBoolean(object value, IFormatProvider provider)
  bool ToBoolean(bool value)
  bool ToBoolean(sbyte value)
  bool ToBoolean(char value)
  bool ToBoolean(byte value)
  bool ToBoolean(short value)
  bool ToBoolean(ushort value)
  bool ToBoolean(int value)
  bool ToBoolean(UInt32 value)
  bool ToBoolean(long value)
  bool ToBoolean(ulong value)
  bool ToBoolean(string value)
  bool ToBoolean(string value, IFormatProvider provider)
  bool ToBoolean(float value)
  bool ToBoolean(double value)
  bool ToBoolean(decimal value)
  bool ToBoolean(DateTime value)
  char ToChar(object value)
  char ToChar(object value, IFormatProvider provider)
  char ToChar(bool value)
  char ToChar(char value)
  char ToChar(sbyte value)
  char ToChar(byte value)
  char ToChar(short value)
  char ToChar(ushort value)
  char ToChar(int value)
  char ToChar(UInt32 value)
  char ToChar(long value)
  char ToChar(ulong value)
  char ToChar(string value)
  char ToChar(string value, IFormatProvider provider)
  char ToChar(float value)
  char ToChar(double value)
  char ToChar(decimal value)
  char ToChar(DateTime value)
  sbyte ToSByte(object value)
  sbyte ToSByte(object value, IFormatProvider provider)
  sbyte ToSByte(bool value)
  sbyte ToSByte(sbyte value)
  sbyte ToSByte(char value)
  sbyte ToSByte(byte value)
  sbyte ToSByte(short value)
  sbyte ToSByte(ushort value)
  sbyte ToSByte(int value)
  sbyte ToSByte(UInt32 value)
  sbyte ToSByte(long value)
  sbyte ToSByte(ulong value)
  sbyte ToSByte(float value)
  sbyte ToSByte(double value)
  sbyte ToSByte(decimal value)
  sbyte ToSByte(string value)
  sbyte ToSByte(string value, IFormatProvider provider)
  sbyte ToSByte(DateTime value)
  byte ToByte(object value)
  byte ToByte(object value, IFormatProvider provider)
  byte ToByte(bool value)
  byte ToByte(byte value)
  byte ToByte(char value)
  byte ToByte(sbyte value)
  byte ToByte(short value)
  byte ToByte(ushort value)
  byte ToByte(int value)
  byte ToByte(UInt32 value)
  byte ToByte(long value)
  byte ToByte(ulong value)
  byte ToByte(float value)
  byte ToByte(double value)
  byte ToByte(decimal value)
  byte ToByte(string value)
  byte ToByte(string value, IFormatProvider provider)
  byte ToByte(DateTime value)
  short ToInt16(object value)
  short ToInt16(object value, IFormatProvider provider)
  short ToInt16(bool value)
  short ToInt16(char value)
  short ToInt16(sbyte value)
  short ToInt16(byte value)
  short ToInt16(ushort value)
  short ToInt16(int value)
  short ToInt16(UInt32 value)
  short ToInt16(short value)
  short ToInt16(long value)
  short ToInt16(ulong value)
  short ToInt16(float value)
  short ToInt16(double value)
  short ToInt16(decimal value)
  short ToInt16(string value)
  short ToInt16(string value, IFormatProvider provider)
  short ToInt16(DateTime value)
  ushort ToUInt16(object value)
  ushort ToUInt16(object value, IFormatProvider provider)
  ushort ToUInt16(bool value)
  ushort ToUInt16(char value)
  ushort ToUInt16(sbyte value)
  ushort ToUInt16(byte value)
  ushort ToUInt16(short value)
  ushort ToUInt16(int value)
  ushort ToUInt16(ushort value)
  ushort ToUInt16(UInt32 value)
  ushort ToUInt16(long value)
  ushort ToUInt16(ulong value)
  ushort ToUInt16(float value)
  ushort ToUInt16(double value)
  ushort ToUInt16(decimal value)
  ushort ToUInt16(string value)
  ushort ToUInt16(string value, IFormatProvider provider)
  ushort ToUInt16(DateTime value)
  int ToInt32(object value)
  int ToInt32(object value, IFormatProvider provider)
  int ToInt32(bool value)
  int ToInt32(char value)
  int ToInt32(sbyte value)
  int ToInt32(byte value)
  int ToInt32(short value)
  int ToInt32(ushort value)
  int ToInt32(UInt32 value)
  int ToInt32(int value)
  int ToInt32(long value)
  int ToInt32(ulong value)
  int ToInt32(float value)
  int ToInt32(double value)
  int ToInt32(decimal value)
  int ToInt32(string value)
  int ToInt32(string value, IFormatProvider provider)
  int ToInt32(DateTime value)
  UInt32 ToUInt32(object value)
  UInt32 ToUInt32(object value, IFormatProvider provider)
  UInt32 ToUInt32(bool value)
  UInt32 ToUInt32(char value)
  UInt32 ToUInt32(sbyte value)
  UInt32 ToUInt32(byte value)
  UInt32 ToUInt32(short value)
  UInt32 ToUInt32(ushort value)
  UInt32 ToUInt32(int value)
  UInt32 ToUInt32(UInt32 value)
  UInt32 ToUInt32(long value)
  UInt32 ToUInt32(ulong value)
  UInt32 ToUInt32(float value)
  UInt32 ToUInt32(double value)
  UInt32 ToUInt32(decimal value)
  UInt32 ToUInt32(string value)
  UInt32 ToUInt32(string value, IFormatProvider provider)
  UInt32 ToUInt32(DateTime value)
  long ToInt64(object value)
  long ToInt64(object value, IFormatProvider provider)
  long ToInt64(bool value)
  long ToInt64(char value)
  long ToInt64(sbyte value)
  long ToInt64(byte value)
  long ToInt64(short value)
  long ToInt64(ushort value)
  long ToInt64(int value)
  long ToInt64(UInt32 value)
  long ToInt64(ulong value)
  long ToInt64(long value)
  long ToInt64(float value)
  long ToInt64(double value)
  long ToInt64(decimal value)
  long ToInt64(string value)
  long ToInt64(string value, IFormatProvider provider)
  long ToInt64(DateTime value)
  ulong ToUInt64(object value)
  ulong ToUInt64(object value, IFormatProvider provider)
  ulong ToUInt64(bool value)
  ulong ToUInt64(char value)
  ulong ToUInt64(sbyte value)
  ulong ToUInt64(byte value)
  ulong ToUInt64(short value)
  ulong ToUInt64(ushort value)
  ulong ToUInt64(int value)
  ulong ToUInt64(UInt32 value)
  ulong ToUInt64(long value)
  ulong ToUInt64(ulong value)
  ulong ToUInt64(float value)
  ulong ToUInt64(double value)
  ulong ToUInt64(decimal value)
  ulong ToUInt64(string value)
  ulong ToUInt64(string value, IFormatProvider provider)
  ulong ToUInt64(DateTime value)
  float ToSingle(object value)
  float ToSingle(object value, IFormatProvider provider)
  float ToSingle(sbyte value)
  float ToSingle(byte value)
  float ToSingle(char value)
  float ToSingle(short value)
  float ToSingle(ushort value)
  float ToSingle(int value)
  float ToSingle(UInt32 value)
  float ToSingle(long value)
  float ToSingle(ulong value)
  float ToSingle(float value)
  float ToSingle(double value)
  float ToSingle(decimal value)
  float ToSingle(string value)
  float ToSingle(string value, IFormatProvider provider)
  float ToSingle(bool value)
  float ToSingle(DateTime value)
  double ToDouble(object value)
  double ToDouble(object value, IFormatProvider provider)
  double ToDouble(sbyte value)
  double ToDouble(byte value)
  double ToDouble(short value)
  double ToDouble(char value)
  double ToDouble(ushort value)
  double ToDouble(int value)
  double ToDouble(UInt32 value)
  double ToDouble(long value)
  double ToDouble(ulong value)
  double ToDouble(float value)
  double ToDouble(double value)
  double ToDouble(decimal value)
  double ToDouble(string value)
  double ToDouble(string value, IFormatProvider provider)
  double ToDouble(bool value)
  double ToDouble(DateTime value)
  decimal ToDecimal(object value)
  decimal ToDecimal(object value, IFormatProvider provider)
  decimal ToDecimal(sbyte value)
  decimal ToDecimal(byte value)
  decimal ToDecimal(char value)
  decimal ToDecimal(short value)
  decimal ToDecimal(ushort value)
  decimal ToDecimal(int value)
  decimal ToDecimal(UInt32 value)
  decimal ToDecimal(long value)
  decimal ToDecimal(ulong value)
  decimal ToDecimal(float value)
  decimal ToDecimal(double value)
  decimal ToDecimal(string value)
  decimal ToDecimal(string value, IFormatProvider provider)
  decimal ToDecimal(decimal value)
  decimal ToDecimal(bool value)
  decimal ToDecimal(DateTime value)
  DateTime ToDateTime(DateTime value)
  DateTime ToDateTime(object value)
  DateTime ToDateTime(object value, IFormatProvider provider)
  DateTime ToDateTime(string value)
  DateTime ToDateTime(string value, IFormatProvider provider)
  DateTime ToDateTime(sbyte value)
  DateTime ToDateTime(byte value)
  DateTime ToDateTime(short value)
  DateTime ToDateTime(ushort value)
  DateTime ToDateTime(int value)
  DateTime ToDateTime(UInt32 value)
  DateTime ToDateTime(long value)
  DateTime ToDateTime(ulong value)
  DateTime ToDateTime(bool value)
  DateTime ToDateTime(char value)
  DateTime ToDateTime(float value)
  DateTime ToDateTime(double value)
  DateTime ToDateTime(decimal value)
  string ToString(object value)
  string ToString(object value, IFormatProvider provider)
  string ToString(bool value)
  string ToString(bool value, IFormatProvider provider)
  string ToString(char value)
  string ToString(char value, IFormatProvider provider)
  string ToString(sbyte value)
  string ToString(sbyte value, IFormatProvider provider)
  string ToString(byte value)
  string ToString(byte value, IFormatProvider provider)
  string ToString(short value)
  string ToString(short value, IFormatProvider provider)
  string ToString(ushort value)
  string ToString(ushort value, IFormatProvider provider)
  string ToString(int value)
  string ToString(int value, IFormatProvider provider)
  string ToString(UInt32 value)
  string ToString(UInt32 value, IFormatProvider provider)
  string ToString(long value)
  string ToString(long value, IFormatProvider provider)
  string ToString(ulong value)
  string ToString(ulong value, IFormatProvider provider)
  string ToString(float value)
  string ToString(float value, IFormatProvider provider)
  string ToString(double value)
  string ToString(double value, IFormatProvider provider)
  string ToString(decimal value)
  string ToString(decimal value, IFormatProvider provider)
  string ToString(DateTime value)
  string ToString(DateTime value, IFormatProvider provider)
  string ToString(string value)
  string ToString(string value, IFormatProvider provider)
  byte ToByte(string value, int fromBase)
  sbyte ToSByte(string value, int fromBase)
  short ToInt16(string value, int fromBase)
  ushort ToUInt16(string value, int fromBase)
  int ToInt32(string value, int fromBase)
  UInt32 ToUInt32(string value, int fromBase)
  long ToInt64(string value, int fromBase)
  ulong ToUInt64(string value, int fromBase)
  string ToString(byte value, int toBase)
  string ToString(short value, int toBase)
  string ToString(int value, int toBase)
  string ToString(long value, int toBase)
  string ToBase64String(Byte[] inArray)
  string ToBase64String(Byte[] inArray, Base64FormattingOptions options)
  string ToBase64String(Byte[] inArray, int offset, int length)
  string ToBase64String(Byte[] inArray, int offset, int length, Base64FormattingOptions options)
  string ToBase64String(ReadOnlySpan`1<byte> bytes, Base64FormattingOptions options)
  int ToBase64CharArray(Byte[] inArray, int offsetIn, int length, Char[] outArray, int offsetOut)
  int ToBase64CharArray(Byte[] inArray, int offsetIn, int length, Char[] outArray, int offsetOut, Base64FormattingOptions options)
  bool TryToBase64Chars(ReadOnlySpan`1<byte> bytes, Span`1<char> chars, Int32& charsWritten, Base64FormattingOptions options)
  int ConvertToBase64Array(Char* outChars, Byte* inData, int offset, int length, bool insertLineBreaks)
  int ToBase64_CalculateAndValidateOutputLength(int inputLength, bool insertLineBreaks)
  Byte[] FromBase64String(string s)
  bool TryFromBase64String(string s, Span`1<byte> bytes, Int32& bytesWritten)
  bool TryFromBase64Chars(ReadOnlySpan`1<char> chars, Span`1<byte> bytes, Int32& bytesWritten)
  void CopyToTempBufferWithoutWhiteSpace(ReadOnlySpan`1<char> chars, Span`1<char> tempBuffer, Int32& consumed, Int32& charsWritten)
  bool IsSpace(char c)
  Byte[] FromBase64CharArray(Char[] inArray, int offset, int length)
  Byte[] FromBase64CharPtr(Char* inputPtr, int inputLength)
  int FromBase64_ComputeResultLength(Char* inputPtr, int inputLength)
  void .cctor()
--------------------------------------------------
Класс: System.Base64FormattingOptions
Наследуется от: Enum
Поля:
  int value__
  Base64FormattingOptions None
  Base64FormattingOptions InsertLineBreaks
Свойства:
Методы:
--------------------------------------------------
Класс: System.CurrentSystemTimeZone
Наследуется от: TimeZone
Поля:
  long m_ticksOffset
  string m_standardName
  string m_daylightName
  Hashtable m_CachedDaylightChanges
Свойства:
  string StandardName
  string DaylightName
Методы:
  void .ctor()
  string get_StandardName()
  string get_DaylightName()
  long GetUtcOffsetFromUniversalTime(DateTime time, Boolean& isAmbiguousLocalDst)
  DateTime ToLocalTime(DateTime time)
  DaylightTime GetDaylightChanges(int year)
  DaylightTime CreateDaylightChanges(int year)
  TimeSpan GetUtcOffset(DateTime time)
  DaylightTime GetCachedDaylightChanges(int year)
--------------------------------------------------
Класс: System.DBNull
Наследуется от: object
Поля:
  DBNull Value
Свойства:
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string ToString()
  string ToString(IFormatProvider provider)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  void .cctor()
--------------------------------------------------
Класс: System.DataMisalignedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.DateTime
Наследуется от: ValueType
Поля:
  long TicksPerMillisecond
  long TicksPerSecond
  long TicksPerMinute
  long TicksPerHour
  long TicksPerDay
  int MillisPerSecond
  int MillisPerMinute
  int MillisPerHour
  int MillisPerDay
  int DaysPerYear
  int DaysPer4Years
  int DaysPer100Years
  int DaysPer400Years
  int DaysTo1601
  int DaysTo1899
  int DaysTo1970
  int DaysTo10000
  long MinTicks
  long MaxTicks
  long MaxMillis
  long UnixEpochTicks
  long FileTimeOffset
  long DoubleDateOffset
  long OADateMinAsTicks
  double OADateMinAsDouble
  double OADateMaxAsDouble
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  Int32[] s_daysToMonth365
  Int32[] s_daysToMonth366
  DateTime MinValue
  DateTime MaxValue
  DateTime UnixEpoch
  ulong TicksMask
  ulong FlagsMask
  ulong LocalMask
  long TicksCeiling
  ulong KindUnspecified
  ulong KindUtc
  ulong KindLocal
  ulong KindLocalAmbiguousDst
  int KindShift
  string TicksField
  string DateDataField
  ulong _dateData
Свойства:
  long InternalTicks
  ulong InternalKind
  DateTime Date
  int Day
  DayOfWeek DayOfWeek
  int DayOfYear
  int Hour
  DateTimeKind Kind
  int Millisecond
  int Minute
  int Month
  DateTime Now
  int Second
  long Ticks
  TimeSpan TimeOfDay
  DateTime Today
  int Year
  DateTime UtcNow
Методы:
  void .ctor(long ticks)
  void .ctor(ulong dateData)
  void .ctor(long ticks, DateTimeKind kind)
  void .ctor(long ticks, DateTimeKind kind, bool isAmbiguousDst)
  void .ctor(int year, int month, int day)
  void .ctor(int year, int month, int day, Calendar calendar)
  void .ctor(int year, int month, int day, int hour, int minute, int second)
  void .ctor(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)
  void .ctor(int year, int month, int day, int hour, int minute, int second, Calendar calendar)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int millisecond)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, DateTimeKind kind)
  void .ctor(SerializationInfo info, StreamingContext context)
  long get_InternalTicks()
  ulong get_InternalKind()
  DateTime Add(TimeSpan value)
  DateTime Add(double value, int scale)
  DateTime AddDays(double value)
  DateTime AddHours(double value)
  DateTime AddMilliseconds(double value)
  DateTime AddMinutes(double value)
  DateTime AddMonths(int months)
  DateTime AddSeconds(double value)
  DateTime AddTicks(long value)
  DateTime AddYears(int value)
  int Compare(DateTime t1, DateTime t2)
  int CompareTo(object value)
  int CompareTo(DateTime value)
  long DateToTicks(int year, int month, int day)
  long TimeToTicks(int hour, int minute, int second)
  int DaysInMonth(int year, int month)
  long DoubleDateToTicks(double value)
  bool Equals(object value)
  bool Equals(DateTime value)
  bool Equals(DateTime t1, DateTime t2)
  DateTime FromBinary(long dateData)
  DateTime FromBinaryRaw(long dateData)
  DateTime FromFileTime(long fileTime)
  DateTime FromFileTimeUtc(long fileTime)
  DateTime FromOADate(double d)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  bool IsDaylightSavingTime()
  DateTime SpecifyKind(DateTime value, DateTimeKind kind)
  long ToBinary()
  DateTime get_Date()
  int GetDatePart(int part)
  void GetDatePart(Int32& year, Int32& month, Int32& day)
  int get_Day()
  DayOfWeek get_DayOfWeek()
  int get_DayOfYear()
  int GetHashCode()
  int get_Hour()
  bool IsAmbiguousDaylightSavingTime()
  DateTimeKind get_Kind()
  int get_Millisecond()
  int get_Minute()
  int get_Month()
  DateTime get_Now()
  int get_Second()
  long get_Ticks()
  TimeSpan get_TimeOfDay()
  DateTime get_Today()
  int get_Year()
  bool IsLeapYear(int year)
  DateTime Parse(string s)
  DateTime Parse(string s, IFormatProvider provider)
  DateTime Parse(string s, IFormatProvider provider, DateTimeStyles styles)
  DateTime Parse(ReadOnlySpan`1<char> s, IFormatProvider provider, DateTimeStyles styles)
  DateTime ParseExact(string s, string format, IFormatProvider provider)
  DateTime ParseExact(string s, string format, IFormatProvider provider, DateTimeStyles style)
  DateTime ParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, IFormatProvider provider, DateTimeStyles style)
  DateTime ParseExact(string s, String[] formats, IFormatProvider provider, DateTimeStyles style)
  DateTime ParseExact(ReadOnlySpan`1<char> s, String[] formats, IFormatProvider provider, DateTimeStyles style)
  TimeSpan Subtract(DateTime value)
  DateTime Subtract(TimeSpan value)
  double TicksToOADate(long value)
  double ToOADate()
  long ToFileTime()
  long ToFileTimeUtc()
  DateTime ToLocalTime()
  DateTime ToLocalTime(bool throwOnOverflow)
  string ToLongDateString()
  string ToLongTimeString()
  string ToShortDateString()
  string ToShortTimeString()
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider provider)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  DateTime ToUniversalTime()
  bool TryParse(string s, DateTime& result)
  bool TryParse(ReadOnlySpan`1<char> s, DateTime& result)
  bool TryParse(string s, IFormatProvider provider, DateTimeStyles styles, DateTime& result)
  bool TryParse(ReadOnlySpan`1<char> s, IFormatProvider provider, DateTimeStyles styles, DateTime& result)
  bool TryParseExact(string s, string format, IFormatProvider provider, DateTimeStyles style, DateTime& result)
  bool TryParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, IFormatProvider provider, DateTimeStyles style, DateTime& result)
  bool TryParseExact(string s, String[] formats, IFormatProvider provider, DateTimeStyles style, DateTime& result)
  bool TryParseExact(ReadOnlySpan`1<char> s, String[] formats, IFormatProvider provider, DateTimeStyles style, DateTime& result)
  DateTime op_Addition(DateTime d, TimeSpan t)
  DateTime op_Subtraction(DateTime d, TimeSpan t)
  TimeSpan op_Subtraction(DateTime d1, DateTime d2)
  bool op_Equality(DateTime d1, DateTime d2)
  bool op_Inequality(DateTime d1, DateTime d2)
  bool op_LessThan(DateTime t1, DateTime t2)
  bool op_LessThanOrEqual(DateTime t1, DateTime t2)
  bool op_GreaterThan(DateTime t1, DateTime t2)
  bool op_GreaterThanOrEqual(DateTime t1, DateTime t2)
  String[] GetDateTimeFormats()
  String[] GetDateTimeFormats(IFormatProvider provider)
  String[] GetDateTimeFormats(char format)
  String[] GetDateTimeFormats(char format, IFormatProvider provider)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  bool TryCreate(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTime& result)
  DateTime get_UtcNow()
  long GetSystemTimeAsFileTime()
  long ToBinaryRaw()
  void .cctor()
--------------------------------------------------
Класс: System.DateTimeKind
Наследуется от: Enum
Поля:
  int value__
  DateTimeKind Unspecified
  DateTimeKind Utc
  DateTimeKind Local
Свойства:
Методы:
--------------------------------------------------
Класс: System.DateTimeOffset
Наследуется от: ValueType
Поля:
  long MaxOffset
  long MinOffset
  long UnixEpochSeconds
  long UnixEpochMilliseconds
  long UnixMinSeconds
  long UnixMaxSeconds
  DateTimeOffset MinValue
  DateTimeOffset MaxValue
  DateTimeOffset UnixEpoch
  DateTime _dateTime
  short _offsetMinutes
Свойства:
  DateTimeOffset Now
  DateTimeOffset UtcNow
  DateTime DateTime
  DateTime UtcDateTime
  DateTime LocalDateTime
  DateTime ClockDateTime
  DateTime Date
  int Day
  DayOfWeek DayOfWeek
  int DayOfYear
  int Hour
  int Millisecond
  int Minute
  int Month
  TimeSpan Offset
  int Second
  long Ticks
  long UtcTicks
  TimeSpan TimeOfDay
  int Year
Методы:
  void .ctor(long ticks, TimeSpan offset)
  void .ctor(DateTime dateTime)
  void .ctor(DateTime dateTime, TimeSpan offset)
  void .ctor(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)
  void .ctor(int year, int month, int day, int hour, int minute, int second, int millisecond, Calendar calendar, TimeSpan offset)
  DateTimeOffset get_Now()
  DateTimeOffset get_UtcNow()
  DateTime get_DateTime()
  DateTime get_UtcDateTime()
  DateTime get_LocalDateTime()
  DateTimeOffset ToOffset(TimeSpan offset)
  DateTime get_ClockDateTime()
  DateTime get_Date()
  int get_Day()
  DayOfWeek get_DayOfWeek()
  int get_DayOfYear()
  int get_Hour()
  int get_Millisecond()
  int get_Minute()
  int get_Month()
  TimeSpan get_Offset()
  int get_Second()
  long get_Ticks()
  long get_UtcTicks()
  TimeSpan get_TimeOfDay()
  int get_Year()
  DateTimeOffset Add(TimeSpan timeSpan)
  DateTimeOffset AddDays(double days)
  DateTimeOffset AddHours(double hours)
  DateTimeOffset AddMilliseconds(double milliseconds)
  DateTimeOffset AddMinutes(double minutes)
  DateTimeOffset AddMonths(int months)
  DateTimeOffset AddSeconds(double seconds)
  DateTimeOffset AddTicks(long ticks)
  DateTimeOffset AddYears(int years)
  int Compare(DateTimeOffset first, DateTimeOffset second)
  int System.IComparable.CompareTo(object obj)
  int CompareTo(DateTimeOffset other)
  bool Equals(object obj)
  bool Equals(DateTimeOffset other)
  bool EqualsExact(DateTimeOffset other)
  bool Equals(DateTimeOffset first, DateTimeOffset second)
  DateTimeOffset FromFileTime(long fileTime)
  DateTimeOffset FromUnixTimeSeconds(long seconds)
  DateTimeOffset FromUnixTimeMilliseconds(long milliseconds)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor(SerializationInfo info, StreamingContext context)
  int GetHashCode()
  DateTimeOffset Parse(string input)
  DateTimeOffset Parse(string input, IFormatProvider formatProvider)
  DateTimeOffset Parse(string input, IFormatProvider formatProvider, DateTimeStyles styles)
  DateTimeOffset Parse(ReadOnlySpan`1<char> input, IFormatProvider formatProvider, DateTimeStyles styles)
  DateTimeOffset ParseExact(string input, string format, IFormatProvider formatProvider)
  DateTimeOffset ParseExact(string input, string format, IFormatProvider formatProvider, DateTimeStyles styles)
  DateTimeOffset ParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, DateTimeStyles styles)
  DateTimeOffset ParseExact(string input, String[] formats, IFormatProvider formatProvider, DateTimeStyles styles)
  DateTimeOffset ParseExact(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, DateTimeStyles styles)
  TimeSpan Subtract(DateTimeOffset value)
  DateTimeOffset Subtract(TimeSpan value)
  long ToFileTime()
  long ToUnixTimeSeconds()
  long ToUnixTimeMilliseconds()
  DateTimeOffset ToLocalTime()
  DateTimeOffset ToLocalTime(bool throwOnOverflow)
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider formatProvider)
  string ToString(string format, IFormatProvider formatProvider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider formatProvider)
  DateTimeOffset ToUniversalTime()
  bool TryParse(string input, DateTimeOffset& result)
  bool TryParse(ReadOnlySpan`1<char> input, DateTimeOffset& result)
  bool TryParse(string input, IFormatProvider formatProvider, DateTimeStyles styles, DateTimeOffset& result)
  bool TryParse(ReadOnlySpan`1<char> input, IFormatProvider formatProvider, DateTimeStyles styles, DateTimeOffset& result)
  bool TryParseExact(string input, string format, IFormatProvider formatProvider, DateTimeStyles styles, DateTimeOffset& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, DateTimeStyles styles, DateTimeOffset& result)
  bool TryParseExact(string input, String[] formats, IFormatProvider formatProvider, DateTimeStyles styles, DateTimeOffset& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, DateTimeStyles styles, DateTimeOffset& result)
  short ValidateOffset(TimeSpan offset)
  DateTime ValidateDate(DateTime dateTime, TimeSpan offset)
  DateTimeStyles ValidateStyles(DateTimeStyles style, string parameterName)
  DateTimeOffset op_Implicit(DateTime dateTime)
  DateTimeOffset op_Addition(DateTimeOffset dateTimeOffset, TimeSpan timeSpan)
  DateTimeOffset op_Subtraction(DateTimeOffset dateTimeOffset, TimeSpan timeSpan)
  TimeSpan op_Subtraction(DateTimeOffset left, DateTimeOffset right)
  bool op_Equality(DateTimeOffset left, DateTimeOffset right)
  bool op_Inequality(DateTimeOffset left, DateTimeOffset right)
  bool op_LessThan(DateTimeOffset left, DateTimeOffset right)
  bool op_LessThanOrEqual(DateTimeOffset left, DateTimeOffset right)
  bool op_GreaterThan(DateTimeOffset left, DateTimeOffset right)
  bool op_GreaterThanOrEqual(DateTimeOffset left, DateTimeOffset right)
  void .cctor()
--------------------------------------------------
Класс: System.DayOfWeek
Наследуется от: Enum
Поля:
  int value__
  DayOfWeek Sunday
  DayOfWeek Monday
  DayOfWeek Tuesday
  DayOfWeek Wednesday
  DayOfWeek Thursday
  DayOfWeek Friday
  DayOfWeek Saturday
Свойства:
Методы:
--------------------------------------------------
Класс: System.DivideByZeroException
Наследуется от: ArithmeticException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.DllNotFoundException
Наследуется от: TypeLoadException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Double
Наследуется от: ValueType
Поля:
  double m_value
  double MinValue
  double MaxValue
  double Epsilon
  double NegativeInfinity
  double PositiveInfinity
  double NaN
  double NegativeZero
Свойства:
Методы:
  bool IsFinite(double d)
  bool IsInfinity(double d)
  bool IsNaN(double d)
  bool IsNegative(double d)
  bool IsNegativeInfinity(double d)
  bool IsNormal(double d)
  bool IsPositiveInfinity(double d)
  bool IsSubnormal(double d)
  int CompareTo(object value)
  int CompareTo(double value)
  bool Equals(object obj)
  bool op_Equality(double left, double right)
  bool op_Inequality(double left, double right)
  bool op_LessThan(double left, double right)
  bool op_GreaterThan(double left, double right)
  bool op_LessThanOrEqual(double left, double right)
  bool op_GreaterThanOrEqual(double left, double right)
  bool Equals(double obj)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider provider)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  double Parse(string s)
  double Parse(string s, NumberStyles style)
  double Parse(string s, IFormatProvider provider)
  double Parse(string s, NumberStyles style, IFormatProvider provider)
  double Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, Double& result)
  bool TryParse(ReadOnlySpan`1<char> s, Double& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Double& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Double& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info, Double& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.DuplicateWaitObjectException
Наследуется от: ArgumentException
Поля:
  String modreq(System.Runtime.CompilerServices.IsVolatile) s_duplicateWaitObjectMessage
Свойства:
  string DuplicateWaitObjectMessage
Методы:
  string get_DuplicateWaitObjectMessage()
  void .ctor()
  void .ctor(string parameterName)
  void .ctor(string parameterName, string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.EntryPointNotFoundException
Наследуется от: TypeLoadException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.EventArgs
Наследуется от: object
Поля:
  EventArgs Empty
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.EventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, EventArgs e)
  IAsyncResult BeginInvoke(object sender, EventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.EventHandler`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, TEventArgs e)
  IAsyncResult BeginInvoke(object sender, TEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ExecutionEngineException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.FieldAccessException
Наследуется от: MemberAccessException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.FlagsAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.FormatException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.FormattableString
Наследуется от: object
Поля:
Свойства:
  string Format
  int ArgumentCount
Методы:
  string get_Format()
  Object[] GetArguments()
  int get_ArgumentCount()
  object GetArgument(int index)
  string ToString(IFormatProvider formatProvider)
  string System.IFormattable.ToString(string ignored, IFormatProvider formatProvider)
  string Invariant(FormattableString formattable)
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Gen2GcCallback
Наследуется от: CriticalFinalizerObject
Поля:
  Func`2<object, bool> _callback
  GCHandle _weakTargetObj
Свойства:
Методы:
  void .ctor()
  void Register(Func`2<object, bool> callback, object targetObj)
  void Setup(Func`2<object, bool> callback, object targetObj)
  void Finalize()
--------------------------------------------------
Класс: System.DateTimeFormat
Наследуется от: object
Поля:
  int MaxSecondsFractionDigits
  TimeSpan NullOffset
  Char[] allStandardFormats
  string RoundtripFormat
  string RoundtripDateTimeUnfixed
  int DEFAULT_ALL_DATETIMES_SIZE
  DateTimeFormatInfo InvariantFormatInfo
  String[] InvariantAbbreviatedMonthNames
  String[] InvariantAbbreviatedDayNames
  string Gmt
  String[] fixedNumberFormats
Свойства:
Методы:
  void FormatDigits(StringBuilder outputBuffer, int value, int len)
  void FormatDigits(StringBuilder outputBuffer, int value, int len, bool overrideLengthLimit)
  void HebrewFormatDigits(StringBuilder outputBuffer, int digits)
  int ParseRepeatPattern(ReadOnlySpan`1<char> format, int pos, char patternChar)
  string FormatDayOfWeek(int dayOfWeek, int repeat, DateTimeFormatInfo dtfi)
  string FormatMonth(int month, int repeatCount, DateTimeFormatInfo dtfi)
  string FormatHebrewMonthName(DateTime time, int month, int repeatCount, DateTimeFormatInfo dtfi)
  int ParseQuoteString(ReadOnlySpan`1<char> format, int pos, StringBuilder result)
  int ParseNextChar(ReadOnlySpan`1<char> format, int pos)
  bool IsUseGenitiveForm(ReadOnlySpan`1<char> format, int index, int tokenLen, char patternToMatch)
  StringBuilder FormatCustomized(DateTime dateTime, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, TimeSpan offset, StringBuilder result)
  void FormatCustomizedTimeZone(DateTime dateTime, TimeSpan offset, ReadOnlySpan`1<char> format, int tokenLen, bool timeOnly, StringBuilder result)
  void FormatCustomizedRoundripTimeZone(DateTime dateTime, TimeSpan offset, StringBuilder result)
  void Append2DigitNumber(StringBuilder result, int val)
  string GetRealFormat(ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi)
  string ExpandPredefinedFormat(ReadOnlySpan`1<char> format, DateTime& dateTime, DateTimeFormatInfo& dtfi, TimeSpan& offset)
  string Format(DateTime dateTime, string format, IFormatProvider provider)
  string Format(DateTime dateTime, string format, IFormatProvider provider, TimeSpan offset)
  bool TryFormat(DateTime dateTime, Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  bool TryFormat(DateTime dateTime, Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider, TimeSpan offset)
  StringBuilder FormatStringBuilder(DateTime dateTime, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, TimeSpan offset)
  bool TryFormatO(DateTime dateTime, TimeSpan offset, Span`1<char> destination, Int32& charsWritten)
  bool TryFormatR(DateTime dateTime, TimeSpan offset, Span`1<char> destination, Int32& charsWritten)
  void WriteTwoDecimalDigits(UInt32 value, Span`1<char> destination, int offset)
  void WriteFourDecimalDigits(UInt32 value, Span`1<char> buffer, int startingIndex)
  void WriteDigits(ulong value, Span`1<char> buffer)
  String[] GetAllDateTimes(DateTime dateTime, char format, DateTimeFormatInfo dtfi)
  String[] GetAllDateTimes(DateTime dateTime, DateTimeFormatInfo dtfi)
  void InvalidFormatForLocal(ReadOnlySpan`1<char> format, DateTime dateTime)
  void .cctor()
--------------------------------------------------
Класс: System.DateTimeParse
Наследуется от: object
Поля:
  int MaxDateTimeNumberDigits
  MatchNumberDelegate m_hebrewNumberParser
  DS[][] dateParsingStates
  string GMTName
  string ZuluName
  int ORDER_YMD
  int ORDER_MDY
  int ORDER_DMY
  int ORDER_YDM
  int ORDER_YM
  int ORDER_MY
  int ORDER_MD
  int ORDER_DM
Свойства:
Методы:
  DateTime ParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, DateTimeStyles style)
  DateTime ParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, DateTimeStyles style, TimeSpan& offset)
  bool TryParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, DateTimeStyles style, DateTime& result)
  bool TryParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, DateTimeStyles style, DateTime& result, TimeSpan& offset)
  bool TryParseExact(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, DateTimeStyles style, DateTimeResult& result)
  DateTime ParseExactMultiple(ReadOnlySpan`1<char> s, String[] formats, DateTimeFormatInfo dtfi, DateTimeStyles style)
  DateTime ParseExactMultiple(ReadOnlySpan`1<char> s, String[] formats, DateTimeFormatInfo dtfi, DateTimeStyles style, TimeSpan& offset)
  bool TryParseExactMultiple(ReadOnlySpan`1<char> s, String[] formats, DateTimeFormatInfo dtfi, DateTimeStyles style, DateTime& result, TimeSpan& offset)
  bool TryParseExactMultiple(ReadOnlySpan`1<char> s, String[] formats, DateTimeFormatInfo dtfi, DateTimeStyles style, DateTime& result)
  bool TryParseExactMultiple(ReadOnlySpan`1<char> s, String[] formats, DateTimeFormatInfo dtfi, DateTimeStyles style, DateTimeResult& result)
  bool MatchWord(__DTString& str, string target)
  bool GetTimeZoneName(__DTString& str)
  bool IsDigit(char ch)
  bool ParseFraction(__DTString& str, Double& result)
  bool ParseTimeZone(__DTString& str, TimeSpan& result)
  bool HandleTimeZone(__DTString& str, DateTimeResult& result)
  bool Lex(DS dps, __DTString& str, DateTimeToken& dtok, DateTimeRawInfo& raw, DateTimeResult& result, DateTimeFormatInfo& dtfi, DateTimeStyles styles)
  Calendar GetJapaneseCalendarDefaultInstance()
  Calendar GetTaiwanCalendarDefaultInstance()
  bool VerifyValidPunctuation(__DTString& str)
  bool GetYearMonthDayOrder(string datePattern, DateTimeFormatInfo dtfi, Int32& order)
  bool GetYearMonthOrder(string pattern, DateTimeFormatInfo dtfi, Int32& order)
  bool GetMonthDayOrder(string pattern, DateTimeFormatInfo dtfi, Int32& order)
  bool TryAdjustYear(DateTimeResult& result, int year, Int32& adjustedYear)
  bool SetDateYMD(DateTimeResult& result, int year, int month, int day)
  bool SetDateMDY(DateTimeResult& result, int month, int day, int year)
  bool SetDateDMY(DateTimeResult& result, int day, int month, int year)
  bool SetDateYDM(DateTimeResult& result, int year, int day, int month)
  void GetDefaultYear(DateTimeResult& result, DateTimeStyles& styles)
  bool GetDayOfNN(DateTimeResult& result, DateTimeStyles& styles, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfNNN(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfMN(DateTimeResult& result, DateTimeStyles& styles, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetHebrewDayOfNM(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfNM(DateTimeResult& result, DateTimeStyles& styles, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfMNN(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfYNN(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfNNY(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool GetDayOfYMN(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetDayOfYN(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetDayOfYM(DateTimeResult& result, DateTimeRawInfo& raw)
  void AdjustTimeMark(DateTimeFormatInfo dtfi, DateTimeRawInfo& raw)
  bool AdjustHour(Int32& hour, TM timeMark)
  bool GetTimeOfN(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetTimeOfNN(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetTimeOfNNN(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetDateOfDSN(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetDateOfNDS(DateTimeResult& result, DateTimeRawInfo& raw)
  bool GetDateOfNNDS(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool ProcessDateTimeSuffix(DateTimeResult& result, DateTimeRawInfo& raw, DateTimeToken& dtok)
  bool ProcessHebrewTerminalState(DS dps, __DTString& str, DateTimeResult& result, DateTimeStyles& styles, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  bool ProcessTerminalState(DS dps, __DTString& str, DateTimeResult& result, DateTimeStyles& styles, DateTimeRawInfo& raw, DateTimeFormatInfo dtfi)
  DateTime Parse(ReadOnlySpan`1<char> s, DateTimeFormatInfo dtfi, DateTimeStyles styles)
  DateTime Parse(ReadOnlySpan`1<char> s, DateTimeFormatInfo dtfi, DateTimeStyles styles, TimeSpan& offset)
  bool TryParse(ReadOnlySpan`1<char> s, DateTimeFormatInfo dtfi, DateTimeStyles styles, DateTime& result)
  bool TryParse(ReadOnlySpan`1<char> s, DateTimeFormatInfo dtfi, DateTimeStyles styles, DateTime& result, TimeSpan& offset)
  bool TryParse(ReadOnlySpan`1<char> s, DateTimeFormatInfo dtfi, DateTimeStyles styles, DateTimeResult& result)
  bool DetermineTimeZoneAdjustments(__DTString& str, DateTimeResult& result, DateTimeStyles styles, bool bTimeOnly)
  bool DateTimeOffsetTimeZonePostProcessing(__DTString& str, DateTimeResult& result, DateTimeStyles styles)
  bool AdjustTimeZoneToUniversal(DateTimeResult& result)
  bool AdjustTimeZoneToLocal(DateTimeResult& result, bool bTimeOnly)
  bool ParseISO8601(DateTimeRawInfo& raw, __DTString& str, DateTimeStyles styles, DateTimeResult& result)
  bool MatchHebrewDigits(__DTString& str, int digitLen, Int32& number)
  bool ParseDigits(__DTString& str, int digitLen, Int32& result)
  bool ParseDigits(__DTString& str, int minDigitLen, int maxDigitLen, Int32& result)
  bool ParseFractionExact(__DTString& str, int maxDigitLen, Double& result)
  bool ParseSign(__DTString& str, Boolean& result)
  bool ParseTimeZoneOffset(__DTString& str, int len, TimeSpan& result)
  bool MatchAbbreviatedMonthName(__DTString& str, DateTimeFormatInfo dtfi, Int32& result)
  bool MatchMonthName(__DTString& str, DateTimeFormatInfo dtfi, Int32& result)
  bool MatchAbbreviatedDayName(__DTString& str, DateTimeFormatInfo dtfi, Int32& result)
  bool MatchDayName(__DTString& str, DateTimeFormatInfo dtfi, Int32& result)
  bool MatchEraName(__DTString& str, DateTimeFormatInfo dtfi, Int32& result)
  bool MatchTimeMark(__DTString& str, DateTimeFormatInfo dtfi, TM& result)
  bool MatchAbbreviatedTimeMark(__DTString& str, DateTimeFormatInfo dtfi, TM& result)
  bool CheckNewValue(Int32& currentValue, int newValue, char patternChar, DateTimeResult& result)
  DateTime GetDateTimeNow(DateTimeResult& result, DateTimeStyles& styles)
  bool CheckDefaultDateTime(DateTimeResult& result, Calendar& cal, DateTimeStyles styles)
  string ExpandPredefinedFormat(ReadOnlySpan`1<char> format, DateTimeFormatInfo& dtfi, ParsingInfo& parseInfo, DateTimeResult& result)
  bool ParseJapaneseEraStart(__DTString& str, DateTimeFormatInfo dtfi)
  bool ParseByFormat(__DTString& str, __DTString& format, ParsingInfo& parseInfo, DateTimeFormatInfo dtfi, DateTimeResult& result)
  bool TryParseQuoteString(ReadOnlySpan`1<char> format, int pos, StringBuilder result, Int32& returnValue)
  bool DoStrictParse(ReadOnlySpan`1<char> s, ReadOnlySpan`1<char> formatParam, DateTimeStyles styles, DateTimeFormatInfo dtfi, DateTimeResult& result)
  Exception GetDateTimeParseException(DateTimeResult& result)
  void LexTraceExit(string message, DS dps)
  void PTSTraceExit(DS dps, bool passed)
  void TPTraceExit(string message, DS dps)
  void DTFITrace(DateTimeFormatInfo dtfi)
  void .cctor()
--------------------------------------------------
Класс: System.__DTString
Наследуется от: ValueType
Поля:
  ReadOnlySpan`1<char> Value
  int Index
  char m_current
  CompareInfo m_info
  bool m_checkDigitToken
  Char[] WhiteSpaceChecks
Свойства:
  int Length
  CompareInfo CompareInfo
Методы:
  int get_Length()
  void .ctor(ReadOnlySpan`1<char> str, DateTimeFormatInfo dtfi, bool checkDigitToken)
  void .ctor(ReadOnlySpan`1<char> str, DateTimeFormatInfo dtfi)
  CompareInfo get_CompareInfo()
  bool GetNext()
  bool AtEnd()
  bool Advance(int count)
  void GetRegularToken(TokenType& tokenType, Int32& tokenValue, DateTimeFormatInfo dtfi)
  TokenType GetSeparatorToken(DateTimeFormatInfo dtfi, Int32& indexBeforeSeparator, Char& charBeforeSeparator)
  bool MatchSpecifiedWord(string target)
  bool MatchSpecifiedWords(string target, bool checkWordBoundary, Int32& matchLength)
  bool Match(string str)
  bool Match(char ch)
  int MatchLongestWords(String[] words, Int32& maxMatchStrLen)
  int GetRepeatCount()
  bool GetNextDigit()
  char GetChar()
  int GetDigit()
  void SkipWhiteSpaces()
  bool SkipWhiteSpaceCurrent()
  void TrimTail()
  void RemoveTrailingInQuoteSpaces()
  void RemoveLeadingInQuoteSpaces()
  DTSubString GetSubString()
  void ConsumeSubString(DTSubString sub)
  void .cctor()
--------------------------------------------------
Класс: System.DTSubStringType
Наследуется от: Enum
Поля:
  int value__
  DTSubStringType Unknown
  DTSubStringType Invalid
  DTSubStringType Number
  DTSubStringType End
  DTSubStringType Other
Свойства:
Методы:
--------------------------------------------------
Класс: System.DTSubString
Наследуется от: ValueType
Поля:
  ReadOnlySpan`1<char> s
  int index
  int length
  DTSubStringType type
  int value
Свойства:
  char Item
Методы:
  char get_Item(int relativeIndex)
--------------------------------------------------
Класс: System.DateTimeToken
Наследуется от: ValueType
Поля:
  DTT dtt
  TokenType suffix
  int num
Свойства:
Методы:
--------------------------------------------------
Класс: System.DateTimeRawInfo
Наследуется от: ValueType
Поля:
  Int32* num
  int numCount
  int month
  int year
  int dayOfWeek
  int era
  TM timeMark
  double fraction
  bool hasSameDateAndTimeSeparators
Свойства:
Методы:
  void Init(Int32* numberBuffer)
  void AddNumber(int value)
  int GetNumber(int index)
--------------------------------------------------
Класс: System.ParseFailureKind
Наследуется от: Enum
Поля:
  int value__
  ParseFailureKind None
  ParseFailureKind ArgumentNull
  ParseFailureKind Format
  ParseFailureKind FormatWithParameter
  ParseFailureKind FormatWithOriginalDateTime
  ParseFailureKind FormatWithFormatSpecifier
  ParseFailureKind FormatWithOriginalDateTimeAndParameter
  ParseFailureKind FormatBadDateTimeCalendar
Свойства:
Методы:
--------------------------------------------------
Класс: System.ParseFlags
Наследуется от: Enum
Поля:
  int value__
  ParseFlags HaveYear
  ParseFlags HaveMonth
  ParseFlags HaveDay
  ParseFlags HaveHour
  ParseFlags HaveMinute
  ParseFlags HaveSecond
  ParseFlags HaveTime
  ParseFlags HaveDate
  ParseFlags TimeZoneUsed
  ParseFlags TimeZoneUtc
  ParseFlags ParsedMonthName
  ParseFlags CaptureOffset
  ParseFlags YearDefault
  ParseFlags Rfc1123Pattern
  ParseFlags UtcSortPattern
Свойства:
Методы:
--------------------------------------------------
Класс: System.DateTimeResult
Наследуется от: ValueType
Поля:
  int Year
  int Month
  int Day
  int Hour
  int Minute
  int Second
  double fraction
  int era
  ParseFlags flags
  TimeSpan timeZoneOffset
  Calendar calendar
  DateTime parsedDate
  ParseFailureKind failure
  string failureMessageID
  object failureMessageFormatArgument
  string failureArgumentName
  ReadOnlySpan`1<char> originalDateTimeString
  ReadOnlySpan`1<char> failedFormatSpecifier
Свойства:
Методы:
  void Init(ReadOnlySpan`1<char> originalDateTimeString)
  void SetDate(int year, int month, int day)
  void SetBadFormatSpecifierFailure()
  void SetBadFormatSpecifierFailure(ReadOnlySpan`1<char> failedFormatSpecifier)
  void SetBadDateTimeFailure()
  void SetFailure(ParseFailureKind failure, string failureMessageID)
  void SetFailure(ParseFailureKind failure, string failureMessageID, object failureMessageFormatArgument)
  void SetFailure(ParseFailureKind failure, string failureMessageID, object failureMessageFormatArgument, string failureArgumentName)
--------------------------------------------------
Класс: System.ParsingInfo
Наследуется от: ValueType
Поля:
  Calendar calendar
  int dayOfWeek
  TM timeMark
  bool fUseHour12
  bool fUseTwoDigitYear
  bool fAllowInnerWhite
  bool fAllowTrailingWhite
  bool fCustomNumberParser
  MatchNumberDelegate parseNumberDelegate
Свойства:
Методы:
  void Init()
--------------------------------------------------
Класс: System.TokenType
Наследуется от: Enum
Поля:
  int value__
  TokenType NumberToken
  TokenType YearNumberToken
  TokenType Am
  TokenType Pm
  TokenType MonthToken
  TokenType EndOfString
  TokenType DayOfWeekToken
  TokenType TimeZoneToken
  TokenType EraToken
  TokenType DateWordToken
  TokenType UnknownToken
  TokenType HebrewNumber
  TokenType JapaneseEraToken
  TokenType TEraToken
  TokenType IgnorableSymbol
  TokenType SEP_Unk
  TokenType SEP_End
  TokenType SEP_Space
  TokenType SEP_Am
  TokenType SEP_Pm
  TokenType SEP_Date
  TokenType SEP_Time
  TokenType SEP_YearSuff
  TokenType SEP_MonthSuff
  TokenType SEP_DaySuff
  TokenType SEP_HourSuff
  TokenType SEP_MinuteSuff
  TokenType SEP_SecondSuff
  TokenType SEP_LocalTimeMark
  TokenType SEP_DateOrOffset
  TokenType RegularTokenMask
  TokenType SeparatorTokenMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Guid
Наследуется от: ValueType
Поля:
  Guid Empty
  int _a
  short _b
  short _c
  byte _d
  byte _e
  byte _f
  byte _g
  byte _h
  byte _i
  byte _j
  byte _k
Свойства:
Методы:
  Guid NewGuid()
  void .ctor(Byte[] b)
  void .ctor(ReadOnlySpan`1<byte> b)
  void .ctor(UInt32 a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k)
  void .ctor(int a, short b, short c, Byte[] d)
  void .ctor(int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k)
  void .ctor(string g)
  Guid Parse(string input)
  Guid Parse(ReadOnlySpan`1<char> input)
  bool TryParse(string input, Guid& result)
  bool TryParse(ReadOnlySpan`1<char> input, Guid& result)
  Guid ParseExact(string input, string format)
  Guid ParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format)
  bool TryParseExact(string input, string format, Guid& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, Guid& result)
  bool TryParseGuid(ReadOnlySpan`1<char> guidString, GuidStyles flags, GuidResult& result)
  bool TryParseGuidWithHexPrefix(ReadOnlySpan`1<char> guidString, GuidResult& result)
  bool TryParseGuidWithNoStyle(ReadOnlySpan`1<char> guidString, GuidResult& result)
  bool TryParseGuidWithDashes(ReadOnlySpan`1<char> guidString, GuidResult& result)
  bool StringToShort(ReadOnlySpan`1<char> str, int requiredLength, int flags, Int16& result, GuidResult& parseResult)
  bool StringToShort(ReadOnlySpan`1<char> str, Int32& parsePos, int requiredLength, int flags, Int16& result, GuidResult& parseResult)
  bool StringToInt(ReadOnlySpan`1<char> str, int requiredLength, int flags, Int32& result, GuidResult& parseResult)
  bool StringToInt(ReadOnlySpan`1<char> str, Int32& parsePos, int requiredLength, int flags, Int32& result, GuidResult& parseResult)
  bool StringToLong(ReadOnlySpan`1<char> str, Int32& parsePos, int flags, Int64& result, GuidResult& parseResult)
  ReadOnlySpan`1<char> EatAllWhitespace(ReadOnlySpan`1<char> str)
  bool IsHexPrefix(ReadOnlySpan`1<char> str, int i)
  void WriteByteHelper(Span`1<byte> destination)
  Byte[] ToByteArray()
  bool TryWriteBytes(Span`1<byte> destination)
  string ToString()
  int GetHashCode()
  bool Equals(object o)
  bool Equals(Guid g)
  int GetResult(UInt32 me, UInt32 them)
  int CompareTo(object value)
  int CompareTo(Guid value)
  bool op_Equality(Guid a, Guid b)
  bool op_Inequality(Guid a, Guid b)
  string ToString(string format)
  char HexToChar(int a)
  int HexsToChars(Char* guidChars, int a, int b)
  int HexsToCharsHexOutput(Char* guidChars, int a, int b)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format)
  bool System.ISpanFormattable.TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  Byte[] FastNewGuidArray()
  void .cctor()
--------------------------------------------------
Класс: System.HResults
Наследуется от: object
Поля:
  int COR_E_ABANDONEDMUTEX
  int COR_E_AMBIGUOUSMATCH
  int COR_E_AMBIGUOUSIMPLEMENTATION
  int COR_E_APPDOMAINUNLOADED
  int COR_E_APPLICATION
  int COR_E_ARGUMENT
  int COR_E_ARGUMENTOUTOFRANGE
  int COR_E_ARITHMETIC
  int COR_E_ARRAYTYPEMISMATCH
  int COR_E_BADEXEFORMAT
  int COR_E_BADIMAGEFORMAT
  int COR_E_CANNOTUNLOADAPPDOMAIN
  int COR_E_COMEMULATE
  int COR_E_CONTEXTMARSHAL
  int COR_E_CUSTOMATTRIBUTEFORMAT
  int COR_E_DATAMISALIGNED
  int COR_E_DIRECTORYNOTFOUND
  int COR_E_DIVIDEBYZERO
  int COR_E_DLLNOTFOUND
  int COR_E_DUPLICATEWAITOBJECT
  int COR_E_ENDOFSTREAM
  int COR_E_ENTRYPOINTNOTFOUND
  int COR_E_EXCEPTION
  int COR_E_EXECUTIONENGINE
  int COR_E_FIELDACCESS
  int COR_E_FILELOAD
  int COR_E_FILENOTFOUND
  int COR_E_FORMAT
  int COR_E_HOSTPROTECTION
  int COR_E_INDEXOUTOFRANGE
  int COR_E_INSUFFICIENTEXECUTIONSTACK
  int COR_E_INSUFFICIENTMEMORY
  int COR_E_INVALIDCAST
  int COR_E_INVALIDCOMOBJECT
  int COR_E_INVALIDFILTERCRITERIA
  int COR_E_INVALIDOLEVARIANTTYPE
  int COR_E_INVALIDOPERATION
  int COR_E_INVALIDPROGRAM
  int COR_E_IO
  int COR_E_KEYNOTFOUND
  int COR_E_MARSHALDIRECTIVE
  int COR_E_MEMBERACCESS
  int COR_E_METHODACCESS
  int COR_E_MISSINGFIELD
  int COR_E_MISSINGMANIFESTRESOURCE
  int COR_E_MISSINGMEMBER
  int COR_E_MISSINGMETHOD
  int COR_E_MISSINGSATELLITEASSEMBLY
  int COR_E_MULTICASTNOTSUPPORTED
  int COR_E_NOTFINITENUMBER
  int COR_E_NOTSUPPORTED
  int COR_E_NULLREFERENCE
  int COR_E_OBJECTDISPOSED
  int COR_E_OPERATIONCANCELED
  int COR_E_OUTOFMEMORY
  int COR_E_OVERFLOW
  int COR_E_PATHTOOLONG
  int COR_E_PLATFORMNOTSUPPORTED
  int COR_E_RANK
  int COR_E_REFLECTIONTYPELOAD
  int COR_E_RUNTIMEWRAPPED
  int COR_E_SAFEARRAYRANKMISMATCH
  int COR_E_SAFEARRAYTYPEMISMATCH
  int COR_E_SAFEHANDLEMISSINGATTRIBUTE
  int COR_E_SECURITY
  int COR_E_SEMAPHOREFULL
  int COR_E_SERIALIZATION
  int COR_E_STACKOVERFLOW
  int COR_E_SYNCHRONIZATIONLOCK
  int COR_E_SYSTEM
  int COR_E_TARGET
  int COR_E_TARGETINVOCATION
  int COR_E_TARGETPARAMCOUNT
  int COR_E_THREADABORTED
  int COR_E_THREADINTERRUPTED
  int COR_E_THREADSTART
  int COR_E_THREADSTATE
  int COR_E_THREADSTOP
  int COR_E_TIMEOUT
  int COR_E_TYPEACCESS
  int COR_E_TYPEINITIALIZATION
  int COR_E_TYPELOAD
  int COR_E_TYPEUNLOADED
  int COR_E_UNAUTHORIZEDACCESS
  int COR_E_UNSUPPORTEDFORMAT
  int COR_E_VERIFICATION
  int COR_E_WAITHANDLECANNOTBEOPENED
  int DISP_E_OVERFLOW
  int E_BOUNDS
  int E_CHANGED_STATE
  int E_FAIL
  int E_HANDLE
  int E_INVALIDARG
  int E_NOTIMPL
  int E_POINTER
  int ERROR_MRM_MAP_NOT_FOUND
  int RO_E_CLOSED
  int TYPE_E_TYPEMISMATCH
Свойства:
Методы:
--------------------------------------------------
Класс: System.HashCode
Наследуется от: ValueType
Поля:
  UInt32 s_seed
  UInt32 Prime1
  UInt32 Prime2
  UInt32 Prime3
  UInt32 Prime4
  UInt32 Prime5
  UInt32 _v1
  UInt32 _v2
  UInt32 _v3
  UInt32 _v4
  UInt32 _queue1
  UInt32 _queue2
  UInt32 _queue3
  UInt32 _length
Свойства:
Методы:
  UInt32 GenerateGlobalSeed()
  int Combine(T1 value1)
  int Combine(T1 value1, T2 value2)
  int Combine(T1 value1, T2 value2, T3 value3)
  int Combine(T1 value1, T2 value2, T3 value3, T4 value4)
  int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5)
  int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6)
  int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7)
  int Combine(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8)
  UInt32 Rol(UInt32 value, int count)
  void Initialize(UInt32& v1, UInt32& v2, UInt32& v3, UInt32& v4)
  UInt32 Round(UInt32 hash, UInt32 input)
  UInt32 QueueRound(UInt32 hash, UInt32 queuedValue)
  UInt32 MixState(UInt32 v1, UInt32 v2, UInt32 v3, UInt32 v4)
  UInt32 MixEmptyState()
  UInt32 MixFinal(UInt32 hash)
  void Add(T value)
  void Add(T value, IEqualityComparer`1<T> comparer)
  void Add(int value)
  int ToHashCode()
  int GetHashCode()
  bool Equals(object obj)
  void .cctor()
--------------------------------------------------
Класс: System.IAsyncDisposable
Поля:
Свойства:
Методы:
  ValueTask DisposeAsync()
--------------------------------------------------
Класс: System.IAsyncResult
Поля:
Свойства:
  bool IsCompleted
  WaitHandle AsyncWaitHandle
  object AsyncState
  bool CompletedSynchronously
Методы:
  bool get_IsCompleted()
  WaitHandle get_AsyncWaitHandle()
  object get_AsyncState()
  bool get_CompletedSynchronously()
--------------------------------------------------
Класс: System.ICloneable
Поля:
Свойства:
Методы:
  object Clone()
--------------------------------------------------
Класс: System.IComparable
Поля:
Свойства:
Методы:
  int CompareTo(object obj)
--------------------------------------------------
Класс: System.IComparable`1
Поля:
Свойства:
Методы:
  int CompareTo(T other)
--------------------------------------------------
Класс: System.IConvertible
Поля:
Свойства:
Методы:
  TypeCode GetTypeCode()
  bool ToBoolean(IFormatProvider provider)
  char ToChar(IFormatProvider provider)
  sbyte ToSByte(IFormatProvider provider)
  byte ToByte(IFormatProvider provider)
  short ToInt16(IFormatProvider provider)
  ushort ToUInt16(IFormatProvider provider)
  int ToInt32(IFormatProvider provider)
  UInt32 ToUInt32(IFormatProvider provider)
  long ToInt64(IFormatProvider provider)
  ulong ToUInt64(IFormatProvider provider)
  float ToSingle(IFormatProvider provider)
  double ToDouble(IFormatProvider provider)
  decimal ToDecimal(IFormatProvider provider)
  DateTime ToDateTime(IFormatProvider provider)
  string ToString(IFormatProvider provider)
  object ToType(Type conversionType, IFormatProvider provider)
--------------------------------------------------
Класс: System.ICustomFormatter
Поля:
Свойства:
Методы:
  string Format(string format, object arg, IFormatProvider formatProvider)
--------------------------------------------------
Класс: System.IDisposable
Поля:
Свойства:
Методы:
  void Dispose()
--------------------------------------------------
Класс: System.IEquatable`1
Поля:
Свойства:
Методы:
  bool Equals(T other)
--------------------------------------------------
Класс: System.IFormatProvider
Поля:
Свойства:
Методы:
  object GetFormat(Type formatType)
--------------------------------------------------
Класс: System.IFormattable
Поля:
Свойства:
Методы:
  string ToString(string format, IFormatProvider formatProvider)
--------------------------------------------------
Класс: System.IObservable`1
Поля:
Свойства:
Методы:
  IDisposable Subscribe(IObserver`1<T> observer)
--------------------------------------------------
Класс: System.IObserver`1
Поля:
Свойства:
Методы:
  void OnNext(T value)
  void OnError(Exception error)
  void OnCompleted()
--------------------------------------------------
Класс: System.IProgress`1
Поля:
Свойства:
Методы:
  void Report(T value)
--------------------------------------------------
Класс: System.ISpanFormattable
Поля:
Свойства:
Методы:
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
--------------------------------------------------
Класс: System.Index
Наследуется от: ValueType
Поля:
  int _value
Свойства:
  Index Start
  Index End
  int Value
  bool IsFromEnd
Методы:
  void .ctor(int value, bool fromEnd)
  void .ctor(int value)
  Index get_Start()
  Index get_End()
  Index FromStart(int value)
  Index FromEnd(int value)
  int get_Value()
  bool get_IsFromEnd()
  int GetOffset(int length)
  bool Equals(object value)
  bool Equals(Index other)
  int GetHashCode()
  Index op_Implicit(int value)
  string ToString()
  string ToStringFromEnd()
--------------------------------------------------
Класс: System.IndexOutOfRangeException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.InsufficientExecutionStackException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Int16
Наследуется от: ValueType
Поля:
  short m_value
  short MaxValue
  short MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(short value)
  bool Equals(object obj)
  bool Equals(short obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  short Parse(string s)
  short Parse(string s, NumberStyles style)
  short Parse(string s, IFormatProvider provider)
  short Parse(string s, NumberStyles style, IFormatProvider provider)
  short Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  short Parse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info)
  bool TryParse(string s, Int16& result)
  bool TryParse(ReadOnlySpan`1<char> s, Int16& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Int16& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Int16& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info, Int16& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.Int32
Наследуется от: ValueType
Поля:
  int m_value
  int MaxValue
  int MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(int value)
  bool Equals(object obj)
  bool Equals(int obj)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider provider)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  int Parse(string s)
  int Parse(string s, NumberStyles style)
  int Parse(string s, IFormatProvider provider)
  int Parse(string s, NumberStyles style, IFormatProvider provider)
  int Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, Int32& result)
  bool TryParse(ReadOnlySpan`1<char> s, Int32& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Int32& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Int32& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.Int64
Наследуется от: ValueType
Поля:
  long m_value
  long MaxValue
  long MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(long value)
  bool Equals(object obj)
  bool Equals(long obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  long Parse(string s)
  long Parse(string s, NumberStyles style)
  long Parse(string s, IFormatProvider provider)
  long Parse(string s, NumberStyles style, IFormatProvider provider)
  long Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, Int64& result)
  bool TryParse(ReadOnlySpan`1<char> s, Int64& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Int64& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Int64& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.InvalidCastException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, int errorCode)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.InvalidOperationException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.InvalidProgramException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.InvalidTimeZoneException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.LazyState
Наследуется от: Enum
Поля:
  int value__
  LazyState NoneViaConstructor
  LazyState NoneViaFactory
  LazyState NoneException
  LazyState PublicationOnlyViaConstructor
  LazyState PublicationOnlyViaFactory
  LazyState PublicationOnlyWait
  LazyState PublicationOnlyException
  LazyState ExecutionAndPublicationViaConstructor
  LazyState ExecutionAndPublicationViaFactory
  LazyState ExecutionAndPublicationException
Свойства:
Методы:
--------------------------------------------------
Класс: System.LazyHelper
Наследуется от: object
Поля:
  LazyHelper NoneViaConstructor
  LazyHelper NoneViaFactory
  LazyHelper PublicationOnlyViaConstructor
  LazyHelper PublicationOnlyViaFactory
  LazyHelper PublicationOnlyWaitForOtherThreadToPublish
  LazyState <State>k__BackingField
  ExceptionDispatchInfo _exceptionDispatch
Свойства:
  LazyState State
Методы:
  LazyState get_State()
  void .ctor(LazyState state)
  void .ctor(LazyThreadSafetyMode mode, Exception exception)
  void ThrowException()
  LazyThreadSafetyMode GetMode()
  Nullable`1<LazyThreadSafetyMode> GetMode(LazyHelper state)
  bool GetIsValueFaulted(LazyHelper state)
  LazyHelper Create(LazyThreadSafetyMode mode, bool useDefaultConstructor)
  object CreateViaDefaultConstructor(Type type)
  LazyThreadSafetyMode GetModeFromIsThreadSafe(bool isThreadSafe)
  void .cctor()
--------------------------------------------------
Класс: System.Lazy`1
Наследуется от: object
Поля:
  LazyHelper modreq(System.Runtime.CompilerServices.IsVolatile) _state
  Func`1<T> _factory
  T _value
Свойства:
  T ValueForDebugDisplay
  Nullable`1<LazyThreadSafetyMode> Mode
  bool IsValueFaulted
  bool IsValueCreated
  T Value
Методы:
  T CreateViaDefaultConstructor()
  void .ctor()
  void .ctor(T value)
  void .ctor(Func`1<T> valueFactory)
  void .ctor(bool isThreadSafe)
  void .ctor(LazyThreadSafetyMode mode)
  void .ctor(Func`1<T> valueFactory, bool isThreadSafe)
  void .ctor(Func`1<T> valueFactory, LazyThreadSafetyMode mode)
  void .ctor(Func`1<T> valueFactory, LazyThreadSafetyMode mode, bool useDefaultConstructor)
  void ViaConstructor()
  void ViaFactory(LazyThreadSafetyMode mode)
  void ExecutionAndPublication(LazyHelper executionAndPublication, bool useDefaultConstructor)
  void PublicationOnly(LazyHelper publicationOnly, T possibleValue)
  void PublicationOnlyViaConstructor(LazyHelper initializer)
  void PublicationOnlyViaFactory(LazyHelper initializer)
  void PublicationOnlyWaitForOtherThreadToPublish()
  T CreateValue()
  string ToString()
  T get_ValueForDebugDisplay()
  Nullable`1<LazyThreadSafetyMode> get_Mode()
  bool get_IsValueFaulted()
  bool get_IsValueCreated()
  T get_Value()
--------------------------------------------------
Класс: System.LazyDebugView`1
Наследуется от: object
Поля:
  Lazy`1<T> _lazy
Свойства:
  bool IsValueCreated
  T Value
  Nullable`1<LazyThreadSafetyMode> Mode
  bool IsValueFaulted
Методы:
  void .ctor(Lazy`1<T> lazy)
  bool get_IsValueCreated()
  T get_Value()
  Nullable`1<LazyThreadSafetyMode> get_Mode()
  bool get_IsValueFaulted()
--------------------------------------------------
Класс: System.Marvin
Наследуется от: object
Поля:
  ulong <DefaultSeed>k__BackingField
Свойства:
  ulong DefaultSeed
Методы:
  int ComputeHash32(ReadOnlySpan`1<byte> data, ulong seed)
  int ComputeHash32(Byte& data, int count, ulong seed)
  void Block(UInt32& rp0, UInt32& rp1)
  UInt32 _rotl(UInt32 value, int shift)
  ulong get_DefaultSeed()
  ulong GenerateSeed()
  void .cctor()
--------------------------------------------------
Класс: System.Math
Наследуется от: object
Поля:
  double E
  double PI
  int maxRoundingDigits
  double doubleRoundLimit
  Double[] roundPower10Double
Свойства:
Методы:
  short Abs(short value)
  int Abs(int value)
  long Abs(long value)
  sbyte Abs(sbyte value)
  decimal Abs(decimal value)
  void ThrowAbsOverflow()
  long BigMul(int a, int b)
  int DivRem(int a, int b, Int32& result)
  long DivRem(long a, long b, Int64& result)
  UInt32 DivRem(UInt32 a, UInt32 b, UInt32& result)
  ulong DivRem(ulong a, ulong b, UInt64& result)
  decimal Ceiling(decimal d)
  byte Clamp(byte value, byte min, byte max)
  decimal Clamp(decimal value, decimal min, decimal max)
  double Clamp(double value, double min, double max)
  short Clamp(short value, short min, short max)
  int Clamp(int value, int min, int max)
  long Clamp(long value, long min, long max)
  sbyte Clamp(sbyte value, sbyte min, sbyte max)
  float Clamp(float value, float min, float max)
  ushort Clamp(ushort value, ushort min, ushort max)
  UInt32 Clamp(UInt32 value, UInt32 min, UInt32 max)
  ulong Clamp(ulong value, ulong min, ulong max)
  decimal Floor(decimal d)
  double IEEERemainder(double x, double y)
  double Log(double a, double newBase)
  byte Max(byte val1, byte val2)
  decimal Max(decimal val1, decimal val2)
  double Max(double val1, double val2)
  short Max(short val1, short val2)
  int Max(int val1, int val2)
  long Max(long val1, long val2)
  sbyte Max(sbyte val1, sbyte val2)
  float Max(float val1, float val2)
  ushort Max(ushort val1, ushort val2)
  UInt32 Max(UInt32 val1, UInt32 val2)
  ulong Max(ulong val1, ulong val2)
  byte Min(byte val1, byte val2)
  decimal Min(decimal val1, decimal val2)
  double Min(double val1, double val2)
  short Min(short val1, short val2)
  int Min(int val1, int val2)
  long Min(long val1, long val2)
  sbyte Min(sbyte val1, sbyte val2)
  float Min(float val1, float val2)
  ushort Min(ushort val1, ushort val2)
  UInt32 Min(UInt32 val1, UInt32 val2)
  ulong Min(ulong val1, ulong val2)
  decimal Round(decimal d)
  decimal Round(decimal d, int decimals)
  decimal Round(decimal d, MidpointRounding mode)
  decimal Round(decimal d, int decimals, MidpointRounding mode)
  double Round(double a)
  double Round(double value, int digits)
  double Round(double value, MidpointRounding mode)
  double Round(double value, int digits, MidpointRounding mode)
  int Sign(decimal value)
  int Sign(double value)
  int Sign(short value)
  int Sign(int value)
  int Sign(long value)
  int Sign(sbyte value)
  int Sign(float value)
  decimal Truncate(decimal d)
  double Truncate(double d)
  double copysign(double x, double y)
  void ThrowMinMaxException(T min, T max)
  double Abs(double value)
  float Abs(float value)
  double Acos(double d)
  double Acosh(double d)
  double Asin(double d)
  double Asinh(double d)
  double Atan(double d)
  double Atan2(double y, double x)
  double Atanh(double d)
  double Cbrt(double d)
  double Ceiling(double a)
  double Cos(double d)
  double Cosh(double value)
  double Exp(double d)
  double Floor(double d)
  double Log(double d)
  double Log10(double d)
  double Pow(double x, double y)
  double Sin(double a)
  double Sinh(double value)
  double Sqrt(double d)
  double Tan(double a)
  double Tanh(double value)
  double FMod(double x, double y)
  double ModF(double x, Double* intptr)
  void .cctor()
--------------------------------------------------
Класс: System.MathF
Наследуется от: object
Поля:
  float E
  float PI
  int maxRoundingDigits
  Single[] roundPower10Single
  float singleRoundLimit
Свойства:
Методы:
  float Abs(float x)
  float IEEERemainder(float x, float y)
  float Log(float x, float y)
  float Max(float x, float y)
  float Min(float x, float y)
  float Round(float x)
  float Round(float x, int digits)
  float Round(float x, MidpointRounding mode)
  float Round(float x, int digits, MidpointRounding mode)
  int Sign(float x)
  float Truncate(float x)
  float CopySign(float x, float y)
  float Acos(float x)
  float Acosh(float x)
  float Asin(float x)
  float Asinh(float x)
  float Atan(float x)
  float Atan2(float y, float x)
  float Atanh(float x)
  float Cbrt(float x)
  float Ceiling(float x)
  float Cos(float x)
  float Cosh(float x)
  float Exp(float x)
  float Floor(float x)
  float Log(float x)
  float Log10(float x)
  float Pow(float x, float y)
  float Sin(float x)
  float Sinh(float x)
  float Sqrt(float x)
  float Tan(float x)
  float Tanh(float x)
  float FMod(float x, float y)
  float ModF(float x, Single* intptr)
  void .cctor()
--------------------------------------------------
Класс: System.MemberAccessException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Memory`1
Наследуется от: ValueType
Поля:
  object _object
  int _index
  int _length
  int RemoveFlagsBitMask
Свойства:
  Memory`1<T> Empty
  int Length
  bool IsEmpty
  Span`1<T> Span
Методы:
  void .ctor(T[] array)
  void .ctor(T[] array, int start)
  void .ctor(T[] array, int start, int length)
  void .ctor(MemoryManager`1<T> manager, int length)
  void .ctor(MemoryManager`1<T> manager, int start, int length)
  void .ctor(object obj, int start, int length)
  Memory`1<T> op_Implicit(T[] array)
  Memory`1<T> op_Implicit(ArraySegment`1<T> segment)
  ReadOnlyMemory`1<T> op_Implicit(Memory`1<T> memory)
  Memory`1<T> get_Empty()
  int get_Length()
  bool get_IsEmpty()
  string ToString()
  Memory`1<T> Slice(int start)
  Memory`1<T> Slice(int start, int length)
  Span`1<T> get_Span()
  void CopyTo(Memory`1<T> destination)
  bool TryCopyTo(Memory`1<T> destination)
  MemoryHandle Pin()
  T[] ToArray()
  bool Equals(object obj)
  bool Equals(Memory`1<T> other)
  int GetHashCode()
  int CombineHashCodes(int left, int right)
  int CombineHashCodes(int h1, int h2, int h3)
--------------------------------------------------
Класс: System.MemoryDebugView`1
Наследуется от: object
Поля:
  ReadOnlyMemory`1<T> _memory
Свойства:
  T[] Items
Методы:
  void .ctor(Memory`1<T> memory)
  void .ctor(ReadOnlyMemory`1<T> memory)
  T[] get_Items()
--------------------------------------------------
Класс: System.MemoryExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Contains(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, StringComparison comparisonType)
  bool Equals(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> other, StringComparison comparisonType)
  bool EqualsOrdinal(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value)
  bool EqualsOrdinalIgnoreCase(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value)
  bool Contains(ReadOnlySpan`1<char> source, char value)
  int CompareTo(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> other, StringComparison comparisonType)
  int IndexOf(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, StringComparison comparisonType)
  int ToLower(ReadOnlySpan`1<char> source, Span`1<char> destination, CultureInfo culture)
  int ToLowerInvariant(ReadOnlySpan`1<char> source, Span`1<char> destination)
  int ToUpper(ReadOnlySpan`1<char> source, Span`1<char> destination, CultureInfo culture)
  int ToUpperInvariant(ReadOnlySpan`1<char> source, Span`1<char> destination)
  bool EndsWith(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, StringComparison comparisonType)
  bool StartsWith(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, StringComparison comparisonType)
  Span`1<T> AsSpan(T[] array, int start)
  Span`1<T> AsSpan(T[] array, Index startIndex)
  Span`1<T> AsSpan(T[] array, Range range)
  ReadOnlySpan`1<char> AsSpan(string text)
  ReadOnlySpan`1<char> AsSpan(string text, int start)
  ReadOnlySpan`1<char> AsSpan(string text, int start, int length)
  ReadOnlyMemory`1<char> AsMemory(string text)
  ReadOnlyMemory`1<char> AsMemory(string text, int start)
  ReadOnlyMemory`1<char> AsMemory(string text, Index startIndex)
  ReadOnlyMemory`1<char> AsMemory(string text, int start, int length)
  ReadOnlyMemory`1<char> AsMemory(string text, Range range)
  ReadOnlySpan`1<char> Trim(ReadOnlySpan`1<char> span)
  ReadOnlySpan`1<char> TrimStart(ReadOnlySpan`1<char> span)
  ReadOnlySpan`1<char> TrimEnd(ReadOnlySpan`1<char> span)
  ReadOnlySpan`1<char> Trim(ReadOnlySpan`1<char> span, char trimChar)
  ReadOnlySpan`1<char> TrimStart(ReadOnlySpan`1<char> span, char trimChar)
  ReadOnlySpan`1<char> TrimEnd(ReadOnlySpan`1<char> span, char trimChar)
  ReadOnlySpan`1<char> Trim(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> trimChars)
  ReadOnlySpan`1<char> TrimStart(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> trimChars)
  ReadOnlySpan`1<char> TrimEnd(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> trimChars)
  bool IsWhiteSpace(ReadOnlySpan`1<char> span)
  int IndexOf(Span`1<T> span, T value)
  int IndexOf(Span`1<T> span, ReadOnlySpan`1<T> value)
  int LastIndexOf(Span`1<T> span, T value)
  int LastIndexOf(Span`1<T> span, ReadOnlySpan`1<T> value)
  bool SequenceEqual(Span`1<T> span, ReadOnlySpan`1<T> other)
  int SequenceCompareTo(Span`1<T> span, ReadOnlySpan`1<T> other)
  int IndexOf(ReadOnlySpan`1<T> span, T value)
  int IndexOf(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> value)
  int LastIndexOf(ReadOnlySpan`1<T> span, T value)
  int LastIndexOf(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> value)
  int IndexOfAny(Span`1<T> span, T value0, T value1)
  int IndexOfAny(Span`1<T> span, T value0, T value1, T value2)
  int IndexOfAny(Span`1<T> span, ReadOnlySpan`1<T> values)
  int IndexOfAny(ReadOnlySpan`1<T> span, T value0, T value1)
  int IndexOfAny(ReadOnlySpan`1<T> span, T value0, T value1, T value2)
  int IndexOfAny(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> values)
  int LastIndexOfAny(Span`1<T> span, T value0, T value1)
  int LastIndexOfAny(Span`1<T> span, T value0, T value1, T value2)
  int LastIndexOfAny(Span`1<T> span, ReadOnlySpan`1<T> values)
  int LastIndexOfAny(ReadOnlySpan`1<T> span, T value0, T value1)
  int LastIndexOfAny(ReadOnlySpan`1<T> span, T value0, T value1, T value2)
  int LastIndexOfAny(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> values)
  bool SequenceEqual(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> other)
  int SequenceCompareTo(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> other)
  bool StartsWith(Span`1<T> span, ReadOnlySpan`1<T> value)
  bool StartsWith(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> value)
  bool EndsWith(Span`1<T> span, ReadOnlySpan`1<T> value)
  bool EndsWith(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> value)
  void Reverse(Span`1<T> span)
  Span`1<T> AsSpan(T[] array)
  Span`1<T> AsSpan(T[] array, int start, int length)
  Span`1<T> AsSpan(ArraySegment`1<T> segment)
  Span`1<T> AsSpan(ArraySegment`1<T> segment, int start)
  Span`1<T> AsSpan(ArraySegment`1<T> segment, Index startIndex)
  Span`1<T> AsSpan(ArraySegment`1<T> segment, int start, int length)
  Span`1<T> AsSpan(ArraySegment`1<T> segment, Range range)
  Memory`1<T> AsMemory(T[] array)
  Memory`1<T> AsMemory(T[] array, int start)
  Memory`1<T> AsMemory(T[] array, Index startIndex)
  Memory`1<T> AsMemory(T[] array, int start, int length)
  Memory`1<T> AsMemory(T[] array, Range range)
  Memory`1<T> AsMemory(ArraySegment`1<T> segment)
  Memory`1<T> AsMemory(ArraySegment`1<T> segment, int start)
  Memory`1<T> AsMemory(ArraySegment`1<T> segment, int start, int length)
  void CopyTo(T[] source, Span`1<T> destination)
  void CopyTo(T[] source, Memory`1<T> destination)
  bool Overlaps(Span`1<T> span, ReadOnlySpan`1<T> other)
  bool Overlaps(Span`1<T> span, ReadOnlySpan`1<T> other, Int32& elementOffset)
  bool Overlaps(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> other)
  bool Overlaps(ReadOnlySpan`1<T> span, ReadOnlySpan`1<T> other, Int32& elementOffset)
  int BinarySearch(Span`1<T> span, IComparable`1<T> comparable)
  int BinarySearch(Span`1<T> span, TComparable comparable)
  int BinarySearch(Span`1<T> span, T value, TComparer comparer)
  int BinarySearch(ReadOnlySpan`1<T> span, IComparable`1<T> comparable)
  int BinarySearch(ReadOnlySpan`1<T> span, TComparable comparable)
  int BinarySearch(ReadOnlySpan`1<T> span, T value, TComparer comparer)
  bool IsTypeComparableAsBytes(UInt64& size)
--------------------------------------------------
Класс: System.MethodAccessException
Наследуется от: MemberAccessException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.MidpointRounding
Наследуется от: Enum
Поля:
  int value__
  MidpointRounding ToEven
  MidpointRounding AwayFromZero
Свойства:
Методы:
--------------------------------------------------
Класс: System.MissingMethodException
Наследуется от: MissingMemberException
Поля:
Свойства:
  string Message
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string className, string methodName)
  void .ctor(SerializationInfo info, StreamingContext context)
  string get_Message()
--------------------------------------------------
Класс: System.MulticastNotSupportedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.NonSerializedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.NotFiniteNumberException
Наследуется от: ArithmeticException
Поля:
  double _offendingNumber
Свойства:
  double OffendingNumber
Методы:
  void .ctor()
  void .ctor(double offendingNumber)
  void .ctor(string message)
  void .ctor(string message, double offendingNumber)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, double offendingNumber, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  double get_OffendingNumber()
--------------------------------------------------
Класс: System.NotImplementedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.NotSupportedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.NullReferenceException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Nullable`1
Наследуется от: ValueType
Поля:
  bool hasValue
  T value
Свойства:
  bool HasValue
  T Value
Методы:
  void .ctor(T value)
  bool get_HasValue()
  T get_Value()
  T GetValueOrDefault()
  T GetValueOrDefault(T defaultValue)
  bool Equals(object other)
  int GetHashCode()
  string ToString()
  Nullable`1<T> op_Implicit(T value)
  T op_Explicit(Nullable`1<T> value)
  object Box(Nullable`1<T> o)
  Nullable`1<T> Unbox(object o)
  Nullable`1<T> UnboxExact(object o)
--------------------------------------------------
Класс: System.Nullable
Наследуется от: object
Поля:
Свойства:
Методы:
  int Compare(Nullable`1<T> n1, Nullable`1<T> n2)
  bool Equals(Nullable`1<T> n1, Nullable`1<T> n2)
  Type GetUnderlyingType(Type nullableType)
--------------------------------------------------
Класс: System.Number
Наследуется от: object
Поля:
  int DecimalPrecision
  int FloatPrecision
  int DoublePrecision
  int ScaleNAN
  int ScaleINF
  int MaxUInt32DecDigits
  int CharStackBufferSize
  string PosNumberFormat
  String[] s_posCurrencyFormats
  String[] s_negCurrencyFormats
  String[] s_posPercentFormats
  String[] s_negPercentFormats
  String[] s_negNumberFormats
  int NumberMaxDigits
  int Int32Precision
  int UInt32Precision
  int Int64Precision
  int UInt64Precision
  Int32[] s_charToHexLookup
  int _CVTBUFSIZE
  UInt64[] s_rgval64Power10
  SByte[] s_rgexp64Power10
  UInt64[] s_rgval64Power10By16
  Int16[] s_rgexp64Power10By16
Свойства:
Методы:
  string FormatDecimal(decimal value, ReadOnlySpan`1<char> format, NumberFormatInfo info)
  bool TryFormatDecimal(decimal value, ReadOnlySpan`1<char> format, NumberFormatInfo info, Span`1<char> destination, Int32& charsWritten)
  void DecimalToNumber(decimal value, NumberBuffer& number)
  string FormatDouble(double value, string format, NumberFormatInfo info)
  bool TryFormatDouble(double value, ReadOnlySpan`1<char> format, NumberFormatInfo info, Span`1<char> destination, Int32& charsWritten)
  string FormatDouble(ValueStringBuilder& sb, double value, ReadOnlySpan`1<char> format, NumberFormatInfo info)
  string FormatSingle(float value, string format, NumberFormatInfo info)
  bool TryFormatSingle(float value, ReadOnlySpan`1<char> format, NumberFormatInfo info, Span`1<char> destination, Int32& charsWritten)
  string FormatSingle(ValueStringBuilder& sb, float value, ReadOnlySpan`1<char> format, NumberFormatInfo info)
  bool TryCopyTo(string source, Span`1<char> destination, Int32& charsWritten)
  string FormatInt32(int value, ReadOnlySpan`1<char> format, IFormatProvider provider)
  bool TryFormatInt32(int value, ReadOnlySpan`1<char> format, IFormatProvider provider, Span`1<char> destination, Int32& charsWritten)
  string FormatUInt32(UInt32 value, ReadOnlySpan`1<char> format, IFormatProvider provider)
  bool TryFormatUInt32(UInt32 value, ReadOnlySpan`1<char> format, IFormatProvider provider, Span`1<char> destination, Int32& charsWritten)
  string FormatInt64(long value, ReadOnlySpan`1<char> format, IFormatProvider provider)
  bool TryFormatInt64(long value, ReadOnlySpan`1<char> format, IFormatProvider provider, Span`1<char> destination, Int32& charsWritten)
  string FormatUInt64(ulong value, ReadOnlySpan`1<char> format, IFormatProvider provider)
  bool TryFormatUInt64(ulong value, ReadOnlySpan`1<char> format, IFormatProvider provider, Span`1<char> destination, Int32& charsWritten)
  void Int32ToNumber(int value, NumberBuffer& number)
  string NegativeInt32ToDecStr(int value, int digits, string sNegative)
  bool TryNegativeInt32ToDecStr(int value, int digits, string sNegative, Span`1<char> destination, Int32& charsWritten)
  string Int32ToHexStr(int value, char hexBase, int digits)
  bool TryInt32ToHexStr(int value, char hexBase, int digits, Span`1<char> destination, Int32& charsWritten)
  Char* Int32ToHexChars(Char* buffer, UInt32 value, int hexBase, int digits)
  void UInt32ToNumber(UInt32 value, NumberBuffer& number)
  Char* UInt32ToDecChars(Char* bufferEnd, UInt32 value, int digits)
  string UInt32ToDecStr(UInt32 value, int digits)
  bool TryUInt32ToDecStr(UInt32 value, int digits, Span`1<char> destination, Int32& charsWritten)
  bool TryCopyTo(Char* src, int length, Span`1<char> destination, Int32& charsWritten)
  void Int64ToNumber(long input, NumberBuffer& number)
  string NegativeInt64ToDecStr(long input, int digits, string sNegative)
  bool TryNegativeInt64ToDecStr(long input, int digits, string sNegative, Span`1<char> destination, Int32& charsWritten)
  string Int64ToHexStr(long value, char hexBase, int digits)
  bool TryInt64ToHexStr(long value, char hexBase, int digits, Span`1<char> destination, Int32& charsWritten)
  void UInt64ToNumber(ulong value, NumberBuffer& number)
  string UInt64ToDecStr(ulong value, int digits)
  bool TryUInt64ToDecStr(ulong value, int digits, Span`1<char> destination, Int32& charsWritten)
  char ParseFormatSpecifier(ReadOnlySpan`1<char> format, Int32& digits)
  void NumberToString(ValueStringBuilder& sb, NumberBuffer& number, char format, int nMaxDigits, NumberFormatInfo info, bool isDecimal)
  void NumberToStringFormat(ValueStringBuilder& sb, NumberBuffer& number, ReadOnlySpan`1<char> format, NumberFormatInfo info)
  void FormatCurrency(ValueStringBuilder& sb, NumberBuffer& number, int nMinDigits, int nMaxDigits, NumberFormatInfo info)
  void FormatFixed(ValueStringBuilder& sb, NumberBuffer& number, int nMinDigits, int nMaxDigits, NumberFormatInfo info, Int32[] groupDigits, string sDecimal, string sGroup)
  void FormatNumber(ValueStringBuilder& sb, NumberBuffer& number, int nMinDigits, int nMaxDigits, NumberFormatInfo info)
  void FormatScientific(ValueStringBuilder& sb, NumberBuffer& number, int nMinDigits, int nMaxDigits, NumberFormatInfo info, char expChar)
  void FormatExponent(ValueStringBuilder& sb, NumberFormatInfo info, int value, char expChar, int minDigits, bool positiveSign)
  void FormatGeneral(ValueStringBuilder& sb, NumberBuffer& number, int nMinDigits, int nMaxDigits, NumberFormatInfo info, char expChar, bool bSuppressScientific)
  void FormatPercent(ValueStringBuilder& sb, NumberBuffer& number, int nMinDigits, int nMaxDigits, NumberFormatInfo info)
  void RoundNumber(NumberBuffer& number, int pos)
  int FindSection(ReadOnlySpan`1<char> format, int section)
  UInt32 Low32(ulong value)
  UInt32 High32(ulong value)
  UInt32 Int64DivMod1E9(UInt64& value)
  bool NumberToInt32(NumberBuffer& number, Int32& value)
  bool NumberToInt64(NumberBuffer& number, Int64& value)
  bool NumberToUInt32(NumberBuffer& number, UInt32& value)
  bool NumberToUInt64(NumberBuffer& number, UInt64& value)
  int ParseInt32(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  long ParseInt64(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  UInt32 ParseUInt32(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  ulong ParseUInt64(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  bool ParseNumber(Char*& str, Char* strEnd, NumberStyles styles, NumberBuffer& number, NumberFormatInfo info, bool parseDecimal)
  bool TryParseInt32(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Int32& result)
  bool TryParseInt32IntegerStyle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Int32& result, Boolean& failureIsOverflow)
  bool TryParseInt64IntegerStyle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Int64& result, Boolean& failureIsOverflow)
  bool TryParseInt64(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Int64& result)
  bool TryParseUInt32(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, UInt32& result)
  bool TryParseUInt32IntegerStyle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, UInt32& result, Boolean& failureIsOverflow)
  bool TryParseUInt32HexNumberStyle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, UInt32& result, Boolean& failureIsOverflow)
  bool TryParseUInt64(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, UInt64& result)
  bool TryParseUInt64IntegerStyle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, UInt64& result, Boolean& failureIsOverflow)
  bool TryParseUInt64HexNumberStyle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, UInt64& result, Boolean& failureIsOverflow)
  decimal ParseDecimal(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  bool NumberBufferToDecimal(NumberBuffer& number, Decimal& value)
  double ParseDouble(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  float ParseSingle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info)
  bool TryParseDecimal(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Decimal& result)
  bool TryParseDouble(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Double& result)
  bool TryParseSingle(ReadOnlySpan`1<char> value, NumberStyles styles, NumberFormatInfo info, Single& result)
  void StringToNumber(ReadOnlySpan`1<char> value, NumberStyles styles, NumberBuffer& number, NumberFormatInfo info, bool parseDecimal)
  bool TryStringToNumber(ReadOnlySpan`1<char> value, NumberStyles styles, NumberBuffer& number, NumberFormatInfo info, bool parseDecimal)
  bool TrailingZeros(ReadOnlySpan`1<char> value, int index)
  Char* MatchChars(Char* p, Char* pEnd, string value)
  bool IsWhite(int ch)
  bool IsDigit(int ch)
  void ThrowOverflowOrFormatException(bool overflow, string overflowResourceKey)
  bool NumberBufferToDouble(NumberBuffer& number, Double& value)
  UInt32 DigitsToInt(Char* p, int count)
  ulong Mul32x32To64(UInt32 a, UInt32 b)
  ulong Mul64Lossy(ulong a, ulong b, Int32& pexp)
  int abs(int value)
  double NumberToDouble(NumberBuffer& number)
  void DoubleToNumber(double value, int precision, NumberBuffer& number)
  void .cctor()
--------------------------------------------------
Класс: System.ObjectDisposedException
Наследуется от: InvalidOperationException
Поля:
  string _objectName
Свойства:
  string Message
  string ObjectName
Методы:
  void .ctor()
  void .ctor(string objectName)
  void .ctor(string objectName, string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Message()
  string get_ObjectName()
--------------------------------------------------
Класс: System.ObsoleteAttribute
Наследуется от: Attribute
Поля:
  string _message
  bool _error
Свойства:
  string Message
  bool IsError
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, bool error)
  string get_Message()
  bool get_IsError()
--------------------------------------------------
Класс: System.OperationCanceledException
Наследуется от: SystemException
Поля:
  CancellationToken _cancellationToken
Свойства:
  CancellationToken CancellationToken
Методы:
  CancellationToken get_CancellationToken()
  void set_CancellationToken(CancellationToken value)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(CancellationToken token)
  void .ctor(string message, CancellationToken token)
  void .ctor(string message, Exception innerException, CancellationToken token)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.OverflowException
Наследуется от: ArithmeticException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ParamArrayAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ParamsArray
Наследуется от: ValueType
Поля:
  Object[] s_oneArgArray
  Object[] s_twoArgArray
  Object[] s_threeArgArray
  object _arg0
  object _arg1
  object _arg2
  Object[] _args
Свойства:
  int Length
  object Item
Методы:
  void .ctor(object arg0)
  void .ctor(object arg0, object arg1)
  void .ctor(object arg0, object arg1, object arg2)
  void .ctor(Object[] args)
  int get_Length()
  object get_Item(int index)
  object GetAtSlow(int index)
  void .cctor()
--------------------------------------------------
Класс: System.ParseNumbers
Наследуется от: object
Поля:
  int LeftAlign
  int RightAlign
  int PrefixSpace
  int PrintSign
  int PrintBase
  int PrintAsI1
  int PrintAsI2
  int PrintAsI4
  int TreatAsUnsigned
  int TreatAsI1
  int TreatAsI2
  int IsTight
  int NoSpace
  int PrintRadixBase
  int MinRadix
  int MaxRadix
Свойства:
Методы:
  long StringToLong(ReadOnlySpan`1<char> s, int radix, int flags)
  long StringToLong(ReadOnlySpan`1<char> s, int radix, int flags, Int32& currPos)
  int StringToInt(ReadOnlySpan`1<char> s, int radix, int flags)
  int StringToInt(ReadOnlySpan`1<char> s, int radix, int flags, Int32& currPos)
  string IntToString(int n, int radix, int width, char paddingChar, int flags)
  string LongToString(long n, int radix, int width, char paddingChar, int flags)
  void EatWhiteSpace(ReadOnlySpan`1<char> s, Int32& i)
  long GrabLongs(int radix, ReadOnlySpan`1<char> s, Int32& i, bool isUnsigned)
  int GrabInts(int radix, ReadOnlySpan`1<char> s, Int32& i, bool isUnsigned)
  void ThrowOverflowInt32Exception()
  void ThrowOverflowInt64Exception()
  void ThrowOverflowUInt32Exception()
  void ThrowOverflowUInt64Exception()
  bool IsDigit(char c, int radix, Int32& result)
--------------------------------------------------
Класс: System.PlatformNotSupportedException
Наследуется от: NotSupportedException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Progress`1
Наследуется от: object
Поля:
  SynchronizationContext _synchronizationContext
  Action`1<T> _handler
  SendOrPostCallback _invokeHandlers
  EventHandler`1<T> ProgressChanged
Свойства:
Методы:
  void .ctor()
  void .ctor(Action`1<T> handler)
  void add_ProgressChanged(EventHandler`1<T> value)
  void remove_ProgressChanged(EventHandler`1<T> value)
  void OnReport(T value)
  void System.IProgress<T>.Report(T value)
  void InvokeHandlers(object state)
--------------------------------------------------
Класс: System.ProgressStatics
Наследуется от: object
Поля:
  SynchronizationContext DefaultContext
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Random
Наследуется от: object
Поля:
  int MBIG
  int MSEED
  int MZ
  int _inext
  int _inextp
  Int32[] _seedArray
  Random t_threadRandom
  Random s_globalRandom
Свойства:
Методы:
  void .ctor()
  void .ctor(int Seed)
  double Sample()
  int InternalSample()
  int GenerateSeed()
  int GenerateGlobalSeed()
  int Next()
  double GetSampleForLargeRange()
  int Next(int minValue, int maxValue)
  int Next(int maxValue)
  double NextDouble()
  void NextBytes(Byte[] buffer)
  void NextBytes(Span`1<byte> buffer)
  void .cctor()
--------------------------------------------------
Класс: System.Range
Наследуется от: ValueType
Поля:
  Index <Start>k__BackingField
  Index <End>k__BackingField
Свойства:
  Index Start
  Index End
  Range All
Методы:
  Index get_Start()
  Index get_End()
  void .ctor(Index start, Index end)
  bool Equals(object value)
  bool Equals(Range other)
  int GetHashCode()
  string ToString()
  Range StartAt(Index start)
  Range EndAt(Index end)
  Range get_All()
  ValueTuple`2<int, int> GetOffsetAndLength(int length)
--------------------------------------------------
Класс: System.RankException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ReadOnlyMemory`1
Наследуется от: ValueType
Поля:
  object _object
  int _index
  int _length
  int RemoveFlagsBitMask
Свойства:
  ReadOnlyMemory`1<T> Empty
  int Length
  bool IsEmpty
  ReadOnlySpan`1<T> Span
Методы:
  void .ctor(T[] array)
  void .ctor(T[] array, int start, int length)
  void .ctor(object obj, int start, int length)
  ReadOnlyMemory`1<T> op_Implicit(T[] array)
  ReadOnlyMemory`1<T> op_Implicit(ArraySegment`1<T> segment)
  ReadOnlyMemory`1<T> get_Empty()
  int get_Length()
  bool get_IsEmpty()
  string ToString()
  ReadOnlyMemory`1<T> Slice(int start)
  ReadOnlyMemory`1<T> Slice(int start, int length)
  ReadOnlySpan`1<T> get_Span()
  void CopyTo(Memory`1<T> destination)
  bool TryCopyTo(Memory`1<T> destination)
  MemoryHandle Pin()
  T[] ToArray()
  bool Equals(object obj)
  bool Equals(ReadOnlyMemory`1<T> other)
  int GetHashCode()
  int CombineHashCodes(int left, int right)
  int CombineHashCodes(int h1, int h2, int h3)
  object GetObjectStartLength(Int32& start, Int32& length)
--------------------------------------------------
Класс: System.ReadOnlySpan`1
Наследуется от: ValueType
Поля:
  ByReference`1<T> _pointer
  int _length
Свойства:
  T& modreq(System.Runtime.InteropServices.InAttribute) Item
  int Length
  bool IsEmpty
  ReadOnlySpan`1<T> Empty
Методы:
  void .ctor(T[] array)
  void .ctor(T[] array, int start, int length)
  void .ctor(Void* pointer, int length)
  void .ctor(T& ptr, int length)
  T& modreq(System.Runtime.InteropServices.InAttribute) get_Item(int index)
  T& modreq(System.Runtime.InteropServices.InAttribute) GetPinnableReference()
  void CopyTo(Span`1<T> destination)
  bool TryCopyTo(Span`1<T> destination)
  bool op_Equality(ReadOnlySpan`1<T> left, ReadOnlySpan`1<T> right)
  string ToString()
  ReadOnlySpan`1<T> Slice(int start)
  ReadOnlySpan`1<T> Slice(int start, int length)
  T[] ToArray()
  int get_Length()
  bool get_IsEmpty()
  bool op_Inequality(ReadOnlySpan`1<T> left, ReadOnlySpan`1<T> right)
  bool Equals(object obj)
  int GetHashCode()
  ReadOnlySpan`1<T> op_Implicit(T[] array)
  ReadOnlySpan`1<T> op_Implicit(ArraySegment`1<T> segment)
  ReadOnlySpan`1<T> get_Empty()
  Enumerator<T> GetEnumerator()
--------------------------------------------------
Класс: System.ResolveEventArgs
Наследуется от: EventArgs
Поля:
  string <Name>k__BackingField
  Assembly <RequestingAssembly>k__BackingField
Свойства:
  string Name
  Assembly RequestingAssembly
Методы:
  void .ctor(string name)
  void .ctor(string name, Assembly requestingAssembly)
  string get_Name()
  Assembly get_RequestingAssembly()
--------------------------------------------------
Класс: System.ResolveEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  Assembly Invoke(object sender, ResolveEventArgs args)
  IAsyncResult BeginInvoke(object sender, ResolveEventArgs args, AsyncCallback callback, object object)
  Assembly EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.SByte
Наследуется от: ValueType
Поля:
  sbyte m_value
  sbyte MaxValue
  sbyte MinValue
Свойства:
Методы:
  int CompareTo(object obj)
  int CompareTo(sbyte value)
  bool Equals(object obj)
  bool Equals(sbyte obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  sbyte Parse(string s)
  sbyte Parse(string s, NumberStyles style)
  sbyte Parse(string s, IFormatProvider provider)
  sbyte Parse(string s, NumberStyles style, IFormatProvider provider)
  sbyte Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  sbyte Parse(string s, NumberStyles style, NumberFormatInfo info)
  sbyte Parse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info)
  bool TryParse(string s, SByte& result)
  bool TryParse(ReadOnlySpan`1<char> s, SByte& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, SByte& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, SByte& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info, SByte& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.SerializableAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Single
Наследуется от: ValueType
Поля:
  float m_value
  float MinValue
  float Epsilon
  float MaxValue
  float PositiveInfinity
  float NegativeInfinity
  float NaN
  float NegativeZero
Свойства:
Методы:
  bool IsFinite(float f)
  bool IsInfinity(float f)
  bool IsNaN(float f)
  bool IsNegative(float f)
  bool IsNegativeInfinity(float f)
  bool IsNormal(float f)
  bool IsPositiveInfinity(float f)
  bool IsSubnormal(float f)
  int CompareTo(object value)
  int CompareTo(float value)
  bool op_Equality(float left, float right)
  bool op_Inequality(float left, float right)
  bool op_LessThan(float left, float right)
  bool op_GreaterThan(float left, float right)
  bool op_LessThanOrEqual(float left, float right)
  bool op_GreaterThanOrEqual(float left, float right)
  bool Equals(object obj)
  bool Equals(float obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  float Parse(string s)
  float Parse(string s, NumberStyles style)
  float Parse(string s, IFormatProvider provider)
  float Parse(string s, NumberStyles style, IFormatProvider provider)
  float Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, Single& result)
  bool TryParse(ReadOnlySpan`1<char> s, Single& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Single& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Single& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info, Single& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.Span`1
Наследуется от: ValueType
Поля:
  ByReference`1<T> _pointer
  int _length
Свойства:
  T& Item
  int Length
  bool IsEmpty
  Span`1<T> Empty
Методы:
  void .ctor(T[] array)
  void .ctor(T[] array, int start, int length)
  void .ctor(Void* pointer, int length)
  void .ctor(T& ptr, int length)
  T& get_Item(int index)
  T& GetPinnableReference()
  void Clear()
  void Fill(T value)
  void CopyTo(Span`1<T> destination)
  bool TryCopyTo(Span`1<T> destination)
  bool op_Equality(Span`1<T> left, Span`1<T> right)
  ReadOnlySpan`1<T> op_Implicit(Span`1<T> span)
  string ToString()
  Span`1<T> Slice(int start)
  Span`1<T> Slice(int start, int length)
  T[] ToArray()
  int get_Length()
  bool get_IsEmpty()
  bool op_Inequality(Span`1<T> left, Span`1<T> right)
  bool Equals(object obj)
  int GetHashCode()
  Span`1<T> op_Implicit(T[] array)
  Span`1<T> op_Implicit(ArraySegment`1<T> segment)
  Span`1<T> get_Empty()
  Enumerator<T> GetEnumerator()
--------------------------------------------------
Класс: System.SpanDebugView`1
Наследуется от: object
Поля:
  T[] _array
Свойства:
  T[] Items
Методы:
  void .ctor(Span`1<T> span)
  void .ctor(ReadOnlySpan`1<T> span)
  T[] get_Items()
--------------------------------------------------
Класс: System.SpanHelpers
Наследуется от: object
Поля:
  ulong XorPowerOfTwoToHighChar
Свойства:
Методы:
  int BinarySearch(ReadOnlySpan`1<T> span, TComparable comparable)
  int BinarySearch(T& spanStart, int length, TComparable comparable)
  int IndexOf(Byte& searchSpace, int searchSpaceLength, Byte& value, int valueLength)
  int IndexOfAny(Byte& searchSpace, int searchSpaceLength, Byte& value, int valueLength)
  int LastIndexOfAny(Byte& searchSpace, int searchSpaceLength, Byte& value, int valueLength)
  int IndexOf(Byte& searchSpace, byte value, int length)
  int LastIndexOf(Byte& searchSpace, int searchSpaceLength, Byte& value, int valueLength)
  int LastIndexOf(Byte& searchSpace, byte value, int length)
  int IndexOfAny(Byte& searchSpace, byte value0, byte value1, int length)
  int IndexOfAny(Byte& searchSpace, byte value0, byte value1, byte value2, int length)
  int LastIndexOfAny(Byte& searchSpace, byte value0, byte value1, int length)
  int LastIndexOfAny(Byte& searchSpace, byte value0, byte value1, byte value2, int length)
  bool SequenceEqual(Byte& first, Byte& second, ulong length)
  int SequenceCompareTo(Byte& first, int firstLength, Byte& second, int secondLength)
  int SequenceCompareTo(Char& first, int firstLength, Char& second, int secondLength)
  int IndexOf(Char& searchSpace, char value, int length)
  int LastIndexOf(Char& searchSpace, char value, int length)
  int LocateFirstFoundChar(Vector`1<ushort> match)
  int LocateFirstFoundChar(ulong match)
  int LocateLastFoundChar(Vector`1<ushort> match)
  int LocateLastFoundChar(ulong match)
  int IndexOf(T& searchSpace, int searchSpaceLength, T& value, int valueLength)
  int IndexOf(T& searchSpace, T value, int length)
  int IndexOfAny(T& searchSpace, T value0, T value1, int length)
  int IndexOfAny(T& searchSpace, T value0, T value1, T value2, int length)
  int IndexOfAny(T& searchSpace, int searchSpaceLength, T& value, int valueLength)
  int LastIndexOf(T& searchSpace, int searchSpaceLength, T& value, int valueLength)
  int LastIndexOf(T& searchSpace, T value, int length)
  int LastIndexOfAny(T& searchSpace, T value0, T value1, int length)
  int LastIndexOfAny(T& searchSpace, T value0, T value1, T value2, int length)
  int LastIndexOfAny(T& searchSpace, int searchSpaceLength, T& value, int valueLength)
  bool SequenceEqual(T& first, T& second, int length)
  int SequenceCompareTo(T& first, int firstLength, T& second, int secondLength)
  int IndexOfCultureHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, CompareInfo compareInfo)
  int IndexOfCultureIgnoreCaseHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, CompareInfo compareInfo)
  int IndexOfOrdinalHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, bool ignoreCase)
  bool StartsWithCultureHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, CompareInfo compareInfo)
  bool StartsWithCultureIgnoreCaseHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, CompareInfo compareInfo)
  bool StartsWithOrdinalIgnoreCaseHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value)
  bool EndsWithCultureHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, CompareInfo compareInfo)
  bool EndsWithCultureIgnoreCaseHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value, CompareInfo compareInfo)
  bool EndsWithOrdinalIgnoreCaseHelper(ReadOnlySpan`1<char> span, ReadOnlySpan`1<char> value)
  void ClearWithoutReferences(Byte& b, ulong byteLength)
  void ClearWithReferences(IntPtr& ip, ulong pointerSizeLength)
  void CopyTo(T& dst, int dstLength, T& src, int srcLength)
  IntPtr Add(IntPtr start, int index)
  bool IsReferenceOrContainsReferences()
  bool IsReferenceOrContainsReferencesCore(Type type)
  void ClearLessThanPointerSized(Byte* ptr, UIntPtr byteLength)
  void ClearLessThanPointerSized(Byte& b, UIntPtr byteLength)
  void ClearPointerSizedWithoutReferences(Byte& b, UIntPtr byteLength)
  void ClearPointerSizedWithReferences(IntPtr& ip, UIntPtr pointerSizeLength)
  bool LessThanEqual(IntPtr index, UIntPtr length)
--------------------------------------------------
Класс: System.StackOverflowException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.StringComparer
Наследуется от: object
Поля:
  CultureAwareComparer s_invariantCulture
  CultureAwareComparer s_invariantCultureIgnoreCase
  OrdinalCaseSensitiveComparer s_ordinal
  OrdinalIgnoreCaseComparer s_ordinalIgnoreCase
Свойства:
  StringComparer InvariantCulture
  StringComparer InvariantCultureIgnoreCase
  StringComparer CurrentCulture
  StringComparer CurrentCultureIgnoreCase
  StringComparer Ordinal
  StringComparer OrdinalIgnoreCase
Методы:
  StringComparer get_InvariantCulture()
  StringComparer get_InvariantCultureIgnoreCase()
  StringComparer get_CurrentCulture()
  StringComparer get_CurrentCultureIgnoreCase()
  StringComparer get_Ordinal()
  StringComparer get_OrdinalIgnoreCase()
  StringComparer FromComparison(StringComparison comparisonType)
  StringComparer Create(CultureInfo culture, bool ignoreCase)
  StringComparer Create(CultureInfo culture, CompareOptions options)
  int Compare(object x, object y)
  bool Equals(object x, object y)
  int GetHashCode(object obj)
  int Compare(string x, string y)
  bool Equals(string x, string y)
  int GetHashCode(string obj)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.CultureAwareComparer
Наследуется от: StringComparer
Поля:
  CompareOptions ValidCompareMaskOffFlags
  CompareInfo _compareInfo
  CompareOptions _options
Свойства:
Методы:
  void .ctor(CultureInfo culture, CompareOptions options)
  void .ctor(CompareInfo compareInfo, CompareOptions options)
  void .ctor(SerializationInfo info, StreamingContext context)
  int Compare(string x, string y)
  bool Equals(string x, string y)
  int GetHashCode(string obj)
  bool Equals(object obj)
  int GetHashCode()
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.OrdinalComparer
Наследуется от: StringComparer
Поля:
  bool _ignoreCase
Свойства:
Методы:
  void .ctor(bool ignoreCase)
  int Compare(string x, string y)
  bool Equals(string x, string y)
  int GetHashCode(string obj)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.OrdinalCaseSensitiveComparer
Наследуется от: OrdinalComparer
Поля:
Свойства:
Методы:
  void .ctor()
  int Compare(string x, string y)
  bool Equals(string x, string y)
  int GetHashCode(string obj)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.OrdinalIgnoreCaseComparer
Наследуется от: OrdinalComparer
Поля:
Свойства:
Методы:
  void .ctor()
  int Compare(string x, string y)
  bool Equals(string x, string y)
  int GetHashCode(string obj)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.StringComparison
Наследуется от: Enum
Поля:
  int value__
  StringComparison CurrentCulture
  StringComparison CurrentCultureIgnoreCase
  StringComparison InvariantCulture
  StringComparison InvariantCultureIgnoreCase
  StringComparison Ordinal
  StringComparison OrdinalIgnoreCase
Свойства:
Методы:
--------------------------------------------------
Класс: System.StringSplitOptions
Наследуется от: Enum
Поля:
  int value__
  StringSplitOptions None
  StringSplitOptions RemoveEmptyEntries
Свойства:
Методы:
--------------------------------------------------
Класс: System.SystemException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.STAThreadAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.MTAThreadAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ThreadStaticAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.TimeSpan
Наследуется от: ValueType
Поля:
  long TicksPerMillisecond
  double MillisecondsPerTick
  long TicksPerSecond
  double SecondsPerTick
  long TicksPerMinute
  double MinutesPerTick
  long TicksPerHour
  double HoursPerTick
  long TicksPerDay
  double DaysPerTick
  int MillisPerSecond
  int MillisPerMinute
  int MillisPerHour
  int MillisPerDay
  long MaxSeconds
  long MinSeconds
  long MaxMilliSeconds
  long MinMilliSeconds
  long TicksPerTenthSecond
  TimeSpan Zero
  TimeSpan MaxValue
  TimeSpan MinValue
  long _ticks
Свойства:
  long Ticks
  int Days
  int Hours
  int Milliseconds
  int Minutes
  int Seconds
  double TotalDays
  double TotalHours
  double TotalMilliseconds
  double TotalMinutes
  double TotalSeconds
Методы:
  void .ctor(long ticks)
  void .ctor(int hours, int minutes, int seconds)
  void .ctor(int days, int hours, int minutes, int seconds)
  void .ctor(int days, int hours, int minutes, int seconds, int milliseconds)
  long get_Ticks()
  int get_Days()
  int get_Hours()
  int get_Milliseconds()
  int get_Minutes()
  int get_Seconds()
  double get_TotalDays()
  double get_TotalHours()
  double get_TotalMilliseconds()
  double get_TotalMinutes()
  double get_TotalSeconds()
  TimeSpan Add(TimeSpan ts)
  int Compare(TimeSpan t1, TimeSpan t2)
  int CompareTo(object value)
  int CompareTo(TimeSpan value)
  TimeSpan FromDays(double value)
  TimeSpan Duration()
  bool Equals(object value)
  bool Equals(TimeSpan obj)
  bool Equals(TimeSpan t1, TimeSpan t2)
  int GetHashCode()
  TimeSpan FromHours(double value)
  TimeSpan Interval(double value, int scale)
  TimeSpan FromMilliseconds(double value)
  TimeSpan FromMinutes(double value)
  TimeSpan Negate()
  TimeSpan FromSeconds(double value)
  TimeSpan Subtract(TimeSpan ts)
  TimeSpan Multiply(double factor)
  TimeSpan Divide(double divisor)
  double Divide(TimeSpan ts)
  TimeSpan FromTicks(long value)
  long TimeToTicks(int hour, int minute, int second)
  void ValidateStyles(TimeSpanStyles style, string parameterName)
  TimeSpan Parse(string s)
  TimeSpan Parse(string input, IFormatProvider formatProvider)
  TimeSpan Parse(ReadOnlySpan`1<char> input, IFormatProvider formatProvider)
  TimeSpan ParseExact(string input, string format, IFormatProvider formatProvider)
  TimeSpan ParseExact(string input, String[] formats, IFormatProvider formatProvider)
  TimeSpan ParseExact(string input, string format, IFormatProvider formatProvider, TimeSpanStyles styles)
  TimeSpan ParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, TimeSpanStyles styles)
  TimeSpan ParseExact(string input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles)
  TimeSpan ParseExact(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles)
  bool TryParse(string s, TimeSpan& result)
  bool TryParse(ReadOnlySpan`1<char> s, TimeSpan& result)
  bool TryParse(string input, IFormatProvider formatProvider, TimeSpan& result)
  bool TryParse(ReadOnlySpan`1<char> input, IFormatProvider formatProvider, TimeSpan& result)
  bool TryParseExact(string input, string format, IFormatProvider formatProvider, TimeSpan& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, TimeSpan& result)
  bool TryParseExact(string input, String[] formats, IFormatProvider formatProvider, TimeSpan& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, TimeSpan& result)
  bool TryParseExact(string input, string format, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpan& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpan& result)
  bool TryParseExact(string input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpan& result)
  bool TryParseExact(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpan& result)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider formatProvider)
  TimeSpan op_UnaryNegation(TimeSpan t)
  TimeSpan op_Subtraction(TimeSpan t1, TimeSpan t2)
  TimeSpan op_UnaryPlus(TimeSpan t)
  TimeSpan op_Addition(TimeSpan t1, TimeSpan t2)
  TimeSpan op_Multiply(TimeSpan timeSpan, double factor)
  TimeSpan op_Multiply(double factor, TimeSpan timeSpan)
  TimeSpan op_Division(TimeSpan timeSpan, double divisor)
  double op_Division(TimeSpan t1, TimeSpan t2)
  bool op_Equality(TimeSpan t1, TimeSpan t2)
  bool op_Inequality(TimeSpan t1, TimeSpan t2)
  bool op_LessThan(TimeSpan t1, TimeSpan t2)
  bool op_LessThanOrEqual(TimeSpan t1, TimeSpan t2)
  bool op_GreaterThan(TimeSpan t1, TimeSpan t2)
  bool op_GreaterThanOrEqual(TimeSpan t1, TimeSpan t2)
  void .cctor()
--------------------------------------------------
Класс: System.TimeZone
Наследуется от: object
Поля:
  TimeZone modreq(System.Runtime.CompilerServices.IsVolatile) currentTimeZone
  object s_InternalSyncObject
Свойства:
  object InternalSyncObject
  TimeZone CurrentTimeZone
  string StandardName
  string DaylightName
Методы:
  object get_InternalSyncObject()
  void .ctor()
  TimeZone get_CurrentTimeZone()
  void ResetTimeZone()
  string get_StandardName()
  string get_DaylightName()
  TimeSpan GetUtcOffset(DateTime time)
  DateTime ToUniversalTime(DateTime time)
  DateTime ToLocalTime(DateTime time)
  DaylightTime GetDaylightChanges(int year)
  bool IsDaylightSavingTime(DateTime time)
  bool IsDaylightSavingTime(DateTime time, DaylightTime daylightTimes)
  TimeSpan CalculateUtcOffset(DateTime time, DaylightTime daylightTimes)
  void ClearCachedData()
--------------------------------------------------
Класс: System.TimeZoneNotFoundException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.TimeoutException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ITupleInternal
Поля:
Свойства:
Методы:
  string ToString(StringBuilder sb)
  int GetHashCode(IEqualityComparer comparer)
--------------------------------------------------
Класс: System.Tuple
Наследуется от: object
Поля:
Свойства:
Методы:
  Tuple`1<T1> Create(T1 item1)
  Tuple`2<T1, T2> Create(T1 item1, T2 item2)
  Tuple`3<T1, T2, T3> Create(T1 item1, T2 item2, T3 item3)
  Tuple`4<T1, T2, T3, T4> Create(T1 item1, T2 item2, T3 item3, T4 item4)
  Tuple`5<T1, T2, T3, T4, T5> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
  Tuple`6<T1, T2, T3, T4, T5, T6> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
  Tuple`7<T1, T2, T3, T4, T5, T6, T7> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8)
  int CombineHashCodes(int h1, int h2)
  int CombineHashCodes(int h1, int h2, int h3)
  int CombineHashCodes(int h1, int h2, int h3, int h4)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6, int h7)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6, int h7, int h8)
--------------------------------------------------
Класс: System.Tuple`1
Наследуется от: object
Поля:
  T1 m_Item1
Свойства:
  T1 Item1
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  void .ctor(T1 item1)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`2
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
Свойства:
  T1 Item1
  T2 Item2
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  void .ctor(T1 item1, T2 item2)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`3
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
  T3 m_Item3
Свойства:
  T1 Item1
  T2 Item2
  T3 Item3
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  T3 get_Item3()
  void .ctor(T1 item1, T2 item2, T3 item3)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`4
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
  T3 m_Item3
  T4 m_Item4
Свойства:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  T3 get_Item3()
  T4 get_Item4()
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`5
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
  T3 m_Item3
  T4 m_Item4
  T5 m_Item5
Свойства:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  T3 get_Item3()
  T4 get_Item4()
  T5 get_Item5()
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`6
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
  T3 m_Item3
  T4 m_Item4
  T5 m_Item5
  T6 m_Item6
Свойства:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  T6 Item6
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  T3 get_Item3()
  T4 get_Item4()
  T5 get_Item5()
  T6 get_Item6()
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`7
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
  T3 m_Item3
  T4 m_Item4
  T5 m_Item5
  T6 m_Item6
  T7 m_Item7
Свойства:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  T6 Item6
  T7 Item7
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  T3 get_Item3()
  T4 get_Item4()
  T5 get_Item5()
  T6 get_Item6()
  T7 get_Item7()
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Tuple`8
Наследуется от: object
Поля:
  T1 m_Item1
  T2 m_Item2
  T3 m_Item3
  T4 m_Item4
  T5 m_Item5
  T6 m_Item6
  T7 m_Item7
  TRest m_Rest
Свойства:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  T6 Item6
  T7 Item7
  TRest Rest
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  T1 get_Item1()
  T2 get_Item2()
  T3 get_Item3()
  T4 get_Item4()
  T5 get_Item5()
  T6 get_Item6()
  T7 get_Item7()
  TRest get_Rest()
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest)
  bool Equals(object obj)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object obj)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.ITupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.ITupleInternal.ToString(StringBuilder sb)
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.TupleExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  void Deconstruct(Tuple`1<T1> value, T1& item1)
  void Deconstruct(Tuple`2<T1, T2> value, T1& item1, T2& item2)
  void Deconstruct(Tuple`3<T1, T2, T3> value, T1& item1, T2& item2, T3& item3)
  void Deconstruct(Tuple`4<T1, T2, T3, T4> value, T1& item1, T2& item2, T3& item3, T4& item4)
  void Deconstruct(Tuple`5<T1, T2, T3, T4, T5> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5)
  void Deconstruct(Tuple`6<T1, T2, T3, T4, T5, T6> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6)
  void Deconstruct(Tuple`7<T1, T2, T3, T4, T5, T6, T7> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`2<T8, T9>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`3<T8, T9, T10>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`4<T8, T9, T10, T11>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`5<T8, T9, T10, T11, T12>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`6<T8, T9, T10, T11, T12, T13>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`7<T8, T9, T10, T11, T12, T13, T14>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`1<T15>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`2<T15, T16>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`3<T15, T16, T17>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`4<T15, T16, T17, T18>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`5<T15, T16, T17, T18, T19>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18, T19& item19)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`6<T15, T16, T17, T18, T19, T20>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18, T19& item19, T20& item20)
  void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`7<T15, T16, T17, T18, T19, T20, T21>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18, T19& item19, T20& item20, T21& item21)
  ValueTuple`1<T1> ToValueTuple(Tuple`1<T1> value)
  ValueTuple`2<T1, T2> ToValueTuple(Tuple`2<T1, T2> value)
  ValueTuple`3<T1, T2, T3> ToValueTuple(Tuple`3<T1, T2, T3> value)
  ValueTuple`4<T1, T2, T3, T4> ToValueTuple(Tuple`4<T1, T2, T3, T4> value)
  ValueTuple`5<T1, T2, T3, T4, T5> ToValueTuple(Tuple`5<T1, T2, T3, T4, T5> value)
  ValueTuple`6<T1, T2, T3, T4, T5, T6> ToValueTuple(Tuple`6<T1, T2, T3, T4, T5, T6> value)
  ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> ToValueTuple(Tuple`7<T1, T2, T3, T4, T5, T6, T7> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`1<T8>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`2<T8, T9>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`2<T8, T9>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`3<T8, T9, T10>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`3<T8, T9, T10>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`4<T8, T9, T10, T11>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`4<T8, T9, T10, T11>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`5<T8, T9, T10, T11, T12>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`5<T8, T9, T10, T11, T12>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`6<T8, T9, T10, T11, T12, T13>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`6<T8, T9, T10, T11, T12, T13>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`7<T8, T9, T10, T11, T12, T13, T14>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`7<T8, T9, T10, T11, T12, T13, T14>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`1<T15>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`1<T15>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`2<T15, T16>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`2<T15, T16>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`3<T15, T16, T17>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`3<T15, T16, T17>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`4<T15, T16, T17, T18>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`4<T15, T16, T17, T18>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`5<T15, T16, T17, T18, T19>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`5<T15, T16, T17, T18, T19>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`6<T15, T16, T17, T18, T19, T20>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`6<T15, T16, T17, T18, T19, T20>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`7<T15, T16, T17, T18, T19, T20, T21>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`7<T15, T16, T17, T18, T19, T20, T21>>> value)
  Tuple`1<T1> ToTuple(ValueTuple`1<T1> value)
  Tuple`2<T1, T2> ToTuple(ValueTuple`2<T1, T2> value)
  Tuple`3<T1, T2, T3> ToTuple(ValueTuple`3<T1, T2, T3> value)
  Tuple`4<T1, T2, T3, T4> ToTuple(ValueTuple`4<T1, T2, T3, T4> value)
  Tuple`5<T1, T2, T3, T4, T5> ToTuple(ValueTuple`5<T1, T2, T3, T4, T5> value)
  Tuple`6<T1, T2, T3, T4, T5, T6> ToTuple(ValueTuple`6<T1, T2, T3, T4, T5, T6> value)
  Tuple`7<T1, T2, T3, T4, T5, T6, T7> ToTuple(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`1<T8>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`2<T8, T9>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`2<T8, T9>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`3<T8, T9, T10>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`3<T8, T9, T10>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`4<T8, T9, T10, T11>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`4<T8, T9, T10, T11>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`5<T8, T9, T10, T11, T12>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`5<T8, T9, T10, T11, T12>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`6<T8, T9, T10, T11, T12, T13>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`6<T8, T9, T10, T11, T12, T13>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`7<T8, T9, T10, T11, T12, T13, T14>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`7<T8, T9, T10, T11, T12, T13, T14>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`1<T15>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`1<T15>>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`2<T15, T16>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`2<T15, T16>>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`3<T15, T16, T17>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`3<T15, T16, T17>>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`4<T15, T16, T17, T18>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`4<T15, T16, T17, T18>>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`5<T15, T16, T17, T18, T19>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`5<T15, T16, T17, T18, T19>>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`6<T15, T16, T17, T18, T19, T20>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`6<T15, T16, T17, T18, T19, T20>>> value)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`7<T15, T16, T17, T18, T19, T20, T21>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`7<T15, T16, T17, T18, T19, T20, T21>>> value)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> CreateLong(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest)
  Tuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> CreateLongRef(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest)
--------------------------------------------------
Класс: System.Type
Наследуется от: MemberInfo
Поля:
  Binder modreq(System.Runtime.CompilerServices.IsVolatile) s_defaultBinder
  char Delimiter
  Type[] EmptyTypes
  object Missing
  MemberFilter FilterAttribute
  MemberFilter FilterName
  MemberFilter FilterNameIgnoreCase
  BindingFlags DefaultLookup
  RuntimeTypeHandle _impl
  string DefaultTypeNameWhenMissingMetadata
Свойства:
  bool IsSerializable
  bool ContainsGenericParameters
  bool IsVisible
  MemberTypes MemberType
  string Namespace
  string AssemblyQualifiedName
  string FullName
  Assembly Assembly
  Module Module
  bool IsNested
  Type DeclaringType
  MethodBase DeclaringMethod
  Type ReflectedType
  Type UnderlyingSystemType
  bool IsTypeDefinition
  bool IsArray
  bool IsByRef
  bool IsPointer
  bool IsConstructedGenericType
  bool IsGenericParameter
  bool IsGenericTypeParameter
  bool IsGenericMethodParameter
  bool IsGenericType
  bool IsGenericTypeDefinition
  bool IsSZArray
  bool IsVariableBoundArray
  bool IsByRefLike
  bool HasElementType
  Type[] GenericTypeArguments
  int GenericParameterPosition
  GenericParameterAttributes GenericParameterAttributes
  TypeAttributes Attributes
  bool IsAbstract
  bool IsImport
  bool IsSealed
  bool IsSpecialName
  bool IsClass
  bool IsNestedAssembly
  bool IsNestedFamANDAssem
  bool IsNestedFamily
  bool IsNestedFamORAssem
  bool IsNestedPrivate
  bool IsNestedPublic
  bool IsNotPublic
  bool IsPublic
  bool IsAutoLayout
  bool IsExplicitLayout
  bool IsLayoutSequential
  bool IsAnsiClass
  bool IsAutoClass
  bool IsUnicodeClass
  bool IsCOMObject
  bool IsContextful
  bool IsCollectible
  bool IsEnum
  bool IsMarshalByRef
  bool IsPrimitive
  bool IsValueType
  bool IsSignatureType
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  bool IsSecurityTransparent
  StructLayoutAttribute StructLayoutAttribute
  ConstructorInfo TypeInitializer
  RuntimeTypeHandle TypeHandle
  Guid GUID
  Type BaseType
  Binder DefaultBinder
  bool IsUserType
  bool IsWindowsRuntimeObject
  bool IsExportedToWindowsRuntime
  bool IsSzArray
  bool IsInterface
  string FullNameOrDefault
  string InternalNameIfAvailable
  string NameOrDefault
Методы:
  bool IsEnumDefined(object value)
  string GetEnumName(object value)
  String[] GetEnumNames()
  Array GetEnumRawConstantValues()
  void GetEnumData(String[]& enumNames, Array& enumValues)
  int BinarySearch(Array array, object value)
  bool IsIntegerType(Type t)
  bool get_IsSerializable()
  bool get_ContainsGenericParameters()
  Type GetRootElementType()
  bool get_IsVisible()
  Type[] FindInterfaces(TypeFilter filter, object filterCriteria)
  MemberInfo[] FindMembers(MemberTypes memberType, BindingFlags bindingAttr, MemberFilter filter, object filterCriteria)
  bool IsSubclassOf(Type c)
  bool IsAssignableFrom(Type c)
  bool ImplementInterface(Type ifaceType)
  bool FilterAttributeImpl(MemberInfo m, object filterCriteria)
  bool FilterNameImpl(MemberInfo m, object filterCriteria)
  bool FilterNameIgnoreCaseImpl(MemberInfo m, object filterCriteria)
  void .ctor()
  MemberTypes get_MemberType()
  Type GetType()
  string get_Namespace()
  string get_AssemblyQualifiedName()
  string get_FullName()
  Assembly get_Assembly()
  Module get_Module()
  bool get_IsNested()
  Type get_DeclaringType()
  MethodBase get_DeclaringMethod()
  Type get_ReflectedType()
  Type get_UnderlyingSystemType()
  bool get_IsTypeDefinition()
  bool get_IsArray()
  bool IsArrayImpl()
  bool get_IsByRef()
  bool IsByRefImpl()
  bool get_IsPointer()
  bool IsPointerImpl()
  bool get_IsConstructedGenericType()
  bool get_IsGenericParameter()
  bool get_IsGenericTypeParameter()
  bool get_IsGenericMethodParameter()
  bool get_IsGenericType()
  bool get_IsGenericTypeDefinition()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  bool get_IsByRefLike()
  bool get_HasElementType()
  bool HasElementTypeImpl()
  Type GetElementType()
  int GetArrayRank()
  Type GetGenericTypeDefinition()
  Type[] get_GenericTypeArguments()
  Type[] GetGenericArguments()
  int get_GenericParameterPosition()
  GenericParameterAttributes get_GenericParameterAttributes()
  Type[] GetGenericParameterConstraints()
  TypeAttributes get_Attributes()
  TypeAttributes GetAttributeFlagsImpl()
  bool get_IsAbstract()
  bool get_IsImport()
  bool get_IsSealed()
  bool get_IsSpecialName()
  bool get_IsClass()
  bool get_IsNestedAssembly()
  bool get_IsNestedFamANDAssem()
  bool get_IsNestedFamily()
  bool get_IsNestedFamORAssem()
  bool get_IsNestedPrivate()
  bool get_IsNestedPublic()
  bool get_IsNotPublic()
  bool get_IsPublic()
  bool get_IsAutoLayout()
  bool get_IsExplicitLayout()
  bool get_IsLayoutSequential()
  bool get_IsAnsiClass()
  bool get_IsAutoClass()
  bool get_IsUnicodeClass()
  bool get_IsCOMObject()
  bool IsCOMObjectImpl()
  bool get_IsContextful()
  bool IsContextfulImpl()
  bool get_IsCollectible()
  bool get_IsEnum()
  bool get_IsMarshalByRef()
  bool IsMarshalByRefImpl()
  bool get_IsPrimitive()
  bool IsPrimitiveImpl()
  bool get_IsValueType()
  bool IsValueTypeImpl()
  bool get_IsSignatureType()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  bool get_IsSecurityTransparent()
  StructLayoutAttribute get_StructLayoutAttribute()
  ConstructorInfo get_TypeInitializer()
  ConstructorInfo GetConstructor(Type[] types)
  ConstructorInfo GetConstructor(BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo GetConstructor(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo[] GetConstructors()
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  EventInfo GetEvent(string name)
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  FieldInfo GetField(string name)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields()
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name)
  MemberInfo[] GetMember(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetMembers()
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  MethodInfo GetMethod(string name)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr)
  MethodInfo GetMethod(string name, Type[] types)
  MethodInfo GetMethod(string name, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, int genericParameterCount, Type[] types)
  MethodInfo GetMethod(string name, int genericParameterCount, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, int genericParameterCount, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, int genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethodImpl(string name, int genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo[] GetMethods()
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  Type GetNestedType(string name)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  Type[] GetNestedTypes()
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, Type returnType)
  PropertyInfo GetProperty(string name, Type[] types)
  PropertyInfo GetProperty(string name, Type returnType, Type[] types)
  PropertyInfo GetProperty(string name, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo[] GetProperties()
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  MemberInfo[] GetDefaultMembers()
  RuntimeTypeHandle get_TypeHandle()
  RuntimeTypeHandle GetTypeHandle(object o)
  Type[] GetTypeArray(Object[] args)
  TypeCode GetTypeCode(Type type)
  TypeCode GetTypeCodeImpl()
  Guid get_GUID()
  Type GetTypeFromCLSID(Guid clsid)
  Type GetTypeFromCLSID(Guid clsid, bool throwOnError)
  Type GetTypeFromCLSID(Guid clsid, string server)
  Type GetTypeFromProgID(string progID)
  Type GetTypeFromProgID(string progID, bool throwOnError)
  Type GetTypeFromProgID(string progID, string server)
  Type get_BaseType()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, CultureInfo culture)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Type GetInterface(string name)
  Type GetInterface(string name, bool ignoreCase)
  Type[] GetInterfaces()
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  bool IsInstanceOfType(object o)
  bool IsEquivalentTo(Type other)
  Type GetEnumUnderlyingType()
  Array GetEnumValues()
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakeGenericType(Type[] typeArguments)
  Type MakePointerType()
  Type MakeGenericSignatureType(Type genericTypeDefinition, Type[] typeArguments)
  Type MakeGenericMethodParameter(int position)
  string ToString()
  bool Equals(object o)
  int GetHashCode()
  bool Equals(Type o)
  Binder get_DefaultBinder()
  void System.Runtime.InteropServices._Type.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._Type.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._Type.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  Type InternalResolve()
  Type RuntimeResolve()
  bool get_IsUserType()
  MethodInfo GetMethod(MethodInfo fromNoninstanciated)
  ConstructorInfo GetConstructor(ConstructorInfo fromNoninstanciated)
  FieldInfo GetField(FieldInfo fromNoninstanciated)
  Type GetTypeFromHandle(RuntimeTypeHandle handle)
  Type internal_from_handle(IntPtr handle)
  RuntimeTypeHandle GetTypeHandleInternal()
  bool IsWindowsRuntimeObjectImpl()
  bool IsExportedToWindowsRuntimeImpl()
  bool get_IsWindowsRuntimeObject()
  bool get_IsExportedToWindowsRuntime()
  bool HasProxyAttributeImpl()
  bool get_IsSzArray()
  string FormatTypeName()
  string FormatTypeName(bool serialization)
  bool get_IsInterface()
  Type GetType(string typeName, bool throwOnError, bool ignoreCase)
  Type GetType(string typeName, bool throwOnError)
  Type GetType(string typeName)
  Type GetType(string typeName, Func`2<AssemblyName, Assembly> assemblyResolver, Func`4<Assembly, string, bool, Type> typeResolver)
  Type GetType(string typeName, Func`2<AssemblyName, Assembly> assemblyResolver, Func`4<Assembly, string, bool, Type> typeResolver, bool throwOnError)
  Type GetType(string typeName, Func`2<AssemblyName, Assembly> assemblyResolver, Func`4<Assembly, string, bool, Type> typeResolver, bool throwOnError, bool ignoreCase)
  bool op_Equality(Type left, Type right)
  bool op_Inequality(Type left, Type right)
  Type ReflectionOnlyGetType(string typeName, bool throwIfNotFound, bool ignoreCase)
  Type GetTypeFromCLSID(Guid clsid, string server, bool throwOnError)
  Type GetTypeFromProgID(string progID, string server, bool throwOnError)
  string get_FullNameOrDefault()
  bool IsRuntimeImplemented()
  string InternalGetNameIfAvailable(Type& rootCauseForFailure)
  string get_InternalNameIfAvailable()
  string get_NameOrDefault()
  void .cctor()
--------------------------------------------------
Класс: System.TypeAccessException
Наследуется от: TypeLoadException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.TypeCode
Наследуется от: Enum
Поля:
  int value__
  TypeCode Empty
  TypeCode Object
  TypeCode DBNull
  TypeCode Boolean
  TypeCode Char
  TypeCode SByte
  TypeCode Byte
  TypeCode Int16
  TypeCode UInt16
  TypeCode Int32
  TypeCode UInt32
  TypeCode Int64
  TypeCode UInt64
  TypeCode Single
  TypeCode Double
  TypeCode Decimal
  TypeCode DateTime
  TypeCode String
Свойства:
Методы:
--------------------------------------------------
Класс: System.TypeInitializationException
Наследуется от: SystemException
Поля:
  string _typeName
Свойства:
  string TypeName
Методы:
  void .ctor()
  void .ctor(string fullTypeName, Exception innerException)
  void .ctor(string message)
  void .ctor(string fullTypeName, string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_TypeName()
--------------------------------------------------
Класс: System.TypeUnloadedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.UInt16
Наследуется от: ValueType
Поля:
  ushort m_value
  ushort MaxValue
  ushort MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(ushort value)
  bool Equals(object obj)
  bool Equals(ushort obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  ushort Parse(string s)
  ushort Parse(string s, NumberStyles style)
  ushort Parse(string s, IFormatProvider provider)
  ushort Parse(string s, NumberStyles style, IFormatProvider provider)
  ushort Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  ushort Parse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info)
  bool TryParse(string s, UInt16& result)
  bool TryParse(ReadOnlySpan`1<char> s, UInt16& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, UInt16& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, UInt16& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, NumberFormatInfo info, UInt16& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.UInt32
Наследуется от: ValueType
Поля:
  UInt32 m_value
  UInt32 MaxValue
  UInt32 MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(UInt32 value)
  bool Equals(object obj)
  bool Equals(UInt32 obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  UInt32 Parse(string s)
  UInt32 Parse(string s, NumberStyles style)
  UInt32 Parse(string s, IFormatProvider provider)
  UInt32 Parse(string s, NumberStyles style, IFormatProvider provider)
  UInt32 Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, UInt32& result)
  bool TryParse(ReadOnlySpan`1<char> s, UInt32& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, UInt32& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, UInt32& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.UInt64
Наследуется от: ValueType
Поля:
  ulong m_value
  ulong MaxValue
  ulong MinValue
Свойства:
Методы:
  int CompareTo(object value)
  int CompareTo(ulong value)
  bool Equals(object obj)
  bool Equals(ulong obj)
  int GetHashCode()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  ulong Parse(string s)
  ulong Parse(string s, NumberStyles style)
  ulong Parse(string s, IFormatProvider provider)
  ulong Parse(string s, NumberStyles style, IFormatProvider provider)
  ulong Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, UInt64& result)
  bool TryParse(ReadOnlySpan`1<char> s, UInt64& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, UInt64& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, UInt64& result)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
--------------------------------------------------
Класс: System.UnauthorizedAccessException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.UnhandledExceptionEventArgs
Наследуется от: EventArgs
Поля:
  object _exception
  bool _isTerminating
Свойства:
  object ExceptionObject
  bool IsTerminating
Методы:
  void .ctor(object exception, bool isTerminating)
  object get_ExceptionObject()
  bool get_IsTerminating()
--------------------------------------------------
Класс: System.UnhandledExceptionEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UnhandledExceptionEventArgs e)
  IAsyncResult BeginInvoke(object sender, UnhandledExceptionEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IValueTupleInternal
Поля:
Свойства:
Методы:
  int GetHashCode(IEqualityComparer comparer)
  string ToStringEnd()
--------------------------------------------------
Класс: System.ValueTuple
Наследуется от: ValueType
Поля:
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  bool Equals(object obj)
  bool Equals(ValueTuple other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
  ValueTuple Create()
  ValueTuple`1<T1> Create(T1 item1)
  ValueTuple`2<T1, T2> Create(T1 item1, T2 item2)
  ValueTuple`3<T1, T2, T3> Create(T1 item1, T2 item2, T3 item3)
  ValueTuple`4<T1, T2, T3, T4> Create(T1 item1, T2 item2, T3 item3, T4 item4)
  ValueTuple`5<T1, T2, T3, T4, T5> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
  ValueTuple`6<T1, T2, T3, T4, T5, T6> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
  ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
  ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`1<T8>> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8)
  int CombineHashCodes(int h1, int h2)
  int CombineHashCodes(int h1, int h2, int h3)
  int CombineHashCodes(int h1, int h2, int h3, int h4)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6, int h7)
  int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6, int h7, int h8)
--------------------------------------------------
Класс: System.ValueTuple`1
Наследуется от: ValueType
Поля:
  T1 Item1
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1)
  bool Equals(object obj)
  bool Equals(ValueTuple`1<T1> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`1<T1> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`2
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2)
  bool Equals(object obj)
  bool Equals(ValueTuple`2<T1, T2> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`2<T1, T2> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`3
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2, T3 item3)
  bool Equals(object obj)
  bool Equals(ValueTuple`3<T1, T2, T3> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`3<T1, T2, T3> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`4
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4)
  bool Equals(object obj)
  bool Equals(ValueTuple`4<T1, T2, T3, T4> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`4<T1, T2, T3, T4> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`5
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5)
  bool Equals(object obj)
  bool Equals(ValueTuple`5<T1, T2, T3, T4, T5> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`5<T1, T2, T3, T4, T5> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`6
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  T6 Item6
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6)
  bool Equals(object obj)
  bool Equals(ValueTuple`6<T1, T2, T3, T4, T5, T6> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`6<T1, T2, T3, T4, T5, T6> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`7
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  T6 Item6
  T7 Item7
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7)
  bool Equals(object obj)
  bool Equals(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.ValueTuple`8
Наследуется от: ValueType
Поля:
  T1 Item1
  T2 Item2
  T3 Item3
  T4 Item4
  T5 Item5
  T6 Item6
  T7 Item7
  TRest Rest
Свойства:
  int System.Runtime.CompilerServices.ITuple.Length
  object System.Runtime.CompilerServices.ITuple.Item
Методы:
  void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest)
  bool Equals(object obj)
  bool Equals(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> other)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int System.IComparable.CompareTo(object other)
  int CompareTo(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> other)
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  int GetHashCode()
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int GetHashCodeCore(IEqualityComparer comparer)
  int System.IValueTupleInternal.GetHashCode(IEqualityComparer comparer)
  string ToString()
  string System.IValueTupleInternal.ToStringEnd()
  int System.Runtime.CompilerServices.ITuple.get_Length()
  object System.Runtime.CompilerServices.ITuple.get_Item(int index)
--------------------------------------------------
Класс: System.Version
Наследуется от: object
Поля:
  int _Major
  int _Minor
  int _Build
  int _Revision
Свойства:
  int Major
  int Minor
  int Build
  int Revision
  short MajorRevision
  short MinorRevision
  int DefaultFormatFieldCount
Методы:
  void .ctor(int major, int minor, int build, int revision)
  void .ctor(int major, int minor, int build)
  void .ctor(int major, int minor)
  void .ctor(string version)
  void .ctor()
  void .ctor(Version version)
  object Clone()
  int get_Major()
  int get_Minor()
  int get_Build()
  int get_Revision()
  short get_MajorRevision()
  short get_MinorRevision()
  int CompareTo(object version)
  int CompareTo(Version value)
  bool Equals(object obj)
  bool Equals(Version obj)
  int GetHashCode()
  string ToString()
  string ToString(int fieldCount)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten)
  bool TryFormat(Span`1<char> destination, int fieldCount, Int32& charsWritten)
  bool System.ISpanFormattable.TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  int get_DefaultFormatFieldCount()
  StringBuilder ToCachedStringBuilder(int fieldCount)
  Version Parse(string input)
  Version Parse(ReadOnlySpan`1<char> input)
  bool TryParse(string input, Version& result)
  bool TryParse(ReadOnlySpan`1<char> input, Version& result)
  Version ParseVersion(ReadOnlySpan`1<char> input, bool throwOnFailure)
  bool TryParseComponent(ReadOnlySpan`1<char> component, string componentName, bool throwOnFailure, Int32& parsedComponent)
  bool op_Equality(Version v1, Version v2)
  bool op_Inequality(Version v1, Version v2)
  bool op_LessThan(Version v1, Version v2)
  bool op_LessThanOrEqual(Version v1, Version v2)
  bool op_GreaterThan(Version v1, Version v2)
  bool op_GreaterThanOrEqual(Version v1, Version v2)
--------------------------------------------------
Класс: System.Void
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.FixedBufferExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetStringFromFixedBuffer(ReadOnlySpan`1<char> span)
  int GetFixedBufferStringLength(ReadOnlySpan`1<char> span)
  bool FixedBufferEqualsString(ReadOnlySpan`1<char> span, string value)
--------------------------------------------------
Класс: System.MutableDecimal
Наследуется от: ValueType
Поля:
  UInt32 Flags
  UInt32 High
  UInt32 Low
  UInt32 Mid
  UInt32 SignMask
  UInt32 ScaleMask
  int ScaleShift
Свойства:
  bool IsNegative
  int Scale
Методы:
  bool get_IsNegative()
  void set_IsNegative(bool value)
  int get_Scale()
  void set_Scale(int value)
--------------------------------------------------
Класс: System.NotImplemented
Наследуется от: object
Поля:
Свойства:
  Exception ByDesign
Методы:
  Exception get_ByDesign()
  Exception ByDesignWithMessage(string message)
  Exception ActiveIssue(string issue)
--------------------------------------------------
Класс: System.IServiceProvider
Поля:
Свойства:
Методы:
  object GetService(Type serviceType)
--------------------------------------------------
Класс: System.ConsoleCancelEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ConsoleCancelEventArgs e)
  IAsyncResult BeginInvoke(object sender, ConsoleCancelEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ConsoleCancelEventArgs
Наследуется от: EventArgs
Поля:
  ConsoleSpecialKey _type
  bool <Cancel>k__BackingField
Свойства:
  bool Cancel
  ConsoleSpecialKey SpecialKey
Методы:
  void .ctor(ConsoleSpecialKey type)
  bool get_Cancel()
  void set_Cancel(bool value)
  ConsoleSpecialKey get_SpecialKey()
  void .ctor()
--------------------------------------------------
Класс: System.ConsoleColor
Наследуется от: Enum
Поля:
  int value__
  ConsoleColor Black
  ConsoleColor DarkBlue
  ConsoleColor DarkGreen
  ConsoleColor DarkCyan
  ConsoleColor DarkRed
  ConsoleColor DarkMagenta
  ConsoleColor DarkYellow
  ConsoleColor Gray
  ConsoleColor DarkGray
  ConsoleColor Blue
  ConsoleColor Green
  ConsoleColor Cyan
  ConsoleColor Red
  ConsoleColor Magenta
  ConsoleColor Yellow
  ConsoleColor White
Свойства:
Методы:
--------------------------------------------------
Класс: System.ConsoleKey
Наследуется от: Enum
Поля:
  int value__
  ConsoleKey Backspace
  ConsoleKey Tab
  ConsoleKey Clear
  ConsoleKey Enter
  ConsoleKey Pause
  ConsoleKey Escape
  ConsoleKey Spacebar
  ConsoleKey PageUp
  ConsoleKey PageDown
  ConsoleKey End
  ConsoleKey Home
  ConsoleKey LeftArrow
  ConsoleKey UpArrow
  ConsoleKey RightArrow
  ConsoleKey DownArrow
  ConsoleKey Select
  ConsoleKey Print
  ConsoleKey Execute
  ConsoleKey PrintScreen
  ConsoleKey Insert
  ConsoleKey Delete
  ConsoleKey Help
  ConsoleKey D0
  ConsoleKey D1
  ConsoleKey D2
  ConsoleKey D3
  ConsoleKey D4
  ConsoleKey D5
  ConsoleKey D6
  ConsoleKey D7
  ConsoleKey D8
  ConsoleKey D9
  ConsoleKey A
  ConsoleKey B
  ConsoleKey C
  ConsoleKey D
  ConsoleKey E
  ConsoleKey F
  ConsoleKey G
  ConsoleKey H
  ConsoleKey I
  ConsoleKey J
  ConsoleKey K
  ConsoleKey L
  ConsoleKey M
  ConsoleKey N
  ConsoleKey O
  ConsoleKey P
  ConsoleKey Q
  ConsoleKey R
  ConsoleKey S
  ConsoleKey T
  ConsoleKey U
  ConsoleKey V
  ConsoleKey W
  ConsoleKey X
  ConsoleKey Y
  ConsoleKey Z
  ConsoleKey LeftWindows
  ConsoleKey RightWindows
  ConsoleKey Applications
  ConsoleKey Sleep
  ConsoleKey NumPad0
  ConsoleKey NumPad1
  ConsoleKey NumPad2
  ConsoleKey NumPad3
  ConsoleKey NumPad4
  ConsoleKey NumPad5
  ConsoleKey NumPad6
  ConsoleKey NumPad7
  ConsoleKey NumPad8
  ConsoleKey NumPad9
  ConsoleKey Multiply
  ConsoleKey Add
  ConsoleKey Separator
  ConsoleKey Subtract
  ConsoleKey Decimal
  ConsoleKey Divide
  ConsoleKey F1
  ConsoleKey F2
  ConsoleKey F3
  ConsoleKey F4
  ConsoleKey F5
  ConsoleKey F6
  ConsoleKey F7
  ConsoleKey F8
  ConsoleKey F9
  ConsoleKey F10
  ConsoleKey F11
  ConsoleKey F12
  ConsoleKey F13
  ConsoleKey F14
  ConsoleKey F15
  ConsoleKey F16
  ConsoleKey F17
  ConsoleKey F18
  ConsoleKey F19
  ConsoleKey F20
  ConsoleKey F21
  ConsoleKey F22
  ConsoleKey F23
  ConsoleKey F24
  ConsoleKey BrowserBack
  ConsoleKey BrowserForward
  ConsoleKey BrowserRefresh
  ConsoleKey BrowserStop
  ConsoleKey BrowserSearch
  ConsoleKey BrowserFavorites
  ConsoleKey BrowserHome
  ConsoleKey VolumeMute
  ConsoleKey VolumeDown
  ConsoleKey VolumeUp
  ConsoleKey MediaNext
  ConsoleKey MediaPrevious
  ConsoleKey MediaStop
  ConsoleKey MediaPlay
  ConsoleKey LaunchMail
  ConsoleKey LaunchMediaSelect
  ConsoleKey LaunchApp1
  ConsoleKey LaunchApp2
  ConsoleKey Oem1
  ConsoleKey OemPlus
  ConsoleKey OemComma
  ConsoleKey OemMinus
  ConsoleKey OemPeriod
  ConsoleKey Oem2
  ConsoleKey Oem3
  ConsoleKey Oem4
  ConsoleKey Oem5
  ConsoleKey Oem6
  ConsoleKey Oem7
  ConsoleKey Oem8
  ConsoleKey Oem102
  ConsoleKey Process
  ConsoleKey Packet
  ConsoleKey Attention
  ConsoleKey CrSel
  ConsoleKey ExSel
  ConsoleKey EraseEndOfFile
  ConsoleKey Play
  ConsoleKey Zoom
  ConsoleKey NoName
  ConsoleKey Pa1
  ConsoleKey OemClear
Свойства:
Методы:
--------------------------------------------------
Класс: System.ConsoleKeyInfo
Наследуется от: ValueType
Поля:
  char _keyChar
  ConsoleKey _key
  ConsoleModifiers _mods
Свойства:
  char KeyChar
  ConsoleKey Key
  ConsoleModifiers Modifiers
Методы:
  void .ctor(char keyChar, ConsoleKey key, bool shift, bool alt, bool control)
  char get_KeyChar()
  ConsoleKey get_Key()
  ConsoleModifiers get_Modifiers()
  bool Equals(object value)
  bool Equals(ConsoleKeyInfo obj)
  bool op_Equality(ConsoleKeyInfo a, ConsoleKeyInfo b)
  bool op_Inequality(ConsoleKeyInfo a, ConsoleKeyInfo b)
  int GetHashCode()
--------------------------------------------------
Класс: System.ConsoleModifiers
Наследуется от: Enum
Поля:
  int value__
  ConsoleModifiers Alt
  ConsoleModifiers Shift
  ConsoleModifiers Control
Свойства:
Методы:
--------------------------------------------------
Класс: System.ConsoleSpecialKey
Наследуется от: Enum
Поля:
  int value__
  ConsoleSpecialKey ControlC
  ConsoleSpecialKey ControlBreak
Свойства:
Методы:
--------------------------------------------------
Класс: System.DecimalDecCalc
Наследуется от: object
Поля:
Свойства:
Методы:
  UInt32 D32DivMod1E9(UInt32 hi32, UInt32& lo32)
  UInt32 DecDivMod1E9(MutableDecimal& value)
  void DecAddInt32(MutableDecimal& value, UInt32 i)
  bool D32AddCarry(UInt32& value, UInt32 i)
  void DecMul10(MutableDecimal& value)
  void DecShiftLeft(MutableDecimal& value)
  void DecAdd(MutableDecimal& value, MutableDecimal d)
--------------------------------------------------
Класс: System.Pinnable`1
Наследуется от: object
Поля:
  T Data
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.SequencePosition
Наследуется от: ValueType
Поля:
  object _object
  int _integer
Свойства:
Методы:
  void .ctor(object object, int integer)
  object GetObject()
  int GetInteger()
  bool Equals(SequencePosition other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ThrowHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void ThrowArgumentNullException(ExceptionArgument argument)
  Exception CreateArgumentNullException(ExceptionArgument argument)
  void ThrowArrayTypeMismatchException()
  Exception CreateArrayTypeMismatchException()
  void ThrowArgumentException_InvalidTypeWithPointersNotSupported(Type type)
  Exception CreateArgumentException_InvalidTypeWithPointersNotSupported(Type type)
  void ThrowArgumentException_DestinationTooShort()
  Exception CreateArgumentException_DestinationTooShort()
  void ThrowIndexOutOfRangeException()
  Exception CreateIndexOutOfRangeException()
  void ThrowArgumentOutOfRangeException()
  Exception CreateArgumentOutOfRangeException()
  void ThrowArgumentOutOfRangeException(ExceptionArgument argument)
  Exception CreateArgumentOutOfRangeException(ExceptionArgument argument)
  void ThrowArgumentOutOfRangeException_PrecisionTooLarge()
  Exception CreateArgumentOutOfRangeException_PrecisionTooLarge()
  void ThrowArgumentOutOfRangeException_SymbolDoesNotFit()
  Exception CreateArgumentOutOfRangeException_SymbolDoesNotFit()
  void ThrowInvalidOperationException()
  Exception CreateInvalidOperationException()
  void ThrowInvalidOperationException_OutstandingReferences()
  Exception CreateInvalidOperationException_OutstandingReferences()
  void ThrowInvalidOperationException_UnexpectedSegmentType()
  Exception CreateInvalidOperationException_UnexpectedSegmentType()
  void ThrowInvalidOperationException_EndPositionNotReached()
  Exception CreateInvalidOperationException_EndPositionNotReached()
  void ThrowArgumentOutOfRangeException_PositionOutOfRange()
  Exception CreateArgumentOutOfRangeException_PositionOutOfRange()
  void ThrowArgumentOutOfRangeException_OffsetOutOfRange()
  Exception CreateArgumentOutOfRangeException_OffsetOutOfRange()
  void ThrowObjectDisposedException_ArrayMemoryPoolBuffer()
  Exception CreateObjectDisposedException_ArrayMemoryPoolBuffer()
  void ThrowFormatException_BadFormatSpecifier()
  Exception CreateFormatException_BadFormatSpecifier()
  void ThrowArgumentException_OverlapAlignmentMismatch()
  Exception CreateArgumentException_OverlapAlignmentMismatch()
  void ThrowNotSupportedException()
  Exception CreateThrowNotSupportedException()
  bool TryFormatThrowFormatException(Int32& bytesWritten)
  bool TryParseThrowFormatException(T& value, Int32& bytesConsumed)
  void ThrowArgumentValidationException(ReadOnlySequenceSegment`1<T> startSegment, int startIndex, ReadOnlySequenceSegment`1<T> endSegment)
  Exception CreateArgumentValidationException(ReadOnlySequenceSegment`1<T> startSegment, int startIndex, ReadOnlySequenceSegment`1<T> endSegment)
  void ThrowArgumentValidationException(Array array, int start)
  Exception CreateArgumentValidationException(Array array, int start)
  void ThrowStartOrEndArgumentValidationException(long start)
  Exception CreateStartOrEndArgumentValidationException(long start)
  void ThrowWrongKeyTypeArgumentException(object key, Type targetType)
  void ThrowWrongValueTypeArgumentException(object value, Type targetType)
  void ThrowKeyNotFoundException()
  void ThrowArgumentException(ExceptionResource resource)
  void ThrowArgumentException(ExceptionResource resource, ExceptionArgument argument)
  void ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
  void ThrowInvalidOperationException(ExceptionResource resource)
  void ThrowSerializationException(ExceptionResource resource)
  void ThrowSecurityException(ExceptionResource resource)
  void ThrowNotSupportedException(ExceptionResource resource)
  void ThrowUnauthorizedAccessException(ExceptionResource resource)
  void ThrowObjectDisposedException(string objectName, ExceptionResource resource)
  void ThrowInvalidOperationException_InvalidOperation_EnumFailedVersion()
  void ThrowInvalidOperationException_InvalidOperation_EnumOpCantHappen()
  void ThrowInvalidOperationException_InvalidOperation_EnumNotStarted()
  void ThrowInvalidOperationException_InvalidOperation_EnumEnded()
  void ThrowInvalidOperationException_InvalidOperation_NoValue()
  ArgumentOutOfRangeException GetArgumentOutOfRangeException(ExceptionArgument argument, string resource)
  void ThrowArgumentOutOfRange_IndexException()
  void ThrowIndexArgumentOutOfRange_NeedNonNegNumException()
  void ThrowArgumentException_Argument_InvalidArrayType()
  ArgumentException GetAddingDuplicateWithKeyArgumentException(object key)
  void ThrowAddingDuplicateWithKeyArgumentException(object key)
  KeyNotFoundException GetKeyNotFoundException(object key)
  void ThrowKeyNotFoundException(object key)
  void ThrowInvalidTypeWithPointersNotSupported(Type targetType)
  void ThrowInvalidOperationException_ConcurrentOperationsNotSupported()
  InvalidOperationException GetInvalidOperationException(string str)
  void ThrowArraySegmentCtorValidationFailedExceptions(Array array, int offset, int count)
  Exception GetArraySegmentCtorValidationFailedException(Array array, int offset, int count)
  ArgumentException GetArgumentException(ExceptionResource resource)
  ArgumentNullException GetArgumentNullException(ExceptionArgument argument)
  void IfNullAndNullsAreIllegalThenThrow(object value, ExceptionArgument argName)
  string GetArgumentName(ExceptionArgument argument)
  ArgumentOutOfRangeException GetArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
  void ThrowStartIndexArgumentOutOfRange_ArgumentOutOfRange_Index()
  void ThrowCountArgumentOutOfRange_ArgumentOutOfRange_Count()
  string GetResourceName(ExceptionResource resource)
  void ThrowValueArgumentOutOfRange_NeedNonNegNumException()
--------------------------------------------------
Класс: System.AppDomainUnloadedException
Наследуется от: SystemException
Поля:
  int COR_E_APPDOMAINUNLOADED
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ApplicationId
Наследуется от: object
Поля:
  Byte[] _publicKeyToken
  string <Culture>k__BackingField
  string <Name>k__BackingField
  string <ProcessorArchitecture>k__BackingField
  Version <Version>k__BackingField
Свойства:
  string Culture
  string Name
  string ProcessorArchitecture
  Version Version
  Byte[] PublicKeyToken
Методы:
  void .ctor(Byte[] publicKeyToken, string name, Version version, string processorArchitecture, string culture)
  string get_Culture()
  string get_Name()
  string get_ProcessorArchitecture()
  Version get_Version()
  Byte[] get_PublicKeyToken()
  ApplicationId Copy()
  string ToString()
  char HexDigit(int num)
  string EncodeHexString(Byte[] sArray)
  bool Equals(object o)
  int GetHashCode()
--------------------------------------------------
Класс: System.CannotUnloadAppDomainException
Наследуется от: SystemException
Поля:
  int COR_E_CANNOTUNLOADAPPDOMAIN
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.LoaderOptimization
Наследуется от: Enum
Поля:
  int value__
  LoaderOptimization DisallowBindings
  LoaderOptimization DomainMask
  LoaderOptimization MultiDomain
  LoaderOptimization MultiDomainHost
  LoaderOptimization NotSpecified
  LoaderOptimization SingleDomain
Свойства:
Методы:
--------------------------------------------------
Класс: System.LoaderOptimizationAttribute
Наследуется от: Attribute
Поля:
  byte _val
Свойства:
  LoaderOptimization Value
Методы:
  void .ctor(byte value)
  void .ctor(LoaderOptimization value)
  LoaderOptimization get_Value()
--------------------------------------------------
Класс: System.OperatingSystem
Наследуется от: object
Поля:
  Version _version
  PlatformID _platform
  string _servicePack
  string _versionString
Свойства:
  PlatformID Platform
  string ServicePack
  Version Version
  string VersionString
Методы:
  void .ctor(PlatformID platform, Version version)
  void .ctor(PlatformID platform, Version version, string servicePack)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  PlatformID get_Platform()
  string get_ServicePack()
  Version get_Version()
  object Clone()
  string ToString()
  string get_VersionString()
--------------------------------------------------
Класс: System.InsufficientMemoryException
Наследуется от: OutOfMemoryException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.MissingFieldException
Наследуется от: MissingMemberException
Поля:
Свойства:
  string Message
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string className, string fieldName)
  void .ctor(SerializationInfo info, StreamingContext context)
  string get_Message()
--------------------------------------------------
Класс: System.MissingMemberException
Наследуется от: MemberAccessException
Поля:
  string ClassName
  string MemberName
  Byte[] Signature
Свойства:
  string Message
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string className, string memberName)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Message()
  string FormatSignature(Byte[] signature)
--------------------------------------------------
Класс: System.OutOfMemoryException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Array
Наследуется от: object
Поля:
Свойства:
  int System.Collections.ICollection.Count
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
  long LongLength
  bool IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
  int Length
  int Rank
Методы:
  Array CreateInstance(Type elementType, Int64[] lengths)
  ReadOnlyCollection`1<T> AsReadOnly(T[] array)
  void Resize(T[]& array, int newSize)
  int System.Collections.ICollection.get_Count()
  bool System.Collections.IList.get_IsReadOnly()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  void System.Collections.IList.Clear()
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  void CopyTo(Array array, int index)
  object Clone()
  int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer)
  bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer)
  int CombineHashCodes(int h1, int h2)
  int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer)
  int BinarySearch(Array array, object value)
  TOutput[] ConvertAll(TInput[] array, Converter`2<TInput, TOutput> converter)
  void Copy(Array sourceArray, Array destinationArray, long length)
  void Copy(Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length)
  void CopyTo(Array array, long index)
  void ForEach(T[] array, Action`1<T> action)
  long get_LongLength()
  long GetLongLength(int dimension)
  object GetValue(long index)
  object GetValue(long index1, long index2)
  object GetValue(long index1, long index2, long index3)
  object GetValue(Int64[] indices)
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  object get_SyncRoot()
  int BinarySearch(Array array, int index, int length, object value)
  int BinarySearch(Array array, object value, IComparer comparer)
  int BinarySearch(Array array, int index, int length, object value, IComparer comparer)
  int GetMedian(int low, int hi)
  int BinarySearch(T[] array, T value)
  int BinarySearch(T[] array, T value, IComparer`1<T> comparer)
  int BinarySearch(T[] array, int index, int length, T value)
  int BinarySearch(T[] array, int index, int length, T value, IComparer`1<T> comparer)
  int IndexOf(Array array, object value)
  int IndexOf(Array array, object value, int startIndex)
  int IndexOf(Array array, object value, int startIndex, int count)
  int IndexOf(T[] array, T value)
  int IndexOf(T[] array, T value, int startIndex)
  int IndexOf(T[] array, T value, int startIndex, int count)
  int LastIndexOf(Array array, object value)
  int LastIndexOf(Array array, object value, int startIndex)
  int LastIndexOf(Array array, object value, int startIndex, int count)
  int LastIndexOf(T[] array, T value)
  int LastIndexOf(T[] array, T value, int startIndex)
  int LastIndexOf(T[] array, T value, int startIndex, int count)
  void Reverse(Array array)
  void Reverse(Array array, int index, int length)
  void Reverse(T[] array)
  void Reverse(T[] array, int index, int length)
  void SetValue(object value, long index)
  void SetValue(object value, long index1, long index2)
  void SetValue(object value, long index1, long index2, long index3)
  void SetValue(object value, Int64[] indices)
  void Sort(Array array)
  void Sort(Array array, int index, int length)
  void Sort(Array array, IComparer comparer)
  void Sort(Array array, int index, int length, IComparer comparer)
  void Sort(Array keys, Array items)
  void Sort(Array keys, Array items, IComparer comparer)
  void Sort(Array keys, Array items, int index, int length)
  void Sort(Array keys, Array items, int index, int length, IComparer comparer)
  void Sort(T[] array)
  void Sort(T[] array, int index, int length)
  void Sort(T[] array, IComparer`1<T> comparer)
  void Sort(T[] array, int index, int length, IComparer`1<T> comparer)
  void Sort(T[] array, Comparison`1<T> comparison)
  void Sort(TKey[] keys, TValue[] items)
  void Sort(TKey[] keys, TValue[] items, int index, int length)
  void Sort(TKey[] keys, TValue[] items, IComparer`1<TKey> comparer)
  void Sort(TKey[] keys, TValue[] items, int index, int length, IComparer`1<TKey> comparer)
  bool Exists(T[] array, Predicate`1<T> match)
  void Fill(T[] array, T value)
  void Fill(T[] array, T value, int startIndex, int count)
  T Find(T[] array, Predicate`1<T> match)
  T[] FindAll(T[] array, Predicate`1<T> match)
  int FindIndex(T[] array, Predicate`1<T> match)
  int FindIndex(T[] array, int startIndex, Predicate`1<T> match)
  int FindIndex(T[] array, int startIndex, int count, Predicate`1<T> match)
  T FindLast(T[] array, Predicate`1<T> match)
  int FindLastIndex(T[] array, Predicate`1<T> match)
  int FindLastIndex(T[] array, int startIndex, Predicate`1<T> match)
  int FindLastIndex(T[] array, int startIndex, int count, Predicate`1<T> match)
  bool TrueForAll(T[] array, Predicate`1<T> match)
  IEnumerator GetEnumerator()
  void .ctor()
  int InternalArray__ICollection_get_Count()
  bool InternalArray__ICollection_get_IsReadOnly()
  Byte& GetRawSzArrayData()
  IEnumerator`1<T> InternalArray__IEnumerable_GetEnumerator()
  void InternalArray__ICollection_Clear()
  void InternalArray__ICollection_Add(T item)
  bool InternalArray__ICollection_Remove(T item)
  bool InternalArray__ICollection_Contains(T item)
  void InternalArray__ICollection_CopyTo(T[] array, int arrayIndex)
  T InternalArray__IReadOnlyList_get_Item(int index)
  int InternalArray__IReadOnlyCollection_get_Count()
  void InternalArray__Insert(int index, T item)
  void InternalArray__RemoveAt(int index)
  int InternalArray__IndexOf(T item)
  T InternalArray__get_Item(int index)
  void InternalArray__set_Item(int index, T item)
  void GetGenericValue_icall(Array& self, int pos, T& value)
  void SetGenericValue_icall(Array& self, int pos, T& value)
  void GetGenericValueImpl(int pos, T& value)
  void SetGenericValueImpl(int pos, T& value)
  int get_Length()
  int get_Rank()
  int GetRank()
  int GetLength(int dimension)
  int GetLowerBound(int dimension)
  object GetValue(Int32[] indices)
  void SetValue(object value, Int32[] indices)
  object GetValueImpl(int pos)
  void SetValueImpl(object value, int pos)
  bool FastCopy(Array source, int source_idx, Array dest, int dest_idx, int length)
  Array CreateInstanceImpl(Type elementType, Int32[] lengths, Int32[] bounds)
  int GetUpperBound(int dimension)
  object GetValue(int index)
  object GetValue(int index1, int index2)
  object GetValue(int index1, int index2, int index3)
  void SetValue(object value, int index)
  void SetValue(object value, int index1, int index2)
  void SetValue(object value, int index1, int index2, int index3)
  Array UnsafeCreateInstance(Type elementType, Int32[] lengths, Int32[] lowerBounds)
  Array UnsafeCreateInstance(Type elementType, int length1, int length2)
  Array UnsafeCreateInstance(Type elementType, Int32[] lengths)
  Array CreateInstance(Type elementType, int length)
  Array CreateInstance(Type elementType, int length1, int length2)
  Array CreateInstance(Type elementType, int length1, int length2, int length3)
  Array CreateInstance(Type elementType, Int32[] lengths)
  Array CreateInstance(Type elementType, Int32[] lengths, Int32[] lowerBounds)
  void Clear(Array array, int index, int length)
  void ClearInternal(Array a, int index, int count)
  void Copy(Array sourceArray, Array destinationArray, int length)
  void Copy(Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length)
  ArrayTypeMismatchException CreateArrayTypeMismatchException()
  bool CanAssignArrayElement(Type source, Type target)
  void ConstrainedCopy(Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length)
  T[] Empty()
  void Initialize()
  int IndexOfImpl(T[] array, T value, int startIndex, int count)
  int LastIndexOfImpl(T[] array, T value, int startIndex, int count)
  void SortImpl(Array keys, Array items, int index, int length, IComparer comparer)
  T UnsafeLoad(T[] array, int index)
  void UnsafeStore(T[] array, int index, T value)
  R UnsafeMov(S instance)
--------------------------------------------------
Класс: System.ByReference`1
Наследуется от: ValueType
Поля:
  IntPtr _value
Свойства:
  T& Value
Методы:
  void .ctor(T& value)
  T& get_Value()
--------------------------------------------------
Класс: System.MonoTODOAttribute
Наследуется от: Attribute
Поля:
  string comment
Свойства:
  string Comment
Методы:
  void .ctor()
  void .ctor(string comment)
  string get_Comment()
--------------------------------------------------
Класс: System.MonoDocumentationNoteAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoExtensionAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoInternalNoteAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoLimitationAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.MonoNotSupportedAttribute
Наследуется от: MonoTODOAttribute
Поля:
Свойства:
Методы:
  void .ctor(string comment)
--------------------------------------------------
Класс: System.AppContext
Наследуется от: object
Поля:
  Dictionary`2<string, SwitchValueState> s_switchMap
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_defaultsInitialized
Свойства:
  string BaseDirectory
  string TargetFrameworkName
Методы:
  string get_BaseDirectory()
  string get_TargetFrameworkName()
  object GetData(string name)
  void InitializeDefaultSwitchValues()
  bool TryGetSwitch(string switchName, Boolean& isEnabled)
  void SetSwitch(string switchName, bool isEnabled)
  void DefineSwitchDefault(string switchName, bool isEnabled)
  void DefineSwitchOverride(string switchName, bool isEnabled)
  void .cctor()
--------------------------------------------------
Класс: System.AppContextSwitches
Наследуется от: object
Поля:
  int _noAsyncCurrentCulture
  int _enforceJapaneseEraYearRanges
  int _formatJapaneseFirstYearAsANumber
  int _enforceLegacyJapaneseDateParsing
  int _throwExceptionIfDisposedCancellationTokenSource
  int _preserveEventListnerObjectIdentity
  int _useLegacyPathHandling
  int _blockLongPaths
  int _cloneActor
  int _doNotAddrOfCspParentWindowHandle
  bool <DisableCaching>k__BackingField
Свойства:
  bool NoAsyncCurrentCulture
  bool EnforceJapaneseEraYearRanges
  bool FormatJapaneseFirstYearAsANumber
  bool EnforceLegacyJapaneseDateParsing
  bool ThrowExceptionIfDisposedCancellationTokenSource
  bool PreserveEventListnerObjectIdentity
  bool UseLegacyPathHandling
  bool BlockLongPaths
  bool SetActorAsReferenceWhenCopyingClaimsIdentity
  bool DoNotAddrOfCspParentWindowHandle
  bool DisableCaching
Методы:
  bool get_NoAsyncCurrentCulture()
  bool get_EnforceJapaneseEraYearRanges()
  bool get_FormatJapaneseFirstYearAsANumber()
  bool get_EnforceLegacyJapaneseDateParsing()
  bool get_ThrowExceptionIfDisposedCancellationTokenSource()
  bool get_PreserveEventListnerObjectIdentity()
  bool get_UseLegacyPathHandling()
  bool get_BlockLongPaths()
  bool get_SetActorAsReferenceWhenCopyingClaimsIdentity()
  bool get_DoNotAddrOfCspParentWindowHandle()
  bool get_DisableCaching()
  void set_DisableCaching(bool value)
  void .cctor()
  bool GetCachedSwitchValue(string switchName, Int32& switchValue)
  bool GetCachedSwitchValueInternal(string switchName, Int32& switchValue)
--------------------------------------------------
Класс: System.__Filters
Наследуется от: object
Поля:
  __Filters Instance
Свойства:
Методы:
  bool FilterAttribute(MemberInfo m, object filterCriteria)
  bool FilterName(MemberInfo m, object filterCriteria)
  bool FilterIgnoreCase(MemberInfo m, object filterCriteria)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.__HResults
Наследуется от: object
Поля:
  int RO_E_CLOSED
  int E_BOUNDS
  int E_CHANGED_STATE
  int E_FAIL
  int E_POINTER
  int E_NOTIMPL
  int REGDB_E_CLASSNOTREG
  int COR_E_AMBIGUOUSMATCH
  int COR_E_APPDOMAINUNLOADED
  int COR_E_APPLICATION
  int COR_E_ARGUMENT
  int COR_E_ARGUMENTOUTOFRANGE
  int COR_E_ARITHMETIC
  int COR_E_ARRAYTYPEMISMATCH
  int COR_E_BADIMAGEFORMAT
  int COR_E_TYPEUNLOADED
  int COR_E_CANNOTUNLOADAPPDOMAIN
  int COR_E_COMEMULATE
  int COR_E_CONTEXTMARSHAL
  int COR_E_DATAMISALIGNED
  int COR_E_TIMEOUT
  int COR_E_CUSTOMATTRIBUTEFORMAT
  int COR_E_DIVIDEBYZERO
  int COR_E_DUPLICATEWAITOBJECT
  int COR_E_EXCEPTION
  int COR_E_EXECUTIONENGINE
  int COR_E_FIELDACCESS
  int COR_E_FORMAT
  int COR_E_INDEXOUTOFRANGE
  int COR_E_INSUFFICIENTMEMORY
  int COR_E_INSUFFICIENTEXECUTIONSTACK
  int COR_E_INVALIDCAST
  int COR_E_INVALIDCOMOBJECT
  int COR_E_INVALIDFILTERCRITERIA
  int COR_E_INVALIDOLEVARIANTTYPE
  int COR_E_INVALIDOPERATION
  int COR_E_INVALIDPROGRAM
  int COR_E_KEYNOTFOUND
  int COR_E_MARSHALDIRECTIVE
  int COR_E_MEMBERACCESS
  int COR_E_METHODACCESS
  int COR_E_MISSINGFIELD
  int COR_E_MISSINGMANIFESTRESOURCE
  int COR_E_MISSINGMEMBER
  int COR_E_MISSINGMETHOD
  int COR_E_MISSINGSATELLITEASSEMBLY
  int COR_E_MULTICASTNOTSUPPORTED
  int COR_E_NOTFINITENUMBER
  int COR_E_PLATFORMNOTSUPPORTED
  int COR_E_NOTSUPPORTED
  int COR_E_NULLREFERENCE
  int COR_E_OBJECTDISPOSED
  int COR_E_OPERATIONCANCELED
  int COR_E_OUTOFMEMORY
  int COR_E_OVERFLOW
  int COR_E_RANK
  int COR_E_REFLECTIONTYPELOAD
  int COR_E_RUNTIMEWRAPPED
  int COR_E_SAFEARRAYRANKMISMATCH
  int COR_E_SAFEARRAYTYPEMISMATCH
  int COR_E_SAFEHANDLEMISSINGATTRIBUTE
  int COR_E_SECURITY
  int COR_E_SERIALIZATION
  int COR_E_SEMAPHOREFULL
  int COR_E_WAITHANDLECANNOTBEOPENED
  int COR_E_ABANDONEDMUTEX
  int COR_E_STACKOVERFLOW
  int COR_E_SYNCHRONIZATIONLOCK
  int COR_E_SYSTEM
  int COR_E_TARGET
  int COR_E_TARGETINVOCATION
  int COR_E_TARGETPARAMCOUNT
  int COR_E_THREADABORTED
  int COR_E_THREADINTERRUPTED
  int COR_E_THREADSTATE
  int COR_E_THREADSTOP
  int COR_E_THREADSTART
  int COR_E_TYPEACCESS
  int COR_E_TYPEINITIALIZATION
  int COR_E_TYPELOAD
  int COR_E_ENTRYPOINTNOTFOUND
  int COR_E_DLLNOTFOUND
  int COR_E_UNAUTHORIZEDACCESS
  int COR_E_UNSUPPORTEDFORMAT
  int COR_E_VERIFICATION
  int COR_E_HOSTPROTECTION
  int CORSEC_E_MIN_GRANT_FAIL
  int CORSEC_E_NO_EXEC_PERM
  int CORSEC_E_POLICY_EXCEPTION
  int CORSEC_E_XMLSYNTAX
  int NTE_FAIL
  int CORSEC_E_CRYPTO
  int CORSEC_E_CRYPTO_UNEX_OPER
  int DISP_E_OVERFLOW
  int FUSION_E_REF_DEF_MISMATCH
  int FUSION_E_INVALID_NAME
  int TYPE_E_TYPEMISMATCH
Свойства:
Методы:
--------------------------------------------------
Класс: System.LocalDataStoreHolder
Наследуется от: object
Поля:
  LocalDataStore m_Store
Свойства:
  LocalDataStore Store
Методы:
  void .ctor(LocalDataStore store)
  void Finalize()
  LocalDataStore get_Store()
--------------------------------------------------
Класс: System.LocalDataStoreElement
Наследуется от: object
Поля:
  object m_value
  long m_cookie
Свойства:
  object Value
  long Cookie
Методы:
  void .ctor(long cookie)
  object get_Value()
  void set_Value(object value)
  long get_Cookie()
--------------------------------------------------
Класс: System.LocalDataStore
Наследуется от: object
Поля:
  LocalDataStoreElement[] m_DataTable
  LocalDataStoreMgr m_Manager
Свойства:
Методы:
  void .ctor(LocalDataStoreMgr mgr, int InitialCapacity)
  void Dispose()
  object GetData(LocalDataStoreSlot slot)
  void SetData(LocalDataStoreSlot slot, object data)
  void FreeData(int slot, long cookie)
  LocalDataStoreElement PopulateElement(LocalDataStoreSlot slot)
--------------------------------------------------
Класс: System.LocalDataStoreSlot
Наследуется от: object
Поля:
  LocalDataStoreMgr m_mgr
  int m_slot
  long m_cookie
Свойства:
  LocalDataStoreMgr Manager
  int Slot
  long Cookie
Методы:
  void .ctor(LocalDataStoreMgr mgr, int slot, long cookie)
  LocalDataStoreMgr get_Manager()
  int get_Slot()
  long get_Cookie()
  void Finalize()
  void .ctor()
--------------------------------------------------
Класс: System.LocalDataStoreMgr
Наследуется от: object
Поля:
  int InitialSlotTableSize
  int SlotTableDoubleThreshold
  int LargeSlotTableSizeIncrease
  Boolean[] m_SlotInfoTable
  int m_FirstAvailableSlot
  List`1<LocalDataStore> m_ManagedLocalDataStores
  Dictionary`2<string, LocalDataStoreSlot> m_KeyToSlotMap
  long m_CookieGenerator
Свойства:
Методы:
  LocalDataStoreHolder CreateLocalDataStore()
  void DeleteLocalDataStore(LocalDataStore store)
  LocalDataStoreSlot AllocateDataSlot()
  LocalDataStoreSlot AllocateNamedDataSlot(string name)
  LocalDataStoreSlot GetNamedDataSlot(string name)
  void FreeNamedDataSlot(string name)
  void FreeDataSlot(int slot, long cookie)
  void ValidateSlot(LocalDataStoreSlot slot)
  int GetSlotTableLength()
  void .ctor()
--------------------------------------------------
Класс: System.Activator
Наследуется от: object
Поля:
  int LookupMask
  BindingFlags ConLookup
  BindingFlags ConstructorDefault
Свойства:
Методы:
  void .ctor()
  object CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
  object CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  object CreateInstance(Type type, Object[] args)
  object CreateInstance(Type type, Object[] args, Object[] activationAttributes)
  object CreateInstance(Type type)
  ObjectHandle CreateInstance(string assemblyName, string typeName)
  ObjectHandle CreateInstance(string assemblyName, string typeName, Object[] activationAttributes)
  object CreateInstance(Type type, bool nonPublic)
  object CreateInstance(Type type, bool nonPublic, bool wrapExceptions)
  T CreateInstance()
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, Object[] activationAttributes)
  ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityInfo)
  ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  ObjectHandle CreateInstance(string assemblyString, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityInfo, StackCrawlMark& stackMark)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityInfo)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  ObjectHandle CreateInstanceFromInternal(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityInfo)
  ObjectHandle CreateInstance(AppDomain domain, string assemblyName, string typeName)
  ObjectHandle CreateInstance(AppDomain domain, string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  ObjectHandle CreateInstance(AppDomain domain, string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  ObjectHandle CreateInstanceFrom(AppDomain domain, string assemblyFile, string typeName)
  ObjectHandle CreateInstanceFrom(AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  ObjectHandle CreateInstanceFrom(AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName)
  ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
  object GetObject(Type type, string url)
  object GetObject(Type type, string url, object state)
  void Log(bool test, string title, string success, string failure)
  void System.Runtime.InteropServices._Activator.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._Activator.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._Activator.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  ObjectHandle CreateInstance(ActivationContext activationContext)
  ObjectHandle CreateInstance(ActivationContext activationContext, String[] activationCustomData)
--------------------------------------------------
Класс: System.Attribute
Наследуется от: object
Поля:
Свойства:
  object TypeId
Методы:
  Attribute[] InternalGetCustomAttributes(PropertyInfo element, Type type, bool inherit)
  Attribute[] InternalGetCustomAttributes(EventInfo element, Type type, bool inherit)
  Attribute[] InternalParamGetCustomAttributes(ParameterInfo parameter, Type attributeType, bool inherit)
  bool InternalIsDefined(PropertyInfo element, Type attributeType, bool inherit)
  bool InternalIsDefined(EventInfo element, Type attributeType, bool inherit)
  bool InternalParamIsDefined(ParameterInfo parameter, Type attributeType, bool inherit)
  Attribute[] GetCustomAttributes(MemberInfo element, Type type)
  Attribute[] GetCustomAttributes(MemberInfo element, Type type, bool inherit)
  Attribute[] GetCustomAttributes(MemberInfo element)
  Attribute[] GetCustomAttributes(MemberInfo element, bool inherit)
  bool IsDefined(MemberInfo element, Type attributeType)
  bool IsDefined(MemberInfo element, Type attributeType, bool inherit)
  Attribute GetCustomAttribute(MemberInfo element, Type attributeType)
  Attribute GetCustomAttribute(MemberInfo element, Type attributeType, bool inherit)
  Attribute[] GetCustomAttributes(ParameterInfo element)
  Attribute[] GetCustomAttributes(ParameterInfo element, Type attributeType)
  Attribute[] GetCustomAttributes(ParameterInfo element, Type attributeType, bool inherit)
  Attribute[] GetCustomAttributes(ParameterInfo element, bool inherit)
  bool IsDefined(ParameterInfo element, Type attributeType)
  bool IsDefined(ParameterInfo element, Type attributeType, bool inherit)
  Attribute GetCustomAttribute(ParameterInfo element, Type attributeType)
  Attribute GetCustomAttribute(ParameterInfo element, Type attributeType, bool inherit)
  Attribute[] GetCustomAttributes(Module element, Type attributeType)
  Attribute[] GetCustomAttributes(Module element)
  Attribute[] GetCustomAttributes(Module element, bool inherit)
  Attribute[] GetCustomAttributes(Module element, Type attributeType, bool inherit)
  bool IsDefined(Module element, Type attributeType)
  bool IsDefined(Module element, Type attributeType, bool inherit)
  Attribute GetCustomAttribute(Module element, Type attributeType)
  Attribute GetCustomAttribute(Module element, Type attributeType, bool inherit)
  Attribute[] GetCustomAttributes(Assembly element, Type attributeType)
  Attribute[] GetCustomAttributes(Assembly element, Type attributeType, bool inherit)
  Attribute[] GetCustomAttributes(Assembly element)
  Attribute[] GetCustomAttributes(Assembly element, bool inherit)
  bool IsDefined(Assembly element, Type attributeType)
  bool IsDefined(Assembly element, Type attributeType, bool inherit)
  Attribute GetCustomAttribute(Assembly element, Type attributeType)
  Attribute GetCustomAttribute(Assembly element, Type attributeType, bool inherit)
  void .ctor()
  bool Equals(object obj)
  bool AreFieldValuesEqual(object thisValue, object thatValue)
  int GetHashCode()
  object get_TypeId()
  bool Match(object obj)
  bool IsDefaultAttribute()
  void System.Runtime.InteropServices._Attribute.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._Attribute.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._Attribute.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Buffer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool InternalBlockCopy(Array src, int srcOffsetBytes, Array dst, int dstOffsetBytes, int byteCount)
  int IndexOfByte(Byte* src, byte value, int index, int count)
  int _ByteLength(Array array)
  void ZeroMemory(Byte* src, long len)
  void Memcpy(Byte[] dest, int destIndex, Byte* src, int srcIndex, int len)
  void Memcpy(Byte* pDest, int destIndex, Byte[] src, int srcIndex, int len)
  void InternalMemcpy(Byte* dest, Byte* src, int count)
  int ByteLength(Array array)
  byte GetByte(Array array, int index)
  void SetByte(Array array, int index, byte value)
  void BlockCopy(Array src, int srcOffset, Array dst, int dstOffset, int count)
  void MemoryCopy(Void* source, Void* destination, long destinationSizeInBytes, long sourceBytesToCopy)
  void MemoryCopy(Void* source, Void* destination, ulong destinationSizeInBytes, ulong sourceBytesToCopy)
  void memcpy4(Byte* dest, Byte* src, int size)
  void memcpy2(Byte* dest, Byte* src, int size)
  void memcpy1(Byte* dest, Byte* src, int size)
  void Memcpy(Byte* dest, Byte* src, int len, bool useICall)
  void Memmove(Byte* dest, Byte* src, UInt32 len)
  void Memmove(T& destination, T& source, ulong elementCount)
--------------------------------------------------
Класс: System.ContextBoundObject
Наследуется от: MarshalByRefObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.ContextMarshalException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ContextStaticAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.DefaultBinder
Наследуется от: Binder
Поля:
  Primitives[] _primitiveConversions
Свойства:
Методы:
  MethodBase BindToMethod(BindingFlags bindingAttr, MethodBase[] match, Object[]& args, ParameterModifier[] modifiers, CultureInfo cultureInfo, String[] names, Object& state)
  FieldInfo BindToField(BindingFlags bindingAttr, FieldInfo[] match, object value, CultureInfo cultureInfo)
  PropertyInfo SelectProperty(BindingFlags bindingAttr, PropertyInfo[] match, Type returnType, Type[] indexes, ParameterModifier[] modifiers)
  object ChangeType(object value, Type type, CultureInfo cultureInfo)
  void ReorderArgumentArray(Object[]& args, object state)
  MethodBase ExactBinding(MethodBase[] match, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo ExactPropertyBinding(PropertyInfo[] match, Type returnType, Type[] types, ParameterModifier[] modifiers)
  int FindMostSpecific(ParameterInfo[] p1, Int32[] paramOrder1, Type paramArrayType1, ParameterInfo[] p2, Int32[] paramOrder2, Type paramArrayType2, Type[] types, Object[] args)
  int FindMostSpecificType(Type c1, Type c2, Type t)
  int FindMostSpecificMethod(MethodBase m1, Int32[] paramOrder1, Type paramArrayType1, MethodBase m2, Int32[] paramOrder2, Type paramArrayType2, Type[] types, Object[] args)
  int FindMostSpecificField(FieldInfo cur1, FieldInfo cur2)
  int FindMostSpecificProperty(PropertyInfo cur1, PropertyInfo cur2)
  bool CompareMethodSigAndName(MethodBase m1, MethodBase m2)
  int GetHierarchyDepth(Type t)
  MethodBase FindMostDerivedNewSlotMeth(MethodBase[] match, int cMatches)
  void ReorderParams(Int32[] paramOrder, Object[] vars)
  bool CreateParamOrder(Int32[] paramOrder, ParameterInfo[] pars, String[] names)
  bool CanConvertPrimitive(RuntimeType source, RuntimeType target)
  bool CanConvertPrimitiveObjectToType(object source, RuntimeType type)
  bool CompareMethodSig(MethodBase m1, MethodBase m2)
  MethodBase SelectMethod(BindingFlags bindingAttr, MethodBase[] match, Type[] types, ParameterModifier[] modifiers)
  bool CanChangePrimitive(Type source, Type target)
  bool CanChangePrimitiveObjectToType(object source, Type type)
  bool CanPrimitiveWiden(Type source, Type target)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Empty
Наследуется от: object
Поля:
  Empty Value
Свойства:
Методы:
  void .ctor()
  string ToString()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void .cctor()
--------------------------------------------------
Класс: System.Enum
Наследуется от: ValueType
Поля:
  Char[] enumSeperatorCharArray
  string enumSeperator
Свойства:
Методы:
  ValuesAndNames GetCachedValuesAndNames(RuntimeType enumType, bool getNames)
  string InternalFormattedHexString(object value)
  string InternalFormat(RuntimeType eT, object value)
  string InternalFlagsFormat(RuntimeType eT, object value)
  ulong ToUInt64(object value)
  int InternalCompareTo(object o1, object o2)
  RuntimeType InternalGetUnderlyingType(RuntimeType enumType)
  bool GetEnumValuesAndNames(RuntimeType enumType, UInt64[]& values, String[]& names)
  object InternalBoxEnum(RuntimeType enumType, long value)
  bool TryParse(string value, TEnum& result)
  bool TryParse(string value, bool ignoreCase, TEnum& result)
  object Parse(Type enumType, string value)
  object Parse(Type enumType, string value, bool ignoreCase)
  bool TryParseEnum(Type enumType, string value, bool ignoreCase, EnumResult& parseResult)
  Type GetUnderlyingType(Type enumType)
  Array GetValues(Type enumType)
  UInt64[] InternalGetValues(RuntimeType enumType)
  string GetName(Type enumType, object value)
  String[] GetNames(Type enumType)
  String[] InternalGetNames(RuntimeType enumType)
  object ToObject(Type enumType, object value)
  bool IsDefined(Type enumType, object value)
  string Format(Type enumType, object value, string format)
  object get_value()
  object GetValue()
  bool InternalHasFlag(Enum flags)
  int get_hashcode()
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  string ToString(string format, IFormatProvider provider)
  int CompareTo(object target)
  string ToString(string format)
  string ToString(IFormatProvider provider)
  bool HasFlag(Enum flag)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  object ToObject(Type enumType, sbyte value)
  object ToObject(Type enumType, short value)
  object ToObject(Type enumType, int value)
  object ToObject(Type enumType, byte value)
  object ToObject(Type enumType, ushort value)
  object ToObject(Type enumType, UInt32 value)
  object ToObject(Type enumType, long value)
  object ToObject(Type enumType, ulong value)
  object ToObject(Type enumType, char value)
  object ToObject(Type enumType, bool value)
  TEnum Parse(string value)
  TEnum Parse(string value, bool ignoreCase)
  bool TryParse(Type enumType, string value, bool ignoreCase, Object& result)
  bool TryParse(Type enumType, string value, Object& result)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Exception
Наследуется от: object
Поля:
  object s_EDILock
  string _className
  string _message
  IDictionary _data
  Exception _innerException
  string _helpURL
  object _stackTrace
  string _stackTraceString
  string _remoteStackTraceString
  int _remoteStackIndex
  object _dynamicMethods
  int _HResult
  string _source
  SafeSerializationManager _safeSerializationManager
  StackTrace[] captured_traces
  IntPtr[] native_trace_ips
  int caught_in_unmanaged
  int _COMPlusExceptionCode
Свойства:
  string Message
  IDictionary Data
  Exception InnerException
  MethodBase TargetSite
  string StackTrace
  string HelpLink
  string Source
  string RemoteStackTrace
  int HResult
  bool IsTransient
Методы:
  void Init()
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  string get_Message()
  IDictionary get_Data()
  bool IsImmutableAgileException(Exception e)
  void AddExceptionDataForRestrictedErrorInfo(string restrictedError, string restrictedErrorReference, string restrictedCapabilitySid, object restrictedErrorObject, bool hasrestrictedLanguageErrorObject)
  bool TryGetRestrictedLanguageErrorObject(Object& restrictedErrorObject)
  string GetClassName()
  Exception GetBaseException()
  Exception get_InnerException()
  MethodBase get_TargetSite()
  string get_StackTrace()
  string GetStackTrace(bool needFileInfo)
  void SetErrorCode(int hr)
  string get_HelpLink()
  void set_HelpLink(string value)
  string get_Source()
  void set_Source(string value)
  string ToString()
  string ToString(bool needFileLineInfo, bool needMessage)
  void add_SerializeObjectState(EventHandler`1<SafeSerializationEventArgs> value)
  void remove_SerializeObjectState(EventHandler`1<SafeSerializationEventArgs> value)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Exception PrepForRemoting()
  void OnDeserialized(StreamingContext context)
  void InternalPreserveStackTrace()
  string StripFileInfo(string stackTrace, bool isRemoteStackTrace)
  string get_RemoteStackTrace()
  void RestoreExceptionDispatchInfo(ExceptionDispatchInfo exceptionDispatchInfo)
  int get_HResult()
  void set_HResult(int value)
  string InternalToString()
  Type GetType()
  bool get_IsTransient()
  bool nIsTransient(int hr)
  string GetMessageFromNativeResources(ExceptionMessageKind kind)
  void SetMessage(string s)
  void SetStackTrace(string s)
  Exception FixRemotingException()
  void ReportUnhandledException(Exception exception)
  void .cctor()
--------------------------------------------------
Класс: System.GCCollectionMode
Наследуется от: Enum
Поля:
  int value__
  GCCollectionMode Default
  GCCollectionMode Forced
  GCCollectionMode Optimized
Свойства:
Методы:
--------------------------------------------------
Класс: System.InternalGCCollectionMode
Наследуется от: Enum
Поля:
  int value__
  InternalGCCollectionMode NonBlocking
  InternalGCCollectionMode Blocking
  InternalGCCollectionMode Optimized
  InternalGCCollectionMode Compacting
Свойства:
Методы:
--------------------------------------------------
Класс: System.GCNotificationStatus
Наследуется от: Enum
Поля:
  int value__
  GCNotificationStatus Succeeded
  GCNotificationStatus Failed
  GCNotificationStatus Canceled
  GCNotificationStatus Timeout
  GCNotificationStatus NotApplicable
Свойства:
Методы:
--------------------------------------------------
Класс: System.GC
Наследуется от: object
Поля:
  object EPHEMERON_TOMBSTONE
Свойства:
  int MaxGeneration
Методы:
  int GetCollectionCount(int generation)
  int GetMaxGeneration()
  void InternalCollect(int generation)
  void RecordPressure(long bytesAllocated)
  void register_ephemeron_array(Ephemeron[] array)
  object get_ephemeron_tombstone()
  void GetMemoryInfo(UInt32& highMemLoadThreshold, UInt64& totalPhysicalMem, UInt32& lastRecordedMemLoad, UIntPtr& lastRecordedHeapSize, UIntPtr& lastRecordedFragmentation)
  long GetAllocatedBytesForCurrentThread()
  void AddMemoryPressure(long bytesAllocated)
  void RemoveMemoryPressure(long bytesAllocated)
  int GetGeneration(object obj)
  void Collect(int generation)
  void Collect()
  void Collect(int generation, GCCollectionMode mode)
  void Collect(int generation, GCCollectionMode mode, bool blocking)
  void Collect(int generation, GCCollectionMode mode, bool blocking, bool compacting)
  int CollectionCount(int generation)
  void KeepAlive(object obj)
  int GetGeneration(WeakReference wo)
  int get_MaxGeneration()
  void WaitForPendingFinalizers()
  void _SuppressFinalize(object o)
  void SuppressFinalize(object obj)
  void _ReRegisterForFinalize(object o)
  void ReRegisterForFinalize(object obj)
  long GetTotalMemory(bool forceFullCollection)
  bool _RegisterForFullGCNotification(int maxGenerationPercentage, int largeObjectHeapPercentage)
  bool _CancelFullGCNotification()
  int _WaitForFullGCApproach(int millisecondsTimeout)
  int _WaitForFullGCComplete(int millisecondsTimeout)
  void RegisterForFullGCNotification(int maxGenerationThreshold, int largeObjectHeapThreshold)
  void CancelFullGCNotification()
  GCNotificationStatus WaitForFullGCApproach()
  GCNotificationStatus WaitForFullGCApproach(int millisecondsTimeout)
  GCNotificationStatus WaitForFullGCComplete()
  GCNotificationStatus WaitForFullGCComplete(int millisecondsTimeout)
  bool StartNoGCRegionWorker(long totalSize, bool hasLohSize, long lohSize, bool disallowFullBlockingGC)
  bool TryStartNoGCRegion(long totalSize)
  bool TryStartNoGCRegion(long totalSize, long lohSize)
  bool TryStartNoGCRegion(long totalSize, bool disallowFullBlockingGC)
  bool TryStartNoGCRegion(long totalSize, long lohSize, bool disallowFullBlockingGC)
  EndNoGCRegionStatus EndNoGCRegionWorker()
  void EndNoGCRegion()
  void .cctor()
--------------------------------------------------
Класс: System._AppDomain
Поля:
Свойства:
  string FriendlyName
  string BaseDirectory
  string RelativeSearchPath
  bool ShadowCopyFiles
  string DynamicDirectory
  Evidence Evidence
Методы:
  void GetTypeInfoCount(UInt32& pcTInfo)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  string ToString()
  bool Equals(object other)
  int GetHashCode()
  Type GetType()
  object InitializeLifetimeService()
  object GetLifetimeService()
  void add_DomainUnload(EventHandler value)
  void remove_DomainUnload(EventHandler value)
  void add_AssemblyLoad(AssemblyLoadEventHandler value)
  void remove_AssemblyLoad(AssemblyLoadEventHandler value)
  void add_ProcessExit(EventHandler value)
  void remove_ProcessExit(EventHandler value)
  void add_TypeResolve(ResolveEventHandler value)
  void remove_TypeResolve(ResolveEventHandler value)
  void add_ResourceResolve(ResolveEventHandler value)
  void remove_ResourceResolve(ResolveEventHandler value)
  void add_AssemblyResolve(ResolveEventHandler value)
  void remove_AssemblyResolve(ResolveEventHandler value)
  void add_UnhandledException(UnhandledExceptionEventHandler value)
  void remove_UnhandledException(UnhandledExceptionEventHandler value)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, Evidence evidence)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions, bool isSynchronized)
  ObjectHandle CreateInstance(string assemblyName, string typeName)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName)
  ObjectHandle CreateInstance(string assemblyName, string typeName, Object[] activationAttributes)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, Object[] activationAttributes)
  ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  Assembly Load(AssemblyName assemblyRef)
  Assembly Load(string assemblyString)
  Assembly Load(Byte[] rawAssembly)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore, Evidence securityEvidence)
  Assembly Load(AssemblyName assemblyRef, Evidence assemblySecurity)
  Assembly Load(string assemblyString, Evidence assemblySecurity)
  int ExecuteAssembly(string assemblyFile, Evidence assemblySecurity)
  int ExecuteAssembly(string assemblyFile)
  int ExecuteAssembly(string assemblyFile, Evidence assemblySecurity, String[] args)
  string get_FriendlyName()
  string get_BaseDirectory()
  string get_RelativeSearchPath()
  bool get_ShadowCopyFiles()
  Assembly[] GetAssemblies()
  void AppendPrivatePath(string path)
  void ClearPrivatePath()
  void SetShadowCopyPath(string s)
  void ClearShadowCopyPath()
  void SetCachePath(string s)
  void SetData(string name, object data)
  object GetData(string name)
  void DoCallBack(CrossAppDomainDelegate theDelegate)
  string get_DynamicDirectory()
  Evidence get_Evidence()
  void SetAppDomainPolicy(PolicyLevel domainPolicy)
  void SetPrincipalPolicy(PrincipalPolicy policy)
  void SetThreadPrincipal(IPrincipal principal)
--------------------------------------------------
Класс: System.IAppDomainSetup
Поля:
Свойства:
  string ApplicationBase
  string ApplicationName
  string CachePath
  string ConfigurationFile
  string DynamicBase
  string LicenseFile
  string PrivateBinPath
  string PrivateBinPathProbe
  string ShadowCopyDirectories
  string ShadowCopyFiles
Методы:
  string get_ApplicationBase()
  void set_ApplicationBase(string value)
  string get_ApplicationName()
  void set_ApplicationName(string value)
  string get_CachePath()
  void set_CachePath(string value)
  string get_ConfigurationFile()
  void set_ConfigurationFile(string value)
  string get_DynamicBase()
  void set_DynamicBase(string value)
  string get_LicenseFile()
  void set_LicenseFile(string value)
  string get_PrivateBinPath()
  void set_PrivateBinPath(string value)
  string get_PrivateBinPathProbe()
  void set_PrivateBinPathProbe(string value)
  string get_ShadowCopyDirectories()
  void set_ShadowCopyDirectories(string value)
  string get_ShadowCopyFiles()
  void set_ShadowCopyFiles(string value)
--------------------------------------------------
Класс: System.ResId
Наследуется от: object
Поля:
  string Arg_ArrayLengthsDiffer
  string Argument_InvalidNumberOfMembers
  string Argument_UnequalMembers
  string Argument_SpecifyValueSize
  string Argument_UnmatchingSymScope
  string Argument_NotInExceptionBlock
  string Argument_NotExceptionType
  string Argument_InvalidLabel
  string Argument_UnclosedExceptionBlock
  string Argument_MissingDefaultConstructor
  string Argument_TooManyFinallyClause
  string Argument_NotInTheSameModuleBuilder
  string Argument_BadCurrentLocalVariable
  string Argument_DuplicateModuleName
  string Argument_BadPersistableModuleInTransientAssembly
  string Argument_HasToBeArrayClass
  string Argument_InvalidDirectory
  string MissingType
  string MissingModule
  string ArgumentOutOfRange_Index
  string ArgumentOutOfRange_Range
  string ExecutionEngine_YoureHosed
  string Format_NeedSingleChar
  string Format_StringZeroLength
  string InvalidOperation_EnumEnded
  string InvalidOperation_EnumFailedVersion
  string InvalidOperation_EnumNotStarted
  string InvalidOperation_EnumOpCantHappen
  string InvalidOperation_InternalState
  string InvalidOperation_ModifyRONumFmtInfo
  string InvalidOperation_MethodBaked
  string InvalidOperation_NotADebugModule
  string InvalidOperation_MethodHasBody
  string InvalidOperation_OpenLocalVariableScope
  string InvalidOperation_TypeHasBeenCreated
  string InvalidOperation_RefedAssemblyNotSaved
  string InvalidOperation_AssemblyHasBeenSaved
  string InvalidOperation_ModuleHasBeenSaved
  string InvalidOperation_CannotAlterAssembly
  string NotSupported_CannotSaveModuleIndividually
  string NotSupported_Constructor
  string NotSupported_Method
  string NotSupported_NYI
  string NotSupported_DynamicModule
  string NotSupported_NotDynamicModule
  string NotSupported_NotAllTypesAreBaked
  string NotSupported_SortedListNestedWrite
  string Serialization_ArrayInvalidLength
  string Serialization_ArrayNoLength
  string Serialization_CannotGetType
  string Serialization_InsufficientState
  string Serialization_InvalidID
  string Serialization_MalformedArray
  string Serialization_MultipleMembers
  string Serialization_NoID
  string Serialization_NoType
  string Serialization_NoBaseType
  string Serialization_NullSignature
  string Serialization_UnknownMember
  string Serialization_BadParameterInfo
  string Serialization_NoParameterInfo
  string WeakReference_NoLongerValid
  string Loader_InvalidPath
Свойства:
Методы:
--------------------------------------------------
Класс: System.CtorDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object instance)
  IAsyncResult BeginInvoke(object instance, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.TypeNameFormatFlags
Наследуется от: Enum
Поля:
  int value__
  TypeNameFormatFlags FormatBasic
  TypeNameFormatFlags FormatNamespace
  TypeNameFormatFlags FormatFullInst
  TypeNameFormatFlags FormatAssembly
  TypeNameFormatFlags FormatSignature
  TypeNameFormatFlags FormatNoVersion
  TypeNameFormatFlags FormatAngleBrackets
  TypeNameFormatFlags FormatStubInfo
  TypeNameFormatFlags FormatGenericParam
  TypeNameFormatFlags FormatSerialization
Свойства:
Методы:
--------------------------------------------------
Класс: System.TypeNameKind
Наследуется от: Enum
Поля:
  int value__
  TypeNameKind Name
  TypeNameKind ToString
  TypeNameKind SerializationName
  TypeNameKind FullName
Свойства:
Методы:
--------------------------------------------------
Класс: System.RuntimeType
Наследуется от: TypeInfo
Поля:
  RuntimeType ValueType
  RuntimeType EnumType
  RuntimeType ObjectType
  RuntimeType StringType
  RuntimeType DelegateType
  Type[] s_SICtorParamTypes
  Func`3<Type, Type[], Type> MakeTypeBuilderInstantiation
  BindingFlags MemberBindingMask
  BindingFlags InvocationMask
  BindingFlags BinderNonCreateInstance
  BindingFlags BinderGetSetProperty
  BindingFlags BinderSetInvokeProperty
  BindingFlags BinderGetSetField
  BindingFlags BinderSetInvokeField
  BindingFlags BinderNonFieldGetSet
  BindingFlags ClassicBindingMask
  RuntimeType s_typedRef
  MonoTypeInfo type_info
  object GenericCache
  RuntimeConstructorInfo m_serializationCtor
  Dictionary`2<Guid, Type> clsid_types
  AssemblyBuilder clsid_assemblybuilder
  int GenericParameterCountAny
Свойства:
  Module Module
  Assembly Assembly
  RuntimeTypeHandle TypeHandle
  Type BaseType
  Type UnderlyingSystemType
  bool IsEnum
  GenericParameterAttributes GenericParameterAttributes
  bool IsSzArray
  bool IsGenericTypeDefinition
  bool IsGenericParameter
  int GenericParameterPosition
  bool IsGenericType
  bool IsConstructedGenericType
  MemberTypes MemberType
  Type ReflectedType
  int MetadataToken
  StructLayoutAttribute StructLayoutAttribute
  bool ContainsGenericParameters
  Guid GUID
  MethodBase DeclaringMethod
  string AssemblyQualifiedName
  Type DeclaringType
  string Name
  string Namespace
  bool IsSecurityTransparent
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  string FullName
  bool IsSZArray
  bool IsUserType
  bool IsByRefLike
  bool IsTypeDefinition
Методы:
  RuntimeType GetType(string typeName, bool throwOnError, bool ignoreCase, bool reflectionOnly, StackCrawlMark& stackMark)
  void ThrowIfTypeNeverValidGenericArgument(RuntimeType type)
  void SanityCheckGenericArguments(RuntimeType[] genericArguments, RuntimeType[] genericParamters)
  void SplitName(string fullname, String& name, String& ns)
  BindingFlags FilterPreCalculate(bool isPublic, bool isInherited, bool isStatic)
  void FilterHelper(BindingFlags bindingFlags, String& name, bool allowPrefixLookup, Boolean& prefixLookup, Boolean& ignoreCase, MemberListType& listType)
  void FilterHelper(BindingFlags bindingFlags, String& name, Boolean& ignoreCase, MemberListType& listType)
  bool FilterApplyPrefixLookup(MemberInfo memberInfo, string name, bool ignoreCase)
  bool FilterApplyBase(MemberInfo memberInfo, BindingFlags bindingFlags, bool isPublic, bool isNonProtectedInternal, bool isStatic, string name, bool prefixLookup)
  bool FilterApplyType(Type type, BindingFlags bindingFlags, string name, bool prefixLookup, string ns)
  bool FilterApplyMethodInfo(RuntimeMethodInfo method, BindingFlags bindingFlags, CallingConventions callConv, Type[] argumentTypes)
  bool FilterApplyConstructorInfo(RuntimeConstructorInfo constructor, BindingFlags bindingFlags, CallingConventions callConv, Type[] argumentTypes)
  bool FilterApplyMethodBase(MethodBase methodBase, BindingFlags methodFlags, BindingFlags bindingFlags, CallingConventions callConv, Type[] argumentTypes)
  void .ctor()
  bool IsSpecialSerializableType()
  ListBuilder`1<MethodInfo> GetMethodCandidates(string name, BindingFlags bindingAttr, CallingConventions callConv, Type[] types, int genericParamCount, bool allowPrefixLookup)
  ListBuilder`1<ConstructorInfo> GetConstructorCandidates(string name, BindingFlags bindingAttr, CallingConventions callConv, Type[] types, bool allowPrefixLookup)
  ListBuilder`1<PropertyInfo> GetPropertyCandidates(string name, BindingFlags bindingAttr, Type[] types, bool allowPrefixLookup)
  ListBuilder`1<EventInfo> GetEventCandidates(string name, BindingFlags bindingAttr, bool allowPrefixLookup)
  ListBuilder`1<FieldInfo> GetFieldCandidates(string name, BindingFlags bindingAttr, bool allowPrefixLookup)
  ListBuilder`1<Type> GetNestedTypeCandidates(string fullname, BindingFlags bindingAttr, bool allowPrefixLookup)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  Type GetInterface(string fullname, bool ignoreCase)
  Type GetNestedType(string fullname, BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  Module get_Module()
  RuntimeModule GetRuntimeModule()
  Assembly get_Assembly()
  RuntimeAssembly GetRuntimeAssembly()
  RuntimeTypeHandle get_TypeHandle()
  RuntimeTypeHandle GetTypeHandleInternal()
  bool IsInstanceOfType(object o)
  bool IsAssignableFrom(TypeInfo typeInfo)
  bool IsAssignableFrom(Type c)
  bool IsEquivalentTo(Type other)
  Type get_BaseType()
  RuntimeType GetBaseType()
  Type get_UnderlyingSystemType()
  TypeAttributes GetAttributeFlagsImpl()
  bool IsContextfulImpl()
  bool IsByRefImpl()
  bool IsPrimitiveImpl()
  bool IsPointerImpl()
  bool IsCOMObjectImpl()
  bool IsWindowsRuntimeObjectImpl()
  bool IsExportedToWindowsRuntimeImpl()
  bool IsWindowsRuntimeObjectType(RuntimeType type)
  bool IsTypeExportedToWindowsRuntime(RuntimeType type)
  bool HasProxyAttributeImpl()
  bool IsDelegate()
  bool IsValueTypeImpl()
  bool get_IsEnum()
  bool HasElementTypeImpl()
  GenericParameterAttributes get_GenericParameterAttributes()
  bool get_IsSzArray()
  bool IsArrayImpl()
  int GetArrayRank()
  Type GetElementType()
  String[] GetEnumNames()
  Array GetEnumValues()
  Type GetEnumUnderlyingType()
  bool IsEnumDefined(object value)
  string GetEnumName(object value)
  RuntimeType[] GetGenericArgumentsInternal()
  Type[] GetGenericArguments()
  Type MakeGenericType(Type[] instantiation)
  bool get_IsGenericTypeDefinition()
  bool get_IsGenericParameter()
  int get_GenericParameterPosition()
  Type GetGenericTypeDefinition()
  bool get_IsGenericType()
  bool get_IsConstructedGenericType()
  MemberInfo[] GetDefaultMembers()
  object InvokeMember(string name, BindingFlags bindingFlags, Binder binder, object target, Object[] providedArgs, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParams)
  bool Equals(object obj)
  bool op_Equality(RuntimeType left, RuntimeType right)
  bool op_Inequality(RuntimeType left, RuntimeType right)
  object Clone()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesData()
  string FormatTypeName(bool serialization)
  MemberTypes get_MemberType()
  Type get_ReflectedType()
  int get_MetadataToken()
  void CreateInstanceCheckThis()
  object CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, StackCrawlMark& stackMark)
  object ActivationCreateInstance(MethodBase invokeMethod, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  object CreateInstanceDefaultCtor(bool publicOnly, bool skipCheckThis, bool fillCache, bool wrapExceptions, StackCrawlMark& stackMark)
  void .ctor(object obj)
  RuntimeConstructorInfo GetDefaultConstructor()
  MethodInfo GetCorrespondingInflatedMethod(MethodInfo generic)
  ConstructorInfo GetCorrespondingInflatedConstructor(ConstructorInfo generic)
  MethodInfo GetMethod(MethodInfo fromNoninstanciated)
  ConstructorInfo GetConstructor(ConstructorInfo fromNoninstanciated)
  FieldInfo GetField(FieldInfo fromNoninstanciated)
  string GetDefaultMemberName()
  RuntimeConstructorInfo GetSerializationCtor()
  object CreateInstanceSlow(bool publicOnly, bool wrapExceptions, bool skipCheckThis, bool fillCache)
  object CreateInstanceMono(bool nonPublic, bool wrapExceptions)
  object CheckValue(object value, Binder binder, CultureInfo culture, BindingFlags invokeAttr)
  object TryConvertToType(object value, Boolean& failed)
  object IsConvertibleToPrimitiveType(object value, Type targetType)
  string GetCachedName(TypeNameKind kind)
  Type make_array_type(int rank)
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type make_byref_type()
  Type MakeByRefType()
  Type MakePointerType(Type type)
  Type MakePointerType()
  StructLayoutAttribute get_StructLayoutAttribute()
  bool get_ContainsGenericParameters()
  Type[] GetGenericParameterConstraints()
  object CreateInstanceForAnotherGenericParameter(Type genericType, RuntimeType genericArgument)
  Type MakeGenericType(Type gt, Type[] types)
  IntPtr GetMethodsByName_native(IntPtr namePtr, BindingFlags bindingAttr, MemberListType listType)
  RuntimeMethodInfo[] GetMethodsByName(string name, BindingFlags bindingAttr, MemberListType listType, RuntimeType reflectedType)
  IntPtr GetPropertiesByName_native(IntPtr name, BindingFlags bindingAttr, MemberListType listType)
  IntPtr GetConstructors_native(BindingFlags bindingAttr)
  RuntimeConstructorInfo[] GetConstructors_internal(BindingFlags bindingAttr, RuntimeType reflectedType)
  RuntimePropertyInfo[] GetPropertiesByName(string name, BindingFlags bindingAttr, MemberListType listType, RuntimeType reflectedType)
  InterfaceMapping GetInterfaceMap(Type ifaceType)
  void GetInterfaceMapData(Type t, Type iface, MethodInfo[]& targets, MethodInfo[]& methods)
  void GetGUID(Type type, Byte[] guid)
  Guid get_GUID()
  void GetPacking(Int32& packing, Int32& size)
  Type GetTypeFromCLSIDImpl(Guid clsid, string server, bool throwOnError)
  TypeCode GetTypeCodeImpl()
  TypeCode GetTypeCodeImplInternal(Type type)
  Type GetTypeFromProgIDImpl(string progID, string server, bool throwOnError)
  string ToString()
  bool IsGenericCOMObjectImpl()
  object CreateInstanceInternal(Type type)
  MethodBase get_DeclaringMethod()
  string getFullName(bool full_name, bool assembly_qualified)
  Type[] GetGenericArgumentsInternal(bool runtimeArray)
  GenericParameterAttributes GetGenericParameterAttributes()
  int GetGenericParameterPosition()
  IntPtr GetEvents_native(IntPtr name, MemberListType listType)
  IntPtr GetFields_native(IntPtr name, BindingFlags bindingAttr, MemberListType listType)
  RuntimeFieldInfo[] GetFields_internal(string name, BindingFlags bindingAttr, MemberListType listType, RuntimeType reflectedType)
  RuntimeEventInfo[] GetEvents_internal(string name, BindingFlags bindingAttr, MemberListType listType, RuntimeType reflectedType)
  Type[] GetInterfaces()
  IntPtr GetNestedTypes_native(IntPtr name, BindingFlags bindingAttr, MemberListType listType)
  RuntimeType[] GetNestedTypes_internal(string displayName, BindingFlags bindingAttr, MemberListType listType)
  string get_AssemblyQualifiedName()
  Type get_DeclaringType()
  string get_Name()
  string get_Namespace()
  int get_core_clr_security_level()
  bool get_IsSecurityTransparent()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  int GetHashCode()
  string get_FullName()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  bool get_IsSZArray()
  bool get_IsUserType()
  bool IsSubclassOf(Type type)
  bool get_IsByRefLike()
  bool get_IsTypeDefinition()
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethodImpl(string name, int genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethodImplCommon(string name, int genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)
  ListBuilder`1<MethodInfo> GetMethodCandidates(string name, int genericParameterCount, BindingFlags bindingAttr, CallingConventions callConv, Type[] types, bool allowPrefixLookup)
  void .cctor()
--------------------------------------------------
Класс: System.ReflectionOnlyType
Наследуется от: RuntimeType
Поля:
Свойства:
  RuntimeTypeHandle TypeHandle
Методы:
  void .ctor()
  RuntimeTypeHandle get_TypeHandle()
--------------------------------------------------
Класс: System.SharedStatics
Наследуется от: object
Поля:
  SharedStatics _sharedStatics
  String modreq(System.Runtime.CompilerServices.IsVolatile) _Remoting_Identity_IDGuid
  StringMaker _maker
  int _Remoting_Identity_IDSeqNum
  long _memFailPointReservedMemory
Свойства:
  string Remoting_Identity_IDGuid
  ulong MemoryFailPointReservedMemory
Методы:
  void .ctor()
  string get_Remoting_Identity_IDGuid()
  StringMaker GetSharedStringMaker()
  void ReleaseSharedStringMaker(StringMaker& maker)
  int Remoting_Identity_GetNextSeqNum()
  long AddMemoryFailPointReservation(long size)
  ulong get_MemoryFailPointReservedMemory()
  void .cctor()
--------------------------------------------------
Класс: System.ExceptionArgument
Наследуется от: Enum
Поля:
  int value__
  ExceptionArgument obj
  ExceptionArgument dictionary
  ExceptionArgument dictionaryCreationThreshold
  ExceptionArgument array
  ExceptionArgument info
  ExceptionArgument key
  ExceptionArgument collection
  ExceptionArgument list
  ExceptionArgument match
  ExceptionArgument converter
  ExceptionArgument queue
  ExceptionArgument stack
  ExceptionArgument capacity
  ExceptionArgument index
  ExceptionArgument startIndex
  ExceptionArgument value
  ExceptionArgument count
  ExceptionArgument arrayIndex
  ExceptionArgument name
  ExceptionArgument mode
  ExceptionArgument item
  ExceptionArgument options
  ExceptionArgument view
  ExceptionArgument sourceBytesToCopy
  ExceptionArgument start
  ExceptionArgument pointer
  ExceptionArgument ownedMemory
  ExceptionArgument text
  ExceptionArgument length
  ExceptionArgument comparer
  ExceptionArgument comparable
  ExceptionArgument exceptions
  ExceptionArgument exception
  ExceptionArgument action
  ExceptionArgument comparison
  ExceptionArgument startSegment
  ExceptionArgument endSegment
  ExceptionArgument endIndex
  ExceptionArgument task
  ExceptionArgument source
  ExceptionArgument state
  ExceptionArgument culture
  ExceptionArgument destination
  ExceptionArgument byteOffset
  ExceptionArgument minimumBufferSize
  ExceptionArgument offset
  ExceptionArgument values
  ExceptionArgument comparisonType
  ExceptionArgument s
  ExceptionArgument input
  ExceptionArgument format
Свойства:
Методы:
--------------------------------------------------
Класс: System.ExceptionResource
Наследуется от: Enum
Поля:
  int value__
  ExceptionResource Argument_ImplementIComparable
  ExceptionResource Argument_InvalidType
  ExceptionResource Argument_InvalidArgumentForComparison
  ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
  ExceptionResource ArgumentOutOfRange_NeedNonNegNum
  ExceptionResource Arg_ArrayPlusOffTooSmall
  ExceptionResource Arg_NonZeroLowerBound
  ExceptionResource Arg_RankMultiDimNotSupported
  ExceptionResource Arg_RegKeyDelHive
  ExceptionResource Arg_RegKeyStrLenBug
  ExceptionResource Arg_RegSetStrArrNull
  ExceptionResource Arg_RegSetMismatchedKind
  ExceptionResource Arg_RegSubKeyAbsent
  ExceptionResource Arg_RegSubKeyValueAbsent
  ExceptionResource Argument_AddingDuplicate
  ExceptionResource Serialization_InvalidOnDeser
  ExceptionResource Serialization_MissingKeys
  ExceptionResource Serialization_NullKey
  ExceptionResource Argument_InvalidArrayType
  ExceptionResource NotSupported_KeyCollectionSet
  ExceptionResource NotSupported_ValueCollectionSet
  ExceptionResource ArgumentOutOfRange_SmallCapacity
  ExceptionResource ArgumentOutOfRange_Index
  ExceptionResource Argument_InvalidOffLen
  ExceptionResource Argument_ItemNotExist
  ExceptionResource ArgumentOutOfRange_Count
  ExceptionResource ArgumentOutOfRange_InvalidThreshold
  ExceptionResource ArgumentOutOfRange_ListInsert
  ExceptionResource NotSupported_ReadOnlyCollection
  ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
  ExceptionResource InvalidOperation_EmptyQueue
  ExceptionResource InvalidOperation_EnumOpCantHappen
  ExceptionResource InvalidOperation_EnumFailedVersion
  ExceptionResource InvalidOperation_EmptyStack
  ExceptionResource ArgumentOutOfRange_BiggerThanCollection
  ExceptionResource InvalidOperation_EnumNotStarted
  ExceptionResource InvalidOperation_EnumEnded
  ExceptionResource NotSupported_SortedListNestedWrite
  ExceptionResource InvalidOperation_NoValue
  ExceptionResource InvalidOperation_RegRemoveSubKey
  ExceptionResource Security_RegistryPermission
  ExceptionResource UnauthorizedAccess_RegistryNoWrite
  ExceptionResource ObjectDisposed_RegKeyClosed
  ExceptionResource NotSupported_InComparableType
  ExceptionResource Argument_InvalidRegistryOptionsCheck
  ExceptionResource Argument_InvalidRegistryViewCheck
  ExceptionResource TaskT_TransitionToFinal_AlreadyCompleted
  ExceptionResource TaskCompletionSourceT_TrySetException_NullException
  ExceptionResource TaskCompletionSourceT_TrySetException_NoExceptions
  ExceptionResource NotSupported_StringComparison
  ExceptionResource InvalidOperation_NullArray
Свойства:
Методы:
--------------------------------------------------
Класс: System.TypedReference
Наследуется от: ValueType
Поля:
  RuntimeTypeHandle type
  IntPtr Value
  IntPtr Type
Свойства:
  bool IsNull
Методы:
  TypedReference MakeTypedReference(object target, FieldInfo[] flds)
  void InternalMakeTypedReference(Void* result, object target, IntPtr[] flds, RuntimeType lastFieldType)
  int GetHashCode()
  bool Equals(object o)
  object ToObject(TypedReference value)
  object InternalToObject(Void* value)
  bool get_IsNull()
  Type GetTargetType(TypedReference value)
  RuntimeTypeHandle TargetTypeToken(TypedReference value)
  void SetTypedReference(TypedReference target, object value)
--------------------------------------------------
Класс: System.TypeLoadException
Наследуется от: SystemException
Поля:
  string ClassName
  string AssemblyName
  string MessageArg
  int ResourceId
Свойства:
  string Message
  string TypeName
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  string get_Message()
  void SetMessageField()
  string get_TypeName()
  void .ctor(string className, string assemblyName)
  void .ctor(string className, string assemblyName, string messageArg, int resourceId)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.UnitySerializationHolder
Наследуется от: object
Поля:
  int EmptyUnity
  int NullUnity
  int MissingUnity
  int RuntimeTypeUnity
  int ModuleUnity
  int AssemblyUnity
  int GenericParameterTypeUnity
  int PartialInstantiationTypeUnity
  int Pointer
  int Array
  int SzArray
  int ByRef
  Type[] m_instantiation
  Int32[] m_elementTypes
  int m_genericParameterPosition
  Type m_declaringType
  MethodBase m_declaringMethod
  string m_data
  string m_assemblyName
  int m_unityType
Свойства:
Методы:
  void GetUnitySerializationInfo(SerializationInfo info, Missing missing)
  RuntimeType AddElementTypes(SerializationInfo info, RuntimeType type)
  Type MakeElementTypes(Type type)
  void GetUnitySerializationInfo(SerializationInfo info, int unityType)
  void GetUnitySerializationInfo(SerializationInfo info, RuntimeType type)
  void GetUnitySerializationInfo(SerializationInfo info, int unityType, string data, RuntimeAssembly assembly)
  void .ctor(SerializationInfo info, StreamingContext context)
  void ThrowInsufficientInformation(string field)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object GetRealObject(StreamingContext context)
--------------------------------------------------
Класс: System.UnSafeCharBuffer
Наследуется от: ValueType
Поля:
  Char* m_buffer
  int m_totalSize
  int m_length
Свойства:
  int Length
Методы:
  void .ctor(Char* buffer, int bufferSize)
  void AppendString(string stringToAppend)
  int get_Length()
--------------------------------------------------
Класс: System.AppContextDefaultValues
Наследуется от: object
Поля:
  string SwitchNoAsyncCurrentCulture
  string SwitchEnforceJapaneseEraYearRanges
  string SwitchFormatJapaneseFirstYearAsANumber
  string SwitchEnforceLegacyJapaneseDateParsing
  string SwitchThrowExceptionIfDisposedCancellationTokenSource
  string SwitchPreserveEventListnerObjectIdentity
  string SwitchUseLegacyPathHandling
  string SwitchBlockLongPaths
  string SwitchDoNotAddrOfCspParentWindowHandle
  string SwitchSetActorAsReferenceWhenCopyingClaimsIdentity
Свойства:
Методы:
  void PopulateDefaultValues()
  bool TryGetSwitchOverride(string switchName, Boolean& overrideValue)
  void .cctor()
--------------------------------------------------
Класс: System.AppDomain
Наследуется от: MarshalByRefObject
Поля:
  IntPtr _mono_app_domain
  string _process_guid
  Dictionary`2<string, object> type_resolve_in_progress
  Dictionary`2<string, object> assembly_resolve_in_progress
  Dictionary`2<string, object> assembly_resolve_in_progress_refonly
  Evidence _evidence
  PermissionSet _granted
  PrincipalPolicy _principalPolicy
  IPrincipal _principal
  AppDomain default_domain
  AssemblyLoadEventHandler AssemblyLoad
  ResolveEventHandler AssemblyResolve
  EventHandler DomainUnload
  EventHandler ProcessExit
  ResolveEventHandler ResourceResolve
  ResolveEventHandler TypeResolve
  UnhandledExceptionEventHandler UnhandledException
  EventHandler`1<FirstChanceExceptionEventArgs> FirstChanceException
  AppDomainManager _domain_manager
  ResolveEventHandler ReflectionOnlyAssemblyResolve
  ActivationContext _activation
  ApplicationIdentity _applicationIdentity
  List`1<string> compatibility_switch
Свойства:
  AppDomainSetup SetupInformationNoCopy
  AppDomainSetup SetupInformation
  ApplicationTrust ApplicationTrust
  string BaseDirectory
  string RelativeSearchPath
  string DynamicDirectory
  bool ShadowCopyFiles
  string FriendlyName
  Evidence Evidence
  IPrincipal DefaultPrincipal
  PermissionSet GrantedPermissionSet
  PermissionSet PermissionSet
  AppDomain CurrentDomain
  AppDomain DefaultDomain
  bool IsHomogenous
  bool IsFullyTrusted
  AppDomainManager DomainManager
  ActivationContext ActivationContext
  ApplicationIdentity ApplicationIdentity
  int Id
  bool MonitoringIsEnabled
  long MonitoringSurvivedMemorySize
  long MonitoringSurvivedProcessMemorySize
  long MonitoringTotalAllocatedMemorySize
  TimeSpan MonitoringTotalProcessorTime
Методы:
  bool IsAppXModel()
  bool IsAppXDesignMode()
  void CheckReflectionOnlyLoadSupported()
  void CheckLoadFromSupported()
  void .ctor()
  AppDomainSetup getSetup()
  AppDomainSetup get_SetupInformationNoCopy()
  AppDomainSetup get_SetupInformation()
  ApplicationTrust get_ApplicationTrust()
  string get_BaseDirectory()
  string get_RelativeSearchPath()
  string get_DynamicDirectory()
  bool get_ShadowCopyFiles()
  string getFriendlyName()
  string get_FriendlyName()
  Evidence get_Evidence()
  IPrincipal get_DefaultPrincipal()
  PermissionSet get_GrantedPermissionSet()
  PermissionSet get_PermissionSet()
  AppDomain getCurDomain()
  AppDomain get_CurrentDomain()
  AppDomain getRootDomain()
  AppDomain get_DefaultDomain()
  void AppendPrivatePath(string path)
  void ClearPrivatePath()
  void ClearShadowCopyPath()
  ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName)
  ObjectHandle CreateComInstanceFrom(string assemblyFile, string typeName, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
  ObjectHandle InternalCreateInstanceWithNoSecurity(string assemblyName, string typeName)
  ObjectHandle InternalCreateInstanceWithNoSecurity(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  ObjectHandle InternalCreateInstanceFromWithNoSecurity(string assemblyName, string typeName)
  ObjectHandle InternalCreateInstanceFromWithNoSecurity(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  ObjectHandle CreateInstance(string assemblyName, string typeName)
  ObjectHandle CreateInstance(string assemblyName, string typeName, Object[] activationAttributes)
  ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  object CreateInstanceAndUnwrap(string assemblyName, string typeName)
  object CreateInstanceAndUnwrap(string assemblyName, string typeName, Object[] activationAttributes)
  object CreateInstanceAndUnwrap(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  object CreateInstanceAndUnwrap(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  object CreateInstanceFromAndUnwrap(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, Object[] activationAttributes)
  ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  object CreateInstanceFromAndUnwrap(string assemblyName, string typeName)
  object CreateInstanceFromAndUnwrap(string assemblyName, string typeName, Object[] activationAttributes)
  object CreateInstanceFromAndUnwrap(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityAttributes)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, Evidence evidence)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions, bool isSynchronized)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, Evidence evidence, PermissionSet requiredPermissions, PermissionSet optionalPermissions, PermissionSet refusedPermissions, bool isSynchronized, IEnumerable`1<CustomAttributeBuilder> assemblyAttributes)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, IEnumerable`1<CustomAttributeBuilder> assemblyAttributes)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, string dir, bool isSynchronized, IEnumerable`1<CustomAttributeBuilder> assemblyAttributes)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, IEnumerable`1<CustomAttributeBuilder> assemblyAttributes, SecurityContextSource securityContextSource)
  AssemblyBuilder DefineInternalDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)
  void DoCallBack(CrossAppDomainDelegate callBackDelegate)
  int ExecuteAssembly(string assemblyFile)
  int ExecuteAssembly(string assemblyFile, Evidence assemblySecurity)
  int ExecuteAssembly(string assemblyFile, Evidence assemblySecurity, String[] args)
  int ExecuteAssembly(string assemblyFile, Evidence assemblySecurity, String[] args, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
  int ExecuteAssembly(string assemblyFile, String[] args)
  int ExecuteAssembly(string assemblyFile, String[] args, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
  int ExecuteAssemblyInternal(Assembly a, String[] args)
  int ExecuteAssembly(Assembly a, String[] args)
  Assembly[] GetAssemblies(bool refOnly)
  Assembly[] GetAssemblies()
  object GetData(string name)
  Type GetType()
  object InitializeLifetimeService()
  Assembly LoadAssembly(string assemblyRef, Evidence securityEvidence, bool refOnly, StackCrawlMark& stackMark)
  Assembly Load(AssemblyName assemblyRef)
  Assembly LoadSatellite(AssemblyName assemblyRef, bool throwOnError, StackCrawlMark& stackMark)
  Assembly Load(AssemblyName assemblyRef, Evidence assemblySecurity)
  Assembly Load(string assemblyString)
  Assembly Load(string assemblyString, Evidence assemblySecurity)
  Assembly Load(string assemblyString, Evidence assemblySecurity, bool refonly, StackCrawlMark& stackMark)
  Assembly Load(Byte[] rawAssembly)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore)
  Assembly LoadAssemblyRaw(Byte[] rawAssembly, Byte[] rawSymbolStore, Evidence securityEvidence, bool refonly)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore, Evidence securityEvidence)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore, Evidence securityEvidence, bool refonly)
  void SetAppDomainPolicy(PolicyLevel domainPolicy)
  void SetCachePath(string path)
  void SetPrincipalPolicy(PrincipalPolicy policy)
  void SetShadowCopyFiles()
  void SetShadowCopyPath(string path)
  void SetThreadPrincipal(IPrincipal principal)
  AppDomain InternalSetDomainByID(int domain_id)
  AppDomain InternalSetDomain(AppDomain context)
  void InternalPushDomainRef(AppDomain domain)
  void InternalPushDomainRefByID(int domain_id)
  void InternalPopDomainRef()
  Context InternalSetContext(Context context)
  Context InternalGetContext()
  Context InternalGetDefaultContext()
  string InternalGetProcessGuid(string newguid)
  object InvokeInDomain(AppDomain domain, MethodInfo method, object obj, Object[] args)
  object InvokeInDomainByID(int domain_id, MethodInfo method, object obj, Object[] args)
  string GetProcessGuid()
  AppDomain CreateDomain(string friendlyName)
  AppDomain CreateDomain(string friendlyName, Evidence securityInfo)
  AppDomain createDomain(string friendlyName, AppDomainSetup info)
  AppDomain CreateDomain(string friendlyName, Evidence securityInfo, AppDomainSetup info)
  AppDomain CreateDomain(string friendlyName, Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles)
  AppDomain CreateDomain(string friendlyName, Evidence securityInfo, AppDomainSetup info, PermissionSet grantSet, StrongName[] fullTrustAssemblies)
  AppDomainSetup CreateDomainSetup(string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles)
  bool InternalIsFinalizingForUnload(int domain_id)
  bool IsFinalizingForUnload()
  void InternalUnload(int domain_id)
  int getDomainID()
  void Unload(AppDomain domain)
  void SetData(string name, object data)
  void SetData(string name, object data, IPermission permission)
  void SetDynamicBase(string path)
  int GetCurrentThreadId()
  string ToString()
  void ValidateAssemblyName(string name)
  void DoAssemblyLoad(Assembly assembly)
  Assembly DoAssemblyResolve(string name, Assembly requestingAssembly, bool refonly)
  Assembly DoTypeBuilderResolve(TypeBuilder tb)
  Assembly DoTypeResolve(string name)
  Assembly DoResourceResolve(string name, Assembly requesting)
  void DoDomainUnload()
  void DoUnhandledException(Exception e)
  void DoUnhandledException(UnhandledExceptionEventArgs args)
  Byte[] GetMarshalledDomainObjRef()
  void ProcessMessageInDomain(Byte[] arrRequest, CADMethodCallMessage cadMsg, Byte[]& arrResponse, CADMethodReturnMessage& cadMrm)
  void add_AssemblyLoad(AssemblyLoadEventHandler value)
  void remove_AssemblyLoad(AssemblyLoadEventHandler value)
  void add_AssemblyResolve(ResolveEventHandler value)
  void remove_AssemblyResolve(ResolveEventHandler value)
  void add_DomainUnload(EventHandler value)
  void remove_DomainUnload(EventHandler value)
  void add_ProcessExit(EventHandler value)
  void remove_ProcessExit(EventHandler value)
  void add_ResourceResolve(ResolveEventHandler value)
  void remove_ResourceResolve(ResolveEventHandler value)
  void add_TypeResolve(ResolveEventHandler value)
  void remove_TypeResolve(ResolveEventHandler value)
  void add_UnhandledException(UnhandledExceptionEventHandler value)
  void remove_UnhandledException(UnhandledExceptionEventHandler value)
  void add_FirstChanceException(EventHandler`1<FirstChanceExceptionEventArgs> value)
  void remove_FirstChanceException(EventHandler`1<FirstChanceExceptionEventArgs> value)
  bool get_IsHomogenous()
  bool get_IsFullyTrusted()
  AppDomainManager get_DomainManager()
  void add_ReflectionOnlyAssemblyResolve(ResolveEventHandler value)
  void remove_ReflectionOnlyAssemblyResolve(ResolveEventHandler value)
  ActivationContext get_ActivationContext()
  ApplicationIdentity get_ApplicationIdentity()
  int get_Id()
  string ApplyPolicy(string assemblyName)
  AppDomain CreateDomain(string friendlyName, Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles, AppDomainInitializer adInit, String[] adInitArgs)
  int ExecuteAssemblyByName(string assemblyName)
  int ExecuteAssemblyByName(string assemblyName, Evidence assemblySecurity)
  int ExecuteAssemblyByName(string assemblyName, Evidence assemblySecurity, String[] args)
  int ExecuteAssemblyByName(AssemblyName assemblyName, Evidence assemblySecurity, String[] args)
  int ExecuteAssemblyByName(string assemblyName, String[] args)
  int ExecuteAssemblyByName(AssemblyName assemblyName, String[] args)
  bool IsDefaultAppDomain()
  Assembly[] ReflectionOnlyGetAssemblies()
  void System._AppDomain.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System._AppDomain.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System._AppDomain.GetTypeInfoCount(UInt32& pcTInfo)
  void System._AppDomain.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  Nullable`1<bool> IsCompatibilitySwitchSet(string value)
  void SetCompatibilitySwitch(string value)
  bool get_MonitoringIsEnabled()
  void set_MonitoringIsEnabled(bool value)
  long get_MonitoringSurvivedMemorySize()
  long get_MonitoringSurvivedProcessMemorySize()
  long get_MonitoringTotalAllocatedMemorySize()
  TimeSpan get_MonitoringTotalProcessorTime()
--------------------------------------------------
Класс: System.Array_ReferenceSources
Наследуется от: object
Поля:
  int MaxArrayLength
  int MaxByteArrayLength
Свойства:
Методы:
--------------------------------------------------
Класс: System.BCLDebugLogLevel
Наследуется от: Enum
Поля:
  int value__
  BCLDebugLogLevel Trace
  BCLDebugLogLevel Status
  BCLDebugLogLevel Warning
  BCLDebugLogLevel Error
  BCLDebugLogLevel Panic
Свойства:
Методы:
--------------------------------------------------
Класс: System.BCLDebug
Наследуется от: object
Поля:
Свойства:
Методы:
  void Assert(bool condition, string message)
  void Correctness(bool expr, string msg)
  void Log(string message)
  void Log(string switchName, string message)
  void Log(string switchName, BCLDebugLogLevel level, Object[] messages)
  void Perf(bool expr, string msg)
  void Trace(string switchName, Object[] messages)
  bool CheckEnabled(string switchName)
--------------------------------------------------
Класс: System.CLRConfig
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CheckLegacyManagedDeflateStream()
  bool CheckThrowUnobservedTaskExceptions()
  void .ctor()
--------------------------------------------------
Класс: System.CompatibilitySwitches
Наследуется от: object
Поля:
  bool IsAppEarlierThanSilverlight4
  bool IsAppEarlierThanWindowsPhone8
Свойства:
Методы:
--------------------------------------------------
Класс: System.Environment
Наследуется от: object
Поля:
  string mono_corlib_version
  string nl
  OperatingSystem os
  PlatformID <Platform>k__BackingField
Свойства:
  bool IsWindows8OrAbove
  string CommandLine
  string CurrentDirectory
  int CurrentManagedThreadId
  int ExitCode
  bool HasShutdownStarted
  string MachineName
  string NewLine
  PlatformID Platform
  OperatingSystem OSVersion
  string StackTrace
  string SystemDirectory
  int TickCount
  string UserDomainName
  bool UserInteractive
  string UserName
  Version Version
  long WorkingSet
  bool Is64BitOperatingSystem
  int SystemPageSize
  bool Is64BitProcess
  int ProcessorCount
  bool IsRunningOnWindows
  string GacPath
  bool IsUnix
  bool IsMacOS
  bool IsCLRHosted
  bool IsWinRTSupported
Методы:
  string GetResourceString(string key)
  string GetResourceString(string key, CultureInfo culture)
  string GetResourceString(string key, Object[] values)
  string GetRuntimeResourceString(string key)
  string GetRuntimeResourceString(string key, Object[] values)
  string GetResourceStringEncodingName(int codePage)
  bool get_IsWindows8OrAbove()
  string get_CommandLine()
  string get_CurrentDirectory()
  void set_CurrentDirectory(string value)
  int get_CurrentManagedThreadId()
  int get_ExitCode()
  void set_ExitCode(int value)
  bool get_HasShutdownStarted()
  string get_MachineName()
  string GetNewLine()
  string get_NewLine()
  PlatformID get_Platform()
  string GetOSVersionString()
  OperatingSystem get_OSVersion()
  Version CreateVersionFromString(string info)
  string get_StackTrace()
  string get_SystemDirectory()
  int get_TickCount()
  string get_UserDomainName()
  bool get_UserInteractive()
  string get_UserName()
  Version get_Version()
  long get_WorkingSet()
  void Exit(int exitCode)
  void _Exit(int exitCode)
  string ExpandEnvironmentVariables(string name)
  String[] GetCommandLineArgs()
  string internalGetEnvironmentVariable_native(IntPtr variable)
  string internalGetEnvironmentVariable(string variable)
  string GetEnvironmentVariable(string variable)
  Hashtable GetEnvironmentVariablesNoCase()
  IDictionary GetEnvironmentVariables()
  string GetFolderPath(SpecialFolder folder)
  string GetWindowsFolderPath(int folder)
  string GetFolderPath(SpecialFolder folder, SpecialFolderOption option)
  string ReadXdgUserDir(string config_dir, string home_dir, string key, string fallback)
  string UnixGetFolderPath(SpecialFolder folder, SpecialFolderOption option)
  String[] GetLogicalDrives()
  void internalBroadcastSettingChange()
  string GetEnvironmentVariable(string variable, EnvironmentVariableTarget target)
  IDictionary GetEnvironmentVariables(EnvironmentVariableTarget target)
  void SetEnvironmentVariable(string variable, string value)
  void SetEnvironmentVariable(string variable, string value, EnvironmentVariableTarget target)
  void InternalSetEnvironmentVariable(Char* variable, int variable_length, Char* value, int value_length)
  void InternalSetEnvironmentVariable(string variable, string value)
  void FailFast(string message)
  void FailFast(string message, UInt32 exitCode)
  void FailFast(string message, Exception exception)
  void FailFast(string message, Exception exception, string errorSource)
  bool GetIs64BitOperatingSystem()
  bool get_Is64BitOperatingSystem()
  int get_SystemPageSize()
  bool get_Is64BitProcess()
  int get_ProcessorCount()
  bool get_IsRunningOnWindows()
  string get_GacPath()
  string internalGetGacPath()
  String[] GetLogicalDrivesInternal()
  String[] GetEnvironmentVariableNames()
  string GetMachineConfigPath()
  string internalGetHome()
  int GetPageSize()
  string get_bundled_machine_config()
  string GetBundledMachineConfig()
  bool get_IsUnix()
  bool get_IsMacOS()
  bool get_IsCLRHosted()
  void TriggerCodeContractFailure(ContractFailureKind failureKind, string message, string condition, string exceptionAsString)
  string GetStackTrace(Exception e, bool needFileInfo)
  bool get_IsWinRTSupported()
--------------------------------------------------
Класс: System.IRuntimeMethodInfo
Поля:
Свойства:
  RuntimeMethodHandleInternal Value
Методы:
  RuntimeMethodHandleInternal get_Value()
--------------------------------------------------
Класс: System.RuntimeMethodHandleInternal
Наследуется от: ValueType
Поля:
  IntPtr m_handle
Свойства:
  RuntimeMethodHandleInternal EmptyHandle
  IntPtr Value
Методы:
  RuntimeMethodHandleInternal get_EmptyHandle()
  bool IsNullHandle()
  IntPtr get_Value()
  void .ctor(IntPtr value)
--------------------------------------------------
Класс: System.MonoTypeInfo
Наследуется от: object
Поля:
  string full_name
  RuntimeConstructorInfo default_ctor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.TypeNameParser
Наследуется от: object
Поля:
Свойства:
Методы:
  Type GetType(string typeName, Func`2<AssemblyName, Assembly> assemblyResolver, Func`4<Assembly, string, bool, Type> typeResolver, bool throwOnError, bool ignoreCase, StackCrawlMark& stackMark)
  void .ctor()
--------------------------------------------------
Класс: System.ActivationContext
Наследуется от: object
Поля:
  ApplicationIdentity _appid
  ContextForm _form
  bool _disposed
Свойства:
  ContextForm Form
  ApplicationIdentity Identity
  Byte[] ApplicationManifestBytes
  Byte[] DeploymentManifestBytes
Методы:
  void .ctor(ApplicationIdentity identity)
  void Finalize()
  ContextForm get_Form()
  ApplicationIdentity get_Identity()
  ActivationContext CreatePartialActivationContext(ApplicationIdentity identity)
  ActivationContext CreatePartialActivationContext(ApplicationIdentity identity, String[] manifestPaths)
  void Dispose()
  void Dispose(bool disposing)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor()
  Byte[] get_ApplicationManifestBytes()
  Byte[] get_DeploymentManifestBytes()
--------------------------------------------------
Класс: System.AppDomainInitializer
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(String[] args)
  IAsyncResult BeginInvoke(String[] args, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.AppDomainManager
Наследуется от: MarshalByRefObject
Поля:
  ApplicationActivator _activator
  AppDomainManagerInitializationOptions _flags
Свойства:
  ApplicationActivator ApplicationActivator
  Assembly EntryAssembly
  HostExecutionContextManager HostExecutionContextManager
  HostSecurityManager HostSecurityManager
  AppDomainManagerInitializationOptions InitializationFlags
Методы:
  void .ctor()
  ApplicationActivator get_ApplicationActivator()
  Assembly get_EntryAssembly()
  HostExecutionContextManager get_HostExecutionContextManager()
  HostSecurityManager get_HostSecurityManager()
  AppDomainManagerInitializationOptions get_InitializationFlags()
  void set_InitializationFlags(AppDomainManagerInitializationOptions value)
  AppDomain CreateDomain(string friendlyName, Evidence securityInfo, AppDomainSetup appDomainInfo)
  void InitializeNewDomain(AppDomainSetup appDomainInfo)
  bool CheckSecuritySettings(SecurityState state)
  AppDomain CreateDomainHelper(string friendlyName, Evidence securityInfo, AppDomainSetup appDomainInfo)
--------------------------------------------------
Класс: System.AppDomainSetup
Наследуется от: object
Поля:
  string application_base
  string application_name
  string cache_path
  string configuration_file
  string dynamic_base
  string license_file
  string private_bin_path
  string private_bin_path_probe
  string shadow_copy_directories
  string shadow_copy_files
  bool publisher_policy
  bool path_changed
  LoaderOptimization loader_optimization
  bool disallow_binding_redirects
  bool disallow_code_downloads
  ActivationArguments _activationArguments
  AppDomainInitializer domain_initializer
  ApplicationTrust application_trust
  String[] domain_initializer_args
  bool disallow_appbase_probe
  Byte[] configuration_bytes
  Byte[] serialized_non_primitives
  string manager_assembly
  string manager_type
  String[] partial_visible_assemblies
  string <TargetFrameworkName>k__BackingField
Свойства:
  string ApplicationBase
  string ApplicationName
  string CachePath
  string ConfigurationFile
  bool DisallowPublisherPolicy
  string DynamicBase
  string LicenseFile
  LoaderOptimization LoaderOptimization
  string AppDomainManagerAssembly
  string AppDomainManagerType
  String[] PartialTrustVisibleAssemblies
  string PrivateBinPath
  string PrivateBinPathProbe
  string ShadowCopyDirectories
  string ShadowCopyFiles
  bool DisallowBindingRedirects
  bool DisallowCodeDownload
  string TargetFrameworkName
  ActivationArguments ActivationArguments
  AppDomainInitializer AppDomainInitializer
  String[] AppDomainInitializerArguments
  ApplicationTrust ApplicationTrust
  bool DisallowApplicationBaseProbing
  bool SandboxInterop
Методы:
  void .ctor()
  void .ctor(AppDomainSetup setup)
  void .ctor(ActivationArguments activationArguments)
  void .ctor(ActivationContext activationContext)
  string GetAppBase(string appBase)
  string get_ApplicationBase()
  void set_ApplicationBase(string value)
  string get_ApplicationName()
  void set_ApplicationName(string value)
  string get_CachePath()
  void set_CachePath(string value)
  string get_ConfigurationFile()
  void set_ConfigurationFile(string value)
  bool get_DisallowPublisherPolicy()
  void set_DisallowPublisherPolicy(bool value)
  string get_DynamicBase()
  void set_DynamicBase(string value)
  string get_LicenseFile()
  void set_LicenseFile(string value)
  LoaderOptimization get_LoaderOptimization()
  void set_LoaderOptimization(LoaderOptimization value)
  string get_AppDomainManagerAssembly()
  void set_AppDomainManagerAssembly(string value)
  string get_AppDomainManagerType()
  void set_AppDomainManagerType(string value)
  String[] get_PartialTrustVisibleAssemblies()
  void set_PartialTrustVisibleAssemblies(String[] value)
  string get_PrivateBinPath()
  void set_PrivateBinPath(string value)
  string get_PrivateBinPathProbe()
  void set_PrivateBinPathProbe(string value)
  string get_ShadowCopyDirectories()
  void set_ShadowCopyDirectories(string value)
  string get_ShadowCopyFiles()
  void set_ShadowCopyFiles(string value)
  bool get_DisallowBindingRedirects()
  void set_DisallowBindingRedirects(bool value)
  bool get_DisallowCodeDownload()
  void set_DisallowCodeDownload(bool value)
  string get_TargetFrameworkName()
  void set_TargetFrameworkName(string value)
  ActivationArguments get_ActivationArguments()
  void set_ActivationArguments(ActivationArguments value)
  AppDomainInitializer get_AppDomainInitializer()
  void set_AppDomainInitializer(AppDomainInitializer value)
  String[] get_AppDomainInitializerArguments()
  void set_AppDomainInitializerArguments(String[] value)
  ApplicationTrust get_ApplicationTrust()
  void set_ApplicationTrust(ApplicationTrust value)
  bool get_DisallowApplicationBaseProbing()
  void set_DisallowApplicationBaseProbing(bool value)
  Byte[] GetConfigurationBytes()
  void SetConfigurationBytes(Byte[] value)
  void DeserializeNonPrimitives()
  void SerializeNonPrimitives()
  void SetCompatibilitySwitches(IEnumerable`1<string> switches)
  bool get_SandboxInterop()
  void set_SandboxInterop(bool value)
  void SetNativeFunction(string functionName, int functionVersion, IntPtr functionPointer)
--------------------------------------------------
Класс: System.ApplicationIdentity
Наследуется от: object
Поля:
  string _fullName
  string _codeBase
Свойства:
  string CodeBase
  string FullName
Методы:
  void .ctor(string applicationIdentityFullName)
  string get_CodeBase()
  string get_FullName()
  string ToString()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ArgIterator
Наследуется от: ValueType
Поля:
  IntPtr sig
  IntPtr args
  int next_arg
  int num_args
Свойства:
Методы:
  void Setup(IntPtr argsp, IntPtr start)
  void .ctor(RuntimeArgumentHandle arglist)
  void .ctor(RuntimeArgumentHandle arglist, Void* ptr)
  void End()
  bool Equals(object o)
  int GetHashCode()
  TypedReference GetNextArg()
  void IntGetNextArg(Void* res)
  TypedReference GetNextArg(RuntimeTypeHandle rth)
  void IntGetNextArgWithType(Void* res, IntPtr rth)
  RuntimeTypeHandle GetNextArgType()
  IntPtr IntGetNextArgType()
  int GetRemainingCount()
--------------------------------------------------
Класс: System.Console
Наследуется от: object
Поля:
  TextWriter stdout
  TextWriter stderr
  TextReader stdin
  string LibLog
  string LibLog64
  bool IsRunningOnAndroid
  Encoding inputEncoding
  Encoding outputEncoding
  ConsoleCancelEventHandler cancel_event
Свойства:
  TextWriter Error
  TextWriter Out
  TextReader In
  Encoding InputEncoding
  Encoding OutputEncoding
  ConsoleColor BackgroundColor
  int BufferHeight
  int BufferWidth
  bool CapsLock
  int CursorLeft
  int CursorTop
  int CursorSize
  bool CursorVisible
  ConsoleColor ForegroundColor
  bool KeyAvailable
  int LargestWindowHeight
  int LargestWindowWidth
  bool NumberLock
  string Title
  bool TreatControlCAsInput
  int WindowHeight
  int WindowLeft
  int WindowTop
  int WindowWidth
  bool IsErrorRedirected
  bool IsOutputRedirected
  bool IsInputRedirected
Методы:
  void .cctor()
  void SetupStreams(Encoding inputEncoding, Encoding outputEncoding)
  TextWriter get_Error()
  TextWriter get_Out()
  TextReader get_In()
  Stream Open(IntPtr handle, FileAccess access, int bufferSize)
  Stream OpenStandardError()
  Stream OpenStandardError(int bufferSize)
  Stream OpenStandardInput()
  Stream OpenStandardInput(int bufferSize)
  Stream OpenStandardOutput()
  Stream OpenStandardOutput(int bufferSize)
  void SetError(TextWriter newError)
  void SetIn(TextReader newIn)
  void SetOut(TextWriter newOut)
  void Write(bool value)
  void Write(char value)
  void Write(Char[] buffer)
  void Write(decimal value)
  void Write(double value)
  void Write(int value)
  void Write(long value)
  void Write(object value)
  void Write(float value)
  void Write(string value)
  void Write(UInt32 value)
  void Write(ulong value)
  void Write(string format, object arg0)
  void Write(string format, Object[] arg)
  void Write(Char[] buffer, int index, int count)
  void Write(string format, object arg0, object arg1)
  void Write(string format, object arg0, object arg1, object arg2)
  void Write(string format, object arg0, object arg1, object arg2, object arg3)
  void WriteLine()
  void WriteLine(bool value)
  void WriteLine(char value)
  void WriteLine(Char[] buffer)
  void WriteLine(decimal value)
  void WriteLine(double value)
  void WriteLine(int value)
  void WriteLine(long value)
  void WriteLine(object value)
  void WriteLine(float value)
  void WriteLine(string value)
  void WriteLine(UInt32 value)
  void WriteLine(ulong value)
  void WriteLine(string format, object arg0)
  void WriteLine(string format, Object[] arg)
  void WriteLine(Char[] buffer, int index, int count)
  void WriteLine(string format, object arg0, object arg1)
  void WriteLine(string format, object arg0, object arg1, object arg2)
  void WriteLine(string format, object arg0, object arg1, object arg2, object arg3)
  int Read()
  string ReadLine()
  Encoding get_InputEncoding()
  void set_InputEncoding(Encoding value)
  Encoding get_OutputEncoding()
  void set_OutputEncoding(Encoding value)
  ConsoleColor get_BackgroundColor()
  void set_BackgroundColor(ConsoleColor value)
  int get_BufferHeight()
  void set_BufferHeight(int value)
  int get_BufferWidth()
  void set_BufferWidth(int value)
  bool get_CapsLock()
  int get_CursorLeft()
  void set_CursorLeft(int value)
  int get_CursorTop()
  void set_CursorTop(int value)
  int get_CursorSize()
  void set_CursorSize(int value)
  bool get_CursorVisible()
  void set_CursorVisible(bool value)
  ConsoleColor get_ForegroundColor()
  void set_ForegroundColor(ConsoleColor value)
  bool get_KeyAvailable()
  int get_LargestWindowHeight()
  int get_LargestWindowWidth()
  bool get_NumberLock()
  string get_Title()
  void set_Title(string value)
  bool get_TreatControlCAsInput()
  void set_TreatControlCAsInput(bool value)
  int get_WindowHeight()
  void set_WindowHeight(int value)
  int get_WindowLeft()
  void set_WindowLeft(int value)
  int get_WindowTop()
  void set_WindowTop(int value)
  int get_WindowWidth()
  void set_WindowWidth(int value)
  bool get_IsErrorRedirected()
  bool get_IsOutputRedirected()
  bool get_IsInputRedirected()
  void Beep()
  void Beep(int frequency, int duration)
  void Clear()
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop)
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
  ConsoleKeyInfo ReadKey()
  ConsoleKeyInfo ReadKey(bool intercept)
  void ResetColor()
  void SetBufferSize(int width, int height)
  void SetCursorPosition(int left, int top)
  void SetWindowPosition(int left, int top)
  void SetWindowSize(int width, int height)
  void add_CancelKeyPress(ConsoleCancelEventHandler value)
  void remove_CancelKeyPress(ConsoleCancelEventHandler value)
  void DoConsoleCancelEventInBackground()
  void DoConsoleCancelEvent()
--------------------------------------------------
Класс: System.ConsoleDriver
Наследуется от: object
Поля:
  IConsoleDriver driver
  bool is_console
  bool called_isatty
Свойства:
  bool Initialized
  ConsoleColor BackgroundColor
  int BufferHeight
  int BufferWidth
  bool CapsLock
  int CursorLeft
  int CursorSize
  int CursorTop
  bool CursorVisible
  bool KeyAvailable
  ConsoleColor ForegroundColor
  int LargestWindowHeight
  int LargestWindowWidth
  bool NumberLock
  string Title
  bool TreatControlCAsInput
  int WindowHeight
  int WindowLeft
  int WindowTop
  int WindowWidth
  bool IsErrorRedirected
  bool IsOutputRedirected
  bool IsInputRedirected
  bool IsConsole
Методы:
  void .cctor()
  IConsoleDriver CreateNullConsoleDriver()
  IConsoleDriver CreateWindowsConsoleDriver()
  IConsoleDriver CreateTermInfoDriver(string term)
  bool get_Initialized()
  ConsoleColor get_BackgroundColor()
  void set_BackgroundColor(ConsoleColor value)
  int get_BufferHeight()
  void set_BufferHeight(int value)
  int get_BufferWidth()
  void set_BufferWidth(int value)
  bool get_CapsLock()
  int get_CursorLeft()
  void set_CursorLeft(int value)
  int get_CursorSize()
  void set_CursorSize(int value)
  int get_CursorTop()
  void set_CursorTop(int value)
  bool get_CursorVisible()
  void set_CursorVisible(bool value)
  bool get_KeyAvailable()
  ConsoleColor get_ForegroundColor()
  void set_ForegroundColor(ConsoleColor value)
  int get_LargestWindowHeight()
  int get_LargestWindowWidth()
  bool get_NumberLock()
  string get_Title()
  void set_Title(string value)
  bool get_TreatControlCAsInput()
  void set_TreatControlCAsInput(bool value)
  int get_WindowHeight()
  void set_WindowHeight(int value)
  int get_WindowLeft()
  void set_WindowLeft(int value)
  int get_WindowTop()
  void set_WindowTop(int value)
  int get_WindowWidth()
  void set_WindowWidth(int value)
  bool get_IsErrorRedirected()
  bool get_IsOutputRedirected()
  bool get_IsInputRedirected()
  void Beep(int frequency, int duration)
  void Clear()
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop)
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
  void Init()
  int Read()
  string ReadLine()
  ConsoleKeyInfo ReadKey(bool intercept)
  void ResetColor()
  void SetBufferSize(int width, int height)
  void SetCursorPosition(int left, int top)
  void SetWindowPosition(int left, int top)
  void SetWindowSize(int width, int height)
  bool get_IsConsole()
  bool Isatty(IntPtr handle)
  int InternalKeyAvailable(int ms_timeout)
  bool TtySetup(string keypadXmit, string teardown, Byte[]& control_characters, Int32*& address)
  bool SetEcho(bool wantEcho)
  bool SetBreak(bool wantBreak)
--------------------------------------------------
Класс: System.ControlCharacters
Наследуется от: object
Поля:
  int Intr
  int Quit
  int Erase
  int Kill
  int EOF
  int Time
  int Min
  int SWTC
  int Start
  int Stop
  int Susp
  int EOL
  int Reprint
  int Discard
  int WErase
  int LNext
  int EOL2
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CrossAppDomainDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.DelegateData
Наследуется от: object
Поля:
  Type target_type
  string method_name
  bool curried_first_arg
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Delegate
Наследуется от: object
Поля:
  IntPtr method_ptr
  IntPtr invoke_impl
  object m_target
  IntPtr method
  IntPtr delegate_trampoline
  IntPtr extra_arg
  IntPtr method_code
  IntPtr interp_method
  IntPtr interp_invoke_impl
  MethodInfo method_info
  MethodInfo original_method_info
  DelegateData data
  bool method_is_virtual
Свойства:
  MethodInfo Method
  object Target
Методы:
  void .ctor(object target, string method)
  void .ctor(Type target, string method)
  MethodInfo get_Method()
  MethodInfo GetVirtualMethod_internal()
  object get_Target()
  IntPtr GetNativeFunctionPointer()
  Delegate CreateDelegate_internal(Type type, object target, MethodInfo info, bool throwOnBindFailure)
  bool arg_type_match(Type delArgType, Type argType)
  bool arg_type_match_this(Type delArgType, Type argType, bool boxedThis)
  bool return_type_match(Type delReturnType, Type returnType)
  Delegate CreateDelegate(Type type, object firstArgument, MethodInfo method, bool throwOnBindFailure)
  Delegate CreateDelegate(Type type, object firstArgument, MethodInfo method, bool throwOnBindFailure, bool allowClosed)
  Delegate CreateDelegate(Type type, object firstArgument, MethodInfo method)
  Delegate CreateDelegate(Type type, MethodInfo method, bool throwOnBindFailure)
  Delegate CreateDelegate(Type type, MethodInfo method)
  Delegate CreateDelegate(Type type, object target, string method)
  MethodInfo GetCandidateMethod(Type type, Type target, string method, BindingFlags bflags, bool ignoreCase, bool throwOnBindFailure)
  Delegate CreateDelegate(Type type, Type target, string method, bool ignoreCase, bool throwOnBindFailure)
  Delegate CreateDelegate(Type type, Type target, string method)
  Delegate CreateDelegate(Type type, Type target, string method, bool ignoreCase)
  Delegate CreateDelegate(Type type, object target, string method, bool ignoreCase, bool throwOnBindFailure)
  Delegate CreateDelegate(Type type, object target, string method, bool ignoreCase)
  object DynamicInvoke(Object[] args)
  void InitializeDelegateData()
  object DynamicInvokeImpl(Object[] args)
  object Clone()
  bool Equals(object obj)
  int GetHashCode()
  MethodInfo GetMethodImpl()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Delegate[] GetInvocationList()
  Delegate Combine(Delegate a, Delegate b)
  Delegate Combine(Delegate[] delegates)
  Delegate CombineImpl(Delegate d)
  Delegate Remove(Delegate source, Delegate value)
  Delegate RemoveImpl(Delegate d)
  Delegate RemoveAll(Delegate source, Delegate value)
  bool op_Equality(Delegate d1, Delegate d2)
  bool op_Inequality(Delegate d1, Delegate d2)
  bool IsTransparentProxy()
  Delegate CreateDelegateNoSecurityCheck(RuntimeType type, object firstArgument, MethodInfo method)
  MulticastDelegate AllocDelegateLike_internal(Delegate d)
--------------------------------------------------
Класс: System.DelegateSerializationHolder
Наследуется от: object
Поля:
  Delegate _delegate
Свойства:
Методы:
  void .ctor(SerializationInfo info, StreamingContext ctx)
  void GetDelegateData(Delegate instance, SerializationInfo info, StreamingContext ctx)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object GetRealObject(StreamingContext context)
--------------------------------------------------
Класс: System.AppDomainManagerInitializationOptions
Наследуется от: Enum
Поля:
  int value__
  AppDomainManagerInitializationOptions None
  AppDomainManagerInitializationOptions RegisterWithHost
Свойства:
Методы:
--------------------------------------------------
Класс: System.EmptyArray`1
Наследуется от: object
Поля:
  T[] Value
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.EnvironmentVariableTarget
Наследуется от: Enum
Поля:
  int value__
  EnvironmentVariableTarget Process
  EnvironmentVariableTarget User
  EnvironmentVariableTarget Machine
Свойства:
Методы:
--------------------------------------------------
Класс: System.IConsoleDriver
Поля:
Свойства:
  ConsoleColor BackgroundColor
  int BufferHeight
  int BufferWidth
  bool CapsLock
  int CursorLeft
  int CursorSize
  int CursorTop
  bool CursorVisible
  ConsoleColor ForegroundColor
  bool KeyAvailable
  bool Initialized
  int LargestWindowHeight
  int LargestWindowWidth
  bool NumberLock
  string Title
  bool TreatControlCAsInput
  int WindowHeight
  int WindowLeft
  int WindowTop
  int WindowWidth
Методы:
  ConsoleColor get_BackgroundColor()
  void set_BackgroundColor(ConsoleColor value)
  int get_BufferHeight()
  void set_BufferHeight(int value)
  int get_BufferWidth()
  void set_BufferWidth(int value)
  bool get_CapsLock()
  int get_CursorLeft()
  void set_CursorLeft(int value)
  int get_CursorSize()
  void set_CursorSize(int value)
  int get_CursorTop()
  void set_CursorTop(int value)
  bool get_CursorVisible()
  void set_CursorVisible(bool value)
  ConsoleColor get_ForegroundColor()
  void set_ForegroundColor(ConsoleColor value)
  bool get_KeyAvailable()
  bool get_Initialized()
  int get_LargestWindowHeight()
  int get_LargestWindowWidth()
  bool get_NumberLock()
  string get_Title()
  void set_Title(string value)
  bool get_TreatControlCAsInput()
  void set_TreatControlCAsInput(bool value)
  int get_WindowHeight()
  void set_WindowHeight(int value)
  int get_WindowLeft()
  void set_WindowLeft(int value)
  int get_WindowTop()
  void set_WindowTop(int value)
  int get_WindowWidth()
  void set_WindowWidth(int value)
  void Init()
  void Beep(int frequency, int duration)
  void Clear()
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
  ConsoleKeyInfo ReadKey(bool intercept)
  void ResetColor()
  void SetBufferSize(int width, int height)
  void SetCursorPosition(int left, int top)
  void SetWindowPosition(int left, int top)
  void SetWindowSize(int width, int height)
  string ReadLine()
--------------------------------------------------
Класс: System.IntPtr
Наследуется от: ValueType
Поля:
  Void* m_value
  IntPtr Zero
Свойства:
  int Size
Методы:
  void .ctor(int value)
  void .ctor(long value)
  void .ctor(Void* value)
  void .ctor(SerializationInfo info, StreamingContext context)
  int get_Size()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  bool Equals(object obj)
  int GetHashCode()
  int ToInt32()
  long ToInt64()
  Void* ToPointer()
  string ToString()
  string ToString(string format)
  bool op_Equality(IntPtr value1, IntPtr value2)
  bool op_Inequality(IntPtr value1, IntPtr value2)
  IntPtr op_Explicit(int value)
  IntPtr op_Explicit(long value)
  IntPtr op_Explicit(Void* value)
  int op_Explicit(IntPtr value)
  long op_Explicit(IntPtr value)
  Void* op_Explicit(IntPtr value)
  IntPtr Add(IntPtr pointer, int offset)
  IntPtr Subtract(IntPtr pointer, int offset)
  IntPtr op_Addition(IntPtr pointer, int offset)
  IntPtr op_Subtraction(IntPtr pointer, int offset)
  bool IsNull()
  bool System.IEquatable<System.IntPtr>.Equals(IntPtr other)
--------------------------------------------------
Класс: System.KnownTerminals
Наследуется от: object
Поля:
Свойства:
  Byte[] linux
  Byte[] xterm
  Byte[] ansi
Методы:
  Byte[] get_linux()
  Byte[] get_xterm()
  Byte[] get_ansi()
--------------------------------------------------
Класс: System.MarshalByRefObject
Наследуется от: object
Поля:
  ServerIdentity _identity
Свойства:
  ServerIdentity ObjectIdentity
Методы:
  void .ctor()
  Identity GetObjectIdentity(MarshalByRefObject obj, Boolean& IsClient)
  ServerIdentity get_ObjectIdentity()
  void set_ObjectIdentity(ServerIdentity value)
  ObjRef CreateObjRef(Type requestedType)
  object GetLifetimeService()
  object InitializeLifetimeService()
  MarshalByRefObject MemberwiseClone(bool cloneIdentity)
--------------------------------------------------
Класс: System.ModuleHandle
Наследуется от: ValueType
Поля:
  IntPtr value
  ModuleHandle EmptyHandle
Свойства:
  IntPtr Value
  int MDStreamVersion
Методы:
  void .ctor(IntPtr v)
  IntPtr get_Value()
  int get_MDStreamVersion()
  void GetPEKind(PortableExecutableKinds& peKind, ImageFileMachine& machine)
  RuntimeFieldHandle ResolveFieldHandle(int fieldToken)
  RuntimeMethodHandle ResolveMethodHandle(int methodToken)
  RuntimeTypeHandle ResolveTypeHandle(int typeToken)
  IntPtr[] ptrs_from_handles(RuntimeTypeHandle[] handles)
  RuntimeTypeHandle ResolveTypeHandle(int typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)
  RuntimeMethodHandle ResolveMethodHandle(int methodToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)
  RuntimeFieldHandle ResolveFieldHandle(int fieldToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)
  RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken(int fieldToken)
  RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken(int methodToken)
  RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken(int typeToken)
  bool Equals(object obj)
  bool Equals(ModuleHandle handle)
  int GetHashCode()
  bool op_Equality(ModuleHandle left, ModuleHandle right)
  bool op_Inequality(ModuleHandle left, ModuleHandle right)
  void .cctor()
--------------------------------------------------
Класс: System.MonoAsyncCall
Наследуется от: object
Поля:
  object msg
  IntPtr cb_method
  object cb_target
  object state
  object res
  object out_args
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.MonoCQItem
Наследуется от: object
Поля:
  Object[] array
  Byte[] array_state
  int head
  int tail
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.MonoCustomAttrs
Наследуется от: object
Поля:
  Assembly corlib
  Dictionary`2<Type, AttributeUsageAttribute> usage_cache
  AttributeUsageAttribute DefaultAttributeUsage
Свойства:
Методы:
  bool IsUserCattrProvider(object obj)
  Attribute[] GetCustomAttributesInternal(ICustomAttributeProvider obj, Type attributeType, bool pseudoAttrs)
  Object[] GetPseudoCustomAttributes(ICustomAttributeProvider obj, Type attributeType)
  Object[] GetPseudoCustomAttributes(Type type)
  Object[] GetCustomAttributesBase(ICustomAttributeProvider obj, Type attributeType, bool inheritedOnly)
  Object[] GetCustomAttributes(ICustomAttributeProvider obj, Type attributeType, bool inherit)
  Object[] GetCustomAttributes(ICustomAttributeProvider obj, bool inherit)
  CustomAttributeData[] GetCustomAttributesDataInternal(ICustomAttributeProvider obj)
  IList`1<CustomAttributeData> GetCustomAttributesData(ICustomAttributeProvider obj, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesData(ICustomAttributeProvider obj, Type attributeType, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesDataBase(ICustomAttributeProvider obj, Type attributeType, bool inheritedOnly)
  CustomAttributeData[] GetPseudoCustomAttributesData(ICustomAttributeProvider obj, Type attributeType)
  CustomAttributeData[] GetPseudoCustomAttributesData(Type type)
  bool IsDefined(ICustomAttributeProvider obj, Type attributeType, bool inherit)
  bool IsDefinedInternal(ICustomAttributeProvider obj, Type AttributeType)
  PropertyInfo GetBasePropertyDefinition(RuntimePropertyInfo property)
  EventInfo GetBaseEventDefinition(RuntimeEventInfo evt)
  ICustomAttributeProvider GetBase(ICustomAttributeProvider obj)
  AttributeUsageAttribute RetrieveAttributeUsageNoCache(Type attributeType)
  AttributeUsageAttribute RetrieveAttributeUsage(Type attributeType)
  void .cctor()
--------------------------------------------------
Класс: System.MonoListItem
Наследуется от: object
Поля:
  MonoListItem next
  object data
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.MonoType
Наследуется от: RuntimeType
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.MulticastDelegate
Наследуется от: Delegate
Поля:
  Delegate[] delegates
Свойства:
  bool HasSingleTarget
Методы:
  void .ctor(object target, string method)
  void .ctor(Type target, string method)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object DynamicInvokeImpl(Object[] args)
  bool get_HasSingleTarget()
  bool Equals(object obj)
  int GetHashCode()
  MethodInfo GetMethodImpl()
  Delegate[] GetInvocationList()
  Delegate CombineImpl(Delegate follow)
  int LastIndexOf(Delegate[] haystack, Delegate[] needle)
  Delegate RemoveImpl(Delegate value)
  bool op_Equality(MulticastDelegate d1, MulticastDelegate d2)
  bool op_Inequality(MulticastDelegate d1, MulticastDelegate d2)
--------------------------------------------------
Класс: System.NullConsoleDriver
Наследуется от: object
Поля:
  ConsoleKeyInfo EmptyConsoleKeyInfo
Свойства:
  ConsoleColor BackgroundColor
  int BufferHeight
  int BufferWidth
  bool CapsLock
  int CursorLeft
  int CursorSize
  int CursorTop
  bool CursorVisible
  ConsoleColor ForegroundColor
  bool KeyAvailable
  bool Initialized
  int LargestWindowHeight
  int LargestWindowWidth
  bool NumberLock
  string Title
  bool TreatControlCAsInput
  int WindowHeight
  int WindowLeft
  int WindowTop
  int WindowWidth
Методы:
  ConsoleColor get_BackgroundColor()
  void set_BackgroundColor(ConsoleColor value)
  int get_BufferHeight()
  void set_BufferHeight(int value)
  int get_BufferWidth()
  void set_BufferWidth(int value)
  bool get_CapsLock()
  int get_CursorLeft()
  void set_CursorLeft(int value)
  int get_CursorSize()
  void set_CursorSize(int value)
  int get_CursorTop()
  void set_CursorTop(int value)
  bool get_CursorVisible()
  void set_CursorVisible(bool value)
  ConsoleColor get_ForegroundColor()
  void set_ForegroundColor(ConsoleColor value)
  bool get_KeyAvailable()
  bool get_Initialized()
  int get_LargestWindowHeight()
  int get_LargestWindowWidth()
  bool get_NumberLock()
  string get_Title()
  void set_Title(string value)
  bool get_TreatControlCAsInput()
  void set_TreatControlCAsInput(bool value)
  int get_WindowHeight()
  void set_WindowHeight(int value)
  int get_WindowLeft()
  void set_WindowLeft(int value)
  int get_WindowTop()
  void set_WindowTop(int value)
  int get_WindowWidth()
  void set_WindowWidth(int value)
  void Beep(int frequency, int duration)
  void Clear()
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
  void Init()
  string ReadLine()
  ConsoleKeyInfo ReadKey(bool intercept)
  void ResetColor()
  void SetBufferSize(int width, int height)
  void SetCursorPosition(int left, int top)
  void SetWindowPosition(int left, int top)
  void SetWindowSize(int width, int height)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.NumberFormatter
Наследуется от: object
Поля:
  int DefaultExpPrecision
  int HundredMillion
  long SeventeenDigitsThreshold
  ulong ULongDivHundredMillion
  ulong ULongModHundredMillion
  int DoubleBitsExponentShift
  int DoubleBitsExponentMask
  long DoubleBitsMantissaMask
  int DecimalBitsScaleMask
  int SingleDefPrecision
  int DoubleDefPrecision
  int Int32DefPrecision
  int UInt32DefPrecision
  int Int64DefPrecision
  int UInt64DefPrecision
  int DecimalDefPrecision
  int TenPowersListLength
  double MinRoundtripVal
  double MaxRoundtripVal
  UInt64* MantissaBitsTable
  Int32* TensExponentTable
  Char* DigitLowerTable
  Char* DigitUpperTable
  Int64* TenPowersList
  Int32* DecHexDigits
  NumberFormatInfo _nfi
  Char[] _cbuf
  bool _NaN
  bool _infinity
  bool _isCustomFormat
  bool _specifierIsUpper
  bool _positive
  char _specifier
  int _precision
  int _defPrecision
  int _digitsLen
  int _offset
  int _decPointPos
  UInt32 _val1
  UInt32 _val2
  UInt32 _val3
  UInt32 _val4
  int _ind
  NumberFormatter threadNumberFormatter
  NumberFormatter userFormatProvider
Свойства:
  CultureInfo CurrentCulture
  int IntegerDigits
  int DecimalDigits
  bool IsFloatingSource
  bool IsZero
  bool IsZeroInteger
Методы:
  void GetFormatterTables(UInt64*& MantissaBitsTable, Int32*& TensExponentTable, Char*& DigitLowerTable, Char*& DigitUpperTable, Int64*& TenPowersList, Int32*& DecHexDigits)
  void .cctor()
  long GetTenPowerOf(int i)
  void InitDecHexDigits(UInt32 value)
  void InitDecHexDigits(ulong value)
  void InitDecHexDigits(UInt32 hi, ulong lo)
  UInt32 FastToDecHex(int val)
  UInt32 ToDecHex(int val)
  int FastDecHexLen(int val)
  int DecHexLen(UInt32 val)
  int DecHexLen()
  int ScaleOrder(long hi)
  int InitialFloatingPrecision()
  int ParsePrecision(string format)
  void .ctor(Thread current)
  void Init(string format)
  void InitHex(ulong value)
  void Init(string format, int value, int defPrecision)
  void Init(string format, UInt32 value, int defPrecision)
  void Init(string format, long value)
  void Init(string format, ulong value)
  void Init(string format, double value, int defPrecision)
  void Init(string format, decimal value)
  void ResetCharBuf(int size)
  void Resize(int len)
  void Append(char c)
  void Append(char c, int cnt)
  void Append(string s)
  NumberFormatInfo GetNumberFormatInstance(IFormatProvider fp)
  void set_CurrentCulture(CultureInfo value)
  int get_IntegerDigits()
  int get_DecimalDigits()
  bool get_IsFloatingSource()
  bool get_IsZero()
  bool get_IsZeroInteger()
  void RoundPos(int pos)
  bool RoundDecimal(int decimals)
  bool RoundBits(int shift)
  void RemoveTrailingZeros()
  void AddOneToDecHex()
  UInt32 AddOneToDecHex(UInt32 val)
  int CountTrailingZeros()
  int CountTrailingZeros(UInt32 val)
  NumberFormatter GetInstance(IFormatProvider fp)
  void Release()
  string NumberToString(string format, UInt32 value, IFormatProvider fp)
  string NumberToString(string format, int value, IFormatProvider fp)
  string NumberToString(string format, ulong value, IFormatProvider fp)
  string NumberToString(string format, long value, IFormatProvider fp)
  string NumberToString(string format, float value, IFormatProvider fp)
  string NumberToString(string format, double value, IFormatProvider fp)
  string NumberToString(string format, decimal value, IFormatProvider fp)
  string IntegerToString(string format, IFormatProvider fp)
  string NumberToString(string format, NumberFormatInfo nfi)
  string FormatCurrency(int precision, NumberFormatInfo nfi)
  string FormatDecimal(int precision, NumberFormatInfo nfi)
  string FormatHexadecimal(int precision)
  string FormatFixedPoint(int precision, NumberFormatInfo nfi)
  string FormatRoundtrip(double origval, NumberFormatInfo nfi)
  string FormatRoundtrip(float origval, NumberFormatInfo nfi)
  string FormatGeneral(int precision, NumberFormatInfo nfi)
  string FormatNumber(int precision, NumberFormatInfo nfi)
  string FormatPercent(int precision, NumberFormatInfo nfi)
  string FormatExponential(int precision, NumberFormatInfo nfi)
  string FormatExponential(int precision, NumberFormatInfo nfi, int expDigits)
  string FormatCustom(string format, NumberFormatInfo nfi)
  void ZeroTrimEnd(StringBuilder sb, bool canEmpty)
  bool IsZeroOnly(StringBuilder sb)
  void AppendNonNegativeNumber(StringBuilder sb, int v)
  void AppendIntegerString(int minLength, StringBuilder sb)
  void AppendIntegerString(int minLength)
  void AppendDecimalString(int precision, StringBuilder sb)
  void AppendDecimalString(int precision)
  void AppendIntegerStringWithGroupSeparator(Int32[] groups, string groupSeparator)
  void AppendExponent(NumberFormatInfo nfi, int exponent, int minDigits)
  void AppendOneDigit(int start)
  void AppendDigits(int start, int end)
  void AppendDigits(int start, int end, StringBuilder sb)
  void Multiply10(int count)
  void Divide10(int count)
  NumberFormatter GetClone()
--------------------------------------------------
Класс: System.Object
Поля:
Свойства:
Методы:
  bool Equals(object obj)
  bool Equals(object objA, object objB)
  void .ctor()
  void Finalize()
  int GetHashCode()
  Type GetType()
  object MemberwiseClone()
  string ToString()
  bool ReferenceEquals(object objA, object objB)
  int InternalGetHashCode(object o)
  void FieldGetter(string typeName, string fieldName, Object& val)
  void FieldSetter(string typeName, string fieldName, object val)
--------------------------------------------------
Класс: System.PlatformID
Наследуется от: Enum
Поля:
  int value__
  PlatformID Win32S
  PlatformID Win32Windows
  PlatformID Win32NT
  PlatformID WinCE
  PlatformID Unix
  PlatformID Xbox
  PlatformID MacOSX
Свойства:
Методы:
--------------------------------------------------
Класс: System.RuntimeArgumentHandle
Наследуется от: ValueType
Поля:
  IntPtr args
Свойства:
Методы:
--------------------------------------------------
Класс: System.RuntimeFieldHandle
Наследуется от: ValueType
Поля:
  IntPtr value
Свойства:
  IntPtr Value
Методы:
  void .ctor(IntPtr v)
  void .ctor(SerializationInfo info, StreamingContext context)
  IntPtr get_Value()
  bool IsNullHandle()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  bool Equals(object obj)
  bool Equals(RuntimeFieldHandle handle)
  int GetHashCode()
  bool op_Equality(RuntimeFieldHandle left, RuntimeFieldHandle right)
  bool op_Inequality(RuntimeFieldHandle left, RuntimeFieldHandle right)
  void SetValueInternal(FieldInfo fi, object obj, object value)
  void SetValue(RuntimeFieldInfo field, object obj, object value, RuntimeType fieldType, FieldAttributes fieldAttr, RuntimeType declaringType, Boolean& domainInitialized)
  object GetValueDirect(RuntimeFieldInfo field, RuntimeType fieldType, Void* pTypedRef, RuntimeType contextType)
  void SetValueDirect(RuntimeFieldInfo field, RuntimeType fieldType, Void* pTypedRef, object value, RuntimeType contextType)
--------------------------------------------------
Класс: System.RuntimeMethodHandle
Наследуется от: ValueType
Поля:
  IntPtr value
Свойства:
  IntPtr Value
Методы:
  void .ctor(IntPtr v)
  void .ctor(SerializationInfo info, StreamingContext context)
  IntPtr get_Value()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  IntPtr GetFunctionPointer(IntPtr m)
  IntPtr GetFunctionPointer()
  bool Equals(object obj)
  bool Equals(RuntimeMethodHandle handle)
  int GetHashCode()
  bool op_Equality(RuntimeMethodHandle left, RuntimeMethodHandle right)
  bool op_Inequality(RuntimeMethodHandle left, RuntimeMethodHandle right)
  string ConstructInstantiation(RuntimeMethodInfo method, TypeNameFormatFlags format)
  bool IsNullHandle()
--------------------------------------------------
Класс: System.RuntimeTypeHandle
Наследуется от: ValueType
Поля:
  IntPtr value
Свойства:
  IntPtr Value
Методы:
  void .ctor(IntPtr val)
  void .ctor(RuntimeType type)
  void .ctor(SerializationInfo info, StreamingContext context)
  IntPtr get_Value()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  bool Equals(object obj)
  bool Equals(RuntimeTypeHandle handle)
  int GetHashCode()
  bool op_Equality(RuntimeTypeHandle left, object right)
  bool op_Inequality(RuntimeTypeHandle left, object right)
  bool op_Equality(object left, RuntimeTypeHandle right)
  bool op_Inequality(object left, RuntimeTypeHandle right)
  TypeAttributes GetAttributes(RuntimeType type)
  ModuleHandle GetModuleHandle()
  int GetMetadataToken(RuntimeType type)
  int GetToken(RuntimeType type)
  Type GetGenericTypeDefinition_impl(RuntimeType type)
  Type GetGenericTypeDefinition(RuntimeType type)
  bool HasProxyAttribute(RuntimeType type)
  bool IsPrimitive(RuntimeType type)
  bool IsByRef(RuntimeType type)
  bool IsPointer(RuntimeType type)
  bool IsArray(RuntimeType type)
  bool IsSzArray(RuntimeType type)
  bool HasElementType(RuntimeType type)
  CorElementType GetCorElementType(RuntimeType type)
  bool HasInstantiation(RuntimeType type)
  bool IsComObject(RuntimeType type)
  bool IsInstanceOfType(RuntimeType type, object o)
  bool HasReferences(RuntimeType type)
  bool IsComObject(RuntimeType type, bool isGenericCOM)
  bool IsContextful(RuntimeType type)
  bool IsEquivalentTo(RuntimeType rtType1, RuntimeType rtType2)
  bool IsInterface(RuntimeType type)
  int GetArrayRank(RuntimeType type)
  RuntimeAssembly GetAssembly(RuntimeType type)
  RuntimeType GetElementType(RuntimeType type)
  RuntimeModule GetModule(RuntimeType type)
  bool IsGenericVariable(RuntimeType type)
  RuntimeType GetBaseType(RuntimeType type)
  bool CanCastTo(RuntimeType type, RuntimeType target)
  bool type_is_assignable_from(Type a, Type b)
  bool IsGenericTypeDefinition(RuntimeType type)
  IntPtr GetGenericParameterInfo(RuntimeType type)
  bool IsSubclassOf(RuntimeType childType, RuntimeType baseType)
  bool is_subclass_of(IntPtr childType, IntPtr baseType)
  bool IsByRefLike(RuntimeType type)
  bool IsTypeDefinition(RuntimeType type)
  RuntimeType internal_from_name(string name, StackCrawlMark& stackMark, Assembly callerAssembly, bool throwOnError, bool ignoreCase, bool reflectionOnly)
  RuntimeType GetTypeByName(string typeName, bool throwOnError, bool ignoreCase, bool reflectionOnly, StackCrawlMark& stackMark, bool loadTypeFromPartialName)
  IntPtr[] CopyRuntimeTypeHandles(RuntimeTypeHandle[] inHandles, Int32& length)
--------------------------------------------------
Класс: System.TermInfoBooleans
Наследуется от: Enum
Поля:
  int value__
  TermInfoBooleans AutoLeftMargin
  TermInfoBooleans AutoRightMargin
  TermInfoBooleans NoEscCtlc
  TermInfoBooleans CeolStandoutGlitch
  TermInfoBooleans EatNewlineGlitch
  TermInfoBooleans EraseOverstrike
  TermInfoBooleans GenericType
  TermInfoBooleans HardCopy
  TermInfoBooleans HasMetaKey
  TermInfoBooleans HasStatusLine
  TermInfoBooleans InsertNullGlitch
  TermInfoBooleans MemoryAbove
  TermInfoBooleans MemoryBelow
  TermInfoBooleans MoveInsertMode
  TermInfoBooleans MoveStandoutMode
  TermInfoBooleans OverStrike
  TermInfoBooleans StatusLineEscOk
  TermInfoBooleans DestTabsMagicSmso
  TermInfoBooleans TildeGlitch
  TermInfoBooleans TransparentUnderline
  TermInfoBooleans XonXoff
  TermInfoBooleans NeedsXonXoff
  TermInfoBooleans PrtrSilent
  TermInfoBooleans HardCursor
  TermInfoBooleans NonRevRmcup
  TermInfoBooleans NoPadChar
  TermInfoBooleans NonDestScrollRegion
  TermInfoBooleans CanChange
  TermInfoBooleans BackColorErase
  TermInfoBooleans HueLightnessSaturation
  TermInfoBooleans ColAddrGlitch
  TermInfoBooleans CrCancelsMicroMode
  TermInfoBooleans HasPrintWheel
  TermInfoBooleans RowAddrGlitch
  TermInfoBooleans SemiAutoRightMargin
  TermInfoBooleans CpiChangesRes
  TermInfoBooleans LpiChangesRes
  TermInfoBooleans Last
Свойства:
Методы:
--------------------------------------------------
Класс: System.TermInfoDriver
Наследуется от: object
Поля:
  Int32* native_terminal_size
  int terminal_size
  String[] locations
  TermInfoReader reader
  int cursorLeft
  int cursorTop
  string title
  string titleFormat
  bool cursorVisible
  string csrVisible
  string csrInvisible
  string clear
  string bell
  string term
  StreamReader stdin
  CStreamWriter stdout
  int windowWidth
  int windowHeight
  int bufferHeight
  int bufferWidth
  Char[] buffer
  int readpos
  int writepos
  string keypadXmit
  string keypadLocal
  bool controlCAsInput
  bool inited
  object initLock
  bool initKeys
  string origPair
  string origColors
  string cursorAddress
  ConsoleColor fgcolor
  ConsoleColor bgcolor
  string setfgcolor
  string setbgcolor
  int maxColors
  bool noGetPosition
  Hashtable keymap
  ByteMatcher rootmap
  int rl_startx
  int rl_starty
  Byte[] control_characters
  Int32[] _consoleColorToAnsiCode
  Char[] echobuf
  int echon
Свойства:
  bool Initialized
  ConsoleColor BackgroundColor
  ConsoleColor ForegroundColor
  int BufferHeight
  int BufferWidth
  bool CapsLock
  int CursorLeft
  int CursorTop
  bool CursorVisible
  int CursorSize
  bool KeyAvailable
  int LargestWindowHeight
  int LargestWindowWidth
  bool NumberLock
  string Title
  bool TreatControlCAsInput
  int WindowHeight
  int WindowLeft
  int WindowTop
  int WindowWidth
Методы:
  string TryTermInfoDir(string dir, string term)
  string SearchTerminfo(string term)
  void WriteConsole(string str)
  void .ctor()
  void .ctor(string term)
  bool get_Initialized()
  void Init()
  void IncrementX()
  void WriteSpecialKey(ConsoleKeyInfo key)
  void WriteSpecialKey(char c)
  bool IsSpecialKey(ConsoleKeyInfo key)
  bool IsSpecialKey(char c)
  void ChangeColor(string format, ConsoleColor color)
  ConsoleColor get_BackgroundColor()
  void set_BackgroundColor(ConsoleColor value)
  ConsoleColor get_ForegroundColor()
  void set_ForegroundColor(ConsoleColor value)
  void GetCursorPosition()
  int get_BufferHeight()
  void set_BufferHeight(int value)
  int get_BufferWidth()
  void set_BufferWidth(int value)
  bool get_CapsLock()
  int get_CursorLeft()
  void set_CursorLeft(int value)
  int get_CursorTop()
  void set_CursorTop(int value)
  bool get_CursorVisible()
  void set_CursorVisible(bool value)
  int get_CursorSize()
  void set_CursorSize(int value)
  bool get_KeyAvailable()
  int get_LargestWindowHeight()
  int get_LargestWindowWidth()
  bool get_NumberLock()
  string get_Title()
  void set_Title(string value)
  bool get_TreatControlCAsInput()
  void set_TreatControlCAsInput(bool value)
  void CheckWindowDimensions()
  int get_WindowHeight()
  void set_WindowHeight(int value)
  int get_WindowLeft()
  void set_WindowLeft(int value)
  int get_WindowTop()
  void set_WindowTop(int value)
  int get_WindowWidth()
  void set_WindowWidth(int value)
  void Clear()
  void Beep(int frequency, int duration)
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
  void AddToBuffer(int b)
  void AdjustBuffer()
  ConsoleKeyInfo CreateKeyInfoFromInt(int n, bool alt)
  object GetKeyFromBuffer(bool cooked)
  ConsoleKeyInfo ReadKeyInternal(Boolean& fresh)
  bool InputPending()
  void QueueEcho(char c)
  void Echo(ConsoleKeyInfo key)
  void EchoFlush()
  int Read(Char[] dest, int index, int count)
  ConsoleKeyInfo ReadKey(bool intercept)
  string ReadLine()
  string ReadToEnd()
  string ReadUntilConditionInternal(bool haltOnNewLine)
  void ResetColor()
  void SetBufferSize(int width, int height)
  void SetCursorPosition(int left, int top)
  void SetWindowPosition(int left, int top)
  void SetWindowSize(int width, int height)
  void CreateKeyMap()
  void InitKeys()
  void AddStringMapping(TermInfoStrings s)
  void .cctor()
--------------------------------------------------
Класс: System.ParameterizedStrings
Наследуется от: object
Поля:
  LowLevelStack _cachedStack
Свойства:
Методы:
  string Evaluate(string format, FormatParam[] args)
  string EvaluateInternal(string format, Int32& pos, FormatParam[] args, LowLevelStack stack, FormatParam[]& dynamicVars, FormatParam[]& staticVars)
  bool AsBool(int i)
  int AsInt(bool b)
  string StringFromAsciiBytes(Byte[] buffer, int offset, int length)
  int snprintf(Byte* str, IntPtr size, string format, string arg1)
  int snprintf(Byte* str, IntPtr size, string format, int arg1)
  string FormatPrintF(string format, object arg)
  FormatParam[] GetDynamicOrStaticVariables(char c, FormatParam[]& dynamicVars, FormatParam[]& staticVars, Int32& index)
--------------------------------------------------
Класс: System.ByteMatcher
Наследуется от: object
Поля:
  Hashtable map
  Hashtable starts
Свойства:
Методы:
  void AddMapping(TermInfoStrings key, Byte[] val)
  void Sort()
  bool StartsWith(int c)
  TermInfoStrings Match(Char[] buffer, int offset, int length, Int32& used)
  void .ctor()
--------------------------------------------------
Класс: System.TermInfoNumbers
Наследуется от: Enum
Поля:
  int value__
  TermInfoNumbers Columns
  TermInfoNumbers InitTabs
  TermInfoNumbers Lines
  TermInfoNumbers LinesOfMemory
  TermInfoNumbers MagicCookieGlitch
  TermInfoNumbers PaddingBaudRate
  TermInfoNumbers VirtualTerminal
  TermInfoNumbers WidthStatusLine
  TermInfoNumbers NumLabels
  TermInfoNumbers LabelHeight
  TermInfoNumbers LabelWidth
  TermInfoNumbers MaxAttributes
  TermInfoNumbers MaximumWindows
  TermInfoNumbers MaxColors
  TermInfoNumbers MaxPairs
  TermInfoNumbers NoColorVideo
  TermInfoNumbers BufferCapacity
  TermInfoNumbers DotVertSpacing
  TermInfoNumbers DotHorzSpacing
  TermInfoNumbers MaxMicroAddress
  TermInfoNumbers MaxMicroJump
  TermInfoNumbers MicroColSize
  TermInfoNumbers MicroLineSize
  TermInfoNumbers NumberOfPins
  TermInfoNumbers OutputResChar
  TermInfoNumbers OutputResLine
  TermInfoNumbers OutputResHorzInch
  TermInfoNumbers OutputResVertInch
  TermInfoNumbers PrintRate
  TermInfoNumbers WideCharSize
  TermInfoNumbers Buttons
  TermInfoNumbers BitImageEntwining
  TermInfoNumbers BitImageType
  TermInfoNumbers Last
Свойства:
Методы:
--------------------------------------------------
Класс: System.TermInfoReader
Наследуется от: object
Поля:
  int boolSize
  int numSize
  int strOffsets
  Byte[] buffer
  int booleansOffset
  int intOffset
Свойства:
Методы:
  void .ctor(string term, string filename)
  void .ctor(string term, Byte[] buffer)
  void DetermineVersion(short magic)
  void ReadHeader(Byte[] buffer, Int32& position)
  void ReadNames(Byte[] buffer, Int32& position)
  bool Get(TermInfoBooleans boolean)
  int Get(TermInfoNumbers number)
  string Get(TermInfoStrings tstr)
  Byte[] GetStringBytes(TermInfoStrings tstr)
  short GetInt16(Byte[] buffer, int offset)
  string GetString(Byte[] buffer, int offset)
  Byte[] GetStringBytes(Byte[] buffer, int offset)
  string Escape(string s)
--------------------------------------------------
Класс: System.TermInfoStrings
Наследуется от: Enum
Поля:
  int value__
  TermInfoStrings BackTab
  TermInfoStrings Bell
  TermInfoStrings CarriageReturn
  TermInfoStrings ChangeScrollRegion
  TermInfoStrings ClearAllTabs
  TermInfoStrings ClearScreen
  TermInfoStrings ClrEol
  TermInfoStrings ClrEos
  TermInfoStrings ColumnAddress
  TermInfoStrings CommandCharacter
  TermInfoStrings CursorAddress
  TermInfoStrings CursorDown
  TermInfoStrings CursorHome
  TermInfoStrings CursorInvisible
  TermInfoStrings CursorLeft
  TermInfoStrings CursorMemAddress
  TermInfoStrings CursorNormal
  TermInfoStrings CursorRight
  TermInfoStrings CursorToLl
  TermInfoStrings CursorUp
  TermInfoStrings CursorVisible
  TermInfoStrings DeleteCharacter
  TermInfoStrings DeleteLine
  TermInfoStrings DisStatusLine
  TermInfoStrings DownHalfLine
  TermInfoStrings EnterAltCharsetMode
  TermInfoStrings EnterBlinkMode
  TermInfoStrings EnterBoldMode
  TermInfoStrings EnterCaMode
  TermInfoStrings EnterDeleteMode
  TermInfoStrings EnterDimMode
  TermInfoStrings EnterInsertMode
  TermInfoStrings EnterSecureMode
  TermInfoStrings EnterProtectedMode
  TermInfoStrings EnterReverseMode
  TermInfoStrings EnterStandoutMode
  TermInfoStrings EnterUnderlineMode
  TermInfoStrings EraseChars
  TermInfoStrings ExitAltCharsetMode
  TermInfoStrings ExitAttributeMode
  TermInfoStrings ExitCaMode
  TermInfoStrings ExitDeleteMode
  TermInfoStrings ExitInsertMode
  TermInfoStrings ExitStandoutMode
  TermInfoStrings ExitUnderlineMode
  TermInfoStrings FlashScreen
  TermInfoStrings FormFeed
  TermInfoStrings FromStatusLine
  TermInfoStrings Init1string
  TermInfoStrings Init2string
  TermInfoStrings Init3string
  TermInfoStrings InitFile
  TermInfoStrings InsertCharacter
  TermInfoStrings InsertLine
  TermInfoStrings InsertPadding
  TermInfoStrings KeyBackspace
  TermInfoStrings KeyCatab
  TermInfoStrings KeyClear
  TermInfoStrings KeyCtab
  TermInfoStrings KeyDc
  TermInfoStrings KeyDl
  TermInfoStrings KeyDown
  TermInfoStrings KeyEic
  TermInfoStrings KeyEol
  TermInfoStrings KeyEos
  TermInfoStrings KeyF0
  TermInfoStrings KeyF1
  TermInfoStrings KeyF10
  TermInfoStrings KeyF2
  TermInfoStrings KeyF3
  TermInfoStrings KeyF4
  TermInfoStrings KeyF5
  TermInfoStrings KeyF6
  TermInfoStrings KeyF7
  TermInfoStrings KeyF8
  TermInfoStrings KeyF9
  TermInfoStrings KeyHome
  TermInfoStrings KeyIc
  TermInfoStrings KeyIl
  TermInfoStrings KeyLeft
  TermInfoStrings KeyLl
  TermInfoStrings KeyNpage
  TermInfoStrings KeyPpage
  TermInfoStrings KeyRight
  TermInfoStrings KeySf
  TermInfoStrings KeySr
  TermInfoStrings KeyStab
  TermInfoStrings KeyUp
  TermInfoStrings KeypadLocal
  TermInfoStrings KeypadXmit
  TermInfoStrings LabF0
  TermInfoStrings LabF1
  TermInfoStrings LabF10
  TermInfoStrings LabF2
  TermInfoStrings LabF3
  TermInfoStrings LabF4
  TermInfoStrings LabF5
  TermInfoStrings LabF6
  TermInfoStrings LabF7
  TermInfoStrings LabF8
  TermInfoStrings LabF9
  TermInfoStrings MetaOff
  TermInfoStrings MetaOn
  TermInfoStrings Newline
  TermInfoStrings PadChar
  TermInfoStrings ParmDch
  TermInfoStrings ParmDeleteLine
  TermInfoStrings ParmDownCursor
  TermInfoStrings ParmIch
  TermInfoStrings ParmIndex
  TermInfoStrings ParmInsertLine
  TermInfoStrings ParmLeftCursor
  TermInfoStrings ParmRightCursor
  TermInfoStrings ParmRindex
  TermInfoStrings ParmUpCursor
  TermInfoStrings PkeyKey
  TermInfoStrings PkeyLocal
  TermInfoStrings PkeyXmit
  TermInfoStrings PrintScreen
  TermInfoStrings PrtrOff
  TermInfoStrings PrtrOn
  TermInfoStrings RepeatChar
  TermInfoStrings Reset1string
  TermInfoStrings Reset2string
  TermInfoStrings Reset3string
  TermInfoStrings ResetFile
  TermInfoStrings RestoreCursor
  TermInfoStrings RowAddress
  TermInfoStrings SaveCursor
  TermInfoStrings ScrollForward
  TermInfoStrings ScrollReverse
  TermInfoStrings SetAttributes
  TermInfoStrings SetTab
  TermInfoStrings SetWindow
  TermInfoStrings Tab
  TermInfoStrings ToStatusLine
  TermInfoStrings UnderlineChar
  TermInfoStrings UpHalfLine
  TermInfoStrings InitProg
  TermInfoStrings KeyA1
  TermInfoStrings KeyA3
  TermInfoStrings KeyB2
  TermInfoStrings KeyC1
  TermInfoStrings KeyC3
  TermInfoStrings PrtrNon
  TermInfoStrings CharPadding
  TermInfoStrings AcsChars
  TermInfoStrings PlabNorm
  TermInfoStrings KeyBtab
  TermInfoStrings EnterXonMode
  TermInfoStrings ExitXonMode
  TermInfoStrings EnterAmMode
  TermInfoStrings ExitAmMode
  TermInfoStrings XonCharacter
  TermInfoStrings XoffCharacter
  TermInfoStrings EnaAcs
  TermInfoStrings LabelOn
  TermInfoStrings LabelOff
  TermInfoStrings KeyBeg
  TermInfoStrings KeyCancel
  TermInfoStrings KeyClose
  TermInfoStrings KeyCommand
  TermInfoStrings KeyCopy
  TermInfoStrings KeyCreate
  TermInfoStrings KeyEnd
  TermInfoStrings KeyEnter
  TermInfoStrings KeyExit
  TermInfoStrings KeyFind
  TermInfoStrings KeyHelp
  TermInfoStrings KeyMark
  TermInfoStrings KeyMessage
  TermInfoStrings KeyMove
  TermInfoStrings KeyNext
  TermInfoStrings KeyOpen
  TermInfoStrings KeyOptions
  TermInfoStrings KeyPrevious
  TermInfoStrings KeyPrint
  TermInfoStrings KeyRedo
  TermInfoStrings KeyReference
  TermInfoStrings KeyRefresh
  TermInfoStrings KeyReplace
  TermInfoStrings KeyRestart
  TermInfoStrings KeyResume
  TermInfoStrings KeySave
  TermInfoStrings KeySuspend
  TermInfoStrings KeyUndo
  TermInfoStrings KeySbeg
  TermInfoStrings KeyScancel
  TermInfoStrings KeyScommand
  TermInfoStrings KeyScopy
  TermInfoStrings KeyScreate
  TermInfoStrings KeySdc
  TermInfoStrings KeySdl
  TermInfoStrings KeySelect
  TermInfoStrings KeySend
  TermInfoStrings KeySeol
  TermInfoStrings KeySexit
  TermInfoStrings KeySfind
  TermInfoStrings KeyShelp
  TermInfoStrings KeyShome
  TermInfoStrings KeySic
  TermInfoStrings KeySleft
  TermInfoStrings KeySmessage
  TermInfoStrings KeySmove
  TermInfoStrings KeySnext
  TermInfoStrings KeySoptions
  TermInfoStrings KeySprevious
  TermInfoStrings KeySprint
  TermInfoStrings KeySredo
  TermInfoStrings KeySreplace
  TermInfoStrings KeySright
  TermInfoStrings KeySrsume
  TermInfoStrings KeySsave
  TermInfoStrings KeySsuspend
  TermInfoStrings KeySundo
  TermInfoStrings ReqForInput
  TermInfoStrings KeyF11
  TermInfoStrings KeyF12
  TermInfoStrings KeyF13
  TermInfoStrings KeyF14
  TermInfoStrings KeyF15
  TermInfoStrings KeyF16
  TermInfoStrings KeyF17
  TermInfoStrings KeyF18
  TermInfoStrings KeyF19
  TermInfoStrings KeyF20
  TermInfoStrings KeyF21
  TermInfoStrings KeyF22
  TermInfoStrings KeyF23
  TermInfoStrings KeyF24
  TermInfoStrings KeyF25
  TermInfoStrings KeyF26
  TermInfoStrings KeyF27
  TermInfoStrings KeyF28
  TermInfoStrings KeyF29
  TermInfoStrings KeyF30
  TermInfoStrings KeyF31
  TermInfoStrings KeyF32
  TermInfoStrings KeyF33
  TermInfoStrings KeyF34
  TermInfoStrings KeyF35
  TermInfoStrings KeyF36
  TermInfoStrings KeyF37
  TermInfoStrings KeyF38
  TermInfoStrings KeyF39
  TermInfoStrings KeyF40
  TermInfoStrings KeyF41
  TermInfoStrings KeyF42
  TermInfoStrings KeyF43
  TermInfoStrings KeyF44
  TermInfoStrings KeyF45
  TermInfoStrings KeyF46
  TermInfoStrings KeyF47
  TermInfoStrings KeyF48
  TermInfoStrings KeyF49
  TermInfoStrings KeyF50
  TermInfoStrings KeyF51
  TermInfoStrings KeyF52
  TermInfoStrings KeyF53
  TermInfoStrings KeyF54
  TermInfoStrings KeyF55
  TermInfoStrings KeyF56
  TermInfoStrings KeyF57
  TermInfoStrings KeyF58
  TermInfoStrings KeyF59
  TermInfoStrings KeyF60
  TermInfoStrings KeyF61
  TermInfoStrings KeyF62
  TermInfoStrings KeyF63
  TermInfoStrings ClrBol
  TermInfoStrings ClearMargins
  TermInfoStrings SetLeftMargin
  TermInfoStrings SetRightMargin
  TermInfoStrings LabelFormat
  TermInfoStrings SetClock
  TermInfoStrings DisplayClock
  TermInfoStrings RemoveClock
  TermInfoStrings CreateWindow
  TermInfoStrings GotoWindow
  TermInfoStrings Hangup
  TermInfoStrings DialPhone
  TermInfoStrings QuickDial
  TermInfoStrings Tone
  TermInfoStrings Pulse
  TermInfoStrings FlashHook
  TermInfoStrings FixedPause
  TermInfoStrings WaitTone
  TermInfoStrings User0
  TermInfoStrings User1
  TermInfoStrings User2
  TermInfoStrings User3
  TermInfoStrings User4
  TermInfoStrings User5
  TermInfoStrings User6
  TermInfoStrings User7
  TermInfoStrings User8
  TermInfoStrings User9
  TermInfoStrings OrigPair
  TermInfoStrings OrigColors
  TermInfoStrings InitializeColor
  TermInfoStrings InitializePair
  TermInfoStrings SetColorPair
  TermInfoStrings SetForeground
  TermInfoStrings SetBackground
  TermInfoStrings ChangeCharPitch
  TermInfoStrings ChangeLinePitch
  TermInfoStrings ChangeResHorz
  TermInfoStrings ChangeResVert
  TermInfoStrings DefineChar
  TermInfoStrings EnterDoublewideMode
  TermInfoStrings EnterDraftQuality
  TermInfoStrings EnterItalicsMode
  TermInfoStrings EnterLeftwardMode
  TermInfoStrings EnterMicroMode
  TermInfoStrings EnterNearLetterQuality
  TermInfoStrings EnterNormalQuality
  TermInfoStrings EnterShadowMode
  TermInfoStrings EnterSubscriptMode
  TermInfoStrings EnterSuperscriptMode
  TermInfoStrings EnterUpwardMode
  TermInfoStrings ExitDoublewideMode
  TermInfoStrings ExitItalicsMode
  TermInfoStrings ExitLeftwardMode
  TermInfoStrings ExitMicroMode
  TermInfoStrings ExitShadowMode
  TermInfoStrings ExitSubscriptMode
  TermInfoStrings ExitSuperscriptMode
  TermInfoStrings ExitUpwardMode
  TermInfoStrings MicroColumnAddress
  TermInfoStrings MicroDown
  TermInfoStrings MicroLeft
  TermInfoStrings MicroRight
  TermInfoStrings MicroRowAddress
  TermInfoStrings MicroUp
  TermInfoStrings OrderOfPins
  TermInfoStrings ParmDownMicro
  TermInfoStrings ParmLeftMicro
  TermInfoStrings ParmRightMicro
  TermInfoStrings ParmUpMicro
  TermInfoStrings SelectCharSet
  TermInfoStrings SetBottomMargin
  TermInfoStrings SetBottomMarginParm
  TermInfoStrings SetLeftMarginParm
  TermInfoStrings SetRightMarginParm
  TermInfoStrings SetTopMargin
  TermInfoStrings SetTopMarginParm
  TermInfoStrings StartBitImage
  TermInfoStrings StartCharSetDef
  TermInfoStrings StopBitImage
  TermInfoStrings StopCharSetDef
  TermInfoStrings SubscriptCharacters
  TermInfoStrings SuperscriptCharacters
  TermInfoStrings TheseCauseCr
  TermInfoStrings ZeroMotion
  TermInfoStrings CharSetNames
  TermInfoStrings KeyMouse
  TermInfoStrings MouseInfo
  TermInfoStrings ReqMousePos
  TermInfoStrings GetMouse
  TermInfoStrings SetAForeground
  TermInfoStrings SetABackground
  TermInfoStrings PkeyPlab
  TermInfoStrings DeviceType
  TermInfoStrings CodeSetInit
  TermInfoStrings Set0DesSeq
  TermInfoStrings Set1DesSeq
  TermInfoStrings Set2DesSeq
  TermInfoStrings Set3DesSeq
  TermInfoStrings SetLrMargin
  TermInfoStrings SetTbMargin
  TermInfoStrings BitImageRepeat
  TermInfoStrings BitImageNewline
  TermInfoStrings BitImageCarriageReturn
  TermInfoStrings ColorNames
  TermInfoStrings DefineBitImageRegion
  TermInfoStrings EndBitImageRegion
  TermInfoStrings SetColorBand
  TermInfoStrings SetPageLength
  TermInfoStrings DisplayPcChar
  TermInfoStrings EnterPcCharsetMode
  TermInfoStrings ExitPcCharsetMode
  TermInfoStrings EnterScancodeMode
  TermInfoStrings ExitScancodeMode
  TermInfoStrings PcTermOptions
  TermInfoStrings ScancodeEscape
  TermInfoStrings AltScancodeEsc
  TermInfoStrings EnterHorizontalHlMode
  TermInfoStrings EnterLeftHlMode
  TermInfoStrings EnterLowHlMode
  TermInfoStrings EnterRightHlMode
  TermInfoStrings EnterTopHlMode
  TermInfoStrings EnterVerticalHlMode
  TermInfoStrings SetAAttributes
  TermInfoStrings SetPglenInch
  TermInfoStrings Last
Свойства:
Методы:
--------------------------------------------------
Класс: System.TypeName
Поля:
Свойства:
  string DisplayName
Методы:
  string get_DisplayName()
  TypeName NestedName(TypeIdentifier innerName)
--------------------------------------------------
Класс: System.TypeIdentifier
Поля:
Свойства:
  string InternalName
Методы:
  string get_InternalName()
--------------------------------------------------
Класс: System.TypeNames
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeName FromDisplay(string displayName)
  void .ctor()
--------------------------------------------------
Класс: System.TypeIdentifiers
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeIdentifier FromDisplay(string displayName)
  TypeIdentifier FromInternal(string internalName)
  TypeIdentifier FromInternal(string internalNameSpace, TypeIdentifier typeName)
  TypeIdentifier WithoutEscape(string simpleName)
  void .ctor()
--------------------------------------------------
Класс: System.ModifierSpec
Поля:
Свойства:
Методы:
  Type Resolve(Type type)
  StringBuilder Append(StringBuilder sb)
--------------------------------------------------
Класс: System.ArraySpec
Наследуется от: object
Поля:
  int dimensions
  bool bound
Свойства:
  int Rank
  bool IsBound
Методы:
  void .ctor(int dimensions, bool bound)
  Type Resolve(Type type)
  StringBuilder Append(StringBuilder sb)
  string ToString()
  int get_Rank()
  bool get_IsBound()
--------------------------------------------------
Класс: System.PointerSpec
Наследуется от: object
Поля:
  int pointer_level
Свойства:
Методы:
  void .ctor(int pointer_level)
  Type Resolve(Type type)
  StringBuilder Append(StringBuilder sb)
  string ToString()
--------------------------------------------------
Класс: System.TypeSpec
Наследуется от: object
Поля:
  TypeIdentifier name
  string assembly_name
  List`1<TypeIdentifier> nested
  List`1<TypeSpec> generic_params
  List`1<ModifierSpec> modifier_spec
  bool is_byref
  string display_fullname
Свойства:
  bool HasModifiers
  bool IsNested
  bool IsByRef
  TypeName Name
  IEnumerable`1<TypeName> Nested
  IEnumerable`1<ModifierSpec> Modifiers
  string DisplayFullName
  TypeName TypeName
Методы:
  bool get_HasModifiers()
  bool get_IsNested()
  bool get_IsByRef()
  TypeName get_Name()
  IEnumerable`1<TypeName> get_Nested()
  IEnumerable`1<ModifierSpec> get_Modifiers()
  string GetDisplayFullName(DisplayNameFormat flags)
  string ModifierString()
  StringBuilder GetModifierString(StringBuilder sb)
  string get_DisplayFullName()
  TypeSpec Parse(string typeName)
  string EscapeDisplayName(string internalName)
  string UnescapeInternalName(string displayName)
  bool NeedsEscaping(string internalName)
  Type Resolve(Func`2<AssemblyName, Assembly> assemblyResolver, Func`4<Assembly, string, bool, Type> typeResolver, bool throwOnError, bool ignoreCase, StackCrawlMark& stackMark)
  void AddName(string type_name)
  void AddModifier(ModifierSpec md)
  void SkipSpace(string name, Int32& pos)
  void BoundCheck(int idx, string s)
  TypeIdentifier ParsedTypeIdentifier(string displayName)
  TypeSpec Parse(string name, Int32& p, bool is_recurse, bool allow_aqn)
  TypeName TypeNameWithoutModifiers()
  TypeName get_TypeName()
  void .ctor()
--------------------------------------------------
Класс: System.UIntPtr
Наследуется от: ValueType
Поля:
  UIntPtr Zero
  Void* _pointer
Свойства:
  int Size
Методы:
  void .ctor(ulong value)
  void .ctor(UInt32 value)
  void .ctor(Void* value)
  bool Equals(object obj)
  int GetHashCode()
  UInt32 ToUInt32()
  ulong ToUInt64()
  Void* ToPointer()
  string ToString()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  bool op_Equality(UIntPtr value1, UIntPtr value2)
  bool op_Inequality(UIntPtr value1, UIntPtr value2)
  ulong op_Explicit(UIntPtr value)
  UInt32 op_Explicit(UIntPtr value)
  UIntPtr op_Explicit(ulong value)
  UIntPtr op_Explicit(Void* value)
  Void* op_Explicit(UIntPtr value)
  UIntPtr op_Explicit(UInt32 value)
  int get_Size()
  UIntPtr Add(UIntPtr pointer, int offset)
  UIntPtr Subtract(UIntPtr pointer, int offset)
  UIntPtr op_Addition(UIntPtr pointer, int offset)
  UIntPtr op_Subtraction(UIntPtr pointer, int offset)
  bool System.IEquatable<System.UIntPtr>.Equals(UIntPtr other)
  void .cctor()
--------------------------------------------------
Класс: System.ValueType
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  bool InternalEquals(object o1, object o2, Object[]& fields)
  bool DefaultEquals(object o1, object o2)
  bool Equals(object obj)
  int InternalGetHashCode(object o, Object[]& fields)
  int GetHashCode()
  int GetHashCodeOfPtr(IntPtr ptr)
  string ToString()
--------------------------------------------------
Класс: System.Variant
Наследуется от: ValueType
Поля:
  short vt
  ushort wReserved1
  ushort wReserved2
  ushort wReserved3
  long llVal
  int lVal
  byte bVal
  short iVal
  float fltVal
  double dblVal
  short boolVal
  IntPtr bstrVal
  sbyte cVal
  ushort uiVal
  UInt32 ulVal
  ulong ullVal
  int intVal
  UInt32 uintVal
  IntPtr pdispVal
  BRECORD bRecord
Свойства:
Методы:
  void SetValue(object obj)
  object GetValueAt(int vt, IntPtr addr)
  object GetValue()
  void Clear()
--------------------------------------------------
Класс: System.BRECORD
Наследуется от: ValueType
Поля:
  IntPtr pvRecord
  IntPtr pRecInfo
Свойства:
Методы:
--------------------------------------------------
Класс: System.WeakReference
Наследуется от: object
Поля:
  bool isLongReference
  GCHandle gcHandle
Свойства:
  bool IsAlive
  object Target
  bool TrackResurrection
Методы:
  void AllocateHandle(object target)
  void .ctor(object target)
  void .ctor(object target, bool trackResurrection)
  void .ctor(SerializationInfo info, StreamingContext context)
  bool get_IsAlive()
  object get_Target()
  void set_Target(object value)
  bool get_TrackResurrection()
  void Finalize()
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.WeakReference`1
Наследуется от: object
Поля:
  GCHandle handle
  bool trackResurrection
Свойства:
Методы:
  void .ctor(T target)
  void .ctor(T target, bool trackResurrection)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void SetTarget(T target)
  bool TryGetTarget(T& target)
  void Finalize()
--------------------------------------------------
Класс: System.ConsoleCursorInfo
Наследуется от: ValueType
Поля:
  int Size
  bool Visible
Свойства:
Методы:
--------------------------------------------------
Класс: System.InputRecord
Наследуется от: ValueType
Поля:
  short EventType
  bool KeyDown
  short RepeatCount
  short VirtualKeyCode
  short VirtualScanCode
  char Character
  int ControlKeyState
  int pad1
  bool pad2
Свойства:
Методы:
--------------------------------------------------
Класс: System.CharInfo
Наследуется от: ValueType
Поля:
  char Character
  short Attributes
Свойства:
Методы:
--------------------------------------------------
Класс: System.Coord
Наследуется от: ValueType
Поля:
  short X
  short Y
Свойства:
Методы:
  void .ctor(int x, int y)
--------------------------------------------------
Класс: System.SmallRect
Наследуется от: ValueType
Поля:
  short Left
  short Top
  short Right
  short Bottom
Свойства:
Методы:
  void .ctor(int left, int top, int right, int bottom)
--------------------------------------------------
Класс: System.ConsoleScreenBufferInfo
Наследуется от: ValueType
Поля:
  Coord Size
  Coord CursorPosition
  short Attribute
  SmallRect Window
  Coord MaxWindowSize
Свойства:
Методы:
--------------------------------------------------
Класс: System.Handles
Наследуется от: Enum
Поля:
  int value__
  Handles STD_INPUT
  Handles STD_OUTPUT
  Handles STD_ERROR
Свойства:
Методы:
--------------------------------------------------
Класс: System.WindowsConsoleDriver
Наследуется от: object
Поля:
  IntPtr inputHandle
  IntPtr outputHandle
  short defaultAttribute
Свойства:
  ConsoleColor BackgroundColor
  int BufferHeight
  int BufferWidth
  bool CapsLock
  int CursorLeft
  int CursorSize
  int CursorTop
  bool CursorVisible
  ConsoleColor ForegroundColor
  bool KeyAvailable
  bool Initialized
  int LargestWindowHeight
  int LargestWindowWidth
  bool NumberLock
  string Title
  bool TreatControlCAsInput
  int WindowHeight
  int WindowLeft
  int WindowTop
  int WindowWidth
Методы:
  void .ctor()
  ConsoleColor GetForeground(short attr)
  ConsoleColor GetBackground(short attr)
  short GetAttrForeground(int attr, ConsoleColor color)
  short GetAttrBackground(int attr, ConsoleColor color)
  ConsoleColor get_BackgroundColor()
  void set_BackgroundColor(ConsoleColor value)
  int get_BufferHeight()
  void set_BufferHeight(int value)
  int get_BufferWidth()
  void set_BufferWidth(int value)
  bool get_CapsLock()
  int get_CursorLeft()
  void set_CursorLeft(int value)
  int get_CursorSize()
  void set_CursorSize(int value)
  int get_CursorTop()
  void set_CursorTop(int value)
  bool get_CursorVisible()
  void set_CursorVisible(bool value)
  ConsoleColor get_ForegroundColor()
  void set_ForegroundColor(ConsoleColor value)
  bool get_KeyAvailable()
  bool get_Initialized()
  int get_LargestWindowHeight()
  int get_LargestWindowWidth()
  bool get_NumberLock()
  string get_Title()
  void set_Title(string value)
  bool get_TreatControlCAsInput()
  void set_TreatControlCAsInput(bool value)
  int get_WindowHeight()
  void set_WindowHeight(int value)
  int get_WindowLeft()
  void set_WindowLeft(int value)
  int get_WindowTop()
  void set_WindowTop(int value)
  int get_WindowWidth()
  void set_WindowWidth(int value)
  void Beep(int frequency, int duration)
  void Clear()
  void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor)
  void Init()
  string ReadLine()
  ConsoleKeyInfo ReadKey(bool intercept)
  void ResetColor()
  void SetBufferSize(int width, int height)
  void SetCursorPosition(int left, int top)
  void SetWindowPosition(int left, int top)
  void SetWindowSize(int width, int height)
  bool IsModifierKey(short virtualKeyCode)
  IntPtr GetStdHandle(Handles handle)
  void _Beep(int frequency, int duration)
  bool GetConsoleScreenBufferInfo(IntPtr handle, ConsoleScreenBufferInfo& info)
  bool FillConsoleOutputCharacter(IntPtr handle, char c, int size, Coord coord, Int32& written)
  bool FillConsoleOutputAttribute(IntPtr handle, short c, int size, Coord coord, Int32& written)
  bool SetConsoleCursorPosition(IntPtr handle, Coord coord)
  bool SetConsoleTextAttribute(IntPtr handle, short attribute)
  bool SetConsoleScreenBufferSize(IntPtr handle, Coord newSize)
  bool SetConsoleWindowInfo(IntPtr handle, bool absolute, SmallRect& rect)
  int GetConsoleTitle(StringBuilder sb, int size)
  bool SetConsoleTitle(string title)
  bool GetConsoleCursorInfo(IntPtr handle, ConsoleCursorInfo& info)
  bool SetConsoleCursorInfo(IntPtr handle, ConsoleCursorInfo& info)
  short GetKeyState(int virtKey)
  bool GetConsoleMode(IntPtr handle, Int32& mode)
  bool SetConsoleMode(IntPtr handle, int mode)
  bool PeekConsoleInput(IntPtr handle, InputRecord& record, int length, Int32& eventsRead)
  bool ReadConsoleInput(IntPtr handle, InputRecord& record, int length, Int32& nread)
  Coord GetLargestConsoleWindowSize(IntPtr handle)
  bool ReadConsoleOutput(IntPtr handle, Void* buffer, Coord bsize, Coord bpos, SmallRect& region)
  bool WriteConsoleOutput(IntPtr handle, CharInfo[] buffer, Coord bsize, Coord bpos, SmallRect& region)
--------------------------------------------------
Класс: System.__ComObject
Наследуется от: MarshalByRefObject
Поля:
  IntPtr iunknown
  IntPtr hash_table
  SynchronizationContext synchronization_context
  ComInteropProxy proxy
Свойства:
  IntPtr IUnknown
  IntPtr IDispatch
  Guid IID_IUnknown
  Guid IID_IDispatch
Методы:
  __ComObject CreateRCW(Type t)
  void ReleaseInterfaces()
  void Finalize()
  void .ctor()
  void .ctor(Type t)
  void .ctor(IntPtr pItf, ComInteropProxy p)
  void Initialize(IntPtr pUnk, ComInteropProxy p)
  void Initialize(Type t)
  IntPtr CreateIUnknown(Type t)
  void InitializeApartmentDetails()
  Guid GetCLSID(Type t)
  IntPtr GetInterfaceInternal(Type t, bool throwException)
  IntPtr GetInterface(Type t, bool throwException)
  IntPtr GetInterface(Type t)
  void CheckIUnknown()
  IntPtr get_IUnknown()
  IntPtr get_IDispatch()
  Guid get_IID_IUnknown()
  Guid get_IID_IDispatch()
  bool Equals(object obj)
  int GetHashCode()
  int CoCreateInstance(Guid rclsid, IntPtr pUnkOuter, UInt32 dwClsContext, Guid riid, IntPtr& pUnk)
  void <Finalize>b__6_0(object state)
--------------------------------------------------
Класс: System.Decimal
Наследуется от: ValueType
Поля:
  int SignMask
  int ScaleMask
  int ScaleShift
  decimal Zero
  decimal One
  decimal MinusOne
  decimal MaxValue
  decimal MinValue
  int flags
  int hi
  int lo
  int mid
  ulong ulomidLE
Свойства:
  UInt32 High
  UInt32 Low
  UInt32 Mid
  bool IsNegative
  int Scale
  ulong Low64
Методы:
  UInt32 get_High()
  UInt32 get_Low()
  UInt32 get_Mid()
  bool get_IsNegative()
  int get_Scale()
  ulong get_Low64()
  DecCalc& AsMutable(Decimal& d)
  UInt32 DecDivMod1E9(Decimal& value)
  void .ctor(int value)
  void .ctor(UInt32 value)
  void .ctor(long value)
  void .ctor(ulong value)
  void .ctor(float value)
  void .ctor(double value)
  decimal FromOACurrency(long cy)
  long ToOACurrency(decimal value)
  bool IsValid(int flags)
  void .ctor(Int32[] bits)
  void .ctor(int lo, int mid, int hi, bool isNegative, byte scale)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void .ctor(int lo, int mid, int hi, int flags)
  void .ctor(Decimal& d, int flags)
  decimal Abs(Decimal& d)
  decimal Add(decimal d1, decimal d2)
  decimal Ceiling(decimal d)
  int Compare(decimal d1, decimal d2)
  int CompareTo(object value)
  int CompareTo(decimal value)
  decimal Divide(decimal d1, decimal d2)
  bool Equals(object value)
  bool Equals(decimal value)
  int GetHashCode()
  bool Equals(decimal d1, decimal d2)
  decimal Floor(decimal d)
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider provider)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  decimal Parse(string s)
  decimal Parse(string s, NumberStyles style)
  decimal Parse(string s, IFormatProvider provider)
  decimal Parse(string s, NumberStyles style, IFormatProvider provider)
  decimal Parse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider)
  bool TryParse(string s, Decimal& result)
  bool TryParse(ReadOnlySpan`1<char> s, Decimal& result)
  bool TryParse(string s, NumberStyles style, IFormatProvider provider, Decimal& result)
  bool TryParse(ReadOnlySpan`1<char> s, NumberStyles style, IFormatProvider provider, Decimal& result)
  Int32[] GetBits(decimal d)
  void GetBytes(Decimal& d, Byte[] buffer)
  decimal ToDecimal(Byte[] buffer)
  Decimal& modreq(System.Runtime.InteropServices.InAttribute) Max(Decimal& d1, Decimal& d2)
  Decimal& modreq(System.Runtime.InteropServices.InAttribute) Min(Decimal& d1, Decimal& d2)
  decimal Remainder(decimal d1, decimal d2)
  decimal Multiply(decimal d1, decimal d2)
  decimal Negate(decimal d)
  decimal Round(decimal d)
  decimal Round(decimal d, int decimals)
  decimal Round(decimal d, MidpointRounding mode)
  decimal Round(decimal d, int decimals, MidpointRounding mode)
  decimal Round(Decimal& d, int decimals, MidpointRounding mode)
  int Sign(Decimal& d)
  decimal Subtract(decimal d1, decimal d2)
  byte ToByte(decimal value)
  sbyte ToSByte(decimal value)
  short ToInt16(decimal value)
  double ToDouble(decimal d)
  int ToInt32(decimal d)
  long ToInt64(decimal d)
  ushort ToUInt16(decimal value)
  UInt32 ToUInt32(decimal d)
  ulong ToUInt64(decimal d)
  float ToSingle(decimal d)
  decimal Truncate(decimal d)
  void Truncate(Decimal& d)
  decimal op_Implicit(byte value)
  decimal op_Implicit(sbyte value)
  decimal op_Implicit(short value)
  decimal op_Implicit(ushort value)
  decimal op_Implicit(char value)
  decimal op_Implicit(int value)
  decimal op_Implicit(UInt32 value)
  decimal op_Implicit(long value)
  decimal op_Implicit(ulong value)
  decimal op_Explicit(float value)
  decimal op_Explicit(double value)
  byte op_Explicit(decimal value)
  sbyte op_Explicit(decimal value)
  char op_Explicit(decimal value)
  short op_Explicit(decimal value)
  ushort op_Explicit(decimal value)
  int op_Explicit(decimal value)
  UInt32 op_Explicit(decimal value)
  long op_Explicit(decimal value)
  ulong op_Explicit(decimal value)
  float op_Explicit(decimal value)
  double op_Explicit(decimal value)
  decimal op_UnaryPlus(decimal d)
  decimal op_UnaryNegation(decimal d)
  decimal op_Increment(decimal d)
  decimal op_Decrement(decimal d)
  decimal op_Addition(decimal d1, decimal d2)
  decimal op_Subtraction(decimal d1, decimal d2)
  decimal op_Multiply(decimal d1, decimal d2)
  decimal op_Division(decimal d1, decimal d2)
  decimal op_Modulus(decimal d1, decimal d2)
  bool op_Equality(decimal d1, decimal d2)
  bool op_Inequality(decimal d1, decimal d2)
  bool op_LessThan(decimal d1, decimal d2)
  bool op_LessThanOrEqual(decimal d1, decimal d2)
  bool op_GreaterThan(decimal d1, decimal d2)
  bool op_GreaterThanOrEqual(decimal d1, decimal d2)
  TypeCode GetTypeCode()
  bool System.IConvertible.ToBoolean(IFormatProvider provider)
  char System.IConvertible.ToChar(IFormatProvider provider)
  sbyte System.IConvertible.ToSByte(IFormatProvider provider)
  byte System.IConvertible.ToByte(IFormatProvider provider)
  short System.IConvertible.ToInt16(IFormatProvider provider)
  ushort System.IConvertible.ToUInt16(IFormatProvider provider)
  int System.IConvertible.ToInt32(IFormatProvider provider)
  UInt32 System.IConvertible.ToUInt32(IFormatProvider provider)
  long System.IConvertible.ToInt64(IFormatProvider provider)
  ulong System.IConvertible.ToUInt64(IFormatProvider provider)
  float System.IConvertible.ToSingle(IFormatProvider provider)
  double System.IConvertible.ToDouble(IFormatProvider provider)
  decimal System.IConvertible.ToDecimal(IFormatProvider provider)
  DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
  object System.IConvertible.ToType(Type type, IFormatProvider provider)
  void .cctor()
--------------------------------------------------
Класс: System.Deployment.Internal.InternalActivationContextHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  object GetActivationContextData(ActivationContext appInfo)
  object GetApplicationComponentManifest(ActivationContext appInfo)
  Byte[] GetApplicationManifestBytes(ActivationContext appInfo)
  object GetDeploymentComponentManifest(ActivationContext appInfo)
  Byte[] GetDeploymentManifestBytes(ActivationContext appInfo)
  bool IsFirstRun(ActivationContext appInfo)
  void PrepareForExecution(ActivationContext appInfo)
--------------------------------------------------
Класс: System.Deployment.Internal.InternalApplicationIdentityHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  object GetInternalAppId(ApplicationIdentity id)
--------------------------------------------------
Класс: System.Threading.AbandonedMutexException
Наследуется от: SystemException
Поля:
  int _mutexIndex
  Mutex _mutex
Свойства:
  Mutex Mutex
  int MutexIndex
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(int location, WaitHandle handle)
  void .ctor(string message, int location, WaitHandle handle)
  void .ctor(string message, Exception inner, int location, WaitHandle handle)
  void .ctor(SerializationInfo info, StreamingContext context)
  void SetupException(int location, WaitHandle handle)
  Mutex get_Mutex()
  int get_MutexIndex()
--------------------------------------------------
Класс: System.Threading.ApartmentState
Наследуется от: Enum
Поля:
  int value__
  ApartmentState STA
  ApartmentState MTA
  ApartmentState Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.AsyncLocal`1
Наследуется от: object
Поля:
  Action`1<AsyncLocalValueChangedArgs`1<T>> m_valueChangedHandler
Свойства:
  T Value
Методы:
  void .ctor()
  void .ctor(Action`1<AsyncLocalValueChangedArgs`1<T>> valueChangedHandler)
  T get_Value()
  void set_Value(T value)
  void System.Threading.IAsyncLocal.OnValueChanged(object previousValueObj, object currentValueObj, bool contextChanged)
--------------------------------------------------
Класс: System.Threading.IAsyncLocal
Поля:
Свойства:
Методы:
  void OnValueChanged(object previousValue, object currentValue, bool contextChanged)
--------------------------------------------------
Класс: System.Threading.AsyncLocalValueChangedArgs`1
Наследуется от: ValueType
Поля:
  T <PreviousValue>k__BackingField
  T <CurrentValue>k__BackingField
  bool <ThreadContextChanged>k__BackingField
Свойства:
  T PreviousValue
  T CurrentValue
  bool ThreadContextChanged
Методы:
  T get_PreviousValue()
  T get_CurrentValue()
  bool get_ThreadContextChanged()
  void .ctor(T previousValue, T currentValue, bool contextChanged)
--------------------------------------------------
Класс: System.Threading.IAsyncLocalValueMap
Поля:
Свойства:
Методы:
  bool TryGetValue(IAsyncLocal key, Object& value)
  IAsyncLocalValueMap Set(IAsyncLocal key, object value)
--------------------------------------------------
Класс: System.Threading.AsyncLocalValueMap
Наследуется от: object
Поля:
  IAsyncLocalValueMap <Empty>k__BackingField
Свойства:
  IAsyncLocalValueMap Empty
Методы:
  IAsyncLocalValueMap get_Empty()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.AutoResetEvent
Наследуется от: EventWaitHandle
Поля:
Свойства:
Методы:
  void .ctor(bool initialState)
--------------------------------------------------
Класс: System.Threading.EventResetMode
Наследуется от: Enum
Поля:
  int value__
  EventResetMode AutoReset
  EventResetMode ManualReset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.LazyInitializer
Наследуется от: object
Поля:
Свойства:
Методы:
  T EnsureInitialized(T& target)
  T EnsureInitializedCore(T& target)
  T EnsureInitialized(T& target, Func`1<T> valueFactory)
  T EnsureInitializedCore(T& target, Func`1<T> valueFactory)
  T EnsureInitialized(T& target, Boolean& initialized, Object& syncLock)
  T EnsureInitializedCore(T& target, Boolean& initialized, Object& syncLock)
  T EnsureInitialized(T& target, Boolean& initialized, Object& syncLock, Func`1<T> valueFactory)
  T EnsureInitializedCore(T& target, Boolean& initialized, Object& syncLock, Func`1<T> valueFactory)
  T EnsureInitialized(T& target, Object& syncLock, Func`1<T> valueFactory)
  T EnsureInitializedCore(T& target, Object& syncLock, Func`1<T> valueFactory)
  object EnsureLockInitialized(Object& syncLock)
--------------------------------------------------
Класс: System.Threading.LazyThreadSafetyMode
Наследуется от: Enum
Поля:
  int value__
  LazyThreadSafetyMode None
  LazyThreadSafetyMode PublicationOnly
  LazyThreadSafetyMode ExecutionAndPublication
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.LockRecursionException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.ManualResetEvent
Наследуется от: EventWaitHandle
Поля:
Свойства:
Методы:
  void .ctor(bool initialState)
--------------------------------------------------
Класс: System.Threading.ParameterizedThreadStart
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object obj)
  IAsyncResult BeginInvoke(object obj, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.SemaphoreFullException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.SendOrPostCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object state)
  IAsyncResult BeginInvoke(object state, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.SynchronizationLockException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.ThreadPriority
Наследуется от: Enum
Поля:
  int value__
  ThreadPriority Lowest
  ThreadPriority BelowNormal
  ThreadPriority Normal
  ThreadPriority AboveNormal
  ThreadPriority Highest
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.ThreadStart
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.ThreadStartException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Exception reason)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.ThreadState
Наследуется от: Enum
Поля:
  int value__
  ThreadState Running
  ThreadState StopRequested
  ThreadState SuspendRequested
  ThreadState Background
  ThreadState Unstarted
  ThreadState Stopped
  ThreadState WaitSleepJoin
  ThreadState Suspended
  ThreadState AbortRequested
  ThreadState Aborted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.ThreadStateException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.Timeout
Наследуется от: object
Поля:
  TimeSpan InfiniteTimeSpan
  int Infinite
  UInt32 UnsignedInfinite
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Threading.WaitHandleCannotBeOpenedException
Наследуется от: ApplicationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.CountdownEvent
Наследуется от: object
Поля:
  int _initialCount
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _currentCount
  ManualResetEventSlim _event
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed
Свойства:
  int CurrentCount
  int InitialCount
  bool IsSet
  WaitHandle WaitHandle
Методы:
  void .ctor(int initialCount)
  int get_CurrentCount()
  int get_InitialCount()
  bool get_IsSet()
  WaitHandle get_WaitHandle()
  void Dispose()
  void Dispose(bool disposing)
  bool Signal()
  bool Signal(int signalCount)
  void AddCount()
  bool TryAddCount()
  void AddCount(int signalCount)
  bool TryAddCount(int signalCount)
  void Reset()
  void Reset(int count)
  void Wait()
  void Wait(CancellationToken cancellationToken)
  bool Wait(TimeSpan timeout)
  bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
  bool Wait(int millisecondsTimeout)
  bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.Threading.CancellationToken
Наследуется от: ValueType
Поля:
  CancellationTokenSource _source
  Action`1<object> s_actionToActionObjShunt
Свойства:
  CancellationToken None
  bool IsCancellationRequested
  bool CanBeCanceled
  WaitHandle WaitHandle
Методы:
  CancellationToken get_None()
  bool get_IsCancellationRequested()
  bool get_CanBeCanceled()
  WaitHandle get_WaitHandle()
  void .ctor(CancellationTokenSource source)
  void .ctor(bool canceled)
  CancellationTokenRegistration Register(Action callback)
  CancellationTokenRegistration Register(Action callback, bool useSynchronizationContext)
  CancellationTokenRegistration Register(Action`1<object> callback, object state)
  CancellationTokenRegistration Register(Action`1<object> callback, object state, bool useSynchronizationContext)
  CancellationTokenRegistration InternalRegisterWithoutEC(Action`1<object> callback, object state)
  CancellationTokenRegistration Register(Action`1<object> callback, object state, bool useSynchronizationContext, bool useExecutionContext)
  bool Equals(CancellationToken other)
  bool Equals(object other)
  int GetHashCode()
  bool op_Equality(CancellationToken left, CancellationToken right)
  bool op_Inequality(CancellationToken left, CancellationToken right)
  void ThrowIfCancellationRequested()
  void ThrowOperationCanceledException()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.IDeferredDisposable
Поля:
Свойства:
Методы:
  void OnFinalRelease(bool disposed)
--------------------------------------------------
Класс: System.Threading.DeferredDisposableLifetime`1
Наследуется от: ValueType
Поля:
  int _count
Свойства:
Методы:
  void .cctor()
  bool AddRef(T obj)
  void Release(T obj)
  void Dispose(T obj)
--------------------------------------------------
Класс: System.Threading.ManualResetEventSlim
Наследуется от: object
Поля:
  int DEFAULT_SPIN_SP
  Object modreq(System.Runtime.CompilerServices.IsVolatile) m_lock
  ManualResetEvent modreq(System.Runtime.CompilerServices.IsVolatile) m_eventObj
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_combinedState
  int SignalledState_BitMask
  int SignalledState_ShiftCount
  int Dispose_BitMask
  int SpinCountState_BitMask
  int SpinCountState_ShiftCount
  int SpinCountState_MaxValue
  int NumWaitersState_BitMask
  int NumWaitersState_ShiftCount
  int NumWaitersState_MaxValue
  Action`1<object> s_cancellationTokenCallback
Свойства:
  WaitHandle WaitHandle
  bool IsSet
  int SpinCount
  int Waiters
Методы:
  WaitHandle get_WaitHandle()
  bool get_IsSet()
  void set_IsSet(bool value)
  int get_SpinCount()
  void set_SpinCount(int value)
  int get_Waiters()
  void set_Waiters(int value)
  void .ctor()
  void .ctor(bool initialState)
  void .ctor(bool initialState, int spinCount)
  void Initialize(bool initialState, int spinCount)
  void EnsureLockObjectCreated()
  bool LazyInitializeEvent()
  void Set()
  void Set(bool duringCancellation)
  void Reset()
  void Wait()
  void Wait(CancellationToken cancellationToken)
  bool Wait(TimeSpan timeout)
  bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
  bool Wait(int millisecondsTimeout)
  bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
  void Dispose()
  void Dispose(bool disposing)
  void ThrowIfDisposed()
  void CancellationTokenCallback(object obj)
  void UpdateStateAtomically(int newBits, int updateBitsMask)
  int ExtractStatePortionAndShiftRight(int state, int mask, int rightBitShiftCount)
  int ExtractStatePortion(int state, int mask)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.NativeOverlapped
Наследуется от: ValueType
Поля:
  IntPtr InternalLow
  IntPtr InternalHigh
  int OffsetLow
  int OffsetHigh
  IntPtr EventHandle
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.SpinWait
Наследуется от: ValueType
Поля:
  int YieldThreshold
  int Sleep0EveryHowManyYields
  int DefaultSleep1Threshold
  int SpinCountforSpinBeforeWait
  int Sleep1ThresholdForLongSpinBeforeWait
  int _count
Свойства:
  int Count
  bool NextSpinWillYield
Методы:
  int get_Count()
  void set_Count(int value)
  bool get_NextSpinWillYield()
  void SpinOnce()
  void SpinOnce(int sleep1Threshold)
  void SpinOnceCore(int sleep1Threshold)
  void Reset()
  void SpinUntil(Func`1<bool> condition)
  bool SpinUntil(Func`1<bool> condition, TimeSpan timeout)
  bool SpinUntil(Func`1<bool> condition, int millisecondsTimeout)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.PlatformHelper
Наследуется от: object
Поля:
  int PROCESSOR_COUNT_REFRESH_INTERVAL_MS
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) s_processorCount
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) s_lastProcessorCountRefreshTicks
  bool IsSingleProcessor
Свойства:
  int ProcessorCount
Методы:
  int get_ProcessorCount()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.TimeoutHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  UInt32 GetTime()
  int UpdateTimeOut(UInt32 startTime, int originalWaitMillisecondsTimeout)
--------------------------------------------------
Класс: System.Threading.CancellationTokenRegistration
Наследуется от: ValueType
Поля:
  CancellationCallbackInfo m_callbackInfo
  SparselyPopulatedArrayAddInfo`1<CancellationCallbackInfo> m_registrationInfo
Свойства:
  CancellationToken Token
Методы:
  void .ctor(CancellationCallbackInfo callbackInfo, SparselyPopulatedArrayAddInfo`1<CancellationCallbackInfo> registrationInfo)
  CancellationToken get_Token()
  bool Unregister()
  void Dispose()
  bool op_Equality(CancellationTokenRegistration left, CancellationTokenRegistration right)
  bool op_Inequality(CancellationTokenRegistration left, CancellationTokenRegistration right)
  bool Equals(object obj)
  bool Equals(CancellationTokenRegistration other)
  int GetHashCode()
  ValueTask DisposeAsync()
--------------------------------------------------
Класс: System.Threading.CancellationTokenSource
Наследуется от: object
Поля:
  CancellationTokenSource s_canceledSource
  CancellationTokenSource s_neverCanceledSource
  int s_nLists
  ManualResetEvent modreq(System.Runtime.CompilerServices.IsVolatile) _kernelEvent
  SparselyPopulatedArray`1[] modreq(System.Runtime.CompilerServices.IsVolatile) _registeredCallbacksLists
  int CannotBeCanceled
  int NotCanceledState
  int NotifyingState
  int NotifyingCompleteState
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _state
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _threadIDExecutingCallbacks
  bool _disposed
  CancellationCallbackInfo modreq(System.Runtime.CompilerServices.IsVolatile) _executingCallback
  Timer modreq(System.Runtime.CompilerServices.IsVolatile) _timer
  TimerCallback s_timerCallback
Свойства:
  bool IsCancellationRequested
  bool IsCancellationCompleted
  bool IsDisposed
  int ThreadIDExecutingCallbacks
  CancellationToken Token
  bool CanBeCanceled
  WaitHandle WaitHandle
  CancellationCallbackInfo ExecutingCallback
Методы:
  bool get_IsCancellationRequested()
  bool get_IsCancellationCompleted()
  bool get_IsDisposed()
  int get_ThreadIDExecutingCallbacks()
  void set_ThreadIDExecutingCallbacks(int value)
  CancellationToken get_Token()
  bool get_CanBeCanceled()
  WaitHandle get_WaitHandle()
  CancellationCallbackInfo get_ExecutingCallback()
  void .ctor()
  void .ctor(TimeSpan delay)
  void .ctor(int millisecondsDelay)
  void InitializeWithTimer(int millisecondsDelay)
  void Cancel()
  void Cancel(bool throwOnFirstException)
  void CancelAfter(TimeSpan delay)
  void CancelAfter(int millisecondsDelay)
  void TimerCallbackLogic(object obj)
  void Dispose()
  void Dispose(bool disposing)
  void ThrowIfDisposed()
  void ThrowObjectDisposedException()
  CancellationTokenRegistration InternalRegister(Action`1<object> callback, object stateForCallback, SynchronizationContext targetSyncContext, ExecutionContext executionContext)
  void NotifyCancellation(bool throwOnFirstException)
  void ExecuteCallbackHandlers(bool throwOnFirstException)
  void CancellationCallbackCoreWork_OnSyncContext(object obj)
  void CancellationCallbackCoreWork(CancellationCallbackCoreWorkArguments args)
  CancellationTokenSource CreateLinkedTokenSource(CancellationToken token1, CancellationToken token2)
  CancellationTokenSource CreateLinkedTokenSource(CancellationToken token)
  CancellationTokenSource CreateLinkedTokenSource(CancellationToken[] tokens)
  void WaitForCallbackToComplete(CancellationCallbackInfo callbackInfo)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.CancellationCallbackCoreWorkArguments
Наследуется от: ValueType
Поля:
  SparselyPopulatedArrayFragment`1<CancellationCallbackInfo> _currArrayFragment
  int _currArrayIndex
Свойства:
Методы:
  void .ctor(SparselyPopulatedArrayFragment`1<CancellationCallbackInfo> currArrayFragment, int currArrayIndex)
--------------------------------------------------
Класс: System.Threading.CancellationCallbackInfo
Наследуется от: object
Поля:
  Action`1<object> Callback
  object StateForCallback
  ExecutionContext TargetExecutionContext
  CancellationTokenSource CancellationTokenSource
  ContextCallback s_executionContextCallback
Свойства:
Методы:
  void .ctor(Action`1<object> callback, object stateForCallback, ExecutionContext targetExecutionContext, CancellationTokenSource cancellationTokenSource)
  void ExecuteCallback()
  void ExecutionContextCallback(object obj)
--------------------------------------------------
Класс: System.Threading.SparselyPopulatedArray`1
Наследуется от: object
Поля:
  SparselyPopulatedArrayFragment`1<T> _head
  SparselyPopulatedArrayFragment`1 modreq(System.Runtime.CompilerServices.IsVolatile) _tail
Свойства:
  SparselyPopulatedArrayFragment`1<T> Tail
Методы:
  void .ctor(int initialSize)
  SparselyPopulatedArrayFragment`1<T> get_Tail()
  SparselyPopulatedArrayAddInfo`1<T> Add(T element)
--------------------------------------------------
Класс: System.Threading.SparselyPopulatedArrayAddInfo`1
Наследуется от: ValueType
Поля:
  SparselyPopulatedArrayFragment`1<T> _source
  int _index
Свойства:
  SparselyPopulatedArrayFragment`1<T> Source
  int Index
Методы:
  void .ctor(SparselyPopulatedArrayFragment`1<T> source, int index)
  SparselyPopulatedArrayFragment`1<T> get_Source()
  int get_Index()
--------------------------------------------------
Класс: System.Threading.SparselyPopulatedArrayFragment`1
Наследуется от: object
Поля:
  T[] _elements
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _freeCount
  SparselyPopulatedArrayFragment`1 modreq(System.Runtime.CompilerServices.IsVolatile) _next
  SparselyPopulatedArrayFragment`1 modreq(System.Runtime.CompilerServices.IsVolatile) _prev
Свойства:
  T Item
  int Length
  SparselyPopulatedArrayFragment`1<T> Prev
Методы:
  void .ctor(int size)
  void .ctor(int size, SparselyPopulatedArrayFragment`1<T> prev)
  T get_Item(int index)
  int get_Length()
  SparselyPopulatedArrayFragment`1<T> get_Prev()
  T SafeAtomicRemove(int index, T expectedElement)
--------------------------------------------------
Класс: System.Threading.LockHolder
Наследуется от: ValueType
Поля:
  Lock _lock
Свойства:
Методы:
  LockHolder Hold(Lock l)
  void Dispose()
--------------------------------------------------
Класс: System.Threading.ThreadPoolCallbackWrapper
Наследуется от: ValueType
Поля:
  RuntimeThread _currentThread
Свойства:
Методы:
  ThreadPoolCallbackWrapper Enter()
  void Exit(bool resetThread)
--------------------------------------------------
Класс: System.Threading.ThreadPoolBoundHandle
Наследуется от: object
Поля:
  SafeHandle _handle
  SafeThreadPoolIOHandle _threadPoolHandle
  DeferredDisposableLifetime`1<ThreadPoolBoundHandle> _lifetime
Свойства:
  SafeHandle Handle
Методы:
  void .cctor()
  void .ctor(SafeHandle handle, SafeThreadPoolIOHandle threadPoolHandle)
  SafeHandle get_Handle()
  ThreadPoolBoundHandle BindHandle(SafeHandle handle)
  NativeOverlapped* AllocateNativeOverlapped(IOCompletionCallback callback, object state, object pinData)
  NativeOverlapped* AllocateNativeOverlapped(PreAllocatedOverlapped preAllocated)
  void FreeNativeOverlapped(NativeOverlapped* overlapped)
  object GetNativeOverlappedState(NativeOverlapped* overlapped)
  OverlappedData GetOverlappedData(Win32ThreadPoolNativeOverlapped* overlapped, ThreadPoolBoundHandle expectedBoundHandle)
  void OnNativeIOCompleted(IntPtr instance, IntPtr context, IntPtr overlappedPtr, UInt32 ioResult, UIntPtr numberOfBytesTransferred, IntPtr ioPtr)
  bool AddRef()
  void Release()
  void Dispose()
  void Finalize()
  void System.Threading.IDeferredDisposable.OnFinalRelease(bool disposed)
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Win32ThreadPoolNativeOverlapped
Наследуется от: ValueType
Поля:
  ExecutionContextCallbackArgs t_executionContextCallbackArgs
  ContextCallback s_executionContextCallback
  OverlappedData[] s_dataArray
  int s_dataCount
  IntPtr s_freeList
  NativeOverlapped _overlapped
  IntPtr _nextFree
  int _dataIndex
Свойства:
  OverlappedData Data
Методы:
  void .cctor()
  OverlappedData get_Data()
  Win32ThreadPoolNativeOverlapped* Allocate(IOCompletionCallback callback, object state, object pinData, PreAllocatedOverlapped preAllocated)
  Win32ThreadPoolNativeOverlapped* AllocateNew()
  void SetData(IOCompletionCallback callback, object state, object pinData, PreAllocatedOverlapped preAllocated)
  void Free(Win32ThreadPoolNativeOverlapped* overlapped)
  NativeOverlapped* ToNativeOverlapped(Win32ThreadPoolNativeOverlapped* overlapped)
  Win32ThreadPoolNativeOverlapped* FromNativeOverlapped(NativeOverlapped* overlapped)
  void CompleteWithCallback(UInt32 errorCode, UInt32 bytesWritten, Win32ThreadPoolNativeOverlapped* overlapped)
  void OnExecutionContextCallback(object state)
--------------------------------------------------
Класс: System.Threading.PreAllocatedOverlapped
Наследуется от: object
Поля:
  Win32ThreadPoolNativeOverlapped* _overlapped
  DeferredDisposableLifetime`1<PreAllocatedOverlapped> _lifetime
Свойства:
Методы:
  void .cctor()
  void .ctor(IOCompletionCallback callback, object state, object pinData)
  bool AddRef()
  void Release()
  void Dispose()
  void Finalize()
  void System.Threading.IDeferredDisposable.OnFinalRelease(bool disposed)
--------------------------------------------------
Класс: System.Threading.Lock
Наследуется от: object
Поля:
  object _lock
Свойства:
Методы:
  void Acquire()
  void Release()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.SemaphoreSlim
Наследуется от: object
Поля:
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_currentCount
  int m_maxCount
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_waitCount
  object m_lockObj
  ManualResetEvent modreq(System.Runtime.CompilerServices.IsVolatile) m_waitHandle
  TaskNode m_asyncHead
  TaskNode m_asyncTail
  Task`1<bool> s_trueTask
  Task`1<bool> s_falseTask
  int NO_MAXIMUM
  Action`1<object> s_cancellationTokenCanceledEventHandler
Свойства:
  int CurrentCount
  WaitHandle AvailableWaitHandle
Методы:
  int get_CurrentCount()
  WaitHandle get_AvailableWaitHandle()
  void .ctor(int initialCount)
  void .ctor(int initialCount, int maxCount)
  void Wait()
  void Wait(CancellationToken cancellationToken)
  bool Wait(TimeSpan timeout)
  bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
  bool Wait(int millisecondsTimeout)
  bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
  bool WaitUntilCountOrTimeout(int millisecondsTimeout, UInt32 startTime, CancellationToken cancellationToken)
  Task WaitAsync()
  Task WaitAsync(CancellationToken cancellationToken)
  Task`1<bool> WaitAsync(int millisecondsTimeout)
  Task`1<bool> WaitAsync(TimeSpan timeout)
  Task`1<bool> WaitAsync(TimeSpan timeout, CancellationToken cancellationToken)
  Task`1<bool> WaitAsync(int millisecondsTimeout, CancellationToken cancellationToken)
  TaskNode CreateAndAddAsyncWaiter()
  bool RemoveAsyncWaiter(TaskNode task)
  Task`1<bool> WaitUntilCountOrTimeoutAsync(TaskNode asyncWaiter, int millisecondsTimeout, CancellationToken cancellationToken)
  int Release()
  int Release(int releaseCount)
  void QueueWaiterTask(TaskNode waiterTask)
  void Dispose()
  void Dispose(bool disposing)
  void CancellationTokenCanceledEventHandler(object obj)
  void CheckDispose()
  string GetResourceString(string str)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.SpinLock
Наследуется от: ValueType
Поля:
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_owner
  int SPINNING_FACTOR
  int SLEEP_ONE_FREQUENCY
  int SLEEP_ZERO_FREQUENCY
  int TIMEOUT_CHECK_FREQUENCY
  int LOCK_ID_DISABLE_MASK
  int LOCK_ANONYMOUS_OWNED
  int WAITERS_MASK
  int ID_DISABLED_AND_ANONYMOUS_OWNED
  int LOCK_UNOWNED
  int MAXIMUM_WAITERS
Свойства:
  bool IsHeld
  bool IsHeldByCurrentThread
  bool IsThreadOwnerTrackingEnabled
Методы:
  void .ctor(bool enableThreadOwnerTracking)
  void Enter(Boolean& lockTaken)
  void TryEnter(Boolean& lockTaken)
  void TryEnter(TimeSpan timeout, Boolean& lockTaken)
  void TryEnter(int millisecondsTimeout, Boolean& lockTaken)
  void ContinueTryEnter(int millisecondsTimeout, Boolean& lockTaken)
  void DecrementWaiters()
  void ContinueTryEnterWithThreadTracking(int millisecondsTimeout, UInt32 startTime, Boolean& lockTaken)
  void Exit()
  void Exit(bool useMemoryBarrier)
  void ExitSlowPath(bool useMemoryBarrier)
  bool get_IsHeld()
  bool get_IsHeldByCurrentThread()
  bool get_IsThreadOwnerTrackingEnabled()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.ThreadLocal`1
Наследуется от: object
Поля:
  Func`1<T> m_valueFactory
  LinkedSlotVolatile[] ts_slotArray
  FinalizationHelper<T> ts_finalizationHelper
  int m_idComplement
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) m_initialized
  IdManager<T> s_idManager
  LinkedSlot<T> m_linkedSlot
  bool m_trackAllValues
Свойства:
  T Value
  IList`1<T> Values
  int ValuesCountForDebugDisplay
  bool IsValueCreated
  T ValueForDebugDisplay
  List`1<T> ValuesForDebugDisplay
Методы:
  void .ctor()
  void .ctor(bool trackAllValues)
  void .ctor(Func`1<T> valueFactory)
  void .ctor(Func`1<T> valueFactory, bool trackAllValues)
  void Initialize(Func`1<T> valueFactory, bool trackAllValues)
  void Finalize()
  void Dispose()
  void Dispose(bool disposing)
  string ToString()
  T get_Value()
  void set_Value(T value)
  T GetValueSlow()
  void SetValueSlow(T value, LinkedSlotVolatile[] slotArray)
  void CreateLinkedSlot(LinkedSlotVolatile[] slotArray, int id, T value)
  IList`1<T> get_Values()
  List`1<T> GetValuesAsList()
  int get_ValuesCountForDebugDisplay()
  bool get_IsValueCreated()
  T get_ValueForDebugDisplay()
  List`1<T> get_ValuesForDebugDisplay()
  void GrowTable(LinkedSlotVolatile[]& table, int minLength)
  int GetNewTableSize(int minSize)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.SystemThreading_ThreadLocalDebugView`1
Наследуется от: object
Поля:
  ThreadLocal`1<T> m_tlocal
Свойства:
  bool IsValueCreated
  T Value
  List`1<T> Values
Методы:
  void .ctor(ThreadLocal`1<T> tlocal)
  bool get_IsValueCreated()
  T get_Value()
  List`1<T> get_Values()
--------------------------------------------------
Класс: System.Threading.EventWaitHandle
Наследуется от: WaitHandle
Поля:
Свойства:
Методы:
  void .ctor(bool initialState, EventResetMode mode)
  void .ctor(bool initialState, EventResetMode mode, string name)
  void .ctor(bool initialState, EventResetMode mode, string name, Boolean& createdNew)
  void .ctor(bool initialState, EventResetMode mode, string name, Boolean& createdNew, EventWaitHandleSecurity eventSecurity)
  void .ctor(SafeWaitHandle handle)
  EventWaitHandle OpenExisting(string name)
  EventWaitHandle OpenExisting(string name, EventWaitHandleRights rights)
  bool TryOpenExisting(string name, EventWaitHandle& result)
  bool TryOpenExisting(string name, EventWaitHandleRights rights, EventWaitHandle& result)
  OpenExistingResult OpenExistingWorker(string name, EventWaitHandleRights rights, EventWaitHandle& result)
  bool Reset()
  bool Set()
  EventWaitHandleSecurity GetAccessControl()
  void SetAccessControl(EventWaitHandleSecurity eventSecurity)
--------------------------------------------------
Класс: System.Threading.ContextCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object state)
  IAsyncResult BeginInvoke(object state, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.ContextCallback`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(TState& state)
  IAsyncResult BeginInvoke(TState& state, AsyncCallback callback, object object)
  void EndInvoke(TState& state, IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.ExecutionContextSwitcher
Наследуется от: ValueType
Поля:
  Reader outerEC
  bool outerECBelongsToScope
  object hecsw
  Thread thread
Свойства:
Методы:
  bool UndoNoThrow()
  void Undo()
--------------------------------------------------
Класс: System.Threading.AsyncFlowControl
Наследуется от: ValueType
Поля:
  bool useEC
  ExecutionContext _ec
  Thread _thread
Свойства:
Методы:
  void Setup()
  void Dispose()
  void Undo()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(AsyncFlowControl obj)
  bool op_Equality(AsyncFlowControl a, AsyncFlowControl b)
  bool op_Inequality(AsyncFlowControl a, AsyncFlowControl b)
--------------------------------------------------
Класс: System.Threading.ExecutionContext
Наследуется от: object
Поля:
  SynchronizationContext _syncContext
  SynchronizationContext _syncContextNoFlow
  LogicalCallContext _logicalCallContext
  IllogicalCallContext _illogicalCallContext
  Flags _flags
  Dictionary`2<IAsyncLocal, object> _localValues
  List`1<IAsyncLocal> _localChangeNotifications
  ExecutionContext s_dummyDefaultEC
  ExecutionContext Default
Свойства:
  bool isNewCapture
  bool isFlowSuppressed
  ExecutionContext PreAllocatedDefault
  bool IsPreAllocatedDefault
  LogicalCallContext LogicalCallContext
  IllogicalCallContext IllogicalCallContext
  SynchronizationContext SynchronizationContext
  SynchronizationContext SynchronizationContextNoFlow
Методы:
  bool get_isNewCapture()
  void set_isNewCapture(bool value)
  bool get_isFlowSuppressed()
  void set_isFlowSuppressed(bool value)
  ExecutionContext get_PreAllocatedDefault()
  bool get_IsPreAllocatedDefault()
  void .ctor()
  void .ctor(bool isPreAllocatedDefault)
  object GetLocalValue(IAsyncLocal local)
  void SetLocalValue(IAsyncLocal local, object newValue, bool needChangeNotifications)
  void OnAsyncLocalContextChanged(ExecutionContext previous, ExecutionContext current)
  LogicalCallContext get_LogicalCallContext()
  void set_LogicalCallContext(LogicalCallContext value)
  IllogicalCallContext get_IllogicalCallContext()
  void set_IllogicalCallContext(IllogicalCallContext value)
  SynchronizationContext get_SynchronizationContext()
  void set_SynchronizationContext(SynchronizationContext value)
  SynchronizationContext get_SynchronizationContextNoFlow()
  void set_SynchronizationContextNoFlow(SynchronizationContext value)
  void Dispose()
  void Run(ExecutionContext executionContext, ContextCallback callback, object state)
  void Run(ExecutionContext executionContext, ContextCallback callback, object state, bool preserveSyncCtx)
  void RunInternal(ExecutionContext executionContext, ContextCallback callback, object state)
  void RunInternal(ExecutionContext executionContext, ContextCallback callback, object state, bool preserveSyncCtx)
  void RunInternal(ExecutionContext executionContext, ContextCallback`1<TState> callback, TState& state)
  void RunInternal(ExecutionContext executionContext, ContextCallback`1<TState> callback, TState& state, bool preserveSyncCtx)
  void EstablishCopyOnWriteScope(ExecutionContextSwitcher& ecsw)
  void EstablishCopyOnWriteScope(Thread currentThread, bool knownNullWindowsIdentity, ExecutionContextSwitcher& ecsw)
  ExecutionContextSwitcher SetExecutionContext(ExecutionContext executionContext, bool preserveSyncCtx)
  ExecutionContext CreateCopy()
  ExecutionContext CreateMutableCopy()
  AsyncFlowControl SuppressFlow()
  void RestoreFlow()
  bool IsFlowSuppressed()
  ExecutionContext Capture()
  ExecutionContext FastCapture()
  ExecutionContext Capture(StackCrawlMark& stackMark, CaptureOptions options)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor(SerializationInfo info, StreamingContext context)
  bool IsDefaultFTContext(bool ignoreSyncCtx)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Monitor
Наследуется от: object
Поля:
Свойства:
Методы:
  void Enter(object obj)
  void Enter(object obj, Boolean& lockTaken)
  void ThrowLockTakenException()
  void Exit(object obj)
  bool TryEnter(object obj)
  void TryEnter(object obj, Boolean& lockTaken)
  bool TryEnter(object obj, int millisecondsTimeout)
  int MillisecondsTimeoutFromTimeSpan(TimeSpan timeout)
  bool TryEnter(object obj, TimeSpan timeout)
  void TryEnter(object obj, int millisecondsTimeout, Boolean& lockTaken)
  void TryEnter(object obj, TimeSpan timeout, Boolean& lockTaken)
  bool IsEntered(object obj)
  bool Wait(object obj, int millisecondsTimeout, bool exitContext)
  bool Wait(object obj, TimeSpan timeout, bool exitContext)
  bool Wait(object obj, int millisecondsTimeout)
  bool Wait(object obj, TimeSpan timeout)
  bool Wait(object obj)
  void Pulse(object obj)
  void PulseAll(object obj)
  bool Monitor_test_synchronised(object obj)
  void Monitor_pulse(object obj)
  void ObjPulse(object obj)
  void Monitor_pulse_all(object obj)
  void ObjPulseAll(object obj)
  bool Monitor_wait(object obj, int ms)
  bool ObjWait(bool exitContext, int millisecondsTimeout, object obj)
  void try_enter_with_atomic_var(object obj, int millisecondsTimeout, Boolean& lockTaken)
  void ReliableEnterTimeout(object obj, int timeout, Boolean& lockTaken)
  void ReliableEnter(object obj, Boolean& lockTaken)
  bool Monitor_test_owner(object obj)
  bool IsEnteredNative(object obj)
--------------------------------------------------
Класс: System.Threading.SynchronizationContextProperties
Наследуется от: Enum
Поля:
  int value__
  SynchronizationContextProperties None
  SynchronizationContextProperties RequireWaitNotification
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.SynchronizationContext
Наследуется от: object
Поля:
  SynchronizationContextProperties _props
  Type s_cachedPreparedType1
  Type s_cachedPreparedType2
  Type s_cachedPreparedType3
  Type s_cachedPreparedType4
  Type s_cachedPreparedType5
Свойства:
  SynchronizationContext Current
  SynchronizationContext CurrentNoFlow
  SynchronizationContext CurrentExplicit
Методы:
  void .ctor()
  void SetWaitNotificationRequired()
  bool IsWaitNotificationRequired()
  void Send(SendOrPostCallback d, object state)
  void Post(SendOrPostCallback d, object state)
  void OperationStarted()
  void OperationCompleted()
  int Wait(IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)
  int WaitHelper(IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)
  void SetSynchronizationContext(SynchronizationContext syncContext)
  SynchronizationContext get_Current()
  SynchronizationContext get_CurrentNoFlow()
  SynchronizationContext GetThreadLocalContext()
  SynchronizationContext CreateCopy()
  int InvokeWaitMethodHelper(SynchronizationContext syncContext, IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout)
  SynchronizationContext get_CurrentExplicit()
--------------------------------------------------
Класс: System.Threading.InternalCrossContextDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(Object[] args)
  IAsyncResult BeginInvoke(Object[] args, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.ThreadHelper
Наследуется от: object
Поля:
  Delegate _start
  object _startArg
  ExecutionContext _executionContext
  ContextCallback _ccb
Свойства:
Методы:
  void .ctor(Delegate start)
  void SetExecutionContextHelper(ExecutionContext ec)
  void ThreadStart_Context(object state)
  void ThreadStart(object obj)
  void ThreadStart()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Thread
Наследуется от: CriticalFinalizerObject
Поля:
  LocalDataStoreMgr s_LocalDataStoreMgr
  LocalDataStoreHolder s_LocalDataStore
  CultureInfo m_CurrentCulture
  CultureInfo m_CurrentUICulture
  AsyncLocal`1<CultureInfo> s_asyncLocalCurrentCulture
  AsyncLocal`1<CultureInfo> s_asyncLocalCurrentUICulture
  InternalThread internal_thread
  object m_ThreadStartArg
  object pending_exception
  Thread current_thread
  MulticastDelegate m_Delegate
  ExecutionContext m_ExecutionContext
  bool m_ExecutionContextBelongsToOuterScope
  IPrincipal principal
  int principal_version
Свойства:
  bool ExecutionContextBelongsToCurrentScope
  ExecutionContext ExecutionContext
  ThreadPriority Priority
  CultureInfo CurrentUICulture
  CultureInfo CurrentCulture
  LocalDataStoreMgr LocalDataStoreManager
  InternalThread Internal
  Context CurrentContext
  IPrincipal CurrentPrincipal
  Thread CurrentThread
  int CurrentThreadId
  ApartmentState ApartmentState
  bool IsThreadPoolThread
  bool IsThreadPoolThreadInternal
  bool IsAlive
  bool IsBackground
  string Name
  ThreadState ThreadState
  object AbortReason
  int ManagedThreadId
Методы:
  void AsyncLocalSetCurrentCulture(AsyncLocalValueChangedArgs`1<CultureInfo> args)
  void AsyncLocalSetCurrentUICulture(AsyncLocalValueChangedArgs`1<CultureInfo> args)
  void .ctor(ThreadStart start)
  void .ctor(ThreadStart start, int maxStackSize)
  void .ctor(ParameterizedThreadStart start)
  void .ctor(ParameterizedThreadStart start, int maxStackSize)
  void Start()
  void Start(object parameter)
  void Start(StackCrawlMark& stackMark)
  Reader GetExecutionContextReader()
  bool get_ExecutionContextBelongsToCurrentScope()
  void set_ExecutionContextBelongsToCurrentScope(bool value)
  ExecutionContext get_ExecutionContext()
  ExecutionContext GetMutableExecutionContext()
  void SetExecutionContext(ExecutionContext value, bool belongsToCurrentScope)
  void SetExecutionContext(Reader value, bool belongsToCurrentScope)
  void SetCompressedStack(CompressedStack stack)
  CompressedStack GetCompressedStack()
  void ResetAbort()
  void ResetAbortNative()
  void Suspend()
  void SuspendInternal()
  void Resume()
  void ResumeInternal()
  void Interrupt()
  void InterruptInternal()
  ThreadPriority get_Priority()
  void set_Priority(ThreadPriority value)
  int GetPriorityNative()
  void SetPriorityNative(int priority)
  bool JoinInternal(int millisecondsTimeout)
  void Join()
  bool Join(int millisecondsTimeout)
  bool Join(TimeSpan timeout)
  void SleepInternal(int millisecondsTimeout)
  void Sleep(int millisecondsTimeout)
  void Sleep(TimeSpan timeout)
  bool YieldInternal()
  bool Yield()
  void SetStartHelper(Delegate start, int maxStackSize)
  LocalDataStoreSlot AllocateDataSlot()
  LocalDataStoreSlot AllocateNamedDataSlot(string name)
  LocalDataStoreSlot GetNamedDataSlot(string name)
  void FreeNamedDataSlot(string name)
  object GetData(LocalDataStoreSlot slot)
  void SetData(LocalDataStoreSlot slot, object data)
  CultureInfo get_CurrentUICulture()
  void set_CurrentUICulture(CultureInfo value)
  CultureInfo GetCurrentUICultureNoAppX()
  CultureInfo get_CurrentCulture()
  void set_CurrentCulture(CultureInfo value)
  CultureInfo GetCurrentCultureNoAppX()
  void nativeInitCultureAccessors()
  void MemoryBarrier()
  LocalDataStoreMgr get_LocalDataStoreManager()
  void System.Runtime.InteropServices._Thread.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._Thread.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._Thread.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._Thread.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void ConstructInternalThread()
  InternalThread get_Internal()
  Byte[] ByteArrayToRootDomain(Byte[] arr)
  Byte[] ByteArrayToCurrentDomain(Byte[] arr)
  Context get_CurrentContext()
  void DeserializePrincipal(Thread th)
  void SerializePrincipal(Thread th, IPrincipal value)
  IPrincipal get_CurrentPrincipal()
  void set_CurrentPrincipal(IPrincipal value)
  AppDomain GetDomain()
  void GetCurrentThread_icall(Thread& thread)
  Thread GetCurrentThread()
  Thread get_CurrentThread()
  int get_CurrentThreadId()
  int GetDomainID()
  bool Thread_internal(MulticastDelegate start)
  void .ctor(InternalThread it)
  void Finalize()
  ApartmentState get_ApartmentState()
  void set_ApartmentState(ApartmentState value)
  bool get_IsThreadPoolThread()
  bool get_IsThreadPoolThreadInternal()
  void set_IsThreadPoolThreadInternal(bool value)
  bool get_IsAlive()
  bool get_IsBackground()
  void set_IsBackground(bool value)
  string GetName_internal(InternalThread thread)
  void SetName_icall(InternalThread thread, Char* name, int nameLength)
  void SetName_internal(InternalThread thread, string name)
  string get_Name()
  void set_Name(string value)
  ThreadState get_ThreadState()
  void Abort_internal(InternalThread thread, object stateInfo)
  void Abort()
  void Abort(object stateInfo)
  object GetAbortExceptionState()
  object get_AbortReason()
  void ClearAbortReason()
  void SpinWait_nop()
  void SpinWait(int iterations)
  void StartInternal(object principal, StackCrawlMark& stackMark)
  void SetState(InternalThread thread, ThreadState set)
  void ClrState(InternalThread thread, ThreadState clr)
  ThreadState GetState(InternalThread thread)
  byte VolatileRead(Byte& address)
  double VolatileRead(Double& address)
  short VolatileRead(Int16& address)
  int VolatileRead(Int32& address)
  long VolatileRead(Int64& address)
  IntPtr VolatileRead(IntPtr& address)
  object VolatileRead(Object& address)
  sbyte VolatileRead(SByte& address)
  float VolatileRead(Single& address)
  ushort VolatileRead(UInt16& address)
  UInt32 VolatileRead(UInt32& address)
  ulong VolatileRead(UInt64& address)
  UIntPtr VolatileRead(UIntPtr& address)
  void VolatileWrite(Byte& address, byte value)
  void VolatileWrite(Double& address, double value)
  void VolatileWrite(Int16& address, short value)
  void VolatileWrite(Int32& address, int value)
  void VolatileWrite(Int64& address, long value)
  void VolatileWrite(IntPtr& address, IntPtr value)
  void VolatileWrite(Object& address, object value)
  void VolatileWrite(SByte& address, sbyte value)
  void VolatileWrite(Single& address, float value)
  void VolatileWrite(UInt16& address, ushort value)
  void VolatileWrite(UInt32& address, UInt32 value)
  void VolatileWrite(UInt64& address, ulong value)
  void VolatileWrite(UIntPtr& address, UIntPtr value)
  int SystemMaxStackStize()
  int GetProcessDefaultStackSize(int maxStackSize)
  void SetStart(MulticastDelegate start, int maxStackSize)
  int get_ManagedThreadId()
  void BeginCriticalRegion()
  void EndCriticalRegion()
  void BeginThreadAffinity()
  void EndThreadAffinity()
  ApartmentState GetApartmentState()
  void SetApartmentState(ApartmentState state)
  bool TrySetApartmentState(ApartmentState state)
  int GetHashCode()
  void GetStackTraces(Thread[]& threads, Object[]& stack_frames)
  Dictionary`2<Thread, StackTrace> Mono_GetStackTraces()
  void DisableComObjectEagerCleanup()
  ThreadState ValidateThreadState()
  int GetCurrentProcessorId()
--------------------------------------------------
Класс: System.Threading.StackCrawlMark
Наследуется от: Enum
Поля:
  int value__
  StackCrawlMark LookForMe
  StackCrawlMark LookForMyCaller
  StackCrawlMark LookForMyCallersCaller
  StackCrawlMark LookForThread
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.ThreadAbortException
Наследуется от: SystemException
Поля:
Свойства:
  object ExceptionState
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  object get_ExceptionState()
--------------------------------------------------
Класс: System.Threading.ThreadInterruptedException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.IThreadPoolWorkItem
Поля:
Свойства:
Методы:
  void ExecuteWorkItem()
  void MarkAborted(ThreadAbortException tae)
--------------------------------------------------
Класс: System.Threading.WaitCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object state)
  IAsyncResult BeginInvoke(object state, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.WaitOrTimerCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object state, bool timedOut)
  IAsyncResult BeginInvoke(object state, bool timedOut, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.IOCompletionCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP)
  IAsyncResult BeginInvoke(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* pOVERLAP, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.ThreadPoolGlobals
Наследуется от: object
Поля:
  UInt32 tpQuantum
  int processorCount
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) vmTpInitialized
  bool enableWorkerTracking
  ThreadPoolWorkQueue workQueue
Свойства:
  bool tpHosted
Методы:
  bool get_tpHosted()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.ThreadPoolWorkQueue
Наследуется от: object
Поля:
  QueueSegment modreq(System.Runtime.CompilerServices.IsVolatile) queueHead
  QueueSegment modreq(System.Runtime.CompilerServices.IsVolatile) queueTail
  SparseArray`1<WorkStealingQueue> allThreadQueues
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) numOutstandingThreadRequests
Свойства:
Методы:
  void .ctor()
  ThreadPoolWorkQueueThreadLocals EnsureCurrentThreadHasQueue()
  void EnsureThreadRequested()
  void MarkThreadRequestSatisfied()
  void Enqueue(IThreadPoolWorkItem callback, bool forceGlobal)
  bool LocalFindAndPop(IThreadPoolWorkItem callback)
  void Dequeue(ThreadPoolWorkQueueThreadLocals tl, IThreadPoolWorkItem& callback, Boolean& missedSteal)
  bool Dispatch()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.ThreadPoolWorkQueueThreadLocals
Наследуется от: object
Поля:
  ThreadPoolWorkQueueThreadLocals threadLocals
  ThreadPoolWorkQueue workQueue
  WorkStealingQueue workStealingQueue
  Random random
Свойства:
Методы:
  void .ctor(ThreadPoolWorkQueue tpq)
  void CleanUp()
  void Finalize()
--------------------------------------------------
Класс: System.Threading._ThreadPoolWaitCallback
Наследуется от: object
Поля:
Свойства:
Методы:
  bool PerformWaitCallback()
--------------------------------------------------
Класс: System.Threading.QueueUserWorkItemCallback
Наследуется от: object
Поля:
  WaitCallback callback
  ExecutionContext context
  object state
  ContextCallback ccb
Свойства:
Методы:
  void .ctor(WaitCallback waitCallback, object stateObj, bool compressStack, StackCrawlMark& stackMark)
  void .ctor(WaitCallback waitCallback, object stateObj, ExecutionContext ec)
  void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
  void System.Threading.IThreadPoolWorkItem.MarkAborted(ThreadAbortException tae)
  void WaitCallback_Context(object state)
  void .cctor()
--------------------------------------------------
Класс: System.Threading._ThreadPoolWaitOrTimerCallback
Наследуется от: object
Поля:
  WaitOrTimerCallback _waitOrTimerCallback
  ExecutionContext _executionContext
  object _state
  ContextCallback _ccbt
  ContextCallback _ccbf
Свойства:
Методы:
  void .cctor()
  void .ctor(WaitOrTimerCallback waitOrTimerCallback, object state, bool compressStack, StackCrawlMark& stackMark)
  void WaitOrTimerCallback_Context_t(object state)
  void WaitOrTimerCallback_Context_f(object state)
  void WaitOrTimerCallback_Context(object state, bool timedOut)
  void PerformWaitOrTimerCallback(object state, bool timedOut)
--------------------------------------------------
Класс: System.Threading.ThreadPool
Наследуется от: object
Поля:
Свойства:
  bool IsThreadPoolThread
Методы:
  bool SetMaxThreads(int workerThreads, int completionPortThreads)
  void GetMaxThreads(Int32& workerThreads, Int32& completionPortThreads)
  bool SetMinThreads(int workerThreads, int completionPortThreads)
  void GetMinThreads(Int32& workerThreads, Int32& completionPortThreads)
  void GetAvailableThreads(Int32& workerThreads, Int32& completionPortThreads)
  RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, UInt32 millisecondsTimeOutInterval, bool executeOnlyOnce)
  RegisteredWaitHandle UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, UInt32 millisecondsTimeOutInterval, bool executeOnlyOnce)
  RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, UInt32 millisecondsTimeOutInterval, bool executeOnlyOnce, StackCrawlMark& stackMark, bool compressStack)
  RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, int millisecondsTimeOutInterval, bool executeOnlyOnce)
  RegisteredWaitHandle UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, int millisecondsTimeOutInterval, bool executeOnlyOnce)
  RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, long millisecondsTimeOutInterval, bool executeOnlyOnce)
  RegisteredWaitHandle UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, long millisecondsTimeOutInterval, bool executeOnlyOnce)
  RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, TimeSpan timeout, bool executeOnlyOnce)
  RegisteredWaitHandle UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, object state, TimeSpan timeout, bool executeOnlyOnce)
  bool QueueUserWorkItem(WaitCallback callBack, object state)
  bool QueueUserWorkItem(WaitCallback callBack)
  bool UnsafeQueueUserWorkItem(WaitCallback callBack, object state)
  bool QueueUserWorkItem(Action`1<TState> callBack, TState state, bool preferLocal)
  bool UnsafeQueueUserWorkItem(Action`1<TState> callBack, TState state, bool preferLocal)
  bool QueueUserWorkItemHelper(WaitCallback callBack, object state, StackCrawlMark& stackMark, bool compressStack, bool forceGlobal)
  void UnsafeQueueCustomWorkItem(IThreadPoolWorkItem workItem, bool forceGlobal)
  bool TryPopCustomWorkItem(IThreadPoolWorkItem workItem)
  IEnumerable`1<IThreadPoolWorkItem> GetQueuedWorkItems()
  IEnumerable`1<IThreadPoolWorkItem> EnumerateQueuedWorkItems(WorkStealingQueue[] wsQueues, QueueSegment globalQueueTail)
  IEnumerable`1<IThreadPoolWorkItem> GetLocallyQueuedWorkItems()
  IEnumerable`1<IThreadPoolWorkItem> GetGloballyQueuedWorkItems()
  Object[] ToObjectArray(IEnumerable`1<IThreadPoolWorkItem> workitems)
  Object[] GetQueuedWorkItemsForDebugger()
  Object[] GetGloballyQueuedWorkItemsForDebugger()
  Object[] GetLocallyQueuedWorkItemsForDebugger()
  bool RequestWorkerThread()
  bool PostQueuedCompletionStatus(NativeOverlapped* overlapped)
  bool UnsafeQueueNativeOverlapped(NativeOverlapped* overlapped)
  void EnsureVMInitialized()
  bool SetMinThreadsNative(int workerThreads, int completionPortThreads)
  bool SetMaxThreadsNative(int workerThreads, int completionPortThreads)
  void GetMinThreadsNative(Int32& workerThreads, Int32& completionPortThreads)
  void GetMaxThreadsNative(Int32& workerThreads, Int32& completionPortThreads)
  void GetAvailableThreadsNative(Int32& workerThreads, Int32& completionPortThreads)
  bool NotifyWorkItemComplete()
  void ReportThreadStatus(bool isWorking)
  void NotifyWorkItemProgress()
  void NotifyWorkItemProgressNative()
  void NotifyWorkItemQueued()
  bool IsThreadPoolHosted()
  void InitializeVMTp(Boolean& enableWorkerTracking)
  bool BindHandle(IntPtr osHandle)
  bool BindHandle(SafeHandle osHandle)
  bool BindIOCompletionCallbackNative(IntPtr fileHandle)
  bool get_IsThreadPoolThread()
--------------------------------------------------
Класс: System.Threading.WaitHandle
Наследуется от: MarshalByRefObject
Поля:
  int WaitTimeout
  int MAX_WAITHANDLES
  IntPtr waitHandle
  SafeWaitHandle modreq(System.Runtime.CompilerServices.IsVolatile) safeWaitHandle
  bool hasThreadAffinity
  int WAIT_OBJECT_0
  int WAIT_ABANDONED
  int WAIT_FAILED
  int ERROR_TOO_MANY_POSTS
  int ERROR_NOT_OWNED_BY_CALLER
  IntPtr InvalidHandle
  int MaxWaitHandles
Свойства:
  IntPtr Handle
  SafeWaitHandle SafeWaitHandle
Методы:
  void .ctor()
  void Init()
  IntPtr get_Handle()
  void set_Handle(IntPtr value)
  SafeWaitHandle get_SafeWaitHandle()
  void set_SafeWaitHandle(SafeWaitHandle value)
  void SetHandleInternal(SafeWaitHandle handle)
  bool WaitOne(int millisecondsTimeout, bool exitContext)
  bool WaitOne(TimeSpan timeout, bool exitContext)
  bool WaitOne()
  bool WaitOne(int millisecondsTimeout)
  bool WaitOne(TimeSpan timeout)
  bool WaitOne(long timeout, bool exitContext)
  bool InternalWaitOne(SafeHandle waitableSafeHandle, long millisecondsTimeout, bool hasThreadAffinity, bool exitContext)
  bool WaitOneWithoutFAS()
  bool WaitAll(WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext)
  bool WaitAll(WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext)
  bool WaitAll(WaitHandle[] waitHandles)
  bool WaitAll(WaitHandle[] waitHandles, int millisecondsTimeout)
  bool WaitAll(WaitHandle[] waitHandles, TimeSpan timeout)
  int WaitAny(WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext)
  int WaitAny(WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext)
  int WaitAny(WaitHandle[] waitHandles, TimeSpan timeout)
  int WaitAny(WaitHandle[] waitHandles)
  int WaitAny(WaitHandle[] waitHandles, int millisecondsTimeout)
  bool SignalAndWait(WaitHandle toSignal, WaitHandle toWaitOn)
  bool SignalAndWait(WaitHandle toSignal, WaitHandle toWaitOn, TimeSpan timeout, bool exitContext)
  bool SignalAndWait(WaitHandle toSignal, WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext)
  void ThrowAbandonedMutexException()
  void ThrowAbandonedMutexException(int location, WaitHandle handle)
  void Close()
  void Dispose(bool explicitDisposing)
  void Dispose()
  int WaitOneNative(SafeHandle waitableSafeHandle, UInt32 millisecondsTimeout, bool hasThreadAffinity, bool exitContext)
  int WaitMultiple(WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext, bool WaitAll)
  int Wait_internal(IntPtr* handles, int numHandles, bool waitAll, int ms)
  int SignalAndWaitOne(SafeWaitHandle waitHandleToSignal, SafeWaitHandle waitHandleToWaitOn, int millisecondsTimeout, bool hasThreadAffinity, bool exitContext)
  int SignalAndWait_Internal(IntPtr toSignal, IntPtr toWaitOn, int ms)
  int ToTimeoutMilliseconds(TimeSpan timeout)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.WaitHandleExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  SafeWaitHandle GetSafeWaitHandle(WaitHandle waitHandle)
  void SetSafeWaitHandle(WaitHandle waitHandle, SafeWaitHandle value)
--------------------------------------------------
Класс: System.Threading.CompressedStack
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  IList List
Методы:
  void .ctor(int length)
  void .ctor(CompressedStack cs)
  CompressedStack CreateCopy()
  CompressedStack Capture()
  CompressedStack GetCompressedStack()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void Run(CompressedStack compressedStack, ContextCallback callback, object state)
  bool Equals(CompressedStack cs)
  bool IsEmpty()
  IList get_List()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.HostExecutionContext
Наследуется от: object
Поля:
  object _state
Свойства:
  object State
Методы:
  void .ctor()
  void .ctor(object state)
  HostExecutionContext CreateCopy()
  object get_State()
  void set_State(object value)
  void Dispose()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Threading.HostExecutionContextManager
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  HostExecutionContext Capture()
  void Revert(object previousState)
  object SetHostExecutionContext(HostExecutionContext hostExecutionContext)
--------------------------------------------------
Класс: System.Threading.Interlocked
Наследуется от: object
Поля:
Свойства:
Методы:
  int CompareExchange(Int32& location1, int value, int comparand)
  int CompareExchange(Int32& location1, int value, int comparand, Boolean& succeeded)
  void CompareExchange(Object& location1, Object& value, Object& comparand, Object& result)
  object CompareExchange(Object& location1, object value, object comparand)
  float CompareExchange(Single& location1, float value, float comparand)
  int Decrement(Int32& location)
  long Decrement(Int64& location)
  int Increment(Int32& location)
  long Increment(Int64& location)
  int Exchange(Int32& location1, int value)
  void Exchange(Object& location1, Object& value, Object& result)
  object Exchange(Object& location1, object value)
  float Exchange(Single& location1, float value)
  long CompareExchange(Int64& location1, long value, long comparand)
  IntPtr CompareExchange(IntPtr& location1, IntPtr value, IntPtr comparand)
  double CompareExchange(Double& location1, double value, double comparand)
  T CompareExchange(T& location1, T value, T comparand)
  long Exchange(Int64& location1, long value)
  IntPtr Exchange(IntPtr& location1, IntPtr value)
  double Exchange(Double& location1, double value)
  T Exchange(T& location1, T value)
  long Read(Int64& location)
  int Add(Int32& location1, int value)
  long Add(Int64& location1, long value)
  void MemoryBarrier()
  void MemoryBarrierProcessWide()
  void SpeculationBarrier()
--------------------------------------------------
Класс: System.Threading.LockCookie
Наследуется от: ValueType
Поля:
  int ThreadId
  int ReaderLocks
  int WriterLocks
Свойства:
Методы:
  void .ctor(int thread_id)
  void .ctor(int thread_id, int reader_locks, int writer_locks)
  int GetHashCode()
  bool Equals(LockCookie obj)
  bool Equals(object obj)
  bool op_Equality(LockCookie a, LockCookie b)
  bool op_Inequality(LockCookie a, LockCookie b)
--------------------------------------------------
Класс: System.Threading.LockQueue
Наследуется от: object
Поля:
  ReaderWriterLock rwlock
  int lockCount
Свойства:
  bool IsEmpty
Методы:
  void .ctor(ReaderWriterLock rwlock)
  bool Wait(int timeout)
  bool get_IsEmpty()
  void Pulse()
--------------------------------------------------
Класс: System.Threading.Mutex
Наследуется от: WaitHandle
Поля:
Свойства:
Методы:
  IntPtr CreateMutex_icall(bool initiallyOwned, Char* name, int name_length, Boolean& created)
  IntPtr OpenMutex_icall(Char* name, int name_length, MutexRights rights, MonoIOError& error)
  bool ReleaseMutex_internal(IntPtr handle)
  IntPtr CreateMutex_internal(bool initiallyOwned, string name, Boolean& created)
  IntPtr OpenMutex_internal(string name, MutexRights rights, MonoIOError& error)
  void .ctor(IntPtr handle)
  void .ctor()
  void .ctor(bool initiallyOwned)
  void .ctor(bool initiallyOwned, string name)
  void .ctor(bool initiallyOwned, string name, Boolean& createdNew)
  void .ctor(bool initiallyOwned, string name, Boolean& createdNew, MutexSecurity mutexSecurity)
  MutexSecurity GetAccessControl()
  Mutex OpenExisting(string name)
  Mutex OpenExisting(string name, MutexRights rights)
  bool TryOpenExisting(string name, Mutex& result)
  bool TryOpenExisting(string name, MutexRights rights, Mutex& result)
  void ReleaseMutex()
  void SetAccessControl(MutexSecurity mutexSecurity)
--------------------------------------------------
Класс: System.Threading.NativeEventCalls
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr CreateEvent_internal(bool manual, bool initial, string name, Int32& errorCode)
  IntPtr CreateEvent_icall(bool manual, bool initial, Char* name, int name_length, Int32& errorCode)
  bool SetEvent(SafeWaitHandle handle)
  bool SetEvent_internal(IntPtr handle)
  bool ResetEvent(SafeWaitHandle handle)
  bool ResetEvent_internal(IntPtr handle)
  void CloseEvent_internal(IntPtr handle)
  IntPtr OpenEvent_internal(string name, EventWaitHandleRights rights, Int32& errorCode)
  IntPtr OpenEvent_icall(Char* name, int name_length, EventWaitHandleRights rights, Int32& errorCode)
--------------------------------------------------
Класс: System.Threading.Overlapped
Наследуется от: object
Поля:
  IAsyncResult ares
  int offsetL
  int offsetH
  int evt
  IntPtr evt_ptr
Свойства:
  IAsyncResult AsyncResult
  int EventHandle
  IntPtr EventHandleIntPtr
  int OffsetHigh
  int OffsetLow
Методы:
  void .ctor()
  void .ctor(int offsetLo, int offsetHi, int hEvent, IAsyncResult ar)
  void .ctor(int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar)
  void Free(NativeOverlapped* nativeOverlappedPtr)
  Overlapped Unpack(NativeOverlapped* nativeOverlappedPtr)
  NativeOverlapped* Pack(IOCompletionCallback iocb)
  NativeOverlapped* Pack(IOCompletionCallback iocb, object userData)
  NativeOverlapped* UnsafePack(IOCompletionCallback iocb)
  NativeOverlapped* UnsafePack(IOCompletionCallback iocb, object userData)
  IAsyncResult get_AsyncResult()
  void set_AsyncResult(IAsyncResult value)
  int get_EventHandle()
  void set_EventHandle(int value)
  IntPtr get_EventHandleIntPtr()
  void set_EventHandleIntPtr(IntPtr value)
  int get_OffsetHigh()
  void set_OffsetHigh(int value)
  int get_OffsetLow()
  void set_OffsetLow(int value)
--------------------------------------------------
Класс: System.Threading.ReaderWriterLock
Наследуется от: CriticalFinalizerObject
Поля:
  int seq_num
  int state
  int readers
  int writer_lock_owner
  LockQueue writer_queue
  Hashtable reader_locks
Свойства:
  bool IsReaderLockHeld
  bool IsWriterLockHeld
  int WriterSeqNum
Методы:
  void .ctor()
  void Finalize()
  bool get_IsReaderLockHeld()
  bool get_IsWriterLockHeld()
  int get_WriterSeqNum()
  void AcquireReaderLock(int millisecondsTimeout)
  void AcquireReaderLock(int millisecondsTimeout, int initialLockCount)
  void AcquireReaderLock(TimeSpan timeout)
  void AcquireWriterLock(int millisecondsTimeout)
  void AcquireWriterLock(int millisecondsTimeout, int initialLockCount)
  void AcquireWriterLock(TimeSpan timeout)
  bool AnyWritersSince(int seqNum)
  void DowngradeFromWriterLock(LockCookie& lockCookie)
  LockCookie ReleaseLock()
  void ReleaseReaderLock()
  void ReleaseReaderLock(int currentCount, int releaseCount)
  void ReleaseWriterLock()
  void ReleaseWriterLock(int releaseCount)
  void RestoreLock(LockCookie& lockCookie)
  LockCookie UpgradeToWriterLock(int millisecondsTimeout)
  LockCookie UpgradeToWriterLock(TimeSpan timeout)
  LockCookie GetLockCookie()
  bool HasWriterLock()
  int CheckTimeout(TimeSpan timeout)
--------------------------------------------------
Класс: System.Threading.RegisteredWaitHandle
Наследуется от: MarshalByRefObject
Поля:
  WaitHandle _waitObject
  WaitOrTimerCallback _callback
  object _state
  WaitHandle _finalEvent
  ManualResetEvent _cancelEvent
  TimeSpan _timeout
  int _callsInProcess
  bool _executeOnlyOnce
  bool _unregistered
Свойства:
Методы:
  void .ctor(WaitHandle waitObject, WaitOrTimerCallback callback, object state, TimeSpan timeout, bool executeOnlyOnce)
  void Wait(object state)
  void DoCallBack(object timedOut)
  bool Unregister(WaitHandle waitObject)
  void .ctor()
--------------------------------------------------
Класс: System.Threading.InternalThread
Наследуется от: CriticalFinalizerObject
Поля:
  int lock_thread_id
  IntPtr handle
  IntPtr native_handle
  IntPtr name_chars
  int name_free
  int name_length
  ThreadState state
  object abort_exc
  int abort_state_handle
  long thread_id
  IntPtr debugger_thread
  UIntPtr static_data
  IntPtr runtime_thread_info
  object current_appcontext
  object root_domain_thread
  Byte[] _serialized_principal
  int _serialized_principal_version
  IntPtr appdomain_refs
  int interruption_requested
  IntPtr longlived
  bool threadpool_thread
  bool thread_interrupt_requested
  int stack_size
  byte apartment_state
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) critical_region_level
  int managed_id
  int small_id
  IntPtr manage_callback
  IntPtr flags
  IntPtr thread_pinning_ref
  IntPtr abort_protected_block_count
  int priority
  IntPtr owned_mutex
  IntPtr suspended_event
  int self_suspended
  IntPtr thread_state
  IntPtr netcore0
  IntPtr netcore1
  IntPtr netcore2
  IntPtr last
Свойства:
Методы:
  void Thread_free_internal()
  void Finalize()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Timer
Наследуется от: MarshalByRefObject
Поля:
  TimerCallback callback
  object state
  long due_time_ms
  long period_ms
  long next_run
  bool disposed
  bool is_dead
  bool is_added
  long MaxValue
Свойства:
  Scheduler scheduler
Методы:
  Scheduler get_scheduler()
  void .ctor(TimerCallback callback, object state, int dueTime, int period)
  void .ctor(TimerCallback callback, object state, long dueTime, long period)
  void .ctor(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period)
  void .ctor(TimerCallback callback, object state, UInt32 dueTime, UInt32 period)
  void .ctor(TimerCallback callback)
  void Init(TimerCallback callback, object state, long dueTime, long period)
  bool Change(int dueTime, int period)
  bool Change(TimeSpan dueTime, TimeSpan period)
  bool Change(UInt32 dueTime, UInt32 period)
  void Dispose()
  bool Change(long dueTime, long period)
  bool Change(long dueTime, long period, bool first)
  bool Dispose(WaitHandle notifyObject)
  ValueTask DisposeAsync()
  void KeepRootedWhileScheduled()
  long GetTimeMonotonic()
--------------------------------------------------
Класс: System.Threading.TimerCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object state)
  IAsyncResult BeginInvoke(object state, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Threading.Volatile
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Read(Boolean& location)
  void Write(Boolean& location, bool value)
  byte Read(Byte& location)
  void Write(Byte& location, byte value)
  short Read(Int16& location)
  void Write(Int16& location, short value)
  int Read(Int32& location)
  void Write(Int32& location, int value)
  IntPtr Read(IntPtr& location)
  void Write(IntPtr& location, IntPtr value)
  sbyte Read(SByte& location)
  void Write(SByte& location, sbyte value)
  float Read(Single& location)
  void Write(Single& location, float value)
  ushort Read(UInt16& location)
  void Write(UInt16& location, ushort value)
  UInt32 Read(UInt32& location)
  void Write(UInt32& location, UInt32 value)
  UIntPtr Read(UIntPtr& location)
  void Write(UIntPtr& location, UIntPtr value)
  T Read(T& location)
  void Write(T& location, T value)
  long Read(Int64& location)
  ulong Read(UInt64& location)
  double Read(Double& location)
  void Write(Int64& location, long value)
  void Write(UInt64& location, ulong value)
  void Write(Double& location, double value)
--------------------------------------------------
Класс: System.Threading.Tasks.TaskCanceledException
Наследуется от: OperationCanceledException
Поля:
  Task _canceledTask
Свойства:
  Task Task
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, Exception innerException, CancellationToken token)
  void .ctor(Task task)
  void .ctor(SerializationInfo info, StreamingContext context)
  Task get_Task()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskCompletionSource`1
Наследуется от: object
Поля:
  Task`1<TResult> _task
Свойства:
  Task`1<TResult> Task
Методы:
  void .ctor()
  void .ctor(TaskCreationOptions creationOptions)
  void .ctor(object state)
  void .ctor(object state, TaskCreationOptions creationOptions)
  Task`1<TResult> get_Task()
  void SpinUntilCompleted()
  bool TrySetException(Exception exception)
  bool TrySetException(IEnumerable`1<Exception> exceptions)
  void SetException(Exception exception)
  void SetException(IEnumerable`1<Exception> exceptions)
  bool TrySetResult(TResult result)
  void SetResult(TResult result)
  bool TrySetCanceled()
  bool TrySetCanceled(CancellationToken cancellationToken)
  void SetCanceled()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskSchedulerException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(Exception innerException)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.Tasks.TaskToApm
Наследуется от: object
Поля:
Свойства:
Методы:
  IAsyncResult Begin(Task task, AsyncCallback callback, object state)
  void End(IAsyncResult asyncResult)
  TResult End(IAsyncResult asyncResult)
  void InvokeCallbackWhenTaskCompletes(Task antecedent, AsyncCallback callback, IAsyncResult asyncResult)
--------------------------------------------------
Класс: System.Threading.Tasks.ValueTask
Наследуется от: ValueType
Поля:
  Task s_canceledTask
  object _obj
  short _token
  bool _continueOnCapturedContext
Свойства:
  Task CompletedTask
  bool IsCompleted
  bool IsCompletedSuccessfully
  bool IsFaulted
  bool IsCanceled
Методы:
  Task get_CompletedTask()
  void .ctor(Task task)
  void .ctor(IValueTaskSource source, short token)
  void .ctor(object obj, short token, bool continueOnCapturedContext)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(ValueTask other)
  bool op_Equality(ValueTask left, ValueTask right)
  bool op_Inequality(ValueTask left, ValueTask right)
  Task AsTask()
  ValueTask Preserve()
  Task GetTaskForValueTaskSource(IValueTaskSource t)
  bool get_IsCompleted()
  bool get_IsCompletedSuccessfully()
  bool get_IsFaulted()
  bool get_IsCanceled()
  void ThrowIfCompletedUnsuccessfully()
  ValueTaskAwaiter GetAwaiter()
  ConfiguredValueTaskAwaitable ConfigureAwait(bool continueOnCapturedContext)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ValueTask`1
Наследуется от: ValueType
Поля:
  Task`1<TResult> s_canceledTask
  object _obj
  TResult _result
  short _token
  bool _continueOnCapturedContext
Свойства:
  bool IsCompleted
  bool IsCompletedSuccessfully
  bool IsFaulted
  bool IsCanceled
  TResult Result
Методы:
  void .ctor(TResult result)
  void .ctor(Task`1<TResult> task)
  void .ctor(IValueTaskSource`1<TResult> source, short token)
  void .ctor(object obj, TResult result, short token, bool continueOnCapturedContext)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(ValueTask`1<TResult> other)
  bool op_Equality(ValueTask`1<TResult> left, ValueTask`1<TResult> right)
  bool op_Inequality(ValueTask`1<TResult> left, ValueTask`1<TResult> right)
  Task`1<TResult> AsTask()
  ValueTask`1<TResult> Preserve()
  Task`1<TResult> GetTaskForValueTaskSource(IValueTaskSource`1<TResult> t)
  bool get_IsCompleted()
  bool get_IsCompletedSuccessfully()
  bool get_IsFaulted()
  bool get_IsCanceled()
  TResult get_Result()
  ValueTaskAwaiter`1<TResult> GetAwaiter()
  ConfiguredValueTaskAwaitable`1<TResult> ConfigureAwait(bool continueOnCapturedContext)
  string ToString()
--------------------------------------------------
Класс: System.Threading.Tasks.BeginEndAwaitableAdapter
Наследуется от: RendezvousAwaitable`1<IAsyncResult>
Поля:
  AsyncCallback Callback
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskAwaiters
Наследуется от: object
Поля:
Свойства:
Методы:
  ForceAsyncAwaiter ForceAsync(Task task)
--------------------------------------------------
Класс: System.Threading.Tasks.ForceAsyncAwaiter
Наследуется от: ValueType
Поля:
  Task _task
Свойства:
  bool IsCompleted
Методы:
  void .ctor(Task task)
  ForceAsyncAwaiter GetAwaiter()
  bool get_IsCompleted()
  void GetResult()
  void OnCompleted(Action action)
  void UnsafeOnCompleted(Action action)
--------------------------------------------------
Класс: System.Threading.Tasks.RendezvousAwaitable`1
Наследуется от: object
Поля:
  Action s_completionSentinel
  Action _continuation
  ExceptionDispatchInfo _error
  TResult _result
  bool <RunContinuationsAsynchronously>k__BackingField
Свойства:
  bool RunContinuationsAsynchronously
  bool IsCompleted
Методы:
  bool get_RunContinuationsAsynchronously()
  void set_RunContinuationsAsynchronously(bool value)
  RendezvousAwaitable`1<TResult> GetAwaiter()
  bool get_IsCompleted()
  TResult GetResult()
  void SetResult(TResult result)
  void SetCanceled(CancellationToken token)
  void SetException(Exception exception)
  void NotifyAwaiter()
  void OnCompleted(Action continuation)
  void UnsafeOnCompleted(Action continuation)
  void AssertResultConsistency(bool expectedCompleted)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.Box`1
Наследуется от: object
Поля:
  T Value
Свойства:
Методы:
  void .ctor(T value)
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelOptions
Наследуется от: object
Поля:
  TaskScheduler _scheduler
  int _maxDegreeOfParallelism
  CancellationToken _cancellationToken
Свойства:
  TaskScheduler TaskScheduler
  TaskScheduler EffectiveTaskScheduler
  int MaxDegreeOfParallelism
  CancellationToken CancellationToken
  int EffectiveMaxConcurrencyLevel
Методы:
  void .ctor()
  TaskScheduler get_TaskScheduler()
  void set_TaskScheduler(TaskScheduler value)
  TaskScheduler get_EffectiveTaskScheduler()
  int get_MaxDegreeOfParallelism()
  void set_MaxDegreeOfParallelism(int value)
  CancellationToken get_CancellationToken()
  void set_CancellationToken(CancellationToken value)
  int get_EffectiveMaxConcurrencyLevel()
--------------------------------------------------
Класс: System.Threading.Tasks.Parallel
Наследуется от: object
Поля:
  int s_forkJoinContextID
  int DEFAULT_LOOP_STRIDE
  ParallelOptions s_defaultParallelOptions
Свойства:
Методы:
  void Invoke(Action[] actions)
  void Invoke(ParallelOptions parallelOptions, Action[] actions)
  ParallelLoopResult For(int fromInclusive, int toExclusive, Action`1<int> body)
  ParallelLoopResult For(long fromInclusive, long toExclusive, Action`1<long> body)
  ParallelLoopResult For(int fromInclusive, int toExclusive, ParallelOptions parallelOptions, Action`1<int> body)
  ParallelLoopResult For(long fromInclusive, long toExclusive, ParallelOptions parallelOptions, Action`1<long> body)
  ParallelLoopResult For(int fromInclusive, int toExclusive, Action`2<int, ParallelLoopState> body)
  ParallelLoopResult For(long fromInclusive, long toExclusive, Action`2<long, ParallelLoopState> body)
  ParallelLoopResult For(int fromInclusive, int toExclusive, ParallelOptions parallelOptions, Action`2<int, ParallelLoopState> body)
  ParallelLoopResult For(long fromInclusive, long toExclusive, ParallelOptions parallelOptions, Action`2<long, ParallelLoopState> body)
  ParallelLoopResult For(int fromInclusive, int toExclusive, Func`1<TLocal> localInit, Func`4<int, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult For(long fromInclusive, long toExclusive, Func`1<TLocal> localInit, Func`4<long, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult For(int fromInclusive, int toExclusive, ParallelOptions parallelOptions, Func`1<TLocal> localInit, Func`4<int, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult For(long fromInclusive, long toExclusive, ParallelOptions parallelOptions, Func`1<TLocal> localInit, Func`4<long, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  bool CheckTimeoutReached(int timeoutOccursAt)
  int ComputeTimeoutPoint(int timeoutLength)
  ParallelLoopResult ForWorker(int fromInclusive, int toExclusive, ParallelOptions parallelOptions, Action`1<int> body, Action`2<int, ParallelLoopState> bodyWithState, Func`4<int, ParallelLoopState, TLocal, TLocal> bodyWithLocal, Func`1<TLocal> localInit, Action`1<TLocal> localFinally)
  ParallelLoopResult ForWorker64(long fromInclusive, long toExclusive, ParallelOptions parallelOptions, Action`1<long> body, Action`2<long, ParallelLoopState> bodyWithState, Func`4<long, ParallelLoopState, TLocal, TLocal> bodyWithLocal, Func`1<TLocal> localInit, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, Action`1<TSource> body)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, ParallelOptions parallelOptions, Action`1<TSource> body)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, Action`2<TSource, ParallelLoopState> body)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, ParallelOptions parallelOptions, Action`2<TSource, ParallelLoopState> body)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, Action`3<TSource, ParallelLoopState, long> body)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, ParallelOptions parallelOptions, Action`3<TSource, ParallelLoopState, long> body)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, Func`1<TLocal> localInit, Func`4<TSource, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, ParallelOptions parallelOptions, Func`1<TLocal> localInit, Func`4<TSource, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, Func`1<TLocal> localInit, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(IEnumerable`1<TSource> source, ParallelOptions parallelOptions, Func`1<TLocal> localInit, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEachWorker(IEnumerable`1<TSource> source, ParallelOptions parallelOptions, Action`1<TSource> body, Action`2<TSource, ParallelLoopState> bodyWithState, Action`3<TSource, ParallelLoopState, long> bodyWithStateAndIndex, Func`4<TSource, ParallelLoopState, TLocal, TLocal> bodyWithStateAndLocal, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> bodyWithEverything, Func`1<TLocal> localInit, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEachWorker(TSource[] array, ParallelOptions parallelOptions, Action`1<TSource> body, Action`2<TSource, ParallelLoopState> bodyWithState, Action`3<TSource, ParallelLoopState, long> bodyWithStateAndIndex, Func`4<TSource, ParallelLoopState, TLocal, TLocal> bodyWithStateAndLocal, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> bodyWithEverything, Func`1<TLocal> localInit, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEachWorker(IList`1<TSource> list, ParallelOptions parallelOptions, Action`1<TSource> body, Action`2<TSource, ParallelLoopState> bodyWithState, Action`3<TSource, ParallelLoopState, long> bodyWithStateAndIndex, Func`4<TSource, ParallelLoopState, TLocal, TLocal> bodyWithStateAndLocal, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> bodyWithEverything, Func`1<TLocal> localInit, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(Partitioner`1<TSource> source, Action`1<TSource> body)
  ParallelLoopResult ForEach(Partitioner`1<TSource> source, Action`2<TSource, ParallelLoopState> body)
  ParallelLoopResult ForEach(OrderablePartitioner`1<TSource> source, Action`3<TSource, ParallelLoopState, long> body)
  ParallelLoopResult ForEach(Partitioner`1<TSource> source, Func`1<TLocal> localInit, Func`4<TSource, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(OrderablePartitioner`1<TSource> source, Func`1<TLocal> localInit, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(Partitioner`1<TSource> source, ParallelOptions parallelOptions, Action`1<TSource> body)
  ParallelLoopResult ForEach(Partitioner`1<TSource> source, ParallelOptions parallelOptions, Action`2<TSource, ParallelLoopState> body)
  ParallelLoopResult ForEach(OrderablePartitioner`1<TSource> source, ParallelOptions parallelOptions, Action`3<TSource, ParallelLoopState, long> body)
  ParallelLoopResult ForEach(Partitioner`1<TSource> source, ParallelOptions parallelOptions, Func`1<TLocal> localInit, Func`4<TSource, ParallelLoopState, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult ForEach(OrderablePartitioner`1<TSource> source, ParallelOptions parallelOptions, Func`1<TLocal> localInit, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> body, Action`1<TLocal> localFinally)
  ParallelLoopResult PartitionerForEachWorker(Partitioner`1<TSource> source, ParallelOptions parallelOptions, Action`1<TSource> simpleBody, Action`2<TSource, ParallelLoopState> bodyWithState, Action`3<TSource, ParallelLoopState, long> bodyWithStateAndIndex, Func`4<TSource, ParallelLoopState, TLocal, TLocal> bodyWithStateAndLocal, Func`5<TSource, ParallelLoopState, long, TLocal, TLocal> bodyWithEverything, Func`1<TLocal> localInit, Action`1<TLocal> localFinally)
  OperationCanceledException ReduceToSingleCancellationException(ICollection exceptions, CancellationToken cancelToken)
  void ThrowSingleCancellationExceptionOrOtherException(ICollection exceptions, CancellationToken cancelToken, Exception otherException)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelEtwProvider
Наследуется от: EventSource
Поля:
  ParallelEtwProvider Log
  EventKeywords ALL_KEYWORDS
  int PARALLELLOOPBEGIN_ID
  int PARALLELLOOPEND_ID
  int PARALLELINVOKEBEGIN_ID
  int PARALLELINVOKEEND_ID
  int PARALLELFORK_ID
  int PARALLELJOIN_ID
Свойства:
Методы:
  void .ctor()
  void ParallelLoopBegin(int OriginatingTaskSchedulerID, int OriginatingTaskID, int ForkJoinContextID, ForkJoinOperationType OperationType, long InclusiveFrom, long ExclusiveTo)
  void ParallelLoopEnd(int OriginatingTaskSchedulerID, int OriginatingTaskID, int ForkJoinContextID, long TotalIterations)
  void ParallelInvokeBegin(int OriginatingTaskSchedulerID, int OriginatingTaskID, int ForkJoinContextID, ForkJoinOperationType OperationType, int ActionCount)
  void ParallelInvokeEnd(int OriginatingTaskSchedulerID, int OriginatingTaskID, int ForkJoinContextID)
  void ParallelFork(int OriginatingTaskSchedulerID, int OriginatingTaskID, int ForkJoinContextID)
  void ParallelJoin(int OriginatingTaskSchedulerID, int OriginatingTaskID, int ForkJoinContextID)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopState
Наследуется от: object
Поля:
  ParallelLoopStateFlags _flagsBase
Свойства:
  bool InternalShouldExitCurrentIteration
  bool ShouldExitCurrentIteration
  bool IsStopped
  bool IsExceptional
  Nullable`1<long> InternalLowestBreakIteration
  Nullable`1<long> LowestBreakIteration
Методы:
  void .ctor(ParallelLoopStateFlags fbase)
  bool get_InternalShouldExitCurrentIteration()
  bool get_ShouldExitCurrentIteration()
  bool get_IsStopped()
  bool get_IsExceptional()
  Nullable`1<long> get_InternalLowestBreakIteration()
  Nullable`1<long> get_LowestBreakIteration()
  void Stop()
  void InternalBreak()
  void Break()
  void Break(int iteration, ParallelLoopStateFlags32 pflags)
  void Break(long iteration, ParallelLoopStateFlags64 pflags)
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopState32
Наследуется от: ParallelLoopState
Поля:
  ParallelLoopStateFlags32 _sharedParallelStateFlags
  int _currentIteration
Свойства:
  int CurrentIteration
  bool InternalShouldExitCurrentIteration
  Nullable`1<long> InternalLowestBreakIteration
Методы:
  void .ctor(ParallelLoopStateFlags32 sharedParallelStateFlags)
  int get_CurrentIteration()
  void set_CurrentIteration(int value)
  bool get_InternalShouldExitCurrentIteration()
  Nullable`1<long> get_InternalLowestBreakIteration()
  void InternalBreak()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopState64
Наследуется от: ParallelLoopState
Поля:
  ParallelLoopStateFlags64 _sharedParallelStateFlags
  long _currentIteration
Свойства:
  long CurrentIteration
  bool InternalShouldExitCurrentIteration
  Nullable`1<long> InternalLowestBreakIteration
Методы:
  void .ctor(ParallelLoopStateFlags64 sharedParallelStateFlags)
  long get_CurrentIteration()
  void set_CurrentIteration(long value)
  bool get_InternalShouldExitCurrentIteration()
  Nullable`1<long> get_InternalLowestBreakIteration()
  void InternalBreak()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopStateFlags
Наследуется от: object
Поля:
  int ParallelLoopStateNone
  int ParallelLoopStateExceptional
  int ParallelLoopStateBroken
  int ParallelLoopStateStopped
  int ParallelLoopStateCanceled
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _loopStateFlags
Свойства:
  int LoopStateFlags
Методы:
  int get_LoopStateFlags()
  bool AtomicLoopStateUpdate(int newState, int illegalStates)
  bool AtomicLoopStateUpdate(int newState, int illegalStates, Int32& oldState)
  void SetExceptional()
  void Stop()
  bool Cancel()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopStateFlags32
Наследуется от: ParallelLoopStateFlags
Поля:
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _lowestBreakIteration
Свойства:
  int LowestBreakIteration
  Nullable`1<long> NullableLowestBreakIteration
Методы:
  int get_LowestBreakIteration()
  Nullable`1<long> get_NullableLowestBreakIteration()
  bool ShouldExitLoop(int CallerIteration)
  bool ShouldExitLoop()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopStateFlags64
Наследуется от: ParallelLoopStateFlags
Поля:
  long _lowestBreakIteration
Свойства:
  long LowestBreakIteration
  Nullable`1<long> NullableLowestBreakIteration
Методы:
  long get_LowestBreakIteration()
  Nullable`1<long> get_NullableLowestBreakIteration()
  bool ShouldExitLoop(long CallerIteration)
  bool ShouldExitLoop()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.ParallelLoopResult
Наследуется от: ValueType
Поля:
  bool _completed
  Nullable`1<long> _lowestBreakIteration
Свойства:
  bool IsCompleted
  Nullable`1<long> LowestBreakIteration
Методы:
  bool get_IsCompleted()
  Nullable`1<long> get_LowestBreakIteration()
--------------------------------------------------
Класс: System.Threading.Tasks.IndexRange
Наследуется от: ValueType
Поля:
  long _nFromInclusive
  long _nToExclusive
  Box`1 modreq(System.Runtime.CompilerServices.IsVolatile) _nSharedCurrentIndexOffset
  int _bRangeFinished
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.RangeWorker
Наследуется от: ValueType
Поля:
  IndexRange[] _indexRanges
  int _nCurrentIndexRange
  long _nStep
  long _nIncrementValue
  long _nMaxIncrementValue
  bool _use32BitCurrentIndex
Свойства:
  bool IsInitialized
Методы:
  bool get_IsInitialized()
  void .ctor(IndexRange[] ranges, int nInitialRange, long nStep, bool use32BitCurrentIndex)
  bool FindNewWork(Int64& nFromInclusiveLocal, Int64& nToExclusiveLocal)
  bool FindNewWork32(Int32& nFromInclusiveLocal32, Int32& nToExclusiveLocal32)
--------------------------------------------------
Класс: System.Threading.Tasks.RangeManager
Наследуется от: object
Поля:
  IndexRange[] _indexRanges
  bool _use32BitCurrentIndex
  int _nCurrentIndexRangeToAssign
  long _nStep
Свойства:
Методы:
  void .ctor(long nFromInclusive, long nToExclusive, long nStep, int nNumExpectedWorkers)
  RangeWorker RegisterNewWorker()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskReplicator
Наследуется от: object
Поля:
  TaskScheduler _scheduler
  bool _stopOnFirstFailure
  ConcurrentQueue`1<Replica> _pendingReplicas
  ConcurrentQueue`1<Exception> _exceptions
  bool _stopReplicating
  int CooperativeMultitaskingTaskTimeout_Min
  int CooperativeMultitaskingTaskTimeout_Increment
  int CooperativeMultitaskingTaskTimeout_RootTask
Свойства:
Методы:
  void .ctor(ParallelOptions options, bool stopOnFirstFailure)
  void Run(ReplicatableUserAction`1<TState> action, ParallelOptions options, bool stopOnFirstFailure)
  int GenerateCooperativeMultitaskingTaskTimeout()
--------------------------------------------------
Класс: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
Наследуется от: object
Поля:
  ThreadLocal`1<ProcessingMode> m_threadProcessingMode
  ConcurrentExclusiveTaskScheduler m_concurrentTaskScheduler
  ConcurrentExclusiveTaskScheduler m_exclusiveTaskScheduler
  TaskScheduler m_underlyingTaskScheduler
  int m_maxConcurrencyLevel
  int m_maxItemsPerTask
  int m_processingCount
  CompletionState m_completionState
  int UNLIMITED_PROCESSING
  int EXCLUSIVE_PROCESSING_SENTINEL
  int DEFAULT_MAXITEMSPERTASK
Свойства:
  int DefaultMaxConcurrencyLevel
  object ValueLock
  Task Completion
  bool CompletionRequested
  bool ReadyToComplete
  TaskScheduler ConcurrentScheduler
  TaskScheduler ExclusiveScheduler
  int ConcurrentTaskCountForDebugger
  int ExclusiveTaskCountForDebugger
  ProcessingMode ModeForDebugger
Методы:
  int get_DefaultMaxConcurrencyLevel()
  object get_ValueLock()
  void .ctor()
  void .ctor(TaskScheduler taskScheduler)
  void .ctor(TaskScheduler taskScheduler, int maxConcurrencyLevel)
  void .ctor(TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask)
  void Complete()
  Task get_Completion()
  CompletionState EnsureCompletionStateInitialized()
  bool get_CompletionRequested()
  void RequestCompletion()
  void CleanupStateIfCompletingAndQuiesced()
  bool get_ReadyToComplete()
  void CompleteTaskAsync()
  void FaultWithTask(Task faultedTask)
  TaskScheduler get_ConcurrentScheduler()
  TaskScheduler get_ExclusiveScheduler()
  int get_ConcurrentTaskCountForDebugger()
  int get_ExclusiveTaskCountForDebugger()
  void ProcessAsyncIfNecessary(bool fairly)
  void ProcessExclusiveTasks()
  void ProcessConcurrentTasks()
  ProcessingMode get_ModeForDebugger()
  void ContractAssertMonitorStatus(object syncObj, bool held)
  TaskCreationOptions GetCreationOptionsForTask(bool isReplacementReplica)
--------------------------------------------------
Класс: System.Threading.Tasks.DebuggerSupport
Наследуется от: object
Поля:
  LowLevelDictionary`2<int, Task> s_activeTasks
  object s_activeTasksLock
Свойства:
  bool LoggingOn
Методы:
  bool get_LoggingOn()
  void TraceOperationCreation(CausalityTraceLevel traceLevel, Task task, string operationName, ulong relatedContext)
  void TraceOperationCompletion(CausalityTraceLevel traceLevel, Task task, AsyncStatus status)
  void TraceOperationRelation(CausalityTraceLevel traceLevel, Task task, CausalityRelation relation)
  void TraceSynchronousWorkStart(CausalityTraceLevel traceLevel, Task task, CausalitySynchronousWork work)
  void TraceSynchronousWorkCompletion(CausalityTraceLevel traceLevel, CausalitySynchronousWork work)
  void AddToActiveTasks(Task task)
  void AddToActiveTasksNonInlined(Task task)
  void RemoveFromActiveTasks(Task task)
  void RemoveFromActiveTasksNonInlined(Task task)
  Task GetActiveTaskFromId(int taskId)
  Task GetTaskIfDebuggingEnabled(AsyncVoidMethodBuilder builder)
  Task GetTaskIfDebuggingEnabled(AsyncTaskMethodBuilder builder)
  Task GetTaskIfDebuggingEnabled(AsyncTaskMethodBuilder`1<TResult> builder)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.Task`1
Наследуется от: Task
Поля:
  TResult m_result
  TaskFactory`1<TResult> s_defaultFactory
Свойства:
  string DebuggerDisplayResultDescription
  string DebuggerDisplayMethodDescription
  TResult Result
  TResult ResultOnSuccess
  TaskFactory`1<TResult> Factory
Методы:
  void .ctor()
  void .ctor(object state, TaskCreationOptions options)
  void .ctor(TResult result)
  void .ctor(bool canceled, TResult result, TaskCreationOptions creationOptions, CancellationToken ct)
  void .ctor(Func`1<TResult> function)
  void .ctor(Func`1<TResult> function, CancellationToken cancellationToken)
  void .ctor(Func`1<TResult> function, TaskCreationOptions creationOptions)
  void .ctor(Func`1<TResult> function, CancellationToken cancellationToken, TaskCreationOptions creationOptions)
  void .ctor(Func`2<object, TResult> function, object state)
  void .ctor(Func`2<object, TResult> function, object state, CancellationToken cancellationToken)
  void .ctor(Func`2<object, TResult> function, object state, TaskCreationOptions creationOptions)
  void .ctor(Func`2<object, TResult> function, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions)
  void .ctor(Func`1<TResult> valueSelector, Task parent, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  void .ctor(Delegate valueSelector, object state, Task parent, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  Task`1<TResult> StartNew(Task parent, Func`1<TResult> function, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  Task`1<TResult> StartNew(Task parent, Func`2<object, TResult> function, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  string get_DebuggerDisplayResultDescription()
  string get_DebuggerDisplayMethodDescription()
  bool TrySetResult(TResult result)
  void DangerousSetResult(TResult result)
  TResult get_Result()
  TResult get_ResultOnSuccess()
  TResult GetResultCore(bool waitCompletionNotification)
  TaskFactory`1<TResult> get_Factory()
  void InnerInvoke()
  TaskAwaiter`1<TResult> GetAwaiter()
  ConfiguredTaskAwaitable`1<TResult> ConfigureAwait(bool continueOnCapturedContext)
  Task ContinueWith(Action`1<Task`1<TResult>> continuationAction)
  Task ContinueWith(Action`1<Task`1<TResult>> continuationAction, CancellationToken cancellationToken)
  Task ContinueWith(Action`1<Task`1<TResult>> continuationAction, TaskScheduler scheduler)
  Task ContinueWith(Action`1<Task`1<TResult>> continuationAction, TaskContinuationOptions continuationOptions)
  Task ContinueWith(Action`1<Task`1<TResult>> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task ContinueWith(Action`1<Task`1<TResult>> continuationAction, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  Task ContinueWith(Action`2<Task`1<TResult>, object> continuationAction, object state)
  Task ContinueWith(Action`2<Task`1<TResult>, object> continuationAction, object state, CancellationToken cancellationToken)
  Task ContinueWith(Action`2<Task`1<TResult>, object> continuationAction, object state, TaskScheduler scheduler)
  Task ContinueWith(Action`2<Task`1<TResult>, object> continuationAction, object state, TaskContinuationOptions continuationOptions)
  Task ContinueWith(Action`2<Task`1<TResult>, object> continuationAction, object state, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task ContinueWith(Action`2<Task`1<TResult>, object> continuationAction, object state, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  Task`1<TNewResult> ContinueWith(Func`2<Task`1<TResult>, TNewResult> continuationFunction)
  Task`1<TNewResult> ContinueWith(Func`2<Task`1<TResult>, TNewResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TNewResult> ContinueWith(Func`2<Task`1<TResult>, TNewResult> continuationFunction, TaskScheduler scheduler)
  Task`1<TNewResult> ContinueWith(Func`2<Task`1<TResult>, TNewResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TNewResult> ContinueWith(Func`2<Task`1<TResult>, TNewResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TNewResult> ContinueWith(Func`2<Task`1<TResult>, TNewResult> continuationFunction, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  Task`1<TNewResult> ContinueWith(Func`3<Task`1<TResult>, object, TNewResult> continuationFunction, object state)
  Task`1<TNewResult> ContinueWith(Func`3<Task`1<TResult>, object, TNewResult> continuationFunction, object state, CancellationToken cancellationToken)
  Task`1<TNewResult> ContinueWith(Func`3<Task`1<TResult>, object, TNewResult> continuationFunction, object state, TaskScheduler scheduler)
  Task`1<TNewResult> ContinueWith(Func`3<Task`1<TResult>, object, TNewResult> continuationFunction, object state, TaskContinuationOptions continuationOptions)
  Task`1<TNewResult> ContinueWith(Func`3<Task`1<TResult>, object, TNewResult> continuationFunction, object state, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TNewResult> ContinueWith(Func`3<Task`1<TResult>, object, TNewResult> continuationFunction, object state, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
--------------------------------------------------
Класс: System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1
Наследуется от: object
Поля:
  Task`1<TResult> m_task
Свойства:
  TResult Result
  object AsyncState
  TaskCreationOptions CreationOptions
  Exception Exception
  int Id
  bool CancellationPending
  TaskStatus Status
Методы:
  void .ctor(Task`1<TResult> task)
  TResult get_Result()
  object get_AsyncState()
  TaskCreationOptions get_CreationOptions()
  Exception get_Exception()
  int get_Id()
  bool get_CancellationPending()
  TaskStatus get_Status()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskFactory`1
Наследуется от: object
Поля:
  CancellationToken m_defaultCancellationToken
  TaskScheduler m_defaultScheduler
  TaskCreationOptions m_defaultCreationOptions
  TaskContinuationOptions m_defaultContinuationOptions
Свойства:
  TaskScheduler DefaultScheduler
  CancellationToken CancellationToken
  TaskScheduler Scheduler
  TaskCreationOptions CreationOptions
  TaskContinuationOptions ContinuationOptions
Методы:
  TaskScheduler get_DefaultScheduler()
  TaskScheduler GetDefaultScheduler(Task currTask)
  void .ctor()
  void .ctor(CancellationToken cancellationToken)
  void .ctor(TaskScheduler scheduler)
  void .ctor(TaskCreationOptions creationOptions, TaskContinuationOptions continuationOptions)
  void .ctor(CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  CancellationToken get_CancellationToken()
  TaskScheduler get_Scheduler()
  TaskCreationOptions get_CreationOptions()
  TaskContinuationOptions get_ContinuationOptions()
  Task`1<TResult> StartNew(Func`1<TResult> function)
  Task`1<TResult> StartNew(Func`1<TResult> function, CancellationToken cancellationToken)
  Task`1<TResult> StartNew(Func`1<TResult> function, TaskCreationOptions creationOptions)
  Task`1<TResult> StartNew(Func`1<TResult> function, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state, CancellationToken cancellationToken)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  void FromAsyncCoreLogic(IAsyncResult iar, Func`2<IAsyncResult, TResult> endFunction, Action`1<IAsyncResult> endAction, Task`1<TResult> promise, bool requiresSynchronization)
  Task`1<TResult> FromAsync(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endMethod)
  Task`1<TResult> FromAsync(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endMethod, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endMethod, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task`1<TResult> FromAsyncImpl(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endFunction, Action`1<IAsyncResult> endAction, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task`1<TResult> FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, object state)
  Task`1<TResult> FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsyncImpl(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endFunction, Action`1<IAsyncResult> endAction, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, object state)
  Task`1<TResult> FromAsync(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsyncImpl(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endFunction, Action`1<IAsyncResult> endAction, TArg1 arg1, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, object state)
  Task`1<TResult> FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsyncImpl(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endFunction, Action`1<IAsyncResult> endAction, TArg1 arg1, TArg2 arg2, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state)
  Task`1<TResult> FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsyncImpl(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endFunction, Action`1<IAsyncResult> endAction, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsyncTrim(TInstance thisRef, TArgs args, Func`5<TInstance, TArgs, AsyncCallback, object, IAsyncResult> beginMethod, Func`3<TInstance, IAsyncResult, TResult> endMethod)
  Task`1<TResult> CreateCanceledTask(TaskContinuationOptions continuationOptions, CancellationToken ct)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAllImpl(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAllImpl(Task`1[] tasks, Action`1<Task`1[]> continuationAction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAllImpl(Task[] tasks, Func`2<Task[], TResult> continuationFunction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAllImpl(Task[] tasks, Action`1<Task[]> continuationAction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAnyImpl(Task[] tasks, Action`1<Task> continuationAction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAnyImpl(Task[] tasks, Func`2<Task, TResult> continuationFunction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAnyImpl(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAnyImpl(Task`1[] tasks, Action`1<Task`1<TAntecedentResult>> continuationAction, TaskContinuationOptions continuationOptions, CancellationToken cancellationToken, TaskScheduler scheduler)
--------------------------------------------------
Класс: System.Threading.Tasks.GenericDelegateCache`2
Наследуется от: object
Поля:
  Func`3<Task`1<Task>, object, TResult> CWAnyFuncDelegate
  Func`3<Task`1<Task>, object, TResult> CWAnyActionDelegate
  Func`3<Task`1<Task`1[]>, object, TResult> CWAllFuncDelegate
  Func`3<Task`1<Task`1[]>, object, TResult> CWAllActionDelegate
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.IProducerConsumerQueue`1
Поля:
Свойства:
  bool IsEmpty
  int Count
Методы:
  void Enqueue(T item)
  bool TryDequeue(T& result)
  bool get_IsEmpty()
  int get_Count()
  int GetCountSafe(object syncObj)
--------------------------------------------------
Класс: System.Threading.Tasks.MultiProducerMultiConsumerQueue`1
Наследуется от: ConcurrentQueue`1<T>
Поля:
Свойства:
  bool System.Threading.Tasks.IProducerConsumerQueue<T>.IsEmpty
  int System.Threading.Tasks.IProducerConsumerQueue<T>.Count
Методы:
  void System.Threading.Tasks.IProducerConsumerQueue<T>.Enqueue(T item)
  bool System.Threading.Tasks.IProducerConsumerQueue<T>.TryDequeue(T& result)
  bool System.Threading.Tasks.IProducerConsumerQueue<T>.get_IsEmpty()
  int System.Threading.Tasks.IProducerConsumerQueue<T>.get_Count()
  int System.Threading.Tasks.IProducerConsumerQueue<T>.GetCountSafe(object syncObj)
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.SingleProducerSingleConsumerQueue`1
Наследуется от: object
Поля:
  int INIT_SEGMENT_SIZE
  int MAX_SEGMENT_SIZE
  Segment modreq(System.Runtime.CompilerServices.IsVolatile) m_head
  Segment modreq(System.Runtime.CompilerServices.IsVolatile) m_tail
Свойства:
  bool IsEmpty
  int Count
Методы:
  void .ctor()
  void Enqueue(T item)
  void EnqueueSlow(T item, Segment& segment)
  bool TryDequeue(T& result)
  bool TryDequeueSlow(Segment& segment, T[]& array, T& result)
  bool TryPeek(T& result)
  bool TryPeekSlow(Segment& segment, T[]& array, T& result)
  bool TryDequeueIf(Predicate`1<T> predicate, T& result)
  bool TryDequeueIfSlow(Predicate`1<T> predicate, Segment& segment, T[]& array, T& result)
  void Clear()
  bool get_IsEmpty()
  IEnumerator`1<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int get_Count()
  int System.Threading.Tasks.IProducerConsumerQueue<T>.GetCountSafe(object syncObj)
--------------------------------------------------
Класс: System.Threading.Tasks.PaddingHelpers
Наследуется от: object
Поля:
  int CACHE_LINE_SIZE
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.PaddingFor32
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.TaskStatus
Наследуется от: Enum
Поля:
  int value__
  TaskStatus Created
  TaskStatus WaitingForActivation
  TaskStatus WaitingToRun
  TaskStatus Running
  TaskStatus WaitingForChildrenToComplete
  TaskStatus RanToCompletion
  TaskStatus Canceled
  TaskStatus Faulted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.Task
Наследуется от: object
Поля:
  int s_taskIdCounter
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_taskId
  Delegate m_action
  object m_stateObject
  TaskScheduler m_taskScheduler
  Task m_parent
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_stateFlags
  int OptionsMask
  int TASK_STATE_STARTED
  int TASK_STATE_DELEGATE_INVOKED
  int TASK_STATE_DISPOSED
  int TASK_STATE_EXCEPTIONOBSERVEDBYPARENT
  int TASK_STATE_CANCELLATIONACKNOWLEDGED
  int TASK_STATE_FAULTED
  int TASK_STATE_CANCELED
  int TASK_STATE_WAITING_ON_CHILDREN
  int TASK_STATE_RAN_TO_COMPLETION
  int TASK_STATE_WAITINGFORACTIVATION
  int TASK_STATE_COMPLETION_RESERVED
  int TASK_STATE_THREAD_WAS_ABORTED
  int TASK_STATE_WAIT_COMPLETION_NOTIFICATION
  int TASK_STATE_COMPLETED_MASK
  int CANCELLATION_REQUESTED
  Object modreq(System.Runtime.CompilerServices.IsVolatile) m_continuationObject
  object s_taskCompletionSentinel
  bool s_asyncDebuggingEnabled
  ContingentProperties modreq(System.Runtime.CompilerServices.IsVolatile) m_contingentProperties
  Action`1<object> s_taskCancelCallback
  Task t_currentTask
  StackGuard t_stackGuard
  Func`1<ContingentProperties> s_createContingentProperties
  TaskFactory <Factory>k__BackingField
  Task <CompletedTask>k__BackingField
  Predicate`1<Task> s_IsExceptionObservedByParentPredicate
  ContextCallback s_ecCallback
  Predicate`1<object> s_IsTaskContinuationNullPredicate
  Dictionary`2<int, Task> s_currentActiveTasks
  object s_activeTasksLock
Свойства:
  Task ParentForDebugger
  int StateFlagsForDebugger
  string DebuggerDisplayMethodDescription
  TaskCreationOptions Options
  bool IsWaitNotificationEnabledOrNotRanToCompletion
  bool ShouldNotifyDebuggerOfWaitCompletion
  bool IsWaitNotificationEnabled
  int Id
  Nullable`1<int> CurrentId
  Task InternalCurrent
  StackGuard CurrentStackGuard
  AggregateException Exception
  TaskStatus Status
  bool IsCanceled
  bool IsCancellationRequested
  CancellationToken CancellationToken
  bool IsCancellationAcknowledged
  bool IsCompleted
  bool IsCompletedSuccessfully
  TaskCreationOptions CreationOptions
  WaitHandle System.IAsyncResult.AsyncWaitHandle
  object AsyncState
  bool System.IAsyncResult.CompletedSynchronously
  TaskScheduler ExecutingTaskScheduler
  TaskFactory Factory
  Task CompletedTask
  ManualResetEventSlim CompletedEvent
  bool ExceptionRecorded
  bool IsFaulted
  ExecutionContext CapturedContext
  bool IsExceptionObservedByParent
  bool IsDelegateInvoked
Методы:
  Task get_ParentForDebugger()
  int get_StateFlagsForDebugger()
  void .ctor(bool canceled, TaskCreationOptions creationOptions, CancellationToken ct)
  void .ctor()
  void .ctor(object state, TaskCreationOptions creationOptions, bool promiseStyle)
  void .ctor(Action action)
  void .ctor(Action action, CancellationToken cancellationToken)
  void .ctor(Action action, TaskCreationOptions creationOptions)
  void .ctor(Action action, CancellationToken cancellationToken, TaskCreationOptions creationOptions)
  void .ctor(Action`1<object> action, object state)
  void .ctor(Action`1<object> action, object state, CancellationToken cancellationToken)
  void .ctor(Action`1<object> action, object state, TaskCreationOptions creationOptions)
  void .ctor(Action`1<object> action, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions)
  void .ctor(Delegate action, object state, Task parent, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  void TaskConstructorCore(Delegate action, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  void AssignCancellationToken(CancellationToken cancellationToken, Task antecedent, TaskContinuation continuation)
  void TaskCancelCallback(object o)
  bool TrySetCanceled(CancellationToken tokenToRecord)
  bool TrySetCanceled(CancellationToken tokenToRecord, object cancellationException)
  bool TrySetException(object exceptionObject)
  string get_DebuggerDisplayMethodDescription()
  TaskCreationOptions get_Options()
  TaskCreationOptions OptionsMethod(int flags)
  bool AtomicStateUpdate(int newBits, int illegalBits)
  bool AtomicStateUpdate(int newBits, int illegalBits, Int32& oldFlags)
  void SetNotificationForWaitCompletion(bool enabled)
  bool NotifyDebuggerOfWaitCompletionIfNecessary()
  bool AnyTaskRequiresNotifyDebuggerOfWaitCompletion(Task[] tasks)
  bool get_IsWaitNotificationEnabledOrNotRanToCompletion()
  bool get_ShouldNotifyDebuggerOfWaitCompletion()
  bool get_IsWaitNotificationEnabled()
  void NotifyDebuggerOfWaitCompletion()
  bool MarkStarted()
  void AddNewChild()
  void DisregardChild()
  void Start()
  void Start(TaskScheduler scheduler)
  void RunSynchronously()
  void RunSynchronously(TaskScheduler scheduler)
  void InternalRunSynchronously(TaskScheduler scheduler, bool waitForCompletion)
  Task InternalStartNew(Task creatingTask, Delegate action, object state, CancellationToken cancellationToken, TaskScheduler scheduler, TaskCreationOptions options, InternalTaskOptions internalOptions)
  int get_Id()
  Nullable`1<int> get_CurrentId()
  Task get_InternalCurrent()
  Task InternalCurrentIfAttached(TaskCreationOptions creationOptions)
  StackGuard get_CurrentStackGuard()
  AggregateException get_Exception()
  TaskStatus get_Status()
  bool get_IsCanceled()
  bool get_IsCancellationRequested()
  ContingentProperties EnsureContingentPropertiesInitialized(bool needsProtection)
  ContingentProperties EnsureContingentPropertiesInitializedCore(bool needsProtection)
  CancellationToken get_CancellationToken()
  bool get_IsCancellationAcknowledged()
  bool get_IsCompleted()
  bool IsCompletedMethod(int flags)
  bool get_IsCompletedSuccessfully()
  TaskCreationOptions get_CreationOptions()
  WaitHandle System.IAsyncResult.get_AsyncWaitHandle()
  object get_AsyncState()
  bool System.IAsyncResult.get_CompletedSynchronously()
  TaskScheduler get_ExecutingTaskScheduler()
  TaskFactory get_Factory()
  Task get_CompletedTask()
  ManualResetEventSlim get_CompletedEvent()
  bool get_ExceptionRecorded()
  bool get_IsFaulted()
  ExecutionContext get_CapturedContext()
  void set_CapturedContext(ExecutionContext value)
  void Dispose()
  void Dispose(bool disposing)
  void ScheduleAndStart(bool needsProtection)
  void AddException(object exceptionObject)
  void AddException(object exceptionObject, bool representsCancellation)
  AggregateException GetExceptions(bool includeTaskCanceledExceptions)
  ReadOnlyCollection`1<ExceptionDispatchInfo> GetExceptionDispatchInfos()
  ExceptionDispatchInfo GetCancellationExceptionDispatchInfo()
  void ThrowIfExceptional(bool includeTaskCanceledExceptions)
  void UpdateExceptionObservedStatus()
  bool get_IsExceptionObservedByParent()
  bool get_IsDelegateInvoked()
  void Finish(bool bUserDelegateExecuted)
  void FinishStageTwo()
  void FinishStageThree()
  void ProcessChildCompletion(Task childTask)
  void AddExceptionsFromChildren()
  void Execute()
  void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
  bool ExecuteEntry(bool bPreventDoubleExecution)
  void ExecutionContextCallback(object obj)
  void InnerInvoke()
  void HandleException(Exception unhandledException)
  TaskAwaiter GetAwaiter()
  ConfiguredTaskAwaitable ConfigureAwait(bool continueOnCapturedContext)
  void SetContinuationForAwait(Action continuationAction, bool continueOnCapturedContext, bool flowExecutionContext)
  YieldAwaitable Yield()
  void Wait()
  bool Wait(TimeSpan timeout)
  void Wait(CancellationToken cancellationToken)
  bool Wait(int millisecondsTimeout)
  bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
  bool WrappedTryRunInline()
  bool InternalWait(int millisecondsTimeout, CancellationToken cancellationToken)
  bool SpinThenBlockingWait(int millisecondsTimeout, CancellationToken cancellationToken)
  bool SpinWait(int millisecondsTimeout)
  bool InternalCancel(bool bCancelNonExecutingOnly)
  void RecordInternalCancellationRequest()
  void RecordInternalCancellationRequest(CancellationToken tokenToRecord)
  void RecordInternalCancellationRequest(CancellationToken tokenToRecord, object cancellationException)
  void CancellationCleanupLogic()
  void SetCancellationAcknowledged()
  void FinishContinuations()
  void LogFinishCompletionNotification()
  Task ContinueWith(Action`1<Task> continuationAction)
  Task ContinueWith(Action`1<Task> continuationAction, CancellationToken cancellationToken)
  Task ContinueWith(Action`1<Task> continuationAction, TaskScheduler scheduler)
  Task ContinueWith(Action`1<Task> continuationAction, TaskContinuationOptions continuationOptions)
  Task ContinueWith(Action`1<Task> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task ContinueWith(Action`1<Task> continuationAction, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  Task ContinueWith(Action`2<Task, object> continuationAction, object state)
  Task ContinueWith(Action`2<Task, object> continuationAction, object state, CancellationToken cancellationToken)
  Task ContinueWith(Action`2<Task, object> continuationAction, object state, TaskScheduler scheduler)
  Task ContinueWith(Action`2<Task, object> continuationAction, object state, TaskContinuationOptions continuationOptions)
  Task ContinueWith(Action`2<Task, object> continuationAction, object state, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task ContinueWith(Action`2<Task, object> continuationAction, object state, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWith(Func`2<Task, TResult> continuationFunction)
  Task`1<TResult> ContinueWith(Func`2<Task, TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWith(Func`2<Task, TResult> continuationFunction, TaskScheduler scheduler)
  Task`1<TResult> ContinueWith(Func`2<Task, TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWith(Func`2<Task, TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWith(Func`2<Task, TResult> continuationFunction, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWith(Func`3<Task, object, TResult> continuationFunction, object state)
  Task`1<TResult> ContinueWith(Func`3<Task, object, TResult> continuationFunction, object state, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWith(Func`3<Task, object, TResult> continuationFunction, object state, TaskScheduler scheduler)
  Task`1<TResult> ContinueWith(Func`3<Task, object, TResult> continuationFunction, object state, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWith(Func`3<Task, object, TResult> continuationFunction, object state, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWith(Func`3<Task, object, TResult> continuationFunction, object state, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions)
  void CreationOptionsFromContinuationOptions(TaskContinuationOptions continuationOptions, TaskCreationOptions& creationOptions, InternalTaskOptions& internalOptions)
  void ContinueWithCore(Task continuationTask, TaskScheduler scheduler, CancellationToken cancellationToken, TaskContinuationOptions options)
  void AddCompletionAction(ITaskCompletionAction action)
  void AddCompletionAction(ITaskCompletionAction action, bool addBeforeOthers)
  bool AddTaskContinuationComplex(object tc, bool addBeforeOthers)
  bool AddTaskContinuation(object tc, bool addBeforeOthers)
  void RemoveContinuation(object continuationObject)
  void WaitAll(Task[] tasks)
  bool WaitAll(Task[] tasks, TimeSpan timeout)
  bool WaitAll(Task[] tasks, int millisecondsTimeout)
  void WaitAll(Task[] tasks, CancellationToken cancellationToken)
  bool WaitAll(Task[] tasks, int millisecondsTimeout, CancellationToken cancellationToken)
  void AddToList(T item, LowLevelListWithIList`1& list, int initSize)
  bool WaitAllBlockingCore(LowLevelListWithIList`1<Task> tasks, int millisecondsTimeout, CancellationToken cancellationToken)
  void AddExceptionsForCompletedTask(LowLevelListWithIList`1& exceptions, Task t)
  int WaitAny(Task[] tasks)
  int WaitAny(Task[] tasks, TimeSpan timeout)
  int WaitAny(Task[] tasks, CancellationToken cancellationToken)
  int WaitAny(Task[] tasks, int millisecondsTimeout)
  int WaitAny(Task[] tasks, int millisecondsTimeout, CancellationToken cancellationToken)
  Task`1<TResult> FromResult(TResult result)
  Task FromException(Exception exception)
  Task`1<TResult> FromException(Exception exception)
  Task FromCancellation(CancellationToken cancellationToken)
  Task FromCanceled(CancellationToken cancellationToken)
  Task`1<TResult> FromCancellation(CancellationToken cancellationToken)
  Task`1<TResult> FromCanceled(CancellationToken cancellationToken)
  Task`1<TResult> FromCancellation(OperationCanceledException exception)
  Task Run(Action action)
  Task Run(Action action, CancellationToken cancellationToken)
  Task`1<TResult> Run(Func`1<TResult> function)
  Task`1<TResult> Run(Func`1<TResult> function, CancellationToken cancellationToken)
  Task Run(Func`1<Task> function)
  Task Run(Func`1<Task> function, CancellationToken cancellationToken)
  Task`1<TResult> Run(Func`1<Task`1<TResult>> function)
  Task`1<TResult> Run(Func`1<Task`1<TResult>> function, CancellationToken cancellationToken)
  Task Delay(TimeSpan delay)
  Task Delay(TimeSpan delay, CancellationToken cancellationToken)
  Task Delay(int millisecondsDelay)
  Task Delay(int millisecondsDelay, CancellationToken cancellationToken)
  Task WhenAll(IEnumerable`1<Task> tasks)
  Task WhenAll(Task[] tasks)
  Task InternalWhenAll(Task[] tasks)
  Task`1<TResult[]> WhenAll(IEnumerable`1<Task`1<TResult>> tasks)
  Task`1<TResult[]> WhenAll(Task`1[] tasks)
  Task`1<TResult[]> InternalWhenAll(Task`1[] tasks)
  Task`1<Task> WhenAny(Task[] tasks)
  Task`1<Task> WhenAny(IEnumerable`1<Task> tasks)
  Task`1<Task`1<TResult>> WhenAny(Task`1[] tasks)
  Task`1<Task`1<TResult>> WhenAny(IEnumerable`1<Task`1<TResult>> tasks)
  Task`1<TResult> CreateUnwrapPromise(Task outerTask, bool lookForOce)
  Delegate[] GetDelegateContinuationsForDebugger()
  Delegate[] GetDelegatesFromContinuationObject(object continuationObject)
  Task GetActiveTaskFromId(int taskId)
  bool AddToActiveTasks(Task task)
  void RemoveFromActiveTasks(int taskId)
  void MarkAborted(ThreadAbortException e)
  void ExecuteWithThreadLocal(Task& currentTaskSlot)
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.CompletionActionInvoker
Наследуется от: object
Поля:
  ITaskCompletionAction m_action
  Task m_completingTask
Свойства:
Методы:
  void .ctor(ITaskCompletionAction action, Task completingTask)
  void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
  void MarkAborted(ThreadAbortException e)
--------------------------------------------------
Класс: System.Threading.Tasks.SystemThreadingTasks_TaskDebugView
Наследуется от: object
Поля:
  Task m_task
Свойства:
  object AsyncState
  TaskCreationOptions CreationOptions
  Exception Exception
  int Id
  bool CancellationPending
  TaskStatus Status
Методы:
  void .ctor(Task task)
  object get_AsyncState()
  TaskCreationOptions get_CreationOptions()
  Exception get_Exception()
  int get_Id()
  bool get_CancellationPending()
  TaskStatus get_Status()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskCreationOptions
Наследуется от: Enum
Поля:
  int value__
  TaskCreationOptions None
  TaskCreationOptions PreferFairness
  TaskCreationOptions LongRunning
  TaskCreationOptions AttachedToParent
  TaskCreationOptions DenyChildAttach
  TaskCreationOptions HideScheduler
  TaskCreationOptions RunContinuationsAsynchronously
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.InternalTaskOptions
Наследуется от: Enum
Поля:
  int value__
  InternalTaskOptions None
  InternalTaskOptions InternalOptionsMask
  InternalTaskOptions ContinuationTask
  InternalTaskOptions PromiseTask
  InternalTaskOptions LazyCancellation
  InternalTaskOptions QueuedByRuntime
  InternalTaskOptions DoNotDispose
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.TaskContinuationOptions
Наследуется от: Enum
Поля:
  int value__
  TaskContinuationOptions None
  TaskContinuationOptions PreferFairness
  TaskContinuationOptions LongRunning
  TaskContinuationOptions AttachedToParent
  TaskContinuationOptions DenyChildAttach
  TaskContinuationOptions HideScheduler
  TaskContinuationOptions LazyCancellation
  TaskContinuationOptions RunContinuationsAsynchronously
  TaskContinuationOptions NotOnRanToCompletion
  TaskContinuationOptions NotOnFaulted
  TaskContinuationOptions NotOnCanceled
  TaskContinuationOptions OnlyOnRanToCompletion
  TaskContinuationOptions OnlyOnFaulted
  TaskContinuationOptions OnlyOnCanceled
  TaskContinuationOptions ExecuteSynchronously
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.StackGuard
Наследуется от: object
Поля:
  int m_inliningDepth
  int MAX_UNCHECKED_INLINING_DEPTH
Свойства:
Методы:
  bool TryBeginInliningScope()
  void EndInliningScope()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.VoidTaskResult
Наследуется от: ValueType
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.ITaskCompletionAction
Поля:
Свойства:
  bool InvokeMayRunArbitraryCode
Методы:
  void Invoke(Task completingTask)
  bool get_InvokeMayRunArbitraryCode()
--------------------------------------------------
Класс: System.Threading.Tasks.UnwrapPromise`1
Наследуется от: Task`1<TResult>
Поля:
  byte STATE_WAITING_ON_OUTER_TASK
  byte STATE_WAITING_ON_INNER_TASK
  byte STATE_DONE
  byte _state
  bool _lookForOce
Свойства:
  bool InvokeMayRunArbitraryCode
Методы:
  void .ctor(Task outerTask, bool lookForOce)
  void Invoke(Task completingTask)
  void InvokeCore(Task completingTask)
  void InvokeCoreAsync(Task completingTask)
  void ProcessCompletedOuterTask(Task task)
  bool TrySetFromTask(Task task, bool lookForOce)
  void ProcessInnerTask(Task task)
  bool get_InvokeMayRunArbitraryCode()
--------------------------------------------------
Класс: System.Threading.Tasks.ContinuationTaskFromTask
Наследуется от: Task
Поля:
  Task m_antecedent
Свойства:
Методы:
  void .ctor(Task antecedent, Delegate action, object state, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions)
  void InnerInvoke()
--------------------------------------------------
Класс: System.Threading.Tasks.ContinuationResultTaskFromTask`1
Наследуется от: Task`1<TResult>
Поля:
  Task m_antecedent
Свойства:
Методы:
  void .ctor(Task antecedent, Delegate function, object state, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions)
  void InnerInvoke()
--------------------------------------------------
Класс: System.Threading.Tasks.ContinuationTaskFromResultTask`1
Наследуется от: Task
Поля:
  Task`1<TAntecedentResult> m_antecedent
Свойства:
Методы:
  void .ctor(Task`1<TAntecedentResult> antecedent, Delegate action, object state, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions)
  void InnerInvoke()
--------------------------------------------------
Класс: System.Threading.Tasks.ContinuationResultTaskFromResultTask`2
Наследуется от: Task`1<TResult>
Поля:
  Task`1<TAntecedentResult> m_antecedent
Свойства:
Методы:
  void .ctor(Task`1<TAntecedentResult> antecedent, Delegate function, object state, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions)
  void InnerInvoke()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskContinuation
Наследуется от: object
Поля:
Свойства:
Методы:
  void Run(Task completedTask, bool bCanInlineContinuationTask)
  void InlineIfPossibleOrElseQueue(Task task, bool needsProtection)
  Delegate[] GetDelegateContinuationsForDebugger()
  void .ctor()
--------------------------------------------------
Класс: System.Threading.Tasks.StandardTaskContinuation
Наследуется от: TaskContinuation
Поля:
  Task m_task
  TaskContinuationOptions m_options
  TaskScheduler m_taskScheduler
Свойства:
Методы:
  void .ctor(Task task, TaskContinuationOptions options, TaskScheduler scheduler)
  void Run(Task completedTask, bool bCanInlineContinuationTask)
  Delegate[] GetDelegateContinuationsForDebugger()
--------------------------------------------------
Класс: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation
Наследуется от: AwaitTaskContinuation
Поля:
  SendOrPostCallback s_postCallback
  ContextCallback s_postActionCallback
  SynchronizationContext m_syncContext
Свойства:
Методы:
  void .ctor(SynchronizationContext context, Action action, bool flowExecutionContext)
  void Run(Task ignored, bool canInlineContinuationTask)
  void PostAction(object state)
  ContextCallback GetPostActionCallback()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation
Наследуется от: AwaitTaskContinuation
Поля:
  TaskScheduler m_scheduler
Свойства:
Методы:
  void .ctor(TaskScheduler scheduler, Action action, bool flowExecutionContext)
  void Run(Task ignored, bool canInlineContinuationTask)
--------------------------------------------------
Класс: System.Threading.Tasks.AwaitTaskContinuation
Наследуется от: TaskContinuation
Поля:
  ExecutionContext m_capturedContext
  Action m_action
  ContextCallback s_invokeActionCallback
Свойства:
  bool IsValidLocationForInlining
Методы:
  void .ctor(Action action, bool flowExecutionContext)
  Task CreateTask(Action`1<object> action, object state, TaskScheduler scheduler)
  void Run(Task ignored, bool canInlineContinuationTask)
  bool get_IsValidLocationForInlining()
  void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
  void InvokeAction(object state)
  ContextCallback GetInvokeActionCallback()
  void RunCallback(ContextCallback callback, object state, Task& currentTask)
  void RunOrScheduleAction(Action action, bool allowInlining, Task& currentTask)
  void UnsafeScheduleAction(Action action)
  void ThrowAsyncIfNecessary(Exception exc)
  Delegate[] GetDelegateContinuationsForDebugger()
  void MarkAborted(ThreadAbortException e)
--------------------------------------------------
Класс: System.Threading.Tasks.TaskExceptionHolder
Наследуется от: object
Поля:
  bool s_failFastOnUnobservedException
  Task m_task
  LowLevelListWithIList`1 modreq(System.Runtime.CompilerServices.IsVolatile) m_faultExceptions
  ExceptionDispatchInfo m_cancellationException
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) m_isHandled
Свойства:
  bool ContainsFaultList
Методы:
  void .ctor(Task task)
  bool ShouldFailFastOnUnobservedException()
  void Finalize()
  bool get_ContainsFaultList()
  void Add(object exceptionObject)
  void Add(object exceptionObject, bool representsCancellation)
  void SetCancellationException(object exceptionObject)
  void AddFaultException(object exceptionObject)
  void MarkAsUnhandled()
  void MarkAsHandled(bool calledFromFinalizer)
  AggregateException CreateExceptionObject(bool calledFromFinalizer, Exception includeThisException)
  ReadOnlyCollection`1<ExceptionDispatchInfo> GetExceptionDispatchInfos()
  ExceptionDispatchInfo GetCancellationExceptionDispatchInfo()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.TaskFactory
Наследуется от: object
Поля:
  CancellationToken m_defaultCancellationToken
  TaskScheduler m_defaultScheduler
  TaskCreationOptions m_defaultCreationOptions
  TaskContinuationOptions m_defaultContinuationOptions
Свойства:
  TaskScheduler DefaultScheduler
  CancellationToken CancellationToken
  TaskScheduler Scheduler
  TaskCreationOptions CreationOptions
  TaskContinuationOptions ContinuationOptions
Методы:
  TaskScheduler get_DefaultScheduler()
  TaskScheduler GetDefaultScheduler(Task currTask)
  void .ctor()
  void .ctor(CancellationToken cancellationToken)
  void .ctor(TaskScheduler scheduler)
  void .ctor(TaskCreationOptions creationOptions, TaskContinuationOptions continuationOptions)
  void .ctor(CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  void CheckCreationOptions(TaskCreationOptions creationOptions)
  CancellationToken get_CancellationToken()
  TaskScheduler get_Scheduler()
  TaskCreationOptions get_CreationOptions()
  TaskContinuationOptions get_ContinuationOptions()
  Task StartNew(Action action)
  Task StartNew(Action action, CancellationToken cancellationToken)
  Task StartNew(Action action, TaskCreationOptions creationOptions)
  Task StartNew(Action action, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task StartNew(Action action, CancellationToken cancellationToken, TaskCreationOptions creationOptions, InternalTaskOptions internalOptions, TaskScheduler scheduler)
  Task StartNew(Action`1<object> action, object state)
  Task StartNew(Action`1<object> action, object state, CancellationToken cancellationToken)
  Task StartNew(Action`1<object> action, object state, TaskCreationOptions creationOptions)
  Task StartNew(Action`1<object> action, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task`1<TResult> StartNew(Func`1<TResult> function)
  Task`1<TResult> StartNew(Func`1<TResult> function, CancellationToken cancellationToken)
  Task`1<TResult> StartNew(Func`1<TResult> function, TaskCreationOptions creationOptions)
  Task`1<TResult> StartNew(Func`1<TResult> function, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state, CancellationToken cancellationToken)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> StartNew(Func`2<object, TResult> function, object state, CancellationToken cancellationToken, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task FromAsync(IAsyncResult asyncResult, Action`1<IAsyncResult> endMethod)
  Task FromAsync(IAsyncResult asyncResult, Action`1<IAsyncResult> endMethod, TaskCreationOptions creationOptions)
  Task FromAsync(IAsyncResult asyncResult, Action`1<IAsyncResult> endMethod, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, object state)
  Task FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, object state, TaskCreationOptions creationOptions)
  Task FromAsync(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, TArg1 arg1, object state)
  Task FromAsync(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, TArg1 arg1, object state, TaskCreationOptions creationOptions)
  Task FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, object state)
  Task FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, object state, TaskCreationOptions creationOptions)
  Task FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state)
  Task FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Action`1<IAsyncResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endMethod)
  Task`1<TResult> FromAsync(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endMethod, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(IAsyncResult asyncResult, Func`2<IAsyncResult, TResult> endMethod, TaskCreationOptions creationOptions, TaskScheduler scheduler)
  Task`1<TResult> FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, object state)
  Task`1<TResult> FromAsync(Func`3<AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, object state)
  Task`1<TResult> FromAsync(Func`4<TArg1, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, object state)
  Task`1<TResult> FromAsync(Func`5<TArg1, TArg2, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, object state, TaskCreationOptions creationOptions)
  Task`1<TResult> FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state)
  Task`1<TResult> FromAsync(Func`6<TArg1, TArg2, TArg3, AsyncCallback, object, IAsyncResult> beginMethod, Func`2<IAsyncResult, TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, TaskCreationOptions creationOptions)
  void CheckFromAsyncOptions(TaskCreationOptions creationOptions, bool hasBeginMethod)
  Task`1<Task[]> CommonCWAllLogic(Task[] tasksCopy)
  Task`1<Task`1[]> CommonCWAllLogic(Task`1[] tasksCopy)
  Task ContinueWhenAll(Task[] tasks, Action`1<Task[]> continuationAction)
  Task ContinueWhenAll(Task[] tasks, Action`1<Task[]> continuationAction, CancellationToken cancellationToken)
  Task ContinueWhenAll(Task[] tasks, Action`1<Task[]> continuationAction, TaskContinuationOptions continuationOptions)
  Task ContinueWhenAll(Task[] tasks, Action`1<Task[]> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task ContinueWhenAll(Task`1[] tasks, Action`1<Task`1[]> continuationAction)
  Task ContinueWhenAll(Task`1[] tasks, Action`1<Task`1[]> continuationAction, CancellationToken cancellationToken)
  Task ContinueWhenAll(Task`1[] tasks, Action`1<Task`1[]> continuationAction, TaskContinuationOptions continuationOptions)
  Task ContinueWhenAll(Task`1[] tasks, Action`1<Task`1[]> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAll(Task[] tasks, Func`2<Task[], TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAll(Task`1[] tasks, Func`2<Task`1[], TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<Task> CommonCWAnyLogic(IList`1<Task> tasks)
  Task ContinueWhenAny(Task[] tasks, Action`1<Task> continuationAction)
  Task ContinueWhenAny(Task[] tasks, Action`1<Task> continuationAction, CancellationToken cancellationToken)
  Task ContinueWhenAny(Task[] tasks, Action`1<Task> continuationAction, TaskContinuationOptions continuationOptions)
  Task ContinueWhenAny(Task[] tasks, Action`1<Task> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAny(Task[] tasks, Func`2<Task, TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, CancellationToken cancellationToken)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, TaskContinuationOptions continuationOptions)
  Task`1<TResult> ContinueWhenAny(Task`1[] tasks, Func`2<Task`1<TAntecedentResult>, TResult> continuationFunction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task ContinueWhenAny(Task`1[] tasks, Action`1<Task`1<TAntecedentResult>> continuationAction)
  Task ContinueWhenAny(Task`1[] tasks, Action`1<Task`1<TAntecedentResult>> continuationAction, CancellationToken cancellationToken)
  Task ContinueWhenAny(Task`1[] tasks, Action`1<Task`1<TAntecedentResult>> continuationAction, TaskContinuationOptions continuationOptions)
  Task ContinueWhenAny(Task`1[] tasks, Action`1<Task`1<TAntecedentResult>> continuationAction, CancellationToken cancellationToken, TaskContinuationOptions continuationOptions, TaskScheduler scheduler)
  Task[] CheckMultiContinuationTasksAndCopy(Task[] tasks)
  Task`1[] CheckMultiContinuationTasksAndCopy(Task`1[] tasks)
  void CheckMultiTaskContinuationOptions(TaskContinuationOptions continuationOptions)
--------------------------------------------------
Класс: System.Threading.Tasks.TaskScheduler
Наследуется от: object
Поля:
  ConditionalWeakTable`2<TaskScheduler, object> s_activeTaskSchedulers
  TaskScheduler s_defaultTaskScheduler
  int s_taskSchedulerIdCounter
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_taskSchedulerId
  EventHandler`1<UnobservedTaskExceptionEventArgs> _unobservedTaskException
  Lock _unobservedTaskExceptionLockObject
Свойства:
  int MaximumConcurrencyLevel
  bool RequiresAtomicStartTransition
  TaskScheduler Default
  TaskScheduler Current
  TaskScheduler InternalCurrent
  int Id
Методы:
  void QueueTask(Task task)
  bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued)
  IEnumerable`1<Task> GetScheduledTasks()
  int get_MaximumConcurrencyLevel()
  bool TryRunInline(Task task, bool taskWasPreviouslyQueued)
  bool TryDequeue(Task task)
  void NotifyWorkItemProgress()
  bool get_RequiresAtomicStartTransition()
  void .ctor()
  void AddToActiveTaskSchedulers()
  TaskScheduler get_Default()
  TaskScheduler get_Current()
  TaskScheduler get_InternalCurrent()
  TaskScheduler FromCurrentSynchronizationContext()
  int get_Id()
  bool TryExecuteTask(Task task)
  void add_UnobservedTaskException(EventHandler`1<UnobservedTaskExceptionEventArgs> value)
  void remove_UnobservedTaskException(EventHandler`1<UnobservedTaskExceptionEventArgs> value)
  void PublishUnobservedTaskException(object sender, UnobservedTaskExceptionEventArgs ueea)
  Task[] GetScheduledTasksForDebugger()
  TaskScheduler[] GetTaskSchedulersForDebugger()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.SynchronizationContextTaskScheduler
Наследуется от: TaskScheduler
Поля:
  SynchronizationContext m_synchronizationContext
  SendOrPostCallback s_postCallback
Свойства:
  int MaximumConcurrencyLevel
Методы:
  void .ctor()
  void QueueTask(Task task)
  bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued)
  IEnumerable`1<Task> GetScheduledTasks()
  int get_MaximumConcurrencyLevel()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
Наследуется от: EventArgs
Поля:
  AggregateException m_exception
  bool m_observed
Свойства:
  bool Observed
  AggregateException Exception
Методы:
  void .ctor(AggregateException exception)
  void SetObserved()
  bool get_Observed()
  AggregateException get_Exception()
--------------------------------------------------
Класс: System.Threading.Tasks.ThreadPoolTaskScheduler
Наследуется от: TaskScheduler
Поля:
  ParameterizedThreadStart s_longRunningThreadWork
Свойства:
  bool RequiresAtomicStartTransition
Методы:
  void .ctor()
  void QueueTask(Task task)
  bool TryExecuteTaskInline(Task task, bool taskWasPreviouslyQueued)
  bool TryDequeue(Task task)
  IEnumerable`1<Task> GetScheduledTasks()
  IEnumerable`1<Task> FilterTasksFromWorkItems(IEnumerable`1<IThreadPoolWorkItem> tpwItems)
  void NotifyWorkItemProgress()
  bool get_RequiresAtomicStartTransition()
  void .cctor()
--------------------------------------------------
Класс: System.Threading.Tasks.CausalityTraceLevel
Наследуется от: Enum
Поля:
  int value__
  CausalityTraceLevel Required
  CausalityTraceLevel Important
  CausalityTraceLevel Verbose
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.AsyncCausalityStatus
Наследуется от: Enum
Поля:
  int value__
  AsyncCausalityStatus Started
  AsyncCausalityStatus Completed
  AsyncCausalityStatus Canceled
  AsyncCausalityStatus Error
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.CausalityRelation
Наследуется от: Enum
Поля:
  int value__
  CausalityRelation AssignDelegate
  CausalityRelation Join
  CausalityRelation Choice
  CausalityRelation Cancel
  CausalityRelation Error
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.CausalitySynchronousWork
Наследуется от: Enum
Поля:
  int value__
  CausalitySynchronousWork CompletionNotification
  CausalitySynchronousWork ProgressNotification
  CausalitySynchronousWork Execution
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.AsyncCausalityTracer
Наследуется от: object
Поля:
Свойства:
  bool LoggingOn
Методы:
  void EnableToETW(bool enabled)
  bool get_LoggingOn()
  void TraceOperationCreation(CausalityTraceLevel traceLevel, int taskId, string operationName, ulong relatedContext)
  void TraceOperationCompletion(CausalityTraceLevel traceLevel, int taskId, AsyncCausalityStatus status)
  void TraceOperationRelation(CausalityTraceLevel traceLevel, int taskId, CausalityRelation relation)
  void TraceSynchronousWorkStart(CausalityTraceLevel traceLevel, int taskId, CausalitySynchronousWork work)
  void TraceSynchronousWorkCompletion(CausalityTraceLevel traceLevel, CausalitySynchronousWork work)
  ulong GetOperationId(UInt32 taskId)
--------------------------------------------------
Класс: System.Threading.Tasks.TaskAsyncEnumerableExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ConfiguredAsyncDisposable ConfigureAwait(IAsyncDisposable source, bool continueOnCapturedContext)
  ConfiguredCancelableAsyncEnumerable`1<T> ConfigureAwait(IAsyncEnumerable`1<T> source, bool continueOnCapturedContext)
  ConfiguredCancelableAsyncEnumerable`1<T> WithCancellation(IAsyncEnumerable`1<T> source, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags
Наследуется от: Enum
Поля:
  int value__
  ValueTaskSourceOnCompletedFlags None
  ValueTaskSourceOnCompletedFlags UseSchedulingContext
  ValueTaskSourceOnCompletedFlags FlowExecutionContext
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.Sources.ValueTaskSourceStatus
Наследуется от: Enum
Поля:
  int value__
  ValueTaskSourceStatus Pending
  ValueTaskSourceStatus Succeeded
  ValueTaskSourceStatus Faulted
  ValueTaskSourceStatus Canceled
Свойства:
Методы:
--------------------------------------------------
Класс: System.Threading.Tasks.Sources.IValueTaskSource
Поля:
Свойства:
Методы:
  ValueTaskSourceStatus GetStatus(short token)
  void OnCompleted(Action`1<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags)
  void GetResult(short token)
--------------------------------------------------
Класс: System.Threading.Tasks.Sources.IValueTaskSource`1
Поля:
Свойства:
Методы:
  ValueTaskSourceStatus GetStatus(short token)
  void OnCompleted(Action`1<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags)
  TResult GetResult(short token)
--------------------------------------------------
Класс: System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1
Наследуется от: ValueType
Поля:
  Action`1<object> _continuation
  object _continuationState
  ExecutionContext _executionContext
  object _capturedContext
  bool _completed
  TResult _result
  ExceptionDispatchInfo _error
  short _version
  bool <RunContinuationsAsynchronously>k__BackingField
Свойства:
  bool RunContinuationsAsynchronously
  short Version
Методы:
  bool get_RunContinuationsAsynchronously()
  void set_RunContinuationsAsynchronously(bool value)
  void Reset()
  void SetResult(TResult result)
  void SetException(Exception error)
  short get_Version()
  ValueTaskSourceStatus GetStatus(short token)
  TResult GetResult(short token)
  void OnCompleted(Action`1<object> continuation, object state, short token, ValueTaskSourceOnCompletedFlags flags)
  void ValidateToken(short token)
  void SignalCompletion()
  void InvokeContinuation()
--------------------------------------------------
Класс: System.Threading.Tasks.Sources.ManualResetValueTaskSourceCoreShared
Наследуется от: object
Поля:
  Action`1<object> s_sentinel
Свойства:
Методы:
  void ThrowInvalidOperationException()
  void CompletionSentinel(object _)
  void .cctor()
--------------------------------------------------
Класс: System.Text.ASCIIEncoding
Наследуется от: Encoding
Поля:
  ASCIIEncodingSealed s_default
Свойства:
  bool IsSingleByte
Методы:
  void .ctor()
  void SetDefaultFallbacks()
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string chars)
  int GetByteCount(Char* chars, int count)
  int GetBytes(string chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  string GetString(Byte[] bytes, int byteIndex, int byteCount)
  int GetByteCount(Char* chars, int charCount, EncoderNLS encoder)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder)
  int GetCharCount(Byte* bytes, int count, DecoderNLS decoder)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS decoder)
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  bool get_IsSingleByte()
  Decoder GetDecoder()
  Encoder GetEncoder()
  void .cctor()
--------------------------------------------------
Класс: System.Text.Decoder
Наследуется от: object
Поля:
  DecoderFallback _fallback
  DecoderFallbackBuffer _fallbackBuffer
Свойства:
  DecoderFallback Fallback
  DecoderFallbackBuffer FallbackBuffer
  bool InternalHasFallbackBuffer
Методы:
  void .ctor()
  DecoderFallback get_Fallback()
  void set_Fallback(DecoderFallback value)
  DecoderFallbackBuffer get_FallbackBuffer()
  bool get_InternalHasFallbackBuffer()
  void Reset()
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte[] bytes, int index, int count, bool flush)
  int GetCharCount(Byte* bytes, int count, bool flush)
  int GetCharCount(ReadOnlySpan`1<byte> bytes, bool flush)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, bool flush)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, bool flush)
  int GetChars(ReadOnlySpan`1<byte> bytes, Span`1<char> chars, bool flush)
  void Convert(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, int charCount, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed)
  void Convert(Byte* bytes, int byteCount, Char* chars, int charCount, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed)
  void Convert(ReadOnlySpan`1<byte> bytes, Span`1<char> chars, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed)
--------------------------------------------------
Класс: System.Text.InternalDecoderBestFitFallback
Наследуется от: DecoderFallback
Поля:
  Encoding _encoding
  Char[] _arrayBestFit
  char _cReplacement
Свойства:
  int MaxCharCount
Методы:
  void .ctor(Encoding encoding)
  DecoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  bool Equals(object value)
  int GetHashCode()
--------------------------------------------------
Класс: System.Text.InternalDecoderBestFitFallbackBuffer
Наследуется от: DecoderFallbackBuffer
Поля:
  char _cBestFit
  int _iCount
  int _iSize
  InternalDecoderBestFitFallback _oFallback
  object s_InternalSyncObject
Свойства:
  object InternalSyncObject
  int Remaining
Методы:
  object get_InternalSyncObject()
  void .ctor(InternalDecoderBestFitFallback fallback)
  bool Fallback(Byte[] bytesUnknown, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Reset()
  int InternalFallback(Byte[] bytes, Byte* pBytes)
  char TryBestFit(Byte[] bytesCheck)
--------------------------------------------------
Класс: System.Text.DecoderExceptionFallback
Наследуется от: DecoderFallback
Поля:
Свойства:
  int MaxCharCount
Методы:
  void .ctor()
  DecoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  bool Equals(object value)
  int GetHashCode()
--------------------------------------------------
Класс: System.Text.DecoderExceptionFallbackBuffer
Наследуется от: DecoderFallbackBuffer
Поля:
Свойства:
  int Remaining
Методы:
  bool Fallback(Byte[] bytesUnknown, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Throw(Byte[] bytesUnknown, int index)
  void .ctor()
--------------------------------------------------
Класс: System.Text.DecoderFallbackException
Наследуется от: ArgumentException
Поля:
  Byte[] _bytesUnknown
  int _index
Свойства:
  Byte[] BytesUnknown
  int Index
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, Byte[] bytesUnknown, int index)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  Byte[] get_BytesUnknown()
  int get_Index()
--------------------------------------------------
Класс: System.Text.DecoderFallback
Наследуется от: object
Поля:
  DecoderFallback s_replacementFallback
  DecoderFallback s_exceptionFallback
Свойства:
  DecoderFallback ReplacementFallback
  DecoderFallback ExceptionFallback
  int MaxCharCount
Методы:
  DecoderFallback get_ReplacementFallback()
  DecoderFallback get_ExceptionFallback()
  DecoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  void .ctor()
--------------------------------------------------
Класс: System.Text.DecoderFallbackBuffer
Наследуется от: object
Поля:
  Byte* byteStart
  Char* charEnd
Свойства:
  int Remaining
Методы:
  bool Fallback(Byte[] bytesUnknown, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Reset()
  void InternalReset()
  void InternalInitialize(Byte* byteStart, Char* charEnd)
  bool InternalFallback(Byte[] bytes, Byte* pBytes, Char*& chars)
  int InternalFallback(Byte[] bytes, Byte* pBytes)
  void ThrowLastBytesRecursive(Byte[] bytesUnknown)
  void .ctor()
--------------------------------------------------
Класс: System.Text.DecoderNLS
Наследуется от: Decoder
Поля:
  Encoding _encoding
  bool _mustFlush
  bool _throwOnOverflow
  int _bytesUsed
Свойства:
  bool MustFlush
  bool HasState
Методы:
  void .ctor(Encoding encoding)
  void .ctor()
  void Reset()
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte[] bytes, int index, int count, bool flush)
  int GetCharCount(Byte* bytes, int count, bool flush)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, bool flush)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, bool flush)
  void Convert(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, int charCount, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed)
  void Convert(Byte* bytes, int byteCount, Char* chars, int charCount, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed)
  bool get_MustFlush()
  bool get_HasState()
  void ClearMustFlush()
--------------------------------------------------
Класс: System.Text.DecoderReplacementFallback
Наследуется от: DecoderFallback
Поля:
  string _strDefault
Свойства:
  string DefaultString
  int MaxCharCount
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor(string replacement)
  string get_DefaultString()
  DecoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  bool Equals(object value)
  int GetHashCode()
--------------------------------------------------
Класс: System.Text.DecoderReplacementFallbackBuffer
Наследуется от: DecoderFallbackBuffer
Поля:
  string _strDefault
  int _fallbackCount
  int _fallbackIndex
Свойства:
  int Remaining
Методы:
  void .ctor(DecoderReplacementFallback fallback)
  bool Fallback(Byte[] bytesUnknown, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Reset()
  int InternalFallback(Byte[] bytes, Byte* pBytes)
--------------------------------------------------
Класс: System.Text.Encoder
Наследуется от: object
Поля:
  EncoderFallback _fallback
  EncoderFallbackBuffer _fallbackBuffer
Свойства:
  EncoderFallback Fallback
  EncoderFallbackBuffer FallbackBuffer
  bool InternalHasFallbackBuffer
Методы:
  void .ctor()
  EncoderFallback get_Fallback()
  void set_Fallback(EncoderFallback value)
  EncoderFallbackBuffer get_FallbackBuffer()
  bool get_InternalHasFallbackBuffer()
  void Reset()
  int GetByteCount(Char[] chars, int index, int count, bool flush)
  int GetByteCount(Char* chars, int count, bool flush)
  int GetByteCount(ReadOnlySpan`1<char> chars, bool flush)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, bool flush)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush)
  int GetBytes(ReadOnlySpan`1<char> chars, Span`1<byte> bytes, bool flush)
  void Convert(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, int byteCount, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)
  void Convert(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)
  void Convert(ReadOnlySpan`1<char> chars, Span`1<byte> bytes, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)
--------------------------------------------------
Класс: System.Text.InternalEncoderBestFitFallback
Наследуется от: EncoderFallback
Поля:
  Encoding _encoding
  Char[] _arrayBestFit
Свойства:
  int MaxCharCount
Методы:
  void .ctor(Encoding encoding)
  EncoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  bool Equals(object value)
  int GetHashCode()
--------------------------------------------------
Класс: System.Text.InternalEncoderBestFitFallbackBuffer
Наследуется от: EncoderFallbackBuffer
Поля:
  char _cBestFit
  InternalEncoderBestFitFallback _oFallback
  int _iCount
  int _iSize
  object s_InternalSyncObject
Свойства:
  object InternalSyncObject
  int Remaining
Методы:
  object get_InternalSyncObject()
  void .ctor(InternalEncoderBestFitFallback fallback)
  bool Fallback(char charUnknown, int index)
  bool Fallback(char charUnknownHigh, char charUnknownLow, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Reset()
  char TryBestFit(char cUnknown)
--------------------------------------------------
Класс: System.Text.EncoderExceptionFallback
Наследуется от: EncoderFallback
Поля:
Свойства:
  int MaxCharCount
Методы:
  void .ctor()
  EncoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  bool Equals(object value)
  int GetHashCode()
--------------------------------------------------
Класс: System.Text.EncoderExceptionFallbackBuffer
Наследуется от: EncoderFallbackBuffer
Поля:
Свойства:
  int Remaining
Методы:
  void .ctor()
  bool Fallback(char charUnknown, int index)
  bool Fallback(char charUnknownHigh, char charUnknownLow, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
--------------------------------------------------
Класс: System.Text.EncoderFallbackException
Наследуется от: ArgumentException
Поля:
  char _charUnknown
  char _charUnknownHigh
  char _charUnknownLow
  int _index
Свойства:
  char CharUnknown
  char CharUnknownHigh
  char CharUnknownLow
  int Index
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, char charUnknown, int index)
  void .ctor(string message, char charUnknownHigh, char charUnknownLow, int index)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  char get_CharUnknown()
  char get_CharUnknownHigh()
  char get_CharUnknownLow()
  int get_Index()
  bool IsUnknownSurrogate()
--------------------------------------------------
Класс: System.Text.EncoderFallback
Наследуется от: object
Поля:
  EncoderFallback s_replacementFallback
  EncoderFallback s_exceptionFallback
Свойства:
  EncoderFallback ReplacementFallback
  EncoderFallback ExceptionFallback
  int MaxCharCount
Методы:
  EncoderFallback get_ReplacementFallback()
  EncoderFallback get_ExceptionFallback()
  EncoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  void .ctor()
--------------------------------------------------
Класс: System.Text.EncoderFallbackBuffer
Наследуется от: object
Поля:
  Char* charStart
  Char* charEnd
  EncoderNLS encoder
  bool setEncoder
  bool bUsedEncoder
  bool bFallingBack
  int iRecursionCount
  int iMaxRecursion
Свойства:
  int Remaining
Методы:
  bool Fallback(char charUnknown, int index)
  bool Fallback(char charUnknownHigh, char charUnknownLow, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Reset()
  void InternalReset()
  void InternalInitialize(Char* charStart, Char* charEnd, EncoderNLS encoder, bool setEncoder)
  char InternalGetNextChar()
  bool InternalFallback(char ch, Char*& chars)
  void ThrowLastCharRecursive(int charRecursive)
  void .ctor()
--------------------------------------------------
Класс: System.Text.EncoderNLS
Наследуется от: Encoder
Поля:
  char _charLeftOver
  Encoding _encoding
  bool _mustFlush
  bool _throwOnOverflow
  int _charsUsed
Свойства:
  Encoding Encoding
  bool MustFlush
  bool HasState
Методы:
  void .ctor(Encoding encoding)
  void .ctor()
  void Reset()
  int GetByteCount(Char[] chars, int index, int count, bool flush)
  int GetByteCount(Char* chars, int count, bool flush)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, bool flush)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush)
  void Convert(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, int byteCount, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)
  void Convert(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed)
  Encoding get_Encoding()
  bool get_MustFlush()
  bool get_HasState()
  void ClearMustFlush()
--------------------------------------------------
Класс: System.Text.EncoderReplacementFallback
Наследуется от: EncoderFallback
Поля:
  string _strDefault
Свойства:
  string DefaultString
  int MaxCharCount
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor(string replacement)
  string get_DefaultString()
  EncoderFallbackBuffer CreateFallbackBuffer()
  int get_MaxCharCount()
  bool Equals(object value)
  int GetHashCode()
--------------------------------------------------
Класс: System.Text.EncoderReplacementFallbackBuffer
Наследуется от: EncoderFallbackBuffer
Поля:
  string _strDefault
  int _fallbackCount
  int _fallbackIndex
Свойства:
  int Remaining
Методы:
  void .ctor(EncoderReplacementFallback fallback)
  bool Fallback(char charUnknown, int index)
  bool Fallback(char charUnknownHigh, char charUnknownLow, int index)
  char GetNextChar()
  bool MovePrevious()
  int get_Remaining()
  void Reset()
--------------------------------------------------
Класс: System.Text.EncodingInfo
Наследуется от: object
Поля:
  int iCodePage
  string strEncodingName
  string strDisplayName
Свойства:
  int CodePage
  string Name
  string DisplayName
Методы:
  void .ctor(int codePage, string name, string displayName)
  int get_CodePage()
  string get_Name()
  string get_DisplayName()
  Encoding GetEncoding()
  bool Equals(object value)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Text.EncodingNLS
Наследуется от: Encoding
Поля:
Свойства:
Методы:
  void .ctor(int codePage)
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string s)
  int GetByteCount(Char* chars, int count)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  string GetString(Byte[] bytes, int index, int count)
  Decoder GetDecoder()
  Encoder GetEncoder()
--------------------------------------------------
Класс: System.Text.EncodingProvider
Наследуется от: object
Поля:
  object s_InternalSyncObject
  EncodingProvider[] modreq(System.Runtime.CompilerServices.IsVolatile) s_providers
Свойства:
Методы:
  void .ctor()
  Encoding GetEncoding(string name)
  Encoding GetEncoding(int codepage)
  Encoding GetEncoding(string name, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
  Encoding GetEncoding(int codepage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
  void AddProvider(EncodingProvider provider)
  Encoding GetEncodingFromProvider(int codepage)
  Encoding GetEncodingFromProvider(string encodingName)
  Encoding GetEncodingFromProvider(int codepage, EncoderFallback enc, DecoderFallback dec)
  Encoding GetEncodingFromProvider(string encodingName, EncoderFallback enc, DecoderFallback dec)
  void .cctor()
--------------------------------------------------
Класс: System.Text.Latin1Encoding
Наследуется от: EncodingNLS
Поля:
  Latin1Encoding s_default
  Char[] arrayCharBestFit
Свойства:
  bool IsSingleByte
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  int GetByteCount(Char* chars, int charCount, EncoderNLS encoder)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder)
  int GetCharCount(Byte* bytes, int count, DecoderNLS decoder)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS decoder)
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  bool get_IsSingleByte()
  bool IsAlwaysNormalized(NormalizationForm form)
  Char[] GetBestFitUnicodeToBytesData()
  void .cctor()
--------------------------------------------------
Класс: System.Text.NormalizationForm
Наследуется от: Enum
Поля:
  int value__
  NormalizationForm FormC
  NormalizationForm FormD
  NormalizationForm FormKC
  NormalizationForm FormKD
Свойства:
Методы:
--------------------------------------------------
Класс: System.Text.StringBuilder
Наследуется от: object
Поля:
  Char[] m_ChunkChars
  StringBuilder m_ChunkPrevious
  int m_ChunkLength
  int m_ChunkOffset
  int m_MaxCapacity
  int DefaultCapacity
  string CapacityField
  string MaxCapacityField
  string StringValueField
  string ThreadIDField
  int MaxChunkSize
  int IndexLimit
  int WidthLimit
Свойства:
  int Capacity
  int MaxCapacity
  int Length
  char Chars
  Span`1<char> RemainingCurrentChunk
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(string value)
  void .ctor(string value, int capacity)
  void .ctor(string value, int startIndex, int length, int capacity)
  void .ctor(int capacity, int maxCapacity)
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void AssertInvariants()
  int get_Capacity()
  void set_Capacity(int value)
  int get_MaxCapacity()
  int EnsureCapacity(int capacity)
  string ToString()
  string ToString(int startIndex, int length)
  StringBuilder Clear()
  int get_Length()
  void set_Length(int value)
  char get_Chars(int index)
  void set_Chars(int index, char value)
  StringBuilder Append(char value, int repeatCount)
  StringBuilder Append(Char[] value, int startIndex, int charCount)
  StringBuilder Append(string value)
  void AppendHelper(string value)
  StringBuilder Append(string value, int startIndex, int count)
  StringBuilder Append(StringBuilder value)
  StringBuilder Append(StringBuilder value, int startIndex, int count)
  StringBuilder AppendCore(StringBuilder value, int startIndex, int count)
  StringBuilder AppendLine()
  StringBuilder AppendLine(string value)
  void CopyTo(int sourceIndex, Char[] destination, int destinationIndex, int count)
  void CopyTo(int sourceIndex, Span`1<char> destination, int count)
  StringBuilder Insert(int index, string value, int count)
  StringBuilder Remove(int startIndex, int length)
  StringBuilder Append(bool value)
  StringBuilder Append(char value)
  StringBuilder Append(sbyte value)
  StringBuilder Append(byte value)
  StringBuilder Append(short value)
  StringBuilder Append(int value)
  StringBuilder Append(long value)
  StringBuilder Append(float value)
  StringBuilder Append(double value)
  StringBuilder Append(decimal value)
  StringBuilder Append(ushort value)
  StringBuilder Append(UInt32 value)
  StringBuilder Append(ulong value)
  StringBuilder AppendSpanFormattable(T value)
  StringBuilder Append(object value)
  StringBuilder Append(Char[] value)
  StringBuilder Append(ReadOnlySpan`1<char> value)
  StringBuilder AppendJoin(string separator, Object[] values)
  StringBuilder AppendJoin(string separator, IEnumerable`1<T> values)
  StringBuilder AppendJoin(string separator, String[] values)
  StringBuilder AppendJoin(char separator, Object[] values)
  StringBuilder AppendJoin(char separator, IEnumerable`1<T> values)
  StringBuilder AppendJoin(char separator, String[] values)
  StringBuilder AppendJoinCore(Char* separator, int separatorLength, IEnumerable`1<T> values)
  StringBuilder AppendJoinCore(Char* separator, int separatorLength, T[] values)
  StringBuilder Insert(int index, string value)
  StringBuilder Insert(int index, bool value)
  StringBuilder Insert(int index, sbyte value)
  StringBuilder Insert(int index, byte value)
  StringBuilder Insert(int index, short value)
  StringBuilder Insert(int index, char value)
  StringBuilder Insert(int index, Char[] value)
  StringBuilder Insert(int index, Char[] value, int startIndex, int charCount)
  StringBuilder Insert(int index, int value)
  StringBuilder Insert(int index, long value)
  StringBuilder Insert(int index, float value)
  StringBuilder Insert(int index, double value)
  StringBuilder Insert(int index, decimal value)
  StringBuilder Insert(int index, ushort value)
  StringBuilder Insert(int index, UInt32 value)
  StringBuilder Insert(int index, ulong value)
  StringBuilder Insert(int index, object value)
  StringBuilder Insert(int index, ReadOnlySpan`1<char> value)
  StringBuilder AppendFormat(string format, object arg0)
  StringBuilder AppendFormat(string format, object arg0, object arg1)
  StringBuilder AppendFormat(string format, object arg0, object arg1, object arg2)
  StringBuilder AppendFormat(string format, Object[] args)
  StringBuilder AppendFormat(IFormatProvider provider, string format, object arg0)
  StringBuilder AppendFormat(IFormatProvider provider, string format, object arg0, object arg1)
  StringBuilder AppendFormat(IFormatProvider provider, string format, object arg0, object arg1, object arg2)
  StringBuilder AppendFormat(IFormatProvider provider, string format, Object[] args)
  void FormatError()
  StringBuilder AppendFormatHelper(IFormatProvider provider, string format, ParamsArray args)
  StringBuilder Replace(string oldValue, string newValue)
  bool Equals(StringBuilder sb)
  bool Equals(ReadOnlySpan`1<char> span)
  StringBuilder Replace(string oldValue, string newValue, int startIndex, int count)
  StringBuilder Replace(char oldChar, char newChar)
  StringBuilder Replace(char oldChar, char newChar, int startIndex, int count)
  StringBuilder Append(Char* value, int valueCount)
  void Insert(int index, Char* value, int valueCount)
  void ReplaceAllInChunk(Int32[] replacements, int replacementsCount, StringBuilder sourceChunk, int removeCount, string value)
  bool StartsWith(StringBuilder chunk, int indexInChunk, int count, string value)
  void ReplaceInPlaceAtChunk(StringBuilder& chunk, Int32& indexInChunk, Char* value, int count)
  void ThreadSafeCopy(Char* sourcePtr, Char[] destination, int destinationIndex, int count)
  void ThreadSafeCopy(Char[] source, int sourceIndex, Span`1<char> destination, int destinationIndex, int count)
  StringBuilder FindChunkForIndex(int index)
  StringBuilder FindChunkForByte(int byteIndex)
  Span`1<char> get_RemainingCurrentChunk()
  StringBuilder Next(StringBuilder chunk)
  void ExpandByABlock(int minBlockCharCount)
  void .ctor(StringBuilder from)
  void MakeRoom(int index, int count, StringBuilder& chunk, Int32& indexInChunk, bool doNotMoveFollowingChars)
  void .ctor(int size, int maxCapacity, StringBuilder previousBlock)
  void Remove(int startIndex, int count, StringBuilder& chunk, Int32& indexInChunk)
--------------------------------------------------
Класс: System.Text.StringBuilderCache
Наследуется от: object
Поля:
  int MaxBuilderSize
  int DefaultCapacity
  StringBuilder t_cachedInstance
Свойства:
Методы:
  StringBuilder Acquire(int capacity)
  void Release(StringBuilder sb)
  string GetStringAndRelease(StringBuilder sb)
--------------------------------------------------
Класс: System.Text.UTF32Encoding
Наследуется от: Encoding
Поля:
  UTF32Encoding s_default
  UTF32Encoding s_bigEndianDefault
  Byte[] s_bigEndianPreamble
  Byte[] s_littleEndianPreamble
  bool _emitUTF32ByteOrderMark
  bool _isThrowException
  bool _bigEndian
Свойства:
  ReadOnlySpan`1<byte> Preamble
Методы:
  void .ctor()
  void .ctor(bool bigEndian, bool byteOrderMark)
  void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidCharacters)
  void SetDefaultFallbacks()
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string s)
  int GetByteCount(Char* chars, int count)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  string GetString(Byte[] bytes, int index, int count)
  int GetByteCount(Char* chars, int count, EncoderNLS encoder)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder)
  int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder)
  UInt32 GetSurrogate(char cHigh, char cLow)
  char GetHighSurrogate(UInt32 iChar)
  char GetLowSurrogate(UInt32 iChar)
  Decoder GetDecoder()
  Encoder GetEncoder()
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  Byte[] GetPreamble()
  ReadOnlySpan`1<byte> get_Preamble()
  bool Equals(object value)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Text.UTF7Encoding
Наследуется от: Encoding
Поля:
  string base64Chars
  string directChars
  string optionalChars
  UTF7Encoding s_default
  Byte[] _base64Bytes
  SByte[] _base64Values
  Boolean[] _directEncode
  bool _allowOptionals
  int UTF7_CODEPAGE
Свойства:
Методы:
  void .ctor()
  void .ctor(bool allowOptionals)
  void MakeTables()
  void SetDefaultFallbacks()
  bool Equals(object value)
  int GetHashCode()
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string s)
  int GetByteCount(Char* chars, int count)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  string GetString(Byte[] bytes, int index, int count)
  int GetByteCount(Char* chars, int count, EncoderNLS baseEncoder)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS baseEncoder)
  int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder)
  Decoder GetDecoder()
  Encoder GetEncoder()
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  void .cctor()
--------------------------------------------------
Класс: System.Text.UTF8Encoding
Наследуется от: Encoding
Поля:
  int UTF8_CODEPAGE
  UTF8EncodingSealed s_default
  Byte[] s_preamble
  bool _emitUTF8Identifier
  bool _isThrowException
  int FinalByte
  int SupplimentarySeq
  int ThreeByteSeq
Свойства:
  ReadOnlySpan`1<byte> Preamble
Методы:
  void .ctor()
  void .ctor(bool encoderShouldEmitUTF8Identifier)
  void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes)
  void SetDefaultFallbacks()
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string chars)
  int GetByteCount(Char* chars, int count)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  string GetString(Byte[] bytes, int index, int count)
  int GetByteCount(Char* chars, int count, EncoderNLS baseEncoder)
  int PtrDiff(Char* a, Char* b)
  int PtrDiff(Byte* a, Byte* b)
  bool InRange(int ch, int start, int end)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS baseEncoder)
  int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder)
  bool FallbackInvalidByteSequence(Byte*& pSrc, int ch, DecoderFallbackBuffer fallback, Char*& pTarget)
  int FallbackInvalidByteSequence(Byte* pSrc, int ch, DecoderFallbackBuffer fallback)
  Byte[] GetBytesUnknown(Byte*& pSrc, int ch)
  Decoder GetDecoder()
  Encoder GetEncoder()
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  Byte[] GetPreamble()
  ReadOnlySpan`1<byte> get_Preamble()
  bool Equals(object value)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Text.UnicodeEncoding
Наследуется от: Encoding
Поля:
  UnicodeEncoding s_bigEndianDefault
  UnicodeEncoding s_littleEndianDefault
  Byte[] s_bigEndianPreamble
  Byte[] s_littleEndianPreamble
  bool isThrowException
  bool bigEndian
  bool byteOrderMark
  int CharSize
  ulong highLowPatternMask
Свойства:
  ReadOnlySpan`1<byte> Preamble
Методы:
  void .ctor()
  void .ctor(bool bigEndian, bool byteOrderMark)
  void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes)
  void SetDefaultFallbacks()
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string s)
  int GetByteCount(Char* chars, int count)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  string GetString(Byte[] bytes, int index, int count)
  int GetByteCount(Char* chars, int count, EncoderNLS encoder)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder)
  int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder)
  Encoder GetEncoder()
  Decoder GetDecoder()
  Byte[] GetPreamble()
  ReadOnlySpan`1<byte> get_Preamble()
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  bool Equals(object value)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Text.ValueStringBuilder
Наследуется от: ValueType
Поля:
  Char[] _arrayToReturnToPool
  Span`1<char> _chars
  int _pos
Свойства:
  int Length
  int Capacity
  Char& Item
  Span`1<char> RawChars
Методы:
  void .ctor(Span`1<char> initialBuffer)
  int get_Length()
  void set_Length(int value)
  int get_Capacity()
  void EnsureCapacity(int capacity)
  Char& GetPinnableReference(bool terminate)
  Char& get_Item(int index)
  string ToString()
  Span`1<char> get_RawChars()
  ReadOnlySpan`1<char> AsSpan(bool terminate)
  ReadOnlySpan`1<char> AsSpan()
  ReadOnlySpan`1<char> AsSpan(int start)
  ReadOnlySpan`1<char> AsSpan(int start, int length)
  bool TryCopyTo(Span`1<char> destination, Int32& charsWritten)
  void Insert(int index, char value, int count)
  void Append(char c)
  void Append(string s)
  void AppendSlow(string s)
  void Append(char c, int count)
  void Append(Char* value, int length)
  void Append(ReadOnlySpan`1<char> value)
  Span`1<char> AppendSpan(int length)
  void GrowAndAppend(char c)
  void Grow(int requiredAdditionalCapacity)
  void Dispose()
--------------------------------------------------
Класс: System.Text.ValueUtf8Converter
Наследуется от: ValueType
Поля:
  Byte[] _arrayToReturnToPool
  Span`1<byte> _bytes
Свойства:
Методы:
  void .ctor(Span`1<byte> initialBuffer)
  Span`1<byte> ConvertAndTerminateString(ReadOnlySpan`1<char> value)
  void Dispose()
--------------------------------------------------
Класс: System.Text.Encoding
Наследуется от: object
Поля:
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) defaultEncoding
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) unicodeEncoding
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) bigEndianUnicode
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) utf7Encoding
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) utf8Encoding
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) utf32Encoding
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) asciiEncoding
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) latin1Encoding
  Dictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) encodings
  int MIMECONTF_MAILNEWS
  int MIMECONTF_BROWSER
  int MIMECONTF_SAVABLE_MAILNEWS
  int MIMECONTF_SAVABLE_BROWSER
  int CodePageDefault
  int CodePageNoOEM
  int CodePageNoMac
  int CodePageNoThread
  int CodePageNoSymbol
  int CodePageUnicode
  int CodePageBigEndian
  int CodePageWindows1252
  int CodePageMacGB2312
  int CodePageGB2312
  int CodePageMacKorean
  int CodePageDLLKorean
  int ISO2022JP
  int ISO2022JPESC
  int ISO2022JPSISO
  int ISOKorean
  int ISOSimplifiedCN
  int EUCJP
  int ChineseHZ
  int DuplicateEUCCN
  int EUCCN
  int EUCKR
  int CodePageASCII
  int ISO_8859_1
  int ISCIIAssemese
  int ISCIIBengali
  int ISCIIDevanagari
  int ISCIIGujarathi
  int ISCIIKannada
  int ISCIIMalayalam
  int ISCIIOriya
  int ISCIIPanjabi
  int ISCIITamil
  int ISCIITelugu
  int GB18030
  int ISO_8859_8I
  int ISO_8859_8_Visual
  int ENC50229
  int CodePageUTF7
  int CodePageUTF8
  int CodePageUTF32
  int CodePageUTF32BE
  int m_codePage
  CodePageDataItem dataItem
  bool m_deserializedFromEverett
  bool m_isReadOnly
  EncoderFallback encoderFallback
  DecoderFallback decoderFallback
  object s_InternalSyncObject
Свойства:
  object InternalSyncObject
  ReadOnlySpan`1<byte> Preamble
  string BodyName
  string EncodingName
  string HeaderName
  string WebName
  int WindowsCodePage
  bool IsBrowserDisplay
  bool IsBrowserSave
  bool IsMailNewsDisplay
  bool IsMailNewsSave
  bool IsSingleByte
  EncoderFallback EncoderFallback
  DecoderFallback DecoderFallback
  bool IsReadOnly
  Encoding ASCII
  Encoding Latin1
  int CodePage
  Encoding Default
  Encoding Unicode
  Encoding BigEndianUnicode
  Encoding UTF7
  Encoding UTF8
  Encoding UTF32
Методы:
  void .ctor()
  void .ctor(int codePage)
  void .ctor(int codePage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
  void SetDefaultFallbacks()
  void OnDeserializing()
  void OnDeserialized()
  void OnDeserializing(StreamingContext ctx)
  void OnDeserialized(StreamingContext ctx)
  void OnSerializing(StreamingContext ctx)
  void DeserializeEncoding(SerializationInfo info, StreamingContext context)
  void SerializeEncoding(SerializationInfo info, StreamingContext context)
  Byte[] Convert(Encoding srcEncoding, Encoding dstEncoding, Byte[] bytes)
  Byte[] Convert(Encoding srcEncoding, Encoding dstEncoding, Byte[] bytes, int index, int count)
  object get_InternalSyncObject()
  void RegisterProvider(EncodingProvider provider)
  Encoding GetEncoding(int codepage)
  Encoding GetEncoding(int codepage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
  Encoding GetEncoding(string name)
  Encoding GetEncoding(string name, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
  EncodingInfo[] GetEncodings()
  Byte[] GetPreamble()
  ReadOnlySpan`1<byte> get_Preamble()
  void GetDataItem()
  string get_BodyName()
  string get_EncodingName()
  string get_HeaderName()
  string get_WebName()
  int get_WindowsCodePage()
  bool get_IsBrowserDisplay()
  bool get_IsBrowserSave()
  bool get_IsMailNewsDisplay()
  bool get_IsMailNewsSave()
  bool get_IsSingleByte()
  EncoderFallback get_EncoderFallback()
  void set_EncoderFallback(EncoderFallback value)
  DecoderFallback get_DecoderFallback()
  void set_DecoderFallback(DecoderFallback value)
  object Clone()
  bool get_IsReadOnly()
  Encoding get_ASCII()
  Encoding get_Latin1()
  int GetByteCount(Char[] chars)
  int GetByteCount(string s)
  int GetByteCount(Char[] chars, int index, int count)
  int GetByteCount(string str, int index, int count)
  int GetByteCount(Char* chars, int count)
  int GetByteCount(Char* chars, int count, EncoderNLS encoder)
  Byte[] GetBytes(Char[] chars)
  Byte[] GetBytes(Char[] chars, int index, int count)
  int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  Byte[] GetBytes(string s)
  int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder)
  int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount)
  int GetCharCount(Byte[] bytes)
  int GetCharCount(Byte[] bytes, int index, int count)
  int GetCharCount(Byte* bytes, int count)
  int GetCharCount(Byte* bytes, int count, DecoderNLS decoder)
  Char[] GetChars(Byte[] bytes)
  Char[] GetChars(Byte[] bytes, int index, int count)
  int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount)
  int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS decoder)
  string GetString(Byte* bytes, int byteCount)
  int GetChars(ReadOnlySpan`1<byte> bytes, Span`1<char> chars)
  string GetString(ReadOnlySpan`1<byte> bytes)
  int get_CodePage()
  bool IsAlwaysNormalized()
  bool IsAlwaysNormalized(NormalizationForm form)
  Decoder GetDecoder()
  Encoding CreateDefaultEncoding()
  void setReadOnly(bool value)
  Encoding get_Default()
  Encoder GetEncoder()
  int GetMaxByteCount(int charCount)
  int GetMaxCharCount(int byteCount)
  string GetString(Byte[] bytes)
  string GetString(Byte[] bytes, int index, int count)
  Encoding get_Unicode()
  Encoding get_BigEndianUnicode()
  Encoding get_UTF7()
  Encoding get_UTF8()
  Encoding get_UTF32()
  bool Equals(object value)
  int GetHashCode()
  Char[] GetBestFitUnicodeToBytesData()
  Char[] GetBestFitBytesToUnicodeData()
  void ThrowBytesOverflow()
  void ThrowBytesOverflow(EncoderNLS encoder, bool nothingEncoded)
  void ThrowCharsOverflow()
  void ThrowCharsOverflow(DecoderNLS decoder, bool nothingDecoded)
  int GetCharCount(ReadOnlySpan`1<byte> bytes)
  int GetByteCount(ReadOnlySpan`1<char> chars)
  int GetBytes(ReadOnlySpan`1<char> chars, Span`1<byte> bytes)
  Byte[] GetBytes(string s, int index, int count)
--------------------------------------------------
Класс: System.Text.NormalizationCheck
Наследуется от: Enum
Поля:
  int value__
  NormalizationCheck Yes
  NormalizationCheck No
  NormalizationCheck Maybe
Свойства:
Методы:
--------------------------------------------------
Класс: System.Text.Normalization
Наследуется от: object
Поля:
  int NoNfd
  int NoNfkd
  int NoNfc
  int MaybeNfc
  int NoNfkc
  int MaybeNfkc
  int FullCompositionExclusion
  int IsUnsafe
  int HangulSBase
  int HangulLBase
  int HangulVBase
  int HangulTBase
  int HangulLCount
  int HangulVCount
  int HangulTCount
  int HangulNCount
  int HangulSCount
  Byte* props
  Int32* mappedChars
  Int16* charMapIndex
  Int16* helperIndex
  UInt16* mapIdxToComposite
  Byte* combiningClass
  object forLock
  bool isReady
Свойства:
  bool IsReady
Методы:
  UInt32 PropValue(int cp)
  int CharMapIdx(int cp)
  byte GetCombiningClass(int c)
  int GetPrimaryCompositeFromMapIndex(int src)
  int GetPrimaryCompositeHelperIndex(int cp)
  string Compose(string source, int checkType)
  StringBuilder Combine(string source, int start, int checkType)
  void Combine(StringBuilder sb, int i, int checkType)
  int CombineHangul(StringBuilder sb, string s, int current)
  int Fetch(StringBuilder sb, string s, int i)
  int TryComposeWithPreviousStarter(StringBuilder sb, string s, int current)
  int TryCompose(int i, int starter, int candidate)
  string Decompose(string source, int checkType)
  void Decompose(string source, StringBuilder& sb, int checkType)
  void ReorderCanonical(string src, StringBuilder& sb, int start)
  void DecomposeChar(StringBuilder& sb, Int32[]& buf, string s, int i, int checkType, Int32& start)
  NormalizationCheck QuickCheck(char c, int type)
  int GetCanonicalHangul(int s, Int32[] buf, int bufIdx)
  int GetCanonical(int c, Int32[] buf, int bufIdx, int checkType)
  bool IsNormalized(string source, NormalizationForm normalizationForm)
  bool IsNormalized(string source, int type)
  string Normalize(string source, NormalizationForm normalizationForm)
  string Normalize(string source, int type)
  bool get_IsReady()
  void load_normalization_resource(IntPtr& props, IntPtr& mappedChars, IntPtr& charMapIndex, IntPtr& helperIndex, IntPtr& mapIdxToComposite, IntPtr& combiningClass)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Text.EncodingHelper
Наследуется от: object
Поля:
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) utf8EncodingWithoutMarkers
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) utf8EncodingUnsafe
  Encoding modreq(System.Runtime.CompilerServices.IsVolatile) bigEndianUTF32Encoding
  object lockobj
  Assembly i18nAssembly
  bool i18nDisabled
Свойства:
  Encoding UTF8Unmarked
  Encoding UTF8UnmarkedUnsafe
  Encoding BigEndianUTF32
Методы:
  Encoding get_UTF8Unmarked()
  Encoding get_UTF8UnmarkedUnsafe()
  Encoding get_BigEndianUTF32()
  string InternalCodePage(Int32& code_page)
  Encoding GetDefaultEncoding()
  object InvokeI18N(string name, Object[] args)
  void .cctor()
--------------------------------------------------
Класс: System.Security.VerificationException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Security.IPermission
Поля:
Свойства:
Методы:
  IPermission Copy()
  void Demand()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  IPermission Union(IPermission target)
--------------------------------------------------
Класс: System.Security.ISecurityEncodable
Поля:
Свойства:
Методы:
  void FromXml(SecurityElement e)
  SecurityElement ToXml()
--------------------------------------------------
Класс: System.Security.IEvidenceFactory
Поля:
Свойства:
  Evidence Evidence
Методы:
  Evidence get_Evidence()
--------------------------------------------------
Класс: System.Security.ISecurityPolicyEncodable
Поля:
Свойства:
Методы:
  void FromXml(SecurityElement e, PolicyLevel level)
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.IStackWalk
Поля:
Свойства:
Методы:
  void Assert()
  void Demand()
  void Deny()
  void PermitOnly()
--------------------------------------------------
Класс: System.Security.PolicyLevelType
Наследуется от: Enum
Поля:
  int value__
  PolicyLevelType AppDomain
  PolicyLevelType Enterprise
  PolicyLevelType Machine
  PolicyLevelType User
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityZone
Наследуется от: Enum
Поля:
  int value__
  SecurityZone Internet
  SecurityZone Intranet
  SecurityZone MyComputer
  SecurityZone NoZone
  SecurityZone Trusted
  SecurityZone Untrusted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.XmlSyntaxException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(int lineNumber)
  void .ctor(int lineNumber, string message)
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Security.DynamicSecurityMethodAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.SuppressUnmanagedCodeSecurityAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.UnverifiableCodeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.AllowPartiallyTrustedCallersAttribute
Наследуется от: Attribute
Поля:
  PartialTrustVisibilityLevel _visibilityLevel
Свойства:
  PartialTrustVisibilityLevel PartialTrustVisibilityLevel
Методы:
  void .ctor()
  PartialTrustVisibilityLevel get_PartialTrustVisibilityLevel()
  void set_PartialTrustVisibilityLevel(PartialTrustVisibilityLevel value)
--------------------------------------------------
Класс: System.Security.PartialTrustVisibilityLevel
Наследуется от: Enum
Поля:
  int value__
  PartialTrustVisibilityLevel VisibleToAllHosts
  PartialTrustVisibilityLevel NotVisibleByDefault
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityCriticalScope
Наследуется от: Enum
Поля:
  int value__
  SecurityCriticalScope Explicit
  SecurityCriticalScope Everything
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityCriticalAttribute
Наследуется от: Attribute
Поля:
  SecurityCriticalScope _val
Свойства:
  SecurityCriticalScope Scope
Методы:
  void .ctor()
  void .ctor(SecurityCriticalScope scope)
  SecurityCriticalScope get_Scope()
--------------------------------------------------
Класс: System.Security.SecurityTreatAsSafeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.SecuritySafeCriticalAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.SecurityTransparentAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.SecurityRuleSet
Наследуется от: Enum
Поля:
  byte value__
  SecurityRuleSet None
  SecurityRuleSet Level1
  SecurityRuleSet Level2
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityRulesAttribute
Наследуется от: Attribute
Поля:
  SecurityRuleSet m_ruleSet
  bool m_skipVerificationInFullTrust
Свойства:
  bool SkipVerificationInFullTrust
  SecurityRuleSet RuleSet
Методы:
  void .ctor(SecurityRuleSet ruleSet)
  bool get_SkipVerificationInFullTrust()
  void set_SkipVerificationInFullTrust(bool value)
  SecurityRuleSet get_RuleSet()
--------------------------------------------------
Класс: System.Security.SecurityContextSource
Наследуется от: Enum
Поля:
  int value__
  SecurityContextSource CurrentAppDomain
  SecurityContextSource CurrentAssembly
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityContextDisableFlow
Наследуется от: Enum
Поля:
  int value__
  SecurityContextDisableFlow Nothing
  SecurityContextDisableFlow WI
  SecurityContextDisableFlow All
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityDocument
Наследуется от: object
Поля:
  Byte[] m_data
  byte c_element
  byte c_attribute
  byte c_text
  byte c_children
  int c_growthSize
Свойства:
Методы:
  void .ctor(int numData)
  void .ctor(Byte[] data)
  void .ctor(SecurityElement elRoot)
  void GuaranteeSize(int size)
  void AddString(string str, Int32& position)
  void AppendString(string str, Int32& position)
  int EncodedStringSize(string str)
  string GetString(Int32& position)
  string GetString(Int32& position, bool bCreate)
  void AddToken(byte b, Int32& position)
  void ConvertElement(SecurityElement elCurrent, Int32& position)
  SecurityElement GetRootElement()
  SecurityElement GetElement(int position, bool bCreate)
  SecurityElement InternalGetElement(Int32& position, bool bCreate)
  string GetTagForElement(int position)
  ArrayList GetChildrenPositionForElement(int position)
  string GetAttributeForElement(int position, string attributeName)
--------------------------------------------------
Класс: System.Security.SecurityContext
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  SecurityContext CreateCopy()
  SecurityContext Capture()
  void Dispose()
  bool IsFlowSuppressed()
  bool IsWindowsIdentityFlowSuppressed()
  void RestoreFlow()
  void Run(SecurityContext securityContext, ContextCallback callback, object state)
  AsyncFlowControl SuppressFlow()
  AsyncFlowControl SuppressFlowWindowsIdentity()
--------------------------------------------------
Класс: System.Security.CodeAccessPermission
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void Assert()
  IPermission Copy()
  void Demand()
  void Deny()
  bool Equals(object obj)
  void FromXml(SecurityElement elem)
  int GetHashCode()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  string ToString()
  SecurityElement ToXml()
  IPermission Union(IPermission other)
  void PermitOnly()
  void RevertAll()
  void RevertAssert()
  void RevertDeny()
  void RevertPermitOnly()
  SecurityElement Element(int version)
  PermissionState CheckPermissionState(PermissionState state, bool allowUnrestricted)
  int CheckSecurityElement(SecurityElement se, string parameterName, int minimumVersion, int maximumVersion)
  bool IsUnrestricted(SecurityElement se)
  void ThrowInvalidPermission(IPermission target, Type expected)
--------------------------------------------------
Класс: System.Security.HostProtectionException
Наследуется от: SystemException
Поля:
  HostProtectionResource _protected
  HostProtectionResource _demanded
Свойства:
  HostProtectionResource DemandedResources
  HostProtectionResource ProtectedResources
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception e)
  void .ctor(string message, HostProtectionResource protectedResources, HostProtectionResource demandedResources)
  void .ctor(SerializationInfo info, StreamingContext context)
  HostProtectionResource get_DemandedResources()
  HostProtectionResource get_ProtectedResources()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string ToString()
--------------------------------------------------
Класс: System.Security.HostSecurityManager
Наследуется от: object
Поля:
Свойства:
  PolicyLevel DomainPolicy
  HostSecurityManagerOptions Flags
Методы:
  void .ctor()
  PolicyLevel get_DomainPolicy()
  HostSecurityManagerOptions get_Flags()
  ApplicationTrust DetermineApplicationTrust(Evidence applicationEvidence, Evidence activatorEvidence, TrustManagerContext context)
  Evidence ProvideAppDomainEvidence(Evidence inputEvidence)
  Evidence ProvideAssemblyEvidence(Assembly loadedAssembly, Evidence inputEvidence)
  PermissionSet ResolvePolicy(Evidence evidence)
  EvidenceBase GenerateAppDomainEvidence(Type evidenceType)
  EvidenceBase GenerateAssemblyEvidence(Type evidenceType, Assembly assembly)
  Type[] GetHostSuppliedAppDomainEvidenceTypes()
  Type[] GetHostSuppliedAssemblyEvidenceTypes(Assembly assembly)
--------------------------------------------------
Класс: System.Security.HostSecurityManagerOptions
Наследуется от: Enum
Поля:
  int value__
  HostSecurityManagerOptions None
  HostSecurityManagerOptions HostAppDomainEvidence
  HostSecurityManagerOptions HostPolicyLevel
  HostSecurityManagerOptions HostAssemblyEvidence
  HostSecurityManagerOptions HostDetermineApplicationTrust
  HostSecurityManagerOptions HostResolvePolicy
  HostSecurityManagerOptions AllFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.NamedPermissionSet
Наследуется от: PermissionSet
Поля:
  string name
  string description
Свойства:
  string Description
  string Name
Методы:
  void .ctor()
  void .ctor(string name, PermissionSet permSet)
  void .ctor(string name, PermissionState state)
  void .ctor(NamedPermissionSet permSet)
  void .ctor(string name)
  string get_Description()
  void set_Description(string value)
  string get_Name()
  void set_Name(string value)
  PermissionSet Copy()
  NamedPermissionSet Copy(string name)
  void FromXml(SecurityElement et)
  SecurityElement ToXml()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Security.PermissionBuilder
Наследуется от: object
Поля:
  Object[] psNone
Свойства:
Методы:
  IPermission Create(string fullname, PermissionState state)
  IPermission Create(SecurityElement se)
  IPermission Create(string fullname, SecurityElement se)
  IPermission Create(Type type)
  IPermission CreatePermission(string fullname, SecurityElement se)
  void .cctor()
--------------------------------------------------
Класс: System.Security.PermissionSet
Наследуется от: object
Поля:
  string tagName
  int version
  Object[] psUnrestricted
  PermissionState state
  ArrayList list
  PolicyLevel _policyLevel
  bool _declsec
  bool _readOnly
  Boolean[] _ignored
  Object[] action
Свойства:
  int Count
  bool IsSynchronized
  bool IsReadOnly
  object SyncRoot
  bool DeclarativeSecurity
  PolicyLevel Resolver
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  void .ctor(PermissionSet permSet)
  void .ctor(string xml)
  void .ctor(IPermission perm)
  IPermission AddPermission(IPermission perm)
  void Assert()
  void Clear()
  PermissionSet Copy()
  void CopyTo(Array array, int index)
  void Demand()
  void CasOnlyDemand(int skip)
  void Deny()
  void FromXml(SecurityElement et)
  IEnumerator GetEnumerator()
  bool IsSubsetOf(PermissionSet target)
  void PermitOnly()
  bool ContainsNonCodeAccessPermissions()
  Byte[] ConvertPermissionSet(string inFormat, Byte[] inData, string outFormat)
  IPermission GetPermission(Type permClass)
  PermissionSet Intersect(PermissionSet other)
  void InternalIntersect(PermissionSet intersect, PermissionSet a, PermissionSet b, bool unrestricted)
  bool IsEmpty()
  bool IsUnrestricted()
  IPermission RemovePermission(Type permClass)
  IPermission SetPermission(IPermission perm)
  string ToString()
  SecurityElement ToXml()
  PermissionSet Union(PermissionSet other)
  int get_Count()
  bool get_IsSynchronized()
  bool get_IsReadOnly()
  object get_SyncRoot()
  bool get_DeclarativeSecurity()
  void set_DeclarativeSecurity(bool value)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  bool Equals(object obj)
  int GetHashCode()
  void RevertAssert()
  PolicyLevel get_Resolver()
  void set_Resolver(PolicyLevel value)
  void SetReadOnly(bool value)
  bool AllIgnored()
  PermissionSet CreateFromBinaryFormat(Byte[] data)
  int ReadEncodedInt(Byte[] data, Int32& position)
  IPermission ProcessAttribute(Byte[] data, Int32& position)
  void .cctor()
  IPermission AddPermissionImpl(IPermission perm)
  IEnumerator GetEnumeratorImpl()
  IPermission GetPermissionImpl(Type permClass)
  IPermission RemovePermissionImpl(Type permClass)
  IPermission SetPermissionImpl(IPermission perm)
--------------------------------------------------
Класс: System.Security.SecureString
Наследуется от: object
Поля:
  int BlockSize
  int MaxSize
  int length
  bool disposed
  bool read_only
  Byte[] data
Свойства:
  int Length
Методы:
  void .cctor()
  void .ctor()
  void .ctor(Char* value, int length)
  int get_Length()
  void AppendChar(char c)
  void Clear()
  SecureString Copy()
  void Dispose()
  void InsertAt(int index, char c)
  bool IsReadOnly()
  void MakeReadOnly()
  void RemoveAt(int index)
  void SetAt(int index, char c)
  void Encrypt()
  void Decrypt()
  void Alloc(int length, bool realloc)
  Byte[] GetBuffer()
--------------------------------------------------
Класс: System.Security.SecurityElementType
Наследуется от: Enum
Поля:
  int value__
  SecurityElementType Regular
  SecurityElementType Format
  SecurityElementType Comment
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityElement
Наследуется от: object
Поля:
  string text
  string tag
  ArrayList attributes
  ArrayList children
  Char[] invalid_tag_chars
  Char[] invalid_text_chars
  Char[] invalid_attr_name_chars
  Char[] invalid_attr_value_chars
  Char[] invalid_chars
Свойства:
  Hashtable Attributes
  ArrayList Children
  string Tag
  string Text
  string m_strTag
  string m_strText
  ArrayList m_lAttributes
  ArrayList InternalChildren
Методы:
  void .ctor(string tag)
  void .ctor(string tag, string text)
  void .ctor(SecurityElement se)
  Hashtable get_Attributes()
  void set_Attributes(Hashtable value)
  ArrayList get_Children()
  void set_Children(ArrayList value)
  string get_Tag()
  void set_Tag(string value)
  string get_Text()
  void set_Text(string value)
  void AddAttribute(string name, string value)
  void AddChild(SecurityElement child)
  string Attribute(string name)
  SecurityElement Copy()
  bool Equal(SecurityElement other)
  string Escape(string str)
  string Unescape(string str)
  SecurityElement FromString(string xml)
  bool IsValidAttributeName(string name)
  bool IsValidAttributeValue(string value)
  bool IsValidTag(string tag)
  bool IsValidText(string text)
  SecurityElement SearchForChildByTag(string tag)
  string SearchForTextOfTag(string tag)
  string ToString()
  void ToXml(StringBuilder& s, int level)
  SecurityAttribute GetAttribute(string name)
  string get_m_strTag()
  string get_m_strText()
  void set_m_strText(string value)
  ArrayList get_m_lAttributes()
  ArrayList get_InternalChildren()
  string SearchForTextOfLocalName(string strLocalName)
  void .cctor()
--------------------------------------------------
Класс: System.Security.SecurityException
Наследуется от: SystemException
Поля:
  string permissionState
  Type permissionType
  string _granted
  string _refused
  object _demanded
  IPermission _firstperm
  MethodInfo _method
  Evidence _evidence
  SecurityAction _action
  object _denyset
  object _permitset
  AssemblyName _assembly
  string _url
  SecurityZone _zone
Свойства:
  SecurityAction Action
  object DenySetInstance
  AssemblyName FailedAssemblyInfo
  MethodInfo Method
  object PermitOnlySetInstance
  string Url
  SecurityZone Zone
  object Demanded
  IPermission FirstPermissionThatFailed
  string PermissionState
  Type PermissionType
  string GrantedSet
  string RefusedSet
Методы:
  SecurityAction get_Action()
  void set_Action(SecurityAction value)
  object get_DenySetInstance()
  void set_DenySetInstance(object value)
  AssemblyName get_FailedAssemblyInfo()
  void set_FailedAssemblyInfo(AssemblyName value)
  MethodInfo get_Method()
  void set_Method(MethodInfo value)
  object get_PermitOnlySetInstance()
  void set_PermitOnlySetInstance(object value)
  string get_Url()
  void set_Url(string value)
  SecurityZone get_Zone()
  void set_Zone(SecurityZone value)
  object get_Demanded()
  void set_Demanded(object value)
  IPermission get_FirstPermissionThatFailed()
  void set_FirstPermissionThatFailed(IPermission value)
  string get_PermissionState()
  void set_PermissionState(string value)
  Type get_PermissionType()
  void set_PermissionType(Type value)
  string get_GrantedSet()
  void set_GrantedSet(string value)
  string get_RefusedSet()
  void set_RefusedSet(string value)
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception inner)
  void .ctor(string message, Type type)
  void .ctor(string message, Type type, string state)
  void .ctor(string message, PermissionSet granted, PermissionSet refused)
  void .ctor(string message, object deny, object permitOnly, MethodInfo method, object demanded, IPermission permThatFailed)
  void .ctor(string message, AssemblyName assemblyName, PermissionSet grant, PermissionSet refused, MethodInfo method, SecurityAction action, object demanded, IPermission permThatFailed, Evidence evidence)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string ToString()
--------------------------------------------------
Класс: System.Security.RuntimeDeclSecurityEntry
Наследуется от: ValueType
Поля:
  IntPtr blob
  int size
  int index
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.RuntimeDeclSecurityActions
Наследуется от: ValueType
Поля:
  RuntimeDeclSecurityEntry cas
  RuntimeDeclSecurityEntry noncas
  RuntimeDeclSecurityEntry choice
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.SecurityManager
Наследуется от: object
Поля:
  object _lockObject
  ArrayList _hierarchy
  IPermission _unmanagedCode
  Hashtable _declsecCache
  PolicyLevel _level
  SecurityPermission _execution
Свойства:
  bool CheckExecutionRights
  bool SecurityEnabled
  IEnumerator Hierarchy
  PolicyLevel ResolvingPolicyLevel
  IPermission UnmanagedCode
Методы:
  void .cctor()
  bool get_CheckExecutionRights()
  void set_CheckExecutionRights(bool value)
  bool get_SecurityEnabled()
  void set_SecurityEnabled(bool value)
  bool CheckElevatedPermissions()
  void EnsureElevatedPermissions()
  void GetZoneAndOrigin(ArrayList& zone, ArrayList& origin)
  bool IsGranted(IPermission perm)
  bool IsGranted(Assembly a, IPermission perm)
  PolicyLevel LoadPolicyLevelFromFile(string path, PolicyLevelType type)
  PolicyLevel LoadPolicyLevelFromString(string str, PolicyLevelType type)
  IEnumerator PolicyHierarchy()
  PermissionSet ResolvePolicy(Evidence evidence)
  PermissionSet ResolvePolicy(Evidence[] evidences)
  PermissionSet ResolveSystemPolicy(Evidence evidence)
  PermissionSet ResolvePolicy(Evidence evidence, PermissionSet reqdPset, PermissionSet optPset, PermissionSet denyPset, PermissionSet& denied)
  IEnumerator ResolvePolicyGroups(Evidence evidence)
  void SavePolicy()
  void SavePolicyLevel(PolicyLevel level)
  IEnumerator get_Hierarchy()
  void InitializePolicyHierarchy()
  bool ResolvePolicyLevel(PermissionSet& ps, PolicyLevel pl, Evidence evidence)
  void ResolveIdentityPermissions(PermissionSet ps, Evidence evidence)
  PolicyLevel get_ResolvingPolicyLevel()
  void set_ResolvingPolicyLevel(PolicyLevel value)
  PermissionSet Decode(IntPtr permissions, int length)
  PermissionSet Decode(Byte[] encodedPermissions)
  IPermission get_UnmanagedCode()
  void ThrowException(Exception ex)
  PermissionSet GetStandardSandbox(Evidence evidence)
  bool CurrentThreadRequiresSecurityContextCapture()
--------------------------------------------------
Класс: System.Security.SecurityState
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void EnsureState()
  bool IsStateAvailable()
--------------------------------------------------
Класс: System.Security.Util.Hex
Наследуется от: object
Поля:
Свойства:
Методы:
  char HexDigit(int num)
  string EncodeHexString(Byte[] sArray)
  string EncodeHexStringFromInt(Byte[] sArray)
  int ConvertHexDigit(char val)
  Byte[] DecodeHexString(string hexString)
--------------------------------------------------
Класс: System.Security.Util.Parser
Наследуется от: object
Поля:
  SecurityDocument _doc
  Tokenizer _t
  short c_flag
  short c_elementtag
  short c_attributetag
  short c_texttag
  short c_additionaltexttag
  short c_childrentag
  short c_wastedstringtag
Свойства:
Методы:
  SecurityElement GetTopElement()
  void GetRequiredSizes(TokenizerStream stream, Int32& index)
  int DetermineFormat(TokenizerStream stream)
  void ParseContents()
  void .ctor(Tokenizer t)
  void .ctor(string input)
  void .ctor(string input, String[] searchStrings, String[] replaceStrings)
  void .ctor(Byte[] array, ByteTokenEncoding encoding)
  void .ctor(Byte[] array, ByteTokenEncoding encoding, int startIndex)
  void .ctor(StreamReader input)
  void .ctor(Char[] array)
--------------------------------------------------
Класс: System.Security.Util.Tokenizer
Наследуется от: object
Поля:
  byte bra
  byte ket
  byte slash
  byte cstr
  byte equals
  byte quest
  byte bang
  byte dash
  int intOpenBracket
  int intCloseBracket
  int intSlash
  int intEquals
  int intQuote
  int intQuest
  int intBang
  int intDash
  int intTab
  int intCR
  int intLF
  int intSpace
  int LineNo
  int _inProcessingTag
  Byte[] _inBytes
  Char[] _inChars
  string _inString
  int _inIndex
  int _inSize
  int _inSavedCharacter
  TokenSource _inTokenSource
  ITokenReader _inTokenReader
  StringMaker _maker
  String[] _searchStrings
  String[] _replaceStrings
  int _inNestedIndex
  int _inNestedSize
  string _inNestedString
Свойства:
Методы:
  void BasicInitialization()
  void Recycle()
  void .ctor(string input)
  void .ctor(string input, String[] searchStrings, String[] replaceStrings)
  void .ctor(Byte[] array, ByteTokenEncoding encoding, int startIndex)
  void .ctor(Char[] array)
  void .ctor(StreamReader input)
  void ChangeFormat(Encoding encoding)
  void GetTokens(TokenizerStream stream, int maxNum, bool endAfterKet)
  string GetStringToken()
--------------------------------------------------
Класс: System.Security.Util.TokenizerShortBlock
Наследуется от: object
Поля:
  Int16[] m_block
  TokenizerShortBlock m_next
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Util.TokenizerStringBlock
Наследуется от: object
Поля:
  String[] m_block
  TokenizerStringBlock m_next
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Util.TokenizerStream
Наследуется от: object
Поля:
  int m_countTokens
  TokenizerShortBlock m_headTokens
  TokenizerShortBlock m_lastTokens
  TokenizerShortBlock m_currentTokens
  int m_indexTokens
  TokenizerStringBlock m_headStrings
  TokenizerStringBlock m_currentStrings
  int m_indexStrings
Свойства:
Методы:
  void .ctor()
  void AddToken(short token)
  void AddString(string str)
  void Reset()
  short GetNextFullToken()
  short GetNextToken()
  string GetNextString()
  void ThrowAwayNextString()
  void TagLastToken(short tag)
  int GetTokenCount()
  void GoToPosition(int position)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationVersionMatch
Наследуется от: Enum
Поля:
  int value__
  ApplicationVersionMatch MatchAllVersions
  ApplicationVersionMatch MatchExactVersion
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Policy.IIdentityPermissionFactory
Поля:
Свойства:
Методы:
  IPermission CreateIdentityPermission(Evidence evidence)
--------------------------------------------------
Класс: System.Security.Policy.IMembershipCondition
Поля:
Свойства:
Методы:
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object obj)
  string ToString()
--------------------------------------------------
Класс: System.Security.Policy.PolicyStatementAttribute
Наследуется от: Enum
Поля:
  int value__
  PolicyStatementAttribute All
  PolicyStatementAttribute Exclusive
  PolicyStatementAttribute LevelFinal
  PolicyStatementAttribute Nothing
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Policy.Publisher
Наследуется от: EvidenceBase
Поля:
Свойства:
  X509Certificate Certificate
Методы:
  void .ctor(X509Certificate cert)
  X509Certificate get_Certificate()
  object Copy()
  IPermission CreateIdentityPermission(Evidence evidence)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: System.Security.Policy.PublisherMembershipCondition
Наследуется от: object
Поля:
  X509Certificate <Certificate>k__BackingField
Свойства:
  X509Certificate Certificate
Методы:
  void .ctor(X509Certificate certificate)
  X509Certificate get_Certificate()
  void set_Certificate(X509Certificate value)
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.AllMembershipCondition
Наследуется от: object
Поля:
  int version
Свойства:
Методы:
  void .ctor()
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationDirectory
Наследуется от: EvidenceBase
Поля:
  string directory
Свойства:
  string Directory
Методы:
  void .ctor(string name)
  string get_Directory()
  object Copy()
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
  void ThrowOnInvalid(string appdir)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationDirectoryMembershipCondition
Наследуется от: object
Поля:
  int version
Свойства:
Методы:
  void .ctor()
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationSecurityInfo
Наследуется от: object
Поля:
  Evidence _evidence
  ApplicationId _appid
  PermissionSet _defaultSet
  ApplicationId _deployid
Свойства:
  Evidence ApplicationEvidence
  ApplicationId ApplicationId
  PermissionSet DefaultRequestSet
  ApplicationId DeploymentId
Методы:
  void .ctor(ActivationContext activationContext)
  Evidence get_ApplicationEvidence()
  void set_ApplicationEvidence(Evidence value)
  ApplicationId get_ApplicationId()
  void set_ApplicationId(ApplicationId value)
  PermissionSet get_DefaultRequestSet()
  void set_DefaultRequestSet(PermissionSet value)
  ApplicationId get_DeploymentId()
  void set_DeploymentId(ApplicationId value)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationSecurityManager
Наследуется от: object
Поля:
  IApplicationTrustManager _appTrustManager
  ApplicationTrustCollection _userAppTrusts
Свойства:
  IApplicationTrustManager ApplicationTrustManager
  ApplicationTrustCollection UserApplicationTrusts
Методы:
  IApplicationTrustManager get_ApplicationTrustManager()
  ApplicationTrustCollection get_UserApplicationTrusts()
  bool DetermineApplicationTrust(ActivationContext activationContext, TrustManagerContext context)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationTrust
Наследуется от: EvidenceBase
Поля:
  ApplicationIdentity _appid
  PolicyStatement _defaultPolicy
  object _xtranfo
  bool _trustrun
  bool _persist
  IList`1<StrongName> fullTrustAssemblies
Свойства:
  ApplicationIdentity ApplicationIdentity
  PolicyStatement DefaultGrantSet
  object ExtraInfo
  bool IsApplicationTrustedToRun
  bool Persist
  IList`1<StrongName> FullTrustAssemblies
Методы:
  void .ctor()
  void .ctor(ApplicationIdentity applicationIdentity)
  void .ctor(PermissionSet defaultGrantSet, IEnumerable`1<StrongName> fullTrustAssemblies)
  ApplicationIdentity get_ApplicationIdentity()
  void set_ApplicationIdentity(ApplicationIdentity value)
  PolicyStatement get_DefaultGrantSet()
  void set_DefaultGrantSet(PolicyStatement value)
  object get_ExtraInfo()
  void set_ExtraInfo(object value)
  bool get_IsApplicationTrustedToRun()
  void set_IsApplicationTrustedToRun(bool value)
  bool get_Persist()
  void set_Persist(bool value)
  void FromXml(SecurityElement element)
  SecurityElement ToXml()
  IList`1<StrongName> get_FullTrustAssemblies()
  PolicyStatement GetDefaultGrantSet()
--------------------------------------------------
Класс: System.Security.Policy.ApplicationTrustCollection
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  int Count
  bool IsSynchronized
  object SyncRoot
  ApplicationTrust Item
  ApplicationTrust Item
Методы:
  void .ctor()
  int get_Count()
  bool get_IsSynchronized()
  object get_SyncRoot()
  ApplicationTrust get_Item(int index)
  ApplicationTrust get_Item(string appFullName)
  int Add(ApplicationTrust trust)
  void AddRange(ApplicationTrust[] trusts)
  void AddRange(ApplicationTrustCollection trusts)
  void Clear()
  void CopyTo(ApplicationTrust[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  ApplicationTrustCollection Find(ApplicationIdentity applicationIdentity, ApplicationVersionMatch versionMatch)
  ApplicationTrustEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Remove(ApplicationTrust trust)
  void Remove(ApplicationIdentity applicationIdentity, ApplicationVersionMatch versionMatch)
  void RemoveRange(ApplicationTrust[] trusts)
  void RemoveRange(ApplicationTrustCollection trusts)
  void RemoveAllInstances(ApplicationTrust trust)
--------------------------------------------------
Класс: System.Security.Policy.ApplicationTrustEnumerator
Наследуется от: object
Поля:
  ApplicationTrustCollection trusts
  int current
Свойства:
  ApplicationTrust Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(ApplicationTrustCollection atc)
  ApplicationTrust get_Current()
  object System.Collections.IEnumerator.get_Current()
  void Reset()
  bool MoveNext()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Policy.CodeConnectAccess
Наследуется от: object
Поля:
  string AnyScheme
  int DefaultPort
  int OriginPort
  string OriginScheme
  string _scheme
  int _port
Свойства:
  int Port
  string Scheme
Методы:
  void .ctor(string allowScheme, int allowPort)
  int get_Port()
  string get_Scheme()
  bool Equals(object o)
  int GetHashCode()
  CodeConnectAccess CreateAnySchemeAccess(int allowPort)
  CodeConnectAccess CreateOriginSchemeAccess(int allowPort)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Policy.CodeGroup
Наследуется от: object
Поля:
  PolicyStatement m_policy
  IMembershipCondition m_membershipCondition
  string m_description
  string m_name
  ArrayList m_children
Свойства:
  string MergeLogic
  PolicyStatement PolicyStatement
  string Description
  IMembershipCondition MembershipCondition
  string Name
  IList Children
  string AttributeString
  string PermissionSetName
Методы:
  void .ctor(IMembershipCondition membershipCondition, PolicyStatement policy)
  void .ctor(SecurityElement e, PolicyLevel level)
  CodeGroup Copy()
  string get_MergeLogic()
  PolicyStatement Resolve(Evidence evidence)
  CodeGroup ResolveMatchingCodeGroups(Evidence evidence)
  PolicyStatement get_PolicyStatement()
  void set_PolicyStatement(PolicyStatement value)
  string get_Description()
  void set_Description(string value)
  IMembershipCondition get_MembershipCondition()
  void set_MembershipCondition(IMembershipCondition value)
  string get_Name()
  void set_Name(string value)
  IList get_Children()
  void set_Children(IList value)
  string get_AttributeString()
  string get_PermissionSetName()
  void AddChild(CodeGroup group)
  bool Equals(object o)
  bool Equals(CodeGroup cg, bool compareChildren)
  void RemoveChild(CodeGroup group)
  int GetHashCode()
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  void ParseXml(SecurityElement e, PolicyLevel level)
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
  void CreateXml(SecurityElement element, PolicyLevel level)
  CodeGroup CreateFromXml(SecurityElement se, PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.DefaultPolicies
Наследуется от: object
Поля:
  string DnsPermissionClass
  string EventLogPermissionClass
  string PrintingPermissionClass
  string SocketPermissionClass
  string WebPermissionClass
  string PerformanceCounterPermissionClass
  string DirectoryServicesPermissionClass
  string MessageQueuePermissionClass
  string ServiceControllerPermissionClass
  string OleDbPermissionClass
  string SqlClientPermissionClass
  Version _fxVersion
  Byte[] _ecmaKey
  StrongNamePublicKeyBlob _ecma
  Byte[] _msFinalKey
  StrongNamePublicKeyBlob _msFinal
  NamedPermissionSet _fullTrust
  NamedPermissionSet _localIntranet
  NamedPermissionSet _internet
  NamedPermissionSet _skipVerification
  NamedPermissionSet _execution
  NamedPermissionSet _nothing
  NamedPermissionSet _everything
Свойства:
  PermissionSet FullTrust
  PermissionSet LocalIntranet
  PermissionSet Internet
  PermissionSet SkipVerification
  PermissionSet Execution
  PermissionSet Nothing
  PermissionSet Everything
Методы:
  PermissionSet GetSpecialPermissionSet(string name)
  PermissionSet get_FullTrust()
  PermissionSet get_LocalIntranet()
  PermissionSet get_Internet()
  PermissionSet get_SkipVerification()
  PermissionSet get_Execution()
  PermissionSet get_Nothing()
  PermissionSet get_Everything()
  StrongNameMembershipCondition FullTrustMembership(string name, Key key)
  NamedPermissionSet BuildFullTrust()
  NamedPermissionSet BuildLocalIntranet()
  NamedPermissionSet BuildInternet()
  NamedPermissionSet BuildSkipVerification()
  NamedPermissionSet BuildExecution()
  NamedPermissionSet BuildNothing()
  NamedPermissionSet BuildEverything()
  SecurityElement PrintingPermission(string level)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Policy.Evidence
Наследуется от: object
Поля:
  bool _locked
  ArrayList hostEvidenceList
  ArrayList assemblyEvidenceList
Свойства:
  int Count
  bool IsReadOnly
  bool IsSynchronized
  bool Locked
  object SyncRoot
  ArrayList HostEvidenceList
  ArrayList AssemblyEvidenceList
Методы:
  void .ctor()
  void .ctor(Evidence evidence)
  void .ctor(EvidenceBase[] hostEvidence, EvidenceBase[] assemblyEvidence)
  void .ctor(Object[] hostEvidence, Object[] assemblyEvidence)
  int get_Count()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  bool get_Locked()
  void set_Locked(bool value)
  object get_SyncRoot()
  ArrayList get_HostEvidenceList()
  ArrayList get_AssemblyEvidenceList()
  void AddAssembly(object id)
  void AddHost(object id)
  void Clear()
  Evidence Clone()
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  IEnumerator GetAssemblyEnumerator()
  IEnumerator GetHostEnumerator()
  void Merge(Evidence evidence)
  void RemoveType(Type t)
  bool IsAuthenticodePresent(Assembly a)
  Evidence GetDefaultHostEvidence(Assembly a)
  void AddAssemblyEvidence(T evidence)
  void AddHostEvidence(T evidence)
  T GetAssemblyEvidence()
  T GetHostEvidence()
--------------------------------------------------
Класс: System.Security.Policy.EvidenceBase
Наследуется от: object
Поля:
Свойства:
Методы:
  EvidenceBase Clone()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Policy.FileCodeGroup
Наследуется от: CodeGroup
Поля:
  FileIOPermissionAccess m_access
Свойства:
  string MergeLogic
  string AttributeString
  string PermissionSetName
Методы:
  void .ctor(IMembershipCondition membershipCondition, FileIOPermissionAccess access)
  void .ctor(SecurityElement e, PolicyLevel level)
  CodeGroup Copy()
  string get_MergeLogic()
  PolicyStatement Resolve(Evidence evidence)
  CodeGroup ResolveMatchingCodeGroups(Evidence evidence)
  string get_AttributeString()
  string get_PermissionSetName()
  bool Equals(object o)
  int GetHashCode()
  void ParseXml(SecurityElement e, PolicyLevel level)
  void CreateXml(SecurityElement element, PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.FirstMatchCodeGroup
Наследуется от: CodeGroup
Поля:
Свойства:
  string MergeLogic
Методы:
  void .ctor(IMembershipCondition membershipCondition, PolicyStatement policy)
  void .ctor(SecurityElement e, PolicyLevel level)
  string get_MergeLogic()
  CodeGroup Copy()
  PolicyStatement Resolve(Evidence evidence)
  CodeGroup ResolveMatchingCodeGroups(Evidence evidence)
  FirstMatchCodeGroup CopyNoChildren()
--------------------------------------------------
Класс: System.Security.Policy.GacInstalled
Наследуется от: EvidenceBase
Поля:
Свойства:
Методы:
  void .ctor()
  object Copy()
  IPermission CreateIdentityPermission(Evidence evidence)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
--------------------------------------------------
Класс: System.Security.Policy.GacMembershipCondition
Наследуется от: object
Поля:
  int version
Свойства:
Методы:
  void .ctor()
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.Hash
Наследуется от: EvidenceBase
Поля:
  Assembly assembly
  Byte[] data
  Byte[] _md5
  Byte[] _sha1
Свойства:
  Byte[] MD5
  Byte[] SHA1
  Byte[] SHA256
Методы:
  void .ctor(Assembly assembly)
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  Byte[] get_MD5()
  Byte[] get_SHA1()
  Byte[] GenerateHash(HashAlgorithm hashAlg)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string ToString()
  Byte[] GetData()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
  Hash CreateMD5(Byte[] md5)
  Hash CreateSHA1(Byte[] sha1)
  Byte[] get_SHA256()
  Hash CreateSHA256(Byte[] sha256)
--------------------------------------------------
Класс: System.Security.Policy.HashMembershipCondition
Наследуется от: object
Поля:
  int version
  HashAlgorithm hash_algorithm
  Byte[] hash_value
Свойства:
  HashAlgorithm HashAlgorithm
  Byte[] HashValue
Методы:
  void .ctor()
  void .ctor(HashAlgorithm hashAlg, Byte[] value)
  HashAlgorithm get_HashAlgorithm()
  void set_HashAlgorithm(HashAlgorithm value)
  Byte[] get_HashValue()
  void set_HashValue(Byte[] value)
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  bool Compare(Byte[] expected, Byte[] actual)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Security.Policy.IApplicationTrustManager
Поля:
Свойства:
Методы:
  ApplicationTrust DetermineApplicationTrust(ActivationContext activationContext, TrustManagerContext context)
--------------------------------------------------
Класс: System.Security.Policy.IBuiltInEvidence
Поля:
Свойства:
Методы:
  int GetRequiredSize(bool verbose)
  int InitFromBuffer(Char[] buffer, int position)
  int OutputToBuffer(Char[] buffer, int position, bool verbose)
--------------------------------------------------
Класс: System.Security.Policy.IConstantMembershipCondition
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Policy.MembershipConditionHelper
Наследуется от: object
Поля:
  string XmlTag
Свойства:
Методы:
  int CheckSecurityElement(SecurityElement se, string parameterName, int minimumVersion, int maximumVersion)
  SecurityElement Element(Type type, int version)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Policy.MonoTrustManager
Наследуется от: object
Поля:
  string tag
Свойства:
Методы:
  ApplicationTrust DetermineApplicationTrust(ActivationContext activationContext, TrustManagerContext context)
  void FromXml(SecurityElement e)
  SecurityElement ToXml()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Policy.NetCodeGroup
Наследуется от: CodeGroup
Поля:
  string AbsentOriginScheme
  string AnyOtherOriginScheme
  Hashtable _rules
  int _hashcode
Свойства:
  string AttributeString
  string MergeLogic
  string PermissionSetName
Методы:
  void .ctor(IMembershipCondition membershipCondition)
  void .ctor(SecurityElement e, PolicyLevel level)
  string get_AttributeString()
  string get_MergeLogic()
  string get_PermissionSetName()
  void AddConnectAccess(string originScheme, CodeConnectAccess connectAccess)
  CodeGroup Copy()
  bool Equals(CodeConnectAccess[] rules1, CodeConnectAccess[] rules2)
  bool Equals(object o)
  DictionaryEntry[] GetConnectAccessRules()
  int GetHashCode()
  PolicyStatement Resolve(Evidence evidence)
  void ResetConnectAccess()
  CodeGroup ResolveMatchingCodeGroups(Evidence evidence)
  void CreateXml(SecurityElement element, PolicyLevel level)
  void ParseXml(SecurityElement e, PolicyLevel level)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Policy.PermissionRequestEvidence
Наследуется от: EvidenceBase
Поля:
  PermissionSet requested
  PermissionSet optional
  PermissionSet denied
Свойства:
  PermissionSet DeniedPermissions
  PermissionSet OptionalPermissions
  PermissionSet RequestedPermissions
Методы:
  void .ctor(PermissionSet request, PermissionSet optional, PermissionSet denied)
  PermissionSet get_DeniedPermissions()
  PermissionSet get_OptionalPermissions()
  PermissionSet get_RequestedPermissions()
  PermissionRequestEvidence Copy()
  string ToString()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
--------------------------------------------------
Класс: System.Security.Policy.PolicyException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception exception)
--------------------------------------------------
Класс: System.Security.Policy.PolicyLevel
Наследуется от: object
Поля:
  string label
  CodeGroup root_code_group
  ArrayList full_trust_assemblies
  ArrayList named_permission_sets
  string _location
  PolicyLevelType _type
  Hashtable fullNames
  SecurityElement xml
Свойства:
  IList FullTrustAssemblies
  string Label
  IList NamedPermissionSets
  CodeGroup RootCodeGroup
  string StoreLocation
  PolicyLevelType Type
Методы:
  void .ctor(string label, PolicyLevelType type)
  void LoadFromFile(string filename)
  void LoadFromString(string xml)
  SecurityElement FromString(string xml)
  IList get_FullTrustAssemblies()
  string get_Label()
  IList get_NamedPermissionSets()
  CodeGroup get_RootCodeGroup()
  void set_RootCodeGroup(CodeGroup value)
  string get_StoreLocation()
  PolicyLevelType get_Type()
  void AddFullTrustAssembly(StrongName sn)
  void AddFullTrustAssembly(StrongNameMembershipCondition snMC)
  void AddNamedPermissionSet(NamedPermissionSet permSet)
  NamedPermissionSet ChangeNamedPermissionSet(string name, PermissionSet pSet)
  PolicyLevel CreateAppDomainLevel()
  void FromXml(SecurityElement e)
  NamedPermissionSet GetNamedPermissionSet(string name)
  void Recover()
  void RemoveFullTrustAssembly(StrongName sn)
  void RemoveFullTrustAssembly(StrongNameMembershipCondition snMC)
  NamedPermissionSet RemoveNamedPermissionSet(NamedPermissionSet permSet)
  NamedPermissionSet RemoveNamedPermissionSet(string name)
  void Reset()
  PolicyStatement Resolve(Evidence evidence)
  CodeGroup ResolveMatchingCodeGroups(Evidence evidence)
  SecurityElement ToXml()
  void Save()
  void CreateDefaultLevel(PolicyLevelType type)
  void CreateDefaultFullTrustAssemblies()
  void CreateDefaultNamedPermissionSets()
  string ResolveClassName(string className)
  bool IsFullTrustAssembly(Assembly a)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Policy.PolicyStatement
Наследуется от: object
Поля:
  PermissionSet perms
  PolicyStatementAttribute attrs
Свойства:
  PermissionSet PermissionSet
  PolicyStatementAttribute Attributes
  string AttributeString
Методы:
  void .ctor(PermissionSet permSet)
  void .ctor(PermissionSet permSet, PolicyStatementAttribute attributes)
  PermissionSet get_PermissionSet()
  void set_PermissionSet(PermissionSet value)
  PolicyStatementAttribute get_Attributes()
  void set_Attributes(PolicyStatementAttribute value)
  string get_AttributeString()
  PolicyStatement Copy()
  void FromXml(SecurityElement et)
  void FromXml(SecurityElement et, PolicyLevel level)
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
  bool Equals(object obj)
  int GetHashCode()
  PolicyStatement Empty()
--------------------------------------------------
Класс: System.Security.Policy.Site
Наследуется от: EvidenceBase
Поля:
  string origin_site
Свойства:
  string Name
Методы:
  void .ctor(string name)
  Site CreateFromUrl(string url)
  object Copy()
  IPermission CreateIdentityPermission(Evidence evidence)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string get_Name()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
  bool IsValid(string name)
  string UrlToSite(string url)
--------------------------------------------------
Класс: System.Security.Policy.SiteMembershipCondition
Наследуется от: object
Поля:
  int version
  string _site
Свойства:
  string Site
Методы:
  void .ctor()
  void .ctor(string site)
  string get_Site()
  void set_Site(string value)
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.StrongName
Наследуется от: EvidenceBase
Поля:
  StrongNamePublicKeyBlob publickey
  string name
  Version version
Свойства:
  string Name
  StrongNamePublicKeyBlob PublicKey
  Version Version
Методы:
  void .ctor(StrongNamePublicKeyBlob blob, string name, Version version)
  string get_Name()
  StrongNamePublicKeyBlob get_PublicKey()
  Version get_Version()
  object Copy()
  IPermission CreateIdentityPermission(Evidence evidence)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
--------------------------------------------------
Класс: System.Security.Policy.StrongNameMembershipCondition
Наследуется от: object
Поля:
  int version
  StrongNamePublicKeyBlob blob
  string name
  Version assemblyVersion
Свойства:
  string Name
  Version Version
  StrongNamePublicKeyBlob PublicKey
Методы:
  void .ctor(StrongNamePublicKeyBlob blob, string name, Version version)
  void .ctor(SecurityElement e)
  void .ctor()
  string get_Name()
  void set_Name(string value)
  Version get_Version()
  void set_Version(Version value)
  StrongNamePublicKeyBlob get_PublicKey()
  void set_PublicKey(StrongNamePublicKeyBlob value)
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  int GetHashCode()
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Policy.TrustManagerContext
Наследуется от: object
Поля:
  bool _ignorePersistedDecision
  bool _noPrompt
  bool _keepAlive
  bool _persist
  ApplicationIdentity _previousId
  TrustManagerUIContext _ui
Свойства:
  bool IgnorePersistedDecision
  bool KeepAlive
  bool NoPrompt
  bool Persist
  ApplicationIdentity PreviousApplicationIdentity
  TrustManagerUIContext UIContext
Методы:
  void .ctor()
  void .ctor(TrustManagerUIContext uiContext)
  bool get_IgnorePersistedDecision()
  void set_IgnorePersistedDecision(bool value)
  bool get_KeepAlive()
  void set_KeepAlive(bool value)
  bool get_NoPrompt()
  void set_NoPrompt(bool value)
  bool get_Persist()
  void set_Persist(bool value)
  ApplicationIdentity get_PreviousApplicationIdentity()
  void set_PreviousApplicationIdentity(ApplicationIdentity value)
  TrustManagerUIContext get_UIContext()
  void set_UIContext(TrustManagerUIContext value)
--------------------------------------------------
Класс: System.Security.Policy.TrustManagerUIContext
Наследуется от: Enum
Поля:
  int value__
  TrustManagerUIContext Install
  TrustManagerUIContext Upgrade
  TrustManagerUIContext Run
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Policy.UnionCodeGroup
Наследуется от: CodeGroup
Поля:
Свойства:
  string MergeLogic
Методы:
  void .ctor(IMembershipCondition membershipCondition, PolicyStatement policy)
  void .ctor(SecurityElement e, PolicyLevel level)
  CodeGroup Copy()
  CodeGroup Copy(bool childs)
  PolicyStatement Resolve(Evidence evidence)
  CodeGroup ResolveMatchingCodeGroups(Evidence evidence)
  string get_MergeLogic()
--------------------------------------------------
Класс: System.Security.Policy.Url
Наследуется от: EvidenceBase
Поля:
  string origin_url
Свойства:
  string Value
Методы:
  void .ctor(string name)
  void .ctor(string name, bool validated)
  object Copy()
  IPermission CreateIdentityPermission(Evidence evidence)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  string get_Value()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
  string Prepare(string url)
--------------------------------------------------
Класс: System.Security.Policy.UrlMembershipCondition
Наследуется от: object
Поля:
  int version
  Url url
  string userUrl
Свойства:
  string Url
Методы:
  void .ctor(string url)
  void .ctor(Url url, string userUrl)
  string get_Url()
  void set_Url(string value)
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
  void CheckUrl(string url)
--------------------------------------------------
Класс: System.Security.Policy.Zone
Наследуется от: EvidenceBase
Поля:
  SecurityZone zone
Свойства:
  SecurityZone SecurityZone
Методы:
  void .ctor(SecurityZone zone)
  SecurityZone get_SecurityZone()
  object Copy()
  IPermission CreateIdentityPermission(Evidence evidence)
  Zone CreateFromUrl(string url)
  bool Equals(object o)
  int GetHashCode()
  string ToString()
  int System.Security.Policy.IBuiltInEvidence.GetRequiredSize(bool verbose)
  int System.Security.Policy.IBuiltInEvidence.InitFromBuffer(Char[] buffer, int position)
  int System.Security.Policy.IBuiltInEvidence.OutputToBuffer(Char[] buffer, int position, bool verbose)
--------------------------------------------------
Класс: System.Security.Policy.ZoneMembershipCondition
Наследуется от: object
Поля:
  int version
  SecurityZone zone
Свойства:
  SecurityZone SecurityZone
Методы:
  void .ctor()
  void .ctor(SecurityZone zone)
  SecurityZone get_SecurityZone()
  void set_SecurityZone(SecurityZone value)
  bool Check(Evidence evidence)
  IMembershipCondition Copy()
  bool Equals(object o)
  void FromXml(SecurityElement e)
  void FromXml(SecurityElement e, PolicyLevel level)
  int GetHashCode()
  string ToString()
  SecurityElement ToXml()
  SecurityElement ToXml(PolicyLevel level)
--------------------------------------------------
Класс: System.Security.Permissions.FileDialogPermissionAccess
Наследуется от: Enum
Поля:
  int value__
  FileDialogPermissionAccess None
  FileDialogPermissionAccess Open
  FileDialogPermissionAccess OpenSave
  FileDialogPermissionAccess Save
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.HostProtectionResource
Наследуется от: Enum
Поля:
  int value__
  HostProtectionResource All
  HostProtectionResource ExternalProcessMgmt
  HostProtectionResource ExternalThreading
  HostProtectionResource MayLeakOnAbort
  HostProtectionResource None
  HostProtectionResource SecurityInfrastructure
  HostProtectionResource SelfAffectingProcessMgmt
  HostProtectionResource SelfAffectingThreading
  HostProtectionResource SharedState
  HostProtectionResource Synchronization
  HostProtectionResource UI
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.IUnrestrictedPermission
Поля:
Свойства:
Методы:
  bool IsUnrestricted()
--------------------------------------------------
Класс: System.Security.Permissions.IsolatedStorageContainment
Наследуется от: Enum
Поля:
  int value__
  IsolatedStorageContainment None
  IsolatedStorageContainment DomainIsolationByUser
  IsolatedStorageContainment ApplicationIsolationByUser
  IsolatedStorageContainment AssemblyIsolationByUser
  IsolatedStorageContainment DomainIsolationByMachine
  IsolatedStorageContainment AssemblyIsolationByMachine
  IsolatedStorageContainment ApplicationIsolationByMachine
  IsolatedStorageContainment DomainIsolationByRoamingUser
  IsolatedStorageContainment AssemblyIsolationByRoamingUser
  IsolatedStorageContainment ApplicationIsolationByRoamingUser
  IsolatedStorageContainment AdministerIsolatedStorageByUser
  IsolatedStorageContainment UnrestrictedIsolatedStorage
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.PermissionState
Наследуется от: Enum
Поля:
  int value__
  PermissionState None
  PermissionState Unrestricted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.ReflectionPermissionFlag
Наследуется от: Enum
Поля:
  int value__
  ReflectionPermissionFlag AllFlags
  ReflectionPermissionFlag MemberAccess
  ReflectionPermissionFlag NoFlags
  ReflectionPermissionFlag ReflectionEmit
  ReflectionPermissionFlag RestrictedMemberAccess
  ReflectionPermissionFlag TypeInformation
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.RegistryPermissionAccess
Наследуется от: Enum
Поля:
  int value__
  RegistryPermissionAccess AllAccess
  RegistryPermissionAccess Create
  RegistryPermissionAccess NoAccess
  RegistryPermissionAccess Read
  RegistryPermissionAccess Write
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.UIPermissionClipboard
Наследуется от: Enum
Поля:
  int value__
  UIPermissionClipboard AllClipboard
  UIPermissionClipboard NoClipboard
  UIPermissionClipboard OwnClipboard
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.UIPermissionWindow
Наследуется от: Enum
Поля:
  int value__
  UIPermissionWindow AllWindows
  UIPermissionWindow NoWindows
  UIPermissionWindow SafeSubWindows
  UIPermissionWindow SafeTopLevelWindows
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.CodeAccessSecurityAttribute
Наследуется от: SecurityAttribute
Поля:
Свойства:
Методы:
  void .ctor(SecurityAction action)
--------------------------------------------------
Класс: System.Security.Permissions.EnvironmentPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  PermissionState _state
  ArrayList readList
  ArrayList writeList
Свойства:
Методы:
  void .ctor(PermissionState state)
  void .ctor(EnvironmentPermissionAccess flag, string pathList)
  void AddPathList(EnvironmentPermissionAccess flag, string pathList)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  string GetPathList(EnvironmentPermissionAccess flag)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  void SetPathList(EnvironmentPermissionAccess flag, string pathList)
  SecurityElement ToXml()
  IPermission Union(IPermission other)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty()
  EnvironmentPermission Cast(IPermission target)
  void ThrowInvalidFlag(EnvironmentPermissionAccess flag, bool context)
  string GetPathList(ArrayList list)
--------------------------------------------------
Класс: System.Security.Permissions.EnvironmentPermissionAccess
Наследуется от: Enum
Поля:
  int value__
  EnvironmentPermissionAccess NoAccess
  EnvironmentPermissionAccess Read
  EnvironmentPermissionAccess Write
  EnvironmentPermissionAccess AllAccess
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.EnvironmentPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string read
  string write
Свойства:
  string All
  string Read
  string Write
Методы:
  void .ctor(SecurityAction action)
  string get_All()
  void set_All(string value)
  string get_Read()
  void set_Read(string value)
  string get_Write()
  void set_Write(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.FileDialogPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  FileDialogPermissionAccess _access
Свойства:
  FileDialogPermissionAccess Access
Методы:
  void .ctor(PermissionState state)
  void .ctor(FileDialogPermissionAccess access)
  FileDialogPermissionAccess get_Access()
  void set_Access(FileDialogPermissionAccess value)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  FileDialogPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.FileDialogPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  bool canOpen
  bool canSave
Свойства:
  bool Open
  bool Save
Методы:
  void .ctor(SecurityAction action)
  bool get_Open()
  void set_Open(bool value)
  bool get_Save()
  void set_Save(bool value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.FileIOPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  Char[] BadPathNameCharacters
  Char[] BadFileNameCharacters
  bool m_Unrestricted
  FileIOPermissionAccess m_AllFilesAccess
  FileIOPermissionAccess m_AllLocalFilesAccess
  ArrayList readList
  ArrayList writeList
  ArrayList appendList
  ArrayList pathList
Свойства:
  FileIOPermissionAccess AllFiles
  FileIOPermissionAccess AllLocalFiles
Методы:
  void .cctor()
  void .ctor(PermissionState state)
  void .ctor(FileIOPermissionAccess access, string path)
  void .ctor(FileIOPermissionAccess access, String[] pathList)
  void CreateLists()
  void .ctor(FileIOPermissionAccess access, AccessControlActions control, string path)
  void .ctor(FileIOPermissionAccess access, AccessControlActions control, String[] pathList)
  void .ctor(FileIOPermissionAccess access, String[] pathList, bool checkForDuplicates, bool needFullPath)
  FileIOPermissionAccess get_AllFiles()
  void set_AllFiles(FileIOPermissionAccess value)
  FileIOPermissionAccess get_AllLocalFiles()
  void set_AllLocalFiles(FileIOPermissionAccess value)
  void AddPathList(FileIOPermissionAccess access, string path)
  void AddPathList(FileIOPermissionAccess access, String[] pathList)
  void AddPathInternal(FileIOPermissionAccess access, string path)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  String[] GetPathList(FileIOPermissionAccess access)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  void SetPathList(FileIOPermissionAccess access, string path)
  void SetPathList(FileIOPermissionAccess access, String[] pathList)
  SecurityElement ToXml()
  IPermission Union(IPermission other)
  bool Equals(object obj)
  int GetHashCode()
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty()
  FileIOPermission Cast(IPermission target)
  void ThrowInvalidFlag(FileIOPermissionAccess access, bool context)
  void ThrowIfInvalidPath(string path)
  void ThrowIfInvalidPath(String[] paths)
  void Clear(FileIOPermissionAccess access)
  bool KeyIsSubsetOf(IList local, IList target)
  void UnionKeys(IList list, String[] paths)
  void IntersectKeys(IList local, IList target, IList result)
--------------------------------------------------
Класс: System.Security.Permissions.FileIOPermissionAccess
Наследуется от: Enum
Поля:
  int value__
  FileIOPermissionAccess NoAccess
  FileIOPermissionAccess Read
  FileIOPermissionAccess Write
  FileIOPermissionAccess Append
  FileIOPermissionAccess PathDiscovery
  FileIOPermissionAccess AllAccess
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.FileIOPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string append
  string path
  string read
  string write
  FileIOPermissionAccess allFiles
  FileIOPermissionAccess allLocalFiles
  string changeAccessControl
  string viewAccessControl
Свойства:
  string All
  string Append
  string PathDiscovery
  string Read
  string Write
  FileIOPermissionAccess AllFiles
  FileIOPermissionAccess AllLocalFiles
  string ChangeAccessControl
  string ViewAccessControl
  string ViewAndModify
Методы:
  void .ctor(SecurityAction action)
  string get_All()
  void set_All(string value)
  string get_Append()
  void set_Append(string value)
  string get_PathDiscovery()
  void set_PathDiscovery(string value)
  string get_Read()
  void set_Read(string value)
  string get_Write()
  void set_Write(string value)
  FileIOPermissionAccess get_AllFiles()
  void set_AllFiles(FileIOPermissionAccess value)
  FileIOPermissionAccess get_AllLocalFiles()
  void set_AllLocalFiles(FileIOPermissionAccess value)
  string get_ChangeAccessControl()
  void set_ChangeAccessControl(string value)
  string get_ViewAccessControl()
  void set_ViewAccessControl(string value)
  string get_ViewAndModify()
  void set_ViewAndModify(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.GacIdentityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
Свойства:
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  IPermission Copy()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  IPermission Union(IPermission target)
  void FromXml(SecurityElement securityElement)
  SecurityElement ToXml()
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  GacIdentityPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.GacIdentityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
Свойства:
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.HostProtectionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  HostProtectionResource _resources
Свойства:
  bool ExternalProcessMgmt
  bool ExternalThreading
  bool MayLeakOnAbort
  bool SecurityInfrastructure
  bool SelfAffectingProcessMgmt
  bool SelfAffectingThreading
  bool SharedState
  bool Synchronization
  bool UI
  HostProtectionResource Resources
Методы:
  void .ctor()
  void .ctor(SecurityAction action)
  bool get_ExternalProcessMgmt()
  void set_ExternalProcessMgmt(bool value)
  bool get_ExternalThreading()
  void set_ExternalThreading(bool value)
  bool get_MayLeakOnAbort()
  void set_MayLeakOnAbort(bool value)
  bool get_SecurityInfrastructure()
  void set_SecurityInfrastructure(bool value)
  bool get_SelfAffectingProcessMgmt()
  void set_SelfAffectingProcessMgmt(bool value)
  bool get_SelfAffectingThreading()
  void set_SelfAffectingThreading(bool value)
  bool get_SharedState()
  void set_SharedState(bool value)
  bool get_Synchronization()
  void set_Synchronization(bool value)
  bool get_UI()
  void set_UI(bool value)
  HostProtectionResource get_Resources()
  void set_Resources(HostProtectionResource value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.HostProtectionPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  HostProtectionResource _resources
Свойства:
  HostProtectionResource Resources
Методы:
  void .ctor(PermissionState state)
  void .ctor(HostProtectionResource resources)
  HostProtectionResource get_Resources()
  void set_Resources(HostProtectionResource value)
  IPermission Copy()
  IPermission Intersect(IPermission target)
  IPermission Union(IPermission target)
  bool IsSubsetOf(IPermission target)
  void FromXml(SecurityElement e)
  SecurityElement ToXml()
  bool IsUnrestricted()
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  HostProtectionPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.IBuiltInPermission
Поля:
Свойства:
Методы:
  int GetTokenIndex()
--------------------------------------------------
Класс: System.Security.Permissions.BuiltInToken
Наследуется от: Enum
Поля:
  int value__
  BuiltInToken Environment
  BuiltInToken FileDialog
  BuiltInToken FileIO
  BuiltInToken IsolatedStorageFile
  BuiltInToken Reflection
  BuiltInToken Registry
  BuiltInToken Security
  BuiltInToken UI
  BuiltInToken Principal
  BuiltInToken HostProtection
  BuiltInToken PublisherIdentity
  BuiltInToken SiteIdentity
  BuiltInToken StrongNameIdentity
  BuiltInToken UrlIdentity
  BuiltInToken ZoneIdentity
  BuiltInToken GacIdentity
  BuiltInToken KeyContainer
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.IsolatedStorageFilePermission
Наследуется от: IsolatedStoragePermission
Поля:
Свойства:
Методы:
  void .ctor(PermissionState state)
  IPermission Copy()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  IPermission Union(IPermission target)
  SecurityElement ToXml()
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  IsolatedStorageFilePermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.IsolatedStorageFilePermissionAttribute
Наследуется от: IsolatedStoragePermissionAttribute
Поля:
Свойства:
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.IsolatedStoragePermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  long m_userQuota
  long m_machineQuota
  long m_expirationDays
  bool m_permanentData
  IsolatedStorageContainment m_allowed
Свойства:
  long UserQuota
  IsolatedStorageContainment UsageAllowed
Методы:
  void .ctor(PermissionState state)
  long get_UserQuota()
  void set_UserQuota(long value)
  IsolatedStorageContainment get_UsageAllowed()
  void set_UsageAllowed(IsolatedStorageContainment value)
  bool IsUnrestricted()
  SecurityElement ToXml()
  void FromXml(SecurityElement esd)
  bool IsEmpty()
--------------------------------------------------
Класс: System.Security.Permissions.IsolatedStoragePermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  IsolatedStorageContainment usage_allowed
  long user_quota
Свойства:
  IsolatedStorageContainment UsageAllowed
  long UserQuota
Методы:
  void .ctor(SecurityAction action)
  IsolatedStorageContainment get_UsageAllowed()
  void set_UsageAllowed(IsolatedStorageContainment value)
  long get_UserQuota()
  void set_UserQuota(long value)
--------------------------------------------------
Класс: System.Security.Permissions.KeyContainerPermission
Наследуется от: CodeAccessPermission
Поля:
  KeyContainerPermissionAccessEntryCollection _accessEntries
  KeyContainerPermissionFlags _flags
  int version
Свойства:
  KeyContainerPermissionAccessEntryCollection AccessEntries
  KeyContainerPermissionFlags Flags
Методы:
  void .ctor(PermissionState state)
  void .ctor(KeyContainerPermissionFlags flags)
  void .ctor(KeyContainerPermissionFlags flags, KeyContainerPermissionAccessEntry[] accessList)
  KeyContainerPermissionAccessEntryCollection get_AccessEntries()
  KeyContainerPermissionFlags get_Flags()
  IPermission Copy()
  void FromXml(SecurityElement securityElement)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  void SetFlags(KeyContainerPermissionFlags flags)
  KeyContainerPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.KeyContainerPermissionAccessEntry
Наследуется от: object
Поля:
  KeyContainerPermissionFlags _flags
  string _containerName
  int _spec
  string _store
  string _providerName
  int _type
Свойства:
  KeyContainerPermissionFlags Flags
  string KeyContainerName
  int KeySpec
  string KeyStore
  string ProviderName
  int ProviderType
Методы:
  void .ctor(CspParameters parameters, KeyContainerPermissionFlags flags)
  void .ctor(string keyContainerName, KeyContainerPermissionFlags flags)
  void .ctor(string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, KeyContainerPermissionFlags flags)
  KeyContainerPermissionFlags get_Flags()
  void set_Flags(KeyContainerPermissionFlags value)
  string get_KeyContainerName()
  void set_KeyContainerName(string value)
  int get_KeySpec()
  void set_KeySpec(int value)
  string get_KeyStore()
  void set_KeyStore(string value)
  string get_ProviderName()
  void set_ProviderName(string value)
  int get_ProviderType()
  void set_ProviderType(int value)
  bool Equals(object o)
  int GetHashCode()
--------------------------------------------------
Класс: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  int Count
  bool IsSynchronized
  KeyContainerPermissionAccessEntry Item
  object SyncRoot
Методы:
  void .ctor()
  void .ctor(KeyContainerPermissionAccessEntry[] entries)
  int get_Count()
  bool get_IsSynchronized()
  KeyContainerPermissionAccessEntry get_Item(int index)
  object get_SyncRoot()
  int Add(KeyContainerPermissionAccessEntry accessEntry)
  void Clear()
  void CopyTo(KeyContainerPermissionAccessEntry[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  KeyContainerPermissionAccessEntryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int IndexOf(KeyContainerPermissionAccessEntry accessEntry)
  void Remove(KeyContainerPermissionAccessEntry accessEntry)
--------------------------------------------------
Класс: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
Наследуется от: object
Поля:
  IEnumerator e
Свойства:
  KeyContainerPermissionAccessEntry Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(ArrayList list)
  KeyContainerPermissionAccessEntry get_Current()
  object System.Collections.IEnumerator.get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Permissions.KeyContainerPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  KeyContainerPermissionFlags _flags
  string _containerName
  int _spec
  string _store
  string _providerName
  int _type
Свойства:
  KeyContainerPermissionFlags Flags
  string KeyContainerName
  int KeySpec
  string KeyStore
  string ProviderName
  int ProviderType
Методы:
  void .ctor(SecurityAction action)
  KeyContainerPermissionFlags get_Flags()
  void set_Flags(KeyContainerPermissionFlags value)
  string get_KeyContainerName()
  void set_KeyContainerName(string value)
  int get_KeySpec()
  void set_KeySpec(int value)
  string get_KeyStore()
  void set_KeyStore(string value)
  string get_ProviderName()
  void set_ProviderName(string value)
  int get_ProviderType()
  void set_ProviderType(int value)
  IPermission CreatePermission()
  bool EmptyEntry()
--------------------------------------------------
Класс: System.Security.Permissions.KeyContainerPermissionFlags
Наследуется от: Enum
Поля:
  int value__
  KeyContainerPermissionFlags NoFlags
  KeyContainerPermissionFlags Create
  KeyContainerPermissionFlags Open
  KeyContainerPermissionFlags Delete
  KeyContainerPermissionFlags Import
  KeyContainerPermissionFlags Export
  KeyContainerPermissionFlags Sign
  KeyContainerPermissionFlags Decrypt
  KeyContainerPermissionFlags ViewAcl
  KeyContainerPermissionFlags ChangeAcl
  KeyContainerPermissionFlags AllFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.PermissionSetAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string file
  string name
  bool isUnicodeEncoded
  string xml
  string hex
Свойства:
  string File
  string Hex
  string Name
  bool UnicodeEncoded
  string XML
Методы:
  void .ctor(SecurityAction action)
  string get_File()
  void set_File(string value)
  string get_Hex()
  void set_Hex(string value)
  string get_Name()
  void set_Name(string value)
  bool get_UnicodeEncoded()
  void set_UnicodeEncoded(bool value)
  string get_XML()
  void set_XML(string value)
  IPermission CreatePermission()
  PermissionSet CreateFromXml(string xml)
  PermissionSet CreatePermissionSet()
--------------------------------------------------
Класс: System.Security.Permissions.PrincipalPermission
Наследуется от: object
Поля:
  int version
  ArrayList principals
Свойства:
Методы:
  void .ctor(PermissionState state)
  void .ctor(string name, string role)
  void .ctor(string name, string role, bool isAuthenticated)
  void .ctor(ArrayList principals)
  IPermission Copy()
  void Demand()
  void FromXml(SecurityElement elem)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  string ToString()
  SecurityElement ToXml()
  IPermission Union(IPermission other)
  bool Equals(object obj)
  int GetHashCode()
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  PrincipalPermission Cast(IPermission target)
  bool IsEmpty()
  int CheckSecurityElement(SecurityElement se, string parameterName, int minimumVersion, int maximumVersion)
--------------------------------------------------
Класс: System.Security.Permissions.PrincipalPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  bool authenticated
  string name
  string role
Свойства:
  bool Authenticated
  string Name
  string Role
Методы:
  void .ctor(SecurityAction action)
  bool get_Authenticated()
  void set_Authenticated(bool value)
  string get_Name()
  void set_Name(string value)
  string get_Role()
  void set_Role(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.PublisherIdentityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  X509Certificate x509
Свойства:
  X509Certificate Certificate
Методы:
  void .ctor(PermissionState state)
  void .ctor(X509Certificate certificate)
  X509Certificate get_Certificate()
  void set_Certificate(X509Certificate value)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  PublisherIdentityPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.PublisherIdentityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string certFile
  string signedFile
  string x509data
Свойства:
  string CertFile
  string SignedFile
  string X509Certificate
Методы:
  void .ctor(SecurityAction action)
  string get_CertFile()
  void set_CertFile(string value)
  string get_SignedFile()
  void set_SignedFile(string value)
  string get_X509Certificate()
  void set_X509Certificate(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.ReflectionPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  ReflectionPermissionFlag flags
Свойства:
  ReflectionPermissionFlag Flags
Методы:
  void .ctor(PermissionState state)
  void .ctor(ReflectionPermissionFlag flag)
  ReflectionPermissionFlag get_Flags()
  void set_Flags(ReflectionPermissionFlag value)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  IPermission Union(IPermission other)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  ReflectionPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.ReflectionPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  ReflectionPermissionFlag flags
  bool memberAccess
  bool reflectionEmit
  bool typeInfo
Свойства:
  ReflectionPermissionFlag Flags
  bool MemberAccess
  bool ReflectionEmit
  bool RestrictedMemberAccess
  bool TypeInformation
Методы:
  void .ctor(SecurityAction action)
  ReflectionPermissionFlag get_Flags()
  void set_Flags(ReflectionPermissionFlag value)
  bool get_MemberAccess()
  void set_MemberAccess(bool value)
  bool get_ReflectionEmit()
  void set_ReflectionEmit(bool value)
  bool get_RestrictedMemberAccess()
  void set_RestrictedMemberAccess(bool value)
  bool get_TypeInformation()
  void set_TypeInformation(bool value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.RegistryPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  PermissionState _state
  ArrayList createList
  ArrayList readList
  ArrayList writeList
Свойства:
Методы:
  void .ctor(PermissionState state)
  void .ctor(RegistryPermissionAccess access, string pathList)
  void .ctor(RegistryPermissionAccess access, AccessControlActions control, string pathList)
  void AddPathList(RegistryPermissionAccess access, string pathList)
  void AddPathList(RegistryPermissionAccess access, AccessControlActions control, string pathList)
  string GetPathList(RegistryPermissionAccess access)
  void SetPathList(RegistryPermissionAccess access, string pathList)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  IPermission Union(IPermission other)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty()
  RegistryPermission Cast(IPermission target)
  void ThrowInvalidFlag(RegistryPermissionAccess flag, bool context)
  string GetPathList(ArrayList list)
  bool KeyIsSubsetOf(IList local, IList target)
  void AddWithUnionKey(IList list, string pathList)
  void IntersectKeys(IList local, IList target, IList result)
--------------------------------------------------
Класс: System.Security.Permissions.RegistryPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string create
  string read
  string write
  string changeAccessControl
  string viewAccessControl
Свойства:
  string All
  string Create
  string Read
  string Write
  string ChangeAccessControl
  string ViewAccessControl
  string ViewAndModify
Методы:
  void .ctor(SecurityAction action)
  string get_All()
  void set_All(string value)
  string get_Create()
  void set_Create(string value)
  string get_Read()
  void set_Read(string value)
  string get_Write()
  void set_Write(string value)
  string get_ChangeAccessControl()
  void set_ChangeAccessControl(string value)
  string get_ViewAccessControl()
  void set_ViewAccessControl(string value)
  string get_ViewAndModify()
  void set_ViewAndModify(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.SecurityAction
Наследуется от: Enum
Поля:
  int value__
  SecurityAction Demand
  SecurityAction Assert
  SecurityAction Deny
  SecurityAction PermitOnly
  SecurityAction LinkDemand
  SecurityAction InheritanceDemand
  SecurityAction RequestMinimum
  SecurityAction RequestOptional
  SecurityAction RequestRefuse
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.SecurityAttribute
Наследуется от: Attribute
Поля:
  SecurityAction m_Action
  bool m_Unrestricted
Свойства:
  bool Unrestricted
  SecurityAction Action
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
  bool get_Unrestricted()
  void set_Unrestricted(bool value)
  SecurityAction get_Action()
  void set_Action(SecurityAction value)
--------------------------------------------------
Класс: System.Security.Permissions.SecurityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  SecurityPermissionFlag flags
Свойства:
  SecurityPermissionFlag Flags
Методы:
  void .ctor(PermissionState state)
  void .ctor(SecurityPermissionFlag flag)
  SecurityPermissionFlag get_Flags()
  void set_Flags(SecurityPermissionFlag value)
  bool IsUnrestricted()
  IPermission Copy()
  IPermission Intersect(IPermission target)
  IPermission Union(IPermission target)
  bool IsSubsetOf(IPermission target)
  void FromXml(SecurityElement esd)
  SecurityElement ToXml()
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty()
  SecurityPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.SecurityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  SecurityPermissionFlag m_Flags
Свойства:
  bool Assertion
  bool BindingRedirects
  bool ControlAppDomain
  bool ControlDomainPolicy
  bool ControlEvidence
  bool ControlPolicy
  bool ControlPrincipal
  bool ControlThread
  bool Execution
  bool Infrastructure
  bool RemotingConfiguration
  bool SerializationFormatter
  bool SkipVerification
  bool UnmanagedCode
  SecurityPermissionFlag Flags
Методы:
  void .ctor(SecurityAction action)
  bool get_Assertion()
  void set_Assertion(bool value)
  bool get_BindingRedirects()
  void set_BindingRedirects(bool value)
  bool get_ControlAppDomain()
  void set_ControlAppDomain(bool value)
  bool get_ControlDomainPolicy()
  void set_ControlDomainPolicy(bool value)
  bool get_ControlEvidence()
  void set_ControlEvidence(bool value)
  bool get_ControlPolicy()
  void set_ControlPolicy(bool value)
  bool get_ControlPrincipal()
  void set_ControlPrincipal(bool value)
  bool get_ControlThread()
  void set_ControlThread(bool value)
  bool get_Execution()
  void set_Execution(bool value)
  bool get_Infrastructure()
  void set_Infrastructure(bool value)
  bool get_RemotingConfiguration()
  void set_RemotingConfiguration(bool value)
  bool get_SerializationFormatter()
  void set_SerializationFormatter(bool value)
  bool get_SkipVerification()
  void set_SkipVerification(bool value)
  bool get_UnmanagedCode()
  void set_UnmanagedCode(bool value)
  IPermission CreatePermission()
  SecurityPermissionFlag get_Flags()
  void set_Flags(SecurityPermissionFlag value)
--------------------------------------------------
Класс: System.Security.Permissions.SecurityPermissionFlag
Наследуется от: Enum
Поля:
  int value__
  SecurityPermissionFlag NoFlags
  SecurityPermissionFlag Assertion
  SecurityPermissionFlag UnmanagedCode
  SecurityPermissionFlag SkipVerification
  SecurityPermissionFlag Execution
  SecurityPermissionFlag ControlThread
  SecurityPermissionFlag ControlEvidence
  SecurityPermissionFlag ControlPolicy
  SecurityPermissionFlag SerializationFormatter
  SecurityPermissionFlag ControlDomainPolicy
  SecurityPermissionFlag ControlPrincipal
  SecurityPermissionFlag ControlAppDomain
  SecurityPermissionFlag RemotingConfiguration
  SecurityPermissionFlag Infrastructure
  SecurityPermissionFlag BindingRedirects
  SecurityPermissionFlag AllFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.SiteIdentityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  string _site
  Boolean[] valid
Свойства:
  string Site
Методы:
  void .ctor(PermissionState state)
  void .ctor(string site)
  string get_Site()
  void set_Site(string value)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty()
  SiteIdentityPermission Cast(IPermission target)
  bool IsValid(string s)
  bool Match(string target)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Permissions.SiteIdentityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string site
Свойства:
  string Site
Методы:
  void .ctor(SecurityAction action)
  string get_Site()
  void set_Site(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.StrongNameIdentityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  Version defaultVersion
  PermissionState _state
  ArrayList _list
Свойства:
  string Name
  StrongNamePublicKeyBlob PublicKey
  Version Version
Методы:
  void .ctor(PermissionState state)
  void .ctor(StrongNamePublicKeyBlob blob, string name, Version version)
  void .ctor(StrongNameIdentityPermission snip)
  string get_Name()
  void set_Name(string value)
  StrongNamePublicKeyBlob get_PublicKey()
  void set_PublicKey(StrongNamePublicKeyBlob value)
  Version get_Version()
  void set_Version(Version value)
  void ResetToDefault()
  IPermission Copy()
  void FromXml(SecurityElement e)
  SNIP FromSecurityElement(SecurityElement se)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  SecurityElement ToXml()
  void ToSecurityElement(SecurityElement se, SNIP snip)
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsUnrestricted()
  bool Contains(SNIP snip)
  bool IsEmpty(SNIP snip)
  bool IsEmpty()
  StrongNameIdentityPermission Cast(IPermission target)
  bool Match(string target)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Permissions.StrongNameIdentityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string name
  string key
  string version
Свойства:
  string Name
  string PublicKey
  string Version
Методы:
  void .ctor(SecurityAction action)
  string get_Name()
  void set_Name(string value)
  string get_PublicKey()
  void set_PublicKey(string value)
  string get_Version()
  void set_Version(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.StrongNamePublicKeyBlob
Наследуется от: object
Поля:
  Byte[] pubkey
Свойства:
Методы:
  void .ctor(Byte[] publicKey)
  StrongNamePublicKeyBlob FromString(string s)
  byte CharToByte(char c)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: System.Security.Permissions.UIPermission
Наследуется от: CodeAccessPermission
Поля:
  UIPermissionWindow _window
  UIPermissionClipboard _clipboard
  int version
Свойства:
  UIPermissionClipboard Clipboard
  UIPermissionWindow Window
Методы:
  void .ctor(PermissionState state)
  void .ctor(UIPermissionClipboard clipboardFlag)
  void .ctor(UIPermissionWindow windowFlag)
  void .ctor(UIPermissionWindow windowFlag, UIPermissionClipboard clipboardFlag)
  UIPermissionClipboard get_Clipboard()
  void set_Clipboard(UIPermissionClipboard value)
  UIPermissionWindow get_Window()
  void set_Window(UIPermissionWindow value)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty(UIPermissionWindow w, UIPermissionClipboard c)
  UIPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.UIPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  UIPermissionClipboard clipboard
  UIPermissionWindow window
Свойства:
  UIPermissionClipboard Clipboard
  UIPermissionWindow Window
Методы:
  void .ctor(SecurityAction action)
  UIPermissionClipboard get_Clipboard()
  void set_Clipboard(UIPermissionClipboard value)
  UIPermissionWindow get_Window()
  void set_Window(UIPermissionWindow value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.UrlIdentityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  string url
Свойства:
  string Url
Методы:
  void .ctor(PermissionState state)
  void .ctor(string site)
  string get_Url()
  void set_Url(string value)
  IPermission Copy()
  void FromXml(SecurityElement esd)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  bool IsEmpty()
  UrlIdentityPermission Cast(IPermission target)
  bool Match(string target)
--------------------------------------------------
Класс: System.Security.Permissions.UrlIdentityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string url
Свойства:
  string Url
Методы:
  void .ctor(SecurityAction action)
  string get_Url()
  void set_Url(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.ZoneIdentityPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  SecurityZone zone
Свойства:
  SecurityZone SecurityZone
Методы:
  void .ctor(PermissionState state)
  void .ctor(SecurityZone zone)
  IPermission Copy()
  bool IsSubsetOf(IPermission target)
  IPermission Union(IPermission target)
  IPermission Intersect(IPermission target)
  void FromXml(SecurityElement esd)
  SecurityElement ToXml()
  SecurityZone get_SecurityZone()
  void set_SecurityZone(SecurityZone value)
  int System.Security.Permissions.IBuiltInPermission.GetTokenIndex()
  ZoneIdentityPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.ZoneIdentityPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  SecurityZone zone
Свойства:
  SecurityZone Zone
Методы:
  void .ctor(SecurityAction action)
  SecurityZone get_Zone()
  void set_Zone(SecurityZone value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Cryptography.Rfc2898DeriveBytes
Наследуется от: DeriveBytes
Поля:
  int MinimumSaltSize
  Byte[] _password
  Byte[] _salt
  UInt32 _iterations
  HMAC _hmac
  int _blockSize
  Byte[] _buffer
  UInt32 _block
  int _startIndex
  int _endIndex
  HashAlgorithmName <HashAlgorithm>k__BackingField
Свойства:
  HashAlgorithmName HashAlgorithm
  int IterationCount
  Byte[] Salt
Методы:
  HashAlgorithmName get_HashAlgorithm()
  void .ctor(Byte[] password, Byte[] salt, int iterations)
  void .ctor(Byte[] password, Byte[] salt, int iterations, HashAlgorithmName hashAlgorithm)
  void .ctor(string password, Byte[] salt)
  void .ctor(string password, Byte[] salt, int iterations)
  void .ctor(string password, Byte[] salt, int iterations, HashAlgorithmName hashAlgorithm)
  void .ctor(string password, int saltSize)
  void .ctor(string password, int saltSize, int iterations)
  void .ctor(string password, int saltSize, int iterations, HashAlgorithmName hashAlgorithm)
  int get_IterationCount()
  void set_IterationCount(int value)
  Byte[] get_Salt()
  void set_Salt(Byte[] value)
  void Dispose(bool disposing)
  Byte[] GetBytes(int cb)
  Byte[] CryptDeriveKey(string algname, string alghashname, int keySize, Byte[] rgbIV)
  void Reset()
  HMAC OpenHmac()
  void Initialize()
  Byte[] Func()
--------------------------------------------------
Класс: System.Security.Cryptography.ICspAsymmetricAlgorithm
Поля:
Свойства:
  CspKeyContainerInfo CspKeyContainerInfo
Методы:
  CspKeyContainerInfo get_CspKeyContainerInfo()
  Byte[] ExportCspBlob(bool includePrivateParameters)
  void ImportCspBlob(Byte[] rawData)
--------------------------------------------------
Класс: System.Security.Cryptography.KeyNumber
Наследуется от: Enum
Поля:
  int value__
  KeyNumber Exchange
  KeyNumber Signature
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.CryptoStream
Наследуется от: Stream
Поля:
  Stream _stream
  ICryptoTransform _transform
  CryptoStreamMode _transformMode
  Byte[] _inputBuffer
  int _inputBufferIndex
  int _inputBlockSize
  Byte[] _outputBuffer
  int _outputBufferIndex
  int _outputBlockSize
  bool _canRead
  bool _canWrite
  bool _finalBlockTransformed
  SemaphoreSlim _lazyAsyncActiveSemaphore
  bool _leaveOpen
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
  bool HasFlushedFinalBlock
  SemaphoreSlim AsyncActiveSemaphore
Методы:
  void .ctor(Stream stream, ICryptoTransform transform, CryptoStreamMode mode)
  void .ctor(Stream stream, ICryptoTransform transform, CryptoStreamMode mode, bool leaveOpen)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool get_HasFlushedFinalBlock()
  void FlushFinalBlock()
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  Task`1<int> ReadAsyncInternal(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  int ReadByte()
  void WriteByte(byte value)
  int Read(Byte[] buffer, int offset, int count)
  void CheckReadArguments(Byte[] buffer, int offset, int count)
  Task`1<int> ReadAsyncCore(Byte[] buffer, int offset, int count, CancellationToken cancellationToken, bool useAsync)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  Task WriteAsyncInternal(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  void Write(Byte[] buffer, int offset, int count)
  void CheckWriteArguments(Byte[] buffer, int offset, int count)
  Task WriteAsyncCore(Byte[] buffer, int offset, int count, CancellationToken cancellationToken, bool useAsync)
  void Clear()
  void Dispose(bool disposing)
  void InitializeBuffer()
  SemaphoreSlim get_AsyncActiveSemaphore()
--------------------------------------------------
Класс: System.Security.Cryptography.CryptoStreamMode
Наследуется от: Enum
Поля:
  int value__
  CryptoStreamMode Read
  CryptoStreamMode Write
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.CryptographicOperations
Наследуется от: object
Поля:
Свойства:
Методы:
  bool FixedTimeEquals(ReadOnlySpan`1<byte> left, ReadOnlySpan`1<byte> right)
  void ZeroMemory(Span`1<byte> buffer)
--------------------------------------------------
Класс: System.Security.Cryptography.HashAlgorithm
Наследуется от: object
Поля:
  bool _disposed
  int HashSizeValue
  Byte[] HashValue
  int State
Свойства:
  int HashSize
  Byte[] Hash
  int InputBlockSize
  int OutputBlockSize
  bool CanTransformMultipleBlocks
  bool CanReuseTransform
Методы:
  void .ctor()
  HashAlgorithm Create()
  HashAlgorithm Create(string hashName)
  int get_HashSize()
  Byte[] get_Hash()
  Byte[] ComputeHash(Byte[] buffer)
  bool TryComputeHash(ReadOnlySpan`1<byte> source, Span`1<byte> destination, Int32& bytesWritten)
  Byte[] ComputeHash(Byte[] buffer, int offset, int count)
  Byte[] ComputeHash(Stream inputStream)
  Byte[] CaptureHashCodeAndReinitialize()
  void Dispose()
  void Clear()
  void Dispose(bool disposing)
  int get_InputBlockSize()
  int get_OutputBlockSize()
  bool get_CanTransformMultipleBlocks()
  bool get_CanReuseTransform()
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void ValidateTransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void HashCore(Byte[] array, int ibStart, int cbSize)
  Byte[] HashFinal()
  void Initialize()
  void HashCore(ReadOnlySpan`1<byte> source)
  bool TryHashFinal(Span`1<byte> destination, Int32& bytesWritten)
--------------------------------------------------
Класс: System.Security.Cryptography.HashAlgorithmName
Наследуется от: ValueType
Поля:
  string _name
Свойства:
  HashAlgorithmName MD5
  HashAlgorithmName SHA1
  HashAlgorithmName SHA256
  HashAlgorithmName SHA384
  HashAlgorithmName SHA512
  string Name
Методы:
  HashAlgorithmName get_MD5()
  HashAlgorithmName get_SHA1()
  HashAlgorithmName get_SHA256()
  HashAlgorithmName get_SHA384()
  HashAlgorithmName get_SHA512()
  void .ctor(string name)
  string get_Name()
  string ToString()
  bool Equals(object obj)
  bool Equals(HashAlgorithmName other)
  int GetHashCode()
  bool op_Equality(HashAlgorithmName left, HashAlgorithmName right)
  bool op_Inequality(HashAlgorithmName left, HashAlgorithmName right)
--------------------------------------------------
Класс: System.Security.Cryptography.RSAEncryptionPadding
Наследуется от: object
Поля:
  RSAEncryptionPadding s_pkcs1
  RSAEncryptionPadding s_oaepSHA1
  RSAEncryptionPadding s_oaepSHA256
  RSAEncryptionPadding s_oaepSHA384
  RSAEncryptionPadding s_oaepSHA512
  RSAEncryptionPaddingMode _mode
  HashAlgorithmName _oaepHashAlgorithm
Свойства:
  RSAEncryptionPadding Pkcs1
  RSAEncryptionPadding OaepSHA1
  RSAEncryptionPadding OaepSHA256
  RSAEncryptionPadding OaepSHA384
  RSAEncryptionPadding OaepSHA512
  RSAEncryptionPaddingMode Mode
  HashAlgorithmName OaepHashAlgorithm
Методы:
  RSAEncryptionPadding get_Pkcs1()
  RSAEncryptionPadding get_OaepSHA1()
  RSAEncryptionPadding get_OaepSHA256()
  RSAEncryptionPadding get_OaepSHA384()
  RSAEncryptionPadding get_OaepSHA512()
  void .ctor(RSAEncryptionPaddingMode mode, HashAlgorithmName oaepHashAlgorithm)
  RSAEncryptionPadding CreateOaep(HashAlgorithmName hashAlgorithm)
  RSAEncryptionPaddingMode get_Mode()
  HashAlgorithmName get_OaepHashAlgorithm()
  int GetHashCode()
  int CombineHashCodes(int h1, int h2)
  bool Equals(object obj)
  bool Equals(RSAEncryptionPadding other)
  bool op_Equality(RSAEncryptionPadding left, RSAEncryptionPadding right)
  bool op_Inequality(RSAEncryptionPadding left, RSAEncryptionPadding right)
  string ToString()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAEncryptionPaddingMode
Наследуется от: Enum
Поля:
  int value__
  RSAEncryptionPaddingMode Pkcs1
  RSAEncryptionPaddingMode Oaep
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.RSASignaturePadding
Наследуется от: object
Поля:
  RSASignaturePadding s_pkcs1
  RSASignaturePadding s_pss
  RSASignaturePaddingMode _mode
Свойства:
  RSASignaturePadding Pkcs1
  RSASignaturePadding Pss
  RSASignaturePaddingMode Mode
Методы:
  void .ctor(RSASignaturePaddingMode mode)
  RSASignaturePadding get_Pkcs1()
  RSASignaturePadding get_Pss()
  RSASignaturePaddingMode get_Mode()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(RSASignaturePadding other)
  bool op_Equality(RSASignaturePadding left, RSASignaturePadding right)
  bool op_Inequality(RSASignaturePadding left, RSASignaturePadding right)
  string ToString()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RSASignaturePaddingMode
Наследуется от: Enum
Поля:
  int value__
  RSASignaturePaddingMode Pkcs1
  RSASignaturePaddingMode Pss
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.Aes
Наследуется от: SymmetricAlgorithm
Поля:
  KeySizes[] s_legalBlockSizes
  KeySizes[] s_legalKeySizes
Свойства:
Методы:
  void .ctor()
  Aes Create()
  Aes Create(string algorithmName)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.AsymmetricAlgorithm
Наследуется от: object
Поля:
  int KeySizeValue
  KeySizes[] LegalKeySizesValue
Свойства:
  int KeySize
  KeySizes[] LegalKeySizes
  string SignatureAlgorithm
  string KeyExchangeAlgorithm
Методы:
  void .ctor()
  void Dispose()
  void Clear()
  void Dispose(bool disposing)
  int get_KeySize()
  void set_KeySize(int value)
  KeySizes[] get_LegalKeySizes()
  string get_SignatureAlgorithm()
  string get_KeyExchangeAlgorithm()
  AsymmetricAlgorithm Create()
  AsymmetricAlgorithm Create(string algName)
  void FromXmlString(string xmlString)
  string ToXmlString(bool includePrivateParameters)
  Byte[] ExportEncryptedPkcs8PrivateKey(ReadOnlySpan`1<byte> passwordBytes, PbeParameters pbeParameters)
  Byte[] ExportEncryptedPkcs8PrivateKey(ReadOnlySpan`1<char> password, PbeParameters pbeParameters)
  Byte[] ExportPkcs8PrivateKey()
  Byte[] ExportSubjectPublicKeyInfo()
  void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan`1<byte> passwordBytes, ReadOnlySpan`1<byte> source, Int32& bytesRead)
  void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan`1<char> password, ReadOnlySpan`1<byte> source, Int32& bytesRead)
  void ImportPkcs8PrivateKey(ReadOnlySpan`1<byte> source, Int32& bytesRead)
  void ImportSubjectPublicKeyInfo(ReadOnlySpan`1<byte> source, Int32& bytesRead)
  bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan`1<byte> passwordBytes, PbeParameters pbeParameters, Span`1<byte> destination, Int32& bytesWritten)
  bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan`1<char> password, PbeParameters pbeParameters, Span`1<byte> destination, Int32& bytesWritten)
  bool TryExportPkcs8PrivateKey(Span`1<byte> destination, Int32& bytesWritten)
  bool TryExportSubjectPublicKeyInfo(Span`1<byte> destination, Int32& bytesWritten)
--------------------------------------------------
Класс: System.Security.Cryptography.AsymmetricKeyExchangeDeformatter
Наследуется от: object
Поля:
Свойства:
  string Parameters
Методы:
  void .ctor()
  string get_Parameters()
  void set_Parameters(string value)
  void SetKey(AsymmetricAlgorithm key)
  Byte[] DecryptKeyExchange(Byte[] rgb)
--------------------------------------------------
Класс: System.Security.Cryptography.AsymmetricKeyExchangeFormatter
Наследуется от: object
Поля:
Свойства:
  string Parameters
Методы:
  void .ctor()
  string get_Parameters()
  void SetKey(AsymmetricAlgorithm key)
  Byte[] CreateKeyExchange(Byte[] data)
  Byte[] CreateKeyExchange(Byte[] data, Type symAlgType)
--------------------------------------------------
Класс: System.Security.Cryptography.AsymmetricSignatureDeformatter
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void SetKey(AsymmetricAlgorithm key)
  void SetHashAlgorithm(string strName)
  bool VerifySignature(HashAlgorithm hash, Byte[] rgbSignature)
  bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature)
--------------------------------------------------
Класс: System.Security.Cryptography.AsymmetricSignatureFormatter
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void SetKey(AsymmetricAlgorithm key)
  void SetHashAlgorithm(string strName)
  Byte[] CreateSignature(HashAlgorithm hash)
  Byte[] CreateSignature(Byte[] rgbHash)
--------------------------------------------------
Класс: System.Security.Cryptography.FromBase64TransformMode
Наследуется от: Enum
Поля:
  int value__
  FromBase64TransformMode IgnoreWhiteSpaces
  FromBase64TransformMode DoNotIgnoreWhiteSpaces
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.ToBase64Transform
Наследуется от: object
Поля:
Свойства:
  int InputBlockSize
  int OutputBlockSize
  bool CanTransformMultipleBlocks
  bool CanReuseTransform
Методы:
  int get_InputBlockSize()
  int get_OutputBlockSize()
  bool get_CanTransformMultipleBlocks()
  bool get_CanReuseTransform()
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void Dispose()
  void Clear()
  void Dispose(bool disposing)
  void Finalize()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.FromBase64Transform
Наследуется от: object
Поля:
  Byte[] _inputBuffer
  int _inputIndex
  FromBase64TransformMode _whitespaces
Свойства:
  int InputBlockSize
  int OutputBlockSize
  bool CanTransformMultipleBlocks
  bool CanReuseTransform
Методы:
  void .ctor()
  void .ctor(FromBase64TransformMode whitespaces)
  int get_InputBlockSize()
  int get_OutputBlockSize()
  bool get_CanTransformMultipleBlocks()
  bool get_CanReuseTransform()
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  Byte[] DiscardWhiteSpaces(Byte[] inputBuffer, int inputOffset, int inputCount)
  void Dispose()
  void Reset()
  void Clear()
  void Dispose(bool disposing)
  void Finalize()
--------------------------------------------------
Класс: System.Security.Cryptography.CipherMode
Наследуется от: Enum
Поля:
  int value__
  CipherMode CBC
  CipherMode ECB
  CipherMode OFB
  CipherMode CFB
  CipherMode CTS
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.PaddingMode
Наследуется от: Enum
Поля:
  int value__
  PaddingMode None
  PaddingMode PKCS7
  PaddingMode Zeros
  PaddingMode ANSIX923
  PaddingMode ISO10126
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.KeySizes
Наследуется от: object
Поля:
  int m_minSize
  int m_maxSize
  int m_skipSize
Свойства:
  int MinSize
  int MaxSize
  int SkipSize
Методы:
  int get_MinSize()
  int get_MaxSize()
  int get_SkipSize()
  void .ctor(int minSize, int maxSize, int skipSize)
  bool IsLegal(int keySize)
  bool IsLegalKeySize(KeySizes[] legalKeys, int size)
--------------------------------------------------
Класс: System.Security.Cryptography.CryptographicException
Наследуется от: SystemException
Поля:
  int FORMAT_MESSAGE_IGNORE_INSERTS
  int FORMAT_MESSAGE_FROM_SYSTEM
  int FORMAT_MESSAGE_ARGUMENT_ARRAY
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string format, string insert)
  void .ctor(string message, Exception inner)
  void .ctor(int hr)
  void .ctor(SerializationInfo info, StreamingContext context)
  void ThrowCryptographicException(int hr)
--------------------------------------------------
Класс: System.Security.Cryptography.CryptographicUnexpectedOperationException
Наследуется от: CryptographicException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string format, string insert)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Security.Cryptography.CspProviderFlags
Наследуется от: Enum
Поля:
  int value__
  CspProviderFlags NoFlags
  CspProviderFlags UseMachineKeyStore
  CspProviderFlags UseDefaultKeyContainer
  CspProviderFlags UseNonExportableKey
  CspProviderFlags UseExistingKey
  CspProviderFlags UseArchivableKey
  CspProviderFlags UseUserProtectedKey
  CspProviderFlags NoPrompt
  CspProviderFlags CreateEphemeralKey
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.CspParameters
Наследуется от: object
Поля:
  int ProviderType
  string ProviderName
  string KeyContainerName
  int KeyNumber
  int m_flags
  CryptoKeySecurity m_cryptoKeySecurity
  SecureString m_keyPassword
  IntPtr m_parentWindowHandle
Свойства:
  CspProviderFlags Flags
  CryptoKeySecurity CryptoKeySecurity
  SecureString KeyPassword
  IntPtr ParentWindowHandle
Методы:
  CspProviderFlags get_Flags()
  void set_Flags(CspProviderFlags value)
  CryptoKeySecurity get_CryptoKeySecurity()
  void set_CryptoKeySecurity(CryptoKeySecurity value)
  SecureString get_KeyPassword()
  void set_KeyPassword(SecureString value)
  IntPtr get_ParentWindowHandle()
  void set_ParentWindowHandle(IntPtr value)
  void .ctor()
  void .ctor(int dwTypeIn)
  void .ctor(int dwTypeIn, string strProviderNameIn)
  void .ctor(int dwTypeIn, string strProviderNameIn, string strContainerNameIn)
  void .ctor(int providerType, string providerName, string keyContainerName, CryptoKeySecurity cryptoKeySecurity, SecureString keyPassword)
  void .ctor(int providerType, string providerName, string keyContainerName, CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle)
  void .ctor(int providerType, string providerName, string keyContainerName, CspProviderFlags flags)
  void .ctor(CspParameters parameters)
--------------------------------------------------
Класс: System.Security.Cryptography.DeriveBytes
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte[] GetBytes(int cb)
  void Reset()
  void Dispose()
  void Dispose(bool disposing)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.DES
Наследуется от: SymmetricAlgorithm
Поля:
  KeySizes[] s_legalBlockSizes
  KeySizes[] s_legalKeySizes
Свойства:
  Byte[] Key
Методы:
  void .ctor()
  Byte[] get_Key()
  void set_Key(Byte[] value)
  DES Create()
  DES Create(string algName)
  bool IsWeakKey(Byte[] rgbKey)
  bool IsSemiWeakKey(Byte[] rgbKey)
  bool IsLegalKeySize(Byte[] rgbKey)
  ulong QuadWordFromBigEndian(Byte[] block)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.DESCryptoServiceProvider
Наследуется от: DES
Поля:
Свойства:
Методы:
  void .ctor()
  ICryptoTransform CreateEncryptor(Byte[] rgbKey, Byte[] rgbIV)
  ICryptoTransform CreateDecryptor(Byte[] rgbKey, Byte[] rgbIV)
  void GenerateKey()
  void GenerateIV()
--------------------------------------------------
Класс: System.Security.Cryptography.DSAParameters
Наследуется от: ValueType
Поля:
  Byte[] P
  Byte[] Q
  Byte[] G
  Byte[] Y
  Byte[] J
  Byte[] X
  Byte[] Seed
  int Counter
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.DSA
Наследуется от: AsymmetricAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  DSA Create()
  DSA Create(string algName)
  Byte[] CreateSignature(Byte[] rgbHash)
  bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature)
  Byte[] HashData(Byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
  Byte[] HashData(Stream data, HashAlgorithmName hashAlgorithm)
  Byte[] SignData(Byte[] data, HashAlgorithmName hashAlgorithm)
  Byte[] SignData(Byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
  Byte[] SignData(Stream data, HashAlgorithmName hashAlgorithm)
  bool VerifyData(Byte[] data, Byte[] signature, HashAlgorithmName hashAlgorithm)
  bool VerifyData(Byte[] data, int offset, int count, Byte[] signature, HashAlgorithmName hashAlgorithm)
  bool VerifyData(Stream data, Byte[] signature, HashAlgorithmName hashAlgorithm)
  void FromXmlString(string xmlString)
  string ToXmlString(bool includePrivateParameters)
  DSAParameters ExportParameters(bool includePrivateParameters)
  void ImportParameters(DSAParameters parameters)
  Exception DerivedClassMustOverride()
  Exception HashAlgorithmNameNullOrEmpty()
  DSA Create(int keySizeInBits)
  DSA Create(DSAParameters parameters)
  bool TryCreateSignature(ReadOnlySpan`1<byte> hash, Span`1<byte> destination, Int32& bytesWritten)
  bool TryHashData(ReadOnlySpan`1<byte> data, Span`1<byte> destination, HashAlgorithmName hashAlgorithm, Int32& bytesWritten)
  bool TrySignData(ReadOnlySpan`1<byte> data, Span`1<byte> destination, HashAlgorithmName hashAlgorithm, Int32& bytesWritten)
  bool VerifyData(ReadOnlySpan`1<byte> data, ReadOnlySpan`1<byte> signature, HashAlgorithmName hashAlgorithm)
  bool VerifySignature(ReadOnlySpan`1<byte> hash, ReadOnlySpan`1<byte> signature)
--------------------------------------------------
Класс: System.Security.Cryptography.DSASignatureDeformatter
Наследуется от: AsymmetricSignatureDeformatter
Поля:
  DSA _dsaKey
  string _oid
Свойства:
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  void SetKey(AsymmetricAlgorithm key)
  void SetHashAlgorithm(string strName)
  bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature)
--------------------------------------------------
Класс: System.Security.Cryptography.DSASignatureFormatter
Наследуется от: AsymmetricSignatureFormatter
Поля:
  DSA _dsaKey
  string _oid
Свойства:
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  void SetKey(AsymmetricAlgorithm key)
  void SetHashAlgorithm(string strName)
  Byte[] CreateSignature(Byte[] rgbHash)
--------------------------------------------------
Класс: System.Security.Cryptography.HMAC
Наследуется от: KeyedHashAlgorithm
Поля:
  int blockSizeValue
  string m_hashName
  HashAlgorithm m_hash1
  HashAlgorithm m_hash2
  Byte[] m_inner
  Byte[] m_outer
  bool m_hashing
Свойства:
  int BlockSizeValue
  Byte[] Key
  string HashName
Методы:
  int get_BlockSizeValue()
  void set_BlockSizeValue(int value)
  void UpdateIOPadBuffers()
  void InitializeKey(Byte[] key)
  Byte[] get_Key()
  void set_Key(Byte[] value)
  string get_HashName()
  void set_HashName(string value)
  HMAC Create()
  HMAC Create(string algorithmName)
  void Initialize()
  void HashCore(Byte[] rgb, int ib, int cb)
  Byte[] HashFinal()
  void Dispose(bool disposing)
  HashAlgorithm GetHashAlgorithmWithFipsFallback(Func`1<HashAlgorithm> createStandardHashAlgorithmCallback, Func`1<HashAlgorithm> createFipsHashAlgorithmCallback)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.HMACMD5
Наследуется от: HMAC
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Byte[] key)
--------------------------------------------------
Класс: System.Security.Cryptography.HMACRIPEMD160
Наследуется от: HMAC
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Byte[] key)
--------------------------------------------------
Класс: System.Security.Cryptography.HMACSHA1
Наследуется от: HMAC
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Byte[] key)
  void .ctor(Byte[] key, bool useManagedSha1)
--------------------------------------------------
Класс: System.Security.Cryptography.HMACSHA256
Наследуется от: HMAC
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Byte[] key)
--------------------------------------------------
Класс: System.Security.Cryptography.HMACSHA384
Наследуется от: HMAC
Поля:
  bool m_useLegacyBlockSize
Свойства:
  int BlockSize
  bool ProduceLegacyHmacValues
Методы:
  void .ctor()
  void .ctor(Byte[] key)
  int get_BlockSize()
  bool get_ProduceLegacyHmacValues()
  void set_ProduceLegacyHmacValues(bool value)
--------------------------------------------------
Класс: System.Security.Cryptography.HMACSHA512
Наследуется от: HMAC
Поля:
  bool m_useLegacyBlockSize
Свойства:
  int BlockSize
  bool ProduceLegacyHmacValues
Методы:
  void .ctor()
  void .ctor(Byte[] key)
  int get_BlockSize()
  bool get_ProduceLegacyHmacValues()
  void set_ProduceLegacyHmacValues(bool value)
--------------------------------------------------
Класс: System.Security.Cryptography.ICryptoTransform
Поля:
Свойства:
  int InputBlockSize
  int OutputBlockSize
  bool CanTransformMultipleBlocks
  bool CanReuseTransform
Методы:
  int get_InputBlockSize()
  int get_OutputBlockSize()
  bool get_CanTransformMultipleBlocks()
  bool get_CanReuseTransform()
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
--------------------------------------------------
Класс: System.Security.Cryptography.KeyedHashAlgorithm
Наследуется от: HashAlgorithm
Поля:
  Byte[] KeyValue
Свойства:
  Byte[] Key
Методы:
  void .ctor()
  void Dispose(bool disposing)
  Byte[] get_Key()
  void set_Key(Byte[] value)
  KeyedHashAlgorithm Create()
  KeyedHashAlgorithm Create(string algName)
--------------------------------------------------
Класс: System.Security.Cryptography.MACTripleDES
Наследуется от: KeyedHashAlgorithm
Поля:
  ICryptoTransform m_encryptor
  CryptoStream _cs
  TailStream _ts
  int m_bitsPerByte
  int m_bytesPerBlock
  TripleDES des
Свойства:
  PaddingMode Padding
Методы:
  void .ctor()
  void .ctor(Byte[] rgbKey)
  void .ctor(string strTripleDES, Byte[] rgbKey)
  void Initialize()
  PaddingMode get_Padding()
  void set_Padding(PaddingMode value)
  void HashCore(Byte[] rgbData, int ibStart, int cbSize)
  Byte[] HashFinal()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Security.Cryptography.TailStream
Наследуется от: Stream
Поля:
  Byte[] _Buffer
  int _BufferSize
  int _BufferIndex
  bool _BufferFull
Свойства:
  Byte[] Buffer
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(int bufferSize)
  void Clear()
  void Dispose(bool disposing)
  Byte[] get_Buffer()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Flush()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.Security.Cryptography.MaskGenerationMethod
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte[] GenerateMask(Byte[] rgbSeed, int cbReturn)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.MD5
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  MD5 Create()
  MD5 Create(string algName)
--------------------------------------------------
Класс: System.Security.Cryptography.PasswordDeriveBytes
Наследуется от: DeriveBytes
Поля:
  int _extraCount
  int _prefix
  int _iterations
  Byte[] _baseValue
  Byte[] _extra
  Byte[] _salt
  string _hashName
  Byte[] _password
  HashAlgorithm _hash
Свойства:
  string HashName
  int IterationCount
  Byte[] Salt
Методы:
  void .ctor(string strPassword, Byte[] rgbSalt)
  void .ctor(Byte[] password, Byte[] salt)
  void .ctor(string strPassword, Byte[] rgbSalt, string strHashName, int iterations)
  void .ctor(Byte[] password, Byte[] salt, string hashName, int iterations)
  void .ctor(string strPassword, Byte[] rgbSalt, CspParameters cspParams)
  void .ctor(Byte[] password, Byte[] salt, CspParameters cspParams)
  void .ctor(string strPassword, Byte[] rgbSalt, string strHashName, int iterations, CspParameters cspParams)
  void .ctor(Byte[] password, Byte[] salt, string hashName, int iterations, CspParameters cspParams)
  string get_HashName()
  void set_HashName(string value)
  int get_IterationCount()
  void set_IterationCount(int value)
  Byte[] get_Salt()
  void set_Salt(Byte[] value)
  Byte[] GetBytes(int cb)
  void Reset()
  void Dispose(bool disposing)
  Byte[] CryptDeriveKey(string algname, string alghashname, int keySize, Byte[] rgbIV)
  Byte[] ComputeBaseValue()
  Byte[] ComputeBytes(int cb)
  void HashPrefix(CryptoStream cs)
--------------------------------------------------
Класс: System.Security.Cryptography.PKCS1MaskGenerationMethod
Наследуется от: MaskGenerationMethod
Поля:
  string HashNameValue
Свойства:
  string HashName
Методы:
  void .ctor()
  string get_HashName()
  void set_HashName(string value)
  Byte[] GenerateMask(Byte[] rgbSeed, int cbReturn)
--------------------------------------------------
Класс: System.Security.Cryptography.RandomNumberGenerator
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  RandomNumberGenerator Create()
  RandomNumberGenerator Create(string rngName)
  void Dispose()
  void Dispose(bool disposing)
  void GetBytes(Byte[] data)
  void GetBytes(Byte[] data, int offset, int count)
  void GetNonZeroBytes(Byte[] data)
  void Fill(Span`1<byte> data)
  void FillSpan(Span`1<byte> data)
  void GetBytes(Span`1<byte> data)
  void GetNonZeroBytes(Span`1<byte> data)
  int GetInt32(int fromInclusive, int toExclusive)
  int GetInt32(int toExclusive)
--------------------------------------------------
Класс: System.Security.Cryptography.RC2
Наследуется от: SymmetricAlgorithm
Поля:
  int EffectiveKeySizeValue
  KeySizes[] s_legalBlockSizes
  KeySizes[] s_legalKeySizes
Свойства:
  int EffectiveKeySize
  int KeySize
Методы:
  void .ctor()
  int get_EffectiveKeySize()
  void set_EffectiveKeySize(int value)
  int get_KeySize()
  void set_KeySize(int value)
  RC2 Create()
  RC2 Create(string AlgName)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RC2CryptoServiceProvider
Наследуется от: RC2
Поля:
  bool m_use40bitSalt
  KeySizes[] s_legalKeySizes
Свойства:
  int EffectiveKeySize
  bool UseSalt
Методы:
  void .ctor()
  int get_EffectiveKeySize()
  void set_EffectiveKeySize(int value)
  bool get_UseSalt()
  void set_UseSalt(bool value)
  ICryptoTransform CreateEncryptor(Byte[] rgbKey, Byte[] rgbIV)
  ICryptoTransform CreateDecryptor(Byte[] rgbKey, Byte[] rgbIV)
  void GenerateKey()
  void GenerateIV()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.Rijndael
Наследуется от: SymmetricAlgorithm
Поля:
  KeySizes[] s_legalBlockSizes
  KeySizes[] s_legalKeySizes
Свойства:
Методы:
  void .ctor()
  Rijndael Create()
  Rijndael Create(string algName)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RijndaelManaged
Наследуется от: Rijndael
Поля:
Свойства:
Методы:
  void .ctor()
  ICryptoTransform CreateEncryptor(Byte[] rgbKey, Byte[] rgbIV)
  ICryptoTransform CreateDecryptor(Byte[] rgbKey, Byte[] rgbIV)
  void GenerateKey()
  void GenerateIV()
  ICryptoTransform NewEncryptor(Byte[] rgbKey, CipherMode mode, Byte[] rgbIV, int feedbackSize, RijndaelManagedTransformMode encryptMode)
--------------------------------------------------
Класс: System.Security.Cryptography.RijndaelManagedTransformMode
Наследуется от: Enum
Поля:
  int value__
  RijndaelManagedTransformMode Encrypt
  RijndaelManagedTransformMode Decrypt
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.RijndaelManagedTransform
Наследуется от: object
Поля:
  CipherMode m_cipherMode
  PaddingMode m_paddingValue
  RijndaelManagedTransformMode m_transformMode
  int m_blockSizeBits
  int m_blockSizeBytes
  int m_inputBlockSize
  int m_outputBlockSize
  Int32[] m_encryptKeyExpansion
  Int32[] m_decryptKeyExpansion
  int m_Nr
  int m_Nb
  int m_Nk
  Int32[] m_encryptindex
  Int32[] m_decryptindex
  Int32[] m_IV
  Int32[] m_lastBlockBuffer
  Byte[] m_depadBuffer
  Byte[] m_shiftRegister
  Byte[] s_Sbox
  Int32[] s_Rcon
  Int32[] s_T
  Int32[] s_TF
  Int32[] s_iT
  Int32[] s_iTF
Свойства:
  int BlockSizeValue
  int InputBlockSize
  int OutputBlockSize
  bool CanTransformMultipleBlocks
  bool CanReuseTransform
Методы:
  void .ctor(Byte[] rgbKey, CipherMode mode, Byte[] rgbIV, int blockSize, int feedbackSize, PaddingMode PaddingValue, RijndaelManagedTransformMode transformMode)
  void Dispose()
  void Clear()
  void Dispose(bool disposing)
  int get_BlockSizeValue()
  int get_InputBlockSize()
  int get_OutputBlockSize()
  bool get_CanTransformMultipleBlocks()
  bool get_CanReuseTransform()
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void Reset()
  int EncryptData(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[]& outputBuffer, int outputOffset, PaddingMode paddingMode, bool fLast)
  int DecryptData(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[]& outputBuffer, int outputOffset, PaddingMode paddingMode, bool fLast)
  void Enc(Int32* encryptindex, Int32* encryptKeyExpansion, Int32* T, Int32* TF, Int32* work, Int32* temp)
  void Dec(Int32* decryptindex, Int32* decryptKeyExpansion, Int32* iT, Int32* iTF, Int32* work, Int32* temp)
  void GenerateKeyExpansion(Byte[] rgbKey)
  int rot1(int val)
  int rot2(int val)
  int rot3(int val)
  int SubWord(int a)
  int MulX(int x)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RIPEMD160
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  RIPEMD160 Create()
  RIPEMD160 Create(string hashName)
--------------------------------------------------
Класс: System.Security.Cryptography.RIPEMD160Managed
Наследуется от: RIPEMD160
Поля:
  Byte[] _buffer
  long _count
  UInt32[] _stateMD160
  UInt32[] _blockDWords
Свойства:
Методы:
  void .ctor()
  void Initialize()
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void InitializeState()
  void _HashData(Byte[] partIn, int ibStart, int cbSize)
  Byte[] _EndHash()
  void MDTransform(UInt32* blockDWords, UInt32* state, Byte* block)
  UInt32 F(UInt32 x, UInt32 y, UInt32 z)
  UInt32 G(UInt32 x, UInt32 y, UInt32 z)
  UInt32 H(UInt32 x, UInt32 y, UInt32 z)
  UInt32 I(UInt32 x, UInt32 y, UInt32 z)
  UInt32 J(UInt32 x, UInt32 y, UInt32 z)
--------------------------------------------------
Класс: System.Security.Cryptography.RSAParameters
Наследуется от: ValueType
Поля:
  Byte[] Exponent
  Byte[] Modulus
  Byte[] P
  Byte[] Q
  Byte[] DP
  Byte[] DQ
  Byte[] InverseQ
  Byte[] D
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.RSA
Наследуется от: AsymmetricAlgorithm
Поля:
Свойства:
  string KeyExchangeAlgorithm
  string SignatureAlgorithm
Методы:
  void .ctor()
  RSA Create()
  RSA Create(string algName)
  Byte[] Encrypt(Byte[] data, RSAEncryptionPadding padding)
  Byte[] Decrypt(Byte[] data, RSAEncryptionPadding padding)
  Byte[] SignHash(Byte[] hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  bool VerifyHash(Byte[] hash, Byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Byte[] HashData(Byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
  Byte[] HashData(Stream data, HashAlgorithmName hashAlgorithm)
  Byte[] SignData(Byte[] data, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Byte[] SignData(Byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Byte[] SignData(Stream data, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  bool VerifyData(Byte[] data, Byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  bool VerifyData(Byte[] data, int offset, int count, Byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  bool VerifyData(Stream data, Byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Exception DerivedClassMustOverride()
  Exception HashAlgorithmNameNullOrEmpty()
  Byte[] DecryptValue(Byte[] rgb)
  Byte[] EncryptValue(Byte[] rgb)
  string get_KeyExchangeAlgorithm()
  string get_SignatureAlgorithm()
  void FromXmlString(string xmlString)
  string ToXmlString(bool includePrivateParameters)
  RSAParameters ExportParameters(bool includePrivateParameters)
  void ImportParameters(RSAParameters parameters)
  RSA Create(int keySizeInBits)
  RSA Create(RSAParameters parameters)
  bool TryDecrypt(ReadOnlySpan`1<byte> data, Span`1<byte> destination, RSAEncryptionPadding padding, Int32& bytesWritten)
  bool TryEncrypt(ReadOnlySpan`1<byte> data, Span`1<byte> destination, RSAEncryptionPadding padding, Int32& bytesWritten)
  bool TryHashData(ReadOnlySpan`1<byte> data, Span`1<byte> destination, HashAlgorithmName hashAlgorithm, Int32& bytesWritten)
  bool TrySignHash(ReadOnlySpan`1<byte> hash, Span`1<byte> destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)
  bool TrySignData(ReadOnlySpan`1<byte> data, Span`1<byte> destination, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding, Int32& bytesWritten)
  bool VerifyData(ReadOnlySpan`1<byte> data, ReadOnlySpan`1<byte> signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  bool VerifyHash(ReadOnlySpan`1<byte> hash, ReadOnlySpan`1<byte> signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Byte[] ExportRSAPrivateKey()
  Byte[] ExportRSAPublicKey()
  void ImportRSAPrivateKey(ReadOnlySpan`1<byte> source, Int32& bytesRead)
  void ImportRSAPublicKey(ReadOnlySpan`1<byte> source, Int32& bytesRead)
  bool TryExportRSAPrivateKey(Span`1<byte> destination, Int32& bytesWritten)
  bool TryExportRSAPublicKey(Span`1<byte> destination, Int32& bytesWritten)
--------------------------------------------------
Класс: System.Security.Cryptography.RSACryptoServiceProvider
Наследуется от: RSA
Поля:
  CspProviderFlags modreq(System.Runtime.CompilerServices.IsVolatile) s_UseMachineKeyStore
  int PROV_RSA_FULL
  int AT_KEYEXCHANGE
  int AT_SIGNATURE
  KeyPairPersistence store
  bool persistKey
  bool persisted
  bool privateKeyExportable
  bool m_disposed
  RSAManaged rsa
Свойства:
  string SignatureAlgorithm
  bool UseMachineKeyStore
  string KeyExchangeAlgorithm
  int KeySize
  bool PersistKeyInCsp
  bool PublicOnly
  CspKeyContainerInfo CspKeyContainerInfo
Методы:
  string get_SignatureAlgorithm()
  bool get_UseMachineKeyStore()
  void set_UseMachineKeyStore(bool value)
  Byte[] HashData(Byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
  Byte[] HashData(Stream data, HashAlgorithmName hashAlgorithm)
  int GetAlgorithmId(HashAlgorithmName hashAlgorithm)
  Byte[] Encrypt(Byte[] data, RSAEncryptionPadding padding)
  Byte[] Decrypt(Byte[] data, RSAEncryptionPadding padding)
  Byte[] SignHash(Byte[] hash, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  bool VerifyHash(Byte[] hash, Byte[] signature, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Exception PaddingModeNotSupported()
  void .ctor()
  void .ctor(CspParameters parameters)
  void .ctor(int dwKeySize)
  void .ctor(int dwKeySize, CspParameters parameters)
  void Common(int dwKeySize, bool parameters)
  void Common(CspParameters p)
  void Finalize()
  string get_KeyExchangeAlgorithm()
  int get_KeySize()
  bool get_PersistKeyInCsp()
  void set_PersistKeyInCsp(bool value)
  bool get_PublicOnly()
  Byte[] Decrypt(Byte[] rgb, bool fOAEP)
  Byte[] DecryptValue(Byte[] rgb)
  Byte[] Encrypt(Byte[] rgb, bool fOAEP)
  Byte[] EncryptValue(Byte[] rgb)
  RSAParameters ExportParameters(bool includePrivateParameters)
  void ImportParameters(RSAParameters parameters)
  HashAlgorithm GetHash(object halg)
  HashAlgorithm GetHashFromString(string name)
  Byte[] SignData(Byte[] buffer, object halg)
  Byte[] SignData(Stream inputStream, object halg)
  Byte[] SignData(Byte[] buffer, int offset, int count, object halg)
  string GetHashNameFromOID(string oid)
  Byte[] SignHash(Byte[] rgbHash, string str)
  Byte[] SignHash(Byte[] rgbHash, int calgHash)
  HashAlgorithm InternalHashToHashAlgorithm(int calgHash)
  bool VerifyData(Byte[] buffer, object halg, Byte[] signature)
  bool VerifyHash(Byte[] rgbHash, string str, Byte[] rgbSignature)
  bool VerifyHash(Byte[] rgbHash, int calgHash, Byte[] rgbSignature)
  void Dispose(bool disposing)
  void OnKeyGenerated(object sender, EventArgs e)
  CspKeyContainerInfo get_CspKeyContainerInfo()
  Byte[] ExportCspBlob(bool includePrivateParameters)
  void ImportCspBlob(Byte[] keyBlob)
--------------------------------------------------
Класс: System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter
Наследуется от: AsymmetricKeyExchangeDeformatter
Поля:
  RSA _rsaKey
  Nullable`1<bool> _rsaOverridesDecrypt
Свойства:
  string Parameters
  bool OverridesDecrypt
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  string get_Parameters()
  void set_Parameters(string value)
  Byte[] DecryptKeyExchange(Byte[] rgbData)
  void SetKey(AsymmetricAlgorithm key)
  bool get_OverridesDecrypt()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter
Наследуется от: AsymmetricKeyExchangeFormatter
Поля:
  Byte[] ParameterValue
  RSA _rsaKey
  Nullable`1<bool> _rsaOverridesEncrypt
  RandomNumberGenerator RngValue
Свойства:
  Byte[] Parameter
  string Parameters
  RandomNumberGenerator Rng
  bool OverridesEncrypt
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  Byte[] get_Parameter()
  void set_Parameter(Byte[] value)
  string get_Parameters()
  RandomNumberGenerator get_Rng()
  void set_Rng(RandomNumberGenerator value)
  void SetKey(AsymmetricAlgorithm key)
  Byte[] CreateKeyExchange(Byte[] rgbData)
  Byte[] CreateKeyExchange(Byte[] rgbData, Type symAlgType)
  bool get_OverridesEncrypt()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter
Наследуется от: AsymmetricKeyExchangeDeformatter
Поля:
  RSA _rsaKey
  Nullable`1<bool> _rsaOverridesDecrypt
  RandomNumberGenerator RngValue
Свойства:
  RandomNumberGenerator RNG
  string Parameters
  bool OverridesDecrypt
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  RandomNumberGenerator get_RNG()
  void set_RNG(RandomNumberGenerator value)
  string get_Parameters()
  void set_Parameters(string value)
  Byte[] DecryptKeyExchange(Byte[] rgbIn)
  void SetKey(AsymmetricAlgorithm key)
  bool get_OverridesDecrypt()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter
Наследуется от: AsymmetricKeyExchangeFormatter
Поля:
  RandomNumberGenerator RngValue
  RSA _rsaKey
  Nullable`1<bool> _rsaOverridesEncrypt
Свойства:
  string Parameters
  RandomNumberGenerator Rng
  bool OverridesEncrypt
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  string get_Parameters()
  RandomNumberGenerator get_Rng()
  void set_Rng(RandomNumberGenerator value)
  void SetKey(AsymmetricAlgorithm key)
  Byte[] CreateKeyExchange(Byte[] rgbData)
  Byte[] CreateKeyExchange(Byte[] rgbData, Type symAlgType)
  bool get_OverridesEncrypt()
--------------------------------------------------
Класс: System.Security.Cryptography.SHA1
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  SHA1 Create()
  SHA1 Create(string hashName)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA1Managed
Наследуется от: SHA1
Поля:
  Byte[] _buffer
  long _count
  UInt32[] _stateSHA1
  UInt32[] _expandedBuffer
Свойства:
Методы:
  void .ctor()
  void Initialize()
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void InitializeState()
  void _HashData(Byte[] partIn, int ibStart, int cbSize)
  Byte[] _EndHash()
  void SHATransform(UInt32* expandedBuffer, UInt32* state, Byte* block)
  void SHAExpand(UInt32* x)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA256
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  SHA256 Create()
  SHA256 Create(string hashName)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA256Managed
Наследуется от: SHA256
Поля:
  Byte[] _buffer
  long _count
  UInt32[] _stateSHA256
  UInt32[] _W
  UInt32[] _K
Свойства:
Методы:
  void .ctor()
  void Initialize()
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void InitializeState()
  void _HashData(Byte[] partIn, int ibStart, int cbSize)
  Byte[] _EndHash()
  void SHATransform(UInt32* expandedBuffer, UInt32* state, Byte* block)
  UInt32 RotateRight(UInt32 x, int n)
  UInt32 Ch(UInt32 x, UInt32 y, UInt32 z)
  UInt32 Maj(UInt32 x, UInt32 y, UInt32 z)
  UInt32 sigma_0(UInt32 x)
  UInt32 sigma_1(UInt32 x)
  UInt32 Sigma_0(UInt32 x)
  UInt32 Sigma_1(UInt32 x)
  void SHA256Expand(UInt32* x)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.SHA384
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  SHA384 Create()
  SHA384 Create(string hashName)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA384Managed
Наследуется от: SHA384
Поля:
  Byte[] _buffer
  ulong _count
  UInt64[] _stateSHA384
  UInt64[] _W
  UInt64[] _K
Свойства:
Методы:
  void .ctor()
  void Initialize()
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void InitializeState()
  void _HashData(Byte[] partIn, int ibStart, int cbSize)
  Byte[] _EndHash()
  void SHATransform(UInt64* expandedBuffer, UInt64* state, Byte* block)
  ulong RotateRight(ulong x, int n)
  ulong Ch(ulong x, ulong y, ulong z)
  ulong Maj(ulong x, ulong y, ulong z)
  ulong Sigma_0(ulong x)
  ulong Sigma_1(ulong x)
  ulong sigma_0(ulong x)
  ulong sigma_1(ulong x)
  void SHA384Expand(UInt64* x)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.SHA512
Наследуется от: HashAlgorithm
Поля:
Свойства:
Методы:
  void .ctor()
  SHA512 Create()
  SHA512 Create(string hashName)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA512Managed
Наследуется от: SHA512
Поля:
  Byte[] _buffer
  ulong _count
  UInt64[] _stateSHA512
  UInt64[] _W
  UInt64[] _K
Свойства:
Методы:
  void .ctor()
  void Initialize()
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void InitializeState()
  void _HashData(Byte[] partIn, int ibStart, int cbSize)
  Byte[] _EndHash()
  void SHATransform(UInt64* expandedBuffer, UInt64* state, Byte* block)
  ulong RotateRight(ulong x, int n)
  ulong Ch(ulong x, ulong y, ulong z)
  ulong Maj(ulong x, ulong y, ulong z)
  ulong Sigma_0(ulong x)
  ulong Sigma_1(ulong x)
  ulong sigma_0(ulong x)
  ulong sigma_1(ulong x)
  void SHA512Expand(UInt64* x)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.SignatureDescription
Наследуется от: object
Поля:
  string _strKey
  string _strDigest
  string _strFormatter
  string _strDeformatter
Свойства:
  string KeyAlgorithm
  string DigestAlgorithm
  string FormatterAlgorithm
  string DeformatterAlgorithm
Методы:
  void .ctor()
  void .ctor(SecurityElement el)
  string get_KeyAlgorithm()
  void set_KeyAlgorithm(string value)
  string get_DigestAlgorithm()
  void set_DigestAlgorithm(string value)
  string get_FormatterAlgorithm()
  void set_FormatterAlgorithm(string value)
  string get_DeformatterAlgorithm()
  void set_DeformatterAlgorithm(string value)
  AsymmetricSignatureDeformatter CreateDeformatter(AsymmetricAlgorithm key)
  AsymmetricSignatureFormatter CreateFormatter(AsymmetricAlgorithm key)
  HashAlgorithm CreateDigest()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SignatureDescription
Наследуется от: SignatureDescription
Поля:
  string _hashAlgorithm
Свойства:
Методы:
  void .ctor(string hashAlgorithm, string digestAlgorithm)
  AsymmetricSignatureDeformatter CreateDeformatter(AsymmetricAlgorithm key)
  AsymmetricSignatureFormatter CreateFormatter(AsymmetricAlgorithm key)
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SHA1SignatureDescription
Наследуется от: RSAPKCS1SignatureDescription
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SHA256SignatureDescription
Наследуется от: RSAPKCS1SignatureDescription
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SHA384SignatureDescription
Наследуется от: RSAPKCS1SignatureDescription
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SHA512SignatureDescription
Наследуется от: RSAPKCS1SignatureDescription
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.DSASignatureDescription
Наследуется от: SignatureDescription
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.SymmetricAlgorithm
Наследуется от: object
Поля:
  int BlockSizeValue
  int FeedbackSizeValue
  Byte[] IVValue
  Byte[] KeyValue
  KeySizes[] LegalBlockSizesValue
  KeySizes[] LegalKeySizesValue
  int KeySizeValue
  CipherMode ModeValue
  PaddingMode PaddingValue
Свойства:
  int BlockSize
  int FeedbackSize
  Byte[] IV
  Byte[] Key
  KeySizes[] LegalBlockSizes
  KeySizes[] LegalKeySizes
  int KeySize
  CipherMode Mode
  PaddingMode Padding
Методы:
  void .ctor()
  void Dispose()
  void Clear()
  void Dispose(bool disposing)
  int get_BlockSize()
  void set_BlockSize(int value)
  int get_FeedbackSize()
  void set_FeedbackSize(int value)
  Byte[] get_IV()
  void set_IV(Byte[] value)
  Byte[] get_Key()
  void set_Key(Byte[] value)
  KeySizes[] get_LegalBlockSizes()
  KeySizes[] get_LegalKeySizes()
  int get_KeySize()
  void set_KeySize(int value)
  CipherMode get_Mode()
  void set_Mode(CipherMode value)
  PaddingMode get_Padding()
  void set_Padding(PaddingMode value)
  bool ValidKeySize(int bitLength)
  SymmetricAlgorithm Create()
  SymmetricAlgorithm Create(string algName)
  ICryptoTransform CreateEncryptor()
  ICryptoTransform CreateEncryptor(Byte[] rgbKey, Byte[] rgbIV)
  ICryptoTransform CreateDecryptor()
  ICryptoTransform CreateDecryptor(Byte[] rgbKey, Byte[] rgbIV)
  void GenerateKey()
  void GenerateIV()
--------------------------------------------------
Класс: System.Security.Cryptography.TripleDES
Наследуется от: SymmetricAlgorithm
Поля:
  KeySizes[] s_legalBlockSizes
  KeySizes[] s_legalKeySizes
Свойства:
  Byte[] Key
Методы:
  void .ctor()
  Byte[] get_Key()
  void set_Key(Byte[] value)
  TripleDES Create()
  TripleDES Create(string str)
  bool IsWeakKey(Byte[] rgbKey)
  bool EqualBytes(Byte[] rgbKey, int start1, int start2, int count)
  bool IsLegalKeySize(Byte[] rgbKey)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.TripleDESCryptoServiceProvider
Наследуется от: TripleDES
Поля:
Свойства:
Методы:
  void .ctor()
  ICryptoTransform CreateEncryptor(Byte[] rgbKey, Byte[] rgbIV)
  ICryptoTransform CreateDecryptor(Byte[] rgbKey, Byte[] rgbIV)
  void GenerateKey()
  void GenerateIV()
--------------------------------------------------
Класс: System.Security.Cryptography.CspAlgorithmType
Наследуется от: Enum
Поля:
  int value__
  CspAlgorithmType Rsa
  CspAlgorithmType Dss
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.Constants
Наследуется от: object
Поля:
  int S_OK
  int NTE_FILENOTFOUND
  int NTE_NO_KEY
  int NTE_BAD_KEYSET
  int NTE_KEYSET_NOT_DEF
  int KP_IV
  int KP_MODE
  int KP_MODE_BITS
  int KP_EFFECTIVE_KEYLEN
  int ALG_CLASS_SIGNATURE
  int ALG_CLASS_DATA_ENCRYPT
  int ALG_CLASS_HASH
  int ALG_CLASS_KEY_EXCHANGE
  int ALG_TYPE_DSS
  int ALG_TYPE_RSA
  int ALG_TYPE_BLOCK
  int ALG_TYPE_STREAM
  int ALG_TYPE_ANY
  int CALG_MD5
  int CALG_SHA1
  int CALG_SHA_256
  int CALG_SHA_384
  int CALG_SHA_512
  int CALG_RSA_KEYX
  int CALG_RSA_SIGN
  int CALG_DSS_SIGN
  int CALG_DES
  int CALG_RC2
  int CALG_3DES
  int CALG_3DES_112
  int CALG_AES_128
  int CALG_AES_192
  int CALG_AES_256
  int CALG_RC4
  int PROV_RSA_FULL
  int PROV_DSS_DH
  int PROV_RSA_AES
  int AT_KEYEXCHANGE
  int AT_SIGNATURE
  int PUBLICKEYBLOB
  int PRIVATEKEYBLOB
  int CRYPT_OAEP
  UInt32 CRYPT_VERIFYCONTEXT
  UInt32 CRYPT_NEWKEYSET
  UInt32 CRYPT_DELETEKEYSET
  UInt32 CRYPT_MACHINE_KEYSET
  UInt32 CRYPT_SILENT
  UInt32 CRYPT_EXPORTABLE
  UInt32 CLR_KEYLEN
  UInt32 CLR_PUBLICKEYONLY
  UInt32 CLR_EXPORTABLE
  UInt32 CLR_REMOVABLE
  UInt32 CLR_HARDWARE
  UInt32 CLR_ACCESSIBLE
  UInt32 CLR_PROTECTED
  UInt32 CLR_UNIQUE_CONTAINER
  UInt32 CLR_ALGID
  UInt32 CLR_PP_CLIENT_HWND
  UInt32 CLR_PP_PIN
  string OID_RSA_SMIMEalgCMS3DESwrap
  string OID_RSA_MD5
  string OID_RSA_RC2CBC
  string OID_RSA_DES_EDE3_CBC
  string OID_OIWSEC_desCBC
  string OID_OIWSEC_SHA1
  string OID_OIWSEC_SHA256
  string OID_OIWSEC_SHA384
  string OID_OIWSEC_SHA512
  string OID_OIWSEC_RIPEMD160
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.Utils
Наследуется от: object
Поля:
  int DefaultRsaProviderType
  RNGCryptoServiceProvider modreq(System.Runtime.CompilerServices.IsVolatile) _rng
Свойства:
  RNGCryptoServiceProvider StaticRandomNumberGenerator
Методы:
  void .cctor()
  RNGCryptoServiceProvider get_StaticRandomNumberGenerator()
  Byte[] GenerateRandom(int keySize)
  bool HasAlgorithm(int dwCalg, int dwKeySize)
  string DiscardWhiteSpaces(string inputBuffer)
  string DiscardWhiteSpaces(string inputBuffer, int inputOffset, int inputCount)
  int ConvertByteArrayToInt(Byte[] input)
  Byte[] ConvertIntToByteArray(int dwInput)
  void ConvertIntToByteArray(UInt32 dwInput, Byte[]& counter)
  Byte[] FixupKeyParity(Byte[] key)
  void DWORDFromLittleEndian(UInt32* x, int digits, Byte* block)
  void DWORDToLittleEndian(Byte[] block, UInt32[] x, int digits)
  void DWORDFromBigEndian(UInt32* x, int digits, Byte* block)
  void DWORDToBigEndian(Byte[] block, UInt32[] x, int digits)
  void QuadWordFromBigEndian(UInt64* x, int digits, Byte* block)
  void QuadWordToBigEndian(Byte[] block, UInt64[] x, int digits)
  Byte[] Int(UInt32 i)
  Byte[] RsaOaepEncrypt(RSA rsa, HashAlgorithm hash, PKCS1MaskGenerationMethod mgf, RandomNumberGenerator rng, Byte[] data)
  Byte[] RsaOaepDecrypt(RSA rsa, HashAlgorithm hash, PKCS1MaskGenerationMethod mgf, Byte[] encryptedData)
  Byte[] RsaPkcs1Padding(RSA rsa, Byte[] oid, Byte[] hash)
  bool CompareBigIntArrays(Byte[] lhs, Byte[] rhs)
  HashAlgorithmName OidToHashAlgorithmName(string oid)
  bool DoesRsaKeyOverride(RSA rsaKey, string methodName, Type[] parameterTypes)
  bool DoesRsaKeyOverrideSlowPath(Type t, string methodName, Type[] parameterTypes)
  bool _ProduceLegacyHmacValues()
--------------------------------------------------
Класс: System.Security.Cryptography.CryptoAPITransform
Наследуется от: object
Поля:
  bool m_disposed
Свойства:
  bool CanReuseTransform
  bool CanTransformMultipleBlocks
  int InputBlockSize
  IntPtr KeyHandle
  int OutputBlockSize
Методы:
  void .ctor()
  bool get_CanReuseTransform()
  bool get_CanTransformMultipleBlocks()
  int get_InputBlockSize()
  IntPtr get_KeyHandle()
  int get_OutputBlockSize()
  void Dispose()
  void Clear()
  void Dispose(bool disposing)
  int TransformBlock(Byte[] inputBuffer, int inputOffset, int inputCount, Byte[] outputBuffer, int outputOffset)
  Byte[] TransformFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void Reset()
--------------------------------------------------
Класс: System.Security.Cryptography.CryptoConfig
Наследуется от: object
Поля:
  object lockObject
  Dictionary`2<string, Type> algorithms
Свойства:
  bool AllowOnlyFipsAlgorithms
Методы:
  void AddOID(string oid, String[] names)
  object CreateFromName(string name)
  object CreateFromName(string name, Object[] args)
  string MapNameToOID(string name, object arg)
  string MapNameToOID(string name)
  void Initialize()
  void AddAlgorithm(Type algorithm, String[] names)
  Byte[] EncodeOID(string str)
  Byte[] EncodeLongNumber(long x)
  bool get_AllowOnlyFipsAlgorithms()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.CspKeyContainerInfo
Наследуется от: object
Поля:
  CspParameters _params
  bool _random
Свойства:
  bool Accessible
  CryptoKeySecurity CryptoKeySecurity
  bool Exportable
  bool HardwareDevice
  string KeyContainerName
  KeyNumber KeyNumber
  bool MachineKeyStore
  bool Protected
  string ProviderName
  int ProviderType
  bool RandomlyGenerated
  bool Removable
  string UniqueKeyContainerName
Методы:
  void .ctor(CspParameters parameters)
  bool get_Accessible()
  CryptoKeySecurity get_CryptoKeySecurity()
  bool get_Exportable()
  bool get_HardwareDevice()
  string get_KeyContainerName()
  KeyNumber get_KeyNumber()
  bool get_MachineKeyStore()
  bool get_Protected()
  string get_ProviderName()
  int get_ProviderType()
  bool get_RandomlyGenerated()
  bool get_Removable()
  string get_UniqueKeyContainerName()
--------------------------------------------------
Класс: System.Security.Cryptography.DESTransform
Наследуется от: SymmetricTransform
Поля:
  int KEY_BIT_SIZE
  int KEY_BYTE_SIZE
  int BLOCK_BIT_SIZE
  int BLOCK_BYTE_SIZE
  Byte[] keySchedule
  Byte[] byteBuff
  UInt32[] dwordBuff
  UInt32[] spBoxes
  Byte[] PC1
  Byte[] leftRotTotal
  Byte[] PC2
  UInt32[] ipTab
  UInt32[] fpTab
Свойства:
Методы:
  void .ctor(SymmetricAlgorithm symmAlgo, bool encryption, Byte[] key, Byte[] iv)
  UInt32 CipherFunct(UInt32 r, int n)
  void Permutation(Byte[] input, Byte[] output, UInt32[] permTab, bool preSwap)
  void BSwap(Byte[] byteBuff)
  void SetKey(Byte[] key)
  void ProcessBlock(Byte[] input, Byte[] output)
  void ECB(Byte[] input, Byte[] output)
  Byte[] GetStrongKey()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.DSACryptoServiceProvider
Наследуется от: DSA
Поля:
  int PROV_DSS_DH
  KeyPairPersistence store
  bool persistKey
  bool persisted
  bool privateKeyExportable
  bool m_disposed
  DSAManaged dsa
  bool useMachineKeyStore
Свойства:
  string KeyExchangeAlgorithm
  int KeySize
  bool PersistKeyInCsp
  bool PublicOnly
  string SignatureAlgorithm
  bool UseMachineKeyStore
  CspKeyContainerInfo CspKeyContainerInfo
Методы:
  void .ctor()
  void .ctor(CspParameters parameters)
  void .ctor(int dwKeySize)
  void .ctor(int dwKeySize, CspParameters parameters)
  void Common(int dwKeySize, bool parameters)
  void Common(CspParameters parameters)
  void Finalize()
  string get_KeyExchangeAlgorithm()
  int get_KeySize()
  bool get_PersistKeyInCsp()
  void set_PersistKeyInCsp(bool value)
  bool get_PublicOnly()
  string get_SignatureAlgorithm()
  bool get_UseMachineKeyStore()
  void set_UseMachineKeyStore(bool value)
  DSAParameters ExportParameters(bool includePrivateParameters)
  void ImportParameters(DSAParameters parameters)
  Byte[] CreateSignature(Byte[] rgbHash)
  Byte[] SignData(Byte[] buffer)
  Byte[] SignData(Byte[] buffer, int offset, int count)
  Byte[] SignData(Stream inputStream)
  Byte[] SignHash(Byte[] rgbHash, string str)
  bool VerifyData(Byte[] rgbData, Byte[] rgbSignature)
  bool VerifyHash(Byte[] rgbHash, string str, Byte[] rgbSignature)
  bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature)
  Byte[] HashData(Byte[] data, int offset, int count, HashAlgorithmName hashAlgorithm)
  Byte[] HashData(Stream data, HashAlgorithmName hashAlgorithm)
  void Dispose(bool disposing)
  void OnKeyGenerated(object sender, EventArgs e)
  CspKeyContainerInfo get_CspKeyContainerInfo()
  Byte[] ExportCspBlob(bool includePrivateParameters)
  void ImportCspBlob(Byte[] keyBlob)
--------------------------------------------------
Класс: System.Security.Cryptography.MD5CryptoServiceProvider
Наследуется от: MD5
Поля:
  int BLOCK_SIZE_BYTES
  UInt32[] _H
  UInt32[] buff
  ulong count
  Byte[] _ProcessingBuffer
  int _ProcessingBufferCount
  UInt32[] K
Свойства:
Методы:
  void .ctor()
  void Finalize()
  void Dispose(bool disposing)
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void Initialize()
  void ProcessBlock(Byte[] inputBuffer, int inputOffset)
  void ProcessFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void AddLength(ulong length, Byte[] buffer, int position)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RC2Transform
Наследуется от: SymmetricTransform
Поля:
  ushort R0
  ushort R1
  ushort R2
  ushort R3
  UInt16[] K
  int j
  Byte[] pitable
Свойства:
Методы:
  void .ctor(RC2 rc2Algo, bool encryption, Byte[] key, Byte[] iv)
  void ECB(Byte[] input, Byte[] output)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.RNGCryptoServiceProvider
Наследуется от: RandomNumberGenerator
Поля:
  object _lock
  IntPtr _handle
Свойства:
Методы:
  void .cctor()
  void .ctor()
  void .ctor(Byte[] rgb)
  void .ctor(CspParameters cspParams)
  void .ctor(string str)
  void Check()
  bool RngOpen()
  IntPtr RngInitialize(Byte* seed, IntPtr seed_length)
  IntPtr RngGetBytes(IntPtr handle, Byte* data, IntPtr data_length)
  void RngClose(IntPtr handle)
  void GetBytes(Byte[] data)
  void GetBytes(Byte* data, IntPtr data_length)
  void GetNonZeroBytes(Byte[] data)
  void Finalize()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
Наследуется от: AsymmetricSignatureDeformatter
Поля:
  RSA rsa
  string hashName
Свойства:
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  void SetHashAlgorithm(string strName)
  void SetKey(AsymmetricAlgorithm key)
  bool VerifySignature(Byte[] rgbHash, Byte[] rgbSignature)
--------------------------------------------------
Класс: System.Security.Cryptography.RSAPKCS1SignatureFormatter
Наследуется от: AsymmetricSignatureFormatter
Поля:
  RSA rsa
  string hash
Свойства:
Методы:
  void .ctor()
  void .ctor(AsymmetricAlgorithm key)
  Byte[] CreateSignature(Byte[] rgbHash)
  void SetHashAlgorithm(string strName)
  void SetKey(AsymmetricAlgorithm key)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA1Internal
Наследуется от: object
Поля:
  int BLOCK_SIZE_BYTES
  UInt32[] _H
  ulong count
  Byte[] _ProcessingBuffer
  int _ProcessingBufferCount
  UInt32[] buff
Свойства:
Методы:
  void .ctor()
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void Initialize()
  void ProcessBlock(Byte[] inputBuffer, UInt32 inputOffset)
  void InitialiseBuff(UInt32[] buff, Byte[] input, UInt32 inputOffset)
  void FillBuff(UInt32[] buff)
  void ProcessFinalBlock(Byte[] inputBuffer, int inputOffset, int inputCount)
  void AddLength(ulong length, Byte[] buffer, int position)
--------------------------------------------------
Класс: System.Security.Cryptography.SHA1CryptoServiceProvider
Наследуется от: SHA1
Поля:
  SHA1Internal sha
Свойства:
Методы:
  void .ctor()
  void Finalize()
  void Dispose(bool disposing)
  void HashCore(Byte[] rgb, int ibStart, int cbSize)
  Byte[] HashFinal()
  void Initialize()
--------------------------------------------------
Класс: System.Security.Cryptography.TripleDESTransform
Наследуется от: SymmetricTransform
Поля:
  DESTransform E1
  DESTransform D2
  DESTransform E3
  DESTransform D1
  DESTransform E2
  DESTransform D3
Свойства:
Методы:
  void .ctor(TripleDES algo, bool encryption, Byte[] key, Byte[] iv)
  void ECB(Byte[] input, Byte[] output)
  Byte[] GetStrongKey()
--------------------------------------------------
Класс: System.Security.Cryptography.AesCcm
Наследуется от: object
Поля:
Свойства:
  KeySizes NonceByteSizes
  KeySizes TagByteSizes
Методы:
  void .ctor(Byte[] key)
  void .ctor(ReadOnlySpan`1<byte> key)
  KeySizes get_NonceByteSizes()
  KeySizes get_TagByteSizes()
  void Decrypt(Byte[] nonce, Byte[] ciphertext, Byte[] tag, Byte[] plaintext, Byte[] associatedData)
  void Decrypt(ReadOnlySpan`1<byte> nonce, ReadOnlySpan`1<byte> ciphertext, ReadOnlySpan`1<byte> tag, Span`1<byte> plaintext, ReadOnlySpan`1<byte> associatedData)
  void Dispose()
  void Encrypt(Byte[] nonce, Byte[] plaintext, Byte[] ciphertext, Byte[] tag, Byte[] associatedData)
  void Encrypt(ReadOnlySpan`1<byte> nonce, ReadOnlySpan`1<byte> plaintext, Span`1<byte> ciphertext, Span`1<byte> tag, ReadOnlySpan`1<byte> associatedData)
--------------------------------------------------
Класс: System.Security.Cryptography.AesGcm
Наследуется от: object
Поля:
Свойства:
  KeySizes NonceByteSizes
  KeySizes TagByteSizes
Методы:
  void .ctor(Byte[] key)
  void .ctor(ReadOnlySpan`1<byte> key)
  KeySizes get_NonceByteSizes()
  KeySizes get_TagByteSizes()
  void Decrypt(Byte[] nonce, Byte[] ciphertext, Byte[] tag, Byte[] plaintext, Byte[] associatedData)
  void Decrypt(ReadOnlySpan`1<byte> nonce, ReadOnlySpan`1<byte> ciphertext, ReadOnlySpan`1<byte> tag, Span`1<byte> plaintext, ReadOnlySpan`1<byte> associatedData)
  void Dispose()
  void Encrypt(Byte[] nonce, Byte[] plaintext, Byte[] ciphertext, Byte[] tag, Byte[] associatedData)
  void Encrypt(ReadOnlySpan`1<byte> nonce, ReadOnlySpan`1<byte> plaintext, Span`1<byte> ciphertext, Span`1<byte> tag, ReadOnlySpan`1<byte> associatedData)
--------------------------------------------------
Класс: System.Security.Cryptography.CryptoConfigForwarder
Наследуется от: object
Поля:
Свойства:
Методы:
  object CreateFromName(string name)
  HashAlgorithm CreateDefaultHashAlgorithm()
--------------------------------------------------
Класс: System.Security.Cryptography.PbeEncryptionAlgorithm
Наследуется от: Enum
Поля:
  int value__
  PbeEncryptionAlgorithm Unknown
  PbeEncryptionAlgorithm Aes128Cbc
  PbeEncryptionAlgorithm Aes192Cbc
  PbeEncryptionAlgorithm Aes256Cbc
  PbeEncryptionAlgorithm TripleDes3KeyPkcs12
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.PbeParameters
Наследуется от: object
Поля:
  PbeEncryptionAlgorithm <EncryptionAlgorithm>k__BackingField
  HashAlgorithmName <HashAlgorithm>k__BackingField
  int <IterationCount>k__BackingField
Свойства:
  PbeEncryptionAlgorithm EncryptionAlgorithm
  HashAlgorithmName HashAlgorithm
  int IterationCount
Методы:
  PbeEncryptionAlgorithm get_EncryptionAlgorithm()
  HashAlgorithmName get_HashAlgorithm()
  int get_IterationCount()
  void .ctor(PbeEncryptionAlgorithm encryptionAlgorithm, HashAlgorithmName hashAlgorithm, int iterationCount)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ContentType
Наследуется от: Enum
Поля:
  int value__
  X509ContentType Unknown
  X509ContentType Cert
  X509ContentType SerializedCert
  X509ContentType Pfx
  X509ContentType Pkcs12
  X509ContentType SerializedStore
  X509ContentType Pkcs7
  X509ContentType Authenticode
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
Наследуется от: Enum
Поля:
  int value__
  X509KeyStorageFlags DefaultKeySet
  X509KeyStorageFlags UserKeySet
  X509KeyStorageFlags MachineKeySet
  X509KeyStorageFlags Exportable
  X509KeyStorageFlags UserProtected
  X509KeyStorageFlags PersistKeySet
  X509KeyStorageFlags EphemeralKeySet
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate
Наследуется от: object
Поля:
  X509CertificateImpl impl
  Byte[] modreq(System.Runtime.CompilerServices.IsVolatile) lazyCertHash
  Byte[] modreq(System.Runtime.CompilerServices.IsVolatile) lazySerialNumber
  String modreq(System.Runtime.CompilerServices.IsVolatile) lazyIssuer
  String modreq(System.Runtime.CompilerServices.IsVolatile) lazySubject
  String modreq(System.Runtime.CompilerServices.IsVolatile) lazyKeyAlgorithm
  Byte[] modreq(System.Runtime.CompilerServices.IsVolatile) lazyKeyAlgorithmParameters
  Byte[] modreq(System.Runtime.CompilerServices.IsVolatile) lazyPublicKey
  DateTime lazyNotBefore
  DateTime lazyNotAfter
  X509KeyStorageFlags KeyStorageFlagsAll
Свойства:
  IntPtr Handle
  string Issuer
  string Subject
  X509CertificateImpl Impl
  bool IsValid
Методы:
  void Reset()
  void .ctor()
  void .ctor(Byte[] data)
  void .ctor(Byte[] rawData, string password)
  void .ctor(Byte[] rawData, SecureString password)
  void .ctor(Byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(Byte[] rawData, SecureString password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(IntPtr handle)
  void .ctor(X509CertificateImpl impl)
  void .ctor(string fileName)
  void .ctor(string fileName, string password)
  void .ctor(string fileName, SecureString password)
  void .ctor(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(string fileName, SecureString password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(X509Certificate cert)
  void .ctor(SerializationInfo info, StreamingContext context)
  X509Certificate CreateFromCertFile(string filename)
  X509Certificate CreateFromSignedFile(string filename)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  IntPtr get_Handle()
  string get_Issuer()
  string get_Subject()
  void Dispose()
  void Dispose(bool disposing)
  bool Equals(object obj)
  bool Equals(X509Certificate other)
  Byte[] Export(X509ContentType contentType)
  Byte[] Export(X509ContentType contentType, string password)
  Byte[] Export(X509ContentType contentType, SecureString password)
  string GetRawCertDataString()
  Byte[] GetCertHash()
  Byte[] GetCertHash(HashAlgorithmName hashAlgorithm)
  bool TryGetCertHash(HashAlgorithmName hashAlgorithm, Span`1<byte> destination, Int32& bytesWritten)
  string GetCertHashString()
  string GetCertHashString(HashAlgorithmName hashAlgorithm)
  Byte[] GetRawCertHash()
  string GetEffectiveDateString()
  string GetExpirationDateString()
  string GetFormat()
  string GetPublicKeyString()
  Byte[] GetRawCertData()
  int GetHashCode()
  string GetKeyAlgorithm()
  Byte[] GetKeyAlgorithmParameters()
  string GetKeyAlgorithmParametersString()
  Byte[] GetPublicKey()
  Byte[] GetSerialNumber()
  string GetSerialNumberString()
  Byte[] GetRawSerialNumber()
  string GetName()
  string GetIssuerName()
  string ToString()
  string ToString(bool fVerbose)
  void Import(Byte[] rawData)
  void Import(Byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
  void Import(Byte[] rawData, SecureString password, X509KeyStorageFlags keyStorageFlags)
  void Import(string fileName)
  void Import(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
  void Import(string fileName, SecureString password, X509KeyStorageFlags keyStorageFlags)
  DateTime GetNotAfter()
  DateTime GetNotBefore()
  string FormatDate(DateTime date)
  void ValidateKeyStorageFlags(X509KeyStorageFlags keyStorageFlags)
  void VerifyContentType(X509ContentType contentType)
  void ImportHandle(X509CertificateImpl impl)
  X509CertificateImpl get_Impl()
  bool get_IsValid()
  void ThrowIfInvalid()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509CertificateImpl
Наследуется от: object
Поля:
Свойства:
  bool IsValid
  IntPtr Handle
  string Issuer
  string Subject
  string LegacyIssuer
  string LegacySubject
  Byte[] RawData
  DateTime NotAfter
  DateTime NotBefore
  Byte[] Thumbprint
  string KeyAlgorithm
  Byte[] KeyAlgorithmParameters
  Byte[] PublicKeyValue
  Byte[] SerialNumber
  bool HasPrivateKey
Методы:
  bool get_IsValid()
  IntPtr get_Handle()
  IntPtr GetNativeAppleCertificate()
  void ThrowIfContextInvalid()
  X509CertificateImpl Clone()
  string get_Issuer()
  string get_Subject()
  string get_LegacyIssuer()
  string get_LegacySubject()
  Byte[] get_RawData()
  DateTime get_NotAfter()
  DateTime get_NotBefore()
  Byte[] get_Thumbprint()
  int GetHashCode()
  bool Equals(X509CertificateImpl other, Boolean& result)
  string get_KeyAlgorithm()
  Byte[] get_KeyAlgorithmParameters()
  Byte[] get_PublicKeyValue()
  Byte[] get_SerialNumber()
  bool get_HasPrivateKey()
  RSA GetRSAPrivateKey()
  DSA GetDSAPrivateKey()
  Byte[] Export(X509ContentType contentType, SafePasswordHandle password)
  X509CertificateImpl CopyWithPrivateKey(RSA privateKey)
  X509Certificate CreateCertificate()
  bool Equals(object obj)
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Helper
Наследуется от: object
Поля:
Свойства:
  ISystemCertificateProvider CertificateProvider
Методы:
  ISystemCertificateProvider get_CertificateProvider()
  X509CertificateImpl InitFromCertificate(X509Certificate cert)
  X509CertificateImpl InitFromCertificate(X509CertificateImpl impl)
  bool IsValid(X509CertificateImpl impl)
  void ThrowIfContextInvalid(X509CertificateImpl impl)
  Exception GetInvalidContextException()
  X509CertificateImpl Import(Byte[] rawData)
  X509CertificateImpl Import(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  Byte[] Export(X509CertificateImpl impl, X509ContentType contentType, SafePasswordHandle password)
  bool Equals(X509CertificateImpl first, X509CertificateImpl second)
  string ToHexString(Byte[] data)
--------------------------------------------------
Класс: System.Security.Principal.GenericIdentity
Наследуется от: ClaimsIdentity
Поля:
  string m_name
  string m_type
Свойства:
  IEnumerable`1<Claim> Claims
  string Name
  string AuthenticationType
  bool IsAuthenticated
Методы:
  void .ctor(string name)
  void .ctor(string name, string type)
  void .ctor()
  void .ctor(GenericIdentity identity)
  ClaimsIdentity Clone()
  IEnumerable`1<Claim> get_Claims()
  string get_Name()
  string get_AuthenticationType()
  bool get_IsAuthenticated()
  void AddNameClaim()
--------------------------------------------------
Класс: System.Security.Principal.TokenAccessLevels
Наследуется от: Enum
Поля:
  int value__
  TokenAccessLevels AssignPrimary
  TokenAccessLevels Duplicate
  TokenAccessLevels Impersonate
  TokenAccessLevels Query
  TokenAccessLevels QuerySource
  TokenAccessLevels AdjustPrivileges
  TokenAccessLevels AdjustGroups
  TokenAccessLevels AdjustDefault
  TokenAccessLevels AdjustSessionId
  TokenAccessLevels Read
  TokenAccessLevels Write
  TokenAccessLevels AllAccess
  TokenAccessLevels MaximumAllowed
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Principal.IIdentity
Поля:
Свойства:
  string Name
  string AuthenticationType
  bool IsAuthenticated
Методы:
  string get_Name()
  string get_AuthenticationType()
  bool get_IsAuthenticated()
--------------------------------------------------
Класс: System.Security.Principal.IPrincipal
Поля:
Свойства:
  IIdentity Identity
Методы:
  IIdentity get_Identity()
  bool IsInRole(string role)
--------------------------------------------------
Класс: System.Security.Principal.PrincipalPolicy
Наследуется от: Enum
Поля:
  int value__
  PrincipalPolicy UnauthenticatedPrincipal
  PrincipalPolicy NoPrincipal
  PrincipalPolicy WindowsPrincipal
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Principal.TokenImpersonationLevel
Наследуется от: Enum
Поля:
  int value__
  TokenImpersonationLevel None
  TokenImpersonationLevel Anonymous
  TokenImpersonationLevel Identification
  TokenImpersonationLevel Impersonation
  TokenImpersonationLevel Delegation
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Principal.GenericPrincipal
Наследуется от: ClaimsPrincipal
Поля:
  IIdentity m_identity
  String[] m_roles
Свойства:
  String[] Roles
  IIdentity Identity
Методы:
  void .ctor(IIdentity identity, String[] roles)
  String[] get_Roles()
  IIdentity get_Identity()
  bool IsInRole(string role)
--------------------------------------------------
Класс: System.Security.Principal.IdentityNotMappedException
Наследуется от: SystemException
Поля:
  IdentityReferenceCollection _coll
Свойства:
  IdentityReferenceCollection UnmappedIdentities
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  IdentityReferenceCollection get_UnmappedIdentities()
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Security.Principal.IdentityReference
Наследуется от: object
Поля:
Свойства:
  string Value
Методы:
  void .ctor()
  string get_Value()
  bool Equals(object o)
  int GetHashCode()
  bool IsValidTargetType(Type targetType)
  string ToString()
  IdentityReference Translate(Type targetType)
  bool op_Equality(IdentityReference left, IdentityReference right)
  bool op_Inequality(IdentityReference left, IdentityReference right)
--------------------------------------------------
Класс: System.Security.Principal.IdentityReferenceCollection
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  int Count
  bool IsReadOnly
  IdentityReference Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  int get_Count()
  bool get_IsReadOnly()
  IdentityReference get_Item(int index)
  void set_Item(int index, IdentityReference value)
  void Add(IdentityReference identity)
  void Clear()
  bool Contains(IdentityReference identity)
  void CopyTo(IdentityReference[] array, int offset)
  IEnumerator`1<IdentityReference> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Remove(IdentityReference identity)
  IdentityReferenceCollection Translate(Type targetType)
  IdentityReferenceCollection Translate(Type targetType, bool forceSuccess)
--------------------------------------------------
Класс: System.Security.Principal.NTAccount
Наследуется от: IdentityReference
Поля:
  string _value
Свойства:
  string Value
Методы:
  void .ctor(string name)
  void .ctor(string domainName, string accountName)
  string get_Value()
  bool Equals(object o)
  int GetHashCode()
  bool IsValidTargetType(Type targetType)
  string ToString()
  IdentityReference Translate(Type targetType)
  bool op_Equality(NTAccount left, NTAccount right)
  bool op_Inequality(NTAccount left, NTAccount right)
--------------------------------------------------
Класс: System.Security.Principal.SecurityIdentifier
Наследуется от: IdentityReference
Поля:
  Byte[] buffer
  int MaxBinaryLength
  int MinBinaryLength
Свойства:
  SecurityIdentifier AccountDomainSid
  int BinaryLength
  string Value
Методы:
  void .ctor(string sddlForm)
  void .ctor(Byte[] binaryForm, int offset)
  void .ctor(IntPtr binaryForm)
  void CreateFromBinaryForm(IntPtr binaryForm, int length)
  void .ctor(WellKnownSidType sidType, SecurityIdentifier domainSid)
  SecurityIdentifier get_AccountDomainSid()
  int get_BinaryLength()
  string get_Value()
  ulong GetSidAuthority()
  byte GetSidSubAuthorityCount()
  UInt32 GetSidSubAuthority(byte index)
  int CompareTo(SecurityIdentifier sid)
  bool Equals(object o)
  bool Equals(SecurityIdentifier sid)
  void GetBinaryForm(Byte[] binaryForm, int offset)
  int GetHashCode()
  bool IsAccountSid()
  bool IsEqualDomainSid(SecurityIdentifier sid)
  bool IsValidTargetType(Type targetType)
  bool IsWellKnown(WellKnownSidType type)
  string ToString()
  IdentityReference Translate(Type targetType)
  bool op_Equality(SecurityIdentifier left, SecurityIdentifier right)
  bool op_Inequality(SecurityIdentifier left, SecurityIdentifier right)
  string GetSddlForm()
  SecurityIdentifier ParseSddlForm(string sddlForm, Int32& pos)
  Byte[] ParseSddlForm(string sddlForm)
  bool TryParseAuthority(string s, UInt64& result)
  bool TryParseSubAuthority(string s, UInt32& result)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Principal.WellKnownAccount
Наследуется от: object
Поля:
  WellKnownSidType <WellKnownValue>k__BackingField
  bool <IsAbsolute>k__BackingField
  string <Sid>k__BackingField
  string <Rid>k__BackingField
  string <Name>k__BackingField
  string <SddlForm>k__BackingField
  WellKnownAccount[] accounts
Свойства:
  WellKnownSidType WellKnownValue
  bool IsAbsolute
  string Sid
  string Rid
  string Name
  string SddlForm
Методы:
  WellKnownSidType get_WellKnownValue()
  void set_WellKnownValue(WellKnownSidType value)
  bool get_IsAbsolute()
  void set_IsAbsolute(bool value)
  string get_Sid()
  void set_Sid(string value)
  string get_Rid()
  void set_Rid(string value)
  string get_Name()
  void set_Name(string value)
  string get_SddlForm()
  void set_SddlForm(string value)
  WellKnownAccount LookupByType(WellKnownSidType sidType)
  WellKnownAccount LookupBySid(string s)
  WellKnownAccount LookupByName(string s)
  WellKnownAccount LookupBySddlForm(string s)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Principal.WellKnownSidType
Наследуется от: Enum
Поля:
  int value__
  WellKnownSidType NullSid
  WellKnownSidType WorldSid
  WellKnownSidType LocalSid
  WellKnownSidType CreatorOwnerSid
  WellKnownSidType CreatorGroupSid
  WellKnownSidType CreatorOwnerServerSid
  WellKnownSidType CreatorGroupServerSid
  WellKnownSidType NTAuthoritySid
  WellKnownSidType DialupSid
  WellKnownSidType NetworkSid
  WellKnownSidType BatchSid
  WellKnownSidType InteractiveSid
  WellKnownSidType ServiceSid
  WellKnownSidType AnonymousSid
  WellKnownSidType ProxySid
  WellKnownSidType EnterpriseControllersSid
  WellKnownSidType SelfSid
  WellKnownSidType AuthenticatedUserSid
  WellKnownSidType RestrictedCodeSid
  WellKnownSidType TerminalServerSid
  WellKnownSidType RemoteLogonIdSid
  WellKnownSidType LogonIdsSid
  WellKnownSidType LocalSystemSid
  WellKnownSidType LocalServiceSid
  WellKnownSidType NetworkServiceSid
  WellKnownSidType BuiltinDomainSid
  WellKnownSidType BuiltinAdministratorsSid
  WellKnownSidType BuiltinUsersSid
  WellKnownSidType BuiltinGuestsSid
  WellKnownSidType BuiltinPowerUsersSid
  WellKnownSidType BuiltinAccountOperatorsSid
  WellKnownSidType BuiltinSystemOperatorsSid
  WellKnownSidType BuiltinPrintOperatorsSid
  WellKnownSidType BuiltinBackupOperatorsSid
  WellKnownSidType BuiltinReplicatorSid
  WellKnownSidType BuiltinPreWindows2000CompatibleAccessSid
  WellKnownSidType BuiltinRemoteDesktopUsersSid
  WellKnownSidType BuiltinNetworkConfigurationOperatorsSid
  WellKnownSidType AccountAdministratorSid
  WellKnownSidType AccountGuestSid
  WellKnownSidType AccountKrbtgtSid
  WellKnownSidType AccountDomainAdminsSid
  WellKnownSidType AccountDomainUsersSid
  WellKnownSidType AccountDomainGuestsSid
  WellKnownSidType AccountComputersSid
  WellKnownSidType AccountControllersSid
  WellKnownSidType AccountCertAdminsSid
  WellKnownSidType AccountSchemaAdminsSid
  WellKnownSidType AccountEnterpriseAdminsSid
  WellKnownSidType AccountPolicyAdminsSid
  WellKnownSidType AccountRasAndIasServersSid
  WellKnownSidType NtlmAuthenticationSid
  WellKnownSidType DigestAuthenticationSid
  WellKnownSidType SChannelAuthenticationSid
  WellKnownSidType ThisOrganizationSid
  WellKnownSidType OtherOrganizationSid
  WellKnownSidType BuiltinIncomingForestTrustBuildersSid
  WellKnownSidType BuiltinPerformanceMonitoringUsersSid
  WellKnownSidType BuiltinPerformanceLoggingUsersSid
  WellKnownSidType BuiltinAuthorizationAccessSid
  WellKnownSidType WinBuiltinTerminalServerLicenseServersSid
  WellKnownSidType MaxDefined
  WellKnownSidType WinBuiltinDCOMUsersSid
  WellKnownSidType WinBuiltinIUsersSid
  WellKnownSidType WinIUserSid
  WellKnownSidType WinBuiltinCryptoOperatorsSid
  WellKnownSidType WinUntrustedLabelSid
  WellKnownSidType WinLowLabelSid
  WellKnownSidType WinMediumLabelSid
  WellKnownSidType WinHighLabelSid
  WellKnownSidType WinSystemLabelSid
  WellKnownSidType WinWriteRestrictedCodeSid
  WellKnownSidType WinCreatorOwnerRightsSid
  WellKnownSidType WinCacheablePrincipalsGroupSid
  WellKnownSidType WinNonCacheablePrincipalsGroupSid
  WellKnownSidType WinEnterpriseReadonlyControllersSid
  WellKnownSidType WinAccountReadonlyControllersSid
  WellKnownSidType WinBuiltinEventLogReadersGroup
  WellKnownSidType WinNewEnterpriseReadonlyControllersSid
  WellKnownSidType WinBuiltinCertSvcDComAccessGroup
  WellKnownSidType WinMediumPlusLabelSid
  WellKnownSidType WinLocalLogonSid
  WellKnownSidType WinConsoleLogonSid
  WellKnownSidType WinThisOrganizationCertificateSid
  WellKnownSidType WinApplicationPackageAuthoritySid
  WellKnownSidType WinBuiltinAnyPackageSid
  WellKnownSidType WinCapabilityInternetClientSid
  WellKnownSidType WinCapabilityInternetClientServerSid
  WellKnownSidType WinCapabilityPrivateNetworkClientServerSid
  WellKnownSidType WinCapabilityPicturesLibrarySid
  WellKnownSidType WinCapabilityVideosLibrarySid
  WellKnownSidType WinCapabilityMusicLibrarySid
  WellKnownSidType WinCapabilityDocumentsLibrarySid
  WellKnownSidType WinCapabilitySharedUserCertificatesSid
  WellKnownSidType WinCapabilityEnterpriseAuthenticationSid
  WellKnownSidType WinCapabilityRemovableStorageSid
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Principal.WindowsAccountType
Наследуется от: Enum
Поля:
  int value__
  WindowsAccountType Normal
  WindowsAccountType Guest
  WindowsAccountType System
  WindowsAccountType Anonymous
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Principal.WindowsBuiltInRole
Наследуется от: Enum
Поля:
  int value__
  WindowsBuiltInRole Administrator
  WindowsBuiltInRole User
  WindowsBuiltInRole Guest
  WindowsBuiltInRole PowerUser
  WindowsBuiltInRole AccountOperator
  WindowsBuiltInRole SystemOperator
  WindowsBuiltInRole PrintOperator
  WindowsBuiltInRole BackupOperator
  WindowsBuiltInRole Replicator
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Principal.WindowsIdentity
Наследуется от: ClaimsIdentity
Поля:
  IntPtr _token
  string _type
  WindowsAccountType _account
  bool _authenticated
  string _name
  SerializationInfo _info
  IntPtr invalidWindows
  string DefaultIssuer
Свойства:
  string AuthenticationType
  bool IsAnonymous
  bool IsAuthenticated
  bool IsGuest
  bool IsSystem
  string Name
  IntPtr Token
  IdentityReferenceCollection Groups
  TokenImpersonationLevel ImpersonationLevel
  SecurityIdentifier Owner
  SecurityIdentifier User
  SafeAccessTokenHandle AccessToken
  IEnumerable`1<Claim> DeviceClaims
  IEnumerable`1<Claim> UserClaims
Методы:
  void .ctor(IntPtr userToken)
  void .ctor(IntPtr userToken, string type)
  void .ctor(IntPtr userToken, string type, WindowsAccountType acctType)
  void .ctor(IntPtr userToken, string type, WindowsAccountType acctType, bool isAuthenticated)
  void .ctor(string sUserPrincipalName)
  void .ctor(string sUserPrincipalName, string type)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(ClaimsIdentity claimsIdentity, IntPtr userToken)
  void Dispose()
  void Dispose(bool disposing)
  WindowsIdentity GetAnonymous()
  WindowsIdentity GetCurrent()
  WindowsIdentity GetCurrent(bool ifImpersonating)
  WindowsIdentity GetCurrent(TokenAccessLevels desiredAccess)
  WindowsImpersonationContext Impersonate()
  WindowsImpersonationContext Impersonate(IntPtr userToken)
  void RunImpersonated(SafeAccessTokenHandle safeAccessTokenHandle, Action action)
  T RunImpersonated(SafeAccessTokenHandle safeAccessTokenHandle, Func`1<T> func)
  string get_AuthenticationType()
  bool get_IsAnonymous()
  bool get_IsAuthenticated()
  bool get_IsGuest()
  bool get_IsSystem()
  string get_Name()
  IntPtr get_Token()
  IdentityReferenceCollection get_Groups()
  TokenImpersonationLevel get_ImpersonationLevel()
  SecurityIdentifier get_Owner()
  SecurityIdentifier get_User()
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  ClaimsIdentity CloneAsBase()
  IntPtr GetTokenInternal()
  void SetToken(IntPtr token)
  SafeAccessTokenHandle get_AccessToken()
  String[] _GetRoles(IntPtr token)
  IntPtr GetCurrentToken()
  string GetTokenName(IntPtr token)
  IntPtr GetUserToken(string username)
  void .cctor()
  void .ctor(WindowsIdentity identity)
  IEnumerable`1<Claim> get_DeviceClaims()
  IEnumerable`1<Claim> get_UserClaims()
--------------------------------------------------
Класс: System.Security.Principal.WindowsImpersonationContext
Наследуется от: object
Поля:
  IntPtr _token
  bool undo
Свойства:
Методы:
  void .ctor(IntPtr token)
  void Dispose()
  void Dispose(bool disposing)
  void Undo()
  bool CloseToken(IntPtr token)
  IntPtr DuplicateToken(IntPtr token)
  bool SetCurrentToken(IntPtr token)
  bool RevertToSelf()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Principal.WindowsPrincipal
Наследуется от: ClaimsPrincipal
Поля:
  WindowsIdentity _identity
  String[] m_roles
Свойства:
  IIdentity Identity
  IntPtr Token
  IEnumerable`1<Claim> DeviceClaims
  IEnumerable`1<Claim> UserClaims
Методы:
  void .ctor(WindowsIdentity ntIdentity)
  IIdentity get_Identity()
  bool IsInRole(int rid)
  bool IsInRole(string role)
  bool IsInRole(WindowsBuiltInRole role)
  bool IsInRole(SecurityIdentifier sid)
  IntPtr get_Token()
  bool IsMemberOfGroupId(IntPtr user, IntPtr group)
  bool IsMemberOfGroupName(IntPtr user, IntPtr group)
  IEnumerable`1<Claim> get_DeviceClaims()
  IEnumerable`1<Claim> get_UserClaims()
--------------------------------------------------
Класс: System.Security.Claims.ClaimTypes
Наследуется от: object
Поля:
  string ClaimTypeNamespace
  string AuthenticationInstant
  string AuthenticationMethod
  string CookiePath
  string DenyOnlyPrimarySid
  string DenyOnlyPrimaryGroupSid
  string DenyOnlyWindowsDeviceGroup
  string Dsa
  string Expiration
  string Expired
  string GroupSid
  string IsPersistent
  string PrimaryGroupSid
  string PrimarySid
  string Role
  string SerialNumber
  string UserData
  string Version
  string WindowsAccountName
  string WindowsDeviceClaim
  string WindowsDeviceGroup
  string WindowsUserClaim
  string WindowsFqbnVersion
  string WindowsSubAuthority
  string ClaimType2005Namespace
  string Anonymous
  string Authentication
  string AuthorizationDecision
  string Country
  string DateOfBirth
  string Dns
  string DenyOnlySid
  string Email
  string Gender
  string GivenName
  string Hash
  string HomePhone
  string Locality
  string MobilePhone
  string Name
  string NameIdentifier
  string OtherPhone
  string PostalCode
  string Rsa
  string Sid
  string Spn
  string StateOrProvince
  string StreetAddress
  string Surname
  string System
  string Thumbprint
  string Upn
  string Uri
  string Webpage
  string X500DistinguishedName
  string ClaimType2009Namespace
  string Actor
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Claims.Claim
Наследуется от: object
Поля:
  string m_issuer
  string m_originalIssuer
  string m_type
  string m_value
  string m_valueType
  Byte[] m_userSerializationData
  Dictionary`2<string, string> m_properties
  object m_propertyLock
  ClaimsIdentity m_subject
Свойства:
  Byte[] CustomSerializationData
  string Issuer
  string OriginalIssuer
  IDictionary`2<string, string> Properties
  ClaimsIdentity Subject
  string Type
  string Value
  string ValueType
Методы:
  void .ctor(BinaryReader reader)
  void .ctor(BinaryReader reader, ClaimsIdentity subject)
  void .ctor(string type, string value)
  void .ctor(string type, string value, string valueType)
  void .ctor(string type, string value, string valueType, string issuer)
  void .ctor(string type, string value, string valueType, string issuer, string originalIssuer)
  void .ctor(string type, string value, string valueType, string issuer, string originalIssuer, ClaimsIdentity subject)
  void .ctor(string type, string value, string valueType, string issuer, string originalIssuer, ClaimsIdentity subject, string propertyKey, string propertyValue)
  void .ctor(Claim other)
  void .ctor(Claim other, ClaimsIdentity subject)
  Byte[] get_CustomSerializationData()
  string get_Issuer()
  void OnDeserializedMethod(StreamingContext context)
  string get_OriginalIssuer()
  IDictionary`2<string, string> get_Properties()
  ClaimsIdentity get_Subject()
  void set_Subject(ClaimsIdentity value)
  string get_Type()
  string get_Value()
  string get_ValueType()
  Claim Clone()
  Claim Clone(ClaimsIdentity identity)
  void Initialize(BinaryReader reader, ClaimsIdentity subject)
  void WriteTo(BinaryWriter writer)
  void WriteTo(BinaryWriter writer, Byte[] userData)
  string ToString()
--------------------------------------------------
Класс: System.Security.Claims.ClaimValueTypes
Наследуется от: object
Поля:
  string XmlSchemaNamespace
  string Base64Binary
  string Base64Octet
  string Boolean
  string Date
  string DateTime
  string Double
  string Fqbn
  string HexBinary
  string Integer
  string Integer32
  string Integer64
  string Sid
  string String
  string Time
  string UInteger32
  string UInteger64
  string SoapSchemaNamespace
  string DnsName
  string Email
  string Rsa
  string UpnName
  string XmlSignatureConstantsNamespace
  string DsaKeyValue
  string KeyInfo
  string RsaKeyValue
  string XQueryOperatorsNameSpace
  string DaytimeDuration
  string YearMonthDuration
  string Xacml10Namespace
  string Rfc822Name
  string X500Name
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Claims.ClaimsIdentity
Наследуется от: object
Поля:
  Byte[] m_userSerializationData
  string PreFix
  string ActorKey
  string AuthenticationTypeKey
  string BootstrapContextKey
  string ClaimsKey
  string LabelKey
  string NameClaimTypeKey
  string RoleClaimTypeKey
  string VersionKey
  string DefaultIssuer
  string DefaultNameClaimType
  string DefaultRoleClaimType
  List`1<Claim> m_instanceClaims
  Collection`1<IEnumerable`1<Claim>> m_externalClaims
  string m_nameType
  string m_roleType
  string m_version
  ClaimsIdentity m_actor
  string m_authenticationType
  object m_bootstrapContext
  string m_label
  string m_serializedNameType
  string m_serializedRoleType
  string m_serializedClaims
Свойства:
  string AuthenticationType
  bool IsAuthenticated
  ClaimsIdentity Actor
  object BootstrapContext
  IEnumerable`1<Claim> Claims
  Byte[] CustomSerializationData
  Collection`1<IEnumerable`1<Claim>> ExternalClaims
  string Label
  string Name
  string NameClaimType
  string RoleClaimType
Методы:
  void .ctor()
  void .ctor(IIdentity identity)
  void .ctor(IEnumerable`1<Claim> claims)
  void .ctor(string authenticationType)
  void .ctor(IEnumerable`1<Claim> claims, string authenticationType)
  void .ctor(IIdentity identity, IEnumerable`1<Claim> claims)
  void .ctor(string authenticationType, string nameType, string roleType)
  void .ctor(IEnumerable`1<Claim> claims, string authenticationType, string nameType, string roleType)
  void .ctor(IIdentity identity, IEnumerable`1<Claim> claims, string authenticationType, string nameType, string roleType)
  void .ctor(IIdentity identity, IEnumerable`1<Claim> claims, string authenticationType, string nameType, string roleType, bool checkAuthType)
  void .ctor(BinaryReader reader)
  void .ctor(ClaimsIdentity other)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(SerializationInfo info)
  string get_AuthenticationType()
  bool get_IsAuthenticated()
  ClaimsIdentity get_Actor()
  void set_Actor(ClaimsIdentity value)
  object get_BootstrapContext()
  void set_BootstrapContext(object value)
  IEnumerable`1<Claim> get_Claims()
  Byte[] get_CustomSerializationData()
  Collection`1<IEnumerable`1<Claim>> get_ExternalClaims()
  string get_Label()
  void set_Label(string value)
  string get_Name()
  string get_NameClaimType()
  string get_RoleClaimType()
  ClaimsIdentity Clone()
  void AddClaim(Claim claim)
  void AddClaims(IEnumerable`1<Claim> claims)
  bool TryRemoveClaim(Claim claim)
  void RemoveClaim(Claim claim)
  void SafeAddClaims(IEnumerable`1<Claim> claims)
  void SafeAddClaim(Claim claim)
  IEnumerable`1<Claim> FindAll(Predicate`1<Claim> match)
  IEnumerable`1<Claim> FindAll(string type)
  bool HasClaim(Predicate`1<Claim> match)
  bool HasClaim(string type, string value)
  Claim FindFirst(Predicate`1<Claim> match)
  Claim FindFirst(string type)
  void OnSerializingMethod(StreamingContext context)
  void OnDeserializedMethod(StreamingContext context)
  void OnDeserializingMethod(StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void DeserializeClaims(string serializedClaims)
  string SerializeClaims()
  bool IsCircular(ClaimsIdentity subject)
  void Initialize(BinaryReader reader)
  Claim CreateClaim(BinaryReader reader)
  void WriteTo(BinaryWriter writer)
  void WriteTo(BinaryWriter writer, Byte[] userData)
  void Deserialize(SerializationInfo info, StreamingContext context, bool useContext)
--------------------------------------------------
Класс: System.Security.Claims.ClaimsPrincipal
Наследуется от: object
Поля:
  Byte[] m_userSerializationData
  string PreFix
  string IdentitiesKey
  string VersionKey
  string m_version
  string m_serializedClaimsIdentities
  List`1<ClaimsIdentity> m_identities
  Func`2<IEnumerable`1<ClaimsIdentity>, ClaimsIdentity> s_identitySelector
  Func`1<ClaimsPrincipal> s_principalSelector
Свойства:
  Func`2<IEnumerable`1<ClaimsIdentity>, ClaimsIdentity> PrimaryIdentitySelector
  Func`1<ClaimsPrincipal> ClaimsPrincipalSelector
  Byte[] CustomSerializationData
  IEnumerable`1<Claim> Claims
  ClaimsPrincipal Current
  IEnumerable`1<ClaimsIdentity> Identities
  IIdentity Identity
Методы:
  ClaimsIdentity SelectPrimaryIdentity(IEnumerable`1<ClaimsIdentity> identities)
  ClaimsPrincipal SelectClaimsPrincipal()
  Func`2<IEnumerable`1<ClaimsIdentity>, ClaimsIdentity> get_PrimaryIdentitySelector()
  void set_PrimaryIdentitySelector(Func`2<IEnumerable`1<ClaimsIdentity>, ClaimsIdentity> value)
  Func`1<ClaimsPrincipal> get_ClaimsPrincipalSelector()
  void set_ClaimsPrincipalSelector(Func`1<ClaimsPrincipal> value)
  void .ctor()
  void .ctor(IEnumerable`1<ClaimsIdentity> identities)
  void .ctor(IIdentity identity)
  void .ctor(IPrincipal principal)
  void .ctor(BinaryReader reader)
  void .ctor(SerializationInfo info, StreamingContext context)
  Byte[] get_CustomSerializationData()
  ClaimsPrincipal Clone()
  ClaimsIdentity CreateClaimsIdentity(BinaryReader reader)
  void OnSerializingMethod(StreamingContext context)
  void OnDeserializedMethod(StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void Deserialize(SerializationInfo info, StreamingContext context)
  void DeserializeIdentities(string identities)
  string SerializeIdentities()
  void AddIdentity(ClaimsIdentity identity)
  void AddIdentities(IEnumerable`1<ClaimsIdentity> identities)
  IEnumerable`1<Claim> get_Claims()
  ClaimsPrincipal get_Current()
  IEnumerable`1<Claim> FindAll(Predicate`1<Claim> match)
  IEnumerable`1<Claim> FindAll(string type)
  Claim FindFirst(Predicate`1<Claim> match)
  Claim FindFirst(string type)
  bool HasClaim(Predicate`1<Claim> match)
  bool HasClaim(string type, string value)
  IEnumerable`1<ClaimsIdentity> get_Identities()
  IIdentity get_Identity()
  bool IsInRole(string role)
  void Initialize(BinaryReader reader)
  void WriteTo(BinaryWriter writer)
  void WriteTo(BinaryWriter writer, Byte[] userData)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Claims.RoleClaimProvider
Наследуется от: object
Поля:
  string m_issuer
  String[] m_roles
  ClaimsIdentity m_subject
Свойства:
  IEnumerable`1<Claim> Claims
Методы:
  void .ctor(string issuer, String[] roles, ClaimsIdentity subject)
  IEnumerable`1<Claim> get_Claims()
--------------------------------------------------
Класс: System.Security.AccessControl.RegistrySecurity
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  Exception _HandleErrorCodeCore(int errorCode, string name, SafeHandle handle, object context)
  void .ctor()
  void .ctor(SafeRegistryHandle hKey, string name, AccessControlSections includeSections)
  Exception _HandleErrorCode(int errorCode, string name, SafeHandle handle, object context)
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  AccessControlSections GetAccessControlSectionsFromChanges()
  void Persist(SafeRegistryHandle hKey, string keyName)
  void AddAccessRule(RegistryAccessRule rule)
  void SetAccessRule(RegistryAccessRule rule)
  void ResetAccessRule(RegistryAccessRule rule)
  bool RemoveAccessRule(RegistryAccessRule rule)
  void RemoveAccessRuleAll(RegistryAccessRule rule)
  void RemoveAccessRuleSpecific(RegistryAccessRule rule)
  void AddAuditRule(RegistryAuditRule rule)
  void SetAuditRule(RegistryAuditRule rule)
  bool RemoveAuditRule(RegistryAuditRule rule)
  void RemoveAuditRuleAll(RegistryAuditRule rule)
  void RemoveAuditRuleSpecific(RegistryAuditRule rule)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
--------------------------------------------------
Класс: System.Security.AccessControl.RegistryAccessRule
Наследуется от: AccessRule
Поля:
Свойства:
  RegistryRights RegistryRights
Методы:
  void .ctor(IdentityReference identity, RegistryRights registryRights, AccessControlType type)
  void .ctor(string identity, RegistryRights registryRights, AccessControlType type)
  void .ctor(IdentityReference identity, RegistryRights registryRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void .ctor(string identity, RegistryRights registryRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  RegistryRights get_RegistryRights()
--------------------------------------------------
Класс: System.Security.AccessControl.RegistryAuditRule
Наследуется от: AuditRule
Поля:
Свойства:
  RegistryRights RegistryRights
Методы:
  void .ctor(IdentityReference identity, RegistryRights registryRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void .ctor(string identity, RegistryRights registryRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  RegistryRights get_RegistryRights()
--------------------------------------------------
Класс: System.Security.AccessControl.PrivilegeNotHeldException
Наследуется от: UnauthorizedAccessException
Поля:
  string _privilegeName
Свойства:
  string PrivilegeName
Методы:
  void .ctor()
  void .ctor(string privilege)
  void .ctor(string privilege, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_PrivilegeName()
--------------------------------------------------
Класс: System.Security.AccessControl.AccessControlActions
Наследуется от: Enum
Поля:
  int value__
  AccessControlActions None
  AccessControlActions View
  AccessControlActions Change
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AccessControlModification
Наследуется от: Enum
Поля:
  int value__
  AccessControlModification Add
  AccessControlModification Set
  AccessControlModification Reset
  AccessControlModification Remove
  AccessControlModification RemoveAll
  AccessControlModification RemoveSpecific
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AccessControlSections
Наследуется от: Enum
Поля:
  int value__
  AccessControlSections None
  AccessControlSections Audit
  AccessControlSections Access
  AccessControlSections Owner
  AccessControlSections Group
  AccessControlSections All
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AccessControlType
Наследуется от: Enum
Поля:
  int value__
  AccessControlType Allow
  AccessControlType Deny
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AccessRule
Наследуется от: AuthorizationRule
Поля:
  AccessControlType type
Свойства:
  AccessControlType AccessControlType
Методы:
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  AccessControlType get_AccessControlType()
--------------------------------------------------
Класс: System.Security.AccessControl.AccessRule`1
Наследуется от: AccessRule
Поля:
Свойства:
  T Rights
Методы:
  void .ctor(string identity, T rights, AccessControlType type)
  void .ctor(IdentityReference identity, T rights, AccessControlType type)
  void .ctor(string identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void .ctor(IdentityReference identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void .ctor(IdentityReference identity, int rights, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  T get_Rights()
--------------------------------------------------
Класс: System.Security.AccessControl.AceEnumerator
Наследуется от: object
Поля:
  GenericAcl owner
  int current
Свойства:
  GenericAce Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(GenericAcl owner)
  GenericAce get_Current()
  object System.Collections.IEnumerator.get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.AccessControl.AceFlags
Наследуется от: Enum
Поля:
  byte value__
  AceFlags None
  AceFlags ObjectInherit
  AceFlags ContainerInherit
  AceFlags NoPropagateInherit
  AceFlags InheritOnly
  AceFlags InheritanceFlags
  AceFlags Inherited
  AceFlags SuccessfulAccess
  AceFlags FailedAccess
  AceFlags AuditFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AceQualifier
Наследуется от: Enum
Поля:
  int value__
  AceQualifier AccessAllowed
  AceQualifier AccessDenied
  AceQualifier SystemAudit
  AceQualifier SystemAlarm
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AceType
Наследуется от: Enum
Поля:
  byte value__
  AceType AccessAllowed
  AceType AccessDenied
  AceType SystemAudit
  AceType SystemAlarm
  AceType AccessAllowedCompound
  AceType AccessAllowedObject
  AceType AccessDeniedObject
  AceType SystemAuditObject
  AceType SystemAlarmObject
  AceType AccessAllowedCallback
  AceType AccessDeniedCallback
  AceType AccessAllowedCallbackObject
  AceType AccessDeniedCallbackObject
  AceType SystemAuditCallback
  AceType SystemAlarmCallback
  AceType SystemAuditCallbackObject
  AceType SystemAlarmCallbackObject
  AceType MaxDefinedAceType
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AuditFlags
Наследуется от: Enum
Поля:
  int value__
  AuditFlags None
  AuditFlags Success
  AuditFlags Failure
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.AuditRule
Наследуется от: AuthorizationRule
Поля:
  AuditFlags auditFlags
Свойства:
  AuditFlags AuditFlags
Методы:
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags)
  AuditFlags get_AuditFlags()
--------------------------------------------------
Класс: System.Security.AccessControl.AuditRule`1
Наследуется от: AuditRule
Поля:
Свойства:
  T Rights
Методы:
  void .ctor(string identity, T rights, AuditFlags flags)
  void .ctor(IdentityReference identity, T rights, AuditFlags flags)
  void .ctor(string identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void .ctor(IdentityReference identity, T rights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void .ctor(IdentityReference identity, int rights, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  T get_Rights()
--------------------------------------------------
Класс: System.Security.AccessControl.AuthorizationRule
Наследуется от: object
Поля:
  IdentityReference identity
  int accessMask
  bool isInherited
  InheritanceFlags inheritanceFlags
  PropagationFlags propagationFlags
Свойства:
  IdentityReference IdentityReference
  InheritanceFlags InheritanceFlags
  bool IsInherited
  PropagationFlags PropagationFlags
  int AccessMask
Методы:
  void .ctor()
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  IdentityReference get_IdentityReference()
  InheritanceFlags get_InheritanceFlags()
  bool get_IsInherited()
  PropagationFlags get_PropagationFlags()
  int get_AccessMask()
--------------------------------------------------
Класс: System.Security.AccessControl.AuthorizationRuleCollection
Наследуется от: ReadOnlyCollectionBase
Поля:
Свойства:
  AuthorizationRule Item
Методы:
  void .ctor()
  void .ctor(AuthorizationRule[] rules)
  void AddRule(AuthorizationRule rule)
  AuthorizationRule get_Item(int index)
  void CopyTo(AuthorizationRule[] rules, int index)
--------------------------------------------------
Класс: System.Security.AccessControl.CommonAce
Наследуется от: QualifiedAce
Поля:
Свойства:
  int BinaryLength
Методы:
  void .ctor(AceFlags flags, AceQualifier qualifier, int accessMask, SecurityIdentifier sid, bool isCallback, Byte[] opaque)
  void .ctor(AceType type, AceFlags flags, int accessMask, SecurityIdentifier sid, Byte[] opaque)
  void .ctor(Byte[] binaryForm, int offset)
  int get_BinaryLength()
  void GetBinaryForm(Byte[] binaryForm, int offset)
  int MaxOpaqueLength(bool isCallback)
  string GetSddlForm()
  AceType ConvertType(AceQualifier qualifier, bool isCallback)
--------------------------------------------------
Класс: System.Security.AccessControl.CommonAcl
Наследуется от: GenericAcl
Поля:
  int default_capacity
  bool is_aefa
  bool is_canonical
  bool is_container
  bool is_ds
  RawAcl raw_acl
Свойства:
  int BinaryLength
  int Count
  bool IsCanonical
  bool IsContainer
  bool IsDS
  bool IsAefa
  byte Revision
  GenericAce Item
Методы:
  void .ctor(bool isContainer, bool isDS, RawAcl rawAcl)
  void .ctor(bool isContainer, bool isDS, byte revision, int capacity)
  void .ctor(bool isContainer, bool isDS, int capacity)
  void Init(bool isContainer, bool isDS, RawAcl rawAcl)
  int get_BinaryLength()
  int get_Count()
  bool get_IsCanonical()
  bool get_IsContainer()
  bool get_IsDS()
  bool get_IsAefa()
  void set_IsAefa(bool value)
  byte get_Revision()
  GenericAce get_Item(int index)
  void set_Item(int index, GenericAce value)
  void GetBinaryForm(Byte[] binaryForm, int offset)
  void Purge(SecurityIdentifier sid)
  void RemoveInheritedAces()
  void RequireCanonicity()
  void CanonicalizeAndClearAefa()
  bool IsAceMeaningless(GenericAce ace)
  bool TestCanonicity()
  int GetCanonicalExplicitDenyAceCount()
  int GetCanonicalExplicitAceCount()
  void MergeExplicitAces()
  GenericAce MergeExplicitAcePair(GenericAce ace1, GenericAce ace2)
  void GetObjectAceTypeGuids(ObjectAce ace, Guid& type, Guid& inheritedType)
  void ApplyCanonicalSortToExplicitAces()
  void ApplyCanonicalSortToExplicitAces(int start, int count)
  string GetSddlForm(ControlFlags sdFlags, bool isDacl)
  void RemoveAces(RemoveAcesCallback`1<T> callback)
  void AddAce(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags)
  void AddAce(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  QualifiedAce AddAceGetQualifiedAce(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  QualifiedAce AddAceGetQualifiedAce(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags)
  void AddAce(QualifiedAce newAce)
  GenericAce CopyAce(GenericAce ace)
  int GetAceInsertPosition(AceQualifier aceQualifier)
  AceFlags GetAceFlags(InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags)
  void RemoveAceSpecific(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags)
  void RemoveAceSpecific(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void SetAce(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags)
  void SetAce(AceQualifier aceQualifier, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void SetAce(QualifiedAce newAce)
  void .ctor()
--------------------------------------------------
Класс: System.Security.AccessControl.CommonObjectSecurity
Наследуется от: ObjectSecurity
Поля:
Свойства:
Методы:
  void .ctor(bool isContainer)
  void .ctor(CommonSecurityDescriptor securityDescriptor)
  AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, Type targetType)
  AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, Type targetType)
  void AddAccessRule(AccessRule rule)
  bool RemoveAccessRule(AccessRule rule)
  void RemoveAccessRuleAll(AccessRule rule)
  void RemoveAccessRuleSpecific(AccessRule rule)
  void ResetAccessRule(AccessRule rule)
  void SetAccessRule(AccessRule rule)
  bool ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean& modified)
  void AddAuditRule(AuditRule rule)
  bool RemoveAuditRule(AuditRule rule)
  void RemoveAuditRuleAll(AuditRule rule)
  void RemoveAuditRuleSpecific(AuditRule rule)
  void SetAuditRule(AuditRule rule)
  bool ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean& modified)
--------------------------------------------------
Класс: System.Security.AccessControl.CommonSecurityDescriptor
Наследуется от: GenericSecurityDescriptor
Поля:
  bool is_container
  bool is_ds
  ControlFlags flags
  SecurityIdentifier owner
  SecurityIdentifier group
  SystemAcl system_acl
  DiscretionaryAcl discretionary_acl
Свойства:
  ControlFlags ControlFlags
  DiscretionaryAcl DiscretionaryAcl
  GenericAcl InternalDacl
  SecurityIdentifier Group
  bool IsContainer
  bool IsDiscretionaryAclCanonical
  bool IsDS
  bool IsSystemAclCanonical
  SecurityIdentifier Owner
  SystemAcl SystemAcl
  GenericAcl InternalSacl
  bool DaclIsUnmodifiedAefa
Методы:
  void .ctor(bool isContainer, bool isDS, RawSecurityDescriptor rawSecurityDescriptor)
  void .ctor(bool isContainer, bool isDS, string sddlForm)
  void .ctor(bool isContainer, bool isDS, Byte[] binaryForm, int offset)
  void .ctor(bool isContainer, bool isDS, ControlFlags flags, SecurityIdentifier owner, SecurityIdentifier group, SystemAcl systemAcl, DiscretionaryAcl discretionaryAcl)
  void Init(bool isContainer, bool isDS, RawSecurityDescriptor rawSecurityDescriptor)
  void Init(bool isContainer, bool isDS, ControlFlags flags, SecurityIdentifier owner, SecurityIdentifier group, SystemAcl systemAcl, DiscretionaryAcl discretionaryAcl)
  ControlFlags get_ControlFlags()
  DiscretionaryAcl get_DiscretionaryAcl()
  void set_DiscretionaryAcl(DiscretionaryAcl value)
  GenericAcl get_InternalDacl()
  SecurityIdentifier get_Group()
  void set_Group(SecurityIdentifier value)
  bool get_IsContainer()
  bool get_IsDiscretionaryAclCanonical()
  bool get_IsDS()
  bool get_IsSystemAclCanonical()
  SecurityIdentifier get_Owner()
  void set_Owner(SecurityIdentifier value)
  SystemAcl get_SystemAcl()
  void set_SystemAcl(SystemAcl value)
  GenericAcl get_InternalSacl()
  void PurgeAccessControl(SecurityIdentifier sid)
  void PurgeAudit(SecurityIdentifier sid)
  void SetDiscretionaryAclProtection(bool isProtected, bool preserveInheritance)
  void SetSystemAclProtection(bool isProtected, bool preserveInheritance)
  void AddDiscretionaryAcl(byte revision, int trusted)
  void AddSystemAcl(byte revision, int trusted)
  void CheckAclConsistency(CommonAcl acl)
  bool get_DaclIsUnmodifiedAefa()
--------------------------------------------------
Класс: System.Security.AccessControl.CompoundAce
Наследуется от: KnownAce
Поля:
  CompoundAceType compound_ace_type
Свойства:
  int BinaryLength
  CompoundAceType CompoundAceType
Методы:
  void .ctor(AceFlags flags, int accessMask, CompoundAceType compoundAceType, SecurityIdentifier sid)
  int get_BinaryLength()
  CompoundAceType get_CompoundAceType()
  void set_CompoundAceType(CompoundAceType value)
  void GetBinaryForm(Byte[] binaryForm, int offset)
  string GetSddlForm()
--------------------------------------------------
Класс: System.Security.AccessControl.CompoundAceType
Наследуется от: Enum
Поля:
  int value__
  CompoundAceType Impersonation
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.ControlFlags
Наследуется от: Enum
Поля:
  int value__
  ControlFlags None
  ControlFlags OwnerDefaulted
  ControlFlags GroupDefaulted
  ControlFlags DiscretionaryAclPresent
  ControlFlags DiscretionaryAclDefaulted
  ControlFlags SystemAclPresent
  ControlFlags SystemAclDefaulted
  ControlFlags DiscretionaryAclUntrusted
  ControlFlags ServerSecurity
  ControlFlags DiscretionaryAclAutoInheritRequired
  ControlFlags SystemAclAutoInheritRequired
  ControlFlags DiscretionaryAclAutoInherited
  ControlFlags SystemAclAutoInherited
  ControlFlags DiscretionaryAclProtected
  ControlFlags SystemAclProtected
  ControlFlags RMControlValid
  ControlFlags SelfRelative
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.CryptoKeyAccessRule
Наследуется от: AccessRule
Поля:
Свойства:
  CryptoKeyRights CryptoKeyRights
Методы:
  void .ctor(IdentityReference identity, CryptoKeyRights cryptoKeyRights, AccessControlType type)
  void .ctor(string identity, CryptoKeyRights cryptoKeyRights, AccessControlType type)
  CryptoKeyRights get_CryptoKeyRights()
--------------------------------------------------
Класс: System.Security.AccessControl.CryptoKeyAuditRule
Наследуется от: AuditRule
Поля:
Свойства:
  CryptoKeyRights CryptoKeyRights
Методы:
  void .ctor(IdentityReference identity, CryptoKeyRights cryptoKeyRights, AuditFlags flags)
  void .ctor(string identity, CryptoKeyRights cryptoKeyRights, AuditFlags flags)
  CryptoKeyRights get_CryptoKeyRights()
--------------------------------------------------
Класс: System.Security.AccessControl.CryptoKeyRights
Наследуется от: Enum
Поля:
  int value__
  CryptoKeyRights ReadData
  CryptoKeyRights WriteData
  CryptoKeyRights ReadExtendedAttributes
  CryptoKeyRights WriteExtendedAttributes
  CryptoKeyRights ReadAttributes
  CryptoKeyRights WriteAttributes
  CryptoKeyRights Delete
  CryptoKeyRights ReadPermissions
  CryptoKeyRights ChangePermissions
  CryptoKeyRights TakeOwnership
  CryptoKeyRights Synchronize
  CryptoKeyRights FullControl
  CryptoKeyRights GenericAll
  CryptoKeyRights GenericExecute
  CryptoKeyRights GenericWrite
  CryptoKeyRights GenericRead
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.CryptoKeySecurity
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  void .ctor()
  void .ctor(CommonSecurityDescriptor securityDescriptor)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void AddAccessRule(CryptoKeyAccessRule rule)
  bool RemoveAccessRule(CryptoKeyAccessRule rule)
  void RemoveAccessRuleAll(CryptoKeyAccessRule rule)
  void RemoveAccessRuleSpecific(CryptoKeyAccessRule rule)
  void ResetAccessRule(CryptoKeyAccessRule rule)
  void SetAccessRule(CryptoKeyAccessRule rule)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void AddAuditRule(CryptoKeyAuditRule rule)
  bool RemoveAuditRule(CryptoKeyAuditRule rule)
  void RemoveAuditRuleAll(CryptoKeyAuditRule rule)
  void RemoveAuditRuleSpecific(CryptoKeyAuditRule rule)
  void SetAuditRule(CryptoKeyAuditRule rule)
--------------------------------------------------
Класс: System.Security.AccessControl.CustomAce
Наследуется от: GenericAce
Поля:
  Byte[] opaque
  int MaxOpaqueLength
Свойства:
  int BinaryLength
  int OpaqueLength
Методы:
  void .ctor(AceType type, AceFlags flags, Byte[] opaque)
  int get_BinaryLength()
  int get_OpaqueLength()
  void GetBinaryForm(Byte[] binaryForm, int offset)
  Byte[] GetOpaque()
  void SetOpaque(Byte[] opaque)
  string GetSddlForm()
--------------------------------------------------
Класс: System.Security.AccessControl.DirectoryObjectSecurity
Наследуется от: ObjectSecurity
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(CommonSecurityDescriptor securityDescriptor)
  Exception GetNotImplementedException()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type, Guid objectType, Guid inheritedObjectType)
  AccessRule InternalAccessRuleFactory(QualifiedAce ace, Type targetType, AccessControlType type)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags, Guid objectType, Guid inheritedObjectType)
  AuditRule InternalAuditRuleFactory(QualifiedAce ace, Type targetType)
  AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, Type targetType)
  AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, Type targetType)
  void AddAccessRule(ObjectAccessRule rule)
  bool RemoveAccessRule(ObjectAccessRule rule)
  void RemoveAccessRuleAll(ObjectAccessRule rule)
  void RemoveAccessRuleSpecific(ObjectAccessRule rule)
  void ResetAccessRule(ObjectAccessRule rule)
  void SetAccessRule(ObjectAccessRule rule)
  bool ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean& modified)
  void AddAuditRule(ObjectAuditRule rule)
  bool RemoveAuditRule(ObjectAuditRule rule)
  void RemoveAuditRuleAll(ObjectAuditRule rule)
  void RemoveAuditRuleSpecific(ObjectAuditRule rule)
  void SetAuditRule(ObjectAuditRule rule)
  bool ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean& modified)
--------------------------------------------------
Класс: System.Security.AccessControl.DirectorySecurity
Наследуется от: FileSystemSecurity
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string name, AccessControlSections includeSections)
--------------------------------------------------
Класс: System.Security.AccessControl.DiscretionaryAcl
Наследуется от: CommonAcl
Поля:
Свойства:
Методы:
  void .ctor(bool isContainer, bool isDS, int capacity)
  void .ctor(bool isContainer, bool isDS, RawAcl rawAcl)
  void .ctor(bool isContainer, bool isDS, byte revision, int capacity)
  void AddAccess(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  void AddAccess(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void AddAccess(AccessControlType accessType, SecurityIdentifier sid, ObjectAccessRule rule)
  bool RemoveAccess(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  bool RemoveAccess(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  bool RemoveAccess(AccessControlType accessType, SecurityIdentifier sid, ObjectAccessRule rule)
  void RemoveAccessSpecific(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  void RemoveAccessSpecific(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void RemoveAccessSpecific(AccessControlType accessType, SecurityIdentifier sid, ObjectAccessRule rule)
  void SetAccess(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  void SetAccess(AccessControlType accessType, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void SetAccess(AccessControlType accessType, SecurityIdentifier sid, ObjectAccessRule rule)
  void ApplyCanonicalSortToExplicitAces()
  int GetAceInsertPosition(AceQualifier aceQualifier)
  AceQualifier GetAceQualifier(AccessControlType accessType)
  bool IsAceMeaningless(GenericAce ace)
--------------------------------------------------
Класс: System.Security.AccessControl.EventWaitHandleAccessRule
Наследуется от: AccessRule
Поля:
Свойства:
  EventWaitHandleRights EventWaitHandleRights
Методы:
  void .ctor(IdentityReference identity, EventWaitHandleRights eventRights, AccessControlType type)
  void .ctor(string identity, EventWaitHandleRights eventRights, AccessControlType type)
  EventWaitHandleRights get_EventWaitHandleRights()
--------------------------------------------------
Класс: System.Security.AccessControl.EventWaitHandleAuditRule
Наследуется от: AuditRule
Поля:
Свойства:
  EventWaitHandleRights EventWaitHandleRights
Методы:
  void .ctor(IdentityReference identity, EventWaitHandleRights eventRights, AuditFlags flags)
  EventWaitHandleRights get_EventWaitHandleRights()
--------------------------------------------------
Класс: System.Security.AccessControl.EventWaitHandleRights
Наследуется от: Enum
Поля:
  int value__
  EventWaitHandleRights Modify
  EventWaitHandleRights Delete
  EventWaitHandleRights ReadPermissions
  EventWaitHandleRights ChangePermissions
  EventWaitHandleRights TakeOwnership
  EventWaitHandleRights Synchronize
  EventWaitHandleRights FullControl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.EventWaitHandleSecurity
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  void .ctor()
  void .ctor(SafeHandle handle, AccessControlSections includeSections)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void AddAccessRule(EventWaitHandleAccessRule rule)
  bool RemoveAccessRule(EventWaitHandleAccessRule rule)
  void RemoveAccessRuleAll(EventWaitHandleAccessRule rule)
  void RemoveAccessRuleSpecific(EventWaitHandleAccessRule rule)
  void ResetAccessRule(EventWaitHandleAccessRule rule)
  void SetAccessRule(EventWaitHandleAccessRule rule)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void AddAuditRule(EventWaitHandleAuditRule rule)
  bool RemoveAuditRule(EventWaitHandleAuditRule rule)
  void RemoveAuditRuleAll(EventWaitHandleAuditRule rule)
  void RemoveAuditRuleSpecific(EventWaitHandleAuditRule rule)
  void SetAuditRule(EventWaitHandleAuditRule rule)
  void Persist(SafeHandle handle)
--------------------------------------------------
Класс: System.Security.AccessControl.FileSecurity
Наследуется от: FileSystemSecurity
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string fileName, AccessControlSections includeSections)
  void .ctor(SafeHandle handle, AccessControlSections includeSections)
--------------------------------------------------
Класс: System.Security.AccessControl.FileSystemAccessRule
Наследуется от: AccessRule
Поля:
Свойства:
  FileSystemRights FileSystemRights
Методы:
  void .ctor(IdentityReference identity, FileSystemRights fileSystemRights, AccessControlType type)
  void .ctor(string identity, FileSystemRights fileSystemRights, AccessControlType type)
  void .ctor(IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void .ctor(IdentityReference identity, FileSystemRights fileSystemRights, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void .ctor(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  FileSystemRights get_FileSystemRights()
--------------------------------------------------
Класс: System.Security.AccessControl.FileSystemAuditRule
Наследуется от: AuditRule
Поля:
Свойства:
  FileSystemRights FileSystemRights
Методы:
  void .ctor(IdentityReference identity, FileSystemRights fileSystemRights, AuditFlags flags)
  void .ctor(string identity, FileSystemRights fileSystemRights, AuditFlags flags)
  void .ctor(IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void .ctor(IdentityReference identity, FileSystemRights fileSystemRights, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void .ctor(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  FileSystemRights get_FileSystemRights()
--------------------------------------------------
Класс: System.Security.AccessControl.FileSystemRights
Наследуется от: Enum
Поля:
  int value__
  FileSystemRights ListDirectory
  FileSystemRights ReadData
  FileSystemRights CreateFiles
  FileSystemRights WriteData
  FileSystemRights AppendData
  FileSystemRights CreateDirectories
  FileSystemRights ReadExtendedAttributes
  FileSystemRights WriteExtendedAttributes
  FileSystemRights ExecuteFile
  FileSystemRights Traverse
  FileSystemRights DeleteSubdirectoriesAndFiles
  FileSystemRights ReadAttributes
  FileSystemRights WriteAttributes
  FileSystemRights Write
  FileSystemRights Delete
  FileSystemRights ReadPermissions
  FileSystemRights Read
  FileSystemRights ReadAndExecute
  FileSystemRights Modify
  FileSystemRights ChangePermissions
  FileSystemRights TakeOwnership
  FileSystemRights Synchronize
  FileSystemRights FullControl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.FileSystemSecurity
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  void .ctor(bool isContainer)
  void .ctor(bool isContainer, string name, AccessControlSections includeSections)
  void .ctor(bool isContainer, SafeHandle handle, AccessControlSections includeSections)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void AddAccessRule(FileSystemAccessRule rule)
  bool RemoveAccessRule(FileSystemAccessRule rule)
  void RemoveAccessRuleAll(FileSystemAccessRule rule)
  void RemoveAccessRuleSpecific(FileSystemAccessRule rule)
  void ResetAccessRule(FileSystemAccessRule rule)
  void SetAccessRule(FileSystemAccessRule rule)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void AddAuditRule(FileSystemAuditRule rule)
  bool RemoveAuditRule(FileSystemAuditRule rule)
  void RemoveAuditRuleAll(FileSystemAuditRule rule)
  void RemoveAuditRuleSpecific(FileSystemAuditRule rule)
  void SetAuditRule(FileSystemAuditRule rule)
  void .ctor()
--------------------------------------------------
Класс: System.Security.AccessControl.GenericAce
Наследуется от: object
Поля:
  AceFlags ace_flags
  AceType ace_type
Свойства:
  AceFlags AceFlags
  AceType AceType
  AuditFlags AuditFlags
  int BinaryLength
  InheritanceFlags InheritanceFlags
  bool IsInherited
  PropagationFlags PropagationFlags
Методы:
  void .ctor(AceType type, AceFlags flags)
  void .ctor(Byte[] binaryForm, int offset)
  AceFlags get_AceFlags()
  void set_AceFlags(AceFlags value)
  AceType get_AceType()
  AuditFlags get_AuditFlags()
  int get_BinaryLength()
  InheritanceFlags get_InheritanceFlags()
  bool get_IsInherited()
  PropagationFlags get_PropagationFlags()
  GenericAce Copy()
  GenericAce CreateFromBinaryForm(Byte[] binaryForm, int offset)
  bool Equals(object o)
  void GetBinaryForm(Byte[] binaryForm, int offset)
  int GetHashCode()
  bool op_Equality(GenericAce left, GenericAce right)
  bool op_Inequality(GenericAce left, GenericAce right)
  string GetSddlForm()
  GenericAce CreateFromSddlForm(string sddlForm, Int32& pos)
  bool IsObjectType(AceType type)
  string GetSddlAceType(AceType type)
  AceType ParseSddlAceType(string type)
  string GetSddlAceFlags(AceFlags flags)
  AceFlags ParseSddlAceFlags(string flags)
  int ParseSddlAccessRights(string accessMask)
  int ParseSddlAliasRights(string accessMask)
  ushort ReadUShort(Byte[] buffer, int offset)
  int ReadInt(Byte[] buffer, int offset)
  void WriteInt(int val, Byte[] buffer, int offset)
  void WriteUShort(ushort val, Byte[] buffer, int offset)
  void .ctor()
--------------------------------------------------
Класс: System.Security.AccessControl.GenericAcl
Наследуется от: object
Поля:
  byte AclRevision
  byte AclRevisionDS
  int MaxBinaryLength
Свойства:
  int BinaryLength
  int Count
  bool IsSynchronized
  GenericAce Item
  byte Revision
  object SyncRoot
Методы:
  void .cctor()
  void .ctor()
  int get_BinaryLength()
  int get_Count()
  bool get_IsSynchronized()
  GenericAce get_Item(int index)
  void set_Item(int index, GenericAce value)
  byte get_Revision()
  object get_SyncRoot()
  void CopyTo(GenericAce[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void GetBinaryForm(Byte[] binaryForm, int offset)
  AceEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  string GetSddlForm(ControlFlags sdFlags, bool isDacl)
--------------------------------------------------
Класс: System.Security.AccessControl.GenericSecurityDescriptor
Наследуется от: object
Поля:
Свойства:
  int BinaryLength
  ControlFlags ControlFlags
  SecurityIdentifier Group
  SecurityIdentifier Owner
  byte Revision
  GenericAcl InternalDacl
  GenericAcl InternalSacl
  byte InternalReservedField
  bool DaclIsUnmodifiedAefa
  bool DaclPresent
  bool SaclPresent
Методы:
  void .ctor()
  int get_BinaryLength()
  ControlFlags get_ControlFlags()
  SecurityIdentifier get_Group()
  void set_Group(SecurityIdentifier value)
  SecurityIdentifier get_Owner()
  void set_Owner(SecurityIdentifier value)
  byte get_Revision()
  GenericAcl get_InternalDacl()
  GenericAcl get_InternalSacl()
  byte get_InternalReservedField()
  void GetBinaryForm(Byte[] binaryForm, int offset)
  string GetSddlForm(AccessControlSections includeSections)
  bool IsSddlConversionSupported()
  bool get_DaclIsUnmodifiedAefa()
  bool get_DaclPresent()
  bool get_SaclPresent()
  void WriteUShort(ushort val, Byte[] buffer, int offset)
  void WriteInt(int val, Byte[] buffer, int offset)
--------------------------------------------------
Класс: System.Security.AccessControl.InheritanceFlags
Наследуется от: Enum
Поля:
  int value__
  InheritanceFlags None
  InheritanceFlags ContainerInherit
  InheritanceFlags ObjectInherit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.KnownAce
Наследуется от: GenericAce
Поля:
  int access_mask
  SecurityIdentifier identifier
Свойства:
  int AccessMask
  SecurityIdentifier SecurityIdentifier
Методы:
  void .ctor(AceType type, AceFlags flags)
  void .ctor(Byte[] binaryForm, int offset)
  int get_AccessMask()
  void set_AccessMask(int value)
  SecurityIdentifier get_SecurityIdentifier()
  void set_SecurityIdentifier(SecurityIdentifier value)
  string GetSddlAccessRights(int accessMask)
  string GetSddlAliasRights(int accessMask)
  void .ctor()
--------------------------------------------------
Класс: System.Security.AccessControl.MutexAccessRule
Наследуется от: AccessRule
Поля:
Свойства:
  MutexRights MutexRights
Методы:
  void .ctor(IdentityReference identity, MutexRights eventRights, AccessControlType type)
  void .ctor(string identity, MutexRights eventRights, AccessControlType type)
  MutexRights get_MutexRights()
--------------------------------------------------
Класс: System.Security.AccessControl.MutexAuditRule
Наследуется от: AuditRule
Поля:
Свойства:
  MutexRights MutexRights
Методы:
  void .ctor(IdentityReference identity, MutexRights eventRights, AuditFlags flags)
  MutexRights get_MutexRights()
--------------------------------------------------
Класс: System.Security.AccessControl.MutexRights
Наследуется от: Enum
Поля:
  int value__
  MutexRights Modify
  MutexRights Delete
  MutexRights ReadPermissions
  MutexRights ChangePermissions
  MutexRights TakeOwnership
  MutexRights Synchronize
  MutexRights FullControl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.MutexSecurity
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  void .ctor()
  void .ctor(string name, AccessControlSections includeSections)
  void .ctor(SafeHandle handle, AccessControlSections includeSections)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void AddAccessRule(MutexAccessRule rule)
  bool RemoveAccessRule(MutexAccessRule rule)
  void RemoveAccessRuleAll(MutexAccessRule rule)
  void RemoveAccessRuleSpecific(MutexAccessRule rule)
  void ResetAccessRule(MutexAccessRule rule)
  void SetAccessRule(MutexAccessRule rule)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void AddAuditRule(MutexAuditRule rule)
  bool RemoveAuditRule(MutexAuditRule rule)
  void RemoveAuditRuleAll(MutexAuditRule rule)
  void RemoveAuditRuleSpecific(MutexAuditRule rule)
  void SetAuditRule(MutexAuditRule rule)
  Exception MutexExceptionFromErrorCode(int errorCode, string name, SafeHandle handle, object context)
--------------------------------------------------
Класс: System.Security.AccessControl.NativeObjectSecurity
Наследуется от: CommonObjectSecurity
Поля:
  ExceptionFromErrorCode exception_from_error_code
  ResourceType resource_type
Свойства:
  ResourceType ResourceType
Методы:
  void .ctor(CommonSecurityDescriptor securityDescriptor, ResourceType resourceType)
  void .ctor(bool isContainer, ResourceType resourceType)
  void .ctor(bool isContainer, ResourceType resourceType, ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
  void .ctor(bool isContainer, ResourceType resourceType, SafeHandle handle, AccessControlSections includeSections)
  void .ctor(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections)
  void .ctor(bool isContainer, ResourceType resourceType, SafeHandle handle, AccessControlSections includeSections, ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
  void .ctor(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections, ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
  void ClearAccessControlSectionsModified()
  void Persist(SafeHandle handle, AccessControlSections includeSections)
  void Persist(string name, AccessControlSections includeSections)
  void PersistModifications(SafeHandle handle)
  void Persist(SafeHandle handle, AccessControlSections includeSections, object exceptionContext)
  void PersistModifications(string name)
  void Persist(string name, AccessControlSections includeSections, object exceptionContext)
  Exception DefaultExceptionFromErrorCode(int errorCode, string name, SafeHandle handle, object context)
  void RaiseExceptionOnFailure(int errorCode, string name, SafeHandle handle, object context)
  int InternalGet(SafeHandle handle, AccessControlSections includeSections)
  int InternalGet(string name, AccessControlSections includeSections)
  int InternalSet(SafeHandle handle, AccessControlSections includeSections)
  int InternalSet(string name, AccessControlSections includeSections)
  ResourceType get_ResourceType()
  int Win32GetHelper(GetSecurityInfoNativeCall nativeCall, AccessControlSections includeSections)
  int Win32SetHelper(SetSecurityInfoNativeCall nativeCall, AccessControlSections includeSections)
  string Win32FixName(string name)
  int GetSecurityInfo(SafeHandle handle, ResourceType resourceType, SecurityInfos securityInfos, IntPtr& owner, IntPtr& group, IntPtr& dacl, IntPtr& sacl, IntPtr& descriptor)
  int GetNamedSecurityInfo(string name, ResourceType resourceType, SecurityInfos securityInfos, IntPtr& owner, IntPtr& group, IntPtr& dacl, IntPtr& sacl, IntPtr& descriptor)
  IntPtr LocalFree(IntPtr handle)
  int SetSecurityInfo(SafeHandle handle, ResourceType resourceType, SecurityInfos securityInfos, Byte[] owner, Byte[] group, Byte[] dacl, Byte[] sacl)
  int SetNamedSecurityInfo(string name, ResourceType resourceType, SecurityInfos securityInfos, Byte[] owner, Byte[] group, Byte[] dacl, Byte[] sacl)
  int GetSecurityDescriptorLength(IntPtr descriptor)
  bool IsValidSecurityDescriptor(IntPtr descriptor)
--------------------------------------------------
Класс: System.Security.AccessControl.ObjectAccessRule
Наследуется от: AccessRule
Поля:
  Guid object_type
  Guid inherited_object_type
Свойства:
  Guid InheritedObjectType
  ObjectAceFlags ObjectFlags
  Guid ObjectType
Методы:
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, Guid objectType, Guid inheritedObjectType, AccessControlType type)
  Guid get_InheritedObjectType()
  ObjectAceFlags get_ObjectFlags()
  Guid get_ObjectType()
--------------------------------------------------
Класс: System.Security.AccessControl.ObjectAce
Наследуется от: QualifiedAce
Поля:
  Guid object_ace_type
  Guid inherited_object_type
  ObjectAceFlags object_ace_flags
Свойства:
  int BinaryLength
  Guid InheritedObjectAceType
  bool InheritedObjectAceTypePresent
  ObjectAceFlags ObjectAceFlags
  Guid ObjectAceType
  bool ObjectAceTypePresent
Методы:
  void .ctor(AceFlags aceFlags, AceQualifier qualifier, int accessMask, SecurityIdentifier sid, ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, Byte[] opaque)
  void .ctor(AceType type, AceFlags flags, int accessMask, SecurityIdentifier sid, ObjectAceFlags objFlags, Guid objType, Guid inheritedType, Byte[] opaque)
  void .ctor(Byte[] binaryForm, int offset)
  int get_BinaryLength()
  Guid get_InheritedObjectAceType()
  void set_InheritedObjectAceType(Guid value)
  bool get_InheritedObjectAceTypePresent()
  ObjectAceFlags get_ObjectAceFlags()
  void set_ObjectAceFlags(ObjectAceFlags value)
  Guid get_ObjectAceType()
  void set_ObjectAceType(Guid value)
  bool get_ObjectAceTypePresent()
  void GetBinaryForm(Byte[] binaryForm, int offset)
  int MaxOpaqueLength(bool isCallback)
  string GetSddlForm()
  AceType ConvertType(AceQualifier qualifier, bool isCallback)
  void WriteGuid(Guid val, Byte[] buffer, int offset)
  Guid ReadGuid(Byte[] buffer, int offset)
--------------------------------------------------
Класс: System.Security.AccessControl.ObjectAceFlags
Наследуется от: Enum
Поля:
  int value__
  ObjectAceFlags None
  ObjectAceFlags ObjectAceTypePresent
  ObjectAceFlags InheritedObjectAceTypePresent
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.ObjectAuditRule
Наследуется от: AuditRule
Поля:
  Guid inherited_object_type
  Guid object_type
Свойства:
  Guid InheritedObjectType
  ObjectAceFlags ObjectFlags
  Guid ObjectType
Методы:
  void .ctor(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, Guid objectType, Guid inheritedObjectType, AuditFlags auditFlags)
  Guid get_InheritedObjectType()
  ObjectAceFlags get_ObjectFlags()
  Guid get_ObjectType()
--------------------------------------------------
Класс: System.Security.AccessControl.ObjectSecurity
Наследуется от: object
Поля:
  CommonSecurityDescriptor descriptor
  AccessControlSections sections_modified
  ReaderWriterLock rw_lock
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
  bool AreAccessRulesCanonical
  bool AreAccessRulesProtected
  bool AreAuditRulesCanonical
  bool AreAuditRulesProtected
  AccessControlSections AccessControlSectionsModified
  bool AccessRulesModified
  bool AuditRulesModified
  bool GroupModified
  bool IsContainer
  bool IsDS
  bool OwnerModified
Методы:
  void .ctor()
  void .ctor(CommonSecurityDescriptor securityDescriptor)
  void .ctor(bool isContainer, bool isDS)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  bool get_AreAccessRulesCanonical()
  bool get_AreAccessRulesProtected()
  bool get_AreAuditRulesCanonical()
  bool get_AreAuditRulesProtected()
  AccessControlSections get_AccessControlSectionsModified()
  void set_AccessControlSectionsModified(AccessControlSections value)
  bool get_AccessRulesModified()
  void set_AccessRulesModified(bool value)
  bool get_AuditRulesModified()
  void set_AuditRulesModified(bool value)
  bool get_GroupModified()
  void set_GroupModified(bool value)
  bool get_IsContainer()
  bool get_IsDS()
  bool get_OwnerModified()
  void set_OwnerModified(bool value)
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  IdentityReference GetGroup(Type targetType)
  IdentityReference GetOwner(Type targetType)
  Byte[] GetSecurityDescriptorBinaryForm()
  string GetSecurityDescriptorSddlForm(AccessControlSections includeSections)
  bool IsSddlConversionSupported()
  bool ModifyAccessRule(AccessControlModification modification, AccessRule rule, Boolean& modified)
  bool ModifyAuditRule(AccessControlModification modification, AuditRule rule, Boolean& modified)
  void PurgeAccessRules(IdentityReference identity)
  void PurgeAuditRules(IdentityReference identity)
  void SetAccessRuleProtection(bool isProtected, bool preserveInheritance)
  void SetAuditRuleProtection(bool isProtected, bool preserveInheritance)
  void SetGroup(IdentityReference identity)
  void SetOwner(IdentityReference identity)
  void SetSecurityDescriptorBinaryForm(Byte[] binaryForm)
  void SetSecurityDescriptorBinaryForm(Byte[] binaryForm, AccessControlSections includeSections)
  void SetSecurityDescriptorSddlForm(string sddlForm)
  void SetSecurityDescriptorSddlForm(string sddlForm, AccessControlSections includeSections)
  void CopySddlForm(CommonSecurityDescriptor sourceDescriptor, AccessControlSections includeSections)
  bool ModifyAccess(AccessControlModification modification, AccessRule rule, Boolean& modified)
  bool ModifyAudit(AccessControlModification modification, AuditRule rule, Boolean& modified)
  Exception GetNotImplementedException()
  void Persist(SafeHandle handle, AccessControlSections includeSections)
  void Persist(string name, AccessControlSections includeSections)
  void Persist(bool enableOwnershipPrivilege, string name, AccessControlSections includeSections)
  void Reading()
  void ReadLock()
  void ReadUnlock()
  void Writing()
  void WriteLock()
  void WriteUnlock()
  AuthorizationRuleCollection InternalGetAccessRules(bool includeExplicit, bool includeInherited, Type targetType)
  AccessRule InternalAccessRuleFactory(QualifiedAce ace, Type targetType, AccessControlType type)
  AuthorizationRuleCollection InternalGetAuditRules(bool includeExplicit, bool includeInherited, Type targetType)
  AuditRule InternalAuditRuleFactory(QualifiedAce ace, Type targetType)
  SecurityIdentifier SidFromIR(IdentityReference identity)
  bool AreAccessControlSectionsModified(AccessControlSections mask)
  void SetAccessControlSectionsModified(AccessControlSections mask, bool modified)
--------------------------------------------------
Класс: System.Security.AccessControl.ObjectSecurity`1
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  void .ctor(bool isContainer, ResourceType resourceType)
  void .ctor(bool isContainer, ResourceType resourceType, SafeHandle safeHandle, AccessControlSections includeSections)
  void .ctor(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections)
  void .ctor(bool isContainer, ResourceType resourceType, SafeHandle safeHandle, AccessControlSections includeSections, ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
  void .ctor(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections, ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void AddAccessRule(AccessRule`1<T> rule)
  bool RemoveAccessRule(AccessRule`1<T> rule)
  void RemoveAccessRuleAll(AccessRule`1<T> rule)
  void RemoveAccessRuleSpecific(AccessRule`1<T> rule)
  void ResetAccessRule(AccessRule`1<T> rule)
  void SetAccessRule(AccessRule`1<T> rule)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void AddAuditRule(AuditRule`1<T> rule)
  bool RemoveAuditRule(AuditRule`1<T> rule)
  void RemoveAuditRuleAll(AuditRule`1<T> rule)
  void RemoveAuditRuleSpecific(AuditRule`1<T> rule)
  void SetAuditRule(AuditRule`1<T> rule)
  void Persist(SafeHandle handle)
  void Persist(string name)
--------------------------------------------------
Класс: System.Security.AccessControl.PropagationFlags
Наследуется от: Enum
Поля:
  int value__
  PropagationFlags None
  PropagationFlags NoPropagateInherit
  PropagationFlags InheritOnly
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.QualifiedAce
Наследуется от: KnownAce
Поля:
  Byte[] opaque
Свойства:
  AceQualifier AceQualifier
  bool IsCallback
  int OpaqueLength
Методы:
  void .ctor(AceType type, AceFlags flags, Byte[] opaque)
  void .ctor(Byte[] binaryForm, int offset)
  AceQualifier get_AceQualifier()
  bool get_IsCallback()
  int get_OpaqueLength()
  Byte[] GetOpaque()
  void SetOpaque(Byte[] opaque)
  void .ctor()
--------------------------------------------------
Класс: System.Security.AccessControl.RawAcl
Наследуется от: GenericAcl
Поля:
  byte revision
  List`1<GenericAce> list
Свойства:
  int BinaryLength
  int Count
  GenericAce Item
  byte Revision
Методы:
  void .ctor(byte revision, int capacity)
  void .ctor(Byte[] binaryForm, int offset)
  void .ctor(byte revision, List`1<GenericAce> aces)
  int get_BinaryLength()
  int get_Count()
  GenericAce get_Item(int index)
  void set_Item(int index, GenericAce value)
  byte get_Revision()
  void GetBinaryForm(Byte[] binaryForm, int offset)
  void InsertAce(int index, GenericAce ace)
  void RemoveAce(int index)
  string GetSddlForm(ControlFlags sdFlags, bool isDacl)
  RawAcl ParseSddlForm(string sddlForm, bool isDacl, ControlFlags& sdFlags, Int32& pos)
  void ParseFlags(string sddlForm, bool isDacl, ControlFlags& sdFlags, Int32& pos)
  void WriteUShort(ushort val, Byte[] buffer, int offset)
  ushort ReadUShort(Byte[] buffer, int offset)
--------------------------------------------------
Класс: System.Security.AccessControl.RawSecurityDescriptor
Наследуется от: GenericSecurityDescriptor
Поля:
  ControlFlags control_flags
  SecurityIdentifier owner_sid
  SecurityIdentifier group_sid
  RawAcl system_acl
  RawAcl discretionary_acl
  byte resourcemgr_control
Свойства:
  ControlFlags ControlFlags
  RawAcl DiscretionaryAcl
  SecurityIdentifier Group
  SecurityIdentifier Owner
  byte ResourceManagerControl
  RawAcl SystemAcl
  GenericAcl InternalDacl
  GenericAcl InternalSacl
  byte InternalReservedField
Методы:
  void .ctor(string sddlForm)
  void .ctor(Byte[] binaryForm, int offset)
  void .ctor(ControlFlags flags, SecurityIdentifier owner, SecurityIdentifier group, RawAcl systemAcl, RawAcl discretionaryAcl)
  ControlFlags get_ControlFlags()
  RawAcl get_DiscretionaryAcl()
  void set_DiscretionaryAcl(RawAcl value)
  SecurityIdentifier get_Group()
  void set_Group(SecurityIdentifier value)
  SecurityIdentifier get_Owner()
  void set_Owner(SecurityIdentifier value)
  byte get_ResourceManagerControl()
  void set_ResourceManagerControl(byte value)
  RawAcl get_SystemAcl()
  void set_SystemAcl(RawAcl value)
  void SetFlags(ControlFlags flags)
  GenericAcl get_InternalDacl()
  GenericAcl get_InternalSacl()
  byte get_InternalReservedField()
  void ParseSddl(string sddlForm)
  ushort ReadUShort(Byte[] buffer, int offset)
  int ReadInt(Byte[] buffer, int offset)
--------------------------------------------------
Класс: System.Security.AccessControl.RegistryRights
Наследуется от: Enum
Поля:
  int value__
  RegistryRights QueryValues
  RegistryRights SetValue
  RegistryRights CreateSubKey
  RegistryRights EnumerateSubKeys
  RegistryRights Notify
  RegistryRights CreateLink
  RegistryRights Delete
  RegistryRights ReadPermissions
  RegistryRights WriteKey
  RegistryRights ReadKey
  RegistryRights ExecuteKey
  RegistryRights ChangePermissions
  RegistryRights TakeOwnership
  RegistryRights FullControl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.ResourceType
Наследуется от: Enum
Поля:
  int value__
  ResourceType Unknown
  ResourceType FileObject
  ResourceType Service
  ResourceType Printer
  ResourceType RegistryKey
  ResourceType LMShare
  ResourceType KernelObject
  ResourceType WindowObject
  ResourceType DSObject
  ResourceType DSObjectAll
  ResourceType ProviderDefined
  ResourceType WmiGuidObject
  ResourceType RegistryWow6432Key
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.SddlAccessRight
Наследуется от: object
Поля:
  string <Name>k__BackingField
  int <Value>k__BackingField
  int <ObjectType>k__BackingField
  SddlAccessRight[] rights
Свойства:
  string Name
  int Value
  int ObjectType
Методы:
  string get_Name()
  void set_Name(string value)
  int get_Value()
  void set_Value(int value)
  int get_ObjectType()
  void set_ObjectType(int value)
  SddlAccessRight LookupByName(string s)
  SddlAccessRight[] Decompose(int mask)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Security.AccessControl.SecurityInfos
Наследуется от: Enum
Поля:
  int value__
  SecurityInfos Owner
  SecurityInfos Group
  SecurityInfos DiscretionaryAcl
  SecurityInfos SystemAcl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.SystemAcl
Наследуется от: CommonAcl
Поля:
Свойства:
Методы:
  void .ctor(bool isContainer, bool isDS, int capacity)
  void .ctor(bool isContainer, bool isDS, RawAcl rawAcl)
  void .ctor(bool isContainer, bool isDS, byte revision, int capacity)
  void AddAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  void AddAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void AddAudit(SecurityIdentifier sid, ObjectAuditRule rule)
  bool RemoveAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  bool RemoveAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  bool RemoveAudit(SecurityIdentifier sid, ObjectAuditRule rule)
  void RemoveAuditSpecific(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  void RemoveAuditSpecific(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void RemoveAuditSpecific(SecurityIdentifier sid, ObjectAuditRule rule)
  void SetAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
  void SetAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
  void SetAudit(SecurityIdentifier sid, ObjectAuditRule rule)
  void ApplyCanonicalSortToExplicitAces()
  int GetAceInsertPosition(AceQualifier aceQualifier)
  bool IsAceMeaningless(GenericAce ace)
  bool IsValidAuditFlags(AuditFlags auditFlags)
--------------------------------------------------
Класс: System.Runtime.AssemblyTargetedPatchBandAttribute
Наследуется от: Attribute
Поля:
  string <TargetedPatchBand>k__BackingField
Свойства:
  string TargetedPatchBand
Методы:
  string get_TargetedPatchBand()
  void .ctor(string targetedPatchBand)
--------------------------------------------------
Класс: System.Runtime.TargetedPatchingOptOutAttribute
Наследуется от: Attribute
Поля:
  string <Reason>k__BackingField
Свойства:
  string Reason
Методы:
  string get_Reason()
  void .ctor(string reason)
--------------------------------------------------
Класс: System.Runtime.AmbiguousImplementationException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.ProfileOptimization
Наследуется от: object
Поля:
Свойства:
Методы:
  void InternalSetProfileRoot(string directoryPath)
  void InternalStartProfile(string profile, IntPtr ptrNativeAssemblyLoadContext)
  void SetProfileRoot(string directoryPath)
  void StartProfile(string profile)
--------------------------------------------------
Класс: System.Runtime.GCLargeObjectHeapCompactionMode
Наследуется от: Enum
Поля:
  int value__
  GCLargeObjectHeapCompactionMode Default
  GCLargeObjectHeapCompactionMode CompactOnce
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.GCLatencyMode
Наследуется от: Enum
Поля:
  int value__
  GCLatencyMode Batch
  GCLatencyMode Interactive
  GCLatencyMode LowLatency
  GCLatencyMode SustainedLowLatency
  GCLatencyMode NoGCRegion
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.GCSettings
Наследуется от: object
Поля:
  GCLargeObjectHeapCompactionMode <LargeObjectHeapCompactionMode>k__BackingField
Свойства:
  bool IsServerGC
  GCLatencyMode LatencyMode
  GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode
Методы:
  bool get_IsServerGC()
  GCLatencyMode get_LatencyMode()
  void set_LatencyMode(GCLatencyMode value)
  GCLargeObjectHeapCompactionMode get_LargeObjectHeapCompactionMode()
  void set_LargeObjectHeapCompactionMode(GCLargeObjectHeapCompactionMode value)
--------------------------------------------------
Класс: System.Runtime.MemoryFailPoint
Наследуется от: CriticalFinalizerObject
Поля:
Свойства:
Методы:
  void .ctor(int sizeInMegabytes)
  void Finalize()
  void Dispose()
--------------------------------------------------
Класс: System.Runtime.RuntimeImports
Наследуется от: object
Поля:
Свойства:
Методы:
  void RhZeroMemory(Byte& b, ulong byteLength)
  void RhZeroMemory(IntPtr p, UIntPtr byteLength)
  void ZeroMemory(Void* p, UInt32 byteLength)
  void Memmove(Byte* dest, Byte* src, UInt32 len)
  void Memmove_wbarrier(Byte* dest, Byte* src, UInt32 len, IntPtr type_handle)
  void _ecvt_s(Byte* buffer, int sizeInBytes, double value, int count, Int32* dec, Int32* sign)
--------------------------------------------------
Класс: System.Runtime.Hosting.ActivationArguments
Наследуется от: EvidenceBase
Поля:
  ActivationContext _context
  ApplicationIdentity _identity
  String[] _data
Свойства:
  ActivationContext ActivationContext
  String[] ActivationData
  ApplicationIdentity ApplicationIdentity
Методы:
  void .ctor(ActivationContext activationData)
  void .ctor(ApplicationIdentity applicationIdentity)
  void .ctor(ActivationContext activationContext, String[] activationData)
  void .ctor(ApplicationIdentity applicationIdentity, String[] activationData)
  ActivationContext get_ActivationContext()
  String[] get_ActivationData()
  ApplicationIdentity get_ApplicationIdentity()
--------------------------------------------------
Класс: System.Runtime.Hosting.ApplicationActivator
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  ObjectHandle CreateInstance(ActivationContext activationContext)
  ObjectHandle CreateInstance(ActivationContext activationContext, String[] activationCustomData)
  ObjectHandle CreateInstanceHelper(AppDomainSetup adSetup)
--------------------------------------------------
Класс: System.Runtime.Remoting.ChannelInfo
Наследуется от: object
Поля:
  Object[] channelData
Свойства:
  Object[] ChannelData
Методы:
  void .ctor()
  void .ctor(object remoteChannelData)
  Object[] get_ChannelData()
  void set_ChannelData(Object[] value)
--------------------------------------------------
Класс: System.Runtime.Remoting.ActivatedClientTypeEntry
Наследуется от: TypeEntry
Поля:
  string applicationUrl
  Type obj_type
Свойства:
  string ApplicationUrl
  IContextAttribute[] ContextAttributes
  Type ObjectType
Методы:
  void .ctor(Type type, string appUrl)
  void .ctor(string typeName, string assemblyName, string appUrl)
  string get_ApplicationUrl()
  IContextAttribute[] get_ContextAttributes()
  void set_ContextAttributes(IContextAttribute[] value)
  Type get_ObjectType()
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.ActivatedServiceTypeEntry
Наследуется от: TypeEntry
Поля:
  Type obj_type
Свойства:
  IContextAttribute[] ContextAttributes
  Type ObjectType
Методы:
  void .ctor(Type type)
  void .ctor(string typeName, string assemblyName)
  IContextAttribute[] get_ContextAttributes()
  void set_ContextAttributes(IContextAttribute[] value)
  Type get_ObjectType()
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.CustomErrorsModes
Наследуется от: Enum
Поля:
  int value__
  CustomErrorsModes On
  CustomErrorsModes Off
  CustomErrorsModes RemoteOnly
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.EnvoyInfo
Наследуется от: object
Поля:
  IMessageSink envoySinks
Свойства:
  IMessageSink EnvoySinks
Методы:
  void .ctor(IMessageSink sinks)
  IMessageSink get_EnvoySinks()
  void set_EnvoySinks(IMessageSink value)
--------------------------------------------------
Класс: System.Runtime.Remoting.IChannelInfo
Поля:
Свойства:
  Object[] ChannelData
Методы:
  Object[] get_ChannelData()
  void set_ChannelData(Object[] value)
--------------------------------------------------
Класс: System.Runtime.Remoting.IEnvoyInfo
Поля:
Свойства:
  IMessageSink EnvoySinks
Методы:
  IMessageSink get_EnvoySinks()
  void set_EnvoySinks(IMessageSink value)
--------------------------------------------------
Класс: System.Runtime.Remoting.IObjectHandle
Поля:
Свойства:
Методы:
  object Unwrap()
--------------------------------------------------
Класс: System.Runtime.Remoting.IRemotingTypeInfo
Поля:
Свойства:
  string TypeName
Методы:
  string get_TypeName()
  void set_TypeName(string value)
  bool CanCastTo(Type fromType, object o)
--------------------------------------------------
Класс: System.Runtime.Remoting.Identity
Наследуется от: object
Поля:
  string _objectUri
  IMessageSink _channelSink
  IMessageSink _envoySink
  DynamicPropertyCollection _clientDynamicProperties
  DynamicPropertyCollection _serverDynamicProperties
  ObjRef _objRef
  bool _disposed
Свойства:
  bool IsFromThisAppDomain
  IMessageSink ChannelSink
  IMessageSink EnvoySink
  string ObjectUri
  bool IsConnected
  bool Disposed
  DynamicPropertyCollection ClientDynamicProperties
  DynamicPropertyCollection ServerDynamicProperties
  bool HasClientDynamicSinks
  bool HasServerDynamicSinks
Методы:
  void .ctor(string objectUri)
  ObjRef CreateObjRef(Type requestedType)
  bool get_IsFromThisAppDomain()
  IMessageSink get_ChannelSink()
  void set_ChannelSink(IMessageSink value)
  IMessageSink get_EnvoySink()
  string get_ObjectUri()
  void set_ObjectUri(string value)
  bool get_IsConnected()
  bool get_Disposed()
  void set_Disposed(bool value)
  DynamicPropertyCollection get_ClientDynamicProperties()
  DynamicPropertyCollection get_ServerDynamicProperties()
  bool get_HasClientDynamicSinks()
  bool get_HasServerDynamicSinks()
  void NotifyClientDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async)
  void NotifyServerDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async)
--------------------------------------------------
Класс: System.Runtime.Remoting.ClientIdentity
Наследуется от: Identity
Поля:
  WeakReference _proxyReference
Свойства:
  MarshalByRefObject ClientProxy
  string TargetUri
Методы:
  void .ctor(string objectUri, ObjRef objRef)
  MarshalByRefObject get_ClientProxy()
  void set_ClientProxy(MarshalByRefObject value)
  ObjRef CreateObjRef(Type requestedType)
  string get_TargetUri()
--------------------------------------------------
Класс: System.Runtime.Remoting.InternalRemotingServices
Наследуется от: object
Поля:
  Hashtable _soapAttributes
Свойства:
Методы:
  void .ctor()
  void DebugOutChnl(string s)
  SoapAttribute GetCachedSoapAttribute(object reflectionObject)
  void RemotingAssert(bool condition, string message)
  void RemotingTrace(Object[] messages)
  void SetServerIdentity(MethodCall m, object srvID)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.ObjRef
Наследуется от: object
Поля:
  IChannelInfo channel_info
  string uri
  IRemotingTypeInfo typeInfo
  IEnvoyInfo envoyInfo
  int flags
  Type _serverType
  int MarshalledObjectRef
  int WellKnowObjectRef
Свойства:
  bool IsReferenceToWellKnow
  IChannelInfo ChannelInfo
  IEnvoyInfo EnvoyInfo
  IRemotingTypeInfo TypeInfo
  string URI
  Type ServerType
Методы:
  void .ctor()
  void .ctor(string uri, IChannelInfo cinfo)
  ObjRef DeserializeInTheCurrentDomain(int domainId, Byte[] tInfo)
  Byte[] SerializeType()
  void .ctor(ObjRef o, bool unmarshalAsProxy)
  void .ctor(MarshalByRefObject o, Type requestedType)
  void .ctor(Type type, string url, object remoteChannelData)
  void .ctor(SerializationInfo info, StreamingContext context)
  bool IsPossibleToCAD()
  bool get_IsReferenceToWellKnow()
  IChannelInfo get_ChannelInfo()
  void set_ChannelInfo(IChannelInfo value)
  IEnvoyInfo get_EnvoyInfo()
  void set_EnvoyInfo(IEnvoyInfo value)
  IRemotingTypeInfo get_TypeInfo()
  void set_TypeInfo(IRemotingTypeInfo value)
  string get_URI()
  void set_URI(string value)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object GetRealObject(StreamingContext context)
  bool IsFromThisAppDomain()
  bool IsFromThisProcess()
  void UpdateChannelInfo()
  Type get_ServerType()
  void SetDomainID(int id)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.ObjectHandle
Наследуется от: MarshalByRefObject
Поля:
  object _wrapped
Свойства:
Методы:
  void .ctor(object o)
  object InitializeLifetimeService()
  object Unwrap()
--------------------------------------------------
Класс: System.Runtime.Remoting.RemotingConfiguration
Наследуется от: object
Поля:
  string applicationID
  string applicationName
  string processGuid
  bool defaultConfigRead
  bool defaultDelayedConfigRead
  CustomErrorsModes _errorMode
  Hashtable wellKnownClientEntries
  Hashtable activatedClientEntries
  Hashtable wellKnownServiceEntries
  Hashtable activatedServiceEntries
  Hashtable channelTemplates
  Hashtable clientProviderTemplates
  Hashtable serverProviderTemplates
Свойства:
  string ApplicationId
  string ApplicationName
  CustomErrorsModes CustomErrorsMode
  string ProcessId
Методы:
  string get_ApplicationId()
  string get_ApplicationName()
  void set_ApplicationName(string value)
  CustomErrorsModes get_CustomErrorsMode()
  void set_CustomErrorsMode(CustomErrorsModes value)
  string get_ProcessId()
  void Configure(string filename, bool ensureSecurity)
  void Configure(string filename)
  void ReadConfigString(string filename)
  void ReadConfigFile(string filename)
  void LoadDefaultDelayedChannels()
  ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes()
  ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes()
  WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes()
  WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes()
  bool IsActivationAllowed(Type svrType)
  ActivatedClientTypeEntry IsRemotelyActivatedClientType(Type svrType)
  ActivatedClientTypeEntry IsRemotelyActivatedClientType(string typeName, string assemblyName)
  WellKnownClientTypeEntry IsWellKnownClientType(Type svrType)
  WellKnownClientTypeEntry IsWellKnownClientType(string typeName, string assemblyName)
  void RegisterActivatedClientType(ActivatedClientTypeEntry entry)
  void RegisterActivatedClientType(Type type, string appUrl)
  void RegisterActivatedServiceType(ActivatedServiceTypeEntry entry)
  void RegisterActivatedServiceType(Type type)
  void RegisterWellKnownClientType(Type type, string objectUrl)
  void RegisterWellKnownClientType(WellKnownClientTypeEntry entry)
  void RegisterWellKnownServiceType(Type type, string objectUri, WellKnownObjectMode mode)
  void RegisterWellKnownServiceType(WellKnownServiceTypeEntry entry)
  void RegisterChannelTemplate(ChannelData channel)
  void RegisterClientProviderTemplate(ProviderData prov)
  void RegisterServerProviderTemplate(ProviderData prov)
  void RegisterChannels(ArrayList channels, bool onlyDelayed)
  void RegisterTypes(ArrayList types)
  bool CustomErrorsEnabled(bool isLocalRequest)
  void SetCustomErrorsMode(string mode)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.ConfigHandler
Наследуется от: object
Поля:
  ArrayList typeEntries
  ArrayList channelInstances
  ChannelData currentChannel
  Stack currentProviderData
  string currentClientUrl
  string appName
  string currentXmlPath
  bool onlyDelayedChannels
Свойства:
Методы:
  void .ctor(bool onlyDelayedChannels)
  void ValidatePath(string element, String[] paths)
  bool CheckPath(string path)
  void OnStartParsing(SmallXmlParser parser)
  void OnProcessingInstruction(string name, string text)
  void OnIgnorableWhitespace(string s)
  void OnStartElement(string name, IAttrList attrs)
  void ParseElement(string name, IAttrList attrs)
  void OnEndElement(string name)
  void ReadCustomProviderData(string name, IAttrList attrs)
  void ReadLifetine(IAttrList attrs)
  TimeSpan ParseTime(string s)
  void ReadChannel(IAttrList attrs, bool isTemplate)
  ProviderData ReadProvider(string name, IAttrList attrs, bool isTemplate)
  void ReadClientActivated(IAttrList attrs)
  void ReadServiceActivated(IAttrList attrs)
  void ReadClientWellKnown(IAttrList attrs)
  void ReadServiceWellKnown(IAttrList attrs)
  void ReadInteropXml(IAttrList attrs, bool isElement)
  void ReadPreload(IAttrList attrs)
  string GetNotNull(IAttrList attrs, string name)
  string ExtractAssembly(String& type)
  void OnChars(string ch)
  void OnEndParsing(SmallXmlParser parser)
--------------------------------------------------
Класс: System.Runtime.Remoting.ChannelData
Наследуется от: object
Поля:
  string Ref
  string Type
  string Id
  string DelayLoadAsClientChannel
  ArrayList _serverProviders
  ArrayList _clientProviders
  Hashtable _customProperties
Свойства:
  ArrayList ServerProviders
  ArrayList ClientProviders
  Hashtable CustomProperties
Методы:
  ArrayList get_ServerProviders()
  ArrayList get_ClientProviders()
  Hashtable get_CustomProperties()
  void CopyFrom(ChannelData other)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.ProviderData
Наследуется от: object
Поля:
  string Ref
  string Type
  string Id
  Hashtable CustomProperties
  IList CustomData
Свойства:
Методы:
  void CopyFrom(ProviderData other)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.FormatterData
Наследуется от: ProviderData
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.RemotingException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception InnerException)
--------------------------------------------------
Класс: System.Runtime.Remoting.RemotingServices
Наследуется от: object
Поля:
  Hashtable uri_hash
  BinaryFormatter _serializationFormatter
  BinaryFormatter _deserializationFormatter
  string app_id
  object app_id_lock
  int next_id
  BindingFlags methodBindings
  MethodInfo FieldSetterMethod
  MethodInfo FieldGetterMethod
Свойства:
Методы:
  void .cctor()
  object InternalExecute(MethodBase method, object obj, Object[] parameters, Object[]& out_args)
  MethodBase GetVirtualMethod(Type type, MethodBase method)
  bool IsTransparentProxy(object proxy)
  bool ProxyCheckCast(RealProxy rp, RuntimeType castType)
  IMethodReturnMessage InternalExecuteMessage(MarshalByRefObject target, IMethodCallMessage reqMsg)
  IMethodReturnMessage ExecuteMessage(MarshalByRefObject target, IMethodCallMessage reqMsg)
  object Connect(Type classToProxy, string url)
  object Connect(Type classToProxy, string url, object data)
  bool Disconnect(MarshalByRefObject obj)
  Type GetServerTypeForUri(string URI)
  string GetObjectUri(MarshalByRefObject obj)
  object Unmarshal(ObjRef objectRef)
  object Unmarshal(ObjRef objectRef, bool fRefine)
  ObjRef Marshal(MarshalByRefObject Obj)
  ObjRef Marshal(MarshalByRefObject Obj, string URI)
  ObjRef Marshal(MarshalByRefObject Obj, string ObjURI, Type RequestedType)
  string NewUri()
  RealProxy GetRealProxy(object proxy)
  MethodBase GetMethodBaseFromMethodMessage(IMethodMessage msg)
  MethodBase GetMethodBaseFromName(Type type, string methodName, Type[] signature)
  MethodBase FindInterfaceMethod(Type type, string methodName, Type[] signature)
  void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
  ObjRef GetObjRefForProxy(MarshalByRefObject obj)
  object GetLifetimeService(MarshalByRefObject obj)
  IMessageSink GetEnvoyChainForProxy(MarshalByRefObject obj)
  void LogRemotingStage(int stage)
  string GetSessionIdForMethodMessage(IMethodMessage msg)
  bool IsMethodOverloaded(IMethodMessage msg)
  bool IsObjectOutOfAppDomain(object tp)
  bool IsObjectOutOfContext(object tp)
  bool IsOneWay(MethodBase method)
  bool IsAsyncMessage(IMessage msg)
  void SetObjectUriForMarshal(MarshalByRefObject obj, string uri)
  object CreateClientProxy(ActivatedClientTypeEntry entry, Object[] activationAttributes)
  object CreateClientProxy(Type objectType, string url, Object[] activationAttributes)
  object CreateClientProxy(WellKnownClientTypeEntry entry)
  object CreateClientProxyForContextBound(Type type, Object[] activationAttributes)
  object CreateClientProxyForComInterop(Type type)
  Identity GetIdentityForUri(string uri)
  string RemoveAppNameFromUri(string uri)
  Identity GetObjectIdentity(MarshalByRefObject obj)
  ClientIdentity GetOrCreateClientIdentity(ObjRef objRef, Type proxyType, Object& clientProxy)
  IMessageSink GetClientChannelSinkChain(string url, object channelData, String& objectUri)
  ClientActivatedIdentity CreateContextBoundObjectIdentity(Type objectType)
  ClientActivatedIdentity CreateClientActivatedServerIdentity(MarshalByRefObject realObject, Type objectType, string objectUri)
  ServerIdentity CreateWellKnownServerIdentity(Type objectType, string objectUri, WellKnownObjectMode mode)
  void RegisterServerIdentity(ServerIdentity identity)
  object GetProxyForRemoteObject(ObjRef objref, Type classToProxy)
  object GetRemoteObject(ObjRef objRef, Type proxyType)
  object GetServerObject(string uri)
  Byte[] SerializeCallData(object obj)
  object DeserializeCallData(Byte[] array)
  Byte[] SerializeExceptionData(Exception ex)
  object GetDomainProxy(AppDomain domain)
  void RegisterInternalChannels()
  void DisposeIdentity(Identity ident)
  Identity GetMessageTargetIdentity(IMessage msg)
  void SetMessageTargetIdentity(IMessage msg, Identity ident)
  bool UpdateOutArgObject(ParameterInfo pi, object local, object remote)
  string GetNormalizedUri(string uri)
--------------------------------------------------
Класс: System.Runtime.Remoting.RemotingTimeoutException
Наследуется от: RemotingException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception InnerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Remoting.ServerException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception InnerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Remoting.ServerIdentity
Наследуется от: Identity
Поля:
  Type _objectType
  MarshalByRefObject _serverObject
  IMessageSink _serverSink
  Context _context
  Lease _lease
Свойства:
  Type ObjectType
  Lease Lease
  Context Context
Методы:
  void .ctor(string objectUri, Context context, Type objectType)
  Type get_ObjectType()
  void StartTrackingLifetime(ILease lease)
  void OnLifetimeExpired()
  ObjRef CreateObjRef(Type requestedType)
  void AttachServerObject(MarshalByRefObject serverObject, Context context)
  Lease get_Lease()
  Context get_Context()
  void set_Context(Context value)
  IMessage SyncObjectProcessMessage(IMessage msg)
  IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink)
  void DisposeServerObject()
--------------------------------------------------
Класс: System.Runtime.Remoting.ClientActivatedIdentity
Наследуется от: ServerIdentity
Поля:
  MarshalByRefObject _targetThis
Свойства:
Методы:
  void .ctor(string objectUri, Type objectType)
  MarshalByRefObject GetServerObject()
  MarshalByRefObject GetClientProxy()
  void SetClientProxy(MarshalByRefObject obj)
  void OnLifetimeExpired()
  IMessage SyncObjectProcessMessage(IMessage msg)
  IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink)
--------------------------------------------------
Класс: System.Runtime.Remoting.SingletonIdentity
Наследуется от: ServerIdentity
Поля:
Свойства:
Методы:
  void .ctor(string objectUri, Context context, Type objectType)
  MarshalByRefObject GetServerObject()
  IMessage SyncObjectProcessMessage(IMessage msg)
  IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink)
--------------------------------------------------
Класс: System.Runtime.Remoting.SingleCallIdentity
Наследуется от: ServerIdentity
Поля:
Свойства:
Методы:
  void .ctor(string objectUri, Context context, Type objectType)
  IMessage SyncObjectProcessMessage(IMessage msg)
  IMessageCtrl AsyncObjectProcessMessage(IMessage msg, IMessageSink replySink)
--------------------------------------------------
Класс: System.Runtime.Remoting.DisposerReplySink
Наследуется от: object
Поля:
  IMessageSink _next
  IDisposable _disposable
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessageSink next, IDisposable disposable)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.SoapServices
Наследуется от: object
Поля:
  Hashtable _xmlTypes
  Hashtable _xmlElements
  Hashtable _soapActions
  Hashtable _soapActionsMethods
  Hashtable _typeInfos
Свойства:
  string XmlNsForClrType
  string XmlNsForClrTypeWithAssembly
  string XmlNsForClrTypeWithNs
  string XmlNsForClrTypeWithNsAndAssembly
Методы:
  void .ctor()
  string get_XmlNsForClrType()
  string get_XmlNsForClrTypeWithAssembly()
  string get_XmlNsForClrTypeWithNs()
  string get_XmlNsForClrTypeWithNsAndAssembly()
  string CodeXmlNamespaceForClrTypeNamespace(string typeNamespace, string assemblyName)
  bool DecodeXmlNamespaceForClrTypeNamespace(string inNamespace, String& typeNamespace, String& assemblyName)
  void GetInteropFieldTypeAndNameFromXmlAttribute(Type containingType, string xmlAttribute, string xmlNamespace, Type& type, String& name)
  void GetInteropFieldTypeAndNameFromXmlElement(Type containingType, string xmlElement, string xmlNamespace, Type& type, String& name)
  void GetInteropFieldInfo(Hashtable fields, string xmlName, string xmlNamespace, Type& type, String& name)
  string GetNameKey(string name, string namspace)
  Type GetInteropTypeFromXmlElement(string xmlElement, string xmlNamespace)
  Type GetInteropTypeFromXmlType(string xmlType, string xmlTypeNamespace)
  string GetAssemblyName(MethodBase mb)
  string GetSoapActionFromMethodBase(MethodBase mb)
  bool GetTypeAndMethodNameFromSoapAction(string soapAction, String& typeName, String& methodName)
  bool GetXmlElementForInteropType(Type type, String& xmlElement, String& xmlNamespace)
  string GetXmlNamespaceForMethodCall(MethodBase mb)
  string GetXmlNamespaceForMethodResponse(MethodBase mb)
  bool GetXmlTypeForInteropType(Type type, String& xmlType, String& xmlTypeNamespace)
  bool IsClrTypeNamespace(string namespaceString)
  bool IsSoapActionValidForMethodBase(string soapAction, MethodBase mb)
  void PreLoad(Assembly assembly)
  void PreLoad(Type type)
  void RegisterInteropXmlElement(string xmlElement, string xmlNamespace, Type type)
  void RegisterInteropXmlType(string xmlType, string xmlTypeNamespace, Type type)
  void RegisterSoapActionForMethodBase(MethodBase mb)
  string InternalGetSoapAction(MethodBase mb)
  void RegisterSoapActionForMethodBase(MethodBase mb, string soapAction)
  string EncodeNs(string ns)
  string DecodeNs(string ns)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.TypeEntry
Наследуется от: object
Поля:
  string assembly_name
  string type_name
Свойства:
  string AssemblyName
  string TypeName
Методы:
  void .ctor()
  string get_AssemblyName()
  void set_AssemblyName(string value)
  string get_TypeName()
  void set_TypeName(string value)
--------------------------------------------------
Класс: System.Runtime.Remoting.TypeInfo
Наследуется от: object
Поля:
  string serverType
  String[] serverHierarchy
  String[] interfacesImplemented
Свойства:
  string TypeName
Методы:
  void .ctor(Type type)
  string get_TypeName()
  void set_TypeName(string value)
  bool CanCastTo(Type fromType, object o)
--------------------------------------------------
Класс: System.Runtime.Remoting.WellKnownClientTypeEntry
Наследуется от: TypeEntry
Поля:
  Type obj_type
  string obj_url
  string app_url
Свойства:
  string ApplicationUrl
  Type ObjectType
  string ObjectUrl
Методы:
  void .ctor(Type type, string objectUrl)
  void .ctor(string typeName, string assemblyName, string objectUrl)
  string get_ApplicationUrl()
  void set_ApplicationUrl(string value)
  Type get_ObjectType()
  string get_ObjectUrl()
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.WellKnownObjectMode
Наследуется от: Enum
Поля:
  int value__
  WellKnownObjectMode Singleton
  WellKnownObjectMode SingleCall
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.WellKnownServiceTypeEntry
Наследуется от: TypeEntry
Поля:
  Type obj_type
  string obj_uri
  WellKnownObjectMode obj_mode
Свойства:
  IContextAttribute[] ContextAttributes
  WellKnownObjectMode Mode
  Type ObjectType
  string ObjectUri
Методы:
  void .ctor(Type type, string objectUri, WellKnownObjectMode mode)
  void .ctor(string typeName, string assemblyName, string objectUri, WellKnownObjectMode mode)
  IContextAttribute[] get_ContextAttributes()
  void set_ContextAttributes(IContextAttribute[] value)
  WellKnownObjectMode get_Mode()
  Type get_ObjectType()
  string get_ObjectUri()
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Services.EnterpriseServicesHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  IConstructionReturnMessage CreateConstructionReturnMessage(IConstructionCallMessage ctorMsg, MarshalByRefObject retObj)
  void SwitchWrappers(RealProxy oldcp, RealProxy newcp)
  object WrapIUnknownWithComObject(IntPtr punk)
--------------------------------------------------
Класс: System.Runtime.Remoting.Services.ITrackingHandler
Поля:
Свойства:
Методы:
  void DisconnectedObject(object obj)
  void MarshaledObject(object obj, ObjRef or)
  void UnmarshaledObject(object obj, ObjRef or)
--------------------------------------------------
Класс: System.Runtime.Remoting.Services.TrackingServices
Наследуется от: object
Поля:
  ArrayList _handlers
Свойства:
  ITrackingHandler[] RegisteredHandlers
Методы:
  void .ctor()
  void RegisterTrackingHandler(ITrackingHandler handler)
  void UnregisterTrackingHandler(ITrackingHandler handler)
  ITrackingHandler[] get_RegisteredHandlers()
  void NotifyMarshaledObject(object obj, ObjRef or)
  void NotifyUnmarshaledObject(object obj, ObjRef or)
  void NotifyDisconnectedObject(object obj)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Proxies.ProxyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
  MarshalByRefObject CreateInstance(Type serverType)
  RealProxy CreateProxy(ObjRef objRef, Type serverType, object serverObject, Context serverContext)
  void GetPropertiesForNewContext(IConstructionCallMessage msg)
  bool IsContextOK(Context ctx, IConstructionCallMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Proxies.TransparentProxy
Наследуется от: object
Поля:
  RealProxy _rp
  RuntimeRemoteClassHandle _class
  bool _custom_type_info
Свойства:
  bool IsContextBoundObject
  Context TargetContext
Методы:
  RuntimeType GetProxyType()
  bool get_IsContextBoundObject()
  Context get_TargetContext()
  bool InCurrentContext()
  object LoadRemoteFieldNew(IntPtr classPtr, IntPtr fieldPtr)
  void StoreRemoteField(IntPtr classPtr, IntPtr fieldPtr, object arg)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Proxies.RealProxy
Наследуется от: object
Поля:
  Type class_to_proxy
  Context _targetContext
  MarshalByRefObject _server
  int _targetDomainId
  string _targetUri
  Identity _objectIdentity
  object _objTP
  object _stubData
Свойства:
  Identity ObjectIdentity
Методы:
  void .ctor()
  void .ctor(Type classToProxy)
  void .ctor(Type classToProxy, ClientIdentity identity)
  void .ctor(Type classToProxy, IntPtr stub, object stubData)
  Type InternalGetProxyType(object transparentProxy)
  Type GetProxiedType()
  ObjRef CreateObjRef(Type requestedType)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Identity get_ObjectIdentity()
  void set_ObjectIdentity(Identity value)
  IntPtr GetCOMIUnknown(bool fIsMarshalled)
  void SetCOMIUnknown(IntPtr i)
  IntPtr SupportsInterface(Guid& iid)
  object GetStubData(RealProxy rp)
  void SetStubData(RealProxy rp, object stubData)
  IMessage Invoke(IMessage msg)
  object PrivateInvoke(RealProxy rp, IMessage msg, Exception& exc, Object[]& out_args)
  object InternalGetTransparentProxy(string className)
  object GetTransparentProxy()
  IConstructionReturnMessage InitializeServerObject(IConstructionCallMessage ctorMsg)
  void AttachServer(MarshalByRefObject s)
  MarshalByRefObject DetachServer()
  MarshalByRefObject GetUnwrappedServer()
  void SetTargetDomain(int domainId)
  object GetAppDomainTarget()
  Object[] ProcessResponse(IMethodReturnMessage mrm, MonoMethodMessage call)
--------------------------------------------------
Класс: System.Runtime.Remoting.Proxies.RemotingProxy
Наследуется от: RealProxy
Поля:
  MethodInfo _cache_GetTypeMethod
  MethodInfo _cache_GetHashCodeMethod
  IMessageSink _sink
  bool _hasEnvoySink
  ConstructionCall _ctorCall
Свойства:
  string TypeName
Методы:
  void .ctor(Type type, ClientIdentity identity)
  void .ctor(Type type, string activationUrl, Object[] activationAttributes)
  IMessage Invoke(IMessage request)
  void AttachIdentity(Identity identity)
  IMessage ActivateRemoteObject(IMethodMessage request)
  string get_TypeName()
  void set_TypeName(string value)
  bool CanCastTo(Type fromType, object o)
  void Finalize()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.ClientSponsor
Наследуется от: MarshalByRefObject
Поля:
  TimeSpan renewal_time
  Hashtable registered_objects
Свойства:
  TimeSpan RenewalTime
Методы:
  void .ctor()
  void .ctor(TimeSpan renewalTime)
  TimeSpan get_RenewalTime()
  void set_RenewalTime(TimeSpan value)
  void Close()
  void Finalize()
  object InitializeLifetimeService()
  bool Register(MarshalByRefObject obj)
  TimeSpan Renewal(ILease lease)
  void Unregister(MarshalByRefObject obj)
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.ILease
Поля:
Свойства:
  TimeSpan CurrentLeaseTime
  LeaseState CurrentState
  TimeSpan InitialLeaseTime
  TimeSpan RenewOnCallTime
  TimeSpan SponsorshipTimeout
Методы:
  TimeSpan get_CurrentLeaseTime()
  LeaseState get_CurrentState()
  TimeSpan get_InitialLeaseTime()
  void set_InitialLeaseTime(TimeSpan value)
  TimeSpan get_RenewOnCallTime()
  void set_RenewOnCallTime(TimeSpan value)
  TimeSpan get_SponsorshipTimeout()
  void set_SponsorshipTimeout(TimeSpan value)
  void Register(ISponsor obj)
  void Register(ISponsor obj, TimeSpan renewalTime)
  TimeSpan Renew(TimeSpan renewalTime)
  void Unregister(ISponsor obj)
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.ISponsor
Поля:
Свойства:
Методы:
  TimeSpan Renewal(ILease lease)
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.Lease
Наследуется от: MarshalByRefObject
Поля:
  DateTime _leaseExpireTime
  LeaseState _currentState
  TimeSpan _initialLeaseTime
  TimeSpan _renewOnCallTime
  TimeSpan _sponsorshipTimeout
  ArrayList _sponsors
  Queue _renewingSponsors
  RenewalDelegate _renewalDelegate
Свойства:
  TimeSpan CurrentLeaseTime
  LeaseState CurrentState
  TimeSpan InitialLeaseTime
  TimeSpan RenewOnCallTime
  TimeSpan SponsorshipTimeout
Методы:
  void .ctor()
  TimeSpan get_CurrentLeaseTime()
  LeaseState get_CurrentState()
  void Activate()
  TimeSpan get_InitialLeaseTime()
  void set_InitialLeaseTime(TimeSpan value)
  TimeSpan get_RenewOnCallTime()
  void set_RenewOnCallTime(TimeSpan value)
  TimeSpan get_SponsorshipTimeout()
  void set_SponsorshipTimeout(TimeSpan value)
  void Register(ISponsor obj)
  void Register(ISponsor obj, TimeSpan renewalTime)
  TimeSpan Renew(TimeSpan renewalTime)
  void Unregister(ISponsor obj)
  void UpdateState()
  void CheckNextSponsor()
  void ProcessSponsorResponse(object state, bool timedOut)
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.LeaseManager
Наследуется от: object
Поля:
  ArrayList _objects
  Timer _timer
Свойства:
Методы:
  void SetPollTime(TimeSpan timeSpan)
  void TrackLifetime(ServerIdentity identity)
  void StopTrackingLifetime(ServerIdentity identity)
  void StartManager()
  void StopManager()
  void ManageLeases(object state)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.LeaseSink
Наследуется от: object
Поля:
  IMessageSink _nextSink
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessageSink nextSink)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  void RenewLease(IMessage msg)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.LeaseState
Наследуется от: Enum
Поля:
  int value__
  LeaseState Null
  LeaseState Initial
  LeaseState Active
  LeaseState Renewing
  LeaseState Expired
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Lifetime.LifetimeServices
Наследуется от: object
Поля:
  TimeSpan _leaseManagerPollTime
  TimeSpan _leaseTime
  TimeSpan _renewOnCallTime
  TimeSpan _sponsorshipTimeout
  LeaseManager _leaseManager
Свойства:
  TimeSpan LeaseManagerPollTime
  TimeSpan LeaseTime
  TimeSpan RenewOnCallTime
  TimeSpan SponsorshipTimeout
Методы:
  void .cctor()
  void .ctor()
  TimeSpan get_LeaseManagerPollTime()
  void set_LeaseManagerPollTime(TimeSpan value)
  TimeSpan get_LeaseTime()
  void set_LeaseTime(TimeSpan value)
  TimeSpan get_RenewOnCallTime()
  void set_RenewOnCallTime(TimeSpan value)
  TimeSpan get_SponsorshipTimeout()
  void set_SponsorshipTimeout(TimeSpan value)
  void TrackLifetime(ServerIdentity identity)
  void StopTrackingLifetime(ServerIdentity identity)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.Context
Наследуется от: object
Поля:
  int domain_id
  int context_id
  UIntPtr static_data
  UIntPtr data
  Object[] local_slots
  IMessageSink default_server_context_sink
  IMessageSink server_context_sink_chain
  IMessageSink client_context_sink_chain
  List`1<IContextProperty> context_properties
  int global_count
  LocalDataStoreHolder modreq(System.Runtime.CompilerServices.IsVolatile) _localDataStore
  LocalDataStoreMgr _localDataStoreMgr
  DynamicPropertyCollection global_dynamic_properties
  DynamicPropertyCollection context_dynamic_properties
  ContextCallbackObject callback_object
Свойства:
  Context DefaultContext
  int ContextID
  IContextProperty[] ContextProperties
  bool IsDefaultContext
  bool NeedsContextSink
  bool HasGlobalDynamicSinks
  bool HasDynamicSinks
  bool HasExitSinks
  LocalDataStore MyLocalStore
Методы:
  void RegisterContext(Context ctx)
  void ReleaseContext(Context ctx)
  void .ctor()
  void Finalize()
  Context get_DefaultContext()
  int get_ContextID()
  IContextProperty[] get_ContextProperties()
  bool get_IsDefaultContext()
  bool get_NeedsContextSink()
  bool RegisterDynamicProperty(IDynamicProperty prop, ContextBoundObject obj, Context ctx)
  bool UnregisterDynamicProperty(string name, ContextBoundObject obj, Context ctx)
  DynamicPropertyCollection GetDynamicPropertyCollection(ContextBoundObject obj, Context ctx)
  void NotifyGlobalDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async)
  bool get_HasGlobalDynamicSinks()
  void NotifyDynamicSinks(bool start, IMessage req_msg, bool client_site, bool async)
  bool get_HasDynamicSinks()
  bool get_HasExitSinks()
  IContextProperty GetProperty(string name)
  void SetProperty(IContextProperty prop)
  void Freeze()
  string ToString()
  IMessageSink GetServerContextSinkChain()
  IMessageSink GetClientContextSinkChain()
  IMessageSink CreateServerObjectSinkChain(MarshalByRefObject obj, bool forceInternalExecute)
  IMessageSink CreateEnvoySink(MarshalByRefObject serverObject)
  Context SwitchToContext(Context newContext)
  Context CreateNewContext(IConstructionCallMessage msg)
  void DoCallBack(CrossContextDelegate deleg)
  LocalDataStore get_MyLocalStore()
  LocalDataStoreSlot AllocateDataSlot()
  LocalDataStoreSlot AllocateNamedDataSlot(string name)
  void FreeNamedDataSlot(string name)
  LocalDataStoreSlot GetNamedDataSlot(string name)
  object GetData(LocalDataStoreSlot slot)
  void SetData(LocalDataStoreSlot slot, object data)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.DynamicPropertyCollection
Наследуется от: object
Поля:
  ArrayList _properties
Свойства:
  bool HasProperties
Методы:
  bool get_HasProperties()
  bool RegisterDynamicProperty(IDynamicProperty prop)
  bool UnregisterDynamicProperty(string name)
  void NotifyMessage(bool start, IMessage msg, bool client_site, bool async)
  int FindProperty(string name)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.ContextCallbackObject
Наследуется от: ContextBoundObject
Поля:
Свойства:
Методы:
  void DoCallBack(CrossContextDelegate deleg)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.ContextAttribute
Наследуется от: Attribute
Поля:
  string AttributeName
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
  bool Equals(object o)
  void Freeze(Context newContext)
  int GetHashCode()
  void GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)
  bool IsContextOK(Context ctx, IConstructionCallMessage ctorMsg)
  bool IsNewContextOK(Context newCtx)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.ContextProperty
Наследуется от: object
Поля:
  string name
  object prop
Свойства:
  string Name
  object Property
Методы:
  void .ctor(string name, object prop)
  string get_Name()
  object get_Property()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.CrossContextChannel
Наследуется от: object
Поля:
Свойства:
  IMessageSink NextSink
Методы:
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.CrossContextDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContextAttribute
Поля:
Свойства:
Методы:
  void GetPropertiesForNewContext(IConstructionCallMessage msg)
  bool IsContextOK(Context ctx, IConstructionCallMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContextProperty
Поля:
Свойства:
  string Name
Методы:
  string get_Name()
  void Freeze(Context newContext)
  bool IsNewContextOK(Context newCtx)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContextPropertyActivator
Поля:
Свойства:
Методы:
  void CollectFromClientContext(IConstructionCallMessage msg)
  void CollectFromServerContext(IConstructionReturnMessage msg)
  bool DeliverClientContextToServerContext(IConstructionCallMessage msg)
  bool DeliverServerContextToClientContext(IConstructionReturnMessage msg)
  bool IsOKToActivate(IConstructionCallMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContributeClientContextSink
Поля:
Свойства:
Методы:
  IMessageSink GetClientContextSink(IMessageSink nextSink)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContributeDynamicSink
Поля:
Свойства:
Методы:
  IDynamicMessageSink GetDynamicSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContributeEnvoySink
Поля:
Свойства:
Методы:
  IMessageSink GetEnvoySink(MarshalByRefObject obj, IMessageSink nextSink)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContributeObjectSink
Поля:
Свойства:
Методы:
  IMessageSink GetObjectSink(MarshalByRefObject obj, IMessageSink nextSink)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IContributeServerContextSink
Поля:
Свойства:
Методы:
  IMessageSink GetServerContextSink(IMessageSink nextSink)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IDynamicMessageSink
Поля:
Свойства:
Методы:
  void ProcessMessageFinish(IMessage replyMsg, bool bCliSide, bool bAsync)
  void ProcessMessageStart(IMessage reqMsg, bool bCliSide, bool bAsync)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.IDynamicProperty
Поля:
Свойства:
  string Name
Методы:
  string get_Name()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.SynchronizationAttribute
Наследуется от: ContextAttribute
Поля:
  int NOT_SUPPORTED
  int SUPPORTED
  int REQUIRED
  int REQUIRES_NEW
  bool _bReEntrant
  int _flavor
  int _lockCount
  Mutex _mutex
  Thread _ownerThread
Свойства:
  bool IsReEntrant
  bool Locked
Методы:
  void .ctor()
  void .ctor(bool reEntrant)
  void .ctor(int flag)
  void .ctor(int flag, bool reEntrant)
  bool get_IsReEntrant()
  bool get_Locked()
  void set_Locked(bool value)
  void AcquireLock()
  void ReleaseLock()
  void GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)
  IMessageSink GetClientContextSink(IMessageSink nextSink)
  IMessageSink GetServerContextSink(IMessageSink nextSink)
  bool IsContextOK(Context ctx, IConstructionCallMessage msg)
  void ExitContext()
  void EnterContext()
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.SynchronizedClientContextSink
Наследуется от: object
Поля:
  IMessageSink _next
  SynchronizationAttribute _att
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessageSink next, SynchronizationAttribute att)
  IMessageSink get_NextSink()
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessage SyncProcessMessage(IMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.SynchronizedServerContextSink
Наследуется от: object
Поля:
  IMessageSink _next
  SynchronizationAttribute _att
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessageSink next, SynchronizationAttribute att)
  IMessageSink get_NextSink()
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessage SyncProcessMessage(IMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Contexts.SynchronizedContextReplySink
Наследуется от: object
Поля:
  IMessageSink _next
  bool _newLock
  SynchronizationAttribute _att
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessageSink next, SynchronizationAttribute att, bool newLock)
  IMessageSink get_NextSink()
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessage SyncProcessMessage(IMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.AggregateDictionary
Наследуется от: object
Поля:
  IDictionary[] dictionaries
  ArrayList _values
  ArrayList _keys
Свойства:
  bool IsFixedSize
  bool IsReadOnly
  object Item
  ICollection Keys
  ICollection Values
  int Count
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor(IDictionary[] dics)
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  object get_Item(object key)
  void set_Item(object key, object value)
  ICollection get_Keys()
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  bool Contains(object ob)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Remove(object ob)
  void CopyTo(Array array, int index)
  int get_Count()
  bool get_IsSynchronized()
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.AggregateEnumerator
Наследуется от: object
Поля:
  IDictionary[] dictionaries
  int pos
  IDictionaryEnumerator currente
Свойства:
  DictionaryEntry Entry
  object Key
  object Value
  object Current
Методы:
  void .ctor(IDictionary[] dics)
  DictionaryEntry get_Entry()
  object get_Key()
  object get_Value()
  object get_Current()
  bool MoveNext()
  void Reset()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties
Наследуется от: object
Поля:
  Hashtable table
Свойства:
  int Count
  bool IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  object Item
  ICollection Keys
  IDictionary Properties
  object SyncRoot
  ICollection Values
Методы:
  void .ctor()
  int get_Count()
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  object get_Item(object key)
  void set_Item(object key, object value)
  ICollection get_Keys()
  IDictionary get_Properties()
  object get_SyncRoot()
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  bool Contains(object key)
  void CopyTo(Array array, int index)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Remove(object key)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties
Наследуется от: BaseChannelObjectWithProperties
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.BaseChannelWithProperties
Наследуется от: BaseChannelObjectWithProperties
Поля:
  IChannelSinkBase SinksWithProperties
Свойства:
  IDictionary Properties
Методы:
  void .ctor()
  IDictionary get_Properties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ChannelDataStore
Наследуется от: object
Поля:
  String[] _channelURIs
  DictionaryEntry[] _extraData
Свойства:
  String[] ChannelUris
  object Item
Методы:
  void .ctor(String[] channelURIs)
  String[] get_ChannelUris()
  void set_ChannelUris(String[] value)
  object get_Item(object key)
  void set_Item(object key, object value)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ChannelServices
Наследуется от: object
Поля:
  ArrayList registeredChannels
  ArrayList delayedClientChannels
  CrossContextChannel _crossContextSink
  string CrossContextUrl
  IList oldStartModeTypes
Свойства:
  CrossContextChannel CrossContextChannel
  IChannel[] RegisteredChannels
Методы:
  void .ctor()
  CrossContextChannel get_CrossContextChannel()
  IMessageSink CreateClientChannelSinkChain(string url, object remoteChannelData, String& objectUri)
  IMessageSink CreateClientChannelSinkChain(IChannelSender sender, string url, Object[] channelDataArray, String& objectUri)
  IChannel[] get_RegisteredChannels()
  IServerChannelSink CreateServerChannelSinkChain(IServerChannelSinkProvider provider, IChannelReceiver channel)
  ServerProcessing DispatchMessage(IServerChannelSinkStack sinkStack, IMessage msg, IMessage& replyMsg)
  IChannel GetChannel(string name)
  IDictionary GetChannelSinkProperties(object obj)
  String[] GetUrlsForObject(MarshalByRefObject obj)
  void RegisterChannel(IChannel chnl)
  void RegisterChannel(IChannel chnl, bool ensureSecurity)
  void RegisterChannelConfig(ChannelData channel)
  object CreateProvider(ProviderData prov)
  IMessage SyncDispatchMessage(IMessage msg)
  IMessageCtrl AsyncDispatchMessage(IMessage msg, IMessageSink replySink)
  ReturnMessage CheckIncomingMessage(IMessage msg)
  IMessage CheckReturnMessage(IMessage callMsg, IMessage retMsg)
  bool IsLocalCall(IMessage callMsg)
  void UnregisterChannel(IChannel chnl)
  Object[] GetCurrentChannelInfo()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ExceptionFilterSink
Наследуется от: object
Поля:
  IMessageSink _next
  IMessage _call
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessage call, IMessageSink next)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ChanelSinkStackEntry
Наследуется от: object
Поля:
  IChannelSinkBase Sink
  object State
  ChanelSinkStackEntry Next
Свойства:
Методы:
  void .ctor(IChannelSinkBase sink, object state, ChanelSinkStackEntry next)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ClientChannelSinkStack
Наследуется от: object
Поля:
  IMessageSink _replySink
  ChanelSinkStackEntry _sinkStack
Свойства:
Методы:
  void .ctor()
  void .ctor(IMessageSink replySink)
  void AsyncProcessResponse(ITransportHeaders headers, Stream stream)
  void DispatchException(Exception e)
  void DispatchReplyMessage(IMessage msg)
  object Pop(IClientChannelSink sink)
  void Push(IClientChannelSink sink, object state)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.CrossAppDomainData
Наследуется от: object
Поля:
  object _ContextID
  int _DomainID
  string _processGuid
Свойства:
  int DomainID
  string ProcessID
Методы:
  void .ctor(int domainId)
  int get_DomainID()
  string get_ProcessID()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.CrossAppDomainChannel
Наследуется от: object
Поля:
  string _strName
  object s_lock
Свойства:
  string ChannelName
  int ChannelPriority
  object ChannelData
Методы:
  void RegisterCrossAppDomainChannel()
  string get_ChannelName()
  int get_ChannelPriority()
  string Parse(string url, String& objectURI)
  object get_ChannelData()
  String[] GetUrlsForUri(string objectURI)
  void StartListening(object data)
  void StopListening(object data)
  IMessageSink CreateMessageSink(string url, object data, String& uri)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.CrossAppDomainSink
Наследуется от: object
Поля:
  Hashtable s_sinks
  MethodInfo processMessageMethod
  int _domainID
Свойства:
  int TargetDomainId
  IMessageSink NextSink
Методы:
  void .ctor(int domainID)
  CrossAppDomainSink GetSink(int domainID)
  int get_TargetDomainId()
  ProcessMessageRes ProcessMessageInDomain(Byte[] arrRequest, CADMethodCallMessage cadMsg)
  IMessage SyncProcessMessage(IMessage msgRequest)
  IMessageCtrl AsyncProcessMessage(IMessage reqMsg, IMessageSink replySink)
  void SendAsyncMessage(object data)
  IMessageSink get_NextSink()
  void .cctor()
  void <AsyncProcessMessage>b__10_0(object data)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.CADSerializer
Наследуется от: object
Поля:
Свойства:
Методы:
  IMessage DeserializeMessage(MemoryStream mem, IMethodCallMessage msg)
  MemoryStream SerializeMessage(IMessage msg)
  object DeserializeObjectSafe(Byte[] mem)
  MemoryStream SerializeObject(object obj)
  object DeserializeObject(MemoryStream mem)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.AsyncRequest
Наследуется от: object
Поля:
  IMessageSink ReplySink
  IMessage MsgRequest
Свойства:
Методы:
  void .ctor(IMessage msgRequest, IMessageSink replySink)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IChannel
Поля:
Свойства:
  string ChannelName
  int ChannelPriority
Методы:
  string get_ChannelName()
  int get_ChannelPriority()
  string Parse(string url, String& objectURI)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IChannelDataStore
Поля:
Свойства:
  String[] ChannelUris
  object Item
Методы:
  String[] get_ChannelUris()
  object get_Item(object key)
  void set_Item(object key, object value)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IChannelReceiver
Поля:
Свойства:
  object ChannelData
Методы:
  object get_ChannelData()
  String[] GetUrlsForUri(string objectURI)
  void StartListening(object data)
  void StopListening(object data)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IChannelReceiverHook
Поля:
Свойства:
  string ChannelScheme
  IServerChannelSink ChannelSinkChain
  bool WantsToListen
Методы:
  string get_ChannelScheme()
  IServerChannelSink get_ChannelSinkChain()
  bool get_WantsToListen()
  void AddHookChannelUri(string channelUri)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IChannelSender
Поля:
Свойства:
Методы:
  IMessageSink CreateMessageSink(string url, object remoteChannelData, String& objectURI)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IChannelSinkBase
Поля:
Свойства:
  IDictionary Properties
Методы:
  IDictionary get_Properties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IClientChannelSink
Поля:
Свойства:
  IClientChannelSink NextChannelSink
Методы:
  IClientChannelSink get_NextChannelSink()
  void AsyncProcessRequest(IClientChannelSinkStack sinkStack, IMessage msg, ITransportHeaders headers, Stream stream)
  void AsyncProcessResponse(IClientResponseChannelSinkStack sinkStack, object state, ITransportHeaders headers, Stream stream)
  Stream GetRequestStream(IMessage msg, ITransportHeaders headers)
  void ProcessMessage(IMessage msg, ITransportHeaders requestHeaders, Stream requestStream, ITransportHeaders& responseHeaders, Stream& responseStream)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
Поля:
Свойства:
  IClientChannelSinkProvider Next
Методы:
  IClientChannelSinkProvider get_Next()
  void set_Next(IClientChannelSinkProvider value)
  IClientChannelSink CreateSink(IChannelSender channel, string url, object remoteChannelData)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IClientChannelSinkStack
Поля:
Свойства:
Методы:
  object Pop(IClientChannelSink sink)
  void Push(IClientChannelSink sink, object state)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IClientFormatterSink
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IClientFormatterSinkProvider
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack
Поля:
Свойства:
Методы:
  void AsyncProcessResponse(ITransportHeaders headers, Stream stream)
  void DispatchException(Exception e)
  void DispatchReplyMessage(IMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ISecurableChannel
Поля:
Свойства:
  bool IsSecured
Методы:
  bool get_IsSecured()
  void set_IsSecured(bool value)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IServerChannelSink
Поля:
Свойства:
  IServerChannelSink NextChannelSink
Методы:
  IServerChannelSink get_NextChannelSink()
  void AsyncProcessResponse(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers, Stream stream)
  Stream GetResponseStream(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers)
  ServerProcessing ProcessMessage(IServerChannelSinkStack sinkStack, IMessage requestMsg, ITransportHeaders requestHeaders, Stream requestStream, IMessage& responseMsg, ITransportHeaders& responseHeaders, Stream& responseStream)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
Поля:
Свойства:
  IServerChannelSinkProvider Next
Методы:
  IServerChannelSinkProvider get_Next()
  void set_Next(IServerChannelSinkProvider value)
  IServerChannelSink CreateSink(IChannelReceiver channel)
  void GetChannelData(IChannelDataStore channelData)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IServerChannelSinkStack
Поля:
Свойства:
Методы:
  object Pop(IServerChannelSink sink)
  void Push(IServerChannelSink sink, object state)
  void ServerCallback(IAsyncResult ar)
  void Store(IServerChannelSink sink, object state)
  void StoreAndDispatch(IServerChannelSink sink, object state)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IServerFormatterSinkProvider
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
Поля:
Свойства:
Методы:
  void AsyncProcessResponse(IMessage msg, ITransportHeaders headers, Stream stream)
  Stream GetResponseStream(IMessage msg, ITransportHeaders headers)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ITransportHeaders
Поля:
Свойства:
  object Item
Методы:
  object get_Item(object key)
  void set_Item(object key, object value)
  IEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ServerChannelSinkStack
Наследуется от: object
Поля:
  ChanelSinkStackEntry _sinkStack
Свойства:
Методы:
  void .ctor()
  Stream GetResponseStream(IMessage msg, ITransportHeaders headers)
  object Pop(IServerChannelSink sink)
  void Push(IServerChannelSink sink, object state)
  void ServerCallback(IAsyncResult ar)
  void Store(IServerChannelSink sink, object state)
  void StoreAndDispatch(IServerChannelSink sink, object state)
  void AsyncProcessResponse(IMessage msg, ITransportHeaders headers, Stream stream)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ServerDispatchSink
Наследуется от: object
Поля:
Свойства:
  IServerChannelSink NextChannelSink
  IDictionary Properties
Методы:
  void .ctor()
  IServerChannelSink get_NextChannelSink()
  IDictionary get_Properties()
  void AsyncProcessResponse(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers, Stream stream)
  Stream GetResponseStream(IServerResponseChannelSinkStack sinkStack, object state, IMessage msg, ITransportHeaders headers)
  ServerProcessing ProcessMessage(IServerChannelSinkStack sinkStack, IMessage requestMsg, ITransportHeaders requestHeaders, Stream requestStream, IMessage& responseMsg, ITransportHeaders& responseHeaders, Stream& responseStream)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ServerDispatchSinkProvider
Наследуется от: object
Поля:
Свойства:
  IServerChannelSinkProvider Next
Методы:
  void .ctor()
  void .ctor(IDictionary properties, ICollection providerData)
  IServerChannelSinkProvider get_Next()
  void set_Next(IServerChannelSinkProvider value)
  IServerChannelSink CreateSink(IChannelReceiver channel)
  void GetChannelData(IChannelDataStore channelData)
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.ServerProcessing
Наследуется от: Enum
Поля:
  int value__
  ServerProcessing Complete
  ServerProcessing OneWay
  ServerProcessing Async
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.SinkProviderData
Наследуется от: object
Поля:
  string sinkName
  ArrayList children
  Hashtable properties
Свойства:
  IList Children
  string Name
  IDictionary Properties
Методы:
  void .ctor(string name)
  IList get_Children()
  string get_Name()
  IDictionary get_Properties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Channels.TransportHeaders
Наследуется от: object
Поля:
  Hashtable hash_table
Свойства:
  object Item
Методы:
  void .ctor()
  object get_Item(object key)
  void set_Item(object key, object value)
  IEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.ActivationServices
Наследуется от: object
Поля:
  IActivator _constructionActivator
Свойства:
  IActivator ConstructionActivator
Методы:
  IActivator get_ConstructionActivator()
  IMessage Activate(RemotingProxy proxy, ConstructionCall ctorCall)
  IMessage RemoteActivate(IConstructionCallMessage ctorCall)
  object CreateProxyFromAttributes(Type type, Object[] activationAttributes)
  ConstructionCall CreateConstructionCall(Type type, string activationUrl, Object[] activationAttributes)
  IMessage CreateInstanceFromMessage(IConstructionCallMessage ctorCall)
  object CreateProxyForType(Type type)
  void PushActivationAttributes(Type serverType, Object[] attributes)
  void PopActivationAttributes(Type serverType)
  object AllocateUninitializedClassInstance(Type type)
  void EnableProxyActivation(Type type, bool enable)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.ActivatorLevel
Наследуется от: Enum
Поля:
  int value__
  ActivatorLevel Construction
  ActivatorLevel Context
  ActivatorLevel AppDomain
  ActivatorLevel Process
  ActivatorLevel Machine
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.AppDomainLevelActivator
Наследуется от: object
Поля:
  string _activationUrl
  IActivator _next
Свойства:
  ActivatorLevel Level
  IActivator NextActivator
Методы:
  void .ctor(string activationUrl, IActivator next)
  ActivatorLevel get_Level()
  IActivator get_NextActivator()
  void set_NextActivator(IActivator value)
  IConstructionReturnMessage Activate(IConstructionCallMessage ctorCall)
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.ConstructionLevelActivator
Наследуется от: object
Поля:
Свойства:
  ActivatorLevel Level
  IActivator NextActivator
Методы:
  ActivatorLevel get_Level()
  IActivator get_NextActivator()
  void set_NextActivator(IActivator value)
  IConstructionReturnMessage Activate(IConstructionCallMessage msg)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.ContextLevelActivator
Наследуется от: object
Поля:
  IActivator m_NextActivator
Свойства:
  ActivatorLevel Level
  IActivator NextActivator
Методы:
  void .ctor(IActivator next)
  ActivatorLevel get_Level()
  IActivator get_NextActivator()
  void set_NextActivator(IActivator value)
  IConstructionReturnMessage Activate(IConstructionCallMessage ctorCall)
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.IActivator
Поля:
Свойства:
  ActivatorLevel Level
  IActivator NextActivator
Методы:
  ActivatorLevel get_Level()
  IActivator get_NextActivator()
  void set_NextActivator(IActivator value)
  IConstructionReturnMessage Activate(IConstructionCallMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.IConstructionCallMessage
Поля:
Свойства:
  Type ActivationType
  string ActivationTypeName
  IActivator Activator
  Object[] CallSiteActivationAttributes
  IList ContextProperties
Методы:
  Type get_ActivationType()
  string get_ActivationTypeName()
  IActivator get_Activator()
  void set_Activator(IActivator value)
  Object[] get_CallSiteActivationAttributes()
  IList get_ContextProperties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.IConstructionReturnMessage
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.RemoteActivationAttribute
Наследуется от: Attribute
Поля:
  IList _contextProperties
Свойства:
Методы:
  void .ctor()
  void .ctor(IList contextProperties)
  bool IsContextOK(Context ctx, IConstructionCallMessage ctor)
  void GetPropertiesForNewContext(IConstructionCallMessage ctor)
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.RemoteActivator
Наследуется от: MarshalByRefObject
Поля:
Свойства:
  ActivatorLevel Level
  IActivator NextActivator
Методы:
  IConstructionReturnMessage Activate(IConstructionCallMessage msg)
  object InitializeLifetimeService()
  ActivatorLevel get_Level()
  IActivator get_NextActivator()
  void set_NextActivator(IActivator value)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Activation.UrlAttribute
Наследуется от: ContextAttribute
Поля:
  string url
Свойства:
  string UrlValue
Методы:
  void .ctor(string callsiteURL)
  string get_UrlValue()
  bool Equals(object o)
  int GetHashCode()
  void GetPropertiesForNewContext(IConstructionCallMessage ctorMsg)
  bool IsContextOK(Context ctx, IConstructionCallMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.RemotingCachedData
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.RemotingFieldCachedData
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor(RuntimeFieldInfo ri)
  void .ctor(SerializationFieldInfo ri)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.SoapAttribute
Наследуется от: Attribute
Поля:
  bool _nested
  bool _useAttribute
  string ProtXmlNamespace
  object ReflectInfo
Свойства:
  bool Embedded
  bool UseAttribute
  string XmlNamespace
Методы:
  void .ctor()
  bool get_Embedded()
  void set_Embedded(bool value)
  bool get_UseAttribute()
  void set_UseAttribute(bool value)
  string get_XmlNamespace()
  void set_XmlNamespace(string value)
  void SetReflectionObject(object reflectionObject)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.SoapFieldAttribute
Наследуется от: SoapAttribute
Поля:
  int _order
  string _elementName
  bool _isElement
Свойства:
  int Order
  string XmlElementName
Методы:
  void .ctor()
  int get_Order()
  void set_Order(int value)
  string get_XmlElementName()
  void set_XmlElementName(string value)
  bool IsInteropXmlElement()
  void SetReflectionObject(object reflectionObject)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.SoapMethodAttribute
Наследуется от: SoapAttribute
Поля:
  string _responseElement
  string _responseNamespace
  string _returnElement
  string _soapAction
  bool _useAttribute
  string _namespace
Свойства:
  string ResponseXmlElementName
  string ResponseXmlNamespace
  string ReturnXmlElementName
  string SoapAction
  bool UseAttribute
  string XmlNamespace
Методы:
  void .ctor()
  string get_ResponseXmlElementName()
  void set_ResponseXmlElementName(string value)
  string get_ResponseXmlNamespace()
  void set_ResponseXmlNamespace(string value)
  string get_ReturnXmlElementName()
  void set_ReturnXmlElementName(string value)
  string get_SoapAction()
  void set_SoapAction(string value)
  bool get_UseAttribute()
  void set_UseAttribute(bool value)
  string get_XmlNamespace()
  void set_XmlNamespace(string value)
  void SetReflectionObject(object reflectionObject)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.SoapOption
Наследуется от: Enum
Поля:
  int value__
  SoapOption None
  SoapOption AlwaysIncludeTypes
  SoapOption XsdString
  SoapOption EmbedAll
  SoapOption Option1
  SoapOption Option2
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.SoapParameterAttribute
Наследуется от: SoapAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.SoapTypeAttribute
Наследуется от: SoapAttribute
Поля:
  SoapOption _soapOption
  bool _useAttribute
  string _xmlElementName
  XmlFieldOrderOption _xmlFieldOrder
  string _xmlNamespace
  string _xmlTypeName
  string _xmlTypeNamespace
  bool _isType
  bool _isElement
Свойства:
  SoapOption SoapOptions
  bool UseAttribute
  string XmlElementName
  XmlFieldOrderOption XmlFieldOrder
  string XmlNamespace
  string XmlTypeName
  string XmlTypeNamespace
  bool IsInteropXmlElement
  bool IsInteropXmlType
Методы:
  void .ctor()
  SoapOption get_SoapOptions()
  void set_SoapOptions(SoapOption value)
  bool get_UseAttribute()
  void set_UseAttribute(bool value)
  string get_XmlElementName()
  void set_XmlElementName(string value)
  XmlFieldOrderOption get_XmlFieldOrder()
  void set_XmlFieldOrder(XmlFieldOrderOption value)
  string get_XmlNamespace()
  void set_XmlNamespace(string value)
  string get_XmlTypeName()
  void set_XmlTypeName(string value)
  string get_XmlTypeNamespace()
  void set_XmlTypeNamespace(string value)
  bool get_IsInteropXmlElement()
  bool get_IsInteropXmlType()
  void SetReflectionObject(object reflectionObject)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.XmlFieldOrderOption
Наследуется от: Enum
Поля:
  int value__
  XmlFieldOrderOption All
  XmlFieldOrderOption Sequence
  XmlFieldOrderOption Choice
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.ISoapXsd
Поля:
Свойства:
Методы:
  string GetXsdType()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapAnyUri Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary
Наследуется от: object
Поля:
  Byte[] _value
Свойства:
  Byte[] Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(Byte[] value)
  Byte[] get_Value()
  void set_Value(Byte[] value)
  string get_XsdType()
  string GetXsdType()
  SoapBase64Binary Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate
Наследуется от: object
Поля:
  String[] _datetimeFormats
  int _sign
  DateTime _value
Свойства:
  int Sign
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  void .ctor(DateTime value, int sign)
  int get_Sign()
  void set_Sign(int value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapDate Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime
Наследуется от: object
Поля:
  String[] _datetimeFormats
Свойства:
  string XsdType
Методы:
  void .ctor()
  string get_XsdType()
  DateTime Parse(string value)
  string ToString(DateTime value)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay
Наследуется от: object
Поля:
  String[] _datetimeFormats
  DateTime _value
Свойства:
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapDay Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDuration
Наследуется от: object
Поля:
Свойства:
  string XsdType
Методы:
  void .ctor()
  string get_XsdType()
  TimeSpan Parse(string value)
  string ToString(TimeSpan timeSpan)
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapEntities Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapEntity Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  Exception GetException(ISoapXsd type, string msg)
  string Normalize(string s)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary
Наследуется от: object
Поля:
  Byte[] _value
  StringBuilder sb
Свойства:
  Byte[] Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(Byte[] value)
  Byte[] get_Value()
  void set_Value(Byte[] value)
  string get_XsdType()
  string GetXsdType()
  SoapHexBinary Parse(string value)
  Byte[] FromBinHexString(string value)
  byte FromHex(char hexDigit, string value)
  Exception CreateInvalidValueException(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapId Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapIdref Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapIdrefs Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger
Наследуется от: object
Поля:
  decimal _value
Свойства:
  decimal Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(decimal value)
  decimal get_Value()
  void set_Value(decimal value)
  string get_XsdType()
  string GetXsdType()
  SoapInteger Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapLanguage Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth
Наследуется от: object
Поля:
  String[] _datetimeFormats
  DateTime _value
Свойства:
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapMonth Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay
Наследуется от: object
Поля:
  String[] _datetimeFormats
  DateTime _value
Свойства:
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapMonthDay Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapName Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapNcName Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger
Наследуется от: object
Поля:
  decimal _value
Свойства:
  decimal Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(decimal value)
  decimal get_Value()
  void set_Value(decimal value)
  string get_XsdType()
  string GetXsdType()
  SoapNegativeInteger Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapNmtoken Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapNmtokens Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger
Наследуется от: object
Поля:
  decimal _value
Свойства:
  decimal Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(decimal value)
  decimal get_Value()
  void set_Value(decimal value)
  string get_XsdType()
  string GetXsdType()
  SoapNonNegativeInteger Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger
Наследуется от: object
Поля:
  decimal _value
Свойства:
  decimal Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(decimal value)
  decimal get_Value()
  void set_Value(decimal value)
  string get_XsdType()
  string GetXsdType()
  SoapNonPositiveInteger Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapNormalizedString Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapNotation Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger
Наследуется от: object
Поля:
  decimal _value
Свойства:
  decimal Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(decimal value)
  decimal get_Value()
  void set_Value(decimal value)
  string get_XsdType()
  string GetXsdType()
  SoapPositiveInteger Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName
Наследуется от: object
Поля:
  string _name
  string _key
  string _namespace
Свойства:
  string Key
  string Name
  string Namespace
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  void .ctor(string key, string name)
  void .ctor(string key, string name, string namespaceValue)
  string get_Key()
  void set_Key(string value)
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  string get_XsdType()
  string GetXsdType()
  SoapQName Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime
Наследуется от: object
Поля:
  String[] _datetimeFormats
  DateTime _value
Свойства:
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapTime Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken
Наследуется от: object
Поля:
  string _value
Свойства:
  string Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  string get_XsdType()
  string GetXsdType()
  SoapToken Parse(string value)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear
Наследуется от: object
Поля:
  String[] _datetimeFormats
  int _sign
  DateTime _value
Свойства:
  int Sign
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  void .ctor(DateTime value, int sign)
  int get_Sign()
  void set_Sign(int value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapYear Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth
Наследуется от: object
Поля:
  String[] _datetimeFormats
  int _sign
  DateTime _value
Свойства:
  int Sign
  DateTime Value
  string XsdType
Методы:
  void .ctor()
  void .ctor(DateTime value)
  void .ctor(DateTime value, int sign)
  int get_Sign()
  void set_Sign(int value)
  DateTime get_Value()
  void set_Value(DateTime value)
  string get_XsdType()
  string GetXsdType()
  SoapYearMonth Parse(string value)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CallContext
Наследуется от: object
Поля:
Свойства:
  IPrincipal Principal
  object HostContext
Методы:
  void .ctor()
  object SetCurrentCallContext(LogicalCallContext ctx)
  LogicalCallContext SetLogicalCallContext(LogicalCallContext callCtx)
  void FreeNamedDataSlot(string name)
  object LogicalGetData(string name)
  object IllogicalGetData(string name)
  IPrincipal get_Principal()
  void set_Principal(IPrincipal value)
  object get_HostContext()
  void set_HostContext(object value)
  object GetData(string name)
  void SetData(string name, object data)
  void LogicalSetData(string name, object data)
  Header[] GetHeaders()
  void SetHeaders(Header[] headers)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ILogicalThreadAffinative
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IllogicalCallContext
Наследуется от: object
Поля:
  Hashtable m_Datastore
  object m_HostContext
Свойства:
  Hashtable Datastore
  object HostContext
  bool HasUserData
Методы:
  Hashtable get_Datastore()
  object get_HostContext()
  void set_HostContext(object value)
  bool get_HasUserData()
  void FreeNamedDataSlot(string name)
  object GetData(string name)
  void SetData(string name, object data)
  IllogicalCallContext CreateCopy()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.LogicalCallContext
Наследуется от: object
Поля:
  Type s_callContextType
  string s_CorrelationMgrSlotName
  Hashtable m_Datastore
  CallContextRemotingData m_RemotingData
  CallContextSecurityData m_SecurityData
  object m_HostContext
  bool m_IsCorrelationMgr
  Header[] _sendHeaders
  Header[] _recvHeaders
Свойства:
  bool HasInfo
  bool HasUserData
  CallContextRemotingData RemotingData
  CallContextSecurityData SecurityData
  object HostContext
  Hashtable Datastore
  IPrincipal Principal
Методы:
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object Clone()
  void Merge(LogicalCallContext lc)
  bool get_HasInfo()
  bool get_HasUserData()
  CallContextRemotingData get_RemotingData()
  CallContextSecurityData get_SecurityData()
  object get_HostContext()
  void set_HostContext(object value)
  Hashtable get_Datastore()
  IPrincipal get_Principal()
  void set_Principal(IPrincipal value)
  void FreeNamedDataSlot(string name)
  object GetData(string name)
  void SetData(string name, object data)
  Header[] InternalGetOutgoingHeaders()
  void InternalSetHeaders(Header[] headers)
  Header[] InternalGetHeaders()
  IPrincipal RemovePrincipalIfNotSerializable()
  void PropagateOutgoingHeadersToMessage(IMessage msg)
  string GetPropertyKeyForHeader(Header header)
  void PropagateIncomingHeadersToCallContext(IMessage msg)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CallContextSecurityData
Наследуется от: object
Поля:
  IPrincipal _principal
Свойства:
  IPrincipal Principal
  bool HasInfo
Методы:
  IPrincipal get_Principal()
  void set_Principal(IPrincipal value)
  bool get_HasInfo()
  object Clone()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CallContextRemotingData
Наследуется от: object
Поля:
  string _logicalCallID
Свойства:
  string LogicalCallID
  bool HasInfo
Методы:
  string get_LogicalCallID()
  void set_LogicalCallID(string value)
  bool get_HasInfo()
  object Clone()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ArgInfoType
Наследуется от: Enum
Поля:
  byte value__
  ArgInfoType In
  ArgInfoType Out
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ArgInfo
Наследуется от: object
Поля:
  Int32[] _paramMap
  int _inoutArgCount
  MethodBase _method
Свойства:
Методы:
  void .ctor(MethodBase method, ArgInfoType type)
  int GetInOutArgIndex(int inoutArgNum)
  string GetInOutArgName(int index)
  int GetInOutArgCount()
  Object[] GetInOutArgs(Object[] args)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.AsyncResult
Наследуется от: object
Поля:
  object async_state
  WaitHandle handle
  object async_delegate
  IntPtr data
  object object_data
  bool sync_completed
  bool completed
  bool endinvoke_called
  object async_callback
  ExecutionContext current
  ExecutionContext original
  long add_time
  MonoMethodMessage call_message
  IMessageCtrl message_ctrl
  IMessage reply_message
  WaitCallback orig_cb
Свойства:
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
  bool EndInvokeCalled
  object AsyncDelegate
  IMessageSink NextSink
  MonoMethodMessage CallMessage
Методы:
  void .ctor()
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  bool get_EndInvokeCalled()
  void set_EndInvokeCalled(bool value)
  object get_AsyncDelegate()
  IMessageSink get_NextSink()
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessage GetReplyMessage()
  void SetMessageCtrl(IMessageCtrl mc)
  void SetCompletedSynchronously(bool completed)
  IMessage EndInvoke()
  IMessage SyncProcessMessage(IMessage msg)
  MonoMethodMessage get_CallMessage()
  void set_CallMessage(MonoMethodMessage value)
  void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
  void System.Threading.IThreadPoolWorkItem.MarkAborted(ThreadAbortException tae)
  object Invoke()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CADArgHolder
Наследуется от: object
Поля:
  int index
Свойства:
Методы:
  void .ctor(int i)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CADObjRef
Наследуется от: object
Поля:
  ObjRef objref
  int SourceDomain
  Byte[] TypeInfo
Свойства:
  string TypeName
  string URI
Методы:
  void .ctor(ObjRef o, int sourceDomain)
  string get_TypeName()
  string get_URI()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CADMethodRef
Наследуется от: object
Поля:
  bool ctor
  string typeName
  string methodName
  String[] param_names
  String[] generic_arg_names
Свойства:
Методы:
  Type[] GetTypes(String[] typeArray)
  MethodBase Resolve()
  void .ctor(IMethodMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CADMessageBase
Наследуется от: object
Поля:
  Object[] _args
  Byte[] _serializedArgs
  int _propertyCount
  CADArgHolder _callContext
  Byte[] serializedMethod
Свойства:
Методы:
  void .ctor(IMethodMessage msg)
  MethodBase GetMethod()
  Type[] GetSignature(MethodBase methodBase, bool load)
  int MarshalProperties(IDictionary dict, ArrayList& args)
  void UnmarshalProperties(IDictionary dict, int count, ArrayList args)
  bool IsPossibleToIgnoreMarshal(object obj)
  object MarshalArgument(object arg, ArrayList& args)
  object UnmarshalArgument(object arg, ArrayList args)
  Object[] MarshalArguments(Object[] arguments, ArrayList& args)
  Object[] UnmarshalArguments(Object[] arguments, ArrayList args)
  void SaveLogicalCallContext(IMethodMessage msg, ArrayList& serializeList)
  LogicalCallContext GetLogicalCallContext(ArrayList args)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CADMethodCallMessage
Наследуется от: CADMessageBase
Поля:
  string _uri
Свойства:
  string Uri
  int PropertiesCount
Методы:
  string get_Uri()
  CADMethodCallMessage Create(IMessage callMsg)
  void .ctor(IMethodCallMessage callMsg)
  ArrayList GetArguments()
  Object[] GetArgs(ArrayList args)
  int get_PropertiesCount()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CADMethodReturnMessage
Наследуется от: CADMessageBase
Поля:
  object _returnValue
  CADArgHolder _exception
  Type[] _sig
Свойства:
  int PropertiesCount
Методы:
  CADMethodReturnMessage Create(IMessage callMsg)
  void .ctor(IMethodReturnMessage retMsg)
  ArrayList GetArguments()
  Object[] GetArgs(ArrayList args)
  object GetReturnValue(ArrayList args)
  Exception GetException(ArrayList args)
  int get_PropertiesCount()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ClientContextTerminatorSink
Наследуется от: object
Поля:
  Context _context
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(Context ctx)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ClientContextReplySink
Наследуется от: object
Поля:
  IMessageSink _replySink
  Context _context
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(Context ctx, IMessageSink replySink)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ConstructionCall
Наследуется от: MethodCall
Поля:
  IActivator _activator
  Object[] _activationAttributes
  IList _contextProperties
  Type _activationType
  string _activationTypeName
  bool _isContextOk
  RemotingProxy _sourceProxy
Свойства:
  bool IsContextOk
  Type ActivationType
  string ActivationTypeName
  IActivator Activator
  Object[] CallSiteActivationAttributes
  IList ContextProperties
  IDictionary Properties
  RemotingProxy SourceProxy
Методы:
  void .ctor(IMessage m)
  void .ctor(Type type)
  void .ctor(Header[] headers)
  void .ctor(SerializationInfo info, StreamingContext context)
  void InitDictionary()
  bool get_IsContextOk()
  void set_IsContextOk(bool value)
  Type get_ActivationType()
  string get_ActivationTypeName()
  IActivator get_Activator()
  void set_Activator(IActivator value)
  Object[] get_CallSiteActivationAttributes()
  void SetActivationAttributes(Object[] attributes)
  IList get_ContextProperties()
  void InitMethodProperty(string key, object value)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  IDictionary get_Properties()
  RemotingProxy get_SourceProxy()
  void set_SourceProxy(RemotingProxy value)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ConstructionCallDictionary
Наследуется от: MessageDictionary
Поля:
  String[] InternalKeys
Свойства:
Методы:
  void .ctor(IConstructionCallMessage message)
  object GetMethodProperty(string key)
  void SetMethodProperty(string key, object value)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ConstructionResponse
Наследуется от: MethodResponse
Поля:
Свойства:
  IDictionary Properties
Методы:
  void .ctor(Header[] h, IMethodCallMessage mcm)
  void .ctor(object resultObject, LogicalCallContext callCtx, IMethodCallMessage msg)
  void .ctor(Exception e, IMethodCallMessage msg)
  void .ctor(SerializationInfo info, StreamingContext context)
  IDictionary get_Properties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink
Наследуется от: object
Поля:
  EnvoyTerminatorSink Instance
Свойства:
  IMessageSink NextSink
Методы:
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ErrorMessage
Наследуется от: object
Поля:
  string _uri
Свойства:
  int ArgCount
  Object[] Args
  bool HasVarArgs
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  IDictionary Properties
  string TypeName
  string Uri
  int InArgCount
  Object[] InArgs
  LogicalCallContext LogicalCallContext
Методы:
  void .ctor()
  int get_ArgCount()
  Object[] get_Args()
  bool get_HasVarArgs()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  IDictionary get_Properties()
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  object GetArg(int arg_num)
  string GetArgName(int arg_num)
  int get_InArgCount()
  string GetInArgName(int index)
  object GetInArg(int argNum)
  Object[] get_InArgs()
  LogicalCallContext get_LogicalCallContext()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.Header
Наследуется от: object
Поля:
  string HeaderNamespace
  bool MustUnderstand
  string Name
  object Value
Свойства:
Методы:
  void .ctor(string _Name, object _Value)
  void .ctor(string _Name, object _Value, bool _MustUnderstand)
  void .ctor(string _Name, object _Value, bool _MustUnderstand, string _HeaderNamespace)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.HeaderHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(Header[] headers)
  IAsyncResult BeginInvoke(Header[] headers, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IInternalMessage
Поля:
Свойства:
  Identity TargetIdentity
  string Uri
Методы:
  Identity get_TargetIdentity()
  void set_TargetIdentity(Identity value)
  string get_Uri()
  void set_Uri(string value)
  bool HasProperties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IMessage
Поля:
Свойства:
  IDictionary Properties
Методы:
  IDictionary get_Properties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IMessageCtrl
Поля:
Свойства:
Методы:
  void Cancel(int msToCancel)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IMessageSink
Поля:
Свойства:
  IMessageSink NextSink
Методы:
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IMethodCallMessage
Поля:
Свойства:
  int InArgCount
  Object[] InArgs
Методы:
  int get_InArgCount()
  Object[] get_InArgs()
  object GetInArg(int argNum)
  string GetInArgName(int index)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IMethodMessage
Поля:
Свойства:
  int ArgCount
  Object[] Args
  bool HasVarArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  string TypeName
  string Uri
Методы:
  int get_ArgCount()
  Object[] get_Args()
  bool get_HasVarArgs()
  LogicalCallContext get_LogicalCallContext()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  string get_TypeName()
  string get_Uri()
  object GetArg(int argNum)
  string GetArgName(int index)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IMethodReturnMessage
Поля:
Свойства:
  Exception Exception
  int OutArgCount
  Object[] OutArgs
  object ReturnValue
Методы:
  Exception get_Exception()
  int get_OutArgCount()
  Object[] get_OutArgs()
  object get_ReturnValue()
  object GetOutArg(int argNum)
  string GetOutArgName(int index)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.IRemotingFormatter
Поля:
Свойства:
Методы:
  object Deserialize(Stream serializationStream, HeaderHandler handler)
  void Serialize(Stream serializationStream, object graph, Header[] headers)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ISerializationRootObject
Поля:
Свойства:
Методы:
  void RootSetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.InternalMessageWrapper
Наследуется от: object
Поля:
  IMessage WrappedMessage
Свойства:
Методы:
  void .ctor(IMessage msg)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MessageSurrogateFilter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(string key, object value)
  IAsyncResult BeginInvoke(string key, object value, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MethodCall
Наследуется от: object
Поля:
  string _uri
  string _typeName
  string _methodName
  Object[] _args
  Type[] _methodSignature
  MethodBase _methodBase
  LogicalCallContext _callContext
  ArgInfo _inArgInfo
  Identity _targetIdentity
  Type[] _genericArguments
  IDictionary ExternalProperties
  IDictionary InternalProperties
Свойства:
  int ArgCount
  Object[] Args
  bool HasVarArgs
  int InArgCount
  Object[] InArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  IDictionary Properties
  string TypeName
  string Uri
  string System.Runtime.Remoting.Messaging.IInternalMessage.Uri
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity
  Type[] GenericArguments
Методы:
  void .ctor(Header[] h1)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(CADMethodCallMessage msg)
  void .ctor(IMessage msg)
  void .ctor(string uri, string typeName, string methodName, Object[] args)
  void .ctor(object handlerObject, BinaryMethodCallMessage smuggledMsg)
  void .ctor()
  void CopyFrom(IMethodMessage call)
  void InitMethodProperty(string key, object value)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  int get_ArgCount()
  Object[] get_Args()
  bool get_HasVarArgs()
  int get_InArgCount()
  Object[] get_InArgs()
  LogicalCallContext get_LogicalCallContext()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  IDictionary get_Properties()
  void InitDictionary()
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value)
  object GetArg(int argNum)
  string GetArgName(int index)
  object GetInArg(int argNum)
  string GetInArgName(int index)
  object HeaderHandler(Header[] h)
  void Init()
  void ResolveMethod()
  Type CastTo(string clientType, Type serverType)
  string GetTypeNameFromAssemblyQualifiedName(string aqname)
  void RootSetObjectData(SerializationInfo info, StreamingContext ctx)
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value)
  bool System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
  Type[] get_GenericArguments()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MCMDictionary
Наследуется от: MessageDictionary
Поля:
  String[] InternalKeys
Свойства:
Методы:
  void .ctor(IMethodMessage message)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MethodCallMessageWrapper
Наследуется от: InternalMessageWrapper
Поля:
  Object[] _args
  ArgInfo _inArgInfo
  DictionaryWrapper _properties
Свойства:
  int ArgCount
  Object[] Args
  bool HasVarArgs
  int InArgCount
  Object[] InArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  IDictionary Properties
  string TypeName
  string Uri
Методы:
  void .ctor(IMethodCallMessage msg)
  int get_ArgCount()
  Object[] get_Args()
  void set_Args(Object[] value)
  bool get_HasVarArgs()
  int get_InArgCount()
  Object[] get_InArgs()
  LogicalCallContext get_LogicalCallContext()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  IDictionary get_Properties()
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  object GetArg(int argNum)
  string GetArgName(int index)
  object GetInArg(int argNum)
  string GetInArgName(int index)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MessageDictionary
Наследуется от: object
Поля:
  IDictionary _internalProperties
  IMethodMessage _message
  String[] _methodKeys
  bool _ownProperties
Свойства:
  IDictionary InternalDictionary
  String[] MethodKeys
  bool IsFixedSize
  bool IsReadOnly
  object Item
  ICollection Keys
  ICollection Values
  int Count
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor(IMethodMessage message)
  bool HasUserData()
  IDictionary get_InternalDictionary()
  String[] get_MethodKeys()
  void set_MethodKeys(String[] value)
  IDictionary AllocInternalProperties()
  IDictionary GetInternalProperties()
  bool IsOverridenKey(string key)
  void .ctor(String[] keys)
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  object get_Item(object key)
  void set_Item(object key, object value)
  object GetMethodProperty(string key)
  void SetMethodProperty(string key, object value)
  ICollection get_Keys()
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  bool Contains(object key)
  void Remove(object key)
  int get_Count()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MethodResponse
Наследуется от: object
Поля:
  string _methodName
  string _uri
  string _typeName
  MethodBase _methodBase
  object _returnValue
  Exception _exception
  Type[] _methodSignature
  ArgInfo _inArgInfo
  Object[] _args
  Object[] _outArgs
  IMethodCallMessage _callMsg
  LogicalCallContext _callContext
  Identity _targetIdentity
  IDictionary ExternalProperties
  IDictionary InternalProperties
Свойства:
  int ArgCount
  Object[] Args
  Exception Exception
  bool HasVarArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  int OutArgCount
  Object[] OutArgs
  IDictionary Properties
  object ReturnValue
  string TypeName
  string Uri
  string System.Runtime.Remoting.Messaging.IInternalMessage.Uri
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity
Методы:
  void .ctor(Header[] h1, IMethodCallMessage mcm)
  void .ctor(Exception e, IMethodCallMessage msg)
  void .ctor(object returnValue, Object[] outArgs, LogicalCallContext callCtx, IMethodCallMessage msg)
  void .ctor(IMethodCallMessage msg, CADMethodReturnMessage retmsg)
  void .ctor(IMethodCallMessage msg, object handlerObject, BinaryMethodReturnMessage smuggledMrm)
  void .ctor(SerializationInfo info, StreamingContext context)
  void InitMethodProperty(string key, object value)
  int get_ArgCount()
  Object[] get_Args()
  Exception get_Exception()
  bool get_HasVarArgs()
  LogicalCallContext get_LogicalCallContext()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  int get_OutArgCount()
  Object[] get_OutArgs()
  IDictionary get_Properties()
  object get_ReturnValue()
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value)
  object GetArg(int argNum)
  string GetArgName(int index)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object GetOutArg(int argNum)
  string GetOutArgName(int index)
  object HeaderHandler(Header[] h)
  void RootSetObjectData(SerializationInfo info, StreamingContext ctx)
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value)
  bool System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MethodReturnDictionary
Наследуется от: MessageDictionary
Поля:
  String[] InternalReturnKeys
  String[] InternalExceptionKeys
Свойства:
Методы:
  void .ctor(IMethodReturnMessage message)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper
Наследуется от: InternalMessageWrapper
Поля:
  Object[] _args
  ArgInfo _outArgInfo
  DictionaryWrapper _properties
  Exception _exception
  object _return
Свойства:
  int ArgCount
  Object[] Args
  Exception Exception
  bool HasVarArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  int OutArgCount
  Object[] OutArgs
  IDictionary Properties
  object ReturnValue
  string TypeName
  string Uri
Методы:
  void .ctor(IMethodReturnMessage msg)
  int get_ArgCount()
  Object[] get_Args()
  void set_Args(Object[] value)
  Exception get_Exception()
  void set_Exception(Exception value)
  bool get_HasVarArgs()
  LogicalCallContext get_LogicalCallContext()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  int get_OutArgCount()
  Object[] get_OutArgs()
  IDictionary get_Properties()
  object get_ReturnValue()
  void set_ReturnValue(object value)
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  object GetArg(int argNum)
  string GetArgName(int index)
  object GetOutArg(int argNum)
  string GetOutArgName(int index)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.MonoMethodMessage
Наследуется от: object
Поля:
  RuntimeMethodInfo method
  Object[] args
  String[] names
  Byte[] arg_types
  LogicalCallContext ctx
  object rval
  Exception exc
  AsyncResult asyncResult
  CallType call_type
  string uri
  MCMDictionary properties
  Identity identity
  Type[] methodSignature
Свойства:
  IDictionary Properties
  int ArgCount
  Object[] Args
  bool HasVarArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  string TypeName
  string Uri
  int InArgCount
  Object[] InArgs
  Exception Exception
  int OutArgCount
  Object[] OutArgs
  object ReturnValue
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity
  bool IsAsync
  AsyncResult AsyncResult
  CallType CallType
Методы:
  void InitMessage(RuntimeMethodInfo method, Object[] out_args)
  void .ctor(MethodBase method, Object[] out_args)
  void .ctor(MethodInfo minfo, Object[] in_args, Object[] out_args)
  MethodInfo GetMethodInfo(Type type, string methodName)
  void .ctor(Type type, string methodName, Object[] in_args)
  IDictionary get_Properties()
  int get_ArgCount()
  Object[] get_Args()
  bool get_HasVarArgs()
  LogicalCallContext get_LogicalCallContext()
  void set_LogicalCallContext(LogicalCallContext value)
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  object GetArg(int arg_num)
  string GetArgName(int arg_num)
  int get_InArgCount()
  Object[] get_InArgs()
  object GetInArg(int arg_num)
  string GetInArgName(int arg_num)
  Exception get_Exception()
  int get_OutArgCount()
  Object[] get_OutArgs()
  object get_ReturnValue()
  object GetOutArg(int arg_num)
  string GetOutArgName(int arg_num)
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value)
  bool System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
  bool get_IsAsync()
  AsyncResult get_AsyncResult()
  CallType get_CallType()
  bool NeedsOutProcessing(Int32& outCount)
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.CallType
Наследуется от: Enum
Поля:
  int value__
  CallType Sync
  CallType BeginInvoke
  CallType EndInvoke
  CallType OneWay
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.OneWayAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.RemotingSurrogate
Наследуется от: object
Поля:
Свойства:
Методы:
  void GetObjectData(object obj, SerializationInfo si, StreamingContext sc)
  object SetObjectData(object obj, SerializationInfo si, StreamingContext sc, ISurrogateSelector selector)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ObjRefSurrogate
Наследуется от: object
Поля:
Свойства:
Методы:
  void GetObjectData(object obj, SerializationInfo si, StreamingContext sc)
  object SetObjectData(object obj, SerializationInfo si, StreamingContext sc, ISurrogateSelector selector)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.RemotingSurrogateSelector
Наследуется от: object
Поля:
  Type s_cachedTypeObjRef
  ObjRefSurrogate _objRefSurrogate
  RemotingSurrogate _objRemotingSurrogate
  object _rootObj
  MessageSurrogateFilter _filter
  ISurrogateSelector _next
Свойства:
  MessageSurrogateFilter Filter
Методы:
  void .ctor()
  MessageSurrogateFilter get_Filter()
  void set_Filter(MessageSurrogateFilter value)
  void ChainSelector(ISurrogateSelector selector)
  ISurrogateSelector GetNextSelector()
  object GetRootObject()
  ISerializationSurrogate GetSurrogate(Type type, StreamingContext context, ISurrogateSelector& ssout)
  void SetRootObject(object obj)
  void UseSoapFormat()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ReturnMessage
Наследуется от: object
Поля:
  Object[] _outArgs
  Object[] _args
  LogicalCallContext _callCtx
  object _returnValue
  string _uri
  Exception _exception
  MethodBase _methodBase
  string _methodName
  Type[] _methodSignature
  string _typeName
  MethodReturnDictionary _properties
  Identity _targetIdentity
  ArgInfo _inArgInfo
Свойства:
  int ArgCount
  Object[] Args
  bool HasVarArgs
  LogicalCallContext LogicalCallContext
  MethodBase MethodBase
  string MethodName
  object MethodSignature
  IDictionary Properties
  string TypeName
  string Uri
  string System.Runtime.Remoting.Messaging.IInternalMessage.Uri
  Exception Exception
  int OutArgCount
  Object[] OutArgs
  object ReturnValue
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.TargetIdentity
Методы:
  void .ctor(object ret, Object[] outArgs, int outArgsCount, LogicalCallContext callCtx, IMethodCallMessage mcm)
  void .ctor(Exception e, IMethodCallMessage mcm)
  int get_ArgCount()
  Object[] get_Args()
  bool get_HasVarArgs()
  LogicalCallContext get_LogicalCallContext()
  MethodBase get_MethodBase()
  string get_MethodName()
  object get_MethodSignature()
  IDictionary get_Properties()
  string get_TypeName()
  string get_Uri()
  void set_Uri(string value)
  string System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri(string value)
  object GetArg(int argNum)
  string GetArgName(int index)
  Exception get_Exception()
  int get_OutArgCount()
  Object[] get_OutArgs()
  object get_ReturnValue()
  object GetOutArg(int argNum)
  string GetOutArgName(int index)
  Identity System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity()
  void System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity(Identity value)
  bool System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()
  bool HasProperties()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ServerContextTerminatorSink
Наследуется от: object
Поля:
Свойства:
  IMessageSink NextSink
Методы:
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink
Наследуется от: object
Поля:
  IMessageSink _nextSink
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(IMessageSink nextSink)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.ServerObjectReplySink
Наследуется от: object
Поля:
  IMessageSink _replySink
  ServerIdentity _identity
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(ServerIdentity identity, IMessageSink replySink)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  IMessageSink get_NextSink()
--------------------------------------------------
Класс: System.Runtime.Remoting.Messaging.StackBuilderSink
Наследуется от: object
Поля:
  MarshalByRefObject _target
  RealProxy _rp
Свойства:
  IMessageSink NextSink
Методы:
  void .ctor(MarshalByRefObject obj, bool forceInternalExecute)
  IMessage SyncProcessMessage(IMessage msg)
  IMessageCtrl AsyncProcessMessage(IMessage msg, IMessageSink replySink)
  void ExecuteAsyncMessage(object ob)
  IMessageSink get_NextSink()
  void CheckParameters(IMessage msg)
  void <AsyncProcessMessage>b__4_0(object data)
--------------------------------------------------
Класс: System.Runtime.Versioning.NonVersionableAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Versioning.TargetFrameworkAttribute
Наследуется от: Attribute
Поля:
  string _frameworkName
  string _frameworkDisplayName
Свойства:
  string FrameworkName
  string FrameworkDisplayName
Методы:
  void .ctor(string frameworkName)
  string get_FrameworkName()
  string get_FrameworkDisplayName()
  void set_FrameworkDisplayName(string value)
--------------------------------------------------
Класс: System.Runtime.Versioning.MultitargetingHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetAssemblyQualifiedName(Type type, Func`2<Type, string> converter)
  bool IsCriticalException(Exception ex)
  bool IsSecurityOrCriticalException(Exception ex)
--------------------------------------------------
Класс: System.Runtime.Versioning.ComponentGuaranteesAttribute
Наследуется от: Attribute
Поля:
  ComponentGuaranteesOptions <Guarantees>k__BackingField
Свойства:
  ComponentGuaranteesOptions Guarantees
Методы:
  ComponentGuaranteesOptions get_Guarantees()
  void .ctor(ComponentGuaranteesOptions guarantees)
--------------------------------------------------
Класс: System.Runtime.Versioning.ComponentGuaranteesOptions
Наследуется от: Enum
Поля:
  int value__
  ComponentGuaranteesOptions None
  ComponentGuaranteesOptions Exchange
  ComponentGuaranteesOptions Stable
  ComponentGuaranteesOptions SideBySide
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Versioning.ResourceConsumptionAttribute
Наследуется от: Attribute
Поля:
  ResourceScope _consumptionScope
  ResourceScope _resourceScope
Свойства:
  ResourceScope ResourceScope
  ResourceScope ConsumptionScope
Методы:
  void .ctor(ResourceScope resourceScope)
  void .ctor(ResourceScope resourceScope, ResourceScope consumptionScope)
  ResourceScope get_ResourceScope()
  ResourceScope get_ConsumptionScope()
--------------------------------------------------
Класс: System.Runtime.Versioning.ResourceExposureAttribute
Наследуется от: Attribute
Поля:
  ResourceScope _resourceExposureLevel
Свойства:
  ResourceScope ResourceExposureLevel
Методы:
  void .ctor(ResourceScope exposureLevel)
  ResourceScope get_ResourceExposureLevel()
--------------------------------------------------
Класс: System.Runtime.Versioning.ResourceScope
Наследуется от: Enum
Поля:
  int value__
  ResourceScope None
  ResourceScope Machine
  ResourceScope Process
  ResourceScope AppDomain
  ResourceScope Library
  ResourceScope Private
  ResourceScope Assembly
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Versioning.SxSRequirements
Наследуется от: Enum
Поля:
  int value__
  SxSRequirements None
  SxSRequirements AppDomainID
  SxSRequirements ProcessID
  SxSRequirements CLRInstanceID
  SxSRequirements AssemblyName
  SxSRequirements TypeName
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Versioning.VersioningHelper
Наследуется от: object
Поля:
  ResourceScope ResTypeMask
  ResourceScope VisibilityMask
Свойства:
Методы:
  int GetRuntimeId()
  string MakeVersionSafeName(string name, ResourceScope from, ResourceScope to)
  string MakeVersionSafeName(string name, ResourceScope from, ResourceScope to, Type type)
  string GetCLRInstanceString()
  SxSRequirements GetRequirements(ResourceScope consumeAsScope, ResourceScope calleeScope)
--------------------------------------------------
Класс: System.Runtime.Versioning.TargetFrameworkId
Наследуется от: Enum
Поля:
  int value__
  TargetFrameworkId NotYetChecked
  TargetFrameworkId Unrecognized
  TargetFrameworkId Unspecified
  TargetFrameworkId NetFramework
  TargetFrameworkId Portable
  TargetFrameworkId NetCore
  TargetFrameworkId Silverlight
  TargetFrameworkId Phone
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Versioning.BinaryCompatibility
Наследуется от: object
Поля:
  bool TargetsAtLeast_Desktop_V4_5
  bool TargetsAtLeast_Desktop_V4_5_1
Свойства:
  bool TargetsAtLeast_Desktop_V4_5_2
Методы:
  bool get_TargetsAtLeast_Desktop_V4_5_2()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Versioning.CompatibilitySwitch
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsEnabled(string compatibilitySwitchName)
  string GetValue(string compatibilitySwitchName)
  string GetValueInternal(string compatibilitySwitchName)
--------------------------------------------------
Класс: System.Runtime.Serialization.IDeserializationCallback
Поля:
Свойства:
Методы:
  void OnDeserialization(object sender)
--------------------------------------------------
Класс: System.Runtime.Serialization.IFormatterConverter
Поля:
Свойства:
Методы:
  object Convert(object value, Type type)
  object Convert(object value, TypeCode typeCode)
  bool ToBoolean(object value)
  char ToChar(object value)
  sbyte ToSByte(object value)
  byte ToByte(object value)
  short ToInt16(object value)
  ushort ToUInt16(object value)
  int ToInt32(object value)
  UInt32 ToUInt32(object value)
  long ToInt64(object value)
  ulong ToUInt64(object value)
  float ToSingle(object value)
  double ToDouble(object value)
  decimal ToDecimal(object value)
  DateTime ToDateTime(object value)
  string ToString(object value)
--------------------------------------------------
Класс: System.Runtime.Serialization.IObjectReference
Поля:
Свойства:
Методы:
  object GetRealObject(StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Serialization.ISerializable
Поля:
Свойства:
Методы:
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationException
Наследуется от: SystemException
Поля:
  string s_nullMessage
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationEntry
Наследуется от: ValueType
Поля:
  string _name
  object _value
  Type _type
Свойства:
  object Value
  string Name
  Type ObjectType
Методы:
  void .ctor(string entryName, object entryValue, Type entryType)
  object get_Value()
  string get_Name()
  Type get_ObjectType()
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationInfoEnumerator
Наследуется от: object
Поля:
  String[] _members
  Object[] _data
  Type[] _types
  int _numItems
  int _currItem
  bool _current
Свойства:
  object System.Collections.IEnumerator.Current
  SerializationEntry Current
  string Name
  object Value
  Type ObjectType
Методы:
  void .ctor(String[] members, Object[] info, Type[] types, int numItems)
  bool MoveNext()
  object System.Collections.IEnumerator.get_Current()
  SerializationEntry get_Current()
  void Reset()
  string get_Name()
  object get_Value()
  Type get_ObjectType()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.DeserializationEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender)
  IAsyncResult BeginInvoke(object sender, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(StreamingContext context)
  IAsyncResult BeginInvoke(StreamingContext context, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatter
Наследуется от: object
Поля:
  ObjectIDGenerator m_idGenerator
  Queue m_objectQueue
Свойства:
  ISurrogateSelector SurrogateSelector
  SerializationBinder Binder
  StreamingContext Context
Методы:
  void .ctor()
  object Deserialize(Stream serializationStream)
  object GetNext(Int64& objID)
  long Schedule(object obj)
  void Serialize(Stream serializationStream, object graph)
  void WriteArray(object obj, string name, Type memberType)
  void WriteBoolean(bool val, string name)
  void WriteByte(byte val, string name)
  void WriteChar(char val, string name)
  void WriteDateTime(DateTime val, string name)
  void WriteDecimal(decimal val, string name)
  void WriteDouble(double val, string name)
  void WriteInt16(short val, string name)
  void WriteInt32(int val, string name)
  void WriteInt64(long val, string name)
  void WriteObjectRef(object obj, string name, Type memberType)
  void WriteMember(string memberName, object data)
  void WriteSByte(sbyte val, string name)
  void WriteSingle(float val, string name)
  void WriteTimeSpan(TimeSpan val, string name)
  void WriteUInt16(ushort val, string name)
  void WriteUInt32(UInt32 val, string name)
  void WriteUInt64(ulong val, string name)
  void WriteValueType(object obj, string name, Type memberType)
  ISurrogateSelector get_SurrogateSelector()
  void set_SurrogateSelector(ISurrogateSelector value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
--------------------------------------------------
Класс: System.Runtime.Serialization.FormatterConverter
Наследуется от: object
Поля:
Свойства:
Методы:
  object Convert(object value, Type type)
  object Convert(object value, TypeCode typeCode)
  bool ToBoolean(object value)
  char ToChar(object value)
  sbyte ToSByte(object value)
  byte ToByte(object value)
  short ToInt16(object value)
  ushort ToUInt16(object value)
  int ToInt32(object value)
  UInt32 ToUInt32(object value)
  long ToInt64(object value)
  ulong ToUInt64(object value)
  float ToSingle(object value)
  double ToDouble(object value)
  decimal ToDecimal(object value)
  DateTime ToDateTime(object value)
  string ToString(object value)
  void ThrowValueNullException()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.ISerializationSurrogate
Поля:
Свойства:
Методы:
  void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
  object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
--------------------------------------------------
Класс: System.Runtime.Serialization.ISurrogateSelector
Поля:
Свойства:
Методы:
  void ChainSelector(ISurrogateSelector selector)
  ISerializationSurrogate GetSurrogate(Type type, StreamingContext context, ISurrogateSelector& selector)
  ISurrogateSelector GetNextSelector()
--------------------------------------------------
Класс: System.Runtime.Serialization.MemberHolder
Наследуется от: object
Поля:
  MemberInfo[] _members
  Type _memberType
  StreamingContext _context
Свойства:
Методы:
  void .ctor(Type type, StreamingContext ctx)
  int GetHashCode()
  bool Equals(object obj)
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationBinder
Наследуется от: object
Поля:
Свойства:
Методы:
  void BindToName(Type serializedType, String& assemblyName, String& typeName)
  Type BindToType(string assemblyName, string typeName)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationEvents
Наследуется от: object
Поля:
  List`1<MethodInfo> _onSerializingMethods
  List`1<MethodInfo> _onSerializedMethods
  List`1<MethodInfo> _onDeserializingMethods
  List`1<MethodInfo> _onDeserializedMethods
Свойства:
  bool HasOnSerializingEvents
Методы:
  void .ctor(Type t)
  List`1<MethodInfo> GetMethodsWithAttribute(Type attribute, Type t)
  bool get_HasOnSerializingEvents()
  void InvokeOnSerializing(object obj, StreamingContext context)
  void InvokeOnDeserializing(object obj, StreamingContext context)
  void InvokeOnDeserialized(object obj, StreamingContext context)
  SerializationEventHandler AddOnSerialized(object obj, SerializationEventHandler handler)
  SerializationEventHandler AddOnDeserialized(object obj, SerializationEventHandler handler)
  void InvokeOnDelegate(object obj, StreamingContext context, List`1<MethodInfo> methods)
  SerializationEventHandler AddOnDelegate(object obj, SerializationEventHandler handler, List`1<MethodInfo> methods)
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationEventsCache
Наследуется от: object
Поля:
  ConcurrentDictionary`2<Type, SerializationEvents> s_cache
Свойства:
Методы:
  SerializationEvents GetSerializationEventsForType(Type t)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationObjectManager
Наследуется от: object
Поля:
  Dictionary`2<object, object> _objectSeenTable
  StreamingContext _context
  SerializationEventHandler _onSerializedHandler
Свойства:
Методы:
  void .ctor(StreamingContext context)
  void RegisterObject(object obj)
  void RaiseOnSerializedEvent()
  void AddOnSerialized(object obj)
--------------------------------------------------
Класс: System.Runtime.Serialization.ValueTypeFixupInfo
Наследуется от: object
Поля:
  long _containerID
  FieldInfo _parentField
  Int32[] _parentIndex
Свойства:
  long ContainerID
  FieldInfo ParentField
  Int32[] ParentIndex
Методы:
  void .ctor(long containerID, FieldInfo member, Int32[] parentIndex)
  long get_ContainerID()
  FieldInfo get_ParentField()
  Int32[] get_ParentIndex()
--------------------------------------------------
Класс: System.Runtime.Serialization.FormatterServices
Наследуется от: object
Поля:
  ConcurrentDictionary`2<MemberHolder, MemberInfo[]> m_MemberInfoTable
  bool unsafeTypeForwardersIsEnabled
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) unsafeTypeForwardersIsEnabledInitialized
  Type[] advancedTypes
  Binder s_binder
Свойства:
Методы:
  void .cctor()
  MemberInfo[] GetSerializableMembers(RuntimeType type)
  bool CheckSerializable(RuntimeType type)
  MemberInfo[] InternalGetSerializableMembers(RuntimeType type)
  bool GetParentTypes(RuntimeType parentType, RuntimeType[]& parentTypes, Int32& parentTypeCount)
  MemberInfo[] GetSerializableMembers(Type type)
  MemberInfo[] GetSerializableMembers(Type type, StreamingContext context)
  void CheckTypeSecurity(Type t, TypeFilterLevel securityLevel)
  object GetUninitializedObject(Type type)
  object GetSafeUninitializedObject(Type type)
  object nativeGetUninitializedObject(RuntimeType type)
  object nativeGetSafeUninitializedObject(RuntimeType type)
  bool GetEnableUnsafeTypeForwarders()
  bool UnsafeTypeForwardersIsEnabled()
  void SerializationSetValue(MemberInfo fi, object target, object value)
  object PopulateObjectMembers(object obj, MemberInfo[] members, Object[] data)
  Object[] GetObjectData(object obj, MemberInfo[] members)
  ISerializationSurrogate GetSurrogateForCyclicalReference(ISerializationSurrogate innerSurrogate)
  Type GetTypeFromAssembly(Assembly assem, string name)
  Assembly LoadAssemblyFromString(string assemblyName)
  Assembly LoadAssemblyFromStringNoThrow(string assemblyName)
  string GetClrAssemblyName(Type type, Boolean& hasTypeForwardedFrom)
  string GetClrTypeFullName(Type type)
  string GetClrTypeFullNameForArray(Type type)
  string GetClrTypeFullNameForNonArrayTypes(Type type)
--------------------------------------------------
Класс: System.Runtime.Serialization.SurrogateForCyclicalReference
Наследуется от: object
Поля:
  ISerializationSurrogate innerSurrogate
Свойства:
Методы:
  void .ctor(ISerializationSurrogate innerSurrogate)
  void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
  object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
--------------------------------------------------
Класс: System.Runtime.Serialization.IFormatter
Поля:
Свойства:
  ISurrogateSelector SurrogateSelector
  SerializationBinder Binder
  StreamingContext Context
Методы:
  object Deserialize(Stream serializationStream)
  void Serialize(Stream serializationStream, object graph)
  ISurrogateSelector get_SurrogateSelector()
  void set_SurrogateSelector(ISurrogateSelector value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
--------------------------------------------------
Класс: System.Runtime.Serialization.ObjectCloneHelper
Наследуется от: object
Поля:
  IFormatterConverter s_converter
  StreamingContext s_cloneContext
  ISerializationSurrogate s_RemotingSurrogate
  ISerializationSurrogate s_ObjRefRemotingSurrogate
Свойства:
Методы:
  object GetObjectData(object serObj, String& typeName, String& assemName, String[]& fieldNames, Object[]& fieldValues)
  SerializationInfo PrepareConstructorArgs(object serObj, String[] fieldNames, Object[] fieldValues, StreamingContext& context)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.ObjectIDGenerator
Наследуется от: object
Поля:
  int numbins
  int m_currentCount
  int m_currentSize
  Int64[] m_ids
  Object[] m_objs
  Int32[] sizes
Свойства:
Методы:
  void .ctor()
  int FindElement(object obj, Boolean& found)
  long GetId(object obj, Boolean& firstTime)
  long HasId(object obj, Boolean& firstTime)
  void Rehash()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.ObjectManager
Наследуется от: object
Поля:
  int DefaultInitialSize
  int MaxArraySize
  int ArrayMask
  int MaxReferenceDepth
  DeserializationEventHandler m_onDeserializationHandler
  SerializationEventHandler m_onDeserializedHandler
  ObjectHolder[] m_objects
  object m_topObject
  ObjectHolderList m_specialFixupObjects
  long m_fixupCount
  ISurrogateSelector m_selector
  StreamingContext m_context
Свойства:
  object TopObject
  ObjectHolderList SpecialFixupObjects
Методы:
  void .ctor(ISurrogateSelector selector, StreamingContext context)
  void .ctor(ISurrogateSelector selector, StreamingContext context, bool checkSecurity, bool isCrossAppDomain)
  bool CanCallGetType(object obj)
  void set_TopObject(object value)
  object get_TopObject()
  ObjectHolderList get_SpecialFixupObjects()
  void .cctor()
  ObjectHolder FindObjectHolder(long objectID)
  ObjectHolder FindOrCreateObjectHolder(long objectID)
  void AddObjectHolder(ObjectHolder holder)
  bool GetCompletionInfo(FixupHolder fixup, ObjectHolder& holder, Object& member, bool bThrowIfMissing)
  void FixupSpecialObject(ObjectHolder holder)
  bool ResolveObjectReference(ObjectHolder holder)
  bool DoValueTypeFixup(FieldInfo memberToFix, ObjectHolder holder, object value)
  void DumpValueTypeFixup(object obj, FieldInfo[] intermediateFields, FieldInfo memberToFix, object value)
  void CompleteObject(ObjectHolder holder, bool bObjectFullyComplete)
  void DoNewlyRegisteredObjectFixups(ObjectHolder holder)
  object GetObject(long objectID)
  void RegisterObject(object obj, long objectID)
  void RegisterObject(object obj, long objectID, SerializationInfo info)
  void RegisterObject(object obj, long objectID, SerializationInfo info, long idOfContainingObj, MemberInfo member)
  void RegisterString(string obj, long objectID, SerializationInfo info, long idOfContainingObj, MemberInfo member)
  void RegisterObject(object obj, long objectID, SerializationInfo info, long idOfContainingObj, MemberInfo member, Int32[] arrayIndex)
  void CompleteISerializableObject(object obj, SerializationInfo info, StreamingContext context)
  RuntimeConstructorInfo GetConstructor(RuntimeType t)
  void DoFixups()
  void RegisterFixup(FixupHolder fixup, long objectToBeFixed, long objectRequired)
  void RecordFixup(long objectToBeFixed, MemberInfo member, long objectRequired)
  void RecordDelayedFixup(long objectToBeFixed, string memberName, long objectRequired)
  void RecordArrayElementFixup(long arrayToBeFixed, int index, long objectRequired)
  void RecordArrayElementFixup(long arrayToBeFixed, Int32[] indices, long objectRequired)
  void RaiseDeserializationEvent()
  void AddOnDeserialization(DeserializationEventHandler handler)
  void RemoveOnDeserialization(DeserializationEventHandler handler)
  void AddOnDeserialized(object obj)
  void RaiseOnDeserializedEvent(object obj)
  void RaiseOnDeserializingEvent(object obj)
--------------------------------------------------
Класс: System.Runtime.Serialization.ObjectHolder
Наследуется от: object
Поля:
  int INCOMPLETE_OBJECT_REFERENCE
  int HAS_ISERIALIZABLE
  int HAS_SURROGATE
  int REQUIRES_VALUETYPE_FIXUP
  int REQUIRES_DELAYED_FIXUP
  int SER_INFO_FIXED
  int VALUETYPE_FIXUP_PERFORMED
  object m_object
  long m_id
  int m_missingElementsRemaining
  int m_missingDecendents
  SerializationInfo m_serInfo
  ISerializationSurrogate m_surrogate
  FixupHolderList m_missingElements
  LongList m_dependentObjects
  ObjectHolder m_next
  int m_flags
  bool m_markForFixupWhenAvailable
  ValueTypeFixupInfo m_valueFixup
  TypeLoadExceptionHolder m_typeLoad
  bool m_reachable
Свойства:
  bool IsIncompleteObjectReference
  bool RequiresDelayedFixup
  bool RequiresValueTypeFixup
  bool ValueTypeFixupPerformed
  bool HasISerializable
  bool HasSurrogate
  bool CanSurrogatedObjectValueChange
  bool CanObjectValueChange
  int DirectlyDependentObjects
  int TotalDependentObjects
  bool Reachable
  bool TypeLoadExceptionReachable
  TypeLoadExceptionHolder TypeLoadException
  object ObjectValue
  SerializationInfo SerializationInfo
  ISerializationSurrogate Surrogate
  LongList DependentObjects
  bool RequiresSerInfoFixup
  ValueTypeFixupInfo ValueFixup
  bool CompletelyFixed
  long ContainerID
Методы:
  void .ctor(long objID)
  void .ctor(object obj, long objID, SerializationInfo info, ISerializationSurrogate surrogate, long idOfContainingObj, FieldInfo field, Int32[] arrayIndex)
  void .ctor(string obj, long objID, SerializationInfo info, ISerializationSurrogate surrogate, long idOfContainingObj, FieldInfo field, Int32[] arrayIndex)
  void IncrementDescendentFixups(int amount)
  void DecrementFixupsRemaining(ObjectManager manager)
  void RemoveDependency(long id)
  void AddFixup(FixupHolder fixup, ObjectManager manager)
  void UpdateDescendentDependencyChain(int amount, ObjectManager manager)
  void AddDependency(long dependentObject)
  void UpdateData(object obj, SerializationInfo info, ISerializationSurrogate surrogate, long idOfContainer, FieldInfo field, Int32[] arrayIndex, ObjectManager manager)
  void MarkForCompletionWhenAvailable()
  void SetFlags()
  bool get_IsIncompleteObjectReference()
  void set_IsIncompleteObjectReference(bool value)
  bool get_RequiresDelayedFixup()
  bool get_RequiresValueTypeFixup()
  bool get_ValueTypeFixupPerformed()
  void set_ValueTypeFixupPerformed(bool value)
  bool get_HasISerializable()
  bool get_HasSurrogate()
  bool get_CanSurrogatedObjectValueChange()
  bool get_CanObjectValueChange()
  int get_DirectlyDependentObjects()
  int get_TotalDependentObjects()
  bool get_Reachable()
  void set_Reachable(bool value)
  bool get_TypeLoadExceptionReachable()
  TypeLoadExceptionHolder get_TypeLoadException()
  void set_TypeLoadException(TypeLoadExceptionHolder value)
  object get_ObjectValue()
  void SetObjectValue(object obj, ObjectManager manager)
  SerializationInfo get_SerializationInfo()
  void set_SerializationInfo(SerializationInfo value)
  ISerializationSurrogate get_Surrogate()
  LongList get_DependentObjects()
  void set_DependentObjects(LongList value)
  bool get_RequiresSerInfoFixup()
  void set_RequiresSerInfoFixup(bool value)
  ValueTypeFixupInfo get_ValueFixup()
  bool get_CompletelyFixed()
  long get_ContainerID()
--------------------------------------------------
Класс: System.Runtime.Serialization.FixupHolder
Наследуется от: object
Поля:
  int ArrayFixup
  int MemberFixup
  int DelayedFixup
  long m_id
  object m_fixupInfo
  int m_fixupType
Свойства:
Методы:
  void .ctor(long id, object fixupInfo, int fixupType)
--------------------------------------------------
Класс: System.Runtime.Serialization.FixupHolderList
Наследуется от: object
Поля:
  int InitialSize
  FixupHolder[] m_values
  int m_count
Свойства:
Методы:
  void .ctor()
  void .ctor(int startingSize)
  void Add(long id, object fixupInfo)
  void Add(FixupHolder fixup)
  void EnlargeArray()
--------------------------------------------------
Класс: System.Runtime.Serialization.LongList
Наследуется от: object
Поля:
  int InitialSize
  Int64[] m_values
  int m_count
  int m_totalItems
  int m_currentItem
Свойства:
  int Count
  long Current
Методы:
  void .ctor()
  void .ctor(int startingSize)
  void Add(long value)
  int get_Count()
  void StartEnumeration()
  bool MoveNext()
  long get_Current()
  bool RemoveElement(long value)
  void EnlargeArray()
--------------------------------------------------
Класс: System.Runtime.Serialization.ObjectHolderList
Наследуется от: object
Поля:
  int DefaultInitialSize
  ObjectHolder[] m_values
  int m_count
Свойства:
  int Version
  int Count
Методы:
  void .ctor()
  void .ctor(int startingSize)
  void Add(ObjectHolder value)
  ObjectHolderListEnumerator GetFixupEnumerator()
  void EnlargeArray()
  int get_Version()
  int get_Count()
--------------------------------------------------
Класс: System.Runtime.Serialization.ObjectHolderListEnumerator
Наследуется от: object
Поля:
  bool m_isFixupEnumerator
  ObjectHolderList m_list
  int m_startingVersion
  int m_currPos
Свойства:
  ObjectHolder Current
Методы:
  void .ctor(ObjectHolderList list, bool isFixupEnumerator)
  bool MoveNext()
  ObjectHolder get_Current()
--------------------------------------------------
Класс: System.Runtime.Serialization.TypeLoadExceptionHolder
Наследуется от: object
Поля:
  string m_typeName
Свойства:
  string TypeName
Методы:
  void .ctor(string typeName)
  string get_TypeName()
--------------------------------------------------
Класс: System.Runtime.Serialization.SafeSerializationEventArgs
Наследуется от: EventArgs
Поля:
  StreamingContext m_streamingContext
  List`1<object> m_serializedStates
Свойства:
  IList`1<object> SerializedStates
  StreamingContext StreamingContext
Методы:
  void .ctor(StreamingContext streamingContext)
  void AddSerializedState(ISafeSerializationData serializedState)
  IList`1<object> get_SerializedStates()
  StreamingContext get_StreamingContext()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.ISafeSerializationData
Поля:
Свойства:
Методы:
  void CompleteDeserialization(object deserialized)
--------------------------------------------------
Класс: System.Runtime.Serialization.SafeSerializationManager
Наследуется от: object
Поля:
  IList`1<object> m_serializedStates
  SerializationInfo m_savedSerializationInfo
  object m_realObject
  RuntimeType m_realType
  EventHandler`1<SafeSerializationEventArgs> SerializeObjectState
  string RealTypeSerializationName
Свойства:
  bool IsActive
Методы:
  void add_SerializeObjectState(EventHandler`1<SafeSerializationEventArgs> value)
  void remove_SerializeObjectState(EventHandler`1<SafeSerializationEventArgs> value)
  void .ctor()
  void .ctor(SerializationInfo info, StreamingContext context)
  bool get_IsActive()
  void CompleteSerialization(object serializedObject, SerializationInfo info, StreamingContext context)
  void CompleteDeserialization(object deserializedObject)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  object System.Runtime.Serialization.IObjectReference.GetRealObject(StreamingContext context)
  void OnDeserialized(StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Serialization.OptionalFieldAttribute
Наследуется от: Attribute
Поля:
  int versionAdded
Свойства:
  int VersionAdded
Методы:
  void .ctor()
  int get_VersionAdded()
  void set_VersionAdded(int value)
--------------------------------------------------
Класс: System.Runtime.Serialization.OnSerializingAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.OnSerializedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.OnDeserializingAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.OnDeserializedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationFieldInfo
Наследуется от: FieldInfo
Поля:
  string FakeNameSeparatorString
  RuntimeFieldInfo m_field
  string m_serializationName
  RemotingFieldCachedData m_cachedData
Свойства:
  Module Module
  int MetadataToken
  string Name
  Type DeclaringType
  Type ReflectedType
  Type FieldType
  RuntimeFieldInfo FieldInfo
  RuntimeFieldHandle FieldHandle
  FieldAttributes Attributes
  RemotingFieldCachedData RemotingCache
Методы:
  Module get_Module()
  int get_MetadataToken()
  void .ctor(RuntimeFieldInfo field, string namePrefix)
  string get_Name()
  Type get_DeclaringType()
  Type get_ReflectedType()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  Type get_FieldType()
  object GetValue(object obj)
  object InternalGetValue(object obj)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  void InternalSetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  RuntimeFieldInfo get_FieldInfo()
  RuntimeFieldHandle get_FieldHandle()
  FieldAttributes get_Attributes()
  RemotingFieldCachedData get_RemotingCache()
--------------------------------------------------
Класс: System.Runtime.Serialization.SerializationInfo
Наследуется от: object
Поля:
  int defaultSize
  string s_mscorlibAssemblySimpleName
  string s_mscorlibFileName
  String[] m_members
  Object[] m_data
  Type[] m_types
  Dictionary`2<string, int> m_nameToIndex
  int m_currMember
  IFormatterConverter m_converter
  string m_fullTypeName
  string m_assemName
  Type objectType
  bool isFullTypeNameSetExplicit
  bool isAssemblyNameSetExplicit
  bool requireSameTokenInPartialTrust
Свойства:
  string FullTypeName
  string AssemblyName
  int MemberCount
  Type ObjectType
  bool IsFullTypeNameSetExplicit
  bool IsAssemblyNameSetExplicit
  String[] MemberNames
  Object[] MemberValues
Методы:
  void .ctor(Type type, IFormatterConverter converter)
  void .ctor(Type type, IFormatterConverter converter, bool requireSameTokenInPartialTrust)
  string get_FullTypeName()
  void set_FullTypeName(string value)
  string get_AssemblyName()
  void set_AssemblyName(string value)
  void SetType(Type type)
  bool Compare(Byte[] a, Byte[] b)
  void DemandForUnsafeAssemblyNameAssignments(string originalAssemblyName, string newAssemblyName)
  bool IsAssemblyNameAssignmentSafe(string originalAssemblyName, string newAssemblyName)
  int get_MemberCount()
  Type get_ObjectType()
  bool get_IsFullTypeNameSetExplicit()
  bool get_IsAssemblyNameSetExplicit()
  SerializationInfoEnumerator GetEnumerator()
  void ExpandArrays()
  void AddValue(string name, object value, Type type)
  void AddValue(string name, object value)
  void AddValue(string name, bool value)
  void AddValue(string name, char value)
  void AddValue(string name, sbyte value)
  void AddValue(string name, byte value)
  void AddValue(string name, short value)
  void AddValue(string name, ushort value)
  void AddValue(string name, int value)
  void AddValue(string name, UInt32 value)
  void AddValue(string name, long value)
  void AddValue(string name, ulong value)
  void AddValue(string name, float value)
  void AddValue(string name, double value)
  void AddValue(string name, decimal value)
  void AddValue(string name, DateTime value)
  void AddValueInternal(string name, object value, Type type)
  void UpdateValue(string name, object value, Type type)
  int FindElement(string name)
  object GetElement(string name, Type& foundType)
  object GetElementNoThrow(string name, Type& foundType)
  object GetValue(string name, Type type)
  object GetValueNoThrow(string name, Type type)
  bool GetBoolean(string name)
  char GetChar(string name)
  sbyte GetSByte(string name)
  byte GetByte(string name)
  short GetInt16(string name)
  ushort GetUInt16(string name)
  int GetInt32(string name)
  UInt32 GetUInt32(string name)
  long GetInt64(string name)
  ulong GetUInt64(string name)
  float GetSingle(string name)
  double GetDouble(string name)
  decimal GetDecimal(string name)
  DateTime GetDateTime(string name)
  string GetString(string name)
  String[] get_MemberNames()
  Object[] get_MemberValues()
--------------------------------------------------
Класс: System.Runtime.Serialization.StreamingContext
Наследуется от: ValueType
Поля:
  object m_additionalContext
  StreamingContextStates m_state
Свойства:
  object Context
  StreamingContextStates State
Методы:
  void .ctor(StreamingContextStates state)
  void .ctor(StreamingContextStates state, object additional)
  object get_Context()
  bool Equals(object obj)
  int GetHashCode()
  StreamingContextStates get_State()
--------------------------------------------------
Класс: System.Runtime.Serialization.StreamingContextStates
Наследуется от: Enum
Поля:
  int value__
  StreamingContextStates CrossProcess
  StreamingContextStates CrossMachine
  StreamingContextStates File
  StreamingContextStates Persistence
  StreamingContextStates Remoting
  StreamingContextStates Other
  StreamingContextStates Clone
  StreamingContextStates CrossAppDomain
  StreamingContextStates All
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.SurrogateSelector
Наследуется от: object
Поля:
  SurrogateHashtable m_surrogates
  ISurrogateSelector m_nextSelector
Свойства:
Методы:
  void .ctor()
  void AddSurrogate(Type type, StreamingContext context, ISerializationSurrogate surrogate)
  bool HasCycle(ISurrogateSelector selector)
  void ChainSelector(ISurrogateSelector selector)
  ISurrogateSelector GetNextSelector()
  ISerializationSurrogate GetSurrogate(Type type, StreamingContext context, ISurrogateSelector& selector)
  void RemoveSurrogate(Type type, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Serialization.SurrogateKey
Наследуется от: object
Поля:
  Type m_type
  StreamingContext m_context
Свойства:
Методы:
  void .ctor(Type type, StreamingContext context)
  int GetHashCode()
--------------------------------------------------
Класс: System.Runtime.Serialization.SurrogateHashtable
Наследуется от: Hashtable
Поля:
Свойства:
Методы:
  void .ctor(int size)
  bool KeyEquals(object key, object item)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.FormatterTypeStyle
Наследуется от: Enum
Поля:
  int value__
  FormatterTypeStyle TypesWhenNeeded
  FormatterTypeStyle TypesAlways
  FormatterTypeStyle XsdString
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
Наследуется от: Enum
Поля:
  int value__
  FormatterAssemblyStyle Simple
  FormatterAssemblyStyle Full
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.TypeFilterLevel
Наследуется от: Enum
Поля:
  int value__
  TypeFilterLevel Low
  TypeFilterLevel Full
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.IFieldInfo
Поля:
Свойства:
  String[] FieldNames
  Type[] FieldTypes
Методы:
  String[] get_FieldNames()
  void set_FieldNames(String[] value)
  Type[] get_FieldTypes()
  void set_FieldTypes(Type[] value)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.ISoapMessage
Поля:
Свойства:
  String[] ParamNames
  Object[] ParamValues
  Type[] ParamTypes
  string MethodName
  string XmlNameSpace
  Header[] Headers
Методы:
  String[] get_ParamNames()
  void set_ParamNames(String[] value)
  Object[] get_ParamValues()
  void set_ParamValues(Object[] value)
  Type[] get_ParamTypes()
  void set_ParamTypes(Type[] value)
  string get_MethodName()
  void set_MethodName(string value)
  string get_XmlNameSpace()
  void set_XmlNameSpace(string value)
  Header[] get_Headers()
  void set_Headers(Header[] value)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.InternalRM
Наследуется от: object
Поля:
Свойства:
Методы:
  void InfoSoap(Object[] messages)
  bool SoapCheckEnabled()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.InternalST
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void InfoSoap(Object[] messages)
  bool SoapCheckEnabled()
  void Soap(Object[] messages)
  void SoapAssert(bool condition, string message)
  void SerializationSetValue(FieldInfo fi, object target, object value)
  Assembly LoadAssemblyFromString(string assemblyString)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.SerTrace
Наследуется от: object
Поля:
Свойства:
Методы:
  void InfoLog(Object[] messages)
  void Log(Object[] messages)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.SoapFault
Наследуется от: object
Поля:
  string faultCode
  string faultString
  string faultActor
  object detail
Свойства:
  string FaultCode
  string FaultString
  string FaultActor
  object Detail
Методы:
  void .ctor()
  void .ctor(string faultCode, string faultString, string faultActor, ServerFault serverFault)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_FaultCode()
  void set_FaultCode(string value)
  string get_FaultString()
  void set_FaultString(string value)
  string get_FaultActor()
  void set_FaultActor(string value)
  object get_Detail()
  void set_Detail(object value)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.ServerFault
Наследуется от: object
Поля:
  string exceptionType
  string message
  string stackTrace
  Exception exception
Свойства:
  string ExceptionType
  string ExceptionMessage
  string StackTrace
  Exception Exception
Методы:
  void .ctor(Exception exception)
  void .ctor(string exceptionType, string message, string stackTrace)
  string get_ExceptionType()
  void set_ExceptionType(string value)
  string get_ExceptionMessage()
  void set_ExceptionMessage(string value)
  string get_StackTrace()
  void set_StackTrace(string value)
  Exception get_Exception()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.SoapMessage
Наследуется от: object
Поля:
  String[] paramNames
  Object[] paramValues
  Type[] paramTypes
  string methodName
  string xmlNameSpace
  Header[] headers
Свойства:
  String[] ParamNames
  Object[] ParamValues
  Type[] ParamTypes
  string MethodName
  string XmlNameSpace
  Header[] Headers
Методы:
  String[] get_ParamNames()
  void set_ParamNames(String[] value)
  Object[] get_ParamValues()
  void set_ParamValues(Object[] value)
  Type[] get_ParamTypes()
  void set_ParamTypes(Type[] value)
  string get_MethodName()
  void set_MethodName(string value)
  string get_XmlNameSpace()
  void set_XmlNameSpace(string value)
  Header[] get_Headers()
  void set_Headers(Header[] value)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum
Наследуется от: Enum
Поля:
  int value__
  BinaryHeaderEnum SerializedStreamHeader
  BinaryHeaderEnum Object
  BinaryHeaderEnum ObjectWithMap
  BinaryHeaderEnum ObjectWithMapAssemId
  BinaryHeaderEnum ObjectWithMapTyped
  BinaryHeaderEnum ObjectWithMapTypedAssemId
  BinaryHeaderEnum ObjectString
  BinaryHeaderEnum Array
  BinaryHeaderEnum MemberPrimitiveTyped
  BinaryHeaderEnum MemberReference
  BinaryHeaderEnum ObjectNull
  BinaryHeaderEnum MessageEnd
  BinaryHeaderEnum Assembly
  BinaryHeaderEnum ObjectNullMultiple256
  BinaryHeaderEnum ObjectNullMultiple
  BinaryHeaderEnum ArraySinglePrimitive
  BinaryHeaderEnum ArraySingleObject
  BinaryHeaderEnum ArraySingleString
  BinaryHeaderEnum CrossAppDomainMap
  BinaryHeaderEnum CrossAppDomainString
  BinaryHeaderEnum CrossAppDomainAssembly
  BinaryHeaderEnum MethodCall
  BinaryHeaderEnum MethodReturn
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum
Наследуется от: Enum
Поля:
  int value__
  BinaryTypeEnum Primitive
  BinaryTypeEnum String
  BinaryTypeEnum Object
  BinaryTypeEnum ObjectUrt
  BinaryTypeEnum ObjectUser
  BinaryTypeEnum ObjectArray
  BinaryTypeEnum StringArray
  BinaryTypeEnum PrimitiveArray
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum
Наследуется от: Enum
Поля:
  int value__
  BinaryArrayTypeEnum Single
  BinaryArrayTypeEnum Jagged
  BinaryArrayTypeEnum Rectangular
  BinaryArrayTypeEnum SingleOffset
  BinaryArrayTypeEnum JaggedOffset
  BinaryArrayTypeEnum RectangularOffset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE
Наследуется от: Enum
Поля:
  int value__
  InternalSerializerTypeE Soap
  InternalSerializerTypeE Binary
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE
Наследуется от: Enum
Поля:
  int value__
  InternalParseTypeE Empty
  InternalParseTypeE SerializedStreamHeader
  InternalParseTypeE Object
  InternalParseTypeE Member
  InternalParseTypeE ObjectEnd
  InternalParseTypeE MemberEnd
  InternalParseTypeE Headers
  InternalParseTypeE HeadersEnd
  InternalParseTypeE SerializedStreamHeaderEnd
  InternalParseTypeE Envelope
  InternalParseTypeE EnvelopeEnd
  InternalParseTypeE Body
  InternalParseTypeE BodyEnd
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalObjectTypeE
Наследуется от: Enum
Поля:
  int value__
  InternalObjectTypeE Empty
  InternalObjectTypeE Object
  InternalObjectTypeE Array
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalObjectPositionE
Наследуется от: Enum
Поля:
  int value__
  InternalObjectPositionE Empty
  InternalObjectPositionE Top
  InternalObjectPositionE Child
  InternalObjectPositionE Headers
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalArrayTypeE
Наследуется от: Enum
Поля:
  int value__
  InternalArrayTypeE Empty
  InternalArrayTypeE Single
  InternalArrayTypeE Jagged
  InternalArrayTypeE Rectangular
  InternalArrayTypeE Base64
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalMemberTypeE
Наследуется от: Enum
Поля:
  int value__
  InternalMemberTypeE Empty
  InternalMemberTypeE Header
  InternalMemberTypeE Field
  InternalMemberTypeE Item
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalMemberValueE
Наследуется от: Enum
Поля:
  int value__
  InternalMemberValueE Empty
  InternalMemberValueE InlineValue
  InternalMemberValueE Nested
  InternalMemberValueE Reference
  InternalMemberValueE Null
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE
Наследуется от: Enum
Поля:
  int value__
  InternalPrimitiveTypeE Invalid
  InternalPrimitiveTypeE Boolean
  InternalPrimitiveTypeE Byte
  InternalPrimitiveTypeE Char
  InternalPrimitiveTypeE Currency
  InternalPrimitiveTypeE Decimal
  InternalPrimitiveTypeE Double
  InternalPrimitiveTypeE Int16
  InternalPrimitiveTypeE Int32
  InternalPrimitiveTypeE Int64
  InternalPrimitiveTypeE SByte
  InternalPrimitiveTypeE Single
  InternalPrimitiveTypeE TimeSpan
  InternalPrimitiveTypeE DateTime
  InternalPrimitiveTypeE UInt16
  InternalPrimitiveTypeE UInt32
  InternalPrimitiveTypeE UInt64
  InternalPrimitiveTypeE Null
  InternalPrimitiveTypeE String
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ValueFixupEnum
Наследуется от: Enum
Поля:
  int value__
  ValueFixupEnum Empty
  ValueFixupEnum Array
  ValueFixupEnum Header
  ValueFixupEnum Member
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalNameSpaceE
Наследуется от: Enum
Поля:
  int value__
  InternalNameSpaceE None
  InternalNameSpaceE Soap
  InternalNameSpaceE XdrPrimitive
  InternalNameSpaceE XdrString
  InternalNameSpaceE UrtSystem
  InternalNameSpaceE UrtUser
  InternalNameSpaceE UserNameSpace
  InternalNameSpaceE MemberName
  InternalNameSpaceE Interop
  InternalNameSpaceE CallElement
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryConverter
Наследуется от: object
Поля:
Свойства:
Методы:
  BinaryTypeEnum GetBinaryTypeInfo(Type type, WriteObjectInfo objectInfo, string typeName, ObjectWriter objectWriter, Object& typeInformation, Int32& assemId)
  BinaryTypeEnum GetParserBinaryTypeInfo(Type type, Object& typeInformation)
  void WriteTypeInfo(BinaryTypeEnum binaryTypeEnum, object typeInformation, int assemId, __BinaryWriter sout)
  object ReadTypeInfo(BinaryTypeEnum binaryTypeEnum, __BinaryParser input, Int32& assemId)
  void TypeFromInfo(BinaryTypeEnum binaryTypeEnum, object typeInformation, ObjectReader objectReader, BinaryAssemblyInfo assemblyInfo, InternalPrimitiveTypeE& primitiveTypeEnum, String& typeString, Type& type, Boolean& isVariant)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.IOUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  bool FlagTest(MessageEnum flag, MessageEnum target)
  void WriteStringWithCode(string value, __BinaryWriter sout)
  void WriteWithCode(Type type, object value, __BinaryWriter sout)
  object ReadWithCode(__BinaryParser input)
  Object[] ReadArgs(__BinaryParser input)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void NVTraceI(string name, string value)
  void NVTraceI(string name, object value)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.IStreamable
Поля:
Свойства:
Методы:
  void Read(__BinaryParser input)
  void Write(__BinaryWriter sout)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo
Наследуется от: object
Поля:
  string assemblyString
  Assembly assembly
Свойства:
Методы:
  void .ctor(string assemblyString)
  void .ctor(string assemblyString, Assembly assembly)
  Assembly GetAssembly()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord
Наследуется от: object
Поля:
  int binaryFormatterMajorVersion
  int binaryFormatterMinorVersion
  BinaryHeaderEnum binaryHeaderEnum
  int topId
  int headerId
  int majorVersion
  int minorVersion
Свойства:
Методы:
  void .ctor()
  void .ctor(BinaryHeaderEnum binaryHeaderEnum, int topId, int headerId, int majorVersion, int minorVersion)
  void Write(__BinaryWriter sout)
  int GetInt32(Byte[] buffer, int index)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryAssembly
Наследуется от: object
Поля:
  int assemId
  string assemblyString
Свойства:
Методы:
  void .ctor()
  void Set(int assemId, string assemblyString)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly
Наследуется от: object
Поля:
  int assemId
  int assemblyIndex
Свойства:
Методы:
  void .ctor()
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryObject
Наследуется от: object
Поля:
  int objectId
  int mapId
Свойства:
Методы:
  void .ctor()
  void Set(int objectId, int mapId)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall
Наследуется от: object
Поля:
  string uri
  string methodName
  string typeName
  Type[] instArgs
  Object[] args
  object methodSignature
  object callContext
  string scallContext
  object properties
  Type[] argTypes
  bool bArgsPrimitive
  MessageEnum messageEnum
  Object[] callA
Свойства:
Методы:
  Object[] WriteArray(string uri, string methodName, string typeName, Type[] instArgs, Object[] args, object methodSignature, object callContext, Object[] properties)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  IMethodCallMessage ReadArray(Object[] callA, object handlerObject)
  void Dump()
  void DumpInternal()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn
Наследуется от: object
Поля:
  object returnValue
  Object[] args
  Exception exception
  object callContext
  string scallContext
  object properties
  Type[] argTypes
  bool bArgsPrimitive
  MessageEnum messageEnum
  Object[] callA
  Type returnType
  object instanceOfVoid
Свойства:
Методы:
  void .cctor()
  void .ctor()
  Object[] WriteArray(object returnValue, Object[] args, Exception exception, object callContext, Object[] properties)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  IMethodReturnMessage ReadArray(Object[] returnA, IMethodCallMessage methodCallMessage, object handlerObject)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryObjectString
Наследуется от: object
Поля:
  int objectId
  string value
Свойства:
Методы:
  void .ctor()
  void Set(int objectId, string value)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainString
Наследуется от: object
Поля:
  int objectId
  int value
Свойства:
Методы:
  void .ctor()
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap
Наследуется от: object
Поля:
  int crossAppDomainArrayIndex
Свойства:
Методы:
  void .ctor()
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped
Наследуется от: object
Поля:
  InternalPrimitiveTypeE primitiveTypeEnum
  object value
Свойства:
Методы:
  void .ctor()
  void Set(InternalPrimitiveTypeE primitiveTypeEnum, object value)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap
Наследуется от: object
Поля:
  BinaryHeaderEnum binaryHeaderEnum
  int objectId
  string name
  int numMembers
  String[] memberNames
  int assemId
Свойства:
Методы:
  void .ctor()
  void .ctor(BinaryHeaderEnum binaryHeaderEnum)
  void Set(int objectId, string name, int numMembers, String[] memberNames, int assemId)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped
Наследуется от: object
Поля:
  BinaryHeaderEnum binaryHeaderEnum
  int objectId
  string name
  int numMembers
  String[] memberNames
  BinaryTypeEnum[] binaryTypeEnumA
  Object[] typeInformationA
  Int32[] memberAssemIds
  int assemId
Свойства:
Методы:
  void .ctor()
  void .ctor(BinaryHeaderEnum binaryHeaderEnum)
  void Set(int objectId, string name, int numMembers, String[] memberNames, BinaryTypeEnum[] binaryTypeEnumA, Object[] typeInformationA, Int32[] memberAssemIds, int assemId)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryArray
Наследуется от: object
Поля:
  int objectId
  int rank
  Int32[] lengthA
  Int32[] lowerBoundA
  BinaryTypeEnum binaryTypeEnum
  object typeInformation
  int assemId
  BinaryHeaderEnum binaryHeaderEnum
  BinaryArrayTypeEnum binaryArrayTypeEnum
Свойства:
Методы:
  void .ctor()
  void .ctor(BinaryHeaderEnum binaryHeaderEnum)
  void Set(int objectId, int rank, Int32[] lengthA, Int32[] lowerBoundA, BinaryTypeEnum binaryTypeEnum, object typeInformation, BinaryArrayTypeEnum binaryArrayTypeEnum, int assemId)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped
Наследуется от: object
Поля:
  InternalPrimitiveTypeE typeInformation
  object value
Свойства:
Методы:
  void .ctor()
  void Set(InternalPrimitiveTypeE typeInformation, object value)
  void Set(InternalPrimitiveTypeE typeInformation)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.MemberReference
Наследуется от: object
Поля:
  int idRef
Свойства:
Методы:
  void .ctor()
  void Set(int idRef)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ObjectNull
Наследуется от: object
Поля:
  int nullCount
Свойства:
Методы:
  void .ctor()
  void SetNullCount(int nullCount)
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Read(__BinaryParser input, BinaryHeaderEnum binaryHeaderEnum)
  void Dump()
  void DumpInternal()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.MessageEnd
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void Write(__BinaryWriter sout)
  void Read(__BinaryParser input)
  void Dump()
  void Dump(Stream sout)
  void DumpInternal(Stream sout)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ObjectMap
Наследуется от: object
Поля:
  string objectName
  Type objectType
  BinaryTypeEnum[] binaryTypeEnumA
  Object[] typeInformationA
  Type[] memberTypes
  String[] memberNames
  ReadObjectInfo objectInfo
  bool isInitObjectInfo
  ObjectReader objectReader
  int objectId
  BinaryAssemblyInfo assemblyInfo
Свойства:
Методы:
  void .ctor(string objectName, Type objectType, String[] memberNames, ObjectReader objectReader, int objectId, BinaryAssemblyInfo assemblyInfo)
  void .ctor(string objectName, String[] memberNames, BinaryTypeEnum[] binaryTypeEnumA, Object[] typeInformationA, Int32[] memberAssemIds, ObjectReader objectReader, int objectId, BinaryAssemblyInfo assemblyInfo, SizedArray assemIdToAssemblyTable)
  ReadObjectInfo CreateObjectInfo(SerializationInfo& si, Object[]& memberData)
  ObjectMap Create(string name, Type objectType, String[] memberNames, ObjectReader objectReader, int objectId, BinaryAssemblyInfo assemblyInfo)
  ObjectMap Create(string name, String[] memberNames, BinaryTypeEnum[] binaryTypeEnumA, Object[] typeInformationA, Int32[] memberAssemIds, ObjectReader objectReader, int objectId, BinaryAssemblyInfo assemblyInfo, SizedArray assemIdToAssemblyTable)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ObjectProgress
Наследуется от: object
Поля:
  int opRecordIdCount
  int opRecordId
  bool isInitial
  int count
  BinaryTypeEnum expectedType
  object expectedTypeInformation
  string name
  InternalObjectTypeE objectTypeEnum
  InternalMemberTypeE memberTypeEnum
  InternalMemberValueE memberValueEnum
  Type dtType
  int numItems
  BinaryTypeEnum binaryTypeEnum
  object typeInformation
  int nullCount
  int memberLength
  BinaryTypeEnum[] binaryTypeEnumA
  Object[] typeInformationA
  String[] memberNames
  Type[] memberTypes
  ParseRecord pr
Свойства:
Методы:
  void .ctor()
  void Counter()
  void Init()
  void ArrayCountIncrement(int value)
  bool GetNext(BinaryTypeEnum& outBinaryTypeEnum, Object& outTypeInformation)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.Converter
Наследуется от: object
Поля:
  int primitiveTypeEnumLength
  Type[] modreq(System.Runtime.CompilerServices.IsVolatile) typeA
  Type[] modreq(System.Runtime.CompilerServices.IsVolatile) arrayTypeA
  String[] modreq(System.Runtime.CompilerServices.IsVolatile) valueA
  TypeCode[] modreq(System.Runtime.CompilerServices.IsVolatile) typeCodeA
  InternalPrimitiveTypeE[] modreq(System.Runtime.CompilerServices.IsVolatile) codeA
  Type typeofISerializable
  Type typeofString
  Type typeofConverter
  Type typeofBoolean
  Type typeofByte
  Type typeofChar
  Type typeofDecimal
  Type typeofDouble
  Type typeofInt16
  Type typeofInt32
  Type typeofInt64
  Type typeofSByte
  Type typeofSingle
  Type typeofTimeSpan
  Type typeofDateTime
  Type typeofUInt16
  Type typeofUInt32
  Type typeofUInt64
  Type typeofObject
  Type typeofSystemVoid
  Assembly urtAssembly
  string urtAssemblyString
  Type typeofTypeArray
  Type typeofObjectArray
  Type typeofStringArray
  Type typeofBooleanArray
  Type typeofByteArray
  Type typeofCharArray
  Type typeofDecimalArray
  Type typeofDoubleArray
  Type typeofInt16Array
  Type typeofInt32Array
  Type typeofInt64Array
  Type typeofSByteArray
  Type typeofSingleArray
  Type typeofTimeSpanArray
  Type typeofDateTimeArray
  Type typeofUInt16Array
  Type typeofUInt32Array
  Type typeofUInt64Array
  Type typeofMarshalByRefObject
Свойства:
Методы:
  void .ctor()
  InternalPrimitiveTypeE ToCode(Type type)
  bool IsWriteAsByteArray(InternalPrimitiveTypeE code)
  int TypeLength(InternalPrimitiveTypeE code)
  InternalNameSpaceE GetNameSpaceEnum(InternalPrimitiveTypeE code, Type type, WriteObjectInfo objectInfo, String& typeName)
  Type ToArrayType(InternalPrimitiveTypeE code)
  void InitTypeA()
  void InitArrayTypeA()
  Type ToType(InternalPrimitiveTypeE code)
  Array CreatePrimitiveArray(InternalPrimitiveTypeE code, int length)
  bool IsPrimitiveArray(Type type, Object& typeInformation)
  void InitValueA()
  string ToComType(InternalPrimitiveTypeE code)
  void InitTypeCodeA()
  TypeCode ToTypeCode(InternalPrimitiveTypeE code)
  void InitCodeA()
  InternalPrimitiveTypeE ToPrimitiveTypeEnum(TypeCode typeCode)
  object FromString(string value, InternalPrimitiveTypeE code)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
Наследуется от: object
Поля:
  ISurrogateSelector m_surrogates
  StreamingContext m_context
  SerializationBinder m_binder
  FormatterTypeStyle m_typeFormat
  FormatterAssemblyStyle m_assemblyFormat
  TypeFilterLevel m_securityLevel
  Object[] m_crossAppDomainArray
  Dictionary`2<Type, TypeInformation> typeNameCache
Свойства:
  FormatterTypeStyle TypeFormat
  FormatterAssemblyStyle AssemblyFormat
  TypeFilterLevel FilterLevel
  ISurrogateSelector SurrogateSelector
  SerializationBinder Binder
  StreamingContext Context
Методы:
  FormatterTypeStyle get_TypeFormat()
  void set_TypeFormat(FormatterTypeStyle value)
  FormatterAssemblyStyle get_AssemblyFormat()
  void set_AssemblyFormat(FormatterAssemblyStyle value)
  TypeFilterLevel get_FilterLevel()
  void set_FilterLevel(TypeFilterLevel value)
  ISurrogateSelector get_SurrogateSelector()
  void set_SurrogateSelector(ISurrogateSelector value)
  SerializationBinder get_Binder()
  void set_Binder(SerializationBinder value)
  StreamingContext get_Context()
  void set_Context(StreamingContext value)
  void .ctor()
  void .ctor(ISurrogateSelector selector, StreamingContext context)
  object Deserialize(Stream serializationStream)
  object Deserialize(Stream serializationStream, HeaderHandler handler, bool fCheck)
  object Deserialize(Stream serializationStream, HeaderHandler handler)
  object DeserializeMethodResponse(Stream serializationStream, HeaderHandler handler, IMethodCallMessage methodCallMessage)
  object UnsafeDeserialize(Stream serializationStream, HeaderHandler handler)
  object UnsafeDeserializeMethodResponse(Stream serializationStream, HeaderHandler handler, IMethodCallMessage methodCallMessage)
  object Deserialize(Stream serializationStream, HeaderHandler handler, bool fCheck, IMethodCallMessage methodCallMessage)
  object Deserialize(Stream serializationStream, HeaderHandler handler, bool fCheck, bool isCrossAppDomain, IMethodCallMessage methodCallMessage)
  void Serialize(Stream serializationStream, object graph)
  void Serialize(Stream serializationStream, object graph, Header[] headers)
  void Serialize(Stream serializationStream, object graph, Header[] headers, bool fCheck)
  TypeInformation GetTypeInformation(Type type)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
Наследуется от: object
Поля:
  Stream sout
  FormatterTypeStyle formatterTypeStyle
  Hashtable objectMapTable
  ObjectWriter objectWriter
  BinaryWriter dataWriter
  int m_nestedObjectCount
  int nullCount
  BinaryMethodCall binaryMethodCall
  BinaryMethodReturn binaryMethodReturn
  BinaryObject binaryObject
  BinaryObjectWithMap binaryObjectWithMap
  BinaryObjectWithMapTyped binaryObjectWithMapTyped
  BinaryObjectString binaryObjectString
  BinaryArray binaryArray
  Byte[] byteBuffer
  int chunkSize
  MemberPrimitiveUnTyped memberPrimitiveUnTyped
  MemberPrimitiveTyped memberPrimitiveTyped
  ObjectNull objectNull
  MemberReference memberReference
  BinaryAssembly binaryAssembly
Свойства:
Методы:
  void .ctor(Stream sout, ObjectWriter objectWriter, FormatterTypeStyle formatterTypeStyle)
  void WriteBegin()
  void WriteEnd()
  void WriteBoolean(bool value)
  void WriteByte(byte value)
  void WriteBytes(Byte[] value)
  void WriteBytes(Byte[] byteA, int offset, int size)
  void WriteChar(char value)
  void WriteChars(Char[] value)
  void WriteDecimal(decimal value)
  void WriteSingle(float value)
  void WriteDouble(double value)
  void WriteInt16(short value)
  void WriteInt32(int value)
  void WriteInt64(long value)
  void WriteSByte(sbyte value)
  void WriteString(string value)
  void WriteTimeSpan(TimeSpan value)
  void WriteDateTime(DateTime value)
  void WriteUInt16(ushort value)
  void WriteUInt32(UInt32 value)
  void WriteUInt64(ulong value)
  void WriteObjectEnd(NameInfo memberNameInfo, NameInfo typeNameInfo)
  void WriteSerializationHeaderEnd()
  void WriteSerializationHeader(int topId, int headerId, int minorVersion, int majorVersion)
  void WriteMethodCall()
  Object[] WriteCallArray(string uri, string methodName, string typeName, Type[] instArgs, Object[] args, object methodSignature, object callContext, Object[] properties)
  void WriteMethodReturn()
  Object[] WriteReturnArray(object returnValue, Object[] args, Exception exception, object callContext, Object[] properties)
  void WriteObject(NameInfo nameInfo, NameInfo typeNameInfo, int numMembers, String[] memberNames, Type[] memberTypes, WriteObjectInfo[] memberObjectInfos)
  void WriteObjectString(int objectId, string value)
  void WriteSingleArray(NameInfo memberNameInfo, NameInfo arrayNameInfo, WriteObjectInfo objectInfo, NameInfo arrayElemTypeNameInfo, int length, int lowerBound, Array array)
  void WriteArrayAsBytes(Array array, int typeLength)
  void WriteJaggedArray(NameInfo memberNameInfo, NameInfo arrayNameInfo, WriteObjectInfo objectInfo, NameInfo arrayElemTypeNameInfo, int length, int lowerBound)
  void WriteRectangleArray(NameInfo memberNameInfo, NameInfo arrayNameInfo, WriteObjectInfo objectInfo, NameInfo arrayElemTypeNameInfo, int rank, Int32[] lengthA, Int32[] lowerBoundA)
  void WriteObjectByteArray(NameInfo memberNameInfo, NameInfo arrayNameInfo, WriteObjectInfo objectInfo, NameInfo arrayElemTypeNameInfo, int length, int lowerBound, Byte[] byteA)
  void WriteMember(NameInfo memberNameInfo, NameInfo typeNameInfo, object value)
  void WriteNullMember(NameInfo memberNameInfo, NameInfo typeNameInfo)
  void WriteMemberObjectRef(NameInfo memberNameInfo, int idRef)
  void WriteMemberNested(NameInfo memberNameInfo)
  void WriteMemberString(NameInfo memberNameInfo, NameInfo typeNameInfo, string value)
  void WriteItem(NameInfo itemNameInfo, NameInfo typeNameInfo, object value)
  void WriteNullItem(NameInfo itemNameInfo, NameInfo typeNameInfo)
  void WriteDelayedNullItem()
  void WriteItemEnd()
  void InternalWriteItemNull()
  void WriteItemObjectRef(NameInfo nameInfo, int idRef)
  void WriteAssembly(Type type, string assemblyString, int assemId, bool isNew)
  void WriteValue(InternalPrimitiveTypeE code, object value)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ObjectMapInfo
Наследуется от: object
Поля:
  int objectId
  int numMembers
  String[] memberNames
  Type[] memberTypes
Свойства:
Методы:
  void .ctor(int objectId, int numMembers, String[] memberNames, Type[] memberTypes)
  bool isCompatible(int numMembers, String[] memberNames, Type[] memberTypes)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryMethodCallMessage
Наследуется от: object
Поля:
  Object[] _inargs
  string _methodName
  string _typeName
  object _methodSignature
  Type[] _instArgs
  Object[] _args
  LogicalCallContext _logicalCallContext
  Object[] _properties
Свойства:
  string MethodName
  string TypeName
  Type[] InstantiationArgs
  object MethodSignature
  Object[] Args
  LogicalCallContext LogicalCallContext
  bool HasProperties
Методы:
  void .ctor(string uri, string methodName, string typeName, Type[] instArgs, Object[] args, object methodSignature, LogicalCallContext callContext, Object[] properties)
  string get_MethodName()
  string get_TypeName()
  Type[] get_InstantiationArgs()
  object get_MethodSignature()
  Object[] get_Args()
  LogicalCallContext get_LogicalCallContext()
  bool get_HasProperties()
  void PopulateMessageProperties(IDictionary dict)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturnMessage
Наследуется от: object
Поля:
  Object[] _outargs
  Exception _exception
  object _returnValue
  Object[] _args
  LogicalCallContext _logicalCallContext
  Object[] _properties
Свойства:
  Exception Exception
  object ReturnValue
  Object[] Args
  LogicalCallContext LogicalCallContext
  bool HasProperties
Методы:
  void .ctor(object returnValue, Object[] args, Exception e, LogicalCallContext callContext, Object[] properties)
  Exception get_Exception()
  object get_ReturnValue()
  Object[] get_Args()
  LogicalCallContext get_LogicalCallContext()
  bool get_HasProperties()
  void PopulateMessageProperties(IDictionary dict)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo
Наследуется от: object
Поля:
  int objectInfoId
  object obj
  Type objectType
  bool isSi
  bool isNamed
  bool isTyped
  bool isArray
  SerializationInfo si
  SerObjectInfoCache cache
  Object[] memberData
  ISerializationSurrogate serializationSurrogate
  StreamingContext context
  SerObjectInfoInit serObjectInfoInit
  long objectId
  long assemId
  string binderTypeName
  string binderAssemblyString
Свойства:
Методы:
  void .ctor()
  void ObjectEnd()
  void InternalInit()
  WriteObjectInfo Serialize(object obj, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, ObjectWriter objectWriter, SerializationBinder binder)
  void InitSerialize(object obj, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, ObjectWriter objectWriter, SerializationBinder binder)
  void DumpMemberInfo()
  WriteObjectInfo Serialize(Type objectType, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, SerializationBinder binder)
  void InitSerialize(Type objectType, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, SerializationBinder binder)
  void InitSiWrite()
  void CheckTypeForwardedFrom(SerObjectInfoCache cache, Type objectType, string binderAssemblyString)
  void InitNoMembers()
  void InitMemberInfo()
  string GetTypeFullName()
  string GetAssemblyString()
  void InvokeSerializationBinder(SerializationBinder binder)
  Type GetMemberType(MemberInfo objMember)
  void GetMemberInfo(String[]& outMemberNames, Type[]& outMemberTypes, Object[]& outMemberData)
  WriteObjectInfo GetObjectInfo(SerObjectInfoInit serObjectInfoInit)
  void PutObjectInfo(SerObjectInfoInit serObjectInfoInit, WriteObjectInfo objectInfo)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo
Наследуется от: object
Поля:
  int objectInfoId
  int readObjectInfoCounter
  Type objectType
  ObjectManager objectManager
  int count
  bool isSi
  bool isNamed
  bool isTyped
  bool bSimpleAssembly
  SerObjectInfoCache cache
  String[] wireMemberNames
  Type[] wireMemberTypes
  int lastPosition
  ISurrogateSelector surrogateSelector
  ISerializationSurrogate serializationSurrogate
  StreamingContext context
  List`1<Type> memberTypesList
  SerObjectInfoInit serObjectInfoInit
  IFormatterConverter formatterConverter
Свойства:
Методы:
  void .ctor()
  void ObjectEnd()
  void PrepareForReuse()
  ReadObjectInfo Create(Type objectType, ISurrogateSelector surrogateSelector, StreamingContext context, ObjectManager objectManager, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, bool bSimpleAssembly)
  void Init(Type objectType, ISurrogateSelector surrogateSelector, StreamingContext context, ObjectManager objectManager, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, bool bSimpleAssembly)
  ReadObjectInfo Create(Type objectType, String[] memberNames, Type[] memberTypes, ISurrogateSelector surrogateSelector, StreamingContext context, ObjectManager objectManager, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, bool bSimpleAssembly)
  void Init(Type objectType, String[] memberNames, Type[] memberTypes, ISurrogateSelector surrogateSelector, StreamingContext context, ObjectManager objectManager, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, bool bSimpleAssembly)
  void InitReadConstructor(Type objectType, ISurrogateSelector surrogateSelector, StreamingContext context)
  void InitSiRead()
  void InitNoMembers()
  void InitMemberInfo()
  MemberInfo GetMemberInfo(string name)
  Type GetType(string name)
  void AddValue(string name, object value, SerializationInfo& si, Object[]& memberData)
  void InitDataStore(SerializationInfo& si, Object[]& memberData)
  void RecordFixup(long objectId, string name, long idRef)
  void PopulateObjectMembers(object obj, Object[] memberData)
  void DumpPopulate(MemberInfo[] memberInfos, Object[] memberData)
  void DumpPopulateSi()
  int Position(string name)
  Type[] GetMemberTypes(String[] inMemberNames, Type objectType)
  Type GetMemberType(MemberInfo objMember)
  ReadObjectInfo GetObjectInfo(SerObjectInfoInit serObjectInfoInit)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit
Наследуется от: object
Поля:
  Hashtable seenBeforeTable
  int objectInfoIdCount
  SerStack oiPool
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.SerObjectInfoCache
Наследуется от: object
Поля:
  string fullTypeName
  string assemblyString
  bool hasTypeForwardedFrom
  MemberInfo[] memberInfos
  String[] memberNames
  Type[] memberTypes
Свойства:
Методы:
  void .ctor(string typeName, string assemblyName, bool hasTypeForwardedFrom)
  void .ctor(Type type)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.TypeInformation
Наследуется от: object
Поля:
  string fullTypeName
  string assemblyString
  bool hasTypeForwardedFrom
Свойства:
  string FullTypeName
  string AssemblyString
  bool HasTypeForwardedFrom
Методы:
  string get_FullTypeName()
  string get_AssemblyString()
  bool get_HasTypeForwardedFrom()
  void .ctor(string fullTypeName, string assemblyString, bool hasTypeForwardedFrom)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ObjectReader
Наследуется от: object
Поля:
  Stream m_stream
  ISurrogateSelector m_surrogates
  StreamingContext m_context
  ObjectManager m_objectManager
  InternalFE formatterEnums
  SerializationBinder m_binder
  long topId
  bool bSimpleAssembly
  object handlerObject
  object m_topObject
  Header[] headers
  HeaderHandler handler
  SerObjectInfoInit serObjectInfoInit
  IFormatterConverter m_formatterConverter
  SerStack stack
  SerStack valueFixupStack
  Object[] crossAppDomainArray
  bool bFullDeserialization
  bool bMethodCall
  bool bMethodReturn
  BinaryMethodCall binaryMethodCall
  BinaryMethodReturn binaryMethodReturn
  bool bIsCrossAppDomain
  int THRESHOLD_FOR_VALUETYPE_IDS
  bool bOldFormatDetected
  IntSizedArray valTypeObjectIdTable
  NameCache typeCache
  string previousAssemblyString
  string previousName
  Type previousType
Свойства:
  SerStack ValueFixupStack
  object TopObject
  bool IsRemoting
Методы:
  SerStack get_ValueFixupStack()
  object get_TopObject()
  void set_TopObject(object value)
  void SetMethodCall(BinaryMethodCall binaryMethodCall)
  void SetMethodReturn(BinaryMethodReturn binaryMethodReturn)
  void .ctor(Stream stream, ISurrogateSelector selector, StreamingContext context, InternalFE formatterEnums, SerializationBinder binder)
  object Deserialize(HeaderHandler handler, __BinaryParser serParser, bool fCheck, bool isCrossAppDomain, IMethodCallMessage methodCallMessage)
  bool HasSurrogate(Type t)
  void CheckSerializable(Type t)
  void InitFullDeserialization()
  object CrossAppDomainArray(int index)
  ReadObjectInfo CreateReadObjectInfo(Type objectType)
  ReadObjectInfo CreateReadObjectInfo(Type objectType, String[] memberNames, Type[] memberTypes)
  void Parse(ParseRecord pr)
  void ParseError(ParseRecord processing, ParseRecord onStack)
  void ParseSerializedStreamHeader(ParseRecord pr)
  void ParseSerializedStreamHeaderEnd(ParseRecord pr)
  bool get_IsRemoting()
  void CheckSecurity(ParseRecord pr)
  void ParseObject(ParseRecord pr)
  void ParseObjectEnd(ParseRecord pr)
  void ParseArray(ParseRecord pr)
  void NextRectangleMap(ParseRecord pr)
  void ParseArrayMember(ParseRecord pr)
  void ParseArrayMemberEnd(ParseRecord pr)
  void ParseMember(ParseRecord pr)
  void ParseMemberEnd(ParseRecord pr)
  void ParseString(ParseRecord pr, ParseRecord parentPr)
  void RegisterObject(object obj, ParseRecord pr, ParseRecord objectPr)
  void RegisterObject(object obj, ParseRecord pr, ParseRecord objectPr, bool bIsString)
  long GetId(long objectId)
  void IndexTraceMessage(string message, Int32[] index)
  Type Bind(string assemblyString, string typeString)
  Type FastBindToType(string assemblyName, string typeName)
  Assembly ResolveSimpleAssemblyName(AssemblyName assemblyName)
  void GetSimplyNamedTypeFromAssembly(Assembly assm, string typeName, Type& type)
  Type GetType(BinaryAssemblyInfo assemblyInfo, string name)
  void CheckTypeForwardedTo(Assembly sourceAssembly, Assembly destAssembly, Type resolvedType)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ObjectWriter
Наследуется от: object
Поля:
  Queue m_objectQueue
  ObjectIDGenerator m_idGenerator
  int m_currentId
  ISurrogateSelector m_surrogates
  StreamingContext m_context
  __BinaryWriter serWriter
  SerializationObjectManager m_objectManager
  long topId
  string topName
  Header[] headers
  InternalFE formatterEnums
  SerializationBinder m_binder
  SerObjectInfoInit serObjectInfoInit
  IFormatterConverter m_formatterConverter
  Object[] crossAppDomainArray
  ArrayList internalCrossAppDomainArray
  object previousObj
  long previousId
  Type previousType
  InternalPrimitiveTypeE previousCode
  Hashtable assemblyToIdTable
  SerStack niPool
Свойства:
  SerializationObjectManager ObjectManager
Методы:
  void .ctor(ISurrogateSelector selector, StreamingContext context, InternalFE formatterEnums, SerializationBinder binder)
  void Serialize(object graph, Header[] inHeaders, __BinaryWriter serWriter, bool fCheck)
  Object[] WriteMethodCall(IMethodCallMessage mcm)
  Object[] WriteMethodReturn(IMethodReturnMessage mrm)
  Object[] StoreUserPropertiesForMethodMessage(IMethodMessage msg)
  SerializationObjectManager get_ObjectManager()
  void Write(WriteObjectInfo objectInfo, NameInfo memberNameInfo, NameInfo typeNameInfo)
  void Write(WriteObjectInfo objectInfo, NameInfo memberNameInfo, NameInfo typeNameInfo, String[] memberNames, Type[] memberTypes, Object[] memberData, WriteObjectInfo[] memberObjectInfos)
  void WriteMemberSetup(WriteObjectInfo objectInfo, NameInfo memberNameInfo, NameInfo typeNameInfo, string memberName, Type memberType, object memberData, WriteObjectInfo memberObjectInfo)
  void WriteMembers(NameInfo memberNameInfo, NameInfo memberTypeNameInfo, object memberData, WriteObjectInfo objectInfo, NameInfo typeNameInfo, WriteObjectInfo memberObjectInfo)
  void WriteArray(WriteObjectInfo objectInfo, NameInfo memberNameInfo, WriteObjectInfo memberObjectInfo)
  void WriteArrayMember(WriteObjectInfo objectInfo, NameInfo arrayElemTypeNameInfo, object data)
  void WriteRectangle(WriteObjectInfo objectInfo, int rank, Int32[] maxA, Array array, NameInfo arrayElemNameTypeInfo, Int32[] lowerBoundA)
  void IndexTraceMessage(string message, Int32[] index)
  object GetNext(Int64& objID)
  long InternalGetId(object obj, bool assignUniqueIdToValueType, Type type, Boolean& isNew)
  long Schedule(object obj, bool assignUniqueIdToValueType, Type type)
  long Schedule(object obj, bool assignUniqueIdToValueType, Type type, WriteObjectInfo objectInfo)
  bool WriteKnownValueClass(NameInfo memberNameInfo, NameInfo typeNameInfo, object data)
  void WriteObjectRef(NameInfo nameInfo, long objectId)
  void WriteString(NameInfo memberNameInfo, NameInfo typeNameInfo, object stringObject)
  bool CheckForNull(WriteObjectInfo objectInfo, NameInfo memberNameInfo, NameInfo typeNameInfo, object data)
  void WriteSerializedStreamHeader(long topId, long headerId)
  NameInfo TypeToNameInfo(Type type, WriteObjectInfo objectInfo, InternalPrimitiveTypeE code, NameInfo nameInfo)
  NameInfo TypeToNameInfo(Type type)
  NameInfo TypeToNameInfo(WriteObjectInfo objectInfo)
  NameInfo TypeToNameInfo(WriteObjectInfo objectInfo, NameInfo nameInfo)
  void TypeToNameInfo(Type type, NameInfo nameInfo)
  NameInfo MemberToNameInfo(string name)
  InternalPrimitiveTypeE ToCode(Type type)
  long GetAssemblyId(WriteObjectInfo objectInfo)
  Type GetType(object obj)
  NameInfo GetNameInfo()
  bool CheckTypeFormat(FormatterTypeStyle test, FormatterTypeStyle want)
  void PutNameInfo(NameInfo nameInfo)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
Наследуется от: object
Поля:
  ObjectReader objectReader
  Stream input
  long topId
  long headerId
  SizedArray objectMapIdTable
  SizedArray assemIdToAssemblyTable
  SerStack stack
  BinaryTypeEnum expectedType
  object expectedTypeInformation
  ParseRecord PRS
  BinaryAssemblyInfo systemAssemblyInfo
  BinaryReader dataReader
  Encoding encoding
  SerStack opPool
  BinaryObject binaryObject
  BinaryObjectWithMap bowm
  BinaryObjectWithMapTyped bowmt
  BinaryObjectString objectString
  BinaryCrossAppDomainString crossAppDomainString
  MemberPrimitiveTyped memberPrimitiveTyped
  Byte[] byteBuffer
  int chunkSize
  MemberPrimitiveUnTyped memberPrimitiveUnTyped
  MemberReference memberReference
  ObjectNull objectNull
  MessageEnd modreq(System.Runtime.CompilerServices.IsVolatile) messageEnd
Свойства:
  BinaryAssemblyInfo SystemAssemblyInfo
  SizedArray ObjectMapIdTable
  SizedArray AssemIdToAssemblyTable
  ParseRecord prs
Методы:
  void .ctor(Stream stream, ObjectReader objectReader)
  BinaryAssemblyInfo get_SystemAssemblyInfo()
  SizedArray get_ObjectMapIdTable()
  SizedArray get_AssemIdToAssemblyTable()
  ParseRecord get_prs()
  void Run()
  void ReadBegin()
  void ReadEnd()
  bool ReadBoolean()
  byte ReadByte()
  Byte[] ReadBytes(int length)
  void ReadBytes(Byte[] byteA, int offset, int size)
  char ReadChar()
  Char[] ReadChars(int length)
  decimal ReadDecimal()
  float ReadSingle()
  double ReadDouble()
  short ReadInt16()
  int ReadInt32()
  long ReadInt64()
  sbyte ReadSByte()
  string ReadString()
  TimeSpan ReadTimeSpan()
  DateTime ReadDateTime()
  ushort ReadUInt16()
  UInt32 ReadUInt32()
  ulong ReadUInt64()
  void ReadSerializationHeaderRecord()
  void ReadAssembly(BinaryHeaderEnum binaryHeaderEnum)
  void ReadMethodObject(BinaryHeaderEnum binaryHeaderEnum)
  void ReadObject()
  void ReadCrossAppDomainMap()
  void ReadObjectWithMap(BinaryHeaderEnum binaryHeaderEnum)
  void ReadObjectWithMap(BinaryObjectWithMap record)
  void ReadObjectWithMapTyped(BinaryHeaderEnum binaryHeaderEnum)
  void ReadObjectWithMapTyped(BinaryObjectWithMapTyped record)
  void ReadObjectString(BinaryHeaderEnum binaryHeaderEnum)
  void ReadMemberPrimitiveTyped()
  void ReadArray(BinaryHeaderEnum binaryHeaderEnum)
  void ReadArrayAsBytes(ParseRecord pr)
  void ReadMemberPrimitiveUnTyped()
  void ReadMemberReference()
  void ReadObjectNull(BinaryHeaderEnum binaryHeaderEnum)
  void ReadMessageEnd()
  object ReadValue(InternalPrimitiveTypeE code)
  ObjectProgress GetOp()
  void PutOp(ObjectProgress op)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ParseRecord
Наследуется от: object
Поля:
  int parseRecordIdCount
  int PRparseRecordId
  InternalParseTypeE PRparseTypeEnum
  InternalObjectTypeE PRobjectTypeEnum
  InternalArrayTypeE PRarrayTypeEnum
  InternalMemberTypeE PRmemberTypeEnum
  InternalMemberValueE PRmemberValueEnum
  InternalObjectPositionE PRobjectPositionEnum
  string PRname
  string PRvalue
  object PRvarValue
  string PRkeyDt
  Type PRdtType
  InternalPrimitiveTypeE PRdtTypeCode
  bool PRisVariant
  bool PRisEnum
  long PRobjectId
  long PRidRef
  string PRarrayElementTypeString
  Type PRarrayElementType
  bool PRisArrayVariant
  InternalPrimitiveTypeE PRarrayElementTypeCode
  int PRrank
  Int32[] PRlengthA
  Int32[] PRpositionA
  Int32[] PRlowerBoundA
  Int32[] PRupperBoundA
  Int32[] PRindexMap
  int PRmemberIndex
  int PRlinearlength
  Int32[] PRrectangularMap
  bool PRisLowerBound
  long PRtopId
  long PRheaderId
  ReadObjectInfo PRobjectInfo
  bool PRisValueTypeFixup
  object PRnewObj
  Object[] PRobjectA
  PrimitiveArray PRprimitiveArray
  bool PRisRegistered
  Object[] PRmemberData
  SerializationInfo PRsi
  int PRnullCount
Свойства:
Методы:
  void .ctor()
  void Init()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.SerStack
Наследуется от: object
Поля:
  Object[] objects
  string stackId
  int top
  int next
Свойства:
Методы:
  void .ctor()
  void .ctor(string stackId)
  void Push(object obj)
  object Pop()
  void IncreaseCapacity()
  object Peek()
  object PeekPeek()
  int Count()
  bool IsEmpty()
  void Dump()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.SizedArray
Наследуется от: object
Поля:
  Object[] objects
  Object[] negObjects
Свойства:
  object Item
Методы:
  void .ctor()
  void .ctor(int length)
  void .ctor(SizedArray sizedArray)
  object Clone()
  object get_Item(int index)
  void set_Item(int index, object value)
  void IncreaseCapacity(int index)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.IntSizedArray
Наследуется от: object
Поля:
  Int32[] objects
  Int32[] negObjects
Свойства:
  int Item
Методы:
  void .ctor()
  void .ctor(IntSizedArray sizedArray)
  object Clone()
  int get_Item(int index)
  void set_Item(int index, int value)
  void IncreaseCapacity(int index)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.NameCache
Наследуется от: object
Поля:
  ConcurrentDictionary`2<string, object> ht
  string name
Свойства:
Методы:
  object GetCachedValue(string name)
  void SetCachedValue(object value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.ValueFixup
Наследуется от: object
Поля:
  ValueFixupEnum valueFixupEnum
  Array arrayObj
  Int32[] indexMap
  object header
  object memberObject
  MemberInfo modreq(System.Runtime.CompilerServices.IsVolatile) valueInfo
  ReadObjectInfo objectInfo
  string memberName
Свойства:
Методы:
  void .ctor(Array arrayObj, Int32[] indexMap)
  void .ctor(object memberObject, string memberName, ReadObjectInfo objectInfo)
  void Fixup(ParseRecord record, ParseRecord parent)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.InternalFE
Наследуется от: object
Поля:
  FormatterTypeStyle FEtypeFormat
  FormatterAssemblyStyle FEassemblyFormat
  TypeFilterLevel FEsecurityLevel
  InternalSerializerTypeE FEserializerTypeEnum
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.NameInfo
Наследуется от: object
Поля:
  string NIFullName
  long NIobjectId
  long NIassemId
  InternalPrimitiveTypeE NIprimitiveTypeEnum
  Type NItype
  bool NIisSealed
  bool NIisArray
  bool NIisArrayItem
  bool NItransmitTypeOnObject
  bool NItransmitTypeOnMember
  bool NIisParentTypeOnObject
  InternalArrayTypeE NIarrayEnum
  bool NIsealedStatusChecked
Свойства:
  bool IsSealed
  string NIname
Методы:
  void .ctor()
  void Init()
  bool get_IsSealed()
  string get_NIname()
  void set_NIname(string value)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.PrimitiveArray
Наследуется от: object
Поля:
  InternalPrimitiveTypeE code
  Boolean[] booleanA
  Char[] charA
  Double[] doubleA
  Int16[] int16A
  Int32[] int32A
  Int64[] int64A
  SByte[] sbyteA
  Single[] singleA
  UInt16[] uint16A
  UInt32[] uint32A
  UInt64[] uint64A
Свойства:
Методы:
  void .ctor(InternalPrimitiveTypeE code, Array array)
  void Init(InternalPrimitiveTypeE code, Array array)
  void SetValue(string value, int index)
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.MessageEnum
Наследуется от: Enum
Поля:
  int value__
  MessageEnum NoArgs
  MessageEnum ArgsInline
  MessageEnum ArgsIsArray
  MessageEnum ArgsInArray
  MessageEnum NoContext
  MessageEnum ContextInline
  MessageEnum ContextInArray
  MessageEnum MethodSignatureInArray
  MessageEnum PropertyInArray
  MessageEnum NoReturnValue
  MessageEnum ReturnValueVoid
  MessageEnum ReturnValueInline
  MessageEnum ReturnValueInArray
  MessageEnum ExceptionInArray
  MessageEnum GenericMethod
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Serialization.Formatters.Binary.SoapAttributeType
Наследуется от: Enum
Поля:
  int value__
  SoapAttributeType None
  SoapAttributeType SchemaType
  SoapAttributeType Embedded
  SoapAttributeType XmlElement
  SoapAttributeType XmlAttribute
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.CharSet
Наследуется от: Enum
Поля:
  int value__
  CharSet None
  CharSet Ansi
  CharSet Unicode
  CharSet Auto
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ExternalException
Наследуется от: SystemException
Поля:
Свойства:
  int ErrorCode
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string message, int errorCode)
  void .ctor(SerializationInfo info, StreamingContext context)
  int get_ErrorCode()
  string ToString()
--------------------------------------------------
Класс: System.Runtime.InteropServices.HandleRef
Наследуется от: ValueType
Поля:
  object _wrapper
  IntPtr _handle
Свойства:
  object Wrapper
  IntPtr Handle
Методы:
  void .ctor(object wrapper, IntPtr handle)
  object get_Wrapper()
  IntPtr get_Handle()
  IntPtr op_Explicit(HandleRef value)
  IntPtr ToIntPtr(HandleRef value)
--------------------------------------------------
Класс: System.Runtime.InteropServices.LayoutKind
Наследуется от: Enum
Поля:
  int value__
  LayoutKind Sequential
  LayoutKind Explicit
  LayoutKind Auto
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.MarshalDirectiveException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.InteropServices.MemoryMarshal
Наследуется от: object
Поля:
Свойства:
Методы:
  Span`1<byte> AsBytes(Span`1<T> span)
  ReadOnlySpan`1<byte> AsBytes(ReadOnlySpan`1<T> span)
  Memory`1<T> AsMemory(ReadOnlyMemory`1<T> memory)
  T& GetReference(Span`1<T> span)
  T& GetReference(ReadOnlySpan`1<T> span)
  T& GetNonNullPinnableReference(Span`1<T> span)
  T& GetNonNullPinnableReference(ReadOnlySpan`1<T> span)
  Span`1<TTo> Cast(Span`1<TFrom> span)
  ReadOnlySpan`1<TTo> Cast(ReadOnlySpan`1<TFrom> span)
  Span`1<T> CreateSpan(T& reference, int length)
  ReadOnlySpan`1<T> CreateReadOnlySpan(T& reference, int length)
  bool TryGetArray(ReadOnlyMemory`1<T> memory, ArraySegment`1& segment)
  bool TryGetMemoryManager(ReadOnlyMemory`1<T> memory, TManager& manager)
  bool TryGetMemoryManager(ReadOnlyMemory`1<T> memory, TManager& manager, Int32& start, Int32& length)
  IEnumerable`1<T> ToEnumerable(ReadOnlyMemory`1<T> memory)
  bool TryGetString(ReadOnlyMemory`1<char> memory, String& text, Int32& start, Int32& length)
  T Read(ReadOnlySpan`1<byte> source)
  bool TryRead(ReadOnlySpan`1<byte> source, T& value)
  void Write(Span`1<byte> destination, T& value)
  bool TryWrite(Span`1<byte> destination, T& value)
  Memory`1<T> CreateFromPinnedArray(T[] array, int start, int length)
--------------------------------------------------
Класс: System.Runtime.InteropServices.SequenceMarshal
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TryGetReadOnlySequenceSegment(ReadOnlySequence`1<T> sequence, ReadOnlySequenceSegment`1& startSegment, Int32& startIndex, ReadOnlySequenceSegment`1& endSegment, Int32& endIndex)
  bool TryGetArray(ReadOnlySequence`1<T> sequence, ArraySegment`1& segment)
  bool TryGetReadOnlyMemory(ReadOnlySequence`1<T> sequence, ReadOnlyMemory`1& memory)
  bool TryGetString(ReadOnlySequence`1<char> sequence, String& text, Int32& start, Int32& length)
  bool TryRead(SequenceReader`1& reader, T& value)
--------------------------------------------------
Класс: System.Runtime.InteropServices.Architecture
Наследуется от: Enum
Поля:
  int value__
  Architecture X86
  Architecture X64
  Architecture Arm
  Architecture Arm64
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.OSPlatform
Наследуется от: ValueType
Поля:
  string _osPlatform
  OSPlatform <Linux>k__BackingField
  OSPlatform <OSX>k__BackingField
  OSPlatform <Windows>k__BackingField
Свойства:
  OSPlatform Linux
  OSPlatform OSX
  OSPlatform Windows
Методы:
  OSPlatform get_Linux()
  OSPlatform get_OSX()
  OSPlatform get_Windows()
  void .ctor(string osPlatform)
  OSPlatform Create(string osPlatform)
  bool Equals(OSPlatform other)
  bool Equals(string other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  bool op_Equality(OSPlatform left, OSPlatform right)
  bool op_Inequality(OSPlatform left, OSPlatform right)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.RegistrationConnectionType
Наследуется от: Enum
Поля:
  int value__
  RegistrationConnectionType SingleUse
  RegistrationConnectionType MultipleUse
  RegistrationConnectionType MultiSeparate
  RegistrationConnectionType Suspended
  RegistrationConnectionType Surrogate
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.GCHandleType
Наследуется от: Enum
Поля:
  int value__
  GCHandleType Weak
  GCHandleType WeakTrackResurrection
  GCHandleType Normal
  GCHandleType Pinned
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.NativeCallableAttribute
Наследуется от: Attribute
Поля:
  string EntryPoint
  CallingConvention CallingConvention
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.SafeBuffer
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
  UIntPtr Uninitialized
  UIntPtr _numBytes
Свойства:
  ulong ByteLength
Методы:
  void .ctor(bool ownsHandle)
  void Initialize(ulong numBytes)
  void Initialize(UInt32 numElements, UInt32 sizeOfEachElement)
  void Initialize(UInt32 numElements)
  void AcquirePointer(Byte*& pointer)
  void ReleasePointer()
  T Read(ulong byteOffset)
  void ReadArray(ulong byteOffset, T[] array, int index, int count)
  void Write(ulong byteOffset, T value)
  void WriteArray(ulong byteOffset, T[] array, int index, int count)
  ulong get_ByteLength()
  void SpaceCheck(Byte* ptr, ulong sizeInBytes)
  void NotEnoughRoom()
  InvalidOperationException NotInitialized()
  UInt32 AlignedSizeOf()
  UInt32 SizeOf()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.COMException
Наследуется от: ExternalException
Поля:
Свойства:
Методы:
  void .ctor(int hr)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string message, int errorCode)
  void .ctor(SerializationInfo info, StreamingContext context)
  string ToString()
--------------------------------------------------
Класс: System.Runtime.InteropServices.BStrWrapper
Наследуется от: object
Поля:
  string m_WrappedObject
Свойства:
  string WrappedObject
Методы:
  void .ctor(string value)
  void .ctor(object value)
  string get_WrappedObject()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComMemberType
Наследуется от: Enum
Поля:
  int value__
  ComMemberType Method
  ComMemberType PropGet
  ComMemberType PropSet
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.CurrencyWrapper
Наследуется от: object
Поля:
  decimal m_WrappedObject
Свойства:
  decimal WrappedObject
Методы:
  void .ctor(decimal obj)
  void .ctor(object obj)
  decimal get_WrappedObject()
--------------------------------------------------
Класс: System.Runtime.InteropServices.CustomQueryInterfaceMode
Наследуется от: Enum
Поля:
  int value__
  CustomQueryInterfaceMode Ignore
  CustomQueryInterfaceMode Allow
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ErrorWrapper
Наследуется от: object
Поля:
  int m_ErrorCode
Свойства:
  int ErrorCode
Методы:
  void .ctor(int errorCode)
  void .ctor(object errorCode)
  void .ctor(Exception e)
  int get_ErrorCode()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ICustomAdapter
Поля:
Свойства:
Методы:
  object GetUnderlyingObject()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ICustomFactory
Поля:
Свойства:
Методы:
  MarshalByRefObject CreateInstance(Type serverType)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ICustomMarshaler
Поля:
Свойства:
Методы:
  object MarshalNativeToManaged(IntPtr pNativeData)
  IntPtr MarshalManagedToNative(object ManagedObj)
  void CleanUpNativeData(IntPtr pNativeData)
  void CleanUpManagedData(object ManagedObj)
  int GetNativeDataSize()
--------------------------------------------------
Класс: System.Runtime.InteropServices.InvalidComObjectException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.InteropServices.InvalidOleVariantTypeException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.InteropServices.SEHException
Наследуется от: ExternalException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
  bool CanResume()
--------------------------------------------------
Класс: System.Runtime.InteropServices.SafeArrayRankMismatchException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.InteropServices.SafeArrayTypeMismatchException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UnknownWrapper
Наследуется от: object
Поля:
  object m_WrappedObject
Свойства:
  object WrappedObject
Методы:
  void .ctor(object obj)
  object get_WrappedObject()
--------------------------------------------------
Класс: System.Runtime.InteropServices.VariantWrapper
Наследуется от: object
Поля:
  object m_WrappedObject
Свойства:
  object WrappedObject
Методы:
  void .ctor(object obj)
  object get_WrappedObject()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ArrayWithOffset
Наследуется от: ValueType
Поля:
  object m_array
  int m_offset
  int m_count
Свойства:
Методы:
  void .ctor(object array, int offset)
  object GetArray()
  int GetOffset()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(ArrayWithOffset obj)
  bool op_Equality(ArrayWithOffset a, ArrayWithOffset b)
  bool op_Inequality(ArrayWithOffset a, ArrayWithOffset b)
  int CalculateCount()
--------------------------------------------------
Класс: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
Наследуется от: Attribute
Поля:
  CallingConvention m_callingConvention
  CharSet CharSet
  bool BestFitMapping
  bool ThrowOnUnmappableChar
  bool SetLastError
Свойства:
  CallingConvention CallingConvention
Методы:
  void .ctor(CallingConvention callingConvention)
  CallingConvention get_CallingConvention()
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeIdentifierAttribute
Наследуется от: Attribute
Поля:
  string Scope_
  string Identifier_
Свойства:
  string Scope
  string Identifier
Методы:
  void .ctor()
  void .ctor(string scope, string identifier)
  string get_Scope()
  string get_Identifier()
--------------------------------------------------
Класс: System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.DispIdAttribute
Наследуется от: Attribute
Поля:
  int _val
Свойства:
  int Value
Методы:
  void .ctor(int dispId)
  int get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComInterfaceType
Наследуется от: Enum
Поля:
  int value__
  ComInterfaceType InterfaceIsDual
  ComInterfaceType InterfaceIsIUnknown
  ComInterfaceType InterfaceIsIDispatch
  ComInterfaceType InterfaceIsIInspectable
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.InterfaceTypeAttribute
Наследуется от: Attribute
Поля:
  ComInterfaceType _val
Свойства:
  ComInterfaceType Value
Методы:
  void .ctor(ComInterfaceType interfaceType)
  void .ctor(short interfaceType)
  ComInterfaceType get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComDefaultInterfaceAttribute
Наследуется от: Attribute
Поля:
  Type _val
Свойства:
  Type Value
Методы:
  void .ctor(Type defaultInterface)
  Type get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ClassInterfaceType
Наследуется от: Enum
Поля:
  int value__
  ClassInterfaceType None
  ClassInterfaceType AutoDispatch
  ClassInterfaceType AutoDual
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ClassInterfaceAttribute
Наследуется от: Attribute
Поля:
  ClassInterfaceType _val
Свойства:
  ClassInterfaceType Value
Методы:
  void .ctor(ClassInterfaceType classInterfaceType)
  void .ctor(short classInterfaceType)
  ClassInterfaceType get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComVisibleAttribute
Наследуется от: Attribute
Поля:
  bool _val
Свойства:
  bool Value
Методы:
  void .ctor(bool visibility)
  bool get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibImportClassAttribute
Наследуется от: Attribute
Поля:
  string _importClassName
Свойства:
  string Value
Методы:
  void .ctor(Type importClass)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.LCIDConversionAttribute
Наследуется от: Attribute
Поля:
  int _val
Свойства:
  int Value
Методы:
  void .ctor(int lcid)
  int get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComRegisterFunctionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComUnregisterFunctionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ProgIdAttribute
Наследуется от: Attribute
Поля:
  string _val
Свойства:
  string Value
Методы:
  void .ctor(string progId)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ImportedFromTypeLibAttribute
Наследуется от: Attribute
Поля:
  string _val
Свойства:
  string Value
Методы:
  void .ctor(string tlbFile)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.IDispatchImplType
Наследуется от: Enum
Поля:
  int value__
  IDispatchImplType SystemDefinedImpl
  IDispatchImplType InternalImpl
  IDispatchImplType CompatibleImpl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.IDispatchImplAttribute
Наследуется от: Attribute
Поля:
  IDispatchImplType _val
Свойства:
  IDispatchImplType Value
Методы:
  void .ctor(IDispatchImplType implType)
  void .ctor(short implType)
  IDispatchImplType get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComSourceInterfacesAttribute
Наследуется от: Attribute
Поля:
  string _val
Свойства:
  string Value
Методы:
  void .ctor(string sourceInterfaces)
  void .ctor(Type sourceInterface)
  void .ctor(Type sourceInterface1, Type sourceInterface2)
  void .ctor(Type sourceInterface1, Type sourceInterface2, Type sourceInterface3)
  void .ctor(Type sourceInterface1, Type sourceInterface2, Type sourceInterface3, Type sourceInterface4)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComConversionLossAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibTypeFlags
Наследуется от: Enum
Поля:
  int value__
  TypeLibTypeFlags FAppObject
  TypeLibTypeFlags FCanCreate
  TypeLibTypeFlags FLicensed
  TypeLibTypeFlags FPreDeclId
  TypeLibTypeFlags FHidden
  TypeLibTypeFlags FControl
  TypeLibTypeFlags FDual
  TypeLibTypeFlags FNonExtensible
  TypeLibTypeFlags FOleAutomation
  TypeLibTypeFlags FRestricted
  TypeLibTypeFlags FAggregatable
  TypeLibTypeFlags FReplaceable
  TypeLibTypeFlags FDispatchable
  TypeLibTypeFlags FReverseBind
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibFuncFlags
Наследуется от: Enum
Поля:
  int value__
  TypeLibFuncFlags FRestricted
  TypeLibFuncFlags FSource
  TypeLibFuncFlags FBindable
  TypeLibFuncFlags FRequestEdit
  TypeLibFuncFlags FDisplayBind
  TypeLibFuncFlags FDefaultBind
  TypeLibFuncFlags FHidden
  TypeLibFuncFlags FUsesGetLastError
  TypeLibFuncFlags FDefaultCollelem
  TypeLibFuncFlags FUiDefault
  TypeLibFuncFlags FNonBrowsable
  TypeLibFuncFlags FReplaceable
  TypeLibFuncFlags FImmediateBind
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibVarFlags
Наследуется от: Enum
Поля:
  int value__
  TypeLibVarFlags FReadOnly
  TypeLibVarFlags FSource
  TypeLibVarFlags FBindable
  TypeLibVarFlags FRequestEdit
  TypeLibVarFlags FDisplayBind
  TypeLibVarFlags FDefaultBind
  TypeLibVarFlags FHidden
  TypeLibVarFlags FRestricted
  TypeLibVarFlags FDefaultCollelem
  TypeLibVarFlags FUiDefault
  TypeLibVarFlags FNonBrowsable
  TypeLibVarFlags FReplaceable
  TypeLibVarFlags FImmediateBind
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibTypeAttribute
Наследуется от: Attribute
Поля:
  TypeLibTypeFlags _val
Свойства:
  TypeLibTypeFlags Value
Методы:
  void .ctor(TypeLibTypeFlags flags)
  void .ctor(short flags)
  TypeLibTypeFlags get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibFuncAttribute
Наследуется от: Attribute
Поля:
  TypeLibFuncFlags _val
Свойства:
  TypeLibFuncFlags Value
Методы:
  void .ctor(TypeLibFuncFlags flags)
  void .ctor(short flags)
  TypeLibFuncFlags get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibVarAttribute
Наследуется от: Attribute
Поля:
  TypeLibVarFlags _val
Свойства:
  TypeLibVarFlags Value
Методы:
  void .ctor(TypeLibVarFlags flags)
  void .ctor(short flags)
  TypeLibVarFlags get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.VarEnum
Наследуется от: Enum
Поля:
  int value__
  VarEnum VT_EMPTY
  VarEnum VT_NULL
  VarEnum VT_I2
  VarEnum VT_I4
  VarEnum VT_R4
  VarEnum VT_R8
  VarEnum VT_CY
  VarEnum VT_DATE
  VarEnum VT_BSTR
  VarEnum VT_DISPATCH
  VarEnum VT_ERROR
  VarEnum VT_BOOL
  VarEnum VT_VARIANT
  VarEnum VT_UNKNOWN
  VarEnum VT_DECIMAL
  VarEnum VT_I1
  VarEnum VT_UI1
  VarEnum VT_UI2
  VarEnum VT_UI4
  VarEnum VT_I8
  VarEnum VT_UI8
  VarEnum VT_INT
  VarEnum VT_UINT
  VarEnum VT_VOID
  VarEnum VT_HRESULT
  VarEnum VT_PTR
  VarEnum VT_SAFEARRAY
  VarEnum VT_CARRAY
  VarEnum VT_USERDEFINED
  VarEnum VT_LPSTR
  VarEnum VT_LPWSTR
  VarEnum VT_RECORD
  VarEnum VT_FILETIME
  VarEnum VT_BLOB
  VarEnum VT_STREAM
  VarEnum VT_STORAGE
  VarEnum VT_STREAMED_OBJECT
  VarEnum VT_STORED_OBJECT
  VarEnum VT_BLOB_OBJECT
  VarEnum VT_CF
  VarEnum VT_CLSID
  VarEnum VT_VECTOR
  VarEnum VT_ARRAY
  VarEnum VT_BYREF
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.UnmanagedType
Наследуется от: Enum
Поля:
  int value__
  UnmanagedType Bool
  UnmanagedType I1
  UnmanagedType U1
  UnmanagedType I2
  UnmanagedType U2
  UnmanagedType I4
  UnmanagedType U4
  UnmanagedType I8
  UnmanagedType U8
  UnmanagedType R4
  UnmanagedType R8
  UnmanagedType Currency
  UnmanagedType BStr
  UnmanagedType LPStr
  UnmanagedType LPWStr
  UnmanagedType LPTStr
  UnmanagedType ByValTStr
  UnmanagedType IUnknown
  UnmanagedType IDispatch
  UnmanagedType Struct
  UnmanagedType Interface
  UnmanagedType SafeArray
  UnmanagedType ByValArray
  UnmanagedType SysInt
  UnmanagedType SysUInt
  UnmanagedType VBByRefStr
  UnmanagedType AnsiBStr
  UnmanagedType TBStr
  UnmanagedType VariantBool
  UnmanagedType FunctionPtr
  UnmanagedType AsAny
  UnmanagedType LPArray
  UnmanagedType LPStruct
  UnmanagedType CustomMarshaler
  UnmanagedType Error
  UnmanagedType IInspectable
  UnmanagedType HString
  UnmanagedType LPUTF8Str
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComImportAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  Attribute GetCustomAttribute(RuntimeType type)
  bool IsDefined(RuntimeType type)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.GuidAttribute
Наследуется от: Attribute
Поля:
  string _val
Свойства:
  string Value
Методы:
  void .ctor(string guid)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.PreserveSigAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  Attribute GetCustomAttribute(RuntimeMethodInfo method)
  bool IsDefined(RuntimeMethodInfo method)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.InAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  Attribute GetCustomAttribute(RuntimeParameterInfo parameter)
  bool IsDefined(RuntimeParameterInfo parameter)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.OutAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  Attribute GetCustomAttribute(RuntimeParameterInfo parameter)
  bool IsDefined(RuntimeParameterInfo parameter)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.OptionalAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  Attribute GetCustomAttribute(RuntimeParameterInfo parameter)
  bool IsDefined(RuntimeParameterInfo parameter)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.DllImportSearchPath
Наследуется от: Enum
Поля:
  int value__
  DllImportSearchPath UseDllDirectoryForDependencies
  DllImportSearchPath ApplicationDirectory
  DllImportSearchPath UserDirectories
  DllImportSearchPath System32
  DllImportSearchPath SafeDirectories
  DllImportSearchPath AssemblyDirectory
  DllImportSearchPath LegacyBehavior
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
Наследуется от: Attribute
Поля:
  DllImportSearchPath _paths
Свойства:
  DllImportSearchPath Paths
Методы:
  void .ctor(DllImportSearchPath paths)
  DllImportSearchPath get_Paths()
--------------------------------------------------
Класс: System.Runtime.InteropServices.DllImportAttribute
Наследуется от: Attribute
Поля:
  string _val
  string EntryPoint
  CharSet CharSet
  bool SetLastError
  bool ExactSpelling
  bool PreserveSig
  CallingConvention CallingConvention
  bool BestFitMapping
  bool ThrowOnUnmappableChar
Свойства:
  string Value
Методы:
  Attribute GetCustomAttribute(RuntimeMethodInfo method)
  bool IsDefined(RuntimeMethodInfo method)
  void .ctor(string dllName, string entryPoint, CharSet charSet, bool exactSpelling, bool setLastError, bool preserveSig, CallingConvention callingConvention, bool bestFitMapping, bool throwOnUnmappableChar)
  void .ctor(string dllName)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.StructLayoutAttribute
Наследуется от: Attribute
Поля:
  int DEFAULT_PACKING_SIZE
  LayoutKind _val
  int Pack
  int Size
  CharSet CharSet
Свойства:
  LayoutKind Value
Методы:
  StructLayoutAttribute GetCustomAttribute(RuntimeType type)
  bool IsDefined(RuntimeType type)
  void .ctor(LayoutKind layoutKind, int pack, int size, CharSet charSet)
  void .ctor(LayoutKind layoutKind)
  void .ctor(short layoutKind)
  LayoutKind get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.FieldOffsetAttribute
Наследуется от: Attribute
Поля:
  int _val
Свойства:
  int Value
Методы:
  Attribute GetCustomAttribute(RuntimeFieldInfo field)
  bool IsDefined(RuntimeFieldInfo field)
  void .ctor(int offset)
  int get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComAliasNameAttribute
Наследуется от: Attribute
Поля:
  string _val
Свойства:
  string Value
Методы:
  void .ctor(string alias)
  string get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.AutomationProxyAttribute
Наследуется от: Attribute
Поля:
  bool _val
Свойства:
  bool Value
Методы:
  void .ctor(bool val)
  bool get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute
Наследуется от: Attribute
Поля:
  int _major
  int _minor
Свойства:
  int MajorVersion
  int MinorVersion
Методы:
  void .ctor(int major, int minor)
  int get_MajorVersion()
  int get_MinorVersion()
--------------------------------------------------
Класс: System.Runtime.InteropServices.CoClassAttribute
Наследуется от: Attribute
Поля:
  Type _CoClass
Свойства:
  Type CoClass
Методы:
  void .ctor(Type coClass)
  Type get_CoClass()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComEventInterfaceAttribute
Наследуется от: Attribute
Поля:
  Type _SourceInterface
  Type _EventProvider
Свойства:
  Type SourceInterface
  Type EventProvider
Методы:
  void .ctor(Type SourceInterface, Type EventProvider)
  Type get_SourceInterface()
  Type get_EventProvider()
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibVersionAttribute
Наследуется от: Attribute
Поля:
  int _major
  int _minor
Свойства:
  int MajorVersion
  int MinorVersion
Методы:
  void .ctor(int major, int minor)
  int get_MajorVersion()
  int get_MinorVersion()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComCompatibleVersionAttribute
Наследуется от: Attribute
Поля:
  int _major
  int _minor
  int _build
  int _revision
Свойства:
  int MajorVersion
  int MinorVersion
  int BuildNumber
  int RevisionNumber
Методы:
  void .ctor(int major, int minor, int build, int revision)
  int get_MajorVersion()
  int get_MinorVersion()
  int get_BuildNumber()
  int get_RevisionNumber()
--------------------------------------------------
Класс: System.Runtime.InteropServices.BestFitMappingAttribute
Наследуется от: Attribute
Поля:
  bool _bestFitMapping
  bool ThrowOnUnmappableChar
Свойства:
  bool BestFitMapping
Методы:
  void .ctor(bool BestFitMapping)
  bool get_BestFitMapping()
--------------------------------------------------
Класс: System.Runtime.InteropServices.DefaultCharSetAttribute
Наследуется от: Attribute
Поля:
  CharSet _CharSet
Свойства:
  CharSet CharSet
Методы:
  void .ctor(CharSet charSet)
  CharSet get_CharSet()
--------------------------------------------------
Класс: System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute
Наследуется от: Attribute
Поля:
  Type _classType
  string _methodName
Свойства:
  Type ClassType
  string MethodName
Методы:
  void .ctor(Type classType, string methodName)
  Type get_ClassType()
  string get_MethodName()
--------------------------------------------------
Класс: System.Runtime.InteropServices.CallingConvention
Наследуется от: Enum
Поля:
  int value__
  CallingConvention Winapi
  CallingConvention Cdecl
  CallingConvention StdCall
  CallingConvention ThisCall
  CallingConvention FastCall
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.CriticalHandle
Наследуется от: CriticalFinalizerObject
Поля:
  IntPtr handle
  bool _isClosed
Свойства:
  bool IsClosed
  bool IsInvalid
Методы:
  void .ctor(IntPtr invalidHandleValue)
  void Finalize()
  void Cleanup()
  void FireCustomerDebugProbe()
  void SetHandle(IntPtr handle)
  bool get_IsClosed()
  bool get_IsInvalid()
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  void SetHandleAsInvalid()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Runtime.InteropServices.DispatchWrapper
Наследуется от: object
Поля:
  object m_WrappedObject
Свойства:
  object WrappedObject
Методы:
  void .ctor(object obj)
  object get_WrappedObject()
--------------------------------------------------
Класс: System.Runtime.InteropServices.CustomQueryInterfaceResult
Наследуется от: Enum
Поля:
  int value__
  CustomQueryInterfaceResult Handled
  CustomQueryInterfaceResult NotHandled
  CustomQueryInterfaceResult Failed
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ICustomQueryInterface
Поля:
Свойства:
Методы:
  CustomQueryInterfaceResult GetInterface(Guid& iid, IntPtr& ppv)
--------------------------------------------------
Класс: System.Runtime.InteropServices.AssemblyRegistrationFlags
Наследуется от: Enum
Поля:
  int value__
  AssemblyRegistrationFlags None
  AssemblyRegistrationFlags SetCodeBase
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.IRegistrationServices
Поля:
Свойства:
Методы:
  bool RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)
  bool UnregisterAssembly(Assembly assembly)
  Type[] GetRegistrableTypesInAssembly(Assembly assembly)
  string GetProgIdForType(Type type)
  void RegisterTypeForComClients(Type type, Guid& g)
  Guid GetManagedCategoryGuid()
  bool TypeRequiresRegistration(Type type)
  bool TypeRepresentsComType(Type type)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ObjectCreationDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  IntPtr Invoke(IntPtr aggregator)
  IAsyncResult BeginInvoke(IntPtr aggregator, AsyncCallback callback, object object)
  IntPtr EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.InteropServices.RuntimeEnvironment
Наследуется от: object
Поля:
Свойства:
  string SystemConfigurationFile
Методы:
  void .ctor()
  bool FromGlobalAccessCache(Assembly a)
  string GetSystemVersion()
  string GetRuntimeDirectory()
  string GetRuntimeDirectoryImpl()
  string get_SystemConfigurationFile()
  IntPtr GetRuntimeInterfaceImpl(Guid clsid, Guid riid)
  IntPtr GetRuntimeInterfaceAsIntPtr(Guid clsid, Guid riid)
  object GetRuntimeInterfaceAsObject(Guid clsid, Guid riid)
--------------------------------------------------
Класс: System.Runtime.InteropServices.SafeHandle
Наследуется от: CriticalFinalizerObject
Поля:
  IntPtr handle
  int _state
  bool _ownsHandle
  bool _fullyInitialized
  int RefCount_Mask
  int RefCount_One
Свойства:
  bool IsClosed
  bool IsInvalid
Методы:
  void .ctor(IntPtr invalidHandleValue, bool ownsHandle)
  void Finalize()
  void SetHandle(IntPtr handle)
  IntPtr DangerousGetHandle()
  bool get_IsClosed()
  bool get_IsInvalid()
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  bool ReleaseHandle()
  void SetHandleAsInvalid()
  void DangerousAddRef(Boolean& success)
  void DangerousRelease()
  void InternalDispose()
  void InternalFinalize()
  void DangerousReleaseInternal(bool dispose)
--------------------------------------------------
Класс: System.Runtime.InteropServices.CONNECTDATA
Наследуется от: ValueType
Поля:
  object pUnk
  int dwCookie
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIEnumConnections
Поля:
Свойства:
Методы:
  int Next(int celt, CONNECTDATA[] rgelt, Int32& pceltFetched)
  int Skip(int celt)
  void Reset()
  void Clone(UCOMIEnumConnections& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.TYPEKIND
Наследуется от: Enum
Поля:
  int value__
  TYPEKIND TKIND_ENUM
  TYPEKIND TKIND_RECORD
  TYPEKIND TKIND_MODULE
  TYPEKIND TKIND_INTERFACE
  TYPEKIND TKIND_DISPATCH
  TYPEKIND TKIND_COCLASS
  TYPEKIND TKIND_ALIAS
  TYPEKIND TKIND_UNION
  TYPEKIND TKIND_MAX
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TYPEFLAGS
Наследуется от: Enum
Поля:
  short value__
  TYPEFLAGS TYPEFLAG_FAPPOBJECT
  TYPEFLAGS TYPEFLAG_FCANCREATE
  TYPEFLAGS TYPEFLAG_FLICENSED
  TYPEFLAGS TYPEFLAG_FPREDECLID
  TYPEFLAGS TYPEFLAG_FHIDDEN
  TYPEFLAGS TYPEFLAG_FCONTROL
  TYPEFLAGS TYPEFLAG_FDUAL
  TYPEFLAGS TYPEFLAG_FNONEXTENSIBLE
  TYPEFLAGS TYPEFLAG_FOLEAUTOMATION
  TYPEFLAGS TYPEFLAG_FRESTRICTED
  TYPEFLAGS TYPEFLAG_FAGGREGATABLE
  TYPEFLAGS TYPEFLAG_FREPLACEABLE
  TYPEFLAGS TYPEFLAG_FDISPATCHABLE
  TYPEFLAGS TYPEFLAG_FREVERSEBIND
  TYPEFLAGS TYPEFLAG_FPROXY
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.IMPLTYPEFLAGS
Наследуется от: Enum
Поля:
  int value__
  IMPLTYPEFLAGS IMPLTYPEFLAG_FDEFAULT
  IMPLTYPEFLAGS IMPLTYPEFLAG_FSOURCE
  IMPLTYPEFLAGS IMPLTYPEFLAG_FRESTRICTED
  IMPLTYPEFLAGS IMPLTYPEFLAG_FDEFAULTVTABLE
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TYPEATTR
Наследуется от: ValueType
Поля:
  int MEMBER_ID_NIL
  Guid guid
  int lcid
  int dwReserved
  int memidConstructor
  int memidDestructor
  IntPtr lpstrSchema
  int cbSizeInstance
  TYPEKIND typekind
  short cFuncs
  short cVars
  short cImplTypes
  short cbSizeVft
  short cbAlignment
  TYPEFLAGS wTypeFlags
  short wMajorVerNum
  short wMinorVerNum
  TYPEDESC tdescAlias
  IDLDESC idldescType
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.FUNCDESC
Наследуется от: ValueType
Поля:
  int memid
  IntPtr lprgscode
  IntPtr lprgelemdescParam
  FUNCKIND funckind
  INVOKEKIND invkind
  CALLCONV callconv
  short cParams
  short cParamsOpt
  short oVft
  short cScodes
  ELEMDESC elemdescFunc
  short wFuncFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.IDLFLAG
Наследуется от: Enum
Поля:
  short value__
  IDLFLAG IDLFLAG_NONE
  IDLFLAG IDLFLAG_FIN
  IDLFLAG IDLFLAG_FOUT
  IDLFLAG IDLFLAG_FLCID
  IDLFLAG IDLFLAG_FRETVAL
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.IDLDESC
Наследуется от: ValueType
Поля:
  int dwReserved
  IDLFLAG wIDLFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.PARAMFLAG
Наследуется от: Enum
Поля:
  short value__
  PARAMFLAG PARAMFLAG_NONE
  PARAMFLAG PARAMFLAG_FIN
  PARAMFLAG PARAMFLAG_FOUT
  PARAMFLAG PARAMFLAG_FLCID
  PARAMFLAG PARAMFLAG_FRETVAL
  PARAMFLAG PARAMFLAG_FOPT
  PARAMFLAG PARAMFLAG_FHASDEFAULT
  PARAMFLAG PARAMFLAG_FHASCUSTDATA
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.PARAMDESC
Наследуется от: ValueType
Поля:
  IntPtr lpVarValue
  PARAMFLAG wParamFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TYPEDESC
Наследуется от: ValueType
Поля:
  IntPtr lpValue
  short vt
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ELEMDESC
Наследуется от: ValueType
Поля:
  TYPEDESC tdesc
  DESCUNION desc
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.VARDESC
Наследуется от: ValueType
Поля:
  int memid
  string lpstrSchema
  ELEMDESC elemdescVar
  short wVarFlags
  VarEnum varkind
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.DISPPARAMS
Наследуется от: ValueType
Поля:
  IntPtr rgvarg
  IntPtr rgdispidNamedArgs
  int cArgs
  int cNamedArgs
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.EXCEPINFO
Наследуется от: ValueType
Поля:
  short wCode
  short wReserved
  string bstrSource
  string bstrDescription
  string bstrHelpFile
  int dwHelpContext
  IntPtr pvReserved
  IntPtr pfnDeferredFillIn
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.FUNCKIND
Наследуется от: Enum
Поля:
  int value__
  FUNCKIND FUNC_VIRTUAL
  FUNCKIND FUNC_PUREVIRTUAL
  FUNCKIND FUNC_NONVIRTUAL
  FUNCKIND FUNC_STATIC
  FUNCKIND FUNC_DISPATCH
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.INVOKEKIND
Наследуется от: Enum
Поля:
  int value__
  INVOKEKIND INVOKE_FUNC
  INVOKEKIND INVOKE_PROPERTYGET
  INVOKEKIND INVOKE_PROPERTYPUT
  INVOKEKIND INVOKE_PROPERTYPUTREF
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.CALLCONV
Наследуется от: Enum
Поля:
  int value__
  CALLCONV CC_CDECL
  CALLCONV CC_MSCPASCAL
  CALLCONV CC_PASCAL
  CALLCONV CC_MACPASCAL
  CALLCONV CC_STDCALL
  CALLCONV CC_RESERVED
  CALLCONV CC_SYSCALL
  CALLCONV CC_MPWCDECL
  CALLCONV CC_MPWPASCAL
  CALLCONV CC_MAX
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.FUNCFLAGS
Наследуется от: Enum
Поля:
  short value__
  FUNCFLAGS FUNCFLAG_FRESTRICTED
  FUNCFLAGS FUNCFLAG_FSOURCE
  FUNCFLAGS FUNCFLAG_FBINDABLE
  FUNCFLAGS FUNCFLAG_FREQUESTEDIT
  FUNCFLAGS FUNCFLAG_FDISPLAYBIND
  FUNCFLAGS FUNCFLAG_FDEFAULTBIND
  FUNCFLAGS FUNCFLAG_FHIDDEN
  FUNCFLAGS FUNCFLAG_FUSESGETLASTERROR
  FUNCFLAGS FUNCFLAG_FDEFAULTCOLLELEM
  FUNCFLAGS FUNCFLAG_FUIDEFAULT
  FUNCFLAGS FUNCFLAG_FNONBROWSABLE
  FUNCFLAGS FUNCFLAG_FREPLACEABLE
  FUNCFLAGS FUNCFLAG_FIMMEDIATEBIND
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.VARFLAGS
Наследуется от: Enum
Поля:
  short value__
  VARFLAGS VARFLAG_FREADONLY
  VARFLAGS VARFLAG_FSOURCE
  VARFLAGS VARFLAG_FBINDABLE
  VARFLAGS VARFLAG_FREQUESTEDIT
  VARFLAGS VARFLAG_FDISPLAYBIND
  VARFLAGS VARFLAG_FDEFAULTBIND
  VARFLAGS VARFLAG_FHIDDEN
  VARFLAGS VARFLAG_FRESTRICTED
  VARFLAGS VARFLAG_FDEFAULTCOLLELEM
  VARFLAGS VARFLAG_FUIDEFAULT
  VARFLAGS VARFLAG_FNONBROWSABLE
  VARFLAGS VARFLAG_FREPLACEABLE
  VARFLAGS VARFLAG_FIMMEDIATEBIND
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMITypeInfo
Поля:
Свойства:
Методы:
  void GetTypeAttr(IntPtr& ppTypeAttr)
  void GetTypeComp(UCOMITypeComp& ppTComp)
  void GetFuncDesc(int index, IntPtr& ppFuncDesc)
  void GetVarDesc(int index, IntPtr& ppVarDesc)
  void GetNames(int memid, String[] rgBstrNames, int cMaxNames, Int32& pcNames)
  void GetRefTypeOfImplType(int index, Int32& href)
  void GetImplTypeFlags(int index, Int32& pImplTypeFlags)
  void GetIDsOfNames(String[] rgszNames, int cNames, Int32[] pMemId)
  void Invoke(object pvInstance, int memid, short wFlags, DISPPARAMS& pDispParams, Object& pVarResult, EXCEPINFO& pExcepInfo, Int32& puArgErr)
  void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile)
  void GetDllEntry(int memid, INVOKEKIND invKind, String& pBstrDllName, String& pBstrName, Int16& pwOrdinal)
  void GetRefTypeInfo(int hRef, UCOMITypeInfo& ppTI)
  void AddressOfMember(int memid, INVOKEKIND invKind, IntPtr& ppv)
  void CreateInstance(object pUnkOuter, Guid& riid, Object& ppvObj)
  void GetMops(int memid, String& pBstrMops)
  void GetContainingTypeLib(UCOMITypeLib& ppTLB, Int32& pIndex)
  void ReleaseTypeAttr(IntPtr pTypeAttr)
  void ReleaseFuncDesc(IntPtr pFuncDesc)
  void ReleaseVarDesc(IntPtr pVarDesc)
--------------------------------------------------
Класс: System.Runtime.InteropServices.RuntimeInformation
Наследуется от: object
Поля:
  Architecture _osArchitecture
  Architecture _processArchitecture
  OSPlatform _osPlatform
Свойства:
  string FrameworkDescription
  string OSDescription
  Architecture OSArchitecture
  Architecture ProcessArchitecture
Методы:
  void .cctor()
  string GetRuntimeArchitecture()
  string GetOSName()
  string get_FrameworkDescription()
  bool IsOSPlatform(OSPlatform osPlatform)
  string get_OSDescription()
  Architecture get_OSArchitecture()
  Architecture get_ProcessArchitecture()
--------------------------------------------------
Класс: System.Runtime.InteropServices.BINDPTR
Наследуется от: ValueType
Поля:
  IntPtr lpfuncdesc
  IntPtr lptcomp
  IntPtr lpvardesc
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.BIND_OPTS
Наследуется от: ValueType
Поля:
  int cbStruct
  int grfFlags
  int grfMode
  int dwTickCountDeadline
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComEventsHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void Combine(object rcw, Guid iid, int dispid, Delegate d)
  Delegate Remove(object rcw, Guid iid, int dispid, Delegate d)
--------------------------------------------------
Класс: System.Runtime.InteropServices.DESCKIND
Наследуется от: Enum
Поля:
  int value__
  DESCKIND DESCKIND_NONE
  DESCKIND DESCKIND_FUNCDESC
  DESCKIND DESCKIND_VARDESC
  DESCKIND DESCKIND_TYPECOMP
  DESCKIND DESCKIND_IMPLICITAPPOBJ
  DESCKIND DESCKIND_MAX
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ExporterEventKind
Наследуется от: Enum
Поля:
  int value__
  ExporterEventKind NOTIF_TYPECONVERTED
  ExporterEventKind NOTIF_CONVERTWARNING
  ExporterEventKind ERROR_REFTOINVALIDASSEMBLY
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ExtensibleClassFactory
Наследуется от: object
Поля:
  Hashtable hashtable
Свойства:
Методы:
  void .ctor()
  ObjectCreationDelegate GetObjectCreationCallback(Type t)
  void RegisterObjectCreationCallback(ObjectCreationDelegate callback)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.FILETIME
Наследуется от: ValueType
Поля:
  int dwLowDateTime
  int dwHighDateTime
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.GCHandle
Наследуется от: ValueType
Поля:
  IntPtr handle
Свойства:
  bool IsAllocated
  object Target
Методы:
  void .ctor(IntPtr h)
  void .ctor(object obj)
  void .ctor(object value, GCHandleType type)
  bool get_IsAllocated()
  object get_Target()
  void set_Target(object value)
  IntPtr AddrOfPinnedObject()
  GCHandle Alloc(object value)
  GCHandle Alloc(object value, GCHandleType type)
  void Free()
  IntPtr op_Explicit(GCHandle value)
  GCHandle op_Explicit(IntPtr value)
  bool CheckCurrentDomain(IntPtr handle)
  object GetTarget(IntPtr handle)
  IntPtr GetTargetHandle(object obj, IntPtr handle, GCHandleType type)
  void FreeHandle(IntPtr handle)
  IntPtr GetAddrOfPinnedObject(IntPtr handle)
  bool op_Equality(GCHandle a, GCHandle b)
  bool op_Inequality(GCHandle a, GCHandle b)
  bool Equals(object o)
  int GetHashCode()
  GCHandle FromIntPtr(IntPtr value)
  IntPtr ToIntPtr(GCHandle value)
--------------------------------------------------
Класс: System.Runtime.InteropServices.IErrorInfo
Поля:
Свойства:
Методы:
  int GetGUID(Guid& pGuid)
  int GetSource(String& pBstrSource)
  int GetDescription(String& pbstrDescription)
  int GetHelpFile(String& pBstrHelpFile)
  int GetHelpContext(UInt32& pdwHelpContext)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ITypeLibConverter
Поля:
Свойства:
Методы:
  object ConvertAssemblyToTypeLib(Assembly assembly, string typeLibName, TypeLibExporterFlags flags, ITypeLibExporterNotifySink notifySink)
  AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, int flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, bool unsafeInterfaces)
  AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion)
  bool GetPrimaryInteropAssembly(Guid g, int major, int minor, int lcid, String& asmName, String& asmCodeBase)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ITypeLibExporterNameProvider
Поля:
Свойства:
Методы:
  String[] GetNames()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ITypeLibExporterNotifySink
Поля:
Свойства:
Методы:
  void ReportEvent(ExporterEventKind eventKind, int eventCode, string eventMsg)
  object ResolveRef(Assembly assembly)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ITypeLibImporterNotifySink
Поля:
Свойства:
Методы:
  void ReportEvent(ImporterEventKind eventKind, int eventCode, string eventMsg)
  Assembly ResolveRef(object typeLib)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ImporterEventKind
Наследуется от: Enum
Поля:
  int value__
  ImporterEventKind NOTIF_TYPECONVERTED
  ImporterEventKind NOTIF_CONVERTWARNING
  ImporterEventKind ERROR_REFTOINVALIDTYPELIB
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.LIBFLAGS
Наследуется от: Enum
Поля:
  short value__
  LIBFLAGS LIBFLAG_FRESTRICTED
  LIBFLAGS LIBFLAG_FCONTROL
  LIBFLAGS LIBFLAG_FHIDDEN
  LIBFLAGS LIBFLAG_FHASDISKIMAGE
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ManagedErrorInfo
Наследуется от: object
Поля:
  Exception m_Exception
Свойства:
  Exception Exception
Методы:
  void .ctor(Exception e)
  Exception get_Exception()
  int GetGUID(Guid& guid)
  int GetSource(String& source)
  int GetDescription(String& description)
  int GetHelpFile(String& helpFile)
  int GetHelpContext(UInt32& helpContext)
--------------------------------------------------
Класс: System.Runtime.InteropServices.Marshal
Наследуется от: object
Поля:
  int SystemMaxDBCSCharSize
  int SystemDefaultCharSize
  bool SetErrorInfoNotAvailable
  bool GetErrorInfoNotAvailable
  Dictionary`2<ValueTuple`2<Type, string>, ICustomMarshaler> MarshalerInstanceCache
  object MarshalerInstanceCacheLock
Свойства:
Методы:
  int AddRefInternal(IntPtr pUnk)
  int AddRef(IntPtr pUnk)
  bool AreComObjectsAvailableForCleanup()
  void CleanupUnusedObjectsInCurrentContext()
  IntPtr AllocCoTaskMem(int cb)
  IntPtr AllocCoTaskMemSize(UIntPtr sizet)
  IntPtr AllocHGlobal(IntPtr cb)
  IntPtr AllocHGlobal(int cb)
  object BindToMoniker(string monikerName)
  void ChangeWrapperHandleStrength(object otp, bool fIsWeak)
  void copy_to_unmanaged(Array source, int startIndex, IntPtr destination, int length)
  void copy_to_unmanaged_fixed(Array source, int startIndex, IntPtr destination, int length, Void* fixed_source_element)
  bool skip_fixed(Array array, int startIndex)
  void copy_to_unmanaged(Byte[] source, int startIndex, IntPtr destination, int length)
  void copy_to_unmanaged(Char[] source, int startIndex, IntPtr destination, int length)
  void Copy(Byte[] source, int startIndex, IntPtr destination, int length)
  void Copy(Char[] source, int startIndex, IntPtr destination, int length)
  void Copy(Int16[] source, int startIndex, IntPtr destination, int length)
  void Copy(Int32[] source, int startIndex, IntPtr destination, int length)
  void Copy(Int64[] source, int startIndex, IntPtr destination, int length)
  void Copy(Single[] source, int startIndex, IntPtr destination, int length)
  void Copy(Double[] source, int startIndex, IntPtr destination, int length)
  void Copy(IntPtr[] source, int startIndex, IntPtr destination, int length)
  void copy_from_unmanaged(IntPtr source, int startIndex, Array destination, int length)
  void copy_from_unmanaged_fixed(IntPtr source, int startIndex, Array destination, int length, Void* fixed_destination_element)
  void Copy(IntPtr source, Byte[] destination, int startIndex, int length)
  void Copy(IntPtr source, Char[] destination, int startIndex, int length)
  void Copy(IntPtr source, Int16[] destination, int startIndex, int length)
  void Copy(IntPtr source, Int32[] destination, int startIndex, int length)
  void Copy(IntPtr source, Int64[] destination, int startIndex, int length)
  void Copy(IntPtr source, Single[] destination, int startIndex, int length)
  void Copy(IntPtr source, Double[] destination, int startIndex, int length)
  void Copy(IntPtr source, IntPtr[] destination, int startIndex, int length)
  IntPtr CreateAggregatedObject(IntPtr pOuter, object o)
  IntPtr CreateAggregatedObject(IntPtr pOuter, T o)
  object CreateWrapperOfType(object o, Type t)
  TWrapper CreateWrapperOfType(T o)
  void DestroyStructure(IntPtr ptr, Type structuretype)
  void DestroyStructure(IntPtr ptr)
  void FreeBSTR(IntPtr ptr)
  void FreeCoTaskMem(IntPtr ptr)
  void FreeHGlobal(IntPtr hglobal)
  void ClearBSTR(IntPtr ptr)
  void ZeroFreeBSTR(IntPtr s)
  void ClearAnsi(IntPtr ptr)
  void ClearUnicode(IntPtr ptr)
  void ZeroFreeCoTaskMemAnsi(IntPtr s)
  void ZeroFreeCoTaskMemUnicode(IntPtr s)
  void ZeroFreeCoTaskMemUTF8(IntPtr s)
  void ZeroFreeGlobalAllocAnsi(IntPtr s)
  void ZeroFreeGlobalAllocUnicode(IntPtr s)
  Guid GenerateGuidForType(Type type)
  string GenerateProgIdForType(Type type)
  object GetActiveObject(string progID)
  IntPtr GetCCW(object o, Type T)
  IntPtr GetComInterfaceForObjectInternal(object o, Type T)
  IntPtr GetComInterfaceForObject(object o, Type T)
  IntPtr GetComInterfaceForObject(object o, Type T, CustomQueryInterfaceMode mode)
  IntPtr GetComInterfaceForObject(T o)
  IntPtr GetComInterfaceForObjectInContext(object o, Type t)
  object GetComObjectData(object obj, object key)
  int GetComSlotForMethodInfoInternal(MemberInfo m)
  int GetComSlotForMethodInfo(MemberInfo m)
  int GetEndComSlot(Type t)
  IntPtr GetExceptionPointers()
  IntPtr GetHINSTANCE(Module m)
  int GetExceptionCode()
  int GetHRForException(Exception e)
  int GetHRForLastWin32Error()
  IntPtr GetIDispatchForObjectInternal(object o)
  IntPtr GetIDispatchForObject(object o)
  IntPtr GetIDispatchForObjectInContext(object o)
  IntPtr GetITypeInfoForType(Type t)
  IntPtr GetIUnknownForObjectInContext(object o)
  IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature)
  MemberInfo GetMethodInfoForComSlot(Type t, int slot, ComMemberType& memberType)
  IntPtr GetIUnknownForObjectInternal(object o)
  IntPtr GetIUnknownForObject(object o)
  void GetNativeVariantForObject(object obj, IntPtr pDstNativeVariant)
  void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant)
  object GetObjectForCCW(IntPtr pUnk)
  object GetObjectForIUnknown(IntPtr pUnk)
  object GetObjectForNativeVariant(IntPtr pSrcNativeVariant)
  T GetObjectForNativeVariant(IntPtr pSrcNativeVariant)
  Object[] GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars)
  T[] GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars)
  int GetStartComSlot(Type t)
  Thread GetThreadFromFiberCookie(int cookie)
  object GetTypedObjectForIUnknown(IntPtr pUnk, Type t)
  Type GetTypeForITypeInfo(IntPtr piTypeInfo)
  string GetTypeInfoName(UCOMITypeInfo pTI)
  Guid GetTypeLibGuid(UCOMITypeLib pTLB)
  Guid GetTypeLibGuid(ITypeLib typelib)
  Guid GetTypeLibGuidForAssembly(Assembly asm)
  int GetTypeLibLcid(UCOMITypeLib pTLB)
  int GetTypeLibLcid(ITypeLib typelib)
  string GetTypeLibName(UCOMITypeLib pTLB)
  string GetTypeLibName(ITypeLib typelib)
  void GetTypeLibVersionForAssembly(Assembly inputAssembly, Int32& majorVersion, Int32& minorVersion)
  IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature)
  bool IsTypeVisibleFromCom(Type t)
  int NumParamBytes(MethodInfo m)
  Type GetTypeFromCLSID(Guid clsid)
  string GetTypeInfoName(ITypeInfo typeInfo)
  object GetUniqueObjectForIUnknown(IntPtr unknown)
  bool IsComObject(object o)
  int GetLastWin32Error()
  IntPtr OffsetOf(Type t, string fieldName)
  IntPtr OffsetOf(string fieldName)
  void Prelink(MethodInfo m)
  void PrelinkAll(Type c)
  string PtrToStringAnsi(IntPtr ptr)
  string PtrToStringAnsi(IntPtr ptr, int len)
  string PtrToStringUTF8(IntPtr ptr)
  string PtrToStringUTF8(IntPtr ptr, int byteLen)
  string PtrToStringAuto(IntPtr ptr)
  string PtrToStringAuto(IntPtr ptr, int len)
  string PtrToStringUni(IntPtr ptr)
  string PtrToStringUni(IntPtr ptr, int len)
  string PtrToStringBSTR(IntPtr ptr)
  void PtrToStructure(IntPtr ptr, object structure)
  object PtrToStructure(IntPtr ptr, Type structureType)
  void PtrToStructure(IntPtr ptr, T structure)
  T PtrToStructure(IntPtr ptr)
  int QueryInterfaceInternal(IntPtr pUnk, Guid& iid, IntPtr& ppv)
  int QueryInterface(IntPtr pUnk, Guid& iid, IntPtr& ppv)
  byte ReadByte(IntPtr ptr)
  byte ReadByte(IntPtr ptr, int ofs)
  byte ReadByte(object ptr, int ofs)
  short ReadInt16(IntPtr ptr)
  short ReadInt16(IntPtr ptr, int ofs)
  short ReadInt16(object ptr, int ofs)
  int ReadInt32(IntPtr ptr)
  int ReadInt32(IntPtr ptr, int ofs)
  int ReadInt32(object ptr, int ofs)
  long ReadInt64(IntPtr ptr)
  long ReadInt64(IntPtr ptr, int ofs)
  long ReadInt64(object ptr, int ofs)
  IntPtr ReadIntPtr(IntPtr ptr)
  IntPtr ReadIntPtr(IntPtr ptr, int ofs)
  IntPtr ReadIntPtr(object ptr, int ofs)
  IntPtr ReAllocCoTaskMem(IntPtr pv, int cb)
  IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb)
  int ReleaseInternal(IntPtr pUnk)
  int Release(IntPtr pUnk)
  int ReleaseComObjectInternal(object co)
  int ReleaseComObject(object o)
  void ReleaseThreadCache()
  bool SetComObjectData(object obj, object key, object data)
  int SizeOf(object structure)
  int SizeOf(Type t)
  int SizeOf()
  int SizeOf(T structure)
  UInt32 SizeOfType(Type type)
  UInt32 AlignedSizeOf()
  IntPtr StringToBSTR(string s)
  IntPtr StringToCoTaskMemAnsi(string s)
  IntPtr StringToCoTaskMemAuto(string s)
  IntPtr StringToCoTaskMemUni(string s)
  IntPtr StringToHGlobalAnsi(Char* s, int length)
  IntPtr StringToHGlobalAnsi(string s)
  IntPtr StringToAllocatedMemoryUTF8(string s)
  IntPtr StringToHGlobalAuto(string s)
  IntPtr StringToHGlobalUni(Char* s, int length)
  IntPtr StringToHGlobalUni(string s)
  IntPtr SecureStringToBSTR(SecureString s)
  IntPtr SecureStringCoTaskMemAllocator(int len)
  IntPtr SecureStringGlobalAllocator(int len)
  IntPtr SecureStringToAnsi(SecureString s, SecureStringAllocator allocator)
  IntPtr SecureStringToUnicode(SecureString s, SecureStringAllocator allocator)
  IntPtr SecureStringToCoTaskMemAnsi(SecureString s)
  IntPtr SecureStringToCoTaskMemUnicode(SecureString s)
  IntPtr SecureStringToGlobalAllocAnsi(SecureString s)
  IntPtr SecureStringToGlobalAllocUnicode(SecureString s)
  void StructureToPtr(object structure, IntPtr ptr, bool fDeleteOld)
  void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld)
  void ThrowExceptionForHR(int errorCode)
  void ThrowExceptionForHR(int errorCode, IntPtr errorInfo)
  IntPtr BufferToBSTR(Char* ptr, int slen)
  IntPtr UnsafeAddrOfPinnedArrayElement(Array arr, int index)
  IntPtr UnsafeAddrOfPinnedArrayElement(T[] arr, int index)
  void WriteByte(IntPtr ptr, byte val)
  void WriteByte(IntPtr ptr, int ofs, byte val)
  void WriteByte(object ptr, int ofs, byte val)
  void WriteInt16(IntPtr ptr, short val)
  void WriteInt16(IntPtr ptr, int ofs, short val)
  void WriteInt16(object ptr, int ofs, short val)
  void WriteInt16(IntPtr ptr, char val)
  void WriteInt16(IntPtr ptr, int ofs, char val)
  void WriteInt16(object ptr, int ofs, char val)
  void WriteInt32(IntPtr ptr, int val)
  void WriteInt32(IntPtr ptr, int ofs, int val)
  void WriteInt32(object ptr, int ofs, int val)
  void WriteInt64(IntPtr ptr, long val)
  void WriteInt64(IntPtr ptr, int ofs, long val)
  void WriteInt64(object ptr, int ofs, long val)
  void WriteIntPtr(IntPtr ptr, IntPtr val)
  void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val)
  void WriteIntPtr(object ptr, int ofs, IntPtr val)
  Exception ConvertHrToException(int errorCode)
  int _SetErrorInfo(int dwReserved, IErrorInfo pIErrorInfo)
  int _GetErrorInfo(int dwReserved, IErrorInfo& ppIErrorInfo)
  int SetErrorInfo(int dwReserved, IErrorInfo errorInfo)
  int GetErrorInfo(int dwReserved, IErrorInfo& errorInfo)
  Exception GetExceptionForHR(int errorCode)
  Exception GetExceptionForHR(int errorCode, IntPtr errorInfo)
  int FinalReleaseComObject(object o)
  Delegate GetDelegateForFunctionPointerInternal(IntPtr ptr, Type t)
  Delegate GetDelegateForFunctionPointer(IntPtr ptr, Type t)
  TDelegate GetDelegateForFunctionPointer(IntPtr ptr)
  IntPtr GetFunctionPointerForDelegateInternal(Delegate d)
  IntPtr GetFunctionPointerForDelegate(Delegate d)
  IntPtr GetFunctionPointerForDelegate(TDelegate d)
  void SetLastWin32Error(int error)
  IntPtr GetRawIUnknownForComObjectNoAddRef(object o)
  int GetHRForException_WinRT(Exception e)
  object GetNativeActivationFactory(Type type)
  ICustomMarshaler GetCustomMarshalerInstance(Type type, string cookie)
  IntPtr StringToCoTaskMemUTF8(string s)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.MarshalAsAttribute
Наследуется от: Attribute
Поля:
  string MarshalCookie
  string MarshalType
  Type MarshalTypeRef
  Type SafeArrayUserDefinedSubType
  UnmanagedType utype
  UnmanagedType ArraySubType
  VarEnum SafeArraySubType
  int SizeConst
  int IidParameterIndex
  short SizeParamIndex
Свойства:
  UnmanagedType Value
Методы:
  void .ctor(short unmanagedType)
  void .ctor(UnmanagedType unmanagedType)
  UnmanagedType get_Value()
  MarshalAsAttribute Copy()
--------------------------------------------------
Класс: System.Runtime.InteropServices.RegistrationClassContext
Наследуется от: Enum
Поля:
  int value__
  RegistrationClassContext DisableActivateAsActivator
  RegistrationClassContext EnableActivateAsActivator
  RegistrationClassContext EnableCodeDownload
  RegistrationClassContext FromDefaultContext
  RegistrationClassContext InProcessHandler
  RegistrationClassContext InProcessHandler16
  RegistrationClassContext InProcessServer
  RegistrationClassContext InProcessServer16
  RegistrationClassContext LocalServer
  RegistrationClassContext NoCodeDownload
  RegistrationClassContext NoCustomMarshal
  RegistrationClassContext NoFailureLog
  RegistrationClassContext RemoteServer
  RegistrationClassContext Reserved1
  RegistrationClassContext Reserved2
  RegistrationClassContext Reserved3
  RegistrationClassContext Reserved4
  RegistrationClassContext Reserved5
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.RegistrationServices
Наследуется от: object
Поля:
  Guid guidManagedCategory
Свойства:
Методы:
  void .ctor()
  Guid GetManagedCategoryGuid()
  string GetProgIdForType(Type type)
  Type[] GetRegistrableTypesInAssembly(Assembly assembly)
  bool RegisterAssembly(Assembly assembly, AssemblyRegistrationFlags flags)
  void RegisterTypeForComClients(Type type, Guid& g)
  bool TypeRepresentsComType(Type type)
  bool TypeRequiresRegistration(Type type)
  bool UnregisterAssembly(Assembly assembly)
  int RegisterTypeForComClients(Type type, RegistrationClassContext classContext, RegistrationConnectionType flags)
  void UnregisterTypeForComClients(int cookie)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.STATSTG
Наследуется от: ValueType
Поля:
  string pwcsName
  int type
  long cbSize
  FILETIME mtime
  FILETIME ctime
  FILETIME atime
  int grfMode
  int grfLocksSupported
  Guid clsid
  int grfStateBits
  int reserved
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.SYSKIND
Наследуется от: Enum
Поля:
  int value__
  SYSKIND SYS_WIN16
  SYSKIND SYS_WIN32
  SYSKIND SYS_MAC
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TYPELIBATTR
Наследуется от: ValueType
Поля:
  Guid guid
  int lcid
  SYSKIND syskind
  short wMajorVerNum
  short wMinorVerNum
  LIBFLAGS wLibFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibConverter
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  object ConvertAssemblyToTypeLib(Assembly assembly, string strTypeLibName, TypeLibExporterFlags flags, ITypeLibExporterNotifySink notifySink)
  AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, int flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, bool unsafeInterfaces)
  AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, TypeLibImporterFlags flags, ITypeLibImporterNotifySink notifySink, Byte[] publicKey, StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion)
  bool GetPrimaryInteropAssembly(Guid g, int major, int minor, int lcid, String& asmName, String& asmCodeBase)
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibExporterFlags
Наследуется от: Enum
Поля:
  int value__
  TypeLibExporterFlags OnlyReferenceRegistered
  TypeLibExporterFlags None
  TypeLibExporterFlags CallerResolvedReferences
  TypeLibExporterFlags OldNames
  TypeLibExporterFlags ExportAs32Bit
  TypeLibExporterFlags ExportAs64Bit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.TypeLibImporterFlags
Наследуется от: Enum
Поля:
  int value__
  TypeLibImporterFlags PrimaryInteropAssembly
  TypeLibImporterFlags UnsafeInterfaces
  TypeLibImporterFlags SafeArrayAsSystemArray
  TypeLibImporterFlags TransformDispRetVals
  TypeLibImporterFlags None
  TypeLibImporterFlags PreventClassMembers
  TypeLibImporterFlags ImportAsAgnostic
  TypeLibImporterFlags ImportAsItanium
  TypeLibImporterFlags ImportAsX64
  TypeLibImporterFlags ImportAsX86
  TypeLibImporterFlags ReflectionOnlyLoading
  TypeLibImporterFlags SerializableValueClasses
  TypeLibImporterFlags NoDefineVersionResource
  TypeLibImporterFlags ImportAsArm
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIBindCtx
Поля:
Свойства:
Методы:
  void RegisterObjectBound(object punk)
  void RevokeObjectBound(object punk)
  void ReleaseBoundObjects()
  void SetBindOptions(BIND_OPTS& pbindopts)
  void GetBindOptions(BIND_OPTS& pbindopts)
  void GetRunningObjectTable(UCOMIRunningObjectTable& pprot)
  void RegisterObjectParam(string pszKey, object punk)
  void GetObjectParam(string pszKey, Object& ppunk)
  void EnumObjectParam(UCOMIEnumString& ppenum)
  void RevokeObjectParam(string pszKey)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIConnectionPoint
Поля:
Свойства:
Методы:
  void GetConnectionInterface(Guid& pIID)
  void GetConnectionPointContainer(UCOMIConnectionPointContainer& ppCPC)
  void Advise(object pUnkSink, Int32& pdwCookie)
  void Unadvise(int dwCookie)
  void EnumConnections(UCOMIEnumConnections& ppEnum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIConnectionPointContainer
Поля:
Свойства:
Методы:
  void EnumConnectionPoints(UCOMIEnumConnectionPoints& ppEnum)
  void FindConnectionPoint(Guid& riid, UCOMIConnectionPoint& ppCP)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIEnumConnectionPoints
Поля:
Свойства:
Методы:
  int Next(int celt, UCOMIConnectionPoint[] rgelt, Int32& pceltFetched)
  int Skip(int celt)
  int Reset()
  void Clone(UCOMIEnumConnectionPoints& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIEnumMoniker
Поля:
Свойства:
Методы:
  int Next(int celt, UCOMIMoniker[] rgelt, Int32& pceltFetched)
  int Skip(int celt)
  int Reset()
  void Clone(UCOMIEnumMoniker& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIEnumString
Поля:
Свойства:
Методы:
  int Next(int celt, String[] rgelt, Int32& pceltFetched)
  int Skip(int celt)
  int Reset()
  void Clone(UCOMIEnumString& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIEnumVARIANT
Поля:
Свойства:
Методы:
  int Next(int celt, int rgvar, int pceltFetched)
  int Skip(int celt)
  int Reset()
  void Clone(int ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIMoniker
Поля:
Свойства:
Методы:
  void GetClassID(Guid& pClassID)
  int IsDirty()
  void Load(UCOMIStream pStm)
  void Save(UCOMIStream pStm, bool fClearDirty)
  void GetSizeMax(Int64& pcbSize)
  void BindToObject(UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, Guid& riidResult, Object& ppvResult)
  void BindToStorage(UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, Guid& riid, Object& ppvObj)
  void Reduce(UCOMIBindCtx pbc, int dwReduceHowFar, UCOMIMoniker& ppmkToLeft, UCOMIMoniker& ppmkReduced)
  void ComposeWith(UCOMIMoniker pmkRight, bool fOnlyIfNotGeneric, UCOMIMoniker& ppmkComposite)
  void Enum(bool fForward, UCOMIEnumMoniker& ppenumMoniker)
  void IsEqual(UCOMIMoniker pmkOtherMoniker)
  void Hash(Int32& pdwHash)
  void IsRunning(UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, UCOMIMoniker pmkNewlyRunning)
  void GetTimeOfLastChange(UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, FILETIME& pFileTime)
  void Inverse(UCOMIMoniker& ppmk)
  void CommonPrefixWith(UCOMIMoniker pmkOther, UCOMIMoniker& ppmkPrefix)
  void RelativePathTo(UCOMIMoniker pmkOther, UCOMIMoniker& ppmkRelPath)
  void GetDisplayName(UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, String& ppszDisplayName)
  void ParseDisplayName(UCOMIBindCtx pbc, UCOMIMoniker pmkToLeft, string pszDisplayName, Int32& pchEaten, UCOMIMoniker& ppmkOut)
  void IsSystemMoniker(Int32& pdwMksys)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIPersistFile
Поля:
Свойства:
Методы:
  void GetClassID(Guid& pClassID)
  int IsDirty()
  void Load(string pszFileName, int dwMode)
  void Save(string pszFileName, bool fRemember)
  void SaveCompleted(string pszFileName)
  void GetCurFile(String& ppszFileName)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIRunningObjectTable
Поля:
Свойства:
Методы:
  void Register(int grfFlags, object punkObject, UCOMIMoniker pmkObjectName, Int32& pdwRegister)
  void Revoke(int dwRegister)
  void IsRunning(UCOMIMoniker pmkObjectName)
  void GetObject(UCOMIMoniker pmkObjectName, Object& ppunkObject)
  void NoteChangeTime(int dwRegister, FILETIME& pfiletime)
  void GetTimeOfLastChange(UCOMIMoniker pmkObjectName, FILETIME& pfiletime)
  void EnumRunning(UCOMIEnumMoniker& ppenumMoniker)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMIStream
Поля:
Свойства:
Методы:
  void Read(Byte[] pv, int cb, IntPtr pcbRead)
  void Write(Byte[] pv, int cb, IntPtr pcbWritten)
  void Seek(long dlibMove, int dwOrigin, IntPtr plibNewPosition)
  void SetSize(long libNewSize)
  void CopyTo(UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten)
  void Commit(int grfCommitFlags)
  void Revert()
  void LockRegion(long libOffset, long cb, int dwLockType)
  void UnlockRegion(long libOffset, long cb, int dwLockType)
  void Stat(STATSTG& pstatstg, int grfStatFlag)
  void Clone(UCOMIStream& ppstm)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMITypeComp
Поля:
Свойства:
Методы:
  void Bind(string szName, int lHashVal, short wFlags, UCOMITypeInfo& ppTInfo, DESCKIND& pDescKind, BINDPTR& pBindPtr)
  void BindType(string szName, int lHashVal, UCOMITypeInfo& ppTInfo, UCOMITypeComp& ppTComp)
--------------------------------------------------
Класс: System.Runtime.InteropServices.UCOMITypeLib
Поля:
Свойства:
Методы:
  int GetTypeInfoCount()
  void GetTypeInfo(int index, UCOMITypeInfo& ppTI)
  void GetTypeInfoType(int index, TYPEKIND& pTKind)
  void GetTypeInfoOfGuid(Guid& guid, UCOMITypeInfo& ppTInfo)
  void GetLibAttr(IntPtr& ppTLibAttr)
  void GetTypeComp(UCOMITypeComp& ppTComp)
  void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile)
  bool IsName(string szNameBuf, int lHashVal)
  void FindName(string szNameBuf, int lHashVal, UCOMITypeInfo[] ppTInfo, Int32[] rgMemId, Int16& pcFound)
  void ReleaseTLibAttr(IntPtr pTLibAttr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._Activator
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._Assembly
Поля:
Свойства:
  string CodeBase
  string EscapedCodeBase
  string FullName
  MethodInfo EntryPoint
  string Location
  Evidence Evidence
  bool GlobalAssemblyCache
Методы:
  string ToString()
  bool Equals(object other)
  int GetHashCode()
  Type GetType()
  string get_CodeBase()
  string get_EscapedCodeBase()
  AssemblyName GetName()
  AssemblyName GetName(bool copiedName)
  string get_FullName()
  MethodInfo get_EntryPoint()
  Type GetType(string name)
  Type GetType(string name, bool throwOnError)
  Type[] GetExportedTypes()
  Type[] GetTypes()
  Stream GetManifestResourceStream(Type type, string name)
  Stream GetManifestResourceStream(string name)
  FileStream GetFile(string name)
  FileStream[] GetFiles()
  FileStream[] GetFiles(bool getResourceModules)
  String[] GetManifestResourceNames()
  ManifestResourceInfo GetManifestResourceInfo(string resourceName)
  string get_Location()
  Evidence get_Evidence()
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Type GetType(string name, bool throwOnError, bool ignoreCase)
  Assembly GetSatelliteAssembly(CultureInfo culture)
  Assembly GetSatelliteAssembly(CultureInfo culture, Version version)
  Module LoadModule(string moduleName, Byte[] rawModule)
  Module LoadModule(string moduleName, Byte[] rawModule, Byte[] rawSymbolStore)
  object CreateInstance(string typeName)
  object CreateInstance(string typeName, bool ignoreCase)
  object CreateInstance(string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  Module[] GetLoadedModules()
  Module[] GetLoadedModules(bool getResourceModules)
  Module[] GetModules()
  Module[] GetModules(bool getResourceModules)
  Module GetModule(string name)
  AssemblyName[] GetReferencedAssemblies()
  bool get_GlobalAssemblyCache()
  void add_ModuleResolve(ModuleResolveEventHandler value)
  void remove_ModuleResolve(ModuleResolveEventHandler value)
--------------------------------------------------
Класс: System.Runtime.InteropServices._AssemblyBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._AssemblyName
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._Attribute
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._ConstructorBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._ConstructorInfo
Поля:
Свойства:
  MethodAttributes Attributes
  CallingConventions CallingConvention
  Type DeclaringType
  bool IsAbstract
  bool IsAssembly
  bool IsConstructor
  bool IsFamily
  bool IsFamilyAndAssembly
  bool IsFamilyOrAssembly
  bool IsFinal
  bool IsHideBySig
  bool IsPrivate
  bool IsPublic
  bool IsSpecialName
  bool IsStatic
  bool IsVirtual
  MemberTypes MemberType
  RuntimeMethodHandle MethodHandle
  string Name
  Type ReflectedType
Методы:
  bool Equals(object other)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int GetHashCode()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  Type GetType()
  object Invoke_5(Object[] parameters)
  object Invoke_3(object obj, Object[] parameters)
  object Invoke_4(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  object Invoke_2(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  string ToString()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  Type get_DeclaringType()
  bool get_IsAbstract()
  bool get_IsAssembly()
  bool get_IsConstructor()
  bool get_IsFamily()
  bool get_IsFamilyAndAssembly()
  bool get_IsFamilyOrAssembly()
  bool get_IsFinal()
  bool get_IsHideBySig()
  bool get_IsPrivate()
  bool get_IsPublic()
  bool get_IsSpecialName()
  bool get_IsStatic()
  bool get_IsVirtual()
  MemberTypes get_MemberType()
  RuntimeMethodHandle get_MethodHandle()
  string get_Name()
  Type get_ReflectedType()
--------------------------------------------------
Класс: System.Runtime.InteropServices._CustomAttributeBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._EnumBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._EventBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._EventInfo
Поля:
Свойства:
  EventAttributes Attributes
  Type DeclaringType
  Type EventHandlerType
  bool IsMulticast
  bool IsSpecialName
  MemberTypes MemberType
  string Name
  Type ReflectedType
Методы:
  void AddEventHandler(object target, Delegate handler)
  bool Equals(object other)
  MethodInfo GetAddMethod()
  MethodInfo GetAddMethod(bool nonPublic)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int GetHashCode()
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  MethodInfo GetRaiseMethod()
  MethodInfo GetRaiseMethod(bool nonPublic)
  MethodInfo GetRemoveMethod()
  MethodInfo GetRemoveMethod(bool nonPublic)
  Type GetType()
  bool IsDefined(Type attributeType, bool inherit)
  void RemoveEventHandler(object target, Delegate handler)
  string ToString()
  EventAttributes get_Attributes()
  Type get_DeclaringType()
  Type get_EventHandlerType()
  bool get_IsMulticast()
  bool get_IsSpecialName()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_ReflectedType()
--------------------------------------------------
Класс: System.Runtime.InteropServices._Exception
Поля:
Свойства:
  string HelpLink
  Exception InnerException
  string Message
  string Source
  string StackTrace
  MethodBase TargetSite
Методы:
  string get_HelpLink()
  void set_HelpLink(string value)
  Exception get_InnerException()
  string get_Message()
  string get_Source()
  void set_Source(string value)
  string get_StackTrace()
  MethodBase get_TargetSite()
  bool Equals(object obj)
  Exception GetBaseException()
  int GetHashCode()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Type GetType()
  string ToString()
--------------------------------------------------
Класс: System.Runtime.InteropServices._FieldBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._FieldInfo
Поля:
Свойства:
  FieldAttributes Attributes
  Type DeclaringType
  RuntimeFieldHandle FieldHandle
  Type FieldType
  bool IsAssembly
  bool IsFamily
  bool IsFamilyAndAssembly
  bool IsFamilyOrAssembly
  bool IsInitOnly
  bool IsLiteral
  bool IsNotSerialized
  bool IsPinvokeImpl
  bool IsPrivate
  bool IsPublic
  bool IsSpecialName
  bool IsStatic
  MemberTypes MemberType
  string Name
  Type ReflectedType
Методы:
  bool Equals(object other)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int GetHashCode()
  Type GetType()
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  object GetValue(object obj)
  object GetValueDirect(TypedReference obj)
  bool IsDefined(Type attributeType, bool inherit)
  void SetValue(object obj, object value)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  void SetValueDirect(TypedReference obj, object value)
  string ToString()
  FieldAttributes get_Attributes()
  Type get_DeclaringType()
  RuntimeFieldHandle get_FieldHandle()
  Type get_FieldType()
  bool get_IsAssembly()
  bool get_IsFamily()
  bool get_IsFamilyAndAssembly()
  bool get_IsFamilyOrAssembly()
  bool get_IsInitOnly()
  bool get_IsLiteral()
  bool get_IsNotSerialized()
  bool get_IsPinvokeImpl()
  bool get_IsPrivate()
  bool get_IsPublic()
  bool get_IsSpecialName()
  bool get_IsStatic()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_ReflectedType()
--------------------------------------------------
Класс: System.Runtime.InteropServices._ILGenerator
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._LocalBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._MemberInfo
Поля:
Свойства:
  Type DeclaringType
  MemberTypes MemberType
  string Name
  Type ReflectedType
Методы:
  bool Equals(object other)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int GetHashCode()
  Type GetType()
  bool IsDefined(Type attributeType, bool inherit)
  string ToString()
  Type get_DeclaringType()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_ReflectedType()
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._MethodBase
Поля:
Свойства:
  MethodAttributes Attributes
  CallingConventions CallingConvention
  Type DeclaringType
  bool IsAbstract
  bool IsAssembly
  bool IsConstructor
  bool IsFamily
  bool IsFamilyAndAssembly
  bool IsFamilyOrAssembly
  bool IsFinal
  bool IsHideBySig
  bool IsPrivate
  bool IsPublic
  bool IsSpecialName
  bool IsStatic
  bool IsVirtual
  MemberTypes MemberType
  RuntimeMethodHandle MethodHandle
  string Name
  Type ReflectedType
Методы:
  bool Equals(object other)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int GetHashCode()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  Type GetType()
  object Invoke(object obj, Object[] parameters)
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  string ToString()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  Type get_DeclaringType()
  bool get_IsAbstract()
  bool get_IsAssembly()
  bool get_IsConstructor()
  bool get_IsFamily()
  bool get_IsFamilyAndAssembly()
  bool get_IsFamilyOrAssembly()
  bool get_IsFinal()
  bool get_IsHideBySig()
  bool get_IsPrivate()
  bool get_IsPublic()
  bool get_IsSpecialName()
  bool get_IsStatic()
  bool get_IsVirtual()
  MemberTypes get_MemberType()
  RuntimeMethodHandle get_MethodHandle()
  string get_Name()
  Type get_ReflectedType()
--------------------------------------------------
Класс: System.Runtime.InteropServices._MethodBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._MethodInfo
Поля:
Свойства:
  MemberTypes MemberType
  string Name
  Type DeclaringType
  Type ReflectedType
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  CallingConventions CallingConvention
  bool IsPublic
  bool IsPrivate
  bool IsFamily
  bool IsAssembly
  bool IsFamilyAndAssembly
  bool IsFamilyOrAssembly
  bool IsStatic
  bool IsFinal
  bool IsVirtual
  bool IsHideBySig
  bool IsAbstract
  bool IsSpecialName
  bool IsConstructor
  Type ReturnType
  ICustomAttributeProvider ReturnTypeCustomAttributes
Методы:
  void GetTypeInfoCount(UInt32& pcTInfo)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  string ToString()
  bool Equals(object other)
  int GetHashCode()
  Type GetType()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_DeclaringType()
  Type get_ReflectedType()
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  ParameterInfo[] GetParameters()
  MethodImplAttributes GetMethodImplementationFlags()
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  bool get_IsPublic()
  bool get_IsPrivate()
  bool get_IsFamily()
  bool get_IsAssembly()
  bool get_IsFamilyAndAssembly()
  bool get_IsFamilyOrAssembly()
  bool get_IsStatic()
  bool get_IsFinal()
  bool get_IsVirtual()
  bool get_IsHideBySig()
  bool get_IsAbstract()
  bool get_IsSpecialName()
  bool get_IsConstructor()
  object Invoke(object obj, Object[] parameters)
  Type get_ReturnType()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
  MethodInfo GetBaseDefinition()
--------------------------------------------------
Класс: System.Runtime.InteropServices._MethodRental
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._Module
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._ModuleBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._ParameterBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._ParameterInfo
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._PropertyBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._PropertyInfo
Поля:
Свойства:
  PropertyAttributes Attributes
  bool CanRead
  bool CanWrite
  Type DeclaringType
  bool IsSpecialName
  MemberTypes MemberType
  string Name
  Type PropertyType
  Type ReflectedType
Методы:
  bool Equals(object other)
  MethodInfo[] GetAccessors()
  MethodInfo[] GetAccessors(bool nonPublic)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  MethodInfo GetGetMethod()
  MethodInfo GetGetMethod(bool nonPublic)
  int GetHashCode()
  ParameterInfo[] GetIndexParameters()
  MethodInfo GetSetMethod()
  MethodInfo GetSetMethod(bool nonPublic)
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  Type GetType()
  object GetValue(object obj, Object[] index)
  object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  void SetValue(object obj, object value, Object[] index)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  string ToString()
  PropertyAttributes get_Attributes()
  bool get_CanRead()
  bool get_CanWrite()
  Type get_DeclaringType()
  bool get_IsSpecialName()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_PropertyType()
  Type get_ReflectedType()
--------------------------------------------------
Класс: System.Runtime.InteropServices._SignatureHelper
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._Thread
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices._Type
Поля:
Свойства:
  MemberTypes MemberType
  string Name
  Type DeclaringType
  Type ReflectedType
  Guid GUID
  Module Module
  Assembly Assembly
  RuntimeTypeHandle TypeHandle
  string FullName
  string Namespace
  string AssemblyQualifiedName
  Type BaseType
  Type UnderlyingSystemType
  ConstructorInfo TypeInitializer
  TypeAttributes Attributes
  bool IsNotPublic
  bool IsPublic
  bool IsNestedPublic
  bool IsNestedPrivate
  bool IsNestedFamily
  bool IsNestedAssembly
  bool IsNestedFamANDAssem
  bool IsNestedFamORAssem
  bool IsAutoLayout
  bool IsLayoutSequential
  bool IsExplicitLayout
  bool IsClass
  bool IsInterface
  bool IsValueType
  bool IsAbstract
  bool IsSealed
  bool IsEnum
  bool IsSpecialName
  bool IsImport
  bool IsSerializable
  bool IsAnsiClass
  bool IsUnicodeClass
  bool IsAutoClass
  bool IsArray
  bool IsByRef
  bool IsPointer
  bool IsPrimitive
  bool IsCOMObject
  bool HasElementType
  bool IsContextful
  bool IsMarshalByRef
Методы:
  void GetTypeInfoCount(UInt32& pcTInfo)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  string ToString()
  bool Equals(object other)
  int GetHashCode()
  Type GetType()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_DeclaringType()
  Type get_ReflectedType()
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  Guid get_GUID()
  Module get_Module()
  Assembly get_Assembly()
  RuntimeTypeHandle get_TypeHandle()
  string get_FullName()
  string get_Namespace()
  string get_AssemblyQualifiedName()
  int GetArrayRank()
  Type get_BaseType()
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  Type GetInterface(string name, bool ignoreCase)
  Type[] GetInterfaces()
  Type[] FindInterfaces(TypeFilter filter, object filterCriteria)
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetDefaultMembers()
  MemberInfo[] FindMembers(MemberTypes memberType, BindingFlags bindingAttr, MemberFilter filter, object filterCriteria)
  Type GetElementType()
  bool IsSubclassOf(Type c)
  bool IsInstanceOfType(object o)
  bool IsAssignableFrom(Type c)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Type get_UnderlyingSystemType()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, CultureInfo culture)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args)
  ConstructorInfo GetConstructor(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo GetConstructor(BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo GetConstructor(Type[] types)
  ConstructorInfo[] GetConstructors()
  ConstructorInfo get_TypeInitializer()
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, Type[] types)
  MethodInfo GetMethod(string name)
  MethodInfo[] GetMethods()
  FieldInfo GetField(string name)
  FieldInfo[] GetFields()
  Type GetInterface(string name)
  EventInfo GetEvent(string name)
  PropertyInfo GetProperty(string name, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo GetProperty(string name, Type returnType, Type[] types)
  PropertyInfo GetProperty(string name, Type[] types)
  PropertyInfo GetProperty(string name, Type returnType)
  PropertyInfo GetProperty(string name)
  PropertyInfo[] GetProperties()
  Type[] GetNestedTypes()
  Type GetNestedType(string name)
  MemberInfo[] GetMember(string name)
  MemberInfo[] GetMembers()
  TypeAttributes get_Attributes()
  bool get_IsNotPublic()
  bool get_IsPublic()
  bool get_IsNestedPublic()
  bool get_IsNestedPrivate()
  bool get_IsNestedFamily()
  bool get_IsNestedAssembly()
  bool get_IsNestedFamANDAssem()
  bool get_IsNestedFamORAssem()
  bool get_IsAutoLayout()
  bool get_IsLayoutSequential()
  bool get_IsExplicitLayout()
  bool get_IsClass()
  bool get_IsInterface()
  bool get_IsValueType()
  bool get_IsAbstract()
  bool get_IsSealed()
  bool get_IsEnum()
  bool get_IsSpecialName()
  bool get_IsImport()
  bool get_IsSerializable()
  bool get_IsAnsiClass()
  bool get_IsUnicodeClass()
  bool get_IsAutoClass()
  bool get_IsArray()
  bool get_IsByRef()
  bool get_IsPointer()
  bool get_IsPrimitive()
  bool get_IsCOMObject()
  bool get_HasElementType()
  bool get_IsContextful()
  bool get_IsMarshalByRef()
  bool Equals(Type o)
--------------------------------------------------
Класс: System.Runtime.InteropServices._TypeBuilder
Поля:
Свойства:
Методы:
  void GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void GetTypeInfoCount(UInt32& pcTInfo)
  void Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Runtime.InteropServices.AddrofIntrinsics
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr AddrOf(T ftn)
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute
Наследуется от: Attribute
Поля:
  Type m_defaultInterface
Свойства:
  Type DefaultInterface
Методы:
  void .ctor(Type defaultInterface)
  Type get_DefaultInterface()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeImportAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute
Наследуется от: Attribute
Поля:
  Type m_interfaceType
  byte m_majorVersion
  byte m_minorVersion
  byte m_buildVersion
  byte m_revisionVersion
Свойства:
  Type InterfaceType
  byte MajorVersion
  byte MinorVersion
  byte BuildVersion
  byte RevisionVersion
Методы:
  void .ctor(Type interfaceType, byte majorVersion, byte minorVersion, byte buildVersion, byte revisionVersion)
  Type get_InterfaceType()
  byte get_MajorVersion()
  byte get_MinorVersion()
  byte get_BuildVersion()
  byte get_RevisionVersion()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
Наследуется от: Attribute
Поля:
  string m_Name
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
Наследуется от: ValueType
Поля:
  ulong m_value
Свойства:
  ulong Value
Методы:
  void .ctor(ulong value)
  ulong get_Value()
  bool op_Equality(EventRegistrationToken left, EventRegistrationToken right)
  bool op_Inequality(EventRegistrationToken left, EventRegistrationToken right)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1
Наследуется от: object
Поля:
  Dictionary`2<EventRegistrationToken, T> m_tokens
  T modreq(System.Runtime.CompilerServices.IsVolatile) m_invokeList
Свойства:
  T InvocationList
Методы:
  void .ctor()
  T get_InvocationList()
  void set_InvocationList(T value)
  EventRegistrationToken AddEventHandler(T handler)
  EventRegistrationToken AddEventHandlerNoLock(T handler)
  T ExtractHandler(EventRegistrationToken token)
  EventRegistrationToken GetPreferredToken(T handler)
  void RemoveEventHandler(EventRegistrationToken token)
  void RemoveEventHandler(T handler)
  void RemoveEventHandlerNoLock(EventRegistrationToken token)
  EventRegistrationTokenTable`1<T> GetOrCreateEventRegistrationTokenTable(EventRegistrationTokenTable`1& refEventTable)
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
Поля:
Свойства:
Методы:
  object ActivateInstance()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.IRestrictedErrorInfo
Поля:
Свойства:
Методы:
  void GetErrorDetails(String& description, Int32& error, String& restrictedDescription, String& capabilitySid)
  void GetReference(String& reference)
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
Наследуется от: object
Поля:
  bool s_haveBlueErrorApis
  Guid s_iidIErrorInfo
Свойства:
Методы:
  void AddEventHandler(Func`2<T, EventRegistrationToken> addMethod, Action`1<EventRegistrationToken> removeMethod, T handler)
  void RemoveEventHandler(Action`1<EventRegistrationToken> removeMethod, T handler)
  void RemoveAllEventHandlers(Action`1<EventRegistrationToken> removeMethod)
  int GetRegistrationTokenCacheSize()
  void CallRemoveMethods(Action`1<EventRegistrationToken> removeMethod, List`1<EventRegistrationToken> tokensToRemove)
  string HStringToString(IntPtr hstring)
  Exception GetExceptionForHR(int hresult, Exception innerException, string messageResource)
  Exception GetExceptionForHR(int hresult, Exception innerException)
  bool RoOriginateLanguageException(int error, string message, IntPtr languageException)
  void RoReportUnhandledError(IRestrictedErrorInfo error)
  bool ReportUnhandledError(Exception e)
  IActivationFactory GetActivationFactory(Type type)
  IntPtr StringToHString(string s)
  string PtrToStringHString(IntPtr ptr)
  void FreeHString(IntPtr ptr)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs
Наследуется от: EventArgs
Поля:
  string <NamespaceName>k__BackingField
  Collection`1<string> <ResolvedAssemblyFiles>k__BackingField
Свойства:
  string NamespaceName
  Collection`1<string> ResolvedAssemblyFiles
Методы:
  void .ctor(string namespaceName)
  string get_NamespaceName()
  void set_NamespaceName(string value)
  Collection`1<string> get_ResolvedAssemblyFiles()
  void set_ResolvedAssemblyFiles(Collection`1<string> value)
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs
Наследуется от: EventArgs
Поля:
  string <NamespaceName>k__BackingField
  Assembly <RequestingAssembly>k__BackingField
  Collection`1<Assembly> <ResolvedAssemblies>k__BackingField
Свойства:
  string NamespaceName
  Assembly RequestingAssembly
  Collection`1<Assembly> ResolvedAssemblies
Методы:
  void .ctor(string namespaceName, Assembly requestingAssembly)
  string get_NamespaceName()
  void set_NamespaceName(string value)
  Assembly get_RequestingAssembly()
  void set_RequestingAssembly(Assembly value)
  Collection`1<Assembly> get_ResolvedAssemblies()
  void set_ResolvedAssemblies(Collection`1<Assembly> value)
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.UnsafeNativeMethods
Наследуется от: object
Поля:
Свойства:
Методы:
  int WindowsCreateString(string sourceString, int length, IntPtr* hstring)
  int WindowsDeleteString(IntPtr hstring)
  Char* WindowsGetStringRawBuffer(IntPtr hstring, UInt32* length)
  bool RoOriginateLanguageException(int error, string message, IntPtr languageException)
  void RoReportUnhandledError(IRestrictedErrorInfo error)
  IRestrictedErrorInfo GetRestrictedErrorInfo()
--------------------------------------------------
Класс: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata
Наследуется от: object
Поля:
  EventHandler`1<DesignerNamespaceResolveEventArgs> DesignerNamespaceResolve
  EventHandler`1<NamespaceResolveEventArgs> ReflectionOnlyNamespaceResolve
Свойства:
Методы:
  IEnumerable`1<string> ResolveNamespace(string namespaceName, IEnumerable`1<string> packageGraphFilePaths)
  IEnumerable`1<string> ResolveNamespace(string namespaceName, string windowsSdkFilePath, IEnumerable`1<string> packageGraphFilePaths)
  void add_DesignerNamespaceResolve(EventHandler`1<DesignerNamespaceResolveEventArgs> value)
  void remove_DesignerNamespaceResolve(EventHandler`1<DesignerNamespaceResolveEventArgs> value)
  void add_ReflectionOnlyNamespaceResolve(EventHandler`1<NamespaceResolveEventArgs> value)
  void remove_ReflectionOnlyNamespaceResolve(EventHandler`1<NamespaceResolveEventArgs> value)
--------------------------------------------------
Класс: System.Runtime.InteropServices.Expando.IExpando
Поля:
Свойства:
Методы:
  FieldInfo AddField(string name)
  PropertyInfo AddProperty(string name)
  MethodInfo AddMethod(string name, Delegate method)
  void RemoveMember(MemberInfo m)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IConnectionPoint
Поля:
Свойства:
Методы:
  void GetConnectionInterface(Guid& pIID)
  void GetConnectionPointContainer(IConnectionPointContainer& ppCPC)
  void Advise(object pUnkSink, Int32& pdwCookie)
  void Unadvise(int dwCookie)
  void EnumConnections(IEnumConnections& ppEnum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IConnectionPointContainer
Поля:
Свойства:
Методы:
  void EnumConnectionPoints(IEnumConnectionPoints& ppEnum)
  void FindConnectionPoint(Guid& riid, IConnectionPoint& ppCP)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.BIND_OPTS
Наследуется от: ValueType
Поля:
  int cbStruct
  int grfFlags
  int grfMode
  int dwTickCountDeadline
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IBindCtx
Поля:
Свойства:
Методы:
  void RegisterObjectBound(object punk)
  void RevokeObjectBound(object punk)
  void ReleaseBoundObjects()
  void SetBindOptions(BIND_OPTS& pbindopts)
  void GetBindOptions(BIND_OPTS& pbindopts)
  void GetRunningObjectTable(IRunningObjectTable& pprot)
  void RegisterObjectParam(string pszKey, object punk)
  void GetObjectParam(string pszKey, Object& ppunk)
  void EnumObjectParam(IEnumString& ppenum)
  int RevokeObjectParam(string pszKey)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints
Поля:
Свойства:
Методы:
  int Next(int celt, IConnectionPoint[] rgelt, IntPtr pceltFetched)
  int Skip(int celt)
  void Reset()
  void Clone(IEnumConnectionPoints& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.CONNECTDATA
Наследуется от: ValueType
Поля:
  object pUnk
  int dwCookie
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumConnections
Поля:
Свойства:
Методы:
  int Next(int celt, CONNECTDATA[] rgelt, IntPtr pceltFetched)
  int Skip(int celt)
  void Reset()
  void Clone(IEnumConnections& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumerable
Поля:
Свойства:
Методы:
  IEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumerator
Поля:
Свойства:
  object Current
Методы:
  bool MoveNext()
  object get_Current()
  void Reset()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumMoniker
Поля:
Свойства:
Методы:
  int Next(int celt, IMoniker[] rgelt, IntPtr pceltFetched)
  int Skip(int celt)
  void Reset()
  void Clone(IEnumMoniker& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumString
Поля:
Свойства:
Методы:
  int Next(int celt, String[] rgelt, IntPtr pceltFetched)
  int Skip(int celt)
  void Reset()
  void Clone(IEnumString& ppenum)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
Поля:
Свойства:
Методы:
  int Next(int celt, Object[] rgVar, IntPtr pceltFetched)
  int Skip(int celt)
  int Reset()
  IEnumVARIANT Clone()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IExpando
Поля:
Свойства:
Методы:
  FieldInfo AddField(string name)
  PropertyInfo AddProperty(string name)
  MethodInfo AddMethod(string name, Delegate method)
  void RemoveMember(MemberInfo m)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.FILETIME
Наследуется от: ValueType
Поля:
  int dwLowDateTime
  int dwHighDateTime
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IMoniker
Поля:
Свойства:
Методы:
  void GetClassID(Guid& pClassID)
  int IsDirty()
  void Load(IStream pStm)
  void Save(IStream pStm, bool fClearDirty)
  void GetSizeMax(Int64& pcbSize)
  void BindToObject(IBindCtx pbc, IMoniker pmkToLeft, Guid& riidResult, Object& ppvResult)
  void BindToStorage(IBindCtx pbc, IMoniker pmkToLeft, Guid& riid, Object& ppvObj)
  void Reduce(IBindCtx pbc, int dwReduceHowFar, IMoniker& ppmkToLeft, IMoniker& ppmkReduced)
  void ComposeWith(IMoniker pmkRight, bool fOnlyIfNotGeneric, IMoniker& ppmkComposite)
  void Enum(bool fForward, IEnumMoniker& ppenumMoniker)
  int IsEqual(IMoniker pmkOtherMoniker)
  void Hash(Int32& pdwHash)
  int IsRunning(IBindCtx pbc, IMoniker pmkToLeft, IMoniker pmkNewlyRunning)
  void GetTimeOfLastChange(IBindCtx pbc, IMoniker pmkToLeft, FILETIME& pFileTime)
  void Inverse(IMoniker& ppmk)
  void CommonPrefixWith(IMoniker pmkOther, IMoniker& ppmkPrefix)
  void RelativePathTo(IMoniker pmkOther, IMoniker& ppmkRelPath)
  void GetDisplayName(IBindCtx pbc, IMoniker pmkToLeft, String& ppszDisplayName)
  void ParseDisplayName(IBindCtx pbc, IMoniker pmkToLeft, string pszDisplayName, Int32& pchEaten, IMoniker& ppmkOut)
  int IsSystemMoniker(Int32& pdwMksys)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IPersistFile
Поля:
Свойства:
Методы:
  void GetClassID(Guid& pClassID)
  int IsDirty()
  void Load(string pszFileName, int dwMode)
  void Save(string pszFileName, bool fRemember)
  void SaveCompleted(string pszFileName)
  void GetCurFile(String& ppszFileName)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IReflect
Поля:
Свойства:
  Type UnderlyingSystemType
Методы:
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Type get_UnderlyingSystemType()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IRunningObjectTable
Поля:
Свойства:
Методы:
  int Register(int grfFlags, object punkObject, IMoniker pmkObjectName)
  void Revoke(int dwRegister)
  int IsRunning(IMoniker pmkObjectName)
  int GetObject(IMoniker pmkObjectName, Object& ppunkObject)
  void NoteChangeTime(int dwRegister, FILETIME& pfiletime)
  int GetTimeOfLastChange(IMoniker pmkObjectName, FILETIME& pfiletime)
  void EnumRunning(IEnumMoniker& ppenumMoniker)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.STATSTG
Наследуется от: ValueType
Поля:
  string pwcsName
  int type
  long cbSize
  FILETIME mtime
  FILETIME ctime
  FILETIME atime
  int grfMode
  int grfLocksSupported
  Guid clsid
  int grfStateBits
  int reserved
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IStream
Поля:
Свойства:
Методы:
  void Read(Byte[] pv, int cb, IntPtr pcbRead)
  void Write(Byte[] pv, int cb, IntPtr pcbWritten)
  void Seek(long dlibMove, int dwOrigin, IntPtr plibNewPosition)
  void SetSize(long libNewSize)
  void CopyTo(IStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten)
  void Commit(int grfCommitFlags)
  void Revert()
  void LockRegion(long libOffset, long cb, int dwLockType)
  void UnlockRegion(long libOffset, long cb, int dwLockType)
  void Stat(STATSTG& pstatstg, int grfStatFlag)
  void Clone(IStream& ppstm)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.DESCKIND
Наследуется от: Enum
Поля:
  int value__
  DESCKIND DESCKIND_NONE
  DESCKIND DESCKIND_FUNCDESC
  DESCKIND DESCKIND_VARDESC
  DESCKIND DESCKIND_TYPECOMP
  DESCKIND DESCKIND_IMPLICITAPPOBJ
  DESCKIND DESCKIND_MAX
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.BINDPTR
Наследуется от: ValueType
Поля:
  IntPtr lpfuncdesc
  IntPtr lpvardesc
  IntPtr lptcomp
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ITypeComp
Поля:
Свойства:
Методы:
  void Bind(string szName, int lHashVal, short wFlags, ITypeInfo& ppTInfo, DESCKIND& pDescKind, BINDPTR& pBindPtr)
  void BindType(string szName, int lHashVal, ITypeInfo& ppTInfo, ITypeComp& ppTComp)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.TYPEKIND
Наследуется от: Enum
Поля:
  int value__
  TYPEKIND TKIND_ENUM
  TYPEKIND TKIND_RECORD
  TYPEKIND TKIND_MODULE
  TYPEKIND TKIND_INTERFACE
  TYPEKIND TKIND_DISPATCH
  TYPEKIND TKIND_COCLASS
  TYPEKIND TKIND_ALIAS
  TYPEKIND TKIND_UNION
  TYPEKIND TKIND_MAX
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.TYPEFLAGS
Наследуется от: Enum
Поля:
  short value__
  TYPEFLAGS TYPEFLAG_FAPPOBJECT
  TYPEFLAGS TYPEFLAG_FCANCREATE
  TYPEFLAGS TYPEFLAG_FLICENSED
  TYPEFLAGS TYPEFLAG_FPREDECLID
  TYPEFLAGS TYPEFLAG_FHIDDEN
  TYPEFLAGS TYPEFLAG_FCONTROL
  TYPEFLAGS TYPEFLAG_FDUAL
  TYPEFLAGS TYPEFLAG_FNONEXTENSIBLE
  TYPEFLAGS TYPEFLAG_FOLEAUTOMATION
  TYPEFLAGS TYPEFLAG_FRESTRICTED
  TYPEFLAGS TYPEFLAG_FAGGREGATABLE
  TYPEFLAGS TYPEFLAG_FREPLACEABLE
  TYPEFLAGS TYPEFLAG_FDISPATCHABLE
  TYPEFLAGS TYPEFLAG_FREVERSEBIND
  TYPEFLAGS TYPEFLAG_FPROXY
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS
Наследуется от: Enum
Поля:
  int value__
  IMPLTYPEFLAGS IMPLTYPEFLAG_FDEFAULT
  IMPLTYPEFLAGS IMPLTYPEFLAG_FSOURCE
  IMPLTYPEFLAGS IMPLTYPEFLAG_FRESTRICTED
  IMPLTYPEFLAGS IMPLTYPEFLAG_FDEFAULTVTABLE
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.TYPEATTR
Наследуется от: ValueType
Поля:
  int MEMBER_ID_NIL
  Guid guid
  int lcid
  int dwReserved
  int memidConstructor
  int memidDestructor
  IntPtr lpstrSchema
  int cbSizeInstance
  TYPEKIND typekind
  short cFuncs
  short cVars
  short cImplTypes
  short cbSizeVft
  short cbAlignment
  TYPEFLAGS wTypeFlags
  short wMajorVerNum
  short wMinorVerNum
  TYPEDESC tdescAlias
  IDLDESC idldescType
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.FUNCDESC
Наследуется от: ValueType
Поля:
  int memid
  IntPtr lprgscode
  IntPtr lprgelemdescParam
  FUNCKIND funckind
  INVOKEKIND invkind
  CALLCONV callconv
  short cParams
  short cParamsOpt
  short oVft
  short cScodes
  ELEMDESC elemdescFunc
  short wFuncFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IDLFLAG
Наследуется от: Enum
Поля:
  short value__
  IDLFLAG IDLFLAG_NONE
  IDLFLAG IDLFLAG_FIN
  IDLFLAG IDLFLAG_FOUT
  IDLFLAG IDLFLAG_FLCID
  IDLFLAG IDLFLAG_FRETVAL
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IDLDESC
Наследуется от: ValueType
Поля:
  IntPtr dwReserved
  IDLFLAG wIDLFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.PARAMFLAG
Наследуется от: Enum
Поля:
  short value__
  PARAMFLAG PARAMFLAG_NONE
  PARAMFLAG PARAMFLAG_FIN
  PARAMFLAG PARAMFLAG_FOUT
  PARAMFLAG PARAMFLAG_FLCID
  PARAMFLAG PARAMFLAG_FRETVAL
  PARAMFLAG PARAMFLAG_FOPT
  PARAMFLAG PARAMFLAG_FHASDEFAULT
  PARAMFLAG PARAMFLAG_FHASCUSTDATA
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.PARAMDESC
Наследуется от: ValueType
Поля:
  IntPtr lpVarValue
  PARAMFLAG wParamFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.TYPEDESC
Наследуется от: ValueType
Поля:
  IntPtr lpValue
  short vt
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ELEMDESC
Наследуется от: ValueType
Поля:
  TYPEDESC tdesc
  DESCUNION desc
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.VARKIND
Наследуется от: Enum
Поля:
  int value__
  VARKIND VAR_PERINSTANCE
  VARKIND VAR_STATIC
  VARKIND VAR_CONST
  VARKIND VAR_DISPATCH
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.VARDESC
Наследуется от: ValueType
Поля:
  int memid
  string lpstrSchema
  DESCUNION desc
  ELEMDESC elemdescVar
  short wVarFlags
  VARKIND varkind
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.DISPPARAMS
Наследуется от: ValueType
Поля:
  IntPtr rgvarg
  IntPtr rgdispidNamedArgs
  int cArgs
  int cNamedArgs
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.EXCEPINFO
Наследуется от: ValueType
Поля:
  short wCode
  short wReserved
  string bstrSource
  string bstrDescription
  string bstrHelpFile
  int dwHelpContext
  IntPtr pvReserved
  IntPtr pfnDeferredFillIn
  int scode
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.FUNCKIND
Наследуется от: Enum
Поля:
  int value__
  FUNCKIND FUNC_VIRTUAL
  FUNCKIND FUNC_PUREVIRTUAL
  FUNCKIND FUNC_NONVIRTUAL
  FUNCKIND FUNC_STATIC
  FUNCKIND FUNC_DISPATCH
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.INVOKEKIND
Наследуется от: Enum
Поля:
  int value__
  INVOKEKIND INVOKE_FUNC
  INVOKEKIND INVOKE_PROPERTYGET
  INVOKEKIND INVOKE_PROPERTYPUT
  INVOKEKIND INVOKE_PROPERTYPUTREF
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.CALLCONV
Наследуется от: Enum
Поля:
  int value__
  CALLCONV CC_CDECL
  CALLCONV CC_MSCPASCAL
  CALLCONV CC_PASCAL
  CALLCONV CC_MACPASCAL
  CALLCONV CC_STDCALL
  CALLCONV CC_RESERVED
  CALLCONV CC_SYSCALL
  CALLCONV CC_MPWCDECL
  CALLCONV CC_MPWPASCAL
  CALLCONV CC_MAX
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.FUNCFLAGS
Наследуется от: Enum
Поля:
  short value__
  FUNCFLAGS FUNCFLAG_FRESTRICTED
  FUNCFLAGS FUNCFLAG_FSOURCE
  FUNCFLAGS FUNCFLAG_FBINDABLE
  FUNCFLAGS FUNCFLAG_FREQUESTEDIT
  FUNCFLAGS FUNCFLAG_FDISPLAYBIND
  FUNCFLAGS FUNCFLAG_FDEFAULTBIND
  FUNCFLAGS FUNCFLAG_FHIDDEN
  FUNCFLAGS FUNCFLAG_FUSESGETLASTERROR
  FUNCFLAGS FUNCFLAG_FDEFAULTCOLLELEM
  FUNCFLAGS FUNCFLAG_FUIDEFAULT
  FUNCFLAGS FUNCFLAG_FNONBROWSABLE
  FUNCFLAGS FUNCFLAG_FREPLACEABLE
  FUNCFLAGS FUNCFLAG_FIMMEDIATEBIND
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.VARFLAGS
Наследуется от: Enum
Поля:
  short value__
  VARFLAGS VARFLAG_FREADONLY
  VARFLAGS VARFLAG_FSOURCE
  VARFLAGS VARFLAG_FBINDABLE
  VARFLAGS VARFLAG_FREQUESTEDIT
  VARFLAGS VARFLAG_FDISPLAYBIND
  VARFLAGS VARFLAG_FDEFAULTBIND
  VARFLAGS VARFLAG_FHIDDEN
  VARFLAGS VARFLAG_FRESTRICTED
  VARFLAGS VARFLAG_FDEFAULTCOLLELEM
  VARFLAGS VARFLAG_FUIDEFAULT
  VARFLAGS VARFLAG_FNONBROWSABLE
  VARFLAGS VARFLAG_FREPLACEABLE
  VARFLAGS VARFLAG_FIMMEDIATEBIND
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ITypeInfo
Поля:
Свойства:
Методы:
  void GetTypeAttr(IntPtr& ppTypeAttr)
  void GetTypeComp(ITypeComp& ppTComp)
  void GetFuncDesc(int index, IntPtr& ppFuncDesc)
  void GetVarDesc(int index, IntPtr& ppVarDesc)
  void GetNames(int memid, String[] rgBstrNames, int cMaxNames, Int32& pcNames)
  void GetRefTypeOfImplType(int index, Int32& href)
  void GetImplTypeFlags(int index, IMPLTYPEFLAGS& pImplTypeFlags)
  void GetIDsOfNames(String[] rgszNames, int cNames, Int32[] pMemId)
  void Invoke(object pvInstance, int memid, short wFlags, DISPPARAMS& pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32& puArgErr)
  void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile)
  void GetDllEntry(int memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)
  void GetRefTypeInfo(int hRef, ITypeInfo& ppTI)
  void AddressOfMember(int memid, INVOKEKIND invKind, IntPtr& ppv)
  void CreateInstance(object pUnkOuter, Guid& riid, Object& ppvObj)
  void GetMops(int memid, String& pBstrMops)
  void GetContainingTypeLib(ITypeLib& ppTLB, Int32& pIndex)
  void ReleaseTypeAttr(IntPtr pTypeAttr)
  void ReleaseFuncDesc(IntPtr pFuncDesc)
  void ReleaseVarDesc(IntPtr pVarDesc)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ITypeInfo2
Поля:
Свойства:
Методы:
  void GetTypeAttr(IntPtr& ppTypeAttr)
  void GetTypeComp(ITypeComp& ppTComp)
  void GetFuncDesc(int index, IntPtr& ppFuncDesc)
  void GetVarDesc(int index, IntPtr& ppVarDesc)
  void GetNames(int memid, String[] rgBstrNames, int cMaxNames, Int32& pcNames)
  void GetRefTypeOfImplType(int index, Int32& href)
  void GetImplTypeFlags(int index, IMPLTYPEFLAGS& pImplTypeFlags)
  void GetIDsOfNames(String[] rgszNames, int cNames, Int32[] pMemId)
  void Invoke(object pvInstance, int memid, short wFlags, DISPPARAMS& pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, Int32& puArgErr)
  void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile)
  void GetDllEntry(int memid, INVOKEKIND invKind, IntPtr pBstrDllName, IntPtr pBstrName, IntPtr pwOrdinal)
  void GetRefTypeInfo(int hRef, ITypeInfo& ppTI)
  void AddressOfMember(int memid, INVOKEKIND invKind, IntPtr& ppv)
  void CreateInstance(object pUnkOuter, Guid& riid, Object& ppvObj)
  void GetMops(int memid, String& pBstrMops)
  void GetContainingTypeLib(ITypeLib& ppTLB, Int32& pIndex)
  void ReleaseTypeAttr(IntPtr pTypeAttr)
  void ReleaseFuncDesc(IntPtr pFuncDesc)
  void ReleaseVarDesc(IntPtr pVarDesc)
  void GetTypeKind(TYPEKIND& pTypeKind)
  void GetTypeFlags(Int32& pTypeFlags)
  void GetFuncIndexOfMemId(int memid, INVOKEKIND invKind, Int32& pFuncIndex)
  void GetVarIndexOfMemId(int memid, Int32& pVarIndex)
  void GetCustData(Guid& guid, Object& pVarVal)
  void GetFuncCustData(int index, Guid& guid, Object& pVarVal)
  void GetParamCustData(int indexFunc, int indexParam, Guid& guid, Object& pVarVal)
  void GetVarCustData(int index, Guid& guid, Object& pVarVal)
  void GetImplTypeCustData(int index, Guid& guid, Object& pVarVal)
  void GetDocumentation2(int memid, String& pbstrHelpString, Int32& pdwHelpStringContext, String& pbstrHelpStringDll)
  void GetAllCustData(IntPtr pCustData)
  void GetAllFuncCustData(int index, IntPtr pCustData)
  void GetAllParamCustData(int indexFunc, int indexParam, IntPtr pCustData)
  void GetAllVarCustData(int index, IntPtr pCustData)
  void GetAllImplTypeCustData(int index, IntPtr pCustData)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.SYSKIND
Наследуется от: Enum
Поля:
  int value__
  SYSKIND SYS_WIN16
  SYSKIND SYS_WIN32
  SYSKIND SYS_MAC
  SYSKIND SYS_WIN64
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.LIBFLAGS
Наследуется от: Enum
Поля:
  short value__
  LIBFLAGS LIBFLAG_FRESTRICTED
  LIBFLAGS LIBFLAG_FCONTROL
  LIBFLAGS LIBFLAG_FHIDDEN
  LIBFLAGS LIBFLAG_FHASDISKIMAGE
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.TYPELIBATTR
Наследуется от: ValueType
Поля:
  Guid guid
  int lcid
  SYSKIND syskind
  short wMajorVerNum
  short wMinorVerNum
  LIBFLAGS wLibFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ITypeLib
Поля:
Свойства:
Методы:
  int GetTypeInfoCount()
  void GetTypeInfo(int index, ITypeInfo& ppTI)
  void GetTypeInfoType(int index, TYPEKIND& pTKind)
  void GetTypeInfoOfGuid(Guid& guid, ITypeInfo& ppTInfo)
  void GetLibAttr(IntPtr& ppTLibAttr)
  void GetTypeComp(ITypeComp& ppTComp)
  void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile)
  bool IsName(string szNameBuf, int lHashVal)
  void FindName(string szNameBuf, int lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16& pcFound)
  void ReleaseTLibAttr(IntPtr pTLibAttr)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ITypeLib2
Поля:
Свойства:
Методы:
  int GetTypeInfoCount()
  void GetTypeInfo(int index, ITypeInfo& ppTI)
  void GetTypeInfoType(int index, TYPEKIND& pTKind)
  void GetTypeInfoOfGuid(Guid& guid, ITypeInfo& ppTInfo)
  void GetLibAttr(IntPtr& ppTLibAttr)
  void GetTypeComp(ITypeComp& ppTComp)
  void GetDocumentation(int index, String& strName, String& strDocString, Int32& dwHelpContext, String& strHelpFile)
  bool IsName(string szNameBuf, int lHashVal)
  void FindName(string szNameBuf, int lHashVal, ITypeInfo[] ppTInfo, Int32[] rgMemId, Int16& pcFound)
  void ReleaseTLibAttr(IntPtr pTLibAttr)
  void GetCustData(Guid& guid, Object& pVarVal)
  void GetDocumentation2(int index, String& pbstrHelpString, Int32& pdwHelpStringContext, String& pbstrHelpStringDll)
  void GetLibStatistics(IntPtr pcUniqueNames, Int32& pcchUniqueNames)
  void GetAllCustData(IntPtr pCustData)
--------------------------------------------------
Класс: System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs
Наследуется от: EventArgs
Поля:
  Exception <Exception>k__BackingField
Свойства:
  Exception Exception
Методы:
  void .ctor(Exception exception)
  Exception get_Exception()
--------------------------------------------------
Класс: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.ExceptionServices.ExceptionDispatchInfo
Наследуется от: object
Поля:
  Exception m_Exception
  object m_stackTrace
Свойства:
  object BinaryStackTraceArray
  Exception SourceException
Методы:
  void .ctor(Exception exception)
  object get_BinaryStackTraceArray()
  ExceptionDispatchInfo Capture(Exception source)
  Exception get_SourceException()
  void Throw()
  void Throw(Exception source)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.ConstrainedExecution.Cer
Наследуется от: Enum
Поля:
  int value__
  Cer None
  Cer MayFail
  Cer Success
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.ConstrainedExecution.Consistency
Наследуется от: Enum
Поля:
  int value__
  Consistency MayCorruptProcess
  Consistency MayCorruptAppDomain
  Consistency MayCorruptInstance
  Consistency WillNotCorruptState
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute
Наследуется от: Attribute
Поля:
  Consistency <ConsistencyGuarantee>k__BackingField
  Cer <Cer>k__BackingField
Свойства:
  Consistency ConsistencyGuarantee
  Cer Cer
Методы:
  void .ctor(Consistency consistencyGuarantee, Cer cer)
  Consistency get_ConsistencyGuarantee()
  Cer get_Cer()
--------------------------------------------------
Класс: System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void Finalize()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
Наследуется от: Attribute
Поля:
  string <PropertyName>k__BackingField
Свойства:
  string PropertyName
Методы:
  void .ctor(string propertyName)
  string get_PropertyName()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncIteratorMethodBuilder
Наследуется от: ValueType
Поля:
  AsyncTaskMethodBuilder _methodBuilder
Свойства:
  object ObjectIdForDebugger
Методы:
  AsyncIteratorMethodBuilder Create()
  void MoveNext(TStateMachine& stateMachine)
  void AwaitOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void AwaitUnsafeOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void Complete()
  object get_ObjectIdForDebugger()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncIteratorStateMachineAttribute
Наследуется от: StateMachineAttribute
Поля:
Свойства:
Методы:
  void .ctor(Type stateMachineType)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncMethodBuilderAttribute
Наследуется от: Attribute
Поля:
  Type <BuilderType>k__BackingField
Свойства:
  Type BuilderType
Методы:
  void .ctor(Type builderType)
  Type get_BuilderType()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncStateMachineAttribute
Наследуется от: StateMachineAttribute
Поля:
Свойства:
Методы:
  void .ctor(Type stateMachineType)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder
Наследуется от: ValueType
Поля:
  AsyncTaskMethodBuilder _methodBuilder
  bool _haveResult
  bool _useBuilder
Свойства:
  ValueTask Task
Методы:
  AsyncValueTaskMethodBuilder Create()
  void Start(TStateMachine& stateMachine)
  void SetStateMachine(IAsyncStateMachine stateMachine)
  void SetResult()
  void SetException(Exception exception)
  ValueTask get_Task()
  void AwaitOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void AwaitUnsafeOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1
Наследуется от: ValueType
Поля:
  AsyncTaskMethodBuilder`1<TResult> _methodBuilder
  TResult _result
  bool _haveResult
  bool _useBuilder
Свойства:
  ValueTask`1<TResult> Task
Методы:
  AsyncValueTaskMethodBuilder`1<TResult> Create()
  void Start(TStateMachine& stateMachine)
  void SetStateMachine(IAsyncStateMachine stateMachine)
  void SetResult(TResult result)
  void SetException(Exception exception)
  ValueTask`1<TResult> get_Task()
  void AwaitOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void AwaitUnsafeOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallerFilePathAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallerLineNumberAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallerMemberNameAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CompilerGeneratedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CompilerGlobalScopeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConfiguredAsyncDisposable
Наследуется от: ValueType
Поля:
  IAsyncDisposable _source
  bool _continueOnCapturedContext
Свойства:
Методы:
  void .ctor(IAsyncDisposable source, bool continueOnCapturedContext)
  ConfiguredValueTaskAwaitable DisposeAsync()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1
Наследуется от: ValueType
Поля:
  IAsyncEnumerable`1<T> _enumerable
  CancellationToken _cancellationToken
  bool _continueOnCapturedContext
Свойства:
Методы:
  void .ctor(IAsyncEnumerable`1<T> enumerable, bool continueOnCapturedContext, CancellationToken cancellationToken)
  ConfiguredCancelableAsyncEnumerable`1<T> ConfigureAwait(bool continueOnCapturedContext)
  ConfiguredCancelableAsyncEnumerable`1<T> WithCancellation(CancellationToken cancellationToken)
  Enumerator<T> GetAsyncEnumerator()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable
Наследуется от: ValueType
Поля:
  ValueTask _value
Свойства:
Методы:
  void .ctor(ValueTask value)
  ConfiguredValueTaskAwaiter GetAwaiter()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1
Наследуется от: ValueType
Поля:
  ValueTask`1<TResult> _value
Свойства:
Методы:
  void .ctor(ValueTask`1<TResult> value)
  ConfiguredValueTaskAwaiter<TResult> GetAwaiter()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CustomConstantAttribute
Наследуется от: Attribute
Поля:
Свойства:
  object Value
Методы:
  object get_Value()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DateTimeConstantAttribute
Наследуется от: CustomConstantAttribute
Поля:
  DateTime _date
Свойства:
  object Value
Методы:
  void .ctor(long ticks)
  object get_Value()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DecimalConstantAttribute
Наследуется от: Attribute
Поля:
  decimal _dec
Свойства:
  decimal Value
Методы:
  void .ctor(byte scale, byte sign, UInt32 hi, UInt32 mid, UInt32 low)
  void .ctor(byte scale, byte sign, int hi, int mid, int low)
  decimal get_Value()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DisablePrivateReflectionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DiscardableAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ExtensionAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FixedAddressValueTypeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FixedBufferAttribute
Наследуется от: Attribute
Поля:
  Type <ElementType>k__BackingField
  int <Length>k__BackingField
Свойства:
  Type ElementType
  int Length
Методы:
  void .ctor(Type elementType, int length)
  Type get_ElementType()
  int get_Length()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FormattableStringFactory
Наследуется от: object
Поля:
Свойства:
Методы:
  FormattableString Create(string format, Object[] arguments)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IAsyncStateMachine
Поля:
Свойства:
Методы:
  void MoveNext()
  void SetStateMachine(IAsyncStateMachine stateMachine)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.INotifyCompletion
Поля:
Свойства:
Методы:
  void OnCompleted(Action continuation)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ICriticalNotifyCompletion
Поля:
Свойства:
Методы:
  void UnsafeOnCompleted(Action continuation)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ITuple
Поля:
Свойства:
  int Length
  object Item
Методы:
  int get_Length()
  object get_Item(int index)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IndexerNameAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(string indexerName)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IntrinsicAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsByRefLikeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsConst
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsVolatile
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IteratorStateMachineAttribute
Наследуется от: StateMachineAttribute
Поля:
Свойства:
Методы:
  void .ctor(Type stateMachineType)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ReferenceAssemblyAttribute
Наследуется от: Attribute
Поля:
  string <Description>k__BackingField
Свойства:
  string Description
Методы:
  void .ctor()
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.RuntimeCompatibilityAttribute
Наследуется от: Attribute
Поля:
  bool <WrapNonExceptionThrows>k__BackingField
Свойства:
  bool WrapNonExceptionThrows
Методы:
  void .ctor()
  bool get_WrapNonExceptionThrows()
  void set_WrapNonExceptionThrows(bool value)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.RuntimeFeature
Наследуется от: object
Поля:
  string PortablePdb
  string DefaultImplementationsOfInterfaces
Свойства:
  bool IsDynamicCodeSupported
  bool IsDynamicCodeCompiled
Методы:
  bool IsSupported(string feature)
  bool get_IsDynamicCodeSupported()
  bool get_IsDynamicCodeCompiled()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.RuntimeWrappedException
Наследуется от: Exception
Поля:
  object _wrappedException
Свойства:
  object WrappedException
Методы:
  void .ctor(object thrownObject)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object get_WrappedException()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.SpecialNameAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.StateMachineAttribute
Наследуется от: Attribute
Поля:
  Type <StateMachineType>k__BackingField
Свойства:
  Type StateMachineType
Методы:
  void .ctor(Type stateMachineType)
  Type get_StateMachineType()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.StringFreezingAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.SuppressIldasmAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.TupleElementNamesAttribute
Наследуется от: Attribute
Поля:
  String[] _transformNames
Свойства:
  IList`1<string> TransformNames
Методы:
  void .ctor(String[] transformNames)
  IList`1<string> get_TransformNames()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.TypeForwardedFromAttribute
Наследуется от: Attribute
Поля:
  string <AssemblyFullName>k__BackingField
Свойства:
  string AssemblyFullName
Методы:
  void .ctor(string assemblyFullName)
  string get_AssemblyFullName()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.TypeForwardedToAttribute
Наследуется от: Attribute
Поля:
  Type <Destination>k__BackingField
Свойства:
  Type Destination
Методы:
  void .ctor(Type destination)
  Type get_Destination()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.UnsafeValueTypeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ValueTaskAwaiter
Наследуется от: ValueType
Поля:
  Action`1<object> s_invokeActionDelegate
  ValueTask _value
Свойства:
  bool IsCompleted
Методы:
  void .ctor(ValueTask value)
  bool get_IsCompleted()
  void GetResult()
  void OnCompleted(Action continuation)
  void UnsafeOnCompleted(Action continuation)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ValueTaskAwaiter`1
Наследуется от: ValueType
Поля:
  ValueTask`1<TResult> _value
Свойства:
  bool IsCompleted
Методы:
  void .ctor(ValueTask`1<TResult> value)
  bool get_IsCompleted()
  TResult GetResult()
  void OnCompleted(Action continuation)
  void UnsafeOnCompleted(Action continuation)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.TaskAwaiter
Наследуется от: ValueType
Поля:
  Task m_task
Свойства:
  bool IsCompleted
Методы:
  void .ctor(Task task)
  bool get_IsCompleted()
  void OnCompleted(Action continuation)
  void UnsafeOnCompleted(Action continuation)
  void GetResult()
  void ValidateEnd(Task task)
  void HandleNonSuccessAndDebuggerNotification(Task task)
  void ThrowForNonSuccess(Task task)
  void OnCompletedInternal(Task task, Action continuation, bool continueOnCapturedContext, bool flowExecutionContext)
  Action OutputWaitEtwEvents(Task task, Action continuation)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.TaskAwaiter`1
Наследуется от: ValueType
Поля:
  Task`1<TResult> m_task
Свойства:
  bool IsCompleted
Методы:
  void .ctor(Task`1<TResult> task)
  bool get_IsCompleted()
  void OnCompleted(Action continuation)
  void UnsafeOnCompleted(Action continuation)
  TResult GetResult()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ITaskAwaiter
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IConfiguredTaskAwaiter
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
Наследуется от: ValueType
Поля:
  ConfiguredTaskAwaiter m_configuredTaskAwaiter
Свойства:
Методы:
  void .ctor(Task task, bool continueOnCapturedContext)
  ConfiguredTaskAwaiter GetAwaiter()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
Наследуется от: ValueType
Поля:
  ConfiguredTaskAwaiter<TResult> m_configuredTaskAwaiter
Свойства:
Методы:
  void .ctor(Task`1<TResult> task, bool continueOnCapturedContext)
  ConfiguredTaskAwaiter<TResult> GetAwaiter()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ReflectionBlockedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ContractHelper
Наследуется от: object
Поля:
  EventHandler`1 modreq(System.Runtime.CompilerServices.IsVolatile) contractFailedEvent
  object lockObject
  int COR_E_CODECONTRACTFAILED
Свойства:
Методы:
  string RaiseContractFailedEvent(ContractFailureKind failureKind, string userMessage, string conditionText, Exception innerException)
  void TriggerFailure(ContractFailureKind kind, string displayMessage, string userMessage, string conditionText, Exception innerException)
  void RaiseContractFailedEventImplementation(ContractFailureKind failureKind, string userMessage, string conditionText, Exception innerException, String& resultFailureMessage)
  void TriggerFailureImplementation(ContractFailureKind kind, string displayMessage, string userMessage, string conditionText, Exception innerException)
  void add_InternalContractFailed(EventHandler`1<ContractFailedEventArgs> value)
  void remove_InternalContractFailed(EventHandler`1<ContractFailedEventArgs> value)
  string GetResourceNameForFailure(ContractFailureKind failureKind, bool withCondition)
  string GetDisplayMessage(ContractFailureKind failureKind, string userMessage, string conditionText)
  void TriggerCodeContractEscalationPolicy(ContractFailureKind failureKind, string message, string conditionText, Exception innerException)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncVoidMethodBuilder
Наследуется от: ValueType
Поля:
  SynchronizationContext m_synchronizationContext
  AsyncMethodBuilderCore m_coreState
  Task m_task
Свойства:
  Task Task
  object ObjectIdForDebugger
Методы:
  AsyncVoidMethodBuilder Create()
  void Start(TStateMachine& stateMachine)
  void SetStateMachine(IAsyncStateMachine stateMachine)
  void AwaitOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void AwaitUnsafeOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void SetResult()
  void SetException(Exception exception)
  void NotifySynchronizationContextOfCompletion()
  Task get_Task()
  object get_ObjectIdForDebugger()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
Наследуется от: ValueType
Поля:
  Task`1<VoidTaskResult> s_cachedCompleted
  AsyncTaskMethodBuilder`1<VoidTaskResult> m_builder
Свойства:
  Task Task
  object ObjectIdForDebugger
Методы:
  AsyncTaskMethodBuilder Create()
  void Start(TStateMachine& stateMachine)
  void SetStateMachine(IAsyncStateMachine stateMachine)
  void AwaitOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void AwaitUnsafeOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  Task get_Task()
  void SetResult()
  void SetException(Exception exception)
  void SetNotificationForWaitCompletion(bool enabled)
  object get_ObjectIdForDebugger()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
Наследуется от: ValueType
Поля:
  Task`1<TResult> s_defaultResultTask
  AsyncMethodBuilderCore m_coreState
  Task`1<TResult> m_task
Свойства:
  Task`1<TResult> Task
  object ObjectIdForDebugger
Методы:
  AsyncTaskMethodBuilder`1<TResult> Create()
  void Start(TStateMachine& stateMachine)
  void SetStateMachine(IAsyncStateMachine stateMachine)
  void AwaitOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  void AwaitUnsafeOnCompleted(TAwaiter& awaiter, TStateMachine& stateMachine)
  Task`1<TResult> get_Task()
  void SetResult(TResult result)
  void SetResult(Task`1<TResult> completedTask)
  void SetException(Exception exception)
  void SetNotificationForWaitCompletion(bool enabled)
  object get_ObjectIdForDebugger()
  Task`1<TResult> GetTaskForResult(TResult result)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncTaskCache
Наследуется от: object
Поля:
  Task`1<bool> TrueTask
  Task`1<bool> FalseTask
  Task`1[] Int32Tasks
  int INCLUSIVE_INT32_MIN
  int EXCLUSIVE_INT32_MAX
Свойства:
Методы:
  Task`1[] CreateInt32Tasks()
  Task`1<TResult> CreateCacheableTask(TResult result)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AsyncMethodBuilderCore
Наследуется от: ValueType
Поля:
  IAsyncStateMachine m_stateMachine
  Action m_defaultContextAction
Свойства:
Методы:
  void Start(TStateMachine& stateMachine)
  void SetStateMachine(IAsyncStateMachine stateMachine)
  Action GetCompletionAction(Task taskForTracing, MoveNextRunner& runnerToInitialize)
  Action OutputAsyncCausalityEvents(Task innerTask, Action continuation)
  void PostBoxInitialization(IAsyncStateMachine stateMachine, MoveNextRunner runner, Task builtTask)
  void ThrowAsync(Exception exception, SynchronizationContext targetContext)
  Action CreateContinuationWrapper(Action continuation, Action invokeAction, Task innerTask)
  Action TryGetStateMachineForDebugger(Action action)
  Task TryGetContinuationTask(Action action)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.YieldAwaitable
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  YieldAwaiter GetAwaiter()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AssemblyAttributesGoHere
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AssemblyAttributesGoHereS
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AssemblyAttributesGoHereM
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.AssemblyAttributesGoHereSM
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.LoadHint
Наследуется от: Enum
Поля:
  int value__
  LoadHint Default
  LoadHint Always
  LoadHint Sometimes
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DefaultDependencyAttribute
Наследуется от: Attribute
Поля:
  LoadHint loadHint
Свойства:
  LoadHint LoadHint
Методы:
  void .ctor(LoadHint loadHintArgument)
  LoadHint get_LoadHint()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DependencyAttribute
Наследуется от: Attribute
Поля:
  string dependentAssembly
  LoadHint loadHint
Свойства:
  string DependentAssembly
  LoadHint LoadHint
Методы:
  void .ctor(string dependentAssemblyArgument, LoadHint loadHintArgument)
  string get_DependentAssembly()
  LoadHint get_LoadHint()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallConvCdecl
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallConvStdcall
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallConvThiscall
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CallConvFastcall
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CompilationRelaxations
Наследуется от: Enum
Поля:
  int value__
  CompilationRelaxations NoStringInterning
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CompilationRelaxationsAttribute
Наследуется от: Attribute
Поля:
  int m_relaxations
Свойства:
  int CompilationRelaxations
Методы:
  void .ctor(int relaxations)
  void .ctor(CompilationRelaxations relaxations)
  int get_CompilationRelaxations()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.CompilerMarshalOverride
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DecoratedNameAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(string decoratedName)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.HasCopySemanticsAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IDispatchConstantAttribute
Наследуется от: CustomConstantAttribute
Поля:
Свойства:
  object Value
Методы:
  void .ctor()
  object get_Value()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.InternalsVisibleToAttribute
Наследуется от: Attribute
Поля:
  string _assemblyName
  bool _allInternalsVisible
Свойства:
  string AssemblyName
  bool AllInternalsVisible
Методы:
  void .ctor(string assemblyName)
  string get_AssemblyName()
  bool get_AllInternalsVisible()
  void set_AllInternalsVisible(bool value)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FriendAccessAllowedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsBoxed
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsByValue
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsCopyConstructed
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsExplicitlyDereferenced
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsImplicitlyDereferenced
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsJitIntrinsic
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsLong
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsPinned
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsSignUnspecifiedByte
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsUdtReturn
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IUnknownConstantAttribute
Наследуется от: CustomConstantAttribute
Поля:
Свойства:
  object Value
Методы:
  void .ctor()
  object get_Value()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.MethodImplOptions
Наследуется от: Enum
Поля:
  int value__
  MethodImplOptions Unmanaged
  MethodImplOptions ForwardRef
  MethodImplOptions PreserveSig
  MethodImplOptions InternalCall
  MethodImplOptions Synchronized
  MethodImplOptions NoInlining
  MethodImplOptions AggressiveInlining
  MethodImplOptions NoOptimization
  MethodImplOptions SecurityMitigations
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.MethodCodeType
Наследуется от: Enum
Поля:
  int value__
  MethodCodeType IL
  MethodCodeType Native
  MethodCodeType OPTIL
  MethodCodeType Runtime
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.MethodImplAttribute
Наследуется от: Attribute
Поля:
  MethodImplOptions _val
  MethodCodeType MethodCodeType
Свойства:
  MethodImplOptions Value
Методы:
  void .ctor(MethodImplAttributes methodImplAttributes)
  void .ctor(MethodImplOptions methodImplOptions)
  void .ctor(short value)
  void .ctor()
  MethodImplOptions get_Value()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.NativeCppClassAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.RequiredAttributeAttribute
Наследуется от: Attribute
Поля:
  Type requiredContract
Свойства:
  Type RequiredContract
Методы:
  void .ctor(Type requiredContract)
  Type get_RequiredContract()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ScopelessEnumAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.SuppressMergeCheckAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.TypeDependencyAttribute
Наследуется от: Attribute
Поля:
  string typeName
Свойства:
Методы:
  void .ctor(string typeName)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.JitHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  T UnsafeCast(object o)
  int UnsafeEnumCast(T val)
  long UnsafeEnumCastLong(T val)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.Ephemeron
Наследуется от: ValueType
Поля:
  object key
  object value
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.CompilerServices.ConditionalWeakTable`2
Наследуется от: object
Поля:
  int INITIAL_SIZE
  float LOAD_FACTOR
  float COMPACT_FACTOR
  float EXPAND_FACTOR
  Ephemeron[] data
  object _lock
  int size
Свойства:
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
Методы:
  void .ctor()
  void Finalize()
  void RehashWithoutResize()
  void RecomputeSize()
  void Rehash()
  void AddOrUpdate(TKey key, TValue value)
  void Add(TKey key, TValue value)
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  TValue GetOrCreateValue(TKey key)
  TValue GetValue(TKey key, CreateValueCallback<TKey, TValue> createValueCallback)
  TKey FindEquivalentKeyUnsafe(TKey key, TValue& value)
  void Clear()
  ICollection`1<TKey> get_Keys()
  ICollection`1<TValue> get_Values()
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.PreserveDependencyAttribute
Наследуется от: Attribute
Поля:
  string <Condition>k__BackingField
Свойства:
  string Condition
Методы:
  void .ctor(string memberSignature)
  void .ctor(string memberSignature, string typeName)
  void .ctor(string memberSignature, string typeName, string assembly)
  string get_Condition()
  void set_Condition(string value)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.RuntimeHelpers
Наследуется от: object
Поля:
Свойства:
  int OffsetToStringData
Методы:
  void InitializeArray(Array array, IntPtr fldHandle)
  void InitializeArray(Array array, RuntimeFieldHandle fldHandle)
  int get_OffsetToStringData()
  int GetHashCode(object o)
  bool Equals(object o1, object o2)
  object GetObjectValue(object obj)
  void RunClassConstructor(IntPtr type)
  void RunClassConstructor(RuntimeTypeHandle type)
  bool SufficientExecutionStack()
  void EnsureSufficientExecutionStack()
  bool TryEnsureSufficientExecutionStack()
  void ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, object userData)
  void PrepareConstrainedRegions()
  void PrepareConstrainedRegionsNoOP()
  void ProbeForSufficientStack()
  void PrepareDelegate(Delegate d)
  void PrepareContractedDelegate(Delegate d)
  void PrepareMethod(RuntimeMethodHandle method)
  void PrepareMethod(RuntimeMethodHandle method, RuntimeTypeHandle[] instantiation)
  void RunModuleConstructor(ModuleHandle module)
  void RunModuleConstructor(IntPtr module)
  bool IsReferenceOrContainsReferences()
  object GetUninitializedObject(Type type)
  T[] GetSubArray(T[] array, Range range)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.Unsafe
Наследуется от: object
Поля:
Свойства:
Методы:
  T& Add(T& source, int elementOffset)
  T& Add(T& source, IntPtr elementOffset)
  Void* Add(Void* source, int elementOffset)
  T& AddByteOffset(T& source, IntPtr byteOffset)
  bool AreSame(T& left, T& right)
  T As(object o)
  TTo& As(TFrom& source)
  Void* AsPointer(T& value)
  T& AsRef(Void* source)
  T& AsRef(T& source)
  IntPtr ByteOffset(T& origin, T& target)
  void CopyBlock(Byte& destination, Byte& source, UInt32 byteCount)
  void InitBlockUnaligned(Byte& startAddress, byte value, UInt32 byteCount)
  void InitBlockUnaligned(Void* startAddress, byte value, UInt32 byteCount)
  T Read(Void* source)
  T ReadUnaligned(Void* source)
  T ReadUnaligned(Byte& source)
  int SizeOf()
  T& Subtract(T& source, int elementOffset)
  void WriteUnaligned(Byte& destination, T value)
  void WriteUnaligned(Void* destination, T value)
  bool IsAddressGreaterThan(T& left, T& right)
  bool IsAddressLessThan(T& left, T& right)
  T& AddByteOffset(T& source, ulong byteOffset)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.EnumeratorCancellationAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.SwitchExpressionException
Наследуется от: InvalidOperationException
Поля:
  object <UnmatchedValue>k__BackingField
Свойства:
  object UnmatchedValue
  string Message
Методы:
  void .ctor()
  void .ctor(Exception innerException)
  void .ctor(object unmatchedValue)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  object get_UnmatchedValue()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Message()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.DependencyReductionRootAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Resources.IResourceReader
Поля:
Свойства:
Методы:
  void Close()
  IDictionaryEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Resources.MissingManifestResourceException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Resources.MissingSatelliteAssemblyException
Наследуется от: SystemException
Поля:
  string _cultureName
Свойства:
  string CultureName
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, string cultureName)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
  string get_CultureName()
--------------------------------------------------
Класс: System.Resources.NeutralResourcesLanguageAttribute
Наследуется от: Attribute
Поля:
  string <CultureName>k__BackingField
  UltimateResourceFallbackLocation <Location>k__BackingField
Свойства:
  string CultureName
  UltimateResourceFallbackLocation Location
Методы:
  void .ctor(string cultureName)
  void .ctor(string cultureName, UltimateResourceFallbackLocation location)
  string get_CultureName()
  UltimateResourceFallbackLocation get_Location()
--------------------------------------------------
Класс: System.Resources.ResourceFallbackManager
Наследуется от: object
Поля:
  CultureInfo m_startingCulture
  CultureInfo m_neutralResourcesCulture
  bool m_useParents
Свойства:
Методы:
  void .ctor(CultureInfo startingCulture, CultureInfo neutralResourcesCulture, bool useParents)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<CultureInfo> GetEnumerator()
--------------------------------------------------
Класс: System.Resources.ResourceTypeCode
Наследуется от: Enum
Поля:
  int value__
  ResourceTypeCode Null
  ResourceTypeCode String
  ResourceTypeCode Boolean
  ResourceTypeCode Char
  ResourceTypeCode Byte
  ResourceTypeCode SByte
  ResourceTypeCode Int16
  ResourceTypeCode UInt16
  ResourceTypeCode Int32
  ResourceTypeCode UInt32
  ResourceTypeCode Int64
  ResourceTypeCode UInt64
  ResourceTypeCode Single
  ResourceTypeCode Double
  ResourceTypeCode Decimal
  ResourceTypeCode DateTime
  ResourceTypeCode TimeSpan
  ResourceTypeCode LastPrimitive
  ResourceTypeCode ByteArray
  ResourceTypeCode Stream
  ResourceTypeCode StartOfUserTypes
Свойства:
Методы:
--------------------------------------------------
Класс: System.Resources.RuntimeResourceSet
Наследуется от: ResourceSet
Поля:
  int Version
  Dictionary`2<string, ResourceLocator> _resCache
  ResourceReader _defaultReader
  Dictionary`2<string, ResourceLocator> _caseInsensitiveTable
  bool _haveReadFromReader
Свойства:
Методы:
  void .ctor(string fileName)
  void .ctor(Stream stream)
  void Dispose(bool disposing)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator GetEnumeratorHelper()
  string GetString(string key)
  string GetString(string key, bool ignoreCase)
  object GetObject(string key)
  object GetObject(string key, bool ignoreCase)
  object GetObject(string key, bool ignoreCase, bool isString)
  object ResolveResourceLocator(ResourceLocator resLocation, string key, Dictionary`2<string, ResourceLocator> copyOfCache, bool keyInWrongCase)
--------------------------------------------------
Класс: System.Resources.SatelliteContractVersionAttribute
Наследуется от: Attribute
Поля:
  string <Version>k__BackingField
Свойства:
  string Version
Методы:
  void .ctor(string version)
  string get_Version()
--------------------------------------------------
Класс: System.Resources.UltimateResourceFallbackLocation
Наследуется от: Enum
Поля:
  int value__
  UltimateResourceFallbackLocation MainAssembly
  UltimateResourceFallbackLocation Satellite
Свойства:
Методы:
--------------------------------------------------
Класс: System.Resources.IResourceWriter
Поля:
Свойства:
Методы:
  void AddResource(string name, string value)
  void AddResource(string name, object value)
  void AddResource(string name, Byte[] value)
  void Close()
  void Generate()
--------------------------------------------------
Класс: System.Resources.FastResourceComparer
Наследуется от: object
Поля:
  FastResourceComparer Default
Свойства:
Методы:
  int GetHashCode(object key)
  int GetHashCode(string key)
  int HashFunction(string key)
  int Compare(object a, object b)
  int Compare(string a, string b)
  bool Equals(string a, string b)
  bool Equals(object a, object b)
  int CompareOrdinal(string a, Byte[] bytes, int bCharLength)
  int CompareOrdinal(Byte[] bytes, int aCharLength, string b)
  int CompareOrdinal(Byte* a, int byteLen, string b)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Resources.FileBasedResourceGroveler
Наследуется от: object
Поля:
  ResourceManagerMediator _mediator
Свойства:
Методы:
  void .ctor(ResourceManagerMediator mediator)
  ResourceSet GrovelForResourceSet(CultureInfo culture, Dictionary`2<string, ResourceSet> localResourceSets, bool tryParents, bool createIfNotExists, StackCrawlMark& stackMark)
  bool HasNeutralResources(CultureInfo culture, string defaultResName)
  string FindResourceFile(CultureInfo culture, string fileName)
  ResourceSet CreateResourceSet(string file)
--------------------------------------------------
Класс: System.Resources.IResourceGroveler
Поля:
Свойства:
Методы:
  ResourceSet GrovelForResourceSet(CultureInfo culture, Dictionary`2<string, ResourceSet> localResourceSets, bool tryParents, bool createIfNotExists, StackCrawlMark& stackMark)
  bool HasNeutralResources(CultureInfo culture, string defaultResName)
--------------------------------------------------
Класс: System.Resources.ManifestBasedResourceGroveler
Наследуется от: object
Поля:
  ResourceManagerMediator _mediator
Свойства:
Методы:
  void .ctor(ResourceManagerMediator mediator)
  ResourceSet GrovelForResourceSet(CultureInfo culture, Dictionary`2<string, ResourceSet> localResourceSets, bool tryParents, bool createIfNotExists, StackCrawlMark& stackMark)
  bool HasNeutralResources(CultureInfo culture, string defaultResName)
  CultureInfo UltimateFallbackFixup(CultureInfo lookForCulture)
  CultureInfo GetNeutralResourcesLanguage(Assembly a, UltimateResourceFallbackLocation& fallbackLocation)
  ResourceSet CreateResourceSet(Stream store, Assembly assembly)
  Stream GetManifestResourceStream(RuntimeAssembly satellite, string fileName, StackCrawlMark& stackMark)
  Stream CaseInsensitiveManifestResourceStreamLookup(RuntimeAssembly satellite, string name)
  RuntimeAssembly GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark& stackMark)
  bool CanUseDefaultResourceClasses(string readerTypeName, string resSetTypeName)
  string GetSatelliteAssemblyName()
  void HandleSatelliteMissing()
  void HandleResourceStreamMissing(string fileName)
  bool GetNeutralResourcesLanguageAttribute(Assembly assembly, String& cultureName, Int16& fallbackLocation)
--------------------------------------------------
Класс: System.Resources.ResourceManager
Наследуется от: object
Поля:
  string BaseNameField
  Hashtable ResourceSets
  Dictionary`2<string, ResourceSet> _resourceSets
  string moduleDir
  Assembly MainAssembly
  Type _locationInfo
  Type _userResourceSet
  CultureInfo _neutralResourcesCulture
  CultureNameResourceSetPair _lastUsedResourceCache
  bool _ignoreCase
  bool UseManifest
  bool UseSatelliteAssem
  UltimateResourceFallbackLocation _fallbackLoc
  Version _satelliteContractVersion
  bool _lookedForSatelliteContractVersion
  Assembly _callingAssembly
  RuntimeAssembly m_callingAssembly
  IResourceGroveler resourceGroveler
  int MagicNumber
  int HeaderVersionNumber
  Type _minResourceSet
  string ResReaderTypeName
  string ResSetTypeName
  string MscorlibName
  string ResFileExtension
  int ResFileExtensionLength
  int DEBUG
Свойства:
  string BaseName
  bool IgnoreCase
  Type ResourceSetType
  UltimateResourceFallbackLocation FallbackLocation
Методы:
  void Init()
  void .ctor()
  void .ctor(string baseName, string resourceDir, Type usingResourceSet)
  void .ctor(string baseName, Assembly assembly)
  void .ctor(string baseName, Assembly assembly, Type usingResourceSet)
  void .ctor(Type resourceSource)
  void OnDeserializing(StreamingContext ctx)
  void OnDeserialized(StreamingContext ctx)
  void OnSerializing(StreamingContext ctx)
  void CommonAssemblyInit()
  string get_BaseName()
  bool get_IgnoreCase()
  void set_IgnoreCase(bool value)
  Type get_ResourceSetType()
  UltimateResourceFallbackLocation get_FallbackLocation()
  void set_FallbackLocation(UltimateResourceFallbackLocation value)
  void ReleaseAllResources()
  ResourceManager CreateFileBasedResourceManager(string baseName, string resourceDir, Type usingResourceSet)
  string GetResourceFileName(CultureInfo culture)
  ResourceSet GetFirstResourceSet(CultureInfo culture)
  ResourceSet GetResourceSet(CultureInfo culture, bool createIfNotExists, bool tryParents)
  ResourceSet InternalGetResourceSet(CultureInfo culture, bool createIfNotExists, bool tryParents)
  ResourceSet InternalGetResourceSet(CultureInfo requestedCulture, bool createIfNotExists, bool tryParents, StackCrawlMark& stackMark)
  void AddResourceSet(Dictionary`2<string, ResourceSet> localResourceSets, string cultureName, ResourceSet& rs)
  Version GetSatelliteContractVersion(Assembly a)
  CultureInfo GetNeutralResourcesLanguage(Assembly a)
  bool CompareNames(string asmTypeName1, string typeName2, AssemblyName asmName2)
  void SetAppXConfiguration()
  string GetString(string name)
  string GetString(string name, CultureInfo culture)
  object GetObject(string name)
  object GetObject(string name, CultureInfo culture)
  object GetObject(string name, CultureInfo culture, bool wrapUnmanagedMemStream)
  UnmanagedMemoryStream GetStream(string name)
  UnmanagedMemoryStream GetStream(string name, CultureInfo culture)
  void .cctor()
--------------------------------------------------
Класс: System.Resources.ResourceLocator
Наследуется от: ValueType
Поля:
  object _value
  int _dataPos
Свойства:
  int DataPosition
  object Value
Методы:
  void .ctor(int dataPos, object value)
  int get_DataPosition()
  object get_Value()
  void set_Value(object value)
  bool CanCache(ResourceTypeCode value)
--------------------------------------------------
Класс: System.Resources.ResourceReader
Наследуется от: object
Поля:
  int DefaultFileStreamBufferSize
  BinaryReader _store
  Dictionary`2<string, ResourceLocator> _resCache
  long _nameSectionOffset
  long _dataSectionOffset
  Int32[] _nameHashes
  Int32* _nameHashesPtr
  Int32[] _namePositions
  Int32* _namePositionsPtr
  RuntimeType[] _typeTable
  Int32[] _typeNamePositions
  BinaryFormatter _objFormatter
  int _numResources
  UnmanagedMemoryStream _ums
  int _version
Свойства:
Методы:
  void .ctor(string fileName)
  void .ctor(Stream stream)
  void .ctor(Stream stream, Dictionary`2<string, ResourceLocator> resCache)
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  int ReadUnalignedI4(Int32* p)
  void SkipInt32()
  void SkipString()
  int GetNameHash(int index)
  int GetNamePosition(int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator GetEnumerator()
  ResourceEnumerator GetEnumeratorInternal()
  int FindPosForResource(string name)
  bool CompareStringEqualsName(string name)
  string AllocateStringForNameIndex(int index, Int32& dataOffset)
  object GetValueForNameIndex(int index)
  string LoadString(int pos)
  object LoadObject(int pos)
  object LoadObject(int pos, ResourceTypeCode& typeCode)
  object LoadObjectV1(int pos)
  object _LoadObjectV1(int pos)
  object LoadObjectV2(int pos, ResourceTypeCode& typeCode)
  object _LoadObjectV2(int pos, ResourceTypeCode& typeCode)
  object DeserializeObject(int typeIndex)
  void ReadResources()
  void _ReadResources()
  RuntimeType FindType(int typeIndex)
  void GetResourceData(string resourceName, String& resourceType, Byte[]& resourceData)
  string TypeNameFromTypeCode(ResourceTypeCode typeCode)
--------------------------------------------------
Класс: System.Resources.ResourceSet
Наследуется от: object
Поля:
  IResourceReader Reader
  Hashtable Table
  Hashtable _caseInsensitiveTable
Свойства:
Методы:
  void .ctor()
  void .ctor(bool junk)
  void .ctor(string fileName)
  void .ctor(Stream stream)
  void .ctor(IResourceReader reader)
  void CommonInit()
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  Type GetDefaultReader()
  Type GetDefaultWriter()
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator GetEnumeratorHelper()
  string GetString(string name)
  string GetString(string name, bool ignoreCase)
  object GetObject(string name)
  object GetObject(string name, bool ignoreCase)
  void ReadResources()
  object GetObjectInternal(string name)
  object GetCaseInsensitiveObjectInternal(string name)
--------------------------------------------------
Класс: System.Resources.ResourceWriter
Наследуется от: object
Поля:
  Func`2<Type, string> typeConverter
  int _ExpectedNumberOfResources
  int AverageNameSize
  int AverageValueSize
  Dictionary`2<string, object> _resourceList
  Stream _output
  Dictionary`2<string, object> _caseInsensitiveDups
  Dictionary`2<string, PrecannedResource> _preserializedData
  int _DefaultBufferSize
Свойства:
  Func`2<Type, string> TypeNameConverter
Методы:
  Func`2<Type, string> get_TypeNameConverter()
  void set_TypeNameConverter(Func`2<Type, string> value)
  void .ctor(string fileName)
  void .ctor(Stream stream)
  void AddResource(string name, string value)
  void AddResource(string name, object value)
  void AddResource(string name, Stream value)
  void AddResource(string name, Stream value, bool closeAfterWrite)
  void AddResourceInternal(string name, Stream value, bool closeAfterWrite)
  void AddResource(string name, Byte[] value)
  void AddResourceData(string name, string typeName, Byte[] serializedData)
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  void Generate()
  ResourceTypeCode FindTypeCode(object value, List`1<string> types)
  void WriteValue(ResourceTypeCode typeCode, object value, BinaryWriter writer, IFormatter objFormatter)
  void Write7BitEncodedInt(BinaryWriter store, int value)
--------------------------------------------------
Класс: System.Resources.Win32ResourceType
Наследуется от: Enum
Поля:
  int value__
  Win32ResourceType RT_CURSOR
  Win32ResourceType RT_FONT
  Win32ResourceType RT_BITMAP
  Win32ResourceType RT_ICON
  Win32ResourceType RT_MENU
  Win32ResourceType RT_DIALOG
  Win32ResourceType RT_STRING
  Win32ResourceType RT_FONTDIR
  Win32ResourceType RT_ACCELERATOR
  Win32ResourceType RT_RCDATA
  Win32ResourceType RT_MESSAGETABLE
  Win32ResourceType RT_GROUP_CURSOR
  Win32ResourceType RT_GROUP_ICON
  Win32ResourceType RT_VERSION
  Win32ResourceType RT_DLGINCLUDE
  Win32ResourceType RT_PLUGPLAY
  Win32ResourceType RT_VXD
  Win32ResourceType RT_ANICURSOR
  Win32ResourceType RT_ANIICON
  Win32ResourceType RT_HTML
Свойства:
Методы:
--------------------------------------------------
Класс: System.Resources.NameOrId
Наследуется от: object
Поля:
  string name
  int id
Свойства:
  bool IsName
  string Name
  int Id
Методы:
  void .ctor(string name)
  void .ctor(int id)
  bool get_IsName()
  string get_Name()
  int get_Id()
  string ToString()
--------------------------------------------------
Класс: System.Resources.Win32Resource
Наследуется от: object
Поля:
  NameOrId type
  NameOrId name
  int language
Свойства:
  Win32ResourceType ResourceType
  NameOrId Name
  NameOrId Type
  int Language
Методы:
  void .ctor(NameOrId type, NameOrId name, int language)
  void .ctor(Win32ResourceType type, int name, int language)
  Win32ResourceType get_ResourceType()
  NameOrId get_Name()
  NameOrId get_Type()
  int get_Language()
  void WriteTo(Stream s)
  string ToString()
--------------------------------------------------
Класс: System.Resources.Win32EncodedResource
Наследуется от: Win32Resource
Поля:
  Byte[] data
Свойства:
  Byte[] Data
Методы:
  void .ctor(NameOrId type, NameOrId name, int language, Byte[] data)
  Byte[] get_Data()
  void WriteTo(Stream s)
--------------------------------------------------
Класс: System.Resources.Win32IconResource
Наследуется от: Win32Resource
Поля:
  ICONDIRENTRY icon
Свойства:
  ICONDIRENTRY Icon
Методы:
  void .ctor(int id, int language, ICONDIRENTRY icon)
  ICONDIRENTRY get_Icon()
  void WriteTo(Stream s)
--------------------------------------------------
Класс: System.Resources.Win32GroupIconResource
Наследуется от: Win32Resource
Поля:
  Win32IconResource[] icons
Свойства:
Методы:
  void .ctor(int id, int language, Win32IconResource[] icons)
  void WriteTo(Stream s)
--------------------------------------------------
Класс: System.Resources.Win32VersionResource
Наследуется от: Win32Resource
Поля:
  String[] WellKnownProperties
  long signature
  int struct_version
  long file_version
  long product_version
  int file_flags_mask
  int file_flags
  int file_os
  int file_type
  int file_subtype
  long file_date
  int file_lang
  int file_codepage
  Hashtable properties
Свойства:
  string Version
  string Item
  string Comments
  string CompanyName
  string LegalCopyright
  string LegalTrademarks
  string OriginalFilename
  string ProductName
  string ProductVersion
  string InternalName
  string FileDescription
  int FileLanguage
  string FileVersion
Методы:
  void .ctor(int id, int language, bool compilercontext)
  string get_Version()
  void set_Version(string value)
  void set_Item(string key, string value)
  string get_Comments()
  void set_Comments(string value)
  string get_CompanyName()
  void set_CompanyName(string value)
  string get_LegalCopyright()
  void set_LegalCopyright(string value)
  string get_LegalTrademarks()
  void set_LegalTrademarks(string value)
  string get_OriginalFilename()
  void set_OriginalFilename(string value)
  string get_ProductName()
  void set_ProductName(string value)
  string get_ProductVersion()
  void set_ProductVersion(string value)
  string get_InternalName()
  void set_InternalName(string value)
  string get_FileDescription()
  void set_FileDescription(string value)
  int get_FileLanguage()
  void set_FileLanguage(int value)
  string get_FileVersion()
  void set_FileVersion(string value)
  void emit_padding(BinaryWriter w)
  void patch_length(BinaryWriter w, long len_pos)
  void WriteTo(Stream ms)
--------------------------------------------------
Класс: System.Resources.Win32ResFileReader
Наследуется от: object
Поля:
  Stream res_file
Свойства:
Методы:
  void .ctor(Stream s)
  int read_int16()
  int read_int32()
  bool read_padding()
  NameOrId read_ordinal()
  ICollection ReadResources()
--------------------------------------------------
Класс: System.Resources.ICONDIRENTRY
Наследуется от: object
Поля:
  byte bWidth
  byte bHeight
  byte bColorCount
  byte bReserved
  short wPlanes
  short wBitCount
  int dwBytesInRes
  int dwImageOffset
  Byte[] image
Свойства:
Методы:
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Resources.Win32IconFileReader
Наследуется от: object
Поля:
  Stream iconFile
Свойства:
Методы:
  void .ctor(Stream s)
  ICONDIRENTRY[] ReadIcons()
--------------------------------------------------
Класс: System.Reflection.AmbiguousMatchException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.AssemblyAlgorithmIdAttribute
Наследуется от: Attribute
Поля:
  UInt32 <AlgorithmId>k__BackingField
Свойства:
  UInt32 AlgorithmId
Методы:
  void .ctor(AssemblyHashAlgorithm algorithmId)
  void .ctor(UInt32 algorithmId)
  UInt32 get_AlgorithmId()
--------------------------------------------------
Класс: System.Reflection.AssemblyCompanyAttribute
Наследуется от: Attribute
Поля:
  string <Company>k__BackingField
Свойства:
  string Company
Методы:
  void .ctor(string company)
  string get_Company()
--------------------------------------------------
Класс: System.Reflection.AssemblyConfigurationAttribute
Наследуется от: Attribute
Поля:
  string <Configuration>k__BackingField
Свойства:
  string Configuration
Методы:
  void .ctor(string configuration)
  string get_Configuration()
--------------------------------------------------
Класс: System.Reflection.AssemblyContentType
Наследуется от: Enum
Поля:
  int value__
  AssemblyContentType Default
  AssemblyContentType WindowsRuntime
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.AssemblyCopyrightAttribute
Наследуется от: Attribute
Поля:
  string <Copyright>k__BackingField
Свойства:
  string Copyright
Методы:
  void .ctor(string copyright)
  string get_Copyright()
--------------------------------------------------
Класс: System.Reflection.AssemblyCultureAttribute
Наследуется от: Attribute
Поля:
  string <Culture>k__BackingField
Свойства:
  string Culture
Методы:
  void .ctor(string culture)
  string get_Culture()
--------------------------------------------------
Класс: System.Reflection.AssemblyDefaultAliasAttribute
Наследуется от: Attribute
Поля:
  string <DefaultAlias>k__BackingField
Свойства:
  string DefaultAlias
Методы:
  void .ctor(string defaultAlias)
  string get_DefaultAlias()
--------------------------------------------------
Класс: System.Reflection.AssemblyDelaySignAttribute
Наследуется от: Attribute
Поля:
  bool <DelaySign>k__BackingField
Свойства:
  bool DelaySign
Методы:
  void .ctor(bool delaySign)
  bool get_DelaySign()
--------------------------------------------------
Класс: System.Reflection.AssemblyDescriptionAttribute
Наследуется от: Attribute
Поля:
  string <Description>k__BackingField
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Reflection.AssemblyFileVersionAttribute
Наследуется от: Attribute
Поля:
  string <Version>k__BackingField
Свойства:
  string Version
Методы:
  void .ctor(string version)
  string get_Version()
--------------------------------------------------
Класс: System.Reflection.AssemblyFlagsAttribute
Наследуется от: Attribute
Поля:
  AssemblyNameFlags _flags
Свойства:
  UInt32 Flags
  int AssemblyFlags
Методы:
  void .ctor(UInt32 flags)
  UInt32 get_Flags()
  int get_AssemblyFlags()
  void .ctor(int assemblyFlags)
  void .ctor(AssemblyNameFlags assemblyFlags)
--------------------------------------------------
Класс: System.Reflection.AssemblyInformationalVersionAttribute
Наследуется от: Attribute
Поля:
  string <InformationalVersion>k__BackingField
Свойства:
  string InformationalVersion
Методы:
  void .ctor(string informationalVersion)
  string get_InformationalVersion()
--------------------------------------------------
Класс: System.Reflection.AssemblyKeyFileAttribute
Наследуется от: Attribute
Поля:
  string <KeyFile>k__BackingField
Свойства:
  string KeyFile
Методы:
  void .ctor(string keyFile)
  string get_KeyFile()
--------------------------------------------------
Класс: System.Reflection.AssemblyKeyNameAttribute
Наследуется от: Attribute
Поля:
  string <KeyName>k__BackingField
Свойства:
  string KeyName
Методы:
  void .ctor(string keyName)
  string get_KeyName()
--------------------------------------------------
Класс: System.Reflection.AssemblyMetadataAttribute
Наследуется от: Attribute
Поля:
  string <Key>k__BackingField
  string <Value>k__BackingField
Свойства:
  string Key
  string Value
Методы:
  void .ctor(string key, string value)
  string get_Key()
  string get_Value()
--------------------------------------------------
Класс: System.Reflection.AssemblyNameFlags
Наследуется от: Enum
Поля:
  int value__
  AssemblyNameFlags None
  AssemblyNameFlags PublicKey
  AssemblyNameFlags EnableJITcompileOptimizer
  AssemblyNameFlags EnableJITcompileTracking
  AssemblyNameFlags Retargetable
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.AssemblyProductAttribute
Наследуется от: Attribute
Поля:
  string <Product>k__BackingField
Свойства:
  string Product
Методы:
  void .ctor(string product)
  string get_Product()
--------------------------------------------------
Класс: System.Reflection.AssemblySignatureKeyAttribute
Наследуется от: Attribute
Поля:
  string <PublicKey>k__BackingField
  string <Countersignature>k__BackingField
Свойства:
  string PublicKey
  string Countersignature
Методы:
  void .ctor(string publicKey, string countersignature)
  string get_PublicKey()
  string get_Countersignature()
--------------------------------------------------
Класс: System.Reflection.AssemblyTitleAttribute
Наследуется от: Attribute
Поля:
  string <Title>k__BackingField
Свойства:
  string Title
Методы:
  void .ctor(string title)
  string get_Title()
--------------------------------------------------
Класс: System.Reflection.AssemblyTrademarkAttribute
Наследуется от: Attribute
Поля:
  string <Trademark>k__BackingField
Свойства:
  string Trademark
Методы:
  void .ctor(string trademark)
  string get_Trademark()
--------------------------------------------------
Класс: System.Reflection.AssemblyVersionAttribute
Наследуется от: Attribute
Поля:
  string <Version>k__BackingField
Свойства:
  string Version
Методы:
  void .ctor(string version)
  string get_Version()
--------------------------------------------------
Класс: System.Reflection.Binder
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  FieldInfo BindToField(BindingFlags bindingAttr, FieldInfo[] match, object value, CultureInfo culture)
  MethodBase BindToMethod(BindingFlags bindingAttr, MethodBase[] match, Object[]& args, ParameterModifier[] modifiers, CultureInfo culture, String[] names, Object& state)
  object ChangeType(object value, Type type, CultureInfo culture)
  void ReorderArgumentArray(Object[]& args, object state)
  MethodBase SelectMethod(BindingFlags bindingAttr, MethodBase[] match, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo SelectProperty(BindingFlags bindingAttr, PropertyInfo[] match, Type returnType, Type[] indexes, ParameterModifier[] modifiers)
  bool CanChangeType(object value, Type type, CultureInfo culture)
--------------------------------------------------
Класс: System.Reflection.BindingFlags
Наследуется от: Enum
Поля:
  int value__
  BindingFlags Default
  BindingFlags IgnoreCase
  BindingFlags DeclaredOnly
  BindingFlags Instance
  BindingFlags Static
  BindingFlags Public
  BindingFlags NonPublic
  BindingFlags FlattenHierarchy
  BindingFlags InvokeMethod
  BindingFlags CreateInstance
  BindingFlags GetField
  BindingFlags SetField
  BindingFlags GetProperty
  BindingFlags SetProperty
  BindingFlags PutDispProperty
  BindingFlags PutRefDispProperty
  BindingFlags ExactBinding
  BindingFlags SuppressChangeType
  BindingFlags OptionalParamBinding
  BindingFlags IgnoreReturn
  BindingFlags DoNotWrapExceptions
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.CallingConventions
Наследуется от: Enum
Поля:
  int value__
  CallingConventions Standard
  CallingConventions VarArgs
  CallingConventions Any
  CallingConventions HasThis
  CallingConventions ExplicitThis
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.ConstructorInfo
Наследуется от: MethodBase
Поля:
  string ConstructorName
  string TypeConstructorName
Свойства:
  MemberTypes MemberType
Методы:
  void .ctor()
  MemberTypes get_MemberType()
  object Invoke(Object[] parameters)
  object Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(ConstructorInfo left, ConstructorInfo right)
  bool op_Inequality(ConstructorInfo left, ConstructorInfo right)
  void .cctor()
  void System.Runtime.InteropServices._ConstructorInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  Type System.Runtime.InteropServices._ConstructorInfo.GetType()
  void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._ConstructorInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._ConstructorInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  object System.Runtime.InteropServices._ConstructorInfo.Invoke_2(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  object System.Runtime.InteropServices._ConstructorInfo.Invoke_3(object obj, Object[] parameters)
  object System.Runtime.InteropServices._ConstructorInfo.Invoke_4(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  object System.Runtime.InteropServices._ConstructorInfo.Invoke_5(Object[] parameters)
--------------------------------------------------
Класс: System.Reflection.CustomAttributeFormatException
Наследуется от: FormatException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.DefaultMemberAttribute
Наследуется от: Attribute
Поля:
  string <MemberName>k__BackingField
Свойства:
  string MemberName
Методы:
  void .ctor(string memberName)
  string get_MemberName()
--------------------------------------------------
Класс: System.Reflection.EventAttributes
Наследуется от: Enum
Поля:
  int value__
  EventAttributes None
  EventAttributes SpecialName
  EventAttributes RTSpecialName
  EventAttributes ReservedMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.EventInfo
Наследуется от: MemberInfo
Поля:
  AddEventAdapter cached_add_event
Свойства:
  MemberTypes MemberType
  EventAttributes Attributes
  bool IsSpecialName
  MethodInfo AddMethod
  MethodInfo RemoveMethod
  MethodInfo RaiseMethod
  bool IsMulticast
  Type EventHandlerType
Методы:
  void .ctor()
  MemberTypes get_MemberType()
  EventAttributes get_Attributes()
  bool get_IsSpecialName()
  MethodInfo[] GetOtherMethods()
  MethodInfo[] GetOtherMethods(bool nonPublic)
  MethodInfo get_AddMethod()
  MethodInfo get_RemoveMethod()
  MethodInfo get_RaiseMethod()
  MethodInfo GetAddMethod()
  MethodInfo GetRemoveMethod()
  MethodInfo GetRaiseMethod()
  MethodInfo GetAddMethod(bool nonPublic)
  MethodInfo GetRemoveMethod(bool nonPublic)
  MethodInfo GetRaiseMethod(bool nonPublic)
  bool get_IsMulticast()
  Type get_EventHandlerType()
  void RemoveEventHandler(object target, Delegate handler)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(EventInfo left, EventInfo right)
  bool op_Inequality(EventInfo left, EventInfo right)
  void AddEventHandler(object target, Delegate handler)
  void AddEventFrame(AddEvent`2<T, D> addEvent, object obj, object dele)
  void StaticAddEventAdapterFrame(StaticAddEvent`1<D> addEvent, object obj, object dele)
  AddEventAdapter CreateAddEventDelegate(MethodInfo method)
  EventInfo internal_from_handle_type(IntPtr event_handle, IntPtr type_handle)
  EventInfo GetEventFromHandle(RuntimeEventHandle handle, RuntimeTypeHandle reflectedType)
  void System.Runtime.InteropServices._EventInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  Type System.Runtime.InteropServices._EventInfo.GetType()
  void System.Runtime.InteropServices._EventInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._EventInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._EventInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.ExceptionHandlingClauseOptions
Наследуется от: Enum
Поля:
  int value__
  ExceptionHandlingClauseOptions Clause
  ExceptionHandlingClauseOptions Filter
  ExceptionHandlingClauseOptions Finally
  ExceptionHandlingClauseOptions Fault
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.FieldAttributes
Наследуется от: Enum
Поля:
  int value__
  FieldAttributes FieldAccessMask
  FieldAttributes PrivateScope
  FieldAttributes Private
  FieldAttributes FamANDAssem
  FieldAttributes Assembly
  FieldAttributes Family
  FieldAttributes FamORAssem
  FieldAttributes Public
  FieldAttributes Static
  FieldAttributes InitOnly
  FieldAttributes Literal
  FieldAttributes NotSerialized
  FieldAttributes SpecialName
  FieldAttributes PinvokeImpl
  FieldAttributes RTSpecialName
  FieldAttributes HasFieldMarshal
  FieldAttributes HasDefault
  FieldAttributes HasFieldRVA
  FieldAttributes ReservedMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.FieldInfo
Наследуется от: MemberInfo
Поля:
Свойства:
  MemberTypes MemberType
  FieldAttributes Attributes
  Type FieldType
  bool IsInitOnly
  bool IsLiteral
  bool IsNotSerialized
  bool IsPinvokeImpl
  bool IsSpecialName
  bool IsStatic
  bool IsAssembly
  bool IsFamily
  bool IsFamilyAndAssembly
  bool IsFamilyOrAssembly
  bool IsPrivate
  bool IsPublic
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  bool IsSecurityTransparent
  RuntimeFieldHandle FieldHandle
Методы:
  void .ctor()
  MemberTypes get_MemberType()
  FieldAttributes get_Attributes()
  Type get_FieldType()
  bool get_IsInitOnly()
  bool get_IsLiteral()
  bool get_IsNotSerialized()
  bool get_IsPinvokeImpl()
  bool get_IsSpecialName()
  bool get_IsStatic()
  bool get_IsAssembly()
  bool get_IsFamily()
  bool get_IsFamilyAndAssembly()
  bool get_IsFamilyOrAssembly()
  bool get_IsPrivate()
  bool get_IsPublic()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  bool get_IsSecurityTransparent()
  RuntimeFieldHandle get_FieldHandle()
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(FieldInfo left, FieldInfo right)
  bool op_Inequality(FieldInfo left, FieldInfo right)
  object GetValue(object obj)
  void SetValue(object obj, object value)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  void SetValueDirect(TypedReference obj, object value)
  object GetValueDirect(TypedReference obj)
  object GetRawConstantValue()
  Type[] GetOptionalCustomModifiers()
  Type[] GetRequiredCustomModifiers()
  FieldInfo internal_from_handle_type(IntPtr field_handle, IntPtr type_handle)
  FieldInfo GetFieldFromHandle(RuntimeFieldHandle handle)
  FieldInfo GetFieldFromHandle(RuntimeFieldHandle handle, RuntimeTypeHandle declaringType)
  int GetFieldOffset()
  MarshalAsAttribute get_marshal_info()
  Object[] GetPseudoCustomAttributes()
  CustomAttributeData[] GetPseudoCustomAttributesData()
  void System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  Type System.Runtime.InteropServices._FieldInfo.GetType()
  void System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._FieldInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.GenericParameterAttributes
Наследуется от: Enum
Поля:
  int value__
  GenericParameterAttributes None
  GenericParameterAttributes VarianceMask
  GenericParameterAttributes Covariant
  GenericParameterAttributes Contravariant
  GenericParameterAttributes SpecialConstraintMask
  GenericParameterAttributes ReferenceTypeConstraint
  GenericParameterAttributes NotNullableValueTypeConstraint
  GenericParameterAttributes DefaultConstructorConstraint
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.ICustomAttributeProvider
Поля:
Свойства:
Методы:
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
--------------------------------------------------
Класс: System.Reflection.IReflect
Поля:
Свойства:
  Type UnderlyingSystemType
Методы:
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr)
  PropertyInfo GetProperty(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Type get_UnderlyingSystemType()
--------------------------------------------------
Класс: System.Reflection.IReflectableType
Поля:
Свойства:
Методы:
  TypeInfo GetTypeInfo()
--------------------------------------------------
Класс: System.Reflection.ImageFileMachine
Наследуется от: Enum
Поля:
  int value__
  ImageFileMachine I386
  ImageFileMachine IA64
  ImageFileMachine AMD64
  ImageFileMachine ARM
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.InterfaceMapping
Наследуется от: ValueType
Поля:
  Type TargetType
  Type InterfaceType
  MethodInfo[] TargetMethods
  MethodInfo[] InterfaceMethods
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.IntrospectionExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeInfo GetTypeInfo(Type type)
--------------------------------------------------
Класс: System.Reflection.InvalidFilterCriteriaException
Наследуется от: ApplicationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.ManifestResourceInfo
Наследуется от: object
Поля:
  Assembly <ReferencedAssembly>k__BackingField
  string <FileName>k__BackingField
  ResourceLocation <ResourceLocation>k__BackingField
Свойства:
  Assembly ReferencedAssembly
  string FileName
  ResourceLocation ResourceLocation
Методы:
  void .ctor(Assembly containingAssembly, string containingFileName, ResourceLocation resourceLocation)
  Assembly get_ReferencedAssembly()
  string get_FileName()
  ResourceLocation get_ResourceLocation()
--------------------------------------------------
Класс: System.Reflection.MemberFilter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(MemberInfo m, object filterCriteria)
  IAsyncResult BeginInvoke(MemberInfo m, object filterCriteria, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Reflection.MemberInfo
Наследуется от: object
Поля:
Свойства:
  MemberTypes MemberType
  string Name
  Type DeclaringType
  Type ReflectedType
  Module Module
  IEnumerable`1<CustomAttributeData> CustomAttributes
  int MetadataToken
Методы:
  void .ctor()
  MemberTypes get_MemberType()
  string get_Name()
  Type get_DeclaringType()
  Type get_ReflectedType()
  Module get_Module()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  IEnumerable`1<CustomAttributeData> get_CustomAttributes()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  int get_MetadataToken()
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(MemberInfo left, MemberInfo right)
  bool op_Inequality(MemberInfo left, MemberInfo right)
  bool CacheEquals(object o)
  bool HasSameMetadataDefinitionAsCore(MemberInfo other)
  void System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  Type System.Runtime.InteropServices._MemberInfo.GetType()
  void System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._MemberInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.MemberTypes
Наследуется от: Enum
Поля:
  int value__
  MemberTypes Constructor
  MemberTypes Event
  MemberTypes Field
  MemberTypes Method
  MemberTypes Property
  MemberTypes TypeInfo
  MemberTypes Custom
  MemberTypes NestedType
  MemberTypes All
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MethodAttributes
Наследуется от: Enum
Поля:
  int value__
  MethodAttributes MemberAccessMask
  MethodAttributes PrivateScope
  MethodAttributes Private
  MethodAttributes FamANDAssem
  MethodAttributes Assembly
  MethodAttributes Family
  MethodAttributes FamORAssem
  MethodAttributes Public
  MethodAttributes Static
  MethodAttributes Final
  MethodAttributes Virtual
  MethodAttributes HideBySig
  MethodAttributes CheckAccessOnOverride
  MethodAttributes VtableLayoutMask
  MethodAttributes ReuseSlot
  MethodAttributes NewSlot
  MethodAttributes Abstract
  MethodAttributes SpecialName
  MethodAttributes PinvokeImpl
  MethodAttributes UnmanagedExport
  MethodAttributes RTSpecialName
  MethodAttributes HasSecurity
  MethodAttributes RequireSecObject
  MethodAttributes ReservedMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MethodBase
Наследуется от: MemberInfo
Поля:
Свойства:
  MethodAttributes Attributes
  MethodImplAttributes MethodImplementationFlags
  CallingConventions CallingConvention
  bool IsAbstract
  bool IsConstructor
  bool IsFinal
  bool IsHideBySig
  bool IsSpecialName
  bool IsStatic
  bool IsVirtual
  bool IsAssembly
  bool IsFamily
  bool IsFamilyAndAssembly
  bool IsFamilyOrAssembly
  bool IsPrivate
  bool IsPublic
  bool IsConstructedGenericMethod
  bool IsGenericMethod
  bool IsGenericMethodDefinition
  bool ContainsGenericParameters
  RuntimeMethodHandle MethodHandle
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  bool IsSecurityTransparent
Методы:
  void .ctor()
  ParameterInfo[] GetParameters()
  MethodAttributes get_Attributes()
  MethodImplAttributes get_MethodImplementationFlags()
  MethodImplAttributes GetMethodImplementationFlags()
  MethodBody GetMethodBody()
  CallingConventions get_CallingConvention()
  bool get_IsAbstract()
  bool get_IsConstructor()
  bool get_IsFinal()
  bool get_IsHideBySig()
  bool get_IsSpecialName()
  bool get_IsStatic()
  bool get_IsVirtual()
  bool get_IsAssembly()
  bool get_IsFamily()
  bool get_IsFamilyAndAssembly()
  bool get_IsFamilyOrAssembly()
  bool get_IsPrivate()
  bool get_IsPublic()
  bool get_IsConstructedGenericMethod()
  bool get_IsGenericMethod()
  bool get_IsGenericMethodDefinition()
  Type[] GetGenericArguments()
  bool get_ContainsGenericParameters()
  object Invoke(object obj, Object[] parameters)
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  RuntimeMethodHandle get_MethodHandle()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  bool get_IsSecurityTransparent()
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(MethodBase left, MethodBase right)
  bool op_Inequality(MethodBase left, MethodBase right)
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  Type GetParameterType(int pos)
  int get_next_table_index(object obj, int table, int count)
  string FormatNameAndSig(bool serialization)
  Type[] GetParameterTypes()
  ParameterInfo[] GetParametersNoCopy()
  MethodBase GetMethodFromHandle(RuntimeMethodHandle handle)
  MethodBase GetMethodFromHandle(RuntimeMethodHandle handle, RuntimeTypeHandle declaringType)
  string ConstructParameters(Type[] parameterTypes, CallingConventions callingConvention, bool serialization)
  MethodBase GetCurrentMethod()
  void System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  Type System.Runtime.InteropServices._MethodBase.GetType()
  void System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._MethodBase.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.MethodImplAttributes
Наследуется от: Enum
Поля:
  int value__
  MethodImplAttributes CodeTypeMask
  MethodImplAttributes IL
  MethodImplAttributes Native
  MethodImplAttributes OPTIL
  MethodImplAttributes Runtime
  MethodImplAttributes ManagedMask
  MethodImplAttributes Unmanaged
  MethodImplAttributes Managed
  MethodImplAttributes ForwardRef
  MethodImplAttributes PreserveSig
  MethodImplAttributes InternalCall
  MethodImplAttributes Synchronized
  MethodImplAttributes NoInlining
  MethodImplAttributes AggressiveInlining
  MethodImplAttributes NoOptimization
  MethodImplAttributes MaxMethodImplVal
  MethodImplAttributes SecurityMitigations
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MethodInfo
Наследуется от: MethodBase
Поля:
Свойства:
  MemberTypes MemberType
  ParameterInfo ReturnParameter
  Type ReturnType
  ICustomAttributeProvider ReturnTypeCustomAttributes
  int GenericParameterCount
Методы:
  void .ctor()
  MemberTypes get_MemberType()
  ParameterInfo get_ReturnParameter()
  Type get_ReturnType()
  Type[] GetGenericArguments()
  MethodInfo GetGenericMethodDefinition()
  MethodInfo MakeGenericMethod(Type[] typeArguments)
  MethodInfo GetBaseDefinition()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
  Delegate CreateDelegate(Type delegateType)
  Delegate CreateDelegate(Type delegateType, object target)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(MethodInfo left, MethodInfo right)
  bool op_Inequality(MethodInfo left, MethodInfo right)
  void System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._MethodInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  Type System.Runtime.InteropServices._MethodInfo.GetType()
  int get_GenericParameterCount()
--------------------------------------------------
Класс: System.Reflection.Missing
Наследуется от: object
Поля:
  Missing Value
Свойства:
Методы:
  void .ctor()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Module
Наследуется от: object
Поля:
  TypeFilter FilterTypeName
  TypeFilter FilterTypeNameIgnoreCase
  BindingFlags DefaultLookup
Свойства:
  Assembly Assembly
  string FullyQualifiedName
  string Name
  int MDStreamVersion
  Guid ModuleVersionId
  string ScopeName
  ModuleHandle ModuleHandle
  IEnumerable`1<CustomAttributeData> CustomAttributes
  int MetadataToken
  Guid MvId
Методы:
  void .ctor()
  Assembly get_Assembly()
  string get_FullyQualifiedName()
  string get_Name()
  int get_MDStreamVersion()
  Guid get_ModuleVersionId()
  string get_ScopeName()
  ModuleHandle get_ModuleHandle()
  ModuleHandle GetModuleHandleImpl()
  void GetPEKind(PortableExecutableKinds& peKind, ImageFileMachine& machine)
  bool IsResource()
  bool IsDefined(Type attributeType, bool inherit)
  IEnumerable`1<CustomAttributeData> get_CustomAttributes()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  MethodInfo GetMethod(string name)
  MethodInfo GetMethod(string name, Type[] types)
  MethodInfo GetMethod(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo[] GetMethods()
  MethodInfo[] GetMethods(BindingFlags bindingFlags)
  FieldInfo GetField(string name)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields()
  FieldInfo[] GetFields(BindingFlags bindingFlags)
  Type[] GetTypes()
  Type GetType(string className)
  Type GetType(string className, bool ignoreCase)
  Type GetType(string className, bool throwOnError, bool ignoreCase)
  Type[] FindTypes(TypeFilter filter, object filterCriteria)
  int get_MetadataToken()
  FieldInfo ResolveField(int metadataToken)
  FieldInfo ResolveField(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MemberInfo ResolveMember(int metadataToken)
  MemberInfo ResolveMember(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MethodBase ResolveMethod(int metadataToken)
  MethodBase ResolveMethod(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  Byte[] ResolveSignature(int metadataToken)
  string ResolveString(int metadataToken)
  Type ResolveType(int metadataToken)
  Type ResolveType(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  bool Equals(object o)
  int GetHashCode()
  bool op_Equality(Module left, Module right)
  bool op_Inequality(Module left, Module right)
  string ToString()
  bool FilterTypeNameImpl(Type cls, object filterCriteria)
  bool FilterTypeNameIgnoreCaseImpl(Type cls, object filterCriteria)
  Guid get_MvId()
  Guid Mono_GetGuid(Module module)
  Guid GetModuleVersionId()
  X509Certificate GetSignerCertificate()
  void .cctor()
  void System.Runtime.InteropServices._Module.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._Module.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._Module.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.ModuleResolveEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  Module Invoke(object sender, ResolveEventArgs e)
  IAsyncResult BeginInvoke(object sender, ResolveEventArgs e, AsyncCallback callback, object object)
  Module EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Reflection.ObfuscateAssemblyAttribute
Наследуется от: Attribute
Поля:
  bool <AssemblyIsPrivate>k__BackingField
  bool <StripAfterObfuscation>k__BackingField
Свойства:
  bool AssemblyIsPrivate
  bool StripAfterObfuscation
Методы:
  void .ctor(bool assemblyIsPrivate)
  bool get_AssemblyIsPrivate()
  bool get_StripAfterObfuscation()
  void set_StripAfterObfuscation(bool value)
--------------------------------------------------
Класс: System.Reflection.ObfuscationAttribute
Наследуется от: Attribute
Поля:
  bool <StripAfterObfuscation>k__BackingField
  bool <Exclude>k__BackingField
  bool <ApplyToMembers>k__BackingField
  string <Feature>k__BackingField
Свойства:
  bool StripAfterObfuscation
  bool Exclude
  bool ApplyToMembers
  string Feature
Методы:
  void .ctor()
  bool get_StripAfterObfuscation()
  void set_StripAfterObfuscation(bool value)
  bool get_Exclude()
  void set_Exclude(bool value)
  bool get_ApplyToMembers()
  void set_ApplyToMembers(bool value)
  string get_Feature()
  void set_Feature(string value)
--------------------------------------------------
Класс: System.Reflection.ParameterAttributes
Наследуется от: Enum
Поля:
  int value__
  ParameterAttributes None
  ParameterAttributes In
  ParameterAttributes Out
  ParameterAttributes Lcid
  ParameterAttributes Retval
  ParameterAttributes Optional
  ParameterAttributes HasDefault
  ParameterAttributes HasFieldMarshal
  ParameterAttributes Reserved3
  ParameterAttributes Reserved4
  ParameterAttributes ReservedMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.ParameterInfo
Наследуется от: object
Поля:
  ParameterAttributes AttrsImpl
  Type ClassImpl
  object DefaultValueImpl
  MemberInfo MemberImpl
  string NameImpl
  int PositionImpl
  int MetadataToken_ParamDef
Свойства:
  ParameterAttributes Attributes
  MemberInfo Member
  string Name
  Type ParameterType
  int Position
  bool IsIn
  bool IsLcid
  bool IsOptional
  bool IsOut
  bool IsRetval
  object DefaultValue
  object RawDefaultValue
  bool HasDefaultValue
  IEnumerable`1<CustomAttributeData> CustomAttributes
  int MetadataToken
Методы:
  void .ctor()
  ParameterAttributes get_Attributes()
  MemberInfo get_Member()
  string get_Name()
  Type get_ParameterType()
  int get_Position()
  bool get_IsIn()
  bool get_IsLcid()
  bool get_IsOptional()
  bool get_IsOut()
  bool get_IsRetval()
  object get_DefaultValue()
  object get_RawDefaultValue()
  bool get_HasDefaultValue()
  bool IsDefined(Type attributeType, bool inherit)
  IEnumerable`1<CustomAttributeData> get_CustomAttributes()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  Type[] GetOptionalCustomModifiers()
  Type[] GetRequiredCustomModifiers()
  int get_MetadataToken()
  object GetRealObject(StreamingContext context)
  string ToString()
  void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._ParameterInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.ParameterModifier
Наследуется от: ValueType
Поля:
  Boolean[] _byRef
Свойства:
  bool Item
Методы:
  void .ctor(int parameterCount)
  bool get_Item(int index)
  void set_Item(int index, bool value)
--------------------------------------------------
Класс: System.Reflection.Pointer
Наследуется от: object
Поля:
  Void* _ptr
  Type _ptrType
Свойства:
Методы:
  void .ctor(Void* ptr, Type ptrType)
  object Box(Void* ptr, Type type)
  Void* Unbox(object ptr)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  Type GetPointerType()
  IntPtr GetPointerValue()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.PortableExecutableKinds
Наследуется от: Enum
Поля:
  int value__
  PortableExecutableKinds NotAPortableExecutableImage
  PortableExecutableKinds ILOnly
  PortableExecutableKinds Required32Bit
  PortableExecutableKinds PE32Plus
  PortableExecutableKinds Unmanaged32Bit
  PortableExecutableKinds Preferred32Bit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.ProcessorArchitecture
Наследуется от: Enum
Поля:
  int value__
  ProcessorArchitecture None
  ProcessorArchitecture MSIL
  ProcessorArchitecture X86
  ProcessorArchitecture IA64
  ProcessorArchitecture Amd64
  ProcessorArchitecture Arm
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.PropertyAttributes
Наследуется от: Enum
Поля:
  int value__
  PropertyAttributes None
  PropertyAttributes SpecialName
  PropertyAttributes RTSpecialName
  PropertyAttributes HasDefault
  PropertyAttributes Reserved2
  PropertyAttributes Reserved3
  PropertyAttributes Reserved4
  PropertyAttributes ReservedMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.PropertyInfo
Наследуется от: MemberInfo
Поля:
Свойства:
  MemberTypes MemberType
  Type PropertyType
  PropertyAttributes Attributes
  bool IsSpecialName
  bool CanRead
  bool CanWrite
  MethodInfo GetMethod
  MethodInfo SetMethod
Методы:
  void .ctor()
  MemberTypes get_MemberType()
  Type get_PropertyType()
  ParameterInfo[] GetIndexParameters()
  PropertyAttributes get_Attributes()
  bool get_IsSpecialName()
  bool get_CanRead()
  bool get_CanWrite()
  MethodInfo[] GetAccessors()
  MethodInfo[] GetAccessors(bool nonPublic)
  MethodInfo get_GetMethod()
  MethodInfo GetGetMethod()
  MethodInfo GetGetMethod(bool nonPublic)
  MethodInfo get_SetMethod()
  MethodInfo GetSetMethod()
  MethodInfo GetSetMethod(bool nonPublic)
  Type[] GetOptionalCustomModifiers()
  Type[] GetRequiredCustomModifiers()
  object GetValue(object obj)
  object GetValue(object obj, Object[] index)
  object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  object GetConstantValue()
  object GetRawConstantValue()
  void SetValue(object obj, object value)
  void SetValue(object obj, object value, Object[] index)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(PropertyInfo left, PropertyInfo right)
  bool op_Inequality(PropertyInfo left, PropertyInfo right)
  void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  Type System.Runtime.InteropServices._PropertyInfo.GetType()
  void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._PropertyInfo.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.ReflectionContext
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  Assembly MapAssembly(Assembly assembly)
  TypeInfo MapType(TypeInfo type)
  TypeInfo GetTypeForObject(object value)
--------------------------------------------------
Класс: System.Reflection.ReflectionTypeLoadException
Наследуется от: SystemException
Поля:
  Type[] <Types>k__BackingField
  Exception[] <LoaderExceptions>k__BackingField
Свойства:
  Type[] Types
  Exception[] LoaderExceptions
  string Message
Методы:
  void .ctor(Type[] classes, Exception[] exceptions)
  void .ctor(Type[] classes, Exception[] exceptions, string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Type[] get_Types()
  Exception[] get_LoaderExceptions()
  string get_Message()
  string ToString()
  string CreateString(bool isMessage)
--------------------------------------------------
Класс: System.Reflection.ResourceAttributes
Наследуется от: Enum
Поля:
  int value__
  ResourceAttributes Public
  ResourceAttributes Private
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.ResourceLocation
Наследуется от: Enum
Поля:
  int value__
  ResourceLocation ContainedInAnotherAssembly
  ResourceLocation ContainedInManifestFile
  ResourceLocation Embedded
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.SignatureArrayType
Наследуется от: SignatureHasElementType
Поля:
  int _rank
  bool _isMultiDim
Свойства:
  bool IsSZArray
  bool IsVariableBoundArray
  string Suffix
Методы:
  void .ctor(SignatureType elementType, int rank, bool isMultiDim)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsPointerImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  int GetArrayRank()
  string get_Suffix()
--------------------------------------------------
Класс: System.Reflection.SignatureByRefType
Наследуется от: SignatureHasElementType
Поля:
Свойства:
  bool IsSZArray
  bool IsVariableBoundArray
  string Suffix
Методы:
  void .ctor(SignatureType elementType)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsPointerImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  int GetArrayRank()
  string get_Suffix()
--------------------------------------------------
Класс: System.Reflection.SignatureConstructedGenericType
Наследуется от: SignatureType
Поля:
  Type _genericTypeDefinition
  Type[] _genericTypeArguments
Свойства:
  bool IsTypeDefinition
  bool IsGenericTypeDefinition
  bool IsByRefLike
  bool IsSZArray
  bool IsVariableBoundArray
  bool IsConstructedGenericType
  bool IsGenericParameter
  bool IsGenericTypeParameter
  bool IsGenericMethodParameter
  bool ContainsGenericParameters
  SignatureType ElementType
  Type[] GenericTypeArguments
  int GenericParameterPosition
  string Name
  string Namespace
Методы:
  void .ctor(Type genericTypeDefinition, Type[] typeArguments)
  bool get_IsTypeDefinition()
  bool get_IsGenericTypeDefinition()
  bool HasElementTypeImpl()
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool get_IsByRefLike()
  bool IsPointerImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  bool get_IsConstructedGenericType()
  bool get_IsGenericParameter()
  bool get_IsGenericTypeParameter()
  bool get_IsGenericMethodParameter()
  bool get_ContainsGenericParameters()
  SignatureType get_ElementType()
  int GetArrayRank()
  Type GetGenericTypeDefinition()
  Type[] GetGenericArguments()
  Type[] get_GenericTypeArguments()
  int get_GenericParameterPosition()
  string get_Name()
  string get_Namespace()
  string ToString()
--------------------------------------------------
Класс: System.Reflection.SignatureGenericMethodParameterType
Наследуется от: SignatureGenericParameterType
Поля:
Свойства:
  bool IsGenericTypeParameter
  bool IsGenericMethodParameter
  string Name
Методы:
  void .ctor(int position)
  bool get_IsGenericTypeParameter()
  bool get_IsGenericMethodParameter()
  string get_Name()
--------------------------------------------------
Класс: System.Reflection.SignatureGenericParameterType
Наследуется от: SignatureType
Поля:
  int _position
Свойства:
  bool IsTypeDefinition
  bool IsGenericTypeDefinition
  bool IsByRefLike
  bool IsSZArray
  bool IsVariableBoundArray
  bool IsConstructedGenericType
  bool IsGenericParameter
  bool IsGenericMethodParameter
  bool ContainsGenericParameters
  SignatureType ElementType
  Type[] GenericTypeArguments
  int GenericParameterPosition
  string Name
  string Namespace
Методы:
  void .ctor(int position)
  bool get_IsTypeDefinition()
  bool get_IsGenericTypeDefinition()
  bool HasElementTypeImpl()
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool get_IsByRefLike()
  bool IsPointerImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  bool get_IsConstructedGenericType()
  bool get_IsGenericParameter()
  bool get_IsGenericMethodParameter()
  bool get_ContainsGenericParameters()
  SignatureType get_ElementType()
  int GetArrayRank()
  Type GetGenericTypeDefinition()
  Type[] GetGenericArguments()
  Type[] get_GenericTypeArguments()
  int get_GenericParameterPosition()
  string get_Name()
  string get_Namespace()
  string ToString()
--------------------------------------------------
Класс: System.Reflection.SignatureHasElementType
Наследуется от: SignatureType
Поля:
  SignatureType _elementType
Свойства:
  bool IsTypeDefinition
  bool IsGenericTypeDefinition
  bool IsByRefLike
  bool IsSZArray
  bool IsVariableBoundArray
  bool IsConstructedGenericType
  bool IsGenericParameter
  bool IsGenericTypeParameter
  bool IsGenericMethodParameter
  bool ContainsGenericParameters
  SignatureType ElementType
  Type[] GenericTypeArguments
  int GenericParameterPosition
  string Name
  string Namespace
  string Suffix
Методы:
  void .ctor(SignatureType elementType)
  bool get_IsTypeDefinition()
  bool get_IsGenericTypeDefinition()
  bool HasElementTypeImpl()
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool get_IsByRefLike()
  bool IsPointerImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  bool get_IsConstructedGenericType()
  bool get_IsGenericParameter()
  bool get_IsGenericTypeParameter()
  bool get_IsGenericMethodParameter()
  bool get_ContainsGenericParameters()
  SignatureType get_ElementType()
  int GetArrayRank()
  Type GetGenericTypeDefinition()
  Type[] GetGenericArguments()
  Type[] get_GenericTypeArguments()
  int get_GenericParameterPosition()
  string get_Name()
  string get_Namespace()
  string ToString()
  string get_Suffix()
--------------------------------------------------
Класс: System.Reflection.SignaturePointerType
Наследуется от: SignatureHasElementType
Поля:
Свойства:
  bool IsSZArray
  bool IsVariableBoundArray
  string Suffix
Методы:
  void .ctor(SignatureType elementType)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsPointerImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  int GetArrayRank()
  string get_Suffix()
--------------------------------------------------
Класс: System.Reflection.SignatureType
Наследуется от: Type
Поля:
Свойства:
  bool IsSignatureType
  bool IsTypeDefinition
  bool IsSZArray
  bool IsVariableBoundArray
  bool IsByRefLike
  bool IsGenericType
  bool IsGenericTypeDefinition
  bool IsConstructedGenericType
  bool IsGenericParameter
  bool IsGenericTypeParameter
  bool IsGenericMethodParameter
  bool ContainsGenericParameters
  MemberTypes MemberType
  Type[] GenericTypeArguments
  int GenericParameterPosition
  SignatureType ElementType
  Type UnderlyingSystemType
  string Name
  string Namespace
  string FullName
  string AssemblyQualifiedName
  Assembly Assembly
  Module Module
  Type ReflectedType
  Type BaseType
  int MetadataToken
  Type DeclaringType
  MethodBase DeclaringMethod
  GenericParameterAttributes GenericParameterAttributes
  Guid GUID
  IEnumerable`1<CustomAttributeData> CustomAttributes
  bool IsEnum
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  bool IsSecurityTransparent
  bool IsSerializable
  StructLayoutAttribute StructLayoutAttribute
  RuntimeTypeHandle TypeHandle
Методы:
  bool get_IsSignatureType()
  bool get_IsTypeDefinition()
  bool HasElementTypeImpl()
  bool IsArrayImpl()
  bool get_IsSZArray()
  bool get_IsVariableBoundArray()
  bool IsByRefImpl()
  bool get_IsByRefLike()
  bool IsPointerImpl()
  bool get_IsGenericType()
  bool get_IsGenericTypeDefinition()
  bool get_IsConstructedGenericType()
  bool get_IsGenericParameter()
  bool get_IsGenericTypeParameter()
  bool get_IsGenericMethodParameter()
  bool get_ContainsGenericParameters()
  MemberTypes get_MemberType()
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakePointerType()
  Type MakeGenericType(Type[] typeArguments)
  Type GetElementType()
  int GetArrayRank()
  Type GetGenericTypeDefinition()
  Type[] get_GenericTypeArguments()
  Type[] GetGenericArguments()
  int get_GenericParameterPosition()
  SignatureType get_ElementType()
  Type get_UnderlyingSystemType()
  string get_Name()
  string get_Namespace()
  string get_FullName()
  string get_AssemblyQualifiedName()
  string ToString()
  Assembly get_Assembly()
  Module get_Module()
  Type get_ReflectedType()
  Type get_BaseType()
  Type[] GetInterfaces()
  bool IsAssignableFrom(Type c)
  int get_MetadataToken()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  Type get_DeclaringType()
  MethodBase get_DeclaringMethod()
  Type[] GetGenericParameterConstraints()
  GenericParameterAttributes get_GenericParameterAttributes()
  bool IsEnumDefined(object value)
  string GetEnumName(object value)
  String[] GetEnumNames()
  Type GetEnumUnderlyingType()
  Array GetEnumValues()
  Guid get_GUID()
  TypeCode GetTypeCodeImpl()
  TypeAttributes GetAttributeFlagsImpl()
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo GetMethodImpl(string name, int genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  MemberInfo[] FindMembers(MemberTypes memberType, BindingFlags bindingAttr, MemberFilter filter, object filterCriteria)
  MemberInfo[] GetMember(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetDefaultMembers()
  EventInfo[] GetEvents()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesData()
  Type GetInterface(string name, bool ignoreCase)
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  bool IsCOMObjectImpl()
  bool IsPrimitiveImpl()
  IEnumerable`1<CustomAttributeData> get_CustomAttributes()
  Type[] FindInterfaces(TypeFilter filter, object filterCriteria)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  bool IsContextfulImpl()
  bool get_IsEnum()
  bool IsEquivalentTo(Type other)
  bool IsInstanceOfType(object o)
  bool IsMarshalByRefImpl()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  bool get_IsSecurityTransparent()
  bool get_IsSerializable()
  bool IsSubclassOf(Type c)
  bool IsValueTypeImpl()
  StructLayoutAttribute get_StructLayoutAttribute()
  RuntimeTypeHandle get_TypeHandle()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.SignatureTypeExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool MatchesParameterTypeExactly(Type pattern, ParameterInfo parameter)
  bool MatchesExactly(SignatureType pattern, Type actual)
  Type TryResolveAgainstGenericMethod(SignatureType signatureType, MethodInfo genericMethod)
  Type TryResolve(SignatureType signatureType, Type[] genericMethodParameters)
  Type TryMakeArrayType(Type type)
  Type TryMakeArrayType(Type type, int rank)
  Type TryMakeByRefType(Type type)
  Type TryMakePointerType(Type type)
  Type TryMakeGenericType(Type type, Type[] instantiation)
--------------------------------------------------
Класс: System.Reflection.TargetException
Наследуется от: ApplicationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.TargetInvocationException
Наследуется от: ApplicationException
Поля:
Свойства:
Методы:
  void .ctor(Exception inner)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.TargetParameterCountException
Наследуется от: ApplicationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.TypeAttributes
Наследуется от: Enum
Поля:
  int value__
  TypeAttributes VisibilityMask
  TypeAttributes NotPublic
  TypeAttributes Public
  TypeAttributes NestedPublic
  TypeAttributes NestedPrivate
  TypeAttributes NestedFamily
  TypeAttributes NestedAssembly
  TypeAttributes NestedFamANDAssem
  TypeAttributes NestedFamORAssem
  TypeAttributes LayoutMask
  TypeAttributes AutoLayout
  TypeAttributes SequentialLayout
  TypeAttributes ExplicitLayout
  TypeAttributes ClassSemanticsMask
  TypeAttributes Class
  TypeAttributes Interface
  TypeAttributes Abstract
  TypeAttributes Sealed
  TypeAttributes SpecialName
  TypeAttributes Import
  TypeAttributes Serializable
  TypeAttributes WindowsRuntime
  TypeAttributes StringFormatMask
  TypeAttributes AnsiClass
  TypeAttributes UnicodeClass
  TypeAttributes AutoClass
  TypeAttributes CustomFormatClass
  TypeAttributes CustomFormatMask
  TypeAttributes BeforeFieldInit
  TypeAttributes RTSpecialName
  TypeAttributes HasSecurity
  TypeAttributes ReservedMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.TypeDelegator
Наследуется от: TypeInfo
Поля:
  Type typeImpl
Свойства:
  Guid GUID
  int MetadataToken
  Module Module
  Assembly Assembly
  RuntimeTypeHandle TypeHandle
  string Name
  string FullName
  string Namespace
  string AssemblyQualifiedName
  Type BaseType
  bool IsTypeDefinition
  bool IsSZArray
  bool IsGenericTypeParameter
  bool IsGenericMethodParameter
  bool IsByRefLike
  bool IsConstructedGenericType
  bool IsCollectible
  Type UnderlyingSystemType
Методы:
  bool IsAssignableFrom(TypeInfo typeInfo)
  void .ctor()
  void .ctor(Type delegatingType)
  Guid get_GUID()
  int get_MetadataToken()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Module get_Module()
  Assembly get_Assembly()
  RuntimeTypeHandle get_TypeHandle()
  string get_Name()
  string get_FullName()
  string get_Namespace()
  string get_AssemblyQualifiedName()
  Type get_BaseType()
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  Type GetInterface(string name, bool ignoreCase)
  Type[] GetInterfaces()
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  TypeAttributes GetAttributeFlagsImpl()
  bool get_IsTypeDefinition()
  bool get_IsSZArray()
  bool IsArrayImpl()
  bool IsPrimitiveImpl()
  bool IsByRefImpl()
  bool get_IsGenericTypeParameter()
  bool get_IsGenericMethodParameter()
  bool IsPointerImpl()
  bool IsValueTypeImpl()
  bool IsCOMObjectImpl()
  bool get_IsByRefLike()
  bool get_IsConstructedGenericType()
  bool get_IsCollectible()
  Type GetElementType()
  bool HasElementTypeImpl()
  Type get_UnderlyingSystemType()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
--------------------------------------------------
Класс: System.Reflection.TypeFilter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(Type m, object filterCriteria)
  IAsyncResult BeginInvoke(Type m, object filterCriteria, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Reflection.TypeInfo
Наследуется от: Type
Поля:
  BindingFlags DeclaredOnlyLookup
Свойства:
  Type[] GenericTypeParameters
  IEnumerable`1<ConstructorInfo> DeclaredConstructors
  IEnumerable`1<EventInfo> DeclaredEvents
  IEnumerable`1<FieldInfo> DeclaredFields
  IEnumerable`1<MemberInfo> DeclaredMembers
  IEnumerable`1<MethodInfo> DeclaredMethods
  IEnumerable`1<TypeInfo> DeclaredNestedTypes
  IEnumerable`1<PropertyInfo> DeclaredProperties
  IEnumerable`1<Type> ImplementedInterfaces
Методы:
  void .ctor()
  TypeInfo System.Reflection.IReflectableType.GetTypeInfo()
  Type AsType()
  Type[] get_GenericTypeParameters()
  EventInfo GetDeclaredEvent(string name)
  FieldInfo GetDeclaredField(string name)
  MethodInfo GetDeclaredMethod(string name)
  TypeInfo GetDeclaredNestedType(string name)
  PropertyInfo GetDeclaredProperty(string name)
  IEnumerable`1<MethodInfo> GetDeclaredMethods(string name)
  IEnumerable`1<ConstructorInfo> get_DeclaredConstructors()
  IEnumerable`1<EventInfo> get_DeclaredEvents()
  IEnumerable`1<FieldInfo> get_DeclaredFields()
  IEnumerable`1<MemberInfo> get_DeclaredMembers()
  IEnumerable`1<MethodInfo> get_DeclaredMethods()
  IEnumerable`1<TypeInfo> get_DeclaredNestedTypes()
  IEnumerable`1<PropertyInfo> get_DeclaredProperties()
  IEnumerable`1<Type> get_ImplementedInterfaces()
  bool IsAssignableFrom(TypeInfo typeInfo)
--------------------------------------------------
Класс: System.Reflection.Requires
Наследуется от: object
Поля:
Свойства:
Методы:
  void NotNull(object obj, string name)
--------------------------------------------------
Класс: System.Reflection.TypeExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ConstructorInfo GetConstructor(Type type, Type[] types)
  ConstructorInfo[] GetConstructors(Type type)
  ConstructorInfo[] GetConstructors(Type type, BindingFlags bindingAttr)
  MemberInfo[] GetDefaultMembers(Type type)
  EventInfo GetEvent(Type type, string name)
  EventInfo GetEvent(Type type, string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents(Type type)
  EventInfo[] GetEvents(Type type, BindingFlags bindingAttr)
  FieldInfo GetField(Type type, string name)
  FieldInfo GetField(Type type, string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(Type type)
  FieldInfo[] GetFields(Type type, BindingFlags bindingAttr)
  Type[] GetGenericArguments(Type type)
  Type[] GetInterfaces(Type type)
  MemberInfo[] GetMember(Type type, string name)
  MemberInfo[] GetMember(Type type, string name, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(Type type)
  MemberInfo[] GetMembers(Type type, BindingFlags bindingAttr)
  MethodInfo GetMethod(Type type, string name)
  MethodInfo GetMethod(Type type, string name, BindingFlags bindingAttr)
  MethodInfo GetMethod(Type type, string name, Type[] types)
  MethodInfo[] GetMethods(Type type)
  MethodInfo[] GetMethods(Type type, BindingFlags bindingAttr)
  Type GetNestedType(Type type, string name, BindingFlags bindingAttr)
  Type[] GetNestedTypes(Type type, BindingFlags bindingAttr)
  PropertyInfo[] GetProperties(Type type)
  PropertyInfo[] GetProperties(Type type, BindingFlags bindingAttr)
  PropertyInfo GetProperty(Type type, string name)
  PropertyInfo GetProperty(Type type, string name, BindingFlags bindingAttr)
  PropertyInfo GetProperty(Type type, string name, Type returnType)
  PropertyInfo GetProperty(Type type, string name, Type returnType, Type[] types)
  bool IsAssignableFrom(Type type, Type c)
  bool IsInstanceOfType(Type type, object o)
--------------------------------------------------
Класс: System.Reflection.AssemblyExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  Type[] GetExportedTypes(Assembly assembly)
  Module[] GetModules(Assembly assembly)
  Type[] GetTypes(Assembly assembly)
--------------------------------------------------
Класс: System.Reflection.EventInfoExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  MethodInfo GetAddMethod(EventInfo eventInfo)
  MethodInfo GetAddMethod(EventInfo eventInfo, bool nonPublic)
  MethodInfo GetRaiseMethod(EventInfo eventInfo)
  MethodInfo GetRaiseMethod(EventInfo eventInfo, bool nonPublic)
  MethodInfo GetRemoveMethod(EventInfo eventInfo)
  MethodInfo GetRemoveMethod(EventInfo eventInfo, bool nonPublic)
--------------------------------------------------
Класс: System.Reflection.MemberInfoExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool HasMetadataToken(MemberInfo member)
  int GetMetadataToken(MemberInfo member)
  int GetMetadataTokenOrZeroOrThrow(MemberInfo member)
--------------------------------------------------
Класс: System.Reflection.MethodInfoExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  MethodInfo GetBaseDefinition(MethodInfo method)
--------------------------------------------------
Класс: System.Reflection.ModuleExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool HasModuleVersionId(Module module)
  Guid GetModuleVersionId(Module module)
--------------------------------------------------
Класс: System.Reflection.PropertyInfoExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  MethodInfo[] GetAccessors(PropertyInfo property)
  MethodInfo[] GetAccessors(PropertyInfo property, bool nonPublic)
  MethodInfo GetGetMethod(PropertyInfo property)
  MethodInfo GetGetMethod(PropertyInfo property, bool nonPublic)
  MethodInfo GetSetMethod(PropertyInfo property)
  MethodInfo GetSetMethod(PropertyInfo property, bool nonPublic)
--------------------------------------------------
Класс: System.Reflection.AssemblyNameProxy
Наследуется от: MarshalByRefObject
Поля:
Свойства:
Методы:
  AssemblyName GetAssemblyName(string assemblyFile)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.RuntimeReflectionExtensions
Наследуется от: object
Поля:
  BindingFlags Everything
Свойства:
Методы:
  IEnumerable`1<FieldInfo> GetRuntimeFields(Type type)
  IEnumerable`1<MethodInfo> GetRuntimeMethods(Type type)
  IEnumerable`1<PropertyInfo> GetRuntimeProperties(Type type)
  IEnumerable`1<EventInfo> GetRuntimeEvents(Type type)
  FieldInfo GetRuntimeField(Type type, string name)
  MethodInfo GetRuntimeMethod(Type type, string name, Type[] parameters)
  PropertyInfo GetRuntimeProperty(Type type, string name)
  EventInfo GetRuntimeEvent(Type type, string name)
  MethodInfo GetRuntimeBaseDefinition(MethodInfo method)
  InterfaceMapping GetRuntimeInterfaceMap(TypeInfo typeInfo, Type interfaceType)
  MethodInfo GetMethodInfo(Delegate del)
--------------------------------------------------
Класс: System.Reflection.CustomAttributeNamedArgument
Наследуется от: ValueType
Поля:
  CustomAttributeTypedArgument <TypedValue>k__BackingField
  bool <IsField>k__BackingField
  string <MemberName>k__BackingField
  Type _attributeType
  MemberInfo modreq(System.Runtime.CompilerServices.IsVolatile) _lazyMemberInfo
Свойства:
  CustomAttributeTypedArgument TypedValue
  bool IsField
  string MemberName
  MemberInfo MemberInfo
Методы:
  void .ctor(Type attributeType, string memberName, bool isField, CustomAttributeTypedArgument typedValue)
  void .ctor(MemberInfo memberInfo, object value)
  void .ctor(MemberInfo memberInfo, CustomAttributeTypedArgument typedArgument)
  CustomAttributeTypedArgument get_TypedValue()
  bool get_IsField()
  string get_MemberName()
  MemberInfo get_MemberInfo()
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CustomAttributeNamedArgument left, CustomAttributeNamedArgument right)
  bool op_Inequality(CustomAttributeNamedArgument left, CustomAttributeNamedArgument right)
  string ToString()
--------------------------------------------------
Класс: System.Reflection.CustomAttributeTypedArgument
Наследуется от: ValueType
Поля:
  Type <ArgumentType>k__BackingField
  object <Value>k__BackingField
Свойства:
  Type ArgumentType
  object Value
Методы:
  void .ctor(object value)
  void .ctor(Type argumentType, object value)
  Type get_ArgumentType()
  object get_Value()
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CustomAttributeTypedArgument left, CustomAttributeTypedArgument right)
  bool op_Inequality(CustomAttributeTypedArgument left, CustomAttributeTypedArgument right)
  string ToString()
  string ToString(bool typed)
  object CanonicalizeValue(object value)
--------------------------------------------------
Класс: System.Reflection.MissingMetadataException
Наследуется от: TypeAccessException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
--------------------------------------------------
Класс: System.Reflection.CustomAttributeExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  Attribute GetCustomAttribute(Assembly element, Type attributeType)
  Attribute GetCustomAttribute(Module element, Type attributeType)
  Attribute GetCustomAttribute(MemberInfo element, Type attributeType)
  Attribute GetCustomAttribute(ParameterInfo element, Type attributeType)
  T GetCustomAttribute(Assembly element)
  T GetCustomAttribute(Module element)
  T GetCustomAttribute(MemberInfo element)
  T GetCustomAttribute(ParameterInfo element)
  Attribute GetCustomAttribute(MemberInfo element, Type attributeType, bool inherit)
  Attribute GetCustomAttribute(ParameterInfo element, Type attributeType, bool inherit)
  T GetCustomAttribute(MemberInfo element, bool inherit)
  T GetCustomAttribute(ParameterInfo element, bool inherit)
  IEnumerable`1<Attribute> GetCustomAttributes(Assembly element)
  IEnumerable`1<Attribute> GetCustomAttributes(Module element)
  IEnumerable`1<Attribute> GetCustomAttributes(MemberInfo element)
  IEnumerable`1<Attribute> GetCustomAttributes(ParameterInfo element)
  IEnumerable`1<Attribute> GetCustomAttributes(MemberInfo element, bool inherit)
  IEnumerable`1<Attribute> GetCustomAttributes(ParameterInfo element, bool inherit)
  IEnumerable`1<Attribute> GetCustomAttributes(Assembly element, Type attributeType)
  IEnumerable`1<Attribute> GetCustomAttributes(Module element, Type attributeType)
  IEnumerable`1<Attribute> GetCustomAttributes(MemberInfo element, Type attributeType)
  IEnumerable`1<Attribute> GetCustomAttributes(ParameterInfo element, Type attributeType)
  IEnumerable`1<T> GetCustomAttributes(Assembly element)
  IEnumerable`1<T> GetCustomAttributes(Module element)
  IEnumerable`1<T> GetCustomAttributes(MemberInfo element)
  IEnumerable`1<T> GetCustomAttributes(ParameterInfo element)
  IEnumerable`1<Attribute> GetCustomAttributes(MemberInfo element, Type attributeType, bool inherit)
  IEnumerable`1<Attribute> GetCustomAttributes(ParameterInfo element, Type attributeType, bool inherit)
  IEnumerable`1<T> GetCustomAttributes(MemberInfo element, bool inherit)
  IEnumerable`1<T> GetCustomAttributes(ParameterInfo element, bool inherit)
  bool IsDefined(Assembly element, Type attributeType)
  bool IsDefined(Module element, Type attributeType)
  bool IsDefined(MemberInfo element, Type attributeType)
  bool IsDefined(ParameterInfo element, Type attributeType)
  bool IsDefined(MemberInfo element, Type attributeType, bool inherit)
  bool IsDefined(ParameterInfo element, Type attributeType, bool inherit)
--------------------------------------------------
Класс: System.Reflection.CorElementType
Наследуется от: Enum
Поля:
  byte value__
  CorElementType End
  CorElementType Void
  CorElementType Boolean
  CorElementType Char
  CorElementType I1
  CorElementType U1
  CorElementType I2
  CorElementType U2
  CorElementType I4
  CorElementType U4
  CorElementType I8
  CorElementType U8
  CorElementType R4
  CorElementType R8
  CorElementType String
  CorElementType Ptr
  CorElementType ByRef
  CorElementType ValueType
  CorElementType Class
  CorElementType Var
  CorElementType Array
  CorElementType GenericInst
  CorElementType TypedByRef
  CorElementType I
  CorElementType U
  CorElementType FnPtr
  CorElementType Object
  CorElementType SzArray
  CorElementType MVar
  CorElementType CModReqd
  CorElementType CModOpt
  CorElementType Internal
  CorElementType Max
  CorElementType Modifier
  CorElementType Sentinel
  CorElementType Pinned
  CorElementType ELEMENT_TYPE_END
  CorElementType ELEMENT_TYPE_VOID
  CorElementType ELEMENT_TYPE_BOOLEAN
  CorElementType ELEMENT_TYPE_CHAR
  CorElementType ELEMENT_TYPE_I1
  CorElementType ELEMENT_TYPE_U1
  CorElementType ELEMENT_TYPE_I2
  CorElementType ELEMENT_TYPE_U2
  CorElementType ELEMENT_TYPE_I4
  CorElementType ELEMENT_TYPE_U4
  CorElementType ELEMENT_TYPE_I8
  CorElementType ELEMENT_TYPE_U8
  CorElementType ELEMENT_TYPE_R4
  CorElementType ELEMENT_TYPE_R8
  CorElementType ELEMENT_TYPE_STRING
  CorElementType ELEMENT_TYPE_PTR
  CorElementType ELEMENT_TYPE_BYREF
  CorElementType ELEMENT_TYPE_VALUETYPE
  CorElementType ELEMENT_TYPE_CLASS
  CorElementType ELEMENT_TYPE_VAR
  CorElementType ELEMENT_TYPE_ARRAY
  CorElementType ELEMENT_TYPE_GENERICINST
  CorElementType ELEMENT_TYPE_TYPEDBYREF
  CorElementType ELEMENT_TYPE_I
  CorElementType ELEMENT_TYPE_U
  CorElementType ELEMENT_TYPE_FNPTR
  CorElementType ELEMENT_TYPE_OBJECT
  CorElementType ELEMENT_TYPE_SZARRAY
  CorElementType ELEMENT_TYPE_MVAR
  CorElementType ELEMENT_TYPE_CMOD_REQD
  CorElementType ELEMENT_TYPE_CMOD_OPT
  CorElementType ELEMENT_TYPE_INTERNAL
  CorElementType ELEMENT_TYPE_MAX
  CorElementType ELEMENT_TYPE_MODIFIER
  CorElementType ELEMENT_TYPE_SENTINEL
  CorElementType ELEMENT_TYPE_PINNED
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MdSigCallingConvention
Наследуется от: Enum
Поля:
  byte value__
  MdSigCallingConvention CallConvMask
  MdSigCallingConvention Default
  MdSigCallingConvention C
  MdSigCallingConvention StdCall
  MdSigCallingConvention ThisCall
  MdSigCallingConvention FastCall
  MdSigCallingConvention Vararg
  MdSigCallingConvention Field
  MdSigCallingConvention LocalSig
  MdSigCallingConvention Property
  MdSigCallingConvention Unmgd
  MdSigCallingConvention GenericInst
  MdSigCallingConvention Generic
  MdSigCallingConvention HasThis
  MdSigCallingConvention ExplicitThis
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.PInvokeAttributes
Наследуется от: Enum
Поля:
  int value__
  PInvokeAttributes NoMangle
  PInvokeAttributes CharSetMask
  PInvokeAttributes CharSetNotSpec
  PInvokeAttributes CharSetAnsi
  PInvokeAttributes CharSetUnicode
  PInvokeAttributes CharSetAuto
  PInvokeAttributes BestFitUseAssem
  PInvokeAttributes BestFitEnabled
  PInvokeAttributes BestFitDisabled
  PInvokeAttributes BestFitMask
  PInvokeAttributes ThrowOnUnmappableCharUseAssem
  PInvokeAttributes ThrowOnUnmappableCharEnabled
  PInvokeAttributes ThrowOnUnmappableCharDisabled
  PInvokeAttributes ThrowOnUnmappableCharMask
  PInvokeAttributes SupportsLastError
  PInvokeAttributes CallConvMask
  PInvokeAttributes CallConvWinapi
  PInvokeAttributes CallConvCdecl
  PInvokeAttributes CallConvStdcall
  PInvokeAttributes CallConvThiscall
  PInvokeAttributes CallConvFastcall
  PInvokeAttributes MaxValue
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MethodSemanticsAttributes
Наследуется от: Enum
Поля:
  int value__
  MethodSemanticsAttributes Setter
  MethodSemanticsAttributes Getter
  MethodSemanticsAttributes Other
  MethodSemanticsAttributes AddOn
  MethodSemanticsAttributes RemoveOn
  MethodSemanticsAttributes Fire
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MetadataTokenType
Наследуется от: Enum
Поля:
  int value__
  MetadataTokenType Module
  MetadataTokenType TypeRef
  MetadataTokenType TypeDef
  MetadataTokenType FieldDef
  MetadataTokenType MethodDef
  MetadataTokenType ParamDef
  MetadataTokenType InterfaceImpl
  MetadataTokenType MemberRef
  MetadataTokenType CustomAttribute
  MetadataTokenType Permission
  MetadataTokenType Signature
  MetadataTokenType Event
  MetadataTokenType Property
  MetadataTokenType ModuleRef
  MetadataTokenType TypeSpec
  MetadataTokenType Assembly
  MetadataTokenType AssemblyRef
  MetadataTokenType File
  MetadataTokenType ExportedType
  MetadataTokenType ManifestResource
  MetadataTokenType GenericPar
  MetadataTokenType MethodSpec
  MetadataTokenType String
  MetadataTokenType Name
  MetadataTokenType BaseType
  MetadataTokenType Invalid
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.MemberInfoSerializationHolder
Наследуется от: object
Поля:
  string m_memberName
  RuntimeType m_reflectedType
  string m_signature
  string m_signature2
  MemberTypes m_memberType
  SerializationInfo m_info
Свойства:
Методы:
  void GetSerializationInfo(SerializationInfo info, string name, RuntimeType reflectedClass, string signature, MemberTypes type)
  void GetSerializationInfo(SerializationInfo info, string name, RuntimeType reflectedClass, string signature, string signature2, MemberTypes type, Type[] genericArguments)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object GetRealObject(StreamingContext context)
--------------------------------------------------
Класс: System.Reflection.MonoArrayMethod
Наследуется от: MethodInfo
Поля:
  RuntimeMethodHandle mhandle
  Type parent
  Type ret
  Type[] parameters
  string name
  int table_idx
  CallingConventions call_conv
Свойства:
  Type ReturnType
  ICustomAttributeProvider ReturnTypeCustomAttributes
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  Type ReflectedType
  Type DeclaringType
  string Name
Методы:
  void .ctor(Type arrayClass, string methodName, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
  MethodInfo GetBaseDefinition()
  Type get_ReturnType()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  Type get_ReflectedType()
  Type get_DeclaringType()
  string get_Name()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  string ToString()
--------------------------------------------------
Класс: System.Reflection.Assembly
Наследуется от: object
Поля:
Свойства:
  string CodeBase
  string EscapedCodeBase
  string FullName
  MethodInfo EntryPoint
  Evidence Evidence
  IntPtr MonoAssembly
  bool FromByteArray
  string Location
  string ImageRuntimeVersion
  long HostContext
  bool ReflectionOnly
  PermissionSet GrantedPermissionSet
  PermissionSet DeniedPermissionSet
  PermissionSet PermissionSet
  SecurityRuleSet SecurityRuleSet
  bool IsFullyTrusted
  Module ManifestModule
  bool GlobalAssemblyCache
  bool IsDynamic
  IEnumerable`1<TypeInfo> DefinedTypes
  IEnumerable`1<Type> ExportedTypes
  IEnumerable`1<Module> Modules
  IEnumerable`1<CustomAttributeData> CustomAttributes
Методы:
  void add_ModuleResolve(ModuleResolveEventHandler value)
  void remove_ModuleResolve(ModuleResolveEventHandler value)
  string get_CodeBase()
  string get_EscapedCodeBase()
  string get_FullName()
  MethodInfo get_EntryPoint()
  Evidence get_Evidence()
  Evidence UnprotectedGetEvidence()
  IntPtr get_MonoAssembly()
  void set_FromByteArray(bool value)
  string get_Location()
  string get_ImageRuntimeVersion()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  FileStream[] GetFiles()
  FileStream[] GetFiles(bool getResourceModules)
  FileStream GetFile(string name)
  Stream GetManifestResourceStream(string name)
  Stream GetManifestResourceStream(Type type, string name)
  Stream GetManifestResourceStream(Type type, string name, bool skipSecurityCheck, StackCrawlMark& stackMark)
  Stream GetManifestResourceStream(string name, StackCrawlMark& stackMark, bool skipSecurityCheck)
  string GetSimpleName()
  Byte[] GetPublicKey()
  Version GetVersion()
  AssemblyNameFlags GetFlags()
  Type[] GetTypes(bool exportedOnly)
  Type[] GetTypes()
  Type[] GetExportedTypes()
  Type GetType(string name, bool throwOnError)
  Type GetType(string name)
  Type InternalGetType(Module module, string name, bool throwOnError, bool ignoreCase)
  void InternalGetAssemblyName(string assemblyFile, MonoAssemblyName& aname, String& codebase)
  AssemblyName GetName(bool copiedName)
  AssemblyName GetName()
  string ToString()
  string CreateQualifiedName(string assemblyName, string typeName)
  Assembly GetAssembly(Type type)
  Assembly GetEntryAssembly()
  Assembly GetSatelliteAssembly(CultureInfo culture, Version version, bool throwOnError, StackCrawlMark& stackMark)
  RuntimeAssembly InternalGetSatelliteAssembly(string name, CultureInfo culture, Version version, bool throwOnFileNotFound, StackCrawlMark& stackMark)
  Type System.Runtime.InteropServices._Assembly.GetType()
  Assembly LoadFrom(string assemblyFile, bool refOnly, StackCrawlMark& stackMark)
  Assembly LoadFile_internal(string assemblyFile, StackCrawlMark& stackMark)
  Assembly LoadFrom(string assemblyFile)
  Assembly LoadFrom(string assemblyFile, Evidence securityEvidence)
  Assembly LoadFrom(string assemblyFile, Evidence securityEvidence, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
  Assembly LoadFrom(string assemblyFile, Byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
  Assembly UnsafeLoadFrom(string assemblyFile)
  Assembly LoadFile(string path, Evidence securityEvidence)
  Assembly LoadFile(string path)
  Assembly Load(string assemblyString)
  Assembly Load(string assemblyString, Evidence assemblySecurity)
  Assembly Load(AssemblyName assemblyRef)
  Assembly Load(AssemblyName assemblyRef, Evidence assemblySecurity)
  Assembly Load(Byte[] rawAssembly)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore, Evidence securityEvidence)
  Assembly Load(Byte[] rawAssembly, Byte[] rawSymbolStore, SecurityContextSource securityContextSource)
  Assembly ReflectionOnlyLoad(Byte[] rawAssembly)
  Assembly ReflectionOnlyLoad(string assemblyString)
  Assembly ReflectionOnlyLoadFrom(string assemblyFile)
  Assembly LoadWithPartialName(string partialName)
  Module LoadModule(string moduleName, Byte[] rawModule)
  Module LoadModule(string moduleName, Byte[] rawModule, Byte[] rawSymbolStore)
  Assembly load_with_partial_name(string name, Evidence e)
  Assembly LoadWithPartialName(string partialName, Evidence securityEvidence)
  Assembly LoadWithPartialName(string partialName, Evidence securityEvidence, bool oldBehavior)
  object CreateInstance(string typeName)
  object CreateInstance(string typeName, bool ignoreCase)
  object CreateInstance(string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes)
  Module[] GetLoadedModules()
  Module[] GetModules()
  Module[] GetModulesInternal()
  Assembly GetExecutingAssembly()
  Assembly GetCallingAssembly()
  IntPtr InternalGetReferencedAssemblies(Assembly module)
  String[] GetManifestResourceNames()
  AssemblyName[] GetReferencedAssemblies(Assembly module)
  ManifestResourceInfo GetManifestResourceInfo(string resourceName)
  long get_HostContext()
  Module GetManifestModule()
  bool get_ReflectionOnly()
  int GetHashCode()
  bool Equals(object o)
  PermissionSet get_GrantedPermissionSet()
  PermissionSet get_DeniedPermissionSet()
  PermissionSet get_PermissionSet()
  SecurityRuleSet get_SecurityRuleSet()
  Exception CreateNIE()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  bool get_IsFullyTrusted()
  Type GetType(string name, bool throwOnError, bool ignoreCase)
  Module GetModule(string name)
  AssemblyName[] GetReferencedAssemblies()
  Module[] GetModules(bool getResourceModules)
  Module[] GetLoadedModules(bool getResourceModules)
  Assembly GetSatelliteAssembly(CultureInfo culture)
  Assembly GetSatelliteAssembly(CultureInfo culture, Version version)
  Module get_ManifestModule()
  bool get_GlobalAssemblyCache()
  bool get_IsDynamic()
  bool op_Equality(Assembly left, Assembly right)
  bool op_Inequality(Assembly left, Assembly right)
  IEnumerable`1<TypeInfo> get_DefinedTypes()
  IEnumerable`1<Type> get_ExportedTypes()
  IEnumerable`1<Module> get_Modules()
  IEnumerable`1<CustomAttributeData> get_CustomAttributes()
  Type[] GetForwardedTypes()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.AssemblyName
Наследуется от: object
Поля:
  string name
  string codebase
  int major
  int minor
  int build
  int revision
  CultureInfo cultureinfo
  AssemblyNameFlags flags
  AssemblyHashAlgorithm hashalg
  StrongNameKeyPair keypair
  Byte[] publicKey
  Byte[] keyToken
  AssemblyVersionCompatibility versioncompat
  Version version
  ProcessorArchitecture processor_architecture
  AssemblyContentType contentType
Свойства:
  ProcessorArchitecture ProcessorArchitecture
  string Name
  string CodeBase
  string EscapedCodeBase
  CultureInfo CultureInfo
  AssemblyNameFlags Flags
  string FullName
  AssemblyHashAlgorithm HashAlgorithm
  StrongNameKeyPair KeyPair
  Version Version
  AssemblyVersionCompatibility VersionCompatibility
  bool IsPublicKeyValid
  string CultureName
  AssemblyContentType ContentType
Методы:
  void .ctor()
  bool ParseAssemblyName(IntPtr name, MonoAssemblyName& aname, Boolean& is_version_definited, Boolean& is_token_defined)
  void .ctor(string assemblyName)
  ProcessorArchitecture get_ProcessorArchitecture()
  void set_ProcessorArchitecture(ProcessorArchitecture value)
  void .ctor(SerializationInfo si, StreamingContext sc)
  string get_Name()
  void set_Name(string value)
  string get_CodeBase()
  void set_CodeBase(string value)
  string get_EscapedCodeBase()
  CultureInfo get_CultureInfo()
  void set_CultureInfo(CultureInfo value)
  AssemblyNameFlags get_Flags()
  void set_Flags(AssemblyNameFlags value)
  string get_FullName()
  AssemblyHashAlgorithm get_HashAlgorithm()
  void set_HashAlgorithm(AssemblyHashAlgorithm value)
  StrongNameKeyPair get_KeyPair()
  void set_KeyPair(StrongNameKeyPair value)
  Version get_Version()
  void set_Version(Version value)
  AssemblyVersionCompatibility get_VersionCompatibility()
  void set_VersionCompatibility(AssemblyVersionCompatibility value)
  string ToString()
  Byte[] GetPublicKey()
  Byte[] GetPublicKeyToken()
  bool get_IsPublicKeyValid()
  Byte[] InternalGetPublicKeyToken()
  void get_public_token(Byte* token, Byte* pubkey, int len)
  Byte[] ComputePublicKeyToken()
  bool ReferenceMatchesDefinition(AssemblyName reference, AssemblyName definition)
  void SetPublicKey(Byte[] publicKey)
  void SetPublicKeyToken(Byte[] publicKeyToken)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object Clone()
  void OnDeserialization(object sender)
  AssemblyName GetAssemblyName(string assemblyFile)
  void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._AssemblyName.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  string get_CultureName()
  void set_CultureName(string value)
  AssemblyContentType get_ContentType()
  void set_ContentType(AssemblyContentType value)
  MonoAssemblyName* GetNativeName(IntPtr assembly_ptr)
  void FillName(MonoAssemblyName* native, string codeBase, bool addVersion, bool addPublickey, bool defaultToken, bool assemblyRef)
  AssemblyName Create(Assembly assembly, bool fillCodebase)
--------------------------------------------------
Класс: System.Reflection.CustomAttributeData
Наследуется от: object
Поля:
  ConstructorInfo ctorInfo
  IList`1<CustomAttributeTypedArgument> ctorArgs
  IList`1<CustomAttributeNamedArgument> namedArgs
  LazyCAttrData lazyData
Свойства:
  ConstructorInfo Constructor
  IList`1<CustomAttributeTypedArgument> ConstructorArguments
  IList`1<CustomAttributeNamedArgument> NamedArguments
  Type AttributeType
Методы:
  void .ctor()
  void .ctor(ConstructorInfo ctorInfo, Assembly assembly, IntPtr data, UInt32 data_length)
  void .ctor(ConstructorInfo ctorInfo)
  void .ctor(ConstructorInfo ctorInfo, IList`1<CustomAttributeTypedArgument> ctorArgs, IList`1<CustomAttributeNamedArgument> namedArgs)
  void ResolveArgumentsInternal(ConstructorInfo ctor, Assembly assembly, IntPtr data, UInt32 data_length, Object[]& ctorArgs, Object[]& namedArgs)
  void ResolveArguments()
  ConstructorInfo get_Constructor()
  IList`1<CustomAttributeTypedArgument> get_ConstructorArguments()
  IList`1<CustomAttributeNamedArgument> get_NamedArguments()
  IList`1<CustomAttributeData> GetCustomAttributes(Assembly target)
  IList`1<CustomAttributeData> GetCustomAttributes(MemberInfo target)
  IList`1<CustomAttributeData> GetCustomAttributesInternal(RuntimeType target)
  IList`1<CustomAttributeData> GetCustomAttributes(Module target)
  IList`1<CustomAttributeData> GetCustomAttributes(ParameterInfo target)
  Type get_AttributeType()
  string ToString()
  T[] UnboxValues(Object[] values)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Reflection.ExceptionHandlingClause
Наследуется от: object
Поля:
  Type catch_type
  int filter_offset
  ExceptionHandlingClauseOptions flags
  int try_offset
  int try_length
  int handler_offset
  int handler_length
Свойства:
  Type CatchType
  int FilterOffset
  ExceptionHandlingClauseOptions Flags
  int HandlerLength
  int HandlerOffset
  int TryLength
  int TryOffset
Методы:
  void .ctor()
  Type get_CatchType()
  int get_FilterOffset()
  ExceptionHandlingClauseOptions get_Flags()
  int get_HandlerLength()
  int get_HandlerOffset()
  int get_TryLength()
  int get_TryOffset()
  string ToString()
--------------------------------------------------
Класс: System.Reflection.LocalVariableInfo
Наследуется от: object
Поля:
  Type type
  bool is_pinned
  ushort position
Свойства:
  bool IsPinned
  int LocalIndex
  Type LocalType
Методы:
  void .ctor()
  bool get_IsPinned()
  int get_LocalIndex()
  Type get_LocalType()
  string ToString()
--------------------------------------------------
Класс: System.Reflection.MethodBody
Наследуется от: object
Поля:
  ExceptionHandlingClause[] clauses
  LocalVariableInfo[] locals
  Byte[] il
  bool init_locals
  int sig_token
  int max_stack
Свойства:
  IList`1<ExceptionHandlingClause> ExceptionHandlingClauses
  IList`1<LocalVariableInfo> LocalVariables
  bool InitLocals
  int LocalSignatureMetadataToken
  int MaxStackSize
Методы:
  void .ctor()
  void .ctor(ExceptionHandlingClause[] clauses, LocalVariableInfo[] locals, Byte[] il, bool init_locals, int sig_token, int max_stack)
  IList`1<ExceptionHandlingClause> get_ExceptionHandlingClauses()
  IList`1<LocalVariableInfo> get_LocalVariables()
  bool get_InitLocals()
  int get_LocalSignatureMetadataToken()
  int get_MaxStackSize()
  Byte[] GetILAsByteArray()
--------------------------------------------------
Класс: System.Reflection.RuntimeAssembly
Наследуется от: Assembly
Поля:
  IntPtr _mono_assembly
  Evidence _evidence
  ResolveEventHolder resolve_event_holder
  PermissionSet _minimum
  PermissionSet _optional
  PermissionSet _refuse
  PermissionSet _granted
  PermissionSet _denied
  bool fromByteArray
  string assemblyName
Свойства:
  Module ManifestModule
  bool GlobalAssemblyCache
  MethodInfo EntryPoint
  bool ReflectionOnly
  string CodeBase
  string EscapedCodeBase
  string FullName
  string ImageRuntimeVersion
  IntPtr MonoAssembly
  bool FromByteArray
  string Location
  Evidence Evidence
  PermissionSet GrantedPermissionSet
  PermissionSet DeniedPermissionSet
  PermissionSet PermissionSet
Методы:
  void .ctor()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  RuntimeAssembly GetExecutingAssembly(StackCrawlMark& stackMark)
  AssemblyName CreateAssemblyName(string assemblyString, bool forIntrospection, RuntimeAssembly& assemblyFromResolveEvent)
  RuntimeAssembly InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark& stackMark, bool throwOnFileNotFound, bool forIntrospection, bool suppressSecurityChecks)
  RuntimeAssembly LoadWithPartialNameInternal(string partialName, Evidence securityEvidence, StackCrawlMark& stackMark)
  RuntimeAssembly LoadWithPartialNameInternal(AssemblyName an, Evidence securityEvidence, StackCrawlMark& stackMark)
  AssemblyName GetName(bool copiedName)
  Type GetType(string name, bool throwOnError, bool ignoreCase)
  Module GetModule(string name)
  AssemblyName[] GetReferencedAssemblies()
  Module[] GetModules(bool getResourceModules)
  Module[] GetLoadedModules(bool getResourceModules)
  Assembly GetSatelliteAssembly(CultureInfo culture)
  Assembly GetSatelliteAssembly(CultureInfo culture, Version version)
  Module get_ManifestModule()
  bool get_GlobalAssemblyCache()
  Type[] GetExportedTypes()
  Byte[] GetAotId()
  string get_code_base(Assembly a, bool escaped)
  string get_location()
  string get_fullname(Assembly a)
  bool GetAotIdInternal(Byte[] aotid)
  string InternalImageRuntimeVersion(Assembly a)
  bool get_global_assembly_cache()
  MethodInfo get_EntryPoint()
  bool get_ReflectionOnly()
  string GetCodeBase(Assembly a, bool escaped)
  string get_CodeBase()
  string get_EscapedCodeBase()
  string get_FullName()
  string get_ImageRuntimeVersion()
  IntPtr get_MonoAssembly()
  void set_FromByteArray(bool value)
  string get_Location()
  bool GetManifestResourceInfoInternal(string name, ManifestResourceInfo info)
  ManifestResourceInfo GetManifestResourceInfo(string resourceName)
  String[] GetManifestResourceNames()
  IntPtr GetManifestResourceInternal(string name, Int32& size, Module& module)
  Stream GetManifestResourceStream(string name)
  Stream GetManifestResourceStream(Type type, string name)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesData()
  void add_ModuleResolve(ModuleResolveEventHandler value)
  void remove_ModuleResolve(ModuleResolveEventHandler value)
  Module GetManifestModule()
  Module GetManifestModuleInternal()
  Module[] GetModulesInternal()
  object GetFilesInternal(string name, bool getResourceModules)
  FileStream[] GetFiles(bool getResourceModules)
  FileStream GetFile(string name)
  int GetHashCode()
  bool Equals(object o)
  string ToString()
  Evidence get_Evidence()
  Evidence UnprotectedGetEvidence()
  void Resolve()
  PermissionSet get_GrantedPermissionSet()
  PermissionSet get_DeniedPermissionSet()
  bool LoadPermissions(Assembly a, IntPtr& minimum, Int32& minLength, IntPtr& optional, Int32& optLength, IntPtr& refused, Int32& refLength)
  void LoadAssemblyPermissions()
  PermissionSet get_PermissionSet()
--------------------------------------------------
Класс: System.Reflection.MonoEventInfo
Наследуется от: ValueType
Поля:
  Type declaring_type
  Type reflected_type
  string name
  MethodInfo add_method
  MethodInfo remove_method
  MethodInfo raise_method
  EventAttributes attrs
  MethodInfo[] other_methods
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.RuntimeEventInfo
Наследуется от: EventInfo
Поля:
  IntPtr klass
  IntPtr handle
Свойства:
  Module Module
  BindingFlags BindingFlags
  RuntimeType ReflectedTypeInternal
  EventAttributes Attributes
  Type DeclaringType
  Type ReflectedType
  string Name
  int MetadataToken
Методы:
  void get_event_info(RuntimeEventInfo ev, MonoEventInfo& info)
  MonoEventInfo GetEventInfo(RuntimeEventInfo ev)
  Module get_Module()
  BindingFlags get_BindingFlags()
  RuntimeType GetDeclaringTypeInternal()
  RuntimeType get_ReflectedTypeInternal()
  RuntimeModule GetRuntimeModule()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  BindingFlags GetBindingFlags()
  EventAttributes get_Attributes()
  MethodInfo GetAddMethod(bool nonPublic)
  MethodInfo GetRaiseMethod(bool nonPublic)
  MethodInfo GetRemoveMethod(bool nonPublic)
  MethodInfo[] GetOtherMethods(bool nonPublic)
  Type get_DeclaringType()
  Type get_ReflectedType()
  string get_Name()
  string ToString()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesData()
  int get_MetadataToken()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  int get_metadata_token(RuntimeEventInfo monoEvent)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.RtFieldInfo
Наследуется от: FieldInfo
Поля:
Свойства:
Методы:
  object UnsafeGetValue(object obj)
  void UnsafeSetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  void CheckConsistency(object target)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.RuntimeFieldInfo
Наследуется от: RtFieldInfo
Поля:
  IntPtr klass
  RuntimeFieldHandle fhandle
  string name
  Type type
  FieldAttributes attrs
Свойства:
  BindingFlags BindingFlags
  Module Module
  RuntimeType ReflectedTypeInternal
  FieldAttributes Attributes
  RuntimeFieldHandle FieldHandle
  Type FieldType
  Type ReflectedType
  Type DeclaringType
  string Name
  bool IsSecurityTransparent
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  int MetadataToken
Методы:
  BindingFlags get_BindingFlags()
  Module get_Module()
  RuntimeType GetDeclaringTypeInternal()
  RuntimeType get_ReflectedTypeInternal()
  RuntimeModule GetRuntimeModule()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  object UnsafeGetValue(object obj)
  void CheckConsistency(object target)
  void UnsafeSetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  void SetValueDirect(TypedReference obj, object value)
  object GetValueDirect(TypedReference obj)
  FieldAttributes get_Attributes()
  RuntimeFieldHandle get_FieldHandle()
  Type ResolveType()
  Type get_FieldType()
  Type GetParentType(bool declaring)
  Type get_ReflectedType()
  Type get_DeclaringType()
  string get_Name()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int GetFieldOffset()
  object GetValueInternal(object obj)
  object GetValue(object obj)
  string ToString()
  void SetValueInternal(FieldInfo fi, object obj, object value)
  void SetValue(object obj, object val, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  RuntimeFieldInfo Clone(string newName)
  object GetRawConstantValue()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  void CheckGeneric()
  int get_core_clr_security_level()
  bool get_IsSecurityTransparent()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  int get_MetadataToken()
  int get_metadata_token(RuntimeFieldInfo monoField)
  Type[] GetTypeModifiers(bool optional)
  Type[] GetOptionalCustomModifiers()
  Type[] GetRequiredCustomModifiers()
  Type[] GetCustomModifiers(bool optional)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.MonoMethodInfo
Наследуется от: ValueType
Поля:
  Type parent
  Type ret
  MethodAttributes attrs
  MethodImplAttributes iattrs
  CallingConventions callconv
Свойства:
Методы:
  void get_method_info(IntPtr handle, MonoMethodInfo& info)
  int get_method_attributes(IntPtr handle)
  MonoMethodInfo GetMethodInfo(IntPtr handle)
  Type GetDeclaringType(IntPtr handle)
  Type GetReturnType(IntPtr handle)
  MethodAttributes GetAttributes(IntPtr handle)
  CallingConventions GetCallingConvention(IntPtr handle)
  MethodImplAttributes GetMethodImplementationFlags(IntPtr handle)
  ParameterInfo[] get_parameter_info(IntPtr handle, MemberInfo member)
  ParameterInfo[] GetParametersInfo(IntPtr handle, MemberInfo member)
  MarshalAsAttribute get_retval_marshal(IntPtr handle)
  ParameterInfo GetReturnParameterInfo(RuntimeMethodInfo method)
--------------------------------------------------
Класс: System.Reflection.RuntimeMethodInfo
Наследуется от: MethodInfo
Поля:
  IntPtr mhandle
  string name
  Type reftype
Свойства:
  BindingFlags BindingFlags
  Module Module
  RuntimeType ReflectedTypeInternal
  ParameterInfo ReturnParameter
  Type ReturnType
  ICustomAttributeProvider ReturnTypeCustomAttributes
  int MetadataToken
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  CallingConventions CallingConvention
  Type ReflectedType
  Type DeclaringType
  string Name
  bool IsGenericMethodDefinition
  bool IsGenericMethod
  bool ContainsGenericParameters
  bool IsSecurityTransparent
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
Методы:
  BindingFlags get_BindingFlags()
  Module get_Module()
  RuntimeType get_ReflectedTypeInternal()
  string FormatNameAndSig(bool serialization)
  Delegate CreateDelegate(Type delegateType)
  Delegate CreateDelegate(Type delegateType, object target)
  string ToString()
  RuntimeModule GetRuntimeModule()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string SerializationToString()
  MethodBase GetMethodFromHandleNoGenericCheck(RuntimeMethodHandle handle)
  MethodBase GetMethodFromHandleNoGenericCheck(RuntimeMethodHandle handle, RuntimeTypeHandle reflectedType)
  MethodBody GetMethodBodyInternal(IntPtr handle)
  MethodBody GetMethodBody(IntPtr handle)
  MethodBase GetMethodFromHandleInternalType(IntPtr method_handle, IntPtr type_handle)
  MethodBase GetMethodFromHandleInternalType_native(IntPtr method_handle, IntPtr type_handle, bool genericCheck)
  void .ctor()
  void .ctor(RuntimeMethodHandle mhandle)
  string get_name(MethodBase method)
  RuntimeMethodInfo get_base_method(RuntimeMethodInfo method, bool definition)
  int get_metadata_token(RuntimeMethodInfo method)
  MethodInfo GetBaseDefinition()
  MethodInfo GetBaseMethod()
  ParameterInfo get_ReturnParameter()
  Type get_ReturnType()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
  int get_MetadataToken()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  object InternalInvoke(object obj, Object[] parameters, Exception& exc)
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  void ConvertValues(Binder binder, Object[] args, ParameterInfo[] pinfo, CultureInfo culture, BindingFlags invokeAttr)
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  Type get_ReflectedType()
  Type get_DeclaringType()
  string get_Name()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  void GetPInvoke(PInvokeAttributes& flags, String& entryPoint, String& dllName)
  Object[] GetPseudoCustomAttributes()
  CustomAttributeData[] GetPseudoCustomAttributesData()
  CustomAttributeData GetDllImportAttributeData()
  MethodInfo MakeGenericMethod(Type[] methodInstantiation)
  MethodInfo MakeGenericMethod_impl(Type[] types)
  Type[] GetGenericArguments()
  MethodInfo GetGenericMethodDefinition_impl()
  MethodInfo GetGenericMethodDefinition()
  bool get_IsGenericMethodDefinition()
  bool get_IsGenericMethod()
  bool get_ContainsGenericParameters()
  MethodBody GetMethodBody()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  int get_core_clr_security_level()
  bool get_IsSecurityTransparent()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
--------------------------------------------------
Класс: System.Reflection.RuntimeConstructorInfo
Наследуется от: ConstructorInfo
Поля:
  IntPtr mhandle
  string name
  Type reftype
Свойства:
  Module Module
  BindingFlags BindingFlags
  RuntimeType ReflectedTypeInternal
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  CallingConventions CallingConvention
  bool ContainsGenericParameters
  Type ReflectedType
  Type DeclaringType
  string Name
  bool IsSecurityTransparent
  bool IsSecurityCritical
  bool IsSecuritySafeCritical
  int MetadataToken
Методы:
  Module get_Module()
  RuntimeModule GetRuntimeModule()
  BindingFlags get_BindingFlags()
  RuntimeType get_ReflectedTypeInternal()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string SerializationToString()
  void SerializationInvoke(object target, SerializationInfo info, StreamingContext context)
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  object InternalInvoke(object obj, Object[] parameters, Exception& exc)
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  object DoInvoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  object InternalInvoke(object obj, Object[] parameters, bool wrapExceptions)
  object Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  bool get_ContainsGenericParameters()
  Type get_ReflectedType()
  Type get_DeclaringType()
  string get_Name()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  MethodBody GetMethodBody()
  string ToString()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  int get_core_clr_security_level()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  bool get_IsSecurityTransparent()
  bool get_IsSecurityCritical()
  bool get_IsSecuritySafeCritical()
  int get_MetadataToken()
  int get_metadata_token(RuntimeConstructorInfo method)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.RuntimeModule
Наследуется от: Module
Поля:
  IntPtr _impl
  Assembly assembly
  string fqname
  string name
  string scopename
  bool is_resource
  int token
Свойства:
  Assembly Assembly
  string Name
  string ScopeName
  int MDStreamVersion
  Guid ModuleVersionId
  string FullyQualifiedName
  int MetadataToken
  IntPtr MonoModule
Методы:
  Assembly get_Assembly()
  string get_Name()
  string get_ScopeName()
  int get_MDStreamVersion()
  Guid get_ModuleVersionId()
  string get_FullyQualifiedName()
  bool IsResource()
  Type[] FindTypes(TypeFilter filter, object filterCriteria)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingFlags)
  int get_MetadataToken()
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo[] GetMethods(BindingFlags bindingFlags)
  ModuleHandle GetModuleHandleImpl()
  void GetPEKind(PortableExecutableKinds& peKind, ImageFileMachine& machine)
  Type GetType(string className, bool throwOnError, bool ignoreCase)
  bool IsDefined(Type attributeType, bool inherit)
  FieldInfo ResolveField(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  FieldInfo ResolveField(Module module, IntPtr monoModule, int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MemberInfo ResolveMember(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MemberInfo ResolveMember(Module module, IntPtr monoModule, int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MethodBase ResolveMethod(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MethodBase ResolveMethod(Module module, IntPtr monoModule, int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  string ResolveString(int metadataToken)
  string ResolveString(Module module, IntPtr monoModule, int metadataToken)
  Type ResolveType(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  Type ResolveType(Module module, IntPtr monoModule, int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  Byte[] ResolveSignature(int metadataToken)
  Byte[] ResolveSignature(Module module, IntPtr monoModule, int metadataToken)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  X509Certificate GetSignerCertificate()
  Type[] GetTypes()
  IList`1<CustomAttributeData> GetCustomAttributesData()
  RuntimeAssembly GetRuntimeAssembly()
  IntPtr get_MonoModule()
  Guid GetModuleVersionId()
  Exception resolve_token_exception(string name, int metadataToken, ResolveTokenError error, string tokenType)
  IntPtr[] ptrs_from_types(Type[] types)
  int get_MetadataToken(Module module)
  int GetMDStreamVersion(IntPtr module)
  Type[] InternalGetTypes(IntPtr module)
  IntPtr GetHINSTANCE(IntPtr module)
  void GetGuidInternal(IntPtr module, Byte[] guid)
  Type GetGlobalType(IntPtr module)
  IntPtr ResolveTypeToken(IntPtr module, int token, IntPtr[] type_args, IntPtr[] method_args, ResolveTokenError& error)
  IntPtr ResolveMethodToken(IntPtr module, int token, IntPtr[] type_args, IntPtr[] method_args, ResolveTokenError& error)
  IntPtr ResolveFieldToken(IntPtr module, int token, IntPtr[] type_args, IntPtr[] method_args, ResolveTokenError& error)
  string ResolveStringToken(IntPtr module, int token, ResolveTokenError& error)
  MemberInfo ResolveMemberToken(IntPtr module, int token, IntPtr[] type_args, IntPtr[] method_args, ResolveTokenError& error)
  Byte[] ResolveSignature(IntPtr module, int metadataToken, ResolveTokenError& error)
  void GetPEKind(IntPtr module, PortableExecutableKinds& peKind, ImageFileMachine& machine)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.ResolveTokenError
Наследуется от: Enum
Поля:
  int value__
  ResolveTokenError OutOfRange
  ResolveTokenError BadTable
  ResolveTokenError Other
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.RuntimeParameterInfo
Наследуется от: ParameterInfo
Поля:
  MarshalAsAttribute marshalAs
Свойства:
  object DefaultValue
  object RawDefaultValue
  int MetadataToken
  bool HasDefaultValue
Методы:
  void .ctor(string name, Type type, int position, int attrs, object defaultValue, MemberInfo member, MarshalAsAttribute marshalAs)
  void FormatParameters(StringBuilder sb, ParameterInfo[] p, CallingConventions callingConvention, bool serialization)
  void .ctor(ParameterBuilder pb, Type type, MemberInfo member, int position)
  ParameterInfo New(ParameterBuilder pb, Type type, MemberInfo member, int position)
  void .ctor(ParameterInfo pinfo, Type type, MemberInfo member, int position)
  void .ctor(ParameterInfo pinfo, MemberInfo member)
  void .ctor(Type type, MemberInfo member, MarshalAsAttribute marshalAs)
  object get_DefaultValue()
  object get_RawDefaultValue()
  int get_MetadataToken()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  object GetDefaultValueImpl(ParameterInfo pinfo)
  bool IsDefined(Type attributeType, bool inherit)
  IList`1<CustomAttributeData> GetCustomAttributesData()
  int GetMetadataToken()
  Type[] GetOptionalCustomModifiers()
  Object[] GetPseudoCustomAttributes()
  CustomAttributeData[] GetPseudoCustomAttributesData()
  Type[] GetRequiredCustomModifiers()
  bool get_HasDefaultValue()
  Type[] GetTypeModifiers(Type type, MemberInfo member, int position, bool optional)
  ParameterInfo New(ParameterInfo pinfo, Type type, MemberInfo member, int position)
  ParameterInfo New(ParameterInfo pinfo, MemberInfo member)
  ParameterInfo New(Type type, MemberInfo member, MarshalAsAttribute marshalAs)
  Type[] GetCustomModifiers(bool optional)
--------------------------------------------------
Класс: System.Reflection.MonoPropertyInfo
Наследуется от: ValueType
Поля:
  Type parent
  Type declaring_type
  string name
  MethodInfo get_method
  MethodInfo set_method
  PropertyAttributes attrs
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.PInfo
Наследуется от: Enum
Поля:
  int value__
  PInfo Attributes
  PInfo GetMethod
  PInfo SetMethod
  PInfo ReflectedType
  PInfo DeclaringType
  PInfo Name
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.GetterAdapter
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(object _this)
  IAsyncResult BeginInvoke(object _this, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Reflection.Getter`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  R Invoke(T _this)
  IAsyncResult BeginInvoke(T _this, AsyncCallback callback, object object)
  R EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Reflection.RuntimePropertyInfo
Наследуется от: PropertyInfo
Поля:
  IntPtr klass
  IntPtr prop
  MonoPropertyInfo info
  PInfo cached
  GetterAdapter cached_getter
Свойства:
  BindingFlags BindingFlags
  Module Module
  RuntimeType ReflectedTypeInternal
  PropertyAttributes Attributes
  bool CanRead
  bool CanWrite
  Type PropertyType
  Type ReflectedType
  Type DeclaringType
  string Name
  int MetadataToken
Методы:
  void get_property_info(RuntimePropertyInfo prop, MonoPropertyInfo& info, PInfo req_info)
  Type[] GetTypeModifiers(RuntimePropertyInfo prop, bool optional)
  object get_default_value(RuntimePropertyInfo prop)
  BindingFlags get_BindingFlags()
  Module get_Module()
  RuntimeType GetDeclaringTypeInternal()
  RuntimeType get_ReflectedTypeInternal()
  RuntimeModule GetRuntimeModule()
  string ToString()
  string FormatNameAndSig(bool serialization)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string SerializationToString()
  void CachePropertyInfo(PInfo flags)
  PropertyAttributes get_Attributes()
  bool get_CanRead()
  bool get_CanWrite()
  Type get_PropertyType()
  Type get_ReflectedType()
  Type get_DeclaringType()
  string get_Name()
  MethodInfo[] GetAccessors(bool nonPublic)
  MethodInfo GetGetMethod(bool nonPublic)
  ParameterInfo[] GetIndexParameters()
  MethodInfo GetSetMethod(bool nonPublic)
  object GetConstantValue()
  object GetRawConstantValue()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  object GetterAdapterFrame(Getter`2<T, R> getter, object obj)
  object StaticGetterAdapterFrame(StaticGetter`1<R> getter, object obj)
  GetterAdapter CreateGetterDelegate(MethodInfo method)
  object GetValue(object obj, Object[] index)
  object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  Type[] GetOptionalCustomModifiers()
  Type[] GetRequiredCustomModifiers()
  Type[] GetCustomModifiers(bool optional)
  IList`1<CustomAttributeData> GetCustomAttributesData()
  bool HasSameMetadataDefinitionAs(MemberInfo other)
  int get_MetadataToken()
  int get_metadata_token(RuntimePropertyInfo monoProperty)
  PropertyInfo internal_from_handle_type(IntPtr event_handle, IntPtr type_handle)
  PropertyInfo GetPropertyFromHandle(RuntimePropertyHandle handle, RuntimeTypeHandle reflectedType)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.StrongNameKeyPair
Наследуется от: object
Поля:
  Byte[] _publicKey
  string _keyPairContainer
  bool _keyPairExported
  Byte[] _keyPairArray
  RSA _rsa
Свойства:
  Byte[] PublicKey
Методы:
  void .ctor(Byte[] keyPairArray)
  void .ctor(FileStream keyPairFile)
  void .ctor(string keyPairContainer)
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  RSA GetRSA()
  void LoadKey(Byte[] key)
  Byte[] get_PublicKey()
  StrongName StrongName()
--------------------------------------------------
Класс: System.Reflection.Metadata.AssemblyExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TryGetRawMetadata(Assembly assembly, Byte*& blob, Int32& length)
--------------------------------------------------
Класс: System.Reflection.Emit.OpCodeType
Наследуется от: Enum
Поля:
  int value__
  OpCodeType Annotation
  OpCodeType Macro
  OpCodeType Nternal
  OpCodeType Objmodel
  OpCodeType Prefix
  OpCodeType Primitive
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.OperandType
Наследуется от: Enum
Поля:
  int value__
  OperandType InlineBrTarget
  OperandType InlineField
  OperandType InlineI
  OperandType InlineI8
  OperandType InlineMethod
  OperandType InlineNone
  OperandType InlinePhi
  OperandType InlineR
  OperandType InlineSig
  OperandType InlineString
  OperandType InlineSwitch
  OperandType InlineTok
  OperandType InlineType
  OperandType InlineVar
  OperandType ShortInlineBrTarget
  OperandType ShortInlineI
  OperandType ShortInlineR
  OperandType ShortInlineVar
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.PackingSize
Наследуется от: Enum
Поля:
  int value__
  PackingSize Unspecified
  PackingSize Size1
  PackingSize Size2
  PackingSize Size4
  PackingSize Size8
  PackingSize Size16
  PackingSize Size32
  PackingSize Size64
  PackingSize Size128
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.StackBehaviour
Наследуется от: Enum
Поля:
  int value__
  StackBehaviour Pop0
  StackBehaviour Pop1
  StackBehaviour Pop1_pop1
  StackBehaviour Popi
  StackBehaviour Popi_pop1
  StackBehaviour Popi_popi
  StackBehaviour Popi_popi8
  StackBehaviour Popi_popi_popi
  StackBehaviour Popi_popr4
  StackBehaviour Popi_popr8
  StackBehaviour Popref
  StackBehaviour Popref_pop1
  StackBehaviour Popref_popi
  StackBehaviour Popref_popi_popi
  StackBehaviour Popref_popi_popi8
  StackBehaviour Popref_popi_popr4
  StackBehaviour Popref_popi_popr8
  StackBehaviour Popref_popi_popref
  StackBehaviour Push0
  StackBehaviour Push1
  StackBehaviour Push1_push1
  StackBehaviour Pushi
  StackBehaviour Pushi8
  StackBehaviour Pushr4
  StackBehaviour Pushr8
  StackBehaviour Pushref
  StackBehaviour Varpop
  StackBehaviour Varpush
  StackBehaviour Popref_popi_pop1
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.ExceptionHandler
Наследуется от: ValueType
Поля:
  int m_exceptionClass
  int m_tryStartOffset
  int m_tryEndOffset
  int m_filterOffset
  int m_handlerStartOffset
  int m_handlerEndOffset
  ExceptionHandlingClauseOptions m_kind
Свойства:
  int ExceptionTypeToken
  int TryOffset
  int TryLength
  int FilterOffset
  int HandlerOffset
  int HandlerLength
  ExceptionHandlingClauseOptions Kind
Методы:
  int get_ExceptionTypeToken()
  int get_TryOffset()
  int get_TryLength()
  int get_FilterOffset()
  int get_HandlerOffset()
  int get_HandlerLength()
  ExceptionHandlingClauseOptions get_Kind()
  void .ctor(int tryOffset, int tryLength, int filterOffset, int handlerOffset, int handlerLength, ExceptionHandlingClauseOptions kind, int exceptionTypeToken)
  void .ctor(int tryStartOffset, int tryEndOffset, int filterOffset, int handlerStartOffset, int handlerEndOffset, int kind, int exceptionTypeToken)
  bool IsValidKind(ExceptionHandlingClauseOptions kind)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(ExceptionHandler other)
  bool op_Equality(ExceptionHandler left, ExceptionHandler right)
  bool op_Inequality(ExceptionHandler left, ExceptionHandler right)
--------------------------------------------------
Класс: System.Reflection.Emit.TypeKind
Наследуется от: Enum
Поля:
  int value__
  TypeKind IsArray
  TypeKind IsPointer
  TypeKind IsByRef
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.SymbolType
Наследуется от: TypeInfo
Поля:
  Type m_baseType
Свойства:
  Guid GUID
  Module Module
  Assembly Assembly
  RuntimeTypeHandle TypeHandle
  string Namespace
  Type BaseType
  bool IsConstructedGenericType
  string AssemblyQualifiedName
  string FullName
  string Name
  Type UnderlyingSystemType
  bool IsUserType
Методы:
  bool IsAssignableFrom(TypeInfo typeInfo)
  Guid get_GUID()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Module get_Module()
  Assembly get_Assembly()
  RuntimeTypeHandle get_TypeHandle()
  string get_Namespace()
  Type get_BaseType()
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  Type GetInterface(string name, bool ignoreCase)
  Type[] GetInterfaces()
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  TypeAttributes GetAttributeFlagsImpl()
  bool IsPrimitiveImpl()
  bool IsValueTypeImpl()
  bool IsCOMObjectImpl()
  bool get_IsConstructedGenericType()
  Type GetElementType()
  bool HasElementTypeImpl()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool IsDefined(Type attributeType, bool inherit)
  void .ctor(Type elementType)
  string FormatName(string elementName)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsPointerImpl()
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakePointerType()
  string ToString()
  string get_AssemblyQualifiedName()
  string get_FullName()
  string get_Name()
  Type get_UnderlyingSystemType()
  bool get_IsUserType()
  Type RuntimeResolve()
--------------------------------------------------
Класс: System.Reflection.Emit.NativeResourceType
Наследуется от: Enum
Поля:
  int value__
  NativeResourceType None
  NativeResourceType Unmanaged
  NativeResourceType Assembly
  NativeResourceType Explicit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.RefEmitPermissionSet
Наследуется от: ValueType
Поля:
  SecurityAction action
  string pset
Свойства:
Методы:
  void .ctor(SecurityAction action, string pset)
--------------------------------------------------
Класс: System.Reflection.Emit.MonoResource
Наследуется от: ValueType
Поля:
  Byte[] data
  string name
  string filename
  ResourceAttributes attrs
  int offset
  Stream stream
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.MonoWin32Resource
Наследуется от: ValueType
Поля:
  int res_type
  int res_id
  int lang_id
  Byte[] data
Свойства:
Методы:
  void .ctor(int res_type, int res_id, int lang_id, Byte[] data)
--------------------------------------------------
Класс: System.Reflection.Emit.GenericInstanceKey
Наследуется от: object
Поля:
  Type gtd
  Type[] args
  int hash_code
Свойства:
Методы:
  void .ctor(Type gtd, Type[] args)
  bool IsBoundedVector(Type type)
  bool TypeEquals(Type a, Type b)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Reflection.Emit.AssemblyBuilder
Наследуется от: Assembly
Поля:
  IntPtr _mono_assembly
  Evidence _evidence
  UIntPtr dynamic_assembly
  MethodInfo entry_point
  ModuleBuilder[] modules
  string name
  string dir
  CustomAttributeBuilder[] cattrs
  MonoResource[] resources
  Byte[] public_key
  string version
  string culture
  UInt32 algid
  UInt32 flags
  PEFileKinds pekind
  bool delay_sign
  UInt32 access
  Module[] loaded_modules
  MonoWin32Resource[] win32_resources
  RefEmitPermissionSet[] permissions_minimum
  RefEmitPermissionSet[] permissions_optional
  RefEmitPermissionSet[] permissions_refused
  PortableExecutableKinds peKind
  ImageFileMachine machine
  bool corlib_internal
  Type[] type_forwarders
  Byte[] pktoken
  PermissionSet _minimum
  PermissionSet _optional
  PermissionSet _refuse
  PermissionSet _granted
  PermissionSet _denied
  string assemblyName
  Type corlib_object_type
  Type corlib_value_type
  Type corlib_enum_type
  Type corlib_void_type
  ArrayList resource_writers
  Win32VersionResource version_res
  bool created
  bool is_module_only
  StrongName sn
  NativeResourceType native_resource
  string versioninfo_culture
  AssemblyBuilderAccess COMPILER_ACCESS
  ModuleBuilder manifest_module
Свойства:
  string CodeBase
  string EscapedCodeBase
  MethodInfo EntryPoint
  string Location
  string ImageRuntimeVersion
  bool ReflectionOnly
  bool IsSave
  bool IsRun
  string AssemblyDir
  bool IsModuleOnly
  Module ManifestModule
  bool GlobalAssemblyCache
  bool IsDynamic
  string FullName
  IntPtr MonoAssembly
  Evidence Evidence
Методы:
  void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._AssemblyBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void basic_init(AssemblyBuilder ab)
  void UpdateNativeCustomAttributes(AssemblyBuilder ab)
  void .ctor(AssemblyName n, string directory, AssemblyBuilderAccess access, bool corlib_internal)
  string get_CodeBase()
  string get_EscapedCodeBase()
  MethodInfo get_EntryPoint()
  string get_Location()
  string get_ImageRuntimeVersion()
  bool get_ReflectionOnly()
  void AddResourceFile(string name, string fileName)
  void AddResourceFile(string name, string fileName, ResourceAttributes attribute)
  void AddResourceFile(string name, string fileName, ResourceAttributes attribute, bool fileNeedsToExists)
  void AddPermissionRequests(PermissionSet required, PermissionSet optional, PermissionSet refused)
  void EmbedResourceFile(string name, string fileName)
  void EmbedResourceFile(string name, string fileName, ResourceAttributes attribute)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access)
  AssemblyBuilder DefineDynamicAssembly(AssemblyName name, AssemblyBuilderAccess access, IEnumerable`1<CustomAttributeBuilder> assemblyAttributes)
  ModuleBuilder DefineDynamicModule(string name)
  ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo)
  ModuleBuilder DefineDynamicModule(string name, string fileName)
  ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo)
  ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo, bool transient)
  IResourceWriter DefineResource(string name, string description, string fileName)
  IResourceWriter DefineResource(string name, string description, string fileName, ResourceAttributes attribute)
  void AddUnmanagedResource(Win32Resource res)
  void DefineUnmanagedResource(Byte[] resource)
  void DefineUnmanagedResource(string resourceFileName)
  void DefineVersionInfoResource()
  void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark)
  void DefineVersionInfoResourceImpl(string fileName)
  ModuleBuilder GetDynamicModule(string name)
  Type[] GetExportedTypes()
  FileStream GetFile(string name)
  FileStream[] GetFiles(bool getResourceModules)
  Module[] GetModulesInternal()
  Type[] GetTypes(bool exportedOnly)
  ManifestResourceInfo GetManifestResourceInfo(string resourceName)
  String[] GetManifestResourceNames()
  Stream GetManifestResourceStream(string name)
  Stream GetManifestResourceStream(Type type, string name)
  bool get_IsSave()
  bool get_IsRun()
  string get_AssemblyDir()
  bool get_IsModuleOnly()
  void set_IsModuleOnly(bool value)
  Module GetManifestModule()
  void Save(string assemblyFileName, PortableExecutableKinds portableExecutableKind, ImageFileMachine imageFileMachine)
  void Save(string assemblyFileName)
  void SetEntryPoint(MethodInfo entryMethod)
  void SetEntryPoint(MethodInfo entryMethod, PEFileKinds fileKind)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  Exception not_supported()
  void check_name_and_filename(string name, string fileName, bool fileNeedsToExists)
  string create_assembly_version(string version)
  string GetCultureString(string str)
  Type MakeGenericType(Type gtd, Type[] typeArguments)
  Type GetType(string name, bool throwOnError, bool ignoreCase)
  Module GetModule(string name)
  Module[] GetModules(bool getResourceModules)
  AssemblyName GetName(bool copiedName)
  AssemblyName[] GetReferencedAssemblies()
  Module[] GetLoadedModules(bool getResourceModules)
  Assembly GetSatelliteAssembly(CultureInfo culture)
  Assembly GetSatelliteAssembly(CultureInfo culture, Version version)
  Module get_ManifestModule()
  bool get_GlobalAssemblyCache()
  bool get_IsDynamic()
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  string get_FullName()
  IntPtr get_MonoAssembly()
  Evidence get_Evidence()
  Evidence UnprotectedGetEvidence()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.AssemblyBuilderAccess
Наследуется от: Enum
Поля:
  int value__
  AssemblyBuilderAccess Run
  AssemblyBuilderAccess Save
  AssemblyBuilderAccess RunAndSave
  AssemblyBuilderAccess ReflectionOnly
  AssemblyBuilderAccess RunAndCollect
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.ConstructorBuilder
Наследуется от: ConstructorInfo
Поля:
  RuntimeMethodHandle mhandle
  ILGenerator ilgen
  Type[] parameters
  MethodAttributes attrs
  MethodImplAttributes iattrs
  int table_idx
  CallingConventions call_conv
  TypeBuilder type
  ParameterBuilder[] pinfo
  CustomAttributeBuilder[] cattrs
  bool init_locals
  Type[][] paramModReq
  Type[][] paramModOpt
  RefEmitPermissionSet[] permissions
Свойства:
  CallingConventions CallingConvention
  bool InitLocals
  TypeBuilder TypeBuilder
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  Type ReflectedType
  Type DeclaringType
  Type ReturnType
  string Name
  string Signature
  Module Module
Методы:
  void System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._ConstructorBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(TypeBuilder tb, MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes, Type[][] paramModReq, Type[][] paramModOpt)
  CallingConventions get_CallingConvention()
  bool get_InitLocals()
  void set_InitLocals(bool value)
  TypeBuilder get_TypeBuilder()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  Type GetParameterType(int pos)
  MethodBase RuntimeResolve()
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  object Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  Type get_ReflectedType()
  Type get_DeclaringType()
  Type get_ReturnType()
  string get_Name()
  string get_Signature()
  void AddDeclarativeSecurity(SecurityAction action, PermissionSet pset)
  ParameterBuilder DefineParameter(int iSequence, ParameterAttributes attributes, string strParamName)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  ILGenerator GetILGenerator()
  ILGenerator GetILGenerator(int streamSize)
  void SetMethodBody(Byte[] il, int maxStack, Byte[] localSignature, IEnumerable`1<ExceptionHandler> exceptionHandlers, IEnumerable`1<int> tokenFixups)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  void SetImplementationFlags(MethodImplAttributes attributes)
  Module GetModule()
  MethodToken GetToken()
  void SetSymCustomAttribute(string name, Byte[] data)
  Module get_Module()
  string ToString()
  void fixup()
  void ResolveUserTypes()
  void FixupTokens(Dictionary`2<int, int> token_map, Dictionary`2<int, MemberInfo> member_map)
  void GenerateDebugInfo(ISymbolWriter symbolWriter)
  int get_next_table_index(object obj, int table, int count)
  void RejectIfCreated()
  Exception not_supported()
  Exception not_after_created()
  Exception not_created()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.ConstructorOnTypeBuilderInst
Наследуется от: ConstructorInfo
Поля:
  TypeBuilderInstantiation instantiation
  ConstructorInfo cb
Свойства:
  Type DeclaringType
  string Name
  Type ReflectedType
  Module Module
  int MetadataToken
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  CallingConventions CallingConvention
  bool ContainsGenericParameters
  bool IsGenericMethodDefinition
  bool IsGenericMethod
Методы:
  void .ctor(TypeBuilderInstantiation instantiation, ConstructorInfo cb)
  Type get_DeclaringType()
  string get_Name()
  Type get_ReflectedType()
  Module get_Module()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  Type[] GetParameterTypes()
  ConstructorInfo RuntimeResolve()
  int get_MetadataToken()
  int GetParametersCount()
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  Type[] GetGenericArguments()
  bool get_ContainsGenericParameters()
  bool get_IsGenericMethodDefinition()
  bool get_IsGenericMethod()
  object Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
--------------------------------------------------
Класс: System.Reflection.Emit.CustomAttributeBuilder
Наследуется от: object
Поля:
  ConstructorInfo ctor
  Byte[] data
  Object[] args
  PropertyInfo[] namedProperties
  Object[] propertyValues
  FieldInfo[] namedFields
  Object[] fieldValues
Свойства:
  ConstructorInfo Ctor
  Byte[] Data
Методы:
  void System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._CustomAttributeBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  ConstructorInfo get_Ctor()
  Byte[] get_Data()
  Byte[] GetBlob(Assembly asmb, ConstructorInfo con, Object[] constructorArgs, PropertyInfo[] namedProperties, Object[] propertyValues, FieldInfo[] namedFields, Object[] fieldValues)
  object Invoke()
  void .ctor(ConstructorInfo con, Byte[] binaryAttribute)
  void .ctor(ConstructorInfo con, Object[] constructorArgs)
  void .ctor(ConstructorInfo con, Object[] constructorArgs, FieldInfo[] namedFields, Object[] fieldValues)
  void .ctor(ConstructorInfo con, Object[] constructorArgs, PropertyInfo[] namedProperties, Object[] propertyValues)
  void .ctor(ConstructorInfo con, Object[] constructorArgs, PropertyInfo[] namedProperties, Object[] propertyValues, FieldInfo[] namedFields, Object[] fieldValues)
  bool IsValidType(Type t)
  bool IsValidParam(object o, Type paramType)
  bool IsValidValue(Type type, object value)
  void Initialize(ConstructorInfo con, Object[] constructorArgs, PropertyInfo[] namedProperties, Object[] propertyValues, FieldInfo[] namedFields, Object[] fieldValues)
  int decode_len(Byte[] data, int pos, Int32& rpos)
  string string_from_bytes(Byte[] data, int pos, int len)
  string decode_string(Byte[] data, int pos, Int32& rpos)
  string string_arg()
  UnmanagedMarshal get_umarshal(CustomAttributeBuilder customBuilder, bool is_field)
  Type elementTypeToType(int elementType)
  object decode_cattr_value(Type t, Byte[] data, int pos, Int32& rpos)
  CustomAttributeInfo decode_cattr(CustomAttributeBuilder customBuilder)
  ParameterInfo[] GetParameters(ConstructorInfo ctor)
--------------------------------------------------
Класс: System.Reflection.Emit.ArrayType
Наследуется от: SymbolType
Поля:
  int rank
Свойства:
Методы:
  void .ctor(Type elementType, int rank)
  int GetEffectiveRank()
  Type InternalResolve()
  Type RuntimeResolve()
  bool IsArrayImpl()
  int GetArrayRank()
  string FormatName(string elementName)
--------------------------------------------------
Класс: System.Reflection.Emit.ByRefType
Наследуется от: SymbolType
Поля:
Свойства:
Методы:
  void .ctor(Type elementType)
  Type InternalResolve()
  bool IsByRefImpl()
  string FormatName(string elementName)
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakePointerType()
--------------------------------------------------
Класс: System.Reflection.Emit.PointerType
Наследуется от: SymbolType
Поля:
Свойства:
Методы:
  void .ctor(Type elementType)
  Type InternalResolve()
  bool IsPointerImpl()
  string FormatName(string elementName)
--------------------------------------------------
Класс: System.Reflection.Emit.DynamicILInfo
Наследуется от: object
Поля:
  DynamicMethod method
Свойства:
  DynamicMethod DynamicMethod
Методы:
  void .ctor()
  void .ctor(DynamicMethod method)
  DynamicMethod get_DynamicMethod()
  int GetTokenFor(Byte[] signature)
  int GetTokenFor(DynamicMethod method)
  int GetTokenFor(RuntimeFieldHandle field)
  int GetTokenFor(RuntimeMethodHandle method)
  int GetTokenFor(RuntimeTypeHandle type)
  int GetTokenFor(string literal)
  int GetTokenFor(RuntimeMethodHandle method, RuntimeTypeHandle contextType)
  int GetTokenFor(RuntimeFieldHandle field, RuntimeTypeHandle contextType)
  void SetCode(Byte[] code, int maxStackSize)
  void SetCode(Byte* code, int codeSize, int maxStackSize)
  void SetExceptions(Byte[] exceptions)
  void SetExceptions(Byte* exceptions, int exceptionsSize)
  void SetLocalSignature(Byte[] localSignature)
  void SetLocalSignature(Byte* localSignature, int signatureSize)
--------------------------------------------------
Класс: System.Reflection.Emit.DynamicMethod
Наследуется от: MethodInfo
Поля:
  RuntimeMethodHandle mhandle
  string name
  Type returnType
  Type[] parameters
  MethodAttributes attributes
  CallingConventions callingConvention
  Module module
  bool skipVisibility
  bool init_locals
  ILGenerator ilgen
  int nrefs
  Object[] refs
  IntPtr referenced_by
  Type owner
  Delegate deleg
  RuntimeMethodInfo method
  ParameterBuilder[] pinfo
  bool creating
  DynamicILInfo il_info
Свойства:
  MethodAttributes Attributes
  CallingConventions CallingConvention
  Type DeclaringType
  bool InitLocals
  RuntimeMethodHandle MethodHandle
  Module Module
  string Name
  Type ReflectedType
  ParameterInfo ReturnParameter
  Type ReturnType
  ICustomAttributeProvider ReturnTypeCustomAttributes
Методы:
  void .ctor(string name, Type returnType, Type[] parameterTypes, Module m)
  void .ctor(string name, Type returnType, Type[] parameterTypes, Type owner)
  void .ctor(string name, Type returnType, Type[] parameterTypes, Module m, bool skipVisibility)
  void .ctor(string name, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)
  void .ctor(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type owner, bool skipVisibility)
  void .ctor(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Module m, bool skipVisibility)
  void .ctor(string name, Type returnType, Type[] parameterTypes)
  void .ctor(string name, Type returnType, Type[] parameterTypes, bool restrictedSkipVisibility)
  void .ctor(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type owner, Module m, bool skipVisibility, bool anonHosted)
  void create_dynamic_method(DynamicMethod m)
  void CreateDynMethod()
  Delegate CreateDelegate(Type delegateType)
  Delegate CreateDelegate(Type delegateType, object target)
  ParameterBuilder DefineParameter(int position, ParameterAttributes attributes, string parameterName)
  MethodInfo GetBaseDefinition()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  DynamicILInfo GetDynamicILInfo()
  ILGenerator GetILGenerator()
  ILGenerator GetILGenerator(int streamSize)
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  Type GetParameterType(int pos)
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  string ToString()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  Type get_DeclaringType()
  bool get_InitLocals()
  void set_InitLocals(bool value)
  RuntimeMethodHandle get_MethodHandle()
  Module get_Module()
  string get_Name()
  Type get_ReflectedType()
  ParameterInfo get_ReturnParameter()
  Type get_ReturnType()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
  void RejectIfCreated()
  int AddRef(object reference)
--------------------------------------------------
Класс: System.Reflection.Emit.DynamicMethodTokenGenerator
Наследуется от: object
Поля:
  DynamicMethod m
Свойства:
Методы:
  void .ctor(DynamicMethod m)
  int GetToken(string str)
  int GetToken(MethodBase method, Type[] opt_param_types)
  int GetToken(MemberInfo member, bool create_open_instance)
  int GetToken(SignatureHelper helper)
--------------------------------------------------
Класс: System.Reflection.Emit.EnumBuilder
Наследуется от: TypeInfo
Поля:
  TypeBuilder _tb
  FieldBuilder _underlyingField
  Type _underlyingType
Свойства:
  Assembly Assembly
  string AssemblyQualifiedName
  Type BaseType
  Type DeclaringType
  string FullName
  Guid GUID
  Module Module
  string Name
  string Namespace
  Type ReflectedType
  RuntimeTypeHandle TypeHandle
  TypeToken TypeToken
  FieldBuilder UnderlyingField
  Type UnderlyingSystemType
  bool IsUserType
  bool IsConstructedGenericType
  bool IsTypeDefinition
Методы:
  void System.Runtime.InteropServices._EnumBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._EnumBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._EnumBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._EnumBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(ModuleBuilder mb, string name, TypeAttributes visibility, Type underlyingType)
  TypeBuilder GetTypeBuilder()
  Type InternalResolve()
  Type RuntimeResolve()
  Assembly get_Assembly()
  string get_AssemblyQualifiedName()
  Type get_BaseType()
  Type get_DeclaringType()
  string get_FullName()
  Guid get_GUID()
  Module get_Module()
  string get_Name()
  string get_Namespace()
  Type get_ReflectedType()
  RuntimeTypeHandle get_TypeHandle()
  TypeToken get_TypeToken()
  FieldBuilder get_UnderlyingField()
  Type get_UnderlyingSystemType()
  Type CreateType()
  TypeInfo CreateTypeInfo()
  Type GetEnumUnderlyingType()
  void setup_enum_type(Type t)
  FieldBuilder DefineLiteral(string literalName, object literalValue)
  TypeAttributes GetAttributeFlagsImpl()
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  Type GetElementType()
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  Type GetInterface(string name, bool ignoreCase)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  Type[] GetInterfaces()
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  bool HasElementTypeImpl()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsCOMObjectImpl()
  bool IsPointerImpl()
  bool IsPrimitiveImpl()
  bool IsValueTypeImpl()
  bool IsDefined(Type attributeType, bool inherit)
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakePointerType()
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  Exception CreateNotSupportedException()
  bool get_IsUserType()
  bool get_IsConstructedGenericType()
  bool IsAssignableFrom(TypeInfo typeInfo)
  bool get_IsTypeDefinition()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.EventBuilder
Наследуется от: object
Поля:
  string name
  Type type
  TypeBuilder typeb
  CustomAttributeBuilder[] cattrs
  MethodBuilder add_method
  MethodBuilder remove_method
  MethodBuilder raise_method
  MethodBuilder[] other_methods
  EventAttributes attrs
  int table_idx
Свойства:
Методы:
  void System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._EventBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(TypeBuilder tb, string eventName, EventAttributes eventAttrs, Type eventType)
  int get_next_table_index(object obj, int table, int count)
  void AddOtherMethod(MethodBuilder mdBuilder)
  EventToken GetEventToken()
  void SetAddOnMethod(MethodBuilder mdBuilder)
  void SetRaiseMethod(MethodBuilder mdBuilder)
  void SetRemoveOnMethod(MethodBuilder mdBuilder)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  void RejectIfCreated()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.EventOnTypeBuilderInst
Наследуется от: EventInfo
Поля:
  TypeBuilderInstantiation instantiation
  EventBuilder event_builder
  EventInfo event_info
Свойства:
  EventAttributes Attributes
  Type DeclaringType
  string Name
  Type ReflectedType
Методы:
  void .ctor(TypeBuilderInstantiation instantiation, EventBuilder evt)
  void .ctor(TypeBuilderInstantiation instantiation, EventInfo evt)
  EventAttributes get_Attributes()
  MethodInfo GetAddMethod(bool nonPublic)
  MethodInfo GetRaiseMethod(bool nonPublic)
  MethodInfo GetRemoveMethod(bool nonPublic)
  MethodInfo[] GetOtherMethods(bool nonPublic)
  Type get_DeclaringType()
  string get_Name()
  Type get_ReflectedType()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
--------------------------------------------------
Класс: System.Reflection.Emit.EventToken
Наследуется от: ValueType
Поля:
  int tokValue
  EventToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(EventToken obj)
  bool op_Equality(EventToken a, EventToken b)
  bool op_Inequality(EventToken a, EventToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.FieldBuilder
Наследуется от: FieldInfo
Поля:
  FieldAttributes attrs
  Type type
  string name
  object def_value
  int offset
  TypeBuilder typeb
  Byte[] rva_data
  CustomAttributeBuilder[] cattrs
  UnmanagedMarshal marshal_info
  RuntimeFieldHandle handle
  Type[] modReq
  Type[] modOpt
Свойства:
  FieldAttributes Attributes
  Type DeclaringType
  RuntimeFieldHandle FieldHandle
  Type FieldType
  string Name
  Type ReflectedType
  int MetadataToken
  Module Module
Методы:
  void System.Runtime.InteropServices._FieldBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._FieldBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._FieldBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._FieldBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(TypeBuilder tb, string fieldName, Type type, FieldAttributes attributes, Type[] modReq, Type[] modOpt)
  FieldAttributes get_Attributes()
  Type get_DeclaringType()
  RuntimeFieldHandle get_FieldHandle()
  Type get_FieldType()
  string get_Name()
  Type get_ReflectedType()
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  int get_MetadataToken()
  FieldToken GetToken()
  object GetValue(object obj)
  bool IsDefined(Type attributeType, bool inherit)
  int GetFieldOffset()
  void SetRVAData(Byte[] data)
  void SetConstant(object defaultValue)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  void SetMarshal(UnmanagedMarshal unmanagedMarshal)
  void SetOffset(int iOffset)
  void SetValue(object obj, object val, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  Exception CreateNotSupportedException()
  void RejectIfCreated()
  void ResolveUserTypes()
  FieldInfo RuntimeResolve()
  Module get_Module()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.FieldOnTypeBuilderInst
Наследуется от: FieldInfo
Поля:
  TypeBuilderInstantiation instantiation
  FieldInfo fb
Свойства:
  Type DeclaringType
  string Name
  Type ReflectedType
  FieldAttributes Attributes
  RuntimeFieldHandle FieldHandle
  int MetadataToken
  Type FieldType
Методы:
  void .ctor(TypeBuilderInstantiation instantiation, FieldInfo fb)
  Type get_DeclaringType()
  string get_Name()
  Type get_ReflectedType()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  string ToString()
  FieldAttributes get_Attributes()
  RuntimeFieldHandle get_FieldHandle()
  int get_MetadataToken()
  Type get_FieldType()
  object GetValue(object obj)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, CultureInfo culture)
  FieldInfo RuntimeResolve()
--------------------------------------------------
Класс: System.Reflection.Emit.FieldToken
Наследуется от: ValueType
Поля:
  int tokValue
  FieldToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(FieldToken obj)
  bool op_Equality(FieldToken a, FieldToken b)
  bool op_Inequality(FieldToken a, FieldToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.FlowControl
Наследуется от: Enum
Поля:
  int value__
  FlowControl Branch
  FlowControl Break
  FlowControl Call
  FlowControl Cond_Branch
  FlowControl Meta
  FlowControl Next
  FlowControl Phi
  FlowControl Return
  FlowControl Throw
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.GenericTypeParameterBuilder
Наследуется от: TypeInfo
Поля:
  TypeBuilder tbuilder
  MethodBuilder mbuilder
  string name
  int index
  Type base_type
  Type[] iface_constraints
  CustomAttributeBuilder[] cattrs
  GenericParameterAttributes attrs
Свойства:
  Type UnderlyingSystemType
  Assembly Assembly
  string AssemblyQualifiedName
  Type BaseType
  string FullName
  Guid GUID
  string Name
  string Namespace
  Module Module
  Type DeclaringType
  Type ReflectedType
  RuntimeTypeHandle TypeHandle
  bool ContainsGenericParameters
  bool IsGenericParameter
  bool IsGenericType
  bool IsGenericTypeDefinition
  GenericParameterAttributes GenericParameterAttributes
  int GenericParameterPosition
  MethodBase DeclaringMethod
  bool IsUserType
Методы:
  void SetBaseTypeConstraint(Type baseTypeConstraint)
  void SetInterfaceConstraints(Type[] interfaceConstraints)
  void SetGenericParameterAttributes(GenericParameterAttributes genericParameterAttributes)
  void .ctor(TypeBuilder tbuilder, MethodBuilder mbuilder, string name, int index)
  Type InternalResolve()
  Type RuntimeResolve()
  bool IsSubclassOf(Type c)
  TypeAttributes GetAttributeFlagsImpl()
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  Type GetInterface(string name, bool ignoreCase)
  Type[] GetInterfaces()
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  bool HasElementTypeImpl()
  bool IsAssignableFrom(Type c)
  bool IsAssignableFrom(TypeInfo typeInfo)
  bool IsInstanceOfType(object o)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsCOMObjectImpl()
  bool IsPointerImpl()
  bool IsPrimitiveImpl()
  bool IsValueTypeImpl()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  Type GetElementType()
  Type get_UnderlyingSystemType()
  Assembly get_Assembly()
  string get_AssemblyQualifiedName()
  Type get_BaseType()
  string get_FullName()
  Guid get_GUID()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  string get_Name()
  string get_Namespace()
  Module get_Module()
  Type get_DeclaringType()
  Type get_ReflectedType()
  RuntimeTypeHandle get_TypeHandle()
  Type[] GetGenericArguments()
  Type GetGenericTypeDefinition()
  bool get_ContainsGenericParameters()
  bool get_IsGenericParameter()
  bool get_IsGenericType()
  bool get_IsGenericTypeDefinition()
  GenericParameterAttributes get_GenericParameterAttributes()
  int get_GenericParameterPosition()
  Type[] GetGenericParameterConstraints()
  MethodBase get_DeclaringMethod()
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  Exception not_supported()
  string ToString()
  bool Equals(object o)
  int GetHashCode()
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakeGenericType(Type[] typeArguments)
  Type MakePointerType()
  bool get_IsUserType()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.ILExceptionBlock
Наследуется от: ValueType
Поля:
  int CATCH
  int FILTER
  int FINALLY
  int FAULT
  int FILTER_START
  Type extype
  int type
  int start
  int len
  int filter_offset
Свойства:
Методы:
  void Debug()
--------------------------------------------------
Класс: System.Reflection.Emit.ILExceptionInfo
Наследуется от: ValueType
Поля:
  ILExceptionBlock[] handlers
  int start
  int len
  Label end
Свойства:
Методы:
  int NumHandlers()
  void AddCatch(Type extype, int offset)
  void AddFinally(int offset)
  void AddFault(int offset)
  void AddFilter(int offset)
  void End(int offset)
  int LastClauseType()
  void PatchFilterClause(int start)
  void Debug(int b)
  void add_block(int offset)
--------------------------------------------------
Класс: System.Reflection.Emit.ILTokenInfo
Наследуется от: ValueType
Поля:
  MemberInfo member
  int code_pos
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.TokenGenerator
Поля:
Свойства:
Методы:
  int GetToken(string str)
  int GetToken(MemberInfo member, bool create_open_instance)
  int GetToken(MethodBase method, Type[] opt_param_types)
  int GetToken(SignatureHelper helper)
--------------------------------------------------
Класс: System.Reflection.Emit.ILGenerator
Наследуется от: object
Поля:
  Byte[] code
  int code_len
  int max_stack
  int cur_stack
  LocalBuilder[] locals
  ILExceptionInfo[] ex_handlers
  int num_token_fixups
  ILTokenInfo[] token_fixups
  LabelData[] labels
  int num_labels
  LabelFixup[] fixups
  int num_fixups
  Module module
  int cur_block
  Stack open_blocks
  TokenGenerator token_gen
  int defaultFixupSize
  int defaultLabelsSize
  int defaultExceptionStackSize
  ArrayList sequencePointLists
  SequencePointList currentSequence
Свойства:
  bool HasDebugInfo
  TokenGenerator TokenGenerator
  int ILOffset
Методы:
  void System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._ILGenerator.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(Module m, TokenGenerator token_gen, int size)
  void add_token_fixup(MemberInfo mi)
  void make_room(int nbytes)
  void emit_int(int val)
  void ll_emit(OpCode opcode)
  int target_len(OpCode opcode)
  void InternalEndClause()
  void BeginCatchBlock(Type exceptionType)
  void BeginExceptFilterBlock()
  Label BeginExceptionBlock()
  void BeginFaultBlock()
  void BeginFinallyBlock()
  void BeginScope()
  LocalBuilder DeclareLocal(Type localType)
  LocalBuilder DeclareLocal(Type localType, bool pinned)
  Label DefineLabel()
  void Emit(OpCode opcode)
  void Emit(OpCode opcode, byte arg)
  void Emit(OpCode opcode, ConstructorInfo con)
  void Emit(OpCode opcode, double arg)
  void Emit(OpCode opcode, FieldInfo field)
  void Emit(OpCode opcode, short arg)
  void Emit(OpCode opcode, int arg)
  void Emit(OpCode opcode, long arg)
  void Emit(OpCode opcode, Label label)
  void Emit(OpCode opcode, Label[] labels)
  void Emit(OpCode opcode, LocalBuilder local)
  void Emit(OpCode opcode, MethodInfo meth)
  void Emit(OpCode opcode, MethodInfo method, int token)
  void Emit(OpCode opcode, sbyte arg)
  void Emit(OpCode opcode, SignatureHelper signature)
  void Emit(OpCode opcode, float arg)
  void Emit(OpCode opcode, string str)
  void Emit(OpCode opcode, Type cls)
  void EmitCall(OpCode opcode, MethodInfo methodInfo, Type[] optionalParameterTypes)
  void EmitCalli(OpCode opcode, CallingConvention unmanagedCallConv, Type returnType, Type[] parameterTypes)
  void EmitCalli(OpCode opcode, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type[] optionalParameterTypes)
  void EmitWriteLine(FieldInfo fld)
  void EmitWriteLine(LocalBuilder localBuilder)
  void EmitWriteLine(string value)
  void EndExceptionBlock()
  void EndScope()
  void MarkLabel(Label loc)
  void MarkSequencePoint(ISymbolDocumentWriter document, int startLine, int startColumn, int endLine, int endColumn)
  void GenerateDebugInfo(ISymbolWriter symbolWriter)
  bool get_HasDebugInfo()
  void ThrowException(Type excType)
  void UsingNamespace(string usingNamespace)
  void label_fixup(MethodBase mb)
  void FixupTokens(Dictionary`2<int, int> token_map, Dictionary`2<int, MemberInfo> member_map)
  void SetExceptionHandlers(ILExceptionInfo[] exHandlers)
  void SetTokenFixups(ILTokenInfo[] tokenFixups)
  void SetCode(Byte[] code, int max_stack)
  void SetCode(Byte* code, int code_size, int max_stack)
  void Init(Byte[] il, int maxStack, Byte[] localSignature, IEnumerable`1<ExceptionHandler> exceptionHandlers, IEnumerable`1<int> tokenFixups)
  TokenGenerator get_TokenGenerator()
  int Mono_GetCurrentOffset(ILGenerator ig)
  int get_ILOffset()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.SequencePointList
Наследуется от: object
Поля:
  ISymbolDocumentWriter doc
  SequencePoint[] points
  int count
  int arrayGrow
Свойства:
  ISymbolDocumentWriter Document
  int StartLine
  int EndLine
  int StartColumn
  int EndColumn
Методы:
  void .ctor(ISymbolDocumentWriter doc)
  ISymbolDocumentWriter get_Document()
  Int32[] GetOffsets()
  Int32[] GetLines()
  Int32[] GetColumns()
  Int32[] GetEndLines()
  Int32[] GetEndColumns()
  int get_StartLine()
  int get_EndLine()
  int get_StartColumn()
  int get_EndColumn()
  void AddSequencePoint(int offset, int line, int col, int endLine, int endCol)
--------------------------------------------------
Класс: System.Reflection.Emit.SequencePoint
Наследуется от: ValueType
Поля:
  int Offset
  int Line
  int Col
  int EndLine
  int EndCol
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.Label
Наследуется от: ValueType
Поля:
  int label
Свойства:
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(Label obj)
  bool op_Equality(Label a, Label b)
  bool op_Inequality(Label a, Label b)
  int GetHashCode()
--------------------------------------------------
Класс: System.Reflection.Emit.LocalBuilder
Наследуется от: LocalVariableInfo
Поля:
  string name
  ILGenerator ilgen
  int startOffset
  int endOffset
Свойства:
  Type LocalType
  bool IsPinned
  int LocalIndex
  string Name
  int StartOffset
  int EndOffset
Методы:
  void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._LocalBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(Type t, ILGenerator ilgen)
  void SetLocalSymInfo(string name, int startOffset, int endOffset)
  void SetLocalSymInfo(string name)
  Type get_LocalType()
  bool get_IsPinned()
  int get_LocalIndex()
  string get_Name()
  int get_StartOffset()
  int get_EndOffset()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.MethodBuilder
Наследуется от: MethodInfo
Поля:
  RuntimeMethodHandle mhandle
  Type rtype
  Type[] parameters
  MethodAttributes attrs
  MethodImplAttributes iattrs
  string name
  int table_idx
  Byte[] code
  ILGenerator ilgen
  TypeBuilder type
  ParameterBuilder[] pinfo
  CustomAttributeBuilder[] cattrs
  MethodInfo[] override_methods
  string pi_dll
  string pi_entry
  CharSet charset
  UInt32 extra_flags
  CallingConvention native_cc
  CallingConventions call_conv
  bool init_locals
  IntPtr generic_container
  GenericTypeParameterBuilder[] generic_params
  Type[] returnModReq
  Type[] returnModOpt
  Type[][] paramModReq
  Type[][] paramModOpt
  RefEmitPermissionSet[] permissions
Свойства:
  bool ContainsGenericParameters
  bool InitLocals
  TypeBuilder TypeBuilder
  RuntimeMethodHandle MethodHandle
  RuntimeMethodHandle MethodHandleInternal
  Type ReturnType
  Type ReflectedType
  Type DeclaringType
  string Name
  MethodAttributes Attributes
  ICustomAttributeProvider ReturnTypeCustomAttributes
  CallingConventions CallingConvention
  string Signature
  bool BestFitMapping
  bool ThrowOnUnmappableChar
  bool ExactSpelling
  bool SetLastError
  bool IsGenericMethodDefinition
  bool IsGenericMethod
  Module Module
  ParameterInfo ReturnParameter
Методы:
  void System.Runtime.InteropServices._MethodBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._MethodBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._MethodBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._MethodBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(TypeBuilder tb, string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnModReq, Type[] returnModOpt, Type[] parameterTypes, Type[][] paramModReq, Type[][] paramModOpt)
  void .ctor(TypeBuilder tb, string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnModReq, Type[] returnModOpt, Type[] parameterTypes, Type[][] paramModReq, Type[][] paramModOpt, string dllName, string entryName, CallingConvention nativeCConv, CharSet nativeCharset)
  bool get_ContainsGenericParameters()
  bool get_InitLocals()
  void set_InitLocals(bool value)
  TypeBuilder get_TypeBuilder()
  RuntimeMethodHandle get_MethodHandle()
  RuntimeMethodHandle get_MethodHandleInternal()
  Type get_ReturnType()
  Type get_ReflectedType()
  Type get_DeclaringType()
  string get_Name()
  MethodAttributes get_Attributes()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
  CallingConventions get_CallingConvention()
  string get_Signature()
  void set_BestFitMapping(bool value)
  void set_ThrowOnUnmappableChar(bool value)
  void set_ExactSpelling(bool value)
  void set_SetLastError(bool value)
  MethodToken GetToken()
  MethodInfo GetBaseDefinition()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int GetParametersCount()
  Type GetParameterType(int pos)
  MethodBase RuntimeResolve()
  Module GetModule()
  void CreateMethodBody(Byte[] il, int count)
  void SetMethodBody(Byte[] il, int maxStack, Byte[] localSignature, IEnumerable`1<ExceptionHandler> exceptionHandlers, IEnumerable`1<int> tokenFixups)
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  ILGenerator GetILGenerator()
  ILGenerator GetILGenerator(int size)
  ParameterBuilder DefineParameter(int position, ParameterAttributes attributes, string strParamName)
  void check_override()
  void fixup()
  void ResolveUserTypes()
  void FixupTokens(Dictionary`2<int, int> token_map, Dictionary`2<int, MemberInfo> member_map)
  void GenerateDebugInfo(ISymbolWriter symbolWriter)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  void SetImplementationFlags(MethodImplAttributes attributes)
  void AddDeclarativeSecurity(SecurityAction action, PermissionSet pset)
  void SetMarshal(UnmanagedMarshal unmanagedMarshal)
  void SetSymCustomAttribute(string name, Byte[] data)
  string ToString()
  bool Equals(object obj)
  int GetHashCode()
  int get_next_table_index(object obj, int table, int count)
  void ExtendArray(T[]& array, T elem)
  void set_override(MethodInfo mdecl)
  void RejectIfCreated()
  Exception NotSupported()
  MethodInfo MakeGenericMethod(Type[] typeArguments)
  bool get_IsGenericMethodDefinition()
  bool get_IsGenericMethod()
  MethodInfo GetGenericMethodDefinition()
  Type[] GetGenericArguments()
  GenericTypeParameterBuilder[] DefineGenericParameters(String[] names)
  void SetReturnType(Type returnType)
  void SetParameters(Type[] parameterTypes)
  void SetSignature(Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
  Module get_Module()
  ParameterInfo get_ReturnParameter()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.MethodOnTypeBuilderInst
Наследуется от: MethodInfo
Поля:
  Type instantiation
  MethodInfo base_method
  Type[] method_arguments
  MethodInfo generic_method_definition
Свойства:
  Type DeclaringType
  string Name
  Type ReflectedType
  Type ReturnType
  Module Module
  int MetadataToken
  RuntimeMethodHandle MethodHandle
  MethodAttributes Attributes
  CallingConventions CallingConvention
  bool ContainsGenericParameters
  bool IsGenericMethodDefinition
  bool IsGenericMethod
  ParameterInfo ReturnParameter
  ICustomAttributeProvider ReturnTypeCustomAttributes
Методы:
  void .ctor(TypeBuilderInstantiation instantiation, MethodInfo base_method)
  void .ctor(MethodOnTypeBuilderInst gmd, Type[] typeArguments)
  void .ctor(MethodInfo method, Type[] typeArguments)
  MethodInfo ExtractBaseMethod(MethodInfo info)
  Type[] GetTypeArgs()
  MethodInfo RuntimeResolve()
  Type get_DeclaringType()
  string get_Name()
  Type get_ReflectedType()
  Type get_ReturnType()
  Module get_Module()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  string ToString()
  MethodImplAttributes GetMethodImplementationFlags()
  ParameterInfo[] GetParameters()
  ParameterInfo[] GetParametersInternal()
  int get_MetadataToken()
  int GetParametersCount()
  object Invoke(object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
  RuntimeMethodHandle get_MethodHandle()
  MethodAttributes get_Attributes()
  CallingConventions get_CallingConvention()
  MethodInfo MakeGenericMethod(Type[] methodInstantiation)
  Type[] GetGenericArguments()
  MethodInfo GetGenericMethodDefinition()
  bool get_ContainsGenericParameters()
  bool get_IsGenericMethodDefinition()
  bool get_IsGenericMethod()
  MethodInfo GetBaseDefinition()
  ParameterInfo get_ReturnParameter()
  ICustomAttributeProvider get_ReturnTypeCustomAttributes()
--------------------------------------------------
Класс: System.Reflection.Emit.MethodRental
Наследуется от: object
Поля:
  int JitImmediate
  int JitOnDemand
Свойства:
Методы:
  void .ctor()
  void SwapMethodBody(Type cls, int methodtoken, IntPtr rgIL, int methodSize, int flags)
  void System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._MethodRental.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
--------------------------------------------------
Класс: System.Reflection.Emit.MethodToken
Наследуется от: ValueType
Поля:
  int tokValue
  MethodToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(MethodToken obj)
  bool op_Equality(MethodToken a, MethodToken b)
  bool op_Inequality(MethodToken a, MethodToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.ModuleBuilder
Наследуется от: Module
Поля:
  IntPtr _impl
  Assembly assembly
  string fqname
  string name
  string scopename
  bool is_resource
  int token
  UIntPtr dynamic_image
  int num_types
  TypeBuilder[] types
  CustomAttributeBuilder[] cattrs
  Byte[] guid
  int table_idx
  AssemblyBuilder assemblyb
  MethodBuilder[] global_methods
  FieldBuilder[] global_fields
  bool is_main
  MonoResource[] resources
  IntPtr unparented_classes
  Int32[] table_indexes
  TypeBuilder global_type
  Type global_type_created
  Dictionary`2<TypeName, TypeBuilder> name_cache
  Dictionary`2<string, int> us_string_cache
  bool transient
  ModuleBuilderTokenGenerator token_gen
  Hashtable resource_writers
  ISymbolWriter symbolWriter
  bool has_warned_about_symbolWriter
  int typeref_tokengen
  int typedef_tokengen
  int typespec_tokengen
  int memberref_tokengen
  int methoddef_tokengen
  Dictionary`2<MemberInfo, int> inst_tokens
  Dictionary`2<MemberInfo, int> inst_tokens_open
Свойства:
  string FullyQualifiedName
  string FileName
  bool IsMain
  Assembly Assembly
  string Name
  string ScopeName
  Guid ModuleVersionId
  int MetadataToken
Методы:
  void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._ModuleBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void basic_init(ModuleBuilder ab)
  void set_wrappers_type(ModuleBuilder mb, Type ab)
  void .ctor(AssemblyBuilder assb, string name, string fullyqname, bool emitSymbolInfo, bool transient)
  void WarnAboutSymbolWriter(string message)
  string get_FullyQualifiedName()
  bool IsTransient()
  void CreateGlobalFunctions()
  FieldBuilder DefineInitializedData(string name, Byte[] data, FieldAttributes attributes)
  FieldBuilder DefineUninitializedData(string name, int size, FieldAttributes attributes)
  FieldBuilder DefineDataImpl(string name, int size, FieldAttributes attributes)
  void addGlobalMethod(MethodBuilder mb)
  MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, Type returnType, Type[] parameterTypes)
  MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
  MethodBuilder DefineGlobalMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
  MethodBuilder DefinePInvokeMethod(string name, string dllName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, CallingConvention nativeCallConv, CharSet nativeCharSet)
  MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, CallingConvention nativeCallConv, CharSet nativeCharSet)
  TypeBuilder DefineType(string name)
  TypeBuilder DefineType(string name, TypeAttributes attr)
  TypeBuilder DefineType(string name, TypeAttributes attr, Type parent)
  void AddType(TypeBuilder tb)
  TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, Type[] interfaces, PackingSize packingSize, int typesize)
  void RegisterTypeName(TypeBuilder tb, TypeName name)
  TypeBuilder GetRegisteredType(TypeName name)
  TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, Type[] interfaces)
  TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, int typesize)
  TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, PackingSize packsize)
  TypeBuilder DefineType(string name, TypeAttributes attr, Type parent, PackingSize packingSize, int typesize)
  MethodInfo GetArrayMethod(Type arrayClass, string methodName, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
  EnumBuilder DefineEnum(string name, TypeAttributes visibility, Type underlyingType)
  Type GetType(string className)
  Type GetType(string className, bool ignoreCase)
  TypeBuilder search_in_array(TypeBuilder[] arr, int validElementsInArray, TypeName className)
  TypeBuilder search_nested_in_array(TypeBuilder[] arr, int validElementsInArray, TypeName className)
  TypeBuilder GetMaybeNested(TypeBuilder t, IEnumerable`1<TypeName> nested)
  Type GetType(string className, bool throwOnError, bool ignoreCase)
  int get_next_table_index(object obj, int table, int count)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  ISymbolWriter GetSymWriter()
  ISymbolDocumentWriter DefineDocument(string url, Guid language, Guid languageVendor, Guid documentType)
  Type[] GetTypes()
  IResourceWriter DefineResource(string name, string description, ResourceAttributes attribute)
  IResourceWriter DefineResource(string name, string description)
  void DefineUnmanagedResource(Byte[] resource)
  void DefineUnmanagedResource(string resourceFileName)
  void DefineManifestResource(string name, Stream stream, ResourceAttributes attribute)
  void SetSymCustomAttribute(string name, Byte[] data)
  void SetUserEntryPoint(MethodInfo entryPoint)
  MethodToken GetMethodToken(MethodInfo method)
  MethodToken GetMethodToken(MethodInfo method, IEnumerable`1<Type> optionalParameterTypes)
  MethodToken GetArrayMethodToken(Type arrayClass, string methodName, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
  MethodToken GetConstructorToken(ConstructorInfo con)
  MethodToken GetConstructorToken(ConstructorInfo constructor, IEnumerable`1<Type> optionalParameterTypes)
  FieldToken GetFieldToken(FieldInfo field)
  SignatureToken GetSignatureToken(Byte[] sigBytes, int sigLength)
  SignatureToken GetSignatureToken(SignatureHelper sigHelper)
  StringToken GetStringConstant(string str)
  TypeToken GetTypeToken(Type type)
  TypeToken GetTypeToken(string name)
  int getUSIndex(ModuleBuilder mb, string str)
  int getToken(ModuleBuilder mb, object obj, bool create_open_instance)
  int getMethodToken(ModuleBuilder mb, MethodBase method, Type[] opt_param_types)
  int GetToken(string str)
  int GetPseudoToken(MemberInfo member, bool create_open_instance)
  int GetToken(MemberInfo member)
  int GetToken(MemberInfo member, bool create_open_instance)
  int GetToken(MethodBase method, IEnumerable`1<Type> opt_param_types)
  int GetToken(MethodBase method, Type[] opt_param_types)
  int GetToken(SignatureHelper helper)
  void RegisterToken(object obj, int token)
  object GetRegisteredToken(int token)
  TokenGenerator GetTokenGenerator()
  object RuntimeResolve(object obj)
  void build_metadata(ModuleBuilder mb)
  void WriteToFile(IntPtr handle)
  void FixupTokens(Dictionary`2<int, int> token_map, Dictionary`2<int, MemberInfo> member_map, Dictionary`2<MemberInfo, int> inst_tokens, bool open)
  void FixupTokens()
  void Save()
  string get_FileName()
  void set_IsMain(bool value)
  void CreateGlobalType()
  Guid GetModuleVersionId()
  Assembly get_Assembly()
  string get_Name()
  string get_ScopeName()
  Guid get_ModuleVersionId()
  bool IsResource()
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  FieldInfo ResolveField(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MemberInfo ResolveMember(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MemberInfo ResolveOrGetRegisteredToken(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  MethodBase ResolveMethod(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  string ResolveString(int metadataToken)
  Byte[] ResolveSignature(int metadataToken)
  Type ResolveType(int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingFlags)
  MethodInfo[] GetMethods(BindingFlags bindingFlags)
  int get_MetadataToken()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.ModuleBuilderTokenGenerator
Наследуется от: object
Поля:
  ModuleBuilder mb
Свойства:
Методы:
  void .ctor(ModuleBuilder mb)
  int GetToken(string str)
  int GetToken(MemberInfo member, bool create_open_instance)
  int GetToken(MethodBase method, Type[] opt_param_types)
  int GetToken(SignatureHelper helper)
--------------------------------------------------
Класс: System.Reflection.Emit.OpCode
Наследуется от: ValueType
Поля:
  byte op1
  byte op2
  byte push
  byte pop
  byte size
  byte type
  byte args
  byte flow
Свойства:
  string Name
  int Size
  OpCodeType OpCodeType
  OperandType OperandType
  FlowControl FlowControl
  StackBehaviour StackBehaviourPop
  StackBehaviour StackBehaviourPush
  short Value
Методы:
  void .ctor(int p, int q)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(OpCode obj)
  string ToString()
  string get_Name()
  int get_Size()
  OpCodeType get_OpCodeType()
  OperandType get_OperandType()
  FlowControl get_FlowControl()
  StackBehaviour get_StackBehaviourPop()
  StackBehaviour get_StackBehaviourPush()
  short get_Value()
  bool op_Equality(OpCode a, OpCode b)
  bool op_Inequality(OpCode a, OpCode b)
--------------------------------------------------
Класс: System.Reflection.Emit.OpCodeNames
Наследуется от: object
Поля:
  String[] names
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.OpCodes
Наследуется от: object
Поля:
  OpCode Nop
  OpCode Break
  OpCode Ldarg_0
  OpCode Ldarg_1
  OpCode Ldarg_2
  OpCode Ldarg_3
  OpCode Ldloc_0
  OpCode Ldloc_1
  OpCode Ldloc_2
  OpCode Ldloc_3
  OpCode Stloc_0
  OpCode Stloc_1
  OpCode Stloc_2
  OpCode Stloc_3
  OpCode Ldarg_S
  OpCode Ldarga_S
  OpCode Starg_S
  OpCode Ldloc_S
  OpCode Ldloca_S
  OpCode Stloc_S
  OpCode Ldnull
  OpCode Ldc_I4_M1
  OpCode Ldc_I4_0
  OpCode Ldc_I4_1
  OpCode Ldc_I4_2
  OpCode Ldc_I4_3
  OpCode Ldc_I4_4
  OpCode Ldc_I4_5
  OpCode Ldc_I4_6
  OpCode Ldc_I4_7
  OpCode Ldc_I4_8
  OpCode Ldc_I4_S
  OpCode Ldc_I4
  OpCode Ldc_I8
  OpCode Ldc_R4
  OpCode Ldc_R8
  OpCode Dup
  OpCode Pop
  OpCode Jmp
  OpCode Call
  OpCode Calli
  OpCode Ret
  OpCode Br_S
  OpCode Brfalse_S
  OpCode Brtrue_S
  OpCode Beq_S
  OpCode Bge_S
  OpCode Bgt_S
  OpCode Ble_S
  OpCode Blt_S
  OpCode Bne_Un_S
  OpCode Bge_Un_S
  OpCode Bgt_Un_S
  OpCode Ble_Un_S
  OpCode Blt_Un_S
  OpCode Br
  OpCode Brfalse
  OpCode Brtrue
  OpCode Beq
  OpCode Bge
  OpCode Bgt
  OpCode Ble
  OpCode Blt
  OpCode Bne_Un
  OpCode Bge_Un
  OpCode Bgt_Un
  OpCode Ble_Un
  OpCode Blt_Un
  OpCode Switch
  OpCode Ldind_I1
  OpCode Ldind_U1
  OpCode Ldind_I2
  OpCode Ldind_U2
  OpCode Ldind_I4
  OpCode Ldind_U4
  OpCode Ldind_I8
  OpCode Ldind_I
  OpCode Ldind_R4
  OpCode Ldind_R8
  OpCode Ldind_Ref
  OpCode Stind_Ref
  OpCode Stind_I1
  OpCode Stind_I2
  OpCode Stind_I4
  OpCode Stind_I8
  OpCode Stind_R4
  OpCode Stind_R8
  OpCode Add
  OpCode Sub
  OpCode Mul
  OpCode Div
  OpCode Div_Un
  OpCode Rem
  OpCode Rem_Un
  OpCode And
  OpCode Or
  OpCode Xor
  OpCode Shl
  OpCode Shr
  OpCode Shr_Un
  OpCode Neg
  OpCode Not
  OpCode Conv_I1
  OpCode Conv_I2
  OpCode Conv_I4
  OpCode Conv_I8
  OpCode Conv_R4
  OpCode Conv_R8
  OpCode Conv_U4
  OpCode Conv_U8
  OpCode Callvirt
  OpCode Cpobj
  OpCode Ldobj
  OpCode Ldstr
  OpCode Newobj
  OpCode Castclass
  OpCode Isinst
  OpCode Conv_R_Un
  OpCode Unbox
  OpCode Throw
  OpCode Ldfld
  OpCode Ldflda
  OpCode Stfld
  OpCode Ldsfld
  OpCode Ldsflda
  OpCode Stsfld
  OpCode Stobj
  OpCode Conv_Ovf_I1_Un
  OpCode Conv_Ovf_I2_Un
  OpCode Conv_Ovf_I4_Un
  OpCode Conv_Ovf_I8_Un
  OpCode Conv_Ovf_U1_Un
  OpCode Conv_Ovf_U2_Un
  OpCode Conv_Ovf_U4_Un
  OpCode Conv_Ovf_U8_Un
  OpCode Conv_Ovf_I_Un
  OpCode Conv_Ovf_U_Un
  OpCode Box
  OpCode Newarr
  OpCode Ldlen
  OpCode Ldelema
  OpCode Ldelem_I1
  OpCode Ldelem_U1
  OpCode Ldelem_I2
  OpCode Ldelem_U2
  OpCode Ldelem_I4
  OpCode Ldelem_U4
  OpCode Ldelem_I8
  OpCode Ldelem_I
  OpCode Ldelem_R4
  OpCode Ldelem_R8
  OpCode Ldelem_Ref
  OpCode Stelem_I
  OpCode Stelem_I1
  OpCode Stelem_I2
  OpCode Stelem_I4
  OpCode Stelem_I8
  OpCode Stelem_R4
  OpCode Stelem_R8
  OpCode Stelem_Ref
  OpCode Ldelem
  OpCode Stelem
  OpCode Unbox_Any
  OpCode Conv_Ovf_I1
  OpCode Conv_Ovf_U1
  OpCode Conv_Ovf_I2
  OpCode Conv_Ovf_U2
  OpCode Conv_Ovf_I4
  OpCode Conv_Ovf_U4
  OpCode Conv_Ovf_I8
  OpCode Conv_Ovf_U8
  OpCode Refanyval
  OpCode Ckfinite
  OpCode Mkrefany
  OpCode Ldtoken
  OpCode Conv_U2
  OpCode Conv_U1
  OpCode Conv_I
  OpCode Conv_Ovf_I
  OpCode Conv_Ovf_U
  OpCode Add_Ovf
  OpCode Add_Ovf_Un
  OpCode Mul_Ovf
  OpCode Mul_Ovf_Un
  OpCode Sub_Ovf
  OpCode Sub_Ovf_Un
  OpCode Endfinally
  OpCode Leave
  OpCode Leave_S
  OpCode Stind_I
  OpCode Conv_U
  OpCode Prefix7
  OpCode Prefix6
  OpCode Prefix5
  OpCode Prefix4
  OpCode Prefix3
  OpCode Prefix2
  OpCode Prefix1
  OpCode Prefixref
  OpCode Arglist
  OpCode Ceq
  OpCode Cgt
  OpCode Cgt_Un
  OpCode Clt
  OpCode Clt_Un
  OpCode Ldftn
  OpCode Ldvirtftn
  OpCode Ldarg
  OpCode Ldarga
  OpCode Starg
  OpCode Ldloc
  OpCode Ldloca
  OpCode Stloc
  OpCode Localloc
  OpCode Endfilter
  OpCode Unaligned
  OpCode Volatile
  OpCode Tailcall
  OpCode Initobj
  OpCode Constrained
  OpCode Cpblk
  OpCode Initblk
  OpCode Rethrow
  OpCode Sizeof
  OpCode Refanytype
  OpCode Readonly
Свойства:
Методы:
  void .ctor()
  bool TakesSingleByteArgument(OpCode inst)
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.PEFileKinds
Наследуется от: Enum
Поля:
  int value__
  PEFileKinds Dll
  PEFileKinds ConsoleApplication
  PEFileKinds WindowApplication
Свойства:
Методы:
--------------------------------------------------
Класс: System.Reflection.Emit.ParameterBuilder
Наследуется от: object
Поля:
  MethodBase methodb
  string name
  CustomAttributeBuilder[] cattrs
  UnmanagedMarshal marshal_info
  ParameterAttributes attrs
  int position
  int table_idx
  object def_value
Свойства:
  int Attributes
  bool IsIn
  bool IsOut
  bool IsOptional
  string Name
  int Position
Методы:
  void System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._ParameterBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(MethodBase mb, int pos, ParameterAttributes attributes, string strParamName)
  int get_Attributes()
  bool get_IsIn()
  bool get_IsOut()
  bool get_IsOptional()
  string get_Name()
  int get_Position()
  ParameterToken GetToken()
  void SetConstant(object defaultValue)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  void SetMarshal(UnmanagedMarshal unmanagedMarshal)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.ParameterToken
Наследуется от: ValueType
Поля:
  int tokValue
  ParameterToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(ParameterToken obj)
  bool op_Equality(ParameterToken a, ParameterToken b)
  bool op_Inequality(ParameterToken a, ParameterToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.PropertyBuilder
Наследуется от: PropertyInfo
Поля:
  PropertyAttributes attrs
  string name
  Type type
  Type[] parameters
  CustomAttributeBuilder[] cattrs
  object def_value
  MethodBuilder set_method
  MethodBuilder get_method
  int table_idx
  TypeBuilder typeb
  Type[] returnModReq
  Type[] returnModOpt
  Type[][] paramModReq
  Type[][] paramModOpt
  CallingConventions callingConvention
Свойства:
  PropertyAttributes Attributes
  bool CanRead
  bool CanWrite
  Type DeclaringType
  string Name
  PropertyToken PropertyToken
  Type PropertyType
  Type ReflectedType
  Module Module
Методы:
  void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._PropertyBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor(TypeBuilder tb, string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnModReq, Type[] returnModOpt, Type[] parameterTypes, Type[][] paramModReq, Type[][] paramModOpt)
  PropertyAttributes get_Attributes()
  bool get_CanRead()
  bool get_CanWrite()
  Type get_DeclaringType()
  string get_Name()
  PropertyToken get_PropertyToken()
  Type get_PropertyType()
  Type get_ReflectedType()
  void AddOtherMethod(MethodBuilder mdBuilder)
  MethodInfo[] GetAccessors(bool nonPublic)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  MethodInfo GetGetMethod(bool nonPublic)
  ParameterInfo[] GetIndexParameters()
  MethodInfo GetSetMethod(bool nonPublic)
  object GetValue(object obj, Object[] index)
  object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  void SetConstant(object defaultValue)
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  void SetGetMethod(MethodBuilder mdBuilder)
  void SetSetMethod(MethodBuilder mdBuilder)
  void SetValue(object obj, object value, Object[] index)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  Module get_Module()
  Exception not_supported()
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.PropertyOnTypeBuilderInst
Наследуется от: PropertyInfo
Поля:
  TypeBuilderInstantiation instantiation
  PropertyInfo prop
Свойства:
  PropertyAttributes Attributes
  bool CanRead
  bool CanWrite
  Type PropertyType
  Type DeclaringType
  Type ReflectedType
  string Name
Методы:
  void .ctor(TypeBuilderInstantiation instantiation, PropertyInfo prop)
  PropertyAttributes get_Attributes()
  bool get_CanRead()
  bool get_CanWrite()
  Type get_PropertyType()
  Type get_DeclaringType()
  Type get_ReflectedType()
  string get_Name()
  MethodInfo[] GetAccessors(bool nonPublic)
  MethodInfo GetGetMethod(bool nonPublic)
  ParameterInfo[] GetIndexParameters()
  MethodInfo GetSetMethod(bool nonPublic)
  string ToString()
  object GetValue(object obj, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  void SetValue(object obj, object value, BindingFlags invokeAttr, Binder binder, Object[] index, CultureInfo culture)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
--------------------------------------------------
Класс: System.Reflection.Emit.PropertyToken
Наследуется от: ValueType
Поля:
  int tokValue
  PropertyToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(PropertyToken obj)
  bool op_Equality(PropertyToken a, PropertyToken b)
  bool op_Inequality(PropertyToken a, PropertyToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.SignatureHelper
Наследуется от: object
Поля:
  ModuleBuilder module
  Type[] arguments
  SignatureHelperType type
  Type returnType
  CallingConventions callConv
  CallingConvention unmanagedCallConv
  Type[][] modreqs
  Type[][] modopts
Свойства:
Методы:
  void .ctor(ModuleBuilder module, SignatureHelperType type)
  SignatureHelper GetFieldSigHelper(Module mod)
  SignatureHelper GetLocalVarSigHelper(Module mod)
  SignatureHelper GetLocalVarSigHelper()
  SignatureHelper GetMethodSigHelper(CallingConventions callingConvention, Type returnType)
  SignatureHelper GetMethodSigHelper(CallingConvention unmanagedCallingConvention, Type returnType)
  SignatureHelper GetMethodSigHelper(Module mod, CallingConventions callingConvention, Type returnType)
  SignatureHelper GetMethodSigHelper(Module mod, CallingConvention unmanagedCallConv, Type returnType)
  SignatureHelper GetMethodSigHelper(Module mod, Type returnType, Type[] parameterTypes)
  SignatureHelper GetPropertySigHelper(Module mod, Type returnType, Type[] parameterTypes)
  SignatureHelper GetPropertySigHelper(Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
  SignatureHelper GetPropertySigHelper(Module mod, CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers)
  int AppendArray(Type[]& array, Type t)
  void AppendArrayAt(Type[][]& array, Type[] t, int pos)
  void ValidateParameterModifiers(string name, Type[] parameter_modifiers)
  void ValidateCustomModifier(int n, Type[][] custom_modifiers, string name)
  Exception MissingFeature()
  void AddArguments(Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)
  void AddArgument(Type argument, bool pinned)
  void AddArgument(Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers)
  void AddArgument(Type clsArgument)
  void AddSentinel()
  bool CompareOK(Type[][] one, Type[][] two)
  bool Equals(object obj)
  int GetHashCode()
  Byte[] get_signature_local()
  Byte[] get_signature_field()
  Byte[] GetSignature()
  string ToString()
  SignatureHelper GetMethodSigHelper(Module mod, CallingConventions callingConvention, CallingConvention unmanagedCallingConvention, Type returnType, Type[] parameters)
  void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  void .ctor()
--------------------------------------------------
Класс: System.Reflection.Emit.SignatureToken
Наследуется от: ValueType
Поля:
  int tokValue
  SignatureToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(SignatureToken obj)
  bool op_Equality(SignatureToken a, SignatureToken b)
  bool op_Inequality(SignatureToken a, SignatureToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.StringToken
Наследуется от: ValueType
Поля:
  int tokValue
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(StringToken obj)
  bool op_Equality(StringToken a, StringToken b)
  bool op_Inequality(StringToken a, StringToken b)
  int GetHashCode()
  int get_Token()
--------------------------------------------------
Класс: System.Reflection.Emit.TypeBuilder
Наследуется от: TypeInfo
Поля:
  string tname
  string nspace
  Type parent
  Type nesting_type
  Type[] interfaces
  int num_methods
  MethodBuilder[] methods
  ConstructorBuilder[] ctors
  PropertyBuilder[] properties
  int num_fields
  FieldBuilder[] fields
  EventBuilder[] events
  CustomAttributeBuilder[] cattrs
  TypeBuilder[] subtypes
  TypeAttributes attrs
  int table_idx
  ModuleBuilder pmodule
  int class_size
  PackingSize packing_size
  IntPtr generic_container
  GenericTypeParameterBuilder[] generic_params
  RefEmitPermissionSet[] permissions
  TypeInfo created
  int state
  TypeName fullname
  bool createTypeCalled
  Type underlying_type
  int UnspecifiedTypeSize
Свойства:
  Assembly Assembly
  string AssemblyQualifiedName
  Type BaseType
  Type DeclaringType
  Type UnderlyingSystemType
  string FullName
  Guid GUID
  Module Module
  string Name
  string Namespace
  PackingSize PackingSize
  int Size
  Type ReflectedType
  RuntimeTypeHandle TypeHandle
  TypeToken TypeToken
  bool is_created
  bool ContainsGenericParameters
  bool IsGenericParameter
  GenericParameterAttributes GenericParameterAttributes
  bool IsGenericTypeDefinition
  bool IsGenericType
  int GenericParameterPosition
  MethodBase DeclaringMethod
  bool IsUserType
  bool IsConstructedGenericType
  bool IsTypeDefinition
Методы:
  void System.Runtime.InteropServices._TypeBuilder.GetIDsOfNames(Guid& riid, IntPtr rgszNames, UInt32 cNames, UInt32 lcid, IntPtr rgDispId)
  void System.Runtime.InteropServices._TypeBuilder.GetTypeInfo(UInt32 iTInfo, UInt32 lcid, IntPtr ppTInfo)
  void System.Runtime.InteropServices._TypeBuilder.GetTypeInfoCount(UInt32& pcTInfo)
  void System.Runtime.InteropServices._TypeBuilder.Invoke(UInt32 dispIdMember, Guid& riid, UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr)
  TypeAttributes GetAttributeFlagsImpl()
  void .ctor()
  void .ctor(ModuleBuilder mb, TypeAttributes attr, int table_idx)
  void .ctor(ModuleBuilder mb, string name, TypeAttributes attr, Type parent, Type[] interfaces, PackingSize packing_size, int type_size, Type nesting_type)
  Assembly get_Assembly()
  string get_AssemblyQualifiedName()
  Type get_BaseType()
  Type get_DeclaringType()
  bool IsSubclassOf(Type c)
  Type get_UnderlyingSystemType()
  TypeName GetFullName()
  string get_FullName()
  Guid get_GUID()
  Module get_Module()
  string get_Name()
  string get_Namespace()
  PackingSize get_PackingSize()
  int get_Size()
  Type get_ReflectedType()
  void AddDeclarativeSecurity(SecurityAction action, PermissionSet pset)
  void AddInterfaceImplementation(Type interfaceType)
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  TypeBuilder DefineNestedType(string name)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, Type[] interfaces, PackingSize packSize, int typeSize)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, Type[] interfaces)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, int typeSize)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, PackingSize packSize)
  TypeBuilder DefineNestedType(string name, TypeAttributes attr, Type parent, PackingSize packSize, int typeSize)
  ConstructorBuilder DefineConstructor(MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes)
  ConstructorBuilder DefineConstructor(MethodAttributes attributes, CallingConventions callingConvention, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)
  ConstructorBuilder DefineDefaultConstructor(MethodAttributes attributes)
  void append_method(MethodBuilder mb)
  MethodBuilder DefineMethod(string name, MethodAttributes attributes, Type returnType, Type[] parameterTypes)
  MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
  MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
  MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, CallingConvention nativeCallConv, CharSet nativeCharSet)
  MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers, CallingConvention nativeCallConv, CharSet nativeCharSet)
  MethodBuilder DefinePInvokeMethod(string name, string dllName, MethodAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes, CallingConvention nativeCallConv, CharSet nativeCharSet)
  MethodBuilder DefineMethod(string name, MethodAttributes attributes)
  MethodBuilder DefineMethod(string name, MethodAttributes attributes, CallingConventions callingConvention)
  void DefineMethodOverride(MethodInfo methodInfoBody, MethodInfo methodInfoDeclaration)
  FieldBuilder DefineField(string fieldName, Type type, FieldAttributes attributes)
  FieldBuilder DefineField(string fieldName, Type type, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers, FieldAttributes attributes)
  PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, Type returnType, Type[] parameterTypes)
  PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] parameterTypes)
  PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
  PropertyBuilder DefineProperty(string name, PropertyAttributes attributes, CallingConventions callingConvention, Type returnType, Type[] returnTypeRequiredCustomModifiers, Type[] returnTypeOptionalCustomModifiers, Type[] parameterTypes, Type[][] parameterTypeRequiredCustomModifiers, Type[][] parameterTypeOptionalCustomModifiers)
  ConstructorBuilder DefineTypeInitializer()
  TypeInfo create_runtime_class()
  bool is_nested_in(Type t)
  bool has_ctor_method()
  Type CreateType()
  TypeInfo CreateTypeInfo()
  void ResolveUserTypes()
  void ResolveUserTypes(Type[] types)
  Type ResolveUserType(Type t)
  void FixupTokens(Dictionary`2<int, int> token_map, Dictionary`2<int, MemberInfo> member_map)
  void GenerateDebugInfo(ISymbolWriter symbolWriter)
  ConstructorInfo[] GetConstructors(BindingFlags bindingAttr)
  ConstructorInfo[] GetConstructorsInternal(BindingFlags bindingAttr)
  Type GetElementType()
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  EventInfo[] GetEvents()
  EventInfo[] GetEvents(BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  FieldInfo[] GetFields(BindingFlags bindingAttr)
  Type GetInterface(string name, bool ignoreCase)
  Type[] GetInterfaces()
  MemberInfo[] GetMember(string name, MemberTypes type, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  MethodInfo[] GetMethodsByName(string name, BindingFlags bindingAttr, bool ignoreCase, Type reflected_type)
  MethodInfo[] GetMethods(BindingFlags bindingAttr)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  Type[] GetNestedTypes(BindingFlags bindingAttr)
  PropertyInfo[] GetProperties(BindingFlags bindingAttr)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  bool HasElementTypeImpl()
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsCOMObjectImpl()
  bool IsPointerImpl()
  bool IsPrimitiveImpl()
  bool IsValueTypeImpl()
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakeGenericType(Type[] typeArguments)
  Type MakePointerType()
  RuntimeTypeHandle get_TypeHandle()
  void SetCustomAttribute(CustomAttributeBuilder customBuilder)
  void SetCustomAttribute(ConstructorInfo con, Byte[] binaryAttribute)
  EventBuilder DefineEvent(string name, EventAttributes attributes, Type eventtype)
  FieldBuilder DefineInitializedData(string name, Byte[] data, FieldAttributes attributes)
  FieldBuilder DefineUninitializedData(string name, int size, FieldAttributes attributes)
  TypeToken get_TypeToken()
  void SetParent(Type parent)
  int get_next_table_index(object obj, int table, int count)
  InterfaceMapping GetInterfaceMap(Type interfaceType)
  Type InternalResolve()
  Type RuntimeResolve()
  bool get_is_created()
  Exception not_supported()
  void check_not_created()
  void check_created()
  void check_name(string argName, string name)
  string ToString()
  bool IsAssignableFrom(Type c)
  bool IsAssignableTo(Type c)
  bool IsCreated()
  Type[] GetGenericArguments()
  Type GetGenericTypeDefinition()
  bool get_ContainsGenericParameters()
  bool get_IsGenericParameter()
  GenericParameterAttributes get_GenericParameterAttributes()
  bool get_IsGenericTypeDefinition()
  bool get_IsGenericType()
  int get_GenericParameterPosition()
  MethodBase get_DeclaringMethod()
  GenericTypeParameterBuilder[] DefineGenericParameters(String[] names)
  ConstructorInfo GetConstructor(Type type, ConstructorInfo constructor)
  bool IsValidGetMethodType(Type type)
  MethodInfo GetMethod(Type type, MethodInfo method)
  FieldInfo GetField(Type type, FieldInfo field)
  bool get_IsUserType()
  bool get_IsConstructedGenericType()
  bool IsAssignableFrom(TypeInfo typeInfo)
  bool SetConstantValue(Type destType, object value, Object& destValue)
  void throw_argument_ConstantDoesntMatch()
  bool get_IsTypeDefinition()
--------------------------------------------------
Класс: System.Reflection.Emit.TypeBuilderInstantiation
Наследуется от: TypeInfo
Поля:
  Type generic_type
  Type[] type_arguments
  Hashtable fields
  Hashtable ctors
  Hashtable methods
  BindingFlags flags
Свойства:
  bool IsCreated
  Type BaseType
  Type UnderlyingSystemType
  Assembly Assembly
  Module Module
  string Name
  string Namespace
  string FullName
  string AssemblyQualifiedName
  Guid GUID
  bool ContainsGenericParameters
  bool IsGenericTypeDefinition
  bool IsGenericType
  Type DeclaringType
  RuntimeTypeHandle TypeHandle
  bool IsUserType
  bool IsTypeDefinition
  bool IsConstructedGenericType
Методы:
  void .ctor()
  void .ctor(Type tb, Type[] args)
  Type InternalResolve()
  Type RuntimeResolve()
  bool get_IsCreated()
  Type GetParentType()
  Type InflateType(Type type)
  Type InflateType(Type type, Type[] method_args)
  Type InflateType(Type type, Type[] type_args, Type[] method_args)
  Type get_BaseType()
  Type[] GetInterfaces()
  bool IsValueTypeImpl()
  MethodInfo GetMethod(MethodInfo fromNoninstanciated)
  ConstructorInfo GetConstructor(ConstructorInfo fromNoninstanciated)
  FieldInfo GetField(FieldInfo fromNoninstanciated)
  MethodInfo[] GetMethods(BindingFlags bf)
  ConstructorInfo[] GetConstructors(BindingFlags bf)
  FieldInfo[] GetFields(BindingFlags bf)
  PropertyInfo[] GetProperties(BindingFlags bf)
  EventInfo[] GetEvents(BindingFlags bf)
  Type[] GetNestedTypes(BindingFlags bf)
  bool IsAssignableFrom(Type c)
  Type get_UnderlyingSystemType()
  Assembly get_Assembly()
  Module get_Module()
  string get_Name()
  string get_Namespace()
  string get_FullName()
  string get_AssemblyQualifiedName()
  Guid get_GUID()
  string format_name(bool full_name, bool assembly_qualified)
  string ToString()
  Type GetGenericTypeDefinition()
  Type[] GetGenericArguments()
  bool get_ContainsGenericParameters()
  bool get_IsGenericTypeDefinition()
  bool get_IsGenericType()
  Type get_DeclaringType()
  RuntimeTypeHandle get_TypeHandle()
  Type MakeArrayType()
  Type MakeArrayType(int rank)
  Type MakeByRefType()
  Type MakePointerType()
  Type GetElementType()
  bool HasElementTypeImpl()
  bool IsCOMObjectImpl()
  bool IsPrimitiveImpl()
  bool IsArrayImpl()
  bool IsByRefImpl()
  bool IsPointerImpl()
  TypeAttributes GetAttributeFlagsImpl()
  Type GetInterface(string name, bool ignoreCase)
  EventInfo GetEvent(string name, BindingFlags bindingAttr)
  FieldInfo GetField(string name, BindingFlags bindingAttr)
  MemberInfo[] GetMembers(BindingFlags bindingAttr)
  Type GetNestedType(string name, BindingFlags bindingAttr)
  object InvokeMember(string name, BindingFlags invokeAttr, Binder binder, object target, Object[] args, ParameterModifier[] modifiers, CultureInfo culture, String[] namedParameters)
  MethodInfo GetMethodImpl(string name, BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  PropertyInfo GetPropertyImpl(string name, BindingFlags bindingAttr, Binder binder, Type returnType, Type[] types, ParameterModifier[] modifiers)
  ConstructorInfo GetConstructorImpl(BindingFlags bindingAttr, Binder binder, CallingConventions callConvention, Type[] types, ParameterModifier[] modifiers)
  bool IsDefined(Type attributeType, bool inherit)
  Object[] GetCustomAttributes(bool inherit)
  Object[] GetCustomAttributes(Type attributeType, bool inherit)
  bool get_IsUserType()
  Type MakeGenericType(Type type, Type[] typeArguments)
  bool get_IsTypeDefinition()
  bool get_IsConstructedGenericType()
--------------------------------------------------
Класс: System.Reflection.Emit.TypeToken
Наследуется от: ValueType
Поля:
  int tokValue
  TypeToken Empty
Свойства:
  int Token
Методы:
  void .ctor(int val)
  bool Equals(object obj)
  bool Equals(TypeToken obj)
  bool op_Equality(TypeToken a, TypeToken b)
  bool op_Inequality(TypeToken a, TypeToken b)
  int GetHashCode()
  int get_Token()
  void .cctor()
--------------------------------------------------
Класс: System.Reflection.Emit.UnmanagedMarshal
Наследуется от: object
Поля:
  int count
  UnmanagedType t
  UnmanagedType tbase
  string guid
  string mcookie
  string marshaltype
  Type marshaltyperef
  int param_num
  bool has_size
Свойства:
  UnmanagedType BaseType
  int ElementCount
  UnmanagedType GetUnmanagedType
  Guid IIDGuid
Методы:
  void .ctor(UnmanagedType maint, int cnt)
  void .ctor(UnmanagedType maint, UnmanagedType elemt)
  UnmanagedType get_BaseType()
  int get_ElementCount()
  UnmanagedType get_GetUnmanagedType()
  Guid get_IIDGuid()
  UnmanagedMarshal DefineByValArray(int elemCount)
  UnmanagedMarshal DefineByValTStr(int elemCount)
  UnmanagedMarshal DefineLPArray(UnmanagedType elemType)
  UnmanagedMarshal DefineSafeArray(UnmanagedType elemType)
  UnmanagedMarshal DefineUnmanagedMarshal(UnmanagedType unmanagedType)
  UnmanagedMarshal DefineCustom(Type typeref, string cookie, string mtype, Guid id)
  UnmanagedMarshal DefineLPArrayInternal(UnmanagedType elemType, int sizeConst, int sizeParamIndex)
  void .ctor()
--------------------------------------------------
Класс: System.Numerics.ConstantHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  byte GetByteWithAllBitsSet()
  sbyte GetSByteWithAllBitsSet()
  ushort GetUInt16WithAllBitsSet()
  short GetInt16WithAllBitsSet()
  UInt32 GetUInt32WithAllBitsSet()
  int GetInt32WithAllBitsSet()
  ulong GetUInt64WithAllBitsSet()
  long GetInt64WithAllBitsSet()
  float GetSingleWithAllBitsSet()
  double GetDoubleWithAllBitsSet()
  void .ctor()
--------------------------------------------------
Класс: System.Numerics.Register
Наследуется от: ValueType
Поля:
  byte byte_0
  byte byte_1
  byte byte_2
  byte byte_3
  byte byte_4
  byte byte_5
  byte byte_6
  byte byte_7
  byte byte_8
  byte byte_9
  byte byte_10
  byte byte_11
  byte byte_12
  byte byte_13
  byte byte_14
  byte byte_15
  sbyte sbyte_0
  sbyte sbyte_1
  sbyte sbyte_2
  sbyte sbyte_3
  sbyte sbyte_4
  sbyte sbyte_5
  sbyte sbyte_6
  sbyte sbyte_7
  sbyte sbyte_8
  sbyte sbyte_9
  sbyte sbyte_10
  sbyte sbyte_11
  sbyte sbyte_12
  sbyte sbyte_13
  sbyte sbyte_14
  sbyte sbyte_15
  ushort uint16_0
  ushort uint16_1
  ushort uint16_2
  ushort uint16_3
  ushort uint16_4
  ushort uint16_5
  ushort uint16_6
  ushort uint16_7
  short int16_0
  short int16_1
  short int16_2
  short int16_3
  short int16_4
  short int16_5
  short int16_6
  short int16_7
  UInt32 uint32_0
  UInt32 uint32_1
  UInt32 uint32_2
  UInt32 uint32_3
  int int32_0
  int int32_1
  int int32_2
  int int32_3
  ulong uint64_0
  ulong uint64_1
  long int64_0
  long int64_1
  float single_0
  float single_1
  float single_2
  float single_3
  double double_0
  double double_1
Свойства:
Методы:
--------------------------------------------------
Класс: System.Numerics.Vector`1
Наследуется от: ValueType
Поля:
  Register register
  int s_count
  Vector`1<T> s_zero
  Vector`1<T> s_one
  Vector`1<T> s_allOnes
Свойства:
  int Count
  Vector`1<T> Zero
  Vector`1<T> One
  Vector`1<T> AllOnes
  T Item
Методы:
  int get_Count()
  Vector`1<T> get_Zero()
  Vector`1<T> get_One()
  Vector`1<T> get_AllOnes()
  int InitializeCount()
  void .ctor(T value)
  void .ctor(T[] values)
  void .ctor(Span`1<T> values)
  void .ctor(T[] values, int index)
  void .ctor(Void* dataPointer)
  void .ctor(Void* dataPointer, int offset)
  void .ctor(Register& existingRegister)
  void CopyTo(T[] destination)
  void CopyTo(T[] destination, int startIndex)
  T get_Item(int index)
  bool Equals(object obj)
  bool Equals(Vector`1<T> other)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  Vector`1<T> op_Addition(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_Subtraction(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_Multiply(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_Multiply(Vector`1<T> value, T factor)
  Vector`1<T> op_Multiply(T factor, Vector`1<T> value)
  Vector`1<T> op_Division(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_UnaryNegation(Vector`1<T> value)
  Vector`1<T> op_BitwiseAnd(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_BitwiseOr(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_ExclusiveOr(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> op_OnesComplement(Vector`1<T> value)
  bool op_Equality(Vector`1<T> left, Vector`1<T> right)
  bool op_Inequality(Vector`1<T> left, Vector`1<T> right)
  Vector`1<byte> op_Explicit(Vector`1<T> value)
  Vector`1<sbyte> op_Explicit(Vector`1<T> value)
  Vector`1<ushort> op_Explicit(Vector`1<T> value)
  Vector`1<short> op_Explicit(Vector`1<T> value)
  Vector`1<UInt32> op_Explicit(Vector`1<T> value)
  Vector`1<int> op_Explicit(Vector`1<T> value)
  Vector`1<ulong> op_Explicit(Vector`1<T> value)
  Vector`1<long> op_Explicit(Vector`1<T> value)
  Vector`1<float> op_Explicit(Vector`1<T> value)
  Vector`1<double> op_Explicit(Vector`1<T> value)
  Vector`1<T> Equals(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> LessThan(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> GreaterThan(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> GreaterThanOrEqual(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> LessThanOrEqual(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> ConditionalSelect(Vector`1<T> condition, Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Abs(Vector`1<T> value)
  Vector`1<T> Min(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Max(Vector`1<T> left, Vector`1<T> right)
  T DotProduct(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> SquareRoot(Vector`1<T> value)
  bool ScalarEquals(T left, T right)
  bool ScalarLessThan(T left, T right)
  bool ScalarGreaterThan(T left, T right)
  T ScalarAdd(T left, T right)
  T ScalarSubtract(T left, T right)
  T ScalarMultiply(T left, T right)
  T ScalarDivide(T left, T right)
  T GetOneValue()
  T GetAllBitsSetValue()
  void .cctor()
--------------------------------------------------
Класс: System.Numerics.Vector
Наследуется от: object
Поля:
Свойства:
  bool IsHardwareAccelerated
Методы:
  void Widen(Vector`1<byte> source, Vector`1& low, Vector`1& high)
  void Widen(Vector`1<ushort> source, Vector`1& low, Vector`1& high)
  void Widen(Vector`1<UInt32> source, Vector`1& low, Vector`1& high)
  void Widen(Vector`1<sbyte> source, Vector`1& low, Vector`1& high)
  void Widen(Vector`1<short> source, Vector`1& low, Vector`1& high)
  void Widen(Vector`1<int> source, Vector`1& low, Vector`1& high)
  void Widen(Vector`1<float> source, Vector`1& low, Vector`1& high)
  Vector`1<byte> Narrow(Vector`1<ushort> low, Vector`1<ushort> high)
  Vector`1<ushort> Narrow(Vector`1<UInt32> low, Vector`1<UInt32> high)
  Vector`1<UInt32> Narrow(Vector`1<ulong> low, Vector`1<ulong> high)
  Vector`1<sbyte> Narrow(Vector`1<short> low, Vector`1<short> high)
  Vector`1<short> Narrow(Vector`1<int> low, Vector`1<int> high)
  Vector`1<int> Narrow(Vector`1<long> low, Vector`1<long> high)
  Vector`1<float> Narrow(Vector`1<double> low, Vector`1<double> high)
  Vector`1<float> ConvertToSingle(Vector`1<int> value)
  Vector`1<float> ConvertToSingle(Vector`1<UInt32> value)
  Vector`1<double> ConvertToDouble(Vector`1<long> value)
  Vector`1<double> ConvertToDouble(Vector`1<ulong> value)
  Vector`1<int> ConvertToInt32(Vector`1<float> value)
  Vector`1<UInt32> ConvertToUInt32(Vector`1<float> value)
  Vector`1<long> ConvertToInt64(Vector`1<double> value)
  Vector`1<ulong> ConvertToUInt64(Vector`1<double> value)
  Vector`1<float> ConditionalSelect(Vector`1<int> condition, Vector`1<float> left, Vector`1<float> right)
  Vector`1<double> ConditionalSelect(Vector`1<long> condition, Vector`1<double> left, Vector`1<double> right)
  Vector`1<T> ConditionalSelect(Vector`1<T> condition, Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Equals(Vector`1<T> left, Vector`1<T> right)
  Vector`1<int> Equals(Vector`1<float> left, Vector`1<float> right)
  Vector`1<int> Equals(Vector`1<int> left, Vector`1<int> right)
  Vector`1<long> Equals(Vector`1<double> left, Vector`1<double> right)
  Vector`1<long> Equals(Vector`1<long> left, Vector`1<long> right)
  bool EqualsAll(Vector`1<T> left, Vector`1<T> right)
  bool EqualsAny(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> LessThan(Vector`1<T> left, Vector`1<T> right)
  Vector`1<int> LessThan(Vector`1<float> left, Vector`1<float> right)
  Vector`1<int> LessThan(Vector`1<int> left, Vector`1<int> right)
  Vector`1<long> LessThan(Vector`1<double> left, Vector`1<double> right)
  Vector`1<long> LessThan(Vector`1<long> left, Vector`1<long> right)
  bool LessThanAll(Vector`1<T> left, Vector`1<T> right)
  bool LessThanAny(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> LessThanOrEqual(Vector`1<T> left, Vector`1<T> right)
  Vector`1<int> LessThanOrEqual(Vector`1<float> left, Vector`1<float> right)
  Vector`1<int> LessThanOrEqual(Vector`1<int> left, Vector`1<int> right)
  Vector`1<long> LessThanOrEqual(Vector`1<long> left, Vector`1<long> right)
  Vector`1<long> LessThanOrEqual(Vector`1<double> left, Vector`1<double> right)
  bool LessThanOrEqualAll(Vector`1<T> left, Vector`1<T> right)
  bool LessThanOrEqualAny(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> GreaterThan(Vector`1<T> left, Vector`1<T> right)
  Vector`1<int> GreaterThan(Vector`1<float> left, Vector`1<float> right)
  Vector`1<int> GreaterThan(Vector`1<int> left, Vector`1<int> right)
  Vector`1<long> GreaterThan(Vector`1<double> left, Vector`1<double> right)
  Vector`1<long> GreaterThan(Vector`1<long> left, Vector`1<long> right)
  bool GreaterThanAll(Vector`1<T> left, Vector`1<T> right)
  bool GreaterThanAny(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> GreaterThanOrEqual(Vector`1<T> left, Vector`1<T> right)
  Vector`1<int> GreaterThanOrEqual(Vector`1<float> left, Vector`1<float> right)
  Vector`1<int> GreaterThanOrEqual(Vector`1<int> left, Vector`1<int> right)
  Vector`1<long> GreaterThanOrEqual(Vector`1<long> left, Vector`1<long> right)
  Vector`1<long> GreaterThanOrEqual(Vector`1<double> left, Vector`1<double> right)
  bool GreaterThanOrEqualAll(Vector`1<T> left, Vector`1<T> right)
  bool GreaterThanOrEqualAny(Vector`1<T> left, Vector`1<T> right)
  bool get_IsHardwareAccelerated()
  Vector`1<T> Abs(Vector`1<T> value)
  Vector`1<T> Min(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Max(Vector`1<T> left, Vector`1<T> right)
  T Dot(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> SquareRoot(Vector`1<T> value)
  Vector`1<T> Add(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Subtract(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Multiply(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Multiply(Vector`1<T> left, T right)
  Vector`1<T> Multiply(T left, Vector`1<T> right)
  Vector`1<T> Divide(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> Negate(Vector`1<T> value)
  Vector`1<T> BitwiseAnd(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> BitwiseOr(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> OnesComplement(Vector`1<T> value)
  Vector`1<T> Xor(Vector`1<T> left, Vector`1<T> right)
  Vector`1<T> AndNot(Vector`1<T> left, Vector`1<T> right)
  Vector`1<byte> AsVectorByte(Vector`1<T> value)
  Vector`1<sbyte> AsVectorSByte(Vector`1<T> value)
  Vector`1<ushort> AsVectorUInt16(Vector`1<T> value)
  Vector`1<short> AsVectorInt16(Vector`1<T> value)
  Vector`1<UInt32> AsVectorUInt32(Vector`1<T> value)
  Vector`1<int> AsVectorInt32(Vector`1<T> value)
  Vector`1<ulong> AsVectorUInt64(Vector`1<T> value)
  Vector`1<long> AsVectorInt64(Vector`1<T> value)
  Vector`1<float> AsVectorSingle(Vector`1<T> value)
  Vector`1<double> AsVectorDouble(Vector`1<T> value)
--------------------------------------------------
Класс: System.Numerics.Hashing.HashHelpers
Наследуется от: object
Поля:
  int RandomSeed
Свойства:
Методы:
  int Combine(int h1, int h2)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.BidiCategory
Наследуется от: Enum
Поля:
  int value__
  BidiCategory LeftToRight
  BidiCategory LeftToRightEmbedding
  BidiCategory LeftToRightOverride
  BidiCategory RightToLeft
  BidiCategory RightToLeftArabic
  BidiCategory RightToLeftEmbedding
  BidiCategory RightToLeftOverride
  BidiCategory PopDirectionalFormat
  BidiCategory EuropeanNumber
  BidiCategory EuropeanNumberSeparator
  BidiCategory EuropeanNumberTerminator
  BidiCategory ArabicNumber
  BidiCategory CommonNumberSeparator
  BidiCategory NonSpacingMark
  BidiCategory BoundaryNeutral
  BidiCategory ParagraphSeparator
  BidiCategory SegmentSeparator
  BidiCategory Whitespace
  BidiCategory OtherNeutrals
  BidiCategory LeftToRightIsolate
  BidiCategory RightToLeftIsolate
  BidiCategory FirstStrongIsolate
  BidiCategory PopDirectionIsolate
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.CalendarAlgorithmType
Наследуется от: Enum
Поля:
  int value__
  CalendarAlgorithmType Unknown
  CalendarAlgorithmType SolarCalendar
  CalendarAlgorithmType LunarCalendar
  CalendarAlgorithmType LunisolarCalendar
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.CalendarWeekRule
Наследуется от: Enum
Поля:
  int value__
  CalendarWeekRule FirstDay
  CalendarWeekRule FirstFullWeek
  CalendarWeekRule FirstFourDayWeek
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.CharUnicodeInfo
Наследуется от: object
Поля:
  char HIGH_SURROGATE_START
  char HIGH_SURROGATE_END
  char LOW_SURROGATE_START
  char LOW_SURROGATE_END
  int HIGH_SURROGATE_RANGE
  int UNICODE_CATEGORY_OFFSET
  int BIDI_CATEGORY_OFFSET
  int UNICODE_PLANE01_START
Свойства:
  ReadOnlySpan`1<byte> CategoryLevel1Index
  ReadOnlySpan`1<byte> CategoryLevel2Index
  ReadOnlySpan`1<byte> CategoryLevel3Index
  ReadOnlySpan`1<byte> CategoriesValue
  ReadOnlySpan`1<byte> NumericLevel1Index
  ReadOnlySpan`1<byte> NumericLevel2Index
  ReadOnlySpan`1<byte> NumericLevel3Index
  ReadOnlySpan`1<byte> NumericValues
  ReadOnlySpan`1<byte> DigitValues
Методы:
  int InternalConvertToUtf32(string s, int index)
  int InternalConvertToUtf32(StringBuilder s, int index)
  int InternalConvertToUtf32(string s, int index, Int32& charLength)
  double InternalGetNumericValue(int ch)
  byte InternalGetDigitValues(int ch, int offset)
  double GetNumericValue(char ch)
  double GetNumericValue(string s, int index)
  int GetDecimalDigitValue(char ch)
  int GetDecimalDigitValue(string s, int index)
  int GetDigitValue(char ch)
  int GetDigitValue(string s, int index)
  UnicodeCategory GetUnicodeCategory(char ch)
  UnicodeCategory GetUnicodeCategory(string s, int index)
  UnicodeCategory GetUnicodeCategory(int codePoint)
  byte InternalGetCategoryValue(int ch, int offset)
  UnicodeCategory InternalGetUnicodeCategory(string value, int index)
  BidiCategory GetBidiCategory(string s, int index)
  BidiCategory GetBidiCategory(StringBuilder s, int index)
  UnicodeCategory InternalGetUnicodeCategory(string str, int index, Int32& charLength)
  bool IsCombiningCategory(UnicodeCategory uc)
  bool IsWhiteSpace(string s, int index)
  bool IsWhiteSpace(char c)
  ReadOnlySpan`1<byte> get_CategoryLevel1Index()
  ReadOnlySpan`1<byte> get_CategoryLevel2Index()
  ReadOnlySpan`1<byte> get_CategoryLevel3Index()
  ReadOnlySpan`1<byte> get_CategoriesValue()
  ReadOnlySpan`1<byte> get_NumericLevel1Index()
  ReadOnlySpan`1<byte> get_NumericLevel2Index()
  ReadOnlySpan`1<byte> get_NumericLevel3Index()
  ReadOnlySpan`1<byte> get_NumericValues()
  ReadOnlySpan`1<byte> get_DigitValues()
--------------------------------------------------
Класс: System.Globalization.CompareInfo
Наследуется от: object
Поля:
  CompareOptions ValidIndexMaskOffFlags
  CompareOptions ValidCompareMaskOffFlags
  CompareOptions ValidHashCodeOfStringMaskOffFlags
  CompareOptions ValidSortkeyCtorMaskOffFlags
  CompareInfo Invariant
  string m_name
  string _sortName
  SortVersion m_SortVersion
  int culture
  ISimpleCollator collator
  Dictionary`2<string, ISimpleCollator> collators
  bool managedCollation
  bool managedCollationChecked
Свойства:
  string Name
  SortVersion Version
  int LCID
  bool UseManagedCollation
Методы:
  int InvariantIndexOf(string source, string value, int startIndex, int count, bool ignoreCase)
  int InvariantIndexOf(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> value, bool ignoreCase)
  int InvariantLastIndexOf(string source, string value, int startIndex, int count, bool ignoreCase)
  int InvariantFindString(Char* source, int sourceCount, Char* value, int valueCount, bool ignoreCase, bool start)
  char InvariantToUpper(char c)
  SortKey InvariantCreateSortKey(string source, CompareOptions options)
  void .ctor(CultureInfo culture)
  CompareInfo GetCompareInfo(int culture, Assembly assembly)
  CompareInfo GetCompareInfo(string name, Assembly assembly)
  CompareInfo GetCompareInfo(int culture)
  CompareInfo GetCompareInfo(string name)
  bool IsSortable(char ch)
  bool IsSortable(string text)
  void OnDeserializing(StreamingContext ctx)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void OnDeserialized(StreamingContext ctx)
  void OnDeserialized()
  void OnSerializing(StreamingContext ctx)
  string get_Name()
  int Compare(string string1, string string2)
  int Compare(string string1, string string2, CompareOptions options)
  int Compare(ReadOnlySpan`1<char> string1, string string2, CompareOptions options)
  int CompareOptionNone(ReadOnlySpan`1<char> string1, ReadOnlySpan`1<char> string2)
  int CompareOptionIgnoreCase(ReadOnlySpan`1<char> string1, ReadOnlySpan`1<char> string2)
  int Compare(string string1, int offset1, int length1, string string2, int offset2, int length2)
  int Compare(string string1, int offset1, string string2, int offset2, CompareOptions options)
  int Compare(string string1, int offset1, string string2, int offset2)
  int Compare(string string1, int offset1, int length1, string string2, int offset2, int length2, CompareOptions options)
  int CompareOrdinalIgnoreCase(string strA, int indexA, int lengthA, string strB, int indexB, int lengthB)
  int CompareOrdinalIgnoreCase(ReadOnlySpan`1<char> strA, ReadOnlySpan`1<char> strB)
  bool IsPrefix(string source, string prefix, CompareOptions options)
  bool IsPrefix(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> prefix, CompareOptions options)
  bool IsPrefix(string source, string prefix)
  bool IsSuffix(string source, string suffix, CompareOptions options)
  bool IsSuffix(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> suffix, CompareOptions options)
  bool IsSuffix(string source, string suffix)
  int IndexOf(string source, char value)
  int IndexOf(string source, string value)
  int IndexOf(string source, char value, CompareOptions options)
  int IndexOf(string source, string value, CompareOptions options)
  int IndexOf(string source, char value, int startIndex)
  int IndexOf(string source, string value, int startIndex)
  int IndexOf(string source, char value, int startIndex, CompareOptions options)
  int IndexOf(string source, string value, int startIndex, CompareOptions options)
  int IndexOf(string source, char value, int startIndex, int count)
  int IndexOf(string source, string value, int startIndex, int count)
  int IndexOf(string source, char value, int startIndex, int count, CompareOptions options)
  int IndexOf(string source, string value, int startIndex, int count, CompareOptions options)
  int IndexOfOrdinal(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> value, bool ignoreCase)
  int IndexOf(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> value, CompareOptions options)
  int IndexOf(string source, string value, int startIndex, int count, CompareOptions options, Int32* matchLengthPtr)
  int IndexOfOrdinal(string source, string value, int startIndex, int count, bool ignoreCase)
  int LastIndexOf(string source, char value)
  int LastIndexOf(string source, string value)
  int LastIndexOf(string source, char value, CompareOptions options)
  int LastIndexOf(string source, string value, CompareOptions options)
  int LastIndexOf(string source, char value, int startIndex)
  int LastIndexOf(string source, string value, int startIndex)
  int LastIndexOf(string source, char value, int startIndex, CompareOptions options)
  int LastIndexOf(string source, string value, int startIndex, CompareOptions options)
  int LastIndexOf(string source, char value, int startIndex, int count)
  int LastIndexOf(string source, string value, int startIndex, int count)
  int LastIndexOf(string source, char value, int startIndex, int count, CompareOptions options)
  int LastIndexOf(string source, string value, int startIndex, int count, CompareOptions options)
  int LastIndexOfOrdinal(string source, string value, int startIndex, int count, bool ignoreCase)
  SortKey GetSortKey(string source, CompareOptions options)
  SortKey GetSortKey(string source)
  bool Equals(object value)
  int GetHashCode()
  int GetIgnoreCaseHash(string source)
  int GetHashCodeOfString(string source, CompareOptions options)
  int GetHashCode(string source, CompareOptions options)
  string ToString()
  SortVersion get_Version()
  int get_LCID()
  bool get_UseManagedCollation()
  ISimpleCollator GetCollator()
  SortKey CreateSortKeyCore(string source, CompareOptions options)
  int internal_index_switch(string s1, int sindex, int count, string s2, CompareOptions opt, bool first)
  int internal_compare_switch(string str1, int offset1, int length1, string str2, int offset2, int length2, CompareOptions options)
  int internal_compare_managed(string str1, int offset1, int length1, string str2, int offset2, int length2, CompareOptions options)
  int internal_index_managed(string s, int sindex, int count, char c, CompareOptions opt, bool first)
  int internal_index_managed(string s1, int sindex, int count, string s2, CompareOptions opt, bool first)
  int internal_compare_icall(Char* str1, int length1, Char* str2, int length2, CompareOptions options)
  int internal_compare(string str1, int offset1, int length1, string str2, int offset2, int length2, CompareOptions options)
  int internal_index_icall(Char* source, int sindex, int count, Char* value, int value_length, bool first)
  int internal_index(string source, int sindex, int count, string value, bool first)
  void InitSort(CultureInfo culture)
  int CompareStringOrdinalIgnoreCase(Char* pString1, int length1, Char* pString2, int length2)
  int IndexOfOrdinalCore(string source, string value, int startIndex, int count, bool ignoreCase)
  int LastIndexOfOrdinalCore(string source, string value, int startIndex, int count, bool ignoreCase)
  int LastIndexOfCore(string source, string target, int startIndex, int count, CompareOptions options)
  int IndexOfCore(string source, string target, int startIndex, int count, CompareOptions options, Int32* matchLengthPtr)
  int IndexOfCore(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> target, CompareOptions options, Int32* matchLengthPtr)
  int IndexOfOrdinalCore(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> value, bool ignoreCase)
  int CompareString(ReadOnlySpan`1<char> string1, string string2, CompareOptions options)
  int CompareString(ReadOnlySpan`1<char> string1, ReadOnlySpan`1<char> string2, CompareOptions options)
  bool IsSortable(Char* text, int length)
  SortKey CreateSortKey(string source, CompareOptions options)
  bool StartsWith(string source, string prefix, CompareOptions options)
  bool StartsWith(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> prefix, CompareOptions options)
  bool EndsWith(string source, string suffix, CompareOptions options)
  bool EndsWith(ReadOnlySpan`1<char> source, ReadOnlySpan`1<char> suffix, CompareOptions options)
  int GetHashCodeOfStringCore(string source, CompareOptions options)
  SortVersion GetSortVersion()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.CompareOptions
Наследуется от: Enum
Поля:
  int value__
  CompareOptions None
  CompareOptions IgnoreCase
  CompareOptions IgnoreNonSpace
  CompareOptions IgnoreSymbols
  CompareOptions IgnoreKanaType
  CompareOptions IgnoreWidth
  CompareOptions OrdinalIgnoreCase
  CompareOptions StringSort
  CompareOptions Ordinal
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.CultureNotFoundException
Наследуется от: ArgumentException
Поля:
  string _invalidCultureName
  Nullable`1<int> _invalidCultureId
Свойства:
  Nullable`1<int> InvalidCultureId
  string InvalidCultureName
  string DefaultMessage
  string FormatedInvalidCultureId
  string Message
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string paramName, string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string paramName, string invalidCultureName, string message)
  void .ctor(string message, string invalidCultureName, Exception innerException)
  void .ctor(string message, int invalidCultureId, Exception innerException)
  void .ctor(string paramName, int invalidCultureId, string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  Nullable`1<int> get_InvalidCultureId()
  string get_InvalidCultureName()
  string get_DefaultMessage()
  string get_FormatedInvalidCultureId()
  string get_Message()
--------------------------------------------------
Класс: System.Globalization.CultureTypes
Наследуется от: Enum
Поля:
  int value__
  CultureTypes NeutralCultures
  CultureTypes SpecificCultures
  CultureTypes InstalledWin32Cultures
  CultureTypes AllCultures
  CultureTypes UserCustomCulture
  CultureTypes ReplacementCultures
  CultureTypes WindowsOnlyCultures
  CultureTypes FrameworkCultures
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.MonthNameStyles
Наследуется от: Enum
Поля:
  int value__
  MonthNameStyles Regular
  MonthNameStyles Genitive
  MonthNameStyles LeapYear
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.DateTimeFormatFlags
Наследуется от: Enum
Поля:
  int value__
  DateTimeFormatFlags None
  DateTimeFormatFlags UseGenitiveMonth
  DateTimeFormatFlags UseLeapYearMonth
  DateTimeFormatFlags UseSpacesInMonthNames
  DateTimeFormatFlags UseHebrewRule
  DateTimeFormatFlags UseSpacesInDayNames
  DateTimeFormatFlags UseDigitPrefixInTokens
  DateTimeFormatFlags NotInitialized
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.DateTimeFormatInfo
Наследуется от: object
Поля:
  DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) s_invariantInfo
  CultureData _cultureData
  string _name
  string _langName
  CompareInfo _compareInfo
  CultureInfo _cultureInfo
  string amDesignator
  string pmDesignator
  string dateSeparator
  string generalShortTimePattern
  string generalLongTimePattern
  string timeSeparator
  string monthDayPattern
  string dateTimeOffsetPattern
  string rfc1123Pattern
  string sortableDateTimePattern
  string universalSortableDateTimePattern
  Calendar calendar
  int firstDayOfWeek
  int calendarWeekRule
  string fullDateTimePattern
  String[] abbreviatedDayNames
  String[] m_superShortDayNames
  String[] dayNames
  String[] abbreviatedMonthNames
  String[] monthNames
  String[] genitiveMonthNames
  String[] m_genitiveAbbreviatedMonthNames
  String[] leapYearMonthNames
  string longDatePattern
  string shortDatePattern
  string yearMonthPattern
  string longTimePattern
  string shortTimePattern
  String[] allYearMonthPatterns
  String[] allShortDatePatterns
  String[] allLongDatePatterns
  String[] allShortTimePatterns
  String[] allLongTimePatterns
  String[] m_eraNames
  String[] m_abbrevEraNames
  String[] m_abbrevEnglishEraNames
  CalendarId[] optionalCalendars
  int DEFAULT_ALL_DATETIMES_SIZE
  bool _isReadOnly
  DateTimeFormatFlags formatFlags
  Char[] s_monthSpaces
  string RoundtripFormat
  string RoundtripDateTimeUnfixed
  string _fullTimeSpanPositivePattern
  string _fullTimeSpanNegativePattern
  DateTimeStyles InvalidDateTimeStyles
  TokenHashValue[] _dtfiTokenHash
  int TOKEN_HASH_SIZE
  int SECOND_PRIME
  string dateSeparatorOrTimeZoneOffset
  string invariantDateSeparator
  string invariantTimeSeparator
  string IgnorablePeriod
  string IgnorableComma
  string CJKYearSuff
  string CJKMonthSuff
  string CJKDaySuff
  string KoreanYearSuff
  string KoreanMonthSuff
  string KoreanDaySuff
  string KoreanHourSuff
  string KoreanMinuteSuff
  string KoreanSecondSuff
  string CJKHourSuff
  string ChineseHourSuff
  string CJKMinuteSuff
  string CJKSecondSuff
  string JapaneseEraStart
  string LocalTimeMark
  string GMTName
  string ZuluName
  string KoreanLangName
  string JapaneseLangName
  string EnglishLangName
  DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) s_jajpDTFI
  DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) s_zhtwDTFI
Свойства:
  string CultureName
  CultureInfo Culture
  string LanguageName
  DateTimeFormatInfo InvariantInfo
  DateTimeFormatInfo CurrentInfo
  string AMDesignator
  Calendar Calendar
  CalendarId[] OptionalCalendars
  String[] EraNames
  String[] AbbreviatedEraNames
  String[] AbbreviatedEnglishEraNames
  string DateSeparator
  DayOfWeek FirstDayOfWeek
  CalendarWeekRule CalendarWeekRule
  string FullDateTimePattern
  string LongDatePattern
  string LongTimePattern
  string MonthDayPattern
  string PMDesignator
  string RFC1123Pattern
  string ShortDatePattern
  string ShortTimePattern
  string SortableDateTimePattern
  string GeneralShortTimePattern
  string GeneralLongTimePattern
  string DateTimeOffsetPattern
  string TimeSeparator
  string UniversalSortableDateTimePattern
  string YearMonthPattern
  String[] AbbreviatedDayNames
  String[] ShortestDayNames
  String[] DayNames
  String[] AbbreviatedMonthNames
  String[] MonthNames
  bool HasSpacesInMonthNames
  bool HasSpacesInDayNames
  String[] AllYearMonthPatterns
  String[] AllShortDatePatterns
  String[] AllShortTimePatterns
  String[] AllLongDatePatterns
  String[] AllLongTimePatterns
  String[] UnclonedYearMonthPatterns
  String[] UnclonedShortDatePatterns
  String[] UnclonedLongDatePatterns
  String[] UnclonedShortTimePatterns
  String[] UnclonedLongTimePatterns
  bool IsReadOnly
  string NativeCalendarName
  String[] AbbreviatedMonthGenitiveNames
  String[] MonthGenitiveNames
  string FullTimeSpanPositivePattern
  string FullTimeSpanNegativePattern
  CompareInfo CompareInfo
  DateTimeFormatFlags FormatFlags
  bool HasForceTwoDigitYears
  bool HasYearMonthAdjustment
Методы:
  string get_CultureName()
  CultureInfo get_Culture()
  string get_LanguageName()
  String[] internalGetAbbreviatedDayOfWeekNames()
  String[] internalGetAbbreviatedDayOfWeekNamesCore()
  String[] internalGetSuperShortDayNames()
  String[] internalGetSuperShortDayNamesCore()
  String[] internalGetDayOfWeekNames()
  String[] internalGetDayOfWeekNamesCore()
  String[] internalGetAbbreviatedMonthNames()
  String[] internalGetAbbreviatedMonthNamesCore()
  String[] internalGetMonthNames()
  String[] internalGetMonthNamesCore()
  void .ctor()
  void .ctor(CultureData cultureData, Calendar cal)
  void InitializeOverridableProperties(CultureData cultureData, int calendarId)
  DateTimeFormatInfo get_InvariantInfo()
  DateTimeFormatInfo get_CurrentInfo()
  DateTimeFormatInfo GetInstance(IFormatProvider provider)
  object GetFormat(Type formatType)
  object Clone()
  string get_AMDesignator()
  void set_AMDesignator(string value)
  Calendar get_Calendar()
  void set_Calendar(Calendar value)
  CalendarId[] get_OptionalCalendars()
  int GetEra(string eraName)
  String[] get_EraNames()
  string GetEraName(int era)
  String[] get_AbbreviatedEraNames()
  string GetAbbreviatedEraName(int era)
  String[] get_AbbreviatedEnglishEraNames()
  string get_DateSeparator()
  void set_DateSeparator(string value)
  DayOfWeek get_FirstDayOfWeek()
  void set_FirstDayOfWeek(DayOfWeek value)
  CalendarWeekRule get_CalendarWeekRule()
  void set_CalendarWeekRule(CalendarWeekRule value)
  string get_FullDateTimePattern()
  void set_FullDateTimePattern(string value)
  string get_LongDatePattern()
  void set_LongDatePattern(string value)
  string get_LongTimePattern()
  void set_LongTimePattern(string value)
  string get_MonthDayPattern()
  void set_MonthDayPattern(string value)
  string get_PMDesignator()
  void set_PMDesignator(string value)
  string get_RFC1123Pattern()
  string get_ShortDatePattern()
  void set_ShortDatePattern(string value)
  string get_ShortTimePattern()
  void set_ShortTimePattern(string value)
  string get_SortableDateTimePattern()
  string get_GeneralShortTimePattern()
  string get_GeneralLongTimePattern()
  string get_DateTimeOffsetPattern()
  string get_TimeSeparator()
  void set_TimeSeparator(string value)
  string get_UniversalSortableDateTimePattern()
  string get_YearMonthPattern()
  void set_YearMonthPattern(string value)
  void CheckNullValue(String[] values, int length)
  String[] get_AbbreviatedDayNames()
  void set_AbbreviatedDayNames(String[] value)
  String[] get_ShortestDayNames()
  void set_ShortestDayNames(String[] value)
  String[] get_DayNames()
  void set_DayNames(String[] value)
  String[] get_AbbreviatedMonthNames()
  void set_AbbreviatedMonthNames(String[] value)
  String[] get_MonthNames()
  void set_MonthNames(String[] value)
  bool get_HasSpacesInMonthNames()
  bool get_HasSpacesInDayNames()
  string internalGetMonthName(int month, MonthNameStyles style, bool abbreviated)
  String[] internalGetGenitiveMonthNames(bool abbreviated)
  String[] internalGetLeapYearMonthNames()
  string GetAbbreviatedDayName(DayOfWeek dayofweek)
  string GetShortestDayName(DayOfWeek dayOfWeek)
  String[] GetCombinedPatterns(String[] patterns1, String[] patterns2, string connectString)
  String[] GetAllDateTimePatterns()
  String[] GetAllDateTimePatterns(char format)
  string GetDayName(DayOfWeek dayofweek)
  string GetAbbreviatedMonthName(int month)
  string GetMonthName(int month)
  String[] GetMergedPatterns(String[] patterns, string defaultPattern)
  String[] get_AllYearMonthPatterns()
  String[] get_AllShortDatePatterns()
  String[] get_AllShortTimePatterns()
  String[] get_AllLongDatePatterns()
  String[] get_AllLongTimePatterns()
  String[] get_UnclonedYearMonthPatterns()
  String[] get_UnclonedShortDatePatterns()
  String[] get_UnclonedLongDatePatterns()
  String[] get_UnclonedShortTimePatterns()
  String[] get_UnclonedLongTimePatterns()
  DateTimeFormatInfo ReadOnly(DateTimeFormatInfo dtfi)
  bool get_IsReadOnly()
  string get_NativeCalendarName()
  void SetAllDateTimePatterns(String[] patterns, char format)
  String[] get_AbbreviatedMonthGenitiveNames()
  void set_AbbreviatedMonthGenitiveNames(String[] value)
  String[] get_MonthGenitiveNames()
  void set_MonthGenitiveNames(String[] value)
  string get_FullTimeSpanPositivePattern()
  string get_FullTimeSpanNegativePattern()
  CompareInfo get_CompareInfo()
  void ValidateStyles(DateTimeStyles style, string parameterName)
  DateTimeFormatFlags get_FormatFlags()
  DateTimeFormatFlags InitializeFormatFlags()
  bool get_HasForceTwoDigitYears()
  bool get_HasYearMonthAdjustment()
  bool YearMonthAdjustment(Int32& year, Int32& month, bool parsedMonthName)
  DateTimeFormatInfo GetJapaneseCalendarDTFI()
  DateTimeFormatInfo GetTaiwanCalendarDTFI()
  void ClearTokenHashTable()
  TokenHashValue[] CreateTokenHashTable()
  void PopulateSpecialTokenHashTable(TokenHashValue[] temp, Boolean& useDateSepAsIgnorableSymbol)
  bool IsJapaneseCalendar(Calendar calendar)
  void AddMonthNames(TokenHashValue[] temp, string monthPostfix)
  bool TryParseHebrewNumber(__DTString& str, Boolean& badFormat, Int32& number)
  bool IsHebrewChar(char ch)
  bool IsAllowedJapaneseTokenFollowedByNonSpaceLetter(string tokenString, char nextCh)
  bool Tokenize(TokenType TokenMask, TokenType& tokenType, Int32& tokenValue, __DTString& str)
  void InsertAtCurrentHashNode(TokenHashValue[] hashTable, string str, char ch, TokenType tokenType, int tokenValue, int pos, int hashcode, int hashProbe)
  void InsertHash(TokenHashValue[] hashTable, string str, TokenType tokenType, int tokenValue)
  bool CompareStringIgnoreCaseOptimized(string string1, int offset1, int length1, string string2, int offset2, int length2)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.FORMATFLAGS
Наследуется от: Enum
Поля:
  int value__
  FORMATFLAGS None
  FORMATFLAGS UseGenitiveMonth
  FORMATFLAGS UseLeapYearMonth
  FORMATFLAGS UseSpacesInMonthNames
  FORMATFLAGS UseHebrewParsing
  FORMATFLAGS UseSpacesInDayNames
  FORMATFLAGS UseDigitPrefixInTokens
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.CalendarId
Наследуется от: Enum
Поля:
  ushort value__
  CalendarId UNINITIALIZED_VALUE
  CalendarId GREGORIAN
  CalendarId GREGORIAN_US
  CalendarId JAPAN
  CalendarId TAIWAN
  CalendarId KOREA
  CalendarId HIJRI
  CalendarId THAI
  CalendarId HEBREW
  CalendarId GREGORIAN_ME_FRENCH
  CalendarId GREGORIAN_ARABIC
  CalendarId GREGORIAN_XLIT_ENGLISH
  CalendarId GREGORIAN_XLIT_FRENCH
  CalendarId JULIAN
  CalendarId JAPANESELUNISOLAR
  CalendarId CHINESELUNISOLAR
  CalendarId SAKA
  CalendarId LUNAR_ETO_CHN
  CalendarId LUNAR_ETO_KOR
  CalendarId LUNAR_ETO_ROKUYOU
  CalendarId KOREANLUNISOLAR
  CalendarId TAIWANLUNISOLAR
  CalendarId PERSIAN
  CalendarId UMALQURA
  CalendarId LAST_CALENDAR
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.DateTimeFormatInfoScanner
Наследуется от: object
Поля:
  char MonthPostfixChar
  char IgnorableSymbolChar
  string CJKYearSuff
  string CJKMonthSuff
  string CJKDaySuff
  string KoreanYearSuff
  string KoreanMonthSuff
  string KoreanDaySuff
  string KoreanHourSuff
  string KoreanMinuteSuff
  string KoreanSecondSuff
  string CJKHourSuff
  string ChineseHourSuff
  string CJKMinuteSuff
  string CJKSecondSuff
  List`1<string> m_dateWords
  Dictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) s_knownWords
  FoundDatePattern _ymdFlags
Свойства:
  Dictionary`2<string, string> KnownWords
Методы:
  Dictionary`2<string, string> get_KnownWords()
  int SkipWhiteSpacesAndNonLetter(string pattern, int currentIndex)
  void AddDateWordOrPostfix(string formatPostfix, string str)
  int AddDateWords(string pattern, int index, string formatPostfix)
  int ScanRepeatChar(string pattern, char ch, int index, Int32& count)
  void AddIgnorableSymbols(string text)
  void ScanDateWord(string pattern)
  String[] GetDateWordsOfDTFI(DateTimeFormatInfo dtfi)
  FORMATFLAGS GetFormatFlagGenitiveMonth(String[] monthNames, String[] genitveMonthNames, String[] abbrevMonthNames, String[] genetiveAbbrevMonthNames)
  FORMATFLAGS GetFormatFlagUseSpaceInMonthNames(String[] monthNames, String[] genitveMonthNames, String[] abbrevMonthNames, String[] genetiveAbbrevMonthNames)
  FORMATFLAGS GetFormatFlagUseSpaceInDayNames(String[] dayNames, String[] abbrevDayNames)
  FORMATFLAGS GetFormatFlagUseHebrewCalendar(int calID)
  bool EqualStringArrays(String[] array1, String[] array2)
  bool ArrayElementsHaveSpace(String[] array)
  bool ArrayElementsBeginWithDigit(String[] array)
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.DateTimeStyles
Наследуется от: Enum
Поля:
  int value__
  DateTimeStyles None
  DateTimeStyles AllowLeadingWhite
  DateTimeStyles AllowTrailingWhite
  DateTimeStyles AllowInnerWhite
  DateTimeStyles AllowWhiteSpaces
  DateTimeStyles NoCurrentDateDefault
  DateTimeStyles AdjustToUniversal
  DateTimeStyles AssumeLocal
  DateTimeStyles AssumeUniversal
  DateTimeStyles RoundtripKind
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.DaylightTime
Наследуется от: object
Поля:
  DateTime _start
  DateTime _end
  TimeSpan _delta
Свойства:
  DateTime Start
  DateTime End
  TimeSpan Delta
Методы:
  void .ctor(DateTime start, DateTime end, TimeSpan delta)
  DateTime get_Start()
  DateTime get_End()
  TimeSpan get_Delta()
--------------------------------------------------
Класс: System.Globalization.DaylightTimeStruct
Наследуется от: ValueType
Поля:
  DateTime Start
  DateTime End
  TimeSpan Delta
Свойства:
Методы:
  void .ctor(DateTime start, DateTime end, TimeSpan delta)
--------------------------------------------------
Класс: System.Globalization.DigitShapes
Наследуется от: Enum
Поля:
  int value__
  DigitShapes Context
  DigitShapes None
  DigitShapes NativeNational
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.GlobalizationExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  StringComparer GetStringComparer(CompareInfo compareInfo, CompareOptions options)
--------------------------------------------------
Класс: System.Globalization.HebrewNumberParsingContext
Наследуется от: ValueType
Поля:
  HS state
  int result
Свойства:
Методы:
  void .ctor(int result)
--------------------------------------------------
Класс: System.Globalization.HebrewNumberParsingState
Наследуется от: Enum
Поля:
  int value__
  HebrewNumberParsingState InvalidHebrewNumber
  HebrewNumberParsingState NotHebrewDigit
  HebrewNumberParsingState FoundEndOfHebrewNumber
  HebrewNumberParsingState ContinueParsing
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.HebrewNumber
Наследуется от: object
Поля:
  HebrewValue[] s_hebrewValues
  int minHebrewNumberCh
  char s_maxHebrewNumberCh
  HS[] s_numberPasingState
  int HebrewTokenCount
Свойства:
Методы:
  void .ctor()
  string ToString(int Number)
  HebrewNumberParsingState ParseByChar(char ch, HebrewNumberParsingContext& context)
  bool IsDigit(char ch)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.InternalGlobalizationHelper
Наследуется от: object
Поля:
  long TicksPerMillisecond
  long TicksPerTenthSecond
  long TicksPerSecond
  long MaxSeconds
  long MinSeconds
  int DaysPerYear
  int DaysPer4Years
  int DaysPer100Years
  int DaysPer400Years
  int DaysTo10000
  long TicksPerMinute
  long TicksPerHour
  long TicksPerDay
  long MaxTicks
  long MinTicks
  long MaxMilliSeconds
  long MinMilliSeconds
  int StringBuilderDefaultCapacity
  long MaxOffset
  long MinOffset
Свойства:
Методы:
  long TimeToTicks(int hour, int minute, int second)
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.NumberStyles
Наследуется от: Enum
Поля:
  int value__
  NumberStyles None
  NumberStyles AllowLeadingWhite
  NumberStyles AllowTrailingWhite
  NumberStyles AllowLeadingSign
  NumberStyles AllowTrailingSign
  NumberStyles AllowParentheses
  NumberStyles AllowDecimalPoint
  NumberStyles AllowThousands
  NumberStyles AllowExponent
  NumberStyles AllowCurrencySymbol
  NumberStyles AllowHexSpecifier
  NumberStyles Integer
  NumberStyles HexNumber
  NumberStyles Number
  NumberStyles Float
  NumberStyles Currency
  NumberStyles Any
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.SortVersion
Наследуется от: object
Поля:
  int m_NlsVersion
  Guid m_SortId
Свойства:
  int FullVersion
  Guid SortId
Методы:
  int get_FullVersion()
  Guid get_SortId()
  void .ctor(int fullVersion, Guid sortId)
  void .ctor(int nlsVersion, int effectiveId, Guid customVersion)
  bool Equals(object obj)
  bool Equals(SortVersion other)
  int GetHashCode()
  bool op_Equality(SortVersion left, SortVersion right)
  bool op_Inequality(SortVersion left, SortVersion right)
--------------------------------------------------
Класс: System.Globalization.TimeSpanFormat
Наследуется от: object
Поля:
  FormatLiterals PositiveInvariantFormatLiterals
  FormatLiterals NegativeInvariantFormatLiterals
Свойства:
Методы:
  void AppendNonNegativeInt32(StringBuilder sb, int n, int digits)
  string Format(TimeSpan value, string format, IFormatProvider formatProvider)
  bool TryFormat(TimeSpan value, Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider formatProvider)
  StringBuilder FormatToBuilder(TimeSpan value, ReadOnlySpan`1<char> format, IFormatProvider formatProvider)
  StringBuilder FormatStandard(TimeSpan value, bool isInvariant, ReadOnlySpan`1<char> format, Pattern pattern)
  StringBuilder FormatCustomized(TimeSpan value, ReadOnlySpan`1<char> format, DateTimeFormatInfo dtfi, StringBuilder result)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.TimeSpanParse
Наследуется от: object
Поля:
  int MaxFractionDigits
  int MaxDays
  int MaxHours
  int MaxMinutes
  int MaxSeconds
  int MaxFraction
Свойства:
Методы:
  long Pow10(int pow)
  bool TryTimeToTicks(bool positive, TimeSpanToken days, TimeSpanToken hours, TimeSpanToken minutes, TimeSpanToken seconds, TimeSpanToken fraction, Int64& result)
  TimeSpan Parse(ReadOnlySpan`1<char> input, IFormatProvider formatProvider)
  bool TryParse(ReadOnlySpan`1<char> input, IFormatProvider formatProvider, TimeSpan& result)
  TimeSpan ParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, TimeSpanStyles styles)
  bool TryParseExact(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpan& result)
  TimeSpan ParseExactMultiple(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles)
  bool TryParseExactMultiple(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpan& result)
  bool TryParseTimeSpan(ReadOnlySpan`1<char> input, TimeSpanStandardStyles style, IFormatProvider formatProvider, TimeSpanResult& result)
  bool ProcessTerminalState(TimeSpanRawInfo& raw, TimeSpanStandardStyles style, TimeSpanResult& result)
  bool ProcessTerminal_DHMSF(TimeSpanRawInfo& raw, TimeSpanStandardStyles style, TimeSpanResult& result)
  bool ProcessTerminal_HMS_F_D(TimeSpanRawInfo& raw, TimeSpanStandardStyles style, TimeSpanResult& result)
  bool ProcessTerminal_HM_S_D(TimeSpanRawInfo& raw, TimeSpanStandardStyles style, TimeSpanResult& result)
  bool ProcessTerminal_HM(TimeSpanRawInfo& raw, TimeSpanStandardStyles style, TimeSpanResult& result)
  bool ProcessTerminal_D(TimeSpanRawInfo& raw, TimeSpanStandardStyles style, TimeSpanResult& result)
  bool TryParseExactTimeSpan(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpanResult& result)
  bool TryParseByFormat(ReadOnlySpan`1<char> input, ReadOnlySpan`1<char> format, TimeSpanStyles styles, TimeSpanResult& result)
  bool ParseExactDigits(TimeSpanTokenizer& tokenizer, int minDigitLength, Int32& result)
  bool ParseExactDigits(TimeSpanTokenizer& tokenizer, int minDigitLength, int maxDigitLength, Int32& zeroes, Int32& result)
  bool ParseExactLiteral(TimeSpanTokenizer& tokenizer, StringBuilder enquotedString)
  bool TryParseTimeSpanConstant(ReadOnlySpan`1<char> input, TimeSpanResult& result)
  bool TryParseExactMultipleTimeSpan(ReadOnlySpan`1<char> input, String[] formats, IFormatProvider formatProvider, TimeSpanStyles styles, TimeSpanResult& result)
  void ValidateStyles(TimeSpanStyles style, string parameterName)
--------------------------------------------------
Класс: System.Globalization.TimeSpanStyles
Наследуется от: Enum
Поля:
  int value__
  TimeSpanStyles None
  TimeSpanStyles AssumeNegative
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.UnicodeCategory
Наследуется от: Enum
Поля:
  int value__
  UnicodeCategory UppercaseLetter
  UnicodeCategory LowercaseLetter
  UnicodeCategory TitlecaseLetter
  UnicodeCategory ModifierLetter
  UnicodeCategory OtherLetter
  UnicodeCategory NonSpacingMark
  UnicodeCategory SpacingCombiningMark
  UnicodeCategory EnclosingMark
  UnicodeCategory DecimalDigitNumber
  UnicodeCategory LetterNumber
  UnicodeCategory OtherNumber
  UnicodeCategory SpaceSeparator
  UnicodeCategory LineSeparator
  UnicodeCategory ParagraphSeparator
  UnicodeCategory Control
  UnicodeCategory Format
  UnicodeCategory Surrogate
  UnicodeCategory PrivateUse
  UnicodeCategory ConnectorPunctuation
  UnicodeCategory DashPunctuation
  UnicodeCategory OpenPunctuation
  UnicodeCategory ClosePunctuation
  UnicodeCategory InitialQuotePunctuation
  UnicodeCategory FinalQuotePunctuation
  UnicodeCategory OtherPunctuation
  UnicodeCategory MathSymbol
  UnicodeCategory CurrencySymbol
  UnicodeCategory ModifierSymbol
  UnicodeCategory OtherSymbol
  UnicodeCategory OtherNotAssigned
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.ISOWeek
Наследуется от: object
Поля:
  int WeeksInLongYear
  int WeeksInShortYear
  int MinWeek
  int MaxWeek
Свойства:
Методы:
  int GetWeekOfYear(DateTime date)
  int GetYear(DateTime date)
  DateTime GetYearStart(int year)
  DateTime GetYearEnd(int year)
  int GetWeeksInYear(int year)
  DateTime ToDateTime(int year, int week, DayOfWeek dayOfWeek)
  int GetWeekNumber(DateTime date)
  int GetWeekday(DayOfWeek dayOfWeek)
  int <GetWeeksInYear>g__P|8_0(int y)
--------------------------------------------------
Класс: System.Globalization.GlobalizationMode
Наследуется от: object
Поля:
  string c_InvariantModeConfigSwitch
  bool <Invariant>k__BackingField
Свойства:
  bool Invariant
Методы:
  bool get_Invariant()
  bool GetGlobalizationInvariantMode()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.CalendricalCalculationsHelper
Наследуется от: object
Поля:
  double FullCircleOfArc
  int HalfCircleOfArc
  double TwelveHours
  double Noon2000Jan01
  double MeanTropicalYearInDays
  double MeanSpeedOfSun
  double LongitudeSpring
  double TwoDegreesAfterSpring
  int SecondsPerDay
  int DaysInUniformLengthCentury
  int SecondsPerMinute
  int MinutesPerDegree
  long StartOf1810
  long StartOf1900Century
  Double[] Coefficients1900to1987
  Double[] Coefficients1800to1899
  Double[] Coefficients1700to1799
  Double[] Coefficients1620to1699
  Double[] LambdaCoefficients
  Double[] AnomalyCoefficients
  Double[] EccentricityCoefficients
  Double[] Coefficients
  Double[] CoefficientsA
  Double[] CoefficientsB
  EphemerisCorrectionAlgorithmMap[] EphemerisCorrectionTable
Свойства:
Методы:
  double RadiansFromDegrees(double degree)
  double SinOfDegree(double degree)
  double CosOfDegree(double degree)
  double TanOfDegree(double degree)
  double Angle(int degrees, int minutes, double seconds)
  double Obliquity(double julianCenturies)
  long GetNumberOfDays(DateTime date)
  int GetGregorianYear(double numberOfDays)
  double Reminder(double divisor, double dividend)
  double NormalizeLongitude(double longitude)
  double AsDayFraction(double longitude)
  double PolynomialSum(Double[] coefficients, double indeterminate)
  double CenturiesFrom1900(int gregorianYear)
  double DefaultEphemerisCorrection(int gregorianYear)
  double EphemerisCorrection1988to2019(int gregorianYear)
  double EphemerisCorrection1900to1987(int gregorianYear)
  double EphemerisCorrection1800to1899(int gregorianYear)
  double EphemerisCorrection1700to1799(int gregorianYear)
  double EphemerisCorrection1620to1699(int gregorianYear)
  double EphemerisCorrection(double time)
  double JulianCenturies(double moment)
  bool IsNegative(double value)
  double CopySign(double value, double sign)
  double EquationOfTime(double time)
  double AsLocalTime(double apparentMidday, double longitude)
  double Midday(double date, double longitude)
  double InitLongitude(double longitude)
  double MiddayAtPersianObservationSite(double date)
  double PeriodicTerm(double julianCenturies, int x, double y, double z)
  double SumLongSequenceOfPeriodicTerms(double julianCenturies)
  double Aberration(double julianCenturies)
  double Nutation(double julianCenturies)
  double Compute(double time)
  double AsSeason(double longitude)
  double EstimatePrior(double longitude, double time)
  long PersianNewYearOnOrBefore(long numberOfDays)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.PersianCalendar
Наследуется от: Calendar
Поля:
  int PersianEra
  long PersianEpoch
  int ApproximateHalfYear
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  int MonthsPerYear
  Int32[] DaysToMonth
  int MaxCalendarYear
  int MaxCalendarMonth
  int MaxCalendarDay
  DateTime minDate
  DateTime maxDate
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int BaseCalendarID
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_BaseCalendarID()
  int get_ID()
  long GetAbsoluteDatePersian(int year, int month, int day)
  void CheckTicksRange(long ticks)
  void CheckEraRange(int era)
  void CheckYearRange(int year, int era)
  void CheckYearMonthRange(int year, int month, int era)
  int MonthFromOrdinalDay(int ordinalDay)
  int DaysInPreviousMonths(int month)
  int GetDatePart(long ticks, int part)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.Calendar
Наследуется от: object
Поля:
  long TicksPerMillisecond
  long TicksPerSecond
  long TicksPerMinute
  long TicksPerHour
  long TicksPerDay
  int MillisPerSecond
  int MillisPerMinute
  int MillisPerHour
  int MillisPerDay
  int DaysPerYear
  int DaysPer4Years
  int DaysPer100Years
  int DaysPer400Years
  int DaysTo10000
  long MaxMillis
  int CAL_GREGORIAN
  int CAL_GREGORIAN_US
  int CAL_JAPAN
  int CAL_TAIWAN
  int CAL_KOREA
  int CAL_HIJRI
  int CAL_THAI
  int CAL_HEBREW
  int CAL_GREGORIAN_ME_FRENCH
  int CAL_GREGORIAN_ARABIC
  int CAL_GREGORIAN_XLIT_ENGLISH
  int CAL_GREGORIAN_XLIT_FRENCH
  int CAL_JULIAN
  int CAL_JAPANESELUNISOLAR
  int CAL_CHINESELUNISOLAR
  int CAL_SAKA
  int CAL_LUNAR_ETO_CHN
  int CAL_LUNAR_ETO_KOR
  int CAL_LUNAR_ETO_ROKUYOU
  int CAL_KOREANLUNISOLAR
  int CAL_TAIWANLUNISOLAR
  int CAL_PERSIAN
  int CAL_UMALQURA
  int m_currentEraValue
  bool m_isReadOnly
  int CurrentEra
  int twoDigitYearMax
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  int ID
  int BaseCalendarID
  CalendarAlgorithmType AlgorithmType
  bool IsReadOnly
  int CurrentEraValue
  Int32[] Eras
  int DaysInYearBeforeMinSupportedYear
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  void .ctor()
  int get_ID()
  int get_BaseCalendarID()
  CalendarAlgorithmType get_AlgorithmType()
  bool get_IsReadOnly()
  object Clone()
  Calendar ReadOnly(Calendar calendar)
  void VerifyWritable()
  void SetReadOnlyState(bool readOnly)
  int get_CurrentEraValue()
  void CheckAddResult(long ticks, DateTime minValue, DateTime maxValue)
  DateTime Add(DateTime time, double value, int scale)
  DateTime AddMilliseconds(DateTime time, double milliseconds)
  DateTime AddDays(DateTime time, int days)
  DateTime AddHours(DateTime time, int hours)
  DateTime AddMinutes(DateTime time, int minutes)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddSeconds(DateTime time, int seconds)
  DateTime AddWeeks(DateTime time, int weeks)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetHour(DateTime time)
  double GetMilliseconds(DateTime time)
  int GetMinute(DateTime time)
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year)
  int GetMonthsInYear(int year, int era)
  int GetSecond(DateTime time)
  int GetFirstDayWeekOfYear(DateTime time, int firstDayOfWeek)
  int GetWeekOfYearFullDays(DateTime time, int firstDayOfWeek, int fullDays)
  int GetWeekOfYearOfMinSupportedDateTime(int firstDayOfWeek, int minimumDaysInFirstWeek)
  int get_DaysInYearBeforeMinSupportedYear()
  int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day)
  bool IsLeapDay(int year, int month, int day, int era)
  bool IsLeapMonth(int year, int month)
  bool IsLeapMonth(int year, int month, int era)
  int GetLeapMonth(int year)
  int GetLeapMonth(int year, int era)
  bool IsLeapYear(int year)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  bool TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, DateTime& result)
  bool IsValidYear(int year, int era)
  bool IsValidMonth(int year, int month, int era)
  bool IsValidDay(int year, int month, int day, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  long TimeToTicks(int hour, int minute, int second, int millisecond)
  int GetSystemTwoDigitYearSetting(int CalID, int defaultYearValue)
--------------------------------------------------
Класс: System.Globalization.CalendarData
Наследуется от: object
Поля:
  int MAX_CALENDARS
  string sNativeName
  String[] saShortDates
  String[] saYearMonths
  String[] saLongDates
  string sMonthDay
  String[] saEraNames
  String[] saAbbrevEraNames
  String[] saAbbrevEnglishEraNames
  String[] saDayNames
  String[] saAbbrevDayNames
  String[] saSuperShortDayNames
  String[] saMonthNames
  String[] saAbbrevMonthNames
  String[] saMonthGenitiveNames
  String[] saAbbrevMonthGenitiveNames
  String[] saLeapYearMonthNames
  int iTwoDigitYearMax
  int iCurrentEra
  bool bUseUserOverrides
  CalendarData Invariant
  String[] HEBREW_MONTH_NAMES
  String[] HEBREW_LEAP_MONTH_NAMES
Свойства:
Методы:
  void .ctor()
  void .cctor()
  void .ctor(string localeName, int calendarId, bool bUseUserOverrides)
  void InitializeEraNames(string localeName, int calendarId)
  String[] GetJapaneseEraNames()
  String[] GetJapaneseEnglishEraNames()
  void InitializeAbbreviatedEraNames(string localeName, int calendarId)
  CalendarData GetCalendarData(int calendarId)
  string CalendarIdToCultureName(int calendarId)
  int nativeGetTwoDigitYearMax(int calID)
  bool nativeGetCalendarData(CalendarData data, string localeName, int calendarId)
  bool fill_calendar_data(string localeName, int datetimeIndex)
--------------------------------------------------
Класс: System.Globalization.ChineseLunisolarCalendar
Наследуется от: EastAsianLunisolarCalendar
Поля:
  int ChineseEra
  int MIN_LUNISOLAR_YEAR
  int MAX_LUNISOLAR_YEAR
  int MIN_GREGORIAN_YEAR
  int MIN_GREGORIAN_MONTH
  int MIN_GREGORIAN_DAY
  int MAX_GREGORIAN_YEAR
  int MAX_GREGORIAN_MONTH
  int MAX_GREGORIAN_DAY
  DateTime minDate
  DateTime maxDate
  Int32[0...,0...] yinfo
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  int DaysInYearBeforeMinSupportedYear
  int MinCalendarYear
  int MaxCalendarYear
  DateTime MinDate
  DateTime MaxDate
  EraInfo[] CalEraInfo
  int ID
  int BaseCalendarID
  Int32[] Eras
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  int get_DaysInYearBeforeMinSupportedYear()
  int get_MinCalendarYear()
  int get_MaxCalendarYear()
  DateTime get_MinDate()
  DateTime get_MaxDate()
  EraInfo[] get_CalEraInfo()
  int GetYearInfo(int LunarYear, int Index)
  int GetYear(int year, DateTime time)
  int GetGregorianYear(int year, int era)
  void .ctor()
  int GetEra(DateTime time)
  int get_ID()
  int get_BaseCalendarID()
  Int32[] get_Eras()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.EastAsianLunisolarCalendar
Наследуется от: Calendar
Поля:
  int LeapMonth
  int Jan1Month
  int Jan1Date
  int nDaysPerMonth
  Int32[] DaysToMonth365
  Int32[] DaysToMonth366
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  int MaxCalendarMonth
  int MaxCalendarDay
  int DEFAULT_GREGORIAN_TWO_DIGIT_YEAR_MAX
Свойства:
  CalendarAlgorithmType AlgorithmType
  int MinCalendarYear
  int MaxCalendarYear
  EraInfo[] CalEraInfo
  DateTime MinDate
  DateTime MaxDate
  int TwoDigitYearMax
Методы:
  CalendarAlgorithmType get_AlgorithmType()
  int GetSexagenaryYear(DateTime time)
  int GetCelestialStem(int sexagenaryYear)
  int GetTerrestrialBranch(int sexagenaryYear)
  int GetYearInfo(int LunarYear, int Index)
  int GetYear(int year, DateTime time)
  int GetGregorianYear(int year, int era)
  int get_MinCalendarYear()
  int get_MaxCalendarYear()
  EraInfo[] get_CalEraInfo()
  DateTime get_MinDate()
  DateTime get_MaxDate()
  int MinEraCalendarYear(int era)
  int MaxEraCalendarYear(int era)
  void .ctor()
  void CheckTicksRange(long ticks)
  void CheckEraRange(int era)
  int CheckYearRange(int year, int era)
  int CheckYearMonthRange(int year, int month, int era)
  int InternalGetDaysInMonth(int year, int month)
  int GetDaysInMonth(int year, int month, int era)
  int GregorianIsLeapYear(int y)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  void GregorianToLunar(int nSYear, int nSMonth, int nSDate, Int32& nLYear, Int32& nLMonth, Int32& nLDate)
  bool LunarToGregorian(int nLYear, int nLMonth, int nLDate, Int32& nSolarYear, Int32& nSolarMonth, Int32& nSolarDay)
  DateTime LunarToTime(DateTime time, int year, int month, int day)
  void TimeToLunar(DateTime time, Int32& year, Int32& month, Int32& day)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfYear(DateTime time)
  int GetDayOfMonth(DateTime time)
  int GetDaysInYear(int year, int era)
  int GetMonth(DateTime time)
  int GetYear(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetMonthsInYear(int year, int era)
  bool IsLeapDay(int year, int month, int day, int era)
  bool IsLeapMonth(int year, int month, int era)
  int GetLeapMonth(int year, int era)
  bool InternalIsLeapYear(int year)
  bool IsLeapYear(int year, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.GlobalizationAssembly
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte* GetGlobalizationResourceBytePtr(Assembly assembly, string tableName)
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.GregorianCalendar
Наследуется от: Calendar
Поля:
  int ADEra
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  int MaxYear
  int MinYear
  GregorianCalendarTypes m_type
  Int32[] DaysToMonth365
  Int32[] DaysToMonth366
  Calendar modreq(System.Runtime.CompilerServices.IsVolatile) s_defaultInstance
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  GregorianCalendarTypes CalendarType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  void OnDeserialized(StreamingContext ctx)
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  Calendar GetDefaultInstance()
  void .ctor()
  void .ctor(GregorianCalendarTypes type)
  GregorianCalendarTypes get_CalendarType()
  void set_CalendarType(GregorianCalendarTypes value)
  int get_ID()
  int GetDatePart(long ticks, int part)
  long GetAbsoluteDate(int year, int month, int day)
  long DateToTicks(int year, int month, int day)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  bool TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, DateTime& result)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.EraInfo
Наследуется от: object
Поля:
  int era
  long ticks
  int yearOffset
  int minEraYear
  int maxEraYear
  string eraName
  string abbrevEraName
  string englishEraName
Свойства:
Методы:
  void .ctor(int era, int startYear, int startMonth, int startDay, int yearOffset, int minEraYear, int maxEraYear)
  void .ctor(int era, int startYear, int startMonth, int startDay, int yearOffset, int minEraYear, int maxEraYear, string eraName, string abbrevEraName, string englishEraName)
--------------------------------------------------
Класс: System.Globalization.GregorianCalendarHelper
Наследуется от: object
Поля:
  long TicksPerMillisecond
  long TicksPerSecond
  long TicksPerMinute
  long TicksPerHour
  long TicksPerDay
  int MillisPerSecond
  int MillisPerMinute
  int MillisPerHour
  int MillisPerDay
  int DaysPerYear
  int DaysPer4Years
  int DaysPer100Years
  int DaysPer400Years
  int DaysTo10000
  long MaxMillis
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  Int32[] DaysToMonth365
  Int32[] DaysToMonth366
  int m_maxYear
  int m_minYear
  Calendar m_Cal
  EraInfo[] m_EraInfo
  Int32[] m_eras
  DateTime m_minDate
Свойства:
  int MaxYear
  Int32[] Eras
Методы:
  int get_MaxYear()
  void .ctor(Calendar cal, EraInfo[] eraInfo)
  int GetYearOffset(int year, int era, bool throwOnError)
  int GetGregorianYear(int year, int era)
  bool IsValidYear(int year, int era)
  int GetDatePart(long ticks, int part)
  long GetAbsoluteDate(int year, int month, int day)
  long DateToTicks(int year, int month, int day)
  long TimeToTicks(int hour, int minute, int second, int millisecond)
  void CheckTicksRange(long ticks)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  int GetYear(int year, DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
  int ToFourDigitYear(int year, int twoDigitYearMax)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.GregorianCalendarTypes
Наследуется от: Enum
Поля:
  int value__
  GregorianCalendarTypes Localized
  GregorianCalendarTypes USEnglish
  GregorianCalendarTypes MiddleEastFrench
  GregorianCalendarTypes Arabic
  GregorianCalendarTypes TransliteratedEnglish
  GregorianCalendarTypes TransliteratedFrench
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.HebrewCalendar
Наследуется от: Calendar
Поля:
  int HebrewEra
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  int DatePartDayOfWeek
  int HebrewYearOf1AD
  int FirstGregorianTableYear
  int LastGregorianTableYear
  int TABLESIZE
  int MinHebrewYear
  int MaxHebrewYear
  Int32[] HebrewTable
  Int32[0...,0...] LunarMonthLen
  DateTime calendarMinValue
  DateTime calendarMaxValue
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_ID()
  void CheckHebrewYearValue(int y, int era, string varName)
  void CheckHebrewMonthValue(int year, int month, int era)
  void CheckHebrewDayValue(int year, int month, int day, int era)
  void CheckEraRange(int era)
  void CheckTicksRange(long ticks)
  int GetResult(__DateBuffer result, int part)
  int GetLunarMonthDay(int gregorianYear, __DateBuffer lunarDate)
  int GetDatePart(long ticks, int part)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetHebrewYearType(int year, int era)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  int GetDayDifference(int lunarYearType, int month1, int day1, int month2, int day2)
  DateTime HebrewToGregorian(int hebrewYear, int hebrewMonth, int hebrewDay, int hour, int minute, int second, int millisecond)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.HijriCalendar
Наследуется от: Calendar
Поля:
  int HijriEra
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  int MinAdvancedHijri
  int MaxAdvancedHijri
  Int32[] HijriMonthDays
  string HijriAdvanceRegKeyEntry
  int m_HijriAdvance
  int MaxCalendarYear
  int MaxCalendarMonth
  int MaxCalendarDay
  DateTime calendarMinValue
  DateTime calendarMaxValue
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  int DaysInYearBeforeMinSupportedYear
  int HijriAdjustment
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_ID()
  int get_DaysInYearBeforeMinSupportedYear()
  long GetAbsoluteDateHijri(int y, int m, int d)
  long DaysUpToHijriYear(int HijriYear)
  int get_HijriAdjustment()
  void set_HijriAdjustment(int value)
  int GetAdvanceHijriDate()
  void CheckTicksRange(long ticks)
  void CheckEraRange(int era)
  void CheckYearRange(int year, int era)
  void CheckYearMonthRange(int year, int month, int era)
  int GetDatePart(long ticks, int part)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.JapaneseCalendar
Наследуется от: Calendar
Поля:
  DateTime calendarMinValue
  EraInfo[] modreq(System.Runtime.CompilerServices.IsVolatile) japaneseEraInfo
  string c_japaneseErasHive
  string c_japaneseErasHivePermissionList
  Calendar modreq(System.Runtime.CompilerServices.IsVolatile) s_defaultInstance
  GregorianCalendarHelper helper
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  EraInfo[] GetEraInfo()
  EraInfo[] GetErasFromRegistry()
  int CompareEraRanges(EraInfo a, EraInfo b)
  EraInfo GetEraFromValue(string value, string data)
  Calendar GetDefaultInstance()
  void .ctor()
  int get_ID()
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
  int GetEra(DateTime time)
  int GetMonth(DateTime time)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  bool IsLeapYear(int year, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int ToFourDigitYear(int year)
  Int32[] get_Eras()
  String[] EraNames()
  String[] AbbrevEraNames()
  String[] EnglishEraNames()
  bool IsValidYear(int year, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.JapaneseLunisolarCalendar
Наследуется от: EastAsianLunisolarCalendar
Поля:
  int JapaneseEra
  GregorianCalendarHelper helper
  int MIN_LUNISOLAR_YEAR
  int MAX_LUNISOLAR_YEAR
  int MIN_GREGORIAN_YEAR
  int MIN_GREGORIAN_MONTH
  int MIN_GREGORIAN_DAY
  int MAX_GREGORIAN_YEAR
  int MAX_GREGORIAN_MONTH
  int MAX_GREGORIAN_DAY
  DateTime minDate
  DateTime maxDate
  Int32[0...,0...] yinfo
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  int DaysInYearBeforeMinSupportedYear
  int MinCalendarYear
  int MaxCalendarYear
  DateTime MinDate
  DateTime MaxDate
  EraInfo[] CalEraInfo
  int BaseCalendarID
  int ID
  Int32[] Eras
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  int get_DaysInYearBeforeMinSupportedYear()
  int get_MinCalendarYear()
  int get_MaxCalendarYear()
  DateTime get_MinDate()
  DateTime get_MaxDate()
  EraInfo[] get_CalEraInfo()
  int GetYearInfo(int LunarYear, int Index)
  int GetYear(int year, DateTime time)
  int GetGregorianYear(int year, int era)
  EraInfo[] TrimEras(EraInfo[] baseEras)
  void .ctor()
  int GetEra(DateTime time)
  int get_BaseCalendarID()
  int get_ID()
  Int32[] get_Eras()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.JulianCalendar
Наследуется от: Calendar
Поля:
  int JulianEra
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  int JulianDaysPerYear
  int JulianDaysPer4Years
  Int32[] DaysToMonth365
  Int32[] DaysToMonth366
  int MaxYear
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_ID()
  void CheckEraRange(int era)
  void CheckYearEraRange(int year, int era)
  void CheckMonthRange(int month)
  void CheckDayRange(int year, int month, int day)
  int GetDatePart(long ticks, int part)
  long DateToTicks(int year, int month, int day)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  int GetMonth(DateTime time)
  Int32[] get_Eras()
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.KoreanCalendar
Наследуется от: Calendar
Поля:
  int KoreanEra
  EraInfo[] koreanEraInfo
  GregorianCalendarHelper helper
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_ID()
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
  int GetEra(DateTime time)
  int GetMonth(DateTime time)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  bool IsLeapYear(int year, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  Int32[] get_Eras()
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.KoreanLunisolarCalendar
Наследуется от: EastAsianLunisolarCalendar
Поля:
  int GregorianEra
  int MIN_LUNISOLAR_YEAR
  int MAX_LUNISOLAR_YEAR
  int MIN_GREGORIAN_YEAR
  int MIN_GREGORIAN_MONTH
  int MIN_GREGORIAN_DAY
  int MAX_GREGORIAN_YEAR
  int MAX_GREGORIAN_MONTH
  int MAX_GREGORIAN_DAY
  DateTime minDate
  DateTime maxDate
  Int32[0...,0...] yinfo
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  int DaysInYearBeforeMinSupportedYear
  int MinCalendarYear
  int MaxCalendarYear
  DateTime MinDate
  DateTime MaxDate
  EraInfo[] CalEraInfo
  int BaseCalendarID
  int ID
  Int32[] Eras
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  int get_DaysInYearBeforeMinSupportedYear()
  int get_MinCalendarYear()
  int get_MaxCalendarYear()
  DateTime get_MinDate()
  DateTime get_MaxDate()
  EraInfo[] get_CalEraInfo()
  int GetYearInfo(int LunarYear, int Index)
  int GetYear(int year, DateTime time)
  int GetGregorianYear(int year, int era)
  void .ctor()
  int GetEra(DateTime time)
  int get_BaseCalendarID()
  int get_ID()
  Int32[] get_Eras()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.NumberFormatInfo
Наследуется от: object
Поля:
  NumberFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) invariantInfo
  Int32[] numberGroupSizes
  Int32[] currencyGroupSizes
  Int32[] percentGroupSizes
  string positiveSign
  string negativeSign
  string numberDecimalSeparator
  string numberGroupSeparator
  string currencyGroupSeparator
  string currencyDecimalSeparator
  string currencySymbol
  string ansiCurrencySymbol
  string nanSymbol
  string positiveInfinitySymbol
  string negativeInfinitySymbol
  string percentDecimalSeparator
  string percentGroupSeparator
  string percentSymbol
  string perMilleSymbol
  String[] nativeDigits
  int m_dataItem
  int numberDecimalDigits
  int currencyDecimalDigits
  int currencyPositivePattern
  int currencyNegativePattern
  int numberNegativePattern
  int percentPositivePattern
  int percentNegativePattern
  int percentDecimalDigits
  int digitSubstitution
  bool isReadOnly
  bool m_useUserOverride
  bool m_isInvariant
  bool validForParseAsNumber
  bool validForParseAsCurrency
  NumberStyles InvalidNumberStyles
Свойства:
  NumberFormatInfo InvariantInfo
  int CurrencyDecimalDigits
  string CurrencyDecimalSeparator
  bool IsReadOnly
  Int32[] CurrencyGroupSizes
  Int32[] NumberGroupSizes
  Int32[] PercentGroupSizes
  string CurrencyGroupSeparator
  string CurrencySymbol
  NumberFormatInfo CurrentInfo
  string NaNSymbol
  int CurrencyNegativePattern
  int NumberNegativePattern
  int PercentPositivePattern
  int PercentNegativePattern
  string NegativeInfinitySymbol
  string NegativeSign
  int NumberDecimalDigits
  string NumberDecimalSeparator
  string NumberGroupSeparator
  int CurrencyPositivePattern
  string PositiveInfinitySymbol
  string PositiveSign
  int PercentDecimalDigits
  string PercentDecimalSeparator
  string PercentGroupSeparator
  string PercentSymbol
  string PerMilleSymbol
  String[] NativeDigits
  DigitShapes DigitSubstitution
Методы:
  void .ctor()
  void OnSerializing(StreamingContext ctx)
  void OnDeserializing(StreamingContext ctx)
  void OnDeserialized(StreamingContext ctx)
  void VerifyDecimalSeparator(string decSep, string propertyName)
  void VerifyGroupSeparator(string groupSep, string propertyName)
  void VerifyNativeDigits(String[] nativeDig, string propertyName)
  void VerifyDigitSubstitution(DigitShapes digitSub, string propertyName)
  void .ctor(CultureData cultureData)
  void VerifyWritable()
  NumberFormatInfo get_InvariantInfo()
  NumberFormatInfo GetInstance(IFormatProvider formatProvider)
  object Clone()
  int get_CurrencyDecimalDigits()
  void set_CurrencyDecimalDigits(int value)
  string get_CurrencyDecimalSeparator()
  void set_CurrencyDecimalSeparator(string value)
  bool get_IsReadOnly()
  void CheckGroupSize(string propName, Int32[] groupSize)
  Int32[] get_CurrencyGroupSizes()
  void set_CurrencyGroupSizes(Int32[] value)
  Int32[] get_NumberGroupSizes()
  void set_NumberGroupSizes(Int32[] value)
  Int32[] get_PercentGroupSizes()
  void set_PercentGroupSizes(Int32[] value)
  string get_CurrencyGroupSeparator()
  void set_CurrencyGroupSeparator(string value)
  string get_CurrencySymbol()
  void set_CurrencySymbol(string value)
  NumberFormatInfo get_CurrentInfo()
  string get_NaNSymbol()
  void set_NaNSymbol(string value)
  int get_CurrencyNegativePattern()
  void set_CurrencyNegativePattern(int value)
  int get_NumberNegativePattern()
  void set_NumberNegativePattern(int value)
  int get_PercentPositivePattern()
  void set_PercentPositivePattern(int value)
  int get_PercentNegativePattern()
  void set_PercentNegativePattern(int value)
  string get_NegativeInfinitySymbol()
  void set_NegativeInfinitySymbol(string value)
  string get_NegativeSign()
  void set_NegativeSign(string value)
  int get_NumberDecimalDigits()
  void set_NumberDecimalDigits(int value)
  string get_NumberDecimalSeparator()
  void set_NumberDecimalSeparator(string value)
  string get_NumberGroupSeparator()
  void set_NumberGroupSeparator(string value)
  int get_CurrencyPositivePattern()
  void set_CurrencyPositivePattern(int value)
  string get_PositiveInfinitySymbol()
  void set_PositiveInfinitySymbol(string value)
  string get_PositiveSign()
  void set_PositiveSign(string value)
  int get_PercentDecimalDigits()
  void set_PercentDecimalDigits(int value)
  string get_PercentDecimalSeparator()
  void set_PercentDecimalSeparator(string value)
  string get_PercentGroupSeparator()
  void set_PercentGroupSeparator(string value)
  string get_PercentSymbol()
  void set_PercentSymbol(string value)
  string get_PerMilleSymbol()
  void set_PerMilleSymbol(string value)
  String[] get_NativeDigits()
  void set_NativeDigits(String[] value)
  DigitShapes get_DigitSubstitution()
  void set_DigitSubstitution(DigitShapes value)
  object GetFormat(Type formatType)
  NumberFormatInfo ReadOnly(NumberFormatInfo nfi)
  void ValidateParseStyleInteger(NumberStyles style)
  void ValidateParseStyleFloatingPoint(NumberStyles style)
--------------------------------------------------
Класс: System.Globalization.StringInfo
Наследуется от: object
Поля:
  string m_str
  Int32[] m_indexes
Свойства:
  Int32[] Indexes
  string String
  int LengthInTextElements
Методы:
  void .ctor()
  void .ctor(string value)
  void OnDeserializing(StreamingContext ctx)
  void OnDeserialized(StreamingContext ctx)
  bool Equals(object value)
  int GetHashCode()
  Int32[] get_Indexes()
  string get_String()
  void set_String(string value)
  int get_LengthInTextElements()
  string SubstringByTextElements(int startingTextElement)
  string SubstringByTextElements(int startingTextElement, int lengthInTextElements)
  string GetNextTextElement(string str)
  int GetCurrentTextElementLen(string str, int index, int len, UnicodeCategory& ucCurrent, Int32& currentCharCount)
  string GetNextTextElement(string str, int index)
  TextElementEnumerator GetTextElementEnumerator(string str)
  TextElementEnumerator GetTextElementEnumerator(string str, int index)
  Int32[] ParseCombiningCharacters(string str)
--------------------------------------------------
Класс: System.Globalization.TaiwanCalendar
Наследуется от: Calendar
Поля:
  EraInfo[] taiwanEraInfo
  Calendar modreq(System.Runtime.CompilerServices.IsVolatile) s_defaultInstance
  GregorianCalendarHelper helper
  DateTime calendarMinValue
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  Calendar GetDefaultInstance()
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_ID()
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
  int GetEra(DateTime time)
  int GetMonth(DateTime time)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  bool IsLeapYear(int year, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  Int32[] get_Eras()
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.TaiwanLunisolarCalendar
Наследуется от: EastAsianLunisolarCalendar
Поля:
  EraInfo[] taiwanLunisolarEraInfo
  GregorianCalendarHelper helper
  int MIN_LUNISOLAR_YEAR
  int MAX_LUNISOLAR_YEAR
  int MIN_GREGORIAN_YEAR
  int MIN_GREGORIAN_MONTH
  int MIN_GREGORIAN_DAY
  int MAX_GREGORIAN_YEAR
  int MAX_GREGORIAN_MONTH
  int MAX_GREGORIAN_DAY
  DateTime minDate
  DateTime maxDate
  Int32[0...,0...] yinfo
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  int DaysInYearBeforeMinSupportedYear
  int MinCalendarYear
  int MaxCalendarYear
  DateTime MinDate
  DateTime MaxDate
  EraInfo[] CalEraInfo
  int BaseCalendarID
  int ID
  Int32[] Eras
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  int get_DaysInYearBeforeMinSupportedYear()
  int get_MinCalendarYear()
  int get_MaxCalendarYear()
  DateTime get_MinDate()
  DateTime get_MaxDate()
  EraInfo[] get_CalEraInfo()
  int GetYearInfo(int LunarYear, int Index)
  int GetYear(int year, DateTime time)
  int GetGregorianYear(int year, int era)
  void .ctor()
  int GetEra(DateTime time)
  int get_BaseCalendarID()
  int get_ID()
  Int32[] get_Eras()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.TextElementEnumerator
Наследуется от: object
Поля:
  string str
  int index
  int startIndex
  int strLen
  int currTextElementLen
  UnicodeCategory uc
  int charLen
  int endIndex
  int nextTextElementLen
Свойства:
  object Current
  int ElementIndex
Методы:
  void .ctor(string str, int startIndex, int strLen)
  void OnDeserializing(StreamingContext ctx)
  void OnDeserialized(StreamingContext ctx)
  void OnSerializing(StreamingContext ctx)
  bool MoveNext()
  object get_Current()
  string GetTextElement()
  int get_ElementIndex()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.TextInfo
Наследуется от: object
Поля:
  string m_listSeparator
  bool m_isReadOnly
  string m_cultureName
  CultureData m_cultureData
  string m_textInfoName
  Nullable`1<bool> m_IsAsciiCasingSameAsInvariant
  TextInfo modreq(System.Runtime.CompilerServices.IsVolatile) s_Invariant
  string customCultureName
  int m_nDataItem
  bool m_useUserOverride
  int m_win32LangID
  int wordSeparatorMask
Свойства:
  TextInfo Invariant
  int ANSICodePage
  int OEMCodePage
  int MacCodePage
  int EBCDICCodePage
  int LCID
  string CultureName
  bool IsReadOnly
  string ListSeparator
  bool IsAsciiCasingSameAsInvariant
  bool IsRightToLeft
Методы:
  TextInfo get_Invariant()
  void .ctor(CultureData cultureData)
  void OnDeserializing(StreamingContext ctx)
  void OnDeserialized()
  void OnDeserialized(StreamingContext ctx)
  void OnSerializing(StreamingContext ctx)
  int GetHashCodeOrdinalIgnoreCase(string s)
  int GetHashCodeOrdinalIgnoreCase(string s, bool forceRandomizedHashing, long additionalEntropy)
  int CompareOrdinalIgnoreCaseEx(string strA, int indexA, string strB, int indexB, int lengthA, int lengthB)
  int IndexOfStringOrdinalIgnoreCase(string source, string value, int startIndex, int count)
  int LastIndexOfStringOrdinalIgnoreCase(string source, string value, int startIndex, int count)
  int get_ANSICodePage()
  int get_OEMCodePage()
  int get_MacCodePage()
  int get_EBCDICCodePage()
  int get_LCID()
  string get_CultureName()
  bool get_IsReadOnly()
  object Clone()
  TextInfo ReadOnly(TextInfo textInfo)
  void VerifyWritable()
  void SetReadOnlyState(bool readOnly)
  string get_ListSeparator()
  void set_ListSeparator(string value)
  char ToLower(char c)
  string ToLower(string str)
  char ToLowerAsciiInvariant(char c)
  char ToUpper(char c)
  string ToUpper(string str)
  char ToUpperAsciiInvariant(char c)
  bool IsAscii(char c)
  bool get_IsAsciiCasingSameAsInvariant()
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  string ToTitleCase(string str)
  int AddNonLetter(StringBuilder& result, String& input, int inputIndex, int charLen)
  int AddTitlecaseLetter(StringBuilder& result, String& input, int inputIndex, int charLen)
  bool IsWordSeparator(UnicodeCategory category)
  bool IsLetterCategory(UnicodeCategory uc)
  bool get_IsRightToLeft()
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  int GetCaseInsensitiveHashCode(string str)
  int GetCaseInsensitiveHashCode(string str, bool forceRandomizedHashing, long additionalEntropy)
  int GetInvariantCaseInsensitiveHashCode(string str)
  string ToUpperInternal(string str)
  string ToLowerInternal(string str)
  char ToUpperInternal(char c)
  char ToLowerInternal(char c)
  int InternalCompareStringOrdinalIgnoreCase(string strA, int indexA, string strB, int indexB, int lenA, int lenB)
  void ToLowerAsciiInvariant(ReadOnlySpan`1<char> source, Span`1<char> destination)
  void ToUpperAsciiInvariant(ReadOnlySpan`1<char> source, Span`1<char> destination)
  void ChangeCase(ReadOnlySpan`1<char> source, Span`1<char> destination, bool toUpper)
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.ThaiBuddhistCalendar
Наследуется от: Calendar
Поля:
  EraInfo[] thaiBuddhistEraInfo
  int ThaiBuddhistEra
  GregorianCalendarHelper helper
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int ID
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_ID()
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDaysInMonth(int year, int month, int era)
  int GetDaysInYear(int year, int era)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
  int GetEra(DateTime time)
  int GetMonth(DateTime time)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  bool IsLeapYear(int year, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  Int32[] get_Eras()
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.UmAlQuraCalendar
Наследуется от: Calendar
Поля:
  int MinCalendarYear
  int MaxCalendarYear
  DateMapping[] HijriYearInfo
  int UmAlQuraEra
  int DateCycle
  int DatePartYear
  int DatePartDayOfYear
  int DatePartMonth
  int DatePartDay
  DateTime minDate
  DateTime maxDate
  int DEFAULT_TWO_DIGIT_YEAR_MAX
Свойства:
  DateTime MinSupportedDateTime
  DateTime MaxSupportedDateTime
  CalendarAlgorithmType AlgorithmType
  int BaseCalendarID
  int ID
  int DaysInYearBeforeMinSupportedYear
  Int32[] Eras
  int TwoDigitYearMax
Методы:
  DateMapping[] InitDateMapping()
  DateTime get_MinSupportedDateTime()
  DateTime get_MaxSupportedDateTime()
  CalendarAlgorithmType get_AlgorithmType()
  void .ctor()
  int get_BaseCalendarID()
  int get_ID()
  int get_DaysInYearBeforeMinSupportedYear()
  void ConvertHijriToGregorian(int HijriYear, int HijriMonth, int HijriDay, Int32& yg, Int32& mg, Int32& dg)
  long GetAbsoluteDateUmAlQura(int year, int month, int day)
  void CheckTicksRange(long ticks)
  void CheckEraRange(int era)
  void CheckYearRange(int year, int era)
  void CheckYearMonthRange(int year, int month, int era)
  void ConvertGregorianToHijri(DateTime time, Int32& HijriYear, Int32& HijriMonth, Int32& HijriDay)
  int GetDatePart(DateTime time, int part)
  DateTime AddMonths(DateTime time, int months)
  DateTime AddYears(DateTime time, int years)
  int GetDayOfMonth(DateTime time)
  DayOfWeek GetDayOfWeek(DateTime time)
  int GetDayOfYear(DateTime time)
  int GetDaysInMonth(int year, int month, int era)
  int RealGetDaysInYear(int year)
  int GetDaysInYear(int year, int era)
  int GetEra(DateTime time)
  Int32[] get_Eras()
  int GetMonth(DateTime time)
  int GetMonthsInYear(int year, int era)
  int GetYear(DateTime time)
  bool IsLeapDay(int year, int month, int day, int era)
  int GetLeapMonth(int year, int era)
  bool IsLeapMonth(int year, int month, int era)
  bool IsLeapYear(int year, int era)
  DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
  int get_TwoDigitYearMax()
  void set_TwoDigitYearMax(int value)
  int ToFourDigitYear(int year)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.SortKey
Наследуется от: object
Поля:
  string source
  Byte[] key
  CompareOptions options
  int lcid
Свойства:
  string OriginalString
  Byte[] KeyData
Методы:
  int Compare(SortKey sortkey1, SortKey sortkey2)
  void .ctor(int lcid, string source, CompareOptions opt)
  void .ctor(int lcid, string source, Byte[] buffer, CompareOptions opt, int lv1Length, int lv2Length, int lv3Length, int kanaSmallLength, int markTypeLength, int katakanaLength, int kanaWidthLength, int identLength)
  void .ctor(string localeName, string str, CompareOptions options, Byte[] keyData)
  string get_OriginalString()
  Byte[] get_KeyData()
  bool Equals(object value)
  int GetHashCode()
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.ISimpleCollator
Поля:
Свойства:
Методы:
  SortKey GetSortKey(string source, CompareOptions options)
  int Compare(string s1, string s2)
  int Compare(string s1, int idx1, int len1, string s2, int idx2, int len2, CompareOptions options)
  bool IsPrefix(string src, string target, CompareOptions opt)
  bool IsSuffix(string src, string target, CompareOptions opt)
  int IndexOf(string s, string target, int start, int length, CompareOptions opt)
  int IndexOf(string s, char target, int start, int length, CompareOptions opt)
  int LastIndexOf(string s, string target, CompareOptions opt)
  int LastIndexOf(string s, string target, int start, int length, CompareOptions opt)
  int LastIndexOf(string s, char target, CompareOptions opt)
  int LastIndexOf(string s, char target, int start, int length, CompareOptions opt)
--------------------------------------------------
Класс: System.Globalization.CultureData
Наследуется от: object
Поля:
  string sAM1159
  string sPM2359
  string sTimeSeparator
  String[] modreq(System.Runtime.CompilerServices.IsVolatile) saLongTimes
  String[] modreq(System.Runtime.CompilerServices.IsVolatile) saShortTimes
  int iFirstDayOfWeek
  int iFirstWeekOfYear
  Int32[] modreq(System.Runtime.CompilerServices.IsVolatile) waCalendars
  CalendarData[] calendars
  string sISO639Language
  string sRealName
  bool bUseOverrides
  int calendarId
  int numberIndex
  int iDefaultAnsiCodePage
  int iDefaultOemCodePage
  int iDefaultMacCodePage
  int iDefaultEbcdicCodePage
  bool isRightToLeft
  string sListSeparator
  CultureData s_Invariant
Свойства:
  CultureData Invariant
  String[] LongTimes
  String[] ShortTimes
  string SISO639LANGNAME
  int IFIRSTDAYOFWEEK
  int IFIRSTWEEKOFYEAR
  string SAM1159
  string SPM2359
  string TimeSeparator
  Int32[] CalendarIds
  bool IsInvariantCulture
  string CultureName
  string SCOMPAREINFO
  string STEXTINFO
  int ILANGUAGE
  int IDEFAULTANSICODEPAGE
  int IDEFAULTOEMCODEPAGE
  int IDEFAULTMACCODEPAGE
  int IDEFAULTEBCDICCODEPAGE
  bool IsRightToLeft
  string SLIST
  bool UseUserOverride
Методы:
  void .ctor(string name)
  CultureData get_Invariant()
  CultureData GetCultureData(string cultureName, bool useUserOverride)
  CultureData GetCultureData(string cultureName, bool useUserOverride, int datetimeIndex, int calendarId, int numberIndex, string iso2lang, int ansiCodePage, int oemCodePage, int macCodePage, int ebcdicCodePage, bool rightToLeft, string listSeparator)
  CultureData GetCultureData(int culture, bool bUseUserOverride)
  void fill_culture_data(int datetimeIndex)
  CalendarData GetCalendar(int calendarId)
  String[] get_LongTimes()
  String[] get_ShortTimes()
  string get_SISO639LANGNAME()
  int get_IFIRSTDAYOFWEEK()
  int get_IFIRSTWEEKOFYEAR()
  string get_SAM1159()
  string get_SPM2359()
  string get_TimeSeparator()
  Int32[] get_CalendarIds()
  CalendarId[] GetCalendarIds()
  bool get_IsInvariantCulture()
  string get_CultureName()
  string get_SCOMPAREINFO()
  string get_STEXTINFO()
  int get_ILANGUAGE()
  int get_IDEFAULTANSICODEPAGE()
  int get_IDEFAULTOEMCODEPAGE()
  int get_IDEFAULTMACCODEPAGE()
  int get_IDEFAULTEBCDICCODEPAGE()
  bool get_IsRightToLeft()
  string get_SLIST()
  bool get_UseUserOverride()
  string CalendarName(int calendarId)
  String[] EraNames(int calendarId)
  String[] AbbrevEraNames(int calendarId)
  String[] AbbreviatedEnglishEraNames(int calendarId)
  String[] ShortDates(int calendarId)
  String[] LongDates(int calendarId)
  String[] YearMonths(int calendarId)
  String[] DayNames(int calendarId)
  String[] AbbreviatedDayNames(int calendarId)
  String[] SuperShortDayNames(int calendarId)
  String[] MonthNames(int calendarId)
  String[] GenitiveMonthNames(int calendarId)
  String[] AbbreviatedMonthNames(int calendarId)
  String[] AbbreviatedGenitiveMonthNames(int calendarId)
  String[] LeapYearMonthNames(int calendarId)
  string MonthDay(int calendarId)
  string DateSeparator(int calendarId)
  string GetDateSeparator(string format)
  string GetSeparator(string format, string timeParts)
  int IndexOfTimePart(string format, int startIndex, string timeParts)
  string UnescapeNlsString(string str, int start, int end)
  String[] ReescapeWin32Strings(String[] array)
  string ReescapeWin32String(string str)
  bool IsCustomCultureId(int cultureId)
  int strlen(Byte* s)
  string idx2string(Byte* data, int idx)
  Int32[] create_group_sizes_array(int gs0, int gs1)
  void GetNFIValues(NumberFormatInfo nfi)
  Byte* fill_number_data(int index, NumberFormatEntryManaged& nfe)
--------------------------------------------------
Класс: System.Globalization.CodePageDataItem
Наследуется от: object
Поля:
  int m_dataIndex
  int m_uiFamilyCodePage
  string m_webName
  string m_headerName
  string m_bodyName
  UInt32 m_flags
  Char[] sep
Свойства:
  string WebName
  int UIFamilyCodePage
  string HeaderName
  string BodyName
  UInt32 Flags
Методы:
  void .ctor(int dataIndex)
  string CreateString(string pStrings, UInt32 index)
  string get_WebName()
  int get_UIFamilyCodePage()
  string get_HeaderName()
  string get_BodyName()
  UInt32 get_Flags()
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.EncodingTable
Наследуется от: object
Поля:
  InternalEncodingDataItem[] encodingDataPtr
  InternalCodePageDataItem[] codePageDataPtr
  int MIMECONTF_MAILNEWS
  int MIMECONTF_BROWSER
  int MIMECONTF_MINIMAL
  int MIMECONTF_IMPORT
  int MIMECONTF_SAVABLE_MAILNEWS
  int MIMECONTF_SAVABLE_BROWSER
  int MIMECONTF_EXPORT
  int MIMECONTF_PRIVCONVERTER
  int MIMECONTF_VALID
  int MIMECONTF_VALID_NLS
  int MIMECONTF_MIME_IE4
  int MIMECONTF_MIME_LATEST
  int MIMECONTF_MIME_REGISTRY
  int lastEncodingItem
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) lastCodePageItem
  Dictionary`2<string, int> hashByName
  Dictionary`2<int, CodePageDataItem> hashByCodePage
Свойства:
Методы:
  int GetNumEncodingItems()
  InternalEncodingDataItem ENC(string name, ushort cp)
  InternalCodePageDataItem MapCodePageDataItem(ushort cp, ushort fcp, string names, UInt32 flags)
  void .cctor()
  int internalGetCodePageFromName(string name)
  EncodingInfo[] GetEncodings()
  int GetCodePageFromName(string name)
  CodePageDataItem GetCodePageDataItem(int codepage)
--------------------------------------------------
Класс: System.Globalization.InternalEncodingDataItem
Наследуется от: ValueType
Поля:
  string webName
  ushort codePage
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.InternalCodePageDataItem
Наследуется от: ValueType
Поля:
  ushort codePage
  ushort uiFamilyCodePage
  UInt32 flags
  string Names
Свойства:
Методы:
--------------------------------------------------
Класс: System.Globalization.TextInfoToUpperData
Наследуется от: object
Поля:
  Char[] range_00e0_0586
  Char[] range_1e01_1ff3
  Char[] range_2170_2184
  Char[] range_24d0_24e9
  Char[] range_2c30_2ce3
  Char[] range_2d00_2d25
  Char[] range_a641_a697
  Char[] range_a723_a78c
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.TextInfoToLowerData
Наследуется от: object
Поля:
  Char[] range_00c0_0556
  Char[] range_10a0_10c5
  Char[] range_1e00_1ffc
  Char[] range_2160_216f
  Char[] range_24b6_24cf
  Char[] range_2c00_2c2e
  Char[] range_2c60_2ce2
  Char[] range_a640_a696
  Char[] range_a722_a78b
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.CultureInfo
Наследуется от: object
Поля:
  CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) invariant_culture_info
  object shared_table_lock
  CultureInfo default_current_culture
  bool m_isReadOnly
  int cultureID
  int parent_lcid
  int datetime_index
  int number_index
  int default_calendar_type
  bool m_useUserOverride
  NumberFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) numInfo
  DateTimeFormatInfo modreq(System.Runtime.CompilerServices.IsVolatile) dateTimeInfo
  TextInfo modreq(System.Runtime.CompilerServices.IsVolatile) textInfo
  string m_name
  string englishname
  string nativename
  string iso3lang
  string iso2lang
  string win3lang
  string territory
  String[] native_calendar_names
  CompareInfo modreq(System.Runtime.CompilerServices.IsVolatile) compareInfo
  Void* textinfo_data
  int m_dataItem
  Calendar calendar
  CultureInfo parent_culture
  bool constructed
  Byte[] cached_serialized_form
  CultureData m_cultureData
  bool m_isInherited
  int InvariantCultureId
  int CalendarTypeBits
  int LOCALE_INVARIANT
  string MSG_READONLY
  CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultThreadCurrentUICulture
  CultureInfo modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultThreadCurrentCulture
  Dictionary`2<int, CultureInfo> shared_by_number
  Dictionary`2<string, CultureInfo> shared_by_name
  CultureInfo s_UserPreferredCultureInfoInAppX
  bool IsTaiwanSku
Свойства:
  CultureData _cultureData
  bool _isInherited
  CultureInfo InvariantCulture
  CultureInfo CurrentCulture
  CultureInfo CurrentUICulture
  string Territory
  string _name
  CultureTypes CultureTypes
  string IetfLanguageTag
  int KeyboardLayoutId
  int LCID
  string Name
  string NativeName
  string NativeCalendarName
  Calendar Calendar
  Calendar[] OptionalCalendars
  CultureInfo Parent
  TextInfo TextInfo
  string ThreeLetterISOLanguageName
  string ThreeLetterWindowsLanguageName
  string TwoLetterISOLanguageName
  bool UseUserOverride
  CompareInfo CompareInfo
  bool IsNeutralCulture
  NumberFormatInfo NumberFormat
  DateTimeFormatInfo DateTimeFormat
  string DisplayName
  string EnglishName
  CultureInfo InstalledUICulture
  bool IsReadOnly
  int CalendarType
  CultureInfo DefaultThreadCurrentCulture
  CultureInfo DefaultThreadCurrentUICulture
  string SortName
  CultureInfo UserDefaultUICulture
  CultureInfo UserDefaultCulture
  bool HasInvariantCultureName
Методы:
  CultureData get__cultureData()
  bool get__isInherited()
  CultureInfo get_InvariantCulture()
  CultureInfo get_CurrentCulture()
  void set_CurrentCulture(CultureInfo value)
  CultureInfo get_CurrentUICulture()
  void set_CurrentUICulture(CultureInfo value)
  CultureInfo ConstructCurrentCulture()
  CultureInfo ConstructCurrentUICulture()
  string get_Territory()
  string get__name()
  CultureTypes get_CultureTypes()
  CultureInfo GetConsoleFallbackUICulture()
  string get_IetfLanguageTag()
  int get_KeyboardLayoutId()
  int get_LCID()
  string get_Name()
  string get_NativeName()
  string get_NativeCalendarName()
  Calendar get_Calendar()
  Calendar[] get_OptionalCalendars()
  CultureInfo get_Parent()
  TextInfo get_TextInfo()
  string get_ThreeLetterISOLanguageName()
  string get_ThreeLetterWindowsLanguageName()
  string get_TwoLetterISOLanguageName()
  bool get_UseUserOverride()
  void ClearCachedData()
  object Clone()
  bool Equals(object value)
  CultureInfo[] GetCultures(CultureTypes types)
  Data GetTextInfoData()
  int GetHashCode()
  CultureInfo ReadOnly(CultureInfo ci)
  string ToString()
  CompareInfo get_CompareInfo()
  bool get_IsNeutralCulture()
  void CheckNeutral()
  NumberFormatInfo get_NumberFormat()
  void set_NumberFormat(NumberFormatInfo value)
  DateTimeFormatInfo get_DateTimeFormat()
  void set_DateTimeFormat(DateTimeFormatInfo value)
  string get_DisplayName()
  string get_EnglishName()
  CultureInfo get_InstalledUICulture()
  bool get_IsReadOnly()
  object GetFormat(Type formatType)
  void Construct()
  bool construct_internal_locale_from_lcid(int lcid)
  bool construct_internal_locale_from_name(string name)
  string get_current_locale_name()
  CultureInfo[] internal_get_cultures(bool neutral, bool specific, bool installed)
  void ConstructInvariant(bool read_only)
  TextInfo CreateTextInfo(bool readOnly)
  void .ctor(int culture)
  void .ctor(int culture, bool useUserOverride)
  void .ctor(int culture, bool useUserOverride, bool read_only)
  void .ctor(string name)
  void .ctor(string name, bool useUserOverride)
  void .ctor(string name, bool useUserOverride, bool read_only)
  void .ctor()
  void insert_into_shared_tables(CultureInfo c)
  CultureInfo GetCultureInfo(int culture)
  CultureInfo GetCultureInfo(string name)
  CultureInfo GetCultureInfo(string name, string altName)
  CultureInfo GetCultureInfoByIetfLanguageTag(string name)
  CultureInfo CreateCulture(string name, bool reference)
  CultureInfo CreateSpecificCulture(string name)
  bool ConstructLocaleFromName(string name)
  CultureInfo CreateSpecificCultureFromNeutral(string name)
  int get_CalendarType()
  Calendar CreateCalendar(int calendarType)
  Exception CreateNotFoundException(string name)
  CultureInfo get_DefaultThreadCurrentCulture()
  void set_DefaultThreadCurrentCulture(CultureInfo value)
  CultureInfo get_DefaultThreadCurrentUICulture()
  void set_DefaultThreadCurrentUICulture(CultureInfo value)
  string get_SortName()
  CultureInfo get_UserDefaultUICulture()
  CultureInfo get_UserDefaultCulture()
  void InitializeUserPreferredCultureInfoInAppX(OnCultureInfoChangedDelegate onCultureInfoChangedInAppX)
  void SetUserPreferredCultureInfoInAppX(string name)
  void OnCultureInfoChangedInAppX(string language)
  CultureInfo GetCultureInfoForUserPreferredLanguageInAppX()
  void SetCultureInfoForUserPreferredLanguageInAppX(CultureInfo cultureInfo)
  void CheckDomainSafetyObject(object obj, object container)
  bool get_HasInvariantCultureName()
  bool VerifyCultureName(string cultureName, bool throwException)
  bool VerifyCultureName(CultureInfo culture, bool throwException)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.IdnMapping
Наследуется от: object
Поля:
  bool allow_unassigned
  bool use_std3
  Punycode puny
Свойства:
  bool AllowUnassigned
  bool UseStd3AsciiRules
Методы:
  void .ctor()
  bool get_AllowUnassigned()
  void set_AllowUnassigned(bool value)
  bool get_UseStd3AsciiRules()
  void set_UseStd3AsciiRules(bool value)
  bool Equals(object obj)
  int GetHashCode()
  string GetAscii(string unicode)
  string GetAscii(string unicode, int index)
  string GetAscii(string unicode, int index, int count)
  string Convert(string input, int index, int count, bool toAscii)
  string ToAscii(string s, int offset)
  void VerifyLength(string s, int offset)
  string NamePrep(string s, int offset)
  void VerifyProhibitedCharacters(string s, int offset)
  void VerifyStd3AsciiRules(string s, int offset)
  string GetUnicode(string ascii)
  string GetUnicode(string ascii, int index)
  string GetUnicode(string ascii, int index, int count)
  string ToUnicode(string s, int offset)
--------------------------------------------------
Класс: System.Globalization.Bootstring
Наследуется от: object
Поля:
  char delimiter
  int base_num
  int tmin
  int tmax
  int skew
  int damp
  int initial_bias
  int initial_n
Свойства:
Методы:
  void .ctor(char delimiter, int baseNum, int tmin, int tmax, int skew, int damp, int initialBias, int initialN)
  string Encode(string s, int offset)
  char EncodeDigit(int d)
  int DecodeDigit(char c)
  int Adapt(int delta, int numPoints, bool firstTime)
  string Decode(string s, int offset)
--------------------------------------------------
Класс: System.Globalization.Punycode
Наследуется от: Bootstring
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Globalization.RegionInfo
Наследуется от: object
Поля:
  RegionInfo currentRegion
  int regionId
  string iso2Name
  string iso3Name
  string win3Name
  string englishName
  string nativeName
  string currencySymbol
  string isoCurrencySymbol
  string currencyEnglishName
  string currencyNativeName
Свойства:
  RegionInfo CurrentRegion
  string CurrencyEnglishName
  string CurrencySymbol
  string DisplayName
  string EnglishName
  int GeoId
  bool IsMetric
  string ISOCurrencySymbol
  string NativeName
  string CurrencyNativeName
  string Name
  string ThreeLetterISORegionName
  string ThreeLetterWindowsRegionName
  string TwoLetterISORegionName
Методы:
  RegionInfo get_CurrentRegion()
  void .ctor(int culture)
  void .ctor(string name)
  void .ctor(CultureInfo ci)
  bool GetByTerritory(CultureInfo ci)
  bool construct_internal_region_from_name(string name)
  string get_CurrencyEnglishName()
  string get_CurrencySymbol()
  string get_DisplayName()
  string get_EnglishName()
  int get_GeoId()
  bool get_IsMetric()
  string get_ISOCurrencySymbol()
  string get_NativeName()
  string get_CurrencyNativeName()
  string get_Name()
  string get_ThreeLetterISORegionName()
  string get_ThreeLetterWindowsRegionName()
  string get_TwoLetterISORegionName()
  bool Equals(object value)
  int GetHashCode()
  string ToString()
  void ClearCachedData()
--------------------------------------------------
Класс: System.Diagnostics.ConditionalAttribute
Наследуется от: Attribute
Поля:
  string <ConditionString>k__BackingField
Свойства:
  string ConditionString
Методы:
  void .ctor(string conditionString)
  string get_ConditionString()
--------------------------------------------------
Класс: System.Diagnostics.StackTraceHiddenAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Assert
Наследуется от: object
Поля:
  int COR_E_FAILFAST
  AssertFilter Filter
Свойства:
Методы:
  void .cctor()
  void Check(bool condition, string conditionString, string message)
  void Check(bool condition, string conditionString, string message, int exitCode)
  void Fail(string conditionString, string message)
  void Fail(string conditionString, string message, string windowTitle, int exitCode)
  void Fail(string conditionString, string message, int exitCode, TraceFormat stackTraceFormat)
  void Fail(string conditionString, string message, string windowTitle, int exitCode, TraceFormat stackTraceFormat, int numStackFramesToSkip)
  int ShowDefaultAssertDialog(string conditionString, string message, string stackTrace, string windowTitle)
--------------------------------------------------
Класс: System.Diagnostics.AssertFilter
Наследуется от: object
Поля:
Свойства:
Методы:
  AssertFilters AssertFailure(string condition, string message, StackTrace location, TraceFormat stackTraceFormat, string windowTitle)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.DefaultFilter
Наследуется от: AssertFilter
Поля:
Свойства:
Методы:
  void .ctor()
  AssertFilters AssertFailure(string condition, string message, StackTrace location, TraceFormat stackTraceFormat, string windowTitle)
--------------------------------------------------
Класс: System.Diagnostics.AssertFilters
Наследуется от: Enum
Поля:
  int value__
  AssertFilters FailDebug
  AssertFilters FailIgnore
  AssertFilters FailTerminate
  AssertFilters FailContinueFilter
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.DebuggerStepThroughAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.DebuggerStepperBoundaryAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.DebuggerHiddenAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.DebuggerNonUserCodeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.DebuggableAttribute
Наследуется от: Attribute
Поля:
  DebuggingModes m_debuggingModes
Свойства:
  bool IsJITTrackingEnabled
  bool IsJITOptimizerDisabled
  DebuggingModes DebuggingFlags
Методы:
  void .ctor(bool isJITTrackingEnabled, bool isJITOptimizerDisabled)
  void .ctor(DebuggingModes modes)
  bool get_IsJITTrackingEnabled()
  bool get_IsJITOptimizerDisabled()
  DebuggingModes get_DebuggingFlags()
--------------------------------------------------
Класс: System.Diagnostics.DebuggerBrowsableState
Наследуется от: Enum
Поля:
  int value__
  DebuggerBrowsableState Never
  DebuggerBrowsableState Collapsed
  DebuggerBrowsableState RootHidden
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.DebuggerBrowsableAttribute
Наследуется от: Attribute
Поля:
  DebuggerBrowsableState state
Свойства:
  DebuggerBrowsableState State
Методы:
  void .ctor(DebuggerBrowsableState state)
  DebuggerBrowsableState get_State()
--------------------------------------------------
Класс: System.Diagnostics.DebuggerTypeProxyAttribute
Наследуется от: Attribute
Поля:
  string typeName
  string targetName
  Type target
Свойства:
  string ProxyTypeName
  Type Target
  string TargetTypeName
Методы:
  void .ctor(Type type)
  void .ctor(string typeName)
  string get_ProxyTypeName()
  void set_Target(Type value)
  Type get_Target()
  string get_TargetTypeName()
  void set_TargetTypeName(string value)
--------------------------------------------------
Класс: System.Diagnostics.DebuggerDisplayAttribute
Наследуется от: Attribute
Поля:
  string name
  string value
  string type
  string targetName
  Type target
Свойства:
  string Value
  string Name
  string Type
  Type Target
  string TargetTypeName
Методы:
  void .ctor(string value)
  string get_Value()
  string get_Name()
  void set_Name(string value)
  string get_Type()
  void set_Type(string value)
  void set_Target(Type value)
  Type get_Target()
  string get_TargetTypeName()
  void set_TargetTypeName(string value)
--------------------------------------------------
Класс: System.Diagnostics.DebuggerVisualizerAttribute
Наследуется от: Attribute
Поля:
  string visualizerObjectSourceName
  string visualizerName
  string description
  string targetName
  Type target
Свойства:
  string VisualizerObjectSourceTypeName
  string VisualizerTypeName
  string Description
  Type Target
  string TargetTypeName
Методы:
  void .ctor(string visualizerTypeName)
  void .ctor(string visualizerTypeName, string visualizerObjectSourceTypeName)
  void .ctor(string visualizerTypeName, Type visualizerObjectSource)
  void .ctor(Type visualizer)
  void .ctor(Type visualizer, Type visualizerObjectSource)
  void .ctor(Type visualizer, string visualizerObjectSourceTypeName)
  string get_VisualizerObjectSourceTypeName()
  string get_VisualizerTypeName()
  string get_Description()
  void set_Description(string value)
  void set_Target(Type value)
  Type get_Target()
  void set_TargetTypeName(string value)
  string get_TargetTypeName()
--------------------------------------------------
Класс: System.Diagnostics.DebugPrivate
Наследуется от: object
Поля:
Свойства:
Методы:
  void Assert(bool condition)
  void Assert(bool condition, string message)
  void Assert(bool condition, string message, string detailMessage)
  void Assert(bool condition, string message, string detailMessageFormat, Object[] args)
  void Fail(string message)
  void Fail(string message, string detailMessage)
--------------------------------------------------
Класс: System.Diagnostics.Debugger
Наследуется от: object
Поля:
  string DefaultCategory
Свойства:
  bool IsAttached
Методы:
  bool get_IsAttached()
  bool IsAttached_internal()
  void Break()
  bool IsLogging()
  bool Launch()
  void Log_icall(int level, String& category, String& message)
  void Log(int level, string category, string message)
  void NotifyOfCrossThreadDependency()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.StackFrame
Наследуется от: object
Поля:
  int OFFSET_UNKNOWN
  int ilOffset
  int nativeOffset
  long methodAddress
  UInt32 methodIndex
  MethodBase methodBase
  string fileName
  int lineNumber
  int columnNumber
  string internalMethodName
Свойства:
Методы:
  bool get_frame_info(int skip, bool needFileInfo, MethodBase& method, Int32& iloffset, Int32& native_offset, String& file, Int32& line, Int32& column)
  void .ctor()
  void .ctor(bool fNeedFileInfo)
  void .ctor(int skipFrames)
  void .ctor(int skipFrames, bool fNeedFileInfo)
  void .ctor(string fileName, int lineNumber)
  void .ctor(string fileName, int lineNumber, int colNumber)
  int GetFileLineNumber()
  int GetFileColumnNumber()
  string GetFileName()
  string GetSecureFileName()
  int GetILOffset()
  MethodBase GetMethod()
  int GetNativeOffset()
  long GetMethodAddress()
  UInt32 GetMethodIndex()
  string GetInternalMethodName()
  string ToString()
--------------------------------------------------
Класс: System.Diagnostics.StackTrace
Наследуется от: object
Поля:
  int METHODS_TO_SKIP
  string prefix
  StackFrame[] frames
  StackTrace[] captured_traces
  bool debug_info
  bool isAotidSet
  string aotid
Свойства:
  int FrameCount
Методы:
  void .ctor()
  void .ctor(bool fNeedFileInfo)
  void .ctor(int skipFrames)
  void .ctor(int skipFrames, bool fNeedFileInfo)
  void init_frames(int skipFrames, bool fNeedFileInfo)
  StackFrame[] get_trace(Exception e, int skipFrames, bool fNeedFileInfo)
  void .ctor(Exception e)
  void .ctor(Exception e, bool fNeedFileInfo)
  void .ctor(Exception e, int skipFrames)
  void .ctor(Exception e, int skipFrames, bool fNeedFileInfo)
  void .ctor(StackFrame frame)
  void .ctor(Thread targetThread, bool needFileInfo)
  void .ctor(StackFrame[] frames)
  int get_FrameCount()
  StackFrame GetFrame(int index)
  StackFrame[] GetFrames()
  string GetAotId()
  bool AddFrames(StringBuilder sb, bool separator, Boolean& isAsync)
  void GetFullNameForStackTrace(StringBuilder sb, MethodBase mi, bool needsNewLine, Boolean& skipped, Boolean& isAsync)
  void ConvertAsyncStateMachineMethod(MethodBase& method, Type& declaringType)
  string ToString()
  string ToString(TraceFormat traceFormat)
--------------------------------------------------
Класс: System.Diagnostics.Contracts.PureAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractClassAttribute
Наследуется от: Attribute
Поля:
  Type _typeWithContracts
Свойства:
  Type TypeContainingContracts
Методы:
  void .ctor(Type typeContainingContracts)
  Type get_TypeContainingContracts()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractClassForAttribute
Наследуется от: Attribute
Поля:
  Type _typeIAmAContractFor
Свойства:
  Type TypeContractsAreFor
Методы:
  void .ctor(Type typeContractsAreFor)
  Type get_TypeContractsAreFor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractInvariantMethodAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractVerificationAttribute
Наследуется от: Attribute
Поля:
  bool _value
Свойства:
  bool Value
Методы:
  void .ctor(bool value)
  bool get_Value()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute
Наследуется от: Attribute
Поля:
  string _publicName
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractArgumentValidatorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractAbbreviatorAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractOptionAttribute
Наследуется от: Attribute
Поля:
  string _category
  string _setting
  bool _enabled
  string _value
Свойства:
  string Category
  string Setting
  bool Enabled
  string Value
Методы:
  void .ctor(string category, string setting, bool enabled)
  void .ctor(string category, string setting, string value)
  string get_Category()
  string get_Setting()
  bool get_Enabled()
  string get_Value()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.Contract
Наследуется от: object
Поля:
  bool _assertingMustUseRewriter
Свойства:
Методы:
  void Assume(bool condition)
  void Assume(bool condition, string userMessage)
  void Assert(bool condition)
  void Assert(bool condition, string userMessage)
  void Requires(bool condition)
  void Requires(bool condition, string userMessage)
  void Requires(bool condition)
  void Requires(bool condition, string userMessage)
  void Ensures(bool condition)
  void Ensures(bool condition, string userMessage)
  void EnsuresOnThrow(bool condition)
  void EnsuresOnThrow(bool condition, string userMessage)
  T Result()
  T ValueAtReturn(T& value)
  T OldValue(T value)
  void Invariant(bool condition)
  void Invariant(bool condition, string userMessage)
  bool ForAll(int fromInclusive, int toExclusive, Predicate`1<int> predicate)
  bool ForAll(IEnumerable`1<T> collection, Predicate`1<T> predicate)
  bool Exists(int fromInclusive, int toExclusive, Predicate`1<int> predicate)
  bool Exists(IEnumerable`1<T> collection, Predicate`1<T> predicate)
  void EndContractBlock()
  void ReportFailure(ContractFailureKind failureKind, string userMessage, string conditionText, Exception innerException)
  void AssertMustUseRewriter(ContractFailureKind kind, string contractKind)
  void add_ContractFailed(EventHandler`1<ContractFailedEventArgs> value)
  void remove_ContractFailed(EventHandler`1<ContractFailedEventArgs> value)
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractFailureKind
Наследуется от: Enum
Поля:
  int value__
  ContractFailureKind Precondition
  ContractFailureKind Postcondition
  ContractFailureKind PostconditionOnException
  ContractFailureKind Invariant
  ContractFailureKind Assert
  ContractFailureKind Assume
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractFailedEventArgs
Наследуется от: EventArgs
Поля:
  ContractFailureKind _failureKind
  string _message
  string _condition
  Exception _originalException
  bool _handled
  bool _unwind
  Exception thrownDuringHandler
Свойства:
  string Message
  string Condition
  ContractFailureKind FailureKind
  Exception OriginalException
  bool Handled
  bool Unwind
Методы:
  void .ctor(ContractFailureKind failureKind, string message, string condition, Exception originalException)
  string get_Message()
  string get_Condition()
  ContractFailureKind get_FailureKind()
  Exception get_OriginalException()
  bool get_Handled()
  void SetHandled()
  bool get_Unwind()
  void SetUnwind()
--------------------------------------------------
Класс: System.Diagnostics.Contracts.ContractException
Наследуется от: Exception
Поля:
  ContractFailureKind _Kind
  string _UserMessage
  string _Condition
Свойства:
  ContractFailureKind Kind
  string Failure
  string UserMessage
  string Condition
Методы:
  ContractFailureKind get_Kind()
  string get_Failure()
  string get_UserMessage()
  string get_Condition()
  void .ctor()
  void .ctor(ContractFailureKind kind, string failure, string userMessage, string condition, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Diagnostics.Contracts.Internal.ContractHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  string RaiseContractFailedEvent(ContractFailureKind failureKind, string userMessage, string conditionText, Exception innerException)
  void TriggerFailure(ContractFailureKind kind, string displayMessage, string userMessage, string conditionText, Exception innerException)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.SymbolToken
Наследуется от: ValueType
Поля:
  int _token
Свойства:
Методы:
  void .ctor(int val)
  int GetToken()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(SymbolToken obj)
  bool op_Equality(SymbolToken a, SymbolToken b)
  bool op_Inequality(SymbolToken a, SymbolToken b)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolBinder
Поля:
Свойства:
Методы:
  ISymbolReader GetReader(int importer, string filename, string searchPath)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolBinder1
Поля:
Свойства:
Методы:
  ISymbolReader GetReader(IntPtr importer, string filename, string searchPath)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolDocument
Поля:
Свойства:
  Guid CheckSumAlgorithmId
  Guid DocumentType
  bool HasEmbeddedSource
  Guid Language
  Guid LanguageVendor
  int SourceLength
  string URL
Методы:
  Guid get_CheckSumAlgorithmId()
  Guid get_DocumentType()
  bool get_HasEmbeddedSource()
  Guid get_Language()
  Guid get_LanguageVendor()
  int get_SourceLength()
  string get_URL()
  int FindClosestLine(int line)
  Byte[] GetCheckSum()
  Byte[] GetSourceRange(int startLine, int startColumn, int endLine, int endColumn)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
Поля:
Свойства:
Методы:
  void SetCheckSum(Guid algorithmId, Byte[] checkSum)
  void SetSource(Byte[] source)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolMethod
Поля:
Свойства:
  ISymbolScope RootScope
  int SequencePointCount
  SymbolToken Token
Методы:
  ISymbolScope get_RootScope()
  int get_SequencePointCount()
  SymbolToken get_Token()
  ISymbolNamespace GetNamespace()
  int GetOffset(ISymbolDocument document, int line, int column)
  ISymbolVariable[] GetParameters()
  Int32[] GetRanges(ISymbolDocument document, int line, int column)
  ISymbolScope GetScope(int offset)
  void GetSequencePoints(Int32[] offsets, ISymbolDocument[] documents, Int32[] lines, Int32[] columns, Int32[] endLines, Int32[] endColumns)
  bool GetSourceStartEnd(ISymbolDocument[] docs, Int32[] lines, Int32[] columns)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolNamespace
Поля:
Свойства:
  string Name
Методы:
  string get_Name()
  ISymbolNamespace[] GetNamespaces()
  ISymbolVariable[] GetVariables()
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolReader
Поля:
Свойства:
  SymbolToken UserEntryPoint
Методы:
  SymbolToken get_UserEntryPoint()
  ISymbolDocument GetDocument(string url, Guid language, Guid languageVendor, Guid documentType)
  ISymbolDocument[] GetDocuments()
  ISymbolVariable[] GetGlobalVariables()
  ISymbolMethod GetMethod(SymbolToken method)
  ISymbolMethod GetMethod(SymbolToken method, int version)
  ISymbolMethod GetMethodFromDocumentPosition(ISymbolDocument document, int line, int column)
  ISymbolNamespace[] GetNamespaces()
  Byte[] GetSymAttribute(SymbolToken parent, string name)
  ISymbolVariable[] GetVariables(SymbolToken parent)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolScope
Поля:
Свойства:
  int EndOffset
  ISymbolMethod Method
  ISymbolScope Parent
  int StartOffset
Методы:
  int get_EndOffset()
  ISymbolMethod get_Method()
  ISymbolScope get_Parent()
  int get_StartOffset()
  ISymbolScope[] GetChildren()
  ISymbolVariable[] GetLocals()
  ISymbolNamespace[] GetNamespaces()
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolVariable
Поля:
Свойства:
  int AddressField1
  int AddressField2
  int AddressField3
  SymAddressKind AddressKind
  object Attributes
  int EndOffset
  string Name
  int StartOffset
Методы:
  int get_AddressField1()
  int get_AddressField2()
  int get_AddressField3()
  SymAddressKind get_AddressKind()
  object get_Attributes()
  int get_EndOffset()
  string get_Name()
  int get_StartOffset()
  Byte[] GetSignature()
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.ISymbolWriter
Поля:
Свойства:
Методы:
  void Close()
  void CloseMethod()
  void CloseNamespace()
  void CloseScope(int endOffset)
  ISymbolDocumentWriter DefineDocument(string url, Guid language, Guid languageVendor, Guid documentType)
  void DefineField(SymbolToken parent, string name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, int addr1, int addr2, int addr3)
  void DefineGlobalVariable(string name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, int addr1, int addr2, int addr3)
  void DefineLocalVariable(string name, FieldAttributes attributes, Byte[] signature, SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset)
  void DefineParameter(string name, ParameterAttributes attributes, int sequence, SymAddressKind addrKind, int addr1, int addr2, int addr3)
  void DefineSequencePoints(ISymbolDocumentWriter document, Int32[] offsets, Int32[] lines, Int32[] columns, Int32[] endLines, Int32[] endColumns)
  void Initialize(IntPtr emitter, string filename, bool fFullBuild)
  void OpenMethod(SymbolToken method)
  void OpenNamespace(string name)
  int OpenScope(int startOffset)
  void SetMethodSourceRange(ISymbolDocumentWriter startDoc, int startLine, int startColumn, ISymbolDocumentWriter endDoc, int endLine, int endColumn)
  void SetScopeRange(int scopeID, int startOffset, int endOffset)
  void SetSymAttribute(SymbolToken parent, string name, Byte[] data)
  void SetUnderlyingWriter(IntPtr underlyingWriter)
  void SetUserEntryPoint(SymbolToken entryMethod)
  void UsingNamespace(string fullName)
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.SymAddressKind
Наследуется от: Enum
Поля:
  int value__
  SymAddressKind ILOffset
  SymAddressKind NativeRVA
  SymAddressKind NativeRegister
  SymAddressKind NativeRegisterRelative
  SymAddressKind NativeOffset
  SymAddressKind NativeRegisterRegister
  SymAddressKind NativeRegisterStack
  SymAddressKind NativeStackRegister
  SymAddressKind BitField
  SymAddressKind NativeSectionOffset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.SymDocumentType
Наследуется от: object
Поля:
  Guid Text
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.SymLanguageType
Наследуется от: object
Поля:
  Guid Basic
  Guid C
  Guid Cobol
  Guid CPlusPlus
  Guid CSharp
  Guid ILAssembly
  Guid Java
  Guid JScript
  Guid MCPlusPlus
  Guid Pascal
  Guid SMC
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SymbolStore.SymLanguageVendor
Наследуется от: object
Поля:
  Guid Microsoft
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventActivityOptions
Наследуется от: Enum
Поля:
  int value__
  EventActivityOptions None
  EventActivityOptions Disable
  EventActivityOptions Recursive
  EventActivityOptions Detachable
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventSourceException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(Exception innerException)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventSourceOptions
Наследуется от: ValueType
Поля:
  EventKeywords keywords
  EventTags tags
  EventActivityOptions activityOptions
  byte level
  byte opcode
  byte valuesSet
  byte keywordsSet
  byte tagsSet
  byte levelSet
  byte opcodeSet
  byte activityOptionsSet
Свойства:
  EventLevel Level
  EventOpcode Opcode
  bool IsOpcodeSet
  EventKeywords Keywords
  EventTags Tags
  EventActivityOptions ActivityOptions
Методы:
  EventLevel get_Level()
  void set_Level(EventLevel value)
  EventOpcode get_Opcode()
  void set_Opcode(EventOpcode value)
  bool get_IsOpcodeSet()
  EventKeywords get_Keywords()
  void set_Keywords(EventKeywords value)
  EventTags get_Tags()
  void set_Tags(EventTags value)
  EventActivityOptions get_ActivityOptions()
  void set_ActivityOptions(EventActivityOptions value)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventTags
Наследуется от: Enum
Поля:
  int value__
  EventTags None
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventLevel
Наследуется от: Enum
Поля:
  int value__
  EventLevel LogAlways
  EventLevel Critical
  EventLevel Error
  EventLevel Warning
  EventLevel Informational
  EventLevel Verbose
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventTask
Наследуется от: Enum
Поля:
  int value__
  EventTask None
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventOpcode
Наследуется от: Enum
Поля:
  int value__
  EventOpcode Info
  EventOpcode Start
  EventOpcode Stop
  EventOpcode DataCollectionStart
  EventOpcode DataCollectionStop
  EventOpcode Extension
  EventOpcode Reply
  EventOpcode Resume
  EventOpcode Suspend
  EventOpcode Send
  EventOpcode Receive
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventChannel
Наследуется от: Enum
Поля:
  byte value__
  EventChannel None
  EventChannel Admin
  EventChannel Operational
  EventChannel Analytic
  EventChannel Debug
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventKeywords
Наследуется от: Enum
Поля:
  long value__
  EventKeywords None
  EventKeywords All
  EventKeywords MicrosoftTelemetry
  EventKeywords WdiContext
  EventKeywords WdiDiagnostic
  EventKeywords Sqm
  EventKeywords AuditFailure
  EventKeywords AuditSuccess
  EventKeywords CorrelationHint
  EventKeywords EventLogClassic
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventAttribute
Наследуется от: Attribute
Поля:
  int <EventId>k__BackingField
  EventActivityOptions <ActivityOptions>k__BackingField
  EventLevel <Level>k__BackingField
  EventKeywords <Keywords>k__BackingField
  EventOpcode <Opcode>k__BackingField
  EventChannel <Channel>k__BackingField
  string <Message>k__BackingField
  EventTask <Task>k__BackingField
  EventTags <Tags>k__BackingField
  byte <Version>k__BackingField
Свойства:
  int EventId
  EventActivityOptions ActivityOptions
  EventLevel Level
  EventKeywords Keywords
  EventOpcode Opcode
  EventChannel Channel
  string Message
  EventTask Task
  EventTags Tags
  byte Version
Методы:
  void .ctor(int eventId)
  int get_EventId()
  void set_EventId(int value)
  EventActivityOptions get_ActivityOptions()
  void set_ActivityOptions(EventActivityOptions value)
  EventLevel get_Level()
  void set_Level(EventLevel value)
  EventKeywords get_Keywords()
  void set_Keywords(EventKeywords value)
  EventOpcode get_Opcode()
  void set_Opcode(EventOpcode value)
  EventChannel get_Channel()
  void set_Channel(EventChannel value)
  string get_Message()
  void set_Message(string value)
  EventTask get_Task()
  void set_Task(EventTask value)
  EventTags get_Tags()
  void set_Tags(EventTags value)
  byte get_Version()
  void set_Version(byte value)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventCommand
Наследуется от: Enum
Поля:
  int value__
  EventCommand Update
  EventCommand SendManifest
  EventCommand Enable
  EventCommand Disable
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventCommandEventArgs
Наследуется от: EventArgs
Поля:
Свойства:
  IDictionary`2<string, string> Arguments
  EventCommand Command
Методы:
  void .ctor()
  IDictionary`2<string, string> get_Arguments()
  EventCommand get_Command()
  bool DisableEvent(int eventId)
  bool EnableEvent(int eventId)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventCounter
Наследуется от: DiagnosticCounter
Поля:
Свойства:
Методы:
  void .ctor(string name, EventSource eventSource)
  void WriteMetric(float value)
  void WriteMetric(double value)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventDataAttribute
Наследуется от: Attribute
Поля:
Свойства:
  string Name
Методы:
  string get_Name()
  void set_Name(string value)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventFieldAttribute
Наследуется от: Attribute
Поля:
Свойства:
  EventFieldFormat Format
  EventFieldTags Tags
Методы:
  EventFieldFormat get_Format()
  void set_Format(EventFieldFormat value)
  EventFieldTags get_Tags()
  void set_Tags(EventFieldTags value)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventFieldFormat
Наследуется от: Enum
Поля:
  int value__
  EventFieldFormat Boolean
  EventFieldFormat Default
  EventFieldFormat Hexadecimal
  EventFieldFormat HResult
  EventFieldFormat Json
  EventFieldFormat String
  EventFieldFormat Xml
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventFieldTags
Наследуется от: Enum
Поля:
  int value__
  EventFieldTags None
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventIgnoreAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventListener
Наследуется от: object
Поля:
  EventHandler`1<EventSourceCreatedEventArgs> EventSourceCreated
  EventHandler`1<EventWrittenEventArgs> EventWritten
Свойства:
Методы:
  void .ctor()
  int EventSourceIndex(EventSource eventSource)
  void EnableEvents(EventSource eventSource, EventLevel level)
  void EnableEvents(EventSource eventSource, EventLevel level, EventKeywords matchAnyKeyword)
  void EnableEvents(EventSource eventSource, EventLevel level, EventKeywords matchAnyKeyword, IDictionary`2<string, string> arguments)
  void DisableEvents(EventSource eventSource)
  void OnEventSourceCreated(EventSource eventSource)
  void OnEventWritten(EventWrittenEventArgs eventData)
  void Dispose()
  void add_EventSourceCreated(EventHandler`1<EventSourceCreatedEventArgs> value)
  void remove_EventSourceCreated(EventHandler`1<EventSourceCreatedEventArgs> value)
  void add_EventWritten(EventHandler`1<EventWrittenEventArgs> value)
  void remove_EventWritten(EventHandler`1<EventWrittenEventArgs> value)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventManifestOptions
Наследуется от: Enum
Поля:
  int value__
  EventManifestOptions AllCultures
  EventManifestOptions AllowEventSourceOverride
  EventManifestOptions None
  EventManifestOptions OnlyIfNeededForRegistration
  EventManifestOptions Strict
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventSource
Наследуется от: object
Поля:
  string <Name>k__BackingField
  EventSourceSettings <Settings>k__BackingField
Свойства:
  Exception ConstructionException
  Guid CurrentThreadActivityId
  Guid Guid
  string Name
  EventSourceSettings Settings
Методы:
  void .ctor()
  void .ctor(bool throwOnEventWriteErrors)
  void .ctor(EventSourceSettings settings)
  void .ctor(EventSourceSettings settings, String[] traits)
  void .ctor(string eventSourceName)
  void .ctor(string eventSourceName, EventSourceSettings config)
  void .ctor(string eventSourceName, EventSourceSettings config, String[] traits)
  void .ctor(Guid eventSourceGuid, string eventSourceName)
  void Finalize()
  Exception get_ConstructionException()
  Guid get_CurrentThreadActivityId()
  Guid get_Guid()
  string get_Name()
  void set_Name(string value)
  EventSourceSettings get_Settings()
  void set_Settings(EventSourceSettings value)
  bool IsEnabled()
  bool IsEnabled(EventLevel level, EventKeywords keywords)
  bool IsEnabled(EventLevel level, EventKeywords keywords, EventChannel channel)
  void Dispose()
  string GetTrait(string key)
  void Write(string eventName)
  void Write(string eventName, EventSourceOptions options)
  void Write(string eventName, T data)
  void Write(string eventName, EventSourceOptions options, T data)
  void Write(string eventName, EventSourceOptions& options, T& data)
  void Write(string eventName, EventSourceOptions& options, Guid& activityId, Guid& relatedActivityId, T& data)
  void Dispose(bool disposing)
  void OnEventCommand(EventCommandEventArgs command)
  void ReportOutOfBandMessage(string msg, bool flush)
  void WriteEvent(int eventId)
  void WriteEvent(int eventId, Byte[] arg1)
  void WriteEvent(int eventId, int arg1)
  void WriteEvent(int eventId, string arg1)
  void WriteEvent(int eventId, int arg1, int arg2)
  void WriteEvent(int eventId, int arg1, int arg2, int arg3)
  void WriteEvent(int eventId, int arg1, string arg2)
  void WriteEvent(int eventId, long arg1)
  void WriteEvent(int eventId, long arg1, Byte[] arg2)
  void WriteEvent(int eventId, long arg1, long arg2)
  void WriteEvent(int eventId, long arg1, long arg2, long arg3)
  void WriteEvent(int eventId, long arg1, string arg2)
  void WriteEvent(int eventId, Object[] args)
  void WriteEvent(int eventId, string arg1, int arg2)
  void WriteEvent(int eventId, string arg1, int arg2, int arg3)
  void WriteEvent(int eventId, string arg1, long arg2)
  void WriteEvent(int eventId, string arg1, string arg2)
  void WriteEvent(int eventId, string arg1, string arg2, string arg3)
  void WriteEventCore(int eventId, int eventDataCount, EventData* data)
  void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId, Object[] args)
  void WriteEventWithRelatedActivityIdCore(int eventId, Guid* relatedActivityId, int eventDataCount, EventData* data)
  void add_EventCommandExecuted(EventHandler`1<EventCommandEventArgs> value)
  void remove_EventCommandExecuted(EventHandler`1<EventCommandEventArgs> value)
  string GenerateManifest(Type eventSourceType, string assemblyPathToIncludeInManifest)
  string GenerateManifest(Type eventSourceType, string assemblyPathToIncludeInManifest, EventManifestOptions flags)
  Guid GetGuid(Type eventSourceType)
  string GetName(Type eventSourceType)
  IEnumerable`1<EventSource> GetSources()
  void SendCommand(EventSource eventSource, EventCommand command, IDictionary`2<string, string> commandArguments)
  void SetCurrentThreadActivityId(Guid activityId)
  void SetCurrentThreadActivityId(Guid activityId, Guid& oldActivityThatWillContinue)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventSourceAttribute
Наследуется от: Attribute
Поля:
  string <Guid>k__BackingField
  string <LocalizationResources>k__BackingField
  string <Name>k__BackingField
Свойства:
  string Guid
  string LocalizationResources
  string Name
Методы:
  string get_Guid()
  void set_Guid(string value)
  string get_LocalizationResources()
  void set_LocalizationResources(string value)
  string get_Name()
  void set_Name(string value)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventSourceCreatedEventArgs
Наследуется от: EventArgs
Поля:
  EventSource <EventSource>k__BackingField
Свойства:
  EventSource EventSource
Методы:
  EventSource get_EventSource()
  void set_EventSource(EventSource value)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventSourceSettings
Наследуется от: Enum
Поля:
  int value__
  EventSourceSettings Default
  EventSourceSettings ThrowOnEventWriteErrors
  EventSourceSettings EtwManifestEventFormat
  EventSourceSettings EtwSelfDescribingEventFormat
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Tracing.EventWrittenEventArgs
Наследуется от: EventArgs
Поля:
  int <EventId>k__BackingField
  long <OSThreadId>k__BackingField
  DateTime <TimeStamp>k__BackingField
  string <EventName>k__BackingField
  EventSource <EventSource>k__BackingField
  string <Message>k__BackingField
  ReadOnlyCollection`1<object> <Payload>k__BackingField
  ReadOnlyCollection`1<string> <PayloadNames>k__BackingField
  Guid <RelatedActivityId>k__BackingField
Свойства:
  Guid ActivityId
  EventChannel Channel
  int EventId
  long OSThreadId
  DateTime TimeStamp
  string EventName
  EventSource EventSource
  EventKeywords Keywords
  EventLevel Level
  string Message
  EventOpcode Opcode
  ReadOnlyCollection`1<object> Payload
  ReadOnlyCollection`1<string> PayloadNames
  Guid RelatedActivityId
  EventTags Tags
  EventTask Task
  byte Version
Методы:
  void .ctor(EventSource eventSource)
  Guid get_ActivityId()
  EventChannel get_Channel()
  int get_EventId()
  void set_EventId(int value)
  long get_OSThreadId()
  void set_OSThreadId(long value)
  DateTime get_TimeStamp()
  void set_TimeStamp(DateTime value)
  string get_EventName()
  void set_EventName(string value)
  EventSource get_EventSource()
  void set_EventSource(EventSource value)
  EventKeywords get_Keywords()
  EventLevel get_Level()
  string get_Message()
  void set_Message(string value)
  EventOpcode get_Opcode()
  ReadOnlyCollection`1<object> get_Payload()
  void set_Payload(ReadOnlyCollection`1<object> value)
  ReadOnlyCollection`1<string> get_PayloadNames()
  void set_PayloadNames(ReadOnlyCollection`1<string> value)
  Guid get_RelatedActivityId()
  void set_RelatedActivityId(Guid value)
  EventTags get_Tags()
  EventTask get_Task()
  byte get_Version()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.NonEventAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.DiagnosticCounter
Наследуется от: object
Поля:
  string <DisplayName>k__BackingField
  string <DisplayUnits>k__BackingField
  EventSource <EventSource>k__BackingField
  string <Name>k__BackingField
Свойства:
  string DisplayName
  string DisplayUnits
  EventSource EventSource
  string Name
Методы:
  void .ctor(string name, EventSource eventSource)
  void .ctor()
  string get_DisplayName()
  void set_DisplayName(string value)
  string get_DisplayUnits()
  void set_DisplayUnits(string value)
  EventSource get_EventSource()
  string get_Name()
  void AddMetadata(string key, string value)
  void Dispose()
--------------------------------------------------
Класс: System.Diagnostics.Tracing.IncrementingEventCounter
Наследуется от: DiagnosticCounter
Поля:
  TimeSpan <DisplayRateTimeScale>k__BackingField
Свойства:
  TimeSpan DisplayRateTimeScale
Методы:
  void .ctor(string name, EventSource eventSource)
  void Increment(double increment)
  TimeSpan get_DisplayRateTimeScale()
  void set_DisplayRateTimeScale(TimeSpan value)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.IncrementingPollingCounter
Наследуется от: DiagnosticCounter
Поля:
  TimeSpan <DisplayRateTimeScale>k__BackingField
Свойства:
  TimeSpan DisplayRateTimeScale
Методы:
  void .ctor(string name, EventSource eventSource, Func`1<double> totalValueProvider)
  TimeSpan get_DisplayRateTimeScale()
  void set_DisplayRateTimeScale(TimeSpan value)
--------------------------------------------------
Класс: System.Diagnostics.Tracing.PollingCounter
Наследуется от: DiagnosticCounter
Поля:
Свойства:
Методы:
  void .ctor(string name, EventSource eventSource, Func`1<double> metricProvider)
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
Наследуется от: Attribute
Поля:
  string <Category>k__BackingField
  string <CheckId>k__BackingField
  string <Scope>k__BackingField
  string <Target>k__BackingField
  string <MessageId>k__BackingField
  string <Justification>k__BackingField
Свойства:
  string Category
  string CheckId
  string Scope
  string Target
  string MessageId
  string Justification
Методы:
  void .ctor(string category, string checkId)
  string get_Category()
  string get_CheckId()
  string get_Scope()
  void set_Scope(string value)
  string get_Target()
  void set_Target(string value)
  string get_MessageId()
  void set_MessageId(string value)
  string get_Justification()
  void set_Justification(string value)
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.AllowNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.DisallowNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.MaybeNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.NotNullAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute
Наследуется от: Attribute
Поля:
  bool <ReturnValue>k__BackingField
Свойства:
  bool ReturnValue
Методы:
  void .ctor(bool returnValue)
  bool get_ReturnValue()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.NotNullWhenAttribute
Наследуется от: Attribute
Поля:
  bool <ReturnValue>k__BackingField
Свойства:
  bool ReturnValue
Методы:
  void .ctor(bool returnValue)
  bool get_ReturnValue()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute
Наследуется от: Attribute
Поля:
  string <ParameterName>k__BackingField
Свойства:
  string ParameterName
Методы:
  void .ctor(string parameterName)
  string get_ParameterName()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute
Наследуется от: Attribute
Поля:
  bool <ParameterValue>k__BackingField
Свойства:
  bool ParameterValue
Методы:
  void .ctor(bool parameterValue)
  bool get_ParameterValue()
--------------------------------------------------
Класс: System.Configuration.Assemblies.AssemblyHashAlgorithm
Наследуется от: Enum
Поля:
  int value__
  AssemblyHashAlgorithm None
  AssemblyHashAlgorithm MD5
  AssemblyHashAlgorithm SHA1
  AssemblyHashAlgorithm SHA256
  AssemblyHashAlgorithm SHA384
  AssemblyHashAlgorithm SHA512
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.Assemblies.AssemblyVersionCompatibility
Наследуется от: Enum
Поля:
  int value__
  AssemblyVersionCompatibility SameMachine
  AssemblyVersionCompatibility SameProcess
  AssemblyVersionCompatibility SameDomain
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.Assemblies.AssemblyHash
Наследуется от: ValueType
Поля:
  AssemblyHashAlgorithm _algorithm
  Byte[] _value
  AssemblyHash Empty
Свойства:
  AssemblyHashAlgorithm Algorithm
Методы:
  AssemblyHashAlgorithm get_Algorithm()
  void set_Algorithm(AssemblyHashAlgorithm value)
  void .ctor(AssemblyHashAlgorithm algorithm, Byte[] value)
  void .ctor(Byte[] value)
  object Clone()
  Byte[] GetValue()
  void SetValue(Byte[] value)
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Comparer
Наследуется от: object
Поля:
  CompareInfo _compareInfo
  Comparer Default
  Comparer DefaultInvariant
Свойства:
Методы:
  void .ctor(CultureInfo culture)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  int Compare(object a, object b)
  void .cctor()
--------------------------------------------------
Класс: System.Collections.DictionaryEntry
Наследуется от: ValueType
Поля:
  object _key
  object _value
Свойства:
  object Key
  object Value
Методы:
  void .ctor(object key, object value)
  object get_Key()
  void set_Key(object value)
  object get_Value()
  void set_Value(object value)
  void Deconstruct(Object& key, Object& value)
--------------------------------------------------
Класс: System.Collections.HashHelpers
Наследуется от: object
Поля:
  int HashCollisionThreshold
  int HashPrime
  Int32[] primes
  int MaxPrimeArrayLength
  ConditionalWeakTable`2<object, SerializationInfo> s_serializationInfoTable
Свойства:
  ConditionalWeakTable`2<object, SerializationInfo> SerializationInfoTable
Методы:
  bool IsPrime(int candidate)
  int GetPrime(int min)
  int ExpandPrime(int oldSize)
  ConditionalWeakTable`2<object, SerializationInfo> get_SerializationInfoTable()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.ICollection
Поля:
Свойства:
  int Count
  object SyncRoot
  bool IsSynchronized
Методы:
  void CopyTo(Array array, int index)
  int get_Count()
  object get_SyncRoot()
  bool get_IsSynchronized()
--------------------------------------------------
Класс: System.Collections.IComparer
Поля:
Свойства:
Методы:
  int Compare(object x, object y)
--------------------------------------------------
Класс: System.Collections.IDictionary
Поля:
Свойства:
  object Item
  ICollection Keys
  ICollection Values
  bool IsReadOnly
  bool IsFixedSize
Методы:
  object get_Item(object key)
  void set_Item(object key, object value)
  ICollection get_Keys()
  ICollection get_Values()
  bool Contains(object key)
  void Add(object key, object value)
  void Clear()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  IDictionaryEnumerator GetEnumerator()
  void Remove(object key)
--------------------------------------------------
Класс: System.Collections.IDictionaryEnumerator
Поля:
Свойства:
  object Key
  object Value
  DictionaryEntry Entry
Методы:
  object get_Key()
  object get_Value()
  DictionaryEntry get_Entry()
--------------------------------------------------
Класс: System.Collections.IEnumerable
Поля:
Свойства:
Методы:
  IEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Collections.IEnumerator
Поля:
Свойства:
  object Current
Методы:
  bool MoveNext()
  object get_Current()
  void Reset()
--------------------------------------------------
Класс: System.Collections.IEqualityComparer
Поля:
Свойства:
Методы:
  bool Equals(object x, object y)
  int GetHashCode(object obj)
--------------------------------------------------
Класс: System.Collections.IList
Поля:
Свойства:
  object Item
  bool IsReadOnly
  bool IsFixedSize
Методы:
  object get_Item(int index)
  void set_Item(int index, object value)
  int Add(object value)
  bool Contains(object value)
  void Clear()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  int IndexOf(object value)
  void Insert(int index, object value)
  void Remove(object value)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Collections.IStructuralComparable
Поля:
Свойства:
Методы:
  int CompareTo(object other, IComparer comparer)
--------------------------------------------------
Класс: System.Collections.IStructuralEquatable
Поля:
Свойства:
Методы:
  bool Equals(object other, IEqualityComparer comparer)
  int GetHashCode(IEqualityComparer comparer)
--------------------------------------------------
Класс: System.Collections.ListDictionaryInternal
Наследуется от: object
Поля:
  DictionaryNode head
  int version
  int count
  object _syncRoot
Свойства:
  object Item
  int Count
  ICollection Keys
  bool IsReadOnly
  bool IsFixedSize
  bool IsSynchronized
  object SyncRoot
  ICollection Values
Методы:
  void .ctor()
  object get_Item(object key)
  void set_Item(object key, object value)
  int get_Count()
  ICollection get_Keys()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool get_IsSynchronized()
  object get_SyncRoot()
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  bool Contains(object key)
  void CopyTo(Array array, int index)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Remove(object key)
--------------------------------------------------
Класс: System.Collections.CompatibleComparer
Наследуется от: object
Поля:
  IHashCodeProvider _hcp
  IComparer _comparer
Свойства:
  IHashCodeProvider HashCodeProvider
  IComparer Comparer
Методы:
  void .ctor(IHashCodeProvider hashCodeProvider, IComparer comparer)
  IHashCodeProvider get_HashCodeProvider()
  IComparer get_Comparer()
  bool Equals(object a, object b)
  int Compare(object a, object b)
  int GetHashCode(object obj)
--------------------------------------------------
Класс: System.Collections.CaseInsensitiveComparer
Наследуется от: object
Поля:
  CompareInfo _compareInfo
  CaseInsensitiveComparer modreq(System.Runtime.CompilerServices.IsVolatile) s_InvariantCaseInsensitiveComparer
Свойства:
  CaseInsensitiveComparer Default
  CaseInsensitiveComparer DefaultInvariant
Методы:
  void .ctor()
  void .ctor(CultureInfo culture)
  CaseInsensitiveComparer get_Default()
  CaseInsensitiveComparer get_DefaultInvariant()
  int Compare(object a, object b)
--------------------------------------------------
Класс: System.Collections.CaseInsensitiveHashCodeProvider
Наследуется от: object
Поля:
  CaseInsensitiveHashCodeProvider modreq(System.Runtime.CompilerServices.IsVolatile) s_invariantCaseInsensitiveHashCodeProvider
  CompareInfo _compareInfo
Свойства:
  CaseInsensitiveHashCodeProvider Default
  CaseInsensitiveHashCodeProvider DefaultInvariant
Методы:
  void .ctor()
  void .ctor(CultureInfo culture)
  CaseInsensitiveHashCodeProvider get_Default()
  CaseInsensitiveHashCodeProvider get_DefaultInvariant()
  int GetHashCode(object obj)
--------------------------------------------------
Класс: System.Collections.CollectionBase
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  ArrayList InnerList
  IList List
  int Capacity
  int Count
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object System.Collections.IList.Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  ArrayList get_InnerList()
  IList get_List()
  int get_Capacity()
  void set_Capacity(int value)
  int get_Count()
  void Clear()
  void RemoveAt(int index)
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Remove(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  IEnumerator GetEnumerator()
  void OnSet(int index, object oldValue, object newValue)
  void OnInsert(int index, object value)
  void OnClear()
  void OnRemove(int index, object value)
  void OnValidate(object value)
  void OnSetComplete(int index, object oldValue, object newValue)
  void OnInsertComplete(int index, object value)
  void OnClearComplete()
  void OnRemoveComplete(int index, object value)
--------------------------------------------------
Класс: System.Collections.DictionaryBase
Наследуется от: object
Поля:
  Hashtable _hashtable
Свойства:
  Hashtable InnerHashtable
  IDictionary Dictionary
  int Count
  bool System.Collections.IDictionary.IsReadOnly
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.ICollection.IsSynchronized
  ICollection System.Collections.IDictionary.Keys
  object System.Collections.ICollection.SyncRoot
  ICollection System.Collections.IDictionary.Values
  object System.Collections.IDictionary.Item
Методы:
  Hashtable get_InnerHashtable()
  IDictionary get_Dictionary()
  int get_Count()
  bool System.Collections.IDictionary.get_IsReadOnly()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.ICollection.get_IsSynchronized()
  ICollection System.Collections.IDictionary.get_Keys()
  object System.Collections.ICollection.get_SyncRoot()
  ICollection System.Collections.IDictionary.get_Values()
  void CopyTo(Array array, int index)
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  bool System.Collections.IDictionary.Contains(object key)
  void System.Collections.IDictionary.Add(object key, object value)
  void Clear()
  void System.Collections.IDictionary.Remove(object key)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  object OnGet(object key, object currentValue)
  void OnSet(object key, object oldValue, object newValue)
  void OnInsert(object key, object value)
  void OnClear()
  void OnRemove(object key, object value)
  void OnValidate(object key, object value)
  void OnSetComplete(object key, object oldValue, object newValue)
  void OnInsertComplete(object key, object value)
  void OnClearComplete()
  void OnRemoveComplete(object key, object value)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.KeyValuePairs
Наследуется от: object
Поля:
  object _key
  object _value
Свойства:
Методы:
  void .ctor(object key, object value)
--------------------------------------------------
Класс: System.Collections.Queue
Наследуется от: object
Поля:
  Object[] _array
  int _head
  int _tail
  int _size
  int _growFactor
  int _version
  object _syncRoot
  int _MinimumGrow
  int _ShrinkThreshold
Свойства:
  int Count
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(int capacity, float growFactor)
  void .ctor(ICollection col)
  int get_Count()
  object Clone()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void Clear()
  void CopyTo(Array array, int index)
  void Enqueue(object obj)
  IEnumerator GetEnumerator()
  object Dequeue()
  object Peek()
  Queue Synchronized(Queue queue)
  bool Contains(object obj)
  object GetElement(int i)
  Object[] ToArray()
  void SetCapacity(int capacity)
  void TrimToSize()
--------------------------------------------------
Класс: System.Collections.ReadOnlyCollectionBase
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  ArrayList InnerList
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  ArrayList get_InnerList()
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.SortedList
Наследуется от: object
Поля:
  Object[] keys
  Object[] values
  int _size
  int version
  IComparer comparer
  KeyList keyList
  ValueList valueList
  object _syncRoot
  int _defaultCapacity
  int MaxArrayLength
Свойства:
  int Capacity
  int Count
  ICollection Keys
  ICollection Values
  bool IsReadOnly
  bool IsFixedSize
  bool IsSynchronized
  object SyncRoot
  object Item
Методы:
  void .ctor()
  void Init()
  void .ctor(int initialCapacity)
  void .ctor(IComparer comparer)
  void .ctor(IComparer comparer, int capacity)
  void .ctor(IDictionary d)
  void .ctor(IDictionary d, IComparer comparer)
  void Add(object key, object value)
  int get_Capacity()
  void set_Capacity(int value)
  int get_Count()
  ICollection get_Keys()
  ICollection get_Values()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void Clear()
  object Clone()
  bool Contains(object key)
  bool ContainsKey(object key)
  bool ContainsValue(object value)
  void CopyTo(Array array, int arrayIndex)
  KeyValuePairs[] ToKeyValuePairsArray()
  void EnsureCapacity(int min)
  object GetByIndex(int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator GetEnumerator()
  object GetKey(int index)
  IList GetKeyList()
  IList GetValueList()
  object get_Item(object key)
  void set_Item(object key, object value)
  int IndexOfKey(object key)
  int IndexOfValue(object value)
  void Insert(int index, object key, object value)
  void RemoveAt(int index)
  void Remove(object key)
  void SetByIndex(int index, object value)
  SortedList Synchronized(SortedList list)
  void TrimToSize()
--------------------------------------------------
Класс: System.Collections.Stack
Наследуется от: object
Поля:
  Object[] _array
  int _size
  int _version
  object _syncRoot
  int _defaultCapacity
Свойства:
  int Count
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor()
  void .ctor(int initialCapacity)
  void .ctor(ICollection col)
  int get_Count()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void Clear()
  object Clone()
  bool Contains(object obj)
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  object Peek()
  object Pop()
  void Push(object obj)
  Stack Synchronized(Stack stack)
  Object[] ToArray()
--------------------------------------------------
Класс: System.Collections.BitArray
Наследуется от: object
Поля:
  Int32[] m_array
  int m_length
  int _version
  object _syncRoot
  int _ShrinkThreshold
  int BitsPerInt32
  int BytesPerInt32
  int BitsPerByte
Свойства:
  bool Item
  int Length
  int Count
  object SyncRoot
  bool IsSynchronized
  bool IsReadOnly
Методы:
  void .ctor(int length)
  void .ctor(int length, bool defaultValue)
  void .ctor(Byte[] bytes)
  void .ctor(Boolean[] values)
  void .ctor(Int32[] values)
  void .ctor(BitArray bits)
  bool get_Item(int index)
  void set_Item(int index, bool value)
  bool Get(int index)
  void Set(int index, bool value)
  void SetAll(bool value)
  BitArray And(BitArray value)
  BitArray Or(BitArray value)
  BitArray Xor(BitArray value)
  BitArray Not()
  BitArray RightShift(int count)
  BitArray LeftShift(int count)
  int get_Length()
  void set_Length(int value)
  void CopyTo(Array array, int index)
  int get_Count()
  object get_SyncRoot()
  bool get_IsSynchronized()
  bool get_IsReadOnly()
  object Clone()
  IEnumerator GetEnumerator()
  int GetArrayLength(int n, int div)
--------------------------------------------------
Класс: System.Collections.StructuralComparisons
Наследуется от: object
Поля:
  IComparer modreq(System.Runtime.CompilerServices.IsVolatile) s_StructuralComparer
  IEqualityComparer modreq(System.Runtime.CompilerServices.IsVolatile) s_StructuralEqualityComparer
Свойства:
  IComparer StructuralComparer
  IEqualityComparer StructuralEqualityComparer
Методы:
  IComparer get_StructuralComparer()
  IEqualityComparer get_StructuralEqualityComparer()
--------------------------------------------------
Класс: System.Collections.StructuralEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(object x, object y)
  int GetHashCode(object obj)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.StructuralComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  int Compare(object x, object y)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.ArrayList
Наследуется от: object
Поля:
  Object[] _items
  int _size
  int _version
  object _syncRoot
  int _defaultCapacity
  int MaxArrayLength
Свойства:
  int Capacity
  int Count
  bool IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
  object Item
Методы:
  void .ctor(bool trash)
  void .ctor()
  void .ctor(int capacity)
  void .ctor(ICollection c)
  int get_Capacity()
  void set_Capacity(int value)
  int get_Count()
  bool get_IsFixedSize()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  object get_SyncRoot()
  object get_Item(int index)
  void set_Item(int index, object value)
  ArrayList Adapter(IList list)
  int Add(object value)
  void AddRange(ICollection c)
  int BinarySearch(int index, int count, object value, IComparer comparer)
  int BinarySearch(object value)
  int BinarySearch(object value, IComparer comparer)
  void Clear()
  object Clone()
  bool Contains(object item)
  void CopyTo(Array array)
  void CopyTo(Array array, int arrayIndex)
  void CopyTo(int index, Array array, int arrayIndex, int count)
  void EnsureCapacity(int min)
  IList FixedSize(IList list)
  ArrayList FixedSize(ArrayList list)
  IEnumerator GetEnumerator()
  IEnumerator GetEnumerator(int index, int count)
  int IndexOf(object value)
  int IndexOf(object value, int startIndex)
  int IndexOf(object value, int startIndex, int count)
  void Insert(int index, object value)
  void InsertRange(int index, ICollection c)
  int LastIndexOf(object value)
  int LastIndexOf(object value, int startIndex)
  int LastIndexOf(object value, int startIndex, int count)
  IList ReadOnly(IList list)
  ArrayList ReadOnly(ArrayList list)
  void Remove(object obj)
  void RemoveAt(int index)
  void RemoveRange(int index, int count)
  ArrayList Repeat(object value, int count)
  void Reverse()
  void Reverse(int index, int count)
  void SetRange(int index, ICollection c)
  ArrayList GetRange(int index, int count)
  void Sort()
  void Sort(IComparer comparer)
  void Sort(int index, int count, IComparer comparer)
  IList Synchronized(IList list)
  ArrayList Synchronized(ArrayList list)
  Object[] ToArray()
  Array ToArray(Type type)
  void TrimToSize()
--------------------------------------------------
Класс: System.Collections.Hashtable
Наследуется от: object
Поля:
  int HashPrime
  int InitialSize
  string LoadFactorName
  string VersionName
  string ComparerName
  string HashCodeProviderName
  string HashSizeName
  string KeysName
  string ValuesName
  string KeyComparerName
  bucket[] _buckets
  int _count
  int _occupancy
  int _loadsize
  float _loadFactor
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _version
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isWriterInProgress
  ICollection _keys
  ICollection _values
  IEqualityComparer _keycomparer
  object _syncRoot
  ConditionalWeakTable`2<object, SerializationInfo> s_serializationInfoTable
Свойства:
  ConditionalWeakTable`2<object, SerializationInfo> SerializationInfoTable
  IHashCodeProvider hcp
  IComparer comparer
  IEqualityComparer EqualityComparer
  object Item
  bool IsReadOnly
  bool IsFixedSize
  bool IsSynchronized
  ICollection Keys
  ICollection Values
  object SyncRoot
  int Count
Методы:
  ConditionalWeakTable`2<object, SerializationInfo> get_SerializationInfoTable()
  IHashCodeProvider get_hcp()
  void set_hcp(IHashCodeProvider value)
  IComparer get_comparer()
  void set_comparer(IComparer value)
  IEqualityComparer get_EqualityComparer()
  void .ctor(bool trash)
  void .ctor()
  void .ctor(int capacity)
  void .ctor(int capacity, float loadFactor)
  void .ctor(int capacity, float loadFactor, IEqualityComparer equalityComparer)
  void .ctor(IHashCodeProvider hcp, IComparer comparer)
  void .ctor(IEqualityComparer equalityComparer)
  void .ctor(int capacity, IHashCodeProvider hcp, IComparer comparer)
  void .ctor(int capacity, IEqualityComparer equalityComparer)
  void .ctor(IDictionary d)
  void .ctor(IDictionary d, float loadFactor)
  void .ctor(IDictionary d, IHashCodeProvider hcp, IComparer comparer)
  void .ctor(IDictionary d, IEqualityComparer equalityComparer)
  void .ctor(int capacity, float loadFactor, IHashCodeProvider hcp, IComparer comparer)
  void .ctor(IDictionary d, float loadFactor, IHashCodeProvider hcp, IComparer comparer)
  void .ctor(IDictionary d, float loadFactor, IEqualityComparer equalityComparer)
  void .ctor(SerializationInfo info, StreamingContext context)
  UInt32 InitHash(object key, int hashsize, UInt32& seed, UInt32& incr)
  void Add(object key, object value)
  void Clear()
  object Clone()
  bool Contains(object key)
  bool ContainsKey(object key)
  bool ContainsValue(object value)
  void CopyKeys(Array array, int arrayIndex)
  void CopyEntries(Array array, int arrayIndex)
  void CopyTo(Array array, int arrayIndex)
  KeyValuePairs[] ToKeyValuePairsArray()
  void CopyValues(Array array, int arrayIndex)
  object get_Item(object key)
  void set_Item(object key, object value)
  void expand()
  void rehash()
  void UpdateVersion()
  void rehash(int newsize)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IDictionaryEnumerator GetEnumerator()
  int GetHash(object key)
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool get_IsSynchronized()
  bool KeyEquals(object item, object key)
  ICollection get_Keys()
  ICollection get_Values()
  void Insert(object key, object nvalue, bool add)
  void putEntry(bucket[] newBuckets, object key, object nvalue, int hashcode)
  void Remove(object key)
  object get_SyncRoot()
  int get_Count()
  Hashtable Synchronized(Hashtable table)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void OnDeserialization(object sender)
--------------------------------------------------
Класс: System.Collections.IHashCodeProvider
Поля:
Свойства:
Методы:
  int GetHashCode(object obj)
--------------------------------------------------
Класс: System.Collections.EmptyReadOnlyDictionaryInternal
Наследуется от: object
Поля:
Свойства:
  int Count
  object SyncRoot
  bool IsSynchronized
  object Item
  ICollection Keys
  ICollection Values
  bool IsReadOnly
  bool IsFixedSize
Методы:
  void .ctor()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void CopyTo(Array array, int index)
  int get_Count()
  object get_SyncRoot()
  bool get_IsSynchronized()
  object get_Item(object key)
  void set_Item(object key, object value)
  ICollection get_Keys()
  ICollection get_Values()
  bool Contains(object key)
  void Add(object key, object value)
  void Clear()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  IDictionaryEnumerator GetEnumerator()
  void Remove(object key)
--------------------------------------------------
Класс: System.Collections.Concurrent.ConcurrentQueue`1
Наследуется от: object
Поля:
  int InitialSegmentLength
  int MaxSegmentLength
  object _crossSegmentLock
  Segment modreq(System.Runtime.CompilerServices.IsVolatile) _tail
  Segment modreq(System.Runtime.CompilerServices.IsVolatile) _head
Свойства:
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool IsEmpty
  int Count
Методы:
  void .ctor()
  void InitializeFromCollection(IEnumerable`1<T> collection)
  void .ctor(IEnumerable`1<T> collection)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T item)
  bool System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T& item)
  bool get_IsEmpty()
  T[] ToArray()
  int get_Count()
  int GetCount(Segment<T> s, int head, int tail)
  long GetCount(Segment<T> head, int headHead, Segment<T> tail, int tailTail)
  void CopyTo(T[] array, int index)
  IEnumerator`1<T> GetEnumerator()
  void SnapForObservation(Segment& head, Int32& headHead, Segment& tail, Int32& tailTail)
  T GetItemWhenAvailable(Segment<T> segment, int i)
  IEnumerator`1<T> Enumerate(Segment<T> head, int headHead, Segment<T> tail, int tailTail)
  void Enqueue(T item)
  void EnqueueSlow(T item)
  bool TryDequeue(T& result)
  bool TryDequeueSlow(T& item)
  bool TryPeek(T& result)
  bool TryPeek(T& result, bool resultUsed)
  void Clear()
--------------------------------------------------
Класс: System.Collections.Concurrent.PaddedHeadAndTail
Наследуется от: ValueType
Поля:
  int Head
  int Tail
Свойства:
Методы:
--------------------------------------------------
Класс: System.Collections.Concurrent.CDSCollectionETWBCLProvider
Наследуется от: EventSource
Поля:
  CDSCollectionETWBCLProvider Log
  EventKeywords ALL_KEYWORDS
  int CONCURRENTSTACK_FASTPUSHFAILED_ID
  int CONCURRENTSTACK_FASTPOPFAILED_ID
  int CONCURRENTDICTIONARY_ACQUIRINGALLLOCKS_ID
  int CONCURRENTBAG_TRYTAKESTEALS_ID
  int CONCURRENTBAG_TRYPEEKSTEALS_ID
Свойства:
Методы:
  void .ctor()
  void ConcurrentStack_FastPushFailed(int spinCount)
  void ConcurrentStack_FastPopFailed(int spinCount)
  void ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets)
  void ConcurrentBag_TryTakeSteals()
  void ConcurrentBag_TryPeekSteals()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Concurrent.ConcurrentDictionary`2
Наследуется от: object
Поля:
  Tables modreq(System.Runtime.CompilerServices.IsVolatile) _tables
  IEqualityComparer`1<TKey> _comparer
  bool _growLockArray
  int _budget
  KeyValuePair`2[] _serializationArray
  int _serializationConcurrencyLevel
  int _serializationCapacity
  int DefaultCapacity
  int MaxLockNumber
  bool s_isValueWriteAtomic
Свойства:
  TValue Item
  int Count
  bool IsEmpty
  ICollection`1<TKey> Keys
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  ICollection`1<TValue> Values
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.IDictionary.IsReadOnly
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  object System.Collections.IDictionary.Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  int DefaultConcurrencyLevel
Методы:
  bool IsValueWriteAtomic()
  void .ctor()
  void .ctor(int concurrencyLevel, int capacity)
  void .ctor(IEnumerable`1<KeyValuePair`2<TKey, TValue>> collection)
  void .ctor(IEqualityComparer`1<TKey> comparer)
  void .ctor(IEnumerable`1<KeyValuePair`2<TKey, TValue>> collection, IEqualityComparer`1<TKey> comparer)
  void .ctor(int concurrencyLevel, IEnumerable`1<KeyValuePair`2<TKey, TValue>> collection, IEqualityComparer`1<TKey> comparer)
  void InitializeFromCollection(IEnumerable`1<KeyValuePair`2<TKey, TValue>> collection)
  void .ctor(int concurrencyLevel, int capacity, IEqualityComparer`1<TKey> comparer)
  void .ctor(int concurrencyLevel, int capacity, bool growLockArray, IEqualityComparer`1<TKey> comparer)
  bool TryAdd(TKey key, TValue value)
  bool ContainsKey(TKey key)
  bool TryRemove(TKey key, TValue& value)
  bool TryRemoveInternal(TKey key, TValue& value, bool matchValue, TValue oldValue)
  bool TryGetValue(TKey key, TValue& value)
  bool TryGetValueInternal(TKey key, int hashcode, TValue& value)
  bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue)
  bool TryUpdateInternal(TKey key, int hashcode, TValue newValue, TValue comparisonValue)
  void Clear()
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int index)
  KeyValuePair`2[] ToArray()
  void CopyToPairs(KeyValuePair`2[] array, int index)
  void CopyToEntries(DictionaryEntry[] array, int index)
  void CopyToObjects(Object[] array, int index)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  bool TryAddInternal(TKey key, int hashcode, TValue value, bool updateIfExists, bool acquireLock, TValue& resultingValue)
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  void ThrowKeyNotFoundException(object key)
  void ThrowKeyNullException()
  int get_Count()
  int GetCountInternal()
  TValue GetOrAdd(TKey key, Func`2<TKey, TValue> valueFactory)
  TValue GetOrAdd(TKey key, Func`3<TKey, TArg, TValue> valueFactory, TArg factoryArgument)
  TValue GetOrAdd(TKey key, TValue value)
  TValue AddOrUpdate(TKey key, Func`3<TKey, TArg, TValue> addValueFactory, Func`4<TKey, TValue, TArg, TValue> updateValueFactory, TArg factoryArgument)
  TValue AddOrUpdate(TKey key, Func`2<TKey, TValue> addValueFactory, Func`3<TKey, TValue, TValue> updateValueFactory)
  TValue AddOrUpdate(TKey key, TValue addValue, Func`3<TKey, TValue, TValue> updateValueFactory)
  bool get_IsEmpty()
  void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value)
  bool System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey key)
  ICollection`1<TKey> get_Keys()
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
  ICollection`1<TValue> get_Values()
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> keyValuePair)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.IDictionary.Add(object key, object value)
  bool System.Collections.IDictionary.Contains(object key)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.IDictionary.get_IsReadOnly()
  ICollection System.Collections.IDictionary.get_Keys()
  void System.Collections.IDictionary.Remove(object key)
  ICollection System.Collections.IDictionary.get_Values()
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void GrowTable(Tables<TKey, TValue> tables)
  int GetBucket(int hashcode, int bucketCount)
  void GetBucketAndLockNo(int hashcode, Int32& bucketNo, Int32& lockNo, int bucketCount, int lockCount)
  int get_DefaultConcurrencyLevel()
  void AcquireAllLocks(Int32& locksAcquired)
  void AcquireLocks(int fromInclusive, int toExclusive, Int32& locksAcquired)
  void ReleaseLocks(int fromInclusive, int toExclusive)
  ReadOnlyCollection`1<TKey> GetKeys()
  ReadOnlyCollection`1<TValue> GetValues()
  void OnSerializing(StreamingContext context)
  void OnSerialized(StreamingContext context)
  void OnDeserialized(StreamingContext context)
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Concurrent.IDictionaryDebugView`2
Наследуется от: object
Поля:
  IDictionary`2<K, V> _dictionary
Свойства:
  KeyValuePair`2[] Items
Методы:
  void .ctor(IDictionary`2<K, V> dictionary)
  KeyValuePair`2[] get_Items()
--------------------------------------------------
Класс: System.Collections.Concurrent.ConcurrentStack`1
Наследуется от: object
Поля:
  Node modreq(System.Runtime.CompilerServices.IsVolatile) _head
  int BACKOFF_MAX_YIELDS
Свойства:
  bool IsEmpty
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(IEnumerable`1<T> collection)
  void InitializeFromCollection(IEnumerable`1<T> collection)
  bool get_IsEmpty()
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void Clear()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void CopyTo(T[] array, int index)
  void Push(T item)
  void PushRange(T[] items)
  void PushRange(T[] items, int startIndex, int count)
  void PushCore(Node<T> head, Node<T> tail)
  void ValidatePushPopRangeInput(T[] items, int startIndex, int count)
  bool System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T item)
  bool TryPeek(T& result)
  bool TryPop(T& result)
  int TryPopRange(T[] items)
  int TryPopRange(T[] items, int startIndex, int count)
  bool TryPopCore(T& result)
  int TryPopCore(int count, Node& poppedHead)
  void CopyRemovedItems(Node<T> head, T[] collection, int startIndex, int nodesCount)
  bool System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T& item)
  T[] ToArray()
  List`1<T> ToList()
  List`1<T> ToList(Node<T> curr)
  IEnumerator`1<T> GetEnumerator()
  IEnumerator`1<T> GetEnumerator(Node<T> head)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Concurrent.IProducerConsumerCollection`1
Поля:
Свойства:
Методы:
  void CopyTo(T[] array, int index)
  bool TryAdd(T item)
  bool TryTake(T& item)
  T[] ToArray()
--------------------------------------------------
Класс: System.Collections.Concurrent.IProducerConsumerCollectionDebugView`1
Наследуется от: object
Поля:
  IProducerConsumerCollection`1<T> _collection
Свойства:
  T[] Items
Методы:
  void .ctor(IProducerConsumerCollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Concurrent.OrderablePartitioner`1
Наследуется от: Partitioner`1<TSource>
Поля:
  bool <KeysOrderedInEachPartition>k__BackingField
  bool <KeysOrderedAcrossPartitions>k__BackingField
  bool <KeysNormalized>k__BackingField
Свойства:
  bool KeysOrderedInEachPartition
  bool KeysOrderedAcrossPartitions
  bool KeysNormalized
Методы:
  void .ctor(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized)
  IList`1<IEnumerator`1<KeyValuePair`2<long, TSource>>> GetOrderablePartitions(int partitionCount)
  IEnumerable`1<KeyValuePair`2<long, TSource>> GetOrderableDynamicPartitions()
  bool get_KeysOrderedInEachPartition()
  void set_KeysOrderedInEachPartition(bool value)
  bool get_KeysOrderedAcrossPartitions()
  void set_KeysOrderedAcrossPartitions(bool value)
  bool get_KeysNormalized()
  void set_KeysNormalized(bool value)
  IList`1<IEnumerator`1<TSource>> GetPartitions(int partitionCount)
  IEnumerable`1<TSource> GetDynamicPartitions()
--------------------------------------------------
Класс: System.Collections.Concurrent.Partitioner`1
Наследуется от: object
Поля:
Свойства:
  bool SupportsDynamicPartitions
Методы:
  IList`1<IEnumerator`1<TSource>> GetPartitions(int partitionCount)
  bool get_SupportsDynamicPartitions()
  IEnumerable`1<TSource> GetDynamicPartitions()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Concurrent.EnumerablePartitionerOptions
Наследуется от: Enum
Поля:
  int value__
  EnumerablePartitionerOptions None
  EnumerablePartitionerOptions NoBuffering
Свойства:
Методы:
--------------------------------------------------
Класс: System.Collections.Concurrent.Partitioner
Наследуется от: object
Поля:
  int DEFAULT_BYTES_PER_UNIT
  int DEFAULT_BYTES_PER_CHUNK
Свойства:
Методы:
  OrderablePartitioner`1<TSource> Create(IList`1<TSource> list, bool loadBalance)
  OrderablePartitioner`1<TSource> Create(TSource[] array, bool loadBalance)
  OrderablePartitioner`1<TSource> Create(IEnumerable`1<TSource> source)
  OrderablePartitioner`1<TSource> Create(IEnumerable`1<TSource> source, EnumerablePartitionerOptions partitionerOptions)
  OrderablePartitioner`1<Tuple`2<long, long>> Create(long fromInclusive, long toExclusive)
  OrderablePartitioner`1<Tuple`2<long, long>> Create(long fromInclusive, long toExclusive, long rangeSize)
  IEnumerable`1<Tuple`2<long, long>> CreateRanges(long fromInclusive, long toExclusive, long rangeSize)
  OrderablePartitioner`1<Tuple`2<int, int>> Create(int fromInclusive, int toExclusive)
  OrderablePartitioner`1<Tuple`2<int, int>> Create(int fromInclusive, int toExclusive, int rangeSize)
  IEnumerable`1<Tuple`2<int, int>> CreateRanges(int fromInclusive, int toExclusive, int rangeSize)
  int GetDefaultChunkSize()
--------------------------------------------------
Класс: System.Collections.ObjectModel.Collection`1
Наследуется от: object
Поля:
  IList`1<T> items
Свойства:
  int Count
  IList`1<T> Items
  T Item
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object System.Collections.IList.Item
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
Методы:
  void .ctor()
  void .ctor(IList`1<T> list)
  int get_Count()
  IList`1<T> get_Items()
  T get_Item(int index)
  void set_Item(int index, T value)
  void Add(T item)
  void Clear()
  void CopyTo(T[] array, int index)
  bool Contains(T item)
  IEnumerator`1<T> GetEnumerator()
  int IndexOf(T item)
  void Insert(int index, T item)
  bool Remove(T item)
  void RemoveAt(int index)
  void ClearItems()
  void InsertItem(int index, T item)
  void RemoveItem(int index)
  void SetItem(int index, T item)
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  bool IsCompatibleObject(object value)
--------------------------------------------------
Класс: System.Collections.ObjectModel.ReadOnlyCollection`1
Наследуется от: object
Поля:
  IList`1<T> list
  object _syncRoot
Свойства:
  int Count
  T Item
  IList`1<T> Items
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  T System.Collections.Generic.IList<T>.Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
Методы:
  void .ctor(IList`1<T> list)
  int get_Count()
  T get_Item(int index)
  bool Contains(T value)
  void CopyTo(T[] array, int index)
  IEnumerator`1<T> GetEnumerator()
  int IndexOf(T value)
  IList`1<T> get_Items()
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  T System.Collections.Generic.IList<T>.get_Item(int index)
  void System.Collections.Generic.IList<T>.set_Item(int index, T value)
  void System.Collections.Generic.ICollection<T>.Add(T value)
  void System.Collections.Generic.ICollection<T>.Clear()
  void System.Collections.Generic.IList<T>.Insert(int index, T value)
  bool System.Collections.Generic.ICollection<T>.Remove(T value)
  void System.Collections.Generic.IList<T>.RemoveAt(int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool IsCompatibleObject(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
--------------------------------------------------
Класс: System.Collections.ObjectModel.KeyedCollection`2
Наследуется от: Collection`1<TItem>
Поля:
  int defaultThreshold
  IEqualityComparer`1<TKey> comparer
  Dictionary`2<TKey, TItem> dict
  int keyCount
  int threshold
Свойства:
  List`1<TItem> Items
  IEqualityComparer`1<TKey> Comparer
  TItem Item
  IDictionary`2<TKey, TItem> Dictionary
Методы:
  void .ctor()
  void .ctor(IEqualityComparer`1<TKey> comparer)
  void .ctor(IEqualityComparer`1<TKey> comparer, int dictionaryCreationThreshold)
  List`1<TItem> get_Items()
  IEqualityComparer`1<TKey> get_Comparer()
  TItem get_Item(TKey key)
  bool Contains(TKey key)
  bool TryGetValue(TKey key, TItem& item)
  bool ContainsItem(TItem item)
  bool Remove(TKey key)
  IDictionary`2<TKey, TItem> get_Dictionary()
  void ChangeItemKey(TItem item, TKey newKey)
  void ClearItems()
  TKey GetKeyForItem(TItem item)
  void InsertItem(int index, TItem item)
  void RemoveItem(int index)
  void SetItem(int index, TItem item)
  void AddKey(TKey key, TItem item)
  void CreateDictionary()
  void RemoveKey(TKey key)
--------------------------------------------------
Класс: System.Collections.ObjectModel.ReadOnlyDictionary`2
Наследуется от: object
Поля:
  IDictionary`2<TKey, TValue> m_dictionary
  object _syncRoot
  KeyCollection<TKey, TValue> _keys
  ValueCollection<TKey, TValue> _values
Свойства:
  IDictionary`2<TKey, TValue> Dictionary
  KeyCollection<TKey, TValue> Keys
  ValueCollection<TKey, TValue> Values
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values
  TValue Item
  TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item
  int Count
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.IDictionary.IsReadOnly
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  object System.Collections.IDictionary.Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
Методы:
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  IDictionary`2<TKey, TValue> get_Dictionary()
  KeyCollection<TKey, TValue> get_Keys()
  ValueCollection<TKey, TValue> get_Values()
  bool ContainsKey(TKey key)
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
  bool TryGetValue(TKey key, TValue& value)
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
  TValue get_Item(TKey key)
  void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey key, TValue value)
  bool System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey key)
  TValue System.Collections.Generic.IDictionary<TKey,TValue>.get_Item(TKey key)
  void System.Collections.Generic.IDictionary<TKey,TValue>.set_Item(TKey key, TValue value)
  int get_Count()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int arrayIndex)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> item)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool IsCompatibleKey(object key)
  void System.Collections.IDictionary.Add(object key, object value)
  void System.Collections.IDictionary.Clear()
  bool System.Collections.IDictionary.Contains(object key)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.IDictionary.get_IsReadOnly()
  ICollection System.Collections.IDictionary.get_Keys()
  void System.Collections.IDictionary.Remove(object key)
  ICollection System.Collections.IDictionary.get_Values()
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
--------------------------------------------------
Класс: System.Collections.ObjectModel.ReadOnlyDictionaryHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  void CopyToNonGenericICollectionHelper(ICollection`1<T> collection, Array array, int index)
--------------------------------------------------
Класс: System.Collections.Generic.InsertionBehavior
Наследуется от: Enum
Поля:
  byte value__
  InsertionBehavior None
  InsertionBehavior OverwriteExisting
  InsertionBehavior ThrowOnExisting
Свойства:
Методы:
--------------------------------------------------
Класс: System.Collections.Generic.Dictionary`2
Наследуется от: object
Поля:
  Int32[] _buckets
  Entry[] _entries
  int _count
  int _freeList
  int _freeCount
  int _version
  IEqualityComparer`1<TKey> _comparer
  KeyCollection<TKey, TValue> _keys
  ValueCollection<TKey, TValue> _values
  object _syncRoot
  string VersionName
  string HashSizeName
  string KeyValuePairsName
  string ComparerName
Свойства:
  IEqualityComparer`1<TKey> Comparer
  int Count
  KeyCollection<TKey, TValue> Keys
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  ValueCollection<TKey, TValue> Values
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  TValue Item
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.IDictionary.IsReadOnly
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  object System.Collections.IDictionary.Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEqualityComparer`1<TKey> comparer)
  void .ctor(int capacity, IEqualityComparer`1<TKey> comparer)
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  void .ctor(IDictionary`2<TKey, TValue> dictionary, IEqualityComparer`1<TKey> comparer)
  void .ctor(IEnumerable`1<KeyValuePair`2<TKey, TValue>> collection)
  void .ctor(IEnumerable`1<KeyValuePair`2<TKey, TValue>> collection, IEqualityComparer`1<TKey> comparer)
  void .ctor(SerializationInfo info, StreamingContext context)
  IEqualityComparer`1<TKey> get_Comparer()
  int get_Count()
  KeyCollection<TKey, TValue> get_Keys()
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
  ValueCollection<TKey, TValue> get_Values()
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  void Add(TKey key, TValue value)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> keyValuePair)
  void Clear()
  bool ContainsKey(TKey key)
  bool ContainsValue(TValue value)
  void CopyTo(KeyValuePair`2[] array, int index)
  Enumerator<TKey, TValue> GetEnumerator()
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  int FindEntry(TKey key)
  int Initialize(int capacity)
  bool TryInsert(TKey key, TValue value, InsertionBehavior behavior)
  void OnDeserialization(object sender)
  void Resize()
  void Resize(int newSize, bool forceNewHashCodes)
  bool Remove(TKey key)
  bool Remove(TKey key, TValue& value)
  bool TryGetValue(TKey key, TValue& value)
  bool TryAdd(TKey key, TValue value)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int EnsureCapacity(int capacity)
  void TrimExcess()
  void TrimExcess(int capacity)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.IDictionary.get_IsReadOnly()
  ICollection System.Collections.IDictionary.get_Keys()
  ICollection System.Collections.IDictionary.get_Values()
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  bool IsCompatibleKey(object key)
  void System.Collections.IDictionary.Add(object key, object value)
  bool System.Collections.IDictionary.Contains(object key)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  void System.Collections.IDictionary.Remove(object key)
--------------------------------------------------
Класс: System.Collections.Generic.IAsyncEnumerable`1
Поля:
Свойства:
Методы:
  IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Collections.Generic.IAsyncEnumerator`1
Поля:
Свойства:
  T Current
Методы:
  ValueTask`1<bool> MoveNextAsync()
  T get_Current()
--------------------------------------------------
Класс: System.Collections.Generic.ICollection`1
Поля:
Свойства:
  int Count
  bool IsReadOnly
Методы:
  int get_Count()
  bool get_IsReadOnly()
  void Add(T item)
  void Clear()
  bool Contains(T item)
  void CopyTo(T[] array, int arrayIndex)
  bool Remove(T item)
--------------------------------------------------
Класс: System.Collections.Generic.ICollectionDebugView`1
Наследуется от: object
Поля:
  ICollection`1<T> _collection
Свойства:
  T[] Items
Методы:
  void .ctor(ICollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.IComparer`1
Поля:
Свойства:
Методы:
  int Compare(T x, T y)
--------------------------------------------------
Класс: System.Collections.Generic.IDictionary`2
Поля:
Свойства:
  TValue Item
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
Методы:
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  ICollection`1<TKey> get_Keys()
  ICollection`1<TValue> get_Values()
  bool ContainsKey(TKey key)
  void Add(TKey key, TValue value)
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
--------------------------------------------------
Класс: System.Collections.Generic.IDictionaryDebugView`2
Наследуется от: object
Поля:
  IDictionary`2<K, V> _dict
Свойства:
  KeyValuePair`2[] Items
Методы:
  void .ctor(IDictionary`2<K, V> dictionary)
  KeyValuePair`2[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.DictionaryKeyCollectionDebugView`2
Наследуется от: object
Поля:
  ICollection`1<TKey> _collection
Свойства:
  TKey[] Items
Методы:
  void .ctor(ICollection`1<TKey> collection)
  TKey[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.DictionaryValueCollectionDebugView`2
Наследуется от: object
Поля:
  ICollection`1<TValue> _collection
Свойства:
  TValue[] Items
Методы:
  void .ctor(ICollection`1<TValue> collection)
  TValue[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.IEnumerable`1
Поля:
Свойства:
Методы:
  IEnumerator`1<T> GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Generic.IEnumerator`1
Поля:
Свойства:
  T Current
Методы:
  T get_Current()
--------------------------------------------------
Класс: System.Collections.Generic.IEqualityComparer`1
Поля:
Свойства:
Методы:
  bool Equals(T x, T y)
  int GetHashCode(T obj)
--------------------------------------------------
Класс: System.Collections.Generic.IList`1
Поля:
Свойства:
  T Item
Методы:
  T get_Item(int index)
  void set_Item(int index, T value)
  int IndexOf(T item)
  void Insert(int index, T item)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Collections.Generic.IReadOnlyCollection`1
Поля:
Свойства:
  int Count
Методы:
  int get_Count()
--------------------------------------------------
Класс: System.Collections.Generic.IReadOnlyDictionary`2
Поля:
Свойства:
  TValue Item
  IEnumerable`1<TKey> Keys
  IEnumerable`1<TValue> Values
Методы:
  bool ContainsKey(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  TValue get_Item(TKey key)
  IEnumerable`1<TKey> get_Keys()
  IEnumerable`1<TValue> get_Values()
--------------------------------------------------
Класс: System.Collections.Generic.IReadOnlyList`1
Поля:
Свойства:
  T Item
Методы:
  T get_Item(int index)
--------------------------------------------------
Класс: System.Collections.Generic.KeyNotFoundException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Collections.Generic.KeyValuePair
Наследуется от: object
Поля:
Свойства:
Методы:
  KeyValuePair`2<TKey, TValue> Create(TKey key, TValue value)
  string PairToString(object key, object value)
--------------------------------------------------
Класс: System.Collections.Generic.KeyValuePair`2
Наследуется от: ValueType
Поля:
  TKey key
  TValue value
Свойства:
  TKey Key
  TValue Value
Методы:
  void .ctor(TKey key, TValue value)
  TKey get_Key()
  TValue get_Value()
  string ToString()
  void Deconstruct(TKey& key, TValue& value)
--------------------------------------------------
Класс: System.Collections.Generic.List`1
Наследуется от: object
Поля:
  int DefaultCapacity
  T[] _items
  int _size
  int _version
  object _syncRoot
  T[] s_emptyArray
Свойства:
  int Capacity
  int Count
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  T Item
  object System.Collections.IList.Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEnumerable`1<T> collection)
  int get_Capacity()
  void set_Capacity(int value)
  int get_Count()
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  T get_Item(int index)
  void set_Item(int index, T value)
  bool IsCompatibleObject(object value)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void Add(T item)
  void AddWithResize(T item)
  int System.Collections.IList.Add(object item)
  void AddRange(IEnumerable`1<T> collection)
  ReadOnlyCollection`1<T> AsReadOnly()
  int BinarySearch(int index, int count, T item, IComparer`1<T> comparer)
  int BinarySearch(T item)
  int BinarySearch(T item, IComparer`1<T> comparer)
  void Clear()
  bool Contains(T item)
  bool System.Collections.IList.Contains(object item)
  List`1<TOutput> ConvertAll(Converter`2<T, TOutput> converter)
  void CopyTo(T[] array)
  void System.Collections.ICollection.CopyTo(Array array, int arrayIndex)
  void CopyTo(int index, T[] array, int arrayIndex, int count)
  void CopyTo(T[] array, int arrayIndex)
  void EnsureCapacity(int min)
  bool Exists(Predicate`1<T> match)
  T Find(Predicate`1<T> match)
  List`1<T> FindAll(Predicate`1<T> match)
  int FindIndex(Predicate`1<T> match)
  int FindIndex(int startIndex, Predicate`1<T> match)
  int FindIndex(int startIndex, int count, Predicate`1<T> match)
  T FindLast(Predicate`1<T> match)
  int FindLastIndex(Predicate`1<T> match)
  int FindLastIndex(int startIndex, Predicate`1<T> match)
  int FindLastIndex(int startIndex, int count, Predicate`1<T> match)
  void ForEach(Action`1<T> action)
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  List`1<T> GetRange(int index, int count)
  int IndexOf(T item)
  int System.Collections.IList.IndexOf(object item)
  int IndexOf(T item, int index)
  int IndexOf(T item, int index, int count)
  void Insert(int index, T item)
  void System.Collections.IList.Insert(int index, object item)
  void InsertRange(int index, IEnumerable`1<T> collection)
  int LastIndexOf(T item)
  int LastIndexOf(T item, int index)
  int LastIndexOf(T item, int index, int count)
  bool Remove(T item)
  void System.Collections.IList.Remove(object item)
  int RemoveAll(Predicate`1<T> match)
  void RemoveAt(int index)
  void RemoveRange(int index, int count)
  void Reverse()
  void Reverse(int index, int count)
  void Sort()
  void Sort(IComparer`1<T> comparer)
  void Sort(int index, int count, IComparer`1<T> comparer)
  void Sort(Comparison`1<T> comparison)
  T[] ToArray()
  void TrimExcess()
  bool TrueForAll(Predicate`1<T> match)
  void AddEnumerable(IEnumerable`1<T> enumerable)
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Generic.ValueListBuilder`1
Наследуется от: ValueType
Поля:
  Span`1<T> _span
  T[] _arrayFromPool
  int _pos
Свойства:
  int Length
  T& Item
Методы:
  void .ctor(Span`1<T> initialSpan)
  int get_Length()
  T& get_Item(int index)
  void Append(T item)
  ReadOnlySpan`1<T> AsSpan()
  void Dispose()
  void Grow()
--------------------------------------------------
Класс: System.Collections.Generic.ArrayBuilder`1
Наследуется от: ValueType
Поля:
  int DefaultCapacity
  int MaxCoreClrArrayLength
  T[] _array
  int _count
Свойства:
  int Capacity
  int Count
  T Item
Методы:
  void .ctor(int capacity)
  int get_Capacity()
  int get_Count()
  T get_Item(int index)
  void set_Item(int index, T value)
  void Add(T item)
  T First()
  T Last()
  T[] ToArray()
  void UncheckedAdd(T item)
  void EnsureCapacity(int minimum)
--------------------------------------------------
Класс: System.Collections.Generic.EnumerableHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  void Copy(IEnumerable`1<T> source, T[] array, int arrayIndex, int count)
  void IterativeCopy(IEnumerable`1<T> source, T[] array, int arrayIndex, int count)
  T[] ToArray(IEnumerable`1<T> source)
  T[] ToArray(IEnumerable`1<T> source, Int32& length)
--------------------------------------------------
Класс: System.Collections.Generic.CopyPosition
Наследуется от: ValueType
Поля:
  int <Row>k__BackingField
  int <Column>k__BackingField
Свойства:
  CopyPosition Start
  int Row
  int Column
  string DebuggerDisplay
Методы:
  void .ctor(int row, int column)
  CopyPosition get_Start()
  int get_Row()
  int get_Column()
  CopyPosition Normalize(int endColumn)
  string get_DebuggerDisplay()
--------------------------------------------------
Класс: System.Collections.Generic.LargeArrayBuilder`1
Наследуется от: ValueType
Поля:
  int StartingCapacity
  int ResizeLimit
  int _maxCapacity
  T[] _first
  ArrayBuilder`1<T[]> _buffers
  T[] _current
  int _index
  int _count
Свойства:
  int Count
Методы:
  void .ctor(bool initialize)
  void .ctor(int maxCapacity)
  int get_Count()
  void Add(T item)
  void AddWithBufferAllocation(T item)
  void AddRange(IEnumerable`1<T> items)
  void AddWithBufferAllocation(T item, T[]& destination, Int32& index)
  void CopyTo(T[] array, int arrayIndex, int count)
  CopyPosition CopyTo(CopyPosition position, T[] array, int arrayIndex, int count)
  T[] GetBuffer(int index)
  void SlowAdd(T item)
  T[] ToArray()
  bool TryMove(T[]& array)
  void AllocateBuffer()
  int <CopyTo>g__CopyToCore|17_0(T[] sourceBuffer, int sourceIndex, <>c__DisplayClass17_0& )
--------------------------------------------------
Класс: System.Collections.Generic.LowLevelDictionary`2
Наследуется от: object
Поля:
  int DefaultSize
  Entry[] _buckets
  int _numEntries
  int _version
  IEqualityComparer`1<TKey> _comparer
Свойства:
  int Count
  TValue Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEqualityComparer`1<TKey> comparer)
  void .ctor(int capacity, IEqualityComparer`1<TKey> comparer)
  int get_Count()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  bool TryGetValue(TKey key, TValue& value)
  void Add(TKey key, TValue value)
  void Clear(int capacity)
  bool Remove(TKey key)
  Entry<TKey, TValue> Find(TKey key)
  Entry<TKey, TValue> UncheckedAdd(TKey key, TValue value)
  void ExpandBuckets()
  int GetBucket(TKey key, int numBuckets)
--------------------------------------------------
Класс: System.Collections.Generic.ReferenceEqualityComparer`1
Наследуется от: object
Поля:
  ReferenceEqualityComparer`1<T> Instance
Свойства:
Методы:
  void .ctor()
  bool Equals(T x, T y)
  int GetHashCode(T obj)
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Generic.CollectionExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  TValue GetValueOrDefault(IReadOnlyDictionary`2<TKey, TValue> dictionary, TKey key)
  TValue GetValueOrDefault(IReadOnlyDictionary`2<TKey, TValue> dictionary, TKey key, TValue defaultValue)
  bool TryAdd(IDictionary`2<TKey, TValue> dictionary, TKey key, TValue value)
  bool Remove(IDictionary`2<TKey, TValue> dictionary, TKey key, TValue& value)
--------------------------------------------------
Класс: System.Collections.Generic.Queue`1
Наследуется от: object
Поля:
  T[] _array
  int _head
  int _tail
  int _size
  int _version
  object _syncRoot
  int MinimumGrow
  int GrowFactor
Свойства:
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEnumerable`1<T> collection)
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void Clear()
  void CopyTo(T[] array, int arrayIndex)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void Enqueue(T item)
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  T Dequeue()
  bool TryDequeue(T& result)
  T Peek()
  bool TryPeek(T& result)
  bool Contains(T item)
  T[] ToArray()
  void SetCapacity(int capacity)
  void MoveNext(Int32& index)
  void ThrowForEmptyQueue()
  void TrimExcess()
--------------------------------------------------
Класс: System.Collections.Generic.QueueDebugView`1
Наследуется от: object
Поля:
  Queue`1<T> _queue
Свойства:
  T[] Items
Методы:
  void .ctor(Queue`1<T> queue)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.Stack`1
Наследуется от: object
Поля:
  T[] _array
  int _size
  int _version
  object _syncRoot
  int DefaultCapacity
Свойства:
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEnumerable`1<T> collection)
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void Clear()
  bool Contains(T item)
  void CopyTo(T[] array, int arrayIndex)
  void System.Collections.ICollection.CopyTo(Array array, int arrayIndex)
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void TrimExcess()
  T Peek()
  bool TryPeek(T& result)
  T Pop()
  bool TryPop(T& result)
  void Push(T item)
  void PushWithResize(T item)
  T[] ToArray()
  void ThrowForEmptyStack()
--------------------------------------------------
Класс: System.Collections.Generic.StackDebugView`1
Наследуется от: object
Поля:
  Stack`1<T> _stack
Свойства:
  T[] Items
Методы:
  void .ctor(Stack`1<T> stack)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.CollectionDebugView`1
Наследуется от: object
Поля:
  ICollection`1<T> _collection
Свойства:
  T[] Items
Методы:
  void .ctor(ICollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.DictionaryDebugView`2
Наследуется от: object
Поля:
  IDictionary`2<K, V> _dict
Свойства:
  KeyValuePair`2[] Items
Методы:
  void .ctor(IDictionary`2<K, V> dictionary)
  KeyValuePair`2[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.LowLevelList`1
Наследуется от: object
Поля:
  int _defaultCapacity
  T[] _items
  int _size
  int _version
  T[] s_emptyArray
Свойства:
  int Capacity
  int Count
  T Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEnumerable`1<T> collection)
  int get_Capacity()
  void set_Capacity(int value)
  int get_Count()
  T get_Item(int index)
  void set_Item(int index, T value)
  void Add(T item)
  void EnsureCapacity(int min)
  void AddRange(IEnumerable`1<T> collection)
  void Clear()
  bool Contains(T item)
  void CopyTo(int index, T[] array, int arrayIndex, int count)
  void CopyTo(T[] array, int arrayIndex)
  int IndexOf(T item)
  int IndexOf(T item, int index)
  void Insert(int index, T item)
  void InsertRange(int index, IEnumerable`1<T> collection)
  bool Remove(T item)
  int RemoveAll(Predicate`1<T> match)
  void RemoveAt(int index)
  T[] ToArray()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Generic.LowLevelListWithIList`1
Наследуется от: LowLevelList`1<T>
Поля:
Свойства:
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEnumerable`1<T> collection)
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Generic.IntrospectiveSortUtilities
Наследуется от: object
Поля:
  int IntrosortSizeThreshold
Свойства:
Методы:
  int FloorLog2PlusOne(int n)
  void ThrowOrIgnoreBadComparer(object comparer)
--------------------------------------------------
Класс: System.Collections.Generic.ArraySortHelper`1
Наследуется от: object
Поля:
  ArraySortHelper`1<T> s_defaultArraySortHelper
Свойства:
  ArraySortHelper`1<T> Default
Методы:
  void Sort(T[] keys, int index, int length, IComparer`1<T> comparer)
  int BinarySearch(T[] array, int index, int length, T value, IComparer`1<T> comparer)
  void Sort(T[] keys, int index, int length, Comparison`1<T> comparer)
  int InternalBinarySearch(T[] array, int index, int length, T value, IComparer`1<T> comparer)
  void SwapIfGreater(T[] keys, Comparison`1<T> comparer, int a, int b)
  void Swap(T[] a, int i, int j)
  void IntrospectiveSort(T[] keys, int left, int length, Comparison`1<T> comparer)
  void IntroSort(T[] keys, int lo, int hi, int depthLimit, Comparison`1<T> comparer)
  int PickPivotAndPartition(T[] keys, int lo, int hi, Comparison`1<T> comparer)
  void Heapsort(T[] keys, int lo, int hi, Comparison`1<T> comparer)
  void DownHeap(T[] keys, int i, int n, int lo, Comparison`1<T> comparer)
  void InsertionSort(T[] keys, int lo, int hi, Comparison`1<T> comparer)
  ArraySortHelper`1<T> get_Default()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Generic.GenericArraySortHelper`1
Наследуется от: object
Поля:
Свойства:
Методы:
  void Sort(T[] keys, int index, int length, IComparer`1<T> comparer)
  int BinarySearch(T[] array, int index, int length, T value, IComparer`1<T> comparer)
  int BinarySearch(T[] array, int index, int length, T value)
  void SwapIfGreaterWithItems(T[] keys, int a, int b)
  void Swap(T[] a, int i, int j)
  void IntrospectiveSort(T[] keys, int left, int length)
  void IntroSort(T[] keys, int lo, int hi, int depthLimit)
  int PickPivotAndPartition(T[] keys, int lo, int hi)
  void Heapsort(T[] keys, int lo, int hi)
  void DownHeap(T[] keys, int i, int n, int lo)
  void InsertionSort(T[] keys, int lo, int hi)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.ArraySortHelper`2
Наследуется от: object
Поля:
  ArraySortHelper`2<TKey, TValue> s_defaultArraySortHelper
Свойства:
  ArraySortHelper`2<TKey, TValue> Default
Методы:
  void Sort(TKey[] keys, TValue[] values, int index, int length, IComparer`1<TKey> comparer)
  void SwapIfGreaterWithItems(TKey[] keys, TValue[] values, IComparer`1<TKey> comparer, int a, int b)
  void Swap(TKey[] keys, TValue[] values, int i, int j)
  void IntrospectiveSort(TKey[] keys, TValue[] values, int left, int length, IComparer`1<TKey> comparer)
  void IntroSort(TKey[] keys, TValue[] values, int lo, int hi, int depthLimit, IComparer`1<TKey> comparer)
  int PickPivotAndPartition(TKey[] keys, TValue[] values, int lo, int hi, IComparer`1<TKey> comparer)
  void Heapsort(TKey[] keys, TValue[] values, int lo, int hi, IComparer`1<TKey> comparer)
  void DownHeap(TKey[] keys, TValue[] values, int i, int n, int lo, IComparer`1<TKey> comparer)
  void InsertionSort(TKey[] keys, TValue[] values, int lo, int hi, IComparer`1<TKey> comparer)
  ArraySortHelper`2<TKey, TValue> get_Default()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Generic.GenericArraySortHelper`2
Наследуется от: object
Поля:
Свойства:
Методы:
  void Sort(TKey[] keys, TValue[] values, int index, int length, IComparer`1<TKey> comparer)
  void SwapIfGreaterWithItems(TKey[] keys, TValue[] values, int a, int b)
  void Swap(TKey[] keys, TValue[] values, int i, int j)
  void IntrospectiveSort(TKey[] keys, TValue[] values, int left, int length)
  void IntroSort(TKey[] keys, TValue[] values, int lo, int hi, int depthLimit)
  int PickPivotAndPartition(TKey[] keys, TValue[] values, int lo, int hi)
  void Heapsort(TKey[] keys, TValue[] values, int lo, int hi)
  void DownHeap(TKey[] keys, TValue[] values, int i, int n, int lo)
  void InsertionSort(TKey[] keys, TValue[] values, int lo, int hi)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.Comparer`1
Наследуется от: object
Поля:
  Comparer`1 modreq(System.Runtime.CompilerServices.IsVolatile) defaultComparer
Свойства:
  Comparer`1<T> Default
Методы:
  Comparer`1<T> get_Default()
  Comparer`1<T> Create(Comparison`1<T> comparison)
  Comparer`1<T> CreateComparer()
  int Compare(T x, T y)
  int System.Collections.IComparer.Compare(object x, object y)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.GenericComparer`1
Наследуется от: Comparer`1<T>
Поля:
Свойства:
Методы:
  int Compare(T x, T y)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.NullableComparer`1
Наследуется от: Comparer`1<Nullable`1<T>>
Поля:
Свойства:
Методы:
  int Compare(Nullable`1<T> x, Nullable`1<T> y)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.ObjectComparer`1
Наследуется от: Comparer`1<T>
Поля:
Свойства:
Методы:
  int Compare(T x, T y)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.ComparisonComparer`1
Наследуется от: Comparer`1<T>
Поля:
  Comparison`1<T> _comparison
Свойства:
Методы:
  void .ctor(Comparison`1<T> comparison)
  int Compare(T x, T y)
--------------------------------------------------
Класс: System.Collections.Generic.EqualityComparer`1
Наследуется от: object
Поля:
  EqualityComparer`1 modreq(System.Runtime.CompilerServices.IsVolatile) defaultComparer
Свойства:
  EqualityComparer`1<T> Default
Методы:
  EqualityComparer`1<T> get_Default()
  EqualityComparer`1<T> CreateComparer()
  bool Equals(T x, T y)
  int GetHashCode(T obj)
  int IndexOf(T[] array, T value, int startIndex, int count)
  int LastIndexOf(T[] array, T value, int startIndex, int count)
  int System.Collections.IEqualityComparer.GetHashCode(object obj)
  bool System.Collections.IEqualityComparer.Equals(object x, object y)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.GenericEqualityComparer`1
Наследуется от: EqualityComparer`1<T>
Поля:
Свойства:
Методы:
  bool Equals(T x, T y)
  int GetHashCode(T obj)
  int IndexOf(T[] array, T value, int startIndex, int count)
  int LastIndexOf(T[] array, T value, int startIndex, int count)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.NullableEqualityComparer`1
Наследуется от: EqualityComparer`1<Nullable`1<T>>
Поля:
Свойства:
Методы:
  bool Equals(Nullable`1<T> x, Nullable`1<T> y)
  int GetHashCode(Nullable`1<T> obj)
  int IndexOf(Nullable`1[] array, Nullable`1<T> value, int startIndex, int count)
  int LastIndexOf(Nullable`1[] array, Nullable`1<T> value, int startIndex, int count)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.ObjectEqualityComparer`1
Наследуется от: EqualityComparer`1<T>
Поля:
Свойства:
Методы:
  bool Equals(T x, T y)
  int GetHashCode(T obj)
  int IndexOf(T[] array, T value, int startIndex, int count)
  int LastIndexOf(T[] array, T value, int startIndex, int count)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.ByteEqualityComparer
Наследуется от: EqualityComparer`1<byte>
Поля:
Свойства:
Методы:
  bool Equals(byte x, byte y)
  int GetHashCode(byte b)
  int IndexOf(Byte[] array, byte value, int startIndex, int count)
  int LastIndexOf(Byte[] array, byte value, int startIndex, int count)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Generic.EnumEqualityComparer`1
Наследуется от: EqualityComparer`1<T>
Поля:
Свойства:
Методы:
  bool Equals(T x, T y)
  int GetHashCode(T obj)
  void .ctor()
  void .ctor(SerializationInfo information, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Collections.Generic.SByteEnumEqualityComparer`1
Наследуется от: EnumEqualityComparer`1<T>
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(SerializationInfo information, StreamingContext context)
  int GetHashCode(T obj)
--------------------------------------------------
Класс: System.Collections.Generic.ShortEnumEqualityComparer`1
Наследуется от: EnumEqualityComparer`1<T>
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(SerializationInfo information, StreamingContext context)
  int GetHashCode(T obj)
--------------------------------------------------
Класс: System.Collections.Generic.LongEnumEqualityComparer`1
Наследуется от: EqualityComparer`1<T>
Поля:
Свойства:
Методы:
  bool Equals(T x, T y)
  int GetHashCode(T obj)
  bool Equals(object obj)
  int GetHashCode()
  void .ctor()
  void .ctor(SerializationInfo information, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Collections.Generic.InternalStringComparer
Наследуется от: EqualityComparer`1<string>
Поля:
Свойства:
Методы:
  int GetHashCode(string obj)
  bool Equals(string x, string y)
  int IndexOf(String[] array, string value, int startIndex, int count)
  void .ctor()
--------------------------------------------------
Класс: System.Buffers.SpanAction`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(Span`1<T> span, TArg arg)
  IAsyncResult BeginInvoke(Span`1<T> span, TArg arg, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Buffers.ReadOnlySpanAction`2
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(ReadOnlySpan`1<T> span, TArg arg)
  IAsyncResult BeginInvoke(ReadOnlySpan`1<T> span, TArg arg, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Buffers.ArrayPool`1
Наследуется от: object
Поля:
  ArrayPool`1<T> <Shared>k__BackingField
Свойства:
  ArrayPool`1<T> Shared
Методы:
  ArrayPool`1<T> get_Shared()
  ArrayPool`1<T> Create()
  ArrayPool`1<T> Create(int maxArrayLength, int maxArraysPerBucket)
  T[] Rent(int minimumLength)
  void Return(T[] array, bool clearArray)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.ArrayPoolEventSource
Наследуется от: EventSource
Поля:
  ArrayPoolEventSource Log
Свойства:
Методы:
  void .ctor()
  void BufferRented(int bufferId, int bufferSize, int poolId, int bucketId)
  void BufferAllocated(int bufferId, int bufferSize, int poolId, int bucketId, BufferAllocatedReason reason)
  void BufferReturned(int bufferId, int bufferSize, int poolId)
  void BufferTrimmed(int bufferId, int bufferSize, int poolId)
  void BufferTrimPoll(int milliseconds, int pressure)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.ConfigurableArrayPool`1
Наследуется от: ArrayPool`1<T>
Поля:
  int DefaultMaxArrayLength
  int DefaultMaxNumberOfArraysPerBucket
  Bucket[] _buckets
Свойства:
  int Id
Методы:
  void .ctor()
  void .ctor(int maxArrayLength, int maxArraysPerBucket)
  int get_Id()
  T[] Rent(int minimumLength)
  void Return(T[] array, bool clearArray)
--------------------------------------------------
Класс: System.Buffers.IMemoryOwner`1
Поля:
Свойства:
  Memory`1<T> Memory
Методы:
  Memory`1<T> get_Memory()
--------------------------------------------------
Класс: System.Buffers.IPinnable
Поля:
Свойства:
Методы:
  MemoryHandle Pin(int elementIndex)
  void Unpin()
--------------------------------------------------
Класс: System.Buffers.MemoryHandle
Наследуется от: ValueType
Поля:
  Void* _pointer
  GCHandle _handle
  IPinnable _pinnable
Свойства:
  Void* Pointer
Методы:
  void .ctor(Void* pointer, GCHandle handle, IPinnable pinnable)
  Void* get_Pointer()
  void Dispose()
--------------------------------------------------
Класс: System.Buffers.MemoryManager`1
Наследуется от: object
Поля:
Свойства:
  Memory`1<T> Memory
Методы:
  Memory`1<T> get_Memory()
  Span`1<T> GetSpan()
  MemoryHandle Pin(int elementIndex)
  void Unpin()
  Memory`1<T> CreateMemory(int length)
  Memory`1<T> CreateMemory(int start, int length)
  bool TryGetArray(ArraySegment`1& segment)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void .ctor()
--------------------------------------------------
Класс: System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1
Наследуется от: ArrayPool`1<T>
Поля:
  int NumBuckets
  int MaxPerCorePerArraySizeStacks
  int MaxBuffersPerArraySizePerCore
  Int32[] _bucketArraySizes
  PerCoreLockedStacks[] _buckets
  T[][] t_tlsBuckets
  int _callbackCreated
  bool s_trimBuffers
  ConditionalWeakTable`2<T[][], object> s_allTlsBuckets
Свойства:
  int Id
Методы:
  void .ctor()
  PerCoreLockedStacks<T> CreatePerCoreLockedStacks(int bucketIndex)
  int get_Id()
  T[] Rent(int minimumLength)
  void Return(T[] array, bool clearArray)
  bool Trim()
  bool Gen2GcCallbackFunc(object target)
  MemoryPressure<T> GetMemoryPressure()
  bool GetTrimBuffers()
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Utilities
Наследуется от: object
Поля:
Свойства:
Методы:
  int SelectBucketIndex(int bufferSize)
  int GetMaxSizeForBucket(int binIndex)
--------------------------------------------------
Класс: System.Buffers.ArrayMemoryPool`1
Наследуется от: MemoryPool`1<T>
Поля:
  int s_maxBufferSize
Свойства:
  int MaxBufferSize
Методы:
  int get_MaxBufferSize()
  IMemoryOwner`1<T> Rent(int minimumBufferSize)
  void Dispose(bool disposing)
  void .ctor()
--------------------------------------------------
Класс: System.Buffers.BuffersExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  Nullable`1<SequencePosition> PositionOf(ReadOnlySequence`1& source, T value)
  Nullable`1<SequencePosition> PositionOfMultiSegment(ReadOnlySequence`1& source, T value)
  void CopyTo(ReadOnlySequence`1& source, Span`1<T> destination)
  void CopyToMultiSegment(ReadOnlySequence`1& sequence, Span`1<T> destination)
  T[] ToArray(ReadOnlySequence`1& sequence)
  void Write(IBufferWriter`1<T> writer, ReadOnlySpan`1<T> value)
  void WriteMultiSegment(IBufferWriter`1<T> writer, ReadOnlySpan`1& source, Span`1<T> destination)
--------------------------------------------------
Класс: System.Buffers.IBufferWriter`1
Поля:
Свойства:
Методы:
  void Advance(int count)
  Memory`1<T> GetMemory(int sizeHint)
  Span`1<T> GetSpan(int sizeHint)
--------------------------------------------------
Класс: System.Buffers.MemoryPool`1
Наследуется от: object
Поля:
  MemoryPool`1<T> s_shared
Свойства:
  MemoryPool`1<T> Shared
  int MaxBufferSize
Методы:
  MemoryPool`1<T> get_Shared()
  IMemoryOwner`1<T> Rent(int minBufferSize)
  int get_MaxBufferSize()
  void .ctor()
  void Dispose()
  void Dispose(bool disposing)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.OperationStatus
Наследуется от: Enum
Поля:
  int value__
  OperationStatus Done
  OperationStatus DestinationTooSmall
  OperationStatus NeedMoreData
  OperationStatus InvalidData
Свойства:
Методы:
--------------------------------------------------
Класс: System.Buffers.ReadOnlySequence`1
Наследуется от: ValueType
Поля:
  object _startObject
  object _endObject
  int _startInteger
  int _endInteger
  ReadOnlySequence`1<T> Empty
Свойства:
  long Length
  bool IsEmpty
  bool IsSingleSegment
  ReadOnlyMemory`1<T> First
  ReadOnlySpan`1<T> FirstSpan
  SequencePosition Start
  SequencePosition End
Методы:
  long get_Length()
  bool get_IsEmpty()
  bool get_IsSingleSegment()
  ReadOnlyMemory`1<T> get_First()
  ReadOnlySpan`1<T> get_FirstSpan()
  SequencePosition get_Start()
  SequencePosition get_End()
  void .ctor(object startSegment, int startIndexAndFlags, object endSegment, int endIndexAndFlags)
  void .ctor(ReadOnlySequenceSegment`1<T> startSegment, int startIndex, ReadOnlySequenceSegment`1<T> endSegment, int endIndex)
  void .ctor(T[] array)
  void .ctor(T[] array, int start, int length)
  void .ctor(ReadOnlyMemory`1<T> memory)
  ReadOnlySequence`1<T> Slice(long start, long length)
  ReadOnlySequence`1<T> Slice(long start, SequencePosition end)
  ReadOnlySequence`1<T> Slice(SequencePosition start, long length)
  ReadOnlySequence`1<T> Slice(int start, int length)
  ReadOnlySequence`1<T> Slice(int start, SequencePosition end)
  ReadOnlySequence`1<T> Slice(SequencePosition start, int length)
  ReadOnlySequence`1<T> Slice(SequencePosition start, SequencePosition end)
  ReadOnlySequence`1<T> Slice(SequencePosition start)
  ReadOnlySequence`1<T> Slice(long start)
  string ToString()
  Enumerator<T> GetEnumerator()
  SequencePosition GetPosition(long offset)
  SequencePosition GetPosition(long offset, SequencePosition origin)
  bool TryGet(SequencePosition& position, ReadOnlyMemory`1& memory, bool advance)
  bool TryGetBuffer(SequencePosition& position, ReadOnlyMemory`1& memory, SequencePosition& next)
  ReadOnlyMemory`1<T> GetFirstBuffer()
  ReadOnlyMemory`1<T> GetFirstBufferSlow(object startObject, bool isMultiSegment)
  ReadOnlySpan`1<T> GetFirstSpan()
  ReadOnlySpan`1<T> GetFirstSpanSlow(object startObject, bool isMultiSegment)
  SequencePosition Seek(long offset, ExceptionArgument exceptionArgument)
  SequencePosition Seek(SequencePosition& start, long offset)
  SequencePosition SeekMultiSegment(ReadOnlySequenceSegment`1<T> currentSegment, object endObject, int endIndex, long offset, ExceptionArgument argument)
  void BoundsCheck(SequencePosition& position, bool positionIsNotNull)
  void BoundsCheck(UInt32 sliceStartIndex, object sliceStartObject, UInt32 sliceEndIndex, object sliceEndObject)
  SequencePosition GetEndPosition(ReadOnlySequenceSegment`1<T> startSegment, object startObject, int startIndex, object endObject, int endIndex, long length)
  SequenceType<T> GetSequenceType()
  int GetIndex(SequencePosition& position)
  int GetIndex(int Integer)
  ReadOnlySequence`1<T> SliceImpl(SequencePosition& start, SequencePosition& end)
  ReadOnlySequence`1<T> SliceImpl(SequencePosition& start)
  long GetLength()
  bool TryGetReadOnlySequenceSegment(ReadOnlySequenceSegment`1& startSegment, Int32& startIndex, ReadOnlySequenceSegment`1& endSegment, Int32& endIndex)
  bool TryGetArray(ArraySegment`1& segment)
  bool TryGetString(String& text, Int32& start, Int32& length)
  bool InRange(UInt32 value, UInt32 start, UInt32 end)
  bool InRange(ulong value, ulong start, ulong end)
  void GetFirstSpan(ReadOnlySpan`1& first, SequencePosition& next)
  ReadOnlySpan`1<T> GetFirstSpanSlow(object startObject, int startIndex, int endIndex, bool hasMultipleSegments)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.ReadOnlySequence
Наследуется от: object
Поля:
  int FlagBitMask
  int IndexBitMask
  int SegmentStartMask
  int SegmentEndMask
  int ArrayStartMask
  int ArrayEndMask
  int MemoryManagerStartMask
  int MemoryManagerEndMask
  int StringStartMask
  int StringEndMask
Свойства:
Методы:
  int SegmentToSequenceStart(int startIndex)
  int SegmentToSequenceEnd(int endIndex)
  int ArrayToSequenceStart(int startIndex)
  int ArrayToSequenceEnd(int endIndex)
  int MemoryManagerToSequenceStart(int startIndex)
  int MemoryManagerToSequenceEnd(int endIndex)
  int StringToSequenceStart(int startIndex)
  int StringToSequenceEnd(int endIndex)
--------------------------------------------------
Класс: System.Buffers.ReadOnlySequenceDebugView`1
Наследуется от: object
Поля:
  T[] _array
  ReadOnlySequenceDebugViewSegments<T> _segments
Свойства:
  ReadOnlySequenceDebugViewSegments<T> BufferSegments
  T[] Items
Методы:
  void .ctor(ReadOnlySequence`1<T> sequence)
  ReadOnlySequenceDebugViewSegments<T> get_BufferSegments()
  T[] get_Items()
--------------------------------------------------
Класс: System.Buffers.ReadOnlySequenceSegment`1
Наследуется от: object
Поля:
  ReadOnlyMemory`1<T> <Memory>k__BackingField
  ReadOnlySequenceSegment`1<T> <Next>k__BackingField
  long <RunningIndex>k__BackingField
Свойства:
  ReadOnlyMemory`1<T> Memory
  ReadOnlySequenceSegment`1<T> Next
  long RunningIndex
Методы:
  ReadOnlyMemory`1<T> get_Memory()
  void set_Memory(ReadOnlyMemory`1<T> value)
  ReadOnlySequenceSegment`1<T> get_Next()
  void set_Next(ReadOnlySequenceSegment`1<T> value)
  long get_RunningIndex()
  void set_RunningIndex(long value)
  void .ctor()
--------------------------------------------------
Класс: System.Buffers.StandardFormat
Наследуется от: ValueType
Поля:
  byte NoPrecision
  byte MaxPrecision
  byte _format
  byte _precision
  int FormatStringLength
Свойства:
  char Symbol
  byte Precision
  bool HasPrecision
  bool IsDefault
Методы:
  char get_Symbol()
  byte get_Precision()
  bool get_HasPrecision()
  bool get_IsDefault()
  void .ctor(char symbol, byte precision)
  StandardFormat op_Implicit(char symbol)
  StandardFormat Parse(ReadOnlySpan`1<char> format)
  StandardFormat Parse(string format)
  bool TryParse(ReadOnlySpan`1<char> format, StandardFormat& result)
  bool ParseHelper(ReadOnlySpan`1<char> format, StandardFormat& standardFormat, bool throws)
  bool Equals(object obj)
  int GetHashCode()
  bool Equals(StandardFormat other)
  string ToString()
  int Format(Span`1<char> destination)
  bool op_Equality(StandardFormat left, StandardFormat right)
  bool op_Inequality(StandardFormat left, StandardFormat right)
--------------------------------------------------
Класс: System.Buffers.ArrayBufferWriter`1
Наследуется от: object
Поля:
  T[] _buffer
  int _index
  int DefaultInitialBufferSize
Свойства:
  ReadOnlyMemory`1<T> WrittenMemory
  ReadOnlySpan`1<T> WrittenSpan
  int WrittenCount
  int Capacity
  int FreeCapacity
Методы:
  void .ctor()
  void .ctor(int initialCapacity)
  ReadOnlyMemory`1<T> get_WrittenMemory()
  ReadOnlySpan`1<T> get_WrittenSpan()
  int get_WrittenCount()
  int get_Capacity()
  int get_FreeCapacity()
  void Clear()
  void Advance(int count)
  Memory`1<T> GetMemory(int sizeHint)
  Span`1<T> GetSpan(int sizeHint)
  void CheckAndResizeBuffer(int sizeHint)
  void ThrowInvalidOperationException_AdvancedTooFar(int capacity)
--------------------------------------------------
Класс: System.Buffers.SequenceReader`1
Наследуется от: ValueType
Поля:
  SequencePosition _currentPosition
  SequencePosition _nextPosition
  bool _moreData
  long _length
  ReadOnlySequence`1<T> <Sequence>k__BackingField
  ReadOnlySpan`1<T> <CurrentSpan>k__BackingField
  int <CurrentSpanIndex>k__BackingField
  long <Consumed>k__BackingField
Свойства:
  bool End
  ReadOnlySequence`1<T> Sequence
  SequencePosition Position
  ReadOnlySpan`1<T> CurrentSpan
  int CurrentSpanIndex
  ReadOnlySpan`1<T> UnreadSpan
  long Consumed
  long Remaining
  long Length
Методы:
  bool TryReadTo(ReadOnlySpan`1& span, T delimiter, bool advancePastDelimiter)
  bool TryReadToSlow(ReadOnlySpan`1& span, T delimiter, bool advancePastDelimiter)
  bool TryReadTo(ReadOnlySpan`1& span, T delimiter, T delimiterEscape, bool advancePastDelimiter)
  bool TryReadToSlow(ReadOnlySpan`1& span, T delimiter, T delimiterEscape, int index, bool advancePastDelimiter)
  bool TryReadToSlow(ReadOnlySequence`1& sequence, T delimiter, T delimiterEscape, int index, bool advancePastDelimiter)
  bool TryReadTo(ReadOnlySequence`1& sequence, T delimiter, bool advancePastDelimiter)
  bool TryReadToInternal(ReadOnlySequence`1& sequence, T delimiter, bool advancePastDelimiter, int skip)
  bool TryReadTo(ReadOnlySequence`1& sequence, T delimiter, T delimiterEscape, bool advancePastDelimiter)
  bool TryReadToAny(ReadOnlySpan`1& span, ReadOnlySpan`1<T> delimiters, bool advancePastDelimiter)
  bool TryReadToAnySlow(ReadOnlySpan`1& span, ReadOnlySpan`1<T> delimiters, bool advancePastDelimiter)
  bool TryReadToAny(ReadOnlySequence`1& sequence, ReadOnlySpan`1<T> delimiters, bool advancePastDelimiter)
  bool TryReadToAnyInternal(ReadOnlySequence`1& sequence, ReadOnlySpan`1<T> delimiters, bool advancePastDelimiter, int skip)
  bool TryReadTo(ReadOnlySequence`1& sequence, ReadOnlySpan`1<T> delimiter, bool advancePastDelimiter)
  bool TryAdvanceTo(T delimiter, bool advancePastDelimiter)
  bool TryAdvanceToAny(ReadOnlySpan`1<T> delimiters, bool advancePastDelimiter)
  long AdvancePast(T value)
  long AdvancePastAny(ReadOnlySpan`1<T> values)
  long AdvancePastAny(T value0, T value1, T value2, T value3)
  long AdvancePastAny(T value0, T value1, T value2)
  long AdvancePastAny(T value0, T value1)
  bool IsNext(T next, bool advancePast)
  bool IsNext(ReadOnlySpan`1<T> next, bool advancePast)
  bool IsNextSlow(ReadOnlySpan`1<T> next, bool advancePast)
  void .ctor(ReadOnlySequence`1<T> sequence)
  bool get_End()
  ReadOnlySequence`1<T> get_Sequence()
  SequencePosition get_Position()
  ReadOnlySpan`1<T> get_CurrentSpan()
  void set_CurrentSpan(ReadOnlySpan`1<T> value)
  int get_CurrentSpanIndex()
  void set_CurrentSpanIndex(int value)
  ReadOnlySpan`1<T> get_UnreadSpan()
  long get_Consumed()
  void set_Consumed(long value)
  long get_Remaining()
  long get_Length()
  bool TryPeek(T& value)
  bool TryRead(T& value)
  void Rewind(long count)
  void RetreatToPreviousSpan(long consumed)
  void ResetReader()
  void GetNextSpan()
  void Advance(long count)
  void AdvanceCurrentSpan(long count)
  void AdvanceWithinSpan(long count)
  void AdvanceToNextSpan(long count)
  bool TryCopyTo(Span`1<T> destination)
  bool TryCopyMultisegment(Span`1<T> destination)
--------------------------------------------------
Класс: System.Buffers.SequenceReaderExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TryRead(SequenceReader`1& reader, T& value)
  bool TryReadMultisegment(SequenceReader`1& reader, T& value)
  bool TryReadLittleEndian(SequenceReader`1& reader, Int16& value)
  bool TryReadBigEndian(SequenceReader`1& reader, Int16& value)
  bool TryReadReverseEndianness(SequenceReader`1& reader, Int16& value)
  bool TryReadLittleEndian(SequenceReader`1& reader, Int32& value)
  bool TryReadBigEndian(SequenceReader`1& reader, Int32& value)
  bool TryReadReverseEndianness(SequenceReader`1& reader, Int32& value)
  bool TryReadLittleEndian(SequenceReader`1& reader, Int64& value)
  bool TryReadBigEndian(SequenceReader`1& reader, Int64& value)
  bool TryReadReverseEndianness(SequenceReader`1& reader, Int64& value)
--------------------------------------------------
Класс: System.Buffers.Binary.BinaryPrimitives
Наследуется от: object
Поля:
Свойства:
Методы:
  sbyte ReverseEndianness(sbyte value)
  short ReverseEndianness(short value)
  int ReverseEndianness(int value)
  long ReverseEndianness(long value)
  byte ReverseEndianness(byte value)
  ushort ReverseEndianness(ushort value)
  UInt32 ReverseEndianness(UInt32 value)
  ulong ReverseEndianness(ulong value)
  short ReadInt16BigEndian(ReadOnlySpan`1<byte> source)
  int ReadInt32BigEndian(ReadOnlySpan`1<byte> source)
  long ReadInt64BigEndian(ReadOnlySpan`1<byte> source)
  ushort ReadUInt16BigEndian(ReadOnlySpan`1<byte> source)
  UInt32 ReadUInt32BigEndian(ReadOnlySpan`1<byte> source)
  ulong ReadUInt64BigEndian(ReadOnlySpan`1<byte> source)
  bool TryReadInt16BigEndian(ReadOnlySpan`1<byte> source, Int16& value)
  bool TryReadInt32BigEndian(ReadOnlySpan`1<byte> source, Int32& value)
  bool TryReadInt64BigEndian(ReadOnlySpan`1<byte> source, Int64& value)
  bool TryReadUInt16BigEndian(ReadOnlySpan`1<byte> source, UInt16& value)
  bool TryReadUInt32BigEndian(ReadOnlySpan`1<byte> source, UInt32& value)
  bool TryReadUInt64BigEndian(ReadOnlySpan`1<byte> source, UInt64& value)
  short ReadInt16LittleEndian(ReadOnlySpan`1<byte> source)
  int ReadInt32LittleEndian(ReadOnlySpan`1<byte> source)
  long ReadInt64LittleEndian(ReadOnlySpan`1<byte> source)
  ushort ReadUInt16LittleEndian(ReadOnlySpan`1<byte> source)
  UInt32 ReadUInt32LittleEndian(ReadOnlySpan`1<byte> source)
  ulong ReadUInt64LittleEndian(ReadOnlySpan`1<byte> source)
  bool TryReadInt16LittleEndian(ReadOnlySpan`1<byte> source, Int16& value)
  bool TryReadInt32LittleEndian(ReadOnlySpan`1<byte> source, Int32& value)
  bool TryReadInt64LittleEndian(ReadOnlySpan`1<byte> source, Int64& value)
  bool TryReadUInt16LittleEndian(ReadOnlySpan`1<byte> source, UInt16& value)
  bool TryReadUInt32LittleEndian(ReadOnlySpan`1<byte> source, UInt32& value)
  bool TryReadUInt64LittleEndian(ReadOnlySpan`1<byte> source, UInt64& value)
  void WriteInt16BigEndian(Span`1<byte> destination, short value)
  void WriteInt32BigEndian(Span`1<byte> destination, int value)
  void WriteInt64BigEndian(Span`1<byte> destination, long value)
  void WriteUInt16BigEndian(Span`1<byte> destination, ushort value)
  void WriteUInt32BigEndian(Span`1<byte> destination, UInt32 value)
  void WriteUInt64BigEndian(Span`1<byte> destination, ulong value)
  bool TryWriteInt16BigEndian(Span`1<byte> destination, short value)
  bool TryWriteInt32BigEndian(Span`1<byte> destination, int value)
  bool TryWriteInt64BigEndian(Span`1<byte> destination, long value)
  bool TryWriteUInt16BigEndian(Span`1<byte> destination, ushort value)
  bool TryWriteUInt32BigEndian(Span`1<byte> destination, UInt32 value)
  bool TryWriteUInt64BigEndian(Span`1<byte> destination, ulong value)
  void WriteInt16LittleEndian(Span`1<byte> destination, short value)
  void WriteInt32LittleEndian(Span`1<byte> destination, int value)
  void WriteInt64LittleEndian(Span`1<byte> destination, long value)
  void WriteUInt16LittleEndian(Span`1<byte> destination, ushort value)
  void WriteUInt32LittleEndian(Span`1<byte> destination, UInt32 value)
  void WriteUInt64LittleEndian(Span`1<byte> destination, ulong value)
  bool TryWriteInt16LittleEndian(Span`1<byte> destination, short value)
  bool TryWriteInt32LittleEndian(Span`1<byte> destination, int value)
  bool TryWriteInt64LittleEndian(Span`1<byte> destination, long value)
  bool TryWriteUInt16LittleEndian(Span`1<byte> destination, ushort value)
  bool TryWriteUInt32LittleEndian(Span`1<byte> destination, UInt32 value)
  bool TryWriteUInt64LittleEndian(Span`1<byte> destination, ulong value)
--------------------------------------------------
Класс: System.Buffers.Text.FormattingHelpers
Наследуется от: object
Поля:
  string HexTableLower
  string HexTableUpper
Свойства:
Методы:
  int CountDigits(ulong value)
  int CountDigits(UInt32 value)
  int CountHexDigits(ulong value)
  char GetSymbolOrDefault(StandardFormat& format, char defaultSymbol)
  void FillWithAsciiZeros(Span`1<byte> buffer)
  void WriteHexByte(byte value, Span`1<byte> buffer, int startingIndex, HexCasing casing)
  void WriteDigits(ulong value, Span`1<byte> buffer)
  void WriteDigitsWithGroupSeparator(ulong value, Span`1<byte> buffer)
  void WriteDigits(UInt32 value, Span`1<byte> buffer)
  void WriteFourDecimalDigits(UInt32 value, Span`1<byte> buffer, int startingIndex)
  void WriteTwoDecimalDigits(UInt32 value, Span`1<byte> buffer, int startingIndex)
  ulong DivMod(ulong numerator, ulong denominator, UInt64& modulo)
  UInt32 DivMod(UInt32 numerator, UInt32 denominator, UInt32& modulo)
  int CountDecimalTrailingZeros(UInt32 value, UInt32& valueWithoutTrailingZeros)
--------------------------------------------------
Класс: System.Buffers.Text.Base64
Наследуется от: object
Поля:
  SByte[] s_decodingMap
  Byte[] s_encodingMap
  byte EncodingPad
  int MaximumEncodeLength
Свойства:
Методы:
  OperationStatus DecodeFromUtf8(ReadOnlySpan`1<byte> utf8, Span`1<byte> bytes, Int32& bytesConsumed, Int32& bytesWritten, bool isFinalBlock)
  int GetMaxDecodedFromUtf8Length(int length)
  OperationStatus DecodeFromUtf8InPlace(Span`1<byte> buffer, Int32& bytesWritten)
  int Decode(Byte& encodedBytes, SByte& decodingMap)
  void WriteThreeLowOrderBytes(Byte& destination, int value)
  OperationStatus EncodeToUtf8(ReadOnlySpan`1<byte> bytes, Span`1<byte> utf8, Int32& bytesConsumed, Int32& bytesWritten, bool isFinalBlock)
  int GetMaxEncodedToUtf8Length(int length)
  OperationStatus EncodeToUtf8InPlace(Span`1<byte> buffer, int dataLength, Int32& bytesWritten)
  int Encode(Byte& threeBytes, Byte& encodingMap)
  int EncodeAndPadOne(Byte& twoBytes, Byte& encodingMap)
  int EncodeAndPadTwo(Byte& oneByte, Byte& encodingMap)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Text.Utf8Constants
Наследуется от: object
Поля:
  byte Colon
  byte Comma
  byte Minus
  byte Period
  byte Plus
  byte Slash
  byte Space
  byte Hyphen
  byte Separator
  int GroupSize
  TimeSpan s_nullUtcOffset
  int DateTimeMaxUtcOffsetHours
  int DateTimeNumFractionDigits
  int MaxDateTimeFraction
  ulong BillionMaxUIntValue
  UInt32 Billion
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Text.Utf8Formatter
Наследуется от: object
Поля:
  byte TimeMarker
  byte UtcMarker
  byte GMT1
  byte GMT2
  byte GMT3
  byte GMT1Lowercase
  byte GMT2Lowercase
  byte GMT3Lowercase
  UInt32[] DayAbbreviations
  UInt32[] DayAbbreviationsLowercase
  UInt32[] MonthAbbreviations
  UInt32[] MonthAbbreviationsLowercase
  byte OpenBrace
  byte CloseBrace
  byte OpenParen
  byte CloseParen
  byte Dash
Свойства:
Методы:
  bool TryFormat(bool value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormatDateTimeG(DateTime value, TimeSpan offset, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatDateTimeL(DateTime value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatDateTimeO(DateTime value, TimeSpan offset, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatDateTimeR(DateTime value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormat(DateTimeOffset value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(DateTime value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormatDecimalE(NumberBuffer& number, Span`1<byte> destination, Int32& bytesWritten, byte precision, byte exponentSymbol)
  bool TryFormatDecimalF(NumberBuffer& number, Span`1<byte> destination, Int32& bytesWritten, byte precision)
  bool TryFormatDecimalG(NumberBuffer& number, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormat(decimal value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(double value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(float value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormatFloatingPoint(T value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(Guid value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormatInt64D(long value, byte precision, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt64Default(long value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt32Default(int value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt32MultipleDigits(int value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt64MultipleDigits(long value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt64MoreThanNegativeBillionMaxUInt(long value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt64LessThanNegativeBillionMaxUInt(long value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt64N(long value, byte precision, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatInt64(long value, ulong mask, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormatUInt64D(ulong value, byte precision, Span`1<byte> destination, bool insertNegationSign, Int32& bytesWritten)
  bool TryFormatUInt64Default(ulong value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt32Default(UInt32 value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt32SingleDigit(UInt32 value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt32MultipleDigits(UInt32 value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt64SingleDigit(ulong value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt64MultipleDigits(ulong value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt64LessThanBillionMaxUInt(ulong value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt64MoreThanBillionMaxUInt(ulong value, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt64N(ulong value, byte precision, Span`1<byte> destination, bool insertNegationSign, Int32& bytesWritten)
  bool TryFormatUInt64X(ulong value, byte precision, bool useLower, Span`1<byte> destination, Int32& bytesWritten)
  bool TryFormatUInt64(ulong value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(byte value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(sbyte value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(ushort value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(short value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(UInt32 value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(int value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(ulong value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(long value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  bool TryFormat(TimeSpan value, Span`1<byte> destination, Int32& bytesWritten, StandardFormat format)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Text.ParserHelpers
Наследуется от: object
Поля:
  int ByteOverflowLength
  int ByteOverflowLengthHex
  int UInt16OverflowLength
  int UInt16OverflowLengthHex
  int UInt32OverflowLength
  int UInt32OverflowLengthHex
  int UInt64OverflowLength
  int UInt64OverflowLengthHex
  int SByteOverflowLength
  int SByteOverflowLengthHex
  int Int16OverflowLength
  int Int16OverflowLengthHex
  int Int32OverflowLength
  int Int32OverflowLengthHex
  int Int64OverflowLength
  int Int64OverflowLengthHex
  Byte[] s_hexLookup
Свойства:
Методы:
  bool IsDigit(int i)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Text.Utf8Parser
Наследуется от: object
Поля:
  Int32[] s_daysToMonth365
  Int32[] s_daysToMonth366
  UInt32 FlipCase
  UInt32 NoFlipCase
Свойства:
Методы:
  bool TryParse(ReadOnlySpan`1<byte> source, Boolean& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseDateTimeOffsetDefault(ReadOnlySpan`1<byte> source, DateTimeOffset& value, Int32& bytesConsumed)
  bool TryParseDateTimeG(ReadOnlySpan`1<byte> source, DateTime& value, DateTimeOffset& valueAsOffset, Int32& bytesConsumed)
  bool TryCreateDateTimeOffset(DateTime dateTime, bool offsetNegative, int offsetHours, int offsetMinutes, DateTimeOffset& value)
  bool TryCreateDateTimeOffset(int year, int month, int day, int hour, int minute, int second, int fraction, bool offsetNegative, int offsetHours, int offsetMinutes, DateTimeOffset& value)
  bool TryCreateDateTimeOffsetInterpretingDataAsLocalTime(int year, int month, int day, int hour, int minute, int second, int fraction, DateTimeOffset& value)
  bool TryCreateDateTime(int year, int month, int day, int hour, int minute, int second, int fraction, DateTimeKind kind, DateTime& value)
  bool TryParseDateTimeOffsetO(ReadOnlySpan`1<byte> source, DateTimeOffset& value, Int32& bytesConsumed, DateTimeKind& kind)
  bool TryParseDateTimeOffsetR(ReadOnlySpan`1<byte> source, UInt32 caseFlipXorMask, DateTimeOffset& dateTimeOffset, Int32& bytesConsumed)
  bool TryParse(ReadOnlySpan`1<byte> source, DateTime& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, DateTimeOffset& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, Decimal& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, Single& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, Double& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseNormalAsFloatingPoint(ReadOnlySpan`1<byte> source, Double& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseAsSpecialFloatingPoint(ReadOnlySpan`1<byte> source, T positiveInfinity, T negativeInfinity, T nan, T& value, Int32& bytesConsumed)
  bool TryParse(ReadOnlySpan`1<byte> source, Guid& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseGuidN(ReadOnlySpan`1<byte> text, Guid& value, Int32& bytesConsumed)
  bool TryParseGuidCore(ReadOnlySpan`1<byte> source, bool ends, char begin, char end, Guid& value, Int32& bytesConsumed)
  bool TryParseSByteD(ReadOnlySpan`1<byte> source, SByte& value, Int32& bytesConsumed)
  bool TryParseInt16D(ReadOnlySpan`1<byte> source, Int16& value, Int32& bytesConsumed)
  bool TryParseInt32D(ReadOnlySpan`1<byte> source, Int32& value, Int32& bytesConsumed)
  bool TryParseInt64D(ReadOnlySpan`1<byte> source, Int64& value, Int32& bytesConsumed)
  bool TryParseSByteN(ReadOnlySpan`1<byte> source, SByte& value, Int32& bytesConsumed)
  bool TryParseInt16N(ReadOnlySpan`1<byte> source, Int16& value, Int32& bytesConsumed)
  bool TryParseInt32N(ReadOnlySpan`1<byte> source, Int32& value, Int32& bytesConsumed)
  bool TryParseInt64N(ReadOnlySpan`1<byte> source, Int64& value, Int32& bytesConsumed)
  bool TryParse(ReadOnlySpan`1<byte> source, SByte& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, Int16& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, Int32& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, Int64& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseByteD(ReadOnlySpan`1<byte> source, Byte& value, Int32& bytesConsumed)
  bool TryParseUInt16D(ReadOnlySpan`1<byte> source, UInt16& value, Int32& bytesConsumed)
  bool TryParseUInt32D(ReadOnlySpan`1<byte> source, UInt32& value, Int32& bytesConsumed)
  bool TryParseUInt64D(ReadOnlySpan`1<byte> source, UInt64& value, Int32& bytesConsumed)
  bool TryParseByteN(ReadOnlySpan`1<byte> source, Byte& value, Int32& bytesConsumed)
  bool TryParseUInt16N(ReadOnlySpan`1<byte> source, UInt16& value, Int32& bytesConsumed)
  bool TryParseUInt32N(ReadOnlySpan`1<byte> source, UInt32& value, Int32& bytesConsumed)
  bool TryParseUInt64N(ReadOnlySpan`1<byte> source, UInt64& value, Int32& bytesConsumed)
  bool TryParseByteX(ReadOnlySpan`1<byte> source, Byte& value, Int32& bytesConsumed)
  bool TryParseUInt16X(ReadOnlySpan`1<byte> source, UInt16& value, Int32& bytesConsumed)
  bool TryParseUInt32X(ReadOnlySpan`1<byte> source, UInt32& value, Int32& bytesConsumed)
  bool TryParseUInt64X(ReadOnlySpan`1<byte> source, UInt64& value, Int32& bytesConsumed)
  bool TryParse(ReadOnlySpan`1<byte> source, Byte& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, UInt16& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, UInt32& value, Int32& bytesConsumed, char standardFormat)
  bool TryParse(ReadOnlySpan`1<byte> source, UInt64& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseNumber(ReadOnlySpan`1<byte> source, NumberBuffer& number, Int32& bytesConsumed, ParseNumberOptions options, Boolean& textUsedExponentNotation)
  bool TryParseTimeSpanBigG(ReadOnlySpan`1<byte> source, TimeSpan& value, Int32& bytesConsumed)
  bool TryParseTimeSpanC(ReadOnlySpan`1<byte> source, TimeSpan& value, Int32& bytesConsumed)
  bool TryParseTimeSpanLittleG(ReadOnlySpan`1<byte> source, TimeSpan& value, Int32& bytesConsumed)
  bool TryParse(ReadOnlySpan`1<byte> source, TimeSpan& value, Int32& bytesConsumed, char standardFormat)
  bool TryParseTimeSpanFraction(ReadOnlySpan`1<byte> source, UInt32& value, Int32& bytesConsumed)
  bool TryCreateTimeSpan(bool isNegative, UInt32 days, UInt32 hours, UInt32 minutes, UInt32 seconds, UInt32 fraction, TimeSpan& timeSpan)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Text.Number
Наследуется от: object
Поля:
  UInt64[] s_rgval64Power10
  SByte[] s_rgexp64Power10
  UInt64[] s_rgval64Power10By16
  Int16[] s_rgexp64Power10By16
  int DECIMAL_PRECISION
Свойства:
Методы:
  bool NumberBufferToDouble(NumberBuffer& number, Double& value)
  bool NumberBufferToDecimal(NumberBuffer& number, Decimal& value)
  void DecimalToNumber(decimal value, NumberBuffer& number)
  UInt32 DigitsToInt(ReadOnlySpan`1<byte> digits, int count)
  ulong Mul32x32To64(UInt32 a, UInt32 b)
  ulong Mul64Lossy(ulong a, ulong b, Int32& pexp)
  int abs(int value)
  double NumberToDouble(NumberBuffer& number)
  void RoundNumber(NumberBuffer& number, int pos)
  void .cctor()
--------------------------------------------------
Класс: System.Buffers.Text.NumberBuffer
Наследуется от: ValueType
Поля:
  int Scale
  bool IsNegative
  int BufferSize
  byte _b0
  byte _b1
  byte _b2
  byte _b3
  byte _b4
  byte _b5
  byte _b6
  byte _b7
  byte _b8
  byte _b9
  byte _b10
  byte _b11
  byte _b12
  byte _b13
  byte _b14
  byte _b15
  byte _b16
  byte _b17
  byte _b18
  byte _b19
  byte _b20
  byte _b21
  byte _b22
  byte _b23
  byte _b24
  byte _b25
  byte _b26
  byte _b27
  byte _b28
  byte _b29
  byte _b30
  byte _b31
  byte _b32
  byte _b33
  byte _b34
  byte _b35
  byte _b36
  byte _b37
  byte _b38
  byte _b39
  byte _b40
  byte _b41
  byte _b42
  byte _b43
  byte _b44
  byte _b45
  byte _b46
  byte _b47
  byte _b48
  byte _b49
  byte _b50
Свойства:
  Span`1<byte> Digits
  Byte* UnsafeDigits
  int NumDigits
Методы:
  Span`1<byte> get_Digits()
  Byte* get_UnsafeDigits()
  int get_NumDigits()
  void CheckConsistency()
  string ToString()
--------------------------------------------------
Класс: System.IO.DriveInfoInternal
Наследуется от: object
Поля:
Свойства:
Методы:
  String[] GetLogicalDrives()
--------------------------------------------------
Класс: System.IO.DisableMediaInsertionPrompt
Наследуется от: ValueType
Поля:
  bool _disableSuccess
  UInt32 _oldMode
Свойства:
Методы:
  DisableMediaInsertionPrompt Create()
  void Dispose()
--------------------------------------------------
Класс: System.IO.FileSystem
Наследуется от: object
Поля:
  int GENERIC_READ
Свойства:
Методы:
  void CopyFile(string sourceFullPath, string destFullPath, bool overwrite)
  void ReplaceFile(string sourceFullPath, string destFullPath, string destBackupFullPath, bool ignoreMetadataErrors)
  void CreateDirectory(string fullPath)
  void DeleteFile(string fullPath)
  bool DirectoryExists(string fullPath)
  bool DirectoryExists(string path, Int32& lastError)
  int FillAttributeInfo(string path, WIN32_FILE_ATTRIBUTE_DATA& data, bool returnErrorOnNotFound)
  bool FileExists(string fullPath)
  FileAttributes GetAttributes(string fullPath)
  DateTimeOffset GetCreationTime(string fullPath)
  FileSystemInfo GetFileSystemInfo(string fullPath, bool asDirectory)
  DateTimeOffset GetLastAccessTime(string fullPath)
  DateTimeOffset GetLastWriteTime(string fullPath)
  void MoveDirectory(string sourceFullPath, string destFullPath)
  void MoveFile(string sourceFullPath, string destFullPath)
  SafeFileHandle OpenHandle(string fullPath, bool asDirectory)
  void RemoveDirectory(string fullPath, bool recursive)
  void GetFindData(string fullPath, WIN32_FIND_DATA& findData)
  bool IsNameSurrogateReparsePoint(WIN32_FIND_DATA& data)
  void RemoveDirectoryRecursive(string fullPath, WIN32_FIND_DATA& findData, bool topLevel)
  void RemoveDirectoryInternal(string fullPath, bool topLevel, bool allowDirectoryNotEmpty)
  void SetAttributes(string fullPath, FileAttributes attributes)
  void SetCreationTime(string fullPath, DateTimeOffset time, bool asDirectory)
  void SetLastAccessTime(string fullPath, DateTimeOffset time, bool asDirectory)
  void SetLastWriteTime(string fullPath, DateTimeOffset time, bool asDirectory)
  String[] GetLogicalDrives()
  bool UnityCreateDirectory(string name)
  bool UnityRemoveDirectory(string fullPath)
  bool UnityGetFileAttributesEx(string path, WIN32_FILE_ATTRIBUTE_DATA& data)
  bool UnitySetFileAttributes(string fullPath, FileAttributes attributes)
  IntPtr UnityCreateFile_IntPtr(string lpFileName, int dwDesiredAccess, FileShare dwShareMode, FileMode dwCreationDisposition, int dwFlagsAndAttributes)
  int UnityCopyFile(string sourceFullPath, string destFullPath, bool failIfExists)
  bool UnityDeleteFile(string path)
  bool UnityMoveFile(string sourceFullPath, string destFullPath)
  SafeFindHandle UnityFindFirstFile(string path, WIN32_FIND_DATA& findData)
  bool UnityFindNextFile(SafeFindHandle handle, WIN32_FIND_DATA& findData)
--------------------------------------------------
Класс: System.IO.DirectoryNotFoundException
Наследуется от: IOException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.EndOfStreamException
Наследуется от: IOException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.Error
Наследуется от: object
Поля:
Свойства:
Методы:
  Exception GetStreamIsClosed()
  Exception GetEndOfFile()
  Exception GetFileNotOpen()
  Exception GetReadNotSupported()
  Exception GetSeekNotSupported()
  Exception GetWriteNotSupported()
--------------------------------------------------
Класс: System.IO.FileAccess
Наследуется от: Enum
Поля:
  int value__
  FileAccess Read
  FileAccess Write
  FileAccess ReadWrite
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FileLoadException
Наследуется от: IOException
Поля:
  string <FileName>k__BackingField
  string <FusionLog>k__BackingField
Свойства:
  string Message
  string FileName
  string FusionLog
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(string message, string fileName)
  void .ctor(string message, string fileName, Exception inner)
  string get_Message()
  string get_FileName()
  string get_FusionLog()
  string ToString()
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string FormatFileLoadExceptionMessage(string fileName, int hResult)
--------------------------------------------------
Класс: System.IO.FileMode
Наследуется от: Enum
Поля:
  int value__
  FileMode CreateNew
  FileMode Create
  FileMode Open
  FileMode OpenOrCreate
  FileMode Truncate
  FileMode Append
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FileNotFoundException
Наследуется от: IOException
Поля:
  string <FileName>k__BackingField
  string <FusionLog>k__BackingField
Свойства:
  string Message
  string FileName
  string FusionLog
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, string fileName)
  void .ctor(string message, string fileName, Exception innerException)
  string get_Message()
  void SetMessageField()
  string get_FileName()
  string get_FusionLog()
  string ToString()
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.FileOptions
Наследуется от: Enum
Поля:
  int value__
  FileOptions None
  FileOptions WriteThrough
  FileOptions Asynchronous
  FileOptions RandomAccess
  FileOptions DeleteOnClose
  FileOptions SequentialScan
  FileOptions Encrypted
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FileShare
Наследуется от: Enum
Поля:
  int value__
  FileShare None
  FileShare Read
  FileShare Write
  FileShare ReadWrite
  FileShare Delete
  FileShare Inheritable
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.IOException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, int hresult)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.MemoryStream
Наследуется от: Stream
Поля:
  Byte[] _buffer
  int _origin
  int _position
  int _length
  int _capacity
  bool _expandable
  bool _writable
  bool _exposable
  bool _isOpen
  Task`1<int> _lastReadTask
  int MemStreamMaxLength
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  int Capacity
  long Length
  long Position
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(Byte[] buffer)
  void .ctor(Byte[] buffer, bool writable)
  void .ctor(Byte[] buffer, int index, int count)
  void .ctor(Byte[] buffer, int index, int count, bool writable)
  void .ctor(Byte[] buffer, int index, int count, bool writable, bool publiclyVisible)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  void EnsureNotClosed()
  void EnsureWriteable()
  void Dispose(bool disposing)
  bool EnsureCapacity(int value)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  Byte[] GetBuffer()
  bool TryGetBuffer(ArraySegment`1& buffer)
  Byte[] InternalGetBuffer()
  void InternalGetOriginAndLength(Int32& origin, Int32& length)
  int InternalGetPosition()
  int InternalReadInt32()
  int InternalEmulateRead(int count)
  int get_Capacity()
  void set_Capacity(int value)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  int ReadByte()
  void CopyTo(Stream destination, int bufferSize)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
  long Seek(long offset, SeekOrigin loc)
  void SetLength(long value)
  Byte[] ToArray()
  void Write(Byte[] buffer, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  void WriteByte(byte value)
  void WriteTo(Stream stream)
--------------------------------------------------
Класс: System.IO.PathInternal
Наследуется от: object
Поля:
  char DirectorySeparatorChar
  char AltDirectorySeparatorChar
  char VolumeSeparatorChar
  char PathSeparator
  string DirectorySeparatorCharAsString
  string ExtendedPathPrefix
  string UncPathPrefix
  string UncExtendedPrefixToInsert
  string UncExtendedPathPrefix
  string DevicePathPrefix
  string ParentDirectoryPrefix
  int MaxShortPath
  int MaxShortDirectoryPath
  int DevicePrefixLength
  int UncPrefixLength
  int UncExtendedPrefixLength
  bool s_isCaseSensitive
Свойства:
  StringComparison StringComparison
  bool IsCaseSensitive
Методы:
  bool IsValidDriveChar(char value)
  bool EndsWithPeriodOrSpace(string path)
  string EnsureExtendedPrefixIfNeeded(string path)
  string EnsureExtendedPrefixOverMaxPath(string path)
  string EnsureExtendedPrefix(string path)
  bool IsDevice(ReadOnlySpan`1<char> path)
  bool IsDeviceUNC(ReadOnlySpan`1<char> path)
  bool IsExtended(ReadOnlySpan`1<char> path)
  bool HasWildCardCharacters(ReadOnlySpan`1<char> path)
  int GetRootLength(ReadOnlySpan`1<char> path)
  bool IsPartiallyQualified(ReadOnlySpan`1<char> path)
  bool IsDirectorySeparator(char c)
  string NormalizeDirectorySeparators(string path)
  bool IsEffectivelyEmpty(ReadOnlySpan`1<char> path)
  bool EndsInDirectorySeparator(ReadOnlySpan`1<char> path)
  bool StartsWithDirectorySeparator(ReadOnlySpan`1<char> path)
  string EnsureTrailingSeparator(string path)
  string TrimEndingDirectorySeparator(string path)
  ReadOnlySpan`1<char> TrimEndingDirectorySeparator(ReadOnlySpan`1<char> path)
  bool IsRoot(ReadOnlySpan`1<char> path)
  int GetCommonPathLength(string first, string second, bool ignoreCase)
  int EqualStartingCharacterCount(string first, string second, bool ignoreCase)
  bool AreRootsEqual(string first, string second, StringComparison comparisonType)
  string RemoveRelativeSegments(string path, int rootLength)
  StringComparison get_StringComparison()
  bool get_IsCaseSensitive()
  bool GetIsCaseSensitive()
  bool IsPartiallyQualified(string path)
  bool HasIllegalCharacters(string path, bool checkAdditional)
  void .cctor()
--------------------------------------------------
Класс: System.IO.PathTooLongException
Наследуется от: IOException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.PinnedBufferMemoryStream
Наследуется от: UnmanagedMemoryStream
Поля:
  Byte[] _array
  GCHandle _pinningHandle
Свойства:
Методы:
  void .ctor(Byte[] array)
  int Read(Span`1<byte> buffer)
  void Write(ReadOnlySpan`1<byte> buffer)
  void Finalize()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.IO.SeekOrigin
Наследуется от: Enum
Поля:
  int value__
  SeekOrigin Begin
  SeekOrigin Current
  SeekOrigin End
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.StreamHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  void ValidateCopyToArgs(Stream source, Stream destination, int bufferSize)
--------------------------------------------------
Класс: System.IO.StreamReader
Наследуется от: TextReader
Поля:
  StreamReader Null
  int DefaultBufferSize
  int DefaultFileStreamBufferSize
  int MinBufferSize
  Stream _stream
  Encoding _encoding
  Decoder _decoder
  Byte[] _byteBuffer
  Char[] _charBuffer
  int _charPos
  int _charLen
  int _byteLen
  int _bytePos
  int _maxCharsPerBuffer
  bool _detectEncoding
  bool _checkPreamble
  bool _isBlocked
  bool _closable
  Task _asyncReadTask
Свойства:
  Encoding CurrentEncoding
  Stream BaseStream
  bool LeaveOpen
  bool EndOfStream
Методы:
  void CheckAsyncTaskInProgress()
  void ThrowAsyncIOInProgress()
  void .ctor()
  void .ctor(Stream stream)
  void .ctor(Stream stream, bool detectEncodingFromByteOrderMarks)
  void .ctor(Stream stream, Encoding encoding)
  void .ctor(Stream stream, Encoding encoding, bool detectEncodingFromByteOrderMarks)
  void .ctor(Stream stream, Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize)
  void .ctor(Stream stream, Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen)
  void .ctor(string path)
  void .ctor(string path, bool detectEncodingFromByteOrderMarks)
  void .ctor(string path, Encoding encoding)
  void .ctor(string path, Encoding encoding, bool detectEncodingFromByteOrderMarks)
  void .ctor(string path, Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize)
  void Init(Stream stream, Encoding encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen)
  void Init(Stream stream)
  void Close()
  void Dispose(bool disposing)
  Encoding get_CurrentEncoding()
  Stream get_BaseStream()
  bool get_LeaveOpen()
  void DiscardBufferedData()
  bool get_EndOfStream()
  int Peek()
  int Read()
  int Read(Char[] buffer, int index, int count)
  int Read(Span`1<char> buffer)
  int ReadSpan(Span`1<char> buffer)
  string ReadToEnd()
  int ReadBlock(Char[] buffer, int index, int count)
  int ReadBlock(Span`1<char> buffer)
  void CompressBuffer(int n)
  void DetectEncoding()
  bool IsPreamble()
  int ReadBuffer()
  int ReadBuffer(Span`1<char> userBuffer, Boolean& readToUserBuffer)
  string ReadLine()
  Task`1<string> ReadLineAsync()
  Task`1<string> ReadLineAsyncInternal()
  Task`1<string> ReadToEndAsync()
  Task`1<string> ReadToEndAsyncInternal()
  Task`1<int> ReadAsync(Char[] buffer, int index, int count)
  ValueTask`1<int> ReadAsync(Memory`1<char> buffer, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsyncInternal(Memory`1<char> buffer, CancellationToken cancellationToken)
  Task`1<int> ReadBlockAsync(Char[] buffer, int index, int count)
  ValueTask`1<int> ReadBlockAsync(Memory`1<char> buffer, CancellationToken cancellationToken)
  Task`1<int> ReadBufferAsync()
  bool DataAvailable()
  void .cctor()
--------------------------------------------------
Класс: System.IO.StreamWriter
Наследуется от: TextWriter
Поля:
  int DefaultBufferSize
  int DefaultFileStreamBufferSize
  int MinBufferSize
  int DontCopyOnWriteLineThreshold
  StreamWriter Null
  Stream _stream
  Encoding _encoding
  Encoder _encoder
  Byte[] _byteBuffer
  Char[] _charBuffer
  int _charPos
  int _charLen
  bool _autoFlush
  bool _haveWrittenPreamble
  bool _closable
  Task _asyncWriteTask
Свойства:
  Encoding UTF8NoBOM
  bool AutoFlush
  Stream BaseStream
  bool LeaveOpen
  bool HaveWrittenPreamble
  Encoding Encoding
  int CharPos_Prop
  bool HaveWrittenPreamble_Prop
Методы:
  void CheckAsyncTaskInProgress()
  void ThrowAsyncIOInProgress()
  Encoding get_UTF8NoBOM()
  void .ctor()
  void .ctor(Stream stream)
  void .ctor(Stream stream, Encoding encoding)
  void .ctor(Stream stream, Encoding encoding, int bufferSize)
  void .ctor(Stream stream, Encoding encoding, int bufferSize, bool leaveOpen)
  void .ctor(string path)
  void .ctor(string path, bool append)
  void .ctor(string path, bool append, Encoding encoding)
  void .ctor(string path, bool append, Encoding encoding, int bufferSize)
  void Init(Stream streamArg, Encoding encodingArg, int bufferSize, bool shouldLeaveOpen)
  void Close()
  void Dispose(bool disposing)
  ValueTask DisposeAsync()
  ValueTask DisposeAsyncCore()
  void CloseStreamFromDispose(bool disposing)
  void Flush()
  void Flush(bool flushStream, bool flushEncoder)
  bool get_AutoFlush()
  void set_AutoFlush(bool value)
  Stream get_BaseStream()
  bool get_LeaveOpen()
  void set_HaveWrittenPreamble(bool value)
  Encoding get_Encoding()
  void Write(char value)
  void Write(Char[] buffer)
  void Write(Char[] buffer, int index, int count)
  void Write(ReadOnlySpan`1<char> buffer)
  void WriteSpan(ReadOnlySpan`1<char> buffer, bool appendNewLine)
  void Write(string value)
  void WriteLine(string value)
  void WriteLine(ReadOnlySpan`1<char> value)
  Task WriteAsync(char value)
  Task WriteAsyncInternal(StreamWriter _this, char value, Char[] charBuffer, int charPos, int charLen, Char[] coreNewLine, bool autoFlush, bool appendNewLine)
  Task WriteAsync(string value)
  Task WriteAsyncInternal(StreamWriter _this, string value, Char[] charBuffer, int charPos, int charLen, Char[] coreNewLine, bool autoFlush, bool appendNewLine)
  Task WriteAsync(Char[] buffer, int index, int count)
  Task WriteAsync(ReadOnlyMemory`1<char> buffer, CancellationToken cancellationToken)
  Task WriteAsyncInternal(StreamWriter _this, ReadOnlyMemory`1<char> source, Char[] charBuffer, int charPos, int charLen, Char[] coreNewLine, bool autoFlush, bool appendNewLine, CancellationToken cancellationToken)
  Task WriteLineAsync()
  Task WriteLineAsync(char value)
  Task WriteLineAsync(string value)
  Task WriteLineAsync(Char[] buffer, int index, int count)
  Task WriteLineAsync(ReadOnlyMemory`1<char> buffer, CancellationToken cancellationToken)
  Task FlushAsync()
  void set_CharPos_Prop(int value)
  void set_HaveWrittenPreamble_Prop(bool value)
  Task FlushAsyncInternal(bool flushStream, bool flushEncoder, Char[] sCharBuffer, int sCharPos, CancellationToken cancellationToken)
  Task FlushAsyncInternal(StreamWriter _this, bool flushStream, bool flushEncoder, Char[] charBuffer, int charPos, bool haveWrittenPreamble, Encoding encoding, Encoder encoder, Byte[] byteBuffer, Stream stream, CancellationToken cancellationToken)
  void .cctor()
--------------------------------------------------
Класс: System.IO.TextReader
Наследуется от: MarshalByRefObject
Поля:
  TextReader Null
Свойства:
Методы:
  void .ctor()
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  int Peek()
  int Read()
  int Read(Char[] buffer, int index, int count)
  int Read(Span`1<char> buffer)
  string ReadToEnd()
  int ReadBlock(Char[] buffer, int index, int count)
  int ReadBlock(Span`1<char> buffer)
  string ReadLine()
  Task`1<string> ReadLineAsync()
  Task`1<string> ReadToEndAsync()
  Task`1<int> ReadAsync(Char[] buffer, int index, int count)
  ValueTask`1<int> ReadAsync(Memory`1<char> buffer, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsyncInternal(Memory`1<char> buffer, CancellationToken cancellationToken)
  Task`1<int> ReadBlockAsync(Char[] buffer, int index, int count)
  ValueTask`1<int> ReadBlockAsync(Memory`1<char> buffer, CancellationToken cancellationToken)
  ValueTask`1<int> ReadBlockAsyncInternal(Memory`1<char> buffer, CancellationToken cancellationToken)
  TextReader Synchronized(TextReader reader)
  void .cctor()
--------------------------------------------------
Класс: System.IO.TextWriter
Наследуется от: MarshalByRefObject
Поля:
  TextWriter Null
  Char[] s_coreNewLine
  Char[] CoreNewLine
  string CoreNewLineStr
  IFormatProvider _internalFormatProvider
Свойства:
  IFormatProvider FormatProvider
  Encoding Encoding
  string NewLine
Методы:
  void .ctor()
  void .ctor(IFormatProvider formatProvider)
  IFormatProvider get_FormatProvider()
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  ValueTask DisposeAsync()
  void Flush()
  Encoding get_Encoding()
  string get_NewLine()
  void set_NewLine(string value)
  void Write(char value)
  void Write(Char[] buffer)
  void Write(Char[] buffer, int index, int count)
  void Write(ReadOnlySpan`1<char> buffer)
  void Write(bool value)
  void Write(int value)
  void Write(UInt32 value)
  void Write(long value)
  void Write(ulong value)
  void Write(float value)
  void Write(double value)
  void Write(decimal value)
  void Write(string value)
  void Write(object value)
  void Write(string format, object arg0)
  void Write(string format, object arg0, object arg1)
  void Write(string format, object arg0, object arg1, object arg2)
  void Write(string format, Object[] arg)
  void WriteLine()
  void WriteLine(char value)
  void WriteLine(Char[] buffer)
  void WriteLine(Char[] buffer, int index, int count)
  void WriteLine(ReadOnlySpan`1<char> buffer)
  void WriteLine(bool value)
  void WriteLine(int value)
  void WriteLine(UInt32 value)
  void WriteLine(long value)
  void WriteLine(ulong value)
  void WriteLine(float value)
  void WriteLine(double value)
  void WriteLine(decimal value)
  void WriteLine(string value)
  void WriteLine(object value)
  void WriteLine(string format, object arg0)
  void WriteLine(string format, object arg0, object arg1)
  void WriteLine(string format, object arg0, object arg1, object arg2)
  void WriteLine(string format, Object[] arg)
  Task WriteAsync(char value)
  Task WriteAsync(string value)
  Task WriteAsync(Char[] buffer)
  Task WriteAsync(Char[] buffer, int index, int count)
  Task WriteAsync(ReadOnlyMemory`1<char> buffer, CancellationToken cancellationToken)
  Task WriteLineAsync(char value)
  Task WriteLineAsync(string value)
  Task WriteLineAsync(Char[] buffer)
  Task WriteLineAsync(Char[] buffer, int index, int count)
  Task WriteLineAsync(ReadOnlyMemory`1<char> buffer, CancellationToken cancellationToken)
  Task WriteLineAsync()
  Task FlushAsync()
  TextWriter Synchronized(TextWriter writer)
  void .cctor()
--------------------------------------------------
Класс: System.IO.UnmanagedMemoryAccessor
Наследуется от: object
Поля:
  SafeBuffer _buffer
  long _offset
  long _capacity
  FileAccess _access
  bool _isOpen
  bool _canRead
  bool _canWrite
Свойства:
  long Capacity
  bool CanRead
  bool CanWrite
  bool IsOpen
Методы:
  void .ctor()
  void .ctor(SafeBuffer buffer, long offset, long capacity)
  void .ctor(SafeBuffer buffer, long offset, long capacity, FileAccess access)
  void Initialize(SafeBuffer buffer, long offset, long capacity, FileAccess access)
  long get_Capacity()
  bool get_CanRead()
  bool get_CanWrite()
  void Dispose(bool disposing)
  void Dispose()
  bool get_IsOpen()
  bool ReadBoolean(long position)
  byte ReadByte(long position)
  char ReadChar(long position)
  short ReadInt16(long position)
  int ReadInt32(long position)
  long ReadInt64(long position)
  decimal ReadDecimal(long position)
  float ReadSingle(long position)
  double ReadDouble(long position)
  sbyte ReadSByte(long position)
  ushort ReadUInt16(long position)
  UInt32 ReadUInt32(long position)
  ulong ReadUInt64(long position)
  void Read(long position, T& structure)
  int ReadArray(long position, T[] array, int offset, int count)
  void Write(long position, bool value)
  void Write(long position, byte value)
  void Write(long position, char value)
  void Write(long position, short value)
  void Write(long position, int value)
  void Write(long position, long value)
  void Write(long position, decimal value)
  void Write(long position, float value)
  void Write(long position, double value)
  void Write(long position, sbyte value)
  void Write(long position, ushort value)
  void Write(long position, UInt32 value)
  void Write(long position, ulong value)
  void Write(long position, T& structure)
  void WriteArray(long position, T[] array, int offset, int count)
  void EnsureSafeToRead(long position, int sizeOfType)
  void EnsureSafeToWrite(long position, int sizeOfType)
--------------------------------------------------
Класс: System.IO.UnmanagedMemoryStream
Наследуется от: Stream
Поля:
  SafeBuffer _buffer
  Byte* _mem
  long _length
  long _capacity
  long _position
  long _offset
  FileAccess _access
  bool _isOpen
  Task`1<int> _lastReadTask
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Capacity
  long Position
  Byte* PositionPointer
Методы:
  void .ctor()
  void .ctor(SafeBuffer buffer, long offset, long length)
  void .ctor(SafeBuffer buffer, long offset, long length, FileAccess access)
  void Initialize(SafeBuffer buffer, long offset, long length, FileAccess access)
  void .ctor(Byte* pointer, long length)
  void .ctor(Byte* pointer, long length, long capacity, FileAccess access)
  void Initialize(Byte* pointer, long length, long capacity, FileAccess access)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  void Dispose(bool disposing)
  void EnsureNotClosed()
  void EnsureReadable()
  void EnsureWriteable()
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  long get_Length()
  long get_Capacity()
  long get_Position()
  void set_Position(long value)
  Byte* get_PositionPointer()
  void set_PositionPointer(Byte* value)
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  int ReadCore(Span`1<byte> buffer)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  int ReadByte()
  long Seek(long offset, SeekOrigin loc)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  void WriteCore(ReadOnlySpan`1<byte> buffer)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  void WriteByte(byte value)
--------------------------------------------------
Класс: System.IO.UnmanagedMemoryStreamWrapper
Наследуется от: MemoryStream
Поля:
  UnmanagedMemoryStream _unmanagedStream
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  int Capacity
  long Length
  long Position
Методы:
  void .ctor(UnmanagedMemoryStream stream)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  void Dispose(bool disposing)
  void Flush()
  Byte[] GetBuffer()
  bool TryGetBuffer(ArraySegment`1& buffer)
  int get_Capacity()
  void set_Capacity(int value)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  int ReadByte()
  long Seek(long offset, SeekOrigin loc)
  Byte[] ToArray()
  void Write(Byte[] buffer, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  void WriteByte(byte value)
  void WriteTo(Stream stream)
  void SetLength(long value)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
  Task FlushAsync(CancellationToken cancellationToken)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.IO.Win32Marshal
Наследуется от: object
Поля:
Свойства:
Методы:
  Exception GetExceptionForLastWin32Error(string path)
  Exception GetExceptionForWin32Error(int errorCode, string path)
  int MakeHRFromErrorCode(int errorCode)
  int TryMakeWin32ErrorCodeFromHR(int hr)
  string GetMessage(int errorCode)
--------------------------------------------------
Класс: System.IO.DriveNotFoundException
Наследуется от: IOException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.DriveType
Наследуется от: Enum
Поля:
  int value__
  DriveType Unknown
  DriveType NoRootDirectory
  DriveType Removable
  DriveType Fixed
  DriveType Network
  DriveType CDRom
  DriveType Ram
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Directory
Наследуется от: object
Поля:
Свойства:
Методы:
  DirectoryInfo GetParent(string path)
  DirectoryInfo CreateDirectory(string path)
  bool Exists(string path)
  void SetCreationTime(string path, DateTime creationTime)
  void SetCreationTimeUtc(string path, DateTime creationTimeUtc)
  DateTime GetCreationTime(string path)
  DateTime GetCreationTimeUtc(string path)
  void SetLastWriteTime(string path, DateTime lastWriteTime)
  void SetLastWriteTimeUtc(string path, DateTime lastWriteTimeUtc)
  DateTime GetLastWriteTime(string path)
  DateTime GetLastWriteTimeUtc(string path)
  void SetLastAccessTime(string path, DateTime lastAccessTime)
  void SetLastAccessTimeUtc(string path, DateTime lastAccessTimeUtc)
  DateTime GetLastAccessTime(string path)
  DateTime GetLastAccessTimeUtc(string path)
  String[] GetFiles(string path)
  String[] GetFiles(string path, string searchPattern)
  String[] GetFiles(string path, string searchPattern, SearchOption searchOption)
  String[] GetFiles(string path, string searchPattern, EnumerationOptions enumerationOptions)
  String[] GetDirectories(string path)
  String[] GetDirectories(string path, string searchPattern)
  String[] GetDirectories(string path, string searchPattern, SearchOption searchOption)
  String[] GetDirectories(string path, string searchPattern, EnumerationOptions enumerationOptions)
  String[] GetFileSystemEntries(string path)
  String[] GetFileSystemEntries(string path, string searchPattern)
  String[] GetFileSystemEntries(string path, string searchPattern, SearchOption searchOption)
  String[] GetFileSystemEntries(string path, string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<string> InternalEnumeratePaths(string path, string searchPattern, SearchTarget searchTarget, EnumerationOptions options)
  IEnumerable`1<string> EnumerateDirectories(string path)
  IEnumerable`1<string> EnumerateDirectories(string path, string searchPattern)
  IEnumerable`1<string> EnumerateDirectories(string path, string searchPattern, SearchOption searchOption)
  IEnumerable`1<string> EnumerateDirectories(string path, string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<string> EnumerateFiles(string path)
  IEnumerable`1<string> EnumerateFiles(string path, string searchPattern)
  IEnumerable`1<string> EnumerateFiles(string path, string searchPattern, SearchOption searchOption)
  IEnumerable`1<string> EnumerateFiles(string path, string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<string> EnumerateFileSystemEntries(string path)
  IEnumerable`1<string> EnumerateFileSystemEntries(string path, string searchPattern)
  IEnumerable`1<string> EnumerateFileSystemEntries(string path, string searchPattern, SearchOption searchOption)
  IEnumerable`1<string> EnumerateFileSystemEntries(string path, string searchPattern, EnumerationOptions enumerationOptions)
  string GetDirectoryRoot(string path)
  string InternalGetDirectoryRoot(string path)
  string GetCurrentDirectory()
  void SetCurrentDirectory(string path)
  void Move(string sourceDirName, string destDirName)
  void Delete(string path)
  void Delete(string path, bool recursive)
  String[] GetLogicalDrives()
  DirectoryInfo CreateDirectory(string path, DirectorySecurity directorySecurity)
  DirectorySecurity GetAccessControl(string path, AccessControlSections includeSections)
  DirectorySecurity GetAccessControl(string path)
  void SetAccessControl(string path, DirectorySecurity directorySecurity)
  string InsecureGetCurrentDirectory()
  void InsecureSetCurrentDirectory(string path)
--------------------------------------------------
Класс: System.IO.DirectoryInfo
Наследуется от: FileSystemInfo
Поля:
Свойства:
  DirectoryInfo Parent
  DirectoryInfo Root
Методы:
  void .ctor(string path)
  void .ctor(string originalPath, string fullPath, string fileName, bool isNormalized)
  void Init(string originalPath, string fullPath, string fileName, bool isNormalized)
  DirectoryInfo get_Parent()
  DirectoryInfo CreateSubdirectory(string path)
  void Create()
  FileInfo[] GetFiles()
  FileInfo[] GetFiles(string searchPattern)
  FileInfo[] GetFiles(string searchPattern, SearchOption searchOption)
  FileInfo[] GetFiles(string searchPattern, EnumerationOptions enumerationOptions)
  FileSystemInfo[] GetFileSystemInfos()
  FileSystemInfo[] GetFileSystemInfos(string searchPattern)
  FileSystemInfo[] GetFileSystemInfos(string searchPattern, SearchOption searchOption)
  FileSystemInfo[] GetFileSystemInfos(string searchPattern, EnumerationOptions enumerationOptions)
  DirectoryInfo[] GetDirectories()
  DirectoryInfo[] GetDirectories(string searchPattern)
  DirectoryInfo[] GetDirectories(string searchPattern, SearchOption searchOption)
  DirectoryInfo[] GetDirectories(string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<DirectoryInfo> EnumerateDirectories()
  IEnumerable`1<DirectoryInfo> EnumerateDirectories(string searchPattern)
  IEnumerable`1<DirectoryInfo> EnumerateDirectories(string searchPattern, SearchOption searchOption)
  IEnumerable`1<DirectoryInfo> EnumerateDirectories(string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<FileInfo> EnumerateFiles()
  IEnumerable`1<FileInfo> EnumerateFiles(string searchPattern)
  IEnumerable`1<FileInfo> EnumerateFiles(string searchPattern, SearchOption searchOption)
  IEnumerable`1<FileInfo> EnumerateFiles(string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<FileSystemInfo> EnumerateFileSystemInfos()
  IEnumerable`1<FileSystemInfo> EnumerateFileSystemInfos(string searchPattern)
  IEnumerable`1<FileSystemInfo> EnumerateFileSystemInfos(string searchPattern, SearchOption searchOption)
  IEnumerable`1<FileSystemInfo> EnumerateFileSystemInfos(string searchPattern, EnumerationOptions enumerationOptions)
  IEnumerable`1<FileSystemInfo> InternalEnumerateInfos(string path, string searchPattern, SearchTarget searchTarget, EnumerationOptions options)
  DirectoryInfo get_Root()
  void MoveTo(string destDirName)
  void Delete()
  void Delete(bool recursive)
  void .ctor(SerializationInfo info, StreamingContext context)
  void Create(DirectorySecurity directorySecurity)
  DirectoryInfo CreateSubdirectory(string path, DirectorySecurity directorySecurity)
  DirectorySecurity GetAccessControl()
  DirectorySecurity GetAccessControl(AccessControlSections includeSections)
  void SetAccessControl(DirectorySecurity directorySecurity)
--------------------------------------------------
Класс: System.IO.EnumerationOptions
Наследуется от: object
Поля:
  EnumerationOptions <Compatible>k__BackingField
  EnumerationOptions <CompatibleRecursive>k__BackingField
  EnumerationOptions <Default>k__BackingField
  bool <RecurseSubdirectories>k__BackingField
  bool <IgnoreInaccessible>k__BackingField
  int <BufferSize>k__BackingField
  FileAttributes <AttributesToSkip>k__BackingField
  MatchType <MatchType>k__BackingField
  MatchCasing <MatchCasing>k__BackingField
  bool <ReturnSpecialDirectories>k__BackingField
Свойства:
  EnumerationOptions Compatible
  EnumerationOptions CompatibleRecursive
  EnumerationOptions Default
  bool RecurseSubdirectories
  bool IgnoreInaccessible
  int BufferSize
  FileAttributes AttributesToSkip
  MatchType MatchType
  MatchCasing MatchCasing
  bool ReturnSpecialDirectories
Методы:
  EnumerationOptions get_Compatible()
  EnumerationOptions get_CompatibleRecursive()
  EnumerationOptions get_Default()
  void .ctor()
  EnumerationOptions FromSearchOption(SearchOption searchOption)
  bool get_RecurseSubdirectories()
  void set_RecurseSubdirectories(bool value)
  bool get_IgnoreInaccessible()
  void set_IgnoreInaccessible(bool value)
  int get_BufferSize()
  void set_BufferSize(int value)
  FileAttributes get_AttributesToSkip()
  void set_AttributesToSkip(FileAttributes value)
  MatchType get_MatchType()
  void set_MatchType(MatchType value)
  MatchCasing get_MatchCasing()
  void set_MatchCasing(MatchCasing value)
  bool get_ReturnSpecialDirectories()
  void set_ReturnSpecialDirectories(bool value)
  void .cctor()
--------------------------------------------------
Класс: System.IO.File
Наследуется от: object
Поля:
  int MaxByteArrayLength
  Encoding s_UTF8NoBOM
  int DefaultBufferSize
Свойства:
  Encoding UTF8NoBOM
Методы:
  StreamReader OpenText(string path)
  StreamWriter CreateText(string path)
  StreamWriter AppendText(string path)
  void Copy(string sourceFileName, string destFileName)
  void Copy(string sourceFileName, string destFileName, bool overwrite)
  FileStream Create(string path)
  FileStream Create(string path, int bufferSize)
  FileStream Create(string path, int bufferSize, FileOptions options)
  void Delete(string path)
  bool Exists(string path)
  FileStream Open(string path, FileMode mode)
  FileStream Open(string path, FileMode mode, FileAccess access)
  FileStream Open(string path, FileMode mode, FileAccess access, FileShare share)
  DateTimeOffset GetUtcDateTimeOffset(DateTime dateTime)
  void SetCreationTime(string path, DateTime creationTime)
  void SetCreationTimeUtc(string path, DateTime creationTimeUtc)
  DateTime GetCreationTime(string path)
  DateTime GetCreationTimeUtc(string path)
  void SetLastAccessTime(string path, DateTime lastAccessTime)
  void SetLastAccessTimeUtc(string path, DateTime lastAccessTimeUtc)
  DateTime GetLastAccessTime(string path)
  DateTime GetLastAccessTimeUtc(string path)
  void SetLastWriteTime(string path, DateTime lastWriteTime)
  void SetLastWriteTimeUtc(string path, DateTime lastWriteTimeUtc)
  DateTime GetLastWriteTime(string path)
  DateTime GetLastWriteTimeUtc(string path)
  FileAttributes GetAttributes(string path)
  void SetAttributes(string path, FileAttributes fileAttributes)
  FileStream OpenRead(string path)
  FileStream OpenWrite(string path)
  string ReadAllText(string path)
  string ReadAllText(string path, Encoding encoding)
  string InternalReadAllText(string path, Encoding encoding)
  void WriteAllText(string path, string contents)
  void WriteAllText(string path, string contents, Encoding encoding)
  Byte[] ReadAllBytes(string path)
  Byte[] ReadAllBytesUnknownLength(FileStream fs)
  void WriteAllBytes(string path, Byte[] bytes)
  void InternalWriteAllBytes(string path, Byte[] bytes)
  String[] ReadAllLines(string path)
  String[] ReadAllLines(string path, Encoding encoding)
  String[] InternalReadAllLines(string path, Encoding encoding)
  IEnumerable`1<string> ReadLines(string path)
  IEnumerable`1<string> ReadLines(string path, Encoding encoding)
  void WriteAllLines(string path, String[] contents)
  void WriteAllLines(string path, IEnumerable`1<string> contents)
  void WriteAllLines(string path, String[] contents, Encoding encoding)
  void WriteAllLines(string path, IEnumerable`1<string> contents, Encoding encoding)
  void InternalWriteAllLines(TextWriter writer, IEnumerable`1<string> contents)
  void AppendAllText(string path, string contents)
  void AppendAllText(string path, string contents, Encoding encoding)
  void AppendAllLines(string path, IEnumerable`1<string> contents)
  void AppendAllLines(string path, IEnumerable`1<string> contents, Encoding encoding)
  void Replace(string sourceFileName, string destinationFileName, string destinationBackupFileName)
  void Replace(string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors)
  void Move(string sourceFileName, string destFileName)
  void Encrypt(string path)
  void Decrypt(string path)
  Encoding get_UTF8NoBOM()
  StreamReader AsyncStreamReader(string path, Encoding encoding)
  StreamWriter AsyncStreamWriter(string path, Encoding encoding, bool append)
  Task`1<string> ReadAllTextAsync(string path, CancellationToken cancellationToken)
  Task`1<string> ReadAllTextAsync(string path, Encoding encoding, CancellationToken cancellationToken)
  Task`1<string> InternalReadAllTextAsync(string path, Encoding encoding, CancellationToken cancellationToken)
  Task WriteAllTextAsync(string path, string contents, CancellationToken cancellationToken)
  Task WriteAllTextAsync(string path, string contents, Encoding encoding, CancellationToken cancellationToken)
  Task`1<Byte[]> ReadAllBytesAsync(string path, CancellationToken cancellationToken)
  Task`1<Byte[]> InternalReadAllBytesAsync(FileStream fs, int count, CancellationToken cancellationToken)
  Task`1<Byte[]> InternalReadAllBytesUnknownLengthAsync(FileStream fs, CancellationToken cancellationToken)
  Task WriteAllBytesAsync(string path, Byte[] bytes, CancellationToken cancellationToken)
  Task InternalWriteAllBytesAsync(string path, Byte[] bytes, CancellationToken cancellationToken)
  Task`1<String[]> ReadAllLinesAsync(string path, CancellationToken cancellationToken)
  Task`1<String[]> ReadAllLinesAsync(string path, Encoding encoding, CancellationToken cancellationToken)
  Task`1<String[]> InternalReadAllLinesAsync(string path, Encoding encoding, CancellationToken cancellationToken)
  Task WriteAllLinesAsync(string path, IEnumerable`1<string> contents, CancellationToken cancellationToken)
  Task WriteAllLinesAsync(string path, IEnumerable`1<string> contents, Encoding encoding, CancellationToken cancellationToken)
  Task InternalWriteAllLinesAsync(TextWriter writer, IEnumerable`1<string> contents, CancellationToken cancellationToken)
  Task InternalWriteAllTextAsync(StreamWriter sw, string contents, CancellationToken cancellationToken)
  Task AppendAllTextAsync(string path, string contents, CancellationToken cancellationToken)
  Task AppendAllTextAsync(string path, string contents, Encoding encoding, CancellationToken cancellationToken)
  Task AppendAllLinesAsync(string path, IEnumerable`1<string> contents, CancellationToken cancellationToken)
  Task AppendAllLinesAsync(string path, IEnumerable`1<string> contents, Encoding encoding, CancellationToken cancellationToken)
  FileStream Create(string path, int bufferSize, FileOptions options, FileSecurity fileSecurity)
  FileSecurity GetAccessControl(string path)
  FileSecurity GetAccessControl(string path, AccessControlSections includeSections)
  void SetAccessControl(string path, FileSecurity fileSecurity)
--------------------------------------------------
Класс: System.IO.FileInfo
Наследуется от: FileSystemInfo
Поля:
Свойства:
  long Length
  string DirectoryName
  DirectoryInfo Directory
  bool IsReadOnly
  string Name
Методы:
  void .ctor()
  void .ctor(string fileName)
  void .ctor(string originalPath, string fullPath, string fileName, bool isNormalized)
  long get_Length()
  string get_DirectoryName()
  DirectoryInfo get_Directory()
  bool get_IsReadOnly()
  void set_IsReadOnly(bool value)
  StreamReader OpenText()
  StreamWriter CreateText()
  StreamWriter AppendText()
  FileInfo CopyTo(string destFileName)
  FileInfo CopyTo(string destFileName, bool overwrite)
  FileStream Create()
  void Delete()
  FileStream Open(FileMode mode)
  FileStream Open(FileMode mode, FileAccess access)
  FileStream Open(FileMode mode, FileAccess access, FileShare share)
  FileStream OpenRead()
  FileStream OpenWrite()
  void MoveTo(string destFileName)
  FileInfo Replace(string destinationFileName, string destinationBackupFileName)
  FileInfo Replace(string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors)
  void Decrypt()
  void Encrypt()
  void .ctor(SerializationInfo info, StreamingContext context)
  FileSecurity GetAccessControl()
  FileSecurity GetAccessControl(AccessControlSections includeSections)
  void SetAccessControl(FileSecurity fileSecurity)
  void .ctor(string fullPath, bool ignoreThis)
  string get_Name()
--------------------------------------------------
Класс: System.IO.FileSystemInfo
Наследуется от: MarshalByRefObject
Поля:
  WIN32_FILE_ATTRIBUTE_DATA _data
  int _dataInitialized
  string FullPath
  string OriginalPath
  string _name
Свойства:
  FileAttributes Attributes
  bool ExistsCore
  DateTimeOffset CreationTimeCore
  DateTimeOffset LastAccessTimeCore
  DateTimeOffset LastWriteTimeCore
  long LengthCore
  string NormalizedPath
  string FullName
  string Extension
  string Name
  bool Exists
  DateTime CreationTime
  DateTime CreationTimeUtc
  DateTime LastAccessTime
  DateTime LastAccessTimeUtc
  DateTime LastWriteTime
  DateTime LastWriteTimeUtc
Методы:
  void .ctor()
  FileSystemInfo Create(string fullPath, FileSystemEntry& findData)
  void Invalidate()
  void Init(FILE_FULL_DIR_INFORMATION* info)
  FileAttributes get_Attributes()
  void set_Attributes(FileAttributes value)
  bool get_ExistsCore()
  DateTimeOffset get_CreationTimeCore()
  void set_CreationTimeCore(DateTimeOffset value)
  DateTimeOffset get_LastAccessTimeCore()
  void set_LastAccessTimeCore(DateTimeOffset value)
  DateTimeOffset get_LastWriteTimeCore()
  void set_LastWriteTimeCore(DateTimeOffset value)
  long get_LengthCore()
  void EnsureDataInitialized()
  void Refresh()
  string get_NormalizedPath()
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  string get_FullName()
  string get_Extension()
  string get_Name()
  bool get_Exists()
  void Delete()
  DateTime get_CreationTime()
  void set_CreationTime(DateTime value)
  DateTime get_CreationTimeUtc()
  void set_CreationTimeUtc(DateTime value)
  DateTime get_LastAccessTime()
  void set_LastAccessTime(DateTime value)
  DateTime get_LastAccessTimeUtc()
  void set_LastAccessTimeUtc(DateTime value)
  DateTime get_LastWriteTime()
  void set_LastWriteTime(DateTime value)
  DateTime get_LastWriteTimeUtc()
  void set_LastWriteTimeUtc(DateTime value)
  string ToString()
--------------------------------------------------
Класс: System.IO.Iterator`1
Наследуется от: object
Поля:
  int _threadId
  int state
  TSource current
Свойства:
  TSource Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor()
  TSource get_Current()
  Iterator`1<TSource> Clone()
  void Dispose()
  void Dispose(bool disposing)
  IEnumerator`1<TSource> GetEnumerator()
  bool MoveNext()
  object System.Collections.IEnumerator.get_Current()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.IEnumerator.Reset()
--------------------------------------------------
Класс: System.IO.MatchCasing
Наследуется от: Enum
Поля:
  int value__
  MatchCasing PlatformDefault
  MatchCasing CaseSensitive
  MatchCasing CaseInsensitive
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.MatchType
Наследуется от: Enum
Поля:
  int value__
  MatchType Simple
  MatchType Win32
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.ReadLinesIterator
Наследуется от: Iterator`1<string>
Поля:
  string _path
  Encoding _encoding
  StreamReader _reader
Свойства:
Методы:
  void .ctor(string path, Encoding encoding, StreamReader reader)
  bool MoveNext()
  Iterator`1<string> Clone()
  void Dispose(bool disposing)
  ReadLinesIterator CreateIterator(string path, Encoding encoding)
  ReadLinesIterator CreateIterator(string path, Encoding encoding, StreamReader reader)
--------------------------------------------------
Класс: System.IO.SearchOption
Наследуется от: Enum
Поля:
  int value__
  SearchOption TopDirectoryOnly
  SearchOption AllDirectories
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.SearchTarget
Наследуется от: Enum
Поля:
  int value__
  SearchTarget Files
  SearchTarget Directories
  SearchTarget Both
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.BufferedStream
Наследуется от: Stream
Поля:
  int MaxShadowBufferSize
  int DefaultBufferSize
  Stream _stream
  Byte[] _buffer
  int _bufferSize
  int _readPos
  int _readLen
  int _writePos
  Task`1<int> _lastSyncCompletedReadTask
  SemaphoreSlim _asyncActiveSemaphore
Свойства:
  Stream UnderlyingStream
  int BufferSize
  bool CanRead
  bool CanWrite
  bool CanSeek
  long Length
  long Position
Методы:
  SemaphoreSlim LazyEnsureAsyncActiveSemaphoreInitialized()
  void .ctor(Stream stream)
  void .ctor(Stream stream, int bufferSize)
  void EnsureNotClosed()
  void EnsureCanSeek()
  void EnsureCanRead()
  void EnsureCanWrite()
  void EnsureShadowBufferAllocated()
  void EnsureBufferAllocated()
  Stream get_UnderlyingStream()
  int get_BufferSize()
  bool get_CanRead()
  bool get_CanWrite()
  bool get_CanSeek()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  ValueTask DisposeAsync()
  void Dispose(bool disposing)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  Task FlushAsyncInternal(CancellationToken cancellationToken)
  void FlushRead()
  void ClearReadBufferBeforeWrite()
  void FlushWrite()
  Task FlushWriteAsync(CancellationToken cancellationToken)
  int ReadFromBuffer(Byte[] array, int offset, int count)
  int ReadFromBuffer(Span`1<byte> destination)
  int ReadFromBuffer(Byte[] array, int offset, int count, Exception& error)
  int Read(Byte[] array, int offset, int count)
  int Read(Span`1<byte> destination)
  Task`1<int> LastSyncCompletedReadTask(int val)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  ValueTask`1<int> ReadFromUnderlyingStreamAsync(Memory`1<byte> buffer, CancellationToken cancellationToken, int bytesAlreadySatisfied, Task semaphoreLockTask)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  int ReadByte()
  int ReadByteSlow()
  void WriteToBuffer(Byte[] array, Int32& offset, Int32& count)
  int WriteToBuffer(ReadOnlySpan`1<byte> buffer)
  void WriteToBuffer(Byte[] array, Int32& offset, Int32& count, Exception& error)
  void Write(Byte[] array, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  Task WriteToUnderlyingStreamAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken, Task semaphoreLockTask)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  void WriteByte(byte value)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void CopyTo(Stream destination, int bufferSize)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
  Task CopyToAsyncCore(Stream destination, int bufferSize, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.IO.FileAttributes
Наследуется от: Enum
Поля:
  int value__
  FileAttributes ReadOnly
  FileAttributes Hidden
  FileAttributes System
  FileAttributes Directory
  FileAttributes Archive
  FileAttributes Device
  FileAttributes Normal
  FileAttributes Temporary
  FileAttributes SparseFile
  FileAttributes ReparsePoint
  FileAttributes Compressed
  FileAttributes Offline
  FileAttributes NotContentIndexed
  FileAttributes Encrypted
  FileAttributes IntegrityStream
  FileAttributes NoScrubData
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Stream
Наследуется от: MarshalByRefObject
Поля:
  Stream Null
  int DefaultCopyBufferSize
  ReadWriteTask _activeReadWriteTask
  SemaphoreSlim _asyncActiveSemaphore
Свойства:
  bool CanRead
  bool CanSeek
  bool CanTimeout
  bool CanWrite
  long Length
  long Position
  int ReadTimeout
  int WriteTimeout
Методы:
  SemaphoreSlim EnsureAsyncActiveSemaphoreInitialized()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanTimeout()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  Task CopyToAsync(Stream destination)
  Task CopyToAsync(Stream destination, int bufferSize)
  Task CopyToAsync(Stream destination, CancellationToken cancellationToken)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
  Task CopyToAsyncInternal(Stream destination, int bufferSize, CancellationToken cancellationToken)
  void CopyTo(Stream destination)
  void CopyTo(Stream destination, int bufferSize)
  int GetCopyBufferSize()
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  void Flush()
  Task FlushAsync()
  Task FlushAsync(CancellationToken cancellationToken)
  WaitHandle CreateWaitHandle()
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  IAsyncResult BeginReadInternal(Byte[] buffer, int offset, int count, AsyncCallback callback, object state, bool serializeAsynchronously, bool apm)
  int EndRead(IAsyncResult asyncResult)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  Task`1<int> BeginEndReadAsync(Byte[] buffer, int offset, int count)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  IAsyncResult BeginWriteInternal(Byte[] buffer, int offset, int count, AsyncCallback callback, object state, bool serializeAsynchronously, bool apm)
  void RunReadWriteTaskWhenReady(Task asyncWaiter, ReadWriteTask readWriteTask)
  void RunReadWriteTask(ReadWriteTask readWriteTask)
  void FinishTrackingAsyncOperation()
  void EndWrite(IAsyncResult asyncResult)
  Task WriteAsync(Byte[] buffer, int offset, int count)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  Task FinishWriteAsync(Task writeTask, Byte[] localBuffer)
  Task BeginEndWriteAsync(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  int ReadByte()
  void Write(Byte[] buffer, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  void WriteByte(byte value)
  Stream Synchronized(Stream stream)
  void ObjectInvariant()
  IAsyncResult BlockingBeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int BlockingEndRead(IAsyncResult asyncResult)
  IAsyncResult BlockingBeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void BlockingEndWrite(IAsyncResult asyncResult)
  bool HasOverriddenBeginEndRead()
  bool HasOverriddenBeginEndWrite()
  ValueTask DisposeAsync()
  void .ctor()
  void .cctor()
  ValueTask`1<int> <ReadAsync>g__FinishReadAsync|44_0(Task`1<int> readTask, Byte[] localBuffer, Memory`1<byte> localDestination)
--------------------------------------------------
Класс: System.IO.__Error
Наследуется от: object
Поля:
Свойства:
Методы:
  void EndOfFile()
  void FileNotOpen()
  void StreamIsClosed()
  void MemoryStreamNotExpandable()
  void ReaderClosed()
  void ReadNotSupported()
  void SeekNotSupported()
  void WrongAsyncResult()
  void EndReadCalledTwice()
  void EndWriteCalledTwice()
  string GetDisplayablePath(string path, bool isInvalidPath)
  void WinIOError(int errorCode, string maybeFullPath)
  void WriteNotSupported()
  void WriterClosed()
--------------------------------------------------
Класс: System.IO.__HResults
Наследуется от: object
Поля:
  int COR_E_ENDOFSTREAM
  int COR_E_FILELOAD
  int COR_E_FILENOTFOUND
  int COR_E_DIRECTORYNOTFOUND
  int COR_E_PATHTOOLONG
  int COR_E_IO
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.BinaryReader
Наследуется от: object
Поля:
  int MaxCharBytesSize
  Stream m_stream
  Byte[] m_buffer
  Decoder m_decoder
  Byte[] m_charBytes
  Char[] m_singleChar
  Char[] m_charBuffer
  int m_maxCharsSize
  bool m_2BytesPerChar
  bool m_isMemoryStream
  bool m_leaveOpen
Свойства:
  Stream BaseStream
Методы:
  void .ctor(Stream input)
  void .ctor(Stream input, Encoding encoding)
  void .ctor(Stream input, Encoding encoding, bool leaveOpen)
  Stream get_BaseStream()
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  int PeekChar()
  int Read()
  bool ReadBoolean()
  byte ReadByte()
  sbyte ReadSByte()
  char ReadChar()
  short ReadInt16()
  ushort ReadUInt16()
  int ReadInt32()
  UInt32 ReadUInt32()
  long ReadInt64()
  ulong ReadUInt64()
  float ReadSingle()
  double ReadDouble()
  decimal ReadDecimal()
  string ReadString()
  int Read(Char[] buffer, int index, int count)
  int InternalReadChars(Char[] buffer, int index, int count)
  int InternalReadOneChar()
  Char[] ReadChars(int count)
  int Read(Span`1<char> buffer)
  int Read(Span`1<byte> buffer)
  int Read(Byte[] buffer, int index, int count)
  Byte[] ReadBytes(int count)
  void FillBuffer(int numBytes)
  int Read7BitEncodedInt()
--------------------------------------------------
Класс: System.IO.BinaryWriter
Наследуется от: object
Поля:
  BinaryWriter Null
  Stream OutStream
  Byte[] _buffer
  Encoding _encoding
  Encoder _encoder
  bool _leaveOpen
  Char[] _tmpOneCharBuffer
  Byte[] _largeByteBuffer
  int _maxChars
  int LargeByteBufferSize
Свойства:
  Stream BaseStream
Методы:
  void .ctor()
  void .ctor(Stream output)
  void .ctor(Stream output, Encoding encoding)
  void .ctor(Stream output, Encoding encoding, bool leaveOpen)
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  Stream get_BaseStream()
  void Flush()
  long Seek(int offset, SeekOrigin origin)
  void Write(ReadOnlySpan`1<byte> buffer)
  void Write(ReadOnlySpan`1<char> buffer)
  ValueTask DisposeAsync()
  void Write(bool value)
  void Write(byte value)
  void Write(sbyte value)
  void Write(Byte[] buffer)
  void Write(Byte[] buffer, int index, int count)
  void Write(char ch)
  void Write(Char[] chars)
  void Write(Char[] chars, int index, int count)
  void Write(double value)
  void Write(decimal value)
  void Write(short value)
  void Write(ushort value)
  void Write(int value)
  void Write(UInt32 value)
  void Write(long value)
  void Write(ulong value)
  void Write(float value)
  void Write(string value)
  void Write7BitEncodedInt(int value)
  void .cctor()
--------------------------------------------------
Класс: System.IO.StringReader
Наследуется от: TextReader
Поля:
  string _s
  int _pos
  int _length
Свойства:
Методы:
  void .ctor(string s)
  void Close()
  void Dispose(bool disposing)
  int Peek()
  int Read()
  int Read(Char[] buffer, int index, int count)
  string ReadToEnd()
  string ReadLine()
  Task`1<string> ReadLineAsync()
  Task`1<string> ReadToEndAsync()
  Task`1<int> ReadBlockAsync(Char[] buffer, int index, int count)
  Task`1<int> ReadAsync(Char[] buffer, int index, int count)
--------------------------------------------------
Класс: System.IO.StringWriter
Наследуется от: TextWriter
Поля:
  UnicodeEncoding modreq(System.Runtime.CompilerServices.IsVolatile) m_encoding
  StringBuilder _sb
  bool _isOpen
Свойства:
  Encoding Encoding
Методы:
  void .ctor()
  void .ctor(IFormatProvider formatProvider)
  void .ctor(StringBuilder sb)
  void .ctor(StringBuilder sb, IFormatProvider formatProvider)
  void Close()
  void Dispose(bool disposing)
  Encoding get_Encoding()
  StringBuilder GetStringBuilder()
  void Write(char value)
  void Write(Char[] buffer, int index, int count)
  void Write(string value)
  Task WriteAsync(char value)
  Task WriteAsync(string value)
  Task WriteAsync(Char[] buffer, int index, int count)
  Task WriteLineAsync(char value)
  Task WriteLineAsync(string value)
  Task WriteLineAsync(Char[] buffer, int index, int count)
  Task FlushAsync()
  string ToString()
--------------------------------------------------
Класс: System.IO.__ConsoleStream
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.DriveInfo
Наследуется от: object
Поля:
  string drive_format
  string path
Свойства:
  long AvailableFreeSpace
  long TotalFreeSpace
  long TotalSize
  string VolumeLabel
  string DriveFormat
  DriveType DriveType
  string Name
  DirectoryInfo RootDirectory
  bool IsReady
Методы:
  void .ctor(string path, string fstype)
  void .ctor(string driveName)
  void GetDiskFreeSpace(string path, UInt64& availableFreeSpace, UInt64& totalSize, UInt64& totalFreeSpace)
  long get_AvailableFreeSpace()
  long get_TotalFreeSpace()
  long get_TotalSize()
  string get_VolumeLabel()
  void set_VolumeLabel(string value)
  string get_DriveFormat()
  DriveType get_DriveType()
  string get_Name()
  DirectoryInfo get_RootDirectory()
  bool get_IsReady()
  DriveInfo[] GetDrives()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  string ToString()
  bool GetDiskFreeSpaceInternal(Char* pathName, int pathName_length, UInt64& freeBytesAvail, UInt64& totalNumberOfBytes, UInt64& totalNumberOfFreeBytes, MonoIOError& error)
  bool GetDiskFreeSpaceInternal(string pathName, UInt64& freeBytesAvail, UInt64& totalNumberOfBytes, UInt64& totalNumberOfFreeBytes, MonoIOError& error)
  UInt32 GetDriveTypeInternal(Char* rootPathName, int rootPathName_length)
  UInt32 GetDriveTypeInternal(string rootPathName)
  string GetDriveFormatInternal(Char* rootPathName, int rootPathName_length)
  string GetDriveFormat(string rootPathName)
--------------------------------------------------
Класс: System.IO.FileStream
Наследуется от: Stream
Поля:
  int DefaultBufferSize
  Byte[] buf_recycle
  object buf_recycle_lock
  Byte[] buf
  string name
  SafeFileHandle safeHandle
  bool isExposed
  long append_startpos
  FileAccess access
  bool owner
  bool async
  bool canseek
  bool anonymous
  bool buf_dirty
  int buf_size
  int buf_length
  int buf_offset
  long buf_start
Свойства:
  bool CanRead
  bool CanWrite
  bool CanSeek
  bool IsAsync
  string Name
  long Length
  long Position
  IntPtr Handle
  SafeFileHandle SafeFileHandle
Методы:
  void .ctor(IntPtr handle, FileAccess access)
  void .ctor(IntPtr handle, FileAccess access, bool ownsHandle)
  void .ctor(IntPtr handle, FileAccess access, bool ownsHandle, int bufferSize)
  void .ctor(IntPtr handle, FileAccess access, bool ownsHandle, int bufferSize, bool isAsync)
  void .ctor(IntPtr handle, FileAccess access, bool ownsHandle, int bufferSize, bool isAsync, bool isConsoleWrapper)
  void .ctor(string path, FileMode mode)
  void .ctor(string path, FileMode mode, FileAccess access)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, bool useAsync)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, FileOptions options)
  void .ctor(SafeFileHandle handle, FileAccess access)
  void .ctor(SafeFileHandle handle, FileAccess access, int bufferSize)
  void .ctor(SafeFileHandle handle, FileAccess access, int bufferSize, bool isAsync)
  void .ctor(string path, FileMode mode, FileSystemRights rights, FileShare share, int bufferSize, FileOptions options)
  void .ctor(string path, FileMode mode, FileSystemRights rights, FileShare share, int bufferSize, FileOptions options, FileSecurity fileSecurity)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, FileOptions options, string msgPath, bool bFromProxy, bool useLongPath, bool checkHost)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, bool isAsync, bool anonymous)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, bool anonymous, FileOptions options)
  void Init(SafeFileHandle safeHandle, FileAccess access, bool ownsHandle, int bufferSize, bool isAsync, bool isConsoleWrapper)
  bool get_CanRead()
  bool get_CanWrite()
  bool get_CanSeek()
  bool get_IsAsync()
  string get_Name()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  IntPtr get_Handle()
  SafeFileHandle get_SafeFileHandle()
  void ExposeHandle()
  int ReadByte()
  void WriteByte(byte value)
  int Read(Byte[] array, int offset, int count)
  int ReadInternal(Byte[] dest, int offset, int count)
  IAsyncResult BeginRead(Byte[] array, int offset, int numBytes, AsyncCallback userCallback, object stateObject)
  int EndRead(IAsyncResult asyncResult)
  void Write(Byte[] array, int offset, int count)
  void WriteInternal(Byte[] src, int offset, int count)
  IAsyncResult BeginWrite(Byte[] array, int offset, int numBytes, AsyncCallback userCallback, object stateObject)
  void EndWrite(IAsyncResult asyncResult)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Flush()
  void Flush(bool flushToDisk)
  void Lock(long position, long length)
  void Unlock(long position, long length)
  void Finalize()
  void Dispose(bool disposing)
  FileSecurity GetAccessControl()
  void SetAccessControl(FileSecurity fileSecurity)
  Task FlushAsync(CancellationToken cancellationToken)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  int ReadSegment(Byte[] dest, int dest_offset, int count)
  int WriteSegment(Byte[] src, int src_offset, int count)
  void FlushBuffer()
  void FlushBufferIfDirty()
  void RefillBuffer()
  int ReadData(SafeHandle safeHandle, Byte[] buf, int offset, int count)
  void InitBuffer(int size, bool isZeroSize)
  string GetSecureFileName(string filename)
  string GetSecureFileName(string filename, bool full)
  void .cctor()
--------------------------------------------------
Класс: System.IO.FileStreamAsyncResult
Наследуется от: object
Поля:
  object state
  bool completed
  bool done
  Exception exc
  ManualResetEvent wh
  AsyncCallback cb
  bool completedSynch
  Byte[] Buffer
  int Offset
  int Count
  int OriginalCount
  int BytesRead
  AsyncCallback realcb
Свойства:
  object AsyncState
  bool CompletedSynchronously
  WaitHandle AsyncWaitHandle
  bool IsCompleted
  Exception Exception
  bool Done
Методы:
  void .ctor(AsyncCallback cb, object state)
  void CBWrapper(IAsyncResult ares)
  void SetComplete(Exception e)
  void SetComplete(Exception e, int nbytes)
  void SetComplete(Exception e, int nbytes, bool synch)
  object get_AsyncState()
  bool get_CompletedSynchronously()
  WaitHandle get_AsyncWaitHandle()
  bool get_IsCompleted()
  Exception get_Exception()
  bool get_Done()
  void set_Done(bool value)
--------------------------------------------------
Класс: System.IO.HGlobalUnmanagedMemoryStream
Наследуется от: UnmanagedMemoryStream
Поля:
  IntPtr ptr
Свойства:
Методы:
  void .ctor(Byte* pointer, long length, IntPtr ptr)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.IO.MonoFileType
Наследуется от: Enum
Поля:
  int value__
  MonoFileType Unknown
  MonoFileType Disk
  MonoFileType Char
  MonoFileType Pipe
  MonoFileType Remote
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.MonoIO
Наследуется от: object
Поля:
  int FileAlreadyExistsHResult
  FileAttributes InvalidFileAttributes
  IntPtr InvalidHandle
  bool dump_handles
Свойства:
  IntPtr ConsoleOutput
  IntPtr ConsoleInput
  IntPtr ConsoleError
  char VolumeSeparatorChar
  char DirectorySeparatorChar
  char AltDirectorySeparatorChar
  char PathSeparator
Методы:
  Exception GetException(MonoIOError error)
  Exception GetException(string path, MonoIOError error)
  bool CreateDirectory(Char* path, MonoIOError& error)
  bool CreateDirectory(string path, MonoIOError& error)
  bool RemoveDirectory(Char* path, MonoIOError& error)
  bool RemoveDirectory(string path, MonoIOError& error)
  string GetCurrentDirectory(MonoIOError& error)
  bool SetCurrentDirectory(Char* path, MonoIOError& error)
  bool SetCurrentDirectory(string path, MonoIOError& error)
  bool MoveFile(Char* path, Char* dest, MonoIOError& error)
  bool MoveFile(string path, string dest, MonoIOError& error)
  bool CopyFile(Char* path, Char* dest, bool overwrite, MonoIOError& error)
  bool CopyFile(string path, string dest, bool overwrite, MonoIOError& error)
  bool DeleteFile(Char* path, MonoIOError& error)
  bool DeleteFile(string path, MonoIOError& error)
  bool ReplaceFile(Char* sourceFileName, Char* destinationFileName, Char* destinationBackupFileName, bool ignoreMetadataErrors, MonoIOError& error)
  bool ReplaceFile(string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors, MonoIOError& error)
  FileAttributes GetFileAttributes(Char* path, MonoIOError& error)
  FileAttributes GetFileAttributes(string path, MonoIOError& error)
  bool SetFileAttributes(Char* path, FileAttributes attrs, MonoIOError& error)
  bool SetFileAttributes(string path, FileAttributes attrs, MonoIOError& error)
  MonoFileType GetFileType(IntPtr handle, MonoIOError& error)
  MonoFileType GetFileType(SafeHandle safeHandle, MonoIOError& error)
  IntPtr FindFirstFile(Char* pathWithPattern, String& fileName, Int32& fileAttr, Int32& error)
  IntPtr FindFirstFile(string pathWithPattern, String& fileName, Int32& fileAttr, Int32& error)
  bool FindNextFile(IntPtr hnd, String& fileName, Int32& fileAttr, Int32& error)
  bool FindCloseFile(IntPtr hnd)
  bool Exists(string path, MonoIOError& error)
  bool ExistsFile(string path, MonoIOError& error)
  bool ExistsDirectory(string path, MonoIOError& error)
  bool ExistsSymlink(string path, MonoIOError& error)
  bool GetFileStat(Char* path, MonoIOStat& stat, MonoIOError& error)
  bool GetFileStat(string path, MonoIOStat& stat, MonoIOError& error)
  IntPtr Open(Char* filename, FileMode mode, FileAccess access, FileShare share, FileOptions options, MonoIOError& error)
  IntPtr Open(string filename, FileMode mode, FileAccess access, FileShare share, FileOptions options, MonoIOError& error)
  bool Cancel_internal(IntPtr handle, MonoIOError& error)
  bool Cancel(SafeHandle safeHandle, MonoIOError& error)
  bool Close(IntPtr handle, MonoIOError& error)
  int Read(IntPtr handle, Byte[] dest, int dest_offset, int count, MonoIOError& error)
  int Read(SafeHandle safeHandle, Byte[] dest, int dest_offset, int count, MonoIOError& error)
  int Write(IntPtr handle, Byte[] src, int src_offset, int count, MonoIOError& error)
  int Write(SafeHandle safeHandle, Byte[] src, int src_offset, int count, MonoIOError& error)
  long Seek(IntPtr handle, long offset, SeekOrigin origin, MonoIOError& error)
  long Seek(SafeHandle safeHandle, long offset, SeekOrigin origin, MonoIOError& error)
  bool Flush(IntPtr handle, MonoIOError& error)
  bool Flush(SafeHandle safeHandle, MonoIOError& error)
  long GetLength(IntPtr handle, MonoIOError& error)
  long GetLength(SafeHandle safeHandle, MonoIOError& error)
  bool SetLength(IntPtr handle, long length, MonoIOError& error)
  bool SetLength(SafeHandle safeHandle, long length, MonoIOError& error)
  bool SetFileTime(IntPtr handle, long creation_time, long last_access_time, long last_write_time, MonoIOError& error)
  bool SetFileTime(SafeHandle safeHandle, long creation_time, long last_access_time, long last_write_time, MonoIOError& error)
  bool SetFileTime(string path, long creation_time, long last_access_time, long last_write_time, MonoIOError& error)
  bool SetCreationTime(string path, DateTime dateTime, MonoIOError& error)
  bool SetLastAccessTime(string path, DateTime dateTime, MonoIOError& error)
  bool SetLastWriteTime(string path, DateTime dateTime, MonoIOError& error)
  bool SetFileTime(string path, int type, long creation_time, long last_access_time, long last_write_time, DateTime dateTime, MonoIOError& error)
  void Lock(IntPtr handle, long position, long length, MonoIOError& error)
  void Lock(SafeHandle safeHandle, long position, long length, MonoIOError& error)
  void Unlock(IntPtr handle, long position, long length, MonoIOError& error)
  void Unlock(SafeHandle safeHandle, long position, long length, MonoIOError& error)
  IntPtr get_ConsoleOutput()
  IntPtr get_ConsoleInput()
  IntPtr get_ConsoleError()
  bool CreatePipe(IntPtr& read_handle, IntPtr& write_handle, MonoIOError& error)
  bool DuplicateHandle(IntPtr source_process_handle, IntPtr source_handle, IntPtr target_process_handle, IntPtr& target_handle, int access, int inherit, int options, MonoIOError& error)
  char get_VolumeSeparatorChar()
  char get_DirectorySeparatorChar()
  char get_AltDirectorySeparatorChar()
  char get_PathSeparator()
  void DumpHandles()
  bool RemapPath(string path, String& newPath)
  void .cctor()
--------------------------------------------------
Класс: System.IO.MonoIOError
Наследуется от: Enum
Поля:
  int value__
  MonoIOError ERROR_SUCCESS
  MonoIOError ERROR_FILE_NOT_FOUND
  MonoIOError ERROR_PATH_NOT_FOUND
  MonoIOError ERROR_TOO_MANY_OPEN_FILES
  MonoIOError ERROR_ACCESS_DENIED
  MonoIOError ERROR_INVALID_HANDLE
  MonoIOError ERROR_INVALID_DRIVE
  MonoIOError ERROR_NOT_SAME_DEVICE
  MonoIOError ERROR_NO_MORE_FILES
  MonoIOError ERROR_NOT_READY
  MonoIOError ERROR_WRITE_FAULT
  MonoIOError ERROR_READ_FAULT
  MonoIOError ERROR_GEN_FAILURE
  MonoIOError ERROR_SHARING_VIOLATION
  MonoIOError ERROR_LOCK_VIOLATION
  MonoIOError ERROR_HANDLE_DISK_FULL
  MonoIOError ERROR_NOT_SUPPORTED
  MonoIOError ERROR_FILE_EXISTS
  MonoIOError ERROR_CANNOT_MAKE
  MonoIOError ERROR_INVALID_PARAMETER
  MonoIOError ERROR_BROKEN_PIPE
  MonoIOError ERROR_INVALID_NAME
  MonoIOError ERROR_DIR_NOT_EMPTY
  MonoIOError ERROR_ALREADY_EXISTS
  MonoIOError ERROR_FILENAME_EXCED_RANGE
  MonoIOError ERROR_DIRECTORY
  MonoIOError ERROR_ENCRYPTION_FAILED
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.MonoIOStat
Наследуется от: ValueType
Поля:
  FileAttributes fileAttributes
  long Length
  long CreationTime
  long LastAccessTime
  long LastWriteTime
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Path
Наследуется от: object
Поля:
  Char[] InvalidPathChars
  char AltDirectorySeparatorChar
  char DirectorySeparatorChar
  char PathSeparator
  string DirectorySeparatorStr
  char VolumeSeparatorChar
  Char[] PathSeparatorChars
  bool dirEqualsVolume
  int MAX_PATH
  Char[] trimEndCharsWindows
  Char[] trimEndCharsUnix
Свойства:
  string DirectorySeparatorCharAsString
  Char[] TrimEndChars
  StringComparison StringComparison
  bool IsCaseSensitive
  bool IsWindows
Методы:
  string ChangeExtension(string path, string extension)
  string Combine(string path1, string path2)
  string CleanPath(string s)
  string GetDirectoryName(string path)
  ReadOnlySpan`1<char> GetDirectoryName(ReadOnlySpan`1<char> path)
  string GetExtension(string path)
  string GetFileName(string path)
  string GetFileNameWithoutExtension(string path)
  string GetFullPath(string path)
  string GetFullPathInternal(string path)
  int GetFullPathName(string path, int numBufferChars, StringBuilder buffer, IntPtr& lpFilePartOrNull)
  string GetFullPathName(string path)
  string WindowsDriveAdjustment(string path)
  string InsecureGetFullPath(string path)
  bool IsDirectorySeparator(char c)
  string GetPathRoot(string path)
  string GetTempFileName()
  string GetTempPath()
  string get_temp_path()
  bool HasExtension(string path)
  bool IsPathRooted(ReadOnlySpan`1<char> path)
  bool IsPathRooted(string path)
  Char[] GetInvalidFileNameChars()
  Char[] GetInvalidPathChars()
  string GetRandomFileName()
  int findExtension(string path)
  void .cctor()
  string GetServerAndShare(string path)
  bool SameRoot(string root, string path)
  string CanonicalizePath(string path)
  bool IsPathSubsetOf(string subset, string path)
  string Combine(String[] paths)
  string Combine(string path1, string path2, string path3)
  string Combine(string path1, string path2, string path3, string path4)
  void Validate(string path)
  void Validate(string path, string parameterName)
  string get_DirectorySeparatorCharAsString()
  Char[] get_TrimEndChars()
  void CheckSearchPattern(string searchPattern)
  void CheckInvalidPathChars(string path, bool checkAdditional)
  string InternalCombine(string path1, string path2)
  ReadOnlySpan`1<char> GetFileName(ReadOnlySpan`1<char> path)
  string Join(ReadOnlySpan`1<char> path1, ReadOnlySpan`1<char> path2)
  string Join(ReadOnlySpan`1<char> path1, ReadOnlySpan`1<char> path2, ReadOnlySpan`1<char> path3)
  bool TryJoin(ReadOnlySpan`1<char> path1, ReadOnlySpan`1<char> path2, Span`1<char> destination, Int32& charsWritten)
  bool TryJoin(ReadOnlySpan`1<char> path1, ReadOnlySpan`1<char> path2, ReadOnlySpan`1<char> path3, Span`1<char> destination, Int32& charsWritten)
  string JoinInternal(ReadOnlySpan`1<char> first, ReadOnlySpan`1<char> second)
  string JoinInternal(ReadOnlySpan`1<char> first, ReadOnlySpan`1<char> second, ReadOnlySpan`1<char> third)
  string JoinInternal(ReadOnlySpan`1<char> first, ReadOnlySpan`1<char> second, ReadOnlySpan`1<char> third, ReadOnlySpan`1<char> fourth)
  ReadOnlySpan`1<char> GetExtension(ReadOnlySpan`1<char> path)
  ReadOnlySpan`1<char> GetFileNameWithoutExtension(ReadOnlySpan`1<char> path)
  ReadOnlySpan`1<char> GetPathRoot(ReadOnlySpan`1<char> path)
  bool HasExtension(ReadOnlySpan`1<char> path)
  string GetRelativePath(string relativeTo, string path)
  string GetRelativePath(string relativeTo, string path, StringComparison comparisonType)
  StringComparison get_StringComparison()
  bool get_IsCaseSensitive()
  bool get_IsWindows()
  bool IsPathFullyQualified(string path)
  bool IsPathFullyQualified(ReadOnlySpan`1<char> path)
  string GetFullPath(string path, string basePath)
  string CombineInternal(string first, string second)
--------------------------------------------------
Класс: System.IO.SearchPattern
Наследуется от: object
Поля:
  Char[] WildcardChars
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.IO.UnexceptionalStreamReader
Наследуется от: StreamReader
Поля:
  Boolean[] newline
  char newlineChar
Свойства:
Методы:
  void .cctor()
  void .ctor(Stream stream, Encoding encoding)
  int Peek()
  int Read()
  int Read(Char[] dest_buffer, int index, int count)
  bool CheckEOL(char current)
  string ReadLine()
  string ReadToEnd()
--------------------------------------------------
Класс: System.IO.UnexceptionalStreamWriter
Наследуется от: StreamWriter
Поля:
Свойства:
Методы:
  void .ctor(Stream stream, Encoding encoding)
  void Flush()
  void Write(Char[] buffer, int index, int count)
  void Write(char value)
  void Write(Char[] value)
  void Write(string value)
--------------------------------------------------
Класс: System.IO.CStreamReader
Наследуется от: StreamReader
Поля:
  TermInfoDriver driver
Свойства:
Методы:
  void .ctor(Stream stream, Encoding encoding)
  int Peek()
  int Read()
  int Read(Char[] dest, int index, int count)
  string ReadLine()
  string ReadToEnd()
--------------------------------------------------
Класс: System.IO.CStreamWriter
Наследуется от: StreamWriter
Поля:
  TermInfoDriver driver
Свойства:
Методы:
  void .ctor(Stream stream, Encoding encoding, bool leaveOpen)
  void Write(Char[] buffer, int index, int count)
  void Write(char val)
  void InternalWriteString(string val)
  void InternalWriteChar(char val)
  void InternalWriteChars(Char[] buffer, int n)
  void Write(Char[] val)
  void Write(string val)
  void WriteLine(string val)
--------------------------------------------------
Класс: System.IO.MonoLinqHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  T[] ToArray(IEnumerable`1<T> source)
--------------------------------------------------
Класс: System.IO.IsolatedStorage.INormalizeForIsolatedStorage
Поля:
Свойства:
Методы:
  object Normalize()
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageScope
Наследуется от: Enum
Поля:
  int value__
  IsolatedStorageScope None
  IsolatedStorageScope User
  IsolatedStorageScope Domain
  IsolatedStorageScope Assembly
  IsolatedStorageScope Roaming
  IsolatedStorageScope Machine
  IsolatedStorageScope Application
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorage
Наследуется от: MarshalByRefObject
Поля:
  IsolatedStorageScope storage_scope
  object _assemblyIdentity
  object _domainIdentity
  object _applicationIdentity
Свойства:
  object ApplicationIdentity
  object AssemblyIdentity
  ulong CurrentSize
  object DomainIdentity
  ulong MaximumSize
  IsolatedStorageScope Scope
  long AvailableFreeSpace
  long Quota
  long UsedSize
  char SeparatorExternal
  char SeparatorInternal
Методы:
  void .ctor()
  object get_ApplicationIdentity()
  object get_AssemblyIdentity()
  ulong get_CurrentSize()
  object get_DomainIdentity()
  ulong get_MaximumSize()
  IsolatedStorageScope get_Scope()
  long get_AvailableFreeSpace()
  long get_Quota()
  long get_UsedSize()
  char get_SeparatorExternal()
  char get_SeparatorInternal()
  IsolatedStoragePermission GetPermission(PermissionSet ps)
  void InitStore(IsolatedStorageScope scope, Type domainEvidenceType, Type assemblyEvidenceType)
  void InitStore(IsolatedStorageScope scope, Type appEvidenceType)
  void Remove()
  bool IncreaseQuotaTo(long newQuotaSize)
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageFile
Наследуется от: IsolatedStorage
Поля:
  bool _resolved
  ulong _maxSize
  Evidence _fullEvidences
  Mutex mutex
  bool closed
  bool disposed
  DirectoryInfo directory
Свойства:
  ulong CurrentSize
  ulong MaximumSize
  string Root
  long AvailableFreeSpace
  long Quota
  long UsedSize
  bool IsEnabled
  bool IsClosed
  bool IsDisposed
Методы:
  IEnumerator GetEnumerator(IsolatedStorageScope scope)
  IsolatedStorageFile GetStore(IsolatedStorageScope scope, Evidence domainEvidence, Type domainEvidenceType, Evidence assemblyEvidence, Type assemblyEvidenceType)
  IsolatedStorageFile GetStore(IsolatedStorageScope scope, object domainIdentity, object assemblyIdentity)
  IsolatedStorageFile GetStore(IsolatedStorageScope scope, Type domainEvidenceType, Type assemblyEvidenceType)
  IsolatedStorageFile GetStore(IsolatedStorageScope scope, object applicationIdentity)
  IsolatedStorageFile GetStore(IsolatedStorageScope scope, Type applicationEvidenceType)
  IsolatedStorageFile GetMachineStoreForApplication()
  IsolatedStorageFile GetMachineStoreForAssembly()
  IsolatedStorageFile GetMachineStoreForDomain()
  IsolatedStorageFile GetUserStoreForApplication()
  IsolatedStorageFile GetUserStoreForAssembly()
  IsolatedStorageFile GetUserStoreForDomain()
  IsolatedStorageFile GetUserStoreForSite()
  void Remove(IsolatedStorageScope scope)
  string GetIsolatedStorageRoot(IsolatedStorageScope scope)
  void Demand(IsolatedStorageScope scope)
  IsolatedStorageContainment ScopeToContainment(IsolatedStorageScope scope)
  ulong GetDirectorySize(DirectoryInfo di)
  void .ctor(IsolatedStorageScope scope)
  void .ctor(IsolatedStorageScope scope, string location)
  void Finalize()
  void PostInit()
  ulong get_CurrentSize()
  ulong get_MaximumSize()
  string get_Root()
  long get_AvailableFreeSpace()
  long get_Quota()
  long get_UsedSize()
  bool get_IsEnabled()
  bool get_IsClosed()
  bool get_IsDisposed()
  void Close()
  void CreateDirectory(string dir)
  void CopyFile(string sourceFileName, string destinationFileName)
  void CopyFile(string sourceFileName, string destinationFileName, bool overwrite)
  IsolatedStorageFileStream CreateFile(string path)
  void DeleteDirectory(string dir)
  void DeleteFile(string file)
  void Dispose()
  bool DirectoryExists(string path)
  bool FileExists(string path)
  DateTimeOffset GetCreationTime(string path)
  DateTimeOffset GetLastAccessTime(string path)
  DateTimeOffset GetLastWriteTime(string path)
  String[] GetDirectoryNames(string searchPattern)
  String[] GetDirectoryNames()
  String[] GetNames(FileSystemInfo[] afsi)
  String[] GetFileNames(string searchPattern)
  String[] GetFileNames()
  bool IncreaseQuotaTo(long newQuotaSize)
  void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName)
  void MoveFile(string sourceFileName, string destinationFileName)
  IsolatedStorageFileStream OpenFile(string path, FileMode mode)
  IsolatedStorageFileStream OpenFile(string path, FileMode mode, FileAccess access)
  IsolatedStorageFileStream OpenFile(string path, FileMode mode, FileAccess access, FileShare share)
  void Remove()
  IsolatedStoragePermission GetPermission(PermissionSet ps)
  void CheckOpen()
  void CheckOpen(bool checkDirExists)
  bool IsPathInStorage(string path)
  string GetNameFromIdentity(object identity)
  object GetTypeFromEvidence(Evidence e, Type t)
  object GetAssemblyIdentityFromEvidence(Evidence e)
  object GetDomainIdentityFromEvidence(Evidence e)
  void SaveIdentities(string root)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageFileEnumerator
Наследуется от: object
Поля:
  IsolatedStorageScope _scope
  String[] _storages
  int _pos
Свойства:
  object Current
Методы:
  void .ctor(IsolatedStorageScope scope, string root)
  object get_Current()
  bool MoveNext()
  void Reset()
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageFileStream
Наследуется от: FileStream
Поля:
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  SafeFileHandle SafeFileHandle
  IntPtr Handle
  bool IsAsync
  long Length
  long Position
Методы:
  string CreateIsolatedPath(IsolatedStorageFile isf, string path, FileMode mode)
  void .ctor(string path, FileMode mode)
  void .ctor(string path, FileMode mode, FileAccess access)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, int bufferSize, IsolatedStorageFile isf)
  void .ctor(string path, FileMode mode, FileAccess access, FileShare share, IsolatedStorageFile isf)
  void .ctor(string path, FileMode mode, FileAccess access, IsolatedStorageFile isf)
  void .ctor(string path, FileMode mode, IsolatedStorageFile isf)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  SafeFileHandle get_SafeFileHandle()
  IntPtr get_Handle()
  bool get_IsAsync()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject)
  int EndRead(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  void Flush(bool flushToDisk)
  int Read(Byte[] buffer, int offset, int count)
  int ReadByte()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void WriteByte(byte value)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageSecurityOptions
Наследуется от: Enum
Поля:
  int value__
  IsolatedStorageSecurityOptions IncreaseQuotaForApplication
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.IsolatedStorage.IsolatedStorageSecurityState
Наследуется от: SecurityState
Поля:
Свойства:
  IsolatedStorageSecurityOptions Options
  long Quota
  long UsedSize
Методы:
  void .ctor()
  IsolatedStorageSecurityOptions get_Options()
  long get_Quota()
  void set_Quota(long value)
  long get_UsedSize()
  void EnsureState()
--------------------------------------------------
Класс: System.IO.Enumeration.FileSystemEntry
Наследуется от: ValueType
Поля:
  FILE_FULL_DIR_INFORMATION* _info
  ReadOnlySpan`1<char> <Directory>k__BackingField
  ReadOnlySpan`1<char> <RootDirectory>k__BackingField
  ReadOnlySpan`1<char> <OriginalRootDirectory>k__BackingField
Свойства:
  ReadOnlySpan`1<char> Directory
  ReadOnlySpan`1<char> RootDirectory
  ReadOnlySpan`1<char> OriginalRootDirectory
  ReadOnlySpan`1<char> FileName
  FileAttributes Attributes
  long Length
  DateTimeOffset CreationTimeUtc
  DateTimeOffset LastAccessTimeUtc
  DateTimeOffset LastWriteTimeUtc
  bool IsDirectory
  bool IsHidden
Методы:
  void Initialize(FileSystemEntry& entry, FILE_FULL_DIR_INFORMATION* info, ReadOnlySpan`1<char> directory, ReadOnlySpan`1<char> rootDirectory, ReadOnlySpan`1<char> originalRootDirectory)
  ReadOnlySpan`1<char> get_Directory()
  void set_Directory(ReadOnlySpan`1<char> value)
  ReadOnlySpan`1<char> get_RootDirectory()
  void set_RootDirectory(ReadOnlySpan`1<char> value)
  ReadOnlySpan`1<char> get_OriginalRootDirectory()
  void set_OriginalRootDirectory(ReadOnlySpan`1<char> value)
  ReadOnlySpan`1<char> get_FileName()
  FileAttributes get_Attributes()
  long get_Length()
  DateTimeOffset get_CreationTimeUtc()
  DateTimeOffset get_LastAccessTimeUtc()
  DateTimeOffset get_LastWriteTimeUtc()
  bool get_IsDirectory()
  bool get_IsHidden()
  FileSystemInfo ToFileSystemInfo()
  string ToFullPath()
  string ToSpecifiedFullPath()
--------------------------------------------------
Класс: System.IO.Enumeration.FileSystemEnumerable`1
Наследуется от: object
Поля:
  DelegateEnumerator<TResult> _enumerator
  FindTransform<TResult> _transform
  EnumerationOptions _options
  string _directory
  FindPredicate<TResult> <ShouldIncludePredicate>k__BackingField
  FindPredicate<TResult> <ShouldRecursePredicate>k__BackingField
Свойства:
  FindPredicate<TResult> ShouldIncludePredicate
  FindPredicate<TResult> ShouldRecursePredicate
Методы:
  void .ctor(string directory, FindTransform<TResult> transform, EnumerationOptions options)
  FindPredicate<TResult> get_ShouldIncludePredicate()
  void set_ShouldIncludePredicate(FindPredicate<TResult> value)
  FindPredicate<TResult> get_ShouldRecursePredicate()
  void set_ShouldRecursePredicate(FindPredicate<TResult> value)
  IEnumerator`1<TResult> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.IO.Enumeration.FileSystemEnumerableFactory
Наследуется от: object
Поля:
  Char[] s_unixEscapeChars
Свойства:
Методы:
  void NormalizeInputs(String& directory, String& expression, EnumerationOptions options)
  bool MatchesPattern(string expression, ReadOnlySpan`1<char> name, EnumerationOptions options)
  IEnumerable`1<string> UserFiles(string directory, string expression, EnumerationOptions options)
  IEnumerable`1<string> UserDirectories(string directory, string expression, EnumerationOptions options)
  IEnumerable`1<string> UserEntries(string directory, string expression, EnumerationOptions options)
  IEnumerable`1<FileInfo> FileInfos(string directory, string expression, EnumerationOptions options)
  IEnumerable`1<DirectoryInfo> DirectoryInfos(string directory, string expression, EnumerationOptions options)
  IEnumerable`1<FileSystemInfo> FileSystemInfos(string directory, string expression, EnumerationOptions options)
  void .cctor()
--------------------------------------------------
Класс: System.IO.Enumeration.FileSystemEnumerator`1
Наследуется от: CriticalFinalizerObject
Поля:
  int StandardBufferSize
  int MinimumBufferSize
  string _originalRootDirectory
  string _rootDirectory
  EnumerationOptions _options
  object _lock
  FILE_FULL_DIR_INFORMATION* _entry
  TResult _current
  IntPtr _buffer
  int _bufferLength
  IntPtr _directoryHandle
  string _currentPath
  bool _lastEntryFound
  Queue`1<ValueTuple`2<IntPtr, string>> _pending
Свойства:
  TResult Current
  object System.Collections.IEnumerator.Current
Методы:
  bool GetData()
  IntPtr CreateRelativeDirectoryHandle(ReadOnlySpan`1<char> relativePath, string fullPath)
  void .ctor(string directory, EnumerationOptions options)
  void CloseDirectoryHandle()
  IntPtr CreateDirectoryHandle(string path, bool ignoreNotFound)
  bool ContinueOnDirectoryError(int error, bool ignoreNotFound)
  bool MoveNext()
  void FindNextEntry()
  bool DequeueNextDirectory()
  void InternalDispose(bool disposing)
  bool ShouldIncludeEntry(FileSystemEntry& entry)
  bool ShouldRecurseIntoEntry(FileSystemEntry& entry)
  TResult TransformEntry(FileSystemEntry& entry)
  void OnDirectoryFinished(ReadOnlySpan`1<char> directory)
  bool ContinueOnError(int error)
  TResult get_Current()
  object System.Collections.IEnumerator.get_Current()
  void DirectoryFinished()
  void Reset()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
--------------------------------------------------
Класс: System.IO.Enumeration.FileSystemName
Наследуется от: object
Поля:
  Char[] s_wildcardChars
  Char[] s_simpleWildcardChars
Свойства:
Методы:
  string TranslateWin32Expression(string expression)
  bool MatchesWin32Expression(ReadOnlySpan`1<char> expression, ReadOnlySpan`1<char> name, bool ignoreCase)
  bool MatchesSimpleExpression(ReadOnlySpan`1<char> expression, ReadOnlySpan`1<char> name, bool ignoreCase)
  bool MatchPattern(ReadOnlySpan`1<char> expression, ReadOnlySpan`1<char> name, bool ignoreCase, bool useExtendedWildcards)
  void .cctor()
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=64 001D686DB504E20C792EAA07FE09224A45FF328E24A80072D04D16ABC5C2B5D2
  __StaticArrayInitTypeSize=170 021022D5891F99B3B525763EB77BAEC69B107268F560721F5060FCDBD4D5AAE8
  __StaticArrayInitTypeSize=12 042957A0DB5FF2D38A343AC5AE5F8635B88F10C32EB87A238B1DFB4756468476
  __StaticArrayInitTypeSize=6 04CBDC2EAF71D446E4532AED49CADE7745E22F40D3BD00A8848F7E6ED78FAA91
  __StaticArrayInitTypeSize=392 06B65E85E7DE323D68D88C332DBDA9DB89C27652506CE5B4EA2C86A5BBBEABE9
  __StaticArrayInitTypeSize=56 07FA6E88C946B2528C09C16C2FB8E9CDA49AFFAFC601774C437FD9F2DF3ECE01
  __StaticArrayInitTypeSize=84 0C496C9AE05419BD25256D0EF4F31AFD291119F14B8BD683BF1774F91E08659D
  __StaticArrayInitTypeSize=72 0E499E7743BCDFF289B85890E4DFDD635594DB16246DC094C3C19556B6C1262C
  __StaticArrayInitTypeSize=12 0F9E3C7E66CDEF5C44FA29E65CA676C480F7A2A4A067F70107FDC292C68D38B0
  __StaticArrayInitTypeSize=76 1199C3B39A2FA058EFF5B3829616AE81EE2B59A51D89C107A5FA4B6FEF95DD16
  __StaticArrayInitTypeSize=640 125CF2084D7EEC18DC9795BE4BAA221655C0EABAB89E90A74FB0370378A60293
  __StaticArrayInitTypeSize=2100 12D518BA10F3DD1A331E65FBD4C330930C0A0BD9F50F37BE0BDF596E964B9A78
  __StaticArrayInitTypeSize=24 1537CF074FEBB1EDD62F5C35E2A77A575ED00CD6C5D8F479EFA4302E2F757688
  __StaticArrayInitTypeSize=128 195ABC1ABB69B6BD65F20ACAFA79EED2D330BF513E25C830F24B8A78D8703446
  __StaticArrayInitTypeSize=10 1A07BC77B9912D8D87E9B28E0167F53A9B09BB017B35A35F3913989C9440A60B
  __StaticArrayInitTypeSize=330 1A52279427700E21F7E68A077A8F17857A850718317B7228442260DBA2AF68F0
  __StaticArrayInitTypeSize=1450 1B9CC34A0CF8DBCC350E200673FAC4124DDAD581F1FC2C16FF9A1C0154691687
  __StaticArrayInitTypeSize=360 1C4B3A80ED7AEC83916479BCE280E1258D5785D07F0EA22A5E27592ACCAE692B
  __StaticArrayInitTypeSize=24 1E398465A9EE43BEF177E8E00D8C5348363E726339A46C767812C81310C00CB2
  __StaticArrayInitTypeSize=42 1F38DEB3F70291588D06D3830D0D4241CE0570C9F4EE8B00F606C4753EB016E2
  __StaticArrayInitTypeSize=28 20CD2802EDA4ADAD1D749ABFE753256D8754EB845C973830A5556ECCAF1ADD6E
  __StaticArrayInitTypeSize=256 21244F82B210125632917591768F6BF22EB6861F80C6C25A25BD26DFB580EA7B
  __StaticArrayInitTypeSize=10 215E3E0B11A214B3198654E87B3D953AC8FB1ABC7045AF841A7C4892624BDE49
  __StaticArrayInitTypeSize=12 2403FBEA85D0741C5727760E97EF16C9BF23294F21C0F1265A4BAF7F22202A64
  __StaticArrayInitTypeSize=16 24CB9F17C8326D8BB8EC908716519DF7F265AE825F0DD13BB04E03A90B07D90E
  __StaticArrayInitTypeSize=76 25308BAB47481701F1E861B1EA4F2409E73ABB14E9579C26DF4ABE440A0DCF0A
  __StaticArrayInitTypeSize=3132 25E3E48132FBDBE9B7C0C6C54D7C10A5DE12A105AA3E5DE2A0DC808BF245B7A5
  __StaticArrayInitTypeSize=3 2AC9A6746ACA543AF8DFF39894CFE8173AFBA21EB01C6FAE33D52947222855EF
  __StaticArrayInitTypeSize=72 2CCF4119215BDAD102DA7AD5B57E0E6CA19CC8FF5524856FC58907E824213E1F
  __StaticArrayInitTypeSize=1440 31B56A7232040CADEA08E3A0A4AE95187D35A3278C4E84C774569CB0D48BBA5E
  __StaticArrayInitTypeSize=72 3444EB31231B2CCC1B05C7A44EBD1B2A009C1D9977A99B453F52E2F81DD6C32F
  __StaticArrayInitTypeSize=5264 3C847C0018C758197C8564174888A84F5621BA50DBB59D1EBA7FF28C73D279A1
  __StaticArrayInitTypeSize=16 3D95E4501B1964D7FCE16E3F5682A038752B462357D87343880B1E819F6163FE
  __StaticArrayInitTypeSize=48 3F1431B31172B4BE5418BDA2F4063F512F2F7A7CFDCE81A60B131792B5F7F694
  __StaticArrayInitTypeSize=72 3F62692E2AD5078353EC4471A13421A61EE493294CF59DC66626A6EF9CCCD2C4
  __StaticArrayInitTypeSize=88 40EC13C575237954625B718CA2B291A90543D086FE5E3258F158FDDD3A9067CC
  __StaticArrayInitTypeSize=2224 425CE249C852AD06731DB313704890E29BD6FBF1FFB08F99948EB9ACF9053017
  __StaticArrayInitTypeSize=12 42E1421FC2A5A6A33E964D7EB9603EB101818D858DDA09B2BC9B5A888C1C351C
  __StaticArrayInitTypeSize=6 44D066BAE9848B4A4B2C31F1854666526A32D0588635569423BDA1DA303C97DF
  __StaticArrayInitTypeSize=120 4623CA5867960AA898AA1F65E720CD5ECD3552542E0C6F6FB65B21D14DD1CBC2
  __StaticArrayInitTypeSize=48 4800FBFC4566EB02D1727A4B1C949CCBC7535C216A0766564C199308631B5DD6
  __StaticArrayInitTypeSize=4096 493402F3E4397B2945B16273E795816C0BDF80F76F42FCAA75F3DF2E215ABC1B
  __StaticArrayInitTypeSize=174 494C32E1A18F6E8AD8ED5FAB0A5AF07F801BE7AF3C936942B020918CE2953046
  __StaticArrayInitTypeSize=2382 4E0B9E024FA510B6F03C92D95BB204E78CDC6E3FD2EC8D35787B7BC76F0655A0
  __StaticArrayInitTypeSize=32 501E4F476B5C5D742AB5526561490A19EF5F752BEC30E7C5B172D05897A98932
  __StaticArrayInitTypeSize=44 508085E0DDEEA9CE48BFAE98CEC779F8D06301AE973555D37680D08190CAFA70
  __StaticArrayInitTypeSize=72 510FDFA4743E58DD45DCDD7CB4F8509BF6294CC1D1D4958CA30A9E7604973006
  __StaticArrayInitTypeSize=42 5292FD0A8E62FCCBE41F34EFE7575D097990A66FE23B3507971C5BF272A4362E
  __StaticArrayInitTypeSize=20 533B8C444F951E83EFF7305E3807B66CE0005DE0A2D0A44873C130895A3BE6AA
  __StaticArrayInitTypeSize=52 543172FF9822CE5240DF89FF3AD8C7FD9824F97D0EED9B1432E60345FBBDE9A9
  __StaticArrayInitTypeSize=256 55D0BF716B334D123E0088CFB3F8E2FEA17AF5025BB527F95EEB09BA978EA329
  __StaticArrayInitTypeSize=10800 56073E3CC3FC817690CC306D0DB7EA63EBCB0801359567CA44CA3D3B9BF63854
  __StaticArrayInitTypeSize=52 5857EE4CE98BFABBD62B385C1098507DD0052FF3951043AAD6A1DABD495F18AA
  __StaticArrayInitTypeSize=32 5DF6E0E2761359D30A8275058E299FCC0381534545F55CF43E41983F5D4C9456
  __StaticArrayInitTypeSize=72 5EC4E50DA95A113769D73E5F7F8221A876185CEE6498ABB16FBB9F0563C15BBF
  __StaticArrayInitTypeSize=94 61D639BE11384EE21CDE2B40357F4F9D80A106C97C592D18A9F4CAA442CA5D31
  __StaticArrayInitTypeSize=256 62E6F13B53D67FDD780E20D89A6E8EE503B197AC16AC3F1D2571C147FDD324C9
  __StaticArrayInitTypeSize=28 64A0AD5A7BF0B569FABE66AF3006423DA81FF79CD282E8D781CD013B1FD7D5CE
  __StaticArrayInitTypeSize=2048 668BB69E184E0C32DC3BC488001C506C87EE5A95C7E7B6B87D24C3A6DC779956
  __StaticArrayInitTypeSize=48 6708B572BDBE5D5E79701DBB9744AF74B50FED7608218F2D7BF1B5D87E5A53ED
  __StaticArrayInitTypeSize=648 67856A16DB0550FDAB4D1A9B208B0C155C4679CA116BF867B74ED2A0AA4D2955
  __StaticArrayInitTypeSize=1320 692DE452EE427272A5F6154F04360D24165B56693B08F60D93127DEDC12D1DDE
  __StaticArrayInitTypeSize=82 6DABE7D1BCE5A165B668653474D7F5F3680A7FBC30EA3F3FC3FEB1790BD659B5
  __StaticArrayInitTypeSize=72 6DC92D3617F0357376502FBA4CDD465B5423818DABE8B2CA1A06E1351F2F1C85
  __StaticArrayInitTypeSize=64 70871E7CEBC5FB665C6CDA09BCB582780757E8F266C78289B5A1553B02AA3D82
  __StaticArrayInitTypeSize=212 71F7F6B226CBC11C8B26D506869FAE022928427389882579DB316F36FF34A096
  __StaticArrayInitTypeSize=48 71F993C1E0FB950AAACBC0B9A2B0975B213EF14C8AA693F413336D46E9EAB8E9
  __StaticArrayInitTypeSize=32 739592F1F51C1B5B4053CDFD26932FE506C041EC6B08A39DCE012EADDA72ADA7
  __StaticArrayInitTypeSize=2048 73F5D95C401726B2C92EC96A696BA15F0E5A5C6DD9AC6BEB3736A81772A11531
  __StaticArrayInitTypeSize=288 74BCD6ED20AF2231F2BB1CDE814C5F4FF48E54BAC46029EEF90DDF4A208E2B20
  __StaticArrayInitTypeSize=256 74EF7306E7452D6859B6463CE496B8DF30925F69E1B2969E1F3F34BBC9C6AF04
  __StaticArrayInitTypeSize=64 7543B37FA53FDE2C84F07FD39F368555966AA1C0EB2F2FD26B294D79966E290E
  __StaticArrayInitTypeSize=761 765BD07ED3CB498A599FFB48B31E077C45B4C2C37CD1547CEA27E60655CF21B6
  __StaticArrayInitTypeSize=120 78AD7906208AA1E531D0C1100062DE3D252210B1E4214061294A0BB7C94762B8
  __StaticArrayInitTypeSize=1472 7BEC6AD454781FDCD8D475B3418629CBABB3BF9CA66FA80009D608A1A60D0696
  __StaticArrayInitTypeSize=72 7F777906B0704EB248888E491577584D5BEBE71B375BD595A06444390B471915
  __StaticArrayInitTypeSize=256 801494072CDD59E61F9AA9345A80D045378705DFDCE94902C22EAEAE049BE780
  __StaticArrayInitTypeSize=28 805796429D6E812E01657F32029A8103B7C27B5203C2EFC9C0001E3EBAD7F24C
  long 819B40F8CF7DC49B4275955A17C10239F1BBBB3BF96E26E25ED844B96B645D7F
  __StaticArrayInitTypeSize=72 8259E3EBA4D41CA02AE5322BBD280034A9C9860D9CD0D2038139FC9EBE6B6C77
  long 82B100804CE219CD73E155C7C6457FCF04EA539DE5B19F4736E800098714EB21
  __StaticArrayInitTypeSize=24 83F180C4F05CDA92C6CE1FB81ECB9031C503C1906040707C412F2BC7CB609F2A
  __StaticArrayInitTypeSize=72 861FD05B0EAD3D0AA9418B140CC37846BBC5F195214D90CEF42919D1E36EED10
  __StaticArrayInitTypeSize=998 86BDA34D2165AC08F2DE4918B302E44205CDEA674FCA7F2C7F56D4F12D8B0C73
  long 8BFD94DEAAC0F168DC8B50A00AC120A113B550B68FEF344F807D503D1A6E5DED
  __StaticArrayInitTypeSize=48 8C7DD76CF6FAC1893ED057E9FC91B995F9379B69E0796CAB7DE38ADAE3D2C568
  __StaticArrayInitTypeSize=1665 8CCE27079B32C13BB310169A6AD26AE419CDC98B7E2EFD3CC9997257F4BC1DEF
  __StaticArrayInitTypeSize=5952 9086502742CE7F0595B57A4E5B32901FF4CF97959B92F7E91A435E4765AC1115
  __StaticArrayInitTypeSize=24 9287D942CCFE5B2A54D81BDDC56BD89F2DC6C4C8B31507E6284F8D25D1009367
  __StaticArrayInitTypeSize=160 933598639CBAA1DE502F80D2FD1DB78F13C8D7BB64A5FDC1BC73AC0B5CE4F5CA
  __StaticArrayInitTypeSize=336 93B42898102ACB2421875C45676880B8A07390D8DF0E1EE85C5D1AA26964B0C6
  __StaticArrayInitTypeSize=52 93F28AF88A06482BE13F8D0354B6A7676DDAED573EA3938C50F6E53E6D6BB0B6
  __StaticArrayInitTypeSize=174 95BDE712712F10D07813AE3DEEA40D1F38E3FCF1A92CC435F17A326CC22242EB
  __StaticArrayInitTypeSize=262 964889A5283FD0A3DFC8AE256721E6F67B8212FD6841AB1C821DE3134DE79B07
  __StaticArrayInitTypeSize=15 96E3FDE919EC36694EFBEC22FEF80F84EE640CC5E46CED07C3E65AC04607C7D6
  __StaticArrayInitTypeSize=36 9960C7FC60CDD325C8A2A00995BE7064EAC3F6295C6A5C4E797D2281846131E4
  __StaticArrayInitTypeSize=44 99E66DACA3EFF94776AF1258E0E5B2F4DF2900E4EA32351B0DF37A87F2426B1F
  __StaticArrayInitTypeSize=72 A252A93D042C5E2453990C2829A425C6DD749CCDCDF13DB58C11BBC78E8D3CE9
  __StaticArrayInitTypeSize=120 A2DFDF9C2CED8BB1C0B9B06064345ACC9C22DFE5FEC9976FF061F0994451519B
  __StaticArrayInitTypeSize=76 A2EC7CB9B0FE89F9A9BEA547D773225AFE6E4535DF28325A0D6CD7A5E2D20376
  __StaticArrayInitTypeSize=72 A30E1152CFB528AE968FAC58E83BBEB3611BFDE2E6CF60B4FA9535A7D0A9B8EA
  __StaticArrayInitTypeSize=40 A516EECB41051151F0183A8B0B6F6693C43F7D9E1815F85CAAAB18E00A5269A2
  __StaticArrayInitTypeSize=72 AAF4528994DD7C464F43C131F6CD44DF41ACC18462C95877252FFC7EAC0164EF
  __StaticArrayInitTypeSize=1824 AB0B9733AAEC4A2806711E41E36D3D0923BAF116156F33445DC2AA58DA5DF877
  __StaticArrayInitTypeSize=18128 AE4D29CF65CDB056FD3752F023E1C7B9E470FA189E45CAB74EB9AB81AD18BBD8
  __StaticArrayInitTypeSize=4096 B215DD70A77190680641703C6DF73729B4583E285AF8B51ACF9086655FB2D0F3
  __StaticArrayInitTypeSize=52 B21802DE889E5F4F5344C8E0D366F59B68F886F88EFE45EA5CE01534A3F5C0E5
  __StaticArrayInitTypeSize=2176 B55F94CD2F415D0279D7A1AF2265C4D9A90CE47F8C900D5D09AD088796210838
  __StaticArrayInitTypeSize=36 BABD01C34E7E65E57E4C431281E782B4101CE0644A8090AD6E501F1C6CF2C9DF
  __StaticArrayInitTypeSize=16 BB425A9B43E10C921902A25D07A4317DEFF9F606A788672E1B21633C143407F0
  __StaticArrayInitTypeSize=36 C250CAD28060A4EB63B4C4A643DDA196CCD35FD2FC67FB749ADF4BAC6D62E1A0
  __StaticArrayInitTypeSize=256 C2D8E5EED6CBEBD8625FC18F81486A7733C04F9B0129FFBE974C68B90308B4F2
  __StaticArrayInitTypeSize=72 C5733A1245383FBF067B4A9BDB41E3FB8E3A6BDEF37B3D5418F389422875783F
  __StaticArrayInitTypeSize=1024 C8EC70AC5A448C3A45CF1DFCC1375BE4E80DC6793E97D5E89BD97A0DC232B2E3
  __StaticArrayInitTypeSize=16 C95D810E738DB5F591EE691CE884EED2F110D9F82B1F7A8BE6ED257FDF4CDBEB
  __StaticArrayInitTypeSize=130 C9830DF6956357ACE51CE1F82298578B36EB45A0CFDB8AEC5B9FDA7DB17E8063
  __StaticArrayInitTypeSize=72 CAF8A46B3A07E26F84FE849B57A877051A0D06194B1C057985446B64BCC6E016
  __StaticArrayInitTypeSize=36 CAFFFC9D15E4037EE8FBDB1A45DFE456F0936BDC7310F1882EAF14B706A76658
  __StaticArrayInitTypeSize=4096 CE11D6DEAFFC6D6EF6030E30E7444C933E6261F32AA737064EF0446C219ECE22
  __StaticArrayInitTypeSize=72 D1A99909A2923269BB67E72C1AED693F74961BDA58360FCC133007740CEBF5F1
  __StaticArrayInitTypeSize=6 D3B16F8D71CB719B941527D5A1ADA7ED83F4EB967FEE117DDA2FE4021E1D283F
  __StaticArrayInitTypeSize=72 D503954AE2C3616EA32CEB0D66F5B2E119D03CE722773E5D7E1A8BC8F1803631
  __StaticArrayInitTypeSize=172 D6691EE5A533DE7E0859066942261B24D0C836D7EE016D2251377BFEE40FEA15
  __StaticArrayInitTypeSize=2048 D870074914025E855AA5985A2D6778F1E277036BF9C9F03DEC61F3C496FEC35C
  __StaticArrayInitTypeSize=12 D896D464C3726A21162F271ACB711464AD07EA9C9CE78E0297FD0DE934471FA6
  __StaticArrayInitTypeSize=72 D8A29F3D197FBB54CF9F4B105AFBA6B1257ADF6449F0184F843380AAAA24639C
  __StaticArrayInitTypeSize=72 DCDCF594464B904F763D4CE53B1DBE08A47E551AE86FD5D61F63FD0C3313FDC3
  __StaticArrayInitTypeSize=2350 DCE88EE5233B9D0FD0D7A6222C82BC3AEE83B15E9992F939B17AB40530DB555C
  __StaticArrayInitTypeSize=152 DD471F12FFA94CC557A02A91C2CBB95F551AB28C8BBF297B2F953B8886BCCF6D
  __StaticArrayInitTypeSize=72 DF29A050CD2EBD9DFDC783DB1CC74D3D716DAEC1630A337EE31B9E2E03D34D2D
  __StaticArrayInitTypeSize=4096 E148B2057CF0C1595155635E761FB66AAE634C40D8FABC4CE79A2DB8886525D4
  __StaticArrayInitTypeSize=38 E2C673A3A737B04369A63F1FB1A30F6E742B066E2CCCD9B1838793CBB5590598
  __StaticArrayInitTypeSize=12 E32C465157D21F39B3DBF186A98FB02185C63B0260B47247A7A5FDF2B061EAA8
  __StaticArrayInitTypeSize=24 E5F4F6214036DF103321A8A0CE30C2EF935694B4199D52BC538E7EF3F045CB92
  __StaticArrayInitTypeSize=64 E768EDCAE10BAB68BB5DF102FDBB8CF4F31B9D60159B44DA3F33ABC36388308B
  __StaticArrayInitTypeSize=1018 E8588351183F6F6A7DAD54DC28357628F3C4D4B358AB92A18AE7D08B0D9B0092
  __StaticArrayInitTypeSize=12 EBE07C3718876777F609CD22058F4C3A6CCCC695F5BDE90998DC1E12E0CBE63D
  __StaticArrayInitTypeSize=24 EC85ED774A75308D011FEF4A32204FB9725776189F565C95E968E241738E89D4
  __StaticArrayInitTypeSize=32 EE415D5C3ECC6C8C19F71BCD4E03847F5A15931374A7F5BF88C24B722F04B8FE
  __StaticArrayInitTypeSize=6 EE7220B15E73A8A78DAD09E95C9B9FC2A52404B7F56051A11B1B5DCFA9E22966
  __StaticArrayInitTypeSize=256 EF39C5A882F9477B2A250BA257247825CEB07FC53C3C984385F2C2E5F8222431
  __StaticArrayInitTypeSize=16 EF82B163CA8252A793A6E73F57775D843C9A21F65586926EB11893FA8BB603E9
  __StaticArrayInitTypeSize=240 F0CF66F9B123DCEBB39C38C5D8E4821D4E94DB593889C506BCA0827036F1B7EB
  __StaticArrayInitTypeSize=3 F1945CD6C19E56B3C1C78943EF5EC18116907A4CA1EFC40A57D48AB1DB7ADFC5
  __StaticArrayInitTypeSize=3200 F19B89DC2C99490D8E4D92B7FC5B5E48BB37E76012F4DA195023267C1C7FDD6A
  __StaticArrayInitTypeSize=256 F2830F044682E33B39018B5912634835B641562914E192CA66C654F5E4492FA8
  __StaticArrayInitTypeSize=94 F427E43884EE0547E625C240E1BA0A2960151D2B44C46F20B9B98FE66FB3C6F2
  __StaticArrayInitTypeSize=72 F4BD8144313C3B67E191C6F3CD8B00540FF1809837C5BCA5C2FDA0D518681563
  __StaticArrayInitTypeSize=1024 F7D2AD02ED768134B31339AB059D864789E0A60090CC368B3881EB0631BBAF93
  __StaticArrayInitTypeSize=212 F7D381AF73D85950E0B064CF1AA8F14938A1F38084B46CE36AAEFE81BEF739F3
  __StaticArrayInitTypeSize=52 FADB218011E7702BB9575D0C32A685DA10B5C72EB809BD9A955DB1C76E4D8315
  __StaticArrayInitTypeSize=1208 FB2089AF82E09593374B65EC2440779FDCF5DD6DA07D26E57AF6790667B937CD
  __StaticArrayInitTypeSize=48 FC405235E052D3DED17776A6B4C52CF9EFAE85050127AA6C45B5BA95F87ACCFD
  __StaticArrayInitTypeSize=52 FC5B0FD4492EC7BC85845E312A7A1469DF87CA5BCA5B5B9E0B3030E6E11E48E6
  __StaticArrayInitTypeSize=240 FD68700E95459C5E7A49C5830F8BD0A9BA4BD171252663D8066B09E7768C5C5D
  __StaticArrayInitTypeSize=24 FEC387BA57A54BB6066E4CA8A4F9C0FF9C36B9CBD6600C3683F6FB1BDB5077EB
Свойства:
Методы:
  UInt32 ComputeStringHash(string s)
--------------------------------------------------
Класс: System.Security.ReadOnlyPermissionSet
Наследуется от: PermissionSet
Поля:
Свойства:
Методы:
  void .ctor(SecurityElement permissionSetXml)
  IPermission AddPermissionImpl(IPermission perm)
  IEnumerator GetEnumeratorImpl()
  IPermission GetPermissionImpl(Type permClass)
  IPermission RemovePermissionImpl(Type permClass)
  IPermission SetPermissionImpl(IPermission perm)
--------------------------------------------------
Класс: System.Runtime.DesignerServices.WindowsRuntimeDesignerContext
Наследуется от: object
Поля:
Свойства:
  string Name
Методы:
  void .ctor(IEnumerable`1<string> paths, string name)
  string get_Name()
  Assembly GetAssembly(string assemblyName)
  Type GetType(string typeName)
  void InitializeSharedContext(IEnumerable`1<string> paths)
  void SetIterationContext(WindowsRuntimeDesignerContext context)
--------------------------------------------------
Класс: Unity.ThrowStub
Наследуется от: ObjectDisposedException
Поля:
Свойства:
Методы:
  void ThrowNotSupportedException()
--------------------------------------------------
