Сборка: Rust.World.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: TerrainBiome
Наследуется от: object
Поля:
  int COUNT
  int EVERYTHING
  int NOTHING
  int ARID
  int TEMPERATE
  int TUNDRA
  int ARCTIC
  int ARID_IDX
  int TEMPERATE_IDX
  int TUNDRA_IDX
  int ARCTIC_IDX
  Dictionary`2<int, int> type2index
Свойства:
Методы:
  int TypeToIndex(int id)
  int IndexToType(int idx)
  void .cctor()
--------------------------------------------------
Класс: TerrainSplat
Наследуется от: object
Поля:
  int COUNT
  int EVERYTHING
  int NOTHING
  int DIRT
  int SNOW
  int SAND
  int ROCK
  int GRASS
  int FOREST
  int STONES
  int GRAVEL
  int DIRT_IDX
  int SNOW_IDX
  int SAND_IDX
  int ROCK_IDX
  int GRASS_IDX
  int FOREST_IDX
  int STONES_IDX
  int GRAVEL_IDX
  Dictionary`2<int, int> type2index
Свойства:
Методы:
  int TypeToIndex(int id)
  int IndexToType(int idx)
  void .cctor()
--------------------------------------------------
Класс: TerrainTopology
Наследуется от: object
Поля:
  int COUNT
  int EVERYTHING
  int NOTHING
  int FIELD
  int CLIFF
  int SUMMIT
  int BEACHSIDE
  int BEACH
  int FOREST
  int FORESTSIDE
  int OCEAN
  int OCEANSIDE
  int DECOR
  int MONUMENT
  int ROAD
  int ROADSIDE
  int SWAMP
  int RIVER
  int RIVERSIDE
  int LAKE
  int LAKESIDE
  int OFFSHORE
  int RAIL
  int RAILSIDE
  int BUILDING
  int CLIFFSIDE
  int MOUNTAIN
  int CLUTTER
  int ALT
  int TIER0
  int TIER1
  int TIER2
  int MAINLAND
  int HILLTOP
  int WATER
  int WATERSIDE
  int SAND
Свойства:
Методы:
--------------------------------------------------
Класс: WorldSerialization
Наследуется от: object
Поля:
  UInt32 CurrentVersion
  UInt32 <Version>k__BackingField
  string <Checksum>k__BackingField
  WorldData world
Свойства:
  UInt32 Version
  string Checksum
Методы:
  UInt32 get_Version()
  void set_Version(UInt32 value)
  string get_Checksum()
  void set_Checksum(string value)
  void .ctor()
  MapData GetMap(string name)
  void AddMap(string name, Byte[] data)
  IEnumerable`1<PrefabData> GetPrefabs(string category)
  void AddPrefab(string category, UInt32 id, Vector3 position, Quaternion rotation, Vector3 scale)
  IEnumerable`1<PathData> GetPaths(string name)
  PathData GetPath(string name)
  void AddPath(PathData path)
  void Clear()
  void Save(string fileName)
  void Load(string fileName)
  void CalculateChecksum()
  string Hash()
  int CalculateCount()
--------------------------------------------------
