Сборка: System.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Interop
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.CFType
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr GetTypeID(IntPtr typeRef)
  void .ctor()
--------------------------------------------------
Класс: Mono.CFObject
Наследуется от: object
Поля:
  string CoreFoundationLibrary
  string SystemLibrary
  IntPtr <Handle>k__BackingField
Свойства:
  IntPtr Handle
Методы:
  IntPtr dlopen(string path, int mode)
  IntPtr dlsym(IntPtr handle, string symbol)
  void dlclose(IntPtr handle)
  IntPtr GetIndirect(IntPtr handle, string symbol)
  CFString GetStringConstant(IntPtr handle, string symbol)
  IntPtr GetIntPtr(IntPtr handle, string symbol)
  IntPtr GetCFObjectHandle(IntPtr handle, string symbol)
  void .ctor(IntPtr handle, bool own)
  void Finalize()
  IntPtr get_Handle()
  void set_Handle(IntPtr value)
  IntPtr CFRetain(IntPtr handle)
  void Retain()
  void CFRelease(IntPtr handle)
  void Release()
  void Dispose(bool disposing)
  void Dispose()
--------------------------------------------------
Класс: Mono.CFArray
Наследуется от: CFObject
Поля:
  IntPtr kCFTypeArrayCallbacks
Свойства:
  int Count
  IntPtr Item
Методы:
  void .ctor(IntPtr handle, bool own)
  IntPtr CFArrayCreate(IntPtr allocator, IntPtr values, IntPtr numValues, IntPtr callbacks)
  void .cctor()
  CFArray FromNativeObjects(INativeObject[] values)
  IntPtr Create(IntPtr[] values)
  CFArray CreateArray(IntPtr[] values)
  CFArray CreateArray(INativeObject[] values)
  IntPtr Create(INativeObject[] values)
  IntPtr CFArrayGetCount(IntPtr handle)
  int get_Count()
  IntPtr CFArrayGetValueAtIndex(IntPtr handle, IntPtr index)
  IntPtr get_Item(int index)
  T[] ArrayFromHandle(IntPtr handle, Func`2<IntPtr, T> creation)
--------------------------------------------------
Класс: Mono.CFNumber
Наследуется от: CFObject
Поля:
Свойства:
Методы:
  void .ctor(IntPtr handle, bool own)
  bool CFNumberGetValue(IntPtr handle, IntPtr type, Boolean& value)
  bool AsBool(IntPtr handle)
  bool op_Implicit(CFNumber number)
  bool CFNumberGetValue(IntPtr handle, IntPtr type, Int32& value)
  int AsInt32(IntPtr handle)
  IntPtr CFNumberCreate(IntPtr allocator, IntPtr theType, IntPtr valuePtr)
  CFNumber FromInt32(int number)
  int op_Implicit(CFNumber number)
--------------------------------------------------
Класс: Mono.CFRange
Наследуется от: ValueType
Поля:
  IntPtr Location
  IntPtr Length
Свойства:
Методы:
  void .ctor(int loc, int len)
--------------------------------------------------
Класс: Mono.CFString
Наследуется от: CFObject
Поля:
  string str
Свойства:
  int Length
Методы:
  void .ctor(IntPtr handle, bool own)
  IntPtr CFStringCreateWithCharacters(IntPtr alloc, IntPtr chars, IntPtr length)
  CFString Create(string value)
  IntPtr CFStringGetLength(IntPtr handle)
  int get_Length()
  int CFStringCompare(IntPtr theString1, IntPtr theString2, int compareOptions)
  int Compare(IntPtr string1, IntPtr string2, int compareOptions)
  IntPtr CFStringGetCharactersPtr(IntPtr handle)
  IntPtr CFStringGetCharacters(IntPtr handle, CFRange range, IntPtr buffer)
  string AsString(IntPtr handle)
  string ToString()
  string op_Implicit(CFString str)
  CFString op_Implicit(string str)
--------------------------------------------------
Класс: Mono.CFData
Наследуется от: CFObject
Поля:
Свойства:
  IntPtr Length
  IntPtr Bytes
  byte Item
Методы:
  void .ctor(IntPtr handle, bool own)
  IntPtr CFDataCreate(IntPtr allocator, IntPtr bytes, IntPtr length)
  CFData FromData(Byte[] buffer)
  CFData FromData(IntPtr buffer, IntPtr length)
  IntPtr get_Length()
  IntPtr CFDataGetLength(IntPtr theData)
  IntPtr CFDataGetBytePtr(IntPtr theData)
  IntPtr get_Bytes()
  byte get_Item(long idx)
  void set_Item(long idx, byte value)
--------------------------------------------------
Класс: Mono.CFDictionary
Наследуется от: CFObject
Поля:
  IntPtr KeyCallbacks
  IntPtr ValueCallbacks
Свойства:
  IntPtr Item
Методы:
  void .cctor()
  void .ctor(IntPtr handle, bool own)
  CFDictionary FromObjectAndKey(IntPtr obj, IntPtr key)
  CFDictionary FromKeysAndObjects(IList`1<Tuple`2<IntPtr, IntPtr>> items)
  IntPtr CFDictionaryCreate(IntPtr allocator, IntPtr[] keys, IntPtr[] vals, IntPtr len, IntPtr keyCallbacks, IntPtr valCallbacks)
  IntPtr CFDictionaryGetValue(IntPtr handle, IntPtr key)
  IntPtr CFDictionaryCreateCopy(IntPtr allocator, IntPtr handle)
  CFDictionary Copy()
  CFMutableDictionary MutableCopy()
  IntPtr CFDictionaryCreateMutableCopy(IntPtr allocator, IntPtr capacity, IntPtr theDict)
  IntPtr GetValue(IntPtr key)
  IntPtr get_Item(IntPtr key)
--------------------------------------------------
Класс: Mono.CFMutableDictionary
Наследуется от: CFDictionary
Поля:
Свойства:
Методы:
  void .ctor(IntPtr handle, bool own)
  void SetValue(IntPtr key, IntPtr val)
  CFMutableDictionary Create()
  void CFDictionarySetValue(IntPtr handle, IntPtr key, IntPtr val)
  IntPtr CFDictionaryCreateMutable(IntPtr allocator, IntPtr capacity, IntPtr keyCallback, IntPtr valueCallbacks)
--------------------------------------------------
Класс: Mono.CFBoolean
Наследуется от: object
Поля:
  IntPtr handle
  CFBoolean True
  CFBoolean False
Свойства:
  IntPtr Handle
  bool Value
Методы:
  void .cctor()
  void .ctor(IntPtr handle, bool owns)
  void Finalize()
  IntPtr get_Handle()
  void Dispose()
  void Dispose(bool disposing)
  bool op_Implicit(CFBoolean value)
  CFBoolean op_Explicit(bool value)
  CFBoolean FromBoolean(bool value)
  bool CFBooleanGetValue(IntPtr boolean)
  bool get_Value()
  bool GetValue(IntPtr boolean)
--------------------------------------------------
Класс: Mono.CFDate
Наследуется от: object
Поля:
  IntPtr handle
Свойства:
  IntPtr Handle
Методы:
  void .ctor(IntPtr handle, bool owns)
  void Finalize()
  IntPtr CFDateCreate(IntPtr allocator, double at)
  CFDate Create(DateTime date)
  IntPtr get_Handle()
  void Dispose()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: Mono.SystemCertificateProvider
Наследуется от: object
Поля:
  MonoTlsProvider provider
  int initialized
  X509PalImpl x509pal
  object syncRoot
Свойства:
  MonoTlsProvider Provider
  X509PalImpl X509Pal
Методы:
  MonoTlsProvider get_Provider()
  X509PalImpl GetX509Pal()
  void EnsureInitialized()
  X509PalImpl get_X509Pal()
  X509CertificateImpl Import(Byte[] data, CertificateImportFlags importFlags)
  X509CertificateImpl Mono.ISystemCertificateProvider.Import(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags, CertificateImportFlags importFlags)
  X509Certificate2Impl Import(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags, CertificateImportFlags importFlags)
  X509CertificateImpl Mono.ISystemCertificateProvider.Import(X509Certificate cert, CertificateImportFlags importFlags)
  X509Certificate2Impl Import(X509Certificate cert, CertificateImportFlags importFlags)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.SystemDependencyProvider
Наследуется от: object
Поля:
  SystemDependencyProvider instance
  object syncRoot
  SystemCertificateProvider <CertificateProvider>k__BackingField
Свойства:
  SystemDependencyProvider Instance
  ISystemCertificateProvider Mono.ISystemDependencyProvider.CertificateProvider
  SystemCertificateProvider CertificateProvider
  X509PalImpl X509Pal
Методы:
  SystemDependencyProvider get_Instance()
  void Initialize()
  ISystemCertificateProvider Mono.ISystemDependencyProvider.get_CertificateProvider()
  SystemCertificateProvider get_CertificateProvider()
  X509PalImpl get_X509Pal()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.X509Pal
Наследуется от: object
Поля:
Свойства:
  X509PalImpl Instance
Методы:
  X509PalImpl get_Instance()
--------------------------------------------------
Класс: Mono.X509PalImplMono
Наследуется от: X509PalImpl
Поля:
Свойства:
Методы:
  X509CertificateImpl Import(Byte[] data)
  X509Certificate2Impl Import(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  X509Certificate2Impl Import(X509Certificate cert)
  void .ctor()
--------------------------------------------------
Класс: Mono.X509PalImpl
Наследуется от: object
Поля:
  Byte[] signedData
Свойства:
  bool SupportsLegacyBasicConstraintsExtension
Методы:
  X509CertificateImpl Import(Byte[] data)
  X509Certificate2Impl Import(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  X509Certificate2Impl Import(X509Certificate cert)
  Byte[] PEM(string type, Byte[] data)
  Byte[] ConvertData(Byte[] data)
  X509Certificate2Impl ImportFallback(Byte[] data)
  X509Certificate2Impl ImportFallback(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  bool get_SupportsLegacyBasicConstraintsExtension()
  X509ContentType GetCertContentType(Byte[] rawData)
  X509ContentType GetCertContentType(string fileName)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.Audio.AudioData
Наследуется от: object
Поля:
  int buffer_size
  bool stopped
Свойства:
  int Channels
  int Rate
  AudioFormat Format
  bool IsStopped
Методы:
  int get_Channels()
  int get_Rate()
  AudioFormat get_Format()
  void Setup(AudioDevice dev)
  void Play(AudioDevice dev)
  bool get_IsStopped()
  void set_IsStopped(bool value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Audio.WavData
Наследуется от: AudioData
Поля:
  Stream stream
  short channels
  ushort frame_divider
  int sample_rate
  int data_len
  long data_offset
  AudioFormat format
Свойства:
  int Channels
  int Rate
  AudioFormat Format
Методы:
  void .ctor(Stream data)
  void Play(AudioDevice dev)
  int get_Channels()
  int get_Rate()
  AudioFormat get_Format()
--------------------------------------------------
Класс: Mono.Audio.AuData
Наследуется от: AudioData
Поля:
  Stream stream
  short channels
  ushort frame_divider
  int sample_rate
  int data_len
  AudioFormat format
Свойства:
  int Channels
  int Rate
  AudioFormat Format
Методы:
  void .ctor(Stream data)
  void Play(AudioDevice dev)
  int get_Channels()
  int get_Rate()
  AudioFormat get_Format()
--------------------------------------------------
Класс: Mono.Audio.AudioFormat
Наследуется от: Enum
Поля:
  int value__
  AudioFormat S8
  AudioFormat U8
  AudioFormat S16_LE
  AudioFormat S16_BE
  AudioFormat U16_LE
  AudioFormat U16_BE
  AudioFormat S24_LE
  AudioFormat S24_BE
  AudioFormat U24_LE
  AudioFormat U24_BE
  AudioFormat S32_LE
  AudioFormat S32_BE
  AudioFormat U32_LE
  AudioFormat U32_BE
  AudioFormat FLOAT_LE
  AudioFormat FLOAT_BE
  AudioFormat FLOAT64_LE
  AudioFormat FLOAT64_BE
  AudioFormat IEC958_SUBFRAME_LE
  AudioFormat IEC958_SUBFRAME_BE
  AudioFormat MU_LAW
  AudioFormat A_LAW
  AudioFormat IMA_ADPCM
  AudioFormat MPEG
  AudioFormat GSM
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Audio.AudioDevice
Наследуется от: object
Поля:
  UInt32 chunk_size
Свойства:
  UInt32 ChunkSize
Методы:
  AudioDevice TryAlsa(string name)
  AudioDevice CreateDevice(string name)
  bool SetFormat(AudioFormat format, int channels, int rate)
  int PlaySample(Byte[] buffer, int num_frames)
  int XRunRecovery(int err)
  void Wait()
  UInt32 get_ChunkSize()
  void .ctor()
--------------------------------------------------
Класс: Mono.Audio.AlsaDevice
Наследуется от: AudioDevice
Поля:
  IntPtr handle
  IntPtr hw_param
  IntPtr sw_param
Свойства:
Методы:
  int snd_pcm_open(IntPtr& handle, string pcm_name, int stream, int mode)
  int snd_pcm_close(IntPtr handle)
  int snd_pcm_drain(IntPtr handle)
  int snd_pcm_writei(IntPtr handle, Byte[] buf, int size)
  int snd_pcm_set_params(IntPtr handle, int format, int access, int channels, int rate, int soft_resample, int latency)
  int snd_pcm_state(IntPtr handle)
  int snd_pcm_prepare(IntPtr handle)
  int snd_pcm_hw_params(IntPtr handle, IntPtr param)
  int snd_pcm_hw_params_malloc(IntPtr& param)
  void snd_pcm_hw_params_free(IntPtr param)
  int snd_pcm_hw_params_any(IntPtr handle, IntPtr param)
  int snd_pcm_hw_params_set_access(IntPtr handle, IntPtr param, int access)
  int snd_pcm_hw_params_set_format(IntPtr handle, IntPtr param, int format)
  int snd_pcm_hw_params_set_channels(IntPtr handle, IntPtr param, UInt32 channel)
  int snd_pcm_hw_params_set_rate_near(IntPtr handle, IntPtr param, UInt32& rate, Int32& dir)
  int snd_pcm_hw_params_set_period_time_near(IntPtr handle, IntPtr param, UInt32& period, Int32& dir)
  int snd_pcm_hw_params_get_period_size(IntPtr param, UInt32& period, Int32& dir)
  int snd_pcm_hw_params_set_buffer_size_near(IntPtr handle, IntPtr param, UInt32& buff_size)
  int snd_pcm_hw_params_get_buffer_time_max(IntPtr param, UInt32& buffer_time, Int32& dir)
  int snd_pcm_hw_params_set_buffer_time_near(IntPtr handle, IntPtr param, UInt32& BufferTime, Int32& dir)
  int snd_pcm_hw_params_get_buffer_size(IntPtr param, UInt32& BufferSize)
  int snd_pcm_sw_params(IntPtr handle, IntPtr param)
  int snd_pcm_sw_params_malloc(IntPtr& param)
  void snd_pcm_sw_params_free(IntPtr param)
  int snd_pcm_sw_params_current(IntPtr handle, IntPtr param)
  int snd_pcm_sw_params_set_avail_min(IntPtr handle, IntPtr param, UInt32 frames)
  int snd_pcm_sw_params_set_start_threshold(IntPtr handle, IntPtr param, UInt32 StartThreshold)
  void .ctor(string name)
  void Finalize()
  void Dispose()
  void Dispose(bool disposing)
  bool SetFormat(AudioFormat format, int channels, int rate)
  int PlaySample(Byte[] buffer, int num_frames)
  int XRunRecovery(int err)
  void Wait()
--------------------------------------------------
Класс: Mono.Audio.Win32SoundPlayer
Наследуется от: object
Поля:
  Byte[] _buffer
  bool _disposed
Свойства:
  Stream Stream
Методы:
  void .ctor(Stream s)
  bool PlaySound(Byte[] ptrToSound, UIntPtr hmod, SoundFlags flags)
  void set_Stream(Stream value)
  void Dispose()
  void Finalize()
  void Dispose(bool disposing)
  void Play()
  void PlayLooping()
  void PlaySync()
  void Stop()
--------------------------------------------------
Класс: Mono.Util.MonoPInvokeCallbackAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor(Type t)
--------------------------------------------------
Класс: Mono.Unity.CertHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void AddCertificatesToNativeChain(unitytls_x509list* nativeCertificateChain, X509CertificateCollection certificates, unitytls_errorstate* errorState)
  void AddCertificateToNativeChain(unitytls_x509list* nativeCertificateChain, X509Certificate certificate, unitytls_errorstate* errorState)
--------------------------------------------------
Класс: Mono.Unity.Debug
Наследуется от: object
Поля:
Свойства:
Методы:
  void CheckAndThrow(unitytls_errorstate errorState, string context, AlertDescription defaultAlert)
  void CheckAndThrow(unitytls_errorstate errorState, unitytls_x509verify_result verifyResult, string context, AlertDescription defaultAlert)
--------------------------------------------------
Класс: Mono.Unity.UnityTls
Наследуется от: object
Поля:
  unitytls_interface_struct marshalledInterface
Свойства:
  bool IsSupported
  unitytls_interface_struct NativeInterface
Методы:
  IntPtr GetUnityTlsInterface()
  bool get_IsSupported()
  unitytls_interface_struct get_NativeInterface()
--------------------------------------------------
Класс: Mono.Unity.UnityTlsContext
Наследуется от: MobileTlsContext
Поля:
  bool ActivateTracing
  unitytls_tlsctx* tlsContext
  unitytls_x509list* requestedClientCertChain
  unitytls_key* requestedClientKey
  unitytls_tlsctx_read_callback readCallback
  unitytls_tlsctx_write_callback writeCallback
  unitytls_tlsctx_trace_callback traceCallback
  unitytls_tlsctx_certificate_callback certificateCallback
  unitytls_tlsctx_x509verify_callback verifyCallback
  X509Certificate localClientCertificate
  X509Certificate2 remoteCertificate
  MonoTlsConnectionInfo connectioninfo
  bool isAuthenticated
  bool hasContext
  bool closedGraceful
  Byte[] writeBuffer
  Byte[] readBuffer
  GCHandle handle
  Exception lastException
Свойства:
  bool HasContext
  bool IsAuthenticated
  MonoTlsConnectionInfo ConnectionInfo
  bool IsRemoteCertificateAvailable
  X509Certificate LocalClientCertificate
  X509Certificate2 RemoteCertificate
  TlsProtocols NegotiatedProtocol
  bool CanRenegotiate
Методы:
  void .ctor(MobileAuthenticatedStream parent, MonoSslAuthenticationOptions options)
  void ExtractNativeKeyAndChainFromManagedCertificate(X509Certificate cert, unitytls_errorstate* errorState, unitytls_x509list*& nativeCertChain, unitytls_key*& nativeKey)
  bool get_HasContext()
  bool get_IsAuthenticated()
  MonoTlsConnectionInfo get_ConnectionInfo()
  bool get_IsRemoteCertificateAvailable()
  X509Certificate get_LocalClientCertificate()
  X509Certificate2 get_RemoteCertificate()
  TlsProtocols get_NegotiatedProtocol()
  void Flush()
  ValueTuple`2<int, bool> Read(Byte[] buffer, int offset, int count)
  ValueTuple`2<int, bool> Write(Byte[] buffer, int offset, int count)
  bool get_CanRenegotiate()
  void Renegotiate()
  bool PendingRenegotiation()
  void Shutdown()
  void Dispose(bool disposing)
  void StartHandshake()
  bool ProcessHandshake()
  void FinishHandshake()
  IntPtr WriteCallback(Void* userData, Byte* data, IntPtr bufferLen, unitytls_errorstate* errorState)
  IntPtr WriteCallback(Byte* data, IntPtr bufferLen, unitytls_errorstate* errorState)
  IntPtr ReadCallback(Void* userData, Byte* buffer, IntPtr bufferLen, unitytls_errorstate* errorState)
  IntPtr ReadCallback(Byte* buffer, IntPtr bufferLen, unitytls_errorstate* errorState)
  unitytls_x509verify_result VerifyCallback(Void* userData, unitytls_x509list_ref chain, unitytls_errorstate* errorState)
  unitytls_x509verify_result VerifyCallback(unitytls_x509list_ref chain, unitytls_errorstate* errorState)
  void CertificateCallback(Void* userData, unitytls_tlsctx* ctx, Byte* cn, IntPtr cnLen, unitytls_x509name* caList, IntPtr caListLen, unitytls_x509list_ref* chain, unitytls_key_ref* key, unitytls_errorstate* errorState)
  void CertificateCallback(unitytls_tlsctx* ctx, Byte* cn, IntPtr cnLen, unitytls_x509name* caList, IntPtr caListLen, unitytls_x509list_ref* chain, unitytls_key_ref* key, unitytls_errorstate* errorState)
  void TraceCallback(Void* userData, unitytls_tlsctx* ctx, Byte* traceMessage, IntPtr traceMessageLen)
--------------------------------------------------
Класс: Mono.Unity.UnityTlsConversions
Наследуется от: object
Поля:
Свойства:
Методы:
  unitytls_protocol GetMinProtocol(SslProtocols protocols)
  unitytls_protocol GetMaxProtocol(SslProtocols protocols)
  TlsProtocols ConvertProtocolVersion(unitytls_protocol protocol)
  AlertDescription VerifyResultToAlertDescription(unitytls_x509verify_result verifyResult, AlertDescription defaultAlert)
  SslPolicyErrors VerifyResultToPolicyErrror(unitytls_x509verify_result verifyResult)
  X509ChainStatusFlags VerifyResultToChainStatus(unitytls_x509verify_result verifyResult)
--------------------------------------------------
Класс: Mono.Unity.UnityTlsProvider
Наследуется от: MobileTlsProvider
Поля:
Свойства:
  string Name
  Guid ID
  bool SupportsSslStream
  bool SupportsMonoExtensions
  bool SupportsConnectionInfo
  bool SupportsCleanShutdown
  SslProtocols SupportedProtocols
Методы:
  string get_Name()
  Guid get_ID()
  bool get_SupportsSslStream()
  bool get_SupportsMonoExtensions()
  bool get_SupportsConnectionInfo()
  bool get_SupportsCleanShutdown()
  SslProtocols get_SupportedProtocols()
  MobileAuthenticatedStream CreateSslStream(SslStream sslStream, Stream innerStream, bool leaveInnerStreamOpen, MonoTlsSettings settings)
  unitytls_x509verify_result x509verify_callback(Void* userData, unitytls_x509_ref cert, unitytls_x509verify_result result, unitytls_errorstate* errorState)
  bool ValidateCertificate(ChainValidationHelper validator, string targetHost, bool serverMode, X509CertificateCollection certificates, bool wantsChain, X509Chain& chain, SslPolicyErrors& errors, Int32& status11)
  void .ctor()
--------------------------------------------------
Класс: Mono.Unity.UnityTlsStream
Наследуется от: MobileAuthenticatedStream
Поля:
Свойства:
Методы:
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, SslStream owner, MonoTlsSettings settings, MobileTlsProvider provider)
  MobileTlsContext CreateContext(MonoSslAuthenticationOptions options)
--------------------------------------------------
Класс: Mono.Unity.X509ChainImplUnityTls
Наследуется от: X509ChainImpl
Поля:
  X509ChainElementCollection elements
  unitytls_x509list_ref nativeCertificateChain
  X509ChainPolicy policy
  List`1<X509ChainStatus> chainStatusList
  bool reverseOrder
Свойства:
  bool IsValid
  IntPtr Handle
  unitytls_x509list_ref NativeCertificateChain
  X509ChainElementCollection ChainElements
  X509ChainPolicy ChainPolicy
  X509ChainStatus[] ChainStatus
Методы:
  void .ctor(unitytls_x509list_ref nativeCertificateChain, bool reverseOrder)
  bool get_IsValid()
  IntPtr get_Handle()
  unitytls_x509list_ref get_NativeCertificateChain()
  X509ChainElementCollection get_ChainElements()
  void AddStatus(X509ChainStatusFlags error)
  X509ChainPolicy get_ChainPolicy()
  void set_ChainPolicy(X509ChainPolicy value)
  X509ChainStatus[] get_ChainStatus()
  bool Build(X509Certificate2 certificate)
  void Reset()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: Mono.Net.CFStreamClientContext
Наследуется от: ValueType
Поля:
  IntPtr Version
  IntPtr Info
  IntPtr Retain
  IntPtr Release
  IntPtr CopyDescription
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.CFUrl
Наследуется от: CFObject
Поля:
Свойства:
Методы:
  void .ctor(IntPtr handle, bool own)
  IntPtr CFURLCreateWithString(IntPtr allocator, IntPtr str, IntPtr baseURL)
  CFUrl Create(string absolute)
--------------------------------------------------
Класс: Mono.Net.CFRunLoop
Наследуется от: CFObject
Поля:
Свойства:
  CFRunLoop CurrentRunLoop
Методы:
  void CFRunLoopAddSource(IntPtr rl, IntPtr source, IntPtr mode)
  void CFRunLoopRemoveSource(IntPtr rl, IntPtr source, IntPtr mode)
  int CFRunLoopRunInMode(IntPtr mode, double seconds, bool returnAfterSourceHandled)
  IntPtr CFRunLoopGetCurrent()
  void CFRunLoopStop(IntPtr rl)
  void .ctor(IntPtr handle, bool own)
  CFRunLoop get_CurrentRunLoop()
  void AddSource(IntPtr source, CFString mode)
  void RemoveSource(IntPtr source, CFString mode)
  int RunInMode(CFString mode, double seconds, bool returnAfterSourceHandled)
  void Stop()
--------------------------------------------------
Класс: Mono.Net.CFProxyType
Наследуется от: Enum
Поля:
  int value__
  CFProxyType None
  CFProxyType AutoConfigurationUrl
  CFProxyType AutoConfigurationJavaScript
  CFProxyType FTP
  CFProxyType HTTP
  CFProxyType HTTPS
  CFProxyType SOCKS
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.CFProxy
Наследуется от: object
Поля:
  IntPtr kCFProxyAutoConfigurationJavaScriptKey
  IntPtr kCFProxyAutoConfigurationURLKey
  IntPtr kCFProxyHostNameKey
  IntPtr kCFProxyPasswordKey
  IntPtr kCFProxyPortNumberKey
  IntPtr kCFProxyTypeKey
  IntPtr kCFProxyUsernameKey
  IntPtr kCFProxyTypeAutoConfigurationURL
  IntPtr kCFProxyTypeAutoConfigurationJavaScript
  IntPtr kCFProxyTypeFTP
  IntPtr kCFProxyTypeHTTP
  IntPtr kCFProxyTypeHTTPS
  IntPtr kCFProxyTypeSOCKS
  CFDictionary settings
Свойства:
  IntPtr AutoConfigurationJavaScript
  IntPtr AutoConfigurationUrl
  string HostName
  string Password
  int Port
  CFProxyType ProxyType
  string Username
Методы:
  void .cctor()
  void .ctor(CFDictionary settings)
  CFProxyType CFProxyTypeToEnum(IntPtr type)
  IntPtr get_AutoConfigurationJavaScript()
  IntPtr get_AutoConfigurationUrl()
  string get_HostName()
  string get_Password()
  int get_Port()
  CFProxyType get_ProxyType()
  string get_Username()
--------------------------------------------------
Класс: Mono.Net.CFProxySettings
Наследуется от: object
Поля:
  IntPtr kCFNetworkProxiesHTTPEnable
  IntPtr kCFNetworkProxiesHTTPPort
  IntPtr kCFNetworkProxiesHTTPProxy
  IntPtr kCFNetworkProxiesProxyAutoConfigEnable
  IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
  IntPtr kCFNetworkProxiesProxyAutoConfigURLString
  CFDictionary settings
Свойства:
  CFDictionary Dictionary
  bool HTTPEnable
  int HTTPPort
  string HTTPProxy
  bool ProxyAutoConfigEnable
  string ProxyAutoConfigJavaScript
  string ProxyAutoConfigURLString
Методы:
  void .cctor()
  void .ctor(CFDictionary settings)
  CFDictionary get_Dictionary()
  bool get_HTTPEnable()
  int get_HTTPPort()
  string get_HTTPProxy()
  bool get_ProxyAutoConfigEnable()
  string get_ProxyAutoConfigJavaScript()
  string get_ProxyAutoConfigURLString()
--------------------------------------------------
Класс: Mono.Net.CFNetwork
Наследуется от: object
Поля:
  string CFNetworkLibrary
  object lock_obj
  Queue`1<GetProxyData> get_proxy_queue
  AutoResetEvent proxy_event
Свойства:
Методы:
  IntPtr CFNetworkCopyProxiesForAutoConfigurationScriptSequential(IntPtr proxyAutoConfigurationScript, IntPtr targetURL, IntPtr& error)
  IntPtr CFNetworkExecuteProxyAutoConfigurationURL(IntPtr proxyAutoConfigURL, IntPtr targetURL, CFProxyAutoConfigurationResultCallback cb, CFStreamClientContext& clientContext)
  void CFNetworkCopyProxiesForAutoConfigurationScriptThread()
  IntPtr CFNetworkCopyProxiesForAutoConfigurationScript(IntPtr proxyAutoConfigurationScript, IntPtr targetURL, IntPtr& error)
  CFArray CopyProxiesForAutoConfigurationScript(IntPtr proxyAutoConfigurationScript, CFUrl targetURL)
  CFProxy[] GetProxiesForAutoConfigurationScript(IntPtr proxyAutoConfigurationScript, CFUrl targetURL)
  CFProxy[] GetProxiesForAutoConfigurationScript(IntPtr proxyAutoConfigurationScript, Uri targetUri)
  CFProxy[] ExecuteProxyAutoConfigurationURL(IntPtr proxyAutoConfigURL, Uri targetURL)
  IntPtr CFNetworkCopyProxiesForURL(IntPtr url, IntPtr proxySettings)
  CFArray CopyProxiesForURL(CFUrl url, CFDictionary proxySettings)
  CFProxy[] GetProxiesForURL(CFUrl url, CFProxySettings proxySettings)
  CFProxy[] GetProxiesForUri(Uri uri, CFProxySettings proxySettings)
  IntPtr CFNetworkCopySystemProxySettings()
  CFProxySettings GetSystemProxySettings()
  IWebProxy GetDefaultProxy()
  void .cctor()
--------------------------------------------------
Класс: Mono.Net.Security.BufferOffsetSize
Наследуется от: object
Поля:
  Byte[] Buffer
  int Offset
  int Size
  int TotalBytes
  bool Complete
Свойства:
  int EndOffset
  int Remaining
Методы:
  int get_EndOffset()
  int get_Remaining()
  void .ctor(Byte[] buffer, int offset, int size)
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Security.BufferOffsetSize2
Наследуется от: BufferOffsetSize
Поля:
  int InitialSize
Свойства:
Методы:
  void .ctor(int size)
  void Reset()
  void MakeRoom(int size)
  void AppendData(Byte[] buffer, int offset, int size)
--------------------------------------------------
Класс: Mono.Net.Security.AsyncOperationStatus
Наследуется от: Enum
Поля:
  int value__
  AsyncOperationStatus Initialize
  AsyncOperationStatus Continue
  AsyncOperationStatus ReadDone
  AsyncOperationStatus Complete
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Security.AsyncProtocolResult
Наследуется от: object
Поля:
  int <UserResult>k__BackingField
  ExceptionDispatchInfo <Error>k__BackingField
Свойства:
  int UserResult
  ExceptionDispatchInfo Error
Методы:
  int get_UserResult()
  ExceptionDispatchInfo get_Error()
  void .ctor(int result)
  void .ctor(ExceptionDispatchInfo error)
--------------------------------------------------
Класс: Mono.Net.Security.AsyncProtocolRequest
Наследуется от: object
Поля:
  MobileAuthenticatedStream <Parent>k__BackingField
  bool <RunSynchronously>k__BackingField
  int <UserResult>k__BackingField
  int Started
  int RequestedSize
  int WriteRequested
  object locker
  int next_id
Свойства:
  MobileAuthenticatedStream Parent
  bool RunSynchronously
  int ID
  string Name
  int UserResult
Методы:
  MobileAuthenticatedStream get_Parent()
  bool get_RunSynchronously()
  int get_ID()
  string get_Name()
  int get_UserResult()
  void set_UserResult(int value)
  void .ctor(MobileAuthenticatedStream parent, bool sync)
  void Debug(string message, Object[] args)
  void RequestRead(int size)
  void RequestWrite()
  Task`1<AsyncProtocolResult> StartOperation(CancellationToken cancellationToken)
  Task ProcessOperation(CancellationToken cancellationToken)
  Task`1<Nullable`1<int>> InnerRead(CancellationToken cancellationToken)
  AsyncOperationStatus Run(AsyncOperationStatus status)
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Security.AsyncHandshakeRequest
Наследуется от: AsyncProtocolRequest
Поля:
Свойства:
Методы:
  void .ctor(MobileAuthenticatedStream parent, bool sync)
  AsyncOperationStatus Run(AsyncOperationStatus status)
--------------------------------------------------
Класс: Mono.Net.Security.AsyncReadOrWriteRequest
Наследуется от: AsyncProtocolRequest
Поля:
  BufferOffsetSize <UserBuffer>k__BackingField
  int <CurrentSize>k__BackingField
Свойства:
  BufferOffsetSize UserBuffer
  int CurrentSize
Методы:
  BufferOffsetSize get_UserBuffer()
  int get_CurrentSize()
  void set_CurrentSize(int value)
  void .ctor(MobileAuthenticatedStream parent, bool sync, Byte[] buffer, int offset, int size)
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Security.AsyncReadRequest
Наследуется от: AsyncReadOrWriteRequest
Поля:
Свойства:
Методы:
  void .ctor(MobileAuthenticatedStream parent, bool sync, Byte[] buffer, int offset, int size)
  AsyncOperationStatus Run(AsyncOperationStatus status)
--------------------------------------------------
Класс: Mono.Net.Security.AsyncWriteRequest
Наследуется от: AsyncReadOrWriteRequest
Поля:
Свойства:
Методы:
  void .ctor(MobileAuthenticatedStream parent, bool sync, Byte[] buffer, int offset, int size)
  AsyncOperationStatus Run(AsyncOperationStatus status)
--------------------------------------------------
Класс: Mono.Net.Security.AsyncShutdownRequest
Наследуется от: AsyncProtocolRequest
Поля:
Свойства:
Методы:
  void .ctor(MobileAuthenticatedStream parent)
  AsyncOperationStatus Run(AsyncOperationStatus status)
--------------------------------------------------
Класс: Mono.Net.Security.AsyncRenegotiateRequest
Наследуется от: AsyncProtocolRequest
Поля:
Свойства:
Методы:
  void .ctor(MobileAuthenticatedStream parent)
  AsyncOperationStatus Run(AsyncOperationStatus status)
--------------------------------------------------
Класс: Mono.Net.Security.ServerCertValidationCallbackWrapper
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(ServerCertValidationCallback callback, X509Certificate certificate, X509Chain chain, MonoSslPolicyErrors sslPolicyErrors)
  IAsyncResult BeginInvoke(ServerCertValidationCallback callback, X509Certificate certificate, X509Chain chain, MonoSslPolicyErrors sslPolicyErrors, AsyncCallback __callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Net.Security.ChainValidationHelper
Наследуется от: object
Поля:
  WeakReference`1<SslStream> owner
  MonoTlsSettings settings
  MobileTlsProvider provider
  ServerCertValidationCallback certValidationCallback
  LocalCertSelectionCallback certSelectionCallback
  MonoTlsStream tlsStream
  HttpWebRequest request
Свойства:
  MonoTlsProvider Provider
  MonoTlsSettings Settings
  bool HasCertificateSelectionCallback
Методы:
  ChainValidationHelper GetInternalValidator(SslStream owner, MobileTlsProvider provider, MonoTlsSettings settings)
  ICertificateValidator GetDefaultValidator(MonoTlsSettings settings)
  ChainValidationHelper Create(MobileTlsProvider provider, MonoTlsSettings& settings, MonoTlsStream stream)
  void .ctor(SslStream owner, MobileTlsProvider provider, MonoTlsSettings settings, bool cloneSettings, MonoTlsStream stream)
  ServerCertValidationCallback GetValidationCallback(MonoTlsSettings settings)
  X509Certificate DefaultSelectionCallback(string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers)
  MonoTlsProvider get_Provider()
  MonoTlsSettings get_Settings()
  bool get_HasCertificateSelectionCallback()
  bool SelectClientCertificate(string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers, X509Certificate& clientCertificate)
  X509Certificate SelectClientCertificate(string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers)
  bool ValidateClientCertificate(X509Certificate certificate, MonoSslPolicyErrors errors)
  ValidationResult ValidateCertificate(string host, bool serverMode, X509CertificateCollection certs)
  ValidationResult ValidateCertificate(string host, bool serverMode, X509Certificate leaf, X509Chain chain)
  ValidationResult ValidateChain(string host, bool server, X509Certificate leaf, X509Chain chain, X509CertificateCollection certs, SslPolicyErrors errors)
  ValidationResult ValidateChain(string host, bool server, X509Certificate leaf, X509Chain& chain, X509CertificateCollection certs, SslPolicyErrors errors)
  bool InvokeCallback(X509Certificate leaf, X509Chain chain, SslPolicyErrors errors)
  bool InvokeSystemValidator(string targetHost, bool serverMode, X509CertificateCollection certificates, X509Chain chain, MonoSslPolicyErrors& xerrors, Int32& status11)
--------------------------------------------------
Класс: Mono.Net.Security.MobileAuthenticatedStream
Наследуется от: AuthenticatedStream
Поля:
  MobileTlsContext xobileTlsContext
  ExceptionDispatchInfo lastException
  AsyncProtocolRequest asyncHandshakeRequest
  AsyncProtocolRequest asyncReadRequest
  AsyncProtocolRequest asyncWriteRequest
  BufferOffsetSize2 readBuffer
  BufferOffsetSize2 writeBuffer
  object ioLock
  int closeRequested
  bool shutdown
  Operation operation
  int uniqueNameInteger
  SslStream <SslStream>k__BackingField
  MonoTlsSettings <Settings>k__BackingField
  MobileTlsProvider <Provider>k__BackingField
  string <TargetHost>k__BackingField
  int nextId
  int ID
Свойства:
  SslStream SslStream
  MonoTlsSettings Settings
  MobileTlsProvider Provider
  MonoTlsProvider Mono.Security.Interface.IMonoSslStream.Provider
  bool HasContext
  string TargetHost
  AuthenticatedStream AuthenticatedStream
  bool CanRenegotiate
  bool IsServer
  bool IsAuthenticated
  bool IsMutuallyAuthenticated
  SslProtocols SslProtocol
  X509Certificate RemoteCertificate
  X509Certificate LocalCertificate
  X509Certificate InternalLocalCertificate
  TransportContext TransportContext
  bool CanRead
  bool CanTimeout
  bool CanWrite
  bool CanSeek
  long Length
  long Position
  bool IsEncrypted
  bool IsSigned
  int ReadTimeout
  int WriteTimeout
  CipherAlgorithmType CipherAlgorithm
  HashAlgorithmType HashAlgorithm
  ExchangeAlgorithmType KeyExchangeAlgorithm
  int CipherStrength
  int HashStrength
  int KeyExchangeStrength
  bool CheckCertRevocationStatus
Методы:
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, SslStream owner, MonoTlsSettings settings, MobileTlsProvider provider)
  SslStream get_SslStream()
  MonoTlsSettings get_Settings()
  MobileTlsProvider get_Provider()
  MonoTlsProvider Mono.Security.Interface.IMonoSslStream.get_Provider()
  bool get_HasContext()
  string get_TargetHost()
  void set_TargetHost(string value)
  void CheckThrow(bool authSuccessCheck, bool shutdownCheck)
  Exception GetSSPIException(Exception e)
  Exception GetIOException(Exception e, string message)
  Exception GetRenegotiationException(string message)
  Exception GetInternalError()
  Exception GetInvalidNestedCallException()
  ExceptionDispatchInfo SetException(Exception e)
  void AuthenticateAsClient(string targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  void AuthenticateAsServer(X509Certificate serverCertificate, bool clientCertificateRequired, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  Task AuthenticateAsClientAsync(string targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  Task AuthenticateAsClientAsync(IMonoSslClientAuthenticationOptions sslClientAuthenticationOptions, CancellationToken cancellationToken)
  Task AuthenticateAsServerAsync(X509Certificate serverCertificate, bool clientCertificateRequired, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  Task AuthenticateAsServerAsync(IMonoSslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)
  Task ShutdownAsync()
  AuthenticatedStream get_AuthenticatedStream()
  Task ProcessAuthentication(bool runSynchronously, MonoSslAuthenticationOptions options, CancellationToken cancellationToken)
  MobileTlsContext CreateContext(MonoSslAuthenticationOptions options)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  bool get_CanRenegotiate()
  Task RenegotiateAsync(CancellationToken cancellationToken)
  Task`1<int> StartOperation(OperationType type, AsyncProtocolRequest asyncRequest, CancellationToken cancellationToken)
  void Debug(string format, Object[] args)
  void Debug(string message)
  int InternalRead(Byte[] buffer, int offset, int size, Boolean& outWantMore)
  ValueTuple`2<int, bool> InternalRead(AsyncProtocolRequest asyncRequest, BufferOffsetSize internalBuffer, Byte[] buffer, int offset, int size)
  bool InternalWrite(Byte[] buffer, int offset, int size)
  bool InternalWrite(AsyncProtocolRequest asyncRequest, BufferOffsetSize2 internalBuffer, Byte[] buffer, int offset, int size)
  Task`1<int> InnerRead(bool sync, int requestedSize, CancellationToken cancellationToken)
  Task InnerWrite(bool sync, CancellationToken cancellationToken)
  AsyncOperationStatus ProcessHandshake(AsyncOperationStatus status, bool renegotiate)
  ValueTuple`2<int, bool> ProcessRead(BufferOffsetSize userBuffer)
  ValueTuple`2<int, bool> ProcessWrite(BufferOffsetSize userBuffer)
  AsyncOperationStatus ProcessShutdown(AsyncOperationStatus status)
  bool get_IsServer()
  bool get_IsAuthenticated()
  bool get_IsMutuallyAuthenticated()
  void Dispose(bool disposing)
  void Flush()
  SslProtocols get_SslProtocol()
  X509Certificate get_RemoteCertificate()
  X509Certificate get_LocalCertificate()
  X509Certificate get_InternalLocalCertificate()
  MonoTlsConnectionInfo GetConnectionInfo()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  TransportContext get_TransportContext()
  bool get_CanRead()
  bool get_CanTimeout()
  bool get_CanWrite()
  bool get_CanSeek()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool get_IsEncrypted()
  bool get_IsSigned()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  CipherAlgorithmType get_CipherAlgorithm()
  HashAlgorithmType get_HashAlgorithm()
  ExchangeAlgorithmType get_KeyExchangeAlgorithm()
  int get_CipherStrength()
  int get_HashStrength()
  int get_KeyExchangeStrength()
  bool get_CheckCertRevocationStatus()
  void .cctor()
  void <InnerWrite>b__67_0()
--------------------------------------------------
Класс: Mono.Net.Security.MobileTlsContext
Наследуется от: object
Поля:
  ChainValidationHelper certificateValidator
  MonoSslAuthenticationOptions <Options>k__BackingField
  MobileAuthenticatedStream <Parent>k__BackingField
  bool <IsServer>k__BackingField
  string <TargetHost>k__BackingField
  string <ServerName>k__BackingField
  bool <AskForClientCertificate>k__BackingField
  SslProtocols <EnabledProtocols>k__BackingField
  X509CertificateCollection <ClientCertificates>k__BackingField
  X509Certificate <LocalServerCertificate>k__BackingField
Свойства:
  MonoSslAuthenticationOptions Options
  MobileAuthenticatedStream Parent
  MonoTlsSettings Settings
  MonoTlsProvider Provider
  bool HasContext
  bool IsAuthenticated
  bool IsServer
  string TargetHost
  string ServerName
  bool AskForClientCertificate
  SslProtocols EnabledProtocols
  X509CertificateCollection ClientCertificates
  bool AllowRenegotiation
  MonoTlsConnectionInfo ConnectionInfo
  X509Certificate LocalServerCertificate
  bool IsRemoteCertificateAvailable
  X509Certificate LocalClientCertificate
  X509Certificate2 RemoteCertificate
  TlsProtocols NegotiatedProtocol
  bool CanRenegotiate
Методы:
  void .ctor(MobileAuthenticatedStream parent, MonoSslAuthenticationOptions options)
  MonoSslAuthenticationOptions get_Options()
  MobileAuthenticatedStream get_Parent()
  MonoTlsSettings get_Settings()
  MonoTlsProvider get_Provider()
  void Debug(string message, Object[] args)
  bool get_HasContext()
  bool get_IsAuthenticated()
  bool get_IsServer()
  string get_TargetHost()
  string get_ServerName()
  bool get_AskForClientCertificate()
  SslProtocols get_EnabledProtocols()
  X509CertificateCollection get_ClientCertificates()
  bool get_AllowRenegotiation()
  void GetProtocolVersions(Nullable`1& min, Nullable`1& max)
  void StartHandshake()
  bool ProcessHandshake()
  void FinishHandshake()
  MonoTlsConnectionInfo get_ConnectionInfo()
  X509Certificate get_LocalServerCertificate()
  void set_LocalServerCertificate(X509Certificate value)
  bool get_IsRemoteCertificateAvailable()
  X509Certificate get_LocalClientCertificate()
  X509Certificate2 get_RemoteCertificate()
  TlsProtocols get_NegotiatedProtocol()
  void Flush()
  ValueTuple`2<int, bool> Read(Byte[] buffer, int offset, int count)
  ValueTuple`2<int, bool> Write(Byte[] buffer, int offset, int count)
  void Shutdown()
  bool PendingRenegotiation()
  bool ValidateCertificate(X509Certificate2 leaf, X509Chain chain)
  bool ValidateCertificate(X509Certificate2Collection certificates)
  X509Certificate SelectServerCertificate(string serverIdentity)
  X509Certificate SelectClientCertificate(String[] acceptableIssuers)
  bool get_CanRenegotiate()
  void Renegotiate()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
--------------------------------------------------
Класс: Mono.Net.Security.MobileTlsProvider
Наследуется от: MonoTlsProvider
Поля:
Свойства:
Методы:
  IMonoSslStream CreateSslStream(Stream innerStream, bool leaveInnerStreamOpen, MonoTlsSettings settings)
  MobileAuthenticatedStream CreateSslStream(SslStream sslStream, Stream innerStream, bool leaveInnerStreamOpen, MonoTlsSettings settings)
  bool ValidateCertificate(ChainValidationHelper validator, string targetHost, bool serverMode, X509CertificateCollection certificates, bool wantsChain, X509Chain& chain, SslPolicyErrors& errors, Int32& status11)
  void .ctor()
--------------------------------------------------
Класс: Mono.Net.Security.MonoSslAuthenticationOptions
Наследуется от: object
Поля:
  ServerCertSelectionCallback <ServerCertSelectionDelegate>k__BackingField
Свойства:
  bool ServerMode
  bool AllowRenegotiation
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  SslProtocols EnabledSslProtocols
  EncryptionPolicy EncryptionPolicy
  X509RevocationMode CertificateRevocationCheckMode
  string TargetHost
  X509Certificate ServerCertificate
  X509CertificateCollection ClientCertificates
  bool ClientCertificateRequired
  ServerCertSelectionCallback ServerCertSelectionDelegate
Методы:
  bool get_ServerMode()
  bool get_AllowRenegotiation()
  void set_AllowRenegotiation(bool value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  X509RevocationMode get_CertificateRevocationCheckMode()
  void set_CertificateRevocationCheckMode(X509RevocationMode value)
  string get_TargetHost()
  void set_TargetHost(string value)
  X509Certificate get_ServerCertificate()
  void set_ServerCertificate(X509Certificate value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  bool get_ClientCertificateRequired()
  void set_ClientCertificateRequired(bool value)
  ServerCertSelectionCallback get_ServerCertSelectionDelegate()
  void set_ServerCertSelectionDelegate(ServerCertSelectionCallback value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Net.Security.MonoSslClientAuthenticationOptions
Наследуется от: MonoSslAuthenticationOptions
Поля:
  SslClientAuthenticationOptions <Options>k__BackingField
Свойства:
  SslClientAuthenticationOptions Options
  bool ServerMode
  bool AllowRenegotiation
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  X509RevocationMode CertificateRevocationCheckMode
  EncryptionPolicy EncryptionPolicy
  SslProtocols EnabledSslProtocols
  LocalCertificateSelectionCallback LocalCertificateSelectionCallback
  string TargetHost
  bool ClientCertificateRequired
  X509CertificateCollection ClientCertificates
  X509Certificate ServerCertificate
Методы:
  SslClientAuthenticationOptions get_Options()
  bool get_ServerMode()
  void .ctor(SslClientAuthenticationOptions options)
  void .ctor()
  bool get_AllowRenegotiation()
  void set_AllowRenegotiation(bool value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  X509RevocationMode get_CertificateRevocationCheckMode()
  void set_CertificateRevocationCheckMode(X509RevocationMode value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
  LocalCertificateSelectionCallback get_LocalCertificateSelectionCallback()
  void set_LocalCertificateSelectionCallback(LocalCertificateSelectionCallback value)
  string get_TargetHost()
  void set_TargetHost(string value)
  bool get_ClientCertificateRequired()
  void set_ClientCertificateRequired(bool value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  X509Certificate get_ServerCertificate()
  void set_ServerCertificate(X509Certificate value)
--------------------------------------------------
Класс: Mono.Net.Security.MonoSslServerAuthenticationOptions
Наследуется от: MonoSslAuthenticationOptions
Поля:
  SslServerAuthenticationOptions <Options>k__BackingField
Свойства:
  SslServerAuthenticationOptions Options
  bool ServerMode
  bool AllowRenegotiation
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  X509RevocationMode CertificateRevocationCheckMode
  EncryptionPolicy EncryptionPolicy
  SslProtocols EnabledSslProtocols
  bool ClientCertificateRequired
  ServerCertificateSelectionCallback ServerCertificateSelectionCallback
  MonoServerCertificateSelectionCallback Mono.Security.Interface.IMonoSslServerAuthenticationOptions.ServerCertificateSelectionCallback
  string TargetHost
  X509Certificate ServerCertificate
  X509CertificateCollection ClientCertificates
Методы:
  SslServerAuthenticationOptions get_Options()
  bool get_ServerMode()
  void .ctor(SslServerAuthenticationOptions options)
  void .ctor()
  bool get_AllowRenegotiation()
  void set_AllowRenegotiation(bool value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  X509RevocationMode get_CertificateRevocationCheckMode()
  void set_CertificateRevocationCheckMode(X509RevocationMode value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
  bool get_ClientCertificateRequired()
  void set_ClientCertificateRequired(bool value)
  ServerCertificateSelectionCallback get_ServerCertificateSelectionCallback()
  void set_ServerCertificateSelectionCallback(ServerCertificateSelectionCallback value)
  MonoServerCertificateSelectionCallback Mono.Security.Interface.IMonoSslServerAuthenticationOptions.get_ServerCertificateSelectionCallback()
  void Mono.Security.Interface.IMonoSslServerAuthenticationOptions.set_ServerCertificateSelectionCallback(MonoServerCertificateSelectionCallback value)
  string get_TargetHost()
  void set_TargetHost(string value)
  X509Certificate get_ServerCertificate()
  void set_ServerCertificate(X509Certificate value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
--------------------------------------------------
Класс: Mono.Net.Security.MonoTlsProviderFactory
Наследуется от: object
Поля:
  object locker
  bool initialized
  MobileTlsProvider defaultProvider
  Dictionary`2<string, Tuple`2<Guid, string>> providerRegistration
  Dictionary`2<Guid, MobileTlsProvider> providerCache
  bool enableDebug
  Guid UnityTlsId
  Guid AppleTlsId
  Guid BtlsId
Свойства:
  bool IsInitialized
Методы:
  MobileTlsProvider GetProviderInternal()
  void InitializeInternal()
  void InitializeInternal(string provider)
  Type LookupProviderType(string name, bool throwOnError)
  MobileTlsProvider LookupProvider(string name, bool throwOnError)
  void InitializeDebug()
  void Debug(string message, Object[] args)
  void InitializeProviderRegistration()
  void PopulateUnityProviders()
  void PopulateProviders()
  bool IsBtlsSupported()
  MobileTlsProvider CreateDefaultProviderImpl()
  MobileTlsProvider GetProvider()
  bool IsProviderSupported(string name)
  MobileTlsProvider GetProvider(string name)
  bool get_IsInitialized()
  void Initialize()
  void Initialize(string provider)
  void .cctor()
--------------------------------------------------
Класс: Mono.Net.Security.MonoTlsStream
Наследуется от: object
Поля:
  MobileTlsProvider provider
  NetworkStream networkStream
  HttpWebRequest request
  MonoTlsSettings settings
  SslStream sslStream
  object sslStreamLock
  WebExceptionStatus status
  bool <CertificateValidationFailed>k__BackingField
Свойства:
  HttpWebRequest Request
  SslStream SslStream
  WebExceptionStatus ExceptionStatus
  bool CertificateValidationFailed
Методы:
  HttpWebRequest get_Request()
  SslStream get_SslStream()
  WebExceptionStatus get_ExceptionStatus()
  bool get_CertificateValidationFailed()
  void set_CertificateValidationFailed(bool value)
  void .ctor(HttpWebRequest request, NetworkStream networkStream)
  Task`1<Stream> CreateStream(WebConnectionTunnel tunnel, CancellationToken cancellationToken)
  void Dispose()
  void CloseSslStream()
--------------------------------------------------
Класс: Mono.Net.Security.NoReflectionHelper
Наследуется от: object
Поля:
Свойства:
  bool IsInitialized
Методы:
  object GetDefaultValidator(object settings)
  object GetProvider()
  bool get_IsInitialized()
  void Initialize()
  void Initialize(string provider)
  HttpWebRequest CreateHttpsRequest(Uri requestUri, object provider, object settings)
  object CreateHttpListener(object certificate, object provider, object settings)
  object GetMonoSslStream(SslStream stream)
  object GetMonoSslStream(HttpListenerContext context)
  bool IsProviderSupported(string name)
  object GetProvider(string name)
--------------------------------------------------
Класс: Mono.Net.Security.SystemCertificateValidator
Наследуется от: object
Поля:
  bool is_macosx
  X509RevocationMode revocation_mode
  X509KeyUsageFlags s_flags
Свойства:
Методы:
  void .cctor()
  X509Chain CreateX509Chain(X509CertificateCollection certs)
  bool BuildX509Chain(X509CertificateCollection certs, X509Chain chain, SslPolicyErrors& errors, Int32& status11)
  bool CheckUsage(X509CertificateCollection certs, string host, SslPolicyErrors& errors, Int32& status11)
  bool EvaluateSystem(X509CertificateCollection certs, X509CertificateCollection anchors, string host, X509Chain chain, SslPolicyErrors& errors, Int32& status11)
  bool Evaluate(MonoTlsSettings settings, string host, X509CertificateCollection certs, X509Chain chain, SslPolicyErrors& errors, Int32& status11)
  bool NeedsChain(MonoTlsSettings settings)
  int GetStatusFromChain(X509Chain chain)
  SslPolicyErrors GetErrorsFromChain(X509Chain chain)
  bool CheckCertificateUsage(X509Certificate2 cert)
  bool CheckServerIdentity(X509Certificate2 cert, string targetHost)
  bool CheckDomainName(string subjectName, string targetHost)
  bool Match(string hostname, string pattern)
--------------------------------------------------
Класс: Mono.Net.Security.Private.CallbackHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  MonoRemoteCertificateValidationCallback PublicToMono(RemoteCertificateValidationCallback callback)
  MonoRemoteCertificateValidationCallback InternalToMono(RemoteCertValidationCallback callback)
  RemoteCertificateValidationCallback InternalToPublic(string hostname, RemoteCertValidationCallback callback)
  MonoLocalCertificateSelectionCallback InternalToMono(LocalCertSelectionCallback callback)
  LocalCertificateSelectionCallback MonoToPublic(MonoLocalCertificateSelectionCallback callback)
  RemoteCertValidationCallback MonoToInternal(MonoRemoteCertificateValidationCallback callback)
  LocalCertSelectionCallback MonoToInternal(MonoLocalCertificateSelectionCallback callback)
  ServerCertificateSelectionCallback MonoToPublic(MonoServerCertificateSelectionCallback callback)
  MonoServerCertificateSelectionCallback PublicToMono(ServerCertificateSelectionCallback callback)
--------------------------------------------------
Класс: Mono.Net.Dns.DnsClass
Наследуется от: Enum
Поля:
  ushort value__
  DnsClass Internet
  DnsClass IN
  DnsClass CSNET
  DnsClass CS
  DnsClass CHAOS
  DnsClass CH
  DnsClass Hesiod
  DnsClass HS
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.DnsHeader
Наследуется от: object
Поля:
  int DnsHeaderLength
  ArraySegment`1<byte> bytes
Свойства:
  ushort ID
  bool IsQuery
  DnsOpCode OpCode
  bool AuthoritativeAnswer
  bool Truncation
  bool RecursionDesired
  bool RecursionAvailable
  int ZReserved
  DnsRCode RCode
  ushort QuestionCount
  ushort AnswerCount
  ushort AuthorityCount
  ushort AdditionalCount
Методы:
  void .ctor(Byte[] bytes)
  void .ctor(Byte[] bytes, int offset)
  void .ctor(ArraySegment`1<byte> segment)
  void Clear()
  ushort get_ID()
  void set_ID(ushort value)
  bool get_IsQuery()
  void set_IsQuery(bool value)
  DnsOpCode get_OpCode()
  void set_OpCode(DnsOpCode value)
  bool get_AuthoritativeAnswer()
  void set_AuthoritativeAnswer(bool value)
  bool get_Truncation()
  void set_Truncation(bool value)
  bool get_RecursionDesired()
  void set_RecursionDesired(bool value)
  bool get_RecursionAvailable()
  void set_RecursionAvailable(bool value)
  int get_ZReserved()
  void set_ZReserved(int value)
  DnsRCode get_RCode()
  void set_RCode(DnsRCode value)
  ushort GetUInt16(Byte[] bytes, int offset)
  void SetUInt16(Byte[] bytes, int offset, ushort val)
  ushort get_QuestionCount()
  void set_QuestionCount(ushort value)
  ushort get_AnswerCount()
  void set_AnswerCount(ushort value)
  ushort get_AuthorityCount()
  void set_AuthorityCount(ushort value)
  ushort get_AdditionalCount()
  void set_AdditionalCount(ushort value)
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsOpCode
Наследуется от: Enum
Поля:
  byte value__
  DnsOpCode Query
  DnsOpCode IQuery
  DnsOpCode Status
  DnsOpCode Notify
  DnsOpCode Update
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.DnsPacket
Наследуется от: object
Поля:
  Byte[] packet
  int position
  DnsHeader header
Свойства:
  Byte[] Packet
  int Length
  DnsHeader Header
Методы:
  void .ctor()
  void .ctor(int length)
  void .ctor(Byte[] buffer, int length)
  Byte[] get_Packet()
  int get_Length()
  DnsHeader get_Header()
  void WriteUInt16(ushort v)
  void WriteStringBytes(string str, int offset, int count)
  void WriteLabel(string str, int offset, int count)
  void WriteDnsName(string name)
  string ReadName(Int32& offset)
  string ReadName(Byte[] buffer, Int32& offset)
  ushort ReadUInt16(Int32& offset)
  int ReadInt32(Int32& offset)
--------------------------------------------------
Класс: Mono.Net.Dns.DnsQClass
Наследуется от: Enum
Поля:
  ushort value__
  DnsQClass Internet
  DnsQClass IN
  DnsQClass CSNET
  DnsQClass CS
  DnsQClass CHAOS
  DnsQClass CH
  DnsQClass Hesiod
  DnsQClass HS
  DnsQClass None
  DnsQClass Any
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.DnsQType
Наследуется от: Enum
Поля:
  ushort value__
  DnsQType A
  DnsQType NS
  DnsQType MD
  DnsQType MF
  DnsQType CNAME
  DnsQType SOA
  DnsQType MB
  DnsQType MG
  DnsQType MR
  DnsQType NULL
  DnsQType WKS
  DnsQType PTR
  DnsQType HINFO
  DnsQType MINFO
  DnsQType MX
  DnsQType TXT
  DnsQType RP
  DnsQType AFSDB
  DnsQType X25
  DnsQType ISDN
  DnsQType RT
  DnsQType NSAP
  DnsQType NSAPPTR
  DnsQType SIG
  DnsQType KEY
  DnsQType PX
  DnsQType GPOS
  DnsQType AAAA
  DnsQType LOC
  DnsQType NXT
  DnsQType EID
  DnsQType NIMLOC
  DnsQType SRV
  DnsQType ATMA
  DnsQType NAPTR
  DnsQType KX
  DnsQType CERT
  DnsQType A6
  DnsQType DNAME
  DnsQType SINK
  DnsQType OPT
  DnsQType APL
  DnsQType DS
  DnsQType SSHFP
  DnsQType IPSECKEY
  DnsQType RRSIG
  DnsQType NSEC
  DnsQType DNSKEY
  DnsQType DHCID
  DnsQType NSEC3
  DnsQType NSEC3PARAM
  DnsQType HIP
  DnsQType NINFO
  DnsQType RKEY
  DnsQType TALINK
  DnsQType SPF
  DnsQType UINFO
  DnsQType UID
  DnsQType GID
  DnsQType UNSPEC
  DnsQType TKEY
  DnsQType TSIG
  DnsQType IXFR
  DnsQType AXFR
  DnsQType MAILB
  DnsQType MAILA
  DnsQType ALL
  DnsQType URI
  DnsQType TA
  DnsQType DLV
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.DnsQuery
Наследуется от: DnsPacket
Поля:
Свойства:
Методы:
  void .ctor(string name, DnsQType qtype, DnsQClass qclass)
--------------------------------------------------
Класс: Mono.Net.Dns.DnsQuestion
Наследуется от: object
Поля:
  string name
  DnsQType type
  DnsQClass _class
Свойства:
  string Name
  DnsQType Type
  DnsQClass Class
Методы:
  void .ctor()
  int Init(DnsPacket packet, int offset)
  string get_Name()
  DnsQType get_Type()
  DnsQClass get_Class()
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsRCode
Наследуется от: Enum
Поля:
  ushort value__
  DnsRCode NoError
  DnsRCode FormErr
  DnsRCode ServFail
  DnsRCode NXDomain
  DnsRCode NotImp
  DnsRCode Refused
  DnsRCode YXDomain
  DnsRCode YXRRSet
  DnsRCode NXRRSet
  DnsRCode NotAuth
  DnsRCode NotZone
  DnsRCode BadVers
  DnsRCode BadSig
  DnsRCode BadKey
  DnsRCode BadTime
  DnsRCode BadMode
  DnsRCode BadName
  DnsRCode BadAlg
  DnsRCode BadTrunc
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResourceRecord
Наследуется от: object
Поля:
  string name
  DnsType type
  DnsClass klass
  int ttl
  ushort rdlength
  ArraySegment`1<byte> m_rdata
Свойства:
  string Name
  DnsType Type
  DnsClass Class
  int Ttl
  ArraySegment`1<byte> Data
Методы:
  void .ctor()
  void CopyFrom(DnsResourceRecord rr)
  DnsResourceRecord CreateFromBuffer(DnsPacket packet, int size, Int32& offset)
  string get_Name()
  DnsType get_Type()
  DnsClass get_Class()
  int get_Ttl()
  ArraySegment`1<byte> get_Data()
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResourceRecordA
Наследуется от: DnsResourceRecordIPAddress
Поля:
Свойства:
Методы:
  void .ctor(DnsResourceRecord rr)
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResourceRecordAAAA
Наследуется от: DnsResourceRecordIPAddress
Поля:
Свойства:
Методы:
  void .ctor(DnsResourceRecord rr)
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResourceRecordCName
Наследуется от: DnsResourceRecord
Поля:
  string cname
Свойства:
  string CName
Методы:
  void .ctor(DnsResourceRecord rr)
  string get_CName()
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResourceRecordIPAddress
Наследуется от: DnsResourceRecord
Поля:
  IPAddress address
Свойства:
  IPAddress Address
Методы:
  void .ctor(DnsResourceRecord rr, int address_size)
  string ToString()
  IPAddress get_Address()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResourceRecordPTR
Наследуется от: DnsResourceRecord
Поля:
  string dname
Свойства:
  string DName
Методы:
  void .ctor(DnsResourceRecord rr)
  string get_DName()
  string ToString()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsResponse
Наследуется от: DnsPacket
Поля:
  ReadOnlyCollection`1<DnsResourceRecord> EmptyRR
  ReadOnlyCollection`1<DnsQuestion> EmptyQS
  ReadOnlyCollection`1<DnsQuestion> question
  ReadOnlyCollection`1<DnsResourceRecord> answer
  ReadOnlyCollection`1<DnsResourceRecord> authority
  ReadOnlyCollection`1<DnsResourceRecord> additional
  int offset
Свойства:
Методы:
  void .ctor(Byte[] buffer, int length)
  void Reset()
  ReadOnlyCollection`1<DnsResourceRecord> GetRRs(int count)
  ReadOnlyCollection`1<DnsQuestion> GetQuestions(int count)
  ReadOnlyCollection`1<DnsQuestion> GetQuestions()
  ReadOnlyCollection`1<DnsResourceRecord> GetAnswers()
  ReadOnlyCollection`1<DnsResourceRecord> GetAuthority()
  ReadOnlyCollection`1<DnsResourceRecord> GetAdditional()
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: Mono.Net.Dns.DnsType
Наследуется от: Enum
Поля:
  ushort value__
  DnsType A
  DnsType NS
  DnsType MD
  DnsType MF
  DnsType CNAME
  DnsType SOA
  DnsType MB
  DnsType MG
  DnsType MR
  DnsType NULL
  DnsType WKS
  DnsType PTR
  DnsType HINFO
  DnsType MINFO
  DnsType MX
  DnsType TXT
  DnsType RP
  DnsType AFSDB
  DnsType X25
  DnsType ISDN
  DnsType RT
  DnsType NSAP
  DnsType NSAPPTR
  DnsType SIG
  DnsType KEY
  DnsType PX
  DnsType GPOS
  DnsType AAAA
  DnsType LOC
  DnsType NXT
  DnsType EID
  DnsType NIMLOC
  DnsType SRV
  DnsType ATMA
  DnsType NAPTR
  DnsType KX
  DnsType CERT
  DnsType A6
  DnsType DNAME
  DnsType SINK
  DnsType OPT
  DnsType APL
  DnsType DS
  DnsType SSHFP
  DnsType IPSECKEY
  DnsType RRSIG
  DnsType NSEC
  DnsType DNSKEY
  DnsType DHCID
  DnsType NSEC3
  DnsType NSEC3PARAM
  DnsType HIP
  DnsType NINFO
  DnsType RKEY
  DnsType TALINK
  DnsType SPF
  DnsType UINFO
  DnsType UID
  DnsType GID
  DnsType UNSPEC
  DnsType TKEY
  DnsType TSIG
  DnsType IXFR
  DnsType AXFR
  DnsType MAILB
  DnsType MAILA
  DnsType URI
  DnsType TA
  DnsType DLV
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.DnsUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsValidDnsName(string name)
  int GetEncodedLength(string name)
  int GetNameLength(Byte[] buffer)
  int GetNameLength(Byte[] buffer, int offset)
  string ReadName(Byte[] buffer, Int32& offset)
--------------------------------------------------
Класс: Mono.Net.Dns.ResolverAsyncOperation
Наследуется от: Enum
Поля:
  int value__
  ResolverAsyncOperation None
  ResolverAsyncOperation GetHostEntry
  ResolverAsyncOperation GetHostAddresses
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.ResolverError
Наследуется от: Enum
Поля:
  int value__
  ResolverError NoError
  ResolverError FormatError
  ResolverError ServerFailure
  ResolverError NameError
  ResolverError NotImplemented
  ResolverError Refused
  ResolverError ResponseHeaderError
  ResolverError ResponseFormatError
  ResolverError Timeout
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Net.Dns.SimpleResolver
Наследуется от: object
Поля:
  String[] EmptyStrings
  IPAddress[] EmptyAddresses
  IPEndPoint[] endpoints
  Socket client
  Dictionary`2<int, SimpleResolverEventArgs> queries
  AsyncCallback receive_cb
  TimerCallback timeout_cb
  bool disposed
Свойства:
Методы:
  void .ctor()
  void System.IDisposable.Dispose()
  void Close()
  void GetLocalHost(SimpleResolverEventArgs args)
  bool GetHostAddressesAsync(SimpleResolverEventArgs args)
  bool GetHostEntryAsync(SimpleResolverEventArgs args)
  bool AddQuery(DnsQuery query, SimpleResolverEventArgs args)
  DnsQuery GetQuery(string host, DnsQType q, DnsQClass c)
  void SendAQuery(SimpleResolverEventArgs args, bool add_it)
  void SendAQuery(SimpleResolverEventArgs args, string host, bool add_it)
  string GetPTRName(IPAddress address)
  void SendPTRQuery(SimpleResolverEventArgs args, bool add_it)
  void SendQuery(SimpleResolverEventArgs args, DnsQuery query, bool add_it)
  Byte[] GetFreshBuffer()
  void FreeBuffer(Byte[] buffer)
  void InitSocket()
  void BeginReceive()
  void OnTimeout(object obj)
  void OnReceive(IAsyncResult ares)
  void ProcessResponse(SimpleResolverEventArgs args, DnsResponse response, EndPoint server_ep)
  void InitFromSystem()
  void .cctor()
--------------------------------------------------
Класс: Mono.Net.Dns.SimpleResolverEventArgs
Наследуется от: EventArgs
Поля:
  EventHandler`1<SimpleResolverEventArgs> Completed
  ResolverError <ResolverError>k__BackingField
  string <ErrorMessage>k__BackingField
  ResolverAsyncOperation LastOperation
  string <HostName>k__BackingField
  IPHostEntry <HostEntry>k__BackingField
  object <UserToken>k__BackingField
  ushort QueryID
  ushort Retries
  Timer Timer
  IPAddress PTRAddress
Свойства:
  ResolverError ResolverError
  string ErrorMessage
  string HostName
  IPHostEntry HostEntry
  object UserToken
Методы:
  void add_Completed(EventHandler`1<SimpleResolverEventArgs> value)
  void remove_Completed(EventHandler`1<SimpleResolverEventArgs> value)
  void .ctor()
  ResolverError get_ResolverError()
  void set_ResolverError(ResolverError value)
  string get_ErrorMessage()
  void set_ErrorMessage(string value)
  string get_HostName()
  void set_HostName(string value)
  IPHostEntry get_HostEntry()
  void set_HostEntry(IPHostEntry value)
  object get_UserToken()
  void set_UserToken(object value)
  void Reset(ResolverAsyncOperation op)
  void OnCompleted(object sender)
--------------------------------------------------
Класс: Mono.Http.NtlmSession
Наследуется от: object
Поля:
  MessageBase message
Свойства:
Методы:
  void .ctor()
  Authorization Authenticate(string challenge, WebRequest webRequest, ICredentials credentials)
--------------------------------------------------
Класс: Mono.Http.NtlmClient
Наследуется от: object
Поля:
  ConditionalWeakTable`2<HttpWebRequest, NtlmSession> cache
Свойства:
  string AuthenticationType
  bool CanPreAuthenticate
Методы:
  Authorization Authenticate(string challenge, WebRequest webRequest, ICredentials credentials)
  Authorization PreAuthenticate(WebRequest webRequest, ICredentials credentials)
  string get_AuthenticationType()
  bool get_CanPreAuthenticate()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsBio
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringBioHandle Handle
Методы:
  void .ctor(BoringBioHandle handle)
  BoringBioHandle get_Handle()
  MonoBtlsBio CreateMonoStream(Stream stream)
  int mono_btls_bio_read(IntPtr bio, IntPtr data, int len)
  int mono_btls_bio_write(IntPtr bio, IntPtr data, int len)
  int mono_btls_bio_flush(IntPtr bio)
  int mono_btls_bio_indent(IntPtr bio, UInt32 indent, UInt32 max_indent)
  int mono_btls_bio_hexdump(IntPtr bio, IntPtr data, int len, UInt32 indent)
  void mono_btls_bio_print_errors(IntPtr bio)
  void mono_btls_bio_free(IntPtr handle)
  int Read(Byte[] buffer, int offset, int size)
  int Write(Byte[] buffer, int offset, int size)
  int Flush()
  int Indent(UInt32 indent, UInt32 max_indent)
  int HexDump(Byte[] buffer, UInt32 indent)
  void PrintErrors()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsBioMemory
Наследуется от: MonoBtlsBio
Поля:
Свойства:
Методы:
  IntPtr mono_btls_bio_mem_new()
  int mono_btls_bio_mem_get_data(IntPtr handle, IntPtr& data)
  void .ctor()
  Byte[] GetData()
--------------------------------------------------
Класс: Mono.Btls.IMonoBtlsBioMono
Поля:
Свойства:
Методы:
  int Read(Byte[] buffer, int offset, int size, Boolean& wantMore)
  bool Write(Byte[] buffer, int offset, int size)
  void Flush()
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsBioMono
Наследуется от: MonoBtlsBio
Поля:
  GCHandle handle
  IntPtr instance
  BioReadFunc readFunc
  BioWriteFunc writeFunc
  BioControlFunc controlFunc
  IntPtr readFuncPtr
  IntPtr writeFuncPtr
  IntPtr controlFuncPtr
  IMonoBtlsBioMono backend
Свойства:
Методы:
  void .ctor(IMonoBtlsBioMono backend)
  MonoBtlsBioMono CreateStream(Stream stream, bool ownsStream)
  MonoBtlsBioMono CreateString(StringWriter writer)
  IntPtr mono_btls_bio_mono_new()
  void mono_btls_bio_mono_initialize(IntPtr handle, IntPtr instance, IntPtr readFunc, IntPtr writeFunc, IntPtr controlFunc)
  long Control(ControlCommand command, long arg)
  int OnRead(IntPtr data, int dataLength, Int32& wantMore)
  int OnRead(IntPtr instance, IntPtr data, int dataLength, Int32& wantMore)
  int OnWrite(IntPtr data, int dataLength)
  int OnWrite(IntPtr instance, IntPtr data, int dataLength)
  long Control(IntPtr instance, ControlCommand command, long arg)
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsContext
Наследуется от: MobileTlsContext
Поля:
  X509Certificate2 remoteCertificate
  X509Certificate clientCertificate
  X509CertificateImplBtls nativeServerCertificate
  X509CertificateImplBtls nativeClientCertificate
  MonoBtlsSslCtx ctx
  MonoBtlsSsl ssl
  MonoBtlsBio bio
  MonoBtlsBio errbio
  MonoTlsConnectionInfo connectionInfo
  bool certificateValidated
  bool isAuthenticated
  bool connected
Свойства:
  MonoBtlsProvider Provider
  bool CanRenegotiate
  bool HasContext
  bool IsAuthenticated
  MonoTlsConnectionInfo ConnectionInfo
  bool IsRemoteCertificateAvailable
  X509Certificate LocalClientCertificate
  X509Certificate2 RemoteCertificate
  TlsProtocols NegotiatedProtocol
Методы:
  void .ctor(MobileAuthenticatedStream parent, MonoSslAuthenticationOptions options)
  X509CertificateImplBtls GetPrivateCertificate(X509Certificate certificate)
  MonoBtlsProvider get_Provider()
  int VerifyCallback(MonoBtlsX509StoreCtx storeCtx)
  int SelectCallback(String[] acceptableIssuers)
  int ServerNameCallback()
  void StartHandshake()
  void SetPrivateCertificate(X509CertificateImplBtls privateCert)
  Exception GetException(MonoBtlsSslError status)
  bool ProcessHandshake()
  MonoBtlsSslError DoProcessHandshake()
  void FinishHandshake()
  void InitializeConnection()
  void GetPeerCertificate()
  void InitializeSession()
  TlsProtocols GetProtocol(TlsProtocolCode protocol)
  void Flush()
  ValueTuple`2<int, bool> Read(Byte[] buffer, int offset, int size)
  ValueTuple`2<int, bool> Write(Byte[] buffer, int offset, int size)
  bool get_CanRenegotiate()
  void Renegotiate()
  void Shutdown()
  bool PendingRenegotiation()
  void Dispose(T& disposable)
  void Dispose(bool disposing)
  int Mono.Btls.IMonoBtlsBioMono.Read(Byte[] buffer, int offset, int size, Boolean& wantMore)
  bool Mono.Btls.IMonoBtlsBioMono.Write(Byte[] buffer, int offset, int size)
  void Mono.Btls.IMonoBtlsBioMono.Flush()
  void Mono.Btls.IMonoBtlsBioMono.Close()
  bool get_HasContext()
  bool get_IsAuthenticated()
  MonoTlsConnectionInfo get_ConnectionInfo()
  bool get_IsRemoteCertificateAvailable()
  X509Certificate get_LocalClientCertificate()
  X509Certificate2 get_RemoteCertificate()
  TlsProtocols get_NegotiatedProtocol()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsError
Наследуется от: object
Поля:
Свойства:
Методы:
  int mono_btls_error_peek_error()
  int mono_btls_error_get_error()
  void mono_btls_error_clear_error()
  int mono_btls_error_peek_error_line(IntPtr& file, Int32& line)
  int mono_btls_error_get_error_line(IntPtr& file, Int32& line)
  void mono_btls_error_get_error_string_n(int error, IntPtr buf, int len)
  int mono_btls_error_get_reason(int error)
  int PeekError()
  int GetError()
  void ClearError()
  string GetErrorString(int error)
  int PeekError(String& file, Int32& line)
  int GetError(String& file, Int32& line)
  int GetErrorReason(int error)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(MonoBtlsSslError error)
  void .ctor(string message)
  void .ctor(string format, Object[] args)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsKey
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringKeyHandle Handle
  bool IsRsa
Методы:
  IntPtr mono_btls_key_new()
  void mono_btls_key_free(IntPtr handle)
  IntPtr mono_btls_key_up_ref(IntPtr handle)
  int mono_btls_key_get_bytes(IntPtr handle, IntPtr& data, Int32& size, int include_private_bits)
  int mono_btls_key_get_bits(IntPtr handle)
  int mono_btls_key_is_rsa(IntPtr handle)
  int mono_btls_key_assign_rsa_private_key(IntPtr handle, Byte[] der, int der_length)
  BoringKeyHandle get_Handle()
  void .ctor(BoringKeyHandle handle)
  Byte[] GetBytes(bool include_private_bits)
  bool get_IsRsa()
  MonoBtlsKey Copy()
  MonoBtlsKey CreateFromRSAPrivateKey(RSA privateKey)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsObject
Наследуется от: object
Поля:
  string BTLS_DYLIB
  MonoBtlsHandle handle
  Exception lastError
Свойства:
  MonoBtlsHandle Handle
  bool IsValid
Методы:
  void .ctor(MonoBtlsHandle handle)
  MonoBtlsHandle get_Handle()
  bool get_IsValid()
  void CheckThrow()
  Exception SetException(Exception ex)
  void CheckError(bool ok, string callerName)
  void CheckError(int ret, string callerName)
  void CheckLastError(string callerName)
  void mono_btls_free(IntPtr data)
  void FreeDataPtr(IntPtr data)
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  void Finalize()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsPkcs12
Наследуется от: MonoBtlsObject
Поля:
  MonoBtlsKey privateKey
Свойства:
  BoringPkcs12Handle Handle
  int Count
  bool HasPrivateKey
Методы:
  BoringPkcs12Handle get_Handle()
  void mono_btls_pkcs12_free(IntPtr handle)
  IntPtr mono_btls_pkcs12_new()
  int mono_btls_pkcs12_get_count(IntPtr handle)
  IntPtr mono_btls_pkcs12_get_cert(IntPtr Handle, int index)
  int mono_btls_pkcs12_add_cert(IntPtr chain, IntPtr x509)
  int mono_btls_pkcs12_import(IntPtr chain, Void* data, int len, SafePasswordHandle password)
  int mono_btls_pkcs12_has_private_key(IntPtr pkcs12)
  IntPtr mono_btls_pkcs12_get_private_key(IntPtr pkcs12)
  void .ctor()
  void .ctor(BoringPkcs12Handle handle)
  int get_Count()
  MonoBtlsX509 GetCertificate(int index)
  void AddCertificate(MonoBtlsX509 x509)
  void Import(Byte[] buffer, SafePasswordHandle password)
  bool get_HasPrivateKey()
  MonoBtlsKey GetPrivateKey()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsProvider
Наследуется от: MobileTlsProvider
Поля:
Свойства:
  Guid ID
  string Name
  bool SupportsSslStream
  bool SupportsMonoExtensions
  bool SupportsConnectionInfo
  bool SupportsCleanShutdown
  SslProtocols SupportedProtocols
  bool HasNativeCertificates
Методы:
  Guid get_ID()
  string get_Name()
  void .ctor()
  bool get_SupportsSslStream()
  bool get_SupportsMonoExtensions()
  bool get_SupportsConnectionInfo()
  bool get_SupportsCleanShutdown()
  SslProtocols get_SupportedProtocols()
  MobileAuthenticatedStream CreateSslStream(SslStream sslStream, Stream innerStream, bool leaveInnerStreamOpen, MonoTlsSettings settings)
  bool get_HasNativeCertificates()
  X509Certificate2Impl GetNativeCertificate(Byte[] data, string password, X509KeyStorageFlags flags)
  X509Certificate2Impl GetNativeCertificate(X509Certificate certificate)
  X509Certificate2Impl GetNativeCertificate(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags flags)
  MonoBtlsX509VerifyParam GetVerifyParam(MonoTlsSettings settings, string targetHost, bool serverMode)
  bool ValidateCertificate(ChainValidationHelper validator, string targetHost, bool serverMode, X509CertificateCollection certificates, bool wantsChain, X509Chain& chain, SslPolicyErrors& errors, Int32& status11)
  bool ValidateCertificate(MonoBtlsX509Chain chain, MonoBtlsX509VerifyParam param)
  void CheckValidationResult(ChainValidationHelper validator, string targetHost, bool serverMode, X509CertificateCollection certificates, bool wantsChain, X509Chain chain, MonoBtlsX509StoreCtx storeCtx, bool success, SslPolicyErrors& errors, Int32& status11)
  X509ChainStatusFlags MapVerifyErrorToChainStatus(MonoBtlsX509Error code)
  void SetupCertificateStore(MonoBtlsX509Store store, MonoTlsSettings settings, bool server)
  void SetupDefaultCertificateStore(MonoBtlsX509Store store)
  void AddUserStore(MonoBtlsX509Store store)
  void AddMachineStore(MonoBtlsX509Store store)
  void AddTrustedRoots(MonoBtlsX509Store store, MonoTlsSettings settings, bool server)
  string GetSystemStoreLocation()
  X509Certificate2 CreateCertificate(Byte[] data, MonoBtlsX509Format format)
  X509Certificate2 CreateCertificate(Byte[] data, string password, bool disallowFallback)
  X509Certificate2 CreateCertificate(MonoBtlsX509 x509)
  X509Chain CreateChain()
  X509Chain GetManagedChain(MonoBtlsX509Chain chain)
  MonoBtlsX509 GetBtlsCertificate(X509Certificate certificate)
  MonoBtlsX509Chain GetNativeChain(X509CertificateCollection certificates)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsVerifyCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  int Invoke(MonoBtlsX509StoreCtx ctx)
  IAsyncResult BeginInvoke(MonoBtlsX509StoreCtx ctx, AsyncCallback callback, object object)
  int EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsSelectCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  int Invoke(String[] acceptableIssuers)
  IAsyncResult BeginInvoke(String[] acceptableIssuers, AsyncCallback callback, object object)
  int EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsServerNameCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  int Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  int EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsSsl
Наследуется от: MonoBtlsObject
Поля:
  MonoBtlsBio bio
  PrintErrorsCallbackFunc printErrorsFunc
  IntPtr printErrorsFuncPtr
Свойства:
  BoringSslHandle Handle
Методы:
  void mono_btls_ssl_destroy(IntPtr handle)
  IntPtr mono_btls_ssl_new(IntPtr handle)
  int mono_btls_ssl_use_certificate(IntPtr handle, IntPtr x509)
  int mono_btls_ssl_use_private_key(IntPtr handle, IntPtr key)
  int mono_btls_ssl_add_chain_certificate(IntPtr handle, IntPtr x509)
  int mono_btls_ssl_accept(IntPtr handle)
  int mono_btls_ssl_connect(IntPtr handle)
  int mono_btls_ssl_handshake(IntPtr handle)
  void mono_btls_ssl_close(IntPtr handle)
  int mono_btls_ssl_shutdown(IntPtr handle)
  void mono_btls_ssl_set_quiet_shutdown(IntPtr handle, int mode)
  void mono_btls_ssl_set_bio(IntPtr handle, IntPtr bio)
  int mono_btls_ssl_read(IntPtr handle, IntPtr data, int len)
  int mono_btls_ssl_write(IntPtr handle, IntPtr data, int len)
  int mono_btls_ssl_get_error(IntPtr handle, int ret_code)
  int mono_btls_ssl_get_version(IntPtr handle)
  void mono_btls_ssl_set_min_version(IntPtr handle, int version)
  void mono_btls_ssl_set_max_version(IntPtr handle, int version)
  int mono_btls_ssl_get_cipher(IntPtr handle)
  int mono_btls_ssl_get_ciphers(IntPtr handle, IntPtr& data)
  IntPtr mono_btls_ssl_get_peer_certificate(IntPtr handle)
  int mono_btls_ssl_set_cipher_list(IntPtr handle, IntPtr str)
  void mono_btls_ssl_print_errors_cb(IntPtr func, IntPtr ctx)
  int mono_btls_ssl_set_verify_param(IntPtr handle, IntPtr param)
  int mono_btls_ssl_set_server_name(IntPtr handle, IntPtr name)
  IntPtr mono_btls_ssl_get_server_name(IntPtr handle)
  void mono_btls_ssl_set_renegotiate_mode(IntPtr handle, int mode)
  int mono_btls_ssl_renegotiate_pending(IntPtr handle)
  BoringSslHandle Create_internal(MonoBtlsSslCtx ctx)
  void .ctor(MonoBtlsSslCtx ctx)
  BoringSslHandle get_Handle()
  void SetBio(MonoBtlsBio bio)
  Exception ThrowError(string callerName)
  MonoBtlsSslError GetError(int ret_code)
  void SetCertificate(MonoBtlsX509 x509)
  void SetPrivateKey(MonoBtlsKey key)
  void AddIntermediateCertificate(MonoBtlsX509 x509)
  MonoBtlsSslError Accept()
  MonoBtlsSslError Connect()
  MonoBtlsSslError Handshake()
  int PrintErrorsCallback(IntPtr str, IntPtr len, IntPtr ctx)
  string GetErrors()
  void PrintErrors()
  MonoBtlsSslError Read(IntPtr data, Int32& dataSize)
  MonoBtlsSslError Write(IntPtr data, Int32& dataSize)
  int GetVersion()
  void SetMinVersion(int version)
  void SetMaxVersion(int version)
  int GetCipher()
  Int16[] GetCiphers()
  void SetCipherList(string str)
  MonoBtlsX509 GetPeerCertificate()
  void SetVerifyParam(MonoBtlsX509VerifyParam param)
  void SetServerName(string name)
  string GetServerName()
  void Shutdown()
  void SetQuietShutdown()
  void Close()
  void SetRenegotiateMode(MonoBtlsSslRenegotiateMode mode)
  bool RenegotiatePending()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsSslCtx
Наследуется от: MonoBtlsObject
Поля:
  NativeVerifyFunc verifyFunc
  NativeSelectFunc selectFunc
  NativeServerNameFunc serverNameFunc
  IntPtr verifyFuncPtr
  IntPtr selectFuncPtr
  IntPtr serverNameFuncPtr
  MonoBtlsVerifyCallback verifyCallback
  MonoBtlsSelectCallback selectCallback
  MonoBtlsServerNameCallback serverNameCallback
  MonoBtlsX509Store store
  GCHandle instance
  IntPtr instancePtr
Свойства:
  BoringSslCtxHandle Handle
  MonoBtlsX509Store CertificateStore
Методы:
  BoringSslCtxHandle get_Handle()
  IntPtr mono_btls_ssl_ctx_new()
  int mono_btls_ssl_ctx_free(IntPtr handle)
  IntPtr mono_btls_ssl_ctx_up_ref(IntPtr handle)
  void mono_btls_ssl_ctx_initialize(IntPtr handle, IntPtr instance)
  void mono_btls_ssl_ctx_set_debug_bio(IntPtr handle, IntPtr bio)
  void mono_btls_ssl_ctx_set_cert_verify_callback(IntPtr handle, IntPtr func, int cert_required)
  void mono_btls_ssl_ctx_set_cert_select_callback(IntPtr handle, IntPtr func)
  void mono_btls_ssl_ctx_set_min_version(IntPtr handle, int version)
  void mono_btls_ssl_ctx_set_max_version(IntPtr handle, int version)
  int mono_btls_ssl_ctx_is_cipher_supported(IntPtr handle, short value)
  int mono_btls_ssl_ctx_set_ciphers(IntPtr handle, int count, IntPtr data, int allow_unsupported)
  int mono_btls_ssl_ctx_set_verify_param(IntPtr handle, IntPtr param)
  int mono_btls_ssl_ctx_set_client_ca_list(IntPtr handle, int count, IntPtr sizes, IntPtr data)
  void mono_btls_ssl_ctx_set_server_name_callback(IntPtr handle, IntPtr func)
  void .ctor()
  void .ctor(BoringSslCtxHandle handle)
  MonoBtlsSslCtx Copy()
  MonoBtlsX509Store get_CertificateStore()
  int VerifyCallback(bool preverify_ok, MonoBtlsX509StoreCtx ctx)
  int NativeVerifyCallback(IntPtr instance, int preverify_ok, IntPtr store_ctx)
  int NativeSelectCallback(IntPtr instance, int count, IntPtr sizes, IntPtr data)
  String[] CopyIssuers(int count, IntPtr sizesPtr, IntPtr dataPtr)
  void SetDebugBio(MonoBtlsBio bio)
  void SetVerifyCallback(MonoBtlsVerifyCallback callback, bool client_cert_required)
  void SetSelectCallback(MonoBtlsSelectCallback callback)
  void SetMinVersion(int version)
  void SetMaxVersion(int version)
  bool IsCipherSupported(short value)
  void SetCiphers(Int16[] ciphers, bool allow_unsupported)
  void SetVerifyParam(MonoBtlsX509VerifyParam param)
  void SetClientCertificateIssuers(String[] acceptableIssuers)
  void SetServerNameCallback(MonoBtlsServerNameCallback callback)
  int NativeServerNameCallback(IntPtr instance)
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsSslError
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsSslError None
  MonoBtlsSslError Ssl
  MonoBtlsSslError WantRead
  MonoBtlsSslError WantWrite
  MonoBtlsSslError WantX509Lookup
  MonoBtlsSslError Syscall
  MonoBtlsSslError ZeroReturn
  MonoBtlsSslError WantConnect
  MonoBtlsSslError WantAccept
  MonoBtlsSslError WantChannelIdLookup
  MonoBtlsSslError PendingSession
  MonoBtlsSslError PendingCertificate
  MonoBtlsSslError WantPrivateKeyOperation
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsSslRenegotiateMode
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsSslRenegotiateMode NEVER
  MonoBtlsSslRenegotiateMode ONCE
  MonoBtlsSslRenegotiateMode FREELY
  MonoBtlsSslRenegotiateMode IGNORE
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsStream
Наследуется от: MobileAuthenticatedStream
Поля:
Свойства:
Методы:
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, SslStream owner, MonoTlsSettings settings, MobileTlsProvider provider)
  MobileTlsContext CreateContext(MonoSslAuthenticationOptions options)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsUtils
Наследуется от: object
Поля:
  Byte[] emailOid
  X500DistinguishedNameFlags AllFlags
Свойства:
Методы:
  bool Compare(Byte[] a, Byte[] b)
  bool AppendEntry(StringBuilder sb, MonoBtlsX509Name name, int index, string separator, bool quotes)
  string GetSeparator(X500DistinguishedNameFlags flag)
  string FormatName(MonoBtlsX509Name name, X500DistinguishedNameFlags flag)
  string FormatName(MonoBtlsX509Name name, bool reversed, string separator, bool quotes)
  void .cctor()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringX509Handle Handle
Методы:
  BoringX509Handle get_Handle()
  void .ctor(BoringX509Handle handle)
  IntPtr mono_btls_x509_up_ref(IntPtr handle)
  IntPtr mono_btls_x509_from_data(IntPtr data, int len, MonoBtlsX509Format format)
  IntPtr mono_btls_x509_get_subject_name(IntPtr handle)
  IntPtr mono_btls_x509_get_issuer_name(IntPtr handle)
  int mono_btls_x509_get_subject_name_string(IntPtr handle, IntPtr buffer, int size)
  int mono_btls_x509_get_issuer_name_string(IntPtr handle, IntPtr buffer, int size)
  int mono_btls_x509_get_raw_data(IntPtr handle, IntPtr bio, MonoBtlsX509Format format)
  int mono_btls_x509_cmp(IntPtr a, IntPtr b)
  int mono_btls_x509_get_hash(IntPtr handle, IntPtr& data)
  long mono_btls_x509_get_not_before(IntPtr handle)
  long mono_btls_x509_get_not_after(IntPtr handle)
  int mono_btls_x509_get_public_key(IntPtr handle, IntPtr bio)
  int mono_btls_x509_get_serial_number(IntPtr handle, IntPtr data, int size, int mono_style)
  int mono_btls_x509_get_version(IntPtr handle)
  int mono_btls_x509_get_signature_algorithm(IntPtr handle, IntPtr buffer, int size)
  int mono_btls_x509_get_public_key_asn1(IntPtr handle, IntPtr oid, int oid_size, IntPtr& data, Int32& size)
  int mono_btls_x509_get_public_key_parameters(IntPtr handle, IntPtr oid, int oid_size, IntPtr& data, Int32& size)
  IntPtr mono_btls_x509_get_pubkey(IntPtr handle)
  int mono_btls_x509_get_subject_key_identifier(IntPtr handle, IntPtr& data, Int32& size)
  int mono_btls_x509_print(IntPtr handle, IntPtr bio)
  void mono_btls_x509_free(IntPtr handle)
  IntPtr mono_btls_x509_dup(IntPtr handle)
  int mono_btls_x509_add_trust_object(IntPtr handle, MonoBtlsX509Purpose purpose)
  int mono_btls_x509_add_reject_object(IntPtr handle, MonoBtlsX509Purpose purpose)
  int mono_btls_x509_add_explicit_trust(IntPtr handle, MonoBtlsX509TrustKind kind)
  MonoBtlsX509 Copy()
  MonoBtlsX509 Duplicate()
  MonoBtlsX509 LoadFromData(Byte[] buffer, MonoBtlsX509Format format)
  MonoBtlsX509Name GetSubjectName()
  string GetSubjectNameString()
  long GetSubjectNameHash()
  MonoBtlsX509Name GetIssuerName()
  string GetIssuerNameString()
  Byte[] GetRawData(MonoBtlsX509Format format)
  void GetRawData(MonoBtlsBio bio, MonoBtlsX509Format format)
  int Compare(MonoBtlsX509 a, MonoBtlsX509 b)
  Byte[] GetCertHash()
  DateTime GetNotBefore()
  DateTime GetNotAfter()
  Byte[] GetPublicKeyData()
  Byte[] GetSerialNumber(bool mono_style)
  int GetVersion()
  string GetSignatureAlgorithm()
  AsnEncodedData GetPublicKeyAsn1()
  AsnEncodedData GetPublicKeyParameters()
  Byte[] GetSubjectKeyIdentifier()
  MonoBtlsKey GetPublicKey()
  void Print(MonoBtlsBio bio)
  void ExportAsPEM(MonoBtlsBio bio, bool includeHumanReadableForm)
  void AddTrustObject(MonoBtlsX509Purpose purpose)
  void AddRejectObject(MonoBtlsX509Purpose purpose)
  void AddExplicitTrust(MonoBtlsX509TrustKind kind)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Chain
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringX509ChainHandle Handle
  int Count
Методы:
  BoringX509ChainHandle get_Handle()
  IntPtr mono_btls_x509_chain_new()
  int mono_btls_x509_chain_get_count(IntPtr handle)
  IntPtr mono_btls_x509_chain_get_cert(IntPtr Handle, int index)
  int mono_btls_x509_chain_add_cert(IntPtr chain, IntPtr x509)
  IntPtr mono_btls_x509_chain_up_ref(IntPtr handle)
  void mono_btls_x509_chain_free(IntPtr handle)
  void .ctor()
  void .ctor(BoringX509ChainHandle handle)
  int get_Count()
  MonoBtlsX509 GetCertificate(int index)
  void Dump()
  void AddCertificate(MonoBtlsX509 x509)
  MonoBtlsX509Chain Copy()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Crl
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringX509CrlHandle Handle
Методы:
  BoringX509CrlHandle get_Handle()
  void .ctor(BoringX509CrlHandle handle)
  IntPtr mono_btls_x509_crl_ref(IntPtr handle)
  IntPtr mono_btls_x509_crl_from_data(IntPtr data, int len, MonoBtlsX509Format format)
  IntPtr mono_btls_x509_crl_get_by_cert(IntPtr handle, IntPtr x509)
  IntPtr mono_btls_x509_crl_get_by_serial(IntPtr handle, Void* serial, int len)
  int mono_btls_x509_crl_get_revoked_count(IntPtr handle)
  IntPtr mono_btls_x509_crl_get_revoked(IntPtr handle, int index)
  long mono_btls_x509_crl_get_last_update(IntPtr handle)
  long mono_btls_x509_crl_get_next_update(IntPtr handle)
  long mono_btls_x509_crl_get_version(IntPtr handle)
  IntPtr mono_btls_x509_crl_get_issuer(IntPtr handle)
  void mono_btls_x509_crl_free(IntPtr handle)
  MonoBtlsX509Crl LoadFromData(Byte[] buffer, MonoBtlsX509Format format)
  MonoBtlsX509Revoked GetByCert(MonoBtlsX509 x509)
  MonoBtlsX509Revoked GetBySerial(Byte[] serial)
  int GetRevokedCount()
  MonoBtlsX509Revoked GetRevoked(int index)
  DateTime GetLastUpdate()
  DateTime GetNextUpdate()
  long GetVersion()
  MonoBtlsX509Name GetIssuerName()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Error
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509Error OK
  MonoBtlsX509Error UNABLE_TO_GET_ISSUER_CERT
  MonoBtlsX509Error UNABLE_TO_GET_CRL
  MonoBtlsX509Error UNABLE_TO_DECRYPT_CERT_SIGNATURE
  MonoBtlsX509Error UNABLE_TO_DECRYPT_CRL_SIGNATURE
  MonoBtlsX509Error UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY
  MonoBtlsX509Error CERT_SIGNATURE_FAILURE
  MonoBtlsX509Error CRL_SIGNATURE_FAILURE
  MonoBtlsX509Error CERT_NOT_YET_VALID
  MonoBtlsX509Error CERT_HAS_EXPIRED
  MonoBtlsX509Error CRL_NOT_YET_VALID
  MonoBtlsX509Error CRL_HAS_EXPIRED
  MonoBtlsX509Error ERROR_IN_CERT_NOT_BEFORE_FIELD
  MonoBtlsX509Error ERROR_IN_CERT_NOT_AFTER_FIELD
  MonoBtlsX509Error ERROR_IN_CRL_LAST_UPDATE_FIELD
  MonoBtlsX509Error ERROR_IN_CRL_NEXT_UPDATE_FIELD
  MonoBtlsX509Error OUT_OF_MEM
  MonoBtlsX509Error DEPTH_ZERO_SELF_SIGNED_CERT
  MonoBtlsX509Error SELF_SIGNED_CERT_IN_CHAIN
  MonoBtlsX509Error UNABLE_TO_GET_ISSUER_CERT_LOCALLY
  MonoBtlsX509Error UNABLE_TO_VERIFY_LEAF_SIGNATURE
  MonoBtlsX509Error CERT_CHAIN_TOO_LONG
  MonoBtlsX509Error CERT_REVOKED
  MonoBtlsX509Error INVALID_CA
  MonoBtlsX509Error PATH_LENGTH_EXCEEDED
  MonoBtlsX509Error INVALID_PURPOSE
  MonoBtlsX509Error CERT_UNTRUSTED
  MonoBtlsX509Error CERT_REJECTED
  MonoBtlsX509Error SUBJECT_ISSUER_MISMATCH
  MonoBtlsX509Error AKID_SKID_MISMATCH
  MonoBtlsX509Error AKID_ISSUER_SERIAL_MISMATCH
  MonoBtlsX509Error KEYUSAGE_NO_CERTSIGN
  MonoBtlsX509Error UNABLE_TO_GET_CRL_ISSUER
  MonoBtlsX509Error UNHANDLED_CRITICAL_EXTENSION
  MonoBtlsX509Error KEYUSAGE_NO_CRL_SIGN
  MonoBtlsX509Error UNHANDLED_CRITICAL_CRL_EXTENSION
  MonoBtlsX509Error INVALID_NON_CA
  MonoBtlsX509Error PROXY_PATH_LENGTH_EXCEEDED
  MonoBtlsX509Error KEYUSAGE_NO_DIGITAL_SIGNATURE
  MonoBtlsX509Error PROXY_CERTIFICATES_NOT_ALLOWED
  MonoBtlsX509Error INVALID_EXTENSION
  MonoBtlsX509Error INVALID_POLICY_EXTENSION
  MonoBtlsX509Error NO_EXPLICIT_POLICY
  MonoBtlsX509Error DIFFERENT_CRL_SCOPE
  MonoBtlsX509Error UNSUPPORTED_EXTENSION_FEATURE
  MonoBtlsX509Error UNNESTED_RESOURCE
  MonoBtlsX509Error PERMITTED_VIOLATION
  MonoBtlsX509Error EXCLUDED_VIOLATION
  MonoBtlsX509Error SUBTREE_MINMAX
  MonoBtlsX509Error UNSUPPORTED_CONSTRAINT_TYPE
  MonoBtlsX509Error UNSUPPORTED_CONSTRAINT_SYNTAX
  MonoBtlsX509Error UNSUPPORTED_NAME_SYNTAX
  MonoBtlsX509Error CRL_PATH_VALIDATION_ERROR
  MonoBtlsX509Error SUITE_B_INVALID_VERSION
  MonoBtlsX509Error SUITE_B_INVALID_ALGORITHM
  MonoBtlsX509Error SUITE_B_INVALID_CURVE
  MonoBtlsX509Error SUITE_B_INVALID_SIGNATURE_ALGORITHM
  MonoBtlsX509Error SUITE_B_LOS_NOT_ALLOWED
  MonoBtlsX509Error SUITE_B_CANNOT_SIGN_P_384_WITH_P_256
  MonoBtlsX509Error HOSTNAME_MISMATCH
  MonoBtlsX509Error EMAIL_MISMATCH
  MonoBtlsX509Error IP_ADDRESS_MISMATCH
  MonoBtlsX509Error APPLICATION_VERIFICATION
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Exception
Наследуется от: Exception
Поля:
  MonoBtlsX509Error <ErrorCode>k__BackingField
  string <ErrorMessage>k__BackingField
Свойства:
  MonoBtlsX509Error ErrorCode
  string ErrorMessage
Методы:
  MonoBtlsX509Error get_ErrorCode()
  void set_ErrorCode(MonoBtlsX509Error value)
  string get_ErrorMessage()
  void set_ErrorMessage(string value)
  void .ctor(MonoBtlsX509Error code, string message)
  string ToString()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509FileType
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509FileType PEM
  MonoBtlsX509FileType ASN1
  MonoBtlsX509FileType DEFAULT
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Format
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509Format DER
  MonoBtlsX509Format PEM
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Lookup
Наследуется от: MonoBtlsObject
Поля:
  MonoBtlsX509Store store
  MonoBtlsX509LookupType type
  List`1<MonoBtlsX509LookupMono> monoLookups
Свойства:
  BoringX509LookupHandle Handle
Методы:
  BoringX509LookupHandle get_Handle()
  IntPtr mono_btls_x509_lookup_new(IntPtr store, MonoBtlsX509LookupType type)
  int mono_btls_x509_lookup_load_file(IntPtr handle, IntPtr file, MonoBtlsX509FileType type)
  int mono_btls_x509_lookup_add_dir(IntPtr handle, IntPtr dir, MonoBtlsX509FileType type)
  int mono_btls_x509_lookup_add_mono(IntPtr handle, IntPtr monoLookup)
  int mono_btls_x509_lookup_init(IntPtr handle)
  int mono_btls_x509_lookup_shutdown(IntPtr handle)
  IntPtr mono_btls_x509_lookup_by_subject(IntPtr handle, IntPtr name)
  IntPtr mono_btls_x509_lookup_by_fingerprint(IntPtr handle, IntPtr bytes, int len)
  void mono_btls_x509_lookup_free(IntPtr handle)
  IntPtr mono_btls_x509_lookup_peek_lookup(IntPtr handle)
  BoringX509LookupHandle Create_internal(MonoBtlsX509Store store, MonoBtlsX509LookupType type)
  void .ctor(MonoBtlsX509Store store, MonoBtlsX509LookupType type)
  IntPtr GetNativeLookup()
  void LoadFile(string file, MonoBtlsX509FileType type)
  void AddDirectory(string dir, MonoBtlsX509FileType type)
  void AddMono(MonoBtlsX509LookupMono monoLookup)
  void Initialize()
  void Shutdown()
  MonoBtlsX509 LookupBySubject(MonoBtlsX509Name name)
  MonoBtlsX509 LookupByFingerPrint(Byte[] fingerprint)
  void AddCertificate(MonoBtlsX509 certificate)
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509LookupMono
Наследуется от: MonoBtlsObject
Поля:
  GCHandle gch
  IntPtr instance
  BySubjectFunc bySubjectFunc
  IntPtr bySubjectFuncPtr
  MonoBtlsX509Lookup lookup
Свойства:
  BoringX509LookupMonoHandle Handle
Методы:
  BoringX509LookupMonoHandle get_Handle()
  IntPtr mono_btls_x509_lookup_mono_new()
  void mono_btls_x509_lookup_mono_init(IntPtr handle, IntPtr instance, IntPtr by_subject_func)
  int mono_btls_x509_lookup_mono_free(IntPtr handle)
  void .ctor()
  void Install(MonoBtlsX509Lookup lookup)
  void AddCertificate(MonoBtlsX509 certificate)
  MonoBtlsX509 OnGetBySubject(MonoBtlsX509Name name)
  int OnGetBySubject(IntPtr instance, IntPtr name_ptr, IntPtr& x509_ptr)
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509LookupMonoCollection
Наследуется от: MonoBtlsX509LookupMono
Поля:
  Int64[] hashes
  MonoBtlsX509[] certificates
  X509CertificateCollection collection
  MonoBtlsX509TrustKind trust
Свойства:
Методы:
  void .ctor(X509CertificateCollection collection, MonoBtlsX509TrustKind trust)
  void Initialize()
  MonoBtlsX509 OnGetBySubject(MonoBtlsX509Name name)
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509LookupType
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509LookupType UNKNOWN
  MonoBtlsX509LookupType FILE
  MonoBtlsX509LookupType HASH_DIR
  MonoBtlsX509LookupType MONO
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Name
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringX509NameHandle Handle
Методы:
  int mono_btls_x509_name_print_bio(IntPtr handle, IntPtr bio)
  int mono_btls_x509_name_print_string(IntPtr handle, IntPtr buffer, int size)
  int mono_btls_x509_name_get_raw_data(IntPtr handle, IntPtr& buffer, int use_canon_enc)
  long mono_btls_x509_name_hash(IntPtr handle)
  long mono_btls_x509_name_hash_old(IntPtr handle)
  int mono_btls_x509_name_get_entry_count(IntPtr handle)
  MonoBtlsX509NameEntryType mono_btls_x509_name_get_entry_type(IntPtr name, int index)
  int mono_btls_x509_name_get_entry_oid(IntPtr name, int index, IntPtr buffer, int size)
  int mono_btls_x509_name_get_entry_oid_data(IntPtr name, int index, IntPtr& data)
  int mono_btls_x509_name_get_entry_value(IntPtr name, int index, Int32& tag, IntPtr& str)
  IntPtr mono_btls_x509_name_from_data(Void* data, int len, int use_canon_enc)
  void mono_btls_x509_name_free(IntPtr handle)
  BoringX509NameHandle get_Handle()
  void .ctor(BoringX509NameHandle handle)
  string GetString()
  void PrintBio(MonoBtlsBio bio)
  Byte[] GetRawData(bool use_canon_enc)
  long GetHash()
  long GetHashOld()
  int GetEntryCount()
  MonoBtlsX509NameEntryType GetEntryType(int index)
  string GetEntryOid(int index)
  Byte[] GetEntryOidData(int index)
  string GetEntryValue(int index, Int32& tag)
  MonoBtlsX509Name CreateFromData(Byte[] data, bool use_canon_enc)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509NameEntryType
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509NameEntryType Unknown
  MonoBtlsX509NameEntryType CountryName
  MonoBtlsX509NameEntryType OrganizationName
  MonoBtlsX509NameEntryType OrganizationalUnitName
  MonoBtlsX509NameEntryType CommonName
  MonoBtlsX509NameEntryType LocalityName
  MonoBtlsX509NameEntryType StateOrProvinceName
  MonoBtlsX509NameEntryType StreetAddress
  MonoBtlsX509NameEntryType SerialNumber
  MonoBtlsX509NameEntryType DomainComponent
  MonoBtlsX509NameEntryType UserId
  MonoBtlsX509NameEntryType Email
  MonoBtlsX509NameEntryType DnQualifier
  MonoBtlsX509NameEntryType Title
  MonoBtlsX509NameEntryType Surname
  MonoBtlsX509NameEntryType GivenName
  MonoBtlsX509NameEntryType Initial
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Purpose
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509Purpose SSL_CLIENT
  MonoBtlsX509Purpose SSL_SERVER
  MonoBtlsX509Purpose NS_SSL_SERVER
  MonoBtlsX509Purpose SMIME_SIGN
  MonoBtlsX509Purpose SMIME_ENCRYPT
  MonoBtlsX509Purpose CRL_SIGN
  MonoBtlsX509Purpose ANY
  MonoBtlsX509Purpose OCSP_HELPER
  MonoBtlsX509Purpose TIMESTAMP_SIGN
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Revoked
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringX509RevokedHandle Handle
Методы:
  BoringX509RevokedHandle get_Handle()
  void .ctor(BoringX509RevokedHandle handle)
  int mono_btls_x509_revoked_get_serial_number(IntPtr handle, IntPtr data, int size)
  long mono_btls_x509_revoked_get_revocation_date(IntPtr handle)
  int mono_btls_x509_revoked_get_reason(IntPtr handle)
  int mono_btls_x509_revoked_get_sequence(IntPtr handle)
  void mono_btls_x509_revoked_free(IntPtr handle)
  Byte[] GetSerialNumber()
  DateTime GetRevocationDate()
  int GetReason()
  int GetSequence()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509Store
Наследуется от: MonoBtlsObject
Поля:
  Dictionary`2<IntPtr, MonoBtlsX509Lookup> lookupHash
Свойства:
  BoringX509StoreHandle Handle
Методы:
  BoringX509StoreHandle get_Handle()
  IntPtr mono_btls_x509_store_new()
  IntPtr mono_btls_x509_store_from_ctx(IntPtr ctx)
  IntPtr mono_btls_x509_store_from_ssl_ctx(IntPtr handle)
  int mono_btls_x509_store_load_locations(IntPtr handle, IntPtr file, IntPtr path)
  int mono_btls_x509_store_set_default_paths(IntPtr handle)
  int mono_btls_x509_store_add_cert(IntPtr handle, IntPtr x509)
  int mono_btls_x509_store_get_count(IntPtr handle)
  void mono_btls_x509_store_free(IntPtr handle)
  void LoadLocations(string file, string path)
  void SetDefaultPaths()
  BoringX509StoreHandle Create_internal()
  BoringX509StoreHandle Create_internal(IntPtr store_ctx)
  BoringX509StoreHandle Create_internal(BoringSslCtxHandle ctx)
  void .ctor()
  void .ctor(IntPtr store_ctx)
  void .ctor(BoringSslCtxHandle ctx)
  void AddCertificate(MonoBtlsX509 x509)
  int GetCount()
  void AddTrustedRoots()
  MonoBtlsX509Lookup AddLookup(MonoBtlsX509LookupType type)
  void AddDirectoryLookup(string dir, MonoBtlsX509FileType type)
  void AddFileLookup(string file, MonoBtlsX509FileType type)
  void AddCollection(X509CertificateCollection collection, MonoBtlsX509TrustKind trust)
  void Close()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509StoreCtx
Наследуется от: MonoBtlsObject
Поля:
  Nullable`1<int> verifyResult
Свойства:
  BoringX509StoreCtxHandle Handle
  int VerifyResult
Методы:
  BoringX509StoreCtxHandle get_Handle()
  IntPtr mono_btls_x509_store_ctx_new()
  IntPtr mono_btls_x509_store_ctx_from_ptr(IntPtr ctx)
  MonoBtlsX509Error mono_btls_x509_store_ctx_get_error(IntPtr handle, IntPtr& error_string)
  int mono_btls_x509_store_ctx_get_error_depth(IntPtr handle)
  IntPtr mono_btls_x509_store_ctx_get_chain(IntPtr handle)
  int mono_btls_x509_store_ctx_init(IntPtr handle, IntPtr store, IntPtr chain)
  int mono_btls_x509_store_ctx_set_param(IntPtr handle, IntPtr param)
  int mono_btls_x509_store_ctx_verify_cert(IntPtr handle)
  IntPtr mono_btls_x509_store_ctx_get_by_subject(IntPtr handle, IntPtr name)
  IntPtr mono_btls_x509_store_ctx_get_current_cert(IntPtr handle)
  IntPtr mono_btls_x509_store_ctx_get_current_issuer(IntPtr handle)
  IntPtr mono_btls_x509_store_ctx_get_verify_param(IntPtr handle)
  IntPtr mono_btls_x509_store_ctx_get_untrusted(IntPtr handle)
  IntPtr mono_btls_x509_store_ctx_up_ref(IntPtr handle)
  void mono_btls_x509_store_ctx_free(IntPtr handle)
  void .ctor()
  BoringX509StoreCtxHandle Create_internal(IntPtr store_ctx)
  void .ctor(int preverify_ok, IntPtr store_ctx)
  void .ctor(BoringX509StoreCtxHandle ptr, Nullable`1<int> verifyResult)
  MonoBtlsX509Error GetError()
  int GetErrorDepth()
  MonoBtlsX509Exception GetException()
  MonoBtlsX509Chain GetChain()
  MonoBtlsX509Chain GetUntrusted()
  void Initialize(MonoBtlsX509Store store, MonoBtlsX509Chain chain)
  void SetVerifyParam(MonoBtlsX509VerifyParam param)
  int get_VerifyResult()
  int Verify()
  MonoBtlsX509 LookupBySubject(MonoBtlsX509Name name)
  MonoBtlsX509 GetCurrentCertificate()
  MonoBtlsX509 GetCurrentIssuer()
  MonoBtlsX509VerifyParam GetVerifyParam()
  MonoBtlsX509StoreCtx Copy()
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509StoreManager
Наследуется от: object
Поля:
  bool initialized
  string machineTrustedRootPath
  string machineIntermediateCAPath
  string machineUntrustedPath
  string userTrustedRootPath
  string userIntermediateCAPath
  string userUntrustedPath
Свойства:
Методы:
  void Initialize()
  void DoInitialize()
  bool HasStore(MonoBtlsX509StoreType type)
  string GetStorePath(MonoBtlsX509StoreType type)
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509StoreType
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509StoreType Custom
  MonoBtlsX509StoreType MachineTrustedRoots
  MonoBtlsX509StoreType MachineIntermediateCA
  MonoBtlsX509StoreType MachineUntrusted
  MonoBtlsX509StoreType UserTrustedRoots
  MonoBtlsX509StoreType UserIntermediateCA
  MonoBtlsX509StoreType UserUntrusted
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509TrustKind
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509TrustKind DEFAULT
  MonoBtlsX509TrustKind TRUST_CLIENT
  MonoBtlsX509TrustKind TRUST_SERVER
  MonoBtlsX509TrustKind TRUST_ALL
  MonoBtlsX509TrustKind REJECT_CLIENT
  MonoBtlsX509TrustKind REJECT_SERVER
  MonoBtlsX509TrustKind REJECT_ALL
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509VerifyFlags
Наследуется от: Enum
Поля:
  int value__
  MonoBtlsX509VerifyFlags DEFAULT
  MonoBtlsX509VerifyFlags CRL_CHECK
  MonoBtlsX509VerifyFlags CRL_CHECK_ALL
  MonoBtlsX509VerifyFlags X509_STRIC
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Btls.MonoBtlsX509VerifyParam
Наследуется от: MonoBtlsObject
Поля:
Свойства:
  BoringX509VerifyParamHandle Handle
  bool CanModify
Методы:
  BoringX509VerifyParamHandle get_Handle()
  IntPtr mono_btls_x509_verify_param_new()
  IntPtr mono_btls_x509_verify_param_copy(IntPtr handle)
  IntPtr mono_btls_x509_verify_param_lookup(IntPtr name)
  int mono_btls_x509_verify_param_can_modify(IntPtr param)
  int mono_btls_x509_verify_param_set_name(IntPtr handle, IntPtr name)
  int mono_btls_x509_verify_param_set_host(IntPtr handle, IntPtr name, int namelen)
  int mono_btls_x509_verify_param_add_host(IntPtr handle, IntPtr name, int namelen)
  ulong mono_btls_x509_verify_param_get_flags(IntPtr handle)
  int mono_btls_x509_verify_param_set_flags(IntPtr handle, ulong flags)
  MonoBtlsX509VerifyFlags mono_btls_x509_verify_param_get_mono_flags(IntPtr handle)
  int mono_btls_x509_verify_param_set_mono_flags(IntPtr handle, MonoBtlsX509VerifyFlags flags)
  int mono_btls_x509_verify_param_set_purpose(IntPtr handle, MonoBtlsX509Purpose purpose)
  int mono_btls_x509_verify_param_get_depth(IntPtr handle)
  int mono_btls_x509_verify_param_set_depth(IntPtr handle, int depth)
  int mono_btls_x509_verify_param_set_time(IntPtr handle, long time)
  IntPtr mono_btls_x509_verify_param_get_peername(IntPtr handle)
  void mono_btls_x509_verify_param_free(IntPtr handle)
  void .ctor()
  void .ctor(BoringX509VerifyParamHandle handle)
  MonoBtlsX509VerifyParam Copy()
  MonoBtlsX509VerifyParam GetSslClient()
  MonoBtlsX509VerifyParam GetSslServer()
  MonoBtlsX509VerifyParam Lookup(string name, bool fail)
  bool get_CanModify()
  void WantToModify()
  void SetName(string name)
  void SetHost(string name)
  void AddHost(string name)
  ulong GetFlags()
  void SetFlags(ulong flags)
  MonoBtlsX509VerifyFlags GetMonoFlags()
  void SetMonoFlags(MonoBtlsX509VerifyFlags flags)
  void SetPurpose(MonoBtlsX509Purpose purpose)
  int GetDepth()
  void SetDepth(int depth)
  void SetTime(DateTime time)
  string GetPeerName()
--------------------------------------------------
Класс: Mono.Btls.X509CertificateImplBtls
Наследуется от: X509Certificate2ImplUnix
Поля:
  MonoBtlsX509 x509
  MonoBtlsKey nativePrivateKey
  X509CertificateImplCollection intermediateCerts
  PublicKey publicKey
Свойства:
  bool IsValid
  IntPtr Handle
  MonoBtlsX509 X509
  MonoBtlsKey NativePrivateKey
  X509CertificateImplCollection IntermediateCertificates
  X509Certificate2Impl FallbackImpl
  bool HasPrivateKey
  AsymmetricAlgorithm PrivateKey
  PublicKey PublicKey
Методы:
  void .ctor()
  void .ctor(MonoBtlsX509 x509)
  void .ctor(X509CertificateImplBtls other)
  void .ctor(Byte[] data, MonoBtlsX509Format format)
  void .ctor(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  bool get_IsValid()
  IntPtr get_Handle()
  IntPtr GetNativeAppleCertificate()
  MonoBtlsX509 get_X509()
  MonoBtlsKey get_NativePrivateKey()
  X509CertificateImpl Clone()
  bool Equals(X509CertificateImpl other, Boolean& result)
  Byte[] GetRawCertData()
  X509CertificateImplCollection get_IntermediateCertificates()
  void Dispose(bool disposing)
  X509Certificate2Impl get_FallbackImpl()
  bool get_HasPrivateKey()
  AsymmetricAlgorithm get_PrivateKey()
  void set_PrivateKey(AsymmetricAlgorithm value)
  RSA GetRSAPrivateKey()
  DSA GetDSAPrivateKey()
  PublicKey get_PublicKey()
  void Import(Byte[] data)
  void ImportPkcs12(Byte[] data, SafePasswordHandle password)
  void ImportAuthenticode(Byte[] data)
  bool Verify(X509Certificate2 thisCertificate)
  void Reset()
--------------------------------------------------
Класс: Mono.Btls.X509ChainImplBtls
Наследуется от: X509ChainImpl
Поля:
  MonoBtlsX509StoreCtx storeCtx
  MonoBtlsX509Chain chain
  MonoBtlsX509Chain untrustedChain
  X509ChainElementCollection elements
  X509Certificate2Collection untrusted
  X509Certificate2[] certificates
  X509ChainPolicy policy
  List`1<X509ChainStatus> chainStatusList
Свойства:
  bool IsValid
  IntPtr Handle
  MonoBtlsX509Chain Chain
  MonoBtlsX509StoreCtx StoreCtx
  X509ChainElementCollection ChainElements
  X509ChainPolicy ChainPolicy
  X509ChainStatus[] ChainStatus
Методы:
  void .ctor(MonoBtlsX509Chain chain)
  void .ctor(MonoBtlsX509StoreCtx storeCtx)
  void .ctor()
  bool get_IsValid()
  IntPtr get_Handle()
  MonoBtlsX509Chain get_Chain()
  MonoBtlsX509StoreCtx get_StoreCtx()
  X509ChainElementCollection get_ChainElements()
  X509ChainPolicy get_ChainPolicy()
  void set_ChainPolicy(X509ChainPolicy value)
  X509ChainStatus[] get_ChainStatus()
  void AddStatus(X509ChainStatusFlags errorCode)
  bool Build(X509Certificate2 certificate)
  void Reset()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: Mono.Btls.X509PalImplBtls
Наследуется от: X509PalImpl
Поля:
  MonoBtlsProvider <Provider>k__BackingField
Свойства:
  MonoBtlsProvider Provider
Методы:
  void .ctor(MonoTlsProvider provider)
  MonoBtlsProvider get_Provider()
  X509CertificateImpl Import(Byte[] data)
  X509Certificate2Impl Import(Byte[] data, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  X509Certificate2Impl Import(X509Certificate cert)
--------------------------------------------------
Класс: ObjCRuntimeInternal.INativeObject
Поля:
Свойства:
  IntPtr Handle
Методы:
  IntPtr get_Handle()
--------------------------------------------------
Класс: ObjCRuntimeInternal.NativeObjectHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr GetHandle(INativeObject self)
--------------------------------------------------
Класс: Internal.Cryptography.OidLookup
Наследуется от: object
Поля:
  ConcurrentDictionary`2<string, string> s_lateBoundOidToFriendlyName
  ConcurrentDictionary`2<string, string> s_lateBoundFriendlyNameToOid
  Dictionary`2<string, string> s_friendlyNameToOid
  Dictionary`2<string, string> s_oidToFriendlyName
  Dictionary`2<string, string> s_compatOids
Свойства:
Методы:
  bool ShouldUseCache(OidGroup oidGroup)
  string NativeOidToFriendlyName(string oid, OidGroup oidGroup, bool fallBackToAllGroups)
  string NativeFriendlyNameToOid(string friendlyName, OidGroup oidGroup, bool fallBackToAllGroups)
  string ToFriendlyName(string oid, OidGroup oidGroup, bool fallBackToAllGroups)
  string ToOid(string friendlyName, OidGroup oidGroup, bool fallBackToAllGroups)
  void .cctor()
--------------------------------------------------
Класс: Internal.Cryptography.Oids
Наследуется от: object
Поля:
  string CommonName
  string Organization
  string OrganizationalUnit
  string BasicConstraints
  string SubjectKeyIdentifier
  string SubjectAltName
  string IssuerAltName
  string KeyUsage
  string BasicConstraints2
  string CrlDistributionPoints
  string CertPolicies
  string AnyCertPolicy
  string CertPolicyMappings
  string CertPolicyConstraints
  string EnhancedKeyUsage
  string InhibitAnyPolicyExtension
  string Sha256
  string Sha384
  string Sha512
  string EccCurveSecp384r1
  string EccCurveSecp521r1
  string Ecc
  string EccCurveSecp256r1
  string ECDsaSha256
  string ECDsaSha384
  string ECDsaSha512
  string RsaRsa
  string Mgf1
  string RsaSsaPss
  string RsaPkcs1Sha256
  string RsaPkcs1Sha384
  string RsaPkcs1Sha512
  string Pkcs9ExtensionRequest
  string DsaDsa
  string EmailAddress
  string EnrollCertTypeExtension
  string UserPrincipalName
  string CertificateTemplate
  string ApplicationCertPolicies
  string AuthorityInformationAccess
  string CertificateAuthorityIssuers
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Cryptography.Pal.GeneralNameType
Наследуется от: Enum
Поля:
  int value__
  GeneralNameType OtherName
  GeneralNameType Rfc822Name
  GeneralNameType Email
  GeneralNameType DnsName
  GeneralNameType X400Address
  GeneralNameType DirectoryName
  GeneralNameType EdiPartyName
  GeneralNameType UniformResourceIdentifier
  GeneralNameType IPAddress
  GeneralNameType RegisteredId
Свойства:
Методы:
--------------------------------------------------
Класс: Internal.Cryptography.Pal.CertificateData
Наследуется от: ValueType
Поля:
  Byte[] RawData
  Byte[] SubjectPublicKeyInfo
  int Version
  Byte[] SerialNumber
  AlgorithmIdentifier TbsSignature
  X500DistinguishedName Issuer
  DateTime NotBefore
  DateTime NotAfter
  X500DistinguishedName Subject
  AlgorithmIdentifier PublicKeyAlgorithm
  Byte[] PublicKey
  Byte[] IssuerUniqueId
  Byte[] SubjectUniqueId
  List`1<X509Extension> Extensions
  AlgorithmIdentifier SignatureAlgorithm
  Byte[] SignatureValue
Свойства:
Методы:
  void .ctor(Byte[] rawData)
  string GetNameInfo(X509NameType nameType, bool forIssuer)
  string GetSimpleNameInfo(X500DistinguishedName name)
  string FindAltNameMatch(Byte[] extensionBytes, GeneralNameType matchType, string otherOid)
  IEnumerable`1<KeyValuePair`2<string, string>> ReadReverseRdns(X500DistinguishedName name)
--------------------------------------------------
Класс: Microsoft.Win32.IntranetZoneCredentialPolicy
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  bool ShouldSendCredential(Uri challengeUri, WebRequest request, NetworkCredential credential, IAuthenticationModule authModule)
--------------------------------------------------
Класс: Microsoft.Win32.PowerModeChangedEventArgs
Наследуется от: EventArgs
Поля:
  PowerModes mymode
Свойства:
  PowerModes Mode
Методы:
  void .ctor(PowerModes mode)
  PowerModes get_Mode()
--------------------------------------------------
Класс: Microsoft.Win32.PowerModeChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, PowerModeChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, PowerModeChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.PowerModes
Наследуется от: Enum
Поля:
  int value__
  PowerModes Resume
  PowerModes StatusChange
  PowerModes Suspend
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.SessionEndReasons
Наследуется от: Enum
Поля:
  int value__
  SessionEndReasons Logoff
  SessionEndReasons SystemShutdown
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.SessionEndedEventArgs
Наследуется от: EventArgs
Поля:
  SessionEndReasons myreason
Свойства:
  SessionEndReasons Reason
Методы:
  void .ctor(SessionEndReasons reason)
  SessionEndReasons get_Reason()
--------------------------------------------------
Класс: Microsoft.Win32.SessionEndedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SessionEndedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SessionEndedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.SessionEndingEventArgs
Наследуется от: EventArgs
Поля:
  SessionEndReasons myreason
  bool mycancel
Свойства:
  SessionEndReasons Reason
  bool Cancel
Методы:
  void .ctor(SessionEndReasons reason)
  SessionEndReasons get_Reason()
  bool get_Cancel()
  void set_Cancel(bool value)
--------------------------------------------------
Класс: Microsoft.Win32.SessionEndingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SessionEndingEventArgs e)
  IAsyncResult BeginInvoke(object sender, SessionEndingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.SessionSwitchEventArgs
Наследуется от: EventArgs
Поля:
  SessionSwitchReason reason
Свойства:
  SessionSwitchReason Reason
Методы:
  void .ctor(SessionSwitchReason reason)
  SessionSwitchReason get_Reason()
--------------------------------------------------
Класс: Microsoft.Win32.SessionSwitchEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SessionSwitchEventArgs e)
  IAsyncResult BeginInvoke(object sender, SessionSwitchEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.SessionSwitchReason
Наследуется от: Enum
Поля:
  int value__
  SessionSwitchReason ConsoleConnect
  SessionSwitchReason ConsoleDisconnect
  SessionSwitchReason RemoteConnect
  SessionSwitchReason RemoteDisconnect
  SessionSwitchReason SessionLogon
  SessionSwitchReason SessionLogoff
  SessionSwitchReason SessionLock
  SessionSwitchReason SessionUnlock
  SessionSwitchReason SessionRemoteControl
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.SystemEvents
Наследуется от: object
Поля:
  Hashtable TimerStore
  TimerElapsedEventHandler TimerElapsed
Свойства:
Методы:
  void .ctor()
  IntPtr CreateTimer(int interval)
  void KillTimer(IntPtr timerId)
  void InternalTimerElapsed(object e, ElapsedEventArgs args)
  void InvokeOnEventsThread(Delegate method)
  void add_DisplaySettingsChanged(EventHandler value)
  void remove_DisplaySettingsChanged(EventHandler value)
  void add_DisplaySettingsChanging(EventHandler value)
  void remove_DisplaySettingsChanging(EventHandler value)
  void add_EventsThreadShutdown(EventHandler value)
  void remove_EventsThreadShutdown(EventHandler value)
  void add_InstalledFontsChanged(EventHandler value)
  void remove_InstalledFontsChanged(EventHandler value)
  void add_LowMemory(EventHandler value)
  void remove_LowMemory(EventHandler value)
  void add_PaletteChanged(EventHandler value)
  void remove_PaletteChanged(EventHandler value)
  void add_PowerModeChanged(PowerModeChangedEventHandler value)
  void remove_PowerModeChanged(PowerModeChangedEventHandler value)
  void add_SessionEnded(SessionEndedEventHandler value)
  void remove_SessionEnded(SessionEndedEventHandler value)
  void add_SessionEnding(SessionEndingEventHandler value)
  void remove_SessionEnding(SessionEndingEventHandler value)
  void add_SessionSwitch(SessionSwitchEventHandler value)
  void remove_SessionSwitch(SessionSwitchEventHandler value)
  void add_TimeChanged(EventHandler value)
  void remove_TimeChanged(EventHandler value)
  void add_TimerElapsed(TimerElapsedEventHandler value)
  void remove_TimerElapsed(TimerElapsedEventHandler value)
  void add_UserPreferenceChanged(UserPreferenceChangedEventHandler value)
  void remove_UserPreferenceChanged(UserPreferenceChangedEventHandler value)
  void add_UserPreferenceChanging(UserPreferenceChangingEventHandler value)
  void remove_UserPreferenceChanging(UserPreferenceChangingEventHandler value)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.Win32.TimerElapsedEventArgs
Наследуется от: EventArgs
Поля:
  IntPtr mytimerId
Свойства:
  IntPtr TimerId
Методы:
  void .ctor(IntPtr timerId)
  IntPtr get_TimerId()
--------------------------------------------------
Класс: Microsoft.Win32.TimerElapsedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, TimerElapsedEventArgs e)
  IAsyncResult BeginInvoke(object sender, TimerElapsedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.UserPreferenceCategory
Наследуется от: Enum
Поля:
  int value__
  UserPreferenceCategory Accessibility
  UserPreferenceCategory Color
  UserPreferenceCategory Desktop
  UserPreferenceCategory General
  UserPreferenceCategory Icon
  UserPreferenceCategory Keyboard
  UserPreferenceCategory Menu
  UserPreferenceCategory Mouse
  UserPreferenceCategory Policy
  UserPreferenceCategory Power
  UserPreferenceCategory Screensaver
  UserPreferenceCategory Window
  UserPreferenceCategory Locale
  UserPreferenceCategory VisualStyle
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.Win32.UserPreferenceChangedEventArgs
Наследуется от: EventArgs
Поля:
  UserPreferenceCategory mycategory
Свойства:
  UserPreferenceCategory Category
Методы:
  void .ctor(UserPreferenceCategory category)
  UserPreferenceCategory get_Category()
--------------------------------------------------
Класс: Microsoft.Win32.UserPreferenceChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UserPreferenceChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, UserPreferenceChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.UserPreferenceChangingEventArgs
Наследуется от: EventArgs
Поля:
  UserPreferenceCategory mycategory
Свойства:
  UserPreferenceCategory Category
Методы:
  void .ctor(UserPreferenceCategory category)
  UserPreferenceCategory get_Category()
--------------------------------------------------
Класс: Microsoft.Win32.UserPreferenceChangingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UserPreferenceChangingEventArgs e)
  IAsyncResult BeginInvoke(object sender, UserPreferenceChangingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Microsoft.Win32.NativeMethods
Наследуется от: object
Поля:
  int E_ABORT
  int PROCESS_TERMINATE
  int PROCESS_CREATE_THREAD
  int PROCESS_SET_SESSIONID
  int PROCESS_VM_OPERATION
  int PROCESS_VM_READ
  int PROCESS_VM_WRITE
  int PROCESS_DUP_HANDLE
  int PROCESS_CREATE_PROCESS
  int PROCESS_SET_QUOTA
  int PROCESS_SET_INFORMATION
  int PROCESS_QUERY_INFORMATION
  int PROCESS_QUERY_LIMITED_INFORMATION
  int STANDARD_RIGHTS_REQUIRED
  int SYNCHRONIZE
  int PROCESS_ALL_ACCESS
  int DUPLICATE_CLOSE_SOURCE
  int DUPLICATE_SAME_ACCESS
  int STILL_ACTIVE
  int WAIT_OBJECT_0
  int WAIT_FAILED
  int WAIT_TIMEOUT
  int WAIT_ABANDONED
  int WAIT_ABANDONED_0
  int ERROR_FILE_NOT_FOUND
  int ERROR_PATH_NOT_FOUND
  int ERROR_ACCESS_DENIED
  int ERROR_INVALID_HANDLE
  int ERROR_SHARING_VIOLATION
  int ERROR_INVALID_NAME
  int ERROR_ALREADY_EXISTS
  int ERROR_FILENAME_EXCED_RANGE
Свойства:
Методы:
  bool DuplicateHandle(HandleRef hSourceProcessHandle, SafeHandle hSourceHandle, HandleRef hTargetProcess, SafeWaitHandle& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions)
  bool DuplicateHandle(HandleRef hSourceProcessHandle, HandleRef hSourceHandle, HandleRef hTargetProcess, SafeProcessHandle& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions)
  IntPtr GetCurrentProcess()
  bool GetExitCodeProcess(IntPtr processHandle, Int32& exitCode)
  bool GetExitCodeProcess(SafeProcessHandle processHandle, Int32& exitCode)
  bool TerminateProcess(IntPtr processHandle, int exitCode)
  bool TerminateProcess(SafeProcessHandle processHandle, int exitCode)
  int WaitForInputIdle(IntPtr handle, int milliseconds)
  int WaitForInputIdle(SafeProcessHandle handle, int milliseconds)
  bool GetProcessWorkingSetSize(IntPtr handle, IntPtr& min, IntPtr& max)
  bool GetProcessWorkingSetSize(SafeProcessHandle handle, IntPtr& min, IntPtr& max)
  bool SetProcessWorkingSetSize(IntPtr handle, IntPtr min, IntPtr max)
  bool SetProcessWorkingSetSize(SafeProcessHandle handle, IntPtr min, IntPtr max)
  bool GetProcessTimes(IntPtr handle, Int64& creation, Int64& exit, Int64& kernel, Int64& user)
  bool GetProcessTimes(SafeProcessHandle handle, Int64& creation, Int64& exit, Int64& kernel, Int64& user)
  int GetCurrentProcessId()
  int GetPriorityClass(IntPtr handle)
  int GetPriorityClass(SafeProcessHandle handle)
  bool SetPriorityClass(IntPtr handle, int priorityClass)
  bool SetPriorityClass(SafeProcessHandle handle, int priorityClass)
  bool CloseProcess(IntPtr handle)
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeProcessHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
  SafeProcessHandle InvalidHandle
Свойства:
Методы:
  void .ctor()
  void .ctor(IntPtr handle)
  void .ctor(IntPtr existingHandle, bool ownsHandle)
  void InitialSetHandle(IntPtr h)
  bool ReleaseHandle()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor(IntPtr handle)
  bool ReleaseHandle()
  void .ctor()
--------------------------------------------------
Класс: Microsoft.VisualBasic.VBCodeGenerator
Наследуется от: CodeCompiler
Поля:
  Char[] s_periodArray
  int MaxLineLength
  GeneratorSupport LanguageSupport
  int _statementDepth
  IDictionary`2<string, string> _provOptions
  String[][] s_keywords
Свойства:
  string FileExtension
  string CompilerName
  bool IsCurrentModule
  string NullToken
Методы:
  void .ctor()
  void .ctor(IDictionary`2<string, string> providerOptions)
  string get_FileExtension()
  string get_CompilerName()
  bool get_IsCurrentModule()
  string get_NullToken()
  void EnsureInDoubleQuotes(Boolean& fInDoubleQuotes, StringBuilder b)
  void EnsureNotInDoubleQuotes(Boolean& fInDoubleQuotes, StringBuilder b)
  string QuoteSnippetString(string value)
  void AppendEscapedChar(StringBuilder b, char value)
  void ProcessCompilerOutputLine(CompilerResults results, string line)
  string CmdArgsFromParameters(CompilerParameters options)
  void OutputAttributeArgument(CodeAttributeArgument arg)
  void OutputAttributes(CodeAttributeDeclarationCollection attributes, bool inLine)
  void OutputAttributes(CodeAttributeDeclarationCollection attributes, bool inLine, string prefix, bool closingLine)
  void OutputDirection(FieldDirection dir)
  void GenerateDefaultValueExpression(CodeDefaultValueExpression e)
  void GenerateDirectionExpression(CodeDirectionExpression e)
  void OutputFieldScopeModifier(MemberAttributes attributes)
  void OutputMemberAccessModifier(MemberAttributes attributes)
  void OutputVTableModifier(MemberAttributes attributes)
  void OutputMemberScopeModifier(MemberAttributes attributes)
  void OutputOperator(CodeBinaryOperatorType op)
  void GenerateNotIsNullExpression(CodeExpression e)
  void GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)
  string GetResponseFileCmdArgs(CompilerParameters options, string cmdArgs)
  void OutputIdentifier(string ident)
  void OutputType(CodeTypeReference typeRef)
  void OutputTypeAttributes(CodeTypeDeclaration e)
  void OutputTypeNamePair(CodeTypeReference typeRef, string name)
  string GetArrayPostfix(CodeTypeReference typeRef)
  void OutputArrayPostfix(CodeTypeReference typeRef)
  void GenerateIterationStatement(CodeIterationStatement e)
  void GeneratePrimitiveExpression(CodePrimitiveExpression e)
  void GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)
  void GenerateArrayCreateExpression(CodeArrayCreateExpression e)
  void GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)
  void GenerateCastExpression(CodeCastExpression e)
  void GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)
  void GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)
  void GenerateSingleFloatValue(float s)
  void GenerateDoubleValue(double d)
  void GenerateDecimalValue(decimal d)
  void GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)
  void GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)
  void GenerateIndexerExpression(CodeIndexerExpression e)
  void GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)
  void GenerateSnippetExpression(CodeSnippetExpression e)
  void GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)
  void GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)
  void GenerateEventReferenceExpression(CodeEventReferenceExpression e)
  void GenerateFormalEventReferenceExpression(CodeEventReferenceExpression e)
  void GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)
  void GenerateObjectCreateExpression(CodeObjectCreateExpression e)
  void GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)
  void GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)
  void GenerateThisReferenceExpression(CodeThisReferenceExpression e)
  void GenerateExpressionStatement(CodeExpressionStatement e)
  bool IsDocComment(CodeCommentStatement comment)
  void GenerateCommentStatements(CodeCommentStatementCollection e)
  void GenerateComment(CodeComment e)
  void GenerateMethodReturnStatement(CodeMethodReturnStatement e)
  void GenerateConditionStatement(CodeConditionStatement e)
  void GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)
  void GenerateAssignStatement(CodeAssignStatement e)
  void GenerateAttachEventStatement(CodeAttachEventStatement e)
  void GenerateRemoveEventStatement(CodeRemoveEventStatement e)
  void GenerateSnippetStatement(CodeSnippetStatement e)
  void GenerateGotoStatement(CodeGotoStatement e)
  void GenerateLabeledStatement(CodeLabeledStatement e)
  void GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)
  void GenerateLinePragmaStart(CodeLinePragma e)
  void GenerateLinePragmaEnd(CodeLinePragma e)
  void GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)
  void GenerateField(CodeMemberField e)
  bool MethodIsOverloaded(CodeMemberMethod e, CodeTypeDeclaration c)
  void GenerateSnippetMember(CodeSnippetTypeMember e)
  void GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)
  void GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)
  bool PropertyIsOverloaded(CodeMemberProperty e, CodeTypeDeclaration c)
  void GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)
  void GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)
  void GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)
  void GenerateTypeConstructor(CodeTypeConstructor e)
  void GenerateTypeOfExpression(CodeTypeOfExpression e)
  void GenerateTypeStart(CodeTypeDeclaration e)
  void OutputTypeParameters(CodeTypeParameterCollection typeParameters)
  void OutputTypeParameterConstraints(CodeTypeParameter typeParameter)
  void GenerateTypeEnd(CodeTypeDeclaration e)
  void GenerateNamespace(CodeNamespace e)
  bool AllowLateBound(CodeCompileUnit e)
  bool RequireVariableDeclaration(CodeCompileUnit e)
  bool GetUserData(CodeObject e, string property, bool defaultValue)
  void GenerateCompileUnitStart(CodeCompileUnit e)
  void GenerateCompileUnit(CodeCompileUnit e)
  void GenerateDirectives(CodeDirectiveCollection directives)
  void GenerateChecksumPragma(CodeChecksumPragma checksumPragma)
  void GenerateCodeRegionDirective(CodeRegionDirective regionDirective)
  void GenerateNamespaceStart(CodeNamespace e)
  void GenerateNamespaceEnd(CodeNamespace e)
  void GenerateNamespaceImport(CodeNamespaceImport e)
  void GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)
  void GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)
  bool IsKeyword(string value)
  bool Supports(GeneratorSupport support)
  bool IsValidIdentifier(string value)
  string CreateValidIdentifier(string name)
  string CreateEscapedIdentifier(string name)
  string GetBaseTypeOutput(CodeTypeReference typeRef, bool preferBuiltInTypes)
  string GetTypeOutputWithoutArrayPostFix(CodeTypeReference typeRef)
  string GetTypeArgumentsOutput(CodeTypeReferenceCollection typeArguments)
  void GetTypeArgumentsOutput(CodeTypeReferenceCollection typeArguments, int start, int length, StringBuilder sb)
  string GetTypeOutput(CodeTypeReference typeRef)
  void ContinueOnNewLine(string st)
  bool IsGeneratingStatements()
  void GenerateVBStatements(CodeStatementCollection stms)
  CompilerResults FromFileBatch(CompilerParameters options, String[] fileNames)
  string BuildArgs(CompilerParameters options, String[] fileNames)
  CompilerError CreateErrorFromString(string error_string)
  string GetTempFileNameWithExtension(TempFileCollection temp_files, string extension, bool keepFile)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.VisualBasic.VBCodeProvider
Наследуется от: CodeDomProvider
Поля:
  VBCodeGenerator _generator
Свойства:
  string FileExtension
  LanguageOptions LanguageOptions
Методы:
  void .ctor()
  void .ctor(IDictionary`2<string, string> providerOptions)
  string get_FileExtension()
  LanguageOptions get_LanguageOptions()
  ICodeGenerator CreateGenerator()
  ICodeCompiler CreateCompiler()
  TypeConverter GetConverter(Type type)
  void GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)
--------------------------------------------------
Класс: Microsoft.VisualBasic.VBMemberAttributeConverter
Наследуется от: VBModifierAttributeConverter
Поля:
  VBMemberAttributeConverter <Default>k__BackingField
  String[] <Names>k__BackingField
  Object[] <Values>k__BackingField
Свойства:
  VBMemberAttributeConverter Default
  String[] Names
  Object[] Values
  object DefaultValue
Методы:
  void .ctor()
  VBMemberAttributeConverter get_Default()
  String[] get_Names()
  Object[] get_Values()
  object get_DefaultValue()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.VisualBasic.VBModifierAttributeConverter
Наследуется от: TypeConverter
Поля:
Свойства:
  Object[] Values
  String[] Names
  object DefaultValue
Методы:
  Object[] get_Values()
  String[] get_Names()
  object get_DefaultValue()
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.VisualBasic.VBTypeAttributeConverter
Наследуется от: VBModifierAttributeConverter
Поля:
  VBTypeAttributeConverter <Default>k__BackingField
  String[] <Names>k__BackingField
  Object[] <Values>k__BackingField
Свойства:
  VBTypeAttributeConverter Default
  String[] Names
  Object[] Values
  object DefaultValue
Методы:
  void .ctor()
  VBTypeAttributeConverter get_Default()
  String[] get_Names()
  Object[] get_Values()
  object get_DefaultValue()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.CSharp.CSharpCodeGenerator
Наследуется от: object
Поля:
  Char[] s_periodArray
  ExposedTabStringIndentedTextWriter _output
  CodeGeneratorOptions _options
  CodeTypeDeclaration _currentClass
  CodeTypeMember _currentMember
  bool _inNestedBinary
  IDictionary`2<string, string> _provOptions
  int ParameterMultilineThreshold
  int MaxLineLength
  GeneratorSupport LanguageSupport
  String[][] s_keywords
  bool _generatingForLoop
  string ErrorRegexPattern
  Regex RelatedSymbolsRegex
Свойства:
  string FileExtension
  string CompilerName
  string CurrentTypeName
  int Indent
  bool IsCurrentInterface
  bool IsCurrentClass
  bool IsCurrentStruct
  bool IsCurrentEnum
  bool IsCurrentDelegate
  string NullToken
  CodeGeneratorOptions Options
  TextWriter Output
Методы:
  void .ctor()
  void .ctor(IDictionary`2<string, string> providerOptions)
  string get_FileExtension()
  string get_CompilerName()
  string get_CurrentTypeName()
  int get_Indent()
  void set_Indent(int value)
  bool get_IsCurrentInterface()
  bool get_IsCurrentClass()
  bool get_IsCurrentStruct()
  bool get_IsCurrentEnum()
  bool get_IsCurrentDelegate()
  string get_NullToken()
  CodeGeneratorOptions get_Options()
  TextWriter get_Output()
  string QuoteSnippetStringCStyle(string value)
  string QuoteSnippetStringVerbatimStyle(string value)
  string QuoteSnippetString(string value)
  void ContinueOnNewLine(string st)
  void OutputIdentifier(string ident)
  void OutputType(CodeTypeReference typeRef)
  void GenerateArrayCreateExpression(CodeArrayCreateExpression e)
  void GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)
  void GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)
  void GenerateCastExpression(CodeCastExpression e)
  void GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)
  void GenerateDefaultValueExpression(CodeDefaultValueExpression e)
  void GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)
  void GenerateEvents(CodeTypeDeclaration e)
  void GenerateFields(CodeTypeDeclaration e)
  void GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)
  void GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)
  void GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)
  void GenerateIndexerExpression(CodeIndexerExpression e)
  void GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)
  void GenerateSnippetCompileUnit(CodeSnippetCompileUnit e)
  void GenerateSnippetExpression(CodeSnippetExpression e)
  void GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)
  void GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)
  bool GetUserData(CodeObject e, string property, bool defaultValue)
  void GenerateNamespace(CodeNamespace e)
  void GenerateStatement(CodeStatement e)
  void GenerateStatements(CodeStatementCollection stmts)
  void GenerateNamespaceImports(CodeNamespace e)
  void GenerateEventReferenceExpression(CodeEventReferenceExpression e)
  void GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)
  void GenerateObjectCreateExpression(CodeObjectCreateExpression e)
  void GeneratePrimitiveExpression(CodePrimitiveExpression e)
  void GeneratePrimitiveExpressionBase(CodePrimitiveExpression e)
  void GeneratePrimitiveChar(char c)
  void AppendEscapedChar(StringBuilder b, char value)
  void GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)
  void GenerateThisReferenceExpression(CodeThisReferenceExpression e)
  void GenerateExpressionStatement(CodeExpressionStatement e)
  void GenerateIterationStatement(CodeIterationStatement e)
  void GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)
  void GenerateComment(CodeComment e)
  void GenerateCommentStatement(CodeCommentStatement e)
  void GenerateCommentStatements(CodeCommentStatementCollection e)
  void GenerateMethodReturnStatement(CodeMethodReturnStatement e)
  void GenerateConditionStatement(CodeConditionStatement e)
  void GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)
  void GenerateAssignStatement(CodeAssignStatement e)
  void GenerateAttachEventStatement(CodeAttachEventStatement e)
  void GenerateRemoveEventStatement(CodeRemoveEventStatement e)
  void GenerateSnippetStatement(CodeSnippetStatement e)
  void GenerateGotoStatement(CodeGotoStatement e)
  void GenerateLabeledStatement(CodeLabeledStatement e)
  void GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)
  void GenerateLinePragmaStart(CodeLinePragma e)
  void GenerateLinePragmaEnd(CodeLinePragma e)
  void GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)
  void GenerateExpression(CodeExpression e)
  void GenerateField(CodeMemberField e)
  void GenerateSnippetMember(CodeSnippetTypeMember e)
  void GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)
  void GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)
  void GenerateMethods(CodeTypeDeclaration e)
  void GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)
  void GenerateProperties(CodeTypeDeclaration e)
  void GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)
  void GenerateSingleFloatValue(float s)
  void GenerateDoubleValue(double d)
  void GenerateDecimalValue(decimal d)
  void OutputVTableModifier(MemberAttributes attributes)
  void OutputMemberAccessModifier(MemberAttributes attributes)
  void OutputMemberScopeModifier(MemberAttributes attributes)
  void OutputOperator(CodeBinaryOperatorType op)
  void OutputFieldScopeModifier(MemberAttributes attributes)
  void GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)
  void GenerateConstructors(CodeTypeDeclaration e)
  void GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)
  void GenerateTypeConstructor(CodeTypeConstructor e)
  void GenerateTypeReferenceExpression(CodeTypeReferenceExpression e)
  void GenerateTypeOfExpression(CodeTypeOfExpression e)
  void GenerateType(CodeTypeDeclaration e)
  void GenerateTypes(CodeNamespace e)
  void GenerateTypeStart(CodeTypeDeclaration e)
  void GenerateTypeMember(CodeTypeMember member, CodeTypeDeclaration declaredType)
  void GenerateTypeConstructors(CodeTypeDeclaration e)
  void GenerateSnippetMembers(CodeTypeDeclaration e)
  void GenerateNestedTypes(CodeTypeDeclaration e)
  void GenerateNamespaces(CodeCompileUnit e)
  void OutputAttributeArgument(CodeAttributeArgument arg)
  void OutputDirection(FieldDirection dir)
  void OutputExpressionList(CodeExpressionCollection expressions)
  void OutputExpressionList(CodeExpressionCollection expressions, bool newlineBetweenItems)
  void OutputParameters(CodeParameterDeclarationExpressionCollection parameters)
  void OutputTypeNamePair(CodeTypeReference typeRef, string name)
  void OutputTypeParameters(CodeTypeParameterCollection typeParameters)
  void OutputTypeParameterConstraints(CodeTypeParameterCollection typeParameters)
  void OutputTypeAttributes(CodeTypeDeclaration e)
  void GenerateTypeEnd(CodeTypeDeclaration e)
  void GenerateNamespaceStart(CodeNamespace e)
  void GenerateCompileUnit(CodeCompileUnit e)
  void GenerateCompileUnitStart(CodeCompileUnit e)
  void GenerateCompileUnitEnd(CodeCompileUnit e)
  void GenerateDirectionExpression(CodeDirectionExpression e)
  void GenerateDirectives(CodeDirectiveCollection directives)
  void GenerateChecksumPragma(CodeChecksumPragma checksumPragma)
  void GenerateCodeRegionDirective(CodeRegionDirective regionDirective)
  void GenerateNamespaceEnd(CodeNamespace e)
  void GenerateNamespaceImport(CodeNamespaceImport e)
  void GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)
  void GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)
  void GenerateAttributes(CodeAttributeDeclarationCollection attributes)
  void GenerateAttributes(CodeAttributeDeclarationCollection attributes, string prefix)
  void GenerateAttributes(CodeAttributeDeclarationCollection attributes, string prefix, bool inLine)
  bool Supports(GeneratorSupport support)
  bool IsValidIdentifier(string value)
  void ValidateIdentifier(string value)
  string CreateValidIdentifier(string name)
  string CreateEscapedIdentifier(string name)
  string GetBaseTypeOutput(CodeTypeReference typeRef, bool preferBuiltInTypes)
  string GetTypeArgumentsOutput(CodeTypeReferenceCollection typeArguments)
  void GetTypeArgumentsOutput(CodeTypeReferenceCollection typeArguments, int start, int length, StringBuilder sb)
  string GetTypeOutput(CodeTypeReference typeRef)
  void OutputStartingBrace()
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit e)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(CompilerParameters options, string fileName)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(CompilerParameters options, string source)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(CompilerParameters options, String[] sources)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(CompilerParameters options, String[] fileNames)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(CompilerParameters options, CodeCompileUnit[] ea)
  CompilerResults FromDom(CompilerParameters options, CodeCompileUnit e)
  CompilerResults FromFile(CompilerParameters options, string fileName)
  CompilerResults FromSource(CompilerParameters options, string source)
  CompilerResults FromDomBatch(CompilerParameters options, CodeCompileUnit[] ea)
  void ResolveReferencedAssemblies(CompilerParameters options, CodeCompileUnit e)
  CompilerResults FromSourceBatch(CompilerParameters options, String[] sources)
  string JoinStringArray(String[] sa, string separator)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement e, TextWriter w, CodeGeneratorOptions o)
  CompilerResults FromFileBatch(CompilerParameters options, String[] fileNames)
  string BuildArgs(CompilerParameters options, String[] fileNames, IDictionary`2<string, string> providerOptions)
  CompilerError CreateErrorFromString(string error_string)
  string GetTempFileNameWithExtension(TempFileCollection temp_files, string extension, bool keepFile)
  void .cctor()
--------------------------------------------------
Класс: Microsoft.CSharp.CSharpCodeProvider
Наследуется от: CodeDomProvider
Поля:
  CSharpCodeGenerator _generator
Свойства:
  string FileExtension
Методы:
  void .ctor()
  void .ctor(IDictionary`2<string, string> providerOptions)
  string get_FileExtension()
  ICodeGenerator CreateGenerator()
  ICodeCompiler CreateCompiler()
  TypeConverter GetConverter(Type type)
  void GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)
--------------------------------------------------
Класс: Microsoft.CSharp.CSharpMemberAttributeConverter
Наследуется от: CSharpModifierAttributeConverter
Поля:
  CSharpMemberAttributeConverter <Default>k__BackingField
  String[] <Names>k__BackingField
  Object[] <Values>k__BackingField
Свойства:
  CSharpMemberAttributeConverter Default
  String[] Names
  Object[] Values
  object DefaultValue
Методы:
  void .ctor()
  CSharpMemberAttributeConverter get_Default()
  String[] get_Names()
  Object[] get_Values()
  object get_DefaultValue()
  void .cctor()
--------------------------------------------------
Класс: Microsoft.CSharp.CSharpModifierAttributeConverter
Наследуется от: TypeConverter
Поля:
Свойства:
  Object[] Values
  String[] Names
  object DefaultValue
Методы:
  Object[] get_Values()
  String[] get_Names()
  object get_DefaultValue()
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: Microsoft.CSharp.CSharpTypeAttributeConverter
Наследуется от: CSharpModifierAttributeConverter
Поля:
  CSharpTypeAttributeConverter <Default>k__BackingField
  String[] <Names>k__BackingField
  Object[] <Values>k__BackingField
Свойства:
  CSharpTypeAttributeConverter Default
  String[] Names
  Object[] Values
  object DefaultValue
Методы:
  void .ctor()
  CSharpTypeAttributeConverter get_Default()
  String[] get_Names()
  Object[] get_Values()
  object get_DefaultValue()
  void .cctor()
--------------------------------------------------
Класс: System.CSharpHelpers
Наследуется от: object
Поля:
  Dictionary`2<string, object> s_fixedStringLookup
  String[][] s_keywords
Свойства:
Методы:
  void .cctor()
  string CreateEscapedIdentifier(string name)
  bool IsValidLanguageIndependentIdentifier(string value)
  bool IsKeyword(string value)
  bool IsPrefixTwoUnderscore(string value)
  bool IsValidTypeNameOrIdentifier(string value, bool isTypeName)
  bool IsSpecialTypeChar(char ch, Boolean& nextMustBeStartChar)
  void .ctor()
--------------------------------------------------
Класс: System.IPv4AddressHelper
Наследуется от: object
Поля:
  long Invalid
  long MaxIPv4Value
  int Octal
  int Decimal
  int Hex
  int NumberOfLabels
Свойства:
Методы:
  int ParseHostNumber(ReadOnlySpan`1<char> str, int start, int end)
  bool IsValid(Char* name, int start, Int32& end, bool allowIPv6, bool notImplicitFile, bool unknownScheme)
  bool ParseCanonical(ReadOnlySpan`1<char> name, Byte* numbers, int start, int end)
  bool IsValidCanonical(Char* name, int start, Int32& end, bool allowIPv6, bool notImplicitFile)
  long ParseNonCanonical(Char* name, int start, Int32& end, bool notImplicitFile)
  string ParseCanonicalName(string str, int start, int end, Boolean& isLoopback)
  bool Parse(string name, Byte* numbers, int start, int end)
--------------------------------------------------
Класс: System.IPv6AddressHelper
Наследуется от: object
Поля:
  int NumberOfLabels
Свойства:
Методы:
  ValueTuple`2<int, int> FindCompressionRange(ReadOnlySpan`1<ushort> numbers)
  bool ShouldHaveIpv4Embedded(ReadOnlySpan`1<ushort> numbers)
  bool IsValidStrict(Char* name, int start, Int32& end)
  void Parse(ReadOnlySpan`1<char> address, UInt16* numbers, int start, String& scopeId)
  string ParseCanonicalName(string str, int start, Boolean& isLoopback, String& scopeId)
  bool IsLoopback(ReadOnlySpan`1<ushort> numbers)
  bool ShouldHaveIpv4Embedded(UInt16* numbers)
  bool InternalIsValid(Char* name, int start, Int32& end, bool validateStrictAddress)
  bool IsValid(Char* name, int start, Int32& end)
--------------------------------------------------
Класс: System.NotImplemented
Наследуется от: object
Поля:
Свойства:
  Exception ByDesign
Методы:
  Exception get_ByDesign()
  Exception ByDesignWithMessage(string message)
  Exception ActiveIssue(string issue)
--------------------------------------------------
Класс: System.PasteArguments
Наследуется от: object
Поля:
  char Quote
  char Backslash
Свойства:
Методы:
  void AppendArgument(StringBuilder stringBuilder, string argument)
  bool ContainsNoWhitespaceOrQuotes(string s)
--------------------------------------------------
Класс: System.StringExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  string SubstringTrim(string value, int startIndex)
  string SubstringTrim(string value, int startIndex, int length)
--------------------------------------------------
Класс: System.UriBuilder
Наследуется от: object
Поля:
  bool _changed
  string _fragment
  string _host
  string _password
  string _path
  int _port
  string _query
  string _scheme
  string _schemeDelimiter
  Uri _uri
  string _username
Свойства:
  string Extra
  string Fragment
  string Host
  string Password
  string Path
  int Port
  string Query
  string Scheme
  Uri Uri
  string UserName
Методы:
  void .ctor()
  void .ctor(string uri)
  void .ctor(Uri uri)
  void Init(Uri uri)
  void .ctor(string schemeName, string hostName)
  void .ctor(string scheme, string host, int portNumber)
  void .ctor(string scheme, string host, int port, string pathValue)
  void .ctor(string scheme, string host, int port, string path, string extraValue)
  void set_Extra(string value)
  string get_Fragment()
  void set_Fragment(string value)
  string get_Host()
  void set_Host(string value)
  string get_Password()
  void set_Password(string value)
  string get_Path()
  void set_Path(string value)
  int get_Port()
  void set_Port(int value)
  string get_Query()
  void set_Query(string value)
  string get_Scheme()
  void set_Scheme(string value)
  Uri get_Uri()
  string get_UserName()
  void set_UserName(string value)
  bool Equals(object rparam)
  int GetHashCode()
  void SetFieldsFromUri(Uri uri)
  string ToString()
--------------------------------------------------
Класс: System.StringNormalizationExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsNormalized(string strInput)
  bool IsNormalized(string strInput, NormalizationForm normalizationForm)
  string Normalize(string strInput)
  string Normalize(string strInput, NormalizationForm normalizationForm)
--------------------------------------------------
Класс: System.SecurityUtils
Наследуется от: object
Поля:
  ReflectionPermission modreq(System.Runtime.CompilerServices.IsVolatile) memberAccessPermission
  ReflectionPermission modreq(System.Runtime.CompilerServices.IsVolatile) restrictedMemberAccessPermission
Свойства:
  ReflectionPermission MemberAccessPermission
  ReflectionPermission RestrictedMemberAccessPermission
Методы:
  ReflectionPermission get_MemberAccessPermission()
  ReflectionPermission get_RestrictedMemberAccessPermission()
  void DemandReflectionAccess(Type type)
  void DemandGrantSet(Assembly assembly)
  bool HasReflectionPermission(Type type)
  object SecureCreateInstance(Type type)
  object SecureCreateInstance(Type type, Object[] args, bool allowNonPublic)
  object SecureCreateInstance(Type type, Object[] args)
  object SecureConstructorInvoke(Type type, Type[] argTypes, Object[] args, bool allowNonPublic)
  object SecureConstructorInvoke(Type type, Type[] argTypes, Object[] args, bool allowNonPublic, BindingFlags extraFlags)
  bool GenericArgumentsAreVisible(MethodInfo method)
  object FieldInfoGetValue(FieldInfo field, object target)
  object MethodInfoInvoke(MethodInfo method, object target, Object[] args)
  object ConstructorInfoInvoke(ConstructorInfo ctor, Object[] args)
  object ArrayCreateInstance(Type type, int length)
--------------------------------------------------
Класс: System.HResults
Наследуется от: object
Поля:
  int Configuration
  int Xml
  int XmlSchema
  int XmlXslt
  int XmlXPath
  int Data
  int DataDeletedRowInaccessible
  int DataDuplicateName
  int DataInRowChangingEvent
  int DataInvalidConstraint
  int DataMissingPrimaryKey
  int DataNoNullAllowed
  int DataReadOnly
  int DataRowNotInTable
  int DataVersionNotFound
  int DataConstraint
  int StrongTyping
  int SqlType
  int SqlNullValue
  int SqlTruncate
  int AdapterMapping
  int DataAdapter
  int DBConcurrency
  int OperationAborted
  int InvalidUdt
  int Metadata
  int InvalidQuery
  int CommandCompilation
  int CommandExecution
  int SqlException
  int OdbcException
  int OracleException
  int ConnectionPlanException
  int NteBadKeySet
  int Win32AccessDenied
  int Win32InvalidHandle
  int License
  int InternalBufferOverflow
  int ServiceControllerTimeout
  int Install
  int EFail
Свойства:
Методы:
--------------------------------------------------
Класс: System.InvariantComparer
Наследуется от: object
Поля:
  CompareInfo m_compareInfo
  InvariantComparer Default
Свойства:
Методы:
  void .ctor()
  int Compare(object a, object b)
  void .cctor()
--------------------------------------------------
Класс: System.GenericUriParserOptions
Наследуется от: Enum
Поля:
  int value__
  GenericUriParserOptions Default
  GenericUriParserOptions GenericAuthority
  GenericUriParserOptions AllowEmptyAuthority
  GenericUriParserOptions NoUserInfo
  GenericUriParserOptions NoPort
  GenericUriParserOptions NoQuery
  GenericUriParserOptions NoFragment
  GenericUriParserOptions DontConvertPathBackslashes
  GenericUriParserOptions DontCompressPath
  GenericUriParserOptions DontUnescapePathDotsAndSlashes
  GenericUriParserOptions Idn
  GenericUriParserOptions IriParsing
Свойства:
Методы:
--------------------------------------------------
Класс: System.GenericUriParser
Наследуется от: UriParser
Поля:
  UriSyntaxFlags DefaultGenericUriParserFlags
Свойства:
Методы:
  void .ctor(GenericUriParserOptions options)
  UriSyntaxFlags MapGenericParserOptions(GenericUriParserOptions options)
--------------------------------------------------
Класс: System.IriHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CheckIriUnicodeRange(char unicode, bool isQuery)
  bool CheckIriUnicodeRange(char highSurr, char lowSurr, Boolean& surrogatePair, bool isQuery)
  bool CheckIsReserved(char ch, UriComponents component)
  string EscapeUnescapeIri(Char* pInput, int start, int end, UriComponents component)
--------------------------------------------------
Класс: System.Uri
Наследуется от: object
Поля:
  string UriSchemeFile
  string UriSchemeFtp
  string UriSchemeGopher
  string UriSchemeHttp
  string UriSchemeHttps
  string UriSchemeWs
  string UriSchemeWss
  string UriSchemeMailto
  string UriSchemeNews
  string UriSchemeNntp
  string UriSchemeNetTcp
  string UriSchemeNetPipe
  string SchemeDelimiter
  int c_Max16BitUtf8SequenceLength
  int c_MaxUriBufferSize
  int c_MaxUriSchemeName
  string m_String
  string m_originalUnicodeString
  UriParser m_Syntax
  string m_DnsSafeHost
  Flags m_Flags
  UriInfo m_Info
  bool m_iriParsing
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_ConfigInitialized
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_ConfigInitializing
  UriIdnScope modreq(System.Runtime.CompilerServices.IsVolatile) s_IdnScope
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_IriParsing
  bool useDotNetRelativeOrAbsolute
  UriKind DotNetRelativeOrAbsolute
  bool IsWindowsFileSystem
  object s_initLock
  UriFormat V1ToStringUnescape
  char c_DummyChar
  char c_EOL
  Char[] HexLowerChars
  Char[] _WSchars
Свойства:
  bool IsImplicitFile
  bool IsUncOrDosPath
  bool IsDosPath
  bool IsUncPath
  Flags HostType
  UriParser Syntax
  bool IsNotAbsoluteUri
  bool AllowIdn
  bool UserDrivenParsing
  ushort SecuredPathIndex
  string AbsolutePath
  string PrivateAbsolutePath
  string AbsoluteUri
  string LocalPath
  string Authority
  UriHostNameType HostNameType
  bool IsDefaultPort
  bool IsFile
  bool IsLoopback
  string PathAndQuery
  String[] Segments
  bool IsUnc
  string Host
  object InitializeLock
  int Port
  string Query
  string Fragment
  string Scheme
  bool OriginalStringSwitched
  string OriginalString
  string DnsSafeHost
  string IdnHost
  bool IsAbsoluteUri
  bool UserEscaped
  string UserInfo
  bool HasAuthority
Методы:
  bool get_IsImplicitFile()
  bool get_IsUncOrDosPath()
  bool get_IsDosPath()
  bool get_IsUncPath()
  Flags get_HostType()
  UriParser get_Syntax()
  bool get_IsNotAbsoluteUri()
  bool IriParsingStatic(UriParser syntax)
  bool get_AllowIdn()
  bool AllowIdnStatic(UriParser syntax, Flags flags)
  bool IsIntranet(string schemeHost)
  bool get_UserDrivenParsing()
  void SetUserDrivenParsing()
  ushort get_SecuredPathIndex()
  bool NotAny(Flags flags)
  bool InFact(Flags flags)
  bool StaticNotAny(Flags allFlags, Flags checkFlags)
  bool StaticInFact(Flags allFlags, Flags checkFlags)
  UriInfo EnsureUriInfo()
  void EnsureParseRemaining()
  void EnsureHostString(bool allowDnsOptimization)
  void .ctor(string uriString)
  void .ctor(string uriString, bool dontEscape)
  void .ctor(Uri baseUri, string relativeUri, bool dontEscape)
  void .ctor(string uriString, UriKind uriKind)
  void .ctor(Uri baseUri, string relativeUri)
  void CreateUri(Uri baseUri, string relativeUri, bool dontEscape)
  void .ctor(Uri baseUri, Uri relativeUri)
  ParsingError GetCombinedString(Uri baseUri, string relativeStr, bool dontEscape, String& result)
  UriFormatException GetException(ParsingError err)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  string get_AbsolutePath()
  string get_PrivateAbsolutePath()
  string get_AbsoluteUri()
  string get_LocalPath()
  string get_Authority()
  UriHostNameType get_HostNameType()
  bool get_IsDefaultPort()
  bool get_IsFile()
  bool get_IsLoopback()
  string get_PathAndQuery()
  String[] get_Segments()
  bool get_IsUnc()
  string get_Host()
  bool StaticIsFile(UriParser syntax)
  object get_InitializeLock()
  void InitializeUriConfig()
  string GetLocalPath()
  int get_Port()
  string get_Query()
  string get_Fragment()
  string get_Scheme()
  bool get_OriginalStringSwitched()
  string get_OriginalString()
  string get_DnsSafeHost()
  string get_IdnHost()
  bool get_IsAbsoluteUri()
  bool get_UserEscaped()
  string get_UserInfo()
  UriHostNameType CheckHostName(string name)
  string GetLeftPart(UriPartial part)
  string HexEscape(char character)
  char HexUnescape(string pattern, Int32& index)
  bool IsHexEncoding(string pattern, int index)
  bool IsGenDelim(char ch)
  bool CheckSchemeName(string schemeName)
  bool IsHexDigit(char character)
  int FromHex(char digit)
  int GetHashCode()
  string ToString()
  bool op_Equality(Uri uri1, Uri uri2)
  bool op_Inequality(Uri uri1, Uri uri2)
  bool Equals(object comparand)
  Uri MakeRelativeUri(Uri uri)
  bool CheckForColonInFirstPathSegment(string uriString)
  string InternalEscapeString(string rawString)
  ParsingError ParseScheme(string uriString, Flags& flags, UriParser& syntax)
  UriFormatException ParseMinimal()
  ParsingError PrivateParseMinimal()
  void PrivateParseMinimalIri(string newHost, ushort idx)
  void CreateUriInfo(Flags cF)
  void CreateHostString()
  string CreateHostStringHelper(string str, ushort idx, ushort end, Flags& flags, String& scopeId)
  void GetHostViaCustomSyntax()
  string GetParts(UriComponents uriParts, UriFormat formatAs)
  string GetEscapedParts(UriComponents uriParts)
  string GetUnescapedParts(UriComponents uriParts, UriFormat formatAs)
  string ReCreateParts(UriComponents parts, ushort nonCanonical, UriFormat formatAs)
  string GetUriPartsFromUserString(UriComponents uriParts)
  void ParseRemaining()
  ushort ParseSchemeCheckImplicitFile(Char* uriString, ushort length, ParsingError& err, Flags& flags, UriParser& syntax)
  bool CheckKnownSchemes(Int64* lptr, ushort nChars, UriParser& syntax)
  ParsingError CheckSchemeSyntax(Char* ptr, ushort length, UriParser& syntax)
  ushort CheckAuthorityHelper(Char* pString, ushort idx, ushort length, ParsingError& err, Flags& flags, UriParser syntax, String& newHost)
  void CheckAuthorityHelperHandleDnsIri(Char* pString, ushort start, int end, int startInput, bool iriParsing, bool hasUnicode, UriParser syntax, string userInfoString, Flags& flags, Boolean& justNormalized, String& newHost, ParsingError& err)
  void CheckAuthorityHelperHandleAnyHostIri(Char* pString, int startInput, int end, bool iriParsing, bool hasUnicode, UriParser syntax, Flags& flags, String& newHost, ParsingError& err)
  void FindEndOfComponent(string input, UInt16& idx, ushort end, char delim)
  void FindEndOfComponent(Char* str, UInt16& idx, ushort end, char delim)
  Check CheckCanonical(Char* str, UInt16& idx, ushort end, char delim)
  Char[] GetCanonicalPath(Char[] dest, Int32& pos, UriFormat formatAs)
  void UnescapeOnly(Char* pch, int start, Int32& end, char ch1, char ch2, char ch3)
  Char[] Compress(Char[] dest, ushort start, Int32& destLength, UriParser syntax)
  int CalculateCaseInsensitiveHashCode(string text)
  string CombineUri(Uri basePart, string relativePart, UriFormat uriFormat)
  string PathDifference(string path1, string path2, bool compareCase)
  bool get_HasAuthority()
  bool IsLWS(char ch)
  bool IsAsciiLetter(char character)
  bool IsAsciiLetterOrDigit(char character)
  bool IsBidiControlCharacter(char ch)
  string StripBidiControlCharacter(Char* strToClean, int start, int length)
  string MakeRelative(Uri toUri)
  void Parse()
  void Canonicalize()
  void Escape()
  string Unescape(string path)
  string EscapeString(string str)
  void CheckSecurity()
  bool IsReservedCharacter(char character)
  bool IsExcludedCharacter(char character)
  bool IsBadFileSystemCharacter(char character)
  void CreateThis(string uri, bool dontEscape, UriKind uriKind)
  void InitializeUri(ParsingError err, UriKind uriKind, UriFormatException& e)
  bool CheckForConfigLoad(string data)
  bool CheckForUnicode(string data)
  bool CheckForEscapedUnreserved(string data)
  bool TryCreate(string uriString, UriKind uriKind, Uri& result)
  bool TryCreate(Uri baseUri, string relativeUri, Uri& result)
  bool TryCreate(Uri baseUri, Uri relativeUri, Uri& result)
  string GetComponents(UriComponents components, UriFormat format)
  int Compare(Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType)
  bool IsWellFormedOriginalString()
  bool IsWellFormedUriString(string uriString, UriKind uriKind)
  bool InternalIsWellFormedOriginalString()
  string UnescapeDataString(string stringToUnescape)
  string EscapeUriString(string stringToEscape)
  string EscapeDataString(string stringToEscape)
  string EscapeUnescapeIri(string input, int start, int end, UriComponents component)
  void .ctor(Flags flags, UriParser uriParser, string uri)
  Uri CreateHelper(string uriString, bool dontEscape, UriKind uriKind, UriFormatException& e)
  Uri ResolveHelper(Uri baseUri, Uri relativeUri, String& newUriString, Boolean& userEscaped, UriFormatException& e)
  string GetRelativeSerializationString(UriFormat format)
  string GetComponentsHelper(UriComponents uriComponents, UriFormat uriFormat)
  bool IsBaseOf(Uri uri)
  bool IsBaseOfHelper(Uri uriLink)
  void CreateThisFromUri(Uri otherUri)
  void .cctor()
--------------------------------------------------
Класс: System.UriFormatException
Наследуется от: FormatException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string textString)
  void .ctor(string textString, Exception e)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.UriPartial
Наследуется от: Enum
Поля:
  int value__
  UriPartial Scheme
  UriPartial Authority
  UriPartial Path
  UriPartial Query
Свойства:
Методы:
--------------------------------------------------
Класс: System.UriKind
Наследуется от: Enum
Поля:
  int value__
  UriKind RelativeOrAbsolute
  UriKind Absolute
  UriKind Relative
Свойства:
Методы:
--------------------------------------------------
Класс: System.UriComponents
Наследуется от: Enum
Поля:
  int value__
  UriComponents Scheme
  UriComponents UserInfo
  UriComponents Host
  UriComponents Port
  UriComponents Path
  UriComponents Query
  UriComponents Fragment
  UriComponents StrongPort
  UriComponents NormalizedHost
  UriComponents KeepDelimiter
  UriComponents SerializationInfoString
  UriComponents AbsoluteUri
  UriComponents HostAndPort
  UriComponents StrongAuthority
  UriComponents SchemeAndServer
  UriComponents HttpRequestUrl
  UriComponents PathAndQuery
Свойства:
Методы:
--------------------------------------------------
Класс: System.UriFormat
Наследуется от: Enum
Поля:
  int value__
  UriFormat UriEscaped
  UriFormat Unescaped
  UriFormat SafeUnescaped
Свойства:
Методы:
--------------------------------------------------
Класс: System.UriIdnScope
Наследуется от: Enum
Поля:
  int value__
  UriIdnScope None
  UriIdnScope AllExceptIntranet
  UriIdnScope All
Свойства:
Методы:
--------------------------------------------------
Класс: System.ParsingError
Наследуется от: Enum
Поля:
  int value__
  ParsingError None
  ParsingError BadFormat
  ParsingError BadScheme
  ParsingError BadAuthority
  ParsingError EmptyUriString
  ParsingError LastRelativeUriOkErrIndex
  ParsingError SchemeLimit
  ParsingError SizeLimit
  ParsingError MustRootedPath
  ParsingError BadHostName
  ParsingError NonEmptyHost
  ParsingError BadPort
  ParsingError BadAuthorityTerminator
  ParsingError CannotCreateRelative
Свойства:
Методы:
--------------------------------------------------
Класс: System.UnescapeMode
Наследуется от: Enum
Поля:
  int value__
  UnescapeMode CopyOnly
  UnescapeMode Escape
  UnescapeMode Unescape
  UnescapeMode EscapeUnescape
  UnescapeMode V1ToStringFlag
  UnescapeMode UnescapeAll
  UnescapeMode UnescapeAllOrThrow
Свойства:
Методы:
--------------------------------------------------
Класс: System.UriHelper
Наследуется от: object
Поля:
  Char[] HexUpperChars
  short c_MaxAsciiCharsReallocate
  short c_MaxUnicodeCharsReallocate
  short c_MaxUTF_8BytesPerUnicodeChar
  short c_EncodedCharsPerByte
  string RFC2396ReservedMarks
  string RFC3986ReservedMarks
  string RFC2396UnreservedMarks
  string RFC3986UnreservedMarks
Свойства:
Методы:
  bool TestForSubPath(Char* pMe, ushort meLength, Char* pShe, ushort sheLength, bool ignoreCase)
  Char[] EscapeString(string input, int start, int end, Char[] dest, Int32& destPos, bool isUriString, char force1, char force2, char rsvd)
  Char[] EnsureDestinationSize(Char* pStr, Char[] dest, int currentInputPos, short charsToAdd, short minReallocateChars, Int32& destPos, int prevInputPos)
  Char[] UnescapeString(string input, int start, int end, Char[] dest, Int32& destPosition, char rsvd1, char rsvd2, char rsvd3, UnescapeMode unescapeMode, UriParser syntax, bool isQuery)
  Char[] UnescapeString(Char* pStr, int start, int end, Char[] dest, Int32& destPosition, char rsvd1, char rsvd2, char rsvd3, UnescapeMode unescapeMode, UriParser syntax, bool isQuery)
  void MatchUTF8Sequence(Char* pDest, Char[] dest, Int32& destOffset, Char[] unescapedChars, int charCount, Byte[] bytes, int byteCount, bool isQuery, bool iriParsing)
  void EscapeAsciiChar(char ch, Char[] to, Int32& pos)
  char EscapedAscii(char digit, char next)
  bool IsNotSafeForUnescape(char ch)
  bool IsReservedUnreservedOrHash(char c)
  bool IsUnreserved(char c)
  bool Is3986Unreserved(char c)
  void .cctor()
--------------------------------------------------
Класс: System.UriHostNameType
Наследуется от: Enum
Поля:
  int value__
  UriHostNameType Unknown
  UriHostNameType Basic
  UriHostNameType Dns
  UriHostNameType IPv4
  UriHostNameType IPv6
Свойства:
Методы:
--------------------------------------------------
Класс: System.HttpStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.FtpStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.FileStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.NewsStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.GopherStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.LdapStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.NetPipeStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.NetTcpStyleUriParser
Наследуется от: UriParser
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.UriParser
Наследуется от: object
Поля:
  UriSyntaxFlags SchemeOnlyFlags
  Dictionary`2<string, UriParser> m_Table
  Dictionary`2<string, UriParser> m_TempTable
  UriSyntaxFlags m_Flags
  UriSyntaxFlags modreq(System.Runtime.CompilerServices.IsVolatile) m_UpdatableFlags
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) m_UpdatableFlagsUsed
  UriSyntaxFlags c_UpdatableFlags
  int m_Port
  string m_Scheme
  int NoDefaultPort
  int c_InitialTableSize
  UriParser HttpUri
  UriParser HttpsUri
  UriParser WsUri
  UriParser WssUri
  UriParser FtpUri
  UriParser FileUri
  UriParser GopherUri
  UriParser NntpUri
  UriParser NewsUri
  UriParser MailToUri
  UriParser UuidUri
  UriParser TelnetUri
  UriParser LdapUri
  UriParser NetTcpUri
  UriParser NetPipeUri
  UriParser VsMacrosUri
  UriQuirksVersion s_QuirksVersion
  int c_MaxCapacity
  UriSyntaxFlags UnknownV1SyntaxFlags
  UriSyntaxFlags HttpSyntaxFlags
  UriSyntaxFlags FtpSyntaxFlags
  UriSyntaxFlags FileSyntaxFlags
  UriSyntaxFlags VsmacrosSyntaxFlags
  UriSyntaxFlags GopherSyntaxFlags
  UriSyntaxFlags NewsSyntaxFlags
  UriSyntaxFlags NntpSyntaxFlags
  UriSyntaxFlags TelnetSyntaxFlags
  UriSyntaxFlags LdapSyntaxFlags
  UriSyntaxFlags MailtoSyntaxFlags
  UriSyntaxFlags NetPipeSyntaxFlags
  UriSyntaxFlags NetTcpSyntaxFlags
Свойства:
  string SchemeName
  int DefaultPort
  bool ShouldUseLegacyV2Quirks
  UriSyntaxFlags Flags
  bool IsSimple
Методы:
  string get_SchemeName()
  int get_DefaultPort()
  void .ctor()
  UriParser OnNewUri()
  void OnRegister(string schemeName, int defaultPort)
  void InitializeAndValidate(Uri uri, UriFormatException& parsingError)
  string Resolve(Uri baseUri, Uri relativeUri, UriFormatException& parsingError)
  bool IsBaseOf(Uri baseUri, Uri relativeUri)
  string GetComponents(Uri uri, UriComponents components, UriFormat format)
  bool IsWellFormedOriginalString(Uri uri)
  void Register(UriParser uriParser, string schemeName, int defaultPort)
  bool IsKnownScheme(string schemeName)
  bool get_ShouldUseLegacyV2Quirks()
  void .cctor()
  UriSyntaxFlags get_Flags()
  bool NotAny(UriSyntaxFlags flags)
  bool InFact(UriSyntaxFlags flags)
  bool IsAllSet(UriSyntaxFlags flags)
  bool IsFullMatch(UriSyntaxFlags flags, UriSyntaxFlags expected)
  void .ctor(UriSyntaxFlags flags)
  void FetchSyntax(UriParser syntax, string lwrCaseSchemeName, int defaultPort)
  UriParser FindOrFetchAsUnknownV1Syntax(string lwrCaseScheme)
  UriParser GetSyntax(string lwrCaseScheme)
  bool get_IsSimple()
  void CheckSetIsSimpleFlag()
  void SetUpdatableFlags(UriSyntaxFlags flags)
  UriParser InternalOnNewUri()
  void InternalValidate(Uri thisUri, UriFormatException& parsingError)
  string InternalResolve(Uri thisBaseUri, Uri uriLink, UriFormatException& parsingError)
  bool InternalIsBaseOf(Uri thisBaseUri, Uri uriLink)
  string InternalGetComponents(Uri thisUri, UriComponents uriComponents, UriFormat uriFormat)
  bool InternalIsWellFormedOriginalString(Uri thisUri)
--------------------------------------------------
Класс: System.DomainNameHelper
Наследуется от: object
Поля:
  char c_DummyChar
  string Localhost
  string Loopback
Свойства:
Методы:
  void .ctor()
  string ParseCanonicalName(string str, int start, int end, Boolean& loopback)
  bool IsValid(Char* name, ushort pos, Int32& returnedEnd, Boolean& notCanonical, bool notImplicitFile)
  bool IsValidByIri(Char* name, ushort pos, Int32& returnedEnd, Boolean& notCanonical, bool notImplicitFile)
  string IdnEquivalent(string hostname)
  string IdnEquivalent(Char* hostname, int start, int end, Boolean& allAscii, Boolean& atLeastOneValidIdn)
  string IdnEquivalent(Char* hostname, int start, int end, Boolean& allAscii, String& bidiStrippedHost)
  bool IsIdnAce(string input, int index)
  bool IsIdnAce(Char* input, int index)
  string UnicodeEquivalent(string idnHost, Char* hostname, int start, int end)
  string UnicodeEquivalent(Char* hostname, int start, int end, Boolean& allAscii, Boolean& atLeastOneValidIdn)
  bool IsASCIILetterOrDigit(char character, Boolean& notCanonical)
  bool IsValidDomainLabelCharacter(char character, Boolean& notCanonical)
--------------------------------------------------
Класс: System.UncNameHelper
Наследуется от: object
Поля:
  int MaximumInternetNameLength
Свойства:
Методы:
  void .ctor()
  string ParseCanonicalName(string str, int start, int end, Boolean& loopback)
  bool IsValid(Char* name, ushort start, Int32& returnedEnd, bool notImplicitFile)
--------------------------------------------------
Класс: System.UriSyntaxFlags
Наследуется от: Enum
Поля:
  int value__
  UriSyntaxFlags None
  UriSyntaxFlags MustHaveAuthority
  UriSyntaxFlags OptionalAuthority
  UriSyntaxFlags MayHaveUserInfo
  UriSyntaxFlags MayHavePort
  UriSyntaxFlags MayHavePath
  UriSyntaxFlags MayHaveQuery
  UriSyntaxFlags MayHaveFragment
  UriSyntaxFlags AllowEmptyHost
  UriSyntaxFlags AllowUncHost
  UriSyntaxFlags AllowDnsHost
  UriSyntaxFlags AllowIPv4Host
  UriSyntaxFlags AllowIPv6Host
  UriSyntaxFlags AllowAnInternetHost
  UriSyntaxFlags AllowAnyOtherHost
  UriSyntaxFlags FileLikeUri
  UriSyntaxFlags MailToLikeUri
  UriSyntaxFlags V1_UnknownUri
  UriSyntaxFlags SimpleUserSyntax
  UriSyntaxFlags BuiltInSyntax
  UriSyntaxFlags ParserSchemeOnly
  UriSyntaxFlags AllowDOSPath
  UriSyntaxFlags PathIsRooted
  UriSyntaxFlags ConvertPathSlashes
  UriSyntaxFlags CompressPath
  UriSyntaxFlags CanonicalizeAsFilePath
  UriSyntaxFlags UnEscapeDotsAndSlashes
  UriSyntaxFlags AllowIdn
  UriSyntaxFlags AllowIriParsing
Свойства:
Методы:
--------------------------------------------------
Класс: System.EnvironmentHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsWindowsVistaOrAbove()
--------------------------------------------------
Класс: System.LocalAppContextSwitches
Наследуется от: object
Поля:
  bool MemberDescriptorEqualsReturnsFalseIfEquivalent
Свойства:
Методы:
--------------------------------------------------
Класс: System.IOOperation
Наследуется от: Enum
Поля:
  int value__
  IOOperation Read
  IOOperation Write
Свойства:
Методы:
--------------------------------------------------
Класс: System.IOAsyncCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(IOAsyncResult ioares)
  IAsyncResult BeginInvoke(IOAsyncResult ioares, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IOAsyncResult
Наследуется от: object
Поля:
  AsyncCallback async_callback
  object async_state
  ManualResetEvent wait_handle
  bool completed_synchronously
  bool completed
Свойства:
  AsyncCallback AsyncCallback
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
Методы:
  void .ctor()
  void Init(AsyncCallback async_callback, object async_state)
  void .ctor(AsyncCallback async_callback, object async_state)
  AsyncCallback get_AsyncCallback()
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  void set_CompletedSynchronously(bool value)
  bool get_IsCompleted()
  void set_IsCompleted(bool value)
  void CompleteDisposed()
--------------------------------------------------
Класс: System.IOSelectorJob
Наследуется от: object
Поля:
  IOOperation operation
  IOAsyncCallback callback
  IOAsyncResult state
Свойства:
Методы:
  void .ctor(IOOperation operation, IOAsyncCallback callback, IOAsyncResult state)
  void System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()
  void System.Threading.IThreadPoolWorkItem.MarkAborted(ThreadAbortException tae)
  void MarkDisposed()
--------------------------------------------------
Класс: System.IOSelector
Наследуется от: object
Поля:
Свойства:
Методы:
  void Add(IntPtr handle, IOSelectorJob job)
  void Remove(IntPtr handle)
--------------------------------------------------
Класс: System.MonoToolsLocator
Наследуется от: object
Поля:
  string Mono
  string McsCSharpCompiler
  string VBCompiler
  string AssemblyLinker
Свойства:
Методы:
  void .cctor()
  UInt32 GetModuleFileName(IntPtr hModule, StringBuilder lpFilename, int nSize)
--------------------------------------------------
Класс: System.Platform
Наследуется от: object
Поля:
  bool checkedOS
  bool isMacOS
  bool isAix
  bool isIBMi
  bool isFreeBSD
  bool isOpenBSD
Свойства:
  bool IsMacOS
  bool IsFreeBSD
  bool IsOpenBSD
  bool IsIBMi
  bool IsAix
Методы:
  int uname(IntPtr buf)
  void CheckOS()
  bool get_IsMacOS()
  bool get_IsFreeBSD()
  bool get_IsOpenBSD()
  bool get_IsIBMi()
  bool get_IsAix()
--------------------------------------------------
Класс: System.SRDescriptionAttribute
Наследуется от: DescriptionAttribute
Поля:
  bool isReplaced
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.UriTypeConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  void .ctor()
  bool CanConvert(Type type)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  bool IsValid(ITypeDescriptorContext context, object value)
--------------------------------------------------
Класс: System.Media.SoundPlayer
Наследуется от: Component
Поля:
  string sound_location
  Stream audiostream
  object tag
  MemoryStream mstream
  bool load_completed
  int load_timeout
  AudioDevice adev
  AudioData adata
  bool stopped
  Win32SoundPlayer win32_player
  bool use_win32_player
  AsyncCompletedEventHandler LoadCompleted
  EventHandler SoundLocationChanged
  EventHandler StreamChanged
Свойства:
  bool IsLoadCompleted
  int LoadTimeout
  string SoundLocation
  Stream Stream
  object Tag
Методы:
  void .cctor()
  void .ctor()
  void .ctor(Stream stream)
  void .ctor(string soundLocation)
  void .ctor(SerializationInfo serializationInfo, StreamingContext context)
  void LoadFromStream(Stream s)
  void LoadFromUri(string location)
  void Load()
  void AsyncFinished(IAsyncResult ar)
  void LoadAsync()
  void OnLoadCompleted(AsyncCompletedEventArgs e)
  void OnSoundLocationChanged(EventArgs e)
  void OnStreamChanged(EventArgs e)
  void Start()
  void Play()
  void PlayLoop()
  void PlayLooping()
  void PlaySync()
  void Stop()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  bool get_IsLoadCompleted()
  int get_LoadTimeout()
  void set_LoadTimeout(int value)
  string get_SoundLocation()
  void set_SoundLocation(string value)
  Stream get_Stream()
  void set_Stream(Stream value)
  object get_Tag()
  void set_Tag(object value)
  void add_LoadCompleted(AsyncCompletedEventHandler value)
  void remove_LoadCompleted(AsyncCompletedEventHandler value)
  void add_SoundLocationChanged(EventHandler value)
  void remove_SoundLocationChanged(EventHandler value)
  void add_StreamChanged(EventHandler value)
  void remove_StreamChanged(EventHandler value)
--------------------------------------------------
Класс: System.Media.SystemSound
Наследуется от: object
Поля:
  Stream resource
Свойства:
Методы:
  void .ctor(string tag)
  void Play()
  void .ctor()
--------------------------------------------------
Класс: System.Media.SystemSounds
Наследуется от: object
Поля:
Свойства:
  SystemSound Asterisk
  SystemSound Beep
  SystemSound Exclamation
  SystemSound Hand
  SystemSound Question
Методы:
  void .ctor()
  SystemSound get_Asterisk()
  SystemSound get_Beep()
  SystemSound get_Exclamation()
  SystemSound get_Hand()
  SystemSound get_Question()
--------------------------------------------------
Класс: System.Windows.Input.ICommand
Поля:
Свойства:
Методы:
  bool CanExecute(object parameter)
  void Execute(object parameter)
  void add_CanExecuteChanged(EventHandler value)
  void remove_CanExecuteChanged(EventHandler value)
--------------------------------------------------
Класс: System.Windows.Markup.ValueSerializerAttribute
Наследуется от: Attribute
Поля:
  Type _valueSerializerType
  string _valueSerializerTypeName
Свойства:
  Type ValueSerializerType
  string ValueSerializerTypeName
Методы:
  void .ctor(Type valueSerializerType)
  void .ctor(string valueSerializerTypeName)
  Type get_ValueSerializerType()
  string get_ValueSerializerTypeName()
--------------------------------------------------
Класс: System.Threading.BarrierPostPhaseException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(Exception innerException)
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Threading.Barrier
Наследуется от: object
Поля:
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) m_currentTotalCount
  int CURRENT_MASK
  int TOTAL_MASK
  int SENSE_MASK
  int MAX_PARTICIPANTS
  long m_currentPhase
  bool m_disposed
  ManualResetEventSlim m_oddEvent
  ManualResetEventSlim m_evenEvent
  ExecutionContext m_ownerThreadContext
  ContextCallback s_invokePostPhaseAction
  Action`1<Barrier> m_postPhaseAction
  Exception m_exception
  int m_actionCallerID
Свойства:
  int ParticipantsRemaining
  int ParticipantCount
  long CurrentPhaseNumber
Методы:
  int get_ParticipantsRemaining()
  int get_ParticipantCount()
  long get_CurrentPhaseNumber()
  void set_CurrentPhaseNumber(long value)
  void .ctor(int participantCount)
  void .ctor(int participantCount, Action`1<Barrier> postPhaseAction)
  void GetCurrentTotal(int currentTotal, Int32& current, Int32& total, Boolean& sense)
  bool SetCurrentTotal(int currentTotal, int current, int total, bool sense)
  long AddParticipant()
  long AddParticipants(int participantCount)
  void RemoveParticipant()
  void RemoveParticipants(int participantCount)
  void SignalAndWait()
  void SignalAndWait(CancellationToken cancellationToken)
  bool SignalAndWait(TimeSpan timeout)
  bool SignalAndWait(TimeSpan timeout, CancellationToken cancellationToken)
  bool SignalAndWait(int millisecondsTimeout)
  bool SignalAndWait(int millisecondsTimeout, CancellationToken cancellationToken)
  void FinishPhase(bool observedSense)
  void InvokePostPhaseAction(object obj)
  void SetResetEvents(bool observedSense)
  void WaitCurrentPhase(ManualResetEventSlim currentPhaseEvent, long observedPhase)
  bool DiscontinuousWait(ManualResetEventSlim currentPhaseEvent, int totalTimeout, CancellationToken token, long observedPhase)
  void Dispose()
  void Dispose(bool disposing)
  void ThrowIfDisposed()
--------------------------------------------------
Класс: System.Threading.Semaphore
Наследуется от: WaitHandle
Поля:
  int MAX_PATH
Свойства:
Методы:
  void .ctor(int initialCount, int maximumCount)
  void .ctor(int initialCount, int maximumCount, string name)
  void .ctor(int initialCount, int maximumCount, string name, Boolean& createdNew)
  void .ctor(int initialCount, int maximumCount, string name, Boolean& createdNew, SemaphoreSecurity semaphoreSecurity)
  void .ctor(SafeWaitHandle handle)
  Semaphore OpenExisting(string name)
  Semaphore OpenExisting(string name, SemaphoreRights rights)
  bool TryOpenExisting(string name, Semaphore& result)
  bool TryOpenExisting(string name, SemaphoreRights rights, Semaphore& result)
  OpenExistingResult OpenExistingWorker(string name, SemaphoreRights rights, Semaphore& result)
  int Release()
  int Release(int releaseCount)
  SemaphoreSecurity GetAccessControl()
  void SetAccessControl(SemaphoreSecurity semaphoreSecurity)
  IntPtr CreateSemaphore_internal(int initialCount, int maximumCount, string name, Int32& errorCode)
  IntPtr OpenSemaphore_internal(string name, SemaphoreRights rights, Int32& errorCode)
  IntPtr CreateSemaphore_icall(int initialCount, int maximumCount, Char* name, int name_length, Int32& errorCode)
  IntPtr OpenSemaphore_icall(Char* name, int name_length, SemaphoreRights rights, Int32& errorCode)
  bool ReleaseSemaphore_internal(IntPtr handle, int releaseCount, Int32& previousCount)
--------------------------------------------------
Класс: System.Threading.ThreadExceptionEventArgs
Наследуется от: EventArgs
Поля:
  Exception exception
Свойства:
  Exception Exception
Методы:
  void .ctor(Exception t)
  Exception get_Exception()
--------------------------------------------------
Класс: System.Threading.ThreadExceptionEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ThreadExceptionEventArgs e)
  IAsyncResult BeginInvoke(object sender, ThreadExceptionEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.Versioning.FrameworkName
Наследуется от: object
Поля:
  string m_identifier
  Version m_version
  string m_profile
  string m_fullName
  char c_componentSeparator
  char c_keyValueSeparator
  char c_versionValuePrefix
  string c_versionKey
  string c_profileKey
Свойства:
  string Identifier
  Version Version
  string Profile
  string FullName
Методы:
  string get_Identifier()
  Version get_Version()
  string get_Profile()
  string get_FullName()
  bool Equals(object obj)
  bool Equals(FrameworkName other)
  int GetHashCode()
  string ToString()
  void .ctor(string identifier, Version version)
  void .ctor(string identifier, Version version, string profile)
  void .ctor(string frameworkName)
  bool op_Equality(FrameworkName left, FrameworkName right)
  bool op_Inequality(FrameworkName left, FrameworkName right)
--------------------------------------------------
Класс: System.Runtime.Versioning.BinaryCompatibility
Наследуется от: object
Поля:
  bool TargetsAtLeast_Desktop_V4_5
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.DefaultParameterValueAttribute
Наследуется от: Attribute
Поля:
  object value
Свойства:
  object Value
Методы:
  void .ctor(object value)
  object get_Value()
--------------------------------------------------
Класс: System.Runtime.InteropServices.HandleCollector
Наследуется от: object
Поля:
  int deltaPercent
  string name
  int initialThreshold
  int maximumThreshold
  int threshold
  int handleCount
  Int32[] gc_counts
  int gc_gen
Свойства:
  int Count
  int InitialThreshold
  int MaximumThreshold
  string Name
Методы:
  void .ctor(string name, int initialThreshold)
  void .ctor(string name, int initialThreshold, int maximumThreshold)
  int get_Count()
  int get_InitialThreshold()
  int get_MaximumThreshold()
  string get_Name()
  void Add()
  void Remove()
--------------------------------------------------
Класс: System.Runtime.InteropServices.StandardOleMarshalObject
Наследуется от: MarshalByRefObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.ADVF
Наследуется от: Enum
Поля:
  int value__
  ADVF ADVF_NODATA
  ADVF ADVF_PRIMEFIRST
  ADVF ADVF_ONLYONCE
  ADVF ADVFCACHE_NOHANDLER
  ADVF ADVFCACHE_FORCEBUILTIN
  ADVF ADVFCACHE_ONSAVE
  ADVF ADVF_DATAONSTOP
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.DATADIR
Наследуется от: Enum
Поля:
  int value__
  DATADIR DATADIR_GET
  DATADIR DATADIR_SET
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.DVASPECT
Наследуется от: Enum
Поля:
  int value__
  DVASPECT DVASPECT_CONTENT
  DVASPECT DVASPECT_THUMBNAIL
  DVASPECT DVASPECT_ICON
  DVASPECT DVASPECT_DOCPRINT
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.FORMATETC
Наследуется от: ValueType
Поля:
  short cfFormat
  DVASPECT dwAspect
  int lindex
  IntPtr ptd
  TYMED tymed
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IAdviseSink
Поля:
Свойства:
Методы:
  void OnClose()
  void OnDataChange(FORMATETC& format, STGMEDIUM& stgmedium)
  void OnRename(IMoniker moniker)
  void OnSave()
  void OnViewChange(int aspect, int index)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IDataObject
Поля:
Свойства:
Методы:
  int DAdvise(FORMATETC& pFormatetc, ADVF advf, IAdviseSink adviseSink, Int32& connection)
  void DUnadvise(int connection)
  int EnumDAdvise(IEnumSTATDATA& enumAdvise)
  IEnumFORMATETC EnumFormatEtc(DATADIR direction)
  int GetCanonicalFormatEtc(FORMATETC& formatIn, FORMATETC& formatOut)
  void GetData(FORMATETC& format, STGMEDIUM& medium)
  void GetDataHere(FORMATETC& format, STGMEDIUM& medium)
  int QueryGetData(FORMATETC& format)
  void SetData(FORMATETC& formatIn, STGMEDIUM& medium, bool release)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumFORMATETC
Поля:
Свойства:
Методы:
  void Clone(IEnumFORMATETC& newEnum)
  int Next(int celt, FORMATETC[] rgelt, Int32[] pceltFetched)
  int Reset()
  int Skip(int celt)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.IEnumSTATDATA
Поля:
Свойства:
Методы:
  void Clone(IEnumSTATDATA& newEnum)
  int Next(int celt, STATDATA[] rgelt, Int32[] pceltFetched)
  int Reset()
  int Skip(int celt)
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.STATDATA
Наследуется от: ValueType
Поля:
  ADVF advf
  IAdviseSink advSink
  int connection
  FORMATETC formatetc
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.STGMEDIUM
Наследуется от: ValueType
Поля:
  object pUnkForRelease
  TYMED tymed
  IntPtr unionmember
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.InteropServices.ComTypes.TYMED
Наследуется от: Enum
Поля:
  int value__
  TYMED TYMED_HGLOBAL
  TYMED TYMED_FILE
  TYMED TYMED_ISTREAM
  TYMED TYMED_ISTORAGE
  TYMED TYMED_GDI
  TYMED TYMED_MFPICT
  TYMED TYMED_ENHMF
  TYMED TYMED_NULL
Свойства:
Методы:
--------------------------------------------------
Класс: System.Timers.ElapsedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ElapsedEventArgs e)
  IAsyncResult BeginInvoke(object sender, ElapsedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Timers.Timer
Наследуется от: Component
Поля:
  double interval
  bool enabled
  bool initializing
  bool delayedEnable
  ElapsedEventHandler onIntervalElapsed
  bool autoReset
  ISynchronizeInvoke synchronizingObject
  bool disposed
  Timer timer
  TimerCallback callback
  object cookie
Свойства:
  bool AutoReset
  bool Enabled
  double Interval
  ISite Site
  ISynchronizeInvoke SynchronizingObject
Методы:
  void .ctor()
  void .ctor(double interval)
  bool get_AutoReset()
  void set_AutoReset(bool value)
  bool get_Enabled()
  void set_Enabled(bool value)
  int CalculateRoundedInterval(double interval, bool argumentCheck)
  void UpdateTimer()
  double get_Interval()
  void set_Interval(double value)
  void add_Elapsed(ElapsedEventHandler value)
  void remove_Elapsed(ElapsedEventHandler value)
  void set_Site(ISite value)
  ISite get_Site()
  ISynchronizeInvoke get_SynchronizingObject()
  void set_SynchronizingObject(ISynchronizeInvoke value)
  void BeginInit()
  void Close()
  void Dispose(bool disposing)
  void EndInit()
  void Start()
  void Stop()
  void MyTimerCallback(object state)
--------------------------------------------------
Класс: System.Timers.TimersDescriptionAttribute
Наследуется от: DescriptionAttribute
Поля:
  bool replaced
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Timers.ElapsedEventArgs
Наследуется от: EventArgs
Поля:
  DateTime time
Свойства:
  DateTime SignalTime
Методы:
  void .ctor(DateTime time)
  DateTime get_SignalTime()
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.PrivilegedConfigurationManager
Наследуется от: object
Поля:
Свойства:
  ConnectionStringSettingsCollection ConnectionStrings
Методы:
  ConnectionStringSettingsCollection get_ConnectionStrings()
  object GetSection(string sectionName)
--------------------------------------------------
Класс: System.Configuration.AppSettingsReader
Наследуется от: object
Поля:
  NameValueCollection appSettings
Свойства:
Методы:
  void .ctor()
  object GetValue(string key, Type type)
--------------------------------------------------
Класс: System.Configuration.ApplicationScopedSettingAttribute
Наследуется от: SettingAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.ApplicationSettingsBase
Наследуется от: SettingsBase
Поля:
  PropertyChangedEventHandler PropertyChanged
  SettingChangingEventHandler SettingChanging
  SettingsLoadedEventHandler SettingsLoaded
  SettingsSavingEventHandler SettingsSaving
  string settingsKey
  SettingsContext context
  SettingsPropertyCollection properties
  ISettingsProviderService providerService
  SettingsPropertyValueCollection propertyValues
  SettingsProviderCollection providers
Свойства:
  SettingsContext Context
  object Item
  SettingsPropertyCollection Properties
  SettingsPropertyValueCollection PropertyValues
  SettingsProviderCollection Providers
  string SettingsKey
Методы:
  void .ctor()
  void .ctor(IComponent owner)
  void .ctor(string settingsKey)
  void .ctor(IComponent owner, string settingsKey)
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
  void add_SettingChanging(SettingChangingEventHandler value)
  void remove_SettingChanging(SettingChangingEventHandler value)
  void add_SettingsLoaded(SettingsLoadedEventHandler value)
  void remove_SettingsLoaded(SettingsLoadedEventHandler value)
  void add_SettingsSaving(SettingsSavingEventHandler value)
  void remove_SettingsSaving(SettingsSavingEventHandler value)
  object GetPreviousVersion(string propertyName)
  void Reload()
  void Reset()
  void Save()
  void InternalSave()
  void Upgrade()
  SettingsPropertyCollection GetPropertiesForProvider(SettingsProvider provider)
  void OnPropertyChanged(object sender, PropertyChangedEventArgs e)
  void OnSettingChanging(object sender, SettingChangingEventArgs e)
  void OnSettingsLoaded(object sender, SettingsLoadedEventArgs e)
  void OnSettingsSaving(object sender, CancelEventArgs e)
  SettingsContext get_Context()
  void CacheValuesByProvider(SettingsProvider provider)
  void InitializeSettings(SettingsPropertyCollection settings)
  object GetPropertyValue(string propertyName)
  object get_Item(string propertyName)
  void set_Item(string propertyName, object value)
  SettingsPropertyCollection get_Properties()
  void CreateSettingsProperty(PropertyInfo prop, SettingsPropertyCollection properties, SettingsProvider& local_provider)
  SettingsPropertyValueCollection get_PropertyValues()
  SettingsProviderCollection get_Providers()
  string get_SettingsKey()
  void set_SettingsKey(string value)
--------------------------------------------------
Класс: System.Configuration.ApplicationSettingsGroup
Наследуется от: ConfigurationSectionGroup
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.ClientSettingsSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty settings_prop
Свойства:
  SettingElementCollection Settings
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  SettingElementCollection get_Settings()
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Configuration.ConfigHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  IDictionary GetDictionary(IDictionary prev, XmlNode region, string nameAtt, string valueAtt)
  ConfigNameValueCollection GetNameValueCollection(NameValueCollection prev, XmlNode region, string nameAtt, string valueAtt)
  CollectionWrapper GoGetThem(CollectionWrapper result, XmlNode region, string nameAtt, string valueAtt)
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.ConfigNameValueCollection
Наследуется от: NameValueCollection
Поля:
  bool modified
Свойства:
  bool IsModified
Методы:
  void .ctor()
  void .ctor(ConfigNameValueCollection col)
  void .ctor(IHashCodeProvider hashProvider, IComparer comparer)
  void ResetModified()
  bool get_IsModified()
  void Set(string name, string value)
--------------------------------------------------
Класс: System.Configuration.ConfigXmlDocument
Наследуется от: XmlDocument
Поля:
  XmlTextReader reader
  string fileName
  int lineNumber
Свойства:
  string Filename
  int LineNumber
  string System.Configuration.Internal.IConfigErrorInfo.Filename
  int System.Configuration.Internal.IConfigErrorInfo.LineNumber
  string System.Configuration.IConfigXmlNode.Filename
  int System.Configuration.IConfigXmlNode.LineNumber
Методы:
  XmlAttribute CreateAttribute(string prefix, string localName, string namespaceUri)
  XmlCDataSection CreateCDataSection(string data)
  XmlComment CreateComment(string data)
  XmlElement CreateElement(string prefix, string localName, string namespaceUri)
  XmlSignificantWhitespace CreateSignificantWhitespace(string data)
  XmlText CreateTextNode(string text)
  XmlWhitespace CreateWhitespace(string data)
  void Load(string filename)
  void LoadSingleElement(string filename, XmlTextReader sourceReader)
  string get_Filename()
  int get_LineNumber()
  string System.Configuration.Internal.IConfigErrorInfo.get_Filename()
  int System.Configuration.Internal.IConfigErrorInfo.get_LineNumber()
  string System.Configuration.IConfigXmlNode.get_Filename()
  int System.Configuration.IConfigXmlNode.get_LineNumber()
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.ConfigurationException
Наследуется от: SystemException
Поля:
  string filename
  int line
Свойства:
  string BareMessage
  string Filename
  int Line
  string Message
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception inner)
  void .ctor(string message, XmlNode node)
  void .ctor(string message, Exception inner, XmlNode node)
  void .ctor(string message, string filename, int line)
  void .ctor(string message, Exception inner, string filename, int line)
  string get_BareMessage()
  string get_Filename()
  int get_Line()
  string get_Message()
  string GetXmlNodeFilename(XmlNode node)
  int GetXmlNodeLineNumber(XmlNode node)
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Configuration.ConfigurationSettings
Наследуется от: object
Поля:
  IConfigurationSystem config
  object lockobj
Свойства:
  NameValueCollection AppSettings
Методы:
  void .ctor()
  object GetConfig(string sectionName)
  NameValueCollection get_AppSettings()
  IConfigurationSystem ChangeConfigurationSystem(IConfigurationSystem newSystem)
  void .cctor()
--------------------------------------------------
Класс: System.Configuration.DefaultConfig
Наследуется от: object
Поля:
  DefaultConfig instance
  ConfigurationData config
Свойства:
Методы:
  void .ctor()
  DefaultConfig GetInstance()
  object GetConfig(string sectionName)
  void Init()
  string get_bundled_machine_config()
  string GetBundledMachineConfig()
  string get_machine_config_path()
  string GetMachineConfigPath()
  string GetAppConfigPath()
  void .cctor()
--------------------------------------------------
Класс: System.Configuration.AllowDefinition
Наследуется от: Enum
Поля:
  int value__
  AllowDefinition Everywhere
  AllowDefinition MachineOnly
  AllowDefinition MachineToApplication
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.SectionData
Наследуется от: object
Поля:
  string SectionName
  string TypeName
  bool AllowLocation
  AllowDefinition AllowDefinition
  string FileName
  bool RequirePermission
Свойства:
Методы:
  void .ctor(string sectionName, string typeName, bool allowLocation, AllowDefinition allowDefinition, bool requirePermission)
--------------------------------------------------
Класс: System.Configuration.ConfigurationData
Наследуется от: object
Поля:
  ConfigurationData parent
  Hashtable factories
  object removedMark
  object emptyMark
  Hashtable pending
  string fileName
  object groupMark
  Hashtable cache
Свойства:
  Hashtable FileCache
Методы:
  Hashtable get_FileCache()
  void .ctor()
  void .ctor(ConfigurationData parent)
  bool Load(string fileName)
  bool LoadString(string data)
  object GetHandler(string sectionName)
  object CreateNewHandler(string sectionName, SectionData section)
  XmlDocument GetInnerDoc(XmlDocument doc, int i, String[] sectionPath)
  XmlDocument GetDocumentForSection(string sectionName)
  object GetConfigInternal(string sectionName)
  object GetConfig(string sectionName)
  object LookForFactory(string key)
  bool InitRead(XmlTextReader reader)
  void MoveToNextElement(XmlTextReader reader)
  void ReadSection(XmlTextReader reader, string sectionName)
  void ReadRemoveSection(XmlTextReader reader, string sectionName)
  void ReadSectionGroup(XmlTextReader reader, string configSection)
  void ReadSections(XmlTextReader reader, string configSection)
  void StorePending(string name, XmlTextReader reader)
  void ReadConfigFile(XmlTextReader reader)
  void ThrowException(string text, XmlTextReader reader)
  void .cctor()
--------------------------------------------------
Класс: System.Configuration.UserConfigLocationOption
Наследуется от: Enum
Поля:
  UInt32 value__
  UserConfigLocationOption Product
  UserConfigLocationOption Product_VersionMajor
  UserConfigLocationOption Product_VersionMinor
  UserConfigLocationOption Product_VersionBuild
  UserConfigLocationOption Product_VersionRevision
  UserConfigLocationOption Company_Product
  UserConfigLocationOption Company_Product_VersionMajor
  UserConfigLocationOption Company_Product_VersionMinor
  UserConfigLocationOption Company_Product_VersionBuild
  UserConfigLocationOption Company_Product_VersionRevision
  UserConfigLocationOption Evidence
  UserConfigLocationOption Other
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.CustomizableFileSettingsProvider
Наследуется от: SettingsProvider
Поля:
  Type webConfigurationFileMapType
  string userRoamingPath
  string userLocalPath
  string userRoamingPathPrevVersion
  string userLocalPathPrevVersion
  string userRoamingName
  string userLocalName
  string userRoamingBasePath
  string userLocalBasePath
  string CompanyName
  string ProductName
  string ForceVersion
  String[] ProductVersion
  bool isVersionMajor
  bool isVersionMinor
  bool isVersionBuild
  bool isVersionRevision
  bool isCompany
  bool isProduct
  bool isEvidence
  bool userDefine
  UserConfigLocationOption userConfig
  string app_name
  ExeConfigurationFileMap exeMapCurrent
  ExeConfigurationFileMap exeMapPrev
  SettingsPropertyValueCollection values
Свойства:
  string UserRoamingFullPath
  string UserLocalFullPath
  string PrevUserRoamingFullPath
  string PrevUserLocalFullPath
  string UserRoamingPath
  string UserLocalPath
  string UserRoamingName
  string UserLocalName
  UserConfigLocationOption UserConfigSelector
  bool IsVersionMajor
  bool IsVersionMinor
  bool IsVersionBuild
  bool IsVersionRevision
  bool IsCompany
  bool IsEvidence
  string Name
  string ApplicationName
Методы:
  void Initialize(string name, NameValueCollection config)
  string get_UserRoamingFullPath()
  string get_UserLocalFullPath()
  string get_PrevUserRoamingFullPath()
  string get_PrevUserLocalFullPath()
  string get_UserRoamingPath()
  string get_UserLocalPath()
  string get_UserRoamingName()
  string get_UserLocalName()
  UserConfigLocationOption get_UserConfigSelector()
  void set_UserConfigSelector(UserConfigLocationOption value)
  bool get_IsVersionMajor()
  void set_IsVersionMajor(bool value)
  bool get_IsVersionMinor()
  void set_IsVersionMinor(bool value)
  bool get_IsVersionBuild()
  void set_IsVersionBuild(bool value)
  bool get_IsVersionRevision()
  void set_IsVersionRevision(bool value)
  bool get_IsCompany()
  void set_IsCompany(bool value)
  bool get_IsEvidence()
  void set_IsEvidence(bool value)
  string GetCompanyName()
  string GetProductName()
  string GetEvidenceHash()
  string GetProductVersion()
  void CreateUserConfigPath()
  string PrevVersionPath(string dirName, string currentVersion)
  bool SetUserRoamingPath(string configPath)
  bool SetUserLocalPath(string configPath)
  bool CheckFileName(string configFile)
  bool SetUserRoamingFileName(string configFile)
  bool SetUserLocalFileName(string configFile)
  bool SetCompanyName(string companyName)
  bool SetProductName(string productName)
  bool SetVersion(int major)
  bool SetVersion(int major, int minor)
  bool SetVersion(int major, int minor, int build)
  bool SetVersion(int major, int minor, int build, int revision)
  bool SetVersion(string forceVersion)
  bool CheckPath(string configPath)
  string get_Name()
  string get_ApplicationName()
  void set_ApplicationName(string value)
  string StripXmlHeader(string serializedValue)
  void SaveProperties(ExeConfigurationFileMap exeMap, SettingsPropertyValueCollection collection, ConfigurationUserLevel level, SettingsContext context, bool checkUserLevel)
  string NormalizeInvalidXmlChars(string str)
  void LoadPropertyValue(SettingsPropertyCollection collection, SettingElement element, bool allowOverwrite)
  void LoadProperties(ExeConfigurationFileMap exeMap, SettingsPropertyCollection collection, ConfigurationUserLevel level, string sectionGroupName, bool allowOverwrite, string groupName)
  void SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection collection)
  SettingsPropertyValueCollection GetPropertyValues(SettingsContext context, SettingsPropertyCollection collection)
  void CreateExeMap()
  SettingsPropertyValue GetPreviousVersion(SettingsContext context, SettingsProperty property)
  void Reset(SettingsContext context)
  void Upgrade(SettingsContext context, SettingsPropertyCollection properties)
  void setCreate()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Configuration.DefaultSettingValueAttribute
Наследуется от: Attribute
Поля:
  string value
Свойства:
  string Value
Методы:
  void .ctor(string value)
  string get_Value()
--------------------------------------------------
Класс: System.Configuration.DictionarySectionHandler
Наследуется от: object
Поля:
Свойства:
  string KeyAttributeName
  string ValueAttributeName
Методы:
  object Create(object parent, object context, XmlNode section)
  string get_KeyAttributeName()
  string get_ValueAttributeName()
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.IApplicationSettingsProvider
Поля:
Свойства:
Методы:
  SettingsPropertyValue GetPreviousVersion(SettingsContext context, SettingsProperty property)
  void Reset(SettingsContext context)
  void Upgrade(SettingsContext context, SettingsPropertyCollection properties)
--------------------------------------------------
Класс: System.Configuration.IConfigXmlNode
Поля:
Свойства:
  string Filename
  int LineNumber
Методы:
  string get_Filename()
  int get_LineNumber()
--------------------------------------------------
Класс: System.Configuration.IConfigurationSectionHandler
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
--------------------------------------------------
Класс: System.Configuration.IConfigurationSystem
Поля:
Свойства:
Методы:
  object GetConfig(string configKey)
  void Init()
--------------------------------------------------
Класс: System.Configuration.IPersistComponentSettings
Поля:
Свойства:
  bool SaveSettings
  string SettingsKey
Методы:
  bool get_SaveSettings()
  void set_SaveSettings(bool value)
  string get_SettingsKey()
  void set_SettingsKey(string value)
  void LoadComponentSettings()
  void ResetComponentSettings()
  void SaveComponentSettings()
--------------------------------------------------
Класс: System.Configuration.ISettingsProviderService
Поля:
Свойства:
Методы:
  SettingsProvider GetSettingsProvider(SettingsProperty property)
--------------------------------------------------
Класс: System.Configuration.IdnElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty enabled_prop
  UriIdnScope EnabledDefaultValue
Свойства:
  UriIdnScope Enabled
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  UriIdnScope get_Enabled()
  void set_Enabled(UriIdnScope value)
  ConfigurationPropertyCollection get_Properties()
  bool Equals(object o)
  int GetHashCode()
--------------------------------------------------
Класс: System.Configuration.IgnoreSectionHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.IriParsingElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty enabled_prop
Свойства:
  bool Enabled
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  bool get_Enabled()
  void set_Enabled(bool value)
  ConfigurationPropertyCollection get_Properties()
  bool Equals(object o)
  int GetHashCode()
--------------------------------------------------
Класс: System.Configuration.LocalFileSettingsProvider
Наследуется от: SettingsProvider
Поля:
  CustomizableFileSettingsProvider impl
Свойства:
  string ApplicationName
Методы:
  void .ctor()
  SettingsPropertyValue GetPreviousVersion(SettingsContext context, SettingsProperty property)
  SettingsPropertyValueCollection GetPropertyValues(SettingsContext context, SettingsPropertyCollection properties)
  void Initialize(string name, NameValueCollection values)
  void Reset(SettingsContext context)
  void SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection values)
  void Upgrade(SettingsContext context, SettingsPropertyCollection properties)
  string get_ApplicationName()
  void set_ApplicationName(string value)
--------------------------------------------------
Класс: System.Configuration.NameValueFileSectionHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.NameValueSectionHandler
Наследуется от: object
Поля:
Свойства:
  string KeyAttributeName
  string ValueAttributeName
Методы:
  object Create(object parent, object context, XmlNode section)
  string get_KeyAttributeName()
  string get_ValueAttributeName()
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.NoSettingsVersionUpgradeAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.SettingAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.SettingChangingEventArgs
Наследуется от: CancelEventArgs
Поля:
  string settingName
  string settingClass
  string settingKey
  object newValue
Свойства:
  string SettingName
  string SettingClass
  string SettingKey
  object NewValue
Методы:
  void .ctor(string settingName, string settingClass, string settingKey, object newValue, bool cancel)
  string get_SettingName()
  string get_SettingClass()
  string get_SettingKey()
  object get_NewValue()
--------------------------------------------------
Класс: System.Configuration.SettingChangingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SettingChangingEventArgs e)
  IAsyncResult BeginInvoke(object sender, SettingChangingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Configuration.SettingElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty name_prop
  ConfigurationProperty serialize_as_prop
  ConfigurationProperty value_prop
Свойства:
  string Name
  SettingValueElement Value
  SettingsSerializeAs SerializeAs
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string name, SettingsSerializeAs serializeAs)
  string get_Name()
  void set_Name(string value)
  SettingValueElement get_Value()
  void set_Value(SettingValueElement value)
  SettingsSerializeAs get_SerializeAs()
  void set_SerializeAs(SettingsSerializeAs value)
  ConfigurationPropertyCollection get_Properties()
  bool Equals(object settings)
  int GetHashCode()
--------------------------------------------------
Класс: System.Configuration.SettingElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  ConfigurationElementCollectionType CollectionType
  string ElementName
Методы:
  void .ctor()
  void Add(SettingElement element)
  void Clear()
  SettingElement Get(string elementKey)
  void Remove(SettingElement element)
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  ConfigurationElementCollectionType get_CollectionType()
  string get_ElementName()
--------------------------------------------------
Класс: System.Configuration.SettingValueElement
Наследуется от: ConfigurationElement
Поля:
  XmlNode node
  XmlNode original
Свойства:
  ConfigurationPropertyCollection Properties
  XmlNode ValueXml
Методы:
  void .ctor()
  ConfigurationPropertyCollection get_Properties()
  XmlNode get_ValueXml()
  void set_ValueXml(XmlNode value)
  void DeserializeElement(XmlReader reader, bool serializeCollectionKey)
  bool Equals(object settingValue)
  int GetHashCode()
  bool IsModified()
  void Reset(ConfigurationElement parentElement)
  void ResetModified()
  bool SerializeToXmlElement(XmlWriter writer, string elementName)
  void Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)
  bool HasValue(ConfigurationElement element, string propName)
  object GetItem(ConfigurationElement element, string property)
  bool PropertyIsElement(PropertyInformation prop)
  bool ElementIsModified(ConfigurationElement element)
  void ElementUnmerge(ConfigurationElement target, ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)
--------------------------------------------------
Класс: System.Configuration.SettingsAttributeDictionary
Наследуется от: Hashtable
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(SettingsAttributeDictionary attributes)
--------------------------------------------------
Класс: System.Configuration.SettingsBase
Наследуется от: object
Поля:
  bool sync
  SettingsContext context
  SettingsPropertyCollection properties
  SettingsProviderCollection providers
  SettingsPropertyValueCollection values
Свойства:
  SettingsContext Context
  bool IsSynchronized
  object Item
  SettingsPropertyCollection Properties
  SettingsPropertyValueCollection PropertyValues
  SettingsProviderCollection Providers
Методы:
  void .ctor()
  void Initialize(SettingsContext context, SettingsPropertyCollection properties, SettingsProviderCollection providers)
  void Save()
  void SaveCore()
  SettingsBase Synchronized(SettingsBase settingsBase)
  SettingsContext get_Context()
  bool get_IsSynchronized()
  object get_Item(string propertyName)
  void set_Item(string propertyName, object value)
  SettingsPropertyCollection get_Properties()
  SettingsPropertyValueCollection get_PropertyValues()
  SettingsProviderCollection get_Providers()
  object GetPropertyValue(string propertyName)
  void SetPropertyValue(string propertyName, object value)
--------------------------------------------------
Класс: System.Configuration.SettingsContext
Наследуется от: Hashtable
Поля:
  ApplicationSettingsBase current
Свойства:
  ApplicationSettingsBase CurrentSettings
Методы:
  ApplicationSettingsBase get_CurrentSettings()
  void set_CurrentSettings(ApplicationSettingsBase value)
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.SettingsDescriptionAttribute
Наследуется от: Attribute
Поля:
  string desc
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Configuration.SettingsGroupDescriptionAttribute
Наследуется от: Attribute
Поля:
  string desc
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Configuration.SettingsGroupNameAttribute
Наследуется от: Attribute
Поля:
  string group_name
Свойства:
  string GroupName
Методы:
  void .ctor(string groupName)
  string get_GroupName()
--------------------------------------------------
Класс: System.Configuration.SettingsLoadedEventArgs
Наследуется от: EventArgs
Поля:
  SettingsProvider provider
Свойства:
  SettingsProvider Provider
Методы:
  void .ctor(SettingsProvider provider)
  SettingsProvider get_Provider()
--------------------------------------------------
Класс: System.Configuration.SettingsLoadedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SettingsLoadedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SettingsLoadedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Configuration.SettingsManageability
Наследуется от: Enum
Поля:
  int value__
  SettingsManageability Roaming
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.SettingsManageabilityAttribute
Наследуется от: Attribute
Поля:
  SettingsManageability manageability
Свойства:
  SettingsManageability Manageability
Методы:
  void .ctor(SettingsManageability manageability)
  SettingsManageability get_Manageability()
--------------------------------------------------
Класс: System.Configuration.SettingsProperty
Наследуется от: object
Поля:
  string name
  Type propertyType
  SettingsProvider provider
  bool isReadOnly
  object defaultValue
  SettingsSerializeAs serializeAs
  SettingsAttributeDictionary attributes
  bool throwOnErrorDeserializing
  bool throwOnErrorSerializing
Свойства:
  SettingsAttributeDictionary Attributes
  object DefaultValue
  bool IsReadOnly
  string Name
  Type PropertyType
  SettingsProvider Provider
  SettingsSerializeAs SerializeAs
  bool ThrowOnErrorDeserializing
  bool ThrowOnErrorSerializing
Методы:
  void .ctor(SettingsProperty propertyToCopy)
  void .ctor(string name)
  void .ctor(string name, Type propertyType, SettingsProvider provider, bool isReadOnly, object defaultValue, SettingsSerializeAs serializeAs, SettingsAttributeDictionary attributes, bool throwOnErrorDeserializing, bool throwOnErrorSerializing)
  SettingsAttributeDictionary get_Attributes()
  object get_DefaultValue()
  void set_DefaultValue(object value)
  bool get_IsReadOnly()
  void set_IsReadOnly(bool value)
  string get_Name()
  void set_Name(string value)
  Type get_PropertyType()
  void set_PropertyType(Type value)
  SettingsProvider get_Provider()
  void set_Provider(SettingsProvider value)
  SettingsSerializeAs get_SerializeAs()
  void set_SerializeAs(SettingsSerializeAs value)
  bool get_ThrowOnErrorDeserializing()
  void set_ThrowOnErrorDeserializing(bool value)
  bool get_ThrowOnErrorSerializing()
  void set_ThrowOnErrorSerializing(bool value)
--------------------------------------------------
Класс: System.Configuration.SettingsPropertyCollection
Наследуется от: object
Поля:
  Hashtable items
  bool isReadOnly
Свойства:
  int Count
  bool IsSynchronized
  SettingsProperty Item
  object SyncRoot
Методы:
  void .ctor()
  void Add(SettingsProperty property)
  void Clear()
  object Clone()
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  void Remove(string name)
  void SetReadOnly()
  void OnAdd(SettingsProperty property)
  void OnAddComplete(SettingsProperty property)
  void OnClear()
  void OnClearComplete()
  void OnRemove(SettingsProperty property)
  void OnRemoveComplete(SettingsProperty property)
  int get_Count()
  bool get_IsSynchronized()
  SettingsProperty get_Item(string name)
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Configuration.SettingsPropertyIsReadOnlyException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Configuration.SettingsPropertyNotFoundException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Configuration.SettingsPropertyValue
Наследуется от: object
Поля:
  SettingsProperty property
  object propertyValue
  object serializedValue
  bool needSerializedValue
  bool needPropertyValue
  bool dirty
  bool defaulted
  bool deserialized
Свойства:
  bool Deserialized
  bool IsDirty
  string Name
  SettingsProperty Property
  object PropertyValue
  object SerializedValue
  bool UsingDefaultValue
Методы:
  void .ctor(SettingsProperty property)
  bool get_Deserialized()
  void set_Deserialized(bool value)
  bool get_IsDirty()
  void set_IsDirty(bool value)
  string get_Name()
  SettingsProperty get_Property()
  object get_PropertyValue()
  void set_PropertyValue(object value)
  object get_SerializedValue()
  void set_SerializedValue(object value)
  bool get_UsingDefaultValue()
  object Reset()
  object GetDeserializedDefaultValue()
  object GetDeserializedValue(object serializedValue)
--------------------------------------------------
Класс: System.Configuration.SettingsPropertyValueCollection
Наследуется от: object
Поля:
  Hashtable items
  bool isReadOnly
Свойства:
  int Count
  bool IsSynchronized
  SettingsPropertyValue Item
  object SyncRoot
Методы:
  void .ctor()
  void Add(SettingsPropertyValue property)
  void Add(SettingsPropertyValueCollection vals)
  void Clear()
  object Clone()
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  void Remove(string name)
  void SetReadOnly()
  int get_Count()
  bool get_IsSynchronized()
  SettingsPropertyValue get_Item(string name)
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Configuration.SettingsPropertyWrongTypeException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Configuration.SettingsProvider
Наследуется от: ProviderBase
Поля:
Свойства:
  string ApplicationName
Методы:
  void .ctor()
  SettingsPropertyValueCollection GetPropertyValues(SettingsContext context, SettingsPropertyCollection collection)
  void SetPropertyValues(SettingsContext context, SettingsPropertyValueCollection collection)
  string get_ApplicationName()
  void set_ApplicationName(string value)
--------------------------------------------------
Класс: System.Configuration.SettingsProviderAttribute
Наследуется от: Attribute
Поля:
  string providerTypeName
Свойства:
  string ProviderTypeName
Методы:
  void .ctor(string providerTypeName)
  void .ctor(Type providerType)
  string get_ProviderTypeName()
--------------------------------------------------
Класс: System.Configuration.SettingsProviderCollection
Наследуется от: ProviderCollection
Поля:
Свойства:
  SettingsProvider Item
Методы:
  void .ctor()
  void Add(ProviderBase provider)
  SettingsProvider get_Item(string name)
--------------------------------------------------
Класс: System.Configuration.SettingsSavingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, CancelEventArgs e)
  IAsyncResult BeginInvoke(object sender, CancelEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Configuration.SettingsSerializeAs
Наследуется от: Enum
Поля:
  int value__
  SettingsSerializeAs String
  SettingsSerializeAs Xml
  SettingsSerializeAs Binary
  SettingsSerializeAs ProviderSpecific
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.SettingsSerializeAsAttribute
Наследуется от: Attribute
Поля:
  SettingsSerializeAs serializeAs
Свойства:
  SettingsSerializeAs SerializeAs
Методы:
  void .ctor(SettingsSerializeAs serializeAs)
  SettingsSerializeAs get_SerializeAs()
--------------------------------------------------
Класс: System.Configuration.SingleTagSectionHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object context, XmlNode section)
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.SpecialSetting
Наследуется от: Enum
Поля:
  int value__
  SpecialSetting ConnectionString
  SpecialSetting WebServiceUrl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Configuration.SpecialSettingAttribute
Наследуется от: Attribute
Поля:
  SpecialSetting setting
Свойства:
  SpecialSetting SpecialSetting
Методы:
  void .ctor(SpecialSetting specialSetting)
  SpecialSetting get_SpecialSetting()
--------------------------------------------------
Класс: System.Configuration.UriSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty idn_prop
  ConfigurationProperty iriParsing_prop
Свойства:
  IdnElement Idn
  IriParsingElement IriParsing
  ConfigurationPropertyCollection Properties
  SchemeSettingElementCollection SchemeSettings
Методы:
  void .cctor()
  void .ctor()
  IdnElement get_Idn()
  IriParsingElement get_IriParsing()
  ConfigurationPropertyCollection get_Properties()
  SchemeSettingElementCollection get_SchemeSettings()
--------------------------------------------------
Класс: System.Configuration.UserScopedSettingAttribute
Наследуется от: SettingAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Configuration.UserSettingsGroup
Наследуется от: ConfigurationSectionGroup
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Web.HttpUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void HtmlAttributeEncode(string s, TextWriter output)
  string HtmlAttributeEncode(string s)
  string UrlDecode(string str)
  Char[] GetChars(MemoryStream b, Encoding e)
  void WriteCharBytes(IList buf, char ch, Encoding e)
  string UrlDecode(string str, Encoding e)
  string UrlDecode(Byte[] bytes, Encoding e)
  int GetInt(byte b)
  int GetChar(Byte[] bytes, int offset, int length)
  int GetChar(string str, int offset, int length)
  string UrlDecode(Byte[] bytes, int offset, int count, Encoding e)
  Byte[] UrlDecodeToBytes(Byte[] bytes)
  Byte[] UrlDecodeToBytes(string str)
  Byte[] UrlDecodeToBytes(string str, Encoding e)
  Byte[] UrlDecodeToBytes(Byte[] bytes, int offset, int count)
  string UrlEncode(string str)
  string UrlEncode(string str, Encoding e)
  string UrlEncode(Byte[] bytes)
  string UrlEncode(Byte[] bytes, int offset, int count)
  Byte[] UrlEncodeToBytes(string str)
  Byte[] UrlEncodeToBytes(string str, Encoding e)
  Byte[] UrlEncodeToBytes(Byte[] bytes)
  Byte[] UrlEncodeToBytes(Byte[] bytes, int offset, int count)
  string UrlEncodeUnicode(string str)
  Byte[] UrlEncodeUnicodeToBytes(string str)
  string HtmlDecode(string s)
  void HtmlDecode(string s, TextWriter output)
  string HtmlEncode(string s)
  void HtmlEncode(string s, TextWriter output)
  string HtmlEncode(object value)
  string JavaScriptStringEncode(string value)
  string JavaScriptStringEncode(string value, bool addDoubleQuotes)
  string UrlPathEncode(string str)
  NameValueCollection ParseQueryString(string query)
  NameValueCollection ParseQueryString(string query, Encoding encoding)
  void ParseQueryString(string query, Encoding encoding, NameValueCollection result)
--------------------------------------------------
Класс: System.Web.AspNetHostingPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  AspNetHostingPermissionLevel _level
Свойства:
  AspNetHostingPermissionLevel Level
Методы:
  void .ctor(AspNetHostingPermissionLevel level)
  void .ctor(PermissionState state)
  AspNetHostingPermissionLevel get_Level()
  void set_Level(AspNetHostingPermissionLevel value)
  bool IsUnrestricted()
  IPermission Copy()
  void FromXml(SecurityElement securityElement)
  SecurityElement ToXml()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  IPermission Union(IPermission target)
  bool IsEmpty()
  AspNetHostingPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Web.AspNetHostingPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  AspNetHostingPermissionLevel _level
Свойства:
  AspNetHostingPermissionLevel Level
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
  AspNetHostingPermissionLevel get_Level()
  void set_Level(AspNetHostingPermissionLevel value)
--------------------------------------------------
Класс: System.Web.AspNetHostingPermissionLevel
Наследуется от: Enum
Поля:
  int value__
  AspNetHostingPermissionLevel None
  AspNetHostingPermissionLevel Minimal
  AspNetHostingPermissionLevel Low
  AspNetHostingPermissionLevel Medium
  AspNetHostingPermissionLevel High
  AspNetHostingPermissionLevel Unrestricted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Web.Util.Helpers
Наследуется от: object
Поля:
  CultureInfo InvariantCulture
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Web.Util.HttpEncoder
Наследуется от: object
Поля:
  Char[] hexChars
  object entitiesLock
  SortedDictionary`2<string, char> entities
  Lazy`1<HttpEncoder> defaultEncoder
  Lazy`1<HttpEncoder> currentEncoderLazy
  HttpEncoder currentEncoder
Свойства:
  IDictionary`2<string, char> Entities
  HttpEncoder Current
  HttpEncoder Default
Методы:
  IDictionary`2<string, char> get_Entities()
  HttpEncoder get_Current()
  void set_Current(HttpEncoder value)
  HttpEncoder get_Default()
  void .cctor()
  void .ctor()
  void HeaderNameValueEncode(string headerName, string headerValue, String& encodedHeaderName, String& encodedHeaderValue)
  void StringBuilderAppend(string s, StringBuilder& sb)
  string EncodeHeaderString(string input)
  void HtmlAttributeEncode(string value, TextWriter output)
  void HtmlDecode(string value, TextWriter output)
  void HtmlEncode(string value, TextWriter output)
  Byte[] UrlEncode(Byte[] bytes, int offset, int count)
  HttpEncoder GetCustomEncoderFromConfig()
  string UrlPathEncode(string value)
  Byte[] UrlEncodeToBytes(Byte[] bytes, int offset, int count)
  string HtmlEncode(string s)
  string HtmlAttributeEncode(string s)
  string HtmlDecode(string s)
  bool NotEncoded(char c)
  void UrlEncodeChar(char c, Stream result, bool isUnicode)
  void UrlPathEncodeChar(char c, Stream result)
  void InitEntities()
  string JavaScriptStringEncode(string value)
--------------------------------------------------
Класс: System.Text.RegularExpressions.Capture
Наследуется от: object
Поля:
  int <Index>k__BackingField
  int <Length>k__BackingField
  string <Text>k__BackingField
Свойства:
  int Index
  int Length
  string Text
  string Value
Методы:
  void .ctor(string text, int index, int length)
  int get_Index()
  void set_Index(int value)
  int get_Length()
  void set_Length(int value)
  string get_Text()
  void set_Text(string value)
  string get_Value()
  string ToString()
  ReadOnlySpan`1<char> GetLeftSubstring()
  ReadOnlySpan`1<char> GetRightSubstring()
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.CaptureCollection
Наследуется от: object
Поля:
  Group _group
  int _capcount
  Capture[] _captures
Свойства:
  bool IsReadOnly
  int Count
  Capture Item
  bool IsSynchronized
  object SyncRoot
  Capture System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Item
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
Методы:
  void .ctor(Group group)
  bool get_IsReadOnly()
  int get_Count()
  Capture get_Item(int i)
  IEnumerator GetEnumerator()
  IEnumerator`1<Capture> System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Capture>.GetEnumerator()
  Capture GetCapture(int i)
  void ForceInitialized()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void CopyTo(Array array, int arrayIndex)
  void CopyTo(Capture[] array, int arrayIndex)
  int System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.IndexOf(Capture item)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.Insert(int index, Capture item)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.RemoveAt(int index)
  Capture System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.get_Item(int index)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Capture>.set_Item(int index, Capture value)
  void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Add(Capture item)
  void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Clear()
  bool System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Contains(Capture item)
  bool System.Collections.Generic.ICollection<System.Text.RegularExpressions.Capture>.Remove(Capture item)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.CollectionDebuggerProxy`1
Наследуется от: object
Поля:
  ICollection`1<T> _collection
Свойства:
  T[] Items
Методы:
  void .ctor(ICollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Text.RegularExpressions.CompiledRegexRunner
Наследуется от: RegexRunner
Поля:
  Action`1<RegexRunner> _goMethod
  Func`2<RegexRunner, bool> _findFirstCharMethod
  Action`1<RegexRunner> _initTrackCountMethod
Свойства:
Методы:
  void .ctor()
  void SetDelegates(Action`1<RegexRunner> go, Func`2<RegexRunner, bool> firstChar, Action`1<RegexRunner> trackCount)
  void Go()
  bool FindFirstChar()
  void InitTrackCount()
--------------------------------------------------
Класс: System.Text.RegularExpressions.CompiledRegexRunnerFactory
Наследуется от: RegexRunnerFactory
Поля:
  DynamicMethod _goMethod
  DynamicMethod _findFirstCharMethod
  DynamicMethod _initTrackCountMethod
Свойства:
Методы:
  void .ctor(DynamicMethod go, DynamicMethod firstChar, DynamicMethod trackCount)
  RegexRunner CreateInstance()
--------------------------------------------------
Класс: System.Text.RegularExpressions.Group
Наследуется от: Capture
Поля:
  Group s_emptyGroup
  Int32[] _caps
  int _capcount
  CaptureCollection _capcoll
  string <Name>k__BackingField
Свойства:
  bool Success
  string Name
  CaptureCollection Captures
Методы:
  void .ctor(string text, Int32[] caps, int capcount, string name)
  bool get_Success()
  string get_Name()
  CaptureCollection get_Captures()
  Group Synchronized(Group inner)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.GroupCollection
Наследуется от: object
Поля:
  Match _match
  Hashtable _captureMap
  Group[] _groups
Свойства:
  bool IsReadOnly
  int Count
  Group Item
  Group Item
  bool IsSynchronized
  object SyncRoot
  Group System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.Item
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
Методы:
  void .ctor(Match match, Hashtable caps)
  bool get_IsReadOnly()
  int get_Count()
  Group get_Item(int groupnum)
  Group get_Item(string groupname)
  IEnumerator GetEnumerator()
  IEnumerator`1<Group> System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Group>.GetEnumerator()
  Group GetGroup(int groupnum)
  Group GetGroupImpl(int groupnum)
  bool get_IsSynchronized()
  object get_SyncRoot()
  void CopyTo(Array array, int arrayIndex)
  void CopyTo(Group[] array, int arrayIndex)
  int System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.IndexOf(Group item)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.Insert(int index, Group item)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.RemoveAt(int index)
  Group System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.get_Item(int index)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Group>.set_Item(int index, Group value)
  void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Add(Group item)
  void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Clear()
  bool System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Contains(Group item)
  bool System.Collections.Generic.ICollection<System.Text.RegularExpressions.Group>.Remove(Group item)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.Match
Наследуется от: Group
Поля:
  GroupCollection _groupcoll
  Regex _regex
  int _textbeg
  int _textpos
  int _textend
  int _textstart
  Int32[][] _matches
  Int32[] _matchcount
  bool _balancing
  Match <Empty>k__BackingField
Свойства:
  Match Empty
  GroupCollection Groups
Методы:
  void .ctor(Regex regex, int capcount, string text, int begpos, int len, int startpos)
  Match get_Empty()
  void Reset(Regex regex, string text, int textbeg, int textend, int textstart)
  GroupCollection get_Groups()
  Match NextMatch()
  string Result(string replacement)
  ReadOnlySpan`1<char> GroupToStringImpl(int groupnum)
  ReadOnlySpan`1<char> LastGroupToStringImpl()
  Match Synchronized(Match inner)
  void AddMatch(int cap, int start, int len)
  void BalanceMatch(int cap)
  void RemoveMatch(int cap)
  bool IsMatched(int cap)
  int MatchIndex(int cap)
  int MatchLength(int cap)
  void Tidy(int textpos)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.MatchSparse
Наследуется от: Match
Поля:
  Hashtable _caps
Свойства:
  GroupCollection Groups
Методы:
  void .ctor(Regex regex, Hashtable caps, int capcount, string text, int begpos, int len, int startpos)
  GroupCollection get_Groups()
--------------------------------------------------
Класс: System.Text.RegularExpressions.MatchCollection
Наследуется от: object
Поля:
  Regex _regex
  List`1<Match> _matches
  bool _done
  string _input
  int _beginning
  int _length
  int _startat
  int _prevlen
Свойства:
  bool IsReadOnly
  int Count
  Match Item
  bool IsSynchronized
  object SyncRoot
  Match System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.Item
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
Методы:
  void .ctor(Regex regex, string input, int beginning, int length, int startat)
  bool get_IsReadOnly()
  int get_Count()
  Match get_Item(int i)
  IEnumerator GetEnumerator()
  IEnumerator`1<Match> System.Collections.Generic.IEnumerable<System.Text.RegularExpressions.Match>.GetEnumerator()
  Match GetMatch(int i)
  void EnsureInitialized()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void CopyTo(Array array, int arrayIndex)
  void CopyTo(Match[] array, int arrayIndex)
  int System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.IndexOf(Match item)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.Insert(int index, Match item)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.RemoveAt(int index)
  Match System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.get_Item(int index)
  void System.Collections.Generic.IList<System.Text.RegularExpressions.Match>.set_Item(int index, Match value)
  void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Add(Match item)
  void System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Clear()
  bool System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Contains(Match item)
  bool System.Collections.Generic.ICollection<System.Text.RegularExpressions.Match>.Remove(Match item)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.ExclusiveReference
Наследуется от: object
Поля:
  RegexRunner _ref
  RegexRunner _obj
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _locked
Свойства:
Методы:
  RegexRunner Get()
  void Release(RegexRunner obj)
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.Regex
Наследуется от: object
Поля:
  int CacheDictionarySwitchLimit
  int s_cacheSize
  Dictionary`2<CachedCodeEntryKey, CachedCodeEntry> s_cache
  int s_cacheCount
  CachedCodeEntry s_cacheFirst
  CachedCodeEntry s_cacheLast
  TimeSpan s_maximumMatchTimeout
  string DefaultMatchTimeout_ConfigKeyName
  TimeSpan s_defaultMatchTimeout
  TimeSpan InfiniteMatchTimeout
  TimeSpan internalMatchTimeout
  int MaxOptionShift
  string pattern
  RegexOptions roptions
  RegexRunnerFactory factory
  Hashtable caps
  Hashtable capnames
  String[] capslist
  int capsize
  ExclusiveReference _runnerref
  WeakReference`1<RegexReplacement> _replref
  RegexCode _code
  bool _refsInitialized
Свойства:
  int CacheSize
  TimeSpan MatchTimeout
  IDictionary Caps
  IDictionary CapNames
  RegexOptions Options
  bool RightToLeft
Методы:
  int get_CacheSize()
  void set_CacheSize(int value)
  CachedCodeEntry GetCachedCode(CachedCodeEntryKey key, bool isToAdd)
  CachedCodeEntry GetCachedCodeEntryInternal(CachedCodeEntryKey key, bool isToAdd)
  void FillCacheDictionary()
  bool TryGetCacheValue(CachedCodeEntryKey key, CachedCodeEntry& entry)
  bool TryGetCacheValueSmall(CachedCodeEntryKey key, CachedCodeEntry& entry)
  CachedCodeEntry LookupCachedAndPromote(CachedCodeEntryKey key)
  bool IsMatch(string input, string pattern)
  bool IsMatch(string input, string pattern, RegexOptions options)
  bool IsMatch(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
  bool IsMatch(string input)
  bool IsMatch(string input, int startat)
  Match Match(string input, string pattern)
  Match Match(string input, string pattern, RegexOptions options)
  Match Match(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
  Match Match(string input)
  Match Match(string input, int startat)
  Match Match(string input, int beginning, int length)
  MatchCollection Matches(string input, string pattern)
  MatchCollection Matches(string input, string pattern, RegexOptions options)
  MatchCollection Matches(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
  MatchCollection Matches(string input)
  MatchCollection Matches(string input, int startat)
  string Replace(string input, string pattern, string replacement)
  string Replace(string input, string pattern, string replacement, RegexOptions options)
  string Replace(string input, string pattern, string replacement, RegexOptions options, TimeSpan matchTimeout)
  string Replace(string input, string replacement)
  string Replace(string input, string replacement, int count)
  string Replace(string input, string replacement, int count, int startat)
  string Replace(string input, string pattern, MatchEvaluator evaluator)
  string Replace(string input, string pattern, MatchEvaluator evaluator, RegexOptions options)
  string Replace(string input, string pattern, MatchEvaluator evaluator, RegexOptions options, TimeSpan matchTimeout)
  string Replace(string input, MatchEvaluator evaluator)
  string Replace(string input, MatchEvaluator evaluator, int count)
  string Replace(string input, MatchEvaluator evaluator, int count, int startat)
  string Replace(MatchEvaluator evaluator, Regex regex, string input, int count, int startat)
  String[] Split(string input, string pattern)
  String[] Split(string input, string pattern, RegexOptions options)
  String[] Split(string input, string pattern, RegexOptions options, TimeSpan matchTimeout)
  String[] Split(string input)
  String[] Split(string input, int count)
  String[] Split(string input, int count, int startat)
  String[] Split(Regex regex, string input, int count, int startat)
  void .cctor()
  TimeSpan get_MatchTimeout()
  void ValidateMatchTimeout(TimeSpan matchTimeout)
  TimeSpan InitDefaultMatchTimeout()
  void .ctor()
  void .ctor(string pattern)
  void .ctor(string pattern, RegexOptions options)
  void .ctor(string pattern, RegexOptions options, TimeSpan matchTimeout)
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo si, StreamingContext context)
  void .ctor(string pattern, RegexOptions options, TimeSpan matchTimeout, bool addToCache)
  IDictionary get_Caps()
  void set_Caps(IDictionary value)
  IDictionary get_CapNames()
  void set_CapNames(IDictionary value)
  RegexRunnerFactory Compile(RegexCode code, RegexOptions roptions)
  void CompileToAssembly(RegexCompilationInfo[] regexinfos, AssemblyName assemblyname)
  void CompileToAssembly(RegexCompilationInfo[] regexinfos, AssemblyName assemblyname, CustomAttributeBuilder[] attributes)
  void CompileToAssembly(RegexCompilationInfo[] regexinfos, AssemblyName assemblyname, CustomAttributeBuilder[] attributes, string resourceFile)
  string Escape(string str)
  string Unescape(string str)
  RegexOptions get_Options()
  bool get_RightToLeft()
  string ToString()
  String[] GetGroupNames()
  Int32[] GetGroupNumbers()
  string GroupNameFromNumber(int i)
  int GroupNumberFromName(string name)
  void InitializeReferences()
  Match Run(bool quick, int prevlen, string input, int beginning, int length, int startat)
  bool UseOptionC()
  bool UseOptionR()
  bool UseOptionInvariant()
--------------------------------------------------
Класс: System.Text.RegularExpressions.MatchEvaluator
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  string Invoke(Match match)
  IAsyncResult BeginInvoke(Match match, AsyncCallback callback, object object)
  string EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexBoyerMoore
Наследуется от: object
Поля:
  Int32[] Positive
  Int32[] NegativeASCII
  Int32[][] NegativeUnicode
  string Pattern
  int LowASCII
  int HighASCII
  bool RightToLeft
  bool CaseInsensitive
  CultureInfo _culture
Свойства:
Методы:
  void .ctor(string pattern, bool caseInsensitive, bool rightToLeft, CultureInfo culture)
  bool MatchPattern(string text, int index)
  bool IsMatch(string text, int index, int beglimit, int endlimit)
  int Scan(string text, int index, int beglimit, int endlimit)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexCharClass
Наследуется от: object
Поля:
  int FLAGS
  int SETLENGTH
  int CATEGORYLENGTH
  int SETSTART
  string NullCharString
  char NullChar
  char LastChar
  char GroupChar
  short SpaceConst
  short NotSpaceConst
  char ZeroWidthJoiner
  char ZeroWidthNonJoiner
  string s_internalRegexIgnoreCase
  string s_space
  string s_notSpace
  string s_word
  string s_notWord
  string SpaceClass
  string NotSpaceClass
  string WordClass
  string NotWordClass
  string DigitClass
  string NotDigitClass
  string ECMASpaceSet
  string NotECMASpaceSet
  string ECMAWordSet
  string NotECMAWordSet
  string ECMADigitSet
  string NotECMADigitSet
  string ECMASpaceClass
  string NotECMASpaceClass
  string ECMAWordClass
  string NotECMAWordClass
  string ECMADigitClass
  string NotECMADigitClass
  string AnyClass
  string EmptyClass
  int DefinedCategoriesCapacity
  Dictionary`2<string, string> s_definedCategories
  String[][] s_propTable
  int LowercaseSet
  int LowercaseAdd
  int LowercaseBor
  int LowercaseBad
  LowerCaseMapping[] s_lcTable
  List`1<SingleRange> _rangelist
  StringBuilder _categories
  bool _canonical
  bool _negate
  RegexCharClass _subtractor
Свойства:
  bool CanMerge
  bool Negate
Методы:
  void .ctor()
  void .ctor(bool negate, List`1<SingleRange> ranges, StringBuilder categories, RegexCharClass subtraction)
  bool get_CanMerge()
  void set_Negate(bool value)
  void AddChar(char c)
  void AddCharClass(RegexCharClass cc)
  void AddSet(string set)
  void AddSubtraction(RegexCharClass sub)
  void AddRange(char first, char last)
  void AddCategoryFromName(string categoryName, bool invert, bool caseInsensitive, string pattern)
  void AddCategory(string category)
  void AddLowercase(CultureInfo culture)
  void AddLowercaseRange(char chMin, char chMax, CultureInfo culture)
  void AddWord(bool ecma, bool negate)
  void AddSpace(bool ecma, bool negate)
  void AddDigit(bool ecma, bool negate, string pattern)
  string ConvertOldStringsToClass(string set, string category)
  char SingletonChar(string set)
  bool IsMergeable(string charClass)
  bool IsEmpty(string charClass)
  bool IsSingleton(string set)
  bool IsSingletonInverse(string set)
  bool IsSubtraction(string charClass)
  bool IsNegated(string set)
  bool IsECMAWordChar(char ch)
  bool IsWordChar(char ch)
  bool CharInClass(char ch, string set)
  bool CharInClassRecursive(char ch, string set, int start)
  bool CharInClassInternal(char ch, string set, int start, int mySetLength, int myCategoryLength)
  bool CharInCategory(char ch, string set, int start, int mySetLength, int myCategoryLength)
  bool CharInCategoryGroup(char ch, UnicodeCategory chcategory, string category, Int32& i)
  string NegateCategory(string category)
  RegexCharClass Parse(string charClass)
  RegexCharClass ParseRecursive(string charClass, int start)
  int RangeCount()
  string ToStringClass()
  SingleRange GetRangeAt(int i)
  void Canonicalize()
  string SetFromProperty(string capname, bool invert, string pattern)
  void .cctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexCode
Наследуется от: object
Поля:
  int Onerep
  int Notonerep
  int Setrep
  int Oneloop
  int Notoneloop
  int Setloop
  int Onelazy
  int Notonelazy
  int Setlazy
  int One
  int Notone
  int Set
  int Multi
  int Ref
  int Bol
  int Eol
  int Boundary
  int Nonboundary
  int Beginning
  int Start
  int EndZ
  int End
  int Nothing
  int Lazybranch
  int Branchmark
  int Lazybranchmark
  int Nullcount
  int Setcount
  int Branchcount
  int Lazybranchcount
  int Nullmark
  int Setmark
  int Capturemark
  int Getmark
  int Setjump
  int Backjump
  int Forejump
  int Testref
  int Goto
  int Prune
  int Stop
  int ECMABoundary
  int NonECMABoundary
  int Mask
  int Rtl
  int Back
  int Back2
  int Ci
  Int32[] Codes
  String[] Strings
  int TrackCount
  Hashtable Caps
  int CapSize
  Nullable`1<RegexPrefix> FCPrefix
  RegexBoyerMoore BMPrefix
  int Anchors
  bool RightToLeft
Свойства:
Методы:
  void .ctor(Int32[] codes, List`1<string> stringlist, int trackcount, Hashtable caps, int capsize, RegexBoyerMoore bmPrefix, Nullable`1<RegexPrefix> fcPrefix, int anchors, bool rightToLeft)
  bool OpcodeBacktracks(int Op)
  int OpcodeSize(int opcode)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexCompilationInfo
Наследуется от: object
Поля:
  string _pattern
  string _name
  string _nspace
  TimeSpan _matchTimeout
  bool <IsPublic>k__BackingField
  RegexOptions <Options>k__BackingField
Свойства:
  bool IsPublic
  TimeSpan MatchTimeout
  string Name
  string Namespace
  RegexOptions Options
  string Pattern
Методы:
  void .ctor(string pattern, RegexOptions options, string name, string fullnamespace, bool ispublic)
  void .ctor(string pattern, RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  TimeSpan get_MatchTimeout()
  void set_MatchTimeout(TimeSpan value)
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  RegexOptions get_Options()
  void set_Options(RegexOptions value)
  string get_Pattern()
  void set_Pattern(string value)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexCompiler
Наследуется от: object
Поля:
  FieldInfo s_textbegF
  FieldInfo s_textendF
  FieldInfo s_textstartF
  FieldInfo s_textposF
  FieldInfo s_textF
  FieldInfo s_trackposF
  FieldInfo s_trackF
  FieldInfo s_stackposF
  FieldInfo s_stackF
  FieldInfo s_trackcountF
  MethodInfo s_ensurestorageM
  MethodInfo s_captureM
  MethodInfo s_transferM
  MethodInfo s_uncaptureM
  MethodInfo s_ismatchedM
  MethodInfo s_matchlengthM
  MethodInfo s_matchindexM
  MethodInfo s_isboundaryM
  MethodInfo s_isECMABoundaryM
  MethodInfo s_chartolowerM
  MethodInfo s_getcharM
  MethodInfo s_crawlposM
  MethodInfo s_charInSetM
  MethodInfo s_getCurrentCulture
  MethodInfo s_getInvariantCulture
  MethodInfo s_checkTimeoutM
  ILGenerator _ilg
  LocalBuilder _textstartV
  LocalBuilder _textbegV
  LocalBuilder _textendV
  LocalBuilder _textposV
  LocalBuilder _textV
  LocalBuilder _trackposV
  LocalBuilder _trackV
  LocalBuilder _stackposV
  LocalBuilder _stackV
  LocalBuilder _tempV
  LocalBuilder _temp2V
  LocalBuilder _temp3V
  RegexCode _code
  Int32[] _codes
  String[] _strings
  Nullable`1<RegexPrefix> _fcPrefix
  RegexBoyerMoore _bmPrefix
  int _anchors
  Label[] _labels
  BacktrackNote[] _notes
  int _notecount
  int _trackcount
  Label _backtrack
  int _regexopcode
  int _codepos
  int _backpos
  RegexOptions _options
  Int32[] _uniquenote
  Int32[] _goto
  int Stackpop
  int Stackpop2
  int Stackpop3
  int Capback
  int Capback2
  int Branchmarkback2
  int Lazybranchmarkback2
  int Branchcountback2
  int Lazybranchcountback2
  int Forejumpback
  int Uniquecount
Свойства:
Методы:
  void .cctor()
  FieldInfo RegexRunnerField(string fieldname)
  MethodInfo RegexRunnerMethod(string methname)
  RegexRunnerFactory Compile(RegexCode code, RegexOptions options)
  int AddBacktrackNote(int flags, Label l, int codepos)
  int AddTrack()
  int AddTrack(int flags)
  int AddGoto(int destpos)
  int AddUniqueTrack(int i)
  int AddUniqueTrack(int i, int flags)
  Label DefineLabel()
  void MarkLabel(Label l)
  int Operand(int i)
  bool IsRtl()
  bool IsCi()
  int Code()
  void Ldstr(string str)
  void Ldc(int i)
  void LdcI8(long i)
  void Dup()
  void Ret()
  void Pop()
  void Add()
  void Add(bool negate)
  void Sub()
  void Sub(bool negate)
  void Ldloc(LocalBuilder lt)
  void Stloc(LocalBuilder lt)
  void Ldthis()
  void Ldthisfld(FieldInfo ft)
  void Mvfldloc(FieldInfo ft, LocalBuilder lt)
  void Mvlocfld(LocalBuilder lt, FieldInfo ft)
  void Stfld(FieldInfo ft)
  void Callvirt(MethodInfo mt)
  void Call(MethodInfo mt)
  void Newobj(ConstructorInfo ct)
  void BrfalseFar(Label l)
  void BrtrueFar(Label l)
  void BrFar(Label l)
  void BleFar(Label l)
  void BltFar(Label l)
  void BgeFar(Label l)
  void BgtFar(Label l)
  void BneFar(Label l)
  void BeqFar(Label l)
  void Brfalse(Label l)
  void Br(Label l)
  void Ble(Label l)
  void Blt(Label l)
  void Bge(Label l)
  void Bgt(Label l)
  void Bgtun(Label l)
  void Bne(Label l)
  void Beq(Label l)
  void Ldlen()
  void Rightchar()
  void Rightcharnext()
  void Leftchar()
  void Leftcharnext()
  void Track()
  void Trackagain()
  void PushTrack(LocalBuilder lt)
  void TrackUnique(int i)
  void TrackUnique2(int i)
  void ReadyPushTrack()
  void PopTrack()
  void TopTrack()
  void PushStack(LocalBuilder lt)
  void ReadyReplaceStack(int i)
  void ReadyPushStack()
  void TopStack()
  void PopStack()
  void PopDiscardStack()
  void PopDiscardStack(int i)
  void DoReplace()
  void DoPush()
  void Back()
  void Goto(int i)
  int NextCodepos()
  Label AdvanceLabel()
  void Advance()
  void CallToLower()
  void GenerateForwardSection()
  void GenerateMiddleSection()
  void GenerateBacktrackSection()
  void GenerateFindFirstChar()
  void GenerateInitTrackCount()
  LocalBuilder DeclareInt()
  LocalBuilder DeclareIntArray()
  LocalBuilder DeclareString()
  void GenerateGo()
  void GenerateOneCode()
  void .ctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexFCD
Наследуется от: ValueType
Поля:
  int StackBufferSize
  int BeforeChild
  int AfterChild
  int Beginning
  int Bol
  int Start
  int Eol
  int EndZ
  int End
  int Boundary
  int ECMABoundary
  List`1<RegexFC> _fcStack
  ValueListBuilder`1<int> _intStack
  bool _skipAllChildren
  bool _skipchild
  bool _failed
Свойства:
Методы:
  void .ctor(Span`1<int> intStack)
  Nullable`1<RegexPrefix> FirstChars(RegexTree t)
  RegexPrefix Prefix(RegexTree tree)
  int Anchors(RegexTree tree)
  int AnchorFromType(int type)
  void PushInt(int i)
  bool IntIsEmpty()
  int PopInt()
  void PushFC(RegexFC fc)
  bool FCIsEmpty()
  RegexFC PopFC()
  RegexFC TopFC()
  void Dispose()
  RegexFC RegexFCFromRegexTree(RegexTree tree)
  void SkipChild()
  void CalculateFC(int NodeType, RegexNode node, int CurIndex)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexFC
Наследуется от: object
Поля:
  RegexCharClass _cc
  bool _nullable
  bool <CaseInsensitive>k__BackingField
Свойства:
  bool CaseInsensitive
Методы:
  void .ctor(bool nullable)
  void .ctor(char ch, bool not, bool nullable, bool caseInsensitive)
  void .ctor(string charClass, bool nullable, bool caseInsensitive)
  bool AddFC(RegexFC fc, bool concatenate)
  bool get_CaseInsensitive()
  void set_CaseInsensitive(bool value)
  string GetFirstChars(CultureInfo culture)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexInterpreter
Наследуется от: RegexRunner
Поля:
  RegexCode _code
  CultureInfo _culture
  int _operator
  int _codepos
  bool _rightToLeft
  bool _caseInsensitive
Свойства:
Методы:
  void .ctor(RegexCode code, CultureInfo culture)
  void InitTrackCount()
  void Advance(int i)
  void Goto(int newpos)
  void Textto(int newpos)
  void Trackto(int newpos)
  int Textstart()
  int Textpos()
  int Trackpos()
  void TrackPush()
  void TrackPush(int I1)
  void TrackPush(int I1, int I2)
  void TrackPush(int I1, int I2, int I3)
  void TrackPush2(int I1)
  void TrackPush2(int I1, int I2)
  void Backtrack()
  void SetOperator(int op)
  void TrackPop()
  void TrackPop(int framesize)
  int TrackPeek()
  int TrackPeek(int i)
  void StackPush(int I1)
  void StackPush(int I1, int I2)
  void StackPop()
  void StackPop(int framesize)
  int StackPeek()
  int StackPeek(int i)
  int Operator()
  int Operand(int i)
  int Leftchars()
  int Rightchars()
  int Bump()
  int Forwardchars()
  char Forwardcharnext()
  bool Stringmatch(string str)
  bool Refmatch(int index, int len)
  void Backwardnext()
  char CharAt(int j)
  bool FindFirstChar()
  void Go()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexLWCGCompiler
Наследуется от: RegexCompiler
Поля:
  int s_regexCount
  Type[] s_paramTypes
Свойства:
Методы:
  RegexRunnerFactory FactoryInstanceFromCode(RegexCode code, RegexOptions options)
  DynamicMethod DefineDynamicMethod(string methname, Type returntype, Type hostType)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexMatchTimeoutException
Наследуется от: TimeoutException
Поля:
  string <Input>k__BackingField
  string <Pattern>k__BackingField
  TimeSpan <MatchTimeout>k__BackingField
Свойства:
  string Input
  string Pattern
  TimeSpan MatchTimeout
Методы:
  void .ctor(string regexInput, string regexPattern, TimeSpan matchTimeout)
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  string get_Input()
  string get_Pattern()
  TimeSpan get_MatchTimeout()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexNode
Наследуется от: object
Поля:
  int Oneloop
  int Notoneloop
  int Setloop
  int Onelazy
  int Notonelazy
  int Setlazy
  int One
  int Notone
  int Set
  int Multi
  int Ref
  int Bol
  int Eol
  int Boundary
  int Nonboundary
  int ECMABoundary
  int NonECMABoundary
  int Beginning
  int Start
  int EndZ
  int End
  int Nothing
  int Empty
  int Alternate
  int Concatenate
  int Loop
  int Lazyloop
  int Capture
  int Group
  int Require
  int Prevent
  int Greedy
  int Testref
  int Testgroup
  int NType
  List`1<RegexNode> Children
  string Str
  char Ch
  int M
  int N
  RegexOptions Options
  RegexNode Next
Свойства:
Методы:
  void .ctor(int type, RegexOptions options)
  void .ctor(int type, RegexOptions options, char ch)
  void .ctor(int type, RegexOptions options, string str)
  void .ctor(int type, RegexOptions options, int m)
  void .ctor(int type, RegexOptions options, int m, int n)
  bool UseOptionR()
  RegexNode ReverseLeft()
  void MakeRep(int type, int min, int max)
  RegexNode Reduce()
  RegexNode StripEnation(int emptyType)
  RegexNode ReduceGroup()
  RegexNode ReduceRep()
  RegexNode ReduceSet()
  RegexNode ReduceAlternation()
  RegexNode ReduceConcatenation()
  RegexNode MakeQuantifier(bool lazy, int min, int max)
  void AddChild(RegexNode newChild)
  RegexNode Child(int i)
  int ChildCount()
  int Type()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexOptions
Наследуется от: Enum
Поля:
  int value__
  RegexOptions None
  RegexOptions IgnoreCase
  RegexOptions Multiline
  RegexOptions ExplicitCapture
  RegexOptions Compiled
  RegexOptions Singleline
  RegexOptions IgnorePatternWhitespace
  RegexOptions RightToLeft
  RegexOptions ECMAScript
  RegexOptions CultureInvariant
Свойства:
Методы:
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexParser
Наследуется от: object
Поля:
  int MaxValueDiv10
  int MaxValueMod10
  RegexNode _stack
  RegexNode _group
  RegexNode _alternation
  RegexNode _concatenation
  RegexNode _unit
  string _pattern
  int _currentPos
  CultureInfo _culture
  int _autocap
  int _capcount
  int _captop
  int _capsize
  Hashtable _caps
  Hashtable _capnames
  Int32[] _capnumlist
  List`1<string> _capnamelist
  RegexOptions _options
  List`1<RegexOptions> _optionsStack
  bool _ignoreNextParen
  byte Q
  byte S
  byte Z
  byte X
  byte E
  Byte[] s_category
Свойства:
Методы:
  RegexTree Parse(string re, RegexOptions op)
  RegexReplacement ParseReplacement(string rep, Hashtable caps, int capsize, Hashtable capnames, RegexOptions op)
  string Escape(string input)
  string Unescape(string input)
  void .ctor(CultureInfo culture)
  void SetPattern(string Re)
  void Reset(RegexOptions topopts)
  RegexNode ScanRegex()
  RegexNode ScanReplacement()
  RegexCharClass ScanCharClass(bool caseInsensitive, bool scanOnly)
  RegexNode ScanGroupOpen()
  void ScanBlank()
  RegexNode ScanBackslash(bool scanOnly)
  RegexNode ScanBasicBackslash(bool scanOnly)
  RegexNode ScanDollar()
  string ScanCapname()
  char ScanOctal()
  int ScanDecimal()
  char ScanHex(int c)
  int HexDigit(char ch)
  char ScanControl()
  bool IsOnlyTopOption(RegexOptions option)
  void ScanOptions()
  char ScanCharEscape()
  string ParseProperty()
  int TypeFromCode(char ch)
  RegexOptions OptionFromCode(char ch)
  void CountCaptures()
  void NoteCaptureSlot(int i, int pos)
  void NoteCaptureName(string name, int pos)
  void NoteCaptures(Hashtable caps, int capsize, Hashtable capnames)
  void AssignNameSlots()
  int CaptureSlotFromName(string capname)
  bool IsCaptureSlot(int i)
  bool IsCaptureName(string capname)
  bool UseOptionN()
  bool UseOptionI()
  bool UseOptionM()
  bool UseOptionS()
  bool UseOptionX()
  bool UseOptionE()
  bool IsSpecial(char ch)
  bool IsStopperX(char ch)
  bool IsQuantifier(char ch)
  bool IsTrueQuantifier()
  bool IsSpace(char ch)
  bool IsMetachar(char ch)
  void AddConcatenate(int pos, int cch, bool isReplacement)
  void PushGroup()
  void PopGroup()
  bool EmptyStack()
  void StartGroup(RegexNode openGroup)
  void AddAlternate()
  void AddConcatenate()
  void AddConcatenate(bool lazy, int min, int max)
  RegexNode Unit()
  void AddUnitOne(char ch)
  void AddUnitNotone(char ch)
  void AddUnitSet(string cc)
  void AddUnitNode(RegexNode node)
  void AddUnitType(int type)
  void AddGroup()
  void PushOptions()
  void PopOptions()
  bool EmptyOptionsStack()
  void PopKeepOptions()
  ArgumentException MakeException(string message)
  int Textpos()
  void Textto(int pos)
  char RightCharMoveRight()
  void MoveRight()
  void MoveRight(int i)
  void MoveLeft()
  char CharAt(int i)
  char RightChar()
  char RightChar(int i)
  int CharsRight()
  void .cctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexPrefix
Наследуется от: ValueType
Поля:
  bool <CaseInsensitive>k__BackingField
  RegexPrefix <Empty>k__BackingField
  string <Prefix>k__BackingField
Свойства:
  bool CaseInsensitive
  RegexPrefix Empty
  string Prefix
Методы:
  void .ctor(string prefix, bool ci)
  bool get_CaseInsensitive()
  RegexPrefix get_Empty()
  string get_Prefix()
  void .cctor()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexReplacement
Наследуется от: object
Поля:
  int Specials
  int LeftPortion
  int RightPortion
  int LastGroup
  int WholeString
  List`1<string> _strings
  List`1<int> _rules
  string <Pattern>k__BackingField
Свойства:
  string Pattern
Методы:
  void .ctor(string rep, RegexNode concat, Hashtable _caps)
  RegexReplacement GetOrCreate(WeakReference`1<RegexReplacement> replRef, string replacement, Hashtable caps, int capsize, Hashtable capnames, RegexOptions roptions)
  string get_Pattern()
  void ReplacementImpl(StringBuilder sb, Match match)
  void ReplacementImplRTL(List`1<string> al, Match match)
  string Replacement(Match match)
  string Replace(Regex regex, string input, int count, int startat)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexRunner
Наследуется от: object
Поля:
  int runtextbeg
  int runtextend
  int runtextstart
  string runtext
  int runtextpos
  Int32[] runtrack
  int runtrackpos
  Int32[] runstack
  int runstackpos
  Int32[] runcrawl
  int runcrawlpos
  int runtrackcount
  Match runmatch
  Regex runregex
  int _timeout
  bool _ignoreTimeout
  int _timeoutOccursAt
  int TimeoutCheckFrequency
  int _timeoutChecksToSkip
Свойства:
Методы:
  void .ctor()
  Match Scan(Regex regex, string text, int textbeg, int textend, int textstart, int prevlen, bool quick)
  Match Scan(Regex regex, string text, int textbeg, int textend, int textstart, int prevlen, bool quick, TimeSpan timeout)
  void StartTimeoutWatch()
  void CheckTimeout()
  void DoCheckTimeout()
  void Go()
  bool FindFirstChar()
  void InitTrackCount()
  void InitMatch()
  Match TidyMatch(bool quick)
  void EnsureStorage()
  bool IsBoundary(int index, int startpos, int endpos)
  bool IsECMABoundary(int index, int startpos, int endpos)
  bool CharInSet(char ch, string set, string category)
  bool CharInClass(char ch, string charClass)
  void DoubleTrack()
  void DoubleStack()
  void DoubleCrawl()
  void Crawl(int i)
  int Popcrawl()
  int Crawlpos()
  void Capture(int capnum, int start, int end)
  void TransferCapture(int capnum, int uncapnum, int start, int end)
  void Uncapture()
  bool IsMatched(int cap)
  int MatchIndex(int cap)
  int MatchLength(int cap)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexRunnerFactory
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  RegexRunner CreateInstance()
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexTree
Наследуется от: object
Поля:
  RegexNode Root
  Hashtable Caps
  Int32[] CapNumList
  int CapTop
  Hashtable CapNames
  String[] CapsList
  RegexOptions Options
Свойства:
Методы:
  void .ctor(RegexNode root, Hashtable caps, Int32[] capNumList, int capTop, Hashtable capNames, String[] capsList, RegexOptions options)
--------------------------------------------------
Класс: System.Text.RegularExpressions.RegexWriter
Наследуется от: ValueType
Поля:
  int BeforeChild
  int AfterChild
  int EmittedSize
  int IntStackSize
  ValueListBuilder`1<int> _emitted
  ValueListBuilder`1<int> _intStack
  Dictionary`2<string, int> _stringHash
  List`1<string> _stringTable
  Hashtable _caps
  int _trackCount
Свойства:
Методы:
  void .ctor(Span`1<int> emittedSpan, Span`1<int> intStackSpan)
  RegexCode Write(RegexTree tree)
  void Dispose()
  RegexCode RegexCodeFromRegexTree(RegexTree tree)
  void PatchJump(int offset, int jumpDest)
  void Emit(int op)
  void Emit(int op, int opd1)
  void Emit(int op, int opd1, int opd2)
  int StringCode(string str)
  int MapCapnum(int capnum)
  void EmitFragment(int nodetype, RegexNode node, int curIndex)
--------------------------------------------------
Класс: System.Diagnostics.StackFrameExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool HasNativeImage(StackFrame stackFrame)
  bool HasMethod(StackFrame stackFrame)
  bool HasILOffset(StackFrame stackFrame)
  bool HasSource(StackFrame stackFrame)
  IntPtr GetNativeIP(StackFrame stackFrame)
  IntPtr GetNativeImageBase(StackFrame stackFrame)
--------------------------------------------------
Класс: System.Diagnostics.AssertSection
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection _properties
  ConfigurationProperty _propAssertUIEnabled
  ConfigurationProperty _propLogFile
Свойства:
  bool AssertUIEnabled
  string LogFileName
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  bool get_AssertUIEnabled()
  string get_LogFileName()
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.BooleanSwitch
Наследуется от: Switch
Поля:
Свойства:
  bool Enabled
Методы:
  void .ctor(string displayName, string description)
  void .ctor(string displayName, string description, string defaultSwitchValue)
  bool get_Enabled()
  void set_Enabled(bool value)
  void OnValueChanged()
--------------------------------------------------
Класс: System.Diagnostics.ConsoleTraceListener
Наследуется от: TextWriterTraceListener
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(bool useErrorStream)
  void Close()
--------------------------------------------------
Класс: System.Diagnostics.CorrelationManager
Наследуется от: object
Поля:
  string transactionSlotName
  string activityIdSlotName
Свойства:
  Guid ActivityId
  Stack LogicalOperationStack
Методы:
  void .ctor()
  Guid get_ActivityId()
  void set_ActivityId(Guid value)
  Stack get_LogicalOperationStack()
  void StartLogicalOperation(object operationId)
  void StartLogicalOperation()
  void StopLogicalOperation()
  Stack GetLogicalOperationStack()
--------------------------------------------------
Класс: System.Diagnostics.Debug
Наследуется от: object
Поля:
Свойства:
  TraceListenerCollection Listeners
  bool AutoFlush
  int IndentLevel
  int IndentSize
Методы:
  TraceListenerCollection get_Listeners()
  bool get_AutoFlush()
  void set_AutoFlush(bool value)
  int get_IndentLevel()
  void set_IndentLevel(int value)
  int get_IndentSize()
  void set_IndentSize(int value)
  void Flush()
  void Close()
  void Assert(bool condition)
  void Assert(bool condition, string message)
  void Assert(bool condition, string message, string detailMessage)
  void Assert(bool condition, string message, string detailMessageFormat, Object[] args)
  void Fail(string message)
  void Fail(string message, string detailMessage)
  void Print(string message)
  void Print(string format, Object[] args)
  void Write(string message)
  void Write(object value)
  void Write(string message, string category)
  void Write(object value, string category)
  void WriteLine(string message)
  void WriteLine(object value)
  void WriteLine(string message, string category)
  void WriteLine(object value, string category)
  void WriteLine(string format, Object[] args)
  void WriteIf(bool condition, string message)
  void WriteIf(bool condition, object value)
  void WriteIf(bool condition, string message, string category)
  void WriteIf(bool condition, object value, string category)
  void WriteLineIf(bool condition, string message)
  void WriteLineIf(bool condition, object value)
  void WriteLineIf(bool condition, string message, string category)
  void WriteLineIf(bool condition, object value, string category)
  void Indent()
  void Unindent()
--------------------------------------------------
Класс: System.Diagnostics.DelimitedListTraceListener
Наследуется от: TextWriterTraceListener
Поля:
  string delimiter
  string secondaryDelim
  bool initializedDelim
Свойства:
  string Delimiter
Методы:
  void .ctor(Stream stream)
  void .ctor(Stream stream, string name)
  void .ctor(TextWriter writer)
  void .ctor(TextWriter writer, string name)
  void .ctor(string fileName)
  void .ctor(string fileName, string name)
  string get_Delimiter()
  void set_Delimiter(string value)
  String[] GetSupportedAttributes()
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string format, Object[] args)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string message)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, object data)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, Object[] data)
  void WriteHeader(string source, TraceEventType eventType, int id)
  void WriteFooter(TraceEventCache eventCache)
  void WriteEscaped(string message)
  void WriteStackEscaped(Stack stack)
--------------------------------------------------
Класс: System.Diagnostics.InitState
Наследуется от: Enum
Поля:
  int value__
  InitState NotInitialized
  InitState Initializing
  InitState Initialized
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.DiagnosticsConfiguration
Наследуется от: object
Поля:
  SystemDiagnosticsSection modreq(System.Runtime.CompilerServices.IsVolatile) configSection
  InitState modreq(System.Runtime.CompilerServices.IsVolatile) initState
Свойства:
  SwitchElementsCollection SwitchSettings
  bool AssertUIEnabled
  string ConfigFilePath
  string LogFileName
  bool AutoFlush
  bool UseGlobalLock
  int IndentSize
  ListenerElementsCollection SharedListeners
  SourceElementsCollection Sources
  SystemDiagnosticsSection SystemDiagnosticsSection
Методы:
  SwitchElementsCollection get_SwitchSettings()
  bool get_AssertUIEnabled()
  string get_ConfigFilePath()
  string get_LogFileName()
  bool get_AutoFlush()
  bool get_UseGlobalLock()
  int get_IndentSize()
  ListenerElementsCollection get_SharedListeners()
  SourceElementsCollection get_Sources()
  SystemDiagnosticsSection get_SystemDiagnosticsSection()
  SystemDiagnosticsSection GetConfigSection()
  bool IsInitializing()
  bool IsInitialized()
  bool CanInitialize()
  void Initialize()
  void Refresh()
--------------------------------------------------
Класс: System.Diagnostics.FilterElement
Наследуется от: TypedElement
Поля:
Свойства:
Методы:
  void .ctor()
  TraceFilter GetRuntimeObject()
  TraceFilter RefreshRuntimeObject(TraceFilter filter)
--------------------------------------------------
Класс: System.Diagnostics.ListenerElementsCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  ListenerElement Item
  ConfigurationElementCollectionType CollectionType
Методы:
  ListenerElement get_Item(string name)
  ConfigurationElementCollectionType get_CollectionType()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  TraceListenerCollection GetRuntimeObject()
  void InitializeDefault()
  void InitializeDefaultInternal()
  void BaseAdd(ConfigurationElement element)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SharedListenerElementsCollection
Наследуется от: ListenerElementsCollection
Поля:
Свойства:
  ConfigurationElementCollectionType CollectionType
  string ElementName
Методы:
  ConfigurationElementCollectionType get_CollectionType()
  ConfigurationElement CreateNewElement()
  string get_ElementName()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.ListenerElement
Наследуется от: TypedElement
Поля:
  ConfigurationProperty _propFilter
  ConfigurationProperty _propName
  ConfigurationProperty _propOutputOpts
  ConfigurationProperty _propListenerTypeName
  bool _allowReferences
  Hashtable _attributes
  bool _isAddedByDefault
Свойства:
  Hashtable Attributes
  FilterElement Filter
  string Name
  TraceOptions TraceOutputOptions
  string TypeName
Методы:
  void .cctor()
  void .ctor(bool allowReferences)
  Hashtable get_Attributes()
  FilterElement get_Filter()
  string get_Name()
  void set_Name(string value)
  TraceOptions get_TraceOutputOptions()
  void set_TraceOutputOptions(TraceOptions value)
  string get_TypeName()
  void set_TypeName(string value)
  bool Equals(object compareTo)
  int GetHashCode()
  TraceListener GetRuntimeObject()
  bool OnDeserializeUnrecognizedAttribute(string name, string value)
  void PreSerialize(XmlWriter writer)
  bool SerializeElement(XmlWriter writer, bool serializeCollectionKey)
  void Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)
  void ResetProperties()
  TraceListener RefreshRuntimeObject(TraceListener listener)
--------------------------------------------------
Класс: System.Diagnostics.PerfCounterSection
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection _properties
  ConfigurationProperty _propFileMappingSize
Свойства:
  int FileMappingSize
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  int get_FileMappingSize()
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.EventTypeFilter
Наследуется от: TraceFilter
Поля:
  SourceLevels level
Свойства:
  SourceLevels EventType
Методы:
  void .ctor(SourceLevels level)
  bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage, Object[] args, object data1, Object[] data)
  SourceLevels get_EventType()
  void set_EventType(SourceLevels value)
--------------------------------------------------
Класс: System.Diagnostics.SourceElementsCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  SourceElement Item
  string ElementName
  ConfigurationElementCollectionType CollectionType
Методы:
  SourceElement get_Item(string name)
  string get_ElementName()
  ConfigurationElementCollectionType get_CollectionType()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SourceElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection _properties
  ConfigurationProperty _propName
  ConfigurationProperty _propSwitchName
  ConfigurationProperty _propSwitchValue
  ConfigurationProperty _propSwitchType
  ConfigurationProperty _propListeners
  Hashtable _attributes
Свойства:
  Hashtable Attributes
  ListenerElementsCollection Listeners
  string Name
  ConfigurationPropertyCollection Properties
  string SwitchName
  string SwitchValue
  string SwitchType
Методы:
  void .cctor()
  Hashtable get_Attributes()
  ListenerElementsCollection get_Listeners()
  string get_Name()
  ConfigurationPropertyCollection get_Properties()
  string get_SwitchName()
  string get_SwitchValue()
  string get_SwitchType()
  void DeserializeElement(XmlReader reader, bool serializeCollectionKey)
  bool OnDeserializeUnrecognizedAttribute(string name, string value)
  void PreSerialize(XmlWriter writer)
  bool SerializeElement(XmlWriter writer, bool serializeCollectionKey)
  void Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)
  void ResetProperties()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SourceFilter
Наследуется от: TraceFilter
Поля:
  string src
Свойства:
  string Source
Методы:
  void .ctor(string source)
  bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage, Object[] args, object data1, Object[] data)
  string get_Source()
  void set_Source(string value)
--------------------------------------------------
Класс: System.Diagnostics.SourceLevels
Наследуется от: Enum
Поля:
  int value__
  SourceLevels Off
  SourceLevels Critical
  SourceLevels Error
  SourceLevels Warning
  SourceLevels Information
  SourceLevels Verbose
  SourceLevels ActivityTracing
  SourceLevels All
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.SourceSwitch
Наследуется от: Switch
Поля:
Свойства:
  SourceLevels Level
Методы:
  void .ctor(string name)
  void .ctor(string displayName, string defaultSwitchValue)
  SourceLevels get_Level()
  void set_Level(SourceLevels value)
  bool ShouldTrace(TraceEventType eventType)
  void OnValueChanged()
--------------------------------------------------
Класс: System.Diagnostics.Switch
Наследуется от: object
Поля:
  SwitchElementsCollection switchSettings
  string description
  string displayName
  int switchSetting
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) initialized
  bool initializing
  String modreq(System.Runtime.CompilerServices.IsVolatile) switchValueString
  StringDictionary attributes
  string defaultValue
  object m_intializedLock
  List`1<WeakReference> switches
  int s_LastCollectionCount
Свойства:
  object IntializedLock
  StringDictionary Attributes
  string DisplayName
  string Description
  int SwitchSetting
  string Value
Методы:
  object get_IntializedLock()
  void .ctor(string displayName, string description)
  void .ctor(string displayName, string description, string defaultSwitchValue)
  void _pruneCachedSwitches()
  StringDictionary get_Attributes()
  string get_DisplayName()
  string get_Description()
  int get_SwitchSetting()
  void set_SwitchSetting(int value)
  string get_Value()
  void set_Value(string value)
  void Initialize()
  bool InitializeWithStatus()
  bool InitializeConfigSettings()
  String[] GetSupportedAttributes()
  void OnSwitchSettingChanged()
  void OnValueChanged()
  void RefreshAll()
  void Refresh()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.SwitchAttribute
Наследуется от: Attribute
Поля:
  Type type
  string name
  string description
Свойства:
  string SwitchName
  Type SwitchType
  string SwitchDescription
Методы:
  void .ctor(string switchName, Type switchType)
  string get_SwitchName()
  void set_SwitchName(string value)
  Type get_SwitchType()
  void set_SwitchType(Type value)
  string get_SwitchDescription()
  void set_SwitchDescription(string value)
  SwitchAttribute[] GetAll(Assembly assembly)
  void GetAllRecursive(Type type, ArrayList switchAttribs)
  void GetAllRecursive(MemberInfo member, ArrayList switchAttribs)
--------------------------------------------------
Класс: System.Diagnostics.SwitchElementsCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  SwitchElement Item
  ConfigurationElementCollectionType CollectionType
Методы:
  SwitchElement get_Item(string name)
  ConfigurationElementCollectionType get_CollectionType()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SwitchElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection _properties
  ConfigurationProperty _propName
  ConfigurationProperty _propValue
  Hashtable _attributes
Свойства:
  Hashtable Attributes
  string Name
  ConfigurationPropertyCollection Properties
  string Value
Методы:
  void .cctor()
  Hashtable get_Attributes()
  string get_Name()
  ConfigurationPropertyCollection get_Properties()
  string get_Value()
  bool OnDeserializeUnrecognizedAttribute(string name, string value)
  void PreSerialize(XmlWriter writer)
  bool SerializeElement(XmlWriter writer, bool serializeCollectionKey)
  void Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)
  void ResetProperties()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.SwitchLevelAttribute
Наследуется от: Attribute
Поля:
  Type type
Свойства:
  Type SwitchLevelType
Методы:
  void .ctor(Type switchLevelType)
  Type get_SwitchLevelType()
  void set_SwitchLevelType(Type value)
--------------------------------------------------
Класс: System.Diagnostics.SystemDiagnosticsSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection _properties
  ConfigurationProperty _propAssert
  ConfigurationProperty _propPerfCounters
  ConfigurationProperty _propSources
  ConfigurationProperty _propSharedListeners
  ConfigurationProperty _propSwitches
  ConfigurationProperty _propTrace
Свойства:
  AssertSection Assert
  PerfCounterSection PerfCounters
  ConfigurationPropertyCollection Properties
  SourceElementsCollection Sources
  ListenerElementsCollection SharedListeners
  SwitchElementsCollection Switches
  TraceSection Trace
Методы:
  void .cctor()
  AssertSection get_Assert()
  PerfCounterSection get_PerfCounters()
  ConfigurationPropertyCollection get_Properties()
  SourceElementsCollection get_Sources()
  ListenerElementsCollection get_SharedListeners()
  SwitchElementsCollection get_Switches()
  TraceSection get_Trace()
  void InitializeDefault()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.TextWriterTraceListener
Наследуется от: TraceListener
Поля:
  TextWriter writer
  string fileName
Свойства:
  TextWriter Writer
Методы:
  void .ctor()
  void .ctor(Stream stream)
  void .ctor(Stream stream, string name)
  void .ctor(TextWriter writer)
  void .ctor(TextWriter writer, string name)
  void .ctor(string fileName)
  void .ctor(string fileName, string name)
  TextWriter get_Writer()
  void set_Writer(TextWriter value)
  void Close()
  void Dispose(bool disposing)
  void Flush()
  void Write(string message)
  void WriteLine(string message)
  Encoding GetEncodingWithFallback(Encoding encoding)
  bool EnsureWriter()
--------------------------------------------------
Класс: System.Diagnostics.Trace
Наследуется от: object
Поля:
  CorrelationManager modreq(System.Runtime.CompilerServices.IsVolatile) correlationManager
Свойства:
  TraceListenerCollection Listeners
  bool AutoFlush
  bool UseGlobalLock
  CorrelationManager CorrelationManager
  int IndentLevel
  int IndentSize
Методы:
  void .ctor()
  TraceListenerCollection get_Listeners()
  bool get_AutoFlush()
  void set_AutoFlush(bool value)
  bool get_UseGlobalLock()
  void set_UseGlobalLock(bool value)
  CorrelationManager get_CorrelationManager()
  int get_IndentLevel()
  void set_IndentLevel(int value)
  int get_IndentSize()
  void set_IndentSize(int value)
  void Flush()
  void Close()
  void Assert(bool condition)
  void Assert(bool condition, string message)
  void Assert(bool condition, string message, string detailMessage)
  void Fail(string message)
  void Fail(string message, string detailMessage)
  void Refresh()
  void TraceInformation(string message)
  void TraceInformation(string format, Object[] args)
  void TraceWarning(string message)
  void TraceWarning(string format, Object[] args)
  void TraceError(string message)
  void TraceError(string format, Object[] args)
  void Write(string message)
  void Write(object value)
  void Write(string message, string category)
  void Write(object value, string category)
  void WriteLine(string message)
  void WriteLine(object value)
  void WriteLine(string message, string category)
  void WriteLine(object value, string category)
  void WriteIf(bool condition, string message)
  void WriteIf(bool condition, object value)
  void WriteIf(bool condition, string message, string category)
  void WriteIf(bool condition, object value, string category)
  void WriteLineIf(bool condition, string message)
  void WriteLineIf(bool condition, object value)
  void WriteLineIf(bool condition, string message, string category)
  void WriteLineIf(bool condition, object value, string category)
  void Indent()
  void Unindent()
--------------------------------------------------
Класс: System.Diagnostics.TraceEventCache
Наследуется от: object
Поля:
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) processId
  String modreq(System.Runtime.CompilerServices.IsVolatile) processName
  long timeStamp
  DateTime dateTime
  string stackTrace
Свойства:
  Guid ActivityId
  string Callstack
  Stack LogicalOperationStack
  DateTime DateTime
  int ProcessId
  string ThreadId
  long Timestamp
Методы:
  Guid get_ActivityId()
  string get_Callstack()
  Stack get_LogicalOperationStack()
  DateTime get_DateTime()
  int get_ProcessId()
  string get_ThreadId()
  long get_Timestamp()
  void InitProcessInfo()
  int GetProcessId()
  string GetProcessName()
  int GetThreadId()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.TraceEventType
Наследуется от: Enum
Поля:
  int value__
  TraceEventType Critical
  TraceEventType Error
  TraceEventType Warning
  TraceEventType Information
  TraceEventType Verbose
  TraceEventType Start
  TraceEventType Stop
  TraceEventType Suspend
  TraceEventType Resume
  TraceEventType Transfer
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.TraceFilter
Наследуется от: object
Поля:
  string initializeData
Свойства:
Методы:
  bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage, Object[] args, object data1, Object[] data)
  bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage)
  bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage, Object[] args)
  bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage, Object[] args, object data1)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.TraceInternal
Наследуется от: object
Поля:
  String modreq(System.Runtime.CompilerServices.IsVolatile) appName
  TraceListenerCollection modreq(System.Runtime.CompilerServices.IsVolatile) listeners
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) autoFlush
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) useGlobalLock
  int indentLevel
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) indentSize
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) settingsInitialized
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) defaultInitialized
  object critSec
Свойства:
  TraceListenerCollection Listeners
  string AppName
  bool AutoFlush
  bool UseGlobalLock
  int IndentLevel
  int IndentSize
Методы:
  TraceListenerCollection get_Listeners()
  string get_AppName()
  bool get_AutoFlush()
  void set_AutoFlush(bool value)
  bool get_UseGlobalLock()
  void set_UseGlobalLock(bool value)
  int get_IndentLevel()
  void set_IndentLevel(int value)
  int get_IndentSize()
  void set_IndentSize(int value)
  void SetIndentSize(int value)
  void Indent()
  void Unindent()
  void Flush()
  void Close()
  void Assert(bool condition)
  void Assert(bool condition, string message)
  void Assert(bool condition, string message, string detailMessage)
  void Fail(string message)
  void Fail(string message, string detailMessage)
  void InitializeSettings()
  void Refresh()
  void TraceEvent(TraceEventType eventType, int id, string format, Object[] args)
  void Write(string message)
  void Write(object value)
  void Write(string message, string category)
  void Write(object value, string category)
  void WriteLine(string message)
  void WriteLine(object value)
  void WriteLine(string message, string category)
  void WriteLine(object value, string category)
  void WriteIf(bool condition, string message)
  void WriteIf(bool condition, object value)
  void WriteIf(bool condition, string message, string category)
  void WriteIf(bool condition, object value, string category)
  void WriteLineIf(bool condition, string message)
  void WriteLineIf(bool condition, object value)
  void WriteLineIf(bool condition, string message, string category)
  void WriteLineIf(bool condition, object value, string category)
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.TraceLevel
Наследуется от: Enum
Поля:
  int value__
  TraceLevel Off
  TraceLevel Error
  TraceLevel Warning
  TraceLevel Info
  TraceLevel Verbose
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.TraceListener
Наследуется от: MarshalByRefObject
Поля:
  int indentLevel
  int indentSize
  TraceOptions traceOptions
  bool needIndent
  string listenerName
  TraceFilter filter
  StringDictionary attributes
  string initializeData
Свойства:
  StringDictionary Attributes
  string Name
  bool IsThreadSafe
  int IndentLevel
  int IndentSize
  TraceFilter Filter
  bool NeedIndent
  TraceOptions TraceOutputOptions
Методы:
  void .ctor()
  void .ctor(string name)
  StringDictionary get_Attributes()
  string get_Name()
  void set_Name(string value)
  bool get_IsThreadSafe()
  void Dispose()
  void Dispose(bool disposing)
  void Close()
  void Flush()
  int get_IndentLevel()
  void set_IndentLevel(int value)
  int get_IndentSize()
  void set_IndentSize(int value)
  TraceFilter get_Filter()
  void set_Filter(TraceFilter value)
  bool get_NeedIndent()
  void set_NeedIndent(bool value)
  TraceOptions get_TraceOutputOptions()
  void set_TraceOutputOptions(TraceOptions value)
  void SetAttributes(Hashtable attribs)
  void Fail(string message)
  void Fail(string message, string detailMessage)
  String[] GetSupportedAttributes()
  void Write(string message)
  void Write(object o)
  void Write(string message, string category)
  void Write(object o, string category)
  void WriteIndent()
  void WriteLine(string message)
  void WriteLine(object o)
  void WriteLine(string message, string category)
  void WriteLine(object o, string category)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, object data)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, Object[] data)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string message)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string format, Object[] args)
  void TraceTransfer(TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId)
  void WriteHeader(string source, TraceEventType eventType, int id)
  void WriteFooter(TraceEventCache eventCache)
  bool IsEnabled(TraceOptions opts)
--------------------------------------------------
Класс: System.Diagnostics.TraceListenerCollection
Наследуется от: object
Поля:
  ArrayList list
Свойства:
  TraceListener Item
  TraceListener Item
  int Count
  object System.Collections.IList.Item
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.ICollection.IsSynchronized
Методы:
  void .ctor()
  TraceListener get_Item(int i)
  void set_Item(int i, TraceListener value)
  TraceListener get_Item(string name)
  int get_Count()
  int Add(TraceListener listener)
  void AddRange(TraceListener[] value)
  void AddRange(TraceListenerCollection value)
  void Clear()
  bool Contains(TraceListener listener)
  void CopyTo(TraceListener[] listeners, int index)
  IEnumerator GetEnumerator()
  void InitializeListener(TraceListener listener)
  int IndexOf(TraceListener listener)
  void Insert(int index, TraceListener listener)
  void Remove(TraceListener listener)
  void Remove(string name)
  void RemoveAt(int index)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.ICollection.get_IsSynchronized()
  void System.Collections.ICollection.CopyTo(Array array, int index)
--------------------------------------------------
Класс: System.Diagnostics.TraceOptions
Наследуется от: Enum
Поля:
  int value__
  TraceOptions None
  TraceOptions LogicalOperationStack
  TraceOptions DateTime
  TraceOptions Timestamp
  TraceOptions ProcessId
  TraceOptions ThreadId
  TraceOptions Callstack
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.TraceSection
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection _properties
  ConfigurationProperty _propListeners
  ConfigurationProperty _propAutoFlush
  ConfigurationProperty _propIndentSize
  ConfigurationProperty _propUseGlobalLock
Свойства:
  bool AutoFlush
  int IndentSize
  ListenerElementsCollection Listeners
  bool UseGlobalLock
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  bool get_AutoFlush()
  int get_IndentSize()
  ListenerElementsCollection get_Listeners()
  bool get_UseGlobalLock()
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.TraceSource
Наследуется от: object
Поля:
  List`1<WeakReference> tracesources
  int s_LastCollectionCount
  SourceSwitch modreq(System.Runtime.CompilerServices.IsVolatile) internalSwitch
  TraceListenerCollection modreq(System.Runtime.CompilerServices.IsVolatile) listeners
  StringDictionary attributes
  SourceLevels switchLevel
  String modreq(System.Runtime.CompilerServices.IsVolatile) sourceName
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _initCalled
Свойства:
  StringDictionary Attributes
  string Name
  TraceListenerCollection Listeners
  SourceSwitch Switch
Методы:
  void .ctor(string name)
  void .ctor(string name, SourceLevels defaultLevel)
  void _pruneCachedTraceSources()
  void Initialize()
  void NoConfigInit()
  void Close()
  void Flush()
  String[] GetSupportedAttributes()
  void RefreshAll()
  void Refresh()
  void TraceEvent(TraceEventType eventType, int id)
  void TraceEvent(TraceEventType eventType, int id, string message)
  void TraceEvent(TraceEventType eventType, int id, string format, Object[] args)
  void TraceData(TraceEventType eventType, int id, object data)
  void TraceData(TraceEventType eventType, int id, Object[] data)
  void TraceInformation(string message)
  void TraceInformation(string format, Object[] args)
  void TraceTransfer(int id, string message, Guid relatedActivityId)
  void CreateSwitch(string typename, string name)
  StringDictionary get_Attributes()
  string get_Name()
  TraceListenerCollection get_Listeners()
  SourceSwitch get_Switch()
  void set_Switch(SourceSwitch value)
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.TraceSwitch
Наследуется от: Switch
Поля:
Свойства:
  TraceLevel Level
  bool TraceError
  bool TraceWarning
  bool TraceInfo
  bool TraceVerbose
Методы:
  void .ctor(string displayName, string description)
  void .ctor(string displayName, string description, string defaultSwitchValue)
  TraceLevel get_Level()
  void set_Level(TraceLevel value)
  bool get_TraceError()
  bool get_TraceWarning()
  bool get_TraceInfo()
  bool get_TraceVerbose()
  void OnSwitchSettingChanged()
  void OnValueChanged()
--------------------------------------------------
Класс: System.Diagnostics.TypedElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty _propTypeName
  ConfigurationProperty _propInitData
  ConfigurationPropertyCollection _properties
  object _runtimeObject
  Type _baseType
Свойства:
  string InitData
  ConfigurationPropertyCollection Properties
  string TypeName
Методы:
  void .ctor(Type baseType)
  string get_InitData()
  void set_InitData(string value)
  ConfigurationPropertyCollection get_Properties()
  string get_TypeName()
  void set_TypeName(string value)
  object BaseGetRuntimeObject()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.XmlWriterTraceListener
Наследуется от: TextWriterTraceListener
Поля:
  string fixedHeader
  string machineName
  StringBuilder strBldr
  XmlTextWriter xmlBlobWriter
  bool shouldRespectFilterOnTraceTransfer
Свойства:
Методы:
  void .ctor(Stream stream)
  void .ctor(Stream stream, string name)
  void .ctor(TextWriter writer)
  void .ctor(TextWriter writer, string name)
  void .ctor(string filename)
  void .ctor(string filename, string name)
  void Write(string message)
  void WriteLine(string message)
  void Fail(string message, string detailMessage)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string format, Object[] args)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string message)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, object data)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, Object[] data)
  void WriteData(object data)
  void Close()
  void TraceTransfer(TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId)
  void WriteHeader(string source, TraceEventType eventType, int id, TraceEventCache eventCache, Guid relatedActivityId)
  void WriteHeader(string source, TraceEventType eventType, int id, TraceEventCache eventCache)
  void WriteStartHeader(string source, TraceEventType eventType, int id, TraceEventCache eventCache)
  void WriteEndHeader(TraceEventCache eventCache)
  void WriteFooter(TraceEventCache eventCache)
  void WriteEscaped(string str)
  void InternalWrite(string message)
--------------------------------------------------
Класс: System.Diagnostics.TraceUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  object GetRuntimeObject(string className, Type baseType, string initializeData)
  bool IsOwnedTL(Type type)
  bool IsOwnedTextWriterTL(Type type)
  object ConvertToBaseTypeOrEnum(string value, Type type)
  void VerifyAttributes(IDictionary attributes, String[] supportedAttributes, object parent)
--------------------------------------------------
Класс: System.Diagnostics.UserCallBack
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(string data)
  IAsyncResult BeginInvoke(string data, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Diagnostics.AsyncStreamReader
Наследуется от: object
Поля:
  int DefaultBufferSize
  int MinBufferSize
  Stream stream
  Encoding encoding
  Decoder decoder
  Byte[] byteBuffer
  Char[] charBuffer
  int _maxCharsPerBuffer
  Process process
  UserCallBack userCallBack
  bool cancelOperation
  ManualResetEvent eofEvent
  Queue messageQueue
  StringBuilder sb
  bool bLastCarriageReturn
  int currentLinePos
  object syncObject
  IAsyncResult asyncReadResult
Свойства:
  Encoding CurrentEncoding
  Stream BaseStream
Методы:
  void .ctor(Process process, Stream stream, UserCallBack callback, Encoding encoding)
  void .ctor(Process process, Stream stream, UserCallBack callback, Encoding encoding, int bufferSize)
  void Init(Process process, Stream stream, UserCallBack callback, Encoding encoding, int bufferSize)
  void Close()
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  Encoding get_CurrentEncoding()
  Stream get_BaseStream()
  void BeginReadLine()
  void CancelOperation()
  void ReadBuffer(IAsyncResult ar)
  void GetLinesFromStringBuilder()
  void FlushMessageQueue()
  void WaitUtilEOF()
--------------------------------------------------
Класс: System.Diagnostics.Process
Наследуется от: Component
Поля:
  bool haveProcessId
  int processId
  bool haveProcessHandle
  SafeProcessHandle m_processHandle
  bool isRemoteMachine
  string machineName
  int m_processAccess
  ProcessThreadCollection threads
  ProcessModuleCollection modules
  bool haveWorkingSetLimits
  IntPtr minWorkingSet
  IntPtr maxWorkingSet
  bool havePriorityClass
  ProcessPriorityClass priorityClass
  ProcessStartInfo startInfo
  bool watchForExit
  bool watchingForExit
  EventHandler onExited
  bool exited
  int exitCode
  bool signaled
  DateTime exitTime
  bool haveExitTime
  bool raisedOnExited
  RegisteredWaitHandle registeredWaitHandle
  WaitHandle waitHandle
  ISynchronizeInvoke synchronizingObject
  StreamReader standardOutput
  StreamWriter standardInput
  StreamReader standardError
  OperatingSystem operatingSystem
  bool disposed
  StreamReadMode outputStreamReadMode
  StreamReadMode errorStreamReadMode
  StreamReadMode inputStreamReadMode
  DataReceivedEventHandler OutputDataReceived
  DataReceivedEventHandler ErrorDataReceived
  AsyncStreamReader output
  AsyncStreamReader error
  bool pendingOutputRead
  bool pendingErrorRead
  TraceSwitch processTracing
  string process_name
  ProcessModule current_main_module
Свойства:
  bool Associated
  int ExitCode
  bool HasExited
  DateTime ExitTime
  IntPtr Handle
  SafeProcessHandle SafeHandle
  int Id
  string MachineName
  IntPtr MaxWorkingSet
  IntPtr MinWorkingSet
  OperatingSystem OperatingSystem
  ProcessPriorityClass PriorityClass
  TimeSpan PrivilegedProcessorTime
  ProcessStartInfo StartInfo
  DateTime StartTime
  ISynchronizeInvoke SynchronizingObject
  TimeSpan TotalProcessorTime
  TimeSpan UserProcessorTime
  bool EnableRaisingEvents
  StreamWriter StandardInput
  StreamReader StandardOutput
  StreamReader StandardError
  int BasePriority
  int HandleCount
  ProcessModule MainModule
  IntPtr MainWindowHandle
  string MainWindowTitle
  ProcessModuleCollection Modules
  int NonpagedSystemMemorySize
  int PagedMemorySize
  int PagedSystemMemorySize
  int PeakPagedMemorySize
  int PeakVirtualMemorySize
  int PeakWorkingSet
  long NonpagedSystemMemorySize64
  long PagedMemorySize64
  long PagedSystemMemorySize64
  long PeakPagedMemorySize64
  long PeakVirtualMemorySize64
  long PeakWorkingSet64
  bool PriorityBoostEnabled
  int PrivateMemorySize
  int SessionId
  string ProcessName
  IntPtr ProcessorAffinity
  bool Responding
  ProcessThreadCollection Threads
  int VirtualMemorySize
  int WorkingSet
  long PrivateMemorySize64
  long VirtualMemorySize64
  long WorkingSet64
  bool IsWindows
Методы:
  void add_OutputDataReceived(DataReceivedEventHandler value)
  void remove_OutputDataReceived(DataReceivedEventHandler value)
  void add_ErrorDataReceived(DataReceivedEventHandler value)
  void remove_ErrorDataReceived(DataReceivedEventHandler value)
  void .ctor()
  void .ctor(string machineName, bool isRemoteMachine, int processId, ProcessInfo processInfo)
  bool get_Associated()
  int get_ExitCode()
  bool get_HasExited()
  ProcessThreadTimes GetProcessTimes()
  DateTime get_ExitTime()
  IntPtr get_Handle()
  SafeProcessHandle get_SafeHandle()
  int get_Id()
  string get_MachineName()
  IntPtr get_MaxWorkingSet()
  void set_MaxWorkingSet(IntPtr value)
  IntPtr get_MinWorkingSet()
  void set_MinWorkingSet(IntPtr value)
  OperatingSystem get_OperatingSystem()
  ProcessPriorityClass get_PriorityClass()
  void set_PriorityClass(ProcessPriorityClass value)
  TimeSpan get_PrivilegedProcessorTime()
  ProcessStartInfo get_StartInfo()
  void set_StartInfo(ProcessStartInfo value)
  DateTime get_StartTime()
  ISynchronizeInvoke get_SynchronizingObject()
  void set_SynchronizingObject(ISynchronizeInvoke value)
  TimeSpan get_TotalProcessorTime()
  TimeSpan get_UserProcessorTime()
  bool get_EnableRaisingEvents()
  void set_EnableRaisingEvents(bool value)
  StreamWriter get_StandardInput()
  StreamReader get_StandardOutput()
  StreamReader get_StandardError()
  void add_Exited(EventHandler value)
  void remove_Exited(EventHandler value)
  void ReleaseProcessHandle(SafeProcessHandle handle)
  void CompletionCallback(object context, bool wasSignaled)
  void Dispose(bool disposing)
  void Close()
  void EnsureState(State state)
  void EnsureWatchingForExit()
  void EnsureWorkingSetLimits()
  void EnterDebugMode()
  void LeaveDebugMode()
  Process GetProcessById(int processId)
  Process[] GetProcessesByName(string processName)
  Process[] GetProcesses()
  Process GetCurrentProcess()
  void OnExited()
  SafeProcessHandle GetProcessHandle(int access, bool throwIfExited)
  SafeProcessHandle GetProcessHandle(int access)
  SafeProcessHandle OpenProcessHandle()
  SafeProcessHandle OpenProcessHandle(int access)
  void Refresh()
  void SetProcessHandle(SafeProcessHandle processHandle)
  void SetProcessId(int processId)
  void SetWorkingSetLimits(object newMin, object newMax)
  bool Start()
  Process Start(string fileName, string userName, SecureString password, string domain)
  Process Start(string fileName, string arguments, string userName, SecureString password, string domain)
  Process Start(string fileName)
  Process Start(string fileName, string arguments)
  Process Start(ProcessStartInfo startInfo)
  void Kill()
  void StopWatchingForExit()
  string ToString()
  bool WaitForExit(int milliseconds)
  void WaitForExit()
  bool WaitForInputIdle(int milliseconds)
  bool WaitForInputIdle()
  void BeginOutputReadLine()
  void BeginErrorReadLine()
  void CancelOutputRead()
  void CancelErrorRead()
  void OutputReadNotifyUser(string data)
  void ErrorReadNotifyUser(string data)
  void .ctor(SafeProcessHandle handle, int id)
  int get_BasePriority()
  int get_HandleCount()
  ProcessModule get_MainModule()
  IntPtr MainWindowHandle_icall(int pid)
  IntPtr get_MainWindowHandle()
  string get_MainWindowTitle()
  void AppendArguments(StringBuilder stringBuilder, Collection`1<string> argumentList)
  ProcessModule[] GetModules_icall(IntPtr handle)
  ProcessModule[] GetModules_internal(SafeProcessHandle handle)
  ProcessModuleCollection get_Modules()
  long GetProcessData(int pid, int data_type, Int32& error)
  int get_NonpagedSystemMemorySize()
  int get_PagedMemorySize()
  int get_PagedSystemMemorySize()
  int get_PeakPagedMemorySize()
  int get_PeakVirtualMemorySize()
  int get_PeakWorkingSet()
  long get_NonpagedSystemMemorySize64()
  long get_PagedMemorySize64()
  long get_PagedSystemMemorySize64()
  long get_PeakPagedMemorySize64()
  long get_PeakVirtualMemorySize64()
  long get_PeakWorkingSet64()
  bool get_PriorityBoostEnabled()
  void set_PriorityBoostEnabled(bool value)
  int get_PrivateMemorySize()
  int get_SessionId()
  string ProcessName_icall(IntPtr handle)
  string ProcessName_internal(SafeProcessHandle handle)
  string get_ProcessName()
  IntPtr get_ProcessorAffinity()
  void set_ProcessorAffinity(IntPtr value)
  bool get_Responding()
  ProcessThreadCollection get_Threads()
  int get_VirtualMemorySize()
  int get_WorkingSet()
  long get_PrivateMemorySize64()
  long get_VirtualMemorySize64()
  long get_WorkingSet64()
  bool CloseMainWindow()
  IntPtr GetProcess_internal(int pid)
  Process GetProcessById(int processId, string machineName)
  Process[] GetProcessesByName(string processName, string machineName)
  Int32[] GetProcesses_internal()
  Process[] GetProcesses(string machineName)
  bool IsLocalMachine(string machineName)
  bool ShellExecuteEx_internal(ProcessStartInfo startInfo, ProcInfo& procInfo)
  bool CreateProcess_internal(ProcessStartInfo startInfo, IntPtr stdin, IntPtr stdout, IntPtr stderr, ProcInfo& procInfo)
  bool StartWithShellExecuteEx(ProcessStartInfo startInfo)
  void CreatePipe(IntPtr& read, IntPtr& write, bool writeDirection)
  bool get_IsWindows()
  bool StartWithCreateProcess(ProcessStartInfo startInfo)
  void FillUserInfo(ProcessStartInfo startInfo, ProcInfo& procInfo)
  void RaiseOnExited()
--------------------------------------------------
Класс: System.Diagnostics.ProcessInfo
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.EnvironmentBlock
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte[] ToByteArray(StringDictionary sd, bool unicode)
--------------------------------------------------
Класс: System.Diagnostics.OrdinalCaseInsensitiveComparer
Наследуется от: object
Поля:
  OrdinalCaseInsensitiveComparer Default
Свойства:
Методы:
  int Compare(object a, object b)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.ProcessThreadTimes
Наследуется от: object
Поля:
  long create
  long exit
  long kernel
  long user
Свойства:
  DateTime StartTime
  DateTime ExitTime
  TimeSpan PrivilegedProcessorTime
  TimeSpan UserProcessorTime
  TimeSpan TotalProcessorTime
Методы:
  DateTime get_StartTime()
  DateTime get_ExitTime()
  TimeSpan get_PrivilegedProcessorTime()
  TimeSpan get_UserProcessorTime()
  TimeSpan get_TotalProcessorTime()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.ProcessModuleCollection
Наследуется от: ReadOnlyCollectionBase
Поля:
Свойства:
  ProcessModule Item
Методы:
  void .ctor()
  void .ctor(ProcessModule[] processModules)
  ProcessModule get_Item(int index)
  int IndexOf(ProcessModule module)
  bool Contains(ProcessModule module)
  void CopyTo(ProcessModule[] array, int index)
--------------------------------------------------
Класс: System.Diagnostics.ProcessStartInfo
Наследуется от: object
Поля:
  string fileName
  string arguments
  string directory
  string verb
  ProcessWindowStyle windowStyle
  bool errorDialog
  IntPtr errorDialogParentHandle
  bool useShellExecute
  string userName
  string domain
  SecureString password
  string passwordInClearText
  bool loadUserProfile
  bool redirectStandardInput
  bool redirectStandardOutput
  bool redirectStandardError
  Encoding standardOutputEncoding
  Encoding standardErrorEncoding
  bool createNoWindow
  WeakReference weakParentProcess
  StringDictionary environmentVariables
  String[] empty
  Collection`1<string> _argumentList
  IDictionary`2<string, string> environment
  Encoding <StandardInputEncoding>k__BackingField
Свойства:
  Collection`1<string> ArgumentList
  string Verb
  string Arguments
  bool CreateNoWindow
  StringDictionary EnvironmentVariables
  IDictionary`2<string, string> Environment
  bool RedirectStandardInput
  bool RedirectStandardOutput
  bool RedirectStandardError
  Encoding StandardErrorEncoding
  Encoding StandardOutputEncoding
  bool UseShellExecute
  string UserName
  SecureString Password
  string PasswordInClearText
  string Domain
  bool LoadUserProfile
  string FileName
  string WorkingDirectory
  bool ErrorDialog
  IntPtr ErrorDialogParentHandle
  ProcessWindowStyle WindowStyle
  bool HaveEnvVars
  Encoding StandardInputEncoding
  String[] Verbs
Методы:
  void .ctor()
  void .ctor(Process parent)
  void .ctor(string fileName)
  void .ctor(string fileName, string arguments)
  Collection`1<string> get_ArgumentList()
  string get_Verb()
  void set_Verb(string value)
  string get_Arguments()
  void set_Arguments(string value)
  bool get_CreateNoWindow()
  void set_CreateNoWindow(bool value)
  StringDictionary get_EnvironmentVariables()
  IDictionary`2<string, string> get_Environment()
  bool get_RedirectStandardInput()
  void set_RedirectStandardInput(bool value)
  bool get_RedirectStandardOutput()
  void set_RedirectStandardOutput(bool value)
  bool get_RedirectStandardError()
  void set_RedirectStandardError(bool value)
  Encoding get_StandardErrorEncoding()
  void set_StandardErrorEncoding(Encoding value)
  Encoding get_StandardOutputEncoding()
  void set_StandardOutputEncoding(Encoding value)
  bool get_UseShellExecute()
  void set_UseShellExecute(bool value)
  string get_UserName()
  void set_UserName(string value)
  SecureString get_Password()
  void set_Password(SecureString value)
  string get_PasswordInClearText()
  void set_PasswordInClearText(string value)
  string get_Domain()
  void set_Domain(string value)
  bool get_LoadUserProfile()
  void set_LoadUserProfile(bool value)
  string get_FileName()
  void set_FileName(string value)
  string get_WorkingDirectory()
  void set_WorkingDirectory(string value)
  bool get_ErrorDialog()
  void set_ErrorDialog(bool value)
  IntPtr get_ErrorDialogParentHandle()
  void set_ErrorDialogParentHandle(IntPtr value)
  ProcessWindowStyle get_WindowStyle()
  void set_WindowStyle(ProcessWindowStyle value)
  bool get_HaveEnvVars()
  Encoding get_StandardInputEncoding()
  void set_StandardInputEncoding(Encoding value)
  String[] get_Verbs()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.ProcessThreadCollection
Наследуется от: ReadOnlyCollectionBase
Поля:
Свойства:
  ProcessThread Item
Методы:
  void .ctor()
  void .ctor(ProcessThread[] processThreads)
  ProcessThread get_Item(int index)
  int Add(ProcessThread thread)
  void Insert(int index, ProcessThread thread)
  int IndexOf(ProcessThread thread)
  bool Contains(ProcessThread thread)
  void Remove(ProcessThread thread)
  void CopyTo(ProcessThread[] array, int index)
--------------------------------------------------
Класс: System.Diagnostics.ProcessWaitHandle
Наследуется от: WaitHandle
Поля:
Свойства:
Методы:
  void .ctor(SafeProcessHandle processHandle)
--------------------------------------------------
Класс: System.Diagnostics.AssertWrapper
Наследуется от: object
Поля:
Свойства:
Методы:
  void ShowAssert(string stackTrace, StackFrame frame, string message, string detailMessage)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.ConfigurationManagerInternalFactory
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.AlphabeticalEnumConverter
Наследуется от: EnumConverter
Поля:
Свойства:
Методы:
  void .ctor(Type type)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
--------------------------------------------------
Класс: System.Diagnostics.CounterCreationData
Наследуется от: object
Поля:
  string help
  string name
  PerformanceCounterType type
Свойства:
  string CounterHelp
  string CounterName
  PerformanceCounterType CounterType
Методы:
  void .ctor()
  void .ctor(string counterName, string counterHelp, PerformanceCounterType counterType)
  string get_CounterHelp()
  void set_CounterHelp(string value)
  string get_CounterName()
  void set_CounterName(string value)
  PerformanceCounterType get_CounterType()
  void set_CounterType(PerformanceCounterType value)
--------------------------------------------------
Класс: System.Diagnostics.CounterCreationDataCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CounterCreationData Item
Методы:
  void .ctor()
  void .ctor(CounterCreationData[] value)
  void .ctor(CounterCreationDataCollection value)
  CounterCreationData get_Item(int index)
  void set_Item(int index, CounterCreationData value)
  int Add(CounterCreationData value)
  void AddRange(CounterCreationData[] value)
  void AddRange(CounterCreationDataCollection value)
  bool Contains(CounterCreationData value)
  void CopyTo(CounterCreationData[] array, int index)
  int IndexOf(CounterCreationData value)
  void Insert(int index, CounterCreationData value)
  void OnValidate(object value)
  void Remove(CounterCreationData value)
--------------------------------------------------
Класс: System.Diagnostics.CounterSample
Наследуется от: ValueType
Поля:
  long rawValue
  long baseValue
  long counterFrequency
  long systemFrequency
  long timeStamp
  long timeStamp100nSec
  long counterTimeStamp
  PerformanceCounterType counterType
  CounterSample Empty
Свойства:
  long BaseValue
  long CounterFrequency
  long CounterTimeStamp
  PerformanceCounterType CounterType
  long RawValue
  long SystemFrequency
  long TimeStamp
  long TimeStamp100nSec
Методы:
  void .ctor(long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, PerformanceCounterType counterType)
  void .ctor(long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, PerformanceCounterType counterType, long counterTimeStamp)
  long get_BaseValue()
  long get_CounterFrequency()
  long get_CounterTimeStamp()
  PerformanceCounterType get_CounterType()
  long get_RawValue()
  long get_SystemFrequency()
  long get_TimeStamp()
  long get_TimeStamp100nSec()
  float Calculate(CounterSample counterSample)
  float Calculate(CounterSample counterSample, CounterSample nextCounterSample)
  bool Equals(object o)
  bool Equals(CounterSample sample)
  bool op_Equality(CounterSample a, CounterSample b)
  bool op_Inequality(CounterSample a, CounterSample b)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.CounterSampleCalculator
Наследуется от: object
Поля:
Свойства:
Методы:
  float ComputeCounterValue(CounterSample newSample)
  float ComputeCounterValue(CounterSample oldSample, CounterSample newSample)
--------------------------------------------------
Класс: System.Diagnostics.DataReceivedEventArgs
Наследуется от: EventArgs
Поля:
  string data
Свойства:
  string Data
Методы:
  void .ctor(string data)
  string get_Data()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.DataReceivedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DataReceivedEventArgs e)
  IAsyncResult BeginInvoke(object sender, DataReceivedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Diagnostics.DefaultTraceListener
Наследуется от: TraceListener
Поля:
  bool OnWin32
  string ConsoleOutTrace
  string ConsoleErrorTrace
  string MonoTracePrefix
  string MonoTraceFile
  string logFileName
  bool assertUiEnabled
Свойства:
  bool AssertUiEnabled
  string LogFileName
Методы:
  void .cctor()
  string GetPrefix(string var, string target)
  void .ctor()
  bool get_AssertUiEnabled()
  void set_AssertUiEnabled(bool value)
  string get_LogFileName()
  void set_LogFileName(string value)
  void Fail(string message)
  void Fail(string message, string detailMessage)
  DialogResult ProcessUI(string message, string detailMessage)
  void WriteWindowsDebugString(Char* message)
  void WriteDebugString(string message)
  void WriteMonoTrace(string message)
  void WritePrefix()
  void WriteImpl(string message)
  void WriteLogFile(string message, string logFile)
  void Write(string message)
  void WriteLine(string message)
--------------------------------------------------
Класс: System.Diagnostics.DiagnosticsConfigurationHandler
Наследуется от: object
Поля:
  TraceImplSettings configValues
  IDictionary elementHandlers
Свойства:
Методы:
  void .ctor()
  object Create(object parent, object configContext, XmlNode section)
  void AddAssertNode(IDictionary d, XmlNode node)
  void AddPerformanceCountersNode(IDictionary d, XmlNode node)
  void AddSwitchesNode(IDictionary d, XmlNode node)
  object GetSwitchValue(string name, string value)
  void AddTraceNode(IDictionary d, XmlNode node)
  void AddTraceAttributes(IDictionary d, XmlNode node)
  TraceListenerCollection GetSharedListeners(IDictionary d)
  void AddSourcesNode(IDictionary d, XmlNode node)
  void AddTraceSource(IDictionary d, Hashtable sources, XmlNode node)
  void AddTraceListeners(IDictionary d, XmlNode listenersNode, TraceListenerCollection listeners)
  void AddTraceListener(IDictionary d, XmlNode child, XmlAttributeCollection attributes, TraceListenerCollection listeners)
  void RemoveTraceListener(string name)
  string GetAttribute(XmlAttributeCollection attrs, string attr, bool required, XmlNode node)
  void ValidateAttribute(string attribute, string value, XmlNode node)
  void ValidateInvalidAttributes(XmlAttributeCollection c, XmlNode node)
  void ThrowMissingAttribute(string attribute, XmlNode node)
  void ThrowUnrecognizedNode(XmlNode node)
  void ThrowUnrecognizedElement(XmlNode node)
  void ThrowUnrecognizedAttribute(string attribute, XmlNode node)
--------------------------------------------------
Класс: System.Diagnostics.EntryWrittenEventArgs
Наследуется от: EventArgs
Поля:
  EventLogEntry entry
Свойства:
  EventLogEntry Entry
Методы:
  void .ctor()
  void .ctor(EventLogEntry entry)
  EventLogEntry get_Entry()
--------------------------------------------------
Класс: System.Diagnostics.EntryWrittenEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, EntryWrittenEventArgs e)
  IAsyncResult BeginInvoke(object sender, EntryWrittenEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Diagnostics.EventInstance
Наследуется от: object
Поля:
  int _categoryId
  EventLogEntryType _entryType
  long _instanceId
Свойства:
  int CategoryId
  EventLogEntryType EntryType
  long InstanceId
Методы:
  void .ctor(long instanceId, int categoryId)
  void .ctor(long instanceId, int categoryId, EventLogEntryType entryType)
  int get_CategoryId()
  void set_CategoryId(int value)
  EventLogEntryType get_EntryType()
  void set_EntryType(EventLogEntryType value)
  long get_InstanceId()
  void set_InstanceId(long value)
--------------------------------------------------
Класс: System.Diagnostics.EventLog
Наследуется от: Component
Поля:
  string source
  string logName
  string machineName
  bool doRaiseEvents
  ISynchronizeInvoke synchronizingObject
  string LOCAL_FILE_IMPL
  string WIN32_IMPL
  string NULL_IMPL
  string EVENTLOG_TYPE_VAR
  EventLogImpl Impl
  EntryWrittenEventHandler EntryWritten
Свойства:
  bool EnableRaisingEvents
  EventLogEntryCollection Entries
  string Log
  string LogDisplayName
  string MachineName
  string Source
  ISynchronizeInvoke SynchronizingObject
  OverflowAction OverflowAction
  int MinimumRetentionDays
  long MaximumKilobytes
  bool Win32EventLogEnabled
  string EventLogImplType
Методы:
  void .ctor()
  void .ctor(string logName)
  void .ctor(string logName, string machineName)
  void .ctor(string logName, string machineName, string source)
  bool get_EnableRaisingEvents()
  void set_EnableRaisingEvents(bool value)
  EventLogEntryCollection get_Entries()
  string get_Log()
  void set_Log(string value)
  string get_LogDisplayName()
  string get_MachineName()
  void set_MachineName(string value)
  string get_Source()
  void set_Source(string value)
  ISynchronizeInvoke get_SynchronizingObject()
  void set_SynchronizingObject(ISynchronizeInvoke value)
  OverflowAction get_OverflowAction()
  int get_MinimumRetentionDays()
  long get_MaximumKilobytes()
  void set_MaximumKilobytes(long value)
  void ModifyOverflowPolicy(OverflowAction action, int retentionDays)
  void RegisterDisplayName(string resourceFile, long resourceId)
  void BeginInit()
  void Clear()
  void Close()
  void Reset()
  void CreateEventSource(string source, string logName)
  void CreateEventSource(string source, string logName, string machineName)
  void CreateEventSource(EventSourceCreationData sourceData)
  void Delete(string logName)
  void Delete(string logName, string machineName)
  void DeleteEventSource(string source)
  void DeleteEventSource(string source, string machineName)
  void Dispose(bool disposing)
  void EndInit()
  bool Exists(string logName)
  bool Exists(string logName, string machineName)
  EventLog[] GetEventLogs()
  EventLog[] GetEventLogs(string machineName)
  string LogNameFromSourceName(string source, string machineName)
  bool SourceExists(string source)
  bool SourceExists(string source, string machineName)
  void WriteEntry(string message)
  void WriteEntry(string message, EventLogEntryType type)
  void WriteEntry(string message, EventLogEntryType type, int eventID)
  void WriteEntry(string message, EventLogEntryType type, int eventID, short category)
  void WriteEntry(string message, EventLogEntryType type, int eventID, short category, Byte[] rawData)
  void WriteEntry(string source, string message)
  void WriteEntry(string source, string message, EventLogEntryType type)
  void WriteEntry(string source, string message, EventLogEntryType type, int eventID)
  void WriteEntry(string source, string message, EventLogEntryType type, int eventID, short category)
  void WriteEntry(string source, string message, EventLogEntryType type, int eventID, short category, Byte[] rawData)
  void WriteEvent(EventInstance instance, Object[] values)
  void WriteEvent(EventInstance instance, Byte[] data, Object[] values)
  void WriteEvent(string source, EventInstance instance, Object[] values)
  void WriteEvent(string source, EventInstance instance, Byte[] data, Object[] values)
  void OnEntryWritten(EventLogEntry newEntry)
  void add_EntryWritten(EntryWrittenEventHandler value)
  void remove_EntryWritten(EntryWrittenEventHandler value)
  string GetLogName()
  EventLogImpl CreateEventLogImpl(string logName, string machineName, string source)
  EventLogImpl CreateEventLogImpl(EventLog eventLog)
  bool get_Win32EventLogEnabled()
  string get_EventLogImplType()
  void WriteEntry(String[] replacementStrings, EventLogEntryType type, long instanceID, short category, Byte[] rawData)
  void ValidateEventID(long instanceID)
  int GetEventID(long instanceID)
--------------------------------------------------
Класс: System.Diagnostics.EventLogEntry
Наследуется от: Component
Поля:
  string category
  short categoryNumber
  Byte[] data
  EventLogEntryType entryType
  int eventID
  int index
  string machineName
  string message
  String[] replacementStrings
  string source
  DateTime timeGenerated
  DateTime timeWritten
  string userName
  long instanceId
Свойства:
  string Category
  short CategoryNumber
  Byte[] Data
  EventLogEntryType EntryType
  int EventID
  int Index
  long InstanceId
  string MachineName
  string Message
  String[] ReplacementStrings
  string Source
  DateTime TimeGenerated
  DateTime TimeWritten
  string UserName
Методы:
  void .ctor(string category, short categoryNumber, int index, int eventID, string source, string message, string userName, string machineName, EventLogEntryType entryType, DateTime timeGenerated, DateTime timeWritten, Byte[] data, String[] replacementStrings, long instanceId)
  void .ctor(SerializationInfo info, StreamingContext context)
  string get_Category()
  short get_CategoryNumber()
  Byte[] get_Data()
  EventLogEntryType get_EntryType()
  int get_EventID()
  int get_Index()
  long get_InstanceId()
  string get_MachineName()
  string get_Message()
  String[] get_ReplacementStrings()
  string get_Source()
  DateTime get_TimeGenerated()
  DateTime get_TimeWritten()
  string get_UserName()
  bool Equals(EventLogEntry otherEntry)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.EventLogEntryCollection
Наследуется от: object
Поля:
  EventLogImpl _impl
Свойства:
  int Count
  EventLogEntry Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor(EventLogImpl impl)
  int get_Count()
  EventLogEntry get_Item(int index)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void CopyTo(EventLogEntry[] entries, int index)
  IEnumerator GetEnumerator()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.EventLogEntryType
Наследуется от: Enum
Поля:
  int value__
  EventLogEntryType Error
  EventLogEntryType Warning
  EventLogEntryType Information
  EventLogEntryType SuccessAudit
  EventLogEntryType FailureAudit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.EventLogImpl
Наследуется от: object
Поля:
  EventLog _coreEventLog
Свойства:
  EventLog CoreEventLog
  int EntryCount
  EventLogEntry Item
  string LogDisplayName
  OverflowAction OverflowAction
  int MinimumRetentionDays
  long MaximumKilobytes
Методы:
  void .ctor(EventLog coreEventLog)
  EventLog get_CoreEventLog()
  int get_EntryCount()
  EventLogEntry get_Item(int index)
  string get_LogDisplayName()
  EventLogEntry[] GetEntries()
  void DisableNotification()
  void EnableNotification()
  void BeginInit()
  void Clear()
  void Close()
  void CreateEventSource(EventSourceCreationData sourceData)
  void Delete(string logName, string machineName)
  void DeleteEventSource(string source, string machineName)
  void Dispose(bool disposing)
  void EndInit()
  bool Exists(string logName, string machineName)
  int GetEntryCount()
  EventLogEntry GetEntry(int index)
  EventLog[] GetEventLogs(string machineName)
  string GetLogDisplayName()
  string LogNameFromSourceName(string source, string machineName)
  bool SourceExists(string source, string machineName)
  void WriteEntry(String[] replacementStrings, EventLogEntryType type, UInt32 instanceID, short category, Byte[] rawData)
  string FormatMessage(string source, UInt32 messageID, String[] replacementStrings)
  String[] GetLogNames(string machineName)
  void ValidateCustomerLogName(string logName, string machineName)
  OverflowAction get_OverflowAction()
  int get_MinimumRetentionDays()
  long get_MaximumKilobytes()
  void set_MaximumKilobytes(long value)
  void ModifyOverflowPolicy(OverflowAction action, int retentionDays)
  void RegisterDisplayName(string resourceFile, long resourceId)
--------------------------------------------------
Класс: System.Diagnostics.EventLogInstaller
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.EventLogPermission
Наследуется от: ResourcePermissionBase
Поля:
  EventLogPermissionEntryCollection innerCollection
Свойства:
  EventLogPermissionEntryCollection PermissionEntries
Методы:
  void .ctor()
  void .ctor(EventLogPermissionEntry[] permissionAccessEntries)
  void .ctor(PermissionState state)
  void .ctor(EventLogPermissionAccess permissionAccess, string machineName)
  EventLogPermissionEntryCollection get_PermissionEntries()
  void SetUp()
  ResourcePermissionBaseEntry[] GetEntries()
  void ClearEntries()
  void Add(object obj)
  void Remove(object obj)
--------------------------------------------------
Класс: System.Diagnostics.EventLogPermissionAccess
Наследуется от: Enum
Поля:
  int value__
  EventLogPermissionAccess None
  EventLogPermissionAccess Browse
  EventLogPermissionAccess Instrument
  EventLogPermissionAccess Audit
  EventLogPermissionAccess Write
  EventLogPermissionAccess Administer
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.EventLogPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string machineName
  EventLogPermissionAccess permissionAccess
Свойства:
  string MachineName
  EventLogPermissionAccess PermissionAccess
Методы:
  void .ctor(SecurityAction action)
  string get_MachineName()
  void set_MachineName(string value)
  EventLogPermissionAccess get_PermissionAccess()
  void set_PermissionAccess(EventLogPermissionAccess value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Diagnostics.EventLogPermissionEntry
Наследуется от: object
Поля:
  EventLogPermissionAccess permissionAccess
  string machineName
Свойства:
  string MachineName
  EventLogPermissionAccess PermissionAccess
Методы:
  void .ctor(EventLogPermissionAccess permissionAccess, string machineName)
  string get_MachineName()
  EventLogPermissionAccess get_PermissionAccess()
  ResourcePermissionBaseEntry CreateResourcePermissionBaseEntry()
--------------------------------------------------
Класс: System.Diagnostics.EventLogPermissionEntryCollection
Наследуется от: CollectionBase
Поля:
  EventLogPermission owner
Свойства:
  EventLogPermissionEntry Item
Методы:
  void .ctor(EventLogPermission owner)
  EventLogPermissionEntry get_Item(int index)
  void set_Item(int index, EventLogPermissionEntry value)
  int Add(EventLogPermissionEntry value)
  void AddRange(EventLogPermissionEntry[] value)
  void AddRange(EventLogPermissionEntryCollection value)
  bool Contains(EventLogPermissionEntry value)
  void CopyTo(EventLogPermissionEntry[] array, int index)
  int IndexOf(EventLogPermissionEntry value)
  void Insert(int index, EventLogPermissionEntry value)
  void OnClear()
  void OnInsert(int index, object value)
  void OnRemove(int index, object value)
  void OnSet(int index, object oldValue, object newValue)
  void Remove(EventLogPermissionEntry value)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.EventLogTraceListener
Наследуется от: TraceListener
Поля:
  EventLog event_log
  string name
Свойства:
  EventLog EventLog
  string Name
Методы:
  void .ctor()
  void .ctor(EventLog eventLog)
  void .ctor(string source)
  EventLog get_EventLog()
  void set_EventLog(EventLog value)
  string get_Name()
  void set_Name(string value)
  void Close()
  void Dispose(bool disposing)
  void Write(string message)
  void WriteLine(string message)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType severity, int id, object data)
  void TraceData(TraceEventCache eventCache, string source, TraceEventType severity, int id, Object[] data)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType severity, int id, string message)
  void TraceEvent(TraceEventCache eventCache, string source, TraceEventType severity, int id, string format, Object[] args)
--------------------------------------------------
Класс: System.Diagnostics.EventSourceCreationData
Наследуется от: object
Поля:
  string _source
  string _logName
  string _machineName
  string _messageResourceFile
  string _parameterResourceFile
  string _categoryResourceFile
  int _categoryCount
Свойства:
  int CategoryCount
  string CategoryResourceFile
  string LogName
  string MachineName
  string MessageResourceFile
  string ParameterResourceFile
  string Source
Методы:
  void .ctor(string source, string logName)
  void .ctor(string source, string logName, string machineName)
  int get_CategoryCount()
  void set_CategoryCount(int value)
  string get_CategoryResourceFile()
  void set_CategoryResourceFile(string value)
  string get_LogName()
  void set_LogName(string value)
  string get_MachineName()
  void set_MachineName(string value)
  string get_MessageResourceFile()
  void set_MessageResourceFile(string value)
  string get_ParameterResourceFile()
  void set_ParameterResourceFile(string value)
  string get_Source()
  void set_Source(string value)
--------------------------------------------------
Класс: System.Diagnostics.FileVersionInfo
Наследуется от: object
Поля:
  string comments
  string companyname
  string filedescription
  string filename
  string fileversion
  string internalname
  string language
  string legalcopyright
  string legaltrademarks
  string originalfilename
  string privatebuild
  string productname
  string productversion
  string specialbuild
  bool isdebug
  bool ispatched
  bool isprerelease
  bool isprivatebuild
  bool isspecialbuild
  int filemajorpart
  int fileminorpart
  int filebuildpart
  int fileprivatepart
  int productmajorpart
  int productminorpart
  int productbuildpart
  int productprivatepart
Свойства:
  string Comments
  string CompanyName
  int FileBuildPart
  string FileDescription
  int FileMajorPart
  int FileMinorPart
  string FileName
  int FilePrivatePart
  string FileVersion
  string InternalName
  bool IsDebug
  bool IsPatched
  bool IsPreRelease
  bool IsPrivateBuild
  bool IsSpecialBuild
  string Language
  string LegalCopyright
  string LegalTrademarks
  string OriginalFilename
  string PrivateBuild
  int ProductBuildPart
  int ProductMajorPart
  int ProductMinorPart
  string ProductName
  int ProductPrivatePart
  string ProductVersion
  string SpecialBuild
Методы:
  void .ctor()
  string get_Comments()
  string get_CompanyName()
  int get_FileBuildPart()
  string get_FileDescription()
  int get_FileMajorPart()
  int get_FileMinorPart()
  string get_FileName()
  int get_FilePrivatePart()
  string get_FileVersion()
  string get_InternalName()
  bool get_IsDebug()
  bool get_IsPatched()
  bool get_IsPreRelease()
  bool get_IsPrivateBuild()
  bool get_IsSpecialBuild()
  string get_Language()
  string get_LegalCopyright()
  string get_LegalTrademarks()
  string get_OriginalFilename()
  string get_PrivateBuild()
  int get_ProductBuildPart()
  int get_ProductMajorPart()
  int get_ProductMinorPart()
  string get_ProductName()
  int get_ProductPrivatePart()
  string get_ProductVersion()
  string get_SpecialBuild()
  void GetVersionInfo_icall(Char* fileName, int fileName_length)
  void GetVersionInfo_internal(string fileName)
  FileVersionInfo GetVersionInfo(string fileName)
  void AppendFormat(StringBuilder sb, string format, Object[] args)
  string ToString()
--------------------------------------------------
Класс: System.Diagnostics.ICollectData
Поля:
Свойства:
Методы:
  void CloseData()
  void CollectData(int id, IntPtr valueName, IntPtr data, int totalBytes, IntPtr& res)
--------------------------------------------------
Класс: System.Diagnostics.InstanceData
Наследуется от: object
Поля:
  string instanceName
  CounterSample sample
Свойства:
  string InstanceName
  long RawValue
  CounterSample Sample
Методы:
  void .ctor(string instanceName, CounterSample sample)
  string get_InstanceName()
  long get_RawValue()
  CounterSample get_Sample()
--------------------------------------------------
Класс: System.Diagnostics.InstanceDataCollection
Наследуется от: DictionaryBase
Поля:
  string counterName
Свойства:
  string CounterName
  InstanceData Item
  ICollection Keys
  ICollection Values
Методы:
  void CheckNull(object value, string name)
  void .ctor(string counterName)
  string get_CounterName()
  InstanceData get_Item(string instanceName)
  ICollection get_Keys()
  ICollection get_Values()
  bool Contains(string instanceName)
  void CopyTo(InstanceData[] instances, int index)
--------------------------------------------------
Класс: System.Diagnostics.InstanceDataCollectionCollection
Наследуется от: DictionaryBase
Поля:
Свойства:
  InstanceDataCollection Item
  ICollection Keys
  ICollection Values
Методы:
  void CheckNull(object value, string name)
  void .ctor()
  InstanceDataCollection get_Item(string counterName)
  ICollection get_Keys()
  ICollection get_Values()
  bool Contains(string counterName)
  void CopyTo(InstanceDataCollection[] counters, int index)
--------------------------------------------------
Класс: System.Diagnostics.LocalFileEventLog
Наследуется от: EventLogImpl
Поля:
  string DateFormat
  object lockObject
  FileSystemWatcher file_watcher
  int last_notification_index
  bool _notifying
Свойства:
  bool RunningOnUnix
  string EventLogStore
  OverflowAction OverflowAction
  int MinimumRetentionDays
  long MaximumKilobytes
Методы:
  void .ctor(EventLog coreEventLog)
  void BeginInit()
  void Clear()
  void Close()
  void CreateEventSource(EventSourceCreationData sourceData)
  void Delete(string logName, string machineName)
  void DeleteEventSource(string source, string machineName)
  void Dispose(bool disposing)
  void DisableNotification()
  void EnableNotification()
  void EndInit()
  bool Exists(string logName, string machineName)
  string FormatMessage(string source, UInt32 eventID, String[] replacementStrings)
  int GetEntryCount()
  EventLogEntry GetEntry(int index)
  string GetLogDisplayName()
  String[] GetLogNames(string machineName)
  string LogNameFromSourceName(string source, string machineName)
  bool SourceExists(string source, string machineName)
  void WriteEntry(String[] replacementStrings, EventLogEntryType type, UInt32 instanceID, short category, Byte[] rawData)
  string FindSourceDirectory(string source)
  bool get_RunningOnUnix()
  string FindLogStore(string logName)
  string get_EventLogStore()
  int GetLatestIndex()
  void ModifyAccessPermissions(string path, string permissions)
  OverflowAction get_OverflowAction()
  int get_MinimumRetentionDays()
  long get_MaximumKilobytes()
  void set_MaximumKilobytes(long value)
  void ModifyOverflowPolicy(OverflowAction action, int retentionDays)
  void RegisterDisplayName(string resourceFile, long resourceId)
  void .cctor()
  void <EnableNotification>b__14_0(object o, FileSystemEventArgs e)
--------------------------------------------------
Класс: System.Diagnostics.MonitoringDescriptionAttribute
Наследуется от: DescriptionAttribute
Поля:
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.Diagnostics.NullEventLog
Наследуется от: EventLogImpl
Поля:
Свойства:
  OverflowAction OverflowAction
  int MinimumRetentionDays
  long MaximumKilobytes
Методы:
  void .ctor(EventLog coreEventLog)
  void BeginInit()
  void Clear()
  void Close()
  void CreateEventSource(EventSourceCreationData sourceData)
  void Delete(string logName, string machineName)
  void DeleteEventSource(string source, string machineName)
  void Dispose(bool disposing)
  void DisableNotification()
  void EnableNotification()
  void EndInit()
  bool Exists(string logName, string machineName)
  string FormatMessage(string source, UInt32 messageID, String[] replacementStrings)
  int GetEntryCount()
  EventLogEntry GetEntry(int index)
  string GetLogDisplayName()
  String[] GetLogNames(string machineName)
  string LogNameFromSourceName(string source, string machineName)
  bool SourceExists(string source, string machineName)
  void WriteEntry(String[] replacementStrings, EventLogEntryType type, UInt32 instanceID, short category, Byte[] rawData)
  OverflowAction get_OverflowAction()
  int get_MinimumRetentionDays()
  long get_MaximumKilobytes()
  void set_MaximumKilobytes(long value)
  void ModifyOverflowPolicy(OverflowAction action, int retentionDays)
  void RegisterDisplayName(string resourceFile, long resourceId)
--------------------------------------------------
Класс: System.Diagnostics.OverflowAction
Наследуется от: Enum
Поля:
  int value__
  OverflowAction DoNotOverwrite
  OverflowAction OverwriteAsNeeded
  OverflowAction OverwriteOlder
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounter
Наследуется от: Component
Поля:
  string categoryName
  string counterName
  string instanceName
  string machineName
  IntPtr impl
  PerformanceCounterType type
  CounterSample old_sample
  bool readOnly
  bool valid_old
  bool changed
  bool is_custom
  PerformanceCounterInstanceLifetime lifetime
  int DefaultFileMappingSize
Свойства:
  string CategoryName
  string CounterHelp
  string CounterName
  PerformanceCounterType CounterType
  PerformanceCounterInstanceLifetime InstanceLifetime
  string InstanceName
  string MachineName
  long RawValue
  bool ReadOnly
Методы:
  void .ctor()
  void .ctor(string categoryName, string counterName)
  void .ctor(string categoryName, string counterName, bool readOnly)
  void .ctor(string categoryName, string counterName, string instanceName)
  void .ctor(string categoryName, string counterName, string instanceName, bool readOnly)
  void .ctor(string categoryName, string counterName, string instanceName, string machineName)
  IntPtr GetImpl_icall(Char* category, int category_length, Char* counter, int counter_length, Char* instance, int instance_length, PerformanceCounterType& ctype, Boolean& custom)
  IntPtr GetImpl(string category, string counter, string instance, PerformanceCounterType& ctype, Boolean& custom)
  bool GetSample(IntPtr impl, bool only_value, CounterSample& sample)
  long UpdateValue(IntPtr impl, bool do_incr, long value)
  void FreeData(IntPtr impl)
  bool IsValidMachine(string machine)
  void UpdateInfo()
  string get_CategoryName()
  void set_CategoryName(string value)
  string get_CounterHelp()
  string get_CounterName()
  void set_CounterName(string value)
  PerformanceCounterType get_CounterType()
  PerformanceCounterInstanceLifetime get_InstanceLifetime()
  void set_InstanceLifetime(PerformanceCounterInstanceLifetime value)
  string get_InstanceName()
  void set_InstanceName(string value)
  string get_MachineName()
  void set_MachineName(string value)
  long get_RawValue()
  void set_RawValue(long value)
  bool get_ReadOnly()
  void set_ReadOnly(bool value)
  void BeginInit()
  void EndInit()
  void Close()
  void CloseSharedResources()
  long Decrement()
  void Dispose(bool disposing)
  long Increment()
  long IncrementBy(long value)
  CounterSample NextSample()
  float NextValue()
  void RemoveInstance()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterCategory
Наследуется от: object
Поля:
  string categoryName
  string machineName
  PerformanceCounterCategoryType type
Свойства:
  string CategoryHelp
  string CategoryName
  string MachineName
  PerformanceCounterCategoryType CategoryType
Методы:
  bool CategoryDelete_icall(Char* name, int name_length)
  bool CategoryDelete(string name)
  string CategoryHelp_icall(Char* category, int category_length)
  string CategoryHelpInternal(string category)
  bool CounterCategoryExists_icall(Char* counter, int counter_length, Char* category, int category_length)
  bool CounterCategoryExists(string counter, string category)
  bool Create_icall(Char* categoryName, int categoryName_length, Char* categoryHelp, int categoryHelp_length, PerformanceCounterCategoryType categoryType, CounterCreationData[] items)
  bool Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationData[] items)
  bool InstanceExistsInternal_icall(Char* instance, int instance_length, Char* category, int category_length)
  bool InstanceExistsInternal(string instance, string category)
  String[] GetCategoryNames()
  String[] GetCounterNames_icall(Char* category, int category_length)
  String[] GetCounterNames(string category)
  String[] GetInstanceNames_icall(Char* category, int category_length)
  String[] GetInstanceNames(string category)
  void CheckCategory(string categoryName)
  void .ctor()
  void .ctor(string categoryName)
  void .ctor(string categoryName, string machineName)
  bool IsValidMachine(string machine)
  string get_CategoryHelp()
  string get_CategoryName()
  void set_CategoryName(string value)
  string get_MachineName()
  void set_MachineName(string value)
  PerformanceCounterCategoryType get_CategoryType()
  bool CounterExists(string counterName)
  bool CounterExists(string counterName, string categoryName)
  bool CounterExists(string counterName, string categoryName, string machineName)
  PerformanceCounterCategory Create(string categoryName, string categoryHelp, CounterCreationDataCollection counterData)
  PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp)
  PerformanceCounterCategory Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData)
  PerformanceCounterCategory Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp)
  void Delete(string categoryName)
  bool Exists(string categoryName)
  bool Exists(string categoryName, string machineName)
  PerformanceCounterCategory[] GetCategories()
  PerformanceCounterCategory[] GetCategories(string machineName)
  PerformanceCounter[] GetCounters()
  PerformanceCounter[] GetCounters(string instanceName)
  String[] GetInstanceNames()
  bool InstanceExists(string instanceName)
  bool InstanceExists(string instanceName, string categoryName)
  bool InstanceExists(string instanceName, string categoryName, string machineName)
  InstanceDataCollectionCollection ReadCategory()
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterCategoryType
Наследуется от: Enum
Поля:
  int value__
  PerformanceCounterCategoryType SingleInstance
  PerformanceCounterCategoryType MultiInstance
  PerformanceCounterCategoryType Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterInstaller
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterInstanceLifetime
Наследуется от: Enum
Поля:
  int value__
  PerformanceCounterInstanceLifetime Global
  PerformanceCounterInstanceLifetime Process
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterManager
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void System.Diagnostics.ICollectData.CloseData()
  void System.Diagnostics.ICollectData.CollectData(int callIdx, IntPtr valueNamePtr, IntPtr dataPtr, int totalBytes, IntPtr& res)
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterPermission
Наследуется от: ResourcePermissionBase
Поля:
  PerformanceCounterPermissionEntryCollection innerCollection
Свойства:
  PerformanceCounterPermissionEntryCollection PermissionEntries
Методы:
  void .ctor()
  void .ctor(PerformanceCounterPermissionEntry[] permissionAccessEntries)
  void .ctor(PermissionState state)
  void .ctor(PerformanceCounterPermissionAccess permissionAccess, string machineName, string categoryName)
  PerformanceCounterPermissionEntryCollection get_PermissionEntries()
  void SetUp()
  ResourcePermissionBaseEntry[] GetEntries()
  void ClearEntries()
  void Add(object obj)
  void Remove(object obj)
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterPermissionAccess
Наследуется от: Enum
Поля:
  int value__
  PerformanceCounterPermissionAccess None
  PerformanceCounterPermissionAccess Browse
  PerformanceCounterPermissionAccess Read
  PerformanceCounterPermissionAccess Write
  PerformanceCounterPermissionAccess Instrument
  PerformanceCounterPermissionAccess Administer
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string categoryName
  string machineName
  PerformanceCounterPermissionAccess permissionAccess
Свойства:
  string CategoryName
  string MachineName
  PerformanceCounterPermissionAccess PermissionAccess
Методы:
  void .ctor(SecurityAction action)
  string get_CategoryName()
  void set_CategoryName(string value)
  string get_MachineName()
  void set_MachineName(string value)
  PerformanceCounterPermissionAccess get_PermissionAccess()
  void set_PermissionAccess(PerformanceCounterPermissionAccess value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterPermissionEntry
Наследуется от: object
Поля:
  PerformanceCounterPermissionAccess All
  PerformanceCounterPermissionAccess permissionAccess
  string machineName
  string categoryName
Свойства:
  string CategoryName
  string MachineName
  PerformanceCounterPermissionAccess PermissionAccess
Методы:
  void .ctor(PerformanceCounterPermissionAccess permissionAccess, string machineName, string categoryName)
  string get_CategoryName()
  string get_MachineName()
  PerformanceCounterPermissionAccess get_PermissionAccess()
  ResourcePermissionBaseEntry CreateResourcePermissionBaseEntry()
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterPermissionEntryCollection
Наследуется от: CollectionBase
Поля:
  PerformanceCounterPermission owner
Свойства:
  PerformanceCounterPermissionEntry Item
Методы:
  void .ctor(PerformanceCounterPermission owner)
  void .ctor(ResourcePermissionBaseEntry[] entries)
  PerformanceCounterPermissionEntry get_Item(int index)
  void set_Item(int index, PerformanceCounterPermissionEntry value)
  int Add(PerformanceCounterPermissionEntry value)
  void AddRange(PerformanceCounterPermissionEntry[] value)
  void AddRange(PerformanceCounterPermissionEntryCollection value)
  bool Contains(PerformanceCounterPermissionEntry value)
  void CopyTo(PerformanceCounterPermissionEntry[] array, int index)
  int IndexOf(PerformanceCounterPermissionEntry value)
  void Insert(int index, PerformanceCounterPermissionEntry value)
  void OnClear()
  void OnInsert(int index, object value)
  void OnRemove(int index, object value)
  void OnSet(int index, object oldValue, object newValue)
  void Remove(PerformanceCounterPermissionEntry value)
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.PerformanceCounterType
Наследуется от: Enum
Поля:
  int value__
  PerformanceCounterType NumberOfItemsHEX32
  PerformanceCounterType NumberOfItemsHEX64
  PerformanceCounterType NumberOfItems32
  PerformanceCounterType NumberOfItems64
  PerformanceCounterType CounterDelta32
  PerformanceCounterType CounterDelta64
  PerformanceCounterType SampleCounter
  PerformanceCounterType CountPerTimeInterval32
  PerformanceCounterType CountPerTimeInterval64
  PerformanceCounterType RateOfCountsPerSecond32
  PerformanceCounterType RateOfCountsPerSecond64
  PerformanceCounterType RawFraction
  PerformanceCounterType CounterTimer
  PerformanceCounterType Timer100Ns
  PerformanceCounterType SampleFraction
  PerformanceCounterType CounterTimerInverse
  PerformanceCounterType Timer100NsInverse
  PerformanceCounterType CounterMultiTimer
  PerformanceCounterType CounterMultiTimer100Ns
  PerformanceCounterType CounterMultiTimerInverse
  PerformanceCounterType CounterMultiTimer100NsInverse
  PerformanceCounterType AverageTimer32
  PerformanceCounterType ElapsedTime
  PerformanceCounterType AverageCount64
  PerformanceCounterType SampleBase
  PerformanceCounterType AverageBase
  PerformanceCounterType RawBase
  PerformanceCounterType CounterMultiBase
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.ProcessModule
Наследуется от: Component
Поля:
  IntPtr baseaddr
  IntPtr entryaddr
  string filename
  FileVersionInfo version_info
  int memory_size
  string modulename
Свойства:
  IntPtr BaseAddress
  IntPtr EntryPointAddress
  string FileName
  FileVersionInfo FileVersionInfo
  int ModuleMemorySize
  string ModuleName
Методы:
  void .ctor(IntPtr baseaddr, IntPtr entryaddr, string filename, FileVersionInfo version_info, int memory_size, string modulename)
  IntPtr get_BaseAddress()
  IntPtr get_EntryPointAddress()
  string get_FileName()
  FileVersionInfo get_FileVersionInfo()
  int get_ModuleMemorySize()
  string get_ModuleName()
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.ProcessPriorityClass
Наследуется от: Enum
Поля:
  int value__
  ProcessPriorityClass AboveNormal
  ProcessPriorityClass BelowNormal
  ProcessPriorityClass High
  ProcessPriorityClass Idle
  ProcessPriorityClass Normal
  ProcessPriorityClass RealTime
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.ProcessThread
Наследуется от: Component
Поля:
Свойства:
  int BasePriority
  int CurrentPriority
  int Id
  int IdealProcessor
  bool PriorityBoostEnabled
  ThreadPriorityLevel PriorityLevel
  TimeSpan PrivilegedProcessorTime
  IntPtr ProcessorAffinity
  IntPtr StartAddress
  DateTime StartTime
  ThreadState ThreadState
  TimeSpan TotalProcessorTime
  TimeSpan UserProcessorTime
  ThreadWaitReason WaitReason
Методы:
  void .ctor()
  int get_BasePriority()
  int get_CurrentPriority()
  int get_Id()
  void set_IdealProcessor(int value)
  bool get_PriorityBoostEnabled()
  void set_PriorityBoostEnabled(bool value)
  ThreadPriorityLevel get_PriorityLevel()
  void set_PriorityLevel(ThreadPriorityLevel value)
  TimeSpan get_PrivilegedProcessorTime()
  void set_ProcessorAffinity(IntPtr value)
  IntPtr get_StartAddress()
  DateTime get_StartTime()
  ThreadState get_ThreadState()
  TimeSpan get_TotalProcessorTime()
  TimeSpan get_UserProcessorTime()
  ThreadWaitReason get_WaitReason()
  void ResetIdealProcessor()
--------------------------------------------------
Класс: System.Diagnostics.ProcessWindowStyle
Наследуется от: Enum
Поля:
  int value__
  ProcessWindowStyle Hidden
  ProcessWindowStyle Maximized
  ProcessWindowStyle Minimized
  ProcessWindowStyle Normal
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.Stopwatch
Наследуется от: object
Поля:
  long Frequency
  bool IsHighResolution
  long elapsed
  long started
  bool is_running
Свойства:
  TimeSpan Elapsed
  long ElapsedMilliseconds
  long ElapsedTicks
  bool IsRunning
Методы:
  long GetTimestamp()
  Stopwatch StartNew()
  void .ctor()
  TimeSpan get_Elapsed()
  long get_ElapsedMilliseconds()
  long get_ElapsedTicks()
  bool get_IsRunning()
  void Reset()
  void Start()
  void Stop()
  void Restart()
  void .cctor()
--------------------------------------------------
Класс: System.Diagnostics.ThreadPriorityLevel
Наследуется от: Enum
Поля:
  int value__
  ThreadPriorityLevel AboveNormal
  ThreadPriorityLevel BelowNormal
  ThreadPriorityLevel Highest
  ThreadPriorityLevel Idle
  ThreadPriorityLevel Lowest
  ThreadPriorityLevel Normal
  ThreadPriorityLevel TimeCritical
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.ThreadState
Наследуется от: Enum
Поля:
  int value__
  ThreadState Initialized
  ThreadState Ready
  ThreadState Running
  ThreadState Standby
  ThreadState Terminated
  ThreadState Transition
  ThreadState Unknown
  ThreadState Wait
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.ThreadWaitReason
Наследуется от: Enum
Поля:
  int value__
  ThreadWaitReason EventPairHigh
  ThreadWaitReason EventPairLow
  ThreadWaitReason ExecutionDelay
  ThreadWaitReason Executive
  ThreadWaitReason FreePage
  ThreadWaitReason LpcReceive
  ThreadWaitReason LpcReply
  ThreadWaitReason PageIn
  ThreadWaitReason PageOut
  ThreadWaitReason Suspended
  ThreadWaitReason SystemAllocation
  ThreadWaitReason Unknown
  ThreadWaitReason UserRequest
  ThreadWaitReason VirtualMemory
Свойства:
Методы:
--------------------------------------------------
Класс: System.Diagnostics.TraceImplSettings
Наследуется от: object
Поля:
  string Key
  bool AutoFlush
  int IndentSize
  TraceListenerCollection Listeners
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Diagnostics.TraceSourceInfo
Наследуется от: object
Поля:
  string name
  SourceLevels levels
  TraceListenerCollection listeners
Свойства:
  string Name
  SourceLevels Levels
  TraceListenerCollection Listeners
Методы:
  void .ctor(string name, SourceLevels levels)
  void .ctor(string name, SourceLevels levels, TraceImplSettings settings)
  string get_Name()
  SourceLevels get_Levels()
  TraceListenerCollection get_Listeners()
--------------------------------------------------
Класс: System.Diagnostics.Win32EventLog
Наследуется от: EventLogImpl
Поля:
  int MESSAGE_NOT_FOUND
  ManualResetEvent _notifyResetEvent
  IntPtr _readHandle
  Thread _notifyThread
  int _lastEntryWritten
  object _eventLock
Свойства:
  int OldestEventLogEntry
  IntPtr ReadHandle
  OverflowAction OverflowAction
  int MinimumRetentionDays
  long MaximumKilobytes
Методы:
  void .ctor(EventLog coreEventLog)
  void BeginInit()
  void Clear()
  void Close()
  void CreateEventSource(EventSourceCreationData sourceData)
  void Delete(string logName, string machineName)
  void DeleteEventSource(string source, string machineName)
  void Dispose(bool disposing)
  void EndInit()
  bool Exists(string logName, string machineName)
  string FormatMessage(string source, UInt32 messageID, String[] replacementStrings)
  string FormatCategory(string source, int category)
  int GetEntryCount()
  EventLogEntry GetEntry(int index)
  string GetLogDisplayName()
  String[] GetLogNames(string machineName)
  string LogNameFromSourceName(string source, string machineName)
  bool SourceExists(string source, string machineName)
  void WriteEntry(String[] replacementStrings, EventLogEntryType type, UInt32 instanceID, short category, Byte[] rawData)
  void UpdateLogRegistry(RegistryKey logKey)
  void UpdateSourceRegistry(RegistryKey sourceKey, EventSourceCreationData data)
  string GetLogName(RegistryKey logKey)
  void ReadEventLog(int index, Byte[] buffer, Int32& bytesRead, Int32& minBufferNeeded)
  RegistryKey GetEventLogKey(string machineName, bool writable)
  RegistryKey FindSourceKeyByName(string source, string machineName, bool writable)
  RegistryKey FindLogKeyByName(string logName, string machineName, bool writable)
  RegistryKey FindLogKeyBySource(string source, string machineName, bool writable)
  int get_OldestEventLogEntry()
  void CloseEventLog(IntPtr hEventLog)
  void DeregisterEventSource(IntPtr hEventLog)
  string LookupAccountSid(string machineName, Byte[] sid)
  string FetchMessage(string msgDll, UInt32 messageID, String[] replacementStrings)
  String[] GetMessageResourceDlls(string source, string valueName)
  IntPtr get_ReadHandle()
  IntPtr RegisterEventSource()
  void DisableNotification()
  void EnableNotification()
  void NotifyEventThread(ManualResetEvent resetEvent)
  OverflowAction get_OverflowAction()
  int get_MinimumRetentionDays()
  long get_MaximumKilobytes()
  void set_MaximumKilobytes(long value)
  void ModifyOverflowPolicy(OverflowAction action, int retentionDays)
  void RegisterDisplayName(string resourceFile, long resourceId)
  void <EnableNotification>b__44_0()
--------------------------------------------------
Класс: System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Security.SecureStringMarshal
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr SecureStringToCoTaskMemAnsi(SecureString s)
  IntPtr SecureStringToGlobalAllocAnsi(SecureString s)
  IntPtr SecureStringToCoTaskMemUnicode(SecureString s)
  IntPtr SecureStringToGlobalAllocUnicode(SecureString s)
--------------------------------------------------
Класс: System.Security.AccessControl.SemaphoreAccessRule
Наследуется от: AccessRule
Поля:
Свойства:
  SemaphoreRights SemaphoreRights
Методы:
  void .ctor(IdentityReference identity, SemaphoreRights eventRights, AccessControlType type)
  void .ctor(string identity, SemaphoreRights eventRights, AccessControlType type)
  SemaphoreRights get_SemaphoreRights()
--------------------------------------------------
Класс: System.Security.AccessControl.SemaphoreAuditRule
Наследуется от: AuditRule
Поля:
Свойства:
  SemaphoreRights SemaphoreRights
Методы:
  void .ctor(IdentityReference identity, SemaphoreRights eventRights, AuditFlags flags)
  SemaphoreRights get_SemaphoreRights()
--------------------------------------------------
Класс: System.Security.AccessControl.SemaphoreRights
Наследуется от: Enum
Поля:
  int value__
  SemaphoreRights Modify
  SemaphoreRights Delete
  SemaphoreRights ReadPermissions
  SemaphoreRights ChangePermissions
  SemaphoreRights TakeOwnership
  SemaphoreRights Synchronize
  SemaphoreRights FullControl
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.AccessControl.SemaphoreSecurity
Наследуется от: NativeObjectSecurity
Поля:
Свойства:
  Type AccessRightType
  Type AccessRuleType
  Type AuditRuleType
Методы:
  void .ctor()
  void .ctor(string name, AccessControlSections includeSections)
  void .ctor(SafeHandle handle, AccessControlSections includeSections)
  Type get_AccessRightType()
  Type get_AccessRuleType()
  Type get_AuditRuleType()
  AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
  void AddAccessRule(SemaphoreAccessRule rule)
  bool RemoveAccessRule(SemaphoreAccessRule rule)
  void RemoveAccessRuleAll(SemaphoreAccessRule rule)
  void RemoveAccessRuleSpecific(SemaphoreAccessRule rule)
  void ResetAccessRule(SemaphoreAccessRule rule)
  void SetAccessRule(SemaphoreAccessRule rule)
  AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
  void AddAuditRule(SemaphoreAuditRule rule)
  bool RemoveAuditRule(SemaphoreAuditRule rule)
  void RemoveAuditRuleAll(SemaphoreAuditRule rule)
  void RemoveAuditRuleSpecific(SemaphoreAuditRule rule)
  void SetAuditRule(SemaphoreAuditRule rule)
  void Persist(SafeHandle handle)
--------------------------------------------------
Класс: System.Security.Claims.DynamicRoleClaimProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  void AddDynamicRoleClaims(ClaimsIdentity claimsIdentity, IEnumerable`1<Claim> claims)
--------------------------------------------------
Класс: System.Security.Permissions.TypeDescriptorPermissionFlags
Наследуется от: Enum
Поля:
  int value__
  TypeDescriptorPermissionFlags NoFlags
  TypeDescriptorPermissionFlags RestrictedRegistrationAccess
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Permissions.TypeDescriptorPermission
Наследуется от: CodeAccessPermission
Поля:
  TypeDescriptorPermissionFlags m_flags
Свойства:
  TypeDescriptorPermissionFlags Flags
Методы:
  void .ctor(PermissionState state)
  void .ctor(TypeDescriptorPermissionFlags flag)
  void SetUnrestricted(bool unrestricted)
  void Reset()
  void set_Flags(TypeDescriptorPermissionFlags value)
  TypeDescriptorPermissionFlags get_Flags()
  bool IsUnrestricted()
  IPermission Union(IPermission target)
  bool IsSubsetOf(IPermission target)
  IPermission Intersect(IPermission target)
  IPermission Copy()
  void VerifyAccess(TypeDescriptorPermissionFlags type)
  SecurityElement ToXml()
  void FromXml(SecurityElement securityElement)
  void VerifyFlags(TypeDescriptorPermissionFlags flags)
--------------------------------------------------
Класс: System.Security.Permissions.PermissionHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  SecurityElement Element(Type type, int version)
  PermissionState CheckPermissionState(PermissionState state, bool allowUnrestricted)
  int CheckSecurityElement(SecurityElement se, string parameterName, int minimumVersion, int maximumVersion)
  bool IsUnrestricted(SecurityElement se)
  void ThrowInvalidPermission(IPermission target, Type expected)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Permissions.ResourcePermissionBase
Наследуется от: CodeAccessPermission
Поля:
  int version
  ArrayList _list
  bool _unrestricted
  Type _type
  String[] _tags
  string Any
  string Local
  Char[] invalidChars
Свойства:
  Type PermissionAccessType
  String[] TagNames
Методы:
  void .ctor()
  void .ctor(PermissionState state)
  Type get_PermissionAccessType()
  void set_PermissionAccessType(Type value)
  String[] get_TagNames()
  void set_TagNames(String[] value)
  void AddPermissionAccess(ResourcePermissionBaseEntry entry)
  void Clear()
  IPermission Copy()
  void FromXml(SecurityElement securityElement)
  ResourcePermissionBaseEntry[] GetPermissionEntries()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  void RemovePermissionAccess(ResourcePermissionBaseEntry entry)
  SecurityElement ToXml()
  IPermission Union(IPermission target)
  bool IsEmpty()
  ResourcePermissionBase Cast(IPermission target)
  void CheckEntry(ResourcePermissionBaseEntry entry)
  bool Equals(ResourcePermissionBaseEntry entry1, ResourcePermissionBaseEntry entry2)
  bool Exists(ResourcePermissionBaseEntry entry)
  void ValidateMachineName(string name)
  ResourcePermissionBase CreateFromType(Type type, bool unrestricted)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Permissions.ResourcePermissionBaseEntry
Наследуется от: object
Поля:
  int permissionAccess
  String[] permissionAccessPath
Свойства:
  int PermissionAccess
  String[] PermissionAccessPath
Методы:
  void .ctor()
  void .ctor(int permissionAccess, String[] permissionAccessPath)
  int get_PermissionAccess()
  String[] get_PermissionAccessPath()
--------------------------------------------------
Класс: System.Security.Permissions.StorePermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  StorePermissionFlags _flags
Свойства:
  StorePermissionFlags Flags
Методы:
  void .ctor(PermissionState state)
  void .ctor(StorePermissionFlags flag)
  StorePermissionFlags get_Flags()
  void set_Flags(StorePermissionFlags value)
  bool IsUnrestricted()
  IPermission Copy()
  IPermission Intersect(IPermission target)
  IPermission Union(IPermission target)
  bool IsSubsetOf(IPermission target)
  void FromXml(SecurityElement securityElement)
  SecurityElement ToXml()
  StorePermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Security.Permissions.StorePermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  StorePermissionFlags _flags
Свойства:
  StorePermissionFlags Flags
  bool AddToStore
  bool CreateStore
  bool DeleteStore
  bool EnumerateCertificates
  bool EnumerateStores
  bool OpenStore
  bool RemoveFromStore
Методы:
  void .ctor(SecurityAction action)
  StorePermissionFlags get_Flags()
  void set_Flags(StorePermissionFlags value)
  bool get_AddToStore()
  void set_AddToStore(bool value)
  bool get_CreateStore()
  void set_CreateStore(bool value)
  bool get_DeleteStore()
  void set_DeleteStore(bool value)
  bool get_EnumerateCertificates()
  void set_EnumerateCertificates(bool value)
  bool get_EnumerateStores()
  void set_EnumerateStores(bool value)
  bool get_OpenStore()
  void set_OpenStore(bool value)
  bool get_RemoveFromStore()
  void set_RemoveFromStore(bool value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Security.Permissions.StorePermissionFlags
Наследуется от: Enum
Поля:
  int value__
  StorePermissionFlags NoFlags
  StorePermissionFlags CreateStore
  StorePermissionFlags DeleteStore
  StorePermissionFlags EnumerateStores
  StorePermissionFlags OpenStore
  StorePermissionFlags AddToStore
  StorePermissionFlags RemoveFromStore
  StorePermissionFlags EnumerateCertificates
  StorePermissionFlags AllFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.AuthenticationException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Security.Authentication.CipherAlgorithmType
Наследуется от: Enum
Поля:
  int value__
  CipherAlgorithmType None
  CipherAlgorithmType Null
  CipherAlgorithmType Aes
  CipherAlgorithmType Aes128
  CipherAlgorithmType Aes192
  CipherAlgorithmType Aes256
  CipherAlgorithmType Des
  CipherAlgorithmType Rc2
  CipherAlgorithmType Rc4
  CipherAlgorithmType TripleDes
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.ExchangeAlgorithmType
Наследуется от: Enum
Поля:
  int value__
  ExchangeAlgorithmType None
  ExchangeAlgorithmType DiffieHellman
  ExchangeAlgorithmType RsaKeyX
  ExchangeAlgorithmType RsaSign
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.HashAlgorithmType
Наследуется от: Enum
Поля:
  int value__
  HashAlgorithmType None
  HashAlgorithmType Md5
  HashAlgorithmType Sha1
  HashAlgorithmType Sha256
  HashAlgorithmType Sha384
  HashAlgorithmType Sha512
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.InvalidCredentialException
Наследуется от: AuthenticationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Security.Authentication.SslProtocols
Наследуется от: Enum
Поля:
  int value__
  SslProtocols None
  SslProtocols Ssl2
  SslProtocols Ssl3
  SslProtocols Tls
  SslProtocols Tls11
  SslProtocols Tls12
  SslProtocols Tls13
  SslProtocols Default
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
Наследуется от: ReadOnlyCollectionBase
Поля:
Свойства:
Методы:
  void .ctor(ICollection items)
  ServiceNameCollection Merge(string serviceName)
  ServiceNameCollection Merge(IEnumerable serviceNames)
  void AddIfNew(ArrayList newServiceNames, string serviceName)
  bool Contains(string searchServiceName, ICollection serviceNames)
  bool Contains(string searchServiceName)
  string NormalizeServiceName(string inputServiceName)
  bool Match(string serviceName1, string serviceName2)
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.TokenBindingType
Наследуется от: Enum
Поля:
  int value__
  TokenBindingType Provided
  TokenBindingType Referred
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.TokenBinding
Наследуется от: object
Поля:
  Byte[] _rawTokenBindingId
  TokenBindingType <BindingType>k__BackingField
Свойства:
  TokenBindingType BindingType
Методы:
  void .ctor(TokenBindingType bindingType, Byte[] rawData)
  Byte[] GetRawTokenBindingId()
  TokenBindingType get_BindingType()
  void set_BindingType(TokenBindingType value)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.ChannelBinding
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
  int Size
Методы:
  int get_Size()
  void .ctor()
  void .ctor(bool ownsHandle)
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.ChannelBindingKind
Наследуется от: Enum
Поля:
  int value__
  ChannelBindingKind Unknown
  ChannelBindingKind Unique
  ChannelBindingKind Endpoint
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
Наследуется от: object
Поля:
Свойства:
  ChannelBinding CustomChannelBinding
  ServiceNameCollection CustomServiceNames
  bool OSSupportsExtendedProtection
  PolicyEnforcement PolicyEnforcement
  ProtectionScenario ProtectionScenario
Методы:
  void .ctor(PolicyEnforcement policyEnforcement)
  void .ctor(PolicyEnforcement policyEnforcement, ChannelBinding customChannelBinding)
  void .ctor(PolicyEnforcement policyEnforcement, ProtectionScenario protectionScenario, ICollection customServiceNames)
  void .ctor(PolicyEnforcement policyEnforcement, ProtectionScenario protectionScenario, ServiceNameCollection customServiceNames)
  void .ctor(SerializationInfo info, StreamingContext context)
  ChannelBinding get_CustomChannelBinding()
  ServiceNameCollection get_CustomServiceNames()
  bool get_OSSupportsExtendedProtection()
  PolicyEnforcement get_PolicyEnforcement()
  ProtectionScenario get_ProtectionScenario()
  string ToString()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicyTypeConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
Наследуется от: Enum
Поля:
  int value__
  PolicyEnforcement Never
  PolicyEnforcement WhenSupported
  PolicyEnforcement Always
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.ProtectionScenario
Наследуется от: Enum
Поля:
  int value__
  ProtectionScenario TransportSelected
  ProtectionScenario TrustedProxy
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.Configuration.ConfigUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  T GetCustomAttribute(MemberInfo m, bool inherit)
  ConfigurationProperty BuildProperty(Type t, string name)
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty custom_service_names
  ConfigurationProperty policy_enforcement
  ConfigurationProperty protection_scenario
Свойства:
  ServiceNameElementCollection CustomServiceNames
  PolicyEnforcement PolicyEnforcement
  ProtectionScenario ProtectionScenario
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  ServiceNameElementCollection get_CustomServiceNames()
  PolicyEnforcement get_PolicyEnforcement()
  void set_PolicyEnforcement(PolicyEnforcement value)
  ProtectionScenario get_ProtectionScenario()
  void set_ProtectionScenario(ProtectionScenario value)
  ConfigurationPropertyCollection get_Properties()
  ExtendedProtectionPolicy BuildPolicy()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty name
Свойства:
  string Name
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  string get_Name()
  void set_Name(string value)
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  ServiceNameElement Item
  ServiceNameElement Item
  string Item
Методы:
  ServiceNameElement get_Item(int index)
  ServiceNameElement get_Item(string name)
  void Add(ServiceNameElement element)
  void Clear()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  int IndexOf(ServiceNameElement element)
  void Remove(string name)
  void Remove(ServiceNameElement element)
  void RemoveAt(int index)
  void .ctor()
  void set_Item(int index, ServiceNameElement value)
  void set_Item(string name, ServiceNameElement value)
--------------------------------------------------
Класс: System.Security.Cryptography.DerEncoder
Наследуется от: object
Поля:
  byte ConstructedFlag
  byte ConstructedSequenceTag
  byte ConstructedSetTag
  Byte[][] s_nullTlv
Свойства:
Методы:
  Byte[] EncodeLength(int length)
  Byte[][] SegmentedEncodeBoolean(bool value)
  Byte[][] SegmentedEncodeUnsignedInteger(UInt32 value)
  Byte[][] SegmentedEncodeUnsignedInteger(ReadOnlySpan`1<byte> bigEndianBytes)
  Byte[][] SegmentedEncodeBitString(Byte[][][] childSegments)
  Byte[][] SegmentedEncodeBitString(Byte[] data)
  Byte[][] SegmentedEncodeBitString(int unusedBits, Byte[] data)
  Byte[][] SegmentedEncodeNamedBitList(Byte[] bigEndianBytes, int namedBitsCount)
  Byte[][] SegmentedEncodeOctetString(Byte[] data)
  Byte[][] SegmentedEncodeNull()
  Byte[] EncodeOid(string oidValue)
  Byte[][] SegmentedEncodeOid(Oid oid)
  Byte[][] SegmentedEncodeOid(string oidValue)
  Byte[][] SegmentedEncodeUtf8String(Char[] chars)
  Byte[][] SegmentedEncodeUtf8String(Char[] chars, int offset, int count)
  Byte[][] ConstructSegmentedSequence(Byte[][][] items)
  Byte[][] ConstructSegmentedSequence(IEnumerable`1<Byte[][]> items)
  Byte[][] ConstructSegmentedContextSpecificValue(int contextId, Byte[][][] items)
  Byte[][] ConstructSegmentedSet(Byte[][][] items)
  Byte[][] ConstructSegmentedPresortedSet(Byte[][][] items)
  bool IsValidPrintableString(Char[] chars)
  bool IsValidPrintableString(Char[] chars, int offset, int count)
  Byte[][] SegmentedEncodePrintableString(Char[] chars)
  Byte[][] SegmentedEncodePrintableString(Char[] chars, int offset, int count)
  Byte[][] SegmentedEncodeIA5String(Char[] chars)
  Byte[][] SegmentedEncodeIA5String(Char[] chars, int offset, int count)
  Byte[][] SegmentedEncodeUtcTime(DateTime utcTime)
  Byte[][] SegmentedEncodeGeneralizedTime(DateTime utcTime)
  Byte[] ConstructSequence(Byte[][][] items)
  Byte[] ConstructSequence(IEnumerable`1<Byte[][]> items)
  BigInteger ParseOidRid(string oidValue, Int32& startIndex)
  int AtoI(char c)
  void EncodeRid(List`1<byte> encodedData, BigInteger& rid)
  bool IsPrintableStringCharacter(char c)
  Byte[] ConcatenateArrays(Byte[][][] segments)
  Byte[] ConcatenateArrays(IEnumerable`1<Byte[][]> segments)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.DerSequenceReader
Наследуется от: object
Поля:
  byte ContextSpecificTagFlag
  byte ConstructedFlag
  byte ContextSpecificConstructedTag0
  byte ContextSpecificConstructedTag1
  byte ContextSpecificConstructedTag2
  byte ContextSpecificConstructedTag3
  byte ConstructedSequence
  byte TagClassMask
  byte TagNumberMask
  DateTimeFormatInfo s_validityDateTimeFormatInfo
  Encoding s_utf8EncodingWithExceptionFallback
  Encoding s_latin1Encoding
  Byte[] _data
  int _end
  int _position
  int <ContentLength>k__BackingField
Свойства:
  int ContentLength
  bool HasData
Методы:
  int get_ContentLength()
  void set_ContentLength(int value)
  void .ctor(bool startAtPayload, Byte[] data, int offset, int length)
  void .ctor(Byte[] data)
  void .ctor(Byte[] data, int offset, int length)
  void .ctor(DerTag tagToEat, Byte[] data, int offset, int length)
  DerSequenceReader CreateForPayload(Byte[] payload)
  bool get_HasData()
  byte PeekTag()
  bool HasTag(DerTag expectedTag)
  bool HasTag(byte expectedTag)
  void SkipValue()
  void ValidateAndSkipDerValue()
  Byte[] ReadNextEncodedValue()
  bool ReadBoolean()
  int ReadInteger()
  Byte[] ReadIntegerBytes()
  Byte[] ReadBitString()
  Byte[] ReadOctetString()
  string ReadOidAsString()
  Oid ReadOid()
  string ReadUtf8String()
  DerSequenceReader ReadCollectionWithTag(DerTag expected)
  DerSequenceReader ReadSequence()
  DerSequenceReader ReadSet()
  string ReadPrintableString()
  string ReadIA5String()
  string ReadT61String()
  DateTime ReadX509Date()
  DateTime ReadUtcTime()
  DateTime ReadGeneralizedTime()
  string ReadBMPString()
  string TrimTrailingNulls(string value)
  DateTime ReadTime(DerTag timeTag, string formatString)
  Byte[] ReadContentAsBytes()
  void EatTag(DerTag expected)
  void CheckTag(DerTag expected, Byte[] data, int position)
  int EatLength()
  int ScanContentLength(Byte[] data, int offset, int end, Int32& bytesConsumed)
--------------------------------------------------
Класс: System.Security.Cryptography.AsnEncodedDataCollection
Наследуется от: object
Поля:
  List`1<AsnEncodedData> _list
Свойства:
  AsnEncodedData Item
  int Count
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor()
  void .ctor(AsnEncodedData asnEncodedData)
  int Add(AsnEncodedData asnEncodedData)
  void Remove(AsnEncodedData asnEncodedData)
  AsnEncodedData get_Item(int index)
  int get_Count()
  AsnEncodedDataEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void CopyTo(AsnEncodedData[] array, int index)
  bool get_IsSynchronized()
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Security.Cryptography.AsnEncodedDataEnumerator
Наследуется от: object
Поля:
  AsnEncodedDataCollection _asnEncodedDatas
  int _current
Свойства:
  AsnEncodedData Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(AsnEncodedDataCollection asnEncodedDatas)
  AsnEncodedData get_Current()
  object System.Collections.IEnumerator.get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.Oid
Наследуется от: object
Поля:
  string _value
  string _friendlyName
  OidGroup _group
Свойства:
  string Value
  string FriendlyName
Методы:
  void .ctor()
  void .ctor(string oid)
  void .ctor(string value, string friendlyName)
  void .ctor(Oid oid)
  Oid FromFriendlyName(string friendlyName, OidGroup group)
  Oid FromOidValue(string oidValue, OidGroup group)
  string get_Value()
  void set_Value(string value)
  string get_FriendlyName()
  void set_FriendlyName(string value)
  void .ctor(string value, string friendlyName, OidGroup group)
--------------------------------------------------
Класс: System.Security.Cryptography.OidCollection
Наследуется от: object
Поля:
  List`1<Oid> _list
Свойства:
  Oid Item
  Oid Item
  int Count
  bool IsSynchronized
  object SyncRoot
Методы:
  void .ctor()
  int Add(Oid oid)
  Oid get_Item(int index)
  Oid get_Item(string oid)
  int get_Count()
  OidEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void CopyTo(Oid[] array, int index)
  bool get_IsSynchronized()
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Security.Cryptography.OidEnumerator
Наследуется от: object
Поля:
  OidCollection _oids
  int _current
Свойства:
  Oid Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(OidCollection oids)
  Oid get_Current()
  object System.Collections.IEnumerator.get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.OidGroup
Наследуется от: Enum
Поля:
  int value__
  OidGroup All
  OidGroup HashAlgorithm
  OidGroup EncryptionAlgorithm
  OidGroup PublicKeyAlgorithm
  OidGroup SignatureAlgorithm
  OidGroup Attribute
  OidGroup ExtensionOrAttribute
  OidGroup EnhancedKeyUsage
  OidGroup Policy
  OidGroup Template
  OidGroup KeyDerivationFunction
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.AsnDecodeStatus
Наследуется от: Enum
Поля:
  int value__
  AsnDecodeStatus NotDecoded
  AsnDecodeStatus Ok
  AsnDecodeStatus BadAsn
  AsnDecodeStatus BadTag
  AsnDecodeStatus BadLength
  AsnDecodeStatus InformationNotAvailable
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.AsnEncodedData
Наследуется от: object
Поля:
  Oid _oid
  Byte[] _raw
Свойства:
  Oid Oid
  Byte[] RawData
Методы:
  void .ctor()
  void .ctor(string oid, Byte[] rawData)
  void .ctor(Oid oid, Byte[] rawData)
  void .ctor(AsnEncodedData asnEncodedData)
  void .ctor(Byte[] rawData)
  Oid get_Oid()
  void set_Oid(Oid value)
  Byte[] get_RawData()
  void set_RawData(Byte[] value)
  void CopyFrom(AsnEncodedData asnEncodedData)
  string Format(bool multiLine)
  string ToString(bool multiLine)
  string Default(bool multiLine)
  string BasicConstraintsExtension(bool multiLine)
  string EnhancedKeyUsageExtension(bool multiLine)
  string KeyUsageExtension(bool multiLine)
  string SubjectKeyIdentifierExtension(bool multiLine)
  string SubjectAltName(bool multiLine)
  string NetscapeCertType(bool multiLine)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.GeneralNameEncoder
Наследуется от: object
Поля:
  IdnMapping s_idnMapping
Свойства:
Методы:
  Byte[][] EncodeEmailAddress(string emailAddress)
  Byte[][] EncodeDnsName(string dnsName)
  Byte[][] EncodeUri(Uri uri)
  Byte[][] EncodeIpAddress(IPAddress address)
  Byte[][] EncodeUserPrincipalName(string upn)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.OpenFlags
Наследуется от: Enum
Поля:
  int value__
  OpenFlags ReadOnly
  OpenFlags ReadWrite
  OpenFlags MaxAllowed
  OpenFlags OpenExistingOnly
  OpenFlags IncludeArchived
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.StoreLocation
Наследуется от: Enum
Поля:
  int value__
  StoreLocation CurrentUser
  StoreLocation LocalMachine
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.StoreName
Наследуется от: Enum
Поля:
  int value__
  StoreName AddressBook
  StoreName AuthRoot
  StoreName CertificateAuthority
  StoreName Disallowed
  StoreName My
  StoreName Root
  StoreName TrustedPeople
  StoreName TrustedPublisher
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.SubjectAlternativeNameBuilder
Наследуется от: object
Поля:
  List`1<Byte[][]> _encodedTlvs
  GeneralNameEncoder _generalNameEncoder
Свойства:
Методы:
  void AddEmailAddress(string emailAddress)
  void AddDnsName(string dnsName)
  void AddUri(Uri uri)
  void AddIpAddress(IPAddress ipAddress)
  void AddUserPrincipalName(string upn)
  X509Extension Build(bool critical)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
Наследуется от: Enum
Поля:
  int value__
  X500DistinguishedNameFlags None
  X500DistinguishedNameFlags Reversed
  X500DistinguishedNameFlags UseSemicolons
  X500DistinguishedNameFlags DoNotUsePlusSign
  X500DistinguishedNameFlags DoNotUseQuotes
  X500DistinguishedNameFlags UseCommas
  X500DistinguishedNameFlags UseNewLines
  X500DistinguishedNameFlags UseUTF8Encoding
  X500DistinguishedNameFlags UseT61Encoding
  X500DistinguishedNameFlags ForceUTF8Encoding
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
Наследуется от: Enum
Поля:
  int value__
  X509ChainStatusFlags NoError
  X509ChainStatusFlags NotTimeValid
  X509ChainStatusFlags NotTimeNested
  X509ChainStatusFlags Revoked
  X509ChainStatusFlags NotSignatureValid
  X509ChainStatusFlags NotValidForUsage
  X509ChainStatusFlags UntrustedRoot
  X509ChainStatusFlags RevocationStatusUnknown
  X509ChainStatusFlags Cyclic
  X509ChainStatusFlags InvalidExtension
  X509ChainStatusFlags InvalidPolicyConstraints
  X509ChainStatusFlags InvalidBasicConstraints
  X509ChainStatusFlags InvalidNameConstraints
  X509ChainStatusFlags HasNotSupportedNameConstraint
  X509ChainStatusFlags HasNotDefinedNameConstraint
  X509ChainStatusFlags HasNotPermittedNameConstraint
  X509ChainStatusFlags HasExcludedNameConstraint
  X509ChainStatusFlags PartialChain
  X509ChainStatusFlags CtlNotTimeValid
  X509ChainStatusFlags CtlNotSignatureValid
  X509ChainStatusFlags CtlNotValidForUsage
  X509ChainStatusFlags OfflineRevocation
  X509ChainStatusFlags NoIssuanceChainPolicy
  X509ChainStatusFlags ExplicitDistrust
  X509ChainStatusFlags HasNotSupportedCriticalExtension
  X509ChainStatusFlags HasWeakSignature
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509FindType
Наследуется от: Enum
Поля:
  int value__
  X509FindType FindByThumbprint
  X509FindType FindBySubjectName
  X509FindType FindBySubjectDistinguishedName
  X509FindType FindByIssuerName
  X509FindType FindByIssuerDistinguishedName
  X509FindType FindBySerialNumber
  X509FindType FindByTimeValid
  X509FindType FindByTimeNotYetValid
  X509FindType FindByTimeExpired
  X509FindType FindByTemplateName
  X509FindType FindByApplicationPolicy
  X509FindType FindByCertificatePolicy
  X509FindType FindByExtension
  X509FindType FindByKeyUsage
  X509FindType FindBySubjectKeyIdentifier
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509IncludeOption
Наследуется от: Enum
Поля:
  int value__
  X509IncludeOption None
  X509IncludeOption ExcludeRoot
  X509IncludeOption EndCertOnly
  X509IncludeOption WholeChain
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
Наследуется от: Enum
Поля:
  int value__
  X509KeyUsageFlags None
  X509KeyUsageFlags EncipherOnly
  X509KeyUsageFlags CrlSign
  X509KeyUsageFlags KeyCertSign
  X509KeyUsageFlags KeyAgreement
  X509KeyUsageFlags DataEncipherment
  X509KeyUsageFlags KeyEncipherment
  X509KeyUsageFlags NonRepudiation
  X509KeyUsageFlags DigitalSignature
  X509KeyUsageFlags DecipherOnly
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509NameType
Наследуется от: Enum
Поля:
  int value__
  X509NameType SimpleName
  X509NameType EmailName
  X509NameType UpnName
  X509NameType DnsName
  X509NameType DnsFromAlternativeName
  X509NameType UrlName
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509RevocationFlag
Наследуется от: Enum
Поля:
  int value__
  X509RevocationFlag EndCertificateOnly
  X509RevocationFlag EntireChain
  X509RevocationFlag ExcludeRoot
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509RevocationMode
Наследуется от: Enum
Поля:
  int value__
  X509RevocationMode NoCheck
  X509RevocationMode Online
  X509RevocationMode Offline
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
Наследуется от: Enum
Поля:
  int value__
  X509SubjectKeyIdentifierHashAlgorithm Sha1
  X509SubjectKeyIdentifierHashAlgorithm ShortSha1
  X509SubjectKeyIdentifierHashAlgorithm CapiSha1
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509VerificationFlags
Наследуется от: Enum
Поля:
  int value__
  X509VerificationFlags NoFlag
  X509VerificationFlags IgnoreNotTimeValid
  X509VerificationFlags IgnoreCtlNotTimeValid
  X509VerificationFlags IgnoreNotTimeNested
  X509VerificationFlags IgnoreInvalidBasicConstraints
  X509VerificationFlags AllowUnknownCertificateAuthority
  X509VerificationFlags IgnoreWrongUsage
  X509VerificationFlags IgnoreInvalidName
  X509VerificationFlags IgnoreInvalidPolicy
  X509VerificationFlags IgnoreEndRevocationUnknown
  X509VerificationFlags IgnoreCtlSignerRevocationUnknown
  X509VerificationFlags IgnoreCertificateAuthorityRevocationUnknown
  X509VerificationFlags IgnoreRootRevocationUnknown
  X509VerificationFlags AllFlags
Свойства:
Методы:
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.OSX509Certificates
Наследуется от: object
Поля:
  string SecurityLibrary
  string CoreFoundationLibrary
Свойства:
Методы:
  IntPtr SecCertificateCreateWithData(IntPtr allocator, IntPtr nsdataRef)
  int SecTrustCreateWithCertificates(IntPtr certOrCertArray, IntPtr policies, IntPtr& sectrustref)
  int SecTrustSetAnchorCertificates(IntPtr trust, IntPtr anchorCertificates)
  IntPtr SecPolicyCreateSSL(bool server, IntPtr cfStringHostname)
  int SecTrustEvaluate(IntPtr secTrustRef, SecTrustResult& secTrustResultTime)
  IntPtr CFStringCreateWithCharacters(IntPtr allocator, string str, IntPtr count)
  IntPtr CFDataCreate(IntPtr allocator, Byte* bytes, IntPtr length)
  void CFRetain(IntPtr handle)
  void CFRelease(IntPtr handle)
  IntPtr CFArrayCreate(IntPtr allocator, IntPtr values, IntPtr numValues, IntPtr callbacks)
  IntPtr MakeCFData(Byte[] data)
  IntPtr FromIntPtrs(IntPtr[] values)
  IntPtr GetCertificate(X509Certificate certificate)
  SecTrustResult TrustEvaluateSsl(X509CertificateCollection certificates, X509CertificateCollection anchors, string host)
  SecTrustResult _TrustEvaluateSsl(X509CertificateCollection certificates, X509CertificateCollection anchors, string hostName)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.PublicKey
Наследуется от: object
Поля:
  string rsaOid
  string dsaOid
  AsymmetricAlgorithm _key
  AsnEncodedData _keyValue
  AsnEncodedData _params
  Oid _oid
  Byte[] Empty
Свойства:
  AsnEncodedData EncodedKeyValue
  AsnEncodedData EncodedParameters
  AsymmetricAlgorithm Key
  Oid Oid
Методы:
  void .ctor(Oid oid, AsnEncodedData parameters, AsnEncodedData keyValue)
  void .ctor(X509Certificate certificate)
  AsnEncodedData get_EncodedKeyValue()
  AsnEncodedData get_EncodedParameters()
  AsymmetricAlgorithm get_Key()
  Oid get_Oid()
  Byte[] GetUnsignedBigInteger(Byte[] integer)
  DSA DecodeDSA(Byte[] rawPublicKey, Byte[] rawParameters)
  RSA DecodeRSA(Byte[] rawPublicKey)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X500DistinguishedName
Наследуется от: AsnEncodedData
Поля:
  X500DistinguishedNameFlags AllFlags
  string name
  Byte[] canonEncoding
Свойства:
  Byte[] CanonicalEncoding
  string Name
Методы:
  void .ctor(AsnEncodedData encodedDistinguishedName)
  void .ctor(Byte[] encodedDistinguishedName)
  void .ctor(string distinguishedName)
  void .ctor(string distinguishedName, X500DistinguishedNameFlags flag)
  void .ctor(X500DistinguishedName distinguishedName)
  void .ctor(Byte[] encoded, Byte[] canonEncoding, string name)
  Byte[] get_CanonicalEncoding()
  string get_Name()
  string Decode(X500DistinguishedNameFlags flag)
  string Format(bool multiLine)
  string GetSeparator(X500DistinguishedNameFlags flag)
  void DecodeRawData()
  string Canonize(string s)
  bool AreEqual(X500DistinguishedName name1, X500DistinguishedName name2)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
Наследуется от: X509Extension
Поля:
  string oid
  string friendlyName
  bool _certificateAuthority
  bool _hasPathLengthConstraint
  int _pathLengthConstraint
  AsnDecodeStatus _status
Свойства:
  bool CertificateAuthority
  bool HasPathLengthConstraint
  int PathLengthConstraint
Методы:
  void .ctor()
  void .ctor(AsnEncodedData encodedBasicConstraints, bool critical)
  void .ctor(bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical)
  bool get_CertificateAuthority()
  bool get_HasPathLengthConstraint()
  int get_PathLengthConstraint()
  void CopyFrom(AsnEncodedData asnEncodedData)
  AsnDecodeStatus Decode(Byte[] extension)
  Byte[] Encode()
  string ToString(bool multiLine)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate2
Наследуется от: X509Certificate
Поля:
  Byte[] modreq(System.Runtime.CompilerServices.IsVolatile) lazyRawData
  Oid modreq(System.Runtime.CompilerServices.IsVolatile) lazySignatureAlgorithm
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) lazyVersion
  X500DistinguishedName modreq(System.Runtime.CompilerServices.IsVolatile) lazySubjectName
  X500DistinguishedName modreq(System.Runtime.CompilerServices.IsVolatile) lazyIssuerName
  PublicKey modreq(System.Runtime.CompilerServices.IsVolatile) lazyPublicKey
  AsymmetricAlgorithm modreq(System.Runtime.CompilerServices.IsVolatile) lazyPrivateKey
  X509ExtensionCollection modreq(System.Runtime.CompilerServices.IsVolatile) lazyExtensions
Свойства:
  bool Archived
  X509ExtensionCollection Extensions
  string FriendlyName
  bool HasPrivateKey
  AsymmetricAlgorithm PrivateKey
  X500DistinguishedName IssuerName
  DateTime NotAfter
  DateTime NotBefore
  PublicKey PublicKey
  Byte[] RawData
  string SerialNumber
  Oid SignatureAlgorithm
  X500DistinguishedName SubjectName
  string Thumbprint
  int Version
  X509Certificate2Impl Impl
Методы:
  void Reset()
  void .ctor()
  void .ctor(Byte[] rawData)
  void .ctor(Byte[] rawData, string password)
  void .ctor(Byte[] rawData, SecureString password)
  void .ctor(Byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(Byte[] rawData, SecureString password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(IntPtr handle)
  void .ctor(X509Certificate2Impl impl)
  void .ctor(string fileName)
  void .ctor(string fileName, string password)
  void .ctor(string fileName, SecureString password)
  void .ctor(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(string fileName, SecureString password, X509KeyStorageFlags keyStorageFlags)
  void .ctor(X509Certificate certificate)
  void .ctor(SerializationInfo info, StreamingContext context)
  bool get_Archived()
  void set_Archived(bool value)
  X509ExtensionCollection get_Extensions()
  string get_FriendlyName()
  void set_FriendlyName(string value)
  bool get_HasPrivateKey()
  AsymmetricAlgorithm get_PrivateKey()
  void set_PrivateKey(AsymmetricAlgorithm value)
  X500DistinguishedName get_IssuerName()
  DateTime get_NotAfter()
  DateTime get_NotBefore()
  PublicKey get_PublicKey()
  Byte[] get_RawData()
  string get_SerialNumber()
  Oid get_SignatureAlgorithm()
  X500DistinguishedName get_SubjectName()
  string get_Thumbprint()
  int get_Version()
  X509ContentType GetCertContentType(Byte[] rawData)
  X509ContentType GetCertContentType(string fileName)
  string GetNameInfo(X509NameType nameType, bool forIssuer)
  string ToString()
  string ToString(bool verbose)
  void Import(Byte[] rawData)
  void Import(Byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
  void Import(Byte[] rawData, SecureString password, X509KeyStorageFlags keyStorageFlags)
  void Import(string fileName)
  void Import(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
  void Import(string fileName, SecureString password, X509KeyStorageFlags keyStorageFlags)
  bool Verify()
  X509Extension CreateCustomExtensionIfAny(Oid oid)
  X509Certificate2Impl get_Impl()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
Наследуется от: X509CertificateCollection
Поля:
  String[] newline_split
Свойства:
  X509Certificate2 Item
Методы:
  void .ctor()
  void .ctor(X509Certificate2Collection certificates)
  void .ctor(X509Certificate2 certificate)
  void .ctor(X509Certificate2[] certificates)
  X509Certificate2 get_Item(int index)
  void set_Item(int index, X509Certificate2 value)
  int Add(X509Certificate2 certificate)
  void AddRange(X509Certificate2[] certificates)
  void AddRange(X509Certificate2Collection certificates)
  bool Contains(X509Certificate2 certificate)
  Byte[] Export(X509ContentType contentType)
  Byte[] Export(X509ContentType contentType, string password)
  string GetKeyIdentifier(X509Certificate2 x)
  X509Certificate2Collection Find(X509FindType findType, object findValue, bool validOnly)
  X509Certificate2Enumerator GetEnumerator()
  void Import(Byte[] rawData)
  void Import(Byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
  void Import(string fileName)
  void Import(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
  void Insert(int index, X509Certificate2 certificate)
  void Remove(X509Certificate2 certificate)
  void RemoveRange(X509Certificate2[] certificates)
  void RemoveRange(X509Certificate2Collection certificates)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
Наследуется от: object
Поля:
  IEnumerator enumerator
Свойства:
  X509Certificate2 Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(X509Certificate2Collection collection)
  X509Certificate2 get_Current()
  bool MoveNext()
  void Reset()
  object System.Collections.IEnumerator.get_Current()
  bool System.Collections.IEnumerator.MoveNext()
  void System.Collections.IEnumerator.Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate2Impl
Наследуется от: X509CertificateImpl
Поля:
Свойства:
  bool Archived
  IEnumerable`1<X509Extension> Extensions
  string FriendlyName
  X500DistinguishedName IssuerName
  AsymmetricAlgorithm PrivateKey
  PublicKey PublicKey
  string SignatureAlgorithm
  X500DistinguishedName SubjectName
  int Version
  X509CertificateImplCollection IntermediateCertificates
  X509Certificate2Impl FallbackImpl
Методы:
  bool get_Archived()
  void set_Archived(bool value)
  IEnumerable`1<X509Extension> get_Extensions()
  string get_FriendlyName()
  void set_FriendlyName(string value)
  X500DistinguishedName get_IssuerName()
  AsymmetricAlgorithm get_PrivateKey()
  void set_PrivateKey(AsymmetricAlgorithm value)
  PublicKey get_PublicKey()
  string get_SignatureAlgorithm()
  X500DistinguishedName get_SubjectName()
  int get_Version()
  X509CertificateImplCollection get_IntermediateCertificates()
  X509Certificate2Impl get_FallbackImpl()
  string GetNameInfo(X509NameType nameType, bool forIssuer)
  bool Verify(X509Certificate2 thisCertificate)
  void AppendPrivateKeyInfo(StringBuilder sb)
  X509CertificateImpl CopyWithPrivateKey(RSA privateKey)
  X509Certificate CreateCertificate()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono
Наследуется от: X509Certificate2ImplUnix
Поля:
  PublicKey _publicKey
  X509CertificateImplCollection intermediateCerts
  X509Certificate _cert
  string empty_error
  Byte[] signedData
Свойства:
  bool IsValid
  IntPtr Handle
  X509Certificate Cert
  bool HasPrivateKey
  AsymmetricAlgorithm PrivateKey
  PublicKey PublicKey
  X509CertificateImplCollection IntermediateCertificates
  X509Certificate MonoCertificate
  X509Certificate2Impl FallbackImpl
Методы:
  bool get_IsValid()
  IntPtr get_Handle()
  IntPtr GetNativeAppleCertificate()
  void .ctor(X509Certificate cert)
  void .ctor(X509Certificate2ImplMono other)
  void .ctor(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags)
  X509CertificateImpl Clone()
  X509Certificate get_Cert()
  Byte[] GetRawCertData()
  bool Equals(X509CertificateImpl other, Boolean& result)
  void .ctor()
  bool get_HasPrivateKey()
  AsymmetricAlgorithm get_PrivateKey()
  void set_PrivateKey(AsymmetricAlgorithm value)
  RSA GetRSAPrivateKey()
  DSA GetDSAPrivateKey()
  PublicKey get_PublicKey()
  X509Certificate ImportPkcs12(Byte[] rawData, SafePasswordHandle password)
  X509Certificate ImportPkcs12(Byte[] rawData, string password)
  void Reset()
  bool Verify(X509Certificate2 thisCertificate)
  X509ContentType GetCertContentType(Byte[] rawData)
  X509ContentType GetCertContentType(string fileName)
  X509CertificateImplCollection get_IntermediateCertificates()
  X509Certificate get_MonoCertificate()
  X509Certificate2Impl get_FallbackImpl()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Certificate2ImplUnix
Наследуется от: X509Certificate2Impl
Поля:
  bool readCertData
  CertificateData certData
Свойства:
  bool Archived
  string KeyAlgorithm
  Byte[] KeyAlgorithmParameters
  Byte[] PublicKeyValue
  Byte[] SerialNumber
  string SignatureAlgorithm
  string FriendlyName
  int Version
  X500DistinguishedName SubjectName
  X500DistinguishedName IssuerName
  string Subject
  string Issuer
  string LegacySubject
  string LegacyIssuer
  Byte[] RawData
  Byte[] Thumbprint
  IEnumerable`1<X509Extension> Extensions
  DateTime NotAfter
  DateTime NotBefore
Методы:
  void EnsureCertData()
  Byte[] GetRawCertData()
  bool get_Archived()
  void set_Archived(bool value)
  string get_KeyAlgorithm()
  Byte[] get_KeyAlgorithmParameters()
  Byte[] get_PublicKeyValue()
  Byte[] get_SerialNumber()
  string get_SignatureAlgorithm()
  string get_FriendlyName()
  void set_FriendlyName(string value)
  int get_Version()
  X500DistinguishedName get_SubjectName()
  X500DistinguishedName get_IssuerName()
  string get_Subject()
  string get_Issuer()
  string get_LegacySubject()
  string get_LegacyIssuer()
  Byte[] get_RawData()
  Byte[] get_Thumbprint()
  string GetNameInfo(X509NameType nameType, bool forIssuer)
  IEnumerable`1<X509Extension> get_Extensions()
  DateTime get_NotAfter()
  DateTime get_NotBefore()
  void AppendPrivateKeyInfo(StringBuilder sb)
  void Reset()
  Byte[] Export(X509ContentType contentType, SafePasswordHandle password)
  Byte[] ExportPkcs12(SafePasswordHandle password)
  Byte[] ExportPkcs12(string password)
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509CertificateCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  X509Certificate Item
Методы:
  void .ctor()
  void .ctor(X509Certificate[] value)
  void .ctor(X509CertificateCollection value)
  X509Certificate get_Item(int index)
  void set_Item(int index, X509Certificate value)
  int Add(X509Certificate value)
  void AddRange(X509Certificate[] value)
  void AddRange(X509CertificateCollection value)
  bool Contains(X509Certificate value)
  void CopyTo(X509Certificate[] array, int index)
  X509CertificateEnumerator GetEnumerator()
  int GetHashCode()
  int IndexOf(X509Certificate value)
  void Insert(int index, X509Certificate value)
  void Remove(X509Certificate value)
  bool Compare(Byte[] array1, Byte[] array2)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
Наследуется от: object
Поля:
  List`1<X509CertificateImpl> list
Свойства:
  int Count
  X509CertificateImpl Item
Методы:
  void .ctor()
  void .ctor(X509CertificateImplCollection other)
  int get_Count()
  X509CertificateImpl get_Item(int index)
  void Add(X509CertificateImpl impl, bool takeOwnership)
  X509CertificateImplCollection Clone()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Chain
Наследуется от: object
Поля:
  X509ChainImpl impl
Свойства:
  X509ChainImpl Impl
  bool IsValid
  IntPtr ChainContext
  X509ChainElementCollection ChainElements
  X509ChainPolicy ChainPolicy
  X509ChainStatus[] ChainStatus
  SafeX509ChainHandle SafeHandle
Методы:
  X509ChainImpl get_Impl()
  bool get_IsValid()
  void ThrowIfContextInvalid()
  void .ctor()
  void .ctor(bool useMachineContext)
  void .ctor(X509ChainImpl impl)
  void .ctor(IntPtr chainContext)
  IntPtr get_ChainContext()
  X509ChainElementCollection get_ChainElements()
  X509ChainPolicy get_ChainPolicy()
  void set_ChainPolicy(X509ChainPolicy value)
  X509ChainStatus[] get_ChainStatus()
  SafeX509ChainHandle get_SafeHandle()
  bool Build(X509Certificate2 certificate)
  void Reset()
  X509Chain Create()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainElement
Наследуется от: object
Поля:
  X509Certificate2 certificate
  X509ChainStatus[] status
  string info
  X509ChainStatusFlags compressed_status_flags
Свойства:
  X509Certificate2 Certificate
  X509ChainStatus[] ChainElementStatus
  string Information
  X509ChainStatusFlags StatusFlags
Методы:
  void .ctor(X509Certificate2 certificate)
  X509Certificate2 get_Certificate()
  X509ChainStatus[] get_ChainElementStatus()
  string get_Information()
  X509ChainStatusFlags get_StatusFlags()
  void set_StatusFlags(X509ChainStatusFlags value)
  int Count(X509ChainStatusFlags flags)
  void Set(X509ChainStatus[] status, Int32& position, X509ChainStatusFlags flags, X509ChainStatusFlags mask)
  void UncompressFlags()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
Наследуется от: object
Поля:
  ArrayList _list
Свойства:
  int Count
  bool IsSynchronized
  X509ChainElement Item
  object SyncRoot
Методы:
  void .ctor()
  int get_Count()
  bool get_IsSynchronized()
  X509ChainElement get_Item(int index)
  object get_SyncRoot()
  void CopyTo(X509ChainElement[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  X509ChainElementEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Add(X509Certificate2 certificate)
  void Clear()
  bool Contains(X509Certificate2 certificate)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
Наследуется от: object
Поля:
  IEnumerator enumerator
Свойства:
  X509ChainElement Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(IEnumerable enumerable)
  X509ChainElement get_Current()
  object System.Collections.IEnumerator.get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainImpl
Наследуется от: object
Поля:
Свойства:
  bool IsValid
  IntPtr Handle
  X509ChainElementCollection ChainElements
  X509ChainPolicy ChainPolicy
  X509ChainStatus[] ChainStatus
Методы:
  bool get_IsValid()
  IntPtr get_Handle()
  void ThrowIfContextInvalid()
  X509ChainElementCollection get_ChainElements()
  X509ChainPolicy get_ChainPolicy()
  void set_ChainPolicy(X509ChainPolicy value)
  X509ChainStatus[] get_ChainStatus()
  bool Build(X509Certificate2 certificate)
  void AddStatus(X509ChainStatusFlags errorCode)
  void Reset()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainImplMono
Наследуется от: X509ChainImpl
Поля:
  StoreLocation location
  X509ChainElementCollection elements
  X509ChainPolicy policy
  X509ChainStatus[] status
  X509ChainStatus[] Empty
  int max_path_length
  X500DistinguishedName working_issuer_name
  AsymmetricAlgorithm working_public_key
  X509ChainElement bce_restriction
  X509Certificate2Collection roots
  X509Certificate2Collection cas
  X509Store root_store
  X509Store ca_store
  X509Store user_root_store
  X509Store user_ca_store
  X509Certificate2Collection collection
Свойства:
  bool IsValid
  IntPtr Handle
  X509ChainElementCollection ChainElements
  X509ChainPolicy ChainPolicy
  X509ChainStatus[] ChainStatus
  X509Certificate2Collection Roots
  X509Certificate2Collection CertificateAuthorities
  X509Store LMRootStore
  X509Store UserRootStore
  X509Store LMCAStore
  X509Store UserCAStore
  X509Certificate2Collection CertificateCollection
Методы:
  void .ctor()
  void .ctor(bool useMachineContext)
  void .ctor(IntPtr chainContext)
  bool get_IsValid()
  IntPtr get_Handle()
  X509ChainElementCollection get_ChainElements()
  X509ChainPolicy get_ChainPolicy()
  void set_ChainPolicy(X509ChainPolicy value)
  X509ChainStatus[] get_ChainStatus()
  void AddStatus(X509ChainStatusFlags error)
  bool Build(X509Certificate2 certificate)
  void Reset()
  X509Certificate2Collection get_Roots()
  X509Certificate2Collection get_CertificateAuthorities()
  X509Store get_LMRootStore()
  X509Store get_UserRootStore()
  X509Store get_LMCAStore()
  X509Store get_UserCAStore()
  X509Certificate2Collection get_CertificateCollection()
  X509ChainStatusFlags BuildChainFrom(X509Certificate2 certificate)
  X509Certificate2 SelectBestFromCollection(X509Certificate2 child, X509Certificate2Collection c)
  X509Certificate2 FindParent(X509Certificate2 certificate)
  bool IsChainComplete(X509Certificate2 certificate)
  bool IsSelfIssued(X509Certificate2 certificate)
  void ValidateChain(X509ChainStatusFlags flag)
  void Process(int n)
  void PrepareForNextCertificate(int n)
  void WrapUp()
  void ProcessCertificateExtensions(X509ChainElement element)
  bool IsSignedWith(X509Certificate2 signed, AsymmetricAlgorithm pubkey)
  string GetSubjectKeyIdentifier(X509Certificate2 certificate)
  string GetAuthorityKeyIdentifier(X509Certificate2 certificate)
  string GetAuthorityKeyIdentifier(X509Crl crl)
  string GetAuthorityKeyIdentifier(X509Extension ext)
  void CheckRevocationOnChain(X509ChainStatusFlags flag)
  X509ChainStatusFlags CheckRevocation(X509Certificate2 certificate, int ca, bool online)
  X509ChainStatusFlags CheckRevocation(X509Certificate2 certificate, X509Certificate2 ca_cert, bool online)
  X509Crl CheckCrls(string subject, string ski, X509Store store)
  X509Crl FindCrl(X509Certificate2 caCertificate)
  bool ProcessCrlExtensions(X509Crl crl)
  bool ProcessCrlEntryExtensions(X509CrlEntry entry)
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainPolicy
Наследуется от: object
Поля:
  OidCollection apps
  OidCollection cert
  X509CertificateCollection store
  X509Certificate2Collection store2
  X509RevocationFlag rflag
  X509RevocationMode mode
  TimeSpan timeout
  X509VerificationFlags vflags
  DateTime vtime
Свойства:
  OidCollection ApplicationPolicy
  OidCollection CertificatePolicy
  X509Certificate2Collection ExtraStore
  X509RevocationFlag RevocationFlag
  X509RevocationMode RevocationMode
  TimeSpan UrlRetrievalTimeout
  X509VerificationFlags VerificationFlags
  DateTime VerificationTime
Методы:
  void .ctor()
  void .ctor(X509CertificateCollection store)
  OidCollection get_ApplicationPolicy()
  OidCollection get_CertificatePolicy()
  X509Certificate2Collection get_ExtraStore()
  void set_ExtraStore(X509Certificate2Collection value)
  X509RevocationFlag get_RevocationFlag()
  void set_RevocationFlag(X509RevocationFlag value)
  X509RevocationMode get_RevocationMode()
  void set_RevocationMode(X509RevocationMode value)
  TimeSpan get_UrlRetrievalTimeout()
  void set_UrlRetrievalTimeout(TimeSpan value)
  X509VerificationFlags get_VerificationFlags()
  void set_VerificationFlags(X509VerificationFlags value)
  DateTime get_VerificationTime()
  void set_VerificationTime(DateTime value)
  void Reset()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ChainStatus
Наследуется от: ValueType
Поля:
  X509ChainStatusFlags status
  string info
Свойства:
  X509ChainStatusFlags Status
  string StatusInformation
Методы:
  void .ctor(X509ChainStatusFlags flag)
  X509ChainStatusFlags get_Status()
  void set_Status(X509ChainStatusFlags value)
  string get_StatusInformation()
  void set_StatusInformation(string value)
  string GetInformation(X509ChainStatusFlags flags)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
Наследуется от: X509Extension
Поля:
  string oid
  string friendlyName
  OidCollection _enhKeyUsage
  AsnDecodeStatus _status
Свойства:
  OidCollection EnhancedKeyUsages
Методы:
  void .ctor()
  void .ctor(AsnEncodedData encodedEnhancedKeyUsages, bool critical)
  void .ctor(OidCollection enhancedKeyUsages, bool critical)
  OidCollection get_EnhancedKeyUsages()
  void CopyFrom(AsnEncodedData asnEncodedData)
  AsnDecodeStatus Decode(Byte[] extension)
  Byte[] Encode()
  string ToString(bool multiLine)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Extension
Наследуется от: AsnEncodedData
Поля:
  bool _critical
Свойства:
  bool Critical
Методы:
  void .ctor()
  void .ctor(AsnEncodedData encodedExtension, bool critical)
  void .ctor(Oid oid, Byte[] rawData, bool critical)
  void .ctor(string oid, Byte[] rawData, bool critical)
  bool get_Critical()
  void set_Critical(bool value)
  void CopyFrom(AsnEncodedData asnEncodedData)
  string FormatUnkownData(Byte[] data)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
Наследуется от: object
Поля:
  Byte[] Empty
  ArrayList _list
Свойства:
  int Count
  bool IsSynchronized
  object SyncRoot
  X509Extension Item
  X509Extension Item
Методы:
  void .ctor()
  void .ctor(X509Certificate cert)
  int get_Count()
  bool get_IsSynchronized()
  object get_SyncRoot()
  X509Extension get_Item(int index)
  X509Extension get_Item(string oid)
  int Add(X509Extension extension)
  void CopyTo(X509Extension[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  X509ExtensionEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .cctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
Наследуется от: object
Поля:
  IEnumerator enumerator
Свойства:
  X509Extension Current
  object System.Collections.IEnumerator.Current
Методы:
  void .ctor(ArrayList list)
  X509Extension get_Current()
  object System.Collections.IEnumerator.get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Helper2
Наследуется от: object
Поля:
Свойства:
Методы:
  X509Certificate GetMonoCertificate(X509Certificate2 certificate)
  X509ChainImpl CreateChainImpl(bool useMachineContext)
  bool IsValid(X509ChainImpl impl)
  void ThrowIfContextInvalid(X509ChainImpl impl)
  Exception GetInvalidChainContextException()
  long GetSubjectNameHash(X509Certificate certificate)
  void ExportAsPEM(X509Certificate certificate, Stream stream, bool includeHumanReadableForm)
  MonoBtlsX509 GetNativeInstance(X509CertificateImpl impl)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
Наследуется от: X509Extension
Поля:
  string oid
  string friendlyName
  X509KeyUsageFlags all
  X509KeyUsageFlags _keyUsages
  AsnDecodeStatus _status
Свойства:
  X509KeyUsageFlags KeyUsages
Методы:
  void .ctor()
  void .ctor(AsnEncodedData encodedKeyUsage, bool critical)
  void .ctor(X509KeyUsageFlags keyUsages, bool critical)
  X509KeyUsageFlags get_KeyUsages()
  void CopyFrom(AsnEncodedData asnEncodedData)
  X509KeyUsageFlags GetValidFlags(X509KeyUsageFlags flags)
  AsnDecodeStatus Decode(Byte[] extension)
  Byte[] Encode()
  string ToString(bool multiLine)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509Store
Наследуется от: object
Поля:
  string _name
  StoreLocation _location
  X509Certificate2Collection list
  OpenFlags _flags
  X509Store store
Свойства:
  X509Certificate2Collection Certificates
  StoreLocation Location
  string Name
  X509Stores Factory
  bool IsOpen
  bool IsReadOnly
  X509Store Store
  IntPtr StoreHandle
Методы:
  void .ctor()
  void .ctor(string storeName)
  void .ctor(StoreName storeName)
  void .ctor(StoreLocation storeLocation)
  void .ctor(StoreName storeName, StoreLocation storeLocation)
  void .ctor(StoreName storeName, StoreLocation storeLocation, OpenFlags openFlags)
  void .ctor(string storeName, StoreLocation storeLocation, OpenFlags openFlags)
  void .ctor(IntPtr storeHandle)
  void .ctor(string storeName, StoreLocation storeLocation)
  X509Certificate2Collection get_Certificates()
  StoreLocation get_Location()
  string get_Name()
  X509Stores get_Factory()
  bool get_IsOpen()
  bool get_IsReadOnly()
  X509Store get_Store()
  IntPtr get_StoreHandle()
  void Add(X509Certificate2 certificate)
  void AddRange(X509Certificate2Collection certificates)
  void Close()
  void Dispose()
  void Open(OpenFlags flags)
  void Remove(X509Certificate2 certificate)
  void RemoveRange(X509Certificate2Collection certificates)
  bool Exists(X509Certificate2 certificate)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
Наследуется от: X509Extension
Поля:
  string oid
  string friendlyName
  Byte[] _subjectKeyIdentifier
  string _ski
  AsnDecodeStatus _status
Свойства:
  string SubjectKeyIdentifier
Методы:
  void .ctor()
  void .ctor(AsnEncodedData encodedSubjectKeyIdentifier, bool critical)
  void .ctor(Byte[] subjectKeyIdentifier, bool critical)
  void .ctor(string subjectKeyIdentifier, bool critical)
  void .ctor(PublicKey key, bool critical)
  void .ctor(PublicKey key, X509SubjectKeyIdentifierHashAlgorithm algorithm, bool critical)
  string get_SubjectKeyIdentifier()
  void CopyFrom(AsnEncodedData asnEncodedData)
  byte FromHexChar(char c)
  byte FromHexChars(char c1, char c2)
  Byte[] FromHex(string hex)
  AsnDecodeStatus Decode(Byte[] extension)
  Byte[] Encode()
  string ToString(bool multiLine)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.CertificateRequest
Наследуется от: object
Поля:
Свойства:
  Collection`1<X509Extension> CertificateExtensions
  HashAlgorithmName HashAlgorithm
  PublicKey PublicKey
  X500DistinguishedName SubjectName
Методы:
  void .ctor(X500DistinguishedName subjectName, ECDsa key, HashAlgorithmName hashAlgorithm)
  void .ctor(X500DistinguishedName subjectName, RSA key, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  void .ctor(X500DistinguishedName subjectName, PublicKey publicKey, HashAlgorithmName hashAlgorithm)
  void .ctor(string subjectName, ECDsa key, HashAlgorithmName hashAlgorithm)
  void .ctor(string subjectName, RSA key, HashAlgorithmName hashAlgorithm, RSASignaturePadding padding)
  Collection`1<X509Extension> get_CertificateExtensions()
  HashAlgorithmName get_HashAlgorithm()
  PublicKey get_PublicKey()
  X500DistinguishedName get_SubjectName()
  X509Certificate2 Create(X500DistinguishedName issuerName, X509SignatureGenerator generator, DateTimeOffset notBefore, DateTimeOffset notAfter, Byte[] serialNumber)
  X509Certificate2 Create(X509Certificate2 issuerCertificate, DateTimeOffset notBefore, DateTimeOffset notAfter, Byte[] serialNumber)
  X509Certificate2 CreateSelfSigned(DateTimeOffset notBefore, DateTimeOffset notAfter)
  Byte[] CreateSigningRequest()
  Byte[] CreateSigningRequest(X509SignatureGenerator signatureGenerator)
--------------------------------------------------
Класс: System.Security.Cryptography.X509Certificates.X509SignatureGenerator
Наследуется от: object
Поля:
Свойства:
  PublicKey PublicKey
Методы:
  void .ctor()
  PublicKey get_PublicKey()
  PublicKey BuildPublicKey()
  X509SignatureGenerator CreateForECDsa(ECDsa key)
  X509SignatureGenerator CreateForRSA(RSA key, RSASignaturePadding signaturePadding)
  Byte[] GetSignatureAlgorithmIdentifier(HashAlgorithmName hashAlgorithm)
  Byte[] SignData(Byte[] data, HashAlgorithmName hashAlgorithm)
--------------------------------------------------
Класс: System.CodeDom.CodeObject
Наследуется от: object
Поля:
  IDictionary _userData
Свойства:
  IDictionary UserData
Методы:
  void .ctor()
  IDictionary get_UserData()
--------------------------------------------------
Класс: System.CodeDom.CodeTypeReferenceOptions
Наследуется от: Enum
Поля:
  int value__
  CodeTypeReferenceOptions GlobalReference
  CodeTypeReferenceOptions GenericTypeParameter
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.CodeTypeReference
Наследуется от: CodeObject
Поля:
  string _baseType
  bool _isInterface
  CodeTypeReferenceCollection _typeArguments
  bool _needsFixup
  CodeTypeReference <ArrayElementType>k__BackingField
  int <ArrayRank>k__BackingField
  CodeTypeReferenceOptions <Options>k__BackingField
Свойства:
  CodeTypeReference ArrayElementType
  int ArrayRank
  int NestedArrayDepth
  string BaseType
  CodeTypeReferenceOptions Options
  CodeTypeReferenceCollection TypeArguments
  bool IsInterface
Методы:
  void .ctor()
  void .ctor(Type type)
  void .ctor(Type type, CodeTypeReferenceOptions codeTypeReferenceOption)
  void .ctor(string typeName, CodeTypeReferenceOptions codeTypeReferenceOption)
  void .ctor(string typeName)
  void InitializeFromType(Type type)
  void Initialize(string typeName)
  void Initialize(string typeName, CodeTypeReferenceOptions options)
  void .ctor(string typeName, CodeTypeReference[] typeArguments)
  void .ctor(CodeTypeParameter typeParameter)
  void .ctor(string baseType, int rank)
  void .ctor(CodeTypeReference arrayType, int rank)
  CodeTypeReference get_ArrayElementType()
  void set_ArrayElementType(CodeTypeReference value)
  int get_ArrayRank()
  void set_ArrayRank(int value)
  int get_NestedArrayDepth()
  string get_BaseType()
  void set_BaseType(string value)
  CodeTypeReferenceOptions get_Options()
  void set_Options(CodeTypeReferenceOptions value)
  CodeTypeReferenceCollection get_TypeArguments()
  bool get_IsInterface()
  string RipOffAssemblyInformationFromTypeName(string typeName)
--------------------------------------------------
Класс: System.CodeDom.CodeTypeReferenceCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeTypeReference Item
Методы:
  void .ctor()
  void .ctor(CodeTypeReferenceCollection value)
  void .ctor(CodeTypeReference[] value)
  CodeTypeReference get_Item(int index)
  void set_Item(int index, CodeTypeReference value)
  int Add(CodeTypeReference value)
  void Add(string value)
  void Add(Type value)
  void AddRange(CodeTypeReference[] value)
  void AddRange(CodeTypeReferenceCollection value)
  bool Contains(CodeTypeReference value)
  void CopyTo(CodeTypeReference[] array, int index)
  int IndexOf(CodeTypeReference value)
  void Insert(int index, CodeTypeReference value)
  void Remove(CodeTypeReference value)
--------------------------------------------------
Класс: System.CodeDom.CodeArgumentReferenceExpression
Наследуется от: CodeExpression
Поля:
  string _parameterName
Свойства:
  string ParameterName
Методы:
  void .ctor()
  void .ctor(string parameterName)
  string get_ParameterName()
  void set_ParameterName(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeArrayCreateExpression
Наследуется от: CodeExpression
Поля:
  CodeExpressionCollection _initializers
  CodeTypeReference _createType
  int <Size>k__BackingField
  CodeExpression <SizeExpression>k__BackingField
Свойства:
  CodeTypeReference CreateType
  CodeExpressionCollection Initializers
  int Size
  CodeExpression SizeExpression
Методы:
  void .ctor()
  void .ctor(CodeTypeReference createType, CodeExpression[] initializers)
  void .ctor(string createType, CodeExpression[] initializers)
  void .ctor(Type createType, CodeExpression[] initializers)
  void .ctor(CodeTypeReference createType, int size)
  void .ctor(string createType, int size)
  void .ctor(Type createType, int size)
  void .ctor(CodeTypeReference createType, CodeExpression size)
  void .ctor(string createType, CodeExpression size)
  void .ctor(Type createType, CodeExpression size)
  CodeTypeReference get_CreateType()
  void set_CreateType(CodeTypeReference value)
  CodeExpressionCollection get_Initializers()
  int get_Size()
  void set_Size(int value)
  CodeExpression get_SizeExpression()
  void set_SizeExpression(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeArrayIndexerExpression
Наследуется от: CodeExpression
Поля:
  CodeExpressionCollection _indices
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeExpression TargetObject
  CodeExpressionCollection Indices
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject, CodeExpression[] indices)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  CodeExpressionCollection get_Indices()
--------------------------------------------------
Класс: System.CodeDom.CodeAssignStatement
Наследуется от: CodeStatement
Поля:
  CodeExpression <Left>k__BackingField
  CodeExpression <Right>k__BackingField
Свойства:
  CodeExpression Left
  CodeExpression Right
Методы:
  void .ctor()
  void .ctor(CodeExpression left, CodeExpression right)
  CodeExpression get_Left()
  void set_Left(CodeExpression value)
  CodeExpression get_Right()
  void set_Right(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeAttachEventStatement
Наследуется от: CodeStatement
Поля:
  CodeEventReferenceExpression _eventRef
  CodeExpression <Listener>k__BackingField
Свойства:
  CodeEventReferenceExpression Event
  CodeExpression Listener
Методы:
  void .ctor()
  void .ctor(CodeEventReferenceExpression eventRef, CodeExpression listener)
  void .ctor(CodeExpression targetObject, string eventName, CodeExpression listener)
  CodeEventReferenceExpression get_Event()
  void set_Event(CodeEventReferenceExpression value)
  CodeExpression get_Listener()
  void set_Listener(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeAttributeArgument
Наследуется от: object
Поля:
  string _name
  CodeExpression <Value>k__BackingField
Свойства:
  string Name
  CodeExpression Value
Методы:
  void .ctor()
  void .ctor(CodeExpression value)
  void .ctor(string name, CodeExpression value)
  string get_Name()
  void set_Name(string value)
  CodeExpression get_Value()
  void set_Value(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeAttributeArgumentCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeAttributeArgument Item
Методы:
  void .ctor()
  void .ctor(CodeAttributeArgumentCollection value)
  void .ctor(CodeAttributeArgument[] value)
  CodeAttributeArgument get_Item(int index)
  void set_Item(int index, CodeAttributeArgument value)
  int Add(CodeAttributeArgument value)
  void AddRange(CodeAttributeArgument[] value)
  void AddRange(CodeAttributeArgumentCollection value)
  bool Contains(CodeAttributeArgument value)
  void CopyTo(CodeAttributeArgument[] array, int index)
  int IndexOf(CodeAttributeArgument value)
  void Insert(int index, CodeAttributeArgument value)
  void Remove(CodeAttributeArgument value)
--------------------------------------------------
Класс: System.CodeDom.CodeAttributeDeclaration
Наследуется от: object
Поля:
  string _name
  CodeAttributeArgumentCollection _arguments
  CodeTypeReference _attributeType
Свойства:
  string Name
  CodeAttributeArgumentCollection Arguments
  CodeTypeReference AttributeType
Методы:
  void .ctor()
  void .ctor(string name)
  void .ctor(string name, CodeAttributeArgument[] arguments)
  void .ctor(CodeTypeReference attributeType)
  void .ctor(CodeTypeReference attributeType, CodeAttributeArgument[] arguments)
  string get_Name()
  void set_Name(string value)
  CodeAttributeArgumentCollection get_Arguments()
  CodeTypeReference get_AttributeType()
--------------------------------------------------
Класс: System.CodeDom.CodeAttributeDeclarationCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeAttributeDeclaration Item
Методы:
  void .ctor()
  void .ctor(CodeAttributeDeclarationCollection value)
  void .ctor(CodeAttributeDeclaration[] value)
  CodeAttributeDeclaration get_Item(int index)
  void set_Item(int index, CodeAttributeDeclaration value)
  int Add(CodeAttributeDeclaration value)
  void AddRange(CodeAttributeDeclaration[] value)
  void AddRange(CodeAttributeDeclarationCollection value)
  bool Contains(CodeAttributeDeclaration value)
  void CopyTo(CodeAttributeDeclaration[] array, int index)
  int IndexOf(CodeAttributeDeclaration value)
  void Insert(int index, CodeAttributeDeclaration value)
  void Remove(CodeAttributeDeclaration value)
--------------------------------------------------
Класс: System.CodeDom.CodeBaseReferenceExpression
Наследуется от: CodeExpression
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeBinaryOperatorExpression
Наследуется от: CodeExpression
Поля:
  CodeExpression <Right>k__BackingField
  CodeExpression <Left>k__BackingField
  CodeBinaryOperatorType <Operator>k__BackingField
Свойства:
  CodeExpression Right
  CodeExpression Left
  CodeBinaryOperatorType Operator
Методы:
  void .ctor()
  void .ctor(CodeExpression left, CodeBinaryOperatorType op, CodeExpression right)
  CodeExpression get_Right()
  void set_Right(CodeExpression value)
  CodeExpression get_Left()
  void set_Left(CodeExpression value)
  CodeBinaryOperatorType get_Operator()
  void set_Operator(CodeBinaryOperatorType value)
--------------------------------------------------
Класс: System.CodeDom.CodeBinaryOperatorType
Наследуется от: Enum
Поля:
  int value__
  CodeBinaryOperatorType Add
  CodeBinaryOperatorType Subtract
  CodeBinaryOperatorType Multiply
  CodeBinaryOperatorType Divide
  CodeBinaryOperatorType Modulus
  CodeBinaryOperatorType Assign
  CodeBinaryOperatorType IdentityInequality
  CodeBinaryOperatorType IdentityEquality
  CodeBinaryOperatorType ValueEquality
  CodeBinaryOperatorType BitwiseOr
  CodeBinaryOperatorType BitwiseAnd
  CodeBinaryOperatorType BooleanOr
  CodeBinaryOperatorType BooleanAnd
  CodeBinaryOperatorType LessThan
  CodeBinaryOperatorType LessThanOrEqual
  CodeBinaryOperatorType GreaterThan
  CodeBinaryOperatorType GreaterThanOrEqual
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.CodeCastExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _targetType
  CodeExpression <Expression>k__BackingField
Свойства:
  CodeTypeReference TargetType
  CodeExpression Expression
Методы:
  void .ctor()
  void .ctor(CodeTypeReference targetType, CodeExpression expression)
  void .ctor(string targetType, CodeExpression expression)
  void .ctor(Type targetType, CodeExpression expression)
  CodeTypeReference get_TargetType()
  void set_TargetType(CodeTypeReference value)
  CodeExpression get_Expression()
  void set_Expression(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeCatchClause
Наследуется от: object
Поля:
  CodeStatementCollection _statements
  CodeTypeReference _catchExceptionType
  string _localName
Свойства:
  string LocalName
  CodeTypeReference CatchExceptionType
  CodeStatementCollection Statements
Методы:
  void .ctor()
  void .ctor(string localName)
  void .ctor(string localName, CodeTypeReference catchExceptionType)
  void .ctor(string localName, CodeTypeReference catchExceptionType, CodeStatement[] statements)
  string get_LocalName()
  void set_LocalName(string value)
  CodeTypeReference get_CatchExceptionType()
  void set_CatchExceptionType(CodeTypeReference value)
  CodeStatementCollection get_Statements()
--------------------------------------------------
Класс: System.CodeDom.CodeCatchClauseCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeCatchClause Item
Методы:
  void .ctor()
  void .ctor(CodeCatchClauseCollection value)
  void .ctor(CodeCatchClause[] value)
  CodeCatchClause get_Item(int index)
  void set_Item(int index, CodeCatchClause value)
  int Add(CodeCatchClause value)
  void AddRange(CodeCatchClause[] value)
  void AddRange(CodeCatchClauseCollection value)
  bool Contains(CodeCatchClause value)
  void CopyTo(CodeCatchClause[] array, int index)
  int IndexOf(CodeCatchClause value)
  void Insert(int index, CodeCatchClause value)
  void Remove(CodeCatchClause value)
--------------------------------------------------
Класс: System.CodeDom.CodeChecksumPragma
Наследуется от: CodeDirective
Поля:
  string _fileName
  Guid <ChecksumAlgorithmId>k__BackingField
  Byte[] <ChecksumData>k__BackingField
Свойства:
  string FileName
  Guid ChecksumAlgorithmId
  Byte[] ChecksumData
Методы:
  void .ctor()
  void .ctor(string fileName, Guid checksumAlgorithmId, Byte[] checksumData)
  string get_FileName()
  void set_FileName(string value)
  Guid get_ChecksumAlgorithmId()
  void set_ChecksumAlgorithmId(Guid value)
  Byte[] get_ChecksumData()
  void set_ChecksumData(Byte[] value)
--------------------------------------------------
Класс: System.CodeDom.CodeComment
Наследуется от: CodeObject
Поля:
  string _text
  bool <DocComment>k__BackingField
Свойства:
  bool DocComment
  string Text
Методы:
  void .ctor()
  void .ctor(string text)
  void .ctor(string text, bool docComment)
  bool get_DocComment()
  void set_DocComment(bool value)
  string get_Text()
  void set_Text(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeCommentStatement
Наследуется от: CodeStatement
Поля:
  CodeComment <Comment>k__BackingField
Свойства:
  CodeComment Comment
Методы:
  void .ctor()
  void .ctor(CodeComment comment)
  void .ctor(string text)
  void .ctor(string text, bool docComment)
  CodeComment get_Comment()
  void set_Comment(CodeComment value)
--------------------------------------------------
Класс: System.CodeDom.CodeCommentStatementCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeCommentStatement Item
Методы:
  void .ctor()
  void .ctor(CodeCommentStatementCollection value)
  void .ctor(CodeCommentStatement[] value)
  CodeCommentStatement get_Item(int index)
  void set_Item(int index, CodeCommentStatement value)
  int Add(CodeCommentStatement value)
  void AddRange(CodeCommentStatement[] value)
  void AddRange(CodeCommentStatementCollection value)
  bool Contains(CodeCommentStatement value)
  void CopyTo(CodeCommentStatement[] array, int index)
  int IndexOf(CodeCommentStatement value)
  void Insert(int index, CodeCommentStatement value)
  void Remove(CodeCommentStatement value)
--------------------------------------------------
Класс: System.CodeDom.CodeCompileUnit
Наследуется от: CodeObject
Поля:
  StringCollection _assemblies
  CodeAttributeDeclarationCollection _attributes
  CodeDirectiveCollection _startDirectives
  CodeDirectiveCollection _endDirectives
  CodeNamespaceCollection <Namespaces>k__BackingField
Свойства:
  CodeNamespaceCollection Namespaces
  StringCollection ReferencedAssemblies
  CodeAttributeDeclarationCollection AssemblyCustomAttributes
  CodeDirectiveCollection StartDirectives
  CodeDirectiveCollection EndDirectives
Методы:
  void .ctor()
  CodeNamespaceCollection get_Namespaces()
  StringCollection get_ReferencedAssemblies()
  CodeAttributeDeclarationCollection get_AssemblyCustomAttributes()
  CodeDirectiveCollection get_StartDirectives()
  CodeDirectiveCollection get_EndDirectives()
--------------------------------------------------
Класс: System.CodeDom.CodeConditionStatement
Наследуется от: CodeStatement
Поля:
  CodeExpression <Condition>k__BackingField
  CodeStatementCollection <TrueStatements>k__BackingField
  CodeStatementCollection <FalseStatements>k__BackingField
Свойства:
  CodeExpression Condition
  CodeStatementCollection TrueStatements
  CodeStatementCollection FalseStatements
Методы:
  void .ctor()
  void .ctor(CodeExpression condition, CodeStatement[] trueStatements)
  void .ctor(CodeExpression condition, CodeStatement[] trueStatements, CodeStatement[] falseStatements)
  CodeExpression get_Condition()
  void set_Condition(CodeExpression value)
  CodeStatementCollection get_TrueStatements()
  CodeStatementCollection get_FalseStatements()
--------------------------------------------------
Класс: System.CodeDom.CodeConstructor
Наследуется от: CodeMemberMethod
Поля:
  CodeExpressionCollection <BaseConstructorArgs>k__BackingField
  CodeExpressionCollection <ChainedConstructorArgs>k__BackingField
Свойства:
  CodeExpressionCollection BaseConstructorArgs
  CodeExpressionCollection ChainedConstructorArgs
Методы:
  void .ctor()
  CodeExpressionCollection get_BaseConstructorArgs()
  CodeExpressionCollection get_ChainedConstructorArgs()
--------------------------------------------------
Класс: System.CodeDom.CodeDefaultValueExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _type
Свойства:
  CodeTypeReference Type
Методы:
  void .ctor()
  void .ctor(CodeTypeReference type)
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
--------------------------------------------------
Класс: System.CodeDom.CodeDelegateCreateExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _delegateType
  string _methodName
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeTypeReference DelegateType
  CodeExpression TargetObject
  string MethodName
Методы:
  void .ctor()
  void .ctor(CodeTypeReference delegateType, CodeExpression targetObject, string methodName)
  CodeTypeReference get_DelegateType()
  void set_DelegateType(CodeTypeReference value)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  string get_MethodName()
  void set_MethodName(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeDelegateInvokeExpression
Наследуется от: CodeExpression
Поля:
  CodeExpression <TargetObject>k__BackingField
  CodeExpressionCollection <Parameters>k__BackingField
Свойства:
  CodeExpression TargetObject
  CodeExpressionCollection Parameters
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject)
  void .ctor(CodeExpression targetObject, CodeExpression[] parameters)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  CodeExpressionCollection get_Parameters()
--------------------------------------------------
Класс: System.CodeDom.CodeDirectionExpression
Наследуется от: CodeExpression
Поля:
  CodeExpression <Expression>k__BackingField
  FieldDirection <Direction>k__BackingField
Свойства:
  CodeExpression Expression
  FieldDirection Direction
Методы:
  void .ctor()
  void .ctor(FieldDirection direction, CodeExpression expression)
  CodeExpression get_Expression()
  void set_Expression(CodeExpression value)
  FieldDirection get_Direction()
  void set_Direction(FieldDirection value)
--------------------------------------------------
Класс: System.CodeDom.CodeDirective
Наследуется от: CodeObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeDirectiveCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeDirective Item
Методы:
  void .ctor()
  void .ctor(CodeDirectiveCollection value)
  void .ctor(CodeDirective[] value)
  CodeDirective get_Item(int index)
  void set_Item(int index, CodeDirective value)
  int Add(CodeDirective value)
  void AddRange(CodeDirective[] value)
  void AddRange(CodeDirectiveCollection value)
  bool Contains(CodeDirective value)
  void CopyTo(CodeDirective[] array, int index)
  int IndexOf(CodeDirective value)
  void Insert(int index, CodeDirective value)
  void Remove(CodeDirective value)
--------------------------------------------------
Класс: System.CodeDom.CodeEntryPointMethod
Наследуется от: CodeMemberMethod
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeEventReferenceExpression
Наследуется от: CodeExpression
Поля:
  string _eventName
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeExpression TargetObject
  string EventName
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject, string eventName)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  string get_EventName()
  void set_EventName(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeExpression
Наследуется от: CodeObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeExpressionCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeExpression Item
Методы:
  void .ctor()
  void .ctor(CodeExpressionCollection value)
  void .ctor(CodeExpression[] value)
  CodeExpression get_Item(int index)
  void set_Item(int index, CodeExpression value)
  int Add(CodeExpression value)
  void AddRange(CodeExpression[] value)
  void AddRange(CodeExpressionCollection value)
  bool Contains(CodeExpression value)
  void CopyTo(CodeExpression[] array, int index)
  int IndexOf(CodeExpression value)
  void Insert(int index, CodeExpression value)
  void Remove(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeExpressionStatement
Наследуется от: CodeStatement
Поля:
  CodeExpression <Expression>k__BackingField
Свойства:
  CodeExpression Expression
Методы:
  void .ctor()
  void .ctor(CodeExpression expression)
  CodeExpression get_Expression()
  void set_Expression(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeFieldReferenceExpression
Наследуется от: CodeExpression
Поля:
  string _fieldName
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeExpression TargetObject
  string FieldName
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject, string fieldName)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  string get_FieldName()
  void set_FieldName(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeGotoStatement
Наследуется от: CodeStatement
Поля:
  string _label
Свойства:
  string Label
Методы:
  void .ctor()
  void .ctor(string label)
  string get_Label()
  void set_Label(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeIndexerExpression
Наследуется от: CodeExpression
Поля:
  CodeExpressionCollection _indices
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeExpression TargetObject
  CodeExpressionCollection Indices
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject, CodeExpression[] indices)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  CodeExpressionCollection get_Indices()
--------------------------------------------------
Класс: System.CodeDom.CodeIterationStatement
Наследуется от: CodeStatement
Поля:
  CodeStatement <InitStatement>k__BackingField
  CodeExpression <TestExpression>k__BackingField
  CodeStatement <IncrementStatement>k__BackingField
  CodeStatementCollection <Statements>k__BackingField
Свойства:
  CodeStatement InitStatement
  CodeExpression TestExpression
  CodeStatement IncrementStatement
  CodeStatementCollection Statements
Методы:
  void .ctor()
  void .ctor(CodeStatement initStatement, CodeExpression testExpression, CodeStatement incrementStatement, CodeStatement[] statements)
  CodeStatement get_InitStatement()
  void set_InitStatement(CodeStatement value)
  CodeExpression get_TestExpression()
  void set_TestExpression(CodeExpression value)
  CodeStatement get_IncrementStatement()
  void set_IncrementStatement(CodeStatement value)
  CodeStatementCollection get_Statements()
--------------------------------------------------
Класс: System.CodeDom.CodeLabeledStatement
Наследуется от: CodeStatement
Поля:
  string _label
  CodeStatement <Statement>k__BackingField
Свойства:
  string Label
  CodeStatement Statement
Методы:
  void .ctor()
  void .ctor(string label)
  void .ctor(string label, CodeStatement statement)
  string get_Label()
  void set_Label(string value)
  CodeStatement get_Statement()
  void set_Statement(CodeStatement value)
--------------------------------------------------
Класс: System.CodeDom.CodeLinePragma
Наследуется от: object
Поля:
  string _fileName
  int <LineNumber>k__BackingField
Свойства:
  string FileName
  int LineNumber
Методы:
  void .ctor()
  void .ctor(string fileName, int lineNumber)
  string get_FileName()
  void set_FileName(string value)
  int get_LineNumber()
  void set_LineNumber(int value)
--------------------------------------------------
Класс: System.CodeDom.CodeMemberEvent
Наследуется от: CodeTypeMember
Поля:
  CodeTypeReference _type
  CodeTypeReferenceCollection _implementationTypes
  CodeTypeReference <PrivateImplementationType>k__BackingField
Свойства:
  CodeTypeReference Type
  CodeTypeReference PrivateImplementationType
  CodeTypeReferenceCollection ImplementationTypes
Методы:
  void .ctor()
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
  CodeTypeReference get_PrivateImplementationType()
  void set_PrivateImplementationType(CodeTypeReference value)
  CodeTypeReferenceCollection get_ImplementationTypes()
--------------------------------------------------
Класс: System.CodeDom.CodeMemberField
Наследуется от: CodeTypeMember
Поля:
  CodeTypeReference _type
  CodeExpression <InitExpression>k__BackingField
Свойства:
  CodeTypeReference Type
  CodeExpression InitExpression
Методы:
  void .ctor()
  void .ctor(CodeTypeReference type, string name)
  void .ctor(string type, string name)
  void .ctor(Type type, string name)
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
  CodeExpression get_InitExpression()
  void set_InitExpression(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeMemberMethod
Наследуется от: CodeTypeMember
Поля:
  CodeParameterDeclarationExpressionCollection _parameters
  CodeStatementCollection _statements
  CodeTypeReference _returnType
  CodeTypeReferenceCollection _implementationTypes
  CodeAttributeDeclarationCollection _returnAttributes
  CodeTypeParameterCollection _typeParameters
  int _populated
  int ParametersCollection
  int StatementsCollection
  int ImplTypesCollection
  EventHandler PopulateParameters
  EventHandler PopulateStatements
  EventHandler PopulateImplementationTypes
  CodeTypeReference <PrivateImplementationType>k__BackingField
Свойства:
  CodeTypeReference ReturnType
  CodeStatementCollection Statements
  CodeParameterDeclarationExpressionCollection Parameters
  CodeTypeReference PrivateImplementationType
  CodeTypeReferenceCollection ImplementationTypes
  CodeAttributeDeclarationCollection ReturnTypeCustomAttributes
  CodeTypeParameterCollection TypeParameters
Методы:
  void add_PopulateParameters(EventHandler value)
  void remove_PopulateParameters(EventHandler value)
  void add_PopulateStatements(EventHandler value)
  void remove_PopulateStatements(EventHandler value)
  void add_PopulateImplementationTypes(EventHandler value)
  void remove_PopulateImplementationTypes(EventHandler value)
  CodeTypeReference get_ReturnType()
  void set_ReturnType(CodeTypeReference value)
  CodeStatementCollection get_Statements()
  CodeParameterDeclarationExpressionCollection get_Parameters()
  CodeTypeReference get_PrivateImplementationType()
  void set_PrivateImplementationType(CodeTypeReference value)
  CodeTypeReferenceCollection get_ImplementationTypes()
  CodeAttributeDeclarationCollection get_ReturnTypeCustomAttributes()
  CodeTypeParameterCollection get_TypeParameters()
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeMemberProperty
Наследуется от: CodeTypeMember
Поля:
  CodeTypeReference _type
  bool _hasGet
  bool _hasSet
  CodeTypeReferenceCollection _implementationTypes
  CodeTypeReference <PrivateImplementationType>k__BackingField
  CodeStatementCollection <GetStatements>k__BackingField
  CodeStatementCollection <SetStatements>k__BackingField
  CodeParameterDeclarationExpressionCollection <Parameters>k__BackingField
Свойства:
  CodeTypeReference PrivateImplementationType
  CodeTypeReferenceCollection ImplementationTypes
  CodeTypeReference Type
  bool HasGet
  bool HasSet
  CodeStatementCollection GetStatements
  CodeStatementCollection SetStatements
  CodeParameterDeclarationExpressionCollection Parameters
Методы:
  CodeTypeReference get_PrivateImplementationType()
  void set_PrivateImplementationType(CodeTypeReference value)
  CodeTypeReferenceCollection get_ImplementationTypes()
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
  bool get_HasGet()
  void set_HasGet(bool value)
  bool get_HasSet()
  void set_HasSet(bool value)
  CodeStatementCollection get_GetStatements()
  CodeStatementCollection get_SetStatements()
  CodeParameterDeclarationExpressionCollection get_Parameters()
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeMethodInvokeExpression
Наследуется от: CodeExpression
Поля:
  CodeMethodReferenceExpression _method
  CodeExpressionCollection <Parameters>k__BackingField
Свойства:
  CodeMethodReferenceExpression Method
  CodeExpressionCollection Parameters
Методы:
  void .ctor()
  void .ctor(CodeMethodReferenceExpression method, CodeExpression[] parameters)
  void .ctor(CodeExpression targetObject, string methodName, CodeExpression[] parameters)
  CodeMethodReferenceExpression get_Method()
  void set_Method(CodeMethodReferenceExpression value)
  CodeExpressionCollection get_Parameters()
--------------------------------------------------
Класс: System.CodeDom.CodeMethodReturnStatement
Наследуется от: CodeStatement
Поля:
  CodeExpression <Expression>k__BackingField
Свойства:
  CodeExpression Expression
Методы:
  void .ctor()
  void .ctor(CodeExpression expression)
  CodeExpression get_Expression()
  void set_Expression(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeNamespace
Наследуется от: CodeObject
Поля:
  string _name
  CodeNamespaceImportCollection _imports
  CodeCommentStatementCollection _comments
  CodeTypeDeclarationCollection _classes
  int _populated
  int ImportsCollection
  int CommentsCollection
  int TypesCollection
  EventHandler PopulateComments
  EventHandler PopulateImports
  EventHandler PopulateTypes
Свойства:
  CodeTypeDeclarationCollection Types
  CodeNamespaceImportCollection Imports
  string Name
  CodeCommentStatementCollection Comments
Методы:
  void add_PopulateComments(EventHandler value)
  void remove_PopulateComments(EventHandler value)
  void add_PopulateImports(EventHandler value)
  void remove_PopulateImports(EventHandler value)
  void add_PopulateTypes(EventHandler value)
  void remove_PopulateTypes(EventHandler value)
  void .ctor()
  void .ctor(string name)
  CodeTypeDeclarationCollection get_Types()
  CodeNamespaceImportCollection get_Imports()
  string get_Name()
  void set_Name(string value)
  CodeCommentStatementCollection get_Comments()
--------------------------------------------------
Класс: System.CodeDom.CodeNamespaceCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeNamespace Item
Методы:
  void .ctor()
  void .ctor(CodeNamespaceCollection value)
  void .ctor(CodeNamespace[] value)
  CodeNamespace get_Item(int index)
  void set_Item(int index, CodeNamespace value)
  int Add(CodeNamespace value)
  void AddRange(CodeNamespace[] value)
  void AddRange(CodeNamespaceCollection value)
  bool Contains(CodeNamespace value)
  void CopyTo(CodeNamespace[] array, int index)
  int IndexOf(CodeNamespace value)
  void Insert(int index, CodeNamespace value)
  void Remove(CodeNamespace value)
--------------------------------------------------
Класс: System.CodeDom.CodeNamespaceImport
Наследуется от: CodeObject
Поля:
  string _nameSpace
  CodeLinePragma <LinePragma>k__BackingField
Свойства:
  CodeLinePragma LinePragma
  string Namespace
Методы:
  void .ctor()
  void .ctor(string nameSpace)
  CodeLinePragma get_LinePragma()
  void set_LinePragma(CodeLinePragma value)
  string get_Namespace()
  void set_Namespace(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeNamespaceImportCollection
Наследуется от: object
Поля:
  ArrayList _data
  Dictionary`2<string, CodeNamespaceImport> _keys
Свойства:
  CodeNamespaceImport Item
  int Count
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
  int System.Collections.ICollection.Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  CodeNamespaceImport get_Item(int index)
  void set_Item(int index, CodeNamespaceImport value)
  int get_Count()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  void Add(CodeNamespaceImport value)
  void AddRange(CodeNamespaceImport[] value)
  void Clear()
  void SyncKeys()
  IEnumerator GetEnumerator()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.ICollection.get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeObjectCreateExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _createType
  CodeExpressionCollection <Parameters>k__BackingField
Свойства:
  CodeTypeReference CreateType
  CodeExpressionCollection Parameters
Методы:
  void .ctor()
  void .ctor(CodeTypeReference createType, CodeExpression[] parameters)
  void .ctor(string createType, CodeExpression[] parameters)
  void .ctor(Type createType, CodeExpression[] parameters)
  CodeTypeReference get_CreateType()
  void set_CreateType(CodeTypeReference value)
  CodeExpressionCollection get_Parameters()
--------------------------------------------------
Класс: System.CodeDom.CodeParameterDeclarationExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _type
  string _name
  CodeAttributeDeclarationCollection _customAttributes
  FieldDirection <Direction>k__BackingField
Свойства:
  CodeAttributeDeclarationCollection CustomAttributes
  FieldDirection Direction
  CodeTypeReference Type
  string Name
Методы:
  void .ctor()
  void .ctor(CodeTypeReference type, string name)
  void .ctor(string type, string name)
  void .ctor(Type type, string name)
  CodeAttributeDeclarationCollection get_CustomAttributes()
  void set_CustomAttributes(CodeAttributeDeclarationCollection value)
  FieldDirection get_Direction()
  void set_Direction(FieldDirection value)
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeParameterDeclarationExpressionCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeParameterDeclarationExpression Item
Методы:
  void .ctor()
  void .ctor(CodeParameterDeclarationExpressionCollection value)
  void .ctor(CodeParameterDeclarationExpression[] value)
  CodeParameterDeclarationExpression get_Item(int index)
  void set_Item(int index, CodeParameterDeclarationExpression value)
  int Add(CodeParameterDeclarationExpression value)
  void AddRange(CodeParameterDeclarationExpression[] value)
  void AddRange(CodeParameterDeclarationExpressionCollection value)
  bool Contains(CodeParameterDeclarationExpression value)
  void CopyTo(CodeParameterDeclarationExpression[] array, int index)
  int IndexOf(CodeParameterDeclarationExpression value)
  void Insert(int index, CodeParameterDeclarationExpression value)
  void Remove(CodeParameterDeclarationExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodePrimitiveExpression
Наследуется от: CodeExpression
Поля:
  object <Value>k__BackingField
Свойства:
  object Value
Методы:
  void .ctor()
  void .ctor(object value)
  object get_Value()
  void set_Value(object value)
--------------------------------------------------
Класс: System.CodeDom.CodePropertyReferenceExpression
Наследуется от: CodeExpression
Поля:
  string _propertyName
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeExpression TargetObject
  string PropertyName
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject, string propertyName)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  string get_PropertyName()
  void set_PropertyName(string value)
--------------------------------------------------
Класс: System.CodeDom.CodePropertySetValueReferenceExpression
Наследуется от: CodeExpression
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeRegionDirective
Наследуется от: CodeDirective
Поля:
  string _regionText
  CodeRegionMode <RegionMode>k__BackingField
Свойства:
  string RegionText
  CodeRegionMode RegionMode
Методы:
  void .ctor()
  void .ctor(CodeRegionMode regionMode, string regionText)
  string get_RegionText()
  void set_RegionText(string value)
  CodeRegionMode get_RegionMode()
  void set_RegionMode(CodeRegionMode value)
--------------------------------------------------
Класс: System.CodeDom.CodeRegionMode
Наследуется от: Enum
Поля:
  int value__
  CodeRegionMode None
  CodeRegionMode Start
  CodeRegionMode End
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.CodeRemoveEventStatement
Наследуется от: CodeStatement
Поля:
  CodeEventReferenceExpression _eventRef
  CodeExpression <Listener>k__BackingField
Свойства:
  CodeEventReferenceExpression Event
  CodeExpression Listener
Методы:
  void .ctor()
  void .ctor(CodeEventReferenceExpression eventRef, CodeExpression listener)
  void .ctor(CodeExpression targetObject, string eventName, CodeExpression listener)
  CodeEventReferenceExpression get_Event()
  void set_Event(CodeEventReferenceExpression value)
  CodeExpression get_Listener()
  void set_Listener(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeSnippetCompileUnit
Наследуется от: CodeCompileUnit
Поля:
  string _value
  CodeLinePragma <LinePragma>k__BackingField
Свойства:
  string Value
  CodeLinePragma LinePragma
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
  CodeLinePragma get_LinePragma()
  void set_LinePragma(CodeLinePragma value)
--------------------------------------------------
Класс: System.CodeDom.CodeSnippetExpression
Наследуется от: CodeExpression
Поля:
  string _value
Свойства:
  string Value
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeSnippetStatement
Наследуется от: CodeStatement
Поля:
  string _value
Свойства:
  string Value
Методы:
  void .ctor()
  void .ctor(string value)
  string get_Value()
  void set_Value(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeSnippetTypeMember
Наследуется от: CodeTypeMember
Поля:
  string _text
Свойства:
  string Text
Методы:
  void .ctor()
  void .ctor(string text)
  string get_Text()
  void set_Text(string value)
--------------------------------------------------
Класс: System.CodeDom.CodeStatement
Наследуется от: CodeObject
Поля:
  CodeDirectiveCollection _startDirectives
  CodeDirectiveCollection _endDirectives
  CodeLinePragma <LinePragma>k__BackingField
Свойства:
  CodeLinePragma LinePragma
  CodeDirectiveCollection StartDirectives
  CodeDirectiveCollection EndDirectives
Методы:
  CodeLinePragma get_LinePragma()
  void set_LinePragma(CodeLinePragma value)
  CodeDirectiveCollection get_StartDirectives()
  CodeDirectiveCollection get_EndDirectives()
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeStatementCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeStatement Item
Методы:
  void .ctor()
  void .ctor(CodeStatementCollection value)
  void .ctor(CodeStatement[] value)
  CodeStatement get_Item(int index)
  void set_Item(int index, CodeStatement value)
  int Add(CodeStatement value)
  int Add(CodeExpression value)
  void AddRange(CodeStatement[] value)
  void AddRange(CodeStatementCollection value)
  bool Contains(CodeStatement value)
  void CopyTo(CodeStatement[] array, int index)
  int IndexOf(CodeStatement value)
  void Insert(int index, CodeStatement value)
  void Remove(CodeStatement value)
--------------------------------------------------
Класс: System.CodeDom.CodeThisReferenceExpression
Наследуется от: CodeExpression
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeThrowExceptionStatement
Наследуется от: CodeStatement
Поля:
  CodeExpression <ToThrow>k__BackingField
Свойства:
  CodeExpression ToThrow
Методы:
  void .ctor()
  void .ctor(CodeExpression toThrow)
  CodeExpression get_ToThrow()
  void set_ToThrow(CodeExpression value)
--------------------------------------------------
Класс: System.CodeDom.CodeTryCatchFinallyStatement
Наследуется от: CodeStatement
Поля:
  CodeStatementCollection <TryStatements>k__BackingField
  CodeCatchClauseCollection <CatchClauses>k__BackingField
  CodeStatementCollection <FinallyStatements>k__BackingField
Свойства:
  CodeStatementCollection TryStatements
  CodeCatchClauseCollection CatchClauses
  CodeStatementCollection FinallyStatements
Методы:
  void .ctor()
  void .ctor(CodeStatement[] tryStatements, CodeCatchClause[] catchClauses)
  void .ctor(CodeStatement[] tryStatements, CodeCatchClause[] catchClauses, CodeStatement[] finallyStatements)
  CodeStatementCollection get_TryStatements()
  CodeCatchClauseCollection get_CatchClauses()
  CodeStatementCollection get_FinallyStatements()
--------------------------------------------------
Класс: System.CodeDom.CodeTypeConstructor
Наследуется от: CodeMemberMethod
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeTypeDeclaration
Наследуется от: CodeTypeMember
Поля:
  CodeTypeReferenceCollection _baseTypes
  CodeTypeMemberCollection _members
  bool _isEnum
  bool _isStruct
  int _populated
  int BaseTypesCollection
  int MembersCollection
  CodeTypeParameterCollection _typeParameters
  EventHandler PopulateBaseTypes
  EventHandler PopulateMembers
  TypeAttributes <TypeAttributes>k__BackingField
  bool <IsPartial>k__BackingField
Свойства:
  TypeAttributes TypeAttributes
  CodeTypeReferenceCollection BaseTypes
  bool IsClass
  bool IsStruct
  bool IsEnum
  bool IsInterface
  bool IsPartial
  CodeTypeMemberCollection Members
  CodeTypeParameterCollection TypeParameters
Методы:
  void add_PopulateBaseTypes(EventHandler value)
  void remove_PopulateBaseTypes(EventHandler value)
  void add_PopulateMembers(EventHandler value)
  void remove_PopulateMembers(EventHandler value)
  void .ctor()
  void .ctor(string name)
  TypeAttributes get_TypeAttributes()
  void set_TypeAttributes(TypeAttributes value)
  CodeTypeReferenceCollection get_BaseTypes()
  bool get_IsClass()
  void set_IsClass(bool value)
  bool get_IsStruct()
  void set_IsStruct(bool value)
  bool get_IsEnum()
  void set_IsEnum(bool value)
  bool get_IsInterface()
  void set_IsInterface(bool value)
  bool get_IsPartial()
  void set_IsPartial(bool value)
  CodeTypeMemberCollection get_Members()
  CodeTypeParameterCollection get_TypeParameters()
--------------------------------------------------
Класс: System.CodeDom.CodeTypeDeclarationCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeTypeDeclaration Item
Методы:
  void .ctor()
  void .ctor(CodeTypeDeclarationCollection value)
  void .ctor(CodeTypeDeclaration[] value)
  CodeTypeDeclaration get_Item(int index)
  void set_Item(int index, CodeTypeDeclaration value)
  int Add(CodeTypeDeclaration value)
  void AddRange(CodeTypeDeclaration[] value)
  void AddRange(CodeTypeDeclarationCollection value)
  bool Contains(CodeTypeDeclaration value)
  void CopyTo(CodeTypeDeclaration[] array, int index)
  int IndexOf(CodeTypeDeclaration value)
  void Insert(int index, CodeTypeDeclaration value)
  void Remove(CodeTypeDeclaration value)
--------------------------------------------------
Класс: System.CodeDom.CodeTypeDelegate
Наследуется от: CodeTypeDeclaration
Поля:
  CodeTypeReference _returnType
  CodeParameterDeclarationExpressionCollection <Parameters>k__BackingField
Свойства:
  CodeTypeReference ReturnType
  CodeParameterDeclarationExpressionCollection Parameters
Методы:
  void .ctor()
  void .ctor(string name)
  CodeTypeReference get_ReturnType()
  void set_ReturnType(CodeTypeReference value)
  CodeParameterDeclarationExpressionCollection get_Parameters()
--------------------------------------------------
Класс: System.CodeDom.CodeTypeMember
Наследуется от: CodeObject
Поля:
  string _name
  CodeAttributeDeclarationCollection _customAttributes
  CodeDirectiveCollection _startDirectives
  CodeDirectiveCollection _endDirectives
  MemberAttributes <Attributes>k__BackingField
  CodeLinePragma <LinePragma>k__BackingField
  CodeCommentStatementCollection <Comments>k__BackingField
Свойства:
  string Name
  MemberAttributes Attributes
  CodeAttributeDeclarationCollection CustomAttributes
  CodeLinePragma LinePragma
  CodeCommentStatementCollection Comments
  CodeDirectiveCollection StartDirectives
  CodeDirectiveCollection EndDirectives
Методы:
  string get_Name()
  void set_Name(string value)
  MemberAttributes get_Attributes()
  void set_Attributes(MemberAttributes value)
  CodeAttributeDeclarationCollection get_CustomAttributes()
  void set_CustomAttributes(CodeAttributeDeclarationCollection value)
  CodeLinePragma get_LinePragma()
  void set_LinePragma(CodeLinePragma value)
  CodeCommentStatementCollection get_Comments()
  CodeDirectiveCollection get_StartDirectives()
  CodeDirectiveCollection get_EndDirectives()
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.CodeTypeMemberCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeTypeMember Item
Методы:
  void .ctor()
  void .ctor(CodeTypeMemberCollection value)
  void .ctor(CodeTypeMember[] value)
  CodeTypeMember get_Item(int index)
  void set_Item(int index, CodeTypeMember value)
  int Add(CodeTypeMember value)
  void AddRange(CodeTypeMember[] value)
  void AddRange(CodeTypeMemberCollection value)
  bool Contains(CodeTypeMember value)
  void CopyTo(CodeTypeMember[] array, int index)
  int IndexOf(CodeTypeMember value)
  void Insert(int index, CodeTypeMember value)
  void Remove(CodeTypeMember value)
--------------------------------------------------
Класс: System.CodeDom.CodeTypeOfExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _type
Свойства:
  CodeTypeReference Type
Методы:
  void .ctor()
  void .ctor(CodeTypeReference type)
  void .ctor(string type)
  void .ctor(Type type)
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
--------------------------------------------------
Класс: System.CodeDom.CodeTypeParameter
Наследуется от: CodeObject
Поля:
  string _name
  CodeAttributeDeclarationCollection _customAttributes
  CodeTypeReferenceCollection _constraints
  bool <HasConstructorConstraint>k__BackingField
Свойства:
  string Name
  CodeTypeReferenceCollection Constraints
  CodeAttributeDeclarationCollection CustomAttributes
  bool HasConstructorConstraint
Методы:
  void .ctor()
  void .ctor(string name)
  string get_Name()
  void set_Name(string value)
  CodeTypeReferenceCollection get_Constraints()
  CodeAttributeDeclarationCollection get_CustomAttributes()
  bool get_HasConstructorConstraint()
  void set_HasConstructorConstraint(bool value)
--------------------------------------------------
Класс: System.CodeDom.CodeTypeParameterCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CodeTypeParameter Item
Методы:
  void .ctor()
  void .ctor(CodeTypeParameterCollection value)
  void .ctor(CodeTypeParameter[] value)
  CodeTypeParameter get_Item(int index)
  void set_Item(int index, CodeTypeParameter value)
  int Add(CodeTypeParameter value)
  void Add(string value)
  void AddRange(CodeTypeParameter[] value)
  void AddRange(CodeTypeParameterCollection value)
  bool Contains(CodeTypeParameter value)
  void CopyTo(CodeTypeParameter[] array, int index)
  int IndexOf(CodeTypeParameter value)
  void Insert(int index, CodeTypeParameter value)
  void Remove(CodeTypeParameter value)
--------------------------------------------------
Класс: System.CodeDom.CodeTypeReferenceExpression
Наследуется от: CodeExpression
Поля:
  CodeTypeReference _type
Свойства:
  CodeTypeReference Type
Методы:
  void .ctor()
  void .ctor(CodeTypeReference type)
  void .ctor(string type)
  void .ctor(Type type)
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
--------------------------------------------------
Класс: System.CodeDom.CodeVariableDeclarationStatement
Наследуется от: CodeStatement
Поля:
  CodeTypeReference _type
  string _name
  CodeExpression <InitExpression>k__BackingField
Свойства:
  CodeExpression InitExpression
  string Name
  CodeTypeReference Type
Методы:
  void .ctor()
  void .ctor(CodeTypeReference type, string name)
  void .ctor(string type, string name)
  void .ctor(Type type, string name)
  void .ctor(CodeTypeReference type, string name, CodeExpression initExpression)
  void .ctor(string type, string name, CodeExpression initExpression)
  void .ctor(Type type, string name, CodeExpression initExpression)
  CodeExpression get_InitExpression()
  void set_InitExpression(CodeExpression value)
  string get_Name()
  void set_Name(string value)
  CodeTypeReference get_Type()
  void set_Type(CodeTypeReference value)
--------------------------------------------------
Класс: System.CodeDom.CodeVariableReferenceExpression
Наследуется от: CodeExpression
Поля:
  string _variableName
Свойства:
  string VariableName
Методы:
  void .ctor()
  void .ctor(string variableName)
  string get_VariableName()
  void set_VariableName(string value)
--------------------------------------------------
Класс: System.CodeDom.FieldDirection
Наследуется от: Enum
Поля:
  int value__
  FieldDirection In
  FieldDirection Out
  FieldDirection Ref
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.MemberAttributes
Наследуется от: Enum
Поля:
  int value__
  MemberAttributes Abstract
  MemberAttributes Final
  MemberAttributes Static
  MemberAttributes Override
  MemberAttributes Const
  MemberAttributes New
  MemberAttributes Overloaded
  MemberAttributes Assembly
  MemberAttributes FamilyAndAssembly
  MemberAttributes Family
  MemberAttributes FamilyOrAssembly
  MemberAttributes Private
  MemberAttributes Public
  MemberAttributes AccessMask
  MemberAttributes ScopeMask
  MemberAttributes VTableMask
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.CodeMethodReferenceExpression
Наследуется от: CodeExpression
Поля:
  string _methodName
  CodeTypeReferenceCollection _typeArguments
  CodeExpression <TargetObject>k__BackingField
Свойства:
  CodeExpression TargetObject
  string MethodName
  CodeTypeReferenceCollection TypeArguments
Методы:
  void .ctor()
  void .ctor(CodeExpression targetObject, string methodName)
  void .ctor(CodeExpression targetObject, string methodName, CodeTypeReference[] typeParameters)
  CodeExpression get_TargetObject()
  void set_TargetObject(CodeExpression value)
  string get_MethodName()
  void set_MethodName(string value)
  CodeTypeReferenceCollection get_TypeArguments()
--------------------------------------------------
Класс: System.CodeDom.Compiler.TempFileCollection
Наследуется от: object
Поля:
  string _basePath
  string _tempDir
  Hashtable _files
  bool <KeepFiles>k__BackingField
Свойства:
  int Count
  int System.Collections.ICollection.Count
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.ICollection.IsSynchronized
  string TempDir
  string BasePath
  bool KeepFiles
Методы:
  void .ctor()
  void .ctor(string tempDir)
  void .ctor(string tempDir, bool keepFiles)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void Finalize()
  string AddExtension(string fileExtension)
  string AddExtension(string fileExtension, bool keepFile)
  void AddFile(string fileName, bool keepFile)
  IEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.ICollection.CopyTo(Array array, int start)
  void CopyTo(String[] fileNames, int start)
  int get_Count()
  int System.Collections.ICollection.get_Count()
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.ICollection.get_IsSynchronized()
  string get_TempDir()
  string get_BasePath()
  void EnsureTempNameCreated()
  bool get_KeepFiles()
  void set_KeepFiles(bool value)
  bool KeepFile(string fileName)
  void Delete()
  void Delete(string fileName)
  void SafeDelete()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeCompiler
Наследуется от: CodeGenerator
Поля:
Свойства:
  string FileExtension
  string CompilerName
Методы:
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit e)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(CompilerParameters options, string fileName)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(CompilerParameters options, string source)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(CompilerParameters options, String[] sources)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(CompilerParameters options, String[] fileNames)
  CompilerResults System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(CompilerParameters options, CodeCompileUnit[] ea)
  string get_FileExtension()
  string get_CompilerName()
  CompilerResults FromDom(CompilerParameters options, CodeCompileUnit e)
  CompilerResults FromFile(CompilerParameters options, string fileName)
  CompilerResults FromSource(CompilerParameters options, string source)
  CompilerResults FromDomBatch(CompilerParameters options, CodeCompileUnit[] ea)
  void ResolveReferencedAssemblies(CompilerParameters options, CodeCompileUnit e)
  CompilerResults FromFileBatch(CompilerParameters options, String[] fileNames)
  void ProcessCompilerOutputLine(CompilerResults results, string line)
  string CmdArgsFromParameters(CompilerParameters options)
  string GetResponseFileCmdArgs(CompilerParameters options, string cmdArgs)
  CompilerResults FromSourceBatch(CompilerParameters options, String[] sources)
  string JoinStringArray(String[] sa, string separator)
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeDomProvider
Наследуется от: Component
Поля:
  Dictionary`2<string, CompilerInfo> s_compilerLanguages
  Dictionary`2<string, CompilerInfo> s_compilerExtensions
  List`1<CompilerInfo> s_allCompilerInfo
Свойства:
  string FileExtension
  LanguageOptions LanguageOptions
Методы:
  void .cctor()
  void AddCompilerInfo(CompilerInfo compilerInfo)
  CodeDomProvider CreateProvider(string language, IDictionary`2<string, string> providerOptions)
  CodeDomProvider CreateProvider(string language)
  string GetLanguageFromExtension(string extension)
  bool IsDefinedLanguage(string language)
  bool IsDefinedExtension(string extension)
  CompilerInfo GetCompilerInfo(string language)
  CompilerInfo GetCompilerInfoForLanguageNoThrow(string language)
  CompilerInfo GetCompilerInfoForExtensionNoThrow(string extension)
  CompilerInfo[] GetAllCompilerInfo()
  string get_FileExtension()
  LanguageOptions get_LanguageOptions()
  ICodeGenerator CreateGenerator()
  ICodeGenerator CreateGenerator(TextWriter output)
  ICodeGenerator CreateGenerator(string fileName)
  ICodeCompiler CreateCompiler()
  ICodeParser CreateParser()
  TypeConverter GetConverter(Type type)
  CompilerResults CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit[] compilationUnits)
  CompilerResults CompileAssemblyFromFile(CompilerParameters options, String[] fileNames)
  CompilerResults CompileAssemblyFromSource(CompilerParameters options, String[] sources)
  bool IsValidIdentifier(string value)
  string CreateEscapedIdentifier(string value)
  string CreateValidIdentifier(string value)
  string GetTypeOutput(CodeTypeReference type)
  bool Supports(GeneratorSupport generatorSupport)
  void GenerateCodeFromExpression(CodeExpression expression, TextWriter writer, CodeGeneratorOptions options)
  void GenerateCodeFromStatement(CodeStatement statement, TextWriter writer, CodeGeneratorOptions options)
  void GenerateCodeFromNamespace(CodeNamespace codeNamespace, TextWriter writer, CodeGeneratorOptions options)
  void GenerateCodeFromCompileUnit(CodeCompileUnit compileUnit, TextWriter writer, CodeGeneratorOptions options)
  void GenerateCodeFromType(CodeTypeDeclaration codeType, TextWriter writer, CodeGeneratorOptions options)
  void GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)
  CodeCompileUnit Parse(TextReader codeStream)
  ICodeCompiler CreateCompilerHelper()
  ICodeGenerator CreateGeneratorHelper()
  ICodeParser CreateParserHelper()
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeGenerator
Наследуется от: object
Поля:
  int ParameterMultilineThreshold
  ExposedTabStringIndentedTextWriter _output
  CodeGeneratorOptions _options
  CodeTypeDeclaration _currentClass
  CodeTypeMember _currentMember
  bool _inNestedBinary
Свойства:
  CodeTypeDeclaration CurrentClass
  string CurrentTypeName
  CodeTypeMember CurrentMember
  string CurrentMemberName
  bool IsCurrentInterface
  bool IsCurrentClass
  bool IsCurrentStruct
  bool IsCurrentEnum
  bool IsCurrentDelegate
  int Indent
  string NullToken
  TextWriter Output
  CodeGeneratorOptions Options
Методы:
  CodeTypeDeclaration get_CurrentClass()
  string get_CurrentTypeName()
  CodeTypeMember get_CurrentMember()
  string get_CurrentMemberName()
  bool get_IsCurrentInterface()
  bool get_IsCurrentClass()
  bool get_IsCurrentStruct()
  bool get_IsCurrentEnum()
  bool get_IsCurrentDelegate()
  int get_Indent()
  void set_Indent(int value)
  string get_NullToken()
  TextWriter get_Output()
  CodeGeneratorOptions get_Options()
  void GenerateType(CodeTypeDeclaration e)
  void GenerateDirectives(CodeDirectiveCollection directives)
  void GenerateTypeMember(CodeTypeMember member, CodeTypeDeclaration declaredType)
  void GenerateTypeConstructors(CodeTypeDeclaration e)
  void GenerateNamespaces(CodeCompileUnit e)
  void GenerateTypes(CodeNamespace e)
  bool System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport support)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace e, TextWriter w, CodeGeneratorOptions o)
  void System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement e, TextWriter w, CodeGeneratorOptions o)
  void GenerateCodeFromMember(CodeTypeMember member, TextWriter writer, CodeGeneratorOptions options)
  bool System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(string value)
  void System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(string value)
  string System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(string value)
  string System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(string value)
  string System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference type)
  void GenerateConstructors(CodeTypeDeclaration e)
  void GenerateEvents(CodeTypeDeclaration e)
  void GenerateExpression(CodeExpression e)
  void GenerateFields(CodeTypeDeclaration e)
  void GenerateSnippetMembers(CodeTypeDeclaration e)
  void GenerateSnippetCompileUnit(CodeSnippetCompileUnit e)
  void GenerateMethods(CodeTypeDeclaration e)
  void GenerateNestedTypes(CodeTypeDeclaration e)
  void GenerateCompileUnit(CodeCompileUnit e)
  void GenerateNamespace(CodeNamespace e)
  void GenerateNamespaceImports(CodeNamespace e)
  void GenerateProperties(CodeTypeDeclaration e)
  void GenerateStatement(CodeStatement e)
  void GenerateStatements(CodeStatementCollection stmts)
  void OutputAttributeDeclarations(CodeAttributeDeclarationCollection attributes)
  void OutputAttributeArgument(CodeAttributeArgument arg)
  void OutputDirection(FieldDirection dir)
  void OutputFieldScopeModifier(MemberAttributes attributes)
  void OutputMemberAccessModifier(MemberAttributes attributes)
  void OutputMemberScopeModifier(MemberAttributes attributes)
  void OutputType(CodeTypeReference typeRef)
  void OutputTypeAttributes(TypeAttributes attributes, bool isStruct, bool isEnum)
  void OutputTypeNamePair(CodeTypeReference typeRef, string name)
  void OutputIdentifier(string ident)
  void OutputExpressionList(CodeExpressionCollection expressions)
  void OutputExpressionList(CodeExpressionCollection expressions, bool newlineBetweenItems)
  void OutputOperator(CodeBinaryOperatorType op)
  void OutputParameters(CodeParameterDeclarationExpressionCollection parameters)
  void GenerateArrayCreateExpression(CodeArrayCreateExpression e)
  void GenerateBaseReferenceExpression(CodeBaseReferenceExpression e)
  void GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression e)
  void ContinueOnNewLine(string st)
  void GenerateCastExpression(CodeCastExpression e)
  void GenerateDelegateCreateExpression(CodeDelegateCreateExpression e)
  void GenerateFieldReferenceExpression(CodeFieldReferenceExpression e)
  void GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression e)
  void GenerateVariableReferenceExpression(CodeVariableReferenceExpression e)
  void GenerateIndexerExpression(CodeIndexerExpression e)
  void GenerateArrayIndexerExpression(CodeArrayIndexerExpression e)
  void GenerateSnippetExpression(CodeSnippetExpression e)
  void GenerateMethodInvokeExpression(CodeMethodInvokeExpression e)
  void GenerateMethodReferenceExpression(CodeMethodReferenceExpression e)
  void GenerateEventReferenceExpression(CodeEventReferenceExpression e)
  void GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression e)
  void GenerateObjectCreateExpression(CodeObjectCreateExpression e)
  void GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression e)
  void GenerateDirectionExpression(CodeDirectionExpression e)
  void GeneratePrimitiveExpression(CodePrimitiveExpression e)
  void GenerateSingleFloatValue(float s)
  void GenerateDoubleValue(double d)
  void GenerateDecimalValue(decimal d)
  void GenerateDefaultValueExpression(CodeDefaultValueExpression e)
  void GeneratePropertyReferenceExpression(CodePropertyReferenceExpression e)
  void GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)
  void GenerateThisReferenceExpression(CodeThisReferenceExpression e)
  void GenerateTypeReferenceExpression(CodeTypeReferenceExpression e)
  void GenerateTypeOfExpression(CodeTypeOfExpression e)
  void GenerateExpressionStatement(CodeExpressionStatement e)
  void GenerateIterationStatement(CodeIterationStatement e)
  void GenerateThrowExceptionStatement(CodeThrowExceptionStatement e)
  void GenerateCommentStatement(CodeCommentStatement e)
  void GenerateCommentStatements(CodeCommentStatementCollection e)
  void GenerateComment(CodeComment e)
  void GenerateMethodReturnStatement(CodeMethodReturnStatement e)
  void GenerateConditionStatement(CodeConditionStatement e)
  void GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)
  void GenerateAssignStatement(CodeAssignStatement e)
  void GenerateAttachEventStatement(CodeAttachEventStatement e)
  void GenerateRemoveEventStatement(CodeRemoveEventStatement e)
  void GenerateGotoStatement(CodeGotoStatement e)
  void GenerateLabeledStatement(CodeLabeledStatement e)
  void GenerateSnippetStatement(CodeSnippetStatement e)
  void GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement e)
  void GenerateLinePragmaStart(CodeLinePragma e)
  void GenerateLinePragmaEnd(CodeLinePragma e)
  void GenerateEvent(CodeMemberEvent e, CodeTypeDeclaration c)
  void GenerateField(CodeMemberField e)
  void GenerateSnippetMember(CodeSnippetTypeMember e)
  void GenerateEntryPointMethod(CodeEntryPointMethod e, CodeTypeDeclaration c)
  void GenerateMethod(CodeMemberMethod e, CodeTypeDeclaration c)
  void GenerateProperty(CodeMemberProperty e, CodeTypeDeclaration c)
  void GenerateConstructor(CodeConstructor e, CodeTypeDeclaration c)
  void GenerateTypeConstructor(CodeTypeConstructor e)
  void GenerateTypeStart(CodeTypeDeclaration e)
  void GenerateTypeEnd(CodeTypeDeclaration e)
  void GenerateCompileUnitStart(CodeCompileUnit e)
  void GenerateCompileUnitEnd(CodeCompileUnit e)
  void GenerateNamespaceStart(CodeNamespace e)
  void GenerateNamespaceEnd(CodeNamespace e)
  void GenerateNamespaceImport(CodeNamespaceImport e)
  void GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection attributes)
  void GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection attributes)
  bool Supports(GeneratorSupport support)
  bool IsValidIdentifier(string value)
  void ValidateIdentifier(string value)
  string CreateEscapedIdentifier(string value)
  string CreateValidIdentifier(string value)
  string GetTypeOutput(CodeTypeReference value)
  string QuoteSnippetString(string value)
  bool IsValidLanguageIndependentIdentifier(string value)
  bool IsValidLanguageIndependentTypeName(string value)
  void ValidateIdentifiers(CodeObject e)
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeGeneratorOptions
Наследуется от: object
Поля:
  IDictionary _options
Свойства:
  object Item
  string IndentString
  string BracingStyle
  bool ElseOnClosing
  bool BlankLinesBetweenMembers
  bool VerbatimOrder
Методы:
  void .ctor()
  object get_Item(string index)
  void set_Item(string index, object value)
  string get_IndentString()
  void set_IndentString(string value)
  string get_BracingStyle()
  void set_BracingStyle(string value)
  bool get_ElseOnClosing()
  void set_ElseOnClosing(bool value)
  bool get_BlankLinesBetweenMembers()
  void set_BlankLinesBetweenMembers(bool value)
  bool get_VerbatimOrder()
  void set_VerbatimOrder(bool value)
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeParser
Наследуется от: object
Поля:
Свойства:
Методы:
  CodeCompileUnit Parse(TextReader codeStream)
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeValidator
Наследуется от: object
Поля:
  Char[] s_newLineChars
  CodeTypeDeclaration _currentClass
Свойства:
  bool IsCurrentInterface
  bool IsCurrentEnum
  bool IsCurrentDelegate
Методы:
  void ValidateIdentifiers(CodeObject e)
  void ValidateTypeMember(CodeTypeMember e)
  void ValidateCodeCompileUnit(CodeCompileUnit e)
  void ValidateSnippetCompileUnit(CodeSnippetCompileUnit e)
  void ValidateCompileUnitStart(CodeCompileUnit e)
  void ValidateCompileUnitEnd(CodeCompileUnit e)
  void ValidateNamespaces(CodeCompileUnit e)
  void ValidateNamespace(CodeNamespace e)
  void ValidateNamespaceStart(CodeNamespace e)
  void ValidateNamespaceImports(CodeNamespace e)
  void ValidateNamespaceImport(CodeNamespaceImport e)
  void ValidateAttributes(CodeAttributeDeclarationCollection attributes)
  void ValidateAttributeArgument(CodeAttributeArgument arg)
  void ValidateTypes(CodeNamespace e)
  void ValidateTypeDeclaration(CodeTypeDeclaration e)
  void ValidateTypeMembers(CodeTypeDeclaration e)
  void ValidateTypeParameters(CodeTypeParameterCollection parameters)
  void ValidateTypeParameter(CodeTypeParameter e)
  void ValidateField(CodeMemberField e)
  void ValidateConstructor(CodeConstructor e)
  void ValidateProperty(CodeMemberProperty e)
  void ValidateMemberMethod(CodeMemberMethod e)
  void ValidateTypeConstructor(CodeTypeConstructor e)
  void ValidateMethod(CodeMemberMethod e)
  void ValidateSnippetMember(CodeSnippetTypeMember e)
  void ValidateTypeStart(CodeTypeDeclaration e)
  void ValidateCommentStatements(CodeCommentStatementCollection e)
  void ValidateCommentStatement(CodeCommentStatement e)
  void ValidateComment(CodeComment e)
  void ValidateStatement(CodeStatement e)
  void ValidateStatements(CodeStatementCollection stmts)
  void ValidateExpressionStatement(CodeExpressionStatement e)
  void ValidateIterationStatement(CodeIterationStatement e)
  void ValidateThrowExceptionStatement(CodeThrowExceptionStatement e)
  void ValidateMethodReturnStatement(CodeMethodReturnStatement e)
  void ValidateConditionStatement(CodeConditionStatement e)
  void ValidateTryCatchFinallyStatement(CodeTryCatchFinallyStatement e)
  void ValidateAssignStatement(CodeAssignStatement e)
  void ValidateAttachEventStatement(CodeAttachEventStatement e)
  void ValidateRemoveEventStatement(CodeRemoveEventStatement e)
  void ValidateGotoStatement(CodeGotoStatement e)
  void ValidateLabeledStatement(CodeLabeledStatement e)
  void ValidateVariableDeclarationStatement(CodeVariableDeclarationStatement e)
  void ValidateLinePragmaStart(CodeLinePragma e)
  void ValidateEvent(CodeMemberEvent e)
  void ValidateParameters(CodeParameterDeclarationExpressionCollection parameters)
  void ValidateSnippetStatement(CodeSnippetStatement e)
  void ValidateExpressionList(CodeExpressionCollection expressions)
  void ValidateTypeReference(CodeTypeReference e)
  void ValidateTypeReferences(CodeTypeReferenceCollection refs)
  void ValidateArity(CodeTypeReference e)
  void ValidateTypeName(object e, string propertyName, string typeName)
  void ValidateIdentifier(object e, string propertyName, string identifier)
  void ValidateExpression(CodeExpression e)
  void ValidateArrayCreateExpression(CodeArrayCreateExpression e)
  void ValidateBaseReferenceExpression(CodeBaseReferenceExpression e)
  void ValidateBinaryOperatorExpression(CodeBinaryOperatorExpression e)
  void ValidateCastExpression(CodeCastExpression e)
  void ValidateDefaultValueExpression(CodeDefaultValueExpression e)
  void ValidateDelegateCreateExpression(CodeDelegateCreateExpression e)
  void ValidateFieldReferenceExpression(CodeFieldReferenceExpression e)
  void ValidateArgumentReferenceExpression(CodeArgumentReferenceExpression e)
  void ValidateVariableReferenceExpression(CodeVariableReferenceExpression e)
  void ValidateIndexerExpression(CodeIndexerExpression e)
  void ValidateArrayIndexerExpression(CodeArrayIndexerExpression e)
  void ValidateSnippetExpression(CodeSnippetExpression e)
  void ValidateMethodInvokeExpression(CodeMethodInvokeExpression e)
  void ValidateMethodReferenceExpression(CodeMethodReferenceExpression e)
  void ValidateEventReferenceExpression(CodeEventReferenceExpression e)
  void ValidateDelegateInvokeExpression(CodeDelegateInvokeExpression e)
  void ValidateObjectCreateExpression(CodeObjectCreateExpression e)
  void ValidateParameterDeclarationExpression(CodeParameterDeclarationExpression e)
  void ValidateDirectionExpression(CodeDirectionExpression e)
  void ValidatePrimitiveExpression(CodePrimitiveExpression e)
  void ValidatePropertyReferenceExpression(CodePropertyReferenceExpression e)
  void ValidatePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression e)
  void ValidateThisReferenceExpression(CodeThisReferenceExpression e)
  void ValidateTypeOfExpression(CodeTypeOfExpression e)
  void ValidateCodeDirectives(CodeDirectiveCollection e)
  void ValidateCodeDirective(CodeDirective e)
  void ValidateChecksumPragma(CodeChecksumPragma e)
  void ValidateRegionDirective(CodeRegionDirective e)
  bool get_IsCurrentInterface()
  bool get_IsCurrentEnum()
  bool get_IsCurrentDelegate()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerError
Наследуется от: object
Поля:
  int <Line>k__BackingField
  int <Column>k__BackingField
  string <ErrorNumber>k__BackingField
  string <ErrorText>k__BackingField
  bool <IsWarning>k__BackingField
  string <FileName>k__BackingField
Свойства:
  int Line
  int Column
  string ErrorNumber
  string ErrorText
  bool IsWarning
  string FileName
  string WarningString
Методы:
  void .ctor()
  void .ctor(string fileName, int line, int column, string errorNumber, string errorText)
  int get_Line()
  void set_Line(int value)
  int get_Column()
  void set_Column(int value)
  string get_ErrorNumber()
  void set_ErrorNumber(string value)
  string get_ErrorText()
  void set_ErrorText(string value)
  bool get_IsWarning()
  void set_IsWarning(bool value)
  string get_FileName()
  void set_FileName(string value)
  string ToString()
  string get_WarningString()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerErrorCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  CompilerError Item
  bool HasErrors
  bool HasWarnings
Методы:
  void .ctor()
  void .ctor(CompilerErrorCollection value)
  void .ctor(CompilerError[] value)
  CompilerError get_Item(int index)
  void set_Item(int index, CompilerError value)
  int Add(CompilerError value)
  void AddRange(CompilerError[] value)
  void AddRange(CompilerErrorCollection value)
  bool Contains(CompilerError value)
  void CopyTo(CompilerError[] array, int index)
  bool get_HasErrors()
  bool get_HasWarnings()
  int IndexOf(CompilerError value)
  void Insert(int index, CompilerError value)
  void Remove(CompilerError value)
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerInfo
Наследуется от: object
Поля:
  IDictionary`2<string, string> _providerOptions
  string _codeDomProviderTypeName
  CompilerParameters _compilerParams
  String[] _compilerLanguages
  String[] _compilerExtensions
  Type _type
Свойства:
  Type CodeDomProviderType
  bool IsCodeDomProviderTypeValid
  CompilerParameters CompilerParams
  IDictionary`2<string, string> ProviderOptions
Методы:
  void .ctor()
  String[] GetLanguages()
  String[] GetExtensions()
  Type get_CodeDomProviderType()
  bool get_IsCodeDomProviderTypeValid()
  CodeDomProvider CreateProvider()
  CodeDomProvider CreateProvider(IDictionary`2<string, string> providerOptions)
  CompilerParameters CreateDefaultCompilerParameters()
  void .ctor(CompilerParameters compilerParams, string codeDomProviderTypeName, String[] compilerLanguages, String[] compilerExtensions)
  void .ctor(CompilerParameters compilerParams, string codeDomProviderTypeName)
  int GetHashCode()
  bool Equals(object o)
  CompilerParameters CloneCompilerParameters()
  String[] CloneCompilerLanguages()
  String[] CloneCompilerExtensions()
  CompilerParameters get_CompilerParams()
  IDictionary`2<string, string> get_ProviderOptions()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerParameters
Наследуется от: object
Поля:
  Evidence _evidence
  StringCollection _assemblyNames
  StringCollection _embeddedResources
  StringCollection _linkedResources
  TempFileCollection _tempFiles
  string <CoreAssemblyFileName>k__BackingField
  bool <GenerateExecutable>k__BackingField
  bool <GenerateInMemory>k__BackingField
  string <MainClass>k__BackingField
  string <OutputAssembly>k__BackingField
  bool <IncludeDebugInformation>k__BackingField
  bool <TreatWarningsAsErrors>k__BackingField
  int <WarningLevel>k__BackingField
  string <CompilerOptions>k__BackingField
  string <Win32Resource>k__BackingField
  IntPtr <UserToken>k__BackingField
Свойства:
  Evidence Evidence
  string CoreAssemblyFileName
  bool GenerateExecutable
  bool GenerateInMemory
  StringCollection ReferencedAssemblies
  string MainClass
  string OutputAssembly
  TempFileCollection TempFiles
  bool IncludeDebugInformation
  bool TreatWarningsAsErrors
  int WarningLevel
  string CompilerOptions
  string Win32Resource
  StringCollection EmbeddedResources
  StringCollection LinkedResources
  IntPtr UserToken
Методы:
  Evidence get_Evidence()
  void set_Evidence(Evidence value)
  void .ctor()
  void .ctor(String[] assemblyNames)
  void .ctor(String[] assemblyNames, string outputName)
  void .ctor(String[] assemblyNames, string outputName, bool includeDebugInformation)
  string get_CoreAssemblyFileName()
  void set_CoreAssemblyFileName(string value)
  bool get_GenerateExecutable()
  void set_GenerateExecutable(bool value)
  bool get_GenerateInMemory()
  void set_GenerateInMemory(bool value)
  StringCollection get_ReferencedAssemblies()
  string get_MainClass()
  void set_MainClass(string value)
  string get_OutputAssembly()
  void set_OutputAssembly(string value)
  TempFileCollection get_TempFiles()
  void set_TempFiles(TempFileCollection value)
  bool get_IncludeDebugInformation()
  void set_IncludeDebugInformation(bool value)
  bool get_TreatWarningsAsErrors()
  void set_TreatWarningsAsErrors(bool value)
  int get_WarningLevel()
  void set_WarningLevel(int value)
  string get_CompilerOptions()
  void set_CompilerOptions(string value)
  string get_Win32Resource()
  void set_Win32Resource(string value)
  StringCollection get_EmbeddedResources()
  StringCollection get_LinkedResources()
  IntPtr get_UserToken()
  void set_UserToken(IntPtr value)
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerResults
Наследуется от: object
Поля:
  Evidence _evidence
  CompilerErrorCollection _errors
  StringCollection _output
  Assembly _compiledAssembly
  TempFileCollection _tempFiles
  string <PathToAssembly>k__BackingField
  int <NativeCompilerReturnValue>k__BackingField
Свойства:
  Evidence Evidence
  TempFileCollection TempFiles
  Assembly CompiledAssembly
  CompilerErrorCollection Errors
  StringCollection Output
  string PathToAssembly
  int NativeCompilerReturnValue
Методы:
  Evidence get_Evidence()
  void set_Evidence(Evidence value)
  void .ctor(TempFileCollection tempFiles)
  TempFileCollection get_TempFiles()
  void set_TempFiles(TempFileCollection value)
  Assembly get_CompiledAssembly()
  void set_CompiledAssembly(Assembly value)
  CompilerErrorCollection get_Errors()
  StringCollection get_Output()
  string get_PathToAssembly()
  void set_PathToAssembly(string value)
  int get_NativeCompilerReturnValue()
  void set_NativeCompilerReturnValue(int value)
--------------------------------------------------
Класс: System.CodeDom.Compiler.ExposedTabStringIndentedTextWriter
Наследуется от: IndentedTextWriter
Поля:
  string <TabString>k__BackingField
Свойства:
  string TabString
Методы:
  void .ctor(TextWriter writer, string tabString)
  void InternalOutputTabs()
  string get_TabString()
--------------------------------------------------
Класс: System.CodeDom.Compiler.Indentation
Наследуется от: object
Поля:
  ExposedTabStringIndentedTextWriter _writer
  int _indent
  string _s
Свойства:
  string IndentationString
Методы:
  void .ctor(ExposedTabStringIndentedTextWriter writer, int indent)
  string get_IndentationString()
--------------------------------------------------
Класс: System.CodeDom.Compiler.GeneratorSupport
Наследуется от: Enum
Поля:
  int value__
  GeneratorSupport ArraysOfArrays
  GeneratorSupport EntryPointMethod
  GeneratorSupport GotoStatements
  GeneratorSupport MultidimensionalArrays
  GeneratorSupport StaticConstructors
  GeneratorSupport TryCatchStatements
  GeneratorSupport ReturnTypeAttributes
  GeneratorSupport DeclareValueTypes
  GeneratorSupport DeclareEnums
  GeneratorSupport DeclareDelegates
  GeneratorSupport DeclareInterfaces
  GeneratorSupport DeclareEvents
  GeneratorSupport AssemblyAttributes
  GeneratorSupport ParameterAttributes
  GeneratorSupport ReferenceParameters
  GeneratorSupport ChainedConstructorArguments
  GeneratorSupport NestedTypes
  GeneratorSupport MultipleInterfaceMembers
  GeneratorSupport PublicStaticMembers
  GeneratorSupport ComplexExpressions
  GeneratorSupport Win32Resources
  GeneratorSupport Resources
  GeneratorSupport PartialTypes
  GeneratorSupport GenericTypeReference
  GeneratorSupport GenericTypeDeclaration
  GeneratorSupport DeclareIndexerProperties
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.Compiler.ICodeCompiler
Поля:
Свойства:
Методы:
  CompilerResults CompileAssemblyFromDom(CompilerParameters options, CodeCompileUnit compilationUnit)
  CompilerResults CompileAssemblyFromFile(CompilerParameters options, string fileName)
  CompilerResults CompileAssemblyFromSource(CompilerParameters options, string source)
  CompilerResults CompileAssemblyFromDomBatch(CompilerParameters options, CodeCompileUnit[] compilationUnits)
  CompilerResults CompileAssemblyFromFileBatch(CompilerParameters options, String[] fileNames)
  CompilerResults CompileAssemblyFromSourceBatch(CompilerParameters options, String[] sources)
--------------------------------------------------
Класс: System.CodeDom.Compiler.ICodeGenerator
Поля:
Свойства:
Методы:
  bool IsValidIdentifier(string value)
  void ValidateIdentifier(string value)
  string CreateEscapedIdentifier(string value)
  string CreateValidIdentifier(string value)
  string GetTypeOutput(CodeTypeReference type)
  bool Supports(GeneratorSupport supports)
  void GenerateCodeFromExpression(CodeExpression e, TextWriter w, CodeGeneratorOptions o)
  void GenerateCodeFromStatement(CodeStatement e, TextWriter w, CodeGeneratorOptions o)
  void GenerateCodeFromNamespace(CodeNamespace e, TextWriter w, CodeGeneratorOptions o)
  void GenerateCodeFromCompileUnit(CodeCompileUnit e, TextWriter w, CodeGeneratorOptions o)
  void GenerateCodeFromType(CodeTypeDeclaration e, TextWriter w, CodeGeneratorOptions o)
--------------------------------------------------
Класс: System.CodeDom.Compiler.ICodeParser
Поля:
Свойства:
Методы:
  CodeCompileUnit Parse(TextReader codeStream)
--------------------------------------------------
Класс: System.CodeDom.Compiler.LanguageOptions
Наследуется от: Enum
Поля:
  int value__
  LanguageOptions None
  LanguageOptions CaseInsensitive
Свойства:
Методы:
--------------------------------------------------
Класс: System.CodeDom.Compiler.IndentedTextWriter
Наследуется от: TextWriter
Поля:
  TextWriter _writer
  string _tabString
  int _indentLevel
  bool _tabsPending
  string DefaultTabString
Свойства:
  Encoding Encoding
  string NewLine
  int Indent
  TextWriter InnerWriter
Методы:
  void .ctor(TextWriter writer)
  void .ctor(TextWriter writer, string tabString)
  Encoding get_Encoding()
  string get_NewLine()
  void set_NewLine(string value)
  int get_Indent()
  void set_Indent(int value)
  TextWriter get_InnerWriter()
  void Close()
  void Flush()
  void OutputTabs()
  void Write(string s)
  void Write(bool value)
  void Write(char value)
  void Write(Char[] buffer)
  void Write(Char[] buffer, int index, int count)
  void Write(double value)
  void Write(float value)
  void Write(int value)
  void Write(long value)
  void Write(object value)
  void Write(string format, object arg0)
  void Write(string format, object arg0, object arg1)
  void Write(string format, Object[] arg)
  void WriteLineNoTabs(string s)
  void WriteLine(string s)
  void WriteLine()
  void WriteLine(bool value)
  void WriteLine(char value)
  void WriteLine(Char[] buffer)
  void WriteLine(Char[] buffer, int index, int count)
  void WriteLine(double value)
  void WriteLine(float value)
  void WriteLine(int value)
  void WriteLine(long value)
  void WriteLine(object value)
  void WriteLine(string format, object arg0)
  void WriteLine(string format, object arg0, object arg1)
  void WriteLine(string format, Object[] arg)
  void WriteLine(UInt32 value)
--------------------------------------------------
Класс: System.CodeDom.Compiler.GeneratedCodeAttribute
Наследуется от: Attribute
Поля:
  string tool
  string version
Свойства:
  string Tool
  string Version
Методы:
  void .ctor(string tool, string version)
  string get_Tool()
  string get_Version()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CodeDomConfigurationHandler
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty compilersProp
  CompilerCollection default_compilers
Свойства:
  CompilerCollection Compilers
  CompilerInfo[] CompilerInfos
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  void InitializeDefault()
  void PostDeserialize()
  object GetRuntimeObject()
  CompilerCollection get_Compilers()
  CompilerInfo[] get_CompilerInfos()
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.CodeDom.Compiler.Compiler
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty compilerOptionsProp
  ConfigurationProperty extensionProp
  ConfigurationProperty languageProp
  ConfigurationProperty typeProp
  ConfigurationProperty warningLevelProp
  ConfigurationProperty providerOptionsProp
  ConfigurationPropertyCollection properties
Свойства:
  string CompilerOptions
  string Extension
  string Language
  string Type
  int WarningLevel
  CompilerProviderOptionsCollection ProviderOptions
  Dictionary`2<string, string> ProviderOptionsDictionary
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string compilerOptions, string extension, string language, string type, int warningLevel)
  string get_CompilerOptions()
  void set_CompilerOptions(string value)
  string get_Extension()
  void set_Extension(string value)
  string get_Language()
  void set_Language(string value)
  string get_Type()
  void set_Type(string value)
  int get_WarningLevel()
  void set_WarningLevel(int value)
  CompilerProviderOptionsCollection get_ProviderOptions()
  void set_ProviderOptions(CompilerProviderOptionsCollection value)
  Dictionary`2<string, string> get_ProviderOptionsDictionary()
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerCollection
Наследуется от: ConfigurationElementCollection
Поля:
  string defaultCompilerVersion
  ConfigurationPropertyCollection properties
  List`1<CompilerInfo> compiler_infos
  Dictionary`2<string, CompilerInfo> compiler_languages
  Dictionary`2<string, CompilerInfo> compiler_extensions
Свойства:
  bool ThrowOnDuplicate
  String[] AllKeys
  ConfigurationElementCollectionType CollectionType
  string ElementName
  ConfigurationPropertyCollection Properties
  Compiler Item
  CompilerInfo Item
  CompilerInfo[] CompilerInfos
Методы:
  void .cctor()
  void .ctor()
  void AddCompilerInfo(CompilerInfo ci)
  void AddCompilerInfo(Compiler compiler)
  void BaseAdd(ConfigurationElement element)
  bool get_ThrowOnDuplicate()
  ConfigurationElement CreateNewElement()
  CompilerInfo GetCompilerInfoForLanguage(string language)
  CompilerInfo GetCompilerInfoForExtension(string extension)
  string GetLanguageFromExtension(string extension)
  Compiler Get(int index)
  Compiler Get(string language)
  object GetElementKey(ConfigurationElement element)
  string GetKey(int index)
  String[] get_AllKeys()
  ConfigurationElementCollectionType get_CollectionType()
  string get_ElementName()
  ConfigurationPropertyCollection get_Properties()
  Compiler get_Item(int index)
  CompilerInfo get_Item(string language)
  CompilerInfo[] get_CompilerInfos()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerProviderOption
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty nameProp
  ConfigurationProperty valueProp
  ConfigurationPropertyCollection properties
Свойства:
  string Name
  string Value
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  string get_Name()
  void set_Name(string value)
  string get_Value()
  void set_Value(string value)
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.CodeDom.Compiler.CompilerProviderOptionsCollection
Наследуется от: ConfigurationElementCollection
Поля:
  ConfigurationPropertyCollection properties
Свойства:
  String[] AllKeys
  string ElementName
  ConfigurationPropertyCollection Properties
  Dictionary`2<string, string> ProviderOptions
  CompilerProviderOption Item
  CompilerProviderOption Item
Методы:
  void .cctor()
  void .ctor()
  ConfigurationElement CreateNewElement()
  CompilerProviderOption Get(int index)
  CompilerProviderOption Get(string name)
  object GetElementKey(ConfigurationElement element)
  string GetKey(int index)
  String[] get_AllKeys()
  string get_ElementName()
  ConfigurationPropertyCollection get_Properties()
  Dictionary`2<string, string> get_ProviderOptions()
  CompilerProviderOption get_Item(int index)
  CompilerProviderOption get_Item(string name)
--------------------------------------------------
Класс: System.CodeDom.Compiler.Executor
Наследуется от: object
Поля:
Свойства:
Методы:
  void ExecWait(string cmd, TempFileCollection tempFiles)
  int ExecWaitWithCapture(IntPtr userToken, string cmd, string currentDir, TempFileCollection tempFiles, String& outputName, String& errorName)
  int ExecWaitWithCapture(IntPtr userToken, string cmd, TempFileCollection tempFiles, String& outputName, String& errorName)
  int ExecWaitWithCapture(string cmd, string currentDir, TempFileCollection tempFiles, String& outputName, String& errorName)
  int ExecWaitWithCapture(string cmd, TempFileCollection tempFiles, String& outputName, String& errorName)
  int InternalExecWaitWithCapture(string cmd, string currentDir, TempFileCollection tempFiles, String& outputName, String& errorName)
--------------------------------------------------
Класс: System.Net.SecPkgContext_ConnectionInfo
Наследуется от: object
Поля:
  int Protocol
  int DataCipherAlg
  int DataKeySize
  int DataHashAlg
  int DataHashKeySize
  int KeyExchangeAlg
  int KeyExchKeySize
Свойства:
Методы:
  void .ctor(Byte[] nativeBuffer)
--------------------------------------------------
Класс: System.Net.GlobalSSPI
Наследуется от: object
Поля:
  SSPIInterface SSPIAuth
  SSPIInterface SSPISecureChannel
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Net.NegotiationInfoClass
Наследуется от: object
Поля:
  string AuthenticationPackage
  string NTLM
  string Kerberos
  string Negotiate
  string Basic
Свойства:
Методы:
  void .ctor(SafeHandle safeHandle, int negotiationState)
--------------------------------------------------
Класс: System.Net.SSPIAuthType
Наследуется от: object
Поля:
  SecurityPackageInfoClass[] modreq(System.Runtime.CompilerServices.IsVolatile) s_securityPackages
Свойства:
  SecurityPackageInfoClass[] SecurityPackages
Методы:
  SecurityPackageInfoClass[] get_SecurityPackages()
  void set_SecurityPackages(SecurityPackageInfoClass[] value)
  int EnumerateSecurityPackages(Int32& pkgnum, SafeFreeContextBuffer& pkgArray)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SEC_WINNT_AUTH_IDENTITY_W& authdata, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SafeSspiAuthDataHandle& authdata, SafeFreeCredentials& outCredential)
  int AcquireDefaultCredential(string moduleName, CredentialUse usage, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SCHANNEL_CRED& authdata, SafeFreeCredentials& outCredential)
  int AcceptSecurityContext(SafeFreeCredentials& credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, ContextFlags inFlags, Endianness endianness, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int AcceptSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer[] inputBuffers, ContextFlags inFlags, Endianness endianness, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SafeFreeCredentials& credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer[] inputBuffers, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int EncryptMessage(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int DecryptMessage(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int MakeSignature(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int VerifySignature(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int QueryContextChannelBinding(SafeDeleteContext context, ContextAttribute attribute, SafeFreeContextBufferChannelBinding& binding)
  int QueryContextAttributes(SafeDeleteContext context, ContextAttribute attribute, Byte[] buffer, Type handleType, SafeHandle& refHandle)
  int SetContextAttributes(SafeDeleteContext context, ContextAttribute attribute, Byte[] buffer)
  int QuerySecurityContextToken(SafeDeleteContext phContext, SecurityContextTokenHandle& phToken)
  int CompleteAuthToken(SafeDeleteContext& refContext, SecurityBuffer[] inputBuffers)
  int GetSecurityContextToken(SafeDeleteContext phContext, SecurityContextTokenHandle& safeHandle)
  int ApplyControlToken(SafeDeleteContext& refContext, SecurityBuffer[] inputBuffers)
  void .ctor()
--------------------------------------------------
Класс: System.Net.SSPIInterface
Поля:
Свойства:
  SecurityPackageInfoClass[] SecurityPackages
Методы:
  SecurityPackageInfoClass[] get_SecurityPackages()
  void set_SecurityPackages(SecurityPackageInfoClass[] value)
  int EnumerateSecurityPackages(Int32& pkgnum, SafeFreeContextBuffer& pkgArray)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SEC_WINNT_AUTH_IDENTITY_W& authdata, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SafeSspiAuthDataHandle& authdata, SafeFreeCredentials& outCredential)
  int AcquireDefaultCredential(string moduleName, CredentialUse usage, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SCHANNEL_CRED& authdata, SafeFreeCredentials& outCredential)
  int AcceptSecurityContext(SafeFreeCredentials& credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, ContextFlags inFlags, Endianness endianness, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int AcceptSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer[] inputBuffers, ContextFlags inFlags, Endianness endianness, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SafeFreeCredentials& credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer[] inputBuffers, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int EncryptMessage(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int DecryptMessage(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int MakeSignature(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int VerifySignature(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int QueryContextChannelBinding(SafeDeleteContext phContext, ContextAttribute attribute, SafeFreeContextBufferChannelBinding& refHandle)
  int QueryContextAttributes(SafeDeleteContext phContext, ContextAttribute attribute, Byte[] buffer, Type handleType, SafeHandle& refHandle)
  int SetContextAttributes(SafeDeleteContext phContext, ContextAttribute attribute, Byte[] buffer)
  int QuerySecurityContextToken(SafeDeleteContext phContext, SecurityContextTokenHandle& phToken)
  int CompleteAuthToken(SafeDeleteContext& refContext, SecurityBuffer[] inputBuffers)
  int ApplyControlToken(SafeDeleteContext& refContext, SecurityBuffer[] inputBuffers)
--------------------------------------------------
Класс: System.Net.SSPISecureChannelType
Наследуется от: object
Поля:
  SecurityPackageInfoClass[] modreq(System.Runtime.CompilerServices.IsVolatile) s_securityPackages
Свойства:
  SecurityPackageInfoClass[] SecurityPackages
Методы:
  SecurityPackageInfoClass[] get_SecurityPackages()
  void set_SecurityPackages(SecurityPackageInfoClass[] value)
  int EnumerateSecurityPackages(Int32& pkgnum, SafeFreeContextBuffer& pkgArray)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SEC_WINNT_AUTH_IDENTITY_W& authdata, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SafeSspiAuthDataHandle& authdata, SafeFreeCredentials& outCredential)
  int AcquireDefaultCredential(string moduleName, CredentialUse usage, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string moduleName, CredentialUse usage, SCHANNEL_CRED& authdata, SafeFreeCredentials& outCredential)
  int AcceptSecurityContext(SafeFreeCredentials& credential, SafeDeleteContext& context, SecurityBuffer inputBuffer, ContextFlags inFlags, Endianness endianness, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int AcceptSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, SecurityBuffer[] inputBuffers, ContextFlags inFlags, Endianness endianness, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SafeFreeCredentials& credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SafeFreeCredentials credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer[] inputBuffers, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int EncryptMessage(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int DecryptMessage(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int MakeSignature(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int VerifySignature(SafeDeleteContext context, SecBufferDesc& inputOutput, UInt32 sequenceNumber)
  int QueryContextChannelBinding(SafeDeleteContext phContext, ContextAttribute attribute, SafeFreeContextBufferChannelBinding& refHandle)
  int QueryContextAttributes(SafeDeleteContext phContext, ContextAttribute attribute, Byte[] buffer, Type handleType, SafeHandle& refHandle)
  int SetContextAttributes(SafeDeleteContext phContext, ContextAttribute attribute, Byte[] buffer)
  int QuerySecurityContextToken(SafeDeleteContext phContext, SecurityContextTokenHandle& phToken)
  int CompleteAuthToken(SafeDeleteContext& refContext, SecurityBuffer[] inputBuffers)
  int ApplyControlToken(SafeDeleteContext& refContext, SecurityBuffer[] inputBuffers)
  void .ctor()
--------------------------------------------------
Класс: System.Net.SSPIWrapper
Наследуется от: object
Поля:
Свойства:
Методы:
  SecurityPackageInfoClass[] EnumerateSecurityPackages(SSPIInterface secModule)
  SecurityPackageInfoClass GetVerifyPackageInfo(SSPIInterface secModule, string packageName)
  SecurityPackageInfoClass GetVerifyPackageInfo(SSPIInterface secModule, string packageName, bool throwIfMissing)
  SafeFreeCredentials AcquireDefaultCredential(SSPIInterface secModule, string package, CredentialUse intent)
  SafeFreeCredentials AcquireCredentialsHandle(SSPIInterface secModule, string package, CredentialUse intent, SEC_WINNT_AUTH_IDENTITY_W& authdata)
  SafeFreeCredentials AcquireCredentialsHandle(SSPIInterface secModule, string package, CredentialUse intent, SafeSspiAuthDataHandle& authdata)
  SafeFreeCredentials AcquireCredentialsHandle(SSPIInterface secModule, string package, CredentialUse intent, SCHANNEL_CRED scc)
  int InitializeSecurityContext(SSPIInterface secModule, SafeFreeCredentials& credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness datarep, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int InitializeSecurityContext(SSPIInterface secModule, SafeFreeCredentials credential, SafeDeleteContext& context, string targetName, ContextFlags inFlags, Endianness datarep, SecurityBuffer[] inputBuffers, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int AcceptSecurityContext(SSPIInterface secModule, SafeFreeCredentials& credential, SafeDeleteContext& context, ContextFlags inFlags, Endianness datarep, SecurityBuffer inputBuffer, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int AcceptSecurityContext(SSPIInterface secModule, SafeFreeCredentials credential, SafeDeleteContext& context, ContextFlags inFlags, Endianness datarep, SecurityBuffer[] inputBuffers, SecurityBuffer outputBuffer, ContextFlags& outFlags)
  int CompleteAuthToken(SSPIInterface secModule, SafeDeleteContext& context, SecurityBuffer[] inputBuffers)
  int ApplyControlToken(SSPIInterface secModule, SafeDeleteContext& context, SecurityBuffer[] inputBuffers)
  int QuerySecurityContextToken(SSPIInterface secModule, SafeDeleteContext context, SecurityContextTokenHandle& token)
  int EncryptMessage(SSPIInterface secModule, SafeDeleteContext context, SecurityBuffer[] input, UInt32 sequenceNumber)
  int DecryptMessage(SSPIInterface secModule, SafeDeleteContext context, SecurityBuffer[] input, UInt32 sequenceNumber)
  int MakeSignature(SSPIInterface secModule, SafeDeleteContext context, SecurityBuffer[] input, UInt32 sequenceNumber)
  int VerifySignature(SSPIInterface secModule, SafeDeleteContext context, SecurityBuffer[] input, UInt32 sequenceNumber)
  int EncryptDecryptHelper(OP op, SSPIInterface secModule, SafeDeleteContext context, SecurityBuffer[] input, UInt32 sequenceNumber)
  SafeFreeContextBufferChannelBinding QueryContextChannelBinding(SSPIInterface secModule, SafeDeleteContext securityContext, ContextAttribute contextAttribute)
  object QueryContextAttributes(SSPIInterface secModule, SafeDeleteContext securityContext, ContextAttribute contextAttribute)
  object QueryContextAttributes(SSPIInterface secModule, SafeDeleteContext securityContext, ContextAttribute contextAttribute, Int32& errorCode)
  string ErrorDescription(int errorCode)
--------------------------------------------------
Класс: System.Net.SecPkgContext_Bindings
Наследуется от: ValueType
Поля:
  int BindingsLength
  IntPtr Bindings
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SecPkgContext_NegotiationInfoW
Наследуется от: ValueType
Поля:
  IntPtr PackageInfo
  UInt32 NegotiationState
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SecPkgContext_Sizes
Наследуется от: object
Поля:
  int cbMaxToken
  int cbMaxSignature
  int cbBlockSize
  int cbSecurityTrailer
  int SizeOf
Свойства:
Методы:
  void .ctor(Byte[] memory)
  void .cctor()
--------------------------------------------------
Класс: System.Net.SecPkgContext_StreamSizes
Наследуется от: object
Поля:
  int cbHeader
  int cbTrailer
  int cbMaximumMessage
  int cBuffers
  int cbBlockSize
  int SizeOf
Свойства:
Методы:
  void .ctor(Byte[] memory)
  void .cctor()
--------------------------------------------------
Класс: System.Net.SecurityPackageInfo
Наследуется от: ValueType
Поля:
  int Capabilities
  short Version
  short RPCID
  int MaxToken
  IntPtr Name
  IntPtr Comment
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SecurityPackageInfoClass
Наследуется от: object
Поля:
  int Capabilities
  short Version
  short RPCID
  int MaxToken
  string Name
  string Comment
Свойства:
Методы:
  void .ctor(SafeHandle safeHandle, int index)
  string ToString()
--------------------------------------------------
Класс: System.Net.ContextAwareResult
Наследуется от: LazyAsyncResult
Поля:
  WindowsIdentity _windowsIdentity
  ExecutionContext modreq(System.Runtime.CompilerServices.IsVolatile) _context
  object _lock
  StateFlags _flags
Свойства:
  WindowsIdentity Identity
  ExecutionContext ContextCopy
  EndPoint RemoteEndPoint
Методы:
  void SafeCaptureIdentity()
  WindowsIdentity get_Identity()
  void CleanupInternal()
  void .ctor(object myObject, object myState, AsyncCallback myCallBack)
  void .ctor(bool captureIdentity, bool forceCaptureContext, object myObject, object myState, AsyncCallback myCallBack)
  void .ctor(bool captureIdentity, bool forceCaptureContext, bool threadSafeContextCopy, object myObject, object myState, AsyncCallback myCallBack)
  ExecutionContext get_ContextCopy()
  object StartPostingAsyncOp()
  object StartPostingAsyncOp(bool lockCapture)
  bool FinishPostingAsyncOp()
  bool FinishPostingAsyncOp(CallbackClosure& closure)
  void Cleanup()
  bool CaptureOrComplete(ExecutionContext& cachedContext, bool returnContext)
  void Complete(IntPtr userToken)
  void CompleteCallback()
  EndPoint get_RemoteEndPoint()
--------------------------------------------------
Класс: System.Net.CallbackClosure
Наследуется от: object
Поля:
  AsyncCallback _savedCallback
  ExecutionContext _savedContext
Свойства:
  AsyncCallback AsyncCallback
  ExecutionContext Context
Методы:
  void .ctor(ExecutionContext context, AsyncCallback callback)
  bool IsCompatible(AsyncCallback callback)
  AsyncCallback get_AsyncCallback()
  ExecutionContext get_Context()
--------------------------------------------------
Класс: System.Net.ContextFlagsAdapterPal
Наследуется от: object
Поля:
  ContextFlagMapping[] s_contextFlagMapping
Свойства:
Методы:
  ContextFlagsPal GetContextFlagsPalFromInterop(ContextFlags win32Flags)
  ContextFlags GetInteropFromContextFlagsPal(ContextFlagsPal flags)
  void .cctor()
--------------------------------------------------
Класс: System.Net.ContextFlagsPal
Наследуется от: Enum
Поля:
  int value__
  ContextFlagsPal None
  ContextFlagsPal Delegate
  ContextFlagsPal MutualAuth
  ContextFlagsPal ReplayDetect
  ContextFlagsPal SequenceDetect
  ContextFlagsPal Confidentiality
  ContextFlagsPal UseSessionKey
  ContextFlagsPal AllocateMemory
  ContextFlagsPal Connection
  ContextFlagsPal InitExtendedError
  ContextFlagsPal AcceptExtendedError
  ContextFlagsPal InitStream
  ContextFlagsPal AcceptStream
  ContextFlagsPal InitIntegrity
  ContextFlagsPal AcceptIntegrity
  ContextFlagsPal InitManualCredValidation
  ContextFlagsPal InitUseSuppliedCreds
  ContextFlagsPal InitIdentify
  ContextFlagsPal AcceptIdentify
  ContextFlagsPal ProxyBindings
  ContextFlagsPal AllowMissingBindings
  ContextFlagsPal UnverifiedTargetName
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.ExceptionCheck
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsFatal(Exception exception)
--------------------------------------------------
Класс: System.Net.HttpStatusDescription
Наследуется от: object
Поля:
Свойства:
Методы:
  string Get(HttpStatusCode code)
  string Get(int code)
--------------------------------------------------
Класс: System.Net.HttpValidationHelpers
Наследуется от: object
Поля:
  Char[] s_httpTrimCharacters
Свойства:
Методы:
  string CheckBadHeaderNameChars(string name)
  bool ContainsNonAsciiChars(string token)
  bool IsValidToken(string token)
  string CheckBadHeaderValueChars(string value)
  bool IsInvalidMethodOrHeaderString(string stringValue)
  void .cctor()
--------------------------------------------------
Класс: System.Net.IPAddressParserStatics
Наследуется от: object
Поля:
  int IPv4AddressBytes
  int IPv6AddressBytes
  int IPv6AddressShorts
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetEventSource
Наследуется от: EventSource
Поля:
  NetEventSource Log
  string MissingMember
  string NullInstance
  string StaticMethodObject
  string NoParameters
  int MaxDumpSize
  int EnterEventId
  int ExitEventId
  int AssociateEventId
  int InfoEventId
  int ErrorEventId
  int CriticalFailureEventId
  int DumpArrayEventId
  int EnumerateSecurityPackagesId
  int SspiPackageNotFoundId
  int AcquireDefaultCredentialId
  int AcquireCredentialsHandleId
  int InitializeSecurityContextId
  int SecurityContextInputBufferId
  int SecurityContextInputBuffersId
  int AcceptSecuritContextId
  int OperationReturnedSomethingId
  int NextAvailableEventId
Свойства:
  bool IsEnabled
Методы:
  void Enter(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Enter(object thisOrContextObject, object arg0, string memberName)
  void Enter(object thisOrContextObject, object arg0, object arg1, string memberName)
  void Enter(object thisOrContextObject, object arg0, object arg1, object arg2, string memberName)
  void Enter(string thisOrContextObject, string memberName, string parameters)
  void Exit(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Exit(object thisOrContextObject, object arg0, string memberName)
  void Exit(object thisOrContextObject, object arg0, object arg1, string memberName)
  void Exit(string thisOrContextObject, string memberName, string result)
  void Info(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Info(object thisOrContextObject, object message, string memberName)
  void Info(string thisOrContextObject, string memberName, string message)
  void Error(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Error(object thisOrContextObject, object message, string memberName)
  void ErrorMessage(string thisOrContextObject, string memberName, string message)
  void Fail(object thisOrContextObject, FormattableString formattableString, string memberName)
  void Fail(object thisOrContextObject, object message, string memberName)
  void CriticalFailure(string thisOrContextObject, string memberName, string message)
  void DumpBuffer(object thisOrContextObject, Byte[] buffer, string memberName)
  void DumpBuffer(object thisOrContextObject, Byte[] buffer, int offset, int count, string memberName)
  void DumpBuffer(object thisOrContextObject, IntPtr bufferPtr, int count, string memberName)
  void DumpBuffer(string thisOrContextObject, string memberName, Byte[] buffer)
  void Associate(object first, object second, string memberName)
  void Associate(object thisOrContextObject, object first, object second, string memberName)
  void Associate(string thisOrContextObject, string memberName, string first, string second)
  void DebugValidateArg(object arg)
  void DebugValidateArg(FormattableString arg)
  bool get_IsEnabled()
  string IdOf(object value)
  int GetHashCode(object value)
  object Format(object value)
  string Format(FormattableString s)
  void WriteEvent(int eventId, string arg1, string arg2, string arg3, string arg4)
  void WriteEvent(int eventId, string arg1, string arg2, Byte[] arg3)
  void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)
  void WriteEvent(int eventId, string arg1, int arg2, string arg3)
  void WriteEvent(int eventId, string arg1, string arg2, int arg3)
  void WriteEvent(int eventId, string arg1, string arg2, string arg3, int arg4)
  void AcquireDefaultCredential(string packageName, CredentialUse intent)
  void AcquireCredentialsHandle(string packageName, CredentialUse intent, object authdata)
  void AcquireCredentialsHandle(string packageName, CredentialUse intent, string authdata)
  void InitializeSecurityContext(SafeFreeCredentials credential, SafeDeleteContext context, string targetName, ContextFlags inFlags)
  void InitializeSecurityContext(string credential, string context, string targetName, ContextFlags inFlags)
  void AcceptSecurityContext(SafeFreeCredentials credential, SafeDeleteContext context, ContextFlags inFlags)
  void AcceptSecurityContext(string credential, string context, ContextFlags inFlags)
  void OperationReturnedSomething(string operation, SECURITY_STATUS errorCode)
  void SecurityContextInputBuffer(string context, int inputBufferSize, int outputBufferSize, SECURITY_STATUS errorCode)
  void SecurityContextInputBuffers(string context, int inputBuffersSize, int outputBufferSize, SECURITY_STATUS errorCode)
  void EnumerateSecurityPackages(string securityPackage)
  void SspiPackageNotFound(string packageName)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.NTAuthentication
Наследуется от: object
Поля:
  bool _isServer
  SafeFreeCredentials _credentialsHandle
  SafeDeleteContext _securityContext
  string _spn
  int _tokenSize
  ContextFlagsPal _requestedContextFlags
  ContextFlagsPal _contextFlags
  bool _isCompleted
  string _package
  string _lastProtocolName
  string _protocolName
  string _clientSpecifiedSpn
  ChannelBinding _channelBinding
Свойства:
  bool IsCompleted
  bool IsValidContext
  string Package
  bool IsServer
  string ClientSpecifiedSpn
  string ProtocolName
  bool IsKerberos
Методы:
  bool get_IsCompleted()
  bool get_IsValidContext()
  string get_Package()
  bool get_IsServer()
  string get_ClientSpecifiedSpn()
  string get_ProtocolName()
  bool get_IsKerberos()
  void .ctor(bool isServer, string package, NetworkCredential credential, string spn, ContextFlagsPal requestedContextFlags, ChannelBinding channelBinding)
  void Initialize(bool isServer, string package, NetworkCredential credential, string spn, ContextFlagsPal requestedContextFlags, ChannelBinding channelBinding)
  SafeDeleteContext GetContext(SecurityStatusPal& status)
  void CloseContext()
  int VerifySignature(Byte[] buffer, int offset, int count)
  int MakeSignature(Byte[] buffer, int offset, int count, Byte[]& output)
  string GetOutgoingBlob(string incomingBlob)
  Byte[] GetOutgoingBlob(Byte[] incomingBlob, bool thrownOnError)
  Byte[] GetOutgoingBlob(Byte[] incomingBlob, bool throwOnError, SecurityStatusPal& statusCode)
  string GetClientSpecifiedSpn()
--------------------------------------------------
Класс: System.Net.RangeValidationHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ValidateRange(int actual, int fromAllowed, int toAllowed)
  void ValidateSegment(ArraySegment`1<byte> segment)
--------------------------------------------------
Класс: System.Net.SecurityProtocol
Наследуется от: object
Поля:
  SslProtocols DefaultSecurityProtocols
  SslProtocols SystemDefaultSecurityProtocols
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SecurityStatusAdapterPal
Наследуется от: object
Поля:
  int StatusDictionarySize
  BidirectionalDictionary`2<SECURITY_STATUS, SecurityStatusPalErrorCode> s_statusDictionary
Свойства:
Методы:
  SecurityStatusPal GetSecurityStatusPalFromNativeInt(int win32SecurityStatus)
  SecurityStatusPal GetSecurityStatusPalFromInterop(SECURITY_STATUS win32SecurityStatus, bool attachException)
  SECURITY_STATUS GetInteropFromSecurityStatusPal(SecurityStatusPal status)
  void .cctor()
--------------------------------------------------
Класс: System.Net.SecurityStatusPal
Наследуется от: ValueType
Поля:
  SecurityStatusPalErrorCode ErrorCode
  Exception Exception
Свойства:
Методы:
  void .ctor(SecurityStatusPalErrorCode errorCode, Exception exception)
  string ToString()
--------------------------------------------------
Класс: System.Net.SecurityStatusPalErrorCode
Наследуется от: Enum
Поля:
  int value__
  SecurityStatusPalErrorCode NotSet
  SecurityStatusPalErrorCode OK
  SecurityStatusPalErrorCode ContinueNeeded
  SecurityStatusPalErrorCode CompleteNeeded
  SecurityStatusPalErrorCode CompAndContinue
  SecurityStatusPalErrorCode ContextExpired
  SecurityStatusPalErrorCode CredentialsNeeded
  SecurityStatusPalErrorCode Renegotiate
  SecurityStatusPalErrorCode OutOfMemory
  SecurityStatusPalErrorCode InvalidHandle
  SecurityStatusPalErrorCode Unsupported
  SecurityStatusPalErrorCode TargetUnknown
  SecurityStatusPalErrorCode InternalError
  SecurityStatusPalErrorCode PackageNotFound
  SecurityStatusPalErrorCode NotOwner
  SecurityStatusPalErrorCode CannotInstall
  SecurityStatusPalErrorCode InvalidToken
  SecurityStatusPalErrorCode CannotPack
  SecurityStatusPalErrorCode QopNotSupported
  SecurityStatusPalErrorCode NoImpersonation
  SecurityStatusPalErrorCode LogonDenied
  SecurityStatusPalErrorCode UnknownCredentials
  SecurityStatusPalErrorCode NoCredentials
  SecurityStatusPalErrorCode MessageAltered
  SecurityStatusPalErrorCode OutOfSequence
  SecurityStatusPalErrorCode NoAuthenticatingAuthority
  SecurityStatusPalErrorCode IncompleteMessage
  SecurityStatusPalErrorCode IncompleteCredentials
  SecurityStatusPalErrorCode BufferNotEnough
  SecurityStatusPalErrorCode WrongPrincipal
  SecurityStatusPalErrorCode TimeSkew
  SecurityStatusPalErrorCode UntrustedRoot
  SecurityStatusPalErrorCode IllegalMessage
  SecurityStatusPalErrorCode CertUnknown
  SecurityStatusPalErrorCode CertExpired
  SecurityStatusPalErrorCode AlgorithmMismatch
  SecurityStatusPalErrorCode SecurityQosFailed
  SecurityStatusPalErrorCode SmartcardLogonRequired
  SecurityStatusPalErrorCode UnsupportedPreauth
  SecurityStatusPalErrorCode BadBinding
  SecurityStatusPalErrorCode DowngradeDetected
  SecurityStatusPalErrorCode ApplicationProtocolMismatch
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.TcpValidationHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ValidatePortNumber(int port)
--------------------------------------------------
Класс: System.Net.TlsStream
Наследуется от: NetworkStream
Поля:
  SslStream _sslStream
  string _host
  X509CertificateCollection _clientCertificates
Свойства:
Методы:
  void .ctor(NetworkStream stream, Socket socket, string host, X509CertificateCollection clientCertificates)
  void AuthenticateAsClient()
  IAsyncResult BeginAuthenticateAsClient(AsyncCallback asyncCallback, object state)
  void EndAuthenticateAsClient(IAsyncResult asyncResult)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult result)
  void Write(Byte[] buffer, int offset, int size)
  int Read(Byte[] buffer, int offset, int size)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  void Close()
--------------------------------------------------
Класс: System.Net.UriScheme
Наследуется от: object
Поля:
  string File
  string Ftp
  string Gopher
  string Http
  string Https
  string News
  string NetPipe
  string NetTcp
  string Nntp
  string Mailto
  string Ws
  string Wss
  string SchemeDelimiter
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Base64Stream
Наследуется от: DelegatedStream
Поля:
  Byte[] s_base64DecodeMap
  Byte[] s_base64EncodeMap
  int _lineLength
  Base64WriteStateInfo _writeState
  ReadStateInfo _readState
  int SizeOfBase64EncodedChar
  byte InvalidBase64Value
Свойства:
  ReadStateInfo ReadState
  Base64WriteStateInfo WriteState
Методы:
  void .ctor(Stream stream, Base64WriteStateInfo writeStateInfo)
  void .ctor(Base64WriteStateInfo writeStateInfo)
  ReadStateInfo get_ReadState()
  Base64WriteStateInfo get_WriteState()
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  int DecodeBytes(Byte[] buffer, int offset, int count)
  int EncodeBytes(Byte[] buffer, int offset, int count)
  int EncodeBytes(Byte[] buffer, int offset, int count, bool dontDeferFinalBytes, bool shouldAppendSpaceToCRLF)
  Stream GetStream()
  string GetEncodedString()
  int EndRead(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  void FlushInternal()
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  void .cctor()
--------------------------------------------------
Класс: System.Net.ClosableStream
Наследуется от: DelegatedStream
Поля:
  EventHandler _onClose
  int _closed
Свойства:
Методы:
  void .ctor(Stream stream, EventHandler onClose)
  void Close()
--------------------------------------------------
Класс: System.Net.DelegatedStream
Наследуется от: Stream
Поля:
  Stream _stream
  NetworkStream _netStream
Свойства:
  Stream BaseStream
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream)
  Stream get_BaseStream()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  int EndRead(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  int Read(Byte[] buffer, int offset, int count)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Net.TrackingStringDictionary
Наследуется от: StringDictionary
Поля:
  bool _isReadOnly
  bool _isChanged
Свойства:
  bool IsChanged
  string Item
Методы:
  void .ctor()
  void .ctor(bool isReadOnly)
  bool get_IsChanged()
  void set_IsChanged(bool value)
  void Add(string key, string value)
  void Clear()
  void Remove(string key)
  string get_Item(string key)
  void set_Item(string key, string value)
--------------------------------------------------
Класс: System.Net.TrackingValidationObjectDictionary
Наследуется от: StringDictionary
Поля:
  Dictionary`2<string, ValidateAndParseValue> _validators
  Dictionary`2<string, object> _internalObjects
  bool <IsChanged>k__BackingField
Свойства:
  bool IsChanged
  string Item
Методы:
  void .ctor(Dictionary`2<string, ValidateAndParseValue> validators)
  void PersistValue(string key, string value, bool addValue)
  bool get_IsChanged()
  void set_IsChanged(bool value)
  object InternalGet(string key)
  void InternalSet(string key, object value)
  string get_Item(string key)
  void set_Item(string key, string value)
  void Add(string key, string value)
  void Clear()
  void Remove(string key)
--------------------------------------------------
Класс: System.Net.HttpStatusCode
Наследуется от: Enum
Поля:
  int value__
  HttpStatusCode Continue
  HttpStatusCode SwitchingProtocols
  HttpStatusCode Processing
  HttpStatusCode EarlyHints
  HttpStatusCode OK
  HttpStatusCode Created
  HttpStatusCode Accepted
  HttpStatusCode NonAuthoritativeInformation
  HttpStatusCode NoContent
  HttpStatusCode ResetContent
  HttpStatusCode PartialContent
  HttpStatusCode MultiStatus
  HttpStatusCode AlreadyReported
  HttpStatusCode IMUsed
  HttpStatusCode MultipleChoices
  HttpStatusCode Ambiguous
  HttpStatusCode MovedPermanently
  HttpStatusCode Moved
  HttpStatusCode Found
  HttpStatusCode Redirect
  HttpStatusCode SeeOther
  HttpStatusCode RedirectMethod
  HttpStatusCode NotModified
  HttpStatusCode UseProxy
  HttpStatusCode Unused
  HttpStatusCode TemporaryRedirect
  HttpStatusCode RedirectKeepVerb
  HttpStatusCode PermanentRedirect
  HttpStatusCode BadRequest
  HttpStatusCode Unauthorized
  HttpStatusCode PaymentRequired
  HttpStatusCode Forbidden
  HttpStatusCode NotFound
  HttpStatusCode MethodNotAllowed
  HttpStatusCode NotAcceptable
  HttpStatusCode ProxyAuthenticationRequired
  HttpStatusCode RequestTimeout
  HttpStatusCode Conflict
  HttpStatusCode Gone
  HttpStatusCode LengthRequired
  HttpStatusCode PreconditionFailed
  HttpStatusCode RequestEntityTooLarge
  HttpStatusCode RequestUriTooLong
  HttpStatusCode UnsupportedMediaType
  HttpStatusCode RequestedRangeNotSatisfiable
  HttpStatusCode ExpectationFailed
  HttpStatusCode MisdirectedRequest
  HttpStatusCode UnprocessableEntity
  HttpStatusCode Locked
  HttpStatusCode FailedDependency
  HttpStatusCode UpgradeRequired
  HttpStatusCode PreconditionRequired
  HttpStatusCode TooManyRequests
  HttpStatusCode RequestHeaderFieldsTooLarge
  HttpStatusCode UnavailableForLegalReasons
  HttpStatusCode InternalServerError
  HttpStatusCode NotImplemented
  HttpStatusCode BadGateway
  HttpStatusCode ServiceUnavailable
  HttpStatusCode GatewayTimeout
  HttpStatusCode HttpVersionNotSupported
  HttpStatusCode VariantAlsoNegotiates
  HttpStatusCode InsufficientStorage
  HttpStatusCode LoopDetected
  HttpStatusCode NotExtended
  HttpStatusCode NetworkAuthenticationRequired
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.HttpVersion
Наследуется от: object
Поля:
  Version Unknown
  Version Version10
  Version Version11
  Version Version20
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.IPAddress
Наследуется от: object
Поля:
  IPAddress Any
  IPAddress Loopback
  IPAddress Broadcast
  IPAddress None
  long LoopbackMask
  IPAddress IPv6Any
  IPAddress IPv6Loopback
  IPAddress IPv6None
  UInt32 _addressOrScopeId
  UInt16[] _numbers
  string _toString
  int _hashCode
  int NumberOfLabels
Свойства:
  bool IsIPv4
  bool IsIPv6
  UInt32 PrivateAddress
  UInt32 PrivateScopeId
  AddressFamily AddressFamily
  long ScopeId
  bool IsIPv6Multicast
  bool IsIPv6LinkLocal
  bool IsIPv6SiteLocal
  bool IsIPv6Teredo
  bool IsIPv4MappedToIPv6
  long Address
Методы:
  bool get_IsIPv4()
  bool get_IsIPv6()
  UInt32 get_PrivateAddress()
  void set_PrivateAddress(UInt32 value)
  UInt32 get_PrivateScopeId()
  void set_PrivateScopeId(UInt32 value)
  void .ctor(long newAddress)
  void .ctor(Byte[] address, long scopeid)
  void .ctor(ReadOnlySpan`1<byte> address, long scopeid)
  void .ctor(UInt16* numbers, int numbersLength, UInt32 scopeid)
  void .ctor(UInt16[] numbers, UInt32 scopeid)
  void .ctor(Byte[] address)
  void .ctor(ReadOnlySpan`1<byte> address)
  void .ctor(int newAddress)
  bool TryParse(string ipString, IPAddress& address)
  bool TryParse(ReadOnlySpan`1<char> ipSpan, IPAddress& address)
  IPAddress Parse(string ipString)
  IPAddress Parse(ReadOnlySpan`1<char> ipSpan)
  bool TryWriteBytes(Span`1<byte> destination, Int32& bytesWritten)
  void WriteIPv6Bytes(Span`1<byte> destination)
  void WriteIPv4Bytes(Span`1<byte> destination)
  Byte[] GetAddressBytes()
  AddressFamily get_AddressFamily()
  long get_ScopeId()
  void set_ScopeId(long value)
  string ToString()
  bool TryFormat(Span`1<char> destination, Int32& charsWritten)
  long HostToNetworkOrder(long host)
  int HostToNetworkOrder(int host)
  short HostToNetworkOrder(short host)
  long NetworkToHostOrder(long network)
  int NetworkToHostOrder(int network)
  short NetworkToHostOrder(short network)
  bool IsLoopback(IPAddress address)
  bool get_IsIPv6Multicast()
  bool get_IsIPv6LinkLocal()
  bool get_IsIPv6SiteLocal()
  bool get_IsIPv6Teredo()
  bool get_IsIPv4MappedToIPv6()
  long get_Address()
  void set_Address(long value)
  bool Equals(object comparandObj, bool compareScopeId)
  bool Equals(object comparand)
  int GetHashCode()
  IPAddress MapToIPv6()
  IPAddress MapToIPv4()
  Byte[] ThrowAddressNullException()
  void .cctor()
--------------------------------------------------
Класс: System.Net.IPAddressParser
Наследуется от: object
Поля:
  int MaxIPv4StringLength
Свойства:
Методы:
  IPAddress Parse(ReadOnlySpan`1<char> ipSpan, bool tryParse)
  string IPv4AddressToString(UInt32 address)
  void IPv4AddressToString(UInt32 address, StringBuilder destination)
  bool IPv4AddressToString(UInt32 address, Span`1<char> formatted, Int32& charsWritten)
  int IPv4AddressToStringHelper(UInt32 address, Char* addressString)
  string IPv6AddressToString(UInt16[] address, UInt32 scopeId)
  bool IPv6AddressToString(UInt16[] address, UInt32 scopeId, Span`1<char> destination, Int32& charsWritten)
  StringBuilder IPv6AddressToStringHelper(UInt16[] address, UInt32 scopeId)
  void FormatIPv4AddressNumber(int number, Char* addressString, Int32& offset)
  bool Ipv4StringToAddress(ReadOnlySpan`1<char> ipSpan, Int64& address)
  bool Ipv6StringToAddress(ReadOnlySpan`1<char> ipSpan, UInt16* numbers, int numbersLength, UInt32& scope)
  void AppendSections(UInt16[] address, int fromInclusive, int toExclusive, StringBuilder buffer)
  void AppendHex(ushort value, StringBuilder buffer)
  UInt32 ExtractIPv4Address(UInt16[] address)
  ushort Reverse(ushort number)
  void .ctor()
--------------------------------------------------
Класс: System.Net.IPEndPoint
Наследуется от: EndPoint
Поля:
  int MinPort
  int MaxPort
  IPAddress _address
  int _port
  int AnyPort
  IPEndPoint Any
  IPEndPoint IPv6Any
Свойства:
  AddressFamily AddressFamily
  IPAddress Address
  int Port
Методы:
  AddressFamily get_AddressFamily()
  void .ctor(long address, int port)
  void .ctor(IPAddress address, int port)
  IPAddress get_Address()
  void set_Address(IPAddress value)
  int get_Port()
  void set_Port(int value)
  string ToString()
  SocketAddress Serialize()
  EndPoint Create(SocketAddress socketAddress)
  bool Equals(object comparand)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Net.CommandStream
Наследуется от: NetworkStreamWrapper
Поля:
  AsyncCallback s_writeCallbackDelegate
  AsyncCallback s_readCallbackDelegate
  bool _recoverableFailure
  WebRequest _request
  bool _isAsync
  bool _aborted
  PipelineEntry[] _commands
  int _index
  bool _doRead
  bool _doSend
  ResponseDescription _currentResponseDescription
  string _abortReason
  int WaitingForPipeline
  int CompletedPipeline
  string _buffer
  Encoding _encoding
  Decoder _decoder
Свойства:
  bool RecoverableFailure
  Encoding Encoding
Методы:
  void .ctor(TcpClient client)
  void Abort(Exception e)
  void Dispose(bool disposing)
  void InvokeRequestCallback(object obj)
  bool get_RecoverableFailure()
  void MarkAsRecoverableFailure()
  Stream SubmitRequest(WebRequest request, bool isAsync, bool readInitalResponseOnConnect)
  void ClearState()
  PipelineEntry[] BuildCommandsList(WebRequest request)
  Exception GenerateException(string message, WebExceptionStatus status, Exception innerException)
  Exception GenerateException(FtpStatusCode code, string statusDescription, Exception innerException)
  void InitCommandPipeline(WebRequest request, PipelineEntry[] commands, bool isAsync)
  void CheckContinuePipeline()
  Stream ContinueCommandPipeline()
  bool PostSendCommandProcessing(Stream& stream)
  bool PostReadCommandProcessing(Stream& stream)
  PipelineInstruction PipelineCallback(PipelineEntry entry, ResponseDescription response, bool timeout, Stream& stream)
  void ReadCallback(IAsyncResult asyncResult)
  void WriteCallback(IAsyncResult asyncResult)
  Encoding get_Encoding()
  void set_Encoding(Encoding value)
  bool CheckValid(ResponseDescription response, Int32& validThrough, Int32& completeLength)
  ResponseDescription ReceiveCommandResponse()
  void ReceiveCommandResponseCallback(ReceiveState state, int bytesRead)
  void .cctor()
--------------------------------------------------
Класс: System.Net.ResponseDescription
Наследуется от: object
Поля:
  int NoStatus
  bool Multiline
  int Status
  string StatusDescription
  StringBuilder StatusBuffer
  string StatusCodeString
Свойства:
  bool PositiveIntermediate
  bool PositiveCompletion
  bool TransientFailure
  bool PermanentFailure
  bool InvalidStatusCode
Методы:
  bool get_PositiveIntermediate()
  bool get_PositiveCompletion()
  bool get_TransientFailure()
  bool get_PermanentFailure()
  bool get_InvalidStatusCode()
  void .ctor()
--------------------------------------------------
Класс: System.Net.ReceiveState
Наследуется от: object
Поля:
  int bufferSize
  ResponseDescription Resp
  int ValidThrough
  Byte[] Buffer
  CommandStream Connection
Свойства:
Методы:
  void .ctor(CommandStream connection)
--------------------------------------------------
Класс: System.Net.FtpLoginState
Наследуется от: Enum
Поля:
  byte value__
  FtpLoginState NotLoggedIn
  FtpLoginState LoggedIn
  FtpLoginState LoggedInButNeedsRelogin
  FtpLoginState ReloginFailed
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.FtpControlStream
Наследуется от: CommandStream
Поля:
  Socket _dataSocket
  IPEndPoint _passiveEndPoint
  TlsStream _tlsStream
  StringBuilder _bannerMessage
  StringBuilder _welcomeMessage
  StringBuilder _exitMessage
  WeakReference _credentials
  string _currentTypeSetting
  long _contentLength
  DateTime _lastModified
  bool _dataHandshakeStarted
  string _loginDirectory
  string _establishedServerDirectory
  string _requestedServerDirectory
  Uri _responseUri
  FtpLoginState _loginState
  FtpStatusCode StatusCode
  string StatusLine
  AsyncCallback s_acceptCallbackDelegate
  AsyncCallback s_connectCallbackDelegate
  AsyncCallback s_SSLHandshakeCallback
Свойства:
  NetworkCredential Credentials
  long ContentLength
  DateTime LastModified
  Uri ResponseUri
  string BannerMessage
  string WelcomeMessage
  string ExitMessage
Методы:
  NetworkCredential get_Credentials()
  void set_Credentials(NetworkCredential value)
  void .ctor(TcpClient client)
  void AbortConnect()
  void AcceptCallback(IAsyncResult asyncResult)
  void ConnectCallback(IAsyncResult asyncResult)
  void SSLHandshakeCallback(IAsyncResult asyncResult)
  PipelineInstruction QueueOrCreateFtpDataStream(Stream& stream)
  void ClearState()
  PipelineInstruction PipelineCallback(PipelineEntry entry, ResponseDescription response, bool timeout, Stream& stream)
  PipelineEntry[] BuildCommandsList(WebRequest req)
  PipelineInstruction QueueOrCreateDataConection(PipelineEntry entry, ResponseDescription response, bool timeout, Stream& stream, Boolean& isSocketReady)
  void GetPathInfo(GetPathOption pathOption, Uri uri, String& path, String& directory, String& filename)
  string FormatAddress(IPAddress address, int Port)
  string FormatAddressV6(IPAddress address, int port)
  long get_ContentLength()
  DateTime get_LastModified()
  Uri get_ResponseUri()
  string get_BannerMessage()
  string get_WelcomeMessage()
  string get_ExitMessage()
  long GetContentLengthFrom213Response(string responseString)
  DateTime GetLastModifiedFrom213Response(string str)
  void TryUpdateResponseUri(string str, FtpWebRequest request)
  void TryUpdateContentLength(string str)
  string GetLoginDirectory(string str)
  int GetPortV4(string responseString)
  int GetPortV6(string responseString)
  void CreateFtpListenerSocket(FtpWebRequest request)
  string GetPortCommandLine(FtpWebRequest request)
  string FormatFtpCommand(string command, string parameter)
  Socket CreateFtpDataSocket(FtpWebRequest request, Socket templateSocket)
  bool CheckValid(ResponseDescription response, Int32& validThrough, Int32& completeLength)
  TriState IsFtpDataStreamWriteable()
  void .cctor()
--------------------------------------------------
Класс: System.Net.FtpDataStream
Наследуется от: Stream
Поля:
  FtpWebRequest _request
  NetworkStream _networkStream
  bool _writeable
  bool _readable
  bool _isFullyRead
  bool _closing
  int DefaultCloseTimeout
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
  bool CanTimeout
  int ReadTimeout
  int WriteTimeout
Методы:
  void .ctor(NetworkStream networkStream, FtpWebRequest request, TriState writeOnly)
  void Dispose(bool disposing)
  void System.Net.ICloseEx.CloseEx(CloseExState closeState)
  void CheckError()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int Read(Byte[] buffer, int offset, int size)
  void Write(Byte[] buffer, int offset, int size)
  void AsyncReadCallback(IAsyncResult ar)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  int EndRead(IAsyncResult ar)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  void SetLength(long value)
  bool get_CanTimeout()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  void SetSocketTimeoutOption(int timeout)
--------------------------------------------------
Класс: System.Net.FtpOperation
Наследуется от: Enum
Поля:
  int value__
  FtpOperation DownloadFile
  FtpOperation ListDirectory
  FtpOperation ListDirectoryDetails
  FtpOperation UploadFile
  FtpOperation UploadFileUnique
  FtpOperation AppendFile
  FtpOperation DeleteFile
  FtpOperation GetDateTimestamp
  FtpOperation GetFileSize
  FtpOperation Rename
  FtpOperation MakeDirectory
  FtpOperation RemoveDirectory
  FtpOperation PrintWorkingDirectory
  FtpOperation Other
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.FtpMethodFlags
Наследуется от: Enum
Поля:
  int value__
  FtpMethodFlags None
  FtpMethodFlags IsDownload
  FtpMethodFlags IsUpload
  FtpMethodFlags TakesParameter
  FtpMethodFlags MayTakeParameter
  FtpMethodFlags DoesNotTakeParameter
  FtpMethodFlags ParameterIsDirectory
  FtpMethodFlags ShouldParseForResponseUri
  FtpMethodFlags HasHttpCommand
  FtpMethodFlags MustChangeWorkingDirectoryToPath
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.FtpMethodInfo
Наследуется от: object
Поля:
  string Method
  FtpOperation Operation
  FtpMethodFlags Flags
  string HttpCommand
  FtpMethodInfo[] s_knownMethodInfo
Свойства:
  bool IsCommandOnly
  bool IsUpload
  bool IsDownload
  bool ShouldParseForResponseUri
Методы:
  void .ctor(string method, FtpOperation operation, FtpMethodFlags flags, string httpCommand)
  bool HasFlag(FtpMethodFlags flags)
  bool get_IsCommandOnly()
  bool get_IsUpload()
  bool get_IsDownload()
  bool get_ShouldParseForResponseUri()
  FtpMethodInfo GetMethodInfo(string method)
  void .cctor()
--------------------------------------------------
Класс: System.Net.FtpWebRequest
Наследуется от: WebRequest
Поля:
  object _syncObject
  ICredentials _authInfo
  Uri _uri
  FtpMethodInfo _methodInfo
  string _renameTo
  bool _getRequestStreamStarted
  bool _getResponseStarted
  DateTime _startTime
  int _timeout
  int _remainingTimeout
  long _contentLength
  long _contentOffset
  X509CertificateCollection _clientCertificates
  bool _passive
  bool _binary
  string _connectionGroupName
  ServicePoint _servicePoint
  bool _async
  bool _aborted
  bool _timedOut
  Exception _exception
  Queue _timerQueue
  Callback _timerCallback
  bool _enableSsl
  FtpControlStream _connection
  Stream _stream
  RequestStage _requestStage
  bool _onceFailed
  WebHeaderCollection _ftpRequestHeaders
  FtpWebResponse _ftpWebResponse
  int _readWriteTimeout
  ContextAwareResult _writeAsyncResult
  LazyAsyncResult _readAsyncResult
  LazyAsyncResult _requestCompleteAsyncResult
  NetworkCredential s_defaultFtpNetworkCredential
  int s_DefaultTimeout
  Queue s_DefaultTimerQueue
Свойства:
  FtpMethodInfo MethodInfo
  RequestCachePolicy DefaultCachePolicy
  string Method
  string RenameTo
  ICredentials Credentials
  Uri RequestUri
  int Timeout
  int RemainingTimeout
  int ReadWriteTimeout
  long ContentOffset
  long ContentLength
  IWebProxy Proxy
  string ConnectionGroupName
  ServicePoint ServicePoint
  bool Aborted
  Queue TimerQueue
  bool KeepAlive
  RequestCachePolicy CachePolicy
  bool UseBinary
  bool UsePassive
  X509CertificateCollection ClientCertificates
  bool EnableSsl
  WebHeaderCollection Headers
  string ContentType
  bool UseDefaultCredentials
  bool PreAuthenticate
  bool InUse
Методы:
  FtpMethodInfo get_MethodInfo()
  RequestCachePolicy get_DefaultCachePolicy()
  void set_DefaultCachePolicy(RequestCachePolicy value)
  string get_Method()
  void set_Method(string value)
  string get_RenameTo()
  void set_RenameTo(string value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  Uri get_RequestUri()
  int get_Timeout()
  void set_Timeout(int value)
  int get_RemainingTimeout()
  int get_ReadWriteTimeout()
  void set_ReadWriteTimeout(int value)
  long get_ContentOffset()
  void set_ContentOffset(long value)
  long get_ContentLength()
  void set_ContentLength(long value)
  IWebProxy get_Proxy()
  void set_Proxy(IWebProxy value)
  string get_ConnectionGroupName()
  void set_ConnectionGroupName(string value)
  ServicePoint get_ServicePoint()
  bool get_Aborted()
  void .ctor(Uri uri)
  WebResponse GetResponse()
  IAsyncResult BeginGetResponse(AsyncCallback callback, object state)
  WebResponse EndGetResponse(IAsyncResult asyncResult)
  Stream GetRequestStream()
  IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)
  Stream EndGetRequestStream(IAsyncResult asyncResult)
  void SubmitRequest(bool isAsync)
  Exception TranslateConnectException(Exception e)
  void CreateConnectionAsync()
  FtpControlStream CreateConnection()
  Stream TimedSubmitRequestHelper(bool isAsync)
  void TimerCallback(Timer timer, int timeNoticed, object context)
  Queue get_TimerQueue()
  bool AttemptedRecovery(Exception e)
  void SetException(Exception exception)
  void CheckError()
  void RequestCallback(object obj)
  void SyncRequestCallback(object obj)
  void AsyncRequestCallback(object obj)
  RequestStage FinishRequestStage(RequestStage stage)
  void Abort()
  bool get_KeepAlive()
  void set_KeepAlive(bool value)
  RequestCachePolicy get_CachePolicy()
  void set_CachePolicy(RequestCachePolicy value)
  bool get_UseBinary()
  void set_UseBinary(bool value)
  bool get_UsePassive()
  void set_UsePassive(bool value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  bool get_EnableSsl()
  void set_EnableSsl(bool value)
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  string get_ContentType()
  void set_ContentType(string value)
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  bool get_PreAuthenticate()
  void set_PreAuthenticate(bool value)
  bool get_InUse()
  void EnsureFtpWebResponse(Exception exception)
  void DataStreamClosed(CloseExState closeState)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Net.FtpWebRequestCreator
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  WebRequest Create(Uri uri)
--------------------------------------------------
Класс: System.Net.FtpWebResponse
Наследуется от: WebResponse
Поля:
  Stream _responseStream
  long _contentLength
  Uri _responseUri
  FtpStatusCode _statusCode
  string _statusLine
  WebHeaderCollection _ftpRequestHeaders
  DateTime _lastModified
  string _bannerMessage
  string _welcomeMessage
  string _exitMessage
Свойства:
  long ContentLength
  WebHeaderCollection Headers
  bool SupportsHeaders
  Uri ResponseUri
  FtpStatusCode StatusCode
  string StatusDescription
  DateTime LastModified
  string BannerMessage
  string WelcomeMessage
  string ExitMessage
Методы:
  void .ctor(Stream responseStream, long contentLength, Uri responseUri, FtpStatusCode statusCode, string statusLine, DateTime lastModified, string bannerMessage, string welcomeMessage, string exitMessage)
  void UpdateStatus(FtpStatusCode statusCode, string statusLine, string exitMessage)
  Stream GetResponseStream()
  void SetResponseStream(Stream stream)
  void Close()
  long get_ContentLength()
  WebHeaderCollection get_Headers()
  bool get_SupportsHeaders()
  Uri get_ResponseUri()
  FtpStatusCode get_StatusCode()
  string get_StatusDescription()
  DateTime get_LastModified()
  string get_BannerMessage()
  string get_WelcomeMessage()
  string get_ExitMessage()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkStreamWrapper
Наследуется от: Stream
Поля:
  TcpClient _client
  NetworkStream _networkStream
Свойства:
  bool UsingSecureStream
  IPAddress ServerAddress
  Socket Socket
  NetworkStream NetworkStream
  bool CanRead
  bool CanSeek
  bool CanWrite
  bool CanTimeout
  int ReadTimeout
  int WriteTimeout
  long Length
  long Position
Методы:
  void .ctor(TcpClient client)
  bool get_UsingSecureStream()
  IPAddress get_ServerAddress()
  Socket get_Socket()
  NetworkStream get_NetworkStream()
  void set_NetworkStream(NetworkStream value)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  bool get_CanTimeout()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int Read(Byte[] buffer, int offset, int size)
  void Write(Byte[] buffer, int offset, int size)
  void Dispose(bool disposing)
  void CloseSocket()
  void Close(int timeout)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  void SetLength(long value)
  void SetSocketTimeoutOption(int timeout)
--------------------------------------------------
Класс: System.Net.SecurityProtocolType
Наследуется от: Enum
Поля:
  int value__
  SecurityProtocolType SystemDefault
  SecurityProtocolType Ssl3
  SecurityProtocolType Tls
  SecurityProtocolType Tls11
  SecurityProtocolType Tls12
  SecurityProtocolType Tls13
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebClient
Наследуется от: Component
Поля:
  int DefaultCopyBufferLength
  int DefaultDownloadBufferLength
  string DefaultUploadFileContentType
  string UploadFileContentType
  string UploadValuesContentType
  Uri _baseAddress
  ICredentials _credentials
  WebHeaderCollection _headers
  NameValueCollection _requestParameters
  WebResponse _webResponse
  WebRequest _webRequest
  Encoding _encoding
  string _method
  long _contentLength
  bool _initWebClientAsync
  bool _canceled
  ProgressData _progress
  IWebProxy _proxy
  bool _proxySet
  int _callNesting
  AsyncOperation _asyncOp
  SendOrPostCallback _downloadDataOperationCompleted
  SendOrPostCallback _openReadOperationCompleted
  SendOrPostCallback _openWriteOperationCompleted
  SendOrPostCallback _downloadStringOperationCompleted
  SendOrPostCallback _downloadFileOperationCompleted
  SendOrPostCallback _uploadStringOperationCompleted
  SendOrPostCallback _uploadDataOperationCompleted
  SendOrPostCallback _uploadFileOperationCompleted
  SendOrPostCallback _uploadValuesOperationCompleted
  SendOrPostCallback _reportDownloadProgressChanged
  SendOrPostCallback _reportUploadProgressChanged
  DownloadStringCompletedEventHandler DownloadStringCompleted
  DownloadDataCompletedEventHandler DownloadDataCompleted
  AsyncCompletedEventHandler DownloadFileCompleted
  UploadStringCompletedEventHandler UploadStringCompleted
  UploadDataCompletedEventHandler UploadDataCompleted
  UploadFileCompletedEventHandler UploadFileCompleted
  UploadValuesCompletedEventHandler UploadValuesCompleted
  OpenReadCompletedEventHandler OpenReadCompleted
  OpenWriteCompletedEventHandler OpenWriteCompleted
  DownloadProgressChangedEventHandler DownloadProgressChanged
  UploadProgressChangedEventHandler UploadProgressChanged
  RequestCachePolicy <CachePolicy>k__BackingField
  Char[] s_parseContentTypeSeparators
  Encoding[] s_knownEncodings
  bool <AllowReadStreamBuffering>k__BackingField
  bool <AllowWriteStreamBuffering>k__BackingField
Свойства:
  Encoding Encoding
  string BaseAddress
  ICredentials Credentials
  bool UseDefaultCredentials
  WebHeaderCollection Headers
  NameValueCollection QueryString
  WebHeaderCollection ResponseHeaders
  IWebProxy Proxy
  RequestCachePolicy CachePolicy
  bool IsBusy
  bool AllowReadStreamBuffering
  bool AllowWriteStreamBuffering
Методы:
  void .ctor()
  void add_DownloadStringCompleted(DownloadStringCompletedEventHandler value)
  void remove_DownloadStringCompleted(DownloadStringCompletedEventHandler value)
  void add_DownloadDataCompleted(DownloadDataCompletedEventHandler value)
  void remove_DownloadDataCompleted(DownloadDataCompletedEventHandler value)
  void add_DownloadFileCompleted(AsyncCompletedEventHandler value)
  void remove_DownloadFileCompleted(AsyncCompletedEventHandler value)
  void add_UploadStringCompleted(UploadStringCompletedEventHandler value)
  void remove_UploadStringCompleted(UploadStringCompletedEventHandler value)
  void add_UploadDataCompleted(UploadDataCompletedEventHandler value)
  void remove_UploadDataCompleted(UploadDataCompletedEventHandler value)
  void add_UploadFileCompleted(UploadFileCompletedEventHandler value)
  void remove_UploadFileCompleted(UploadFileCompletedEventHandler value)
  void add_UploadValuesCompleted(UploadValuesCompletedEventHandler value)
  void remove_UploadValuesCompleted(UploadValuesCompletedEventHandler value)
  void add_OpenReadCompleted(OpenReadCompletedEventHandler value)
  void remove_OpenReadCompleted(OpenReadCompletedEventHandler value)
  void add_OpenWriteCompleted(OpenWriteCompletedEventHandler value)
  void remove_OpenWriteCompleted(OpenWriteCompletedEventHandler value)
  void add_DownloadProgressChanged(DownloadProgressChangedEventHandler value)
  void remove_DownloadProgressChanged(DownloadProgressChangedEventHandler value)
  void add_UploadProgressChanged(UploadProgressChangedEventHandler value)
  void remove_UploadProgressChanged(UploadProgressChangedEventHandler value)
  void OnDownloadStringCompleted(DownloadStringCompletedEventArgs e)
  void OnDownloadDataCompleted(DownloadDataCompletedEventArgs e)
  void OnDownloadFileCompleted(AsyncCompletedEventArgs e)
  void OnDownloadProgressChanged(DownloadProgressChangedEventArgs e)
  void OnUploadStringCompleted(UploadStringCompletedEventArgs e)
  void OnUploadDataCompleted(UploadDataCompletedEventArgs e)
  void OnUploadFileCompleted(UploadFileCompletedEventArgs e)
  void OnUploadValuesCompleted(UploadValuesCompletedEventArgs e)
  void OnUploadProgressChanged(UploadProgressChangedEventArgs e)
  void OnOpenReadCompleted(OpenReadCompletedEventArgs e)
  void OnOpenWriteCompleted(OpenWriteCompletedEventArgs e)
  void StartOperation()
  AsyncOperation StartAsyncOperation(object userToken)
  void EndOperation()
  Encoding get_Encoding()
  void set_Encoding(Encoding value)
  string get_BaseAddress()
  void set_BaseAddress(string value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  NameValueCollection get_QueryString()
  void set_QueryString(NameValueCollection value)
  WebHeaderCollection get_ResponseHeaders()
  IWebProxy get_Proxy()
  void set_Proxy(IWebProxy value)
  RequestCachePolicy get_CachePolicy()
  void set_CachePolicy(RequestCachePolicy value)
  bool get_IsBusy()
  WebRequest GetWebRequest(Uri address)
  WebResponse GetWebResponse(WebRequest request)
  WebResponse GetWebResponse(WebRequest request, IAsyncResult result)
  Task`1<WebResponse> GetWebResponseTaskAsync(WebRequest request)
  Byte[] DownloadData(string address)
  Byte[] DownloadData(Uri address)
  Byte[] DownloadDataInternal(Uri address, WebRequest& request)
  void DownloadFile(string address, string fileName)
  void DownloadFile(Uri address, string fileName)
  Stream OpenRead(string address)
  Stream OpenRead(Uri address)
  Stream OpenWrite(string address)
  Stream OpenWrite(Uri address)
  Stream OpenWrite(string address, string method)
  Stream OpenWrite(Uri address, string method)
  Byte[] UploadData(string address, Byte[] data)
  Byte[] UploadData(Uri address, Byte[] data)
  Byte[] UploadData(string address, string method, Byte[] data)
  Byte[] UploadData(Uri address, string method, Byte[] data)
  Byte[] UploadDataInternal(Uri address, string method, Byte[] data, WebRequest& request)
  void OpenFileInternal(bool needsHeaderAndBoundary, string fileName, FileStream& fs, Byte[]& buffer, Byte[]& formHeaderBytes, Byte[]& boundaryBytes)
  Byte[] UploadFile(string address, string fileName)
  Byte[] UploadFile(Uri address, string fileName)
  Byte[] UploadFile(string address, string method, string fileName)
  Byte[] UploadFile(Uri address, string method, string fileName)
  Byte[] GetValuesToUpload(NameValueCollection data)
  Byte[] UploadValues(string address, NameValueCollection data)
  Byte[] UploadValues(Uri address, NameValueCollection data)
  Byte[] UploadValues(string address, string method, NameValueCollection data)
  Byte[] UploadValues(Uri address, string method, NameValueCollection data)
  string UploadString(string address, string data)
  string UploadString(Uri address, string data)
  string UploadString(string address, string method, string data)
  string UploadString(Uri address, string method, string data)
  string DownloadString(string address)
  string DownloadString(Uri address)
  void AbortRequest(WebRequest request)
  void CopyHeadersTo(WebRequest request)
  Uri GetUri(string address)
  Uri GetUri(Uri address)
  Byte[] DownloadBits(WebRequest request, Stream writeStream)
  void DownloadBitsAsync(WebRequest request, Stream writeStream, AsyncOperation asyncOp, Action`3<Byte[], Exception, AsyncOperation> completionDelegate)
  Byte[] UploadBits(WebRequest request, Stream readStream, Byte[] buffer, int chunkSize, Byte[] header, Byte[] footer)
  void UploadBitsAsync(WebRequest request, Stream readStream, Byte[] buffer, int chunkSize, Byte[] header, Byte[] footer, AsyncOperation asyncOp, Action`3<Byte[], Exception, AsyncOperation> completionDelegate)
  bool ByteArrayHasPrefix(Byte[] prefix, Byte[] byteArray)
  string GetStringUsingEncoding(WebRequest request, Byte[] data)
  string MapToDefaultMethod(Uri address)
  string UrlEncode(string str)
  Byte[] UrlEncodeBytesToBytesInternal(Byte[] bytes, int offset, int count, bool alwaysCreateReturnValue)
  char IntToHex(int n)
  bool IsSafe(char ch)
  void InvokeOperationCompleted(AsyncOperation asyncOp, SendOrPostCallback callback, AsyncCompletedEventArgs eventArgs)
  void OpenReadAsync(Uri address)
  void OpenReadAsync(Uri address, object userToken)
  void OpenWriteAsync(Uri address)
  void OpenWriteAsync(Uri address, string method)
  void OpenWriteAsync(Uri address, string method, object userToken)
  void DownloadStringAsyncCallback(Byte[] returnBytes, Exception exception, object state)
  void DownloadStringAsync(Uri address)
  void DownloadStringAsync(Uri address, object userToken)
  void DownloadDataAsyncCallback(Byte[] returnBytes, Exception exception, object state)
  void DownloadDataAsync(Uri address)
  void DownloadDataAsync(Uri address, object userToken)
  void DownloadFileAsyncCallback(Byte[] returnBytes, Exception exception, object state)
  void DownloadFileAsync(Uri address, string fileName)
  void DownloadFileAsync(Uri address, string fileName, object userToken)
  void UploadStringAsync(Uri address, string data)
  void UploadStringAsync(Uri address, string method, string data)
  void UploadStringAsync(Uri address, string method, string data, object userToken)
  void UploadDataAsync(Uri address, Byte[] data)
  void UploadDataAsync(Uri address, string method, Byte[] data)
  void UploadDataAsync(Uri address, string method, Byte[] data, object userToken)
  void UploadFileAsync(Uri address, string fileName)
  void UploadFileAsync(Uri address, string method, string fileName)
  void UploadFileAsync(Uri address, string method, string fileName, object userToken)
  void UploadValuesAsync(Uri address, NameValueCollection data)
  void UploadValuesAsync(Uri address, string method, NameValueCollection data)
  void UploadValuesAsync(Uri address, string method, NameValueCollection data, object userToken)
  Exception GetExceptionToPropagate(Exception e)
  void CancelAsync()
  Task`1<string> DownloadStringTaskAsync(string address)
  Task`1<string> DownloadStringTaskAsync(Uri address)
  Task`1<Stream> OpenReadTaskAsync(string address)
  Task`1<Stream> OpenReadTaskAsync(Uri address)
  Task`1<Stream> OpenWriteTaskAsync(string address)
  Task`1<Stream> OpenWriteTaskAsync(Uri address)
  Task`1<Stream> OpenWriteTaskAsync(string address, string method)
  Task`1<Stream> OpenWriteTaskAsync(Uri address, string method)
  Task`1<string> UploadStringTaskAsync(string address, string data)
  Task`1<string> UploadStringTaskAsync(Uri address, string data)
  Task`1<string> UploadStringTaskAsync(string address, string method, string data)
  Task`1<string> UploadStringTaskAsync(Uri address, string method, string data)
  Task`1<Byte[]> DownloadDataTaskAsync(string address)
  Task`1<Byte[]> DownloadDataTaskAsync(Uri address)
  Task DownloadFileTaskAsync(string address, string fileName)
  Task DownloadFileTaskAsync(Uri address, string fileName)
  Task`1<Byte[]> UploadDataTaskAsync(string address, Byte[] data)
  Task`1<Byte[]> UploadDataTaskAsync(Uri address, Byte[] data)
  Task`1<Byte[]> UploadDataTaskAsync(string address, string method, Byte[] data)
  Task`1<Byte[]> UploadDataTaskAsync(Uri address, string method, Byte[] data)
  Task`1<Byte[]> UploadFileTaskAsync(string address, string fileName)
  Task`1<Byte[]> UploadFileTaskAsync(Uri address, string fileName)
  Task`1<Byte[]> UploadFileTaskAsync(string address, string method, string fileName)
  Task`1<Byte[]> UploadFileTaskAsync(Uri address, string method, string fileName)
  Task`1<Byte[]> UploadValuesTaskAsync(string address, NameValueCollection data)
  Task`1<Byte[]> UploadValuesTaskAsync(string address, string method, NameValueCollection data)
  Task`1<Byte[]> UploadValuesTaskAsync(Uri address, NameValueCollection data)
  Task`1<Byte[]> UploadValuesTaskAsync(Uri address, string method, NameValueCollection data)
  void HandleCompletion(TaskCompletionSource`1<T> tcs, TAsyncCompletedEventArgs e, Func`2<TAsyncCompletedEventArgs, T> getResult, TCompletionDelegate handler, Action`2<WebClient, TCompletionDelegate> unregisterHandler)
  void PostProgressChanged(AsyncOperation asyncOp, ProgressData progress)
  void ThrowIfNull(object argument, string parameterName)
  bool get_AllowReadStreamBuffering()
  void set_AllowReadStreamBuffering(bool value)
  bool get_AllowWriteStreamBuffering()
  void set_AllowWriteStreamBuffering(bool value)
  void add_WriteStreamClosed(WriteStreamClosedEventHandler value)
  void remove_WriteStreamClosed(WriteStreamClosedEventHandler value)
  void OnWriteStreamClosed(WriteStreamClosedEventArgs e)
  void .cctor()
  void <StartAsyncOperation>b__78_0(object arg)
  void <StartAsyncOperation>b__78_1(object arg)
  void <StartAsyncOperation>b__78_2(object arg)
  void <StartAsyncOperation>b__78_3(object arg)
  void <StartAsyncOperation>b__78_4(object arg)
  void <StartAsyncOperation>b__78_5(object arg)
  void <StartAsyncOperation>b__78_6(object arg)
  void <StartAsyncOperation>b__78_7(object arg)
  void <StartAsyncOperation>b__78_8(object arg)
  void <StartAsyncOperation>b__78_9(object arg)
  void <StartAsyncOperation>b__78_10(object arg)
  void <UploadStringAsync>b__179_0(Byte[] bytesResult, Exception error, AsyncOperation uploadAsyncOp)
--------------------------------------------------
Класс: System.Net.OpenReadCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OpenReadCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, OpenReadCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.OpenWriteCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, OpenWriteCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, OpenWriteCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.DownloadStringCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DownloadStringCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, DownloadStringCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.DownloadDataCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DownloadDataCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, DownloadDataCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.UploadStringCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UploadStringCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, UploadStringCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.UploadDataCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UploadDataCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, UploadDataCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.UploadFileCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UploadFileCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, UploadFileCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.UploadValuesCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UploadValuesCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, UploadValuesCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.DownloadProgressChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DownloadProgressChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, DownloadProgressChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.UploadProgressChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, UploadProgressChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, UploadProgressChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.WriteStreamClosedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, WriteStreamClosedEventArgs e)
  IAsyncResult BeginInvoke(object sender, WriteStreamClosedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.OpenReadCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  Stream _result
Свойства:
  Stream Result
Методы:
  void .ctor(Stream result, Exception exception, bool cancelled, object userToken)
  Stream get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.OpenWriteCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  Stream _result
Свойства:
  Stream Result
Методы:
  void .ctor(Stream result, Exception exception, bool cancelled, object userToken)
  Stream get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.DownloadStringCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  string _result
Свойства:
  string Result
Методы:
  void .ctor(string result, Exception exception, bool cancelled, object userToken)
  string get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.DownloadDataCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  Byte[] _result
Свойства:
  Byte[] Result
Методы:
  void .ctor(Byte[] result, Exception exception, bool cancelled, object userToken)
  Byte[] get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.UploadStringCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  string _result
Свойства:
  string Result
Методы:
  void .ctor(string result, Exception exception, bool cancelled, object userToken)
  string get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.UploadDataCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  Byte[] _result
Свойства:
  Byte[] Result
Методы:
  void .ctor(Byte[] result, Exception exception, bool cancelled, object userToken)
  Byte[] get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.UploadFileCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  Byte[] _result
Свойства:
  Byte[] Result
Методы:
  void .ctor(Byte[] result, Exception exception, bool cancelled, object userToken)
  Byte[] get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.UploadValuesCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  Byte[] _result
Свойства:
  Byte[] Result
Методы:
  void .ctor(Byte[] result, Exception exception, bool cancelled, object userToken)
  Byte[] get_Result()
  void .ctor()
--------------------------------------------------
Класс: System.Net.DownloadProgressChangedEventArgs
Наследуется от: ProgressChangedEventArgs
Поля:
  long <BytesReceived>k__BackingField
  long <TotalBytesToReceive>k__BackingField
Свойства:
  long BytesReceived
  long TotalBytesToReceive
Методы:
  void .ctor(int progressPercentage, object userToken, long bytesReceived, long totalBytesToReceive)
  long get_BytesReceived()
  long get_TotalBytesToReceive()
  void .ctor()
--------------------------------------------------
Класс: System.Net.UploadProgressChangedEventArgs
Наследуется от: ProgressChangedEventArgs
Поля:
  long <BytesReceived>k__BackingField
  long <TotalBytesToReceive>k__BackingField
  long <BytesSent>k__BackingField
  long <TotalBytesToSend>k__BackingField
Свойства:
  long BytesReceived
  long TotalBytesToReceive
  long BytesSent
  long TotalBytesToSend
Методы:
  void .ctor(int progressPercentage, object userToken, long bytesSent, long totalBytesToSend, long bytesReceived, long totalBytesToReceive)
  long get_BytesReceived()
  long get_TotalBytesToReceive()
  long get_BytesSent()
  long get_TotalBytesToSend()
  void .ctor()
--------------------------------------------------
Класс: System.Net.WriteStreamClosedEventArgs
Наследуется от: EventArgs
Поля:
Свойства:
  Exception Error
Методы:
  void .ctor()
  Exception get_Error()
--------------------------------------------------
Класс: System.Net.AuthenticationSchemes
Наследуется от: Enum
Поля:
  int value__
  AuthenticationSchemes None
  AuthenticationSchemes Digest
  AuthenticationSchemes Negotiate
  AuthenticationSchemes Ntlm
  AuthenticationSchemes Basic
  AuthenticationSchemes Anonymous
  AuthenticationSchemes IntegratedWindowsAuthentication
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.AuthenticationSchemeSelector
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  AuthenticationSchemes Invoke(HttpListenerRequest httpRequest)
  IAsyncResult BeginInvoke(HttpListenerRequest httpRequest, AsyncCallback callback, object object)
  AuthenticationSchemes EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Authorization
Наследуется от: object
Поля:
  string m_Message
  bool m_Complete
  String[] m_ProtectionRealm
  string m_ConnectionGroupId
  bool m_MutualAuth
  string ModuleAuthenticationType
Свойства:
  string Message
  string ConnectionGroupId
  bool Complete
  String[] ProtectionRealm
  bool MutuallyAuthenticated
Методы:
  void .ctor(string token)
  void .ctor(string token, bool finished)
  void .ctor(string token, bool finished, string connectionGroupId)
  void .ctor(string token, bool finished, string connectionGroupId, bool mutualAuth)
  string get_Message()
  string get_ConnectionGroupId()
  bool get_Complete()
  void SetComplete(bool complete)
  String[] get_ProtectionRealm()
  void set_ProtectionRealm(String[] value)
  bool get_MutuallyAuthenticated()
  void set_MutuallyAuthenticated(bool value)
--------------------------------------------------
Класс: System.Net.CredentialCache
Наследуется от: object
Поля:
  Hashtable cache
  Hashtable cacheForHosts
  int m_version
  int m_NumbDefaultCredInCache
Свойства:
  bool IsDefaultInCache
  ICredentials DefaultCredentials
  NetworkCredential DefaultNetworkCredentials
Методы:
  bool get_IsDefaultInCache()
  void .ctor()
  void Add(Uri uriPrefix, string authType, NetworkCredential cred)
  void Add(string host, int port, string authenticationType, NetworkCredential credential)
  void Remove(Uri uriPrefix, string authType)
  void Remove(string host, int port, string authenticationType)
  NetworkCredential GetCredential(Uri uriPrefix, string authType)
  NetworkCredential GetCredential(string host, int port, string authenticationType)
  IEnumerator GetEnumerator()
  ICredentials get_DefaultCredentials()
  NetworkCredential get_DefaultNetworkCredentials()
--------------------------------------------------
Класс: System.Net.SystemNetworkCredential
Наследуется от: NetworkCredential
Поля:
  SystemNetworkCredential defaultCredential
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.CredentialHostKey
Наследуется от: object
Поля:
  string Host
  string AuthenticationType
  int Port
  int m_HashCode
  bool m_ComputedHashCode
Свойства:
Методы:
  void .ctor(string host, int port, string authenticationType)
  bool Match(string host, int port, string authenticationType)
  int GetHashCode()
  bool Equals(object comparand)
  string ToString()
--------------------------------------------------
Класс: System.Net.CredentialKey
Наследуется от: object
Поля:
  Uri UriPrefix
  int UriPrefixLength
  string AuthenticationType
  int m_HashCode
  bool m_ComputedHashCode
Свойства:
Методы:
  void .ctor(Uri uriPrefix, string authenticationType)
  bool Match(Uri uri, string authenticationType)
  bool IsPrefix(Uri uri, Uri prefixUri)
  int GetHashCode()
  bool Equals(object comparand)
  string ToString()
--------------------------------------------------
Класс: System.Net.DnsEndPoint
Наследуется от: EndPoint
Поля:
  string m_Host
  int m_Port
  AddressFamily m_Family
Свойства:
  string Host
  AddressFamily AddressFamily
  int Port
Методы:
  void .ctor(string host, int port)
  void .ctor(string host, int port, AddressFamily addressFamily)
  bool Equals(object comparand)
  int GetHashCode()
  string ToString()
  string get_Host()
  AddressFamily get_AddressFamily()
  int get_Port()
--------------------------------------------------
Класс: System.Net.EndPoint
Наследуется от: object
Поля:
Свойства:
  AddressFamily AddressFamily
Методы:
  AddressFamily get_AddressFamily()
  SocketAddress Serialize()
  EndPoint Create(SocketAddress socketAddress)
  void .ctor()
--------------------------------------------------
Класс: System.Net.FtpStatusCode
Наследуется от: Enum
Поля:
  int value__
  FtpStatusCode Undefined
  FtpStatusCode RestartMarker
  FtpStatusCode ServiceTemporarilyNotAvailable
  FtpStatusCode DataAlreadyOpen
  FtpStatusCode OpeningData
  FtpStatusCode CommandOK
  FtpStatusCode CommandExtraneous
  FtpStatusCode DirectoryStatus
  FtpStatusCode FileStatus
  FtpStatusCode SystemType
  FtpStatusCode SendUserCommand
  FtpStatusCode ClosingControl
  FtpStatusCode ClosingData
  FtpStatusCode EnteringPassive
  FtpStatusCode LoggedInProceed
  FtpStatusCode ServerWantsSecureSession
  FtpStatusCode FileActionOK
  FtpStatusCode PathnameCreated
  FtpStatusCode SendPasswordCommand
  FtpStatusCode NeedLoginAccount
  FtpStatusCode FileCommandPending
  FtpStatusCode ServiceNotAvailable
  FtpStatusCode CantOpenData
  FtpStatusCode ConnectionClosed
  FtpStatusCode ActionNotTakenFileUnavailableOrBusy
  FtpStatusCode ActionAbortedLocalProcessingError
  FtpStatusCode ActionNotTakenInsufficientSpace
  FtpStatusCode CommandSyntaxError
  FtpStatusCode ArgumentSyntaxError
  FtpStatusCode CommandNotImplemented
  FtpStatusCode BadCommandSequence
  FtpStatusCode NotLoggedIn
  FtpStatusCode AccountNeeded
  FtpStatusCode ActionNotTakenFileUnavailable
  FtpStatusCode ActionAbortedUnknownPageType
  FtpStatusCode FileActionAborted
  FtpStatusCode ActionNotTakenFilenameNotAllowed
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.GlobalProxySelection
Наследуется от: object
Поля:
Свойства:
  IWebProxy Select
Методы:
  IWebProxy get_Select()
  void set_Select(IWebProxy value)
  IWebProxy GetEmptyWebProxy()
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpListenerException
Наследуется от: Win32Exception
Поля:
Свойства:
  int ErrorCode
Методы:
  void .ctor()
  void .ctor(int errorCode)
  void .ctor(int errorCode, string message)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  int get_ErrorCode()
--------------------------------------------------
Класс: System.Net.HttpListenerRequestUriBuilder
Наследуется от: object
Поля:
  bool useCookedRequestUrl
  Encoding utf8Encoding
  Encoding ansiEncoding
  string rawUri
  string cookedUriScheme
  string cookedUriHost
  string cookedUriPath
  string cookedUriQuery
  StringBuilder requestUriString
  List`1<byte> rawOctets
  string rawPath
  Uri requestUri
Свойства:
Методы:
  void .cctor()
  void .ctor(string rawUri, string cookedUriScheme, string cookedUriHost, string cookedUriPath, string cookedUriQuery)
  Uri GetRequestUri(string rawUri, string cookedUriScheme, string cookedUriHost, string cookedUriPath, string cookedUriQuery)
  Uri Build()
  void BuildRequestUriUsingCookedPath()
  void BuildRequestUriUsingRawPath()
  Encoding GetEncoding(EncodingType type)
  ParsingResult BuildRequestUriUsingRawPath(Encoding encoding)
  ParsingResult ParseRawPath(Encoding encoding)
  bool AppendUnicodeCodePointValuePercentEncoded(string codePoint)
  bool AddPercentEncodedOctetToRawOctetsList(Encoding encoding, string escapedCharacter)
  bool EmptyDecodeAndAppendRawOctetsList(Encoding encoding)
  void AppendOctetsPercentEncoded(StringBuilder target, IEnumerable`1<byte> octets)
  string GetOctetsAsString(IEnumerable`1<byte> octets)
  string GetPath(string uriString)
  string AddSlashToAsteriskOnlyPath(string path)
  void LogWarning(string methodName, string message, Object[] args)
--------------------------------------------------
Класс: System.Net.HttpRequestHeader
Наследуется от: Enum
Поля:
  int value__
  HttpRequestHeader CacheControl
  HttpRequestHeader Connection
  HttpRequestHeader Date
  HttpRequestHeader KeepAlive
  HttpRequestHeader Pragma
  HttpRequestHeader Trailer
  HttpRequestHeader TransferEncoding
  HttpRequestHeader Upgrade
  HttpRequestHeader Via
  HttpRequestHeader Warning
  HttpRequestHeader Allow
  HttpRequestHeader ContentLength
  HttpRequestHeader ContentType
  HttpRequestHeader ContentEncoding
  HttpRequestHeader ContentLanguage
  HttpRequestHeader ContentLocation
  HttpRequestHeader ContentMd5
  HttpRequestHeader ContentRange
  HttpRequestHeader Expires
  HttpRequestHeader LastModified
  HttpRequestHeader Accept
  HttpRequestHeader AcceptCharset
  HttpRequestHeader AcceptEncoding
  HttpRequestHeader AcceptLanguage
  HttpRequestHeader Authorization
  HttpRequestHeader Cookie
  HttpRequestHeader Expect
  HttpRequestHeader From
  HttpRequestHeader Host
  HttpRequestHeader IfMatch
  HttpRequestHeader IfModifiedSince
  HttpRequestHeader IfNoneMatch
  HttpRequestHeader IfRange
  HttpRequestHeader IfUnmodifiedSince
  HttpRequestHeader MaxForwards
  HttpRequestHeader ProxyAuthorization
  HttpRequestHeader Referer
  HttpRequestHeader Range
  HttpRequestHeader Te
  HttpRequestHeader Translate
  HttpRequestHeader UserAgent
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.HttpResponseHeader
Наследуется от: Enum
Поля:
  int value__
  HttpResponseHeader CacheControl
  HttpResponseHeader Connection
  HttpResponseHeader Date
  HttpResponseHeader KeepAlive
  HttpResponseHeader Pragma
  HttpResponseHeader Trailer
  HttpResponseHeader TransferEncoding
  HttpResponseHeader Upgrade
  HttpResponseHeader Via
  HttpResponseHeader Warning
  HttpResponseHeader Allow
  HttpResponseHeader ContentLength
  HttpResponseHeader ContentType
  HttpResponseHeader ContentEncoding
  HttpResponseHeader ContentLanguage
  HttpResponseHeader ContentLocation
  HttpResponseHeader ContentMd5
  HttpResponseHeader ContentRange
  HttpResponseHeader Expires
  HttpResponseHeader LastModified
  HttpResponseHeader AcceptRanges
  HttpResponseHeader Age
  HttpResponseHeader ETag
  HttpResponseHeader Location
  HttpResponseHeader ProxyAuthenticate
  HttpResponseHeader RetryAfter
  HttpResponseHeader Server
  HttpResponseHeader SetCookie
  HttpResponseHeader Vary
  HttpResponseHeader WwwAuthenticate
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.IAuthenticationModule
Поля:
Свойства:
  bool CanPreAuthenticate
  string AuthenticationType
Методы:
  Authorization Authenticate(string challenge, WebRequest request, ICredentials credentials)
  Authorization PreAuthenticate(WebRequest request, ICredentials credentials)
  bool get_CanPreAuthenticate()
  string get_AuthenticationType()
--------------------------------------------------
Класс: System.Net.ICertificatePolicy
Поля:
Свойства:
Методы:
  bool CheckValidationResult(ServicePoint srvPoint, X509Certificate certificate, WebRequest request, int certificateProblem)
--------------------------------------------------
Класс: System.Net.ICredentials
Поля:
Свойства:
Методы:
  NetworkCredential GetCredential(Uri uri, string authType)
--------------------------------------------------
Класс: System.Net.ICredentialsByHost
Поля:
Свойства:
Методы:
  NetworkCredential GetCredential(string host, int port, string authenticationType)
--------------------------------------------------
Класс: System.Net.IPHostEntry
Наследуется от: object
Поля:
  string hostName
  String[] aliases
  IPAddress[] addressList
  bool isTrustedHost
Свойства:
  string HostName
  String[] Aliases
  IPAddress[] AddressList
Методы:
  string get_HostName()
  void set_HostName(string value)
  String[] get_Aliases()
  void set_Aliases(String[] value)
  IPAddress[] get_AddressList()
  void set_AddressList(IPAddress[] value)
  void .ctor()
--------------------------------------------------
Класс: System.Net.IWebProxyFinder
Поля:
Свойства:
  bool IsValid
Методы:
  bool GetProxies(Uri destination, IList`1& proxyList)
  void Abort()
  void Reset()
  bool get_IsValid()
--------------------------------------------------
Класс: System.Net.IWebRequestCreate
Поля:
Свойства:
Методы:
  WebRequest Create(Uri uri)
--------------------------------------------------
Класс: System.Net.IntPtrHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  IntPtr Add(IntPtr a, int b)
  long Subtract(IntPtr a, IntPtr b)
--------------------------------------------------
Класс: System.Net.InternalException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Net.NclUtilities
Наследуется от: object
Поля:
  ContextCallback modreq(System.Runtime.CompilerServices.IsVolatile) s_ContextRelativeDemandCallback
  IPAddress[] modreq(System.Runtime.CompilerServices.IsVolatile) _LocalAddresses
  object _LocalAddressesLock
  int HostNameBufferLength
  string _LocalDomainName
Свойства:
  bool HasShutdownStarted
  ContextCallback ContextRelativeDemandCallback
  IPAddress[] LocalAddresses
  object LocalAddressesLock
Методы:
  bool IsThreadPoolLow()
  bool get_HasShutdownStarted()
  bool IsCredentialFailure(SecurityStatus error)
  bool IsClientFault(SecurityStatus error)
  ContextCallback get_ContextRelativeDemandCallback()
  void DemandCallback(object state)
  bool GuessWhetherHostIsLoopback(string host)
  bool IsFatal(Exception exception)
  bool IsAddressLocal(IPAddress ipAddress)
  IPHostEntry GetLocalHost()
  IPAddress[] get_LocalAddresses()
  object get_LocalAddressesLock()
--------------------------------------------------
Класс: System.Net.NclConstants
Наследуется от: object
Поля:
  object Sentinel
  Object[] EmptyObjectArray
  Uri[] EmptyUriArray
  Byte[] CRLF
  Byte[] ChunkTerminator
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Net.InterlockedGate
Наследуется от: ValueType
Поля:
  int m_State
  int Open
  int Triggering
  int Triggered
  int Signaling
  int Signaled
  int Completed
Свойства:
Методы:
  void Reset()
  bool Trigger(bool exclusive)
  bool StartTriggering(bool exclusive)
  void FinishTriggering()
  bool StartSignaling(bool exclusive)
  void FinishSignaling()
  bool Complete()
--------------------------------------------------
Класс: System.Net.ValidationHelper
Наследуется от: object
Поля:
  String[] EmptyArray
  Char[] InvalidMethodChars
  Char[] InvalidParamChars
Свойства:
Методы:
  String[] MakeEmptyArrayNull(String[] stringArray)
  string MakeStringNull(string stringValue)
  string ExceptionMessage(Exception exception)
  string ToString(object objectValue)
  string HashString(object objectValue)
  bool IsInvalidHttpString(string stringValue)
  bool IsBlankString(string stringValue)
  bool ValidateTcpPort(int port)
  bool ValidateRange(int actual, int fromAllowed, int toAllowed)
  void ValidateSegment(ArraySegment`1<byte> segment)
  void .cctor()
--------------------------------------------------
Класс: System.Net.ExceptionHelper
Наследуется от: object
Поля:
Свойства:
  NotImplementedException MethodNotImplementedException
  NotImplementedException PropertyNotImplementedException
  WebException TimeoutException
  NotSupportedException MethodNotSupportedException
  NotSupportedException PropertyNotSupportedException
  WebException IsolatedException
  WebException RequestAbortedException
  WebException CacheEntryNotFoundException
  WebException RequestProhibitedByCachePolicyException
Методы:
  NotImplementedException get_MethodNotImplementedException()
  NotImplementedException get_PropertyNotImplementedException()
  WebException get_TimeoutException()
  NotSupportedException get_MethodNotSupportedException()
  NotSupportedException get_PropertyNotSupportedException()
  WebException get_IsolatedException()
  WebException get_RequestAbortedException()
  WebException get_CacheEntryNotFoundException()
  WebException get_RequestProhibitedByCachePolicyException()
--------------------------------------------------
Класс: System.Net.WindowsInstallationType
Наследуется от: Enum
Поля:
  int value__
  WindowsInstallationType Unknown
  WindowsInstallationType Client
  WindowsInstallationType Server
  WindowsInstallationType ServerCore
  WindowsInstallationType Embedded
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SecurityStatus
Наследуется от: Enum
Поля:
  int value__
  SecurityStatus OK
  SecurityStatus ContinueNeeded
  SecurityStatus CompleteNeeded
  SecurityStatus CompAndContinue
  SecurityStatus ContextExpired
  SecurityStatus CredentialsNeeded
  SecurityStatus Renegotiate
  SecurityStatus OutOfMemory
  SecurityStatus InvalidHandle
  SecurityStatus Unsupported
  SecurityStatus TargetUnknown
  SecurityStatus InternalError
  SecurityStatus PackageNotFound
  SecurityStatus NotOwner
  SecurityStatus CannotInstall
  SecurityStatus InvalidToken
  SecurityStatus CannotPack
  SecurityStatus QopNotSupported
  SecurityStatus NoImpersonation
  SecurityStatus LogonDenied
  SecurityStatus UnknownCredentials
  SecurityStatus NoCredentials
  SecurityStatus MessageAltered
  SecurityStatus OutOfSequence
  SecurityStatus NoAuthenticatingAuthority
  SecurityStatus IncompleteMessage
  SecurityStatus IncompleteCredentials
  SecurityStatus BufferNotEnough
  SecurityStatus WrongPrincipal
  SecurityStatus TimeSkew
  SecurityStatus UntrustedRoot
  SecurityStatus IllegalMessage
  SecurityStatus CertUnknown
  SecurityStatus CertExpired
  SecurityStatus AlgorithmMismatch
  SecurityStatus SecurityQosFailed
  SecurityStatus SmartcardLogonRequired
  SecurityStatus UnsupportedPreauth
  SecurityStatus BadBinding
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.ContentTypeValues
Наследуется от: Enum
Поля:
  int value__
  ContentTypeValues ChangeCipherSpec
  ContentTypeValues Alert
  ContentTypeValues HandShake
  ContentTypeValues AppData
  ContentTypeValues Unrecognized
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.ContextAttribute
Наследуется от: Enum
Поля:
  int value__
  ContextAttribute Sizes
  ContextAttribute Names
  ContextAttribute Lifespan
  ContextAttribute DceInfo
  ContextAttribute StreamSizes
  ContextAttribute Authority
  ContextAttribute PackageInfo
  ContextAttribute NegotiationInfo
  ContextAttribute UniqueBindings
  ContextAttribute EndpointBindings
  ContextAttribute ClientSpecifiedSpn
  ContextAttribute RemoteCertificate
  ContextAttribute LocalCertificate
  ContextAttribute RootStore
  ContextAttribute IssuerListInfoEx
  ContextAttribute ConnectionInfo
  ContextAttribute UiInfo
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Endianness
Наследуется от: Enum
Поля:
  int value__
  Endianness Network
  Endianness Native
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.CredentialUse
Наследуется от: Enum
Поля:
  int value__
  CredentialUse Inbound
  CredentialUse Outbound
  CredentialUse Both
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.BufferType
Наследуется от: Enum
Поля:
  int value__
  BufferType Empty
  BufferType Data
  BufferType Token
  BufferType Parameters
  BufferType Missing
  BufferType Extra
  BufferType Trailer
  BufferType Header
  BufferType Padding
  BufferType Stream
  BufferType ChannelBindings
  BufferType TargetHost
  BufferType ReadOnlyFlag
  BufferType ReadOnlyWithChecksum
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.ChainPolicyType
Наследуется от: Enum
Поля:
  int value__
  ChainPolicyType Base
  ChainPolicyType Authenticode
  ChainPolicyType Authenticode_TS
  ChainPolicyType SSL
  ChainPolicyType BasicConstraints
  ChainPolicyType NtAuth
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.IgnoreCertProblem
Наследуется от: Enum
Поля:
  int value__
  IgnoreCertProblem not_time_valid
  IgnoreCertProblem ctl_not_time_valid
  IgnoreCertProblem not_time_nested
  IgnoreCertProblem invalid_basic_constraints
  IgnoreCertProblem all_not_time_valid
  IgnoreCertProblem allow_unknown_ca
  IgnoreCertProblem wrong_usage
  IgnoreCertProblem invalid_name
  IgnoreCertProblem invalid_policy
  IgnoreCertProblem end_rev_unknown
  IgnoreCertProblem ctl_signer_rev_unknown
  IgnoreCertProblem ca_rev_unknown
  IgnoreCertProblem root_rev_unknown
  IgnoreCertProblem all_rev_unknown
  IgnoreCertProblem none
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.CertUsage
Наследуется от: Enum
Поля:
  int value__
  CertUsage MatchTypeAnd
  CertUsage MatchTypeOr
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.CertificateEncoding
Наследуется от: Enum
Поля:
  int value__
  CertificateEncoding Zero
  CertificateEncoding X509AsnEncoding
  CertificateEncoding X509NdrEncoding
  CertificateEncoding Pkcs7AsnEncoding
  CertificateEncoding Pkcs7NdrEncoding
  CertificateEncoding AnyAsnEncoding
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.CertificateProblem
Наследуется от: Enum
Поля:
  int value__
  CertificateProblem OK
  CertificateProblem TrustNOSIGNATURE
  CertificateProblem CertEXPIRED
  CertificateProblem CertVALIDITYPERIODNESTING
  CertificateProblem CertROLE
  CertificateProblem CertPATHLENCONST
  CertificateProblem CertCRITICAL
  CertificateProblem CertPURPOSE
  CertificateProblem CertISSUERCHAINING
  CertificateProblem CertMALFORMED
  CertificateProblem CertUNTRUSTEDROOT
  CertificateProblem CertCHAINING
  CertificateProblem CertREVOKED
  CertificateProblem CertUNTRUSTEDTESTROOT
  CertificateProblem CertREVOCATION_FAILURE
  CertificateProblem CertCN_NO_MATCH
  CertificateProblem CertWRONG_USAGE
  CertificateProblem TrustEXPLICITDISTRUST
  CertificateProblem CertUNTRUSTEDCA
  CertificateProblem CertINVALIDPOLICY
  CertificateProblem CertINVALIDNAME
  CertificateProblem CryptNOREVOCATIONCHECK
  CertificateProblem CryptREVOCATIONOFFLINE
  CertificateProblem TrustSYSTEMERROR
  CertificateProblem TrustNOSIGNERCERT
  CertificateProblem TrustCOUNTERSIGNER
  CertificateProblem TrustCERTSIGNATURE
  CertificateProblem TrustTIMESTAMP
  CertificateProblem TrustBADDIGEST
  CertificateProblem TrustBASICCONSTRAINTS
  CertificateProblem TrustFINANCIALCRITERIA
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SecChannelBindings
Наследуется от: object
Поля:
  int dwInitiatorAddrType
  int cbInitiatorLength
  int dwInitiatorOffset
  int dwAcceptorAddrType
  int cbAcceptorLength
  int dwAcceptorOffset
  int cbApplicationDataLength
  int dwApplicationDataOffset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.WebRequestPrefixElement
Наследуется от: object
Поля:
  string Prefix
  IWebRequestCreate creator
  Type creatorType
Свойства:
  IWebRequestCreate Creator
Методы:
  IWebRequestCreate get_Creator()
  void set_Creator(IWebRequestCreate value)
  void .ctor(string P, Type creatorType)
  void .ctor(string P, IWebRequestCreate C)
--------------------------------------------------
Класс: System.Net.HttpAbortDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(HttpWebRequest request, WebException webException)
  IAsyncResult BeginInvoke(HttpWebRequest request, WebException webException, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.HttpKnownHeaderNames
Наследуется от: object
Поля:
  string CacheControl
  string Connection
  string Date
  string KeepAlive
  string Pragma
  string ProxyConnection
  string Trailer
  string TransferEncoding
  string Upgrade
  string Via
  string Warning
  string ContentLength
  string ContentType
  string ContentDisposition
  string ContentEncoding
  string ContentLanguage
  string ContentLocation
  string ContentRange
  string Expires
  string LastModified
  string Age
  string Location
  string ProxyAuthenticate
  string RetryAfter
  string Server
  string SetCookie
  string SetCookie2
  string Vary
  string WWWAuthenticate
  string Accept
  string AcceptCharset
  string AcceptEncoding
  string AcceptLanguage
  string Authorization
  string Cookie
  string Cookie2
  string Expect
  string From
  string Host
  string IfMatch
  string IfModifiedSince
  string IfNoneMatch
  string IfRange
  string IfUnmodifiedSince
  string MaxForwards
  string ProxyAuthorization
  string Referer
  string Range
  string UserAgent
  string ContentMD5
  string ETag
  string TE
  string Allow
  string AcceptRanges
  string P3P
  string XPoweredBy
  string XAspNetVersion
  string SecWebSocketKey
  string SecWebSocketExtensions
  string SecWebSocketAccept
  string Origin
  string SecWebSocketProtocol
  string SecWebSocketVersion
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.HttpContinueDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(int StatusCode, WebHeaderCollection httpHeaders)
  IAsyncResult BeginInvoke(int StatusCode, WebHeaderCollection httpHeaders, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.HttpWriteMode
Наследуется от: Enum
Поля:
  int value__
  HttpWriteMode Unknown
  HttpWriteMode ContentLength
  HttpWriteMode Chunked
  HttpWriteMode Buffer
  HttpWriteMode None
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.UnlockConnectionDelegate
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke()
  IAsyncResult BeginInvoke(AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.HttpBehaviour
Наследуется от: Enum
Поля:
  byte value__
  HttpBehaviour Unknown
  HttpBehaviour HTTP10
  HttpBehaviour HTTP11PartiallyCompliant
  HttpBehaviour HTTP11
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.HttpProcessingResult
Наследуется от: Enum
Поля:
  int value__
  HttpProcessingResult Continue
  HttpProcessingResult ReadWait
  HttpProcessingResult WriteWait
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.KnownHttpVerb
Наследуется от: object
Поля:
  string Name
  bool RequireContentBody
  bool ContentBodyNotAllowed
  bool ConnectRequest
  bool ExpectNoContentResponse
  ListDictionary NamedHeaders
  KnownHttpVerb Get
  KnownHttpVerb Connect
  KnownHttpVerb Head
  KnownHttpVerb Put
  KnownHttpVerb Post
  KnownHttpVerb MkCol
Свойства:
Методы:
  void .ctor(string name, bool requireContentBody, bool contentBodyNotAllowed, bool connectRequest, bool expectNoContentResponse)
  void .cctor()
  bool Equals(KnownHttpVerb verb)
  KnownHttpVerb Parse(string name)
--------------------------------------------------
Класс: System.Net.HttpProtocolUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  DateTime string2date(string S)
  string date2string(DateTime D)
--------------------------------------------------
Класс: System.Net.TriState
Наследуется от: Enum
Поля:
  int value__
  TriState Unspecified
  TriState False
  TriState True
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.DefaultPorts
Наследуется от: Enum
Поля:
  int value__
  DefaultPorts DEFAULT_FTP_PORT
  DefaultPorts DEFAULT_GOPHER_PORT
  DefaultPorts DEFAULT_HTTP_PORT
  DefaultPorts DEFAULT_HTTPS_PORT
  DefaultPorts DEFAULT_NNTP_PORT
  DefaultPorts DEFAULT_SMTP_PORT
  DefaultPorts DEFAULT_TELNET_PORT
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.hostent
Наследуется от: ValueType
Поля:
  IntPtr h_name
  IntPtr h_aliases
  short h_addrtype
  short h_length
  IntPtr h_addr_list
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Blob
Наследуется от: ValueType
Поля:
  int cbSize
  int pBlobData
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.SplitWritesState
Наследуется от: object
Поля:
  int c_SplitEncryptedBuffersSize
  BufferOffsetSize[] _UserBuffers
  int _Index
  int _LastBufferConsumed
  BufferOffsetSize[] _RealBuffers
Свойства:
  bool IsDone
Методы:
  void .ctor(BufferOffsetSize[] buffers)
  bool get_IsDone()
  BufferOffsetSize[] GetNextBuffers()
--------------------------------------------------
Класс: System.Net.NetworkAccess
Наследуется от: Enum
Поля:
  int value__
  NetworkAccess Accept
  NetworkAccess Connect
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkCredential
Наследуется от: object
Поля:
  string m_domain
  string m_userName
  SecureString m_password
Свойства:
  string UserName
  string Password
  SecureString SecurePassword
  string Domain
Методы:
  void .ctor()
  void .ctor(string userName, string password)
  void .ctor(string userName, SecureString password)
  void .ctor(string userName, string password, string domain)
  void .ctor(string userName, SecureString password, string domain)
  string get_UserName()
  void set_UserName(string value)
  string get_Password()
  void set_Password(string value)
  SecureString get_SecurePassword()
  void set_SecurePassword(SecureString value)
  string get_Domain()
  void set_Domain(string value)
  string InternalGetUserName()
  string InternalGetPassword()
  SecureString InternalGetSecurePassword()
  string InternalGetDomain()
  string InternalGetDomainUserName()
  NetworkCredential GetCredential(Uri uri, string authType)
  NetworkCredential GetCredential(string host, int port, string authenticationType)
--------------------------------------------------
Класс: System.Net.ProtocolViolationException
Наследуется от: InvalidOperationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Net.SocketAddress
Наследуется от: object
Поля:
  int IPv6AddressSize
  int IPv4AddressSize
  int m_Size
  Byte[] m_Buffer
  int WriteableOffset
  int MaxSize
  bool m_changed
  int m_hash
Свойства:
  AddressFamily Family
  int Size
  byte Item
Методы:
  AddressFamily get_Family()
  int get_Size()
  byte get_Item(int offset)
  void set_Item(int offset, byte value)
  void .ctor(AddressFamily family)
  void .ctor(AddressFamily family, int size)
  void .ctor(IPAddress ipAddress)
  void .ctor(IPAddress ipaddress, int port)
  IPAddress GetIPAddress()
  IPEndPoint GetIPEndPoint()
  void CopyAddressSizeIntoBuffer()
  int GetAddressSizeOffset()
  void SetSize(IntPtr ptr)
  bool Equals(object comparand)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: System.Net.TransportContext
Наследуется от: object
Поля:
Свойства:
Методы:
  ChannelBinding GetChannelBinding(ChannelBindingKind kind)
  IEnumerable`1<TokenBinding> GetTlsTokenBindings()
  void .ctor()
--------------------------------------------------
Класс: System.Net.CachedTransportContext
Наследуется от: TransportContext
Поля:
  ChannelBinding binding
Свойства:
Методы:
  void .ctor(ChannelBinding binding)
  ChannelBinding GetChannelBinding(ChannelBindingKind kind)
--------------------------------------------------
Класс: System.Net.TransportType
Наследуется от: Enum
Поля:
  int value__
  TransportType Udp
  TransportType Connectionless
  TransportType Tcp
  TransportType ConnectionOriented
  TransportType All
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebException
Наследуется от: InvalidOperationException
Поля:
  WebExceptionStatus m_Status
  WebResponse m_Response
  WebExceptionInternalStatus m_InternalStatus
Свойства:
  WebExceptionStatus Status
  WebResponse Response
  WebExceptionInternalStatus InternalStatus
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, WebExceptionStatus status)
  void .ctor(string message, WebExceptionStatus status, WebExceptionInternalStatus internalStatus, Exception innerException)
  void .ctor(string message, Exception innerException, WebExceptionStatus status, WebResponse response)
  void .ctor(string message, string data, Exception innerException, WebExceptionStatus status, WebResponse response)
  void .ctor(string message, Exception innerException, WebExceptionStatus status, WebResponse response, WebExceptionInternalStatus internalStatus)
  void .ctor(string message, string data, Exception innerException, WebExceptionStatus status, WebResponse response, WebExceptionInternalStatus internalStatus)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  WebExceptionStatus get_Status()
  WebResponse get_Response()
  WebExceptionInternalStatus get_InternalStatus()
--------------------------------------------------
Класс: System.Net.WebExceptionInternalStatus
Наследуется от: Enum
Поля:
  int value__
  WebExceptionInternalStatus RequestFatal
  WebExceptionInternalStatus ServicePointFatal
  WebExceptionInternalStatus Recoverable
  WebExceptionInternalStatus Isolated
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebExceptionStatus
Наследуется от: Enum
Поля:
  int value__
  WebExceptionStatus Success
  WebExceptionStatus NameResolutionFailure
  WebExceptionStatus ConnectFailure
  WebExceptionStatus ReceiveFailure
  WebExceptionStatus SendFailure
  WebExceptionStatus PipelineFailure
  WebExceptionStatus RequestCanceled
  WebExceptionStatus ProtocolError
  WebExceptionStatus ConnectionClosed
  WebExceptionStatus TrustFailure
  WebExceptionStatus SecureChannelFailure
  WebExceptionStatus ServerProtocolViolation
  WebExceptionStatus KeepAliveFailure
  WebExceptionStatus Pending
  WebExceptionStatus Timeout
  WebExceptionStatus ProxyNameResolutionFailure
  WebExceptionStatus UnknownError
  WebExceptionStatus MessageLengthLimitExceeded
  WebExceptionStatus CacheEntryNotFound
  WebExceptionStatus RequestProhibitedByCachePolicy
  WebExceptionStatus RequestProhibitedByProxy
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebExceptionMapping
Наследуется от: object
Поля:
  String[] s_Mapping
Свойства:
Методы:
  string GetWebStatusString(WebExceptionStatus status)
  void .cctor()
--------------------------------------------------
Класс: System.Net.WebHeaderCollectionType
Наследуется от: Enum
Поля:
  ushort value__
  WebHeaderCollectionType Unknown
  WebHeaderCollectionType WebRequest
  WebHeaderCollectionType WebResponse
  WebHeaderCollectionType HttpWebRequest
  WebHeaderCollectionType HttpWebResponse
  WebHeaderCollectionType HttpListenerRequest
  WebHeaderCollectionType HttpListenerResponse
  WebHeaderCollectionType FtpWebRequest
  WebHeaderCollectionType FtpWebResponse
  WebHeaderCollectionType FileWebRequest
  WebHeaderCollectionType FileWebResponse
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebHeaderCollection
Наследуется от: NameValueCollection
Поля:
  int ApproxAveHeaderLineSize
  int ApproxHighAvgNumHeaders
  HeaderInfoTable HInfo
  String[] m_CommonHeaders
  int m_NumCommonHeaders
  String[] s_CommonHeaderNames
  SByte[] s_CommonHeaderHints
  int c_AcceptRanges
  int c_ContentLength
  int c_CacheControl
  int c_ContentType
  int c_Date
  int c_Expires
  int c_ETag
  int c_LastModified
  int c_Location
  int c_ProxyAuthenticate
  int c_P3P
  int c_SetCookie2
  int c_SetCookie
  int c_Server
  int c_Via
  int c_WwwAuthenticate
  int c_XAspNetVersion
  int c_XPoweredBy
  NameValueCollection m_InnerCollection
  WebHeaderCollectionType m_Type
  Char[] HttpTrimCharacters
  RfcChar[] RfcCharMap
Свойства:
  string ContentLength
  string CacheControl
  string ContentType
  string Date
  string Expires
  string ETag
  string LastModified
  string Location
  string ProxyAuthenticate
  string SetCookie2
  string SetCookie
  string Server
  string Via
  NameValueCollection InnerCollection
  bool AllowHttpRequestHeader
  bool AllowHttpResponseHeader
  string Item
  string Item
  int Count
  KeysCollection Keys
  String[] AllKeys
Методы:
  string get_ContentLength()
  string get_CacheControl()
  string get_ContentType()
  string get_Date()
  string get_Expires()
  string get_ETag()
  string get_LastModified()
  string get_Location()
  string get_ProxyAuthenticate()
  string get_SetCookie2()
  string get_SetCookie()
  string get_Server()
  string get_Via()
  void NormalizeCommonHeaders()
  NameValueCollection get_InnerCollection()
  bool AllowMultiValues(string name)
  bool get_AllowHttpRequestHeader()
  bool get_AllowHttpResponseHeader()
  string get_Item(HttpRequestHeader header)
  void set_Item(HttpRequestHeader header, string value)
  string get_Item(HttpResponseHeader header)
  void set_Item(HttpResponseHeader header, string value)
  void Add(HttpRequestHeader header, string value)
  void Add(HttpResponseHeader header, string value)
  void Set(HttpRequestHeader header, string value)
  void Set(HttpResponseHeader header, string value)
  void SetInternal(HttpResponseHeader header, string value)
  void Remove(HttpRequestHeader header)
  void Remove(HttpResponseHeader header)
  void AddWithoutValidate(string headerName, string headerValue)
  void SetAddVerified(string name, string value)
  void AddInternal(string name, string value)
  void ChangeInternal(string name, string value)
  void RemoveInternal(string name)
  void CheckUpdate(string name, string value)
  void AddInternalNotCommon(string name, string value)
  string CheckBadChars(string name, bool isHeaderValue)
  bool IsValidToken(string token)
  bool ContainsNonAsciiChars(string token)
  void ThrowOnRestrictedHeader(string headerName)
  void Add(string name, string value)
  void Add(string header)
  void Set(string name, string value)
  void SetInternal(string name, string value)
  void Remove(string name)
  String[] GetValues(string header)
  string ToString()
  string ToString(bool forTrace)
  string GetAsString(NameValueCollection cc, bool winInetCompat, bool forTrace)
  Byte[] ToByteArray()
  bool IsRestricted(string headerName)
  bool IsRestricted(string headerName, bool response)
  void .ctor()
  void .ctor(WebHeaderCollectionType type)
  void .ctor(NameValueCollection cc)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void OnDeserialization(object sender)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  DataParseStatus ParseHeaders(Byte[] buffer, int size, Int32& unparsed, Int32& totalResponseHeadersLength, int maximumResponseHeadersLength, WebParseError& parseError)
  DataParseStatus ParseHeadersStrict(Byte[] buffer, int size, Int32& unparsed, Int32& totalResponseHeadersLength, int maximumResponseHeadersLength, WebParseError& parseError)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  string Get(string name)
  IEnumerator GetEnumerator()
  int get_Count()
  KeysCollection get_Keys()
  bool InternalHasKeys()
  string Get(int index)
  String[] GetValues(int index)
  string GetKey(int index)
  String[] get_AllKeys()
  void Clear()
  void .cctor()
--------------------------------------------------
Класс: System.Net.CaseInsensitiveAscii
Наследуется от: object
Поля:
  CaseInsensitiveAscii StaticInstance
  Byte[] AsciiToLower
Свойства:
Методы:
  int GetHashCode(object myObject)
  int Compare(object firstObject, object secondObject)
  int FastGetHashCode(string myString)
  bool Equals(object firstObject, object secondObject)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.HostHeaderString
Наследуется от: object
Поля:
  bool m_Converted
  string m_String
  Byte[] m_Bytes
Свойства:
  string String
  int ByteCount
  Byte[] Bytes
Методы:
  void .ctor()
  void .ctor(string s)
  void Init(string s)
  void Convert()
  string get_String()
  void set_String(string value)
  int get_ByteCount()
  Byte[] get_Bytes()
  void Copy(Byte[] destBytes, int destByteIndex)
--------------------------------------------------
Класс: System.Net.WebPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  object m_accept
  object m_connect
Свойства:
  string Connect
  string Accept
  string ConnectPattern
  string AcceptPattern
Методы:
  void .ctor(SecurityAction action)
  string get_Connect()
  void set_Connect(string value)
  string get_Accept()
  void set_Accept(string value)
  string get_ConnectPattern()
  void set_ConnectPattern(string value)
  string get_AcceptPattern()
  void set_AcceptPattern(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Net.DelayedRegex
Наследуется от: object
Поля:
  Regex _AsRegex
  string _AsString
Свойства:
  Regex AsRegex
Методы:
  void .ctor(string regexString)
  void .ctor(Regex regex)
  Regex get_AsRegex()
  string ToString()
--------------------------------------------------
Класс: System.Net.WebPermission
Наследуется от: CodeAccessPermission
Поля:
  bool m_noRestriction
  bool m_UnrestrictedConnect
  bool m_UnrestrictedAccept
  ArrayList m_connectList
  ArrayList m_acceptList
  string MatchAll
  Regex modreq(System.Runtime.CompilerServices.IsVolatile) s_MatchAllRegex
Свойства:
  Regex MatchAllRegex
  IEnumerator ConnectList
  IEnumerator AcceptList
Методы:
  Regex get_MatchAllRegex()
  IEnumerator get_ConnectList()
  IEnumerator get_AcceptList()
  void .ctor(PermissionState state)
  void .ctor(bool unrestricted)
  void .ctor()
  void .ctor(NetworkAccess access)
  void .ctor(NetworkAccess access, Regex uriRegex)
  void .ctor(NetworkAccess access, string uriString)
  void .ctor(NetworkAccess access, Uri uri)
  void AddPermission(NetworkAccess access, string uriString)
  void AddPermission(NetworkAccess access, Uri uri)
  void AddPermission(NetworkAccess access, Regex uriRegex)
  void AddAsPattern(NetworkAccess access, DelayedRegex uriRegexPattern)
  bool IsUnrestricted()
  IPermission Copy()
  bool IsSubsetOf(IPermission target)
  bool isSpecialSubsetCase(string regexToCheck, ArrayList permList)
  IPermission Union(IPermission target)
  IPermission Intersect(IPermission target)
  void FromXml(SecurityElement securityElement)
  SecurityElement ToXml()
  bool isMatchedURI(object uriToCheck, ArrayList uriPatternList)
  void intersectList(ArrayList A, ArrayList B, ArrayList result)
  object intersectPair(object L, object R, Boolean& isUri)
--------------------------------------------------
Класс: System.Net.WebRequest
Наследуется от: MarshalByRefObject
Поля:
  int DefaultTimeout
  ArrayList modreq(System.Runtime.CompilerServices.IsVolatile) s_PrefixList
  object s_InternalSyncObject
  Queue s_DefaultTimerQueue
  AuthenticationLevel m_AuthenticationLevel
  TokenImpersonationLevel m_ImpersonationLevel
  RequestCachePolicy m_CachePolicy
  RequestCacheProtocol m_CacheProtocol
  RequestCacheBinding m_CacheBinding
  DesignerWebRequestCreate webRequestCreate
  IWebProxy modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultWebProxy
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultWebProxyInitialized
Свойства:
  IWebRequestCreate CreatorInstance
  object InternalSyncObject
  Queue DefaultTimerQueue
  ArrayList PrefixList
  RequestCachePolicy DefaultCachePolicy
  RequestCachePolicy CachePolicy
  string Method
  Uri RequestUri
  string ConnectionGroupName
  WebHeaderCollection Headers
  long ContentLength
  string ContentType
  ICredentials Credentials
  bool UseDefaultCredentials
  IWebProxy Proxy
  bool PreAuthenticate
  int Timeout
  RequestCacheProtocol CacheProtocol
  AuthenticationLevel AuthenticationLevel
  TokenImpersonationLevel ImpersonationLevel
  IWebProxy InternalDefaultWebProxy
  IWebProxy DefaultWebProxy
Методы:
  IWebRequestCreate get_CreatorInstance()
  void RegisterPortableWebRequestCreator(IWebRequestCreate creator)
  object get_InternalSyncObject()
  Queue get_DefaultTimerQueue()
  WebRequest Create(Uri requestUri, bool useUriBase)
  WebRequest Create(string requestUriString)
  WebRequest Create(Uri requestUri)
  WebRequest CreateDefault(Uri requestUri)
  HttpWebRequest CreateHttp(string requestUriString)
  HttpWebRequest CreateHttp(Uri requestUri)
  bool RegisterPrefix(string prefix, IWebRequestCreate creator)
  ArrayList get_PrefixList()
  void set_PrefixList(ArrayList value)
  ArrayList PopulatePrefixList()
  void .ctor()
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  RequestCachePolicy get_DefaultCachePolicy()
  void set_DefaultCachePolicy(RequestCachePolicy value)
  RequestCachePolicy get_CachePolicy()
  void set_CachePolicy(RequestCachePolicy value)
  void InternalSetCachePolicy(RequestCachePolicy policy)
  string get_Method()
  void set_Method(string value)
  Uri get_RequestUri()
  string get_ConnectionGroupName()
  void set_ConnectionGroupName(string value)
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  long get_ContentLength()
  void set_ContentLength(long value)
  string get_ContentType()
  void set_ContentType(string value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  IWebProxy get_Proxy()
  void set_Proxy(IWebProxy value)
  bool get_PreAuthenticate()
  void set_PreAuthenticate(bool value)
  int get_Timeout()
  void set_Timeout(int value)
  Stream GetRequestStream()
  WebResponse GetResponse()
  IAsyncResult BeginGetResponse(AsyncCallback callback, object state)
  WebResponse EndGetResponse(IAsyncResult asyncResult)
  IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)
  Stream EndGetRequestStream(IAsyncResult asyncResult)
  Task`1<Stream> GetRequestStreamAsync()
  Task`1<WebResponse> GetResponseAsync()
  WindowsIdentity SafeCaptureIdenity()
  void Abort()
  RequestCacheProtocol get_CacheProtocol()
  void set_CacheProtocol(RequestCacheProtocol value)
  AuthenticationLevel get_AuthenticationLevel()
  void set_AuthenticationLevel(AuthenticationLevel value)
  TokenImpersonationLevel get_ImpersonationLevel()
  void set_ImpersonationLevel(TokenImpersonationLevel value)
  IWebProxy get_InternalDefaultWebProxy()
  void set_InternalDefaultWebProxy(IWebProxy value)
  IWebProxy get_DefaultWebProxy()
  void set_DefaultWebProxy(IWebProxy value)
  IWebProxy GetSystemWebProxy()
  IWebProxy InternalGetSystemWebProxy()
  void SetupCacheProtocol(Uri uri)
  void .cctor()
  Task`1<Stream> <GetRequestStreamAsync>b__78_0()
  Task`1<WebResponse> <GetResponseAsync>b__79_0()
--------------------------------------------------
Класс: System.Net.WebRequestMethods
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebResponse
Наследуется от: MarshalByRefObject
Поля:
  bool m_IsCacheFresh
  bool m_IsFromCache
Свойства:
  bool IsFromCache
  bool InternalSetFromCache
  bool IsCacheFresh
  bool InternalSetIsCacheFresh
  bool IsMutuallyAuthenticated
  long ContentLength
  string ContentType
  Uri ResponseUri
  WebHeaderCollection Headers
  bool SupportsHeaders
Методы:
  void .ctor()
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void Close()
  void Dispose()
  void Dispose(bool disposing)
  bool get_IsFromCache()
  void set_InternalSetFromCache(bool value)
  bool get_IsCacheFresh()
  void set_InternalSetIsCacheFresh(bool value)
  bool get_IsMutuallyAuthenticated()
  long get_ContentLength()
  void set_ContentLength(long value)
  string get_ContentType()
  void set_ContentType(string value)
  Stream GetResponseStream()
  Uri get_ResponseUri()
  WebHeaderCollection get_Headers()
  bool get_SupportsHeaders()
--------------------------------------------------
Класс: System.Net.WebUtility
Наследуется от: object
Поля:
  char HIGH_SURROGATE_START
  char LOW_SURROGATE_START
  char LOW_SURROGATE_END
  int UNICODE_PLANE00_END
  int UNICODE_PLANE01_START
  int UNICODE_PLANE16_END
  int UnicodeReplacementChar
  Char[] _htmlEntityEndingChars
  UnicodeDecodingConformance modreq(System.Runtime.CompilerServices.IsVolatile) _htmlDecodeConformance
  UnicodeEncodingConformance modreq(System.Runtime.CompilerServices.IsVolatile) _htmlEncodeConformance
Свойства:
  UnicodeDecodingConformance HtmlDecodeConformance
  UnicodeEncodingConformance HtmlEncodeConformance
Методы:
  string HtmlEncode(string value)
  void HtmlEncode(string value, TextWriter output)
  string HtmlDecode(string value)
  void HtmlDecode(string value, TextWriter output)
  int IndexOfHtmlEncodingChars(string s, int startPos)
  UnicodeDecodingConformance get_HtmlDecodeConformance()
  UnicodeEncodingConformance get_HtmlEncodeConformance()
  Byte[] UrlEncode(Byte[] bytes, int offset, int count, bool alwaysCreateNewReturnValue)
  Byte[] UrlEncode(Byte[] bytes, int offset, int count)
  string UrlEncode(string value)
  Byte[] UrlEncodeToBytes(Byte[] value, int offset, int count)
  string UrlDecodeInternal(string value, Encoding encoding)
  Byte[] UrlDecodeInternal(Byte[] bytes, int offset, int count)
  string UrlDecode(string encodedValue)
  Byte[] UrlDecodeToBytes(Byte[] encodedValue, int offset, int count)
  void ConvertSmpToUtf16(UInt32 smpChar, Char& leadingSurrogate, Char& trailingSurrogate)
  int GetNextUnicodeScalarValueFromUtf16Surrogate(Char*& pch, Int32& charsRemaining)
  int HexToInt(char h)
  char IntToHex(int n)
  bool IsUrlSafeChar(char ch)
  bool ValidateUrlEncodingParameters(Byte[] bytes, int offset, int count)
  bool StringRequiresHtmlDecoding(string s)
  void .cctor()
--------------------------------------------------
Класс: System.Net.BufferOffsetSize
Наследуется от: object
Поля:
  Byte[] Buffer
  int Offset
  int Size
Свойства:
Методы:
  void .ctor(Byte[] buffer, int offset, int size, bool copyBuffer)
  void .ctor(Byte[] buffer, bool copyBuffer)
--------------------------------------------------
Класс: System.Net.DataParseStatus
Наследуется от: Enum
Поля:
  int value__
  DataParseStatus NeedMoreData
  DataParseStatus ContinueParsing
  DataParseStatus Done
  DataParseStatus Invalid
  DataParseStatus DataTooBig
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WriteBufferState
Наследуется от: Enum
Поля:
  int value__
  WriteBufferState Disabled
  WriteBufferState Headers
  WriteBufferState Buffer
  WriteBufferState Playback
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebParseErrorSection
Наследуется от: Enum
Поля:
  int value__
  WebParseErrorSection Generic
  WebParseErrorSection ResponseHeader
  WebParseErrorSection ResponseStatusLine
  WebParseErrorSection ResponseBody
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebParseErrorCode
Наследуется от: Enum
Поля:
  int value__
  WebParseErrorCode Generic
  WebParseErrorCode InvalidHeaderName
  WebParseErrorCode InvalidContentLength
  WebParseErrorCode IncompleteHeaderLine
  WebParseErrorCode CrLfError
  WebParseErrorCode InvalidChunkFormat
  WebParseErrorCode UnexpectedServerResponse
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebParseError
Наследуется от: ValueType
Поля:
  WebParseErrorSection Section
  WebParseErrorCode Code
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.HttpDateParse
Наследуется от: object
Поля:
  int BASE_DEC
  int DATE_INDEX_DAY_OF_WEEK
  int DATE_1123_INDEX_DAY
  int DATE_1123_INDEX_MONTH
  int DATE_1123_INDEX_YEAR
  int DATE_1123_INDEX_HRS
  int DATE_1123_INDEX_MINS
  int DATE_1123_INDEX_SECS
  int DATE_ANSI_INDEX_MONTH
  int DATE_ANSI_INDEX_DAY
  int DATE_ANSI_INDEX_HRS
  int DATE_ANSI_INDEX_MINS
  int DATE_ANSI_INDEX_SECS
  int DATE_ANSI_INDEX_YEAR
  int DATE_INDEX_TZ
  int DATE_INDEX_LAST
  int MAX_FIELD_DATE_ENTRIES
  int DATE_TOKEN_JANUARY
  int DATE_TOKEN_FEBRUARY
  int DATE_TOKEN_Microsoft
  int DATE_TOKEN_APRIL
  int DATE_TOKEN_MAY
  int DATE_TOKEN_JUNE
  int DATE_TOKEN_JULY
  int DATE_TOKEN_AUGUST
  int DATE_TOKEN_SEPTEMBER
  int DATE_TOKEN_OCTOBER
  int DATE_TOKEN_NOVEMBER
  int DATE_TOKEN_DECEMBER
  int DATE_TOKEN_LAST_MONTH
  int DATE_TOKEN_SUNDAY
  int DATE_TOKEN_MONDAY
  int DATE_TOKEN_TUESDAY
  int DATE_TOKEN_WEDNESDAY
  int DATE_TOKEN_THURSDAY
  int DATE_TOKEN_FRIDAY
  int DATE_TOKEN_SATURDAY
  int DATE_TOKEN_LAST_DAY
  int DATE_TOKEN_GMT
  int DATE_TOKEN_LAST
  int DATE_TOKEN_ERROR
Свойства:
Методы:
  char MAKE_UPPER(char c)
  int MapDayMonthToDword(Char[] lpszDay, int index)
  bool ParseHttpDate(string DateString, DateTime& dtOut)
--------------------------------------------------
Класс: System.Net.HeaderParser
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  String[] Invoke(string value)
  IAsyncResult BeginInvoke(string value, AsyncCallback callback, object object)
  String[] EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.HeaderInfo
Наследуется от: object
Поля:
  bool IsRequestRestricted
  bool IsResponseRestricted
  HeaderParser Parser
  string HeaderName
  bool AllowMultiValues
Свойства:
Методы:
  void .ctor(string name, bool requestRestricted, bool responseRestricted, bool multi, HeaderParser p)
--------------------------------------------------
Класс: System.Net.HeaderInfoTable
Наследуется от: object
Поля:
  Hashtable HeaderHashTable
  HeaderInfo UnknownHeaderInfo
  HeaderParser SingleParser
  HeaderParser MultiParser
Свойства:
  HeaderInfo Item
Методы:
  String[] ParseSingleValue(string value)
  String[] ParseMultiValue(string value)
  void .cctor()
  HeaderInfo get_Item(string name)
  void .ctor()
--------------------------------------------------
Класс: System.Net.CloseExState
Наследуется от: Enum
Поля:
  int value__
  CloseExState Normal
  CloseExState Abort
  CloseExState Silent
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.ICloseEx
Поля:
Свойства:
Методы:
  void CloseEx(CloseExState closeState)
--------------------------------------------------
Класс: System.Net.LazyAsyncResult
Наследуется от: object
Поля:
  int c_HighBit
  int c_ForceAsyncCount
  ThreadContext t_ThreadContext
  object m_AsyncObject
  object m_AsyncState
  AsyncCallback m_AsyncCallback
  object m_Result
  int m_ErrorCode
  int m_IntCompleted
  bool m_EndCalled
  bool m_UserEvent
  object m_Event
Свойства:
  ThreadContext CurrentThreadContext
  object AsyncObject
  object AsyncState
  AsyncCallback AsyncCallback
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
  bool InternalPeekCompleted
  object Result
  bool EndCalled
  int ErrorCode
Методы:
  ThreadContext get_CurrentThreadContext()
  void .ctor(object myObject, object myState, AsyncCallback myCallBack)
  void .ctor(object myObject, object myState, AsyncCallback myCallBack, object result)
  object get_AsyncObject()
  object get_AsyncState()
  AsyncCallback get_AsyncCallback()
  void set_AsyncCallback(AsyncCallback value)
  WaitHandle get_AsyncWaitHandle()
  bool LazilyCreateEvent(ManualResetEvent& waitHandle)
  void DebugProtectState(bool protect)
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  bool get_InternalPeekCompleted()
  object get_Result()
  void set_Result(object value)
  bool get_EndCalled()
  void set_EndCalled(bool value)
  int get_ErrorCode()
  void set_ErrorCode(int value)
  void ProtectedInvokeCallback(object result, IntPtr userToken)
  void InvokeCallback(object result)
  void InvokeCallback()
  void Complete(IntPtr userToken)
  void WorkerThreadComplete(object state)
  void Cleanup()
  object InternalWaitForCompletion()
  object WaitForCompletion(bool snap)
  void InternalCleanup()
--------------------------------------------------
Класс: System.Net.BaseLoggingObject
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void EnterFunc(string funcname)
  void LeaveFunc(string funcname)
  void DumpArrayToConsole()
  void PrintLine(string msg)
  void DumpArray(bool shouldClose)
  void DumpArrayToFile(bool shouldClose)
  void Flush()
  void Flush(bool close)
  void LoggingMonitorTick()
  void Dump(Byte[] buffer)
  void Dump(Byte[] buffer, int length)
  void Dump(Byte[] buffer, int offset, int length)
  void Dump(IntPtr pBuffer, int offset, int length)
--------------------------------------------------
Класс: System.Net.ThreadKinds
Наследуется от: Enum
Поля:
  int value__
  ThreadKinds Unknown
  ThreadKinds User
  ThreadKinds System
  ThreadKinds Sync
  ThreadKinds Async
  ThreadKinds Timer
  ThreadKinds CompletionPort
  ThreadKinds Worker
  ThreadKinds Finalization
  ThreadKinds Other
  ThreadKinds OwnerMask
  ThreadKinds SyncMask
  ThreadKinds SourceMask
  ThreadKinds SafeSources
  ThreadKinds ThreadPool
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.GlobalLog
Наследуется от: object
Поля:
  BaseLoggingObject Logobject
Свойства:
  ThreadKinds CurrentThreadKind
Методы:
  BaseLoggingObject LoggingInitialize()
  ThreadKinds get_CurrentThreadKind()
  void SetThreadSource(ThreadKinds source)
  void ThreadContract(ThreadKinds kind, string errorMsg)
  void ThreadContract(ThreadKinds kind, ThreadKinds allowedSources, string errorMsg)
  void AddToArray(string msg)
  void Ignore(object msg)
  void Print(string msg)
  void PrintHex(string msg, object value)
  void Enter(string func)
  void Enter(string func, string parms)
  void Assert(bool condition, string messageFormat, Object[] data)
  void Assert(string message)
  void Assert(string message, string detailMessage)
  void LeaveException(string func, Exception exception)
  void Leave(string func)
  void Leave(string func, string result)
  void Leave(string func, int returnval)
  void Leave(string func, bool returnval)
  void DumpArray()
  void Dump(Byte[] buffer)
  void Dump(Byte[] buffer, int length)
  void Dump(Byte[] buffer, int offset, int length)
  void Dump(IntPtr buffer, int offset, int length)
  void .cctor()
--------------------------------------------------
Класс: System.Net.NetRes
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string GetWebStatusString(string Res, WebExceptionStatus Status)
  string GetWebStatusString(WebExceptionStatus Status)
  string GetWebStatusCodeString(HttpStatusCode statusCode, string statusDescription)
  string GetWebStatusCodeString(FtpStatusCode statusCode, string statusDescription)
--------------------------------------------------
Класс: System.Net.IAutoWebProxy
Поля:
Свойства:
Методы:
  ProxyChain GetProxies(Uri destination)
--------------------------------------------------
Класс: System.Net.ProxyChain
Наследуется от: object
Поля:
  List`1<Uri> m_Cache
  bool m_CacheComplete
  ProxyEnumerator m_MainEnumerator
  Uri m_Destination
  HttpAbortDelegate m_HttpAbortDelegate
Свойства:
  IEnumerator`1<Uri> Enumerator
  Uri Destination
  HttpAbortDelegate HttpAbortDelegate
Методы:
  void .ctor(Uri destination)
  IEnumerator`1<Uri> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Dispose()
  IEnumerator`1<Uri> get_Enumerator()
  Uri get_Destination()
  void Abort()
  bool HttpAbort(HttpWebRequest request, WebException webException)
  HttpAbortDelegate get_HttpAbortDelegate()
  bool GetNextProxy(Uri& proxy)
--------------------------------------------------
Класс: System.Net.ProxyScriptChain
Наследуется от: ProxyChain
Поля:
  WebProxy m_Proxy
  Uri[] m_ScriptProxies
  int m_CurrentIndex
  int m_SyncStatus
Свойства:
Методы:
  void .ctor(WebProxy proxy, Uri destination)
  bool GetNextProxy(Uri& proxy)
  void Abort()
--------------------------------------------------
Класс: System.Net.DirectProxy
Наследуется от: ProxyChain
Поля:
  bool m_ProxyRetrieved
Свойства:
Методы:
  void .ctor(Uri destination)
  bool GetNextProxy(Uri& proxy)
--------------------------------------------------
Класс: System.Net.StaticProxy
Наследуется от: ProxyChain
Поля:
  Uri m_Proxy
Свойства:
Методы:
  void .ctor(Uri destination, Uri proxy)
  bool GetNextProxy(Uri& proxy)
--------------------------------------------------
Класс: System.Net.ScatterGatherBuffers
Наследуется от: object
Поля:
  MemoryChunk headChunk
  MemoryChunk currentChunk
  int nextChunkLength
  int totalLength
  int chunkCount
Свойства:
  bool Empty
  int Length
Методы:
  void .ctor()
  void .ctor(long totalSize)
  BufferOffsetSize[] GetBuffers()
  bool get_Empty()
  int get_Length()
  void Write(Byte[] buffer, int offset, int count)
  MemoryChunk AllocateMemoryChunk(int newSize)
--------------------------------------------------
Класс: System.Net.Semaphore
Наследуется от: WaitHandle
Поля:
Свойства:
Методы:
  void .ctor(int initialCount, int maxCount)
  bool ReleaseSemaphore()
--------------------------------------------------
Класс: System.Net.ServiceNameStore
Наследуется от: object
Поля:
  List`1<string> serviceNames
  ServiceNameCollection serviceNameCollection
Свойства:
  ServiceNameCollection ServiceNames
Методы:
  ServiceNameCollection get_ServiceNames()
  void .ctor()
  bool AddSingleServiceName(string spn)
  bool Add(string uriPrefix)
  bool Remove(string uriPrefix)
  bool Contains(string newServiceName)
  void Clear()
  string ExtractHostname(string uriPrefix, bool allowInvalidUriStrings)
  string BuildSimpleServiceName(string uriPrefix)
  String[] BuildServiceNames(string uriPrefix)
--------------------------------------------------
Класс: System.Net.TimerThread
Наследуется от: object
Поля:
  int c_ThreadIdleTimeoutMilliseconds
  int c_CacheScanPerIterations
  int c_TickCountResolution
  LinkedList`1<WeakReference> s_Queues
  LinkedList`1<WeakReference> s_NewQueues
  int s_ThreadState
  AutoResetEvent s_ThreadReadyEvent
  ManualResetEvent s_ThreadShutdownEvent
  WaitHandle[] s_ThreadEvents
  int s_CacheScanIteration
  Hashtable s_QueuesCache
Свойства:
Методы:
  void .cctor()
  Queue CreateQueue(int durationMilliseconds)
  Queue GetOrCreateQueue(int durationMilliseconds)
  void Prod()
  void ThreadProc()
  void StopTimerThread()
  bool IsTickBetween(int start, int end, int comparand)
  void OnDomainUnload(object sender, EventArgs e)
--------------------------------------------------
Класс: System.Net.WebProxyDataBuilder
Наследуется от: object
Поля:
  char addressListDelimiter
  char addressListSchemeValueDelimiter
  char bypassListDelimiter
  WebProxyData m_Result
  string regexReserved
Свойства:
Методы:
  WebProxyData Build()
  void BuildInternal()
  void SetProxyAndBypassList(string addressString, string bypassListString)
  void SetAutoProxyUrl(string autoConfigUrl)
  void SetAutoDetectSettings(bool value)
  Uri ParseProxyUri(string proxyString)
  Hashtable ParseProtocolProxies(string proxyListString)
  FormatException CreateInvalidProxyStringException(string originalProxyString)
  string BypassStringEscape(string rawString)
  string ConvertRegexReservedChars(string rawString)
  ArrayList ParseBypassList(string bypassListString, Boolean& bypassOnLocal)
  void .ctor()
--------------------------------------------------
Класс: System.Net.EmptyWebProxy
Наследуется от: object
Поля:
  ICredentials m_credentials
Свойства:
  ICredentials Credentials
Методы:
  void .ctor()
  Uri GetProxy(Uri uri)
  bool IsBypassed(Uri uri)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  ProxyChain System.Net.IAutoWebProxy.GetProxies(Uri destination)
--------------------------------------------------
Класс: System.Net.CookieVariant
Наследуется от: Enum
Поля:
  int value__
  CookieVariant Unknown
  CookieVariant Plain
  CookieVariant Rfc2109
  CookieVariant Rfc2965
  CookieVariant Default
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Cookie
Наследуется от: object
Поля:
  int MaxSupportedVersion
  string CommentAttributeName
  string CommentUrlAttributeName
  string DiscardAttributeName
  string DomainAttributeName
  string ExpiresAttributeName
  string MaxAgeAttributeName
  string PathAttributeName
  string PortAttributeName
  string SecureAttributeName
  string VersionAttributeName
  string HttpOnlyAttributeName
  string SeparatorLiteral
  string EqualsLiteral
  string QuotesLiteral
  string SpecialAttributeLiteral
  Char[] PortSplitDelimiters
  Char[] Reserved2Name
  Char[] Reserved2Value
  Comparer staticComparer
  string m_comment
  Uri m_commentUri
  CookieVariant m_cookieVariant
  bool m_discard
  string m_domain
  bool m_domain_implicit
  DateTime m_expires
  string m_name
  string m_path
  bool m_path_implicit
  string m_port
  bool m_port_implicit
  Int32[] m_port_list
  bool m_secure
  bool m_httpOnly
  DateTime m_timeStamp
  string m_value
  int m_version
  string m_domainKey
  bool IsQuotedVersion
  bool IsQuotedDomain
Свойства:
  string Comment
  Uri CommentUri
  bool HttpOnly
  bool Discard
  string Domain
  string _Domain
  bool DomainImplicit
  bool Expired
  DateTime Expires
  string Name
  string Path
  string _Path
  bool Plain
  string Port
  Int32[] PortList
  string _Port
  bool Secure
  DateTime TimeStamp
  string Value
  CookieVariant Variant
  string DomainKey
  int Version
  string _Version
Методы:
  void .ctor()
  void .ctor(string name, string value)
  void .ctor(string name, string value, string path)
  void .ctor(string name, string value, string path, string domain)
  string get_Comment()
  void set_Comment(string value)
  Uri get_CommentUri()
  void set_CommentUri(Uri value)
  bool get_HttpOnly()
  void set_HttpOnly(bool value)
  bool get_Discard()
  void set_Discard(bool value)
  string get_Domain()
  void set_Domain(string value)
  string get__Domain()
  bool get_DomainImplicit()
  void set_DomainImplicit(bool value)
  bool get_Expired()
  void set_Expired(bool value)
  DateTime get_Expires()
  void set_Expires(DateTime value)
  string get_Name()
  void set_Name(string value)
  bool InternalSetName(string value)
  string get_Path()
  void set_Path(string value)
  string get__Path()
  bool get_Plain()
  Cookie Clone()
  bool IsDomainEqualToHost(string domain, string host)
  bool VerifySetDefaults(CookieVariant variant, Uri uri, bool isLocalDomain, string localDomain, bool set_default, bool isThrow)
  bool DomainCharsTest(string name)
  string get_Port()
  void set_Port(string value)
  Int32[] get_PortList()
  string get__Port()
  bool get_Secure()
  void set_Secure(bool value)
  DateTime get_TimeStamp()
  string get_Value()
  void set_Value(string value)
  CookieVariant get_Variant()
  void set_Variant(CookieVariant value)
  string get_DomainKey()
  int get_Version()
  void set_Version(int value)
  string get__Version()
  IComparer GetComparer()
  bool Equals(object comparand)
  int GetHashCode()
  string ToString()
  string ToServerString()
  void .cctor()
--------------------------------------------------
Класс: System.Net.CookieToken
Наследуется от: Enum
Поля:
  int value__
  CookieToken Nothing
  CookieToken NameValuePair
  CookieToken Attribute
  CookieToken EndToken
  CookieToken EndCookie
  CookieToken End
  CookieToken Equals
  CookieToken Comment
  CookieToken CommentUrl
  CookieToken CookieName
  CookieToken Discard
  CookieToken Domain
  CookieToken Expires
  CookieToken MaxAge
  CookieToken Path
  CookieToken Port
  CookieToken Secure
  CookieToken HttpOnly
  CookieToken Unknown
  CookieToken Version
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.CookieTokenizer
Наследуется от: object
Поля:
  bool m_eofCookie
  int m_index
  int m_length
  string m_name
  bool m_quoted
  int m_start
  CookieToken m_token
  int m_tokenLength
  string m_tokenStream
  string m_value
  RecognizedAttribute[] RecognizedAttributes
  RecognizedAttribute[] RecognizedServerAttributes
Свойства:
  bool EndOfCookie
  bool Eof
  string Name
  bool Quoted
  CookieToken Token
  string Value
Методы:
  void .ctor(string tokenStream)
  bool get_EndOfCookie()
  void set_EndOfCookie(bool value)
  bool get_Eof()
  string get_Name()
  void set_Name(string value)
  bool get_Quoted()
  void set_Quoted(bool value)
  CookieToken get_Token()
  void set_Token(CookieToken value)
  string get_Value()
  void set_Value(string value)
  string Extract()
  CookieToken FindNext(bool ignoreComma, bool ignoreEquals)
  CookieToken Next(bool first, bool parseResponseCookies)
  void Reset()
  CookieToken TokenFromName(bool parseResponseCookies)
  void .cctor()
--------------------------------------------------
Класс: System.Net.CookieParser
Наследуется от: object
Поля:
  CookieTokenizer m_tokenizer
  Cookie m_savedCookie
Свойства:
Методы:
  void .ctor(string cookieString)
  Cookie Get()
  Cookie GetServer()
  string CheckQuoted(string value)
--------------------------------------------------
Класс: System.Net.Comparer
Наследуется от: object
Поля:
Свойства:
Методы:
  int System.Collections.IComparer.Compare(object ol, object or)
  void .ctor()
--------------------------------------------------
Класс: System.Net.CookieCollection
Наследуется от: object
Поля:
  int m_version
  ArrayList m_list
  DateTime m_TimeStamp
  bool m_has_other_versions
  bool m_IsReadOnly
Свойства:
  bool IsReadOnly
  Cookie Item
  Cookie Item
  int Count
  bool IsSynchronized
  object SyncRoot
  bool IsOtherVersionSeen
Методы:
  void .ctor()
  void .ctor(bool IsReadOnly)
  bool get_IsReadOnly()
  Cookie get_Item(int index)
  Cookie get_Item(string name)
  void Add(Cookie cookie)
  void Add(CookieCollection cookies)
  int get_Count()
  bool get_IsSynchronized()
  object get_SyncRoot()
  void CopyTo(Array array, int index)
  void CopyTo(Cookie[] array, int index)
  DateTime TimeStamp(Stamp how)
  bool get_IsOtherVersionSeen()
  int InternalAdd(Cookie cookie, bool isStrict)
  int IndexOf(Cookie cookie)
  void RemoveAt(int idx)
  IEnumerator GetEnumerator()
--------------------------------------------------
Класс: System.Net.HeaderVariantInfo
Наследуется от: ValueType
Поля:
  string m_name
  CookieVariant m_variant
Свойства:
  string Name
  CookieVariant Variant
Методы:
  void .ctor(string name, CookieVariant variant)
  string get_Name()
  CookieVariant get_Variant()
--------------------------------------------------
Класс: System.Net.CookieContainer
Наследуется от: object
Поля:
  int DefaultCookieLimit
  int DefaultPerDomainCookieLimit
  int DefaultCookieLengthLimit
  HeaderVariantInfo[] HeaderInfo
  Hashtable m_domainTable
  int m_maxCookieSize
  int m_maxCookies
  int m_maxCookiesPerDomain
  int m_count
  string m_fqdnMyDomain
Свойства:
  int Capacity
  int Count
  int MaxCookieSize
  int PerDomainCapacity
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(int capacity, int perDomainCapacity, int maxCookieSize)
  int get_Capacity()
  void set_Capacity(int value)
  int get_Count()
  int get_MaxCookieSize()
  void set_MaxCookieSize(int value)
  int get_PerDomainCapacity()
  void set_PerDomainCapacity(int value)
  void Add(Cookie cookie)
  void AddRemoveDomain(string key, PathList value)
  void Add(Cookie cookie, bool throwOnError)
  bool AgeCookies(string domain)
  int ExpireCollection(CookieCollection cc)
  void Add(CookieCollection cookies)
  bool IsLocalDomain(string host)
  void Add(Uri uri, Cookie cookie)
  void Add(Uri uri, CookieCollection cookies)
  CookieCollection CookieCutter(Uri uri, string headerName, string setCookieHeader, bool isThrow)
  CookieCollection GetCookies(Uri uri)
  CookieCollection InternalGetCookies(Uri uri)
  void BuildCookieCollectionFromDomainMatches(Uri uri, bool isSecure, int port, CookieCollection cookies, List`1<string> domainAttribute, bool matchOnlyPlainCookie)
  void MergeUpdateCollections(CookieCollection destination, CookieCollection source, int port, bool isSecure, bool isPlainOnly)
  string GetCookieHeader(Uri uri)
  string GetCookieHeader(Uri uri, String& optCookie2)
  void SetCookies(Uri uri, string cookieHeader)
  void .cctor()
--------------------------------------------------
Класс: System.Net.PathList
Наследуется от: object
Поля:
  SortedList m_list
Свойства:
  int Count
  ICollection Values
  object Item
  object SyncRoot
Методы:
  void .ctor()
  int get_Count()
  int GetCookiesCount()
  ICollection get_Values()
  object get_Item(string s)
  void set_Item(string s, object value)
  IEnumerator GetEnumerator()
  object get_SyncRoot()
--------------------------------------------------
Класс: System.Net.CookieException
Наследуется от: FormatException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception inner)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Net.FileWebRequest
Наследуется от: WebRequest
Поля:
  WaitCallback s_GetRequestStreamCallback
  WaitCallback s_GetResponseCallback
  string m_connectionGroupName
  long m_contentLength
  ICredentials m_credentials
  FileAccess m_fileAccess
  WebHeaderCollection m_headers
  string m_method
  bool m_preauthenticate
  IWebProxy m_proxy
  ManualResetEvent m_readerEvent
  bool m_readPending
  WebResponse m_response
  Stream m_stream
  bool m_syncHint
  int m_timeout
  Uri m_uri
  bool m_writePending
  bool m_writing
  LazyAsyncResult m_WriteAResult
  LazyAsyncResult m_ReadAResult
  int m_Aborted
Свойства:
  bool Aborted
  string ConnectionGroupName
  long ContentLength
  string ContentType
  ICredentials Credentials
  WebHeaderCollection Headers
  string Method
  bool PreAuthenticate
  IWebProxy Proxy
  int Timeout
  Uri RequestUri
  bool UseDefaultCredentials
Методы:
  void .ctor(Uri uri)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  bool get_Aborted()
  string get_ConnectionGroupName()
  void set_ConnectionGroupName(string value)
  long get_ContentLength()
  void set_ContentLength(long value)
  string get_ContentType()
  void set_ContentType(string value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  WebHeaderCollection get_Headers()
  string get_Method()
  void set_Method(string value)
  bool get_PreAuthenticate()
  void set_PreAuthenticate(bool value)
  IWebProxy get_Proxy()
  void set_Proxy(IWebProxy value)
  int get_Timeout()
  void set_Timeout(int value)
  Uri get_RequestUri()
  IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)
  IAsyncResult BeginGetResponse(AsyncCallback callback, object state)
  bool CanGetRequestStream()
  Stream EndGetRequestStream(IAsyncResult asyncResult)
  WebResponse EndGetResponse(IAsyncResult asyncResult)
  Stream GetRequestStream()
  WebResponse GetResponse()
  void GetRequestStreamCallback(object state)
  void GetResponseCallback(object state)
  void UnblockReader()
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  void Abort()
  void .cctor()
--------------------------------------------------
Класс: System.Net.FileWebRequestCreator
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  WebRequest Create(Uri uri)
--------------------------------------------------
Класс: System.Net.FileWebStream
Наследуется от: FileStream
Поля:
  FileWebRequest m_request
Свойства:
Методы:
  void .ctor(FileWebRequest request, string path, FileMode mode, FileAccess access, FileShare sharing)
  void .ctor(FileWebRequest request, string path, FileMode mode, FileAccess access, FileShare sharing, int length, bool async)
  void Dispose(bool disposing)
  void System.Net.ICloseEx.CloseEx(CloseExState closeState)
  int Read(Byte[] buffer, int offset, int size)
  void Write(Byte[] buffer, int offset, int size)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  int EndRead(IAsyncResult ar)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult ar)
  void CheckError()
--------------------------------------------------
Класс: System.Net.FileWebResponse
Наследуется от: WebResponse
Поля:
  int DefaultFileStreamBufferSize
  string DefaultFileContentType
  bool m_closed
  long m_contentLength
  FileAccess m_fileAccess
  WebHeaderCollection m_headers
  Stream m_stream
  Uri m_uri
Свойства:
  long ContentLength
  string ContentType
  WebHeaderCollection Headers
  bool SupportsHeaders
  Uri ResponseUri
Методы:
  void .ctor(FileWebRequest request, Uri uri, FileAccess access, bool asyncHint)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  long get_ContentLength()
  string get_ContentType()
  WebHeaderCollection get_Headers()
  bool get_SupportsHeaders()
  Uri get_ResponseUri()
  void CheckDisposed()
  void Close()
  void System.Net.ICloseEx.CloseEx(CloseExState closeState)
  Stream GetResponseStream()
--------------------------------------------------
Класс: System.Net.IWebProxy
Поля:
Свойства:
  ICredentials Credentials
Методы:
  Uri GetProxy(Uri destination)
  bool IsBypassed(Uri host)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
--------------------------------------------------
Класс: System.Net.WebProxyData
Наследуется от: object
Поля:
  bool bypassOnLocal
  bool automaticallyDetectSettings
  Uri proxyAddress
  Hashtable proxyHostAddresses
  Uri scriptLocation
  ArrayList bypassList
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.WebProxy
Наследуется от: object
Поля:
  bool _UseRegistry
  bool _BypassOnLocal
  bool m_EnableAutoproxy
  Uri _ProxyAddress
  ArrayList _BypassList
  ICredentials _Credentials
  Regex[] _RegExBypassList
  Hashtable _ProxyHostAddresses
  AutoWebProxyScriptEngine m_ScriptEngine
Свойства:
  Uri Address
  bool AutoDetect
  Uri ScriptLocation
  bool BypassProxyOnLocal
  String[] BypassList
  ICredentials Credentials
  bool UseDefaultCredentials
  ArrayList BypassArrayList
  AutoWebProxyScriptEngine ScriptEngine
Методы:
  void .ctor()
  void .ctor(Uri Address)
  void .ctor(Uri Address, bool BypassOnLocal)
  void .ctor(Uri Address, bool BypassOnLocal, String[] BypassList)
  void .ctor(Uri Address, bool BypassOnLocal, String[] BypassList, ICredentials Credentials)
  void .ctor(string Host, int Port)
  void .ctor(string Address)
  void .ctor(string Address, bool BypassOnLocal)
  void .ctor(string Address, bool BypassOnLocal, String[] BypassList)
  void .ctor(string Address, bool BypassOnLocal, String[] BypassList, ICredentials Credentials)
  Uri get_Address()
  void set_Address(Uri value)
  void set_AutoDetect(bool value)
  void set_ScriptLocation(Uri value)
  bool get_BypassProxyOnLocal()
  void set_BypassProxyOnLocal(bool value)
  String[] get_BypassList()
  void set_BypassList(String[] value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  ArrayList get_BypassArrayList()
  void CheckForChanges()
  Uri GetProxy(Uri destination)
  Uri CreateProxyUri(string address)
  void UpdateRegExList(bool canThrow)
  bool IsMatchInBypassList(Uri input)
  bool IsLocal(Uri host)
  bool IsLocalInProxyHash(Uri host)
  bool IsBypassed(Uri host)
  bool IsBypassedManual(Uri host)
  WebProxy GetDefaultProxy()
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  AutoWebProxyScriptEngine get_ScriptEngine()
  void set_ScriptEngine(AutoWebProxyScriptEngine value)
  IWebProxy CreateDefaultProxy()
  void .ctor(bool enableAutoproxy)
  void DeleteScriptEngine()
  void UnsafeUpdateFromRegistry()
  void Update(WebProxyData webProxyData)
  ProxyChain System.Net.IAutoWebProxy.GetProxies(Uri destination)
  bool GetProxyAuto(Uri destination, Uri& proxyUri)
  bool IsBypassedAuto(Uri destination, Boolean& isBypassed)
  Uri[] GetProxiesAuto(Uri destination, Int32& syncStatus)
  void AbortGetProxiesAuto(Int32& syncStatus)
  Uri GetProxyAutoFailover(Uri destination)
  bool AreAllBypassed(IEnumerable`1<string> proxies, bool checkFirstOnly)
  Uri ProxyUri(string proxyName)
--------------------------------------------------
Класс: System.Net.AutoWebProxyScriptEngine
Наследуется от: object
Поля:
  Uri <AutomaticConfigurationScript>k__BackingField
  bool <AutomaticallyDetectSettings>k__BackingField
Свойства:
  Uri AutomaticConfigurationScript
  bool AutomaticallyDetectSettings
Методы:
  void .ctor(WebProxy proxy, bool useRegistry)
  Uri get_AutomaticConfigurationScript()
  void set_AutomaticConfigurationScript(Uri value)
  bool get_AutomaticallyDetectSettings()
  void set_AutomaticallyDetectSettings(bool value)
  bool GetProxies(Uri destination, IList`1& proxyList)
  bool GetProxies(Uri destination, IList`1& proxyList, Int32& syncStatus)
  void Close()
  void Abort(Int32& syncStatus)
  void CheckForChanges()
  WebProxyData GetWebProxyData()
  WebProxyData ReadEnvVariables()
  bool IsWindows()
  WebProxyData InitializeRegistryGlobalProxy()
  Uri ToUri(string address)
  ArrayList CreateBypassList(ArrayList al)
--------------------------------------------------
Класс: System.Net.UnsafeNclNativeMethods
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.HttpSysSettings
Наследуется от: object
Поля:
  bool EnableNonUtf8
  bool FavorUtf8
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Logging
Наследуется от: object
Поля:
Свойства:
  bool On
  TraceSource Web
  TraceSource HttpListener
  TraceSource Sockets
Методы:
  bool get_On()
  TraceSource get_Web()
  TraceSource get_HttpListener()
  TraceSource get_Sockets()
  void Enter(TraceSource traceSource, object obj, string method, object paramObject)
  void Enter(TraceSource traceSource, string msg)
  void Enter(TraceSource traceSource, string msg, string parameters)
  void Exception(TraceSource traceSource, object obj, string method, Exception e)
  void Exit(TraceSource traceSource, object obj, string method, object retObject)
  void Exit(TraceSource traceSource, string msg)
  void Exit(TraceSource traceSource, string msg, string parameters)
  void PrintInfo(TraceSource traceSource, object obj, string method, string msg)
  void PrintInfo(TraceSource traceSource, object obj, string msg)
  void PrintInfo(TraceSource traceSource, string msg)
  void PrintWarning(TraceSource traceSource, object obj, string method, string msg)
  void PrintWarning(TraceSource traceSource, string msg)
  void PrintError(TraceSource traceSource, string msg)
--------------------------------------------------
Класс: System.Net.ServerCertValidationCallback
Наследуется от: object
Поля:
  RemoteCertificateValidationCallback m_ValidationCallback
  ExecutionContext m_Context
Свойства:
  RemoteCertificateValidationCallback ValidationCallback
Методы:
  void .ctor(RemoteCertificateValidationCallback validationCallback)
  RemoteCertificateValidationCallback get_ValidationCallback()
  void Callback(object state)
  bool Invoke(object request, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
--------------------------------------------------
Класс: System.Net.AuthenticationManager
Наследуется от: object
Поля:
  ArrayList modules
  object locker
  ICredentialPolicy credential_policy
Свойства:
  ICredentialPolicy CredentialPolicy
  StringDictionary CustomTargetNameDictionary
  IEnumerator RegisteredModules
  bool OSSupportsExtendedProtection
Методы:
  void .ctor()
  void EnsureModules()
  ICredentialPolicy get_CredentialPolicy()
  void set_CredentialPolicy(ICredentialPolicy value)
  Exception GetMustImplement()
  StringDictionary get_CustomTargetNameDictionary()
  IEnumerator get_RegisteredModules()
  bool get_OSSupportsExtendedProtection()
  void Clear()
  Authorization Authenticate(string challenge, WebRequest request, ICredentials credentials)
  Authorization DoAuthenticate(string challenge, WebRequest request, ICredentials credentials)
  Authorization PreAuthenticate(WebRequest request, ICredentials credentials)
  void Register(IAuthenticationModule authenticationModule)
  void Unregister(IAuthenticationModule authenticationModule)
  void Unregister(string authenticationScheme)
  void DoUnregister(string authenticationScheme, bool throwEx)
  void .cctor()
--------------------------------------------------
Класс: System.Net.BasicClient
Наследуется от: object
Поля:
Свойства:
  string AuthenticationType
  bool CanPreAuthenticate
Методы:
  Authorization Authenticate(string challenge, WebRequest webRequest, ICredentials credentials)
  Byte[] GetBytes(string str)
  Authorization InternalAuthenticate(WebRequest webRequest, ICredentials credentials)
  Authorization PreAuthenticate(WebRequest webRequest, ICredentials credentials)
  string get_AuthenticationType()
  bool get_CanPreAuthenticate()
  void .ctor()
--------------------------------------------------
Класс: System.Net.BindIPEndPoint
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  IPEndPoint Invoke(ServicePoint servicePoint, IPEndPoint remoteEndPoint, int retryCount)
  IAsyncResult BeginInvoke(ServicePoint servicePoint, IPEndPoint remoteEndPoint, int retryCount, AsyncCallback callback, object object)
  IPEndPoint EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.BufferedReadStream
Наследуется от: WebReadStream
Поля:
  BufferOffsetSize readBuffer
Свойства:
Методы:
  void .ctor(WebOperation operation, Stream innerStream, BufferOffsetSize readBuffer)
  Task`1<int> ProcessReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  bool TryReadFromBuffer(Byte[] buffer, int offset, int size, Int32& result)
--------------------------------------------------
Класс: System.Net.ChunkedInputStream
Наследуется от: RequestStream
Поля:
  bool disposed
  MonoChunkParser decoder
  HttpListenerContext context
  bool no_more_data
Свойства:
  MonoChunkParser Decoder
Методы:
  void .ctor(HttpListenerContext context, Stream stream, Byte[] buffer, int offset, int length)
  MonoChunkParser get_Decoder()
  void set_Decoder(MonoChunkParser value)
  int Read(Byte[] buffer, int offset, int count)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback cback, object state)
  void OnRead(IAsyncResult base_ares)
  int EndRead(IAsyncResult ares)
  void Close()
--------------------------------------------------
Класс: System.Net.ContentDecodeStream
Наследуется от: WebReadStream
Поля:
  Stream <OriginalInnerStream>k__BackingField
Свойства:
  Stream OriginalInnerStream
Методы:
  ContentDecodeStream Create(WebOperation operation, Stream innerStream, Mode mode)
  Stream get_OriginalInnerStream()
  void .ctor(WebOperation operation, Stream decodeStream, Stream originalInnerStream)
  Task`1<int> ProcessReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  Task FinishReading(CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Net.DecompressionMethods
Наследуется от: Enum
Поля:
  int value__
  DecompressionMethods None
  DecompressionMethods GZip
  DecompressionMethods Deflate
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.DefaultCertificatePolicy
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CheckValidationResult(ServicePoint point, X509Certificate certificate, WebRequest request, int certificateProblem)
  void .ctor()
--------------------------------------------------
Класс: System.Net.DigestHeaderParser
Наследуется от: object
Поля:
  string header
  int length
  int pos
  String[] keywords
  String[] values
Свойства:
  string Realm
  string Opaque
  string Nonce
  string Algorithm
  string QOP
Методы:
  void .ctor(string header)
  string get_Realm()
  string get_Opaque()
  string get_Nonce()
  string get_Algorithm()
  string get_QOP()
  bool Parse()
  void SkipWhitespace()
  string GetKey()
  bool GetKeywordAndValue(String& key, String& value)
  void .cctor()
--------------------------------------------------
Класс: System.Net.DigestSession
Наследуется от: object
Поля:
  RandomNumberGenerator rng
  DateTime lastUse
  int _nc
  HashAlgorithm hash
  DigestHeaderParser parser
  string _cnonce
Свойства:
  string Algorithm
  string Realm
  string Nonce
  string Opaque
  string QOP
  string CNonce
  DateTime LastUse
Методы:
  void .cctor()
  void .ctor()
  string get_Algorithm()
  string get_Realm()
  string get_Nonce()
  string get_Opaque()
  string get_QOP()
  string get_CNonce()
  bool Parse(string challenge)
  string HashToHexString(string toBeHashed)
  string HA1(string username, string password)
  string HA2(HttpWebRequest webRequest)
  string Response(string username, string password, HttpWebRequest webRequest)
  Authorization Authenticate(WebRequest webRequest, ICredentials credentials)
  DateTime get_LastUse()
--------------------------------------------------
Класс: System.Net.DigestClient
Наследуется от: object
Поля:
  Hashtable cache
Свойства:
  Hashtable Cache
  string AuthenticationType
  bool CanPreAuthenticate
Методы:
  Hashtable get_Cache()
  void CheckExpired(int count)
  Authorization Authenticate(string challenge, WebRequest webRequest, ICredentials credentials)
  Authorization PreAuthenticate(WebRequest webRequest, ICredentials credentials)
  string get_AuthenticationType()
  bool get_CanPreAuthenticate()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Dns
Наследуется от: object
Поля:
  bool use_mono_dns
  SimpleResolver resolver
Свойства:
  bool UseMonoDns
Методы:
  void .cctor()
  bool get_UseMonoDns()
  void OnCompleted(object sender, SimpleResolverEventArgs e)
  IAsyncResult BeginAsyncCallAddresses(string host, AsyncCallback callback, object state)
  IAsyncResult BeginAsyncCall(string host, AsyncCallback callback, object state)
  IPHostEntry EndAsyncCall(DnsAsyncResult ares)
  IAsyncResult BeginGetHostByName(string hostName, AsyncCallback requestCallback, object stateObject)
  IAsyncResult BeginResolve(string hostName, AsyncCallback requestCallback, object stateObject)
  IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, AsyncCallback requestCallback, object state)
  IAsyncResult BeginGetHostEntry(string hostNameOrAddress, AsyncCallback requestCallback, object stateObject)
  IAsyncResult BeginGetHostEntry(IPAddress address, AsyncCallback requestCallback, object stateObject)
  IPHostEntry EndGetHostByName(IAsyncResult asyncResult)
  IPHostEntry EndResolve(IAsyncResult asyncResult)
  IPAddress[] EndGetHostAddresses(IAsyncResult asyncResult)
  IPHostEntry EndGetHostEntry(IAsyncResult asyncResult)
  bool GetHostByName_icall(string host, String& h_name, String[]& h_aliases, String[]& h_addr_list, int hint)
  bool GetHostByAddr_icall(string addr, String& h_name, String[]& h_aliases, String[]& h_addr_list, int hint)
  bool GetHostName_icall(String& h_name)
  void Error_11001(string hostName)
  IPHostEntry hostent_to_IPHostEntry(string originalHostName, string h_name, String[] h_aliases, String[] h_addrlist)
  IPHostEntry GetHostByAddress(IPAddress address)
  IPHostEntry GetHostByAddress(string address)
  IPHostEntry GetHostByAddressFromString(string address, bool parse)
  IPHostEntry GetHostEntry(string hostNameOrAddress)
  IPHostEntry GetHostEntry(IPAddress address)
  IPAddress[] GetHostAddresses(string hostNameOrAddress)
  IPHostEntry GetHostByName(string hostName)
  string GetHostName()
  IPHostEntry Resolve(string hostName)
  Task`1<IPAddress[]> GetHostAddressesAsync(string hostNameOrAddress)
  Task`1<IPHostEntry> GetHostEntryAsync(IPAddress address)
  Task`1<IPHostEntry> GetHostEntryAsync(string hostNameOrAddress)
--------------------------------------------------
Класс: System.Net.DnsAsyncResult
Наследуется от: object
Поля:
  WaitCallback internal_cb
  ManualResetEvent handle
  bool synch
  bool is_completed
  AsyncCallback callback
  object state
  IPHostEntry entry
  Exception exc
Свойства:
  object AsyncState
  WaitHandle AsyncWaitHandle
  Exception Exception
  IPHostEntry HostEntry
  bool CompletedSynchronously
  bool IsCompleted
Методы:
  void .ctor(AsyncCallback cb, object state)
  void SetCompleted(bool synch, IPHostEntry entry, Exception e)
  void SetCompleted(bool synch, Exception e)
  void SetCompleted(bool synch, IPHostEntry entry)
  void CB(object _this)
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  Exception get_Exception()
  IPHostEntry get_HostEntry()
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  void .cctor()
--------------------------------------------------
Класс: System.Net.DnsPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  bool m_noRestriction
Свойства:
Методы:
  void .ctor(PermissionState state)
  IPermission Copy()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  void FromXml(SecurityElement securityElement)
  IPermission Union(IPermission target)
  bool IsEmpty()
  DnsPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Net.DnsPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
Свойства:
Методы:
  void .ctor(SecurityAction action)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Net.EndPointListener
Наследуется от: object
Поля:
  HttpListener listener
  IPEndPoint endpoint
  Socket sock
  Hashtable prefixes
  ArrayList unhandled
  ArrayList all
  X509Certificate cert
  bool secure
  Dictionary`2<HttpConnection, HttpConnection> unregistered
Свойства:
  HttpListener Listener
Методы:
  void .ctor(HttpListener listener, IPAddress addr, int port, bool secure)
  HttpListener get_Listener()
  void Accept(Socket socket, SocketAsyncEventArgs e, Socket& accepted)
  void ProcessAccept(SocketAsyncEventArgs args)
  void OnAccept(object sender, SocketAsyncEventArgs e)
  void RemoveConnection(HttpConnection conn)
  bool BindContext(HttpListenerContext context)
  void UnbindContext(HttpListenerContext context)
  HttpListener SearchListener(Uri uri, ListenerPrefix& prefix)
  HttpListener MatchFromList(string host, string path, ArrayList list, ListenerPrefix& prefix)
  void AddSpecial(ArrayList coll, ListenerPrefix prefix)
  bool RemoveSpecial(ArrayList coll, ListenerPrefix prefix)
  void CheckIfRemove()
  void Close()
  void AddPrefix(ListenerPrefix prefix, HttpListener listener)
  void RemovePrefix(ListenerPrefix prefix, HttpListener listener)
--------------------------------------------------
Класс: System.Net.EndPointManager
Наследуется от: object
Поля:
  Hashtable ip_to_endpoints
Свойства:
Методы:
  void .ctor()
  void AddListener(HttpListener listener)
  void AddPrefix(string prefix, HttpListener listener)
  void AddPrefixInternal(string p, HttpListener listener)
  EndPointListener GetEPListener(string host, int port, HttpListener listener, bool secure)
  void RemoveEndPoint(EndPointListener epl, IPEndPoint ep)
  void RemoveListener(HttpListener listener)
  void RemovePrefix(string prefix, HttpListener listener)
  void RemovePrefixInternal(string prefix, HttpListener listener)
  void .cctor()
--------------------------------------------------
Класс: System.Net.EndpointPermission
Наследуется от: object
Поля:
  Char[] dot_char
  string hostname
  int port
  TransportType transport
  bool resolved
  bool hasWildcard
  IPAddress[] addresses
Свойства:
  string Hostname
  int Port
  TransportType Transport
Методы:
  void .ctor(string hostname, int port, TransportType transport)
  string get_Hostname()
  int get_Port()
  TransportType get_Transport()
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  bool IsSubsetOf(EndpointPermission perm)
  bool IsSubsetOf(string addr1, string addr2)
  EndpointPermission Intersect(EndpointPermission perm)
  string IntersectHostname(EndpointPermission perm)
  string Intersect(string addr1, string addr2)
  int ToNumber(string value)
  void Resolve()
  void UndoResolve()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Net.FixedSizeReadStream
Наследуется от: WebReadStream
Поля:
  long <ContentLength>k__BackingField
  long position
Свойства:
  long ContentLength
Методы:
  long get_ContentLength()
  void .ctor(WebOperation operation, Stream innerStream, long contentLength)
  Task`1<int> ProcessReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Net.HttpConnection
Наследуется от: object
Поля:
  AsyncCallback onread_cb
  int BufferSize
  Socket sock
  Stream stream
  EndPointListener epl
  MemoryStream ms
  Byte[] buffer
  HttpListenerContext context
  StringBuilder current_line
  ListenerPrefix prefix
  RequestStream i_stream
  ResponseStream o_stream
  bool chunked
  int reuses
  bool context_bound
  bool secure
  X509Certificate cert
  int s_timeout
  Timer timer
  IPEndPoint local_ep
  HttpListener last_listener
  Int32[] client_cert_errors
  X509Certificate2 client_cert
  SslStream ssl_stream
  InputState input_state
  LineState line_state
  int position
Свойства:
  SslStream SslStream
  Int32[] ClientCertificateErrors
  X509Certificate2 ClientCertificate
  bool IsClosed
  int Reuses
  IPEndPoint LocalEndPoint
  IPEndPoint RemoteEndPoint
  bool IsSecure
  ListenerPrefix Prefix
Методы:
  void .ctor(Socket sock, EndPointListener epl, bool secure, X509Certificate cert)
  SslStream get_SslStream()
  Int32[] get_ClientCertificateErrors()
  X509Certificate2 get_ClientCertificate()
  void Init()
  bool get_IsClosed()
  int get_Reuses()
  IPEndPoint get_LocalEndPoint()
  IPEndPoint get_RemoteEndPoint()
  bool get_IsSecure()
  ListenerPrefix get_Prefix()
  void set_Prefix(ListenerPrefix value)
  void OnTimeout(object unused)
  void BeginReadRequest()
  RequestStream GetRequestStream(bool chunked, long contentlength)
  ResponseStream GetResponseStream()
  void OnRead(IAsyncResult ares)
  void OnReadInternal(IAsyncResult ares)
  void RemoveConnection()
  bool ProcessInput(MemoryStream ms)
  string ReadLine(Byte[] buffer, int offset, int len, Int32& used)
  void SendError(string msg, int status)
  void SendError()
  void Unbind()
  void Close()
  void CloseSocket()
  void Close(bool force_close)
  void .cctor()
  bool <.ctor>b__24_0(object t, X509Certificate c, X509Chain ch, SslPolicyErrors e)
--------------------------------------------------
Класс: System.Net.HttpListener
Наследуется от: object
Поля:
  MonoTlsProvider tlsProvider
  MonoTlsSettings tlsSettings
  X509Certificate certificate
  AuthenticationSchemes auth_schemes
  HttpListenerPrefixCollection prefixes
  AuthenticationSchemeSelector auth_selector
  string realm
  bool ignore_write_exceptions
  bool unsafe_ntlm_auth
  bool listening
  bool disposed
  object _internalLock
  Hashtable registry
  ArrayList ctx_queue
  ArrayList wait_queue
  Hashtable connections
  ServiceNameStore defaultServiceNames
  ExtendedProtectionPolicy extendedProtectionPolicy
  ExtendedProtectionSelector extendedProtectionSelectorDelegate
Свойства:
  AuthenticationSchemes AuthenticationSchemes
  AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate
  ExtendedProtectionSelector ExtendedProtectionSelectorDelegate
  bool IgnoreWriteExceptions
  bool IsListening
  bool IsSupported
  HttpListenerPrefixCollection Prefixes
  HttpListenerTimeoutManager TimeoutManager
  ExtendedProtectionPolicy ExtendedProtectionPolicy
  ServiceNameCollection DefaultServiceNames
  string Realm
  bool UnsafeConnectionNtlmAuthentication
Методы:
  void .ctor(X509Certificate certificate, MonoTlsProvider tlsProvider, MonoTlsSettings tlsSettings)
  X509Certificate LoadCertificateAndKey(IPAddress addr, int port)
  SslStream CreateSslStream(Stream innerStream, bool ownsStream, RemoteCertificateValidationCallback callback)
  void .ctor()
  AuthenticationSchemes get_AuthenticationSchemes()
  void set_AuthenticationSchemes(AuthenticationSchemes value)
  AuthenticationSchemeSelector get_AuthenticationSchemeSelectorDelegate()
  void set_AuthenticationSchemeSelectorDelegate(AuthenticationSchemeSelector value)
  ExtendedProtectionSelector get_ExtendedProtectionSelectorDelegate()
  void set_ExtendedProtectionSelectorDelegate(ExtendedProtectionSelector value)
  bool get_IgnoreWriteExceptions()
  void set_IgnoreWriteExceptions(bool value)
  bool get_IsListening()
  bool get_IsSupported()
  HttpListenerPrefixCollection get_Prefixes()
  HttpListenerTimeoutManager get_TimeoutManager()
  ExtendedProtectionPolicy get_ExtendedProtectionPolicy()
  void set_ExtendedProtectionPolicy(ExtendedProtectionPolicy value)
  ServiceNameCollection get_DefaultServiceNames()
  string get_Realm()
  void set_Realm(string value)
  bool get_UnsafeConnectionNtlmAuthentication()
  void set_UnsafeConnectionNtlmAuthentication(bool value)
  void Abort()
  void Close()
  void Close(bool force)
  void Cleanup(bool close_existing)
  IAsyncResult BeginGetContext(AsyncCallback callback, object state)
  HttpListenerContext EndGetContext(IAsyncResult asyncResult)
  AuthenticationSchemes SelectAuthenticationScheme(HttpListenerContext context)
  HttpListenerContext GetContext()
  void Start()
  void Stop()
  void System.IDisposable.Dispose()
  Task`1<HttpListenerContext> GetContextAsync()
  void CheckDisposed()
  HttpListenerContext GetContextFromQueue()
  void RegisterContext(HttpListenerContext context)
  void UnregisterContext(HttpListenerContext context)
  void AddConnection(HttpConnection cnc)
  void RemoveConnection(HttpConnection cnc)
--------------------------------------------------
Класс: System.Net.HttpListenerBasicIdentity
Наследуется от: GenericIdentity
Поля:
  string password
Свойства:
  string Password
Методы:
  void .ctor(string username, string password)
  string get_Password()
--------------------------------------------------
Класс: System.Net.HttpListenerContext
Наследуется от: object
Поля:
  HttpListenerRequest request
  HttpListenerResponse response
  IPrincipal user
  HttpConnection cnc
  string error
  int err_status
  HttpListener Listener
Свойства:
  int ErrorStatus
  string ErrorMessage
  bool HaveError
  HttpConnection Connection
  HttpListenerRequest Request
  HttpListenerResponse Response
  IPrincipal User
Методы:
  void .ctor(HttpConnection cnc)
  int get_ErrorStatus()
  void set_ErrorStatus(int value)
  string get_ErrorMessage()
  void set_ErrorMessage(string value)
  bool get_HaveError()
  HttpConnection get_Connection()
  HttpListenerRequest get_Request()
  HttpListenerResponse get_Response()
  IPrincipal get_User()
  void ParseAuthentication(AuthenticationSchemes expectedSchemes)
  IPrincipal ParseBasicAuthentication(string authData)
  Task`1<HttpListenerWebSocketContext> AcceptWebSocketAsync(string subProtocol)
  Task`1<HttpListenerWebSocketContext> AcceptWebSocketAsync(string subProtocol, TimeSpan keepAliveInterval)
  Task`1<HttpListenerWebSocketContext> AcceptWebSocketAsync(string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval)
  Task`1<HttpListenerWebSocketContext> AcceptWebSocketAsync(string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment`1<byte> internalBuffer)
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpListenerPrefixCollection
Наследуется от: object
Поля:
  List`1<string> prefixes
  HttpListener listener
Свойства:
  int Count
  bool IsReadOnly
  bool IsSynchronized
Методы:
  void .ctor(HttpListener listener)
  int get_Count()
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  void Add(string uriPrefix)
  void Clear()
  bool Contains(string uriPrefix)
  void CopyTo(String[] array, int offset)
  void CopyTo(Array array, int offset)
  IEnumerator`1<string> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Remove(string uriPrefix)
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpListenerRequest
Наследуется от: object
Поля:
  String[] accept_types
  Encoding content_encoding
  long content_length
  bool cl_set
  CookieCollection cookies
  WebHeaderCollection headers
  string method
  Stream input_stream
  Version version
  NameValueCollection query_string
  string raw_url
  Uri url
  Uri referrer
  String[] user_languages
  HttpListenerContext context
  bool is_chunked
  bool ka_set
  bool keep_alive
  GCCDelegate gcc_delegate
  Byte[] _100continue
  Char[] separators
Свойства:
  String[] AcceptTypes
  int ClientCertificateError
  Encoding ContentEncoding
  long ContentLength64
  string ContentType
  CookieCollection Cookies
  bool HasEntityBody
  NameValueCollection Headers
  string HttpMethod
  Stream InputStream
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  bool KeepAlive
  IPEndPoint LocalEndPoint
  Version ProtocolVersion
  NameValueCollection QueryString
  string RawUrl
  IPEndPoint RemoteEndPoint
  Guid RequestTraceIdentifier
  Uri Url
  Uri UrlReferrer
  string UserAgent
  string UserHostAddress
  string UserHostName
  String[] UserLanguages
  string ServiceName
  TransportContext TransportContext
  bool IsWebSocketRequest
Методы:
  void .ctor(HttpListenerContext context)
  void SetRequestLine(string req)
  void CreateQueryString(string query)
  bool MaybeUri(string s)
  bool IsPredefinedScheme(string scheme)
  bool FinishInitialization()
  string Unquote(string str)
  void AddHeader(string header)
  bool FlushInput()
  String[] get_AcceptTypes()
  int get_ClientCertificateError()
  Encoding get_ContentEncoding()
  long get_ContentLength64()
  string get_ContentType()
  CookieCollection get_Cookies()
  bool get_HasEntityBody()
  NameValueCollection get_Headers()
  string get_HttpMethod()
  Stream get_InputStream()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  bool get_KeepAlive()
  IPEndPoint get_LocalEndPoint()
  Version get_ProtocolVersion()
  NameValueCollection get_QueryString()
  string get_RawUrl()
  IPEndPoint get_RemoteEndPoint()
  Guid get_RequestTraceIdentifier()
  Uri get_Url()
  Uri get_UrlReferrer()
  string get_UserAgent()
  string get_UserHostAddress()
  string get_UserHostName()
  String[] get_UserLanguages()
  IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state)
  X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult)
  X509Certificate2 GetClientCertificate()
  string get_ServiceName()
  TransportContext get_TransportContext()
  bool get_IsWebSocketRequest()
  Task`1<X509Certificate2> GetClientCertificateAsync()
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpListenerResponse
Наследуется от: object
Поля:
  bool disposed
  Encoding content_encoding
  long content_length
  bool cl_set
  string content_type
  CookieCollection cookies
  WebHeaderCollection headers
  bool keep_alive
  ResponseStream output_stream
  Version version
  string location
  int status_code
  string status_description
  bool chunked
  HttpListenerContext context
  bool HeadersSent
  object headers_lock
  bool force_close_chunked
  string tspecials
Свойства:
  bool ForceCloseChunked
  Encoding ContentEncoding
  long ContentLength64
  string ContentType
  CookieCollection Cookies
  WebHeaderCollection Headers
  bool KeepAlive
  Stream OutputStream
  Version ProtocolVersion
  string RedirectLocation
  bool SendChunked
  int StatusCode
  string StatusDescription
Методы:
  void .ctor(HttpListenerContext context)
  bool get_ForceCloseChunked()
  Encoding get_ContentEncoding()
  void set_ContentEncoding(Encoding value)
  long get_ContentLength64()
  void set_ContentLength64(long value)
  string get_ContentType()
  void set_ContentType(string value)
  CookieCollection get_Cookies()
  void set_Cookies(CookieCollection value)
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  bool get_KeepAlive()
  void set_KeepAlive(bool value)
  Stream get_OutputStream()
  Version get_ProtocolVersion()
  void set_ProtocolVersion(Version value)
  string get_RedirectLocation()
  void set_RedirectLocation(string value)
  bool get_SendChunked()
  void set_SendChunked(bool value)
  int get_StatusCode()
  void set_StatusCode(int value)
  string get_StatusDescription()
  void set_StatusDescription(string value)
  void System.IDisposable.Dispose()
  void Abort()
  void AddHeader(string name, string value)
  void AppendCookie(Cookie cookie)
  void AppendHeader(string name, string value)
  void Close(bool force)
  void Close()
  void Close(Byte[] responseEntity, bool willBlock)
  void CopyFrom(HttpListenerResponse templateResponse)
  void Redirect(string url)
  bool FindCookie(Cookie cookie)
  void SendHeaders(bool closing, MemoryStream ms)
  string FormatHeaders(WebHeaderCollection headers)
  string CookieToClientString(Cookie cookie)
  string QuotedString(Cookie cookie, string value)
  bool IsToken(string value)
  void SetCookie(Cookie cookie)
  void .cctor()
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpListenerTimeoutManager
Наследуется от: object
Поля:
Свойства:
  TimeSpan EntityBody
  TimeSpan DrainEntityBody
  TimeSpan RequestQueue
  TimeSpan IdleConnection
  TimeSpan HeaderWait
  long MinSendBytesPerSecond
Методы:
  TimeSpan get_EntityBody()
  void set_EntityBody(TimeSpan value)
  TimeSpan get_DrainEntityBody()
  void set_DrainEntityBody(TimeSpan value)
  TimeSpan get_RequestQueue()
  void set_RequestQueue(TimeSpan value)
  TimeSpan get_IdleConnection()
  void set_IdleConnection(TimeSpan value)
  TimeSpan get_HeaderWait()
  void set_HeaderWait(TimeSpan value)
  long get_MinSendBytesPerSecond()
  void set_MinSendBytesPerSecond(long value)
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpRequestCreator
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  WebRequest Create(Uri uri)
--------------------------------------------------
Класс: System.Net.HttpStreamAsyncResult
Наследуется от: object
Поля:
  object locker
  ManualResetEvent handle
  bool completed
  Byte[] Buffer
  int Offset
  int Count
  AsyncCallback Callback
  object State
  int SynchRead
  Exception Error
Свойства:
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
Методы:
  void Complete(Exception e)
  void Complete()
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpWebRequest
Наследуется от: WebRequest
Поля:
  Uri requestUri
  Uri actualUri
  bool hostChanged
  bool allowAutoRedirect
  bool allowBuffering
  bool allowReadStreamBuffering
  X509CertificateCollection certificates
  string connectionGroup
  bool haveContentLength
  long contentLength
  HttpContinueDelegate continueDelegate
  CookieContainer cookieContainer
  ICredentials credentials
  bool haveResponse
  bool requestSent
  WebHeaderCollection webHeaders
  bool keepAlive
  int maxAutoRedirect
  string mediaType
  string method
  string initialMethod
  bool pipelined
  bool preAuthenticate
  bool usedPreAuth
  Version version
  bool force_version
  Version actualVersion
  IWebProxy proxy
  bool sendChunked
  ServicePoint servicePoint
  int timeout
  int continueTimeout
  WebRequestStream writeStream
  HttpWebResponse webResponse
  WebCompletionSource responseTask
  WebOperation currentOperation
  int aborted
  bool gotRequestStream
  int redirects
  bool expectContinue
  bool getResponseCalled
  object locker
  bool finished_reading
  DecompressionMethods auto_decomp
  int maxResponseHeadersLength
  int defaultMaxResponseHeadersLength
  int defaultMaximumErrorResponseLength
  RequestCachePolicy defaultCachePolicy
  int readWriteTimeout
  MobileTlsProvider tlsProvider
  MonoTlsSettings tlsSettings
  ServerCertValidationCallback certValidationCallback
  bool hostHasPort
  Uri hostUri
  AuthorizationState auth_state
  AuthorizationState proxy_auth_state
  Func`2<Stream, Task> ResendContentFactory
  int ID
  bool <ThrowOnError>k__BackingField
  bool unsafe_auth_blah
  bool <ReuseConnection>k__BackingField
Свойства:
  string Accept
  Uri Address
  bool AllowAutoRedirect
  bool AllowWriteStreamBuffering
  bool AllowReadStreamBuffering
  DecompressionMethods AutomaticDecompression
  bool InternalAllowBuffering
  bool MethodWithBuffer
  MobileTlsProvider TlsProvider
  MonoTlsSettings TlsSettings
  X509CertificateCollection ClientCertificates
  string Connection
  string ConnectionGroupName
  long ContentLength
  long InternalContentLength
  bool ThrowOnError
  string ContentType
  HttpContinueDelegate ContinueDelegate
  CookieContainer CookieContainer
  ICredentials Credentials
  DateTime Date
  RequestCachePolicy DefaultCachePolicy
  int DefaultMaximumErrorResponseLength
  string Expect
  bool HaveResponse
  WebHeaderCollection Headers
  string Host
  DateTime IfModifiedSince
  bool KeepAlive
  int MaximumAutomaticRedirections
  int MaximumResponseHeadersLength
  int DefaultMaximumResponseHeadersLength
  int ReadWriteTimeout
  int ContinueTimeout
  string MediaType
  string Method
  bool Pipelined
  bool PreAuthenticate
  Version ProtocolVersion
  IWebProxy Proxy
  string Referer
  Uri RequestUri
  bool SendChunked
  ServicePoint ServicePoint
  ServicePoint ServicePointNoLock
  bool SupportsCookieContainer
  int Timeout
  string TransferEncoding
  bool UseDefaultCredentials
  string UserAgent
  bool UnsafeAuthenticatedConnectionSharing
  bool GotRequestStream
  bool ExpectContinue
  Uri AuthUri
  bool ProxyQuery
  ServerCertValidationCallback ServerCertValidationCallback
  RemoteCertificateValidationCallback ServerCertificateValidationCallback
  bool FinishedReading
  bool Aborted
  bool ReuseConnection
Методы:
  void .cctor()
  void .ctor(Uri uri)
  void .ctor(Uri uri, MobileTlsProvider tlsProvider, MonoTlsSettings settings)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void ResetAuthorization()
  void SetSpecialHeaders(string HeaderName, string value)
  string get_Accept()
  void set_Accept(string value)
  Uri get_Address()
  void set_Address(Uri value)
  bool get_AllowAutoRedirect()
  void set_AllowAutoRedirect(bool value)
  bool get_AllowWriteStreamBuffering()
  void set_AllowWriteStreamBuffering(bool value)
  bool get_AllowReadStreamBuffering()
  void set_AllowReadStreamBuffering(bool value)
  Exception GetMustImplement()
  DecompressionMethods get_AutomaticDecompression()
  void set_AutomaticDecompression(DecompressionMethods value)
  bool get_InternalAllowBuffering()
  bool get_MethodWithBuffer()
  MobileTlsProvider get_TlsProvider()
  MonoTlsSettings get_TlsSettings()
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  string get_Connection()
  void set_Connection(string value)
  string get_ConnectionGroupName()
  void set_ConnectionGroupName(string value)
  long get_ContentLength()
  void set_ContentLength(long value)
  void set_InternalContentLength(long value)
  bool get_ThrowOnError()
  void set_ThrowOnError(bool value)
  string get_ContentType()
  void set_ContentType(string value)
  HttpContinueDelegate get_ContinueDelegate()
  void set_ContinueDelegate(HttpContinueDelegate value)
  CookieContainer get_CookieContainer()
  void set_CookieContainer(CookieContainer value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  DateTime get_Date()
  void set_Date(DateTime value)
  void SetDateHeaderHelper(string headerName, DateTime dateTime)
  RequestCachePolicy get_DefaultCachePolicy()
  void set_DefaultCachePolicy(RequestCachePolicy value)
  int get_DefaultMaximumErrorResponseLength()
  void set_DefaultMaximumErrorResponseLength(int value)
  string get_Expect()
  void set_Expect(string value)
  bool get_HaveResponse()
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  string get_Host()
  void set_Host(string value)
  bool TryGetHostUri(string hostName, Uri& hostUri)
  DateTime get_IfModifiedSince()
  void set_IfModifiedSince(DateTime value)
  bool get_KeepAlive()
  void set_KeepAlive(bool value)
  int get_MaximumAutomaticRedirections()
  void set_MaximumAutomaticRedirections(int value)
  int get_MaximumResponseHeadersLength()
  void set_MaximumResponseHeadersLength(int value)
  int get_DefaultMaximumResponseHeadersLength()
  void set_DefaultMaximumResponseHeadersLength(int value)
  int get_ReadWriteTimeout()
  void set_ReadWriteTimeout(int value)
  int get_ContinueTimeout()
  void set_ContinueTimeout(int value)
  string get_MediaType()
  void set_MediaType(string value)
  string get_Method()
  void set_Method(string value)
  bool get_Pipelined()
  void set_Pipelined(bool value)
  bool get_PreAuthenticate()
  void set_PreAuthenticate(bool value)
  Version get_ProtocolVersion()
  void set_ProtocolVersion(Version value)
  IWebProxy get_Proxy()
  void set_Proxy(IWebProxy value)
  string get_Referer()
  void set_Referer(string value)
  Uri get_RequestUri()
  bool get_SendChunked()
  void set_SendChunked(bool value)
  ServicePoint get_ServicePoint()
  ServicePoint get_ServicePointNoLock()
  bool get_SupportsCookieContainer()
  int get_Timeout()
  void set_Timeout(int value)
  string get_TransferEncoding()
  void set_TransferEncoding(string value)
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  string get_UserAgent()
  void set_UserAgent(string value)
  bool get_UnsafeAuthenticatedConnectionSharing()
  void set_UnsafeAuthenticatedConnectionSharing(bool value)
  bool get_GotRequestStream()
  bool get_ExpectContinue()
  void set_ExpectContinue(bool value)
  Uri get_AuthUri()
  bool get_ProxyQuery()
  ServerCertValidationCallback get_ServerCertValidationCallback()
  RemoteCertificateValidationCallback get_ServerCertificateValidationCallback()
  void set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value)
  ServicePoint GetServicePoint()
  void AddRange(int range)
  void AddRange(int from, int to)
  void AddRange(string rangeSpecifier, int range)
  void AddRange(string rangeSpecifier, int from, int to)
  void AddRange(long range)
  void AddRange(long from, long to)
  void AddRange(string rangeSpecifier, long range)
  void AddRange(string rangeSpecifier, long from, long to)
  WebOperation SendRequest(bool redirecting, BufferOffsetSize writeBuffer, CancellationToken cancellationToken)
  Task`1<Stream> MyGetRequestStreamAsync(CancellationToken cancellationToken)
  IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)
  Stream EndGetRequestStream(IAsyncResult asyncResult)
  Stream GetRequestStream()
  Stream GetRequestStream(TransportContext& context)
  Task`1<Stream> GetRequestStreamAsync()
  Task`1<T> RunWithTimeout(Func`2<CancellationToken, Task`1<T>> func, int timeout, Action abort, Func`1<bool> aborted, CancellationToken cancellationToken)
  Task`1<T> RunWithTimeoutWorker(Task`1<T> workerTask, int timeout, Action abort, Func`1<bool> aborted, CancellationTokenSource cts)
  Task`1<T> RunWithTimeout(Func`2<CancellationToken, Task`1<T>> func)
  Task`1<HttpWebResponse> MyGetResponseAsync(CancellationToken cancellationToken)
  Task`1<ValueTuple`5<HttpWebResponse, bool, bool, BufferOffsetSize, WebOperation>> GetResponseFromData(WebResponseStream stream, CancellationToken cancellationToken)
  Exception FlattenException(Exception e)
  WebException GetWebException(Exception e)
  WebException GetWebException(Exception e, bool aborted)
  WebException CreateRequestAbortedException()
  IAsyncResult BeginGetResponse(AsyncCallback callback, object state)
  WebResponse EndGetResponse(IAsyncResult asyncResult)
  Stream EndGetRequestStream(IAsyncResult asyncResult, TransportContext& context)
  WebResponse GetResponse()
  bool get_FinishedReading()
  void set_FinishedReading(bool value)
  bool get_Aborted()
  void Abort()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void CheckRequestStarted()
  void DoContinueDelegate(int statusCode, WebHeaderCollection headers)
  void RewriteRedirectToGet()
  bool Redirect(HttpStatusCode code, WebResponse response)
  string GetHeaders()
  void DoPreAuthenticate()
  Byte[] GetRequestHeaders()
  ValueTuple`2<WebOperation, bool> HandleNtlmAuth(WebResponseStream stream, HttpWebResponse response, BufferOffsetSize writeBuffer, CancellationToken cancellationToken)
  bool CheckAuthorization(WebResponse response, HttpStatusCode code)
  ValueTuple`2<Task`1<BufferOffsetSize>, WebException> GetRewriteHandler(HttpWebResponse response, bool redirect)
  ValueTuple`4<bool, bool, Task`1<BufferOffsetSize>, WebException> CheckFinalStatus(HttpWebResponse response)
  bool get_ReuseConnection()
  void set_ReuseConnection(bool value)
  StringBuilder GenerateConnectionGroup(string connectionGroupName, bool unsafeConnectionGroup, bool isInternalGroup)
  bool <RunWithTimeout>b__245_0()
  Task`1<BufferOffsetSize> <GetRewriteHandler>b__274_0()
  void .ctor()
--------------------------------------------------
Класс: System.Net.HttpWebResponse
Наследуется от: WebResponse
Поля:
  Uri uri
  WebHeaderCollection webHeaders
  CookieCollection cookieCollection
  string method
  Version version
  HttpStatusCode statusCode
  string statusDescription
  long contentLength
  string contentType
  CookieContainer cookie_container
  bool disposed
  Stream stream
Свойства:
  string CharacterSet
  string ContentEncoding
  long ContentLength
  string ContentType
  CookieCollection Cookies
  WebHeaderCollection Headers
  bool IsMutuallyAuthenticated
  DateTime LastModified
  string Method
  Version ProtocolVersion
  Uri ResponseUri
  string Server
  HttpStatusCode StatusCode
  string StatusDescription
  bool SupportsHeaders
Методы:
  void .ctor()
  void .ctor(Uri uri, string method, HttpStatusCode status, WebHeaderCollection headers)
  void .ctor(Uri uri, string method, WebResponseStream stream, CookieContainer container)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  string get_CharacterSet()
  string get_ContentEncoding()
  long get_ContentLength()
  string get_ContentType()
  CookieCollection get_Cookies()
  void set_Cookies(CookieCollection value)
  WebHeaderCollection get_Headers()
  Exception GetMustImplement()
  bool get_IsMutuallyAuthenticated()
  DateTime get_LastModified()
  string get_Method()
  Version get_ProtocolVersion()
  Uri get_ResponseUri()
  string get_Server()
  HttpStatusCode get_StatusCode()
  string get_StatusDescription()
  bool get_SupportsHeaders()
  string GetResponseHeader(string headerName)
  Stream GetResponseStream()
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void Close()
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void CheckDisposed()
  void FillCookies()
--------------------------------------------------
Класс: System.Net.ICredentialPolicy
Поля:
Свойства:
Методы:
  bool ShouldSendCredential(Uri challengeUri, WebRequest request, NetworkCredential credential, IAuthenticationModule authenticationModule)
--------------------------------------------------
Класс: System.Net.IPv6AddressFormatter
Наследуется от: ValueType
Поля:
  UInt16[] address
  long scopeId
Свойства:
Методы:
  void .ctor(UInt16[] addr, long scopeId)
  ushort SwapUShort(ushort number)
  UInt32 AsIPv4Int()
  bool IsIPv4Compatible()
  bool IsIPv4Mapped()
  string ToString()
--------------------------------------------------
Класс: System.Net.IWebProxyScript
Поля:
Свойства:
Методы:
  void Close()
  bool Load(Uri scriptLocation, string script, Type helperType)
  string Run(string url, string host)
--------------------------------------------------
Класс: System.Net.ListenerAsyncResult
Наследуется от: object
Поля:
  ManualResetEvent handle
  bool synch
  bool completed
  AsyncCallback cb
  object state
  Exception exception
  HttpListenerContext context
  object locker
  ListenerAsyncResult forward
  bool EndCalled
  bool InGet
  WaitCallback InvokeCB
Свойства:
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool IsCompleted
Методы:
  void .ctor(AsyncCallback cb, object state)
  void Complete(Exception exc)
  void InvokeCallback(object o)
  void Complete(HttpListenerContext context)
  void Complete(HttpListenerContext context, bool synch)
  HttpListenerContext GetContext()
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  bool get_IsCompleted()
  void .cctor()
--------------------------------------------------
Класс: System.Net.ListenerPrefix
Наследуется от: object
Поля:
  string original
  string host
  ushort port
  string path
  bool secure
  IPAddress[] addresses
  HttpListener Listener
Свойства:
  IPAddress[] Addresses
  bool Secure
  string Host
  int Port
  string Path
Методы:
  void .ctor(string prefix)
  string ToString()
  IPAddress[] get_Addresses()
  void set_Addresses(IPAddress[] value)
  bool get_Secure()
  string get_Host()
  int get_Port()
  string get_Path()
  bool Equals(object o)
  int GetHashCode()
  void Parse(string uri)
  void CheckUri(string uri)
--------------------------------------------------
Класс: System.Net.MonoChunkParser
Наследуется от: object
Поля:
  WebHeaderCollection headers
  int chunkSize
  int chunkRead
  int totalWritten
  State state
  StringBuilder saved
  bool sawCR
  bool gotit
  int trailerState
  ArrayList chunks
Свойства:
  bool WantMore
  bool DataAvailable
  int TotalDataSize
  int ChunkLeft
Методы:
  void .ctor(WebHeaderCollection headers)
  void WriteAndReadBack(Byte[] buffer, int offset, int size, Int32& read)
  int Read(Byte[] buffer, int offset, int size)
  int ReadFromChunks(Byte[] buffer, int offset, int size)
  void Write(Byte[] buffer, int offset, int size)
  void InternalWrite(Byte[] buffer, Int32& offset, int size)
  bool get_WantMore()
  bool get_DataAvailable()
  int get_TotalDataSize()
  int get_ChunkLeft()
  State ReadBody(Byte[] buffer, Int32& offset, int size)
  State GetChunkSize(Byte[] buffer, Int32& offset, int size)
  string RemoveChunkExtension(string input)
  State ReadCRLF(Byte[] buffer, Int32& offset, int size)
  State ReadTrailer(Byte[] buffer, Int32& offset, int size)
  void ThrowProtocolViolation(string message)
--------------------------------------------------
Класс: System.Net.MonoChunkStream
Наследуется от: WebReadStream
Поля:
  WebHeaderCollection <Headers>k__BackingField
  MonoChunkParser <Decoder>k__BackingField
Свойства:
  WebHeaderCollection Headers
  MonoChunkParser Decoder
Методы:
  WebHeaderCollection get_Headers()
  MonoChunkParser get_Decoder()
  void .ctor(WebOperation operation, Stream innerStream, WebHeaderCollection headers)
  Task`1<int> ProcessReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  Task FinishReading(CancellationToken cancellationToken)
  void ThrowExpectingChunkTrailer()
  Task <>n__0(CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Net.MonoHttpDate
Наследуется от: object
Поля:
  string rfc1123_date
  string rfc850_date
  string asctime_date
  String[] formats
Свойства:
Методы:
  DateTime Parse(string dateStr)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.NetConfig
Наследуется от: object
Поля:
  bool ipv6Enabled
  int MaxResponseHeadersLength
Свойства:
Методы:
  void .ctor()
  object System.ICloneable.Clone()
--------------------------------------------------
Класс: System.Net.NtlmClient
Наследуется от: object
Поля:
  IAuthenticationModule authObject
Свойства:
  string AuthenticationType
  bool CanPreAuthenticate
Методы:
  void .ctor()
  Authorization Authenticate(string challenge, WebRequest webRequest, ICredentials credentials)
  Authorization PreAuthenticate(WebRequest webRequest, ICredentials credentials)
  string get_AuthenticationType()
  bool get_CanPreAuthenticate()
--------------------------------------------------
Класс: System.Net.RequestStream
Наследуется от: Stream
Поля:
  Byte[] buffer
  int offset
  int length
  long remaining_body
  bool disposed
  Stream stream
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream, Byte[] buffer, int offset, int length)
  void .ctor(Stream stream, Byte[] buffer, int offset, int length, long contentlength)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Close()
  void Flush()
  int FillFromBuffer(Byte[] buffer, int off, int count)
  int Read(Byte[] buffer, int offset, int count)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback cback, object state)
  int EndRead(IAsyncResult ares)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback cback, object state)
  void EndWrite(IAsyncResult async_result)
--------------------------------------------------
Класс: System.Net.ResponseStream
Наследуется от: Stream
Поля:
  HttpListenerResponse response
  bool ignore_errors
  bool disposed
  bool trailer_sent
  Stream stream
  Byte[] crlf
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream, HttpListenerResponse response, bool ignore_errors)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Close()
  MemoryStream GetHeaders(bool closing)
  void Flush()
  Byte[] GetChunkSizeBytes(int size, bool final)
  void InternalWrite(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback cback, object state)
  void EndWrite(IAsyncResult ares)
  int Read(Byte[] buffer, int offset, int count)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback cback, object state)
  int EndRead(IAsyncResult ares)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void .cctor()
--------------------------------------------------
Класс: System.Net.ServicePoint
Наследуется от: object
Поля:
  Uri uri
  DateTime lastDnsResolve
  Version protocolVersion
  IPHostEntry host
  bool usesProxy
  bool sendContinue
  bool useConnect
  object hostE
  bool useNagle
  BindIPEndPoint endPointCallback
  bool tcp_keepalive
  int tcp_keepalive_time
  int tcp_keepalive_interval
  bool disposed
  int connectionLeaseTimeout
  int receiveBufferSize
  SPKey <Key>k__BackingField
  ServicePointScheduler <Scheduler>k__BackingField
  int connectionLimit
  int maxIdleTime
  object m_ServerCertificateOrBytes
  object m_ClientCertificateOrBytes
Свойства:
  SPKey Key
  ServicePointScheduler Scheduler
  Uri Address
  BindIPEndPoint BindIPEndPointDelegate
  int ConnectionLeaseTimeout
  int ConnectionLimit
  string ConnectionName
  int CurrentConnections
  DateTime IdleSince
  int MaxIdleTime
  Version ProtocolVersion
  int ReceiveBufferSize
  bool SupportsPipelining
  bool Expect100Continue
  bool UseNagleAlgorithm
  bool SendContinue
  bool UsesProxy
  bool UseConnect
  bool HasTimedOut
  IPHostEntry HostEntry
  X509Certificate Certificate
  X509Certificate ClientCertificate
Методы:
  void .ctor(SPKey key, Uri uri, int connectionLimit, int maxIdleTime)
  SPKey get_Key()
  ServicePointScheduler get_Scheduler()
  void set_Scheduler(ServicePointScheduler value)
  Uri get_Address()
  BindIPEndPoint get_BindIPEndPointDelegate()
  void set_BindIPEndPointDelegate(BindIPEndPoint value)
  int get_ConnectionLeaseTimeout()
  void set_ConnectionLeaseTimeout(int value)
  int get_ConnectionLimit()
  void set_ConnectionLimit(int value)
  string get_ConnectionName()
  int get_CurrentConnections()
  DateTime get_IdleSince()
  int get_MaxIdleTime()
  void set_MaxIdleTime(int value)
  Version get_ProtocolVersion()
  int get_ReceiveBufferSize()
  void set_ReceiveBufferSize(int value)
  bool get_SupportsPipelining()
  bool get_Expect100Continue()
  void set_Expect100Continue(bool value)
  bool get_UseNagleAlgorithm()
  void set_UseNagleAlgorithm(bool value)
  bool get_SendContinue()
  void set_SendContinue(bool value)
  void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval)
  void KeepAliveSetup(Socket socket)
  void PutBytes(Byte[] bytes, UInt32 v, int offset)
  bool get_UsesProxy()
  void set_UsesProxy(bool value)
  bool get_UseConnect()
  void set_UseConnect(bool value)
  bool get_HasTimedOut()
  IPHostEntry get_HostEntry()
  void SetVersion(Version version)
  void SendRequest(WebOperation operation, string groupName)
  bool CloseConnectionGroup(string connectionGroupName)
  void FreeServicePoint()
  X509Certificate get_Certificate()
  void UpdateServerCertificate(X509Certificate certificate)
  X509Certificate get_ClientCertificate()
  void UpdateClientCertificate(X509Certificate certificate)
  bool CallEndPointDelegate(Socket sock, IPEndPoint remote)
  void .ctor()
--------------------------------------------------
Класс: System.Net.ServicePointManager
Наследуется от: object
Поля:
  ConcurrentDictionary`2<SPKey, ServicePoint> servicePoints
  ICertificatePolicy policy
  int defaultConnectionLimit
  int maxServicePointIdleTime
  int maxServicePoints
  int dnsRefreshTimeout
  bool _checkCRL
  SecurityProtocolType _securityProtocol
  bool expectContinue
  bool useNagle
  ServerCertValidationCallback server_cert_cb
  bool tcp_keepalive
  int tcp_keepalive_time
  int tcp_keepalive_interval
  int DefaultNonPersistentConnectionLimit
  int DefaultPersistentConnectionLimit
  string configKey
  ConnectionManagementData manager
Свойства:
  ICertificatePolicy CertificatePolicy
  bool CheckCertificateRevocationList
  int DefaultConnectionLimit
  int DnsRefreshTimeout
  bool EnableDnsRoundRobin
  int MaxServicePointIdleTime
  int MaxServicePoints
  bool ReusePort
  SecurityProtocolType SecurityProtocol
  ServerCertValidationCallback ServerCertValidationCallback
  RemoteCertificateValidationCallback ServerCertificateValidationCallback
  EncryptionPolicy EncryptionPolicy
  bool Expect100Continue
  bool UseNagleAlgorithm
  bool DisableStrongCrypto
  bool DisableSendAuxRecord
Методы:
  void .cctor()
  void .ctor()
  ICertificatePolicy get_CertificatePolicy()
  void set_CertificatePolicy(ICertificatePolicy value)
  ICertificatePolicy GetLegacyCertificatePolicy()
  bool get_CheckCertificateRevocationList()
  void set_CheckCertificateRevocationList(bool value)
  int get_DefaultConnectionLimit()
  void set_DefaultConnectionLimit(int value)
  Exception GetMustImplement()
  int get_DnsRefreshTimeout()
  void set_DnsRefreshTimeout(int value)
  bool get_EnableDnsRoundRobin()
  void set_EnableDnsRoundRobin(bool value)
  int get_MaxServicePointIdleTime()
  void set_MaxServicePointIdleTime(int value)
  int get_MaxServicePoints()
  void set_MaxServicePoints(int value)
  bool get_ReusePort()
  void set_ReusePort(bool value)
  SecurityProtocolType get_SecurityProtocol()
  void set_SecurityProtocol(SecurityProtocolType value)
  ServerCertValidationCallback get_ServerCertValidationCallback()
  RemoteCertificateValidationCallback get_ServerCertificateValidationCallback()
  void set_ServerCertificateValidationCallback(RemoteCertificateValidationCallback value)
  EncryptionPolicy get_EncryptionPolicy()
  bool get_Expect100Continue()
  void set_Expect100Continue(bool value)
  bool get_UseNagleAlgorithm()
  void set_UseNagleAlgorithm(bool value)
  bool get_DisableStrongCrypto()
  bool get_DisableSendAuxRecord()
  void SetTcpKeepAlive(bool enabled, int keepAliveTime, int keepAliveInterval)
  ServicePoint FindServicePoint(Uri address)
  ServicePoint FindServicePoint(string uriString, IWebProxy proxy)
  ServicePoint FindServicePoint(Uri address, IWebProxy proxy)
  void CloseConnectionGroup(string connectionGroupName)
  void RemoveServicePoint(ServicePoint sp)
--------------------------------------------------
Класс: System.Net.ServicePointScheduler
Наследуется от: object
Поля:
  ServicePoint <ServicePoint>k__BackingField
  int running
  int maxIdleTime
  AsyncManualResetEvent schedulerEvent
  ConnectionGroup defaultGroup
  Dictionary`2<string, ConnectionGroup> groups
  LinkedList`1<ValueTuple`2<ConnectionGroup, WebOperation>> operations
  LinkedList`1<ValueTuple`3<ConnectionGroup, WebConnection, Task>> idleConnections
  int currentConnections
  int connectionLimit
  DateTime idleSince
  int nextId
  int ID
  string <ME>k__BackingField
Свойства:
  ServicePoint ServicePoint
  int MaxIdleTime
  int ConnectionLimit
  int CurrentConnections
  DateTime IdleSince
  string ME
Методы:
  ServicePoint get_ServicePoint()
  void set_ServicePoint(ServicePoint value)
  int get_MaxIdleTime()
  void set_MaxIdleTime(int value)
  int get_ConnectionLimit()
  void set_ConnectionLimit(int value)
  void .ctor(ServicePoint servicePoint, int connectionLimit, int maxIdleTime)
  void Debug(string message)
  int get_CurrentConnections()
  DateTime get_IdleSince()
  string get_ME()
  void Run()
  Task RunScheduler()
  void Cleanup()
  void RunSchedulerIteration()
  bool OperationCompleted(ConnectionGroup group, WebOperation operation)
  void CloseIdleConnection(ConnectionGroup group, WebConnection connection)
  bool SchedulerIteration(ConnectionGroup group)
  void RemoveOperation(WebOperation operation)
  void RemoveIdleConnection(WebConnection connection)
  void FinalCleanup()
  void SendRequest(WebOperation operation, string groupName)
  bool CloseConnectionGroup(string groupName)
  ConnectionGroup GetConnectionGroup(string name)
  void OnConnectionCreated(WebConnection connection)
  void OnConnectionClosed(WebConnection connection)
  Task`1<bool> WaitAsync(Task workerTask, int millisecondTimeout)
  Task <Run>b__31_0()
--------------------------------------------------
Класс: System.Net.SocketPermission
Наследуется от: CodeAccessPermission
Поля:
  ArrayList m_acceptList
  ArrayList m_connectList
  bool m_noRestriction
  int AllPorts
Свойства:
  IEnumerator AcceptList
  IEnumerator ConnectList
Методы:
  void .ctor(PermissionState state)
  void .ctor(NetworkAccess access, TransportType transport, string hostName, int portNumber)
  IEnumerator get_AcceptList()
  IEnumerator get_ConnectList()
  void AddPermission(NetworkAccess access, TransportType transport, string hostName, int portNumber)
  IPermission Copy()
  IPermission Intersect(IPermission target)
  bool IntersectEmpty(SocketPermission permission)
  void Intersect(ArrayList list1, ArrayList list2, ArrayList result)
  bool IsSubsetOf(IPermission target)
  bool IsSubsetOf(ArrayList list1, ArrayList list2)
  bool IsUnrestricted()
  SecurityElement ToXml()
  void ToXml(SecurityElement root, string childName, IEnumerator enumerator)
  void FromXml(SecurityElement securityElement)
  void FromXml(ArrayList endpoints, NetworkAccess access)
  IPermission Union(IPermission target)
--------------------------------------------------
Класс: System.Net.SocketPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string m_access
  string m_host
  string m_port
  string m_transport
Свойства:
  string Access
  string Host
  string Port
  string Transport
Методы:
  void .ctor(SecurityAction action)
  string get_Access()
  void set_Access(string value)
  string get_Host()
  void set_Host(string value)
  string get_Port()
  void set_Port(string value)
  string get_Transport()
  void set_Transport(string value)
  IPermission CreatePermission()
  void AlreadySet(string property)
--------------------------------------------------
Класс: System.Net.WebCompletionSource`1
Наследуется от: object
Поля:
  TaskCompletionSource`1<Result<T>> completion
  Result<T> currentResult
Свойства:
  Result<T> CurrentResult
  Status<T> CurrentStatus
  Task Task
Методы:
  void .ctor(bool runAsync)
  Result<T> get_CurrentResult()
  Status<T> get_CurrentStatus()
  Task get_Task()
  bool TrySetCompleted(T argument)
  bool TrySetCompleted()
  bool TrySetCanceled()
  bool TrySetCanceled(OperationCanceledException error)
  bool TrySetException(Exception error)
  void ThrowOnError()
  Task`1<T> WaitForCompletion()
--------------------------------------------------
Класс: System.Net.WebCompletionSource
Наследуется от: WebCompletionSource`1<object>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.ReadState
Наследуется от: Enum
Поля:
  int value__
  ReadState None
  ReadState Status
  ReadState Headers
  ReadState Content
  ReadState Aborted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebConnection
Наследуется от: object
Поля:
  NetworkCredential ntlm_credentials
  bool ntlm_authenticated
  bool unsafe_sharing
  Stream networkStream
  Socket socket
  MonoTlsStream monoTlsStream
  WebConnectionTunnel tunnel
  int disposed
  ServicePoint <ServicePoint>k__BackingField
  int ID
  DateTime idleSince
  WebOperation currentOperation
Свойства:
  ServicePoint ServicePoint
  bool Closed
  bool Busy
  DateTime IdleSince
  bool NtlmAuthenticated
  NetworkCredential NtlmCredential
  bool UnsafeAuthenticatedConnectionSharing
Методы:
  ServicePoint get_ServicePoint()
  void .ctor(ServicePoint sPoint)
  void Debug(string message, Object[] args)
  void Debug(string message)
  bool CanReuse()
  bool CheckReusable()
  Task Connect(WebOperation operation, CancellationToken cancellationToken)
  Task`1<bool> CreateStream(WebOperation operation, bool reused, CancellationToken cancellationToken)
  Task`1<WebRequestStream> InitConnection(WebOperation operation, CancellationToken cancellationToken)
  WebException GetException(WebExceptionStatus status, Exception error)
  bool ReadLine(Byte[] buffer, Int32& start, int max, String& output)
  bool CanReuseConnection(WebOperation operation)
  bool PrepareSharingNtlm(WebOperation operation)
  void Reset()
  void Close(bool reset)
  void CloseSocket()
  bool get_Closed()
  bool get_Busy()
  DateTime get_IdleSince()
  bool StartOperation(WebOperation operation, bool reused)
  bool Continue(WebOperation next)
  void Dispose(bool disposing)
  void Dispose()
  void ResetNtlm()
  bool get_NtlmAuthenticated()
  void set_NtlmAuthenticated(bool value)
  NetworkCredential get_NtlmCredential()
  void set_NtlmCredential(NetworkCredential value)
  bool get_UnsafeAuthenticatedConnectionSharing()
  void set_UnsafeAuthenticatedConnectionSharing(bool value)
--------------------------------------------------
Класс: System.Net.WebConnectionStream
Наследуется от: Stream
Поля:
  bool closed
  bool disposed
  object locker
  int read_timeout
  int write_timeout
  bool IgnoreIOErrors
  HttpWebRequest <Request>k__BackingField
  WebConnection <Connection>k__BackingField
  WebOperation <Operation>k__BackingField
Свойства:
  HttpWebRequest Request
  WebConnection Connection
  WebOperation Operation
  ServicePoint ServicePoint
  bool CanTimeout
  int ReadTimeout
  int WriteTimeout
  bool CanSeek
  long Length
  long Position
Методы:
  void .ctor(WebConnection cnc, WebOperation operation)
  HttpWebRequest get_Request()
  WebConnection get_Connection()
  WebOperation get_Operation()
  ServicePoint get_ServicePoint()
  bool get_CanTimeout()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  Exception GetException(Exception e)
  bool TryReadFromBufferedContent(Byte[] buffer, int offset, int count, Int32& result)
  int Read(Byte[] buffer, int offset, int count)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback cb, object state)
  int EndRead(IAsyncResult r)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback cb, object state)
  void EndWrite(IAsyncResult r)
  void Write(Byte[] buffer, int offset, int count)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  void InternalClose()
  void Close_internal(Boolean& disposed)
  void Close()
  long Seek(long a, SeekOrigin b)
  void SetLength(long a)
  bool get_CanSeek()
  long get_Length()
  long get_Position()
  void set_Position(long value)
--------------------------------------------------
Класс: System.Net.WebConnectionTunnel
Наследуется от: object
Поля:
  HttpWebRequest <Request>k__BackingField
  Uri <ConnectUri>k__BackingField
  HttpWebRequest connectRequest
  NtlmAuthState ntlmAuthState
  bool <Success>k__BackingField
  bool <CloseConnection>k__BackingField
  int <StatusCode>k__BackingField
  string <StatusDescription>k__BackingField
  String[] <Challenge>k__BackingField
  WebHeaderCollection <Headers>k__BackingField
  Version <ProxyVersion>k__BackingField
  Byte[] <Data>k__BackingField
Свойства:
  HttpWebRequest Request
  Uri ConnectUri
  bool Success
  bool CloseConnection
  int StatusCode
  string StatusDescription
  String[] Challenge
  WebHeaderCollection Headers
  Version ProxyVersion
  Byte[] Data
Методы:
  HttpWebRequest get_Request()
  Uri get_ConnectUri()
  void .ctor(HttpWebRequest request, Uri connectUri)
  bool get_Success()
  void set_Success(bool value)
  bool get_CloseConnection()
  void set_CloseConnection(bool value)
  int get_StatusCode()
  void set_StatusCode(int value)
  string get_StatusDescription()
  void set_StatusDescription(string value)
  String[] get_Challenge()
  void set_Challenge(String[] value)
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  Version get_ProxyVersion()
  void set_ProxyVersion(Version value)
  Byte[] get_Data()
  void set_Data(Byte[] value)
  Task Initialize(Stream stream, CancellationToken cancellationToken)
  Task`1<ValueTuple`3<WebHeaderCollection, Byte[], int>> ReadHeaders(Stream stream, CancellationToken cancellationToken)
  void FlushContents(Stream stream, int contentLength)
--------------------------------------------------
Класс: System.Net.WebOperation
Наследуется от: object
Поля:
  HttpWebRequest <Request>k__BackingField
  WebConnection <Connection>k__BackingField
  ServicePoint <ServicePoint>k__BackingField
  BufferOffsetSize <WriteBuffer>k__BackingField
  bool <IsNtlmChallenge>k__BackingField
  int ID
  CancellationTokenSource cts
  WebCompletionSource`1<WebRequestStream> requestTask
  WebCompletionSource`1<WebRequestStream> requestWrittenTask
  WebCompletionSource`1<WebResponseStream> responseTask
  WebCompletionSource`1<ValueTuple`2<bool, WebOperation>> finishedTask
  WebRequestStream writeStream
  WebResponseStream responseStream
  ExceptionDispatchInfo disposedInfo
  ExceptionDispatchInfo closedInfo
  WebOperation priorityRequest
  int requestSent
  int finished
Свойства:
  HttpWebRequest Request
  WebConnection Connection
  ServicePoint ServicePoint
  BufferOffsetSize WriteBuffer
  bool IsNtlmChallenge
  string ME
  bool Aborted
  bool Closed
  WebRequestStream WriteStream
  WebCompletionSource`1<ValueTuple`2<bool, WebOperation>> Finished
Методы:
  HttpWebRequest get_Request()
  WebConnection get_Connection()
  void set_Connection(WebConnection value)
  ServicePoint get_ServicePoint()
  void set_ServicePoint(ServicePoint value)
  BufferOffsetSize get_WriteBuffer()
  bool get_IsNtlmChallenge()
  string get_ME()
  void .ctor(HttpWebRequest request, BufferOffsetSize writeBuffer, bool isNtlmChallenge, CancellationToken cancellationToken)
  bool get_Aborted()
  bool get_Closed()
  void Abort()
  void Close()
  void SetCanceled()
  void SetError(Exception error)
  ValueTuple`2<ExceptionDispatchInfo, bool> SetDisposed(ExceptionDispatchInfo& field)
  ExceptionDispatchInfo CheckDisposed(CancellationToken cancellationToken)
  void ThrowIfDisposed()
  void ThrowIfDisposed(CancellationToken cancellationToken)
  void ThrowIfClosedOrDisposed()
  void ThrowIfClosedOrDisposed(CancellationToken cancellationToken)
  ExceptionDispatchInfo CheckThrowDisposed(bool throwIt, ExceptionDispatchInfo& field)
  void RegisterRequest(ServicePoint servicePoint, WebConnection connection)
  void SetPriorityRequest(WebOperation operation)
  Task`1<Stream> GetRequestStream()
  Task`1<WebRequestStream> GetRequestStreamInternal()
  Task WaitUntilRequestWritten()
  WebRequestStream get_WriteStream()
  Task`1<WebResponseStream> GetResponseStream()
  WebCompletionSource`1<ValueTuple`2<bool, WebOperation>> get_Finished()
  void Run()
  void CompleteRequestWritten(WebRequestStream stream, Exception error)
  void Finish(bool ok, Exception error)
  void <RegisterRequest>b__48_0()
--------------------------------------------------
Класс: System.Net.WebReadStream
Наследуется от: Stream
Поля:
  WebOperation <Operation>k__BackingField
  Stream <InnerStream>k__BackingField
  bool disposed
Свойства:
  WebOperation Operation
  Stream InnerStream
  string ME
  long Length
  long Position
  bool CanSeek
  bool CanRead
  bool CanWrite
Методы:
  WebOperation get_Operation()
  Stream get_InnerStream()
  string get_ME()
  void .ctor(WebOperation operation, Stream innerStream)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool get_CanSeek()
  bool get_CanRead()
  bool get_CanWrite()
  void SetLength(long value)
  long Seek(long offset, SeekOrigin origin)
  void Write(Byte[] buffer, int offset, int count)
  void Flush()
  Exception GetException(Exception e)
  int Read(Byte[] buffer, int offset, int size)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int size, AsyncCallback cb, object state)
  int EndRead(IAsyncResult r)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  Task`1<int> ProcessReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  Task FinishReading(CancellationToken cancellationToken)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Net.WebRequestStream
Наследуется от: WebConnectionStream
Поля:
  Byte[] crlf
  MemoryStream writeBuffer
  bool requestWritten
  bool allowBuffering
  bool sendChunked
  WebCompletionSource pendingWrite
  long totalWritten
  Byte[] headers
  bool headersSent
  int completeRequestWritten
  int chunkTrailerWritten
  string ME
  Stream <InnerStream>k__BackingField
  bool <KeepAlive>k__BackingField
Свойства:
  Stream InnerStream
  bool KeepAlive
  bool CanRead
  bool CanWrite
  bool SendChunked
  bool HasWriteBuffer
  int WriteBufferLength
Методы:
  void .ctor(WebConnection connection, WebOperation operation, Stream stream, WebConnectionTunnel tunnel)
  Stream get_InnerStream()
  bool get_KeepAlive()
  bool get_CanRead()
  bool get_CanWrite()
  bool get_SendChunked()
  void set_SendChunked(bool value)
  bool get_HasWriteBuffer()
  int get_WriteBufferLength()
  BufferOffsetSize GetWriteBuffer()
  Task FinishWriting(CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  Task WriteAsyncInner(Byte[] buffer, int offset, int size, WebCompletionSource completion, CancellationToken cancellationToken)
  Task ProcessWrite(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  void CheckWriteOverflow(long contentLength, long totalWritten, long size)
  Task Initialize(CancellationToken cancellationToken)
  Task SetHeadersAsync(bool setInternalLength, CancellationToken cancellationToken)
  Task WriteRequestAsync(CancellationToken cancellationToken)
  Task WriteChunkTrailer_inner(CancellationToken cancellationToken)
  Task WriteChunkTrailer()
  void KillBuffer()
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  bool TryReadFromBufferedContent(Byte[] buffer, int offset, int count, Int32& result)
  void Close_internal(Boolean& disposed)
  void .cctor()
--------------------------------------------------
Класс: System.Net.WebResponseStream
Наследуется от: WebConnectionStream
Поля:
  WebReadStream innerStream
  bool nextReadCalled
  bool bufferedEntireContent
  WebCompletionSource pendingRead
  object locker
  int nestedRead
  bool read_eof
  WebRequestStream <RequestStream>k__BackingField
  WebHeaderCollection <Headers>k__BackingField
  HttpStatusCode <StatusCode>k__BackingField
  string <StatusDescription>k__BackingField
  Version <Version>k__BackingField
  bool <KeepAlive>k__BackingField
  string ME
  bool <ChunkedRead>k__BackingField
Свойства:
  WebRequestStream RequestStream
  WebHeaderCollection Headers
  HttpStatusCode StatusCode
  string StatusDescription
  Version Version
  bool KeepAlive
  bool CanRead
  bool CanWrite
  bool ChunkedRead
  bool ExpectContent
Методы:
  WebRequestStream get_RequestStream()
  WebHeaderCollection get_Headers()
  void set_Headers(WebHeaderCollection value)
  HttpStatusCode get_StatusCode()
  void set_StatusCode(HttpStatusCode value)
  string get_StatusDescription()
  void set_StatusDescription(string value)
  Version get_Version()
  void set_Version(Version value)
  bool get_KeepAlive()
  void set_KeepAlive(bool value)
  void .ctor(WebRequestStream request)
  bool get_CanRead()
  bool get_CanWrite()
  bool get_ChunkedRead()
  void set_ChunkedRead(bool value)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  Task`1<int> ProcessRead(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  bool TryReadFromBufferedContent(Byte[] buffer, int offset, int count, Int32& result)
  bool CheckAuthHeader(string headerName)
  bool get_ExpectContent()
  void Initialize(BufferOffsetSize buffer)
  Task`1<Byte[]> ReadAllAsyncInner(CancellationToken cancellationToken)
  Task ReadAllAsync(bool resending, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  void Close_internal(Boolean& disposed)
  WebException GetReadException(WebExceptionStatus status, Exception error, string where)
  Task InitReadAsync(CancellationToken cancellationToken)
  bool GetResponse(BufferOffsetSize buffer, Int32& pos, ReadState& state)
--------------------------------------------------
Класс: System.Net.NetworkInformation.DuplicateAddressDetectionState
Наследуется от: Enum
Поля:
  int value__
  DuplicateAddressDetectionState Invalid
  DuplicateAddressDetectionState Tentative
  DuplicateAddressDetectionState Duplicate
  DuplicateAddressDetectionState Deprecated
  DuplicateAddressDetectionState Preferred
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.GatewayIPAddressInformation
Наследуется от: object
Поля:
Свойства:
  IPAddress Address
Методы:
  IPAddress get_Address()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
Наследуется от: object
Поля:
  Collection`1<GatewayIPAddressInformation> addresses
Свойства:
  int Count
  bool IsReadOnly
  GatewayIPAddressInformation Item
Методы:
  void .ctor()
  void CopyTo(GatewayIPAddressInformation[] array, int offset)
  int get_Count()
  bool get_IsReadOnly()
  GatewayIPAddressInformation get_Item(int index)
  void Add(GatewayIPAddressInformation address)
  void InternalAdd(GatewayIPAddressInformation address)
  bool Contains(GatewayIPAddressInformation address)
  IEnumerator`1<GatewayIPAddressInformation> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Remove(GatewayIPAddressInformation address)
  void Clear()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPAddressCollection
Наследуется от: object
Поля:
  Collection`1<IPAddress> addresses
Свойства:
  int Count
  bool IsReadOnly
  IPAddress Item
Методы:
  void .ctor()
  void CopyTo(IPAddress[] array, int offset)
  int get_Count()
  bool get_IsReadOnly()
  void Add(IPAddress address)
  void InternalAdd(IPAddress address)
  bool Contains(IPAddress address)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<IPAddress> GetEnumerator()
  IPAddress get_Item(int index)
  bool Remove(IPAddress address)
  void Clear()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPAddressInformation
Наследуется от: object
Поля:
Свойства:
  IPAddress Address
  bool IsDnsEligible
  bool IsTransient
Методы:
  IPAddress get_Address()
  bool get_IsDnsEligible()
  bool get_IsTransient()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPAddressInformationCollection
Наследуется от: object
Поля:
  Collection`1<IPAddressInformation> addresses
Свойства:
  int Count
  bool IsReadOnly
  IPAddressInformation Item
Методы:
  void .ctor()
  void CopyTo(IPAddressInformation[] array, int offset)
  int get_Count()
  bool get_IsReadOnly()
  void Add(IPAddressInformation address)
  void InternalAdd(IPAddressInformation address)
  bool Contains(IPAddressInformation address)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<IPAddressInformation> GetEnumerator()
  IPAddressInformation get_Item(int index)
  bool Remove(IPAddressInformation address)
  void Clear()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPGlobalProperties
Наследуется от: object
Поля:
Свойства:
  string DhcpScopeName
  string DomainName
  string HostName
  bool IsWinsProxy
  NetBiosNodeType NodeType
Методы:
  IPGlobalProperties GetIPGlobalProperties()
  IPGlobalProperties InternalGetIPGlobalProperties()
  IPEndPoint[] GetActiveUdpListeners()
  IPEndPoint[] GetActiveTcpListeners()
  TcpConnectionInformation[] GetActiveTcpConnections()
  string get_DhcpScopeName()
  string get_DomainName()
  string get_HostName()
  bool get_IsWinsProxy()
  NetBiosNodeType get_NodeType()
  TcpStatistics GetTcpIPv4Statistics()
  TcpStatistics GetTcpIPv6Statistics()
  UdpStatistics GetUdpIPv4Statistics()
  UdpStatistics GetUdpIPv6Statistics()
  IcmpV4Statistics GetIcmpV4Statistics()
  IcmpV6Statistics GetIcmpV6Statistics()
  IPGlobalStatistics GetIPv4GlobalStatistics()
  IPGlobalStatistics GetIPv6GlobalStatistics()
  UnicastIPAddressInformationCollection GetUnicastAddresses()
  IAsyncResult BeginGetUnicastAddresses(AsyncCallback callback, object state)
  UnicastIPAddressInformationCollection EndGetUnicastAddresses(IAsyncResult asyncResult)
  Task`1<UnicastIPAddressInformationCollection> GetUnicastAddressesAsync()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPGlobalStatistics
Наследуется от: object
Поля:
Свойства:
  int DefaultTtl
  bool ForwardingEnabled
  int NumberOfInterfaces
  int NumberOfIPAddresses
  long OutputPacketRequests
  long OutputPacketRoutingDiscards
  long OutputPacketsDiscarded
  long OutputPacketsWithNoRoute
  long PacketFragmentFailures
  long PacketReassembliesRequired
  long PacketReassemblyFailures
  long PacketReassemblyTimeout
  long PacketsFragmented
  long PacketsReassembled
  long ReceivedPackets
  long ReceivedPacketsDelivered
  long ReceivedPacketsDiscarded
  long ReceivedPacketsForwarded
  long ReceivedPacketsWithAddressErrors
  long ReceivedPacketsWithHeadersErrors
  long ReceivedPacketsWithUnknownProtocol
  int NumberOfRoutes
Методы:
  int get_DefaultTtl()
  bool get_ForwardingEnabled()
  int get_NumberOfInterfaces()
  int get_NumberOfIPAddresses()
  long get_OutputPacketRequests()
  long get_OutputPacketRoutingDiscards()
  long get_OutputPacketsDiscarded()
  long get_OutputPacketsWithNoRoute()
  long get_PacketFragmentFailures()
  long get_PacketReassembliesRequired()
  long get_PacketReassemblyFailures()
  long get_PacketReassemblyTimeout()
  long get_PacketsFragmented()
  long get_PacketsReassembled()
  long get_ReceivedPackets()
  long get_ReceivedPacketsDelivered()
  long get_ReceivedPacketsDiscarded()
  long get_ReceivedPacketsForwarded()
  long get_ReceivedPacketsWithAddressErrors()
  long get_ReceivedPacketsWithHeadersErrors()
  long get_ReceivedPacketsWithUnknownProtocol()
  int get_NumberOfRoutes()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPInterfaceProperties
Наследуется от: object
Поля:
Свойства:
  bool IsDnsEnabled
  string DnsSuffix
  bool IsDynamicDnsEnabled
  UnicastIPAddressInformationCollection UnicastAddresses
  MulticastIPAddressInformationCollection MulticastAddresses
  IPAddressInformationCollection AnycastAddresses
  IPAddressCollection DnsAddresses
  GatewayIPAddressInformationCollection GatewayAddresses
  IPAddressCollection DhcpServerAddresses
  IPAddressCollection WinsServersAddresses
Методы:
  bool get_IsDnsEnabled()
  string get_DnsSuffix()
  bool get_IsDynamicDnsEnabled()
  UnicastIPAddressInformationCollection get_UnicastAddresses()
  MulticastIPAddressInformationCollection get_MulticastAddresses()
  IPAddressInformationCollection get_AnycastAddresses()
  IPAddressCollection get_DnsAddresses()
  GatewayIPAddressInformationCollection get_GatewayAddresses()
  IPAddressCollection get_DhcpServerAddresses()
  IPAddressCollection get_WinsServersAddresses()
  IPv4InterfaceProperties GetIPv4Properties()
  IPv6InterfaceProperties GetIPv6Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPInterfaceStatistics
Наследуется от: object
Поля:
Свойства:
  long BytesReceived
  long BytesSent
  long IncomingPacketsDiscarded
  long IncomingPacketsWithErrors
  long IncomingUnknownProtocolPackets
  long NonUnicastPacketsReceived
  long NonUnicastPacketsSent
  long OutgoingPacketsDiscarded
  long OutgoingPacketsWithErrors
  long OutputQueueLength
  long UnicastPacketsReceived
  long UnicastPacketsSent
Методы:
  long get_BytesReceived()
  long get_BytesSent()
  long get_IncomingPacketsDiscarded()
  long get_IncomingPacketsWithErrors()
  long get_IncomingUnknownProtocolPackets()
  long get_NonUnicastPacketsReceived()
  long get_NonUnicastPacketsSent()
  long get_OutgoingPacketsDiscarded()
  long get_OutgoingPacketsWithErrors()
  long get_OutputQueueLength()
  long get_UnicastPacketsReceived()
  long get_UnicastPacketsSent()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPv4InterfaceStatistics
Наследуется от: object
Поля:
Свойства:
  long BytesReceived
  long BytesSent
  long IncomingPacketsDiscarded
  long IncomingPacketsWithErrors
  long IncomingUnknownProtocolPackets
  long NonUnicastPacketsReceived
  long NonUnicastPacketsSent
  long OutgoingPacketsDiscarded
  long OutgoingPacketsWithErrors
  long OutputQueueLength
  long UnicastPacketsReceived
  long UnicastPacketsSent
Методы:
  long get_BytesReceived()
  long get_BytesSent()
  long get_IncomingPacketsDiscarded()
  long get_IncomingPacketsWithErrors()
  long get_IncomingUnknownProtocolPackets()
  long get_NonUnicastPacketsReceived()
  long get_NonUnicastPacketsSent()
  long get_OutgoingPacketsDiscarded()
  long get_OutgoingPacketsWithErrors()
  long get_OutputQueueLength()
  long get_UnicastPacketsReceived()
  long get_UnicastPacketsSent()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IcmpV4Type
Наследуется от: Enum
Поля:
  int value__
  IcmpV4Type ICMP4_ECHO_REPLY
  IcmpV4Type ICMP4_DST_UNREACH
  IcmpV4Type ICMP4_SOURCE_QUENCH
  IcmpV4Type ICMP4_TIME_EXCEEDED
  IcmpV4Type ICMP4_PARAM_PROB
  IcmpV4Type ICMP4_REDIRECT
  IcmpV4Type ICMP4_ECHO_REQUEST
  IcmpV4Type ICMP4_ROUTER_ADVERT
  IcmpV4Type ICMP4_ROUTER_SOLICIT
  IcmpV4Type ICMP4_TIMESTAMP_REQUEST
  IcmpV4Type ICMP4_TIMESTAMP_REPLY
  IcmpV4Type ICMP4_MASK_REQUEST
  IcmpV4Type ICMP4_MASK_REPLY
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.IcmpV4Code
Наследуется от: Enum
Поля:
  int value__
  IcmpV4Code ICMP4_UNREACH_NET
  IcmpV4Code ICMP4_UNREACH_HOST
  IcmpV4Code ICMP4_UNREACH_PROTOCOL
  IcmpV4Code ICMP4_UNREACH_PORT
  IcmpV4Code ICMP4_UNREACH_FRAG_NEEDED
  IcmpV4Code ICMP4_UNREACH_SOURCEROUTE_FAILED
  IcmpV4Code ICMP4_UNREACH_NET_UNKNOWN
  IcmpV4Code ICMP4_UNREACH_HOST_UNKNOWN
  IcmpV4Code ICMP4_UNREACH_ISOLATED
  IcmpV4Code ICMP4_UNREACH_NET_ADMIN
  IcmpV4Code ICMP4_UNREACH_HOST_ADMIN
  IcmpV4Code ICMP4_UNREACH_NET_TOS
  IcmpV4Code ICMP4_UNREACH_HOST_TOS
  IcmpV4Code ICMP4_UNREACH_ADMIN
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPStatus
Наследуется от: Enum
Поля:
  int value__
  IPStatus Success
  IPStatus DestinationNetworkUnreachable
  IPStatus DestinationHostUnreachable
  IPStatus DestinationProtocolUnreachable
  IPStatus DestinationPortUnreachable
  IPStatus DestinationProhibited
  IPStatus NoResources
  IPStatus BadOption
  IPStatus HardwareError
  IPStatus PacketTooBig
  IPStatus TimedOut
  IPStatus BadRoute
  IPStatus TtlExpired
  IPStatus TtlReassemblyTimeExceeded
  IPStatus ParameterProblem
  IPStatus SourceQuench
  IPStatus BadDestination
  IPStatus DestinationUnreachable
  IPStatus TimeExceeded
  IPStatus BadHeader
  IPStatus UnrecognizedNextHeader
  IPStatus IcmpError
  IPStatus DestinationScopeMismatch
  IPStatus Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPv4InterfaceProperties
Наследуется от: object
Поля:
Свойства:
  bool UsesWins
  bool IsDhcpEnabled
  bool IsAutomaticPrivateAddressingActive
  bool IsAutomaticPrivateAddressingEnabled
  int Index
  bool IsForwardingEnabled
  int Mtu
Методы:
  bool get_UsesWins()
  bool get_IsDhcpEnabled()
  bool get_IsAutomaticPrivateAddressingActive()
  bool get_IsAutomaticPrivateAddressingEnabled()
  int get_Index()
  bool get_IsForwardingEnabled()
  int get_Mtu()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPv6InterfaceProperties
Наследуется от: object
Поля:
Свойства:
  int Index
  int Mtu
Методы:
  int get_Index()
  int get_Mtu()
  long GetScopeId(ScopeLevel scopeLevel)
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IcmpV4Statistics
Наследуется от: object
Поля:
Свойства:
  long AddressMaskRepliesReceived
  long AddressMaskRepliesSent
  long AddressMaskRequestsReceived
  long AddressMaskRequestsSent
  long DestinationUnreachableMessagesReceived
  long DestinationUnreachableMessagesSent
  long EchoRepliesReceived
  long EchoRepliesSent
  long EchoRequestsReceived
  long EchoRequestsSent
  long ErrorsReceived
  long ErrorsSent
  long MessagesReceived
  long MessagesSent
  long ParameterProblemsReceived
  long ParameterProblemsSent
  long RedirectsReceived
  long RedirectsSent
  long SourceQuenchesReceived
  long SourceQuenchesSent
  long TimeExceededMessagesReceived
  long TimeExceededMessagesSent
  long TimestampRepliesReceived
  long TimestampRepliesSent
  long TimestampRequestsReceived
  long TimestampRequestsSent
Методы:
  long get_AddressMaskRepliesReceived()
  long get_AddressMaskRepliesSent()
  long get_AddressMaskRequestsReceived()
  long get_AddressMaskRequestsSent()
  long get_DestinationUnreachableMessagesReceived()
  long get_DestinationUnreachableMessagesSent()
  long get_EchoRepliesReceived()
  long get_EchoRepliesSent()
  long get_EchoRequestsReceived()
  long get_EchoRequestsSent()
  long get_ErrorsReceived()
  long get_ErrorsSent()
  long get_MessagesReceived()
  long get_MessagesSent()
  long get_ParameterProblemsReceived()
  long get_ParameterProblemsSent()
  long get_RedirectsReceived()
  long get_RedirectsSent()
  long get_SourceQuenchesReceived()
  long get_SourceQuenchesSent()
  long get_TimeExceededMessagesReceived()
  long get_TimeExceededMessagesSent()
  long get_TimestampRepliesReceived()
  long get_TimestampRepliesSent()
  long get_TimestampRequestsReceived()
  long get_TimestampRequestsSent()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.IcmpV6Statistics
Наследуется от: object
Поля:
Свойства:
  long DestinationUnreachableMessagesReceived
  long DestinationUnreachableMessagesSent
  long EchoRepliesReceived
  long EchoRepliesSent
  long EchoRequestsReceived
  long EchoRequestsSent
  long ErrorsReceived
  long ErrorsSent
  long MembershipQueriesReceived
  long MembershipQueriesSent
  long MembershipReductionsReceived
  long MembershipReductionsSent
  long MembershipReportsReceived
  long MembershipReportsSent
  long MessagesReceived
  long MessagesSent
  long NeighborAdvertisementsReceived
  long NeighborAdvertisementsSent
  long NeighborSolicitsReceived
  long NeighborSolicitsSent
  long PacketTooBigMessagesReceived
  long PacketTooBigMessagesSent
  long ParameterProblemsReceived
  long ParameterProblemsSent
  long RedirectsReceived
  long RedirectsSent
  long RouterAdvertisementsReceived
  long RouterAdvertisementsSent
  long RouterSolicitsReceived
  long RouterSolicitsSent
  long TimeExceededMessagesReceived
  long TimeExceededMessagesSent
Методы:
  long get_DestinationUnreachableMessagesReceived()
  long get_DestinationUnreachableMessagesSent()
  long get_EchoRepliesReceived()
  long get_EchoRepliesSent()
  long get_EchoRequestsReceived()
  long get_EchoRequestsSent()
  long get_ErrorsReceived()
  long get_ErrorsSent()
  long get_MembershipQueriesReceived()
  long get_MembershipQueriesSent()
  long get_MembershipReductionsReceived()
  long get_MembershipReductionsSent()
  long get_MembershipReportsReceived()
  long get_MembershipReportsSent()
  long get_MessagesReceived()
  long get_MessagesSent()
  long get_NeighborAdvertisementsReceived()
  long get_NeighborAdvertisementsSent()
  long get_NeighborSolicitsReceived()
  long get_NeighborSolicitsSent()
  long get_PacketTooBigMessagesReceived()
  long get_PacketTooBigMessagesSent()
  long get_ParameterProblemsReceived()
  long get_ParameterProblemsSent()
  long get_RedirectsReceived()
  long get_RedirectsSent()
  long get_RouterAdvertisementsReceived()
  long get_RouterAdvertisementsSent()
  long get_RouterSolicitsReceived()
  long get_RouterSolicitsSent()
  long get_TimeExceededMessagesReceived()
  long get_TimeExceededMessagesSent()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.MulticastIPAddressInformation
Наследуется от: IPAddressInformation
Поля:
Свойства:
  long AddressPreferredLifetime
  long AddressValidLifetime
  long DhcpLeaseLifetime
  DuplicateAddressDetectionState DuplicateAddressDetectionState
  PrefixOrigin PrefixOrigin
  SuffixOrigin SuffixOrigin
Методы:
  long get_AddressPreferredLifetime()
  long get_AddressValidLifetime()
  long get_DhcpLeaseLifetime()
  DuplicateAddressDetectionState get_DuplicateAddressDetectionState()
  PrefixOrigin get_PrefixOrigin()
  SuffixOrigin get_SuffixOrigin()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
Наследуется от: object
Поля:
  Collection`1<MulticastIPAddressInformation> addresses
Свойства:
  int Count
  bool IsReadOnly
  MulticastIPAddressInformation Item
Методы:
  void .ctor()
  void CopyTo(MulticastIPAddressInformation[] array, int offset)
  int get_Count()
  bool get_IsReadOnly()
  void Add(MulticastIPAddressInformation address)
  void InternalAdd(MulticastIPAddressInformation address)
  bool Contains(MulticastIPAddressInformation address)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<MulticastIPAddressInformation> GetEnumerator()
  MulticastIPAddressInformation get_Item(int index)
  bool Remove(MulticastIPAddressInformation address)
  void Clear()
--------------------------------------------------
Класс: System.Net.NetworkInformation.StartIPOptions
Наследуется от: Enum
Поля:
  int value__
  StartIPOptions Both
  StartIPOptions None
  StartIPOptions StartIPv4
  StartIPOptions StartIPv6
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkAvailabilityEventArgs
Наследуется от: EventArgs
Поля:
  bool isAvailable
Свойства:
  bool IsAvailable
Методы:
  void .ctor(bool isAvailable)
  bool get_IsAvailable()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkAddressChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, EventArgs e)
  IAsyncResult BeginInvoke(object sender, EventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, NetworkAvailabilityEventArgs e)
  IAsyncResult BeginInvoke(object sender, NetworkAvailabilityEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInformationException
Наследуется от: Win32Exception
Поля:
Свойства:
  int ErrorCode
Методы:
  void .ctor()
  void .ctor(int errorCode)
  void .ctor(SocketError socketError)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  int get_ErrorCode()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInformationAccess
Наследуется от: Enum
Поля:
  int value__
  NetworkInformationAccess None
  NetworkInformationAccess Read
  NetworkInformationAccess Ping
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInformationPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string strAccess
  string access
Свойства:
  string Access
Методы:
  void .ctor(SecurityAction action)
  string get_Access()
  void set_Access(string value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInformationPermission
Наследуется от: CodeAccessPermission
Поля:
  NetworkInformationAccess access
  bool unrestricted
Свойства:
  NetworkInformationAccess Access
Методы:
  void .ctor(PermissionState state)
  void .ctor(bool unrestricted)
  void .ctor(NetworkInformationAccess access)
  NetworkInformationAccess get_Access()
  void AddPermission(NetworkInformationAccess access)
  bool IsUnrestricted()
  IPermission Copy()
  IPermission Union(IPermission target)
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  void FromXml(SecurityElement securityElement)
  SecurityElement ToXml()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInterface
Наследуется от: object
Поля:
Свойства:
  int LoopbackInterfaceIndex
  int IPv6LoopbackInterfaceIndex
  string Id
  string Name
  string Description
  OperationalStatus OperationalStatus
  long Speed
  bool IsReceiveOnly
  bool SupportsMulticast
  NetworkInterfaceType NetworkInterfaceType
Методы:
  NetworkInterface[] GetAllNetworkInterfaces()
  bool GetIsNetworkAvailable()
  int get_LoopbackInterfaceIndex()
  int get_IPv6LoopbackInterfaceIndex()
  string get_Id()
  string get_Name()
  string get_Description()
  IPInterfaceProperties GetIPProperties()
  IPv4InterfaceStatistics GetIPv4Statistics()
  IPInterfaceStatistics GetIPStatistics()
  OperationalStatus get_OperationalStatus()
  long get_Speed()
  bool get_IsReceiveOnly()
  bool get_SupportsMulticast()
  PhysicalAddress GetPhysicalAddress()
  NetworkInterfaceType get_NetworkInterfaceType()
  bool Supports(NetworkInterfaceComponent networkInterfaceComponent)
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInterfaceComponent
Наследуется от: Enum
Поля:
  int value__
  NetworkInterfaceComponent IPv4
  NetworkInterfaceComponent IPv6
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.OperationalStatus
Наследуется от: Enum
Поля:
  int value__
  OperationalStatus Up
  OperationalStatus Down
  OperationalStatus Testing
  OperationalStatus Unknown
  OperationalStatus Dormant
  OperationalStatus NotPresent
  OperationalStatus LowerLayerDown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.PhysicalAddress
Наследуется от: object
Поля:
  Byte[] address
  bool changed
  int hash
  PhysicalAddress None
Свойства:
Методы:
  void .ctor(Byte[] address)
  int GetHashCode()
  bool Equals(object comparand)
  string ToString()
  Byte[] GetAddressBytes()
  PhysicalAddress Parse(string address)
  void .cctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.PingOptions
Наследуется от: object
Поля:
  int DontFragmentFlag
  int ttl
  bool dontFragment
Свойства:
  int Ttl
  bool DontFragment
Методы:
  void .ctor(int ttl, bool dontFragment)
  void .ctor()
  int get_Ttl()
  void set_Ttl(int value)
  bool get_DontFragment()
  void set_DontFragment(bool value)
--------------------------------------------------
Класс: System.Net.NetworkInformation.PingReply
Наследуется от: object
Поля:
  IPAddress address
  PingOptions options
  IPStatus ipStatus
  long rtt
  Byte[] buffer
Свойства:
  IPStatus Status
  IPAddress Address
  long RoundtripTime
  PingOptions Options
  Byte[] Buffer
Методы:
  void .ctor()
  void .ctor(IPStatus ipStatus)
  void .ctor(Byte[] data, int dataLength, IPAddress address, int time)
  void .ctor(IPAddress address, Byte[] buffer, PingOptions options, long roundtripTime, IPStatus status)
  IPStatus GetIPStatus(IcmpV4Type type, IcmpV4Code code)
  IPStatus get_Status()
  IPAddress get_Address()
  long get_RoundtripTime()
  PingOptions get_Options()
  Byte[] get_Buffer()
--------------------------------------------------
Класс: System.Net.NetworkInformation.PrefixOrigin
Наследуется от: Enum
Поля:
  int value__
  PrefixOrigin Other
  PrefixOrigin Manual
  PrefixOrigin WellKnown
  PrefixOrigin Dhcp
  PrefixOrigin RouterAdvertisement
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.ScopeLevel
Наследуется от: Enum
Поля:
  int value__
  ScopeLevel None
  ScopeLevel Interface
  ScopeLevel Link
  ScopeLevel Subnet
  ScopeLevel Admin
  ScopeLevel Site
  ScopeLevel Organization
  ScopeLevel Global
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.SuffixOrigin
Наследуется от: Enum
Поля:
  int value__
  SuffixOrigin Other
  SuffixOrigin Manual
  SuffixOrigin WellKnown
  SuffixOrigin OriginDhcp
  SuffixOrigin LinkLayerAddress
  SuffixOrigin Random
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.SystemGatewayIPAddressInformation
Наследуется от: GatewayIPAddressInformation
Поля:
  IPAddress address
Свойства:
  IPAddress Address
Методы:
  void .ctor(IPAddress address)
  IPAddress get_Address()
  GatewayIPAddressInformationCollection ToGatewayIpAddressInformationCollection(IPAddressCollection addresses)
--------------------------------------------------
Класс: System.Net.NetworkInformation.SystemIPAddressInformation
Наследуется от: IPAddressInformation
Поля:
  IPAddress address
  bool transient
  bool dnsEligible
Свойства:
  IPAddress Address
  bool IsTransient
  bool IsDnsEligible
Методы:
  void .ctor(IPAddress address, bool isDnsEligible, bool isTransient)
  IPAddress get_Address()
  bool get_IsTransient()
  bool get_IsDnsEligible()
--------------------------------------------------
Класс: System.Net.NetworkInformation.SystemMulticastIPAddressInformation
Наследуется от: MulticastIPAddressInformation
Поля:
  SystemIPAddressInformation innerInfo
Свойства:
  IPAddress Address
  bool IsTransient
  bool IsDnsEligible
  PrefixOrigin PrefixOrigin
  SuffixOrigin SuffixOrigin
  DuplicateAddressDetectionState DuplicateAddressDetectionState
  long AddressValidLifetime
  long AddressPreferredLifetime
  long DhcpLeaseLifetime
Методы:
  void .ctor()
  void .ctor(SystemIPAddressInformation addressInfo)
  IPAddress get_Address()
  bool get_IsTransient()
  bool get_IsDnsEligible()
  PrefixOrigin get_PrefixOrigin()
  SuffixOrigin get_SuffixOrigin()
  DuplicateAddressDetectionState get_DuplicateAddressDetectionState()
  long get_AddressValidLifetime()
  long get_AddressPreferredLifetime()
  long get_DhcpLeaseLifetime()
  MulticastIPAddressInformationCollection ToMulticastIpAddressInformationCollection(IPAddressInformationCollection addresses)
--------------------------------------------------
Класс: System.Net.NetworkInformation.SystemTcpConnectionInformation
Наследуется от: TcpConnectionInformation
Поля:
  IPEndPoint localEndPoint
  IPEndPoint remoteEndPoint
  TcpState state
Свойства:
  TcpState State
  IPEndPoint LocalEndPoint
  IPEndPoint RemoteEndPoint
Методы:
  void .ctor(IPEndPoint local, IPEndPoint remote, TcpState state)
  TcpState get_State()
  IPEndPoint get_LocalEndPoint()
  IPEndPoint get_RemoteEndPoint()
--------------------------------------------------
Класс: System.Net.NetworkInformation.TcpConnectionInformation
Наследуется от: object
Поля:
Свойства:
  IPEndPoint LocalEndPoint
  IPEndPoint RemoteEndPoint
  TcpState State
Методы:
  IPEndPoint get_LocalEndPoint()
  IPEndPoint get_RemoteEndPoint()
  TcpState get_State()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.TcpState
Наследуется от: Enum
Поля:
  int value__
  TcpState Unknown
  TcpState Closed
  TcpState Listen
  TcpState SynSent
  TcpState SynReceived
  TcpState Established
  TcpState FinWait1
  TcpState FinWait2
  TcpState CloseWait
  TcpState Closing
  TcpState LastAck
  TcpState TimeWait
  TcpState DeleteTcb
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.TcpStatistics
Наследуется от: object
Поля:
Свойства:
  long ConnectionsAccepted
  long ConnectionsInitiated
  long CumulativeConnections
  long CurrentConnections
  long ErrorsReceived
  long FailedConnectionAttempts
  long MaximumConnections
  long MaximumTransmissionTimeout
  long MinimumTransmissionTimeout
  long ResetConnections
  long SegmentsReceived
  long SegmentsResent
  long SegmentsSent
  long ResetsSent
Методы:
  long get_ConnectionsAccepted()
  long get_ConnectionsInitiated()
  long get_CumulativeConnections()
  long get_CurrentConnections()
  long get_ErrorsReceived()
  long get_FailedConnectionAttempts()
  long get_MaximumConnections()
  long get_MaximumTransmissionTimeout()
  long get_MinimumTransmissionTimeout()
  long get_ResetConnections()
  long get_SegmentsReceived()
  long get_SegmentsResent()
  long get_SegmentsSent()
  long get_ResetsSent()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.UdpStatistics
Наследуется от: object
Поля:
Свойства:
  long DatagramsReceived
  long DatagramsSent
  long IncomingDatagramsDiscarded
  long IncomingDatagramsWithErrors
  int UdpListeners
Методы:
  long get_DatagramsReceived()
  long get_DatagramsSent()
  long get_IncomingDatagramsDiscarded()
  long get_IncomingDatagramsWithErrors()
  int get_UdpListeners()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.UnicastIPAddressInformation
Наследуется от: IPAddressInformation
Поля:
Свойства:
  long AddressPreferredLifetime
  long AddressValidLifetime
  long DhcpLeaseLifetime
  DuplicateAddressDetectionState DuplicateAddressDetectionState
  PrefixOrigin PrefixOrigin
  SuffixOrigin SuffixOrigin
  IPAddress IPv4Mask
  int PrefixLength
Методы:
  long get_AddressPreferredLifetime()
  long get_AddressValidLifetime()
  long get_DhcpLeaseLifetime()
  DuplicateAddressDetectionState get_DuplicateAddressDetectionState()
  PrefixOrigin get_PrefixOrigin()
  SuffixOrigin get_SuffixOrigin()
  IPAddress get_IPv4Mask()
  int get_PrefixLength()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
Наследуется от: object
Поля:
  Collection`1<UnicastIPAddressInformation> addresses
Свойства:
  int Count
  bool IsReadOnly
  UnicastIPAddressInformation Item
Методы:
  void .ctor()
  void CopyTo(UnicastIPAddressInformation[] array, int offset)
  int get_Count()
  bool get_IsReadOnly()
  void Add(UnicastIPAddressInformation address)
  void InternalAdd(UnicastIPAddressInformation address)
  bool Contains(UnicastIPAddressInformation address)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<UnicastIPAddressInformation> GetEnumerator()
  UnicastIPAddressInformation get_Item(int index)
  bool Remove(UnicastIPAddressInformation address)
  void Clear()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInterfaceType
Наследуется от: Enum
Поля:
  int value__
  NetworkInterfaceType Unknown
  NetworkInterfaceType Ethernet
  NetworkInterfaceType TokenRing
  NetworkInterfaceType Fddi
  NetworkInterfaceType BasicIsdn
  NetworkInterfaceType PrimaryIsdn
  NetworkInterfaceType Ppp
  NetworkInterfaceType Loopback
  NetworkInterfaceType Ethernet3Megabit
  NetworkInterfaceType Slip
  NetworkInterfaceType Atm
  NetworkInterfaceType GenericModem
  NetworkInterfaceType FastEthernetT
  NetworkInterfaceType Isdn
  NetworkInterfaceType FastEthernetFx
  NetworkInterfaceType Wireless80211
  NetworkInterfaceType AsymmetricDsl
  NetworkInterfaceType RateAdaptDsl
  NetworkInterfaceType SymmetricDsl
  NetworkInterfaceType VeryHighSpeedDsl
  NetworkInterfaceType IPOverAtm
  NetworkInterfaceType GigabitEthernet
  NetworkInterfaceType Tunnel
  NetworkInterfaceType MultiRateSymmetricDsl
  NetworkInterfaceType HighPerformanceSerialBus
  NetworkInterfaceType Wman
  NetworkInterfaceType Wwanpp
  NetworkInterfaceType Wwanpp2
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetBiosNodeType
Наследуется от: Enum
Поля:
  int value__
  NetBiosNodeType Unknown
  NetBiosNodeType Broadcast
  NetBiosNodeType Peer2Peer
  NetBiosNodeType Mixed
  NetBiosNodeType Hybrid
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.PingException
Наследуется от: InvalidOperationException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: System.Net.NetworkInformation.IPGlobalPropertiesFactoryPal
Наследуется от: object
Поля:
Свойства:
Методы:
  IPGlobalProperties Create()
--------------------------------------------------
Класс: System.Net.NetworkInformation.INetworkChange
Поля:
Свойства:
  bool HasRegisteredEvents
Методы:
  void add_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void remove_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void add_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void remove_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  bool get_HasRegisteredEvents()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkChange
Наследуется от: object
Поля:
  INetworkChange networkChange
Свойства:
  bool IsWindows
Методы:
  void add_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void remove_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void add_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void remove_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void MaybeCreate()
  bool get_IsWindows()
  void MaybeDispose()
  void .ctor()
  void RegisterNetworkChange(NetworkChange nc)
--------------------------------------------------
Класс: System.Net.NetworkInformation.MacNetworkChange
Наследуется от: object
Поля:
  string DL_LIB
  string CORE_SERVICES_LIB
  string CORE_FOUNDATION_LIB
  IntPtr handle
  IntPtr runLoopMode
  SCNetworkReachabilityCallback callback
  bool scheduledWithRunLoop
  NetworkReachabilityFlags flags
  NetworkAddressChangedEventHandler networkAddressChanged
  NetworkAvailabilityChangedEventHandler networkAvailabilityChanged
Свойства:
  bool IsAvailable
  bool HasRegisteredEvents
Методы:
  IntPtr dlopen(string path, int mode)
  IntPtr dlsym(IntPtr handle, string symbol)
  int dlclose(IntPtr handle)
  void CFRelease(IntPtr handle)
  IntPtr CFRunLoopGetMain()
  IntPtr SCNetworkReachabilityCreateWithAddress(IntPtr allocator, sockaddr_in& sockaddr)
  bool SCNetworkReachabilityGetFlags(IntPtr reachability, NetworkReachabilityFlags& flags)
  bool SCNetworkReachabilitySetCallback(IntPtr reachability, SCNetworkReachabilityCallback callback, SCNetworkReachabilityContext& context)
  bool SCNetworkReachabilityScheduleWithRunLoop(IntPtr reachability, IntPtr runLoop, IntPtr runLoopMode)
  bool SCNetworkReachabilityUnscheduleFromRunLoop(IntPtr reachability, IntPtr runLoop, IntPtr runLoopMode)
  void add_networkAddressChanged(NetworkAddressChangedEventHandler value)
  void remove_networkAddressChanged(NetworkAddressChangedEventHandler value)
  void add_networkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void remove_networkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void add_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void remove_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void add_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void remove_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  bool get_IsAvailable()
  bool get_HasRegisteredEvents()
  void .ctor()
  bool LoadRunLoopMode()
  void Dispose()
  void HandleCallback(IntPtr reachability, NetworkReachabilityFlags flags, IntPtr info)
--------------------------------------------------
Класс: System.Net.NetworkInformation.LinuxNetworkChange
Наследуется от: object
Поля:
  object _lock
  Socket nl_sock
  SocketAsyncEventArgs nl_args
  EventType pending_events
  Timer timer
  NetworkAddressChangedEventHandler AddressChanged
  NetworkAvailabilityChangedEventHandler AvailabilityChanged
Свойства:
  bool HasRegisteredEvents
Методы:
  void add_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void remove_NetworkAddressChanged(NetworkAddressChangedEventHandler value)
  void add_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  void remove_NetworkAvailabilityChanged(NetworkAvailabilityChangedEventHandler value)
  bool get_HasRegisteredEvents()
  void Dispose()
  bool EnsureSocket()
  void MaybeCloseSocket()
  bool GetAvailability()
  void OnAvailabilityChanged(object unused)
  void OnAddressChanged(object unused)
  void OnEventDue(object unused)
  void QueueEvent(EventType type)
  void OnDataAvailable(object sender, SocketAsyncEventArgs args)
  void Register(NetworkAddressChangedEventHandler d)
  void Register(NetworkAvailabilityChangedEventHandler d)
  void Unregister(NetworkAddressChangedEventHandler d)
  void Unregister(NetworkAvailabilityChangedEventHandler d)
  IntPtr CreateNLSocket()
  EventType ReadEvents(IntPtr sock, IntPtr buffer, int count, int size)
  IntPtr CloseNLSocket(IntPtr sock)
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.SystemNetworkInterface
Наследуется от: object
Поля:
  NetworkInterfaceFactory nif
Свойства:
  int InternalLoopbackInterfaceIndex
  int InternalIPv6LoopbackInterfaceIndex
Методы:
  NetworkInterface[] GetNetworkInterfaces()
  bool InternalGetIsNetworkAvailable()
  int get_InternalLoopbackInterfaceIndex()
  int get_InternalIPv6LoopbackInterfaceIndex()
  IPAddress GetNetMask(IPAddress address)
  void .cctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInterfaceFactory
Наследуется от: object
Поля:
Свойства:
Методы:
  NetworkInterface[] GetAllNetworkInterfaces()
  int GetLoopbackInterfaceIndex()
  IPAddress GetNetMask(IPAddress address)
  NetworkInterfaceFactory Create()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.NetworkInterfaceFactoryPal
Наследуется от: object
Поля:
Свойства:
Методы:
  NetworkInterfaceFactory Create()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Ping
Наследуется от: Component
Поля:
  int DefaultCount
  String[] PingBinPaths
  string PingBinPath
  bool canSendPrivileged
  int default_timeout
  ushort identifier
  UInt32 _LINUX_CAPABILITY_VERSION_1
  Byte[] default_buffer
  BackgroundWorker worker
  object user_async_state
  CancellationTokenSource cts
  PingCompletedEventHandler PingCompleted
Свойства:
Методы:
  void add_PingCompleted(PingCompletedEventHandler value)
  void remove_PingCompleted(PingCompletedEventHandler value)
  void .cctor()
  void .ctor()
  int capget(cap_user_header_t& header, cap_user_data_t& data)
  void CheckLinuxCapabilities()
  void System.IDisposable.Dispose()
  void OnPingCompleted(PingCompletedEventArgs e)
  PingReply Send(IPAddress address)
  PingReply Send(IPAddress address, int timeout)
  PingReply Send(IPAddress address, int timeout, Byte[] buffer)
  PingReply Send(string hostNameOrAddress)
  PingReply Send(string hostNameOrAddress, int timeout)
  PingReply Send(string hostNameOrAddress, int timeout, Byte[] buffer)
  PingReply Send(string hostNameOrAddress, int timeout, Byte[] buffer, PingOptions options)
  PingReply Send(IPAddress address, int timeout, Byte[] buffer, PingOptions options)
  PingReply SendPrivileged(IPAddress address, int timeout, Byte[] buffer, PingOptions options)
  PingReply SendUnprivileged(IPAddress address, int timeout, Byte[] buffer, PingOptions options)
  void SendAsync(IPAddress address, int timeout, Byte[] buffer, object userToken)
  void SendAsync(IPAddress address, int timeout, object userToken)
  void SendAsync(IPAddress address, object userToken)
  void SendAsync(string hostNameOrAddress, int timeout, Byte[] buffer, object userToken)
  void SendAsync(string hostNameOrAddress, int timeout, Byte[] buffer, PingOptions options, object userToken)
  void SendAsync(string hostNameOrAddress, int timeout, object userToken)
  void SendAsync(string hostNameOrAddress, object userToken)
  void SendAsync(IPAddress address, int timeout, Byte[] buffer, PingOptions options, object userToken)
  void SendAsyncCancel()
  string BuildPingArgs(IPAddress address, int timeout, PingOptions options)
  Task`1<PingReply> SendPingAsync(IPAddress address, int timeout, Byte[] buffer)
  Task`1<PingReply> SendPingAsync(IPAddress address, int timeout)
  Task`1<PingReply> SendPingAsync(IPAddress address)
  Task`1<PingReply> SendPingAsync(string hostNameOrAddress, int timeout, Byte[] buffer)
  Task`1<PingReply> SendPingAsync(string hostNameOrAddress, int timeout, Byte[] buffer, PingOptions options)
  Task`1<PingReply> SendPingAsync(string hostNameOrAddress, int timeout)
  Task`1<PingReply> SendPingAsync(string hostNameOrAddress)
  Task`1<PingReply> SendPingAsync(IPAddress address, int timeout, Byte[] buffer, PingOptions options)
--------------------------------------------------
Класс: System.Net.NetworkInformation.PingCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  PingReply reply
Свойства:
  PingReply Reply
Методы:
  void .ctor(Exception ex, bool cancelled, object userState, PingReply reply)
  PingReply get_Reply()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.PingCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, PingCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, PingCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPAddressCollection
Наследуется от: IPAddressCollection
Поля:
  Win32IPAddressCollection Empty
Свойства:
Методы:
  void .ctor()
  void .ctor(IntPtr[] heads)
  void .ctor(Win32_IP_ADDR_STRING[] al)
  Win32IPAddressCollection FromAnycast(IntPtr ptr)
  Win32IPAddressCollection FromDnsServer(IntPtr ptr)
  Win32IPAddressCollection FromSocketAddress(Win32_SOCKET_ADDRESS addr)
  Win32IPAddressCollection FromWinsServer(IntPtr ptr)
  void AddSubsequentlyString(IntPtr head)
  void .cctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPGlobalProperties
Наследуется от: IPGlobalProperties
Поля:
  int AF_INET
  int AF_INET6
Свойства:
  string DhcpScopeName
  string DomainName
  string HostName
  bool IsWinsProxy
  NetBiosNodeType NodeType
Методы:
  void FillTcpTable(List`1& tab4, List`1& tab6)
  bool IsListenerState(TcpState state)
  TcpConnectionInformation[] GetActiveTcpConnections()
  IPEndPoint[] GetActiveTcpListeners()
  IPEndPoint[] GetActiveUdpListeners()
  IcmpV4Statistics GetIcmpV4Statistics()
  IcmpV6Statistics GetIcmpV6Statistics()
  IPGlobalStatistics GetIPv4GlobalStatistics()
  IPGlobalStatistics GetIPv6GlobalStatistics()
  TcpStatistics GetTcpIPv4Statistics()
  TcpStatistics GetTcpIPv6Statistics()
  UdpStatistics GetUdpIPv4Statistics()
  UdpStatistics GetUdpIPv6Statistics()
  string get_DhcpScopeName()
  string get_DomainName()
  string get_HostName()
  bool get_IsWinsProxy()
  NetBiosNodeType get_NodeType()
  int GetTcpTable(Byte[] pTcpTable, Int32& pdwSize, bool bOrder)
  int GetTcp6Table(Byte[] TcpTable, Int32& SizePointer, bool Order)
  int GetUdpTable(Byte[] pUdpTable, Int32& pdwSize, bool bOrder)
  int GetUdp6Table(Byte[] Udp6Table, Int32& SizePointer, bool Order)
  int GetTcpStatisticsEx(Win32_MIB_TCPSTATS& pStats, int dwFamily)
  int GetUdpStatisticsEx(Win32_MIB_UDPSTATS& pStats, int dwFamily)
  int GetIcmpStatistics(Win32_MIBICMPINFO& pStats, int dwFamily)
  int GetIcmpStatisticsEx(Win32_MIB_ICMP_EX& pStats, int dwFamily)
  int GetIpStatisticsEx(Win32_MIB_IPSTATS& pStats, int dwFamily)
  ushort ntohs(ushort netshort)
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPGlobalPropertiesFactoryPal
Наследуется от: object
Поля:
Свойства:
Методы:
  IPGlobalProperties Create()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPGlobalStatistics
Наследуется от: IPGlobalStatistics
Поля:
  Win32_MIB_IPSTATS info
Свойства:
  int DefaultTtl
  bool ForwardingEnabled
  int NumberOfInterfaces
  int NumberOfIPAddresses
  int NumberOfRoutes
  long OutputPacketRequests
  long OutputPacketRoutingDiscards
  long OutputPacketsDiscarded
  long OutputPacketsWithNoRoute
  long PacketFragmentFailures
  long PacketReassembliesRequired
  long PacketReassemblyFailures
  long PacketReassemblyTimeout
  long PacketsFragmented
  long PacketsReassembled
  long ReceivedPackets
  long ReceivedPacketsDelivered
  long ReceivedPacketsDiscarded
  long ReceivedPacketsForwarded
  long ReceivedPacketsWithAddressErrors
  long ReceivedPacketsWithHeadersErrors
  long ReceivedPacketsWithUnknownProtocol
Методы:
  void .ctor(Win32_MIB_IPSTATS info)
  int get_DefaultTtl()
  bool get_ForwardingEnabled()
  int get_NumberOfInterfaces()
  int get_NumberOfIPAddresses()
  int get_NumberOfRoutes()
  long get_OutputPacketRequests()
  long get_OutputPacketRoutingDiscards()
  long get_OutputPacketsDiscarded()
  long get_OutputPacketsWithNoRoute()
  long get_PacketFragmentFailures()
  long get_PacketReassembliesRequired()
  long get_PacketReassemblyFailures()
  long get_PacketReassemblyTimeout()
  long get_PacketsFragmented()
  long get_PacketsReassembled()
  long get_ReceivedPackets()
  long get_ReceivedPacketsDelivered()
  long get_ReceivedPacketsDiscarded()
  long get_ReceivedPacketsForwarded()
  long get_ReceivedPacketsWithAddressErrors()
  long get_ReceivedPacketsWithHeadersErrors()
  long get_ReceivedPacketsWithUnknownProtocol()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIB_IPSTATS
Наследуется от: ValueType
Поля:
  int Forwarding
  int DefaultTTL
  UInt32 InReceives
  UInt32 InHdrErrors
  UInt32 InAddrErrors
  UInt32 ForwDatagrams
  UInt32 InUnknownProtos
  UInt32 InDiscards
  UInt32 InDelivers
  UInt32 OutRequests
  UInt32 RoutingDiscards
  UInt32 OutDiscards
  UInt32 OutNoRoutes
  UInt32 ReasmTimeout
  UInt32 ReasmReqds
  UInt32 ReasmOks
  UInt32 ReasmFails
  UInt32 FragOks
  UInt32 FragFails
  UInt32 FragCreates
  int NumIf
  int NumAddr
  int NumRoutes
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPInterfaceProperties2
Наследуется от: IPInterfaceProperties
Поля:
  Win32_IP_ADAPTER_ADDRESSES addr
  Win32_MIB_IFROW mib4
  Win32_MIB_IFROW mib6
Свойства:
  IPAddressInformationCollection AnycastAddresses
  IPAddressCollection DhcpServerAddresses
  IPAddressCollection DnsAddresses
  string DnsSuffix
  GatewayIPAddressInformationCollection GatewayAddresses
  bool IsDnsEnabled
  bool IsDynamicDnsEnabled
  MulticastIPAddressInformationCollection MulticastAddresses
  UnicastIPAddressInformationCollection UnicastAddresses
  IPAddressCollection WinsServersAddresses
Методы:
  void .ctor(Win32_IP_ADAPTER_ADDRESSES addr, Win32_MIB_IFROW mib4, Win32_MIB_IFROW mib6)
  IPv4InterfaceProperties GetIPv4Properties()
  IPv6InterfaceProperties GetIPv6Properties()
  IPAddressInformationCollection get_AnycastAddresses()
  IPAddressInformationCollection Win32FromAnycast(IntPtr ptr)
  IPAddressCollection get_DhcpServerAddresses()
  IPAddressCollection get_DnsAddresses()
  string get_DnsSuffix()
  GatewayIPAddressInformationCollection get_GatewayAddresses()
  bool get_IsDnsEnabled()
  bool get_IsDynamicDnsEnabled()
  MulticastIPAddressInformationCollection get_MulticastAddresses()
  MulticastIPAddressInformationCollection Win32FromMulticast(IntPtr ptr)
  UnicastIPAddressInformationCollection get_UnicastAddresses()
  UnicastIPAddressInformationCollection Win32FromUnicast(IntPtr ptr)
  IPAddressCollection get_WinsServersAddresses()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPv4InterfaceProperties
Наследуется от: IPv4InterfaceProperties
Поля:
  Win32_IP_ADAPTER_ADDRESSES addr
  Win32_IP_PER_ADAPTER_INFO painfo
  Win32_MIB_IFROW mib
Свойства:
  int Index
  bool IsAutomaticPrivateAddressingActive
  bool IsAutomaticPrivateAddressingEnabled
  bool IsDhcpEnabled
  bool IsForwardingEnabled
  int Mtu
  bool UsesWins
Методы:
  int GetPerAdapterInfo(int IfIndex, Win32_IP_PER_ADAPTER_INFO pPerAdapterInfo, Int32& pOutBufLen)
  void .ctor(Win32_IP_ADAPTER_ADDRESSES addr, Win32_MIB_IFROW mib)
  int get_Index()
  bool get_IsAutomaticPrivateAddressingActive()
  bool get_IsAutomaticPrivateAddressingEnabled()
  bool get_IsDhcpEnabled()
  bool get_IsForwardingEnabled()
  int get_Mtu()
  bool get_UsesWins()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_PER_ADAPTER_INFO
Наследуется от: object
Поля:
  UInt32 AutoconfigEnabled
  UInt32 AutoconfigActive
  IntPtr CurrentDnsServer
  Win32_IP_ADDR_STRING DnsServerList
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPv4InterfaceStatistics
Наследуется от: IPv4InterfaceStatistics
Поля:
  Win32_MIB_IFROW info
Свойства:
  long BytesReceived
  long BytesSent
  long IncomingPacketsDiscarded
  long IncomingPacketsWithErrors
  long IncomingUnknownProtocolPackets
  long NonUnicastPacketsReceived
  long NonUnicastPacketsSent
  long OutgoingPacketsDiscarded
  long OutgoingPacketsWithErrors
  long OutputQueueLength
  long UnicastPacketsReceived
  long UnicastPacketsSent
Методы:
  void .ctor(Win32_MIB_IFROW info)
  long get_BytesReceived()
  long get_BytesSent()
  long get_IncomingPacketsDiscarded()
  long get_IncomingPacketsWithErrors()
  long get_IncomingUnknownProtocolPackets()
  long get_NonUnicastPacketsReceived()
  long get_NonUnicastPacketsSent()
  long get_OutgoingPacketsDiscarded()
  long get_OutgoingPacketsWithErrors()
  long get_OutputQueueLength()
  long get_UnicastPacketsReceived()
  long get_UnicastPacketsSent()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IPv6InterfaceProperties
Наследуется от: IPv6InterfaceProperties
Поля:
  Win32_MIB_IFROW mib
Свойства:
  int Index
  int Mtu
Методы:
  void .ctor(Win32_MIB_IFROW mib)
  int get_Index()
  int get_Mtu()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IcmpV4Statistics
Наследуется от: IcmpV4Statistics
Поля:
  Win32_MIBICMPSTATS iin
  Win32_MIBICMPSTATS iout
Свойства:
  long AddressMaskRepliesReceived
  long AddressMaskRepliesSent
  long AddressMaskRequestsReceived
  long AddressMaskRequestsSent
  long DestinationUnreachableMessagesReceived
  long DestinationUnreachableMessagesSent
  long EchoRepliesReceived
  long EchoRepliesSent
  long EchoRequestsReceived
  long EchoRequestsSent
  long ErrorsReceived
  long ErrorsSent
  long MessagesReceived
  long MessagesSent
  long ParameterProblemsReceived
  long ParameterProblemsSent
  long RedirectsReceived
  long RedirectsSent
  long SourceQuenchesReceived
  long SourceQuenchesSent
  long TimeExceededMessagesReceived
  long TimeExceededMessagesSent
  long TimestampRepliesReceived
  long TimestampRepliesSent
  long TimestampRequestsReceived
  long TimestampRequestsSent
Методы:
  void .ctor(Win32_MIBICMPINFO info)
  long get_AddressMaskRepliesReceived()
  long get_AddressMaskRepliesSent()
  long get_AddressMaskRequestsReceived()
  long get_AddressMaskRequestsSent()
  long get_DestinationUnreachableMessagesReceived()
  long get_DestinationUnreachableMessagesSent()
  long get_EchoRepliesReceived()
  long get_EchoRepliesSent()
  long get_EchoRequestsReceived()
  long get_EchoRequestsSent()
  long get_ErrorsReceived()
  long get_ErrorsSent()
  long get_MessagesReceived()
  long get_MessagesSent()
  long get_ParameterProblemsReceived()
  long get_ParameterProblemsSent()
  long get_RedirectsReceived()
  long get_RedirectsSent()
  long get_SourceQuenchesReceived()
  long get_SourceQuenchesSent()
  long get_TimeExceededMessagesReceived()
  long get_TimeExceededMessagesSent()
  long get_TimestampRepliesReceived()
  long get_TimestampRepliesSent()
  long get_TimestampRequestsReceived()
  long get_TimestampRequestsSent()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIBICMPINFO
Наследуется от: ValueType
Поля:
  Win32_MIBICMPSTATS InStats
  Win32_MIBICMPSTATS OutStats
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIBICMPSTATS
Наследуется от: ValueType
Поля:
  UInt32 Msgs
  UInt32 Errors
  UInt32 DestUnreachs
  UInt32 TimeExcds
  UInt32 ParmProbs
  UInt32 SrcQuenchs
  UInt32 Redirects
  UInt32 Echos
  UInt32 EchoReps
  UInt32 Timestamps
  UInt32 TimestampReps
  UInt32 AddrMasks
  UInt32 AddrMaskReps
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.IcmpV6MessageTypes
Наследуется от: object
Поля:
  int DestinationUnreachable
  int PacketTooBig
  int TimeExceeded
  int ParameterProblem
  int EchoRequest
  int EchoReply
  int GroupMembershipQuery
  int GroupMembershipReport
  int GroupMembershipReduction
  int RouterSolicitation
  int RouterAdvertisement
  int NeighborSolicitation
  int NeighborAdvertisement
  int Redirect
  int RouterRenumbering
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32IcmpV6Statistics
Наследуется от: IcmpV6Statistics
Поля:
  Win32_MIBICMPSTATS_EX iin
  Win32_MIBICMPSTATS_EX iout
Свойства:
  long DestinationUnreachableMessagesReceived
  long DestinationUnreachableMessagesSent
  long EchoRepliesReceived
  long EchoRepliesSent
  long EchoRequestsReceived
  long EchoRequestsSent
  long ErrorsReceived
  long ErrorsSent
  long MembershipQueriesReceived
  long MembershipQueriesSent
  long MembershipReductionsReceived
  long MembershipReductionsSent
  long MembershipReportsReceived
  long MembershipReportsSent
  long MessagesReceived
  long MessagesSent
  long NeighborAdvertisementsReceived
  long NeighborAdvertisementsSent
  long NeighborSolicitsReceived
  long NeighborSolicitsSent
  long PacketTooBigMessagesReceived
  long PacketTooBigMessagesSent
  long ParameterProblemsReceived
  long ParameterProblemsSent
  long RedirectsReceived
  long RedirectsSent
  long RouterAdvertisementsReceived
  long RouterAdvertisementsSent
  long RouterSolicitsReceived
  long RouterSolicitsSent
  long TimeExceededMessagesReceived
  long TimeExceededMessagesSent
Методы:
  void .ctor(Win32_MIB_ICMP_EX info)
  long get_DestinationUnreachableMessagesReceived()
  long get_DestinationUnreachableMessagesSent()
  long get_EchoRepliesReceived()
  long get_EchoRepliesSent()
  long get_EchoRequestsReceived()
  long get_EchoRequestsSent()
  long get_ErrorsReceived()
  long get_ErrorsSent()
  long get_MembershipQueriesReceived()
  long get_MembershipQueriesSent()
  long get_MembershipReductionsReceived()
  long get_MembershipReductionsSent()
  long get_MembershipReportsReceived()
  long get_MembershipReportsSent()
  long get_MessagesReceived()
  long get_MessagesSent()
  long get_NeighborAdvertisementsReceived()
  long get_NeighborAdvertisementsSent()
  long get_NeighborSolicitsReceived()
  long get_NeighborSolicitsSent()
  long get_PacketTooBigMessagesReceived()
  long get_PacketTooBigMessagesSent()
  long get_ParameterProblemsReceived()
  long get_ParameterProblemsSent()
  long get_RedirectsReceived()
  long get_RedirectsSent()
  long get_RouterAdvertisementsReceived()
  long get_RouterAdvertisementsSent()
  long get_RouterSolicitsReceived()
  long get_RouterSolicitsSent()
  long get_TimeExceededMessagesReceived()
  long get_TimeExceededMessagesSent()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIB_ICMP_EX
Наследуется от: ValueType
Поля:
  Win32_MIBICMPSTATS_EX InStats
  Win32_MIBICMPSTATS_EX OutStats
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIBICMPSTATS_EX
Наследуется от: ValueType
Поля:
  UInt32 Msgs
  UInt32 Errors
  UInt32[] Counts
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32NetworkInterfaceAPI
Наследуется от: NetworkInterfaceFactory
Поля:
  string IPHLPAPI
Свойства:
Методы:
  int GetAdaptersAddresses(UInt32 family, UInt32 flags, IntPtr reserved, IntPtr info, Int32& size)
  UInt32 GetBestInterfaceEx(Byte[] ipAddress, Int32& index)
  Win32_IP_ADAPTER_ADDRESSES[] GetAdaptersAddresses()
  NetworkInterface[] GetAllNetworkInterfaces()
  int GetBestInterfaceForAddress(IPAddress addr)
  int GetLoopbackInterfaceIndex()
  IPAddress GetNetMask(IPAddress address)
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32NetworkInterface2
Наследуется от: NetworkInterface
Поля:
  Win32_IP_ADAPTER_ADDRESSES addr
  Win32_MIB_IFROW mib4
  Win32_MIB_IFROW mib6
  Win32IPv4InterfaceStatistics ip4stats
  IPInterfaceProperties ip_if_props
Свойства:
  string Description
  string Id
  bool IsReceiveOnly
  string Name
  NetworkInterfaceType NetworkInterfaceType
  OperationalStatus OperationalStatus
  long Speed
  bool SupportsMulticast
Методы:
  int GetAdaptersInfo(IntPtr info, Int32& size)
  int GetIfEntry(Win32_MIB_IFROW& row)
  Win32_IP_ADAPTER_INFO[] GetAdaptersInfo()
  void .ctor(Win32_IP_ADAPTER_ADDRESSES addr)
  IPInterfaceProperties GetIPProperties()
  IPv4InterfaceStatistics GetIPv4Statistics()
  PhysicalAddress GetPhysicalAddress()
  bool Supports(NetworkInterfaceComponent networkInterfaceComponent)
  string get_Description()
  string get_Id()
  bool get_IsReceiveOnly()
  string get_Name()
  NetworkInterfaceType get_NetworkInterfaceType()
  OperationalStatus get_OperationalStatus()
  long get_Speed()
  bool get_SupportsMulticast()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32NetworkInterfaceFactoryPal
Наследуется от: object
Поля:
Свойства:
Методы:
  NetworkInterfaceFactory Create()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32NetworkInterface
Наследуется от: object
Поля:
  Win32_FIXED_INFO fixedInfo
  bool initialized
Свойства:
  Win32_FIXED_INFO FixedInfo
Методы:
  int GetNetworkParams(IntPtr ptr, Int32& size)
  Win32_FIXED_INFO get_FixedInfo()
  void .ctor()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_FIXED_INFO
Наследуется от: ValueType
Поля:
  int MAX_HOSTNAME_LEN
  int MAX_DOMAIN_NAME_LEN
  int MAX_SCOPE_ID_LEN
  string HostName
  string DomainName
  IntPtr CurrentDnsServer
  Win32_IP_ADDR_STRING DnsServerList
  NetBiosNodeType NodeType
  string ScopeId
  UInt32 EnableRouting
  UInt32 EnableProxy
  UInt32 EnableDns
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.AlignmentUnion
Наследуется от: ValueType
Поля:
  ulong Alignment
  int Length
  int IfIndex
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_ADDRESSES
Наследуется от: ValueType
Поля:
  AlignmentUnion Alignment
  IntPtr Next
  string AdapterName
  IntPtr FirstUnicastAddress
  IntPtr FirstAnycastAddress
  IntPtr FirstMulticastAddress
  IntPtr FirstDnsServerAddress
  string DnsSuffix
  string Description
  string FriendlyName
  Byte[] PhysicalAddress
  UInt32 PhysicalAddressLength
  UInt32 Flags
  UInt32 Mtu
  NetworkInterfaceType IfType
  OperationalStatus OperStatus
  int Ipv6IfIndex
  UInt32[] ZoneIndices
  IntPtr FirstPrefix
  ulong TransmitLinkSpeed
  ulong ReceiveLinkSpeed
  IntPtr FirstWinsServerAddress
  IntPtr FirstGatewayAddress
  UInt32 Ipv4Metric
  UInt32 Ipv6Metric
  ulong Luid
  Win32_SOCKET_ADDRESS Dhcpv4Server
  UInt32 CompartmentId
  ulong NetworkGuid
  int ConnectionType
  int TunnelType
  Win32_SOCKET_ADDRESS Dhcpv6Server
  Byte[] Dhcpv6ClientDuid
  ulong Dhcpv6ClientDuidLength
  ulong Dhcpv6Iaid
  IntPtr FirstDnsSuffix
  int GAA_FLAG_INCLUDE_WINS_INFO
  int GAA_FLAG_INCLUDE_GATEWAYS
  int MAX_ADAPTER_ADDRESS_LENGTH
  int MAX_DHCPV6_DUID_LENGTH
  int IP_ADAPTER_DDNS_ENABLED
  int IP_ADAPTER_DHCP_ENABLED
  int IP_ADAPTER_RECEIVE_ONLY
  int IP_ADAPTER_NO_MULTICAST
Свойства:
  bool DdnsEnabled
  bool DhcpEnabled
  bool IsReceiveOnly
  bool NoMulticast
Методы:
  bool get_DdnsEnabled()
  bool get_DhcpEnabled()
  bool get_IsReceiveOnly()
  bool get_NoMulticast()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_INFO
Наследуется от: ValueType
Поля:
  int MAX_ADAPTER_NAME_LENGTH
  int MAX_ADAPTER_DESCRIPTION_LENGTH
  int MAX_ADAPTER_ADDRESS_LENGTH
  IntPtr Next
  int ComboIndex
  string AdapterName
  string Description
  UInt32 AddressLength
  Byte[] Address
  UInt32 Index
  UInt32 Type
  UInt32 DhcpEnabled
  IntPtr CurrentIpAddress
  Win32_IP_ADDR_STRING IpAddressList
  Win32_IP_ADDR_STRING GatewayList
  Win32_IP_ADDR_STRING DhcpServer
  bool HaveWins
  Win32_IP_ADDR_STRING PrimaryWinsServer
  Win32_IP_ADDR_STRING SecondaryWinsServer
  long LeaseObtained
  long LeaseExpires
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIB_IFROW
Наследуется от: ValueType
Поля:
  int MAX_INTERFACE_NAME_LEN
  int MAXLEN_PHYSADDR
  int MAXLEN_IFDESCR
  Char[] Name
  int Index
  NetworkInterfaceType Type
  int Mtu
  UInt32 Speed
  int PhysAddrLen
  Byte[] PhysAddr
  UInt32 AdminStatus
  UInt32 OperStatus
  UInt32 LastChange
  int InOctets
  int InUcastPkts
  int InNUcastPkts
  int InDiscards
  int InErrors
  int InUnknownProtos
  int OutOctets
  int OutUcastPkts
  int OutNUcastPkts
  int OutDiscards
  int OutErrors
  int OutQLen
  int DescrLen
  Byte[] Descr
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADDR_STRING
Наследуется от: ValueType
Поля:
  IntPtr Next
  string IpAddress
  string IpMask
  UInt32 Context
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32LengthFlagsUnion
Наследуется от: ValueType
Поля:
  int IP_ADAPTER_ADDRESS_DNS_ELIGIBLE
  int IP_ADAPTER_ADDRESS_TRANSIENT
  UInt32 Length
  UInt32 Flags
Свойства:
  bool IsDnsEligible
  bool IsTransient
Методы:
  bool get_IsDnsEligible()
  bool get_IsTransient()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_ANYCAST_ADDRESS
Наследуется от: ValueType
Поля:
  Win32LengthFlagsUnion LengthFlags
  IntPtr Next
  Win32_SOCKET_ADDRESS Address
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_DNS_SERVER_ADDRESS
Наследуется от: ValueType
Поля:
  Win32LengthFlagsUnion LengthFlags
  IntPtr Next
  Win32_SOCKET_ADDRESS Address
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_MULTICAST_ADDRESS
Наследуется от: ValueType
Поля:
  Win32LengthFlagsUnion LengthFlags
  IntPtr Next
  Win32_SOCKET_ADDRESS Address
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_GATEWAY_ADDRESS
Наследуется от: ValueType
Поля:
  Win32LengthFlagsUnion LengthFlags
  IntPtr Next
  Win32_SOCKET_ADDRESS Address
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_WINS_SERVER_ADDRESS
Наследуется от: ValueType
Поля:
  Win32LengthFlagsUnion LengthFlags
  IntPtr Next
  Win32_SOCKET_ADDRESS Address
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_IP_ADAPTER_UNICAST_ADDRESS
Наследуется от: ValueType
Поля:
  Win32LengthFlagsUnion LengthFlags
  IntPtr Next
  Win32_SOCKET_ADDRESS Address
  PrefixOrigin PrefixOrigin
  SuffixOrigin SuffixOrigin
  DuplicateAddressDetectionState DadState
  UInt32 ValidLifetime
  UInt32 PreferredLifetime
  UInt32 LeaseLifetime
  byte OnLinkPrefixLength
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_SOCKADDR
Наследуется от: ValueType
Поля:
  ushort AddressFamily
  Byte[] AddressData
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_SOCKET_ADDRESS
Наследуется от: ValueType
Поля:
  IntPtr Sockaddr
  int SockaddrLength
  int AF_INET6
Свойства:
Методы:
  IPAddress GetIPAddress()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32TcpStatistics
Наследуется от: TcpStatistics
Поля:
  Win32_MIB_TCPSTATS info
Свойства:
  long ConnectionsAccepted
  long ConnectionsInitiated
  long CumulativeConnections
  long CurrentConnections
  long ErrorsReceived
  long FailedConnectionAttempts
  long MaximumConnections
  long MaximumTransmissionTimeout
  long MinimumTransmissionTimeout
  long ResetConnections
  long ResetsSent
  long SegmentsReceived
  long SegmentsResent
  long SegmentsSent
Методы:
  void .ctor(Win32_MIB_TCPSTATS info)
  long get_ConnectionsAccepted()
  long get_ConnectionsInitiated()
  long get_CumulativeConnections()
  long get_CurrentConnections()
  long get_ErrorsReceived()
  long get_FailedConnectionAttempts()
  long get_MaximumConnections()
  long get_MaximumTransmissionTimeout()
  long get_MinimumTransmissionTimeout()
  long get_ResetConnections()
  long get_ResetsSent()
  long get_SegmentsReceived()
  long get_SegmentsResent()
  long get_SegmentsSent()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIB_TCPSTATS
Наследуется от: ValueType
Поля:
  UInt32 RtoAlgorithm
  UInt32 RtoMin
  UInt32 RtoMax
  UInt32 MaxConn
  UInt32 ActiveOpens
  UInt32 PassiveOpens
  UInt32 AttemptFails
  UInt32 EstabResets
  UInt32 CurrEstab
  UInt32 InSegs
  UInt32 OutSegs
  UInt32 RetransSegs
  UInt32 InErrs
  UInt32 OutRsts
  UInt32 NumConns
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32UdpStatistics
Наследуется от: UdpStatistics
Поля:
  Win32_MIB_UDPSTATS info
Свойства:
  long DatagramsReceived
  long DatagramsSent
  long IncomingDatagramsDiscarded
  long IncomingDatagramsWithErrors
  int UdpListeners
Методы:
  void .ctor(Win32_MIB_UDPSTATS info)
  long get_DatagramsReceived()
  long get_DatagramsSent()
  long get_IncomingDatagramsDiscarded()
  long get_IncomingDatagramsWithErrors()
  int get_UdpListeners()
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32_MIB_UDPSTATS
Наследуется от: ValueType
Поля:
  UInt32 InDatagrams
  UInt32 NoPorts
  UInt32 InErrors
  UInt32 OutDatagrams
  int NumAddrs
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.NetworkInformation.Win32UnicastIPAddressInformation
Наследуется от: UnicastIPAddressInformation
Поля:
  Win32_IP_ADAPTER_UNICAST_ADDRESS info
  IPAddress ipv4Mask
Свойства:
  IPAddress Address
  bool IsDnsEligible
  bool IsTransient
  long AddressPreferredLifetime
  long AddressValidLifetime
  long DhcpLeaseLifetime
  DuplicateAddressDetectionState DuplicateAddressDetectionState
  IPAddress IPv4Mask
  PrefixOrigin PrefixOrigin
  SuffixOrigin SuffixOrigin
Методы:
  void .ctor(Win32_IP_ADAPTER_UNICAST_ADDRESS info)
  IPAddress get_Address()
  bool get_IsDnsEligible()
  bool get_IsTransient()
  long get_AddressPreferredLifetime()
  long get_AddressValidLifetime()
  long get_DhcpLeaseLifetime()
  DuplicateAddressDetectionState get_DuplicateAddressDetectionState()
  IPAddress get_IPv4Mask()
  PrefixOrigin get_PrefixOrigin()
  SuffixOrigin get_SuffixOrigin()
  IPAddress PrefixLengthToSubnetMask(byte prefixLength, AddressFamily family)
--------------------------------------------------
Класс: System.Net.NetworkInformation.UnixNetworkInterfaceFactoryPal
Наследуется от: object
Поля:
Свойства:
Методы:
  NetworkInterfaceFactory Create()
--------------------------------------------------
Класс: System.Net.NetworkInformation.UnixIPGlobalPropertiesFactoryPal
Наследуется от: object
Поля:
Свойства:
Методы:
  IPGlobalProperties Create()
--------------------------------------------------
Класс: System.Net.Configuration.DefaultProxySectionInternal
Наследуется от: object
Поля:
  IWebProxy webProxy
  object classSyncObject
Свойства:
  object ClassSyncObject
  IWebProxy WebProxy
Методы:
  IWebProxy GetDefaultProxy_UsingOldMonoCode()
  IWebProxy GetSystemWebProxy()
  object get_ClassSyncObject()
  DefaultProxySectionInternal GetSection()
  IWebProxy get_WebProxy()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.UnicodeDecodingConformance
Наследуется от: Enum
Поля:
  int value__
  UnicodeDecodingConformance Auto
  UnicodeDecodingConformance Strict
  UnicodeDecodingConformance Compat
  UnicodeDecodingConformance Loose
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Configuration.UnicodeEncodingConformance
Наследуется от: Enum
Поля:
  int value__
  UnicodeEncodingConformance Auto
  UnicodeEncodingConformance Strict
  UnicodeEncodingConformance Compat
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Configuration.SettingsSectionInternal
Наследуется от: object
Поля:
  SettingsSectionInternal instance
  UnicodeEncodingConformance WebUtilityUnicodeEncodingConformance
  UnicodeDecodingConformance WebUtilityUnicodeDecodingConformance
  bool HttpListenerUnescapeRequestUrl
  IPProtectionLevel IPProtectionLevel
  bool <UseNagleAlgorithm>k__BackingField
  bool <Expect100Continue>k__BackingField
  bool <CheckCertificateName>k__BackingField
  int <DnsRefreshTimeout>k__BackingField
  bool <EnableDnsRoundRobin>k__BackingField
  bool <CheckCertificateRevocationList>k__BackingField
  EncryptionPolicy <EncryptionPolicy>k__BackingField
Свойства:
  SettingsSectionInternal Section
  bool UseNagleAlgorithm
  bool Expect100Continue
  bool CheckCertificateName
  int DnsRefreshTimeout
  bool EnableDnsRoundRobin
  bool CheckCertificateRevocationList
  EncryptionPolicy EncryptionPolicy
  bool Ipv6Enabled
Методы:
  SettingsSectionInternal get_Section()
  bool get_UseNagleAlgorithm()
  void set_UseNagleAlgorithm(bool value)
  bool get_Expect100Continue()
  void set_Expect100Continue(bool value)
  bool get_CheckCertificateName()
  void set_CheckCertificateName(bool value)
  int get_DnsRefreshTimeout()
  void set_DnsRefreshTimeout(int value)
  bool get_EnableDnsRoundRobin()
  void set_EnableDnsRoundRobin(bool value)
  bool get_CheckCertificateRevocationList()
  void set_CheckCertificateRevocationList(bool value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  bool get_Ipv6Enabled()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Configuration.AuthenticationModuleElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty typeProp
Свойства:
  ConfigurationPropertyCollection Properties
  string Type
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string typeName)
  ConfigurationPropertyCollection get_Properties()
  string get_Type()
  void set_Type(string value)
--------------------------------------------------
Класс: System.Net.Configuration.AuthenticationModuleElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  AuthenticationModuleElement Item
  AuthenticationModuleElement Item
Методы:
  void .ctor()
  AuthenticationModuleElement get_Item(int index)
  void set_Item(int index, AuthenticationModuleElement value)
  AuthenticationModuleElement get_Item(string name)
  void set_Item(string name, AuthenticationModuleElement value)
  void Add(AuthenticationModuleElement element)
  void Clear()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  int IndexOf(AuthenticationModuleElement element)
  void Remove(AuthenticationModuleElement element)
  void Remove(string name)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Net.Configuration.AuthenticationModulesSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty authenticationModulesProp
Свойства:
  ConfigurationPropertyCollection Properties
  AuthenticationModuleElementCollection AuthenticationModules
Методы:
  void .cctor()
  void .ctor()
  ConfigurationPropertyCollection get_Properties()
  AuthenticationModuleElementCollection get_AuthenticationModules()
  void PostDeserialize()
  void InitializeDefault()
--------------------------------------------------
Класс: System.Net.Configuration.BypassElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty addressProp
Свойства:
  string Address
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string address)
  string get_Address()
  void set_Address(string value)
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Net.Configuration.BypassElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  BypassElement Item
  BypassElement Item
  bool ThrowOnDuplicate
Методы:
  void .ctor()
  BypassElement get_Item(int index)
  void set_Item(int index, BypassElement value)
  BypassElement get_Item(string name)
  void set_Item(string name, BypassElement value)
  bool get_ThrowOnDuplicate()
  void Add(BypassElement element)
  void Clear()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  int IndexOf(BypassElement element)
  void Remove(BypassElement element)
  void Remove(string name)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Net.Configuration.ConnectionManagementElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty addressProp
  ConfigurationProperty maxConnectionProp
Свойства:
  string Address
  int MaxConnection
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string address, int maxConnection)
  string get_Address()
  void set_Address(string value)
  int get_MaxConnection()
  void set_MaxConnection(int value)
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Net.Configuration.ConnectionManagementElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  ConnectionManagementElement Item
  ConnectionManagementElement Item
Методы:
  void .ctor()
  ConnectionManagementElement get_Item(int index)
  void set_Item(int index, ConnectionManagementElement value)
  ConnectionManagementElement get_Item(string name)
  void set_Item(string name, ConnectionManagementElement value)
  void Add(ConnectionManagementElement element)
  void Clear()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  int IndexOf(ConnectionManagementElement element)
  void Remove(ConnectionManagementElement element)
  void Remove(string name)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Net.Configuration.ConnectionManagementData
Наследуется от: object
Поля:
  Hashtable data
  int defaultMaxConnections
Свойства:
  Hashtable Data
Методы:
  void .ctor(object parent)
  void Add(string address, string nconns)
  void Add(string address, int nconns)
  void Remove(string address)
  void Clear()
  UInt32 GetMaxConnections(string hostOrIP)
  Hashtable get_Data()
--------------------------------------------------
Класс: System.Net.Configuration.ConnectionManagementHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.HandlersUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  string ExtractAttributeValue(string attKey, XmlNode node)
  string ExtractAttributeValue(string attKey, XmlNode node, bool optional)
  void ThrowException(string msg, XmlNode node)
--------------------------------------------------
Класс: System.Net.Configuration.ConnectionManagementSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationProperty connectionManagementProp
  ConfigurationPropertyCollection properties
Свойства:
  ConnectionManagementElementCollection ConnectionManagement
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  ConnectionManagementElementCollection get_ConnectionManagement()
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Net.Configuration.DefaultProxyHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  void FillByPassList(XmlNode node, WebProxy proxy)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.DefaultProxySection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty bypassListProp
  ConfigurationProperty enabledProp
  ConfigurationProperty moduleProp
  ConfigurationProperty proxyProp
  ConfigurationProperty useDefaultCredentialsProp
Свойства:
  BypassElementCollection BypassList
  bool Enabled
  ModuleElement Module
  ProxyElement Proxy
  bool UseDefaultCredentials
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  BypassElementCollection get_BypassList()
  bool get_Enabled()
  void set_Enabled(bool value)
  ModuleElement get_Module()
  ProxyElement get_Proxy()
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  ConfigurationPropertyCollection get_Properties()
  void PostDeserialize()
  void Reset(ConfigurationElement parentElement)
--------------------------------------------------
Класс: System.Net.Configuration.FtpCachePolicyElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty policyLevelProp
  ConfigurationPropertyCollection properties
Свойства:
  RequestCacheLevel PolicyLevel
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  RequestCacheLevel get_PolicyLevel()
  void set_PolicyLevel(RequestCacheLevel value)
  ConfigurationPropertyCollection get_Properties()
  void DeserializeElement(XmlReader reader, bool serializeCollectionKey)
  void Reset(ConfigurationElement parentElement)
--------------------------------------------------
Класс: System.Net.Configuration.HttpCachePolicyElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty maximumAgeProp
  ConfigurationProperty maximumStaleProp
  ConfigurationProperty minimumFreshProp
  ConfigurationProperty policyLevelProp
  ConfigurationPropertyCollection properties
Свойства:
  TimeSpan MaximumAge
  TimeSpan MaximumStale
  TimeSpan MinimumFresh
  HttpRequestCacheLevel PolicyLevel
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  TimeSpan get_MaximumAge()
  void set_MaximumAge(TimeSpan value)
  TimeSpan get_MaximumStale()
  void set_MaximumStale(TimeSpan value)
  TimeSpan get_MinimumFresh()
  void set_MinimumFresh(TimeSpan value)
  HttpRequestCacheLevel get_PolicyLevel()
  void set_PolicyLevel(HttpRequestCacheLevel value)
  ConfigurationPropertyCollection get_Properties()
  void DeserializeElement(XmlReader reader, bool serializeCollectionKey)
  void Reset(ConfigurationElement parentElement)
--------------------------------------------------
Класс: System.Net.Configuration.HttpWebRequestElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty maximumErrorResponseLengthProp
  ConfigurationProperty maximumResponseHeadersLengthProp
  ConfigurationProperty maximumUnauthorizedUploadLengthProp
  ConfigurationProperty useUnsafeHeaderParsingProp
  ConfigurationPropertyCollection properties
Свойства:
  int MaximumErrorResponseLength
  int MaximumResponseHeadersLength
  int MaximumUnauthorizedUploadLength
  bool UseUnsafeHeaderParsing
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  int get_MaximumErrorResponseLength()
  void set_MaximumErrorResponseLength(int value)
  int get_MaximumResponseHeadersLength()
  void set_MaximumResponseHeadersLength(int value)
  int get_MaximumUnauthorizedUploadLength()
  void set_MaximumUnauthorizedUploadLength(int value)
  bool get_UseUnsafeHeaderParsing()
  void set_UseUnsafeHeaderParsing(bool value)
  ConfigurationPropertyCollection get_Properties()
  void PostDeserialize()
--------------------------------------------------
Класс: System.Net.Configuration.Ipv6Element
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty enabledProp
Свойства:
  bool Enabled
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  bool get_Enabled()
  void set_Enabled(bool value)
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Net.Configuration.MailSettingsSectionGroup
Наследуется от: ConfigurationSectionGroup
Поля:
Свойства:
  SmtpSection Smtp
Методы:
  SmtpSection get_Smtp()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.ModuleElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty typeProp
Свойства:
  ConfigurationPropertyCollection Properties
  string Type
Методы:
  void .cctor()
  void .ctor()
  ConfigurationPropertyCollection get_Properties()
  string get_Type()
  void set_Type(string value)
--------------------------------------------------
Класс: System.Net.Configuration.NetAuthenticationModuleHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  IAuthenticationModule CreateInstance(string typeName, XmlNode node)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.NetConfigurationHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.NetSectionGroup
Наследуется от: ConfigurationSectionGroup
Поля:
Свойства:
  AuthenticationModulesSection AuthenticationModules
  ConnectionManagementSection ConnectionManagement
  DefaultProxySection DefaultProxy
  MailSettingsSectionGroup MailSettings
  RequestCachingSection RequestCaching
  SettingsSection Settings
  WebRequestModulesSection WebRequestModules
Методы:
  void .ctor()
  AuthenticationModulesSection get_AuthenticationModules()
  ConnectionManagementSection get_ConnectionManagement()
  DefaultProxySection get_DefaultProxy()
  MailSettingsSectionGroup get_MailSettings()
  RequestCachingSection get_RequestCaching()
  SettingsSection get_Settings()
  WebRequestModulesSection get_WebRequestModules()
  NetSectionGroup GetSectionGroup(Configuration config)
--------------------------------------------------
Класс: System.Net.Configuration.PerformanceCountersElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty enabledProp
  ConfigurationPropertyCollection properties
Свойства:
  bool Enabled
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  bool get_Enabled()
  void set_Enabled(bool value)
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.ProxyElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty autoDetectProp
  ConfigurationProperty bypassOnLocalProp
  ConfigurationProperty proxyAddressProp
  ConfigurationProperty scriptLocationProp
  ConfigurationProperty useSystemDefaultProp
Свойства:
  AutoDetectValues AutoDetect
  BypassOnLocalValues BypassOnLocal
  Uri ProxyAddress
  Uri ScriptLocation
  UseSystemDefaultValues UseSystemDefault
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  AutoDetectValues get_AutoDetect()
  void set_AutoDetect(AutoDetectValues value)
  BypassOnLocalValues get_BypassOnLocal()
  void set_BypassOnLocal(BypassOnLocalValues value)
  Uri get_ProxyAddress()
  void set_ProxyAddress(Uri value)
  Uri get_ScriptLocation()
  void set_ScriptLocation(Uri value)
  UseSystemDefaultValues get_UseSystemDefault()
  void set_UseSystemDefault(UseSystemDefaultValues value)
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Net.Configuration.RequestCachingSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty defaultFtpCachePolicyProp
  ConfigurationProperty defaultHttpCachePolicyProp
  ConfigurationProperty defaultPolicyLevelProp
  ConfigurationProperty disableAllCachingProp
  ConfigurationProperty isPrivateCacheProp
  ConfigurationProperty unspecifiedMaximumAgeProp
Свойства:
  FtpCachePolicyElement DefaultFtpCachePolicy
  HttpCachePolicyElement DefaultHttpCachePolicy
  RequestCacheLevel DefaultPolicyLevel
  bool DisableAllCaching
  bool IsPrivateCache
  TimeSpan UnspecifiedMaximumAge
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  FtpCachePolicyElement get_DefaultFtpCachePolicy()
  HttpCachePolicyElement get_DefaultHttpCachePolicy()
  RequestCacheLevel get_DefaultPolicyLevel()
  void set_DefaultPolicyLevel(RequestCacheLevel value)
  bool get_DisableAllCaching()
  void set_DisableAllCaching(bool value)
  bool get_IsPrivateCache()
  void set_IsPrivateCache(bool value)
  TimeSpan get_UnspecifiedMaximumAge()
  void set_UnspecifiedMaximumAge(TimeSpan value)
  ConfigurationPropertyCollection get_Properties()
  void PostDeserialize()
  void DeserializeElement(XmlReader reader, bool serializeCollectionKey)
--------------------------------------------------
Класс: System.Net.Configuration.ServicePointManagerElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty checkCertificateNameProp
  ConfigurationProperty checkCertificateRevocationListProp
  ConfigurationProperty dnsRefreshTimeoutProp
  ConfigurationProperty enableDnsRoundRobinProp
  ConfigurationProperty expect100ContinueProp
  ConfigurationProperty useNagleAlgorithmProp
Свойства:
  bool CheckCertificateName
  bool CheckCertificateRevocationList
  int DnsRefreshTimeout
  bool EnableDnsRoundRobin
  bool Expect100Continue
  bool UseNagleAlgorithm
  ConfigurationPropertyCollection Properties
  EncryptionPolicy EncryptionPolicy
Методы:
  void .cctor()
  void .ctor()
  bool get_CheckCertificateName()
  void set_CheckCertificateName(bool value)
  bool get_CheckCertificateRevocationList()
  void set_CheckCertificateRevocationList(bool value)
  int get_DnsRefreshTimeout()
  void set_DnsRefreshTimeout(int value)
  bool get_EnableDnsRoundRobin()
  void set_EnableDnsRoundRobin(bool value)
  bool get_Expect100Continue()
  void set_Expect100Continue(bool value)
  bool get_UseNagleAlgorithm()
  void set_UseNagleAlgorithm(bool value)
  ConfigurationPropertyCollection get_Properties()
  void PostDeserialize()
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
--------------------------------------------------
Класс: System.Net.Configuration.SettingsSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty httpWebRequestProp
  ConfigurationProperty ipv6Prop
  ConfigurationProperty performanceCountersProp
  ConfigurationProperty servicePointManagerProp
  ConfigurationProperty webProxyScriptProp
  ConfigurationProperty socketProp
Свойства:
  HttpWebRequestElement HttpWebRequest
  Ipv6Element Ipv6
  PerformanceCountersElement PerformanceCounters
  ServicePointManagerElement ServicePointManager
  SocketElement Socket
  WebProxyScriptElement WebProxyScript
  ConfigurationPropertyCollection Properties
  HttpListenerElement HttpListener
  WebUtilityElement WebUtility
  WindowsAuthenticationElement WindowsAuthentication
Методы:
  void .cctor()
  void .ctor()
  HttpWebRequestElement get_HttpWebRequest()
  Ipv6Element get_Ipv6()
  PerformanceCountersElement get_PerformanceCounters()
  ServicePointManagerElement get_ServicePointManager()
  SocketElement get_Socket()
  WebProxyScriptElement get_WebProxyScript()
  ConfigurationPropertyCollection get_Properties()
  HttpListenerElement get_HttpListener()
  WebUtilityElement get_WebUtility()
  WindowsAuthenticationElement get_WindowsAuthentication()
--------------------------------------------------
Класс: System.Net.Configuration.SmtpNetworkElement
Наследуется от: ConfigurationElement
Поля:
Свойства:
  bool DefaultCredentials
  string Host
  string Password
  int Port
  string UserName
  string TargetName
  bool EnableSsl
  ConfigurationPropertyCollection Properties
  string ClientDomain
Методы:
  bool get_DefaultCredentials()
  void set_DefaultCredentials(bool value)
  string get_Host()
  void set_Host(string value)
  string get_Password()
  void set_Password(string value)
  int get_Port()
  void set_Port(int value)
  string get_UserName()
  void set_UserName(string value)
  string get_TargetName()
  void set_TargetName(string value)
  bool get_EnableSsl()
  void set_EnableSsl(bool value)
  ConfigurationPropertyCollection get_Properties()
  void PostDeserialize()
  void .ctor()
  string get_ClientDomain()
  void set_ClientDomain(string value)
--------------------------------------------------
Класс: System.Net.Configuration.SmtpSection
Наследуется от: ConfigurationSection
Поля:
Свойства:
  SmtpDeliveryMethod DeliveryMethod
  SmtpDeliveryFormat DeliveryFormat
  string From
  SmtpNetworkElement Network
  SmtpSpecifiedPickupDirectoryElement SpecifiedPickupDirectory
  ConfigurationPropertyCollection Properties
Методы:
  SmtpDeliveryMethod get_DeliveryMethod()
  void set_DeliveryMethod(SmtpDeliveryMethod value)
  SmtpDeliveryFormat get_DeliveryFormat()
  void set_DeliveryFormat(SmtpDeliveryFormat value)
  string get_From()
  void set_From(string value)
  SmtpNetworkElement get_Network()
  SmtpSpecifiedPickupDirectoryElement get_SpecifiedPickupDirectory()
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty pickupDirectoryLocationProp
  ConfigurationPropertyCollection properties
Свойства:
  string PickupDirectoryLocation
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  string get_PickupDirectoryLocation()
  void set_PickupDirectoryLocation(string value)
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.SocketElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty alwaysUseCompletionPortsForAcceptProp
  ConfigurationProperty alwaysUseCompletionPortsForConnectProp
Свойства:
  bool AlwaysUseCompletionPortsForAccept
  bool AlwaysUseCompletionPortsForConnect
  ConfigurationPropertyCollection Properties
  IPProtectionLevel IPProtectionLevel
Методы:
  void .ctor()
  bool get_AlwaysUseCompletionPortsForAccept()
  void set_AlwaysUseCompletionPortsForAccept(bool value)
  bool get_AlwaysUseCompletionPortsForConnect()
  void set_AlwaysUseCompletionPortsForConnect(bool value)
  ConfigurationPropertyCollection get_Properties()
  void PostDeserialize()
  IPProtectionLevel get_IPProtectionLevel()
  void set_IPProtectionLevel(IPProtectionLevel value)
--------------------------------------------------
Класс: System.Net.Configuration.WebProxyScriptElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationProperty downloadTimeoutProp
  ConfigurationPropertyCollection properties
Свойства:
  TimeSpan DownloadTimeout
  ConfigurationPropertyCollection Properties
  int AutoConfigUrlRetryInterval
Методы:
  void .cctor()
  void PostDeserialize()
  TimeSpan get_DownloadTimeout()
  void set_DownloadTimeout(TimeSpan value)
  ConfigurationPropertyCollection get_Properties()
  void .ctor()
  int get_AutoConfigUrlRetryInterval()
  void set_AutoConfigUrlRetryInterval(int value)
--------------------------------------------------
Класс: System.Net.Configuration.WebRequestModuleElement
Наследуется от: ConfigurationElement
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty prefixProp
  ConfigurationProperty typeProp
Свойства:
  string Prefix
  Type Type
  ConfigurationPropertyCollection Properties
Методы:
  void .cctor()
  void .ctor()
  void .ctor(string prefix, string type)
  void .ctor(string prefix, Type type)
  string get_Prefix()
  void set_Prefix(string value)
  Type get_Type()
  void set_Type(Type value)
  ConfigurationPropertyCollection get_Properties()
--------------------------------------------------
Класс: System.Net.Configuration.WebRequestModuleElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  WebRequestModuleElement Item
  WebRequestModuleElement Item
Методы:
  void .ctor()
  WebRequestModuleElement get_Item(int index)
  void set_Item(int index, WebRequestModuleElement value)
  WebRequestModuleElement get_Item(string name)
  void set_Item(string name, WebRequestModuleElement value)
  void Add(WebRequestModuleElement element)
  void Clear()
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  int IndexOf(WebRequestModuleElement element)
  void Remove(WebRequestModuleElement element)
  void Remove(string name)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Net.Configuration.WebRequestModuleHandler
Наследуется от: object
Поля:
Свойства:
Методы:
  object Create(object parent, object configContext, XmlNode section)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Configuration.WebRequestModulesSection
Наследуется от: ConfigurationSection
Поля:
  ConfigurationPropertyCollection properties
  ConfigurationProperty webRequestModulesProp
Свойства:
  ConfigurationPropertyCollection Properties
  WebRequestModuleElementCollection WebRequestModules
Методы:
  void .cctor()
  ConfigurationPropertyCollection get_Properties()
  WebRequestModuleElementCollection get_WebRequestModules()
  void PostDeserialize()
  void InitializeDefault()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Cache.RequestCache
Наследуется от: object
Поля:
  Char[] LineSplits
  bool _IsPrivateCache
  bool _CanWrite
Свойства:
  bool IsPrivateCache
  bool CanWrite
Методы:
  void .ctor(bool isPrivateCache, bool canWrite)
  bool get_IsPrivateCache()
  bool get_CanWrite()
  Stream Retrieve(string key, RequestCacheEntry& cacheEntry)
  Stream Store(string key, long contentLength, DateTime expiresUtc, DateTime lastModifiedUtc, TimeSpan maxStale, StringCollection entryMetadata, StringCollection systemMetadata)
  void Remove(string key)
  void Update(string key, DateTime expiresUtc, DateTime lastModifiedUtc, DateTime lastSynchronizedUtc, TimeSpan maxStale, StringCollection entryMetadata, StringCollection systemMetadata)
  bool TryRetrieve(string key, RequestCacheEntry& cacheEntry, Stream& readStream)
  bool TryStore(string key, long contentLength, DateTime expiresUtc, DateTime lastModifiedUtc, TimeSpan maxStale, StringCollection entryMetadata, StringCollection systemMetadata, Stream& writeStream)
  bool TryRemove(string key)
  bool TryUpdate(string key, DateTime expiresUtc, DateTime lastModifiedUtc, DateTime lastSynchronizedUtc, TimeSpan maxStale, StringCollection entryMetadata, StringCollection systemMetadata)
  void UnlockEntry(Stream retrieveStream)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Cache.RequestCacheEntry
Наследуется от: object
Поля:
  bool m_IsPrivateEntry
  long m_StreamSize
  DateTime m_ExpiresUtc
  int m_HitCount
  DateTime m_LastAccessedUtc
  DateTime m_LastModifiedUtc
  DateTime m_LastSynchronizedUtc
  TimeSpan m_MaxStale
  int m_UsageCount
  bool m_IsPartialEntry
  StringCollection m_EntryMetadata
  StringCollection m_SystemMetadata
Свойства:
  bool IsPrivateEntry
  long StreamSize
  DateTime ExpiresUtc
  DateTime LastAccessedUtc
  DateTime LastModifiedUtc
  DateTime LastSynchronizedUtc
  TimeSpan MaxStale
  int HitCount
  int UsageCount
  bool IsPartialEntry
  StringCollection EntryMetadata
  StringCollection SystemMetadata
Методы:
  void .ctor()
  bool get_IsPrivateEntry()
  void set_IsPrivateEntry(bool value)
  long get_StreamSize()
  void set_StreamSize(long value)
  DateTime get_ExpiresUtc()
  void set_ExpiresUtc(DateTime value)
  DateTime get_LastAccessedUtc()
  void set_LastAccessedUtc(DateTime value)
  DateTime get_LastModifiedUtc()
  void set_LastModifiedUtc(DateTime value)
  DateTime get_LastSynchronizedUtc()
  void set_LastSynchronizedUtc(DateTime value)
  TimeSpan get_MaxStale()
  void set_MaxStale(TimeSpan value)
  int get_HitCount()
  void set_HitCount(int value)
  int get_UsageCount()
  void set_UsageCount(int value)
  bool get_IsPartialEntry()
  void set_IsPartialEntry(bool value)
  StringCollection get_EntryMetadata()
  void set_EntryMetadata(StringCollection value)
  StringCollection get_SystemMetadata()
  void set_SystemMetadata(StringCollection value)
  string ToString(bool verbose)
--------------------------------------------------
Класс: System.Net.Cache.RequestCacheManager
Наследуется от: object
Поля:
  RequestCachingSectionInternal modreq(System.Runtime.CompilerServices.IsVolatile) s_CacheConfigSettings
  RequestCacheBinding s_BypassCacheBinding
  RequestCacheBinding modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultGlobalBinding
  RequestCacheBinding modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultHttpBinding
  RequestCacheBinding modreq(System.Runtime.CompilerServices.IsVolatile) s_DefaultFtpBinding
Свойства:
  bool IsCachingEnabled
Методы:
  void .ctor()
  RequestCacheBinding GetBinding(string internedScheme)
  bool get_IsCachingEnabled()
  void SetBinding(string uriScheme, RequestCacheBinding binding)
  void LoadConfigSettings()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Cache.RequestCacheValidator
Наследуется от: object
Поля:
Свойства:
Методы:
  object CreateValidator()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Cache.RequestCachingSectionInternal
Наследуется от: object
Поля:
  bool DisableAllCaching
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Net.Cache.RequestCacheBinding
Наследуется от: object
Поля:
  RequestCache m_RequestCache
  RequestCacheValidator m_CacheValidator
  RequestCachePolicy m_Policy
Свойства:
  RequestCache Cache
  RequestCacheValidator Validator
  RequestCachePolicy Policy
Методы:
  void .ctor(RequestCache requestCache, RequestCacheValidator cacheValidator, RequestCachePolicy policy)
  RequestCache get_Cache()
  RequestCacheValidator get_Validator()
  RequestCachePolicy get_Policy()
--------------------------------------------------
Класс: System.Net.Cache.RequestCacheLevel
Наследуется от: Enum
Поля:
  int value__
  RequestCacheLevel Default
  RequestCacheLevel BypassCache
  RequestCacheLevel CacheOnly
  RequestCacheLevel CacheIfAvailable
  RequestCacheLevel Revalidate
  RequestCacheLevel Reload
  RequestCacheLevel NoCacheNoStore
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Cache.RequestCachePolicy
Наследуется от: object
Поля:
  RequestCacheLevel m_Level
Свойства:
  RequestCacheLevel Level
Методы:
  void .ctor()
  void .ctor(RequestCacheLevel level)
  RequestCacheLevel get_Level()
  string ToString()
--------------------------------------------------
Класс: System.Net.Cache.HttpRequestCacheLevel
Наследуется от: Enum
Поля:
  int value__
  HttpRequestCacheLevel Default
  HttpRequestCacheLevel BypassCache
  HttpRequestCacheLevel CacheOnly
  HttpRequestCacheLevel CacheIfAvailable
  HttpRequestCacheLevel Revalidate
  HttpRequestCacheLevel Reload
  HttpRequestCacheLevel NoCacheNoStore
  HttpRequestCacheLevel CacheOrNextCacheOnly
  HttpRequestCacheLevel Refresh
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Cache.HttpCacheAgeControl
Наследуется от: Enum
Поля:
  int value__
  HttpCacheAgeControl None
  HttpCacheAgeControl MinFresh
  HttpCacheAgeControl MaxAge
  HttpCacheAgeControl MaxStale
  HttpCacheAgeControl MaxAgeAndMinFresh
  HttpCacheAgeControl MaxAgeAndMaxStale
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Cache.HttpRequestCachePolicy
Наследуется от: RequestCachePolicy
Поля:
  HttpRequestCachePolicy BypassCache
  HttpRequestCacheLevel m_Level
  DateTime m_LastSyncDateUtc
  TimeSpan m_MaxAge
  TimeSpan m_MinFresh
  TimeSpan m_MaxStale
Свойства:
  HttpRequestCacheLevel Level
  DateTime CacheSyncDate
  DateTime InternalCacheSyncDateUtc
  TimeSpan MaxAge
  TimeSpan MinFresh
  TimeSpan MaxStale
Методы:
  void .ctor()
  void .ctor(HttpRequestCacheLevel level)
  void .ctor(HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale)
  void .ctor(HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale)
  void .ctor(DateTime cacheSyncDate)
  void .ctor(HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate)
  HttpRequestCacheLevel get_Level()
  DateTime get_CacheSyncDate()
  DateTime get_InternalCacheSyncDateUtc()
  TimeSpan get_MaxAge()
  TimeSpan get_MinFresh()
  TimeSpan get_MaxStale()
  string ToString()
  RequestCacheLevel MapLevel(HttpRequestCacheLevel level)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Cache.RequestCacheProtocol
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor(object arg1, object arg2)
--------------------------------------------------
Класс: System.Net.Sockets.MultipleConnectAsync
Наследуется от: object
Поля:
  SocketAsyncEventArgs _userArgs
  SocketAsyncEventArgs _internalArgs
  DnsEndPoint _endPoint
  IPAddress[] _addressList
  int _nextAddress
  State _state
  object _lockObject
Свойства:
Методы:
  bool StartConnectAsync(SocketAsyncEventArgs args, DnsEndPoint endPoint)
  void DnsCallback(IAsyncResult result)
  bool DoDnsCallback(IAsyncResult result, bool sync)
  void InternalConnectCallback(object sender, SocketAsyncEventArgs args)
  Exception AttemptConnection()
  Exception AttemptConnection(Socket attemptSocket, SocketAsyncEventArgs args)
  void OnSucceed()
  void Succeed()
  void OnFail(bool abortive)
  bool Fail(bool sync, Exception e)
  void SyncFail(Exception e)
  void AsyncFail(Exception e)
  void Cancel()
  void CallAsyncFail(object ignored)
  IPAddress GetNextAddress(Socket& attemptSocket)
  void .ctor()
  void <Cancel>b__20_0(object s)
--------------------------------------------------
Класс: System.Net.Sockets.SingleSocketMultipleConnectAsync
Наследуется от: MultipleConnectAsync
Поля:
  Socket _socket
  bool _userSocket
Свойства:
Методы:
  void .ctor(Socket socket, bool userSocket)
  IPAddress GetNextAddress(Socket& attemptSocket)
  void OnFail(bool abortive)
  void OnSucceed()
--------------------------------------------------
Класс: System.Net.Sockets.DualSocketMultipleConnectAsync
Наследуется от: MultipleConnectAsync
Поля:
  Socket _socket4
  Socket _socket6
Свойства:
Методы:
  void .ctor(SocketType socketType, ProtocolType protocolType)
  IPAddress GetNextAddress(Socket& attemptSocket)
  void OnSucceed()
  void OnFail(bool abortive)
--------------------------------------------------
Класс: System.Net.Sockets.NetworkStream
Наследуется от: Stream
Поля:
  Socket _streamSocket
  bool _ownsSocket
  bool _readable
  bool _writeable
  int _closeTimeout
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _cleanedUp
  int _currentReadTimeout
  int _currentWriteTimeout
Свойства:
  Socket Socket
  bool Readable
  bool Writeable
  bool CanRead
  bool CanSeek
  bool CanWrite
  bool CanTimeout
  int ReadTimeout
  int WriteTimeout
  bool DataAvailable
  long Length
  long Position
  Socket InternalSocket
Методы:
  void .ctor(Socket socket)
  void .ctor(Socket socket, bool ownsSocket)
  void .ctor(Socket socket, FileAccess access)
  void .ctor(Socket socket, FileAccess access, bool ownsSocket)
  Socket get_Socket()
  bool get_Readable()
  void set_Readable(bool value)
  bool get_Writeable()
  void set_Writeable(bool value)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  bool get_CanTimeout()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  bool get_DataAvailable()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int Read(Byte[] buffer, int offset, int size)
  int Read(Span`1<byte> destination)
  int ReadByte()
  void Write(Byte[] buffer, int offset, int size)
  void Write(ReadOnlySpan`1<byte> source)
  void WriteByte(byte value)
  void Close(int timeout)
  void Dispose(bool disposing)
  void Finalize()
  IAsyncResult BeginRead(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int size, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  void SetLength(long value)
  void SetSocketTimeoutOption(SocketShutdown mode, int timeout, bool silent)
  Socket get_InternalSocket()
--------------------------------------------------
Класс: System.Net.Sockets.Socket
Наследуется от: object
Поля:
  EventHandler`1<SocketAsyncEventArgs> AcceptCompletedHandler
  EventHandler`1<SocketAsyncEventArgs> ReceiveCompletedHandler
  EventHandler`1<SocketAsyncEventArgs> SendCompletedHandler
  TaskSocketAsyncEventArgs`1<Socket> s_rentedSocketSentinel
  Int32TaskSocketAsyncEventArgs s_rentedInt32Sentinel
  Task`1<int> s_zeroTask
  CachedEventArgs _cachedTaskEventArgs
  object s_InternalSyncObject
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_SupportsIPv4
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_SupportsIPv6
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_OSSupportsIPv6
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_Initialized
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_LoggingEnabled
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) s_PerfCountersEnabled
  int DefaultCloseTimeout
  int SOCKET_CLOSED_CODE
  string TIMEOUT_EXCEPTION_MSG
  bool is_closed
  bool is_listening
  bool useOverlappedIO
  int linger_timeout
  AddressFamily addressFamily
  SocketType socketType
  ProtocolType protocolType
  SafeSocketHandle m_Handle
  EndPoint seed_endpoint
  SemaphoreSlim ReadSem
  SemaphoreSlim WriteSem
  bool is_blocking
  bool is_bound
  bool is_connected
  int m_IntCleanedUp
  bool connect_in_progress
  int ID
  AsyncCallback AcceptAsyncCallback
  IOAsyncCallback BeginAcceptCallback
  IOAsyncCallback BeginAcceptReceiveCallback
  AsyncCallback ConnectAsyncCallback
  IOAsyncCallback BeginConnectCallback
  AsyncCallback DisconnectAsyncCallback
  IOAsyncCallback BeginDisconnectCallback
  AsyncCallback ReceiveAsyncCallback
  IOAsyncCallback BeginReceiveCallback
  IOAsyncCallback BeginReceiveGenericCallback
  AsyncCallback ReceiveFromAsyncCallback
  IOAsyncCallback BeginReceiveFromCallback
  AsyncCallback SendAsyncCallback
  IOAsyncCallback BeginSendGenericCallback
  AsyncCallback SendToAsyncCallback
Свойства:
  bool SupportsIPv4
  bool OSSupportsIPv4
  bool SupportsIPv6
  bool LegacySupportsIPv6
  bool OSSupportsIPv6
  IntPtr Handle
  bool UseOnlyOverlappedIO
  AddressFamily AddressFamily
  SocketType SocketType
  ProtocolType ProtocolType
  bool ExclusiveAddressUse
  int ReceiveBufferSize
  int SendBufferSize
  int ReceiveTimeout
  int SendTimeout
  LingerOption LingerState
  short Ttl
  bool DontFragment
  bool DualMode
  bool IsDualMode
  object InternalSyncObject
  bool CleanedUp
  int Available
  bool EnableBroadcast
  bool IsBound
  bool MulticastLoopback
  EndPoint LocalEndPoint
  bool Blocking
  bool Connected
  bool NoDelay
  EndPoint RemoteEndPoint
  SafeHandle SafeHandle
  int FamilyHint
Методы:
  Task`1<Socket> AcceptAsync(Socket acceptSocket)
  Task`1<Socket> AcceptAsyncApm(Socket acceptSocket)
  Task ConnectAsync(EndPoint remoteEP)
  Task ConnectAsync(IPAddress address, int port)
  Task ConnectAsync(IPAddress[] addresses, int port)
  Task ConnectAsync(string host, int port)
  Task`1<int> ReceiveAsync(ArraySegment`1<byte> buffer, SocketFlags socketFlags, bool fromNetworkStream)
  ValueTask`1<int> ReceiveAsync(Memory`1<byte> buffer, SocketFlags socketFlags, bool fromNetworkStream, CancellationToken cancellationToken)
  Task`1<int> ReceiveAsyncApm(Memory`1<byte> buffer, SocketFlags socketFlags)
  Task`1<int> ReceiveAsync(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<int> ReceiveAsyncApm(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<SocketReceiveFromResult> ReceiveFromAsync(ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint)
  Task`1<SocketReceiveMessageFromResult> ReceiveMessageFromAsync(ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint)
  Task`1<int> SendAsync(ArraySegment`1<byte> buffer, SocketFlags socketFlags)
  ValueTask`1<int> SendAsync(ReadOnlyMemory`1<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken)
  ValueTask SendAsyncForNetworkStream(ReadOnlyMemory`1<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken)
  Task`1<int> SendAsyncApm(ReadOnlyMemory`1<byte> buffer, SocketFlags socketFlags)
  Task`1<int> SendAsync(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<int> SendAsyncApm(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<int> SendToAsync(ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEP)
  void ValidateBuffer(ArraySegment`1<byte> buffer)
  void ValidateBuffersList(IList`1<ArraySegment`1<byte>> buffers)
  void ConfigureBufferList(Int32TaskSocketAsyncEventArgs saea, IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<int> GetTaskForSendReceive(bool pending, Int32TaskSocketAsyncEventArgs saea, bool fromNetworkStream, bool isReceive)
  void CompleteAccept(Socket s, TaskSocketAsyncEventArgs`1<Socket> saea)
  void CompleteSendReceive(Socket s, Int32TaskSocketAsyncEventArgs saea, bool isReceive)
  Exception GetException(SocketError error, bool wrapExceptionsInIOExceptions)
  Int32TaskSocketAsyncEventArgs RentSocketAsyncEventArgs(bool isReceive)
  void ReturnSocketAsyncEventArgs(Int32TaskSocketAsyncEventArgs saea, bool isReceive)
  void ReturnSocketAsyncEventArgs(TaskSocketAsyncEventArgs`1<Socket> saea)
  void DisposeCachedTaskSocketAsyncEventArgs()
  void .ctor(SocketType socketType, ProtocolType protocolType)
  void .ctor(AddressFamily addressFamily, SocketType socketType, ProtocolType protocolType)
  bool get_SupportsIPv4()
  bool get_OSSupportsIPv4()
  bool get_SupportsIPv6()
  bool get_LegacySupportsIPv6()
  bool get_OSSupportsIPv6()
  IntPtr get_Handle()
  bool get_UseOnlyOverlappedIO()
  void set_UseOnlyOverlappedIO(bool value)
  AddressFamily get_AddressFamily()
  SocketType get_SocketType()
  ProtocolType get_ProtocolType()
  bool get_ExclusiveAddressUse()
  void set_ExclusiveAddressUse(bool value)
  int get_ReceiveBufferSize()
  void set_ReceiveBufferSize(int value)
  int get_SendBufferSize()
  void set_SendBufferSize(int value)
  int get_ReceiveTimeout()
  void set_ReceiveTimeout(int value)
  int get_SendTimeout()
  void set_SendTimeout(int value)
  LingerOption get_LingerState()
  void set_LingerState(LingerOption value)
  short get_Ttl()
  void set_Ttl(short value)
  bool get_DontFragment()
  void set_DontFragment(bool value)
  bool get_DualMode()
  void set_DualMode(bool value)
  bool get_IsDualMode()
  bool CanTryAddressFamily(AddressFamily family)
  void Connect(IPAddress[] addresses, int port)
  int Send(Byte[] buffer, int size, SocketFlags socketFlags)
  int Send(Byte[] buffer, SocketFlags socketFlags)
  int Send(Byte[] buffer)
  int Send(IList`1<ArraySegment`1<byte>> buffers)
  int Send(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  void SendFile(string fileName)
  int Send(Byte[] buffer, int offset, int size, SocketFlags socketFlags)
  int SendTo(Byte[] buffer, int size, SocketFlags socketFlags, EndPoint remoteEP)
  int SendTo(Byte[] buffer, SocketFlags socketFlags, EndPoint remoteEP)
  int SendTo(Byte[] buffer, EndPoint remoteEP)
  int Receive(Byte[] buffer, int size, SocketFlags socketFlags)
  int Receive(Byte[] buffer, SocketFlags socketFlags)
  int Receive(Byte[] buffer)
  int Receive(Byte[] buffer, int offset, int size, SocketFlags socketFlags)
  int Receive(IList`1<ArraySegment`1<byte>> buffers)
  int Receive(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  int ReceiveFrom(Byte[] buffer, int size, SocketFlags socketFlags, EndPoint& remoteEP)
  int ReceiveFrom(Byte[] buffer, SocketFlags socketFlags, EndPoint& remoteEP)
  int ReceiveFrom(Byte[] buffer, EndPoint& remoteEP)
  int IOControl(IOControlCode ioControlCode, Byte[] optionInValue, Byte[] optionOutValue)
  void SetIPProtectionLevel(IPProtectionLevel level)
  IAsyncResult BeginSendFile(string fileName, AsyncCallback callback, object state)
  IAsyncResult BeginConnect(IPAddress address, int port, AsyncCallback requestCallback, object state)
  IAsyncResult BeginSend(Byte[] buffer, int offset, int size, SocketFlags socketFlags, AsyncCallback callback, object state)
  IAsyncResult BeginSend(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags, AsyncCallback callback, object state)
  int EndSend(IAsyncResult asyncResult)
  IAsyncResult BeginReceive(Byte[] buffer, int offset, int size, SocketFlags socketFlags, AsyncCallback callback, object state)
  IAsyncResult BeginReceive(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags, AsyncCallback callback, object state)
  int EndReceive(IAsyncResult asyncResult)
  IAsyncResult BeginAccept(int receiveSize, AsyncCallback callback, object state)
  Socket EndAccept(Byte[]& buffer, IAsyncResult asyncResult)
  object get_InternalSyncObject()
  bool get_CleanedUp()
  void InitializeSockets()
  void Dispose()
  void Finalize()
  bool ConnectAsync(SocketType socketType, ProtocolType protocolType, SocketAsyncEventArgs e)
  void InternalShutdown(SocketShutdown how)
  IAsyncResult UnsafeBeginConnect(EndPoint remoteEP, AsyncCallback callback, object state)
  IAsyncResult UnsafeBeginSend(Byte[] buffer, int offset, int size, SocketFlags socketFlags, AsyncCallback callback, object state)
  IAsyncResult UnsafeBeginReceive(Byte[] buffer, int offset, int size, SocketFlags socketFlags, AsyncCallback callback, object state)
  IAsyncResult BeginMultipleSend(BufferOffsetSize[] buffers, SocketFlags socketFlags, AsyncCallback callback, object state)
  IAsyncResult UnsafeBeginMultipleSend(BufferOffsetSize[] buffers, SocketFlags socketFlags, AsyncCallback callback, object state)
  int EndMultipleSend(IAsyncResult asyncResult)
  void MultipleSend(BufferOffsetSize[] buffers, SocketFlags socketFlags)
  void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue, bool silent)
  void .ctor(SocketInformation socketInformation)
  void .ctor(AddressFamily family, SocketType type, ProtocolType proto, SafeSocketHandle safe_handle)
  void SocketDefaults()
  IntPtr Socket_icall(AddressFamily family, SocketType type, ProtocolType proto, Int32& error)
  int get_Available()
  int Available_internal(SafeSocketHandle safeHandle, Int32& error)
  int Available_icall(IntPtr socket, Int32& error)
  bool get_EnableBroadcast()
  void set_EnableBroadcast(bool value)
  bool get_IsBound()
  bool get_MulticastLoopback()
  void set_MulticastLoopback(bool value)
  EndPoint get_LocalEndPoint()
  SocketAddress LocalEndPoint_internal(SafeSocketHandle safeHandle, int family, Int32& error)
  SocketAddress LocalEndPoint_icall(IntPtr socket, int family, Int32& error)
  bool get_Blocking()
  void set_Blocking(bool value)
  void Blocking_internal(SafeSocketHandle safeHandle, bool block, Int32& error)
  void Blocking_icall(IntPtr socket, bool block, Int32& error)
  bool get_Connected()
  void set_Connected(bool value)
  bool get_NoDelay()
  void set_NoDelay(bool value)
  EndPoint get_RemoteEndPoint()
  SocketAddress RemoteEndPoint_internal(SafeSocketHandle safeHandle, int family, Int32& error)
  SocketAddress RemoteEndPoint_icall(IntPtr socket, int family, Int32& error)
  SafeHandle get_SafeHandle()
  void Select(IList checkRead, IList checkWrite, IList checkError, int microSeconds)
  void AddSockets(List`1<Socket> sockets, IList list, string name)
  void Select_icall(Socket[]& sockets, int microSeconds, Int32& error)
  bool Poll(int microSeconds, SelectMode mode)
  bool Poll_internal(SafeSocketHandle safeHandle, SelectMode mode, int timeout, Int32& error)
  bool Poll_icall(IntPtr socket, SelectMode mode, int timeout, Int32& error)
  Socket Accept()
  void Accept(Socket acceptSocket)
  bool AcceptAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginAccept(AsyncCallback callback, object state)
  IAsyncResult BeginAccept(Socket acceptSocket, int receiveSize, AsyncCallback callback, object state)
  Socket EndAccept(IAsyncResult asyncResult)
  Socket EndAccept(Byte[]& buffer, Int32& bytesTransferred, IAsyncResult asyncResult)
  SafeSocketHandle Accept_internal(SafeSocketHandle safeHandle, Int32& error, bool blocking)
  IntPtr Accept_icall(IntPtr sock, Int32& error, bool blocking)
  void Bind(EndPoint localEP)
  void Bind_internal(SafeSocketHandle safeHandle, SocketAddress sa, Int32& error)
  void Bind_icall(IntPtr sock, SocketAddress sa, Int32& error)
  void Listen(int backlog)
  void Listen_internal(SafeSocketHandle safeHandle, int backlog, Int32& error)
  void Listen_icall(IntPtr sock, int backlog, Int32& error)
  void Connect(IPAddress address, int port)
  void Connect(string host, int port)
  void Connect(EndPoint remoteEP)
  bool ConnectAsync(SocketAsyncEventArgs e)
  void CancelConnectAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginConnect(string host, int port, AsyncCallback callback, object state)
  IAsyncResult BeginConnect(EndPoint remoteEP, AsyncCallback callback, object state)
  IAsyncResult BeginConnect(IPAddress[] addresses, int port, AsyncCallback requestCallback, object state)
  bool BeginMConnect(SocketAsyncResult sockares)
  bool BeginSConnect(SocketAsyncResult sockares)
  void EndConnect(IAsyncResult asyncResult)
  void Connect_internal(SafeSocketHandle safeHandle, SocketAddress sa, Int32& error, bool blocking)
  void Connect_icall(IntPtr sock, SocketAddress sa, Int32& error, bool blocking)
  bool GetCheckedIPs(SocketAsyncEventArgs e, IPAddress[]& addresses)
  void Disconnect(bool reuseSocket)
  bool DisconnectAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginDisconnect(bool reuseSocket, AsyncCallback callback, object state)
  void EndDisconnect(IAsyncResult asyncResult)
  void Disconnect_internal(SafeSocketHandle safeHandle, bool reuse, Int32& error)
  void Disconnect_icall(IntPtr sock, bool reuse, Int32& error)
  int Receive(Byte[] buffer, int offset, int size, SocketFlags socketFlags, SocketError& errorCode)
  int Receive(Memory`1<byte> buffer, int offset, int size, SocketFlags socketFlags, SocketError& errorCode)
  int Receive(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags, SocketError& errorCode)
  int Receive(Span`1<byte> buffer, SocketFlags socketFlags, SocketError& errorCode)
  int Send(ReadOnlySpan`1<byte> buffer, SocketFlags socketFlags, SocketError& errorCode)
  int Receive(Span`1<byte> buffer, SocketFlags socketFlags)
  int Receive(Span`1<byte> buffer)
  bool ReceiveAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginReceive(Byte[] buffer, int offset, int size, SocketFlags socketFlags, SocketError& errorCode, AsyncCallback callback, object state)
  IAsyncResult BeginReceive(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags, SocketError& errorCode, AsyncCallback callback, object state)
  int EndReceive(IAsyncResult asyncResult, SocketError& errorCode)
  int Receive_internal(SafeSocketHandle safeHandle, WSABUF* bufarray, int count, SocketFlags flags, Int32& error, bool blocking)
  int Receive_array_icall(IntPtr sock, WSABUF* bufarray, int count, SocketFlags flags, Int32& error, bool blocking)
  int Receive_internal(SafeSocketHandle safeHandle, Byte* buffer, int count, SocketFlags flags, Int32& error, bool blocking)
  int Receive_icall(IntPtr sock, Byte* buffer, int count, SocketFlags flags, Int32& error, bool blocking)
  int ReceiveFrom(Byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint& remoteEP)
  int ReceiveFrom(Byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint& remoteEP, SocketError& errorCode)
  int ReceiveFrom(Memory`1<byte> buffer, int offset, int size, SocketFlags socketFlags, EndPoint& remoteEP, SocketError& errorCode)
  bool ReceiveFromAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginReceiveFrom(Byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint& remoteEP, AsyncCallback callback, object state)
  int EndReceiveFrom(IAsyncResult asyncResult, EndPoint& endPoint)
  int EndReceiveFrom_internal(SocketAsyncResult sockares, SocketAsyncEventArgs ares)
  int ReceiveFrom_internal(SafeSocketHandle safeHandle, Byte* buffer, int count, SocketFlags flags, SocketAddress& sockaddr, Int32& error, bool blocking)
  int ReceiveFrom_icall(IntPtr sock, Byte* buffer, int count, SocketFlags flags, SocketAddress& sockaddr, Int32& error, bool blocking)
  int ReceiveMessageFrom(Byte[] buffer, int offset, int size, SocketFlags& socketFlags, EndPoint& remoteEP, IPPacketInformation& ipPacketInformation)
  bool ReceiveMessageFromAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginReceiveMessageFrom(Byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint& remoteEP, AsyncCallback callback, object state)
  int EndReceiveMessageFrom(IAsyncResult asyncResult, SocketFlags& socketFlags, EndPoint& endPoint, IPPacketInformation& ipPacketInformation)
  int Send(Byte[] buffer, int offset, int size, SocketFlags socketFlags, SocketError& errorCode)
  int Send(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags, SocketError& errorCode)
  int Send(ReadOnlySpan`1<byte> buffer, SocketFlags socketFlags)
  int Send(ReadOnlySpan`1<byte> buffer)
  bool SendAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginSend(Byte[] buffer, int offset, int size, SocketFlags socketFlags, SocketError& errorCode, AsyncCallback callback, object state)
  void BeginSendCallback(SocketAsyncResult sockares, int sent_so_far)
  IAsyncResult BeginSend(IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags, SocketError& errorCode, AsyncCallback callback, object state)
  int EndSend(IAsyncResult asyncResult, SocketError& errorCode)
  int Send_internal(SafeSocketHandle safeHandle, WSABUF* bufarray, int count, SocketFlags flags, Int32& error, bool blocking)
  int Send_array_icall(IntPtr sock, WSABUF* bufarray, int count, SocketFlags flags, Int32& error, bool blocking)
  int Send_internal(SafeSocketHandle safeHandle, Byte* buffer, int count, SocketFlags flags, Int32& error, bool blocking)
  int Send_icall(IntPtr sock, Byte* buffer, int count, SocketFlags flags, Int32& error, bool blocking)
  int SendTo(Byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint remoteEP)
  int SendTo(Memory`1<byte> buffer, int offset, int size, SocketFlags socketFlags, EndPoint remoteEP)
  bool SendToAsync(SocketAsyncEventArgs e)
  IAsyncResult BeginSendTo(Byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint remoteEP, AsyncCallback callback, object state)
  void BeginSendToCallback(SocketAsyncResult sockares, int sent_so_far)
  int EndSendTo(IAsyncResult asyncResult)
  int SendTo_internal(SafeSocketHandle safeHandle, Byte* buffer, int count, SocketFlags flags, SocketAddress sa, Int32& error, bool blocking)
  int SendTo_icall(IntPtr sock, Byte* buffer, int count, SocketFlags flags, SocketAddress sa, Int32& error, bool blocking)
  void SendFile(string fileName, Byte[] preBuffer, Byte[] postBuffer, TransmitFileOptions flags)
  IAsyncResult BeginSendFile(string fileName, Byte[] preBuffer, Byte[] postBuffer, TransmitFileOptions flags, AsyncCallback callback, object state)
  void EndSendFile(IAsyncResult asyncResult)
  bool SendFile_internal(SafeSocketHandle safeHandle, string filename, Byte[] pre_buffer, Byte[] post_buffer, TransmitFileOptions flags, Int32& error, bool blocking)
  bool SendFile_icall(IntPtr sock, string filename, Byte[] pre_buffer, Byte[] post_buffer, TransmitFileOptions flags, Int32& error, bool blocking)
  bool SendPacketsAsync(SocketAsyncEventArgs e)
  bool Duplicate_icall(IntPtr handle, int targetProcessId, IntPtr& duplicateHandle, MonoIOError& error)
  SocketInformation DuplicateAndClose(int targetProcessId)
  void GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, Byte[] optionValue)
  Byte[] GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionLength)
  object GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName)
  void GetSocketOption_arr_internal(SafeSocketHandle safeHandle, SocketOptionLevel level, SocketOptionName name, Byte[]& byte_val, Int32& error)
  void GetSocketOption_arr_icall(IntPtr socket, SocketOptionLevel level, SocketOptionName name, Byte[]& byte_val, Int32& error)
  void GetSocketOption_obj_internal(SafeSocketHandle safeHandle, SocketOptionLevel level, SocketOptionName name, Object& obj_val, Int32& error)
  void GetSocketOption_obj_icall(IntPtr socket, SocketOptionLevel level, SocketOptionName name, Object& obj_val, Int32& error)
  void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, Byte[] optionValue)
  void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, object optionValue)
  void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, bool optionValue)
  void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue)
  void SetSocketOption_internal(SafeSocketHandle safeHandle, SocketOptionLevel level, SocketOptionName name, object obj_val, Byte[] byte_val, int int_val, Int32& error)
  void SetSocketOption_icall(IntPtr socket, SocketOptionLevel level, SocketOptionName name, object obj_val, Byte[] byte_val, int int_val, Int32& error)
  int IOControl(int ioControlCode, Byte[] optionInValue, Byte[] optionOutValue)
  int IOControl_internal(SafeSocketHandle safeHandle, int ioctl_code, Byte[] input, Byte[] output, Int32& error)
  int IOControl_icall(IntPtr sock, int ioctl_code, Byte[] input, Byte[] output, Int32& error)
  void Close()
  void Close(int timeout)
  void Close_icall(IntPtr socket, Int32& error)
  void Shutdown(SocketShutdown how)
  void Shutdown_internal(SafeSocketHandle safeHandle, SocketShutdown how, Int32& error)
  void Shutdown_icall(IntPtr socket, SocketShutdown how, Int32& error)
  void Dispose(bool disposing)
  void Linger(IntPtr handle)
  void ThrowIfDisposedAndClosed(Socket socket)
  void ThrowIfDisposedAndClosed()
  void ThrowIfBufferNull(Byte[] buffer)
  void ThrowIfBufferOutOfRange(Byte[] buffer, int offset, int size)
  void ThrowIfUdp()
  SocketAsyncResult ValidateEndIAsyncResult(IAsyncResult ares, string methodName, string argName)
  void QueueIOSelectorJob(SemaphoreSlim sem, IntPtr handle, IOSelectorJob job)
  void InitSocketAsyncEventArgs(SocketAsyncEventArgs e, AsyncCallback callback, object state, SocketOperation operation)
  SocketAsyncOperation SocketOperationToSocketAsyncOperation(SocketOperation op)
  IPEndPoint RemapIPEndPoint(IPEndPoint input)
  void cancel_blocking_socket_operation(Thread thread)
  bool SupportsPortReuse(ProtocolType proto)
  int get_FamilyHint()
  bool IsProtocolSupported_internal(NetworkInterfaceComponent networkInterface)
  bool IsProtocolSupported(NetworkInterfaceComponent networkInterface)
  void ReplaceHandleIfNecessaryAfterFailedConnect()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Sockets.SocketException
Наследуется от: Win32Exception
Поля:
  EndPoint m_EndPoint
Свойства:
  int ErrorCode
  string Message
  SocketError SocketErrorCode
Методы:
  int WSAGetLastError_icall()
  void .ctor()
  void .ctor(int error, string message)
  void .ctor(EndPoint endPoint)
  void .ctor(int errorCode)
  void .ctor(int errorCode, EndPoint endPoint)
  void .ctor(SocketError socketError)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  int get_ErrorCode()
  string get_Message()
  SocketError get_SocketErrorCode()
--------------------------------------------------
Класс: System.Net.Sockets.AddressFamily
Наследуется от: Enum
Поля:
  int value__
  AddressFamily Unknown
  AddressFamily Unspecified
  AddressFamily Unix
  AddressFamily InterNetwork
  AddressFamily ImpLink
  AddressFamily Pup
  AddressFamily Chaos
  AddressFamily NS
  AddressFamily Ipx
  AddressFamily Iso
  AddressFamily Osi
  AddressFamily Ecma
  AddressFamily DataKit
  AddressFamily Ccitt
  AddressFamily Sna
  AddressFamily DecNet
  AddressFamily DataLink
  AddressFamily Lat
  AddressFamily HyperChannel
  AddressFamily AppleTalk
  AddressFamily NetBios
  AddressFamily VoiceView
  AddressFamily FireFox
  AddressFamily Banyan
  AddressFamily Atm
  AddressFamily InterNetworkV6
  AddressFamily Cluster
  AddressFamily Ieee12844
  AddressFamily Irda
  AddressFamily NetworkDesigners
  AddressFamily Max
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.IOControlCode
Наследуется от: Enum
Поля:
  long value__
  IOControlCode AsyncIO
  IOControlCode NonBlockingIO
  IOControlCode DataToRead
  IOControlCode OobDataRead
  IOControlCode AssociateHandle
  IOControlCode EnableCircularQueuing
  IOControlCode Flush
  IOControlCode GetBroadcastAddress
  IOControlCode GetExtensionFunctionPointer
  IOControlCode GetQos
  IOControlCode GetGroupQos
  IOControlCode MultipointLoopback
  IOControlCode MulticastScope
  IOControlCode SetQos
  IOControlCode SetGroupQos
  IOControlCode TranslateHandle
  IOControlCode RoutingInterfaceQuery
  IOControlCode RoutingInterfaceChange
  IOControlCode AddressListQuery
  IOControlCode AddressListChange
  IOControlCode QueryTargetPnpHandle
  IOControlCode NamespaceChange
  IOControlCode AddressListSort
  IOControlCode ReceiveAll
  IOControlCode ReceiveAllMulticast
  IOControlCode ReceiveAllIgmpMulticast
  IOControlCode KeepAliveValues
  IOControlCode AbsorbRouterAlert
  IOControlCode UnicastInterface
  IOControlCode LimitBroadcasts
  IOControlCode BindToInterface
  IOControlCode MulticastInterface
  IOControlCode AddMulticastGroupOnInterface
  IOControlCode DeleteMulticastGroupFromInterface
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.IPPacketInformation
Наследуется от: ValueType
Поля:
  IPAddress address
  int networkInterface
Свойства:
  IPAddress Address
  int Interface
Методы:
  void .ctor(IPAddress address, int networkInterface)
  IPAddress get_Address()
  int get_Interface()
  bool op_Equality(IPPacketInformation packetInformation1, IPPacketInformation packetInformation2)
  bool op_Inequality(IPPacketInformation packetInformation1, IPPacketInformation packetInformation2)
  bool Equals(object comparand)
  int GetHashCode()
--------------------------------------------------
Класс: System.Net.Sockets.IPProtectionLevel
Наследуется от: Enum
Поля:
  int value__
  IPProtectionLevel Unspecified
  IPProtectionLevel Unrestricted
  IPProtectionLevel EdgeRestricted
  IPProtectionLevel Restricted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.LingerOption
Наследуется от: object
Поля:
  bool enabled
  int lingerTime
Свойства:
  bool Enabled
  int LingerTime
Методы:
  void .ctor(bool enable, int seconds)
  bool get_Enabled()
  void set_Enabled(bool value)
  int get_LingerTime()
  void set_LingerTime(int value)
--------------------------------------------------
Класс: System.Net.Sockets.MulticastOption
Наследуется от: object
Поля:
  IPAddress group
  IPAddress localAddress
  int ifIndex
Свойства:
  IPAddress Group
  IPAddress LocalAddress
  int InterfaceIndex
Методы:
  void .ctor(IPAddress group, IPAddress mcint)
  void .ctor(IPAddress group, int interfaceIndex)
  void .ctor(IPAddress group)
  IPAddress get_Group()
  void set_Group(IPAddress value)
  IPAddress get_LocalAddress()
  void set_LocalAddress(IPAddress value)
  int get_InterfaceIndex()
  void set_InterfaceIndex(int value)
--------------------------------------------------
Класс: System.Net.Sockets.IPv6MulticastOption
Наследуется от: object
Поля:
  IPAddress m_Group
  long m_Interface
Свойства:
  IPAddress Group
  long InterfaceIndex
Методы:
  void .ctor(IPAddress group, long ifindex)
  void .ctor(IPAddress group)
  IPAddress get_Group()
  void set_Group(IPAddress value)
  long get_InterfaceIndex()
  void set_InterfaceIndex(long value)
--------------------------------------------------
Класс: System.Net.Sockets.ProtocolFamily
Наследуется от: Enum
Поля:
  int value__
  ProtocolFamily Unknown
  ProtocolFamily Unspecified
  ProtocolFamily Unix
  ProtocolFamily InterNetwork
  ProtocolFamily ImpLink
  ProtocolFamily Pup
  ProtocolFamily Chaos
  ProtocolFamily NS
  ProtocolFamily Ipx
  ProtocolFamily Iso
  ProtocolFamily Osi
  ProtocolFamily Ecma
  ProtocolFamily DataKit
  ProtocolFamily Ccitt
  ProtocolFamily Sna
  ProtocolFamily DecNet
  ProtocolFamily DataLink
  ProtocolFamily Lat
  ProtocolFamily HyperChannel
  ProtocolFamily AppleTalk
  ProtocolFamily NetBios
  ProtocolFamily VoiceView
  ProtocolFamily FireFox
  ProtocolFamily Banyan
  ProtocolFamily Atm
  ProtocolFamily InterNetworkV6
  ProtocolFamily Cluster
  ProtocolFamily Ieee12844
  ProtocolFamily Irda
  ProtocolFamily NetworkDesigners
  ProtocolFamily Max
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.ProtocolType
Наследуется от: Enum
Поля:
  int value__
  ProtocolType IP
  ProtocolType IPv6HopByHopOptions
  ProtocolType Icmp
  ProtocolType Igmp
  ProtocolType Ggp
  ProtocolType IPv4
  ProtocolType Tcp
  ProtocolType Pup
  ProtocolType Udp
  ProtocolType Idp
  ProtocolType IPv6
  ProtocolType IPv6RoutingHeader
  ProtocolType IPv6FragmentHeader
  ProtocolType IPSecEncapsulatingSecurityPayload
  ProtocolType IPSecAuthenticationHeader
  ProtocolType IcmpV6
  ProtocolType IPv6NoNextHeader
  ProtocolType IPv6DestinationOptions
  ProtocolType ND
  ProtocolType Raw
  ProtocolType Unspecified
  ProtocolType Ipx
  ProtocolType Spx
  ProtocolType SpxII
  ProtocolType Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SelectMode
Наследуется от: Enum
Поля:
  int value__
  SelectMode SelectRead
  SelectMode SelectWrite
  SelectMode SelectError
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketAsyncOperation
Наследуется от: Enum
Поля:
  int value__
  SocketAsyncOperation None
  SocketAsyncOperation Accept
  SocketAsyncOperation Connect
  SocketAsyncOperation Disconnect
  SocketAsyncOperation Receive
  SocketAsyncOperation ReceiveFrom
  SocketAsyncOperation ReceiveMessageFrom
  SocketAsyncOperation Send
  SocketAsyncOperation SendPackets
  SocketAsyncOperation SendTo
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SendPacketsElement
Наследуется от: object
Поля:
  string m_FilePath
  Byte[] m_Buffer
  int m_Offset
  int m_Count
  bool m_endOfPacket
Свойства:
  string FilePath
  Byte[] Buffer
  int Count
  int Offset
  bool EndOfPacket
Методы:
  void .ctor()
  void .ctor(string filepath)
  void .ctor(string filepath, int offset, int count)
  void .ctor(string filepath, int offset, int count, bool endOfPacket)
  void .ctor(Byte[] buffer)
  void .ctor(Byte[] buffer, int offset, int count)
  void .ctor(Byte[] buffer, int offset, int count, bool endOfPacket)
  void Initialize(string filePath, Byte[] buffer, int offset, int count, bool endOfPacket)
  string get_FilePath()
  Byte[] get_Buffer()
  int get_Count()
  int get_Offset()
  bool get_EndOfPacket()
--------------------------------------------------
Класс: System.Net.Sockets.SocketClientAccessPolicyProtocol
Наследуется от: Enum
Поля:
  int value__
  SocketClientAccessPolicyProtocol Tcp
  SocketClientAccessPolicyProtocol Http
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketError
Наследуется от: Enum
Поля:
  int value__
  SocketError Success
  SocketError SocketError
  SocketError Interrupted
  SocketError AccessDenied
  SocketError Fault
  SocketError InvalidArgument
  SocketError TooManyOpenSockets
  SocketError WouldBlock
  SocketError InProgress
  SocketError AlreadyInProgress
  SocketError NotSocket
  SocketError DestinationAddressRequired
  SocketError MessageSize
  SocketError ProtocolType
  SocketError ProtocolOption
  SocketError ProtocolNotSupported
  SocketError SocketNotSupported
  SocketError OperationNotSupported
  SocketError ProtocolFamilyNotSupported
  SocketError AddressFamilyNotSupported
  SocketError AddressAlreadyInUse
  SocketError AddressNotAvailable
  SocketError NetworkDown
  SocketError NetworkUnreachable
  SocketError NetworkReset
  SocketError ConnectionAborted
  SocketError ConnectionReset
  SocketError NoBufferSpaceAvailable
  SocketError IsConnected
  SocketError NotConnected
  SocketError Shutdown
  SocketError TimedOut
  SocketError ConnectionRefused
  SocketError HostDown
  SocketError HostUnreachable
  SocketError ProcessLimit
  SocketError SystemNotReady
  SocketError VersionNotSupported
  SocketError NotInitialized
  SocketError Disconnecting
  SocketError TypeNotFound
  SocketError HostNotFound
  SocketError TryAgain
  SocketError NoRecovery
  SocketError NoData
  SocketError IOPending
  SocketError OperationAborted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketFlags
Наследуется от: Enum
Поля:
  int value__
  SocketFlags None
  SocketFlags OutOfBand
  SocketFlags Peek
  SocketFlags DontRoute
  SocketFlags MaxIOVectorLength
  SocketFlags Truncated
  SocketFlags ControlDataTruncated
  SocketFlags Broadcast
  SocketFlags Multicast
  SocketFlags Partial
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketInformation
Наследуется от: ValueType
Поля:
  Byte[] protocolInformation
  SocketInformationOptions options
  EndPoint remoteEndPoint
Свойства:
  Byte[] ProtocolInformation
  SocketInformationOptions Options
  bool IsNonBlocking
  bool IsConnected
  bool IsListening
  bool UseOnlyOverlappedIO
  EndPoint RemoteEndPoint
Методы:
  Byte[] get_ProtocolInformation()
  void set_ProtocolInformation(Byte[] value)
  SocketInformationOptions get_Options()
  void set_Options(SocketInformationOptions value)
  bool get_IsNonBlocking()
  void set_IsNonBlocking(bool value)
  bool get_IsConnected()
  void set_IsConnected(bool value)
  bool get_IsListening()
  void set_IsListening(bool value)
  bool get_UseOnlyOverlappedIO()
  void set_UseOnlyOverlappedIO(bool value)
  EndPoint get_RemoteEndPoint()
  void set_RemoteEndPoint(EndPoint value)
--------------------------------------------------
Класс: System.Net.Sockets.SocketInformationOptions
Наследуется от: Enum
Поля:
  int value__
  SocketInformationOptions NonBlocking
  SocketInformationOptions Connected
  SocketInformationOptions Listening
  SocketInformationOptions UseOnlyOverlappedIO
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketOptionLevel
Наследуется от: Enum
Поля:
  int value__
  SocketOptionLevel Socket
  SocketOptionLevel IP
  SocketOptionLevel IPv6
  SocketOptionLevel Tcp
  SocketOptionLevel Udp
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketOptionName
Наследуется от: Enum
Поля:
  int value__
  SocketOptionName Debug
  SocketOptionName AcceptConnection
  SocketOptionName ReuseAddress
  SocketOptionName KeepAlive
  SocketOptionName DontRoute
  SocketOptionName Broadcast
  SocketOptionName UseLoopback
  SocketOptionName Linger
  SocketOptionName OutOfBandInline
  SocketOptionName DontLinger
  SocketOptionName ExclusiveAddressUse
  SocketOptionName SendBuffer
  SocketOptionName ReceiveBuffer
  SocketOptionName SendLowWater
  SocketOptionName ReceiveLowWater
  SocketOptionName SendTimeout
  SocketOptionName ReceiveTimeout
  SocketOptionName Error
  SocketOptionName Type
  SocketOptionName ReuseUnicastPort
  SocketOptionName MaxConnections
  SocketOptionName IPOptions
  SocketOptionName HeaderIncluded
  SocketOptionName TypeOfService
  SocketOptionName IpTimeToLive
  SocketOptionName MulticastInterface
  SocketOptionName MulticastTimeToLive
  SocketOptionName MulticastLoopback
  SocketOptionName AddMembership
  SocketOptionName DropMembership
  SocketOptionName DontFragment
  SocketOptionName AddSourceMembership
  SocketOptionName DropSourceMembership
  SocketOptionName BlockSource
  SocketOptionName UnblockSource
  SocketOptionName PacketInformation
  SocketOptionName HopLimit
  SocketOptionName IPProtectionLevel
  SocketOptionName IPv6Only
  SocketOptionName NoDelay
  SocketOptionName BsdUrgent
  SocketOptionName Expedited
  SocketOptionName NoChecksum
  SocketOptionName ChecksumCoverage
  SocketOptionName UpdateAcceptContext
  SocketOptionName UpdateConnectContext
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketShutdown
Наследуется от: Enum
Поля:
  int value__
  SocketShutdown Receive
  SocketShutdown Send
  SocketShutdown Both
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketType
Наследуется от: Enum
Поля:
  int value__
  SocketType Stream
  SocketType Dgram
  SocketType Raw
  SocketType Rdm
  SocketType Seqpacket
  SocketType Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.TcpClient
Наследуется от: object
Поля:
  Socket m_ClientSocket
  bool m_Active
  NetworkStream m_DataStream
  AddressFamily m_Family
  bool m_CleanedUp
Свойства:
  Socket Client
  bool Active
  int Available
  bool Connected
  bool ExclusiveAddressUse
  int ReceiveBufferSize
  int SendBufferSize
  int ReceiveTimeout
  int SendTimeout
  LingerOption LingerState
  bool NoDelay
Методы:
  void .ctor(IPEndPoint localEP)
  void .ctor()
  void .ctor(AddressFamily family)
  void .ctor(string hostname, int port)
  void .ctor(Socket acceptedSocket)
  Socket get_Client()
  void set_Client(Socket value)
  bool get_Active()
  void set_Active(bool value)
  int get_Available()
  bool get_Connected()
  bool get_ExclusiveAddressUse()
  void set_ExclusiveAddressUse(bool value)
  void Connect(string hostname, int port)
  void Connect(IPAddress address, int port)
  void Connect(IPEndPoint remoteEP)
  void Connect(IPAddress[] ipAddresses, int port)
  IAsyncResult BeginConnect(string host, int port, AsyncCallback requestCallback, object state)
  IAsyncResult BeginConnect(IPAddress address, int port, AsyncCallback requestCallback, object state)
  IAsyncResult BeginConnect(IPAddress[] addresses, int port, AsyncCallback requestCallback, object state)
  void EndConnect(IAsyncResult asyncResult)
  Task ConnectAsync(IPAddress address, int port)
  Task ConnectAsync(string host, int port)
  Task ConnectAsync(IPAddress[] addresses, int port)
  NetworkStream GetStream()
  void Close()
  void Dispose(bool disposing)
  void Dispose()
  void Finalize()
  int get_ReceiveBufferSize()
  void set_ReceiveBufferSize(int value)
  int get_SendBufferSize()
  void set_SendBufferSize(int value)
  int get_ReceiveTimeout()
  void set_ReceiveTimeout(int value)
  int get_SendTimeout()
  void set_SendTimeout(int value)
  LingerOption get_LingerState()
  void set_LingerState(LingerOption value)
  bool get_NoDelay()
  void set_NoDelay(bool value)
  void initialize()
  int numericOption(SocketOptionLevel optionLevel, SocketOptionName optionName)
--------------------------------------------------
Класс: System.Net.Sockets.TcpListener
Наследуется от: object
Поля:
  IPEndPoint m_ServerSocketEP
  Socket m_ServerSocket
  bool m_Active
  bool m_ExclusiveAddressUse
Свойства:
  Socket Server
  bool Active
  EndPoint LocalEndpoint
  bool ExclusiveAddressUse
Методы:
  void .ctor(IPEndPoint localEP)
  void .ctor(IPAddress localaddr, int port)
  void .ctor(int port)
  TcpListener Create(int port)
  Socket get_Server()
  bool get_Active()
  EndPoint get_LocalEndpoint()
  bool get_ExclusiveAddressUse()
  void set_ExclusiveAddressUse(bool value)
  void AllowNatTraversal(bool allowed)
  void Start()
  void Start(int backlog)
  void Stop()
  bool Pending()
  Socket AcceptSocket()
  TcpClient AcceptTcpClient()
  IAsyncResult BeginAcceptSocket(AsyncCallback callback, object state)
  Socket EndAcceptSocket(IAsyncResult asyncResult)
  IAsyncResult BeginAcceptTcpClient(AsyncCallback callback, object state)
  TcpClient EndAcceptTcpClient(IAsyncResult asyncResult)
  Task`1<Socket> AcceptSocketAsync()
  Task`1<TcpClient> AcceptTcpClientAsync()
--------------------------------------------------
Класс: System.Net.Sockets.TransmitFileOptions
Наследуется от: Enum
Поля:
  int value__
  TransmitFileOptions UseDefaultWorkerThread
  TransmitFileOptions Disconnect
  TransmitFileOptions ReuseSocket
  TransmitFileOptions WriteBehind
  TransmitFileOptions UseSystemThread
  TransmitFileOptions UseKernelApc
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.UdpClient
Наследуется от: object
Поля:
  int MaxUDPSize
  Socket m_ClientSocket
  bool m_Active
  Byte[] m_Buffer
  AddressFamily m_Family
  bool m_CleanedUp
  bool m_IsBroadcast
Свойства:
  Socket Client
  bool Active
  int Available
  short Ttl
  bool DontFragment
  bool MulticastLoopback
  bool EnableBroadcast
  bool ExclusiveAddressUse
Методы:
  void .ctor()
  void .ctor(AddressFamily family)
  void .ctor(int port)
  void .ctor(int port, AddressFamily family)
  void .ctor(IPEndPoint localEP)
  void .ctor(string hostname, int port)
  Socket get_Client()
  void set_Client(Socket value)
  bool get_Active()
  void set_Active(bool value)
  int get_Available()
  short get_Ttl()
  void set_Ttl(short value)
  bool get_DontFragment()
  void set_DontFragment(bool value)
  bool get_MulticastLoopback()
  void set_MulticastLoopback(bool value)
  bool get_EnableBroadcast()
  void set_EnableBroadcast(bool value)
  bool get_ExclusiveAddressUse()
  void set_ExclusiveAddressUse(bool value)
  void AllowNatTraversal(bool allowed)
  void Close()
  void FreeResources()
  void Dispose()
  void Dispose(bool disposing)
  void Connect(string hostname, int port)
  void Connect(IPAddress addr, int port)
  void Connect(IPEndPoint endPoint)
  void CheckForBroadcast(IPAddress ipAddress)
  bool IsBroadcast(IPAddress address)
  int Send(Byte[] dgram, int bytes, IPEndPoint endPoint)
  int Send(Byte[] dgram, int bytes, string hostname, int port)
  int Send(Byte[] dgram, int bytes)
  IAsyncResult BeginSend(Byte[] datagram, int bytes, IPEndPoint endPoint, AsyncCallback requestCallback, object state)
  IAsyncResult BeginSend(Byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state)
  IAsyncResult BeginSend(Byte[] datagram, int bytes, AsyncCallback requestCallback, object state)
  int EndSend(IAsyncResult asyncResult)
  Byte[] Receive(IPEndPoint& remoteEP)
  IAsyncResult BeginReceive(AsyncCallback requestCallback, object state)
  Byte[] EndReceive(IAsyncResult asyncResult, IPEndPoint& remoteEP)
  void JoinMulticastGroup(IPAddress multicastAddr)
  void JoinMulticastGroup(IPAddress multicastAddr, IPAddress localAddress)
  void JoinMulticastGroup(int ifindex, IPAddress multicastAddr)
  void JoinMulticastGroup(IPAddress multicastAddr, int timeToLive)
  void DropMulticastGroup(IPAddress multicastAddr)
  void DropMulticastGroup(IPAddress multicastAddr, int ifindex)
  Task`1<int> SendAsync(Byte[] datagram, int bytes)
  Task`1<int> SendAsync(Byte[] datagram, int bytes, IPEndPoint endPoint)
  Task`1<int> SendAsync(Byte[] datagram, int bytes, string hostname, int port)
  Task`1<UdpReceiveResult> ReceiveAsync()
  void createClientSocket()
  IAsyncResult <ReceiveAsync>b__65_0(AsyncCallback callback, object state)
  UdpReceiveResult <ReceiveAsync>b__65_1(IAsyncResult ar)
--------------------------------------------------
Класс: System.Net.Sockets.UdpReceiveResult
Наследуется от: ValueType
Поля:
  Byte[] m_buffer
  IPEndPoint m_remoteEndPoint
Свойства:
  Byte[] Buffer
  IPEndPoint RemoteEndPoint
Методы:
  void .ctor(Byte[] buffer, IPEndPoint remoteEndPoint)
  Byte[] get_Buffer()
  IPEndPoint get_RemoteEndPoint()
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(UdpReceiveResult other)
  bool op_Equality(UdpReceiveResult left, UdpReceiveResult right)
  bool op_Inequality(UdpReceiveResult left, UdpReceiveResult right)
--------------------------------------------------
Класс: System.Net.Sockets.SafeSocketHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
  List`1<Thread> blocking_threads
  Dictionary`2<Thread, StackTrace> threads_stacktraces
  bool in_cleanup
  int SOCKET_CLOSED
  int ABORT_RETRIES
  bool THROW_ON_ABORT_RETRIES
Свойства:
Методы:
  void .ctor(IntPtr preexistingHandle, bool ownsHandle)
  void .ctor()
  bool ReleaseHandle()
  void RegisterForBlockingSyscall()
  void UnRegisterForBlockingSyscall()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Sockets.SocketAsyncEventArgs
Наследуется от: EventArgs
Поля:
  bool disposed
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) in_progress
  EndPoint remote_ep
  Socket current_socket
  SocketAsyncResult socket_async_result
  Exception <ConnectByNameError>k__BackingField
  Socket <AcceptSocket>k__BackingField
  int <BytesTransferred>k__BackingField
  bool <DisconnectReuseSocket>k__BackingField
  SocketAsyncOperation <LastOperation>k__BackingField
  IPPacketInformation <ReceiveMessageFromPacketInfo>k__BackingField
  SendPacketsElement[] <SendPacketsElements>k__BackingField
  TransmitFileOptions <SendPacketsFlags>k__BackingField
  int <SendPacketsSendSize>k__BackingField
  SocketError <SocketError>k__BackingField
  SocketFlags <SocketFlags>k__BackingField
  object <UserToken>k__BackingField
  EventHandler`1<SocketAsyncEventArgs> Completed
  Memory`1<byte> _buffer
  int _offset
  int _count
  bool _bufferIsExplicitArray
  IList`1<ArraySegment`1<byte>> _bufferList
  List`1<ArraySegment`1<byte>> _bufferListInternal
Свойства:
  Exception ConnectByNameError
  Socket AcceptSocket
  int BytesTransferred
  bool DisconnectReuseSocket
  SocketAsyncOperation LastOperation
  EndPoint RemoteEndPoint
  IPPacketInformation ReceiveMessageFromPacketInfo
  SendPacketsElement[] SendPacketsElements
  TransmitFileOptions SendPacketsFlags
  int SendPacketsSendSize
  SocketError SocketError
  SocketFlags SocketFlags
  object UserToken
  Socket ConnectSocket
  Socket CurrentSocket
  Byte[] Buffer
  Memory`1<byte> MemoryBuffer
  int Offset
  int Count
  IList`1<ArraySegment`1<byte>> BufferList
  bool HasMultipleBuffers
  SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol
Методы:
  Exception get_ConnectByNameError()
  void set_ConnectByNameError(Exception value)
  Socket get_AcceptSocket()
  void set_AcceptSocket(Socket value)
  int get_BytesTransferred()
  void set_BytesTransferred(int value)
  bool get_DisconnectReuseSocket()
  void set_DisconnectReuseSocket(bool value)
  SocketAsyncOperation get_LastOperation()
  void set_LastOperation(SocketAsyncOperation value)
  EndPoint get_RemoteEndPoint()
  void set_RemoteEndPoint(EndPoint value)
  IPPacketInformation get_ReceiveMessageFromPacketInfo()
  void set_ReceiveMessageFromPacketInfo(IPPacketInformation value)
  SendPacketsElement[] get_SendPacketsElements()
  void set_SendPacketsElements(SendPacketsElement[] value)
  TransmitFileOptions get_SendPacketsFlags()
  void set_SendPacketsFlags(TransmitFileOptions value)
  int get_SendPacketsSendSize()
  void set_SendPacketsSendSize(int value)
  SocketError get_SocketError()
  void set_SocketError(SocketError value)
  SocketFlags get_SocketFlags()
  void set_SocketFlags(SocketFlags value)
  object get_UserToken()
  void set_UserToken(object value)
  Socket get_ConnectSocket()
  void add_Completed(EventHandler`1<SocketAsyncEventArgs> value)
  void remove_Completed(EventHandler`1<SocketAsyncEventArgs> value)
  void .ctor()
  void .ctor(bool flowExecutionContext)
  void Finalize()
  void Dispose(bool disposing)
  void Dispose()
  void SetConnectByNameError(Exception error)
  void SetBytesTransferred(int value)
  Socket get_CurrentSocket()
  void SetCurrentSocket(Socket socket)
  void SetLastOperation(SocketAsyncOperation op)
  void Complete_internal()
  void OnCompleted(SocketAsyncEventArgs e)
  void StartOperationCommon(Socket socket)
  void StartOperationWrapperConnect(MultipleConnectAsync args)
  void FinishConnectByNameSyncFailure(Exception exception, int bytesTransferred, SocketFlags flags)
  void FinishOperationAsyncFailure(Exception exception, int bytesTransferred, SocketFlags flags)
  void FinishWrapperConnectSuccess(Socket connectSocket, int bytesTransferred, SocketFlags flags)
  void SetResults(SocketError socketError, int bytesTransferred, SocketFlags flags)
  void SetResults(Exception exception, int bytesTransferred, SocketFlags flags)
  Byte[] get_Buffer()
  Memory`1<byte> get_MemoryBuffer()
  int get_Offset()
  int get_Count()
  IList`1<ArraySegment`1<byte>> get_BufferList()
  void set_BufferList(IList`1<ArraySegment`1<byte>> value)
  void SetBuffer(int offset, int count)
  void CopyBufferFrom(SocketAsyncEventArgs source)
  void SetBuffer(Byte[] buffer, int offset, int count)
  void SetBuffer(Memory`1<byte> buffer)
  bool get_HasMultipleBuffers()
  SocketClientAccessPolicyProtocol get_SocketClientAccessPolicyProtocol()
  void set_SocketClientAccessPolicyProtocol(SocketClientAccessPolicyProtocol value)
--------------------------------------------------
Класс: System.Net.Sockets.SocketAsyncResult
Наследуется от: IOAsyncResult
Поля:
  Socket socket
  SocketOperation operation
  Exception DelayedException
  EndPoint EndPoint
  Memory`1<byte> Buffer
  int Offset
  int Size
  SocketFlags SockFlags
  Socket AcceptSocket
  IPAddress[] Addresses
  int Port
  IList`1<ArraySegment`1<byte>> Buffers
  bool ReuseSocket
  int CurrentAddress
  Socket AcceptedSocket
  int Total
  int error
  int EndCalled
Свойства:
  IntPtr Handle
  SocketError ErrorCode
Методы:
  IntPtr get_Handle()
  void .ctor()
  void Init(Socket socket, AsyncCallback callback, object state, SocketOperation operation)
  void .ctor(Socket socket, AsyncCallback callback, object state, SocketOperation operation)
  SocketError get_ErrorCode()
  void CheckIfThrowDelayedException()
  void CompleteDisposed()
  void Complete()
  void Complete(bool synch)
  void Complete(int total)
  void Complete(Exception e, bool synch)
  void Complete(Exception e)
  void Complete(Socket s)
  void Complete(Socket s, int total)
--------------------------------------------------
Класс: System.Net.Sockets.SocketOperation
Наследуется от: Enum
Поля:
  int value__
  SocketOperation Accept
  SocketOperation Connect
  SocketOperation Receive
  SocketOperation ReceiveFrom
  SocketOperation Send
  SocketOperation SendTo
  SocketOperation RecvJustCallback
  SocketOperation SendJustCallback
  SocketOperation Disconnect
  SocketOperation AcceptReceive
  SocketOperation ReceiveGeneric
  SocketOperation SendGeneric
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketReceiveFromResult
Наследуется от: ValueType
Поля:
  int ReceivedBytes
  EndPoint RemoteEndPoint
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketReceiveMessageFromResult
Наследуется от: ValueType
Поля:
  int ReceivedBytes
  SocketFlags SocketFlags
  EndPoint RemoteEndPoint
  IPPacketInformation PacketInformation
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Sockets.SocketTaskExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  Task`1<Socket> AcceptAsync(Socket socket)
  Task`1<Socket> AcceptAsync(Socket socket, Socket acceptSocket)
  Task ConnectAsync(Socket socket, EndPoint remoteEP)
  Task ConnectAsync(Socket socket, IPAddress address, int port)
  Task ConnectAsync(Socket socket, IPAddress[] addresses, int port)
  Task ConnectAsync(Socket socket, string host, int port)
  Task`1<int> ReceiveAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags)
  Task`1<int> ReceiveAsync(Socket socket, IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<SocketReceiveFromResult> ReceiveFromAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint)
  Task`1<SocketReceiveMessageFromResult> ReceiveMessageFromAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint)
  Task`1<int> SendAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags)
  Task`1<int> SendAsync(Socket socket, IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags)
  Task`1<int> SendToAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEP)
  ValueTask`1<int> SendAsync(Socket socket, ReadOnlyMemory`1<byte> buffer, SocketFlags socketFlags, CancellationToken cancellationToken)
  ValueTask`1<int> ReceiveAsync(Socket socket, Memory`1<byte> memory, SocketFlags socketFlags, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Net.WebSockets.ManagedWebSocket
Наследуется от: WebSocket
Поля:
  RandomNumberGenerator s_random
  UTF8Encoding s_textEncoding
  WebSocketState[] s_validSendStates
  WebSocketState[] s_validReceiveStates
  WebSocketState[] s_validCloseOutputStates
  WebSocketState[] s_validCloseStates
  Task`1<WebSocketReceiveResult> s_cachedCloseTask
  int MaxMessageHeaderLength
  int MaxControlPayloadLength
  int MaskLength
  Stream _stream
  bool _isServer
  string _subprotocol
  Timer _keepAliveTimer
  CancellationTokenSource _abortSource
  Memory`1<byte> _receiveBuffer
  Utf8MessageState _utf8TextState
  SemaphoreSlim _sendFrameAsyncLock
  WebSocketState _state
  bool _disposed
  bool _sentCloseFrame
  bool _receivedCloseFrame
  Nullable`1<WebSocketCloseStatus> _closeStatus
  string _closeStatusDescription
  MessageHeader _lastReceiveHeader
  int _receiveBufferOffset
  int _receiveBufferCount
  int _receivedMaskOffsetOffset
  Byte[] _sendBuffer
  bool _lastSendWasFragment
  Task _lastReceiveAsync
Свойства:
  object StateUpdateLock
  object ReceiveAsyncLock
  Nullable`1<WebSocketCloseStatus> CloseStatus
  string CloseStatusDescription
  WebSocketState State
  string SubProtocol
Методы:
  ManagedWebSocket CreateFromConnectedStream(Stream stream, bool isServer, string subprotocol, TimeSpan keepAliveInterval)
  object get_StateUpdateLock()
  object get_ReceiveAsyncLock()
  void .ctor(Stream stream, bool isServer, string subprotocol, TimeSpan keepAliveInterval)
  void Dispose()
  void DisposeCore()
  Nullable`1<WebSocketCloseStatus> get_CloseStatus()
  string get_CloseStatusDescription()
  WebSocketState get_State()
  string get_SubProtocol()
  Task SendAsync(ArraySegment`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  ValueTask SendPrivateAsync(ReadOnlyMemory`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  Task`1<WebSocketReceiveResult> ReceiveAsync(ArraySegment`1<byte> buffer, CancellationToken cancellationToken)
  Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  void Abort()
  ValueTask SendFrameAsync(MessageOpcode opcode, bool endOfMessage, ReadOnlyMemory`1<byte> payloadBuffer, CancellationToken cancellationToken)
  ValueTask SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, bool endOfMessage, ReadOnlyMemory`1<byte> payloadBuffer)
  Task WaitForWriteTaskAsync(ValueTask writeTask)
  Task SendFrameFallbackAsync(MessageOpcode opcode, bool endOfMessage, ReadOnlyMemory`1<byte> payloadBuffer, CancellationToken cancellationToken)
  int WriteFrameToSendBuffer(MessageOpcode opcode, bool endOfMessage, ReadOnlySpan`1<byte> payloadBuffer)
  void SendKeepAliveFrameAsync()
  int WriteHeader(MessageOpcode opcode, Byte[] sendBuffer, ReadOnlySpan`1<byte> payload, bool endOfMessage, bool useMask)
  void WriteRandomMask(Byte[] buffer, int offset)
  ValueTask`1<TWebSocketReceiveResult> ReceiveAsyncPrivate(Memory`1<byte> payloadBuffer, CancellationToken cancellationToken, TWebSocketReceiveResultGetter resultGetter)
  Task HandleReceivedCloseAsync(MessageHeader header, CancellationToken cancellationToken)
  Task WaitForServerToCloseConnectionAsync(CancellationToken cancellationToken)
  Task HandleReceivedPingPongAsync(MessageHeader header, CancellationToken cancellationToken)
  bool IsValidCloseStatus(WebSocketCloseStatus closeStatus)
  Task CloseWithReceiveErrorAndThrowAsync(WebSocketCloseStatus closeStatus, WebSocketError error, Exception innerException)
  bool TryParseMessageHeaderFromReceiveBuffer(MessageHeader& resultHeader)
  Task CloseAsyncPrivate(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  Task SendCloseFrameAsync(WebSocketCloseStatus closeStatus, string closeStatusDescription, CancellationToken cancellationToken)
  void ConsumeFromBuffer(int count)
  Task EnsureBufferContainsAsync(int minimumRequiredBytes, CancellationToken cancellationToken, bool throwOnPrematureClosure)
  void ThrowIfEOFUnexpected(bool throwOnPrematureClosure)
  void AllocateSendBuffer(int minLength)
  void ReleaseSendBuffer()
  int CombineMaskBytes(Span`1<byte> buffer, int maskOffset)
  int ApplyMask(Span`1<byte> toMask, Byte[] mask, int maskOffset, int maskOffsetIndex)
  int ApplyMask(Span`1<byte> toMask, int mask, int maskIndex)
  void ThrowIfOperationInProgress(bool operationCompleted, string methodName)
  void ThrowOperationInProgress(string methodName)
  Exception CreateOperationCanceledException(Exception innerException, CancellationToken cancellationToken)
  bool TryValidateUtf8(Span`1<byte> span, bool endOfMessage, Utf8MessageState state)
  Task ValidateAndReceiveAsync(Task receiveTask, Byte[] buffer, CancellationToken cancellationToken)
  void .cctor()
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketValidate
Наследуется от: object
Поля:
  int MaxControlFramePayloadLength
  int CloseStatusCodeAbort
  int CloseStatusCodeFailedTLSHandshake
  int InvalidCloseStatusCodesFrom
  int InvalidCloseStatusCodesTo
  string Separators
Свойства:
Методы:
  void ThrowIfInvalidState(WebSocketState currentState, bool isDisposed, WebSocketState[] validStates)
  void ValidateSubprotocol(string subProtocol)
  void ValidateCloseStatus(WebSocketCloseStatus closeStatus, string statusDescription)
  void ThrowPlatformNotSupportedException()
  void ValidateArraySegment(ArraySegment`1<byte> arraySegment, string parameterName)
  void ValidateBuffer(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.Net.WebSockets.HttpListenerWebSocketContext
Наследуется от: WebSocketContext
Поля:
  Uri _requestUri
  NameValueCollection _headers
  CookieCollection _cookieCollection
  IPrincipal _user
  bool _isAuthenticated
  bool _isLocal
  bool _isSecureConnection
  string _origin
  IEnumerable`1<string> _secWebSocketProtocols
  string _secWebSocketVersion
  string _secWebSocketKey
  WebSocket _webSocket
Свойства:
  Uri RequestUri
  NameValueCollection Headers
  string Origin
  IEnumerable`1<string> SecWebSocketProtocols
  string SecWebSocketVersion
  string SecWebSocketKey
  CookieCollection CookieCollection
  IPrincipal User
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  WebSocket WebSocket
Методы:
  void .ctor(Uri requestUri, NameValueCollection headers, CookieCollection cookieCollection, IPrincipal user, bool isAuthenticated, bool isLocal, bool isSecureConnection, string origin, IEnumerable`1<string> secWebSocketProtocols, string secWebSocketVersion, string secWebSocketKey, WebSocket webSocket)
  Uri get_RequestUri()
  NameValueCollection get_Headers()
  string get_Origin()
  IEnumerable`1<string> get_SecWebSocketProtocols()
  string get_SecWebSocketVersion()
  string get_SecWebSocketKey()
  CookieCollection get_CookieCollection()
  IPrincipal get_User()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  WebSocket get_WebSocket()
  IPrincipal CopyPrincipal(IPrincipal user)
  void .ctor()
--------------------------------------------------
Класс: System.Net.WebSockets.ClientWebSocket
Наследуется от: WebSocket
Поля:
  ClientWebSocketOptions _options
  WebSocketHandle _innerWebSocket
  int _state
Свойства:
  ClientWebSocketOptions Options
  Nullable`1<WebSocketCloseStatus> CloseStatus
  string CloseStatusDescription
  string SubProtocol
  WebSocketState State
Методы:
  void .ctor()
  ClientWebSocketOptions get_Options()
  Nullable`1<WebSocketCloseStatus> get_CloseStatus()
  string get_CloseStatusDescription()
  string get_SubProtocol()
  WebSocketState get_State()
  Task ConnectAsync(Uri uri, CancellationToken cancellationToken)
  Task ConnectAsyncCore(Uri uri, CancellationToken cancellationToken)
  Task SendAsync(ArraySegment`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  ValueTask SendAsync(ReadOnlyMemory`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  Task`1<WebSocketReceiveResult> ReceiveAsync(ArraySegment`1<byte> buffer, CancellationToken cancellationToken)
  ValueTask`1<ValueWebSocketReceiveResult> ReceiveAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  void Abort()
  void Dispose()
  void ThrowIfNotConnected()
--------------------------------------------------
Класс: System.Net.WebSockets.ClientWebSocketOptions
Наследуется от: object
Поля:
  bool _isReadOnly
  List`1<string> _requestedSubProtocols
  WebHeaderCollection _requestHeaders
  TimeSpan _keepAliveInterval
  bool _useDefaultCredentials
  ICredentials _credentials
  IWebProxy _proxy
  X509CertificateCollection _clientCertificates
  CookieContainer _cookies
  int _receiveBufferSize
  int _sendBufferSize
  Nullable`1<ArraySegment`1<byte>> _buffer
  RemoteCertificateValidationCallback _remoteCertificateValidationCallback
Свойства:
  WebHeaderCollection RequestHeaders
  List`1<string> RequestedSubProtocols
  bool UseDefaultCredentials
  ICredentials Credentials
  IWebProxy Proxy
  X509CertificateCollection ClientCertificates
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  CookieContainer Cookies
  TimeSpan KeepAliveInterval
  int ReceiveBufferSize
  int SendBufferSize
  Nullable`1<ArraySegment`1<byte>> Buffer
Методы:
  void .ctor()
  void SetRequestHeader(string headerName, string headerValue)
  WebHeaderCollection get_RequestHeaders()
  List`1<string> get_RequestedSubProtocols()
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  ICredentials get_Credentials()
  void set_Credentials(ICredentials value)
  IWebProxy get_Proxy()
  void set_Proxy(IWebProxy value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  CookieContainer get_Cookies()
  void set_Cookies(CookieContainer value)
  void AddSubProtocol(string subProtocol)
  TimeSpan get_KeepAliveInterval()
  void set_KeepAliveInterval(TimeSpan value)
  int get_ReceiveBufferSize()
  int get_SendBufferSize()
  Nullable`1<ArraySegment`1<byte>> get_Buffer()
  void SetBuffer(int receiveBufferSize, int sendBufferSize)
  void SetBuffer(int receiveBufferSize, int sendBufferSize, ArraySegment`1<byte> buffer)
  void SetToReadOnly()
  void ThrowIfReadOnly()
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketHandle
Наследуется от: object
Поля:
  StringBuilder t_cachedStringBuilder
  Encoding s_defaultHttpEncoding
  int DefaultReceiveBufferSize
  string WSServerGuid
  CancellationTokenSource _abortSource
  WebSocketState _state
  WebSocket _webSocket
Свойства:
  Nullable`1<WebSocketCloseStatus> CloseStatus
  string CloseStatusDescription
  WebSocketState State
  string SubProtocol
Методы:
  WebSocketHandle Create()
  bool IsValid(WebSocketHandle handle)
  Nullable`1<WebSocketCloseStatus> get_CloseStatus()
  string get_CloseStatusDescription()
  WebSocketState get_State()
  string get_SubProtocol()
  void CheckPlatformSupport()
  void Dispose()
  void Abort()
  Task SendAsync(ArraySegment`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  ValueTask SendAsync(ReadOnlyMemory`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  Task`1<WebSocketReceiveResult> ReceiveAsync(ArraySegment`1<byte> buffer, CancellationToken cancellationToken)
  ValueTask`1<ValueWebSocketReceiveResult> ReceiveAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  Task ConnectAsyncCore(Uri uri, CancellationToken cancellationToken, ClientWebSocketOptions options)
  Task`1<Socket> ConnectSocketAsync(string host, int port, CancellationToken cancellationToken)
  Byte[] BuildRequestHeader(Uri uri, ClientWebSocketOptions options, string secKey)
  KeyValuePair`2<string, string> CreateSecKeyAndSecWebSocketAccept()
  Task`1<string> ParseAndValidateConnectResponseAsync(Stream stream, ClientWebSocketOptions options, string expectedSecWebSocketAccept, CancellationToken cancellationToken)
  void ValidateAndTrackHeader(string targetHeaderName, string targetHeaderValue, string foundHeaderName, string foundHeaderValue, Boolean& foundHeader)
  Task`1<string> ReadResponseHeaderLineAsync(Stream stream, CancellationToken cancellationToken)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Net.WebSockets.ValueWebSocketReceiveResult
Наследуется от: ValueType
Поля:
  UInt32 _countAndEndOfMessage
  WebSocketMessageType _messageType
Свойства:
  int Count
  bool EndOfMessage
  WebSocketMessageType MessageType
Методы:
  void .ctor(int count, WebSocketMessageType messageType, bool endOfMessage)
  int get_Count()
  bool get_EndOfMessage()
  WebSocketMessageType get_MessageType()
  void ThrowCountOutOfRange()
  void ThrowMessageTypeOutOfRange()
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocket
Наследуется от: object
Поля:
Свойства:
  Nullable`1<WebSocketCloseStatus> CloseStatus
  string CloseStatusDescription
  string SubProtocol
  WebSocketState State
  TimeSpan DefaultKeepAliveInterval
Методы:
  Nullable`1<WebSocketCloseStatus> get_CloseStatus()
  string get_CloseStatusDescription()
  string get_SubProtocol()
  WebSocketState get_State()
  void Abort()
  Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken)
  void Dispose()
  Task`1<WebSocketReceiveResult> ReceiveAsync(ArraySegment`1<byte> buffer, CancellationToken cancellationToken)
  Task SendAsync(ArraySegment`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  ValueTask`1<ValueWebSocketReceiveResult> ReceiveAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  ValueTask SendAsync(ReadOnlyMemory`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  Task SendWithArrayPoolAsync(ReadOnlyMemory`1<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken)
  TimeSpan get_DefaultKeepAliveInterval()
  void ThrowOnInvalidState(WebSocketState state, WebSocketState[] validStates)
  bool IsStateTerminal(WebSocketState state)
  ArraySegment`1<byte> CreateClientBuffer(int receiveBufferSize, int sendBufferSize)
  ArraySegment`1<byte> CreateServerBuffer(int receiveBufferSize)
  WebSocket CreateFromStream(Stream stream, bool isServer, string subProtocol, TimeSpan keepAliveInterval)
  bool IsApplicationTargeting45()
  void RegisterPrefixes()
  WebSocket CreateClientWebSocket(Stream innerStream, string subProtocol, int receiveBufferSize, int sendBufferSize, TimeSpan keepAliveInterval, bool useZeroMaskingKey, ArraySegment`1<byte> internalBuffer)
  void .ctor()
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketCloseStatus
Наследуется от: Enum
Поля:
  int value__
  WebSocketCloseStatus NormalClosure
  WebSocketCloseStatus EndpointUnavailable
  WebSocketCloseStatus ProtocolError
  WebSocketCloseStatus InvalidMessageType
  WebSocketCloseStatus Empty
  WebSocketCloseStatus InvalidPayloadData
  WebSocketCloseStatus PolicyViolation
  WebSocketCloseStatus MessageTooBig
  WebSocketCloseStatus MandatoryExtension
  WebSocketCloseStatus InternalServerError
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketContext
Наследуется от: object
Поля:
Свойства:
  Uri RequestUri
  NameValueCollection Headers
  string Origin
  IEnumerable`1<string> SecWebSocketProtocols
  string SecWebSocketVersion
  string SecWebSocketKey
  CookieCollection CookieCollection
  IPrincipal User
  bool IsAuthenticated
  bool IsLocal
  bool IsSecureConnection
  WebSocket WebSocket
Методы:
  Uri get_RequestUri()
  NameValueCollection get_Headers()
  string get_Origin()
  IEnumerable`1<string> get_SecWebSocketProtocols()
  string get_SecWebSocketVersion()
  string get_SecWebSocketKey()
  CookieCollection get_CookieCollection()
  IPrincipal get_User()
  bool get_IsAuthenticated()
  bool get_IsLocal()
  bool get_IsSecureConnection()
  WebSocket get_WebSocket()
  void .ctor()
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketError
Наследуется от: Enum
Поля:
  int value__
  WebSocketError Success
  WebSocketError InvalidMessageType
  WebSocketError Faulted
  WebSocketError NativeError
  WebSocketError NotAWebSocket
  WebSocketError UnsupportedVersion
  WebSocketError UnsupportedProtocol
  WebSocketError HeaderError
  WebSocketError ConnectionClosedPrematurely
  WebSocketError InvalidState
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketException
Наследуется от: Win32Exception
Поля:
  WebSocketError _webSocketErrorCode
Свойства:
  int ErrorCode
  WebSocketError WebSocketErrorCode
Методы:
  void .ctor()
  void .ctor(WebSocketError error)
  void .ctor(WebSocketError error, string message)
  void .ctor(WebSocketError error, Exception innerException)
  void .ctor(WebSocketError error, string message, Exception innerException)
  void .ctor(int nativeError)
  void .ctor(int nativeError, string message)
  void .ctor(int nativeError, Exception innerException)
  void .ctor(WebSocketError error, int nativeError)
  void .ctor(WebSocketError error, int nativeError, string message)
  void .ctor(WebSocketError error, int nativeError, Exception innerException)
  void .ctor(WebSocketError error, int nativeError, string message, Exception innerException)
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  int get_ErrorCode()
  WebSocketError get_WebSocketErrorCode()
  string GetErrorMessage(WebSocketError error)
  void SetErrorCodeOnError(int nativeError)
  bool Succeeded(int hr)
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketMessageType
Наследуется от: Enum
Поля:
  int value__
  WebSocketMessageType Text
  WebSocketMessageType Binary
  WebSocketMessageType Close
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketReceiveResult
Наследуется от: object
Поля:
  int <Count>k__BackingField
  bool <EndOfMessage>k__BackingField
  WebSocketMessageType <MessageType>k__BackingField
  Nullable`1<WebSocketCloseStatus> <CloseStatus>k__BackingField
  string <CloseStatusDescription>k__BackingField
Свойства:
  int Count
  bool EndOfMessage
  WebSocketMessageType MessageType
  Nullable`1<WebSocketCloseStatus> CloseStatus
  string CloseStatusDescription
Методы:
  void .ctor(int count, WebSocketMessageType messageType, bool endOfMessage)
  void .ctor(int count, WebSocketMessageType messageType, bool endOfMessage, Nullable`1<WebSocketCloseStatus> closeStatus, string closeStatusDescription)
  int get_Count()
  bool get_EndOfMessage()
  WebSocketMessageType get_MessageType()
  Nullable`1<WebSocketCloseStatus> get_CloseStatus()
  string get_CloseStatusDescription()
--------------------------------------------------
Класс: System.Net.WebSockets.WebSocketState
Наследуется от: Enum
Поля:
  int value__
  WebSocketState None
  WebSocketState Connecting
  WebSocketState Open
  WebSocketState CloseSent
  WebSocketState CloseReceived
  WebSocketState Closed
  WebSocketState Aborted
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mime.MailBnfHelper
Наследуется от: object
Поля:
  Boolean[] Atext
  Boolean[] Qtext
  Boolean[] Dtext
  Boolean[] Ftext
  Boolean[] Ttext
  Boolean[] Ctext
  int Ascii7bitMaxValue
  char Quote
  char Space
  char Tab
  char CR
  char LF
  char StartComment
  char EndComment
  char Backslash
  char At
  char EndAngleBracket
  char StartAngleBracket
  char StartSquareBracket
  char EndSquareBracket
  char Comma
  char Dot
  Char[] s_colonSeparator
  String[] s_months
Свойства:
Методы:
  Boolean[] CreateCharactersAllowedInAtoms()
  Boolean[] CreateCharactersAllowedInQuotedStrings()
  Boolean[] CreateCharactersAllowedInDomainLiterals()
  Boolean[] CreateCharactersAllowedInHeaderNames()
  Boolean[] CreateCharactersAllowedInTokens()
  Boolean[] CreateCharactersAllowedInComments()
  bool SkipCFWS(string data, Int32& offset)
  void ValidateHeaderName(string data)
  string ReadQuotedString(string data, Int32& offset, StringBuilder builder)
  string ReadQuotedString(string data, Int32& offset, StringBuilder builder, bool doesntRequireQuotes, bool permitUnicodeInDisplayName)
  string ReadParameterAttribute(string data, Int32& offset, StringBuilder builder)
  string ReadToken(string data, Int32& offset, StringBuilder builder)
  string GetDateTimeString(DateTime value, StringBuilder builder)
  void GetTokenOrQuotedString(string data, StringBuilder builder, bool allowUnicode)
  bool CheckForUnicode(char ch, bool allowUnicode)
  bool IsAllowedWhiteSpace(char c)
  bool HasCROrLF(string data)
  bool IsFWSAt(string data, int index)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.Base64WriteStateInfo
Наследуется от: WriteStateInfoBase
Поля:
  int <Padding>k__BackingField
  byte <LastBits>k__BackingField
Свойства:
  int Padding
  byte LastBits
Методы:
  void .ctor()
  void .ctor(int bufferSize, Byte[] header, Byte[] footer, int maxLineLength, int mimeHeaderLength)
  int get_Padding()
  void set_Padding(int value)
  byte get_LastBits()
  void set_LastBits(byte value)
--------------------------------------------------
Класс: System.Net.Mime.BaseWriter
Наследуется от: object
Поля:
  int DefaultLineLength
  AsyncCallback s_onWrite
  Byte[] s_crlf
  BufferBuilder _bufferBuilder
  Stream _stream
  EventHandler _onCloseHandler
  bool _shouldEncodeLeadingDots
  int _lineLength
  Stream _contentStream
  bool _isInContent
Свойства:
Методы:
  void .ctor(Stream stream, bool shouldEncodeLeadingDots)
  void WriteHeaders(NameValueCollection headers, bool allowUnicode)
  void WriteHeader(string name, string value, bool allowUnicode)
  void WriteAndFold(string value, int charsAlreadyOnLine, bool allowUnicode)
  Stream GetContentStream()
  Stream GetContentStream(MultiAsyncResult multiResult)
  IAsyncResult BeginGetContentStream(AsyncCallback callback, object state)
  Stream EndGetContentStream(IAsyncResult result)
  void Flush(MultiAsyncResult multiResult)
  void OnWrite(IAsyncResult result)
  void Close()
  void OnClose(object sender, EventArgs args)
  void CheckBoundary()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.ContentDisposition
Наследуется от: object
Поля:
  string CreationDateKey
  string ModificationDateKey
  string ReadDateKey
  string FileNameKey
  string SizeKey
  TrackingValidationObjectDictionary _parameters
  string _disposition
  string _dispositionType
  bool _isChanged
  bool _isPersisted
  ValidateAndParseValue s_dateParser
  ValidateAndParseValue s_longParser
  Dictionary`2<string, ValidateAndParseValue> s_validators
Свойства:
  string DispositionType
  StringDictionary Parameters
  string FileName
  DateTime CreationDate
  DateTime ModificationDate
  bool Inline
  DateTime ReadDate
  long Size
  bool IsChanged
Методы:
  void .ctor()
  void .ctor(string disposition)
  DateTime GetDateParameter(string parameterName)
  string get_DispositionType()
  void set_DispositionType(string value)
  StringDictionary get_Parameters()
  string get_FileName()
  void set_FileName(string value)
  DateTime get_CreationDate()
  void set_CreationDate(DateTime value)
  DateTime get_ModificationDate()
  void set_ModificationDate(DateTime value)
  bool get_Inline()
  void set_Inline(bool value)
  DateTime get_ReadDate()
  void set_ReadDate(DateTime value)
  long get_Size()
  void set_Size(long value)
  void Set(string contentDisposition, HeaderCollection headers)
  void PersistIfNeeded(HeaderCollection headers, bool forcePersist)
  bool get_IsChanged()
  string ToString()
  string Encode(bool allowUnicode)
  void EncodeToBuffer(string value, StringBuilder builder, bool allowUnicode)
  bool Equals(object rparam)
  int GetHashCode()
  void ParseValue()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.ContentType
Наследуется от: object
Поля:
  TrackingStringDictionary _parameters
  string _mediaType
  string _subType
  bool _isChanged
  string _type
  bool _isPersisted
  string Default
Свойства:
  string Boundary
  string CharSet
  string MediaType
  string Name
  StringDictionary Parameters
  bool IsChanged
Методы:
  void .ctor()
  void .ctor(string contentType)
  string get_Boundary()
  void set_Boundary(string value)
  string get_CharSet()
  void set_CharSet(string value)
  string get_MediaType()
  void set_MediaType(string value)
  string get_Name()
  void set_Name(string value)
  StringDictionary get_Parameters()
  void Set(string contentType, HeaderCollection headers)
  void PersistIfNeeded(HeaderCollection headers, bool forcePersist)
  bool get_IsChanged()
  string ToString()
  string Encode(bool allowUnicode)
  void EncodeToBuffer(string value, StringBuilder builder, bool allowUnicode)
  bool Equals(object rparam)
  int GetHashCode()
  void ParseValue()
--------------------------------------------------
Класс: System.Net.Mime.DispositionTypeNames
Наследуется от: object
Поля:
  string Inline
  string Attachment
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mime.EightBitStream
Наследуется от: DelegatedStream
Поля:
  WriteStateInfoBase _writeState
  bool _shouldEncodeLeadingDots
Свойства:
  WriteStateInfoBase WriteState
Методы:
  WriteStateInfoBase get_WriteState()
  void .ctor(Stream stream)
  void .ctor(Stream stream, bool shouldEncodeLeadingDots)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  void Write(Byte[] buffer, int offset, int count)
  void EncodeLines(Byte[] buffer, int offset, int count)
  Stream GetStream()
  int DecodeBytes(Byte[] buffer, int offset, int count)
  int EncodeBytes(Byte[] buffer, int offset, int count)
  string GetEncodedString()
--------------------------------------------------
Класс: System.Net.Mime.EncodedStreamFactory
Наследуется от: object
Поля:
  int DefaultMaxLineLength
  int InitialBufferSize
Свойства:
Методы:
  IEncodableStream GetEncoder(TransferEncoding encoding, Stream stream)
  IEncodableStream GetEncoderForHeader(Encoding encoding, bool useBase64Encoding, int headerTextLength)
  Byte[] CreateHeader(Encoding encoding, bool useBase64Encoding)
  Byte[] CreateFooter()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Mime.HeaderCollection
Наследуется от: NameValueCollection
Поля:
  MimeBasePart _part
Свойства:
Методы:
  void .ctor()
  void Remove(string name)
  string Get(string name)
  String[] GetValues(string name)
  void InternalRemove(string name)
  void InternalSet(string name, string value)
  void InternalAdd(string name, string value)
  void Set(string name, string value)
  void Add(string name, string value)
--------------------------------------------------
Класс: System.Net.Mime.IEncodableStream
Поля:
Свойства:
Методы:
  int DecodeBytes(Byte[] buffer, int offset, int count)
  int EncodeBytes(Byte[] buffer, int offset, int count)
  string GetEncodedString()
  Stream GetStream()
--------------------------------------------------
Класс: System.Net.Mime.MediaTypeNames
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mime.MimeBasePart
Наследуется от: object
Поля:
  string DefaultCharSet
  Char[] s_decodeEncodingSplitChars
  ContentType _contentType
  ContentDisposition _contentDisposition
  HeaderCollection _headers
  Char[] s_headerValueSplitChars
  Char[] s_questionMarkSplitChars
Свойства:
  string ContentID
  string ContentLocation
  NameValueCollection Headers
  ContentType ContentType
Методы:
  void .ctor()
  bool ShouldUseBase64Encoding(Encoding encoding)
  string EncodeHeaderValue(string value, Encoding encoding, bool base64Encoding)
  string EncodeHeaderValue(string value, Encoding encoding, bool base64Encoding, int headerLength)
  string DecodeHeaderValue(string value)
  Encoding DecodeEncoding(string value)
  bool IsAscii(string value, bool permitCROrLF)
  string get_ContentID()
  void set_ContentID(string value)
  string get_ContentLocation()
  void set_ContentLocation(string value)
  NameValueCollection get_Headers()
  ContentType get_ContentType()
  void set_ContentType(ContentType value)
  void PrepareHeaders(bool allowUnicode)
  void Send(BaseWriter writer, bool allowUnicode)
  IAsyncResult BeginSend(BaseWriter writer, AsyncCallback callback, bool allowUnicode, object state)
  void EndSend(IAsyncResult asyncResult)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.MimeMultiPart
Наследуется от: MimeBasePart
Поля:
  Collection`1<MimeBasePart> _parts
  int s_boundary
  AsyncCallback _mimePartSentCallback
  bool _allowUnicode
Свойства:
  MimeMultiPartType MimeMultiPartType
  Collection`1<MimeBasePart> Parts
Методы:
  void .ctor(MimeMultiPartType type)
  void set_MimeMultiPartType(MimeMultiPartType value)
  void SetType(MimeMultiPartType type)
  Collection`1<MimeBasePart> get_Parts()
  void Complete(IAsyncResult result, Exception e)
  void MimeWriterCloseCallback(IAsyncResult result)
  void MimeWriterCloseCallbackHandler(IAsyncResult result)
  void MimePartSentCallback(IAsyncResult result)
  void MimePartSentCallbackHandler(IAsyncResult result)
  void ContentStreamCallback(IAsyncResult result)
  void ContentStreamCallbackHandler(IAsyncResult result)
  IAsyncResult BeginSend(BaseWriter writer, AsyncCallback callback, bool allowUnicode, object state)
  void Send(BaseWriter writer, bool allowUnicode)
  string GetNextBoundary()
--------------------------------------------------
Класс: System.Net.Mime.MimeMultiPartType
Наследуется от: Enum
Поля:
  int value__
  MimeMultiPartType Mixed
  MimeMultiPartType Alternative
  MimeMultiPartType Parallel
  MimeMultiPartType Related
  MimeMultiPartType Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mime.MimePart
Наследуется от: MimeBasePart
Поля:
  Stream _stream
  bool _streamSet
  bool _streamUsedOnce
  AsyncCallback _readCallback
  AsyncCallback _writeCallback
  int maxBufferSize
Свойства:
  Stream Stream
  ContentDisposition ContentDisposition
  TransferEncoding TransferEncoding
Методы:
  void .ctor()
  void Dispose()
  Stream get_Stream()
  ContentDisposition get_ContentDisposition()
  void set_ContentDisposition(ContentDisposition value)
  TransferEncoding get_TransferEncoding()
  void set_TransferEncoding(TransferEncoding value)
  void SetContent(Stream stream)
  void SetContent(Stream stream, string name, string mimeType)
  void SetContent(Stream stream, ContentType contentType)
  void Complete(IAsyncResult result, Exception e)
  void ReadCallback(IAsyncResult result)
  void ReadCallbackHandler(IAsyncResult result)
  void WriteCallback(IAsyncResult result)
  void WriteCallbackHandler(IAsyncResult result)
  Stream GetEncodedStream(Stream stream)
  void ContentStreamCallbackHandler(IAsyncResult result)
  void ContentStreamCallback(IAsyncResult result)
  IAsyncResult BeginSend(BaseWriter writer, AsyncCallback callback, bool allowUnicode, object state)
  void Send(BaseWriter writer, bool allowUnicode)
  void ResetStream()
--------------------------------------------------
Класс: System.Net.Mime.MimeWriter
Наследуется от: BaseWriter
Поля:
  Byte[] s_DASHDASH
  Byte[] _boundaryBytes
  bool _writeBoundary
Свойства:
Методы:
  void .ctor(Stream stream, string boundary)
  void WriteHeaders(NameValueCollection headers, bool allowUnicode)
  IAsyncResult BeginClose(AsyncCallback callback, object state)
  void EndClose(IAsyncResult result)
  void Close()
  void Close(MultiAsyncResult multiResult)
  void OnClose(object sender, EventArgs args)
  void CheckBoundary()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.MultiAsyncResult
Наследуется от: LazyAsyncResult
Поля:
  object _context
  int _outstanding
Свойства:
  object Context
Методы:
  void .ctor(object context, AsyncCallback callback, object state)
  object get_Context()
  void Enter()
  void Leave()
  void Leave(object result)
  void Decrement()
  void Increment()
  void CompleteSequence()
  object End(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Mime.QEncodedStream
Наследуется от: DelegatedStream
Поля:
  int SizeOfFoldingCRLF
  Byte[] s_hexDecodeMap
  Byte[] s_hexEncodeMap
  ReadStateInfo _readState
  WriteStateInfoBase _writeState
Свойства:
  ReadStateInfo ReadState
  WriteStateInfoBase WriteState
Методы:
  void .ctor(WriteStateInfoBase wsi)
  ReadStateInfo get_ReadState()
  WriteStateInfoBase get_WriteState()
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  int DecodeBytes(Byte[] buffer, int offset, int count)
  int EncodeBytes(Byte[] buffer, int offset, int count)
  bool IsAsciiLetterOrDigit(char character)
  bool IsAsciiLetter(char character)
  Stream GetStream()
  string GetEncodedString()
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  void FlushInternal()
  void Write(Byte[] buffer, int offset, int count)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.QuotedPrintableStream
Наследуется от: DelegatedStream
Поля:
  bool _encodeCRLF
  int SizeOfSoftCRLF
  int SizeOfEncodedChar
  int SizeOfEncodedCRLF
  int SizeOfNonEncodedCRLF
  Byte[] s_hexDecodeMap
  Byte[] s_hexEncodeMap
  int _lineLength
  ReadStateInfo _readState
  WriteStateInfoBase _writeState
Свойства:
  ReadStateInfo ReadState
  WriteStateInfoBase WriteState
Методы:
  void .ctor(Stream stream, int lineLength)
  void .ctor(Stream stream, bool encodeCRLF)
  ReadStateInfo get_ReadState()
  WriteStateInfoBase get_WriteState()
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void Close()
  int DecodeBytes(Byte[] buffer, int offset, int count)
  int EncodeBytes(Byte[] buffer, int offset, int count)
  Stream GetStream()
  string GetEncodedString()
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  void FlushInternal()
  void Write(Byte[] buffer, int offset, int count)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.SmtpDateTime
Наследуется от: object
Поля:
  string UnknownTimeZoneDefaultOffset
  string UtcDefaultTimeZoneOffset
  int OffsetLength
  int MaxMinuteValue
  string DateFormatWithDayOfWeek
  string DateFormatWithoutDayOfWeek
  string DateFormatWithDayOfWeekAndNoSeconds
  string DateFormatWithoutDayOfWeekAndNoSeconds
  String[] s_validDateTimeFormats
  Char[] s_allowedWhiteSpaceChars
  Dictionary`2<string, TimeSpan> s_timeZoneOffsetLookup
  long TimeSpanMaxTicks
  int OffsetMaxValue
  DateTime _date
  TimeSpan _timeZone
  bool _unknownTimeZone
Свойства:
  DateTime Date
Методы:
  Dictionary`2<string, TimeSpan> InitializeShortHandLookups()
  void .ctor(DateTime value)
  void .ctor(string value)
  DateTime get_Date()
  string ToString()
  void ValidateAndGetTimeZoneOffsetValues(string offset, Boolean& positive, Int32& hours, Int32& minutes)
  void ValidateTimeZoneShortHandValue(string value)
  string FormatDate(DateTime value)
  DateTime ParseValue(string data, String& timeZone)
  bool TryParseTimeZoneString(string timeZoneString, TimeSpan& timeZone)
  TimeSpan ValidateAndGetSanitizedTimeSpan(TimeSpan span)
  string TimeSpanToOffset(TimeSpan span)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mime.TransferEncoding
Наследуется от: Enum
Поля:
  int value__
  TransferEncoding Unknown
  TransferEncoding QuotedPrintable
  TransferEncoding Base64
  TransferEncoding SevenBit
  TransferEncoding EightBit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mime.WriteStateInfoBase
Наследуется от: object
Поля:
  Byte[] _header
  Byte[] _footer
  int _maxLineLength
  Byte[] _buffer
  int _currentLineLength
  int _currentBufferUsed
  int DefaultBufferSize
Свойства:
  int FooterLength
  Byte[] Footer
  Byte[] Header
  Byte[] Buffer
  int Length
  int CurrentLineLength
  int MaxLineLength
Методы:
  void .ctor()
  void .ctor(int bufferSize, Byte[] header, Byte[] footer, int maxLineLength)
  void .ctor(int bufferSize, Byte[] header, Byte[] footer, int maxLineLength, int mimeHeaderLength)
  int get_FooterLength()
  Byte[] get_Footer()
  Byte[] get_Header()
  Byte[] get_Buffer()
  int get_Length()
  int get_CurrentLineLength()
  void EnsureSpaceInBuffer(int moreBytes)
  void Append(byte aByte)
  void Append(Byte[] bytes)
  void AppendCRLF(bool includeSpace)
  void AppendHeader()
  void AppendFooter()
  int get_MaxLineLength()
  void Reset()
  void BufferFlushed()
--------------------------------------------------
Класс: System.Net.Mail.DomainLiteralReader
Наследуется от: object
Поля:
Свойства:
Методы:
  int ReadReverse(string data, int index)
--------------------------------------------------
Класс: System.Net.Mail.DotAtomReader
Наследуется от: object
Поля:
Свойства:
Методы:
  int ReadReverse(string data, int index)
--------------------------------------------------
Класс: System.Net.Mail.MailAddressParser
Наследуется от: object
Поля:
Свойства:
Методы:
  MailAddress ParseAddress(string data)
  List`1<MailAddress> ParseMultipleAddresses(string data)
  MailAddress ParseAddress(string data, bool expectMultipleAddresses, Int32& index)
  int ReadCfwsAndThrowIfIncomplete(string data, int index)
  string ParseDomain(string data, Int32& index)
  string ParseLocalPart(string data, Int32& index, bool expectAngleBracket, bool expectMultipleAddresses)
  string ParseDisplayName(string data, Int32& index, bool expectMultipleAddresses)
  string NormalizeOrThrow(string input)
--------------------------------------------------
Класс: System.Net.Mail.QuotedPairReader
Наследуется от: object
Поля:
Свойства:
Методы:
  int CountQuotedChars(string data, int index, bool permitUnicodeEscaping)
  int CountBackslashes(string data, int index)
--------------------------------------------------
Класс: System.Net.Mail.QuotedStringFormatReader
Наследуется от: object
Поля:
Свойства:
Методы:
  int ReadReverseQuoted(string data, int index, bool permitUnicode)
  int ReadReverseUnQuoted(string data, int index, bool permitUnicode, bool expectCommaDelimiter)
  bool IsValidQtext(bool allowUnicode, char ch)
--------------------------------------------------
Класс: System.Net.Mail.WhitespaceReader
Наследуется от: object
Поля:
Свойства:
Методы:
  int ReadFwsReverse(string data, int index)
  int ReadCfwsReverse(string data, int index)
--------------------------------------------------
Класс: System.Net.Mail.BufferBuilder
Наследуется от: object
Поля:
  Byte[] _buffer
  int _offset
Свойства:
  int Length
Методы:
  void .ctor()
  void .ctor(int initialSize)
  void EnsureBuffer(int count)
  void Append(byte value)
  void Append(Byte[] value)
  void Append(Byte[] value, int offset, int count)
  void Append(string value)
  void Append(string value, bool allowUnicode)
  void Append(string value, int offset, int count, bool allowUnicode)
  void Append(string value, int offset, int count)
  int get_Length()
  Byte[] GetBuffer()
  void Reset()
--------------------------------------------------
Класс: System.Net.Mail.MailAddress
Наследуется от: object
Поля:
  Encoding _displayNameEncoding
  string _displayName
  string _userName
  string _host
  EncodedStreamFactory s_encoderFactory
Свойства:
  string DisplayName
  string User
  string Host
  string Address
  string SmtpAddress
Методы:
  void .ctor(string displayName, string userName, string domain)
  void .ctor(string address)
  void .ctor(string address, string displayName)
  void .ctor(string address, string displayName, Encoding displayNameEncoding)
  string get_DisplayName()
  string get_User()
  string GetUser(bool allowUnicode)
  string get_Host()
  string GetHost(bool allowUnicode)
  string get_Address()
  string GetAddress(bool allowUnicode)
  string get_SmtpAddress()
  string GetSmtpAddress(bool allowUnicode)
  string ToString()
  bool Equals(object value)
  int GetHashCode()
  string Encode(int charsConsumed, bool allowUnicode)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mail.MailAddressCollection
Наследуется от: Collection`1<MailAddress>
Поля:
Свойства:
Методы:
  void .ctor()
  void Add(string addresses)
  void SetItem(int index, MailAddress item)
  void InsertItem(int index, MailAddress item)
  void ParseValue(string addresses)
  string ToString()
  string Encode(int charsConsumed, bool allowUnicode)
--------------------------------------------------
Класс: System.Net.Mail.MailHeaderID
Наследуется от: Enum
Поля:
  int value__
  MailHeaderID Bcc
  MailHeaderID Cc
  MailHeaderID Comments
  MailHeaderID ContentDescription
  MailHeaderID ContentDisposition
  MailHeaderID ContentID
  MailHeaderID ContentLocation
  MailHeaderID ContentTransferEncoding
  MailHeaderID ContentType
  MailHeaderID Date
  MailHeaderID From
  MailHeaderID Importance
  MailHeaderID InReplyTo
  MailHeaderID Keywords
  MailHeaderID Max
  MailHeaderID MessageID
  MailHeaderID MimeVersion
  MailHeaderID Priority
  MailHeaderID References
  MailHeaderID ReplyTo
  MailHeaderID ResentBcc
  MailHeaderID ResentCc
  MailHeaderID ResentDate
  MailHeaderID ResentFrom
  MailHeaderID ResentMessageID
  MailHeaderID ResentSender
  MailHeaderID ResentTo
  MailHeaderID Sender
  MailHeaderID Subject
  MailHeaderID To
  MailHeaderID XPriority
  MailHeaderID XReceiver
  MailHeaderID XSender
  MailHeaderID ZMaxEnumValue
  MailHeaderID Unknown
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mail.MailHeaderInfo
Наследуется от: object
Поля:
  HeaderInfo[] s_headerInfo
  Dictionary`2<string, int> s_headerDictionary
Свойства:
Методы:
  void .cctor()
  string GetString(MailHeaderID id)
  MailHeaderID GetID(string name)
  bool IsUserSettable(string name)
  bool IsSingleton(string name)
  string NormalizeCase(string name)
  bool AllowsUnicode(string name)
--------------------------------------------------
Класс: System.Net.Mail.AlternateView
Наследуется от: AttachmentBase
Поля:
  Uri baseUri
  LinkedResourceCollection linkedResources
Свойства:
  Uri BaseUri
  LinkedResourceCollection LinkedResources
Методы:
  void .ctor(string fileName)
  void .ctor(string fileName, ContentType contentType)
  void .ctor(string fileName, string mediaType)
  void .ctor(Stream contentStream)
  void .ctor(Stream contentStream, string mediaType)
  void .ctor(Stream contentStream, ContentType contentType)
  Uri get_BaseUri()
  void set_BaseUri(Uri value)
  LinkedResourceCollection get_LinkedResources()
  AlternateView CreateAlternateViewFromString(string content)
  AlternateView CreateAlternateViewFromString(string content, ContentType contentType)
  AlternateView CreateAlternateViewFromString(string content, Encoding contentEncoding, string mediaType)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Net.Mail.AlternateViewCollection
Наследуется от: Collection`1<AlternateView>
Поля:
Свойства:
Методы:
  void .ctor()
  void Dispose()
  void ClearItems()
  void InsertItem(int index, AlternateView item)
  void RemoveItem(int index)
  void SetItem(int index, AlternateView item)
--------------------------------------------------
Класс: System.Net.Mail.Attachment
Наследуется от: AttachmentBase
Поля:
  ContentDisposition contentDisposition
  Encoding nameEncoding
Свойства:
  ContentDisposition ContentDisposition
  string Name
  Encoding NameEncoding
Методы:
  void .ctor(string fileName)
  void .ctor(string fileName, string mediaType)
  void .ctor(string fileName, ContentType contentType)
  void .ctor(Stream contentStream, ContentType contentType)
  void .ctor(Stream contentStream, string name)
  void .ctor(Stream contentStream, string name, string mediaType)
  ContentDisposition get_ContentDisposition()
  string get_Name()
  void set_Name(string value)
  Encoding get_NameEncoding()
  void set_NameEncoding(Encoding value)
  Attachment CreateAttachmentFromString(string content, ContentType contentType)
  Attachment CreateAttachmentFromString(string content, string name)
  Attachment CreateAttachmentFromString(string content, string name, Encoding contentEncoding, string mediaType)
  void InitName(string fileName)
--------------------------------------------------
Класс: System.Net.Mail.AttachmentBase
Наследуется от: object
Поля:
  string id
  ContentType contentType
  Stream contentStream
  TransferEncoding transferEncoding
Свойства:
  string ContentId
  Stream ContentStream
  ContentType ContentType
  TransferEncoding TransferEncoding
Методы:
  void .ctor(Stream contentStream)
  void .ctor(Stream contentStream, ContentType contentType)
  void .ctor(Stream contentStream, string mediaType)
  void .ctor(string fileName)
  void .ctor(string fileName, ContentType contentType)
  void .ctor(string fileName, string mediaType)
  string get_ContentId()
  void set_ContentId(string value)
  Stream get_ContentStream()
  ContentType get_ContentType()
  void set_ContentType(ContentType value)
  TransferEncoding get_TransferEncoding()
  void set_TransferEncoding(TransferEncoding value)
  void Dispose()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.Net.Mail.AttachmentCollection
Наследуется от: Collection`1<Attachment>
Поля:
Свойства:
Методы:
  void .ctor()
  void Dispose()
  void ClearItems()
  void InsertItem(int index, Attachment item)
  void RemoveItem(int index)
  void SetItem(int index, Attachment item)
--------------------------------------------------
Класс: System.Net.Mail.DeliveryNotificationOptions
Наследуется от: Enum
Поля:
  int value__
  DeliveryNotificationOptions None
  DeliveryNotificationOptions OnSuccess
  DeliveryNotificationOptions OnFailure
  DeliveryNotificationOptions Delay
  DeliveryNotificationOptions Never
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mail.LinkedResource
Наследуется от: AttachmentBase
Поля:
  Uri contentLink
Свойства:
  Uri ContentLink
Методы:
  void .ctor(string fileName)
  void .ctor(string fileName, ContentType contentType)
  void .ctor(string fileName, string mediaType)
  void .ctor(Stream contentStream)
  void .ctor(Stream contentStream, ContentType contentType)
  void .ctor(Stream contentStream, string mediaType)
  Uri get_ContentLink()
  void set_ContentLink(Uri value)
  LinkedResource CreateLinkedResourceFromString(string content)
  LinkedResource CreateLinkedResourceFromString(string content, ContentType contentType)
  LinkedResource CreateLinkedResourceFromString(string content, Encoding contentEncoding, string mediaType)
--------------------------------------------------
Класс: System.Net.Mail.LinkedResourceCollection
Наследуется от: Collection`1<LinkedResource>
Поля:
Свойства:
Методы:
  void .ctor()
  void Dispose()
  void Dispose(bool disposing)
  void ClearItems()
  void InsertItem(int index, LinkedResource item)
  void RemoveItem(int index)
  void SetItem(int index, LinkedResource item)
--------------------------------------------------
Класс: System.Net.Mail.MailMessage
Наследуется от: object
Поля:
  AlternateViewCollection alternateViews
  AttachmentCollection attachments
  MailAddressCollection bcc
  MailAddressCollection replyTo
  string body
  MailPriority priority
  MailAddress sender
  DeliveryNotificationOptions deliveryNotificationOptions
  MailAddressCollection cc
  MailAddress from
  NameValueCollection headers
  MailAddressCollection to
  string subject
  Encoding subjectEncoding
  Encoding bodyEncoding
  Encoding headersEncoding
  bool isHtml
  Char[] hex
  Encoding utf8unmarked
Свойства:
  AlternateViewCollection AlternateViews
  AttachmentCollection Attachments
  MailAddressCollection Bcc
  string Body
  ContentType BodyContentType
  TransferEncoding ContentTransferEncoding
  Encoding BodyEncoding
  TransferEncoding BodyTransferEncoding
  MailAddressCollection CC
  DeliveryNotificationOptions DeliveryNotificationOptions
  MailAddress From
  NameValueCollection Headers
  bool IsBodyHtml
  MailPriority Priority
  Encoding HeadersEncoding
  MailAddressCollection ReplyToList
  MailAddress ReplyTo
  MailAddress Sender
  string Subject
  Encoding SubjectEncoding
  MailAddressCollection To
  Encoding UTF8Unmarked
Методы:
  void .ctor()
  void .ctor(MailAddress from, MailAddress to)
  void .ctor(string from, string to)
  void .ctor(string from, string to, string subject, string body)
  AlternateViewCollection get_AlternateViews()
  AttachmentCollection get_Attachments()
  MailAddressCollection get_Bcc()
  string get_Body()
  void set_Body(string value)
  ContentType get_BodyContentType()
  TransferEncoding get_ContentTransferEncoding()
  Encoding get_BodyEncoding()
  void set_BodyEncoding(Encoding value)
  TransferEncoding get_BodyTransferEncoding()
  void set_BodyTransferEncoding(TransferEncoding value)
  MailAddressCollection get_CC()
  DeliveryNotificationOptions get_DeliveryNotificationOptions()
  void set_DeliveryNotificationOptions(DeliveryNotificationOptions value)
  MailAddress get_From()
  void set_From(MailAddress value)
  NameValueCollection get_Headers()
  bool get_IsBodyHtml()
  void set_IsBodyHtml(bool value)
  MailPriority get_Priority()
  void set_Priority(MailPriority value)
  Encoding get_HeadersEncoding()
  void set_HeadersEncoding(Encoding value)
  MailAddressCollection get_ReplyToList()
  MailAddress get_ReplyTo()
  void set_ReplyTo(MailAddress value)
  MailAddress get_Sender()
  void set_Sender(MailAddress value)
  string get_Subject()
  void set_Subject(string value)
  Encoding get_SubjectEncoding()
  void set_SubjectEncoding(Encoding value)
  MailAddressCollection get_To()
  void Dispose()
  void Dispose(bool disposing)
  Encoding GuessEncoding(string s)
  TransferEncoding GuessTransferEncoding(Encoding enc)
  string To2047(Byte[] bytes)
  string EncodeSubjectRFC2047(string s, Encoding enc)
  Encoding get_UTF8Unmarked()
  void .cctor()
--------------------------------------------------
Класс: System.Net.Mail.MailPriority
Наследуется от: Enum
Поля:
  int value__
  MailPriority Normal
  MailPriority Low
  MailPriority High
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mail.SendCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, AsyncCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, AsyncCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Mail.SmtpAccess
Наследуется от: Enum
Поля:
  int value__
  SmtpAccess None
  SmtpAccess Connect
  SmtpAccess ConnectToUnrestrictedPort
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mail.SmtpClient
Наследуется от: object
Поля:
  string host
  int port
  int timeout
  ICredentialsByHost credentials
  string pickupDirectoryLocation
  SmtpDeliveryMethod deliveryMethod
  SmtpDeliveryFormat deliveryFormat
  bool enableSsl
  X509CertificateCollection clientCertificates
  TcpClient client
  Stream stream
  StreamWriter writer
  StreamReader reader
  int boundaryIndex
  MailAddress defaultFrom
  MailMessage messageInProcess
  BackgroundWorker worker
  object user_async_state
  AuthMechs authMechs
  Mutex mutex
  string <TargetName>k__BackingField
  SendCompletedEventHandler SendCompleted
Свойства:
  X509CertificateCollection ClientCertificates
  string TargetName
  ICredentialsByHost Credentials
  SmtpDeliveryMethod DeliveryMethod
  bool EnableSsl
  string Host
  string PickupDirectoryLocation
  int Port
  SmtpDeliveryFormat DeliveryFormat
  ServicePoint ServicePoint
  int Timeout
  bool UseDefaultCredentials
Методы:
  void .ctor()
  void .ctor(string host)
  void .ctor(string host, int port)
  X509CertificateCollection get_ClientCertificates()
  string get_TargetName()
  void set_TargetName(string value)
  ICredentialsByHost get_Credentials()
  void set_Credentials(ICredentialsByHost value)
  SmtpDeliveryMethod get_DeliveryMethod()
  void set_DeliveryMethod(SmtpDeliveryMethod value)
  bool get_EnableSsl()
  void set_EnableSsl(bool value)
  string get_Host()
  void set_Host(string value)
  string get_PickupDirectoryLocation()
  void set_PickupDirectoryLocation(string value)
  int get_Port()
  void set_Port(int value)
  SmtpDeliveryFormat get_DeliveryFormat()
  void set_DeliveryFormat(SmtpDeliveryFormat value)
  ServicePoint get_ServicePoint()
  int get_Timeout()
  void set_Timeout(int value)
  bool get_UseDefaultCredentials()
  void set_UseDefaultCredentials(bool value)
  void add_SendCompleted(SendCompletedEventHandler value)
  void remove_SendCompleted(SendCompletedEventHandler value)
  void Dispose()
  void Dispose(bool disposing)
  void CheckState()
  string EncodeAddress(MailAddress address)
  string EncodeAddresses(MailAddressCollection addresses)
  string EncodeSubjectRFC2047(MailMessage message)
  string EncodeBody(MailMessage message)
  string EncodeBody(AlternateView av)
  void EndSection(string section)
  string GenerateBoundary()
  string GenerateBoundary(int index)
  bool IsError(SmtpResponse status)
  void OnSendCompleted(AsyncCompletedEventArgs e)
  void CheckCancellation()
  SmtpResponse Read()
  void ResetExtensions()
  void ParseExtensions(string extens)
  void Send(MailMessage message)
  void SendInternal(MailMessage message)
  void SendToFile(MailMessage message)
  void SendCore(MailMessage message)
  void Send(string from, string recipients, string subject, string body)
  Task SendMailAsync(MailMessage message)
  Task SendMailAsync(string from, string recipients, string subject, string body)
  void SendMailAsyncCompletedHandler(TaskCompletionSource`1<object> source, AsyncCompletedEventArgs e, SendCompletedEventHandler handler, SmtpClient client)
  void SendDot()
  void SendData(string data)
  void SendAsync(MailMessage message, object userToken)
  void SendAsync(string from, string recipients, string subject, string body, object userToken)
  void SendAsyncCancel()
  void AddPriorityHeader(MailMessage message)
  void SendSimpleBody(MailMessage message)
  void SendBodylessSingleAlternate(AlternateView av)
  void SendWithoutAttachments(MailMessage message, string boundary, bool attachmentExists)
  void SendWithAttachments(MailMessage message)
  void SendBodyWithAlternateViews(MailMessage message, string boundary, bool attachmentExists)
  void SendLinkedResources(MailMessage message, LinkedResourceCollection resources, string boundary)
  void SendAttachments(MailMessage message, Attachment body, string boundary)
  SmtpResponse SendCommand(string command)
  void SendHeader(string name, string value)
  void StartSection(string section, ContentType sectionContentType)
  void StartSection(string section, ContentType sectionContentType, AttachmentBase att)
  void StartSection(string section, ContentType sectionContentType, Attachment att, bool sendDisposition)
  string ToQuotedPrintable(string input, Encoding enc)
  string ToQuotedPrintable(Byte[] bytes)
  string GetTransferEncodingName(TransferEncoding encoding)
  void InitiateSecureConnection()
  void Authenticate()
  void CheckStatus(SmtpResponse status, int i)
  void ThrowIfError(SmtpResponse status)
  void Authenticate(string user, string password)
--------------------------------------------------
Класс: System.Net.Mail.CCredentialsByHost
Наследуется от: object
Поля:
  string userName
  string password
Свойства:
Методы:
  void .ctor(string userName, string password)
  NetworkCredential GetCredential(string host, int port, string authenticationType)
--------------------------------------------------
Класс: System.Net.Mail.SmtpDeliveryFormat
Наследуется от: Enum
Поля:
  int value__
  SmtpDeliveryFormat SevenBit
  SmtpDeliveryFormat International
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mail.SmtpDeliveryMethod
Наследуется от: Enum
Поля:
  int value__
  SmtpDeliveryMethod Network
  SmtpDeliveryMethod SpecifiedPickupDirectory
  SmtpDeliveryMethod PickupDirectoryFromIis
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Mail.SmtpException
Наследуется от: Exception
Поля:
  SmtpStatusCode statusCode
Свойства:
  SmtpStatusCode StatusCode
Методы:
  void .ctor()
  void .ctor(SmtpStatusCode statusCode)
  void .ctor(string message)
  void .ctor(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void .ctor(SmtpStatusCode statusCode, string message)
  void .ctor(string message, Exception innerException)
  SmtpStatusCode get_StatusCode()
  void set_StatusCode(SmtpStatusCode value)
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Net.Mail.SmtpFailedRecipientException
Наследуется от: SmtpException
Поля:
  string failedRecipient
Свойства:
  string FailedRecipient
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(SmtpStatusCode statusCode, string failedRecipient)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, string failedRecipient, Exception innerException)
  void .ctor(SmtpStatusCode statusCode, string failedRecipient, string serverResponse)
  string get_FailedRecipient()
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
--------------------------------------------------
Класс: System.Net.Mail.SmtpFailedRecipientsException
Наследуется от: SmtpFailedRecipientException
Поля:
  SmtpFailedRecipientException[] innerExceptions
Свойства:
  SmtpFailedRecipientException[] InnerExceptions
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, SmtpFailedRecipientException[] innerExceptions)
  void .ctor(SerializationInfo info, StreamingContext context)
  SmtpFailedRecipientException[] get_InnerExceptions()
  void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Net.Mail.SmtpPermission
Наследуется от: CodeAccessPermission
Поля:
  int version
  bool unrestricted
  SmtpAccess access
Свойства:
  SmtpAccess Access
Методы:
  void .ctor(bool unrestricted)
  void .ctor(PermissionState state)
  void .ctor(SmtpAccess access)
  SmtpAccess get_Access()
  void AddPermission(SmtpAccess access)
  IPermission Copy()
  IPermission Intersect(IPermission target)
  bool IsSubsetOf(IPermission target)
  bool IsUnrestricted()
  SecurityElement ToXml()
  void FromXml(SecurityElement securityElement)
  IPermission Union(IPermission target)
  bool IsEmpty()
  SmtpPermission Cast(IPermission target)
--------------------------------------------------
Класс: System.Net.Mail.SmtpPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
  string access
Свойства:
  string Access
Методы:
  void .ctor(SecurityAction action)
  string get_Access()
  void set_Access(string value)
  SmtpAccess GetSmtpAccess()
  IPermission CreatePermission()
--------------------------------------------------
Класс: System.Net.Mail.SmtpStatusCode
Наследуется от: Enum
Поля:
  int value__
  SmtpStatusCode BadCommandSequence
  SmtpStatusCode CannotVerifyUserWillAttemptDelivery
  SmtpStatusCode ClientNotPermitted
  SmtpStatusCode CommandNotImplemented
  SmtpStatusCode CommandParameterNotImplemented
  SmtpStatusCode CommandUnrecognized
  SmtpStatusCode ExceededStorageAllocation
  SmtpStatusCode GeneralFailure
  SmtpStatusCode HelpMessage
  SmtpStatusCode InsufficientStorage
  SmtpStatusCode LocalErrorInProcessing
  SmtpStatusCode MailboxBusy
  SmtpStatusCode MailboxNameNotAllowed
  SmtpStatusCode MailboxUnavailable
  SmtpStatusCode Ok
  SmtpStatusCode ServiceClosingTransmissionChannel
  SmtpStatusCode ServiceNotAvailable
  SmtpStatusCode ServiceReady
  SmtpStatusCode StartMailInput
  SmtpStatusCode SyntaxError
  SmtpStatusCode SystemStatus
  SmtpStatusCode TransactionFailed
  SmtpStatusCode UserNotLocalTryAlternatePath
  SmtpStatusCode UserNotLocalWillForward
  SmtpStatusCode MustIssueStartTlsFirst
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Http.DelegatingStream
Наследуется от: Stream
Поля:
  Stream _innerStream
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
  int ReadTimeout
  bool CanTimeout
  int WriteTimeout
Методы:
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  bool get_CanTimeout()
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  void .ctor(Stream innerStream)
  void Dispose(bool disposing)
  long Seek(long offset, SeekOrigin origin)
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  int ReadByte()
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  void WriteByte(byte value)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
--------------------------------------------------
Класс: System.Net.Security.SafeDeleteContext
Наследуется от: SafeHandle
Поля:
  CredHandle _handle
  string dummyStr
  Byte[] s_dummyBytes
  IdnMapping s_idnMapping
  SafeFreeCredentials _EffectiveCredential
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool get_IsInvalid()
  string ToString()
  int InitializeSecurityContext(SafeFreeCredentials& inCredentials, SafeDeleteContext& refContext, string targetName, ContextFlags inFlags, Endianness endianness, SecurityBuffer inSecBuffer, SecurityBuffer[] inSecBuffers, SecurityBuffer outSecBuffer, ContextFlags& outFlags)
  int MustRunInitializeSecurityContext(SafeFreeCredentials& inCredentials, Void* inContextPtr, Byte* targetName, ContextFlags inFlags, Endianness endianness, SecBufferDesc* inputBuffer, SafeDeleteContext outContext, SecBufferDesc& outputBuffer, ContextFlags& attributes, SafeFreeContextBuffer handleTemplate)
  int AcceptSecurityContext(SafeFreeCredentials& inCredentials, SafeDeleteContext& refContext, ContextFlags inFlags, Endianness endianness, SecurityBuffer inSecBuffer, SecurityBuffer[] inSecBuffers, SecurityBuffer outSecBuffer, ContextFlags& outFlags)
  int MustRunAcceptSecurityContext_SECURITY(SafeFreeCredentials& inCredentials, Void* inContextPtr, SecBufferDesc* inputBuffer, ContextFlags inFlags, Endianness endianness, SafeDeleteContext outContext, SecBufferDesc& outputBuffer, ContextFlags& outFlags, SafeFreeContextBuffer handleTemplate)
  int CompleteAuthToken(SafeDeleteContext& refContext, SecurityBuffer[] inSecBuffers)
  int ApplyControlToken(SafeDeleteContext& refContext, SecurityBuffer[] inSecBuffers)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Security.SafeSspiAuthDataHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeContextBuffer
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  void Set(IntPtr value)
  int EnumeratePackages(Int32& pkgnum, SafeFreeContextBuffer& pkgArray)
  SafeFreeContextBuffer CreateEmptyHandle()
  int QueryContextAttributes(SafeDeleteContext phContext, ContextAttribute contextAttribute, Byte* buffer, SafeHandle refHandle)
  int SetContextAttributes(SafeDeleteContext phContext, ContextAttribute contextAttribute, Byte[] buffer)
--------------------------------------------------
Класс: System.Net.Security.SafeFreeContextBuffer_SECURITY
Наследуется от: SafeFreeContextBuffer
Поля:
Свойства:
Методы:
  void .ctor()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeCertContext
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
  UInt32 CRYPT_ACQUIRE_SILENT_FLAG
Свойства:
Методы:
  void .ctor()
  void Set(IntPtr value)
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeCredentials
Наследуется от: SafeHandle
Поля:
  CredHandle _handle
Свойства:
  bool IsInvalid
Методы:
  void .ctor()
  bool get_IsInvalid()
  int AcquireCredentialsHandle(string package, CredentialUse intent, SEC_WINNT_AUTH_IDENTITY_W& authdata, SafeFreeCredentials& outCredential)
  int AcquireDefaultCredential(string package, CredentialUse intent, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string package, CredentialUse intent, SafeSspiAuthDataHandle& authdata, SafeFreeCredentials& outCredential)
  int AcquireCredentialsHandle(string package, CredentialUse intent, SCHANNEL_CRED& authdata, SafeFreeCredentials& outCredential)
--------------------------------------------------
Класс: System.Net.Security.SafeCredentialReference
Наследуется от: CriticalHandleMinusOneIsInvalid
Поля:
  SafeFreeCredentials Target
Свойства:
Методы:
  SafeCredentialReference CreateReference(SafeFreeCredentials target)
  void .ctor(SafeFreeCredentials target)
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeCredential_SECURITY
Наследуется от: SafeFreeCredentials
Поля:
Свойства:
Методы:
  void .ctor()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeDeleteContext_SECURITY
Наследуется от: SafeDeleteContext
Поля:
Свойства:
Методы:
  void .ctor()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeContextBufferChannelBinding
Наследуется от: ChannelBinding
Поля:
  int _size
Свойства:
  int Size
  bool IsInvalid
Методы:
  int get_Size()
  bool get_IsInvalid()
  void Set(IntPtr value)
  SafeFreeContextBufferChannelBinding CreateEmptyHandle()
  int QueryContextChannelBinding(SafeDeleteContext phContext, ContextAttribute contextAttribute, SecPkgContext_Bindings* buffer, SafeFreeContextBufferChannelBinding refHandle)
  string ToString()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Security.SafeFreeContextBufferChannelBinding_SECURITY
Наследуется от: SafeFreeContextBufferChannelBinding
Поля:
Свойства:
Методы:
  bool ReleaseHandle()
  void .ctor()
--------------------------------------------------
Класс: System.Net.Security.CertificateHelper
Наследуется от: object
Поля:
  string ClientAuthenticationOID
Свойства:
Методы:
  X509Certificate2 GetEligibleClientCertificate()
  X509Certificate2 GetEligibleClientCertificate(X509CertificateCollection candidateCerts)
  X509Certificate2 GetEligibleClientCertificate(X509Certificate2Collection candidateCerts)
--------------------------------------------------
Класс: System.Net.Security.NegotiateStreamPal
Наследуется от: object
Поля:
Свойства:
Методы:
  int QueryMaxTokenSize(string package)
  SafeFreeCredentials AcquireDefaultCredential(string package, bool isServer)
  SafeFreeCredentials AcquireCredentialsHandle(string package, bool isServer, NetworkCredential credential)
  string QueryContextClientSpecifiedSpn(SafeDeleteContext securityContext)
  string QueryContextAuthenticationPackage(SafeDeleteContext securityContext)
  SecurityStatusPal InitializeSecurityContext(SafeFreeCredentials credentialsHandle, SafeDeleteContext& securityContext, string spn, ContextFlagsPal requestedContextFlags, SecurityBuffer[] inSecurityBufferArray, SecurityBuffer outSecurityBuffer, ContextFlagsPal& contextFlags)
  SecurityStatusPal CompleteAuthToken(SafeDeleteContext& securityContext, SecurityBuffer[] inSecurityBufferArray)
  SecurityStatusPal AcceptSecurityContext(SafeFreeCredentials credentialsHandle, SafeDeleteContext& securityContext, ContextFlagsPal requestedContextFlags, SecurityBuffer[] inSecurityBufferArray, SecurityBuffer outSecurityBuffer, ContextFlagsPal& contextFlags)
  Win32Exception CreateExceptionFromError(SecurityStatusPal statusCode)
  int VerifySignature(SafeDeleteContext securityContext, Byte[] buffer, int offset, int count)
  int MakeSignature(SafeDeleteContext securityContext, Byte[] buffer, int offset, int count, Byte[]& output)
--------------------------------------------------
Класс: System.Net.Security.SSPIHandleCache
Наследуется от: object
Поля:
  int c_MaxCacheSize
  SafeCredentialReference[] s_cacheSlots
  int s_current
Свойства:
Методы:
  void CacheCredential(SafeFreeCredentials newHandle)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Security.SecurityBuffer
Наследуется от: object
Поля:
  int size
  SecurityBufferType type
  Byte[] token
  SafeHandle unmanagedToken
  int offset
Свойства:
Методы:
  void .ctor(Byte[] data, int offset, int size, SecurityBufferType tokentype)
  void .ctor(Byte[] data, SecurityBufferType tokentype)
  void .ctor(int size, SecurityBufferType tokentype)
  void .ctor(ChannelBinding binding)
--------------------------------------------------
Класс: System.Net.Security.SecurityBufferType
Наследуется от: Enum
Поля:
  int value__
  SecurityBufferType SECBUFFER_EMPTY
  SecurityBufferType SECBUFFER_DATA
  SecurityBufferType SECBUFFER_TOKEN
  SecurityBufferType SECBUFFER_PKG_PARAMS
  SecurityBufferType SECBUFFER_MISSING
  SecurityBufferType SECBUFFER_EXTRA
  SecurityBufferType SECBUFFER_STREAM_TRAILER
  SecurityBufferType SECBUFFER_STREAM_HEADER
  SecurityBufferType SECBUFFER_PADDING
  SecurityBufferType SECBUFFER_STREAM
  SecurityBufferType SECBUFFER_CHANNEL_BINDINGS
  SecurityBufferType SECBUFFER_TARGET_HOST
  SecurityBufferType SECBUFFER_ALERT
  SecurityBufferType SECBUFFER_APPLICATION_PROTOCOLS
  SecurityBufferType SECBUFFER_READONLY
  SecurityBufferType SECBUFFER_READONLY_WITH_CHECKSUM
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.SecurityContextTokenHandle
Наследуется от: CriticalHandleZeroOrMinusOneIsInvalid
Поля:
  int _disposed
Свойства:
Методы:
  void .ctor()
  IntPtr DangerousGetHandle()
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Net.Security.SslClientAuthenticationOptionsExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  SslClientAuthenticationOptions ShallowClone(SslClientAuthenticationOptions options)
--------------------------------------------------
Класс: System.Net.Security.SslApplicationProtocol
Наследуется от: ValueType
Поля:
  ReadOnlyMemory`1<byte> _readOnlyProtocol
  Encoding s_utf8
  SslApplicationProtocol Http2
  SslApplicationProtocol Http11
Свойства:
  ReadOnlyMemory`1<byte> Protocol
Методы:
  void .ctor(Byte[] protocol, bool copy)
  void .ctor(Byte[] protocol)
  void .ctor(string protocol)
  ReadOnlyMemory`1<byte> get_Protocol()
  bool Equals(SslApplicationProtocol other)
  bool Equals(object obj)
  int GetHashCode()
  string ToString()
  char GetHexValue(int i)
  bool op_Equality(SslApplicationProtocol left, SslApplicationProtocol right)
  bool op_Inequality(SslApplicationProtocol left, SslApplicationProtocol right)
  void .cctor()
--------------------------------------------------
Класс: System.Net.Security.SslAuthenticationOptions
Наследуется от: object
Поля:
  bool <AllowRenegotiation>k__BackingField
  string <TargetHost>k__BackingField
  X509CertificateCollection <ClientCertificates>k__BackingField
  List`1<SslApplicationProtocol> <ApplicationProtocols>k__BackingField
  bool <IsServer>k__BackingField
  RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField
  LocalCertificateSelectionCallback <LocalCertificateSelectionCallback>k__BackingField
  X509Certificate <ServerCertificate>k__BackingField
  SslProtocols <EnabledSslProtocols>k__BackingField
  X509RevocationMode <CertificateRevocationCheckMode>k__BackingField
  EncryptionPolicy <EncryptionPolicy>k__BackingField
  bool <RemoteCertRequired>k__BackingField
  bool <CheckCertName>k__BackingField
  RemoteCertValidationCallback <CertValidationDelegate>k__BackingField
  LocalCertSelectionCallback <CertSelectionDelegate>k__BackingField
  ServerCertSelectionCallback <ServerCertSelectionDelegate>k__BackingField
Свойства:
  bool AllowRenegotiation
  string TargetHost
  X509CertificateCollection ClientCertificates
  List`1<SslApplicationProtocol> ApplicationProtocols
  bool IsServer
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  LocalCertificateSelectionCallback LocalCertificateSelectionCallback
  X509Certificate ServerCertificate
  SslProtocols EnabledSslProtocols
  X509RevocationMode CertificateRevocationCheckMode
  EncryptionPolicy EncryptionPolicy
  bool RemoteCertRequired
  bool CheckCertName
  RemoteCertValidationCallback CertValidationDelegate
  LocalCertSelectionCallback CertSelectionDelegate
  ServerCertSelectionCallback ServerCertSelectionDelegate
Методы:
  void .ctor(SslClientAuthenticationOptions sslClientAuthenticationOptions, RemoteCertValidationCallback remoteCallback, LocalCertSelectionCallback localCallback)
  void .ctor(SslServerAuthenticationOptions sslServerAuthenticationOptions)
  bool get_AllowRenegotiation()
  void set_AllowRenegotiation(bool value)
  string get_TargetHost()
  void set_TargetHost(string value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  List`1<SslApplicationProtocol> get_ApplicationProtocols()
  bool get_IsServer()
  void set_IsServer(bool value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  LocalCertificateSelectionCallback get_LocalCertificateSelectionCallback()
  void set_LocalCertificateSelectionCallback(LocalCertificateSelectionCallback value)
  X509Certificate get_ServerCertificate()
  void set_ServerCertificate(X509Certificate value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
  X509RevocationMode get_CertificateRevocationCheckMode()
  void set_CertificateRevocationCheckMode(X509RevocationMode value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  bool get_RemoteCertRequired()
  void set_RemoteCertRequired(bool value)
  bool get_CheckCertName()
  void set_CheckCertName(bool value)
  RemoteCertValidationCallback get_CertValidationDelegate()
  void set_CertValidationDelegate(RemoteCertValidationCallback value)
  LocalCertSelectionCallback get_CertSelectionDelegate()
  void set_CertSelectionDelegate(LocalCertSelectionCallback value)
  ServerCertSelectionCallback get_ServerCertSelectionDelegate()
  void set_ServerCertSelectionDelegate(ServerCertSelectionCallback value)
--------------------------------------------------
Класс: System.Net.Security.SslClientAuthenticationOptions
Наследуется от: object
Поля:
  EncryptionPolicy _encryptionPolicy
  X509RevocationMode _checkCertificateRevocation
  SslProtocols _enabledSslProtocols
  bool _allowRenegotiation
  LocalCertificateSelectionCallback <LocalCertificateSelectionCallback>k__BackingField
  RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField
  List`1<SslApplicationProtocol> <ApplicationProtocols>k__BackingField
  string <TargetHost>k__BackingField
  X509CertificateCollection <ClientCertificates>k__BackingField
Свойства:
  bool AllowRenegotiation
  LocalCertificateSelectionCallback LocalCertificateSelectionCallback
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  List`1<SslApplicationProtocol> ApplicationProtocols
  string TargetHost
  X509CertificateCollection ClientCertificates
  X509RevocationMode CertificateRevocationCheckMode
  EncryptionPolicy EncryptionPolicy
  SslProtocols EnabledSslProtocols
Методы:
  bool get_AllowRenegotiation()
  void set_AllowRenegotiation(bool value)
  LocalCertificateSelectionCallback get_LocalCertificateSelectionCallback()
  void set_LocalCertificateSelectionCallback(LocalCertificateSelectionCallback value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  List`1<SslApplicationProtocol> get_ApplicationProtocols()
  void set_ApplicationProtocols(List`1<SslApplicationProtocol> value)
  string get_TargetHost()
  void set_TargetHost(string value)
  X509CertificateCollection get_ClientCertificates()
  void set_ClientCertificates(X509CertificateCollection value)
  X509RevocationMode get_CertificateRevocationCheckMode()
  void set_CertificateRevocationCheckMode(X509RevocationMode value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Security.SslServerAuthenticationOptions
Наследуется от: object
Поля:
  X509RevocationMode _checkCertificateRevocation
  SslProtocols _enabledSslProtocols
  EncryptionPolicy _encryptionPolicy
  bool _allowRenegotiation
  bool <ClientCertificateRequired>k__BackingField
  List`1<SslApplicationProtocol> <ApplicationProtocols>k__BackingField
  RemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField
  ServerCertificateSelectionCallback <ServerCertificateSelectionCallback>k__BackingField
  X509Certificate <ServerCertificate>k__BackingField
Свойства:
  bool AllowRenegotiation
  bool ClientCertificateRequired
  List`1<SslApplicationProtocol> ApplicationProtocols
  RemoteCertificateValidationCallback RemoteCertificateValidationCallback
  ServerCertificateSelectionCallback ServerCertificateSelectionCallback
  X509Certificate ServerCertificate
  SslProtocols EnabledSslProtocols
  X509RevocationMode CertificateRevocationCheckMode
  EncryptionPolicy EncryptionPolicy
Методы:
  bool get_AllowRenegotiation()
  void set_AllowRenegotiation(bool value)
  bool get_ClientCertificateRequired()
  void set_ClientCertificateRequired(bool value)
  List`1<SslApplicationProtocol> get_ApplicationProtocols()
  void set_ApplicationProtocols(List`1<SslApplicationProtocol> value)
  RemoteCertificateValidationCallback get_RemoteCertificateValidationCallback()
  void set_RemoteCertificateValidationCallback(RemoteCertificateValidationCallback value)
  ServerCertificateSelectionCallback get_ServerCertificateSelectionCallback()
  void set_ServerCertificateSelectionCallback(ServerCertificateSelectionCallback value)
  X509Certificate get_ServerCertificate()
  void set_ServerCertificate(X509Certificate value)
  SslProtocols get_EnabledSslProtocols()
  void set_EnabledSslProtocols(SslProtocols value)
  X509RevocationMode get_CertificateRevocationCheckMode()
  void set_CertificateRevocationCheckMode(X509RevocationMode value)
  EncryptionPolicy get_EncryptionPolicy()
  void set_EncryptionPolicy(EncryptionPolicy value)
  void .ctor()
--------------------------------------------------
Класс: System.Net.Security.AuthenticatedStream
Наследуется от: Stream
Поля:
  Stream _InnerStream
  bool _LeaveStreamOpen
Свойства:
  bool LeaveInnerStreamOpen
  Stream InnerStream
  bool IsAuthenticated
  bool IsMutuallyAuthenticated
  bool IsEncrypted
  bool IsSigned
  bool IsServer
Методы:
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen)
  bool get_LeaveInnerStreamOpen()
  Stream get_InnerStream()
  void Dispose(bool disposing)
  bool get_IsAuthenticated()
  bool get_IsMutuallyAuthenticated()
  bool get_IsEncrypted()
  bool get_IsSigned()
  bool get_IsServer()
--------------------------------------------------
Класс: System.Net.Security.AuthenticationLevel
Наследуется от: Enum
Поля:
  int value__
  AuthenticationLevel None
  AuthenticationLevel MutualAuthRequested
  AuthenticationLevel MutualAuthRequired
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.ProtectionLevel
Наследуется от: Enum
Поля:
  int value__
  ProtectionLevel None
  ProtectionLevel Sign
  ProtectionLevel EncryptAndSign
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.EncryptionPolicy
Наследуется от: Enum
Поля:
  int value__
  EncryptionPolicy RequireEncryption
  EncryptionPolicy AllowNoEncryption
  EncryptionPolicy NoEncryption
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.LocalCertificateSelectionCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  X509Certificate Invoke(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers)
  IAsyncResult BeginInvoke(object sender, string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers, AsyncCallback callback, object object)
  X509Certificate EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Security.NegotiateStream
Наследуется от: AuthenticatedStream
Поля:
  int readTimeout
  int writeTimeout
Свойства:
  bool CanRead
  bool CanSeek
  bool CanTimeout
  bool CanWrite
  TokenImpersonationLevel ImpersonationLevel
  bool IsAuthenticated
  bool IsEncrypted
  bool IsMutuallyAuthenticated
  bool IsServer
  bool IsSigned
  long Length
  long Position
  int ReadTimeout
  IIdentity RemoteIdentity
  int WriteTimeout
Методы:
  void .ctor(Stream innerStream)
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanTimeout()
  bool get_CanWrite()
  TokenImpersonationLevel get_ImpersonationLevel()
  bool get_IsAuthenticated()
  bool get_IsEncrypted()
  bool get_IsMutuallyAuthenticated()
  bool get_IsServer()
  bool get_IsSigned()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  IIdentity get_RemoteIdentity()
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  IAsyncResult BeginAuthenticateAsClient(AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsClient(NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsClient(NetworkCredential credential, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsServer(AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsServer(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsServer(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsServer(ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  void AuthenticateAsClient()
  void AuthenticateAsClient(NetworkCredential credential, string targetName)
  void AuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, string targetName)
  void AuthenticateAsClient(NetworkCredential credential, ChannelBinding binding, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)
  void AuthenticateAsClient(NetworkCredential credential, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)
  void AuthenticateAsServer()
  void AuthenticateAsServer(ExtendedProtectionPolicy policy)
  void AuthenticateAsServer(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)
  void AuthenticateAsServer(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)
  void Dispose(bool disposing)
  void EndAuthenticateAsClient(IAsyncResult asyncResult)
  int EndRead(IAsyncResult asyncResult)
  void EndAuthenticateAsServer(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  void Flush()
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  Task AuthenticateAsClientAsync()
  Task AuthenticateAsClientAsync(NetworkCredential credential, string targetName)
  Task AuthenticateAsClientAsync(NetworkCredential credential, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)
  Task AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, string targetName)
  Task AuthenticateAsClientAsync(NetworkCredential credential, ChannelBinding binding, string targetName, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel allowedImpersonationLevel)
  Task AuthenticateAsServerAsync()
  Task AuthenticateAsServerAsync(ExtendedProtectionPolicy policy)
  Task AuthenticateAsServerAsync(NetworkCredential credential, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)
  Task AuthenticateAsServerAsync(NetworkCredential credential, ExtendedProtectionPolicy policy, ProtectionLevel requiredProtectionLevel, TokenImpersonationLevel requiredImpersonationLevel)
--------------------------------------------------
Класс: System.Net.Security.RemoteCertificateValidationCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
  IAsyncResult BeginInvoke(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Security.SslPolicyErrors
Наследуется от: Enum
Поля:
  int value__
  SslPolicyErrors None
  SslPolicyErrors RemoteCertificateNotAvailable
  SslPolicyErrors RemoteCertificateNameMismatch
  SslPolicyErrors RemoteCertificateChainErrors
Свойства:
Методы:
--------------------------------------------------
Класс: System.Net.Security.ServerCertificateSelectionCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  X509Certificate Invoke(object sender, string hostName)
  IAsyncResult BeginInvoke(object sender, string hostName, AsyncCallback callback, object object)
  X509Certificate EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Security.RemoteCertValidationCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(string host, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
  IAsyncResult BeginInvoke(string host, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Security.LocalCertSelectionCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  X509Certificate Invoke(string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers)
  IAsyncResult BeginInvoke(string targetHost, X509CertificateCollection localCertificates, X509Certificate remoteCertificate, String[] acceptableIssuers, AsyncCallback callback, object object)
  X509Certificate EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Security.ServerCertSelectionCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  X509Certificate Invoke(string hostName)
  IAsyncResult BeginInvoke(string hostName, AsyncCallback callback, object object)
  X509Certificate EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Net.Security.SslStream
Наследуется от: AuthenticatedStream
Поля:
  MobileTlsProvider provider
  MonoTlsSettings settings
  RemoteCertificateValidationCallback validationCallback
  LocalCertificateSelectionCallback selectionCallback
  MobileAuthenticatedStream impl
  bool explicitSettings
Свойства:
  MobileAuthenticatedStream Impl
  MonoTlsProvider Provider
  string InternalTargetHost
  TransportContext TransportContext
  bool IsAuthenticated
  bool IsMutuallyAuthenticated
  bool IsEncrypted
  bool IsSigned
  bool IsServer
  SslProtocols SslProtocol
  bool CheckCertRevocationStatus
  X509Certificate LocalCertificate
  X509Certificate RemoteCertificate
  CipherAlgorithmType CipherAlgorithm
  int CipherStrength
  HashAlgorithmType HashAlgorithm
  int HashStrength
  ExchangeAlgorithmType KeyExchangeAlgorithm
  int KeyExchangeStrength
  SslApplicationProtocol NegotiatedApplicationProtocol
  bool CanSeek
  bool CanRead
  bool CanTimeout
  bool CanWrite
  int ReadTimeout
  int WriteTimeout
  long Length
  long Position
Методы:
  MobileAuthenticatedStream get_Impl()
  MonoTlsProvider get_Provider()
  string get_InternalTargetHost()
  MobileTlsProvider GetProvider()
  void .ctor(Stream innerStream)
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen)
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback)
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback, LocalCertificateSelectionCallback userCertificateSelectionCallback)
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback, LocalCertificateSelectionCallback userCertificateSelectionCallback, EncryptionPolicy encryptionPolicy)
  void .ctor(Stream innerStream, bool leaveInnerStreamOpen, MonoTlsProvider provider, MonoTlsSettings settings)
  IMonoSslStream CreateMonoSslStream(Stream innerStream, bool leaveInnerStreamOpen, MobileTlsProvider provider, MonoTlsSettings settings)
  void SetAndVerifyValidationCallback(RemoteCertificateValidationCallback callback)
  void SetAndVerifySelectionCallback(LocalCertificateSelectionCallback callback)
  MonoSslServerAuthenticationOptions CreateAuthenticationOptions(SslServerAuthenticationOptions sslServerAuthenticationOptions)
  void AuthenticateAsClient(string targetHost)
  void AuthenticateAsClient(string targetHost, X509CertificateCollection clientCertificates, bool checkCertificateRevocation)
  void AuthenticateAsClient(string targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  IAsyncResult BeginAuthenticateAsClient(string targetHost, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsClient(string targetHost, X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsClient(string targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState)
  void EndAuthenticateAsClient(IAsyncResult asyncResult)
  void AuthenticateAsServer(X509Certificate serverCertificate)
  void AuthenticateAsServer(X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation)
  void AuthenticateAsServer(X509Certificate serverCertificate, bool clientCertificateRequired, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  IAsyncResult BeginAuthenticateAsServer(X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsServer(X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginAuthenticateAsServer(X509Certificate serverCertificate, bool clientCertificateRequired, SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState)
  void EndAuthenticateAsServer(IAsyncResult asyncResult)
  TransportContext get_TransportContext()
  Task AuthenticateAsClientAsync(string targetHost)
  Task AuthenticateAsClientAsync(string targetHost, X509CertificateCollection clientCertificates, bool checkCertificateRevocation)
  Task AuthenticateAsClientAsync(string targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  Task AuthenticateAsClientAsync(SslClientAuthenticationOptions sslClientAuthenticationOptions, CancellationToken cancellationToken)
  Task AuthenticateAsServerAsync(X509Certificate serverCertificate)
  Task AuthenticateAsServerAsync(X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation)
  Task AuthenticateAsServerAsync(X509Certificate serverCertificate, bool clientCertificateRequired, SslProtocols enabledSslProtocols, bool checkCertificateRevocation)
  Task AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)
  Task ShutdownAsync()
  bool get_IsAuthenticated()
  bool get_IsMutuallyAuthenticated()
  bool get_IsEncrypted()
  bool get_IsSigned()
  bool get_IsServer()
  SslProtocols get_SslProtocol()
  bool get_CheckCertRevocationStatus()
  X509Certificate get_LocalCertificate()
  X509Certificate get_RemoteCertificate()
  CipherAlgorithmType get_CipherAlgorithm()
  int get_CipherStrength()
  HashAlgorithmType get_HashAlgorithm()
  int get_HashStrength()
  ExchangeAlgorithmType get_KeyExchangeAlgorithm()
  int get_KeyExchangeStrength()
  SslApplicationProtocol get_NegotiatedApplicationProtocol()
  bool get_CanSeek()
  bool get_CanRead()
  bool get_CanTimeout()
  bool get_CanWrite()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void SetLength(long value)
  long Seek(long offset, SeekOrigin origin)
  Task FlushAsync(CancellationToken cancellationToken)
  void Flush()
  void CheckDisposed()
  void Dispose(bool disposing)
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer)
  void Write(Byte[] buffer, int offset, int count)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult asyncResult)
--------------------------------------------------
Класс: System.ComponentModel.DefaultValueAttribute
Наследуется от: Attribute
Поля:
  object _value
  object s_convertFromInvariantString
Свойства:
  object Value
Методы:
  void .ctor(Type type, string value)
  void .ctor(char value)
  void .ctor(byte value)
  void .ctor(short value)
  void .ctor(int value)
  void .ctor(long value)
  void .ctor(float value)
  void .ctor(double value)
  void .ctor(bool value)
  void .ctor(string value)
  void .ctor(object value)
  void .ctor(sbyte value)
  void .ctor(ushort value)
  void .ctor(UInt32 value)
  void .ctor(ulong value)
  object get_Value()
  bool Equals(object obj)
  int GetHashCode()
  void SetValue(object value)
  bool <.ctor>g__TryConvertFromInvariantString|2_0(Type typeToConvert, string stringValue, Object& conversionResult)
--------------------------------------------------
Класс: System.ComponentModel.EditorBrowsableAttribute
Наследуется от: Attribute
Поля:
  EditorBrowsableState browsableState
Свойства:
  EditorBrowsableState State
Методы:
  void .ctor(EditorBrowsableState state)
  void .ctor()
  EditorBrowsableState get_State()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.EditorBrowsableState
Наследуется от: Enum
Поля:
  int value__
  EditorBrowsableState Always
  EditorBrowsableState Never
  EditorBrowsableState Advanced
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.AsyncOperation
Наследуется от: object
Поля:
  SynchronizationContext _syncContext
  object _userSuppliedState
  bool _alreadyCompleted
Свойства:
  object UserSuppliedState
  SynchronizationContext SynchronizationContext
Методы:
  void .ctor(object userSuppliedState, SynchronizationContext syncContext)
  void Finalize()
  object get_UserSuppliedState()
  SynchronizationContext get_SynchronizationContext()
  void Post(SendOrPostCallback d, object arg)
  void PostOperationCompleted(SendOrPostCallback d, object arg)
  void OperationCompleted()
  void PostCore(SendOrPostCallback d, object arg, bool markCompleted)
  void OperationCompletedCore()
  void VerifyNotCompleted()
  void VerifyDelegateNotNull(SendOrPostCallback d)
  AsyncOperation CreateOperation(object userSuppliedState, SynchronizationContext syncContext)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.AsyncOperationManager
Наследуется от: object
Поля:
Свойства:
  SynchronizationContext SynchronizationContext
Методы:
  AsyncOperation CreateOperation(object userSuppliedState)
  SynchronizationContext get_SynchronizationContext()
  void set_SynchronizationContext(SynchronizationContext value)
--------------------------------------------------
Класс: System.ComponentModel.BackgroundWorker
Наследуется от: Component
Поля:
  bool _canCancelWorker
  bool _workerReportsProgress
  bool _cancellationPending
  bool _isRunning
  AsyncOperation _asyncOperation
  SendOrPostCallback _operationCompleted
  SendOrPostCallback _progressReporter
  DoWorkEventHandler DoWork
  ProgressChangedEventHandler ProgressChanged
  RunWorkerCompletedEventHandler RunWorkerCompleted
Свойства:
  bool CancellationPending
  bool IsBusy
  bool WorkerReportsProgress
  bool WorkerSupportsCancellation
Методы:
  void .ctor()
  void AsyncOperationCompleted(object arg)
  bool get_CancellationPending()
  void CancelAsync()
  void add_DoWork(DoWorkEventHandler value)
  void remove_DoWork(DoWorkEventHandler value)
  bool get_IsBusy()
  void OnDoWork(DoWorkEventArgs e)
  void OnRunWorkerCompleted(RunWorkerCompletedEventArgs e)
  void OnProgressChanged(ProgressChangedEventArgs e)
  void add_ProgressChanged(ProgressChangedEventHandler value)
  void remove_ProgressChanged(ProgressChangedEventHandler value)
  void ProgressReporter(object arg)
  void ReportProgress(int percentProgress)
  void ReportProgress(int percentProgress, object userState)
  void RunWorkerAsync()
  void RunWorkerAsync(object argument)
  void add_RunWorkerCompleted(RunWorkerCompletedEventHandler value)
  void remove_RunWorkerCompleted(RunWorkerCompletedEventHandler value)
  bool get_WorkerReportsProgress()
  void set_WorkerReportsProgress(bool value)
  bool get_WorkerSupportsCancellation()
  void set_WorkerSupportsCancellation(bool value)
  void WorkerThreadStart(object argument)
  void Dispose(bool disposing)
  void <RunWorkerAsync>b__27_0(object arg)
--------------------------------------------------
Класс: System.ComponentModel.BrowsableAttribute
Наследуется от: Attribute
Поля:
  BrowsableAttribute Yes
  BrowsableAttribute No
  BrowsableAttribute Default
  bool <Browsable>k__BackingField
Свойства:
  bool Browsable
Методы:
  void .ctor(bool browsable)
  bool get_Browsable()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ComponentCollection
Наследуется от: ReadOnlyCollectionBase
Поля:
Свойства:
  IComponent Item
  IComponent Item
Методы:
  void .ctor(IComponent[] components)
  IComponent get_Item(string name)
  IComponent get_Item(int index)
  void CopyTo(IComponent[] array, int index)
--------------------------------------------------
Класс: System.ComponentModel.DescriptionAttribute
Наследуется от: Attribute
Поля:
  DescriptionAttribute Default
  string <DescriptionValue>k__BackingField
Свойства:
  string Description
  string DescriptionValue
Методы:
  void .ctor()
  void .ctor(string description)
  string get_Description()
  string get_DescriptionValue()
  void set_DescriptionValue(string value)
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DesignOnlyAttribute
Наследуется от: Attribute
Поля:
  bool <IsDesignOnly>k__BackingField
  DesignOnlyAttribute Yes
  DesignOnlyAttribute No
  DesignOnlyAttribute Default
Свойства:
  bool IsDesignOnly
Методы:
  void .ctor(bool isDesignOnly)
  bool get_IsDesignOnly()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DesignerCategoryAttribute
Наследуется от: Attribute
Поля:
  DesignerCategoryAttribute Component
  DesignerCategoryAttribute Default
  DesignerCategoryAttribute Form
  DesignerCategoryAttribute Generic
  string <Category>k__BackingField
Свойства:
  string Category
  object TypeId
Методы:
  void .ctor()
  void .ctor(string category)
  string get_Category()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  object get_TypeId()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DesignerSerializationVisibility
Наследуется от: Enum
Поля:
  int value__
  DesignerSerializationVisibility Hidden
  DesignerSerializationVisibility Visible
  DesignerSerializationVisibility Content
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.DesignerSerializationVisibilityAttribute
Наследуется от: Attribute
Поля:
  DesignerSerializationVisibilityAttribute Content
  DesignerSerializationVisibilityAttribute Hidden
  DesignerSerializationVisibilityAttribute Visible
  DesignerSerializationVisibilityAttribute Default
  DesignerSerializationVisibility <Visibility>k__BackingField
Свойства:
  DesignerSerializationVisibility Visibility
Методы:
  void .ctor(DesignerSerializationVisibility visibility)
  DesignerSerializationVisibility get_Visibility()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DisplayNameAttribute
Наследуется от: Attribute
Поля:
  DisplayNameAttribute Default
  string <DisplayNameValue>k__BackingField
Свойства:
  string DisplayName
  string DisplayNameValue
Методы:
  void .ctor()
  void .ctor(string displayName)
  string get_DisplayName()
  string get_DisplayNameValue()
  void set_DisplayNameValue(string value)
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.EventHandlerList
Наследуется от: object
Поля:
  ListEntry _head
  Component _parent
Свойства:
  Delegate Item
Методы:
  void .ctor(Component parent)
  void .ctor()
  Delegate get_Item(object key)
  void set_Item(object key, Delegate value)
  void AddHandler(object key, Delegate value)
  void AddHandlers(EventHandlerList listToAddFrom)
  void Dispose()
  ListEntry Find(object key)
  void RemoveHandler(object key, Delegate value)
--------------------------------------------------
Класс: System.ComponentModel.IContainer
Поля:
Свойства:
  ComponentCollection Components
Методы:
  void Add(IComponent component)
  void Add(IComponent component, string name)
  ComponentCollection get_Components()
  void Remove(IComponent component)
--------------------------------------------------
Класс: System.ComponentModel.ISite
Поля:
Свойства:
  IComponent Component
  IContainer Container
  bool DesignMode
  string Name
Методы:
  IComponent get_Component()
  IContainer get_Container()
  bool get_DesignMode()
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: System.ComponentModel.ISupportInitialize
Поля:
Свойства:
Методы:
  void BeginInit()
  void EndInit()
--------------------------------------------------
Класс: System.ComponentModel.ISynchronizeInvoke
Поля:
Свойства:
  bool InvokeRequired
Методы:
  bool get_InvokeRequired()
  IAsyncResult BeginInvoke(Delegate method, Object[] args)
  object EndInvoke(IAsyncResult result)
  object Invoke(Delegate method, Object[] args)
--------------------------------------------------
Класс: System.ComponentModel.ImmutableObjectAttribute
Наследуется от: Attribute
Поля:
  ImmutableObjectAttribute Yes
  ImmutableObjectAttribute No
  ImmutableObjectAttribute Default
  bool <Immutable>k__BackingField
Свойства:
  bool Immutable
Методы:
  void .ctor(bool immutable)
  bool get_Immutable()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.InitializationEventAttribute
Наследуется от: Attribute
Поля:
  string <EventName>k__BackingField
Свойства:
  string EventName
Методы:
  void .ctor(string eventName)
  string get_EventName()
--------------------------------------------------
Класс: System.ComponentModel.InvalidEnumArgumentException
Наследуется от: ArgumentException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(string argumentName, int invalidValue, Type enumClass)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.LocalizableAttribute
Наследуется от: Attribute
Поля:
  bool <IsLocalizable>k__BackingField
  LocalizableAttribute Yes
  LocalizableAttribute No
  LocalizableAttribute Default
Свойства:
  bool IsLocalizable
Методы:
  void .ctor(bool isLocalizable)
  bool get_IsLocalizable()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.MergablePropertyAttribute
Наследуется от: Attribute
Поля:
  MergablePropertyAttribute Yes
  MergablePropertyAttribute No
  MergablePropertyAttribute Default
  bool <AllowMerge>k__BackingField
Свойства:
  bool AllowMerge
Методы:
  void .ctor(bool allowMerge)
  bool get_AllowMerge()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ReadOnlyAttribute
Наследуется от: Attribute
Поля:
  ReadOnlyAttribute Yes
  ReadOnlyAttribute No
  ReadOnlyAttribute Default
  bool <IsReadOnly>k__BackingField
Свойства:
  bool IsReadOnly
Методы:
  void .ctor(bool isReadOnly)
  bool get_IsReadOnly()
  bool Equals(object value)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.AddingNewEventArgs
Наследуется от: EventArgs
Поля:
  object <NewObject>k__BackingField
Свойства:
  object NewObject
Методы:
  void .ctor()
  void .ctor(object newObject)
  object get_NewObject()
  void set_NewObject(object value)
--------------------------------------------------
Класс: System.ComponentModel.AddingNewEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, AddingNewEventArgs e)
  IAsyncResult BeginInvoke(object sender, AddingNewEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.AmbientValueAttribute
Наследуется от: Attribute
Поля:
  object <Value>k__BackingField
Свойства:
  object Value
Методы:
  void .ctor(Type type, string value)
  void .ctor(char value)
  void .ctor(byte value)
  void .ctor(short value)
  void .ctor(int value)
  void .ctor(long value)
  void .ctor(float value)
  void .ctor(double value)
  void .ctor(bool value)
  void .ctor(string value)
  void .ctor(object value)
  object get_Value()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.ArrayConverter
Наследуется от: CollectionConverter
Поля:
Свойства:
Методы:
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.AttributeCollection
Наследуется от: object
Поля:
  AttributeCollection Empty
  Hashtable s_defaultAttributes
  Attribute[] _attributes
  object s_internalSyncObject
  int FOUND_TYPES_LIMIT
  AttributeEntry[] _foundAttributeTypes
  int _index
Свойства:
  Attribute[] Attributes
  int Count
  Attribute Item
  Attribute Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  int System.Collections.ICollection.Count
Методы:
  void .ctor(Attribute[] attributes)
  void .ctor()
  AttributeCollection FromExisting(AttributeCollection existing, Attribute[] newAttributes)
  Attribute[] get_Attributes()
  int get_Count()
  Attribute get_Item(int index)
  Attribute get_Item(Type attributeType)
  bool Contains(Attribute attribute)
  bool Contains(Attribute[] attributes)
  Attribute GetDefaultAttribute(Type attributeType)
  IEnumerator GetEnumerator()
  bool Matches(Attribute attribute)
  bool Matches(Attribute[] attributes)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  int System.Collections.ICollection.get_Count()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void CopyTo(Array array, int index)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.AttributeProviderAttribute
Наследуется от: Attribute
Поля:
  string <TypeName>k__BackingField
  string <PropertyName>k__BackingField
Свойства:
  string TypeName
  string PropertyName
Методы:
  void .ctor(string typeName)
  void .ctor(string typeName, string propertyName)
  void .ctor(Type type)
  string get_TypeName()
  string get_PropertyName()
--------------------------------------------------
Класс: System.ComponentModel.ComponentEditor
Наследуется от: object
Поля:
Свойства:
Методы:
  bool EditComponent(object component)
  bool EditComponent(ITypeDescriptorContext context, object component)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.BaseNumberConverter
Наследуется от: TypeConverter
Поля:
Свойства:
  bool AllowHex
  Type TargetType
Методы:
  void .ctor()
  bool get_AllowHex()
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
--------------------------------------------------
Класс: System.ComponentModel.BindableAttribute
Наследуется от: Attribute
Поля:
  BindableAttribute Yes
  BindableAttribute No
  BindableAttribute Default
  bool _isDefault
  bool <Bindable>k__BackingField
  BindingDirection <Direction>k__BackingField
Свойства:
  bool Bindable
  BindingDirection Direction
Методы:
  void .ctor(bool bindable)
  void .ctor(bool bindable, BindingDirection direction)
  void .ctor(BindableSupport flags)
  void .ctor(BindableSupport flags, BindingDirection direction)
  bool get_Bindable()
  BindingDirection get_Direction()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.BindableSupport
Наследуется от: Enum
Поля:
  int value__
  BindableSupport No
  BindableSupport Yes
  BindableSupport Default
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.BindingDirection
Наследуется от: Enum
Поля:
  int value__
  BindingDirection OneWay
  BindingDirection TwoWay
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.BindingList`1
Наследуется от: Collection`1<T>
Поля:
  int addNewPos
  bool raiseListChangedEvents
  bool raiseItemChangedEvents
  PropertyDescriptorCollection _itemTypeProperties
  PropertyChangedEventHandler _propertyChangedEventHandler
  AddingNewEventHandler _onAddingNew
  ListChangedEventHandler _onListChanged
  int _lastChangeIndex
  bool allowNew
  bool allowEdit
  bool allowRemove
  bool userSetAllowNew
Свойства:
  bool ItemTypeHasDefaultConstructor
  bool RaiseListChangedEvents
  bool AddingNewHandled
  bool AllowNew
  bool System.ComponentModel.IBindingList.AllowNew
  bool AllowEdit
  bool System.ComponentModel.IBindingList.AllowEdit
  bool AllowRemove
  bool System.ComponentModel.IBindingList.AllowRemove
  bool System.ComponentModel.IBindingList.SupportsChangeNotification
  bool SupportsChangeNotificationCore
  bool System.ComponentModel.IBindingList.SupportsSearching
  bool SupportsSearchingCore
  bool System.ComponentModel.IBindingList.SupportsSorting
  bool SupportsSortingCore
  bool System.ComponentModel.IBindingList.IsSorted
  bool IsSortedCore
  PropertyDescriptor System.ComponentModel.IBindingList.SortProperty
  PropertyDescriptor SortPropertyCore
  ListSortDirection System.ComponentModel.IBindingList.SortDirection
  ListSortDirection SortDirectionCore
  bool System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents
Методы:
  void .ctor()
  void .ctor(IList`1<T> list)
  void Initialize()
  bool get_ItemTypeHasDefaultConstructor()
  void add_AddingNew(AddingNewEventHandler value)
  void remove_AddingNew(AddingNewEventHandler value)
  void OnAddingNew(AddingNewEventArgs e)
  object FireAddingNew()
  void add_ListChanged(ListChangedEventHandler value)
  void remove_ListChanged(ListChangedEventHandler value)
  void OnListChanged(ListChangedEventArgs e)
  bool get_RaiseListChangedEvents()
  void set_RaiseListChangedEvents(bool value)
  void ResetBindings()
  void ResetItem(int position)
  void FireListChanged(ListChangedType type, int index)
  void ClearItems()
  void InsertItem(int index, T item)
  void RemoveItem(int index)
  void SetItem(int index, T item)
  void CancelNew(int itemIndex)
  void EndNew(int itemIndex)
  T AddNew()
  object System.ComponentModel.IBindingList.AddNew()
  bool get_AddingNewHandled()
  object AddNewCore()
  bool get_AllowNew()
  void set_AllowNew(bool value)
  bool System.ComponentModel.IBindingList.get_AllowNew()
  bool get_AllowEdit()
  void set_AllowEdit(bool value)
  bool System.ComponentModel.IBindingList.get_AllowEdit()
  bool get_AllowRemove()
  void set_AllowRemove(bool value)
  bool System.ComponentModel.IBindingList.get_AllowRemove()
  bool System.ComponentModel.IBindingList.get_SupportsChangeNotification()
  bool get_SupportsChangeNotificationCore()
  bool System.ComponentModel.IBindingList.get_SupportsSearching()
  bool get_SupportsSearchingCore()
  bool System.ComponentModel.IBindingList.get_SupportsSorting()
  bool get_SupportsSortingCore()
  bool System.ComponentModel.IBindingList.get_IsSorted()
  bool get_IsSortedCore()
  PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty()
  PropertyDescriptor get_SortPropertyCore()
  ListSortDirection System.ComponentModel.IBindingList.get_SortDirection()
  ListSortDirection get_SortDirectionCore()
  void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor prop, ListSortDirection direction)
  void ApplySortCore(PropertyDescriptor prop, ListSortDirection direction)
  void System.ComponentModel.IBindingList.RemoveSort()
  void RemoveSortCore()
  int System.ComponentModel.IBindingList.Find(PropertyDescriptor prop, object key)
  int FindCore(PropertyDescriptor prop, object key)
  void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor prop)
  void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor prop)
  void HookPropertyChanged(T item)
  void UnhookPropertyChanged(T item)
  void Child_PropertyChanged(object sender, PropertyChangedEventArgs e)
  bool System.ComponentModel.IRaiseItemChangedEvents.get_RaisesItemChangedEvents()
--------------------------------------------------
Класс: System.ComponentModel.BooleanConverter
Наследуется от: TypeConverter
Поля:
  StandardValuesCollection modreq(System.Runtime.CompilerServices.IsVolatile) s_values
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.ByteConverter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.CancelEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, CancelEventArgs e)
  IAsyncResult BeginInvoke(object sender, CancelEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.CharConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.CollectionChangeAction
Наследуется от: Enum
Поля:
  int value__
  CollectionChangeAction Add
  CollectionChangeAction Remove
  CollectionChangeAction Refresh
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.CollectionChangeEventArgs
Наследуется от: EventArgs
Поля:
  CollectionChangeAction <Action>k__BackingField
  object <Element>k__BackingField
Свойства:
  CollectionChangeAction Action
  object Element
Методы:
  void .ctor(CollectionChangeAction action, object element)
  CollectionChangeAction get_Action()
  object get_Element()
--------------------------------------------------
Класс: System.ComponentModel.CollectionChangeEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, CollectionChangeEventArgs e)
  IAsyncResult BeginInvoke(object sender, CollectionChangeEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.ComplexBindingPropertiesAttribute
Наследуется от: Attribute
Поля:
  string <DataSource>k__BackingField
  string <DataMember>k__BackingField
  ComplexBindingPropertiesAttribute Default
Свойства:
  string DataSource
  string DataMember
Методы:
  void .ctor()
  void .ctor(string dataSource)
  void .ctor(string dataSource, string dataMember)
  string get_DataSource()
  string get_DataMember()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ComponentResourceManager
Наследуется от: ResourceManager
Поля:
  Hashtable _resourceSets
  CultureInfo _neutralResourcesCulture
Свойства:
  CultureInfo NeutralResourcesCulture
Методы:
  void .ctor()
  void .ctor(Type t)
  CultureInfo get_NeutralResourcesCulture()
  void ApplyResources(object value, string objectName)
  void ApplyResources(object value, string objectName, CultureInfo culture)
  SortedList`2<string, object> FillResources(CultureInfo culture, ResourceSet& resourceSet)
--------------------------------------------------
Класс: System.ComponentModel.ContainerFilterService
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  ComponentCollection FilterComponents(ComponentCollection components)
--------------------------------------------------
Класс: System.ComponentModel.CultureInfoConverter
Наследуется от: TypeConverter
Поля:
  StandardValuesCollection _values
  string DefaultInvariantCultureString
Свойства:
  string DefaultCultureString
Методы:
  string get_DefaultCultureString()
  string GetCultureName(CultureInfo culture)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.CustomTypeDescriptor
Наследуется от: object
Поля:
  ICustomTypeDescriptor _parent
Свойства:
Методы:
  void .ctor()
  void .ctor(ICustomTypeDescriptor parent)
  AttributeCollection GetAttributes()
  string GetClassName()
  string GetComponentName()
  TypeConverter GetConverter()
  EventDescriptor GetDefaultEvent()
  PropertyDescriptor GetDefaultProperty()
  object GetEditor(Type editorBaseType)
  EventDescriptorCollection GetEvents()
  EventDescriptorCollection GetEvents(Attribute[] attributes)
  PropertyDescriptorCollection GetProperties()
  PropertyDescriptorCollection GetProperties(Attribute[] attributes)
  object GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: System.ComponentModel.DataObjectAttribute
Наследуется от: Attribute
Поля:
  DataObjectAttribute DataObject
  DataObjectAttribute NonDataObject
  DataObjectAttribute Default
  bool <IsDataObject>k__BackingField
Свойства:
  bool IsDataObject
Методы:
  void .ctor()
  void .ctor(bool isDataObject)
  bool get_IsDataObject()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DataObjectFieldAttribute
Наследуется от: Attribute
Поля:
  bool <IsIdentity>k__BackingField
  bool <IsNullable>k__BackingField
  int <Length>k__BackingField
  bool <PrimaryKey>k__BackingField
Свойства:
  bool IsIdentity
  bool IsNullable
  int Length
  bool PrimaryKey
Методы:
  void .ctor(bool primaryKey)
  void .ctor(bool primaryKey, bool isIdentity)
  void .ctor(bool primaryKey, bool isIdentity, bool isNullable)
  void .ctor(bool primaryKey, bool isIdentity, bool isNullable, int length)
  bool get_IsIdentity()
  bool get_IsNullable()
  int get_Length()
  bool get_PrimaryKey()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.DataObjectMethodAttribute
Наследуется от: Attribute
Поля:
  bool <IsDefault>k__BackingField
  DataObjectMethodType <MethodType>k__BackingField
Свойства:
  bool IsDefault
  DataObjectMethodType MethodType
Методы:
  void .ctor(DataObjectMethodType methodType)
  void .ctor(DataObjectMethodType methodType, bool isDefault)
  bool get_IsDefault()
  DataObjectMethodType get_MethodType()
  bool Equals(object obj)
  int GetHashCode()
  bool Match(object obj)
--------------------------------------------------
Класс: System.ComponentModel.DataObjectMethodType
Наследуется от: Enum
Поля:
  int value__
  DataObjectMethodType Fill
  DataObjectMethodType Select
  DataObjectMethodType Update
  DataObjectMethodType Insert
  DataObjectMethodType Delete
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.DateTimeConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.DecimalConverter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  bool AllowHex
  Type TargetType
Методы:
  bool get_AllowHex()
  Type get_TargetType()
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.DefaultBindingPropertyAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
  DefaultBindingPropertyAttribute Default
Свойства:
  string Name
Методы:
  void .ctor()
  void .ctor(string name)
  string get_Name()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DefaultEventAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
  DefaultEventAttribute Default
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DefaultPropertyAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
  DefaultPropertyAttribute Default
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DelegatingTypeDescriptionProvider
Наследуется от: TypeDescriptionProvider
Поля:
  Type _type
Свойства:
  TypeDescriptionProvider Provider
Методы:
  void .ctor(Type type)
  TypeDescriptionProvider get_Provider()
  object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, Object[] args)
  IDictionary GetCache(object instance)
  string GetFullComponentName(object component)
  ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance)
  IExtenderProvider[] GetExtenderProviders(object instance)
  Type GetReflectionType(Type objectType, object instance)
  Type GetRuntimeType(Type objectType)
  ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
  bool IsSupportedType(Type type)
--------------------------------------------------
Класс: System.ComponentModel.InheritanceAttribute
Наследуется от: Attribute
Поля:
  InheritanceAttribute Inherited
  InheritanceAttribute InheritedReadOnly
  InheritanceAttribute NotInherited
  InheritanceAttribute Default
  InheritanceLevel <InheritanceLevel>k__BackingField
Свойства:
  InheritanceLevel InheritanceLevel
Методы:
  void .ctor()
  void .ctor(InheritanceLevel inheritanceLevel)
  InheritanceLevel get_InheritanceLevel()
  bool Equals(object value)
  int GetHashCode()
  bool IsDefaultAttribute()
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.InheritanceLevel
Наследуется от: Enum
Поля:
  int value__
  InheritanceLevel Inherited
  InheritanceLevel InheritedReadOnly
  InheritanceLevel NotInherited
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.PropertyTabAttribute
Наследуется от: Attribute
Поля:
  Type[] _tabClasses
  String[] _tabClassNames
  PropertyTabScope[] <TabScopes>k__BackingField
Свойства:
  Type[] TabClasses
  String[] TabClassNames
  PropertyTabScope[] TabScopes
Методы:
  void .ctor()
  void .ctor(Type tabClass)
  void .ctor(string tabClassName)
  void .ctor(Type tabClass, PropertyTabScope tabScope)
  void .ctor(string tabClassName, PropertyTabScope tabScope)
  Type[] get_TabClasses()
  String[] get_TabClassNames()
  PropertyTabScope[] get_TabScopes()
  void set_TabScopes(PropertyTabScope[] value)
  bool Equals(object other)
  bool Equals(PropertyTabAttribute other)
  int GetHashCode()
  void InitializeArrays(String[] tabClassNames, PropertyTabScope[] tabScopes)
  void InitializeArrays(Type[] tabClasses, PropertyTabScope[] tabScopes)
  void InitializeArrays(String[] tabClassNames, Type[] tabClasses, PropertyTabScope[] tabScopes)
--------------------------------------------------
Класс: System.ComponentModel.PropertyTabScope
Наследуется от: Enum
Поля:
  int value__
  PropertyTabScope Static
  PropertyTabScope Global
  PropertyTabScope Document
  PropertyTabScope Component
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.ToolboxItemAttribute
Наследуется от: Attribute
Поля:
  Type _toolboxItemType
  string _toolboxItemTypeName
  ToolboxItemAttribute Default
  ToolboxItemAttribute None
Свойства:
  Type ToolboxItemType
  string ToolboxItemTypeName
Методы:
  bool IsDefaultAttribute()
  void .ctor(bool defaultType)
  void .ctor(string toolboxItemTypeName)
  void .ctor(Type toolboxItemType)
  Type get_ToolboxItemType()
  string get_ToolboxItemTypeName()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DesignTimeVisibleAttribute
Наследуется от: Attribute
Поля:
  bool <Visible>k__BackingField
  DesignTimeVisibleAttribute Yes
  DesignTimeVisibleAttribute No
  DesignTimeVisibleAttribute Default
Свойства:
  bool Visible
Методы:
  void .ctor(bool visible)
  void .ctor()
  bool get_Visible()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.DoubleConverter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  bool AllowHex
  Type TargetType
Методы:
  bool get_AllowHex()
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.EditorAttribute
Наследуется от: Attribute
Поля:
  string _typeId
  string <EditorBaseTypeName>k__BackingField
  string <EditorTypeName>k__BackingField
Свойства:
  string EditorBaseTypeName
  string EditorTypeName
  object TypeId
Методы:
  void .ctor()
  void .ctor(string typeName, string baseTypeName)
  void .ctor(string typeName, Type baseType)
  void .ctor(Type type, Type baseType)
  string get_EditorBaseTypeName()
  string get_EditorTypeName()
  object get_TypeId()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.EventDescriptor
Наследуется от: MemberDescriptor
Поля:
Свойства:
  Type ComponentType
  Type EventType
  bool IsMulticast
Методы:
  void .ctor(string name, Attribute[] attrs)
  void .ctor(MemberDescriptor descr)
  void .ctor(MemberDescriptor descr, Attribute[] attrs)
  Type get_ComponentType()
  Type get_EventType()
  bool get_IsMulticast()
  void AddEventHandler(object component, Delegate value)
  void RemoveEventHandler(object component, Delegate value)
--------------------------------------------------
Класс: System.ComponentModel.EventDescriptorCollection
Наследуется от: object
Поля:
  EventDescriptor[] _events
  String[] _namedSort
  IComparer _comparer
  bool _eventsOwned
  bool _needSort
  bool _readOnly
  EventDescriptorCollection Empty
  int <Count>k__BackingField
Свойства:
  int Count
  EventDescriptor Item
  EventDescriptor Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  int System.Collections.ICollection.Count
  object System.Collections.IList.Item
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
Методы:
  void .ctor(EventDescriptor[] events)
  void .ctor(EventDescriptor[] events, bool readOnly)
  void .ctor(EventDescriptor[] events, int eventCount, String[] namedSort, IComparer comparer)
  int get_Count()
  void set_Count(int value)
  EventDescriptor get_Item(int index)
  EventDescriptor get_Item(string name)
  int Add(EventDescriptor value)
  void Clear()
  bool Contains(EventDescriptor value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void EnsureEventsOwned()
  void EnsureSize(int sizeNeeded)
  EventDescriptor Find(string name, bool ignoreCase)
  int IndexOf(EventDescriptor value)
  void Insert(int index, EventDescriptor value)
  void Remove(EventDescriptor value)
  void RemoveAt(int index)
  IEnumerator GetEnumerator()
  EventDescriptorCollection Sort()
  EventDescriptorCollection Sort(String[] names)
  EventDescriptorCollection Sort(String[] names, IComparer comparer)
  EventDescriptorCollection Sort(IComparer comparer)
  void InternalSort(String[] names)
  void InternalSort(IComparer sorter)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  int System.Collections.ICollection.get_Count()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  void System.Collections.IList.Clear()
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ExpandableObjectConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  void .ctor()
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported(ITypeDescriptorContext context)
--------------------------------------------------
Класс: System.ComponentModel.ExtendedPropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
  ReflectPropertyDescriptor _extenderInfo
  IExtenderProvider _provider
Свойства:
  Type ComponentType
  bool IsReadOnly
  Type PropertyType
  string DisplayName
Методы:
  void .ctor(ReflectPropertyDescriptor extenderInfo, Type receiverType, IExtenderProvider provider, Attribute[] attributes)
  void .ctor(PropertyDescriptor extender, Attribute[] attributes)
  bool CanResetValue(object comp)
  Type get_ComponentType()
  bool get_IsReadOnly()
  Type get_PropertyType()
  string get_DisplayName()
  object GetValue(object comp)
  void ResetValue(object comp)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object comp)
--------------------------------------------------
Класс: System.ComponentModel.ExtenderProvidedPropertyAttribute
Наследуется от: Attribute
Поля:
  PropertyDescriptor <ExtenderProperty>k__BackingField
  IExtenderProvider <Provider>k__BackingField
  Type <ReceiverType>k__BackingField
Свойства:
  PropertyDescriptor ExtenderProperty
  IExtenderProvider Provider
  Type ReceiverType
Методы:
  ExtenderProvidedPropertyAttribute Create(PropertyDescriptor extenderProperty, Type receiverType, IExtenderProvider provider)
  void .ctor()
  PropertyDescriptor get_ExtenderProperty()
  void set_ExtenderProperty(PropertyDescriptor value)
  IExtenderProvider get_Provider()
  void set_Provider(IExtenderProvider value)
  Type get_ReceiverType()
  void set_ReceiverType(Type value)
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
--------------------------------------------------
Класс: System.ComponentModel.GuidConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.HandledEventArgs
Наследуется от: EventArgs
Поля:
  bool <Handled>k__BackingField
Свойства:
  bool Handled
Методы:
  void .ctor()
  void .ctor(bool defaultHandledValue)
  bool get_Handled()
  void set_Handled(bool value)
--------------------------------------------------
Класс: System.ComponentModel.HandledEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, HandledEventArgs e)
  IAsyncResult BeginInvoke(object sender, HandledEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.IBindingList
Поля:
Свойства:
  bool AllowNew
  bool AllowEdit
  bool AllowRemove
  bool SupportsChangeNotification
  bool SupportsSearching
  bool SupportsSorting
  bool IsSorted
  PropertyDescriptor SortProperty
  ListSortDirection SortDirection
Методы:
  bool get_AllowNew()
  object AddNew()
  bool get_AllowEdit()
  bool get_AllowRemove()
  bool get_SupportsChangeNotification()
  bool get_SupportsSearching()
  bool get_SupportsSorting()
  bool get_IsSorted()
  PropertyDescriptor get_SortProperty()
  ListSortDirection get_SortDirection()
  void add_ListChanged(ListChangedEventHandler value)
  void remove_ListChanged(ListChangedEventHandler value)
  void AddIndex(PropertyDescriptor property)
  void ApplySort(PropertyDescriptor property, ListSortDirection direction)
  int Find(PropertyDescriptor property, object key)
  void RemoveIndex(PropertyDescriptor property)
  void RemoveSort()
--------------------------------------------------
Класс: System.ComponentModel.IBindingListView
Поля:
Свойства:
  string Filter
  ListSortDescriptionCollection SortDescriptions
  bool SupportsAdvancedSorting
  bool SupportsFiltering
Методы:
  void ApplySort(ListSortDescriptionCollection sorts)
  string get_Filter()
  void set_Filter(string value)
  ListSortDescriptionCollection get_SortDescriptions()
  void RemoveFilter()
  bool get_SupportsAdvancedSorting()
  bool get_SupportsFiltering()
--------------------------------------------------
Класс: System.ComponentModel.ICancelAddNew
Поля:
Свойства:
Методы:
  void CancelNew(int itemIndex)
  void EndNew(int itemIndex)
--------------------------------------------------
Класс: System.ComponentModel.IComNativeDescriptorHandler
Поля:
Свойства:
Методы:
  AttributeCollection GetAttributes(object component)
  string GetClassName(object component)
  TypeConverter GetConverter(object component)
  EventDescriptor GetDefaultEvent(object component)
  PropertyDescriptor GetDefaultProperty(object component)
  object GetEditor(object component, Type baseEditorType)
  string GetName(object component)
  EventDescriptorCollection GetEvents(object component)
  EventDescriptorCollection GetEvents(object component, Attribute[] attributes)
  PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes)
  object GetPropertyValue(object component, string propertyName, Boolean& success)
  object GetPropertyValue(object component, int dispid, Boolean& success)
--------------------------------------------------
Класс: System.ComponentModel.ICustomTypeDescriptor
Поля:
Свойства:
Методы:
  AttributeCollection GetAttributes()
  string GetClassName()
  string GetComponentName()
  TypeConverter GetConverter()
  EventDescriptor GetDefaultEvent()
  PropertyDescriptor GetDefaultProperty()
  object GetEditor(Type editorBaseType)
  EventDescriptorCollection GetEvents()
  EventDescriptorCollection GetEvents(Attribute[] attributes)
  PropertyDescriptorCollection GetProperties()
  PropertyDescriptorCollection GetProperties(Attribute[] attributes)
  object GetPropertyOwner(PropertyDescriptor pd)
--------------------------------------------------
Класс: System.ComponentModel.IDataErrorInfo
Поля:
Свойства:
  string Item
  string Error
Методы:
  string get_Item(string columnName)
  string get_Error()
--------------------------------------------------
Класс: System.ComponentModel.IExtenderProvider
Поля:
Свойства:
Методы:
  bool CanExtend(object extendee)
--------------------------------------------------
Класс: System.ComponentModel.IIntellisenseBuilder
Поля:
Свойства:
  string Name
Методы:
  string get_Name()
  bool Show(string language, string value, String& newValue)
--------------------------------------------------
Класс: System.ComponentModel.IListSource
Поля:
Свойства:
  bool ContainsListCollection
Методы:
  bool get_ContainsListCollection()
  IList GetList()
--------------------------------------------------
Класс: System.ComponentModel.INestedContainer
Поля:
Свойства:
  IComponent Owner
Методы:
  IComponent get_Owner()
--------------------------------------------------
Класс: System.ComponentModel.INestedSite
Поля:
Свойства:
  string FullName
Методы:
  string get_FullName()
--------------------------------------------------
Класс: System.ComponentModel.IRaiseItemChangedEvents
Поля:
Свойства:
  bool RaisesItemChangedEvents
Методы:
  bool get_RaisesItemChangedEvents()
--------------------------------------------------
Класс: System.ComponentModel.ISupportInitializeNotification
Поля:
Свойства:
  bool IsInitialized
Методы:
  bool get_IsInitialized()
  void add_Initialized(EventHandler value)
  void remove_Initialized(EventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.ITypeDescriptorContext
Поля:
Свойства:
  IContainer Container
  object Instance
  PropertyDescriptor PropertyDescriptor
Методы:
  IContainer get_Container()
  object get_Instance()
  PropertyDescriptor get_PropertyDescriptor()
  bool OnComponentChanging()
  void OnComponentChanged()
--------------------------------------------------
Класс: System.ComponentModel.ITypedList
Поля:
Свойства:
Методы:
  string GetListName(PropertyDescriptor[] listAccessors)
  PropertyDescriptorCollection GetItemProperties(PropertyDescriptor[] listAccessors)
--------------------------------------------------
Класс: System.ComponentModel.InstallerTypeAttribute
Наследуется от: Attribute
Поля:
  string _typeName
Свойства:
  Type InstallerType
Методы:
  void .ctor(Type installerType)
  void .ctor(string typeName)
  Type get_InstallerType()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.InstanceCreationEditor
Наследуется от: object
Поля:
Свойства:
  string Text
Методы:
  string get_Text()
  object CreateInstance(ITypeDescriptorContext context, Type instanceType)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Int16Converter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Int32Converter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Int64Converter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.InvalidAsynchronousStateException
Наследуется от: ArgumentException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.LicFileLicenseProvider
Наследуется от: LicenseProvider
Поля:
Свойства:
Методы:
  bool IsKeyValid(string key, Type type)
  string GetKey(Type type)
  License GetLicense(LicenseContext context, Type type, object instance, bool allowExceptions)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.License
Наследуется от: object
Поля:
Свойства:
  string LicenseKey
Методы:
  string get_LicenseKey()
  void Dispose()
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.LicenseContext
Наследуется от: object
Поля:
Свойства:
  LicenseUsageMode UsageMode
Методы:
  LicenseUsageMode get_UsageMode()
  string GetSavedLicenseKey(Type type, Assembly resourceAssembly)
  object GetService(Type type)
  void SetSavedLicenseKey(Type type, string key)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.LicenseManager
Наследуется от: object
Поля:
  object s_selfLock
  LicenseContext modreq(System.Runtime.CompilerServices.IsVolatile) s_context
  object s_contextLockHolder
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) s_providers
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) s_providerInstances
  object s_internalSyncObject
Свойства:
  LicenseContext CurrentContext
  LicenseUsageMode UsageMode
Методы:
  void .ctor()
  LicenseContext get_CurrentContext()
  void set_CurrentContext(LicenseContext value)
  LicenseUsageMode get_UsageMode()
  void CacheProvider(Type type, LicenseProvider provider)
  object CreateWithContext(Type type, LicenseContext creationContext)
  object CreateWithContext(Type type, LicenseContext creationContext, Object[] args)
  bool GetCachedNoLicenseProvider(Type type)
  LicenseProvider GetCachedProvider(Type type)
  LicenseProvider GetCachedProviderInstance(Type providerType)
  bool IsLicensed(Type type)
  bool IsValid(Type type)
  bool IsValid(Type type, object instance, License& license)
  void LockContext(object contextUser)
  void UnlockContext(object contextUser)
  bool ValidateInternal(Type type, object instance, bool allowExceptions, License& license)
  bool ValidateInternalRecursive(LicenseContext context, Type type, object instance, bool allowExceptions, License& license, String& licenseKey)
  void Validate(Type type)
  License Validate(Type type, object instance)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.LicenseProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  License GetLicense(LicenseContext context, Type type, object instance, bool allowExceptions)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.LicenseProviderAttribute
Наследуется от: Attribute
Поля:
  LicenseProviderAttribute Default
  Type _licenseProviderType
  string _licenseProviderName
Свойства:
  Type LicenseProvider
  object TypeId
Методы:
  void .ctor()
  void .ctor(string typeName)
  void .ctor(Type type)
  Type get_LicenseProvider()
  object get_TypeId()
  bool Equals(object value)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.LicenseUsageMode
Наследуется от: Enum
Поля:
  int value__
  LicenseUsageMode Runtime
  LicenseUsageMode Designtime
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.ListBindableAttribute
Наследуется от: Attribute
Поля:
  ListBindableAttribute Yes
  ListBindableAttribute No
  ListBindableAttribute Default
  bool _isDefault
  bool <ListBindable>k__BackingField
Свойства:
  bool ListBindable
Методы:
  void .ctor(bool listBindable)
  void .ctor(BindableSupport flags)
  bool get_ListBindable()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ListChangedEventArgs
Наследуется от: EventArgs
Поля:
  ListChangedType <ListChangedType>k__BackingField
  int <NewIndex>k__BackingField
  int <OldIndex>k__BackingField
  PropertyDescriptor <PropertyDescriptor>k__BackingField
Свойства:
  ListChangedType ListChangedType
  int NewIndex
  int OldIndex
  PropertyDescriptor PropertyDescriptor
Методы:
  void .ctor(ListChangedType listChangedType, int newIndex)
  void .ctor(ListChangedType listChangedType, int newIndex, PropertyDescriptor propDesc)
  void .ctor(ListChangedType listChangedType, PropertyDescriptor propDesc)
  void .ctor(ListChangedType listChangedType, int newIndex, int oldIndex)
  ListChangedType get_ListChangedType()
  int get_NewIndex()
  int get_OldIndex()
  PropertyDescriptor get_PropertyDescriptor()
--------------------------------------------------
Класс: System.ComponentModel.ListChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ListChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, ListChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.ListChangedType
Наследуется от: Enum
Поля:
  int value__
  ListChangedType Reset
  ListChangedType ItemAdded
  ListChangedType ItemDeleted
  ListChangedType ItemMoved
  ListChangedType ItemChanged
  ListChangedType PropertyDescriptorAdded
  ListChangedType PropertyDescriptorDeleted
  ListChangedType PropertyDescriptorChanged
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.ListSortDescription
Наследуется от: object
Поля:
  PropertyDescriptor <PropertyDescriptor>k__BackingField
  ListSortDirection <SortDirection>k__BackingField
Свойства:
  PropertyDescriptor PropertyDescriptor
  ListSortDirection SortDirection
Методы:
  void .ctor(PropertyDescriptor property, ListSortDirection direction)
  PropertyDescriptor get_PropertyDescriptor()
  void set_PropertyDescriptor(PropertyDescriptor value)
  ListSortDirection get_SortDirection()
  void set_SortDirection(ListSortDirection value)
--------------------------------------------------
Класс: System.ComponentModel.ListSortDescriptionCollection
Наследуется от: object
Поля:
  ArrayList _sorts
Свойства:
  ListSortDescription Item
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(ListSortDescription[] sorts)
  ListSortDescription get_Item(int index)
  void set_Item(int index, ListSortDescription value)
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool Contains(object value)
  int IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.ComponentModel.ListSortDirection
Наследуется от: Enum
Поля:
  int value__
  ListSortDirection Ascending
  ListSortDirection Descending
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.LookupBindingPropertiesAttribute
Наследуется от: Attribute
Поля:
  string <DataSource>k__BackingField
  string <DisplayMember>k__BackingField
  string <ValueMember>k__BackingField
  string <LookupMember>k__BackingField
  LookupBindingPropertiesAttribute Default
Свойства:
  string DataSource
  string DisplayMember
  string ValueMember
  string LookupMember
Методы:
  void .ctor()
  void .ctor(string dataSource, string displayMember, string valueMember, string lookupMember)
  string get_DataSource()
  string get_DisplayMember()
  string get_ValueMember()
  string get_LookupMember()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.MarshalByValueComponent
Наследуется от: object
Поля:
  object s_eventDisposed
  ISite _site
  EventHandlerList _events
Свойства:
  EventHandlerList Events
  ISite Site
  IContainer Container
  bool DesignMode
Методы:
  void .ctor()
  void Finalize()
  void add_Disposed(EventHandler value)
  void remove_Disposed(EventHandler value)
  EventHandlerList get_Events()
  ISite get_Site()
  void set_Site(ISite value)
  void Dispose()
  void Dispose(bool disposing)
  IContainer get_Container()
  object GetService(Type service)
  bool get_DesignMode()
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.MaskedTextProvider
Наследуется от: object
Поля:
  char SPACE_CHAR
  char DEFAULT_PROMPT_CHAR
  char NULL_PASSWORD_CHAR
  bool DEFAULT_ALLOW_PROMPT
  int INVALID_INDEX
  byte EDIT_ANY
  byte EDIT_UNASSIGNED
  byte EDIT_ASSIGNED
  bool FORWARD
  bool BACKWARD
  int s_ASCII_ONLY
  int s_ALLOW_PROMPT_AS_INPUT
  int s_INCLUDE_PROMPT
  int s_INCLUDE_LITERALS
  int s_RESET_ON_PROMPT
  int s_RESET_ON_LITERALS
  int s_SKIP_SPACE
  Type s_maskTextProviderType
  BitVector32 _flagState
  StringBuilder _testString
  int _requiredCharCount
  int _requiredEditChars
  int _optionalEditChars
  char _passwordChar
  char _promptChar
  List`1<CharDescriptor> _stringDescriptor
  int <AssignedEditPositionCount>k__BackingField
  CultureInfo <Culture>k__BackingField
  string <Mask>k__BackingField
Свойства:
  bool AllowPromptAsInput
  int AssignedEditPositionCount
  int AvailableEditPositionCount
  CultureInfo Culture
  char DefaultPasswordChar
  int EditPositionCount
  IEnumerator EditPositions
  bool IncludeLiterals
  bool IncludePrompt
  bool AsciiOnly
  bool IsPassword
  int InvalidIndex
  int LastAssignedPosition
  int Length
  string Mask
  bool MaskCompleted
  bool MaskFull
  char PasswordChar
  char PromptChar
  bool ResetOnPrompt
  bool ResetOnSpace
  bool SkipLiterals
  char Item
Методы:
  void .ctor(string mask)
  void .ctor(string mask, bool restrictToAscii)
  void .ctor(string mask, CultureInfo culture)
  void .ctor(string mask, CultureInfo culture, bool restrictToAscii)
  void .ctor(string mask, char passwordChar, bool allowPromptAsInput)
  void .ctor(string mask, CultureInfo culture, char passwordChar, bool allowPromptAsInput)
  void .ctor(string mask, CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii)
  void Initialize()
  bool get_AllowPromptAsInput()
  int get_AssignedEditPositionCount()
  void set_AssignedEditPositionCount(int value)
  int get_AvailableEditPositionCount()
  object Clone()
  CultureInfo get_Culture()
  char get_DefaultPasswordChar()
  int get_EditPositionCount()
  IEnumerator get_EditPositions()
  bool get_IncludeLiterals()
  void set_IncludeLiterals(bool value)
  bool get_IncludePrompt()
  void set_IncludePrompt(bool value)
  bool get_AsciiOnly()
  bool get_IsPassword()
  void set_IsPassword(bool value)
  int get_InvalidIndex()
  int get_LastAssignedPosition()
  int get_Length()
  string get_Mask()
  bool get_MaskCompleted()
  bool get_MaskFull()
  char get_PasswordChar()
  void set_PasswordChar(char value)
  char get_PromptChar()
  void set_PromptChar(char value)
  bool get_ResetOnPrompt()
  void set_ResetOnPrompt(bool value)
  bool get_ResetOnSpace()
  void set_ResetOnSpace(bool value)
  bool get_SkipLiterals()
  void set_SkipLiterals(bool value)
  char get_Item(int index)
  bool Add(char input)
  bool Add(char input, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool Add(string input)
  bool Add(string input, Int32& testPosition, MaskedTextResultHint& resultHint)
  void Clear()
  void Clear(MaskedTextResultHint& resultHint)
  int FindAssignedEditPositionFrom(int position, bool direction)
  int FindAssignedEditPositionInRange(int startPosition, int endPosition, bool direction)
  int FindEditPositionFrom(int position, bool direction)
  int FindEditPositionInRange(int startPosition, int endPosition, bool direction)
  int FindEditPositionInRange(int startPosition, int endPosition, bool direction, byte assignedStatus)
  int FindNonEditPositionFrom(int position, bool direction)
  int FindNonEditPositionInRange(int startPosition, int endPosition, bool direction)
  int FindPositionInRange(int startPosition, int endPosition, bool direction, CharType charTypeFlags)
  int FindUnassignedEditPositionFrom(int position, bool direction)
  int FindUnassignedEditPositionInRange(int startPosition, int endPosition, bool direction)
  bool GetOperationResultFromHint(MaskedTextResultHint hint)
  bool InsertAt(char input, int position)
  bool InsertAt(char input, int position, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool InsertAt(string input, int position)
  bool InsertAt(string input, int position, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool InsertAtInt(string input, int position, Int32& testPosition, MaskedTextResultHint& resultHint, bool testOnly)
  bool IsAscii(char c)
  bool IsAciiAlphanumeric(char c)
  bool IsAlphanumeric(char c)
  bool IsAsciiLetter(char c)
  bool IsAvailablePosition(int position)
  bool IsEditPosition(int position)
  bool IsEditPosition(CharDescriptor charDescriptor)
  bool IsLiteralPosition(CharDescriptor charDescriptor)
  bool IsPrintableChar(char c)
  bool IsValidInputChar(char c)
  bool IsValidMaskChar(char c)
  bool IsValidPasswordChar(char c)
  bool Remove()
  bool Remove(Int32& testPosition, MaskedTextResultHint& resultHint)
  bool RemoveAt(int position)
  bool RemoveAt(int startPosition, int endPosition)
  bool RemoveAt(int startPosition, int endPosition, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool RemoveAtInt(int startPosition, int endPosition, Int32& testPosition, MaskedTextResultHint& resultHint, bool testOnly)
  bool Replace(char input, int position)
  bool Replace(char input, int position, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool Replace(char input, int startPosition, int endPosition, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool Replace(string input, int position)
  bool Replace(string input, int position, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool Replace(string input, int startPosition, int endPosition, Int32& testPosition, MaskedTextResultHint& resultHint)
  void ResetChar(int testPosition)
  void ResetString(int startPosition, int endPosition)
  bool Set(string input)
  bool Set(string input, Int32& testPosition, MaskedTextResultHint& resultHint)
  void SetChar(char input, int position)
  void SetChar(char input, int position, CharDescriptor charDescriptor)
  void SetString(string input, int testPosition)
  bool TestChar(char input, int position, MaskedTextResultHint& resultHint)
  bool TestEscapeChar(char input, int position)
  bool TestEscapeChar(char input, int position, CharDescriptor charDex)
  bool TestSetChar(char input, int position, MaskedTextResultHint& resultHint)
  bool TestSetString(string input, int position, Int32& testPosition, MaskedTextResultHint& resultHint)
  bool TestString(string input, int position, Int32& testPosition, MaskedTextResultHint& resultHint)
  string ToDisplayString()
  string ToString()
  string ToString(bool ignorePasswordChar)
  string ToString(int startPosition, int length)
  string ToString(bool ignorePasswordChar, int startPosition, int length)
  string ToString(bool includePrompt, bool includeLiterals)
  string ToString(bool includePrompt, bool includeLiterals, int startPosition, int length)
  string ToString(bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length)
  bool VerifyChar(char input, int position, MaskedTextResultHint& hint)
  bool VerifyEscapeChar(char input, int position)
  bool VerifyString(string input)
  bool VerifyString(string input, Int32& testPosition, MaskedTextResultHint& resultHint)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.MaskedTextResultHint
Наследуется от: Enum
Поля:
  int value__
  MaskedTextResultHint Unknown
  MaskedTextResultHint CharacterEscaped
  MaskedTextResultHint NoEffect
  MaskedTextResultHint SideEffect
  MaskedTextResultHint Success
  MaskedTextResultHint AsciiCharacterExpected
  MaskedTextResultHint AlphanumericCharacterExpected
  MaskedTextResultHint DigitExpected
  MaskedTextResultHint LetterExpected
  MaskedTextResultHint SignedDigitExpected
  MaskedTextResultHint InvalidInput
  MaskedTextResultHint PromptCharNotAllowed
  MaskedTextResultHint UnavailableEditPosition
  MaskedTextResultHint NonEditPosition
  MaskedTextResultHint PositionOutOfRange
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.MultilineStringConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.NestedContainer
Наследуется от: Container
Поля:
  IComponent <Owner>k__BackingField
Свойства:
  IComponent Owner
  string OwnerName
Методы:
  void .ctor(IComponent owner)
  IComponent get_Owner()
  string get_OwnerName()
  ISite CreateSite(IComponent component, string name)
  void Dispose(bool disposing)
  object GetService(Type service)
  void OnOwnerDisposed(object sender, EventArgs e)
--------------------------------------------------
Класс: System.ComponentModel.NullableConverter
Наследуется от: TypeConverter
Поля:
  Type <NullableType>k__BackingField
  Type <UnderlyingType>k__BackingField
  TypeConverter <UnderlyingTypeConverter>k__BackingField
Свойства:
  Type NullableType
  Type UnderlyingType
  TypeConverter UnderlyingTypeConverter
Методы:
  void .ctor(Type type)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  object CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)
  bool GetCreateInstanceSupported(ITypeDescriptorContext context)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported(ITypeDescriptorContext context)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  bool IsValid(ITypeDescriptorContext context, object value)
  Type get_NullableType()
  Type get_UnderlyingType()
  TypeConverter get_UnderlyingTypeConverter()
--------------------------------------------------
Класс: System.ComponentModel.PasswordPropertyTextAttribute
Наследуется от: Attribute
Поля:
  PasswordPropertyTextAttribute Yes
  PasswordPropertyTextAttribute No
  PasswordPropertyTextAttribute Default
  bool <Password>k__BackingField
Свойства:
  bool Password
Методы:
  void .ctor()
  void .ctor(bool password)
  bool get_Password()
  bool Equals(object o)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.PropertyDescriptor
Наследуется от: MemberDescriptor
Поля:
  TypeConverter _converter
  Hashtable _valueChangedHandlers
  Object[] _editors
  Type[] _editorTypes
  int _editorCount
Свойства:
  Type ComponentType
  TypeConverter Converter
  bool IsLocalizable
  bool IsReadOnly
  DesignerSerializationVisibility SerializationVisibility
  Type PropertyType
  bool SupportsChangeEvents
Методы:
  void .ctor(string name, Attribute[] attrs)
  void .ctor(MemberDescriptor descr)
  void .ctor(MemberDescriptor descr, Attribute[] attrs)
  Type get_ComponentType()
  TypeConverter get_Converter()
  bool get_IsLocalizable()
  bool get_IsReadOnly()
  DesignerSerializationVisibility get_SerializationVisibility()
  Type get_PropertyType()
  void AddValueChanged(object component, EventHandler handler)
  bool CanResetValue(object component)
  bool Equals(object obj)
  object CreateInstance(Type type)
  void FillAttributes(IList attributeList)
  PropertyDescriptorCollection GetChildProperties()
  PropertyDescriptorCollection GetChildProperties(Attribute[] filter)
  PropertyDescriptorCollection GetChildProperties(object instance)
  PropertyDescriptorCollection GetChildProperties(object instance, Attribute[] filter)
  object GetEditor(Type editorBaseType)
  int GetHashCode()
  object GetInvocationTarget(Type type, object instance)
  Type GetTypeFromName(string typeName)
  object GetValue(object component)
  void OnValueChanged(object component, EventArgs e)
  void RemoveValueChanged(object component, EventHandler handler)
  EventHandler GetValueChangedHandler(object component)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
  bool get_SupportsChangeEvents()
--------------------------------------------------
Класс: System.ComponentModel.PropertyDescriptorCollection
Наследуется от: object
Поля:
  PropertyDescriptorCollection Empty
  IDictionary _cachedFoundProperties
  bool _cachedIgnoreCase
  PropertyDescriptor[] _properties
  String[] _namedSort
  IComparer _comparer
  bool _propsOwned
  bool _needSort
  bool _readOnly
  object _internalSyncObject
  int <Count>k__BackingField
Свойства:
  int Count
  PropertyDescriptor Item
  PropertyDescriptor Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  int System.Collections.ICollection.Count
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.IDictionary.IsReadOnly
  object System.Collections.IDictionary.Item
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  object System.Collections.IList.Item
Методы:
  void .ctor(PropertyDescriptor[] properties)
  void .ctor(PropertyDescriptor[] properties, bool readOnly)
  void .ctor(PropertyDescriptor[] properties, int propCount, String[] namedSort, IComparer comparer)
  int get_Count()
  void set_Count(int value)
  PropertyDescriptor get_Item(int index)
  PropertyDescriptor get_Item(string name)
  int Add(PropertyDescriptor value)
  void Clear()
  bool Contains(PropertyDescriptor value)
  void CopyTo(Array array, int index)
  void EnsurePropsOwned()
  void EnsureSize(int sizeNeeded)
  PropertyDescriptor Find(string name, bool ignoreCase)
  int IndexOf(PropertyDescriptor value)
  void Insert(int index, PropertyDescriptor value)
  void Remove(PropertyDescriptor value)
  void RemoveAt(int index)
  PropertyDescriptorCollection Sort()
  PropertyDescriptorCollection Sort(String[] names)
  PropertyDescriptorCollection Sort(String[] names, IComparer comparer)
  PropertyDescriptorCollection Sort(IComparer comparer)
  void InternalSort(String[] names)
  void InternalSort(IComparer sorter)
  IEnumerator GetEnumerator()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  int System.Collections.ICollection.get_Count()
  void System.Collections.IList.Clear()
  void System.Collections.IDictionary.Clear()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void System.Collections.IList.RemoveAt(int index)
  void System.Collections.IDictionary.Add(object key, object value)
  bool System.Collections.IDictionary.Contains(object key)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.IDictionary.get_IsReadOnly()
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  ICollection System.Collections.IDictionary.get_Keys()
  ICollection System.Collections.IDictionary.get_Values()
  void System.Collections.IDictionary.Remove(object key)
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  void System.Collections.IList.Remove(object value)
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ProvidePropertyAttribute
Наследуется от: Attribute
Поля:
  string <PropertyName>k__BackingField
  string <ReceiverTypeName>k__BackingField
Свойства:
  string PropertyName
  string ReceiverTypeName
  object TypeId
Методы:
  void .ctor(string propertyName, Type receiverType)
  void .ctor(string propertyName, string receiverTypeName)
  string get_PropertyName()
  string get_ReceiverTypeName()
  bool Equals(object obj)
  int GetHashCode()
  object get_TypeId()
--------------------------------------------------
Класс: System.ComponentModel.RecommendedAsConfigurableAttribute
Наследуется от: Attribute
Поля:
  bool <RecommendedAsConfigurable>k__BackingField
  RecommendedAsConfigurableAttribute No
  RecommendedAsConfigurableAttribute Yes
  RecommendedAsConfigurableAttribute Default
Свойства:
  bool RecommendedAsConfigurable
Методы:
  void .ctor(bool recommendedAsConfigurable)
  bool get_RecommendedAsConfigurable()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ReferenceConverter
Наследуется от: TypeConverter
Поля:
  string s_none
  Type _type
Свойства:
Методы:
  void .ctor(Type type)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  bool IsValueAllowed(ITypeDescriptorContext context, object value)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ReflectEventDescriptor
Наследуется от: EventDescriptor
Поля:
  Type _type
  Type _componentClass
  MethodInfo _addMethod
  MethodInfo _removeMethod
  EventInfo _realEvent
  bool _filledMethods
Свойства:
  Type ComponentType
  Type EventType
  bool IsMulticast
Методы:
  void .ctor(Type componentClass, string name, Type type, Attribute[] attributes)
  void .ctor(Type componentClass, EventInfo eventInfo)
  void .ctor(Type componentType, EventDescriptor oldReflectEventDescriptor, Attribute[] attributes)
  Type get_ComponentType()
  Type get_EventType()
  bool get_IsMulticast()
  void AddEventHandler(object component, Delegate value)
  void FillAttributes(IList attributes)
  void FillEventInfoAttribute(EventInfo realEventInfo, IList attributes)
  void FillMethods()
  void FillSingleMethodAttribute(MethodInfo realMethodInfo, IList attributes)
  void RemoveEventHandler(object component, Delegate value)
--------------------------------------------------
Класс: System.ComponentModel.RefreshEventArgs
Наследуется от: EventArgs
Поля:
  object <ComponentChanged>k__BackingField
  Type <TypeChanged>k__BackingField
Свойства:
  object ComponentChanged
  Type TypeChanged
Методы:
  void .ctor(object componentChanged)
  void .ctor(Type typeChanged)
  object get_ComponentChanged()
  Type get_TypeChanged()
--------------------------------------------------
Класс: System.ComponentModel.RefreshEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(RefreshEventArgs e)
  IAsyncResult BeginInvoke(RefreshEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.RunInstallerAttribute
Наследуется от: Attribute
Поля:
  bool <RunInstaller>k__BackingField
  RunInstallerAttribute Yes
  RunInstallerAttribute No
  RunInstallerAttribute Default
Свойства:
  bool RunInstaller
Методы:
  void .ctor(bool runInstaller)
  bool get_RunInstaller()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.SByteConverter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.SettingsBindableAttribute
Наследуется от: Attribute
Поля:
  SettingsBindableAttribute Yes
  SettingsBindableAttribute No
  bool <Bindable>k__BackingField
Свойства:
  bool Bindable
Методы:
  void .ctor(bool bindable)
  bool get_Bindable()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.SingleConverter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  bool AllowHex
  Type TargetType
Методы:
  bool get_AllowHex()
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.StringConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.SyntaxCheck
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CheckMachineName(string value)
  bool CheckPath(string value)
  bool CheckRootedPath(string value)
--------------------------------------------------
Класс: System.ComponentModel.TimeSpanConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.ToolboxItemFilterAttribute
Наследуется от: Attribute
Поля:
  string _typeId
  string <FilterString>k__BackingField
  ToolboxItemFilterType <FilterType>k__BackingField
Свойства:
  string FilterString
  ToolboxItemFilterType FilterType
  object TypeId
Методы:
  void .ctor(string filterString)
  void .ctor(string filterString, ToolboxItemFilterType filterType)
  string get_FilterString()
  ToolboxItemFilterType get_FilterType()
  object get_TypeId()
  bool Equals(object obj)
  int GetHashCode()
  bool Match(object obj)
  string ToString()
--------------------------------------------------
Класс: System.ComponentModel.ToolboxItemFilterType
Наследуется от: Enum
Поля:
  int value__
  ToolboxItemFilterType Allow
  ToolboxItemFilterType Custom
  ToolboxItemFilterType Prevent
  ToolboxItemFilterType Require
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.TypeConverterAttribute
Наследуется от: Attribute
Поля:
  TypeConverterAttribute Default
  string <ConverterTypeName>k__BackingField
Свойства:
  string ConverterTypeName
Методы:
  void .ctor()
  void .ctor(Type type)
  void .ctor(string typeName)
  string get_ConverterTypeName()
  bool Equals(object obj)
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.TypeDescriptionProvider
Наследуется от: object
Поля:
  TypeDescriptionProvider _parent
  EmptyCustomTypeDescriptor _emptyDescriptor
Свойства:
Методы:
  void .ctor()
  void .ctor(TypeDescriptionProvider parent)
  object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, Object[] args)
  IDictionary GetCache(object instance)
  ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance)
  IExtenderProvider[] GetExtenderProviders(object instance)
  string GetFullComponentName(object component)
  Type GetReflectionType(Type objectType)
  Type GetReflectionType(object instance)
  Type GetReflectionType(Type objectType, object instance)
  Type GetRuntimeType(Type reflectionType)
  ICustomTypeDescriptor GetTypeDescriptor(Type objectType)
  ICustomTypeDescriptor GetTypeDescriptor(object instance)
  ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
  bool IsSupportedType(Type type)
--------------------------------------------------
Класс: System.ComponentModel.TypeDescriptionProviderAttribute
Наследуется от: Attribute
Поля:
  string <TypeName>k__BackingField
Свойства:
  string TypeName
Методы:
  void .ctor(string typeName)
  void .ctor(Type type)
  string get_TypeName()
--------------------------------------------------
Класс: System.ComponentModel.TypeListConverter
Наследуется от: TypeConverter
Поля:
  Type[] _types
  StandardValuesCollection _values
Свойства:
Методы:
  void .ctor(Type[] types)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
--------------------------------------------------
Класс: System.ComponentModel.UInt16Converter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.UInt32Converter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.UInt64Converter
Наследуется от: BaseNumberConverter
Поля:
Свойства:
  Type TargetType
Методы:
  Type get_TargetType()
  object FromString(string value, int radix)
  object FromString(string value, NumberFormatInfo formatInfo)
  string ToString(object value, NumberFormatInfo formatInfo)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.WarningException
Наследуется от: SystemException
Поля:
  string <HelpUrl>k__BackingField
  string <HelpTopic>k__BackingField
Свойства:
  string HelpUrl
  string HelpTopic
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, string helpUrl)
  void .ctor(string message, Exception innerException)
  void .ctor(string message, string helpUrl, string helpTopic)
  void .ctor(SerializationInfo info, StreamingContext context)
  string get_HelpUrl()
  string get_HelpTopic()
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.CancelEventArgs
Наследуется от: EventArgs
Поля:
  bool <Cancel>k__BackingField
Свойства:
  bool Cancel
Методы:
  bool get_Cancel()
  void set_Cancel(bool value)
  void .ctor()
  void .ctor(bool cancel)
--------------------------------------------------
Класс: System.ComponentModel.IChangeTracking
Поля:
Свойства:
  bool IsChanged
Методы:
  bool get_IsChanged()
  void AcceptChanges()
--------------------------------------------------
Класс: System.ComponentModel.IEditableObject
Поля:
Свойства:
Методы:
  void BeginEdit()
  void EndEdit()
  void CancelEdit()
--------------------------------------------------
Класс: System.ComponentModel.IRevertibleChangeTracking
Поля:
Свойства:
Методы:
  void RejectChanges()
--------------------------------------------------
Класс: System.ComponentModel.DataErrorsChangedEventArgs
Наследуется от: EventArgs
Поля:
  string _propertyName
Свойства:
  string PropertyName
Методы:
  void .ctor(string propertyName)
  string get_PropertyName()
--------------------------------------------------
Класс: System.ComponentModel.INotifyDataErrorInfo
Поля:
Свойства:
  bool HasErrors
Методы:
  bool get_HasErrors()
  IEnumerable GetErrors(string propertyName)
  void add_ErrorsChanged(EventHandler`1<DataErrorsChangedEventArgs> value)
  void remove_ErrorsChanged(EventHandler`1<DataErrorsChangedEventArgs> value)
--------------------------------------------------
Класс: System.ComponentModel.INotifyPropertyChanged
Поля:
Свойства:
Методы:
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.INotifyPropertyChanging
Поля:
Свойства:
Методы:
  void add_PropertyChanging(PropertyChangingEventHandler value)
  void remove_PropertyChanging(PropertyChangingEventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangedEventArgs
Наследуется от: EventArgs
Поля:
  string _propertyName
Свойства:
  string PropertyName
Методы:
  void .ctor(string propertyName)
  string get_PropertyName()
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, PropertyChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, PropertyChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangingEventArgs
Наследуется от: EventArgs
Поля:
  string _propertyName
Свойства:
  string PropertyName
Методы:
  void .ctor(string propertyName)
  string get_PropertyName()
--------------------------------------------------
Класс: System.ComponentModel.PropertyChangingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, PropertyChangingEventArgs e)
  IAsyncResult BeginInvoke(object sender, PropertyChangingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.ArraySubsetEnumerator
Наследуется от: object
Поля:
  Array array
  int total
  int current
Свойства:
  object Current
Методы:
  void .ctor(Array array, int count)
  bool MoveNext()
  void Reset()
  object get_Current()
--------------------------------------------------
Класс: System.ComponentModel.AsyncCompletedEventArgs
Наследуется от: EventArgs
Поля:
  Exception error
  bool cancelled
  object userState
Свойства:
  bool Cancelled
  Exception Error
  object UserState
Методы:
  void .ctor()
  void .ctor(Exception error, bool cancelled, object userState)
  bool get_Cancelled()
  Exception get_Error()
  object get_UserState()
  void RaiseExceptionIfNecessary()
--------------------------------------------------
Класс: System.ComponentModel.AsyncCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, AsyncCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, AsyncCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.CategoryAttribute
Наследуется от: Attribute
Поля:
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) appearance
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) asynchronous
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) behavior
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) data
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) design
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) action
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) format
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) layout
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) mouse
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) key
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) focus
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) windowStyle
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) dragDrop
  CategoryAttribute modreq(System.Runtime.CompilerServices.IsVolatile) defAttr
  bool localized
  string categoryValue
Свойства:
  CategoryAttribute Action
  CategoryAttribute Appearance
  CategoryAttribute Asynchronous
  CategoryAttribute Behavior
  CategoryAttribute Data
  CategoryAttribute Default
  CategoryAttribute Design
  CategoryAttribute DragDrop
  CategoryAttribute Focus
  CategoryAttribute Format
  CategoryAttribute Key
  CategoryAttribute Layout
  CategoryAttribute Mouse
  CategoryAttribute WindowStyle
  string Category
Методы:
  CategoryAttribute get_Action()
  CategoryAttribute get_Appearance()
  CategoryAttribute get_Asynchronous()
  CategoryAttribute get_Behavior()
  CategoryAttribute get_Data()
  CategoryAttribute get_Default()
  CategoryAttribute get_Design()
  CategoryAttribute get_DragDrop()
  CategoryAttribute get_Focus()
  CategoryAttribute get_Format()
  CategoryAttribute get_Key()
  CategoryAttribute get_Layout()
  CategoryAttribute get_Mouse()
  CategoryAttribute get_WindowStyle()
  void .ctor()
  void .ctor(string category)
  string get_Category()
  bool Equals(object obj)
  int GetHashCode()
  string GetLocalizedString(string value)
  bool IsDefaultAttribute()
--------------------------------------------------
Класс: System.ComponentModel.CollectionConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported(ITypeDescriptorContext context)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.CompModSwitches
Наследуется от: object
Поля:
  BooleanSwitch modreq(System.Runtime.CompilerServices.IsVolatile) commonDesignerServices
  TraceSwitch modreq(System.Runtime.CompilerServices.IsVolatile) eventLog
Свойства:
  BooleanSwitch CommonDesignerServices
  TraceSwitch EventLog
Методы:
  BooleanSwitch get_CommonDesignerServices()
  TraceSwitch get_EventLog()
--------------------------------------------------
Класс: System.ComponentModel.Component
Наследуется от: MarshalByRefObject
Поля:
  object EventDisposed
  ISite site
  EventHandlerList events
Свойства:
  bool CanRaiseEvents
  bool CanRaiseEventsInternal
  EventHandlerList Events
  ISite Site
  IContainer Container
  bool DesignMode
Методы:
  void Finalize()
  bool get_CanRaiseEvents()
  bool get_CanRaiseEventsInternal()
  void add_Disposed(EventHandler value)
  void remove_Disposed(EventHandler value)
  EventHandlerList get_Events()
  ISite get_Site()
  void set_Site(ISite value)
  void Dispose()
  void Dispose(bool disposing)
  IContainer get_Container()
  object GetService(Type service)
  bool get_DesignMode()
  string ToString()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ComponentConverter
Наследуется от: ReferenceConverter
Поля:
Свойства:
Методы:
  void .ctor(Type type)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported(ITypeDescriptorContext context)
--------------------------------------------------
Класс: System.ComponentModel.Container
Наследуется от: object
Поля:
  ISite[] sites
  int siteCount
  ComponentCollection components
  ContainerFilterService filter
  bool checkedFilter
  object syncObj
Свойства:
  ComponentCollection Components
Методы:
  void Finalize()
  void Add(IComponent component)
  void Add(IComponent component, string name)
  ISite CreateSite(IComponent component, string name)
  void Dispose()
  void Dispose(bool disposing)
  object GetService(Type service)
  ComponentCollection get_Components()
  void Remove(IComponent component)
  void Remove(IComponent component, bool preserveSite)
  void RemoveWithoutUnsiting(IComponent component)
  void ValidateName(IComponent component, string name)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.DateTimeOffsetConverter
Наследуется от: TypeConverter
Поля:
Свойства:
Методы:
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.DesignerAttribute
Наследуется от: Attribute
Поля:
  string designerTypeName
  string designerBaseTypeName
  string typeId
Свойства:
  string DesignerBaseTypeName
  string DesignerTypeName
  object TypeId
Методы:
  void .ctor(string designerTypeName)
  void .ctor(Type designerType)
  void .ctor(string designerTypeName, string designerBaseTypeName)
  void .ctor(string designerTypeName, Type designerBaseType)
  void .ctor(Type designerType, Type designerBaseType)
  string get_DesignerBaseTypeName()
  string get_DesignerTypeName()
  object get_TypeId()
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.ComponentModel.DoWorkEventArgs
Наследуется от: CancelEventArgs
Поля:
  object result
  object argument
Свойства:
  object Argument
  object Result
Методы:
  void .ctor(object argument)
  object get_Argument()
  object get_Result()
  void set_Result(object value)
--------------------------------------------------
Класс: System.ComponentModel.DoWorkEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DoWorkEventArgs e)
  IAsyncResult BeginInvoke(object sender, DoWorkEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.EnumConverter
Наследуется от: TypeConverter
Поля:
  StandardValuesCollection values
  Type type
Свойства:
  Type EnumType
  StandardValuesCollection Values
  IComparer Comparer
Методы:
  void .ctor(Type type)
  Type get_EnumType()
  StandardValuesCollection get_Values()
  void set_Values(StandardValuesCollection value)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  IComparer get_Comparer()
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  bool IsValid(ITypeDescriptorContext context, object value)
--------------------------------------------------
Класс: System.ComponentModel.IComponent
Поля:
Свойства:
  ISite Site
Методы:
  ISite get_Site()
  void set_Site(ISite value)
  void add_Disposed(EventHandler value)
  void remove_Disposed(EventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.IntSecurity
Наследуется от: object
Поля:
Свойства:
Методы:
  string UnsafeGetFullPath(string fileName)
--------------------------------------------------
Класс: System.ComponentModel.LicenseException
Наследуется от: SystemException
Поля:
  Type type
  object instance
Свойства:
  Type LicensedType
Методы:
  void .ctor(Type type)
  void .ctor(Type type, object instance)
  void .ctor(Type type, object instance, string message)
  void .ctor(Type type, object instance, string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  Type get_LicensedType()
  void GetObjectData(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.ComponentModel.MemberDescriptor
Наследуется от: object
Поля:
  string name
  string displayName
  int nameHash
  AttributeCollection attributeCollection
  Attribute[] attributes
  Attribute[] originalAttributes
  bool attributesFiltered
  bool attributesFilled
  int metadataVersion
  string category
  string description
  object lockCookie
Свойства:
  Attribute[] AttributeArray
  AttributeCollection Attributes
  string Category
  string Description
  bool IsBrowsable
  string Name
  int NameHashCode
  bool DesignTimeOnly
  string DisplayName
Методы:
  void .ctor(string name)
  void .ctor(string name, Attribute[] attributes)
  void .ctor(MemberDescriptor descr)
  void .ctor(MemberDescriptor oldMemberDescriptor, Attribute[] newAttributes)
  Attribute[] get_AttributeArray()
  void set_AttributeArray(Attribute[] value)
  AttributeCollection get_Attributes()
  string get_Category()
  string get_Description()
  bool get_IsBrowsable()
  string get_Name()
  int get_NameHashCode()
  bool get_DesignTimeOnly()
  string get_DisplayName()
  void CheckAttributesValid()
  AttributeCollection CreateAttributeCollection()
  bool Equals(object obj)
  void FillAttributes(IList attributeList)
  void FilterAttributesIfNeeded()
  MethodInfo FindMethod(Type componentClass, string name, Type[] args, Type returnType)
  MethodInfo FindMethod(Type componentClass, string name, Type[] args, Type returnType, bool publicOnly)
  int GetHashCode()
  object GetInvocationTarget(Type type, object instance)
  ISite GetSite(object component)
  object GetInvokee(Type componentClass, object component)
--------------------------------------------------
Класс: System.ComponentModel.ProgressChangedEventArgs
Наследуется от: EventArgs
Поля:
  int progressPercentage
  object userState
Свойства:
  int ProgressPercentage
  object UserState
Методы:
  void .ctor(int progressPercentage, object userState)
  int get_ProgressPercentage()
  object get_UserState()
--------------------------------------------------
Класс: System.ComponentModel.ProgressChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ProgressChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, ProgressChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.ReflectPropertyDescriptor
Наследуется от: PropertyDescriptor
Поля:
  Type[] argsNone
  object noValue
  TraceSwitch PropDescCreateSwitch
  TraceSwitch PropDescUsageSwitch
  int BitDefaultValueQueried
  int BitGetQueried
  int BitSetQueried
  int BitShouldSerializeQueried
  int BitResetQueried
  int BitChangedQueried
  int BitIPropChangedQueried
  int BitReadOnlyChecked
  int BitAmbientValueQueried
  int BitSetOnDemand
  BitVector32 state
  Type componentClass
  Type type
  object defaultValue
  object ambientValue
  PropertyInfo propInfo
  MethodInfo getMethod
  MethodInfo setMethod
  MethodInfo shouldSerializeMethod
  MethodInfo resetMethod
  EventDescriptor realChangedEvent
  EventDescriptor realIPropChangedEvent
  Type receiverType
Свойства:
  object AmbientValue
  EventDescriptor ChangedEventValue
  EventDescriptor IPropChangedEventValue
  Type ComponentType
  object DefaultValue
  MethodInfo GetMethodValue
  bool IsExtender
  bool IsReadOnly
  Type PropertyType
  MethodInfo ResetMethodValue
  MethodInfo SetMethodValue
  MethodInfo ShouldSerializeMethodValue
  bool SupportsChangeEvents
Методы:
  void .ctor(Type componentClass, string name, Type type, Attribute[] attributes)
  void .ctor(Type componentClass, string name, Type type, PropertyInfo propInfo, MethodInfo getMethod, MethodInfo setMethod, Attribute[] attrs)
  void .ctor(Type componentClass, string name, Type type, Type receiverType, MethodInfo getMethod, MethodInfo setMethod, Attribute[] attrs)
  void .ctor(Type componentClass, PropertyDescriptor oldReflectPropertyDescriptor, Attribute[] attributes)
  object get_AmbientValue()
  EventDescriptor get_ChangedEventValue()
  EventDescriptor get_IPropChangedEventValue()
  void set_IPropChangedEventValue(EventDescriptor value)
  Type get_ComponentType()
  object get_DefaultValue()
  MethodInfo get_GetMethodValue()
  bool get_IsExtender()
  bool get_IsReadOnly()
  Type get_PropertyType()
  MethodInfo get_ResetMethodValue()
  MethodInfo get_SetMethodValue()
  MethodInfo get_ShouldSerializeMethodValue()
  void AddValueChanged(object component, EventHandler handler)
  bool ExtenderCanResetValue(IExtenderProvider provider, object component)
  Type ExtenderGetReceiverType()
  Type ExtenderGetType(IExtenderProvider provider)
  object ExtenderGetValue(IExtenderProvider provider, object component)
  void ExtenderResetValue(IExtenderProvider provider, object component, PropertyDescriptor notifyDesc)
  void ExtenderSetValue(IExtenderProvider provider, object component, object value, PropertyDescriptor notifyDesc)
  bool ExtenderShouldSerializeValue(IExtenderProvider provider, object component)
  bool CanResetValue(object component)
  void FillAttributes(IList attributes)
  object GetValue(object component)
  void OnINotifyPropertyChanged(object component, PropertyChangedEventArgs e)
  void OnValueChanged(object component, EventArgs e)
  void RemoveValueChanged(object component, EventHandler handler)
  void ResetValue(object component)
  void SetValue(object component, object value)
  bool ShouldSerializeValue(object component)
  bool get_SupportsChangeEvents()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ReflectTypeDescriptionProvider
Наследуется от: TypeDescriptionProvider
Поля:
  Hashtable _typeData
  Type[] _typeConstructor
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _editorTables
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _intrinsicTypeConverters
  object _intrinsicReferenceKey
  object _intrinsicNullableKey
  object _dictionaryKey
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _propertyCache
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _eventCache
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _attributeCache
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _extendedPropertyCache
  Guid _extenderProviderKey
  Guid _extenderPropertiesKey
  Guid _extenderProviderPropertiesKey
  Type[] _skipInterfaceAttributeList
  object _internalSyncObject
Свойства:
  Guid ExtenderProviderKey
  Hashtable IntrinsicTypeConverters
Методы:
  Guid get_ExtenderProviderKey()
  void .ctor()
  Hashtable get_IntrinsicTypeConverters()
  void AddEditorTable(Type editorBaseType, Hashtable table)
  object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, Object[] args)
  object CreateInstance(Type objectType, Type callingType)
  AttributeCollection GetAttributes(Type type)
  IDictionary GetCache(object instance)
  string GetClassName(Type type)
  string GetComponentName(Type type, object instance)
  TypeConverter GetConverter(Type type, object instance)
  EventDescriptor GetDefaultEvent(Type type, object instance)
  PropertyDescriptor GetDefaultProperty(Type type, object instance)
  object GetEditor(Type type, object instance, Type editorBaseType)
  Hashtable GetEditorTable(Type editorBaseType)
  EventDescriptorCollection GetEvents(Type type)
  AttributeCollection GetExtendedAttributes(object instance)
  string GetExtendedClassName(object instance)
  string GetExtendedComponentName(object instance)
  TypeConverter GetExtendedConverter(object instance)
  EventDescriptor GetExtendedDefaultEvent(object instance)
  PropertyDescriptor GetExtendedDefaultProperty(object instance)
  object GetExtendedEditor(object instance, Type editorBaseType)
  EventDescriptorCollection GetExtendedEvents(object instance)
  PropertyDescriptorCollection GetExtendedProperties(object instance)
  IExtenderProvider[] GetExtenderProviders(object instance)
  IExtenderProvider[] GetExtenders(ICollection components, object instance, IDictionary cache)
  object GetExtendedPropertyOwner(object instance, PropertyDescriptor pd)
  ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance)
  string GetFullComponentName(object component)
  Type[] GetPopulatedTypes(Module module)
  PropertyDescriptorCollection GetProperties(Type type)
  object GetPropertyOwner(Type type, object instance, PropertyDescriptor pd)
  Type GetReflectionType(Type objectType, object instance)
  ReflectedTypeData GetTypeData(Type type, bool createIfNeeded)
  ICustomTypeDescriptor GetTypeDescriptor(Type objectType, object instance)
  Type GetTypeFromName(string typeName)
  bool IsPopulated(Type type)
  Attribute[] ReflectGetAttributes(Type type)
  Attribute[] ReflectGetAttributes(MemberInfo member)
  EventDescriptor[] ReflectGetEvents(Type type)
  PropertyDescriptor[] ReflectGetExtendedProperties(IExtenderProvider provider)
  PropertyDescriptor[] ReflectGetProperties(Type type)
  void Refresh(Type type)
  object SearchIntrinsicTable(Hashtable table, Type callingType)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.RunWorkerCompletedEventArgs
Наследуется от: AsyncCompletedEventArgs
Поля:
  object result
Свойства:
  object Result
  object UserState
Методы:
  void .ctor(object result, Exception error, bool cancelled)
  object get_Result()
  object get_UserState()
--------------------------------------------------
Класс: System.ComponentModel.RunWorkerCompletedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, RunWorkerCompletedEventArgs e)
  IAsyncResult BeginInvoke(object sender, RunWorkerCompletedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.TypeConverter
Наследуется от: object
Поля:
  string s_UseCompatibleTypeConverterBehavior
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) useCompatibleTypeConversion
Свойства:
  bool UseCompatibleTypeConversion
Методы:
  bool get_UseCompatibleTypeConversion()
  bool CanConvertFrom(Type sourceType)
  bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
  bool CanConvertTo(Type destinationType)
  bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
  object ConvertFrom(object value)
  object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
  object ConvertFromInvariantString(string text)
  object ConvertFromInvariantString(ITypeDescriptorContext context, string text)
  object ConvertFromString(string text)
  object ConvertFromString(ITypeDescriptorContext context, string text)
  object ConvertFromString(ITypeDescriptorContext context, CultureInfo culture, string text)
  object ConvertTo(object value, Type destinationType)
  object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
  string ConvertToInvariantString(object value)
  string ConvertToInvariantString(ITypeDescriptorContext context, object value)
  string ConvertToString(object value)
  string ConvertToString(ITypeDescriptorContext context, object value)
  string ConvertToString(ITypeDescriptorContext context, CultureInfo culture, object value)
  object CreateInstance(IDictionary propertyValues)
  object CreateInstance(ITypeDescriptorContext context, IDictionary propertyValues)
  Exception GetConvertFromException(object value)
  Exception GetConvertToException(object value, Type destinationType)
  bool GetCreateInstanceSupported()
  bool GetCreateInstanceSupported(ITypeDescriptorContext context)
  PropertyDescriptorCollection GetProperties(object value)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value)
  PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, object value, Attribute[] attributes)
  bool GetPropertiesSupported()
  bool GetPropertiesSupported(ITypeDescriptorContext context)
  ICollection GetStandardValues()
  StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
  bool GetStandardValuesExclusive()
  bool GetStandardValuesExclusive(ITypeDescriptorContext context)
  bool GetStandardValuesSupported()
  bool GetStandardValuesSupported(ITypeDescriptorContext context)
  bool IsValid(object value)
  bool IsValid(ITypeDescriptorContext context, object value)
  PropertyDescriptorCollection SortProperties(PropertyDescriptorCollection props, String[] names)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.TypeDescriptor
Наследуется от: object
Поля:
  WeakHashtable _providerTable
  Hashtable _providerTypeTable
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _defaultProviders
  WeakHashtable modreq(System.Runtime.CompilerServices.IsVolatile) _associationTable
  int _metadataVersion
  int _collisionIndex
  BooleanSwitch TraceDescriptor
  int PIPELINE_ATTRIBUTES
  int PIPELINE_PROPERTIES
  int PIPELINE_EVENTS
  Guid[] _pipelineInitializeKeys
  Guid[] _pipelineMergeKeys
  Guid[] _pipelineFilterKeys
  Guid[] _pipelineAttributeFilterKeys
  object _internalSyncObject
  RefreshEventHandler Refreshed
Свойства:
  IComNativeDescriptorHandler ComNativeDescriptorHandler
  Type ComObjectType
  Type InterfaceType
  int MetadataVersion
Методы:
  void .ctor()
  IComNativeDescriptorHandler get_ComNativeDescriptorHandler()
  void set_ComNativeDescriptorHandler(IComNativeDescriptorHandler value)
  Type get_ComObjectType()
  Type get_InterfaceType()
  int get_MetadataVersion()
  void add_Refreshed(RefreshEventHandler value)
  void remove_Refreshed(RefreshEventHandler value)
  TypeDescriptionProvider AddAttributes(Type type, Attribute[] attributes)
  TypeDescriptionProvider AddAttributes(object instance, Attribute[] attributes)
  void AddEditorTable(Type editorBaseType, Hashtable table)
  void AddProvider(TypeDescriptionProvider provider, Type type)
  void AddProvider(TypeDescriptionProvider provider, object instance)
  void AddProviderTransparent(TypeDescriptionProvider provider, Type type)
  void AddProviderTransparent(TypeDescriptionProvider provider, object instance)
  void CheckDefaultProvider(Type type)
  void CreateAssociation(object primary, object secondary)
  IDesigner CreateDesigner(IComponent component, Type designerBaseType)
  EventDescriptor CreateEvent(Type componentType, string name, Type type, Attribute[] attributes)
  EventDescriptor CreateEvent(Type componentType, EventDescriptor oldEventDescriptor, Attribute[] attributes)
  object CreateInstance(IServiceProvider provider, Type objectType, Type[] argTypes, Object[] args)
  PropertyDescriptor CreateProperty(Type componentType, string name, Type type, Attribute[] attributes)
  PropertyDescriptor CreateProperty(Type componentType, PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes)
  void DebugValidate(Type type, AttributeCollection attributes, AttributeCollection debugAttributes)
  void DebugValidate(AttributeCollection attributes, AttributeCollection debugAttributes)
  void DebugValidate(AttributeCollection attributes, Type type)
  void DebugValidate(AttributeCollection attributes, object instance, bool noCustomTypeDesc)
  void DebugValidate(TypeConverter converter, Type type)
  void DebugValidate(TypeConverter converter, object instance, bool noCustomTypeDesc)
  void DebugValidate(EventDescriptorCollection events, Type type, Attribute[] attributes)
  void DebugValidate(EventDescriptorCollection events, object instance, Attribute[] attributes, bool noCustomTypeDesc)
  void DebugValidate(PropertyDescriptorCollection properties, Type type, Attribute[] attributes)
  void DebugValidate(PropertyDescriptorCollection properties, object instance, Attribute[] attributes, bool noCustomTypeDesc)
  ArrayList FilterMembers(IList members, Attribute[] attributes)
  object GetAssociation(Type type, object primary)
  AttributeCollection GetAttributes(Type componentType)
  AttributeCollection GetAttributes(object component)
  AttributeCollection GetAttributes(object component, bool noCustomTypeDesc)
  IDictionary GetCache(object instance)
  string GetClassName(object component)
  string GetClassName(object component, bool noCustomTypeDesc)
  string GetClassName(Type componentType)
  string GetComponentName(object component)
  string GetComponentName(object component, bool noCustomTypeDesc)
  TypeConverter GetConverter(object component)
  TypeConverter GetConverter(object component, bool noCustomTypeDesc)
  TypeConverter GetConverter(Type type)
  object ConvertFromInvariantString(Type type, string stringValue)
  EventDescriptor GetDefaultEvent(Type componentType)
  EventDescriptor GetDefaultEvent(object component)
  EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc)
  PropertyDescriptor GetDefaultProperty(Type componentType)
  PropertyDescriptor GetDefaultProperty(object component)
  PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc)
  ICustomTypeDescriptor GetDescriptor(Type type, string typeName)
  ICustomTypeDescriptor GetDescriptor(object component, bool noCustomTypeDesc)
  ICustomTypeDescriptor GetExtendedDescriptor(object component)
  object GetEditor(object component, Type editorBaseType)
  object GetEditor(object component, Type editorBaseType, bool noCustomTypeDesc)
  object GetEditor(Type type, Type editorBaseType)
  EventDescriptorCollection GetEvents(Type componentType)
  EventDescriptorCollection GetEvents(Type componentType, Attribute[] attributes)
  EventDescriptorCollection GetEvents(object component)
  EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc)
  EventDescriptorCollection GetEvents(object component, Attribute[] attributes)
  EventDescriptorCollection GetEvents(object component, Attribute[] attributes, bool noCustomTypeDesc)
  string GetExtenderCollisionSuffix(MemberDescriptor member)
  string GetFullComponentName(object component)
  Type GetNodeForBaseType(Type searchType)
  PropertyDescriptorCollection GetProperties(Type componentType)
  PropertyDescriptorCollection GetProperties(Type componentType, Attribute[] attributes)
  PropertyDescriptorCollection GetProperties(object component)
  PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc)
  PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes)
  PropertyDescriptorCollection GetProperties(object component, Attribute[] attributes, bool noCustomTypeDesc)
  PropertyDescriptorCollection GetPropertiesImpl(object component, Attribute[] attributes, bool noCustomTypeDesc, bool noAttributes)
  TypeDescriptionProvider GetProvider(Type type)
  TypeDescriptionProvider GetProvider(object instance)
  TypeDescriptionProvider GetProviderRecursive(Type type)
  Type GetReflectionType(Type type)
  Type GetReflectionType(object instance)
  TypeDescriptionNode NodeFor(Type type)
  TypeDescriptionNode NodeFor(Type type, bool createDelegator)
  TypeDescriptionNode NodeFor(object instance)
  TypeDescriptionNode NodeFor(object instance, bool createDelegator)
  void NodeRemove(object key, TypeDescriptionProvider provider)
  ICollection PipelineAttributeFilter(int pipelineType, ICollection members, Attribute[] filter, object instance, IDictionary cache)
  ICollection PipelineFilter(int pipelineType, ICollection members, object instance, IDictionary cache)
  ICollection PipelineInitialize(int pipelineType, ICollection members, IDictionary cache)
  ICollection PipelineMerge(int pipelineType, ICollection primary, ICollection secondary, object instance, IDictionary cache)
  void RaiseRefresh(object component)
  void RaiseRefresh(Type type)
  void Refresh(object component)
  void Refresh(object component, bool refreshReflectionProvider)
  void Refresh(Type type)
  void Refresh(Module module)
  void Refresh(Assembly assembly)
  void RemoveAssociation(object primary, object secondary)
  void RemoveAssociations(object primary)
  void RemoveProvider(TypeDescriptionProvider provider, Type type)
  void RemoveProvider(TypeDescriptionProvider provider, object instance)
  void RemoveProviderTransparent(TypeDescriptionProvider provider, Type type)
  void RemoveProviderTransparent(TypeDescriptionProvider provider, object instance)
  bool ShouldHideMember(MemberDescriptor member, Attribute attribute)
  void SortDescriptorArray(IList infos)
  void Trace(string message, Object[] args)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Win32Exception
Наследуется от: ExternalException
Поля:
  int nativeErrorCode
  int MAX_MESSAGE_LENGTH
Свойства:
  int NativeErrorCode
Методы:
  void .ctor()
  void .ctor(int error)
  void .ctor(int error, string message)
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
  int get_NativeErrorCode()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  int FormatMessage(int dwFlags, IntPtr lpSource, UInt32 dwMessageId, int dwLanguageId, Char[] lpBuffer, int nSize, IntPtr[] arguments)
  string GetErrorMessage(int error)
--------------------------------------------------
Класс: System.ComponentModel.NotifyParentPropertyAttribute
Наследуется от: Attribute
Поля:
  NotifyParentPropertyAttribute Yes
  NotifyParentPropertyAttribute No
  NotifyParentPropertyAttribute Default
  bool notifyParent
Свойства:
  bool NotifyParent
Методы:
  void .ctor(bool notifyParent)
  bool get_NotifyParent()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.ParenthesizePropertyNameAttribute
Наследуется от: Attribute
Поля:
  ParenthesizePropertyNameAttribute Default
  bool needParenthesis
Свойства:
  bool NeedParenthesis
Методы:
  void .ctor()
  void .ctor(bool needParenthesis)
  bool get_NeedParenthesis()
  bool Equals(object o)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.RefreshProperties
Наследуется от: Enum
Поля:
  int value__
  RefreshProperties None
  RefreshProperties All
  RefreshProperties Repaint
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.RefreshPropertiesAttribute
Наследуется от: Attribute
Поля:
  RefreshPropertiesAttribute All
  RefreshPropertiesAttribute Repaint
  RefreshPropertiesAttribute Default
  RefreshProperties refresh
Свойства:
  RefreshProperties RefreshProperties
Методы:
  void .ctor(RefreshProperties refresh)
  RefreshProperties get_RefreshProperties()
  bool Equals(object value)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.WeakHashtable
Наследуется от: Hashtable
Поля:
  IEqualityComparer _comparer
  long _lastGlobalMem
  int _lastHashCount
Свойства:
Методы:
  void .ctor()
  void Clear()
  void Remove(object key)
  void SetWeak(object key, object value)
  void ScavengeKeys()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.SRCategoryAttribute
Наследуется от: CategoryAttribute
Поля:
Свойства:
Методы:
  void .ctor(string category)
--------------------------------------------------
Класс: System.ComponentModel.Design.ActiveDesignerEventArgs
Наследуется от: EventArgs
Поля:
  IDesignerHost <OldDesigner>k__BackingField
  IDesignerHost <NewDesigner>k__BackingField
Свойства:
  IDesignerHost OldDesigner
  IDesignerHost NewDesigner
Методы:
  void .ctor(IDesignerHost oldDesigner, IDesignerHost newDesigner)
  IDesignerHost get_OldDesigner()
  IDesignerHost get_NewDesigner()
--------------------------------------------------
Класс: System.ComponentModel.Design.ActiveDesignerEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ActiveDesignerEventArgs e)
  IAsyncResult BeginInvoke(object sender, ActiveDesignerEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.CheckoutException
Наследуется от: ExternalException
Поля:
  int E_ABORT
  CheckoutException Canceled
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, int errorCode)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception innerException)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.CommandID
Наследуется от: object
Поля:
  int <ID>k__BackingField
  Guid <Guid>k__BackingField
Свойства:
  int ID
  Guid Guid
Методы:
  void .ctor(Guid menuGroup, int commandID)
  int get_ID()
  bool Equals(object obj)
  int GetHashCode()
  Guid get_Guid()
  string ToString()
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentChangedEventArgs
Наследуется от: EventArgs
Поля:
  object <Component>k__BackingField
  MemberDescriptor <Member>k__BackingField
  object <NewValue>k__BackingField
  object <OldValue>k__BackingField
Свойства:
  object Component
  MemberDescriptor Member
  object NewValue
  object OldValue
Методы:
  object get_Component()
  MemberDescriptor get_Member()
  object get_NewValue()
  object get_OldValue()
  void .ctor(object component, MemberDescriptor member, object oldValue, object newValue)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ComponentChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, ComponentChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentChangingEventArgs
Наследуется от: EventArgs
Поля:
  object <Component>k__BackingField
  MemberDescriptor <Member>k__BackingField
Свойства:
  object Component
  MemberDescriptor Member
Методы:
  object get_Component()
  MemberDescriptor get_Member()
  void .ctor(object component, MemberDescriptor member)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentChangingEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ComponentChangingEventArgs e)
  IAsyncResult BeginInvoke(object sender, ComponentChangingEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentEventArgs
Наследуется от: EventArgs
Поля:
  IComponent <Component>k__BackingField
Свойства:
  IComponent Component
Методы:
  IComponent get_Component()
  void .ctor(IComponent component)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ComponentEventArgs e)
  IAsyncResult BeginInvoke(object sender, ComponentEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentRenameEventArgs
Наследуется от: EventArgs
Поля:
  object <Component>k__BackingField
  string <OldName>k__BackingField
  string <NewName>k__BackingField
Свойства:
  object Component
  string OldName
  string NewName
Методы:
  object get_Component()
  string get_OldName()
  string get_NewName()
  void .ctor(object component, string oldName, string newName)
--------------------------------------------------
Класс: System.ComponentModel.Design.ComponentRenameEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ComponentRenameEventArgs e)
  IAsyncResult BeginInvoke(object sender, ComponentRenameEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerTransaction
Наследуется от: object
Поля:
  bool _suppressedFinalization
  bool <Canceled>k__BackingField
  bool <Committed>k__BackingField
  string <Description>k__BackingField
Свойства:
  bool Canceled
  bool Committed
  string Description
Методы:
  void .ctor()
  void .ctor(string description)
  bool get_Canceled()
  void set_Canceled(bool value)
  bool get_Committed()
  void set_Committed(bool value)
  string get_Description()
  void Cancel()
  void Commit()
  void OnCancel()
  void OnCommit()
  void Finalize()
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerTransactionCloseEventArgs
Наследуется от: EventArgs
Поля:
  bool <TransactionCommitted>k__BackingField
  bool <LastTransaction>k__BackingField
Свойства:
  bool TransactionCommitted
  bool LastTransaction
Методы:
  void .ctor(bool commit)
  void .ctor(bool commit, bool lastTransaction)
  bool get_TransactionCommitted()
  bool get_LastTransaction()
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerTransactionCloseEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DesignerTransactionCloseEventArgs e)
  IAsyncResult BeginInvoke(object sender, DesignerTransactionCloseEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerVerb
Наследуется от: MenuCommand
Поля:
Свойства:
  string Description
  string Text
Методы:
  void .ctor(string text, EventHandler handler)
  void .ctor(string text, EventHandler handler, CommandID startCommandID)
  string get_Description()
  void set_Description(string value)
  string get_Text()
  string ToString()
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerVerbCollection
Наследуется от: CollectionBase
Поля:
Свойства:
  DesignerVerb Item
Методы:
  void .ctor()
  void .ctor(DesignerVerb[] value)
  DesignerVerb get_Item(int index)
  void set_Item(int index, DesignerVerb value)
  int Add(DesignerVerb value)
  void AddRange(DesignerVerb[] value)
  void AddRange(DesignerVerbCollection value)
  void Insert(int index, DesignerVerb value)
  int IndexOf(DesignerVerb value)
  bool Contains(DesignerVerb value)
  void Remove(DesignerVerb value)
  void CopyTo(DesignerVerb[] array, int index)
  void OnSet(int index, object oldValue, object newValue)
  void OnInsert(int index, object value)
  void OnClear()
  void OnRemove(int index, object value)
  void OnValidate(object value)
--------------------------------------------------
Класс: System.ComponentModel.Design.DesigntimeLicenseContext
Наследуется от: LicenseContext
Поля:
  Hashtable savedLicenseKeys
Свойства:
  LicenseUsageMode UsageMode
Методы:
  LicenseUsageMode get_UsageMode()
  string GetSavedLicenseKey(Type type, Assembly resourceAssembly)
  void SetSavedLicenseKey(Type type, string key)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.RuntimeLicenseContext
Наследуется от: LicenseContext
Поля:
  TraceSwitch s_runtimeLicenseContextSwitch
  int ReadBlock
  Hashtable savedLicenseKeys
Свойства:
Методы:
  string GetLocalPath(string fileName)
  string GetSavedLicenseKey(Type type, Assembly resourceAssembly)
  Stream CaseInsensitiveManifestResourceStreamLookup(Assembly satellite, string name)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.DesigntimeLicenseContextSerializer
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  void Serialize(Stream o, string cryptoKey, DesigntimeLicenseContext context)
  void Deserialize(Stream o, string cryptoKey, RuntimeLicenseContext context)
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerCollection
Наследуется от: object
Поля:
  IList _designers
Свойства:
  int Count
  IDesignerHost Item
  int System.Collections.ICollection.Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor(IDesignerHost[] designers)
  void .ctor(IList designers)
  int get_Count()
  IDesignerHost get_Item(int index)
  IEnumerator GetEnumerator()
  int System.Collections.ICollection.get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerEventArgs
Наследуется от: EventArgs
Поля:
  IDesignerHost <Designer>k__BackingField
Свойства:
  IDesignerHost Designer
Методы:
  void .ctor(IDesignerHost host)
  IDesignerHost get_Designer()
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, DesignerEventArgs e)
  IAsyncResult BeginInvoke(object sender, DesignerEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.HelpContextType
Наследуется от: Enum
Поля:
  int value__
  HelpContextType Ambient
  HelpContextType Window
  HelpContextType Selection
  HelpContextType ToolWindowSelection
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Design.HelpKeywordAttribute
Наследуется от: Attribute
Поля:
  HelpKeywordAttribute Default
  string <HelpKeyword>k__BackingField
Свойства:
  string HelpKeyword
Методы:
  void .ctor()
  void .ctor(string keyword)
  void .ctor(Type t)
  string get_HelpKeyword()
  bool Equals(object obj)
  int GetHashCode()
  bool IsDefaultAttribute()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.HelpKeywordType
Наследуется от: Enum
Поля:
  int value__
  HelpKeywordType F1Keyword
  HelpKeywordType GeneralKeyword
  HelpKeywordType FilterKeyword
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Design.IComponentChangeService
Поля:
Свойства:
Методы:
  void add_ComponentAdded(ComponentEventHandler value)
  void remove_ComponentAdded(ComponentEventHandler value)
  void add_ComponentAdding(ComponentEventHandler value)
  void remove_ComponentAdding(ComponentEventHandler value)
  void add_ComponentChanged(ComponentChangedEventHandler value)
  void remove_ComponentChanged(ComponentChangedEventHandler value)
  void add_ComponentChanging(ComponentChangingEventHandler value)
  void remove_ComponentChanging(ComponentChangingEventHandler value)
  void add_ComponentRemoved(ComponentEventHandler value)
  void remove_ComponentRemoved(ComponentEventHandler value)
  void add_ComponentRemoving(ComponentEventHandler value)
  void remove_ComponentRemoving(ComponentEventHandler value)
  void add_ComponentRename(ComponentRenameEventHandler value)
  void remove_ComponentRename(ComponentRenameEventHandler value)
  void OnComponentChanged(object component, MemberDescriptor member, object oldValue, object newValue)
  void OnComponentChanging(object component, MemberDescriptor member)
--------------------------------------------------
Класс: System.ComponentModel.Design.IComponentDiscoveryService
Поля:
Свойства:
Методы:
  ICollection GetComponentTypes(IDesignerHost designerHost, Type baseType)
--------------------------------------------------
Класс: System.ComponentModel.Design.IComponentInitializer
Поля:
Свойства:
Методы:
  void InitializeExistingComponent(IDictionary defaultValues)
  void InitializeNewComponent(IDictionary defaultValues)
--------------------------------------------------
Класс: System.ComponentModel.Design.IDesigner
Поля:
Свойства:
  IComponent Component
  DesignerVerbCollection Verbs
Методы:
  IComponent get_Component()
  DesignerVerbCollection get_Verbs()
  void DoDefaultAction()
  void Initialize(IComponent component)
--------------------------------------------------
Класс: System.ComponentModel.Design.IDesignerEventService
Поля:
Свойства:
  IDesignerHost ActiveDesigner
  DesignerCollection Designers
Методы:
  IDesignerHost get_ActiveDesigner()
  DesignerCollection get_Designers()
  void add_ActiveDesignerChanged(ActiveDesignerEventHandler value)
  void remove_ActiveDesignerChanged(ActiveDesignerEventHandler value)
  void add_DesignerCreated(DesignerEventHandler value)
  void remove_DesignerCreated(DesignerEventHandler value)
  void add_DesignerDisposed(DesignerEventHandler value)
  void remove_DesignerDisposed(DesignerEventHandler value)
  void add_SelectionChanged(EventHandler value)
  void remove_SelectionChanged(EventHandler value)
--------------------------------------------------
Класс: System.ComponentModel.Design.IDesignerFilter
Поля:
Свойства:
Методы:
  void PostFilterAttributes(IDictionary attributes)
  void PostFilterEvents(IDictionary events)
  void PostFilterProperties(IDictionary properties)
  void PreFilterAttributes(IDictionary attributes)
  void PreFilterEvents(IDictionary events)
  void PreFilterProperties(IDictionary properties)
--------------------------------------------------
Класс: System.ComponentModel.Design.IDesignerHost
Поля:
Свойства:
  bool Loading
  bool InTransaction
  IContainer Container
  IComponent RootComponent
  string RootComponentClassName
  string TransactionDescription
Методы:
  bool get_Loading()
  bool get_InTransaction()
  IContainer get_Container()
  IComponent get_RootComponent()
  string get_RootComponentClassName()
  string get_TransactionDescription()
  void add_Activated(EventHandler value)
  void remove_Activated(EventHandler value)
  void add_Deactivated(EventHandler value)
  void remove_Deactivated(EventHandler value)
  void add_LoadComplete(EventHandler value)
  void remove_LoadComplete(EventHandler value)
  void add_TransactionClosed(DesignerTransactionCloseEventHandler value)
  void remove_TransactionClosed(DesignerTransactionCloseEventHandler value)
  void add_TransactionClosing(DesignerTransactionCloseEventHandler value)
  void remove_TransactionClosing(DesignerTransactionCloseEventHandler value)
  void add_TransactionOpened(EventHandler value)
  void remove_TransactionOpened(EventHandler value)
  void add_TransactionOpening(EventHandler value)
  void remove_TransactionOpening(EventHandler value)
  void Activate()
  IComponent CreateComponent(Type componentClass)
  IComponent CreateComponent(Type componentClass, string name)
  DesignerTransaction CreateTransaction()
  DesignerTransaction CreateTransaction(string description)
  void DestroyComponent(IComponent component)
  IDesigner GetDesigner(IComponent component)
  Type GetType(string typeName)
--------------------------------------------------
Класс: System.ComponentModel.Design.IDesignerHostTransactionState
Поля:
Свойства:
  bool IsClosingTransaction
Методы:
  bool get_IsClosingTransaction()
--------------------------------------------------
Класс: System.ComponentModel.Design.IDesignerOptionService
Поля:
Свойства:
Методы:
  object GetOptionValue(string pageName, string valueName)
  void SetOptionValue(string pageName, string valueName, object value)
--------------------------------------------------
Класс: System.ComponentModel.Design.IDictionaryService
Поля:
Свойства:
Методы:
  object GetKey(object value)
  object GetValue(object key)
  void SetValue(object key, object value)
--------------------------------------------------
Класс: System.ComponentModel.Design.IEventBindingService
Поля:
Свойства:
Методы:
  string CreateUniqueMethodName(IComponent component, EventDescriptor e)
  ICollection GetCompatibleMethods(EventDescriptor e)
  EventDescriptor GetEvent(PropertyDescriptor property)
  PropertyDescriptorCollection GetEventProperties(EventDescriptorCollection events)
  PropertyDescriptor GetEventProperty(EventDescriptor e)
  bool ShowCode()
  bool ShowCode(int lineNumber)
  bool ShowCode(IComponent component, EventDescriptor e)
--------------------------------------------------
Класс: System.ComponentModel.Design.IExtenderListService
Поля:
Свойства:
Методы:
  IExtenderProvider[] GetExtenderProviders()
--------------------------------------------------
Класс: System.ComponentModel.Design.IExtenderProviderService
Поля:
Свойства:
Методы:
  void AddExtenderProvider(IExtenderProvider provider)
  void RemoveExtenderProvider(IExtenderProvider provider)
--------------------------------------------------
Класс: System.ComponentModel.Design.IHelpService
Поля:
Свойства:
Методы:
  void AddContextAttribute(string name, string value, HelpKeywordType keywordType)
  void ClearContextAttributes()
  IHelpService CreateLocalContext(HelpContextType contextType)
  void RemoveContextAttribute(string name, string value)
  void RemoveLocalContext(IHelpService localContext)
  void ShowHelpFromKeyword(string helpKeyword)
  void ShowHelpFromUrl(string helpUrl)
--------------------------------------------------
Класс: System.ComponentModel.Design.IInheritanceService
Поля:
Свойства:
Методы:
  void AddInheritedComponents(IComponent component, IContainer container)
  InheritanceAttribute GetInheritanceAttribute(IComponent component)
--------------------------------------------------
Класс: System.ComponentModel.Design.IMenuCommandService
Поля:
Свойства:
  DesignerVerbCollection Verbs
Методы:
  DesignerVerbCollection get_Verbs()
  void AddCommand(MenuCommand command)
  void AddVerb(DesignerVerb verb)
  MenuCommand FindCommand(CommandID commandID)
  bool GlobalInvoke(CommandID commandID)
  void RemoveCommand(MenuCommand command)
  void RemoveVerb(DesignerVerb verb)
  void ShowContextMenu(CommandID menuID, int x, int y)
--------------------------------------------------
Класс: System.ComponentModel.Design.IReferenceService
Поля:
Свойства:
Методы:
  IComponent GetComponent(object reference)
  object GetReference(string name)
  string GetName(object reference)
  Object[] GetReferences()
  Object[] GetReferences(Type baseType)
--------------------------------------------------
Класс: System.ComponentModel.Design.IResourceService
Поля:
Свойства:
Методы:
  IResourceReader GetResourceReader(CultureInfo info)
  IResourceWriter GetResourceWriter(CultureInfo info)
--------------------------------------------------
Класс: System.ComponentModel.Design.IRootDesigner
Поля:
Свойства:
  ViewTechnology[] SupportedTechnologies
Методы:
  ViewTechnology[] get_SupportedTechnologies()
  object GetView(ViewTechnology technology)
--------------------------------------------------
Класс: System.ComponentModel.Design.ISelectionService
Поля:
Свойства:
  object PrimarySelection
  int SelectionCount
Методы:
  object get_PrimarySelection()
  int get_SelectionCount()
  void add_SelectionChanged(EventHandler value)
  void remove_SelectionChanged(EventHandler value)
  void add_SelectionChanging(EventHandler value)
  void remove_SelectionChanging(EventHandler value)
  bool GetComponentSelected(object component)
  ICollection GetSelectedComponents()
  void SetSelectedComponents(ICollection components)
  void SetSelectedComponents(ICollection components, SelectionTypes selectionType)
--------------------------------------------------
Класс: System.ComponentModel.Design.IServiceContainer
Поля:
Свойства:
Методы:
  void AddService(Type serviceType, object serviceInstance)
  void AddService(Type serviceType, object serviceInstance, bool promote)
  void AddService(Type serviceType, ServiceCreatorCallback callback)
  void AddService(Type serviceType, ServiceCreatorCallback callback, bool promote)
  void RemoveService(Type serviceType)
  void RemoveService(Type serviceType, bool promote)
--------------------------------------------------
Класс: System.ComponentModel.Design.ITreeDesigner
Поля:
Свойства:
  ICollection Children
  IDesigner Parent
Методы:
  ICollection get_Children()
  IDesigner get_Parent()
--------------------------------------------------
Класс: System.ComponentModel.Design.ITypeDescriptorFilterService
Поля:
Свойства:
Методы:
  bool FilterAttributes(IComponent component, IDictionary attributes)
  bool FilterEvents(IComponent component, IDictionary events)
  bool FilterProperties(IComponent component, IDictionary properties)
--------------------------------------------------
Класс: System.ComponentModel.Design.ITypeDiscoveryService
Поля:
Свойства:
Методы:
  ICollection GetTypes(Type baseType, bool excludeGlobalTypes)
--------------------------------------------------
Класс: System.ComponentModel.Design.ITypeResolutionService
Поля:
Свойства:
Методы:
  Assembly GetAssembly(AssemblyName name)
  Assembly GetAssembly(AssemblyName name, bool throwOnError)
  Type GetType(string name)
  Type GetType(string name, bool throwOnError)
  Type GetType(string name, bool throwOnError, bool ignoreCase)
  void ReferenceAssembly(AssemblyName name)
  string GetPathOfAssembly(AssemblyName name)
--------------------------------------------------
Класс: System.ComponentModel.Design.MenuCommand
Наследуется от: object
Поля:
  EventHandler _execHandler
  int _status
  IDictionary _properties
  int ENABLED
  int INVISIBLE
  int CHECKED
  int SUPPORTED
  EventHandler CommandChanged
  CommandID <CommandID>k__BackingField
Свойства:
  bool Checked
  bool Enabled
  IDictionary Properties
  bool Supported
  bool Visible
  CommandID CommandID
  int OleStatus
Методы:
  void .ctor(EventHandler handler, CommandID command)
  bool get_Checked()
  void set_Checked(bool value)
  bool get_Enabled()
  void set_Enabled(bool value)
  void SetStatus(int mask, bool value)
  IDictionary get_Properties()
  bool get_Supported()
  void set_Supported(bool value)
  bool get_Visible()
  void set_Visible(bool value)
  void add_CommandChanged(EventHandler value)
  void remove_CommandChanged(EventHandler value)
  CommandID get_CommandID()
  void Invoke()
  void Invoke(object arg)
  int get_OleStatus()
  void OnCommandChanged(EventArgs e)
  string ToString()
--------------------------------------------------
Класс: System.ComponentModel.Design.SelectionTypes
Наследуется от: Enum
Поля:
  int value__
  SelectionTypes Auto
  SelectionTypes Normal
  SelectionTypes Replace
  SelectionTypes MouseDown
  SelectionTypes MouseUp
  SelectionTypes Click
  SelectionTypes Primary
  SelectionTypes Toggle
  SelectionTypes Add
  SelectionTypes Remove
  SelectionTypes Valid
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Design.ServiceCreatorCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  object Invoke(IServiceContainer container, Type serviceType)
  IAsyncResult BeginInvoke(IServiceContainer container, Type serviceType, AsyncCallback callback, object object)
  object EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.ServiceContainer
Наследуется от: object
Поля:
  ServiceCollection`1<object> _services
  IServiceProvider _parentProvider
  Type[] s_defaultServices
  TraceSwitch s_TRACESERVICE
Свойства:
  IServiceContainer Container
  Type[] DefaultServices
  ServiceCollection`1<object> Services
Методы:
  void .ctor()
  void .ctor(IServiceProvider parentProvider)
  IServiceContainer get_Container()
  Type[] get_DefaultServices()
  ServiceCollection`1<object> get_Services()
  void AddService(Type serviceType, object serviceInstance)
  void AddService(Type serviceType, object serviceInstance, bool promote)
  void AddService(Type serviceType, ServiceCreatorCallback callback)
  void AddService(Type serviceType, ServiceCreatorCallback callback, bool promote)
  void Dispose()
  void Dispose(bool disposing)
  object GetService(Type serviceType)
  void RemoveService(Type serviceType)
  void RemoveService(Type serviceType, bool promote)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.StandardCommands
Наследуется от: object
Поля:
  Guid s_standardCommandSet
  Guid s_ndpCommandSet
  int cmdidDesignerVerbFirst
  int cmdidDesignerVerbLast
  int cmdidArrangeIcons
  int cmdidLineupIcons
  int cmdidShowLargeIcons
  CommandID AlignBottom
  CommandID AlignHorizontalCenters
  CommandID AlignLeft
  CommandID AlignRight
  CommandID AlignToGrid
  CommandID AlignTop
  CommandID AlignVerticalCenters
  CommandID ArrangeBottom
  CommandID ArrangeRight
  CommandID BringForward
  CommandID BringToFront
  CommandID CenterHorizontally
  CommandID CenterVertically
  CommandID ViewCode
  CommandID DocumentOutline
  CommandID Copy
  CommandID Cut
  CommandID Delete
  CommandID Group
  CommandID HorizSpaceConcatenate
  CommandID HorizSpaceDecrease
  CommandID HorizSpaceIncrease
  CommandID HorizSpaceMakeEqual
  CommandID Paste
  CommandID Properties
  CommandID Redo
  CommandID MultiLevelRedo
  CommandID SelectAll
  CommandID SendBackward
  CommandID SendToBack
  CommandID SizeToControl
  CommandID SizeToControlHeight
  CommandID SizeToControlWidth
  CommandID SizeToFit
  CommandID SizeToGrid
  CommandID SnapToGrid
  CommandID TabOrder
  CommandID Undo
  CommandID MultiLevelUndo
  CommandID Ungroup
  CommandID VertSpaceConcatenate
  CommandID VertSpaceDecrease
  CommandID VertSpaceIncrease
  CommandID VertSpaceMakeEqual
  CommandID ShowGrid
  CommandID ViewGrid
  CommandID Replace
  CommandID PropertiesWindow
  CommandID LockControls
  CommandID F1Help
  CommandID ArrangeIcons
  CommandID LineupIcons
  CommandID ShowLargeIcons
  CommandID VerbFirst
  CommandID VerbLast
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.StandardToolWindows
Наследуется от: object
Поля:
  Guid ObjectBrowser
  Guid OutputWindow
  Guid ProjectExplorer
  Guid PropertyBrowser
  Guid RelatedLinks
  Guid ServerExplorer
  Guid TaskList
  Guid Toolbox
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.ViewTechnology
Наследуется от: Enum
Поля:
  int value__
  ViewTechnology Passthrough
  ViewTechnology WindowsForms
  ViewTechnology Default
Свойства:
Методы:
--------------------------------------------------
Класс: System.ComponentModel.Design.TypeDescriptionProviderService
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeDescriptionProvider GetProvider(object instance)
  TypeDescriptionProvider GetProvider(Type type)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.DesignerOptionService
Наследуется от: object
Поля:
  DesignerOptionCollection _options
Свойства:
  DesignerOptionCollection Options
Методы:
  DesignerOptionCollection get_Options()
  DesignerOptionCollection CreateOptionCollection(DesignerOptionCollection parent, string name, object value)
  PropertyDescriptor GetOptionProperty(string pageName, string valueName)
  void PopulateOptionCollection(DesignerOptionCollection options)
  bool ShowDialog(DesignerOptionCollection options, object optionObject)
  object System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(string pageName, string valueName)
  void System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(string pageName, string valueName, object value)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.ComponentSerializationService
Наследуется от: object
Поля:
Свойства:
Методы:
  SerializationStore CreateStore()
  SerializationStore LoadStore(Stream stream)
  void Serialize(SerializationStore store, object value)
  void SerializeAbsolute(SerializationStore store, object value)
  void SerializeMember(SerializationStore store, object owningObject, MemberDescriptor member)
  void SerializeMemberAbsolute(SerializationStore store, object owningObject, MemberDescriptor member)
  ICollection Deserialize(SerializationStore store)
  ICollection Deserialize(SerializationStore store, IContainer container)
  void DeserializeTo(SerializationStore store, IContainer container, bool validateRecycledTypes, bool applyDefaults)
  void DeserializeTo(SerializationStore store, IContainer container)
  void DeserializeTo(SerializationStore store, IContainer container, bool validateRecycledTypes)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.ContextStack
Наследуется от: object
Поля:
  ArrayList _contextStack
Свойства:
  object Current
  object Item
  object Item
Методы:
  object get_Current()
  object get_Item(int level)
  object get_Item(Type type)
  void Append(object context)
  object Pop()
  void Push(object context)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute
Наследуется от: Attribute
Поля:
  string <ProviderTypeName>k__BackingField
Свойства:
  string ProviderTypeName
Методы:
  void .ctor(Type providerType)
  void .ctor(string providerTypeName)
  string get_ProviderTypeName()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.DesignerLoader
Наследуется от: object
Поля:
Свойства:
  bool Loading
Методы:
  bool get_Loading()
  void BeginLoad(IDesignerLoaderHost host)
  void Dispose()
  void Flush()
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
Наследуется от: Attribute
Поля:
  string _typeId
  string <SerializerTypeName>k__BackingField
  string <SerializerBaseTypeName>k__BackingField
Свойства:
  string SerializerTypeName
  string SerializerBaseTypeName
  object TypeId
Методы:
  void .ctor(Type serializerType, Type baseSerializerType)
  void .ctor(string serializerTypeName, Type baseSerializerType)
  void .ctor(string serializerTypeName, string baseSerializerTypeName)
  string get_SerializerTypeName()
  string get_SerializerBaseTypeName()
  object get_TypeId()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
Поля:
Свойства:
Методы:
  void EndLoad(string baseClassName, bool successful, ICollection errorCollection)
  void Reload()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.IDesignerLoaderHost2
Поля:
Свойства:
  bool IgnoreErrorsDuringReload
  bool CanReloadWithErrors
Методы:
  bool get_IgnoreErrorsDuringReload()
  void set_IgnoreErrorsDuringReload(bool value)
  bool get_CanReloadWithErrors()
  void set_CanReloadWithErrors(bool value)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.IDesignerLoaderService
Поля:
Свойства:
Методы:
  void AddLoadDependency()
  void DependentLoadComplete(bool successful, ICollection errorCollection)
  bool Reload()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
Поля:
Свойства:
  ContextStack Context
  PropertyDescriptorCollection Properties
Методы:
  ContextStack get_Context()
  PropertyDescriptorCollection get_Properties()
  void add_ResolveName(ResolveNameEventHandler value)
  void remove_ResolveName(ResolveNameEventHandler value)
  void add_SerializationComplete(EventHandler value)
  void remove_SerializationComplete(EventHandler value)
  void AddSerializationProvider(IDesignerSerializationProvider provider)
  object CreateInstance(Type type, ICollection arguments, string name, bool addToContainer)
  object GetInstance(string name)
  string GetName(object value)
  object GetSerializer(Type objectType, Type serializerType)
  Type GetType(string typeName)
  void RemoveSerializationProvider(IDesignerSerializationProvider provider)
  void ReportError(object errorInformation)
  void SetName(object instance, string name)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
Поля:
Свойства:
Методы:
  object GetSerializer(IDesignerSerializationManager manager, object currentSerializer, Type objectType, Type serializerType)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.IDesignerSerializationService
Поля:
Свойства:
Методы:
  ICollection Deserialize(object serializationData)
  object Serialize(ICollection objects)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.INameCreationService
Поля:
Свойства:
Методы:
  string CreateName(IContainer container, Type dataType)
  bool IsValidName(string name)
  void ValidateName(string name)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.InstanceDescriptor
Наследуется от: object
Поля:
  ICollection <Arguments>k__BackingField
  bool <IsComplete>k__BackingField
  MemberInfo <MemberInfo>k__BackingField
Свойства:
  ICollection Arguments
  bool IsComplete
  MemberInfo MemberInfo
Методы:
  void .ctor(MemberInfo member, ICollection arguments)
  void .ctor(MemberInfo member, ICollection arguments, bool isComplete)
  ICollection get_Arguments()
  bool get_IsComplete()
  MemberInfo get_MemberInfo()
  object Invoke()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.MemberRelationshipService
Наследуется от: object
Поля:
  Dictionary`2<RelationshipEntry, RelationshipEntry> _relationships
Свойства:
  MemberRelationship Item
  MemberRelationship Item
Методы:
  MemberRelationship get_Item(MemberRelationship source)
  void set_Item(MemberRelationship source, MemberRelationship value)
  MemberRelationship get_Item(object sourceOwner, MemberDescriptor sourceMember)
  void set_Item(object sourceOwner, MemberDescriptor sourceMember, MemberRelationship value)
  MemberRelationship GetRelationship(MemberRelationship source)
  void SetRelationship(MemberRelationship source, MemberRelationship relationship)
  bool SupportsRelationship(MemberRelationship source, MemberRelationship relationship)
  void .ctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.MemberRelationship
Наследуется от: ValueType
Поля:
  MemberRelationship Empty
  MemberDescriptor <Member>k__BackingField
  object <Owner>k__BackingField
Свойства:
  bool IsEmpty
  MemberDescriptor Member
  object Owner
Методы:
  void .ctor(object owner, MemberDescriptor member)
  bool get_IsEmpty()
  MemberDescriptor get_Member()
  object get_Owner()
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(MemberRelationship left, MemberRelationship right)
  bool op_Inequality(MemberRelationship left, MemberRelationship right)
  void .cctor()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
Наследуется от: EventArgs
Поля:
  string <Name>k__BackingField
  object <Value>k__BackingField
Свойства:
  string Name
  object Value
Методы:
  void .ctor(string name)
  string get_Name()
  object get_Value()
  void set_Value(object value)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.ResolveNameEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ResolveNameEventArgs e)
  IAsyncResult BeginInvoke(object sender, ResolveNameEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute
Наследуется от: Attribute
Поля:
  string _typeId
  bool <Reloadable>k__BackingField
  string <SerializerTypeName>k__BackingField
  string <SerializerBaseTypeName>k__BackingField
Свойства:
  bool Reloadable
  string SerializerTypeName
  string SerializerBaseTypeName
  object TypeId
Методы:
  void .ctor(Type serializerType, Type baseSerializerType, bool reloadable)
  void .ctor(string serializerTypeName, Type baseSerializerType, bool reloadable)
  void .ctor(string serializerTypeName, string baseSerializerTypeName, bool reloadable)
  bool get_Reloadable()
  string get_SerializerTypeName()
  string get_SerializerBaseTypeName()
  object get_TypeId()
--------------------------------------------------
Класс: System.ComponentModel.Design.Serialization.SerializationStore
Наследуется от: object
Поля:
Свойства:
  ICollection Errors
Методы:
  ICollection get_Errors()
  void Close()
  void Save(Stream stream)
  void System.IDisposable.Dispose()
  void Dispose(bool disposing)
  void .ctor()
--------------------------------------------------
Класс: System.Collections.HashtableExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool TryGetValue(Hashtable table, object key, T& value)
--------------------------------------------------
Класс: System.Collections.ObjectModel.ObservableCollection`1
Наследуется от: Collection`1<T>
Поля:
  SimpleMonitor<T> _monitor
  int _blockReentrancyCount
  NotifyCollectionChangedEventHandler CollectionChanged
  PropertyChangedEventHandler PropertyChanged
Свойства:
Методы:
  void .ctor()
  void .ctor(IEnumerable`1<T> collection)
  void .ctor(List`1<T> list)
  List`1<T> CreateCopy(IEnumerable`1<T> collection, string paramName)
  void Move(int oldIndex, int newIndex)
  void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)
  void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)
  void add_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void remove_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void ClearItems()
  void RemoveItem(int index)
  void InsertItem(int index, T item)
  void SetItem(int index, T item)
  void MoveItem(int oldIndex, int newIndex)
  void OnPropertyChanged(PropertyChangedEventArgs e)
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
  void OnCollectionChanged(NotifyCollectionChangedEventArgs e)
  IDisposable BlockReentrancy()
  void CheckReentrancy()
  void OnCountPropertyChanged()
  void OnIndexerPropertyChanged()
  void OnCollectionChanged(NotifyCollectionChangedAction action, object item, int index)
  void OnCollectionChanged(NotifyCollectionChangedAction action, object item, int index, int oldIndex)
  void OnCollectionChanged(NotifyCollectionChangedAction action, object oldItem, object newItem, int index)
  void OnCollectionReset()
  SimpleMonitor<T> EnsureMonitorInitialized()
  void OnSerializing(StreamingContext context)
  void OnDeserialized(StreamingContext context)
--------------------------------------------------
Класс: System.Collections.ObjectModel.EventArgsCache
Наследуется от: object
Поля:
  PropertyChangedEventArgs CountPropertyChanged
  PropertyChangedEventArgs IndexerPropertyChanged
  NotifyCollectionChangedEventArgs ResetCollectionChanged
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
Наследуется от: ReadOnlyCollection`1<T>
Поля:
  NotifyCollectionChangedEventHandler CollectionChanged
  PropertyChangedEventHandler PropertyChanged
Свойства:
Методы:
  void .ctor(ObservableCollection`1<T> list)
  void System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void add_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void remove_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void OnCollectionChanged(NotifyCollectionChangedEventArgs args)
  void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler value)
  void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler value)
  void add_PropertyChanged(PropertyChangedEventHandler value)
  void remove_PropertyChanged(PropertyChangedEventHandler value)
  void OnPropertyChanged(PropertyChangedEventArgs args)
  void HandleCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)
  void HandlePropertyChanged(object sender, PropertyChangedEventArgs e)
--------------------------------------------------
Класс: System.Collections.Concurrent.BlockingCollection`1
Наследуется от: object
Поля:
  IProducerConsumerCollection`1<T> _collection
  int _boundedCapacity
  int NON_BOUNDED
  SemaphoreSlim _freeNodes
  SemaphoreSlim _occupiedNodes
  bool _isDisposed
  CancellationTokenSource _consumersCancellationTokenSource
  CancellationTokenSource _producersCancellationTokenSource
  Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _currentAdders
  int COMPLETE_ADDING_ON_MASK
Свойства:
  int BoundedCapacity
  bool IsAddingCompleted
  bool IsCompleted
  int Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  bool IsSTAThread
Методы:
  int get_BoundedCapacity()
  bool get_IsAddingCompleted()
  bool get_IsCompleted()
  int get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void .ctor()
  void .ctor(int boundedCapacity)
  void .ctor(IProducerConsumerCollection`1<T> collection, int boundedCapacity)
  void .ctor(IProducerConsumerCollection`1<T> collection)
  void Initialize(IProducerConsumerCollection`1<T> collection, int boundedCapacity, int collectionCount)
  void Add(T item)
  void Add(T item, CancellationToken cancellationToken)
  bool TryAdd(T item)
  bool TryAdd(T item, TimeSpan timeout)
  bool TryAdd(T item, int millisecondsTimeout)
  bool TryAdd(T item, int millisecondsTimeout, CancellationToken cancellationToken)
  bool TryAddWithNoTimeValidation(T item, int millisecondsTimeout, CancellationToken cancellationToken)
  T Take()
  T Take(CancellationToken cancellationToken)
  bool TryTake(T& item)
  bool TryTake(T& item, TimeSpan timeout)
  bool TryTake(T& item, int millisecondsTimeout)
  bool TryTake(T& item, int millisecondsTimeout, CancellationToken cancellationToken)
  bool TryTakeWithNoTimeValidation(T& item, int millisecondsTimeout, CancellationToken cancellationToken, CancellationTokenSource combinedTokenSource)
  int AddToAny(BlockingCollection`1[] collections, T item)
  int AddToAny(BlockingCollection`1[] collections, T item, CancellationToken cancellationToken)
  int TryAddToAny(BlockingCollection`1[] collections, T item)
  int TryAddToAny(BlockingCollection`1[] collections, T item, TimeSpan timeout)
  int TryAddToAny(BlockingCollection`1[] collections, T item, int millisecondsTimeout)
  int TryAddToAny(BlockingCollection`1[] collections, T item, int millisecondsTimeout, CancellationToken cancellationToken)
  int TryAddToAnyCore(BlockingCollection`1[] collections, T item, int millisecondsTimeout, CancellationToken externalCancellationToken)
  int TryAddToAnyFast(BlockingCollection`1[] collections, T item)
  List`1<WaitHandle> GetHandles(BlockingCollection`1[] collections, CancellationToken externalCancellationToken, bool isAddOperation, CancellationToken[]& cancellationTokens)
  int UpdateTimeOut(UInt32 startTime, int originalWaitMillisecondsTimeout)
  int TakeFromAny(BlockingCollection`1[] collections, T& item)
  int TakeFromAny(BlockingCollection`1[] collections, T& item, CancellationToken cancellationToken)
  int TryTakeFromAny(BlockingCollection`1[] collections, T& item)
  int TryTakeFromAny(BlockingCollection`1[] collections, T& item, TimeSpan timeout)
  int TryTakeFromAny(BlockingCollection`1[] collections, T& item, int millisecondsTimeout)
  int TryTakeFromAny(BlockingCollection`1[] collections, T& item, int millisecondsTimeout, CancellationToken cancellationToken)
  int TryTakeFromAnyCore(BlockingCollection`1[] collections, T& item, int millisecondsTimeout, bool isTakeOperation, CancellationToken externalCancellationToken)
  int TryTakeFromAnyCoreSlow(BlockingCollection`1[] collections, T& item, int millisecondsTimeout, bool isTakeOperation, CancellationToken externalCancellationToken)
  void CompleteAdding()
  void CancelWaitingConsumers()
  void CancelWaitingProducers()
  void Dispose()
  void Dispose(bool disposing)
  T[] ToArray()
  void CopyTo(T[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerable`1<T> GetConsumingEnumerable()
  IEnumerable`1<T> GetConsumingEnumerable(CancellationToken cancellationToken)
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void ValidateCollectionsArray(BlockingCollection`1[] collections, bool isAddOperation)
  bool get_IsSTAThread()
  void ValidateTimeout(TimeSpan timeout)
  void ValidateMillisecondsTimeout(int millisecondsTimeout)
  void CheckDisposed()
--------------------------------------------------
Класс: System.Collections.Concurrent.BlockingCollectionDebugView`1
Наследуется от: object
Поля:
  BlockingCollection`1<T> _blockingCollection
Свойства:
  T[] Items
Методы:
  void .ctor(BlockingCollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Concurrent.CDSCollectionETWBCLProvider
Наследуется от: EventSource
Поля:
  CDSCollectionETWBCLProvider Log
  EventKeywords ALL_KEYWORDS
  int CONCURRENTSTACK_FASTPUSHFAILED_ID
  int CONCURRENTSTACK_FASTPOPFAILED_ID
  int CONCURRENTDICTIONARY_ACQUIRINGALLLOCKS_ID
  int CONCURRENTBAG_TRYTAKESTEALS_ID
  int CONCURRENTBAG_TRYPEEKSTEALS_ID
Свойства:
Методы:
  void .ctor()
  void ConcurrentStack_FastPushFailed(int spinCount)
  void ConcurrentStack_FastPopFailed(int spinCount)
  void ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets)
  void ConcurrentBag_TryTakeSteals()
  void ConcurrentBag_TryPeekSteals()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Concurrent.ConcurrentBag`1
Наследуется от: object
Поля:
  ThreadLocal`1<WorkStealingQueue<T>> _locals
  WorkStealingQueue modreq(System.Runtime.CompilerServices.IsVolatile) _workStealingQueues
  long _emptyToNonEmptyListTransitionCount
Свойства:
  int Count
  int DangerousCount
  bool IsEmpty
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  object GlobalQueuesLock
Методы:
  void .ctor()
  void .ctor(IEnumerable`1<T> collection)
  void Add(T item)
  bool System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T item)
  bool TryTake(T& result)
  bool TryPeek(T& result)
  WorkStealingQueue<T> GetCurrentThreadWorkStealingQueue(bool forceCreate)
  WorkStealingQueue<T> CreateWorkStealingQueueForCurrentThread()
  WorkStealingQueue<T> GetUnownedWorkStealingQueue()
  bool TrySteal(T& result, bool take)
  bool TryStealFromTo(WorkStealingQueue<T> startInclusive, WorkStealingQueue<T> endExclusive, T& result, bool take)
  void CopyTo(T[] array, int index)
  int CopyFromEachQueueToArray(T[] array, int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  T[] ToArray()
  void Clear()
  IEnumerator`1<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  int get_Count()
  int get_DangerousCount()
  bool get_IsEmpty()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  object get_GlobalQueuesLock()
  void FreezeBag(Boolean& lockTaken)
  void UnfreezeBag(bool lockTaken)
--------------------------------------------------
Класс: System.Collections.Specialized.FixedStringLookup
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Contains(String[][] lookupTable, string value, bool ignoreCase)
  bool Contains(String[] array, string value, bool ignoreCase)
  bool FindCharacter(String[] array, char value, int pos, Int32& min, Int32& max)
--------------------------------------------------
Класс: System.Collections.Specialized.CollectionsUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  Hashtable CreateCaseInsensitiveHashtable()
  Hashtable CreateCaseInsensitiveHashtable(int capacity)
  Hashtable CreateCaseInsensitiveHashtable(IDictionary d)
  SortedList CreateCaseInsensitiveSortedList()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Specialized.BitVector32
Наследуется от: ValueType
Поля:
  UInt32 _data
Свойства:
  bool Item
  int Item
  int Data
Методы:
  void .ctor(int data)
  void .ctor(BitVector32 value)
  bool get_Item(int bit)
  void set_Item(int bit, bool value)
  int get_Item(Section section)
  void set_Item(Section section, int value)
  int get_Data()
  short CountBitsSet(short mask)
  int CreateMask()
  int CreateMask(int previous)
  short CreateMaskFromHighValue(short highValue)
  Section CreateSection(short maxValue)
  Section CreateSection(short maxValue, Section previous)
  Section CreateSectionHelper(short maxValue, short priorMask, short priorOffset)
  bool Equals(object o)
  int GetHashCode()
  string ToString(BitVector32 value)
  string ToString()
--------------------------------------------------
Класс: System.Collections.Specialized.HybridDictionary
Наследуется от: object
Поля:
  int CutoverPoint
  int InitialHashtableSize
  int FixedSizeCutoverPoint
  ListDictionary list
  Hashtable hashtable
  bool caseInsensitive
Свойства:
  object Item
  ListDictionary List
  int Count
  ICollection Keys
  bool IsReadOnly
  bool IsFixedSize
  bool IsSynchronized
  object SyncRoot
  ICollection Values
Методы:
  void .ctor()
  void .ctor(int initialSize)
  void .ctor(bool caseInsensitive)
  void .ctor(int initialSize, bool caseInsensitive)
  object get_Item(object key)
  void set_Item(object key, object value)
  ListDictionary get_List()
  void ChangeOver()
  int get_Count()
  ICollection get_Keys()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool get_IsSynchronized()
  object get_SyncRoot()
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  bool Contains(object key)
  void CopyTo(Array array, int index)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Remove(object key)
--------------------------------------------------
Класс: System.Collections.Specialized.IOrderedDictionary
Поля:
Свойства:
  object Item
Методы:
  object get_Item(int index)
  void set_Item(int index, object value)
  IDictionaryEnumerator GetEnumerator()
  void Insert(int index, object key, object value)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Collections.Specialized.ListDictionary
Наследуется от: object
Поля:
  DictionaryNode head
  int version
  int count
  IComparer comparer
  object _syncRoot
Свойства:
  object Item
  int Count
  ICollection Keys
  bool IsReadOnly
  bool IsFixedSize
  bool IsSynchronized
  object SyncRoot
  ICollection Values
Методы:
  void .ctor()
  void .ctor(IComparer comparer)
  object get_Item(object key)
  void set_Item(object key, object value)
  int get_Count()
  ICollection get_Keys()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool get_IsSynchronized()
  object get_SyncRoot()
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  bool Contains(object key)
  void CopyTo(Array array, int index)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Remove(object key)
--------------------------------------------------
Класс: System.Collections.Specialized.NameValueCollection
Наследуется от: NameObjectCollectionBase
Поля:
  String[] _all
  String[] _allKeys
Свойства:
  string Item
  string Item
  String[] AllKeys
Методы:
  void .ctor()
  void .ctor(NameValueCollection col)
  void .ctor(IHashCodeProvider hashProvider, IComparer comparer)
  void .ctor(int capacity)
  void .ctor(IEqualityComparer equalityComparer)
  void .ctor(int capacity, IEqualityComparer equalityComparer)
  void .ctor(int capacity, NameValueCollection col)
  void .ctor(int capacity, IHashCodeProvider hashProvider, IComparer comparer)
  void .ctor(SerializationInfo info, StreamingContext context)
  void InvalidateCachedArrays()
  string GetAsOneString(ArrayList list)
  String[] GetAsStringArray(ArrayList list)
  void Add(NameValueCollection c)
  void Clear()
  void CopyTo(Array dest, int index)
  bool HasKeys()
  bool InternalHasKeys()
  void Add(string name, string value)
  string Get(string name)
  String[] GetValues(string name)
  void Set(string name, string value)
  void Remove(string name)
  string get_Item(string name)
  void set_Item(string name, string value)
  string Get(int index)
  String[] GetValues(int index)
  string GetKey(int index)
  string get_Item(int index)
  String[] get_AllKeys()
  void .ctor(DBNull dummy)
--------------------------------------------------
Класс: System.Collections.Specialized.OrderedDictionary
Наследуется от: object
Поля:
  ArrayList _objectsArray
  Hashtable _objectsTable
  int _initialCapacity
  IEqualityComparer _comparer
  bool _readOnly
  object _syncRoot
  SerializationInfo _siInfo
  string KeyComparerName
  string ArrayListName
  string ReadOnlyName
  string InitCapacityName
Свойства:
  int Count
  bool System.Collections.IDictionary.IsFixedSize
  bool IsReadOnly
  bool System.Collections.ICollection.IsSynchronized
  ICollection Keys
  ArrayList objectsArray
  Hashtable objectsTable
  object System.Collections.ICollection.SyncRoot
  object Item
  object Item
  ICollection Values
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IEqualityComparer comparer)
  void .ctor(int capacity, IEqualityComparer comparer)
  void .ctor(OrderedDictionary dictionary)
  void .ctor(SerializationInfo info, StreamingContext context)
  int get_Count()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool get_IsReadOnly()
  bool System.Collections.ICollection.get_IsSynchronized()
  ICollection get_Keys()
  ArrayList get_objectsArray()
  Hashtable get_objectsTable()
  object System.Collections.ICollection.get_SyncRoot()
  object get_Item(int index)
  void set_Item(int index, object value)
  object get_Item(object key)
  void set_Item(object key, object value)
  ICollection get_Values()
  void Add(object key, object value)
  void Clear()
  OrderedDictionary AsReadOnly()
  bool Contains(object key)
  void CopyTo(Array array, int index)
  int IndexOfKey(object key)
  void Insert(int index, object key, object value)
  void RemoveAt(int index)
  void Remove(object key)
  IDictionaryEnumerator GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void OnDeserialization(object sender)
--------------------------------------------------
Класс: System.Collections.Specialized.StringCollection
Наследуется от: object
Поля:
  ArrayList data
Свойства:
  string Item
  int Count
  bool System.Collections.IList.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool IsReadOnly
  bool IsSynchronized
  object SyncRoot
  object System.Collections.IList.Item
Методы:
  string get_Item(int index)
  void set_Item(int index, string value)
  int get_Count()
  bool System.Collections.IList.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  int Add(string value)
  void AddRange(String[] value)
  void Clear()
  bool Contains(string value)
  void CopyTo(String[] array, int index)
  StringEnumerator GetEnumerator()
  int IndexOf(string value)
  void Insert(int index, string value)
  bool get_IsReadOnly()
  bool get_IsSynchronized()
  void Remove(string value)
  void RemoveAt(int index)
  object get_SyncRoot()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.IList.Add(object value)
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Specialized.StringEnumerator
Наследуется от: object
Поля:
  IEnumerator _baseEnumerator
  IEnumerable _temp
Свойства:
  string Current
Методы:
  void .ctor(StringCollection mappings)
  string get_Current()
  bool MoveNext()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: System.Collections.Specialized.StringDictionary
Наследуется от: object
Поля:
  Hashtable contents
Свойства:
  int Count
  bool IsSynchronized
  string Item
  ICollection Keys
  object SyncRoot
  ICollection Values
Методы:
  void .ctor()
  int get_Count()
  bool get_IsSynchronized()
  string get_Item(string key)
  void set_Item(string key, string value)
  ICollection get_Keys()
  object get_SyncRoot()
  ICollection get_Values()
  void Add(string key, string value)
  void Clear()
  bool ContainsKey(string key)
  bool ContainsValue(string value)
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  void Remove(string key)
  void ReplaceHashtable(Hashtable useThisHashtableInstead)
  IDictionary`2<string, string> AsGenericDictionary()
--------------------------------------------------
Класс: System.Collections.Specialized.INotifyCollectionChanged
Поля:
Свойства:
Методы:
  void add_CollectionChanged(NotifyCollectionChangedEventHandler value)
  void remove_CollectionChanged(NotifyCollectionChangedEventHandler value)
--------------------------------------------------
Класс: System.Collections.Specialized.NotifyCollectionChangedAction
Наследуется от: Enum
Поля:
  int value__
  NotifyCollectionChangedAction Add
  NotifyCollectionChangedAction Remove
  NotifyCollectionChangedAction Replace
  NotifyCollectionChangedAction Move
  NotifyCollectionChangedAction Reset
Свойства:
Методы:
--------------------------------------------------
Класс: System.Collections.Specialized.NotifyCollectionChangedEventArgs
Наследуется от: EventArgs
Поля:
  NotifyCollectionChangedAction _action
  IList _newItems
  IList _oldItems
  int _newStartingIndex
  int _oldStartingIndex
Свойства:
  NotifyCollectionChangedAction Action
  IList NewItems
  IList OldItems
  int NewStartingIndex
  int OldStartingIndex
Методы:
  void .ctor(NotifyCollectionChangedAction action)
  void .ctor(NotifyCollectionChangedAction action, object changedItem)
  void .ctor(NotifyCollectionChangedAction action, object changedItem, int index)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems, int startingIndex)
  void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem)
  void .ctor(NotifyCollectionChangedAction action, object newItem, object oldItem, int index)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex)
  void .ctor(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex)
  void .ctor(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex)
  void .ctor(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int newIndex, int oldIndex)
  void InitializeAddOrRemove(NotifyCollectionChangedAction action, IList changedItems, int startingIndex)
  void InitializeAdd(NotifyCollectionChangedAction action, IList newItems, int newStartingIndex)
  void InitializeRemove(NotifyCollectionChangedAction action, IList oldItems, int oldStartingIndex)
  void InitializeMoveOrReplace(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex, int oldStartingIndex)
  NotifyCollectionChangedAction get_Action()
  IList get_NewItems()
  IList get_OldItems()
  int get_NewStartingIndex()
  int get_OldStartingIndex()
--------------------------------------------------
Класс: System.Collections.Specialized.NotifyCollectionChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, NotifyCollectionChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, NotifyCollectionChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Collections.Specialized.ReadOnlyList
Наследуется от: object
Поля:
  IList _list
Свойства:
  int Count
  bool IsReadOnly
  bool IsFixedSize
  bool IsSynchronized
  object Item
  object SyncRoot
Методы:
  void .ctor(IList list)
  int get_Count()
  bool get_IsReadOnly()
  bool get_IsFixedSize()
  bool get_IsSynchronized()
  object get_Item(int index)
  void set_Item(int index, object value)
  object get_SyncRoot()
  int Add(object value)
  void Clear()
  bool Contains(object value)
  void CopyTo(Array array, int index)
  IEnumerator GetEnumerator()
  int IndexOf(object value)
  void Insert(int index, object value)
  void Remove(object value)
  void RemoveAt(int index)
--------------------------------------------------
Класс: System.Collections.Specialized.CaseSensitiveStringDictionary
Наследуется от: StringDictionary
Поля:
Свойства:
  string Item
Методы:
  void .ctor()
  string get_Item(string key)
  void set_Item(string key, string value)
  void Add(string key, string value)
  bool ContainsKey(string key)
  void Remove(string key)
--------------------------------------------------
Класс: System.Collections.Specialized.NameObjectCollectionBase
Наследуется от: object
Поля:
  string ReadOnlyName
  string CountName
  string ComparerName
  string HashCodeProviderName
  string KeysName
  string ValuesName
  string KeyComparerName
  string VersionName
  bool _readOnly
  ArrayList _entriesArray
  IEqualityComparer _keyComparer
  Hashtable modreq(System.Runtime.CompilerServices.IsVolatile) _entriesTable
  NameObjectEntry modreq(System.Runtime.CompilerServices.IsVolatile) _nullKeyEntry
  KeysCollection _keys
  SerializationInfo _serializationInfo
  int _version
  object _syncRoot
  StringComparer defaultComparer
Свойства:
  IEqualityComparer Comparer
  bool IsReadOnly
  int Count
  object System.Collections.ICollection.SyncRoot
  bool System.Collections.ICollection.IsSynchronized
  KeysCollection Keys
Методы:
  void .ctor()
  void .ctor(IEqualityComparer equalityComparer)
  void .ctor(int capacity, IEqualityComparer equalityComparer)
  void .ctor(IHashCodeProvider hashProvider, IComparer comparer)
  void .ctor(int capacity, IHashCodeProvider hashProvider, IComparer comparer)
  void .ctor(int capacity)
  void .ctor(DBNull dummy)
  void .ctor(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void OnDeserialization(object sender)
  void Reset()
  void Reset(int capacity)
  NameObjectEntry FindEntry(string key)
  IEqualityComparer get_Comparer()
  void set_Comparer(IEqualityComparer value)
  bool get_IsReadOnly()
  void set_IsReadOnly(bool value)
  bool BaseHasKeys()
  void BaseAdd(string name, object value)
  void BaseRemove(string name)
  void BaseRemoveAt(int index)
  void BaseClear()
  object BaseGet(string name)
  void BaseSet(string name, object value)
  object BaseGet(int index)
  string BaseGetKey(int index)
  void BaseSet(int index, object value)
  IEnumerator GetEnumerator()
  int get_Count()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  object System.Collections.ICollection.get_SyncRoot()
  bool System.Collections.ICollection.get_IsSynchronized()
  String[] BaseGetAllKeys()
  Object[] BaseGetAllValues()
  Object[] BaseGetAllValues(Type type)
  KeysCollection get_Keys()
  void .cctor()
--------------------------------------------------
Класс: System.Collections.Specialized.CompatibleComparer
Наследуется от: object
Поля:
  IComparer _comparer
  IComparer modreq(System.Runtime.CompilerServices.IsVolatile) defaultComparer
  IHashCodeProvider _hcp
  IHashCodeProvider modreq(System.Runtime.CompilerServices.IsVolatile) defaultHashProvider
Свойства:
  IComparer Comparer
  IHashCodeProvider HashCodeProvider
  IComparer DefaultComparer
  IHashCodeProvider DefaultHashCodeProvider
Методы:
  void .ctor(IComparer comparer, IHashCodeProvider hashCodeProvider)
  bool Equals(object a, object b)
  int GetHashCode(object obj)
  IComparer get_Comparer()
  IHashCodeProvider get_HashCodeProvider()
  IComparer get_DefaultComparer()
  IHashCodeProvider get_DefaultHashCodeProvider()
--------------------------------------------------
Класс: System.Collections.Specialized.GenericAdapter
Наследуется от: object
Поля:
  StringDictionary m_stringDictionary
  ICollectionToGenericCollectionAdapter _values
  ICollectionToGenericCollectionAdapter _keys
Свойства:
  int Count
  string Item
  ICollection`1<string> Keys
  ICollection`1<string> Values
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.IsReadOnly
Методы:
  void .ctor(StringDictionary stringDictionary)
  void Add(string key, string value)
  bool ContainsKey(string key)
  void Clear()
  int get_Count()
  string get_Item(string key)
  void set_Item(string key, string value)
  ICollection`1<string> get_Keys()
  ICollection`1<string> get_Values()
  bool Remove(string key)
  bool TryGetValue(string key, String& value)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.Add(KeyValuePair`2<string, string> item)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.Contains(KeyValuePair`2<string, string> item)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.CopyTo(KeyValuePair`2[] array, int arrayIndex)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.get_IsReadOnly()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.String>>.Remove(KeyValuePair`2<string, string> item)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Generic.ValueListBuilder`1
Наследуется от: ValueType
Поля:
  Span`1<T> _span
  T[] _arrayFromPool
  int _pos
Свойства:
  int Length
  T& Item
Методы:
  void .ctor(Span`1<T> initialSpan)
  int get_Length()
  T& get_Item(int index)
  void Append(T item)
  ReadOnlySpan`1<T> AsSpan()
  void Dispose()
  void Grow()
  T Pop()
--------------------------------------------------
Класс: System.Collections.Generic.BidirectionalDictionary`2
Наследуется от: object
Поля:
  Dictionary`2<T1, T2> _forward
  Dictionary`2<T2, T1> _backward
Свойства:
  int Count
Методы:
  void .ctor(int capacity)
  int get_Count()
  void Add(T1 item1, T2 item2)
  bool TryGetForward(T1 item1, T2& item2)
  bool TryGetBackward(T2 item2, T1& item1)
  Enumerator<T1, T2> GetEnumerator()
  IEnumerator`1<KeyValuePair`2<T1, T2>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<T1,T2>>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Generic.BitHelper
Наследуется от: object
Поля:
  byte MarkedBitFlag
  byte IntSize
  int _length
  Int32* _arrayPtr
  Int32[] _array
  bool _useStackAlloc
Свойства:
Методы:
  void .ctor(Int32* bitArrayPtr, int length)
  void .ctor(Int32[] bitArray, int length)
  void MarkBit(int bitPosition)
  bool IsMarked(int bitPosition)
  int ToIntArrayLength(int n)
--------------------------------------------------
Класс: System.Collections.Generic.ICollectionDebugView`1
Наследуется от: object
Поля:
  ICollection`1<T> _collection
Свойства:
  T[] Items
Методы:
  void .ctor(ICollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.IDictionaryDebugView`2
Наследуется от: object
Поля:
  IDictionary`2<K, V> _dict
Свойства:
  KeyValuePair`2[] Items
Методы:
  void .ctor(IDictionary`2<K, V> dictionary)
  KeyValuePair`2[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.DictionaryKeyCollectionDebugView`2
Наследуется от: object
Поля:
  ICollection`1<TKey> _collection
Свойства:
  TKey[] Items
Методы:
  void .ctor(ICollection`1<TKey> collection)
  TKey[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.DictionaryValueCollectionDebugView`2
Наследуется от: object
Поля:
  ICollection`1<TValue> _collection
Свойства:
  TValue[] Items
Методы:
  void .ctor(ICollection`1<TValue> collection)
  TValue[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.LinkedList`1
Наследуется от: object
Поля:
  LinkedListNode`1<T> head
  int count
  int version
  object _syncRoot
  SerializationInfo _siInfo
  string VersionName
  string CountName
  string ValuesName
Свойства:
  int Count
  LinkedListNode`1<T> First
  LinkedListNode`1<T> Last
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(IEnumerable`1<T> collection)
  void .ctor(SerializationInfo info, StreamingContext context)
  int get_Count()
  LinkedListNode`1<T> get_First()
  LinkedListNode`1<T> get_Last()
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  void System.Collections.Generic.ICollection<T>.Add(T value)
  LinkedListNode`1<T> AddAfter(LinkedListNode`1<T> node, T value)
  void AddAfter(LinkedListNode`1<T> node, LinkedListNode`1<T> newNode)
  LinkedListNode`1<T> AddBefore(LinkedListNode`1<T> node, T value)
  void AddBefore(LinkedListNode`1<T> node, LinkedListNode`1<T> newNode)
  LinkedListNode`1<T> AddFirst(T value)
  void AddFirst(LinkedListNode`1<T> node)
  LinkedListNode`1<T> AddLast(T value)
  void AddLast(LinkedListNode`1<T> node)
  void Clear()
  bool Contains(T value)
  void CopyTo(T[] array, int index)
  LinkedListNode`1<T> Find(T value)
  LinkedListNode`1<T> FindLast(T value)
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  bool Remove(T value)
  void Remove(LinkedListNode`1<T> node)
  void RemoveFirst()
  void RemoveLast()
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void OnDeserialization(object sender)
  void InternalInsertNodeBefore(LinkedListNode`1<T> node, LinkedListNode`1<T> newNode)
  void InternalInsertNodeToEmptyList(LinkedListNode`1<T> newNode)
  void InternalRemoveNode(LinkedListNode`1<T> node)
  void ValidateNewNode(LinkedListNode`1<T> node)
  void ValidateNode(LinkedListNode`1<T> node)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void System.Collections.ICollection.CopyTo(Array array, int index)
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Generic.LinkedListNode`1
Наследуется от: object
Поля:
  LinkedList`1<T> list
  LinkedListNode`1<T> next
  LinkedListNode`1<T> prev
  T item
Свойства:
  LinkedList`1<T> List
  LinkedListNode`1<T> Next
  LinkedListNode`1<T> Previous
  T Value
Методы:
  void .ctor(T value)
  void .ctor(LinkedList`1<T> list, T value)
  LinkedList`1<T> get_List()
  LinkedListNode`1<T> get_Next()
  LinkedListNode`1<T> get_Previous()
  T get_Value()
  void set_Value(T value)
  void Invalidate()
--------------------------------------------------
Класс: System.Collections.Generic.SortedDictionary`2
Наследуется от: object
Поля:
  KeyCollection<TKey, TValue> _keys
  ValueCollection<TKey, TValue> _values
  TreeSet`1<KeyValuePair`2<TKey, TValue>> _set
Свойства:
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  TValue Item
  int Count
  IComparer`1<TKey> Comparer
  KeyCollection<TKey, TValue> Keys
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  ValueCollection<TKey, TValue> Values
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.IDictionary.IsReadOnly
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  object System.Collections.IDictionary.Item
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  void .ctor(IDictionary`2<TKey, TValue> dictionary, IComparer`1<TKey> comparer)
  void .ctor(IComparer`1<TKey> comparer)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  int get_Count()
  IComparer`1<TKey> get_Comparer()
  KeyCollection<TKey, TValue> get_Keys()
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
  ValueCollection<TKey, TValue> get_Values()
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
  void Add(TKey key, TValue value)
  void Clear()
  bool ContainsKey(TKey key)
  bool ContainsValue(TValue value)
  void CopyTo(KeyValuePair`2[] array, int index)
  Enumerator<TKey, TValue> GetEnumerator()
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.IDictionary.get_IsReadOnly()
  ICollection System.Collections.IDictionary.get_Keys()
  ICollection System.Collections.IDictionary.get_Values()
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  void System.Collections.IDictionary.Add(object key, object value)
  bool System.Collections.IDictionary.Contains(object key)
  bool IsCompatibleKey(object key)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  void System.Collections.IDictionary.Remove(object key)
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Collections.Generic.TreeSet`1
Наследуется от: SortedSet`1<T>
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(IComparer`1<T> comparer)
  void .ctor(SerializationInfo siInfo, StreamingContext context)
  bool AddIfNotPresent(T item)
--------------------------------------------------
Класс: System.Collections.Generic.SortedList`2
Наследуется от: object
Поля:
  TKey[] keys
  TValue[] values
  int _size
  int version
  IComparer`1<TKey> comparer
  KeyList<TKey, TValue> keyList
  ValueList<TKey, TValue> valueList
  object _syncRoot
  int DefaultCapacity
  int MaxArrayLength
Свойства:
  int Capacity
  IComparer`1<TKey> Comparer
  int Count
  IList`1<TKey> Keys
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  ICollection System.Collections.IDictionary.Keys
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  IList`1<TValue> Values
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values
  ICollection System.Collections.IDictionary.Values
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  bool System.Collections.IDictionary.IsReadOnly
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  TValue Item
  object System.Collections.IDictionary.Item
Методы:
  void .ctor()
  void .ctor(int capacity)
  void .ctor(IComparer`1<TKey> comparer)
  void .ctor(int capacity, IComparer`1<TKey> comparer)
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  void .ctor(IDictionary`2<TKey, TValue> dictionary, IComparer`1<TKey> comparer)
  void Add(TKey key, TValue value)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2<TKey, TValue> keyValuePair)
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2<TKey, TValue> keyValuePair)
  int get_Capacity()
  void set_Capacity(int value)
  IComparer`1<TKey> get_Comparer()
  void System.Collections.IDictionary.Add(object key, object value)
  int get_Count()
  IList`1<TKey> get_Keys()
  ICollection`1<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
  ICollection System.Collections.IDictionary.get_Keys()
  IEnumerable`1<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
  IList`1<TValue> get_Values()
  ICollection`1<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
  ICollection System.Collections.IDictionary.get_Values()
  IEnumerable`1<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
  KeyList<TKey, TValue> GetKeyListHelper()
  ValueList<TKey, TValue> GetValueListHelper()
  bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
  bool System.Collections.IDictionary.get_IsReadOnly()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void Clear()
  bool System.Collections.IDictionary.Contains(object key)
  bool ContainsKey(TKey key)
  bool ContainsValue(TValue value)
  void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[] array, int arrayIndex)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  void EnsureCapacity(int min)
  TValue GetByIndex(int index)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  TKey GetKey(int index)
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  int IndexOfKey(TKey key)
  int IndexOfValue(TValue value)
  void Insert(int index, TKey key, TValue value)
  bool TryGetValue(TKey key, TValue& value)
  void RemoveAt(int index)
  bool Remove(TKey key)
  void System.Collections.IDictionary.Remove(object key)
  void TrimExcess()
  bool IsCompatibleKey(object key)
--------------------------------------------------
Класс: System.Collections.Generic.SortedSet`1
Наследуется от: object
Поля:
  Node<T> root
  IComparer`1<T> comparer
  int count
  int version
  object _syncRoot
  SerializationInfo siInfo
  string ComparerName
  string CountName
  string ItemsName
  string VersionName
  string TreeName
  string NodeValueName
  string EnumStartName
  string ReverseName
  string EnumVersionName
  string MinName
  string MaxName
  string LowerBoundActiveName
  string UpperBoundActiveName
  int StackAllocThreshold
Свойства:
  int Count
  IComparer`1<T> Comparer
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
  T Min
  T MinInternal
  T Max
  T MaxInternal
Методы:
  void .ctor()
  void .ctor(IComparer`1<T> comparer)
  void .ctor(IEnumerable`1<T> collection)
  void .ctor(IEnumerable`1<T> collection, IComparer`1<T> comparer)
  void .ctor(SerializationInfo info, StreamingContext context)
  void AddAllElements(IEnumerable`1<T> collection)
  void RemoveAllElements(IEnumerable`1<T> collection)
  bool ContainsAllElements(IEnumerable`1<T> collection)
  bool InOrderTreeWalk(TreeWalkPredicate`1<T> action)
  bool BreadthFirstTreeWalk(TreeWalkPredicate`1<T> action)
  int get_Count()
  IComparer`1<T> get_Comparer()
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void VersionCheck()
  bool IsWithinRange(T item)
  bool Add(T item)
  void System.Collections.Generic.ICollection<T>.Add(T item)
  bool AddIfNotPresent(T item)
  bool Remove(T item)
  bool DoRemove(T item)
  void Clear()
  bool Contains(T item)
  void CopyTo(T[] array)
  void CopyTo(T[] array, int index)
  void CopyTo(T[] array, int index, int count)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  Enumerator<T> GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void InsertionBalance(Node<T> current, Node& parent, Node<T> grandParent, Node<T> greatGrandParent)
  void ReplaceChildOrRoot(Node<T> parent, Node<T> child, Node<T> newChild)
  void ReplaceNode(Node<T> match, Node<T> parentOfMatch, Node<T> successor, Node<T> parentOfSuccessor)
  Node<T> FindNode(T item)
  int InternalIndexOf(T item)
  Node<T> FindRange(T from, T to)
  Node<T> FindRange(T from, T to, bool lowerBoundActive, bool upperBoundActive)
  void UpdateVersion()
  IEqualityComparer`1<SortedSet`1<T>> CreateSetComparer()
  IEqualityComparer`1<SortedSet`1<T>> CreateSetComparer(IEqualityComparer`1<T> memberEqualityComparer)
  bool SortedSetEquals(SortedSet`1<T> set1, SortedSet`1<T> set2, IComparer`1<T> comparer)
  bool HasEqualComparer(SortedSet`1<T> other)
  void UnionWith(IEnumerable`1<T> other)
  Node<T> ConstructRootFromSortedArray(T[] arr, int startIndex, int endIndex, Node<T> redNode)
  void IntersectWith(IEnumerable`1<T> other)
  void IntersectWithEnumerable(IEnumerable`1<T> other)
  void ExceptWith(IEnumerable`1<T> other)
  void SymmetricExceptWith(IEnumerable`1<T> other)
  void SymmetricExceptWithSameComparer(SortedSet`1<T> other)
  void SymmetricExceptWithSameComparer(T[] other, int count)
  bool IsSubsetOf(IEnumerable`1<T> other)
  bool IsSubsetOfSortedSetWithSameComparer(SortedSet`1<T> asSorted)
  bool IsProperSubsetOf(IEnumerable`1<T> other)
  bool IsSupersetOf(IEnumerable`1<T> other)
  bool IsProperSupersetOf(IEnumerable`1<T> other)
  bool SetEquals(IEnumerable`1<T> other)
  bool Overlaps(IEnumerable`1<T> other)
  ElementCount<T> CheckUniqueAndUnfoundElements(IEnumerable`1<T> other, bool returnIfUnfound)
  int RemoveWhere(Predicate`1<T> match)
  T get_Min()
  T get_MinInternal()
  T get_Max()
  T get_MaxInternal()
  IEnumerable`1<T> Reverse()
  SortedSet`1<T> GetViewBetween(T lowerValue, T upperValue)
  void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
  void GetObjectData(SerializationInfo info, StreamingContext context)
  void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender)
  void OnDeserialization(object sender)
  bool TryGetValue(T equalValue, T& actualValue)
  int Log2(int value)
--------------------------------------------------
Класс: System.Collections.Generic.NodeColor
Наследуется от: Enum
Поля:
  byte value__
  NodeColor Black
  NodeColor Red
Свойства:
Методы:
--------------------------------------------------
Класс: System.Collections.Generic.TreeWalkPredicate`1
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  bool Invoke(Node<T> node)
  IAsyncResult BeginInvoke(Node<T> node, AsyncCallback callback, object object)
  bool EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Collections.Generic.TreeRotation
Наследуется от: Enum
Поля:
  byte value__
  TreeRotation Left
  TreeRotation LeftRight
  TreeRotation Right
  TreeRotation RightLeft
Свойства:
Методы:
--------------------------------------------------
Класс: System.Collections.Generic.SortedSetEqualityComparer`1
Наследуется от: object
Поля:
  IComparer`1<T> _comparer
  IEqualityComparer`1<T> _memberEqualityComparer
Свойства:
Методы:
  void .ctor(IEqualityComparer`1<T> memberEqualityComparer)
  void .ctor(IComparer`1<T> comparer, IEqualityComparer`1<T> memberEqualityComparer)
  bool Equals(SortedSet`1<T> x, SortedSet`1<T> y)
  int GetHashCode(SortedSet`1<T> obj)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: System.Collections.Generic.CollectionDebugView`1
Наследуется от: object
Поля:
  ICollection`1<T> _collection
Свойства:
  T[] Items
Методы:
  void .ctor(ICollection`1<T> collection)
  T[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.DictionaryDebugView`2
Наследуется от: object
Поля:
  IDictionary`2<K, V> _dict
Свойства:
  KeyValuePair`2[] Items
Методы:
  void .ctor(IDictionary`2<K, V> dictionary)
  KeyValuePair`2[] get_Items()
--------------------------------------------------
Класс: System.Collections.Generic.ISet`1
Поля:
Свойства:
Методы:
  bool Add(T item)
  void UnionWith(IEnumerable`1<T> other)
  void IntersectWith(IEnumerable`1<T> other)
  void ExceptWith(IEnumerable`1<T> other)
  void SymmetricExceptWith(IEnumerable`1<T> other)
  bool IsSubsetOf(IEnumerable`1<T> other)
  bool IsSupersetOf(IEnumerable`1<T> other)
  bool IsProperSupersetOf(IEnumerable`1<T> other)
  bool IsProperSubsetOf(IEnumerable`1<T> other)
  bool Overlaps(IEnumerable`1<T> other)
  bool SetEquals(IEnumerable`1<T> other)
--------------------------------------------------
Класс: System.IO.FileSystemEventArgs
Наследуется от: EventArgs
Поля:
  WatcherChangeTypes _changeType
  string _name
  string _fullPath
Свойства:
  WatcherChangeTypes ChangeType
  string FullPath
  string Name
Методы:
  void .ctor(WatcherChangeTypes changeType, string directory, string name)
  string Combine(string directoryPath, string name)
  WatcherChangeTypes get_ChangeType()
  string get_FullPath()
  string get_Name()
--------------------------------------------------
Класс: System.IO.ChunkedMemoryStream
Наследуется от: Stream
Поля:
  MemoryChunk _headChunk
  MemoryChunk _currentChunk
  int InitialChunkDefaultSize
  int MaxChunkSize
  int _totalLength
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor()
  Byte[] ToArray()
  void Write(Byte[] buffer, int offset, int count)
  Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  void AppendChunk(long count)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  long get_Position()
  void set_Position(long value)
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
--------------------------------------------------
Класс: System.IO.PathInternal
Наследуется от: object
Поля:
  bool s_isCaseSensitive
  string ExtendedDevicePathPrefix
  string UncPathPrefix
  string UncDevicePrefixToInsert
  string UncExtendedPathPrefix
  string DevicePathPrefix
  int MaxShortPath
  int DevicePrefixLength
Свойства:
  StringComparison StringComparison
  bool IsCaseSensitive
Методы:
  StringComparison get_StringComparison()
  bool get_IsCaseSensitive()
  bool GetIsCaseSensitive()
  bool IsValidDriveChar(char value)
  bool EndsWithPeriodOrSpace(string path)
  string EnsureExtendedPrefixIfNeeded(string path)
  string EnsureExtendedPrefix(string path)
  bool IsDevice(string path)
  bool IsExtended(string path)
  int GetRootLength(ReadOnlySpan`1<char> path)
  bool IsPartiallyQualified(string path)
  bool IsDirectorySeparator(char c)
  void .cctor()
--------------------------------------------------
Класс: System.IO.ReadOnlyMemoryStream
Наследуется от: Stream
Поля:
  ReadOnlyMemory`1<byte> _content
  int _position
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(ReadOnlyMemory`1<byte> content)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  long Seek(long offset, SeekOrigin origin)
  int ReadByte()
  int Read(Byte[] buffer, int offset, int count)
  int Read(Span`1<byte> buffer)
  Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state)
  int EndRead(IAsyncResult asyncResult)
  void CopyTo(Stream destination, int bufferSize)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
  void Flush()
  Task FlushAsync(CancellationToken cancellationToken)
  void SetLength(long value)
  void Write(Byte[] buffer, int offset, int count)
  void ValidateReadArrayArguments(Byte[] buffer, int offset, int count)
--------------------------------------------------
Класс: System.IO.FileSystemEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, FileSystemEventArgs e)
  IAsyncResult BeginInvoke(object sender, FileSystemEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IO.RenamedEventArgs
Наследуется от: FileSystemEventArgs
Поля:
  string _oldName
  string _oldFullPath
Свойства:
  string OldFullPath
  string OldName
Методы:
  void .ctor(WatcherChangeTypes changeType, string directory, string name, string oldName)
  string get_OldFullPath()
  string get_OldName()
--------------------------------------------------
Класс: System.IO.RenamedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, RenamedEventArgs e)
  IAsyncResult BeginInvoke(object sender, RenamedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IO.WaitForChangedResult
Наследуется от: ValueType
Поля:
  WaitForChangedResult TimedOutResult
  WatcherChangeTypes <ChangeType>k__BackingField
  string <Name>k__BackingField
  string <OldName>k__BackingField
  bool <TimedOut>k__BackingField
Свойства:
  WatcherChangeTypes ChangeType
  string Name
  string OldName
  bool TimedOut
Методы:
  void .ctor(WatcherChangeTypes changeType, string name, string oldName, bool timedOut)
  WatcherChangeTypes get_ChangeType()
  void set_ChangeType(WatcherChangeTypes value)
  string get_Name()
  void set_Name(string value)
  string get_OldName()
  void set_OldName(string value)
  bool get_TimedOut()
  void set_TimedOut(bool value)
  void .cctor()
--------------------------------------------------
Класс: System.IO.CoreFXFileSystemWatcherProxy
Наследуется от: object
Поля:
  IFileWatcher instance
  IDictionary`2<object, FileSystemWatcher> internal_map
  ConditionalWeakTable`2<object, FileSystemWatcher> external_map
  IDictionary`2<object, object> event_map
  int INTERRUPT_MS
Свойства:
Методы:
  void Operation(Action`4<IDictionary`2<object, FileSystemWatcher>, ConditionalWeakTable`2<object, FileSystemWatcher>, IDictionary`2<object, object>, object> map_op, Action`2<FileSystemWatcher, FileSystemWatcher> object_op, object handle, Action`2<FileSystemWatcher, FileSystemWatcher> cancel_op)
  void ProxyDispatch(object sender, FileAction action, FileSystemEventArgs args)
  void ProxyDispatchError(object sender, ErrorEventArgs args)
  object NewWatcher(FileSystemWatcher fsw)
  void StartDispatching(object handle)
  void StopDispatching(object handle)
  void Dispose(object handle)
  bool GetInstance(IFileWatcher& watcher)
  void .ctor()
--------------------------------------------------
Класс: System.IO.DefaultWatcherData
Наследуется от: object
Поля:
  FileSystemWatcher FSW
  string Directory
  string FileMask
  bool IncludeSubdirs
  bool Enabled
  bool NoWildcards
  DateTime DisabledTime
  object FilesLock
  Dictionary`2<string, FileData> Files
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.FileData
Наследуется от: object
Поля:
  string Directory
  FileAttributes Attributes
  bool NotExists
  DateTime CreationTime
  DateTime LastWriteTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.DefaultWatcher
Наследуется от: object
Поля:
  DefaultWatcher instance
  Thread thread
  Hashtable watches
  String[] NoStringsArray
Свойства:
Методы:
  void .ctor()
  bool GetInstance(IFileWatcher& watcher)
  void StartDispatching(object handle)
  void StopDispatching(object handle)
  void Dispose(object handle)
  void Monitor()
  bool UpdateDataAndDispatch(DefaultWatcherData data, bool dispatch)
  void DispatchEvents(FileSystemWatcher fsw, FileAction action, string filename)
  void DoFiles(DefaultWatcherData data, string directory, bool dispatch)
  void IterateAndModifyFilesData(DefaultWatcherData data, string directory, bool dispatch, String[] files)
  FileData CreateFileData(string directory, string filename)
  void .cctor()
--------------------------------------------------
Класс: System.IO.ErrorEventArgs
Наследуется от: EventArgs
Поля:
  Exception exception
Свойства:
Методы:
  void .ctor(Exception exception)
  Exception GetException()
--------------------------------------------------
Класс: System.IO.ErrorEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, ErrorEventArgs e)
  IAsyncResult BeginInvoke(object sender, ErrorEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IO.FAMConnection
Наследуется от: ValueType
Поля:
  int FD
  IntPtr opaque
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FAMRequest
Наследуется от: ValueType
Поля:
  int ReqNum
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FAMCodes
Наследуется от: Enum
Поля:
  int value__
  FAMCodes Changed
  FAMCodes Deleted
  FAMCodes StartExecuting
  FAMCodes StopExecuting
  FAMCodes Created
  FAMCodes Moved
  FAMCodes Acknowledge
  FAMCodes Exists
  FAMCodes EndExist
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FAMData
Наследуется от: object
Поля:
  FileSystemWatcher FSW
  string Directory
  string FileMask
  bool IncludeSubdirs
  bool Enabled
  FAMRequest Request
  Hashtable SubDirs
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.FAMWatcher
Наследуется от: object
Поля:
  bool failed
  FAMWatcher instance
  Hashtable watches
  Hashtable requests
  FAMConnection conn
  Thread thread
  bool stop
  bool use_gamin
  NotifyFilters changed
Свойства:
Методы:
  void .ctor()
  bool GetInstance(IFileWatcher& watcher, bool gamin)
  void StartDispatching(object handle)
  void StartMonitoringDirectory(FAMData data, bool justcreated)
  void StopDispatching(object handle)
  void StopMonitoringDirectory(FAMData data)
  void Monitor()
  void ProcessEvents()
  void Finalize()
  int FAMOpen(FAMConnection& fc)
  int FAMClose(FAMConnection& fc)
  int FAMMonitorDirectory(FAMConnection& fc, string filename, FAMRequest& fr, IntPtr user_data)
  int FAMCancelMonitor(FAMConnection& fc, FAMRequest& fr)
  int FAMPending(FAMConnection& fc)
  void Dispose(object handle)
  int fam_Open(FAMConnection& fc)
  int fam_Close(FAMConnection& fc)
  int fam_MonitorDirectory(FAMConnection& fc, string filename, FAMRequest& fr, IntPtr user_data)
  int fam_CancelMonitor(FAMConnection& fc, FAMRequest& fr)
  int fam_Pending(FAMConnection& fc)
  int gamin_Open(FAMConnection& fc)
  int gamin_Close(FAMConnection& fc)
  int gamin_MonitorDirectory(FAMConnection& fc, string filename, FAMRequest& fr, IntPtr user_data)
  int gamin_CancelMonitor(FAMConnection& fc, FAMRequest& fr)
  int gamin_Pending(FAMConnection& fc)
  int InternalFAMNextEvent(FAMConnection& fc, String& filename, Int32& code, Int32& reqnum)
--------------------------------------------------
Класс: System.IO.FileAction
Наследуется от: Enum
Поля:
  int value__
  FileAction Added
  FileAction Removed
  FileAction Modified
  FileAction RenamedOldName
  FileAction RenamedNewName
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FileSystemWatcher
Наследуется от: Component
Поля:
  bool inited
  bool start_requested
  bool enableRaisingEvents
  string filter
  bool includeSubdirectories
  int internalBufferSize
  NotifyFilters notifyFilter
  string path
  string fullpath
  ISynchronizeInvoke synchronizingObject
  WaitForChangedResult lastData
  bool waiting
  SearchPattern2 pattern
  bool disposed
  string mangledFilter
  IFileWatcher watcher
  object watcher_handle
  object lockobj
  FileSystemEventHandler Changed
  FileSystemEventHandler Created
  FileSystemEventHandler Deleted
  ErrorEventHandler Error
  RenamedEventHandler Renamed
Свойства:
  bool Waiting
  string MangledFilter
  SearchPattern2 Pattern
  string FullPath
  bool EnableRaisingEvents
  string Filter
  bool IncludeSubdirectories
  int InternalBufferSize
  NotifyFilters NotifyFilter
  string Path
  ISite Site
  ISynchronizeInvoke SynchronizingObject
Методы:
  void .ctor()
  void .ctor(string path)
  void .ctor(string path, string filter)
  void InitWatcher()
  void ShowWatcherInfo()
  bool get_Waiting()
  void set_Waiting(bool value)
  string get_MangledFilter()
  SearchPattern2 get_Pattern()
  string get_FullPath()
  bool get_EnableRaisingEvents()
  void set_EnableRaisingEvents(bool value)
  string get_Filter()
  void set_Filter(string value)
  bool get_IncludeSubdirectories()
  void set_IncludeSubdirectories(bool value)
  int get_InternalBufferSize()
  void set_InternalBufferSize(int value)
  NotifyFilters get_NotifyFilter()
  void set_NotifyFilter(NotifyFilters value)
  string get_Path()
  void set_Path(string value)
  ISite get_Site()
  void set_Site(ISite value)
  ISynchronizeInvoke get_SynchronizingObject()
  void set_SynchronizingObject(ISynchronizeInvoke value)
  void BeginInit()
  void Dispose(bool disposing)
  void Finalize()
  void EndInit()
  void RaiseEvent(Delegate ev, EventArgs arg, EventType evtype)
  void OnChanged(FileSystemEventArgs e)
  void OnCreated(FileSystemEventArgs e)
  void OnDeleted(FileSystemEventArgs e)
  void OnError(ErrorEventArgs e)
  void OnRenamed(RenamedEventArgs e)
  WaitForChangedResult WaitForChanged(WatcherChangeTypes changeType)
  WaitForChangedResult WaitForChanged(WatcherChangeTypes changeType, int timeout)
  void DispatchErrorEvents(ErrorEventArgs args)
  void DispatchEvents(FileAction act, string filename, RenamedEventArgs& renamed)
  void Start()
  void Stop()
  void add_Changed(FileSystemEventHandler value)
  void remove_Changed(FileSystemEventHandler value)
  void add_Created(FileSystemEventHandler value)
  void remove_Created(FileSystemEventHandler value)
  void add_Deleted(FileSystemEventHandler value)
  void remove_Deleted(FileSystemEventHandler value)
  void add_Error(ErrorEventHandler value)
  void remove_Error(ErrorEventHandler value)
  void add_Renamed(RenamedEventHandler value)
  void remove_Renamed(RenamedEventHandler value)
  int InternalSupportsFSW()
  void .cctor()
--------------------------------------------------
Класс: System.IO.IFileWatcher
Поля:
Свойства:
Методы:
  void StartDispatching(object fsw)
  void StopDispatching(object fsw)
  void Dispose(object fsw)
--------------------------------------------------
Класс: System.IO.IODescriptionAttribute
Наследуется от: DescriptionAttribute
Поля:
Свойства:
  string Description
Методы:
  void .ctor(string description)
  string get_Description()
--------------------------------------------------
Класс: System.IO.InternalBufferOverflowException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(SerializationInfo info, StreamingContext context)
  void .ctor(string message, Exception inner)
--------------------------------------------------
Класс: System.IO.InvalidDataException
Наследуется от: SystemException
Поля:
  int Result
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.IO.EventFlags
Наследуется от: Enum
Поля:
  ushort value__
  EventFlags Add
  EventFlags Delete
  EventFlags Enable
  EventFlags Disable
  EventFlags OneShot
  EventFlags Clear
  EventFlags Receipt
  EventFlags Dispatch
  EventFlags Flag0
  EventFlags Flag1
  EventFlags SystemFlags
  EventFlags EOF
  EventFlags Error
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.EventFilter
Наследуется от: Enum
Поля:
  short value__
  EventFilter Read
  EventFilter Write
  EventFilter Aio
  EventFilter Vnode
  EventFilter Proc
  EventFilter Signal
  EventFilter Timer
  EventFilter MachPort
  EventFilter FS
  EventFilter User
  EventFilter VM
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.FilterFlags
Наследуется от: Enum
Поля:
  UInt32 value__
  FilterFlags ReadPoll
  FilterFlags ReadOutOfBand
  FilterFlags ReadLowWaterMark
  FilterFlags WriteLowWaterMark
  FilterFlags NoteTrigger
  FilterFlags NoteFFNop
  FilterFlags NoteFFAnd
  FilterFlags NoteFFOr
  FilterFlags NoteFFCopy
  FilterFlags NoteFFCtrlMask
  FilterFlags NoteFFlagsMask
  FilterFlags VNodeDelete
  FilterFlags VNodeWrite
  FilterFlags VNodeExtend
  FilterFlags VNodeAttrib
  FilterFlags VNodeLink
  FilterFlags VNodeRename
  FilterFlags VNodeRevoke
  FilterFlags VNodeNone
  FilterFlags ProcExit
  FilterFlags ProcFork
  FilterFlags ProcExec
  FilterFlags ProcReap
  FilterFlags ProcSignal
  FilterFlags ProcExitStatus
  FilterFlags ProcResourceEnd
  FilterFlags ProcAppactive
  FilterFlags ProcAppBackground
  FilterFlags ProcAppNonUI
  FilterFlags ProcAppInactive
  FilterFlags ProcAppAllStates
  FilterFlags ProcPDataMask
  FilterFlags ProcControlMask
  FilterFlags VMPressure
  FilterFlags VMPressureTerminate
  FilterFlags VMPressureSuddenTerminate
  FilterFlags VMError
  FilterFlags TimerSeconds
  FilterFlags TimerMicroSeconds
  FilterFlags TimerNanoSeconds
  FilterFlags TimerAbsolute
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.kevent
Наследуется от: ValueType
Поля:
  UIntPtr ident
  EventFilter filter
  EventFlags flags
  FilterFlags fflags
  IntPtr data
  IntPtr udata
Свойства:
Методы:
  void Dispose()
--------------------------------------------------
Класс: System.IO.timespec
Наследуется от: ValueType
Поля:
  IntPtr tv_sec
  IntPtr tv_nsec
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.PathData
Наследуется от: object
Поля:
  string Path
  bool IsDirectory
  int Fd
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.KqueueMonitor
Наследуется от: object
Поля:
  bool initialized
  int O_EVTONLY
  int F_GETPATH
  int __DARWIN_MAXPATHLEN
  int EINTR
  kevent[] emptyEventList
  int maxFds
  FileSystemWatcher fsw
  int conn
  Thread thread
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) requestStop
  AutoResetEvent startedEvent
  bool started
  bool inDispatch
  Exception exc
  object stateLock
  object connLock
  Dictionary`2<string, PathData> pathsDict
  Dictionary`2<int, PathData> fdsDict
  string fixupPath
  string fullPathNoLastSlash
Свойства:
  int Connection
Методы:
  int get_Connection()
  void .ctor(FileSystemWatcher fsw)
  void Dispose()
  void Start()
  void Stop()
  void CleanUp()
  void DoMonitor()
  void Setup()
  kevent[] CreateChangeList(List`1& FdList)
  void Monitor()
  PathData Add(string path, bool postEvents, List`1& fds)
  void Remove(PathData pathData)
  void RemoveTree(PathData pathData)
  void UpdatePath(PathData pathData)
  void Scan(string path, bool postEvents, List`1& fds)
  void PostEvent(FileAction action, string path, string newPath)
  string GetFilenameFromFd(int fd)
  int fcntl(int file_names_by_descriptor, int cmd, StringBuilder sb)
  IntPtr realpath(string pathname, StringBuilder sb)
  int open(string path, int flags, int mode_t)
  int close(int fd)
  int kqueue()
  int kevent(int kq, kevent[] ev, int nchanges, kevent[] evtlist, int nevents, timespec& time)
  int kevent_notimeout(Int32& kq, IntPtr ev, int nchanges, IntPtr evtlist, int nevents)
  void .cctor()
  void <Start>b__5_0()
--------------------------------------------------
Класс: System.IO.KeventWatcher
Наследуется от: object
Поля:
  bool failed
  KeventWatcher instance
  Hashtable watches
Свойства:
Методы:
  void .ctor()
  bool GetInstance(IFileWatcher& watcher)
  void StartDispatching(object handle)
  void StopDispatching(object handle)
  void Dispose(object handle)
  int close(int fd)
  int kqueue()
--------------------------------------------------
Класс: System.IO.NotifyFilters
Наследуется от: Enum
Поля:
  int value__
  NotifyFilters Attributes
  NotifyFilters CreationTime
  NotifyFilters DirectoryName
  NotifyFilters FileName
  NotifyFilters LastAccess
  NotifyFilters LastWrite
  NotifyFilters Security
  NotifyFilters Size
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.NullFileWatcher
Наследуется от: object
Поля:
  IFileWatcher instance
Свойства:
Методы:
  void StartDispatching(object handle)
  void StopDispatching(object handle)
  void Dispose(object handle)
  bool GetInstance(IFileWatcher& watcher)
  void .ctor()
--------------------------------------------------
Класс: System.IO.SearchPattern2
Наследуется от: object
Поля:
  Op ops
  bool ignore
  bool hasWildcard
  string pattern
  Char[] WildcardChars
  Char[] InvalidChars
Свойства:
  bool HasWildcard
Методы:
  void .ctor(string pattern)
  void .ctor(string pattern, bool ignore)
  bool IsMatch(string text, bool ignorecase)
  bool IsMatch(string text)
  bool get_HasWildcard()
  void Compile(string pattern)
  bool Match(Op op, string text, int ptr)
  void .cctor()
--------------------------------------------------
Класс: System.IO.WatcherChangeTypes
Наследуется от: Enum
Поля:
  int value__
  WatcherChangeTypes All
  WatcherChangeTypes Changed
  WatcherChangeTypes Created
  WatcherChangeTypes Deleted
  WatcherChangeTypes Renamed
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.InternalResources
Наследуется от: object
Поля:
Свойства:
Методы:
  void EndOfFile()
  string GetMessage(int errorCode)
  void FileNotOpen()
  void WrongAsyncResult()
  void EndReadCalledTwice()
  void EndWriteCalledTwice()
  void WinIOError(int errorCode, string str)
  int MakeHRFromErrorCode(int errorCode)
--------------------------------------------------
Класс: System.IO.Ports.Handshake
Наследуется от: Enum
Поля:
  int value__
  Handshake None
  Handshake XOnXOff
  Handshake RequestToSend
  Handshake RequestToSendXOnXOff
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.ISerialStream
Поля:
Свойства:
  int BytesToRead
  int BytesToWrite
  int ReadTimeout
  int WriteTimeout
Методы:
  int Read(Byte[] buffer, int offset, int count)
  void Write(Byte[] buffer, int offset, int count)
  void SetAttributes(int baud_rate, Parity parity, int data_bits, StopBits sb, Handshake hs)
  void DiscardInBuffer()
  void DiscardOutBuffer()
  SerialSignal GetSignals()
  void SetSignal(SerialSignal signal, bool value)
  void SetBreakState(bool value)
  void Close()
  int get_BytesToRead()
  int get_BytesToWrite()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
--------------------------------------------------
Класс: System.IO.Ports.Parity
Наследуется от: Enum
Поля:
  int value__
  Parity None
  Parity Odd
  Parity Even
  Parity Mark
  Parity Space
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.SerialData
Наследуется от: Enum
Поля:
  int value__
  SerialData Chars
  SerialData Eof
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.SerialError
Наследуется от: Enum
Поля:
  int value__
  SerialError RXOver
  SerialError Overrun
  SerialError RXParity
  SerialError Frame
  SerialError TXFull
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.SerialErrorReceivedEventArgs
Наследуется от: EventArgs
Поля:
  SerialError eventType
Свойства:
  SerialError EventType
Методы:
  void .ctor(SerialError eventType)
  SerialError get_EventType()
  void .ctor()
--------------------------------------------------
Класс: System.IO.Ports.SerialPinChange
Наследуется от: Enum
Поля:
  int value__
  SerialPinChange CtsChanged
  SerialPinChange DsrChanged
  SerialPinChange CDChanged
  SerialPinChange Break
  SerialPinChange Ring
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.SerialPinChangedEventArgs
Наследуется от: EventArgs
Поля:
  SerialPinChange eventType
Свойства:
  SerialPinChange EventType
Методы:
  void .ctor(SerialPinChange eventType)
  SerialPinChange get_EventType()
  void .ctor()
--------------------------------------------------
Класс: System.IO.Ports.SerialPort
Наследуется от: Component
Поля:
  int InfiniteTimeout
  int DefaultReadBufferSize
  int DefaultWriteBufferSize
  int DefaultBaudRate
  int DefaultDataBits
  Parity DefaultParity
  StopBits DefaultStopBits
  bool is_open
  int baud_rate
  Parity parity
  StopBits stop_bits
  Handshake handshake
  int data_bits
  bool break_state
  bool dtr_enable
  bool rts_enable
  ISerialStream stream
  Encoding encoding
  string new_line
  string port_name
  int read_timeout
  int write_timeout
  int readBufferSize
  int writeBufferSize
  object error_received
  object data_received
  object pin_changed
Свойства:
  Stream BaseStream
  int BaudRate
  bool BreakState
  int BytesToRead
  int BytesToWrite
  bool CDHolding
  bool CtsHolding
  int DataBits
  bool DiscardNull
  bool DsrHolding
  bool DtrEnable
  Encoding Encoding
  Handshake Handshake
  bool IsOpen
  string NewLine
  Parity Parity
  byte ParityReplace
  string PortName
  int ReadBufferSize
  int ReadTimeout
  int ReceivedBytesThreshold
  bool RtsEnable
  StopBits StopBits
  int WriteBufferSize
  int WriteTimeout
  bool IsWindows
Методы:
  void .ctor()
  void .ctor(IContainer container)
  void .ctor(string portName)
  void .ctor(string portName, int baudRate)
  void .ctor(string portName, int baudRate, Parity parity)
  void .ctor(string portName, int baudRate, Parity parity, int dataBits)
  void .ctor(string portName, int baudRate, Parity parity, int dataBits, StopBits stopBits)
  string GetDefaultPortName()
  Stream get_BaseStream()
  int get_BaudRate()
  void set_BaudRate(int value)
  bool get_BreakState()
  void set_BreakState(bool value)
  int get_BytesToRead()
  int get_BytesToWrite()
  bool get_CDHolding()
  bool get_CtsHolding()
  int get_DataBits()
  void set_DataBits(int value)
  bool get_DiscardNull()
  void set_DiscardNull(bool value)
  bool get_DsrHolding()
  bool get_DtrEnable()
  void set_DtrEnable(bool value)
  Encoding get_Encoding()
  void set_Encoding(Encoding value)
  Handshake get_Handshake()
  void set_Handshake(Handshake value)
  bool get_IsOpen()
  string get_NewLine()
  void set_NewLine(string value)
  Parity get_Parity()
  void set_Parity(Parity value)
  byte get_ParityReplace()
  void set_ParityReplace(byte value)
  string get_PortName()
  void set_PortName(string value)
  int get_ReadBufferSize()
  void set_ReadBufferSize(int value)
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_ReceivedBytesThreshold()
  void set_ReceivedBytesThreshold(int value)
  bool get_RtsEnable()
  void set_RtsEnable(bool value)
  StopBits get_StopBits()
  void set_StopBits(StopBits value)
  int get_WriteBufferSize()
  void set_WriteBufferSize(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  void Close()
  void Dispose(bool disposing)
  void DiscardInBuffer()
  void DiscardOutBuffer()
  String[] GetPortNames()
  bool get_IsWindows()
  void Open()
  int Read(Byte[] buffer, int offset, int count)
  int Read(Char[] buffer, int offset, int count)
  int read_byte()
  int ReadByte()
  int ReadChar()
  string ReadExisting()
  string ReadLine()
  string ReadTo(string value)
  void Write(string text)
  void Write(Byte[] buffer, int offset, int count)
  void Write(Char[] buffer, int offset, int count)
  void WriteLine(string text)
  void CheckOpen()
  void OnErrorReceived(SerialErrorReceivedEventArgs args)
  void OnDataReceived(SerialDataReceivedEventArgs args)
  void OnDataReceived(SerialPinChangedEventArgs args)
  void add_ErrorReceived(SerialErrorReceivedEventHandler value)
  void remove_ErrorReceived(SerialErrorReceivedEventHandler value)
  void add_PinChanged(SerialPinChangedEventHandler value)
  void remove_PinChanged(SerialPinChangedEventHandler value)
  void add_DataReceived(SerialDataReceivedEventHandler value)
  void remove_DataReceived(SerialDataReceivedEventHandler value)
--------------------------------------------------
Класс: System.IO.Ports.SerialDataReceivedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SerialDataReceivedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SerialDataReceivedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IO.Ports.SerialPinChangedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SerialPinChangedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SerialPinChangedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IO.Ports.SerialErrorReceivedEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object sender, SerialErrorReceivedEventArgs e)
  IAsyncResult BeginInvoke(object sender, SerialErrorReceivedEventArgs e, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.IO.Ports.SerialPortStream
Наследуется от: Stream
Поля:
  int fd
  int read_timeout
  int write_timeout
  bool disposed
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  bool CanTimeout
  int ReadTimeout
  int WriteTimeout
  long Length
  long Position
  int BytesToRead
  int BytesToWrite
Методы:
  int open_serial(string portName)
  void .ctor(string portName, int baudRate, int dataBits, Parity parity, StopBits stopBits, bool dtrEnable, bool rtsEnable, Handshake handshake, int readTimeout, int writeTimeout, int readBufferSize, int writeBufferSize)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  bool get_CanTimeout()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Flush()
  int read_serial(int fd, Byte[] buffer, int offset, int count)
  bool poll_serial(int fd, Int32& error, int timeout)
  int Read(Byte[] buffer, int offset, int count)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int write_serial(int fd, Byte[] buffer, int offset, int count, int timeout)
  void Write(Byte[] buffer, int offset, int count)
  void Dispose(bool disposing)
  int close_serial(int fd)
  void Close()
  void System.IDisposable.Dispose()
  void Finalize()
  void CheckDisposed()
  bool set_attributes(int fd, int baudRate, Parity parity, int dataBits, StopBits stopBits, Handshake handshake)
  void SetAttributes(int baud_rate, Parity parity, int data_bits, StopBits sb, Handshake hs)
  int get_bytes_in_buffer(int fd, int input)
  int get_BytesToRead()
  int get_BytesToWrite()
  int discard_buffer(int fd, bool inputBuffer)
  void DiscardInBuffer()
  void DiscardOutBuffer()
  SerialSignal get_signals(int fd, Int32& error)
  SerialSignal GetSignals()
  int set_signal(int fd, SerialSignal signal, bool value)
  void SetSignal(SerialSignal signal, bool value)
  int breakprop(int fd)
  void SetBreakState(bool value)
  IntPtr strerror(int errnum)
  void ThrowIOException()
  bool is_baud_rate_legal(int baud_rate)
  void TryBaudRate(int baudRate)
--------------------------------------------------
Класс: System.IO.Ports.SerialDataReceivedEventArgs
Наследуется от: EventArgs
Поля:
  SerialData eventType
Свойства:
  SerialData EventType
Методы:
  void .ctor(SerialData eventType)
  SerialData get_EventType()
  void .ctor()
--------------------------------------------------
Класс: System.IO.Ports.SerialSignal
Наследуется от: Enum
Поля:
  int value__
  SerialSignal None
  SerialSignal Cd
  SerialSignal Cts
  SerialSignal Dsr
  SerialSignal Dtr
  SerialSignal Rts
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.StopBits
Наследуется от: Enum
Поля:
  int value__
  StopBits None
  StopBits One
  StopBits Two
  StopBits OnePointFive
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Ports.WinSerialStream
Наследуется от: Stream
Поля:
  UInt32 GenericRead
  UInt32 GenericWrite
  UInt32 OpenExisting
  UInt32 FileFlagOverlapped
  UInt32 PurgeRxClear
  UInt32 PurgeTxClear
  UInt32 WinInfiniteTimeout
  UInt32 FileIOPending
  UInt32 SetRts
  UInt32 ClearRts
  UInt32 SetDtr
  UInt32 ClearDtr
  UInt32 SetBreak
  UInt32 ClearBreak
  UInt32 CtsOn
  UInt32 DsrOn
  UInt32 RsldOn
  UInt32 EvRxChar
  UInt32 EvCts
  UInt32 EvDsr
  UInt32 EvRlsd
  UInt32 EvBreak
  UInt32 EvErr
  UInt32 EvRing
  int handle
  int read_timeout
  int write_timeout
  bool disposed
  IntPtr write_overlapped
  IntPtr read_overlapped
  ManualResetEvent read_event
  ManualResetEvent write_event
  Timeouts timeouts
Свойства:
  bool CanRead
  bool CanSeek
  bool CanTimeout
  bool CanWrite
  int ReadTimeout
  int WriteTimeout
  long Length
  long Position
  int BytesToRead
  int BytesToWrite
Методы:
  int CreateFile(string port_name, UInt32 desired_access, UInt32 share_mode, UInt32 security_attrs, UInt32 creation, UInt32 flags, UInt32 template)
  bool SetupComm(int handle, int read_buffer_size, int write_buffer_size)
  bool PurgeComm(int handle, UInt32 flags)
  bool SetCommTimeouts(int handle, Timeouts timeouts)
  void .ctor(string port_name, int baud_rate, int data_bits, Parity parity, StopBits sb, bool dtr_enable, bool rts_enable, Handshake hs, int read_timeout, int write_timeout, int read_buffer_size, int write_buffer_size)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanTimeout()
  bool get_CanWrite()
  int get_ReadTimeout()
  void set_ReadTimeout(int value)
  int get_WriteTimeout()
  void set_WriteTimeout(int value)
  long get_Length()
  long get_Position()
  void set_Position(long value)
  bool CloseHandle(int handle)
  void Dispose(bool disposing)
  void System.IDisposable.Dispose()
  void Close()
  void Finalize()
  void Flush()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  bool ReadFile(int handle, Byte* buffer, int bytes_to_read, Int32& bytes_read, IntPtr overlapped)
  bool GetOverlappedResult(int handle, IntPtr overlapped, Int32& bytes_transfered, bool wait)
  int Read(Byte[] buffer, int offset, int count)
  bool WriteFile(int handle, Byte* buffer, int bytes_to_write, Int32& bytes_written, IntPtr overlapped)
  void Write(Byte[] buffer, int offset, int count)
  bool GetCommState(int handle, DCB dcb)
  bool SetCommState(int handle, DCB dcb)
  void SetAttributes(int baud_rate, Parity parity, int data_bits, StopBits bits, Handshake hs)
  void ReportIOError(string optional_arg)
  void CheckDisposed()
  void DiscardInBuffer()
  void DiscardOutBuffer()
  bool ClearCommError(int handle, UInt32& errors, CommStat& stat)
  int get_BytesToRead()
  int get_BytesToWrite()
  bool GetCommModemStatus(int handle, UInt32& flags)
  SerialSignal GetSignals()
  bool EscapeCommFunction(int handle, UInt32 flags)
  void SetSignal(SerialSignal signal, bool value)
  void SetBreakState(bool value)
--------------------------------------------------
Класс: System.IO.Ports.DCB
Наследуется от: object
Поля:
  int dcb_length
  int baud_rate
  int flags
  short w_reserved
  short xon_lim
  short xoff_lim
  byte byte_size
  byte parity
  byte stop_bits
  byte xon_char
  byte xoff_char
  byte error_char
  byte eof_char
  byte evt_char
  short w_reserved1
  int fOutxCtsFlow
  int fOutX
  int fInX
  int fRtsControl2
Свойства:
Методы:
  void SetValues(int baud_rate, Parity parity, int byte_size, StopBits sb, Handshake hs)
  void .ctor()
--------------------------------------------------
Класс: System.IO.Ports.Timeouts
Наследуется от: object
Поля:
  UInt32 ReadIntervalTimeout
  UInt32 ReadTotalTimeoutMultiplier
  UInt32 ReadTotalTimeoutConstant
  UInt32 WriteTotalTimeoutMultiplier
  UInt32 WriteTotalTimeoutConstant
  UInt32 MaxDWord
Свойства:
Методы:
  void .ctor(int read_timeout, int write_timeout)
  void SetValues(int read_timeout, int write_timeout)
--------------------------------------------------
Класс: System.IO.Ports.CommStat
Наследуется от: ValueType
Поля:
  UInt32 flags
  UInt32 BytesIn
  UInt32 BytesOut
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.CoreFX.FileSystemWatcher
Наследуется от: Component
Поля:
  int _currentSession
  SafeFileHandle _directoryHandle
  NormalizedFilterCollection _filters
  string _directory
  NotifyFilters c_defaultNotifyFilters
  NotifyFilters _notifyFilters
  bool _includeSubdirectories
  bool _enabled
  bool _initializing
  UInt32 _internalBufferSize
  bool _disposed
  FileSystemEventHandler _onChangedHandler
  FileSystemEventHandler _onCreatedHandler
  FileSystemEventHandler _onDeletedHandler
  RenamedEventHandler _onRenamedHandler
  ErrorEventHandler _onErrorHandler
  Char[] s_wildcards
  int c_notifyFiltersValidMask
  ISynchronizeInvoke <SynchronizingObject>k__BackingField
Свойства:
  NotifyFilters NotifyFilter
  Collection`1<string> Filters
  bool EnableRaisingEvents
  string Filter
  bool IncludeSubdirectories
  int InternalBufferSize
  string Path
  ISite Site
  ISynchronizeInvoke SynchronizingObject
Методы:
  void StartRaisingEvents()
  void StopRaisingEvents()
  void FinalizeDispose()
  bool IsHandleInvalid(SafeFileHandle handle)
  void Monitor(AsyncReadState state)
  void ReadDirectoryChangesCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* overlappedPointer)
  void ParseEventBufferAndNotifyForEach(Byte[] buffer)
  void .ctor()
  void .ctor(string path)
  void .ctor(string path, string filter)
  NotifyFilters get_NotifyFilter()
  void set_NotifyFilter(NotifyFilters value)
  Collection`1<string> get_Filters()
  bool get_EnableRaisingEvents()
  void set_EnableRaisingEvents(bool value)
  string get_Filter()
  void set_Filter(string value)
  bool get_IncludeSubdirectories()
  void set_IncludeSubdirectories(bool value)
  int get_InternalBufferSize()
  void set_InternalBufferSize(int value)
  Byte[] AllocateBuffer()
  string get_Path()
  void set_Path(string value)
  void add_Changed(FileSystemEventHandler value)
  void remove_Changed(FileSystemEventHandler value)
  void add_Created(FileSystemEventHandler value)
  void remove_Created(FileSystemEventHandler value)
  void add_Deleted(FileSystemEventHandler value)
  void remove_Deleted(FileSystemEventHandler value)
  void add_Error(ErrorEventHandler value)
  void remove_Error(ErrorEventHandler value)
  void add_Renamed(RenamedEventHandler value)
  void remove_Renamed(RenamedEventHandler value)
  void Dispose(bool disposing)
  void CheckPathValidity(string path)
  bool MatchPattern(ReadOnlySpan`1<char> relativePath)
  void NotifyInternalBufferOverflowEvent()
  void NotifyRenameEventArgs(WatcherChangeTypes action, ReadOnlySpan`1<char> name, ReadOnlySpan`1<char> oldName)
  FileSystemEventHandler GetHandler(WatcherChangeTypes changeType)
  void NotifyFileSystemEventArgs(WatcherChangeTypes changeType, ReadOnlySpan`1<char> name)
  void NotifyFileSystemEventArgs(WatcherChangeTypes changeType, string name)
  void OnChanged(FileSystemEventArgs e)
  void OnCreated(FileSystemEventArgs e)
  void OnDeleted(FileSystemEventArgs e)
  void InvokeOn(FileSystemEventArgs e, FileSystemEventHandler handler)
  void OnError(ErrorEventArgs e)
  void OnRenamed(RenamedEventArgs e)
  WaitForChangedResult WaitForChanged(WatcherChangeTypes changeType)
  WaitForChangedResult WaitForChanged(WatcherChangeTypes changeType, int timeout)
  void Restart()
  void StartRaisingEventsIfNotDisposed()
  ISite get_Site()
  void set_Site(ISite value)
  ISynchronizeInvoke get_SynchronizingObject()
  void set_SynchronizingObject(ISynchronizeInvoke value)
  void BeginInit()
  void EndInit()
  bool IsSuspended()
  void .cctor()
--------------------------------------------------
Класс: System.IO.Compression.CompressionLevel
Наследуется от: Enum
Поля:
  int value__
  CompressionLevel Optimal
  CompressionLevel Fastest
  CompressionLevel NoCompression
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.CompressionMode
Наследуется от: Enum
Поля:
  int value__
  CompressionMode Decompress
  CompressionMode Compress
Свойства:
Методы:
--------------------------------------------------
Класс: System.IO.Compression.GZipStream
Наследуется от: Stream
Поля:
  DeflateStream _deflateStream
Свойства:
  bool CanRead
  bool CanWrite
  bool CanSeek
  long Length
  long Position
  Stream BaseStream
Методы:
  void .ctor(Stream stream, CompressionMode mode)
  void .ctor(Stream stream, CompressionMode mode, bool leaveOpen)
  void .ctor(Stream stream, CompressionLevel compressionLevel)
  void .ctor(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)
  bool get_CanRead()
  bool get_CanWrite()
  bool get_CanSeek()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Flush()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  int ReadByte()
  IAsyncResult BeginRead(Byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  int EndRead(IAsyncResult asyncResult)
  int Read(Byte[] array, int offset, int count)
  int Read(Span`1<byte> buffer)
  IAsyncResult BeginWrite(Byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  void EndWrite(IAsyncResult asyncResult)
  void Write(Byte[] array, int offset, int count)
  void Write(ReadOnlySpan`1<byte> buffer)
  void CopyTo(Stream destination, int bufferSize)
  void Dispose(bool disposing)
  Stream get_BaseStream()
  Task`1<int> ReadAsync(Byte[] array, int offset, int count, CancellationToken cancellationToken)
  ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken)
  Task WriteAsync(Byte[] array, int offset, int count, CancellationToken cancellationToken)
  ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken)
  Task FlushAsync(CancellationToken cancellationToken)
  Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
  void CheckDeflateStream()
  void ThrowStreamClosedException()
--------------------------------------------------
Класс: System.IO.Compression.DeflateStream
Наследуется от: Stream
Поля:
  Stream base_stream
  CompressionMode mode
  bool leaveOpen
  bool disposed
  DeflateStreamNative native
Свойства:
  Stream BaseStream
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor(Stream stream, CompressionMode mode)
  void .ctor(Stream stream, CompressionMode mode, bool leaveOpen)
  void .ctor(Stream stream, CompressionMode mode, bool leaveOpen, int windowsBits)
  void .ctor(Stream compressedStream, CompressionMode mode, bool leaveOpen, bool gzip)
  void .ctor(Stream stream, CompressionLevel compressionLevel)
  void .ctor(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)
  void .ctor(Stream stream, CompressionLevel compressionLevel, bool leaveOpen, int windowsBits)
  void .ctor(Stream stream, CompressionLevel compressionLevel, bool leaveOpen, bool gzip)
  void Finalize()
  void Dispose(bool disposing)
  int ReadInternal(Byte[] array, int offset, int count)
  ValueTask`1<int> ReadAsyncMemory(Memory`1<byte> destination, CancellationToken cancellationToken)
  int ReadCore(Span`1<byte> destination)
  int Read(Byte[] array, int offset, int count)
  void WriteInternal(Byte[] array, int offset, int count)
  ValueTask WriteAsyncMemory(ReadOnlyMemory`1<byte> source, CancellationToken cancellationToken)
  void WriteCore(ReadOnlySpan`1<byte> source)
  void Write(Byte[] array, int offset, int count)
  void Flush()
  IAsyncResult BeginRead(Byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  IAsyncResult BeginWrite(Byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState)
  int EndRead(IAsyncResult asyncResult)
  void EndWrite(IAsyncResult asyncResult)
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  Stream get_BaseStream()
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
--------------------------------------------------
Класс: System.IO.Compression.DeflateStreamNative
Наследуется от: object
Поля:
  int BufferSize
  UnmanagedReadOrWrite feeder
  Stream base_stream
  SafeDeflateStreamHandle z_stream
  GCHandle data
  bool disposed
  Byte[] io_buffer
  Exception last_error
Свойства:
Методы:
  void .ctor()
  DeflateStreamNative Create(Stream compressedStream, CompressionMode mode, bool gzip)
  void Finalize()
  void Dispose(bool disposing)
  void Flush()
  int ReadZStream(IntPtr buffer, int length)
  void WriteZStream(IntPtr buffer, int length)
  int UnmanagedRead(IntPtr buffer, int length, IntPtr data)
  int UnmanagedRead(IntPtr buffer, int length)
  int UnmanagedWrite(IntPtr buffer, int length, IntPtr data)
  int UnmanagedWrite(IntPtr buffer, int length)
  void CheckResult(int result, string where)
  SafeDeflateStreamHandle CreateZStream(CompressionMode compress, bool gzip, UnmanagedReadOrWrite feeder, IntPtr data)
  int CloseZStream(IntPtr stream)
  int Flush(SafeDeflateStreamHandle stream)
  int ReadZStream(SafeDeflateStreamHandle stream, IntPtr buffer, int length)
  int WriteZStream(SafeDeflateStreamHandle stream, IntPtr buffer, int length)
--------------------------------------------------
Класс: System.IO.Compression.ZLibNative
Наследуется от: object
Поля:
  int GZip_DefaultWindowBits
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=256 00C700F38385659BA060672F86D4A9A5376EADF9ED1CABB1C63290A0FDEFE36A
  __StaticArrayInitTypeSize=32 04D9D643E5A26924DC98C9906714082D395DCB17CEE9674D5EBFEC15D098C2B5
  __StaticArrayInitTypeSize=32 063691760A57230E8119DF650327304D68AE1C009E476E48BE8C73DCA199D374
  __StaticArrayInitTypeSize=14 07FEA8B695D401E2B3BBDA6126C123DAA87153BB12384B21272ACC90823AC9A3
  long 1417FCAA8455DC8E3C88BF916DD5C75746A2597CC052F212A8E4394C890E012B
  __StaticArrayInitTypeSize=256 21244F82B210125632917591768F6BF22EB6861F80C6C25A25BD26DFB580EA7B
  __StaticArrayInitTypeSize=16 2125B2C332B1113AAE9BFC5E9F7E3B4C91D828CB942C2DF1EEB02502ECCAE9E9
  __StaticArrayInitTypeSize=9 27625E383C3A91E8B65BC745FF5D4048C82B883CCD293B07DED697BF82733811
  __StaticArrayInitTypeSize=32 2EF83B43314F8CD03190EEE30ECCF048DA37791237F27C62A579F23EACE9FD70
  long 34B06173CE6C3C7CBDB99C416ECB98BD8F75845A7E23ED4B039EC239EB5559AA
  long 3505B8A2248AC03FE41ACADF8F29294572BBADEE1DD2E1A45D025766681C012C
  __StaticArrayInitTypeSize=12 356A582FCE68ACAE8FC944F7B4F0C0DA2BFF4A90D3767C75905F3EDE2E4E66CF
  __StaticArrayInitTypeSize=6 3981C8DFF7DC0FD5962B5FB863DD1A0D4119D320706BFF88FD6F636AC6B93AFF
  __StaticArrayInitTypeSize=6 403437D13B88F9747B77293CF0005E5570505DDE480AFCE7F2BC23DDDBE0F140
  __StaticArrayInitTypeSize=6 40AE2D0932F1E381C2D74CC90C0CDB9E9B281F32D52EC31C9F1B51CDCB209C19
  __StaticArrayInitTypeSize=2024 4186171278342045F6399928145039267A761B52DE295D22617755191250963B
  __StaticArrayInitTypeSize=10 421850DB45F9A3D4A05F06F1D04DA5874C2F7688E0E4148D479C2E9ECA125AE1
  __StaticArrayInitTypeSize=9 684312AFB7719E57993D2826FFBAF7EA965614F20F91D999FB19B01E21AA62E6
  long 6C8F647E1FCD63826D12272FF0930E9C16F1FFEF719948703A4C0F3B90052885
  __StaticArrayInitTypeSize=128 8109EF063456779751E8A4AEE94A0BE9AE32827B6EB153ABD7F40057FF2C9CE3
  __StaticArrayInitTypeSize=44 9001C3EDE1D7E939C07996B84F82F7CBE59A7266C1FC2735E959E3C8609602E8
  __StaticArrayInitTypeSize=5 933B971C6388D594A23FA1559825DB5BEC8ADE2DB1240AA8FC9D0C684949E8C9
  long 9AB02D4EDAFA1AFB26F1BAB7CDF573693435A48FFF5C20EDE5054E1CEEB23923
  __StaticArrayInitTypeSize=12 9DB0F923DCA529159AFF809431DDCC62C801C60246F66B693B861CBF79292994
  __StaticArrayInitTypeSize=6 9F58F1261D211553DE8FBC1AFA477C84EA3974B9BFF38223D771D0CDA787E15A
  __StaticArrayInitTypeSize=128 B849624EC20707184A433E21DAAC963906D4B261A19BD8F139F0E269E59E308C
  long BB6BB42AC5453BD8AA992CCB8929F1CB7D4E112E3FC56E57D711E106D1F72859
  __StaticArrayInitTypeSize=6 CCB8E87DA26F5138481631D85E025CD55F0DE5BFAEF33909EAABD6D513EF4B89
  __StaticArrayInitTypeSize=16 D8ED7A8616A6522B2608F26CB6C47642183E3A039248D45231D0CF2E836CBC7D
  __StaticArrayInitTypeSize=14 DFA7289CF8D8029ACEE90F30530C6926950E8DD20285772458F271AFD015BAD5
  __StaticArrayInitTypeSize=506 E1284F363C1A2B6A4343050EF21AEF5522855D9D77B656F54D1933235476FADC
  __StaticArrayInitTypeSize=65 E173D43DE98094098259467FF632B4FC61496AF96F3A354A006360D246E8166F
  __StaticArrayInitTypeSize=10 E478CC6C0579E2198C99BFDE0ABAADC66644AF69312CB9D6E94E2D4E3559482A
  __StaticArrayInitTypeSize=256 F2830F044682E33B39018B5912634835B641562914E192CA66C654F5E4492FA8
Свойства:
Методы:
  UInt32 ComputeStringHash(string s)
--------------------------------------------------
Класс: System.Net.Configuration.HttpListenerElement
Наследуется от: ConfigurationElement
Поля:
Свойства:
  HttpListenerTimeoutsElement Timeouts
  bool UnescapeRequestUrl
Методы:
  void .ctor()
  HttpListenerTimeoutsElement get_Timeouts()
  bool get_UnescapeRequestUrl()
--------------------------------------------------
Класс: System.Net.Configuration.HttpListenerTimeoutsElement
Наследуется от: ConfigurationElement
Поля:
Свойства:
  TimeSpan DrainEntityBody
  TimeSpan EntityBody
  TimeSpan HeaderWait
  TimeSpan IdleConnection
  long MinSendBytesPerSecond
  TimeSpan RequestQueue
Методы:
  void .ctor()
  TimeSpan get_DrainEntityBody()
  TimeSpan get_EntityBody()
  TimeSpan get_HeaderWait()
  TimeSpan get_IdleConnection()
  long get_MinSendBytesPerSecond()
  TimeSpan get_RequestQueue()
--------------------------------------------------
Класс: System.Net.Configuration.WebUtilityElement
Наследуется от: ConfigurationElement
Поля:
Свойства:
  UnicodeDecodingConformance UnicodeDecodingConformance
  UnicodeEncodingConformance UnicodeEncodingConformance
Методы:
  void .ctor()
  UnicodeDecodingConformance get_UnicodeDecodingConformance()
  void set_UnicodeDecodingConformance(UnicodeDecodingConformance value)
  UnicodeEncodingConformance get_UnicodeEncodingConformance()
  void set_UnicodeEncodingConformance(UnicodeEncodingConformance value)
--------------------------------------------------
Класс: System.Net.Configuration.WindowsAuthenticationElement
Наследуется от: ConfigurationElement
Поля:
Свойства:
  int DefaultCredentialsHandleCacheSize
Методы:
  void .ctor()
  int get_DefaultCredentialsHandleCacheSize()
  void set_DefaultCredentialsHandleCacheSize(int value)
--------------------------------------------------
Класс: System.Configuration.SchemeSettingElementCollection
Наследуется от: ConfigurationElementCollection
Поля:
Свойства:
  SchemeSettingElement Item
Методы:
  void .ctor()
  SchemeSettingElement get_Item(int index)
  ConfigurationElement CreateNewElement()
  object GetElementKey(ConfigurationElement element)
  int IndexOf(SchemeSettingElement element)
--------------------------------------------------
Класс: System.Configuration.SchemeSettingElement
Наследуется от: ConfigurationElement
Поля:
Свойства:
  GenericUriParserOptions GenericUriParserOptions
  string Name
Методы:
  void .ctor()
  GenericUriParserOptions get_GenericUriParserOptions()
  string get_Name()
--------------------------------------------------
Класс: System.Reflection.ICustomTypeProvider
Поля:
Свойства:
Методы:
  Type GetCustomType()
--------------------------------------------------
Класс: System.Security.Permissions.TypeDescriptorPermissionAttribute
Наследуется от: CodeAccessSecurityAttribute
Поля:
Свойства:
  TypeDescriptorPermissionFlags Flags
  bool RestrictedRegistrationAccess
Методы:
  void .ctor(SecurityAction action)
  TypeDescriptorPermissionFlags get_Flags()
  void set_Flags(TypeDescriptorPermissionFlags value)
  bool get_RestrictedRegistrationAccess()
  void set_RestrictedRegistrationAccess(bool value)
  IPermission CreatePermission()
--------------------------------------------------
Класс: Unity.ThrowStub
Наследуется от: ObjectDisposedException
Поля:
Свойства:
Методы:
  void ThrowNotSupportedException()
--------------------------------------------------
