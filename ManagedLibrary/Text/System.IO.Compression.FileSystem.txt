Сборка: System.IO.Compression.FileSystem.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoCorlibVersion
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: SR
Наследуется от: object
Поля:
  string IO_DirectoryNameWithData
  string IO_ExtractingResultsInOutside
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.IO.PathInternal
Наследуется от: object
Поля:
  bool s_isCaseSensitive
Свойства:
  StringComparison StringComparison
  bool IsCaseSensitive
Методы:
  StringComparison get_StringComparison()
  bool get_IsCaseSensitive()
  bool GetIsCaseSensitive()
  void .cctor()
--------------------------------------------------
Класс: System.IO.Compression.ZipFile
Наследуется от: object
Поля:
  char PathSeparator
Свойства:
Методы:
  ZipArchive OpenRead(string archiveFileName)
  ZipArchive Open(string archiveFileName, ZipArchiveMode mode)
  ZipArchive Open(string archiveFileName, ZipArchiveMode mode, Encoding entryNameEncoding)
  void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName)
  void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, CompressionLevel compressionLevel, bool includeBaseDirectory)
  void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, CompressionLevel compressionLevel, bool includeBaseDirectory, Encoding entryNameEncoding)
  void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName)
  void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwrite)
  void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, Encoding entryNameEncoding)
  void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, Encoding entryNameEncoding, bool overwrite)
  void DoCreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, Nullable`1<CompressionLevel> compressionLevel, bool includeBaseDirectory, Encoding entryNameEncoding)
  string EntryFromPath(string entry, int offset, int length, Char[]& buffer, bool appendPathSeparator)
  void EnsureCapacity(Char[]& buffer, int min)
  bool IsDirEmpty(DirectoryInfo possiblyEmptyDir)
--------------------------------------------------
Класс: System.IO.Compression.ZipFileExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ZipArchiveEntry CreateEntryFromFile(ZipArchive destination, string sourceFileName, string entryName)
  ZipArchiveEntry CreateEntryFromFile(ZipArchive destination, string sourceFileName, string entryName, CompressionLevel compressionLevel)
  void ExtractToDirectory(ZipArchive source, string destinationDirectoryName)
  void ExtractToDirectory(ZipArchive source, string destinationDirectoryName, bool overwrite)
  ZipArchiveEntry DoCreateEntryFromFile(ZipArchive destination, string sourceFileName, string entryName, Nullable`1<CompressionLevel> compressionLevel)
  void ExtractToFile(ZipArchiveEntry source, string destinationFileName)
  void ExtractToFile(ZipArchiveEntry source, string destinationFileName, bool overwrite)
--------------------------------------------------
