Сборка: UnityEngine.NVIDIAModule.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Microsoft.CodeAnalysis.EmbeddedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsReadOnlyAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.NVUnityPlugin
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Load()
  bool IsLoaded()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSFeatureFlags
Наследуется от: Enum
Поля:
  int value__
  DLSSFeatureFlags None
  DLSSFeatureFlags IsHDR
  DLSSFeatureFlags MVLowRes
  DLSSFeatureFlags MVJittered
  DLSSFeatureFlags DepthInverted
  DLSSFeatureFlags DoSharpening
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSQuality
Наследуется от: Enum
Поля:
  int value__
  DLSSQuality MaximumQuality
  DLSSQuality Balanced
  DLSSQuality MaximumPerformance
  DLSSQuality UltraPerformance
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NVIDIA.InitDeviceCmdData
Наследуется от: ValueType
Поля:
  IntPtr m_ProjectId
  IntPtr m_EngineVersion
  IntPtr m_AppDir
Свойства:
  IntPtr projectId
  IntPtr engineVersion
  IntPtr appDir
Методы:
  void set_projectId(IntPtr value)
  IntPtr get_projectId()
  void set_engineVersion(IntPtr value)
  IntPtr get_engineVersion()
  void set_appDir(IntPtr value)
  IntPtr get_appDir()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSCommandInitializationData
Наследуется от: ValueType
Поля:
  UInt32 m_InputRTWidth
  UInt32 m_InputRTHeight
  UInt32 m_OutputRTWidth
  UInt32 m_OutputRTHeight
  DLSSQuality m_Quality
  DLSSFeatureFlags m_Flags
  UInt32 m_FeatureSlot
Свойства:
  UInt32 inputRTWidth
  UInt32 inputRTHeight
  UInt32 outputRTWidth
  UInt32 outputRTHeight
  DLSSQuality quality
  DLSSFeatureFlags featureFlags
  UInt32 featureSlot
Методы:
  void set_inputRTWidth(UInt32 value)
  UInt32 get_inputRTWidth()
  void set_inputRTHeight(UInt32 value)
  UInt32 get_inputRTHeight()
  void set_outputRTWidth(UInt32 value)
  UInt32 get_outputRTWidth()
  void set_outputRTHeight(UInt32 value)
  UInt32 get_outputRTHeight()
  void set_quality(DLSSQuality value)
  DLSSQuality get_quality()
  void set_featureFlags(DLSSFeatureFlags value)
  DLSSFeatureFlags get_featureFlags()
  void set_featureSlot(UInt32 value)
  UInt32 get_featureSlot()
  void SetFlag(DLSSFeatureFlags flag, bool value)
  bool GetFlag(DLSSFeatureFlags flag)
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSTextureTable
Наследуется от: ValueType
Поля:
  Texture <colorInput>k__BackingField
  Texture <colorOutput>k__BackingField
  Texture <depth>k__BackingField
  Texture <motionVectors>k__BackingField
  Texture <transparencyMask>k__BackingField
  Texture <exposureTexture>k__BackingField
  Texture <biasColorMask>k__BackingField
Свойства:
  Texture colorInput
  Texture colorOutput
  Texture depth
  Texture motionVectors
  Texture transparencyMask
  Texture exposureTexture
  Texture biasColorMask
Методы:
  void set_colorInput(Texture value)
  Texture get_colorInput()
  void set_colorOutput(Texture value)
  Texture get_colorOutput()
  void set_depth(Texture value)
  Texture get_depth()
  void set_motionVectors(Texture value)
  Texture get_motionVectors()
  void set_transparencyMask(Texture value)
  Texture get_transparencyMask()
  void set_exposureTexture(Texture value)
  Texture get_exposureTexture()
  void set_biasColorMask(Texture value)
  Texture get_biasColorMask()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSCommandExecutionData
Наследуется от: ValueType
Поля:
  int m_Reset
  float m_Sharpness
  float m_MVScaleX
  float m_MVScaleY
  float m_JitterOffsetX
  float m_JitterOffsetY
  float m_PreExposure
  UInt32 m_SubrectOffsetX
  UInt32 m_SubrectOffsetY
  UInt32 m_SubrectWidth
  UInt32 m_SubrectHeight
  UInt32 m_InvertXAxis
  UInt32 m_InvertYAxis
  UInt32 m_FeatureSlot
Свойства:
  int reset
  float sharpness
  float mvScaleX
  float mvScaleY
  float jitterOffsetX
  float jitterOffsetY
  float preExposure
  UInt32 subrectOffsetX
  UInt32 subrectOffsetY
  UInt32 subrectWidth
  UInt32 subrectHeight
  UInt32 invertXAxis
  UInt32 invertYAxis
  UInt32 featureSlot
Методы:
  void set_reset(int value)
  int get_reset()
  void set_sharpness(float value)
  float get_sharpness()
  void set_mvScaleX(float value)
  float get_mvScaleX()
  void set_mvScaleY(float value)
  float get_mvScaleY()
  void set_jitterOffsetX(float value)
  float get_jitterOffsetX()
  void set_jitterOffsetY(float value)
  float get_jitterOffsetY()
  void set_preExposure(float value)
  float get_preExposure()
  void set_subrectOffsetX(UInt32 value)
  UInt32 get_subrectOffsetX()
  void set_subrectOffsetY(UInt32 value)
  UInt32 get_subrectOffsetY()
  void set_subrectWidth(UInt32 value)
  UInt32 get_subrectWidth()
  void set_subrectHeight(UInt32 value)
  UInt32 get_subrectHeight()
  void set_invertXAxis(UInt32 value)
  UInt32 get_invertXAxis()
  void set_invertYAxis(UInt32 value)
  UInt32 get_invertYAxis()
  void set_featureSlot(UInt32 value)
  UInt32 get_featureSlot()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.OptimalDLSSSettingsData
Наследуется от: ValueType
Поля:
  UInt32 m_OutRenderWidth
  UInt32 m_OutRenderHeight
  float m_Sharpness
  UInt32 m_MaxWidth
  UInt32 m_MaxHeight
  UInt32 m_MinWidth
  UInt32 m_MinHeight
Свойства:
  UInt32 outRenderWidth
  UInt32 outRenderHeight
  float sharpness
  UInt32 maxWidth
  UInt32 maxHeight
  UInt32 minWidth
  UInt32 minHeight
Методы:
  UInt32 get_outRenderWidth()
  UInt32 get_outRenderHeight()
  float get_sharpness()
  UInt32 get_maxWidth()
  UInt32 get_maxHeight()
  UInt32 get_minWidth()
  UInt32 get_minHeight()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSDebugFeatureInfos
Наследуется от: ValueType
Поля:
  bool m_ValidFeature
  UInt32 m_FeatureSlot
  DLSSCommandExecutionData m_ExecData
  DLSSCommandInitializationData m_InitData
Свойства:
  bool validFeature
  UInt32 featureSlot
  DLSSCommandExecutionData execData
  DLSSCommandInitializationData initData
Методы:
  bool get_validFeature()
  UInt32 get_featureSlot()
  DLSSCommandExecutionData get_execData()
  DLSSCommandInitializationData get_initData()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.GraphicsDeviceDebugInfo
Наследуется от: ValueType
Поля:
  UInt32 NVDeviceVersion
  UInt32 NGXVersion
  DLSSDebugFeatureInfos* dlssInfos
  UInt32 dlssInfosCount
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NVIDIA.NativeData`1
Наследуется от: object
Поля:
  IntPtr m_MarshalledValue
  T Value
Свойства:
  IntPtr Ptr
Методы:
  IntPtr get_Ptr()
  void .ctor()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.NativeStr
Наследуется от: object
Поля:
  string m_Str
  IntPtr m_MarshalledString
Свойства:
  string Str
  IntPtr Ptr
Методы:
  void set_Str(string value)
  IntPtr get_Ptr()
  void Dispose()
  void Dispose(bool disposing)
  void Finalize()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.InitDeviceContext
Наследуется от: object
Поля:
  NativeStr m_ProjectId
  NativeStr m_EngineVersion
  NativeStr m_AppDir
  NativeData`1<InitDeviceCmdData> m_InitData
Свойства:
Методы:
  void .ctor(string projectId, string engineVersion, string appDir)
  IntPtr GetInitCmdPtr()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.DLSSContext
Наследуется от: object
Поля:
  NativeData`1<DLSSCommandInitializationData> m_InitData
  NativeData`1<DLSSCommandExecutionData> m_ExecData
Свойства:
  DLSSCommandInitializationData& modreq(System.Runtime.InteropServices.InAttribute) initData
  DLSSCommandExecutionData& executeData
  UInt32 featureSlot
Методы:
  DLSSCommandInitializationData& modreq(System.Runtime.InteropServices.InAttribute) get_initData()
  DLSSCommandExecutionData& get_executeData()
  UInt32 get_featureSlot()
  void .ctor(DLSSCommandInitializationData initSettings, UInt32 featureSlot)
  IntPtr GetInitCmdPtr()
  IntPtr GetExecuteCmdPtr()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.GraphicsDeviceDebugView
Наследуется от: object
Поля:
  UInt32 m_ViewId
  UInt32 m_DeviceVersion
  UInt32 m_NgxVersion
  DLSSDebugFeatureInfos[] m_DlssDebugFeatures
Свойства:
  UInt32 deviceVersion
  UInt32 ngxVersion
  IEnumerable`1<DLSSDebugFeatureInfos> dlssFeatureInfos
Методы:
  void .ctor(UInt32 viewId)
  UInt32 get_deviceVersion()
  UInt32 get_ngxVersion()
  IEnumerable`1<DLSSDebugFeatureInfos> get_dlssFeatureInfos()
--------------------------------------------------
Класс: UnityEngine.NVIDIA.GraphicsDeviceFeature
Наследуется от: Enum
Поля:
  int value__
  GraphicsDeviceFeature DLSS
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NVIDIA.PluginEvent
Наследуется от: Enum
Поля:
  int value__
  PluginEvent DestroyFeature
  PluginEvent DLSSExecute
  PluginEvent DLSSInit
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NVIDIA.GraphicsDevice
Наследуется от: object
Поля:
  string s_DefaultProjectID
  string s_DefaultAppDir
  GraphicsDevice sGraphicsDeviceInstance
  InitDeviceContext m_InitDeviceContext
Свойства:
  GraphicsDevice device
  UInt32 version
Методы:
  void .ctor(string projectId, string engineVersion, string appDir)
  bool Initialize()
  void Shutdown()
  void Finalize()
  void InsertEventCall(CommandBuffer cmd, PluginEvent pluginEvent, IntPtr ptr)
  GraphicsDevice InternalCreate(string appIdOrProjectId, string engineVersion, string appDir)
  int CreateSetTextureUserData(int featureId, int textureSlot, bool clearTextureTable)
  void SetTexture(CommandBuffer cmd, DLSSContext dlssContext, Textures textureSlot, Texture texture, bool clearTextureTable)
  GraphicsDeviceDebugInfo GetDebugInfo(UInt32 debugViewId)
  UInt32 CreateDebugViewId()
  void DeleteDebugViewId(UInt32 debugViewId)
  GraphicsDevice CreateGraphicsDevice()
  GraphicsDevice CreateGraphicsDevice(string projectID)
  GraphicsDevice CreateGraphicsDevice(string projectID, string appDir)
  GraphicsDevice get_device()
  UInt32 get_version()
  bool IsFeatureAvailable(GraphicsDeviceFeature featureID)
  DLSSContext CreateFeature(CommandBuffer cmd, DLSSCommandInitializationData& initSettings)
  void DestroyFeature(CommandBuffer cmd, DLSSContext dlssContext)
  void ExecuteDLSS(CommandBuffer cmd, DLSSContext dlssContext, DLSSTextureTable& textures)
  bool GetOptimalSettings(UInt32 targetWidth, UInt32 targetHeight, DLSSQuality quality, OptimalDLSSSettingsData& optimalSettings)
  GraphicsDeviceDebugView CreateDebugView()
  void UpdateDebugView(GraphicsDeviceDebugView debugView)
  void DeleteDebugView(GraphicsDeviceDebugView debugView)
  bool NVUP_InitApi(IntPtr initData)
  void NVUP_ShutdownApi()
  bool NVUP_IsFeatureAvailable(GraphicsDeviceFeature featureID)
  bool NVUP_GetOptimalSettings(UInt32 inTargetWidth, UInt32 inTargetHeight, DLSSQuality inPerfVQuality, OptimalDLSSSettingsData& data)
  IntPtr NVUP_GetRenderEventCallback()
  IntPtr NVUP_GetSetTextureEventCallback()
  UInt32 NVUP_CreateFeatureSlot()
  UInt32 NVUP_GetDeviceVersion()
  UInt32 NVUP_CreateDebugView()
  void NVUP_GetGraphicsDeviceDebugInfo(UInt32 debugViewId, GraphicsDeviceDebugInfo& data)
  void NVUP_DeleteDebugView(UInt32 debugViewId)
  int NVUP_GetBaseEventId()
  void .cctor()
--------------------------------------------------
