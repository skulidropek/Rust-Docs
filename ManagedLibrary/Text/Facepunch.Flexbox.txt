Сборка: Facepunch.Flexbox.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexDirection
Наследуется от: Enum
Поля:
  int value__
  FlexDirection Row
  FlexDirection RowReverse
  FlexDirection Column
  FlexDirection ColumnReverse
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexJustify
Наследуется от: Enum
Поля:
  int value__
  FlexJustify Start
  FlexJustify End
  FlexJustify Center
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexAlign
Наследуется от: Enum
Поля:
  int value__
  FlexAlign Start
  FlexAlign End
  FlexAlign Center
  FlexAlign Stretch
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexAlignSelf
Наследуется от: ValueType
Поля:
  bool HasValue
  FlexAlign Value
Свойства:
Методы:
  FlexAlign GetValueOrDefault(FlexAlign defaultValue)
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexChildEnumerable
Наследуется от: ValueType
Поля:
  FlexElement _parent
  bool _reversed
Свойства:
Методы:
  void .ctor(FlexElement parent, bool reversed)
  FlexChildEnumerator GetEnumerator()
  IEnumerator`1<IFlexNode> System.Collections.Generic.IEnumerable<Facepunch.Flexbox.IFlexNode>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexChildEnumerator
Наследуется от: ValueType
Поля:
  Transform _parent
  int _childCount
  bool _reversed
  int _index
  IFlexNode <Current>k__BackingField
Свойства:
  IFlexNode Current
  object System.Collections.IEnumerator.Current
Методы:
  IFlexNode get_Current()
  void set_Current(IFlexNode value)
  void .ctor(FlexElement parent, bool reversed)
  bool MoveNext()
  object System.Collections.IEnumerator.get_Current()
  void Reset()
  void Dispose()
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexElement
Наследуется от: UIBehaviour
Поля:
  List`1<IFlexNode> SizingChildren
  FlexDirection FlexDirection
  FlexJustify JustifyContent
  FlexAlign AlignItems
  FlexPadding Padding
  float Gap
  FlexLength Basis
  int Grow
  FlexAlignSelf AlignSelf
  int Shrink
  bool IsAbsolute
  bool AutoSizeX
  bool AutoSizeY
  FlexLength MinWidth
  FlexLength MaxWidth
  FlexLength MinHeight
  FlexLength MaxHeight
  bool _isDirty
  bool _isDoingLayout
  float _prefWidth
  float _prefHeight
  int _growSum
  int _shrinkSum
  List`1<IFlexNode> _children
  ChildSizingParameters[] _childSizes
Свойства:
  bool IsHorizontal
  bool IsReversed
  RectTransform Facepunch.Flexbox.IFlexNode.Transform
  bool Facepunch.Flexbox.IFlexNode.IsActive
  bool Facepunch.Flexbox.IFlexNode.IsAbsolute
  bool Facepunch.Flexbox.IFlexNode.IsDirty
  FlexLength Facepunch.Flexbox.IFlexNode.MinWidth
  FlexLength Facepunch.Flexbox.IFlexNode.MaxWidth
  FlexLength Facepunch.Flexbox.IFlexNode.MinHeight
  FlexLength Facepunch.Flexbox.IFlexNode.MaxHeight
  FlexLength Facepunch.Flexbox.IFlexNode.Basis
  int Facepunch.Flexbox.IFlexNode.Grow
  int Facepunch.Flexbox.IFlexNode.Shrink
  FlexAlignSelf Facepunch.Flexbox.IFlexNode.AlignSelf
Методы:
  bool get_IsHorizontal()
  bool get_IsReversed()
  void SetLayoutDirty(bool force)
  void PerformLayout()
  void MeasureMainAxis()
  void LayoutMainAxis(float maxWidth, float maxHeight)
  void MeasureCrossAxis()
  void LayoutCrossAxis(float maxWidth, float maxHeight)
  T& Pick(bool value, T& ifTrue, T& ifFalse)
  float CalculateLengthValue(FlexLength& length, float fillValue, float defaultValue)
  void SetupTransform()
  RectTransform Facepunch.Flexbox.IFlexNode.get_Transform()
  bool Facepunch.Flexbox.IFlexNode.get_IsActive()
  bool Facepunch.Flexbox.IFlexNode.get_IsAbsolute()
  bool Facepunch.Flexbox.IFlexNode.get_IsDirty()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MinWidth()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MaxWidth()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MinHeight()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MaxHeight()
  FlexLength Facepunch.Flexbox.IFlexNode.get_Basis()
  int Facepunch.Flexbox.IFlexNode.get_Grow()
  int Facepunch.Flexbox.IFlexNode.get_Shrink()
  FlexAlignSelf Facepunch.Flexbox.IFlexNode.get_AlignSelf()
  void Facepunch.Flexbox.IFlexNode.MeasureHorizontal()
  void Facepunch.Flexbox.IFlexNode.LayoutHorizontal(float maxWidth, float maxHeight)
  void Facepunch.Flexbox.IFlexNode.MeasureVertical()
  void Facepunch.Flexbox.IFlexNode.LayoutVertical(float maxWidth, float maxHeight)
  void Facepunch.Flexbox.IFlexNode.GetScale(Single& scaleX, Single& scaleY)
  void Facepunch.Flexbox.IFlexNode.GetPreferredSize(Single& preferredWidth, Single& preferredHeight)
  void OnEnable()
  void OnDisable()
  void OnRectTransformDimensionsChange()
  void OnBeforeTransformParentChanged()
  void OnTransformParentChanged()
  void OnTransformChildrenChanged()
  void .ctor()
  void .cctor()
  bool <LayoutMainAxis>g__TakeGrowth|33_2(Single& value, float maxValue, float scale, <>c__DisplayClass33_0& , <>c__DisplayClass33_1& , <>c__DisplayClass33_2& )
  bool <LayoutMainAxis>g__TakeShrink|33_3(Single& value, float minValue, float scale, <>c__DisplayClass33_0& , <>c__DisplayClass33_1& , <>c__DisplayClass33_2& )
  float <LayoutMainAxis>g__GetMainAxisStart|33_1(bool isHorizontal, bool isReversed, <>c__DisplayClass33_0& )
  float <LayoutCrossAxis>g__GetCrossAxis|35_0(FlexAlign align, bool isHorizontal, float childWidth, float childHeight, <>c__DisplayClass35_0& )
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexLayoutManager
Наследуется от: MonoBehaviour
Поля:
  FlexLayoutManager <Instance>k__BackingField
  List`1<FlexElement> DirtyElements
  List`1<FlexElement> UpdatingElements
Свойства:
  FlexLayoutManager Instance
Методы:
  FlexLayoutManager get_Instance()
  void set_Instance(FlexLayoutManager value)
  void OnEnable()
  void OnDisable()
  void LateUpdate()
  void EnqueueLayout(FlexElement element)
  void FlushQueue()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexLength
Наследуется от: ValueType
Поля:
  bool HasValue
  float Value
  FlexUnit Unit
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexUnit
Наследуется от: Enum
Поля:
  int value__
  FlexUnit Pixels
  FlexUnit Percent
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexPadding
Наследуется от: ValueType
Поля:
  float left
  float right
  float top
  float bottom
Свойства:
Методы:
  void .ctor(float value)
  void .ctor(float left, float right, float top, float bottom)
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexText
Наследуется от: TextMeshProUGUI
Поля:
  FlexLength Basis
  int Grow
  int Shrink
  FlexAlignSelf AlignSelf
  FlexLength MinWidth
  FlexLength MaxWidth
  FlexLength MinHeight
  FlexLength MaxHeight
  bool _isDirty
  float _preferredWidth
  float _preferredHeight
Свойства:
  RectTransform Facepunch.Flexbox.IFlexNode.Transform
  bool Facepunch.Flexbox.IFlexNode.IsActive
  bool Facepunch.Flexbox.IFlexNode.IsAbsolute
  bool Facepunch.Flexbox.IFlexNode.IsDirty
  FlexLength Facepunch.Flexbox.IFlexNode.MinWidth
  FlexLength Facepunch.Flexbox.IFlexNode.MaxWidth
  FlexLength Facepunch.Flexbox.IFlexNode.MinHeight
  FlexLength Facepunch.Flexbox.IFlexNode.MaxHeight
  FlexLength Facepunch.Flexbox.IFlexNode.Basis
  int Facepunch.Flexbox.IFlexNode.Grow
  int Facepunch.Flexbox.IFlexNode.Shrink
  FlexAlignSelf Facepunch.Flexbox.IFlexNode.AlignSelf
Методы:
  void OnEnable()
  void OnDisable()
  void SetLayoutDirty()
  void SetupTransform()
  RectTransform Facepunch.Flexbox.IFlexNode.get_Transform()
  bool Facepunch.Flexbox.IFlexNode.get_IsActive()
  bool Facepunch.Flexbox.IFlexNode.get_IsAbsolute()
  bool Facepunch.Flexbox.IFlexNode.get_IsDirty()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MinWidth()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MaxWidth()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MinHeight()
  FlexLength Facepunch.Flexbox.IFlexNode.get_MaxHeight()
  FlexLength Facepunch.Flexbox.IFlexNode.get_Basis()
  int Facepunch.Flexbox.IFlexNode.get_Grow()
  int Facepunch.Flexbox.IFlexNode.get_Shrink()
  FlexAlignSelf Facepunch.Flexbox.IFlexNode.get_AlignSelf()
  void Facepunch.Flexbox.IFlexNode.SetLayoutDirty(bool force)
  void Facepunch.Flexbox.IFlexNode.MeasureHorizontal()
  void Facepunch.Flexbox.IFlexNode.LayoutHorizontal(float maxWidth, float maxHeight)
  void Facepunch.Flexbox.IFlexNode.MeasureVertical()
  void Facepunch.Flexbox.IFlexNode.LayoutVertical(float maxWidth, float maxHeight)
  void Facepunch.Flexbox.IFlexNode.GetScale(Single& scaleX, Single& scaleY)
  void Facepunch.Flexbox.IFlexNode.GetPreferredSize(Single& preferredWidth, Single& preferredHeight)
  void .ctor()
--------------------------------------------------
Класс: Facepunch.Flexbox.FlexTransition
Наследуется от: MonoBehaviour
Поля:
  Definition[] Transitions
  List`1<int> _pendingIds
  bool _currentState
Свойства:
Методы:
  void Start()
  void SwitchState(bool enabled, bool animate)
  void SwitchState(bool enabled)
  void ToggleState()
  LTDescr RunTransitionImpl(Definition& transition, bool animate)
  Single& Property(FlexElement element, TransitionProperty property)
  void .ctor()
--------------------------------------------------
Класс: Facepunch.Flexbox.IFlexNode
Поля:
Свойства:
  RectTransform Transform
  bool IsActive
  bool IsAbsolute
  bool IsDirty
  FlexLength MinWidth
  FlexLength MaxWidth
  FlexLength MinHeight
  FlexLength MaxHeight
  int Grow
  int Shrink
  FlexLength Basis
  FlexAlignSelf AlignSelf
Методы:
  RectTransform get_Transform()
  bool get_IsActive()
  bool get_IsAbsolute()
  bool get_IsDirty()
  FlexLength get_MinWidth()
  FlexLength get_MaxWidth()
  FlexLength get_MinHeight()
  FlexLength get_MaxHeight()
  int get_Grow()
  int get_Shrink()
  FlexLength get_Basis()
  FlexAlignSelf get_AlignSelf()
  void SetLayoutDirty(bool force)
  void MeasureHorizontal()
  void LayoutHorizontal(float maxWidth, float maxHeight)
  void MeasureVertical()
  void LayoutVertical(float maxWidth, float maxHeight)
  void GetScale(Single& scaleX, Single& scaleY)
  void GetPreferredSize(Single& preferredWidth, Single& preferredHeight)
--------------------------------------------------
Класс: Facepunch.Flexbox.Utility.FlexUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsPrefabRoot(GameObject gameObject)
--------------------------------------------------
