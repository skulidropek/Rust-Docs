Сборка: Assembly-CSharp.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: <>f__AnonymousType0`8
Наследуется от: object
Поля:
  <item_id>j__TPar <item_id>i__Field
  <shortname>j__TPar <shortname>i__Field
  <craft_time>j__TPar <craft_time>i__Field
  <workbench>j__TPar <workbench>i__Field
  <category>j__TPar <category>i__Field
  <display_name>j__TPar <display_name>i__Field
  <despawn_rarity>j__TPar <despawn_rarity>i__Field
  <ingredients>j__TPar <ingredients>i__Field
Свойства:
  <item_id>j__TPar item_id
  <shortname>j__TPar shortname
  <craft_time>j__TPar craft_time
  <workbench>j__TPar workbench
  <category>j__TPar category
  <display_name>j__TPar display_name
  <despawn_rarity>j__TPar despawn_rarity
  <ingredients>j__TPar ingredients
Методы:
  <item_id>j__TPar get_item_id()
  <shortname>j__TPar get_shortname()
  <craft_time>j__TPar get_craft_time()
  <workbench>j__TPar get_workbench()
  <category>j__TPar get_category()
  <display_name>j__TPar get_display_name()
  <despawn_rarity>j__TPar get_despawn_rarity()
  <ingredients>j__TPar get_ingredients()
  void .ctor(<item_id>j__TPar item_id, <shortname>j__TPar shortname, <craft_time>j__TPar craft_time, <workbench>j__TPar workbench, <category>j__TPar category, <display_name>j__TPar display_name, <despawn_rarity>j__TPar despawn_rarity, <ingredients>j__TPar ingredients)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType1`2
Наследуется от: object
Поля:
  <shortname>j__TPar <shortname>i__Field
  <amount>j__TPar <amount>i__Field
Свойства:
  <shortname>j__TPar shortname
  <amount>j__TPar amount
Методы:
  <shortname>j__TPar get_shortname()
  <amount>j__TPar get_amount()
  void .ctor(<shortname>j__TPar shortname, <amount>j__TPar amount)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType2`2
Наследуется от: object
Поля:
  <shortname>j__TPar <shortname>i__Field
  <prefab_id>j__TPar <prefab_id>i__Field
Свойства:
  <shortname>j__TPar shortname
  <prefab_id>j__TPar prefab_id
Методы:
  <shortname>j__TPar get_shortname()
  <prefab_id>j__TPar get_prefab_id()
  void .ctor(<shortname>j__TPar shortname, <prefab_id>j__TPar prefab_id)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType3`2
Наследуется от: object
Поля:
  <Key>j__TPar <Key>i__Field
  <value>j__TPar <value>i__Field
Свойства:
  <Key>j__TPar Key
  <value>j__TPar value
Методы:
  <Key>j__TPar get_Key()
  <value>j__TPar get_value()
  void .ctor(<Key>j__TPar Key, <value>j__TPar value)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType4`2
Наследуется от: object
Поля:
  <SteamId>j__TPar <SteamId>i__Field
  <Name>j__TPar <Name>i__Field
Свойства:
  <SteamId>j__TPar SteamId
  <Name>j__TPar Name
Методы:
  <SteamId>j__TPar get_SteamId()
  <Name>j__TPar get_Name()
  void .ctor(<SteamId>j__TPar SteamId, <Name>j__TPar Name)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType5`3
Наследуется от: object
Поля:
  <systemTzs>j__TPar <systemTzs>i__Field
  <windowsTzs>j__TPar <windowsTzs>i__Field
  <ianaTzs>j__TPar <ianaTzs>i__Field
Свойства:
  <systemTzs>j__TPar systemTzs
  <windowsTzs>j__TPar windowsTzs
  <ianaTzs>j__TPar ianaTzs
Методы:
  <systemTzs>j__TPar get_systemTzs()
  <windowsTzs>j__TPar get_windowsTzs()
  <ianaTzs>j__TPar get_ianaTzs()
  void .ctor(<systemTzs>j__TPar systemTzs, <windowsTzs>j__TPar windowsTzs, <ianaTzs>j__TPar ianaTzs)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType6`7
Наследуется от: object
Поля:
  <PlayerId>j__TPar <PlayerId>i__Field
  <PlayerName>j__TPar <PlayerName>i__Field
  <TargetId>j__TPar <TargetId>i__Field
  <TargetName>j__TPar <TargetName>i__Field
  <Subject>j__TPar <Subject>i__Field
  <Message>j__TPar <Message>i__Field
  <Type>j__TPar <Type>i__Field
Свойства:
  <PlayerId>j__TPar PlayerId
  <PlayerName>j__TPar PlayerName
  <TargetId>j__TPar TargetId
  <TargetName>j__TPar TargetName
  <Subject>j__TPar Subject
  <Message>j__TPar Message
  <Type>j__TPar Type
Методы:
  <PlayerId>j__TPar get_PlayerId()
  <PlayerName>j__TPar get_PlayerName()
  <TargetId>j__TPar get_TargetId()
  <TargetName>j__TPar get_TargetName()
  <Subject>j__TPar get_Subject()
  <Message>j__TPar get_Message()
  <Type>j__TPar get_Type()
  void .ctor(<PlayerId>j__TPar PlayerId, <PlayerName>j__TPar PlayerName, <TargetId>j__TPar TargetId, <TargetName>j__TPar TargetName, <Subject>j__TPar Subject, <Message>j__TPar Message, <Type>j__TPar Type)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType7`5
Наследуется от: object
Поля:
  <PlayerId>j__TPar <PlayerId>i__Field
  <PlayerName>j__TPar <PlayerName>i__Field
  <Subject>j__TPar <Subject>i__Field
  <Message>j__TPar <Message>i__Field
  <Type>j__TPar <Type>i__Field
Свойства:
  <PlayerId>j__TPar PlayerId
  <PlayerName>j__TPar PlayerName
  <Subject>j__TPar Subject
  <Message>j__TPar Message
  <Type>j__TPar Type
Методы:
  <PlayerId>j__TPar get_PlayerId()
  <PlayerName>j__TPar get_PlayerName()
  <Subject>j__TPar get_Subject()
  <Message>j__TPar get_Message()
  <Type>j__TPar get_Type()
  void .ctor(<PlayerId>j__TPar PlayerId, <PlayerName>j__TPar PlayerName, <Subject>j__TPar Subject, <Message>j__TPar Message, <Type>j__TPar Type)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: <>f__AnonymousType8`2
Наследуется от: object
Поля:
  <amountInCell>j__TPar <amountInCell>i__Field
  <count>j__TPar <count>i__Field
Свойства:
  <amountInCell>j__TPar amountInCell
  <count>j__TPar count
Методы:
  <amountInCell>j__TPar get_amountInCell()
  <count>j__TPar get_count()
  void .ctor(<amountInCell>j__TPar amountInCell, <count>j__TPar count)
  bool Equals(object value)
  int GetHashCode()
  string ToString()
--------------------------------------------------
Класс: Microsoft.CodeAnalysis.EmbeddedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IsUnmanagedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ClothingBenchmarkScene
Наследуется от: BenchmarkScene
Поля:
  GameObjectRef PlayerModelPrefab
  bool ChangeClothingEveryFrame
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectsBenchmarkScene
Наследуется от: BenchmarkScene
Поля:
  GameObjectRef[] effectPrefabs
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FireworkBenchmarkScene
Наследуется от: BenchmarkScene
Поля:
  GameObjectRef[] shellTypes
  int fireworkCount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FoliageGridBenchmarkScene
Наследуется от: BenchmarkScene
Поля:
  TerrainMeta terrainMeta
  GameObjectRef foliagePrefab
  GameObject foliageInstance
  GameObjectRef lodPrefab
  GameObject lodInstance
  GameObjectRef batchingPrefab
  GameObject batchingInstance
  Terrain terrain
  Transform viewpointA
  Transform viewpointB
  bool moveVantangePoint
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HitDetectionBenchmark
Наследуется от: BenchmarkScene
Поля:
  int PlayerCount
  GameObjectRef PlayerModelPrefab
  GameObjectRef PlayerCollisionPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MonumentBenchmarkScene
Наследуется от: BenchmarkScene
Поля:
  String[] monumentPrefabs
  Transform[] vantagePoints
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BenchmarkScene
Наследуется от: MonoBehaviour
Поля:
  string BenchmarkTitle
  string BenchmarkIdent
  int MaxNumberOfFrames
  int MaxNumberOfSeconds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainBenchmarkScene
Наследуется от: BenchmarkScene
Поля:
  Terrain terrain
  TerrainMeta terrainMeta
  Transform viewpointA
  Transform viewpointB
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TreeMarker
Наследуется от: BaseEntity
Поля:
  GameObjectRef hitEffect
  SoundDefinition hitEffectSound
  GameObjectRef spawnEffect
  Vector3 initialPosition
  bool SpherecastOnInit
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
--------------------------------------------------
Класс: NexusDock
Наследуется от: SingletonComponent`1<NexusDock>
Поля:
  Transform FerryWaypoint
  Transform[] QueuePoints
  Transform Arrival
  Transform Docking
  Transform Docked
  Transform CastingOff
  Transform Departure
  float WaitTime
  BoxCollider EjectionZone
  float TraceHeight
  LayerMask TraceLayerMask
  NexusFerry[] QueuedFerries
  NexusFerry CurrentFerry
Свойства:
Методы:
  Transform GetEntryPoint(NexusFerry ferry, Boolean& entered)
  bool Depart(NexusFerry ferry)
  bool TryFindEjectionPosition(Vector3& position, float radius)
  void CleanupQueuedFerries()
  void .ctor()
--------------------------------------------------
Класс: NexusDockTerminal
Наследуется от: BaseEntity
Поля:
  Phrase ScheduleSoonPhrase
  Phrase ScheduleMinutesPhrase
  Phrase ScheduleUnknownPhrase
  float TravelTime
  RustText[] ScheduleLabels
  List`1<ScheduleEntry> _scheduleEntries
  HashSet`1<string> SeenFerries
Свойства:
Методы:
  void InitShared()
  void AdminKill()
  void UpdateFerrySchedule()
  void CalculateFerryEstimates(List`1<ValueTuple`2<string, Nullable`1<float>>> estimates)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
  void <CalculateFerryEstimates>g__NextIdx|10_1(<>c__DisplayClass10_0& )
--------------------------------------------------
Класс: NexusFerry
Наследуется от: BaseEntity
Поля:
  float TravelVelocity
  float ApproachVelocity
  float StoppingVelocity
  float AccelerationSpeed
  float TurnSpeed
  float VelocityPreservationOnTurn
  float TargetDistanceThreshold
  GameObjectRef hornEffect
  Transform hornEffectTransform
  float departureHornLeadTime
  SphereCollider SphereCaster
  int CastSweepDegrees
  float CastSweepNoise
  LayerMask CastLayers
  float CastInterval
  float CastHitProtection
  int PathLookahead
  int PathLookaheadThreshold
  RustText[] NextZoneLabels
  long _timestamp
  string _ownerZone
  List`1<string> _schedule
  int _scheduleIndex
  State _state
  bool _isRetiring
  int _nextScheduleIndex
  bool _departureHornPlayed
  ListHashSet`1<NexusFerry> All
  List`1<NetworkableId> _transferredIds
  NexusDock _targetDock
  bool _isTransferring
  TimeSince _sinceStartedWaiting
  TimeSince _sinceLastTransferAttempt
  RealTimeSince _sinceLastNextIndexUpdate
  TimeSince _sincePathCalculation
  Nullable`1<Vector3> _pathTargetPosition
  Nullable`1<Quaternion> _pathTargetRotation
  Vector3 _velocity
Свойства:
  string OwnerZone
  bool IsRetiring
  string NextZone
  bool PositionTickFixedTime
Методы:
  string get_OwnerZone()
  bool get_IsRetiring()
  string get_NextZone()
  void Initialize(string ownerZone, List`1<string> schedule)
  void EnsureInitialized()
  void ServerInit()
  void DestroyShared()
  void FixedUpdate()
  FerryStatus GetStatus()
  void Retire()
  void UpdateSchedule(List`1<string> schedule)
  float GetNetworkTime()
  bool get_PositionTickFixedTime()
  void SwitchToNextState()
  State GetNextState(State currentState)
  State GetPreviousState(State currentState)
  void TransferToNextZone()
  Nullable`1<int> TryGetNextScheduleIndex()
  void EjectInactiveEntities(bool forceAll)
  void EjectEntity(BaseEntity entity)
  bool IsEntityActive(BaseEntity entity)
  bool IsPlayerReady(BasePlayer player)
  void PlayDepartureHornEffect()
  void PostServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  NexusFerry Get(NetworkableId entityId, long timestamp)
  bool MoveTowardsTarget()
  bool MoveTowardsPositionAvoidObstacles(Vector3 targetPosition)
  bool MoveTowardsTargetTransform()
  Transform GetTargetTransform(State state)
  bool MoveTowardsPosition(Vector3 targetPosition, Quaternion targetRotation)
  bool SphereCast(Vector3 direction, float distance, Single& travelDistance, Vector3& endPosition)
  Vector3 GetIslandTransferPosition()
  bool TryFindWaypointsTowards(Vector3 targetPosition, List`1<Vector3> waypoints)
  void .ctor()
  void .cctor()
  Vector3 <MoveTowardsPositionAvoidObstacles>g__ChooseWaypoint|71_0(Vector3 target)
--------------------------------------------------
Класс: NexusFerrySounds
Наследуется от: MonoBehaviour
Поля:
  NexusFerry ferry
  float roughHalfWidth
  float roughHalfLength
  float soundCullDistanceSq
  SoundDefinition engineLoopDef
  Sound engineLoop
  Modulator engineGainMod
  Modulator enginePitchMod
  SoundDefinition engineStartDef
  SoundDefinition engineStopDef
  AnimationCurve engineGainCurve
  AnimationCurve enginePitchCurve
  float engineGainChangeRate
  float enginePitchChangeRate
  Transform engineTransform
  SoundDefinition waterIdleDef
  SoundDefinition waterSideMovementSlowDef
  SoundDefinition waterSideMovementFastDef
  AnimationCurve waterMovementGainCurve
  float waterMovementGainChangeRate
  AnimationCurve waterDistanceGainCurve
  Sound leftWaterSound
  Modulator leftWaterGainMod
  Sound rightWaterSound
  Modulator rightWaterGainMod
  Vector3 sideSoundLineStern
  Vector3 sideSoundLineBow
  SoundDefinition dockArrivalSoundDef
  SoundDefinition dockDepartureSoundDef
  Transform dockSoundTransform
  Sound ambientIdleSound
  SoundDefinition ambientActiveLoopDef
  Sound ambientActiveSound
  Line leftSoundLine
  Line rightSoundLine
  bool engineOn
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NexusIsland
Наследуется от: BaseEntity
Поля:
  Flags ServerFullFlag
  Transform BillboardRoot
  Transform Billboard
  BoxCollider TransferZone
  BoxCollider SpawnZone
  float TraceHeight
  LayerMask TraceLayerMask
  Transform FerryWaypoint
  GameObjectRef MapMarkerPrefab
  Transform MapMarkerLocation
  string ZoneKey
  List`1<NexusIsland> All
Свойства:
Методы:
  void InitShared()
  void DestroyShared()
  bool CanTransfer(BaseEntity entity)
  ValueTuple`2<string, string> GetTransferDestination()
  bool TryFindPosition(Vector3& position, float radius)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void ServerInit()
  void .ctor()
  void .cctor()
  bool <TryFindPosition>g__IsValidPosition|16_0(Vector3 center, float extent)
--------------------------------------------------
Класс: INexusTransferTriggerController
Поля:
Свойства:
Методы:
  bool CanTransfer(BaseEntity entity)
  ValueTuple`2<string, string> GetTransferDestination()
--------------------------------------------------
Класс: NexusTransferTrigger
Наследуется от: BaseMonoBehaviour
Поля:
  MonoBehaviour Controller
  HashSet`1<BaseEntity> PendingEntities
  INexusTransferTriggerController _controller
Свойства:
Методы:
  void Start()
  void OnTriggerEnter(Collider other)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlayerIdleAnimationRandomiser
Наследуется от: StateMachineBehaviour
Поля:
  int MaxValue
  int Param_Random
  TimeSince lastRandomisation
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseFirework
Наследуется от: BaseCombatEntity
Поля:
  float fuseLength
  float activityLength
  Flags Flag_Spent
  float corpseDuration
  bool limitActiveCount
  int maxActiveFireworks
  HashSet`1<BaseFirework> _activeFireworks
Свойства:
Методы:
  bool IsLit()
  bool IsExhausted()
  int NumActiveFireworks()
  void TryLightFuse()
  void Begin()
  void OnExhausted()
  void Cleanup()
  void DoServerDestroy()
  void OnAttacked(HitInfo info)
  void Ignite(Vector3 fromPos)
  void StaggeredTryLightFuse()
  bool CanIgnite()
  bool CanPickup(BasePlayer player)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: FireworkShell
Наследуется от: BaseMonoBehaviour
Поля:
  float fuseLengthMin
  float fuseLengthMax
  float speedMin
  float speedMax
  ParticleSystem explodePFX
  SoundPlayer explodeSound
  float inaccuracyDegrees
  LightEx explosionLight
  float lifetime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MortarFirework
Наследуется от: RepeatingFirework
Поля:
  GameObjectRef[] shellTypes
  Transform emissionPoint
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PatternFirework
Наследуется от: MortarFirework
Поля:
  int CurrentVersion
  GameObjectRef FireworkDesignerDialog
  int MaxStars
  float ShellFuseLengthShort
  float ShellFuseLengthMed
  float ShellFuseLengthLong
  Design Design
  FuseLength ShellFuseLength
Свойства:
  UInt32[] GetContentCRCs
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
Методы:
  void DestroyShared()
  void ServerInit()
  void StartOpenDesigner(RPCMessage rpc)
  void ServerSetFireworkDesign(RPCMessage rpc)
  void SetShellFuseLength(RPCMessage rpc)
  bool PlayerCanModify(BasePlayer player)
  void Save(SaveInfo info)
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  UGCType get_ContentType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  void Load(LoadInfo info)
  float GetShellFuseLength()
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
--------------------------------------------------
Класс: PatternFireworkShell
Наследуется от: FireworkShell
Поля:
  GameObjectRef StarPrefab
  AnimationCurve StarCurve
  float Duration
  float Scale
  MinMax RandomSaturation
  MinMax RandomValue
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PatternFireworkStar
Наследуется от: MonoBehaviour
Поля:
  GameObject Pixel
  GameObject Explosion
  ParticleSystem[] ParticleSystems
Свойства:
Методы:
  void Initialize(Color color)
  void Explode()
  void .ctor()
--------------------------------------------------
Класс: PFXRepeatingFirework
Наследуется от: RepeatingFirework
Поля:
  ParticleSystemContainer pfx
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RepeatingFirework
Наследуется от: BaseFirework
Поля:
  float timeBetweenRepeats
  int maxRepeats
  SoundPlayer launchSound
  int numFired
Свойства:
Методы:
  void Begin()
  void SendFire()
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
--------------------------------------------------
Класс: FogMachine
Наследуется от: ContainerIOEntity
Поля:
  Flags FogFieldOn
  Flags MotionMode
  Flags Emitting
  Flags Flag_HasJuice
  float fogLength
  float nozzleBlastDuration
  float fuelPerSec
  float pendingFuel
Свойства:
Методы:
  bool IsEmitting()
  bool HasJuice()
  void SetFogOn(RPCMessage msg)
  void SetFogOff(RPCMessage msg)
  void SetMotionDetection(RPCMessage msg)
  void UpdateMotionMode()
  void CheckTrigger()
  void StartFogging()
  void EnableFogField()
  void DisableNozzle()
  void FinishFogging()
  void PostServerLoad()
  void PlayerStoppedLooting(BasePlayer player)
  int GetFuelAmount()
  bool HasFuel()
  bool UseFuel(float seconds)
  void UpdateHasPower(int inputAmount, int inputSlot)
  bool MotionModeEnabled()
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
--------------------------------------------------
Класс: StrobeLight
Наследуется от: IOEntity
Поля:
  float frequency
  MeshRenderer lightMesh
  Light strobeLight
  float speedSlow
  float speedMed
  float speedFast
  float burnRate
  float lifeTimeSeconds
  Flags Flag_Slow
  Flags Flag_Med
  Flags Flag_Fast
  int currentSpeed
Свойства:
Методы:
  float GetFrequency()
  void SetStrobe(RPCMessage msg)
  void SetStrobe(bool wantsOn)
  void SetStrobeSpeed(RPCMessage msg)
  void UpdateSpeedFlags()
  void ServerEnableStrobing(bool wantsOn)
  void SelfDamage()
  void UpdateHasPower(int inputAmount, int inputSlot)
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
--------------------------------------------------
Класс: CoalingTower
Наследуется от: IOEntity
Поля:
  BoxCollider unloadingBounds
  GameObjectRef oreStoragePrefab
  GameObjectRef fuelStoragePrefab
  MeshRenderer[] signalLightsExterior
  MeshRenderer[] signalLightsInterior
  Color greenLightOnColour
  Color yellowLightOnColour
  Animator vacuumAnimator
  float vacuumStartDelay
  ParticleSystemContainer unloadingFXContainerOre
  ParticleSystem[] unloadingFXMain
  ParticleSystem[] unloadingFXDust
  ParticleSystemContainer unloadingFXContainerFuel
  TokenisedPhrase noTraincar
  TokenisedPhrase noNextTraincar
  TokenisedPhrase noPrevTraincar
  TokenisedPhrase trainIsMoving
  TokenisedPhrase outputIsFull
  TokenisedPhrase trainHasThrottle
  GameObject buttonSoundPos
  SoundDefinition buttonPressSound
  SoundDefinition buttonReleaseSound
  SoundDefinition failedActionSound
  SoundDefinition failedShuntAlarmSound
  SoundDefinition armMovementLower
  SoundDefinition armMovementRaise
  SoundDefinition suctionAirStart
  SoundDefinition suctionAirStop
  SoundDefinition suctionAirLoop
  SoundDefinition suctionOreStart
  SoundDefinition suctionOreLoop
  SoundDefinition suctionOreStop
  SoundDefinition suctionOreInteriorLoop
  SoundDefinition oreBinLoop
  SoundDefinition suctionFluidStart
  SoundDefinition suctionFluidLoop
  SoundDefinition suctionFluidStop
  SoundDefinition suctionFluidInteriorLoop
  SoundDefinition fluidTankLoop
  GameObject interiorPipeSoundLocation
  GameObject armMovementSoundLocation
  GameObject armSuctionSoundLocation
  GameObject oreBinSoundLocation
  GameObject fluidTankSoundLocation
  NetworkedProperty`1<int> LootTypeIndex
  EntityRef`1<TrainCar> activeTrainCarRef
  EntityRef`1<TrainCarUnloadable> activeUnloadableRef
  Flags LinedUpFlag
  Flags HasUnloadableFlag
  Flags UnloadingInProgressFlag
  Flags MoveToNextInProgressFlag
  Flags MoveToPrevInProgressFlag
  EntityRef`1<OreHopper> oreStorageInstance
  EntityRef`1<PercentFullStorageContainer> fuelStorageInstance
  float TIME_TO_EMPTY
  Vector3 <UnloadingPos>k__BackingField
  List`1<CoalingTower> unloadersInWorld
  Sound armMovementLoopSound
  Sound suctionAirLoopSound
  Sound suctionMaterialLoopSound
  Sound interiorPipeLoopSound
  Sound unloadDestinationSound
  TrainCarUnloadable tcUnloadingNow
Свойства:
  bool HasTrainCar
  bool HasUnloadable
  bool HasUnloadableLinedUp
  Vector3 UnloadingPos
Методы:
  bool get_HasTrainCar()
  bool get_HasUnloadable()
  bool get_HasUnloadableLinedUp()
  Vector3 get_UnloadingPos()
  void set_UnloadingPos(Vector3 value)
  void InitShared()
  void DestroyShared()
  void Load(LoadInfo info)
  bool IsUnderAnUnloader(TrainCar trainCar, Boolean& isLinedUp, Vector3& unloaderPos)
  bool TrainCarIsUnder(TrainCar trainCar, Boolean& isLinedUp)
  OreHopper GetOreStorage()
  PercentFullStorageContainer GetFuelStorage()
  TrainCar GetActiveTrainCar()
  TrainCarUnloadable GetActiveUnloadable()
  bool OutputBinIsFull()
  bool WagonIsEmpty()
  bool CanUnloadNow(ActionAttemptStatus& attemptStatus)
  void Save(SaveInfo info)
  void PostServerLoad()
  void OnChildAdded(BaseEntity child)
  void OnEmpty()
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void SetActiveTrainCar(TrainCar trainCar)
  void ClearActiveTrainCar()
  void CheckWagonLinedUp()
  void CheckWagonLinedUp(bool networkUpdate)
  bool TryUnloadActiveWagon(ActionAttemptStatus& attemptStatus)
  void WagonBeginUnloadAnim()
  void EmptyTenPercent()
  void EndEmptyProcess(ActionAttemptStatus status)
  bool TryShuntTrain(bool next, ActionAttemptStatus& attemptStatus)
  void ShuntEnded(ActionAttemptStatus status)
  void RPC_Unload(RPCMessage msg)
  void RPC_Next(RPCMessage msg)
  void RPC_Prev(RPCMessage msg)
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: OreHopper
Наследуется от: PercentFullStorageContainer
Поля:
  Transform oreOutputMesh
  float visualPercentFull
  Vector3 _oreScale
Свойства:
Методы:
  void OnPercentFullChanged(float newPercentFull)
  void SetVisualOreLevel(float percentFull)
  void VisualLerpToOreLevel()
  void OreVisualLerpUpdate()
  void ServerInit()
  void .ctor()
--------------------------------------------------
Класс: WaterBaseNavGenTest
Наследуется от: MonoBehaviour
Поля:
  IEnumerator co
Свойства:
Методы:
  void NavGen()
  void .ctor()
--------------------------------------------------
Класс: CargoMoveTest
Наследуется от: FacepunchBehaviour
Поля:
  int targetNodeIndex
  float currentThrottle
  float turnScale
Свойства:
Методы:
  void Awake()
  void FindInitialNode()
  void Update()
  void UpdateMovement()
  int GetClosestNodeToUs()
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: CargoShip
Наследуется от: BaseEntity
Поля:
  int targetNodeIndex
  GameObject wakeParent
  GameObjectRef scientistTurretPrefab
  Transform[] scientistSpawnPoints
  List`1<Transform> crateSpawns
  GameObjectRef lockedCratePrefab
  GameObjectRef militaryCratePrefab
  GameObjectRef eliteCratePrefab
  GameObjectRef junkCratePrefab
  Transform waterLine
  Transform rudder
  Transform propeller
  GameObjectRef escapeBoatPrefab
  Transform escapeBoatPoint
  GameObjectRef microphonePrefab
  Transform microphonePoint
  GameObjectRef speakerPrefab
  Transform[] speakerPoints
  GameObject radiation
  GameObjectRef mapMarkerEntityPrefab
  GameObject hornOrigin
  SoundDefinition hornDef
  CargoShipSounds cargoShipSounds
  GameObject[] layouts
  GameObjectRef playerTest
  UInt32 layoutChoice
  bool event_enabled
  float event_duration_minutes
  float egress_duration_minutes
  int loot_rounds
  float loot_round_spacing_minutes
  BaseEntity mapMarkerInstance
  Vector3 currentVelocity
  float currentThrottle
  float currentTurnSpeed
  float turnScale
  int lootRoundsPassed
  int hornCount
  float currentRadiation
  bool egressing
Свойства:
Методы:
  float GetNetworkTime()
  void Load(LoadInfo info)
  void RefreshActiveLayout()
  void TriggeredEventSpawn()
  void CreateMapMarker()
  void DisableCollisionTest()
  void SpawnCrate(string resourcePath)
  void RespawnLoot()
  void SpawnSubEntities()
  void OnChildAdded(BaseEntity child)
  void Save(SaveInfo info)
  void PostServerLoad()
  void PlayHorn()
  void Spawn()
  void ServerInit()
  void UpdateRadiation()
  void StartEgress()
  void DelayedDestroy()
  void FindInitialNode()
  void BuildingCheck()
  void FixedUpdate()
  void UpdateMovement()
  int GetClosestNodeToUs()
  Vector3 GetLocalVelocityServer()
  Quaternion GetAngularVelocityServer()
  float InheritedVelocityScale()
  bool BlocksWaterFor(BasePlayer player)
  float MaxVelocity()
  bool SupportsChildDeployables()
  bool ForceDeployableSetParent()
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CargoShipInteriorSoundTrigger
Наследуется от: MonoBehaviour
Поля:
  CargoShipSounds cargoShipSounds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CargoShipSounds
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition waveSoundDef
  AnimationCurve waveSoundYGainCurve
  AnimationCurve waveSoundEdgeDistanceGainCurve
  Sound waveSoundL
  Sound waveSoundR
  Modulator waveSoundLGainMod
  Modulator waveSoundRGainMod
  SoundDefinition sternWakeSoundDef
  Sound sternWakeSound
  Modulator sternWakeSoundGainMod
  SoundDefinition engineHumSoundDef
  Sound engineHumSound
  GameObject engineHumTarget
  SoundDefinition hugeRumbleSoundDef
  AnimationCurve hugeRumbleYDiffCurve
  AnimationCurve hugeRumbleRelativeSpeedCurve
  Sound hugeRumbleSound
  Modulator hugeRumbleGainMod
  Vector3 lastCameraPos
  Vector3 lastRumblePos
  Vector3 lastRumbleLocalPos
  Collider soundFollowCollider
  Collider soundFollowColliderL
  Collider soundFollowColliderR
  Collider sternSoundFollowCollider
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LadderMinMountHeight
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: TriggerVehiclePush
Наследуется от: TriggerBase
Поля:
  BaseEntity thisEntity
  float maxPushVelocity
  float minRadius
  float maxRadius
  bool snapToAxis
  Vector3 axisToSnapTo
  bool allowParentRigidbody
  bool useRigidbodyPosition
  bool useCentreOfMass
Свойства:
  int ContentsCount
Методы:
  GameObject InterestedInObject(GameObject obj)
  int get_ContentsCount()
  void FixedUpdate()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: RHIBDriver
Наследуется от: BaseVehicleSeat
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: sedanAnimation
Наследуется от: MonoBehaviour
Поля:
  Transform[] frontAxles
  Transform FL_shock
  Transform FL_wheel
  Transform FR_shock
  Transform FR_wheel
  Transform RL_shock
  Transform RL_wheel
  Transform RR_shock
  Transform RR_wheel
  WheelCollider FL_wheelCollider
  WheelCollider FR_wheelCollider
  WheelCollider RL_wheelCollider
  WheelCollider RR_wheelCollider
  Transform steeringWheel
  float motorForceConstant
  float brakeForceConstant
  float brakePedal
  float gasPedal
  float steering
  Rigidbody myRigidbody
  float GasLerpTime
  float SteeringLerpTime
  float wheelSpinConstant
  float shockRestingPosY
  float shockDistance
  float traceDistanceNeutralPoint
Свойства:
Методы:
  void Start()
  void Update()
  void InputPlayer()
  void DoSteering()
  void ApplyForceAtWheels()
  void UpdateTireAnimation()
  float GetShockHeightDelta(WheelCollider wheel)
  void .ctor()
--------------------------------------------------
Класс: SedanWheelSmoke
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem[] tireSmoke
  ParticleSystem[] tireWaterSplash
  ParticleSystem[] tireWaterSplash_Extra
  Boolean[] wheelTouching
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConsoleGen
Наследуется от: object
Поля:
  Command[] All
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AdvancedChristmasLights
Наследуется от: IOEntity
Поля:
  GameObjectRef bulbPrefab
  LineRenderer lineRenderer
  List`1<pointEntry> points
  List`1<BaseBulb> bulbs
  float bulbSpacing
  float wireThickness
  Transform wireEmission
  AnimationType animationStyle
  RendererLOD _lod
  float lengthToPowerRatio
  bool finalized
  int lengthUsed
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ClearPoints()
  void FinishEditing()
  bool IsFinalized()
  void AddPoint(Vector3 newPoint, Vector3 newNormal)
  int ConsumptionAmount()
  int GetPickupCount()
  void AddLengthUsed(int addLength)
  void ServerInit()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool IsStyle(AnimationType testType)
  bool CanPlayerManipulate(BasePlayer player)
  void SetAnimationStyle(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: AdventCalendar
Наследуется от: BaseCombatEntity
Поля:
  int startMonth
  int startDay
  DayReward[] days
  GameObject[] crosses
  List`1<AdventCalendar> all
  Dictionary`2<ulong, List`1<int>> playerRewardHistory
  Phrase CheckLater
  Phrase EventOver
  GameObjectRef giftEffect
  GameObjectRef boxCloseEffect
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void DestroyShared()
  void AwardGift(BasePlayer player)
  bool WasAwardedTodaysGift(BasePlayer player)
  void RPC_RequestGift(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AppIOEntity
Наследуется от: IOEntity
Поля:
  float _cacheTime
  BuildingPrivlidge _cache
Свойства:
  AppEntityType Type
  bool Value
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  AppEntityType get_Type()
  bool get_Value()
  void set_Value(bool value)
  void BroadcastValueChange()
  void FillEntityPayload(AppEntityPayload payload)
  BuildingPrivlidge GetBuildingPrivilege()
  EntityTarget GetTarget()
  void PairWithApp(RPCMessage msg)
  void OnPairedWithPlayer(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: AttackHelicopter
Наследуется от: PlayerHelicopter
Поля:
  Transform gunnerEyePos
  Transform turbofanBone
  GameObjectRef turretStoragePrefab
  GameObjectRef rocketStoragePrefab
  GameObjectRef gunCamUIPrefab
  GameObjectRef gunCamUIDialogPrefab
  GameObject gunCamUIParent
  ParticleSystemContainer fxLightDamage
  ParticleSystemContainer fxMediumDamage
  ParticleSystemContainer fxHeavyDamage
  SoundDefinition damagedLightLoop
  SoundDefinition damagedHeavyLoop
  GameObject damageSoundTarget
  MeshRenderer monitorStaticRenderer
  Material monitorStatic
  Material monitorStaticSafeZone
  GameObjectRef flareFireFX
  GameObjectRef pilotFlare
  Transform leftFlareLaunchPos
  Transform rightFlareLaunchPos
  float flareLaunchVel
  Vector2 turretPitchClamp
  Vector2 turretYawClamp
  Flags IN_GUNNER_VIEW_FLAG
  Flags IN_SAFE_ZONE_FLAG
  int headingGaugeIndex
  int altGaugeIndex
  int altShakeIndex
  EntityRef`1<AttackHelicopterTurret> turretInstance
  EntityRef`1<AttackHelicopterRockets> rocketsInstance
  GunnerInputState gunnerInputState
  TimeSince timeSinceLastGunnerInput
  TimeSince timeSinceFailedWeaponFireRPC
  TimeSince timeSinceFailedFlareRPC
Свойства:
  bool HasSafeZoneFlag
  bool GunnerIsInGunnerView
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_HasSafeZoneFlag()
  bool get_GunnerIsInGunnerView()
  void OnFlagsChanged(Flags old, Flags next)
  void OnChildAdded(BaseEntity child)
  void Load(LoadInfo info)
  AttackHelicopterTurret GetTurret()
  AttackHelicopterRockets GetRockets()
  void PilotInput(InputState inputState, BasePlayer player)
  void PassengerInput(InputState inputState, BasePlayer player)
  void WeaponFireFailed(int ammo, BasePlayer player)
  void FlareFireFailed(BasePlayer player)
  void VehicleFixedUpdate()
  bool EnterTrigger(TriggerBase trigger)
  void LeaveTrigger(TriggerBase trigger)
  void PrePlayerDismount(BasePlayer player, BaseMountable seat)
  void DoServerDestroy()
  void Save(SaveInfo info)
  void MarkAllMountedPlayersAsHostile()
  bool AdminFixUp(int tier)
  bool TryFireFlare()
  void LaunchFlare()
  void RPC_OpenTurret(RPCMessage msg)
  void RPC_OpenStorage(RPCMessage msg)
  void RPC_OpenGunnerView(RPCMessage msg)
  void RPC_CloseGunnerView(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AttackHelicopterRockets
Наследуется от: StorageContainer
Поля:
  Transform[] rocketMuzzlePositions
  GameObjectRef rocketFireTubeFX
  float timeBetweenRockets
  float reloadTime
  int rocketsPerReload
  ItemDefinition incendiaryRocketDef
  ItemDefinition hvRocketDef
  ItemDefinition flareItemDef
  AttackHelicopter owner
  AmmoTypes ammoType
  TimeSince timeSinceRocketFired
  int rocketsSinceReload
  bool leftSide
Свойства:
  bool CanFireNow
  bool IsReloading
  bool HasOwner
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_CanFireNow()
  bool get_IsReloading()
  bool get_HasOwner()
  int GetAmmoAmount()
  int GetAmmoBeforeReload()
  bool TryGetAmmoDef(ItemDefinition& ammoDef)
  Vector3 MuzzleMidPoint()
  float GetMinRocketSpeed()
  bool TryGetProjectedHitPos(Vector3& result)
  void Save(SaveInfo info)
  BasePlayer ToPlayer()
  bool ItemFilter(Item item, int targetSlot)
  void OnItemAddedOrRemoved(Item item, bool added)
  bool InputTick(GunnerInputState input, BasePlayer gunner)
  bool TryFireRocket(BasePlayer shooter)
  bool TryTakeFlare()
  void .ctor()
  bool <ItemFilter>g__IsValidRocket|28_0(<>c__DisplayClass28_0& )
  bool <ItemFilter>g__IsValidFlare|28_1(<>c__DisplayClass28_0& )
--------------------------------------------------
Класс: AttackHelicopterTurret
Наследуется от: StorageContainer
Поля:
  Transform turretSocket
  Transform turretHorizontal
  Transform turretVertical
  AttackHelicopter owner
  GunStatus <GunState>k__BackingField
  EntityRef`1<HeldEntity> attachedHeldEntity
  bool forceAcceptAmmo
  float WEAPON_Z_OFFSET_SCALE
  float muzzleYOffset
  float lastSentX
  float lastSentY
Свойства:
  bool HasOwner
  GunStatus GunState
  float GunXAngle
  float GunYAngle
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_HasOwner()
  GunStatus get_GunState()
  void set_GunState(GunStatus value)
  float get_GunXAngle()
  float get_GunYAngle()
  void Load(LoadInfo info)
  void SetGunRotation(float xRot, float yRot)
  HeldEntity GetAttachedHeldEntity()
  void GetAmmoAmounts(Int32& clip, Int32& available)
  Vector3 GetProjectedHitPos()
  void ServerInit()
  void Save(SaveInfo info)
  BasePlayer ToPlayer()
  bool CanAcceptItem(Item item, int targetSlot)
  bool IsValidWeapon(Item item)
  bool InputTick(GunnerInputState input)
  Vector3 ClampEyeAngle(Transform heliTransform, Vector3 eyeDir, Vector2 pitchRange, Vector2 yawRange)
  void OnItemAddedOrRemoved(Item item, bool added)
  void UpdateAttachedWeapon()
  bool TryReload()
  bool TryFireWeapon()
  void RefreshGunState()
  void .ctor()
--------------------------------------------------
Класс: AudioVisualisationEntity
Наследуется от: IOEntity
Поля:
  EntityRef`1<BaseEntity> connectedTo
  LightColour <currentColour>k__BackingField
  VolumeSensitivity <currentVolumeSensitivity>k__BackingField
  Speed <currentSpeed>k__BackingField
  GameObjectRef SettingsDialog
  int <currentGradient>k__BackingField
Свойства:
  LightColour currentColour
  VolumeSensitivity currentVolumeSensitivity
  Speed currentSpeed
  int currentGradient
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  LightColour get_currentColour()
  void set_currentColour(LightColour value)
  VolumeSensitivity get_currentVolumeSensitivity()
  void set_currentVolumeSensitivity(VolumeSensitivity value)
  Speed get_currentSpeed()
  void set_currentSpeed(Speed value)
  int get_currentGradient()
  void set_currentGradient(int value)
  void OnFlagsChanged(Flags old, Flags next)
  IOEntity GetAudioSource(IOEntity entity, Int32& depth)
  void Save(SaveInfo info)
  void ServerUpdateSettings(RPCMessage msg)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: AutoTurret
Наследуется от: ContainerIOEntity
Поля:
  GameObjectRef gun_fire_effect
  GameObjectRef bulletEffect
  float bulletSpeed
  AmbienceEmitter ambienceEmitter
  GameObject assignDialog
  LaserBeam laserBeam
  BaseCombatEntity target
  Transform eyePos
  Transform muzzlePos
  Vector3 aimDir
  Transform gun_yaw
  Transform gun_pitch
  float sightRange
  SoundDefinition turnLoopDef
  SoundDefinition movementChangeDef
  SoundDefinition ambientLoopDef
  SoundDefinition focusCameraDef
  float focusSoundFreqMin
  float focusSoundFreqMax
  GameObjectRef peacekeeperToggleSound
  GameObjectRef onlineSound
  GameObjectRef offlineSound
  GameObjectRef targetAcquiredEffect
  GameObjectRef targetLostEffect
  GameObjectRef reloadEffect
  float aimCone
  Flags Flag_Equipped
  Flags Flag_MaxAuths
  List`1<PlayerNameID> authorizedPlayers
  float auto_turret_budget_ms
  UpdateAutoTurretScanQueue updateAutoTurretScanQueue
  float rcTurnSensitivity
  Transform RCEyes
  GameObjectRef IDPanelPrefab
  RemoteControllableControls rcControls
  string rcIdentifier
  int <ViewerCount>k__BackingField
  Nullable`1<CameraViewerId> <ControllingViewerId>k__BackingField
  TargetTrigger targetTrigger
  TriggerBase interferenceTrigger
  float maxInterference
  Transform socketTransform
  bool authDirty
  bool hasPotentialUnauthedTarget
  float nextShotTime
  float lastShotTime
  float nextVisCheck
  float lastTargetSeenTime
  bool targetVisible
  bool booting
  float nextIdleAimTime
  Vector3 targetAimDir
  float bulletDamage
  RealTimeSinceEx timeSinceLastServerTick
  HashSet`1<AutoTurret> nearbyTurrets
  float nextForcedAimTime
  Vector3 lastSentAimDir
  Single[] visibilityOffsets
  int peekIndex
  int numConsecutiveMisses
  int totalAmmo
  float nextAmmoCheckTime
  bool totalAmmoDirty
  float currentAmmoGravity
  float currentAmmoVelocity
  HeldEntity AttachedWeapon
  float attachedWeaponZOffsetScale
  int consumptionAmount
Свойства:
  bool CanPing
  bool RequiresMouse
  float MaxRange
  RemoteControllableControls RequiredControls
  int ViewerCount
  Nullable`1<CameraViewerId> ControllingViewerId
  bool IsBeingControlled
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_CanPing()
  bool IsOnline()
  bool IsOffline()
  void ResetState()
  Transform GetCenterMuzzle()
  float AngleToTarget(BaseCombatEntity potentialtarget, bool use2D)
  bool InFiringArc(BaseCombatEntity potentialtarget)
  bool CanPickup(BasePlayer player)
  bool CanUseNetworkCache(Connection connection)
  void Save(SaveInfo info)
  void PostSave(SaveInfo info)
  void Load(LoadInfo info)
  Vector3 AimOffset(BaseCombatEntity aimat)
  float GetAimSpeed()
  void UpdateAiming(float dt)
  bool IsAuthed(ulong id)
  bool IsAuthed(BasePlayer player)
  bool AnyAuthed()
  bool CanChangeSettings(BasePlayer player)
  bool PeacekeeperMode()
  Transform GetEyes()
  float GetFovScale()
  BaseEntity GetEnt()
  bool CanControl(ulong playerID)
  bool get_RequiresMouse()
  float get_MaxRange()
  RemoteControllableControls get_RequiredControls()
  int get_ViewerCount()
  void set_ViewerCount(int value)
  Nullable`1<CameraViewerId> get_ControllingViewerId()
  void set_ControllingViewerId(Nullable`1<CameraViewerId> value)
  bool get_IsBeingControlled()
  bool InitializeControl(CameraViewerId viewerID)
  void StopControl(CameraViewerId viewerID)
  void UserInput(InputState inputState, CameraViewerId viewerID)
  bool UpdateManualAim(InputState inputState)
  void InitShared()
  void DestroyShared()
  void RCSetup()
  void RCShutdown()
  void Server_SetID(RPCMessage msg)
  void UpdateIdentifier(string newID, bool clientSend)
  string GetIdentifier()
  bool CanChangeID(BasePlayer player)
  int ConsumptionAmount()
  void SetOnline()
  void SetIsOnline(bool online)
  int GetPassthroughAmount(int outputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  void InitiateShutdown()
  void InitiateStartup()
  void SetPeacekeepermode(bool isOn)
  bool IsValidWeapon(Item item)
  bool CanAcceptItem(Item item, int targetSlot)
  bool AtMaxAuthCapacity()
  void UpdateMaxAuthCapacity()
  void FlipAim(RPCMessage rpc)
  void AddSelfAuthorize(RPCMessage rpc)
  void AddSelfAuthorize(BasePlayer player)
  void RemoveSelfAuthorize(RPCMessage rpc)
  void ClearList(RPCMessage rpc)
  void AssignToFriend(RPCMessage msg)
  void SERVER_Peacekeeper(RPCMessage rpc)
  void SERVER_AttackAll(RPCMessage rpc)
  float TargetScanRate()
  void ServerInit()
  void DoServerDestroy()
  void OnEntityEnterTrigger(BaseNetworkable entity)
  void SendAimDir()
  void SendAimDirImmediate()
  void SetTarget(BaseCombatEntity targ)
  bool CheckPeekers()
  bool ObjectVisible(BaseCombatEntity obj)
  void FireAttachedGun(Vector3 targetPos, float aimCone, Transform muzzleToUse, BaseCombatEntity target)
  void FireGun(Vector3 targetPos, float aimCone, Transform muzzleToUse, BaseCombatEntity target)
  void ApplyDamage(BaseCombatEntity entity, Vector3 point, Vector3 normal)
  void IdleTick(float dt)
  bool HasClipAmmo()
  bool HasReserveAmmo()
  int GetTotalAmmo()
  AmmoTypes GetValidAmmoTypes()
  ItemDefinition GetDesiredAmmo()
  void Reload()
  void PostServerLoad()
  void UpdateTotalAmmo()
  void OnItemAddedOrRemoved(Item item, bool added)
  bool EnsureReloaded(bool onlyReloadIfEmpty)
  BaseProjectile GetAttachedWeapon()
  bool HasFallbackWeapon()
  bool HasGenericFireable()
  void UpdateAttachedWeapon()
  HeldEntity TryAddWeaponToTurret(Item weaponItem, Transform parent, BaseEntity entityParent, float zOffsetScale)
  void OnKilled(HitInfo info)
  bool OnStartBeingLooted(BasePlayer baseEntity)
  void PlayerStoppedLooting(BasePlayer player)
  float GetMaxAngleForEngagement()
  void TargetTick()
  bool HasTarget()
  void OfflineTick()
  bool IsEntityHostile(BaseCombatEntity ent)
  bool ShouldTarget(BaseCombatEntity targ)
  void ScheduleForTargetScan()
  bool HasInterference()
  void UpdateInterference()
  void UpdateInterferenceOnOthers()
  void UpdateNearbyTurrets(bool created)
  void TargetScan()
  bool Ignore(BasePlayer player)
  void ServerTick()
  void OnAttacked(HitInfo info)
  void UpdateFacingToTarget(float dt)
  float GetAngle(Vector3 launchPosition, Vector3 targetPosition, float launchVelocity, float gravityScale)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  ItemContainerId GetIdealContainer(BasePlayer player, Item item, bool altMove)
  int GetIdealSlot(BasePlayer player, Item item)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseAIBrain
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  bool SendClientCurrentState
  bool UseQueuedMovementUpdates
  bool AllowedToSleep
  AIDesignSO DefaultDesignSO
  List`1<AIDesignSO> Designs
  AIDesign InstanceSpecificDesign
  float SenseRange
  float AttackRangeMultiplier
  float TargetLostRange
  float VisionCone
  bool CheckVisionCone
  bool CheckLOS
  bool IgnoreNonVisionSneakers
  float IgnoreSneakersMaxDistance
  float IgnoreNonVisionMaxDistance
  float ListenRange
  EntityType SenseTypes
  bool HostileTargetsOnly
  bool IgnoreSafeZonePlayers
  int MaxGroupSize
  float MemoryDuration
  bool RefreshKnownLOS
  bool CanBeBlinded
  float BlindDurationMultiplier
  BasicAIState <CurrentState>k__BackingField
  AIState ClientCurrentState
  Vector3 mainInterestPoint
  AIThinkMode <ThinkMode>k__BackingField
  float <Age>k__BackingField
  AIBrainSenses <Senses>k__BackingField
  BasePathFinder <PathFinder>k__BackingField
  bool UseAIDesign
  AIEvents <Events>k__BackingField
  AIDesign <AIDesign>k__BackingField
  BasePlayer <DesigningPlayer>k__BackingField
  BasePlayer <OwningPlayer>k__BackingField
  bool <IsGroupLeader>k__BackingField
  bool <IsGrouped>k__BackingField
  IAIGroupable <GroupLeader>k__BackingField
  bool Pet
  List`1<IAIGroupable> groupMembers
  bool CanUseHealingItems
  float HealChance
  float HealBelowHealthFraction
  int loadedDesignIndex
  BaseNavigator <Navigator>k__BackingField
  int currentStateContainerID
  float lastMovementTickTime
  bool sleeping
  bool disabled
  Dictionary`2<AIState, BasicAIState> states
  float thinkRate
  float lastThinkTime
  float unblindTime
Свойства:
  BasicAIState CurrentState
  AIThinkMode ThinkMode
  float Age
  AIBrainSenses Senses
  BasePathFinder PathFinder
  AIEvents Events
  AIDesign AIDesign
  BasePlayer DesigningPlayer
  BasePlayer OwningPlayer
  bool IsGroupLeader
  bool IsGrouped
  IAIGroupable GroupLeader
  BaseNavigator Navigator
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  BasicAIState get_CurrentState()
  void set_CurrentState(BasicAIState value)
  AIThinkMode get_ThinkMode()
  void set_ThinkMode(AIThinkMode value)
  float get_Age()
  void set_Age(float value)
  void ForceSetAge(float age)
  AIBrainSenses get_Senses()
  void set_Senses(AIBrainSenses value)
  BasePathFinder get_PathFinder()
  void set_PathFinder(BasePathFinder value)
  AIEvents get_Events()
  void set_Events(AIEvents value)
  AIDesign get_AIDesign()
  void set_AIDesign(AIDesign value)
  BasePlayer get_DesigningPlayer()
  void set_DesigningPlayer(BasePlayer value)
  BasePlayer get_OwningPlayer()
  void set_OwningPlayer(BasePlayer value)
  bool get_IsGroupLeader()
  void set_IsGroupLeader(bool value)
  bool get_IsGrouped()
  void set_IsGrouped(bool value)
  IAIGroupable get_GroupLeader()
  void set_GroupLeader(IAIGroupable value)
  int LoadedDesignIndex()
  BaseNavigator get_Navigator()
  void set_Navigator(BaseNavigator value)
  void SetEnabled(bool flag)
  bool IAIDesign.CanPlayerDesignAI(BasePlayer player)
  bool PlayerCanDesignAI(BasePlayer player)
  void RequestAIDesign(RPCMessage msg)
  void SubmitAIDesign(RPCMessage msg)
  void IAIDesign.StopDesigning()
  void IAIDesign.LoadAIDesign(AIDesign design, BasePlayer player)
  bool LoadDefaultAIDesign()
  bool LoadAIDesignAtIndex(int index)
  void OnAIDesignLoadedAtIndex(int index)
  bool LoadAIDesign(AIDesign design, BasePlayer player, int index)
  void SaveDesign()
  void StopAIDesign(RPCMessage msg)
  void ClearDesigningPlayer()
  void SetOwningPlayer(BasePlayer owner)
  bool ShouldServerThink()
  void DoThink()
  List`1<AIState> GetStateList()
  bool Blinded()
  void SetBlinded(float duration)
  void Start()
  void AddStates()
  void InitializeAI()
  BaseEntity GetBrainBaseEntity()
  void OnDestroy()
  void StartMovementTick()
  void StopMovementTick()
  void TickMovement()
  void DoMovementTick()
  void AddState(BasicAIState newState)
  bool HasState(AIState state)
  bool SwitchToState(AIState newState, int stateContainerID)
  bool SwitchToState(BasicAIState newState, int stateContainerID)
  void OnStateChanged()
  void AddEvents(int stateContainerID)
  void Think(float delta)
  void UpdateAgressionTimer(float delta)
  bool IAISleepable.AllowedToSleep()
  void IAISleepable.SleepAI()
  void IAISleepable.WakeAI()
  void UpdateGroup()
  bool AddMember(IAIGroupable member)
  void JoinGroup(IAIGroupable leader, BaseEntity leaderEntity)
  void SetGroupRoamRootPosition(Vector3 rootPos)
  bool InGroup()
  void LeaveGroup()
  void RemoveMember(IAIGroupable member)
  void SetUngrouped()
  void LoadComponent(LoadInfo info)
  void SaveComponent(SaveInfo info)
  void SendStateChangeEvent(int previousStateID, int newStateID, int sourceEventID)
  void EventTriggeredStateChange(int newStateContainerID, int sourceEventID)
  bool IsPet()
  void SetPetOwner(BasePlayer player)
  bool IsOwnedBy(BasePlayer player)
  bool IssuePetCommand(PetCommandType cmd, int param, Nullable`1<Ray> ray)
  void .ctor()
--------------------------------------------------
Класс: BaseArcadeMachine
Наследуется от: BaseVehicle
Поля:
  BaseArcadeGame arcadeGamePrefab
  BaseArcadeGame activeGame
  ArcadeNetworkTrigger networkTrigger
  float broadcastRadius
  Transform gameScreen
  RawImage RTImage
  Transform leftJoystick
  Transform rightJoystick
  SoundPlayer musicPlayer
  Flags Flag_P1
  Flags Flag_P2
  List`1<ScoreEntry> scores
  int inputFrameRate
  int snapshotFrameRate
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void AddScore(BasePlayer player, int score)
  void RequestAddScore(RPCMessage msg)
  void PlayerMounted(BasePlayer player, BaseMountable seat)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool CanPushNow(BasePlayer pusher)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void NearbyClientMessage(string msg)
  void DestroyMessageFromHost(RPCMessage msg)
  void BroadcastEntityMessage(RPCMessage msg)
  void GetSnapshotFromClient(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: BaseCardGameEntity
Наследуется от: BaseVehicle
Поля:
  GameObjectRef uiPrefab
  ItemDefinition scrapItemDef
  GameObjectRef potPrefab
  PlayerStorageInfo[] playerStoragePoints
  GameObjectRef playerStoragePrefab
  CardGameController _gameCont
  CardGameOption gameOption
  EntityRef PotInstance
  bool storageLinked
Свойства:
  int ScrapItemID
  CardGameController GameController
  float MaxStorageInteractionDist
  bool CanSwapSeats
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int get_ScrapItemID()
  CardGameController get_GameController()
  float get_MaxStorageInteractionDist()
  void Load(LoadInfo info)
  CardGameController GetGameController()
  void DestroyShared()
  bool get_CanSwapSeats()
  void Save(SaveInfo info)
  void PostServerLoad()
  void DoServerDestroy()
  void PrePlayerDismount(BasePlayer player, BaseMountable seat)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  StorageContainer GetPot()
  BasePlayer IDToPlayer(ulong id)
  void PlayerStorageChanged()
  CardGamePlayerStorage GetPlayerStorage(int storageIndex)
  CardGamePlayerStorage GetPlayerStorage(ulong playerID)
  int GetMountPointIndex(ulong playerID)
  void SpawnSubEntities()
  void RPC_PlayerInput(RPCMessage msg)
  void RPC_LeaveTable(RPCMessage msg)
  void RPC_OpenLoot(RPCMessage msg)
  void RPC_Editor_SpawnTestPlayer(RPCMessage msg)
  void RPC_Editor_MakeRandomMove(RPCMessage msg)
  void RPC_Play(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: BaseCombatEntity
Наследуется от: BaseEntity
Поля:
  SkeletonProperties skeletonProperties
  ProtectionProperties baseProtection
  float startHealth
  Pickup pickup
  Repair repair
  bool ShowHealthInfo
  LifeState lifestate
  bool sendsHitNotification
  bool sendsMeleeHitNotification
  bool markAttackerHostile
  float _health
  float _maxHealth
  Faction faction
  float lastAttackedTime
  Vector3 <LastAttackedDir>k__BackingField
  float lastDealtDamageTime
  int lastNotifyFrame
  float MAX_HEALTH_REPAIR
  DamageType lastDamage
  BaseEntity lastAttacker
  BaseEntity lastDealtDamageTo
  bool ResetLifeStateOnSpawn
  DirectionProperties[] propDirection
  float unHostileTime
  ActionVolume <LastNoiseVolume>k__BackingField
  Vector3 <LastNoisePosition>k__BackingField
  float lastNoiseTime
Свойства:
  Vector3 LastAttackedDir
  float SecondsSinceAttacked
  float SecondsSinceDealtDamage
  float healthFraction
  float health
  float TimeSinceLastNoise
  ActionVolume LastNoiseVolume
  Vector3 LastNoisePosition
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsDead()
  bool IsAlive()
  Faction GetFaction()
  bool IsFriendly(BaseCombatEntity other)
  Vector3 get_LastAttackedDir()
  void set_LastAttackedDir(Vector3 value)
  float get_SecondsSinceAttacked()
  float get_SecondsSinceDealtDamage()
  float get_healthFraction()
  void ResetState()
  void DestroyShared()
  float GetThreatLevel()
  float PenetrationResistance(HitInfo info)
  void ScaleDamage(HitInfo info)
  HitArea SkeletonLookup(UInt32 boneID)
  void Save(SaveInfo info)
  void PostServerLoad()
  void Load(LoadInfo info)
  float get_health()
  void set_health(float value)
  float Health()
  float MaxHealth()
  float StartHealth()
  float StartMaxHealth()
  void SetMaxHealth(float newMax)
  void DoHitNotify(HitInfo info)
  void OnAttacked(HitInfo info)
  int GetPickupCount()
  bool CanPickup(BasePlayer player)
  void OnPickedUp(Item createdItem, BasePlayer player)
  void OnPickedUpPreItemMove(Item createdItem, BasePlayer player)
  void RPC_PickupStart(RPCMessage rpc)
  List`1<ItemAmount> BuildCost()
  float RepairCostFraction()
  List`1<ItemAmount> RepairCost(float healthMissingFraction)
  void OnRepair()
  void OnRepairFinished()
  void OnRepairFailed(BasePlayer player, string reason)
  void OnRepairFailedResources(BasePlayer player, List`1<ItemAmount> requirements)
  void DoRepair(BasePlayer player)
  void InitializeHealth(float newhealth, float newmax)
  void ServerInit()
  void OnHealthChanged(float oldvalue, float newvalue)
  void Hurt(float amount)
  void Hurt(float amount, DamageType type, BaseEntity attacker, bool useProtection)
  void Hurt(HitInfo info)
  bool IsHostile()
  void MarkHostileFor(float duration)
  void DebugHurt(HitInfo info)
  void SetHealth(float hp)
  void Heal(float amount)
  void OnKilled(HitInfo info)
  void Die(HitInfo info)
  void DieInstantly()
  void UpdateSurroundings()
  float get_TimeSinceLastNoise()
  ActionVolume get_LastNoiseVolume()
  void set_LastNoiseVolume(ActionVolume value)
  Vector3 get_LastNoisePosition()
  void set_LastNoisePosition(Vector3 value)
  void MakeNoise(Vector3 position, ActionVolume loudness)
  bool CanLastNoiseBeHeard(Vector3 listenPosition, float listenRange)
  void .ctor()
--------------------------------------------------
Класс: BaseEntity
Наследуется от: BaseNetworkable
Поля:
  Bounds bounds
  GameObjectRef impactEffect
  bool enableSaving
  bool syncPosition
  Model model
  Flags flags
  UInt32 parentBone
  ulong skinID
  EntityComponentBase[] _components
  bool HasBrain
  string _name
  ulong <OwnerID>k__BackingField
  Queue`1<BaseEntity> globalBroadcastQueue
  UInt32 globalBroadcastProtocol
  UInt32 broadcastProtocol
  List`1<EntityLink> links
  bool linkedToNeighbours
  TimeUntil _transferProtectionRemaining
  Action _disableTransferProtectionAction
  Spawnable _spawnable
  HashSet`1<BaseEntity> saveList
  BaseEntity creatorEntity
  int ticksSinceStopped
  int doneMovingWithoutARigidBodyCheck
  bool isCallingUpdateNetworkGroup
  EntityRef[] entitySlots
  List`1<TriggerBase> triggers
  bool isVisible
  bool isAnimatorVisible
  bool isShadowVisible
  OccludeeSphere localOccludee
  float <Weight>k__BackingField
Свойства:
  float RealisticMass
  EntityComponentBase[] Components
  bool IsNpc
  ulong OwnerID
  float TransferProtectionRemaining
  Action DisableTransferProtectionAction
  bool ShouldTransferAssociatedFiles
  float PositionTickRate
  bool PositionTickFixedTime
  Vector3 ServerPosition
  Quaternion ServerRotation
  float radiationLevel
  float currentTemperature
  float currentEnvironmentalWetness
  TraitFlag Traits
  float Weight
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_RealisticMass()
  void OnCollision(Collision collision, BaseEntity hitEntity)
  void ReceiveCollisionMessages(bool b)
  EntityComponentBase[] get_Components()
  BasePlayer ToPlayer()
  bool get_IsNpc()
  void InitShared()
  void DestroyShared()
  void ResetState()
  float InheritedVelocityScale()
  bool InheritedVelocityDirection()
  Vector3 GetInheritedProjectileVelocity(Vector3 direction)
  Vector3 GetInheritedThrowVelocity(Vector3 direction)
  Vector3 GetInheritedDropVelocity()
  Vector3 GetParentVelocity()
  Vector3 GetWorldVelocity()
  Vector3 GetLocalVelocity()
  Quaternion GetAngularVelocity()
  OBB WorldSpaceBounds()
  Vector3 PivotPoint()
  Vector3 CenterPoint()
  Vector3 ClosestPoint(Vector3 position)
  Vector3 TriggerPoint()
  float Distance(Vector3 position)
  float SqrDistance(Vector3 position)
  float Distance(BaseEntity other)
  float SqrDistance(BaseEntity other)
  float Distance2D(Vector3 position)
  float SqrDistance2D(Vector3 position)
  float Distance2D(BaseEntity other)
  float SqrDistance2D(BaseEntity other)
  bool IsVisible(Ray ray, int layerMask, float maxDistance)
  bool IsVisibleSpecificLayers(Vector3 position, Vector3 target, int layerMask, float maxDistance)
  bool IsVisible(Vector3 position, Vector3 target, float maxDistance)
  bool IsVisible(Vector3 position, float maxDistance)
  bool IsVisibleAndCanSee(Vector3 position)
  bool CanSee(Vector3 fromPos, Vector3 targetPos)
  bool IsOlderThan(BaseEntity other)
  bool IsOutside()
  bool IsOutside(Vector3 position)
  float WaterFactor()
  float AirFactor()
  bool WaterTestFromVolumes(Vector3 pos, WaterInfo& info)
  bool IsInWaterVolume(Vector3 pos)
  bool WaterTestFromVolumes(Bounds bounds, WaterInfo& info)
  bool WaterTestFromVolumes(Vector3 start, Vector3 end, float radius, WaterInfo& info)
  bool BlocksWaterFor(BasePlayer player)
  float Health()
  float MaxHealth()
  float MaxVelocity()
  float BoundsPadding()
  float PenetrationResistance(HitInfo info)
  GameObjectRef GetImpactEffect(HitInfo info)
  void OnAttacked(HitInfo info)
  Item GetItem()
  Item GetItem(ItemId itemId)
  void GiveItem(Item item, GiveItemReason reason)
  bool CanBeLooted(BasePlayer player)
  BaseEntity GetEntity()
  string ToString()
  string Categorize()
  void Log(string str)
  void SetModel(Model mdl)
  Model GetModel()
  Transform[] GetBones()
  Transform FindBone(string strName)
  UInt32 FindBoneID(Transform boneTransform)
  Transform FindClosestBone(Vector3 worldPos)
  ulong get_OwnerID()
  void set_OwnerID(ulong value)
  bool ShouldBlockProjectiles()
  bool ShouldInheritNetworkGroup()
  bool SupportsChildDeployables()
  bool ForceDeployableSetParent()
  bool IsOnMovingObject()
  void BroadcastEntityMessage(string msg, float radius, int layerMask)
  void OnEntityMessage(BaseEntity from, string msg)
  void DebugServer(int rep, float time)
  string DebugText()
  void OnDebugStart()
  void DebugText(Vector3 pos, string str, Color color, float time)
  bool HasFlag(Flags f)
  bool HasAny(Flags f)
  bool ParentHasFlag(Flags f)
  void SetFlag(Flags f, bool b, bool recursive, bool networkupdate)
  bool IsOn()
  bool IsOpen()
  bool IsOnFire()
  bool IsLocked()
  bool IsDebugging()
  bool IsDisabled()
  bool IsBroken()
  bool IsBusy()
  bool IsTransferProtected()
  bool IsTransferring()
  string GetLogColor()
  void OnFlagsChanged(Flags old, Flags next)
  void SendNetworkUpdate_Flags()
  bool IsOccupied(Socket_Base socket)
  bool IsOccupied(string socketName)
  EntityLink FindLink(Socket_Base socket)
  EntityLink FindLink(string socketName)
  EntityLink FindLink(String[] socketNames)
  T FindLinkedEntity()
  void EntityLinkMessage(Action`1<T> action)
  void EntityLinkBroadcast(Action`1<T> action, Func`2<S, bool> canTraverseSocket)
  void EntityLinkBroadcast(Action`1<T> action)
  void EntityLinkBroadcast()
  bool ReceivedEntityLinkBroadcast()
  List`1<EntityLink> GetEntityLinks(bool linkToNeighbours)
  void LinkToEntity(BaseEntity other)
  void LinkToNeighbours()
  void InitEntityLinks()
  void FreeEntityLinks()
  void RefreshEntityLinks()
  void SV_RequestFile(RPCMessage msg)
  float get_TransferProtectionRemaining()
  Action get_DisableTransferProtectionAction()
  void EnableTransferProtection()
  void DisableTransferProtection()
  void SetParent(BaseEntity entity, bool worldPositionStays, bool sendImmediate)
  void SetParent(BaseEntity entity, string strBone, bool worldPositionStays, bool sendImmediate)
  bool HasChild(BaseEntity c)
  void SetParent(BaseEntity entity, UInt32 boneID, bool worldPositionStays, bool sendImmediate)
  void DestroyOnClient(Connection connection)
  void SendChildrenNetworkUpdate()
  void SendChildrenNetworkUpdateImmediate()
  void SwitchParent(BaseEntity ent)
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  BuildingPrivlidge GetBuildingPrivilege()
  BuildingPrivlidge GetNearestBuildingPrivledge()
  BuildingPrivlidge GetBuildingPrivilege(OBB obb)
  void SV_RPCMessage(UInt32 nameID, Message message)
  void ClientRPCPlayer(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
  void ClientRPCPlayer(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  void ClientRPCPlayer(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1, T2 arg2, T3 arg3)
  void ClientRPCPlayer(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1, T2 arg2)
  void ClientRPCPlayer(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1)
  void ClientRPCPlayer(Connection sourceConnection, BasePlayer player, string funcName)
  void ClientRPC(Connection sourceConnection, string funcName, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
  void ClientRPC(Connection sourceConnection, string funcName, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  void ClientRPC(Connection sourceConnection, string funcName, T1 arg1, T2 arg2, T3 arg3)
  void ClientRPC(Connection sourceConnection, string funcName, T1 arg1, T2 arg2)
  void ClientRPC(Connection sourceConnection, string funcName, T1 arg1)
  void ClientRPC(Connection sourceConnection, string funcName)
  void ClientRPCEx(SendInfo sendInfo, Connection sourceConnection, string funcName, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
  void ClientRPCEx(SendInfo sendInfo, Connection sourceConnection, string funcName, T1 arg1, T2 arg2, T3 arg3, T4 arg4)
  void ClientRPCEx(SendInfo sendInfo, Connection sourceConnection, string funcName, T1 arg1, T2 arg2, T3 arg3)
  void ClientRPCEx(SendInfo sendInfo, Connection sourceConnection, string funcName, T1 arg1, T2 arg2)
  void ClientRPCEx(SendInfo sendInfo, Connection sourceConnection, string funcName, T1 arg1)
  void ClientRPCEx(SendInfo sendInfo, Connection sourceConnection, string funcName)
  void ClientRPCPlayerAndSpectators(Connection sourceConnection, BasePlayer player, string funcName)
  void ClientRPCPlayerAndSpectators(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1)
  void ClientRPCPlayerAndSpectators(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1, T2 arg2)
  void ClientRPCPlayerAndSpectators(Connection sourceConnection, BasePlayer player, string funcName, T1 arg1, T2 arg2, T3 arg3)
  NetWrite ClientRPCStart(Connection sourceConnection, string funcName)
  void ClientRPCWrite(NetWrite write, T arg)
  void ClientRPCSend(NetWrite write, SendInfo sendInfo)
  void ClientRPCPlayerList(Connection sourceConnection, BasePlayer player, string funcName, List`1<T1> list)
  void Save(SaveInfo info)
  bool ShouldNetworkOwnerInfo()
  bool get_ShouldTransferAssociatedFiles()
  void Load(LoadInfo info)
  void SetCreatorEntity(BaseEntity newCreatorEntity)
  Vector3 GetLocalVelocityServer()
  Quaternion GetAngularVelocityServer()
  void EnableGlobalBroadcast(bool wants)
  void EnableSaving(bool wants)
  void ServerInit()
  void OnSensation(Sensation sensation)
  float get_PositionTickRate()
  bool get_PositionTickFixedTime()
  bool TransformHasMoved()
  void NetworkPositionTick()
  void TransformChanged()
  void OnPositionalNetworkUpdate()
  void DoMovingWithoutARigidBodyCheck()
  void Spawn()
  void OnParentSpawning()
  void SpawnAsMapEntity()
  void PostMapEntitySpawn()
  void DoServerDestroy()
  void OnParentRemoved()
  void OnInvalidPosition()
  BaseCorpse DropCorpse(string strCorpsePrefab)
  void UpdateNetworkGroup()
  void Eat(BaseNpc baseNpc, float timeSpent)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  bool ShouldNetworkTo(BasePlayer player)
  void AttackerInfo(DeathInfo info)
  void Push(Vector3 velocity)
  void ApplyInheritedVelocity(Vector3 velocity)
  void SetVelocity(Vector3 velocity)
  void SetAngularVelocity(Vector3 velocity)
  Vector3 GetDropPosition()
  Vector3 GetDropVelocity()
  bool OnStartBeingLooted(BasePlayer baseEntity)
  Vector3 get_ServerPosition()
  void set_ServerPosition(Vector3 value)
  Quaternion get_ServerRotation()
  void set_ServerRotation(Quaternion value)
  string Admin_Who()
  float get_radiationLevel()
  float RadiationProtection()
  float RadiationExposureFraction()
  float get_currentTemperature()
  float get_currentEnvironmentalWetness()
  void BroadcastSignalFromClient(RPCMessage msg)
  void SignalBroadcast(Signal signal, string arg, Connection sourceConnection)
  void SignalBroadcast(Signal signal, Connection sourceConnection)
  void OnSkinChanged(ulong oldSkinID, ulong newSkinID)
  void OnSkinPreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool HasAnySlot()
  BaseEntity GetSlot(Slot slot)
  string GetSlotAnchorName(Slot slot)
  void SetSlot(Slot slot, BaseEntity ent)
  EntityRef[] GetSlots()
  void SetSlots(EntityRef[] newSlots)
  bool HasSlot(Slot slot)
  TraitFlag get_Traits()
  bool HasTrait(TraitFlag f)
  bool HasAnyTrait(TraitFlag f)
  bool EnterTrigger(TriggerBase trigger)
  void LeaveTrigger(TriggerBase trigger)
  void RemoveFromTriggers()
  T FindTrigger()
  bool FindTrigger(T& result)
  void ForceUpdateTriggersAction()
  void ForceUpdateTriggers(bool enter, bool exit, bool invoke)
  bool InSafeZone()
  TriggerParent FindSuitableParent()
  float get_Weight()
  void set_Weight(float value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseFishingRod
Наследуется от: HeldEntity
Поля:
  GameObjectRef FishingBobberRef
  float FishCatchDistance
  LineRenderer ReelLineRenderer
  Transform LineRendererWorldStartPos
  CatchState <CurrentState>k__BackingField
  FishState currentFishState
  EntityRef`1<FishingBobber> currentBobber
  float ConditionLossOnSuccess
  float ConditionLossOnFail
  float GlobalStrainSpeedMultiplier
  float MaxCastDistance
  Flags Straining
  ItemModFishable ForceFish
  Flags PullingLeftFlag
  Flags PullingRightFlag
  Flags ReelingInFlag
  GameObjectRef BobberPreview
  SoundDefinition onLineSoundDef
  SoundDefinition strainSoundDef
  AnimationCurve strainGainCurve
  SoundDefinition tensionBreakSoundDef
  UpdateFishingRod updateFishingRodQueue
  FishLookup fishLookup
  TimeUntil nextFishStateChange
  TimeSince fishCatchDuration
  float strainTimer
  float strainMax
  TimeSince lastStrainUpdate
  TimeUntil catchTime
  TimeSince lastSightCheck
  Vector3 playerStartPosition
  WaterBody surfaceBody
  ItemDefinition lureUsed
  ItemDefinition currentFishTarget
  ItemModFishable fishableModifier
  ItemModFishable lastFish
  bool inQueue
  bool ForceSuccess
  bool ForceFail
  bool ImmediateHook
Свойства:
  CatchState CurrentState
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  CatchState get_CurrentState()
  void set_CurrentState(CatchState value)
  void Load(LoadInfo info)
  bool BlocksGestures()
  bool AllowPullInDirection(Vector3 worldDirection, Vector3 bobberPosition)
  bool EvaluateFishingPosition(Vector3& pos, BasePlayer ply, FailReason& reason, WaterBody& waterBody)
  Item GetCurrentLure()
  bool HasReelInInput(InputState state)
  void Server_RequestCast(RPCMessage msg)
  void FailedCast(FailReason reason)
  void CatchProcess()
  void CatchProcessBudgeted()
  void ResetLine()
  void Server_Cancel(RPCMessage msg)
  void Server_Cancel(FailReason reason)
  void OnHeldChanged()
  void Save(SaveInfo info)
  void UpdateFlags(bool inputLeft, bool inputRight, bool back)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseGameMode
Наследуется от: BaseEntity
Поля:
  GameMode gameModeScores
  String[] scoreColumns
  bool globalChat
  bool localChat
  bool teamSystem
  bool safeZone
  bool ingameMap
  bool compass
  bool contactSystem
  bool crawling
  bool rustPlus
  bool wipeBpsOnProtocol
  int maximumSleepingBags
  bool returnValidCombatlog
  bool missionSystem
  bool mlrs
  Flags Flag_Warmup
  Flags Flag_GameOver
  Flags Flag_WaitingForPlayers
  Phrase[] addedFeatures
  Phrase[] removedFeatures
  Phrase[] changedFeatures
  List`1<string> convars
  Action`1<BaseGameMode> GameModeChanged
  string shortname
  float matchDuration
  float warmupDuration
  float timeBetweenMatches
  int minPlayersToStart
  bool useCustomSpawns
  string victoryScoreName
  string teamScoreName
  int numScoreForVictory
  string gamemodeTitle
  SoundDefinition[] warmupMusics
  SoundDefinition[] lossMusics
  SoundDefinition[] winMusics
  float warmupStartTime
  float matchStartTime
  float matchEndTime
  List`1<string> gameModeTags
  CameraMode deathCameraMode
  bool permanent
  bool limitTeamAuths
  bool allowSleeping
  bool allowWounding
  bool allowBleeding
  bool allowTemperature
  bool quickRespawn
  bool quickDeploy
  float respawnDelayOverride
  float startHealthOverride
  float autoHealDelay
  float autoHealDuration
  bool hasKillFeed
  bool allowPings
  BaseGameMode svActiveGameMode
  List`1<BaseGameMode> svGameModeManifest
  GameObject[] allspawns
  GameModeSpawnGroup[] gameModeSpawnGroups
  PlayerInventoryProperties[] loadouts
  bool useStaticLoadoutPerPlayer
  bool topUpMagazines
  bool sendKillNotifications
  GameModeTeam[] teams
  float corpseRemovalTimeOverride
  bool isResetting
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  GameMode GetGameScores()
  int ScoreColumnIndex(string scoreName)
  void InitScores()
  void CopyGameModeScores(GameMode from, GameMode to)
  PlayerScore GetPlayerScoreForPlayer(BasePlayer player)
  int GetScoreIndexByName(string name)
  bool IsDraw()
  string GetWinnerName()
  int GetPlayerTeamPosition(BasePlayer player)
  int GetPlayerRank(BasePlayer player)
  int GetWinningTeamIndex()
  bool DidPlayerWin(BasePlayer player)
  bool IsTeamGame()
  bool KeepScores()
  void ModifyTeamScore(int teamIndex, int modifyAmount)
  void SetTeamScore(int teamIndex, int score)
  void ResetPlayerScores(BasePlayer player)
  void ModifyPlayerGameScore(BasePlayer player, string scoreName, int modifyAmount)
  void ModifyPlayerGameScore(BasePlayer player, int scoreIndex, int modifyAmount)
  int GetPlayerGameScore(BasePlayer player, int scoreIndex)
  void SetPlayerTeam(BasePlayer player, int newTeam)
  void SetPlayerGameScore(BasePlayer player, int scoreIndex, int scoreValue)
  int GetMaxBeds(BasePlayer player)
  void SetupTags()
  ResearchCostResult GetScrapCostForResearch(ItemDefinition item, ResearchType researchType)
  Nullable`1<float> EvaluateSleepingBagReset(SleepingBag bag, Vector3 position, SleepingBagResetReason reason)
  void DeleteEntities()
  void OnCreated_Vanilla()
  void add_GameModeChanged(Action`1<BaseGameMode> value)
  void remove_GameModeChanged(Action`1<BaseGameMode> value)
  bool HasAnyGameModeTag(String[] tags)
  bool HasGameModeTag(string tag)
  bool AllowsSleeping()
  bool HasLoadouts()
  int GetNumTeams()
  int GetTeamScore(int teamIndex)
  void CreateGameMode(string overrideMode)
  void SetActiveGameMode(BaseGameMode newActive, bool serverside)
  BaseGameMode GetActiveGameMode(bool serverside)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  float CorpseRemovalTime(BaseCorpse corpse)
  bool InWarmup()
  bool IsWaitingForPlayers()
  bool IsMatchOver()
  bool IsMatchActive()
  void InitShared()
  void DestroyShared()
  void OnCreated()
  void OnMatchBegin()
  void ResetMatch()
  void ResetTeamScores()
  void ShutdownGame()
  void Update()
  void OnThink(float delta)
  void OnMatchEnd()
  void OnNewPlayer(BasePlayer player)
  void PostPlayerRespawn(BasePlayer player)
  void OnPlayerConnected(BasePlayer player)
  void UnassignAllPlayers()
  void AutoAssignTeam(BasePlayer player)
  void OnPlayerDisconnected(BasePlayer player)
  void OnPlayerWounded(BasePlayer instigator, BasePlayer victim, HitInfo info)
  void OnPlayerRevived(BasePlayer instigator, BasePlayer victim)
  void OnPlayerHurt(BasePlayer instigator, BasePlayer victim, HitInfo deathInfo)
  void OnPlayerDeath(BasePlayer instigator, BasePlayer victim, HitInfo deathInfo)
  bool CanPlayerRespawn(BasePlayer player)
  void OnPlayerRespawn(BasePlayer player)
  void CheckGameConditions(bool force)
  void LoadoutPlayer(BasePlayer player)
  void InstallSpawnpoints()
  SpawnPoint GetPlayerSpawn(BasePlayer forPlayer)
  int GetMaxRelationshipTeamSize()
  SleepingBag[] FindSleepingBagsForPlayer(ulong playerID, bool ignoreTimers)
  bool CanMoveItemsFrom(PlayerInventory inv, BaseEntity source, Item item)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseLauncher
Наследуется от: BaseProjectile
Поля:
  float initialSpeedMultiplier
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool ForceSendMagazine(SaveInfo saveInfo)
  void ServerUse()
  void ServerUse(float damageModifier, Transform originOverride)
  void SV_Launch(RPCMessage msg)
  void ProjectileLaunched_Server(ServerProjectile justLaunched)
  void .ctor()
--------------------------------------------------
Класс: BaseLiquidVessel
Наследуется от: AttackEntity
Поля:
  GameObjectRef thrownWaterObject
  GameObjectRef ThrowEffect3P
  SoundDefinition throwSound3P
  GameObjectRef fillFromContainer
  GameObjectRef fillFromWorld
  SoundDefinition fillFromContainerStartSoundDef
  SoundDefinition fillFromContainerSoundDef
  SoundDefinition fillFromWorldStartSoundDef
  SoundDefinition fillFromWorldSoundDef
  bool hasLid
  float throwScale
  bool canDrinkFrom
  bool updateVMWater
  float minThrowFrac
  bool useThrowAnim
  float fillMlPerSec
  float lastFillTime
  float nextFreeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void OnHeldChanged()
  void SetFilling(bool isFilling)
  void OnSetFilling(bool flag)
  void StartFilling()
  void StopFilling()
  void FillCheck()
  void LoseWater(int amount)
  void AddLiquid(ItemDefinition liquidType, int amount)
  int AmountHeld()
  float HeldFraction()
  int MaxHoldable()
  bool CanDrink()
  bool IsWeaponBusy()
  void SetBusyFor(float dur)
  void ClearBusy()
  void DoDrink(RPCMessage msg)
  void ThrowContents(RPCMessage msg)
  void DoThrow(Vector3 pos, Vector3 velocity)
  void SendFilling(RPCMessage msg)
  bool CanFillFromWorld()
  bool CanThrow()
  LiquidContainer GetFacingLiquidContainer()
  void .ctor()
--------------------------------------------------
Класс: BaseLock
Наследуется от: BaseEntity
Поля:
  ItemDefinition itemType
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool GetPlayerLockPermission(BasePlayer player)
  bool OnTryToOpen(BasePlayer player)
  bool OnTryToClose(BasePlayer player)
  bool HasLockPermission(BasePlayer player)
  void RPC_TakeLock(RPCMessage rpc)
  float BoundsPadding()
  void .ctor()
--------------------------------------------------
Класс: BaseMelee
Наследуется от: AttackEntity
Поля:
  DamageProperties damageProperties
  List`1<DamageTypeEntry> damageTypes
  float maxDistance
  float attackRadius
  bool isAutomatic
  bool blockSprintOnAttack
  bool canUntieCrates
  GameObjectRef strikeFX
  bool useStandardHitEffects
  float aiStrikeDelay
  GameObjectRef swingEffect
  List`1<MaterialFX> materialStrikeFX
  float heartStress
  GatherProperties gathering
  bool canThrowAsProjectile
  bool canAiHearIt
  bool onlyThrowAsProjectile
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void GetAttackStats(HitInfo info)
  void DoAttackShared(HitInfo info)
  GatherPropertyEntry GetGatherInfoFromIndex(GatherType index)
  bool CanHit(HitTest info)
  float TotalDamage()
  bool IsItemBroken()
  void LoseCondition(float amount)
  float GetConditionLoss()
  void UpdateItemCondition(HitInfo info)
  void PlayerAttack(RPCMessage msg)
  bool CanBeUsedInWater()
  string GetStrikeEffectPath(string materialName)
  void ServerUse()
  void ServerUse_OnHit(HitInfo info)
  void ServerUse_Strike()
  Vector3 GetInheritedVelocity(BasePlayer player, Vector3 direction)
  void CLProject(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: BaseMountable
Наследуется от: BaseCombatEntity
Поля:
  Phrase dismountPhrase
  Transform eyePositionOverride
  Transform eyeCenterOverride
  Vector2 pitchClamp
  Vector2 yawClamp
  bool canWieldItems
  bool relativeViewAngles
  Transform mountAnchor
  float mountLOSVertOffset
  MountPoses mountPose
  float maxMountDistance
  Transform[] dismountPositions
  bool checkPlayerLosOnMount
  bool disableMeshCullingForPlayers
  bool allowHeadLook
  bool ignoreVehicleParent
  bool legacyDismount
  ItemModWearable wearWhileMounted
  bool modifiesPlayerCollider
  CapsuleColliderInfo customPlayerCollider
  SoundDefinition mountSoundDef
  SoundDefinition swapSoundDef
  SoundDefinition dismountSoundDef
  DismountConvarType dismountHoldType
  MountStatType mountTimeStatType
  MountGestureType allowedGestures
  bool canDrinkWhileMounted
  bool allowSleeperMounting
  bool animateClothInLocalSpace
  CameraMode MountedCameraMode
  Rigidbody rigidBody
  bool isMobile
  float SideLeanAmount
  float playerHeight
  float playerRadius
  BasePlayer _mounted
  ListHashSet`1<BaseMountable> FixedUpdateMountables
Свойства:
  float PositionTickRate
  bool IsSummerDlcVehicle
  bool BlocksDoors
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool CanHoldItems()
  CameraMode GetMountedCameraMode()
  bool DirectlyMountable()
  Transform GetEyeOverride()
  bool ModifiesThirdPersonCamera()
  Vector2 GetPitchClamp()
  Vector2 GetYawClamp()
  bool AnyMounted()
  bool IsMounted()
  Vector3 EyePositionForPlayer(BasePlayer player, Quaternion lookRot)
  Vector3 EyeCenterForPlayer(BasePlayer player, Quaternion lookRot)
  float WaterFactorForPlayer(BasePlayer player)
  float MaxVelocity()
  bool PlayerIsMounted(BasePlayer player)
  BaseVehicle VehicleParent()
  bool HasValidDismountPosition(BasePlayer player)
  bool ValidDismountPosition(BasePlayer player, Vector3 disPos)
  BasePlayer GetMounted()
  void MounteeTookDamage(BasePlayer mountee, HitInfo info)
  void LightToggle(BasePlayer player)
  void OnWeaponFired(BaseProjectile weapon)
  bool CanSwapToThis(BasePlayer player)
  float get_PositionTickRate()
  bool CanPickup(BasePlayer player)
  void OnKilled(HitInfo info)
  void RPC_WantsMount(RPCMessage msg)
  void WantsMount(BasePlayer player)
  void AttemptMount(BasePlayer player, bool doMountChecks)
  bool AttemptDismount(BasePlayer player)
  void RPC_WantsDismount(RPCMessage msg)
  void MountPlayer(BasePlayer player)
  void OnPlayerMounted()
  void OnPlayerDismounted(BasePlayer player)
  void UpdateMountFlags()
  void DismountAllPlayers()
  void DismountPlayer(BasePlayer player, bool lite)
  bool GetDismountPosition(BasePlayer player, Vector3& res)
  void ServerInit()
  void DoServerDestroy()
  void FixedUpdateCycle()
  void VehicleFixedUpdate()
  void PostVehicleFixedUpdate()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  float GetComfort()
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  bool TryFireProjectile(StorageContainer ammoStorage, AmmoTypes ammoType, Vector3 firingPos, Vector3 firingDir, BasePlayer shooter, float launchOffset, float minSpeed, ServerProjectile& projectile)
  void DisableTransferProtection()
  bool get_IsSummerDlcVehicle()
  bool IsInstrument()
  Vector3 GetDismountCheckStart(BasePlayer player)
  Vector3 GetMountedPosition()
  bool NearMountPoint(BasePlayer player)
  Vector3 ConvertVector(Vector3 vec)
  bool get_BlocksDoors()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseNpc
Наследуется от: BaseCombatEntity
Поля:
  int agentTypeIndex
  bool NewAI
  bool LegacyNavigation
  bool <IsStuck>k__BackingField
  Vector3 stepDirection
  bool <AgencyUpdateRequired>k__BackingField
  bool <IsOnOffmeshLinkAndReachedNewCoord>k__BackingField
  float maxFleeTime
  float fleeHealthThresholdPercentage
  float blockEnemyTargetingTimeout
  float blockFoodTargetingTimeout
  float aggroTimeout
  float lastAggroChanceResult
  float lastAggroChanceCalcTime
  float aggroChanceRecalcTimeout
  float eatTimeout
  float wakeUpBlockMoveTimeout
  BaseEntity blockTargetingThisEnemy
  float waterDepth
  bool swimming
  bool wasSwimming
  AnimationCurve speedFractionResponse
  bool _traversingNavMeshLink
  OffMeshLinkData _currentNavMeshLink
  string _currentNavMeshLinkName
  float _currentNavMeshLinkTraversalTime
  float _currentNavMeshLinkTraversalTimeDelta
  Quaternion _currentNavMeshLinkOrientation
  Vector3 _currentNavMeshLinkEndPos
  float nextAttackTime
  Enum topologyPreference
  Transform ChaseTransform
  GameObjectRef CorpsePrefab
  AiStatistics Stats
  Vector3 AttackOffset
  float AttackDamage
  DamageType AttackDamageType
  float AttackCost
  float AttackRate
  float AttackRange
  NavMeshAgent NavAgent
  LayerMask movementMask
  float stuckDuration
  float lastStuckTime
  float idleDuration
  bool _isDormant
  float lastSetDestinationTime
  BaseEntity <AttackTarget>k__BackingField
  SeenInfo <AttackTargetMemory>k__BackingField
  BaseEntity <FoodTarget>k__BackingField
  Vector3 <SpawnPosition>k__BackingField
  StateTimer BusyTimer
  float Sleep
  VitalLevel Stamina
  VitalLevel Energy
  VitalLevel Hydration
  Behaviour <CurrentBehaviour>k__BackingField
  AiFlags aiFlags
  Byte[] CurrentFacts
  int ForgetUnseenEntityTime
  float SensesTickRate
  BaseEntity[] SensesResults
  float lastTickTime
  float playerTargetDecisionStartTime
  float animalTargetDecisionStartTime
  bool isAlreadyCheckingPathPending
  int numPathPendingAttempts
  float accumPathPendingDelay
  float TickRate
  Vector3 lastStuckPos
  float nextFlinchTime
  float _lastHeardGunshotTime
  Vector3 <LastHeardGunshotDirection>k__BackingField
  float <TargetSpeed>k__BackingField
Свойства:
  int AgentTypeIndex
  bool IsStuck
  bool AgencyUpdateRequired
  bool IsOnOffmeshLinkAndReachedNewCoord
  float GetAttackRate
  bool IsNpc
  bool IsDormant
  float SecondsSinceLastSetDestination
  float LastSetDestinationTime
  Vector3 Destination
  bool IsStopped
  bool AutoBraking
  bool HasPath
  BaseEntity AttackTarget
  SeenInfo AttackTargetMemory
  BaseEntity FoodTarget
  BaseCombatEntity CombatTarget
  Vector3 SpawnPosition
  float AttackTargetVisibleFor
  float TimeAtDestination
  BaseCombatEntity Entity
  NavMeshAgent GetNavAgent
  AiStatistics GetStats
  float GetAttackRange
  Vector3 GetAttackOffset
  float GetStamina
  float GetEnergy
  float GetAttackCost
  float GetSleep
  Vector3 CurrentAimAngles
  float GetStuckDuration
  float GetLastStuckTime
  Vector3 AttackPosition
  Vector3 CrouchedAttackPosition
  float currentBehaviorDuration
  Behaviour CurrentBehaviour
  bool IsSitting
  bool IsChasing
  bool IsSleeping
  float SecondsSinceLastHeardGunshot
  Vector3 LastHeardGunshotDirection
  float TargetSpeed
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int get_AgentTypeIndex()
  void set_AgentTypeIndex(int value)
  bool get_IsStuck()
  void set_IsStuck(bool value)
  bool get_AgencyUpdateRequired()
  void set_AgencyUpdateRequired(bool value)
  bool get_IsOnOffmeshLinkAndReachedNewCoord()
  void set_IsOnOffmeshLinkAndReachedNewCoord(bool value)
  string DebugText()
  void TickAi()
  void TickSpeed()
  void TickMetabolism()
  bool WantsToEat(BaseEntity best)
  float FearLevel(BaseEntity ent)
  float HateLevel(BaseEntity ent)
  void TickSleep()
  void TickNavigationWater()
  void TickNavigation()
  void TickChase()
  void HandleNavMeshLinkTraversal(float delta, Vector3& moveToPosition)
  bool HandleNavMeshLinkTraversalStart(float delta)
  void HandleNavMeshLinkTraversalTick(float delta, Vector3& moveToPosition)
  bool IsNavMeshLinkTraversalComplete(float delta, Vector3& moveToPosition)
  void CompleteNavMeshLink()
  void TickFollowPath(Vector3& moveToPosition)
  bool ValidateNextPosition(Vector3& moveToPosition)
  void UpdatePositionAndRotation(Vector3 moveToPosition)
  void TickIdle()
  void TickStuck()
  void OnBecomeStuck()
  void OnBecomeUnStuck()
  void UpdateAiRotation()
  float get_GetAttackRate()
  bool AttackReady()
  void StartAttack()
  void Attack(BaseCombatEntity target)
  void Eat()
  void AddCalories(float amount)
  void Startled()
  bool IsAfraid()
  bool IsAfraidOf(FamilyEnum family)
  bool CheckHealthThresholdToFlee()
  void TickBehaviourState()
  void WantsToFlee()
  void TickFlee()
  bool BlockEnemyTargeting(float timeout)
  void TickBlockEnemyTargeting()
  bool BlockFoodTargeting(float timeout)
  void TickBlockFoodTargeting()
  bool TryAggro(EnemyRangeEnum range)
  bool StartAggro(float timeout)
  void TickAggro()
  bool StartEating(float timeout)
  void TickEating()
  bool WakeUpBlockMove(float timeout)
  void TickWakeUpBlockMove()
  void OnFactChanged(Facts fact, byte oldValue, byte newValue)
  int TopologyPreference()
  void UpdateDestination(Vector3 position)
  void UpdateDestination(Transform tx)
  void StopMoving()
  void ApplyInheritedVelocity(Vector3 velocity)
  Vector3 GetNewNavPosWithVelocity(BaseEntity ent, Vector3 velocity)
  bool get_IsNpc()
  bool get_IsDormant()
  void set_IsDormant(bool value)
  float get_SecondsSinceLastSetDestination()
  float get_LastSetDestinationTime()
  Vector3 get_Destination()
  void set_Destination(Vector3 value)
  bool get_IsStopped()
  void set_IsStopped(bool value)
  bool get_AutoBraking()
  void set_AutoBraking(bool value)
  bool get_HasPath()
  bool IsNavRunning()
  void Pause()
  void Resume()
  IEnumerator TryForceToNavmesh()
  BaseEntity get_AttackTarget()
  void set_AttackTarget(BaseEntity value)
  SeenInfo get_AttackTargetMemory()
  void set_AttackTargetMemory(SeenInfo value)
  BaseEntity get_FoodTarget()
  void set_FoodTarget(BaseEntity value)
  BaseCombatEntity get_CombatTarget()
  Vector3 get_SpawnPosition()
  void set_SpawnPosition(Vector3 value)
  float get_AttackTargetVisibleFor()
  float get_TimeAtDestination()
  BaseCombatEntity get_Entity()
  NavMeshAgent get_GetNavAgent()
  float GetWantsToAttack(BaseEntity target)
  AiStatistics get_GetStats()
  float get_GetAttackRange()
  Vector3 get_GetAttackOffset()
  float get_GetStamina()
  float get_GetEnergy()
  float get_GetAttackCost()
  float get_GetSleep()
  Vector3 get_CurrentAimAngles()
  float get_GetStuckDuration()
  float get_GetLastStuckTime()
  bool BusyTimerActive()
  void SetBusyFor(float dur)
  Vector3 get_AttackPosition()
  Vector3 get_CrouchedAttackPosition()
  float WantsToAttack(BaseEntity target)
  float get_currentBehaviorDuration()
  Behaviour get_CurrentBehaviour()
  void set_CurrentBehaviour(Behaviour value)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  float MaxVelocity()
  bool HasAiFlag(AiFlags f)
  void SetAiFlag(AiFlags f, bool set)
  bool get_IsSitting()
  void set_IsSitting(bool value)
  bool get_IsChasing()
  void set_IsChasing(bool value)
  bool get_IsSleeping()
  void set_IsSleeping(bool value)
  void InitFacts()
  byte GetFact(Facts fact)
  void SetFact(Facts fact, byte value, bool triggerCallback, bool onlyTriggerCallbackOnDiffValue)
  EnemyRangeEnum ToEnemyRangeEnum(float range)
  float GetActiveAggressionRangeSqr()
  FoodRangeEnum ToFoodRangeEnum(float range)
  AfraidRangeEnum ToAfraidRangeEnum(float range)
  HealthEnum ToHealthEnum(float healthNormalized)
  byte ToIsTired(float energyNormalized)
  SpeedEnum ToSpeedEnum(float speed)
  float ToSpeed(SpeedEnum speed)
  byte GetPathStatus()
  NavMeshPathStatus ToPathStatus(byte value)
  void TickSenses()
  void TickHearing()
  void TickSmell()
  float DecisionMomentumPlayerTarget()
  float DecisionMomentumAnimalTarget()
  void TickFoodAwareness()
  void SelectFood()
  void SelectClosestFood()
  void UpdateSelfFacts()
  byte IsMoving()
  bool AiCaresAbout(BaseEntity ent)
  bool WithinVisionCone(BaseNpc npc, BaseEntity other)
  void SetTargetPathStatus(float pendingDelay)
  void DelayedTargetPathStatus()
  void ServerInit()
  void DoServerDestroy()
  void Hurt(HitInfo info)
  void OnKilled(HitInfo hitInfo)
  void OnSensation(Sensation sensation)
  void OnSenseGunshot(Sensation sensation)
  float get_SecondsSinceLastHeardGunshot()
  Vector3 get_LastHeardGunshotDirection()
  void set_LastHeardGunshotDirection(Vector3 value)
  float get_TargetSpeed()
  void set_TargetSpeed(float value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseOven
Наследуется от: StorageContainer
Поля:
  Dictionary`2<float, HashSet`1<ItemDefinition>> _materialOutputCache
  TemperatureType temperature
  Option switchOnMenu
  Option switchOffMenu
  ItemAmount[] startupContents
  bool allowByproductCreation
  ItemDefinition fuelType
  bool canModFire
  bool disabledBySplash
  int smeltSpeed
  int fuelSlots
  int inputSlots
  int outputSlots
  IndustrialSlotMode IndustrialMode
  int _activeCookingSlot
  int _inputSlotIndex
  int _outputSlotIndex
  float UpdateRate
Свойства:
  bool CanRunWithNoFuel
  ItemContainer Container
  BaseEntity IndustrialEntity
  float cookingTemperature
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void PreInitShared()
  void ServerInit()
  void PostServerLoad()
  void Save(SaveInfo info)
  void OnInventoryFirstCreated(ItemContainer container)
  void OnItemAddedOrRemoved(Item item, bool bAdded)
  bool ItemFilter(Item item, int targetSlot)
  Nullable`1<MinMax> GetAllowedSlots(Item item)
  MinMax GetOutputSlotRange()
  int GetIdealSlot(BasePlayer player, Item item)
  void OvenFull()
  int GetFuelRate()
  int GetCharcoalRate()
  bool get_CanRunWithNoFuel()
  void Cook()
  void OnCooked()
  void ConsumeFuel(Item fuel, ItemModBurnable burnable)
  void SVSwitch(RPCMessage msg)
  float GetTemperature(int slot)
  void UpdateAttachmentTemperature()
  void StartCooking()
  void StopCooking()
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  Item FindBurnable()
  void IncreaseCookTime(float amount)
  ItemContainer get_Container()
  Vector2i InputSlotRange(int slotIndex)
  Vector2i OutputSlotRange(int slotIndex)
  void OnStorageItemTransferBegin()
  void OnStorageItemTransferEnd()
  BaseEntity get_IndustrialEntity()
  float GetSmeltingSpeed()
  float get_cookingTemperature()
  bool IsBurnableItem(Item item)
  bool IsBurnableByproduct(Item item)
  bool IsMaterialInput(Item item)
  bool IsMaterialOutput(Item item)
  bool IsOutputItem(Item item)
  void BuildMaterialOutputCache()
  bool HasSlot(Slot slot)
  bool SupportsChildDeployables()
  bool CanPickup(BasePlayer player)
  bool CanPickupOven()
  void .ctor()
--------------------------------------------------
Класс: BasePlayer
Наследуется от: BaseCombatEntity
Поля:
  bool isInAir
  bool isOnPlayer
  float violationLevel
  float lastViolationTime
  float lastAdminCheatTime
  AntiHackType lastViolationType
  float vehiclePauseTime
  float speedhackPauseTime
  float speedhackDistance
  float flyhackPauseTime
  float flyhackDistanceVertical
  float flyhackDistanceHorizontal
  TimeAverageValueLookup`1<UInt32> rpcHistory
  Phrase ClanInviteSuccess
  Phrase ClanInviteFailure
  Phrase ClanInviteFull
  long clanId
  ViewModel GestureViewModel
  float drinkRange
  float drinkMovementSpeed
  NetworkQueueList[] networkQueue
  NetworkQueueList SnapshotQueue
  string GestureCancelString
  GestureCollection gestureList
  TimeUntil gestureFinishedTime
  TimeSince blockHeldInputTimer
  GestureConfig currentGesture
  HashSet`1<NetworkableId> recentWaveTargets
  string WAVED_PLAYERS_STAT
  ulong currentTeam
  Phrase MaxTeamSizeToast
  bool sentInstrumentTeamAchievement
  bool sentSummerTeamAchievement
  int TEAMMATE_INSTRUMENT_COUNT_ACHIEVEMENT
  int TEAMMATE_SUMMER_FLOATING_COUNT_ACHIEVEMENT
  string TEAMMATE_INSTRUMENT_ACHIEVEMENT
  string TEAMMATE_SUMMER_ACHIEVEMENT
  Phrase MarkerLimitPhrase
  int MaxMapNoteLabelLength
  List`1<MissionInstance> missions
  float thinkEvery
  float timeSinceMissionThink
  int _activeMission
  ModelState modelState
  ModelState <modelStateTick>k__BackingField
  bool wantsSendModelState
  float nextModelStateUpdate
  EntityRef mounted
  float nextSeatSwapTime
  BaseEntity PetEntity
  IPet Pet
  float lastPetCommandIssuedTime
  Phrase HostileTitle
  Phrase HostileDesc
  PingStyle HostileMarker
  Phrase GoToTitle
  Phrase GoToDesc
  PingStyle GoToMarker
  Phrase DollarTitle
  Phrase DollarDesc
  PingStyle DollarMarker
  Phrase LootTitle
  Phrase LootDesc
  PingStyle LootMarker
  Phrase NodeTitle
  Phrase NodeDesc
  PingStyle NodeMarker
  Phrase GunTitle
  Phrase GunDesc
  PingStyle GunMarker
  TimeSince lastTick
  bool _playerStateDirty
  string _wipeId
  Dictionary`2<int, FiredProjectile> firedProjectiles
  PlayerStatistics stats
  ItemId svActiveItemID
  float NextChatTime
  float nextSuicideTime
  float nextRespawnTime
  string respawnId
  RealTimeUntil timeUntilLoadingExpires
  int <DebugMapMarkerIndex>k__BackingField
  UInt32 <LastBlockColourChangeId>k__BackingField
  bool <PlayHeavyLandingAnimation>k__BackingField
  Vector3 <estimatedVelocity>k__BackingField
  float <estimatedSpeed>k__BackingField
  float <estimatedSpeed2D>k__BackingField
  int <secondsConnected>k__BackingField
  float <desyncTimeRaw>k__BackingField
  float <desyncTimeClamped>k__BackingField
  Vector3 viewAngles
  float lastSubscriptionTick
  float lastPlayerTick
  float sleepStartTime
  float fallTickRate
  float lastFallTime
  float fallVelocity
  HitInfo cachedNonSuicideHitInfo
  ListHashSet`1<BasePlayer> activePlayerList
  ListHashSet`1<BasePlayer> sleepingPlayerList
  ListHashSet`1<BasePlayer> bots
  float cachedCraftLevel
  float nextCheckTime
  Workbench _cachedWorkbench
  PersistantPlayer cachedPersistantPlayer
  int WILDERNESS
  int MONUMENT
  int BASE
  int FLYING
  int BOATING
  int SWIMMING
  int DRIVING
  float lifeStoryFramebudgetms
  PlayerLifeStory lifeStory
  PlayerLifeStory previousLifeStory
  float TimeCategoryUpdateFrequency
  float nextTimeCategoryUpdate
  int <currentTimeCategory>k__BackingField
  bool hasSentPresenceState
  bool LifeStoryInWilderness
  bool LifeStoryInMonument
  bool LifeStoryInBase
  bool LifeStoryFlying
  bool LifeStoryBoating
  bool LifeStorySwimming
  bool LifeStoryDriving
  bool waitingForLifeStoryUpdate
  LifeStoryWorkQueue lifeStoryQueue
  int SpectateOffset
  string spectateFilter
  bool <IsBeingSpectated>k__BackingField
  float lastUpdateTime
  float cachedThreatLevel
  float weaponDrawnDuration
  int serverTickRateDefault
  int clientTickRateDefault
  int serverTickRate
  int clientTickRate
  float serverTickInterval
  float clientTickInterval
  InputState <serverInput>k__BackingField
  float lastTickTime
  float lastStallTime
  float lastInputTime
  PlayerTick lastReceivedTick
  float tickDeltaTime
  bool tickNeedsFinalizing
  Vector3 <tickViewAngles>k__BackingField
  TimeAverageValue ticksPerSecond
  TickInterpolator tickInterpolator
  Deque`1<Vector3> eyeHistory
  TickHistory tickHistory
  float nextUnderwearValidationTime
  UInt32 lastValidUnderwearSkin
  float woundedDuration
  float lastWoundedStartTime
  float healingWhileCrawling
  bool woundedByFallDamage
  float INCAPACITATED_HEALTH_MIN
  float INCAPACITATED_HEALTH_MAX
  int MaxBotIdRange
  GameObjectRef fallDamageEffect
  GameObjectRef drownEffect
  PlayerFlags playerFlags
  PlayerEyes eyes
  PlayerInventory inventory
  PlayerBlueprints blueprints
  PlayerMetabolism metabolism
  PlayerModifiers modifiers
  CapsuleCollider playerCollider
  PlayerBelt Belt
  Rigidbody playerRigidbody
  ulong userID
  string UserIDString
  int gamemodeteam
  int reputation
  string _displayName
  string _lastSetName
  float crouchSpeed
  float walkSpeed
  float runSpeed
  float crawlSpeed
  CapsuleColliderInfo playerColliderStanding
  CapsuleColliderInfo playerColliderDucked
  CapsuleColliderInfo playerColliderCrawling
  CapsuleColliderInfo playerColliderLyingDown
  ProtectionProperties cachedProtection
  float nextColliderRefreshTime
  bool clothingBlocksAiming
  float clothingMoveSpeedReduction
  float clothingWaterSpeedBonus
  float clothingAccuracyBonus
  bool equippingBlocked
  float eggVision
  PhoneController activeTelephone
  BaseEntity designingAIEntity
  IPlayer IPlayer
Свойства:
  Phrase LootPanelTitle
  bool IsReceivingSnapshot
  bool IsAdmin
  bool IsDeveloper
  bool UnlockAllSkins
  bool IsAiming
  bool IsFlying
  bool IsConnected
  bool InGesture
  bool CurrentGestureBlocksMovement
  bool CurrentGestureIsDance
  bool CurrentGestureIsFullBody
  bool InGestureCancelCooldown
  PlayerTeam Team
  MapNote ServerCurrentDeathNote
  ModelState modelStateTick
  bool isMounted
  bool isMountingHidingWeapon
  PlayerState State
  string WipeId
  FamilyEnum Family
  float PositionTickRate
  int DebugMapMarkerIndex
  UInt32 LastBlockColourChangeId
  bool PlayHeavyLandingAnimation
  Vector3 estimatedVelocity
  float estimatedSpeed
  float estimatedSpeed2D
  int secondsConnected
  float desyncTimeRaw
  float desyncTimeClamped
  float secondsSleeping
  IEnumerable`1<BasePlayer> allPlayerList
  float currentCraftLevel
  float currentComfort
  PersistantPlayer PersistantPlayerInfo
  bool hasPreviousLife
  int currentTimeCategory
  bool IsBeingSpectated
  InputState serverInput
  float timeSinceLastTick
  float IdleTime
  bool isStalled
  bool wasStalled
  Vector3 tickViewAngles
  int tickHistoryCapacity
  Matrix4x4 tickHistoryMatrix
  float TimeSinceWoundedStarted
  Connection Connection
  bool IsBot
  string displayName
  TraitFlag Traits
  bool HasActiveTelephone
  bool IsDesigningAI
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool TriggeredAntiHack(float seconds, float score)
  bool UsedAdminCheat(float seconds)
  void PauseVehicleNoClipDetection(float seconds)
  void PauseFlyHackDetection(float seconds)
  void PauseSpeedHackDetection(float seconds)
  int GetAntiHackKicks()
  void ResetAntiHack()
  bool CanModifyClan()
  void LoadClanInfo()
  void UpdateClanLastSeen()
  bool CanBeLooted(BasePlayer player)
  Phrase get_LootPanelTitle()
  void RPC_LootPlayer(RPCMessage msg)
  void RPC_Assist(RPCMessage msg)
  void RPC_KeepAlive(RPCMessage msg)
  void SV_Drink(RPCMessage msg)
  void RPC_StartClimb(RPCMessage msg)
  void RequestServerEmoji()
  void ServerRequestEmojiData(RPCMessage msg)
  int GetQueuedUpdateCount(NetworkQueue queue)
  void SendSnapshots(ListHashSet`1<Networkable> ents)
  void QueueUpdate(NetworkQueue queue, BaseNetworkable ent)
  void SendEntityUpdate()
  void ClearEntityQueue(Group group)
  void SendEntityUpdates(NetworkQueueList queue)
  void SendEntitySnapshot(BaseNetworkable ent)
  bool HasPlayerFlag(PlayerFlags f)
  bool get_IsReceivingSnapshot()
  bool get_IsAdmin()
  bool get_IsDeveloper()
  bool get_UnlockAllSkins()
  bool get_IsAiming()
  bool get_IsFlying()
  bool get_IsConnected()
  void SetPlayerFlag(PlayerFlags f, bool b)
  void LightToggle(bool mask)
  bool get_InGesture()
  bool get_CurrentGestureBlocksMovement()
  bool get_CurrentGestureIsDance()
  bool get_CurrentGestureIsFullBody()
  bool get_InGestureCancelCooldown()
  void Server_StartGesture(RPCMessage msg)
  void Server_StartGesture(UInt32 gestureId)
  void Server_StartGesture(GestureConfig toPlay, GestureStartSource startSource)
  void TimeoutGestureServer()
  void Server_CancelGesture()
  void MonitorLoopingGesture()
  void NotifyGesturesNewItemEquipped()
  int CountWaveTargets(Vector3 position, float distance, float minimumDot, Vector3 forward, HashSet`1<NetworkableId> workingList, int maxCount)
  bool IsGestureBlocked()
  PlayerTeam get_Team()
  void DelayedTeamUpdate()
  void TeamUpdate()
  void TeamUpdate(bool fullTeamUpdate)
  void UpdateTeam(ulong newTeam)
  void ClearTeam()
  void ClearPendingInvite()
  HeldEntity GetHeldEntity()
  bool IsHoldingEntity()
  bool IsHostileItem(Item item)
  bool IsItemHoldRestricted(Item item)
  MapNote get_ServerCurrentDeathNote()
  void set_ServerCurrentDeathNote(MapNote value)
  void Server_LogDeathMarker(Vector3 position)
  void Server_AddMarker(RPCMessage msg)
  int FindUnusedPointOfInterestColour()
  void Server_UpdateMarker(RPCMessage msg)
  void ValidateMapNote(MapNote n)
  void Server_RemovePointOfInterest(RPCMessage msg)
  void Server_RequestMarkers(RPCMessage msg)
  void Server_ClearMapMarkers(RPCMessage msg)
  void SendMarkersToClient()
  bool HasAttemptedMission(UInt32 missionID)
  bool CanAcceptMission(UInt32 missionID)
  bool IsMissionActive(UInt32 missionID)
  bool HasCompletedMission(UInt32 missionID)
  bool HasFailedMission(UInt32 missionID)
  void WipeMissions()
  void AbandonActiveMission()
  void AddMission(MissionInstance instance)
  void ThinkMissions(float delta)
  void ClearMissions()
  void MissionDirty(bool shouldSendNetworkUpdate)
  void ProcessMissionEvent(MissionEventType type, string identifier, float amount)
  Missions SaveMissions()
  void SetActiveMission(int index)
  int GetActiveMission()
  bool HasActiveMission()
  void LoadMissions(Missions loadedMissions)
  ModelState get_modelStateTick()
  void set_modelStateTick(ModelState value)
  void UpdateModelState()
  void SendModelState(bool force)
  bool get_isMounted()
  bool get_isMountingHidingWeapon()
  BaseMountable GetMounted()
  BaseVehicle GetMountedVehicle()
  void MarkSwapSeat()
  bool SwapSeatCooldown()
  bool CanMountMountablesNow()
  void MountObject(BaseMountable mount, int desiredSeat)
  void EnsureDismounted()
  void DismountObject()
  void HandleMountedOnLoad()
  bool AllowSleeperMounting(BaseMountable mountable)
  PlayerSecondaryData SaveSecondaryData()
  void LoadSecondaryData(PlayerSecondaryData data)
  void DisableTransferProtection()
  void RequestParachuteDeploy(RPCMessage msg)
  void RequestParachuteDeploy()
  bool CheckParachuteClearance()
  bool HasValidParachuteEquipped()
  void ClearClientPetLink()
  void SendClientPetLink()
  void SendClientPetStateIndex()
  void IssuePetCommand(RPCMessage msg)
  void IssuePetCommandRaycast(RPCMessage msg)
  void ParsePetCommand(RPCMessage msg, bool raycast)
  bool CanPing(bool disregardHeldEntity)
  PingStyle GetPingStyle(PingType t)
  void ApplyPingStyle(MapNote note, PingType type)
  void Server_AddPing(RPCMessage msg)
  void Server_RemovePing(RPCMessage msg)
  void SendPingsToClient()
  void TickPings()
  PlayerState get_State()
  string get_WipeId()
  void DirtyPlayerState()
  void SavePlayerState()
  void ResetPlayerState()
  bool IsSleeping()
  bool IsSpectating()
  bool IsRelaxed()
  bool IsServerFalling()
  bool IsLoadingAfterTransfer()
  bool CanBuild()
  bool CanBuild(Vector3 position, Quaternion rotation, Bounds bounds)
  bool CanBuild(OBB obb)
  bool IsBuildingBlocked()
  bool IsBuildingBlocked(Vector3 position, Quaternion rotation, Bounds bounds)
  bool IsBuildingBlocked(OBB obb)
  bool IsBuildingAuthed()
  bool IsBuildingAuthed(Vector3 position, Quaternion rotation, Bounds bounds)
  bool IsBuildingAuthed(OBB obb)
  bool CanPlaceBuildingPrivilege()
  bool CanPlaceBuildingPrivilege(Vector3 position, Quaternion rotation, Bounds bounds)
  bool CanPlaceBuildingPrivilege(OBB obb)
  bool IsNearEnemyBase()
  bool IsNearEnemyBase(Vector3 position, Quaternion rotation, Bounds bounds)
  bool IsNearEnemyBase(OBB obb)
  bool IsBuildingBlockedByVehicle()
  bool IsBuildingBlockedByVehicle(Vector3 position, Quaternion rotation, Bounds bounds)
  bool IsBuildingBlockedByVehicle(OBB obb)
  void OnProjectileAttack(RPCMessage msg)
  void OnProjectileRicochet(RPCMessage msg)
  void OnProjectileUpdate(RPCMessage msg)
  void SimulateProjectile(Vector3& position, Vector3& velocity, Single& partialTime, float travelTime, Vector3 gravity, float drag, Vector3& prevPosition, Vector3& prevVelocity)
  void CreateWorldProjectile(HitInfo info, ItemDefinition itemDef, ItemModProjectile itemMod, Projectile projectilePrefab, Item recycleItem)
  void CleanupExpiredProjectiles()
  bool HasFiredProjectile(int id)
  void NoteFiredProjectile(int projectileid, Vector3 startPos, Vector3 startVel, AttackEntity attackEnt, ItemDefinition firedItemDef, Guid projectileGroupId, Vector3 positionOffset, Item pickupItem)
  void ServerNoteFiredProjectile(int projectileid, Vector3 startPos, Vector3 startVel, AttackEntity attackEnt, ItemDefinition firedItemDef, Item pickupItem)
  bool CanUseNetworkCache(Connection connection)
  void PostServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  FamilyEnum get_Family()
  float get_PositionTickRate()
  int get_DebugMapMarkerIndex()
  void set_DebugMapMarkerIndex(int value)
  UInt32 get_LastBlockColourChangeId()
  void set_LastBlockColourChangeId(UInt32 value)
  bool get_PlayHeavyLandingAnimation()
  void set_PlayHeavyLandingAnimation(bool value)
  void OnParentRemoved()
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void TransformState(Matrix4x4 matrix)
  bool CanSuicide()
  void MarkSuicide()
  bool CanRespawn()
  void MarkRespawn(float nextSpawnDelay)
  Item GetActiveItem()
  void MovePosition(Vector3 newPos)
  Vector3 get_estimatedVelocity()
  void set_estimatedVelocity(Vector3 value)
  float get_estimatedSpeed()
  void set_estimatedSpeed(float value)
  float get_estimatedSpeed2D()
  void set_estimatedSpeed2D(float value)
  int get_secondsConnected()
  void set_secondsConnected(int value)
  float get_desyncTimeRaw()
  void set_desyncTimeRaw(float value)
  float get_desyncTimeClamped()
  void set_desyncTimeClamped(float value)
  void OverrideViewAngles(Vector3 newAng)
  void ServerInit()
  void DoServerDestroy()
  void ServerUpdate(float deltaTime)
  void ServerUpdateBots(float deltaTime)
  void ConnectedPlayerUpdate(float deltaTime)
  void EnterGame()
  void ClientKeepConnectionAlive(RPCMessage msg)
  void ClientLoadingComplete(RPCMessage msg)
  void PlayerInit(Connection c)
  void StatSave()
  void SendDeathInformation()
  void SendRespawnOptions()
  void GetRespawnOptionsForPlayer(List`1<SpawnOptions> spawnOptions, ulong userID)
  void RequestRespawnInformation(RPCMessage msg)
  float get_secondsSleeping()
  void ScheduledDeath()
  void StartSleeping()
  void TurnOffAllLights()
  void OnPhysicsNeighbourChanged()
  void DelayedServerFall()
  void SetServerFall(bool wantsOn)
  void ServerFall()
  void DelayedRigidbodyDisable()
  void EndSleeping()
  void EndLooting()
  void OnDisconnected()
  void InventoryUpdate()
  void ApplyFallDamageFromVelocity(float velocity)
  void OnPlayerLanded(RPCMessage msg)
  void SendGlobalSnapshot()
  void SendFullSnapshot()
  void OnNetworkGroupLeave(Group group)
  void LeaveVisibility(Group group)
  void OnNetworkGroupEnter(Group group)
  void EnterVisibility(Group group)
  void CheckDeathCondition(HitInfo info)
  BaseCorpse CreateCorpse()
  void OnKilled(HitInfo info)
  void RespawnAt(Vector3 position, Quaternion rotation, BaseEntity spawnPointEntity)
  void Respawn()
  bool IsImmortalTo(HitInfo info)
  float TimeAlive()
  void Hurt(HitInfo info)
  void Heal(float amount)
  IEnumerable`1<BasePlayer> get_allPlayerList()
  BasePlayer FindBot(ulong userId)
  BasePlayer FindBotClosestMatch(string name)
  BasePlayer FindByID(ulong userID)
  bool TryFindByID(ulong userID, BasePlayer& basePlayer)
  BasePlayer FindSleeping(ulong userID)
  void Command(string strCommand, Object[] arguments)
  void OnInvalidPosition()
  BasePlayer Find(string strNameOrIDOrIP, IEnumerable`1<BasePlayer> list)
  BasePlayer Find(string strNameOrIDOrIP)
  BasePlayer FindSleeping(string strNameOrIDOrIP)
  BasePlayer FindAwakeOrSleeping(string strNameOrIDOrIP)
  void SendConsoleCommand(string command, Object[] obj)
  void UpdateRadiation(float fAmount)
  float RadiationExposureFraction()
  float RadiationProtection()
  void OnHealthChanged(float oldvalue, float newvalue)
  void SV_ClothingChanged()
  bool IsNoob()
  bool HasHostileItem()
  void GiveItem(Item item, GiveItemReason reason)
  void AttackerInfo(DeathInfo info)
  void InvalidateWorkbenchCache()
  Workbench GetCachedCraftLevelWorkbench()
  float get_currentCraftLevel()
  float get_currentComfort()
  bool ShouldDropActiveItem()
  void Die(HitInfo info)
  void Kick(string reason)
  Vector3 GetDropPosition()
  Vector3 GetDropVelocity()
  void ApplyInheritedVelocity(Vector3 velocity)
  void SetInfo(string key, string val)
  int GetInfoInt(string key, int defaultVal)
  bool GetInfoBool(string key, bool defaultVal)
  string GetInfoString(string key, string defaultVal)
  void PerformanceReport(RPCMessage msg)
  void PerformanceReport_Frametime(RPCMessage msg)
  bool ShouldNetworkTo(BasePlayer player)
  void GiveAchievement(string name)
  void OnPlayerReported(RPCMessage msg)
  void OnFeedbackReport(RPCMessage msg)
  void StartDemoRecording()
  void StopDemoRecording()
  void MonitorDemoRecording()
  void InvalidateCachedPeristantPlayer()
  PersistantPlayer get_PersistantPlayerInfo()
  void set_PersistantPlayerInfo(PersistantPlayer value)
  bool IsPlayerVisibleToUs(BasePlayer otherPlayer, int layerMask)
  void OnKilledByPlayer(BasePlayer p)
  int GetIdealSlot(BasePlayer player, Item item)
  ItemContainerId GetIdealContainer(BasePlayer looter, Item item, bool altMove)
  BaseVehicle GetVehicleParent()
  void RemoveLoadingPlayerFlag()
  bool InNoRespawnZone()
  bool get_hasPreviousLife()
  int get_currentTimeCategory()
  void set_currentTimeCategory(int value)
  void LifeStoryStart()
  void LifeStoryEnd()
  void LifeStoryUpdate(float deltaTime, float moveSpeed)
  void UpdateTimeCategory()
  void LifeStoryShotFired(BaseEntity withWeapon)
  void LifeStoryShotHit(BaseEntity withWeapon)
  void LifeStoryKill(BaseCombatEntity killed)
  void LifeStoryGenericStat(string key, int value)
  void LifeStoryHurt(float amount)
  void LifeStoryHeal(float amount)
  void LifeStoryLogDeath(HitInfo deathBlow, DamageType lastDamage)
  bool get_IsBeingSpectated()
  void set_IsBeingSpectated(bool value)
  void Tick_Spectator()
  void UpdateSpectateTarget(string strName)
  void UpdateSpectateTarget(ulong id)
  void SpectatePlayer(BaseEntity target)
  void StartSpectating()
  void StopSpectating()
  void Teleport(BasePlayer player)
  void Teleport(string strName, bool playersOnly)
  void Teleport(Vector3 position)
  void CopyRotation(BasePlayer player)
  void OnChildAdded(BaseEntity child)
  void OnChildRemoved(BaseEntity child)
  float GetThreatLevel()
  void EnsureUpdated()
  bool IsHostile()
  float GetHostileDuration()
  void MarkHostileFor(float duration)
  void MarkWeaponDrawnDuration(float newDuration)
  void AddWeaponDrawnDuration(float duration)
  InputState get_serverInput()
  void set_serverInput(InputState value)
  float get_timeSinceLastTick()
  float get_IdleTime()
  bool get_isStalled()
  bool get_wasStalled()
  void OnReceivedTick(Stream stream)
  void OnReceivedVoice(Byte[] data)
  void ResetInputIdleTime()
  void EACStateUpdate()
  void OnReceiveTick(PlayerTick msg, bool wasPlayerStalled)
  void UpdateActiveItem(ItemId itemID)
  void UpdateModelStateFromTick(PlayerTick tick)
  void UpdatePositionFromTick(PlayerTick tick, bool wasPlayerStalled)
  void UpdateRotationFromTick(PlayerTick tick)
  void UpdateEstimatedVelocity(Vector3 lastPos, Vector3 currentPos, float deltaTime)
  Vector3 get_tickViewAngles()
  void set_tickViewAngles(Vector3 value)
  int get_tickHistoryCapacity()
  Matrix4x4 get_tickHistoryMatrix()
  void FinalizeTick(float deltaTime)
  UInt32 GetUnderwearSkin()
  void ServerRPC_UnderwearChange(RPCMessage msg)
  bool IsWounded()
  bool IsCrawling()
  bool IsIncapacitated()
  float get_TimeSinceWoundedStarted()
  bool WoundInsteadOfDying(HitInfo info)
  void ResetWoundingVars()
  bool EligibleForWounding(HitInfo info)
  void BecomeWounded(HitInfo info)
  void StopWounded(BasePlayer source)
  void ProlongWounding(float delay)
  void SendWoundedInformation(float timeLeft)
  float GetRecoveryChance()
  void WoundingTick()
  void GoToCrawling(HitInfo info)
  void GoToIncapacitated(HitInfo info)
  void WoundedStartSharedCode(HitInfo info)
  void StartWoundedTick(int minTime, int maxTime)
  void RecoverFromWounded()
  bool WoundingCausingImmortality(HitInfo info)
  BasePlayer ToPlayer()
  Connection get_Connection()
  bool get_IsBot()
  string get_displayName()
  void set_displayName(string value)
  string SanitizePlayerNameString(string playerName, ulong userId)
  bool IsGod()
  Quaternion GetNetworkRotation()
  bool CanInteract()
  bool CanInteract(bool usableWhileCrawling)
  float StartHealth()
  float StartMaxHealth()
  float MaxHealth()
  float MaxVelocity()
  OBB WorldSpaceBounds()
  Vector3 GetMountVelocity()
  Vector3 GetInheritedProjectileVelocity(Vector3 direction)
  Vector3 GetInheritedThrowVelocity(Vector3 direction)
  Vector3 GetInheritedDropVelocity()
  void PreInitShared()
  void DestroyShared()
  bool InSafeZone()
  bool IsInNoRespawnZone()
  bool IsOnATugboat()
  void ServerCycle(float deltaTime)
  bool ManuallyCheckSafezone()
  bool OnStartBeingLooted(BasePlayer baseEntity)
  Bounds GetBounds(bool ducked)
  Bounds GetBounds()
  Vector3 GetCenter(bool ducked)
  Vector3 GetCenter()
  Vector3 GetOffset(bool ducked)
  Vector3 GetOffset()
  Vector3 GetSize(bool ducked)
  Vector3 GetSize()
  float GetHeight(bool ducked)
  float GetHeight()
  float GetRadius()
  float GetJumpHeight()
  Vector3 TriggerPoint()
  Vector3 NoClipOffset()
  float NoClipRadius(float margin)
  float MaxDeployDistance(Item item)
  float GetMinSpeed()
  float GetMaxSpeed()
  float GetSpeed(float running, float ducking, float crawling)
  void OnAttacked(HitInfo info)
  void EnablePlayerCollider()
  void DisablePlayerCollider()
  void RefreshColliderSize(bool forced)
  void SetPlayerRigidbodyState(bool isEnabled)
  void AddPlayerRigidbody()
  void RemovePlayerRigidbody()
  bool IsEnsnared()
  bool IsAttacking()
  bool CanAttack()
  bool OnLadder()
  bool IsSwimming()
  bool IsHeadUnderwater()
  bool IsOnGround()
  bool IsRunning()
  bool IsDucked()
  void ShowToast(Styles style, Phrase phrase, String[] arguments)
  void ChatMessage(string msg)
  void ConsoleMessage(string msg)
  float PenetrationResistance(HitInfo info)
  void ScaleDamage(HitInfo info)
  void UpdateMoveSpeedFromClothing()
  void UpdateProtectionFromClothing()
  string Categorize()
  string ToString()
  string GetDebugStatus()
  Item GetItem(ItemId itemId)
  TraitFlag get_Traits()
  float WaterFactor()
  float AirFactor()
  float GetOxygenTime(AirSupplyType& airSupplyType)
  bool ShouldInheritNetworkGroup()
  bool AnyPlayersVisibleToEntity(Vector3 pos, float radius, BaseEntity source, Vector3 entityEyePos, bool ignorePlayersWithPriv)
  bool IsStandingOnEntity(BaseEntity standingOn, int layerMask)
  void SetActiveTelephone(PhoneController t)
  bool get_HasActiveTelephone()
  bool get_IsDesigningAI()
  void ClearDesigningAIEntity()
  void .ctor()
  void .cctor()
  bool <CountWaveTargets>g__CheckPlayer|97_0(BasePlayer player, <>c__DisplayClass97_0& )
  bool <FindUnusedPointOfInterestColour>g__HasColour|127_0(int index)
  ArraySegment`1<byte> <SaveSecondaryData>g__GetPoolableMugshotData|180_0(PlayerRelationshipInfo relationshipInfo)
  void <SendRespawnOptions>g__CollectExternalAndSend|344_0()
  void <SendRespawnOptions>g__SendToPlayer|344_1(List`1<SpawnOptions> spawnOptions, bool loading)
  float <CreateCorpse>g__GetFloatBasedOnUserID|374_0(ulong steamid, ulong seed)
  bool <UpdateSpectateTarget>b__497_1(BaseNetworkable x)
  bool <UpdateSpectateTarget>b__497_3(BasePlayer x)
  bool <UpdateSpectateTarget>b__497_4(BasePlayer x)
--------------------------------------------------
Класс: BasePortal
Наследуется от: BaseCombatEntity
Поля:
  bool isUsablePortal
  Vector3 destination_pos
  Quaternion destination_rot
  BasePortal targetPortal
  NetworkableId targetID
  Transform localEntryExitPos
  Transform relativeAnchor
  bool isMirrored
  GameObjectRef appearEffect
  GameObjectRef disappearEffect
  GameObjectRef transitionSoundEffect
  string useTagString
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void ServerInit()
  void LinkPortal()
  void PostServerLoad()
  void SetDestination(Vector3 destPos, Quaternion destRot)
  Vector3 GetLocalEntryExitPosition()
  Quaternion GetLocalEntryExitRotation()
  BasePortal GetPortal()
  void UsePortal(BasePlayer player)
  void RPC_UsePortal(RPCMessage msg)
  bool IsActive()
  void .ctor()
--------------------------------------------------
Класс: BaseProjectile
Наследуется от: AttackEntity
Поля:
  float NoiseRadius
  float damageScale
  float distanceScale
  float projectileVelocityScale
  bool automatic
  bool usableByTurret
  float turretDamageScale
  GameObjectRef attackFX
  GameObjectRef silencedAttack
  GameObjectRef muzzleBrakeAttack
  Transform MuzzlePoint
  float reloadTime
  bool canUnloadAmmo
  Magazine primaryMagazine
  bool fractionalReload
  float reloadStartDuration
  float reloadFractionDuration
  float reloadEndDuration
  float aimSway
  float aimSwaySpeed
  RecoilProperties recoil
  AnimationCurve aimconeCurve
  float aimCone
  float hipAimCone
  float aimconePenaltyPerShot
  float aimConePenaltyMax
  float aimconePenaltyRecoverTime
  float aimconePenaltyRecoverDelay
  float stancePenaltyScale
  bool hasADS
  bool noAimingWhileCycling
  bool manualCycle
  bool needsCycle
  bool isCycling
  bool aiming
  bool useEmptyAmmoState
  bool isBurstWeapon
  bool canChangeFireModes
  bool defaultOn
  float internalBurstRecoilScale
  float internalBurstFireRateScale
  float internalBurstAimConeScale
  Phrase Toast_BurstDisabled
  Phrase Toast_BurstEnabled
  float resetDuration
  int numShotsFired
  float maxDistance
  float nextReloadTime
  float startReloadTime
  float lastReloadTime
  bool modsChangedInitialized
  float stancePenalty
  float aimconePenalty
  UInt32 cachedModHash
  float sightAimConeScale
  float sightAimConeOffset
  float hipAimConeScale
  float hipAimConeOffset
  bool reloadStarted
  bool reloadFinished
  int fractionalInsertCounter
  Effect reusableInstance
Свойства:
  RecoilProperties recoilProperties
  bool isSemiAuto
  Transform MuzzleTransform
  bool IsUsableByTurret
  bool CanRefundAmmo
  ItemDefinition PrimaryMagazineAmmo
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool TryReload(IAmmoContainer ammoSource, int desiredAmount, bool canRefundAmmo)
  void SwitchAmmoTypesIfNeeded(IAmmoContainer ammoSource)
  void SetAmmoCount(int newCount)
  void ModifyAmmoCount(int amount)
  RecoilProperties get_recoilProperties()
  Vector3 GetInheritedVelocity(BasePlayer player, Vector3 direction)
  float GetDamageScale(bool getMax)
  float GetDistanceScale(bool getMax)
  float GetProjectileVelocityScale(bool getMax)
  void StartReloadCooldown(float cooldown)
  void ResetReloadCooldown()
  bool HasReloadCooldown()
  float GetReloadCooldown()
  float GetReloadIdle()
  void OnDrawGizmos()
  RecoilProperties GetRecoil()
  bool get_isSemiAuto()
  Transform get_MuzzleTransform()
  float AmmoFraction()
  bool get_IsUsableByTurret()
  void DidAttackServerside()
  bool ServerIsReloading()
  bool CanReload()
  void TopUpAmmo()
  void ServerReload()
  bool ServerTryReload(IAmmoContainer ammoSource)
  Vector3 ModifyAIAim(Vector3 eulerInput, float swayModifier)
  float GetAIAimcone()
  void ServerUse()
  void ServerUse(float damageModifier, Transform originOverride)
  void AssignInitiator(HitInfo info)
  void ServerInit()
  void DelayedModSetup()
  void DestroyShared()
  void ModsChanged(Item item, bool added)
  void ForceModsChanged()
  void DelayedModsChanged()
  void ServerCommand(Item item, string command, BasePlayer player)
  void UnloadAmmo(Item item, BasePlayer player)
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void ReturnedFromCancelledCraft(Item item, BasePlayer crafter)
  void SetLightsOn(bool isOn)
  void UpdateAttachmentsState()
  bool ShouldLightsBeOn()
  void OnChildRemoved(BaseEntity child)
  bool CanAiAttack()
  float GetAimCone()
  float ScaleRepeatDelay(float delay)
  Modifier GetProjectileModifier()
  bool UsingBurstMode()
  bool UsingInternalBurstMode()
  bool IsBurstEligable()
  float TimeBetweenBursts()
  bool CanAttack()
  float GetReloadDuration()
  int GetAvailableAmmo()
  bool IsBurstDisabled()
  void ToggleFireMode(RPCMessage msg)
  bool TryReloadMagazine(IAmmoContainer ammoSource, int desiredAmount)
  void SwitchAmmoTo(RPCMessage msg)
  void OnHeldChanged()
  void StartReload(RPCMessage msg)
  void OnReloadStarted()
  bool get_CanRefundAmmo()
  void ServerFractionalReloadInsert(RPCMessage msg)
  void Reload(RPCMessage msg)
  void CLProject(RPCMessage msg)
  ItemDefinition get_PrimaryMagazineAmmo()
  void CreateProjectileEffectClientside(string prefabName, Vector3 pos, Vector3 velocity, int seed, Connection sourceConnection, bool silenced, bool forceClientsideEffects)
  void UpdateItemCondition()
  bool IsSilenced()
  bool CanUseNetworkCache(Connection sendingTo)
  void Save(SaveInfo info)
  bool ForceSendMagazine(SaveInfo saveInfo)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseRidableAnimal
Наследуется от: BaseVehicle
Поля:
  ItemDefinition onlyAllowedItem
  ContentsType allowedContents
  int maxStackSize
  int numStorageSlots
  int equipmentSlots
  string lootPanelName
  string storagePanelName
  bool needsBuildingPrivilegeToUse
  bool isLootable
  ItemContainer storageInventory
  ItemContainer equipmentInventory
  Flags Flag_ForSale
  Phrase SingleHorseTitle
  Phrase SingleHorseDescription
  Phrase DoubleHorseTitle
  Phrase DoubleHorseDescription
  Vector3 lastMoveDirection
  GameObjectRef saddlePrefab
  EntityRef saddleRef
  Transform movementLOSOrigin
  SoundPlayer sprintSounds
  SoundPlayer largeWhinny
  Flags Flag_Lead
  Flags Flag_HasRider
  List`1<PurchaseOption> PurchaseOptions
  ItemDefinition purchaseToken
  GameObjectRef eatEffect
  GameObjectRef CorpsePrefab
  Transform animalFront
  float obstacleDetectionRadius
  float maxWaterDepth
  float roadSpeedBonus
  float maxWallClimbSlope
  float maxStepHeight
  float maxStepDownHeight
  RunState currentRunState
  float walkSpeed
  float trotSpeed
  float runSpeed
  float turnSpeed
  float maxSpeed
  Transform[] groundSampleOffsets
  ItemDefinition Dung
  float CaloriesToDigestPerHour
  float DungProducedPerCalorie
  float pendingDungCalories
  float dungProduction
  float prevStamina
  float prevMaxStamina
  int prevRunState
  float prevMaxSpeed
  float staminaSeconds
  float currentMaxStaminaSeconds
  float maxStaminaSeconds
  float staminaCoreLossRatio
  float staminaCoreSpeedBonus
  float staminaReplenishRatioMoving
  float staminaReplenishRatioStanding
  float calorieToStaminaRatio
  float hydrationToStaminaRatio
  float maxStaminaCoreFromWater
  bool debugMovement
  float normalOffsetDist
  Vector3[] normalOffsets
  float decayminutes
  float currentSpeed
  float desiredRotation
  float animalPitchClamp
  float animalRollClamp
  Queue`1<BaseRidableAnimal> _processQueue
  float framebudgetms
  float dungTimeScale
  BaseEntity leadTarget
  float nextDecayTime
  float lastMovementUpdateTime
  bool inQueue
  float nextEatTime
  float lastEatTime
  float lastInputTime
  float forwardHeldSeconds
  float backwardHeldSeconds
  float sprintHeldSeconds
  float lastSprintPressedTime
  float lastForwardPressedTime
  float lastBackwardPressedTime
  float timeInMoveState
  bool onIdealTerrain
  float nextIdealTerrainCheckTime
  float nextStandTime
  InputState aiInputState
  Vector3 currentVelocity
  Vector3 averagedUp
  float nextGroundNormalUpdateTime
  Vector3 targetUp
  float nextObstacleCheckTime
  float cachedObstacleDistance
  int maxObstacleCheckSpeed
  float timeAlive
  TimeUntil dropUntilTime
Свойства:
  bool IsNpc
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsForSale()
  void ContainerServerInit()
  void CreateInventories(bool giveUID)
  void CreateEquipmentInventory(bool giveUID)
  void CreateStorageInventory(bool giveUID)
  ItemContainer CreateInventory(bool giveUID, int slots)
  void SaveContainer(SaveInfo info)
  void OnInventoryFirstCreated(ItemContainer container)
  void OnInventoryDirty()
  void OnItemAddedOrRemoved(Item item, bool added)
  bool ItemFilter(Item item, int targetSlot)
  bool CanAnimalAcceptItem(Item item, int targetSlot)
  void RPC_OpenLoot(RPCMessage rpc)
  void PlayerStoppedLooting(BasePlayer player)
  bool CanOpenStorage(BasePlayer player)
  void LoadContainer(LoadInfo info)
  float GetBreathingDelay()
  bool IsLeading()
  float UnitsToKPH(float unitsPerSecond)
  bool get_IsNpc()
  void ProcessQueue()
  void SetLeading(BaseEntity newLeadTarget)
  float GetNetworkTime()
  void Save(SaveInfo info)
  void OnPhysicsNeighbourChanged()
  void DelayedDropToGround()
  void Load(LoadInfo info)
  bool HasValidSaddle()
  bool HasSeatAvailable()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  void LeadingChanged()
  void RPC_Claim(RPCMessage msg)
  void RPC_Lead(RPCMessage msg)
  void OnClaimedWithToken(Item tokenItem)
  void PlayerMounted(BasePlayer player, BaseMountable seat)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  void SetDecayActive(bool isActive)
  float TimeUntilNextDecay()
  void AddDecayDelay(float amount)
  void Hurt(HitInfo info)
  void AnimalDecay()
  void UseStamina(float amount)
  bool CanInitiateSprint()
  bool CanSprint()
  void ReplenishStamina(float amount)
  float ReplenishRatio()
  void ReplenishStaminaCore(float calories, float hydration)
  void UpdateStamina(float delta)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void DismountHeavyPlayers()
  BaseMountable GetSaddle()
  void BudgetedUpdate()
  void ApplyDungCalories(float calories)
  void UpdateDung(float delta)
  void DoDung()
  void VehicleFixedUpdate()
  float StaminaCoreFraction()
  void DoEatEvent()
  void ReplenishFromFood(ItemModConsumable consumable)
  void EatNearbyFood()
  void SwitchMoveState(RunState newState)
  void UpdateOnIdealTerrain()
  float MoveStateToVelocity(RunState stateToCheck)
  float GetDesiredVelocity()
  RunState StateFromSpeed(float speedToUse)
  void ModifyRunState(int dir)
  bool CanStand()
  bool IsStandCollisionClear()
  void DoDebugMovement()
  void RiderInput(InputState inputState, BasePlayer player)
  float MaxVelocity()
  float NormalizeAngle(float angle)
  void UpdateGroundNormal(bool force)
  void MarkObstacleDistanceDirty()
  float GetObstacleDistance()
  float ObstacleDistanceCheck(float speed)
  void MarkDistanceTravelled(float amount)
  void UpdateMovement(float delta)
  bool DropToGround(Vector3 targetPos, bool force)
  void DoNetworkUpdate()
  void PreServerLoad()
  void ServerInit()
  void OnKilled(HitInfo hitInfo)
  void SetupCorpse(BaseCorpse corpse)
  Vector3 GetLocalVelocityServer()
  void UpdateDropToGroundForDuration(float duration)
  void InitShared()
  bool PlayerHasToken(BasePlayer player, int tokenItemID)
  Item GetPurchaseToken(BasePlayer player, int tokenItemID)
  float GetWalkSpeed()
  float GetTrotSpeed()
  float GetRunSpeed()
  bool IsPlayerTooHeavy(BasePlayer player)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseSubmarine
Наследуется от: BaseVehicle
Поля:
  Transform centreOfMassTransform
  Buoyancy buoyancy
  float maxRudderAngle
  Transform rudderVisualTransform
  Transform rudderDetailedColliderTransform
  Transform propellerTransform
  float timeUntilAutoSurface
  Renderer[] interiorRenderers
  SonarObject sonarObject
  GameObjectRef fuelStoragePrefab
  float engineKW
  float turnPower
  float engineStartupTime
  GameObjectRef itemStoragePrefab
  float depthChangeTargetSpeed
  float idleFuelPerSec
  float maxFuelPerSec
  bool internalAccessStorage
  GameObjectRef torpedoStoragePrefab
  Transform torpedoFiringPoint
  float reloadTime
  SubmarineAudio submarineAudio
  ParticleSystem fxTorpedoFire
  GameObject internalFXContainer
  GameObject internalOnFXContainer
  ParticleSystem fxIntAmbientBubbleLoop
  ParticleSystem fxIntInitialDiveBubbles
  ParticleSystem fxIntWaterDropSpray
  ParticleSystem fxIntWindowFilm
  ParticleSystemContainer fxIntMediumDamage
  ParticleSystemContainer fxIntHeavyDamage
  GameObject externalFXContainer
  GameObject externalOnFXContainer
  ParticleSystem fxExtAmbientBubbleLoop
  ParticleSystem fxExtInitialDiveBubbles
  ParticleSystem fxExtAboveWaterEngineThrustForward
  ParticleSystem fxExtAboveWaterEngineThrustReverse
  ParticleSystem fxExtUnderWaterEngineThrustForward
  ParticleSystem[] fxExtUnderWaterEngineThrustForwardSubs
  ParticleSystem fxExtUnderWaterEngineThrustReverse
  ParticleSystem[] fxExtUnderWaterEngineThrustReverseSubs
  ParticleSystem fxExtBowWave
  ParticleSystem fxExtWakeEffect
  GameObjectRef aboveWatercollisionEffect
  GameObjectRef underWatercollisionEffect
  VolumetricLightBeam spotlightVolumetrics
  float mountedAlphaInside
  float mountedAlphaOutside
  float outsidedecayminutes
  float deepwaterdecayminutes
  float oxygenminutes
  Vector3 <Velocity>k__BackingField
  Flags Flag_Ammo
  float _throttle
  float _rudder
  float _upDown
  float _oxygen
  VehicleEngineController`1<BaseSubmarine> engineController
  float cachedFuelAmount
  Vector3 steerAngle
  float waterSurfaceY
  float curSubDepthY
  EntityRef`1<StorageContainer> torpedoStorageInstance
  EntityRef`1<StorageContainer> itemStorageInstance
  int waterLayerMask
  float targetClimbSpeed
  float maxDamageThisTick
  float nextCollisionDamageTime
  bool prevPrimaryFireInput
  bool primaryFireInput
  float DECAY_TICK_TIME
  TimeSince timeSinceLastUsed
  TimeSince timeSinceTorpedoFired
  TimeSince timeSinceFailRPCSent
  float normalDrag
  float highDrag
  bool wasOnSurface
Свойства:
  AirSupplyType AirType
  EngineState<BaseSubmarine> EngineState
  Vector3 Velocity
  bool LightsAreOn
  bool HasAmmo
  float ThrottleInput
  float RudderInput
  float UpDownInput
  float Oxygen
  float PhysicalRudderAngle
  bool IsInWater
  bool IsSurfaced
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  AirSupplyType get_AirType()
  EngineState<BaseSubmarine> get_EngineState()
  Vector3 get_Velocity()
  void set_Velocity(Vector3 value)
  bool get_LightsAreOn()
  bool get_HasAmmo()
  float get_ThrottleInput()
  void set_ThrottleInput(float value)
  float get_RudderInput()
  void set_RudderInput(float value)
  float get_UpDownInput()
  void set_UpDownInput(float value)
  float get_Oxygen()
  void set_Oxygen(float value)
  float get_PhysicalRudderAngle()
  bool get_IsInWater()
  bool get_IsSurfaced()
  void InitShared()
  void Load(LoadInfo info)
  void OnFlagsChanged(Flags old, Flags next)
  float WaterFactorForPlayer(BasePlayer player)
  float AirFactor()
  bool BlocksWaterFor(BasePlayer player)
  float GetFuelAmount()
  float GetSpeed()
  bool CanBeLooted(BasePlayer player)
  float GetAirTimeRemaining()
  bool CanPushNow(BasePlayer pusher)
  void UpdatePhysicalRudder(float turnInput, float deltaTime)
  bool CanMount(BasePlayer player)
  void UpdateWaterInfo()
  float GetWaterSurfaceY()
  void ServerInit()
  void OnChildAdded(BaseEntity child)
  void ServerFlagsChanged(Flags old, Flags next)
  void DoServerDestroy()
  void OnCollisionEnter(Collision collision)
  float MaxVelocity()
  EntityFuelSystem GetFuelSystem()
  int StartingFuelUnits()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  void OnPoolDestroyed()
  void WakeUp()
  void OnServerWake()
  void OnKilled(HitInfo info)
  void VehicleFixedUpdate()
  void LightToggle(BasePlayer player)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void Save(SaveInfo info)
  bool MeetsEngineRequirements()
  void OnEngineStartFailed()
  StorageContainer GetTorpedoContainer()
  StorageContainer GetItemContainer()
  void ProcessCollision(Collision collision)
  void UpdateClients()
  void SubmarineDecay()
  void RPC_OpenFuel(RPCMessage msg)
  void RPC_OpenTorpedoStorage(RPCMessage msg)
  void RPC_OpenItemStorage(RPCMessage msg)
  void OnSurfacedInMoonpool()
  void .ctor()
  void .cctor()
  void IEngineControllerUser.Invoke(Action action, float time)
  void IEngineControllerUser.CancelInvoke(Action action)
--------------------------------------------------
Класс: BaseVehicle
Наследуется от: BaseMountable
Поля:
  bool mountChaining
  ClippingCheckMode clippingChecks
  bool checkVehicleClipping
  DismountStyle dismountStyle
  bool shouldShowHudHealth
  bool ignoreDamageFromOutside
  List`1<MountPointInfo> mountPoints
  bool doClippingAndVisChecks
  DamageRenderer damageRenderer
  float explosionForceMultiplier
  float explosionForceMax
  Flags Flag_OnlyOwnerEntry
  Flags Flag_Headlights
  Flags Flag_Stationary
  Flags Flag_SeatsFull
  Flags Flag_AnyMounted
  List`1<BaseVehicle> childVehicles
  float MIN_TIME_BETWEEN_PUSHES
  TimeSince timeSinceLastPush
  bool prevSleeping
  float nextCollisionFXTime
  CollisionDetectionMode savedCollisionDetectionMode
  BaseVehicle pendingLoad
  Queue`1<BasePlayer> recentDrivers
  Action clearRecentDriverAction
  float safeAreaRadius
  Vector3 safeAreaOrigin
  float spawnTime
Свойства:
  bool IsMovingOrOn
  float RealisticMass
  Enumerable allMountPoints
  bool IsClient
  bool AlwaysAllowBradleyTargeting
  bool RecentlyPushed
  bool PositionTickFixedTime
  bool CanSwapSeats
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsStationary()
  bool IsMoving()
  bool get_IsMovingOrOn()
  float get_RealisticMass()
  bool IsAuthed(BasePlayer player)
  bool AnyMounted()
  bool PlayerIsMounted(BasePlayer player)
  bool CanPushNow(BasePlayer pusher)
  bool HasMountPoints()
  bool CanBeLooted(BasePlayer player)
  bool IsFlipped()
  bool IsVehicleRoot()
  bool DirectlyMountable()
  BaseVehicle VehicleParent()
  void OnChildAdded(BaseEntity child)
  void OnChildRemoved(BaseEntity child)
  Enumerable get_allMountPoints()
  MountPointInfo GetMountPoint(int index)
  float GetSpeed()
  bool get_IsClient()
  bool get_AlwaysAllowBradleyTargeting()
  bool get_RecentlyPushed()
  void OnAttacked(HitInfo info)
  void PostServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  float GetNetworkTime()
  bool get_PositionTickFixedTime()
  void VehicleFixedUpdate()
  int GetClipCheckMask()
  bool DetermineIfStationary()
  Vector3 GetLocalVelocityServer()
  Quaternion GetAngularVelocityServer()
  int StartingFuelUnits()
  bool IsSeatVisible(BaseMountable mountable, Vector3 eyePos, int mask)
  bool IsSeatClipping(BaseMountable mountable)
  void CheckSeatsForClipping()
  void SeatClippedWorld(BaseMountable mountable)
  void MounteeTookDamage(BasePlayer mountee, HitInfo info)
  void DismountAllPlayers()
  void ServerInit()
  void SpawnSubEntities()
  bool AdminFixUp(int tier)
  void OnPhysicsNeighbourChanged()
  void CheckAndSpawnMountPoints()
  void Spawn()
  void Hurt(HitInfo info)
  void DoExplosionForce(HitInfo info)
  int NumMounted()
  int MaxMounted()
  bool HasDriver()
  bool IsDriver(BasePlayer player)
  bool HasPassenger()
  bool IsPassenger(BasePlayer player)
  BasePlayer GetDriver()
  BasePlayer GetPassenger()
  void GetDrivers(List`1<BasePlayer> drivers)
  void GetMountedPlayers(List`1<BasePlayer> players)
  BasePlayer GetPlayerDamageInitiator()
  int GetPlayerSeat(BasePlayer player)
  MountPointInfo GetPlayerSeatInfo(BasePlayer player)
  bool IsVehicleMountPoint(BaseMountable bm)
  bool get_CanSwapSeats()
  bool IsPlayerSeatSwapValid(BasePlayer player, int fromIndex, int toIndex)
  void SwapSeats(BasePlayer player, int targetSeat)
  int NumSwappableSeats()
  bool HasDriverMountPoints()
  bool OnlyOwnerAccessible()
  bool IsDespawnEligable()
  void SetupOwner(BasePlayer owner, Vector3 newSafeAreaOrigin, float newSafeAreaRadius)
  void ClearOwnerEntry()
  void DisableTransferProtectionIfEmpty()
  EntityFuelSystem GetFuelSystem()
  bool IsSafe()
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  BaseMountable GetIdealMountPoint(Vector3 eyePos, Vector3 pos, BasePlayer playerFor)
  bool MountEligable(BasePlayer player)
  int GetIndexFromSeat(BaseMountable seat)
  void PlayerMounted(BasePlayer player, BaseMountable seat)
  void PrePlayerDismount(BasePlayer player, BaseMountable seat)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  void TryShowCollisionFX(Collision collision, GameObjectRef effectGO)
  void TryShowCollisionFX(Vector3 contactPoint, GameObjectRef effectGO)
  void SetToKinematic()
  void SetToNonKinematic()
  void UpdateMountFlags()
  void ClearRecentDriver()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  BaseMountable GetIdealMountPointFor(BasePlayer player)
  bool GetDismountPosition(BasePlayer player, Vector3& res)
  BaseMountable SpawnMountPoint(MountPointInfo mountToSpawn, Model model)
  void RPC_WantsPush(RPCMessage msg)
  void DoPushAction(BasePlayer player)
  void OnServerWake()
  void OnServerSleep()
  bool ShouldDisableTransferProtectionOnLoad(BasePlayer player)
  void DisableTransferProtection()
  bool AllowPlayerInstigatedDismount(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: BaseVehicleModule
Наследуется от: BaseVehicle
Поля:
  Transform centreOfMassTransform
  float mass
  VisualGroup visualGroup
  VehicleLight[] lights
  BaseModularVehicle <Vehicle>k__BackingField
  int <FirstSocketIndex>k__BackingField
  LODLevel[] lodRenderers
  List`1<ConditionalObject> conditionals
  TriggerParent[] triggerParents
  VehicleModuleSlidingComponent[] slidingComponents
  VehicleModuleButtonComponent[] buttonComponents
  TimeSince TimeSinceAddedToVehicle
  float prevRefreshHealth
  bool prevRefreshVehicleIsDead
  bool prevRefreshVehicleIsLockable
  Item AssociatedItemInstance
  bool <PropagateDamage>k__BackingField
  TimeSince timeSinceItemLockRefresh
  float TIME_BETWEEN_LOCK_REFRESH
Свойства:
  BaseModularVehicle Vehicle
  int FirstSocketIndex
  Vector3 CentreOfMass
  float Mass
  NetworkableId ID
  bool IsOnAVehicle
  ItemDefinition AssociatedItemDef
  bool HasSeating
  bool HasAnEngine
  bool PropagateDamage
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  BaseModularVehicle get_Vehicle()
  void set_Vehicle(BaseModularVehicle value)
  int get_FirstSocketIndex()
  void set_FirstSocketIndex(int value)
  Vector3 get_CentreOfMass()
  float get_Mass()
  NetworkableId get_ID()
  bool get_IsOnAVehicle()
  ItemDefinition get_AssociatedItemDef()
  bool get_HasSeating()
  bool get_HasAnEngine()
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void RefreshParameters()
  BaseVehicle VehicleParent()
  void ModuleAdded(BaseModularVehicle vehicle, int firstSocketIndex)
  void ModuleRemoved()
  void OtherVehicleModulesChanged()
  bool CanBeLooted(BasePlayer player)
  bool KeycodeEntryBlocked(BasePlayer player)
  void OnEngineStateChanged(EngineState<GroundVehicle> oldState, EngineState<GroundVehicle> newState)
  float MaxHealth()
  float StartHealth()
  int GetNumSocketsTaken()
  List`1<ConditionalObject> GetConditionals()
  float GetMaxDriveForce()
  void RefreshConditionals(bool canGib)
  void PostConditionalRefresh()
  void RefreshConditional(ConditionalObject conditional, bool canGib)
  bool TryGetAdjacentModuleInFront(BaseVehicleModule& result)
  bool TryGetAdjacentModuleBehind(BaseVehicleModule& result)
  bool InSameVisualGroupAs(BaseVehicleModule moduleEntity, AdjacentMatchType matchType)
  bool CanBeUsedNowBy(BasePlayer player)
  bool PlayerIsLookingAtUsable(string lookingAtColldierName, string usableColliderName)
  void Load(LoadInfo info)
  bool IsVehicleRoot()
  bool get_PropagateDamage()
  void set_PropagateDamage(bool value)
  void NonUserSpawn()
  void VehicleFixedUpdate()
  void Hurt(HitInfo info)
  void OnHealthChanged(float oldValue, float newValue)
  bool CanBeMovedNow()
  bool CanBeMovedNowOnVehicle()
  float GetAdjustedDriveForce(float absSpeed, float topSpeed)
  void AcceptPropagatedDamage(float amount, DamageType type, BaseEntity attacker, bool useProtection)
  void Die(HitInfo info)
  void RPC_Use(RPCMessage msg)
  void AdminKill()
  bool AdminFixUp(int tier)
  void OnPlayerDismountedVehicle(BasePlayer player)
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: BearTrap
Наследуется от: BaseTrap
Поля:
  Animator animator
  GameObject hurtTarget
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool Armed()
  void InitShared()
  bool CanPickup(BasePlayer player)
  void ServerInit()
  void Arm()
  void Fire()
  void ObjectEntered(GameObject obj)
  void DelayedFire()
  void RadialResetCorpses(float duration)
  void OnAttacked(HitInfo info)
  void RPC_Arm(RPCMessage rpc)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: BigWheelBettingTerminal
Наследуется от: StorageContainer
Поля:
  BigWheelGame bigWheel
  Vector3 seatedPlayerOffset
  float offsetCheckRadius
  SoundDefinition winSound
  SoundDefinition loseSound
  BasePlayer lastPlayer
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void OnDrawGizmos()
  bool IsPlayerValid(BasePlayer player)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  bool TrySetBigWheel(BigWheelGame newWheel)
  void .ctor()
--------------------------------------------------
Класс: BowWeapon
Наследуется от: BaseProjectile
Поля:
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void BowReload(RPCMessage msg)
  bool ForceSendMagazine(SaveInfo saveInfo)
  void .ctor()
--------------------------------------------------
Класс: BradleyAPC
Наследуется от: BaseCombatEntity
Поля:
  BlendedLoopEngineSound engineSound
  SoundDefinition treadLoopDef
  AnimationCurve treadGainCurve
  AnimationCurve treadPitchCurve
  AnimationCurve treadFreqCurve
  Sound treadLoop
  Modulator treadGain
  Modulator treadPitch
  SoundDefinition chasisLurchSoundDef
  float chasisLurchAngleDelta
  float chasisLurchSpeedDelta
  float lastAngle
  float lastSpeed
  SoundDefinition turretTurnLoopDef
  float turretLoopGainSpeed
  float turretLoopPitchSpeed
  float turretLoopMinAngleDelta
  float turretLoopMaxAngleDelta
  float turretLoopPitchMin
  float turretLoopPitchMax
  float turretLoopGainThreshold
  Sound turretTurnLoop
  Modulator turretTurnLoopGain
  Modulator turretTurnLoopPitch
  float enginePitch
  float rpmMultiplier
  TreadAnimator treadAnimator
  WheelCollider[] leftWheels
  WheelCollider[] rightWheels
  float moveForceMax
  float brakeForce
  float turnForce
  float sideStiffnessMax
  float sideStiffnessMin
  Transform centerOfMass
  float stoppingDist
  float throttle
  float turning
  float rightThrottle
  float leftThrottle
  bool brake
  Rigidbody myRigidBody
  Collider myCollider
  Vector3 destination
  Vector3 finalDestination
  Transform followTest
  TriggerHurtEx impactDamager
  Transform mainTurretEyePos
  Transform mainTurret
  Transform CannonPitch
  Transform CannonMuzzle
  Transform coaxPitch
  Transform coaxMuzzle
  Transform topTurretEyePos
  Transform topTurretYaw
  Transform topTurretPitch
  Transform topTurretMuzzle
  Vector3 turretAimVector
  Vector3 desiredAimVector
  Vector3 topTurretAimVector
  Vector3 desiredTopTurretAimVector
  GameObjectRef explosionEffect
  GameObjectRef servergibs
  GameObjectRef fireBall
  GameObjectRef crateToDrop
  GameObjectRef debrisFieldMarker
  int maxCratesToSpawn
  int patrolPathIndex
  IAIPath patrolPath
  bool DoAI
  GameObjectRef mainCannonMuzzleFlash
  GameObjectRef mainCannonProjectile
  float recoilScale
  NavMeshPath navMeshPath
  int navMeshPathIndex
  LayerMask obstacleHitMask
  TimeSince timeSinceSeemingStuck
  TimeSince timeSinceStuckReverseStart
  string prefabPath
  float nextFireTime
  int numBursted
  float nextPatrolTime
  float nextEngagementPathTime
  float currentSpeedZoneLimit
  List`1<Vector3> currentPath
  int currentPathIndex
  bool pathLooping
  float viewDistance
  float searchRange
  float searchFrequency
  float memoryDuration
  float sightUpdateRate
  List`1<TargetInfo> targetList
  BaseCombatEntity mainGunTarget
  float coaxFireRate
  int coaxBurstLength
  float coaxAimCone
  float bulletDamage
  float topTurretFireRate
  float nextCoaxTime
  int numCoaxBursted
  float nextTopTurretTime
  GameObjectRef gun_fire_effect
  GameObjectRef bulletEffect
  float lastLateUpdate
Свойства:
  float PositionTickRate
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  BradleyAPC SpawnRoadDrivingBradley(Vector3 spawnPos, Quaternion spawnRot)
  string svspawnroadbradley(Vector3 pos, Vector3 dir)
  void SetDestination(Vector3 dest)
  void ServerInit()
  void OnCollision(Collision collision, BaseEntity hitEntity)
  void Initialize()
  BasePlayer FollowPlayer()
  Vector3 Direction2D(Vector3 aimAt, Vector3 aimFrom)
  float get_PositionTickRate()
  bool IsAtDestination()
  bool IsAtFinalDestination()
  Vector3 ClosestPointAlongPath(Vector3 start, Vector3 end, Vector3 fromPos)
  void FireGunTest()
  void InstallPatrolPath(IAIPath path)
  void UpdateMovement_Patrol()
  void UpdateMovement_Hunt()
  void DoSimpleAI()
  void FixedUpdate()
  void AvoidObstacles(Single& throttleScaleFromTurn)
  void DoPhysicsMove()
  void ApplyBrakes(float amount)
  float GetMotorTorque(bool rightSide)
  void ScaleSidewaysFriction(float scale)
  void SetMotorTorque(float newThrottle, bool rightSide, float torqueAmount)
  void ApplyBrakeTorque(float amount, bool rightSide)
  void CreateExplosionMarker(float durationMinutes)
  void OnKilled(HitInfo info)
  void OnAttacked(HitInfo info)
  void OnHealthChanged(float oldvalue, float newvalue)
  void DoHealing()
  BasePlayer GetPlayerDamageInitiator()
  float GetDamageMultiplier(BaseEntity ent)
  void OnHurtTriggerOccupant(BaseEntity hurtEntity, DamageType damageType, float damageTotal)
  bool HasPath()
  void ClearPath()
  bool IndexValid(int index)
  Vector3 GetFinalDestination()
  Vector3 GetCurrentPathDestination()
  bool PathComplete()
  bool AtCurrentPathNode()
  int GetLoopedIndex(int index)
  Vector3 PathDirection(int index)
  Vector3 IdealPathPosition()
  void AdvancePathMovement(bool force)
  bool GetPathToClosestTurnableNode(IAIPathNode start, Vector3 forward, List`1& nodes)
  bool GetEngagementPath(List`1& nodes)
  void AddOrUpdateTarget(BaseEntity ent, Vector3 pos, float damageFrom)
  void UpdateTargetList()
  int SortTargets(TargetInfo t1, TargetInfo t2)
  Vector3 GetAimPoint(BaseEntity ent)
  bool VisibilityTest(BaseEntity ent)
  void UpdateTargetVisibilities()
  void DoWeaponAiming()
  void DoWeapons()
  void FireGun(Vector3 targetPos, float aimCone, bool isCoax)
  void ApplyDamage(BaseCombatEntity entity, Vector3 point, Vector3 normal)
  void AimWeaponAt(Transform weaponYaw, Transform weaponPitch, Vector3 direction, float minPitch, float maxPitch, float maxYaw, Transform parentOverride)
  void LateUpdate()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BuildingBlock
Наследуется от: StabilityEntity
Поля:
  Construction blockDefinition
  Vector3[] outsideLookupOffsets
  bool forceSkinRefresh
  ulong lastSkinID
  int <modelState>k__BackingField
  int lastModelState
  UInt32 <customColour>k__BackingField
  UInt32 lastCustomColour
  UInt32 playerCustomColourToApply
  Enum grade
  Enum lastGrade
  ConstructionSkin currentSkin
  DeferredAction skinChange
  MeshRenderer placeholderRenderer
  MeshCollider placeholderCollider
  UpdateSkinWorkQueue updateSkinQueueServer
  bool globalNetworkCooldown
  bool CullBushes
  bool CheckForPipesOnModelChange
  OBBComponent AlternativePipeBounds
Свойства:
  int modelState
  UInt32 customColour
  ConstructionGrade currentGrade
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  void InitShared()
  void PostInitShared()
  void DestroyShared()
  string Categorize()
  float BoundsPadding()
  bool IsOutside()
  bool SupportsChildDeployables()
  bool CanDemolish(BasePlayer player)
  bool IsDemolishable()
  bool HasDemolishPrivilege(BasePlayer player)
  void DoDemolish(RPCMessage msg)
  void DoImmediateDemolish(RPCMessage msg)
  void StopBeingDemolishable()
  void StartBeingDemolishable()
  int get_modelState()
  void set_modelState(int value)
  UInt32 get_customColour()
  void set_customColour(UInt32 value)
  void SetConditionalModel(int state)
  bool GetConditionalModel(int index)
  ConstructionGrade get_currentGrade()
  bool CanChangeToGrade(Enum iGrade, ulong iSkin, BasePlayer player)
  bool HasUpgradePrivilege(Enum iGrade, ulong iSkin, BasePlayer player)
  bool IsUpgradeBlocked()
  bool CanAffordUpgrade(Enum iGrade, ulong iSkin, BasePlayer player)
  void SetGrade(Enum iGrade)
  void UpdateGrade()
  void OnSkinChanged(ulong oldSkinID, ulong newSkinID)
  void OnSkinPreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void SetHealthToMax()
  void DoUpgradeToGrade_Delayed(RPCMessage msg)
  void DoUpgradeToGrade(RPCMessage msg)
  void ChangeGradeAndSkin(Enum targetGrade, ulong skin, bool playEffect, bool updateSkin)
  void ChangeGrade(Enum targetGrade, bool playEffect, bool updateSkin)
  void PayForUpgrade(ConstructionGrade g, BasePlayer player)
  void SetCustomColour(UInt32 newColour)
  bool NeedsSkinChange()
  void UpdateSkin(bool force)
  void DestroySkin()
  void RefreshNeighbours(bool linkToNeighbours)
  void UpdatePlaceholder(bool state)
  void ChangeSkin()
  void ChangeSkin(GameObjectRef prefab)
  bool ShouldBlockProjectiles()
  void CheckForPipes()
  void OnHammered()
  float MaxHealth()
  List`1<ItemAmount> BuildCost()
  void OnHealthChanged(float oldvalue, float newvalue)
  float RepairCostFraction()
  bool CanRotate(BasePlayer player)
  bool IsRotatable()
  bool IsRotationBlocked()
  bool HasRotationPrivilege(BasePlayer player)
  void DoRotation(RPCMessage msg)
  void ResetGlobalNetworkCooldown()
  void StopBeingRotatable()
  void StartBeingRotatable()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void AttachToBuilding(DecayEntity other)
  void ServerInit()
  void Hurt(HitInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BuildingPrivlidge
Наследуется от: StorageContainer
Поля:
  List`1<PlayerNameID> authorizedPlayers
  Flags Flag_MaxAuths
  List`1<ItemDefinition> allowedConstructionItems
  float cachedProtectedMinutes
  float nextProtectedCalcTime
  UpkeepBracket[] upkeepBrackets
  List`1<ItemAmount> upkeepBuffer
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  bool IsAuthed(BasePlayer player)
  bool IsAuthed(ulong userID)
  bool AnyAuthed()
  bool ItemFilter(Item item, int targetSlot)
  void Save(SaveInfo info)
  void PostSave(SaveInfo info)
  void Load(LoadInfo info)
  void BuildingDirty()
  bool AtMaxAuthCapacity()
  void UpdateMaxAuthCapacity()
  void OnInventoryDirty()
  void OnItemAddedOrRemoved(Item item, bool bAdded)
  void AddDelayedUpdate()
  void DelayedUpdate()
  bool CanAdministrate(BasePlayer player)
  void AddSelfAuthorize(RPCMessage rpc)
  void AddPlayer(BasePlayer player)
  void RemoveSelfAuthorize(RPCMessage rpc)
  void ClearList(RPCMessage rpc)
  void RPC_Rotate(RPCMessage msg)
  int GetIdealSlot(BasePlayer player, Item item)
  bool HasSlot(Slot slot)
  bool SupportsChildDeployables()
  float CalculateUpkeepPeriodMinutes()
  float CalculateUpkeepCostFraction()
  void CalculateUpkeepCostAmounts(List`1<ItemAmount> itemAmounts)
  float GetProtectedMinutes(bool force)
  void OnKilled(HitInfo info)
  void DecayTick()
  bool EnsurePrimary()
  void MarkProtectedMinutesDirty(float delay)
  float CalculateBuildingTaxRate()
  void ApplyUpkeepPayment()
  void QueueUpkeepPayment(List`1<ItemAmount> itemAmounts)
  bool CanAffordUpkeepPayment(List`1<ItemAmount> itemAmounts)
  float PurchaseUpkeepTime(DecayEntity entity, float deltaTime)
  void PurchaseUpkeepTime(float deltaTime)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CameraTool
Наследуется от: HeldEntity
Поля:
  GameObjectRef screenshotEffect
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void SVNoteScreenshot(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: Candle
Наследуется от: BaseCombatEntity
Поля:
  float lifeTimeSeconds
  float burnRate
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void SetWantsOn(RPCMessage msg)
  void PostServerLoad()
  void UpdateInvokes()
  void Burn()
  void OnAttacked(HitInfo info)
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  void Ignite(Vector3 fromPos)
  bool CanIgnite()
  void .ctor()
--------------------------------------------------
Класс: CardReader
Наследуется от: IOEntity
Поля:
  float accessDuration
  int accessLevel
  GameObjectRef accessGrantedEffect
  GameObjectRef accessDeniedEffect
  GameObjectRef swipeEffect
  Transform audioPosition
  Flags AccessLevel1
  Flags AccessLevel2
  Flags AccessLevel3
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  void CancelAccess()
  void FailCard()
  void ServerInit()
  void GrantCard()
  void ServerCardSwiped(RPCMessage msg)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: CarvablePumpkin
Наследуется от: BaseOven
Поля:
  List`1<ulong> editHistory
  float TextureRequestTimeout
  GameObjectRef changeTextDialog
  MeshPaintableSource[] paintableSources
  UInt32[] textureIDs
Свойства:
  Type FileType
  NetworkableId NetworkID
  UGCType ContentType
  List`1<ulong> EditingHistory
  UInt32[] GetContentCRCs
  BaseNetworkable UgcEntity
  Vector2i TextureSize
  int TextureCount
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Type get_FileType()
  UInt32[] GetTextureCRCs()
  NetworkableId get_NetworkID()
  bool CanUpdateSign(BasePlayer player)
  bool CanUnlockSign(BasePlayer player)
  bool CanLockSign(BasePlayer player)
  void Load(LoadInfo info)
  UGCType get_ContentType()
  void LockSign(RPCMessage msg)
  void UnLockSign(RPCMessage msg)
  void Save(SaveInfo info)
  void OnKilled(HitInfo info)
  void OnPickedUpPreItemMove(Item createdItem, BasePlayer player)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  bool ShouldNetworkOwnerInfo()
  void SetTextureCRCs(UInt32[] crcs)
  List`1<ulong> get_EditingHistory()
  void LogEdit(BasePlayer byPlayer)
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  BaseNetworkable get_UgcEntity()
  string Categorize()
  Vector2i get_TextureSize()
  int get_TextureCount()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void UpdateSign(RPCMessage msg)
  void EnsureInitialized()
  void SignDebugLog(string str)
  void .ctor()
--------------------------------------------------
Класс: Cassette
Наследуется от: BaseEntity
Поля:
  float MaxCassetteLength
  float MaxCassetteFileSizeMB
  UInt32 <AudioId>k__BackingField
  ulong CreatorSteamId
  PreloadType PreloadType
  PreloadedCassetteContent PreloadContent
  SoundDefinition InsertCassetteSfx
  int ViewmodelIndex
  Sprite HudSprite
  int MaximumVoicemailSlots
  int preloadedAudioId
  ICassettePlayer currentCassettePlayer
Свойства:
  UInt32 AudioId
  SoundDefinition PreloadedAudio
  bool ShouldTransferAssociatedFiles
  UInt32[] GetContentCRCs
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ClearCassettes(Arg arg)
  void ClearCassettesByUser(Arg arg)
  UInt32 get_AudioId()
  void set_AudioId(UInt32 value)
  SoundDefinition get_PreloadedAudio()
  void Load(LoadInfo info)
  void AssignPreloadContent()
  bool get_ShouldTransferAssociatedFiles()
  void Save(SaveInfo info)
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void DelayedCassetteInserted()
  void SetAudioId(UInt32 id, ulong userId)
  void Server_MakeNewFile(RPCMessage msg)
  bool ClearSavedAudio()
  void DoServerDestroy()
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  UGCType get_ContentType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  bool IsOggValid(Byte[] data, Cassette c)
  bool IsOggValid(Byte[] data, float maxLength)
  float ByteToMegabyte(int byteSize)
  double GetOggLength(Byte[] t)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CCTV_RC
Наследуется от: PoweredRemoteControlEntity
Поля:
  Transform pivotOrigin
  Transform yaw
  Transform pitch
  Vector2 pitchClamp
  Vector2 yawClamp
  float turnSpeed
  float serverLerpSpeed
  float clientLerpSpeed
  float zoomLerpSpeed
  Single[] fovScales
  float pitchAmount
  float yawAmount
  int fovScaleIndex
  float fovScaleLerped
  bool hasPTZ
  AnimationCurve dofCurve
  float dofApertureMax
  Flags Flag_HasViewer
  SoundDefinition movementLoopSoundDef
  AnimationCurve movementLoopGainCurve
  float movementLoopSmoothing
  float movementLoopReference
  Sound movementLoop
  Modulator movementLoopGainModulator
  SoundDefinition zoomInSoundDef
  SoundDefinition zoomOutSoundDef
  RealTimeSinceEx timeSinceLastServerTick
Свойства:
  bool RequiresMouse
  bool EntityCanPing
  bool CanAcceptInput
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int ConsumptionAmount()
  bool get_RequiresMouse()
  bool get_EntityCanPing()
  bool get_CanAcceptInput()
  void ServerInit()
  void PostServerLoad()
  void UserInput(InputState inputState, CameraViewerId viewerID)
  void Save(SaveInfo info)
  void Server_SetDir(RPCMessage msg)
  bool InitializeControl(CameraViewerId viewerID)
  void StopControl(CameraViewerId viewerID)
  void UpdateViewers()
  void ServerTick()
  bool UpdateManualAim(InputState inputState)
  void UpdateRotation(float delta)
  void Load(LoadInfo info)
  float GetFovScale()
  void .ctor()
--------------------------------------------------
Класс: CeilingLight
Наследуется от: IOEntity
Поля:
  float pushScale
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int ConsumptionAmount()
  void Hurt(HitInfo info)
  void RefreshGrowables()
  void IOStateChanged(int inputAmount, int inputSlot)
  void LightsOn()
  void LightsOff()
  void OnKilled(HitInfo info)
  void OnAttacked(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: Chainsaw
Наследуется от: BaseMelee
Поля:
  float attackFadeInTime
  float attackFadeInDelay
  float attackFadeOutTime
  float idleFadeInTimeFromOff
  float idleFadeInTimeFromAttack
  float idleFadeInDelay
  float idleFadeOutTime
  Renderer chainRenderer
  MaterialPropertyBlock block
  Vector2 saveST
  float fuelPerSec
  int maxAmmo
  int ammo
  ItemDefinition fuelType
  float reloadDuration
  SoundPlayer idleLoop
  SoundPlayer attackLoopAir
  SoundPlayer revUp
  SoundPlayer revDown
  SoundPlayer offSound
  int failedAttempts
  float engineStartChance
  float ammoRemainder
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool EngineOn()
  bool IsAttacking()
  void ServerNPCStart()
  void ServerUse()
  void ServerUse_OnHit(HitInfo info)
  void DelayedStopAttack()
  bool VerifyClientAttack(BasePlayer player)
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void SetHeld(bool bHeld)
  void ReduceAmmo(float firingTime)
  void DoReload(RPCMessage msg)
  void Save(SaveInfo info)
  void SetEngineStatus(bool status)
  void SetAttackStatus(bool status)
  void EngineTick()
  void AttackTick()
  void Server_StartEngine(RPCMessage msg)
  void Server_StopEngine(RPCMessage msg)
  void Server_SetAttacking(RPCMessage msg)
  void ServerCommand(Item item, string command, BasePlayer player)
  void DisableHitEffects()
  void EnableHitEffect(UInt32 hitMaterial)
  void DoAttackShared(HitInfo info)
  void Load(LoadInfo info)
  bool HasAmmo()
  Item GetAmmo()
  void .ctor()
--------------------------------------------------
Класс: ClanManager
Наследуется от: BaseEntity
Поля:
  TokenisedPhrase InvitationToast
  int LogoSize
  ClanManager <ServerInstance>k__BackingField
  string _backendType
  ClanChangeTracker _changeTracker
  IClanBackend <Backend>k__BackingField
  int MaxMetadataRequestsPerSecond
  float MaxMetadataRequestInterval
  float MetadataExpiry
  Dictionary`2<long, List`1<Connection>> _clanMemberConnections
Свойства:
  ClanManager ServerInstance
  IClanBackend Backend
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Server_CreateClan(RPCMessage msg)
  void Server_GetClan(RPCMessage msg)
  void Server_GetLogs(RPCMessage msg)
  void Server_GetInvitations(RPCMessage msg)
  void Server_SetLogo(RPCMessage msg)
  void Server_SetColor(RPCMessage msg)
  void Server_SetMotd(RPCMessage msg)
  void Server_Invite(RPCMessage msg)
  void Server_CancelInvite(RPCMessage msg)
  void Server_AcceptInvitation(RPCMessage msg)
  void Server_CancelInvitation(RPCMessage msg)
  void Server_Kick(RPCMessage msg)
  void Server_SetPlayerRole(RPCMessage msg)
  void Server_SetPlayerNotes(RPCMessage msg)
  void Server_CreateRole(RPCMessage msg)
  void Server_UpdateRole(RPCMessage msg)
  void Server_DeleteRole(RPCMessage msg)
  void Server_SwapRoles(RPCMessage msg)
  bool CheckClanResult(int requestId, BasePlayer player, ClanValueResult`1<IClan> result, IClan& clan)
  ClanActionResult BuildActionResult(int requestId, ClanResult result, IClan clan, bool hasClanInfo)
  ClanManager get_ServerInstance()
  void set_ServerInstance(ClanManager value)
  IClanBackend get_Backend()
  void set_Backend(IClanBackend value)
  Task Initialize()
  void Shutdown()
  void Spawn()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  string ChooseBackendType()
  IClanBackend CreateBackendInstance(string type)
  void InitShared()
  void OnDestroy()
  void Server_GetClanMetadata(RPCMessage msg)
  void SendClanChanged(IClan clan)
  void SendClanInvitation(ulong steamId, long clanId)
  bool TryGetClanMemberConnections(long clanId, List`1& connections)
  void ClanMemberConnectionsChanged(long clanId)
  void LoadClanInfoForSleepers()
  void .ctor()
  void .cctor()
  void <Initialize>b__33_0()
  void <Spawn>b__35_0()
--------------------------------------------------
Класс: CodeLock
Наследуется от: BaseLock
Поля:
  GameObjectRef keyEnterDialog
  GameObjectRef effectUnlocked
  GameObjectRef effectLocked
  GameObjectRef effectDenied
  GameObjectRef effectCodeChanged
  GameObjectRef effectShock
  bool hasCode
  Flags Flag_CodeEntryBlocked
  Phrase blockwarning
  float maxFailedAttempts
  float lockoutCooldown
  bool hasGuestCode
  string code
  string guestCode
  List`1<ulong> whitelistPlayers
  List`1<ulong> guestPlayers
  int wrongCodes
  float lastWrongTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsCodeEntryBlocked()
  void Load(LoadInfo info)
  void DoEffect(string effect)
  bool OnTryToOpen(BasePlayer player)
  bool OnTryToClose(BasePlayer player)
  bool CanUseNetworkCache(Connection connection)
  void Save(SaveInfo info)
  void RPC_ChangeCode(RPCMessage rpc)
  void TryUnlock(RPCMessage rpc)
  void TryLock(RPCMessage rpc)
  void ClearCodeEntryBlocked()
  void UnlockWithCode(RPCMessage rpc)
  void PostServerLoad()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CollectableEasterEgg
Наследуется от: BaseEntity
Поля:
  Transform artwork
  float bounceRange
  float bounceSpeed
  GameObjectRef pickupEffect
  ItemDefinition itemToGive
  float lastPickupStartTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void RPC_StartPickUp(RPCMessage msg)
  void RPC_PickUp(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: CollectibleEntity
Наследуется от: BaseEntity
Поля:
  Phrase itemName
  ItemAmount[] itemList
  GameObjectRef pickupEffect
  float xpScale
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsFood(bool checkConsumeMod)
  void DoPickup(BasePlayer reciever, bool eat)
  void Pickup(RPCMessage msg)
  void PickupEat(RPCMessage msg)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: CommunityEntity
Наследуется от: PointEntity
Поля:
  CommunityEntity ServerInstance
  CommunityEntity ClientInstance
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void InitShared()
  void DestroyShared()
  void .ctor()
--------------------------------------------------
Класс: CompoundBowWeapon
Наследуется от: BowWeapon
Поля:
  float stringHoldDurationMax
  float stringBonusDamage
  float stringBonusDistance
  float stringBonusVelocity
  float movementPenaltyRampUpTime
  float conditionLossPerSecondHeld
  float conditionLossHeldDelay
  SoundDefinition chargeUpSoundDef
  SoundDefinition stringHeldSoundDef
  SoundDefinition drawFinishSoundDef
  Sound chargeUpSound
  Sound stringHeldSound
  float movementPenalty
  float stringHoldTimeStart
  float conditionLossCheckTickRate
  float serverMovementCheckTickRate
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void UpdateMovementPenalty(float delta)
  void UpdateConditionLoss()
  void ServerMovementCheck()
  void OnHeldChanged()
  void RPC_StringHoldStatus(RPCMessage msg)
  void DidAttackServerside()
  float GetLastPlayerMovementTime()
  float GetStringBonusScale()
  float GetDamageScale(bool getMax)
  float GetDistanceScale(bool getMax)
  float GetProjectileVelocityScale(bool getMax)
  void .ctor()
--------------------------------------------------
Класс: ComputerStation
Наследуется от: BaseMountable
Поля:
  Flags Flag_HasFullControl
  GameObjectRef menuPrefab
  ComputerMenu computerMenu
  EntityRef currentlyControllingEnt
  List`1<string> controlBookmarks
  Transform leftHandIKPosition
  Transform rightHandIKPosition
  SoundDefinition turnOnSoundDef
  SoundDefinition turnOffSoundDef
  SoundDefinition onLoopSoundDef
  bool isStatic
  float autoGatherRadius
  ulong currentPlayerID
  float nextAddTime
  Char[] BookmarkSplit
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool AllowPings()
  bool IsValidIdentifier(string str)
  void DestroyShared()
  void ServerInit()
  void GatherStaticCameras()
  void PostServerLoad()
  void StopControl(BasePlayer ply)
  bool IsPlayerAdmin(BasePlayer player)
  void DeleteBookmark(RPCMessage msg)
  void Server_DisconnectControl(RPCMessage msg)
  void BeginControllingBookmark(RPCMessage msg)
  void CheckCCTVAchievement()
  bool CanAddBookmark(BasePlayer player)
  void ForceAddBookmark(string identifier)
  void AddBookmark(RPCMessage msg)
  void ControlCheck()
  string GenerateControlBookmarkString()
  void SendControlBookmarks(BasePlayer player)
  void OnPlayerMounted()
  void OnPlayerDismounted(BasePlayer player)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConnectedSpeaker
Наследуется от: IOEntity
Поля:
  AudioSource SoundSource
  EntityRef`1<IOEntity> connectedTo
  VoiceProcessor VoiceProcessor
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void OnFlagsChanged(Flags old, Flags next)
  void Load(LoadInfo info)
  IAudioConnectionSource GetConnectionSource(IOEntity entity, int depth)
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: ContainerIOEntity
Наследуется от: IOEntity
Поля:
  ItemDefinition onlyAllowedItem
  ContentsType allowedContents
  int maxStackSize
  int numSlots
  string lootPanelName
  Phrase panelTitle
  bool needsBuildingPrivilegeToUse
  bool isLootable
  bool dropsLoot
  bool dropFloats
  bool onlyOneUser
  SoundDefinition openSound
  SoundDefinition closeSound
  ItemContainer <inventory>k__BackingField
  ulong <LastLootedBy>k__BackingField
Свойства:
  Phrase LootPanelTitle
  ItemContainer inventory
  Transform Transform
  bool DropsLoot
  bool DropFloats
  float DestroyLootPercent
  ulong LastLootedBy
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Phrase get_LootPanelTitle()
  ItemContainer get_inventory()
  void set_inventory(ItemContainer value)
  Transform get_Transform()
  bool get_DropsLoot()
  bool get_DropFloats()
  float get_DestroyLootPercent()
  ulong get_LastLootedBy()
  void set_LastLootedBy(ulong value)
  bool CanPickup(BasePlayer player)
  void ServerInit()
  void PreServerLoad()
  void PostServerLoad()
  void CreateInventory(bool giveUID)
  void Save(SaveInfo info)
  void OnInventoryFirstCreated(ItemContainer container)
  void OnItemAddedOrRemoved(Item item, bool added)
  void OnInventoryDirty()
  void OnKilled(HitInfo info)
  void DropItems(BaseEntity initiator)
  void RPC_OpenLoot(RPCMessage rpc)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void PlayerStoppedLooting(BasePlayer player)
  bool ShouldDropItemsIndividually()
  int GetIdealSlot(BasePlayer player, Item item)
  ItemContainerId GetIdealContainer(BasePlayer player, Item item, bool altMove)
  void DropBonusItems(BaseEntity initiator, ItemContainer container)
  bool OccupiedCheck(BasePlayer player)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: CustomDoorManipulator
Наследуется от: DoorManipulator
Поля:
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool PairWithLockedDoors()
  bool CanPlayerAdmin(BasePlayer player)
  bool IsPaired()
  void RefreshDoor()
  void OnPhysicsNeighbourChanged()
  void SetupInitialDoorConnection()
  void DoActionDoorMissing()
  void DoPair(RPCMessage msg)
  void ServerActionChange(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: CustomTimerSwitch
Наследуется от: TimerSwitch
Поля:
  GameObjectRef timerPanelPrefab
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void UpdateFromInput(int inputAmount, int inputSlot)
  void SERVER_SetTime(RPCMessage msg)
  bool CanPlayerAdmin(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: DeployableBoomBox
Наследуется от: ContainerIOEntity
Поля:
  BoomBox BoxController
  int PowerUsageWhilePlaying
  int MaxBacktrackHopsClient
  bool IsStatic
Свойства:
  BaseEntity ToBaseEntity
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  BaseEntity get_ToBaseEntity()
  IOEntity ToEntity()
  int ConsumptionAmount()
  int DesiredPower()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void ServerInit()
  bool ItemFilter(Item item, int count)
  int GetPassthroughAmount(int outputSlot)
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  void ServerTogglePlay(RPCMessage msg)
  void Server_UpdateRadioIP(RPCMessage msg)
  void Save(SaveInfo info)
  bool ClearRadioByUserId(ulong id)
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  void HurtCallback(float amount)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: DeployedRecorder
Наследуется от: StorageContainer
Поля:
  AudioSource SoundSource
  ItemDefinition[] ValidCassettes
  SoundDefinition PlaySfx
  SoundDefinition StopSfx
  SwapKeycard TapeSwapper
  Nullable`1<CollisionDetectionMode> initialCollisionDetectionMode
Свойства:
  BaseEntity ToBaseEntity
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  BaseEntity get_ToBaseEntity()
  void ServerTogglePlay(RPCMessage msg)
  void ServerTogglePlay(bool play)
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  bool ItemFilter(Item item, int targetSlot)
  void OnCollision(Collision collision, BaseEntity hitEntity)
  void DoCollisionStick(Collision collision, BaseEntity ent)
  void SetMotionEnabled(bool wantsMotion)
  void DoStick(Vector3 position, Vector3 normal, BaseEntity ent, Collider hitCollider)
  void UnStick()
  void OnParentRemoved()
  void SetCollisionEnabled(bool wantsCollision)
  void ResetState()
  void .ctor()
--------------------------------------------------
Класс: Deployer
Наследуется от: HeldEntity
Поля:
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  ItemModDeployable GetModDeployable()
  Deployable GetDeployable()
  Quaternion GetDeployedRotation(Vector3 normal, Vector3 placeDir)
  bool IsPlacementAngleAcceptable(Vector3 pos, Quaternion rot)
  bool CheckPlacement(Deployable deployable, Ray ray, float fDistance)
  void DoDeploy(RPCMessage msg)
  void DoDeploy_Slot(Deployable deployable, Ray ray, NetworkableId entityID)
  void DoDeploy_Regular(Deployable deployable, Ray ray)
  void .ctor()
--------------------------------------------------
Класс: Detonator
Наследуется от: HeldEntity
Поля:
  int frequency
  float timeSinceDeploy
  GameObjectRef frequencyPanelPrefab
  GameObjectRef attackEffect
  GameObjectRef unAttackEffect
  float nextChangeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void SetPressed(RPCMessage msg)
  void InternalSetPressed(bool pressed)
  Vector3 GetPosition()
  float GetMaxRange()
  void RFSignalUpdate(bool on)
  void SetHeld(bool bHeld)
  void ServerSetFrequency(RPCMessage msg)
  void ServerSetFrequency(BasePlayer player, int freq)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  int GetFrequency()
  void .ctor()
--------------------------------------------------
Класс: DieselEngine
Наследуется от: StorageContainer
Поля:
  GameObjectRef rumbleEffect
  Transform rumbleOrigin
  Flags Flag_HasFuel
  float runningTimePerFuelUnit
  float cachedFuelTime
  float rumbleMaxDistSq
  string EXCAVATOR_ACTIVATED_STAT
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool CanOpenLootPanel(BasePlayer player, string panelName)
  void FixedUpdate()
  void EngineSwitch(RPCMessage msg)
  void TimedShutdown()
  bool ConsumeFuelItem(int amount)
  int GetFuelAmount()
  void UpdateHasFuelFlag()
  void PlayerStoppedLooting(BasePlayer player)
  void EngineOff()
  void EngineOn()
  void RescheduleEngineShutdown()
  void PostServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool HasFuel()
  void .ctor()
--------------------------------------------------
Класс: Door
Наследуется от: AnimatedBuildingBlock
Поля:
  GameObjectRef knockEffect
  bool canTakeLock
  bool hasHatch
  bool canTakeCloser
  bool canTakeKnocker
  bool canNpcOpen
  bool canHandOpen
  bool isSecurityDoor
  bool canReverseOpen
  TriggerNotify[] vehiclePhysBoxes
  bool checkPhysBoxesOnOpen
  SoundDefinition vehicleCollisionSfx
  GameObject[] ClosedColliderRoots
  float openAnimLength
  float closeAnimLength
  Flags ReverseOpen
  float decayResetTimeLast
  NavMeshModifierVolume NavMeshVolumeAnimals
  NavMeshModifierVolume NavMeshVolumeHumanoids
  NavMeshLink NavMeshLink
  NPCDoorTriggerBox NpcTriggerBox
  int nonWalkableArea
  int animalAgentTypeId
  int humanoidAgentTypeId
  Dictionary`2<BasePlayer, TimeSince> woundedOpens
  Dictionary`2<BasePlayer, TimeSince> woundedCloses
  float nextKnockTime
  int openHash
  int closeHash
  int reverseOpenHash
Свойства:
  bool HasVehiclePushBoxes
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  void ServerInit()
  bool HasSlot(Slot slot)
  bool CanPickup(BasePlayer player)
  void CloseRequest()
  void SetOpen(bool open, bool suppressBlockageChecks)
  void SetLocked(bool locked)
  bool GetPlayerLockPermission(BasePlayer player)
  void SetNavMeshLinkEnabled(bool wantsOn)
  void RPC_OpenDoor(RPCMessage rpc)
  void DelayedDoorOpening()
  void OnPlayerOpenedDoor(BasePlayer p)
  bool ShouldDelayOpen(BasePlayer forPlayer, Single& delay)
  void StartCheckingForBlockages(bool isOpening)
  void StopCheckingForBlockages()
  void RPC_CloseDoor(RPCMessage rpc)
  void RPC_KnockDoor(RPCMessage rpc)
  void RPC_ToggleHatch(RPCMessage rpc)
  void EnableVehiclePhysBoxes()
  void DisableVehiclePhysBox()
  bool get_HasVehiclePushBoxes()
  void ToggleVehiclePushBoxes(bool state)
  void Server_NotifyWoundedOpen(RPCMessage msg)
  void CheckTimedOutPlayers(Dictionary`2<BasePlayer, TimeSince> dictionary)
  void Server_NotifyWoundedClose(RPCMessage msg)
  void ReverseDoorAnimation(bool wasOpening)
  float BoundsPadding()
  void OnObjects(TriggerNotify trigger)
  void OnEmpty()
  void OnFlagsChanged(Flags old, Flags next)
  void .ctor()
  void .cctor()
  void <Server_NotifyWoundedOpen>b__51_0()
  void <Server_NotifyWoundedClose>b__53_0()
--------------------------------------------------
Класс: DoorCloser
Наследуется от: BaseEntity
Поля:
  ItemDefinition itemType
  float delay
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float BoundsPadding()
  void Think()
  void SendClose()
  void RPC_Take(RPCMessage rpc)
  Door GetDoor()
  void .ctor()
--------------------------------------------------
Класс: DoorKnocker
Наследуется от: BaseCombatEntity
Поля:
  Animator knocker1
  Animator knocker2
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Knock(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: DroppedItemContainer
Наследуется от: BaseCombatEntity
Поля:
  string lootPanelName
  int maxItemCount
  ulong playerSteamID
  string _playerName
  bool ItemBasedDespawn
  bool onlyOwnerLoot
  SoundDefinition openSound
  SoundDefinition closeSound
  ulong <LastLootedBy>k__BackingField
  ItemContainer inventory
Свойства:
  Phrase LootPanelTitle
  string playerName
  ulong LastLootedBy
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Phrase get_LootPanelTitle()
  string get_playerName()
  void set_playerName(string value)
  ulong get_LastLootedBy()
  void set_LastLootedBy(ulong value)
  bool OnStartBeingLooted(BasePlayer baseEntity)
  void ServerInit()
  void RemoveMe()
  void ResetRemovalTime(float dur)
  void ResetRemovalTime()
  float CalculateRemovalTime()
  void DoServerDestroy()
  void TakeFrom(ItemContainer[] source, float destroyPercent)
  void RPC_OpenLoot(RPCMessage rpc)
  void PlayerStoppedLooting(BasePlayer player)
  void PreServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: DudTimedExplosive
Наследуется от: TimedExplosive
Поля:
  GameObjectRef fizzleEffect
  GameObject wickSpark
  AudioSource wickSound
  float dudChance
  ItemDefinition itemToGive
  float explodeTime
  bool becomeDudInWater
Свойства:
  bool AlwaysRunWaterCheck
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsWickBurning()
  bool get_AlwaysRunWaterCheck()
  void WaterCheck()
  float GetRandomTimerTime()
  void RPC_Pickup(RPCMessage msg)
  void SetFuse(float fuseLength)
  void Explode()
  bool CanStickTo(BaseEntity entity)
  void BecomeDud()
  void Save(SaveInfo info)
  void Ignite(Vector3 fromPos)
  bool CanIgnite()
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: EasterBasket
Наследуется от: AttackEntity
Поля:
  GameObjectRef eggProjectile
  ItemDefinition ammoType
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Vector3 GetInheritedVelocity(BasePlayer player, Vector3 direction)
  Item GetAmmo()
  bool HasAmmo()
  void UseAmmo()
  void ThrowEgg(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: ElectricalBranch
Наследуется от: IOEntity
Поля:
  int branchAmount
  GameObjectRef branchPanelPrefab
  float nextChangeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void SetBranchOffPower(RPCMessage msg)
  bool AllowDrainFrom(int outputSlot)
  int DesiredPower()
  void SetBranchAmount(int newAmount)
  int GetPassthroughAmount(int outputSlot)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: ElectricSwitch
Наследуется от: IOEntity
Поля:
  bool isToggleSwitch
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool WantsPower()
  int ConsumptionAmount()
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void ServerInit()
  void SetSwitch(bool wantsOn)
  void SVSwitch(RPCMessage msg)
  void Unbusy()
  void .ctor()
--------------------------------------------------
Класс: ElevatorLift
Наследуется от: BaseCombatEntity
Поля:
  GameObject DescendingHurtTrigger
  GameObject MovementCollider
  Transform UpButtonPoint
  Transform DownButtonPoint
  TriggerNotify VehicleTrigger
  GameObjectRef LiftArrivalScreenBounce
  SoundDefinition liftMovementLoopDef
  SoundDefinition liftMovementStartDef
  SoundDefinition liftMovementStopDef
  SoundDefinition liftMovementAccentSoundDef
  GameObjectRef liftButtonPressedEffect
  float movementAccentMinInterval
  float movementAccentMaxInterval
  Sound liftMovementLoopSound
  float nextMovementAccent
  Vector3 lastPosition
  Flags PressedUp
  Flags PressedDown
Свойства:
  Elevator owner
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Elevator get_owner()
  void ServerInit()
  void ToggleHurtTrigger(bool state)
  void Server_RaiseLowerFloor(RPCMessage msg)
  void ClearDirection()
  void Hurt(HitInfo info)
  void AdminKill()
  void PostServerLoad()
  bool CanMove()
  void NotifyNewFloor(int newFloor, int totalFloors)
  void ToggleMovementCollider(bool state)
  void .ctor()
--------------------------------------------------
Класс: EngineSwitch
Наследуется от: BaseEntity
Поля:
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void StopEngine(RPCMessage msg)
  void StartEngine(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: ExcavatorArm
Наследуется от: BaseEntity
Поля:
  float yaw1
  float yaw2
  Transform wheel
  float wheelSpeed
  float turnSpeed
  Transform miningOffset
  GameObjectRef bounceEffect
  LightGroupAtTime lights
  Material conveyorMaterial
  float beltSpeedMax
  Flags Flag_HasPower
  List`1<ExcavatorOutputPile> outputPiles
  SoundDefinition miningStartButtonSoundDef
  ItemAmount[] resourcesToMine
  float resourceProductionTickRate
  float timeForFullResources
  ItemAmount[] pendingResources
  Phrase excavatorPhrase
  float movedAmount
  float currentTurnThrottle
  float lastMoveYaw
  float excavatorStartTime
  float nextNotificationTime
  int resourceMiningIndex
Свойства:
  float PositionTickRate
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsPowered()
  bool IsMining()
  float get_PositionTickRate()
  float GetNetworkTime()
  void FixedUpdate()
  void BeginMining()
  void StopMining()
  void ProduceResources()
  void OnEntityMessage(BaseEntity from, string msg)
  void RPC_SetResourceTarget(RPCMessage msg)
  void RPC_StopMining(RPCMessage msg)
  void Spawn()
  void PostServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void PostMapEntitySpawn()
  void Init()
  void .ctor()
--------------------------------------------------
Класс: ExcavatorSignalComputer
Наследуется от: BaseCombatEntity
Поля:
  float chargePower
  Flags Flag_Ready
  Flags Flag_HasPower
  GameObjectRef supplyPlanePrefab
  Transform[] dropPoints
  Text statusText
  Text timerText
  Phrase readyphrase
  Phrase chargephrase
  float chargeNeededForSupplies
  float lastChargeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Save(SaveInfo info)
  void ServerInit()
  void PostServerLoad()
  void ChargeThink()
  void OnEntityMessage(BaseEntity from, string msg)
  void RequestSupplies(RPCMessage rpc)
  bool IsPowered()
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: FishMount
Наследуется от: StorageContainer
Поля:
  Animator[] FishRoots
  GameObjectRef FishInteractSound
  float UseCooldown
  Flags HasFish
Свойства:
  int GetCurrentFishItemIndex
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Save(SaveInfo info)
  int get_GetCurrentFishItemIndex()
  bool ItemFilter(Item item, int targetSlot)
  void PostServerLoad()
  void OnItemAddedOrRemoved(Item item, bool added)
  void UseFish(RPCMessage msg)
  void ClearBusy()
  void .ctor()
--------------------------------------------------
Класс: FlameThrower
Наследуется от: AttackEntity
Поля:
  int maxAmmo
  int ammo
  ItemDefinition fuelType
  float timeSinceLastAttack
  float nextReadyTime
  float flameRange
  float flameRadius
  ParticleSystem[] flameEffects
  FlameJet jet
  GameObjectRef fireballPrefab
  List`1<DamageTypeEntry> damagePerSec
  SoundDefinition flameStart3P
  SoundDefinition flameLoop3P
  SoundDefinition flameStop3P
  SoundDefinition pilotLoopSoundDef
  float tickRate
  float lastFlameTick
  float fuelPerSec
  float ammoRemainder
  float reloadDuration
  float lastReloadTime
  float nextFlameTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsWeaponBusy()
  void SetBusyFor(float dur)
  void ClearBusy()
  void ReduceAmmo(float firingTime)
  void PilotLightToggle_Shared()
  bool IsPilotOn()
  bool IsFlameOn()
  bool HasAmmo()
  Item GetAmmo()
  void Load(LoadInfo info)
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void Save(SaveInfo info)
  void SetFiring(RPCMessage msg)
  void ServerUse()
  void TopUpAmmo()
  float AmmoFraction()
  bool ServerIsReloading()
  bool CanReload()
  void ServerReload()
  void StopFlameState()
  void DoReload(RPCMessage msg)
  void SetFlameState(bool wantsOn)
  void TogglePilotLight(RPCMessage msg)
  void OnHeldChanged()
  void FlameTick()
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: FlameTurret
Наследуется от: StorageContainer
Поля:
  Transform upper
  Vector3 aimDir
  float arc
  float triggeredDuration
  float flameRange
  float flameRadius
  float fuelPerSec
  Transform eyeTransform
  List`1<DamageTypeEntry> damagePerSec
  GameObjectRef triggeredEffect
  GameObjectRef fireballPrefab
  GameObjectRef explosionEffect
  TargetTrigger trigger
  float nextFireballTime
  int turnDir
  float lastMovementUpdate
  float triggeredTime
  float lastServerThink
  float triggerCheckRate
  float nextTriggerCheckTime
  float pendingFuel
  UpdateFlameTurretWorkQueue updateFlameTurretQueueServer
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsTriggered()
  Vector3 GetEyePosition()
  bool CanPickup(BasePlayer player)
  void SetTriggered(bool triggered)
  void ServerInit()
  void SendAimDir()
  float GetSpinSpeed()
  void OnAttacked(HitInfo info)
  void MovementUpdate(float delta)
  void ServerThink()
  bool CheckTrigger()
  void OnKilled(HitInfo info)
  int GetFuelAmount()
  bool HasFuel()
  bool UseFuel(float seconds)
  void DoFlame(float delta)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Flashbang
Наследуется от: TimedExplosive
Поля:
  SoundDefinition deafLoopDef
  float flashReductionPerSecond
  float flashToAdd
  float flashMinRange
  float flashMaxRange
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Explode()
  void DelayedDestroy()
  void .ctor()
--------------------------------------------------
Класс: FrankensteinPet
Наследуется от: BasePet
Поля:
  float decayminutes
  SoundDefinition AttackVocalSFX
  float nextAttackTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  IEnumerator DelayEquipWeapon(ItemDefinition item, float delay)
  void TickDecay()
  float EngagementRange()
  bool IsThreat(BaseEntity entity)
  bool IsTarget(BaseEntity entity)
  bool IsFriendly(BaseEntity entity)
  bool CanAttack(BaseEntity entity)
  bool IsTargetInRange(BaseEntity entity, Single& dist)
  bool CanSeeTarget(BaseEntity entity)
  bool NeedsToReload()
  bool Reload()
  float CooldownDuration()
  bool IsOnCooldown()
  bool StartAttacking(BaseEntity target)
  void Attack(BaseCombatEntity target)
  void StopAttacking()
  float GetAmmoFraction()
  BaseEntity GetBestTarget()
  void AttackTick(float delta, BaseEntity target, bool targetIsLOS)
  bool ShouldDropActiveItem()
  BaseCorpse CreateCorpse()
  string OverrideCorpseName()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: FrankensteinTable
Наследуется от: StorageContainer
Поля:
  GameObjectRef FrankensteinPrefab
  Transform SpawnLocation
  ItemDefinition WeaponItem
  List`1<ItemDefinition> HeadItems
  List`1<ItemDefinition> TorsoItems
  List`1<ItemDefinition> LegItems
  List`1<ItemDefinition> ItemsToUse
  FrankensteinTableVisuals TableVisuals
  float TableDownDuration
  bool waking
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsHeadItem(ItemDefinition itemDef)
  bool IsTorsoItem(ItemDefinition itemDef)
  bool IsLegsItem(ItemDefinition itemDef)
  bool HasValidItems(ItemContainer container)
  List`1<ItemDefinition> GetValidItems(ItemContainer container)
  bool HasAllValidItems(List`1<ItemDefinition> items)
  void CheckItem(ItemDefinition item, List`1<ItemDefinition> itemList, List`1<ItemDefinition> validItems, Boolean& set)
  void ServerInit()
  void OnItemAddedOrRemoved(Item item, bool added)
  bool CanAcceptItem(Item item, int targetSlot)
  void CreateFrankenstein(RPCMessage msg)
  bool CanStartCreating(BasePlayer player)
  bool IsInventoryEmpty()
  void ConsumeInventory()
  void RequestWakeFrankenstein(RPCMessage msg)
  void WakeFrankenstein(BasePlayer owner)
  IEnumerator DelayWakeFrankenstein(BasePlayer owner)
  void EquipFrankenstein(FrankensteinPet frank)
  void RequestSleepFrankenstein(RPCMessage msg)
  void SleepFrankenstein(BasePlayer owner)
  void ReturnFrankensteinItems(FrankensteinPet frank)
  IEnumerator WaitForFrankensteinBrainInit(BasePet frankenstein, BasePlayer player)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: FreeableLootContainer
Наследуется от: LootContainer
Поля:
  Flags tiedDown
  Buoyancy buoyancy
  GameObjectRef freedEffect
  Rigidbody rb
  UInt32 skinOverride
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Rigidbody GetRB()
  bool IsTiedDown()
  void ServerInit()
  void OnAttacked(HitInfo info)
  void Release(BasePlayer ply)
  void RPC_FreeCrate(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: FuelGenerator
Наследуется от: ContainerIOEntity
Поля:
  int outputEnergy
  float fuelPerSec
  float fuelTickRate
  float pendingFuel
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsRootEntity()
  int MaximalPowerOutput()
  int ConsumptionAmount()
  void Init()
  void UpdateFromInput(int inputAmount, int inputSlot)
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  void UpdateCurrentEnergy()
  int GetPassthroughAmount(int outputSlot)
  void RPC_EngineSwitch(RPCMessage msg)
  void SetGeneratorState(bool wantsOn)
  int GetFuelAmount()
  bool HasFuel()
  bool UseFuel(float seconds)
  void TurnOn()
  void FuelConsumption()
  void TurnOff()
  void .ctor()
--------------------------------------------------
Класс: GestureDoor
Наследуется от: Door
Поля:
  GestureConfig OpenGesture
  GestureConfig KickGesture
  float KickAnimationDelay
  float PushAnimationDelay
  float WeaponAdditiveDelay
  bool wasKick
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void OnPlayerOpenedDoor(BasePlayer p)
  bool ShouldDelayOpen(BasePlayer player, Single& delay)
  void ServerKick(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: GlobalNetworkHandler
Наследуется от: PointEntity
Поля:
  GlobalNetworkHandler server
  Dictionary`2<NetworkableId, GlobalEntityData> serverData
  List`1<Connection> globalConnections
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool ShouldSendEntity(BaseEntity entity)
  void ServerInit()
  void PostServerLoad()
  void OnClientConnected(Connection connection)
  void OnClientDisconnected(Connection connection)
  void LoadEntitiesOnStartup()
  void TrySendNetworkUpdate(BaseNetworkable net)
  void OnEntityUpdate(BaseEntity entity, bool sendNetworkUpdate)
  void OnEntityKilled(BaseNetworkable entity)
  void StartSendingSnapshot(BasePlayer player)
  void SendSnapshot(BasePlayer player)
  void SendEntityDelete(NetworkableId networkableId, SendInfo info)
  void SendGlobalEntities(GlobalEntityCollection entities, SendInfo info)
  void SendGlobalEntity(GlobalEntityData entity, SendInfo info)
  void .ctor()
--------------------------------------------------
Класс: GrowableEntity
Наследуется от: BaseCombatEntity
Поля:
  PlantProperties Properties
  ItemDefinition SourceItemDef
  State <State>k__BackingField
  float <Age>k__BackingField
  float <LightQuality>k__BackingField
  float <GroundQuality>k__BackingField
  float <WaterQuality>k__BackingField
  float <WaterConsumption>k__BackingField
  bool <Fertilized>k__BackingField
  float <TemperatureQuality>k__BackingField
  float <OverallQuality>k__BackingField
  float <Yield>k__BackingField
  float stageAge
  GrowableGenes Genes
  float startingHealth
  float artificalLightQuality
  float planterGroundModifierBase
  float fertilizerGroundModifierBonus
  float growthGeneSpeedMultiplier
  float waterGeneRequirementMultiplier
  float hardinessGeneModifierBonus
  float hardinessGeneTemperatureModifierBonus
  float baseYieldIncreaseMultiplier
  float yieldGeneBonusMultiplier
  float maxNonPlanterGroundQuality
  float deathRatePerQuality
  TimeCachedValue`1<float> sunExposure
  TimeCachedValue`1<float> artificialLightExposure
  TimeCachedValue`1<float> artificialTemperatureExposure
  float framebudgetms
  GrowableEntityUpdateQueue growableEntityUpdateQueue
  bool underWater
  int seasons
  int harvests
  float terrainTypeValue
  float yieldPool
  PlanterBox planter
Свойства:
  State State
  float Age
  float LightQuality
  float GroundQuality
  float WaterQuality
  float WaterConsumption
  bool Fertilized
  float TemperatureQuality
  float OverallQuality
  float Yield
  float StageProgressFraction
  Stage currentStage
  float ThinkDeltaTime
  float growDeltaTime
  int CurrentPickAmount
  float CurrentPickAmountFloat
  float CurrentTemperature
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  State get_State()
  void set_State(State value)
  float get_Age()
  void set_Age(float value)
  float get_LightQuality()
  void set_LightQuality(float value)
  float get_GroundQuality()
  void set_GroundQuality(float value)
  float get_WaterQuality()
  void set_WaterQuality(float value)
  float get_WaterConsumption()
  void set_WaterConsumption(float value)
  bool get_Fertilized()
  void set_Fertilized(bool value)
  float get_TemperatureQuality()
  void set_TemperatureQuality(float value)
  float get_OverallQuality()
  void set_OverallQuality(float value)
  float get_Yield()
  void set_Yield(float value)
  float get_StageProgressFraction()
  Stage get_currentStage()
  float get_ThinkDeltaTime()
  float get_growDeltaTime()
  void ReceiveInstanceData(InstanceData data)
  void ResetState()
  bool CanPick()
  int get_CurrentPickAmount()
  float get_CurrentPickAmountFloat()
  bool CanTakeSeeds()
  bool CanClone()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void ChangeState(State state, bool resetAge, bool loading)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void QueueForQualityUpdate()
  void CalculateQualities(bool firstTime, bool forceArtificialLightUpdates, bool forceArtificialTemperatureUpdates)
  void CalculateQualities_Water()
  void CalculateLightQuality(bool forceArtificalUpdate)
  float CalculateSunExposure(bool force)
  float SunRaycast()
  float GetArtificialLightExposure(bool force)
  float CalculateArtificialLightExposure()
  float CalculateArtificialLightExposure(Transform forTransform)
  float SunRaycast(Vector3 checkPosition)
  void CalculateWaterQuality()
  void CalculateGroundQuality(bool firstCheck)
  float GetGroundTypeValue(Vector3 pos)
  void CalculateTemperatureQuality()
  float CalculateOverallQuality()
  void CalculateWaterConsumption()
  float CalculateArtificialTemperature()
  float CalculateArtificialTemperature(Transform forTransform)
  int CalculateMarketValue()
  float RemapValue(float inValue, float minA, float maxA, float minB, float maxB)
  bool IsFood()
  float get_CurrentTemperature()
  void ServerInit()
  PlanterBox GetPlanter()
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void PostServerLoad()
  void ResetSeason()
  void RunUpdate()
  float UpdateAge(float overallQuality)
  void UpdateHealthAndYield(float overallQuality, float actualStageAgeIncrease)
  void ApplyDeathRate()
  float GetGrowthBonus(float overallQuality)
  State UpdateState()
  void ConsumeWater()
  void Fertilize()
  void RPC_TakeClone(RPCMessage msg)
  void RPC_TakeCloneAll(RPCMessage msg)
  void TakeClones(BasePlayer player)
  void PickFruit(BasePlayer player, bool eat)
  void GiveFruit(BasePlayer player, int amount, bool eat)
  void GiveFruit(BasePlayer player, int amount, bool applyCondition, bool eat)
  void RPC_PickFruit(RPCMessage msg)
  void RPC_EatFruit(RPCMessage msg)
  void RPC_PickFruitAll(RPCMessage msg)
  void RPC_RemoveDying(RPCMessage msg)
  void RPC_RemoveDyingAll(RPCMessage msg)
  void RemoveDying(BasePlayer receiver)
  void GrowAll(Arg arg)
  void RPC_RequestQualityUpdate(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GunTrap
Наследуется от: StorageContainer
Поля:
  GameObjectRef gun_fire_effect
  GameObjectRef bulletEffect
  GameObjectRef triggeredEffect
  Transform muzzlePos
  Transform eyeTransform
  int numPellets
  int aimCone
  float sensorRadius
  ItemDefinition ammoType
  TargetTrigger trigger
  float triggerCooldown
  BuildingPrivlidge _cachedTc
  float _cacheTimeout
  float gun_trap_budget_ms
  GunTrapScanWorkQueue updateGunTrapWorkQueue
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  string Categorize()
  bool UseAmmo()
  void FireWeapon()
  void FireBullet()
  void ServerInit()
  void DoServerDestroy()
  void TriggerCheck()
  BuildingPrivlidge GetCachedTc()
  bool CheckTrigger()
  bool IsTriggered()
  Vector3 GetEyePosition()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HackableLockedCrate
Наследуется от: LootContainer
Поля:
  Flags Flag_Hacking
  Flags Flag_FullyHacked
  Text timerText
  float requiredHackSeconds
  float decaySeconds
  SoundPlayer hackProgressBeep
  float hackSeconds
  GameObjectRef shockEffect
  GameObjectRef mapMarkerEntityPrefab
  GameObjectRef landEffect
  bool shouldDecay
  ulong OriginalHackerPlayer
  BaseEntity mapMarkerInstance
  bool hasLanded
  bool wasDropped
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsBeingHacked()
  bool IsFullyHacked()
  void DestroyShared()
  void CreateMapMarker(float durationMinutes)
  void RefreshDecay()
  void DelayedDestroy()
  void OnAttacked(HitInfo info)
  void SetWasDropped()
  void ServerInit()
  void LandCheck()
  void PostServerLoad()
  void RPC_Hack(RPCMessage msg)
  void StartHacking()
  void HackProgress()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HBHFSensor
Наследуется от: BaseDetector
Поля:
  GameObjectRef detectUp
  GameObjectRef detectDown
  Flags Flag_IncludeOthers
  Flags Flag_IncludeAuthed
  int detectedPlayers
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetPassthroughAmount(int outputSlot)
  void OnObjects()
  void OnEmpty()
  void UpdatePassthroughAmount()
  void SetIncludeAuth(RPCMessage msg)
  void SetIncludeOthers(RPCMessage msg)
  bool ShouldIncludeAuthorized()
  bool ShouldIncludeOthers()
  void .ctor()
--------------------------------------------------
Класс: HeldBoomBox
Наследуется от: HeldEntity
Поля:
  BoomBox BoxController
  SwapKeycard cassetteSwapper
Свойства:
  BaseEntity ToBaseEntity
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  BaseEntity get_ToBaseEntity()
  void ServerInit()
  void ServerTogglePlay(RPCMessage msg)
  void Server_UpdateRadioIP(RPCMessage msg)
  void Save(SaveInfo info)
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  bool ClearRadioByUserId(ulong id)
  void HurtCallback(float amount)
  void OnHeldChanged()
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: HeldEntity
Наследуется от: BaseEntity
Поля:
  Animator worldModelAnimator
  SoundDefinition thirdPersonDeploySound
  SoundDefinition thirdPersonAimSound
  SoundDefinition thirdPersonAimEndSound
  Flags Flag_ForceVisible
  string handBone
  AnimatorOverrideController HoldAnimationOverride
  bool isBuildingTool
  float hostileScore
  HolsterInfo holsterInfo
  CameraMode HeldCameraMode
  Vector3 FirstPersonArmOffset
  Vector3 FirstPersonArmRotation
  float FirstPersonRotationStrength
  bool holsterVisible
  bool genericVisible
  heldEntityVisState currentVisState
  TimeSince lastHeldEvent
  ItemId ownerItemUID
  Item cachedItem
Свойства:
  bool hostile
  Transform MuzzleTransform
  bool IsUsableByTurret
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_hostile()
  Transform get_MuzzleTransform()
  bool LightsOn()
  bool IsDeployed()
  BasePlayer GetOwnerPlayer()
  Connection GetOwnerConnection()
  void SetOwnerPlayer(BasePlayer player)
  void ClearOwnerPlayer()
  void SetVisibleWhileHolstered(bool visible)
  void SetGenericVisible(bool wantsVis)
  UInt32 GetBone(string bone)
  void SetLightsOn(bool isOn)
  void UpdateHeldItemVisibility()
  bool UpdateVisibility_Hand()
  bool UpdateVisibility_GenericVis()
  bool UpdateVisiblity_Holster()
  bool UpdateVisiblity_Invis()
  void SetHeld(bool bHeld)
  void OnHeldChanged()
  bool get_IsUsableByTurret()
  bool CanBeUsedInWater()
  bool BlocksGestures()
  Item GetOwnerItem()
  Item GetItem()
  ItemDefinition GetOwnerItemDefinition()
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void ReturnedFromCancelledCraft(Item item, BasePlayer crafter)
  void ServerCommand(Item item, string command, BasePlayer player)
  void SetupHeldEntity(Item item)
  Item GetCachedItem()
  void OnItemChanged(Item item)
  void PostServerLoad()
  void InitOwnerPlayer()
  void Save(SaveInfo info)
  void DestroyThis()
  bool HasItemAmount()
  bool UseItemAmount(int iAmount)
  void ServerUse()
  void ServerUse(float damageModifier, Transform originOverride)
  bool IsInstrument()
  void Load(LoadInfo info)
  void SendPunch(Vector3 amount, float duration)
  void .ctor()
--------------------------------------------------
Класс: HotAirBalloon
Наследуется от: BaseCombatEntity
Поля:
  Flags Flag_HasFuel
  Flags Flag_Grounded
  Flags Flag_CanModifyEquipment
  Flags Flag_HalfInflated
  Flags Flag_FullInflated
  Flags Flag_OnlyOwnerEntry
  Transform centerOfMass
  Rigidbody myRigidbody
  Transform buoyancyPoint
  float liftAmount
  Transform windSock
  Transform[] windFlags
  GameObject staticBalloonDeflated
  GameObject staticBalloon
  GameObject animatedBalloon
  Animator balloonAnimator
  Transform groundSample
  float inflationLevel
  GameObjectRef fuelStoragePrefab
  float fuelPerSec
  GameObjectRef storageUnitPrefab
  EntityRef`1<StorageContainer> storageUnitInstance
  DamageRenderer damageRenderer
  Transform engineHeight
  GameObject[] killTriggers
  List`1<UpgradeOption> UpgradeOptions
  EntityFuelSystem fuelSystem
  float population
  float outsidedecayminutes
  float NextUpgradeTime
  float windForce
  Vector3 currentWindVec
  Bounds collapsedBounds
  Bounds raisedBounds
  GameObject[] balloonColliders
  float serviceCeiling
  Vector3 lastFailedDecayPosition
  float currentBuoyancy
  float lastBlastTime
  float avgTerrainHeight
  bool grounded
  float spawnTime
  float safeAreaRadius
  Vector3 safeAreaOrigin
Свойства:
  bool IsFullyInflated
  bool Grounded
  SamTargetType SAMTargetType
  bool IsClient
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_IsFullyInflated()
  void InitShared()
  bool get_Grounded()
  void Load(LoadInfo info)
  bool CanModifyEquipment()
  void DelayNextUpgrade(float delay)
  int GetEquipmentCount(ItemModHABEquipment item)
  void RemoveItemsOfType(ItemModHABEquipment item)
  bool WaterLogged()
  bool OnlyOwnerAccessible()
  SamTargetType get_SAMTargetType()
  bool get_IsClient()
  void OnAttacked(HitInfo info)
  void OnChildAdded(BaseEntity child)
  void OnChildRemoved(BaseEntity child)
  void DoServerDestroy()
  bool IsValidSAMTarget(bool staticRespawn)
  float GetNetworkTime()
  void PostServerLoad()
  void RPC_OpenFuel(RPCMessage msg)
  void Save(SaveInfo info)
  void ServerInit()
  void DecayTick()
  void EngineSwitch(RPCMessage msg)
  void ScheduleOff()
  void UpdateIsGrounded()
  void OnFlagsChanged(Flags old, Flags next)
  void CheckGlobal(Flags flags)
  void FixedUpdate()
  Vector3 GetLocalVelocityServer()
  Quaternion GetAngularVelocityServer()
  void ClearOwnerEntry()
  bool IsSafe()
  void SetupOwner(BasePlayer owner, Vector3 newSafeAreaOrigin, float newSafeAreaRadius)
  bool IsDespawnEligable()
  EntityFuelSystem GetFuelSystem()
  int StartingFuelUnits()
  Vector3 GetWindAtPos(Vector3 pos)
  bool PlayerHasEquipmentItem(BasePlayer player, int tokenItemID)
  Item GetEquipmentItem(BasePlayer player, int tokenItemID)
  float MaxHealth()
  List`1<ItemAmount> BuildCost()
  void RPC_ReqEquipItem(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HuntingTrophy
Наследуется от: StorageContainer
Поля:
  HeadData CurrentTrophyData
  PlayerModel Player
  GameObject MaleRope
  GameObject FemaleRope
  Renderer[] HorseRenderers
  Renderer[] HorseHairRenderers
  UInt32 HORSE_PREFAB_ID
  GameObject NameRoot
  RustText NameText
  TrophyRoot[] Trophies
Свойства:
  HeadData TrophyData
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  HeadData get_TrophyData()
  bool ItemFilter(Item item, int targetSlot)
  void ServerRequestSubmit()
  void ServerRequestClear()
  void Save(SaveInfo info)
  bool CanSubmitHead(HeadEntity headEnt)
  void Load(LoadInfo info)
  void ResetState()
  void .ctor()
  GameObject <CanSubmitHead>g__GetCurrentTrophyDataSource|18_0()
--------------------------------------------------
Класс: ImageStorageEntity
Наследуется от: BaseEntity
Поля:
  List`1<ImageRequest> _requests
Свойства:
  Type StorageType
  UInt32 CrcToLoad
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Type get_StorageType()
  UInt32 get_CrcToLoad()
  void ImageRequested(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: IndustrialConveyor
Наследуется от: IndustrialEntity
Поля:
  int MaxStackSizePerMove
  GameObjectRef FilterDialog
  float ScreenUpdateRange
  Flags FilterPassFlag
  Flags FilterFailFlag
  int MaxContainerDepth
  SoundDefinition transferItemSoundDef
  SoundDefinition transferItemStartSoundDef
  List`1<ItemFilter> filterItems
  ConveyorMode mode
  int MAX_FILTER_SIZE
  Image IconTransferImage
  bool refreshInputOutputs
  IIndustrialStorage workerOutput
  Func`3<IIndustrialStorage, int, bool> filterFunc
  List`1<ContainerInputOutput> splitOutputs
  List`1<ContainerInputOutput> splitInputs
  Nullable`1<bool> lastFilterState
  Stopwatch transferStopWatch
  bool wasOnWhenPowerLost
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void OnFlagsChanged(Flags old, Flags next)
  void ScheduleMove()
  Item GetItemToMove(IIndustrialStorage storage, ItemFilter& associatedFilter, int slot, ItemContainer targetContainer)
  bool FilterHasItem(Item item, ValueTuple`2& filter)
  bool FilterMatches(ItemFilter filter, Item item)
  bool FilterContainerInput(IIndustrialStorage storage, int slot)
  void RunJob()
  void OnIndustrialNetworkChanged()
  void PostServerLoad()
  bool CheckIfAnyInputPassesFilters(List`1<ContainerInputOutput> inputs)
  void Save(SaveInfo info)
  void RPC_ChangeFilters(RPCMessage msg)
  void SvSwitch(RPCMessage msg)
  void SetSwitch(bool wantsOn)
  void Unbusy()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  int GetPassthroughAmount(int outputSlot)
  bool ShouldDrainBattery(IOEntity battery)
  void Server_RequestUpToDateFilters(RPCMessage msg)
  void Load(LoadInfo info)
  void .ctor()
  bool <RunJob>g__FilterMatchItem|28_1(ItemFilter filter, Item item)
  void <RunJob>g__AddTransfer|28_2(int itemId, int amount, BaseEntity fromEntity, BaseEntity toEntity, <>c__DisplayClass28_1& )
  void <RunJob>g__UpdateFilterPassthroughs|28_0(<>c__DisplayClass28_0& )
--------------------------------------------------
Класс: IndustrialCrafter
Наследуется от: IndustrialEntity
Поля:
  string LootPanelName
  bool NeedsBuildingPrivilegeToUse
  bool OnlyOneUser
  SoundDefinition ContainerOpenSound
  SoundDefinition ContainerCloseSound
  AnimationCurve MaterialOffsetCurve
  Flags Crafting
  Flags FullOutput
  Renderer[] MeshRenderers
  ParticleSystemContainer JobCompleteFx
  SoundDefinition JobCompleteSoundDef
  TimeUntilWithDuration <jobFinishes>k__BackingField
  int BlueprintSlotStart
  int BlueprintSlotEnd
  ItemContainer <inventory>k__BackingField
  bool <DropFloats>k__BackingField
  ulong <LastLootedBy>k__BackingField
  ItemDefinition currentlyCrafting
  int currentlyCraftingAmount
  int StorageSize
  int InputSlotStart
  int InputSlotEnd
  int OutputSlotStart
  int OutputSlotEnd
Свойства:
  TimeUntilWithDuration jobFinishes
  ItemContainer inventory
  Transform Transform
  bool DropsLoot
  float DestroyLootPercent
  bool DropFloats
  ulong LastLootedBy
  ItemContainer Container
  BaseEntity IndustrialEntity
  Phrase LootPanelTitle
  SoundDefinition OpenSound
  SoundDefinition CloseSound
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  TimeUntilWithDuration get_jobFinishes()
  void set_jobFinishes(TimeUntilWithDuration value)
  void OnFlagsChanged(Flags old, Flags next)
  ItemContainer get_inventory()
  void set_inventory(ItemContainer value)
  Transform get_Transform()
  bool get_DropsLoot()
  float get_DestroyLootPercent()
  bool get_DropFloats()
  ulong get_LastLootedBy()
  void set_LastLootedBy(ulong value)
  void OnKilled(HitInfo info)
  void DropItems(BaseEntity initiator)
  bool ShouldDropItemsIndividually()
  void DropBonusItems(BaseEntity initiator, ItemContainer container)
  void RPC_OpenLoot(RPCMessage rpc)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void PlayerStoppedLooting(BasePlayer player)
  void ServerInit()
  void CreateInventory(bool giveUID)
  bool CanAcceptItem(Item item, int index)
  void CheckCraft()
  Item GetTargetBlueprint(int index)
  void RunJob()
  void CompleteCraft()
  int GetInputAmount(ItemDefinition def)
  bool ConsumeInputIngredient(ItemAmount am)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  ItemContainer get_Container()
  Vector2i InputSlotRange(int slotIndex)
  Vector2i OutputSlotRange(int slotIndex)
  void OnStorageItemTransferBegin()
  void OnStorageItemTransferEnd()
  BaseEntity get_IndustrialEntity()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  void SetSwitch(bool wantsOn)
  void Unbusy()
  void SvSwitch(RPCMessage msg)
  bool CanPickup(BasePlayer player)
  int GetIdealSlot(BasePlayer player, Item item)
  ItemContainerId GetIdealContainer(BasePlayer player, Item item, bool altMove)
  Phrase get_LootPanelTitle()
  SoundDefinition get_OpenSound()
  SoundDefinition get_CloseSound()
  Workbench GetWorkbench()
  void .ctor()
--------------------------------------------------
Класс: InstantCameraTool
Наследуется от: HeldEntity
Поля:
  ItemDefinition photoItem
  GameObjectRef screenshotEffect
  SoundDefinition startPhotoSoundDef
  SoundDefinition finishPhotoSoundDef
  int resolutionX
  int resolutionY
  int quality
  float cooldownSeconds
  TimeSince _sinceLastPhoto
  bool hasSentAchievement
  string PhotographPlayerAchievement
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void TakePhoto(RPCMessage msg)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void .ctor()
--------------------------------------------------
Класс: InstrumentTool
Наследуется от: HeldEntity
Поля:
  InstrumentKeyController KeyController
  SoundDefinition DeploySound
  Vector2 PitchClamp
  bool UseAnimationSlotEvents
  Transform MuzzleT
  bool UsableByAutoTurrets
  NoteData lastPlayedTurretData
Свойства:
  Transform MuzzleTransform
  bool IsUsableByTurret
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Transform get_MuzzleTransform()
  void Server_PlayNote(RPCMessage msg)
  void Server_StopNote(RPCMessage msg)
  void ServerUse()
  void StopAfterTime()
  bool get_IsUsableByTurret()
  bool IsInstrument()
  void .ctor()
--------------------------------------------------
Класс: IOEntity
Наследуется от: DecayEntity
Поля:
  Transform debugOrigin
  ItemDefinition sourceItem
  int lastResetIndex
  float framebudgetms
  float responsetime
  int backtracking
  bool debugBudget
  float debugBudgetThreshold
  Flags Flag_ShortCircuit
  Flags Flag_HasPower
  IOSlot[] inputs
  IOSlot[] outputs
  IOType ioType
  Queue`1<IOEntity> _processQueue
  List`1<FrameTiming> timings
  int cachedOutputsUsed
  int lastPassthroughEnergy
  int lastEnergy
  int currentEnergy
  float lastUpdateTime
  int lastUpdateBlockedFrame
  bool ensureOutputsUpdated
  int MaxContainerSourceCount
  List`1<Collider> spawnedColliders
Свойства:
  bool IsGravitySource
  bool HasBlockedUpdatedOutputsThisFrame
  bool BlockFluidDraining
  float LiquidPassthroughGravityThreshold
  bool DisregardGravityRestrictionsOnLiquid
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  string GetDisplayName()
  bool IsRootEntity()
  bool get_IsGravitySource()
  IOEntity FindGravitySource(Vector3& worldHandlePosition, int depth, bool ignoreSelf)
  void SetFuelType(ItemDefinition def, IOEntity source)
  bool WantsPower()
  bool AllowWireConnections()
  bool WantsPassthroughPower()
  int ConsumptionAmount()
  bool ShouldDrainBattery(IOEntity battery)
  int MaximalPowerOutput()
  bool AllowDrainFrom(int outputSlot)
  bool IsPowered()
  bool IsConnectedToAnySlot(IOEntity entity, int slot, int depth, bool defaultReturn)
  bool IsConnectedTo(IOEntity entity, int slot, int depth, bool defaultReturn)
  bool IsConnectedTo(IOEntity entity, int depth, bool defaultReturn)
  bool ConsiderConnectedTo(IOEntity entity)
  void Server_RequestData(RPCMessage msg)
  void SendAdditionalData(BasePlayer player, int slot, bool input)
  int GetPassthroughAmountForAnySlot(int slot, bool isInputSlot)
  void ProcessQueue()
  void ResetIOState()
  void Init()
  void DoServerDestroy()
  void ClearConnections()
  void Shutdown()
  void MarkDirtyForceUpdateOutputs()
  void UpdateUsedOutputs()
  void MarkDirty()
  int DesiredPower()
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  int GetCurrentEnergy()
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void TouchInternal()
  void UpdateFromInput(int inputAmount, int inputSlot)
  void TouchIOState()
  void SendIONetworkUpdate()
  void IOStateChanged(int inputAmount, int inputSlot)
  void OnCircuitChanged(bool forceUpdate)
  void SendChangedToRoot(bool forceUpdate)
  void SendChangedToRootRecursive(bool forceUpdate, List`1& existing)
  void NotifyIndustrialNetworkChanged()
  void NotifyIndustrialNetworkChanged(List`1<IOEntity> existing, bool input, int maxDepth)
  void OnIndustrialNetworkChanged()
  bool ShouldUpdateOutputs()
  bool get_HasBlockedUpdatedOutputsThisFrame()
  void UpdateOutputs()
  void Spawn()
  void PostServerLoad()
  void PostMapEntitySpawn()
  void Save(SaveInfo info)
  float IOInput(IOEntity from, IOType inputType, float inputAmount, int slot)
  bool get_BlockFluidDraining()
  void FindContainerSource(List`1<ContainerInputOutput> found, int depth, bool input, List`1<IOEntity> ignoreList, int parentId, int stackSize)
  float get_LiquidPassthroughGravityThreshold()
  bool get_DisregardGravityRestrictionsOnLiquid()
  bool AllowLiquidPassthrough(IOEntity fromSource, Vector3 sourceWorldPosition, bool forPlacement)
  void Load(LoadInfo info)
  int GetConnectedInputCount()
  int GetConnectedOutputCount()
  bool HasConnections()
  void DestroyShared()
  void RefreshIndustrialPreventBuilding()
  void ClearIndustrialPreventBuilding()
  void .ctor()
  void .cctor()
  int <FindContainerSource>g__GetExistingCount|87_0(IIndustrialStorage storage, <>c__DisplayClass87_0& )
--------------------------------------------------
Класс: ItemBasedFlowRestrictor
Наследуется от: IOEntity
Поля:
  ItemDefinition passthroughItem
  ContentsType allowedContents
  int maxStackSize
  int numSlots
  string lootPanelName
  Flags HasPassthrough
  Flags Sparks
  float passthroughItemConditionLossPerSec
  SoundDefinition openSound
  SoundDefinition closeSound
  ItemContainer inventory
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  bool HasPassthroughItem()
  void TickPassthroughItem()
  void ServerInit()
  void PreServerLoad()
  void CreateInventory(bool giveUID)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void OnInventoryFirstCreated(ItemContainer container)
  void OnItemAddedOrRemoved(Item item, bool added)
  void RPC_OpenLoot(RPCMessage rpc)
  void PlayerStoppedLooting(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: Jackhammer
Наследуется от: BaseMelee
Поля:
  float HotspotBonusScale
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool HasAmmo()
  void Server_SetEngineStatus(RPCMessage msg)
  void SetEngineStatus(bool on)
  void SetHeld(bool bHeld)
  void .ctor()
--------------------------------------------------
Класс: JunkPile
Наследуется от: BaseEntity
Поля:
  GameObjectRef sinkEffect
  SpawnGroup[] spawngroups
  NPCSpawner NPCSpawn
  float lifetimeMinutes
  bool isSinking
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void SpawnInitial()
  bool SpawnGroupsEmpty()
  void CheckEmpty()
  float TimeoutPlayerCheckRadius()
  void TimeOut()
  void SinkAndDestroy()
  void KillMe()
  void .ctor()
--------------------------------------------------
Класс: Kayak
Наследуется от: BaseBoat
Поля:
  ItemDefinition OarItem
  float maxPaddleFrequency
  float forwardPaddleForce
  float multiDriverPaddleForceMultiplier
  float rotatePaddleForce
  GameObjectRef forwardSplashEffect
  GameObjectRef backSplashEffect
  ParticleSystem moveSplashEffect
  float animationLerpSpeed
  BlendedSoundLoops waterLoops
  float waterSoundSpeedDivisor
  GameObjectRef pushLandEffect
  GameObjectRef pushWaterEffect
  MountPoses noPaddlePose
  TimeSince[] playerPaddleCooldowns
  TimeCachedValue`1<float> fixedDragUpdate
  TimeSince timeSinceLastUsed
  float DECAY_TICK_TIME
  Vector3 lastTravelPos
  float distanceRemainder
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void OnPlayerMounted()
  void OnPlayerDismounted(BasePlayer player)
  void DriverInput(InputState inputState, BasePlayer player)
  void TravelDistanceUpdate()
  bool EngineOn()
  void DoPushAction(BasePlayer player)
  void VehicleFixedUpdate()
  float CalculateDesiredDrag()
  void BoatDecay()
  bool CanPickup(BasePlayer player)
  bool IsPlayerHoldingPaddle(BasePlayer player)
  Vector3 GetPaddlePoint(int index, PaddleDirection direction)
  bool IsInWater()
  void .ctor()
--------------------------------------------------
Класс: KeyLock
Наследуется от: BaseLock
Поля:
  ItemDefinition keyItemType
  int keyCode
  bool firstKeyCreated
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool HasLockPermission(BasePlayer player)
  bool CanKeyUnlockUs(Item key)
  void Load(LoadInfo info)
  bool ShouldNetworkOwnerInfo()
  void PostServerLoad()
  void Save(SaveInfo info)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  bool OnTryToOpen(BasePlayer player)
  bool OnTryToClose(BasePlayer player)
  void RPC_Unlock(RPCMessage rpc)
  void RPC_Lock(RPCMessage rpc)
  void Lock(BasePlayer player)
  void RPC_CreateKey(RPCMessage rpc)
  void LockLock(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: Landmine
Наследуется от: BaseTrap
Поля:
  GameObjectRef explosionEffect
  GameObjectRef triggeredEffect
  float minExplosionRadius
  float explosionRadius
  bool blocked
  ulong triggerPlayerID
  List`1<DamageTypeEntry> damageTypes
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool Triggered()
  bool Armed()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void ServerInit()
  void ObjectEntered(GameObject obj)
  void Trigger(BasePlayer ply)
  void OnEmpty()
  void Explode()
  void OnKilled(HitInfo info)
  void OnGroundMissing()
  void TryExplode()
  void Arm()
  void RPC_Disarm(RPCMessage rpc)
  void .ctor()
--------------------------------------------------
Класс: Lift
Наследуется от: AnimatedBuildingBlock
Поля:
  GameObjectRef triggerPrefab
  string triggerBone
  float resetDelay
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void RPC_UseLift(RPCMessage rpc)
  void MoveUp()
  void MoveDown()
  void OnAnimatorDisabled()
  void Spawn()
  void .ctor()
--------------------------------------------------
Класс: LiquidContainer
Наследуется от: ContainerIOEntity
Поля:
  ItemDefinition defaultLiquid
  int startingAmount
  bool autofillOutputs
  float autofillTickRate
  int autofillTickAmount
  int maxOutputFlow
  ItemDefinition[] ValidItems
  int currentDrainAmount
  HashSet`1<IOEntity> connectedList
  HashSet`1<ContainerIOEntity> pushTargets
  int maxPushTargets
  IOEntity considerConnectedTo
  Action updateDrainAmountAction
  Action updatePushLiquidTargetsAction
  Action pushLiquidAction
  Action deductFuelAction
  TimeUntil waterTransferStartTime
  float lastOutputDrainUpdate
Свойства:
  bool IsGravitySource
  bool DisregardGravityRestrictionsOnLiquid
  bool BlockFluidDraining
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_IsGravitySource()
  bool get_DisregardGravityRestrictionsOnLiquid()
  bool AllowWireConnections()
  bool IsRootEntity()
  bool CanAcceptItem(Item item, int count)
  void ServerInit()
  void OnCircuitChanged(bool forceUpdate)
  void OnItemAddedOrRemoved(Item item, bool added)
  void ClearDrains()
  int GetCurrentEnergy()
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  void UpdateDrainAmount()
  bool get_BlockFluidDraining()
  void CalculateDrain(IOEntity ent, Vector3 fromSlotWorld, int depth, Int32& amount, IOEntity lastEntity, ItemDefinition waterType)
  void UpdateOutputs()
  void DeductFuel()
  void UpdateOnFlag()
  void OpenTap(float duration)
  void ShutTap()
  bool HasLiquidItem()
  Item GetLiquidItem()
  int GetLiquidCount()
  void SVDrink(RPCMessage rpc)
  void UpdatePushLiquidTargets()
  void PushLiquidThroughOutputs()
  void CheckPushLiquid(IOEntity connected, Item ourFuel, IOEntity fromSource, int depth)
  void SetConnectedTo(IOEntity entity)
  bool ConsiderConnectedTo(IOEntity entity)
  void .ctor()
--------------------------------------------------
Класс: LiquidVessel
Наследуется от: HeldEntity
Поля:
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool CanDrink()
  void DoEmpty(RPCMessage msg)
  void AddLiquid(ItemDefinition liquidType, int amount)
  bool CanFillHere(Vector3 pos)
  int AmountHeld()
  float HeldFraction()
  bool IsFull()
  int MaxHoldable()
  void .ctor()
--------------------------------------------------
Класс: LiquidWeapon
Наследуется от: BaseLiquidVessel
Поля:
  float FireRate
  float MaxRange
  int FireAmountML
  int MaxPressure
  int PressureLossPerTick
  int PressureGainedPerPump
  float MinDmgRadius
  float MaxDmgRadius
  float SplashRadius
  GameObjectRef ImpactSplashEffect
  AnimationCurve PowerCurve
  List`1<DamageTypeEntry> Damage
  LiquidWeaponEffects EntityWeaponEffects
  bool RequiresPumping
  bool AutoPump
  bool WaitForFillAnim
  bool UseFalloffCurve
  AnimationCurve FalloffCurve
  float PumpingBlockDuration
  float StartFillingBlockDuration
  float StopFillingBlockDuration
  float cooldownTime
  int pressure
  string RadiationFightAchievement
  string SoakedAchievement
  string LiquidatorAchievement
  string NoPressureAchievement
Свойства:
  float PressureFraction
  float MinimumPressureFraction
  float CurrentRange
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void StartFiring(RPCMessage msg)
  void StopFiring()
  bool CanFire(BasePlayer player)
  void PumpWater(RPCMessage msg)
  void PumpWater()
  void FireTick()
  void DoSplash(BasePlayer attacker, Vector3 position, Vector3 direction, int amount)
  void OnHeldChanged()
  float get_PressureFraction()
  float get_MinimumPressureFraction()
  float get_CurrentRange()
  void StartCooldown(float duration)
  bool OnCooldown()
  bool Firing()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: Locker
Наследуется от: StorageContainer
Поля:
  GameObjectRef equipSound
  int maxGearSets
  int attireSize
  int beltSize
  int columnSize
  int backpackSlotIndex
  Item[] clothingBuffer
  int setSize
  bool isTransferringIndustrialItem
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsEquipping()
  RowType GetRowType(int slot)
  void ServerInit()
  void ClearEquipping()
  void OnIndustrialItemTransferBegin()
  void OnIndustrialItemTransferEnd()
  bool ItemFilter(Item item, int targetSlot)
  bool IsBackpackSlot(int slot)
  void RPC_Equip(RPCMessage msg)
  int GetIdealSlot(BasePlayer player, Item item)
  bool DoesWearableConflictWithRow(Item item, int pos)
  Vector2i GetIndustrialSlotRange(Vector3 localPosition)
  bool SupportsChildDeployables()
  bool CanPickup(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: LootableCorpse
Наследуется от: BaseCorpse
Поля:
  string lootPanelName
  ulong playerSteamID
  string _playerName
  string <streamerName>k__BackingField
  bool <blockBagDrop>k__BackingField
  ItemContainer[] containers
  bool firstLooted
Свойства:
  string playerName
  string streamerName
  Phrase LootPanelTitle
  Phrase LootPanelName
  bool blockBagDrop
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  string get_playerName()
  void set_playerName(string value)
  string get_streamerName()
  void set_streamerName(string value)
  Phrase get_LootPanelTitle()
  Phrase get_LootPanelName()
  void ResetState()
  bool get_blockBagDrop()
  void set_blockBagDrop(bool value)
  void ServerInit()
  void DoServerDestroy()
  void TakeFrom(BaseEntity fromEntity, ItemContainer[] source)
  bool CanRemove()
  bool CanLoot()
  bool OnStartBeingLooted(BasePlayer baseEntity)
  bool CanLootContainer(ItemContainer c, int index)
  void RPC_LootCorpse(RPCMessage rpc)
  void PlayerStoppedLooting(BasePlayer player)
  void PreDropItems()
  void DropItems()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: MagnetCrane
Наследуется от: GroundVehicle
Поля:
  Animator animator
  Transform COM
  float arm1Speed
  float arm2Speed
  float turnYawSpeed
  BaseMagnet Magnet
  MagnetCraneAudio mcAudio
  Rigidbody myRigidbody
  Transform[] collisionTestingPoints
  float maxDistanceFromOrigin
  GameObjectRef selfDamageEffect
  GameObjectRef explosionEffect
  Transform explosionPoint
  CapsuleCollider driverCollision
  Transform leftHandTarget
  Transform rightHandTarget
  Transform leftFootTarget
  Transform rightFootTarget
  float idleFuelPerSec
  float maxFuelPerSec
  GameObject[] OnTriggers
  TriggerHurtEx magnetDamage
  int engineKW
  CarWheel[] wheels
  CarSettings carSettings
  ParticleSystem exhaustInner
  ParticleSystem exhaustOuter
  EmissionToggle lightToggle
  Phrase ReturnMessage
  Flags Flag_ArmMovement
  Flags Flag_BaseMovementInput
  int leftTreadParam
  int rightTreadParam
  int yawParam
  int arm1Param
  int arm2Param
  float steerInput
  float throttleInput
  float brakeInput
  float yawInput
  float extensionInput
  float raiseArmInput
  float extensionMove
  float yawMove
  float raiseArmMove
  float nextToggleTime
  Vector3 spawnOrigin
  float lastExtensionArmState
  float lastRaiseArmState
  float lastYawState
  bool handbrakeOn
  float nextSelfHealTime
  Vector3 lastDamagePos
  float lastDrivenTime
  float lastFixedUpdateTime
  CarPhysics`1<MagnetCrane> carPhysics
  VehicleTerrainHandler serverTerrainHandler
  Vector3 customInertiaTensor
  float extensionArmState
  float raiseArmState
  float yawState
Свойства:
  float DriveWheelVelocity
  Surface OnSurface
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_DriveWheelVelocity()
  float GetThrottleInput()
  float GetBrakeInput()
  void Load(LoadInfo info)
  float GetMaxForwardSpeed()
  bool CanBeLooted(BasePlayer player)
  Surface get_OnSurface()
  void ServerInit()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  float MaxVelocity()
  float GetSteerInput()
  bool GetSteerModInput()
  void OnEngineStartFailed()
  bool MeetsEngineRequirements()
  void VehicleFixedUpdate()
  void Save(SaveInfo info)
  void UpdateParams()
  void LateUpdate()
  void OnAttacked(HitInfo info)
  void OnKilled(HitInfo info)
  bool IsColliding()
  float GetMaxDriveForce()
  float GetAdjustedDriveForce(float absSpeed, float topSpeed)
  CarWheel[] GetWheels()
  float GetWheelsMidPos()
  void UpdateAnimator(float dt)
  void RPC_OpenFuel(RPCMessage msg)
  void .ctor()
  void .cctor()
  float <VehicleFixedUpdate>g__UpdateMoveInput|78_0(float input, float move, float slowRate, float dt)
--------------------------------------------------
Класс: Mailbox
Наследуется от: StorageContainer
Поля:
  string ownerPanel
  GameObjectRef mailDropSound
  ItemDefinition[] allowedItems
  bool autoSubmitWhenClosed
  bool shouldMarkAsFull
Свойства:
  int mailInputSlot
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int get_mailInputSlot()
  bool PlayerIsOwner(BasePlayer player)
  bool IsFull()
  void MarkFull(bool full)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  bool CanOpenLootPanel(BasePlayer player, string panelName)
  bool HasFreeSpace()
  int GetFreeSlot()
  bool MoveItemToStorage(Item item)
  void PlayerStoppedLooting(BasePlayer player)
  void RPC_Submit(RPCMessage msg)
  void SubmitInputItems(BasePlayer fromPlayer)
  void OnItemAddedOrRemoved(Item item, bool added)
  bool CanMoveFrom(BasePlayer player, Item item)
  bool ItemFilter(Item item, int targetSlot)
  int GetIdealSlot(BasePlayer player, Item item)
  void .ctor()
--------------------------------------------------
Класс: MapEntity
Наследуется от: HeldEntity
Поля:
  UInt32[] fogImages
  UInt32[] paintImages
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void ImageUpdate(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: MapMarkerGenericRadius
Наследуется от: MapMarker
Поля:
  float radius
  Color color1
  Color color2
  float alpha
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void SendUpdate(bool fullUpdate)
  AppMarker GetAppMarkerData()
  void .ctor()
--------------------------------------------------
Класс: MarketTerminal
Наследуется от: StorageContainer
Поля:
  Flags Flag_HasItems
  Flags Flag_InventoryFull
  GameObjectRef menuPrefab
  ulong lockToCustomerDuration
  ulong orderTimeout
  ItemDefinition deliveryFeeCurrency
  int deliveryFeeAmount
  DeliveryDroneConfig config
  RustText userLabel
  ulong _customerSteamId
  string _customerName
  TimeUntil _timeUntilCustomerExpiry
  EntityRef`1<Marketplace> _marketplace
  List`1<PendingOrder> pendingOrders
  Action`2<BasePlayer, Item> _onCurrencyRemovedCached
  Action`2<BasePlayer, Item> _onItemPurchasedCached
  Action _checkForExpiredOrdersCached
  bool _transactionActive
  List`1<NetworkableId> _deliveryEligible
  RealTimeSince _deliveryEligibleLastCalculated
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool CanPlayerAffordOrderAndDeliveryFee(BasePlayer player, SellOrder sellOrder, int numberOfTransactions)
  bool HasPendingOrderFor(NetworkableId vendingMachineId)
  bool CanPlayerInteract(BasePlayer player)
  void Load(LoadInfo info)
  void Setup(Marketplace marketplace)
  void ServerInit()
  void RegisterOrder(BasePlayer player, VendingMachine vendingMachine)
  void CompleteOrder(NetworkableId vendingMachineId)
  void CheckForExpiredOrders()
  void RestrictToPlayer(BasePlayer player)
  void ClearRestriction()
  void Server_TryOpenMarket(RPCMessage msg)
  void Server_Purchase(RPCMessage msg)
  void UpdateHasItems(bool sendNetworkUpdate)
  void OnCurrencyRemoved(BasePlayer player, Item currencyItem)
  void OnItemPurchased(BasePlayer player, Item purchasedItem)
  void Save(SaveInfo info)
  bool ItemFilter(Item item, int targetSlot)
  void OnItemAddedOrRemoved(Item item, bool added)
  bool CanOpenLootPanel(BasePlayer player, string panelName)
  void RemoveAnyLooters()
  void GetDeliveryEligibleVendingMachines(List`1<NetworkableId> vendingMachineIds)
  void .ctor()
  void .cctor()
  bool <GetDeliveryEligibleVendingMachines>g__IsEligible|42_0(VendingMachine vendingMachine, Vector3 offset, int n)
--------------------------------------------------
Класс: MedicalTool
Наследуется от: AttackEntity
Поля:
  float healDurationSelf
  float healDurationOther
  float healDurationOtherWounded
  float maxDistanceOther
  bool canUseOnOther
  bool canRevive
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void UseOther(RPCMessage msg)
  void UseSelf(RPCMessage msg)
  void ServerUse()
  void GiveEffectsTo(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: Megaphone
Наследуется от: HeldEntity
Поля:
  VoiceProcessor voiceProcessor
  float VoiceDamageMinFrequency
  float VoiceDamageAmount
  AudioSource VoiceSource
  SoundDefinition StartBroadcastingSfx
  SoundDefinition StopBroadcastingSfx
  float <MegaphoneVoiceRange>k__BackingField
Свойства:
  float MegaphoneVoiceRange
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_MegaphoneVoiceRange()
  void set_MegaphoneVoiceRange(float value)
  void UpdateItemCondition()
  void Server_ToggleBroadcasting(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MicrophoneStand
Наследуется от: BaseMountable
Поля:
  VoiceProcessor VoiceProcessor
  AudioSource VoiceSource
  SpeechMode currentSpeechMode
  AudioMixerGroup NormalMix
  AudioMixerGroup HighPitchMix
  AudioMixerGroup LowPitchMix
  Phrase NormalPhrase
  Phrase NormalDescPhrase
  Phrase HighPitchPhrase
  Phrase HighPitchDescPhrase
  Phrase LowPitchPhrase
  Phrase LowPitchDescPhrase
  GameObjectRef IOSubEntity
  Transform IOSubEntitySpawnPos
  bool IsStatic
  EntityRef`1<IOEntity> ioEntity
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void SetMode(RPCMessage msg)
  void Save(SaveInfo info)
  void SpawnChildEntity()
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void PostMapEntitySpawn()
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: MixingTable
Наследуется от: StorageContainer
Поля:
  GameObject Particles
  RecipeList Recipes
  bool OnlyAcceptValidIngredients
  float <RemainingMixTime>k__BackingField
  float <TotalMixTime>k__BackingField
  float lastTickTimestamp
  List`1<Item> inventoryItems
  BasePlayer <MixStartingPlayer>k__BackingField
  float mixTickInterval
  Recipe currentRecipe
  int currentQuantity
  ItemDefinition currentProductionItem
Свойства:
  float RemainingMixTime
  float TotalMixTime
  BasePlayer MixStartingPlayer
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_RemainingMixTime()
  void set_RemainingMixTime(float value)
  float get_TotalMixTime()
  void set_TotalMixTime(float value)
  BasePlayer get_MixStartingPlayer()
  void set_MixStartingPlayer(BasePlayer value)
  void ServerInit()
  bool CanAcceptItem(Item item, int targetSlot)
  void OnInventoryDirty()
  void SVSwitch(RPCMessage msg)
  void StartMixing(BasePlayer player)
  bool CanStartMixing(BasePlayer player)
  void StopMixing()
  void TickMix()
  void ProduceItem(Recipe recipe, int quantity)
  void ConsumeInventory(Recipe recipe, int quantity)
  void ReturnExcessItems(List`1<Item> orderedContainerItems, BasePlayer player)
  void CreateRecipeItems(Recipe recipe, int quantity)
  void Save(SaveInfo info)
  int GetItemWaterAmount(Item item)
  void Load(LoadInfo info)
  List`1<Item> GetOrderedContainerItems(ItemContainer container, Boolean& itemsAreContiguous)
  void .ctor()
--------------------------------------------------
Класс: MLRS
Наследуется от: BaseMountable
Поля:
  GameObjectRef rocketStoragePrefab
  GameObjectRef dashboardStoragePrefab
  Transform hRotator
  float hRotSpeed
  Transform vRotator
  float vRotSpeed
  float vRotMax
  Transform hydraulics
  float minRange
  float targetAreaRadius
  GameObjectRef mlrsRocket
  Transform firingPoint
  RocketTube[] rocketTubes
  GameObject screensChild
  Transform leftHandGrip
  Transform leftJoystick
  Transform rightHandGrip
  Transform rightJoystick
  Transform controlKnobHeight
  Transform controlKnobAngle
  GameObjectRef uiDialogPrefab
  Light fireButtonLight
  GameObject brokenDownEffect
  ParticleSystem topScreenShutdown
  ParticleSystem bottomScreenShutdown
  float brokenDownMinutes
  Vector3 <UserTargetHitPos>k__BackingField
  Vector3 <TrueHitPos>k__BackingField
  float <CurGravityMultiplier>k__BackingField
  int <RocketAmmoCount>k__BackingField
  bool <IsRealigning>k__BackingField
  Flags FLAG_FIRING_ROCKETS
  Flags FLAG_HAS_AIMING_MODULE
  EntityRef rocketStorageInstance
  EntityRef dashboardStorageInstance
  float rocketBaseGravity
  float rocketSpeed
  float <RocketDamageRadius>k__BackingField
  bool isInitialLoad
  string MLRS_PLAYER_KILL_STAT
  float leftRightInput
  float upDownInput
  Vector3 lastSentTargetHitPos
  Vector3 lastSentTrueHitPos
  int nextRocketIndex
  EntityRef rocketOwnerRef
  TimeSince timeSinceBroken
  int radiusModIndex
  Single[] radiusMods
  Vector3 trueTargetHitPos
Свойства:
  Vector3 UserTargetHitPos
  Vector3 TrueHitPos
  bool HasAimingModule
  bool CanBeUsed
  bool CanFire
  float HRotation
  float VRotation
  float CurGravityMultiplier
  int RocketAmmoCount
  bool IsRealigning
  bool IsFiringRockets
  float RocketDamageRadius
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Vector3 get_UserTargetHitPos()
  void set_UserTargetHitPos(Vector3 value)
  Vector3 get_TrueHitPos()
  void set_TrueHitPos(Vector3 value)
  bool get_HasAimingModule()
  bool get_CanBeUsed()
  bool get_CanFire()
  float get_HRotation()
  void set_HRotation(float value)
  float get_VRotation()
  void set_VRotation(float value)
  float get_CurGravityMultiplier()
  void set_CurGravityMultiplier(float value)
  int get_RocketAmmoCount()
  void set_RocketAmmoCount(int value)
  bool get_IsRealigning()
  void set_IsRealigning(bool value)
  bool get_IsFiringRockets()
  float get_RocketDamageRadius()
  void set_RocketDamageRadius(float value)
  void InitShared()
  void Load(LoadInfo info)
  bool CanBeLooted(BasePlayer player)
  void SetUserTargetHitPos(Vector3 worldPos)
  StorageContainer GetRocketContainer()
  StorageContainer GetDashboardContainer()
  void HitPosToRotation(Vector3 hitPos, Single& hRot, Single& vRot, Single& g)
  float ProjectileDistToSpeed(float x, float y, float angle, float g, float fallbackV)
  void OnChildAdded(BaseEntity child)
  void VehicleFixedUpdate()
  float GetSurfaceHeight(Vector3 pos)
  void SetRepaired()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void Save(SaveInfo info)
  bool AdminFixUp()
  void Fire(BasePlayer owner)
  void EndFiring()
  void FireNextRocket()
  void UpdateStorageState()
  bool TryGetAimingModule(Item& item)
  void RPC_SetTargetHitPos(RPCMessage msg)
  void RPC_Fire_Rockets(RPCMessage msg)
  void RPC_Open_Rockets(RPCMessage msg)
  void RPC_Open_Dashboard(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MobilePhone
Наследуется от: HeldEntity
Поля:
  PhoneController Controller
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Save(SaveInfo info)
  void ServerInit()
  void PostServerLoad()
  void DoServerDestroy()
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void ClearCurrentUser(RPCMessage msg)
  void SetCurrentUser(RPCMessage msg)
  void InitiateCall(RPCMessage msg)
  void AnswerPhone(RPCMessage msg)
  void ServerHangUp(RPCMessage msg)
  void DestroyShared()
  void UpdatePhoneName(RPCMessage msg)
  void Server_RequestPhoneDirectory(RPCMessage msg)
  void Server_AddSavedNumber(RPCMessage msg)
  void Server_RemoveSavedNumber(RPCMessage msg)
  void Server_RequestCurrentState(RPCMessage msg)
  void ServerSendVoicemail(RPCMessage msg)
  void ServerPlayVoicemail(RPCMessage msg)
  void ServerStopVoicemail(RPCMessage msg)
  void ServerDeleteVoicemail(RPCMessage msg)
  void ToggleRinging(bool state)
  void Load(LoadInfo info)
  void OnFlagsChanged(Flags old, Flags next)
  void .ctor()
--------------------------------------------------
Класс: ModularCar
Наследуется от: BaseModularVehicle
Поля:
  ModularCarChassisVisuals chassisVisuals
  VisualCarWheel wheelFL
  VisualCarWheel wheelFR
  VisualCarWheel wheelRL
  VisualCarWheel wheelRR
  CarSettings carSettings
  float hurtTriggerMinSpeed
  TriggerHurtNotChild hurtTriggerFront
  TriggerHurtNotChild hurtTriggerRear
  ProtectionProperties immortalProtection
  ProtectionProperties mortalProtection
  BoxCollider mainChassisCollider
  SpawnSettings spawnSettings
  MeshRenderer[] damageShowingRenderers
  float population
  float outsidedecayminutes
  BUTTON RapidSteerButton
  ModularCarCodeLock <CarLock>k__BackingField
  EngineState<GroundVehicle> lastSetEngineState
  float cachedFuelFraction
  HashSet`1<ModularCar> allCarsList
  ListDictionary`2<BaseMountable, DriverSeatInputs> driverSeatInputs
  CarPhysics`1<ModularCar> carPhysics
  VehicleTerrainHandler serverTerrainHandler
  CarWheel[] wheels
  float lastEngineOnTime
  float DECAY_TICK_TIME
  float INSIDE_DECAY_MULTIPLIER
  float CORPSE_DECAY_MINUTES
  Vector3 prevPosition
  Quaternion prevRotation
  Bounds collisionCheckBounds
  Vector3 lastGoodPos
  Quaternion lastGoodRot
  bool lastPosWasBad
  float deathDamageCounter
  float DAMAGE_TO_GIB
  TimeSince timeSinceDeath
  float IMMUNE_TIME
  Vector3 groundedCOMMultiplier
  Vector3 airbourneCOMMultiplier
  Vector3 prevCOMMultiplier
Свойства:
  float DriveWheelVelocity
  float DriveWheelSlip
  float SteerAngle
  ItemDefinition AssociatedItemDef
  float MaxSteerAngle
  bool IsLockable
  ModularCarCodeLock CarLock
  bool AlwaysAllowBradleyTargeting
  Surface OnSurface
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_DriveWheelVelocity()
  float get_DriveWheelSlip()
  float get_SteerAngle()
  ItemDefinition get_AssociatedItemDef()
  float get_MaxSteerAngle()
  bool get_IsLockable()
  ModularCarCodeLock get_CarLock()
  void set_CarLock(ModularCarCodeLock value)
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void InitShared()
  float MaxHealth()
  float StartHealth()
  float TotalHealth()
  float TotalMaxHealth()
  float GetMaxForwardSpeed()
  void Load(LoadInfo info)
  void OnFlagsChanged(Flags old, Flags next)
  float GetThrottleInput()
  float GetBrakeInput()
  float GetMaxDriveForce()
  float GetFuelFraction()
  bool PlayerHasUnlockPermission(BasePlayer player)
  bool KeycodeEntryBlocked(BasePlayer player)
  bool PlayerCanUseThis(BasePlayer player, LockType lockType)
  bool PlayerCanDestroyLock(BasePlayer player, BaseVehicleModule viaModule)
  bool CanBeLooted(BasePlayer player)
  bool CanPushNow(BasePlayer pusher)
  bool RefreshEngineState()
  float RollOffDriveForce(float driveForce)
  void RefreshChassisProtectionState()
  void ModuleEntityAdded(BaseVehicleModule addedModule)
  void ModuleEntityRemoved(BaseVehicleModule removedModule)
  bool get_AlwaysAllowBradleyTargeting()
  Surface get_OnSurface()
  void ServerInit()
  void DoServerDestroy()
  void PostServerLoad()
  float GetSteerInput()
  bool GetSteerModInput()
  void VehicleFixedUpdate()
  bool DetermineIfStationary()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  void Save(SaveInfo info)
  void Hurt(HitInfo info)
  void TickFuel(float fuelUsedPerSecond)
  bool MountEligable(BasePlayer player)
  bool IsComplete()
  void DoDecayDamage(float damage)
  float GetAdjustedDriveForce(float absSpeed, float topSpeed)
  bool HasAnyEngines()
  bool HasAnyWorkingEngines()
  bool MeetsEngineRequirements()
  void OnEngineStartFailed()
  CarWheel[] GetWheels()
  float GetWheelsMidPos()
  bool AdminFixUp(int tier)
  void ModuleHurt(BaseVehicleModule hurtModule, HitInfo info)
  void PropagateDamageToModules(HitInfo info, float minPropagationPercent, float maxPropagationPercent, BaseVehicleModule ignoreModule)
  void ModuleReachedZeroHealth()
  void OnKilled(HitInfo info)
  void RemoveLock()
  void RestoreVelocity(Vector3 vel)
  Vector3 GetCOMMultiplier()
  void UpdateClients()
  void DecayTick()
  void DoCollisionDamage(BaseEntity hitEntity, float damage)
  void SpawnPreassignedModules()
  void HandleAdminBonus()
  void RPC_OpenFuel(RPCMessage msg)
  void RPC_OpenFuelWithKeycode(RPCMessage msg)
  void RPC_TryMountWithKeycode(RPCMessage msg)
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModularCarGarage
Наследуется от: ContainerIOEntity
Поля:
  Transform vehicleLift
  Animation vehicleLiftAnim
  string animName
  VehicleLiftOccupantTrigger occupantTrigger
  float liftMoveTime
  EmissionToggle poweredLight
  EmissionToggle inUseLight
  Transform vehicleLiftPos
  float recycleEfficiency
  Transform recycleDropPos
  bool needsElectricity
  SoundDefinition liftStartSoundDef
  SoundDefinition liftStopSoundDef
  SoundDefinition liftStopDownSoundDef
  SoundDefinition liftLoopSoundDef
  GameObjectRef addRemoveLockEffect
  GameObjectRef changeLockCodeEffect
  GameObjectRef repairEffect
  TriggerBase playerTrigger
  ChassisBuildOption[] chassisBuildOptions
  ItemAmount lockResourceCost
  bool <PlatformIsOccupied>k__BackingField
  bool <HasEditableOccupant>k__BackingField
  bool <HasDriveableOccupant>k__BackingField
  OccupantLock <OccupantLockState>k__BackingField
  VehicleLiftState vehicleLiftState
  Sound liftLoopSound
  Vector3 downPos
  Flags Flag_DestroyingChassis
  float TimeToDestroyChassis
  Flags Flag_EnteringKeycode
  Flags Flag_PlayerObstructing
  ModularCar lockedOccupant
  HashSet`1<BasePlayer> lootingPlayers
  MagnetSnap magnetSnap
Свойства:
  bool PlatformIsOccupied
  bool HasEditableOccupant
  bool HasDriveableOccupant
  OccupantLock OccupantLockState
  bool LiftIsUp
  bool LiftIsMoving
  bool LiftIsDown
  bool IsDestroyingChassis
  bool IsEnteringKeycode
  bool PlayerObstructingLift
  ModularCar carOccupant
  bool HasOccupant
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_PlatformIsOccupied()
  void set_PlatformIsOccupied(bool value)
  bool get_HasEditableOccupant()
  void set_HasEditableOccupant(bool value)
  bool get_HasDriveableOccupant()
  void set_HasDriveableOccupant(bool value)
  OccupantLock get_OccupantLockState()
  void set_OccupantLockState(OccupantLock value)
  bool get_LiftIsUp()
  bool get_LiftIsMoving()
  bool get_LiftIsDown()
  bool get_IsDestroyingChassis()
  bool get_IsEnteringKeycode()
  bool get_PlayerObstructingLift()
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void OnFlagsChanged(Flags old, Flags next)
  bool CanBeLooted(BasePlayer player)
  int ConsumptionAmount()
  void SetOccupantState(bool hasOccupant, bool editableOccupant, bool driveableOccupant, OccupantLock occupantLockState, bool forced)
  void RefreshLiftState(bool forced)
  void MoveLift(VehicleLiftState desiredLiftState, float startDelay, bool forced)
  void MoveLiftUp()
  void MoveLiftDown()
  ModularCar get_carOccupant()
  bool get_HasOccupant()
  void FixedUpdate()
  void DoServerDestroy()
  void ServerInit()
  void Save(SaveInfo info)
  ItemContainerId GetIdealContainer(BasePlayer player, Item item, bool altMove)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void PlayerStoppedLooting(BasePlayer player)
  void IOStateChanged(int inputAmount, int inputSlot)
  bool TryGetModuleForItem(Item item, BaseVehicleModule& result)
  void RefreshOnOffState()
  void UpdateCarOccupant()
  void UpdateOccupantMode()
  void WakeNearbyRigidbodies()
  void EditableOccupantEntered()
  void EditableOccupantLeft()
  void RefreshLoot()
  void GrabOccupant(ModularCar occupant)
  void ReleaseOccupant()
  void StopChassisDestroy()
  void RPC_RepairItem(RPCMessage msg)
  void RPC_OpenEditing(RPCMessage msg)
  void RPC_DiedWithKeypadOpen(RPCMessage msg)
  void RPC_SelectedLootItem(RPCMessage msg)
  void RPC_DeselectedLootItem(RPCMessage msg)
  void RPC_StartKeycodeEntry(RPCMessage msg)
  void RPC_RequestAddLock(RPCMessage msg)
  void RPC_RequestRemoveLock(RPCMessage msg)
  void RPC_RequestNewCode(RPCMessage msg)
  void RPC_StartDestroyingChassis(RPCMessage msg)
  void RPC_StopDestroyingChassis(RPCMessage msg)
  void FinishDestroyingChassis()
  void .ctor()
--------------------------------------------------
Класс: ModularCarOven
Наследуется от: BaseOven
Поля:
  BaseVehicleModule moduleParent
Свойства:
  BaseVehicleModule ModuleParent
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  BaseVehicleModule get_ModuleParent()
  void ResetState()
  void SVSwitch(RPCMessage msg)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void OnCooked()
  void .ctor()
--------------------------------------------------
Класс: MotorRowboat
Наследуется от: BaseBoat
Поля:
  BlendedSoundLoops engineLoops
  BlendedSoundLoops waterLoops
  SoundDefinition engineStartSoundDef
  SoundDefinition engineStopSoundDef
  SoundDefinition movementSplashAccentSoundDef
  SoundDefinition engineSteerSoundDef
  GameObjectRef pushLandEffect
  GameObjectRef pushWaterEffect
  float waterSpeedDivisor
  float turnPitchModScale
  float tiltPitchModScale
  float splashAccentFrequencyMin
  float splashAccentFrequencyMax
  Flags Flag_ThrottleOn
  Flags Flag_TurnLeft
  Flags Flag_TurnRight
  Flags Flag_HasFuel
  Flags Flag_RecentlyPushed
  Flags Flag_Submerged
  Flags Flag_Dying
  float submergeFractionMinimum
  float deathSinkRate
  GameObjectRef fuelStoragePrefab
  float fuelPerSec
  GameObjectRef storageUnitPrefab
  EntityRef`1<StorageContainer> storageUnitInstance
  Transform boatRear
  ParticleSystemContainer wakeEffect
  ParticleSystemContainer engineEffectIdle
  ParticleSystemContainer engineEffectThrottle
  ParticleSystemContainer engineEffectThrottleReverse
  Transform boatFront
  ParticleSystemContainer forwardTravelEffect
  float forwardTravelEffectMinSpeed
  Projector causticsProjector
  Transform causticsDepthTest
  Transform engineLeftHandPosition
  Transform engineRotate
  float engineRotateRangeMultiplier
  Transform propellerRotate
  float population
  float outsidedecayminutes
  float deepwaterdecayminutes
  float decaystartdelayminutes
  EntityFuelSystem fuelSystem
  Transform[] stationaryDismounts
  TimeSince timeSinceLastUsedFuel
  float angularDragBase
  float engineOffAngularDragMultiplier
  float angularDragVelocity
  float landDrag
  float waterDrag
  float offAxisDrag
  float offAxisDot
  float DECAY_TICK_TIME
  TimeSince startedFlip
  float lastHadDriverTime
  float maxVelForStationaryDismount
Свойства:
  bool IsDying
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_IsDying()
  void InitShared()
  void ServerInit()
  void OnChildAdded(BaseEntity child)
  void DoServerDestroy()
  EntityFuelSystem GetFuelSystem()
  int StartingFuelUnits()
  void BoatDecay()
  void DoPushAction(BasePlayer player)
  void FlipMonitor()
  void RPC_OpenFuel(RPCMessage msg)
  void RPC_EngineToggle(RPCMessage msg)
  void EngineToggle(bool wantsOn)
  void PostServerLoad()
  void CheckInvalidBoat()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  bool EngineOn()
  float TimeSinceDriver()
  void DriverInput(InputState inputState, BasePlayer player)
  void VehicleFixedUpdate()
  void SetFlags()
  bool DetermineIfStationary()
  void SeatClippedWorld(BaseMountable mountable)
  void UpdateDrag()
  void OnKilled(HitInfo info)
  void EnterCorpseState()
  void ActualDeath()
  bool MountEligable(BasePlayer player)
  bool HasValidDismountPosition(BasePlayer player)
  bool GetDismountPosition(BasePlayer player, Vector3& res)
  void DisableTransferProtection()
  void Save(SaveInfo info)
  bool CanPushNow(BasePlayer pusher)
  bool ShowPushMenu(BasePlayer player)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: NeonSign
Наследуется от: Signage
Поля:
  float FastSpeed
  float MediumSpeed
  float SlowSpeed
  float MinSpeed
  float MaxSpeed
  Light topLeft
  Light topRight
  Light bottomLeft
  Light bottomRight
  float lightIntensity
  int powerConsumption
  Material activeMaterial
  Material inactiveMaterial
  float animationSpeed
  int currentFrame
  List`1<Lights> frameLighting
  bool isAnimating
  Action animationLoopAction
  AmbienceEmitter ambientSoundEmitter
  SoundDefinition switchSoundDef
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int ConsumptionAmount()
  void Load(LoadInfo info)
  void ServerInit()
  void ResetState()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void SwitchToNextFrame()
  void Save(SaveInfo info)
  void SetAnimationSpeed(RPCMessage msg)
  void UpdateNeonColors(RPCMessage msg)
  void EnsureInitialized()
  Color ClampColor(Color color)
  void .ctor()
--------------------------------------------------
Класс: NewYearGong
Наследуется от: BaseCombatEntity
Поля:
  SoundDefinition gongSound
  float minTimeBetweenSounds
  GameObject soundRoot
  Transform gongCentre
  float gongRadius
  AnimationCurve pitchCurve
  Animator gongAnimator
  float lastSound
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Hurt(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: NPCTalking
Наследуется от: NPCShopKeeper
Поля:
  ConversationData[] conversations
  NPCConversationResultAction[] conversationResultActions
  float maxConversationDistance
  List`1<BasePlayer> conversingPlayers
  BasePlayer lastActionPlayer
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetConversationIndex(string conversationName)
  string GetConversationStartSpeech(BasePlayer player)
  ConversationData GetConversation(string conversationName)
  ConversationData GetConversation(int index)
  ConversationData GetConversationFor(BasePlayer player)
  bool ProviderBusy()
  void ForceEndConversation(BasePlayer player)
  void ForceSpeechNode(BasePlayer player, int speechNodeIndex)
  void OnConversationEnded(BasePlayer player)
  void CleanupConversingPlayers()
  void Server_BeginTalking(RPCMessage msg)
  void OnConversationStarted(BasePlayer speakingTo)
  void UpdateFlags()
  void Server_EndTalking(RPCMessage msg)
  void ConversationAction(RPCMessage msg)
  bool ValidConversationPlayer(BasePlayer player)
  void Server_ResponsePressed(RPCMessage msg)
  BasePlayer GetActionPlayer()
  void OnConversationAction(BasePlayer player, string action)
  void .ctor()
--------------------------------------------------
Класс: OreResourceEntity
Наследуется от: StagedResourceEntity
Поля:
  GameObjectRef bonusPrefab
  GameObjectRef finishEffect
  GameObjectRef bonusFailEffect
  OreHotSpot _hotSpot
  SoundPlayer bonusSound
  int bonusesKilled
  int bonusesSpawned
  Vector3 lastNodeDir
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void UpdateNetworkStage()
  void CleanupBonus()
  void DestroyShared()
  void OnKilled(HitInfo info)
  void ServerInit()
  void InitialSpawnBonusSpot()
  void FinishBonusAssigned()
  void OnAttacked(HitInfo info)
  void DelayedBonusSpawn()
  void RespawnBonus()
  OreHotSpot SpawnBonusSpot(Vector3 lastDirection)
  Vector3 RandomCircle(float distance, bool allowInside)
  Vector3 RandomHemisphereDirection(Vector3 input, float degreesOffset, bool allowInside, bool changeHeight)
  Vector3 ClampToHemisphere(Vector3 hemiInput, float degreesOffset, Vector3 inputVec)
  Vector3 RandomCylinderPointAroundVector(Vector3 input, float distance, float minHeight, float maxHeight, bool allowInside)
  Vector3 ClampToCylinder(Vector3 localPos, Vector3 cylinderAxis, float cylinderDistance, float minHeight, float maxHeight)
  void .ctor()
--------------------------------------------------
Класс: PagerEntity
Наследуется от: BaseEntity
Поля:
  Flags Flag_Silent
  int frequency
  float beepRepeat
  GameObjectRef pagerEffect
  GameObjectRef silentEffect
  float nextChangeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetFrequency()
  void SwitchParent(BaseEntity ent)
  void ServerInit()
  void DoServerDestroy()
  Vector3 GetPosition()
  float GetMaxRange()
  void RFSignalUpdate(bool on)
  void SetSilentMode(bool wantsSilent)
  void SetOff()
  void ChangeFrequency(int newFreq)
  void ServerSetFrequency(RPCMessage msg)
  void Save(SaveInfo info)
  void OnParentRemoved()
  void OnParentDestroying()
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PaintedItemStorageEntity
Наследуется от: BaseEntity
Поля:
  UInt32 _currentImageCrc
  ulong lastEditedBy
Свойства:
  UInt32[] GetContentCRCs
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void Server_UpdateImage(RPCMessage msg)
  void DoServerDestroy()
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  UGCType get_ContentType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  void DebugOnlyLog(string str)
  void .ctor()
--------------------------------------------------
Класс: PatrolHelicopter
Наследуется от: BaseCombatEntity
Поля:
  GameObject rotorPivot
  GameObject mainRotor
  GameObject mainRotor_blades
  GameObject mainRotor_blur
  GameObject tailRotor
  GameObject tailRotor_blades
  GameObject tailRotor_blur
  GameObject rocket_tube_left
  GameObject rocket_tube_right
  GameObject left_gun_yaw
  GameObject left_gun_pitch
  GameObject left_gun_muzzle
  GameObject right_gun_yaw
  GameObject right_gun_pitch
  GameObject right_gun_muzzle
  GameObject spotlight_rotation
  GameObjectRef rocket_fire_effect
  GameObjectRef gun_fire_effect
  GameObjectRef bulletEffect
  GameObjectRef explosionEffect
  GameObjectRef fireBall
  GameObjectRef crateToDrop
  int maxCratesToSpawn
  float bulletSpeed
  float bulletDamage
  GameObjectRef servergibs
  GameObjectRef debrisFieldMarker
  float flareDuration
  SoundDefinition rotorWashSoundDef
  Sound _rotorWashSound
  SoundDefinition flightEngineSoundDef
  SoundDefinition flightThwopsSoundDef
  Sound flightEngineSound
  Sound flightThwopsSound
  Modulator flightEngineGainMod
  Modulator flightThwopsGainMod
  float rotorGainModSmoothing
  float engineGainMin
  float engineGainMax
  float thwopGainMin
  float thwopGainMax
  float spotlightJitterAmount
  float spotlightJitterSpeed
  GameObject[] nightLights
  Vector3 spotlightTarget
  float engineSpeed
  float targetEngineSpeed
  float blur_rotationScale
  ParticleSystem[] _rotorWashParticles
  PatrolHelicopterAI myAI
  GameObjectRef mapMarkerEntityPrefab
  float lastNetworkUpdate
  float networkUpdateRate
  BaseEntity mapMarkerInstance
  weakspot[] weakspots
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float MaxVelocity()
  void InitShared()
  void Load(LoadInfo info)
  void RadarLock(SeekingServerProjectile incoming)
  void CancelRadar()
  void Save(SaveInfo info)
  void ServerInit()
  void DestroyShared()
  void CreateMapMarker()
  void OnPositionalNetworkUpdate()
  void CreateExplosionMarker(float durationMinutes)
  void OnKilled(HitInfo info)
  bool IsValidHomingTarget()
  void OnEntityMessage(BaseEntity from, string msg)
  void DoFlare()
  void ClearFlares()
  void Update()
  void InitalizeWeakspots()
  void OnAttacked(HitInfo info)
  void Hurt(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: PetBrain
Наследуется от: BaseAIBrain
Поля:
  SoundDefinition CommandGivenVocalSFX
  bool DrownInDeepWater
  bool IdleWhenOwnerOfflineOrDead
  bool IdleWhenOwnerMounted
  float DrownTimer
  float ControlDistance
  int Count
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void AddStates()
  void InitializeAI()
  void OnDestroy()
  void Think(float delta)
  bool EvaluateLoadDefaultDesignTriggers()
  void OnAIDesignLoadedAtIndex(int index)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PhotoFrame
Наследуется от: StorageContainer
Поля:
  float TextureRequestDistance
  EntityRef _photoEntity
  UInt32 _overlayTextureCrc
  List`1<ulong> editHistory
  GameObjectRef SignEditorDialog
  OverlayMeshPaintableSource PaintableSource
Свойства:
  NetworkableId NetworkID
  Type FileType
  UGCType ContentType
  List`1<ulong> EditingHistory
  UInt32[] GetContentCRCs
  BaseNetworkable UgcEntity
  Vector2i TextureSize
  int TextureCount
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Load(LoadInfo info)
  UInt32[] GetTextureCRCs()
  NetworkableId get_NetworkID()
  Type get_FileType()
  UGCType get_ContentType()
  void Save(SaveInfo info)
  void OnItemAddedOrRemoved(Item item, bool added)
  void OnPickedUpPreItemMove(Item createdItem, BasePlayer player)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void SetTextureCRCs(UInt32[] crcs)
  List`1<ulong> get_EditingHistory()
  void LogEdit(BasePlayer byPlayer)
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  BaseNetworkable get_UgcEntity()
  bool CanPickup(BasePlayer player)
  Vector2i get_TextureSize()
  int get_TextureCount()
  bool CanUpdateSign(BasePlayer player)
  bool CanUnlockSign(BasePlayer player)
  bool CanLockSign(BasePlayer player)
  void UpdateSign(RPCMessage msg)
  void LockSign(RPCMessage msg)
  void UnLockSign(RPCMessage msg)
  void OnKilled(HitInfo info)
  bool ShouldNetworkOwnerInfo()
  string Categorize()
  void .ctor()
--------------------------------------------------
Класс: Planner
Наследуется от: HeldEntity
Поля:
  BaseEntity[] buildableList
Свойства:
  bool isTypeDeployable
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  ItemModDeployable GetModDeployable()
  Deployable GetDeployable()
  bool get_isTypeDeployable()
  void DoPlace(RPCMessage msg)
  Socket_Base FindSocket(string name, UInt32 prefabIDToFind)
  void DoBuild(CreateBuilding msg)
  void DoBuild(Target target, Construction component)
  GameObject DoPlacement(Target placement, Construction component)
  void PayForPlacement(BasePlayer player, Construction component)
  bool CanAffordToPlace(Construction component)
  bool ShouldParent(BaseEntity targetEntity, Deployable deployable)
  void .ctor()
--------------------------------------------------
Класс: PlanterBox
Наследуется от: StorageContainer
Поля:
  int soilSaturation
  int soilSaturationMax
  MeshRenderer soilRenderer
  float MinimumSaturationTriggerLevel
  float MaximumSaturationTriggerLevel
  TimeCachedValue`1<float> sunExposure
  TimeCachedValue`1<float> artificialLightExposure
  TimeCachedValue`1<float> plantTemperature
  TimeCachedValue`1<float> plantArtificalTemperature
  TimeSince lastSplashNetworkUpdate
  TimeSince lastRainCheck
Свойства:
  float soilSaturationFraction
  int availableIdealWaterCapacity
  int availableWaterCapacity
  int idealSaturation
  bool BelowMinimumSaturationTriggerLevel
  bool AboveMaximumSaturationTriggerLevel
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void OnItemAddedOrRemoved(Item item, bool added)
  bool InventoryItemFilter(Item item, int targetSlot)
  bool CanPickup(BasePlayer player)
  bool ItemIsFertilizer(Item item)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  float get_soilSaturationFraction()
  int get_availableIdealWaterCapacity()
  int get_availableWaterCapacity()
  int get_idealSaturation()
  bool get_BelowMinimumSaturationTriggerLevel()
  bool get_AboveMaximumSaturationTriggerLevel()
  void FertilizeGrowables()
  int GetFertilizerCount()
  bool ConsumeFertilizer()
  int ConsumeWater(int amount, GrowableEntity ignoreEntity)
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  void RefreshGrowables(GrowableEntity ignoreEntity)
  void ForceLightUpdate()
  void ForceTemperatureUpdate()
  float GetSunExposure()
  float CalculateSunExposure()
  float GetArtificialLightExposure()
  float CalculateArtificialLightExposure()
  float GetPlantTemperature()
  float CalculatePlantTemperature()
  bool HasPlants()
  void CalculateRainFactor()
  float CalculateArtificialTemperature()
  void OnPlantInserted(GrowableEntity entity, BasePlayer byPlayer)
  void RPC_RequestSaturationUpdate(RPCMessage msg)
  bool SupportsChildDeployables()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlayerHelicopter
Наследуется от: BaseHelicopter
Поля:
  Wheel[] wheels
  Transform waterSample
  PlayerHeliSounds playerHeliSounds
  Transform joystickPositionLeft
  Transform joystickPositionRight
  Transform leftFootPosition
  Transform rightFootPosition
  Transform passengerJoystickPositionRight
  Animator animator
  float maxRotorSpeed
  float timeUntilMaxRotorSpeed
  float rotorBlurThreshold
  Transform mainRotorBlurBone
  Renderer mainRotorBlurMesh
  Transform mainRotorBladesBone
  Renderer[] mainRotorBladeMeshes
  Transform rearRotorBladesBone
  Renderer[] rearRotorBladeMeshes
  Transform rearRotorBlurBone
  Renderer rearRotorBlurMesh
  float motorForceConstant
  float brakeForceConstant
  GameObject preventBuildingObject
  float maxPitchAnim
  float maxRollAnim
  float maxYawAnim
  GameObjectRef fuelStoragePrefab
  float fuelPerSec
  float fuelGaugeMax
  float outsidedecayminutes
  float insidedecayminutes
  VehicleEngineController`1<PlayerHelicopter> engineController
  Flags WHEEL_GROUNDED_LR
  Flags WHEEL_GROUNDED_RR
  Flags WHEEL_GROUNDED_FRONT
  Flags RADAR_WARNING_FLAG
  Flags RADAR_LOCK_FLAG
  Flags ENGINE_STARTING_FLAG
  TimeSince timeSinceCachedFuelFraction
  float cachedFuelFraction
  float <cachedPitch>k__BackingField
  float <cachedYaw>k__BackingField
  float <cachedRoll>k__BackingField
  bool isPushing
  float lastEngineOnTime
Свойства:
  bool IsStartingUp
  EngineState<PlayerHelicopter> CurEngineState
  float cachedPitch
  float cachedYaw
  float cachedRoll
  SamTargetType SAMTargetType
  bool ForceMovementHandling
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_IsStartingUp()
  EngineState<PlayerHelicopter> get_CurEngineState()
  void InitShared()
  float GetFuelFraction(bool force)
  bool CanPushNow(BasePlayer pusher)
  float InheritedVelocityScale()
  bool InheritedVelocityDirection()
  float get_cachedPitch()
  void set_cachedPitch(float value)
  float get_cachedYaw()
  void set_cachedYaw(float value)
  float get_cachedRoll()
  void set_cachedRoll(float value)
  void Load(LoadInfo info)
  void OnFlagsChanged(Flags old, Flags next)
  SamTargetType get_SAMTargetType()
  void OnChildAdded(BaseEntity child)
  float GetServiceCeiling()
  EntityFuelSystem GetFuelSystem()
  int StartingFuelUnits()
  bool IsValidSAMTarget(bool staticRespawn)
  void PilotInput(InputState inputState, BasePlayer player)
  bool Grounded()
  void SetDefaultInputState()
  void ApplyForceAtWheels()
  void ApplyForceWithoutWheels()
  void ApplyWheelForce(WheelCollider wheel, float gasScale, float brakeScale, float turning)
  void MovementUpdate()
  void ServerInit()
  void DecayTick()
  bool IsEngineOn()
  bool get_ForceMovementHandling()
  void TryStartEngine(BasePlayer player)
  bool MeetsEngineRequirements()
  void OnEngineStartFailed()
  void VehicleFixedUpdate()
  void UpdateNetwork()
  void OnEntityMessage(BaseEntity from, string msg)
  void ClearRadarLock()
  void ClearRadarWarning()
  void UpdateCOM()
  void Save(SaveInfo info)
  void OnKilled(HitInfo info)
  void DoPushAction(BasePlayer player)
  void DisablePushing()
  bool IsValidHomingTarget()
  void RPC_OpenFuel(RPCMessage msg)
  void .ctor()
  void .cctor()
  void IEngineControllerUser.Invoke(Action action, float time)
  void IEngineControllerUser.CancelInvoke(Action action)
--------------------------------------------------
Класс: PlayerInventory
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  ItemContainer containerMain
  ItemContainer containerBelt
  ItemContainer containerWear
  ItemCrafter crafting
  PlayerLoot loot
  Phrase BackpackGroundedError
  bool forceBirthday
  float nextCheckTime
  bool wasBirthday
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Initialize(BasePlayer owner)
  void DoDestroy()
  void ServerInit(BasePlayer owner)
  void OnMainInventoryItemAddedOrRemoved(Item item, bool bAdded)
  void OnItemAddedOrRemoved(Item item, bool bAdded)
  void UpdatedVisibleHolsteredItems()
  void OnContentsDirty()
  bool CanMoveItemsFrom(BaseEntity entity, Item item)
  void ItemCmd(RPCMessage msg)
  void MoveItem(RPCMessage msg)
  void OnClothingChanged(Item item, bool bAdded)
  void OnItemRemoved(Item item)
  bool CanStoreInInventory(Item item, int targetSlot)
  bool CanEquipItem(Item item, int targetSlot)
  bool CanWearItem(Item item, int targetSlot)
  bool CanWearItem(Item item, bool canAdjustClothing, int targetSlot)
  void ServerUpdate(float delta)
  void UpdateContainer(float delta, Type type, ItemContainer container, bool bSendInventoryToEveryone, float temperature)
  void SendSnapshot()
  void SendUpdatedInventory(Type type, ItemContainer container, bool bSendInventoryToEveryone)
  Item FindItemByUID(ItemId id)
  Item FindItemByItemID(string itemName)
  Item FindItemByItemID(int id)
  Item FindItemByItemName(string name)
  Item FindBySubEntityID(NetworkableId subEntityID)
  List`1<Item> FindItemsByItemID(int id)
  ItemContainer FindContainer(ItemContainerId id)
  ItemContainer GetContainer(Type id)
  bool GiveItem(Item item, ItemContainer container)
  bool GiveItem(Item item, bool tryWearClothing, ItemContainer container)
  void GetIdealPickupContainer(Item item, ItemContainer& container, bool tryWearClothing)
  void Strip()
  bool IsBirthday()
  bool IsChristmas()
  void GiveDefaultItems()
  bool CanEquipBackpack()
  PlayerInventory Save(bool bForDisk)
  void Load(PlayerInventory msg)
  int Take(List`1<Item> collect, int itemid, int amount)
  int GetAmount(int itemid)
  Item[] AllItems()
  int AllItemsNoAlloc(List`1& items)
  void FindAmmo(List`1<Item> list, AmmoTypes ammoType)
  bool HasAmmo(AmmoTypes ammoType)
  void .ctor()
  void .cctor()
  void <GiveDefaultItems>g__GiveDefaultItemWithSkin|46_0(string convarSkinName, string itemShortName)
--------------------------------------------------
Класс: PlayerLoot
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  BaseEntity entitySource
  Item itemSource
  List`1<ItemContainer> containers
  bool PositionChecks
  bool isInvokingSendUpdate
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsLooting()
  void Clear()
  ItemContainer FindContainer(ItemContainerId id)
  Item FindItem(ItemId id)
  void Check()
  void MarkDirty()
  void SendImmediate()
  void SendUpdate()
  bool StartLootingEntity(BaseEntity targetEntity, bool doPositionChecks)
  void AddContainer(ItemContainer container)
  void RemoveContainer(ItemContainer container)
  bool RemoveContainerAt(int index)
  void StartLootingItem(Item item)
  void .ctor()
--------------------------------------------------
Класс: PlayerMetabolism
Наследуется от: BaseMetabolism`1<BasePlayer>
Поля:
  float HotThreshold
  float ColdThreshold
  float OxygenHurtThreshold
  float OxygenDepleteTime
  float OxygenRefillTime
  MetabolismAttribute temperature
  MetabolismAttribute poison
  MetabolismAttribute radiation_level
  MetabolismAttribute radiation_poison
  MetabolismAttribute wetness
  MetabolismAttribute dirtyness
  MetabolismAttribute oxygen
  MetabolismAttribute bleeding
  MetabolismAttribute comfort
  MetabolismAttribute pending_health
  bool isDirty
  float lastConsumeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Reset()
  void ServerUpdate(BaseCombatEntity ownerEntity, float delta)
  bool HasChanged()
  void DoMetabolismDamage(BaseCombatEntity ownerEntity, float delta)
  bool SignificantBleeding()
  void ForceUpdateWorkbenchFlags()
  void UpdateWorkbenchFlags()
  void RunMetabolism(BaseCombatEntity ownerEntity, float delta)
  float DeltaHot()
  float DeltaCold()
  float DeltaWet()
  void UseHeart(float frate)
  void SendChangesToClient()
  void ApplyChange(Type type, float amount, float time)
  bool CanConsume()
  void MarkConsumption()
  PlayerMetabolism Save()
  void Load(PlayerMetabolism s)
  void SetAttribute(Type type, float amount)
  MetabolismAttribute FindAttribute(Type type)
  void .ctor()
--------------------------------------------------
Класс: PlayerModifiers
Наследуется от: BaseModifiers`1<BasePlayer>
Поля:
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerUpdate(BaseCombatEntity ownerEntity)
  PlayerModifiers Save()
  void Load(PlayerModifiers m)
  void SendChangesToClient()
  void .ctor()
--------------------------------------------------
Класс: PowerCounter
Наследуется от: IOEntity
Поля:
  int counterNumber
  int targetCounterNumber
  Canvas canvas
  CanvasGroup screenAlpha
  Text screenText
  Flags Flag_ShowPassthrough
  GameObjectRef counterConfigPanel
  Color passthroughColor
  Color counterColor
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool DisplayPassthrough()
  bool DisplayCounter()
  bool CanPlayerAdmin(BasePlayer player)
  int GetTarget()
  void ResetState()
  void SERVER_SetTarget(RPCMessage msg)
  void ToggleDisplayMode(RPCMessage msg)
  int GetPassthroughAmount(int outputSlot)
  void Save(SaveInfo info)
  void SetCounterNumber(int newNumber)
  void SendIONetworkUpdate()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void UpdateFromInput(int inputAmount, int inputSlot)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: PoweredLightsDeployer
Наследуется от: HeldEntity
Поля:
  GameObjectRef poweredLightsPrefab
  EntityRef activeLights
  MaterialReplacement guide
  GameObject guideObject
  float maxPlaceDistance
  float lengthPerAmount
  int placementLayerMask
Свойства:
  AdvancedChristmasLights active
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool CheckValidPlacement(Vector3 position, float radius, int layerMask)
  bool CanPlayerUse(BasePlayer player)
  AdvancedChristmasLights get_active()
  void set_active(AdvancedChristmasLights value)
  void AddPoint(RPCMessage msg)
  void Finish(RPCMessage msg)
  void DoFinish()
  void OnHeldChanged()
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: PoweredRemoteControlEntity
Наследуется от: IOEntity
Поля:
  string rcIdentifier
  Transform viewEyes
  GameObjectRef IDPanelPrefab
  RemoteControllableControls rcControls
  bool isStatic
  bool appendEntityIDToIdentifier
  int <ViewerCount>k__BackingField
  Nullable`1<CameraViewerId> <ControllingViewerId>k__BackingField
Свойства:
  bool RequiresMouse
  float MaxRange
  RemoteControllableControls RequiredControls
  bool CanPing
  bool EntityCanPing
  bool CanAcceptInput
  int ViewerCount
  Nullable`1<CameraViewerId> ControllingViewerId
  bool IsBeingControlled
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsStatic()
  bool get_RequiresMouse()
  float get_MaxRange()
  RemoteControllableControls get_RequiredControls()
  bool get_CanPing()
  bool get_EntityCanPing()
  bool get_CanAcceptInput()
  int get_ViewerCount()
  void set_ViewerCount(int value)
  Nullable`1<CameraViewerId> get_ControllingViewerId()
  void set_ControllingViewerId(Nullable`1<CameraViewerId> value)
  bool get_IsBeingControlled()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void UpdateRCAccess(bool isOnline)
  void Spawn()
  bool InitializeControl(CameraViewerId viewerID)
  void StopControl(CameraViewerId viewerID)
  void UserInput(InputState inputState, CameraViewerId viewerID)
  Transform GetEyes()
  float GetFovScale()
  bool CanControl(ulong playerID)
  BaseEntity GetEnt()
  void RCSetup()
  void RCShutdown()
  void Server_SetID(RPCMessage msg)
  bool CanUseNetworkCache(Connection connection)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void UpdateIdentifier(string newID, bool clientSend)
  string GetIdentifier()
  void InitShared()
  void DestroyShared()
  bool CanChangeID(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: PressButton
Наследуется от: IOEntity
Поля:
  float pressDuration
  float pressPowerTime
  int pressPowerAmount
  Flags Flag_EmittingPower
  bool smallBurst
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  void UnpowerTime()
  void PostServerLoad()
  void Press(RPCMessage msg)
  void Unpress()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: ProceduralLift
Наследуется от: BaseEntity
Поля:
  float movementSpeed
  float resetDelay
  ProceduralLiftCabin cabin
  ProceduralLiftStop[] stops
  GameObjectRef triggerPrefab
  string triggerBone
  int floorIndex
  SoundDefinition startSoundDef
  SoundDefinition stopSoundDef
  SoundDefinition movementLoopSoundDef
  Sound movementLoopSound
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Spawn()
  void RPC_UseLift(RPCMessage rpc)
  void ServerInit()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void ResetLift()
  void MoveToFloor(int floor)
  void SnapToFloor(int floor)
  void OnFinishedMoving()
  void Update()
  void StartMovementSounds()
  void StopMovementSounds()
  void .ctor()
--------------------------------------------------
Класс: ReactiveTarget
Наследуется от: IOEntity
Поля:
  Animator myAnimator
  GameObjectRef bullseyeEffect
  GameObjectRef knockdownEffect
  float activationPowerTime
  int activationPowerAmount
  float lastToggleTime
  float knockdownHealth
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void OnHitShared(HitInfo info)
  bool IsKnockedDown()
  void OnAttacked(HitInfo info)
  bool CanPickup(BasePlayer player)
  bool CanToggle()
  void QueueReset()
  void ResetTarget()
  void LowerTarget()
  void SendPowerBurst()
  int ConsumptionAmount()
  bool IsRootEntity()
  void UpdateFromInput(int inputAmount, int inputSlot)
  int GetPassthroughAmount(int outputSlot)
  void RPC_Reset(RPCMessage msg)
  void RPC_Lower(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: ReclaimTerminal
Наследуется от: StorageContainer
Поля:
  int itemCount
  Phrase DespawnToast
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void RPC_ReloadLoot(RPCMessage msg)
  void LoadReclaimLoot(BasePlayer player)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void PlayerStoppedLooting(BasePlayer player)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RecorderTool
Наследуется от: ThrownWeapon
Поля:
  bool debugRecording
  AudioSource RecorderAudioSource
  SoundDefinition RecordStartSfx
  SoundDefinition RewindSfx
  SoundDefinition RecordFinishedSfx
  SoundDefinition PlayTapeSfx
  SoundDefinition StopTapeSfx
  float ThrowScale
  Cassette <cachedCassette>k__BackingField
Свойства:
  Cassette cachedCassette
  Sprite LoadedCassetteIcon
  BaseEntity ToBaseEntity
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Cassette get_cachedCassette()
  void set_cachedCassette(Cassette value)
  Sprite get_LoadedCassetteIcon()
  bool HasCassette()
  BaseEntity get_ToBaseEntity()
  void Server_TogglePlaying(RPCMessage msg)
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  void SetUpThrownWeapon(BaseEntity ent)
  void OnHeldChanged()
  void .ctor()
--------------------------------------------------
Класс: Recycler
Наследуется от: StorageContainer
Поля:
  Animator Animator
  float recycleEfficiency
  SoundDefinition grindingLoopDef
  GameObjectRef startSound
  GameObjectRef stopSound
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  bool CanBeRecycled(Item item)
  void ServerInit()
  bool RecyclerItemFilter(Item item, int targetSlot)
  void SVSwitch(RPCMessage msg)
  bool MoveItemToOutput(Item newItem)
  bool HasRecyclable()
  void RecycleThink()
  void StartRecycling()
  void StopRecycling()
  void PlayAnim()
  void StopAnim()
  void ToggleAnim(bool toggle)
  void .ctor()
--------------------------------------------------
Класс: RelationshipManager
Наследуется от: BaseEntity
Поля:
  bool contacts
  Type MugshotFileFormat
  int MugshotResolution
  int MugshotMaxFileSize
  float MugshotMaxDistance
  Dictionary`2<ulong, PlayerRelationships> relationships
  int lastReputationUpdateIndex
  int seenReputationSeconds
  int startingReputation
  int forgetafterminutes
  int maxplayerrelationships
  float seendistance
  float mugshotUpdateInterval
  List`1<BasePlayer> _dirtyRelationshipPlayers
  int maxTeamSize_Internal
  RelationshipManager <ServerInstance>k__BackingField
  Dictionary`2<ulong, BasePlayer> cachedPlayers
  Dictionary`2<ulong, PlayerTeam> playerToTeam
  Dictionary`2<ulong, PlayerTeam> teams
  ulong lastTeamIndex
Свойства:
  int maxTeamSize
  RelationshipManager ServerInstance
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void BagQuotaRequest_SERVER()
  void ServerInit()
  void UpdateReputations()
  void UpdateContactsTick()
  int GetReputationFor(ulong playerID)
  void wipecontacts(Arg arg)
  void wipe_all_contacts(Arg arg)
  float GetAcquaintanceMaxDist()
  void UpdateAcquaintancesFor(BasePlayer player, float deltaSeconds)
  void SetSeen(BasePlayer player, BasePlayer otherPlayer)
  bool CleanupOldContacts(PlayerRelationships ownerRelationships, ulong playerID, RelationshipType relationshipType)
  void ForceRelationshipByID(BasePlayer player, ulong otherPlayerID, RelationshipType newType, int weight, bool sendImmediate)
  void SetRelationship(BasePlayer player, BasePlayer otherPlayer, RelationshipType type, int weight, bool sendImmediate)
  PlayerRelationships GetRelationshipSaveByID(ulong playerID)
  void MarkRelationshipsDirtyFor(ulong playerID)
  void ForceSendRelationships(BasePlayer player)
  void MarkRelationshipsDirtyFor(BasePlayer player)
  void SendRelationshipsFor(BasePlayer player)
  void SendRelationships()
  int GetNumberRelationships(ulong player)
  bool HasRelations(ulong player, ulong otherPlayer)
  PlayerRelationships GetRelationships(ulong player)
  void SERVER_SendFreshContacts(RPCMessage msg)
  void SERVER_ChangeRelationship(RPCMessage msg)
  void SERVER_UpdatePlayerNote(RPCMessage msg)
  void SERVER_ReceiveMugshot(RPCMessage msg)
  void DeleteMugshot(ulong steamId, ulong targetSteamId, UInt32 crc)
  UInt32 GetSteamIdHash(ulong requesterSteamId, ulong targetSteamId)
  void set_maxTeamSize(int value)
  int get_maxTeamSize()
  int GetMaxTeamSize()
  RelationshipManager get_ServerInstance()
  void set_ServerInstance(RelationshipManager value)
  void OnEnable()
  void OnDestroy()
  void Save(SaveInfo info)
  void DisbandTeam(PlayerTeam teamToDisband)
  BasePlayer FindByID(ulong userID)
  PlayerTeam FindTeam(ulong TeamID)
  PlayerTeam FindPlayersTeam(ulong userID)
  PlayerTeam CreateTeam()
  void trycreateteam(Arg arg)
  void promote(Arg arg)
  void leaveteam(Arg arg)
  void acceptinvite(Arg arg)
  void rejectinvite(Arg arg)
  BasePlayer GetLookingAtPlayer(BasePlayer source)
  void sleeptoggle(Arg arg)
  void kickmember(Arg arg)
  void sendinvite(Arg arg)
  void fakeinvite(Arg arg)
  void addtoteam(Arg arg)
  bool TeamsEnabled()
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RemoteControlEntity
Наследуется от: BaseCombatEntity
Поля:
  List`1<IRemoteControllable> allControllables
  string rcIdentifier
  Transform viewEyes
  GameObjectRef IDPanelPrefab
  RemoteControllableControls rcControls
  int <ViewerCount>k__BackingField
  Nullable`1<CameraViewerId> <ControllingViewerId>k__BackingField
Свойства:
  bool CanPing
  bool CanAcceptInput
  int ViewerCount
  Nullable`1<CameraViewerId> ControllingViewerId
  bool IsBeingControlled
  bool RequiresMouse
  float MaxRange
  RemoteControllableControls RequiredControls
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_CanPing()
  Transform GetEyes()
  float GetFovScale()
  BaseEntity GetEnt()
  string GetIdentifier()
  bool get_CanAcceptInput()
  int get_ViewerCount()
  void set_ViewerCount(int value)
  Nullable`1<CameraViewerId> get_ControllingViewerId()
  void set_ControllingViewerId(Nullable`1<CameraViewerId> value)
  bool get_IsBeingControlled()
  bool InitializeControl(CameraViewerId viewerID)
  void StopControl(CameraViewerId viewerID)
  void UserInput(InputState inputState, CameraViewerId viewerID)
  void UpdateIdentifier(string newID, bool clientSend)
  void RCSetup()
  void RCShutdown()
  void InitShared()
  void DestroyShared()
  bool CanControl(ulong playerID)
  bool get_RequiresMouse()
  float get_MaxRange()
  RemoteControllableControls get_RequiredControls()
  void Server_SetID(RPCMessage msg)
  bool CanUseNetworkCache(Connection connection)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool CanChangeID(BasePlayer player)
  bool IDInUse(string id)
  IRemoteControllable FindByID(string id)
  bool InstallControllable(IRemoteControllable newControllable)
  bool RemoveControllable(IRemoteControllable newControllable)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RepairBench
Наследуется от: StorageContainer
Поля:
  float maxConditionLostOnRepair
  GameObjectRef skinchangeEffect
  float REPAIR_COST_FRACTION
  float nextSkinChangeTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float GetRepairFraction(Item itemToRepair)
  float RepairCostFraction(Item itemToRepair)
  void GetRepairCostList(ItemBlueprint bp, List`1<ItemAmount> allIngredients)
  void StripComponentRepairCost(List`1<ItemAmount> allIngredients)
  void debugprint(string toPrint)
  void ChangeSkin(RPCMessage msg)
  void ApplySkinToItem(Item item, ulong Skin)
  void RepairItem(RPCMessage msg)
  int GetIdealSlot(BasePlayer player, Item item)
  void RepairAnItem(Item itemToRepair, BasePlayer player, BaseEntity repairBenchEntity, float maxConditionLostOnRepair, bool mustKnowBlueprint)
  void .ctor()
--------------------------------------------------
Класс: ResearchTable
Наследуется от: StorageContainer
Поля:
  float researchFinishedTime
  float researchCostFraction
  float researchDuration
  int requiredPaper
  GameObjectRef researchStartEffect
  GameObjectRef researchFailEffect
  GameObjectRef researchSuccessEffect
  ItemDefinition researchResource
  BasePlayer user
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  int GetIdealSlot(BasePlayer player, Item item)
  bool IsResearching()
  int RarityMultiplier(Rarity rarity)
  int GetBlueprintStacksize(Item sourceItem)
  int ScrapForResearch(Item item)
  int ScrapForResearch(ItemDefinition info)
  int ScrapForResearch(ItemDefinition info, ResearchType type)
  bool IsItemResearchable(Item item)
  void ServerInit()
  bool ItemFilter(Item item, int targetSlot)
  Item GetTargetItem()
  Item GetScrapItem()
  void PostServerLoad()
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void PlayerStoppedLooting(BasePlayer player)
  void DoResearch(RPCMessage msg)
  void ResearchAttemptFinished()
  void CancelResearch()
  void EndResearch()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: ResourceContainer
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  bool lootable
  ItemContainer container
  float lastAccessTime
Свойства:
  int accessedSecondsAgo
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int get_accessedSecondsAgo()
  void StartLootingContainer(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: RFBroadcaster
Наследуется от: IOEntity
Поля:
  int frequency
  GameObjectRef frequencyPanelPrefab
  Flags Flag_Broadcasting
  bool playerUsable
  float nextChangeTime
  float nextStopTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetFrequency()
  bool WantsPower()
  Vector3 GetPosition()
  float GetMaxRange()
  void RFSignalUpdate(bool on)
  void ServerSetFrequency(RPCMessage msg)
  bool CanUseNetworkCache(Connection connection)
  void Save(SaveInfo info)
  void IOStateChanged(int inputAmount, int inputSlot)
  void StopBroadcasting()
  void DoServerDestroy()
  void Load(LoadInfo info)
  bool CanChangeFrequency(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: RFReceiver
Наследуется от: IOEntity
Поля:
  int frequency
  GameObjectRef frequencyPanelPrefab
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetFrequency()
  bool WantsPower()
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  Vector3 GetPosition()
  float GetMaxRange()
  void Init()
  void DoServerDestroy()
  void RFSignalUpdate(bool on)
  void ServerSetFrequency(RPCMessage msg)
  bool CanUseNetworkCache(Connection connection)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool CanChangeFrequency(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: RFTimedExplosive
Наследуется от: TimedExplosive
Поля:
  SoundPlayer beepLoop
  ulong creatorPlayerID
  ItemDefinition pickupDefinition
  float minutesUntilDecayed
  int RFFrequency
  float decayTickDuration
  float minutesDecayed
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Vector3 GetPosition()
  float GetMaxRange()
  void RFSignalUpdate(bool on)
  void SetFrequency(int newFreq)
  int GetFrequency()
  void SetFuse(float fuseLength)
  void ArmRF()
  void DisarmRF()
  void Save(SaveInfo info)
  void ServerInit()
  void DecayCheck()
  void PostServerLoad()
  void DoServerDestroy()
  void ChangeFrequency(int newFreq)
  void SetCreatorEntity(BaseEntity newCreatorEntity)
  void Pickup(RPCMessage msg)
  bool IsArmed()
  void Load(LoadInfo info)
  bool CanPickup(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: RHIB
Наследуется от: MotorRowboat
Поля:
  Transform steeringWheelLeftHandTarget
  Transform steeringWheelRightHandTarget
  float rhibpopulation
  float targetGasPedal
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Server_Release(RPCMessage msg)
  void VehicleFixedUpdate()
  bool EngineOn()
  void DriverInput(InputState inputState, BasePlayer player)
  void AddFuel(int amount)
  void .ctor()
--------------------------------------------------
Класс: RidableHorse
Наследуется от: BaseRidableAnimal
Поля:
  Phrase SwapToSingleTitle
  Phrase SwapToSingleDescription
  Sprite SwapToSingleIcon
  Phrase SwapToDoubleTitle
  Phrase SwapToDoubleDescription
  Sprite SwapToDoubleIcon
  ItemDefinition WildSaddleItem
  float Population
  string distanceStatName
  HorseBreed[] breeds
  SkinnedMeshRenderer[] bodyRenderers
  SkinnedMeshRenderer[] hairRenderers
  int currentBreed
  ProtectionProperties riderProtection
  ProtectionProperties baseHorseProtection
  Flags Flag_HideHair
  Flags Flag_WoodArmor
  Flags Flag_RoadsignArmor
  Flags Flag_HasSingleSaddle
  Flags Flag_HasDoubleSaddle
  float equipmentSpeedMod
  int prevBreed
  int prevSlots
  Material[] breedAssignmentArray
  float distanceRecordingSpacing
  HitchTrough currentHitch
  float totalDistance
  float kmDistance
  float tempDistanceTravelled
Свойства:
  float RealisticMass
  float PositionTickRate
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetStorageSlotCount()
  float get_RealisticMass()
  void ApplyBreed(int index)
  void ApplyBreedInternal(HorseBreed breed)
  HorseBreed GetBreed()
  float GetTrotSpeed()
  float GetRunSpeed()
  void OnInventoryFirstCreated(ItemContainer container)
  void SpawnWildSaddle()
  void SetForSale()
  bool IsStandCollisionClear()
  bool IsPlayerSeatSwapValid(BasePlayer player, int fromIndex, int toIndex)
  int NumSwappableSeats()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  void SetupCorpse(BaseCorpse corpse)
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  void OnKilled(HitInfo hitInfo)
  void SetBreed(int index)
  void LeadingChanged()
  void ServerInit()
  float get_PositionTickRate()
  void PlayerMounted(BasePlayer player, BaseMountable seat)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  bool IsHitched()
  void SetHitch(HitchTrough Hitch)
  float ReplenishRatio()
  void EatNearbyFood()
  void TryLeaveHitch()
  void TryHitch()
  void RecordDistance()
  void MarkDistanceTravelled(float amount)
  void Save(SaveInfo info)
  void OnClaimedWithToken(Item tokenItem)
  void OnItemAddedOrRemoved(Item item, bool added)
  void OnInventoryDirty()
  bool CanAnimalAcceptItem(Item item, int targetSlot)
  void EquipmentUpdate()
  void SetSeatCount(int count)
  void DoNetworkUpdate()
  int GetSaddleItemSeatCount(Item item)
  bool HasSaddle()
  bool HasSingleSaddle()
  bool HasDoubleSaddle()
  bool ItemIsSaddle(Item item)
  void Load(LoadInfo info)
  bool HasValidSaddle()
  bool HasSeatAvailable()
  int GetSeatCapacity()
  bool CanPushNow(BasePlayer pusher)
  void RPC_ReqSwapSaddleType(RPCMessage msg)
  int MaxMounted()
  void setHorseBreed(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RustigeEgg
Наследуется от: BaseCombatEntity
Поля:
  Flags Flag_Spin
  Transform eggRotationTransform
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsSpinning()
  void RPC_Spin(RPCMessage msg)
  void RPC_Open(RPCMessage msg)
  void CloseEgg()
  void .ctor()
--------------------------------------------------
Класс: SamSite
Наследуется от: ContainerIOEntity
Поля:
  Animator pitchAnimator
  GameObject yaw
  GameObject pitch
  GameObject gear
  Transform eyePoint
  float gearEpislonDegrees
  float turnSpeed
  float clientLerpSpeed
  Vector3 currentAimDir
  Vector3 targetAimDir
  float vehicleScanRadius
  float missileScanRadius
  GameObjectRef projectileTest
  GameObjectRef muzzleFlashTest
  bool staticRespawn
  ItemDefinition ammoType
  Transform[] tubes
  float staticrepairseconds
  SoundDefinition yawMovementLoopDef
  float yawGainLerp
  float yawGainMovementSpeedMult
  SoundDefinition pitchMovementLoopDef
  float pitchGainLerp
  float pitchGainMovementSpeedMult
  int lowAmmoThreshold
  Flags Flag_DefenderMode
  SamTargetType targetTypeUnknown
  SamTargetType targetTypeVehicle
  SamTargetType targetTypeMissile
  ISamSiteTarget currentTarget
  SamTargetType mostRecentTargetType
  Item ammoItem
  float lockOnTime
  float lastTargetVisibleTime
  int lastAmmoCount
  int currentTubeIndex
  int firedCount
  float nextBurstTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsPowered()
  int ConsumptionAmount()
  bool IsInDefenderMode()
  void Load(LoadInfo info)
  void SetTarget(ISamSiteTarget target)
  void MarkIODirty()
  void ClearTarget()
  void ServerInit()
  void OnItemAddedRemoved(Item arg1, bool arg2)
  void Save(SaveInfo info)
  void PostServerLoad()
  void SelfHeal()
  void Die(HitInfo info)
  void FixedUpdate()
  Vector3 GetAimDir()
  bool HasValidTarget()
  bool CanPickup(BasePlayer player)
  void TargetScan()
  bool HasAmmo()
  void Reload()
  void EnsureReloaded()
  bool IsReloading()
  void WeaponTick()
  void FireProjectile(Vector3 origin, Vector3 direction, float speedMultiplier)
  int GetPassthroughAmount(int outputSlot)
  void ToggleDefenderMode(RPCMessage msg)
  void .ctor()
  void .cctor()
  void <TargetScan>g__AddTargetSet|55_0(List`1<ISamSiteTarget> allTargets, int layerMask, float scanRadius)
--------------------------------------------------
Класс: SantaSleigh
Наследуется от: BaseEntity
Поля:
  GameObjectRef prefabDrop
  SpawnFilter filter
  Transform dropOrigin
  float altitudeAboveTerrain
  float desiredAltitude
  Light bigLight
  SoundPlayer hohoho
  float hohohospacing
  float hohoho_additional_spacing
  Vector3 startPos
  Vector3 endPos
  float secondsToTake
  float secondsTaken
  bool dropped
  Vector3 dropPosition
  Vector3 swimScale
  Vector3 swimSpeed
  float swimRandom
  float appliedSwimScale
  float appliedSwimRotation
  string path
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float GetNetworkTime()
  void InitDropPosition(Vector3 newDropPosition)
  void ServerInit()
  void SendHoHoHo()
  Vector3 RandomDropPosition()
  void UpdateDropPosition(Vector3 newDropPosition)
  void FixedUpdate()
  void drop(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SearchLight
Наследуется от: IOEntity
Поля:
  GameObject pitchObject
  GameObject yawObject
  GameObject eyePoint
  SoundPlayer turnLoop
  bool needsBuildingPrivilegeToUse
  Vector3 aimDir
  BasePlayer mountedPlayer
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  int ConsumptionAmount()
  bool IsMounted()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void PlayerEnter(BasePlayer player)
  void PlayerExit()
  void MountedUpdate()
  void SetTargetAimpoint(Vector3 worldPos)
  int GetCurrentEnergy()
  void RPC_UseLight(RPCMessage msg)
  void OnKilled(HitInfo info)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ShopFront
Наследуется от: StorageContainer
Поля:
  float maxUseAngle
  BasePlayer vendorPlayer
  BasePlayer customerPlayer
  GameObjectRef transactionCompleteEffect
  ItemContainer customerInventory
  bool swappingItems
Свойства:
  float AngleDotProduct
  ItemContainer vendorInventory
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_AngleDotProduct()
  ItemContainer get_vendorInventory()
  bool TradeLocked()
  bool IsTradingPlayer(BasePlayer player)
  bool IsPlayerCustomer(BasePlayer player)
  bool IsPlayerVendor(BasePlayer player)
  bool PlayerInVendorPos(BasePlayer player)
  bool PlayerInCustomerPos(BasePlayer player)
  bool LootEligable(BasePlayer player)
  void ResetTrade()
  void CompleteTrade()
  void AcceptClicked(RPCMessage msg)
  void CancelClicked(RPCMessage msg)
  void PreServerLoad()
  void ServerInit()
  void OnItemAddedOrRemoved(Item item, bool added)
  bool CanAcceptVendorItem(Item item, int targetSlot)
  bool CanAcceptCustomerItem(Item item, int targetSlot)
  bool CanMoveFrom(BasePlayer player, Item item)
  bool CanOpenLootPanel(BasePlayer player, string panelName)
  void ReturnPlayerItems(BasePlayer player)
  void PlayerStoppedLooting(BasePlayer player)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void UpdatePlayers()
  void .ctor()
--------------------------------------------------
Класс: Signage
Наследуется от: IOEntity
Поля:
  ItemDefinition RequiredHeldEntity
  List`1<ulong> editHistory
  float TextureRequestTimeout
  GameObjectRef changeTextDialog
  MeshPaintableSource[] paintableSources
  UInt32[] textureIDs
Свойства:
  NetworkableId NetworkID
  Type FileType
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
  UInt32[] GetContentCRCs
  Vector2i TextureSize
  int TextureCount
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool CanUpdateSign(BasePlayer player)
  bool CanUnlockSign(BasePlayer player)
  bool CanLockSign(BasePlayer player)
  void Load(LoadInfo info)
  bool HeldEntityCheck(BasePlayer player)
  UInt32[] GetTextureCRCs()
  NetworkableId get_NetworkID()
  Type get_FileType()
  UGCType get_ContentType()
  void LockSign(RPCMessage msg)
  void UnLockSign(RPCMessage msg)
  void Save(SaveInfo info)
  void OnKilled(HitInfo info)
  void OnPickedUpPreItemMove(Item createdItem, BasePlayer player)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  bool ShouldNetworkOwnerInfo()
  void SetTextureCRCs(UInt32[] crcs)
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  void LogEdit(BasePlayer byPlayer)
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  string Admin_Who()
  int ConsumptionAmount()
  string Categorize()
  Vector2i get_TextureSize()
  int get_TextureCount()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void UpdateSign(RPCMessage msg)
  void EnsureInitialized()
  void SignDebugLog(string str)
  void .ctor()
--------------------------------------------------
Класс: SleepingBag
Наследуется от: DecayEntity
Поля:
  ulong deployerUserID
  GameObject renameDialog
  GameObject assignDialog
  float secondsBetweenReuses
  string niceName
  Vector3 spawnOffset
  RespawnType RespawnType
  bool isStatic
  bool canBePublic
  Flags IsPublicFlag
  Phrase bagLimitPhrase
  Phrase bagLimitReachedPhrase
  Phrase assignOtherBagPhrase
  Phrase assignedBagPhrase
  Phrase cannotAssignBedPhrase
  Phrase cannotMakeBedPhrase
  Phrase bedAssigningBlocked
  float unlockTime
  List`1<SleepingBag> sleepingBags
  bool notifyPlayerOnServerInit
  Dictionary`2<ulong, List`1<SleepingBag>> bagsPerPlayer
Свойства:
  float unlockSeconds
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsPublic()
  float get_unlockSeconds()
  float GetUnlockSeconds(ulong playerID)
  bool ValidForPlayer(ulong playerID, bool ignoreTimers)
  Nullable`1<CanAssignBedResult> CanAssignBed(BasePlayer player, SleepingBag newBag, ulong targetPlayer, int countOffset, int maxOffset, SleepingBag ignore)
  Nullable`1<CanBuildResult> CanBuildBed(BasePlayer player, Construction construction)
  SleepingBag[] FindForPlayer(ulong playerID, bool ignoreTimers)
  bool SpawnPlayer(BasePlayer player, NetworkableId sleepingBag)
  void AddBagForPlayer(SleepingBag bag, ulong user, bool networkUpdate)
  void RemoveBagForPlayer(SleepingBag bag, ulong user)
  void OnBagChangedOwnership(SleepingBag bag, ulong oldUser)
  int GetSleepingBagCount(ulong userId)
  bool TrySpawnPlayer(BasePlayer player, NetworkableId sleepingBag, String& errorMessage)
  void SetUnlockTime(float newTime)
  bool DestroyBag(ulong userID, NetworkableId sleepingBag)
  void ResetTimersForPlayer(BasePlayer player)
  void GetSpawnPos(Vector3& pos, Quaternion& rot)
  void SetPublic(bool isPublic)
  void SetDeployedBy(BasePlayer player)
  void OnPlayerDeath(BasePlayer player)
  void SetBagTimer(SleepingBag bag, Vector3 position, SleepingBagResetReason reason)
  void ServerInit()
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void DelayedPlayerNotify()
  void PostServerLoad()
  void NotifyPlayer(ulong id)
  void DoServerDestroy()
  void Save(SaveInfo info)
  void Rename(RPCMessage msg)
  void AssignToFriend(RPCMessage msg)
  void RPC_MakePublic(RPCMessage msg)
  void RPC_MakeBed(RPCMessage msg)
  void PostPlayerSpawn(BasePlayer p)
  RespawnState GetRespawnState(ulong userID)
  bool IsMobile()
  string Admin_Who()
  void Load(LoadInfo info)
  bool CanPickup(BasePlayer player)
  void .ctor()
  void .cctor()
  bool <DoServerDestroy>b__54_0(SleepingBag x)
--------------------------------------------------
Класс: SleepingBagCamper
Наследуется от: SleepingBag
Поля:
  EntityRef`1<BaseVehicleSeat> AssociatedSeat
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void PostPlayerSpawn(BasePlayer p)
  void SetSeat(BaseVehicleSeat seat, bool sendNetworkUpdate)
  void Save(SaveInfo info)
  RespawnState GetRespawnState(ulong userID)
  void ServerClearBed(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: SlotMachine
Наследуется от: BaseMountable
Поля:
  int ForcePayoutIndex
  Transform Reel1
  Transform Reel2
  Transform Reel3
  Transform Arm
  AnimationCurve Curve
  int Reel1Spins
  int Reel2Spins
  int Reel3Spins
  int MaxReelSpins
  float SpinDuration
  int SpinResult1
  int SpinResult2
  int SpinResult3
  int SpinResultPrevious1
  int SpinResultPrevious2
  int SpinResultPrevious3
  float SpinTime
  GameObjectRef StoragePrefab
  EntityRef StorageInstance
  SoundDefinition SpinSound
  SlotMachinePayoutDisplay PayoutDisplay
  SlotMachinePayoutSettings PayoutSettings
  Transform HandIkTarget
  Flags HasScrapForSpin
  Flags IsSpinningFlag
  Material PayoutIconMaterial
  bool UseTimeOfDayAdjustedSprite
  MeshRenderer[] PulseRenderers
  float PulseSpeed
  Color PulseFrom
  Color PulseTo
  int <CurrentMultiplier>k__BackingField
  BasePlayer CurrentSpinPlayer
Свойства:
  bool IsSpinning
  int CurrentMultiplier
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_IsSpinning()
  int get_CurrentMultiplier()
  void set_CurrentMultiplier(int value)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  float GetComfort()
  void Spawn()
  void DoServerDestroy()
  int GetBettingAmount()
  void RPC_Spin(RPCMessage rpc)
  void RPC_Deposit(RPCMessage rpc)
  void CheckPayout()
  void DelayedSpinningReset()
  void CalculateSpinResults()
  int RandomSpinResult()
  void OnPlayerDismounted(BasePlayer player)
  void Server_RequestMultiplierChange(RPCMessage msg)
  void OnBettingScrapUpdated(int amount)
  bool CalculatePayout(PayoutInfo& info, Int32& bonus)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SlotMachineStorage
Наследуется от: StorageContainer
Поля:
  int Amount
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool IsPlayerValid(BasePlayer player)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void OnInventoryDirty()
  void UpdateAmount(int amount)
  bool CanBeLooted(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: SmartAlarm
Наследуется от: AppIOEntity
Поля:
  Flags Flag_HasCustomMessage
  Phrase DefaultNotificationTitle
  Phrase DefaultNotificationBody
  GameObjectRef SetupNotificationDialog
  Animator Animator
  bool <Value>k__BackingField
  NotificationList _subscriptions
  string _notificationTitle
  string _notificationBody
  float _lastSentTime
Свойства:
  AppEntityType Type
  bool Value
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  AppEntityType get_Type()
  bool get_Value()
  void set_Value(bool value)
  bool AddSubscription(ulong steamId)
  bool RemoveSubscription(ulong steamId)
  bool HasSubscription(ulong steamId)
  void InitShared()
  void IOStateChanged(int inputAmount, int inputSlot)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void OnPairedWithPlayer(BasePlayer player)
  void StartSetupNotification(RPCMessage rpc)
  void SetNotificationTextImpl(RPCMessage rpc)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SmartSwitch
Наследуется от: AppIOEntity
Поля:
  Animator ReceiverAnimator
Свойства:
  AppEntityType Type
  bool Value
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool WantsPower()
  AppEntityType get_Type()
  void ServerInit()
  int ConsumptionAmount()
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void SetSwitch(bool wantsOn)
  void ToggleSwitch(RPCMessage msg)
  bool get_Value()
  void set_Value(bool value)
  void Unbusy()
  bool PlayerCanToggle(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: Snowmobile
Наследуется от: GroundVehicle
Поля:
  Transform centreOfMassTransform
  GameObjectRef itemStoragePrefab
  VisualCarWheel wheelSkiFL
  VisualCarWheel wheelSkiFR
  VisualCarWheel wheelTreadFL
  VisualCarWheel wheelTreadFR
  VisualCarWheel wheelTreadRL
  VisualCarWheel wheelTreadRR
  CarSettings carSettings
  int engineKW
  float idleFuelPerSec
  float maxFuelPerSec
  float airControlStability
  float airControlPower
  float badTerrainDrag
  ProtectionProperties riderProtection
  float hurtTriggerMinSpeed
  TriggerHurtNotChild hurtTriggerFront
  TriggerHurtNotChild hurtTriggerRear
  float minGroundFXSpeed
  SnowmobileChassisVisuals chassisVisuals
  VehicleLight[] lights
  Transform steeringLeftIK
  Transform steeringRightIK
  Transform leftFootIK
  Transform rightFootIK
  Transform starterKey
  Vector3 engineOffKeyRot
  Vector3 engineOnKeyRot
  float outsideDecayMinutes
  bool allowPassengerOnly
  bool allTerrain
  float _throttle
  float _brake
  float _steer
  float _mass
  Flags Flag_Slowmode
  EntityRef`1<StorageContainer> itemStorageInstance
  float cachedFuelFraction
  float FORCE_MULTIPLIER
  CarPhysics`1<Snowmobile> carPhysics
  VehicleTerrainHandler serverTerrainHandler
  CarWheel[] wheels
  TimeSince timeSinceLastUsed
  float DECAY_TICK_TIME
  float prevTerrainModDrag
  TimeSince timeSinceTerrainModCheck
Свойства:
  float ThrottleInput
  float BrakeInput
  bool IsBraking
  float SteerInput
  float SteerAngle
  float DriveWheelVelocity
  float DriveWheelSlip
  float MaxSteerAngle
  bool InSlowMode
  float Mass
  Surface OnSurface
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float get_ThrottleInput()
  void set_ThrottleInput(float value)
  float get_BrakeInput()
  void set_BrakeInput(float value)
  bool get_IsBraking()
  float get_SteerInput()
  void set_SteerInput(float value)
  float get_SteerAngle()
  float get_DriveWheelVelocity()
  float get_DriveWheelSlip()
  float get_MaxSteerAngle()
  bool get_InSlowMode()
  void set_InSlowMode(bool value)
  float get_Mass()
  void Load(LoadInfo info)
  float GetMaxDriveForce()
  float GetMaxForwardSpeed()
  float GetThrottleInput()
  float GetBrakeInput()
  float GetSteerInput()
  bool GetSteerModInput()
  float GetPerformanceFraction()
  float GetFuelFraction()
  bool CanBeLooted(BasePlayer player)
  void OnFlagsChanged(Flags old, Flags next)
  Surface get_OnSurface()
  void ServerInit()
  void VehicleFixedUpdate()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  float GetAdjustedDriveForce(float absSpeed, float topSpeed)
  float GetModifiedDrag()
  float MaxVelocity()
  CarWheel[] GetWheels()
  float GetWheelsMidPos()
  void Save(SaveInfo info)
  int StartingFuelUnits()
  void OnChildAdded(BaseEntity child)
  void DoServerDestroy()
  bool MeetsEngineRequirements()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  void SnowmobileDecay()
  StorageContainer GetItemContainer()
  void UpdateClients()
  void OnEngineStartFailed()
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  void RPC_OpenFuel(RPCMessage msg)
  void RPC_OpenItemStorage(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SpinnerWheel
Наследуется от: Signage
Поля:
  Transform wheel
  float velocity
  Quaternion targetRotation
  SoundDefinition spinLoopSoundDef
  SoundDefinition spinStartSoundDef
  SoundDefinition spinAccentSoundDef
  SoundDefinition spinStopSoundDef
  float minTimeBetweenSpinAccentSounds
  float spinAccentAngleDelta
  Sound spinSound
  Modulator spinSoundGain
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool AllowPlayerSpins()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  float GetMaxSpinSpeed()
  void Update_Server()
  void Update_Client()
  void Update()
  void RPC_Spin(RPCMessage rpc)
  void RPC_AnyoneSpin(RPCMessage rpc)
  bool AnyoneSpin()
  void .ctor()
--------------------------------------------------
Класс: SpookySpeaker
Наследуется от: IOEntity
Поля:
  SoundPlayer soundPlayer
  float soundSpacing
  float soundSpacingRand
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void PostServerLoad()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void SetTargetState(bool state)
  void SetWantsOn(RPCMessage msg)
  void UpdateInvokes()
  void SendPlaySound()
  void DelayedOff()
  void .ctor()
--------------------------------------------------
Класс: SprayCan
Наследуется от: HeldEntity
Поля:
  float MaxFreeSprayDistanceFromStart
  float MaxFreeSprayStartingDistance
  SprayCanSpray_Freehand paintingLine
  Flags IsFreeSpraying
  SoundDefinition SpraySound
  GameObjectRef SkinSelectPanel
  float SprayCooldown
  float ConditionLossPerSpray
  float ConditionLossPerReskin
  GameObjectRef LinePrefab
  Color[] SprayColours
  Single[] SprayWidths
  ParticleSystem worldSpaceSprayFx
  GameObjectRef ReskinEffect
  ItemDefinition SprayDecalItem
  GameObjectRef SprayDecalEntityRef
  SteamInventoryItem FreeSprayUnlockItem
  MinMaxGradient DecalSprayGradient
  SoundDefinition SprayLoopDef
  Phrase FreeSprayNamePhrase
  Phrase FreeSprayDescPhrase
  Phrase BuildingSkinDefaultPhrase
  Phrase BuildingSkinDefaultDescPhrase
  Phrase BuildingSkinColourPhrase
  Phrase BuildingSkinColourDescPhrase
  ConstructionSkin_ColourLookup ShippingContainerColourLookup
  string ENEMY_BASE_STAT
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void BeginFreehandSpray(RPCMessage msg)
  void ClearPaintingLine(bool allowNewSprayImmediately)
  bool CanSprayFreehand(BasePlayer player)
  bool IsSprayBlockedByTrigger(Vector3 pos)
  void ChangeItemSkin(RPCMessage msg)
  bool GetEntityPrefabPath(ItemDefinition def, String& resourcePath)
  void CreateSpray(RPCMessage msg)
  void CheckAchievementPosition(Vector3 pos)
  void LoseCondition(float amount)
  void ClearBusy()
  void OnHeldChanged()
  void Server_SetBlockColourId(RPCMessage msg)
  bool CanEntityBeRespawned(BaseEntity targetEntity, SprayFailReason& reason)
  bool GetItemDefinitionForEntity(BaseEntity be, ItemDefinition& def, bool useRedirect)
  void .ctor()
  void .cctor()
  void <ChangeItemSkin>g__SaveEntityStorage|34_0(BaseEntity baseEntity, Dictionary`2<ContainerSet, List`1<Item>> dictionary, int index)
  void <ChangeItemSkin>g__RestoreEntityStorage|34_1(BaseEntity baseEntity, int index, Dictionary`2<ContainerSet, List`1<Item>> copy)
--------------------------------------------------
Класс: SprayCanSpray
Наследуется от: DecayEntity
Поля:
  DateTime sprayTimestamp
  ulong sprayedByPlayer
  ListHashSet`1<SprayCanSpray> AllSprays
  int splashThreshold
Свойства:
  bool BypassInsideDecayMultiplier
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void ApplyOutOfAuthConditionPenalty()
  void ServerInit()
  void DoServerDestroy()
  void RainCheck()
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  void Server_RequestWaterClear(RPCMessage msg)
  bool get_BypassInsideDecayMultiplier()
  bool Menu_WaterClear_ShowIf(BasePlayer player)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SprayCanSpray_Freehand
Наследуется от: SprayCanSpray
Поля:
  AlignedLineDrawer LineDrawer
  List`1<LinePoint> LinePoints
  Color colour
  float width
  EntityRef`1<BasePlayer> editingPlayer
  GroundWatch groundWatch
  MeshCollider meshCollider
  int MaxLinePointLength
  float SimplifyTolerance
Свойства:
  bool AcceptingChanges
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_AcceptingChanges()
  bool ShouldNetworkOwnerInfo()
  void PostServerLoad()
  void Save(SaveInfo info)
  void SetColour(Color newColour)
  void SetWidth(float lineWidth)
  void Server_AddPointMidSpray(RPCMessage msg)
  void EnableChanges(BasePlayer byPlayer)
  void TimeoutEditing()
  void Server_FinishEditing(RPCMessage msg)
  void AddInitialPoint(Vector3 atNormal)
  void UpdateGroundWatch()
  void Load(LoadInfo info)
  void CopyPoints(List`1<LinePoint> from, List`1<LinePoint> to)
  void CopyPoints(List`1<LinePoint> from, List`1<Vector3> to)
  void CopyPoints(List`1<LinePoint> from, List`1<LinePoint> to)
  void CopyPoints(List`1<LinePoint> from, List`1<LinePoint> to)
  void ResetState()
  void .ctor()
--------------------------------------------------
Класс: StagedResourceEntity
Наследуется от: ResourceEntity
Поля:
  List`1<ResourceStage> stages
  int stage
  GameObjectRef changeStageEffect
  GameObject gibSourceTest
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void OnHealthChanged()
  void UpdateNetworkStage()
  int FindBestStage()
  T GetStageComponent()
  void UpdateStage()
  void .ctor()
--------------------------------------------------
Класс: StashContainer
Наследуется от: StorageContainer
Поля:
  Transform visuals
  float burriedOffset
  float raisedOffset
  GameObjectRef buryEffect
  float uncoverRange
  float lastToggleTime
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool PlayerInRange(BasePlayer ply)
  void InitShared()
  void DoOccludedCheck()
  void OnPhysicsNeighbourChanged()
  void SetHidden(bool isHidden)
  void DisableNetworking()
  void Decay()
  void ServerInit()
  void ToggleHidden()
  void RPC_HideStash(RPCMessage rpc)
  void RPC_WantsUnhide(RPCMessage rpc)
  void OnFlagsChanged(Flags old, Flags next)
  bool IsHidden()
  void .ctor()
--------------------------------------------------
Класс: StaticInstrument
Наследуется от: BaseMountable
Поля:
  AnimatorOverrideController AnimatorOverride
  bool ShowDeployAnimation
  InstrumentKeyController KeyController
  bool ShouldSuppressHandsAnimationLayer
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Server_PlayNote(RPCMessage msg)
  void Server_StopNote(RPCMessage msg)
  bool IsInstrument()
  void .ctor()
--------------------------------------------------
Класс: SteamInventory
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  IPlayerItem[] Items
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool HasItem(int itemid)
  Task UpdateSteamInventory(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: StorageContainer
Наследуется от: DecayEntity
Поля:
  Phrase LockedMessage
  Phrase InUseMessage
  int inventorySlots
  bool dropsLoot
  float dropLootDestroyPercent
  bool dropFloats
  bool isLootable
  bool isLockable
  bool isMonitorable
  string panelName
  Phrase panelTitle
  ContentsType allowedContents
  ItemDefinition allowedItem
  ItemDefinition allowedItem2
  int maxStackSize
  bool needsBuildingPrivilegeToUse
  bool mustBeMountedToUse
  SoundDefinition openSound
  SoundDefinition closeSound
  Vector3 dropPosition
  Vector3 dropVelocity
  ItemCategory onlyAcceptCategory
  bool onlyOneUser
  ItemContainer <inventory>k__BackingField
  ulong <LastLootedBy>k__BackingField
Свойства:
  Phrase LootPanelTitle
  ItemContainer inventory
  Transform Transform
  bool DropsLoot
  bool DropFloats
  float DestroyLootPercent
  ulong LastLootedBy
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Phrase get_LootPanelTitle()
  void ResetState()
  void OnDrawGizmos()
  ItemContainer get_inventory()
  void set_inventory(ItemContainer value)
  Transform get_Transform()
  bool get_DropsLoot()
  bool get_DropFloats()
  float get_DestroyLootPercent()
  ulong get_LastLootedBy()
  void set_LastLootedBy(ulong value)
  bool MoveAllInventoryItems(ItemContainer from)
  bool MoveAllInventoryItems(ItemContainer source, ItemContainer dest)
  void ReceiveInventoryFromItem(Item item)
  bool CanPickup(BasePlayer player)
  void OnPickedUp(Item createdItem, BasePlayer player)
  void ServerInit()
  void OnInventoryFirstCreated(ItemContainer container)
  void OnItemAddedOrRemoved(Item item, bool added)
  bool ItemFilter(Item item, int targetSlot)
  void CreateInventory(bool giveUID)
  void PreServerLoad()
  void OnInventoryDirty()
  void PostServerLoad()
  void DoServerDestroy()
  void RPC_OpenLoot(RPCMessage rpc)
  string GetPanelName()
  bool CanMoveFrom(BasePlayer player, Item item)
  bool CanOpenLootPanel(BasePlayer player, string panelName)
  bool CanBeLooted(BasePlayer player)
  void AddContainers(PlayerLoot loot)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void PlayerStoppedLooting(BasePlayer player)
  void Save(SaveInfo info)
  void OnKilled(HitInfo info)
  void DropItems(BaseEntity initiator)
  void DropItems(IItemContainerEntity containerEntity, BaseEntity initiator)
  void DropBonusItems(BaseEntity initiator, ItemContainer container)
  Vector3 GetDropPosition()
  Vector3 GetDropVelocity()
  bool ShouldDropItemsIndividually()
  void Load(LoadInfo info)
  int GetIdealSlot(BasePlayer player, Item item)
  ItemContainerId GetIdealContainer(BasePlayer player, Item item, bool altMove)
  bool HasSlot(Slot slot)
  bool OccupiedCheck(BasePlayer player)
  bool HasAttachedStorageAdaptor()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SurveyCrater
Наследуется от: BaseCombatEntity
Поля:
  ResourceDispenser resourceDispenser
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void OnAttacked(HitInfo info)
  void RemoveMe()
  void AnalysisComplete(RPCMessage msg)
  float BoundsPadding()
  void .ctor()
--------------------------------------------------
Класс: Telephone
Наследуется от: ContainerIOEntity
Поля:
  int MaxPhoneNameLength
  int MaxSavedNumbers
  Transform PhoneHotspot
  Transform AnsweringMachineHotspot
  Transform[] HandsetRoots
  ItemDefinition[] ValidCassettes
  Transform ParentedHandsetTransform
  LineRenderer CableLineRenderer
  Transform CableStartPoint
  Transform CableEndPoint
  float LineDroopAmount
  Cassette <cachedCassette>k__BackingField
  PhoneController Controller
Свойства:
  Cassette cachedCassette
  BaseEntity ToBaseEntity
  UInt32 AnsweringMessageId
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Cassette get_cachedCassette()
  void set_cachedCassette(Cassette value)
  void Load(LoadInfo info)
  bool CanPickup(BasePlayer player)
  BaseEntity get_ToBaseEntity()
  void OnFlagsChanged(Flags old, Flags next)
  UInt32 get_AnsweringMessageId()
  void Save(SaveInfo info)
  void ServerInit()
  void PostServerLoad()
  void DoServerDestroy()
  void ClearCurrentUser(RPCMessage msg)
  void SetCurrentUser(RPCMessage msg)
  void InitiateCall(RPCMessage msg)
  void AnswerPhone(RPCMessage msg)
  void ServerHangUp(RPCMessage msg)
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  bool CanAcceptItem(Item item, int targetSlot)
  void DestroyShared()
  void UpdatePhoneName(RPCMessage msg)
  void Server_RequestPhoneDirectory(RPCMessage msg)
  void Server_AddSavedNumber(RPCMessage msg)
  void Server_RemoveSavedNumber(RPCMessage msg)
  void ServerSendVoicemail(RPCMessage msg)
  void ServerPlayVoicemail(RPCMessage msg)
  void ServerStopVoicemail(RPCMessage msg)
  void ServerDeleteVoicemail(RPCMessage msg)
  int GetPassthroughAmount(int outputSlot)
  void .ctor()
--------------------------------------------------
Класс: ThrownWeapon
Наследуется от: AttackEntity
Поля:
  GameObjectRef prefabToThrow
  float maxThrowVelocity
  float tumbleVelocity
  Vector3 overrideAngle
  bool canStick
  bool canThrowUnderwater
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Vector3 GetInheritedVelocity(BasePlayer player, Vector3 direction)
  void ServerThrow(Vector3 targetPosition)
  float GetThrowVelocity(Vector3 throwPos, Vector3 targetPos, Vector3 aimDir)
  void DoThrow(RPCMessage msg)
  void DoDrop(RPCMessage msg)
  void SetUpThrownWeapon(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TimerSwitch
Наследуется от: IOEntity
Поля:
  float timerLength
  Transform timerDrum
  float timePassed
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetIOState()
  bool WantsPassthroughPower()
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void UpdateFromInput(int inputAmount, int inputSlot)
  void SVSwitch(RPCMessage msg)
  void SwitchPressed()
  void AdvanceTime()
  void EndTimer()
  float GetPassedTime()
  void PostServerLoad()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: Toolgun
Наследуется от: Hammer
Поля:
  GameObjectRef attackEffect
  GameObjectRef beamEffect
  GameObjectRef beamImpactEffect
  GameObjectRef errorEffect
  GameObjectRef beamEffectClassic
  GameObjectRef beamImpactEffectClassic
  Transform muzzlePoint
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void DoAttackShared(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: TorchDeployableLightSource
Наследуется от: StorageContainer
Поля:
  ItemDefinition[] AllowedTorches
  Transform TorchRoot
  Flags HasTorch
  Flags UseBuiltInFx
  ItemDefinition[] BuiltInFxItems
  EntityRef`1<TorchWeapon> spawnedTorch
  ItemDefinition spawnedTorchDef
Свойства:
  Item CurrentTorch
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool ItemFilter(Item item, int targetSlot)
  bool ShouldUseBuiltInFx(ItemDefinition def)
  void UpdateTorch()
  void TickTorchDurability()
  void PostServerLoad()
  void OnItemAddedOrRemoved(Item item, bool added)
  Item get_CurrentTorch()
  void RequestTurnOnOff(RPCMessage msg)
  void TryToggle(bool wantsOn)
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  void Ignite(Vector3 fromPos)
  bool CanIgnite()
  void .ctor()
--------------------------------------------------
Класс: TorchWeapon
Наследуется от: BaseMelee
Поля:
  float FuelTickAmount
  AnimatorOverrideController LitHoldAnimationOverride
  bool ExtinguishUnderwater
  bool UseTurnOnOffAnimations
  GameObjectRef litStrikeFX
  Flags IsInHolder
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void GetAttackStats(HitInfo info)
  float GetConditionLoss()
  void SetIsOn(bool isOn)
  void Ignite(RPCMessage msg)
  void Extinguish(RPCMessage msg)
  void UseFuel()
  void OnHeldChanged()
  string GetStrikeEffectPath(string materialName)
  void .ctor()
--------------------------------------------------
Класс: TrainCar
Наследуется от: BaseVehicle
Поля:
  float corpseSeconds
  TriggerTrainCollisions frontCollisionTrigger
  TriggerTrainCollisions rearCollisionTrigger
  float collisionDamageDivide
  float derailCollisionForce
  TriggerHurtNotChild hurtTriggerFront
  TriggerHurtNotChild hurtTriggerRear
  GameObject[] hurtOrRepelTriggersInternal
  float hurtTriggerMinSpeed
  Transform centreOfMassTransform
  Transform frontBogiePivot
  bool frontBogieCanRotate
  Transform rearBogiePivot
  bool rearBogieCanRotate
  Transform[] wheelVisuals
  float wheelRadius
  GameObjectRef fxDestroyed
  TriggerParent platformParentTrigger
  GameObjectRef collisionEffect
  Transform frontCoupling
  Transform frontCouplingPivot
  Transform rearCoupling
  Transform rearCouplingPivot
  SoundDefinition coupleSound
  SoundDefinition uncoupleSound
  TrainCarAudio trainCarAudio
  ParticleSystem frontCouplingChangedFx
  ParticleSystem rearCouplingChangedFx
  ParticleSystem newCouplingFX
  float decayTimeMultiplier
  Vector3 frontBogieLocalOffset
  Vector3 rearBogieLocalOffset
  float population
  int wagons_per_engine
  float decayminutes
  float DistFrontWheelToFrontCoupling
  float DistFrontWheelToBackCoupling
  TrainCouplingController coupling
  TrackSelection localTrackSelection
  Flags Flag_LinedUpToUnload
  float <FrontWheelSplineDist>k__BackingField
  bool trainDebug
  CompleteTrain completeTrain
  bool frontAtEndOfLine
  bool rearAtEndOfLine
  float frontBogieYRot
  float rearBogieYRot
  Vector3 spawnOrigin
  float TRAINCAR_MAX_SPEED
  TrainTrackSpline _frontTrackSection
  TrainTrackSpline <RearTrackSection>k__BackingField
  float distFrontToBackWheel
  float initialSpawnTime
  float decayingFor
  float decayTickSpacing
  float lastDecayTick
Свойства:
  TriggerTrainCollisions FrontCollisionTrigger
  TriggerTrainCollisions RearCollisionTrigger
  TrainCarType CarType
  bool LinedUpToUnload
  Vector3 Position
  float FrontWheelSplineDist
  bool FrontAtEndOfLine
  bool RearAtEndOfLine
  bool networkUpdateOnCompleteTrainChange
  TrainTrackSpline FrontTrackSection
  TrainTrackSpline RearTrackSection
  bool IsAtAStation
  bool IsOnAboveGroundSpawnRail
  bool RecentlySpawned
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  TriggerTrainCollisions get_FrontCollisionTrigger()
  TriggerTrainCollisions get_RearCollisionTrigger()
  TrainCarType get_CarType()
  bool get_LinedUpToUnload()
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void InitShared()
  void Load(LoadInfo info)
  void OnFlagsChanged(Flags old, Flags next)
  bool CustomCollision(TrainCar train, TriggerTrainCollisions trainTrigger)
  float InheritedVelocityScale()
  void SetTrackSelection(TrackSelection trackSelection)
  bool PlayerIsOnPlatform(BasePlayer player)
  Vector3 get_Position()
  float get_FrontWheelSplineDist()
  void set_FrontWheelSplineDist(float value)
  bool get_FrontAtEndOfLine()
  bool get_RearAtEndOfLine()
  bool get_networkUpdateOnCompleteTrainChange()
  TrainTrackSpline get_FrontTrackSection()
  void set_FrontTrackSection(TrainTrackSpline value)
  TrainTrackSpline get_RearTrackSection()
  void set_RearTrackSection(TrainTrackSpline value)
  bool get_IsAtAStation()
  bool get_IsOnAboveGroundSpawnRail()
  bool get_RecentlySpawned()
  void ServerInit()
  void PostServerLoad()
  void Spawn()
  void Save(SaveInfo info)
  void ServerFlagsChanged(Flags old, Flags next)
  void UpdateCompleteTrain()
  void SetNewCompleteTrain(CompleteTrain ct)
  void Hurt(HitInfo info)
  void OnKilled(HitInfo info)
  Vector3 GetExplosionPos()
  void ActualDeath()
  void DoRepair(BasePlayer player)
  float GetDamageMultiplier(BaseEntity ent)
  void OnHurtTriggerOccupant(BaseEntity hurtEntity, DamageType damageType, float damageTotal)
  void DoServerDestroy()
  void RemoveFromCompleteTrain()
  bool MountEligable(BasePlayer player)
  float MaxVelocity()
  float GetTrackSpeed()
  bool IsCoupledBackwards()
  float GetPrevTrackSpeed()
  Vector3 GetLocalVelocityServer()
  bool AnyPlayersOnTrainCar()
  void VehicleFixedUpdate()
  void PostVehicleFixedUpdate()
  Vector3 GetCentreOfTrainPos()
  Vector3 GetFrontOfTrainPos()
  Vector3 GetRearOfTrainPos()
  void FrontTrainCarTick(TrackSelection trackSelection, float dt)
  void OtherTrainCarTick(TrainTrackSpline theirTrackSpline, float prevSplineDist, float distanceOffset)
  bool TryGetNextTrainCar(Vector3 forwardDir, TrainCar& result)
  bool TryGetPrevTrainCar(Vector3 forwardDir, TrainCar& result)
  bool TryGetTrainCar(bool next, Vector3 forwardDir, TrainCar& result)
  void MoveFrontWheelsAlongTrackSpline(TrainTrackSpline trackSpline, float prevSplineDist, float distToMove, TrainTrackSpline preferredAltTrack, TrackSelection trackSelection)
  Vector3 GetFrontWheelPos()
  Vector3 GetRearWheelPos()
  void SetTheRestFromFrontWheelData(TrainTrackSpline& frontTS, Vector3 targetFrontWheelPos, Vector3 targetFrontWheelTangent, TrackSelection trackSelection, TrainTrackSpline additionalAlt, bool instantMove)
  float GetForces()
  float GetThrottleForce()
  bool HasThrottleInput()
  float ApplyCollisionDamage(float forceMagnitude)
  bool SpaceIsClear()
  bool ColliderIsPartOfTrain(Collider collider)
  void UpdateClients()
  void DecayTick()
  float GetDecayMinutes(bool hasPassengers)
  bool CanDieFromDecayNow()
  bool AnyPlayersNearby(float maxDist)
  void RPC_WantsUncouple(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TrainCarUnloadable
Наследуется от: TrainCar
Поля:
  GameObjectRef storagePrefab
  BoxCollider[] unloadingAreas
  TrainCarFuelHatches fuelHatches
  Transform orePlaneVisuals
  Transform orePlaneColliderDetailed
  Transform orePlaneColliderWorld
  float vacuumStretchPercent
  ParticleSystemContainer unloadingFXContainer
  ParticleSystem unloadingFX
  WagonType wagonType
  int lootTypeIndex
  List`1<EntityRef`1<LootContainer>> lootContainers
  Vector3 _oreScale
  float animPercent
  float prevAnimTime
  float decayminutesafterunload
  EntityRef`1<StorageContainer> storageInstance
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void OnFlagsChanged(Flags old, Flags next)
  void OnChildAdded(BaseEntity child)
  void Load(LoadInfo info)
  bool IsEmpty()
  bool TryGetLootType(LootOption& lootOption)
  bool CanBeLooted(BasePlayer player)
  int GetFilledLootAmount()
  void SetVisualOreLevel(float percent)
  void AnimateUnload(float startPercent)
  void UnloadAnimTick()
  void EndUnloadAnim()
  float GetOrePercent()
  void Save(SaveInfo info)
  void DoServerDestroy()
  bool IsLinedUpToUnload(BoxCollider unloaderBounds)
  void FillWithLoot(StorageContainer sc)
  void EmptyOutLoot(StorageContainer sc)
  void BeginUnloadAnimation()
  void EndEmptyProcess()
  StorageContainer GetStorageContainer()
  float GetDecayMinutes(bool hasPassengers)
  bool CanDieFromDecayNow()
  bool AdminFixUp(int tier)
  float MinDistToUnloadingArea(Vector3 point)
  void RPC_Open(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TrainEngine
Наследуется от: TrainCar
Поля:
  Transform leftHandLever
  Transform rightHandLever
  Transform leftHandGrip
  Transform rightHandGrip
  LeverStyle leverStyle
  Canvas monitorCanvas
  RustText monitorText
  LocomotiveExtraVisuals gauges
  float engineForce
  float maxSpeed
  float engineStartupTime
  GameObjectRef fuelStoragePrefab
  float idleFuelPerSec
  float maxFuelPerSec
  ProtectionProperties driverProtection
  bool lootablesAreOnPlatform
  bool mustMountFromPlatform
  VehicleLight[] onLights
  VehicleLight[] headlights
  VehicleLight[] notMovingLights
  VehicleLight[] movingForwardLights
  VehicleLight[] movingBackwardLights
  ParticleSystemContainer fxEngineOn
  ParticleSystemContainer fxLightDamage
  ParticleSystemContainer fxMediumDamage
  ParticleSystemContainer fxHeavyDamage
  ParticleSystemContainer fxEngineTrouble
  BoxCollider engineWorldCol
  float engineDamageToSlow
  float engineDamageTimeframe
  float engineSlowedTime
  float engineSlowedMaxVel
  ParticleSystemContainer[] sparks
  Light[] sparkLights
  TrainEngineAudio trainAudio
  Flags Flag_HazardAhead
  Flags Flag_Horn
  Flags Flag_AltColor
  Flags Flag_EngineSlowed
  VehicleEngineController`1<TrainEngine> engineController
  EngineSpeeds <CurThrottleSetting>k__BackingField
  float HAZARD_CHECK_EVERY
  float HAZARD_DIST_MAX
  float HAZARD_DIST_MIN
  float HAZARD_SPEED_MIN
  float buttonHoldTime
  EngineSpeeds MaxThrottle
  EngineSpeeds MinThrottle
  EngineDamageOverTime engineDamage
  Vector3 engineLocalOffset
  int lastSentLinedUpToUnload
Свойства:
  bool LightsAreOn
  bool CloseToHazard
  bool EngineIsSlowed
  EngineSpeeds CurThrottleSetting
  TrainCarType CarType
  bool networkUpdateOnCompleteTrainChange
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_LightsAreOn()
  bool get_CloseToHazard()
  bool get_EngineIsSlowed()
  EngineSpeeds get_CurThrottleSetting()
  void set_CurThrottleSetting(EngineSpeeds value)
  TrainCarType get_CarType()
  void InitShared()
  void Load(LoadInfo info)
  bool CanBeLooted(BasePlayer player)
  float GetEnginePowerMultiplier(float minPercent)
  float GetThrottleFraction()
  bool IsNearDesiredSpeed(float leeway)
  void SetTrackSelection(TrackSelection trackSelection)
  void SetThrottle(EngineSpeeds throttle)
  int GetFuelAmount()
  bool CanMount(BasePlayer player)
  bool get_networkUpdateOnCompleteTrainChange()
  void ServerInit()
  void OnChildAdded(BaseEntity child)
  void VehicleFixedUpdate()
  void Save(SaveInfo info)
  EntityFuelSystem GetFuelSystem()
  void LightToggle(BasePlayer player)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  bool MeetsEngineRequirements()
  void OnEngineStartFailed()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  float GetThrottleForce()
  bool HasThrottleInput()
  void Hurt(HitInfo info)
  void StopEngine()
  Vector3 GetExplosionPos()
  void IncreaseThrottle()
  void DecreaseThrottle()
  void SetZeroThrottle()
  void ServerFlagsChanged(Flags old, Flags next)
  void CheckForHazards()
  void OnEngineTookHeavyDamage()
  void ResetEngineToNormal()
  float GetCurTopSpeed()
  float GetCurEngineForce()
  void RPC_OpenFuel(RPCMessage msg)
  void .ctor()
  void .cctor()
  void IEngineControllerUser.Invoke(Action action, float time)
  void IEngineControllerUser.CancelInvoke(Action action)
  bool <PlayerServerInput>g__ProcessThrottleInput|83_0(BUTTON button, Action action, <>c__DisplayClass83_0& )
--------------------------------------------------
Класс: TreeEntity
Наследуется от: ResourceEntity
Поля:
  bool fallOnKilled
  float fallDuration
  GameObjectRef fallStartSound
  GameObjectRef fallImpactSound
  GameObjectRef fallImpactParticles
  SoundDefinition fallLeavesLoopDef
  Boolean[] usedHeights
  bool impactSoundPlayed
  float treeDistanceUponFalling
  GameObjectRef prefab
  bool hasBonusGame
  GameObjectRef bonusHitEffect
  GameObjectRef bonusHitSound
  Collider serverCollider
  Collider clientCollider
  SoundDefinition smallCrackSoundDef
  SoundDefinition medCrackSoundDef
  float lastAttackDamage
  BaseEntity xMarker
  int currentBonusLevel
  float lastDirection
  float lastHitTime
  int lastHitMarkerIndex
  float nextBirdTime
  UInt32 birdCycleIndex
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  float BoundsPadding()
  void ServerInit()
  void DoServerDestroy()
  bool DidHitMarker(HitInfo info)
  void StartBonusGame()
  void StopBonusGame()
  bool BonusActive()
  void DoBirds()
  void OnAttacked(HitInfo info)
  void CleanupMarker()
  Collider GetCollider()
  void OnKilled(HitInfo info)
  void DelayedKill()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: TreeManager
Наследуется от: BaseEntity
Поля:
  ListHashSet`1<BaseEntity> entities
  TreeManager server
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Vector3 ProtoHalf3ToVec3(Half3 half3)
  Half3 Vec3ToProtoHalf3(Vector3 vec3)
  int GetTreeCount()
  void ServerInit()
  void OnTreeDestroyed(BaseEntity billboardEntity)
  void OnTreeSpawned(BaseEntity billboardEntity)
  void ExtractTreeNetworkData(BaseEntity billboardEntity, Tree tree)
  void SendSnapshot(BasePlayer player)
  void SERVER_RequestTrees(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Tugboat
Наследуется от: MotorRowboat
Поля:
  Canvas monitorCanvas
  RustText fuelText
  RustText speedText
  ParticleSystemContainer exhaustEffect
  SoundDefinition lightsToggleSound
  Transform steeringWheelLeftHandTarget
  Transform steeringWheelRightHandTarget
  SonarSystem sonar
  TugboatSounds tugboatSounds
  CanvasGroup canvasGroup
  EmissionToggle emissionToggle
  AnimationCurve emissionCurve
  ParticleSystemContainer fxLightDamage
  ParticleSystemContainer fxMediumDamage
  ParticleSystemContainer fxHeavyDamage
  GameObject heavyDamageLights
  TriggerParent parentTrigger
  float tugcorpseseconds
  float tugdecayminutes
  float tugdecaystartdelayminutes
Свойства:
  bool LightsAreOn
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_LightsAreOn()
  void Load(LoadInfo info)
  float MaxVelocity()
  void VehicleFixedUpdate()
  void Save(SaveInfo info)
  void BoatDecay()
  int StartingFuelUnits()
  void LightToggle(BasePlayer player)
  void EnterCorpseState()
  bool AnyPlayersOnBoat()
  bool SupportsChildDeployables()
  bool ForceDeployableSetParent()
  bool CanPushNow(BasePlayer pusher)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: VehicleModuleCamper
Наследуется от: VehicleModuleSeating
Поля:
  GameObjectRef SleepingBagEntity
  Transform[] SleepingBagPoints
  GameObjectRef LockerEntity
  Transform LockerPoint
  GameObjectRef BbqEntity
  Transform BbqPoint
  GameObjectRef StorageEntity
  Transform StoragePoint
  EntityRef`1<BaseOven> activeBbq
  EntityRef`1<Locker> activeLocker
  EntityRef`1<StorageContainer> activeStorage
  bool wasLoaded
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  void ModuleAdded(BaseModularVehicle vehicle, int firstSocketIndex)
  Vector3 ModifySeatPositionLocalSpace(int index, Vector3 desiredPos)
  void PostServerLoad()
  void Spawn()
  void OnItemAddedRemoved(Item item, bool add)
  bool CanBeMovedNowOnVehicle()
  void PostConditionalRefresh()
  CamperSeatConfig GetSeatConfig()
  void Save(SaveInfo info)
  void RPC_OpenLocker(RPCMessage msg)
  void RPC_OpenStorage(RPCMessage msg)
  void DoServerDestroy()
  IItemContainerEntity GetContainer()
  string Admin_Who()
  bool CanBeLooted(BasePlayer player)
  bool IsOnThisModule(BasePlayer player)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: VehicleModuleSeating
Наследуется от: BaseVehicleModule
Поля:
  ProtectionProperties passengerProtection
  ModularCarCodeLockVisuals codeLockVisuals
  Seating seating
  Vector3 steerAngle
  Vector3 accelAngle
  Vector3 brakeAngle
  Vector3 speedometerAngle
  Vector3 fuelAngle
  SoundDefinition hornLoop
  SoundDefinition hornStart
  Flags FLAG_HORN
  float steerPercent
  float throttlePercent
  float brakePercent
  Nullable`1<bool> checkEngineLightOn
  Nullable`1<bool> fuelLightOn
  ModularCar <Car>k__BackingField
  IVehicleLockUser VehicleLockUser
  MaterialPropertyBlock dashboardLightPB
  int emissionColorID
  BasePlayer hornPlayer
Свойства:
  bool HasSeating
  ModularCar Car
  bool IsOnACar
  bool IsOnAVehicleLockUser
  bool DoorsAreLockable
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_HasSeating()
  ModularCar get_Car()
  void set_Car(ModularCar value)
  bool get_IsOnACar()
  bool get_IsOnAVehicleLockUser()
  bool get_DoorsAreLockable()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool IsOnThisModule(BasePlayer player)
  bool HasADriverSeat()
  void ModuleAdded(BaseModularVehicle vehicle, int firstSocketIndex)
  void ModuleRemoved()
  bool PlayerCanDestroyLock(BasePlayer player)
  BaseVehicleSeat GetSeatAtIndex(int index)
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void OnPlayerDismountedVehicle(BasePlayer player)
  void RPC_DestroyLock(RPCMessage msg)
  Vector3 ModifySeatPositionLocalSpace(int index, Vector3 desiredPos)
  void OnEngineStateChanged(EngineState<GroundVehicle> oldState, EngineState<GroundVehicle> newState)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: VehicleModuleStorage
Наследуется от: VehicleModuleSeating
Поля:
  Storage storage
  EntityRef storageUnitInstance
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  IItemContainerEntity GetContainer()
  void Load(LoadInfo info)
  void Spawn()
  void PostServerLoad()
  void OnItemAddedRemoved(Item item, bool add)
  void NonUserSpawn()
  void DoServerDestroy()
  void Save(SaveInfo info)
  void CreateStorageEntity()
  void DestroyStorageEntity()
  void RPC_Open(RPCMessage msg)
  bool TryOpen(BasePlayer player)
  bool CanBeMovedNowOnVehicle()
  void RPC_TryOpenWithKeycode(RPCMessage msg)
  void .ctor()
--------------------------------------------------
Класс: VehicleModuleTaxi
Наследуется от: VehicleModuleStorage
Поля:
  SoundDefinition kickButtonSound
  SphereCollider kickButtonCollider
  float maxKickVelocity
Свойства:
  Vector3 KickButtonPos
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Vector3 get_KickButtonPos()
  bool CanKickPassengers(BasePlayer player)
  void RPC_KickPassengers(RPCMessage msg)
  void KickPassengers()
  void .ctor()
--------------------------------------------------
Класс: VehiclePrivilege
Наследуется от: BaseEntity
Поля:
  List`1<PlayerNameID> authorizedPlayers
  Flags Flag_MaxAuths
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  bool IsAuthed(BasePlayer player)
  bool IsAuthed(ulong userID)
  bool AnyAuthed()
  void Save(SaveInfo info)
  void PostSave(SaveInfo info)
  void Load(LoadInfo info)
  bool IsDriver(BasePlayer player)
  bool AtMaxAuthCapacity()
  void UpdateMaxAuthCapacity()
  void AddSelfAuthorize(RPCMessage rpc)
  void AddPlayer(BasePlayer player)
  void RemoveSelfAuthorize(RPCMessage rpc)
  void ClearList(RPCMessage rpc)
  void .ctor()
--------------------------------------------------
Класс: VendingMachine
Наследуется от: StorageContainer
Поля:
  Phrase WaitForVendingMessage
  GameObjectRef adminMenuPrefab
  string customerPanel
  SellOrderContainer sellOrders
  SoundPlayer buySound
  string shopName
  GameObjectRef mapMarkerPrefab
  ItemDefinition blueprintBaseDef
  Action fullUpdateCached
  BasePlayer vend_Player
  int vend_sellOrderID
  int vend_numberOfTransactions
  bool transactionActive
  VendingMachineMapMarker myMarker
  bool industrialItemIncoming
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void ServerInit()
  void DestroyShared()
  void OnItemAddedOrRemoved(Item item, bool added)
  void FullUpdate()
  void OnInventoryDirty()
  void RefreshSellOrderStockLevel(ItemDefinition itemDef)
  bool OutOfStock()
  void PostServerLoad()
  void UpdateEmptyFlag()
  void PlayerStoppedLooting(BasePlayer player)
  void InstallDefaultSellOrders()
  bool HasVendingSounds()
  float GetBuyDuration()
  void SetPendingOrder(BasePlayer buyer, int sellOrderId, int numberOfTransactions)
  void ClearPendingOrder()
  void BuyItem(RPCMessage rpc)
  void CompletePendingOrder()
  void TransactionStart(RPCMessage rpc)
  void GetItemsToSell(SellOrder sellOrder, List`1<Item> items)
  bool DoTransaction(BasePlayer buyer, int sellOrderId, int numberOfTransactions, ItemContainer targetContainer, Action`2<BasePlayer, Item> onCurrencyRemoved, Action`2<BasePlayer, Item> onItemPurchased, MarketTerminal droneMarketTerminal)
  void RecordSaleAnalytics(Item itemSold)
  void TakeCurrencyItem(Item takenCurrencyItem)
  void GiveSoldItem(Item soldItem, BasePlayer buyer)
  void SendSellOrders(BasePlayer player)
  void RPC_Broadcast(RPCMessage msg)
  void RPC_UpdateShopName(RPCMessage msg)
  void UpdateMapMarker()
  void RPC_OpenShop(RPCMessage msg)
  void RPC_OpenAdmin(RPCMessage msg)
  void OnIndustrialItemTransferBegins()
  void OnIndustrialItemTransferEnds()
  bool CanAcceptItem(Item item, int targetSlot)
  bool CanMoveFrom(BasePlayer player, Item item)
  bool CanOpenLootPanel(BasePlayer player, string panelName)
  void RPC_DeleteSellOrder(RPCMessage msg)
  void RPC_RotateVM(RPCMessage msg)
  void RPC_AddSellOrder(RPCMessage msg)
  void AddSellOrder(int itemToSellID, int itemToSellAmount, int currencyToUseID, int currencyAmount, byte bpState)
  void RefreshAndSendNetworkUpdate()
  void UpdateOrCreateSalesSheet()
  bool CanRotate()
  bool IsBroadcasting()
  bool IsInventoryEmpty()
  bool IsVending()
  bool PlayerBehind(BasePlayer player)
  bool PlayerInfront(BasePlayer player)
  bool CanPlayerAdmin(BasePlayer player)
  bool SupportsChildDeployables()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WantedPoster
Наследуется от: DecayEntity
Поля:
  UInt32 imageCrc
  ulong playerId
  string playerName
  MeshRenderer PhotoImage
  RustText WantedName
  GameObjectRef AssignDialog
  Flags HasTarget
  EffectMode EffectMode
  List`1<ulong> <EditingHistory>k__BackingField
Свойства:
  UInt32[] GetContentCRCs
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
  Vector2i TextureSize
  int TextureCount
  NetworkableId NetworkID
  Type FileType
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void UpdatePoster(RPCMessage msg)
  void ClearPlayer(RPCMessage msg)
  void SetTextureCRCs(UInt32[] crcs)
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  UGCType get_ContentType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool CanUpdateSign(BasePlayer player)
  Vector2i get_TextureSize()
  int get_TextureCount()
  UInt32[] GetTextureCRCs()
  NetworkableId get_NetworkID()
  Type get_FileType()
  void .ctor()
--------------------------------------------------
Класс: WaterInflatable
Наследуется от: BaseMountable
Поля:
  Transform centerOfMass
  float forwardPushForce
  float rearPushForce
  float rotationForce
  float maxSpeed
  float maxPaddleFrequency
  SoundDefinition paddleSfx
  SoundDefinition smallPlayerMovementSound
  SoundDefinition largePlayerMovementSound
  BlendedSoundLoops waterLoops
  float waterSoundSpeedDivisor
  float additiveDownhillVelocity
  GameObjectRef handSplashForwardEffect
  GameObjectRef handSplashBackEffect
  GameObjectRef footSplashEffect
  float animationLerpSpeed
  Transform smoothedEyePosition
  float smoothedEyeSpeed
  Buoyancy buoyancy
  bool driftTowardsIsland
  GameObjectRef mountEffect
  float handSplashOffset
  float velocitySplashMultiplier
  Vector3 modifyEyeOffset
  float inheritVelocityMultiplier
  TimeSince lastPaddle
  ParticleSystem[] movingParticleSystems
  float movingParticlesThreshold
  Transform headSpaceCheckPosition
  float headSpaceCheckRadius
  TimeSince landFacingCheck
  bool isFacingLand
  float landPushAcceleration
  TimeSince inPoolCheck
  bool isInPool
  Vector3 lastPos
  Vector3 lastClipCheckPosition
  bool forceClippingCheck
  bool prevSleeping
Свойства:
  bool IsSummerDlcVehicle
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void VehicleFixedUpdate()
  void OnPlayerMounted()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void PaddleTurn(PaddleDirection direction)
  float WaterFactorForPlayer(BasePlayer player)
  void OnCollision(Collision collision, BaseEntity hitEntity)
  bool IsOutOfWaterServer()
  void OnPoolDestroyed()
  void WakeUp()
  bool get_IsSummerDlcVehicle()
  void OnObjects(TriggerNotify trigger)
  void OnEmpty()
  void .ctor()
--------------------------------------------------
Класс: WaterWell
Наследуется от: LiquidContainer
Поля:
  Animator animator
  Flags Pumping
  Flags WaterFlow
  float caloriesPerPump
  float pressurePerPump
  float pressureForProduction
  float currentPressure
  int waterPerPump
  GameObject waterLevelObj
  float waterLevelObjFullOffset
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ServerInit()
  void RPC_Pump(RPCMessage msg)
  void StopPump()
  void OnItemAddedOrRemoved(Item item, bool added)
  void Produce()
  void ScheduleTapOff()
  void TapOff()
  void ReducePressure()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  float GetWaterAmount()
  void .ctor()
--------------------------------------------------
Класс: WeaponRack
Наследуется от: StorageContainer
Поля:
  Phrase textLoadAmmos
  RackType Type
  float GridCellSize
  bool SetGridCellSizeFromCollision
  int Capacity
  bool UseColliders
  int GridCellCountX
  int GridCellCountY
  BoxCollider Collision
  Transform Anchor
  Transform SmallPegPrefab
  Transform LargePegPrefab
  GameObjectRef LightPrefab
  Transform[] LightPoints
  WeaponRackSlot[] gridSlots
  WeaponRackSlot[] gridCellSlotReferences
  int ForceItemRotation
  bool CreatePegs
  SpecialRackType CustomRackType
  Transform CustomCenter
  HashSet`1<int> usedSlots
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void InitShared()
  void ClearGridCellContentsRefs()
  void SetupSlot(WeaponRackSlot slot)
  void ClearSlot(WeaponRackSlot slot)
  void SetGridCellContents(WeaponRackSlot slot, bool clear)
  void Load(LoadInfo info)
  WeaponRackSlot GetWeaponAtIndex(int gridIndex)
  Vector2Int GetXYForIndex(int index)
  Vector2Int GetWeaponSize(WorldModelRackMountConfig config, int rotation)
  Vector2Int GetWeaponStart(Vector2Int targetXY, Vector2Int size, bool clamp)
  bool CanAcceptWeaponType(WorldModelRackMountConfig weaponConfig)
  int GetBestPlacementCellIndex(Vector2Int targetXY, WorldModelRackMountConfig config, int rotation, WeaponRackSlot ignoreSlot)
  int GetGridIndexAtPosition(Vector3 pos)
  bool GridCellsFree(WorldModelRackMountConfig config, int gridIndex, int rotation, WeaponRackSlot ignoreGridSlot)
  int GetGridCellIndex(int x, int y)
  bool GridCellFree(int index, WeaponRackSlot ignoreSlot)
  bool ItemIsRackMountable(Item item)
  void ServerInit()
  void SpawnLightSubEntities()
  bool InventoryItemFilter(Item item, int targetSlot)
  void Save(SaveInfo info)
  void ReqSwapWeapon(RPCMessage msg)
  void SwapPlayerWeapon(BasePlayer player, int gridCellIndex, int takeFromBeltIndex, int rotation)
  void ReqTakeWeapon(RPCMessage msg)
  void GivePlayerWeapon(BasePlayer player, int mountSlotIndex, int playerBeltIndex, bool tryHold, bool sendUpdate)
  void ReqTakeAll(RPCMessage msg)
  void GivePlayerAllWeapons(BasePlayer player, int mountSlotIndex)
  void ReqUnloadWeapon(RPCMessage msg)
  void UnloadWeapon(BasePlayer player, int mountSlotIndex)
  void ReqMountWeapon(RPCMessage msg)
  void MountWeapon(BasePlayer player, int gridCellIndex, int rotation)
  void SetSlotItem(WeaponRackSlot slot, Item item, int gridCellIndex, int rotation)
  void SetSlotAmmoDetails(WeaponRackSlot slot, Item item)
  bool MountWeapon(Item item, BasePlayer player, int gridCellIndex, int rotation, bool sendUpdate)
  void PlayMountSound(int itemID)
  void LoadWeaponAmmo(RPCMessage msg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WheelSwitch
Наследуется от: IOEntity
Поля:
  Transform wheelObj
  float rotateSpeed
  Flags BeingRotated
  Flags RotatingLeft
  Flags RotatingRight
  float rotateProgress
  Animator animator
  float kineticEnergyPerSec
  BasePlayer rotatorPlayer
  float progressTickRate
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetIOState()
  void BeginRotate(RPCMessage msg)
  void CancelPlayerRotation()
  void RotateProgress()
  void SetRotateProgress(float newValue)
  void StoppedRotatingCheck()
  void CancelRotate(RPCMessage msg)
  void Powered()
  float IOInput(IOEntity from, IOType inputType, float inputAmount, int slot)
  bool IsBeingRotated()
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: WireTool
Наследуется от: HeldEntity
Поля:
  Sprite InputSprite
  Sprite OutputSprite
  Sprite ClearSprite
  float maxWireLength
  int maxLineNodes
  GameObjectRef plugEffect
  SoundDefinition clearStartSoundDef
  SoundDefinition clearSoundDef
  GameObjectRef ioLine
  IOType wireType
  float RadialMenuHoldTime
  float disconnectDelay
  float clearDelay
  float IndustrialWallOffset
  Phrase Default
  Phrase DefaultDesc
  Phrase Red
  Phrase RedDesc
  Phrase Green
  Phrase GreenDesc
  Phrase Blue
  Phrase BlueDesc
  Phrase Yellow
  Phrase YellowDesc
  Phrase LightBlue
  Phrase LightBlueDesc
  Phrase Orange
  Phrase OrangeDesc
  Phrase Purple
  Phrase PurpleDesc
  Phrase White
  Phrase WhiteDesc
  Phrase Pink
  Phrase PinkDesc
  PendingPlug_t pending
  float IndustrialThickness
Свойства:
  bool CanChangeColours
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  bool get_CanChangeColours()
  void ClearPendingPlug()
  bool HasPendingPlug()
  bool PendingPlugIsInput()
  bool PendingPlugIsType(IOType type)
  bool PendingPlugIsOutput()
  Vector3 PendingPlugWorldPos()
  bool CanPlayerUseWires(BasePlayer player)
  bool CanModifyEntity(BasePlayer player, IOEntity ent)
  bool PendingPlugRoot()
  void TryClear(RPCMessage msg)
  void MakeConnection(RPCMessage msg)
  void SetPlugged(RPCMessage msg)
  void RequestClear(RPCMessage msg)
  bool AttemptClearSlot(BaseNetworkable clearEnt, BasePlayer ply, int clearIndex, bool isInput)
  void RequestChangeColor(RPCMessage msg)
  WireColour IntToColour(int i)
  bool ValidateLine(List`1<Vector3> lineList, IOEntity inputEntity, IOEntity outputEntity, BasePlayer byPlayer, int outputIndex)
  bool VerifyLineOfSight(List`1<Vector3> positions, Matrix4x4 localToWorldSpace)
  bool VerifyLineOfSight(Vector3 worldSpaceA, Vector3 worldSpaceB)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Workbench
Наследуется от: StorageContainer
Поля:
  int blueprintSlot
  int experimentSlot
  bool Static
  int Workbenchlevel
  LootSpawn experimentalItems
  GameObjectRef experimentStartEffect
  GameObjectRef experimentSuccessEffect
  ItemDefinition experimentResource
  TechTreeData techTree
  bool supportsIndustrialCrafter
  ItemDefinition blueprintBaseDef
  ItemDefinition pendingBlueprint
  bool creatingBlueprint
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  int GetScrapForExperiment()
  bool IsWorking()
  bool CanPickup(BasePlayer player)
  void RPC_TechTreeUnlock(RPCMessage msg)
  ItemDefinition GetBlueprintTemplate()
  void RPC_BeginExperiment(RPCMessage msg)
  void Save(SaveInfo info)
  void OnKilled(HitInfo info)
  int GetAvailableExperimentResources()
  Item GetExperimentResourceItem()
  void ExperimentComplete()
  void PostServerLoad()
  void ServerInit()
  bool ItemFilter(Item item, int targetSlot)
  bool SupportsChildDeployables()
  void .ctor()
--------------------------------------------------
Класс: WorldItem
Наследуется от: BaseEntity
Поля:
  bool allowPickup
  Item item
  float eatSeconds
  float caloriesPerSecond
  bool _isInvokingSendItemUpdate
Свойства:
  TraitFlag Traits
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  Item GetItem()
  void InitializeItem(Item in_item)
  void RemoveItem()
  void DestroyItem()
  void OnItemDirty(Item in_item)
  void Load(LoadInfo info)
  TraitFlag get_Traits()
  void Eat(BaseNpc baseNpc, float timeSpent)
  string ToString()
  void ServerInit()
  void DoItemNetworking()
  void SendItemUpdate()
  void Pickup(RPCMessage msg)
  void Save(SaveInfo info)
  void DoServerDestroy()
  void SwitchParent(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: XMasRefill
Наследуется от: BaseEntity
Поля:
  GameObjectRef[] giftPrefabs
  List`1<BasePlayer> goodKids
  List`1<Stocking> stockings
  AudioSource bells
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  float GiftRadius()
  int GiftsPerPlayer()
  int GiftSpawnAttempts()
  void ServerInit()
  void SendBells()
  void RemoveMe()
  void DistributeLoot()
  bool DropToGround(Vector3& pos)
  bool DistributeGiftsForPlayer(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ZiplineLaunchPoint
Наследуется от: BaseEntity
Поля:
  Transform LineDeparturePoint
  LineRenderer ZiplineRenderer
  Collider MountCollider
  BoxCollider[] BuildingBlocks
  BoxCollider[] PointBuildingBlocks
  SpawnableBoundsBlocker[] SpawnableBoundsBlockers
  GameObjectRef MountableRef
  float LineSlackAmount
  bool RegenLine
  List`1<Vector3> ziplineTargets
  List`1<Vector3> linePoints
  GameObjectRef ArrivalPointRef
Свойства:
Методы:
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void ResetState()
  void PostMapEntitySpawn()
  void FindZiplineTarget(List`1& foundPositions)
  bool CheckLineOfSight(Vector3 from, Vector3 to)
  void MountPlayer(RPCMessage msg)
  void ClearBusy()
  void Save(SaveInfo info)
  void report(Arg arg)
  void Load(LoadInfo info)
  void CalculateZiplinePoints(List`1<Vector3> targets, List`1& points)
  Vector3 CalculateLineMidPoint(Vector3 start, Vector3 endPoint)
  void UpdateBuildingBlocks()
  bool IsPlayerFacingValidDirection(BasePlayer ply)
  float GetLineLength()
  void .ctor()
  void <UpdateBuildingBlocks>g__SetUpBuildingBlock|24_0(BoxCollider longCollider, BoxCollider pointCollider, SpawnableBoundsBlocker spawnBlocker, int startIndex, int endIndex)
--------------------------------------------------
Класс: ZiplineArrivalPoint
Наследуется от: BaseEntity
Поля:
  LineRenderer Line
  Vector3[] linePositions
Свойства:
Методы:
  void Save(SaveInfo info)
  void SetPositions(List`1<Vector3> points)
  void Load(LoadInfo info)
  void ResetState()
  void .ctor()
--------------------------------------------------
Класс: ZiplineAudio
Наследуется от: MonoBehaviour
Поля:
  ZiplineMountable zipline
  SoundDefinition movementLoopDef
  SoundDefinition frictionLoopDef
  SoundDefinition sparksLoopDef
  AnimationCurve movementGainCurve
  AnimationCurve movementPitchCurve
  AnimationCurve frictionGainCurve
  AnimationCurve sparksGainCurve
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ZiplineMountable
Наследуется от: BaseMountable
Поля:
  float MoveSpeed
  float ForwardAdditive
  CapsuleCollider ZipCollider
  Transform ZiplineGrabRoot
  Transform LeftHandIkPoint
  Transform RightHandIkPoint
  float SpeedUpTime
  bool EditorHoldInPlace
  List`1<Vector3> linePoints
  Flags PushForward
  AnimationCurve MountPositionCurve
  AnimationCurve MountRotationCurve
  float MountEaseInTime
  Flags ShowHandle
  float additiveValue
  float currentTravelDistance
  TimeSince mountTime
  bool hasEnded
  List`1<Collider> ignoreColliders
  Vector3 lastSafePosition
  Vector3 startPosition
  Vector3 endPosition
  Quaternion startRotation
  Quaternion endRotation
  float elapsedMoveTime
  bool isAnimatingIn
Свойства:
Методы:
  Vector3 ProcessBezierMovement(float distanceToTravel)
  Vector3 GetLineEndPoint(bool applyDismountOffset)
  Vector3 GetNextLinePoint(Transform forTransform)
  void ResetState()
  float MaxVelocity()
  void SetDestination(List`1<Vector3> targetLinePoints, Vector3 lineStartPos, Quaternion lineStartRot)
  void Update()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void EndZipline()
  void OnPlayerDismounted(BasePlayer player)
  bool ValidDismountPosition(BasePlayer player, Vector3 disPos)
  void Save(SaveInfo info)
  void MovePlayerToPosition()
  void OnFlagsChanged(Flags old, Flags next)
  void .ctor()
--------------------------------------------------
Класс: ZiplineTarget
Наследуется от: MonoBehaviour
Поля:
  Transform Target
  bool IsChainPoint
  float MonumentConnectionDotMin
  float MonumentConnectionDotMax
Свойства:
Методы:
  bool IsValidPosition(Vector3 position)
  bool IsValidChainPoint(Vector3 from, Vector3 to)
  void .ctor()
--------------------------------------------------
Класс: ShopFrontLootPanel
Наследуется от: LootPanel
Поля:
  Text playerLabelA
  Text playerLabelB
  GameObject confirmButton
  GameObject confirmHelp
  GameObject denyButton
  GameObject denyHelp
  GameObject waitingText
  GameObject exchangeInProgressImage
  Phrase acceptedPhrase
  Phrase noOnePhrase
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BurstClothCollider
Наследуется от: MonoBehaviour
Поля:
  float Height
  float Radius
Свойства:
Методы:
  CapsuleParams GetParams()
  void .ctor()
--------------------------------------------------
Класс: BurstClothHitBoxCollision
Наследуется от: BurstCloth
Поля:
  bool UseLocalGravity
  float GravityStrength
  float DefaultLength
  float MountedLengthMultiplier
  float DuckedLengthMultiplier
  float CorpseLengthMultiplier
  Transform UpAxis
  Transform ColliderRoot
  String[] IgnoreKeywords
Свойства:
Методы:
  void GatherColliders(List`1<CapsuleParams> colliders)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: GhostSheetSystemSpaceUpdater
Наследуется от: MonoBehaviour
Поля:
  EZSoftBone[] ezSoftBones
  BasePlayer player
Свойства:
Методы:
  void Awake()
  void Update()
  void SetSimulateSpace(Transform transform, bool collisionEnabled)
  void .ctor()
--------------------------------------------------
Класс: NVGCamera
Наследуется от: FacepunchBehaviour
Поля:
  NVGCamera instance
  PostProcessVolume postProcessVolume
  GameObject lights
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NVGColorCorrection
Наследуется от: ColorCorrectionCurves
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NVGEffect
Наследуется от: PostEffectsBase
Поля:
  ColorCorrectionParams ColorCorrection1
  ColorCorrectionParams ColorCorrection2
  NoiseAndGrainParams NoiseAndGrain
  Texture2D rgbChannelTex1
  Texture2D rgbChannelTex2
  bool updateTexturesOnStartup
  Texture2D NoiseTexture
  float NOISE_TILE_AMOUNT
  Shader Shader
  Material material
Свойства:
Методы:
  void Awake()
  void OnDestroy()
  void UpdateColorCorrectionTexture(ColorCorrectionParams param, Texture2D& tex)
  void UpdateTextures()
  bool CheckResources()
  bool IsActive()
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: NVGToggle
Наследуется от: ItemEventFlag
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IdentifierConfig
Наследуется от: UIDialog
Поля:
  IRemoteControllable rc
  InputField input
  string id
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RemoteControllableControls
Наследуется от: Enum
Поля:
  int value__
  RemoteControllableControls None
  RemoteControllableControls Movement
  RemoteControllableControls Mouse
  RemoteControllableControls SprintAndDuck
  RemoteControllableControls Fire
  RemoteControllableControls Reload
  RemoteControllableControls Crosshair
Свойства:
Методы:
--------------------------------------------------
Класс: IRemoteControllable
Поля:
Свойства:
  bool RequiresMouse
  float MaxRange
  RemoteControllableControls RequiredControls
  Nullable`1<CameraViewerId> ControllingViewerId
  bool CanPing
Методы:
  Transform GetEyes()
  float GetFovScale()
  BaseEntity GetEnt()
  string GetIdentifier()
  float Health()
  float MaxHealth()
  void UpdateIdentifier(string newID, bool clientSend)
  void RCSetup()
  void RCShutdown()
  bool CanControl(ulong playerID)
  bool get_RequiresMouse()
  float get_MaxRange()
  RemoteControllableControls get_RequiredControls()
  Nullable`1<CameraViewerId> get_ControllingViewerId()
  void UserInput(InputState inputState, CameraViewerId viewerID)
  bool InitializeControl(CameraViewerId viewerID)
  void StopControl(CameraViewerId viewerID)
  bool get_CanPing()
--------------------------------------------------
Класс: CameraViewerId
Наследуется от: ValueType
Поля:
  ulong SteamId
  long ConnectionId
Свойства:
Методы:
  void .ctor(ulong steamId, long connectionId)
  bool Equals(CameraViewerId other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CameraViewerId left, CameraViewerId right)
  bool op_Inequality(CameraViewerId left, CameraViewerId right)
--------------------------------------------------
Класс: ClanTable
Наследуется от: BaseCombatEntity
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Composter
Наследуется от: StorageContainer
Поля:
  ItemDefinition FertilizerDef
  bool CompostEntireStack
  float fertilizerProductionProgress
Свойства:
  float UpdateInterval
Методы:
  float get_UpdateInterval()
  void ServerInit()
  bool InventoryItemFilter(Item item, int targetSlot)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool ItemIsFertilizer(Item item)
  void UpdateComposting()
  void CompostItem(Item item)
  void ProduceFertilizer(int amount)
  void .ctor()
--------------------------------------------------
Класс: ComputerMenu
Наследуется от: UIDialog
Поля:
  RectTransform bookmarkContainer
  GameObject bookmarkPrefab
  List`1<RCBookmarkEntry> activeEntries
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RCBookmarkEntry
Наследуется от: MonoBehaviour
Поля:
  string <identifier>k__BackingField
  ComputerMenu owner
  RectTransform connectButton
  RectTransform disconnectButton
  RawImage onlineIndicator
  RawImage offlineIndicator
  GameObject selectedindicator
  Image backgroundImage
  Color selectedColor
  Color activeColor
  Color inactiveColor
  Text nameLabel
  bool <isSelected>k__BackingField
  bool <isControlling>k__BackingField
  EventTrigger eventTrigger
Свойства:
  string identifier
  bool isSelected
  bool isControlling
Методы:
  string get_identifier()
  void set_identifier(string value)
  bool get_isSelected()
  void set_isSelected(bool value)
  bool get_isControlling()
  void set_isControlling(bool value)
  void .ctor()
--------------------------------------------------
Класс: IRemoteControllableClientCallbacks
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: RCMenu
Наследуется от: ComputerMenu
Поля:
  Image backgroundOpaque
  InputField newBookmarkEntryField
  NeedsCursor needsCursor
  float hiddenOffset
  RectTransform devicesPanel
  Vector3 initialDevicesPosition
  bool isControllingCamera
  CanvasGroup overExposure
  CanvasGroup interference
  float interferenceFadeDuration
  float rangeInterferenceScale
  Text timeText
  Text watchedDurationText
  Text deviceNameText
  Text noSignalText
  Text healthText
  GameObject healthBarParent
  RectTransform healthBarBackground
  RectTransform healthBarFill
  SoundDefinition bookmarkPressedSoundDef
  GameObject[] hideIfStatic
  GameObject readOnlyIndicator
  GameObject aimCrosshair
  GameObject generalCrosshair
  float fogOverrideDensity
  float autoTurretFogDistance
  float autoTurretDotBaseScale
  float autoTurretDotGrowScale
  PingManager PingManager
  ScrollRectSettable scrollRect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Drone
Наследуется от: RemoteControlEntity
Поля:
  float maxControlRange
  float movementSpeedOverride
  float altitudeSpeedOverride
  float windTimeDivisor
  float windPositionDivisor
  float windPositionScale
  float windRotationMultiplier
  float windLerpSpeed
  Flags Flag_ThrottleUp
  Flags Flag_Flying
  Rigidbody body
  Transform modelRoot
  bool killInWater
  bool enableGrounding
  bool keepAboveTerrain
  float groundTraceDist
  float groundCheckInterval
  float altitudeAcceleration
  float movementAcceleration
  float yawSpeed
  float uprightSpeed
  float uprightPrediction
  float uprightDot
  float leanWeight
  float leanMaxVelocity
  float hurtVelocityThreshold
  float hurtDamagePower
  float collisionDisableTime
  float pitchMin
  float pitchMax
  float pitchSensitivity
  bool disableWhenHurt
  float disableWhenHurtChance
  float playerCheckInterval
  float playerCheckRadius
  float deployYOffset
  SoundDefinition movementLoopSoundDef
  SoundDefinition movementStartSoundDef
  SoundDefinition movementStopSoundDef
  AnimationCurve movementLoopPitchCurve
  float movementSpeedReference
  float propellerMaxSpeed
  float propellerAcceleration
  Transform propellerA
  Transform propellerB
  Transform propellerC
  Transform propellerD
  float pitch
  Nullable`1<Vector3> targetPosition
  DroneInputState currentInput
  float lastInputTime
  double lastCollision
  TimeSince lastGroundCheck
  bool isGrounded
  RealTimeSinceEx lastPlayerCheck
Свойства:
  bool RequiresMouse
  float MaxRange
  bool CanAcceptInput
  bool PositionTickFixedTime
Методы:
  bool get_RequiresMouse()
  float get_MaxRange()
  void Spawn()
  bool get_CanAcceptInput()
  void StopControl(CameraViewerId viewerID)
  void UserInput(InputState inputState, CameraViewerId viewerID)
  void Update_Server()
  void FixedUpdate()
  void OnCollisionEnter(Collision collision)
  void OnCollisionStay()
  void Hurt(HitInfo info)
  float GetNetworkTime()
  bool get_PositionTickFixedTime()
  Vector3 GetLocalVelocityServer()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void Update()
  bool CanChangeID(BasePlayer player)
  bool CanPickup(BasePlayer player)
  void OnPickedUpPreItemMove(Item createdItem, BasePlayer player)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  bool ShouldNetworkOwnerInfo()
  bool ShouldInheritNetworkGroup()
  float MaxVelocity()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: DropBox
Наследуется от: Mailbox
Поля:
  Transform EyePoint
Свойства:
Методы:
  bool PlayerIsOwner(BasePlayer player)
  bool PlayerBehind(BasePlayer player)
  bool PlayerInfront(BasePlayer player)
  bool SupportsChildDeployables()
  void .ctor()
--------------------------------------------------
Класс: Elevator
Наследуется от: IOEntity
Поля:
  Transform LiftRoot
  GameObjectRef LiftEntityPrefab
  GameObjectRef IoEntityPrefab
  Transform IoEntitySpawnPoint
  GameObject FloorBlockerVolume
  float LiftSpeedPerMetre
  GameObject[] PoweredObjects
  MeshRenderer PoweredMesh
  Color PoweredLightColour
  Color UnpoweredLightColour
  SkinnedMeshRenderer[] CableRenderers
  LODGroup CableLod
  Transform CableRoot
  float LiftMoveDelay
  int <Floor>k__BackingField
  Flags TopFloorFlag
  Flags ElevatorPowered
  ElevatorLift liftEntity
  IOEntity ioEntity
  Int32[] previousPowerAmount
Свойства:
  bool IsStatic
  int Floor
  bool IsTop
  float FloorHeight
Методы:
  bool get_IsStatic()
  int get_Floor()
  void set_Floor(int value)
  bool get_IsTop()
  void Load(LoadInfo info)
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void CallElevator()
  void Server_RaiseLowerElevator(Direction dir, bool goTopBottom)
  bool RequestMoveLiftTo(int targetFloor, Single& timeToTravel, Elevator fromElevator)
  void OpenLiftDoors()
  void OnMoveBegin()
  float TimeToTravelDistance(float distance)
  Vector3 GetWorldSpaceFloorPosition(int targetFloor)
  float get_FloorHeight()
  void ClearBusy()
  bool IsValidFloor(int targetFloor)
  Elevator GetElevatorInDirection(Direction dir)
  void UpdateChildEntities(bool isTop)
  void FindExistingIOChild()
  void Save(SaveInfo info)
  int LiftPositionToFloor()
  void DestroyShared()
  void Cleanup()
  void PostServerLoad()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void OnPhysicsNeighbourChanged()
  bool HasFloorSocketConnection()
  void NotifyLiftEntityDoorsOpen(bool state)
  void OpenDoorsAtFloor(int floor)
  void OnFlagsChanged(Flags old, Flags next)
  void FindExistingLiftChild()
  void OnFlagToggled(bool state)
  void .ctor()
  void <CallElevator>b__29_0(Elevator elevatorEnt)
--------------------------------------------------
Класс: ElevatorLiftPlayer
Наследуется от: ElevatorLift
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ElevatorLiftStatic
Наследуется от: ElevatorLift
Поля:
  GameObjectRef ElevatorDoorRef
  Transform ElevatorDoorLocation
  bool BlockPerFloorMovement
  Flags CanGoUp
  Flags CanGoDown
Свойства:
Методы:
  void ServerInit()
  void NotifyNewFloor(int newFloor, int totalFloors)
  void .ctor()
--------------------------------------------------
Класс: ElevatorStatic
Наследуется от: Elevator
Поля:
  bool StaticTop
  Flags LiftRecentlyArrived
  List`1<ElevatorStatic> floorPositions
  ElevatorStatic ownerElevator
Свойства:
  bool IsStatic
Методы:
  bool get_IsStatic()
  void Spawn()
  void PostMapEntitySpawn()
  bool IsValidFloor(int targetFloor)
  Vector3 GetWorldSpaceFloorPosition(int targetFloor)
  void SetFloorDetails(int floor, ElevatorStatic owner)
  void CallElevator()
  ElevatorStatic ElevatorAtFloor(int floor)
  void OpenDoorsAtFloor(int floor)
  void OnMoveBegin()
  void OnLiftLeavingFloor()
  void ClearBusy()
  void OpenLiftDoors()
  void OnLiftArrivedAtFloor()
  void ClearPowerOutput()
  int GetPassthroughAmount(int outputSlot)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: FrankensteinTableVisuals
Наследуется от: MonoBehaviour
Поля:
  GameObject FXReady
  GameObject FXNotReady
  GameObject FXWake
  Transform HeadVisualAnchor
  Transform TorsoVisualAnchor
  Transform LegsVisualAnchor
  Animator Animator
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HitchTrough
Наследуется от: StorageContainer
Поля:
  HitchSpot[] hitchSpots
  float caloriesToDecaySeconds
Свойства:
Методы:
  Item GetFoodItem()
  bool ValidHitchPosition(Vector3 pos)
  bool HasSpace()
  HitchSpot GetClosest(Vector3 testPos, bool includeOccupied, float maxRadius)
  void Unhitch(RidableHorse horse)
  int NumHitched()
  bool AttemptToHitch(RidableHorse horse, HitchSpot hitch)
  void Save(SaveInfo info)
  void PostServerLoad()
  void UnhitchAll()
  void DestroyShared()
  void OnKilled(HitInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: HotAirBalloonArmor
Наследуется от: HotAirBalloonEquipment
Поля:
  float AdditionalHealth
Свойства:
Методы:
  void Added(HotAirBalloon hab, bool fromSave)
  void Removed(HotAirBalloon hab)
  void Hurt(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: HotAirBalloonEquipment
Наследуется от: BaseCombatEntity
Поля:
  DamageRenderer damageRenderer
  float DelayNextUpgradeOnRemoveDuration
  EntityRef`1<HotAirBalloon> hotAirBalloon
Свойства:
Методы:
  void Added(HotAirBalloon hab, bool fromSave)
  void Removed(HotAirBalloon hab)
  void DoRepair(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: AudioAlarm
Наследуется от: IOEntity
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ElectricBattery
Наследуется от: IOEntity
Поля:
  int maxOutput
  float maxCapactiySeconds
  float rustWattSeconds
  int activeDrain
  bool rechargable
  float maximumInboundEnergyRatio
  float chargeRatio
  float tickRateSeconds
  Flags Flag_HalfFull
  Flags Flag_VeryFull
  bool wasLoaded
  HashSet`1<IOEntity> connectedList
Свойства:
Методы:
  bool IsRootEntity()
  int ConsumptionAmount()
  int MaximalPowerOutput()
  int GetActiveDrain()
  void ReceiveInstanceData(InstanceData data)
  void PostServerLoad()
  void OnPickedUp(Item createdItem, BasePlayer player)
  int GetCurrentEnergy()
  int DesiredPower()
  void SendAdditionalData(BasePlayer player, int slot, bool input)
  void ServerInit()
  int GetDrainFor(IOEntity ent)
  void AddConnectedRecursive(IOEntity root, HashSet`1& listToUse)
  int GetDrain()
  void OnCircuitChanged(bool forceUpdate)
  void CheckDischarge()
  void SetDischarging(bool wantsOn)
  int GetPassthroughAmount(int outputSlot)
  bool WantsPower()
  void IOStateChanged(int inputAmount, int inputSlot)
  void TickUsage()
  void ChargeChanged(float oldCharge)
  void AddCharge()
  void SetPassthroughOn(bool wantsOn)
  void Unbusy()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: BaseDetector
Наследуется от: IOEntity
Поля:
  PlayerDetectionTrigger myTrigger
  Flags Flag_HasContents
Свойства:
Методы:
  int ConsumptionAmount()
  bool ShouldTrigger()
  void OnObjects()
  void OnEmpty()
  void OnDetectorTriggered()
  void OnDetectorReleased()
  int GetPassthroughAmount(int outputSlot)
  void .ctor()
--------------------------------------------------
Класс: LaserDetector
Наследуется от: BaseDetector
Поля:
Свойства:
Методы:
  void OnObjects()
  void .ctor()
--------------------------------------------------
Класс: PlayerDetectionTrigger
Наследуется от: TriggerBase
Поля:
  BaseDetector myDetector
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjects()
  void OnEmpty()
  void .ctor()
--------------------------------------------------
Класс: PressurePad
Наследуется от: BaseDetector
Поля:
  float pressPowerTime
  int pressPowerAmount
  Flags Flag_EmittingPower
Свойства:
Методы:
  int ConsumptionAmount()
  bool IsRootEntity()
  bool ShouldTrigger()
  void OnDetectorTriggered()
  void OnDetectorReleased()
  void UnpowerTime()
  int GetPassthroughAmount(int outputSlot)
  void .ctor()
--------------------------------------------------
Класс: ElectricalHeater
Наследуется от: IOEntity
Поля:
  float fadeDuration
  Light sourceLight
  GrowableHeatSource growableHeatSource
Свойства:
Методы:
  int ConsumptionAmount()
  void ResetState()
  void OnFlagsChanged(Flags old, Flags next)
  void OnKilled(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: GrowableHeatSource
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  float heatAmount
Свойства:
Методы:
  float ApplyHeat(Vector3 forPosition)
  void ForceUpdateGrowablesInRange()
  void .ctor()
--------------------------------------------------
Класс: ElectricalBlocker
Наследуется от: IOEntity
Поля:
  int input1Amount
  int input2Amount
Свойства:
Методы:
  int GetPassthroughAmount(int outputSlot)
  bool WantsPower()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  void UpdateBlocked()
  void UpdateFromInput(int inputAmount, int inputSlot)
  void .ctor()
--------------------------------------------------
Класс: ElectricalCombiner
Наследуется от: IOEntity
Поля:
  int input1Amount
  int input2Amount
  int input3Amount
Свойства:
  bool BlockFluidDraining
Методы:
  bool IsRootEntity()
  bool get_BlockFluidDraining()
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void UpdateFromInput(int inputAmount, int slot)
  void .ctor()
--------------------------------------------------
Класс: ElectricalDFlipFlop
Наследуется от: IOEntity
Поля:
  int setAmount
  int resetAmount
  int toggleAmount
Свойства:
Методы:
  void UpdateHasPower(int inputAmount, int inputSlot)
  bool GetDesiredState()
  void UpdateState()
  void UpdateFromInput(int inputAmount, int inputSlot)
  int GetPassthroughAmount(int outputSlot)
  void UpdateOutputs()
  void .ctor()
--------------------------------------------------
Класс: RANDSwitch
Наследуется от: ElectricalBlocker
Поля:
  bool rand
Свойства:
Методы:
  int GetPassthroughAmount(int outputSlot)
  void UpdateBlocked()
  bool RandomRoll()
  void UpdateFromInput(int inputAmount, int inputSlot)
  void .ctor()
--------------------------------------------------
Класс: FuelElectricGenerator
Наследуется от: IOEntity
Поля:
  float electricAmount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SolarPanel
Наследуется от: IOEntity
Поля:
  Transform sunSampler
  int tickrateSeconds
  int maximalPowerOutput
  float dot_minimum
  float dot_maximum
Свойства:
Методы:
  bool IsRootEntity()
  int MaximalPowerOutput()
  int ConsumptionAmount()
  void ServerInit()
  void SunUpdate()
  int GetPassthroughAmount(int outputSlot)
  void .ctor()
--------------------------------------------------
Класс: Igniter
Наследуется от: IOEntity
Поля:
  float IgniteRange
  float IgniteFrequency
  float IgniteStartDelay
  Transform LineOfSightEyes
  float SelfDamagePerIgnite
  int PowerConsumption
Свойства:
Методы:
  int ConsumptionAmount()
  void UpdateHasPower(int inputAmount, int inputSlot)
  void IgniteInRange()
  void .ctor()
--------------------------------------------------
Класс: FlasherLight
Наследуется от: IOEntity
Поля:
  EmissionToggle toggler
  Light myLight
  float flashSpacing
  float flashBurstSpacing
  float flashOnTime
  int numFlashesPerBurst
Свойства:
Методы:
  void ResetState()
  void .ctor()
--------------------------------------------------
Класс: SirenLight
Наследуется от: IOEntity
Поля:
  GameObject lightObj
  float speed
Свойства:
Методы:
  void ResetState()
  void .ctor()
--------------------------------------------------
Класс: Sprinkler
Наследуется от: IOEntity
Поля:
  float SplashFrequency
  Transform Eyes
  int WaterPerSplash
  float DecayPerSplash
  ItemDefinition currentFuelType
  IOEntity currentFuelSource
  HashSet`1<ISplashable> cachedSplashables
  TimeSince updateSplashableCache
  bool forceUpdateSplashables
Свойства:
  bool BlockFluidDraining
Методы:
  bool get_BlockFluidDraining()
  int ConsumptionAmount()
  void UpdateHasPower(int inputAmount, int inputSlot)
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  void DoSplash()
  void SetSprinklerState(bool wantsOn)
  void TurnOn()
  void TurnOff()
  void SetFuelType(ItemDefinition def, IOEntity source)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: TeslaCoil
Наследуется от: IOEntity
Поля:
  TargetTrigger targetTrigger
  TriggerMovement movementTrigger
  float powerToDamageRatio
  float dischargeTickRate
  float maxDischargeSelfDamageSeconds
  float maxDamageOutput
  Transform damageEyes
  Flags Flag_WeakShorting
  Flags Flag_StrongShorting
  int powerForHeavyShorting
  float lastDischargeTime
Свойства:
Методы:
  int ConsumptionAmount()
  bool CanDischarge()
  void UpdateFromInput(int inputAmount, int inputSlot)
  void Discharge()
  void .ctor()
--------------------------------------------------
Класс: CableTunnel
Наследуется от: IOEntity
Поля:
  int numChannels
  Int32[] inputAmounts
Свойства:
Методы:
  bool WantsPower()
  void IOStateChanged(int inputAmount, int inputSlot)
  void UpdateOutputs()
  void .ctor()
--------------------------------------------------
Класс: LootPanelToolCupboard
Наследуется от: LootPanel
Поля:
  List`1<VirtualItemIcon> costIcons
  Text costPerTimeText
  Text protectedText
  GameObject baseNotProtectedObj
  GameObject baseProtectedObj
  Phrase protectedPrefix
  Tooltip costToolTip
  Phrase blocksPhrase
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InvisibleVendingMachine
Наследуется от: NPCVendingMachine
Поля:
  GameObjectRef buyEffect
  NPCVendingOrderManifest vmoManifest
Свойства:
Методы:
  NPCShopKeeper GetNPCShopKeeper()
  void KeeperLookAt(Vector3 pos)
  bool HasVendingSounds()
  float GetBuyDuration()
  void CompletePendingOrder()
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void Save(SaveInfo info)
  void ServerInit()
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: NPCVendingOrder
Наследуется от: ScriptableObject
Поля:
  Entry[] orders
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NPCVendingOrderManifest
Наследуется от: ScriptableObject
Поля:
  NPCVendingOrder[] orderList
Свойства:
Методы:
  int GetIndex(NPCVendingOrder sample)
  NPCVendingOrder GetFromIndex(int index)
  void .ctor()
--------------------------------------------------
Класс: NPCVendingMachine
Наследуется от: VendingMachine
Поля:
  NPCVendingOrder vendingOrders
  Single[] refillTimes
Свойства:
Методы:
  byte GetBPState(bool sellItemAsBP, bool currencyItemAsBP)
  void TakeCurrencyItem(Item takenCurrencyItem)
  void GiveSoldItem(Item soldItem, BasePlayer buyer)
  void PostServerLoad()
  void ServerInit()
  void InstallFromVendingOrders()
  void InstallDefaultSellOrders()
  void Refill()
  void ClearSellOrders()
  void AddItemForSale(int itemID, int amountToSell, int currencyID, int currencyPerTransaction, byte bpState)
  void RefreshStock()
  void RecordSaleAnalytics(Item itemSold)
  bool CanRotate()
  bool CanPlayerAdmin(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: AddSellOrderManager
Наследуется от: MonoBehaviour
Поля:
  VirtualItemIcon sellItemIcon
  VirtualItemIcon currencyItemIcon
  GameObject itemSearchParent
  ItemSearchEntry itemSearchEntryPrefab
  InputField sellItemInput
  InputField sellItemAmount
  InputField currencyItemInput
  InputField currencyItemAmount
  VendingPanelAdmin adminPanel
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AdminExistingSellOrder
Наследуется от: MonoBehaviour
Поля:
  VirtualItemIcon MerchandiseIcon
  VirtualItemIcon CurrencyIcon
  VendingPanelAdmin adminPanel
  int index
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BranchConfig
Наследуется от: UIDialog
Поля:
  ElectricalBranch branch
  InputField input
  int target
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CounterConfig
Наследуется от: UIDialog
Поля:
  PowerCounter powerCounter
  InputField input
  int target
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemSearchEntry
Наследуется от: MonoBehaviour
Поля:
  Button button
  Text text
  RawImage image
  RawImage bpImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelVendingMachine
Наследуется от: LootPanel
Поля:
  GameObjectRef sellOrderPrefab
  GameObject sellOrderContainer
  GameObject busyOverlayPrefab
  GameObject busyOverlayInstance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IVendingMachineInterface
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: SellOrderEntry
Наследуется от: MonoBehaviour
Поля:
  VirtualItemIcon MerchandiseIcon
  VirtualItemIcon CurrencyIcon
  ItemDefinition merchandiseInfo
  ItemDefinition currencyInfo
  GameObject buyButton
  GameObject cantaffordNotification
  GameObject outOfStockNotification
  IVendingMachineInterface vendingPanel
  UIIntegerEntry intEntry
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TimerConfig
Наследуется от: UIDialog
Поля:
  CustomTimerSwitch timerSwitch
  InputField input
  float minTime
  float seconds
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: VendingPanelAdmin
Наследуется от: UIDialog
Поля:
  GameObject sellOrderAdminContainer
  GameObject sellOrderAdminPrefab
  TMP_InputField storeNameInputField
  EmojiGallery emojiGallery
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VendingMachineScreen
Наследуется от: MonoBehaviour
Поля:
  RawImage largeIcon
  RawImage blueprintIcon
  Text mainText
  Text lowerText
  Text centerText
  RawImage smallIcon
  VendingMachine vendingMachine
  Sprite outOfStockSprite
  Renderer fadeoutMesh
  CanvasGroup screenCanvas
  Renderer light1
  Renderer light2
  float nextImageTime
  int currentImageIndex
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ElectricWindmill
Наследуется от: IOEntity
Поля:
  Animator animator
  int maxPowerGeneration
  Transform vaneRot
  SoundDefinition wooshSound
  Transform wooshOrigin
  float targetSpeed
  float serverWindSpeed
Свойства:
Методы:
  int MaximalPowerOutput()
  bool IsRootEntity()
  float GetWindSpeedScale()
  void Load(LoadInfo info)
  void ServerInit()
  void Save(SaveInfo info)
  bool AmIVisible()
  void WindUpdate()
  int GetPassthroughAmount(int outputSlot)
  Vector3 GetWindAimDir(float time)
  void .ctor()
--------------------------------------------------
Класс: ReclaimBackpack
Наследуется от: StorageContainer
Поля:
  int reclaimID
  ulong playerSteamID
  bool onlyOwnerLoot
  Collider myCollider
  GameObject art
  bool isBeingLooted
Свойства:
Методы:
  void InitForPlayer(ulong playerID, int newID)
  void ServerInit()
  void RemoveMe()
  void CheckEmpty()
  bool OnStartBeingLooted(BasePlayer baseEntity)
  void PlayerStoppedLooting(BasePlayer player)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: InstrumentStateBehaviour
Наследуется от: StateMachineBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstrumentViewmodel
Наследуется от: MonoBehaviour
Поля:
  Animator ViewAnimator
  bool UpdateA
  bool UpdateB
  bool UpdateC
  bool UpdateD
  bool UpdateE
  bool UpdateF
  bool UpdateG
  bool UpdateRecentlyPlayed
  bool UpdatePlayedNoteTrigger
  bool UseTriggers
  int note_a
  int note_b
  int note_c
  int note_d
  int note_e
  int note_f
  int note_g
  int recentlyPlayedHash
  int playedNoteHash
Свойства:
Методы:
  void UpdateSlots(AnimationSlot currentSlot, bool recentlyPlayed, bool playedNoteThisFrame)
  void UpdateState(int param, bool state)
  void .ctor()
--------------------------------------------------
Класс: BigWheelGame
Наследуется от: SpinnerWheel
Поля:
  HitNumber[] hitNumbers
  GameObject indicator
  GameObjectRef winEffect
  float spinFrequencySeconds
  int spinNumber
  int lastPaidSpinNumber
  List`1<BigWheelBettingTerminal> terminals
Свойства:
Методы:
  bool AllowPlayerSpins()
  bool CanUpdateSign(BasePlayer player)
  float GetMaxSpinSpeed()
  void ServerInit()
  void DoSpin()
  void SetTerminalsLocked(bool isLocked)
  void RemoveTerminal(BigWheelBettingTerminal terminal)
  void InitBettingTerminals()
  void Update_Server()
  float SpinSpacing()
  void QueueSpin()
  void Payout()
  HitNumber GetCurrentHitType()
  void LoadHitNumbers()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HitNumber
Наследуется от: MonoBehaviour
Поля:
  HitType hitType
Свойства:
Методы:
  int ColorToMultiplier(HitType type)
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: LootPanelBigWheelTerminal
Наследуется от: LootPanel
Поля:
  Text timeRemainingText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SlotMachineLootPanel
Наследуется от: LootPanel
Поля:
  Text spinsRemainingText
  Text multiplierText
  LocalizeText ScrapCostText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SlotMachinePayoutDisplay
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef PayoutWidget
  RectTransform WidgetRoot
  Sprite[] FaceSprites
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SlotMachinePayoutSettings
Наследуется от: ScriptableObject
Поля:
  ItemAmount SpinCost
  PayoutInfo[] Payouts
  Int32[] VirtualFaces
  IndividualPayouts[] FacePayouts
  int TotalStops
  GameObjectRef DefaultWinEffect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SlotMachinePayoutWidget
Наследуется от: MonoBehaviour
Поля:
  RustText PayoutAmount
  GameObject AnyText
  Image[] Faces
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChineseLantern
Наследуется от: BaseFuelLightSource
Поля:
  Transform pivotRotator
  float swaySpeed
  float swayDistance
  float lerpSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SkyLantern
Наследуется от: StorageContainer
Поля:
  float gravityScale
  float travelSpeed
  float collisionRadius
  float rotationSpeed
  float randOffset
  float lifeTime
  float hoverHeight
  Transform collisionCheckPoint
  float idealAltitude
  Vector3 travelVec
Свойства:
Методы:
  float GetNetworkTime()
  void ServerInit()
  void Ignite(Vector3 fromPos)
  void OnAttacked(HitInfo info)
  void SelfDestroy()
  bool CanIgnite()
  void UpdateIdealAltitude()
  void StartSinking()
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: FirecrackerRepeater
Наследуется от: BaseMonoBehaviour
Поля:
  GameObjectRef singleExplosionEffect
  Transform[] parts
  float partWidth
  float partLength
  Quaternion[] targetRotations
  Quaternion[] initialRotations
  Renderer[] renderers
  Material materialSource
  float explodeRepeatMin
  float explodeRepeatMax
  float explodeLerpSpeed
  Vector3 twistAmount
  float fuseLength
  float explodeStrength
  float explodeDirBlend
  float duration
  ParticleSystemContainer smokeParticle
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: StringFirecracker
Наследуется от: TimedExplosive
Поля:
  Rigidbody serverRigidBody
  Rigidbody clientMiddleBody
  Rigidbody[] clientParts
  SpringJoint serverClientJoint
  Transform clientFirecrackerTransform
Свойства:
Методы:
  void InitShared()
  void CreatePinJoint()
  void .ctor()
--------------------------------------------------
Класс: ArcadeClientAuthTest
Наследуется от: ArcadeEntityController
Поля:
  float speed
  float maxSpeed
  BaseArcadeGame myGame
  ArcadeEntity myEntity
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ArcadeEntity
Наследуется от: BaseMonoBehaviour
Поля:
  UInt32 id
  UInt32 spriteID
  UInt32 soundID
  bool visible
  Vector3 heading
  bool isEnabled
  bool dirty
  float alpha
  BoxCollider boxCollider
  bool host
  bool localAuthorativeOverride
  ArcadeEntity arcadeEntityParent
  UInt32 prefabID
  bool takesDamage
  float health
  float maxHealth
  bool mapLoadedEntiy
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ArcadeEntityController
Наследуется от: BaseMonoBehaviour
Поля:
  BaseArcadeGame parentGame
  ArcadeEntity arcadeEntity
  ArcadeEntity sourceEntity
Свойства:
  Vector3 heading
  Vector3 positionLocal
  Vector3 positionWorld
Методы:
  Vector3 get_heading()
  void set_heading(Vector3 value)
  Vector3 get_positionLocal()
  void set_positionLocal(Vector3 value)
  Vector3 get_positionWorld()
  void set_positionWorld(Vector3 value)
  void .ctor()
--------------------------------------------------
Класс: ArcadeNetworkTrigger
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: BaseArcadeGame
Наследуется от: BaseMonoBehaviour
Поля:
  List`1<BaseArcadeGame> globalActiveGames
  Camera cameraToRender
  RenderTexture renderTexture
  Texture2D distantTexture
  Transform center
  int frameRate
  Dictionary`2<UInt32, ArcadeEntity> activeArcadeEntities
  Sprite[] spriteManifest
  ArcadeEntity[] entityManifest
  bool clientside
  bool clientsideInput
  int spriteIndexInvisible
  GameObject arcadeEntityPrefab
  BaseArcadeMachine ownerMachine
  int gameOffsetIndex
  bool isAuthorative
  Canvas canvas
Свойства:
Методы:
  BasePlayer GetHostPlayer()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BossFormController
Наследуется от: ArcadeEntityController
Поля:
  float animationSpeed
  Sprite[] animationFrames
  Vector2 roamDistance
  Transform colliderParent
  BossDamagePoint[] damagePoints
  ArcadeEntityController flashController
  float health
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChippyArcadeGame
Наследуется от: BaseArcadeGame
Поля:
  ChippyMainCharacter mainChar
  SpriteArcadeEntity mainCharAim
  ChippyBoss currentBoss
  ChippyBoss[] bossPrefabs
  SpriteArcadeEntity mainMenuLogo
  Transform respawnPoint
  Vector2 mouseAim
  TextArcadeEntity levelIndicator
  TextArcadeEntity gameOverIndicator
  TextArcadeEntity playGameButton
  TextArcadeEntity highScoresButton
  bool OnMainMenu
  bool GameActive
  int level
  TextArcadeEntity[] scoreDisplays
  MenuButtonArcadeEntity[] mainMenuButtons
  int selectedButtonIndex
  bool OnHighScores
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChippyBoss
Наследуется от: SpriteArcadeEntity
Поля:
  Vector2 roamDistance
  float animationSpeed
  Sprite[] animationFrames
  ArcadeEntity bulletTest
  SpriteRenderer flashRenderer
  BossDamagePoint[] damagePoints
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChippyBulletEntity
Наследуется от: SpriteArcadeEntity
Поля:
  float speed
  float maxSpeed
  float radius
  float damage
  ArcadeEntity bulletImpact
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChippyMainCharacter
Наследуется от: SpriteArcadeEntity
Поля:
  float speed
  float maxSpeed
  ChippyBulletEntity bulletPrefab
  float fireRate
  Vector3 aimDir
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChippyMoveTest
Наследуется от: MonoBehaviour
Поля:
  Vector3 heading
  float speed
  float maxSpeed
Свойства:
Методы:
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: DestroyArcadeEntity
Наследуется от: BaseMonoBehaviour
Поля:
  ArcadeEntity ent
  float TimeToDie
  float TimeToDieVariance
Свойства:
Методы:
  void Start()
  void DestroyAction()
  void .ctor()
--------------------------------------------------
Класс: MenuButtonArcadeEntity
Наследуется от: TextArcadeEntity
Поля:
  string titleText
  string selectionSuffix
  string clickMessage
Свойства:
Методы:
  bool IsHighlighted()
  void .ctor()
--------------------------------------------------
Класс: SpriteArcadeEntity
Наследуется от: ArcadeEntity
Поля:
  SpriteRenderer spriteRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ArcadeTennisPaddle
Наследуется от: ArcadeEntity
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TennisArcadeGame
Наследуется от: BaseArcadeGame
Поля:
  ArcadeEntity paddle1
  ArcadeEntity paddle2
  ArcadeEntity ball
  Transform paddle1Origin
  Transform paddle2Origin
  Transform paddle1Goal
  Transform paddle2Goal
  Transform ballSpawn
  float maxScore
  ArcadeEntity[] paddle1ScoreNodes
  ArcadeEntity[] paddle2ScoreNodes
  int paddle1Score
  int paddle2Score
  float sensitivity
  ArcadeEntity logo
  bool OnMainMenu
  bool GameActive
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TennisBall
Наследуется от: SpriteArcadeEntity
Поля:
  float speed
  float maxSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TextArcadeEntity
Наследуется от: ArcadeEntity
Поля:
  TextMeshProUGUI text
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HeadEntity
Наследуется от: BaseEntity
Поля:
  HeadData CurrentTrophyData
  OccupationSlots HeadMask
Свойства:
Методы:
  void Save(SaveInfo info)
  void SetupSourceId(UInt32 sourceID)
  void SetupPlayerId(string playerName, ulong playerId)
  void AssignClothing(ItemContainer container)
  void AssignHorseBreed(int breed)
  void InitTrophyData()
  void Load(LoadInfo info)
  GameObject GetHeadSource()
  void .ctor()
--------------------------------------------------
Класс: RockingChair
Наследуется от: BaseChair
Поля:
  float Acceleration
  float MaxRockingAngle
  float MaxRockVelocity
  bool ApplyVelocityBetweenSwings
  float AppliedVelocity
  float WeaponFireImpact
  SoundDefinition creakForwardSoundDef
  SoundDefinition creakBackwardSoundDef
  float creakForwardAngle
  float creakBackwardAngle
  float creakVelocityThreshold
  AnimationCurve creakGainCurve
  float initLocalY
  Vector3 initLocalRot
  float velocity
  float oppositePotentialVelocity
  TimeSince timeSinceInput
  float sineTime
  float timeUntilStartSine
  float t
  float angle
  Quaternion max
  Quaternion min
Свойства:
Методы:
  void ServerInit()
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void SaveBaseLocalPos()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void OnWeaponFired(BaseProjectile weapon)
  void OnPlayerDismounted(BasePlayer player)
  void PreventClipping(bool hasInput)
  void CalculateVelocity(Vector2 currentInput)
  void ApplyVelocity(float delta, bool hasInput)
  void ResetChair()
  Vector2 GetInputVector(InputState inputState)
  Vector2 ProcessInputVector(bool leftDown, bool rightDown, bool forwardDown, bool backDown)
  float EaseOutCubic(float value)
  float EaseOutCubicOvershoot(float value, float overshoot)
  void .ctor()
--------------------------------------------------
Класс: DiveSite
Наследуется от: JunkPile
Поля:
  Transform bobber
Свойства:
Методы:
  float TimeoutPlayerCheckRadius()
  void .ctor()
--------------------------------------------------
Класс: EggAmmoRepresentation
Наследуется от: MonoBehaviour
Поля:
  GameObject[] eggAmmo
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EggSwap
Наследуется от: MonoBehaviour
Поля:
  Renderer[] eggRenderers
Свойства:
Методы:
  void Show(int index)
  void HideAll()
  void .ctor()
--------------------------------------------------
Класс: EggHuntEvent
Наследуется от: BaseHuntEvent
Поля:
  float warmupTime
  float cooldownTime
  float warnTime
  float timeAlive
  EggHuntEvent serverEvent
  EggHuntEvent clientEvent
  float durationSeconds
  Dictionary`2<ulong, EggHunter> _eggHunters
  List`1<CollectableEasterEgg> _spawnedEggs
  ItemAmount[] placementAwards
Свойства:
Методы:
  bool IsEventActive()
  void ServerInit()
  void StartEvent()
  void SpawnEggsAtPoint(int numEggs, Vector3 pos, Vector3 aimDir, float minDist, float maxDist)
  void SpawnEggs()
  void RandPickup()
  void EggCollected(BasePlayer player)
  void QueueUpdate()
  void DoNetworkUpdate()
  void Sort(List`1<EggHunter> hunterList)
  List`1<EggHunter> GetTopHunters()
  void Save(SaveInfo info)
  void CleanupEggs()
  void Cooldown()
  void PrintWinnersAndAward()
  void DestroyShared()
  void Update()
  float GetTimeRemaining()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AnimationFlagHandler
Наследуется от: MonoBehaviour
Поля:
  Animator animator
Свойства:
Методы:
  void SetBoolTrue(string name)
  void SetBoolFalse(string name)
  void .ctor()
--------------------------------------------------
Класс: JiggleBone
Наследуется от: BaseMonoBehaviour
Поля:
  bool debugMode
  Vector3 targetPos
  Vector3 dynamicPos
  Vector3 boneAxis
  float targetDistance
  float bStiffness
  float bMass
  float bDamping
  float bGravity
  Vector3 force
  Vector3 acc
  Vector3 vel
  bool SquashAndStretch
  float sideStretch
  float frontStretch
  float disableDistance
Свойства:
Методы:
  void Awake()
  void LateUpdate()
  void .ctor()
--------------------------------------------------
Класс: ItemModCrackOpen
Наследуется от: ItemModUnwrap
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RandomRendererEnable
Наследуется от: MonoBehaviour
Поля:
  Renderer[] randoms
  int <EnabledIndex>k__BackingField
Свойства:
  int EnabledIndex
Методы:
  int get_EnabledIndex()
  void set_EnabledIndex(int value)
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: BunnyEntry
Наследуется от: MonoBehaviour
Поля:
  Text nameText
  Text amountText
  RawImage starImage
  RawImage selfImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EggHuntNote
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup mainGroup
  CanvasGroup timerGroup
  Text timerText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TopBunnies
Наследуется от: MonoBehaviour
Поля:
  BunnyEntry[] topBunnyEntries
  Text timerText
  CanvasGroup group
  Color endingColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GraveyardFence
Наследуется от: SimpleBuildingBlock
Поля:
  BoxCollider[] pillars
Свойства:
Методы:
  void ServerInit()
  void DestroyShared()
  void UpdatePillars()
  void .ctor()
--------------------------------------------------
Класс: HalloweenEventNote
Наследуется от: EggHuntNote
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HalloweenHunt
Наследуется от: EggHuntEvent
Поля:
Свойства:
Методы:
  void PrintWinnersAndAward()
  void .ctor()
--------------------------------------------------
Класс: ItemModOpenLootBag
Наследуется от: ItemModUnwrap
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SpiderWeb
Наследуется от: BaseCombatEntity
Поля:
Свойства:
Методы:
  bool Fresh()
  void ServerInit()
  void .ctor()
--------------------------------------------------
Класс: SkullTrophy
Наследуется от: StorageContainer
Поля:
  RustText NameText
  TextProOnACircle CircleModifier
  int AngleModifierMinCharCount
  int AngleModifierMaxCharCount
  int AngleModifierMinArcAngle
  int AngleModifierMaxArcAngle
  float SunsetTime
  float SunriseTime
  MeshRenderer[] SkullRenderers
  Material[] DaySkull
  Material[] NightSkull
  Material[] NoSkull
  Flags HasSkull
Свойства:
Методы:
  void OnItemAddedOrRemoved(Item item, bool added)
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: JunkPileBuoyancyPoint
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: JunkPileWater
Наследуется от: JunkPile
Поля:
  Transform[] buoyancyPoints
  bool debugDraw
  float updateCullRange
  Quaternion baseRotation
  bool first
  TimeUntil nextPlayerCheck
  bool hasPlayersNearby
  JunkpileWaterWorkQueue junkpileWaterWorkQueue
  float framebudgetms
Свойства:
Методы:
  void Spawn()
  void FixedUpdate()
  void UpdateMovement()
  void UpdateNearbyPlayers()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: JunkPileWaterSpawner
Наследуется от: SpawnGroup
Поля:
  BaseEntity attachToParent
Свойства:
Методы:
  void PostSpawnProcess(BaseEntity entity, BaseSpawnPoint spawnPoint)
  void .ctor()
--------------------------------------------------
Класс: DeliveryDrone
Наследуется от: Drone
Поля:
  float stateTimeout
  float targetPositionTolerance
  float preferredCruiseHeight
  float preferredHeightAboveObstacle
  float marginAbovePreferredHeight
  float obstacleHeightLockDuration
  int pickUpDelayInTicks
  DeliveryDroneConfig config
  GameObjectRef mapMarkerPrefab
  EntityRef`1<Marketplace> sourceMarketplace
  EntityRef`1<MarketTerminal> sourceTerminal
  EntityRef`1<VendingMachine> targetVendingMachine
  State _state
  RealTimeSince _sinceLastStateChange
  Nullable`1<Vector3> _stateGoalPosition
  Nullable`1<float> _goToY
  TimeSince _sinceLastObstacleBlock
  Nullable`1<float> _minimumYLock
  int _pickUpTicks
  BaseEntity _mapMarkerInstance
Свойства:
Методы:
  void Setup(Marketplace marketplace, MarketTerminal terminal, VendingMachine vendingMachine)
  void ServerInit()
  void CreateMapMarker()
  void Think()
  void ForceRemove()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool CanControl(ulong playerID)
  void .ctor()
  float <Think>g__CalculatePreferredY|24_0(Boolean& isBlocked, <>c__DisplayClass24_0& )
  float <Think>g__GetMinimumHeight|24_1(Vector3 offset, <>c__DisplayClass24_0& )
  Vector3 <Think>g__LandingPosition|24_2(<>c__DisplayClass24_0& )
  void <Think>g__SetGoalPosition|24_3(Vector3 position, <>c__DisplayClass24_0& )
  bool <Think>g__IsAtGoalPosition|24_4(<>c__DisplayClass24_0& )
  void <Think>g__SetGoToY|24_5(float y, <>c__DisplayClass24_0& )
  bool <Think>g__IsAtGoToY|24_6(<>c__DisplayClass24_0& )
  void <Think>g__SetState|24_7(State newState, <>c__DisplayClass24_0& )
--------------------------------------------------
Класс: DeliveryDroneConfig
Наследуется от: BaseScriptableObject
Поля:
  Vector3 vendingMachineOffset
  float maxDistanceFromVendingMachine
  Vector3 halfExtents
  float testHeight
  LayerMask layerMask
Свойства:
Методы:
  void FindDescentPoints(VendingMachine vendingMachine, float currentY, Vector3& waitPosition, Vector3& descendPosition)
  bool IsVendingMachineAccessible(VendingMachine vendingMachine, Vector3 offset, RaycastHit& hitInfo)
  void .ctor()
--------------------------------------------------
Класс: MapMarkerDeliveryDrone
Наследуется от: MapMarker
Поля:
Свойства:
Методы:
  void ServerInit()
  bool ShouldNetworkTo(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: Marketplace
Наследуется от: BaseEntity
Поля:
  GameObjectRef terminalPrefab
  Transform[] terminalPoints
  Transform droneLaunchPoint
  GameObjectRef deliveryDronePrefab
  EntityRef`1[] terminalEntities
Свойства:
Методы:
  NetworkableId SendDrone(BasePlayer player, MarketTerminal sourceTerminal, VendingMachine vendingMachine)
  void ReturnDrone(DeliveryDrone deliveryDrone)
  void Spawn()
  void SpawnSubEntities()
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: UIMarketSearch
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef StoreEntryRef
  RectTransform StoreRoot
  UIMarketTerminal Terminal
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMarketSearchOrderEntry
Наследуется от: MonoBehaviour
Поля:
  RustText ItemName
  GameObject OutOfStockRoot
  GameObject BpRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMarketSearchStore
Наследуется от: MonoBehaviour
Поля:
  RustText StoreName
  List`1<UIMarketSearchOrderEntry> Entries
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMarketTerminal
Наследуется от: UIDialog
Поля:
  Phrase PendingDeliveryPluralPhrase
  Phrase PendingDeliverySingularPhrase
  Canvas canvas
  MapView mapView
  RectTransform shopDetailsPanel
  float shopDetailsMargin
  float easeDuration
  LeanTweenType easeType
  TmProEmojiRedirector shopName
  GameObject shopOrderingPanel
  RectTransform sellOrderContainer
  GameObjectRef sellOrderPrefab
  VirtualItemIcon deliveryFeeIcon
  GameObject deliveryFeeCantAffordIndicator
  GameObject inventoryFullIndicator
  GameObject notEligiblePanel
  GameObject pendingDeliveryPanel
  RustText pendingDeliveryLabel
  RectTransform itemNoticesContainer
  GameObjectRef itemRemovedPrefab
  GameObjectRef itemPendingPrefab
  GameObjectRef itemAddedPrefab
  CanvasGroup gettingStartedTip
  SoundDefinition buyItemSoundDef
  SoundDefinition buttonPressSoundDef
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MonumentSign
Наследуется от: LODComponent
Поля:
  float viewDistance
  GameObject uiRoot
  RustText signText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NotePanel
Наследуется от: MonoBehaviour
Поля:
  InputField input
  Item item
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: note
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void update(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: CoverageQueryFlare
Наследуется от: BaseMonoBehaviour
Поля:
  bool isDynamic
  bool timeShimmer
  bool positionalShimmer
  bool rotate
  float maxVisibleDistance
  bool lightScaled
  float dotMin
  float dotMax
  RadiusSpace coverageRadiusSpace
  float coverageRadius
  LODDistanceMode DistanceMode
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OreHotSpot
Наследуется от: BaseCombatEntity
Поля:
  float visualDistance
  GameObjectRef visualEffect
  GameObjectRef finishEffect
  GameObjectRef damageEffect
  OreResourceEntity owner
Свойства:
Методы:
  void OreOwner(OreResourceEntity newOwner)
  void ServerInit()
  void OnAttacked(HitInfo info)
  void OnKilled(HitInfo info)
  void FireFinishEffect()
  void .ctor()
--------------------------------------------------
Класс: PlacementTest
Наследуется от: MonoBehaviour
Поля:
  MeshCollider myMeshCollider
  Transform testTransform
  Transform visualTest
  float hemisphere
  float clampTest
  float testDist
  float nextTest
Свойства:
Методы:
  Vector3 RandomHemisphereDirection(Vector3 input, float degreesOffset)
  Vector3 RandomCylinderPointAroundVector(Vector3 input, float distance, float minHeight, float maxHeight)
  Vector3 ClampToHemisphere(Vector3 hemiInput, float degreesOffset, Vector3 inputVec)
  void Update()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: ItemModBackpack
Наследуется от: ItemMod
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModParachute
Наследуется от: ItemModBackpack
Поля:
  GameObjectRef ParachuteVehiclePrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Parachute
Наследуется от: BaseVehicle
Поля:
  Collider ParachuteCollider
  ItemDefinition PackedParachute
  GameObjectRef DetachedParachute
  Transform DetachedSpawnPoint
  float ConditionLossPerUse
  float HurtDeployTime
  float HurtAmount
  Animator ColliderAnimator
  Animator ColliderWorldAnimator
  float UprightLerpForce
  float ConstantForwardForce
  ForceMode ForwardForceMode
  float TurnForce
  ForceMode TurnForceMode
  float ForwardTiltAcceleration
  float BackInputForceMultiplier
  float DeployAnimationLength
  float TargetDrag
  float TargetAngularDrag
  AnimationCurve DragCurve
  AnimationCurve DragDamageCurve
  AnimationCurve MassDamageCurve
  AnimationCurve DamageHorizontalVelocityCurve
  float DamageTester
  float AnimationInputSmoothness
  Vector2 AnimationInputScale
  ParachuteWearable FirstPersonCanopy
  GameObjectRef ParachuteLandScreenBounce
  int AnimatorInputXParameter
  int AnimatorInputYParameter
  TimeSince mountTime
  Flags Flag_InputForward
  Flags Flag_InputBack
  Flags Flag_InputLeft
  Flags Flag_InputRight
  SoundDefinition deploySoundDef
  SoundDefinition releaseSoundDef
  SoundDefinition flightLoopSoundDef
  SoundDefinition steerSoundDef
  AnimationCurve flightLoopPitchCurve
  AnimationCurve flightLoopGainCurve
  bool BypassRepack
  bool LandingAnimations
  bool collisionDeath
  Vector3 collisionImpulse
  float startHeight
  float distanceTravelled
  Vector3 lastPosition
  Vector2 lerpedInput
  Vector3 collisionLocalPos
  Vector3 collisionWorldNormal
Свойства:
  SamTargetType SAMTargetType
Методы:
  void PlayerMounted(BasePlayer player, BaseMountable seat)
  bool GetDismountPosition(BasePlayer player, Vector3& res)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void VehicleFixedUpdate()
  void PlayerDismounted(BasePlayer player, BaseMountable seat)
  void ProcessDeath()
  void OnCollision(Collision collision, BaseEntity hitEntity)
  void DelayedDismount()
  float MaxVelocity()
  bool AllowPlayerInstigatedDismount(BasePlayer player)
  SamTargetType get_SAMTargetType()
  bool IsValidSAMTarget(bool staticRespawn)
  Vector2 ProcessInputVector(InputState inputState, BasePlayer player)
  Vector2 ProcessInputVectorFromFlags(BasePlayer player)
  Vector2 ProcessInputVector(bool leftDown, bool rightDown, bool forwardDown, bool backDown)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ParachuteSeat
Наследуется от: SledSeat
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParachuteUnpacked
Наследуется от: DecayEntity
Поля:
  Rigidbody targetRigidbody
  Transform centreOfMassRoot
Свойства:
Методы:
  void ServerInit()
  void .ctor()
--------------------------------------------------
Класс: ParachuteWearable
Наследуется от: MonoBehaviour
Поля:
  Animator TargetAnimator
  Transform LeftHandTarget
  Transform RightHandTarget
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CameraFocusMode
Наследуется от: Enum
Поля:
  int value__
  CameraFocusMode Off
  CameraFocusMode Auto
  CameraFocusMode Manual
Свойства:
Методы:
--------------------------------------------------
Класс: PaddlingPool
Наследуется от: LiquidContainer
Поля:
  Flags FilledUp
  Transform poolWaterVolume
  GameObject poolWaterVisual
  float minimumWaterHeight
  float maximumWaterHeight
  WaterVolume waterVolume
  bool alignWaterUp
  GameObjectRef destroyedWithWaterEffect
  Transform destroyedWithWaterEffectPos
  Collider requireLookAt
  float lastFillAmount
Свойства:
Методы:
  void OnItemAddedOrRemoved(Item item, bool added)
  void OnInventoryDirty()
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  void Save(SaveInfo info)
  float GetNormalisedFillLevel()
  void UpdatePoolFillAmount(float normalisedAmount)
  int ConsumptionAmount()
  void DestroyShared()
  void .ctor()
--------------------------------------------------
Класс: ItemModPhoto
Наследуется от: ItemModAssociatedEntity`1<PhotoEntity>
Поля:
Свойства:
  bool AllowNullParenting
Методы:
  bool get_AllowNullParenting()
  void .ctor()
--------------------------------------------------
Класс: PhotoEntity
Наследуется от: ImageStorageEntity
Поля:
  ulong <PhotographerSteamId>k__BackingField
  UInt32 <ImageCrc>k__BackingField
Свойства:
  ulong PhotographerSteamId
  UInt32 ImageCrc
  UInt32 CrcToLoad
  bool ShouldTransferAssociatedFiles
  UInt32[] GetContentCRCs
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
Методы:
  ulong get_PhotographerSteamId()
  void set_PhotographerSteamId(ulong value)
  UInt32 get_ImageCrc()
  void set_ImageCrc(UInt32 value)
  UInt32 get_CrcToLoad()
  void Load(LoadInfo info)
  bool get_ShouldTransferAssociatedFiles()
  void Save(SaveInfo info)
  void SetImageData(ulong steamId, Byte[] data)
  void DoServerDestroy()
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  UGCType get_ContentType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  void .ctor()
--------------------------------------------------
Класс: PhotoPanel
Наследуется от: MonoBehaviour
Поля:
  RawImage Image
  InputField Message
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SignPanel
Наследуется от: MonoBehaviour
Поля:
  RawImage Image
  RectTransform ImageContainer
  RustText DisabledSignsMessage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TwitchTrophy
Наследуется от: BaseCombatEntity
Поля:
  GameObjectRef DialogPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UITwitchTrophy
Наследуется от: UIDialog
Поля:
  HttpImage EventImage
  RustText EventName
  RustText WinningTeamName
  RectTransform TeamMembersRoot
  GameObject TeamMemberNamePrefab
  GameObject MissingDataOverlay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NPCDwelling
Наследуется от: BaseEntity
Поля:
  NPCSpawner npcSpawner
  float NPCSpawnChance
  SpawnGroup[] spawnGroups
  AIMovePoint[] movePoints
  AICoverPoint[] coverPoints
Свойства:
Методы:
  void ServerInit()
  void DestroyShared()
  bool ValidateAIPoint(Vector3 pos)
  void UpdateInformationZone(bool remove)
  void CheckDespawn()
  void CleanupSpawned()
  bool PlayersNearby()
  float TimeoutPlayerCheckRadius()
  void .ctor()
--------------------------------------------------
Класс: IceFence
Наследуется от: GraveyardFence
Поля:
  GameObject[] styles
  bool init
  AdaptMeshToTerrain snowMesh
Свойства:
Методы:
  int GetStyleFromID()
  void ServerInit()
  void InitStyle()
  void SetStyle(int style)
  void UpdatePillars()
  void .ctor()
--------------------------------------------------
Класс: ItemModUnwrap
Наследуется от: ItemMod
Поля:
  LootSpawn revealList
  GameObjectRef successEffect
  int minTries
  int maxTries
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: NeonMeshPaintableSource
Наследуется от: MeshPaintableSource
Поля:
  NeonSign neonSign
  float editorEmissionScale
  AnimationCurve lightingCurve
  Color topLeft
  Color topRight
  Color bottomLeft
  Color bottomRight
Свойства:
Методы:
  void UpdateMaterials(MaterialPropertyBlock block, Texture2D textureOverride, bool forEditing, bool isSelected)
  Color32[] UpdateFrom(Texture2D input)
  void .ctor()
  Color <UpdateFrom>g__GetColorForRegion|8_0(int x, int y, int regionWidth, int regionHeight, <>c__DisplayClass8_0& )
--------------------------------------------------
Класс: BaseBulb
Наследуется от: MonoBehaviour
Поля:
  Renderer bulbRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Bulb
Наследуется от: BaseBulb
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Sled
Наследуется от: BaseVehicle
Поля:
  Flags BrakeOn
  Flags OnSnow
  Flags IsGrounded
  Flags OnSand
  PhysicMaterial BrakeMaterial
  PhysicMaterial SnowMaterial
  PhysicMaterial NonSnowMaterial
  Transform CentreOfMassTransform
  Collider[] PhysicsMaterialTargets
  float InitialForceCutoff
  float InitialForceIncreaseRate
  float TurnForce
  float DirectionMatchForce
  float VerticalAdjustmentForce
  float VerticalAdjustmentAngleThreshold
  float NudgeCooldown
  float NudgeForce
  float MaxNudgeVelocity
  float DecayFrequency
  float DecayAmount
  ParticleSystemContainer TrailEffects
  SoundDefinition enterSnowSoundDef
  SoundDefinition snowSlideLoopSoundDef
  SoundDefinition dirtSlideLoopSoundDef
  AnimationCurve movementLoopGainCurve
  AnimationCurve movementLoopPitchCurve
  VehicleTerrainHandler terrainHandler
  PhysicMaterial cachedMaterial
  float initialForceScale
  TimeSince leftIce
  TimeSince lastNudge
Свойства:
  bool BlocksDoors
Методы:
  void ServerInit()
  void OnDeployed(BaseEntity parent, BasePlayer deployedBy, Item fromItem)
  void VehicleFixedUpdate()
  void UpdatePhysicsMaterial()
  void UpdateGroundedFlag()
  PhysicMaterial GetPhysicMaterial()
  void PlayerMounted(BasePlayer player, BaseMountable seat)
  void ApplyInitialForce()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void DecayOverTime()
  bool CanPickup(BasePlayer player)
  void OnObjects(TriggerNotify trigger)
  void OnEmpty()
  bool get_BlocksDoors()
  void .ctor()
--------------------------------------------------
Класс: SledSeat
Наследуется от: BaseVehicleSeat
Поля:
  Transform LeftHand
  Transform RightHand
  Transform LeftFoot
  Transform RightFoot
  float MountedAnimationSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HandSnowball
Наследуется от: BaseMelee
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SnowballGun
Наследуется от: BaseProjectile
Поля:
  ItemDefinition OverrideProjectile
Свойства:
  ItemDefinition PrimaryMagazineAmmo
  bool CanRefundAmmo
Методы:
  bool TryReloadMagazine(IAmmoContainer ammoSource, int desiredAmount)
  ItemDefinition get_PrimaryMagazineAmmo()
  bool get_CanRefundAmmo()
  void .ctor()
--------------------------------------------------
Класс: SnowballGunProjectile
Наследуется от: Projectile
Поля:
  float OverrideEffectScale
  GameObjectRef SnowballImpactEffect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SnowMachine
Наследуется от: FogMachine
Поля:
  AdaptMeshToTerrain snowMesh
  TriggerTemperature tempTrigger
Свойства:
Методы:
  bool MotionModeEnabled()
  void EnableFogField()
  void FinishFogging()
  void .ctor()
--------------------------------------------------
Класс: Stocking
Наследуется от: LootContainer
Поля:
  ListHashSet`1<Stocking> stockings
Свойства:
Методы:
  void ServerInit()
  void DoServerDestroy()
  bool IsEmpty()
  void SpawnLoot()
  void PlayerStoppedLooting(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModOpenWrapped
Наследуется от: ItemMod
Поля:
  GameObjectRef successEffect
  Phrase open_wrapped_gift
  Phrase open_wrapped_gift_desc
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ItemModWrap
Наследуется от: ItemMod
Поля:
  GameObjectRef successEffect
  ItemDefinition wrappedDefinition
  Phrase wrap_gift
  Phrase wrap_gift_desc
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ChristmasTree
Наследуется от: StorageContainer
Поля:
  GameObject[] decorations
Свойства:
Методы:
  bool ItemFilter(Item item, int targetSlot)
  void OnItemAddedOrRemoved(Item item, bool added)
  void .ctor()
--------------------------------------------------
Класс: ItemModXMasTreeDecoration
Наследуется от: ItemMod
Поля:
  xmasFlags flagsToChange
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BunkerEntrance
Наследуется от: BaseEntity
Поля:
  GameObjectRef portalPrefab
  GameObjectRef doorPrefab
  Transform portalSpawnPoint
  Transform doorSpawnPoint
  Door doorInstance
  BasePortal portalInstance
Свойства:
Методы:
  void ServerInit()
  void MissionStarted(BasePlayer assignee, MissionInstance instance)
  void MissionEnded(BasePlayer assignee, MissionInstance instance)
  void .ctor()
--------------------------------------------------
Класс: DynamicDungeon
Наследуется от: BaseEntity
Поля:
  Transform exitEntitySpawn
  GameObjectRef exitEntity
  string exitString
  MonumentNavMesh monumentNavMesh
  List`1<DynamicDungeon> _dungeons
  GameObjectRef portalPrefab
  Transform portalSpawnPoint
  BasePortal exitPortal
  GameObjectRef doorPrefab
  Transform doorSpawnPoint
  Door doorInstance
  Vector3 nextDungeonPos
  Vector3 dungeonStartPoint
  float dungeonSpacing
  SpawnGroup[] spawnGroups
  bool AutoMergeAIZones
Свойства:
Методы:
  void AddDungeon(DynamicDungeon newDungeon)
  void RemoveDungeon(DynamicDungeon dungeon)
  Vector3 GetNextDungeonPoint()
  IEnumerator UpdateNavMesh()
  void DestroyShared()
  void ServerInit()
  void MergeAIZones()
  void MissionStarted(BasePlayer assignee, MissionInstance instance)
  void MissionEnded(BasePlayer assignee, MissionInstance instance)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HalloweenDungeon
Наследуется от: BasePortal
Поля:
  GameObjectRef dungeonPrefab
  EntityRef`1<ProceduralDynamicDungeon> dungeonInstance
  float population
  float lifetime
  float secondsUsed
  float timeAlive
  AnimationCurve radiationCurve
  Phrase collapsePhrase
  Phrase mountPhrase
  bool anyplayers_cached
  float nextPlayerCheckTime
Свойства:
Методы:
  float GetLifetime()
  void Load(LoadInfo info)
  float GetLifeFraction()
  void Update()
  void KillIfNoPlayers()
  bool AnyPlayersInside()
  void ClearAllEntitiesInRadius(float radius)
  void Save(SaveInfo info)
  void PostServerLoad()
  void UsePortal(BasePlayer player)
  void Spawn()
  void ServerInit()
  void CheckBlocked()
  Vector3 GetDungeonSpawnPoint()
  void DoServerDestroy()
  void DelayedDestroy()
  void SpawnSubEntities()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: XmasDungeon
Наследуется от: HalloweenDungeon
Поля:
  Flags HasPlayerOutside
  Flags HasPlayerInside
  float xmaspopulation
  float xmaslifetime
  float playerdetectrange
Свойства:
Методы:
  float GetLifetime()
  void ServerInit()
  void PlayerChecks()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ProceduralDungeonCell
Наследуется от: BaseMonoBehaviour
Поля:
  bool north
  bool east
  bool south
  bool west
  bool entrance
  bool hasSpawn
  Transform exitPointHack
  SpawnGroup[] spawnGroups
  MeshRenderer[] mapRenderers
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: ProceduralDynamicDungeon
Наследуется от: BaseEntity
Поля:
  int gridResolution
  float gridSpacing
  Boolean[] grid
  List`1<GameObjectRef> cellPrefabReferences
  List`1<ProceduralDungeonCell> spawnedCells
  EnvironmentVolume envVolume
  MonumentNavMesh monumentNavMesh
  GameObjectRef exitPortalPrefab
  EntityRef`1<BasePortal> exitPortal
  TriggerRadiation exitRadiation
  UInt32 seed
  UInt32 baseseed
  Vector3 mapOffset
  List`1<ProceduralDynamicDungeon> dungeons
  ProceduralDungeonCell entranceHack
Свойства:
Методы:
  void InitShared()
  void OnFlagsChanged(Flags old, Flags next)
  BaseEntity GetExitPortal(bool serverSide)
  void DestroyShared()
  bool ContainsAnyPlayers()
  void KillPlayers()
  void DoServerDestroy()
  void ServerInit()
  void DoGeneration()
  void CreateAIZ()
  void PostServerLoad()
  IEnumerator UpdateNavMesh()
  void Save(SaveInfo info)
  BasePortal GetExitPortal()
  void InitSpawnGroups()
  void CleanupSpawnGroups()
  void Load(LoadInfo info)
  void GenerateGrid()
  ProceduralDungeonCell CellInstantiate(string path)
  void RetireCell(GameObject cell)
  void RetireAllCells()
  bool CanSeeEntrance(int x, int y, List`1& checkedCells)
  bool HasPathToEntrance(int x, int y)
  bool CanFindEntrance(int x, int y)
  bool IsEntrance(int x, int y)
  int GetEntranceIndex()
  void SetEntrance(int x, int y)
  void SetGridState(int x, int y, bool state)
  bool GetGridState(int x, int y)
  int GetGridX(int index)
  int GetGridY(int index)
  int GetGridIndex(int x, int y)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConversationData
Наследуется от: ScriptableObject
Поля:
  string shortname
  Phrase providerNameTranslated
  SpeechNode[] speeches
Свойства:
  string providerName
Методы:
  string get_providerName()
  int GetSpeechNodeIndex(string speechShortName)
  void .ctor()
--------------------------------------------------
Класс: HorseSpawner
Наследуется от: VehicleSpawner
Поля:
  float respawnDelay
  float respawnDelayVariance
  bool spawnForSale
Свойства:
  bool LogAnalytics
Методы:
  void ServerInit()
  int GetOccupyLayer()
  void RespawnHorse()
  bool get_LogAnalytics()
  void .ctor()
--------------------------------------------------
Класс: ConversationManager
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IConversationProvider
Поля:
Свойства:
Методы:
  bool ProviderBusy()
--------------------------------------------------
Класс: NPCMissionProvider
Наследуется от: NPCTalking
Поля:
  MissionManifest manifest
Свойства:
Методы:
  NetworkableId ProviderID()
  Vector3 ProviderPosition()
  BaseEntity Entity()
  void OnConversationEnded(BasePlayer player)
  void OnConversationStarted(BasePlayer speakingTo)
  bool ContainsSpeech(string speech)
  string IntroOverride(string overrideSpeech)
  string GetConversationStartSpeech(BasePlayer player)
  void OnConversationAction(BasePlayer player, string action)
  void .ctor()
--------------------------------------------------
Класс: NPCShopKeeper
Наследуется от: NPCPlayer
Поля:
  EntityRef invisibleVendingMachineRef
  InvisibleVendingMachine machine
  float greetDir
  Vector3 initialFacingDir
  BasePlayer lastWavedAtPlayer
Свойства:
Методы:
  InvisibleVendingMachine GetVendingMachine()
  void OnDrawGizmos()
  void UpdateProtectionFromClothing()
  void Hurt(HitInfo info)
  void ServerInit()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void PostServerLoad()
  void DelayedSleepEnd()
  void GreetPlayer(BasePlayer player)
  void Greeting()
  void .ctor()
--------------------------------------------------
Класс: VehicleVendor
Наследуется от: NPCTalking
Поля:
  EntityRef spawnerRef
  VehicleSpawner vehicleSpawner
Свойства:
Методы:
  string GetConversationStartSpeech(BasePlayer player)
  VehicleSpawner GetVehicleSpawner()
  void UpdateFlags()
  void ServerInit()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  ConversationData GetConversationFor(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: VehicleSpawner
Наследуется от: BaseEntity
Поля:
  float spawnNudgeRadius
  float cleanupRadius
  float occupyRadius
  SpawnPair[] objectsToSpawn
  Transform spawnOffset
  float safeRadius
Свойства:
  bool LogAnalytics
Методы:
  int GetOccupyLayer()
  IVehicleSpawnUser GetVehicleOccupying()
  bool IsPadOccupied()
  void OnEntityMessage(BaseEntity from, string msg)
  IVehicleSpawnUser SpawnVehicle(string prefabToSpawn, BasePlayer newOwner)
  bool get_LogAnalytics()
  void CleanupArea(float radius)
  void NudgePlayersInRadius(float radius)
  void .ctor()
--------------------------------------------------
Класс: ch47Animator
Наследуется от: MonoBehaviour
Поля:
  Animator animator
  bool bottomDoorOpen
  bool landingGearDown
  bool leftDoorOpen
  bool rightDoorOpen
  bool rearDoorOpen
  bool rearDoorExtensionOpen
  Transform rearRotorBlade
  Transform frontRotorBlade
  float rotorBladeSpeed
  float wheelTurnSpeed
  float wheelTurnAngle
  SkinnedMeshRenderer[] blurredRotorBlades
  SkinnedMeshRenderer[] RotorBlades
  bool blurredRotorBladesEnabled
  float blurSpeedThreshold
Свойства:
Методы:
  void Start()
  void SetDropDoorOpen(bool isOpen)
  void Update()
  void LateUpdate()
  void EnableBlurredRotorBlades(bool enabled)
  void .ctor()
--------------------------------------------------
Класс: CH47FlightTest
Наследуется от: MonoBehaviour
Поля:
  Rigidbody rigidBody
  float engineThrustMax
  Vector3 torqueScale
  Transform com
  Transform[] GroundPoints
  Transform[] GroundEffects
  float currentThrottle
  float avgThrust
  float liftDotMax
  Transform AIMoveTarget
  float altitudeTolerance
Свойства:
Методы:
  void Awake()
  HelicopterInputState_t GetHelicopterInputState()
  HelicopterInputState_t GetAIInputState()
  float GetIdealAltitude()
  void FixedUpdate()
  void OnDrawGizmos()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: rottest
Наследуется от: MonoBehaviour
Поля:
  Transform turretBase
  Vector3 aimDir
Свойства:
Методы:
  void Start()
  void Update()
  void UpdateAiming()
  void .ctor()
--------------------------------------------------
Класс: BasePath
Наследуется от: MonoBehaviour
Поля:
  List`1<BasePathNode> nodes
  List`1<PathInterestNode> interestZones
  List`1<PathSpeedZone> speedZones
Свойства:
  IEnumerable`1<IAIPathInterestNode> InterestNodes
  IEnumerable`1<IAIPathSpeedZone> SpeedZones
Методы:
  IEnumerable`1<IAIPathInterestNode> get_InterestNodes()
  IEnumerable`1<IAIPathSpeedZone> get_SpeedZones()
  void AddChildren()
  void ClearChildren()
  void AutoGenerateLinks(BasePath path, float maxRange)
  void GetNodesNear(Vector3 point, List`1& nearNodes, float dist)
  IAIPathNode GetClosestToPoint(Vector3 point)
  IAIPathInterestNode GetRandomInterestNodeAwayFrom(Vector3 from, float dist)
  void AddInterestNode(IAIPathInterestNode interestZone)
  void AddSpeedZone(IAIPathSpeedZone speedZone)
  void .ctor()
--------------------------------------------------
Класс: BasePathNode
Наследуется от: MonoBehaviour
Поля:
  BasePath Path
  List`1<BasePathNode> linked
  float maxVelocityOnApproach
  bool straightaway
Свойства:
  Vector3 Position
  bool Straightaway
  IEnumerable`1<IAIPathNode> Linked
Методы:
  Vector3 get_Position()
  bool get_Straightaway()
  IEnumerable`1<IAIPathNode> get_Linked()
  bool IsValid()
  void AddLink(IAIPathNode link)
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: BradleyMoveTest
Наследуется от: MonoBehaviour
Поля:
  WheelCollider[] leftWheels
  WheelCollider[] rightWheels
  float moveForceMax
  float brakeForce
  float throttle
  float turnForce
  float sideStiffnessMax
  float sideStiffnessMin
  Transform centerOfMass
  float turning
  bool brake
  Rigidbody myRigidBody
  Vector3 destination
  float stoppingDist
  GameObject followTest
Свойства:
Методы:
  void Awake()
  void Initialize()
  void SetDestination(Vector3 dest)
  void FixedUpdate()
  void ApplyBrakes(float amount)
  float GetMotorTorque(bool rightSide)
  void SetMotorTorque(float newThrottle, bool rightSide, float torqueAmount)
  void ApplyBrakeTorque(float amount, bool rightSide)
  void AdjustFriction()
  void .ctor()
--------------------------------------------------
Класс: BradleySpawner
Наследуется от: MonoBehaviour
Поля:
  BasePath path
  GameObjectRef bradleyPrefab
  BradleyAPC spawned
  bool initialSpawn
  float minRespawnTimeMinutes
  float maxRespawnTimeMinutes
  BradleySpawner singleton
  bool pendingRespawn
Свойства:
Методы:
  void Start()
  void DelayedStart()
  void CheckIfRespawnNeeded()
  void ScheduleRespawn()
  void DoRespawn()
  void SpawnBradley()
  void .ctor()
--------------------------------------------------
Класс: IAIPath
Поля:
Свойства:
  IEnumerable`1<IAIPathSpeedZone> SpeedZones
  IEnumerable`1<IAIPathInterestNode> InterestNodes
Методы:
  IEnumerable`1<IAIPathSpeedZone> get_SpeedZones()
  IEnumerable`1<IAIPathInterestNode> get_InterestNodes()
  void GetNodesNear(Vector3 point, List`1& nearNodes, float dist)
  IAIPathInterestNode GetRandomInterestNodeAwayFrom(Vector3 from, float dist)
  IAIPathNode GetClosestToPoint(Vector3 point)
  void AddInterestNode(IAIPathInterestNode interestNode)
  void AddSpeedZone(IAIPathSpeedZone speedZone)
--------------------------------------------------
Класс: IAIPathNode
Поля:
Свойства:
  Vector3 Position
  bool Straightaway
  IEnumerable`1<IAIPathNode> Linked
Методы:
  Vector3 get_Position()
  bool get_Straightaway()
  IEnumerable`1<IAIPathNode> get_Linked()
  bool IsValid()
  void AddLink(IAIPathNode link)
--------------------------------------------------
Класс: IAIPathSpeedZone
Поля:
Свойства:
Методы:
  OBB WorldSpaceBounds()
  float GetMaxSpeed()
--------------------------------------------------
Класс: IAIPathInterestNode
Поля:
Свойства:
  Vector3 Position
  float NextVisitTime
Методы:
  Vector3 get_Position()
  float get_NextVisitTime()
  void set_NextVisitTime(float value)
--------------------------------------------------
Класс: PathInterestNode
Наследуется от: MonoBehaviour
Поля:
  float <NextVisitTime>k__BackingField
Свойства:
  Vector3 Position
  float NextVisitTime
Методы:
  Vector3 get_Position()
  float get_NextVisitTime()
  void set_NextVisitTime(float value)
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: PathSpeedZone
Наследуется от: MonoBehaviour
Поля:
  Bounds bounds
  OBB obbBounds
  float maxVelocityPerSec
Свойства:
Методы:
  OBB WorldSpaceBounds()
  float GetMaxSpeed()
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: RuntimeInterestNode
Наследуется от: object
Поля:
  Vector3 <Position>k__BackingField
  float <NextVisitTime>k__BackingField
Свойства:
  Vector3 Position
  float NextVisitTime
Методы:
  Vector3 get_Position()
  void set_Position(Vector3 value)
  float get_NextVisitTime()
  void set_NextVisitTime(float value)
  void .ctor(Vector3 position)
--------------------------------------------------
Класс: RuntimePath
Наследуется от: object
Поля:
  IAIPathNode[] <Nodes>k__BackingField
  List`1<IAIPathSpeedZone> speedZones
  List`1<IAIPathInterestNode> interestNodes
Свойства:
  IAIPathNode[] Nodes
  IEnumerable`1<IAIPathSpeedZone> SpeedZones
  IEnumerable`1<IAIPathInterestNode> InterestNodes
Методы:
  IAIPathNode[] get_Nodes()
  void set_Nodes(IAIPathNode[] value)
  IEnumerable`1<IAIPathSpeedZone> get_SpeedZones()
  IEnumerable`1<IAIPathInterestNode> get_InterestNodes()
  IAIPathNode GetClosestToPoint(Vector3 point)
  void GetNodesNear(Vector3 point, List`1& nearNodes, float dist)
  IAIPathInterestNode GetRandomInterestNodeAwayFrom(Vector3 from, float dist)
  void AddInterestNode(IAIPathInterestNode interestNode)
  void AddSpeedZone(IAIPathSpeedZone speedZone)
  void .ctor()
--------------------------------------------------
Класс: RuntimePathNode
Наследуется от: object
Поля:
  Vector3 <Position>k__BackingField
  bool <Straightaway>k__BackingField
  HashSet`1<IAIPathNode> linked
Свойства:
  Vector3 Position
  bool Straightaway
  IEnumerable`1<IAIPathNode> Linked
Методы:
  Vector3 get_Position()
  void set_Position(Vector3 value)
  bool get_Straightaway()
  void set_Straightaway(bool value)
  IEnumerable`1<IAIPathNode> get_Linked()
  void .ctor(Vector3 position)
  bool IsValid()
  void AddLink(IAIPathNode link)
--------------------------------------------------
Класс: RuntimeSpeedZone
Наследуется от: object
Поля:
  OBB worldOBBBounds
  float maxVelocityPerSec
Свойства:
Методы:
  float GetMaxSpeed()
  OBB WorldSpaceBounds()
  void .ctor()
--------------------------------------------------
Класс: TreadAnimator
Наследуется от: MonoBehaviour
Поля:
  Animator mainBodyAnimator
  Transform[] wheelBones
  Vector3[] vecShocksOffsetPosition
  Vector3[] wheelBoneOrigin
  float wheelBoneDistMax
  Material leftTread
  Material rightTread
  TreadEffects treadEffects
  float traceThickness
  float heightFudge
  bool useWheelYOrigin
  Vector2 treadTextureDirection
  bool isMetallic
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TreadEffects
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem[] rearTreadDirt
  ParticleSystem[] rearTreadSmoke
  ParticleSystem[] middleTreadSmoke
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NPCPlayerCorpse
Наследуется от: PlayerCorpse
Поля:
  bool lootEnabled
Свойства:
Методы:
  float GetRemovalTime()
  bool CanLoot()
  void SetLootableIn(float when)
  void EnableLooting()
  bool CanLootContainer(ItemContainer c, int index)
  void PreDropItems()
  void .ctor()
--------------------------------------------------
Класс: ItemModSetFrequency
Наследуется от: ItemMod
Поля:
  GameObjectRef frequencyPanelPrefab
  bool allowArmDisarm
  bool onlyFrequency
  int defaultFrequency
  bool loseConditionOnChange
  List`1<ItemTime> itemsOnCooldown
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void OnItemCreated(Item item)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: FishingBobber
Наследуется от: BaseCombatEntity
Поля:
  Transform centerOfMass
  Rigidbody myRigidBody
  Transform lineAttachPoint
  Transform bobberRoot
  Flags CaughtFish
  float HorizontalMoveSpeed
  float PullAwayMoveSpeed
  float SidewaysInputForce
  float ReelInMoveSpeed
  float bobberForcePingPong
  Vector3 initialDirection
  float <TireAmount>k__BackingField
  Vector3 initialTargetPosition
  Vector3 spawnPosition
  TimeSince initialCastTime
  float initialDistance
Свойства:
  float TireAmount
Методы:
  float get_TireAmount()
  void set_TireAmount(float value)
  void ServerInit()
  void InitialiseBobber(BasePlayer forPlayer, WaterBody forBody, Vector3 targetPos)
  void ProcessInitialCast()
  void ServerMovementUpdate(bool inputLeft, bool inputRight, bool inputBack, FishState& state, Vector3 playerPos, ItemModFishable fishableModifier)
  bool IsDirectionValid(Vector3 pos, float checkLength, Vector3 playerPos)
  void .ctor()
--------------------------------------------------
Класс: BobberPreview
Наследуется от: MonoBehaviour
Поля:
  Material ValidMaterial
  Material InvalidMaterial
  MeshRenderer TargetRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FishLookup
Наследуется от: PrefabAttribute
Поля:
  ItemModFishable FallbackFish
  ItemModFishable[] AvailableFish
  ItemDefinition[] BaitItems
  TimeSince lastShuffle
  int ALL_FISH_COUNT
  string ALL_FISH_ACHIEVEMENT_NAME
Свойства:
Методы:
  void LoadFish()
  ItemDefinition GetFish(Vector3 worldPos, WaterBody bodyType, ItemDefinition lure, ItemModFishable& fishable, ItemModFishable ignoreFish)
  void CheckCatchAllAchievement(BasePlayer player)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: MapMarkerCH47
Наследуется от: MapMarker
Поля:
  GameObject createdMarker
Свойства:
Методы:
  float GetRotation()
  AppMarker GetAppMarkerData()
  void .ctor()
--------------------------------------------------
Класс: MapMarkerExplosion
Наследуется от: MapMarker
Поля:
  float duration
Свойства:
Методы:
  void SetDuration(float newDuration)
  void Load(LoadInfo info)
  void DelayedDestroy()
  void .ctor()
--------------------------------------------------
Класс: MobileMapMarker
Наследуется от: MapMarker
Поля:
  GameObject createdMarker
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModPager
Наследуется от: ItemModRFListener
Поля:
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModRFListener
Наследуется от: ItemModAssociatedEntity`1<BaseEntity>
Поля:
  GameObjectRef frequencyPanelPrefab
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ClientIOLine_Pipe
Наследуется от: ClientIOLine
Поля:
  NotifyLOD NotifyLod
  PipeMesh PipeRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PipeMesh
Наследуется от: MonoBehaviour
Поля:
  float PipeRadius
  Material PipeMaterial
  float StraightLength
  int PipeSubdivisions
  int BendTesselation
  float RidgeHeight
  float UvScaleMultiplier
  float RidgeIncrements
  float RidgeLength
  Vector2 HorizontalUvRange
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PipeMeshTester
Наследуется от: MonoBehaviour
Поля:
  List`1<Vector3> positions
  Vector3 startDir
  Vector3 endDir
  Transform startGuide
  Transform endGuide
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AlignedLineDrawer
Наследуется от: MonoBehaviour
Поля:
  MeshFilter Filter
  MeshRenderer Renderer
  float LineWidth
  float SurfaceOffset
  float SprayThickness
  float uvTilingFactor
  bool DrawEndCaps
  bool DrawSideMesh
  bool DrawBackMesh
  SprayCanSpray_Freehand Spray
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AlignedLineDrawerDecal
Наследуется от: AlignedLineDrawer
Поля:
  DeferredDecal decalComponent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReskinEffect
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem TargetSystem
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SprayCanViewmodel
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem Particles
  SoundDefinition sprayLoopDef
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SprayCanSpray_Decal
Наследуется от: SprayCanSpray
Поля:
  DeferredDecal DecalComponent
  GameObject IconPreviewRoot
  Material DefaultMaterial
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ClientIOLine
Наследуется от: BaseMonoBehaviour
Поля:
  RendererLOD _lod
  LineRenderer _line
  Material directionalMaterial
  Material defaultMaterial
  IOType lineType
  List`1<ClientIOLine> _allLines
  WireColour colour
  IOEntity ownerIOEnt
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CassettePanel
Наследуется от: NotePanel
Поля:
  GameObject[] CassetteSprites
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectMount
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  bool firstPerson
  GameObject effectPrefab
  GameObject spawnedEffect
  GameObject mountBone
  SoundDefinition onSoundDef
  SoundDefinition offSoundDef
  bool blockOffSoundWhenGettingDisabled
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectParent
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  GameObject effect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FlashlightBeam
Наследуется от: MonoBehaviour
Поля:
  Vector2 scrollDir
  Vector3 localEndPoint
  LineRenderer beamRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LineRendererActivate
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: HolosightReticlePositioning
Наследуется от: MonoBehaviour
Поля:
  IronsightAimPoint aimPoint
Свойства:
  RectTransform rectTransform
Методы:
  RectTransform get_rectTransform()
  void Update()
  void UpdatePosition(Camera cam)
  void .ctor()
--------------------------------------------------
Класс: LaserBeam
Наследуется от: MonoBehaviour
Поля:
  float scrollSpeed
  LineRenderer beamRenderer
  GameObject dotObject
  Renderer dotRenderer
  GameObject dotSpotlight
  Vector2 scrollDir
  float maxDistance
  float stillBlendFactor
  float movementBlendFactor
  float movementThreshhold
  bool isFirstPerson
  Transform emissionOverride
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HideIfScoped
Наследуется от: MonoBehaviour
Поля:
  Renderer[] renderers
Свойства:
Методы:
  void SetVisible(bool vis)
  void .ctor()
--------------------------------------------------
Класс: ViewmodelScope
Наследуется от: MonoBehaviour
Поля:
  float smoothSpeed
  Material scopeMaterialOverride
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HideIfAiming
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem[] systems
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: v_chainsaw
Наследуется от: MonoBehaviour
Поля:
  bool bAttacking
  bool bHitMetal
  bool bHitWood
  bool bHitFlesh
  bool bEngineOn
  ParticleSystem[] hitMetalFX
  ParticleSystem[] hitWoodFX
  ParticleSystem[] hitFleshFX
  SoundDefinition hitMetalSoundDef
  SoundDefinition hitWoodSoundDef
  SoundDefinition hitFleshSoundDef
  Sound hitSound
  GameObject hitSoundTarget
  float hitSoundFadeTime
  ParticleSystem smokeEffect
  Animator chainsawAnimator
  Renderer chainRenderer
  Material chainlink
  MaterialPropertyBlock block
  Vector2 saveST
  float chainSpeed
  float chainAmount
  float temp1
  float temp2
Свойства:
Методы:
  void OnEnable()
  void Awake()
  void Start()
  void ScrollChainTexture()
  void Update()
  void DoHitSound(SoundDefinition soundDef)
  void .ctor()
--------------------------------------------------
Класс: DoubleShotgunViewModel
Наследуется от: BaseViewModel
Поля:
  GameObject NoSkinRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FlameJet
Наследуется от: MonoBehaviour
Поля:
  LineRenderer line
  float tesselation
  float length
  float maxLength
  float drag
  int numSegments
  float spacing
  bool on
  Vector3[] lastWorldSegments
  Vector3[] currentSegments
  Color startColor
  Color endColor
  Color currentColor
Свойства:
Методы:
  void Initialize()
  void Awake()
  void LateUpdate()
  void SetOn(bool isOn)
  float curve(float x)
  void UpdateLine()
  void .ctor()
--------------------------------------------------
Класс: HomingLauncherUIDialog
Наследуется от: UIDialog
Поля:
  Canvas canvas
  GameObject mainUI
  GameObject scopeCircle
  RawImage blackScreen
  AnimationCurve fadeEffectCurve
  float visualSwapTime
  Image lockPercentImage
  Image trackingImage
  GameObject armedObj
  GameObject lockedObj
  GameObject noAmmoObj
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HomingLauncherViewModel
Наследуется от: BaseViewModel
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SeekerTest
Наследуется от: BaseEntity
Поля:
  GameObjectRef roadFlare
  bool useRoadFlares
  int numFlares
  int maxFlares
  float flareRegenTime
  float timeBetweenFlares
  Transform flareSpawnPoint
  float flareDuration
  float nextFlareRegenTime
Свойства:
Методы:
  void ServerInit()
  void Update()
  void DoFlare()
  void ClearFlares()
  void OnEntityMessage(BaseEntity from, string msg)
  void ClearWarning()
  void DestroyShared()
  bool IsValidHomingTarget()
  void .ctor()
--------------------------------------------------
Класс: ViewmodelIgniteToggle
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: ToolgunBeam
Наследуется от: MonoBehaviour
Поля:
  LineRenderer electricalBeam
  float scrollSpeed
  Color fadeColor
  float fadeSpeed
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ToolgunScreen
Наследуется от: MonoBehaviour
Поля:
  Text blockInfoText
  Text noBlockText
Свойства:
Методы:
  void SetScreenText(string newText)
  void .ctor()
--------------------------------------------------
Класс: AnimalBrain
Наследуется от: BaseAIBrain
Поля:
  int Count
  NavigationSpeed ControlTestAnimalSpeed
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  void OnDestroy()
  BaseAnimalNPC GetEntity()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Bear
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Polarbear
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Boar
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Chicken
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: FishBrain
Наследуется от: BaseAIBrain
Поля:
  int Count
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: SimpleShark
Наследуется от: BaseCombatEntity
Поля:
  Vector3 destination
  float minSpeed
  float maxSpeed
  float idealDepth
  float minTurnSpeed
  float maxTurnSpeed
  float attackCooldown
  float aggroRange
  float obstacleDetectionRadius
  Animator animator
  GameObjectRef bloodCloud
  GameObjectRef corpsePrefab
  string SPEARGUN_KILL_STAT
  float forceSurfaceAmount
  bool disable
  Vector3 spawnPos
  float stoppingDistance
  float currentSpeed
  float lastStartleTime
  float startleDuration
  SimpleState[] states
  SimpleState _currentState
  bool sleeping
  List`1<Vector3> patrolPath
  BasePlayer target
  float lastSeenTargetTime
  float nextTargetSearchTime
  BasePlayer[] playerQueryResults
  float minFloorDist
  float minSurfaceDist
  float lastTimeAttacked
  float nextAttackTime
  Vector3 cachedObstacleNormal
  float cachedObstacleDistance
  float obstacleAvoidanceScale
  float obstacleDetectionRange
  float timeSinceLastObstacleCheck
Свойства:
  bool IsNpc
Методы:
  bool get_IsNpc()
  void GenerateIdlePoints(Vector3 center, float radius, float heightOffset, float staggerOffset)
  void GenerateIdlePoints_Shrinkwrap(Vector3 center, float radius, float heightOffset, float staggerOffset)
  void ServerInit()
  void CheckSleepState()
  void Init()
  void Think(float delta)
  Vector3 WaterClamp(Vector3 point)
  bool ValidTarget(BasePlayer newTarget)
  void ClearTarget()
  void OnKilled(HitInfo hitInfo)
  void UpdateTarget(float delta)
  float TimeSinceAttacked()
  void OnAttacked(HitInfo info)
  bool HasTarget()
  BasePlayer GetTarget()
  string Categorize()
  bool CanAttack()
  void DoAttack()
  void Startle()
  bool IsStartled()
  float GetDesiredSpeed()
  float GetTurnSpeed()
  float GetCurrentSpeed()
  void UpdateObstacleAvoidance(float delta)
  void UpdateDirection(float delta)
  void UpdatePosition(float delta)
  void UpdateSpeed(float delta)
  void Update()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AnimalRagdoll
Наследуется от: Ragdoll
Поля:
  SkinnedMeshRenderer[] bodyRenderers
  SkinnedMeshRenderer[] hairRenderers
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Horse
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  void ServerInit()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
--------------------------------------------------
Класс: HorseRagdoll
Наследуется от: AnimalRagdoll
Поля:
  GameObject mane
  GameObject woodArmor
  GameObject roadsignArmor
  HorseBreed overrideBreed
  GameObject singleSaddle
  GameObject doubleSaddle
  GameObjectRef breedSource
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BasePet
Наследуется от: NPCPlayer
Поля:
  Dictionary`2<ulong, BasePet> ActivePetByOwnerID
  bool queuedMovementsAllowed
  bool onlyQueueBaseNavMovements
  float movementupdatebudgetms
  float BaseAttackRate
  float BaseAttackDamge
  DamageType AttackDamageType
  PetBrain <Brain>k__BackingField
  GameObjectRef mapMarkerPrefab
  BaseEntity _mapMarkerInstance
  bool inQueue
  Queue`1<BasePet> _movementProcessQueue
Свойства:
  PetBrain Brain
Методы:
  PetBrain get_Brain()
  void set_Brain(PetBrain value)
  float StartHealth()
  float StartMaxHealth()
  float MaxHealth()
  void ProcessMovementQueue()
  void DoBudgetedMoveUpdate()
  bool IsLoadBalanced()
  void ServerInit()
  void CreateMapMarker()
  void DoServerDestroy()
  void TryThink()
  void ServerThink(float delta)
  void ApplyPetStatModifiers()
  void OnPhysicsNeighbourChanged()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GingerbreadBrain
Наследуется от: BaseAIBrain
Поля:
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: GingerbreadNPC
Наследуется от: HumanNPC
Поля:
  GameObjectRef OverrideCorpseMale
  GameObjectRef OverrideCorpseFemale
  PhysicMaterial HitMaterial
  bool RoamAroundHomePoint
Свойства:
  string CorpseResourcePath
Методы:
  void OnAttacked(HitInfo info)
  string Categorize()
  bool ShouldDropActiveItem()
  BaseCorpse CreateCorpse()
  void AttackerInfo(DeathInfo info)
  string get_CorpseResourcePath()
  void OnClientStateChanged(AIState state)
  void .ctor()
  float <get_CorpseResourcePath>g__GetFloatBasedOnUserID|10_0(ulong steamid, ulong seed)
--------------------------------------------------
Класс: AIThinkManager
Наследуется от: BaseMonoBehaviour
Поля:
  ListHashSet`1<IThinker> _processQueue
  ListHashSet`1<IThinker> _removalQueue
  ListHashSet`1<IThinker> _animalProcessQueue
  ListHashSet`1<IThinker> _animalremovalQueue
  ListHashSet`1<IThinker> _petProcessQueue
  ListHashSet`1<IThinker> _petRemovalQueue
  float framebudgetms
  float animalframebudgetms
  float petframebudgetms
  int lastIndex
  int lastAnimalIndex
  int lastPetIndex
Свойства:
Методы:
  void ProcessQueue(QueueType queueType)
  void DoRemoval(ListHashSet`1<IThinker> removal, ListHashSet`1<IThinker> process)
  void DoProcessing(ListHashSet`1<IThinker> process, float budgetSeconds, Int32& last)
  void Add(IThinker toAdd)
  void Remove(IThinker toRemove)
  void AddAnimal(IThinker toAdd)
  void RemoveAnimal(IThinker toRemove)
  void AddPet(IThinker toAdd)
  void RemovePet(IThinker toRemove)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BanditGuard
Наследуется от: HumanNPC
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HumanNPC
Наследуется от: NPCPlayer
Поля:
  int AdditionalLosBlockingLayer
  LootSpawnSlot[] LootSpawnSlots
  float aimConeScale
  float lastDismountTime
  ScientistBrain <Brain>k__BackingField
  bool lightsOn
  float nextZoneSearchTime
  AIInformationZone cachedInfoZone
  float targetAimedDuration
  float lastAimSetTime
  Vector3 aimOverridePosition
Свойства:
  ScientistBrain Brain
Методы:
  float StartHealth()
  float StartMaxHealth()
  float MaxHealth()
  ScientistBrain get_Brain()
  void set_Brain(ScientistBrain value)
  bool IsLoadBalanced()
  void ServerInit()
  void DoServerDestroy()
  void LightCheck()
  float GetAimConeScale()
  void EquipWeapon(bool skipDeployDelay)
  void DismountObject()
  bool RecentlyDismounted()
  float GetIdealDistanceFromTarget()
  AIInformationZone GetInformationZone(Vector3 pos)
  float EngagementRange()
  void SetDucked(bool flag)
  void TryThink()
  void ServerThink(float delta)
  void TickAttack(float delta, BaseCombatEntity target, bool targetIsLOS)
  void Hurt(HitInfo info)
  float GetAimSwayScalar()
  Vector3 GetAimDirection()
  void SetAimDirection(Vector3 newAim)
  void SetStationaryAimPoint(Vector3 aimAt)
  void ClearStationaryAimPoint()
  bool ShouldDropActiveItem()
  BaseCorpse CreateCorpse()
  string OverrideCorpseName()
  void AttackerInfo(DeathInfo info)
  bool IsThreat(BaseEntity entity)
  bool IsTarget(BaseEntity entity)
  bool IsFriendly(BaseEntity entity)
  bool CanAttack(BaseEntity entity)
  bool IsTargetInRange(BaseEntity entity, Single& dist)
  bool CanSeeTarget(BaseEntity entity)
  bool NeedsToReload()
  bool Reload()
  float CooldownDuration()
  bool IsOnCooldown()
  bool StartAttacking(BaseEntity entity)
  void StopAttacking()
  float GetAmmoFraction()
  BaseEntity GetBestTarget()
  void AttackTick(float delta, BaseEntity target, bool targetIsLOS)
  void UseHealingItem(Item item)
  IEnumerator Heal(Item item)
  Item FindHealingItem()
  bool IsOnGround()
  void .ctor()
--------------------------------------------------
Класс: HumanPathFinder
Наследуется от: BasePathFinder
Поля:
  BaseEntity npc
Свойства:
Методы:
  void Init(BaseEntity npc)
  AIMovePoint GetBestRoamPoint(Vector3 anchorPos, Vector3 currentPos, Vector3 currentDirection, float anchorClampDistance, float lookupMaxRange)
  AIMovePoint GetBestRoamPoint(AIInformationZone aiZone, Vector3 anchorPos, Vector3 currentPos, Vector3 currentDirection, float clampDistance, float lookupMaxRange)
  void .ctor()
--------------------------------------------------
Класс: IThinker
Поля:
Свойства:
Методы:
  void TryThink()
--------------------------------------------------
Класс: ScientistBrain
Наследуется от: BaseAIBrain
Поля:
  int Count
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  void OnDestroy()
  HumanNPC GetEntity()
  void OnStateChanged()
  void .ctor()
--------------------------------------------------
Класс: ScientistNPC
Наследуется от: HumanNPC
Поля:
  GameObjectRef[] RadioChatterEffects
  GameObjectRef[] DeathEffects
  string deathStatName
  Vector2 IdleChatterRepeatRange
  RadioChatterType radioChatterType
  float lastAlertedTime
Свойства:
Методы:
  void SetChatterType(RadioChatterType newType)
  void ServerInit()
  void IdleCheck()
  void QueueRadioChatter()
  bool ShotTest(float targetDist)
  void Alert()
  void OnAttacked(HitInfo info)
  void OnKilled(HitInfo info)
  void PlayRadioChatter()
  void EquipWeapon(bool skipDeployDelay)
  bool IsMounted()
  string OverrideCorpseName()
  void .ctor()
--------------------------------------------------
Класс: TunnelDweller
Наследуется от: HumanNPC
Поля:
  string DWELLER_KILL_STAT
Свойства:
Методы:
  string OverrideCorpseName()
  void OnKilledByPlayer(BasePlayer p)
  void .ctor()
--------------------------------------------------
Класс: UnderwaterDweller
Наследуется от: HumanNPC
Поля:
Свойства:
Методы:
  string OverrideCorpseName()
  void .ctor()
--------------------------------------------------
Класс: NPCPlayer
Наследуется от: BasePlayer
Поля:
  AIInformationZone VirtualInfoZone
  Vector3 finalDestination
  float randomOffset
  Vector3 spawnPos
  PlayerInventoryProperties[] loadouts
  LayerMask movementMask
  bool LegacyNavigation
  NavMeshAgent NavAgent
  float damageScale
  float shortRange
  float attackLengthMaxShortRangeScale
  bool _isDormant
  float lastGunShotTime
  float triggerEndTime
  float nextTriggerTime
  float lastThinkTime
  float lastPositionUpdateTime
  float lastMovementTickTime
  Vector3 lastPos
  float lastThrowTime
Свойства:
  bool IsNpc
  bool IsDormant
  float PositionTickRate
  bool IsOnNavMeshLink
  bool HasPath
Методы:
  bool get_IsNpc()
  bool get_IsDormant()
  void set_IsDormant(bool value)
  float get_PositionTickRate()
  bool IsLoadBalanced()
  void ServerInit()
  void EquipLoadout(PlayerInventoryProperties[] loads)
  void ApplyInheritedVelocity(Vector3 velocity)
  void RandomMove()
  void SetDestination(Vector3 newDestination)
  AttackEntity GetAttackEntity()
  BaseProjectile GetGun()
  float AmmoFractionRemaining()
  bool IsReloading()
  void AttemptReload()
  bool ShotTest(float targetDist)
  float GetAimConeScale()
  void CancelBurst(float delay)
  bool MeleeAttack()
  void TriggerDown()
  void EquipWeapon(bool skipDeployDelay)
  void EquipTest()
  void ServerThink_Internal()
  void ServerThink(float delta)
  void Resume()
  bool IsNavRunning()
  bool get_IsOnNavMeshLink()
  bool get_HasPath()
  void TickAi(float delta)
  void TickMovement()
  float GetNetworkTime()
  void MovementUpdate(float delta)
  bool ValidateNextPosition(Vector3& moveToPosition)
  void UpdateSpeed(float delta)
  void UpdatePositionAndRotation(Vector3 moveToPosition)
  Vector3 GetPosition()
  float DesiredMoveSpeed()
  bool EligibleForWounding(HitInfo info)
  Vector3 GetAimDirection()
  void SetAimDirection(Vector3 newAim)
  bool TryUseThrownWeapon(BaseEntity target, float attackRate)
  bool TryUseThrownWeapon(Item item, BaseEntity target, float attackRate)
  bool HasThrownItemCooldown()
  bool UseThrownWeapon(Item item, BaseEntity target)
  IEnumerator DoThrow(ThrownWeapon thrownWeapon, BaseEntity target)
  Item FindThrownWeapon()
  void .ctor()
--------------------------------------------------
Класс: FrankensteinBrain
Наследуется от: PetBrain
Поля:
  float MoveTowardsRate
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  FrankensteinPet GetEntity()
  void OnDestroy()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MapMarkerPet
Наследуется от: MapMarker
Поля:
Свойства:
Методы:
  void ServerInit()
  bool ShouldNetworkTo(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ScarecrowBrain
Наследуется от: BaseAIBrain
Поля:
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: ScarecrowNPC
Наследуется от: NPCPlayer
Поля:
  ScarecrowBrain <Brain>k__BackingField
  float BaseAttackRate
  LootSpawnSlot[] LootSpawnSlots
  LootSpawnSlot[] bonusLootSlots
  float NextBeanCanAllowedTime
  bool BlockClothingOnCorpse
  bool RoamAroundHomePoint
  GameObjectRef soulReleaseEffect
  bool wasSoulReleased
Свойства:
  ScarecrowBrain Brain
  FamilyEnum Family
Методы:
  float StartHealth()
  float StartMaxHealth()
  float MaxHealth()
  ScarecrowBrain get_Brain()
  void set_Brain(ScarecrowBrain value)
  FamilyEnum get_Family()
  void ServerInit()
  void DoServerDestroy()
  void TryThink()
  void ServerThink(float delta)
  string Categorize()
  void EquipWeapon(bool skipDeployDelay)
  float EngagementRange()
  bool IsThreat(BaseEntity entity)
  bool IsTarget(BaseEntity entity)
  bool IsFriendly(BaseEntity entity)
  bool CanAttack(BaseEntity entity)
  bool IsTargetInRange(BaseEntity entity, Single& dist)
  bool CanSeeTarget(BaseEntity entity)
  bool NeedsToReload()
  bool Reload()
  float CooldownDuration()
  bool IsOnCooldown()
  bool StartAttacking(BaseEntity target)
  void Attack(BaseCombatEntity target)
  void StopAttacking()
  float GetAmmoFraction()
  BaseEntity GetBestTarget()
  void AttackTick(float delta, BaseEntity target, bool targetIsLOS)
  bool ShouldDropActiveItem()
  BaseCorpse CreateCorpse()
  void Hurt(HitInfo info)
  void AttackerInfo(DeathInfo info)
  void .ctor()
--------------------------------------------------
Класс: Stag
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Wolf
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  float RealisticMass
  TraitFlag Traits
Методы:
  float get_RealisticMass()
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  string Categorize()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Zombie
Наследуется от: BaseAnimalNPC
Поля:
  float Population
Свойства:
  TraitFlag Traits
Методы:
  TraitFlag get_Traits()
  bool WantsToEat(BaseEntity best)
  void TickSleep()
  string Categorize()
  void .ctor()
--------------------------------------------------
Класс: AIArena
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AIArenaNameTag
Наследуется от: MonoBehaviour
Поля:
  BasePlayer Entity
  bool ShowHealth
  bool ShowName
  string trimmedName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AICoverPoint
Наследуется от: AIPoint
Поля:
  float coverDot
Свойства:
Методы:
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: AICoverPointTool
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void PlaceCoverPoints()
  TestResult TestPoint(Vector3 pos)
  void PlacePoint(TestResult result)
  void PlacePoint(Vector3 pos, Vector3 dir)
  bool HitsCover(Ray ray, int layerMask, float maxDistance)
  void .ctor()
--------------------------------------------------
Класс: AIInformationCell
Наследуется от: object
Поля:
  Bounds BoundingBox
  List`1<AIInformationCell> NeighbourCells
  AIInformationCellContents`1<AIMovePoint> MovePoints
  AIInformationCellContents`1<AICoverPoint> CoverPoints
  int <X>k__BackingField
  int <Z>k__BackingField
Свойства:
  int X
  int Z
Методы:
  int get_X()
  int get_Z()
  void .ctor(Bounds bounds, GameObject root, int x, int z)
  void DebugDraw(Color color, bool points, float scale)
--------------------------------------------------
Класс: AIInformationCellContents`1
Наследуется от: object
Поля:
  HashSet`1<T> Items
Свойства:
  int Count
  bool Empty
Методы:
  int get_Count()
  bool get_Empty()
  void Init(Bounds cellBounds, GameObject root)
  void Clear()
  void Add(T item)
  void Remove(T item)
  void .ctor()
--------------------------------------------------
Класс: AIInformationGrid
Наследуется от: MonoBehaviour
Поля:
  int CellSize
  Bounds BoundingBox
  AIInformationCell[] Cells
  Vector3 origin
  int xCellCount
  int zCellCount
  int maxPointResults
  AIMovePoint[] movePointResults
  AICoverPoint[] coverPointResults
  int maxCellResults
  AIInformationCell[] resultCells
Свойства:
Методы:
  void Init()
  int GetIndex(int x, int z)
  AIInformationCell CellAt(int x, int z)
  AIMovePoint[] GetMovePointsInRange(Vector3 position, float maxRange, Int32& pointCount)
  AICoverPoint[] GetCoverPointsInRange(Vector3 position, float maxRange, Int32& pointCount)
  AIInformationCell[] GetCellsInRange(Vector3 position, float maxRange, Int32& cellCount)
  AIInformationCell GetCell(Vector3 position)
  void OnDrawGizmos()
  void DebugDraw()
  void .ctor()
--------------------------------------------------
Класс: AIInformationGridTester
Наследуется от: MonoBehaviour
Поля:
  AIInformationGrid Grid
  float Range
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AIInformationZone
Наследуется от: BaseMonoBehaviour
Поля:
  bool RenderBounds
  bool ShouldSleepAI
  bool Virtual
  bool UseCalculatedCoverDistances
  List`1<AIInformationZone> zones
  List`1<AICoverPoint> coverPoints
  List`1<AIMovePoint> movePoints
  AICoverPoint[] coverPointArray
  AIMovePoint[] movePointArray
  List`1<NavMeshLink> navMeshLinks
  List`1<AIMovePointPath> paths
  Bounds bounds
  AIInformationGrid grid
  bool <Sleeping>k__BackingField
  List`1<IAISleepable> sleepables
  OBB areaBox
  bool isDirty
  int processIndex
  int halfPaths
  int pathSuccesses
  int pathFails
  bool initd
  bool lastFrameAnyDirty
  float rebuildStartTime
  float buildTimeTest
  float lastNavmeshBuildTime
Свойства:
  bool Sleeping
  int SleepingCount
Методы:
  AIInformationZone Merge(List`1<AIInformationZone> zones, GameObject newRoot)
  Bounds EncapsulateBounds(List`1<AIInformationZone> zones)
  bool get_Sleeping()
  void set_Sleeping(bool value)
  int get_SleepingCount()
  void Start()
  void Init()
  void RegisterSleepableEntity(IAISleepable sleepable)
  void UnregisterSleepableEntity(IAISleepable sleepable)
  void SleepAI()
  void WakeAI()
  void AddCoverPoint(AICoverPoint point)
  void RemoveCoverPoint(AICoverPoint point, bool markDirty)
  void AddMovePoint(AIMovePoint point)
  void RemoveMovePoint(AIMovePoint point, bool markDirty)
  void MarkDirty(bool completeRefresh)
  bool PassesBudget(float startTime, float budgetSeconds)
  bool ProcessDistancesAttempt()
  bool ProcessDistances()
  void BudgetedTick()
  void NavmeshBuildingComplete()
  Vector3 ClosestPointTo(Vector3 target)
  void OnDrawGizmos()
  void OnDrawGizmosSelected()
  void DrawBounds()
  void AddInitialPoints()
  void RefreshPointArrays()
  void AddDynamicAIPoints(AIMovePoint[] movePoints, AICoverPoint[] coverPoints, Func`2<Vector3, bool> validatePoint)
  void RemoveDynamicAIPoints(AIMovePoint[] movePoints, AICoverPoint[] coverPoints)
  AIMovePointPath GetNearestPath(Vector3 position)
  AIInformationZone GetForPoint(Vector3 point, bool fallBackToNearest)
  bool PointInside(Vector3 point)
  AIMovePoint GetBestMovePointNear(Vector3 targetPosition, Vector3 fromPosition, float minRange, float maxRange, bool checkLOS, BaseEntity forObject, bool returnClosest)
  AIPoint[] GetMovePointsInRange(Vector3 currentPos, float maxRange, Int32& pointCount)
  AIMovePoint GetClosestRaw(Vector3 pos, bool onlyIncludeWithCover)
  AICoverPoint GetBestCoverPoint(Vector3 currentPosition, Vector3 hideFromPosition, float minRange, float maxRange, BaseEntity forObject, bool allowObjectToReuse)
  AICoverPoint[] GetCoverPointsInRange(Vector3 position, float maxRange, Int32& pointCount)
  NavMeshLink GetClosestNavMeshLink(Vector3 pos)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AIMovePoint
Наследуется от: AIPoint
Поля:
  ListDictionary`2<AIMovePoint, float> distances
  ListDictionary`2<AICoverPoint, float> distancesToCover
  float radius
  float WaitTime
  List`1<Transform> LookAtPoints
Свойства:
Методы:
  void OnDrawGizmos()
  void DrawLookAtPoints()
  void Clear()
  void AddLookAtPoint(Transform transform)
  bool HasLookAtPoints()
  Transform GetRandomLookAtPoint()
  void .ctor()
--------------------------------------------------
Класс: AIMovePointPath
Наследуется от: MonoBehaviour
Поля:
  Color DebugPathColor
  Mode LoopMode
  List`1<AIMovePoint> Points
Свойства:
Методы:
  void Clear()
  void AddPoint(AIMovePoint point)
  AIMovePoint FindNearestPoint(Vector3 position)
  int FindNearestPointIndex(Vector3 position)
  AIMovePoint GetPointAtIndex(int index)
  int GetNextPointIndex(int currentPointIndex, PathDirection& pathDirection)
  void OnDrawGizmos()
  void OnDrawGizmosSelected()
  void AddChildPoints()
  void .ctor()
--------------------------------------------------
Класс: AIPoint
Наследуется от: BaseMonoBehaviour
Поля:
  BaseEntity currentUser
Свойства:
Методы:
  bool InUse()
  bool IsUsedBy(BaseEntity user)
  bool CanBeUsedBy(BaseEntity user)
  void SetUsedBy(BaseEntity user, float duration)
  void SetUsedBy(BaseEntity user)
  void ClearUsed()
  void ClearIfUsedBy(BaseEntity user)
  void .ctor()
--------------------------------------------------
Класс: AITraversalArea
Наследуется от: TriggerBase
Поля:
  Transform entryPoint1
  Transform entryPoint2
  AITraversalWaitPoint[] waitPoints
  Bounds movementArea
  Transform activeEntryPoint
  float nextFreeTime
Свойства:
Методы:
  void OnValidate()
  GameObject InterestedInObject(GameObject obj)
  bool CanTraverse(BaseEntity ent)
  Transform GetClosestEntry(Vector3 position)
  Transform GetFarthestEntry(Vector3 position)
  void SetBusyFor(float dur)
  bool CanUse(Vector3 dirFrom)
  void OnEntityEnter(BaseEntity ent)
  AITraversalWaitPoint GetEntryPointNear(Vector3 pos)
  bool EntityFilter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: AITraversalWaitPoint
Наследуется от: MonoBehaviour
Поля:
  float nextFreeTime
Свойства:
Методы:
  bool Occupied()
  void Occupy(float dur)
  void .ctor()
--------------------------------------------------
Класс: BaseNavigator
Наследуется от: BaseMonoBehaviour
Поля:
  float maxStepUpDistance
  int baseNavMovementFrameInterval
  float stuckTriggerDuration
  float navTypeHeightOffset
  float navTypeDistance
  bool CanNavigateMounted
  bool CanUseNavMesh
  bool CanUseAStar
  bool CanUseBaseNav
  bool CanUseCustomNav
  float StoppingDistance
  string DefaultArea
  bool TriggerStuckEvent
  float StuckDistance
  float Speed
  float Acceleration
  float TurnSpeed
  NavigationSpeed MoveTowardsSpeed
  bool FaceMoveTowardsTarget
  float SlowestSpeedFraction
  float SlowSpeedFraction
  float NormalSpeedFraction
  float FastSpeedFraction
  float LowHealthSpeedReductionTriggerFraction
  float LowHealthMaxSpeedFraction
  float SwimmingSpeedMultiplier
  float BestMovementPointMaxDistance
  float BestCoverPointMaxDistance
  float BestRoamPointMaxDistance
  float MaxRoamDistanceFromHome
  float MaxWaterDepth
  bool SpeedBasedAvoidancePriority
  NavMeshPath path
  NavMeshQueryFilter navMeshQueryFilter
  AIMovePointPath <Path>k__BackingField
  BasePath <AStarGraph>k__BackingField
  int defaultAreaMask
  Enum biomePreference
  bool UseBiomePreference
  Enum topologyPreference
  Enum topologyPrevent
  Enum biomeRequirement
  NavMeshAgent <Agent>k__BackingField
  BaseCombatEntity <BaseEntity>k__BackingField
  Vector3 <Destination>k__BackingField
  NavigationType <CurrentNavigationType>k__BackingField
  NavigationType <LastUsedNavigationType>k__BackingField
  float stuckTimer
  Vector3 stuckCheckPosition
  bool <StuckOffNavmesh>k__BackingField
  bool traversingNavMeshLink
  string currentNavMeshLinkName
  Vector3 currentNavMeshLinkEndPos
  Stack`1<IAIPathNode> currentAStarPath
  IAIPathNode targetNode
  float currentSpeedFraction
  float lastSetDestinationTime
  OverrideFacingDirectionMode overrideFacingDirectionMode
  BaseEntity facingDirectionEntity
  bool overrideFacingDirection
  Vector3 facingDirectionOverride
  bool paused
  int frameCount
  float accumDelta
Свойства:
  AIMovePointPath Path
  BasePath AStarGraph
  NavMeshAgent Agent
  BaseCombatEntity BaseEntity
  Vector3 Destination
  bool IsOnNavMeshLink
  bool Moving
  NavigationType CurrentNavigationType
  NavigationType LastUsedNavigationType
  bool StuckOffNavmesh
  bool HasPath
  bool IsOverridingFacingDirection
  Vector3 FacingDirectionOverride
Методы:
  AIMovePointPath get_Path()
  void set_Path(AIMovePointPath value)
  BasePath get_AStarGraph()
  void set_AStarGraph(BasePath value)
  int TopologyPreference()
  int TopologyPrevent()
  int BiomeRequirement()
  NavMeshAgent get_Agent()
  void set_Agent(NavMeshAgent value)
  BaseCombatEntity get_BaseEntity()
  void set_BaseEntity(BaseCombatEntity value)
  Vector3 get_Destination()
  void set_Destination(Vector3 value)
  bool get_IsOnNavMeshLink()
  bool get_Moving()
  NavigationType get_CurrentNavigationType()
  void set_CurrentNavigationType(NavigationType value)
  NavigationType get_LastUsedNavigationType()
  void set_LastUsedNavigationType(NavigationType value)
  bool get_StuckOffNavmesh()
  void set_StuckOffNavmesh(bool value)
  bool get_HasPath()
  void Init(BaseCombatEntity entity, NavMeshAgent agent)
  void SetNavMeshEnabled(bool flag)
  bool CanEnableNavMeshNavigation()
  bool CanUpdateMovement()
  void ForceToGround()
  void DelayedForceToGround()
  bool PlaceOnNavMesh()
  void OnPlacedOnNavmesh()
  void OnFailedToPlaceOnNavmesh()
  bool Warp(Vector3 position)
  bool GetNearestNavmeshPosition(Vector3 target, Vector3& position, float maxRange)
  bool SetBaseDestination(Vector3 pos, float speedFraction)
  bool SetDestination(BasePath path, IAIPathNode newTargetNode, float speedFraction)
  bool SetDestination(Vector3 pos, NavigationSpeed speed, float updateInterval, float navmeshSampleDistance)
  bool SetCustomDestination(Vector3 pos, float speedFraction, float updateInterval)
  bool SetDestination(Vector3 pos, float speedFraction, float updateInterval, float navmeshSampleDistance)
  NavigationType DetermineNavigationType(Vector3 location, Vector3& navMeshPos)
  void SetCurrentSpeed(NavigationSpeed speed)
  bool UpdateIntervalElapsed(float updateInterval)
  float GetSpeedFraction(NavigationSpeed speed)
  void SetCurrentNavigationType(NavigationType navType)
  void Pause()
  void Resume()
  void Stop()
  void StopNavMesh()
  void StopAStar()
  void StopCustom()
  void Think(float delta)
  void UpdateNavigation(float delta)
  void UpdateMovement(float delta)
  void OnStuck()
  bool IsSwimming()
  Vector3 GetNextPathPosition()
  bool ValidateNextPosition(Vector3& moveToPosition)
  void UpdateSpeed(float delta, bool swimming)
  float GetTargetSpeed()
  void UpdatePositionAndRotation(Vector3 moveToPosition, float delta)
  void ApplyFacingDirectionOverride()
  void SetFacingDirectionEntity(BaseEntity entity)
  void SetFacingDirectionOverride(Vector3 direction)
  void ClearFacingDirectionOverride()
  bool get_IsOverridingFacingDirection()
  Vector3 get_FacingDirectionOverride()
  bool ReachedPosition(Vector3 position)
  void HandleNavMeshLinkTraversal(float delta, Vector3& moveToPosition)
  bool HandleNavMeshLinkTraversalStart(float delta)
  void HandleNavMeshLinkTraversalTick(float delta, Vector3& moveToPosition)
  bool IsNavMeshLinkTraversalComplete(float delta, Vector3& moveToPosition)
  void CompleteNavMeshLink()
  bool IsPositionATopologyPreference(Vector3 position)
  bool IsPositionPreventTopology(Vector3 position)
  bool IsPositionABiomePreference(Vector3 position)
  bool IsPositionABiomeRequirement(Vector3 position)
  bool IsAcceptableWaterDepth(Vector3 pos)
  void SetBrakingEnabled(bool flag)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: FishSwarm
Наследуется от: MonoBehaviour
Поля:
  FishType[] fishTypes
  FishShoal[] fishShoals
  Nullable`1<Vector3> lastFishUpdatePosition
Свойства:
Методы:
  void Awake()
  IEnumerator SpawnFish()
  void Update()
  void LateUpdate()
  void OnDestroy()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: FishShoal
Наследуется от: object
Поля:
  float maxFishDistance
  FishType fishType
  JobHandle jobHandle
  NativeArray`1<RaycastCommand> castCommands
  NativeArray`1<RaycastHit> castResults
  NativeArray`1<int> fishCastIndices
  NativeArray`1<FishData> fishData
  NativeArray`1<FishRenderData> fishRenderData
  NativeArray`1<int> fishCount
  MaterialPropertyBlock materialPropertyBlock
  ComputeBuffer fishBuffer
Свойства:
Методы:
  void .ctor(FishType fishType)
  float3 GetTarget(float3 spawnPos, Random& random)
  int GetPopulationScaleForPoint(float3 cameraPosition)
  void TrySpawn(float3 cameraPosition)
  void OnUpdate(float3 cameraPosition)
  void UpdateJobs(float3 cameraPosition)
  void OnLateUpdate(float3 cameraPosition)
  void Dispose()
  void OnDrawGizmos()
--------------------------------------------------
Класс: FishNavigator
Наследуется от: BaseNavigator
Поля:
  BaseNpc <NPC>k__BackingField
Свойства:
  BaseNpc NPC
Методы:
  BaseNpc get_NPC()
  void set_NPC(BaseNpc value)
  void Init(BaseCombatEntity entity, NavMeshAgent agent)
  bool SetCustomDestination(Vector3 pos, float speedFraction, float updateInterval)
  void UpdatePositionAndRotation(Vector3 moveToPosition, float delta)
  void UpdateRotation(Vector3 moveToPosition, float delta)
  void .ctor()
--------------------------------------------------
Класс: DungeonNavmesh
Наследуется от: FacepunchBehaviour
Поля:
  int NavMeshAgentTypeIndex
  string DefaultAreaName
  float NavmeshResolutionModifier
  Bounds Bounds
  NavMeshData NavMeshData
  NavMeshDataInstance NavMeshDataInstance
  LayerMask LayerMask
  NavMeshCollectGeometry NavMeshCollectGeometry
  List`1<DungeonNavmesh> Instances
  bool use_baked_terrain_mesh
  List`1<NavMeshBuildSource> sources
  AsyncOperation BuildingOperation
  bool HasBuildOperationStarted
  Stopwatch BuildTimer
  int defaultArea
  int agentTypeId
Свойства:
  bool IsBuilding
Методы:
  bool NavReady()
  bool get_IsBuilding()
  void OnEnable()
  void OnDisable()
  void UpdateNavMeshAsync()
  void NotifyInformationZonesOfCompletion()
  void SourcesCollected()
  IEnumerator UpdateNavMeshAndWait()
  void AppendModifierVolumes(List`1<NavMeshBuildSource> sources)
  void FinishBuildingNavmesh()
  void OnDrawGizmosSelected()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: DynamicNavMesh
Наследуется от: SingletonComponent`1<DynamicNavMesh>
Поля:
  int NavMeshAgentTypeIndex
  string DefaultAreaName
  int AsyncTerrainNavMeshBakeCellSize
  int AsyncTerrainNavMeshBakeCellHeight
  Bounds Bounds
  NavMeshData NavMeshData
  NavMeshDataInstance NavMeshDataInstance
  LayerMask LayerMask
  NavMeshCollectGeometry NavMeshCollectGeometry
  bool use_baked_terrain_mesh
  List`1<NavMeshBuildSource> sources
  AsyncOperation BuildingOperation
  bool HasBuildOperationStarted
  Stopwatch BuildTimer
  int defaultArea
  int agentTypeId
Свойства:
  bool IsBuilding
Методы:
  bool get_IsBuilding()
  void OnEnable()
  void OnDisable()
  void UpdateNavMeshAsync()
  IEnumerator UpdateNavMeshAndWait()
  void AppendModifierVolumes(List`1<NavMeshBuildSource> sources)
  void FinishBuildingNavmesh()
  void .ctor()
--------------------------------------------------
Класс: MonumentNavMesh
Наследуется от: FacepunchBehaviour
Поля:
  int NavMeshAgentTypeIndex
  string DefaultAreaName
  int CellCount
  int CellSize
  int Height
  float NavmeshResolutionModifier
  bool overrideAutoBounds
  Bounds Bounds
  NavMeshData NavMeshData
  NavMeshDataInstance NavMeshDataInstance
  LayerMask LayerMask
  NavMeshCollectGeometry NavMeshCollectGeometry
  bool forceCollectTerrain
  bool shouldNotifyAIZones
  Transform CustomNavMeshRoot
  bool use_baked_terrain_mesh
  List`1<NavMeshBuildSource> sources
  AsyncOperation BuildingOperation
  bool HasBuildOperationStarted
  Stopwatch BuildTimer
  int defaultArea
  int agentTypeId
Свойства:
  bool IsBuilding
Методы:
  bool get_IsBuilding()
  void OnEnable()
  void OnDisable()
  void UpdateNavMeshAsync()
  IEnumerator UpdateNavMeshAndWait()
  void NotifyInformationZonesOfCompletion()
  void AppendModifierVolumes(List`1<NavMeshBuildSource> sources)
  void FinishBuildingNavmesh()
  void OnDrawGizmosSelected()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: NavMeshTools
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerator CollectSourcesAsync(Bounds bounds, int mask, NavMeshCollectGeometry geometry, int area, bool useBakedTerrainMesh, int cellSize, List`1<NavMeshBuildSource> sources, Action`1<List`1<NavMeshBuildSource>> append, Action callback, Transform customNavMeshDataRoot)
  IEnumerator CollectSourcesAsync(Transform root, int mask, NavMeshCollectGeometry geometry, int area, List`1<NavMeshBuildSource> sources, Action`1<List`1<NavMeshBuildSource>> append, Action callback)
--------------------------------------------------
Класс: NPCBarricadeTriggerBox
Наследуется от: MonoBehaviour
Поля:
  Barricade target
  int playerServerLayer
Свойства:
Методы:
  void Setup(Barricade t)
  void OnTriggerEnter(Collider other)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: NPCDoorTriggerBox
Наследуется от: MonoBehaviour
Поля:
  Door door
  int playerServerLayer
Свойства:
Методы:
  void Setup(Door d)
  void OnTriggerEnter(Collider other)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RealmedNavMeshObstacle
Наследуется от: BasePrefab
Поля:
  NavMeshObstacle Obstacle
Свойства:
Методы:
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: HorseBreed
Наследуется от: ScriptableObject
Поля:
  Phrase breedName
  Phrase breedDesc
  Sprite trophyHeadSprite
  Material[] materialOverrides
  float maxHealth
  float maxSpeed
  float staminaDrain
  float maxStamina
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HorseCorpse
Наследуется от: LootableCorpse
Поля:
  int breedIndex
  Phrase lootPanelTitle
Свойства:
  string playerName
Методы:
  string get_playerName()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: NavMeshTester
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseAnimalNPC
Наследуется от: BaseNpc
Поля:
  string deathStatName
  AnimalBrain brain
Свойства:
Методы:
  void ServerInit()
  void DoServerDestroy()
  void TryThink()
  void OnKilled(HitInfo hitInfo)
  void OnAttacked(HitInfo info)
  void PostServerLoad()
  bool CanAttack(BaseEntity entity)
  bool NeedsToReload()
  float EngagementRange()
  bool IsTargetInRange(BaseEntity entity, Single& dist)
  bool CanSeeTarget(BaseEntity entity)
  bool Reload()
  bool StartAttacking(BaseEntity target)
  void StopAttacking()
  float CooldownDuration()
  bool IsOnCooldown()
  bool IsTirednessAbove(float value)
  void StartSleeping()
  void StopSleeping()
  bool IsHungerAbove(float value)
  bool IsThreat(BaseEntity entity)
  bool IsTarget(BaseEntity entity)
  bool IsFriendly(BaseEntity entity)
  float GetAmmoFraction()
  BaseEntity GetBestTarget()
  void AttackTick(float delta, BaseEntity target, bool targetIsLOS)
  void .ctor()
--------------------------------------------------
Класс: BaseFishNPC
Наследуется от: BaseNpc
Поля:
  FishBrain brain
Свойства:
Методы:
  void ServerInit()
  void DoServerDestroy()
  void TryThink()
  bool CanAttack(BaseEntity entity)
  bool NeedsToReload()
  float EngagementRange()
  bool IsTargetInRange(BaseEntity entity, Single& dist)
  bool CanSeeTarget(BaseEntity entity)
  bool Reload()
  bool StartAttacking(BaseEntity target)
  void StopAttacking()
  float CooldownDuration()
  bool IsOnCooldown()
  bool IsThreat(BaseEntity entity)
  bool IsTarget(BaseEntity entity)
  bool IsFriendly(BaseEntity entity)
  float GetAmmoFraction()
  BaseEntity GetBestTarget()
  void AttackTick(float delta, BaseEntity target, bool targetIsLOS)
  void .ctor()
--------------------------------------------------
Класс: StateTimer
Наследуется от: ValueType
Поля:
  float ReleaseTime
  Action OnFinished
Свойства:
  bool IsActive
Методы:
  void Activate(float seconds, Action onFinished)
  bool get_IsActive()
--------------------------------------------------
Класс: VitalLevel
Наследуется от: ValueType
Поля:
  float Level
  float lastUsedTime
Свойства:
  float TimeSinceUsed
Методы:
  void Add(float f)
  float get_TimeSinceUsed()
  void Use(float f)
--------------------------------------------------
Класс: NPCNavigator
Наследуется от: BaseNavigator
Поля:
  int DestroyOnFailedSampleCount
  BaseNpc <NPC>k__BackingField
  int sampleFailCount
Свойства:
  BaseNpc NPC
Методы:
  BaseNpc get_NPC()
  void set_NPC(BaseNpc value)
  void Init(BaseCombatEntity entity, NavMeshAgent agent)
  void OnFailedToPlaceOnNavmesh()
  void OnPlacedOnNavmesh()
  bool CanEnableNavMeshNavigation()
  bool CanUpdateMovement()
  void UpdatePositionAndRotation(Vector3 moveToPosition, float delta)
  void UpdateRotation(Vector3 moveToPosition, float delta)
  void ApplyFacingDirectionOverride()
  bool IsSwimming()
  void .ctor()
--------------------------------------------------
Класс: NPCPlayerNavigator
Наследуется от: BaseNavigator
Поля:
  NPCPlayer <NPCPlayerEntity>k__BackingField
Свойства:
  NPCPlayer NPCPlayerEntity
Методы:
  NPCPlayer get_NPCPlayerEntity()
  void set_NPCPlayerEntity(NPCPlayer value)
  void Init(BaseCombatEntity entity, NavMeshAgent agent)
  bool CanEnableNavMeshNavigation()
  bool CanUpdateMovement()
  void UpdatePositionAndRotation(Vector3 moveToPosition, float delta)
  void ApplyFacingDirectionOverride()
  Vector3 GetAimDirection(BasePlayer aimingPlayer, BaseEntity target)
  Vector3 TargetAimPositionOffset(BaseEntity target)
  void .ctor()
--------------------------------------------------
Класс: NPCPlayerNavigatorTester
Наследуется от: BaseMonoBehaviour
Поля:
  BasePathNode TargetNode
  BasePathNode currentNode
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: WaterDepthTester
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: AIState
Наследуется от: Enum
Поля:
  int value__
  AIState None
  AIState Idle
  AIState Roam
  AIState Chase
  AIState Cover
  AIState Combat
  AIState Mounted
  AIState Exfil
  AIState Patrol
  AIState Orbit
  AIState Egress
  AIState Land
  AIState DropCrate
  AIState MoveTowards
  AIState Flee
  AIState Attack
  AIState Sleep
  AIState Reload
  AIState TakeCover
  AIState Dismounted
  AIState FollowPath
  AIState NavigateHome
  AIState CombatStationary
  AIState Cooldown
  AIState MoveToPoint
  AIState MoveToVector3
  AIState Blinded
Свойства:
Методы:
--------------------------------------------------
Класс: AIThinkMode
Наследуется от: Enum
Поля:
  int value__
  AIThinkMode FixedUpdate
  AIThinkMode Interval
Свойства:
Методы:
--------------------------------------------------
Класс: BasePathFinder
Наследуется от: object
Поля:
  Vector3[] preferedTopologySamples
  Vector3[] topologySamples
  Vector3 chosenPosition
  float halfPI
Свойства:
Методы:
  Vector3 GetRandomPatrolPoint()
  AIMovePoint GetBestRoamPoint(Vector3 anchorPos, Vector3 currentPos, Vector3 currentDirection, float anchorClampDistance, float lookupMaxRange)
  void DebugDraw()
  Vector3 GetRandomPositionAround(Vector3 position, float minDistFrom, float maxDistFrom)
  Vector3 GetBestRoamPosition(BaseNavigator navigator, Vector3 fallbackPos, float minRange, float maxRange)
  Vector3 GetBestRoamPositionFromAnchor(BaseNavigator navigator, Vector3 anchorPos, Vector3 fallbackPos, float minRange, float maxRange)
  bool GetBestFleePosition(BaseNavigator navigator, AIBrainSenses senses, BaseEntity fleeFrom, Vector3 fallbackPos, float minRange, float maxRange, Vector3& result)
  bool TestFleeDirection(BaseNavigator navigator, Vector3 dirFromThreat, float offsetDegrees, float minRange, float maxRange, Vector3& result)
  Vector3 GetPointOnCircle(Vector3 center, float radius, float degrees)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UnderwaterPathFinder
Наследуется от: BasePathFinder
Поля:
  BaseEntity npc
Свойства:
Методы:
  void Init(BaseEntity npc)
  Vector3 GetBestRoamPosition(BaseNavigator navigator, Vector3 fallbackPos, float minRange, float maxRange)
  bool GetBestFleePosition(BaseNavigator navigator, AIBrainSenses senses, BaseEntity fleeFrom, Vector3 fallbackPos, float minRange, float maxRange, Vector3& result)
  void .ctor()
--------------------------------------------------
Класс: AimConeUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector3 GetModifiedAimConeDirection(float aimCone, Vector3 inputVec, bool anywhereInside)
  Quaternion GetAimConeQuat(float aimCone)
  void .ctor()
--------------------------------------------------
Класс: HorseIdleMultiConditionCrossfade
Наследуется от: StateMachineBehaviour
Поля:
  string TargetState
  float NormalizedTransitionDuration
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WeightedAnimationRandomiser
Наследуется от: StateMachineBehaviour
Поля:
  int LoopRangeMin
  int LoopRangeMax
  float NormalizedTransitionDuration
  IdleChance[] IdleTransitions
  bool AllowRepeats
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmbienceDefinition
Наследуется от: ScriptableObject
Поля:
  List`1<SoundDefinition> sounds
  ValueRange stingFrequency
  Enum biomes
  Enum topologies
  EnvironmentType environmentType
  bool useEnvironmentType
  AnimationCurve time
  ValueRange rain
  ValueRange wind
  ValueRange snow
  ValueRange waves
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmbienceDefinitionList
Наследуется от: ScriptableObject
Поля:
  List`1<AmbienceDefinition> defs
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmbienceEmitter
Наследуется от: MonoBehaviour
Поля:
  AmbienceDefinitionList baseAmbience
  AmbienceDefinitionList stings
  bool isStatic
  bool followCamera
  bool isBaseEmitter
  bool active
  float cameraDistanceSq
  BoundingSphere boundingSphere
  float crossfadeTime
  Enum <currentTopology>k__BackingField
  Enum <currentBiome>k__BackingField
  Dictionary`2<AmbienceDefinition, float> nextStingTime
  float deactivateTime
  bool playUnderwater
  bool playAbovewater
Свойства:
  Enum currentTopology
  Enum currentBiome
Методы:
  Enum get_currentTopology()
  void set_currentTopology(Enum value)
  Enum get_currentBiome()
  void set_currentBiome(Enum value)
  int CompareTo(AmbienceEmitter other)
  void .ctor()
--------------------------------------------------
Класс: AmbienceLocalStings
Наследуется от: MonoBehaviour
Поля:
  float maxDistance
  float stingRadius
  float stingFrequency
  float stingFrequencyVariance
  SoundDefinition[] stingSounds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmbienceManager
Наследуется от: SingletonComponent`1<AmbienceManager>
Поля:
  List`1<EmitterTypeLimit> localEmitterLimits
  EmitterTypeLimit catchallEmitterLimit
  int maxActiveLocalEmitters
  int activeLocalEmitters
  List`1<AmbienceEmitter> cameraEmitters
  List`1<AmbienceEmitter> emittersInRange
  List`1<AmbienceEmitter> activeEmitters
  float localEmitterRange
  List`1<AmbienceZone> currentAmbienceZones
  bool isUnderwater
  float <ambienceZoneGain>k__BackingField
Свойства:
  float ambienceZoneGain
Методы:
  float get_ambienceZoneGain()
  void set_ambienceZoneGain(float value)
  void .ctor()
--------------------------------------------------
Класс: AmbienceSpawnEmitters
Наследуется от: MonoBehaviour
Поля:
  int baseEmitterCount
  int baseEmitterDistance
  GameObjectRef emitterPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmbienceWaveSounds
Наследуется от: MonoBehaviour
Поля:
  int emitterCount
  float emitterDistance
  List`1<WaveLayer> waveLayers
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmbienceZone
Наследуется от: TriggerBase
Поля:
  AmbienceDefinitionList baseAmbience
  AmbienceDefinitionList stings
  float priority
  bool overrideCrossfadeTime
  float crossfadeTime
  float ambienceGain
Свойства:
Методы:
  void PreClientComponentCull(IPrefabProcessor p)
  void .ctor()
--------------------------------------------------
Класс: RainSurfaceAmbience
Наследуется от: SingletonComponent`1<RainSurfaceAmbience>
Поля:
  List`1<SurfaceSound> surfaces
  GameObjectRef emitterPrefab
  Dictionary`2<ParticlePatch, AmbienceEmitter> spawnedEmitters
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlendedEngineLoopDefinition
Наследуется от: ScriptableObject
Поля:
  EngineLoopDefinition[] engineLoops
  float minRPM
  float maxRPM
  float RPMChangeRateUp
  float RPMChangeRateDown
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlendedLoopEngineSound
Наследуется от: MonoBehaviour
Поля:
  BlendedEngineLoopDefinition loopDefinition
  bool engineOn
  float RPMControl
  float smoothedRPMControl
  EngineLoop[] engineLoops
Свойства:
  float maxDistance
Методы:
  EngineLoop[] GetEngineLoops()
  float GetLoopGain(int idx)
  float GetLoopPitch(int idx)
  float get_maxDistance()
  void .ctor()
--------------------------------------------------
Класс: BlendedSoundLoops
Наследуется от: MonoBehaviour
Поля:
  float blend
  float blendSmoothing
  float loopFadeOutTime
  float loopFadeInTime
  float gainModSmoothing
  float pitchModSmoothing
  bool shouldPlay
  float gain
  List`1<Loop> loops
  float maxDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EngineAudioClip
Наследуется от: MonoBehaviour
Поля:
  AudioClip granularClip
  AudioClip accelerationClip
  TextAsset accelerationCyclesJson
  List`1<EngineCycle> accelerationCycles
  List`1<EngineCycleBucket> cycleBuckets
  Dictionary`2<int, EngineCycleBucket> accelerationCyclesByRPM
  Dictionary`2<int, int> rpmBucketLookup
  int sampleRate
  int samplesUntilNextGrain
  int lastCycleId
  List`1<Grain> grains
  int currentRPM
  int targetRPM
  int minRPM
  int maxRPM
  int cyclePadding
  float RPMControl
  AudioSource source
  float rpmLerpSpeed
  float rpmLerpSpeedDown
Свойства:
Методы:
  int GetBucketRPM(int RPM)
  void .ctor()
--------------------------------------------------
Класс: FlybySound
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition flybySound
  float flybySoundDistance
  SoundDefinition closeFlybySound
  float closeFlybyDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FootstepSound
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition lightSound
  SoundDefinition medSound
  SoundDefinition hardSound
  float panAmount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GranularAudioClip
Наследуется от: MonoBehaviour
Поля:
  AudioClip sourceClip
  Single[] sourceAudioData
  int sourceChannels
  AudioClip granularClip
  int sampleRate
  float sourceTime
  float sourceTimeVariation
  float grainAttack
  float grainSustain
  float grainRelease
  float grainFrequency
  int grainAttackSamples
  int grainSustainSamples
  int grainReleaseSamples
  int grainFrequencySamples
  int samplesUntilNextGrain
  List`1<Grain> grains
  Random random
  bool inited
Свойства:
Методы:
  void Update()
  void RefreshCachedData()
  void InitAudioClip()
  void OnAudioRead(Single[] data)
  void SpawnGrain()
  void CleanupFinishedGrains()
  void .ctor()
--------------------------------------------------
Класс: ISoundBudgetedUpdate
Поля:
Свойства:
Методы:
  void DoUpdate()
  bool IsSyncedToParent()
--------------------------------------------------
Класс: MixerSnapshotManager
Наследуется от: SingletonComponent`1<MixerSnapshotManager>
Поля:
  AudioMixerSnapshot defaultSnapshot
  AudioMixerSnapshot underwaterSnapshot
  AudioMixerSnapshot loadingSnapshot
  AudioMixerSnapshot woundedSnapshot
  AudioMixerSnapshot cctvSnapshot
  SoundDefinition underwaterInSound
  SoundDefinition underwaterOutSound
  AudioMixerSnapshot recordingSnapshot
  SoundDefinition woundedLoop
  Sound woundedLoopSound
  SoundDefinition cctvModeLoopDef
  Sound cctvModeLoop
  SoundDefinition cctvModeStartDef
  SoundDefinition cctvModeStopDef
  float deafness
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MovementSoundTrigger
Наследуется от: TriggerBase
Поля:
  SoundDefinition softSound
  SoundDefinition medSound
  SoundDefinition hardSound
  Collider collider
Свойства:
Методы:
  void PreClientComponentCull(IPrefabProcessor p)
  void .ctor()
--------------------------------------------------
Класс: MusicChangeIntensity
Наследуется от: MonoBehaviour
Поля:
  float raiseTo
  List`1<DistanceIntensity> distanceIntensities
  float tickInterval
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MusicClip
Наследуется от: ScriptableObject
Поля:
  AudioClip audioClip
  int lengthInBars
  int lengthInBarsWithTail
  List`1<float> fadeInPoints
Свойства:
Методы:
  float GetNextFadeInPoint(float currentClipTimeBars)
  void .ctor()
--------------------------------------------------
Класс: MusicClipLoader
Наследуется от: object
Поля:
  List`1<LoadedAudioClip> loadedClips
  Dictionary`2<AudioClip, LoadedAudioClip> loadedClipDict
  List`1<AudioClip> clipsToLoad
  List`1<AudioClip> clipsToUnload
Свойства:
Методы:
  void Update()
  void Refresh()
  LoadedAudioClip FindLoadedClip(AudioClip clip)
  void .ctor()
--------------------------------------------------
Класс: MusicManager
Наследуется от: SingletonComponent`1<MusicManager>
Поля:
  AudioMixerGroup mixerGroup
  List`1<MusicTheme> themes
  MusicTheme currentTheme
  List`1<AudioSource> sources
  double nextMusic
  double nextMusicFromIntensityRaise
  float intensity
  Dictionary`2<PositionedClip, ClipPlaybackData> clipPlaybackData
  int holdIntensityUntilBar
  bool musicPlaying
  bool loadingFirstClips
  MusicTheme nextTheme
  double lastClipUpdate
  float clipUpdateInterval
  double themeStartTime
  int lastActiveClipRefresh
  int activeClipRefreshInterval
  bool forceThemeChange
  float randomIntensityJumpChance
  int clipScheduleBarsEarly
  List`1<PositionedClip> activeClips
  List`1<PositionedClip> activeMusicClips
  List`1<PositionedClip> activeControlClips
  List`1<MusicZone> currentMusicZones
  int currentBar
  int barOffset
Свойства:
  double currentThemeTime
  int themeBar
Методы:
  double get_currentThemeTime()
  int get_themeBar()
  void RaiseIntensityTo(float amount, int holdLengthBars)
  void StopMusic()
  void .ctor()
--------------------------------------------------
Класс: MusicTheme
Наследуется от: ScriptableObject
Поля:
  float tempo
  int intensityHoldBars
  int lengthInBars
  bool canPlayInMenus
  ValueRange rain
  ValueRange wind
  ValueRange snow
  Enum biomes
  Enum topologies
  AnimationCurve time
  List`1<PositionedClip> clips
  List`1<Layer> layers
  Dictionary`2<int, List`1<PositionedClip>> activeClips
  List`1<AudioClip> firstAudioClips
  Dictionary`2<AudioClip, bool> audioClipDict
Свойства:
  int layerCount
  int samplesPerBar
Методы:
  int get_layerCount()
  int get_samplesPerBar()
  void OnValidate()
  List`1<PositionedClip> GetActiveClipsForBar(int bar)
  int ActiveClipCollectionID(int bar)
  Layer LayerById(int id)
  void AddLayer()
  void UpdateLengthInBars()
  bool CanPlayInEnvironment(int currentBiome, int currentTopology, float currentRain, float currentSnow, float currentWind)
  bool FirstClipsLoaded()
  bool ContainsAudioClip(AudioClip clip)
  void .ctor()
--------------------------------------------------
Класс: MusicUtil
Наследуется от: object
Поля:
  float OneSixteenth
Свойства:
Методы:
  double BeatsToSeconds(float tempo, float beats)
  double BarsToSeconds(float tempo, float bars)
  int SecondsToSamples(double seconds)
  int SecondsToSamples(double seconds, int sampleRate)
  int SecondsToSamples(float seconds)
  int SecondsToSamples(float seconds, int sampleRate)
  int BarsToSamples(float tempo, float bars, int sampleRate)
  int BarsToSamples(float tempo, float bars)
  int BeatsToSamples(float tempo, float beats)
  float SecondsToBeats(float tempo, double seconds)
  float SecondsToBars(float tempo, double seconds)
  float Quantize(float position, float gridSize)
  float FlooredQuantize(float position, float gridSize)
  void .ctor()
--------------------------------------------------
Класс: MusicZone
Наследуется от: MonoBehaviour
Поля:
  List`1<MusicTheme> themes
  float priority
  bool suppressAutomaticMusic
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OnePoleLowpassFilter
Наследуется от: MonoBehaviour
Поля:
  float frequency
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReverbSettings
Наследуется от: ScriptableObject
Поля:
  int room
  int roomHF
  int roomLF
  float decayTime
  float decayHFRatio
  int reflections
  float reflectionsDelay
  int reverb
  float reverbDelay
  float HFReference
  float LFReference
  float diffusion
  float density
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReverbZoneTrigger
Наследуется от: TriggerBase
Поля:
  Collider trigger
  AudioReverbZone reverbZone
  float lodDistance
  bool inRange
  ReverbSettings reverbSettings
Свойства:
Методы:
  void PreClientComponentCull(IPrefabProcessor p)
  bool IsSyncedToParent()
  void .ctor()
--------------------------------------------------
Класс: ShoutcastStreamer
Наследуется от: MonoBehaviour
Поля:
  string Host
  AudioSource Source
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SlicedGranularAudioClip
Наследуется от: MonoBehaviour
Поля:
  AudioClip sourceClip
  AudioClip granularClip
  int sampleRate
  float grainAttack
  float grainSustain
  float grainRelease
  float grainFrequency
  int grainAttackSamples
  int grainSustainSamples
  int grainReleaseSamples
  int grainFrequencySamples
  int samplesUntilNextGrain
  List`1<Grain> grains
  List`1<int> startPositions
  int lastStartPositionIdx
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Sound
Наследуется от: MonoBehaviour
Поля:
  float volumeExponent
  SoundDefinition definition
  SoundModifier[] modifiers
  SoundSource soundSource
  AudioSource[] audioSources
  SoundFade _fade
  SoundModulation _modulation
  SoundOcclusion _occlusion
Свойства:
  SoundFade fade
  SoundModulation modulation
  SoundOcclusion occlusion
Методы:
  SoundFade get_fade()
  SoundModulation get_modulation()
  SoundOcclusion get_occlusion()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SoundClass
Наследуется от: ScriptableObject
Поля:
  AudioMixerGroup output
  AudioMixerGroup firstPersonOutput
  bool enableOcclusion
  bool playIfOccluded
  float occlusionGain
  AudioMixerGroup occludedOutput
  int globalVoiceMaxCount
  int priority
  List`1<SoundDefinition> definitions
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundClassTest
Наследуется от: MonoBehaviour
Поля:
  SoundClass soundClass
  float soundInterval
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundDefinition
Наследуется от: ScriptableObject
Поля:
  GameObjectRef template
  List`1<WeightedAudioClip> weightedAudioClips
  List`1<DistanceAudioClipList> distanceAudioClips
  SoundClass soundClass
  bool defaultToFirstPerson
  bool loop
  bool randomizeStartPosition
  bool useHighQualityFades
  float volume
  float volumeVariation
  float pitch
  float pitchVariation
  bool dontVoiceLimit
  int globalVoiceMaxCount
  int localVoiceMaxCount
  float localVoiceRange
  float voiceLimitFadeOutTime
  float localVoiceDebounceTime
  bool forceOccludedPlayback
  bool enableDoppler
  float dopplerAmount
  float dopplerScale
  float dopplerAdjustmentRate
  AnimationCurve falloffCurve
  bool useCustomFalloffCurve
  AnimationCurve spatialBlendCurve
  bool useCustomSpatialBlendCurve
  AnimationCurve spreadCurve
  bool useCustomSpreadCurve
Свойства:
  float maxDistance
Методы:
  float get_maxDistance()
  float GetLength()
  Sound Play()
  Sound Play(GameObject forGameObject)
  void .ctor()
--------------------------------------------------
Класс: SoundFade
Наследуется от: MonoBehaviour
Поля:
  SoundFadeHQAudioFilter hqFadeFilter
  float currentGain
  float startingGain
  float finalGain
  int sampleRate
  bool highQualityFadeCompleted
  float length
  Direction currentDirection
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundFadeHQAudioFilter
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundFollowCollider
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition soundDefinition
  Sound sound
  Bounds soundFollowBounds
  bool startImmediately
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundManager
Наследуется от: SingletonComponent`1<SoundManager>
Поля:
  SoundClass defaultSoundClass
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundModifier
Наследуется от: MonoBehaviour
Поля:
  Sound sound
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundModulation
Наследуется от: MonoBehaviour
Поля:
  int parameterCount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundOcclusion
Наследуется от: MonoBehaviour
Поля:
  LayerMask occlusionLayerMask
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundPlayer
Наследуется от: BaseMonoBehaviour
Поля:
  SoundDefinition soundDefinition
  bool playImmediately
  float minStartDelay
  float maxStartDelay
  bool debugRepeat
  bool pending
  Vector3 soundOffset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundPlayerCull
Наследуется от: MonoBehaviour
Поля:
  SoundPlayer soundPlayer
  float cullDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundRandomizer
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundRepeater
Наследуется от: MonoBehaviour
Поля:
  float interval
  SoundPlayer player
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundSource
Наследуется от: MonoBehaviour
Поля:
  bool handleOcclusionChecks
  LayerMask occlusionLayerMask
  List`1<OcclusionPoint> occlusionPoints
  bool isOccluded
  float occlusionAmount
  float lodDistance
  bool inRange
Свойства:
Методы:
  void PreClientComponentCull(IPrefabProcessor p)
  bool IsSyncedToParent()
  void .ctor()
--------------------------------------------------
Класс: SoundVoiceLimiter
Наследуется от: MonoBehaviour
Поля:
  int maxSimultaneousSounds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TimeBasedSoundSpread
Наследуется от: SoundModifier
Поля:
  AnimationCurve spreadCurve
  AnimationCurve wanderIntensityCurve
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WeightedAudioClip
Наследуется от: object
Поля:
  AudioClip audioClip
  int weight
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AttractionPoint
Наследуется от: PrefabAttribute
Поля:
  string groupName
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: BuildingProximity
Наследуется от: PrefabAttribute
Поля:
  float check_radius
  float check_forgiveness
  float foundation_width
  float foundation_extents
Свойства:
Методы:
  bool Check(BasePlayer player, Construction construction, Vector3 position, Quaternion rotation)
  ProximityInfo GetProximity(Construction construction1, Vector3 position1, Quaternion rotation1, Construction construction2, Vector3 position2, Quaternion rotation2)
  Vector3 GetSelectPivot(Vector3 position, Quaternion rotation)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: ConditionalModel
Наследуется от: PrefabAttribute
Поля:
  GameObjectRef prefab
  bool onClient
  bool onServer
  bool IsImportant
  ModelConditionTest[] conditions
Свойства:
Методы:
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool RunTests(BaseEntity parent)
  GameObject InstantiateSkin(BaseEntity parent)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: Construction
Наследуется от: PrefabAttribute
Поля:
  Option info
  bool canBypassBuildingPermission
  bool canRotateBeforePlacement
  bool canRotateAfterPlacement
  bool checkVolumeOnRotate
  bool checkVolumeOnUpgrade
  bool canPlaceAtMaxDistance
  bool placeOnWater
  Vector3 rotationAmount
  Vector3 applyStartingRotation
  Transform deployOffset
  bool enforceLineOfSightCheckAgainstParentEntity
  float healthMultiplier
  float costMultiplier
  float maxplaceDistance
  Mesh guideMesh
  Socket_Base[] allSockets
  BuildingProximity[] allProximities
  ConstructionGrade defaultGrade
  SocketHandle socketHandle
  Bounds bounds
  bool isBuildingPrivilege
  bool isSleepingBag
  ConstructionGrade[] grades
  Deployable deployable
  ConstructionPlaceholder placeholder
  string lastPlacementError
Свойства:
Методы:
  BaseEntity CreateConstruction(Target target, bool bNeedsValidPlacement)
  bool HasMaleSockets(Target target)
  void FindMaleSockets(Target target, List`1<Socket_Base> sockets)
  ConstructionGrade GetGrade(Enum iGrade, ulong iSkin)
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  Type GetIndexedType()
  bool UpdatePlacement(Transform transform, Construction common, Target& target)
  bool TestPlacingThroughRock(Placement& placement, Target target)
  bool TestPlacingThroughWall(Placement& placement, Transform transform, Construction common, Target target)
  bool TestPlacingCloseToRoad(Placement& placement, Target target)
  bool ShowAsNeutral(Target target)
  void .ctor()
--------------------------------------------------
Класс: ConstructionGrade
Наследуется от: PrefabAttribute
Поля:
  Construction construction
  BuildingGrade gradeBase
  GameObjectRef skinObject
  List`1<ItemAmount> _costToBuild
Свойства:
  float maxHealth
Методы:
  float get_maxHealth()
  List`1<ItemAmount> CostToBuild(Enum fromGrade)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: ConstructionPlaceholder
Наследуется от: PrefabAttribute
Поля:
  Mesh mesh
  Material material
  bool renderer
  bool collider
  MeshRenderer MeshRenderer
  MeshFilter MeshFilter
  MeshCollider MeshCollider
Свойства:
Методы:
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: ConstructionSkin
Наследуется от: BasePrefab
Поля:
  List`1<GameObject> conditionals
Свойства:
Методы:
  int DetermineConditionalModelState(BuildingBlock parent)
  void CreateConditionalModels(BuildingBlock parent)
  void DestroyConditionalModels(BuildingBlock parent)
  void Refresh(BuildingBlock parent)
  void Destroy(BuildingBlock parent)
  UInt32 GetStartingDetailColour(UInt32 playerColourIndex)
  void .ctor()
--------------------------------------------------
Класс: ConstructionSkin_ColourLookup
Наследуется от: ScriptableObject
Поля:
  Texture2D Sample
  Color[] AllColours
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConstructionSkin_CustomDetail
Наследуется от: ConstructionSkin
Поля:
  ConstructionSkin_ColourLookup ColourLookup
Свойства:
Методы:
  UInt32 GetStartingDetailColour(UInt32 playerColourIndex)
  void .ctor()
--------------------------------------------------
Класс: ConstructionSocket
Наследуется от: Socket_Base
Поля:
  Type socketType
  int rotationDegrees
  int rotationOffset
  bool restrictPlacementRotation
  bool restrictPlacementAngle
  float faceAngle
  float angleAllowed
  float support
Свойства:
Методы:
  void OnDrawGizmos()
  void OnDrawGizmosSelected()
  bool TestTarget(Target target)
  bool IsCompatible(Socket_Base socket)
  bool CanConnect(Vector3 position, Quaternion rotation, Socket_Base socket, Vector3 socketPosition, Quaternion socketRotation)
  bool TestRestrictedAngles(Vector3 suggestedPos, Quaternion suggestedAng, Target target)
  Placement DoPlacement(Target target)
  bool CanConnectToEntity(Target target)
  void .ctor()
--------------------------------------------------
Класс: ConstructionSocket_Elevator
Наследуется от: ConstructionSocket
Поля:
  int MaxFloor
Свойства:
Методы:
  bool CanConnectToEntity(Target target)
  bool CanConnect(Vector3 position, Quaternion rotation, Socket_Base socket, Vector3 socketPosition, Quaternion socketRotation)
  void .ctor()
--------------------------------------------------
Класс: Construction_SleepingBag
Наследуется от: Construction
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecayPoint
Наследуется от: PrefabAttribute
Поля:
  float protection
  Socket_Base socket
Свойства:
Методы:
  bool IsOccupied(BaseEntity entity)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DirectionProperties
Наследуется от: PrefabAttribute
Поля:
  float radius
  Bounds bounds
  ProtectionProperties extraProtection
Свойства:
Методы:
  Type GetIndexedType()
  bool IsWeakspot(Transform tx, HitInfo info)
  bool CheckWeakpointRoof(BaseEntity hitEntity)
  bool IsWeakspotVisible(BaseEntity hitEntity, Vector3 playerEyes, Vector3 weakspotPos)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_False
Наследуется от: ModelConditionTest
Поля:
  ConditionalModel reference
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_FoundationSide
Наследуется от: ModelConditionTest
Поля:
  string square_south
  string square_north
  string square_west
  string square_east
  string triangle_south
  string triangle_northwest
  string triangle_northeast
  string socket
Свойства:
Методы:
  void OnDrawGizmosSelected()
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_Inside
Наследуется от: ModelConditionTest
Поля:
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_Outside
Наследуется от: ModelConditionTest
Поля:
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  bool CheckCondition(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_RampHigh
Наследуется от: ModelConditionTest
Поля:
  string socket
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_RampLow
Наследуется от: ModelConditionTest
Поля:
  string socket
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_RoofBottom
Наследуется от: ModelConditionTest
Поля:
  string roof_square
  string roof_triangle
  string socket_bot_right
  string socket_bot_left
  string socket_top_right
  string socket_top_left
  String[] sockets_bot_right
  String[] sockets_bot_left
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_RoofLeft
Наследуется от: ModelConditionTest
Поля:
  AngleType angle
  ShapeType shape
  string roof_square
  string roof_triangle
  string socket_right
  string socket_left
  String[] sockets_left
Свойства:
  bool IsConvex
  bool IsConcave
Методы:
  bool get_IsConvex()
  bool get_IsConcave()
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_RoofRight
Наследуется от: ModelConditionTest
Поля:
  AngleType angle
  ShapeType shape
  string roof_square
  string roof_triangle
  string socket_right
  string socket_left
  String[] sockets_right
Свойства:
  bool IsConvex
  bool IsConcave
Методы:
  bool get_IsConvex()
  bool get_IsConcave()
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_RoofTop
Наследуется от: ModelConditionTest
Поля:
  string roof_square
  string roof_triangle
  string socket_bot_right
  string socket_bot_left
  string socket_top_right
  string socket_top_left
  String[] sockets_top_right
  String[] sockets_top_left
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_RoofTriangle
Наследуется от: ModelConditionTest
Поля:
  string socket
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_SpiralStairs
Наследуется от: ModelConditionTest
Поля:
  string stairs_socket_female
  String[] stairs_sockets_female
  string floor_socket_female
  String[] floor_sockets_female
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_True
Наследуется от: ModelConditionTest
Поля:
  ConditionalModel reference
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_Wall
Наследуется от: ModelConditionTest
Поля:
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_WallCornerLeft
Наследуется от: ModelConditionTest
Поля:
  string socket
  String[] sockets
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_WallCornerRight
Наследуется от: ModelConditionTest
Поля:
  string socket
  String[] sockets
Свойства:
Методы:
  bool DoTest(BaseEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ModelConditionTest_WallTriangleLeft
Наследуется от: ModelConditionTest
Поля:
  string socket_1
  string socket_2
  string socket_3
  string socket_4
  string socket_5
  string socket_6
  string socket
Свойства:
Методы:
  bool CheckCondition(BaseEntity ent)
  bool CheckSocketOccupied(BaseEntity ent, string socket)
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModelConditionTest_WallTriangleRight
Наследуется от: ModelConditionTest
Поля:
  string socket_1
  string socket_2
  string socket_3
  string socket_4
  string socket_5
  string socket_6
  string socket
Свойства:
Методы:
  bool CheckCondition(BaseEntity ent)
  bool CheckSocketOccupied(BaseEntity ent, string socket)
  bool DoTest(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: NeighbourSocket
Наследуется от: Socket_Base
Поля:
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool TestTarget(Target target)
  bool CanConnect(Vector3 position, Quaternion rotation, Socket_Base socket, Vector3 socketPosition, Quaternion socketRotation)
  void .ctor()
--------------------------------------------------
Класс: SocketHandle
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  Type GetIndexedType()
  void AdjustTarget(Target& target, float maxplaceDistance)
  void .ctor()
--------------------------------------------------
Класс: SocketMod
Наследуется от: PrefabAttribute
Поля:
  Socket_Base baseSocket
  Phrase FailedPhrase
Свойства:
Методы:
  bool DoCheck(Placement place)
  void ModifyPlacement(Placement place)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: SocketMod_AngleCheck
Наследуется от: SocketMod
Поля:
  bool wantsAngle
  Vector3 worldNormal
  float withinDegrees
  Phrase ErrorPhrase
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SocketMod_AreaCheck
Наследуется от: SocketMod
Поля:
  Bounds bounds
  LayerMask layerMask
  bool wantsInside
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool IsInArea(Vector3 position, Quaternion rotation, Bounds bounds, LayerMask layerMask, BaseEntity entity)
  bool DoCheck(Vector3 position, Quaternion rotation, BaseEntity entity)
  bool DoCheck(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_Attraction
Наследуется от: SocketMod
Поля:
  float outerRadius
  float innerRadius
  string groupName
  bool lockRotation
  bool ignoreRotationForRadiusCheck
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void ModifyPlacement(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_BuildingBlock
Наследуется от: SocketMod
Поля:
  float sphereRadius
  LayerMask layerMask
  QueryTriggerInteraction queryTriggers
  bool wantsCollide
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_EntityCheck
Наследуется от: SocketMod
Поля:
  float sphereRadius
  LayerMask layerMask
  QueryTriggerInteraction queryTriggers
  BaseEntity[] entityTypes
  bool wantsCollide
  Phrase ErrorPhrase
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SocketMod_EntityType
Наследуется от: SocketMod
Поля:
  float sphereRadius
  LayerMask layerMask
  QueryTriggerInteraction queryTriggers
  BaseEntity searchType
  bool wantsCollide
  Phrase ErrorPhrase
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SocketMod_HotSpot
Наследуется от: SocketMod
Поля:
  float spotSize
Свойства:
Методы:
  void OnDrawGizmos()
  void ModifyPlacement(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_InWater
Наследуется от: SocketMod
Поля:
  bool wantsInWater
  Phrase WantsWaterPhrase
  Phrase NoWaterPhrase
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SocketMod_PhysicMaterial
Наследуется от: SocketMod
Поля:
  PhysicMaterial[] ValidMaterials
  PhysicMaterial foundMaterial
Свойства:
Методы:
  bool DoCheck(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_PlantCheck
Наследуется от: SocketMod
Поля:
  float sphereRadius
  LayerMask layerMask
  QueryTriggerInteraction queryTriggers
  bool wantsCollide
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_SphereCheck
Наследуется от: SocketMod
Поля:
  float sphereRadius
  LayerMask layerMask
  bool wantsCollide
  Phrase Error_WantsCollideConstruction
  Phrase Error_DoesNotWantCollideConstruction
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool DoCheck(Placement place)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SocketMod_TerrainCheck
Наследуется от: SocketMod
Поля:
  bool wantsInTerrain
Свойства:
Методы:
  void OnDrawGizmos()
  bool IsInTerrain(Vector3 vPoint)
  bool DoCheck(Placement place)
  void .ctor()
--------------------------------------------------
Класс: SocketMod_WaterDepth
Наследуется от: SocketMod
Поля:
  float MinimumWaterDepth
  float MaximumWaterDepth
  bool AllowWaterVolumes
  Phrase TooDeepPhrase
  Phrase TooShallowPhrase
Свойства:
Методы:
  bool DoCheck(Placement place)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Socket_Base
Наследуется от: PrefabAttribute
Поля:
  bool male
  bool maleDummy
  bool female
  bool femaleDummy
  bool femaleNoStability
  bool monogamous
  Vector3 position
  Quaternion rotation
  Type cachedType
  Vector3 selectSize
  Vector3 selectCenter
  string socketName
  SocketMod[] socketMods
  OccupiedSocketCheck[] checkOccupiedSockets
Свойства:
Методы:
  void .ctor()
  Vector3 GetSelectPivot(Vector3 position, Quaternion rotation)
  OBB GetSelectBounds(Vector3 position, Quaternion rotation)
  Type GetIndexedType()
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool TestTarget(Target target)
  bool IsCompatible(Socket_Base socket)
  bool CanConnect(Vector3 position, Quaternion rotation, Socket_Base socket, Vector3 socketPosition, Quaternion socketRotation)
  Placement DoPlacement(Target target)
  bool CheckSocketMods(Placement placement)
--------------------------------------------------
Класс: Socket_Free
Наследуется от: Socket_Base
Поля:
  Vector3 idealPlacementNormal
  bool useTargetNormal
  bool blendAimAngle
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool TestTarget(Target target)
  Placement DoPlacement(Target target)
  void .ctor()
--------------------------------------------------
Класс: Socket_Specific
Наследуется от: Socket_Base
Поля:
  bool useFemaleRotation
  string targetSocketName
  bool blockPlacementOnChildEntities
Свойства:
Методы:
  void OnDrawGizmos()
  bool TestTarget(Target target)
  Placement DoPlacement(Target target)
  void .ctor()
--------------------------------------------------
Класс: Socket_Specific_Female
Наследуется от: Socket_Base
Поля:
  int rotationDegrees
  int rotationOffset
  String[] allowedMaleSockets
Свойства:
Методы:
  void OnDrawGizmos()
  void OnDrawGizmosSelected()
  bool CanAccept(Socket_Specific socket)
  void .ctor()
--------------------------------------------------
Класс: Socket_Terrain
Наследуется от: Socket_Base
Поля:
  float placementHeight
  bool alignToNormal
Свойства:
Методы:
  void OnDrawGizmos()
  bool TestTarget(Target target)
  Placement DoPlacement(Target target)
  void .ctor()
--------------------------------------------------
Класс: StabilitySocket
Наследуется от: Socket_Base
Поля:
  float support
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool TestTarget(Target target)
  bool CanConnect(Vector3 position, Quaternion rotation, Socket_Base socket, Vector3 socketPosition, Quaternion socketRotation)
  void .ctor()
--------------------------------------------------
Класс: WeakpointProperties
Наследуется от: PrefabAttribute
Поля:
  bool BlockWhenRoofAttached
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: CanvasOrderHack
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: AnimalSkin
Наследуется от: MonoBehaviour
Поля:
  SkinnedMeshRenderer[] animalMesh
  AnimalMultiSkin[] animalSkins
  Model model
  bool dontRandomizeOnStart
Свойства:
Методы:
  void Start()
  void ChangeSkin(int iSkin)
  void .ctor()
--------------------------------------------------
Класс: AnimalMultiSkin
Наследуется от: object
Поля:
  Material[] multiSkin
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AnimalAnimation
Наследуется от: MonoBehaviour
Поля:
  BaseEntity Entity
  BaseNpc Target
  Animator Animator
  MaterialEffect FootstepEffects
  Transform[] Feet
  SoundDefinition saddleMovementSoundDef
  SoundDefinition saddleMovementSoundDefWood
  SoundDefinition saddleMovementSoundDefRoadsign
  AnimationCurve saddleMovementGainCurve
  bool hasIdleOffset
  string BaseFolder
  Flags Flag_WoodArmor
  Flags Flag_RoadsignArmor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AnimalFootIK
Наследуется от: MonoBehaviour
Поля:
  Transform[] Feet
  Animator animator
  float maxWeightDistance
  float minWeightDistance
  float actualFootOffset
Свойства:
Методы:
  bool GroundSample(Vector3 origin, RaycastHit& hit)
  void Start()
  AvatarIKGoal GoalFromIndex(int index)
  void OnAnimatorIK(int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: AvatarSwitcher
Наследуется от: StateMachineBehaviour
Поля:
  Avatar ToApply
Свойства:
Методы:
  void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: BlendShapeController
Наследуется от: MonoBehaviour
Поля:
  SkinnedMeshRenderer TargetRenderer
  BlendState[] States
  float LerpSpeed
  BlendMode CurrentMode
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AverageVelocity
Наследуется от: object
Поля:
  Vector3 pos
  float time
  float lastEntry
  float averageSpeed
  Vector3 averageVelocity
Свойства:
  float Speed
  Vector3 Average
Методы:
  void Record(Vector3 newPos)
  float get_Speed()
  Vector3 get_Average()
  void .ctor()
--------------------------------------------------
Класс: NpcWalkAnimation
Наследуется от: MonoBehaviour
Поля:
  Vector3 HipFudge
  BaseNpc Npc
  Animator Animator
  Transform HipBone
  Transform LookBone
  bool UpdateWalkSpeed
  bool UpdateFacingDirection
  bool UpdateGroundNormal
  Transform alignmentRoot
  bool LaggyAss
  bool LookAtTarget
  float MaxLaggyAssRotation
  float MaxWalkAnimSpeed
  bool UseDirectionBlending
  bool useTurnPosing
  float turnPoseScale
  float laggyAssLerpScale
  bool skeletonChainInverted
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReliableEventSender
Наследуется от: StateMachineBehaviour
Поля:
  string StateEnter
  string MidStateEvent
  float TargetEventTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: StateLayerController
Наследуется от: StateMachineBehaviour
Поля:
  int TargetLayer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AnimationEventForward
Наследуется от: MonoBehaviour
Поля:
  GameObject targetObject
Свойства:
Методы:
  void Event(string type)
  void .ctor()
--------------------------------------------------
Класс: AudioSettings
Наследуется от: MonoBehaviour
Поля:
  float duckingFactor
  AudioMixer mixer
Свойства:
Методы:
  void Update()
  float LinearToDecibel(float linear)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BenchmarkInfo
Наследуется от: SingletonComponent`1<BenchmarkInfo>
Поля:
  string BenchmarkTitle
  string BenchmarkSubtitle
  TextMeshProUGUI PerformanceText
  TextMeshProUGUI SystemInfoText
  StringBuilder sb
  RealTimeSince timeSinceUpdated
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: BoneDictionary
Наследуется от: object
Поля:
  Transform transform
  Transform[] transforms
  String[] names
  Dictionary`2<string, Transform> nameDict
  Dictionary`2<UInt32, Transform> hashDict
  Dictionary`2<Transform, UInt32> transformDict
Свойства:
  int Count
Методы:
  int get_Count()
  void .ctor(Transform rootBone)
  void .ctor(Transform rootBone, Transform[] boneTransforms, String[] boneNames)
  void BuildBoneDictionary()
  Transform FindBone(string name, bool defaultToRoot)
  Transform FindBone(UInt32 hash, bool defaultToRoot)
  UInt32 FindBoneID(Transform transform)
--------------------------------------------------
Класс: BoneRetarget
Наследуется от: MonoBehaviour
Поля:
  bool preserveInFirstPerson
  bool restoreBeforePooling
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AttackHeliCamOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CCTVOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ClimateOverlay
Наследуется от: MonoBehaviour
Поля:
  float blendingSpeed
  PostProcessVolume[] biomeVolumes
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ColdOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
  float smoothTime
  bool preventInstantiation
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FlashbangOverlay
Наследуется от: MonoBehaviour
Поля:
  FlashbangOverlay Instance
  PostProcessVolume postProcessVolume
  AnimationCurve burnIntensityCurve
  AnimationCurve whiteoutIntensityCurve
  SoundDefinition deafLoopDef
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HomingLauncherCamOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HotOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
  float smoothTime
  bool preventInstantiation
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HurtOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
  float smoothTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HurtPunch
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
  float punchHurtDuration
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: OxygenOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
  float smoothTime
  bool submarinesOnly
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RadiationOverlay
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition[] geigerSounds
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SharpenAndVignetteOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SubmarineOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TonemappingOverlay
Наследуется от: ImageEffectLayer
Поля:
  TonemappingColorGrading tonemapping
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WaterOverlay
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
  PostProcessVolume blurPostProcessVolume
  EffectParams adminParams
  EffectParams gogglesParams
  EffectParams submarineParams
  EffectParams underwaterLabParams
  EffectParams cinematicParams
  Material[] UnderwaterFogMaterials
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CameraMan
Наследуется от: SingletonComponent`1<CameraMan>
Поля:
  string DefaultSaveName
  string SavePositionExtension
  string SavePositionDirectory
  bool OnlyControlWhenCursorHidden
  bool NeedBothMouseButtonsToZoom
  float LookSensitivity
  float MoveSpeed
  float GuideAspect
  float GuideRatio
  Canvas canvas
  Graphic[] guides
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CameraSettings
Наследуется от: MonoBehaviour
Поля:
  Camera cam
Свойства:
Методы:
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: Client
Наследуется от: SingletonComponent`1<Client>
Поля:
  Phrase loading_loading
  Phrase loading_connecting
  Phrase loading_connectionaccepted
  Phrase loading_connecting_negotiate
  Phrase loading_level
  Phrase loading_skinnablewarmup
  Phrase loading_preloadcomplete
  Phrase loading_openingscene
  Phrase loading_clientready
  Phrase loading_prefabwarmup
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ComponentInfo`1
Наследуется от: ComponentInfo
Поля:
  T component
Свойства:
Методы:
  void Initialize(T source)
  void .ctor()
--------------------------------------------------
Класс: ComponentInfo
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Setup()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: MeshCache
Наследуется от: object
Поля:
  Dictionary`2<Mesh, Data> dictionary
Свойства:
Методы:
  Data Get(Mesh mesh)
  void .cctor()
--------------------------------------------------
Класс: MeshColliderData
Наследуется от: object
Поля:
  List`1<int> triangles
  List`1<Vector3> vertices
  List`1<Vector3> normals
Свойства:
Методы:
  void Alloc()
  void Free()
  void Clear()
  void Apply(Mesh mesh)
  void Combine(MeshColliderGroup meshGroup)
  void Combine(MeshColliderGroup meshGroup, MeshColliderLookup colliderLookup)
  void .ctor()
--------------------------------------------------
Класс: MeshColliderGroup
Наследуется от: PooledList`1<MeshColliderInstance>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshColliderInstance
Наследуется от: ValueType
Поля:
  Transform transform
  Rigidbody rigidbody
  Collider collider
  OBB bounds
  Vector3 position
  Quaternion rotation
  Vector3 scale
  Data data
Свойства:
  Mesh mesh
Методы:
  Mesh get_mesh()
  void set_mesh(Mesh value)
--------------------------------------------------
Класс: MeshColliderLookup
Наследуется от: object
Поля:
  LookupGroup src
  LookupGroup dst
Свойства:
Методы:
  void Apply()
  void Add(MeshColliderInstance instance)
  LookupEntry Get(int index)
  void .ctor()
--------------------------------------------------
Класс: MeshData
Наследуется от: object
Поля:
  List`1<int> triangles
  List`1<Vector3> vertices
  List`1<Vector3> normals
  List`1<Vector4> tangents
  List`1<Color32> colors32
  List`1<Vector2> uv
  List`1<Vector2> uv2
  List`1<Vector4> positions
Свойства:
Методы:
  void AllocMinimal()
  void Alloc()
  void Free()
  void Clear()
  void Apply(Mesh mesh)
  void Combine(MeshGroup meshGroup)
  void .ctor()
--------------------------------------------------
Класс: MeshGroup
Наследуется от: PooledList`1<MeshInstance>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshInstance
Наследуется от: ValueType
Поля:
  Vector3 position
  Quaternion rotation
  Vector3 scale
  Data data
Свойства:
  Mesh mesh
Методы:
  Mesh get_mesh()
  void set_mesh(Mesh value)
--------------------------------------------------
Класс: MeshRendererData
Наследуется от: object
Поля:
  List`1<int> triangles
  List`1<Vector3> vertices
  List`1<Vector3> normals
  List`1<Vector4> tangents
  List`1<Color32> colors32
  List`1<Vector2> uv
  List`1<Vector2> uv2
  List`1<Vector4> positions
Свойства:
Методы:
  void Alloc()
  void Free()
  void Clear()
  void Apply(Mesh mesh)
  void Combine(MeshRendererGroup meshGroup)
  void Combine(MeshRendererGroup meshGroup, MeshRendererLookup rendererLookup)
  void .ctor()
--------------------------------------------------
Класс: MeshRendererGroup
Наследуется от: PooledList`1<MeshRendererInstance>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshRendererInstance
Наследуется от: ValueType
Поля:
  Renderer renderer
  OBB bounds
  Vector3 position
  Quaternion rotation
  Vector3 scale
  Data data
Свойства:
  Mesh mesh
Методы:
  Mesh get_mesh()
  void set_mesh(Mesh value)
--------------------------------------------------
Класс: MeshRendererLookup
Наследуется от: object
Поля:
  LookupGroup src
  LookupGroup dst
Свойства:
Методы:
  void Apply()
  void Clear()
  void Add(MeshRendererInstance instance)
  LookupEntry Get(int index)
  void .ctor()
--------------------------------------------------
Класс: RendererInfo
Наследуется от: ComponentInfo`1<Renderer>
Поля:
  ShadowCastingMode shadows
  Material material
  Mesh mesh
  MeshFilter meshFilter
Свойства:
Методы:
  void Reset()
  void Setup()
  void .ctor()
--------------------------------------------------
Класс: CullWhenInside
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecalBlood
Наследуется от: DecalRecycle
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecalComponent
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DecalRecycle
Наследуется от: BasePrefab
Поля:
  float LifeTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecalRecycleEx
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: DecalRotate
Наследуется от: DecalComponent
Поля:
  MinMax range
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecalScale
Наследуется от: DecalComponent
Поля:
  MinMax range
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotPlayback
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotRecorder
Наследуется от: SingletonComponent`1<DemoShotRecorder>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotHelpers
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: DontBecomeSolidWithPlayerInside
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DrawCameraFrustum
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DynamicZNear
Наследуется от: MonoBehaviour
Поля:
  float minimum
  float maximum
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EAC
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: FollowCamera
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void LateUpdate()
  void .ctor()
--------------------------------------------------
Класс: Gib
Наследуется от: ListComponent`1<Gib>
Поля:
  int gibCount
  MeshFilter _meshFilter
  MeshRenderer _meshRenderer
  MeshCollider _meshCollider
  BoxCollider _boxCollider
  SphereCollider _sphereCollider
  CapsuleCollider _capsuleCollider
  Rigidbody _rigidbody
Свойства:
Методы:
  string GetEffect(PhysicMaterial physicMaterial)
  void .ctor()
--------------------------------------------------
Класс: IconSkin
Наследуется от: MonoBehaviour
Поля:
  Image icon
  Text text
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IconSkinPicker
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef pickerIcon
  GameObject container
  Action skinChangedEvent
  ScrollRect scroller
  SearchFilterInput searchFilter
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LightEx
Наследуется от: UpdateBehaviour
Поля:
  bool alterColor
  float colorTimeScale
  Color colorA
  Color colorB
  AnimationCurve blendCurve
  bool loopColor
  bool alterIntensity
  float intensityTimeScale
  AnimationCurve intenseCurve
  float intensityCurveScale
  bool loopIntensity
  bool randomOffset
  float randomIntensityStartScale
  List`1<Light> syncLights
Свойства:
Методы:
  void OnValidate()
  bool CheckConflict(GameObject go)
  void .ctor()
--------------------------------------------------
Класс: LightGroupAtTime
Наследуется от: FacepunchBehaviour
Поля:
  float IntensityOverride
  AnimationCurve IntensityScaleOverTime
  Transform SearchRoot
  bool requiresPower
  Transform powerOverrideTransform
  LayerMask checkLayers
  GameObject enableWhenLightsOn
  float timeBetweenPowerLookup
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LocalPositionAnimation
Наследуется от: MonoBehaviour
Поля:
  Vector3 centerPosition
  bool worldSpace
  float scaleX
  float timeScaleX
  AnimationCurve movementX
  float scaleY
  float timeScaleY
  AnimationCurve movementY
  float scaleZ
  float timeScaleZ
  AnimationCurve movementZ
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LookAt
Наследуется от: MonoBehaviour
Поля:
  Transform target
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: MainCamera
Наследуется от: RustCamera`1<MainCamera>
Поля:
  Camera mainCamera
  Transform mainCameraTransform
  Action PreCullCallback
  Vector3 <velocity>k__BackingField
Свойства:
  bool isValid
  Vector3 velocity
  Vector3 position
  Vector3 forward
  Vector3 right
  Vector3 up
  Quaternion rotation
  Ray Ray
Методы:
  bool get_isValid()
  Vector3 get_velocity()
  void set_velocity(Vector3 value)
  Vector3 get_position()
  void set_position(Vector3 value)
  Vector3 get_forward()
  void set_forward(Vector3 value)
  Vector3 get_right()
  void set_right(Vector3 value)
  Vector3 get_up()
  void set_up(Vector3 value)
  Quaternion get_rotation()
  void set_rotation(Quaternion value)
  Ray get_Ray()
  void .ctor()
--------------------------------------------------
Класс: MaterialParameterToggle
Наследуется от: MonoBehaviour
Поля:
  ToggleMode Toggle
  Renderer[] TargetRenderers
  Color EmissionColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseMeshPaintable
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshPaintable
Наследуется от: BaseMeshPaintable
Поля:
  string replacementTextureName
  int textureWidth
  int textureHeight
  Color clearColor
  Texture2D targetTexture
  bool hasChanges
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshPaintable3D
Наследуется от: BaseMeshPaintable
Поля:
  float brushScale
  float uvBufferScale
  string replacementTextureName
  int textureWidth
  int textureHeight
  Camera cameraPreview
  Camera camera3D
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MeshPaintableSource
Наследуется от: MonoBehaviour
Поля:
  Vector4 uvRange
  int texWidth
  int texHeight
  string replacementTextureName
  float cameraFOV
  float cameraDistance
  Texture2D texture
  GameObject sourceObject
  Mesh collisionMesh
  Vector3 localPosition
  Vector3 localRotation
  bool applyToAllRenderers
  Renderer[] extraRenderers
  bool paint3D
  bool applyToSkinRenderers
  bool applyToFirstPersonLegs
  bool isSelected
  Renderer legRenderer
  MaterialPropertyBlock block
Свойства:
Методы:
  void Init()
  void Free()
  void OnDestroy()
  void UpdateMaterials(MaterialPropertyBlock block, Texture2D textureOverride, bool forEditing, bool isSelected)
  Color32[] UpdateFrom(Texture2D input)
  void Load(Byte[] data)
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: MeshPaintController
Наследуется от: MonoBehaviour
Поля:
  Camera pickerCamera
  Texture2D brushTexture
  Vector2 brushScale
  Color brushColor
  float brushSpacing
  RawImage brushImage
  float brushPreviewScaleMultiplier
  Texture2D stampTexture
  bool applyDefaults
  Texture2D defaltBrushTexture
  float defaultBrushSize
  Color defaultBrushColor
  float defaultBrushAlpha
  float maxBrushScale
  Toggle lastBrush
  Button UndoButton
  Button RedoButton
  Vector3 lastPosition
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OverlayMeshPaintableSource
Наследуется от: MeshPaintableSource
Поля:
  Memoized`2<string, string> STPrefixed
  string baseTextureName
  Texture2D baseTexture
Свойства:
Методы:
  void UpdateMaterials(MaterialPropertyBlock block, Texture2D textureOverride, bool forEditing, bool isSelected)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Model
Наследуется от: MonoBehaviour
Поля:
  SphereCollider collision
  Transform rootBone
  Transform headBone
  Transform eyeBone
  Animator animator
  Skeleton skeleton
  Transform[] boneTransforms
  String[] boneNames
  BoneDictionary boneDict
  int skin
Свойства:
Методы:
  void OnEnable()
  void BuildBoneDictionary()
  int GetSkin()
  Transform FindBoneInternal(string name)
  Transform FindBone(string name)
  Transform FindBone(UInt32 hash)
  UInt32 FindBoneID(Transform transform)
  Transform[] GetBones()
  Transform FindClosestBone(Vector3 worldPos)
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: NexusClient
Наследуется от: SingletonComponent`1<NexusClient>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NexusClientUtil
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: ParticleDisableOnParentDestroy
Наследуется от: MonoBehaviour
Поля:
  float destroyAfterSeconds
Свойства:
Методы:
  void OnParentDestroying()
  void .ctor()
--------------------------------------------------
Класс: ParticleRandomLifetime
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem mySystem
  float minScale
  float maxScale
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: PlayAudioEx
Наследуется от: MonoBehaviour
Поля:
  float delay
Свойства:
Методы:
  void Start()
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: PlayerModelHair
Наследуется от: MonoBehaviour
Поля:
  HairType type
  Dictionary`2<Renderer, RendererMaterials> materials
Свойства:
  Dictionary`2<Renderer, RendererMaterials> Materials
Методы:
  Dictionary`2<Renderer, RendererMaterials> get_Materials()
  void CacheOriginalMaterials()
  void Setup(HairType type, HairSetCollection hair, int meshIndex, float typeNum, float dyeNum, MaterialPropertyBlock block)
  void Setup(SkinSetCollection skin, float hairNum, float meshNum, MaterialPropertyBlock block)
  void GetRandomVariation(float hairNum, int typeIndex, int meshIndex, Single& typeNum, Single& dyeNum)
  float GetRandomHairType(float hairNum, int typeIndex)
  void .ctor()
--------------------------------------------------
Класс: HairCapMask
Наследуется от: Enum
Поля:
  int value__
  HairCapMask Head
  HairCapMask Eyebrow
  HairCapMask Facial
  HairCapMask Armpit
  HairCapMask Pubic
Свойства:
Методы:
--------------------------------------------------
Класс: PlayerModelHairCap
Наследуется от: MonoBehaviour
Поля:
  HairCapMask hairCapMask
Свойства:
Методы:
  void SetupHairCap(SkinSetCollection skin, float hairNum, float meshNum, MaterialPropertyBlock block)
  void .ctor()
--------------------------------------------------
Класс: PlayerModelSkin
Наследуется от: MonoBehaviour
Поля:
  SkinMaterialType MaterialType
  Renderer SkinRenderer
Свойства:
Методы:
  void Setup(SkinSetCollection skin, float hairNum, float meshNum)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: ILerpInfo
Поля:
Свойства:
Методы:
  float GetExtrapolationTime()
  float GetInterpolationDelay()
  float GetInterpolationSmoothing()
--------------------------------------------------
Класс: IPosLerpTarget
Поля:
Свойства:
Методы:
  float GetInterpolationInertia()
  Vector3 GetNetworkPosition()
  Quaternion GetNetworkRotation()
  void SetNetworkPosition(Vector3 pos)
  void SetNetworkRotation(Quaternion rot)
  void DrawInterpolationState(Segment<TransformSnapshot> segment, List`1<TransformSnapshot> entries)
  void LerpIdleDisable()
--------------------------------------------------
Класс: PositionLerp
Наследуется от: object
Поля:
  ListHashSet`1<PositionLerp> InstanceList
  bool DebugLog
  bool DebugDraw
  int TimeOffsetInterval
  float TimeOffset
  int TimeOffsetIntervalMin
  int TimeOffsetIntervalMax
  bool enabled
  Action idleDisable
  Interpolator`1<TransformSnapshot> interpolator
  IPosLerpTarget target
  TransformSnapshot snapshotPrototype
  float timeOffset0
  float timeOffset1
  float timeOffset2
  float timeOffset3
  int timeOffsetCount
  float lastClientTime
  float lastServerTime
  float extrapolatedTime
  float enabledTime
Свойства:
  bool Enabled
  float LerpTime
Методы:
  bool get_Enabled()
  void set_Enabled(bool value)
  float get_LerpTime()
  void OnEnable()
  void OnDisable()
  void Initialize(IPosLerpTarget target)
  void Snapshot(Vector3 position, Quaternion rotation, float serverTime)
  void Snapshot(Vector3 position, Quaternion rotation)
  void SnapTo(Vector3 position, Quaternion rotation, float serverTime)
  void SnapTo(Vector3 position, Quaternion rotation)
  void SnapToEnd()
  void Wipe()
  void WipeAll()
  void DoCycle()
  void TransformEntries(Matrix4x4 matrix)
  Quaternion GetEstimatedAngularVelocity()
  Vector3 GetEstimatedVelocity()
  void Dispose()
  void Clear()
  void Cycle()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Projectile
Наследуется от: BaseMonoBehaviour
Поля:
  float moveDeltaTime
  float lifeTime
  Vector3 initialVelocity
  float drag
  float gravityModifier
  float thickness
  float initialDistance
  bool remainInWorld
  float stickProbability
  float breakProbability
  float conditionLoss
  float ricochetChance
  float penetrationPower
  float waterIntegrityLoss
  DamageProperties damageProperties
  MinMax damageDistances
  MinMax damageMultipliers
  List`1<DamageTypeEntry> damageTypes
  ScaleRenderer rendererToScale
  ScaleRenderer firstPersonRenderer
  bool createDecals
  bool doDefaultHitEffects
  SoundDefinition flybySound
  float flybySoundDistance
  SoundDefinition closeFlybySound
  float closeFlybyDistance
  float tumbleSpeed
  Vector3 tumbleAxis
  Vector3 swimScale
  Vector3 swimSpeed
  BasePlayer owner
  AttackEntity sourceWeaponPrefab
  Projectile sourceProjectilePrefab
  ItemModProjectile mod
  int projectileID
  int seed
  bool clientsideEffect
  bool clientsideAttack
  float integrity
  float maxDistance
  Modifier modifier
  bool invisible
  UInt32 _fleshMaterialID
  UInt32 _waterMaterialID
  UInt32 cachedWaterString
Свойства:
Методы:
  void CalculateDamage(HitInfo info, Modifier mod, float scale)
  UInt32 FleshMaterialID()
  UInt32 WaterMaterialID()
  bool IsWaterMaterial(string hitMaterial)
  bool ShouldStopProjectile(RaycastHit hit)
  void .ctor()
--------------------------------------------------
Класс: QueryVis
Наследуется от: BaseMonoBehaviour
Поля:
  Collider checkCollider
  Query query
  RadiusSpace coverageRadiusSpace
  float coverageRadius
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Ragdoll
Наследуется от: BaseMonoBehaviour
Поля:
  Transform eyeTransform
  Transform centerBone
  Rigidbody primaryBody
  PhysicMaterial physicMaterial
  SpringJoint corpseJoint
  Skeleton skeleton
  Model model
  List`1<Joint> joints
  List`1<CharacterJoint> characterJoints
  List`1<ConfigurableJoint> configurableJoints
  List`1<Rigidbody> rigidbodies
  GameObject GibEffect
Свойства:
Методы:
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: IRagdollInhert
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: RotateToCamera
Наследуется от: MonoBehaviour
Поля:
  float maxDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RustCamera`1
Наследуется от: SingletonComponent`1<T>
Поля:
  AmplifyOcclusionEffect ssao
  SEScreenSpaceShadows contactShadows
  VisualizeTexelDensity visualizeTexelDensity
  EnvironmentVolumePropertiesCollection environmentVolumeProperties
  PostProcessLayer post
  PostProcessVolume baseEffectVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ScaleByIntensity
Наследуется от: MonoBehaviour
Поля:
  Vector3 initialScale
  Light intensitySource
  float maxIntensity
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ScaleBySpeed
Наследуется от: MonoBehaviour
Поля:
  float minScale
  float maxScale
  float minSpeed
  float maxSpeed
  MonoBehaviour component
  bool toggleComponent
  bool onlyWhenSubmerged
  float submergedThickness
  Vector3 prevPosition
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ScreenshotCamera
Наследуется от: RustCamera`1<ScreenshotCamera>
Поля:
  List`1<ScreenshotCamera> activeScreenshotCameras
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SearchFilterInput
Наследуется от: MonoBehaviour
Поля:
  GameObject OpenRoot
  GameObject ClosedRoot
  RustInput InputField
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SkinnedMultiMesh
Наследуется от: MonoBehaviour
Поля:
  bool shadowOnly
  bool IsVisible
  bool eyesView
  Skeleton skeleton
  SkeletonSkinLod skeletonSkinLod
  List`1<Part> parts
  List`1<Part> createdParts
  long lastBuildHash
  MaterialPropertyBlock sharedPropertyBlock
  MaterialPropertyBlock hairPropertyBlock
  float skinNumber
  float meshNumber
  float hairNumber
  int skinType
  SkinSetCollection SkinCollection
  List`1<Renderer> <Renderers>k__BackingField
Свойства:
  List`1<Renderer> Renderers
Методы:
  List`1<Renderer> get_Renderers()
  void .ctor()
--------------------------------------------------
Класс: StatusLightRenderer
Наследуется от: MonoBehaviour
Поля:
  Material offMaterial
  Material onMaterial
  MaterialPropertyBlock propertyBlock
  Renderer targetRenderer
  Color lightColor
  Light targetLight
  int colorID
  int emissionID
Свойства:
Методы:
  void Awake()
  void SetOff()
  void SetOn()
  void SetRed()
  void SetGreen()
  Color GetColor(byte r, byte g, byte b, byte a)
  Color GetColor(byte r, byte g, byte b, byte a, float intensity)
  void .ctor()
--------------------------------------------------
Класс: SunSettings
Наследуется от: MonoBehaviour
Поля:
  Light light
Свойства:
Методы:
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: TextureColorPicker
Наследуется от: MonoBehaviour
Поля:
  Texture2D texture
  onColorSelectedEvent onColorSelected
Свойства:
Методы:
  void OnPointerDown(PointerEventData eventData)
  void OnDrag(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: TimedRemoval
Наследуется от: MonoBehaviour
Поля:
  Object objectToDestroy
  float removeDelay
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: TokenisedPhrase
Наследуется от: Phrase
Поля:
  Phrase LeftMouse
  Phrase RightMouse
  Phrase MiddleMouse
Свойства:
  string translated
Методы:
  string get_translated()
  string ReplaceTokens(string str)
  void .ctor(string t, string eng)
  string TranslateMouseButton(string mouseButton)
  string GetButtonWithBind(string s)
  void .cctor()
--------------------------------------------------
Класс: TriggerMovement
Наследуется от: TriggerBase
Поля:
  Transform losEyes
  MovementModify movementModify
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TriggerVehicleDrag
Наследуется от: TriggerBase
Поля:
  Transform losEyes
  float vehicleDrag
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: UnderwearIcon
Наследуется от: MonoBehaviour
Поля:
  Image icon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnderwearSkinPicker
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef pickerIcon
  GameObject container
  Action skinChangedEvent
  Sprite defaultNudeIcon
  Sprite defaultIconMale
  Sprite defaultIconFemale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnparentOnDestroy
Наследуется от: MonoBehaviour
Поля:
  float destroyAfterSeconds
Свойства:
Методы:
  void OnParentDestroying()
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ViewModel
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef viewModelPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelItem
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewShake
Наследуется от: object
Поля:
  Vector3 <PositionOffset>k__BackingField
  Vector3 <AnglesOffset>k__BackingField
  List`1<ShakeParameters> Entries
Свойства:
  Vector3 PositionOffset
  Vector3 AnglesOffset
Методы:
  Vector3 get_PositionOffset()
  void set_PositionOffset(Vector3 value)
  Vector3 get_AnglesOffset()
  void set_AnglesOffset(Vector3 value)
  void AddShake(float amplitude, float frequency, float duration)
  void Update()
  void Stop()
  void .ctor()
--------------------------------------------------
Класс: WearableHairCap
Наследуется от: MonoBehaviour
Поля:
  HairType Type
  Color BaseColor
  Texture Mask
  MaterialPropertyBlock block
  int _HairBaseColorUV1
  int _HairBaseColorUV2
  int _HairPackedMapUV1
  int _HairPackedMapUV2
Свойства:
Методы:
  void ApplyHairCap(MaterialPropertyBlock block)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseCollision
Наследуется от: MonoBehaviour
Поля:
  BaseEntity Owner
  Model model
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ColliderBatch
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GamePhysics
Наследуется от: object
Поля:
  int BufferLength
  RaycastHit[] hitBuffer
  RaycastHit[] hitBufferB
  Collider[] colBuffer
Свойства:
Методы:
  bool CheckSphere(Vector3 position, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckCapsule(Vector3 start, Vector3 end, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckOBB(OBB obb, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckOBBAndEntity(OBB obb, int layerMask, QueryTriggerInteraction triggerInteraction, BaseEntity ignoreEntity)
  bool CheckBounds(Bounds bounds, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckInsideNonConvexMesh(Vector3 point, int layerMask)
  bool CheckInsideAnyCollider(Vector3 point, int layerMask)
  void OverlapSphere(Vector3 position, float radius, List`1<Collider> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void CapsuleSweep(Vector3 position0, Vector3 position1, float radius, Vector3 direction, float distance, List`1<RaycastHit> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void OverlapCapsule(Vector3 point0, Vector3 point1, float radius, List`1<Collider> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void OverlapOBB(OBB obb, List`1<Collider> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void OverlapBounds(Bounds bounds, List`1<Collider> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void BufferToList(Collider[] buffer, int count, List`1<Collider> list)
  bool CheckSphere(Vector3 pos, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckCapsule(Vector3 start, Vector3 end, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckOBB(OBB obb, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckBounds(Bounds bounds, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool CheckComponent(List`1<Collider> list)
  void OverlapSphere(Vector3 position, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void OverlapCapsule(Vector3 point0, Vector3 point1, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void OverlapOBB(OBB obb, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void OverlapBounds(Bounds bounds, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void BufferToList(Collider[] buffer, int count, List`1<T> list)
  void HitBufferToList(int count, List`1<RaycastHit> list)
  bool Trace(Ray ray, float radius, RaycastHit& hitInfo, float maxDistance, int layerMask, QueryTriggerInteraction triggerInteraction, BaseEntity ignoreEntity)
  void TraceAll(Ray ray, float radius, List`1<RaycastHit> hits, float maxDistance, int layerMask, QueryTriggerInteraction triggerInteraction, BaseEntity ignoreEntity)
  void TraceAllUnordered(Ray ray, float radius, List`1<RaycastHit> hits, float maxDistance, int layerMask, QueryTriggerInteraction triggerInteraction, BaseEntity ignoreEntity)
  bool LineOfSightRadius(Vector3 p0, Vector3 p1, int layerMask, float radius, float padding0, float padding1, BaseEntity ignoreEntity)
  bool LineOfSightRadius(Vector3 p0, Vector3 p1, int layerMask, float radius, float padding, BaseEntity ignoreEntity)
  bool LineOfSightRadius(Vector3 p0, Vector3 p1, int layerMask, float radius, BaseEntity ignoreEntity)
  bool LineOfSight(Vector3 p0, Vector3 p1, int layerMask, float padding0, float padding1, BaseEntity ignoreEntity)
  bool LineOfSight(Vector3 p0, Vector3 p1, int layerMask, float padding, BaseEntity ignoreEntity)
  bool LineOfSight(Vector3 p0, Vector3 p1, int layerMask, BaseEntity ignoreEntity)
  bool LineOfSightInternal(Vector3 p0, Vector3 p1, int layerMask, float radius, float padding0, float padding1, BaseEntity ignoreEntity)
  bool Verify(RaycastHit hitInfo, BaseEntity ignoreEntity)
  bool Verify(Collider collider, Vector3 point, BaseEntity ignoreEntity)
  bool CompareEntity(BaseEntity a, BaseEntity b)
  int HandleIgnoreCollision(Vector3 position, int layerMask)
  void Sort(List`1<RaycastHit> hits)
  void Sort(RaycastHit[] hits)
  void .cctor()
--------------------------------------------------
Класс: EZSoftBoneHitboxSystemCollider
Наследуется от: EZSoftBoneColliderBase
Поля:
  float radius
Свойства:
Методы:
  void Collide(Vector3& position, float spacing)
  void .ctor()
--------------------------------------------------
Класс: HitboxCollision
Наследуется от: BaseCollision
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HitboxDefinition
Наследуется от: MonoBehaviour
Поля:
  Vector3 center
  Vector3 rotation
  Type type
  int priority
  PhysicMaterial physicMaterial
  Vector3 scale
Свойства:
  Vector3 Scale
  Matrix4x4 LocalMatrix
Методы:
  Vector3 get_Scale()
  void set_Scale(Vector3 value)
  Matrix4x4 get_LocalMatrix()
  void OnValidate()
  void OnDrawGizmosSelected()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: HitboxSystem
Наследуется от: MonoBehaviour
Поля:
  List`1<HitboxShape> hitboxes
Свойства:
Методы:
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: Buttons
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Meta
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void add(Arg args)
  void if_true(Arg args)
  void if_false(Arg args)
  void reset_cycle(Arg args)
  void exec(Arg args)
  Command Find(string name)
  void .ctor()
--------------------------------------------------
Класс: WindowsAffinityShim
Наследуется от: object
Поля:
Свойства:
Методы:
  bool SetProcessAffinityMask(IntPtr process, IntPtr mask)
  bool SetPriorityClass(IntPtr process, UInt32 mask)
--------------------------------------------------
Класс: ArticulatedOccludee
Наследуется от: BaseMonoBehaviour
Поля:
  float UpdateBoundsFadeStart
  float UpdateBoundsFadeLength
  float UpdateBoundsMaxFrequency
  float UpdateBoundsMinFrequency
  LODGroup lodGroup
  List`1<Collider> colliders
  OccludeeSphere localOccludee
  List`1<Renderer> renderers
  bool isVisible
  Action TriggerUpdateVisibilityBoundsDelegate
Свойства:
  bool IsVisible
Методы:
  bool get_IsVisible()
  void OnDisable()
  void ClearVisibility()
  void ProcessVisibility(LODGroup lod)
  void RegisterForCulling(Sphere sphere, bool visible)
  void UnregisterFromCulling()
  void UpdateCullingBounds()
  bool CheckVisibility()
  void ApplyVisibility(bool vis)
  void OnVisibilityChanged(bool visible)
  void UpdateVisibility(float delay)
  void VisUpdateUsingCulling(float dist, bool visibility)
  void TriggerUpdateVisibilityBounds()
  void .ctor()
--------------------------------------------------
Класс: DamageUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void RadiusDamage(BaseEntity attackingPlayer, BaseEntity weaponPrefab, Vector3 pos, float minradius, float radius, List`1<DamageTypeEntry> damage, int layers, bool useLineOfSight)
--------------------------------------------------
Класс: CinematicEntity
Наследуется от: BaseEntity
Поля:
  Flags HideMesh
  GameObject[] DisableObjects
  bool _hideObjects
  List`1<CinematicEntity> serverList
Свойства:
  bool HideObjects
Методы:
  bool get_HideObjects()
  void set_HideObjects(bool value)
  void ServerInit()
  void DestroyShared()
  void OnFlagsChanged(Flags old, Flags next)
  void ToggleObjects(bool state)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: DiagnosticsConSys
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void DumpAnimators(string targetFolder)
  void dump(Arg args)
  void DumpSystemInformation(string targetFolder)
  void WriteTextToFile(string file, string text)
  void DumpEntities(string targetFolder)
  void DumpLODGroups(string targetFolder)
  void DumpLODGroupTotals(string targetFolder)
  void DumpNetwork(string targetFolder)
  void DumpObjects(string targetFolder)
  void DumpPhysics(string targetFolder)
  void DumpTotals(string targetFolder)
  void DumpColliders(string targetFolder)
  void DumpRigidBodies(string targetFolder)
  void DumpGameObjects(string targetFolder)
  void DumpGameObjectRecursive(StringBuilder str, Transform tx, int indent, bool includeComponents)
  void .ctor()
--------------------------------------------------
Класс: DirectionalDamageTrigger
Наследуется от: TriggerBase
Поля:
  float repeatRate
  List`1<DamageTypeEntry> damageType
  GameObjectRef attackEffect
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjects()
  void OnEmpty()
  void OnTick()
  void .ctor()
--------------------------------------------------
Класс: DofExposer
Наследуется от: ListComponent`1<DofExposer>
Поля:
  PostProcessVolume PostVolume
  bool DofEnabled
  float FocalLength
  float Blur
  float FocalAperture
  float AnamorphicSqueeze
  float AnamorphicBarrel
  bool debug
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DrawArrow
Наследуется от: MonoBehaviour
Поля:
  Color color
  float length
  float arrowLength
Свойства:
Методы:
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: DrawSkeleton
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void OnDrawGizmos()
  void DrawTransform(Transform t)
  void .ctor()
--------------------------------------------------
Класс: InvokeSpammer
Наследуется от: MonoBehaviour
Поля:
  int InvokeMilliseconds
  float RepeatTime
Свойства:
Методы:
  void Start()
  void TestInvoke()
  void .ctor()
--------------------------------------------------
Класс: ItemButtonTools
Наследуется от: MonoBehaviour
Поля:
  Image image
  ItemDefinition itemDef
Свойства:
Методы:
  void GiveSelf(int amount)
  void GiveArmed()
  void GiveBlueprint()
  void .ctor()
--------------------------------------------------
Класс: ItemListTools
Наследуется от: MonoBehaviour
Поля:
  GameObject categoryButton
  GameObject itemButton
  RustInput searchInputText
  Button lastCategory
  IOrderedEnumerable`1<ItemDefinition> currentItems
  IOrderedEnumerable`1<ItemDefinition> allItems
Свойства:
Методы:
  void OnPanelOpened()
  void OnOpenDevTools()
  void CacheAllItems()
  void Refresh()
  void RebuildCategories()
  void SwitchItemCategory(ItemDefinition[] defs)
  void FilterItems(string searchText)
  void .ctor()
--------------------------------------------------
Класс: MeshTrimTester
Наследуется от: MonoBehaviour
Поля:
  MeshTrimSettings Settings
  Mesh SourceMesh
  MeshFilter TargetMeshFilter
  int SubtractIndex
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NetworkInfoGeneralText
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI text
Свойства:
Методы:
  void Update()
  void UpdateText()
  string ChannelStat(int window, int left)
  void .ctor()
--------------------------------------------------
Класс: ObjectSpam
Наследуется от: MonoBehaviour
Поля:
  GameObject source
  int amount
  float radius
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: PingPongRotate
Наследуется от: MonoBehaviour
Поля:
  Vector3 rotationSpeed
  Vector3 offset
  Vector3 rotationAmount
Свойства:
Методы:
  void Update()
  Quaternion GetRotation(int index)
  void .ctor()
--------------------------------------------------
Класс: RotateObject
Наследуется от: MonoBehaviour
Поля:
  float rotateSpeed_X
  float rotateSpeed_Y
  float rotateSpeed_Z
  bool localSpace
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: SafeMode
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: SeedPosInfo
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup Canvas
  Text WorldPos
  Text LevelName
  Text WorldSize
  Text Seed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerConsole
Наследуется от: SingletonComponent`1<ServerConsole>
Поля:
  ConsoleWindow console
  ConsoleInput input
  float nextUpdate
Свойства:
  DateTime currentGameTime
  int currentPlayerCount
  int maxPlayerCount
  int currentEntityCount
  int currentSleeperCount
Методы:
  void OnEnable()
  void OnDisable()
  void OnInputText(string obj)
  void PrintColoured(Object[] objects)
  void HandleLog(string message, string stackTrace, LogType type)
  void Update()
  void UpdateStatus()
  DateTime get_currentGameTime()
  int get_currentPlayerCount()
  int get_maxPlayerCount()
  int get_currentEntityCount()
  int get_currentSleeperCount()
  void .ctor()
--------------------------------------------------
Класс: SystemInfoEx
Наследуется от: object
Поля:
  Boolean[] supportedRenderTextureFormats
Свойства:
  int systemMemoryUsed
Методы:
  ulong System_GetMemoryUsage()
  int get_systemMemoryUsed()
  bool SupportsRenderTextureFormat(RenderTextureFormat format)
--------------------------------------------------
Класс: SystemInfoGeneralText
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI text
Свойства:
  string currentInfo
Методы:
  string get_currentInfo()
  void Update()
  long MB(long bytes)
  long MB(ulong bytes)
  int KM2(float meters)
  void .ctor()
--------------------------------------------------
Класс: TriangleIdentifier
Наследуется от: MonoBehaviour
Поля:
  int TriangleID
  int SubmeshID
  float LineLength
Свойства:
Методы:
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: ClientPerformanceReport
Наследуется от: ValueType
Поля:
  int request_id
  string user_id
  float fps_average
  int fps
  int frame_id
  float frame_time
  float frame_time_average
  long memory_system
  long memory_collections
  long memory_managed_heap
  float realtime_since_startup
  bool streamer_mode
  int ping
  int tasks_invokes
  int tasks_load_balancer
  int workshop_skins_queued
Свойства:
Методы:
--------------------------------------------------
Класс: DevBotSpawner
Наследуется от: FacepunchBehaviour
Поля:
  GameObjectRef bot
  Transform waypointParent
  bool autoSelectLatestSpawnedGameObject
  float spawnRate
  int maxPopulation
  Transform[] waypoints
  List`1<BaseEntity> _spawned
Свойства:
Методы:
  bool HasFreePopulation()
  void SpawnBot()
  void Start()
  void .ctor()
--------------------------------------------------
Класс: DevCamera
Наследуется от: MonoBehaviour
Поля:
  float movementScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DevControls
Наследуется от: MonoBehaviour
Поля:
  GUISkin skin
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DevControlsTab
Наследуется от: BaseMonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DevDressPlayer
Наследуется от: MonoBehaviour
Поля:
  bool DressRandomly
  List`1<ItemAmount> clothesToWear
Свойства:
Методы:
  void ServerInitComponent()
  void DoRandomClothes(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: DeveloperList
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Contains(string steamid)
  bool Contains(ulong steamid)
  bool IsDeveloper(BasePlayer ply)
--------------------------------------------------
Класс: DevEnableDisable
Наследуется от: DevControlsTab
Поля:
  GameObject[] Objects
  string CookieName
  string TabName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DevEnvironment
Наследуется от: DevControlsTab
Поля:
  TOD_Sky sky
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DevImpactEffectTest
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DevMovePlayer
Наследуется от: BaseMonoBehaviour
Поля:
  BasePlayer player
  Transform[] Waypoints
  bool moveRandomly
  Vector3 destination
  Vector3 lookPoint
  int waypointIndex
  float randRun
Свойства:
Методы:
  void Awake()
  void LateSpawn()
  void SetWaypoints(Transform[] wps)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: DevTimeAdjust
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void OnGUI()
  void .ctor()
--------------------------------------------------
Класс: DevWeatherAdjust
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void OnGUI()
  void .ctor()
--------------------------------------------------
Класс: ClientFrametimeReport
Наследуется от: object
Поля:
  int request_id
  int start_frame
  List`1<int> frame_times
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ClientFrametimeRequest
Наследуется от: object
Поля:
  int request_id
  int start_frame
  int max_frames
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GameContentList
Наследуется от: MonoBehaviour
Поля:
  ResourceType resourceType
  List`1<Object> foundObjects
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemIconUpload
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: ItemTools
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LodLevelDisplay
Наследуется от: MonoBehaviour
Поля:
  Color TextColor
  float TextScaleMultiplier
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MidiConvar
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Performance
Наследуется от: SingletonComponent`1<Performance>
Поля:
  Tick current
  Tick report
  int FrameHistoryCount
  int HistoryLength
  long cycles
  Int32[] frameRateHistory
  Single[] frameTimeHistory
  Int32[] frameTimes
  int frames
  float time
Свойства:
Методы:
  void Update()
  List`1<int> GetFrameTimes(int requestedStart, int maxCount, Int32& startIndex)
  void FPSTimer()
  float AverageFrameRate()
  float AverageFrameTime()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PrefabPrepare
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PrefabValidate
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProjectileTestSpawner
Наследуется от: MonoBehaviour
Поля:
  Projectile TargetProjectile
  float RepeatTime
  float VelocityScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SteamInventoryGen
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DoorAnimEvents
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef openStart
  GameObjectRef openEnd
  GameObjectRef closeStart
  GameObjectRef closeEnd
  GameObject soundTarget
  bool checkAnimSpeed
Свойства:
  Animator animator
Методы:
  Animator get_animator()
  void DoorOpenStart()
  void DoorOpenEnd()
  void DoorCloseStart()
  void DoorCloseEnd()
  void .ctor()
--------------------------------------------------
Класс: AnimationEvents
Наследуется от: BaseMonoBehaviour
Поля:
  Transform rootObject
  HeldEntity targetEntity
  string effectFolder
  bool enforceClipWeights
  string localFolder
  bool customLocalFolder
  bool IsBusy
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: BaseFootstepEffect
Наследуется от: MonoBehaviour
Поля:
  LayerMask validImpactLayers
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BucketVMFluidSim
Наследуется от: MonoBehaviour
Поля:
  Animator waterbucketAnim
  ParticleSystem waterPour
  ParticleSystem waterTurbulence
  ParticleSystem waterFill
  float waterLevel
  float targetWaterLevel
  AudioSource waterSpill
  float PlayerEyePitch
  float turb_forward
  float turb_side
  Vector3 lastPosition
  Vector3 groundSpeedLast
  Vector3 lastAngle
  Vector3 vecAngleSpeedLast
  Vector3 initialPosition
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ColdBreath
Наследуется от: BaseMonoBehaviour
Поля:
  GameObjectRef effect
  BasePlayer player
  Transform jawBone
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Effect
Наследуется от: EffectData
Поля:
  Vector3 Up
  Vector3 worldPos
  Vector3 worldNrm
  bool attached
  Transform transform
  GameObject gameObject
  string pooledString
  bool broadcast
  Effect reusableInstace
Свойства:
Методы:
  void .ctor()
  void .ctor(string effectName, Vector3 posWorld, Vector3 normWorld, Connection sourceConnection)
  void .ctor(string effectName, BaseEntity ent, UInt32 boneID, Vector3 posLocal, Vector3 normLocal, Connection sourceConnection)
  void Init(Type fxtype, BaseEntity ent, UInt32 boneID, Vector3 posLocal, Vector3 normLocal, Connection sourceConnection)
  void Init(Type fxtype, Vector3 posWorld, Vector3 normWorld, Connection sourceConnection)
  void Clear()
  void .cctor()
--------------------------------------------------
Класс: EffectAudioPerspectiveSwitcher
Наследуется от: MonoBehaviour
Поля:
  EffectParentToWeaponBone parentToWeaponComponent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IEffectRecycle
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IEffect
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: EffectLibrary
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: EffectMuzzleFlash
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectNetwork
Наследуется от: object
Поля:
Свойства:
Методы:
  void Send(Effect effect)
  void Send(Effect effect, Connection target)
--------------------------------------------------
Класс: EffectParentToWeaponBone
Наследуется от: BaseMonoBehaviour
Поля:
  string boneName
  bool singleFrame
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectScaleWithCameraDistance
Наследуется от: MonoBehaviour
Поля:
  float minScale
  float maxScale
  float scaleStartDistance
  float scaleEndDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EmissionScaledByLight
Наследуется от: MonoBehaviour
Поля:
  Color emissionColor
  Renderer[] targetRenderers
  int materialIndex
  MaterialPropertyBlock block
  Light lightToFollow
  float maxEmissionValue
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EmissionToggle
Наследуется от: MonoBehaviour
Поля:
  Color emissionColor
  Renderer[] targetRenderers
  int materialIndex
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EyeBlink
Наследуется от: MonoBehaviour
Поля:
  Transform LeftEye
  Transform LeftEyelid
  Vector3 LeftEyeOffset
  Transform RightEye
  Transform RightEyelid
  Vector3 RightEyeOffset
  Vector3 ClosedEyelidPosition
  Vector3 ClosedEyelidRotation
  Vector2 TimeWithoutBlinking
  float BlinkSpeed
  Vector3 LeftEyeInitial
  Vector3 RightEyeInitial
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EyeController
Наследуется от: MonoBehaviour
Поля:
  float MaxLookDot
  bool debug
  Transform LeftEye
  Transform RightEye
  Transform EyeTransform
  Vector3 Fudge
  Vector3 FlickerRange
  Transform Focus
  float FocusUpdateTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FireBomb
Наследуется от: MonoBehaviour
Поля:
  GameObject fireParticle
  float bombRadius
  float particleDuration
  float emitDuration
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FirstPersonEffect
Наследуется от: MonoBehaviour
Поля:
  bool isGunShot
  EffectParentToWeaponBone parentToWeaponComponent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FootstepEffects
Наследуется от: BaseFootstepEffect
Поля:
  Transform leftFoot
  Transform rightFoot
  string footstepEffectName
  string jumpStartEffectName
  string jumpLandEffectName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IAnimationEventReceiver
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: LightPulse
Наследуется от: MonoBehaviour
Поля:
  Light TargetLight
  float PulseSpeed
  float Lifetime
  float MaxIntensity
  float FadeOutSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MaterialSwap
Наследуется от: MonoBehaviour
Поля:
  int materialIndex
  Renderer myRenderer
  Material OverrideMaterial
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Muzzleflash_AlphaRandom
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem[] muzzleflashParticles
  Gradient grad
  GradientColorKey[] gck
  GradientAlphaKey[] gak
Свойства:
Методы:
  void Start()
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: MuzzleFlash_Flamelet
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem flameletParticle
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: NPCFootstepEffects
Наследуется от: BaseFootstepEffect
Поля:
  string impactEffectDirectory
  Transform frontLeftFoot
  Transform frontRightFoot
  Transform backLeftFoot
  Transform backRightFoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleEmissionSound
Наследуется от: FacepunchBehaviour
Поля:
  ParticleSystem particleSystem
  SoundDefinition soundDefinition
  float soundCooldown
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleEmitFromParentObject
Наследуется от: MonoBehaviour
Поля:
  string bonename
  Bounds bounds
  Transform bone
  BaseEntity entity
  float lastBoundsUpdate
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleIKFix
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PhysicsEffects
Наследуется от: MonoBehaviour
Поля:
  BaseEntity entity
  SoundDefinition physImpactSoundDef
  float minTimeBetweenEffects
  float minDistBetweenEffects
  float hardnessScale
  float lowMedThreshold
  float medHardThreshold
  float enableDelay
  LayerMask ignoreLayers
  bool useCollisionPositionInsteadOfTransform
  float minimumRigidbodyImpactWeight
  float lastEffectPlayed
  float enabledAt
  float ignoreImpactThreshold
  Vector3 lastCollisionPos
Свойства:
Методы:
  void OnEnable()
  void OnCollisionEnter(Collision collision)
  void .ctor()
--------------------------------------------------
Класс: RottingFlies
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef effect
  SoundDefinition soundDef
  Transform rootBone
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Sandstorm
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem m_psSandStorm
  float m_flSpeed
  float m_flSwirl
  float m_flEmissionRate
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ScaleParticleSystem
Наследуется от: ScaleRenderer
Поля:
  ParticleSystem pSystem
  bool scaleGravity
  float startSize
  float startLifeTime
  float startSpeed
  float startGravity
Свойства:
Методы:
  void GatherInitialValues()
  void SetScale_Internal(float scale)
  void .ctor()
--------------------------------------------------
Класс: ScaleRenderer
Наследуется от: MonoBehaviour
Поля:
  bool useRandomScale
  float scaleMin
  float scaleMax
  float lastScale
  bool hasInitialValues
  Renderer myRenderer
Свойства:
Методы:
  bool ScaleDifferent(float newScale)
  void Start()
  void SetScale(float scale)
  void SetScale_Internal(float scale)
  void SetRendererEnabled(bool isEnabled)
  void GatherInitialValues()
  void .ctor()
--------------------------------------------------
Класс: ScaleTrailRenderer
Наследуется от: ScaleRenderer
Поля:
  TrailRenderer trailRenderer
  float startWidth
  float endWidth
  float duration
  float startMultiplier
Свойства:
Методы:
  void GatherInitialValues()
  void SetScale_Internal(float scale)
  void .ctor()
--------------------------------------------------
Класс: ScaleTransform
Наследуется от: ScaleRenderer
Поля:
  Vector3 initialScale
Свойства:
Методы:
  void SetScale_Internal(float scale)
  void GatherInitialValues()
  void .ctor()
--------------------------------------------------
Класс: AnimatedScreenShake
Наследуется от: BaseScreenShake
Поля:
  AnimationClip TargetClip
  AnimationCurve rotX
  AnimationCurve rotY
  AnimationCurve rotZ
  AnimationCurve posX
  AnimationCurve posY
  AnimationCurve posZ
  float VALID_RANGE
  bool canPlay
Свойства:
Методы:
  void Setup()
  void Run(float delta, CachedTransform`1& cam, CachedTransform`1& vm)
  void .ctor()
--------------------------------------------------
Класс: BaseScreenShake
Наследуется от: MonoBehaviour
Поля:
  List`1<BaseScreenShake> list
  float punchFadeScale
  float bobScale
  float animPunchMagnitude
  float length
  float timeTaken
  int currentFrame
Свойства:
Методы:
  void Apply(Camera cam, BaseViewModel vm)
  void OnEnable()
  void OnDisable()
  void Run(CachedTransform`1& cam, CachedTransform`1& vm)
  void Setup()
  void Run(float delta, CachedTransform`1& cam, CachedTransform`1& vm)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ScreenBounce
Наследуется от: BaseScreenShake
Поля:
  AnimationCurve bounceScale
  AnimationCurve bounceSpeed
  AnimationCurve bounceViewmodel
  float bounceTime
  Vector3 bounceVelocity
Свойства:
Методы:
  void Setup()
  void Run(float delta, CachedTransform`1& cam, CachedTransform`1& vm)
  void .ctor()
--------------------------------------------------
Класс: ScreenBounceFade
Наследуется от: BaseScreenShake
Поля:
  AnimationCurve bounceScale
  AnimationCurve bounceSpeed
  AnimationCurve bounceViewmodel
  AnimationCurve distanceFalloff
  AnimationCurve timeFalloff
  float bounceTime
  Vector3 bounceVelocity
  float maxDistance
  float scale
Свойства:
Методы:
  void Setup()
  void Run(float delta, CachedTransform`1& cam, CachedTransform`1& vm)
  void .ctor()
--------------------------------------------------
Класс: ScreenFov
Наследуется от: BaseScreenShake
Поля:
  AnimationCurve FovAdjustment
Свойства:
Методы:
  void Setup()
  void Run(float delta, CachedTransform`1& cam, CachedTransform`1& vm)
  void .ctor()
--------------------------------------------------
Класс: ScreenRotate
Наследуется от: BaseScreenShake
Поля:
  AnimationCurve Pitch
  AnimationCurve Yaw
  AnimationCurve Roll
  AnimationCurve ViewmodelEffect
  float scale
  bool useViewModelEffect
Свойства:
Методы:
  void Setup()
  void Run(float delta, CachedTransform`1& cam, CachedTransform`1& vm)
  void .ctor()
--------------------------------------------------
Класс: Shaker
Наследуется от: MonoBehaviour
Поля:
  float Frequency
  Vector3 PositionMagnitude
  Vector3 RotationMagnitude
  float GlobalMultiplier
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConsoleNetwork
Наследуется от: object
Поля:
Свойства:
Методы:
  void Init()
  void OnClientCommand(Message packet)
  void SendClientReply(Connection cn, string strCommand)
  void SendClientCommand(Connection cn, string strCommand, Object[] args)
  void SendClientCommandImmediate(Connection cn, string strCommand, Object[] args)
  void SendClientCommand(List`1<Connection> cn, string strCommand, Object[] args)
  void BroadcastToAllClients(string strCommand, Object[] args)
--------------------------------------------------
Класс: FileSystem_Warmup
Наследуется от: MonoBehaviour
Поля:
  bool ranInBackground
  Coroutine warmupTask
  bool run
  String[] ExcludeFilter
Свойства:
Методы:
  void Run()
  IEnumerator Run(String[] assetList, Action`1<string> statusFunction, string format, int priority)
  IEnumerator RunAsyncImpl(String[] assetList, Action`1<string> statusFunction, string format, int priority)
  IEnumerator RunImpl(String[] assetList, Action`1<string> statusFunction, string format)
  float CalculateFrameBudget()
  bool ShouldIgnore(string path)
  String[] GetAssetList(Nullable`1<bool> poolFilter)
  void PrefabWarmup(string path)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Profile
Наследуется от: object
Поля:
  Stopwatch watch
  string category
  string name
  float warnTime
Свойства:
Методы:
  void .ctor(string cat, string nam, float WarnTime)
  void Start()
  void Stop()
--------------------------------------------------
Класс: AggressionTimerAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Value>k__BackingField
Свойства:
  float Value
Методы:
  float get_Value()
  void set_Value(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: AIBrainSenses
Наследуется от: object
Поля:
  float UpdateInterval
  float HumanKnownPlayersLOSUpdateInterval
  float KnownPlayersLOSUpdateInterval
  float knownPlayersLOSUpdateInterval
  float MemoryDuration
  float LastThreatTimestamp
  float TimeInAgressiveState
  SimpleAIMemory <Memory>k__BackingField
  BaseEntity[] queryResults
  BasePlayer[] playerQueryResults
  float nextUpdateTime
  float nextKnownPlayersLOSUpdateTime
  BaseEntity owner
  BasePlayer playerOwner
  IAISenses ownerSenses
  float maxRange
  float targetLostRange
  float visionCone
  bool checkVision
  bool checkLOS
  bool ignoreNonVisionSneakers
  float listenRange
  bool hostileTargetsOnly
  bool senseFriendlies
  bool refreshKnownLOS
  bool <ignoreSafeZonePlayers>k__BackingField
  EntityType senseTypes
  IAIAttack ownerAttack
  BaseAIBrain brain
  Func`2<BaseEntity, bool> aiCaresAbout
Свойства:
  float TimeSinceThreat
  SimpleAIMemory Memory
  float TargetLostRange
  bool ignoreSafeZonePlayers
  List`1<BaseEntity> Players
Методы:
  float get_TimeSinceThreat()
  SimpleAIMemory get_Memory()
  void set_Memory(SimpleAIMemory value)
  float get_TargetLostRange()
  bool get_ignoreSafeZonePlayers()
  void set_ignoreSafeZonePlayers(bool value)
  void Init(BaseEntity owner, BaseAIBrain brain, float memoryDuration, float range, float targetLostRange, float visionCone, bool checkVision, bool checkLOS, bool ignoreNonVisionSneakers, float listenRange, bool hostileTargetsOnly, bool senseFriendlies, bool ignoreSafeZonePlayers, EntityType senseTypes, bool refreshKnownLOS)
  void DelaySenseUpdate(float delay)
  void Update()
  void UpdateSenses()
  void UpdateKnownPlayersLOS()
  void SensePlayers()
  void SenseBrains()
  bool AiCaresAbout(BaseEntity entity)
  bool IsValidSenseType(BaseEntity ent)
  bool IsTargetInVision(BaseEntity target)
  BaseEntity GetNearestPlayer(float rangeFraction)
  List`1<BaseEntity> get_Players()
  BaseEntity GetNearestThreat(float rangeFraction)
  BaseEntity GetNearestTarget(float rangeFraction)
  BaseEntity GetNearest(List`1<BaseEntity> entities, float rangeFraction)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: AIDesignSO
Наследуется от: BaseScriptableObject
Поля:
  string Filename
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AIDesign
Наследуется от: object
Поля:
  AIDesignScope <Scope>k__BackingField
  string <Description>k__BackingField
  List`1<AIState> AvailableStates
  int DefaultStateContainerID
  Dictionary`2<int, AIStateContainer> stateContainers
Свойства:
  AIDesignScope Scope
  string Description
Методы:
  AIDesignScope get_Scope()
  void set_Scope(AIDesignScope value)
  string get_Description()
  void set_Description(string value)
  void SetAvailableStates(List`1<AIState> states)
  void Load(AIDesign design, BaseEntity owner)
  void InitStateContainers(AIDesign design, BaseEntity owner)
  AIStateContainer GetDefaultStateContainer()
  AIStateContainer GetStateContainerByID(int id)
  AIStateContainer GetFirstStateContainerOfType(AIState stateType)
  AIDesign ToProto(int currentStateID)
  void .ctor()
--------------------------------------------------
Класс: AIDesigns
Наследуется от: object
Поля:
  string DesignFolderPath
  Dictionary`2<string, AIDesign> designs
Свойства:
Методы:
  AIDesign GetByNameOrInstance(string designName, AIDesign entityDesign)
  void RefreshCache(string designName, AIDesign design)
  AIDesign GetByName(string designName)
  void .cctor()
--------------------------------------------------
Класс: AIEvents
Наследуется от: object
Поля:
  AIMemory Memory
  int <CurrentInputMemorySlot>k__BackingField
  List`1<BaseAIEvent> events
  IAIEventListener eventListener
  AIBrainSenses senses
  int currentEventIndex
  bool inBlock
Свойства:
  int CurrentInputMemorySlot
Методы:
  int get_CurrentInputMemorySlot()
  void set_CurrentInputMemorySlot(int value)
  void Init(IAIEventListener listener, AIStateContainer stateContainer, BaseEntity owner, AIBrainSenses senses)
  void RemoveAll()
  void AddStateEvents(List`1<BaseAIEvent> events, BaseEntity owner)
  void Add(BaseAIEvent aiEvent)
  void Tick(float deltaTime, StateStatus stateStatus)
  int FindNextEventBlock()
  void .ctor()
--------------------------------------------------
Класс: AIEventType
Наследуется от: Enum
Поля:
  int value__
  AIEventType Timer
  AIEventType PlayerDetected
  AIEventType StateError
  AIEventType Attacked
  AIEventType StateFinished
  AIEventType InAttackRange
  AIEventType HealthBelow
  AIEventType InRange
  AIEventType PerformedAttack
  AIEventType TirednessAbove
  AIEventType HungerAbove
  AIEventType ThreatDetected
  AIEventType TargetDetected
  AIEventType AmmoBelow
  AIEventType BestTargetDetected
  AIEventType IsVisible
  AIEventType AttackTick
  AIEventType IsMounted
  AIEventType And
  AIEventType Chance
  AIEventType TargetLost
  AIEventType TimeSinceThreat
  AIEventType OnPositionMemorySet
  AIEventType AggressionTimer
  AIEventType Reloading
  AIEventType InRangeOfHome
  AIEventType IsBlinded
Свойства:
Методы:
--------------------------------------------------
Класс: AIMemory
Наследуется от: object
Поля:
  AIMemoryBank`1<BaseEntity> Entity
  AIMemoryBank`1<Vector3> Position
  AIMemoryBank`1<AIPoint> AIPoint
Свойства:
Методы:
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: MemoryBankType
Наследуется от: Enum
Поля:
  int value__
  MemoryBankType Entity
  MemoryBankType Position
  MemoryBankType AIPoint
Свойства:
Методы:
--------------------------------------------------
Класс: ReservedEntitySlots
Наследуется от: Enum
Поля:
  int value__
  ReservedEntitySlots Self
  ReservedEntitySlots OwningPlayer
  ReservedEntitySlots GroupLeader
Свойства:
Методы:
--------------------------------------------------
Класс: ReservedPositionSlots
Наследуется от: Enum
Поля:
  int value__
  ReservedPositionSlots HomePoint
  ReservedPositionSlots GroupRoamPoint
  ReservedPositionSlots RaycastTargetPoint
  ReservedPositionSlots Vector3
Свойства:
Методы:
--------------------------------------------------
Класс: ReservedAIPointSlots
Наследуется от: Enum
Поля:
  int value__
  ReservedAIPointSlots CoverPoint
Свойства:
Методы:
--------------------------------------------------
Класс: AIMemoryBank`1
Наследуется от: object
Поля:
  MemoryBankType type
  T[] slots
  Single[] slotSetTimestamps
  int slotCount
Свойства:
Методы:
  void .ctor(MemoryBankType type, int slots)
  void Init(MemoryBankType type, int slots)
  void Set(T item, int index)
  T Get(int index)
  float GetTimeSinceSet(int index)
  void Remove(int index)
  void Clear()
--------------------------------------------------
Класс: AmmoBelowAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Value>k__BackingField
Свойства:
  float Value
Методы:
  float get_Value()
  void set_Value(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: AndAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: AttackedAIEvent
Наследуется от: BaseAIEvent
Поля:
  float lastExecuteTime
  BaseCombatEntity combatEntity
Свойства:
Методы:
  void .ctor()
  void Reset()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: AttackTickAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: BaseAIEvent
Наследуется от: object
Поля:
  AIEventType <EventType>k__BackingField
  int <TriggerStateContainerID>k__BackingField
  ExecuteRate <Rate>k__BackingField
  bool <ShouldExecute>k__BackingField
  bool <Result>k__BackingField
  bool <Inverted>k__BackingField
  int <OutputEntityMemorySlot>k__BackingField
  int <InputEntityMemorySlot>k__BackingField
  int <ID>k__BackingField
  BaseEntity <Owner>k__BackingField
  float executeTimer
  float deltaTime
Свойства:
  AIEventType EventType
  int TriggerStateContainerID
  ExecuteRate Rate
  float ExecutionRate
  bool ShouldExecute
  bool Result
  bool Inverted
  int OutputEntityMemorySlot
  bool ShouldSetOutputEntityMemory
  int InputEntityMemorySlot
  int ID
  BaseEntity Owner
  bool HasValidTriggerState
Методы:
  AIEventType get_EventType()
  void set_EventType(AIEventType value)
  int get_TriggerStateContainerID()
  void set_TriggerStateContainerID(int value)
  ExecuteRate get_Rate()
  void set_Rate(ExecuteRate value)
  float get_ExecutionRate()
  bool get_ShouldExecute()
  void set_ShouldExecute(bool value)
  bool get_Result()
  void set_Result(bool value)
  bool get_Inverted()
  void set_Inverted(bool value)
  int get_OutputEntityMemorySlot()
  void set_OutputEntityMemorySlot(int value)
  bool get_ShouldSetOutputEntityMemory()
  int get_InputEntityMemorySlot()
  void set_InputEntityMemorySlot(int value)
  int get_ID()
  void set_ID(int value)
  BaseEntity get_Owner()
  void set_Owner(BaseEntity value)
  bool get_HasValidTriggerState()
  void .ctor(AIEventType type)
  void Init(AIEventData data, BaseEntity owner)
  void Init(int triggerStateContainer, int id, BaseEntity owner, int inputMemorySlot, int outputMemorySlot, bool inverted)
  AIEventData ToProto()
  void Reset()
  void Tick(float deltaTime, IAIEventListener listener)
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
  void PostExecute()
  void TriggerStateChange(IAIEventListener listener, int sourceEventID)
  BaseAIEvent CreateEvent(AIEventType eventType)
--------------------------------------------------
Класс: BestTargetDetectedAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: ChanceAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Chance>k__BackingField
Свойства:
  float Chance
Методы:
  float get_Chance()
  void set_Chance(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: HealthBelowAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <HealthFraction>k__BackingField
  BaseCombatEntity combatEntity
Свойства:
  float HealthFraction
Методы:
  float get_HealthFraction()
  void set_HealthFraction(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: IAIHungerAbove
Поля:
Свойства:
Методы:
  bool IsHungerAbove(float val)
--------------------------------------------------
Класс: HungerAboveAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Value>k__BackingField
Свойства:
  float Value
Методы:
  float get_Value()
  void set_Value(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: IAIEventListener
Поля:
Свойства:
Методы:
  void EventTriggeredStateChange(int newStateContainerID, int sourceEventID)
--------------------------------------------------
Класс: InAttackRangeAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: InRangeAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Range>k__BackingField
Свойства:
  float Range
Методы:
  float get_Range()
  void set_Range(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: InRangeOfHomeAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Range>k__BackingField
Свойства:
  float Range
Методы:
  float get_Range()
  void set_Range(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: IsBlindedAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: IsVisibleAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: IsMountedAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: OnPositionMemorySetAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: PerformedAttackAIEvent
Наследуется от: BaseAIEvent
Поля:
  float lastExecuteTime
  BaseCombatEntity combatEntity
Свойства:
Методы:
  void .ctor()
  void Reset()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: PlayerDetectedAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Range>k__BackingField
Свойства:
  float Range
Методы:
  float get_Range()
  void set_Range(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: ReloadingAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: StateErrorAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: StateFinishedAIEvent
Наследуется от: BaseAIEvent
Поля:
Свойства:
Методы:
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: TargetDetectedAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Range>k__BackingField
Свойства:
  float Range
Методы:
  float get_Range()
  void set_Range(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: TargetLostAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Range>k__BackingField
Свойства:
  float Range
Методы:
  float get_Range()
  void set_Range(float value)
  void .ctor()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: ThreatDetectedAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Range>k__BackingField
Свойства:
  float Range
Методы:
  float get_Range()
  void set_Range(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: TimerAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <DurationMin>k__BackingField
  float <DurationMax>k__BackingField
  float currentDuration
  float elapsedDuration
Свойства:
  float DurationMin
  float DurationMax
Методы:
  float get_DurationMin()
  void set_DurationMin(float value)
  float get_DurationMax()
  void set_DurationMax(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Reset()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: TimeSinceThreatAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Value>k__BackingField
Свойства:
  float Value
Методы:
  float get_Value()
  void set_Value(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: IAITirednessAbove
Поля:
Свойства:
Методы:
  bool IsTirednessAbove(float val)
--------------------------------------------------
Класс: IAISleep
Поля:
Свойства:
Методы:
  void StartSleeping()
  void StopSleeping()
--------------------------------------------------
Класс: IAISenses
Поля:
Свойства:
Методы:
  bool IsThreat(BaseEntity entity)
  bool IsTarget(BaseEntity entity)
  bool IsFriendly(BaseEntity entity)
--------------------------------------------------
Класс: IAIMounted
Поля:
Свойства:
Методы:
  bool IsMounted()
--------------------------------------------------
Класс: TirednessAboveAIEvent
Наследуется от: BaseAIEvent
Поля:
  float <Value>k__BackingField
Свойства:
  float Value
Методы:
  float get_Value()
  void set_Value(float value)
  void .ctor()
  void Init(AIEventData data, BaseEntity owner)
  AIEventData ToProto()
  void Execute(AIMemory memory, AIBrainSenses senses, StateStatus stateStatus)
--------------------------------------------------
Класс: AIStateContainer
Наследуется от: object
Поля:
  int <ID>k__BackingField
  AIState <State>k__BackingField
  List`1<BaseAIEvent> Events
  int <InputMemorySlot>k__BackingField
Свойства:
  int ID
  AIState State
  int InputMemorySlot
Методы:
  int get_ID()
  void set_ID(int value)
  AIState get_State()
  void set_State(AIState value)
  int get_InputMemorySlot()
  void set_InputMemorySlot(int value)
  void Init(AIStateContainer container, BaseEntity owner)
  AIStateContainer ToProto()
  void .ctor()
--------------------------------------------------
Класс: StateStatus
Наследуется от: Enum
Поля:
  int value__
  StateStatus Running
  StateStatus Finished
  StateStatus Error
Свойства:
Методы:
--------------------------------------------------
Класс: AIDesignScope
Наследуется от: Enum
Поля:
  int value__
  AIDesignScope Default
  AIDesignScope EntityServerWide
  AIDesignScope EntityInstance
Свойства:
Методы:
--------------------------------------------------
Класс: EntityType
Наследуется от: Enum
Поля:
  int value__
  EntityType Player
  EntityType NPC
  EntityType WorldItem
  EntityType Corpse
  EntityType TimedExplosive
  EntityType Chair
  EntityType BasePlayerNPC
Свойства:
Методы:
--------------------------------------------------
Класс: IClientBrainStateListener
Поля:
Свойства:
Методы:
  void OnClientStateChanged(AIState state)
--------------------------------------------------
Класс: IAIDesign
Поля:
Свойства:
Методы:
  void LoadAIDesign(AIDesign design, BasePlayer player)
  void StopDesigning()
  bool CanPlayerDesignAI(BasePlayer player)
--------------------------------------------------
Класс: IAISleepable
Поля:
Свойства:
Методы:
  bool AllowedToSleep()
  void SleepAI()
  void WakeAI()
--------------------------------------------------
Класс: IAIGroupable
Поля:
Свойства:
Методы:
  bool AddMember(IAIGroupable member)
  void RemoveMember(IAIGroupable member)
  void JoinGroup(IAIGroupable leader, BaseEntity leaderEntity)
  void SetGroupRoamRootPosition(Vector3 rootPos)
  bool InGroup()
  void LeaveGroup()
  void SetUngrouped()
--------------------------------------------------
Класс: IAIAttack
Поля:
Свойства:
Методы:
  void AttackTick(float delta, BaseEntity target, bool targetIsLOS)
  BaseEntity GetBestTarget()
  bool CanAttack(BaseEntity entity)
  float EngagementRange()
  bool IsTargetInRange(BaseEntity entity, Single& dist)
  bool CanSeeTarget(BaseEntity entity)
  float GetAmmoFraction()
  bool NeedsToReload()
  bool Reload()
  float CooldownDuration()
  bool IsOnCooldown()
  bool StartAttacking(BaseEntity entity)
  void StopAttacking()
--------------------------------------------------
Класс: PetCommandType
Наследуется от: Enum
Поля:
  int value__
  PetCommandType LoadDesign
  PetCommandType SetState
  PetCommandType Destroy
Свойства:
Методы:
--------------------------------------------------
Класс: IPet
Поля:
Свойства:
Методы:
  bool IsPet()
  void SetPetOwner(BasePlayer player)
  bool IsOwnedBy(BasePlayer player)
  bool IssuePetCommand(PetCommandType cmd, int param, Nullable`1<Ray> ray)
--------------------------------------------------
Класс: PetCommandList
Наследуется от: PrefabAttribute
Поля:
  List`1<PetCommandDesc> Commands
Свойства:
Методы:
  Type GetIndexedType()
  List`1<PetCommandDesc> GetCommandDescriptions()
  void .ctor()
--------------------------------------------------
Класс: AudioVisualisationEntityLight
Наследуется от: AudioVisualisationEntity
Поля:
  Light TargetLight
  Light SecondaryLight
  MeshRenderer[] TargetRenderer
  LightColourSet RedColour
  LightColourSet GreenColour
  LightColourSet BlueColour
  LightColourSet YellowColour
  LightColourSet PinkColour
  float lightMinIntensity
  float lightMaxIntensity
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BoomBox
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  AudioSource SoundSource
  float ConditionLossRate
  ItemDefinition[] ValidCassettes
  SoundDefinition PlaySfx
  SoundDefinition StopSfx
  Flags HasCassette
  int BacktrackLength
  Action`1<float> HurtCallback
  Dictionary`2<string, string> ValidStations
  Dictionary`2<string, string> ServerValidStations
  string ServerUrlList
  string lastParsedServerList
  ShoutcastStreamer ShoutcastStreamer
  GameObjectRef RadioIpDialog
  string <CurrentRadioIp>k__BackingField
  ulong AssignedRadioBy
Свойства:
  BaseEntity BaseEntity
  bool isClient
  string CurrentRadioIp
Методы:
  void ClearRadioByUser(Arg arg)
  BaseEntity get_BaseEntity()
  void ServerTogglePlay(RPCMessage msg)
  void DeductCondition()
  void ServerTogglePlay(bool play)
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  bool IsPowered()
  bool IsOn()
  bool HasFlag(Flags f)
  void SetFlag(Flags f, bool state)
  bool get_isClient()
  void LoadStations()
  Dictionary`2<string, string> GetStationData()
  bool IsStationValid(string url)
  void ParseServerUrlList()
  string get_CurrentRadioIp()
  void set_CurrentRadioIp(string value)
  void Server_UpdateRadioIP(RPCMessage msg)
  void Save(SaveInfo info)
  bool ClearRadioByUserId(ulong id)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ICassettePlayer
Поля:
Свойства:
  BaseEntity ToBaseEntity
Методы:
  void OnCassetteInserted(Cassette c)
  void OnCassetteRemoved(Cassette c)
  BaseEntity get_ToBaseEntity()
--------------------------------------------------
Класс: DiscoFloor
Наследуется от: AudioVisualisationEntity
Поля:
  float GradientDuration
  float VolumeSensitivityMultiplier
  float BaseSpeed
  Light[] LightSources
  DiscoFloorMesh FloorMesh
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DiscoFloorColourLookups
Наследуется от: PrefabAttribute
Поля:
  Single[] InOutLookup
  Single[] RadialLookup
  Single[] RippleLookup
  Single[] CheckerLookup
  Single[] BlockLookup
  Gradient[] ColourGradients
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DiscoFloorMesh
Наследуется от: MonoBehaviour
Поля:
  int GridRows
  int GridColumns
  float GridSize
  float TestOffset
  Color OffColor
  MeshRenderer Renderer
  bool DrawInEditor
  MeshFilter Filter
  AnimationCurve customCurveX
  AnimationCurve customCurveY
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IAudioConnectionSource
Поля:
Свойства:
Методы:
  IOEntity ToEntity()
--------------------------------------------------
Класс: ItemModAssociatedEntityMobile
Наследуется от: ItemModAssociatedEntity`1<MobileInventoryEntity>
Поля:
Свойства:
  bool AllowNullParenting
Методы:
  bool get_AllowNullParenting()
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModCassette
Наследуется от: ItemModAssociatedEntity`1<Cassette>
Поля:
  int noteSpriteIndex
  PreloadedCassetteContent PreloadedContent
Свойства:
  bool AllowNullParenting
  bool AllowHeldEntityParenting
Методы:
  bool get_AllowNullParenting()
  bool get_AllowHeldEntityParenting()
  void OnAssociatedItemCreated(Cassette ent)
  void .ctor()
--------------------------------------------------
Класс: LaserLight
Наследуется от: AudioVisualisationEntity
Поля:
  Animator LaserAnimator
  LineRenderer[] LineRenderers
  MeshRenderer[] DotRenderers
  MeshRenderer FlareRenderer
  Light[] LightSources
  ColourSetting RedSettings
  ColourSetting GreenSettings
  ColourSetting BlueSettings
  ColourSetting YellowSettings
  ColourSetting PinkSettings
Свойства:
Методы:
  void OnFlagsChanged(Flags old, Flags next)
  void .ctor()
--------------------------------------------------
Класс: MicrophoneStandIOEntity
Наследуется от: IOEntity
Поля:
  int PowerCost
  TriggerBase InstrumentTrigger
  bool IsStatic
Свойства:
Методы:
  int DesiredPower()
  int MaximalPowerOutput()
  int CalculateCurrentEnergy(int inputAmount, int inputSlot)
  int GetPassthroughAmount(int outputSlot)
  bool IsRootEntity()
  IOEntity ToEntity()
  void .ctor()
--------------------------------------------------
Класс: MobileInventoryEntity
Наследуется от: BaseEntity
Поля:
  SoundDefinition ringingLoop
  SoundDefinition silentLoop
  Flags Ringing
  Flags Flag_Silent
Свойства:
Методы:
  void ToggleRinging(bool state)
  void SetSilentMode(bool wantsSilent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PhoneController
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  int PhoneNumber
  string PhoneName
  bool CanModifyPhoneName
  bool CanSaveNumbers
  bool RequirePower
  bool RequireParent
  float CallWaitingTime
  bool AppendGridToName
  bool IsMobile
  bool CanSaveVoicemail
  GameObjectRef PhoneDialog
  VoiceProcessor VProcessor
  PreloadedCassetteContent PreloadedContent
  SoundDefinition DialToneSfx
  SoundDefinition RingingSfx
  SoundDefinition ErrorSfx
  SoundDefinition CallIncomingWhileBusySfx
  SoundDefinition PickupHandsetSfx
  SoundDefinition PutDownHandsetSfx
  SoundDefinition FailedWrongNumber
  SoundDefinition FailedNoAnswer
  SoundDefinition FailedNetworkBusy
  SoundDefinition FailedEngaged
  SoundDefinition FailedRemoteHangUp
  SoundDefinition FailedSelfHangUp
  Light RingingLight
  float RingingLightFrequency
  AudioSource answeringMachineSound
  EntityRef currentPlayerRef
  int <lastDialedNumber>k__BackingField
  PhoneDirectory <savedNumbers>k__BackingField
  List`1<VoicemailEntry> savedVoicemail
  CallState <serverState>k__BackingField
  PhoneController activeCallTo
Свойства:
  int MaxVoicemailSlots
  BasePlayer currentPlayer
  bool isServer
  int lastDialedNumber
  PhoneDirectory savedNumbers
  BaseEntity ParentEntity
  Cassette cachedCassette
  CallState serverState
  UInt32 AnsweringMessageId
Методы:
  int get_MaxVoicemailSlots()
  BasePlayer get_currentPlayer()
  void set_currentPlayer(BasePlayer value)
  bool get_isServer()
  int get_lastDialedNumber()
  void set_lastDialedNumber(int value)
  PhoneDirectory get_savedNumbers()
  void set_savedNumbers(PhoneDirectory value)
  BaseEntity get_ParentEntity()
  Cassette get_cachedCassette()
  bool IsPowered()
  bool IsSavedContactValid(string contactName, int contactNumber)
  void OnFlagsChanged(Flags old, Flags next)
  CallState get_serverState()
  void set_serverState(CallState value)
  UInt32 get_AnsweringMessageId()
  void ServerInit()
  void PostServerLoad()
  void DoServerDestroy()
  void ClearCurrentUser(RPCMessage msg)
  void ClearCurrentUser()
  void SetCurrentUser(RPCMessage msg)
  void UpdateServerPlayer(BasePlayer newPlayer)
  void InitiateCall(RPCMessage msg)
  void CallPhone(int number)
  bool CanReceiveCall()
  void AnswerPhone(RPCMessage msg)
  void ReceiveCallFrom(PhoneController t)
  void TimeOutDialing()
  void OnDialFailed(DialFailReason reason)
  void ServerPlayAnsweringMessage(PhoneController fromPhone)
  void TriggerTimeOut()
  void SetPhoneStateWithPlayer(CallState state)
  void SetPhoneState(CallState state)
  void BeginCall()
  void ServerHangUp(RPCMessage msg)
  void ServerHangUp()
  void SelfHangUp()
  void RemoteHangUp()
  void TimeOutCall()
  void OnReceivedVoiceFromUser(Byte[] data)
  void OnReceivedDataFromConnectedPhone(Byte[] data)
  void OnIncomingCallWhileBusy()
  void DestroyShared()
  void UpdatePhoneName(RPCMessage msg)
  void Server_RequestPhoneDirectory(RPCMessage msg)
  void Server_AddSavedNumber(RPCMessage msg)
  void Server_RemoveSavedNumber(RPCMessage msg)
  string GetDirectoryName()
  string PositionToGridCoord(Vector3 position)
  void WatchForDisconnects()
  void OnParentChanged(BaseEntity newParent)
  bool HasVoicemailSlot()
  void ServerSendVoicemail(RPCMessage msg)
  void SaveVoicemail(Byte[] data, string playerName)
  void ServerPlayVoicemail(RPCMessage msg)
  void ServerStopVoicemail(RPCMessage msg)
  void ServerDeleteVoicemail(RPCMessage msg)
  void DeleteAllVoicemail()
  void .ctor()
--------------------------------------------------
Класс: PreloadedCassetteContent
Наследуется от: ScriptableObject
Поля:
  SoundDefinition[] ShortTapeContent
  SoundDefinition[] MediumTapeContent
  SoundDefinition[] LongTapeContent
Свойства:
Методы:
  SoundDefinition GetSoundContent(int index, PreloadType type)
  SoundDefinition GetDefinition(int index, SoundDefinition[] array)
  UInt32 GetSoundContentId(SoundDefinition def)
  SoundDefinition GetSoundContent(UInt32 id)
  void .ctor()
--------------------------------------------------
Класс: RadioPlaylist
Наследуется от: ScriptableObject
Поля:
  string Url
  AudioClip[] Playlist
  float PlaylistLength
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TelephoneManager
Наследуется от: object
Поля:
  int MaxPhoneNumber
  int MinPhoneNumber
  int MaxConcurrentCalls
  int MaxCallLength
  Dictionary`2<int, PhoneController> allTelephones
  int maxAssignedPhoneNumber
Свойства:
Методы:
  int GetUnusedTelephoneNumber()
  void RegisterTelephone(PhoneController t, bool checkPhoneNumber)
  void DeregisterTelephone(PhoneController t)
  PhoneController GetTelephone(int number)
  PhoneController GetRandomTelephone(int ignoreNumber)
  int GetCurrentActiveCalls()
  void GetPhoneDirectory(int ignoreNumber, int page, int perPage, PhoneDirectory directory)
  void PrintAllPhones(Arg arg)
  void .cctor()
--------------------------------------------------
Класс: AudioInterceptComponent
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseCorpse
Наследуется от: BaseCombatEntity
Поля:
  GameObjectRef prefabRagdoll
  BaseEntity parentEnt
  ResourceDispenser resourceDispenser
  SpawnGroup spawnGroup
Свойства:
  TraitFlag Traits
Методы:
  void ResetState()
  void ServerInit()
  void InitCorpse(BaseEntity pr)
  bool CanRemove()
  void RemoveCorpse()
  void ResetRemovalTime(float dur)
  float GetRemovalTime()
  void ResetRemovalTime()
  void Save(SaveInfo info)
  void TakeChildren(BaseEntity takeChildrenFrom)
  void ApplyInheritedVelocity(Vector3 velocity)
  Rigidbody SetupRigidBody()
  void Load(LoadInfo info)
  void Load(Corpse corpse)
  void OnAttacked(HitInfo info)
  string Categorize()
  TraitFlag get_Traits()
  void Eat(BaseNpc baseNpc, float timeSpent)
  bool ShouldInheritNetworkGroup()
  void .ctor()
--------------------------------------------------
Класс: BaseEntityEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsValidEntityReference(T obj)
  bool HasEntityInParents(BaseEntity ent, BaseEntity toFind)
--------------------------------------------------
Класс: IServerFileReceiver
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: AttackEntity
Наследуется от: HeldEntity
Поля:
  float deployDelay
  float repeatDelay
  float animationDelay
  float effectiveRange
  float npcDamageScale
  float attackLengthMin
  float attackLengthMax
  float attackSpacing
  float aiAimSwayOffset
  float aiAimCone
  bool aiOnlyInRange
  float CloseRangeAddition
  float MediumRangeAddition
  float LongRangeAddition
  bool CanUseAtMediumRange
  bool CanUseAtLongRange
  SoundDefinition[] reloadSounds
  SoundDefinition thirdPersonMeleeSound
  float recoilCompDelayOverride
  bool wantsRecoilComp
  float nextAttackTime
Свойства:
  bool UsingInfiniteAmmoCheat
  float NextAttackTime
Методы:
  Vector3 GetInheritedVelocity(BasePlayer player, Vector3 direction)
  float AmmoFraction()
  bool CanReload()
  bool ServerIsReloading()
  void ServerReload()
  bool ServerTryReload(IAmmoContainer ammoSource)
  void TopUpAmmo()
  Vector3 ModifyAIAim(Vector3 eulerInput, float swayModifier)
  bool get_UsingInfiniteAmmoCheat()
  float get_NextAttackTime()
  void GetAttackStats(HitInfo info)
  void StartAttackCooldownRaw(float cooldown)
  void StartAttackCooldown(float cooldown)
  void ResetAttackCooldown()
  bool HasAttackCooldown()
  float GetAttackCooldown()
  float GetAttackIdle()
  float CalculateCooldownTime(float nextTime, float cooldown, bool catchup)
  bool VerifyClientRPC(BasePlayer player)
  bool VerifyClientAttack(BasePlayer player)
  bool ValidateEyePos(BasePlayer player, Vector3 eyePos, bool checkLineOfSight)
  void OnHeldChanged()
  void .ctor()
--------------------------------------------------
Класс: FishStateExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Contains(FishState state, FishState check)
  FishState FlipHorizontal(FishState state)
--------------------------------------------------
Класс: Binocular
Наследуется от: AttackEntity
Поля:
  Single[] fovs
  GameObjectRef fovChangeEffect
  float smoothSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CrossbowWeapon
Наследуется от: BaseProjectile
Поля:
Свойства:
Методы:
  bool ForceSendMagazine(SaveInfo saveInfo)
  void DidAttackServerside()
  void .ctor()
--------------------------------------------------
Класс: FlintStrikeWeapon
Наследуется от: BaseProjectile
Поля:
  float successFraction
  RecoilProperties strikeRecoil
Свойства:
Методы:
  RecoilProperties GetRecoil()
  void .ctor()
--------------------------------------------------
Класс: GeigerCounter
Наследуется от: AttackEntity
Поля:
  Transform geigerRod
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GrenadeWeapon
Наследуется от: ThrownWeapon
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Hammer
Наследуется от: BaseMelee
Поля:
Свойства:
Методы:
  bool CanHit(HitTest info)
  void DoAttackShared(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: InstrumentToolGuitar
Наследуется от: InstrumentTool
Поля:
  Transform InUseAligner
  Transform DeployAligner
  string DeployBone
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Keycard
Наследуется от: AttackEntity
Поля:
Свойства:
  int accessLevel
Методы:
  int get_accessLevel()
  void .ctor()
--------------------------------------------------
Класс: LiquidWeaponEffects
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LockOnLauncher
Наследуется от: BaseLauncher
Поля:
  float lockRange
  float lockConeDot
  float timeToLock
  float currentLockTime
  float timeToLoseLock
  GameObjectRef camUIDialogPrefab
  SeekerTarget currentLockTarget
  SeekingServerProjectile projectile
  float lockTickRate
  float lastSentLockTime
Свойства:
  bool HasProjectile
Методы:
  bool get_HasProjectile()
  void OnHeldChanged()
  bool CanLock()
  void UpdateLockedEntity()
  bool HasTarget()
  void OnReloadStarted()
  void ProjectileLaunched_Server(ServerProjectile justLaunched)
  void Save(SaveInfo info)
  void LetExistingProjectileGo()
  bool HasLock()
  void .ctor()
--------------------------------------------------
Класс: MolotovCocktail
Наследуется от: GrenadeWeapon
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Paddle
Наследуется от: BaseMelee
Поля:
  float animPaddleCooldown
  GameObjectRef kayakSeat
  float animationLerpSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Speargun
Наследуется от: CrossbowWeapon
Поля:
  GameObject worldAmmoModel
Свойства:
Методы:
  bool ForceSendMagazine(SaveInfo saveInfo)
  bool VerifyClientAttack(BasePlayer player)
  bool CanBeUsedInWater()
  void .ctor()
--------------------------------------------------
Класс: BaseEntityChild
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Setup(GameObject obj, BaseEntity parent)
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: BaseNetworkable
Наследуется от: BaseMonoBehaviour
Поля:
  UInt32 prefabID
  bool globalBroadcast
  bool globalBuildingBlock
  Networkable net
  bool <IsDestroyed>k__BackingField
  string _prefabName
  string _prefabNameWithoutExtension
  EntityRealm serverEntities
  bool isServersideEntity
  List`1<Connection> connectionsInSphereList
  List`1<Component> postNetworkUpdateComponents
  bool _limitedNetworking
  EntityRef parentEntity
  List`1<BaseEntity> children
  bool canTriggerParent
  int creationFrame
  bool isSpawned
  MemoryStream _NetworkCache
  Queue`1<MemoryStream> EntityMemoryStreamPool
  MemoryStream _SaveCache
Свойства:
  bool IsDestroyed
  string PrefabName
  string ShortPrefabName
  bool isServer
  bool isClient
  bool limitNetworking
  GameManager gameManager
  Library prefabAttribute
  Group GlobalNetworkGroup
  Group LimboNetworkGroup
Методы:
  bool get_IsDestroyed()
  void set_IsDestroyed(bool value)
  string get_PrefabName()
  string get_ShortPrefabName()
  Vector3 GetNetworkPosition()
  Quaternion GetNetworkRotation()
  string InvokeString()
  BaseEntity LookupPrefab()
  bool EqualNetID(BaseNetworkable other)
  bool EqualNetID(NetworkableId otherID)
  void ResetState()
  void InitShared()
  void PreInitShared()
  void PostInitShared()
  void DestroyShared()
  void OnNetworkGroupEnter(Group group)
  void OnNetworkGroupLeave(Group group)
  void OnNetworkGroupChange()
  void OnNetworkSubscribersEnter(List`1<Connection> connections)
  void OnNetworkSubscribersLeave(List`1<Connection> connections)
  void EntityDestroy()
  void DoEntityDestroy()
  void SpawnShared()
  void Save(SaveInfo info)
  void PostSave(SaveInfo info)
  void InitLoad(NetworkableId entityID)
  void PreServerLoad()
  void Load(LoadInfo info)
  void PostServerLoad()
  bool get_isServer()
  bool get_isClient()
  T ToServer()
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  List`1<Connection> GetConnectionsWithin(Vector3 position, float distance)
  void GetCloseConnections(Vector3 position, float distance, List`1<BasePlayer> players)
  bool HasCloseConnections(Vector3 position, float distance)
  bool HasConnections(Vector3 position)
  void BroadcastOnPostNetworkUpdate(BaseEntity entity)
  void PostProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool get_limitNetworking()
  void set_limitNetworking(bool value)
  void OnNetworkLimitStart()
  void OnNetworkLimitEnd()
  BaseEntity GetParentEntity()
  bool HasParent()
  void AddChild(BaseEntity child)
  void OnChildAdded(BaseEntity child)
  void RemoveChild(BaseEntity child)
  void OnChildRemoved(BaseEntity child)
  GameManager get_gameManager()
  Library get_prefabAttribute()
  Group get_GlobalNetworkGroup()
  Group get_LimboNetworkGroup()
  float GetNetworkTime()
  void Spawn()
  void SendGlobalNetworkUpdate()
  bool IsFullySpawned()
  void ServerInit()
  List`1<Connection> GetSubscribers()
  void KillMessage()
  void AdminKill()
  void Kill(DestroyMode mode)
  void TerminateOnClient(DestroyMode mode)
  void TerminateOnServer()
  void DoServerDestroy()
  bool ShouldNetworkTo(BasePlayer player)
  void SendNetworkGroupChange()
  void SendAsSnapshot(Connection connection, bool justCreated)
  void SendNetworkUpdate(NetworkQueue queue)
  void SendNetworkUpdateImmediate(bool justCreated)
  void SendNetworkUpdate_Position()
  void ToStream(Stream stream, SaveInfo saveInfo)
  bool CanUseNetworkCache(Connection connection)
  void ToStreamForNetwork(Stream stream, SaveInfo saveInfo)
  void InvalidateNetworkCache()
  MemoryStream GetSaveCache()
  void UpdateNetworkGroup()
  void .ctor()
  void .cctor()
  bool <OnNetworkLimitStart>b__64_0(Connection x)
--------------------------------------------------
Класс: BaseNetworkableEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsValid(BaseNetworkable ent)
  bool IsRealNull(BaseNetworkable ent)
--------------------------------------------------
Класс: AnimatedBuildingBlock
Наследуется от: StabilityEntity
Поля:
  bool animatorNeedsInitializing
  bool animatorIsOpen
  bool isAnimating
  int Open
Свойства:
Методы:
  void ServerInit()
  void PostServerLoad()
  void OnFlagsChanged(Flags old, Flags next)
  void UpdateAnimationParameters(bool init)
  void OnAnimatorFinished()
  void PutAnimatorToSleep()
  void OnAnimatorDisabled()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: OBBComponent
Наследуется от: MonoBehaviour
Поля:
  Bounds Bounds
Свойства:
Методы:
  OBB GetObb()
  void .ctor()
--------------------------------------------------
Класс: ProceduralLiftCabin
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProceduralLiftStop
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SimpleBuildingBlock
Наследуется от: StabilityEntity
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeployableToSlot
Наследуется от: MonoBehaviour
Поля:
  Slot slot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EntityCollisionMessage
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
Свойства:
Методы:
  void OnCollisionEnter(Collision collision)
  void .ctor()
--------------------------------------------------
Класс: EntityComponent`1
Наследуется от: EntityComponentBase
Поля:
  T _baseEntity
Свойства:
  T baseEntity
Методы:
  T get_baseEntity()
  void UpdateBaseEntity()
  BaseEntity GetBaseEntity()
  void .ctor()
--------------------------------------------------
Класс: EntityComponentBase
Наследуется от: BaseMonoBehaviour
Поля:
Свойства:
Методы:
  BaseEntity GetBaseEntity()
  void SaveComponent(SaveInfo info)
  void LoadComponent(LoadInfo info)
  bool OnRpcMessage(BasePlayer player, UInt32 rpc, Message msg)
  void .ctor()
--------------------------------------------------
Класс: EntityDebug
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  Stopwatch stopwatch
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: EntityFlag_Animator
Наследуется от: EntityFlag_Toggle
Поля:
  Animator TargetAnimator
  string ParamName
  AnimatorMode AnimationMode
  float FloatOnState
  float FloatOffState
  int IntegerOnState
  int IntegerOffState
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EntityFlag_TOD
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  Flags desiredFlag
  bool onAtNight
Свойства:
Методы:
  void Start()
  void Initialize()
  bool WantsOn()
  void DoTimeCheck()
  void .ctor()
--------------------------------------------------
Класс: EntityFlag_Toggle
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  bool runClientside
  bool runServerside
  Flags flag
  FlagCheck flagCheck
  Flags notFlag
  UnityEvent onFlagEnabled
  UnityEvent onFlagDisabled
  bool hasRunOnce
  bool lastToggleOn
Свойства:
Методы:
  void OnDisable()
  void DoUpdate(BaseEntity entity)
  void OnStateToggled(bool state)
  void OnPostNetworkUpdate(BaseEntity entity)
  void OnSendNetworkUpdate(BaseEntity entity)
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: EntityFlag_ToggleNotify
Наследуется от: EntityFlag_Toggle
Поля:
  bool UseEntityParent
Свойства:
Методы:
  void OnStateToggled(bool state)
  void .ctor()
--------------------------------------------------
Класс: IFlagNotify
Поля:
Свойства:
Методы:
  void OnFlagToggled(bool state)
--------------------------------------------------
Класс: EntityItem_RotateWhenOn
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  State on
  State off
  bool currentlyOn
  bool stateInitialized
  Flags targetFlag
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EntityTimedDestroy
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  float secondsTillDestroy
Свойства:
Методы:
  void OnEnable()
  void TimedDestroy()
  void .ctor()
--------------------------------------------------
Класс: HeadDispenser
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  ItemDefinition HeadDef
  GameObjectRef SourceEntity
  bool hasDispensed
  BaseEntity <overrideEntity>k__BackingField
Свойства:
  BaseEntity overrideEntity
Методы:
  BaseEntity get_overrideEntity()
  void set_overrideEntity(BaseEntity value)
  void DispenseHead(HitInfo info, BaseCorpse corpse)
  void .ctor()
--------------------------------------------------
Класс: HideIfOwnerFirstPerson
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  GameObject[] disableGameObjects
  bool worldModelEffect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HumanBodyResourceDispenser
Наследуется от: ResourceDispenser
Поля:
Свойства:
Методы:
  bool OverrideOwnership(Item item, AttackEntity weapon)
  string CreateSkullName(string playerName)
  void .ctor()
--------------------------------------------------
Класс: LerpBetweenPointsBool
Наследуется от: MonoBehaviour
Поля:
  Vector3 offsetPosLocal
  float speed
Свойства:
Методы:
  void SetAtOffset(bool should)
  void .ctor()
--------------------------------------------------
Класс: LootDistanceOverride
Наследуется от: MonoBehaviour
Поля:
  float amount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ResourceDispenser
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  GatherType gatherType
  List`1<ItemAmount> containedItems
  float maxDestroyFractionForFinishBonus
  List`1<ItemAmount> finishBonus
  float fractionRemaining
  float categoriesRemaining
  float startingItemCounts
  Dictionary`2<GatherType, HashSet`1<int>> cachedResourceItemTypes
Свойства:
Методы:
  void Start()
  void Initialize()
  void CacheResourceTypeItems()
  void DoGather(HitInfo info, BaseCorpse corpse)
  void AssignFinishBonus(BasePlayer player, float fraction, AttackEntity weapon)
  void OnAttacked(HitInfo info)
  void GiveResources(BasePlayer entity, float gatherDamage, float destroyFraction, AttackEntity attackWeapon)
  void DestroyFraction(float fraction)
  void GiveResourceFromItem(BasePlayer entity, ItemAmount itemAmt, float gatherDamage, float destroyFraction, AttackEntity attackWeapon)
  int CalculateGatherBonus(BaseEntity entity, ItemAmount item, float amountToGive)
  bool IsProducedItemOfGatherType(ItemAmount item)
  bool OverrideOwnership(Item item, AttackEntity weapon)
  void UpdateVars()
  void UpdateRemainingCategories()
  void CountAllItems()
  void UpdateFraction()
  void .ctor()
--------------------------------------------------
Класс: Barricade
Наследуется от: DecayEntity
Поля:
  float reflectDamage
  GameObjectRef reflectEffect
  bool canNpcSmash
  NavMeshModifierVolume NavMeshVolumeAnimals
  NavMeshModifierVolume NavMeshVolumeHumanoids
  NPCBarricadeTriggerBox NpcTriggerBox
  int nonWalkableArea
  int animalAgentTypeId
  int humanoidAgentTypeId
Свойства:
Методы:
  void ServerInit()
  void OnAttacked(HitInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseFuelLightSource
Наследуется от: BaseOven
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseLadder
Наследуется от: BaseCombatEntity
Поля:
Свойства:
Методы:
  bool ShouldBlockProjectiles()
  void .ctor()
--------------------------------------------------
Класс: BoxStorage
Наследуется от: StorageContainer
Поля:
Свойства:
Методы:
  Vector3 GetDropPosition()
  bool SupportsChildDeployables()
  bool CanPickup(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ElectricOven
Наследуется от: BaseOven
Поля:
  GameObjectRef IoEntity
  Transform IoEntityAnchor
  EntityRef`1<IOEntity> spawnedIo
  bool resumeCookingWhenPowerResumes
Свойства:
  bool CanRunWithNoFuel
Методы:
  void ServerInit()
  void SpawnIOEnt()
  bool get_CanRunWithNoFuel()
  void OnIOEntityFlagsChanged(Flags old, Flags next)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool CanPickupOven()
  void .ctor()
--------------------------------------------------
Класс: IImageReceiver
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: ItemModSign
Наследуется от: ItemModAssociatedEntity`1<SignContent>
Поля:
Свойства:
  bool AllowNullParenting
  bool ShouldAutoCreateEntity
Методы:
  bool get_AllowNullParenting()
  bool get_ShouldAutoCreateEntity()
  void OnSignPickedUp(ISignage s, IUGCBrowserEntity ugc, Item toItem)
  void .ctor()
--------------------------------------------------
Класс: PercentFullStorageContainer
Наследуется от: StorageContainer
Поля:
  float prevPercentFull
Свойства:
Методы:
  bool IsFull()
  bool IsEmpty()
  void OnPercentFullChanged(float newPercentFull)
  float GetPercentFull()
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void OnInventoryDirty()
  void .ctor()
--------------------------------------------------
Класс: PoweredWaterPurifier
Наследуется от: WaterPurifier
Поля:
  float ConvertInterval
  int PowerDrain
  Material PoweredMaterial
  Material UnpoweredMaterial
  MeshRenderer TargetRenderer
Свойства:
Методы:
  void ResetState()
  bool CanPickup(BasePlayer player)
  void SpawnStorageEnt(bool load)
  void OnItemAddedOrRemoved(Item item, bool added)
  void ConvertWater()
  int ConsumptionAmount()
  void OnFlagsChanged(Flags old, Flags next)
  void .ctor()
--------------------------------------------------
Класс: ISignage
Поля:
Свойства:
  Vector2i TextureSize
  int TextureCount
  NetworkableId NetworkID
  Type FileType
Методы:
  bool CanUpdateSign(BasePlayer player)
  float Distance(Vector3 position)
  Vector2i get_TextureSize()
  int get_TextureCount()
  UInt32[] GetTextureCRCs()
  NetworkableId get_NetworkID()
  Type get_FileType()
  void SetTextureCRCs(UInt32[] crcs)
--------------------------------------------------
Класс: IUGCBrowserEntity
Поля:
Свойства:
  UInt32[] GetContentCRCs
  UGCType ContentType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
Методы:
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  UGCType get_ContentType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
--------------------------------------------------
Класс: UGCType
Наследуется от: Enum
Поля:
  int value__
  UGCType ImageJpg
  UGCType ImagePng
  UGCType AudioOgg
  UGCType PatternBoomer
Свойства:
Методы:
--------------------------------------------------
Класс: SignContent
Наследуется от: ImageStorageEntity
Поля:
  UInt32[] textureIDs
  List`1<ulong> editHistory
Свойства:
  UInt32 CrcToLoad
  Type StorageType
  UGCType ContentType
  UInt32[] GetContentCRCs
  Type FileType
  List`1<ulong> EditingHistory
  BaseNetworkable UgcEntity
Методы:
  UInt32 get_CrcToLoad()
  Type get_StorageType()
  UGCType get_ContentType()
  void CopyInfoFromSign(ISignage s, IUGCBrowserEntity b)
  void CopyInfoToSign(ISignage s, IUGCBrowserEntity b)
  void Save(SaveInfo info)
  void DoServerDestroy()
  void Load(LoadInfo info)
  UInt32[] get_GetContentCRCs()
  void ClearContent()
  Type get_FileType()
  List`1<ulong> get_EditingHistory()
  BaseNetworkable get_UgcEntity()
  void .ctor()
--------------------------------------------------
Класс: WaterCatcher
Наследуется от: LiquidContainer
Поля:
  ItemDefinition itemToCreate
  WaterCatcherCollectRate collectionRates
  float maxItemToCreate
  Vector3 rainTestPosition
  float rainTestSize
  float collectInterval
Свойства:
Методы:
  void ServerInit()
  void CollectWater()
  bool IsFull()
  bool TestIsOutside()
  void AddResource(int iAmount)
  IOEntity CheckPushLiquid(IOEntity connected, int amount, IOEntity fromSource, int depth)
  void .ctor()
--------------------------------------------------
Класс: WaterCatcherCollectRate
Наследуется от: ScriptableObject
Поля:
  float baseRate
  float rainRate
  float snowRate
  float fogRate
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WaterPump
Наследуется от: LiquidContainer
Поля:
  Transform WaterResourceLocation
  float PumpInterval
  int AmountPerPump
  int PowerConsumption
Свойства:
  bool IsGravitySource
Методы:
  int ConsumptionAmount()
  void CreateWater()
  void OnFlagsChanged(Flags old, Flags next)
  int GetPassthroughAmount(int outputSlot)
  bool IsFull()
  bool get_IsGravitySource()
  void .ctor()
--------------------------------------------------
Класс: WaterPurifier
Наследуется от: LiquidContainer
Поля:
  GameObjectRef storagePrefab
  Transform storagePrefabAnchor
  ItemDefinition freshWater
  int waterToProcessPerMinute
  int freshWaterRatio
  bool stopWhenOutputFull
  LiquidContainer waterStorage
  float dirtyWaterProcssed
  float pendingFreshWater
Свойства:
Методы:
  void ServerInit()
  void PostServerLoad()
  void SpawnStorageEnt(bool load)
  void OnParentRemoved()
  void OnKilled(HitInfo info)
  void ParentTemperatureUpdate(float temp)
  void CheckCoolDown()
  bool HasDirtyWater()
  void Cook(float timeCooked)
  void ConvertWater(float timeCooked)
  void Load(LoadInfo info)
  bool IsBoiling()
  void .ctor()
--------------------------------------------------
Класс: DebrisEntity
Наследуется от: BaseCombatEntity
Поля:
  float DebrisDespawnOverride
Свойства:
Методы:
  void ServerInit()
  void RemoveCorpse()
  void ResetRemovalTime(float dur)
  float GetRemovalTime()
  void ResetRemovalTime()
  string Categorize()
  void .ctor()
--------------------------------------------------
Класс: BuildingBlockDecay
Наследуется от: Decay
Поля:
  bool isFoundation
Свойства:
Методы:
  float GetDecayDelay(BaseEntity entity)
  float GetDecayDuration(BaseEntity entity)
  bool ShouldDecay(BaseEntity entity)
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: BuildingGradeDecay
Наследуется от: Decay
Поля:
  Enum decayGrade
Свойства:
Методы:
  float GetDecayDelay(BaseEntity entity)
  float GetDecayDuration(BaseEntity entity)
  bool ShouldDecay(BaseEntity entity)
  void .ctor()
--------------------------------------------------
Класс: Decay
Наследуется от: PrefabAttribute
Поля:
  float hours
Свойства:
Методы:
  float GetDecayDelay(Enum grade)
  float GetDecayDuration(Enum grade)
  void BuildingDecayTouch(BuildingBlock buildingBlock)
  void EntityLinkDecayTouch(BaseEntity ent)
  void RadialDecayTouch(Vector3 pos, float radius, int mask)
  bool ShouldDecay(BaseEntity entity)
  float GetDecayDelay(BaseEntity entity)
  float GetDecayDuration(BaseEntity entity)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DecayEntity
Наследуется от: BaseCombatEntity
Поля:
  GameObjectRef debrisPrefab
  Vector3 debrisRotationOffset
  UInt32 buildingID
  float decayTimer
  float upkeepTimer
  Upkeep upkeep
  Decay decay
  DecayPoint[] decayPoints
  float lastDecayTick
  float decayVariance
Свойства:
  bool BypassInsideDecayMultiplier
Методы:
  void ResetState()
  void AttachToBuilding(UInt32 id)
  Building GetBuilding()
  BuildingPrivlidge GetBuildingPrivilege()
  void CalculateUpkeepCostAmounts(List`1<ItemAmount> itemAmounts, float multiplier)
  void ServerInit()
  void DoServerDestroy()
  void AttachToBuilding(DecayEntity other)
  BuildingBlock GetNearbyBuildingBlock()
  void ResetUpkeepTime()
  void DecayTouch()
  void AddUpkeepTime(float time)
  float GetProtectedSeconds()
  void DecayTick()
  void OnRepairFinished()
  void OnKilled(HitInfo info)
  bool get_BypassInsideDecayMultiplier()
  bool SupportsChildDeployables()
  bool ForceDeployableSetParent()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: DeployableDecay
Наследуется от: Decay
Поля:
  float decayDelay
  float decayDuration
Свойства:
Методы:
  float GetDecayDelay(BaseEntity entity)
  float GetDecayDuration(BaseEntity entity)
  bool ShouldDecay(BaseEntity entity)
  void .ctor()
--------------------------------------------------
Класс: SprayDecay
Наследуется от: Decay
Поля:
Свойства:
Методы:
  bool ShouldDecay(BaseEntity entity)
  float GetDecayDelay(BaseEntity entity)
  float GetDecayDuration(BaseEntity entity)
  void .ctor()
--------------------------------------------------
Класс: Upkeep
Наследуется от: PrefabAttribute
Поля:
  float upkeepMultiplier
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DestroyOutsideMonument
Наследуется от: FacepunchBehaviour
Поля:
  BaseCombatEntity baseCombatEntity
  float checkEvery
  MonumentInfo ourMonument
Свойства:
  Vector3 OurPos
Методы:
  Vector3 get_OurPos()
  void OnEnable()
  void OnDisable()
  MonumentInfo GetOurMonument()
  void CheckPosition()
  void DoOutsideMonument()
  void .ctor()
--------------------------------------------------
Класс: EntityFuelSystem
Наследуется от: object
Поля:
  bool isServer
  bool editorGiveFreeFuel
  UInt32 fuelStorageID
  EntityRef`1<StorageContainer> fuelStorageInstance
  float nextFuelCheckTime
  bool cachedHasFuel
  float pendingFuel
Свойства:
Методы:
  void .ctor(bool isServer, GameObjectRef fuelStoragePrefab, List`1<BaseEntity> children, bool editorGiveFreeFuel)
  bool IsInFuelInteractionRange(BasePlayer player)
  StorageContainer GetFuelContainer()
  void CheckNewChild(BaseEntity child)
  Item GetFuelItem()
  int GetFuelAmount()
  float GetFuelFraction()
  bool HasFuel(bool forceCheck)
  int TryUseFuel(float seconds, float fuelUsedPerSecond)
  void LootFuel(BasePlayer player)
  void AddStartingFuel(int amount)
  void AdminAddFuel()
  int GetFuelCapacity()
--------------------------------------------------
Класс: EntityLink
Наследуется от: object
Поля:
  BaseEntity owner
  Socket_Base socket
  List`1<EntityLink> connections
  int capacity
Свойства:
  string name
Методы:
  string get_name()
  void Setup(BaseEntity owner, Socket_Base socket)
  void EnterPool()
  void LeavePool()
  bool Contains(EntityLink entity)
  void Add(EntityLink entity)
  void Remove(EntityLink entity)
  void Clear()
  bool IsEmpty()
  bool IsOccupied()
  bool IsMale()
  bool IsFemale()
  bool CanConnect(EntityLink link)
  void .ctor()
--------------------------------------------------
Класс: EntityLinkEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void FreeLinks(List`1<EntityLink> links)
  void ClearLinks(List`1<EntityLink> links)
  void AddLinks(List`1<EntityLink> links, BaseEntity entity, Socket_Base[] sockets)
--------------------------------------------------
Класс: EntityRef
Наследуется от: ValueType
Поля:
  BaseEntity ent_cached
  NetworkableId id_cached
Свойства:
  NetworkableId uid
Методы:
  bool IsSet()
  bool IsValid(bool serverside)
  void Set(BaseEntity ent)
  BaseEntity Get(bool serverside)
  NetworkableId get_uid()
  void set_uid(NetworkableId value)
--------------------------------------------------
Класс: EntityRef`1
Наследуется от: ValueType
Поля:
  EntityRef entityRef
Свойства:
  bool IsSet
  NetworkableId uid
Методы:
  void .ctor(NetworkableId uid)
  bool get_IsSet()
  bool IsValid(bool serverside)
  void Set(T entity)
  T Get(bool serverside)
  bool TryGet(bool serverside, T& entity)
  NetworkableId get_uid()
  void set_uid(NetworkableId value)
--------------------------------------------------
Класс: FireBall
Наследуется от: BaseEntity
Поля:
  float lifeTimeMin
  float lifeTimeMax
  ParticleSystem[] movementSystems
  ParticleSystem[] restingSystems
  float generation
  GameObjectRef spreadSubEntity
  float tickRate
  float damagePerSecond
  float radius
  int waterToExtinguish
  bool canMerge
  LayerMask AttackLayers
  bool ignoreNPC
  Vector3 lastPos
  float deathTime
  int wetness
  float spawnTime
  Vector3 delayedVelocity
Свойства:
Методы:
  void SetDelayedVelocity(Vector3 delayed)
  void ApplyDelayedVelocity()
  void ServerInit()
  float GetDeathTime()
  void AddLife(float amountToAdd)
  float MaxLifeTime()
  float TimeLeft()
  void TryToSpread()
  void SetGeneration(int gen)
  void Think()
  void DoRadialDamage()
  bool CanMerge()
  float TimeAlive()
  void SetResting(bool isResting)
  void Extinguish()
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
  bool IsResting()
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: FireSpot
Наследуется от: BaseEntity
Поля:
  GameObject flameEffect
Свойства:
Методы:
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: FlameExplosive
Наследуется от: TimedExplosive
Поля:
  GameObjectRef createOnExplode
  bool blockCreateUnderwater
  float numToCreate
  float minVelocity
  float maxVelocity
  float spreadAngle
  bool forceUpForExplosion
  AnimationCurve velocityCurve
  AnimationCurve spreadCurve
Свойства:
Методы:
  void Explode()
  void FlameExplode(Vector3 surfaceNormal)
  void ProjectileImpact(RaycastHit info, Vector3 rayOrigin)
  void .ctor()
--------------------------------------------------
Класс: GrowableGene
Наследуется от: object
Поля:
  GeneType <Type>k__BackingField
  GeneType <PreviousType>k__BackingField
Свойства:
  GeneType Type
  GeneType PreviousType
Методы:
  GeneType get_Type()
  void set_Type(GeneType value)
  GeneType get_PreviousType()
  void set_PreviousType(GeneType value)
  void Set(GeneType geneType, bool firstSet)
  void SetPrevious(GeneType type)
  string GetDisplayCharacter()
  string GetDisplayCharacter(GeneType type)
  string GetColourCodedDisplayCharacter()
  string GetColourCodedDisplayCharacter(GeneType type)
  bool IsPositive(GeneType type)
  bool IsPositive()
  void .ctor()
--------------------------------------------------
Класс: GrowableGeneEncoding
Наследуется от: object
Поля:
Свойства:
Методы:
  void EncodeGenesToItem(GrowableEntity sourceGrowable, Item targetItem)
  void EncodeGenesToItem(int genes, Item targetItem)
  int EncodeGenesToInt(GrowableGenes genes)
  int EncodePreviousGenesToInt(GrowableGenes genes)
  void DecodeIntToGenes(int data, GrowableGenes genes)
  void DecodeIntToPreviousGenes(int data, GrowableGenes genes)
  string DecodeIntToGeneString(int data)
  int Set(int storage, int slot, int value)
  int Get(int storage, int slot)
--------------------------------------------------
Класс: GrowableGeneProperties
Наследуется от: ScriptableObject
Поля:
  GeneWeight[] Weights
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GrowableGenes
Наследуется от: object
Поля:
  GrowableGene[] Genes
  GeneWeighting[] baseWeights
  GeneWeighting[] slotWeights
Свойства:
Методы:
  void .ctor()
  void Clear()
  void GenerateRandom(GrowableEntity growable)
  void CalculateBaseWeights(GrowableGeneProperties properties)
  void CalculateSlotWeights(GrowableGeneProperties properties, int slot)
  GeneType PickWeightedGeneType()
  int GetGeneTypeCount(GeneType geneType)
  int GetPositiveGeneCount()
  int GetNegativeGeneCount()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void DebugPrint()
  string GetDisplayString(bool previousGenes)
  void .cctor()
--------------------------------------------------
Класс: GrowableGenetics
Наследуется от: object
Поля:
  int GeneSlotCount
  float CrossBreedingRadius
  GeneWeighting[] neighbourWeights
  GeneWeighting dominant
Свойства:
Методы:
  void CrossBreed(GrowableEntity growable)
  GeneWeighting GetDominantGeneWeighting(GrowableEntity crossBreedingGrowable, List`1<GrowableEntity> neighbours, int slot)
  void .cctor()
--------------------------------------------------
Класс: IItemContainerEntity
Поля:
Свойства:
  ItemContainer inventory
  Transform Transform
  bool DropsLoot
  float DestroyLootPercent
  bool DropFloats
Методы:
  ItemContainer get_inventory()
  Transform get_Transform()
  bool get_DropsLoot()
  float get_DestroyLootPercent()
  bool get_DropFloats()
  void DropItems(BaseEntity initiator)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  bool ShouldDropItemsIndividually()
  void DropBonusItems(BaseEntity initiator, ItemContainer container)
  Vector3 GetDropPosition()
--------------------------------------------------
Класс: IIdealSlotEntity
Поля:
Свойства:
Методы:
  int GetIdealSlot(BasePlayer player, Item item)
  ItemContainerId GetIdealContainer(BasePlayer player, Item item, bool altMove)
--------------------------------------------------
Класс: ILootableEntity
Поля:
Свойства:
  ulong LastLootedBy
Методы:
  ulong get_LastLootedBy()
  void set_LastLootedBy(ulong value)
--------------------------------------------------
Класс: InstrumentDebugInput
Наследуется от: MonoBehaviour
Поля:
  InstrumentKeyController KeyController
  KeySet Note
  float Frequency
  float StopAfter
  SoundDefinition OverrideDefinition
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstrumentIKController
Наследуется от: MonoBehaviour
Поля:
  Vector3 HitRotationVector
  Transform[] LeftHandIkTargets
  Transform[] LeftHandIKTargetHitRotations
  Transform[] RightHandIkTargets
  Transform[] RightHandIKTargetHitRotations
  Transform[] RightFootIkTargets
  AnimationCurve HandHeightCurve
  float HandHeightMultiplier
  float HandMoveLerpSpeed
  bool DebugHitRotation
  AnimationCurve HandHitCurve
  float NoteHitTime
  float BodyLookWeight
  float HeadLookWeight
  float LookWeightLimit
  bool HoldHandsAtPlay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstrumentIKTargetAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstrumentKeyController
Наследуется от: MonoBehaviour
Поля:
  float DEFAULT_NOTE_VELOCITY
  NoteBindingCollection Bindings
  NoteBinding[] NoteBindings
  Transform[] NoteSoundPositions
  InstrumentIKController IKController
  Transform LeftHandProp
  Transform RightHandProp
  Animator InstrumentAnimator
  BaseEntity RPCHandler
  UInt32 overrideAchievementId
  bool <PlayedNoteThisFrame>k__BackingField
  string ALL_NOTES_STATNAME
Свойства:
  bool PlayedNoteThisFrame
Методы:
  bool get_PlayedNoteThisFrame()
  void set_PlayedNoteThisFrame(bool value)
  void ProcessServerPlayedNote(BasePlayer forPlayer)
  void .ctor()
--------------------------------------------------
Класс: NoteBindingCollection
Наследуется от: ScriptableObject
Поля:
  NoteData[] BaseBindings
  float MinimumNoteTime
  float MaximumNoteLength
  bool AllowAutoplay
  float AutoplayLoopDelay
  string NotePlayedStatName
  string KeyMidiMapShortname
  bool AllowSustain
  bool AllowFullKeyboardInput
  string InstrumentShortName
  InstrumentType NotePlayType
  int MaxConcurrentNotes
  bool LoopSounds
  float SoundFadeInTime
  float minimumSoundFadeOutTime
  KeySet PrimaryClickNote
  KeySet SecondaryClickNote
  bool RunInstrumentAnimationController
  bool PlayRepeatAnimations
  float AnimationDeadTime
  float AnimationResetDelay
  float RecentlyPlayedThreshold
  float CrossfadeNormalizedAnimationTarget
  float AnimationCrossfadeDuration
  float CrossfadePlayerSpeedMulti
  int DefaultOctave
  int ShiftedOctave
  bool UseClosestMidiNote
  float MidiNoteUpOctaveShift
  float MidiNoteDownOctaveShift
Свойства:
Методы:
  bool FindNoteData(Notes note, int octave, NoteType type, NoteData& data, Int32& noteIndex)
  bool FindNoteDataIndex(Notes note, int octave, NoteType type, Int32& noteIndex)
  NoteData CreateMidiBinding(NoteData basedOn, int octave, int midiCode)
  void .ctor()
--------------------------------------------------
Класс: BaseMetabolism
Наследуется от: object
Поля:
  float targetHeartRate
Свойства:
Методы:
--------------------------------------------------
Класс: BaseMetabolism`1
Наследуется от: EntityComponent`1<T>
Поля:
  T owner
  MetabolismAttribute calories
  MetabolismAttribute hydration
  MetabolismAttribute heartrate
  float timeSinceLastMetabolism
Свойства:
Методы:
  void Reset()
  void OnDisable()
  void ServerInit(T owner)
  void ServerUpdate(BaseCombatEntity ownerEntity, float delta)
  void DoMetabolismDamage(BaseCombatEntity ownerEntity, float delta)
  void RunMetabolism(BaseCombatEntity ownerEntity, float delta)
  void ApplyChange(Type type, float amount, float time)
  bool ShouldDie()
  MetabolismAttribute FindAttribute(Type type)
  void .ctor()
--------------------------------------------------
Класс: MetabolismAttribute
Наследуется от: object
Поля:
  float startMin
  float startMax
  float min
  float max
  float value
  float lastValue
  float lastGreatFraction
  float greatInterval
Свойства:
  float greatFraction
Методы:
  float get_greatFraction()
  void Reset()
  float Fraction()
  float InverseFraction()
  void Add(float val)
  void Subtract(float val)
  void Set(float val)
  void Increase(float fTarget)
  void MoveTowards(float fTarget, float fRate)
  bool HasChanged()
  bool HasGreatlyChanged()
  void SetValue(float newValue)
  void .ctor()
--------------------------------------------------
Класс: BaseResourceExtractor
Наследуется от: BaseCombatEntity
Поля:
  bool canExtractLiquid
  bool canExtractSolid
Свойства:
Методы:
  void ServerInit()
  void .ctor()
--------------------------------------------------
Класс: MiningQuarry
Наследуется от: BaseResourceExtractor
Поля:
  Animator beltAnimator
  Renderer beltScrollRenderer
  int scrollMatIndex
  float animatorSpeedChange
  float beltScrollSpeedMultiplier
  SoundPlayer[] onSounds
  float processRate
  float workToAdd
  float workPerFuel
  float pendingWork
  GameObjectRef bucketDropEffect
  GameObject bucketDropTransform
  ChildPrefab engineSwitchPrefab
  ChildPrefab hopperPrefab
  ChildPrefab fuelStoragePrefab
  QuarryType staticType
  bool isStatic
  ResourceDeposit _linkedDeposit
Свойства:
Методы:
  bool IsEngineOn()
  void SetOn(bool isOn)
  void EngineSwitch(bool isOn)
  void ServerInit()
  bool CanAcceptItem(Item item, int targetSlot)
  void UpdateStaticDeposit()
  void PostServerLoad()
  void SpawnChildEntities()
  void ProcessResources()
  bool FuelCheck()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: ResourceDepositManager
Наследуется от: BaseEntity
Поля:
  ResourceDepositManager _manager
  int resolution
  Dictionary`2<Vector2i, ResourceDeposit> _deposits
Свойства:
Методы:
  Vector2i GetIndexFrom(Vector3 pos)
  ResourceDepositManager Get()
  void .ctor()
  ResourceDeposit CreateFromPosition(Vector3 pos)
  ResourceDeposit GetFromPosition(Vector3 pos)
  ResourceDeposit GetOrCreate(Vector3 pos)
--------------------------------------------------
Класс: ResourceExtractorFuelStorage
Наследуется от: StorageContainer
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SurveyCharge
Наследуется от: TimedExplosive
Поля:
  GameObjectRef craterPrefab
  GameObjectRef craterPrefab_Oil
Свойства:
Методы:
  void Explode()
  void .ctor()
--------------------------------------------------
Класс: NPCAutoTurret
Наследуется от: AutoTurret
Поля:
  Transform centerMuzzle
  Transform muzzleLeft
  Transform muzzleRight
  bool useLeftMuzzle
  float sleeperhostiledelay
Свойства:
Методы:
  void ServerInit()
  bool HasAmmo()
  bool CheckPeekers()
  float TargetScanRate()
  bool InFiringArc(BaseCombatEntity potentialtarget)
  float GetMaxAngleForEngagement()
  bool HasFallbackWeapon()
  Transform GetCenterMuzzle()
  void FireGun(Vector3 targetPos, float aimCone, Transform muzzleToUse, BaseCombatEntity target)
  bool Ignore(BasePlayer player)
  bool IsEntityHostile(BaseCombatEntity ent)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TargetTrigger
Наследуется от: TriggerBase
Поля:
  Transform losEyes
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: BirthdayBalloonHandler
Наследуется от: MonoBehaviour
Поля:
  float checkOffset
  float checkRadius
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlackjackMachine
Наследуется от: BaseCardGameEntity
Поля:
  GameObjectRef mainScreenPrefab
  GameObjectRef smallScreenPrefab
  Transform mainScreenParent
  Transform[] smallScreenParents
  int _maxbet
  BlackjackController controller
  BlackjackMainScreenUI mainScreenUI
  BlackjackSmallScreenUI[] smallScreenUIs
Свойства:
  int maxbet
  float MaxStorageInteractionDist
Методы:
  int get_maxbet()
  void set_maxbet(int value)
  float get_MaxStorageInteractionDist()
  void InitShared()
  void Load(LoadInfo info)
  void PlayerStorageChanged()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CardGamePlayerStorage
Наследуется от: StorageContainer
Поля:
  EntityRef cardTableRef
Свойства:
Методы:
  BaseCardGameEntity GetCardGameEntity()
  void Load(LoadInfo info)
  void OnInventoryDirty()
  void Save(SaveInfo info)
  void SetCardTable(BaseCardGameEntity cardGameEntity)
  void .ctor()
--------------------------------------------------
Класс: CardGameSounds
Наследуется от: PrefabAttribute
Поля:
  SoundDefinition ChipsSfx
  SoundDefinition DrawSfx
  SoundDefinition PlaySfx
  SoundDefinition ShuffleSfx
  SoundDefinition WinSfx
  SoundDefinition LoseSfx
  SoundDefinition YourTurnSfx
  SoundDefinition CheckSfx
  SoundDefinition HitSfx
  SoundDefinition StandSfx
  SoundDefinition BetSfx
  SoundDefinition IncreaseBetSfx
  SoundDefinition DecreaseBetSfx
  SoundDefinition AllInSfx
  SoundDefinition UIInteractSfx
  SoundDefinition DealerCoolSfx
  SoundDefinition DealerHappySfx
  SoundDefinition DealerLoveSfx
  SoundDefinition DealerSadSfx
  SoundDefinition DealerShockedSfx
Свойства:
Методы:
  Type GetIndexedType()
  void PlaySound(SoundType sound, GameObject forGameObject)
  void .ctor()
--------------------------------------------------
Класс: CardTable
Наследуется от: BaseCardGameEntity
Поля:
  ViewModel viewModel
  PlayingCardImage[] tableCards
  Renderer[] tableCardBackings
  Canvas cardUICanvas
  Image[] tableCardImages
  Sprite blankCard
  ChipStack[] chipStacks
  ChipStack[] fillerStacks
Свойства:
  float MaxStorageInteractionDist
Методы:
  void Load(LoadInfo info)
  float get_MaxStorageInteractionDist()
  void .ctor()
--------------------------------------------------
Класс: CardTableSeat
Наследуется от: BaseChair
Поля:
  Transform CardsMesh
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayingCardsViewmodel
Наследуется от: MonoBehaviour
Поля:
  Canvas cardUICanvas
  Image cardA
  Image cardB
  Sprite blankCard
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecorDeployable
Наследуется от: DecayEntity
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DropUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void DropItems(ItemContainer container, Vector3 position)
  void .ctor()
--------------------------------------------------
Класс: EnvSync
Наследуется от: PointEntity
Поля:
  float syncInterval
  float syncIntervalInv
Свойства:
Методы:
  void ServerInit()
  void UpdateNetwork()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: F15
Наследуется от: BaseCombatEntity
Поля:
  float speed
  float defaultAltitude
  float altitude
  float altitudeLerpSpeed
  float turnRate
  float flybySoundLengthUntilMax
  SoundPlayer flybySound
  GameObject body
  float rollSpeed
  Vector3 movePosition
  GameObjectRef missilePrefab
  float nextMissileTime
  float blockTurningFor
  bool isRetiring
  CH47PathFinder pathFinder
  float turnSeconds
Свойства:
  float PositionTickRate
  bool PositionTickFixedTime
Методы:
  float get_PositionTickRate()
  bool get_PositionTickFixedTime()
  float GetNetworkTime()
  float GetDesiredAltitude()
  void ServerInit()
  void RetireToSunset()
  void PickNewPatrolPoint()
  void FixedUpdate()
  void DelayedDestroy()
  void .ctor()
--------------------------------------------------
Класс: IIgniteable
Поля:
Свойства:
Методы:
  void Ignite(Vector3 fromPos)
  bool CanIgnite()
--------------------------------------------------
Класс: ISplashable
Поля:
Свойства:
Методы:
  bool WantsSplash(ItemDefinition splashType, int amount)
  int DoSplash(ItemDefinition splashType, int amount)
--------------------------------------------------
Класс: LootContainer
Наследуется от: StorageContainer
Поля:
  bool destroyOnEmpty
  LootSpawn lootDefinition
  int maxDefinitionsToSpawn
  float minSecondsBetweenRefresh
  float maxSecondsBetweenRefresh
  bool initialLootSpawn
  float xpLootedScale
  float xpDestroyedScale
  bool BlockPlayerItemInput
  int scrapAmount
  string deathStat
  LootSpawnSlot[] LootSpawnSlots
  spawnType SpawnType
  bool FirstLooted
  ItemDefinition scrapDef
Свойства:
  bool shouldRefreshContents
Методы:
  bool get_shouldRefreshContents()
  void ResetState()
  void ServerInit()
  void PostServerLoad()
  void SpawnLoot()
  int ScoreForRarity(Rarity rarity)
  void PopulateLoot()
  void GenerateScrap()
  void DropBonusItems(BaseEntity initiator, ItemContainer container)
  bool OnStartBeingLooted(BasePlayer baseEntity)
  void PlayerStoppedLooting(BasePlayer player)
  void RemoveMe()
  bool ShouldDropItemsIndividually()
  void OnKilled(HitInfo info)
  void OnAttacked(HitInfo info)
  void InitShared()
  void .ctor()
--------------------------------------------------
Класс: m2bradleyAnimator
Наследуется от: MonoBehaviour
Поля:
  Animator m2Animator
  Material treadLeftMaterial
  Material treadRightMaterial
  Rigidbody mainRigidbody
  Transform turret
  Transform mainCannon
  Transform coaxGun
  Transform rocketsPitch
  Transform spotLightYaw
  Transform spotLightPitch
  Transform sideMG
  Transform[] sideguns
  Transform[] ShocksBones
  Transform[] ShockTraceLineBegin
  Vector3[] vecShocksOffsetPosition
  Transform targetTurret
  Transform targetSpotLight
  Transform[] targetSideguns
  Vector3 vecTurret
  Vector3 vecMainCannon
  Vector3 vecCoaxGun
  Vector3 vecRocketsPitch
  Vector3 vecSpotLightBase
  Vector3 vecSpotLight
  float sideMGPitchValue
  GameObject muzzleflashCannon
  GameObject muzzleflashCoaxGun
  GameObject muzzleflashSideMG
  GameObject[] muzzleflashRockets
  GameObject spotLightHaloSawnpoint
  GameObject[] muzzleflashSideguns
  GameObjectRef machineGunMuzzleFlashFX
  GameObjectRef mainCannonFireFX
  GameObjectRef rocketLaunchFX
  bool rocketsOpen
  Vector3[] vecSideGunRotation
  float treadConstant
  float wheelSpinConstant
  float sidegunsTurnSpeed
  float turretTurnSpeed
  float cannonPitchSpeed
  float rocketPitchSpeed
  float spotLightTurnSpeed
  float machineGunSpeed
  float wheelAngle
Свойства:
Методы:
  void Start()
  void Update()
  void AnimateWheelsTreads()
  void AdjustShocksHeight()
  void TrackTurret()
  void TrackSpotLight()
  void TrackSideGuns()
  void CalculateYawPitchOffset(Transform objectTransform, Vector3 vecStart, Vector3 vecEnd, Single& yaw, Single& pitch)
  float NormalizeYaw(float flYaw)
  void .ctor()
--------------------------------------------------
Класс: M2BradleyPhysics
Наследуется от: MonoBehaviour
Поля:
  m2bradleyAnimator m2Animator
  WheelCollider[] Wheels
  WheelCollider[] TurningWheels
  Rigidbody mainRigidbody
  Transform[] waypoints
  Vector3 currentWaypoint
  Vector3 nextWaypoint
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MapMarker
Наследуется от: BaseEntity
Поля:
  AppMarkerType appType
  GameObjectRef markerObj
  List`1<MapMarker> serverMapMarkers
Свойства:
Методы:
  void InitShared()
  void DestroyShared()
  AppMarker GetAppMarkerData()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PaintableItem
Наследуется от: MonoBehaviour
Поля:
  MeshPaintableSource PaintableSource
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AIHelicopterAnimation
Наследуется от: MonoBehaviour
Поля:
  PatrolHelicopterAI _ai
  float swayAmount
  float lastStrafeScalar
  float lastForwardBackScalar
  float degreeMax
  Vector3 lastPosition
  float oldMoveSpeed
  float smoothRateOfChange
  float flareAmount
Свойства:
Методы:
  void Awake()
  Vector3 GetMoveDirection()
  float GetMoveSpeed()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: HelicopterDebris
Наследуется от: ServerGib
Поля:
  ItemDefinition metalFragments
  ItemDefinition hqMetal
  ItemDefinition charcoal
  float massReductionScalar
  ResourceDispenser resourceDispenser
  float tooHotUntil
Свойства:
Методы:
  void ServerInit()
  void PhysicsInit(Mesh mesh)
  bool IsTooHot()
  void OnAttacked(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: HelicopterTurret
Наследуется от: MonoBehaviour
Поля:
  PatrolHelicopterAI _heliAI
  float fireRate
  float burstLength
  float timeBetweenBursts
  float maxTargetRange
  float loseTargetAfter
  Transform gun_yaw
  Transform gun_pitch
  Transform muzzleTransform
  bool left
  BaseCombatEntity _target
  float lastBurstTime
  float lastFireTime
  float lastSeenTargetTime
  bool targetVisible
Свойства:
Методы:
  void SetTarget(BaseCombatEntity newTarget)
  bool NeedsNewTarget()
  bool UpdateTargetFromList(List`1<targetinfo> newTargetList)
  bool TargetVisible()
  float TimeSinceTargetLastSeen()
  bool HasTarget()
  void ClearTarget()
  void TurretThink()
  void FireGun()
  Vector3 GetPositionForEntity(BaseCombatEntity potentialtarget)
  float AngleToTarget(BaseCombatEntity potentialtarget)
  bool InFiringArc(BaseCombatEntity potentialtarget)
  void UpdateTargetVisibility()
  void .ctor()
--------------------------------------------------
Класс: LockedByEntCrate
Наследуется от: LootContainer
Поля:
  GameObject lockingEnt
Свойства:
Методы:
  void SetLockingEnt(GameObject ent)
  void SetLocked(bool isLocked)
  void Think()
  void .ctor()
--------------------------------------------------
Класс: PatrolHelicopterAI
Наследуется от: BaseMonoBehaviour
Поля:
  Vector3 interestZoneOrigin
  Vector3 destination
  bool hasInterestZone
  float moveSpeed
  float maxSpeed
  float courseAdjustLerpTime
  Quaternion targetRotation
  Vector3 windVec
  Vector3 targetWindVec
  float windForce
  float windFrequency
  float targetThrottleSpeed
  float throttleSpeed
  float maxRotationSpeed
  float rotationSpeed
  float terrainPushForce
  float obstaclePushForce
  HelicopterTurret leftGun
  HelicopterTurret rightGun
  PatrolHelicopterAI heliInstance
  PatrolHelicopter helicopterBase
  aiState _currentState
  float oceanDepthTargetCutoff
  Vector3 _aimTarget
  bool movementLockingAiming
  bool hasAimTarget
  bool aimDoorSide
  Vector3 pushVec
  Vector3 _lastPos
  Vector3 _lastMoveDir
  bool isDead
  bool isRetiring
  float spawnTime
  float lastDamageTime
  List`1<targetinfo> _targetList
  float deathTimeout
  float destination_min_dist
  float currentOrbitDistance
  float currentOrbitTime
  bool hasEnteredOrbit
  float orbitStartTime
  float maxOrbitDuration
  bool breakingOrbit
  List`1<MonumentInfo> _visitedMonuments
  float arrivalTime
  GameObjectRef rocketProjectile
  GameObjectRef rocketProjectile_Napalm
  bool leftTubeFiredLast
  float lastRocketTime
  float timeBetweenRockets
  int numRocketsLeft
  int maxRockets
  Vector3 strafe_target_position
  bool puttingDistance
  float strafe_approach_range
  float strafe_firing_range
  bool useNapalm
  float lastNapalmTime
  float lastStrafeTime
  float _lastThinkTime
Свойства:
Методы:
  void Awake()
  void SetInitialDestination(Vector3 dest, float mapScaleDistance)
  void Retire()
  void SetIdealRotation(Quaternion newTargetRot, float rotationSpeedOverride)
  Quaternion GetYawRotationTo(Vector3 targetDest)
  void SetTargetDestination(Vector3 targetDest, float minDist, float minDistForFacingRotation)
  bool AtDestination()
  void MoveToDestination()
  void TerrainPushback()
  void UpdateRotation()
  void UpdateSpotlight()
  void Update()
  void WeakspotDamaged(weakspot weak, HitInfo info)
  void CriticalDamage()
  void DoMachineGuns()
  void FireGun(Vector3 targetPos, float aimCone, bool left)
  bool CanInterruptState()
  bool IsAlive()
  void DestroyMe()
  Vector3 GetLastMoveDir()
  Vector3 GetMoveDirection()
  float GetMoveSpeed()
  float GetMaxRotationSpeed()
  bool IsTargeting()
  void UpdateWind()
  void SetAimTarget(Vector3 aimTarg, bool isDoorSide)
  void ClearAimTarget()
  void UpdateTargetList()
  bool PlayerVisible(BasePlayer ply)
  void WasAttacked(HitInfo info)
  void State_Death_Think(float timePassed)
  void State_Death_Enter()
  void State_Death_Leave()
  void State_Idle_Think(float timePassed)
  void State_Idle_Enter()
  void State_Idle_Leave()
  void State_Move_Think(float timePassed)
  void State_Move_Enter(Vector3 newPos)
  void State_Move_Leave()
  void State_Orbit_Think(float timePassed)
  Vector3 GetOrbitPosition(float rate)
  void State_Orbit_Enter(float orbitDistance)
  void State_Orbit_Leave()
  Vector3 GetRandomPatrolDestination()
  void State_Patrol_Think(float timePassed)
  void State_Patrol_Enter()
  void State_Patrol_Leave()
  int ClipRocketsLeft()
  bool CanStrafe()
  bool CanUseNapalm()
  void State_Strafe_Enter(Vector3 strafePos, bool shouldUseNapalm)
  void State_Strafe_Think(float timePassed)
  bool ValidStrafeTarget(BasePlayer ply)
  void State_Strafe_Leave()
  void FireRocket()
  void InitializeAI()
  void OnCurrentStateExit()
  void ExitCurrentState()
  float GetTime()
  void AIThink()
  Vector3 GetRandomOffset(Vector3 origin, float minRange, float maxRange, float minHeight, float maxHeight)
  Vector3 GetAppropriatePosition(Vector3 origin, float minHeight, float maxHeight)
  float GetThrottleForDistance(float distToTarget)
  void .ctor()
--------------------------------------------------
Класс: ServerGib
Наследуется от: BaseCombatEntity
Поля:
  GameObject _gibSource
  string _gibName
  PhysicMaterial physicsMaterial
  bool useContinuousCollision
  MeshCollider meshCollider
  Rigidbody rigidBody
Свойства:
Методы:
  float BoundsPadding()
  List`1<ServerGib> CreateGibs(string entityToCreatePath, GameObject creator, GameObject gibSource, Vector3 inheritVelocity, float spreadVelocity)
  void Save(SaveInfo info)
  MeshCollider GetCollider()
  void ServerInit()
  void RemoveMe()
  void PhysicsInit(Mesh physicsMesh)
  void .ctor()
--------------------------------------------------
Класс: TimedUnlootableCrate
Наследуется от: LootContainer
Поля:
  bool unlootableOnSpawn
  float unlootableDuration
Свойства:
Методы:
  void ServerInit()
  void SetUnlootableFor(float duration)
  void MakeLootable()
  void .ctor()
--------------------------------------------------
Класс: SeekerTarget
Наследуется от: object
Поля:
  SeekerStrength strength
  ISeekerTargetOwner owner
  Dictionary`2<ISeekerTargetOwner, SeekerTarget> seekerTargets
Свойства:
Методы:
  bool IsValidTarget()
  bool TryGetPosition(Vector3& result)
  void SendOwnerMessage(BaseEntity from, string message)
  SeekerTarget GetBestForPoint(Vector3 from, Vector3 forward, float maxCone, float maxDist, SeekerStrength minStrength)
  void SetSeekerTarget(ISeekerTargetOwner toAdd, SeekerStrength strength)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SeekingServerProjectile
Наследуется от: ServerProjectile
Поля:
  float courseAdjustRate
  float maxTrackDistance
  float minLockDot
  float flareLockDot
  bool autoSeek
  float swimAfter
  float launchingDuration
  float armingDuration
  float velocityRampUpTime
  Vector3 armingFinalDir
  AnimationCurve airmingDirCurve
  AnimationCurve armingVelocityCurve
  float armingVelocity
  AnimationCurve velocityCurve
  float orphanedVectorChangeRate
  SeekerTarget lockedTarget
  float nextTargetUpdateTime
  Vector3 seekingDestination
  float launchTime
  Vector3 initialDir
  bool orphanedProjectile
  Vector3 orphanedTargetVector
  Vector3 orphanedRotationAxis
Свойства:
  float totalArmingPhaseDuration
Методы:
  float get_totalArmingPhaseDuration()
  void NotifyOrphaned()
  void UpdateTarget()
  Vector3 GetSeekingDestination()
  bool DoMovement()
  float TimeSinceArmed()
  float TimeSinceLaunch()
  void EnableBoosters()
  void DisableBoosters()
  void InitializeVelocity(Vector3 overrideVel)
  void PickNewRotationAxis()
  void .ctor()
--------------------------------------------------
Класс: SmokeBomb
Наследуется от: TimedExplosive
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SmokeGrenade
Наследуется от: TimedExplosive
Поля:
  float smokeDuration
  GameObjectRef smokeEffectPrefab
  GameObjectRef igniteSound
  SoundPlayer soundLoop
  GameObject smokeEffectInstance
  List`1<SmokeGrenade> activeGrenades
  float fieldMin
  float fieldMax
  bool killing
Свойства:
Методы:
  void ServerInit()
  void Explode()
  void CheckForWater()
  void FinishUp()
  void DestroyShared()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SphereEntity
Наследуется от: BaseEntity
Поля:
  float currentRadius
  float lerpRadius
  float lerpSpeed
Свойства:
Методы:
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void LerpRadiusTo(float radius, float speed)
  void UpdateScale()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: StaticRespawnArea
Наследуется от: SleepingBag
Поля:
  Transform[] spawnAreas
  bool allowHostileSpawns
Свойства:
Методы:
  bool ValidForPlayer(ulong playerID, bool ignoreTimers)
  void GetSpawnPos(Vector3& pos, Quaternion& rot)
  void SetUnlockTime(float newTime)
  float GetUnlockSeconds(ulong playerID)
  void .ctor()
--------------------------------------------------
Класс: SupplyDrop
Наследуется от: LootContainer
Поля:
  Flags FlagNightLight
  Flags ShowParachute
  GameObject ParachuteRoot
Свойства:
Методы:
  void ServerInit()
  void RemoveParachute()
  void MakeLootable()
  void OnCollisionEnter(Collision collision)
  void CheckNightLight()
  void OnFlagsChanged(Flags old, Flags next)
  void .ctor()
--------------------------------------------------
Класс: SupplySignal
Наследуется от: TimedExplosive
Поля:
  GameObjectRef smokeEffectPrefab
  GameObjectRef EntityToCreate
  GameObject smokeEffect
Свойства:
Методы:
  void Explode()
  void FinishUp()
  void .ctor()
--------------------------------------------------
Класс: TorpedoServerProjectile
Наследуется от: ServerProjectile
Поля:
  float minWaterDepth
  float shallowWaterInaccuracy
  float deepWaterInaccuracy
  float shallowWaterCutoff
Свойства:
  bool HasRangeLimit
  int mask
Методы:
  bool get_HasRangeLimit()
  int get_mask()
  bool DoMovement()
  void InitializeVelocity(Vector3 overrideVel)
  void .ctor()
--------------------------------------------------
Класс: TrainSignal
Наследуется от: BaseEntity
Поля:
  bool testFX
  VehicleLight redLight
  VehicleLight yellowLight
  VehicleLight greenLight
  Flags Flag_Red
  Flags Flag_Yellow
  Flags Flag_Green
  LightState lightState
  TrainSignal nextSignal
  TrainTrackSpline ourSpline
  float ourSplineDist
  List`1<SplineSection> ourSplines
  LightState prevTargetLightState
Свойства:
  float SplineDist
  bool HasNextSignal
Методы:
  void OnFlagsChanged(Flags old, Flags next)
  void SetLightState(LightState newState)
  float get_SplineDist()
  bool get_HasNextSignal()
  void ServerInit()
  void SetUpSignal()
  void DoServerDestroy()
  void RefreshLightState()
  bool HasOccupant()
  bool IsForward()
  void TestLights()
  MoveResult ProcessSplineSection(MoveResult result, MoveRequest request, TrainTrackSpline spline, float splineLength)
  void .ctor()
--------------------------------------------------
Класс: VendingMachineMapMarker
Наследуется от: MapMarker
Поля:
  string markerShopName
  VendingMachine server_vendingMachine
  VendingMachine client_vendingMachine
  NetworkableId client_vendingMachineNetworkID
  GameObjectRef clusterMarkerObj
Свойства:
Методы:
  void SetVendingMachine(VendingMachine vm, string shopName)
  void TryUpdatePosition()
  void Save(SaveInfo info)
  AppMarker GetAppMarkerData()
  void .ctor()
--------------------------------------------------
Класс: VisualStorageContainer
Наследуется от: LootContainer
Поля:
  VisualStorageContainerNode[] displayNodes
  DisplayModel[] displayModels
  Transform nodeParent
  GameObject defaultDisplayModel
Свойства:
Методы:
  void ServerInit()
  void OnItemAddedOrRemoved(Item item, bool added)
  void PopulateLoot()
  void ClearRigidBodies()
  void SetItemsVisible(bool vis)
  void ItemUpdateComplete()
  void UpdateVisibleItems(ItemContainer msg)
  void .ctor()
--------------------------------------------------
Класс: VisualStorageContainerNode
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: WaterBall
Наследуется от: BaseEntity
Поля:
  ItemDefinition liquidType
  int waterAmount
  GameObjectRef waterExplosion
  Collider waterCollider
  Rigidbody myRigidBody
Свойства:
Методы:
  void ServerInit()
  void Extinguish()
  void FixedUpdate()
  bool DoSplash(Vector3 position, float radius, ItemDefinition liquidDef, int amount)
  void OnCollisionEnter(Collision collision)
  void .ctor()
--------------------------------------------------
Класс: WeaponRackBatchAutoSet
Наследуется от: MonoBehaviour
Поля:
  Transform Anchor
  Object MountConfigScript
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WeaponRackGhost
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: WeaponRackSlot
Наследуется от: object
Поля:
  bool <Used>k__BackingField
  ItemDefinition <ItemDef>k__BackingField
  int <ClientItemID>k__BackingField
  ulong <ClientItemSkinID>k__BackingField
  ItemDefinition <AmmoItemDef>k__BackingField
  int <AmmoItemID>k__BackingField
  int <AmmoCount>k__BackingField
  int <AmmoMax>k__BackingField
  float <Condition>k__BackingField
  int <InventoryIndex>k__BackingField
  int <GridSlotIndex>k__BackingField
  int <Rotation>k__BackingField
  float <ReloadTime>k__BackingField
  AmmoTypes AmmoTypes
Свойства:
  bool Used
  ItemDefinition ItemDef
  int ClientItemID
  ulong ClientItemSkinID
  ItemDefinition AmmoItemDef
  int AmmoItemID
  int AmmoCount
  int AmmoMax
  float Condition
  int InventoryIndex
  int GridSlotIndex
  int Rotation
  float ReloadTime
Методы:
  bool get_Used()
  void set_Used(bool value)
  ItemDefinition get_ItemDef()
  void set_ItemDef(ItemDefinition value)
  int get_ClientItemID()
  void set_ClientItemID(int value)
  ulong get_ClientItemSkinID()
  void set_ClientItemSkinID(ulong value)
  ItemDefinition get_AmmoItemDef()
  void set_AmmoItemDef(ItemDefinition value)
  int get_AmmoItemID()
  void set_AmmoItemID(int value)
  int get_AmmoCount()
  void set_AmmoCount(int value)
  int get_AmmoMax()
  void set_AmmoMax(int value)
  float get_Condition()
  void set_Condition(float value)
  int get_InventoryIndex()
  void set_InventoryIndex(int value)
  int get_GridSlotIndex()
  void set_GridSlotIndex(int value)
  int get_Rotation()
  void set_Rotation(int value)
  float get_ReloadTime()
  void set_ReloadTime(float value)
  void SetUsed(bool flag)
  WeaponRackItem SaveToProto(Item item, WeaponRackItem proto)
  void InitFromProto(WeaponRackItem item)
  void SetItem(Item item, ItemDefinition updatedItemDef, int gridCellIndex, int rotation)
  void SetAmmoDetails(Item item)
  void ClearAmmoDetails()
  void .ctor()
--------------------------------------------------
Класс: WhitelistLootContainer
Наследуется от: LootContainer
Поля:
  Phrase CantLootToast
  List`1<ulong> whitelist
Свойства:
Методы:
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void MissionSetupPlayer(BasePlayer player)
  void AddToWhitelist(ulong userid)
  void RemoveFromWhitelist(ulong userid)
  bool PlayerOpenLoot(BasePlayer player, string panelToOpen, bool doPositionChecks)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WipeTimer
Наследуется от: BaseEntity
Поля:
  int wipeDayOfWeek
  float wipeHourOfDay
  string wipeTimezone
  long wipeUnixTimestampOverride
  string wipeCronOverride
  bool useWipeDayOverride
  DayOfWeek wipeDayOfWeekOverride
  WipeFrequency wipeFrequency
  int daysToAddTest
  float hoursToAddTest
  WipeTimer serverinstance
  WipeTimer clientinstance
  string oldTags
  string cronExprCacheKey
  CronExpression cronExprCache
  Nullable`1<ValueTuple`3<WipeFrequency, int, float>> cronCacheKey
  string cronCache
  string timezoneCacheKey
  TimeZoneInfo timezoneCache
Свойства:
Методы:
  void InitShared()
  void DestroyShared()
  void ServerInit()
  void RecalculateWipeFrequency()
  void TryAndUpdate()
  void Save(SaveInfo info)
  TimeSpan GetTimeSpanUntilWipe()
  long GetTicksUntilWipe()
  void PrintWipe(Arg arg)
  void PrintTimeZones(Arg arg)
  DateTimeOffset GetWipeTime(DateTimeOffset nowTime)
  CronExpression GetCronExpression(WipeFrequency frequency, int dayOfWeek, float hourOfDay)
  string GetCronString(WipeFrequency frequency, int dayOfWeek, float hourOfDay)
  string BuildCronString(WipeFrequency frequency, int dayOfWeek, float hourOfDay)
  TimeZoneInfo GetTimeZone()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WipeTimerScreen
Наследуется от: MonoBehaviour
Поля:
  Text timerText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseModifiers
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: BaseModifiers`1
Наследуется от: EntityComponent`1<T>
Поля:
  List`1<Modifier> All
  Dictionary`2<ModifierType, float> totalValues
  Dictionary`2<ModifierType, float> modifierVariables
  T owner
  bool dirty
  float timeSinceLastTick
  float lastTickTime
Свойства:
  int ActiveModifierCoount
Методы:
  int get_ActiveModifierCoount()
  void Add(List`1<ModifierDefintion> modDefs)
  void Add(ModifierDefintion def)
  void Add(Modifier modifier)
  bool CanAdd(Modifier modifier)
  int GetMaxModifiersForSourceType(ModifierSource source)
  int GetTypeSourceCount(ModifierType type, ModifierSource source)
  Modifier GetShortestLifeModifier(ModifierType type, ModifierSource source)
  void Remove(Modifier modifier)
  void RemoveAll()
  float GetValue(ModifierType type, float defaultValue)
  float GetVariableValue(ModifierType type, float defaultValue)
  void SetVariableValue(ModifierType type, float value)
  void RemoveVariable(ModifierType type)
  void OnDisable()
  void SetDirty(bool flag)
  void ServerInit(T owner)
  void ResetTicking()
  void ServerUpdate(BaseCombatEntity ownerEntity)
  void TickModifiers(BaseCombatEntity ownerEntity, float delta)
  void .ctor()
--------------------------------------------------
Класс: ModifierDefintion
Наследуется от: object
Поля:
  ModifierType type
  ModifierSource source
  float value
  float duration
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Modifier
Наследуется от: object
Поля:
  ModifierType <Type>k__BackingField
  ModifierSource <Source>k__BackingField
  float <Value>k__BackingField
  float <Duration>k__BackingField
  float <TimeRemaining>k__BackingField
  bool <Expired>k__BackingField
Свойства:
  ModifierType Type
  ModifierSource Source
  float Value
  float Duration
  float TimeRemaining
  bool Expired
Методы:
  ModifierType get_Type()
  void set_Type(ModifierType value)
  ModifierSource get_Source()
  void set_Source(ModifierSource value)
  float get_Value()
  void set_Value(float value)
  float get_Duration()
  void set_Duration(float value)
  float get_TimeRemaining()
  void set_TimeRemaining(float value)
  bool get_Expired()
  void set_Expired(bool value)
  void Init(ModifierType type, ModifierSource source, float value, float duration, float remaining)
  void Tick(BaseCombatEntity ownerEntity, float delta)
  Modifier Save()
  void Load(Modifier m)
  void .ctor()
--------------------------------------------------
Класс: ProjectileWeaponMod
Наследуется от: BaseEntity
Поля:
  GameObjectRef defaultSilencerEffect
  bool isSilencer
  Modifier repeatDelay
  Modifier projectileVelocity
  Modifier projectileDamage
  Modifier projectileDistance
  Modifier aimsway
  Modifier aimswaySpeed
  Modifier recoil
  Modifier sightAimCone
  Modifier hipAimCone
  bool isLight
  bool isMuzzleBrake
  bool isMuzzleBoost
  bool isScope
  float zoomAmountDisplayOnly
  Modifier magazineCapacity
  bool needsOnForEffects
  int burstCount
  float timeBetweenBursts
Свойства:
Методы:
  void ServerInit()
  void PostServerLoad()
  float Mult(BaseEntity parentEnt, Func`2<ProjectileWeaponMod, Modifier> selector_modifier, Func`2<Modifier, float> selector_value, float def)
  float Sum(BaseEntity parentEnt, Func`2<ProjectileWeaponMod, Modifier> selector_modifier, Func`2<Modifier, float> selector_value, float def)
  float Average(BaseEntity parentEnt, Func`2<ProjectileWeaponMod, Modifier> selector_modifier, Func`2<Modifier, float> selector_value, float def)
  float Max(BaseEntity parentEnt, Func`2<ProjectileWeaponMod, Modifier> selector_modifier, Func`2<Modifier, float> selector_value, float def)
  float Min(BaseEntity parentEnt, Func`2<ProjectileWeaponMod, Modifier> selector_modifier, Func`2<Modifier, float> selector_value, float def)
  IEnumerable`1<float> GetMods(BaseEntity parentEnt, Func`2<ProjectileWeaponMod, Modifier> selector_modifier, Func`2<Modifier, float> selector_value)
  bool HasBrokenWeaponMod(BaseEntity parentEnt)
  void .ctor()
--------------------------------------------------
Класс: ExcavatorEffects
Наследуется от: MonoBehaviour
Поля:
  ExcavatorEffects instance
  ParticleSystemContainer[] miningParticles
  SoundPlayer[] miningSounds
  SoundFollowCollider[] beltSounds
  SoundPlayer[] miningStartSounds
  GameObject[] ambientMetalRattles
  bool wasMining
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ExcavatorEngineSounds
Наследуется от: MonoBehaviour
Поля:
  SoundPlayer[] engineStartClunks
Свойства:
Методы:
  void PlayStartClunks()
  void .ctor()
--------------------------------------------------
Класс: ExcavatorOutputPile
Наследуется от: StorageContainer
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ExcavatorServerEffects
Наследуется от: MonoBehaviour
Поля:
  ExcavatorServerEffects instance
  TriggerBase[] miningTriggers
Свойства:
Методы:
  void Awake()
  void OnDestroy()
  void SetMining(bool isMining, bool force)
  void .ctor()
--------------------------------------------------
Класс: ExcavatorYawSounds
Наследуется от: MonoBehaviour
Поля:
  SoundPlayer[] miningStartClunks
Свойства:
Методы:
  void PlayStartClunks()
  void .ctor()
--------------------------------------------------
Класс: LargeShredder
Наследуется от: BaseEntity
Поля:
  Transform shredRail
  Transform shredRailStartPos
  Transform shredRailEndPos
  Vector3 shredRailStartRotation
  Vector3 shredRailEndRotation
  LargeShredderTrigger trigger
  float shredDurationRotation
  float shredDurationPosition
  float shredSwayAmount
  float shredSwaySpeed
  BaseEntity currentlyShredding
  GameObject[] shreddingWheels
  float shredRotorSpeed
  GameObjectRef shredSoundEffect
  Transform resourceSpawnPoint
  Quaternion entryRotation
  string SHRED_STAT
  bool isShredding
  float shredStartTime
Свойства:
Методы:
  void OnEntityEnteredTrigger(BaseEntity ent)
  void CreateShredResources()
  void UpdateBonePosition(float delta)
  void SetShredding(bool isShredding)
  void FireShredEffect()
  void ServerUpdate()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: LargeShredderTrigger
Наследуется от: TriggerBase
Поля:
  LargeShredder shredder
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: LightListener
Наследуется от: BaseEntity
Поля:
  string onMessage
  string offMessage
  LightGroupAtTime onLights
  LightGroupAtTime offLights
Свойства:
Методы:
  void OnEntityMessage(BaseEntity from, string msg)
  void .ctor()
--------------------------------------------------
Класс: FruitScale
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void SetProgress(float progress)
  void .ctor()
--------------------------------------------------
Класс: LifeScale
Наследуется от: BaseMonoBehaviour
Поля:
  bool initialized
  Vector3 initialScale
  Vector3 finalScale
  Vector3 targetLerpScale
  Action updateScaleAction
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void SetProgress(float progress)
  void Init()
  void UpdateScale()
  void .ctor()
--------------------------------------------------
Класс: MaterialColorLerp
Наследуется от: MonoBehaviour
Поля:
  Color startColor
  Color endColor
  Color currentColor
  float delta
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlantProperties
Наследуется от: ScriptableObject
Поля:
  Phrase Description
  GrowableGeneProperties Genes
  Stage[] stages
  AnimationCurve timeOfDayHappiness
  AnimationCurve temperatureHappiness
  AnimationCurve temperatureWaterRequirementMultiplier
  AnimationCurve fruitVisualScaleCurve
  int MaxSeasons
  float WaterIntake
  float OptimalLightQuality
  float OptimalWaterQuality
  float OptimalGroundQuality
  float OptimalTemperatureQuality
  Option pickOption
  Option pickAllOption
  Option eatOption
  ItemDefinition pickupItem
  Option cloneOption
  Option cloneAllOption
  Option removeDyingOption
  Option removeDyingAllOption
  ItemDefinition removeDyingItem
  GameObjectRef removeDyingEffect
  int pickupMultiplier
  GameObjectRef pickEffect
  int maxHarvests
  bool disappearAfterHarvest
  GameObjectRef CrossBreedEffect
  ItemDefinition SeedItem
  ItemDefinition CloneItem
  int BaseCloneCount
  int BaseMarketValue
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlantSkin
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlatformEntity
Наследуется от: BaseEntity
Поля:
  float movementSpeed
  float rotationSpeed
  float radius
  Vector3 targetPosition
  Quaternion targetRotation
Свойства:
Методы:
  void FixedUpdate()
  float GetNetworkTime()
  void .ctor()
--------------------------------------------------
Класс: PlayerAnimationEvents
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayerBelt
Наследуется от: object
Поля:
  int ClientAutoSelectSlot
  UInt32 ClientAutoSeletItemUID
  int SelectedSlot
  BasePlayer player
Свойства:
  int MaxBeltSlots
Методы:
  int get_MaxBeltSlots()
  void .ctor(BasePlayer player)
  void DropActive(Vector3 position, Vector3 velocity)
  Item GetItemInSlot(int slot)
  void .cctor()
--------------------------------------------------
Класс: PlayerBlueprints
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  SteamInventory steamInventory
Свойства:
Методы:
  void Reset()
  void UnlockAll()
  bool IsUnlocked(ItemDefinition itemDef)
  void Unlock(ItemDefinition itemDef)
  bool HasUnlocked(ItemDefinition targetItem)
  bool CanCraft(int itemid, int skinItemId, ulong playerId)
  bool CheckSkinOwnership(int skinItemId, ulong playerId)
  void .ctor()
--------------------------------------------------
Класс: PlayerEyes
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  Vector3 EyeOffset
  Vector3 DuckOffset
  Vector3 CrawlOffset
  Vector3 ParachuteOffset
  Vector3 thirdPersonSleepingOffset
  LazyAimProperties defaultLazyAim
  Vector3 viewOffset
  Quaternion <bodyRotation>k__BackingField
Свойства:
  Vector3 worldMountedPosition
  Vector3 worldStandingPosition
  Vector3 worldCrouchedPosition
  Vector3 worldCrawlingPosition
  Vector3 position
  Vector3 BodyLeanOffset
  Vector3 center
  Vector3 offset
  Quaternion rotation
  Quaternion bodyRotation
  Quaternion parentRotation
Методы:
  Vector3 get_worldMountedPosition()
  Vector3 get_worldStandingPosition()
  Vector3 get_worldCrouchedPosition()
  Vector3 get_worldCrawlingPosition()
  Vector3 get_position()
  Vector3 get_BodyLeanOffset()
  Vector3 get_center()
  Vector3 get_offset()
  Quaternion get_rotation()
  void set_rotation(Quaternion value)
  Quaternion get_bodyRotation()
  void set_bodyRotation(Quaternion value)
  Quaternion get_parentRotation()
  void NetworkUpdate(Quaternion rot)
  Vector3 MovementForward()
  Vector3 MovementRight()
  Ray BodyRay()
  Vector3 BodyForward()
  Vector3 BodyRight()
  Vector3 BodyUp()
  Ray HeadRay()
  Vector3 HeadForward()
  Vector3 HeadRight()
  Vector3 HeadUp()
  Quaternion GetLookRotation()
  Quaternion GetAimRotation()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlayerInput
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  InputState state
  bool hadInputBuffer
Свойства:
Методы:
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: PlayerModel
Наследуется от: ListComponent`1<PlayerModel>
Поля:
  int speed
  int acceleration
  int rotationYaw
  int forward
  int right
  int up
  int ducked
  int grounded
  int crawling
  int waterlevel
  int attack
  int attack_alt
  int deploy
  int turnOn
  int turnOff
  int reload
  int throwWeapon
  int holster
  int aiming
  int onLadder
  int posing
  int poseType
  int relaxGunPose
  int vehicle_aim_yaw
  int vehicle_aim_speed
  int usePoseTransition
  int onPhone
  int leftFootIK
  int rightFootIK
  int vehicleSteering
  int sitReaction
  int forwardReaction
  int rightReaction
  int ladderType
  int hasParachute
  int nonGroundedTime
  int deployParachuteTrigger
  BoxCollider collision
  GameObject censorshipCube
  GameObject censorshipCubeBreasts
  GameObject jawBone
  GameObject neckBone
  GameObject headBone
  EyeController eyeController
  EyeBlink blinkController
  Transform[] SpineBones
  Transform leftFootBone
  Transform rightFootBone
  Transform leftHandPropBone
  Transform rightHandPropBone
  Vector3 rightHandTarget
  Vector3 leftHandTargetPosition
  Quaternion leftHandTargetRotation
  Vector3 rightHandTargetPosition
  Quaternion rightHandTargetRotation
  float steeringTargetDegrees
  Vector3 rightFootTargetPosition
  Quaternion rightFootTargetRotation
  Vector3 leftFootTargetPosition
  Quaternion leftFootTargetRotation
  RuntimeAnimatorController CinematicAnimationController
  Avatar DefaultAvatar
  Avatar CinematicAvatar
  RuntimeAnimatorController DefaultHoldType
  RuntimeAnimatorController SleepGesture
  RuntimeAnimatorController CrawlToIncapacitatedGesture
  RuntimeAnimatorController StandToIncapacitatedGesture
  RuntimeAnimatorController CurrentGesture
  SkinSetCollection MaleSkin
  SkinSetCollection FemaleSkin
  SubsurfaceProfile subsurfaceProfile
  float voiceVolume
  float skinColor
  float skinNumber
  float meshNumber
  float hairNumber
  int skinType
  MovementSounds movementSounds
  bool showSash
  int tempPoseType
  UInt32 underwearSkin
  ulong <overrideSkinSeed>k__BackingField
  Quaternion <AimAngles>k__BackingField
  Quaternion <LookAngles>k__BackingField
  Transform[] Shoulders
  Transform[] AdditionalSpineBones
Свойства:
  ulong overrideSkinSeed
  bool IsFemale
  SkinSetCollection SkinSet
  Quaternion AimAngles
  Quaternion LookAngles
Методы:
  Vector3 GetFlat(Vector3 dir)
  void RebuildAll()
  ulong get_overrideSkinSeed()
  void set_overrideSkinSeed(ulong value)
  bool get_IsFemale()
  SkinSetCollection get_SkinSet()
  Quaternion get_AimAngles()
  void set_AimAngles(Quaternion value)
  Quaternion get_LookAngles()
  void set_LookAngles(Quaternion value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlayerModelCinematicList
Наследуется от: PrefabAttribute
Поля:
  PlayerModelCinematicAnimation[] Animations
Свойства:
Методы:
  Type GetIndexedType()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: PlayerModelReactionEnded
Наследуется от: StateMachineBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayerNameTag
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup canvasGroup
  Text text
  Gradient color
  float minDistance
  float maxDistance
  Vector3 positionOffset
  Transform parentBone
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: nametags
Наследуется от: ConsoleSystem
Поля:
  bool enabled
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlayerVoiceRecorder
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayerVoiceSpeaker
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  VoiceProcessor voiceProcessor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VoiceProcessor
Наследуется от: EntityComponentBase
Поля:
  AudioSource mouthSpeaker
  PlayerVoiceSpeaker playerSpeaker
  float volumeMultiplier
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LocalPlayer
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: BaseMovement
Наследуется от: MonoBehaviour
Поля:
  bool adminCheat
  float adminSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayerWalkMovement
Наследуется от: BaseMovement
Поля:
  float WaterLevelHead
  float WaterLevelNeck
  PhysicMaterial zeroFrictionMaterial
  PhysicMaterial highFrictionMaterial
  float capsuleHeight
  float capsuleCenter
  float capsuleHeightDucked
  float capsuleCenterDucked
  float capsuleHeightCrawling
  float capsuleCenterCrawling
  float gravityTestRadius
  float gravityMultiplier
  float gravityMultiplierSwimming
  float maxAngleWalking
  float maxAngleClimbing
  float maxAngleSliding
  float maxStepHeight
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CombatLog
Наследуется от: object
Поля:
  string selfname
  string noname
  BasePlayer player
  Queue`1<Event> storage
  float <LastActive>k__BackingField
  Dictionary`2<ulong, Queue`1<Event>> players
Свойства:
  float LastActive
Методы:
  float get_LastActive()
  void set_LastActive(float value)
  void .ctor(BasePlayer player)
  void Init()
  void Save()
  void LogInvalid(BasePlayer player, AttackEntity weapon, string description)
  void LogInvalid(HitInfo info, string description)
  void LogAttack(HitInfo info, string description, float oldHealth)
  void Log(BaseEntity attacker, AttackEntity weapon, BaseCombatEntity hitEntity, string description, Projectile projectilePrefab, int projectileId, float healthOld, HitInfo hitInfo)
  void Log(Event val)
  string Get(int count, NetworkableId filterByAttacker, bool json, bool isAdmin, ulong requestingUser)
  Queue`1<Event> Get(ulong id)
  void .cctor()
--------------------------------------------------
Класс: Stats
Наследуется от: Enum
Поля:
  int value__
  Stats Steam
  Stats Server
  Stats Life
  Stats All
Свойства:
Методы:
--------------------------------------------------
Класс: PlayerStatistics
Наследуется от: object
Поля:
  SteamStatistics steam
  ServerStatistics server
  CombatLog combat
  BasePlayer forPlayer
  TimeSince lastSteamSave
Свойства:
Методы:
  void .ctor(BasePlayer player)
  void Init()
  void Save(bool forceSteamSave)
  void Add(string name, int val, Stats stats)
--------------------------------------------------
Класс: ServerStatistics
Наследуется от: object
Поля:
  BasePlayer player
  Storage storage
  Dictionary`2<ulong, Storage> players
Свойства:
Методы:
  void .ctor(BasePlayer player)
  void Init()
  void Save()
  void Add(string name, int val)
  Storage Get(ulong id)
  void .cctor()
--------------------------------------------------
Класс: SteamStatistics
Наследуется от: object
Поля:
  BasePlayer player
  Dictionary`2<string, int> intStats
  Task refresh
Свойства:
Методы:
  void .ctor(BasePlayer p)
  void Init()
  void Save()
  void Add(string name, int var)
  int Get(string name)
--------------------------------------------------
Класс: PlayerCorpse
Наследуется от: LootableCorpse
Поля:
  Buoyancy buoyancy
  Flags Flag_Buoyant
  UInt32 underwearSkin
Свойства:
Методы:
  bool IsBuoyant()
  bool OnStartBeingLooted(BasePlayer baseEntity)
  void ServerInit()
  void BuoyancyChanged(bool isSubmerged)
  void Save(SaveInfo info)
  string Categorize()
  void .ctor()
--------------------------------------------------
Класс: PointEntity
Наследуется от: BaseEntity
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PropSway
Наследуется от: MonoBehaviour
Поля:
  Transform pivotRotator
  float swaySpeed
  float swayDistance
  float lerpSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BushEntity
Наследуется от: BaseEntity
Поля:
  GameObjectRef prefab
  bool globalBillboard
Свойства:
Методы:
  void InitShared()
  void ServerInit()
  void DoServerDestroy()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: RandomItemDispenser
Наследуется от: PrefabAttribute
Поля:
  RandomItemChance[] Chances
  bool OnlyAwardOne
Свойства:
Методы:
  Type GetIndexedType()
  void DistributeItems(BasePlayer forPlayer, Vector3 distributorPosition)
  bool TryAward(RandomItemChance itemChance, BasePlayer forPlayer, Vector3 distributorPosition)
  void .ctor()
--------------------------------------------------
Класс: ResourceEntity
Наследуется от: BaseEntity
Поля:
  float startHealth
  ProtectionProperties baseProtection
  float health
  ResourceDispenser resourceDispenser
  bool isKilled
Свойства:
Методы:
  void Load(LoadInfo info)
  void InitShared()
  void ServerInit()
  void Save(SaveInfo info)
  float MaxHealth()
  float Health()
  void OnHealthChanged()
  void OnAttacked(HitInfo info)
  void OnKilled(HitInfo info)
  float BoundsPadding()
  void .ctor()
--------------------------------------------------
Класс: StagedResourceBreakEffect
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TreeMarkerData
Наследуется от: PrefabAttribute
Поля:
  GenerationArc[] GenerationArcs
  MarkerLocation[] Markers
  Vector3 GenerationStartPoint
  float GenerationRadius
  float MaxY
  float MinY
  bool ProcessAngleChecks
Свойства:
Методы:
  Type GetIndexedType()
  Vector3 GetNearbyPoint(Vector3 point, Int32& ignoreIndex, Vector3& normal)
  void .ctor()
--------------------------------------------------
Класс: RoadFlare
Наследуется от: TimedExplosive
Поля:
Свойства:
Методы:
  void ServerInit()
  void OnCollision(Collision collision, BaseEntity hitEntity)
  bool IsValidHomingTarget()
  void DoServerDestroy()
  void .ctor()
--------------------------------------------------
Класс: SeasonalTimedExplosive
Наследуется от: TimedExplosive
Поля:
  RandomRendererEnable randomRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerProjectile
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  Vector3 initialVelocity
  float drag
  float gravityModifier
  float speed
  float scanRange
  Vector3 swimScale
  Vector3 swimSpeed
  float radius
  bool impacted
  float swimRandom
  Vector3 <CurrentVelocity>k__BackingField
Свойства:
  bool HasRangeLimit
  int mask
  Vector3 CurrentVelocity
Методы:
  bool get_HasRangeLimit()
  float GetMaxRange(float maxFuseTime)
  int get_mask()
  Vector3 get_CurrentVelocity()
  void set_CurrentVelocity(Vector3 value)
  void FixedUpdate()
  bool ShouldSwim()
  bool DoMovement()
  bool IsAValidHit(BaseEntity hitEnt)
  void InitializeVelocity(Vector3 overrideVel)
  void .ctor()
--------------------------------------------------
Класс: StabilityEntity
Наследуется от: DecayEntity
Поля:
  bool grounded
  float cachedStability
  int cachedDistanceFromGround
  List`1<Support> supports
  int stabilityStrikes
  bool dirty
  StabilityCheckWorkQueue stabilityCheckQueue
  UpdateSurroundingsQueue updateSurroundingsQueue
Свойства:
Методы:
  void ResetState()
  void InitializeSupports()
  int DistanceFromGround(StabilityEntity ignoreEntity)
  float SupportValue(StabilityEntity ignoreEntity)
  int CachedDistanceFromGround(StabilityEntity ignoreEntity)
  float CachedSupportValue(StabilityEntity ignoreEntity)
  void StabilityCheck()
  void UpdateStability()
  void UpdateSurroundingEntities()
  void UpdateConnectedEntities()
  void OnPhysicsNeighbourChanged()
  void DebugNudge()
  void ServerInit()
  void DoServerDestroy()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TimedExplosive
Наследуется от: BaseEntity
Поля:
  float timerAmountMin
  float timerAmountMax
  float minExplosionRadius
  float explosionRadius
  bool explodeOnContact
  bool canStick
  bool onlyDamageParent
  bool BlindAI
  float aiBlindDuration
  float aiBlindRange
  GameObjectRef explosionEffect
  GameObjectRef underwaterExplosionEffect
  float underwaterExplosionDepth
  GameObjectRef watersurfaceExplosionEffect
  MinMax watersurfaceExplosionDepth
  GameObjectRef stickEffect
  GameObjectRef bounceEffect
  bool explosionUsesForward
  bool waterCausesExplosion
  List`1<DamageTypeEntry> damageTypes
  float lastBounceTime
  bool hadRB
  float rbMass
  float rbDrag
  float rbAngularDrag
  CollisionDetectionMode rbCollisionMode
  int parentOnlySplashDamage
  int fullSplashDamage
  BaseEntity[] queryResults
Свойства:
  bool AlwaysRunWaterCheck
Методы:
  void SetDamageScale(float scale)
  float GetNetworkTime()
  void ServerInit()
  bool get_AlwaysRunWaterCheck()
  void WaterCheck()
  void SetFuse(float fuseLength)
  float GetRandomTimerTime()
  void ProjectileImpact(RaycastHit info, Vector3 rayOrigin)
  void Explode()
  void Explode(Vector3 explosionFxPos)
  Vector3 ExplosionCenter()
  void BlindAnyAI()
  void OnCollision(Collision collision, BaseEntity hitEntity)
  bool CanStickTo(BaseEntity entity)
  void DoBounceEffect()
  void DoCollisionStick(Collision collision, BaseEntity ent)
  void SetMotionEnabled(bool wantsMotion)
  bool IsStuck()
  void DoStick(Vector3 position, Vector3 normal, BaseEntity ent, Collider collider)
  void UnStick()
  void OnParentRemoved()
  void Save(SaveInfo info)
  void PostServerLoad()
  void Load(LoadInfo info)
  void SetCollisionEnabled(bool wantsCollision)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseTrap
Наследуется от: DecayEntity
Поля:
Свойства:
Методы:
  void ObjectEntered(GameObject obj)
  void Arm()
  void OnEmpty()
  void .ctor()
--------------------------------------------------
Класс: BaseTrapTrigger
Наследуется от: TriggerBase
Поля:
  BaseTrap _trap
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjectAdded(GameObject obj, Collider col)
  void OnEmpty()
  void .ctor()
--------------------------------------------------
Класс: BearTrapTrigger
Наследуется от: BaseTrapTrigger
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SurvivalFishTrap
Наследуется от: WildlifeTrap
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TrappableWildlife
Наследуется от: ScriptableObject
Поля:
  GameObjectRef worldObject
  ItemDefinition inventoryObject
  int minToCatch
  int maxToCatch
  List`1<BaitType> baitTypes
  int caloriesForInterest
  float successRate
  float xpScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WildlifeTrap
Наследуется от: StorageContainer
Поля:
  float tickRate
  GameObjectRef trappedEffect
  float trappedEffectRepeatRate
  float trapSuccessRate
  List`1<ItemDefinition> ignoreBait
  List`1<WildlifeWeight> targetWildlife
Свойства:
Методы:
  void ResetState()
  void SetTrapActive(bool trapOn)
  int CalculateBaitCalories(Item bait)
  int GetBaitCalories()
  void DestroyRandomFoodItem()
  void UseBaitCalories(int numToUse)
  int GetItemCalories(Item item)
  void TrapThink()
  void TrapWildlife(TrappableWildlife trapped)
  void ClearTrap()
  bool HasBait()
  void PlayerStoppedLooting(BasePlayer player)
  bool OnStartBeingLooted(BasePlayer baseEntity)
  TrappableWildlife GetRandomWildlife()
  void ServerInit()
  bool CanAcceptItem(Item item, int slot)
  bool HasCatch()
  bool IsTrapActive()
  void .ctor()
--------------------------------------------------
Класс: BaseAimable
Наследуется от: BaseVehicleMountPoint
Поля:
  Transform aimBase
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseChair
Наследуется от: BaseMountable
Поля:
Свойства:
Методы:
  float GetComfort()
  void .ctor()
--------------------------------------------------
Класс: BaseSaddle
Наследуется от: BaseMountable
Поля:
  BaseRidableAnimal animal
Свойства:
Методы:
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void SetAnimal(BaseRidableAnimal newAnimal)
  void .ctor()
--------------------------------------------------
Класс: BaseVehicleMountPoint
Наследуется от: BaseMountable
Поля:
Свойства:
Методы:
  bool DirectlyMountable()
  BaseVehicle VehicleParent()
  bool BlocksWaterFor(BasePlayer player)
  float WaterFactorForPlayer(BasePlayer player)
  float AirFactor()
  void .ctor()
--------------------------------------------------
Класс: BaseVehicleSeat
Наследуется от: BaseVehicleMountPoint
Поля:
  float mountedAnimationSpeed
  bool sendClientInputToVehicleParent
  bool forcePlayerModelUpdate
  bool giveCrosshair
  bool canTeamInteract
Свойства:
Методы:
  void ScaleDamageForPlayer(BasePlayer player, HitInfo info)
  void MounteeTookDamage(BasePlayer mountee, HitInfo info)
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void LightToggle(BasePlayer player)
  void SwitchParent(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: BasicCar
Наследуется от: BaseVehicle
Поля:
  VehicleWheel[] wheels
  float brakePedal
  float gasPedal
  float steering
  Transform centerOfMass
  Transform steeringWheel
  float motorForceConstant
  float brakeForceConstant
  float GasLerpTime
  float SteeringLerpTime
  Transform driverEye
  GameObjectRef chairRef
  Transform chairAnchorTest
  SoundPlayer idleLoopPlayer
  Transform engineOffset
  SoundDefinition engineSoundDef
  bool chairtest
  float throttle
  float brake
  bool lightsOn
Свойства:
Методы:
  float MaxVelocity()
  Vector3 EyePositionForPlayer(BasePlayer player, Quaternion viewRot)
  void ServerInit()
  void SpawnChairTest()
  void VehicleFixedUpdate()
  void DoSteering()
  void ConvertInputToThrottle()
  void ApplyForceAtWheels()
  void NoDriverInput()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void DriverInput(InputState inputState, BasePlayer player)
  void LightToggle(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: BaseBoat
Наследуется от: BaseVehicle
Поля:
  float engineThrust
  float steeringScale
  Transform thrustPoint
  Transform centerOfMass
  Buoyancy buoyancy
  bool preventDecayIndoors
  bool applyCorrectionForces
  Transform[] planeFitPoints
  Vector3 inAirPID
  float inAirDesiredPitch
  Vector3 wavePID
  MinMax correctionRange
  float correctionSpringForce
  float correctionSpringDamping
  Vector3[] worldAnchors
  PidQuaternionController pidController
  bool generate_paths
  bool do_shore_drift
  int secondsUntilShoreDrift
  int secondsBetweenShoreDrift
  float drift_speed
  float gasPedal
  float steering
  TimeSince shoreDriftTimer
  string lastDriftCheckStatus
Свойства:
Методы:
  int seconds_until_shore_drift(Arg arg)
  int seconds_between_shore_drift(Arg arg)
  bool InDryDock()
  float MaxVelocity()
  void ServerInit()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  void DriverInput(InputState inputState, BasePlayer player)
  void OnPoolDestroyed()
  void WakeUp()
  void OnServerWake()
  bool EngineOn()
  void VehicleFixedUpdate()
  void ApplyCorrectionForces()
  void WaterVehicleDecay(BaseCombatEntity entity, float decayTickRate, float timeSinceLastUsed, float outsideDecayMinutes, float deepWaterDecayMinutes, float decayStartDelayMinutes, bool preventDecayIndoors)
  void CheckDriftToShore()
  void GoToSleep()
  bool AnyPlayersOnBoat()
  string GetDriftStatus()
  void UpdateShoreDriftInvokeOnAll()
  void UpdateShoreDriftInvoke()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  bool EngineInWater()
  float WaterFactorForPlayer(BasePlayer player)
  float GetWaterDepth(Vector3 pos)
  List`1<Vector3> GenerateOceanPatrolPath(float minDistanceFromShore, float minWaterDepth)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Buoyancy
Наследуется от: ListComponent`1<Buoyancy>
Поля:
  BuoyancyPoint[] points
  GameObjectRef[] waterImpacts
  Rigidbody rigidBody
  float buoyancyScale
  bool doEffects
  float flowMovementScale
  float requiredSubmergedFraction
  bool useUnderwaterDrag
  float underwaterDrag
  float flatWaterLerp
  float <timeOutOfWater>k__BackingField
  Action`1<bool> SubmergedChanged
  BaseEntity forEntity
  float submergedFraction
  WhenDisabled whenDisabled
  BuoyancyPointData[] pointData
  Vector2[] pointPositionArray
  Vector2[] pointPositionUVArray
  Vector3[] pointShoreVectorArray
  Single[] pointTerrainHeightArray
  Single[] pointWaterHeightArray
  float defaultDrag
  float defaultAngularDrag
  float timeInWater
  Nullable`1<float> ArtificialHeight
  BaseVehicle forVehicle
Свойства:
  float timeOutOfWater
Методы:
  float get_timeOutOfWater()
  void set_timeOutOfWater(float value)
  string DefaultWaterImpact()
  void Awake()
  void Sleep()
  void Wake()
  void CheckSleepState()
  void DoCycle()
  void Cycle()
  Vector3 GetFlowDirection(Vector2 posUV)
  void EnsurePointsInitialized()
  void BuoyancyFixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: BuoyancyPoint
Наследуется от: MonoBehaviour
Поля:
  float buoyancyForce
  float size
  float waveScale
  float waveFrequency
  bool doSplashEffects
  float randomOffset
  bool wasSubmergedLastFrame
  float nexSplashTime
  Color gizmoColour
Свойства:
Методы:
  void Start()
  void OnDrawGizmos()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: KayakSeat
Наследуется от: BaseVehicleSeat
Поля:
  ItemDefinition PaddleItem
Свойства:
Методы:
  void OnPlayerMounted()
  void OnPlayerDismounted(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: RHIBAIController
Наследуется от: FacepunchBehaviour
Поля:
  List`1<Vector3> nodes
Свойства:
Методы:
  void SetupPatrolPath()
  float GetWaterDepth(Vector3 pos)
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: TugboatInteriorSoundTrigger
Наследуется от: MonoBehaviour
Поля:
  TugboatSounds tugboatSounds
  bool bridge
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TugboatSounds
Наследуется от: MonoBehaviour
Поля:
  Tugboat tugboat
  float roughHalfWidth
  float roughHalfLength
  float soundCullDistanceSq
  SoundDefinition engineLoopDef
  Sound engineLoop
  Modulator engineGainMod
  Modulator enginePitchMod
  SoundDefinition engineStartDef
  SoundDefinition engineStartBridgeDef
  SoundDefinition engineStopDef
  SoundDefinition engineStopBridgeDef
  float engineGainChangeRate
  float enginePitchChangeRate
  Transform engineTransform
  Transform bridgeControlsTransform
  SoundDefinition waterIdleDef
  SoundDefinition waterSideMovementSlowDef
  SoundDefinition waterSideMovementFastDef
  SoundDefinition waterSternMovementDef
  SoundDefinition waterInteriorIdleDef
  SoundDefinition waterInteriorDef
  AnimationCurve waterMovementGainCurve
  float waterMovementGainChangeRate
  AnimationCurve waterDistanceGainCurve
  Sound leftWaterSound
  Modulator leftWaterGainMod
  Sound rightWaterSound
  Modulator rightWaterGainMod
  Sound sternWaterSound
  Modulator sternWaterGainMod
  Transform wakeTransform
  Vector3 sideSoundLineStern
  Vector3 sideSoundLineBow
  Sound ambientIdleSound
  SoundDefinition ambientActiveLoopDef
  Sound ambientActiveSound
  SoundDefinition hullGroanDef
  float hullGroanCooldown
  float lastHullGroan
  SoundDefinition chainRattleDef
  float chainRattleCooldown
  Transform[] chainRattleLocations
  float chainRattleAngleDeltaThreshold
  float lastChainRattle
  Line leftSoundLine
  Line rightSoundLine
  bool engineOn
  bool throttleOn
  bool inWater
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CarSettings
Наследуется от: object
Поля:
  float rollingResistance
  float antiRoll
  bool canSleep
  bool tankSteering
  float maxSteerAngle
  bool steeringAssist
  float steeringAssistRatio
  bool steeringLimit
  float minSteerLimitAngle
  float minSteerLimitSpeed
  float rearWheelSteer
  float steerMinLerpSpeed
  float steerMaxLerpSpeed
  float steerReturnLerpSpeed
  float maxDriveSlip
  float driveForceToMaxSlip
  float reversePercentSpeed
  float brakeForceMultiplier
  float handlingBias
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CarWheel
Наследуется от: object
Поля:
  WheelCollider wheelCollider
  float tyreFriction
  bool steerWheel
  bool brakeWheel
  bool powerWheel
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CarPhysics`1
Наследуется от: object
Поля:
  float <DriveWheelVelocity>k__BackingField
  float <DriveWheelSlip>k__BackingField
  float <SteerAngle>k__BackingField
  float <TankThrottleLeft>k__BackingField
  float <TankThrottleRight>k__BackingField
  ServerWheelData[] wheelData
  TCar car
  Transform transform
  Rigidbody rBody
  CarSettings vehicleSettings
  float speedAngle
  bool wasSleeping
  bool hasDriver
  bool hadDriver
  float lastMovingTime
  WheelFrictionCurve zeroFriction
  Vector3 prevLocalCOM
  float midWheelPos
  bool WHEEL_HIT_CORRECTION
  float SLEEP_SPEED
  float SLEEP_DELAY
  float AIR_DRAG
  float DEFAULT_GROUND_GRIP
  float ROAD_GROUND_GRIP
  float ICE_GROUND_GRIP
  bool slowSpeedExitFlag
  float SLOW_SPEED_EXIT_SPEED
  TimeSince timeSinceWaterCheck
Свойства:
  float DriveWheelVelocity
  float DriveWheelSlip
  float SteerAngle
  float TankThrottleLeft
  float TankThrottleRight
  bool InSlowSpeedExitMode
Методы:
  float get_DriveWheelVelocity()
  void set_DriveWheelVelocity(float value)
  float get_DriveWheelSlip()
  void set_DriveWheelSlip(float value)
  float get_SteerAngle()
  void set_SteerAngle(float value)
  float get_TankThrottleLeft()
  void set_TankThrottleLeft(float value)
  float get_TankThrottleRight()
  void set_TankThrottleRight(float value)
  bool get_InSlowSpeedExitMode()
  void .ctor(TCar car, Transform transform, Rigidbody rBody, CarSettings vehicleSettings)
  void FixedUpdate(float dt, float speed)
  bool IsGrounded()
  void COMChanged()
  void ComputeSteerAngle(float throttleInput, float steerInput, float dt, float speed)
  float GetWheelForceDistance(WheelCollider col)
  void UpdateSuspension(ServerWheelData<TCar> wd)
  void AdjustHitForces(int groundedWheels, float neutralForcePerWheel)
  void UpdateLocalFrame(ServerWheelData<TCar> wd, float dt)
  void ComputeTyreForces(ServerWheelData<TCar> wd, float speed, float maxDriveForce, float maxSpeed, float throttleInput, float steerInput, float brakeInput, float driveForceMultiplier)
  void ComputeTankSteeringThrottle(float throttleInput, float steerInput, float speed)
  float ComputeDriveForce(float speed, float absSpeed, float demandedForce, float maxForce, float maxForwardSpeed, float driveForceMultiplier)
  void ComputeOverallForces()
  float ComputeCombinedSlip(Vector2 localVelocity, Vector2 tyreSlip)
  void ApplyTyreForces(ServerWheelData<TCar> wd, float throttleInput, float steerInput, float speed)
  Vector3 GetSidewaysForceAppPoint(ServerWheelData<TCar> wd, Vector3 contactPoint)
  float GetTankSteerInvert(float throttleInput, float speed)
  ServerWheelData<TCar> <.ctor>g__AddWheel|47_0(CarWheel wheel, <>c__DisplayClass47_0& )
--------------------------------------------------
Класс: CrushTrigger
Наследуется от: TriggerHurt
Поля:
  bool includeNPCs
  bool requireCentreBelowPosition
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  bool CanHurt(BaseCombatEntity ent)
  void .ctor()
--------------------------------------------------
Класс: DamageRenderer
Наследуется от: MonoBehaviour
Поля:
  List`1<Material> damageShowingMats
  float maxDamageOpacity
  List`1<DamageShowingRenderer> damageShowingRenderers
  List`1<GlassPane> damageShowingGlassRenderers
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GroundVehicle
Наследуется от: BaseVehicle
Поля:
  GroundVehicleAudio gvAudio
  GameObjectRef fuelStoragePrefab
  Transform waterloggedPoint
  GameObjectRef collisionEffect
  float engineStartupTime
  float minCollisionDamageForce
  float maxCollisionDamageForce
  float collisionDamageMultiplier
  Vector3 <Velocity>k__BackingField
  VehicleEngineController`1<GroundVehicle> engineController
  Dictionary`2<BaseEntity, float> damageSinceLastTick
  float nextCollisionDamageTime
  float dragMod
  float dragModDuration
  TimeSince timeSinceDragModSet
Свойства:
  Vector3 Velocity
  float DriveWheelVelocity
  bool LightsAreOn
  EngineState<GroundVehicle> CurEngineState
Методы:
  Vector3 get_Velocity()
  void set_Velocity(Vector3 value)
  float get_DriveWheelVelocity()
  bool get_LightsAreOn()
  EngineState<GroundVehicle> get_CurEngineState()
  void InitShared()
  void OnFlagsChanged(Flags old, Flags next)
  float GetSpeed()
  float GetMaxForwardSpeed()
  float GetThrottleInput()
  float GetBrakeInput()
  bool CanPushNow(BasePlayer pusher)
  void ServerInit()
  void OnEngineStartFailed()
  bool MeetsEngineRequirements()
  void ServerFlagsChanged(Flags old, Flags next)
  void OnCollisionEnter(Collision collision)
  void VehicleFixedUpdate()
  void LightToggle(BasePlayer player)
  float GetDamageMultiplier(BaseEntity ent)
  void OnHurtTriggerOccupant(BaseEntity hurtEntity, DamageType damageType, float damageTotal)
  float QueueCollisionDamage(BaseEntity hitEntity, float forceMagnitude)
  void DoCollisionDamage(BaseEntity hitEntity, float damage)
  void ProcessCollision(Collision collision)
  float GetModifiedDrag()
  EntityFuelSystem GetFuelSystem()
  void OnChildAdded(BaseEntity child)
  void SetTempDrag(float drag, float duration)
  void .ctor()
  void IEngineControllerUser.Invoke(Action action, float time)
  void IEngineControllerUser.CancelInvoke(Action action)
--------------------------------------------------
Класс: GroundVehicleAudio
Наследуется от: MonoBehaviour
Поля:
  GroundVehicle groundVehicle
  SoundDefinition engineStartSound
  SoundDefinition engineStopSound
  SoundDefinition engineStartFailSound
  BlendedLoopEngineSound blendedEngineLoops
  float wheelRatioMultiplier
  SoundDefinition waterSplashSoundDef
  BlendedSoundLoops waterLoops
  float waterSoundsMaxSpeed
  SoundDefinition brakeSoundDef
  SoundDefinition lightsToggleSound
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AttackHeliDriverSeat
Наследуется от: BaseVehicleSeat
Поля:
  Sprite rocketCrosshair
  Sprite incendRocketCrosshair
  Sprite hvRocketCrosshair
  Sprite reloadingCrosshair
  GameObjectRef rocketHVItem
  GameObjectRef rocketIncenItem
  AttackHelicopter _owner
Свойства:
  AttackHelicopter Owner
Методы:
  AttackHelicopter get_Owner()
  void .ctor()
--------------------------------------------------
Класс: AttackHeliGunnerSeat
Наследуется от: BaseVehicleSeat
Поля:
  AttackHelicopter _owner
Свойства:
  AttackHelicopter Owner
Методы:
  AttackHelicopter get_Owner()
  bool CanHoldItems()
  Transform GetEyeOverride()
  Vector3 EyePositionForPlayer(BasePlayer player, Quaternion lookRot)
  Vector3 EyeCenterForPlayer(BasePlayer player, Quaternion lookRot)
  Vector2 GetPitchClamp()
  Vector2 GetYawClamp()
  void .ctor()
--------------------------------------------------
Класс: AttackHeliPilotFlare
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void OnDestroy()
  void Init(Vector3 initialVelocity)
  Vector3 CenterPoint()
  bool IsVisible(Vector3 from, float maxDistance)
  bool InSafeZone()
  bool IsValidHomingTarget()
  void OnEntityMessage(BaseEntity from, string msg)
  void .ctor()
--------------------------------------------------
Класс: AttackHeliUIDialog
Наследуется от: UIDialog
Поля:
  Material compassStripMat
  Canvas mainCanvas
  CanvasGroup gunCrosshair
  CanvasGroup gunNoAmmoCrosshair
  CanvasGroup gunCrosshairGhost
  RectTransform gunCrosshairGhostRect
  Canvas rocketCrosshairDefaultCanvas
  RectTransform rocketCrosshairDefaultRect
  Canvas rocketCrosshairHVCanvas
  RectTransform rocketCrosshairHVRect
  Canvas rocketCrosshairIncenCanvas
  RectTransform rocketCrosshairIncenRect
  GameObjectRef rocketHVItem
  GameObjectRef rocketIncenItem
  CanvasGroup crosshairHitMarkerGroup
  RectTransform zoomIndicator
  RectTransform positionBox
  RustText ammoTextGunMag
  RustText ammoTextGunRest
  RustText ammoTextRocketMag
  RustText ammoTextRocketRest
  RustText rangeText
  float zoomIndicatorMinY
  float zoomIndicatorMaxY
  float positionBoxXMult
  float positionBoxYMult
  Animator damageWarning
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseHelicopter
Наследуется от: BaseVehicle
Поля:
  float engineThrustMax
  Vector3 torqueScale
  Transform com
  GameObject[] killTriggers
  GroundEffect[] groundEffects
  GameObjectRef serverGibs
  GameObjectRef explosionEffect
  GameObjectRef fireBall
  GameObjectRef crashEffect
  float liftDotMax
  float altForceDotMin
  float liftFraction
  float thrustLerpSpeed
  Flags Flag_InternalLights
  float currentThrottle
  float avgThrust
  float avgTerrainHeight
  bool <autoHover>k__BackingField
  HelicopterInputState currentInputState
  float lastPlayerInputTime
  float hoverForceScale
  Vector3 damageTorque
  float nextDamageTime
  float nextEffectTime
  float pendingImpactDamage
Свойства:
  bool autoHover
  bool ForceMovementHandling
Методы:
  bool get_autoHover()
  void set_autoHover(bool value)
  float GetServiceCeiling()
  float MaxVelocity()
  void ServerInit()
  void DoServerDestroy()
  void PlayerServerInput(InputState inputState, BasePlayer player)
  bool ToggleAutoHover(BasePlayer player)
  void PilotInput(InputState inputState, BasePlayer player)
  void PassengerInput(InputState inputState, BasePlayer player)
  void SetDefaultInputState()
  bool IsEnginePowered()
  void VehicleFixedUpdate()
  void LightToggle(BasePlayer player)
  bool IsEngineOn()
  bool get_ForceMovementHandling()
  void TryStartEngine(BasePlayer player)
  void ClearDamageTorque()
  void SetDamageTorque(Vector3 newTorque)
  void AddDamageTorque(Vector3 torqueToAdd)
  void MovementUpdate()
  void DelayedImpactDamage()
  bool CollisionDamageEnabled()
  void ProcessCollision(Collision collision)
  void OnCollisionEnter(Collision collision)
  void OnKilled(HitInfo info)
  bool IsValidHomingTarget()
  void .ctor()
  float <PilotInput>g__MouseToBinary|31_0(float amount)
--------------------------------------------------
Класс: CH47AIBrain
Наследуется от: BaseAIBrain
Поля:
Свойства:
Методы:
  void AddStates()
  void InitializeAI()
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: CH47DropZone
Наследуется от: MonoBehaviour
Поля:
  float lastDropTime
  List`1<CH47DropZone> dropZones
Свойства:
Методы:
  void Awake()
  CH47DropZone GetClosest(Vector3 pos)
  void OnDestroy()
  float TimeSinceLastDrop()
  void Used()
  void OnDrawGizmos()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CH47Helicopter
Наследуется от: BaseHelicopter
Поля:
  GameObjectRef mapMarkerEntityPrefab
  SoundDefinition flightEngineSoundDef
  SoundDefinition flightThwopsSoundDef
  float rotorGainModSmoothing
  float engineGainMin
  float engineGainMax
  float thwopGainMin
  float thwopGainMax
  BaseEntity mapMarkerInstance
Свойства:
Методы:
  void ServerInit()
  void CreateMapMarker()
  bool IsValidHomingTarget()
  bool CanPushNow(BasePlayer pusher)
  void .ctor()
--------------------------------------------------
Класс: CH47HelicopterAIController
Наследуется от: CH47Helicopter
Поля:
  GameObjectRef scientistPrefab
  GameObjectRef dismountablePrefab
  GameObjectRef weakDismountablePrefab
  float maxTiltAngle
  float AiAltitudeForce
  GameObjectRef lockedCratePrefab
  Flags Flag_Damaged
  Flags Flag_NearDeath
  Flags Flag_DropDoorOpen
  GameObject triggerHurt
  Vector3 landingTarget
  int numCrates
  bool shouldLand
  bool aimDirOverride
  Vector3 _aimDirection
  Vector3 _moveTarget
  int lastAltitudeCheckFrame
  float altOverride
  float currentDesiredAltitude
  bool altitudeProtection
  float hoverHeight
Свойства:
Методы:
  void DropCrate()
  bool OutOfCrates()
  bool CanDropCrate()
  bool IsDropDoorOpen()
  void SetDropDoorOpen(bool open)
  bool ShouldLand()
  void SetLandingTarget(Vector3 target)
  void ClearLandingTarget()
  void TriggeredEventSpawn()
  void AttemptMount(BasePlayer player, bool doMountChecks)
  void ServerInit()
  void SpawnPassenger(Vector3 spawnPos, string prefabPath)
  void SpawnPassenger(Vector3 spawnPos)
  void SpawnScientist(Vector3 spawnPos)
  void SpawnScientists()
  void EnableFacingOverride(bool enabled)
  void SetMoveTarget(Vector3 position)
  Vector3 GetMoveTarget()
  void SetAimDirection(Vector3 dir)
  Vector3 GetAimDirectionOverride()
  Vector3 GetPosition()
  void MounteeTookDamage(BasePlayer mountee, HitInfo info)
  void CancelAnger()
  void InitiateAnger()
  void UnHostile()
  void OnKilled(HitInfo info)
  void OnAttacked(HitInfo info)
  void DelayedKill()
  void DismountAllPlayers()
  void SetAltitudeProtection(bool on)
  void CalculateDesiredAltitude()
  void SetMinHoverHeight(float newHeight)
  float CalculateOverrideAltitude()
  void SetDefaultInputState()
  void MaintainAIAltutide()
  void VehicleFixedUpdate()
  void DestroyShared()
  void .ctor()
--------------------------------------------------
Класс: CH47LandingZone
Наследуется от: MonoBehaviour
Поля:
  float lastDropTime
  List`1<CH47LandingZone> landingZones
  float dropoffScale
Свойства:
Методы:
  void Awake()
  CH47LandingZone GetClosest(Vector3 pos)
  void OnDestroy()
  float TimeSinceLastDrop()
  void Used()
  void OnDrawGizmos()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CH47PathFinder
Наследуется от: BasePathFinder
Поля:
  List`1<Vector3> visitedPatrolPoints
Свойства:
Методы:
  Vector3 GetRandomPatrolPoint()
  MonumentInfo GetRandomValidMonumentInfo()
  void .ctor()
--------------------------------------------------
Класс: CH47ReinforcementListener
Наследуется от: BaseEntity
Поля:
  string listenString
  GameObjectRef heliPrefab
  float startDist
Свойства:
Методы:
  void OnEntityMessage(BaseEntity from, string msg)
  void Call()
  void .ctor()
--------------------------------------------------
Класс: Minicopter
Наследуется от: PlayerHelicopter
Поля:
  float population
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MiniCopterAnimation
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void UpdateRotorSpeed(float newSpeed)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: PlayerHeliSounds
Наследуется от: MonoBehaviour
Поля:
  PlayerHelicopter miniCopter
  GameObject soundAttachPoint
  List`1<FlightSoundLayer> flightSoundLayers
  SoundDefinition engineStartDef
  SoundDefinition engineLoopDef
  SoundDefinition engineStopDef
  SoundDefinition rotorLoopDef
  SoundDefinition radarWarningDef
  SoundDefinition radarLockDef
  SoundDefinition noAmmoDef
  SoundDefinition noFlaresDef
  SoundDefinition flightControlMovementSoundDef
  GameObject flightControlSoundPosition
  float engineStartFadeOutTime
  float engineLoopFadeInTime
  float engineLoopFadeOutTime
  float engineStopFadeOutTime
  float rotorLoopFadeInTime
  float rotorLoopFadeOutTime
  float enginePitchInterpRate
  float rotorPitchInterpRate
  float rotorGainInterpRate
  float rotorStartStopPitchRateUp
  float rotorStartStopPitchRateDown
  float rotorStartStopGainRateUp
  float rotorStartStopGainRateDown
  AnimationCurve engineUpDotPitchCurve
  AnimationCurve rotorUpDotPitchCurve
  Animator animator
  SoundDefinition reloadStartSoundDef
  SoundDefinition reloadLoopSoundDef
  SoundDefinition reloadFinishSoundDef
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ScrapTransportHelicopter
Наследуется от: PlayerHelicopter
Поля:
  Transform searchlightEye
  BoxCollider parentTriggerCollider
  ParticleSystemContainer tailDamageLight
  ParticleSystemContainer tailDamageHeavy
  ParticleSystemContainer mainEngineDamageLight
  ParticleSystemContainer mainEngineDamageHeavy
  ParticleSystemContainer cockpitSparks
  Transform tailDamageLightEffects
  Transform mainEngineDamageLightEffects
  SoundDefinition damagedFireSoundDef
  SoundDefinition damagedFireTailSoundDef
  SoundDefinition damagedSparksSoundDef
  float pilotRotorScale
  float compassOffset
  float population
  string PASSENGER_ACHIEVEMENT
  int PASSENGER_ACHIEVEMENT_REQ_COUNT
Свойства:
Методы:
  void ServerInit()
  void OnHealthChanged(float oldvalue, float newvalue)
  void DelayedNetworking()
  void OnFlagsChanged(Flags old, Flags next)
  float GetDamageMultiplier(BaseEntity ent)
  void OnHurtTriggerOccupant(BaseEntity hurtEntity, DamageType damageType, float damageTotal)
  bool CanPushNow(BasePlayer pusher)
  void .ctor()
--------------------------------------------------
Класс: ScrapTransportHelicopterWheelEffects
Наследуется от: MonoBehaviour
Поля:
  WheelCollider wheelCollider
  GameObjectRef impactEffect
  float minTimeBetweenEffects
  float minDistBetweenEffects
  bool wasGrounded
  float lastEffectPlayed
  Vector3 lastCollisionPos
Свойства:
Методы:
  void Update()
  void DoImpactEffect()
  void .ctor()
--------------------------------------------------
Класс: IMountable
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: BaseMagnet
Наследуется от: MonoBehaviour
Поля:
  BaseEntity entityOwner
  Flags magnetFlag
  TriggerMagnet magnetTrigger
  FixedJoint fixedJoint
  Rigidbody kinematicAttachmentBody
  float magnetForce
  Transform attachDepthPoint
  GameObjectRef attachEffect
  bool isMagnetOn
  GameObject colliderSource
  BasePlayer associatedPlayer
Свойства:
Методы:
  bool HasConnectedObject()
  OBB GetConnectedOBB(float scale)
  void SetCollisionsEnabled(GameObject other, bool wants)
  void SetMagnetEnabled(bool wantsOn, BasePlayer forPlayer)
  void OnMagnetEnabled()
  void OnMagnetDisabled()
  bool IsMagnetOn()
  void MagnetThink(float delta)
  void .ctor()
--------------------------------------------------
Класс: IMagnetLiftable
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: MagnetCraneAudio
Наследуется от: MonoBehaviour
Поля:
  MagnetCrane crane
  SoundDefinition engineStartSoundDef
  SoundDefinition engineStopSoundDef
  BlendedLoopEngineSound engineLoops
  SoundDefinition cabinRotationStartDef
  SoundDefinition cabinRotationStopDef
  SoundDefinition cabinRotationLoopDef
  Sound cabinRotationLoop
  SoundDefinition turningLoopDef
  Sound turningLoop
  SoundDefinition trackMovementLoopDef
  Sound trackMovementLoop
  Modulator trackGainMod
  Modulator trackPitchMod
  SoundDefinition armMovementLoopDef
  SoundDefinition armMovementStartDef
  SoundDefinition armMovementStopDef
  Sound armMovementLoop01
  Modulator armMovementLoop01PitchMod
  GameObject arm01SoundPosition
  GameObject arm02SoundPosition
  Sound armMovementLoop02
  Modulator armMovementLoop02PitchMod
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MagnetLiftable
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  ItemAmount[] shredResources
  Vector3 shredDirection
  BasePlayer <associatedPlayer>k__BackingField
Свойства:
  BasePlayer associatedPlayer
Методы:
  BasePlayer get_associatedPlayer()
  void set_associatedPlayer(BasePlayer value)
  void SetMagnetized(bool wantsOn, BaseMagnet magnetSource, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: TriggerMagnet
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: MapMarkerMLRSRocket
Наследуется от: MapMarker
Поля:
Свойства:
Методы:
  void ServerInit()
  bool ShouldNetworkTo(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: MLRSAmmoIcon
Наследуется от: MonoBehaviour
Поля:
  GameObject fill
Свойства:
Методы:
  void Awake()
  void SetState(bool filled)
  void .ctor()
--------------------------------------------------
Класс: MLRSAmmoUI
Наследуется от: MonoBehaviour
Поля:
  RustText ammoText
  MLRSAmmoIcon[] ammoIcons
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MLRSAudio
Наследуется от: MonoBehaviour
Поля:
  MLRS mlrs
  Transform pitchTransform
  Transform yawTransform
  float pitchDeltaSmoothRate
  float yawDeltaSmoothRate
  float pitchDeltaThreshold
  float yawDeltaThreshold
  float lastPitch
  float lastYaw
  float pitchDelta
  float yawDelta
  SoundDefinition turretMovementStartDef
  SoundDefinition turretMovementLoopDef
  SoundDefinition turretMovementStopDef
  Sound turretMovementLoop
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MLRSMainUI
Наследуется от: MonoBehaviour
Поля:
  bool isFullscreen
  GameObject noAimingModuleModeGO
  GameObject activeModeGO
  MLRSAmmoUI noAimingModuleAmmoUI
  MLRSAmmoUI activeAmmoUI
  MLRSVelocityUI velocityUI
  RustText titleText
  RustText usernameText
  TokenisedPhrase readyStatus
  TokenisedPhrase realigningStatus
  TokenisedPhrase firingStatus
  RustText statusText
  MapView mapView
  ScrollRectEx mapScrollRect
  ScrollRectZoom mapScrollRectZoom
  RectTransform mapBaseRect
  RectTransform minRangeCircle
  RectTransform targetAimRect
  RectTransform trueAimRect
  UILineRenderer connectingLine
  GameObject noTargetCirclePrefab
  Transform noTargetCircleParent
  SoundDefinition changeTargetSoundDef
  SoundDefinition readyToFireSoundDef
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MLRSRocket
Наследуется от: TimedExplosive
Поля:
  GameObjectRef mapMarkerPrefab
  GameObjectRef launchBlastFXPrefab
  GameObjectRef explosionGroundFXPrefab
  ServerProjectile serverProjectile
  EntityRef mapMarkerInstanceRef
Свойства:
  SamTargetType SAMTargetType
Методы:
  SamTargetType get_SAMTargetType()
  void ServerInit()
  void ProjectileImpact(RaycastHit info, Vector3 rayOrigin)
  void CreateMapMarker()
  bool IsValidSAMTarget(bool staticRespawn)
  Vector3 GetLocalVelocityServer()
  void OnTriggerEnter(Collider other)
  void .ctor()
--------------------------------------------------
Класс: MLRSServerProjectile
Наследуется от: ServerProjectile
Поля:
Свойства:
  bool HasRangeLimit
  int mask
Методы:
  bool get_HasRangeLimit()
  int get_mask()
  bool IsAValidHit(BaseEntity hitEnt)
  void .ctor()
--------------------------------------------------
Класс: MLRSUIDialog
Наследуется от: UIDialog
Поля:
  MLRSMainUI mainUI
  TokenisedPhrase howToUsePhrase
  float titleChangeInterval
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MLRSVelocityUI
Наследуется от: MonoBehaviour
Поля:
  RustText percentText
  HudElement percentBar
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseModularVehicle
Наследуется от: GroundVehicle
Поля:
  List`1<ModularVehicleSocket> moduleSockets
  Transform centreOfMassTransform
  Transform waterSample
  LODGroup lodGroup
  GameObjectRef keyEnterDialog
  List`1<BaseVehicleModule> <AttachedModuleEntities>k__BackingField
  float _mass
  float <TotalMass>k__BackingField
  bool <HasInited>k__BackingField
  Flags FLAG_KINEMATIC
  Dictionary`2<BaseVehicleModule, Action> moduleAddActions
  bool inEditableLocation
  bool prevEditable
  bool immuneToDecay
  ModularVehicleInventory <Inventory>k__BackingField
  Vector3 realLocalCOM
  Item AssociatedItemInstance
  bool disablePhysics
Свойства:
  Vector3 CentreOfMass
  int NumAttachedModules
  bool HasAnyModules
  List`1<BaseVehicleModule> AttachedModuleEntities
  int TotalSockets
  int NumFreeSockets
  float Mass
  float TotalMass
  bool IsKinematic
  bool IsLockable
  bool HasInited
  ItemDefinition AssociatedItemDef
  bool IsEditableNow
  ModularVehicleInventory Inventory
Методы:
  Vector3 get_CentreOfMass()
  int get_NumAttachedModules()
  bool get_HasAnyModules()
  List`1<BaseVehicleModule> get_AttachedModuleEntities()
  int get_TotalSockets()
  int get_NumFreeSockets()
  float get_Mass()
  float get_TotalMass()
  void set_TotalMass(float value)
  bool get_IsKinematic()
  bool get_IsLockable()
  bool get_HasInited()
  void set_HasInited(bool value)
  ItemDefinition get_AssociatedItemDef()
  bool get_IsEditableNow()
  void InitShared()
  bool PlayerCanUseThis(BasePlayer player, LockType lockType)
  bool TryDeduceSocketIndex(BaseVehicleModule addedModule, Int32& index)
  void AddMass(float moduleMass, Vector3 moduleCOM, Vector3 moduleWorldPos)
  void RemoveMass(float moduleMass, Vector3 moduleCOM, Vector3 moduleWorldPos)
  bool TryGetModuleAt(int socketIndex, BaseVehicleModule& result)
  ModularVehicleSocket GetSocket(int index)
  void Load(LoadInfo info)
  bool CanPushNow(BasePlayer pusher)
  void OnChildAdded(BaseEntity childEntity)
  void OnChildRemoved(BaseEntity childEntity)
  void ModuleEntityAdded(BaseVehicleModule addedModule)
  void ModuleEntityRemoved(BaseVehicleModule removedModule)
  void RefreshModulesExcept(BaseVehicleModule ignoredModule)
  ModularVehicleInventory get_Inventory()
  void set_Inventory(ModularVehicleInventory value)
  void ServerInit()
  void PreServerLoad()
  void PostServerLoad()
  void DoServerDestroy()
  float MaxVelocity()
  bool IsComplete()
  bool CouldBeEdited()
  void DisablePhysics()
  void EnablePhysics()
  void VehicleFixedUpdate()
  bool MountEligable(BasePlayer player)
  void Save(SaveInfo info)
  bool CanMoveFrom(BasePlayer player, Item item)
  Vector3 GetCOMMultiplier()
  void ModuleHurt(BaseVehicleModule hurtModule, HitInfo info)
  void ModuleReachedZeroHealth()
  bool TryAddModule(Item moduleItem, int socketIndex)
  bool TryAddModule(Item moduleItem)
  bool ModuleCanBeAdded(Item moduleItem, int socketIndex, String& failureReason)
  BaseVehicleModule CreatePhysicalModuleEntity(Item moduleItem, ItemModVehicleModule itemModModule, int socketIndex)
  void SetUpModule(BaseVehicleModule moduleEntity, Item moduleItem)
  Item GetVehicleItem(ItemId itemUID)
  BaseVehicleModule GetModuleForItem(Item item)
  void SetMass(float mass)
  void SetCOM(Vector3 com)
  void .ctor()
--------------------------------------------------
Класс: EngineAudioSet
Наследуется от: ScriptableObject
Поля:
  BlendedEngineLoopDefinition[] engineAudioLoops
  int priority
  float idleVolume
  float maxVolume
  float volumeChangeRateUp
  float volumeChangeRateDown
  float idlePitch
  float maxPitch
  float idleRpm
  float gearUpRpm
  float gearDownRpm
  int numGears
  float maxRpm
  float gearUpRpmRate
  float gearDownRpmRate
  SoundDefinition badPerformanceLoop
Свойства:
Методы:
  BlendedEngineLoopDefinition GetEngineLoopDef(int numEngines)
  void .ctor()
--------------------------------------------------
Класс: GlassPane
Наследуется от: BaseMonoBehaviour
Поля:
  Renderer glassRendereer
  BaseVehicleModule module
  float showFullDamageAt
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MagnetSnap
Наследуется от: object
Поля:
  Transform snapLocation
  Vector3 prevSnapLocation
Свойства:
Методы:
  void .ctor(Transform snapLocation)
  void FixedUpdate(Transform target)
  void PositionTarget(Transform target)
--------------------------------------------------
Класс: ModularCarCentralLockingSwitch
Наследуется от: VehicleModuleButtonComponent
Поля:
  Transform centralLockingSwitch
  Vector3 switchOffPos
  Vector3 switchOnPos
Свойства:
Методы:
  void ServerUse(BasePlayer player, BaseVehicleModule parentModule)
  void .ctor()
--------------------------------------------------
Класс: ModularCarChassisVisuals
Наследуется от: VehicleChassisVisuals`1<ModularCar>
Поля:
  Transform frontAxle
  Transform rearAxle
  Steering steering
  LookAtTarget transmission
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IVehicleLockUser
Поля:
Свойства:
Методы:
  bool PlayerCanDestroyLock(BasePlayer player, BaseVehicleModule viaModule)
  bool PlayerHasUnlockPermission(BasePlayer player)
  bool PlayerCanUseThis(BasePlayer player, LockType lockType)
  void RemoveLock()
--------------------------------------------------
Класс: ModularCarCodeLock
Наследуется от: object
Поля:
  bool isServer
  ModularCar owner
  Flags FLAG_CENTRAL_LOCKING
  Flags FLAG_CODE_ENTRY_BLOCKED
  float LOCK_DESTROY_HEALTH
  List`1<ulong> whitelistPlayers
  string <Code>k__BackingField
  int wrongCodes
  float lastWrongTime
Свойства:
  bool HasALock
  bool CentralLockingIsOn
  IList`1<ulong> WhitelistPlayers
  string Code
Методы:
  bool get_HasALock()
  bool get_CentralLockingIsOn()
  IList`1<ulong> get_WhitelistPlayers()
  void .ctor(ModularCar owner, bool isServer)
  bool PlayerCanDestroyLock(BaseVehicleModule viaModule)
  bool CodeEntryBlocked(BasePlayer player)
  void Load(LoadInfo info)
  bool HasLockPermission(BasePlayer player)
  bool PlayerCanUseThis(BasePlayer player, LockType lockType)
  string get_Code()
  void set_Code(string value)
  void PostServerLoad()
  bool CanHaveALock()
  bool TryAddALock(string code, ulong userID)
  bool IsValidLockCode(string code)
  bool TrySetNewCode(string newCode, ulong userID)
  void RemoveLock()
  bool TryOpenWithCode(BasePlayer player, string codeEntered)
  void ClearCodeEntryBlocked()
  void CheckEnableCentralLocking()
  void ToggleCentralLocking()
  void Save(SaveInfo info)
  bool TryAddPlayer(ulong userID)
  bool TryRemovePlayer(ulong userID)
--------------------------------------------------
Класс: ModularCarCodeLockVisuals
Наследуется от: MonoBehaviour
Поля:
  GameObject lockedVisuals
  GameObject unlockedVisuals
  GameObject blockedVisuals
  GameObjectRef codelockEffectDenied
  GameObjectRef codelockEffectShock
  float xOffset
  ParticleSystemContainer keycodeDestroyableFX
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VehicleLiftOccupantTrigger
Наследуется от: TriggerBase
Поля:
  ModularCar <carOccupant>k__BackingField
Свойства:
  ModularCar carOccupant
Методы:
  ModularCar get_carOccupant()
  void set_carOccupant(ModularCar value)
  void OnDisable()
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ModularCarPresetConfig
Наследуется от: ScriptableObject
Поля:
  ItemModVehicleModule[] socketItemDefs
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ModularCarSeat
Наследуется от: MouseSteerableSeat
Поля:
  Vector3 leftFootIKPos
  Vector3 rightFootIKPos
  Vector3 leftHandIKPos
  Vector3 rightHandIKPos
  float providesComfort
  VehicleModuleSeating associatedSeatingModule
Свойства:
Методы:
  bool CanSwapToThis(BasePlayer player)
  float GetComfort()
  void .ctor()
--------------------------------------------------
Класс: ModularVehicleShopFront
Наследуется от: ShopFront
Поля:
  float maxUseDistance
Свойства:
Методы:
  bool CanBeLooted(BasePlayer player)
  bool WithinUseDistance(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: CamperSeatConfig
Наследуется от: MonoBehaviour
Поля:
  Transform[] SeatPositions
  Transform StovePosition
  Transform StoragePosition
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VehicleModuleButtonComponent
Наследуется от: MonoBehaviour
Поля:
  string interactionColliderName
  SoundDefinition pressSoundDef
Свойства:
Методы:
  void ServerUse(BasePlayer player, BaseVehicleModule parentModule)
  void .ctor()
--------------------------------------------------
Класс: VehicleModuleEngine
Наследуется от: VehicleModuleStorage
Поля:
  Engine engine
  bool <IsUsable>k__BackingField
  float <PerformanceFractionAcceleration>k__BackingField
  float <PerformanceFractionTopSpeed>k__BackingField
  float <PerformanceFractionFuelEconomy>k__BackingField
  float <OverallPerformanceFraction>k__BackingField
  float FORCE_MULTIPLIER
  float HEALTH_PERFORMANCE_FRACTION
  float LOW_PERFORMANCE_THRESHOLD
  Sound badPerformanceLoop
  Modulator badPerformancePitchModulator
  float prevSmokePercent
  float MIN_FORCE_BIAS
  float MAX_FORCE_BIAS
Свойства:
  bool HasAnEngine
  bool IsUsable
  float PerformanceFractionAcceleration
  float PerformanceFractionTopSpeed
  float PerformanceFractionFuelEconomy
  float OverallPerformanceFraction
  bool AtLowPerformance
  bool AtPeakPerformance
  int KW
  EngineAudioSet AudioSet
  bool EngineIsOn
Методы:
  bool get_HasAnEngine()
  bool get_IsUsable()
  void set_IsUsable(bool value)
  float get_PerformanceFractionAcceleration()
  void set_PerformanceFractionAcceleration(float value)
  float get_PerformanceFractionTopSpeed()
  void set_PerformanceFractionTopSpeed(float value)
  float get_PerformanceFractionFuelEconomy()
  void set_PerformanceFractionFuelEconomy(float value)
  float get_OverallPerformanceFraction()
  void set_OverallPerformanceFraction(float value)
  bool get_AtLowPerformance()
  bool get_AtPeakPerformance()
  int get_KW()
  EngineAudioSet get_AudioSet()
  bool get_EngineIsOn()
  void InitShared()
  void OnEngineStateChanged(EngineState<GroundVehicle> oldState, EngineState<GroundVehicle> newState)
  float GetMaxDriveForce()
  void RefreshPerformanceStats(EngineStorage engineStorage)
  float GetPerformanceFraction(float statBoostPercent)
  void Load(LoadInfo info)
  bool CanBeLooted(BasePlayer player)
  void VehicleFixedUpdate()
  float GetAdjustedDriveForce(float absSpeed, float topSpeed)
  void Hurt(HitInfo info)
  void OnHealthChanged(float oldValue, float newValue)
  bool AdminFixUp(int tier)
  void .ctor()
--------------------------------------------------
Класс: TakeCollisionDamage
Наследуется от: FacepunchBehaviour
Поля:
  BaseCombatEntity entity
  float minDamage
  float maxDamage
  float forceForAnyDamage
  float forceForMaxDamage
  float velocityRestorePercent
  float pendingDamage
Свойства:
  bool IsServer
  bool IsClient
Методы:
  bool get_IsServer()
  bool get_IsClient()
  void OnCollisionEnter(Collision collision)
  void OnDestroy()
  void DoDamage()
  void .ctor()
--------------------------------------------------
Класс: VehicleLight
Наследуется от: MonoBehaviour
Поля:
  bool IsBrake
  GameObject toggleObject
  LightRenderer[] renderers
  Color lightOnColour
  Color brakesOnColour
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MouseSteerableSeat
Наследуется от: BaseVehicleSeat
Поля:
  bool supportsMouseSteer
  BUTTON MouseSteerButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SnowmobileAudio
Наследуется от: GroundVehicleAudio
Поля:
  EngineAudioSet engineAudioSet
  AnimationCurve skiGainCurve
  SoundDefinition skiSlideSoundDef
  SoundDefinition skiSlideSnowSoundDef
  SoundDefinition skiSlideSandSoundDef
  SoundDefinition skiSlideGrassSoundDef
  SoundDefinition skiSlideWaterSoundDef
  AnimationCurve movementGainCurve
  SoundDefinition movementLoopDef
  SoundDefinition suspensionLurchSoundDef
  float suspensionLurchMinExtensionDelta
  float suspensionLurchMinTimeBetweenSounds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SnowmobileChassisVisuals
Наследуется от: VehicleChassisVisuals`1<Snowmobile>
Поля:
  Animator animator
  SnowmobileAudio audioScript
  TreadRenderer[] treadRenderers
  float treadSpeedMultiplier
  bool flipRightSkiExtension
  Transform leftSki
  Transform leftSkiPistonIn
  Transform leftSkiPistonOut
  Transform rightSki
  Transform rightSkiPistonIn
  Transform rightSkiPistonOut
  float skiVisualAdjust
  float treadVisualAdjust
  float skiVisualMaxExtension
  float treadVisualMaxExtension
  float wheelSizeVisualMultiplier
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoccerBall
Наследуется от: BaseCombatEntity
Поля:
  Rigidbody rigidBody
  float additionalForceMultiplier
  float upForceMultiplier
  DamageRenderer damageRenderer
  float explosionForceMultiplier
  float otherForceMultiplier
Свойства:
Методы:
  void OnCollisionEnter(Collision collision)
  void Hurt(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: SubmarineAudio
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition engineStartSound
  SoundDefinition engineStopSound
  SoundDefinition engineStartFailSound
  SoundDefinition engineLoopSound
  AnimationCurve engineLoopPitchCurve
  SoundDefinition underwaterLoopDef
  SoundDefinition underwaterMovementLoopDef
  BlendedSoundLoops surfaceWaterLoops
  float surfaceWaterSoundsMaxSpeed
  SoundDefinition waterEmergeSoundDef
  SoundDefinition waterSubmergeSoundDef
  SoundDefinition activeLoopDef
  SoundDefinition footPedalSoundDef
  Transform footPedalSoundPos
  SoundDefinition steeringWheelSoundDef
  Transform steeringWheelSoundPos
  SoundDefinition heavyDamageSparksDef
  Transform heavyDamageSparksPos
  SoundDefinition flagRaise
  SoundDefinition flagLower
  GameObject dashboardAudioPoint
  SoundDefinition climbOrDiveLoopSound
  SoundDefinition torpedoFailedSound
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SubmarineDuo
Наследуется от: BaseSubmarine
Поля:
  Transform steeringWheel
  Transform steeringWheelLeftGrip
  Transform steeringWheelRightGrip
  Transform leftPedal
  Transform rightPedal
  Transform driverLeftFoot
  Transform driverRightFoot
  Transform mphNeedle
  Transform fuelNeedle
  Transform waterDepthNeedle
  Transform ammoFlag
  SonarSystem sonar
  Transform torpedoTubeHatch
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CompleteTrain
Наследуется от: object
Поля:
  TrainCar <PrimaryTrainCar>k__BackingField
  float <TotalForces>k__BackingField
  float <TotalMass>k__BackingField
  int <LinedUpToUnload>k__BackingField
  Vector3 unloaderPos
  float trackSpeed
  float prevTrackSpeed
  List`1<TrainCar> trainCars
  TriggerTrainCollisions frontCollisionTrigger
  TriggerTrainCollisions rearCollisionTrigger
  bool ranUpdateTick
  bool disposed
  float IMPACT_ENERGY_FRACTION
  float MIN_COLLISION_FORCE
  float lastMovingTime
  float SLEEP_SPEED
  float SLEEP_DELAY
  TimeSince timeSinceLastChange
  bool isShunting
  TimeSince timeSinceShuntStart
  float MAX_SHUNT_TIME
  float SHUNT_SPEED
  float SHUNT_SPEED_CHANGE_RATE
  Action`1<ActionAttemptStatus> shuntEndCallback
  float shuntDistance
  Vector3 shuntDirection
  Vector2 shuntStartPos2D
  Vector2 shuntTargetPos2D
  TrainCar shuntTarget
  StaticCollisionState staticCollidingAtFront
  HashSet`1<GameObject> monitoredStaticContentF
  StaticCollisionState staticCollidingAtRear
  HashSet`1<GameObject> monitoredStaticContentR
  Dictionary`2<Rigidbody, float> prevTrackSpeeds
Свойства:
  TrainCar PrimaryTrainCar
  bool TrainIsReversing
  float TotalForces
  float TotalMass
  int NumTrainCars
  int LinedUpToUnload
  bool IsLinedUpToUnload
Методы:
  TrainCar get_PrimaryTrainCar()
  void set_PrimaryTrainCar(TrainCar value)
  bool get_TrainIsReversing()
  float get_TotalForces()
  void set_TotalForces(float value)
  float get_TotalMass()
  void set_TotalMass(float value)
  int get_NumTrainCars()
  int get_LinedUpToUnload()
  void set_LinedUpToUnload(int value)
  bool get_IsLinedUpToUnload()
  void .ctor(TrainCar trainCar)
  void .ctor(List`1<TrainCar> allTrainCars)
  void Init(List`1<TrainCar> allTrainCars)
  void Finalize()
  void Dispose()
  void Cleanup()
  void RemoveTrainCar(TrainCar trainCar)
  float GetTrackSpeedFor(TrainCar trainCar)
  float GetPrevTrackSpeedFor(TrainCar trainCar)
  void UpdateTick(float dt)
  bool IncludesAnEngine()
  bool HasAnyCollisions()
  bool HasAnyEnginesOn()
  bool IsAllAsleep()
  void SleepAll()
  bool TryShuntCarTo(Vector3 shuntDirection, float shuntDistance, TrainCar shuntTarget, Action`1<ActionAttemptStatus> shuntEndCallback, ActionAttemptStatus& status)
  void EndShunting(ActionAttemptStatus status)
  bool ContainsOnly(TrainCar trainCar)
  int IndexOf(TrainCar trainCar)
  bool TryGetAdjacentTrainCar(TrainCar trainCar, bool next, Vector3 forwardDir, TrainCar& result)
  void ParamsTick()
  void MovementTick(float dt)
  void MoveOtherTrainCar(TrainCar trainCar, TrainCar prevTrainCar)
  void ResetUpdateTick()
  bool Matches(List`1<TrainCar> listToCompare)
  void ReduceSpeedBy(float velChange)
  bool AnyPlayersOnTrain()
  int CheckLinedUpToUnload(Vector3& unloaderPos)
  bool IsCoupledBackwards(TrainCar trainCar)
  bool IsCoupledBackwards(int trainCarIndex)
  bool HasThrottleInput()
  TrackSelection GetTrackSelection()
  void FreeStaticCollision()
  float ApplyCollisionsToTrackSpeed(float trackSpeed, float totalMass, float deltaTime)
  float ApplyCollisions(float trackSpeed, TrainCar ourTrainCar, Vector3 forwardVector, bool atOurFront, TriggerTrainCollisions trigger, float ourTotalMass, StaticCollisionState& wasStaticColliding, StaticCollisionState otherEndStaticColliding, float deltaTime)
  float HandleStaticCollisions(bool staticColliding, bool front, float trackSpeed, StaticCollisionState& wasStaticColliding, TriggerTrainCollisions trigger)
  float HandleTrainCollision(bool front, Vector3 forwardVector, float trackSpeed, Transform ourTransform, TrainCar theirTrain, float deltaTime, StaticCollisionState& wasStaticColliding)
  float HandleRigidbodyCollision(bool atOurFront, float trackSpeed, Vector3 forwardVector, float ourTotalMass, Rigidbody theirRB, float theirTotalMass, float deltaTime, bool calcSecondaryForces)
  float GetTotalPushingMass(Vector3 pushDirection, Vector3 ourForward, List`1& prevTrains)
  float GetTotalPushingForces(Vector3 pushDirection, Vector3 ourForward, List`1& prevTrains)
--------------------------------------------------
Класс: EngineDamageOverTime
Наследуется от: object
Поля:
  List`1<RecentDamage> recentDamage
  float maxSeconds
  float triggerDamage
  Action trigger
Свойства:
Методы:
  void .ctor(float triggerDamage, float maxSeconds, Action trigger)
  void TakeDamage(float amount)
  float GetRecentDamage()
--------------------------------------------------
Класс: ITrainCollidable
Поля:
Свойства:
Методы:
  bool CustomCollision(TrainCar train, TriggerTrainCollisions trainTrigger)
  bool EqualNetID(BaseNetworkable other)
--------------------------------------------------
Класс: LocomotiveExtraVisuals
Наследуется от: MonoBehaviour
Поля:
  TrainEngine trainEngine
  Transform needleA
  Transform needleB
  Transform needleC
  float maxAngle
  float speedoMoveSpeed
  float pressureMoveSpeed
  float fanAcceleration
  float fanMaxSpeed
  float speedoMax
  Transform[] engineFans
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MountableParentCombatEntity
Наследуется от: BaseCombatEntity
Поля:
  BaseMountable mountable
Свойства:
  BaseMountable Mountable
Методы:
  BaseMountable get_Mountable()
  void .ctor()
--------------------------------------------------
Класс: TrainBarricade
Наследуется от: BaseCombatEntity
Поля:
  float trainDamagePerMPS
  float minVelToDestroy
  float velReduction
  GameObjectRef barricadeDamageEffect
  float <FrontWheelSplineDist>k__BackingField
  TrainCar hitTrain
  TriggerTrainCollisions hitTrainTrigger
  TrainTrackSpline track
Свойства:
  Vector3 Position
  float FrontWheelSplineDist
  TrainCarType CarType
Методы:
  Vector3 get_Position()
  float get_FrontWheelSplineDist()
  void set_FrontWheelSplineDist(float value)
  TrainCarType get_CarType()
  bool CustomCollision(TrainCar train, TriggerTrainCollisions trainTrigger)
  void ServerInit()
  void DoServerDestroy()
  void SetHitTrain(TrainCar train, TriggerTrainCollisions trainTrigger)
  void ClearHitTrain()
  void DestroyThisBarrier()
  void PushForceTick()
  void .ctor()
--------------------------------------------------
Класс: TrainCarAudio
Наследуется от: MonoBehaviour
Поля:
  TrainCar trainCar
  SoundDefinition movementStartDef
  SoundDefinition movementStopDef
  SoundDefinition movementLoopDef
  AnimationCurve movementLoopGainCurve
  float movementChangeOneshotDebounce
  Sound movementLoop
  Modulator movementLoopGain
  SoundDefinition turnLoopDef
  Sound turnLoop
  SoundDefinition trackClatterLoopDef
  AnimationCurve trackClatterGainCurve
  AnimationCurve trackClatterPitchCurve
  Sound trackClatterLoop
  Modulator trackClatterGain
  Modulator trackClatterPitch
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TrainCarFuelHatches
Наследуется от: MonoBehaviour
Поля:
  TrainCar owner
  float animSpeed
  Transform hatch1Col
  Transform hatch1Vis
  Transform hatch2Col
  Transform hatch2Vis
  Transform hatch3Col
  Transform hatch3Vis
  float closedXAngle
  float openXAngle
  SoundDefinition hatchOpenSoundDef
  SoundDefinition hatchCloseSoundDef
  Vector3 _angles
  float _hatchLerp
  bool opening
  bool openingQueued
  bool isMoving
Свойства:
Методы:
  void LinedUpStateChanged(bool linedUp)
  void MoveTick()
  void EndMove()
  void SetAngleOnAll(float lerpT, bool closing)
  void SetAngle(Transform transform, float angle)
  void .ctor()
--------------------------------------------------
Класс: TrainCarUnloadableLoot
Наследуется от: TrainCarUnloadable
Поля:
  LootCrateSet[] lootLayouts
  Transform[] lootPositions
Свойства:
Методы:
  void Spawn()
  void .ctor()
--------------------------------------------------
Класс: TrainCoupling
Наследуется от: object
Поля:
  TrainCar owner
  bool isFrontCoupling
  TrainCouplingController controller
  Transform couplingPoint
  Transform couplingPivot
  Flags flag
  bool isValid
  TrainCoupling <CoupledTo>k__BackingField
  TimeSince timeSinceCouplingBlock
Свойства:
  bool IsCoupled
  bool IsUncoupled
  TrainCoupling CoupledTo
Методы:
  bool get_IsCoupled()
  bool get_IsUncoupled()
  void .ctor(TrainCar owner, bool isFrontCoupling, TrainCouplingController controller)
  void .ctor(TrainCar owner, bool isFrontCoupling, TrainCouplingController controller, Transform couplingPoint, Transform couplingPivot, Flags flag)
  TrainCoupling get_CoupledTo()
  void set_CoupledTo(TrainCoupling value)
  bool IsCoupledTo(TrainCar them)
  bool IsCoupledTo(TrainCoupling them)
  bool TryCouple(TrainCoupling theirCoupling, bool reflect)
  void Uncouple(bool reflect)
  TrainCoupling GetOppositeCoupling()
  bool TryGetCoupledToID(NetworkableId& id)
--------------------------------------------------
Класс: TrainCouplingController
Наследуется от: object
Поля:
  float <PreChangeTrackSpeed>k__BackingField
  bool <PreChangeCoupledBackwards>k__BackingField
  Flags Flag_CouplingFront
  Flags Flag_CouplingRear
  TrainCoupling frontCoupling
  TrainCoupling rearCoupling
  TrainCar owner
  float max_couple_speed
Свойства:
  bool IsCoupled
  bool IsFrontCoupled
  bool IsRearCoupled
  float PreChangeTrackSpeed
  bool PreChangeCoupledBackwards
Методы:
  bool get_IsCoupled()
  bool get_IsFrontCoupled()
  bool get_IsRearCoupled()
  float get_PreChangeTrackSpeed()
  void set_PreChangeTrackSpeed(float value)
  bool get_PreChangeCoupledBackwards()
  void set_PreChangeCoupledBackwards(bool value)
  void .ctor(TrainCar owner)
  bool IsCoupledTo(TrainCar them)
  bool TryCouple(TrainCar them, Location ourLocation)
  void Uncouple(bool front)
  void GetAll(List`1& result)
  void OnPreCouplingChange()
  void .cctor()
--------------------------------------------------
Класс: TrainEngineAudio
Наследуется от: TrainCarAudio
Поля:
  TrainEngine trainEngine
  Transform cockpitSoundPosition
  Transform hornSoundPosition
  SoundDefinition engineStartSound
  SoundDefinition engineStopSound
  SoundDefinition engineActiveLoopDef
  AnimationCurve engineActiveLoopPitchCurve
  float engineActiveLoopChangeSpeed
  Sound engineActiveLoop
  Modulator engineActiveLoopPitch
  BlendedLoopEngineSound engineLoops
  EngineReflection[] engineReflections
  LayerMask reflectionLayerMask
  float reflectionMaxDistance
  float reflectionGainChangeSpeed
  float reflectionPositionChangeSpeed
  float reflectionRayOffset
  SoundDefinition hornLoop
  SoundDefinition hornStart
  SoundDefinition lightsToggleSound
  SoundDefinition proximityAlertDef
  Sound proximityAlertSound
  SoundDefinition damagedLoopDef
  Sound damagedLoop
  SoundDefinition changeThrottleDef
  SoundDefinition changeCouplingDef
  SoundDefinition unloadableStartDef
  SoundDefinition unloadableEndDef
  GameObject bellObject
  SoundDefinition bellRingDef
  SoundPlayer brakeSound
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TrainTrackSpline
Наследуется от: WorldSpline
Поля:
  bool isStation
  bool aboveGroundSpawn
  int hierarchy
  List`1<TrainTrackSpline> SidingSplines
  List`1<ConnectedTrackInfo> nextTracks
  int straightestNextIndex
  List`1<ConnectedTrackInfo> prevTracks
  int straightestPrevIndex
  HashSet`1<ITrainTrackUser> trackUsers
  HashSet`1<TrainSignal> signals
Свойства:
  bool HasNextTrack
  bool HasPrevTrack
Методы:
  bool get_HasNextTrack()
  bool get_HasPrevTrack()
  void SetAll(Vector3[] points, Vector3[] tangents, TrainTrackSpline sourceSpline)
  MoveResult MoveAlongSpline(float prevSplineDist, Vector3 askerForward, float distMoved, TrackRequest tReq, SplineAction onSpline)
  MoveResult MoveAlongSpline(MoveRequest request, bool facingForward, float prevDistMoved)
  MoveResult MoveToNextSpline(MoveResult result, MoveRequest request, bool facingForward, float splineLength)
  MoveResult MoveToPrevSpline(MoveResult result, MoveRequest request, bool facingForward)
  float GetDistance(Vector3 position, float maxError, Single& minSplineDist)
  float GetLength()
  Vector3 GetPosition(float distance)
  Vector3 GetPositionAndTangent(float distance, Vector3 askerForward, Vector3& tangent)
  void AddTrackConnection(TrainTrackSpline track, TrackPosition p, TrackOrientation o)
  void RegisterTrackUser(ITrainTrackUser user)
  void DeregisterTrackUser(ITrainTrackUser user)
  void RegisterSignal(TrainSignal signal)
  void DeregisterSignal(TrainSignal signal)
  bool IsForward(Vector3 askerForward, float askerSplineDist)
  bool HasValidHazardWithin(TrainCar asker, float askerSplineDist, float minHazardDist, float maxHazardDist, TrackSelection trackSelection, float trackSpeed, TrainTrackSpline preferredAltA, TrainTrackSpline preferredAltB)
  bool HasValidHazardWithin(ITrainTrackUser asker, Vector3 askerForward, float askerSplineDist, float minHazardDist, float maxHazardDist, TrackSelection trackSelection, bool movingForward, TrainTrackSpline preferredAltA, TrainTrackSpline preferredAltB)
  bool HasAnyUsers()
  bool HasAnyUsersOfType(TrainCarType carType)
  bool HasConnectedTrack(TrainTrackSpline tts)
  bool HasConnectedNextTrack(TrainTrackSpline tts)
  bool HasConnectedPrevTrack(TrainTrackSpline tts)
  Vector3 GetInitialVector(TrainTrackSpline track, TrackPosition p, TrackOrientation o)
  void OnDrawGizmosSelected()
  ConnectedTrackInfo GetTrackSelection(List`1<ConnectedTrackInfo> trackOptions, int straightestIndex, bool nextTrack, bool trainForward, TrackRequest request)
  bool TryFindTrackNear(Vector3 pos, float maxDist, TrainTrackSpline& splineResult, Single& distResult)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TrainWagonLootData
Наследуется от: ScriptableObject
Поля:
  LootOption[] oreOptions
  LootOption lootWagonContent
  LootOption fuelWagonContent
  TrainWagonLootData instance
  int LOOT_WAGON_INDEX
  int FUEL_WAGON_INDEX
Свойства:
Методы:
  void Init()
  LootOption GetLootOption(WagonType wagonType, Int32& index)
  bool TryGetLootFromIndex(int index, LootOption& lootOption)
  bool TryGetIndexFromLoot(LootOption lootOption, Int32& index)
  float GetOrePercent(int lootTypeIndex, StorageContainer sc)
  float GetOrePercent(LootOption lootOption, StorageContainer sc)
  void .ctor()
--------------------------------------------------
Класс: TriggerTrainCollisions
Наследуется от: TriggerBase
Поля:
  Collider triggerCollider
  Location location
  TrainCar owner
  HashSet`1<GameObject> staticContents
  HashSet`1<TrainCar> trainContents
  HashSet`1<Rigidbody> otherRigidbodyContents
  HashSet`1<Collider> colliderContents
  float TICK_RATE
Свойства:
  bool HasAnyStaticContents
  bool HasAnyTrainContents
  bool HasAnyOtherRigidbodyContents
  bool HasAnyNonStaticContents
Методы:
  bool get_HasAnyStaticContents()
  bool get_HasAnyTrainContents()
  bool get_HasAnyOtherRigidbodyContents()
  bool get_HasAnyNonStaticContents()
  void OnObjectAdded(GameObject obj, Collider col)
  void OnObjectRemoved(GameObject obj)
  void TrainContentsTick()
  void .ctor()
  bool <OnObjectRemoved>g__HasAnotherColliderFor|18_0(T component)
--------------------------------------------------
Класс: VisualCarWheel
Наследуется от: CarWheel
Поля:
  Transform visualWheel
  Transform visualWheelSteering
  bool visualPowerWheel
  ParticleSystem snowFX
  ParticleSystem sandFX
  ParticleSystem dirtFX
  ParticleSystem asphaltFX
  ParticleSystem waterFX
  ParticleSystem snowSpinFX
  ParticleSystem sandSpinFX
  ParticleSystem dirtSpinFX
  ParticleSystem asphaltSpinFX
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VehicleChassisVisuals`1
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IEngineControllerUser
Поля:
Свойства:
Методы:
  bool HasFlag(Flags f)
  bool IsDead()
  void SetFlag(Flags f, bool b, bool recursive, bool networkupdate)
  void Invoke(Action action, float time)
  void CancelInvoke(Action action)
  void OnEngineStartFailed()
  bool MeetsEngineRequirements()
--------------------------------------------------
Класс: VehicleEngineController`1
Наследуется от: object
Поля:
  EntityFuelSystem <FuelSystem>k__BackingField
  TOwner owner
  bool isServer
  float engineStartupTime
  Transform waterloggedPoint
  Flags engineStartingFlag
Свойства:
  EngineState<TOwner> CurEngineState
  bool IsOn
  bool IsOff
  bool IsStarting
  bool IsStartingOrOn
  EntityFuelSystem FuelSystem
Методы:
  EngineState<TOwner> get_CurEngineState()
  bool get_IsOn()
  bool get_IsOff()
  bool get_IsStarting()
  bool get_IsStartingOrOn()
  EntityFuelSystem get_FuelSystem()
  void set_FuelSystem(EntityFuelSystem value)
  void .ctor(TOwner owner, bool isServer, float engineStartupTime, GameObjectRef fuelStoragePrefab, Transform waterloggedPoint, Flags engineStartingFlag)
  EngineState<TOwner> EngineStateFrom(Flags flags)
  void TryStartEngine(BasePlayer player)
  void FinishStartingEngine()
  void StopEngine()
  void CheckEngineState()
  bool CanRunEngine()
  bool IsWaterlogged()
  int TickFuel(float fuelPerSecond)
  void CancelEngineStart()
--------------------------------------------------
Класс: VehicleTerrainHandler
Наследуется от: object
Поля:
  string CurGroundPhysicsMatName
  Surface OnSurface
  bool IsGrounded
  float RayLength
  String[] TerrainRoad
  float SECONDS_BETWEEN_TERRAIN_SAMPLE
  TimeSince timeSinceTerrainCheck
  BaseVehicle vehicle
Свойства:
  bool IsOnSnowOrIce
Методы:
  bool get_IsOnSnowOrIce()
  void .ctor(BaseVehicle vehicle)
  void FixedUpdate()
  void DoTerrainCheck()
  bool GetOnRoad(string physicMat)
--------------------------------------------------
Класс: IPoolVehicle
Поля:
Свойства:
Методы:
  void OnPoolDestroyed()
  void WakeUp()
--------------------------------------------------
Класс: DeployGuide
Наследуется от: BaseMonoBehaviour
Поля:
  DeployGuide current
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DroppedItem
Наследуется от: WorldItem
Поля:
  GameObject itemModel
  Collider childCollider
  Rigidbody rB
  int INTERACTION_ONLY_LAYER
  DropReasonEnum DropReason
  ulong DroppedBy
Свойства:
Методы:
  float GetNetworkTime()
  void ServerInit()
  float GetDespawnDuration()
  void IdleDestroy()
  void OnCollision(Collision collision, BaseEntity hitEntity)
  void FellThroughTerrainInvoke()
  void FellThroughTerrainInvoke2()
  bool CheckFellThroughTerrain()
  void OnDroppedOn(DroppedItem di)
  void OnParentChanging(BaseEntity oldParent, BaseEntity newParent)
  void OnParentRemoved()
  void GoKinematic()
  bool TransformHasMoved()
  void PostInitShared()
  void OnParented()
  void EnableCollider()
  bool ShouldInheritNetworkGroup()
  void .ctor()
--------------------------------------------------
Класс: ItemPickup
Наследуется от: DroppedItem
Поля:
  ItemDefinition itemDef
  int amount
  ulong skinOverride
Свойства:
Методы:
  float GetDespawnDuration()
  void Spawn()
  void DoServerDestroy()
  void PostServerLoad()
  void .ctor()
--------------------------------------------------
Класс: ANDSwitch
Наследуется от: IOEntity
Поля:
  int input1Amount
  int input2Amount
Свойства:
Методы:
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void UpdateFromInput(int inputAmount, int slot)
  void .ctor()
--------------------------------------------------
Класс: ISubscribable
Поля:
Свойства:
Методы:
  bool AddSubscription(ulong steamId)
  bool RemoveSubscription(ulong steamId)
  bool HasSubscription(ulong steamId)
--------------------------------------------------
Класс: StorageMonitor
Наследуется от: AppIOEntity
Поля:
  Action`2<Item, bool> _onContainerChangedHandler
  Action _resetSwitchHandler
  double _lastPowerOnUpdate
Свойства:
  AppEntityType Type
  bool Value
Методы:
  AppEntityType get_Type()
  bool get_Value()
  void set_Value(bool value)
  void .ctor()
  void FillEntityPayload(AppEntityPayload payload)
  void Init()
  void DestroyShared()
  StorageContainer GetStorageContainer()
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void OnContainerChanged(Item item, bool added)
  void ResetSwitch()
--------------------------------------------------
Класс: DoorManipulator
Наследуется от: IOEntity
Поля:
  EntityRef entityRef
  Door targetDoor
  DoorEffect powerAction
  bool toggle
Свойства:
Методы:
  bool PairWithLockedDoors()
  void SetTargetDoor(Door newTargetDoor)
  void SetupInitialDoorConnection()
  void Init()
  Door FindDoor(bool allowLocked)
  void DoActionDoorMissing()
  void DoAction()
  void IOStateChanged(int inputAmount, int inputSlot)
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: DummySwitch
Наследуется от: IOEntity
Поля:
  string listenString
  string listenStringOff
  float duration
Свойства:
Методы:
  bool WantsPower()
  void ResetIOState()
  int GetPassthroughAmount(int outputSlot)
  void SetOn(bool wantsOn)
  void SetOff()
  void OnEntityMessage(BaseEntity from, string msg)
  void .ctor()
--------------------------------------------------
Класс: ElectricFurnaceIO
Наследуется от: IOEntity
Поля:
  int PowerConsumption
Свойства:
  ItemContainer Container
  BaseEntity IndustrialEntity
Методы:
  int ConsumptionAmount()
  int DesiredPower()
  void OnFlagsChanged(Flags old, Flags next)
  void UpdateHasPower(int inputAmount, int inputSlot)
  ElectricOven GetParentOven()
  ItemContainer get_Container()
  Vector2i InputSlotRange(int slotIndex)
  Vector2i OutputSlotRange(int slotIndex)
  void OnStorageItemTransferBegin()
  void OnStorageItemTransferEnd()
  BaseEntity get_IndustrialEntity()
  void .ctor()
--------------------------------------------------
Класс: ElectricGenerator
Наследуется от: IOEntity
Поля:
  float electricAmount
Свойства:
Методы:
  bool IsRootEntity()
  int MaximalPowerOutput()
  int ConsumptionAmount()
  int GetCurrentEnergy()
  int GetPassthroughAmount(int outputSlot)
  void UpdateOutputs()
  void IOStateChanged(int inputAmount, int inputSlot)
  void PostServerLoad()
  void ForcePuzzleReset()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: ElevatorIOEntity
Наследуется от: IOEntity
Поля:
  int Consumption
Свойства:
Методы:
  int ConsumptionAmount()
  void .ctor()
--------------------------------------------------
Класс: FluidSwitch
Наследуется от: ElectricSwitch
Поля:
  Flags Flag_PumpPowered
  Animator PumpAnimator
  bool pumpEnabled
  int lastToggleInput
Свойства:
  bool IsGravitySource
  bool DisregardGravityRestrictionsOnLiquid
Методы:
  void ResetState()
  void IOStateChanged(int inputAmount, int inputSlot)
  void SetSwitch(bool wantsOn)
  void DelayedSendChanged()
  int GetPassthroughAmount(int outputSlot)
  int ConsumptionAmount()
  bool get_IsGravitySource()
  bool get_DisregardGravityRestrictionsOnLiquid()
  bool AllowLiquidPassthrough(IOEntity fromSource, Vector3 sourceWorldPosition, bool forPlacement)
  void .ctor()
--------------------------------------------------
Класс: FuseBox
Наследуется от: IOEntity
Поля:
Свойства:
Методы:
  void IOStateChanged(int inputAmount, int inputSlot)
  void .ctor()
--------------------------------------------------
Класс: ORSwitch
Наследуется от: IOEntity
Поля:
  int input1Amount
  int input2Amount
Свойства:
Методы:
  bool WantsPassthroughPower()
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  void UpdateFromInput(int inputAmount, int slot)
  void .ctor()
--------------------------------------------------
Класс: PressButton_TrainTunnel
Наследуется от: PressButton
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SimpleLight
Наследуется от: IOEntity
Поля:
Свойства:
Методы:
  void ResetIOState()
  void IOStateChanged(int inputAmount, int inputSlot)
  void .ctor()
--------------------------------------------------
Класс: Splitter
Наследуется от: IOEntity
Поля:
Свойства:
  bool BlockFluidDraining
Методы:
  bool get_BlockFluidDraining()
  bool IsRootEntity()
  void OnCircuitChanged(bool forceUpdate)
  void .ctor()
--------------------------------------------------
Класс: XORSwitch
Наследуется от: IOEntity
Поля:
  int input1Amount
  int input2Amount
  bool firstRun
Свойства:
Методы:
  void ResetState()
  int GetPassthroughAmount(int outputSlot)
  void UpdateHasPower(int inputAmount, int inputSlot)
  void IOStateChanged(int inputAmount, int inputSlot)
  void UpdateFromInput(int inputAmount, int slot)
  void UpdateFlags()
  void .ctor()
--------------------------------------------------
Класс: IndustrialEntity
Наследуется от: IOEntity
Поля:
  IndustrialProcessQueue Queue
Свойства:
Методы:
  void RunJob()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: IIndustrialStorage
Поля:
Свойства:
  ItemContainer Container
  BaseEntity IndustrialEntity
Методы:
  ItemContainer get_Container()
  Vector2i InputSlotRange(int slotIndex)
  Vector2i OutputSlotRange(int slotIndex)
  void OnStorageItemTransferBegin()
  void OnStorageItemTransferEnd()
  BaseEntity get_IndustrialEntity()
--------------------------------------------------
Класс: IndustrialFilterBuffer
Наследуется от: MonoBehaviour
Поля:
  RustText ItemName
  Image ItemIcon
  GameObject BlueprintRoot
  RustSlider BufferSlider
  RustText BufferProgressText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IndustrialFilterDialog
Наследуется от: UIDialog
Поля:
  GameObjectRef ItemPrefab
  Transform ItemParent
  GameObject ItemSearchParent
  ItemSearchEntry ItemSearchEntryPrefab
  VirtualItemIcon TargetItemIcon
  GameObject TargetCategoryRoot
  RustText TargetCategoryText
  Image TargetCategoryImage
  GameObject NoItemsPrompt
  Dropdown FilterModeDropdown
  GameObject[] FilterModeExplanations
  GameObject FilterModeBlocker
  RustText FilterCountText
  GameObject BufferRoot
  GameObjectRef BufferItemPrefab
  Transform BufferTransform
  RustButton PasteButton
  GameObject[] RegularCopyPasteButtons
  GameObject[] JsonCopyPasteButtons
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IndustrialFilterItemIcon
Наследуется от: MonoBehaviour
Поля:
  Image ItemIcon
  RustText ItemName
  RustInput MaxInput
  RustInput BufferInput
  RustInput MinInput
  GameObject BlueprintIcon
  GameObject InverseModeBlocker
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IndustrialStorageAdaptor
Наследуется от: IndustrialEntity
Поля:
  GameObject GreenLight
  GameObject RedLight
  BaseEntity _cachedParent
  ItemContainer cachedContainer
Свойства:
  BaseEntity cachedParent
  ItemContainer Container
  BaseEntity IndustrialEntity
Методы:
  BaseEntity get_cachedParent()
  ItemContainer get_Container()
  void ServerInit()
  Vector2i InputSlotRange(int slotIndex)
  Vector2i OutputSlotRange(int slotIndex)
  void OnStorageItemTransferBegin()
  void OnStorageItemTransferEnd()
  BaseEntity get_IndustrialEntity()
  int ConsumptionAmount()
  void ClientNotifyItemAddRemoved(bool add)
  void .ctor()
--------------------------------------------------
Класс: IOEntityMovementChecker
Наследуется от: FacepunchBehaviour
Поля:
  IOEntity ioEntity
  Vector3 prevPos
  float MAX_MOVE
  float MAX_MOVE_SQR
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void OnDisable()
  void CheckPosition()
  void .ctor()
--------------------------------------------------
Класс: IOManager
Наследуется от: SingletonComponent`1<IOManager>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProgressDoor
Наследуется от: IOEntity
Поля:
  float storedEnergy
  float energyForOpen
  float secondsToClose
  float openProgress
Свойства:
Методы:
  void ResetIOState()
  float IOInput(IOEntity from, IOType inputType, float inputAmount, int slot)
  void NoEnergy()
  void AddEnergy(float amount)
  void UpdateProgress()
  void .ctor()
--------------------------------------------------
Класс: SlidingProgressDoor
Наследуется от: ProgressDoor
Поля:
  Vector3 openPosition
  Vector3 closedPosition
  GameObject doorObject
  TriggerVehiclePush vehiclePhysBox
  float lastEnergyTime
  float lastServerUpdateTime
Свойства:
Методы:
  void Spawn()
  void NoEnergy()
  void AddEnergy(float amount)
  void ServerUpdate()
  void UpdateProgress()
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: NoPlayersIOReset
Наследуется от: FacepunchBehaviour
Поля:
  IOEntity[] entitiesToReset
  float radius
  float timeBetweenChecks
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void Check()
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: PuzzleReset
Наследуется от: FacepunchBehaviour
Поля:
  SpawnGroup[] respawnGroups
  IOEntity[] resetEnts
  GameObject[] resetObjects
  bool playersBlockReset
  bool CheckSleepingAIZForPlayers
  float playerDetectionRadius
  float playerHeightDetectionMinMax
  Transform playerDetectionOrigin
  float timeBetweenResets
  bool scaleWithServerPopulation
  Vector3[] resetPositions
  bool broadcastResetMessage
  Phrase resetPhrase
  AIInformationZone zone
  float resetTimeElapsed
  float resetTickTime
Свойства:
Методы:
  float GetResetSpacing()
  void Start()
  void ResetTimer()
  bool PassesResetCheck()
  bool AIZSleeping()
  bool PlayersWithinDistance()
  bool AnyPlayersWithinDistance(Transform origin, float radius)
  void ResetTick()
  void CleanupSleepers()
  void DoReset()
  void ResetIOEntRecursive(IOEntity target, int resetIndex)
  void .ctor()
--------------------------------------------------
Класс: FrequencyConfig
Наследуется от: UIDialog
Поля:
  IRFObject rfObject
  InputField input
  int target
  ItemContainer tempContainer
  ItemId tempItemID
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IRFObject
Поля:
Свойства:
Методы:
  Vector3 GetPosition()
  float GetMaxRange()
  void RFSignalUpdate(bool on)
  int GetFrequency()
--------------------------------------------------
Класс: RFManager
Наследуется от: object
Поля:
  Dictionary`2<int, List`1<IRFObject>> _listeners
  Dictionary`2<int, List`1<IRFObject>> _broadcasters
  int minFreq
  int maxFreq
  int reserveRangeMin
  int reserveRangeMax
  string reserveString
Свойства:
Методы:
  int ClampFrequency(int freq)
  List`1<IRFObject> GetListenList(int frequency)
  List`1<IRFObject> GetBroadcasterList(int frequency)
  void AddListener(int frequency, IRFObject obj)
  void RemoveListener(int frequency, IRFObject obj)
  void AddBroadcaster(int frequency, IRFObject obj)
  void RemoveBroadcaster(int frequency, IRFObject obj)
  bool IsReserved(int frequency)
  void ReserveErrorPrint(BasePlayer player)
  void ChangeFrequency(int oldFrequency, int newFrequency, IRFObject obj, bool isListener, bool isOn)
  void MarkFrequencyDirty(int frequency)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: BaseHuntEvent
Наследуется от: BaseEntity
Поля:
  GameObjectRef[] HuntablePrefab
  AudioSource huntStartSound
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CargoPlane
Наследуется от: BaseEntity
Поля:
  GameObjectRef prefabDrop
  SpawnFilter filter
  Vector3 startPos
  Vector3 endPos
  float secondsToTake
  float secondsTaken
  bool dropped
  Vector3 dropPosition
Свойства:
Методы:
  void ServerInit()
  void PostServerLoad()
  void Initialize()
  void InitDropPosition(Vector3 newDropPosition)
  Vector3 RandomDropPosition()
  void UpdateDropPosition(Vector3 newDropPosition)
  void Update()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void .ctor()
--------------------------------------------------
Класс: RoadBradleys
Наследуется от: TriggeredEvent
Поля:
  List`1<BradleyAPC> spawnedAPCs
Свойства:
Методы:
  int GetNumBradleys()
  int GetDesiredNumber()
  void CleanList()
  void RunEvent()
  void .ctor()
--------------------------------------------------
Класс: EventSchedule
Наследуется от: BaseMonoBehaviour
Поля:
  float minimumHoursBetween
  float maxmumHoursBetween
  float hoursRemaining
  long lastRun
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void RunSchedule()
  void Trigger()
  void CountHours()
  void .ctor()
--------------------------------------------------
Класс: EventScheduleWipeOffset
Наследуется от: EventSchedule
Поля:
  float hoursBeforeWipeRealtime
Свойства:
Методы:
  void RunSchedule()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TriggeredEvent
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TriggeredEventPrefab
Наследуется от: TriggeredEvent
Поля:
  GameObjectRef targetPrefab
  bool shouldBroadcastSpawn
  Phrase spawnPhrase
Свойства:
Методы:
  void RunEvent()
  void .ctor()
--------------------------------------------------
Класс: Bootstrap
Наследуется от: SingletonComponent`1<Bootstrap>
Поля:
  bool bootstrapInitRun
  bool isErrored
  string messageString
  CanvasGroup BootstrapUiCanvas
  GameObject errorPanel
  TextMeshProUGUI errorText
  TextMeshProUGUI statusText
  string lastWrittenValue
Свойства:
  bool needsSetup
  bool isPresent
Методы:
  bool get_needsSetup()
  bool get_isPresent()
  void RunDefaults()
  void Init_Tier0()
  void Init_Systems()
  void Init_Config()
  void NetworkInitRaknet()
  void NetworkInitSteamworks(bool enableSteamDatagramRelay)
  IEnumerator Start()
  IEnumerator DedicatedServerStartup()
  void EnsureRootFolderCreated()
  IEnumerator StartNexusServer()
  IEnumerator StartServer(bool doLoad, string saveFileOverride, bool allowOutOfDateSaves)
  void StartupShared()
  void ThrowError(string error)
  void ExitGame()
  IEnumerator LoadingUpdate(string str)
  void WriteToLog(string str)
  void .ctor()
--------------------------------------------------
Класс: SelfCheck
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Run()
  bool Failed(string Message)
  bool TestRustNative()
  bool RustNative_VersionCheck(int version)
--------------------------------------------------
Класс: BuildingManager
Наследуется от: object
Поля:
  ServerBuildingManager server
  ListHashSet`1<DecayEntity> decayEntities
  ListDictionary`2<UInt32, Building> buildingDictionary
Свойства:
Методы:
  Building GetBuilding(UInt32 buildingID)
  void Add(DecayEntity ent)
  void Remove(DecayEntity ent)
  void Clear()
  Building CreateBuilding(UInt32 id)
  void DisposeBuilding(Building& building)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ServerBuildingManager
Наследуется от: BuildingManager
Поля:
  int decayTickBuildingIndex
  int decayTickEntityIndex
  int decayTickWorldIndex
  int navmeshCarveTickBuildingIndex
  UInt32 maxBuildingID
Свойства:
Методы:
  void CheckSplit(DecayEntity ent)
  bool ShouldSplit(Building building)
  void Split(Building building)
  void CheckMerge(DecayEntity ent)
  void Merge(Building building1, Building building2)
  void Cycle()
  void UpdateNavMeshCarver(Building building, Int32& ticks, int i)
  UInt32 NewBuildingID()
  void LoadBuildingID(UInt32 id)
  Building CreateBuilding(UInt32 id)
  void DisposeBuilding(Building& building)
  void .ctor()
--------------------------------------------------
Класс: ClanAsyncResult`1
Наследуется от: object
Поля:
  List`1<Action`1<T>> _callbacks
  Stopwatch _sinceStarted
  bool _isComplete
  T _result
Свойства:
  bool IsStarted
  float Elapsed
  bool IsComplete
Методы:
  bool get_IsStarted()
  float get_Elapsed()
  bool get_IsComplete()
  void Start()
  bool TrySetResult(T result)
  void OnComplete(Action`1<T> callback)
  void Reset()
  void Facepunch.Pool.IPooled.EnterPool()
  void Facepunch.Pool.IPooled.LeavePool()
  void .ctor()
--------------------------------------------------
Класс: ClanChangeTracker
Наследуется от: object
Поля:
  ClanManager _clanManager
  List`1<ClanChangedEvent> _clanChangedEvents
  List`1<ClanDisbandedEvent> _clanDisbandedEvents
  List`1<InvitationCreatedEvent> _invitationCreatedEvents
  List`1<MembershipChangedEvent> _membershipChangedEvents
  List`1<ChatMessageEvent> _chatMessageEvents
Свойства:
Методы:
  void .ctor(ClanManager clanManager)
  void HandleEvents()
  void HandleClanChanged(ClanChangedEvent& data)
  void HandleClanDisbanded(ClanDisbandedEvent& data)
  void HandleInvitationCreated(InvitationCreatedEvent& data)
  void HandleMembershipChanged(MembershipChangedEvent& data)
  void HandleChatMessageEvent(ChatMessageEvent& data)
  void ClanChanged(long clanId, ClanDataSource dataSources)
  void ClanDisbanded(long clanId)
  void InvitationCreated(ulong steamId, long clanId)
  void MembershipChanged(ulong steamId, Nullable`1<long> clanId)
  void ClanChatMessage(long clanId, ClanChatEntry entry)
--------------------------------------------------
Класс: ClanInfoExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ClanInfo ToProto(IClan clan)
  Role ToProto(ClanRole role)
  ClanRole FromProto(Role proto)
  Member ToProto(ClanMember member)
  Invite ToProto(ClanInvite invite)
--------------------------------------------------
Класс: ClanInvitationExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ClanInvitations ToProto(List`1<ClanInvitation> invitations)
  Invitation ToProto(ClanInvitation invitation)
--------------------------------------------------
Класс: ClanLogExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  ClanLog ToProto(ClanLogs clanLogs)
--------------------------------------------------
Класс: ClanMetadata
Наследуется от: ValueType
Поля:
  long ClanId
  string Name
  int Members
  Color32 Color
Свойства:
Методы:
--------------------------------------------------
Класс: ClanPushNotifications
Наследуется от: object
Поля:
Свойства:
Методы:
  void SendClanAnnouncement(IClan clan, long previousTimestamp, ulong ignorePlayer)
--------------------------------------------------
Класс: Climate
Наследуется от: SingletonComponent`1<Climate>
Поля:
  float fadeAngle
  float defaultTemp
  int weatherDurationHours
  int weatherFadeHours
  float BlendingSpeed
  float FogMultiplier
  float FogDarknessDistance
  bool DebugLUTBlending
  WeatherParameters Weather
  WeatherPreset[] WeatherPresets
  ClimateParameters Arid
  ClimateParameters Temperate
  ClimateParameters Tundra
  ClimateParameters Arctic
  float <WeatherStateBlend>k__BackingField
  UInt32 <WeatherSeedPrevious>k__BackingField
  UInt32 <WeatherSeedTarget>k__BackingField
  UInt32 <WeatherSeedNext>k__BackingField
  WeatherPreset <WeatherStatePrevious>k__BackingField
  WeatherPreset <WeatherStateTarget>k__BackingField
  WeatherPreset <WeatherStateNext>k__BackingField
  WeatherPreset <WeatherState>k__BackingField
  WeatherPreset <WeatherClampsMin>k__BackingField
  WeatherPreset <WeatherClampsMax>k__BackingField
  WeatherPreset <WeatherOverrides>k__BackingField
  LegacyWeatherState <Overrides>k__BackingField
  Dictionary`2<WeatherPresetType, WeatherPreset[]> presetLookup
  ClimateParameters[] climateLookup
Свойства:
  float WeatherStateBlend
  UInt32 WeatherSeedPrevious
  UInt32 WeatherSeedTarget
  UInt32 WeatherSeedNext
  WeatherPreset WeatherStatePrevious
  WeatherPreset WeatherStateTarget
  WeatherPreset WeatherStateNext
  WeatherPreset WeatherState
  WeatherPreset WeatherClampsMin
  WeatherPreset WeatherClampsMax
  WeatherPreset WeatherOverrides
  LegacyWeatherState Overrides
Методы:
  float get_WeatherStateBlend()
  void set_WeatherStateBlend(float value)
  UInt32 get_WeatherSeedPrevious()
  void set_WeatherSeedPrevious(UInt32 value)
  UInt32 get_WeatherSeedTarget()
  void set_WeatherSeedTarget(UInt32 value)
  UInt32 get_WeatherSeedNext()
  void set_WeatherSeedNext(UInt32 value)
  WeatherPreset get_WeatherStatePrevious()
  void set_WeatherStatePrevious(WeatherPreset value)
  WeatherPreset get_WeatherStateTarget()
  void set_WeatherStateTarget(WeatherPreset value)
  WeatherPreset get_WeatherStateNext()
  void set_WeatherStateNext(WeatherPreset value)
  WeatherPreset get_WeatherState()
  void set_WeatherState(WeatherPreset value)
  WeatherPreset get_WeatherClampsMin()
  void set_WeatherClampsMin(WeatherPreset value)
  WeatherPreset get_WeatherClampsMax()
  void set_WeatherClampsMax(WeatherPreset value)
  WeatherPreset get_WeatherOverrides()
  void set_WeatherOverrides(WeatherPreset value)
  LegacyWeatherState get_Overrides()
  void set_Overrides(LegacyWeatherState value)
  void Awake()
  void OnDestroy()
  void Update()
  bool Initialized()
  float GetClouds(Vector3 position)
  float GetFog(Vector3 position)
  float GetWind(Vector3 position)
  float GetThunder(Vector3 position)
  float GetRainbow(Vector3 position)
  float GetAurora(Vector3 position)
  float GetRain(Vector3 position)
  float GetSnow(Vector3 position)
  float GetTemperature(Vector3 position)
  UInt32 GetSeedFromLong(long val)
  WeatherPreset GetWeatherPreset(UInt32 seed)
  WeatherPreset GetWeatherPreset(UInt32 seed, WeatherPresetType type)
  WeatherPreset[] CacheWeatherPresets(WeatherPresetType type)
  float FindBlendParameters(Vector3 pos, ClimateParameters& src, ClimateParameters& dst)
  void .ctor()
--------------------------------------------------
Класс: ColliderInfo
Наследуется от: MonoBehaviour
Поля:
  Flags FlagsNone
  Flags FlagsEverything
  Flags FlagsDefault
  Flags flags
Свойства:
Методы:
  bool HasFlag(Flags f)
  void SetFlag(Flags f, bool b)
  bool Filter(HitTest info)
  void .ctor()
--------------------------------------------------
Класс: ColliderInfo_Pipe
Наследуется от: ColliderInfo
Поля:
  int OutputSlotIndex
  IOEntity ParentEntity
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConditionalGibbable
Наследуется от: MonoBehaviour
Поля:
  int id
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CreateEffect
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef EffectToCreate
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: CreationGibSpawner
Наследуется от: BaseMonoBehaviour
Поля:
  GameObject gibSource
  GameObject gibsInstance
  float startTime
  float duration
  float buildScaleAdditionalAmount
  AnimationCurve scaleCurve
  AnimationCurve buildCurve
  AnimationCurve buildScaleCurve
  AnimationCurve xCurve
  AnimationCurve yCurve
  AnimationCurve zCurve
  Vector3[] spawnPositions
  GameObject[] particles
  Single[] gibProgress
  PhysicMaterial physMaterial
  List`1<Transform> gibs
  bool started
  GameObjectRef placeEffect
  GameObject smokeEffect
  float effectSpacing
  bool invert
  Vector3 buildDirection
  GibReplacement[] GibReplacements
  EffectMaterialPair[] effectLookup
  float startDelay
  List`1<ConditionalGibSource> conditionalGibSources
  float nextEffectTime
Свойства:
Методы:
  GameObjectRef GetEffectForMaterial(PhysicMaterial mat)
  void SetDelay(float newDelay)
  void FinishSpawn()
  float GetProgress(float delay)
  void AddConditionalGibSource(GameObject cGibSource, Vector3 pos, Quaternion rot)
  void SetGibSource(GameObject newGibSource)
  int SortsGibs(Transform a, Transform b)
  void Init()
  float GetPushDir(Vector3 spawnPos, Transform theGib)
  void DestroyMe()
  float GetStartDelay(Transform gib)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: CullingManager
Наследуется от: SingletonComponent`1<CullingManager>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CullingVolume
Наследуется от: MonoBehaviour
Поля:
  GameObject OccludeeRoot
  bool Invert
  bool Portal
  List`1<CullingVolume> Connections
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Deployable
Наследуется от: PrefabAttribute
Поля:
  Mesh guideMesh
  Vector3 guideMeshScale
  bool guideLights
  bool wantsInstanceData
  bool copyInventoryFromItem
  bool setSocketParent
  bool toSlot
  Slot slot
  GameObjectRef placeEffect
  Bounds bounds
Свойства:
Методы:
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DeployShell
Наследуется от: PrefabAttribute
Поля:
  Bounds bounds
Свойства:
Методы:
  OBB WorldSpaceBounds(Transform transform)
  float LineOfSightPadding()
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DeployVolume
Наследуется от: PrefabAttribute
Поля:
  LayerMask layers
  Flags ignore
  EntityMode entityMode
  BaseEntity[] entityList
  EntityListScriptableObject[] entityGroups
  bool <IsBuildingBlock>k__BackingField
  Collider <LastDeployHit>k__BackingField
Свойства:
  bool IsBuildingBlock
  Collider LastDeployHit
Методы:
  bool get_IsBuildingBlock()
  void set_IsBuildingBlock(bool value)
  Type GetIndexedType()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool Check(Vector3 position, Quaternion rotation, int mask)
  bool Check(Vector3 position, Quaternion rotation, OBB test, int mask)
  bool Check(Vector3 position, Quaternion rotation, DeployVolume[] volumes, int mask)
  bool Check(Vector3 position, Quaternion rotation, DeployVolume[] volumes, OBB test, int mask)
  bool CheckSphere(Vector3 pos, float radius, int layerMask, DeployVolume volume)
  bool CheckCapsule(Vector3 start, Vector3 end, float radius, int layerMask, DeployVolume volume)
  bool CheckOBB(OBB obb, int layerMask, DeployVolume volume)
  bool CheckBounds(Bounds bounds, int layerMask, DeployVolume volume)
  Collider get_LastDeployHit()
  void set_LastDeployHit(Collider value)
  bool CheckFlags(List`1<Collider> list, DeployVolume volume)
  bool CheckEntityList(BaseEntity entity, BaseEntity[] entities, bool whitelist)
  void .ctor()
--------------------------------------------------
Класс: DeployVolumeCapsule
Наследуется от: DeployVolume
Поля:
  Vector3 center
  float radius
  float height
Свойства:
Методы:
  bool Check(Vector3 position, Quaternion rotation, int mask)
  bool Check(Vector3 position, Quaternion rotation, OBB obb, int mask)
  void .ctor()
--------------------------------------------------
Класс: DeployVolumeEntityBounds
Наследуется от: DeployVolume
Поля:
  Bounds bounds
Свойства:
Методы:
  bool Check(Vector3 position, Quaternion rotation, int mask)
  bool Check(Vector3 position, Quaternion rotation, OBB obb, int mask)
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: DeployVolumeEntityBoundsReverse
Наследуется от: DeployVolume
Поля:
  Bounds bounds
  int layer
Свойства:
Методы:
  bool Check(Vector3 position, Quaternion rotation, int mask)
  bool Check(Vector3 position, Quaternion rotation, OBB test, int mask)
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: DeployVolumeOBB
Наследуется от: DeployVolume
Поля:
  Bounds bounds
Свойства:
Методы:
  bool Check(Vector3 position, Quaternion rotation, int mask)
  bool Check(Vector3 position, Quaternion rotation, OBB test, int mask)
  void .ctor()
--------------------------------------------------
Класс: DeployVolumeSphere
Наследуется от: DeployVolume
Поля:
  Vector3 center
  float radius
Свойства:
Методы:
  bool Check(Vector3 position, Quaternion rotation, int mask)
  bool Check(Vector3 position, Quaternion rotation, OBB obb, int mask)
  void .ctor()
--------------------------------------------------
Класс: EntityListScriptableObject
Наследуется от: ScriptableObject
Поля:
  BaseEntity[] entities
  bool whitelist
Свойства:
Методы:
  bool IsInList(UInt32 prefabId)
  void .ctor()
--------------------------------------------------
Класс: PreventBuildingMonumentTag
Наследуется от: MonoBehaviour
Поля:
  MonumentInfo AttachedMonument
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DestroyOnGroundMissing
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void OnGroundMissing()
  void .ctor()
--------------------------------------------------
Класс: DetachMonumentChildren
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: EffectBlood
Наследуется от: EffectRecycle
Поля:
  GameObjectRef ReplacementEffect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectDictionary
Наследуется от: object
Поля:
  Dictionary`2<string, String[]> effectDictionary
Свойства:
Методы:
  string GetParticle(string impactType, string materialName)
  string GetParticle(DamageType damageType, string materialName)
  string GetDecal(string impactType, string materialName)
  string GetDecal(DamageType damageType, string materialName)
  string GetDisplacement(string impactType, string materialName)
  string LookupEffect(string category, string effect, string material)
  void .ctor()
--------------------------------------------------
Класс: EffectRecycle
Наследуется от: BaseMonoBehaviour
Поля:
  float detachTime
  float recycleTime
  PlayMode playMode
  ParentDestroyBehaviour onParentDestroyed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectRecycleDetach
Наследуется от: BaseMonoBehaviour
Поля:
  float recycleTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EffectRecycleLite
Наследуется от: BasePrefab
Поля:
  float lifeTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EnvironmentManager
Наследуется от: SingletonComponent`1<EnvironmentManager>
Поля:
Свойства:
Методы:
  EnvironmentType Get(OBB obb)
  EnvironmentType Get(Vector3 pos, List`1& list)
  EnvironmentType Get(Vector3 pos)
  bool Check(OBB obb, EnvironmentType type)
  bool Check(Vector3 pos, EnvironmentType type)
  void .ctor()
--------------------------------------------------
Класс: EnvironmentType
Наследуется от: Enum
Поля:
  int value__
  EnvironmentType Underground
  EnvironmentType Building
  EnvironmentType Outdoor
  EnvironmentType Elevator
  EnvironmentType PlayerConstruction
  EnvironmentType TrainTunnels
  EnvironmentType UnderwaterLab
  EnvironmentType Submarine
  EnvironmentType BuildingDark
  EnvironmentType BuildingVeryDark
  EnvironmentType NoSunlight
Свойства:
Методы:
--------------------------------------------------
Класс: EnvironmentVolume
Наследуется от: MonoBehaviour
Поля:
  EnvironmentType Type
  Vector3 Center
  Vector3 Size
  Collider <trigger>k__BackingField
Свойства:
  Collider trigger
Методы:
  Collider get_trigger()
  void set_trigger(Collider value)
  void Awake()
  void OnEnable()
  void OnDisable()
  void UpdateTrigger()
  void .ctor()
--------------------------------------------------
Класс: EnvironmentVolumeEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool CheckEnvironmentVolumes(Transform transform, Vector3 pos, Quaternion rot, Vector3 scale, EnvironmentType type)
  bool CheckEnvironmentVolumes(Transform transform, EnvironmentType type)
  bool CheckEnvironmentVolumesInsideTerrain(Transform transform, Vector3 pos, Quaternion rot, Vector3 scale, EnvironmentType type, float padding)
  bool CheckEnvironmentVolumesInsideTerrain(Transform transform, EnvironmentType type)
  bool CheckEnvironmentVolumesOutsideTerrain(Transform transform, Vector3 pos, Quaternion rot, Vector3 scale, EnvironmentType type, float padding)
  bool CheckEnvironmentVolumesOutsideTerrain(Transform transform, EnvironmentType type)
--------------------------------------------------
Класс: EnvironmentVolumeTrigger
Наследуется от: MonoBehaviour
Поля:
  EnvironmentVolume <volume>k__BackingField
  Vector3 Center
  Vector3 Size
Свойства:
  EnvironmentVolume volume
Методы:
  EnvironmentVolume get_volume()
  void set_volume(EnvironmentVolume value)
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: FoliageGrid
Наследуется от: SingletonComponent`1<FoliageGrid>
Поля:
  bool Paused
  GameObjectRef BatchPrefab
  float CellSize
  LayerSelect FoliageLayer
  ShadowCastingMode FoliageShadows
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FoliagePlacement
Наследуется от: ScriptableObject
Поля:
  float Density
  SpawnFilter Filter
  float FilterCutoff
  float FilterFade
  float FilterScaling
  float RandomScaling
  MinMax Range
  float RangeFade
  float DistanceDensity
  float DistanceScaling
  Material material
  Mesh mesh0
  Mesh mesh1
  Mesh mesh2
  int lods
  int octaves
  float frequency
  float amplitude
  float offset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FoliageRenderer
Наследуется от: MonoBehaviour
Поля:
  Material material
  Mesh LOD0
  Mesh LOD1
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FoliageSpawn
Наследуется от: MonoBehaviour
Поля:
  FoliagePlacement Placement
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GameManager
Наследуется от: object
Поля:
  GameManager server
  PrefabPreProcess preProcessed
  PrefabPoolCollection pool
  bool Clientside
  bool Serverside
Свойства:
Методы:
  void Reset()
  void .ctor(bool clientside, bool serverside)
  GameObject FindPrefab(UInt32 prefabID)
  GameObject FindPrefab(BaseEntity ent)
  GameObject FindPrefab(string strPrefab)
  GameObject CreatePrefab(string strPrefab, Vector3 pos, Quaternion rot, Vector3 scale, bool active)
  GameObject CreatePrefab(string strPrefab, Vector3 pos, Quaternion rot, bool active)
  GameObject CreatePrefab(string strPrefab, bool active)
  GameObject CreatePrefab(string strPrefab, Transform parent, bool active)
  BaseEntity CreateEntity(string strPrefab, Vector3 pos, Quaternion rot, bool startActive)
  GameObject Instantiate(string strPrefab, Vector3 pos, Quaternion rot)
  void Destroy(Component component, float delay)
  void Destroy(GameObject instance, float delay)
  void DestroyImmediate(Component component, bool allowDestroyingAssets)
  void DestroyImmediate(GameObject instance, bool allowDestroyingAssets)
  void Retire(GameObject instance)
  void .cctor()
--------------------------------------------------
Класс: CapturePointTrigger
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: GameModeCapturePoint
Наследуется от: BaseEntity
Поля:
  CapturePointTrigger captureTrigger
  float timeToCapture
  int scorePerSecond
  string scoreName
  float captureFraction
  int captureTeam
  int capturingTeam
  EntityRef capturingPlayer
  EntityRef capturedPlayer
  Flags Flag_Contested
  RustText capturePointText
  RustText captureOwnerName
  Image captureProgressImage
  GameObjectRef progressBeepEffect
  GameObjectRef progressCompleteEffect
  Transform computerPoint
  float nextBeepTime
Свойства:
Методы:
  bool IsContested()
  void ServerInit()
  void Update()
  void AssignPoints()
  void DoCaptureEffect()
  void DoProgressEffect()
  void UpdateCaptureAmount()
  void Save(SaveInfo info)
  void .ctor()
--------------------------------------------------
Класс: GameModeManifest
Наследуется от: ScriptableObject
Поля:
  GameModeManifest instance
  List`1<GameObjectRef> gameModePrefabs
Свойства:
Методы:
  GameModeManifest Get()
  void .ctor()
--------------------------------------------------
Класс: GameModeObjectToggle
Наследуется от: BaseMonoBehaviour
Поля:
  String[] gameModeTags
  String[] tagsToDisable
  GameObject[] toToggle
  bool defaultState
Свойства:
Методы:
  void Awake()
  void OnDestroy()
  void OnGameModeChanged(BaseGameMode newGameMode)
  void SetToggle(bool wantsOn)
  bool ShouldBeVisible(BaseGameMode newGameMode)
  void .ctor()
--------------------------------------------------
Класс: GameModeVanilla
Наследуется от: BaseGameMode
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GameModeHardcore
Наследуется от: GameModeVanilla
Поля:
Свойства:
Методы:
  void OnCreated()
  ResearchCostResult GetScrapCostForResearch(ItemDefinition item, ResearchType researchType)
  void .ctor()
--------------------------------------------------
Класс: GameModeSoftcore
Наследуется от: GameModeVanilla
Поля:
  GameObjectRef reclaimManagerPrefab
  GameObjectRef reclaimBackpackPrefab
  Phrase ReclaimToast
  ItemAmount[] startingGear
  float reclaim_fraction_belt
  float reclaim_fraction_wear
  float reclaim_fraction_main
Свойства:
Методы:
  void OnCreated()
  void AddFractionOfContainer(ItemContainer from, List`1& to, float fraction, bool takeLastItem)
  List`1<Item> RemoveItemsFrom(ItemContainer itemContainer, ItemAmount[] types)
  void ReturnItemsTo(List`1& source, ItemContainer itemContainer)
  void OnPlayerDeath(BasePlayer instigator, BasePlayer victim, HitInfo deathInfo)
  void OnPlayerRespawn(BasePlayer player)
  SleepingBag[] FindSleepingBagsForPlayer(ulong playerID, bool ignoreTimers)
  float CorpseRemovalTime(BaseCorpse corpse)
  void SetInventoryLocked(BasePlayer player, bool wantsLocked)
  void OnPlayerWounded(BasePlayer instigator, BasePlayer victim, HitInfo info)
  void OnPlayerRevived(BasePlayer instigator, BasePlayer victim)
  bool CanMoveItemsFrom(PlayerInventory inv, BaseEntity source, Item item)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ReclaimManager
Наследуется от: BaseEntity
Поля:
  int defaultReclaims
  int reclaimSlotCount
  int lastReclaimID
  float reclaim_expire_minutes
  ReclaimManager _instance
  List`1<PlayerReclaimEntry> entries
  float lastTickTime
Свойства:
  ReclaimManager instance
Методы:
  ReclaimManager get_instance()
  int AddPlayerReclaim(ulong victimID, List`1<Item> itemList, ulong killerID, string killerString, int reclaimIDToUse)
  void DoCleanup()
  void TickEntries()
  bool HasReclaims(ulong playerID)
  PlayerReclaimEntry GetReclaimForPlayer(ulong playerID, int reclaimID)
  bool GetReclaimsForPlayer(ulong playerID, List`1& list)
  PlayerReclaimEntry NewEntry()
  void RemoveEntry(PlayerReclaimEntry entry)
  void Load(LoadInfo info)
  void Save(SaveInfo info)
  void ServerInit()
  void DoServerDestroy()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GameSetup
Наследуется от: MonoBehaviour
Поля:
  bool RunOnce
  bool startServer
  string clientConnectCommand
  bool loadMenu
  bool loadLevel
  string loadLevelScene
  bool loadSave
  string loadSaveFile
  string initializationCommands
  bool normalRendering
Свойства:
Методы:
  void Awake()
  IEnumerator DoGameSetup()
  IEnumerator StartServer()
  void .ctor()
--------------------------------------------------
Класс: Gibbable
Наследуется от: PrefabAttribute
Поля:
  GameObject gibSource
  Material[] customMaterials
  GameObject materialSource
  bool copyMaterialBlock
  bool applyDamageTexture
  PhysicMaterial physicsMaterial
  GameObjectRef fxPrefab
  bool spawnFxPrefab
  bool important
  bool useContinuousCollision
  float explodeScale
  float scaleOverride
  int uniqueId
  BoundsEffectType boundsEffectType
  bool isConditional
  Bounds effectBounds
  List`1<OverrideMesh> MeshOverrides
  bool UsePerGibWaterCheck
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: GroundWatch
Наследуется от: BaseMonoBehaviour
Поля:
  Vector3 groundPosition
  LayerMask layers
  float radius
  BaseEntity[] whitelist
  int fails
Свойства:
Методы:
  void OnDrawGizmosSelected()
  void PhysicsChanged(GameObject obj)
  void PhysicsChanged(Vector3 origin, float radius, int layerMask)
  void OnPhysicsNeighbourChanged()
  bool OnGround()
  void .ctor()
--------------------------------------------------
Класс: HideUntilMobile
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  GameObject[] visuals
  Vector3 startPos
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HitTest
Наследуется от: object
Поля:
  Type type
  Ray AttackRay
  float Radius
  float Forgiveness
  float MaxDistance
  RaycastHit RayHit
  bool MultiHit
  bool BestHit
  bool DidHit
  DamageProperties damageProperties
  GameObject gameObject
  Collider collider
  BaseEntity ignoreEntity
  BaseEntity HitEntity
  Vector3 HitPoint
  Vector3 HitNormal
  float HitDistance
  Transform HitTransform
  UInt32 HitPart
  string HitMaterial
Свойства:
Методы:
  void CopyFrom(HitTest other, bool copyHitInfo)
  Vector3 HitPointWorld()
  Vector3 HitNormalWorld()
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: HitInfo
Наследуется от: object
Поля:
  BaseEntity Initiator
  BaseEntity WeaponPrefab
  AttackEntity Weapon
  bool DoHitEffects
  bool DoDecals
  bool IsPredicting
  bool UseProtection
  Connection Predicted
  bool DidHit
  BaseEntity HitEntity
  UInt32 HitBone
  UInt32 HitPart
  UInt32 HitMaterial
  Vector3 HitPositionWorld
  Vector3 HitPositionLocal
  Vector3 HitNormalWorld
  Vector3 HitNormalLocal
  Vector3 PointStart
  Vector3 PointEnd
  int ProjectileID
  int ProjectileHits
  float ProjectileDistance
  float ProjectileIntegrity
  float ProjectileTravelTime
  float ProjectileTrajectoryMismatch
  Vector3 ProjectileVelocity
  Projectile ProjectilePrefab
  PhysicMaterial material
  DamageProperties damageProperties
  DamageTypeList damageTypes
  bool CanGather
  bool DidGather
  float gatherScale
Свойства:
  BasePlayer InitiatorPlayer
  Vector3 attackNormal
  bool hasDamage
  bool isHeadshot
  Phrase bonePhrase
  string boneName
  HitArea boneArea
Методы:
  bool IsProjectile()
  BasePlayer get_InitiatorPlayer()
  Vector3 get_attackNormal()
  bool get_hasDamage()
  void .ctor()
  void .ctor(BaseEntity attacker, BaseEntity target, DamageType type, float damageAmount, Vector3 vhitPosition)
  void .ctor(BaseEntity attacker, BaseEntity target, DamageType type, float damageAmount)
  void LoadFromAttack(Attack attack, bool serverSide)
  bool get_isHeadshot()
  Phrase get_bonePhrase()
  string get_boneName()
  HitArea get_boneArea()
  Vector3 PositionOnRay(Vector3 position)
  Vector3 HitPositionOnRay()
  bool IsNaNOrInfinity()
--------------------------------------------------
Класс: HitArea
Наследуется от: Enum
Поля:
  int value__
  HitArea Head
  HitArea Chest
  HitArea Stomach
  HitArea Arm
  HitArea Hand
  HitArea Leg
  HitArea Foot
Свойства:
Методы:
--------------------------------------------------
Класс: HitAreaConst
Наследуется от: object
Поля:
  HitArea Nothing
  HitArea Everything
Свойства:
Методы:
--------------------------------------------------
Класс: HitAreaUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  string Format(HitArea area)
--------------------------------------------------
Класс: IInstanceDataReceiver
Поля:
Свойства:
Методы:
  void ReceiveInstanceData(InstanceData data)
--------------------------------------------------
Класс: IOnParentDestroying
Поля:
Свойства:
Методы:
  void OnParentDestroying()
--------------------------------------------------
Класс: OnParentDestroyingEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void BroadcastOnParentDestroying(GameObject go)
  void SendOnParentDestroying(GameObject go)
--------------------------------------------------
Класс: IOnParentSpawning
Поля:
Свойства:
Методы:
  void OnParentSpawning()
--------------------------------------------------
Класс: OnParentSpawningEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void BroadcastOnParentSpawning(GameObject go)
  void SendOnParentSpawning(GameObject go)
--------------------------------------------------
Класс: IOnPostNetworkUpdate
Поля:
Свойства:
Методы:
  void OnPostNetworkUpdate(BaseEntity entity)
--------------------------------------------------
Класс: OnPostNetworkUpdateEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void BroadcastOnPostNetworkUpdate(GameObject go, BaseEntity entity)
  void SendOnPostNetworkUpdate(GameObject go, BaseEntity entity)
--------------------------------------------------
Класс: IOnSendNetworkUpdate
Поля:
Свойства:
Методы:
  void OnSendNetworkUpdate(BaseEntity entity)
--------------------------------------------------
Класс: OnSendNetworkUpdateEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void BroadcastOnSendNetworkUpdate(GameObject go, BaseEntity entity)
  void SendOnSendNetworkUpdate(GameObject go, BaseEntity entity)
--------------------------------------------------
Класс: LakeInfo
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: LandmarkInfo
Наследуется от: MonoBehaviour
Поля:
  bool shouldDisplayOnMap
  bool isLayerSpecific
  Phrase displayPhrase
  Sprite mapIcon
Свойства:
  MapLayer MapLayer
Методы:
  MapLayer get_MapLayer()
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: LevelInfo
Наследуется от: SingletonComponent`1<LevelInfo>
Поля:
  string shortName
  string displayName
  string description
  Texture2D image
  int version
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LevelManager
Наследуется от: object
Поля:
  string CurrentLevelName
Свойства:
  bool isLoaded
Методы:
  bool get_isLoaded()
  bool IsValid(string strName)
  void LoadLevel(string strName, bool keepLoadingScreenOpen)
  IEnumerator LoadLevelAsync(string strName, bool keepLoadingScreenOpen)
  void UnloadLevel(bool loadingScreen)
--------------------------------------------------
Класс: AnimatorLOD
Наследуется от: LODComponent
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BatchingToggleEx
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IBatchingHandler
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: RendererBatch
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RendererGrid
Наследуется от: SingletonComponent`1<RendererGrid>
Поля:
  bool Paused
  GameObjectRef BatchPrefab
  float CellSize
  float MaxMilliseconds
  float MinTimeBetweenRefreshes
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CanvasLOD
Наследуется от: LODComponent
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ClothLOD
Наследуется от: FacepunchBehaviour
Поля:
  float clothLODDist
  Cloth cloth
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CopyLODValues
Наследуется от: MonoBehaviour
Поля:
  LODGroup source
  LODGroup destination
  bool scale
Свойства:
Методы:
  bool CanCopy()
  void Copy()
  void .ctor()
--------------------------------------------------
Класс: DecalCull
Наследуется от: LODComponent
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GameObjectLOD
Наследуется от: LODComponent
Поля:
  float Distance
  GameObject TargetGameObject
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HLODBounds
Наследуется от: MonoBehaviour
Поля:
  Bounds MeshBounds
  string MeshPrefix
  float CullDistance
  float OverrideLodDistance
  float CullBelowHeight
  bool ApplyMeshTrimming
  MeshTrimSettings Settings
  RendererLOD DebugComponent
  bool ShowTrimSettings
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ILOD
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: LODComponent
Наследуется от: BaseMonoBehaviour
Поля:
  LODDistanceMode DistanceMode
  OccludeeParameters OccludeeParams
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LODComponentParticleSystem
Наследуется от: LODComponent
Поля:
  bool playOnShow
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LODGrid
Наследуется от: SingletonComponent`1<LODGrid>
Поля:
  bool Paused
  float CellSize
  float MaxMilliseconds
  float MaxRefreshDistance
  float TreeMeshDistance
  float MinTimeBetweenRefreshes
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LODManager
Наследуется от: SingletonComponent`1<LODManager>
Поля:
  float MaxMilliseconds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LODMasterMesh
Наследуется от: LODComponent
Поля:
  MeshRenderer ReplacementMesh
  float Distance
  LODComponent[] ChildComponents
  bool Block
  Bounds MeshBounds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LODUtil
Наследуется от: object
Поля:
  float DefaultDistance
Свойства:
Методы:
  float GetDistance(Transform transform, LODDistanceMode mode)
  float GetDistance(Vector3 worldPos, LODDistanceMode mode)
  float VerifyDistance(float distance)
  LODEnvironmentMode DetermineEnvironmentMode(Transform transform)
--------------------------------------------------
Класс: LODDistanceMode
Наследуется от: Enum
Поля:
  int value__
  LODDistanceMode XYZ
  LODDistanceMode XZ
  LODDistanceMode Y
Свойства:
Методы:
--------------------------------------------------
Класс: LODEnvironmentMode
Наследуется от: Enum
Поля:
  int value__
  LODEnvironmentMode Default
  LODEnvironmentMode Underground
Свойства:
Методы:
--------------------------------------------------
Класс: MeshCull
Наследуется от: LODComponent
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshGroupCull
Наследуется от: LODComponent
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshLOD
Наследуется от: LODComponent
Поля:
  State[] States
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NotifyLOD
Наследуется от: LODComponent
Поля:
  float Distance
  float MinDistanceMultiplier
  GameObject TargetGameObject
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: INotifyLOD
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: ParticleCollisionLOD
Наследуется от: LODComponentParticleSystem
Поля:
  State[] States
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleSystemCull
Наследуется от: LODComponentParticleSystem
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleSystemLOD
Наследуется от: LODComponentParticleSystem
Поля:
  State[] States
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RendererLOD
Наследуется от: LODComponent
Поля:
  State[] States
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RendererToggleDynamicEx
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: RigidbodyLOD
Наследуется от: LODComponent
Поля:
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SwitchLODMaterials
Наследуется от: MonoBehaviour
Поля:
  Material[] materialSet1
  Material[] materialSet2
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TreeLOD
Наследуется от: LODComponent
Поля:
  State[] States
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UndergroundLODSwitcher
Наследуется от: MonoBehaviour
Поля:
  LODComponent TargetComponent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshReplacement
Наследуется от: MonoBehaviour
Поля:
  SkinnedMeshRenderer Female
Свойства:
Методы:
  void Process(GameObject go, bool IsFemale)
  void .ctor()
--------------------------------------------------
Класс: MonumentInfo
Наследуется от: LandmarkInfo
Поля:
  MonumentType Type
  MonumentTier Tier
  int MinWorldSize
  Bounds Bounds
  bool HasNavmesh
  bool IsSafeZone
  bool WantsDungeonLink
  bool HasDungeonLink
  DungeonGridInfo DungeonEntrance
  OBB obbBounds
Свойства:
Методы:
  void Awake()
  bool CheckPlacement(Vector3 pos, Quaternion rot, Vector3 scale)
  float Distance(Vector3 position)
  float SqrDistance(Vector3 position)
  float Distance(OBB obb)
  float SqrDistance(OBB obb)
  bool IsInBounds(Vector3 position)
  Vector3 ClosestPointOnBounds(Vector3 position)
  Point GetPathFinderPoint(int res)
  int GetPathFinderRadius(int res)
  void OnDrawGizmosSelected()
  MonumentNavMesh GetMonumentNavMesh()
  int TierToMask(MonumentTier tier)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  DungeonGridInfo FindDungeonEntrance()
  bool DetermineHasDungeonLink()
  bool DetermineWantsDungeonLink()
  void .ctor()
--------------------------------------------------
Класс: MonumentType
Наследуется от: Enum
Поля:
  int value__
  MonumentType Cave
  MonumentType Airport
  MonumentType Building
  MonumentType Town
  MonumentType Radtown
  MonumentType Lighthouse
  MonumentType WaterWell
  MonumentType Roadside
  MonumentType Mountain
  MonumentType Lake
Свойства:
Методы:
--------------------------------------------------
Класс: MonumentTier
Наследуется от: Enum
Поля:
  int value__
  MonumentTier Tier0
  MonumentTier Tier1
  MonumentTier Tier2
Свойства:
Методы:
--------------------------------------------------
Класс: Prefab`1
Наследуется от: Prefab
Поля:
  T Component
Свойства:
Методы:
  void .ctor(string name, GameObject prefab, T component, GameManager manager, Library attribute)
  int CompareTo(Prefab`1<T> that)
--------------------------------------------------
Класс: Prefab
Наследуется от: object
Поля:
  UInt32 ID
  string Name
  string Folder
  GameObject Object
  GameManager Manager
  Library Attribute
  PrefabParameters Parameters
Свойства:
  Library DefaultAttribute
  GameManager DefaultManager
Методы:
  void .ctor(string name, GameObject prefab, GameManager manager, Library attribute)
  GameObject op_Implicit(Prefab prefab)
  int CompareTo(Prefab that)
  bool ApplyTerrainAnchors(Vector3& pos, Quaternion rot, Vector3 scale, TerrainAnchorMode mode, SpawnFilter filter)
  bool ApplyTerrainAnchors(Vector3& pos, Quaternion rot, Vector3 scale, SpawnFilter filter)
  bool ApplyTerrainChecks(Vector3 pos, Quaternion rot, Vector3 scale, SpawnFilter filter)
  bool ApplyTerrainFilters(Vector3 pos, Quaternion rot, Vector3 scale, SpawnFilter filter)
  void ApplyTerrainModifiers(Vector3 pos, Quaternion rot, Vector3 scale)
  void ApplyTerrainPlacements(Vector3 pos, Quaternion rot, Vector3 scale)
  bool ApplyWaterChecks(Vector3 pos, Quaternion rot, Vector3 scale)
  bool ApplyBoundsChecks(Vector3 pos, Quaternion rot, Vector3 scale, LayerMask rejectOnLayer)
  void ApplyDecorComponents(Vector3& pos, Quaternion& rot, Vector3& scale)
  bool CheckEnvironmentVolumes(Vector3 pos, Quaternion rot, Vector3 scale, EnvironmentType type)
  bool CheckEnvironmentVolumesInsideTerrain(Vector3 pos, Quaternion rot, Vector3 scale, EnvironmentType type, float padding)
  bool CheckEnvironmentVolumesOutsideTerrain(Vector3 pos, Quaternion rot, Vector3 scale, EnvironmentType type, float padding)
  void ApplySequenceReplacement(List`1<Prefab> sequence, Prefab& replacement, Prefab[] possibleReplacements, int pathLength, int pathIndex)
  GameObject Spawn(Transform transform, bool active)
  GameObject Spawn(Vector3 pos, Quaternion rot, bool active)
  GameObject Spawn(Vector3 pos, Quaternion rot, Vector3 scale, bool active)
  BaseEntity SpawnEntity(Vector3 pos, Quaternion rot, bool active)
  Prefab`1<T> Load(UInt32 id, GameManager manager, Library attribute)
  Prefab Load(UInt32 id, GameManager manager, Library attribute)
  Prefab[] Load(string folder, GameManager manager, Library attribute, bool useProbabilities, bool useWorldConfig)
  Prefab`1[] Load(string folder, GameManager manager, Library attribute, bool useProbabilities, bool useWorldConfig)
  Prefab`1[] Load(String[] names, GameManager manager, Library attribute)
  Prefab LoadRandom(string folder, UInt32& seed, GameManager manager, Library attribute, bool useProbabilities)
  Prefab`1<T> LoadRandom(string folder, UInt32& seed, GameManager manager, Library attribute, bool useProbabilities)
  Library get_DefaultAttribute()
  GameManager get_DefaultManager()
  String[] FindPrefabNames(string strPrefab, bool useProbabilities, bool useWorldConfig)
--------------------------------------------------
Класс: PrefabInformation
Наследуется от: PrefabAttribute
Поля:
  ItemDefinition associatedItemDefinition
  Phrase title
  Phrase description
  Sprite sprite
  bool shownOnDeathScreen
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: PrefabInstantiate
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef Prefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PrefabPriority
Наследуется от: Enum
Поля:
  int value__
  PrefabPriority Lowest
  PrefabPriority Low
  PrefabPriority Default
  PrefabPriority High
  PrefabPriority Highest
Свойства:
Методы:
--------------------------------------------------
Класс: PrefabParameters
Наследуется от: MonoBehaviour
Поля:
  PrefabPriority Priority
  int Count
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PrefabPreProcess
Наследуется от: object
Поля:
  Type[] clientsideOnlyTypes
  Type[] serversideOnlyTypes
  bool isClientside
  bool isServerside
  bool isBundling
  Dictionary`2<string, GameObject> prefabList
  List`1<Component> destroyList
  List`1<GameObject> cleanupList
Свойства:
Методы:
  void .ctor(bool clientside, bool serverside, bool bundling)
  GameObject Find(string strPrefab)
  bool NeedsProcessing(GameObject go)
  void ProcessObject(string name, GameObject go, bool resetLocalTransform)
  void Process(string name, GameObject go)
  void Invalidate(string name)
  GameObject GetHierarchyGroup()
  void AddPrefab(string name, GameObject go)
  void DestroyComponents(Type t, GameObject go, bool client, bool server)
  bool ShouldExclude(Transform transform)
  bool HasComponents(Transform transform)
  bool HasComponents(Transform transform, Type t)
  List`1<T> FindComponents(Transform transform)
  void FindComponents(Transform transform, List`1<T> list)
  List`1<Component> FindComponents(Transform transform, Type t)
  void FindComponents(Transform transform, List`1<Component> list, Type t)
  void RemoveComponent(Component c)
  void RemoveComponents(GameObject gameObj)
  void NominateForDeletion(GameObject gameObj)
  void RunCleanupQueue()
  void DoCleanup(GameObject go)
  void .cctor()
--------------------------------------------------
Класс: ArmorProperties
Наследуется от: ScriptableObject
Поля:
  HitArea area
Свойства:
Методы:
  bool Contains(HitArea hitArea)
  void .ctor()
--------------------------------------------------
Класс: ClothingMovementProperties
Наследуется от: ScriptableObject
Поля:
  float speedReduction
  float minSpeedReduction
  float waterSpeedBonus
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DamageProperties
Наследуется от: ScriptableObject
Поля:
  DamageProperties fallback
  HitAreaProperty[] bones
Свойства:
Методы:
  float GetMultiplier(HitArea area)
  void ScaleDamage(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: LazyAimProperties
Наследуется от: ScriptableObject
Поля:
  float snapStrength
  float deadzoneAngle
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SkeletonProperties
Наследуется от: ScriptableObject
Поля:
  GameObject boneReference
  BoneProperty[] bones
  Dictionary`2<UInt32, BoneProperty> quickLookup
Свойства:
Методы:
  void OnValidate()
  void BuildDictionary()
  BoneProperty FindBone(UInt32 id)
  void .ctor()
--------------------------------------------------
Класс: BonePropertyAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RealmedCollider
Наследуется от: BasePrefab
Поля:
  Collider ServerCollider
  Collider ClientCollider
Свойства:
Методы:
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: RealmedRemove
Наследуется от: MonoBehaviour
Поля:
  GameObject[] removedFromClient
  Component[] removedComponentFromClient
  GameObject[] removedFromServer
  Component[] removedComponentFromServer
  Component[] doNotRemoveFromServer
  Component[] doNotRemoveFromClient
Свойства:
Методы:
  void PreProcess(IPrefabProcessor process, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  bool ShouldDelete(Component comp, bool client, bool server)
  void .ctor()
--------------------------------------------------
Класс: RiverInfo
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: SaveRestore
Наследуется от: SingletonComponent`1<SaveRestore>
Поля:
  bool IsSaving
  DateTime SaveCreatedTime
  RealTimeSince TimeSinceLastSave
  MemoryStream SaveBuffer
  string <WipeId>k__BackingField
Свойства:
  string WipeId
Методы:
  string get_WipeId()
  void set_WipeId(string value)
  IEnumerator Save(string strFilename, bool AndWait)
  void ShiftSaveBackups(string fileName)
  void Start()
  IEnumerator SaveRegularly()
  IEnumerator DoAutomatedSave(bool AndWait)
  bool Save(bool AndWait)
  void ClearMapEntities()
  bool Load(string strFilename, bool allowOutOfDateSaves)
  void GetSaveCache()
  void InitializeEntityLinks()
  void InitializeEntitySupports()
  void InitializeEntityConditionals()
  void InitializeWipeId()
  void .ctor()
  void .cctor()
  string <ShiftSaveBackups>g__GetBackupName|9_0(int i, <>c__DisplayClass9_0& )
--------------------------------------------------
Класс: SceneToPrefab
Наследуется от: MonoBehaviour
Поля:
  bool flattenHierarchy
  GameObject outputPrefab
  bool skipAllHlod
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SceneToPrefabTag
Наследуется от: MonoBehaviour
Поля:
  TagType Type
  int SpecificLOD
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConvarControlledSpawnPopulation
Наследуется от: DensitySpawnPopulation
Поля:
  string PopulationConvar
  Command _command
Свойства:
  Command Command
  float TargetDensity
Методы:
  Command get_Command()
  float get_TargetDensity()
  void .ctor()
--------------------------------------------------
Класс: ConvarControlledSpawnPopulationRail
Наследуется от: ConvarControlledSpawnPopulation
Поля:
  float MIN_MARGIN
Свойства:
Методы:
  bool GetSpawnPosOverride(Prefab`1<Spawnable> prefab, Vector3& newPos, Quaternion& newRot)
  void SubFill(SpawnHandler spawnHandler, SpawnDistribution distribution, int numToFill, bool initialSpawn)
  int GetPrefabWeight(Prefab`1<Spawnable> prefab)
  bool TryGetRandomPointOnSpline(TrainTrackSpline spline, TrainCar trainCar, Vector3& pos, Quaternion& rot)
  void .ctor()
--------------------------------------------------
Класс: DensitySpawnPopulation
Наследуется от: SpawnPopulationBase
Поля:
  string ResourceFolder
  GameObjectRef[] ResourceList
  float _targetDensity
  int ClusterSizeMin
  int ClusterSizeMax
  int ClusterDithering
  int SpawnAttemptsInitial
  int SpawnAttemptsRepeating
  bool ScaleWithLargeMaps
  bool ScaleWithSpawnFilter
  bool AlignToNormal
  SpawnFilter Filter
  float FilterCutoff
  float FilterRadius
  Prefab`1[] Prefabs
  Int32[] numToSpawn
  int sumToSpawn
Свойства:
  float TargetDensity
Методы:
  float get_TargetDensity()
  bool Initialize()
  void SubFill(SpawnHandler spawnHandler, SpawnDistribution distribution, int numToFill, bool initialSpawn)
  void UpdateWeights(SpawnDistribution distribution, int targetCount)
  int GetPrefabWeight(Prefab`1<Spawnable> prefab)
  bool TryTakeRandomPrefab(Prefab`1& result)
  void ReturnPrefab(Prefab`1<Spawnable> prefab)
  float GetCurrentSpawnDensity()
  float GetMaximumSpawnDensity()
  bool GetSpawnPosOverride(Prefab`1<Spawnable> prefab, Vector3& newPos, Quaternion& newRot)
  Byte[] GetBaseMapValues(int populationRes)
  int GetTargetCount(SpawnDistribution distribution)
  SpawnFilter GetSpawnFilter()
  void GetReportString(StringBuilder sb, bool detailed)
  void .ctor()
--------------------------------------------------
Класс: Spawnable
Наследуется от: MonoBehaviour
Поля:
  SpawnPopulationBase Population
  bool ForceSpawnOnly
  string ForceSpawnInfoMessage
  UInt32 PrefabID
  bool SpawnIndividual
  Vector3 SpawnPosition
  Quaternion SpawnRotation
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void Add()
  void Remove()
  void Save(SaveInfo info)
  void Load(LoadInfo info)
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: SpawnDistribution
Наследуется от: object
Поля:
  SpawnHandler Handler
  float Density
  int Count
  WorldSpaceGrid`1<int> grid
  Dictionary`2<UInt32, int> dict
  ByteQuadtree quadtree
  Vector3 origin
  Vector3 area
Свойства:
Методы:
  void .ctor(SpawnHandler handler, Byte[] baseValues, Vector3 origin, Vector3 area)
  bool Sample(Vector3& spawnPos, Quaternion& spawnRot, bool alignToNormal, float dithering)
  bool Sample(Vector3& spawnPos, Quaternion& spawnRot, Element node, bool alignToNormal, float dithering)
  Element SampleNode()
  void AddInstance(Spawnable spawnable)
  void RemoveInstance(Spawnable spawnable)
  void UpdateCount(Spawnable spawnable, int delta)
  int GetCount(UInt32 prefabID)
  int GetCount(Vector3 position)
  float GetGridCellArea()
--------------------------------------------------
Класс: SpawnIndividual
Наследуется от: ValueType
Поля:
  UInt32 PrefabID
  Vector3 Position
  Quaternion Rotation
Свойства:
Методы:
  void .ctor(UInt32 prefabID, Vector3 position, Quaternion rotation)
--------------------------------------------------
Класс: SpawnPointSpawnPopulation
Наследуется от: SpawnPopulationBase
Поля:
  GameObjectRef resource
  SpawnPointType spawnPointType
  Prefab`1<Spawnable> prefab
  SpawnFilter Filter
Свойства:
Методы:
  bool Initialize()
  void SubFill(SpawnHandler spawnHandler, SpawnDistribution distribution, int numToFill, bool initialSpawn)
  Byte[] GetBaseMapValues(int populationRes)
  SpawnFilter GetSpawnFilter()
  int GetTargetCount(SpawnDistribution distribution)
  bool TryGetSpawnPoints(List`1& result)
  void GetReportString(StringBuilder sb, bool detailed)
  void .ctor()
--------------------------------------------------
Класс: SpawnPopulationBase
Наследуется от: BaseScriptableObject
Поля:
  bool EnforcePopulationLimits
  float SpawnRate
  bool ScaleWithServerPopulation
  bool haveInitialized
Свойства:
Методы:
  bool Initialize()
  float GetCurrentSpawnRate()
  void Fill(SpawnHandler spawnHandler, SpawnDistribution distribution, int numToFill, bool initialSpawn)
  void SubFill(SpawnHandler spawnHandler, SpawnDistribution distribution, int numToFill, bool initialSpawn)
  Byte[] GetBaseMapValues(int populationRes)
  int GetTargetCount(SpawnDistribution distribution)
  SpawnFilter GetSpawnFilter()
  void GetReportString(StringBuilder sb, bool detailed)
  void .ctor()
--------------------------------------------------
Класс: FloodedSpawnHandler
Наследуется от: object
Поля:
  Int32[] SpreadSteps
Свойства:
Методы:
  bool GetSpawnPoint(SpawnPoint spawnPoint, float searchHeight)
  Vector3 FindSpawnPoint(float searchHeight)
  Vector3 Step(float angle, float distance)
  float RandomAngle()
  void .cctor()
--------------------------------------------------
Класс: BaseSpawnPoint
Наследуется от: MonoBehaviour
Поля:
  SpawnPointType spawnPointType
  Dictionary`2<SpawnPointType, List`1<BaseSpawnPoint>> spawnPoints
Свойства:
Методы:
  void GetLocation(Vector3& pos, Quaternion& rot)
  void ObjectSpawned(SpawnPointInstance instance)
  void ObjectRetired(SpawnPointInstance instance)
  void OnEnable()
  void OnDisable()
  bool IsAvailableTo(GameObjectRef prefabRef)
  bool HasPlayersIntersecting()
  void DropToGround(Vector3& pos, Quaternion& rot)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GameModeSpawnGroup
Наследуется от: SpawnGroup
Поля:
  String[] gameModeTags
Свойства:
Методы:
  void ResetSpawnGroup()
  bool ShouldSpawn()
  void Spawn(int numToSpawn)
  void .ctor()
--------------------------------------------------
Класс: GenericSpawnPoint
Наследуется от: BaseSpawnPoint
Поля:
  bool dropToGround
  bool randomRot
  float randomRotSnapDegrees
  GameObjectRef spawnEffect
  UnityEvent OnObjectSpawnedEvent
  UnityEvent OnObjectRetiredEvent
Свойства:
Методы:
  Quaternion GetRandomRotation()
  void GetLocation(Vector3& pos, Quaternion& rot)
  void ObjectSpawned(SpawnPointInstance instance)
  void ObjectRetired(SpawnPointInstance instance)
  void .ctor()
--------------------------------------------------
Класс: IndividualSpawner
Наследуется от: BaseMonoBehaviour
Поля:
  GameObjectRef entityPrefab
  float respawnDelayMin
  float respawnDelayMax
  bool useCustomBoundsCheckMask
  LayerMask customBoundsCheckMask
  bool oneTimeSpawner
  bool isSpawnerActive
  SpawnPointInstance spawnInstance
  float nextSpawnTime
Свойства:
  int currentPopulation
  bool IsSpawned
Методы:
  int get_currentPopulation()
  bool get_IsSpawned()
  void Awake()
  void OnDestroy()
  void OnDrawGizmosSelected()
  void ObjectSpawned(SpawnPointInstance instance)
  void ObjectRetired(SpawnPointInstance instance)
  void Fill()
  void SpawnInitial()
  void Clear()
  void SpawnRepeating()
  bool HasSpaceToSpawn()
  void TrySpawnEntity()
  bool TryGetEntityBounds(Bounds& result)
  void .ctor()
--------------------------------------------------
Класс: IndividualSpawnerNexusOnly
Наследуется от: IndividualSpawner
Поля:
Свойства:
Методы:
  void TrySpawnEntity()
  void .ctor()
--------------------------------------------------
Класс: ISpawnGroup
Поля:
Свойства:
  int currentPopulation
Методы:
  void Clear()
  void Fill()
  void SpawnInitial()
  void SpawnRepeating()
  int get_currentPopulation()
--------------------------------------------------
Класс: ISpawnPointUser
Поля:
Свойства:
Методы:
  void ObjectSpawned(SpawnPointInstance instance)
  void ObjectRetired(SpawnPointInstance instance)
--------------------------------------------------
Класс: JunkpileNPCSpawner
Наследуется от: NPCSpawner
Поля:
  bool UseSpawnChance
Свойства:
Методы:
  void Spawn(int numToSpawn)
  void .ctor()
--------------------------------------------------
Класс: NPCSpawner
Наследуется от: SpawnGroup
Поля:
  int AdditionalLOSBlockingLayer
  MonumentNavMesh monumentNavMesh
  bool shouldFillOnSpawn
  AIInformationZone VirtualInfoZone
  AIMovePointPath Path
  BasePath AStarGraph
  bool UseStatModifiers
  float SenseRange
  bool CheckLOS
  float TargetLostRange
  float AttackRangeMultiplier
  float ListenRange
  float CanUseHealingItemsChance
  PlayerInventoryProperties[] Loadouts
Свойства:
Методы:
  void SpawnInitial()
  bool WaitingForNavMesh()
  void LateSpawn()
  void PostSpawnProcess(BaseEntity entity, BaseSpawnPoint spawnPoint)
  void ModifyHumanBrainStats(BaseAIBrain brain)
  void .ctor()
--------------------------------------------------
Класс: RadialSpawnPoint
Наследуется от: BaseSpawnPoint
Поля:
  float radius
Свойства:
Методы:
  void GetLocation(Vector3& pos, Quaternion& rot)
  bool HasPlayersIntersecting()
  void ObjectSpawned(SpawnPointInstance instance)
  void ObjectRetired(SpawnPointInstance instance)
  void .ctor()
--------------------------------------------------
Класс: SingleSpawn
Наследуется от: SpawnGroup
Поля:
Свойства:
Методы:
  bool WantsInitialSpawn()
  void FillDelay(float delay)
  void .ctor()
--------------------------------------------------
Класс: SpaceCheckingSpawnPoint
Наследуется от: GenericSpawnPoint
Поля:
  bool useCustomBoundsCheckMask
  LayerMask customBoundsCheckMask
  float customBoundsCheckScale
Свойства:
Методы:
  bool IsAvailableTo(GameObjectRef prefabRef)
  void .ctor()
--------------------------------------------------
Класс: SpawnGroup
Наследуется от: BaseMonoBehaviour
Поля:
  MonumentTier Tier
  List`1<SpawnEntry> prefabs
  int maxPopulation
  int numToSpawnPerTickMin
  int numToSpawnPerTickMax
  float respawnDelayMin
  float respawnDelayMax
  bool wantsInitialSpawn
  bool temporary
  bool forceInitialSpawn
  bool preventDuplicates
  bool isSpawnerActive
  BoxCollider setFreeIfMovedBeyond
  string category
  MonumentInfo Monument
  bool fillOnSpawn
  BaseSpawnPoint[] spawnPoints
  List`1<SpawnPointInstance> spawnInstances
  LocalClock spawnClock
Свойства:
  int currentPopulation
Методы:
  int get_currentPopulation()
  bool WantsInitialSpawn()
  bool WantsTimedSpawn()
  float GetSpawnDelta()
  float GetSpawnVariance()
  void Awake()
  void OnDestroy()
  void Fill()
  void Clear()
  bool HasSpawned(UInt32 prefabID)
  void SpawnInitial()
  void SpawnRepeating()
  void ObjectSpawned(SpawnPointInstance instance)
  void ObjectRetired(SpawnPointInstance instance)
  void DelayedSpawn()
  void Spawn()
  void Spawn(int numToSpawn)
  void PostSpawnProcess(BaseEntity entity, BaseSpawnPoint spawnPoint)
  GameObjectRef GetPrefab()
  BaseSpawnPoint GetSpawnPoint(GameObjectRef prefabRef, Vector3& pos, Quaternion& rot)
  MonumentInfo FindMonument()
  void OnDrawGizmos()
  void .ctor()
  int <GetPrefab>b__39_0(SpawnEntry x)
--------------------------------------------------
Класс: SpawnPointInstance
Наследуется от: MonoBehaviour
Поля:
  ISpawnPointUser parentSpawnPointUser
  BaseSpawnPoint parentSpawnPoint
Свойства:
Методы:
  void Notify()
  void Retire()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: VehicleSpawnPoint
Наследуется от: SpaceCheckingSpawnPoint
Поля:
Свойства:
Методы:
  void ObjectSpawned(SpawnPointInstance instance)
  void AddStartingFuel(IVehicleSpawnUser vehicle)
  void .ctor()
--------------------------------------------------
Класс: SpawnHandler
Наследуется от: SingletonComponent`1<SpawnHandler>
Поля:
  float TickInterval
  int MinSpawnsPerTick
  int MaxSpawnsPerTick
  LayerMask PlacementMask
  LayerMask PlacementCheckMask
  float PlacementCheckHeight
  LayerMask RadiusCheckMask
  float RadiusCheckDistance
  LayerMask BoundsCheckMask
  SpawnFilter CharacterSpawn
  float CharacterSpawnCutoff
  SpawnPopulationBase[] SpawnPopulations
  SpawnDistribution[] SpawnDistributions
  SpawnDistribution CharDistribution
  ListHashSet`1<ISpawnGroup> SpawnGroups
  List`1<SpawnIndividual> SpawnIndividuals
  SpawnPopulationBase[] ConvarSpawnPopulations
  Dictionary`2<SpawnPopulationBase, SpawnDistribution> population2distribution
  bool spawnTick
  SpawnPopulationBase[] AllSpawnPopulations
Свойства:
Методы:
  void OnEnable()
  SpawnPoint GetSpawnPoint()
  bool GetSpawnPointStandard(SpawnPoint spawnPoint)
  void UpdateDistributions()
  void FillPopulations()
  void FillGroups()
  void FillIndividuals()
  void InitialSpawn()
  void StartSpawnTick()
  IEnumerator SpawnTick()
  IEnumerator SpawnGroupTick()
  IEnumerator SpawnIndividualTick()
  void SpawnInitial(SpawnPopulationBase population, SpawnDistribution distribution)
  void SpawnRepeating(SpawnPopulationBase population, SpawnDistribution distribution)
  GameObject Spawn(SpawnPopulationBase population, Prefab`1<Spawnable> prefab, Vector3 pos, Quaternion rot)
  GameObject Spawn(Prefab`1<Spawnable> prefab, Vector3 pos, Quaternion rot)
  bool CheckBounds(GameObject gameObject, Vector3 pos, Quaternion rot, Vector3 scale)
  bool CheckBounds(GameObject gameObject, Vector3 pos, Quaternion rot, Vector3 scale, LayerMask mask)
  void EnforceLimits(bool forceAll)
  void EnforceLimits(SpawnPopulationBase population, SpawnDistribution distribution)
  Spawnable[] FindAll(SpawnPopulationBase population)
  void AddRespawn(SpawnIndividual individual)
  void AddInstance(Spawnable spawnable)
  void RemoveInstance(Spawnable spawnable)
  float PlayerFraction()
  float PlayerLerp(float min, float max)
  float PlayerExcess()
  float PlayerScale(float scalar)
  void DumpReport(string filename)
  string GetReport(bool detailed)
  void .ctor()
--------------------------------------------------
Класс: StripRig
Наследуется от: MonoBehaviour
Поля:
  Transform root
  bool fromClient
  bool fromServer
Свойства:
Методы:
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void Strip(IPrefabProcessor preProcess, SkinnedMeshRenderer skinnedMeshRenderer)
  void .ctor()
--------------------------------------------------
Класс: TechTreeData
Наследуется от: ScriptableObject
Поля:
  string shortname
  int nextID
  Dictionary`2<int, NodeInstance> _idToNode
  NodeInstance _entryNode
  List`1<NodeInstance> nodes
Свойства:
Методы:
  NodeInstance GetByID(int id)
  NodeInstance GetEntryNode()
  void ClearInputs(NodeInstance node)
  void SetupInputs(NodeInstance node)
  bool PlayerHasPathForUnlock(BasePlayer player, NodeInstance node)
  bool CheckChainRecursive(BasePlayer player, NodeInstance start, NodeInstance target)
  bool PlayerCanUnlock(BasePlayer player, NodeInstance node)
  bool HasPlayerUnlocked(BasePlayer player, NodeInstance node)
  void GetNodesRequiredToUnlock(BasePlayer player, NodeInstance node, List`1<NodeInstance> foundNodes)
  void .ctor()
--------------------------------------------------
Класс: TriggerAchievement
Наследуется от: TriggerBase
Поля:
  string statToIncrease
  string achievementOnEnter
  string requiredVehicleName
  bool serverSide
  List`1<ulong> triggeredPlayers
Свойства:
Методы:
  void OnPuzzleReset()
  void Reset()
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TriggerAnalytic
Наследуется от: TriggerBase
Поля:
  string AnalyticMessage
  float Timeout
  List`1<RecentPlayerEntrance> recentEntrances
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void CheckTimeouts()
  bool IsPlayerValid(BasePlayer p)
  void .ctor()
--------------------------------------------------
Класс: TriggerBanditZone
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  float GetBanditZoneLevel(Vector3 pos)
  void .ctor()
--------------------------------------------------
Класс: TriggerBase
Наследуется от: BaseMonoBehaviour
Поля:
  LayerMask interestLayers
  HashSet`1<GameObject> contents
  HashSet`1<BaseEntity> entityContents
  Action`1<BaseNetworkable> OnEntityEnterTrigger
  Action`1<BaseNetworkable> OnEntityLeaveTrigger
Свойства:
  bool HasAnyContents
  bool HasAnyEntityContents
Методы:
  bool get_HasAnyContents()
  bool get_HasAnyEntityContents()
  GameObject InterestedInObject(GameObject obj)
  void OnDisable()
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void OnObjectAdded(GameObject obj, Collider col)
  void OnObjectRemoved(GameObject obj)
  void RemoveInvalidEntities()
  bool CheckEntity(BaseEntity ent)
  void OnObjects()
  void OnEmpty()
  void RemoveObject(GameObject obj)
  void RemoveEntity(BaseEntity ent)
  void OnTriggerEnter(Collider collider)
  bool SkipOnTriggerExit(Collider collider)
  void OnTriggerExit(Collider collider)
  void OnTriggerExit(GameObject targetObj)
  void .ctor()
--------------------------------------------------
Класс: TriggerClanModify
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerComfort
Наследуется от: TriggerBase
Поля:
  float triggerSize
  float baseComfort
  float minComfortRange
  float perPlayerComfortBonus
  float bonusComfort
  List`1<BasePlayer> _players
Свойства:
Методы:
  void OnValidate()
  GameObject InterestedInObject(GameObject obj)
  float CalculateComfort(Vector3 position, BasePlayer forPlayer)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TriggerDanceAchievement
Наследуется от: TriggerBase
Поля:
  int RequiredPlayerCount
  string AchievementName
  List`1<NetworkableId> triggeredPlayers
Свойства:
Методы:
  void OnPuzzleReset()
  void Reset()
  GameObject InterestedInObject(GameObject obj)
  void NotifyDanceStarted()
  void .ctor()
--------------------------------------------------
Класс: TriggerEnsnare
Наследуется от: TriggerBase
Поля:
  bool blockHands
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerForce
Наследуется от: TriggerBase
Поля:
  float GravityMultiplier
  float VelocityLerp
  float AngularDrag
  Vector3 velocity
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: IHurtTrigger
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: TriggerHurt
Наследуется от: TriggerBase
Поля:
  float DamagePerSecond
  float DamageTickRate
  DamageType damageType
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjects()
  void OnEmpty()
  void OnTick()
  bool CanHurt(BaseCombatEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TriggerHurtNotChild
Наследуется от: TriggerBase
Поля:
  float DamagePerSecond
  float DamageTickRate
  float DamageDelay
  DamageType damageType
  bool ignoreNPC
  float npcMultiplier
  float resourceMultiplier
  bool triggerHitImpacts
  bool RequireUpAxis
  BaseEntity SourceEntity
  bool UseSourceEntityDamageMultiplier
  bool ignoreAllVehicleMounted
  float activationDelay
  Dictionary`2<BaseEntity, float> entryTimes
  TimeSince timeSinceAcivation
  IHurtTriggerUser hurtTiggerUser
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjects()
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void OnEmpty()
  void OnEnable()
  void OnDisable()
  bool IsInterested(BaseEntity ent)
  void OnTick()
  void .ctor()
--------------------------------------------------
Класс: TriggerLadder
Наследуется от: TriggerBase
Поля:
  LadderType Type
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerMount
Наследуется от: TriggerBase
Поля:
  float MOUNT_DELAY
  float MAX_MOVE
  Dictionary`2<BaseEntity, EntryInfo> entryInfo
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void CheckForMount()
  void .ctor()
--------------------------------------------------
Класс: TriggerNoRespawnZone
Наследуется от: TriggerBase
Поля:
  List`1<TriggerNoRespawnZone> allNRZones
  float maxDepth
  float maxAltitude
  SphereCollider sphereCollider
  float radiusSqr
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void OnDisable()
  GameObject InterestedInObject(GameObject obj)
  bool InAnyNoRespawnZone(Vector3 theirPos)
  bool InNoRespawnZone(Vector3 theirPos, bool checkRadius)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TriggerNoSpray
Наследуется от: TriggerBase
Поля:
  BoxCollider TriggerCollider
  OBB cachedBounds
  Transform cachedTransform
Свойства:
Методы:
  void OnEnable()
  GameObject InterestedInObject(GameObject obj)
  bool IsPositionValid(Vector3 worldPosition)
  void .ctor()
--------------------------------------------------
Класс: TriggerNotify
Наследуется от: TriggerBase
Поля:
  GameObject notifyTarget
  INotifyTrigger toNotify
  bool runClientside
  bool runServerside
Свойства:
  bool HasContents
Методы:
  bool get_HasContents()
  void OnObjects()
  void OnEmpty()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: INotifyTrigger
Поля:
Свойства:
Методы:
  void OnObjects(TriggerNotify trigger)
  void OnEmpty()
--------------------------------------------------
Класс: TriggerNotifyEntity
Наследуется от: TriggerBase
Поля:
  GameObject notifyTarget
  INotifyEntityTrigger toNotify
  bool runClientside
  bool runServerside
Свойства:
  bool HasContents
Методы:
  bool get_HasContents()
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: INotifyEntityTrigger
Поля:
Свойства:
Методы:
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
--------------------------------------------------
Класс: TriggerParent
Наследуется от: TriggerBase
Поля:
  bool doClippingCheck
  BaseMountable associatedMountable
  bool parentMountedPlayers
  bool parentSleepers
  bool ParentNPCPlayers
  bool overrideOtherTriggers
  bool checkForObjUnderFeet
  int CLIP_CHECK_MASK
  Collider triggerCollider
  float triggerHeight
  BasePlayer killPlayerTemp
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  bool ShouldParent(BaseEntity ent, bool bypassOtherTriggerCheck)
  void Parent(BaseEntity ent)
  void Unparent(BaseEntity ent)
  void KillPlayerDelayed()
  void OnTick()
  bool IsClipping(BaseEntity ent)
  bool HasObjUnderFeet(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TriggerParentElevator
Наследуется от: TriggerParentEnclosed
Поля:
  bool AllowHorsesToBypassClippingChecks
Свойства:
Методы:
  bool IsClipping(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TriggerParentEnclosed
Наследуется от: TriggerParent
Поля:
  float Padding
  TriggerMode intersectionMode
  bool CheckBoundsOnUnparent
  BoxCollider boxCollider
Свойства:
Методы:
  void OnEnable()
  bool ShouldParent(BaseEntity ent, bool bypassOtherTriggerCheck)
  bool SkipOnTriggerExit(Collider collider)
  bool IsInside(BaseEntity ent, float padding)
  void .ctor()
--------------------------------------------------
Класс: TriggerParentExclusion
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerPlayerForce
Наследуется от: TriggerBase
Поля:
  BoxCollider triggerCollider
  float pushVelocity
  bool requireUpAxis
  float HACK_DISABLE_TIME
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjects()
  void OnEmpty()
  void OnDisable()
  void OnEntityLeave(BaseEntity ent)
  void HackDisableTick()
  void FixedUpdate()
  Vector3 GetPushVelocity(GameObject obj)
  bool IsInterested(BaseEntity entity)
  void .ctor()
--------------------------------------------------
Класс: TriggerPlayerTimer
Наследуется от: TriggerBase
Поля:
  BaseEntity TargetEntity
  float DamageAmount
  float TimeToDamage
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnObjects()
  void OnEmpty()
  void DamageTarget()
  void .ctor()
--------------------------------------------------
Класс: TriggerRadiation
Наследуется от: TriggerBase
Поля:
  RadiationTier radiationTier
  float RadiationAmountOverride
  float falloff
  SphereCollider sphereCollider
Свойства:
Методы:
  float GetRadiationSize()
  float GetRadiationAmount()
  float GetRadiation(Vector3 position, float radProtection)
  GameObject InterestedInObject(GameObject obj)
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: TriggerRagdollRelocate
Наследуется от: TriggerBase
Поля:
  Transform targetLocation
Свойства:
Методы:
  void OnObjectAdded(GameObject obj, Collider col)
  void RepositionTransform(Transform t)
  void .ctor()
--------------------------------------------------
Класс: TriggerSafeZone
Наследуется от: TriggerBase
Поля:
  List`1<TriggerSafeZone> allSafeZones
  float maxDepth
  float maxAltitude
  Collider <triggerCollider>k__BackingField
Свойства:
  Collider triggerCollider
Методы:
  Collider get_triggerCollider()
  void set_triggerCollider(Collider value)
  void Awake()
  void OnEnable()
  void OnDisable()
  GameObject InterestedInObject(GameObject obj)
  bool PassesHeightChecks(Vector3 entPos)
  float GetSafeLevel(Vector3 pos)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TriggerSnowmobileAchievement
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerSubmarineMoonpool
Наследуется от: TriggerBase
Поля:
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: TriggerTemperature
Наследуется от: TriggerBase
Поля:
  float Temperature
  float triggerSize
  float minSize
  bool sunlightBlocker
  float sunlightBlockAmount
  float blockMinHour
  float blockMaxHour
Свойства:
Методы:
  void OnValidate()
  float WorkoutTemperature(Vector3 position, float oldTemperature)
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerWakeAIZ
Наследуется от: TriggerBase
Поля:
  float SleepDelaySeconds
  List`1<AIInformationZone> zones
  AIInformationZone aiz
Свойства:
Методы:
  void Init(AIInformationZone zone)
  void Awake()
  void SetZonesSleeping(bool flag)
  GameObject InterestedInObject(GameObject obj)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void DelayedSleepAI()
  void SleepAI()
  void .ctor()
--------------------------------------------------
Класс: TriggerWetness
Наследуется от: TriggerBase
Поля:
  float Wetness
  SphereCollider TargetCollider
  Transform OriginTransform
  bool ApplyLocalHeightCheck
  float MinLocalHeight
Свойства:
Методы:
  float WorkoutWetness(Vector3 position)
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: TriggerWorkbench
Наследуется от: TriggerBase
Поля:
  Workbench parentBench
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  float WorkbenchLevel()
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void .ctor()
--------------------------------------------------
Класс: ValidBounds
Наследуется от: SingletonComponent`1<ValidBounds>
Поля:
  Bounds worldBounds
Свойства:
Методы:
  bool Test(Vector3 vPos)
  float TestDist(Vector3 vPos)
  void OnDrawGizmosSelected()
  bool IsInside(Vector3 vPos)
  float DistToWorldEdge2D(Vector3 vPos)
  void .ctor()
--------------------------------------------------
Класс: Vis
Наследуется от: object
Поля:
  int colCount
  Collider[] colBuffer
Свойства:
Методы:
  void Buffer(Vector3 position, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  bool AnyColliders(Vector3 position, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Colliders(Vector3 position, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Components(Vector3 position, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Entities(Vector3 position, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void EntityComponents(Vector3 position, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Buffer(OBB bounds, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Colliders(OBB bounds, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Components(OBB bounds, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Entities(OBB bounds, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void EntityComponents(OBB bounds, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Buffer(Vector3 startPosition, Vector3 endPosition, float radius, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Colliders(Vector3 startPosition, Vector3 endPosition, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Components(Vector3 startPosition, Vector3 endPosition, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void Entities(Vector3 startPosition, Vector3 endPosition, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void EntityComponents(Vector3 startPosition, Vector3 endPosition, float radius, List`1<T> list, int layerMask, QueryTriggerInteraction triggerInteraction)
  void .cctor()
--------------------------------------------------
Класс: WaterLevel
Наследуется от: object
Поля:
Свойства:
Методы:
  float Factor(Vector3 start, Vector3 end, float radius, bool waves, bool volumes, BaseEntity forEntity)
  float Factor(Bounds bounds, bool waves, bool volumes, BaseEntity forEntity)
  bool Test(Vector3 pos, bool waves, bool volumes, BaseEntity forEntity)
  float GetWaterDepth(Vector3 pos, bool waves, bool volumes, BaseEntity forEntity)
  float GetOverallWaterDepth(Vector3 pos, bool waves, bool volumes, BaseEntity forEntity, bool noEarlyExit)
  WaterInfo GetBuoyancyWaterInfo(Vector3 pos, Vector2 posUV, float terrainHeight, float waterHeight, bool doDeepwaterChecks, BaseEntity forEntity)
  WaterInfo GetWaterInfo(Vector3 pos, bool waves, bool volumes, BaseEntity forEntity, bool noEarlyExit)
  WaterInfo GetWaterInfo(Bounds bounds, bool waves, bool volumes, BaseEntity forEntity)
  WaterInfo GetWaterInfo(Vector3 start, Vector3 end, float radius, bool waves, bool volumes, BaseEntity forEntity)
  WaterInfo GetWaterInfo(Camera cam, bool waves, bool volumes, BaseEntity forEntity, bool noEarlyExit)
  float GetWaterLevel(Vector3 pos)
  WaterInfo GetWaterInfoFromVolumes(Bounds bounds, BaseEntity forEntity)
  WaterInfo GetWaterInfoFromVolumes(Vector3 pos, BaseEntity forEntity)
  WaterInfo GetWaterInfoFromVolumes(Vector3 start, Vector3 end, float radius, BaseEntity forEntity)
--------------------------------------------------
Класс: WaterResource
Наследуется от: object
Поля:
Свойства:
Методы:
  ItemDefinition GetAtPoint(Vector3 pos)
  bool IsFreshWater(Vector3 pos)
  ItemDefinition Merge(ItemDefinition first, ItemDefinition second)
  void .ctor()
--------------------------------------------------
Класс: WaterVolume
Наследуется от: TriggerBase
Поля:
  Bounds WaterBounds
  OBB cachedBounds
  Transform cachedTransform
  Transform[] cutOffPlanes
  bool waterEnabled
Свойства:
Методы:
  void OnEnable()
  bool Test(Vector3 pos, WaterInfo& info)
  bool Test(Bounds bounds, WaterInfo& info)
  bool Test(Vector3 start, Vector3 end, float radius, WaterInfo& info)
  bool CheckCutOffPlanes(Vector3 pos)
  void UpdateCachedTransform()
  GameObject InterestedInObject(GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: Wearable
Наследуется от: MonoBehaviour
Поля:
  RemoveSkin removeSkin
  RemoveSkin removeSkinFirstPerson
  RemoveHair removeHair
  DeformHair deformHair
  OccupationSlots occupationUnder
  OccupationSlots occupationOver
  bool IsBackpack
  bool showCensorshipCube
  bool showCensorshipCubeBreasts
  bool forceHideCensorshipBreasts
  string followBone
  bool disableRigStripping
  bool overrideDownLimit
  float downLimit
  PlayerModelHair playerModelHair
  PlayerModelHairCap playerModelHairCap
  WearableReplacementByRace wearableReplacementByRace
  WearableShadowLod wearableShadowLod
  List`1<Renderer> renderers
  List`1<PlayerModelSkin> playerModelSkins
  List`1<BoneRetarget> boneRetargets
  List`1<SkinnedMeshRenderer> skinnedRenderers
  List`1<SkeletonSkin> skeletonSkins
  List`1<ComponentInfo> componentInfos
  List`1<WearableNotify> notifies
  bool HideInEyesView
  bool HideInFirstPerson
  float ExtraLeanBack
  bool PreserveBones
  Renderer[] RenderersLod0
  Renderer[] RenderersLod1
  Renderer[] RenderersLod2
  Renderer[] RenderersLod3
  Renderer[] RenderersLod4
  Renderer[] SkipInFirstPersonLegs
  LOD[] emptyLOD
  PartRandomizer[] randomParts
Свойства:
Методы:
  void OnItemSetup(Item item)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void CacheComponents()
  void StripRig(IPrefabProcessor preProcess, SkinnedMeshRenderer skinnedMeshRenderer)
  void SetupRendererCache(IPrefabProcessor preProcess)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WearableEyeViewAdjustment
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableEyeViewAdjustment_Submesh
Наследуется от: WearableEyeViewAdjustment
Поля:
  int TargetSubmesh
  Material HideMaterial
  Material DefaultMaterial
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableHolsterOffset
Наследуется от: MonoBehaviour
Поля:
  offsetInfo[] Offsets
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableNotify
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableNotifyHasBackpack
Наследуется от: WearableNotify
Поля:
  GameObject[] ObjectsToHide
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableNotifyLifestate
Наследуется от: WearableNotify
Поля:
  LifeState TargetState
  UnityEvent OnTargetState
  UnityEvent OnTargetStateFailed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableNotifyTrophyMounted
Наследуется от: WearableNotify
Поля:
  UnityEvent OnMounted
  Renderer[] EmissionToggles
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WearableReplacementByRace
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef[] replacements
Свойства:
Методы:
  GameObjectRef GetReplacement(int meshIndex)
  void .ctor()
--------------------------------------------------
Класс: WearableShadowLod
Наследуется от: MonoBehaviour
Поля:
  Renderer[] DisableShadows
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WeatherEffect
Наследуется от: BaseMonoBehaviour
Поля:
  ParticleSystem[] emitOnStart
  ParticleSystem[] emitOnStop
  ParticleSystem[] emitOnLoop
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AuroraEffect
Наследуется от: WeatherEffect
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RainbowEffect
Наследуется от: WeatherEffect
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RainEffect
Наследуется от: WeatherEffect
Поля:
  int FadeStartDistance
  int FadeEndDistance
  int FadeFalloff
  bool Stormy
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SnowEffect
Наследуется от: WeatherEffect
Поля:
  int FadeStartDistance
  int FadeEndDistance
  int FadeFalloff
  bool Stormy
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnderwaterEffect
Наследуется от: WeatherEffect
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WeatherEffectSting
Наследуется от: BaseMonoBehaviour
Поля:
  float frequency
  float variance
  GameObjectRef[] effects
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RainEffectSting
Наследуется от: WeatherEffectSting
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WeatherPresetType
Наследуется от: Enum
Поля:
  int value__
  WeatherPresetType Clear
  WeatherPresetType Overcast
  WeatherPresetType Storm
  WeatherPresetType Dust
  WeatherPresetType Fog
  WeatherPresetType Rain
  WeatherPresetType Cinematic
Свойства:
Методы:
--------------------------------------------------
Класс: WeatherPreset
Наследуется от: ScriptableObject
Поля:
  WeatherPresetType Type
  float Wind
  float Rain
  float Thunder
  float Rainbow
  TOD_AtmosphereParameters Atmosphere
  TOD_CloudParameters Clouds
  float OceanScale
Свойства:
Методы:
  void Apply(TOD_Sky sky)
  void Copy(TOD_Sky sky)
  void Reset()
  void Set(WeatherPreset other)
  string ToString()
  void Fade(WeatherPreset a, WeatherPreset b, float t)
  void Override(WeatherPreset other)
  void Max(WeatherPreset other)
  void Min(WeatherPreset other)
  void Fade(Single& x, float a, float b, float t)
  void Override(Single& x, float other)
  void Max(Single& x, float other)
  void Min(Single& x, float other)
  void .ctor()
--------------------------------------------------
Класс: LegacyWeatherState
Наследуется от: object
Поля:
  WeatherPreset preset
Свойства:
  float Wind
  float Rain
  float Clouds
  float Fog
Методы:
  void .ctor(WeatherPreset preset)
  float get_Wind()
  void set_Wind(float value)
  float get_Rain()
  void set_Rain(float value)
  float get_Clouds()
  void set_Clouds(float value)
  float get_Fog()
  void set_Fog(float value)
--------------------------------------------------
Класс: WordFilter
Наследуется от: object
Поля:
Свойства:
Методы:
  string Filter(string str)
--------------------------------------------------
Класс: WorldGrid
Наследуется от: SingletonComponent`1<WorldGrid>
Поля:
  bool Paused
  float CellSize
  float MaxMilliseconds
  float MaxRefreshDistance
  float MinTimeBetweenRefreshes
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WorldModel
Наследуется от: MonoBehaviour
Поля:
  float mass
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PegConfig
Наследуется от: object
Поля:
  PegType Type
  Vector3 VerticalMountLocalRotation
  Vector3 VerticalMountLocalOffset
Свойства:
Методы:
  void Init(PegType t, Vector3 localRot, Vector3 localOffset)
  void .ctor()
--------------------------------------------------
Класс: WorldModelRackMountConfig
Наследуется от: MonoBehaviour
Поля:
  List`1<RackType> ExcludedRackTypes
  Vector3 CenterOffsfet
  Vector3 LeftOffset
  Vector3 VerticalMountLocalRotation
  Vector3 VerticalMountLocalOffset
  int XSize
  int YSize
  int ZSize
  List`1<PegConfig> Pegs
  List`1<PegConfig> VerticalPegs
  bool OverrideScale
  Vector3 Scale
  bool UseManualRenderBounds
  Bounds ManualRenderBounds
  List`1<CustomPosition> CustomPositions
Свойства:
Методы:
  WorldModelRackMountConfig GetForItemDef(ItemDefinition itemDef)
  void ApplyTransformDefaults(Transform displayItem)
  CustomPosition FindCustomRackPosition(SpecialRackType rackType)
  void .ctor()
--------------------------------------------------
Класс: GestureCollection
Наследуется от: ScriptableObject
Поля:
  UInt32 HeavyLandingId
  GestureConfig[] AllGestures
  float GestureVmInDuration
  AnimationCurve GestureInCurve
  float GestureVmOutDuration
  AnimationCurve GestureOutCurve
  float GestureViewmodelDeployDelay
Свойства:
Методы:
  GestureConfig IdToGesture(UInt32 id)
  GestureConfig StringToGesture(string gestureName)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GestureConfig
Наследуется от: ScriptableObject
Поля:
  UInt32 gestureId
  string gestureCommand
  string convarName
  Phrase gestureName
  Sprite icon
  int order
  float duration
  bool canCancel
  PlayerModelLayer playerModelLayer
  GestureType gestureType
  bool hideHeldEntity
  bool canDuckDuringGesture
  bool hideInWheel
  bool hasViewmodelAnimation
  MovementCapabilities movementMode
  AnimationType animationType
  CameraMode viewMode
  bool useRootMotion
  GestureActionType actionType
  bool forceUnlock
  SteamDLCItem dlcItem
  SteamInventoryItem inventoryItem
Свойства:
Методы:
  bool IsOwnedBy(BasePlayer player)
  bool CanBeUsedBy(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: OutlineManager
Наследуется от: MonoBehaviour
Поля:
  Material blurMat
  List`1<OutlineObject> objectsToRender
  float blurAmount
  Material glowSolidMaterial
  Material blendGlowMaterial
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OutlineObject
Наследуется от: MonoBehaviour
Поля:
  Mesh[] meshes
  Transform[] meshTransforms
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WorldModelOutline
Наследуется от: OutlineObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LinearFog
Наследуется от: MonoBehaviour
Поля:
  Material fogMaterial
  Color fogColor
  float fogStart
  float fogRange
  float fogDensity
  bool fogSky
Свойства:
Методы:
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void .ctor()
--------------------------------------------------
Класс: MaterialOverlay
Наследуется от: MonoBehaviour
Поля:
  Material material
Свойства:
Методы:
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void .ctor()
--------------------------------------------------
Класс: NaturalBloomAndDirtyLens
Наследуется от: MonoBehaviour
Поля:
  Shader shader
  Texture2D lensDirtTexture
  float range
  float cutoff
  float bloomIntensity
  float lensDirtIntensity
  float spread
  int iterations
  int mips
  Single[] mipWeights
  bool highPrecision
  bool downscaleSource
  bool debug
  bool temporalFilter
  float temporalFilterWeight
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ImageRenderController
Наследуется от: SingletonComponent`1<ImageRenderController>
Поля:
  Camera Camera
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BUTTON
Наследуется от: Enum
Поля:
  int value__
  BUTTON FORWARD
  BUTTON BACKWARD
  BUTTON LEFT
  BUTTON RIGHT
  BUTTON JUMP
  BUTTON DUCK
  BUTTON SPRINT
  BUTTON USE
  BUTTON FIRE_PRIMARY
  BUTTON FIRE_SECONDARY
  BUTTON RELOAD
  BUTTON FIRE_THIRD
Свойства:
Методы:
--------------------------------------------------
Класс: InputState
Наследуется от: object
Поля:
  InputMessage current
  InputMessage previous
  int SwallowedButtons
Свойства:
Методы:
  bool IsDown(BUTTON btn)
  bool WasDown(BUTTON btn)
  bool IsAnyDown()
  bool WasJustPressed(BUTTON btn)
  bool WasJustReleased(BUTTON btn)
  void SwallowButton(BUTTON btn)
  Quaternion AimAngle()
  Vector3 MouseDelta()
  void Flip(InputMessage newcurrent)
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: ItemCraftTask
Наследуется от: object
Поля:
  ItemBlueprint blueprint
  float endTime
  int taskUID
  bool cancelled
  InstanceData instanceData
  int amount
  int skinID
  List`1<Item> takenItems
  int numCrafted
  float conditionScale
  BaseEntity workbenchEntity
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemCrafter
Наследуется от: EntityComponent`1<BasePlayer>
Поля:
  List`1<ItemContainer> containers
  LinkedList`1<ItemCraftTask> queue
  int taskUID
  BasePlayer owner
Свойства:
Методы:
  void AddContainer(ItemContainer container)
  float GetScaledDuration(ItemBlueprint bp, float workbenchLevel)
  void ServerUpdate(float delta)
  void CollectIngredient(int item, int amount, List`1<Item> collect)
  void CollectIngredients(ItemBlueprint bp, ItemCraftTask task, int amount, BasePlayer player)
  bool CraftItem(ItemBlueprint bp, BasePlayer owner, InstanceData instanceData, int amount, int skinID, Item fromTempBlueprint, bool free)
  void FinishCrafting(ItemCraftTask task)
  bool CancelTask(int iID, bool ReturnItems)
  bool CancelBlueprint(int itemid)
  void CancelAll(bool returnItems)
  bool DoesHaveUsableItem(int item, int iAmount)
  bool CanCraft(ItemBlueprint bp, int amount, bool free)
  bool CanCraft(ItemDefinition def, int amount, bool free)
  bool FastTrackTask(int taskID)
  ItemCrafter Save()
  void Load(ItemCrafter proto)
  void SendToOwner()
  void .ctor()
  List`1<Item> <Save>g__SaveItems|18_0(List`1<Item> items)
  List`1<Item> <Load>g__LoadItems|19_0(List`1<Item> itemProtos)
--------------------------------------------------
Класс: ItemEventFlag
Наследуется от: MonoBehaviour
Поля:
  Flag flag
  UnityEvent onEnabled
  UnityEvent onDisable
  bool firstRun
  bool lastState
Свойства:
Методы:
  void OnItemUpdate(Item item)
  void .ctor()
--------------------------------------------------
Класс: IAmmoContainer
Поля:
Свойства:
Методы:
  void FindAmmo(List`1<Item> list, AmmoTypes ammoType)
  List`1<Item> FindItemsByItemID(int id)
  Item FindItemByItemName(string name)
  bool HasAmmo(AmmoTypes ammoType)
  Item FindItemByUID(ItemId iUID)
  bool GiveItem(Item item, ItemContainer container)
--------------------------------------------------
Класс: Item
Наследуется от: object
Поля:
  string DefaultArmourBreakEffectPath
  float _condition
  float _maxCondition
  ItemDefinition info
  ItemId uid
  bool dirty
  int amount
  int position
  float busyTime
  float removeTime
  float fuel
  bool isServer
  InstanceData instanceData
  ulong skin
  string name
  string streamerName
  string text
  Nullable`1<int> <ammoCount>k__BackingField
  float cookTimeLeft
  Action`1<Item> OnDirty
  Flag flags
  ItemContainer contents
  ItemContainer parent
  EntityRef worldEnt
  EntityRef heldEntity
  Action`2<Item, float> onCycle
Свойства:
  float condition
  float maxCondition
  float maxConditionNormalized
  float conditionNormalized
  bool hasCondition
  bool isBroken
  Nullable`1<int> ammoCount
  int despawnMultiplier
  ItemDefinition blueprintTargetDef
  int blueprintTarget
  int blueprintAmount
  Item parentItem
  float temperature
  TraitFlag Traits
Методы:
  void set_condition(float value)
  float get_condition()
  void set_maxCondition(float value)
  float get_maxCondition()
  float get_maxConditionNormalized()
  float get_conditionNormalized()
  void set_conditionNormalized(float value)
  bool get_hasCondition()
  bool get_isBroken()
  void LoseCondition(float amount)
  void RepairCondition(float amount)
  void DoRepair(float maxLossFraction)
  ItemContainer GetRootContainer()
  void OnBroken()
  Nullable`1<int> get_ammoCount()
  void set_ammoCount(Nullable`1<int> value)
  string GetName(Nullable`1<bool> streamerModeOverride)
  int get_despawnMultiplier()
  ItemDefinition get_blueprintTargetDef()
  int get_blueprintTarget()
  void set_blueprintTarget(int value)
  int get_blueprintAmount()
  void set_blueprintAmount(int value)
  bool IsBlueprint()
  void add_OnDirty(Action`1<Item> value)
  void remove_OnDirty(Action`1<Item> value)
  bool HasFlag(Flag f)
  void SetFlag(Flag f, bool b)
  bool IsOn()
  bool IsOnFire()
  bool IsCooking()
  bool IsLocked()
  Item get_parentItem()
  void MarkDirty()
  void OnChanged()
  void CollectedForCrafting(BasePlayer crafter)
  void ReturnedFromCancelledCraft(BasePlayer crafter)
  void Initialize(ItemDefinition template)
  void OnItemCreated()
  void OnVirginSpawn()
  float GetDespawnDuration()
  void RemoveFromWorld()
  void OnRemovedFromWorld()
  void RemoveFromContainer()
  bool DoItemSlotsConflict(Item other)
  void SetParent(ItemContainer target)
  void OnAttacked(HitInfo hitInfo)
  BaseEntity GetEntityOwner()
  bool IsChildContainer(ItemContainer c)
  bool CanMoveTo(ItemContainer newcontainer, int iTargetPos)
  bool MoveToContainer(ItemContainer newcontainer, int iTargetPos, bool allowStack, bool ignoreStackLimit, BasePlayer sourcePlayer, bool allowSwap)
  void RemoveConflictingSlots(ItemContainer container, BaseEntity entityOwner, BasePlayer sourcePlayer)
  BaseEntity CreateWorldObject(Vector3 pos, Quaternion rotation, BaseEntity parentEnt, UInt32 parentBone)
  BaseEntity Drop(Vector3 vPos, Vector3 vVelocity, Quaternion rotation)
  BaseEntity DropAndTossUpwards(Vector3 vPos, float force)
  bool IsBusy()
  void BusyFor(float fTime)
  void Remove(float fTime)
  void DoRemove()
  void SwitchOnOff(bool bNewState)
  void LockUnlock(bool bNewState)
  float get_temperature()
  BasePlayer GetOwnerPlayer()
  bool IsBackpack()
  Item SplitItem(int split_Amount)
  bool CanBeHeld()
  bool CanStack(Item item)
  bool IsValid()
  void SetWorldEntity(BaseEntity ent)
  void OnMovedToWorld()
  BaseEntity GetWorldEntity()
  void SetHeldEntity(BaseEntity ent)
  BaseEntity GetHeldEntity()
  void add_onCycle(Action`2<Item, float> value)
  void remove_onCycle(Action`2<Item, float> value)
  void OnCycle(float delta)
  void ServerCommand(string command, BasePlayer player)
  void UseItem(int amountToConsume)
  bool HasAmmo(AmmoTypes ammoType)
  void FindAmmo(List`1<Item> list, AmmoTypes ammoType)
  int GetAmmoAmount(AmmoTypes ammoType)
  string ToString()
  Item FindItem(ItemId iUID)
  int MaxStackable()
  TraitFlag get_Traits()
  GameObjectRef GetWorldModel()
  Item Save(bool bIncludeContainer, bool bIncludeOwners)
  void Load(Item load)
  void .ctor()
--------------------------------------------------
Класс: IItemUpdate
Поля:
Свойства:
Методы:
  void OnItemUpdate(Item item)
--------------------------------------------------
Класс: IItemSetup
Поля:
Свойства:
Методы:
  void OnItemSetup(Item item)
--------------------------------------------------
Класс: ItemContainer
Наследуется от: object
Поля:
  Flag flags
  ContentsType allowedContents
  ItemDefinition[] onlyAllowedItems
  List`1<ItemSlot> availableSlots
  int capacity
  ItemContainerId uid
  bool dirty
  List`1<Item> itemList
  float temperature
  Item parent
  BasePlayer playerOwner
  BaseEntity entityOwner
  bool isServer
  int maxStackSize
  Action onDirty
  Func`3<Item, int, bool> canAcceptItem
  Func`3<Item, int, bool> slotIsReserved
  Action`2<Item, bool> onItemAddedRemoved
  Action`1<Item> onPreItemRemove
Свойства:
  bool HasLimitedAllowedItems
  Vector3 dropPosition
  Vector3 dropVelocity
Методы:
  bool HasFlag(Flag f)
  void SetFlag(Flag f, bool b)
  bool IsLocked()
  bool PlayerItemInputBlocked()
  bool get_HasLimitedAllowedItems()
  void add_onDirty(Action value)
  void remove_onDirty(Action value)
  float GetTemperature(int slot)
  void ServerInitialize(Item parentItem, int iMaxCapacity)
  void GiveUID()
  void MarkDirty()
  DroppedItemContainer Drop(string prefab, Vector3 pos, Quaternion rot, float destroyPercent)
  DroppedItemContainer Drop(string prefab, Vector3 pos, Quaternion rot, ItemContainer[] containers)
  BaseEntity GetEntityOwner(bool returnHeldEntity)
  void OnChanged()
  Item FindItemByUID(ItemId iUID)
  bool IsFull()
  bool IsEmpty()
  bool CanAccept(Item item)
  int GetMaxTransferAmount(ItemDefinition def)
  void SetOnlyAllowedItem(ItemDefinition def)
  void SetOnlyAllowedItems(ItemDefinition[] defs)
  bool Insert(Item item)
  bool SlotTaken(Item item, int i)
  Item GetSlot(int slot)
  Item GetNonFullStackWithinRange(Item def, Vector2i range)
  bool FindPosition(Item item)
  void SetLocked(bool isLocked)
  bool Remove(Item item)
  void Clear()
  void Kill()
  int GetAmount(int itemid, bool onlyUsableAmounts)
  Item FindItemByItemID(int itemid)
  Item FindItemByItemName(string name)
  Item FindBySubEntityID(NetworkableId subEntityID)
  List`1<Item> FindItemsByItemID(int itemid)
  ItemContainer Save()
  void Load(ItemContainer container)
  BasePlayer GetOwnerPlayer()
  int ContainerMaxStackSize()
  int Take(List`1<Item> collect, int itemid, int iAmount)
  bool TryTakeOne(int itemid, Item& item)
  bool GiveItem(Item item, ItemContainer container)
  Vector3 get_dropPosition()
  Vector3 get_dropVelocity()
  void OnCycle(float delta)
  void FindAmmo(List`1<Item> list, AmmoTypes ammoType)
  bool HasAmmo(AmmoTypes ammoType)
  int GetAmmoAmount(AmmoTypes ammoType)
  int TotalItemAmount()
  int GetTotalItemAmount(Item item, int slotStartInclusive, int slotEndInclusive)
  int GetTotalCategoryAmount(ItemCategory category, int slotStartInclusive, int slotEndInclusive)
  void AddItem(ItemDefinition itemToCreate, int amount, ulong skin, LimitStack limitStack)
  void OnMovedToWorld()
  void OnRemovedFromWorld()
  UInt32 ContentsHash()
  ItemContainer FindContainer(ItemContainerId id)
  CanAcceptResult CanAcceptItem(Item item, int targetPos)
  bool HasBackpackItem()
  void .ctor()
--------------------------------------------------
Класс: ItemCorpseOverride
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef MaleCorpse
  GameObjectRef FemaleCorpse
  bool BlockWearableCopy
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemBlueprint
Наследуется от: MonoBehaviour
Поля:
  List`1<ItemAmount> ingredients
  List`1<ItemDefinition> additionalUnlocks
  bool defaultBlueprint
  bool userCraftable
  bool isResearchable
  bool forceShowInConveyorFilter
  Rarity rarity
  int workbenchLevelRequired
  int scrapRequired
  int scrapFromRecycle
  bool NeedsSteamItem
  int blueprintStackSize
  float time
  int amountToCreate
  string UnlockAchievment
  string RecycleStat
Свойства:
  ItemDefinition targetItem
  bool NeedsSteamDLC
Методы:
  ItemDefinition get_targetItem()
  bool get_NeedsSteamDLC()
  void .ctor()
--------------------------------------------------
Класс: ItemDefinition
Наследуется от: MonoBehaviour
Поля:
  int itemid
  string shortname
  Phrase displayName
  Phrase displayDescription
  Sprite iconSprite
  ItemCategory category
  ItemSelectionPanel selectionPanel
  int maxDraggable
  ContentsType itemType
  AmountType amountType
  ItemSlot occupySlots
  int stackable
  bool quickDespawn
  Rarity rarity
  Rarity despawnRarity
  bool spawnAsBlueprint
  SoundDefinition inventoryGrabSound
  SoundDefinition inventoryDropSound
  SoundDefinition physImpactSoundDef
  Condition condition
  bool hidden
  Flag flags
  SteamInventoryItem steamItem
  SteamDLCItem steamDlc
  ItemDefinition Parent
  GameObjectRef worldModelPrefab
  OverrideWorldModel[] worldModelOverrides
  ItemDefinition isRedirectOf
  RedirectVendingBehaviour redirectVendingBehaviour
  ItemMod[] itemMods
  TraitFlag Traits
  Skin[] skins
  IPlayerItemDefinition[] _skins2
  GameObject panel
  ItemModWearable <ItemModWearable>k__BackingField
  bool <isHoldable>k__BackingField
  bool <isUsable>k__BackingField
  bool <CraftableWithSkin>k__BackingField
  ItemDefinition[] Children
Свойства:
  IPlayerItemDefinition[] skins2
  ItemBlueprint Blueprint
  int craftingStackable
  bool isWearable
  ItemModWearable ItemModWearable
  bool isHoldable
  bool isUsable
  bool HasSkins
  bool CraftableWithSkin
Методы:
  IPlayerItemDefinition[] get_skins2()
  void InvalidateWorkshopSkinCache()
  ulong FindSkin(int itemID, int skinID)
  ItemBlueprint get_Blueprint()
  int get_craftingStackable()
  bool HasFlag(Flag f)
  void Initialize(List`1<ItemDefinition> itemList)
  bool get_isWearable()
  ItemModWearable get_ItemModWearable()
  void set_ItemModWearable(ItemModWearable value)
  bool get_isHoldable()
  void set_isHoldable(bool value)
  bool get_isUsable()
  void set_isUsable(bool value)
  bool get_HasSkins()
  bool get_CraftableWithSkin()
  void set_CraftableWithSkin(bool value)
  GameObjectRef GetWorldModel(int amount)
  int GetWorldModelIndex(int amount)
  void .ctor()
  bool <Initialize>b__48_0(ItemDefinition x)
--------------------------------------------------
Класс: ItemCategory
Наследуется от: Enum
Поля:
  int value__
  ItemCategory Weapon
  ItemCategory Construction
  ItemCategory Items
  ItemCategory Resources
  ItemCategory Attire
  ItemCategory Tool
  ItemCategory Medical
  ItemCategory Food
  ItemCategory Ammunition
  ItemCategory Traps
  ItemCategory Misc
  ItemCategory All
  ItemCategory Common
  ItemCategory Component
  ItemCategory Search
  ItemCategory Favourite
  ItemCategory Electrical
  ItemCategory Fun
Свойства:
Методы:
--------------------------------------------------
Класс: ItemSlot
Наследуется от: Enum
Поля:
  int value__
  ItemSlot None
  ItemSlot Barrel
  ItemSlot Silencer
  ItemSlot Scope
  ItemSlot UnderBarrel
  ItemSlot Magazine
  ItemSlot Internal
Свойства:
Методы:
--------------------------------------------------
Класс: ItemSelectionPanel
Наследуется от: Enum
Поля:
  int value__
  ItemSelectionPanel None
  ItemSelectionPanel Vessel
  ItemSelectionPanel Modifications
  ItemSelectionPanel GunInformation
Свойства:
Методы:
--------------------------------------------------
Класс: ItemSelector
Наследуется от: PropertyAttribute
Поля:
  ItemCategory category
Свойства:
Методы:
  void .ctor(ItemCategory category)
--------------------------------------------------
Класс: ItemMod
Наследуется от: MonoBehaviour
Поля:
  ItemMod[] siblingMods
Свойства:
Методы:
  void ModInit()
  void OnItemCreated(Item item)
  void OnVirginItem(Item item)
  void ServerCommand(Item item, string command, BasePlayer player)
  void DoAction(Item item, BasePlayer player)
  void OnRemove(Item item)
  void OnParentChanged(Item item)
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void ReturnedFromCancelledCraft(Item item, BasePlayer crafter)
  void OnAttacked(Item item, HitInfo info)
  void OnChanged(Item item)
  bool CanDoAction(Item item, BasePlayer player)
  bool Passes(Item item)
  void OnRemovedFromWorld(Item item)
  void OnMovedToWorld(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModActionChange
Наследуется от: ItemMod
Поля:
  ItemMod[] actions
Свойства:
Методы:
  void OnChanged(Item item)
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ItemModActionContainerChange
Наследуется от: ItemMod
Поля:
  ItemMod[] actions
Свойства:
Методы:
  void OnParentChanged(Item item)
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ItemModAlterCondition
Наследуется от: ItemMod
Поля:
  float conditionChange
Свойства:
Методы:
  void DoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModAnimalEquipment
Наследуется от: ItemMod
Поля:
  Flags WearableFlag
  bool hideHair
  ProtectionProperties animalProtection
  ProtectionProperties riderProtection
  int additionalInventorySlots
  float speedModifier
  float staminaUseModifier
  SlotType slot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModAssociatedEntity`1
Наследуется от: ItemMod
Поля:
  GameObjectRef entityPrefab
Свойства:
  bool AllowNullParenting
  bool AllowHeldEntityParenting
  bool ShouldAutoCreateEntity
  bool OwnedByParentPlayer
Методы:
  bool get_AllowNullParenting()
  bool get_AllowHeldEntityParenting()
  bool get_ShouldAutoCreateEntity()
  bool get_OwnedByParentPlayer()
  void OnItemCreated(Item item)
  T CreateAssociatedEntity(Item item)
  void OnAssociatedItemCreated(T ent)
  void OnRemove(Item item)
  void OnMovedToWorld(Item item)
  void OnRemovedFromWorld(Item item)
  void UpdateParent(Item item)
  void OnParentChanged(Item item)
  BaseEntity GetEntityForParenting(Item item)
  bool GetAssociatedEntity(Item item, T& result, bool isServer)
  T GetAssociatedEntity(Item item, bool isServer)
  void .ctor()
--------------------------------------------------
Класс: ItemModBaitContainer
Наследуется от: ItemModContainer
Поля:
Свойства:
  bool ForceAcceptItemCheck
Методы:
  bool get_ForceAcceptItemCheck()
  bool CanAcceptItem(Item item, int count)
  void SetAllowedItems(ItemContainer container)
  void .ctor()
--------------------------------------------------
Класс: ItemModBlueprintCraft
Наследуется от: ItemMod
Поля:
  GameObjectRef successEffect
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModBurnable
Наследуется от: ItemMod
Поля:
  float fuelAmount
  ItemDefinition byproductItem
  int byproductAmount
  float byproductChance
Свойства:
Методы:
  void OnItemCreated(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModCassetteContainer
Наследуется от: ItemModContainer
Поля:
  ItemDefinition[] CassetteItems
Свойства:
  bool ForceAcceptItemCheck
Методы:
  bool get_ForceAcceptItemCheck()
  void SetAllowedItems(ItemContainer container)
  void .ctor()
--------------------------------------------------
Класс: ItemModChildIO
Наследуется от: ItemMod
Поля:
  GameObjectRef TargetChildIO
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModCompostable
Наследуется от: MonoBehaviour
Поля:
  float TotalFertilizerProduced
  float BaitValue
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModConditionContainerFlag
Наследуется от: ItemMod
Поля:
  Flag flag
  bool requiredState
Свойства:
Методы:
  bool Passes(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModConditionHasCondition
Наследуется от: ItemMod
Поля:
  float conditionTarget
  float conditionFractionTarget
  bool lessThan
Свойства:
Методы:
  bool Passes(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModConditionHasContents
Наследуется от: ItemMod
Поля:
  ItemDefinition itemDef
  bool requiredState
Свойства:
Методы:
  bool Passes(Item item)
  void .ctor()
  bool <Passes>b__2_0(Item x)
--------------------------------------------------
Класс: ItemModConditionHasFlag
Наследуется от: ItemMod
Поля:
  Flag flag
  bool requiredState
Свойства:
Методы:
  bool Passes(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModConditionInWater
Наследуется от: ItemMod
Поля:
  bool requiredState
Свойства:
Методы:
  bool Passes(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModConditionIsSleeping
Наследуется от: ItemMod
Поля:
  bool requiredState
Свойства:
Методы:
  bool Passes(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModConsumable
Наследуется от: MonoBehaviour
Поля:
  int amountToConsume
  float conditionFractionToLose
  string achievementWhenEaten
  List`1<ConsumableEffect> effects
  List`1<ModifierDefintion> modifiers
Свойства:
Методы:
  float GetIfType(Type typeToPick)
  void .ctor()
--------------------------------------------------
Класс: ItemModConsume
Наследуется от: ItemMod
Поля:
  GameObjectRef consumeEffect
  string eatGesture
  ItemAmountRandom[] product
  ItemModConsumable primaryConsumable
Свойства:
Методы:
  ItemModConsumable GetConsumable()
  GameObjectRef GetConsumeEffect()
  void DoAction(Item item, BasePlayer player)
  bool CanDoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModConsumeChance
Наследуется от: ItemModConsume
Поля:
  float chanceForSecondaryConsume
  GameObjectRef secondaryConsumeEffect
  ItemModConsumable secondaryConsumable
Свойства:
Методы:
  bool GetChance()
  ItemModConsumable GetConsumable()
  GameObjectRef GetConsumeEffect()
  void .ctor()
--------------------------------------------------
Класс: ItemModConsumeContents
Наследуется от: ItemMod
Поля:
  GameObjectRef consumeEffect
Свойства:
Методы:
  void DoAction(Item item, BasePlayer player)
  bool CanDoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModContainer
Наследуется от: ItemMod
Поля:
  int capacity
  int maxStackSize
  Flag containerFlags
  ContentsType onlyAllowedContents
  ItemDefinition onlyAllowedItemType
  List`1<ItemSlot> availableSlots
  ItemDefinition[] validItemWhitelist
  bool openInDeployed
  bool openInInventory
  List`1<ItemAmount> defaultContents
Свойства:
  bool ForceAcceptItemCheck
Методы:
  void OnItemCreated(Item item)
  void SetAllowedItems(ItemContainer container)
  bool get_ForceAcceptItemCheck()
  bool CanAcceptItem(Item item, int count)
  void OnVirginItem(Item item)
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void .ctor()
--------------------------------------------------
Класс: ItemModContainerRestriction
Наследуется от: ItemMod
Поля:
  SlotFlags slotFlags
Свойства:
Методы:
  bool CanExistWith(ItemModContainerRestriction other)
  void .ctor()
--------------------------------------------------
Класс: ItemModCookable
Наследуется от: ItemMod
Поля:
  ItemDefinition becomeOnCooked
  float cookTime
  int amountOfBecome
  int lowTemp
  int highTemp
  bool setCookingFlag
Свойства:
Методы:
  void OnValidate()
  bool CanBeCookedByAtTemperature(float temperature)
  void CycleCooking(Item item, float delta)
  void OnItemCreated(Item itemcreated)
  void .ctor()
--------------------------------------------------
Класс: ItemModCycle
Наследуется от: ItemMod
Поля:
  ItemMod[] actions
  float timeBetweenCycles
  float timerStart
  bool onlyAdvanceTimerWhenPass
Свойства:
Методы:
  void OnItemCreated(Item itemcreated)
  bool CanCycle(Item item)
  void CustomCycle(Item item, float delta)
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ItemModDeployable
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef entityPrefab
  bool showCrosshair
  string UnlockAchievement
Свойства:
Методы:
  Deployable GetDeployable(BaseEntity entity)
  void OnDeployed(BaseEntity ent, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModEntity
Наследуется от: ItemMod
Поля:
  GameObjectRef entityPrefab
  string defaultBone
Свойства:
Методы:
  void OnChanged(Item item)
  void OnItemCreated(Item item)
  void OnRemove(Item item)
  bool ParentToParent(Item item, BaseEntity ourEntity)
  bool ParentToPlayer(Item item, BaseEntity ourEntity)
  void OnParentChanged(Item item)
  void CollectedForCrafting(Item item, BasePlayer crafter)
  void ReturnedFromCancelledCraft(Item item, BasePlayer crafter)
  void .ctor()
--------------------------------------------------
Класс: ItemModEntityReference
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef entityPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModFishable
Наследуется от: ItemMod
Поля:
  bool CanBeFished
  float StrainModifier
  float MoveMultiplier
  float ReelInSpeedMultiplier
  float CatchWaitTimeMultiplier
  float MinimumBaitLevel
  float MaximumBaitLevel
  float MinimumWaterDepth
  float MaximumWaterDepth
  FishingTag RequiredTag
  float Chance
  string SteamStatName
  bool CanBeMounted
  int FishMountIndex
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IAirSupply
Поля:
Свойства:
  AirSupplyType AirType
Методы:
  AirSupplyType get_AirType()
  float GetAirTimeRemaining()
--------------------------------------------------
Класс: ItemModGiveOxygen
Наследуется от: ItemMod
Поля:
  AirSupplyType airType
  int amountToConsume
  GameObjectRef inhaleEffect
  GameObjectRef exhaleEffect
  GameObjectRef bubblesEffect
  float timeRemaining
  float cycleTime
  bool inhaled
Свойства:
  AirSupplyType AirType
Методы:
  AirSupplyType get_AirType()
  float GetAirTimeRemaining()
  void ModInit()
  void DoAction(Item item, BasePlayer player)
  void OnChanged(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModHABEquipment
Наследуется от: ItemMod
Поля:
  SlotType slot
  GameObjectRef Prefab
  int MaxEquipCount
  bool GroundEquipOnly
  float DelayNextUpgradeOnRemoveDuration
  Phrase MenuOptionTitle
  Phrase MenuOptionDesc
Свойства:
Методы:
  bool CanEquipToHAB(HotAirBalloon hab)
  void ApplyToHAB(HotAirBalloon hab)
  void .ctor()
--------------------------------------------------
Класс: ItemModHead
Наследуется от: ItemModAssociatedEntity`1<HeadEntity>
Поля:
Свойства:
  bool AllowNullParenting
Методы:
  bool get_AllowNullParenting()
  void .ctor()
--------------------------------------------------
Класс: ItemModKeycard
Наследуется от: ItemMod
Поля:
  int accessLevel
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModMenuOption
Наследуется от: ItemMod
Поля:
  string commandName
  ItemMod actionTarget
  Option option
  bool isPrimaryOption
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ItemModPaintable
Наследуется от: ItemModAssociatedEntity`1<PaintedItemStorageEntity>
Поля:
  GameObjectRef ChangeSignTextDialog
  MeshPaintableSource[] PaintableSources
Свойства:
  bool AllowNullParenting
  bool OwnedByParentPlayer
Методы:
  bool get_AllowNullParenting()
  bool get_OwnedByParentPlayer()
  void .ctor()
--------------------------------------------------
Класс: ItemModPetStats
Наследуется от: ItemMod
Поля:
  float SpeedModifier
  float MaxHealthModifier
  float AttackDamageModifier
  float AttackRateModifier
Свойства:
Методы:
  void Apply(BasePet pet)
  void .ctor()
--------------------------------------------------
Класс: ItemModProjectile
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef projectileObject
  ItemModProjectileMod[] mods
  AmmoTypes ammoType
  int numProjectiles
  float projectileSpread
  float projectileVelocity
  float projectileVelocitySpread
  bool useCurve
  AnimationCurve spreadScalar
  GameObjectRef attackEffectOverride
  float barrelConditionLoss
  string category
Свойства:
Методы:
  float GetRandomVelocity()
  float GetSpreadScalar()
  float GetIndexedSpreadScalar(int shotIndex, int maxShots)
  float GetAverageVelocity()
  float GetMinVelocity()
  float GetMaxVelocity()
  bool IsAmmo(AmmoTypes ammo)
  void ServerProjectileHit(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: ItemModProjectileMod
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void ServerProjectileHit(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: ItemModProjectileRadialDamage
Наследуется от: ItemModProjectileMod
Поля:
  float radius
  DamageTypeEntry damage
  GameObjectRef effect
  bool ignoreHitObject
Свойства:
Методы:
  void ServerProjectileHit(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: ItemModProjectileSpawn
Наследуется от: ItemModProjectile
Поля:
  float createOnImpactChance
  GameObjectRef createOnImpact
  float spreadAngle
  float spreadVelocityMin
  float spreadVelocityMax
  int numToCreateChances
Свойства:
Методы:
  void ServerProjectileHit(HitInfo info)
  void .ctor()
--------------------------------------------------
Класс: ItemModRackMountable
Наследуется от: ItemMod
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemModRecycleInto
Наследуется от: ItemMod
Поля:
  ItemDefinition recycleIntoItem
  int numRecycledItemMin
  int numRecycledItemMax
  GameObjectRef successEffect
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModRepair
Наследуется от: ItemMod
Поля:
  float conditionLost
  GameObjectRef successEffect
  int workbenchLvlRequired
  bool canUseRepairBench
Свойства:
Методы:
  bool HasCraftLevel(BasePlayer player)
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModReveal
Наследуется от: ItemMod
Поля:
  int numForReveal
  ItemDefinition revealedItemOverride
  int revealedItemAmount
  LootSpawn revealList
  GameObjectRef successEffect
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModSound
Наследуется от: ItemMod
Поля:
  GameObjectRef effect
  Type actionType
Свойства:
Методы:
  void OnParentChanged(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemModStudyBlueprint
Наследуется от: ItemMod
Поля:
  GameObjectRef studyEffect
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  bool IsBlueprintUnlocked(Item item, BasePlayer player, ItemDefinition& blueprintTargetDef, ItemBlueprint& blueprint)
  bool IsBlueprintUnlocked(ItemDefinition def, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModSummerSunglassesEquip
Наследуется от: ItemMod
Поля:
  float SunsetTime
  float SunriseTime
  string AchivementName
Свойства:
Методы:
  void DoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModSwap
Наследуется от: ItemMod
Поля:
  GameObjectRef actionEffect
  ItemAmount[] becomeItem
  bool sendPlayerPickupNotification
  bool sendPlayerDropNotification
  float xpScale
  ItemAmount[] RandomOptions
Свойства:
Методы:
  void DoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModSwitchFlag
Наследуется от: ItemMod
Поля:
  Flag flag
  bool state
Свойства:
Методы:
  void DoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModUpgrade
Наследуется от: ItemMod
Поля:
  int numForUpgrade
  float upgradeSuccessChance
  int numToLoseOnFail
  ItemDefinition upgradedItem
  int numUpgradedItem
  GameObjectRef successEffect
  GameObjectRef failEffect
Свойства:
Методы:
  void ServerCommand(Item item, string command, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModUseContent
Наследуется от: ItemMod
Поля:
  int amountToConsume
Свойства:
Методы:
  void DoAction(Item item, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: ItemModWearable
Наследуется от: ItemMod
Поля:
  GameObjectRef entityPrefab
  GameObjectRef entityPrefabFemale
  ProtectionProperties protectionProperties
  ArmorProperties armorProperties
  ClothingMovementProperties movementProperties
  blackoutType occlusionType
  bool blocksAiming
  bool emissive
  float accuracyBonus
  bool blocksEquipping
  float eggVision
  float weight
  bool equipOnRightClick
  bool npcOnly
  GameObjectRef breakEffect
  GameObjectRef viewmodelAddition
Свойства:
  Wearable targetWearable
Методы:
  Wearable get_targetWearable()
  void DoPrepare()
  void ModInit()
  bool ProtectsArea(HitArea area)
  bool HasProtections()
  float GetProtection(Item item, DamageType damageType)
  float ConditionProtectionScale(Item item)
  void CollectProtection(Item item, ProtectionProperties protection)
  bool IsHeadgear()
  bool IsFootwear()
  void OnAttacked(Item item, HitInfo info)
  bool CanExistWith(ItemModWearable wearable)
  void .ctor()
--------------------------------------------------
Класс: ItemModXPWhenUsed
Наследуется от: ItemMod
Поля:
  float xpPerUnit
  int unitSize
Свойства:
Методы:
  void GiveConsumeXP(Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemFootstepSounds
Наследуется от: MonoBehaviour
Поля:
  string effectFolder
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemAmount
Наследуется от: object
Поля:
  ItemDefinition itemDef
  float amount
  float startAmount
Свойства:
  int itemid
Методы:
  void .ctor(ItemDefinition item, float amt)
  int get_itemid()
  float GetAmount()
  void OnAfterDeserialize()
  void OnBeforeSerialize()
  ItemAmountList SerialiseList(List`1<ItemAmount> list)
  void DeserialiseList(List`1<ItemAmount> target, ItemAmountList source)
--------------------------------------------------
Класс: ItemAmountRandom
Наследуется от: object
Поля:
  ItemDefinition itemDef
  AnimationCurve amount
Свойства:
Методы:
  int RandomAmount()
  void .ctor()
--------------------------------------------------
Класс: ItemAmountRanged
Наследуется от: ItemAmount
Поля:
  float maxAmount
Свойства:
Методы:
  void OnAfterDeserialize()
  void .ctor(ItemDefinition item, float amt, float max)
  float GetAmount()
--------------------------------------------------
Класс: ItemManager
Наследуется от: object
Поля:
  List`1<ItemDefinition> itemList
  Dictionary`2<int, ItemDefinition> itemDictionary
  Dictionary`2<string, ItemDefinition> itemDictionaryByName
  List`1<ItemBlueprint> bpList
  Int32[] defaultBlueprints
  ItemDefinition blueprintBaseDef
  List`1<ItemRemove> ItemRemoves
Свойства:
Методы:
  void InvalidateWorkshopSkinCache()
  void Initialize()
  Item CreateByName(string strName, int iAmount, ulong skin)
  Item CreateByPartialName(string strName, int iAmount, ulong skin)
  ItemDefinition FindDefinitionByPartialName(string strName, int iAmount, ulong skin)
  Item CreateByItemID(int itemID, int iAmount, ulong skin)
  Item Create(ItemDefinition template, int iAmount, ulong skin)
  void TrySkinChangeItem(ItemDefinition& template, UInt64& skinId)
  Item Load(Item load, Item created, bool isServer)
  ItemDefinition FindItemDefinition(int itemID)
  ItemDefinition FindItemDefinition(string shortName)
  ItemBlueprint FindBlueprint(ItemDefinition item)
  List`1<ItemDefinition> GetItemDefinitions()
  List`1<ItemBlueprint> GetBlueprints()
  void DoRemoves()
  void Heartbeat()
  void RemoveItem(Item item, float fTime)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LeavesBlowing
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem m_psLeaves
  float m_flSwirl
  float m_flSpeed
  float m_flEmissionRate
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: MaterialEffect
Наследуется от: ScriptableObject
Поля:
  GameObjectRef DefaultEffect
  SoundDefinition DefaultSoundDefinition
  Entry[] Entries
  int waterFootstepIndex
  Entry deepWaterEntry
  float deepWaterDepth
  Entry submergedWaterEntry
  float submergedWaterDepth
  bool ScaleVolumeWithSpeed
  AnimationCurve SpeedGainCurve
Свойства:
Методы:
  Entry GetEntryFromMaterial(PhysicMaterial mat)
  Entry GetWaterEntry()
  void SpawnOnRay(Ray ray, int mask, float length, Vector3 forward, float speed)
  void PlaySound(SoundDefinition definition, Vector3 position, float velocity)
  void .ctor()
--------------------------------------------------
Класс: MaterialSound
Наследуется от: ScriptableObject
Поля:
  SoundDefinition DefaultSound
  Entry[] Entries
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MaxSpawnDistance
Наследуется от: MonoBehaviour
Поля:
  float maxDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseMission
Наследуется от: BaseScriptableObject
Поля:
  bool missionsenabled
  string shortname
  Phrase missionName
  Phrase missionDesc
  MissionObjectiveEntry[] objectives
  List`1<Vector3> blockedPoints
  string MISSION_COMPLETE_STAT
  GameObjectRef acceptEffect
  GameObjectRef failedEffect
  GameObjectRef victoryEffect
  int repeatDelaySecondsSuccess
  int repeatDelaySecondsFailed
  float timeLimitSeconds
  Sprite icon
  Sprite providerIcon
  MissionDependancy[] acceptDependancies
  MissionDependancy[] completionDependancies
  MissionEntityEntry[] missionEntities
  PositionGenerator[] positionGenerators
  ItemAmount[] baseRewards
Свойства:
  UInt32 id
  bool isRepeatable
Методы:
  UInt32 get_id()
  void PlayerDisconnected(BasePlayer player)
  void PlayerKilled(BasePlayer player)
  bool get_isRepeatable()
  Sprite GetIcon(MissionInstance instance)
  void SetupPositions(MissionInstance instance, BasePlayer assignee)
  void AddBlockers(MissionInstance instance)
  void RemoveBlockers(MissionInstance instance)
  void SetupRewards(MissionInstance instance, BasePlayer assignee)
  void DoMissionEffect(string effectString, BasePlayer assignee)
  void MissionStart(MissionInstance instance, BasePlayer assignee)
  void CheckObjectives(MissionInstance instance, BasePlayer assignee)
  void Think(MissionInstance instance, BasePlayer assignee, float delta)
  void MissionComplete(MissionInstance instance, BasePlayer assignee)
  void MissionSuccess(MissionInstance instance, BasePlayer assignee)
  void MissionFailed(MissionInstance instance, BasePlayer assignee, MissionFailReason failReason)
  void MissionEnded(MissionInstance instance, BasePlayer assignee)
  void OnObjectiveCompleted(int objectiveIndex, MissionInstance instance, BasePlayer playerFor)
  bool AssignMission(BasePlayer assignee, IMissionProvider provider, BaseMission mission)
  bool IsEligableForMission(BasePlayer player, IMissionProvider provider)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MissionEntity
Наследуется от: BaseMonoBehaviour
Поля:
  bool cleanupOnMissionSuccess
  bool cleanupOnMissionFailed
Свойства:
Методы:
  void OnParentDestroying()
  void Setup(BasePlayer assignee, MissionInstance instance, bool wantsSuccessCleanup, bool wantsFailedCleanup)
  void MissionStarted(BasePlayer assignee, MissionInstance instance)
  void MissionEnded(BasePlayer assignee, MissionInstance instance)
  BaseEntity GetEntity()
  void .ctor()
--------------------------------------------------
Класс: IMissionEntityListener
Поля:
Свойства:
Методы:
  void MissionStarted(BasePlayer assignee, MissionInstance instance)
  void MissionEnded(BasePlayer assignee, MissionInstance instance)
--------------------------------------------------
Класс: IMissionProvider
Поля:
Свойства:
Методы:
  NetworkableId ProviderID()
  Vector3 ProviderPosition()
  BaseEntity Entity()
--------------------------------------------------
Класс: MissionManifest
Наследуется от: ScriptableObject
Поля:
  ScriptableObjectRef[] missionList
  WorldPositionGenerator[] positionGenerators
  MissionManifest instance
Свойства:
Методы:
  MissionManifest Get()
  BaseMission GetFromShortName(string shortname)
  BaseMission GetFromID(UInt32 id)
  void .ctor()
--------------------------------------------------
Класс: MissionPoint
Наследуется от: MonoBehaviour
Поля:
  bool dropToGround
  int COUNT
  int EVERYTHING
  int NOTHING
  int EASY_MONUMENT
  int MED_MONUMENT
  int HARD_MONUMENT
  int ITEM_HIDESPOT
  int UNDERWATER
  int EASY_MONUMENT_IDX
  int MED_MONUMENT_IDX
  int HARD_MONUMENT_IDX
  int ITEM_HIDESPOT_IDX
  int FOREST_IDX
  int ROADSIDE_IDX
  int BEACH
  int UNDERWATER_IDX
  Dictionary`2<int, int> type2index
  List`1<MissionPoint> all
  MissionPointEnum Flags
Свойства:
Методы:
  int TypeToIndex(int id)
  int IndexToType(int idx)
  void Awake()
  void Start()
  void DropToGround()
  void OnDisable()
  Vector3 GetPosition()
  Quaternion GetRotation()
  bool GetMissionPoints(List`1& points, Vector3 near, float minDistance, float maxDistance, int flags, int exclusionFlags)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MoveMission
Наследуется от: BaseMission
Поля:
  float minDistForMovePoint
  float maxDistForMovePoint
  float minDistFromLocation
Свойства:
Методы:
  void MissionStart(MissionInstance instance, BasePlayer assignee)
  void MissionEnded(MissionInstance instance, BasePlayer assignee)
  Sprite GetIcon(MissionInstance instance)
  void Think(MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionUIPanel
Наследуется от: MonoBehaviour
Поля:
  GameObject activeMissionParent
  RustText missionTitleText
  RustText missionDescText
  VirtualItemIcon[] rewardIcons
  Phrase noMissionText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MissionObjective
Наследуется от: ScriptableObject
Поля:
Свойства:
Методы:
  void MissionStarted(int index, MissionInstance instance)
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  bool IsStarted(int index, MissionInstance instance)
  bool CanProgress(int index, MissionInstance instance)
  bool ShouldObjectiveStart(int index, MissionInstance instance)
  bool IsCompleted(int index, MissionInstance instance)
  bool ShouldThink(int index, MissionInstance instance)
  void CompleteObjective(int index, MissionInstance instance, BasePlayer playerFor)
  void ProcessMissionEvent(BasePlayer playerFor, MissionInstance instance, int index, MissionEventType type, string identifier, float amount)
  void Think(int index, MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionObjective_AcquireItem
Наследуется от: MissionObjective
Поля:
  string itemShortname
  int targetItemAmount
Свойства:
Методы:
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  void ProcessMissionEvent(BasePlayer playerFor, MissionInstance instance, int index, MissionEventType type, string identifier, float amount)
  void Think(int index, MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionObjective_FreeCrate
Наследуется от: MissionObjective
Поля:
  int targetAmount
Свойства:
Методы:
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  void ProcessMissionEvent(BasePlayer playerFor, MissionInstance instance, int index, MissionEventType type, string identifier, float amount)
  void Think(int index, MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionObjective_Harvest
Наследуется от: MissionObjective
Поля:
  String[] itemShortnames
  int targetItemAmount
Свойства:
Методы:
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  void ProcessMissionEvent(BasePlayer playerFor, MissionInstance instance, int index, MissionEventType type, string identifier, float amount)
  void Think(int index, MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionObjective_KillEntity
Наследуется от: MissionObjective
Поля:
  String[] targetPrefabIDs
  int numToKill
  bool shouldUpdateMissionLocation
  float nextLocationUpdateTime
Свойства:
Методы:
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  void ProcessMissionEvent(BasePlayer playerFor, MissionInstance instance, int index, MissionEventType type, string identifier, float amount)
  void Think(int index, MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionObjective_Move
Наследуется от: MissionObjective
Поля:
  string positionName
  float distForCompletion
  bool use2D
Свойства:
Методы:
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  void Think(int index, MissionInstance instance, BasePlayer assignee, float delta)
  void .ctor()
--------------------------------------------------
Класс: MissionObjective_SpeakWith
Наследуется от: MissionObjective
Поля:
  ItemAmount[] requiredReturnItems
  bool destroyReturnItems
Свойства:
Методы:
  void ObjectiveStarted(BasePlayer playerFor, int index, MissionInstance instance)
  void ProcessMissionEvent(BasePlayer playerFor, MissionInstance instance, int index, MissionEventType type, string identifier, float amount)
  void .ctor()
--------------------------------------------------
Класс: WorldPositionGenerator
Наследуется от: ScriptableObject
Поля:
  SpawnFilter Filter
  float FilterCutoff
  bool aboveWater
  float MaxSlopeRadius
  float MaxSlopeDegrees
  float CheckSphereRadius
  LayerMask CheckSphereMask
  Vector3 _origin
  Vector3 _area
  ByteQuadtree _quadtree
Свойства:
Методы:
  bool TrySample(Vector3 origin, float minDist, float maxDist, Vector3& position, List`1<Vector3> blocked)
  void PrecalculatePositions()
  void .ctor()
  void <TrySample>g__EvaluateCandidate|10_0(Element child, <>c__DisplayClass10_0& )
  Rect <TrySample>g__GetElementRect|10_1(Element element, <>c__DisplayClass10_0& )
--------------------------------------------------
Класс: MovementSounds
Наследуется от: MonoBehaviour
Поля:
  SoundDefinition waterMovementDef
  float waterMovementFadeInSpeed
  float waterMovementFadeOutSpeed
  SoundDefinition enterWaterSmall
  SoundDefinition enterWaterMedium
  SoundDefinition enterWaterLarge
  Sound waterMovement
  Modulator waterGainMod
  bool inWater
  float waterLevel
  bool mute
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MoveOverTime
Наследуется от: MonoBehaviour
Поля:
  float speed
  Vector3 position
  Vector3 rotation
  Vector3 scale
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: NetworkCryptography
Наследуется от: object
Поля:
  Byte[] buffer
Свойства:
Методы:
  ArraySegment`1<byte> EncryptCopy(Connection connection, ArraySegment`1<byte> data)
  ArraySegment`1<byte> DecryptCopy(Connection connection, ArraySegment`1<byte> data)
  void Encrypt(Connection connection, ArraySegment`1& data)
  void Decrypt(Connection connection, ArraySegment`1& data)
  void EncryptionHandler(Connection connection, ArraySegment`1<byte> src, ArraySegment`1& dst)
  void DecryptionHandler(Connection connection, ArraySegment`1<byte> src, ArraySegment`1& dst)
  void .ctor()
--------------------------------------------------
Класс: NetworkCryptographyServer
Наследуется от: NetworkCryptography
Поля:
Свойства:
Методы:
  void EncryptionHandler(Connection connection, ArraySegment`1<byte> src, ArraySegment`1& dst)
  void DecryptionHandler(Connection connection, ArraySegment`1<byte> src, ArraySegment`1& dst)
  void .ctor()
--------------------------------------------------
Класс: NetworkVisibilityGrid
Наследуется от: MonoBehaviour
Поля:
  int overworldLayer
  int cavesLayer
  int tunnelsLayer
  int dynamicDungeonsFirstLayer
  int startID
  int gridSize
  int cellCount
  int visibilityRadiusFar
  int visibilityRadiusNear
  float switchTolerance
  float cavesThreshold
  float tunnelsThreshold
  float dynamicDungeonsThreshold
  float dynamicDungeonsInterval
  float halfGridSize
  float cellSize
  float halfCellSize
  int numIDsPerLayer
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void OnDisable()
  void OnDrawGizmosSelected()
  int PositionToGrid(float value)
  float GridToPosition(int value)
  int PositionToLayer(float y)
  UInt32 CoordToID(int x, int y, int layer)
  UInt32 GetID(Vector3 vPos)
  ValueTuple`3<int, int, int> DeconstructGroupId(int groupId)
  Bounds GetBounds(UInt32 uid)
  void OnGroupAdded(Group group)
  bool IsInside(Group group, Vector3 vPos)
  Group GetGroup(Vector3 vPos)
  void GetVisibleFromFar(Group group, List`1<Group> groups)
  void GetVisibleFromNear(Group group, List`1<Group> groups)
  void GetVisibleFrom(Group group, List`1<Group> groups, int radius)
  void .ctor()
  void <GetVisibleFrom>g__AddLayers|34_0(int groupX, int groupY, int groupLayer, <>c__DisplayClass34_0& )
  void <GetVisibleFrom>g__Add|34_1(int groupX, int groupY, int groupLayer, <>c__DisplayClass34_0& )
--------------------------------------------------
Класс: NVidiaReflex
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlurType
Наследуется от: Enum
Поля:
  int value__
  BlurType StandardGauss
  BlurType SgxGauss
Свойства:
Методы:
--------------------------------------------------
Класс: BlurTypeParameter
Наследуется от: ParameterOverride`1<BlurType>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FixedIntParameter
Наследуется от: ParameterOverride`1<int>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlurOptimized
Наследуется от: PostProcessEffectSettings
Поля:
  FixedIntParameter downsample
  FixedIntParameter blurIterations
  FloatParameter blurSize
  FloatParameter fadeToBlurDistance
  BlurTypeParameter blurType
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlurOptimizedRenderer
Наследуется от: PostProcessEffectRenderer`1<BlurOptimized>
Поля:
  int dataProperty
  Shader blurShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: CustomPostEffectsResources
Наследуется от: ScriptableObject
Поля:
  Shader[] shaders
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DOFBlurSampleCount
Наследуется от: Enum
Поля:
  int value__
  DOFBlurSampleCount Low
  DOFBlurSampleCount Medium
  DOFBlurSampleCount High
  DOFBlurSampleCount VeryHigh
Свойства:
Методы:
--------------------------------------------------
Класс: DOFBlurSampleCountParameter
Наследуется от: ParameterOverride`1<DOFBlurSampleCount>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DepthOfFieldEffect
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter focalLength
  FloatParameter focalSize
  FloatParameter aperture
  FloatParameter anamorphicSqueeze
  FloatParameter anamorphicBarrel
  FloatParameter maxBlurSize
  BoolParameter highResolution
  DOFBlurSampleCountParameter blurSampleCount
  Transform focalTransform
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DepthOfFieldEffectRenderer
Наследуется от: PostProcessEffectRenderer`1<DepthOfFieldEffect>
Поля:
  float focalDistance01
  float internalBlurWidth
  Shader dofShader
Свойства:
Методы:
  void Init()
  float FocalDistance01(Camera cam, float worldDist)
  void WriteCoc(PostProcessRenderContext context, PropertySheet sheet)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: DoubleVision
Наследуется от: PostProcessEffectSettings
Поля:
  Vector2Parameter displace
  FloatParameter amount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DoubleVisionRenderer
Наследуется от: PostProcessEffectRenderer`1<DoubleVision>
Поля:
  int displaceProperty
  int amountProperty
  Shader doubleVisionShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: FlashbangEffect
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter burnIntensity
  FloatParameter whiteoutIntensity
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FlashbangEffectRenderer
Наследуется от: PostProcessEffectRenderer`1<FlashbangEffect>
Поля:
  bool needsCapture
  Shader flashbangEffectShader
  RenderTexture screenRT
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void Release()
  void CheckCreateRenderTexture(RenderTexture& rt, string name, int width, int height, RenderTextureFormat format)
  void SafeDestroyRenderTexture(RenderTexture& rt)
  void .ctor()
--------------------------------------------------
Класс: Frost
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter scale
  BoolParameter enableVignette
  FloatParameter sharpness
  FloatParameter darkness
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FrostRenderer
Наследуется от: PostProcessEffectRenderer`1<Frost>
Поля:
  int scaleProperty
  int sharpnessProperty
  int darknessProperty
  Shader frostShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: BlendModeType
Наследуется от: Enum
Поля:
  int value__
  BlendModeType Screen
  BlendModeType Add
Свойства:
Методы:
--------------------------------------------------
Класс: ResolutionType
Наследуется от: Enum
Поля:
  int value__
  ResolutionType Low
  ResolutionType Normal
  ResolutionType High
Свойства:
Методы:
--------------------------------------------------
Класс: BlendModeTypeParameter
Наследуется от: ParameterOverride`1<BlendModeType>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ResolutionTypeParameter
Наследуется от: ParameterOverride`1<ResolutionType>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GodRays
Наследуется от: PostProcessEffectSettings
Поля:
  BoolParameter UseDepth
  BlendModeTypeParameter BlendMode
  FloatParameter Intensity
  ResolutionTypeParameter Resolution
  IntParameter BlurIterations
  FloatParameter BlurRadius
  FloatParameter MaxRadius
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GodRaysRenderer
Наследуется от: PostProcessEffectRenderer`1<GodRays>
Поля:
  int PASS_SCREEN
  int PASS_ADD
  Shader GodRayShader
  Shader ScreenClearShader
  Shader SkyMaskShader
Свойства:
Методы:
  void Init()
  void DrawBorder(PostProcessRenderContext context, RenderTargetIdentifier buffer1)
  int GetSkyMask(PostProcessRenderContext context, ResolutionType resolution, Vector3 lightPos, int blurIterations, float blurRadius, float maxRadius)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: GreyScale
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter redLuminance
  FloatParameter greenLuminance
  FloatParameter blueLuminance
  FloatParameter amount
  ColorParameter color
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GreyScaleRenderer
Наследуется от: PostProcessEffectRenderer`1<GreyScale>
Поля:
  int dataProperty
  int colorProperty
  Shader greyScaleShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: LensDirtinessEffect
Наследуется от: PostProcessEffectSettings
Поля:
  TextureParameter dirtinessTexture
  BoolParameter sceneTintsBloom
  FloatParameter gain
  FloatParameter threshold
  FloatParameter bloomSize
  FloatParameter dirtiness
  ColorParameter bloomColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LensDirtinessRenderer
Наследуется от: PostProcessEffectRenderer`1<LensDirtinessEffect>
Поля:
  int dataProperty
  Shader lensDirtinessShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: PhotoFilter
Наследуется от: PostProcessEffectSettings
Поля:
  ColorParameter color
  FloatParameter density
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PhotoFilterRenderer
Наследуется от: PostProcessEffectRenderer`1<PhotoFilter>
Поля:
  int rgbProperty
  int densityProperty
  Shader greyScaleShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: OverlayBlendMode
Наследуется от: Enum
Поля:
  int value__
  OverlayBlendMode Additive
  OverlayBlendMode ScreenBlend
  OverlayBlendMode Multiply
  OverlayBlendMode Overlay
  OverlayBlendMode AlphaBlend
  OverlayBlendMode AdditiveNonLit
Свойства:
Методы:
--------------------------------------------------
Класс: OverlayBlendModeParameter
Наследуется от: ParameterOverride`1<OverlayBlendMode>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ScreenOverlay
Наследуется от: PostProcessEffectSettings
Поля:
  OverlayBlendModeParameter blendMode
  FloatParameter intensity
  TextureParameter texture
  TextureParameter normals
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ScreenOverlayRenderer
Наследуется от: PostProcessEffectRenderer`1<ScreenOverlay>
Поля:
  Shader overlayShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: SharpenAndVignette
Наследуется от: PostProcessEffectSettings
Поля:
  BoolParameter applySharpen
  FloatParameter strength
  FloatParameter clamp
  BoolParameter applyVignette
  FloatParameter sharpness
  FloatParameter darkness
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SharpenAndVignetteRenderer
Наследуется от: PostProcessEffectRenderer`1<SharpenAndVignette>
Поля:
  Shader sharpenAndVigenetteShader
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnderwaterPostEffect
Наследуется от: PostProcessEffectSettings
Поля:
  BoolParameter wiggle
  FloatParameter speed
  FloatParameter scale
  ColorParameter waterLineColor
  FixedIntParameter waterLineBlurIterations
  FloatParameter waterLineBlurSize
  FixedIntParameter downsample
  FixedIntParameter blurIterations
  FloatParameter blurSize
  FloatParameter fadeToBlurDistance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnderWaterEffectRenderer
Наследуется от: PostProcessEffectRenderer`1<UnderwaterPostEffect>
Поля:
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: Wiggle
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter speed
  FloatParameter scale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WiggleRenderer
Наследуется от: PostProcessEffectRenderer`1<Wiggle>
Поля:
  int timerProperty
  int scaleProperty
  Shader wiggleShader
  float timer
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: PostProcessVolumeLOD
Наследуется от: MonoBehaviour
Поля:
  float distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BoundsCheck
Наследуется от: PrefabAttribute
Поля:
  BlockType IsType
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: BoundsCheckEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ApplyBoundsChecks(BaseEntity entity, BoundsCheck[] bounds, Vector3 pos, Quaternion rot, Vector3 scale, LayerMask rejectOnLayer)
--------------------------------------------------
Класс: SpawnableBoundsBlocker
Наследуется от: MonoBehaviour
Поля:
  BlockType BlockType
  BoxCollider BoxCollider
Свойства:
Методы:
  void ClearTrees()
  void .ctor()
--------------------------------------------------
Класс: ByteMap
Наследуется от: object
Поля:
  int size
  int bytes
  Byte[] values
Свойства:
  int Size
  UInt32 Item
Методы:
  void .ctor(int size, int bytes)
  void .ctor(int size, Byte[] values, int bytes)
  int get_Size()
  UInt32 get_Item(int x, int y)
  void set_Item(int x, int y, UInt32 value)
--------------------------------------------------
Класс: ByteQuadtree
Наследуется от: object
Поля:
  int size
  int levels
  ByteMap[] values
Свойства:
  int Size
  Element Root
Методы:
  void UpdateValues(Byte[] baseValues)
  int get_Size()
  Element get_Root()
  ByteMap CreateLevel(int level)
  void .ctor()
--------------------------------------------------
Класс: ImageProcessing
Наследуется от: object
Поля:
  Byte[] signaturePNG
  Byte[] signatureIHDR
Свойства:
Методы:
  void GaussianBlur2D(Single[] data, int len1, int len2, int iterations)
  void GaussianBlur2D(Single[] data, int len1, int len2, int len3, int iterations)
  void Average2D(Single[] data, int len1, int len2, int iterations)
  void Average2D(Single[] data, int len1, int len2, int len3, int iterations)
  void Upsample2D(Single[] src, int srclen1, int srclen2, Single[] dst, int dstlen1, int dstlen2)
  void Upsample2D(Single[] src, int srclen1, int srclen2, int srclen3, Single[] dst, int dstlen1, int dstlen2, int dstlen3)
  void Dilate2D(Int32[] src, int len1, int len2, int srcmask, int radius, Action`2<int, int> action)
  void FloodFill2D(int x, int y, Int32[] data, int len1, int len2, int mask_any, int mask_not, Func`2<int, int> action)
  bool IsValidPNG(Byte[] data, int maxSizeSquare)
  bool IsValidPNG(Byte[] data, int maxWidth, int maxHeight)
  bool IsValidJPG(Byte[] data, int maxSizeSquare)
  bool IsValidJPG(Byte[] data, int maxWidth, int maxHeight)
  bool IsClear(Color32[] data)
  void .cctor()
--------------------------------------------------
Класс: ManagedNoise
Наследуется от: object
Поля:
  Int32[] hash
  int hashMask
  double sqrt2
  double rsqrt2
  double squaresToTriangles
  double trianglesToSquares
  double simplexScale1D
  double simplexScale2D
  double gradientScale2D
  Double[] gradients1D
  int gradientsMask1D
  Double[] gradients2Dx
  Double[] gradients2Dy
  int gradientsMask2D
Свойства:
Методы:
  double Simplex1D(double x)
  double Simplex1D(double x, Double& dx)
  double Simplex2D(double x, double y)
  double Simplex2D(double x, double y, Double& dx, Double& dy)
  double Turbulence(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double Billow(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double Ridge(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double Sharp(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double TurbulenceIQ(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double BillowIQ(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double RidgeIQ(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double SharpIQ(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain)
  double TurbulenceWarp(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain, double warp)
  double BillowWarp(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain, double warp)
  double RidgeWarp(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain, double warp)
  double SharpWarp(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain, double warp)
  double Jordan(double x, double y, int octaves, double frequency, double amplitude, double lacunarity, double gain, double warp, double damp, double damp_scale)
  int Floor(double x)
  double Abs(double x)
  double Saturate(double x)
  void .cctor()
--------------------------------------------------
Класс: NativeNoise
Наследуется от: object
Поля:
Свойства:
Методы:
  float Simplex1D(float x)
  float Simplex1D(float x, Single& dx)
  float Simplex2D(float x, float y)
  float Simplex2D(float x, float y, Single& dx, Single& dy)
  float Turbulence(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float Billow(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float Ridge(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float Sharp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float TurbulenceIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float BillowIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float RidgeIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float SharpIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float TurbulenceWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float BillowWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float RidgeWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float SharpWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float Jordan(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp, float damp, float damp_scale)
--------------------------------------------------
Класс: Noise
Наследуется от: object
Поля:
  float MIN
  float MAX
Свойства:
Методы:
  float Simplex1D(float x)
  float Simplex2D(float x, float y)
  float Turbulence(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float Billow(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float Ridge(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float Sharp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float TurbulenceIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float BillowIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float RidgeIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float SharpIQ(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain)
  float TurbulenceWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float BillowWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float RidgeWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float SharpWarp(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp)
  float Jordan(float x, float y, int octaves, float frequency, float amplitude, float lacunarity, float gain, float warp, float damp, float damp_scale)
--------------------------------------------------
Класс: NoiseParameters
Наследуется от: ValueType
Поля:
  int Octaves
  float Frequency
  float Amplitude
  float Offset
Свойства:
Методы:
  void .ctor(int octaves, float frequency, float amplitude, float offset)
--------------------------------------------------
Класс: PathList
Наследуется от: object
Поля:
  Quaternion rot90
  Quaternion rot180
  Quaternion rot270
  string Name
  PathInterpolator Path
  bool Spline
  bool Start
  bool End
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  int Topology
  int Splat
  int Hierarchy
  Node ProcgenStartNode
  Node ProcgenEndNode
  float StepSize
  Single[] placements
Свойства:
Методы:
  void .ctor(string name, Vector3[] points)
  void SpawnObjectsNeighborAligned(UInt32& seed, Prefab[] prefabs, List`1<Vector3> positions, SpawnFilter filter)
  bool SpawnObject(UInt32& seed, Prefab[] prefabs, Vector3 position, Quaternion rotation, SpawnFilter filter)
  bool SpawnObject(UInt32& seed, Prefab[] prefabs, Vector3 position, Quaternion rotation, List`1<Prefab> previousSpawns, Prefab& spawned, int pathLength, int index, SpawnFilter filter)
  bool CheckObjects(Prefab[] prefabs, Vector3 position, Quaternion rotation, SpawnFilter filter)
  void SpawnObject(UInt32& seed, Prefab[] prefabs, Vector3 pos, Vector3 dir, BasicObject obj)
  bool CheckObjects(Prefab[] prefabs, Vector3 pos, Vector3 dir, BasicObject obj)
  void SpawnSide(UInt32& seed, SideObject obj)
  void SpawnAlong(UInt32& seed, PathObject obj)
  void SpawnBridge(UInt32& seed, BridgeObject obj)
  void SpawnStart(UInt32& seed, BasicObject obj)
  void SpawnEnd(UInt32& seed, BasicObject obj)
  void TrimStart(BasicObject obj)
  void TrimEnd(BasicObject obj)
  void TrimTopology(int topology)
  void ResetTrims()
  void AdjustTerrainHeight(float intensity, float fade)
  void AdjustTerrainTexture()
  void AdjustTerrainTopology()
  void AdjustPlacementMap(float width)
  List`1<MeshObject> CreateMesh(Mesh[] meshes, float normalSmoothing, bool snapToTerrain, bool snapStartToTerrain, bool snapEndToTerrain)
  void .cctor()
--------------------------------------------------
Класс: SpawnFilter
Наследуется от: object
Поля:
  Enum SplatType
  Enum BiomeType
  Enum TopologyAny
  Enum TopologyAll
  Enum TopologyNot
Свойства:
Методы:
  bool Test(Vector3 worldPos)
  bool Test(float normX, float normZ)
  float GetFactor(Vector3 worldPos, bool checkPlacementMap)
  float GetFactor(float normX, float normZ, bool checkPlacementMap)
  void .ctor()
--------------------------------------------------
Класс: TerrainConfig
Наследуется от: ScriptableObject
Поля:
  bool CastShadows
  LayerMask GroundMask
  LayerMask WaterMask
  PhysicMaterial GenericMaterial
  PhysicMaterial WaterMaterial
  Material Material
  Material MarginMaterial
  Texture[] AlbedoArrays
  Texture[] NormalArrays
  float HeightMapErrorMin
  float HeightMapErrorMax
  float BaseMapDistanceMin
  float BaseMapDistanceMax
  float ShaderLodMin
  float ShaderLodMax
  SplatType[] Splats
  string snowMatName
  string grassMatName
  string sandMatName
  List`1<string> dirtMatNames
  List`1<string> stoneyMatNames
Свойства:
  Texture AlbedoArray
  Texture NormalArray
Методы:
  Texture get_AlbedoArray()
  Texture get_NormalArray()
  PhysicMaterial[] GetPhysicMaterials()
  Color[] GetAridColors()
  void GetAridOverlayConstants(Color[]& color, Vector4[]& param)
  Color[] GetTemperateColors()
  void GetTemperateOverlayConstants(Color[]& color, Vector4[]& param)
  Color[] GetTundraColors()
  void GetTundraOverlayConstants(Color[]& color, Vector4[]& param)
  Color[] GetArcticColors()
  void GetArcticOverlayConstants(Color[]& color, Vector4[]& param)
  Single[] GetSplatTiling()
  float GetMaxSplatTiling()
  float GetMinSplatTiling()
  Vector3[] GetPackedUVMIX()
  GroundType GetCurrentGroundType(bool isGrounded, RaycastHit hit)
  void .ctor()
--------------------------------------------------
Класс: AsyncTerrainNavMeshBake
Наследуется от: CustomYieldInstruction
Поля:
  List`1<int> indices
  List`1<Vector3> vertices
  List`1<Vector3> normals
  List`1<int> triangles
  Vector3 pivot
  int width
  int height
  bool normal
  bool alpha
  Action worker
Свойства:
  bool keepWaiting
  bool isDone
  Mesh mesh
Методы:
  bool get_keepWaiting()
  bool get_isDone()
  NavMeshBuildSource CreateNavMeshBuildSource()
  NavMeshBuildSource CreateNavMeshBuildSource(int area)
  Mesh get_mesh()
  void .ctor(Vector3 pivot, int width, int height, bool normal, bool alpha)
  void DoWork()
  void Invoke()
  void Callback(IAsyncResult result)
--------------------------------------------------
Класс: TextureData
Наследуется от: ValueType
Поля:
  int width
  int height
  Color32[] colors
Свойства:
Методы:
  void .ctor(Texture2D tex)
  Color32 GetColor(int x, int y)
  int GetShort(int x, int y)
  int GetInt(int x, int y)
  float GetFloat(int x, int y)
  float GetHalf(int x, int y)
  Vector4 GetVector(int x, int y)
  Vector3 GetNormal(int x, int y)
  Color32 GetInterpolatedColor(float x, float y)
  int GetInterpolatedInt(float x, float y)
  int GetInterpolatedShort(float x, float y)
  float GetInterpolatedFloat(float x, float y)
  float GetInterpolatedHalf(float x, float y)
  Vector4 GetInterpolatedVector(float x, float y)
  Vector3 GetInterpolatedNormal(float x, float y)
--------------------------------------------------
Класс: World
Наследуется от: object
Поля:
  UInt32 <Seed>k__BackingField
  UInt32 <Salt>k__BackingField
  UInt32 _size
  string <Checksum>k__BackingField
  string <Url>k__BackingField
  bool <Procedural>k__BackingField
  bool <Cached>k__BackingField
  bool <Networked>k__BackingField
  bool <Receiving>k__BackingField
  bool <Transfer>k__BackingField
  bool <LoadedFromSave>k__BackingField
  int <SpawnIndex>k__BackingField
  WorldSerialization <Serialization>k__BackingField
  WorldConfig <Config>k__BackingField
Свойства:
  UInt32 Seed
  UInt32 Salt
  UInt32 Size
  string Checksum
  string Url
  bool Procedural
  bool Cached
  bool Networked
  bool Receiving
  bool Transfer
  bool Nexus
  bool LoadedFromSave
  int SpawnIndex
  WorldSerialization Serialization
  WorldConfig Config
  string Name
  string MapFileName
  string MapFolderName
  string SaveFileName
  string SaveFolderName
Методы:
  UInt32 get_Seed()
  void set_Seed(UInt32 value)
  UInt32 get_Salt()
  void set_Salt(UInt32 value)
  UInt32 get_Size()
  void set_Size(UInt32 value)
  string get_Checksum()
  void set_Checksum(string value)
  string get_Url()
  void set_Url(string value)
  bool get_Procedural()
  void set_Procedural(bool value)
  bool get_Cached()
  void set_Cached(bool value)
  bool get_Networked()
  void set_Networked(bool value)
  bool get_Receiving()
  void set_Receiving(bool value)
  bool get_Transfer()
  void set_Transfer(bool value)
  bool get_Nexus()
  bool get_LoadedFromSave()
  void set_LoadedFromSave(bool value)
  int get_SpawnIndex()
  void set_SpawnIndex(int value)
  WorldSerialization get_Serialization()
  void set_Serialization(WorldSerialization value)
  WorldConfig get_Config()
  void set_Config(WorldConfig value)
  string get_Name()
  string GetServerBrowserMapName()
  bool CanLoadFromUrl()
  bool CanLoadFromDisk()
  void CleanupOldFiles()
  string get_MapFileName()
  string get_MapFolderName()
  string get_SaveFileName()
  string get_SaveFolderName()
  void InitSeed(int seed)
  void InitSeed(UInt32 seed)
  string SeedIdentifier()
  void InitSalt(int salt)
  void InitSalt(UInt32 salt)
  string SaltIdentifier()
  void InitSize(int size)
  void InitSize(UInt32 size)
  Byte[] GetMap(string name)
  int GetCachedHeightMapResolution()
  int GetCachedSplatMapResolution()
  void AddMap(string name, Byte[] data)
  void AddPrefab(string category, Prefab prefab, Vector3 position, Quaternion rotation, Vector3 scale)
  PathData PathListToPathData(PathList src)
  PathList PathDataToPathList(PathData src)
  Vector3[] VectorListToArray(List`1<VectorData> src)
  List`1<VectorData> VectorArrayToList(Vector3[] src)
  IEnumerable`1<PathList> GetPaths(string name)
  void AddPaths(IEnumerable`1<PathList> paths)
  void AddPath(PathList path)
  IEnumerator SpawnAsync(float deltaTime, Action`1<string> statusFunction)
  IEnumerator Spawn(float deltaTime, Action`1<string> statusFunction)
  void Spawn()
  void Spawn(string category, string folder)
  void Spawn(string category, String[] folders)
  void Spawn(PrefabData prefab)
  void Spawn(string category, Prefab prefab, Vector3 position, Quaternion rotation, Vector3 scale)
  void Status(Action`1<string> statusFunction, string status, object obj1)
  void Status(Action`1<string> statusFunction, string status, object obj1, object obj2)
  void Status(Action`1<string> statusFunction, string status, object obj1, object obj2, object obj3)
  void Status(Action`1<string> statusFunction, string status, Object[] objs)
--------------------------------------------------
Класс: WorldConfig
Наследуется от: object
Поля:
  string JsonString
  float PercentageTier0
  float PercentageTier1
  float PercentageTier2
  float PercentageBiomeArid
  float PercentageBiomeTemperate
  float PercentageBiomeTundra
  float PercentageBiomeArctic
  bool MainRoads
  bool SideRoads
  bool Trails
  bool Rivers
  bool Powerlines
  bool AboveGroundRails
  bool BelowGroundRails
  bool UnderwaterLabs
  List`1<string> PrefabBlacklist
  List`1<string> PrefabWhitelist
Свойства:
Методы:
  bool IsPrefabAllowed(string name)
  void LoadFromJsonFile(string fileName)
  void LoadFromJsonString(string data)
  void LoadFromWorldConfig(WorldConfig data)
  void .ctor()
--------------------------------------------------
Класс: DecorComponent
Наследуется от: PrefabAttribute
Поля:
  bool isRoot
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: DecorComponentEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void ApplyDecorComponents(Transform transform, DecorComponent[] components, Vector3& pos, Quaternion& rot, Vector3& scale)
  void ApplyDecorComponents(Transform transform, DecorComponent[] components)
  void ApplyDecorComponentsScaleOnly(Transform transform, DecorComponent[] components)
--------------------------------------------------
Класс: DecorAlign
Наследуется от: DecorComponent
Поля:
  float NormalAlignment
  float GradientAlignment
  Vector3 SlopeOffset
  Vector3 SlopeScale
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorFlip
Наследуется от: DecorComponent
Поля:
  AxisType FlipAxis
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorOffset
Наследуется от: DecorComponent
Поля:
  Vector3 MinOffset
  Vector3 MaxOffset
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorRotate
Наследуется от: DecorComponent
Поля:
  Vector3 MinRotation
  Vector3 MaxRotation
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorScale
Наследуется от: DecorComponent
Поля:
  Vector3 MinScale
  Vector3 MaxScale
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorSocketFemale
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  Type GetIndexedType()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: DecorSocketMale
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  Type GetIndexedType()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: DecorSwim
Наследуется от: DecorComponent
Поля:
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorTransform
Наследуется от: DecorComponent
Поля:
  Vector3 Position
  Vector3 Rotation
  Vector3 Scale
Свойства:
Методы:
  void Apply(Vector3& pos, Quaternion& rot, Vector3& scale)
  void .ctor()
--------------------------------------------------
Класс: DecorPatch
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DecorSpawn
Наследуется от: MonoBehaviour
Поля:
  SpawnFilter Filter
  string ResourceFolder
  UInt32 Seed
  float ObjectCutoff
  float ObjectTapering
  int ObjectsPerPatch
  float ClusterRadius
  int ClusterSizeMin
  int ClusterSizeMax
  int PatchCount
  int PatchSize
  bool LOD
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DungeonBaseInfo
Наследуется от: LandmarkInfo
Поля:
  List`1<GameObject> Links
  List`1<DungeonBaseFloor> Floors
Свойства:
Методы:
  float Distance(Vector3 position)
  float SqrDistance(Vector3 position)
  void Add(DungeonBaseLink link)
  void Awake()
  void Start()
  void .ctor()
  int <Add>b__4_0(DungeonBaseFloor l, DungeonBaseFloor r)
--------------------------------------------------
Класс: DungeonBaseFloor
Наследуется от: object
Поля:
  List`1<DungeonBaseLink> Links
Свойства:
Методы:
  float Distance(Vector3 position)
  float SignedDistance(Vector3 position)
  void .ctor()
--------------------------------------------------
Класс: DungeonBaseLandmarkInfo
Наследуется от: LandmarkInfo
Поля:
  DungeonBaseLink baseLink
  Nullable`1<MapLayer> layer
Свойства:
  MapLayer MapLayer
Методы:
  void Awake()
  MapLayer get_MapLayer()
  void .ctor()
--------------------------------------------------
Класс: DungeonBaseLink
Наследуется от: MonoBehaviour
Поля:
  DungeonBaseLinkType Type
  int Cost
  int MaxFloor
  int MaxCountLocal
  int MaxCountGlobal
  int MaxCountIdentifier
  DungeonBaseInfo Dungeon
  MeshRenderer[] MapRenderers
  List`1<DungeonBaseSocket> sockets
  List`1<DungeonVolume> volumes
Свойства:
  List`1<DungeonBaseSocket> Sockets
  List`1<DungeonVolume> Volumes
Методы:
  List`1<DungeonBaseSocket> get_Sockets()
  List`1<DungeonVolume> get_Volumes()
  void Awake()
  void Initialize()
  void .ctor()
--------------------------------------------------
Класс: DungeonBaseLinkType
Наследуется от: Enum
Поля:
  int value__
  DungeonBaseLinkType Room
  DungeonBaseLinkType Corridor
  DungeonBaseLinkType End
Свойства:
Методы:
--------------------------------------------------
Класс: DungeonBaseSocket
Наследуется от: MonoBehaviour
Поля:
  DungeonBaseSocketType Type
  bool Male
  bool Female
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DungeonBaseSocketType
Наследуется от: Enum
Поля:
  int value__
  DungeonBaseSocketType Horizontal
  DungeonBaseSocketType Vertical
  DungeonBaseSocketType Pillar
Свойства:
Методы:
--------------------------------------------------
Класс: DungeonBaseTransition
Наследуется от: MonoBehaviour
Поля:
  DungeonBaseSocketType Type
  DungeonBaseLinkType Neighbour1
  DungeonBaseLinkType Neighbour2
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DungeonGridCell
Наследуется от: MonoBehaviour
Поля:
  DungeonGridConnectionType North
  DungeonGridConnectionType South
  DungeonGridConnectionType West
  DungeonGridConnectionType East
  DungeonGridConnectionVariant NorthVariant
  DungeonGridConnectionVariant SouthVariant
  DungeonGridConnectionVariant WestVariant
  DungeonGridConnectionVariant EastVariant
  GameObjectRef[] AvoidNeighbours
  MeshRenderer[] MapRenderers
  bool Replaceable
Свойства:
Методы:
  bool ShouldAvoid(UInt32 id)
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: DungeonGridConnectionType
Наследуется от: Enum
Поля:
  int value__
  DungeonGridConnectionType None
  DungeonGridConnectionType TrainTunnel
Свойства:
Методы:
--------------------------------------------------
Класс: DungeonGridConnectionVariant
Наследуется от: Enum
Поля:
  int value__
  DungeonGridConnectionVariant A
  DungeonGridConnectionVariant B
Свойства:
Методы:
--------------------------------------------------
Класс: DungeonGridConnectionHash
Наследуется от: ValueType
Поля:
  bool North
  bool South
  bool West
  bool East
Свойства:
  int Value
Методы:
  int get_Value()
--------------------------------------------------
Класс: DungeonGridInfo
Наследуется от: LandmarkInfo
Поля:
  int CellSize
  float LinkHeight
  float LinkRadius
  List`1<GameObject> Links
Свойства:
  float MinDistance
Методы:
  float get_MinDistance()
  float Distance(Vector3 position)
  float SqrDistance(Vector3 position)
  bool IsValidSpawnPosition(Vector3 position)
  Vector3 SnapPosition(Vector3 pos)
  void Awake()
  void Start()
  void .ctor()
--------------------------------------------------
Класс: DungeonGridLink
Наследуется от: MonoBehaviour
Поля:
  Transform UpSocket
  Transform DownSocket
  DungeonGridLinkType UpType
  DungeonGridLinkType DownType
  int Priority
  int Rotation
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: DungeonGridLinkType
Наследуется от: Enum
Поля:
  int value__
  DungeonGridLinkType Default
  DungeonGridLinkType Elevator
  DungeonGridLinkType Transition
Свойства:
Методы:
--------------------------------------------------
Класс: DungeonVolume
Наследуется от: MonoBehaviour
Поля:
  Bounds bounds
Свойства:
Методы:
  OBB GetBounds(Vector3 position, Quaternion rotation)
  OBB GetBounds(Vector3 position, Quaternion rotation, Vector3 extrude)
  void .ctor()
--------------------------------------------------
Класс: BiomeVisuals
Наследуется от: MonoBehaviour
Поля:
  GameObject Arid
  GameObject Temperate
  GameObject Tundra
  GameObject Arctic
Свойства:
Методы:
  void Start()
  void SetChoice(GameObject selection)
  void ApplyChoice(GameObject selection, GameObject target, bool shouldDestroy)
  void .ctor()
--------------------------------------------------
Класс: RandomDestroy
Наследуется от: MonoBehaviour
Поля:
  UInt32 Seed
  float Probability
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: RandomDynamicObject
Наследуется от: MonoBehaviour
Поля:
  UInt32 Seed
  float Distance
  float Probability
  GameObject[] Candidates
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RandomDynamicPrefab
Наследуется от: MonoBehaviour
Поля:
  UInt32 Seed
  float Distance
  float Probability
  string ResourceFolder
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RandomStaticObject
Наследуется от: MonoBehaviour
Поля:
  UInt32 Seed
  float Probability
  GameObject[] Candidates
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: RandomStaticPrefab
Наследуется от: MonoBehaviour
Поля:
  UInt32 Seed
  float Probability
  string ResourceFolder
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: ParticlePatch
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleSpawn
Наследуется от: SingletonComponent`1<ParticleSpawn>
Поля:
  GameObjectRef[] Prefabs
  int PatchCount
  int PatchSize
  Vector3 <Origin>k__BackingField
Свойства:
  Vector3 Origin
Методы:
  Vector3 get_Origin()
  void set_Origin(Vector3 value)
  void .ctor()
--------------------------------------------------
Класс: PowerlineNode
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef WirePrefab
  float MaxDistance
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: RemoveChildObjectsAlongPath
Наследуется от: MonoBehaviour
Поля:
  Transform Node1
  Transform Node2
  float Distance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainPathChildObjects
Наследуется от: MonoBehaviour
Поля:
  bool Spline
  float Width
  float Offset
  float Fade
  Enum Splat
  Enum Topology
  InfrastructureType Type
Свойства:
Методы:
  void Awake()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: TerrainPathConnect
Наследуется от: MonoBehaviour
Поля:
  InfrastructureType Type
Свойства:
Методы:
  Point GetPathFinderPoint(int res)
  void .ctor()
--------------------------------------------------
Класс: PathSequence
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  Type GetIndexedType()
  void ApplySequenceReplacement(List`1<Prefab> sequence, Prefab& replacement, Prefab[] possibleReplacements, int pathLength, int pathIndex)
  void .ctor()
--------------------------------------------------
Класс: PathSequencePowerline
Наследуется от: PathSequence
Поля:
  SequenceRule Rule
  int RegularPowerlineSpacing
Свойства:
Методы:
  void ApplySequenceReplacement(List`1<Prefab> sequence, Prefab& replacement, Prefab[] possibleReplacements, int pathLength, int pathIndex)
  Prefab GetPrefabOfType(Prefab[] options, SequenceRule ruleToFind)
  int GetIndexCountToRule(List`1<Prefab> sequence, SequenceRule rule)
  void .ctor()
--------------------------------------------------
Класс: PowerLineWire
Наследуется от: MonoBehaviour
Поля:
  List`1<Transform> poles
  List`1<PowerLineWireConnectionDef> connections
  List`1<PowerLineWireSpan> spans
Свойства:
Методы:
  void Copy(PowerLineWire from, PowerLineWireConnectionHelper helper)
  PowerLineWire Create(PowerLineWire wire, List`1<GameObject> objs, GameObjectRef wirePrefab, string name, PowerLineWire copyfrom, float wiresize, float str)
  void Init()
  void .ctor()
--------------------------------------------------
Класс: PowerLineWireConnectionDef
Наследуется от: object
Поля:
  Vector3 inOffset
  Vector3 outOffset
  float radius
  bool hidden
Свойства:
Методы:
  void .ctor()
  void .ctor(PowerLineWireConnectionDef src)
--------------------------------------------------
Класс: PowerLineWireConnection
Наследуется от: object
Поля:
  Vector3 inOffset
  Vector3 outOffset
  float radius
  Transform start
  Transform end
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PowerLineWireConnectionHelper
Наследуется от: MonoBehaviour
Поля:
  List`1<PowerLineWireConnectionDef> connections
  bool showgizmo
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PowerLineWireSpan
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef wirePrefab
  Transform start
  Transform end
  float WireLength
  List`1<PowerLineWireConnection> connections
Свойства:
Методы:
  void Init(PowerLineWire wire)
  void .ctor()
--------------------------------------------------
Класс: ApplyTerrainAnchors
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: TerrainAnchor
Наследуется от: PrefabAttribute
Поля:
  float Extents
  float Offset
  float Radius
Свойства:
Методы:
  void Apply(Single& height, Single& min, Single& max, Vector3 pos, Vector3 scale)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: TerrainAnchorMode
Наследуется от: Enum
Поля:
  int value__
  TerrainAnchorMode MinimizeError
  TerrainAnchorMode MinimizeMovement
Свойства:
Методы:
--------------------------------------------------
Класс: TerrainAnchorEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ApplyTerrainAnchors(Transform transform, TerrainAnchor[] anchors, Vector3& pos, Quaternion rot, Vector3 scale, SpawnFilter filter)
  bool ApplyTerrainAnchors(Transform transform, TerrainAnchor[] anchors, Vector3& pos, Quaternion rot, Vector3 scale, TerrainAnchorMode mode, SpawnFilter filter)
  void ApplyTerrainAnchors(Transform transform, TerrainAnchor[] anchors)
--------------------------------------------------
Класс: TerrainAnchorGenerator
Наследуется от: MonoBehaviour
Поля:
  float PlacementRadius
  float PlacementPadding
  float PlacementFade
  float PlacementDistance
  float AnchorExtentsMin
  float AnchorExtentsMax
  float AnchorOffsetMin
  float AnchorOffsetMax
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainCheck
Наследуется от: PrefabAttribute
Поля:
  bool Rotate
  float Extents
Свойства:
Методы:
  bool Check(Vector3 pos)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: TerrainCheckEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ApplyTerrainChecks(Transform transform, TerrainCheck[] anchors, Vector3 pos, Quaternion rot, Vector3 scale, SpawnFilter filter)
--------------------------------------------------
Класс: TerrainCheckGenerator
Наследуется от: MonoBehaviour
Поля:
  float PlacementRadius
  float PlacementPadding
  float PlacementFade
  float PlacementDistance
  float CheckExtentsMin
  float CheckExtentsMax
  bool CheckRotate
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainCheckGeneratorVolumes
Наследуется от: MonoBehaviour
Поля:
  float PlacementRadius
Свойства:
Методы:
  void OnDrawGizmosSelected()
  void .ctor()
--------------------------------------------------
Класс: TerrainAtlasSet
Наследуется от: ScriptableObject
Поля:
  int SplatCount
  int SplatSize
  int MaxSplatSize
  int SplatPadding
  int AtlasSize
  int RegionSize
  int SplatsPerLine
  int SourceTypeCount
  int AtlasMipCount
  String[] sourceTypeNames
  String[] sourceTypeNamesExt
  String[] sourceTypePostfix
  String[] splatNames
  Boolean[] albedoHighpass
  String[] albedoPaths
  Color[] defaultValues
  SourceMapSet[] sourceMaps
  bool highQualityCompression
  bool generateTextureAtlases
  bool generateTextureArrays
  string splatSearchPrefix
  string splatSearchFolder
  string albedoAtlasSavePath
  string normalAtlasSavePath
  string albedoArraySavePath
  string normalArraySavePath
Свойства:
Методы:
  void CheckReset()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TerrainCollision
Наследуется от: TerrainExtension
Поля:
  ListDictionary`2<Collider, List`1<Collider>> ignoredColliders
  TerrainCollider terrainCollider
Свойства:
Методы:
  void Setup()
  void Clear()
  void Reset(Collider collider)
  bool GetIgnore(Vector3 pos, float radius)
  bool GetIgnore(RaycastHit hit)
  bool GetIgnore(Collider collider)
  void SetIgnore(Collider collider, Collider trigger, bool ignore)
  void LateUpdate()
  void .ctor()
--------------------------------------------------
Класс: TerrainCollisionProxy
Наследуется от: MonoBehaviour
Поля:
  WheelCollider[] colliders
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainCollisionTrigger
Наследуется от: EnvironmentVolumeTrigger
Поля:
Свойства:
Методы:
  void OnTriggerEnter(Collider other)
  void OnTriggerExit(Collider other)
  void UpdateCollider(Collider other, bool state)
  void .ctor()
--------------------------------------------------
Класс: TerrainColors
Наследуется от: TerrainExtension
Поля:
  TerrainSplatMap splatMap
  TerrainBiomeMap biomeMap
Свойства:
Методы:
  void Setup()
  Color GetColor(Vector3 worldPos, int mask)
  Color GetColor(float normX, float normZ, int mask)
  void .ctor()
--------------------------------------------------
Класс: TerrainExtension
Наследуется от: MonoBehaviour
Поля:
  bool isInitialized
  Terrain terrain
  TerrainConfig config
Свойства:
Методы:
  void Init(Terrain terrain, TerrainConfig config)
  void Setup()
  void PostSetup()
  void LogSize(object obj, ulong size)
  void .ctor()
--------------------------------------------------
Класс: TerrainAlphaMap
Наследуется от: TerrainMap`1<byte>
Поля:
  Texture2D AlphaTexture
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  float GetAlpha(Vector3 worldPos)
  float GetAlpha(float normX, float normZ)
  float GetAlpha(int x, int z)
  void SetAlpha(Vector3 worldPos, float a)
  void SetAlpha(float normX, float normZ, float a)
  void SetAlpha(int x, int z, float a)
  void SetAlpha(int x, int z, float a, float opacity)
  void SetAlpha(Vector3 worldPos, float a, float opacity, float radius, float fade)
  void SetAlpha(float normX, float normZ, float a, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainBiomeMap
Наследуется от: TerrainMap`1<byte>
Поля:
  Texture2D BiomeTexture
  int num
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  float GetBiomeMax(Vector3 worldPos, int mask)
  float GetBiomeMax(float normX, float normZ, int mask)
  float GetBiomeMax(int x, int z, int mask)
  int GetBiomeMaxIndex(Vector3 worldPos, int mask)
  int GetBiomeMaxIndex(float normX, float normZ, int mask)
  int GetBiomeMaxIndex(int x, int z, int mask)
  int GetBiomeMaxType(Vector3 worldPos, int mask)
  int GetBiomeMaxType(float normX, float normZ, int mask)
  int GetBiomeMaxType(int x, int z, int mask)
  float GetBiome(Vector3 worldPos, int mask)
  float GetBiome(float normX, float normZ, int mask)
  float GetBiome(int x, int z, int mask)
  void SetBiome(Vector3 worldPos, int id)
  void SetBiome(float normX, float normZ, int id)
  void SetBiome(int x, int z, int id)
  void SetBiome(Vector3 worldPos, int id, float v)
  void SetBiome(float normX, float normZ, int id, float v)
  void SetBiome(int x, int z, int id, float v)
  void SetBiomeRaw(int x, int z, Vector4 v, float opacity)
  void SetBiome(int x, int z, int id, float old_val, float new_val)
  void .ctor()
--------------------------------------------------
Класс: TerrainBlendMap
Наследуется от: TerrainMap`1<byte>
Поля:
  Texture2D BlendTexture
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  float GetAlpha(Vector3 worldPos)
  float GetAlpha(float normX, float normZ)
  float GetAlpha(int x, int z)
  void SetAlpha(Vector3 worldPos, float a)
  void SetAlpha(float normX, float normZ, float a)
  void SetAlpha(int x, int z, float a)
  void SetAlpha(int x, int z, float a, float opacity)
  void SetAlpha(Vector3 worldPos, float a, float opacity, float radius, float fade)
  void SetAlpha(float normX, float normZ, float a, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainDistanceMap
Наследуется от: TerrainMap`1<byte>
Поля:
  Texture2D DistanceTexture
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  Vector2i GetDistance(Vector3 worldPos)
  Vector2i GetDistance(float normX, float normZ)
  Vector2i GetDistance(int x, int z)
  void SetDistance(int x, int z, Vector2i v)
  void .ctor()
--------------------------------------------------
Класс: TerrainHeightMap
Наследуется от: TerrainMap`1<short>
Поля:
  Texture2D HeightTexture
  Texture2D NormalTexture
  float normY
Свойства:
Методы:
  void Setup()
  void ApplyToTerrain()
  void GenerateTextures(bool heightTexture, bool normalTexture)
  void ApplyTextures()
  float GetHeight(Vector3 worldPos)
  float GetHeight(float normX, float normZ)
  float GetHeightFast(Vector2 uv)
  float GetHeight(int x, int z)
  float GetHeight01(Vector3 worldPos)
  float GetHeight01(float normX, float normZ)
  float GetTriangulatedHeight01(float normX, float normZ)
  float GetHeight01(int x, int z)
  float GetSrcHeight01(int x, int z)
  float GetDstHeight01(int x, int z)
  Vector3 GetNormal(Vector3 worldPos)
  Vector3 GetNormal(float normX, float normZ)
  Vector3 GetNormal(int x, int z)
  Vector3 GetNormalSobel(int x, int z)
  float GetSlope(Vector3 worldPos)
  float GetSlope(float normX, float normZ)
  float GetSlope(int x, int z)
  float GetSlope01(Vector3 worldPos)
  float GetSlope01(float normX, float normZ)
  float GetSlope01(int x, int z)
  void SetHeight(Vector3 worldPos, float height)
  void SetHeight(float normX, float normZ, float height)
  void SetHeight(int x, int z, float height)
  void SetHeight(Vector3 worldPos, float height, float opacity)
  void SetHeight(float normX, float normZ, float height, float opacity)
  void SetHeight(int x, int z, float height, float opacity)
  void AddHeight(Vector3 worldPos, float delta)
  void AddHeight(float normX, float normZ, float delta)
  void AddHeight(int x, int z, float delta)
  void LowerHeight(Vector3 worldPos, float height, float opacity)
  void LowerHeight(float normX, float normZ, float height, float opacity)
  void LowerHeight(int x, int z, float height, float opacity)
  void RaiseHeight(Vector3 worldPos, float height, float opacity)
  void RaiseHeight(float normX, float normZ, float height, float opacity)
  void RaiseHeight(int x, int z, float height, float opacity)
  void SetHeight(Vector3 worldPos, float opacity, float radius, float fade)
  void SetHeight(float normX, float normZ, float height, float opacity, float radius, float fade)
  void LowerHeight(Vector3 worldPos, float opacity, float radius, float fade)
  void LowerHeight(float normX, float normZ, float height, float opacity, float radius, float fade)
  void RaiseHeight(Vector3 worldPos, float opacity, float radius, float fade)
  void RaiseHeight(float normX, float normZ, float height, float opacity, float radius, float fade)
  void AddHeight(Vector3 worldPos, float delta, float radius, float fade)
  void AddHeight(float normX, float normZ, float delta, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainMap
Наследуется от: TerrainExtension
Поля:
  int res
Свойства:
Методы:
  void ApplyFilter(float normX, float normZ, float radius, float fade, Action`3<int, int, float> action)
  void ForEach(Vector3 worldPos, float radius, Action`2<int, int> action)
  void ForEach(float normX, float normZ, float normRadius, Action`2<int, int> action)
  void ForEachParallel(Vector3 v0, Vector3 v1, Vector3 v2, Action`2<int, int> action)
  void ForEachParallel(Vector2i v0, Vector2i v1, Vector2i v2, Action`2<int, int> action)
  void ForEach(Vector3 v0, Vector3 v1, Vector3 v2, Action`2<int, int> action)
  void ForEach(Vector2i v0, Vector2i v1, Vector2i v2, Action`2<int, int> action)
  void ForEachInternal(Vector2i v0, Vector2i v1, Vector2i v2, Action`2<int, int> action, Vector2i min, Vector2i max)
  void ForEachParallel(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3, Action`2<int, int> action)
  void ForEachParallel(Vector2i v0, Vector2i v1, Vector2i v2, Vector2i v3, Action`2<int, int> action)
  void ForEach(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3, Action`2<int, int> action)
  void ForEach(Vector2i v0, Vector2i v1, Vector2i v2, Vector2i v3, Action`2<int, int> action)
  void ForEachInternal(Vector2i v0, Vector2i v1, Vector2i v2, Vector2i v3, Action`2<int, int> action, Vector2i min, Vector2i max)
  void ForEach(int x_min, int x_max, int z_min, int z_max, Action`2<int, int> action)
  void ForEach(Action`2<int, int> action)
  int Index(float normalized)
  float Coordinate(int index)
  void .ctor()
--------------------------------------------------
Класс: TerrainMap`1
Наследуется от: TerrainMap
Поля:
  T[] src
  T[] dst
Свойства:
Методы:
  void Push()
  void Pop()
  IEnumerable`1<T> ToEnumerable()
  int BytesPerElement()
  long GetMemoryUsage()
  Byte[] ToByteArray()
  void FromByteArray(Byte[] dat)
  void .ctor()
--------------------------------------------------
Класс: TerrainPlacementMap
Наследуется от: TerrainMap`1<bool>
Поля:
  bool isEnabled
Свойства:
Методы:
  void Setup()
  void PostSetup()
  void Enable()
  void Disable()
  void Reset()
  bool GetBlocked(Vector3 worldPos)
  bool GetBlocked(float normX, float normZ)
  bool GetBlocked(int x, int z)
  void SetBlocked(Vector3 worldPos)
  void SetBlocked(float normX, float normZ)
  void SetBlocked(int x, int z)
  bool GetBlocked(Vector3 worldPos, float radius)
  bool GetBlocked(float normX, float normZ, float radius)
  void SetBlocked(Vector3 worldPos, float radius, float fade)
  void SetBlocked(float normX, float normZ, float radius, float fade)
  void .ctor()
  void <SetBlocked>b__15_0(int x, int z, float lerp)
--------------------------------------------------
Класс: TerrainSplatMap
Наследуется от: TerrainMap`1<byte>
Поля:
  Texture2D SplatTexture0
  Texture2D SplatTexture1
  int num
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  float GetSplatMax(Vector3 worldPos, int mask)
  float GetSplatMax(float normX, float normZ, int mask)
  float GetSplatMax(int x, int z, int mask)
  int GetSplatMaxIndex(Vector3 worldPos, int mask)
  int GetSplatMaxIndex(float normX, float normZ, int mask)
  int GetSplatMaxIndex(int x, int z, int mask)
  int GetSplatMaxType(Vector3 worldPos, int mask)
  int GetSplatMaxType(float normX, float normZ, int mask)
  int GetSplatMaxType(int x, int z, int mask)
  float GetSplat(Vector3 worldPos, int mask)
  float GetSplat(float normX, float normZ, int mask)
  float GetSplat(int x, int z, int mask)
  void SetSplat(Vector3 worldPos, int id)
  void SetSplat(float normX, float normZ, int id)
  void SetSplat(int x, int z, int id)
  void SetSplat(Vector3 worldPos, int id, float v)
  void SetSplat(float normX, float normZ, int id, float v)
  void SetSplat(int x, int z, int id, float v)
  void SetSplatRaw(int x, int z, Vector4 v1, Vector4 v2, float opacity)
  void SetSplat(Vector3 worldPos, int id, float opacity, float radius, float fade)
  void SetSplat(float normX, float normZ, int id, float opacity, float radius, float fade)
  void AddSplat(Vector3 worldPos, int id, float delta, float radius, float fade)
  void AddSplat(float normX, float normZ, int id, float delta, float radius, float fade)
  void SetSplat(int x, int z, int id, float old_val, float new_val)
  void .ctor()
--------------------------------------------------
Класс: TerrainTopologyMap
Наследуется от: TerrainMap`1<int>
Поля:
  Texture2D TopologyTexture
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  bool GetTopology(Vector3 worldPos, int mask)
  bool GetTopology(float normX, float normZ, int mask)
  bool GetTopology(int x, int z, int mask)
  int GetTopology(Vector3 worldPos)
  int GetTopology(float normX, float normZ)
  int GetTopologyFast(Vector2 uv)
  int GetTopology(int x, int z)
  void SetTopology(Vector3 worldPos, int mask)
  void SetTopology(float normX, float normZ, int mask)
  void SetTopology(int x, int z, int mask)
  void AddTopology(Vector3 worldPos, int mask)
  void AddTopology(float normX, float normZ, int mask)
  void AddTopology(int x, int z, int mask)
  void RemoveTopology(Vector3 worldPos, int mask)
  void RemoveTopology(float normX, float normZ, int mask)
  void RemoveTopology(int x, int z, int mask)
  int GetTopology(Vector3 worldPos, float radius)
  int GetTopology(float normX, float normZ, float radius)
  void SetTopology(Vector3 worldPos, int mask, float radius, float fade)
  void SetTopology(float normX, float normZ, int mask, float radius, float fade)
  void AddTopology(Vector3 worldPos, int mask, float radius, float fade)
  void AddTopology(float normX, float normZ, int mask, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainWaterMap
Наследуется от: TerrainMap`1<short>
Поля:
  Texture2D WaterTexture
  float normY
Свойства:
Методы:
  void Setup()
  void GenerateTextures()
  void ApplyTextures()
  float GetHeight(Vector3 worldPos)
  float GetHeight(float normX, float normZ)
  float GetHeightFast(Vector2 uv)
  float GetHeight(int x, int z)
  float GetHeight01(Vector3 worldPos)
  float GetHeight01(float normX, float normZ)
  float GetHeight01(int x, int z)
  Vector3 GetNormal(Vector3 worldPos)
  Vector3 GetNormal(float normX, float normZ)
  Vector3 GetNormalFast(Vector2 uv)
  Vector3 GetNormal(int x, int z)
  float GetSlope(Vector3 worldPos)
  float GetSlope(float normX, float normZ)
  float GetSlope(int x, int z)
  float GetSlope01(Vector3 worldPos)
  float GetSlope01(float normX, float normZ)
  float GetSlope01(int x, int z)
  float GetDepth(Vector3 worldPos)
  float GetDepth(float normX, float normZ)
  void SetHeight(Vector3 worldPos, float height)
  void SetHeight(float normX, float normZ, float height)
  void SetHeight(int x, int z, float height)
  void .ctor()
--------------------------------------------------
Класс: TerrainMargin
Наследуется от: object
Поля:
  MaterialPropertyBlock materialPropertyBlock
Свойства:
Методы:
  void Create()
  void Create(Vector3 position, Vector3 size, Material material)
  void .ctor()
--------------------------------------------------
Класс: TerrainMeta
Наследуется от: MonoBehaviour
Поля:
  Terrain terrain
  TerrainConfig config
  PaintMode paint
  PaintMode currentPaintMode
  TerrainConfig <Config>k__BackingField
  Terrain <Terrain>k__BackingField
  Transform <Transform>k__BackingField
  Vector3 <Position>k__BackingField
  Vector3 <Size>k__BackingField
  Vector3 <OneOverSize>k__BackingField
  Vector3 <HighestPoint>k__BackingField
  Vector3 <LowestPoint>k__BackingField
  float <LootAxisAngle>k__BackingField
  float <BiomeAxisAngle>k__BackingField
  TerrainData <Data>k__BackingField
  TerrainCollider <Collider>k__BackingField
  TerrainCollision <Collision>k__BackingField
  TerrainPhysics <Physics>k__BackingField
  TerrainColors <Colors>k__BackingField
  TerrainQuality <Quality>k__BackingField
  TerrainPath <Path>k__BackingField
  TerrainBiomeMap <BiomeMap>k__BackingField
  TerrainAlphaMap <AlphaMap>k__BackingField
  TerrainBlendMap <BlendMap>k__BackingField
  TerrainHeightMap <HeightMap>k__BackingField
  TerrainSplatMap <SplatMap>k__BackingField
  TerrainTopologyMap <TopologyMap>k__BackingField
  TerrainWaterMap <WaterMap>k__BackingField
  TerrainDistanceMap <DistanceMap>k__BackingField
  TerrainPlacementMap <PlacementMap>k__BackingField
  TerrainTexturing <Texturing>k__BackingField
Свойства:
  TerrainConfig Config
  Terrain Terrain
  Transform Transform
  Vector3 Position
  Vector3 Size
  Vector3 Center
  Vector3 OneOverSize
  Vector3 HighestPoint
  Vector3 LowestPoint
  float LootAxisAngle
  float BiomeAxisAngle
  TerrainData Data
  TerrainCollider Collider
  TerrainCollision Collision
  TerrainPhysics Physics
  TerrainColors Colors
  TerrainQuality Quality
  TerrainPath Path
  TerrainBiomeMap BiomeMap
  TerrainAlphaMap AlphaMap
  TerrainBlendMap BlendMap
  TerrainHeightMap HeightMap
  TerrainSplatMap SplatMap
  TerrainTopologyMap TopologyMap
  TerrainWaterMap WaterMap
  TerrainDistanceMap DistanceMap
  TerrainPlacementMap PlacementMap
  TerrainTexturing Texturing
Методы:
  TerrainConfig get_Config()
  void set_Config(TerrainConfig value)
  Terrain get_Terrain()
  void set_Terrain(Terrain value)
  Transform get_Transform()
  void set_Transform(Transform value)
  Vector3 get_Position()
  void set_Position(Vector3 value)
  Vector3 get_Size()
  void set_Size(Vector3 value)
  Vector3 get_Center()
  Vector3 get_OneOverSize()
  void set_OneOverSize(Vector3 value)
  Vector3 get_HighestPoint()
  void set_HighestPoint(Vector3 value)
  Vector3 get_LowestPoint()
  void set_LowestPoint(Vector3 value)
  float get_LootAxisAngle()
  void set_LootAxisAngle(float value)
  float get_BiomeAxisAngle()
  void set_BiomeAxisAngle(float value)
  TerrainData get_Data()
  void set_Data(TerrainData value)
  TerrainCollider get_Collider()
  void set_Collider(TerrainCollider value)
  TerrainCollision get_Collision()
  void set_Collision(TerrainCollision value)
  TerrainPhysics get_Physics()
  void set_Physics(TerrainPhysics value)
  TerrainColors get_Colors()
  void set_Colors(TerrainColors value)
  TerrainQuality get_Quality()
  void set_Quality(TerrainQuality value)
  TerrainPath get_Path()
  void set_Path(TerrainPath value)
  TerrainBiomeMap get_BiomeMap()
  void set_BiomeMap(TerrainBiomeMap value)
  TerrainAlphaMap get_AlphaMap()
  void set_AlphaMap(TerrainAlphaMap value)
  TerrainBlendMap get_BlendMap()
  void set_BlendMap(TerrainBlendMap value)
  TerrainHeightMap get_HeightMap()
  void set_HeightMap(TerrainHeightMap value)
  TerrainSplatMap get_SplatMap()
  void set_SplatMap(TerrainSplatMap value)
  TerrainTopologyMap get_TopologyMap()
  void set_TopologyMap(TerrainTopologyMap value)
  TerrainWaterMap get_WaterMap()
  void set_WaterMap(TerrainWaterMap value)
  TerrainDistanceMap get_DistanceMap()
  void set_DistanceMap(TerrainDistanceMap value)
  TerrainPlacementMap get_PlacementMap()
  void set_PlacementMap(TerrainPlacementMap value)
  TerrainTexturing get_Texturing()
  void set_Texturing(TerrainTexturing value)
  bool OutOfBounds(Vector3 worldPos)
  bool OutOfMargin(Vector3 worldPos)
  float InnerDistToEdge2D(Vector3 worldPos)
  Vector3 RandomPointOffshore()
  Vector3 Normalize(Vector3 worldPos)
  float NormalizeX(float x)
  float NormalizeY(float y)
  float NormalizeZ(float z)
  Vector3 Denormalize(Vector3 normPos)
  float DenormalizeX(float normX)
  float DenormalizeY(float normY)
  float DenormalizeZ(float normZ)
  void Awake()
  void Init(Terrain terrainOverride, TerrainConfig configOverride)
  void InitNoTerrain(bool createPath)
  void SetupComponents()
  void PostSetupComponents()
  void BindShaderProperties()
  void .ctor()
--------------------------------------------------
Класс: TerrainPaint
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainPath
Наследуется от: TerrainExtension
Поля:
  List`1<PathList> Roads
  List`1<PathList> Rails
  List`1<PathList> Rivers
  List`1<PathList> Powerlines
  List`1<LandmarkInfo> Landmarks
  List`1<MonumentInfo> Monuments
  List`1<RiverInfo> RiverObjs
  List`1<LakeInfo> LakeObjs
  GameObject DungeonGridRoot
  List`1<DungeonGridInfo> DungeonGridEntrances
  List`1<DungeonGridCell> DungeonGridCells
  GameObject DungeonBaseRoot
  List`1<DungeonBaseInfo> DungeonBaseEntrances
  List`1<DungeonBaseLink> DungeonBaseLinks
  List`1<Vector3> OceanPatrolClose
  List`1<Vector3> OceanPatrolFar
  Dictionary`2<string, List`1<PowerlineNode>> wires
Свойства:
Методы:
  void PostSetup()
  void Clear()
  T FindClosest(List`1<T> list, Vector3 pos)
  Int32[0...,0...] CreatePowerlineCostmap(UInt32& seed)
  Int32[0...,0...] CreateRoadCostmap(UInt32& seed)
  Int32[0...,0...] CreateRailCostmap(UInt32& seed)
  Int32[0...,0...] CreateBoatCostmap(float depth)
  void AddWire(PowerlineNode node)
  void CreateWires()
  void CreateWire(string name, List`1<GameObject> objects, GameObjectRef wirePrefab)
  MonumentInfo FindMonumentWithBoundsOverlap(Vector3 position)
  void .ctor()
--------------------------------------------------
Класс: InfrastructureType
Наследуется от: Enum
Поля:
  int value__
  InfrastructureType Road
  InfrastructureType Power
  InfrastructureType Trail
  InfrastructureType Tunnel
  InfrastructureType UnderwaterLab
  InfrastructureType Boat
  InfrastructureType Rail
Свойства:
Методы:
--------------------------------------------------
Класс: TerrainPhysics
Наследуется от: TerrainExtension
Поля:
  TerrainSplatMap splat
  PhysicMaterial[] materials
Свойства:
Методы:
  void Setup()
  PhysicMaterial GetMaterial(Vector3 worldPos)
  void .ctor()
--------------------------------------------------
Класс: TerrainQuality
Наследуется от: TerrainExtension
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainTexturing
Наследуется от: TerrainExtension
Поля:
  bool debugFoliageDisplacement
  bool initialized
  TerrainTexturing instance
  int ShoreVectorDownscale
  int ShoreVectorBlurPasses
  float terrainSize
  int shoreMapSize
  float shoreDistanceScale
  Single[] shoreDistances
  Vector3[] shoreVectors
Свойства:
  TerrainTexturing Instance
  int ShoreMapSize
  Vector3[] ShoreMap
Методы:
  void ReleaseBasePyramid()
  void UpdateBasePyramid()
  void InitializeCoarseHeightSlope()
  void ReleaseCoarseHeightSlope()
  void UpdateCoarseHeightSlope()
  TerrainTexturing get_Instance()
  void CheckInstance()
  void Awake()
  void Setup()
  void PostSetup()
  void Shutdown()
  void OnEnable()
  void OnDisable()
  void Update()
  int get_ShoreMapSize()
  Vector3[] get_ShoreMap()
  void InitializeShoreVector()
  void GenerateShoreVector()
  void ReleaseShoreVector()
  void GenerateShoreVector(Single[]& distances, Vector3[]& vectors)
  float GetCoarseDistanceToShore(Vector3 pos)
  float GetCoarseDistanceToShore(Vector2 uv)
  Vector3 GetCoarseVectorToShore(Vector3 pos)
  Vector3 GetCoarseVectorToShore(Vector2 uv)
  void .ctor()
--------------------------------------------------
Класс: TextureCacheState
Наследуется от: Enum
Поля:
  int value__
  TextureCacheState Initializing
  TextureCacheState Uncached
  TextureCacheState CachedRaw
Свойства:
Методы:
--------------------------------------------------
Класс: TerrainTreeBatch
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TreeMesh
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TerrainFilter
Наследуется от: PrefabAttribute
Поля:
  SpawnFilter Filter
  bool CheckPlacementMap
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool Check(Vector3 pos)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: TerrainFilterEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ApplyTerrainFilters(Transform transform, TerrainFilter[] filters, Vector3 pos, Quaternion rot, Vector3 scale, SpawnFilter globalFilter)
--------------------------------------------------
Класс: TerrainFilterGenerator
Наследуется от: MonoBehaviour
Поля:
  float PlacementRadius
  float PlacementDistance
  SpawnFilter Filter
  bool CheckPlacementMap
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CollateTrainTracks
Наследуется от: ProceduralComponent
Поля:
  float MAX_NODE_DIST
  float MAX_NODE_DIST_SQR
  float MAX_NODE_ANGLE
Свойства:
  bool RunOnCache
Методы:
  bool get_RunOnCache()
  void Process(UInt32 seed)
  void .ctor()
  bool <Process>g__CompareNodes|5_1(Vector3 theirPos, Vector3 theirTangent, <>c__DisplayClass5_0& , <>c__DisplayClass5_1& , <>c__DisplayClass5_2& )
  bool <Process>g__CompareNodes|5_2(bool ourStart, bool theirStart, <>c__DisplayClass5_3& , <>c__DisplayClass5_4& , <>c__DisplayClass5_5& , <>c__DisplayClass5_6& )
  bool <Process>g__NodesConnect|5_0(Vector3 ourPos, Vector3 theirPos, Vector3 ourTangent, Vector3 theirTangent)
--------------------------------------------------
Класс: MonumentNode
Наследуется от: MonoBehaviour
Поля:
  string ResourceFolder
Свойства:
Методы:
  void Awake()
  void Process(UInt32& seed)
  void .ctor()
--------------------------------------------------
Класс: ProceduralComponent
Наследуется от: MonoBehaviour
Поля:
  Realm Mode
  string Description
Свойства:
  bool RunOnCache
Методы:
  bool get_RunOnCache()
  bool ShouldRun()
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateBiome
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Native_GenerateBiome(Byte[] map, int res, Vector3 pos, Vector3 size, UInt32 seed, float lootAngle, float lootTier0, float lootTier1, float lootTier2, float biomeAngle, float biomeArid, float biomeTemperate, float biomeTundra, float biomeArctic, Int16[] heightmap, int heightres)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateCliffSplat
Наследуется от: ProceduralComponent
Поля:
  int filter
Свойства:
Методы:
  void Process(int x, int z)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateCliffTopology
Наследуется от: ProceduralComponent
Поля:
  bool KeepExisting
  int filter
Свойства:
Методы:
  void Process(int x, int z)
  void Process(int x, int z, bool keepExisting)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateClutterTopology
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateDecorTopology
Наследуется от: ProceduralComponent
Поля:
  bool KeepExisting
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateDungeonBase
Наследуется от: ProceduralComponent
Поля:
  string EntranceFolder
  string LinkFolder
  string EndFolder
  string TransitionFolder
  InfrastructureType ConnectionType
  Vector3 VolumeExtrudePositive
  Vector3 VolumeExtrudeNegative
  int MaxCount
  int MaxDepth
  int MaxFloor
  List`1<DungeonSegment> segmentsTotal
  Quaternion[] horizontalRotations
  Quaternion[] pillarRotations
  Quaternion[] verticalRotations
Свойства:
  bool RunOnCache
Методы:
  bool get_RunOnCache()
  void Process(UInt32 seed)
  Quaternion[] GetRotationList(DungeonBaseSocketType type)
  int GetSocketFloor(DungeonBaseSocketType type)
  bool IsFullyOccupied(List`1<DungeonSegment> segments, DungeonSegment segment)
  bool NeighbourMatches(List`1<DungeonSegment> segments, DungeonBaseTransition transition, Vector3 transitionPos, Quaternion transitionRot)
  int SocketMatches(List`1<DungeonSegment> segments, DungeonBaseLink link, Vector3 linkPos, Quaternion linkRot)
  bool IsOccupied(List`1<DungeonSegment> segments, DungeonBaseSocket socket, Vector3 socketPos, Quaternion socketRot)
  int CountLocal(List`1<DungeonSegment> segments, DungeonBaseLink link)
  int CountGlobal(List`1<DungeonSegment> segments, DungeonBaseLink link)
  bool IsBlocked(List`1<DungeonSegment> segments, DungeonBaseLink link, Vector3 linkPos, Quaternion linkRot)
  void PlaceSegments(UInt32& seed, int count, int budget, int floors, bool attachToFemale, bool attachToMale, List`1<DungeonSegment> segments, Prefab`1[] prefabs)
  void PlaceTransitions(UInt32& seed, List`1<DungeonSegment> segments, Prefab`1[] prefabs)
  bool Place(UInt32& seed, List`1<DungeonSegment> segments, DungeonBaseSocket targetSocket, Vector3 targetPos, Quaternion targetRot, Prefab`1<DungeonBaseLink> prefab, Quaternion[] rotations, DungeonBaseSocket& linkSocket, Vector3& linkPos, Quaternion& linkRot, Int32& linkScore)
  void SetupAI()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GenerateDungeonGrid
Наследуется от: ProceduralComponent
Поля:
  string TunnelFolder
  string StationFolder
  string UpwardsFolder
  string TransitionFolder
  string LinkFolder
  InfrastructureType ConnectionType
  int CellSize
  float LinkHeight
  float LinkRadius
  float LinkTransition
  int MaxDepth
Свойства:
  bool RunOnCache
Методы:
  bool get_RunOnCache()
  void Process(UInt32 seed)
  float GetDistanceToAboveGroundRail(Vector3 pos)
  void .ctor()
--------------------------------------------------
Класс: GenerateHeight
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Native_GenerateHeight(Int16[] map, int res, Vector3 pos, Vector3 size, UInt32 seed, float lootAngle, float lootTier0, float lootTier1, float lootTier2, float biomeAngle, float biomeArid, float biomeTemperate, float biomeTundra, float biomeArctic)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GeneratePowerlineLayout
Наследуется от: ProceduralComponent
Поля:
  int MaxDepth
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GeneratePowerlineTopology
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRailBranching
Наследуется от: ProceduralComponent
Поля:
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  Quaternion rot90
  int MaxDepth
Свойства:
Методы:
  PathList CreateSegment(int number, Vector3[] points)
  void Process(UInt32 seed)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GenerateRailLayout
Наследуется от: ProceduralComponent
Поля:
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  Quaternion rot90
  int MaxDepth
Свойства:
Методы:
  PathList CreateSegment(int number, Vector3[] points)
  void Process(UInt32 seed)
  void .ctor()
  void .cctor()
  float <Process>g__DistanceToRail|13_0(Vector3 vec)
--------------------------------------------------
Класс: GenerateRailMeshes
Наследуется от: ProceduralComponent
Поля:
  float NormalSmoothing
  bool SnapToTerrain
  Mesh RailMesh
  Mesh[] RailMeshes
  Material RailMaterial
  PhysicMaterial RailPhysicMaterial
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void AddTrackSpline(PathList rail)
  void .ctor()
--------------------------------------------------
Класс: GenerateRailRing
Наследуется от: ProceduralComponent
Поля:
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  int MaxDepth
  int MinWorldSize
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRailSiding
Наследуется от: ProceduralComponent
Поля:
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  Quaternion rotRight
  Quaternion rotLeft
  int MaxDepth
Свойства:
Методы:
  PathList CreateSegment(int number, Vector3[] points)
  void Process(UInt32 seed)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: GenerateRailTerrain
Наследуется от: ProceduralComponent
Поля:
  int SmoothenLoops
  int SmoothenIterations
  int SmoothenY
  int SmoothenXZ
  int TransitionSteps
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRailTexture
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRailTopology
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void MarkRailside()
  void .ctor()
--------------------------------------------------
Класс: GenerateRiverLayout
Наследуется от: ProceduralComponent
Поля:
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRiverMeshes
Наследуется от: ProceduralComponent
Поля:
  float NormalSmoothing
  bool SnapToTerrain
  Mesh RiverMesh
  Mesh[] RiverMeshes
  Material RiverMaterial
  PhysicMaterial RiverPhysicMaterial
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void .ctor()
--------------------------------------------------
Класс: GenerateRiverTerrain
Наследуется от: ProceduralComponent
Поля:
  int SmoothenLoops
  int SmoothenIterations
  int SmoothenY
  int SmoothenXZ
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRiverTexture
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRiverTopology
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void MarkRiverside()
  void .ctor()
--------------------------------------------------
Класс: GenerateRoadLayout
Наследуется от: ProceduralComponent
Поля:
  InfrastructureType RoadType
  float RoadWidth
  float TrailWidth
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  int MaxDepth
Свойства:
Методы:
  PathList CreateSegment(int number, Vector3[] points)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRoadMeshes
Наследуется от: ProceduralComponent
Поля:
  float NormalSmoothing
  bool SnapToTerrain
  Mesh RoadMesh
  Mesh[] RoadMeshes
  Material RoadMaterial
  Material RoadRingMaterial
  PhysicMaterial RoadPhysicMaterial
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void .ctor()
--------------------------------------------------
Класс: GenerateRoadRing
Наследуется от: ProceduralComponent
Поля:
  float Width
  float InnerPadding
  float OuterPadding
  float InnerFade
  float OuterFade
  float RandomScale
  float MeshOffset
  float TerrainOffset
  int MaxDepth
  int MinWorldSize
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRoadTerrain
Наследуется от: ProceduralComponent
Поля:
  int SmoothenLoops
  int SmoothenIterations
  int SmoothenY
  int SmoothenXZ
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRoadTexture
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateRoadTopology
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void MarkRoadside()
  void .ctor()
--------------------------------------------------
Класс: GenerateSplat
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Native_GenerateSplat(Byte[] map, int res, Vector3 pos, Vector3 size, UInt32 seed, float lootAngle, float biomeAngle, Int16[] heightmap, int heightres, Byte[] biomemap, int biomeres, Int32[] topologymap, int topologyres)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateTerrainMesh
Наследуется от: ProceduralComponent
Поля:
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void .ctor()
--------------------------------------------------
Класс: GenerateTextures
Наследуется от: ProceduralComponent
Поля:
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void .ctor()
--------------------------------------------------
Класс: GenerateTopology
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Native_GenerateTopology(Int32[] map, int res, Vector3 pos, Vector3 size, UInt32 seed, float lootAngle, float lootTier0, float lootTier1, float lootTier2, float biomeAngle, float biomeArid, float biomeTemperate, float biomeTundra, float biomeArctic, Int16[] heightmap, int heightres, Byte[] biomemap, int biomeres)
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: GenerateWireMeshes
Наследуется от: ProceduralComponent
Поля:
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void .ctor()
--------------------------------------------------
Класс: PlaceCliffs
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  int RetryMultiplier
  int CutoffSlope
  float MinScale
  float MaxScale
  int target_count
  int target_length
  float min_scale_delta
  int max_scale_attempts
  int min_rotation
  int max_rotation
  int rotation_delta
  float offset_c
  float offset_l
  float offset_r
  Vector3[] offsets
Свойства:
Методы:
  void Process(UInt32 seed)
  CliffPlacement PlaceMale(Prefab[] prefabs, UInt32& seed, Prefab parentPrefab, Vector3 parentPos, Quaternion parentRot, Vector3 parentScale)
  CliffPlacement PlaceFemale(Prefab[] prefabs, UInt32& seed, Prefab parentPrefab, Vector3 parentPos, Quaternion parentRot, Vector3 parentScale)
  CliffPlacement Place(Prefab[] prefabs, UInt32& seed, Prefab parentPrefab, Vector3 parentPos, Quaternion parentRot, Vector3 parentScale, int parentAngle, int parentCount, int parentScore)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlaceDecorUniform
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  float ObjectDistance
  float ObjectDithering
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: PlaceDecorValueNoise
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  NoiseParameters Cluster
  float ObjectDensity
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: PlaceDecorWhiteNoise
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  float ObjectDensity
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: PlaceMonument
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  GameObjectRef Monument
  int Attempts
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: PlaceMonuments
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  int TargetCount
  int MinDistanceSameType
  int MinDistanceDifferentType
  int MinWorldSize
  DistanceMode DistanceSameType
  DistanceMode DistanceDifferentType
  bool NexusOnly
  int GroupCandidates
  int IndividualCandidates
  int Attempts
  int MaxDepth
Свойства:
Методы:
  void Process(UInt32 seed)
  DistanceInfo GetDistanceInfo(List`1<SpawnInfo> spawns, Prefab`1<MonumentInfo> prefab, Vector3 monumentPos, Quaternion monumentRot, Vector3 monumentScale, Vector3 dungeonPos)
  void .ctor()
--------------------------------------------------
Класс: PlaceMonumentsOffshore
Наследуется от: ProceduralComponent
Поля:
  string ResourceFolder
  int TargetCount
  int MinDistanceFromTerrain
  int MaxDistanceFromTerrain
  int DistanceBetweenMonuments
  int MinWorldSize
  int Candidates
  int Attempts
Свойства:
Методы:
  void Process(UInt32 seed)
  bool CheckRadius(List`1<SpawnInfo> spawns, Vector3 pos, float radius)
  void .ctor()
--------------------------------------------------
Класс: PlaceMonumentsRailside
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  int TargetCount
  int PositionOffset
  int TangentInterval
  int MinDistanceSameType
  int MinDistanceDifferentType
  int MinWorldSize
  DistanceMode DistanceSameType
  DistanceMode DistanceDifferentType
  int GroupCandidates
  int IndividualCandidates
  Quaternion rot90
Свойства:
Методы:
  void Process(UInt32 seed)
  DistanceInfo GetDistanceInfo(List`1<SpawnInfo> spawns, Prefab`1<MonumentInfo> prefab, Vector3 monumentPos, Quaternion monumentRot, Vector3 monumentScale)
  float GetDistanceToAboveGroundRail(Vector3 pos)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlaceMonumentsRoadside
Наследуется от: ProceduralComponent
Поля:
  SpawnFilter Filter
  string ResourceFolder
  int TargetCount
  int MinDistanceSameType
  int MinDistanceDifferentType
  int MinWorldSize
  DistanceMode DistanceSameType
  DistanceMode DistanceDifferentType
  RoadMode RoadType
  int GroupCandidates
  int IndividualCandidates
  Quaternion rot90
Свойства:
Методы:
  void Process(UInt32 seed)
  DistanceInfo GetDistanceInfo(List`1<SpawnInfo> spawns, Prefab`1<MonumentInfo> prefab, Vector3 monumentPos, Quaternion monumentRot, Vector3 monumentScale)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: PlacePowerlineObjects
Наследуется от: ProceduralComponent
Поля:
  BasicObject[] Start
  BasicObject[] End
  SideObject[] Side
  PathObject[] Path
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: PlaceRiverObjects
Наследуется от: ProceduralComponent
Поля:
  BasicObject[] Start
  BasicObject[] End
  SideObject[] Side
  PathObject[] Path
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: PlaceRoadObjects
Наследуется от: ProceduralComponent
Поля:
  BasicObject[] Start
  BasicObject[] End
  SideObject[] Side
  PathObject[] Path
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: ProcessMonumentNodes
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: ProcessProceduralObjects
Наследуется от: ProceduralComponent
Поля:
Свойства:
  bool RunOnCache
Методы:
  void Process(UInt32 seed)
  bool get_RunOnCache()
  void .ctor()
--------------------------------------------------
Класс: ResetPlacementMap
Наследуется от: ProceduralComponent
Поля:
Свойства:
Методы:
  void Process(UInt32 seed)
  void .ctor()
--------------------------------------------------
Класс: ProceduralObject
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void Process()
  void .ctor()
--------------------------------------------------
Класс: AddToAlphaMap
Наследуется от: ProceduralObject
Поля:
  Bounds bounds
Свойства:
Методы:
  void Process()
  void .ctor()
--------------------------------------------------
Класс: AddToHeightMap
Наследуется от: ProceduralObject
Поля:
  bool DestroyGameObject
Свойства:
Методы:
  void Apply()
  void Process()
  void .ctor()
--------------------------------------------------
Класс: AddToWaterMap
Наследуется от: ProceduralObject
Поля:
  bool isOcean
Свойства:
Методы:
  void Process()
  void .ctor()
--------------------------------------------------
Класс: TerrainGenerator
Наследуется от: SingletonComponent`1<TerrainGenerator>
Поля:
  TerrainConfig config
  float HeightMapRes
  float SplatMapRes
  float BaseMapRes
Свойства:
Методы:
  int GetHeightMapRes()
  int GetSplatMapRes()
  int GetBaseMapRes()
  GameObject CreateTerrain()
  GameObject CreateTerrain(int heightmapResolution, int alphamapResolution)
  void .ctor()
--------------------------------------------------
Класс: WorldNetworking
Наследуется от: object
Поля:
  int prefabsPerPacket
  int pathsPerPacket
Свойства:
Методы:
  void OnMessageReceived(Message message)
  void SendWorldData(Connection connection)
  void SendWorldData(Connection connection, WorldMessage& data)
  void .ctor()
--------------------------------------------------
Класс: WorldSetup
Наследуется от: SingletonComponent`1<WorldSetup>
Поля:
  bool AutomaticallySetup
  bool BypassProceduralSpawn
  GameObject terrain
  GameObject decorPrefab
  GameObject grassPrefab
  GameObject spawnPrefab
  TerrainMeta terrainMeta
  UInt32 EditorSeed
  UInt32 EditorSalt
  UInt32 EditorSize
  string EditorUrl
  string EditorConfigFile
  string EditorConfigString
  List`1<ProceduralObject> ProceduralObjects
  List`1<MonumentNode> MonumentNodes
Свойства:
Методы:
  void OnValidate()
  void Awake()
  void CreateObject(GameObject prefab)
  IEnumerator InitCoroutine()
  void CancelSetup(string msg)
  void .ctor()
--------------------------------------------------
Класс: ApplyTerrainModifiers
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: TerrainCarve
Наследуется от: TerrainModifier
Поля:
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainHeightAdd
Наследуется от: TerrainModifier
Поля:
  float Delta
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainHeightSet
Наследуется от: TerrainModifier
Поля:
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainModifier
Наследуется от: PrefabAttribute
Поля:
  float Opacity
  float Radius
  float Fade
Свойства:
Методы:
  void Apply(Vector3 pos, float scale)
  void Apply(Vector3 position, float opacity, float radius, float fade)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: TerrainModifierEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void ApplyTerrainModifiers(Transform transform, TerrainModifier[] modifiers, Vector3 pos, Quaternion rot, Vector3 scale)
  void ApplyTerrainModifiers(Transform transform, TerrainModifier[] modifiers)
--------------------------------------------------
Класс: TerrainPlacementBlocked
Наследуется от: TerrainModifier
Поля:
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainSplatSet
Наследуется от: TerrainModifier
Поля:
  Enum SplatType
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainTopologyAdd
Наследуется от: TerrainModifier
Поля:
  Enum TopologyType
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: TerrainTopologySet
Наследуется от: TerrainModifier
Поля:
  Enum TopologyType
Свойства:
Методы:
  void Apply(Vector3 position, float opacity, float radius, float fade)
  void .ctor()
--------------------------------------------------
Класс: Monument
Наследуется от: TerrainPlacement
Поля:
  float Radius
  float Fade
  bool AutoCliffSplat
  bool AutoCliffTopology
Свойства:
Методы:
  void OnDrawGizmosSelected()
  void ApplyHeight(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplySplat(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyAlpha(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyBiome(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyTopology(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyWater(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void .ctor()
--------------------------------------------------
Класс: Mountain
Наследуется от: TerrainPlacement
Поля:
  float Fade
  bool AutoCliffSplat
  bool AutoCliffTopology
Свойства:
Методы:
  void OnDrawGizmosSelected()
  void ApplyHeight(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplySplat(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyAlpha(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyBiome(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyTopology(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyWater(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void .ctor()
--------------------------------------------------
Класс: TerrainPlacement
Наследуется от: PrefabAttribute
Поля:
  Vector3 size
  Vector3 extents
  Vector3 offset
  bool HeightMap
  bool AlphaMap
  bool WaterMap
  Enum SplatMask
  Enum BiomeMask
  Enum TopologyMask
  Texture2DRef heightmap
  Texture2DRef splatmap0
  Texture2DRef splatmap1
  Texture2DRef alphamap
  Texture2DRef biomemap
  Texture2DRef topologymap
  Texture2DRef watermap
  Texture2DRef blendmap
Свойства:
Методы:
  void Apply(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  bool ShouldHeight()
  bool ShouldSplat(int id)
  bool ShouldAlpha()
  bool ShouldBiome(int id)
  bool ShouldTopology(int id)
  bool ShouldWater()
  void ApplyHeight(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplySplat(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyAlpha(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyBiome(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyTopology(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  void ApplyWater(Matrix4x4 localToWorld, Matrix4x4 worldToLocal)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: TerrainPlacementEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void ApplyTerrainPlacements(Transform transform, TerrainPlacement[] placements, Vector3 pos, Quaternion rot, Vector3 scale)
  void ApplyTerrainPlacements(Transform transform, TerrainPlacement[] placements)
--------------------------------------------------
Класс: OceanSettings
Наследуется от: ScriptableObject
Поля:
  ComputeShader waveSpectrumCompute
  ComputeShader fftCompute
  ComputeShader waveMergeCompute
  ComputeShader waveInitialSpectrum
  Single[] octaveScales
  float lamda
  float windDirection
  float distanceAttenuationFactor
  float depthAttenuationFactor
  OceanSpectrumSettings[] spectrumSettings
  Single[] spectrumRanges
Свойства:
Методы:
  OceanDisplacementShort3[0...,0...,0...] LoadSimData()
  void .ctor()
--------------------------------------------------
Класс: WaterBodyType
Наследуется от: Enum
Поля:
  int value__
  WaterBodyType Ocean
  WaterBodyType River
  WaterBodyType Lake
  WaterBodyType Pool
  WaterBodyType Moonpool
Свойства:
Методы:
--------------------------------------------------
Класс: WaterBody
Наследуется от: MonoBehaviour
Поля:
  WaterBodyType Type
  Renderer Renderer
  Collider[] Triggers
  bool IsOcean
  Transform <Transform>k__BackingField
  FishingTag FishingType
Свойства:
  Transform Transform
Методы:
  void set_Transform(Transform value)
  Transform get_Transform()
  void Awake()
  void OnEnable()
  void OnDisable()
  void OnOceanLevelChanged(float newLevel)
  void .ctor()
--------------------------------------------------
Класс: WaterCamera
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WaterCollision
Наследуется от: MonoBehaviour
Поля:
  ListDictionary`2<Collider, List`1<Collider>> ignoredColliders
  HashSet`1<Collider> waterColliders
Свойства:
Методы:
  void Awake()
  void Clear()
  void Reset(Collider collider)
  bool GetIgnore(Vector3 pos, float radius)
  bool GetIgnore(Bounds bounds)
  bool GetIgnore(Vector3 start, Vector3 end, float radius)
  bool GetIgnore(RaycastHit hit)
  bool GetIgnore(Collider collider)
  void SetIgnore(Collider collider, Collider trigger, bool ignore)
  void LateUpdate()
  void .ctor()
--------------------------------------------------
Класс: WaterCullingVolume
Наследуется от: MonoBehaviour
Поля:
  bool isDynamic
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WaterDepthMask
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WaterInteraction
Наследуется от: MonoBehaviour
Поля:
  Texture2D texture
  float Displacement
  float Disturbance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WaterQuality
Наследуется от: Enum
Поля:
  int value__
  WaterQuality Low
  WaterQuality Medium
  WaterQuality High
Свойства:
Методы:
--------------------------------------------------
Класс: WaterSystem
Наследуется от: MonoBehaviour
Поля:
  float oceanLevel
  WaterSystem <Instance>k__BackingField
  WaterCollision <Collision>k__BackingField
  WaterBody <Ocean>k__BackingField
  ListHashSet`1<WaterCamera> <WaterCameras>k__BackingField
  HashSet`1<WaterBody> <WaterBodies>k__BackingField
  HashSet`1<WaterDepthMask> <DepthMasks>k__BackingField
  float <WaveTime>k__BackingField
  OceanSettings oceanSettings
  OceanSimulation oceanSimulation
  WaterQuality Quality
  Material oceanMaterial
  RenderingSettings Rendering
  int patchSize
  int patchCount
  float patchScale
  bool <IsInitialized>k__BackingField
Свойства:
  WaterSystem Instance
  WaterCollision Collision
  WaterBody Ocean
  Material OceanMaterial
  ListHashSet`1<WaterCamera> WaterCameras
  HashSet`1<WaterBody> WaterBodies
  HashSet`1<WaterDepthMask> DepthMasks
  float WaveTime
  float OceanLevel
  bool IsInitialized
  int Layer
  int Reflections
  float WindowDirection
  Single[] OctaveScales
Методы:
  WaterSystem get_Instance()
  void set_Instance(WaterSystem value)
  WaterCollision get_Collision()
  void set_Collision(WaterCollision value)
  WaterBody get_Ocean()
  void set_Ocean(WaterBody value)
  Material get_OceanMaterial()
  ListHashSet`1<WaterCamera> get_WaterCameras()
  HashSet`1<WaterBody> get_WaterBodies()
  HashSet`1<WaterDepthMask> get_DepthMasks()
  float get_WaveTime()
  void set_WaveTime(float value)
  float get_OceanLevel()
  void set_OceanLevel(float value)
  bool get_IsInitialized()
  void set_IsInitialized(bool value)
  int get_Layer()
  int get_Reflections()
  float get_WindowDirection()
  Single[] get_OctaveScales()
  void CheckInstance()
  void Awake()
  void OnEnable()
  void OnDisable()
  void Update()
  bool Trace(Ray ray, Vector3& position, float maxDist)
  bool Trace(Ray ray, Vector3& position, Vector3& normal, float maxDist)
  void GetHeightArray_Managed(Vector2[] pos, Vector2[] posUV, Vector3[] shore, Single[] terrainHeight, Single[] waterHeight)
  void GetHeightArray(Vector2[] pos, Vector2[] posUV, Vector3[] shore, Single[] terrainHeight, Single[] waterHeight)
  float GetHeight(Vector3 pos)
  Vector3 GetNormal(Vector3 pos)
  float MinLevel()
  float MaxLevel()
  void RegisterBody(WaterBody body)
  void UnregisterBody(WaterBody body)
  void UpdateOceanLevel()
  void UpdateOceanSimulation()
  void Refresh()
  void EditorInitialize()
  void EditorShutdown()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WaterVisibilityTrigger
Наследуется от: EnvironmentVolumeTrigger
Поля:
  bool togglePhysics
  bool toggleVisuals
  long enteredTick
  long ticks
  SortedList`2<long, WaterVisibilityTrigger> tracker
Свойства:
Методы:
  void Reset()
  void OnDestroy()
  void ToggleVisibility()
  void ResetVisibility()
  void ToggleCollision(Collider other)
  void ResetCollision(Collider other)
  void OnTriggerEnter(Collider other)
  void OnTriggerExit(Collider other)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WaterCheck
Наследуется от: PrefabAttribute
Поля:
  bool Rotate
Свойства:
Методы:
  void OnDrawGizmosSelected()
  bool Check(Vector3 pos)
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: WaterCheckEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool ApplyWaterChecks(Transform transform, WaterCheck[] anchors, Vector3 pos, Quaternion rot, Vector3 scale)
--------------------------------------------------
Класс: WaterCheckGenerator
Наследуется от: MonoBehaviour
Поля:
  float PlacementRadius
  float PlacementDistance
  bool CheckRotate
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AdaptMeshToTerrain
Наследуется от: MonoBehaviour
Поля:
  LayerMask LayerMask
  float RayHeight
  float RayMaxDistance
  float MinDisplacement
  float MaxDisplacement
  int PlaneResolution
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AtmosphereVolume
Наследуется от: MonoBehaviour
Поля:
  float MaxVisibleDistance
  float BoundsAttenuationDecay
  FogSettings FogSettings
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FogSettings
Наследуется от: ValueType
Поля:
  Gradient ColorOverDaytime
  float Density
  float StartDistance
  float Height
  float HeightDensity
Свойства:
Методы:
--------------------------------------------------
Класс: AtmosphereVolumeRenderer
Наследуется от: MonoBehaviour
Поля:
  FogMode Mode
  bool DistanceFog
  bool HeightFog
  AtmosphereVolume Volume
Свойства:
  bool isSupported
Методы:
  bool get_isSupported()
  void .ctor()
--------------------------------------------------
Класс: CommandBufferDesc
Наследуется от: object
Поля:
  CameraEvent <CameraEvent>k__BackingField
  int <OrderId>k__BackingField
  Action`1<CommandBuffer> <FillDelegate>k__BackingField
Свойства:
  CameraEvent CameraEvent
  int OrderId
  Action`1<CommandBuffer> FillDelegate
Методы:
  CameraEvent get_CameraEvent()
  void set_CameraEvent(CameraEvent value)
  int get_OrderId()
  void set_OrderId(int value)
  Action`1<CommandBuffer> get_FillDelegate()
  void set_FillDelegate(Action`1<CommandBuffer> value)
  void .ctor(CameraEvent cameraEvent, int orderId, FillCommandBuffer fill)
--------------------------------------------------
Класс: CommandBufferManager
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeferredDecal
Наследуется от: MonoBehaviour
Поля:
  Mesh mesh
  Material material
  DeferredDecalQueue queue
  bool applyImmediately
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeferredDecalRenderer
Наследуется от: BaseCommandBuffer
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeferredDecalQueue
Наследуется от: Enum
Поля:
  int value__
  DeferredDecalQueue Background
  DeferredDecalQueue Foreground
Свойства:
Методы:
--------------------------------------------------
Класс: BindRendererBounds
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BindSubsurfaceProfile
Наследуется от: MonoBehaviour
Поля:
  SubsurfaceProfile subsurfaceProfile
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SubsurfaceScatteringParams
Наследуется от: ValueType
Поля:
  bool enabled
  bool halfResolution
  float radiusScale
  SubsurfaceScatteringParams Default
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: ExtendGBufferParams
Наследуется от: ValueType
Поля:
  bool enabled
  ExtendGBufferParams Default
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: ScreenSpaceRefractionParams
Наследуется от: ValueType
Поля:
  float screenWeightDistance
  ScreenSpaceRefractionParams Default
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: DeferredExtension
Наследуется от: MonoBehaviour
Поля:
  ExtendGBufferParams extendGBuffer
  SubsurfaceScatteringParams subsurfaceScattering
  ScreenSpaceRefractionParams screenSpaceRefraction
  Texture2D blueNoise
  Texture preintegratedFGD_GGX
  Texture envBrdfLut
  float depthScale
  bool debug
  bool forceToCameraResolution
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeferredExtensionMesh
Наследуется от: MonoBehaviour
Поля:
  SubsurfaceProfile subsurfaceProfile
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SeparableSSS
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector3 Gaussian(float variance, float r, Color falloffColor)
  Vector3 Profile(float r, Color falloffColor)
  void CalculateKernel(Color[] target, int targetStart, int targetSize, Color subsurfaceColor, Color falloffColor)
  void .ctor()
--------------------------------------------------
Класс: SubsurfaceProfileData
Наследуется от: ValueType
Поля:
  float ScatterRadius
  Color SubsurfaceColor
  Color FalloffColor
  Color TransmissionTint
Свойства:
  SubsurfaceProfileData Default
  SubsurfaceProfileData Invalid
Методы:
  SubsurfaceProfileData get_Default()
  SubsurfaceProfileData get_Invalid()
--------------------------------------------------
Класс: SubsurfaceProfile
Наследуется от: ScriptableObject
Поля:
  SubsurfaceProfileTexture profileTexture
  SubsurfaceProfileData Data
  int id
Свойства:
  Texture2D Texture
  Vector4[] TransmissionTints
  int Id
Методы:
  Texture2D get_Texture()
  Vector4[] get_TransmissionTints()
  int get_Id()
  void set_Id(int value)
  void OnEnable()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SubsurfaceProfileTexture
Наследуется от: object
Поля:
  int SUBSURFACE_PROFILE_COUNT
  int MAX_SUBSURFACE_PROFILES
  int SUBSURFACE_RADIUS_SCALE
  int SUBSURFACE_KERNEL_SIZE
  HashSet`1<SubsurfaceProfile> entries
  Texture2D texture
  Vector4[] transmissionTints
  int KernelSize0
  int KernelSize1
  int KernelSize2
  int KernelTotalSize
  int Width
Свойства:
  Texture2D Texture
  Vector4[] TransmissionTints
Методы:
  Texture2D get_Texture()
  Vector4[] get_TransmissionTints()
  void AddProfile(SubsurfaceProfile profile)
  Color Clamp(Color color, float min, float max)
  void WriteKernel(Color[]& pixels, Color[]& kernel, int id, int y, SubsurfaceProfileData& data)
  void CreateResources()
  void ReleaseResources()
  void .ctor()
--------------------------------------------------
Класс: DeferredMeshDecal
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeferredMeshDecalRenderer
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EnvironmentVolumeProperties
Наследуется от: ScriptableObject
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EnvironmentVolumePropertiesCollection
Наследуется от: ScriptableObject
Поля:
  float TransitionSpeed
  LayerMask ReflectionMask
  EnvironmentMultiplier[] ReflectionMultipliers
  float DefaultReflectionMultiplier
  EnvironmentMultiplier[] AmbientMultipliers
  float DefaultAmbientMultiplier
  OceanParameters OceanOverrides
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FoliageDisplacement
Наследуется от: MonoBehaviour
Поля:
  bool moving
  bool billboard
  Mesh mesh
  Material material
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FoliageDisplacementManager
Наследуется от: SingletonComponent`1<FoliageDisplacementManager>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Impostor
Наследуется от: MonoBehaviour
Поля:
  ImpostorAsset asset
  GameObject reference
  float angle
  int resolution
  int padding
  bool spriteOutlineAsMesh
Свойства:
Методы:
  void OnEnable()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: ImpostorAsset
Наследуется от: ScriptableObject
Поля:
  TextureEntry[] textures
  Vector2 size
  Vector2 pivot
  Mesh mesh
Свойства:
Методы:
  Texture2D FindTexture(string name)
  void .ctor()
--------------------------------------------------
Класс: ImpostorInstanceData
Наследуется от: object
Поля:
  Renderer <Renderer>k__BackingField
  Mesh <Mesh>k__BackingField
  Material <Material>k__BackingField
  ImpostorBatch Batch
  int BatchIndex
  int hash
  Vector4 positionAndScale
Свойства:
  Renderer Renderer
  Mesh Mesh
  Material Material
Методы:
  void set_Renderer(Renderer value)
  Renderer get_Renderer()
  void set_Mesh(Mesh value)
  Mesh get_Mesh()
  void set_Material(Material value)
  Material get_Material()
  void .ctor(Renderer renderer, Mesh mesh, Material material)
  void .ctor(Vector3 position, Vector3 scale, Mesh mesh, Material material)
  int GenerateHashCode()
  bool Equals(object obj)
  int GetHashCode()
  Vector4 PositionAndScale()
  void Update()
--------------------------------------------------
Класс: ImpostorBatch
Наследуется от: object
Поля:
  Mesh <Mesh>k__BackingField
  Material <Material>k__BackingField
  ComputeBuffer <PositionBuffer>k__BackingField
  FPNativeList`1<Vector4> Positions
  ComputeBuffer <ArgsBuffer>k__BackingField
  FPNativeList`1<UInt32> args
  bool <IsDirty>k__BackingField
  Queue`1<int> recycle
Свойства:
  Mesh Mesh
  Material Material
  ComputeBuffer PositionBuffer
  ComputeBuffer ArgsBuffer
  bool IsDirty
  int Count
  bool Visible
Методы:
  void set_Mesh(Mesh value)
  Mesh get_Mesh()
  void set_Material(Material value)
  Material get_Material()
  void set_PositionBuffer(ComputeBuffer value)
  ComputeBuffer get_PositionBuffer()
  void set_ArgsBuffer(ComputeBuffer value)
  ComputeBuffer get_ArgsBuffer()
  bool get_IsDirty()
  void set_IsDirty(bool value)
  int get_Count()
  bool get_Visible()
  ComputeBuffer SafeRelease(ComputeBuffer buffer)
  void Initialize(Mesh mesh, Material material)
  void Release()
  void AddInstance(ImpostorInstanceData data)
  void RemoveInstance(ImpostorInstanceData data)
  void UpdateBuffers()
  void .ctor()
--------------------------------------------------
Класс: ImpostorRenderer
Наследуется от: MonoBehaviour
Поля:
  string MainPassName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ImpostorShadows
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstancedCameraComponent
Наследуется от: MonoBehaviour
Поля:
  bool IsMirror
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstancedEntityComponent
Наследуется от: PrefabAttribute
Поля:
  bool HideInsideNetworkRange
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: InstancedMeshFilter
Наследуется от: PrefabAttribute
Поля:
  MeshRenderer MeshRenderer
  RendererLOD RendererLOD
  MeshLOD MeshLOD
  InstancedMeshConfig Config
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: InstancedScheduler
Наследуется от: SingletonComponent`1<InstancedScheduler>
Поля:
  ComputeShader CullShader
  ComputeShader SimplePostCullShader
  ComputeShader ClearBufferShader
  ComputeShader WriteIndirectArgsShader
  ComputeShader CopyMeshShader
  ConstructionSkin_ColourLookup ContainerColorLookup
  List`1<BuildingGrade> coloredSkins
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InstancingConfigComponent
Наследуется от: PrefabAttribute
Поля:
  bool DisableInstancing
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: PostCullingJob
Наследуется от: ValueType
Поля:
  NativeArray`1<int> CountPerMesh
  int RendererCount
  NativeArray`1<InstancedRendererJobData> Renderers
  JobInt PostCullMeshCount
  JobInt PostCullShadowCount
Свойства:
Методы:
  void Execute()
--------------------------------------------------
Класс: Float4x4Ex
Наследуется от: object
Поля:
Свойства:
Методы:
  float3 ToPosition(float4x4 m)
  Quaternion ToRotation(float4x4 m)
--------------------------------------------------
Класс: VirtualEntityScheduler
Наследуется от: object
Поля:
  VirtualEntityScheduler <Instance>k__BackingField
Свойства:
  VirtualEntityScheduler Instance
Методы:
  VirtualEntityScheduler get_Instance()
  void set_Instance(VirtualEntityScheduler value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LightCloneShadow
Наследуется от: MonoBehaviour
Поля:
  bool cloneShadowMap
  bool cloneShadowMask
  int shadowMaskDownscale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LiquidWobble
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MaterialPropertyDesc
Наследуется от: ValueType
Поля:
  int nameID
  Type type
Свойства:
Методы:
  void .ctor(string name, Type type)
--------------------------------------------------
Класс: PlanarReflectionCamera
Наследуется от: MonoBehaviour
Поля:
  PlanarReflectionCamera instance
  float updateRate
  float nearClipPlane
  float farClipPlane
  Color fogColor
  float fogDensity
  Mesh waterPlaneMesh
  Material waterPlaneMaterial
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReflectionPlane
Наследуется от: DecayEntity
Поля:
  int _ColorTexID
  int _DepthTexID
  int _ReflectionLerpID
  LayerMask layerMask
  float nearClip
  float farClip
  Material reflectionMaterial
  Renderer reflectionRenderer
  float maxDistance
  float fadeTime
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MorphCache
Наследуется от: FacepunchBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ObjectMotionVectorFix
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PostOpaqueDepth
Наследуется от: MonoBehaviour
Поля:
  RenderTexture postOpaqueDepth
Свойства:
  RenderTexture PostOpaque
Методы:
  RenderTexture get_PostOpaque()
  void .ctor()
--------------------------------------------------
Класс: QuadDecal
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReflectionProbeEx
Наследуется от: MonoBehaviour
Поля:
  ReflectionProbeRefreshMode refreshMode
  bool timeSlicing
  int resolution
  bool hdr
  float shadowDistance
  ReflectionProbeClearFlags clearFlags
  Color background
  float nearClip
  float farClip
  Transform attachToTarget
  Light directionalLight
  float textureMipBias
  bool highPrecision
  bool enableShadows
  ConvolutionQuality convolutionQuality
  List`1<RenderListEntry> staticRenderList
  Cubemap reflectionCubemap
  float reflectionIntensity
  Mesh blitMesh
  Mesh skyboxMesh
  Single[] octaVerts
  CubemapFaceMatrices[] cubemapFaceMatrices
  CubemapFaceMatrices[] cubemapFaceMatricesD3D11
  CubemapFaceMatrices[] shadowCubemapFaceMatrices
  CubemapFaceMatrices[] platformCubemapFaceMatrices
  Int32[] tab32
Свойства:
Методы:
  void CreateMeshes()
  void DestroyMeshes()
  Mesh CreateBlitMesh()
  CubemapSkyboxVertex SubDivVert(CubemapSkyboxVertex v1, CubemapSkyboxVertex v2)
  void Subdivide(List`1<CubemapSkyboxVertex> destArray, CubemapSkyboxVertex v1, CubemapSkyboxVertex v2, CubemapSkyboxVertex v3)
  void SubdivideYOnly(List`1<CubemapSkyboxVertex> destArray, CubemapSkyboxVertex v1, CubemapSkyboxVertex v2, CubemapSkyboxVertex v3)
  Mesh CreateSkyboxMesh()
  bool InitializeCubemapFaceMatrices()
  int FastLog2(int value)
  UInt32 ReverseBits(UInt32 bits)
  void SafeCreateMaterial(Material& mat, Shader shader)
  void SafeCreateMaterial(Material& mat, string shaderName)
  void SafeCreateCubeRT(RenderTexture& rt, string name, int size, int depth, bool mips, TextureDimension dim, FilterMode filter, RenderTextureFormat format, RenderTextureReadWrite readWrite)
  void SafeCreateCB(CommandBuffer& cb, string name)
  void SafeDestroy(T& obj)
  void SafeDispose(T& obj)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CommandBufferEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void BlitArray(CommandBuffer cb, Mesh blitMesh, RenderTargetIdentifier source, Material mat, int slice, int pass)
  void BlitArray(CommandBuffer cb, Mesh blitMesh, RenderTargetIdentifier source, Texture target, Material mat, int slice, int pass)
  void BlitArrayMip(CommandBuffer cb, Mesh blitMesh, Texture source, int sourceMip, int sourceSlice, Texture target, int targetMip, int targetSlice, Material mat, int pass)
  void BlitMip(CommandBuffer cb, Mesh blitMesh, Texture source, Texture target, int mip, int slice, Material mat, int pass)
--------------------------------------------------
Класс: ClothWindModify
Наследуется от: FacepunchBehaviour
Поля:
  Cloth cloth
  Vector3 initialClothForce
  Vector3 worldWindScale
  Vector3 turbulenceScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WindZoneEx
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WindZoneExManager
Наследуется от: MonoBehaviour
Поля:
  float maxAccumMain
  float maxAccumTurbulence
  float globalMainScale
  float globalTurbulenceScale
  Transform testPosition
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RgbColor
Наследуется от: Enum
Поля:
  int value__
  RgbColor Default
  RgbColor BuildingPrivilege
  RgbColor Cold
  RgbColor Hot
  RgbColor Hurt
  RgbColor Healed
  RgbColor Irradiated
  RgbColor Comforted
Свойства:
Методы:
--------------------------------------------------
Класс: RgbEffects
Наследуется от: SingletonComponent`1<RgbEffects>
Поля:
  bool Enabled
  Vector3 ColorCorrection_SteelSeries
  Vector3 ColorCorrection_Razer
  float Brightness
  Color defaultColor
  Color buildingPrivilegeColor
  Color coldColor
  Color hotColor
  Color hurtColor
  Color healedColor
  Color irradiatedColor
  Color comfortedColor
Свойства:
Методы:
  void ConVar_Static(Arg args)
  void ConVar_Pulse(Arg args)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RustPlatformHooks
Наследуется от: object
Поля:
  RustPlatformHooks Instance
Свойства:
  UInt32 SteamAppId
  Nullable`1<ServerParameters> ServerParameters
Методы:
  UInt32 get_SteamAppId()
  void Abort()
  void OnItemDefinitionsChanged()
  Nullable`1<ServerParameters> get_ServerParameters()
  void AuthSessionValidated(ulong userId, ulong ownerUserId, AuthResponse response, string rawResponse)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SendMessageToEntityOnAnimationFinish
Наследуется от: StateMachineBehaviour
Поля:
  string messageToSendToEntity
  float repeatRate
  float lastMessageSent
Свойства:
Методы:
  void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: AntiHackType
Наследуется от: Enum
Поля:
  int value__
  AntiHackType None
  AntiHackType NoClip
  AntiHackType SpeedHack
  AntiHackType FlyHack
  AntiHackType ProjectileHack
  AntiHackType MeleeHack
  AntiHackType EyeHack
  AntiHackType AttackHack
  AntiHackType ReloadHack
  AntiHackType CooldownHack
  AntiHackType InsideTerrain
  AntiHackType InsideGeometry
  AntiHackType EffectHack
Свойства:
Методы:
--------------------------------------------------
Класс: AntiHack
Наследуется от: object
Поля:
  int movement_mask
  int vehicle_mask
  int grounded_mask
  int player_mask
  Collider[] buffer
  Dictionary`2<ulong, int> kicks
  Dictionary`2<ulong, int> bans
  float LOG_GROUP_SECONDS
  Queue`1<GroupedLog> groupedLogs
  RaycastHit isInsideRayHit
Свойства:
Методы:
  bool TestNoClipping(Vector3 oldPos, Vector3 newPos, float radius, float backtracking, bool sphereCast, Collider& collider, bool vehicleLayer, BaseEntity ignoreEntity)
  void Cycle()
  void ResetTimer(BasePlayer ply)
  bool ShouldIgnore(BasePlayer ply)
  bool ValidateMove(BasePlayer ply, TickInterpolator ticks, float deltaTime)
  void ValidateEyeHistory(BasePlayer ply)
  bool IsInsideTerrain(BasePlayer ply)
  bool TestInsideTerrain(Vector3 pos)
  bool IsInsideMesh(Vector3 pos)
  bool IsNoClipping(BasePlayer ply, TickInterpolator ticks, float deltaTime, Collider& collider)
  bool IsSpeeding(BasePlayer ply, TickInterpolator ticks, float deltaTime)
  bool IsFlying(BasePlayer ply, TickInterpolator ticks, float deltaTime)
  bool TestFlying(BasePlayer ply, Vector3 oldPos, Vector3 newPos, bool verifyGrounded)
  bool TestIsBuildingInsideSomething(Target target, Vector3 deployPos)
  void NoteAdminHack(BasePlayer ply)
  void FadeViolations(BasePlayer ply, float deltaTime)
  void EnforceViolations(BasePlayer ply)
  void Log(BasePlayer ply, AntiHackType type, string message)
  void LogToConsoleBatched(BasePlayer ply, AntiHackType type, string message, float maxDistance)
  void LogToConsole(BasePlayer ply, AntiHackType type, string message)
  void LogToConsole(string plyName, AntiHackType type, string message, Vector3 pos)
  void LogToEAC(BasePlayer ply, AntiHackType type, string message)
  void AddViolation(BasePlayer ply, AntiHackType type, float amount)
  void Kick(BasePlayer ply, string reason)
  void Ban(BasePlayer ply, string reason)
  void AddRecord(BasePlayer ply, Dictionary`2<ulong, int> records)
  int GetKickRecord(BasePlayer ply)
  int GetBanRecord(BasePlayer ply)
  int GetRecord(BasePlayer ply, Dictionary`2<ulong, int> records)
  void .cctor()
--------------------------------------------------
Класс: Auth_CentralizedBans
Наследуется от: object
Поля:
  BanPayload payloadData
Свойства:
Методы:
  IEnumerator Run(Connection connection)
  bool CheckIfPlayerBanned(ulong steamId, Connection connection, UnityWebRequest request)
  void .cctor()
  void <CheckIfPlayerBanned>g__Reject|2_0(string reason, <>c__DisplayClass2_0& )
--------------------------------------------------
Класс: Auth_EAC
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerator Run(Connection connection)
--------------------------------------------------
Класс: Auth_Nexus
Наследуется от: object
Поля:
Свойства:
Методы:
  IEnumerator Run(Connection connection)
--------------------------------------------------
Класс: Auth_Steam
Наследуется от: object
Поля:
  List`1<Connection> waitingList
Свойства:
Методы:
  IEnumerator Run(Connection connection)
  bool ValidateConnecting(ulong steamid, ulong ownerSteamID, AuthResponse response)
  void .cctor()
--------------------------------------------------
Класс: ConnectionAuth
Наследуется от: MonoBehaviour
Поля:
  List`1<Connection> m_AuthConnection
Свойства:
Методы:
  bool IsAuthed(ulong iSteamID)
  void Reject(Connection connection, string strReason, string strReasonPrivate)
  void OnDisconnect(Connection connection)
  void Approve(Connection connection)
  void OnNewConnection(Connection connection)
  IEnumerator AuthorisationRoutine(Connection connection)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConnectionQueue
Наследуется от: object
Поля:
  List`1<Connection> queue
  List`1<Connection> joining
  float nextMessageTime
Свойства:
  int Queued
  int Joining
Методы:
  int get_Queued()
  int get_Joining()
  void SkipQueue(ulong userid)
  void Join(Connection connection)
  void Cycle(int availableSlots)
  void SendMessages()
  void SendMessage(Connection c, int position)
  void RemoveConnection(Connection connection)
  void JoinGame(Connection connection)
  void JoinedGame(Connection connection)
  bool CanJumpQueue(Connection connection)
  bool IsQueued(ulong userid)
  bool IsJoining(ulong userid)
  void .ctor()
--------------------------------------------------
Класс: EACServer
Наследуется от: object
Поля:
  AntiCheatServerInterface Interface
  ReportsInterface Reports
  ConcurrentDictionary`2<UInt32, Connection> client2connection
  ConcurrentDictionary`2<Connection, UInt32> connection2client
  ConcurrentDictionary`2<Connection, AntiCheatCommonClientAuthStatus> connection2status
  UInt32 clientHandleCounter
Свойства:
  bool CanEnableGameplayData
  bool CanSendAnalytics
  bool CanSendReports
Методы:
  bool get_CanEnableGameplayData()
  bool get_CanSendAnalytics()
  bool get_CanSendReports()
  IntPtr GenerateCompatibilityClient()
  void Encrypt(Connection connection, ArraySegment`1<byte> src, ArraySegment`1& dst)
  void Decrypt(Connection connection, ArraySegment`1<byte> src, ArraySegment`1& dst)
  IntPtr GetClient(Connection connection)
  Connection GetConnection(IntPtr client)
  bool IsAuthenticated(Connection connection)
  void OnAuthenticatedLocal(Connection connection)
  void OnAuthenticatedRemote(Connection connection)
  void OnVerifyIdToken(VerifyIdTokenCallbackInfo& data)
  void OnClientAuthStatusChanged(OnClientAuthStatusChangedCallbackInfo& data)
  void OnClientActionRequired(OnClientActionRequiredCallbackInfo& data)
  void SendToClient(OnMessageToClientCallbackInfo& data)
  void DoStartup()
  void DoUpdate()
  void DoShutdown()
  void OnLeaveGame(Connection connection)
  void OnJoinGame(Connection connection)
  void OnStartLoading(Connection connection)
  void OnFinishLoading(Connection connection)
  void OnMessageReceived(Message message)
  void LogPlayerUseWeapon(BasePlayer player, BaseProjectile weapon)
  void LogPlayerSpawn(BasePlayer player)
  void LogPlayerDespawn(BasePlayer player)
  void LogPlayerTakeDamage(BasePlayer player, HitInfo info)
  void LogPlayerTick(BasePlayer player)
  void LogPlayerRevive(BasePlayer source, BasePlayer target)
  void SendPlayerBehaviorReport(BasePlayer reporter, PlayerReportsCategory reportCategory, string reportedID, string reportText)
  void SendPlayerBehaviorReport(PlayerReportsCategory reportCategory, string reportedID, string reportText)
  void .cctor()
--------------------------------------------------
Класс: NexusClanBackend
Наследуется от: object
Поля:
  Dictionary`2<long, NexusClanWrapper> _clanWrappers
  IClanChangeSink _changeSink
  NexusClanChatCollector _chatCollector
  NexusClanEventHandler _eventHandler
  NexusZoneClient _client
Свойства:
Методы:
  void .ctor()
  ValueTask Initialize(IClanChangeSink changeSink)
  void Dispose()
  ValueTask`1<ClanValueResult`1<IClan>> Get(long clanId)
  bool TryGet(long clanId, IClan& clan)
  ValueTask`1<ClanValueResult`1<IClan>> GetByMember(ulong steamId)
  ValueTask`1<ClanValueResult`1<IClan>> Create(ulong leaderSteamId, string name)
  ValueTask`1<ClanValueResult`1<List`1<ClanInvitation>>> ListInvitations(ulong steamId)
  void HandleClanChatBatch(ClanChatBatchRequest request)
  IEnumerator BroadcastClanChatBatches()
  void UpdateWrapper(long clanId)
  void RemoveWrapper(long clanId)
  NexusClanWrapper Wrap(NexusClan clan)
  void <BroadcastClanChatBatches>g__SendClanChatBatch|14_0(List`1<Message> messages)
--------------------------------------------------
Класс: NexusClanChatCollector
Наследуется от: object
Поля:
  IClanChangeSink _external
  List`1<Message> _messagesBuffer
Свойства:
Методы:
  void .ctor(IClanChangeSink external)
  void TakeMessages(List`1<Message> messages)
  void OnClanChatMessage(long clanId, ClanChatEntry entry)
--------------------------------------------------
Класс: NexusClanEventHandler
Наследуется от: object
Поля:
  NexusClanBackend _backend
  IClanChangeSink _changeSink
Свойства:
Методы:
  void .ctor(NexusClanBackend backend, IClanChangeSink changeSink)
  void OnDisbanded(ClanDisbandedEvent& args)
  void OnInvitation(ClanInvitedEvent& args)
  void OnJoined(ClanJoinedEvent& args)
  void OnKicked(ClanKickedEvent& args)
  void OnChanged(ClanChangedEvent& args)
  void OnUnload(Int64& clanId)
  void Facepunch.Nexus.INexusClanEventListener.OnDisbanded(ClanDisbandedEvent& modreq(System.Runtime.InteropServices.InAttribute) args)
  void Facepunch.Nexus.INexusClanEventListener.OnInvitation(ClanInvitedEvent& modreq(System.Runtime.InteropServices.InAttribute) args)
  void Facepunch.Nexus.INexusClanEventListener.OnJoined(ClanJoinedEvent& modreq(System.Runtime.InteropServices.InAttribute) args)
  void Facepunch.Nexus.INexusClanEventListener.OnKicked(ClanKickedEvent& modreq(System.Runtime.InteropServices.InAttribute) args)
  void Facepunch.Nexus.INexusClanEventListener.OnChanged(ClanChangedEvent& modreq(System.Runtime.InteropServices.InAttribute) args)
  void Facepunch.Nexus.INexusClanEventListener.OnUnload(Int64& modreq(System.Runtime.InteropServices.InAttribute) clanId)
--------------------------------------------------
Класс: NexusClanUtil
Наследуется от: object
Поля:
  string MotdVariable
  string MotdAuthorVariable
  string LogoVariable
  string ColorVariable
  string CanSetLogoVariable
  string CanSetMotdVariable
  string CanSetPlayerNotesVariable
  string PlayerNoteVariable
  List`1<VariableUpdate> DefaultLeaderVariables
  Memoized`2<string, ulong> SteamIdToPlayerId
Свойства:
Методы:
  string GetPlayerId(ulong steamId)
  ulong GetSteamId(string playerId)
  void GetMotd(NexusClan clan, String& motd, Int64& motdTimestamp, UInt64& motdAuthor)
  void GetBanner(NexusClan clan, Byte[]& logo, Color32& color)
  ClanRole ToClanRole(NexusClanRole role)
  ClanMember ToClanMember(NexusClanMember member)
  ClanInvite ToClanInvite(ClanInvite invite)
  ClanResult ToClanResult(NexusClanResultCode result)
  ClanRoleParameters ToRoleParameters(ClanRole role)
  VariableUpdate FlagVariable(string key, bool value)
  bool ParseFlag(Variable variable, bool defaultValue)
  void .cctor()
--------------------------------------------------
Класс: NexusClanWrapper
Наследуется от: object
Поля:
  int MaxChatScrollback
  string <Motd>k__BackingField
  long <MotdTimestamp>k__BackingField
  ulong <MotdAuthor>k__BackingField
  Byte[] <Logo>k__BackingField
  Color32 <Color>k__BackingField
  int <MaxMemberCount>k__BackingField
  NexusClan Internal
  NexusClanChatCollector _chatCollector
  List`1<ClanRole> _roles
  List`1<ClanMember> _members
  List`1<ClanInvite> _invites
  List`1<ClanChatEntry> _chatHistory
Свойства:
  long ClanId
  string Name
  long Created
  ulong Creator
  string Motd
  long MotdTimestamp
  ulong MotdAuthor
  Byte[] Logo
  Color32 Color
  IReadOnlyList`1<ClanRole> Roles
  IReadOnlyList`1<ClanMember> Members
  int MaxMemberCount
  IReadOnlyList`1<ClanInvite> Invites
Методы:
  long get_ClanId()
  string get_Name()
  long get_Created()
  ulong get_Creator()
  string get_Motd()
  void set_Motd(string value)
  long get_MotdTimestamp()
  void set_MotdTimestamp(long value)
  ulong get_MotdAuthor()
  void set_MotdAuthor(ulong value)
  Byte[] get_Logo()
  void set_Logo(Byte[] value)
  Color32 get_Color()
  void set_Color(Color32 value)
  IReadOnlyList`1<ClanRole> get_Roles()
  IReadOnlyList`1<ClanMember> get_Members()
  int get_MaxMemberCount()
  void set_MaxMemberCount(int value)
  IReadOnlyList`1<ClanInvite> get_Invites()
  void .ctor(NexusClan clan, NexusClanChatCollector chatCollector)
  void UpdateValuesInternal()
  ValueTask`1<ClanValueResult`1<ClanLogs>> GetLogs(int limit, ulong bySteamId)
  ValueTask`1<ClanResult> UpdateLastSeen(ulong steamId)
  ValueTask`1<ClanResult> SetMotd(string newMotd, ulong bySteamId)
  ValueTask`1<ClanResult> SetLogo(Byte[] newLogo, ulong bySteamId)
  ValueTask`1<ClanResult> SetColor(Color32 newColor, ulong bySteamId)
  ValueTask`1<ClanResult> Invite(ulong steamId, ulong bySteamId)
  ValueTask`1<ClanResult> CancelInvite(ulong steamId, ulong bySteamId)
  ValueTask`1<ClanResult> AcceptInvite(ulong steamId)
  ValueTask`1<ClanResult> Kick(ulong steamId, ulong bySteamId)
  ValueTask`1<ClanResult> SetPlayerRole(ulong steamId, int newRoleId, ulong bySteamId)
  ValueTask`1<ClanResult> SetPlayerNotes(ulong steamId, string notes, ulong bySteamId)
  ValueTask`1<ClanResult> CreateRole(ClanRole role, ulong bySteamId)
  ValueTask`1<ClanResult> UpdateRole(ClanRole role, ulong bySteamId)
  ValueTask`1<ClanResult> SwapRoleRanks(int roleIdA, int roleIdB, ulong bySteamId)
  ValueTask`1<ClanResult> DeleteRole(int roleId, ulong bySteamId)
  ValueTask`1<ClanResult> Disband(ulong bySteamId)
  ValueTask`1<ClanValueResult`1<ClanChatScrollback>> GetChatScrollback()
  ValueTask`1<ClanResult> SendChatMessage(string name, string message, ulong bySteamId)
  void AddScrollback(ClanChatEntry& entry)
  bool CheckRole(ulong steamId, Func`2<ClanRole, bool> roleTest)
--------------------------------------------------
Класс: BasicZoneController
Наследуется от: ZoneController
Поля:
Свойства:
Методы:
  void .ctor(NexusZoneClient zoneClient)
  string ChooseSpawnZone(ulong steamId, bool isAlreadyAssignedToThisZone)
  void GetStarterZones(List`1<NexusZoneDetails> zones)
--------------------------------------------------
Класс: NexusCleanupOnShutdown
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: NexusDB
Наследуется от: Database
Поля:
  int <JournalCount>k__BackingField
  Nullable`1<DateTimeOffset> <OldestJournal>k__BackingField
  int <TransferredCount>k__BackingField
Свойства:
  int JournalCount
  Nullable`1<DateTimeOffset> OldestJournal
  int TransferredCount
Методы:
  int get_JournalCount()
  void set_JournalCount(int value)
  Nullable`1<DateTimeOffset> get_OldestJournal()
  void set_OldestJournal(Nullable`1<DateTimeOffset> value)
  int get_TransferredCount()
  void set_TransferredCount(int value)
  void Initialize()
  bool Seen(Guid id)
  bool SeenJournaled(Guid id, Byte[] data)
  List`1<ValueTuple`3<Guid, long, Byte[]>> ReadJournal()
  ValueTuple`3<Guid, long, Byte[]> ReadJournalRow(IntPtr stmHandle)
  void ClearJournal()
  void MarkTransferred(HashSet`1<NetworkableId> entityIds)
  List`1<NetworkableId> ReadTransferred()
  void ClearTransferred()
  void .ctor()
--------------------------------------------------
Класс: NexusExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector2 Position(ZoneDetails zone)
  Vector2 Position(NexusZoneDetails zone)
--------------------------------------------------
Класс: NexusRpcResult
Наследуется от: object
Поля:
  Dictionary`2<string, Response> Responses
Свойства:
Методы:
  void .ctor()
  void Dispose()
  void EnterPool()
  void LeavePool()
--------------------------------------------------
Класс: NexusServer
Наследуется от: object
Поля:
  bool _isRefreshingCompanion
  RealTimeSince _lastCompanionRefresh
  Memoized`2<string, ulong> SteamIdToString
  MemoryStream WriterStream
  ByteArrayStream ReaderStream
  NexusDB _database
  NexusZoneClient <ZoneClient>k__BackingField
  bool <Started>k__BackingField
  bool <FailedToStart>k__BackingField
  Dictionary`2<string, List`1<ValueTuple`2<string, FerryStatus>>> FerryEntries
  bool _updatingFerries
  int _cyclesWithoutFerry
  float _zoneContactRadius
  Dictionary`2<string, NexusIsland> _existingIslands
  int MapRenderVersion
  HashSet`1<ulong> PlayerManifest
  Dictionary`2<string, ZonePlayerManifest> ZonePlayerManifests
  RealTimeSince _lastPlayerManifestBroadcast
  bool _playerManifestDirty
  RealTimeSince _lastPlayerManifestRebuild
  Dictionary`2<Uuid, PendingCall> PendingCalls
  RealTimeSince _sinceLastRpcTimeoutCheck
  Dictionary`2<string, ServerStatus> ZoneStatuses
  bool _isRefreshingZoneStatus
  RealTimeSince _lastZoneStatusRefresh
  Nullable`1<DateTimeOffset> _lastUnsavedTransfer
  string CopyFromKey
Свойства:
  NexusZoneClient ZoneClient
  bool Started
  bool FailedToStart
  Nullable`1<int> NexusId
  string ZoneKey
  Nullable`1<long> LastReset
  List`1<NexusZoneDetails> Zones
  bool NeedsJournalFlush
  int RpcResponseTtl
  bool NeedTransferFlush
Методы:
  void RefreshCompanionVariables()
  NexusZoneClient get_ZoneClient()
  void set_ZoneClient(NexusZoneClient value)
  bool get_Started()
  void set_Started(bool value)
  bool get_FailedToStart()
  void set_FailedToStart(bool value)
  Nullable`1<int> get_NexusId()
  string get_ZoneKey()
  Nullable`1<long> get_LastReset()
  List`1<NexusZoneDetails> get_Zones()
  IEnumerator Initialize()
  void Shutdown()
  void Update()
  NexusZoneDetails FindZone(string zoneKey)
  Task`1<NexusLoginResult> Login(ulong steamId)
  void Logout(ulong steamId)
  bool TryGetPlayer(ulong steamId, NexusPlayer& player)
  Task AssignInitialZone(ulong steamId, string zoneKey)
  ZoneController BuildZoneController(string name)
  void PostGameSaved()
  void UpdateFerries()
  Task UpdateFerriesImpl()
  bool TryGetFerryStatus(string ownerZone, String& currentZone, FerryStatus& status)
  Task RetireFerry(string zone, NetworkableId entityId, long timestamp)
  Task UpdateFerrySchedule(string zone, NetworkableId entityId, long timestamp, List`1<string> schedule)
  bool TryParseFerrySchedule(string zone, string scheduleString, List`1& entries)
  void UpdateFerryStatuses(NexusRpcResult statusResponse)
  void UpdateIslands()
  bool TryGetIsland(string zoneKey, NexusIsland& island)
  bool TryGetIslandPosition(string zoneKey, Vector3& position)
  ValueTuple`2<Vector3, Quaternion> CalculateIslandTransform(NexusZoneDetails otherZone)
  Bounds GetWorldBounds()
  bool IsCloseTo(NexusZoneDetails otherZone)
  bool get_NeedsJournalFlush()
  void ReadIncomingMessages()
  void RestoreUnsavedState()
  void ReplayJournaledMessages()
  void DeleteTransferredEntities()
  bool RequiresJournaling(Packet packet)
  void UploadMapImage(bool force)
  void HandleMessage(Uuid id, Packet packet)
  Packet ReadPacket(Byte[] data)
  Task SendRequestImpl(Uuid id, Request request, string toZoneKey, Nullable`1<int> ttl)
  void SendResponseImpl(Response response, string toZoneKey, Nullable`1<int> ttl)
  Task SendPacket(Uuid id, Packet packet, string toZoneKey, Nullable`1<int> ttl)
  bool IsOnline(ulong userId)
  void AddZonePlayerManifest(string zoneKey, List`1<ulong> userIds)
  void UpdatePlayerManifest()
  void BroadcastPlayerManifest()
  void RebuildPlayerManifestIfDirty()
  void RemoveInvalidPlayerManifests()
  int get_RpcResponseTtl()
  Task`1<Response> ZoneRpc(string zone, Request request, float timeoutAfter)
  Task`1<NexusRpcResult> BroadcastRpc(Request request, float timeoutAfter)
  Task`1<NexusRpcResult> CallRpcImpl(string zone, Request request, float timeoutAfter, bool throwOnTimeout)
  void HandleRpcInvocation(NexusZoneDetails from, Uuid id, Request request)
  Response HandleRpcInvocationImpl(NexusZoneDetails from, Uuid id, Request request)
  void HandleRpcResponse(NexusZoneDetails from, Uuid id, Response response)
  void CheckForRpcTimeouts()
  void RefreshZoneStatus()
  bool TryGetZoneStatus(string zone, ServerStatus& status)
  void OnZoneStatusesRefreshed()
  bool get_NeedTransferFlush()
  Task TransferEntity(BaseEntity entity, string toZoneKey, string method)
  Task TransferEntityImpl(BaseEntity rootEntity, string toZoneKey, string method, string from, string to)
  void UnparentUnknown(BaseEntity entity, HashSet`1<NetworkableId> knownEntityIds)
  void BuildTransferRequest(BaseEntity rootEntity, string method, string from, string to, Request& request, List`1& networkables, List`1& players, List`1& playerIds)
  bool CanTransferEntity(BaseNetworkable networkable)
  BaseEntity FindRootEntity(BaseEntity startEntity)
  string GetWorldConfigString()
  JObject GetWorldConfigImpl(string zoneKey, List`1<string> stack)
  bool TryGetWorldConfigObject(string zoneKey, bool required, JObject& cfg, String& error)
  JObject MergeInto(JObject baseObject, JObject sourceObject)
  void .cctor()
  void <RefreshCompanionVariables>g__RefreshCompanionVariablesImpl|2_0()
  void <Initialize>g__RunConsoleConfig|27_2(Variable cfgVariable)
  void <UpdateFerryStatuses>g__AddFerryStatus|46_0(string currentZone, FerryStatus status)
  bool <HandleRpcInvocationImpl>g__Handle|90_10(Func`2<Request, TProto> protoSelector, INexusRequestHandler& requestHandler, <>c__DisplayClass90_0& )
  void <RefreshZoneStatus>g__RefreshZoneStatusImpl|96_0()
  bool <FindRootEntity>g__TryGetParent|107_0(BaseEntity entity, BaseEntity& parent)
--------------------------------------------------
Класс: ServerStatus
Наследуется от: ValueType
Поля:
  bool IsOnline
  RealTimeSince LastSeen
  int Players
  int MaxPlayers
  int QueuedPlayers
Свойства:
  bool IsFull
Методы:
  bool get_IsFull()
--------------------------------------------------
Класс: NexusServerLogger
Наследуется от: object
Поля:
  NexusServerLogger <Instance>k__BackingField
Свойства:
  NexusServerLogger Instance
Методы:
  NexusServerLogger get_Instance()
  void .ctor()
  void Log(NexusLogLevel level, string message, Exception exception)
  void .cctor()
--------------------------------------------------
Класс: NexusVariables
Наследуется от: object
Поля:
  string Blueprints
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: ZoneController
Наследуется от: object
Поля:
  ZoneController <Instance>k__BackingField
  NexusZoneClient ZoneClient
Свойства:
  ZoneController Instance
Методы:
  ZoneController get_Instance()
  void set_Instance(ZoneController value)
  void .ctor(NexusZoneClient zoneClient)
  string ChooseSpawnZone(ulong steamId, bool isAlreadyAssignedToThisZone)
  ValueTuple`3<Vector3, Quaternion, bool> ChooseTransferDestination(string sourceZone, string method, string from, string to, Vector3 position, Quaternion rotation)
  ValueTuple`3<Vector3, Quaternion, bool> ChooseConsoleTransferDestination(string sourceZone)
  ValueTuple`3<Vector3, Quaternion, bool> ChooseFerryTransferDestination(string sourceZone)
  ValueTuple`3<Vector3, Quaternion, bool> ChooseOceanTransferDestination(string sourceZone)
  ValueTuple`3<Vector3, Quaternion, bool> ChooseTransferFallbackDestination(string sourceZone)
  bool CanRespawnAcrossZones(BasePlayer player)
--------------------------------------------------
Класс: PlayerStateManager
Наследуется от: object
Поля:
  MruDictionary`2<ulong, PlayerState> _cache
  UserPersistance _persistence
Свойства:
Методы:
  void .ctor(UserPersistance persistence)
  PlayerState Get(ulong playerId)
  void Save(ulong playerId)
  void SaveState(ulong playerId, PlayerState state)
  void FreeOldState(ulong playerId, PlayerState state)
  void Reset(ulong playerId)
  void OnPlayerStateLoaded(PlayerState state)
--------------------------------------------------
Класс: ServerMgr
Наследуется от: SingletonComponent`1<ServerMgr>
Поля:
  string BYPASS_PROCEDURAL_SPAWN_PREF
  ConnectionAuth auth
  bool <runFrameUpdate>k__BackingField
  UserPersistance persistance
  PlayerStateManager playerStateManager
  QueueType aiTick
  List`1<ulong> bannedPlayerNotices
  string _AssemblyHash
  IEnumerator restartCoroutine
  ConnectionQueue connectionQueue
  TimeAverageValueLookup`1<Type> packetHistory
  TimeAverageValueLookup`1<UInt32> rpcHistory
Свойства:
  bool runFrameUpdate
  int AvailableSlots
  string AssemblyHash
  bool Restarting
Методы:
  bool get_runFrameUpdate()
  void set_runFrameUpdate(bool value)
  bool Initialize(bool loadSave, string saveFile, bool allowOutOfDateSaves, bool skipInitialSpawn)
  void OpenConnection()
  void CloseConnection()
  void OnDisable()
  void OnApplicationQuit()
  void CreateImportantEntities()
  void CreateImportantEntity(string prefabName)
  void StartSteamServer()
  void UpdateItemDefinitions()
  void OnValidateAuthTicketResponse(ulong SteamId, ulong OwnerId, AuthResponse Status)
  int get_AvailableSlots()
  void Update()
  void LateUpdate()
  void FixedUpdate()
  void DoTick()
  void DoHeartbeat()
  string get_AssemblyHash()
  BaseGameMode Gamemode()
  string GamemodeName()
  string GamemodeTitle()
  void UpdateServerInformation()
  void OnDisconnected(string strReason, Connection connection)
  void OnEnterVisibility(Connection connection, Group group)
  void OnLeaveVisibility(Connection connection, Group group)
  void SpawnMapEntities()
  SpawnPoint FindSpawnPoint(BasePlayer forPlayer)
  void JoinGame(Connection connection)
  bool get_Restarting()
  void Shutdown()
  IEnumerator ServerRestartWarning(string info, int iSeconds)
  void RestartServer(string strNotice, int iSeconds)
  void SendReplicatedVars(string filter)
  void SendReplicatedVars(Connection connection)
  void OnReplicatedVarChanged(string fullName, string value)
  void Log(Exception e)
  void OnNetworkMessage(Message packet)
  void ProcessUnhandledPacket(Message packet)
  void ReadDisconnectReason(Message packet)
  BasePlayer SpawnPlayerSleeping(Connection connection)
  BasePlayer SpawnNewPlayer(Connection connection)
  void ClientReady(Message packet)
  void OnRPCMessage(Message packet)
  void OnPlayerTick(Message packet)
  void OnPlayerVoice(Message packet)
  void OnGiveUserInformation(Message packet)
  void .ctor()
--------------------------------------------------
Класс: ServerPerformance
Наследуется от: BaseMonoBehaviour
Поля:
  ulong deaths
  ulong spawns
  ulong position_changes
  string fileName
  int lastFrame
Свойства:
Методы:
  void Start()
  void WriteLine()
  void DoReport()
  string WorkoutPrefabName(GameObject obj)
  void ComponentReport(string filename, string Title, Object[] objects)
  void .ctor()
--------------------------------------------------
Класс: ServerPlayers
Наследуется от: object
Поля:
  HashSet`1<ulong> OnlineUserIdSet
  int _currentFrame
Свойства:
Методы:
  bool IsOnline(ulong userId)
  void GetAll(List`1<ulong> userIds)
  void RebuildIfNecessary()
  void .cctor()
--------------------------------------------------
Класс: ServerUsers
Наследуется от: object
Поля:
  Dictionary`2<ulong, User> users
Свойства:
Методы:
  void Remove(ulong uid)
  void Set(ulong uid, UserGroup group, string username, string notes, long expiry)
  User Get(ulong uid)
  bool Is(ulong uid, UserGroup group)
  IEnumerable`1<User> GetAll(UserGroup group)
  void Clear()
  void Load()
  void Save()
  string BanListString(bool bHeader)
  string BanListStringEx()
  void .cctor()
--------------------------------------------------
Класс: TriggerHurtEx
Наследуется от: TriggerBase
Поля:
  float repeatRate
  List`1<DamageTypeEntry> damageOnEnter
  GameObjectRef effectOnEnter
  HurtType hurtTypeOnEnter
  List`1<DamageTypeEntry> damageOnTimer
  GameObjectRef effectOnTimer
  HurtType hurtTypeOnTimer
  List`1<DamageTypeEntry> damageOnMove
  GameObjectRef effectOnMove
  HurtType hurtTypeOnMove
  List`1<DamageTypeEntry> damageOnLeave
  GameObjectRef effectOnLeave
  HurtType hurtTypeOnLeave
  bool damageEnabled
  Dictionary`2<BaseEntity, EntityTriggerInfo> entityInfo
  List`1<BaseEntity> entityAddList
  List`1<BaseEntity> entityLeaveList
Свойства:
Методы:
  GameObject InterestedInObject(GameObject obj)
  void DoDamage(BaseEntity ent, HurtType type, List`1<DamageTypeEntry> damage, GameObjectRef effect, float multiply)
  void OnEntityEnter(BaseEntity ent)
  void OnEntityLeave(BaseEntity ent)
  void OnObjects()
  void OnEmpty()
  void OnTick()
  void ProcessQueues()
  void .ctor()
--------------------------------------------------
Класс: UserPersistance
Наследуется от: object
Поля:
  Database blueprints
  Database deaths
  Database identities
  Database tokens
  Database playerState
  Dictionary`2<ulong, string> nameCache
  Dictionary`2<ulong, string> wipeIdCache
  MruDictionary`2<ulong, ValueTuple`2<int, bool>> tokenCache
Свойства:
Методы:
  void .ctor(string strFolder)
  void Dispose()
  PersistantPlayer GetPlayerInfo(ulong playerID)
  PersistantPlayer FetchFromDatabase(ulong playerID)
  void SetPlayerInfo(ulong playerID, PersistantPlayer info)
  void AddLifeStory(ulong playerID, PlayerLifeStory lifeStory)
  PlayerLifeStory GetLastLifeStory(ulong playerID)
  string GetPlayerName(ulong playerID)
  void SetPlayerName(ulong playerID, string name)
  int GetOrGenerateAppToken(ulong playerID, Boolean& locked)
  void RegenerateAppToken(ulong playerID)
  int GenerateAppToken()
  bool SetAppTokenLocked(ulong playerID, bool locked)
  Byte[] GetPlayerState(ulong playerID)
  void SetPlayerState(ulong playerID, Byte[] state)
  string GetUserWipeId(ulong playerID)
  void ResetPlayerState(ulong playerID)
--------------------------------------------------
Класс: AssetNameCache
Наследуется от: object
Поля:
  Dictionary`2<Object, string> mixed
  Dictionary`2<Object, string> lower
  Dictionary`2<Object, string> upper
Свойства:
Методы:
  string LookupName(Object obj)
  string LookupNameLower(Object obj)
  string LookupNameUpper(Object obj)
  string GetName(PhysicMaterial mat)
  string GetNameLower(PhysicMaterial mat)
  string GetNameUpper(PhysicMaterial mat)
  string GetName(Material mat)
  string GetNameLower(Material mat)
  string GetNameUpper(Material mat)
  void .cctor()
--------------------------------------------------
Класс: BuildingGrade
Наследуется от: ScriptableObject
Поля:
  Enum type
  ulong skin
  bool enabledInStandalone
  float baseHealth
  List`1<ItemAmount> baseCost
  PhysicMaterial physicMaterial
  ProtectionProperties damageProtecton
  bool supportsColourChange
  Option upgradeMenu
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FileStorage
Наследуется от: object
Поля:
  FileDatabase db
  CRC32 crc
  MruDictionary`2<UInt32, CacheData> _cache
  FileStorage server
Свойства:
Методы:
  void .ctor(string name, bool server)
  void Finalize()
  void Dispose()
  UInt32 GetCRC(Byte[] data, Type type)
  UInt32 Store(Byte[] data, Type type, NetworkableId entityID, UInt32 numID)
  Byte[] Get(UInt32 crc, Type type, NetworkableId entityID, UInt32 numID)
  void Remove(UInt32 crc, Type type, NetworkableId entityID)
  void RemoveExact(UInt32 crc, Type type, NetworkableId entityID, UInt32 numid)
  void RemoveEntityNum(NetworkableId entityid, UInt32 numid)
  void RemoveAllByEntity(NetworkableId entityid)
  void ReassignEntityId(NetworkableId oldId, NetworkableId newId)
  IEnumerable`1<AssociatedFile> QueryAllByEntity(NetworkableId entityID)
  void .cctor()
--------------------------------------------------
Класс: GameManifest
Наследуется от: ScriptableObject
Поля:
  GameManifest loadedManifest
  Dictionary`2<string, string> guidToPath
  Dictionary`2<string, string> pathToGuid
  Dictionary`2<string, Object> guidToObject
  PooledString[] pooledStrings
  PrefabProperties[] prefabProperties
  EffectCategory[] effectCategories
  GuidPath[] guidPaths
  String[] entities
Свойства:
  GameManifest Current
Методы:
  GameManifest get_Current()
  void Load()
  void LoadAssets()
  Dictionary`2<string, String[]> LoadEffectDictionary()
  string GUIDToPath(string guid)
  Object GUIDToObject(string guid)
  void Invalidate(string path)
  string GetMetadataStatus()
  string GetAssetStatus()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HairDye
Наследуется от: object
Поля:
  Color capBaseColor
  Material sourceMaterial
  CopyPropertyMask copyProperties
  MaterialPropertyDesc[] transferableProps
  int _HairBaseColorUV1
  int _HairBaseColorUV2
  int _HairPackedMapUV1
  int _HairPackedMapUV2
Свойства:
Методы:
  void Apply(HairDyeCollection collection, MaterialPropertyBlock block)
  void ApplyCap(HairDyeCollection collection, HairType type, MaterialPropertyBlock block)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: HairDyeCollection
Наследуется от: ScriptableObject
Поля:
  Texture capMask
  bool applyCap
  HairDye[] Variations
Свойства:
Методы:
  HairDye Get(float seed)
  void .ctor()
--------------------------------------------------
Класс: HairSet
Наследуется от: ScriptableObject
Поля:
  MeshReplace[] MeshReplacements
Свойства:
Методы:
  void Process(PlayerModelHair playerModelHair, HairDyeCollection dyeCollection, HairDye dye, MaterialPropertyBlock block)
  void ProcessMorphs(GameObject obj, int blendShapeIndex)
  void .ctor()
--------------------------------------------------
Класс: HairType
Наследуется от: Enum
Поля:
  int value__
  HairType Head
  HairType Eyebrow
  HairType Facial
  HairType Armpit
  HairType Pubic
  HairType Count
Свойства:
Методы:
--------------------------------------------------
Класс: HairSetCollection
Наследуется от: ScriptableObject
Поля:
  HairSetEntry[] Head
  HairSetEntry[] Eyebrow
  HairSetEntry[] Facial
  HairSetEntry[] Armpit
  HairSetEntry[] Pubic
Свойства:
Методы:
  HairSetEntry[] GetListByType(HairType hairType)
  int GetIndex(HairSetEntry[] list, float typeNum)
  int GetIndex(HairType hairType, float typeNum)
  HairSetEntry Get(HairType hairType, float typeNum)
  void .ctor()
--------------------------------------------------
Класс: ItemSkin
Наследуется от: SteamInventoryItem
Поля:
  Skinnable Skinnable
  Material[] Materials
  ItemDefinition Redirect
  SteamInventoryItem UnlockedViaSteamItem
Свойства:
Методы:
  void ApplySkin(GameObject obj)
  bool HasUnlocked(ulong playerId)
  void .ctor()
--------------------------------------------------
Класс: ItemSkinDirectory
Наследуется от: ScriptableObject
Поля:
  ItemSkinDirectory _Instance
  Skin[] skins
Свойства:
  ItemSkinDirectory Instance
Методы:
  ItemSkinDirectory get_Instance()
  Skin[] ForItem(ItemDefinition item)
  Skin FindByInventoryDefinitionId(int id)
  void .ctor()
--------------------------------------------------
Класс: LootSpawn
Наследуется от: ScriptableObject
Поля:
  ItemAmountRanged[] items
  Entry[] subSpawn
Свойства:
Методы:
  ItemDefinition GetBlueprintBaseDef()
  void SpawnIntoContainer(ItemContainer container)
  void SubCategoryIntoContainer(ItemContainer container)
  void .ctor()
--------------------------------------------------
Класс: MapImageRenderer
Наследуется от: object
Поля:
  Vector4 StartColor
  Vector4 WaterColor
  Vector4 GravelColor
  Vector4 DirtColor
  Vector4 SandColor
  Vector4 GrassColor
  Vector4 ForestColor
  Vector4 RockColor
  Vector4 SnowColor
  Vector4 PebbleColor
  Vector4 OffShoreColor
  Vector3 SunDirection
  float SunPower
  float Brightness
  float Contrast
  float OceanWaterLevel
  Vector4 Half
Свойства:
Методы:
  Byte[] Render(Int32& imageWidth, Int32& imageHeight, Color& background, float scale, bool lossy, bool transparent, int oceanMargin)
  Byte[] EncodeToFile(int width, int height, Color[] pixels, bool lossy)
  Vector3 UnpackNormal(Vector4 value)
  void .cctor()
--------------------------------------------------
Класс: NameHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  string Get(ulong userId, string name, bool isClient, bool forceFriendly)
  string Get(IPlayerInfo playerInfo, bool isClient)
--------------------------------------------------
Класс: NexusUtil
Наследуется от: object
Поля:
  Char[] ScheduleSeparators
Свойства:
Методы:
  bool TryParseFerrySchedule(string zone, string scheduleString, String[]& entries)
  string ConnectionProtocol(NexusZoneDetails zone)
  bool IsStarterZone(ZoneDetails zone)
  bool IsStarterZone(NexusZoneDetails zone)
  bool IsStarterZone(VariableDictionary variables)
  bool TryGetString(VariableDictionary variables, string key, String& value)
  void .cctor()
--------------------------------------------------
Класс: PlayerInventoryProperties
Наследуется от: ScriptableObject
Поля:
  string niceName
  int order
  List`1<ItemAmountSkinned> belt
  List`1<ItemAmountSkinned> main
  List`1<ItemAmountSkinned> wear
  PlayerInventoryProperties giveBase
  PlayerInventoryProperties[] allInventories
Свойства:
Методы:
  void GiveToPlayer(BasePlayer player)
  PlayerInventoryProperties GetInventoryConfig(string name)
  void .ctor()
  void <GiveToPlayer>g__CreateItem|7_0(ItemAmountSkinned toCreate, ItemContainer destination, <>c__DisplayClass7_0& )
--------------------------------------------------
Класс: ProtectionProperties
Наследуется от: ScriptableObject
Поля:
  string comments
  float density
  Single[] amounts
Свойства:
Методы:
  void OnValidate()
  void Clear()
  void Add(float amount)
  void Add(DamageType index, float amount)
  void Add(ProtectionProperties other, float scale)
  void Add(List`1<Item> items, HitArea area)
  void Multiply(float multiplier)
  void Multiply(DamageType index, float multiplier)
  void Scale(DamageTypeList damageList, float ProtectionAmount)
  float Get(DamageType damageType)
  void .ctor()
--------------------------------------------------
Класс: Recipe
Наследуется от: ScriptableObject
Поля:
  ItemDefinition ProducedItem
  int ProducedItemCount
  bool CanQueueMultiple
  GameObjectRef SpawnedItem
  string SpawnedItemName
  string SpawnedItemDescription
  Sprite SpawnedItemIcon
  bool RequiresBlueprint
  RecipeIngredient[] Ingredients
  float MixingDuration
Свойства:
  string DisplayName
  string DisplayDescription
  Sprite DisplayIcon
Методы:
  string get_DisplayName()
  string get_DisplayDescription()
  Sprite get_DisplayIcon()
  bool ContainsItem(Item item)
  void .ctor()
--------------------------------------------------
Класс: RecipeDictionary
Наследуется от: object
Поля:
  Dictionary`2<UInt32, Dictionary`2<int, List`1<Recipe>>> recipeListsDict
Свойства:
Методы:
  void CacheRecipes(RecipeList recipeList)
  Recipe GetMatchingRecipeAndQuantity(RecipeList recipeList, List`1<Item> orderedIngredients, Int32& quantity)
  List`1<Recipe> GetRecipesByFirstIngredient(RecipeList recipeList, Item firstIngredient)
  bool ValidIngredientForARecipe(Item ingredient, RecipeList recipeList)
  void .cctor()
--------------------------------------------------
Класс: RecipeList
Наследуется от: BaseScriptableObject
Поля:
  Recipe[] Recipes
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RecoilProperties
Наследуется от: ScriptableObject
Поля:
  float recoilYawMin
  float recoilYawMax
  float recoilPitchMin
  float recoilPitchMax
  float timeToTakeMin
  float timeToTakeMax
  float ADSScale
  float movementPenalty
  float clampPitch
  AnimationCurve pitchCurve
  AnimationCurve yawCurve
  bool useCurves
  bool curvesAsScalar
  int shotsUntilMax
  float maxRecoilRadius
  bool overrideAimconeWithCurve
  float aimconeCurveScale
  AnimationCurve aimconeCurve
  AnimationCurve aimconeProbabilityCurve
  RecoilProperties newRecoilOverride
Свойства:
Методы:
  RecoilProperties GetRecoil()
  void .ctor()
--------------------------------------------------
Класс: SkinReplacement
Наследуется от: object
Поля:
  SkinType skinReplacementType
  GameObjectRef targetReplacement
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SkinSet
Наследуется от: ScriptableObject
Поля:
  string Label
  Gradient SkinColour
  HairSetCollection HairCollection
  GameObjectRef Head
  GameObjectRef Torso
  GameObjectRef Legs
  GameObjectRef Feet
  GameObjectRef Hands
  GameObjectRef CensoredTorso
  GameObjectRef CensoredLegs
  Material HeadMaterial
  Material BodyMaterial
  Material EyeMaterial
Свойства:
Методы:
  Color GetSkinColor(float skinNumber)
  void .ctor()
--------------------------------------------------
Класс: SkinSetCollection
Наследуется от: ScriptableObject
Поля:
  SkinSet[] Skins
Свойства:
Методы:
  int GetIndex(float MeshNumber)
  SkinSet Get(float MeshNumber)
  void .ctor()
--------------------------------------------------
Класс: SteamDLCItem
Наследуется от: ScriptableObject
Поля:
  int id
  Phrase dlcName
  int dlcAppID
  bool bypassLicenseCheck
Свойства:
Методы:
  bool HasLicense(ulong steamid)
  bool CanUse(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: SteamInventoryCategory
Наследуется от: ScriptableObject
Поля:
  bool canBeSoldToOtherUsers
  bool canBeTradedWithOtherUsers
  bool isCommodity
  Price price
  DropChance dropChance
  bool CanBeInCrates
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SteamInventoryItem
Наследуется от: ScriptableObject
Поля:
  int id
  Sprite icon
  Phrase displayName
  Phrase displayDescription
  Category category
  SubCategory subcategory
  SteamInventoryCategory steamCategory
  bool isLimitedTimeOffer
  bool PreventBreakingDown
  string itemname
  ulong workshopID
  SteamDLCItem DlcItem
  bool forceCraftableItemDesc
Свойства:
  ItemDefinition itemDefinition
Методы:
  ItemDefinition get_itemDefinition()
  bool HasUnlocked(ulong playerId)
  void .ctor()
--------------------------------------------------
Класс: StringFormatCache
Наследуется от: object
Поля:
  Dictionary`2<Key1, string> dict1
  Dictionary`2<Key2, string> dict2
  Dictionary`2<Key3, string> dict3
  Dictionary`2<Key4, string> dict4
Свойства:
Методы:
  string Get(string format, string value1)
  string Get(string format, string value1, string value2)
  string Get(string format, string value1, string value2, string value3)
  string Get(string format, string value1, string value2, string value3, string value4)
  void .cctor()
--------------------------------------------------
Класс: StringPool
Наследуется от: object
Поля:
  Dictionary`2<UInt32, string> toString
  Dictionary`2<string, UInt32> toNumber
  bool initialized
  UInt32 closest
Свойства:
Методы:
  void Init()
  string Get(UInt32 i)
  UInt32 Get(string str)
  UInt32 Add(string str)
  void .ctor()
--------------------------------------------------
Класс: Underwear
Наследуется от: ScriptableObject
Поля:
  string shortname
  Phrase displayName
  Sprite icon
  Sprite iconFemale
  SkinReplacement[] replacementsMale
  SkinReplacement[] replacementsFemale
  SteamInventoryItem steamItem
  SteamDLCItem steamDLC
  bool adminOnly
Свойства:
Методы:
  UInt32 GetID()
  bool HasMaleParts()
  bool HasFemaleParts()
  bool ValidForPlayer(BasePlayer player)
  bool IsFemale(BasePlayer player)
  bool Validate(Underwear underwear, BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: UnderwearManifest
Наследуется от: ScriptableObject
Поля:
  UnderwearManifest instance
  List`1<Underwear> underwears
Свойства:
Методы:
  UnderwearManifest Get()
  void PrintManifest()
  Underwear GetUnderwear(UInt32 id)
  void .ctor()
--------------------------------------------------
Класс: OpenSteamURL
Наследуется от: MonoBehaviour
Поля:
  bool openInSteam
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SteamClientWrapper
Наследуется от: SingletonComponent`1<SteamClientWrapper>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WorkshopSkin
Наследуется от: WorkshopSkinBase
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoTimelineController
Наследуется от: MonoBehaviour
Поля:
  PlayableDirector Director
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoTrackBehaviour
Наследуется от: PlayableBehaviour
Поля:
  string DemoName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TimelineConvarController
Наследуется от: PlayableAsset
Поля:
  string convarName
  TimelineConvarPlayable template
Свойства:
  ClipCaps clipCaps
Методы:
  Playable CreatePlayable(PlayableGraph graph, GameObject owner)
  ClipCaps get_clipCaps()
  void .ctor()
--------------------------------------------------
Класс: TimelineConvarPlayable
Наследуется от: PlayableBehaviour
Поля:
  string convar
  float ConvarValue
Свойства:
Методы:
  void ProcessFrame(Playable playable, FrameData info, object playerData)
  void .ctor()
--------------------------------------------------
Класс: Achievements
Наследуется от: SingletonComponent`1<Achievements>
Поля:
  SoundDefinition listComplete
  SoundDefinition itemComplete
  SoundDefinition popup
  Canvas Canvas
  Text titleText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AchievementTodo
Наследуется от: BaseMonoBehaviour
Поля:
  Text text
  RectTransform checkIcon
  RectTransform checkBox
  Color AliveColor
  Color DeadColor
  Color HighlightColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AdminUI
Наследуется от: MonoBehaviour
Поля:
  bool AllowInDemo
  GameObject TargetGameObject
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AddNewEventUIButton
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AddNewStateUIButton
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AggressionTimerEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmmoBelowEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AndEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AttackedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AttackTickEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseEventUI
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BaseStateUI
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BestTargetDetectedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChanceEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EnumListItemUI
Наследуется от: MonoBehaviour
Поля:
  object Value
  RustText TextValue
  EnumListUI list
Свойства:
Методы:
  void Init(object value, string valueText, EnumListUI list)
  void Clicked()
  void .ctor()
--------------------------------------------------
Класс: EnumListUI
Наследуется от: MonoBehaviour
Поля:
  Transform PrefabItem
  Transform Container
  Action`1<object> clickedAction
  CanvasScaler canvasScaler
Свойства:
Методы:
  void Awake()
  void Show(List`1<object> values, Action`1<object> clicked)
  void ItemClicked(object value)
  void Hide()
  void .ctor()
--------------------------------------------------
Класс: HealthBelowEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HungerAboveEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InAttackRangeEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InRangeEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InRangeOfHomeEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IsBlindedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IsMountedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IsVisibleEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MemorySlotUI
Наследуется от: MonoBehaviour
Поля:
  RustText Label
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OnPositionMemorySetEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PerformedAttackedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayerDetectedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ReloadEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: StateErrorEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: StateFinishedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TargetDetectedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TargetLostEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ThreatDetectedEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TimerEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TimeSinceThreatEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TirednessAboveEventUI
Наследуется от: BaseEventUI
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIAIDesignerScreen
Наследуется от: SingletonComponent`1<UIAIDesignerScreen>
Поля:
  GameObject SaveEntityButton
  GameObject SaveServerButton
  GameObject SaveDefaultButton
  RustInput InputAIDescription
  RustText TextDefaultStateContainer
  Transform PrefabAddNewStateButton
  Transform StateContainer
  Transform PrefabState
  EnumListUI PopupList
  EnumListUI EnumList
  NeedsCursor needsCursor
  CanvasGroup canvasGroup
  GameObject RootPanel
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AspectRatioGuide
Наследуется от: MonoBehaviour
Поля:
  AspectRatioFitter aspectRatioFitter
  RustText label
  float aspect
  float ratio
Свойства:
Методы:
  void Populate()
  void Awake()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: BlurManager
Наследуется от: MonoBehaviour
Поля:
  PostProcessVolume postProcessVolume
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Branding
Наследуется от: BaseMonoBehaviour
Поля:
  TextMeshProUGUI versionText
  CanvasGroup canvasGroup
  string oldChangeId
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChatEntry
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI text
  RawImage avatar
  CanvasGroup canvasGroup
  float lifeStarted
  ulong steamid
  Phrase LocalPhrase
  Phrase CardsPhrase
  Phrase TeamPhrase
  TmProEmojiRedirector EmojiRedirector
  Phrase ClanPhrase
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EmojiAutocomplete
Наследуется от: MonoBehaviour
Поля:
  RectTransform Parent
  GameObjectRef EmojiPrefab
  RectTransform Selector
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EmojiController
Наследуется от: ListComponent`1<EmojiController>
Поля:
  Image Image
  RawImage VideoImage
  RectTransform rectTransform
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EmojiControllerGallery
Наследуется от: EmojiController
Поля:
  RustText NameText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EmojiGallery
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef EmojiPrefab
  Transform Parent
  RustEmojiLibrary Library
  GameObject HighlightRoot
  RustText HighlightText
  EmojiController SkinIndicator
  EmojiController[] SkinToneGallery
  RustEmojiConfig SkinDemoConfig
  GameObject SkinPickerRoot
  TmProEmojiInputField TargetInputField
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RustEmojiConfig
Наследуется от: ScriptableObject
Поля:
  bool Hide
  EmojiSource Source
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RustEmojiLibrary
Наследуется от: BaseScriptableObject
Поля:
  NetworkableId EmojiStorageNetworkId
  RustEmojiConfig[] Configs
  RenderTextureDescriptor RenderTextureDesc
  int InitialPoolSize
  List`1<EmojiSource> all
  List`1<EmojiSource> conditionalAccessOnly
  GameObjectRef VideoPlayerRef
  RustEmojiLibrary _instance
  bool hasPrewarmed
  long MAX_FILE_SIZE_BYTES
  int MAX_TEX_SIZE_PIXELS
  Dictionary`2<string, ServerEmojiConfig> allServerEmoji
  bool hasLoaded
  List`1<string> cachedServerList
Свойства:
  RustEmojiLibrary Instance
Методы:
  RustEmojiLibrary get_Instance()
  void Prewarm()
  bool TryGetEmoji(string key, EmojiSource& er, Int32& skinVariantIndex, Int32& allIndex, bool serverSide)
  void FindAllServerEmoji()
  void ResetServerEmoji()
  bool CheckByteArray(long arrayLength)
  bool CheckByteArray(int arrayLength)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: EmojiResult
Наследуется от: ValueType
Поля:
  Sprite Sprite
  VideoClip Video
Свойства:
Методы:
--------------------------------------------------
Класс: TmProEmojiInputField
Наследуется от: TMP_InputField
Поля:
  TmProEmojiRedirector Redirector
  EmojiAutocomplete Autocomplete
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TmProEmojiRedirector
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef SpritePrefab
  float EmojiScale
  bool NonDestructiveChange
  bool CanTextHaveLegitimateRichText
Свойства:
Методы:
  void FindEmojiSubstitutions(string text, RustEmojiLibrary library, List`1<ValueTuple`2<EmojiSub, int>> foundSubs, bool richText, bool isServer, int messageLength)
  void .ctor()
--------------------------------------------------
Класс: UIChat
Наследуется от: PriorityListComponent`1<UIChat>
Поля:
  GameObject inputArea
  GameObject chatArea
  TMP_InputField inputField
  TextMeshProUGUI channelLabel
  ScrollRect scrollRect
  CanvasGroup canvasGroup
  GameObjectRef chatItemPlayer
  GameObject userPopup
  EmojiGallery emojiGallery
  bool isOpen
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIChatPopup
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI TextToggleMute
  TextMeshProUGUI TextToggleGlobalMute
  Button MuteButton
  Button ReportButton
  GameObject InviteToTeamButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChildrenFromScene
Наследуется от: MonoBehaviour
Поля:
  string SceneName
  bool StartChildrenDisabled
Свойства:
Методы:
  IEnumerator Start()
  void .ctor()
--------------------------------------------------
Класс: UIClanConfirmation
Наследуется от: BaseMonoBehaviour
Поля:
  RustText Text
  RustText TryAgainText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIClanCreator
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase CreateNameBlank
  Phrase CreateNameInvalid
  Phrase CreateAlreadyInClan
  Phrase CreateDuplicateName
  Phrase CreateFailure
  UIClans UiClans
  RustInput ClanName
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanInvitation
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase AcceptInvitationFailure
  Phrase AcceptInvitationFull
  Phrase DeclineInvitationFailure
  RustText ClanName
  RustText ClanMembers
  Image ClanBanner
  RawImage RecruiterAvatar
  RustText RecruiterName
  GameObject ActionsContainer
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanInvitations
Наследуется от: BaseMonoBehaviour
Поля:
  UIClans UiClans
  RectTransform InvitationList
  GameObjectRef InvitationPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIClanInvite
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase CancelInviteFailure
  RawImage Avatar
  RustText Name
  RustText Recruiter
  RustText Created
  RustButton CancelButton
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanInvites
Наследуется от: BaseMonoBehaviour
Поля:
  UIClans UiClans
  RectTransform InviteList
  GameObjectRef InvitePrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIClanLog
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase RefreshFailure
  UIClans UiClans
  RectTransform EntryList
  GameObjectRef EntryPrefab
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanLogEntry
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase FoundedEvent
  Phrase SetMotdEvent
  Phrase SetLogoEvent
  Phrase SetColorEvent
  Phrase InviteEvent
  Phrase LeaveEvent
  Phrase KickEvent
  Phrase AcceptInviteEvent
  Phrase DeclineInviteEvent
  Phrase CancelInviteEvent
  Phrase CreateRoleEvent
  Phrase UpdateRoleEvent
  Phrase UpdateRoleRenamedEvent
  Phrase SwapRolesEvent
  Phrase DeleteRoleEvent
  Phrase ChangeRoleEvent
  Phrase SetNotesEvent
  RustText Event
  RustText Time
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanMember
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase OnlinePhrase
  Image Highlight
  Color HighlightColor
  Color SelectedColor
  RawImage Avatar
  RustText Name
  RustText Rank
  RustText LastSeen
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanMemberDetails
Наследуется от: UIClanMember
Поля:
  Phrase KickConfirmation
  Phrase SaveNotesFailure
  Phrase ChangeRankCannotDemoteLeader
  Phrase ChangeRankFailure
  Phrase KickFailure
  UIClans UiClans
  RustInput NoteEditor
  RustButton SaveNoteButton
  GameObject ChangeRankSection
  Dropdown ChangeRankDropdown
  GameObject KickSection
  RustButton KickButton
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanMembers
Наследуется от: BaseMonoBehaviour
Поля:
  UIClans UiClans
  RectTransform MemberList
  GameObjectRef MemberPrefab
  UIClanMemberDetails MemberDetails
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIClanOverview
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase SetMotdFailure
  UIClans UiClans
  RawImage MotdAuthorAvatar
  RustText MotdAuthorName
  RustText MotdTime
  RustInput MotdInput
  RustButton MotdSaveButton
  RustButton MotdCancelButton
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanRank
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase MoveUpFailure
  Phrase MoveDownFailure
  Phrase DeleteRankFailure
  Phrase DeleteRankNotEmpty
  Memoized`2<string, int> IndexToString
  Image Highlight
  RustText IndexLabel
  RustText Name
  RustButton MoveUpButton
  RustButton MoveDownButton
  RustButton DeleteButton
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanRankCreator
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase CreateRankFailure
  Phrase CreateRankDuplicate
  Phrase CreateRankNameInvalid
  UIClans UiClans
  RustInput RankName
  RustButton Submit
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanRankEditor
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase SaveRankFailure
  Phrase SaveRankDuplicate
  UIClans UiClans
  RustInput NameEditor
  RustButton SetMotd
  RustButton SetLogo
  RustButton Invite
  RustButton Kick
  RustButton Promote
  RustButton Demote
  RustButton SetPlayerNotes
  RustButton AccessLogs
  RustButton CancelButton
  RustButton SubmitButton
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanRanks
Наследуется от: BaseMonoBehaviour
Поля:
  UIClans UiClans
  RectTransform RankContainer
  GameObjectRef RankPrefab
  UIClanRankCreator RankCreator
  RectTransform RankListing
  UIClanRankEditor RankEditor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIClans
Наследуется от: SingletonComponent`1<UIClans>
Поля:
  Phrase LeaveConfirmation
  Phrase GetInvitationsFailure
  Phrase GetClanFailure
  Phrase LeaveFailure
  Phrase LeaveNoOtherLeader
  CanvasGroup CanvasGroup
  UIEscapeCapture EscapeCapture
  NeedsCursor NeedsCursor
  NeedsKeyboard NeedsKeyboard
  GameObject ClanTableRequired
  GameObject EmptyState
  GameObject CreateState
  GameObject InvitesState
  GameObject MainState
  RustText ClanName
  Image ClanBanner
  RawImage ClanLogo
  RustText ClanMembers
  RustButton LeaveButton
  Texture2D DefaultLogo
  RustButton OverviewButton
  RustButton LogsButton
  RustButton SettingsButton
  RustButton CreatePrompt
  CanvasGroup LoadingIndicator
  UIClanConfirmation Confirmation
  UIClanConfirmation Error
  UIClanInvitations Invitations
  UIClanOverview Overview
  UIClanMembers Members
  UIClanInvites Invites
  UIClanRanks Ranks
  UIClanLog Logs
  UIClanSettings Settings
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIClanSettings
Наследуется от: BaseMonoBehaviour
Поля:
  Phrase SetLogoFailure
  Phrase SetColorFailure
  UIClans UiClans
  RustButton EditLogoButton
  GameObjectRef ChangeSignDialog
  MeshPaintableSource[] PaintableSources
  RectTransform ColorsContainer
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: IUIPlayerRefreshCallback
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: CompassMapMarker
Наследуется от: MonoBehaviour
Поля:
  Image MarkerImage
  Image MarkerImageOuter
  GameObject LeaderRoot
  RustText MarkerLabel
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CompassMissionMarker
Наследуется от: MonoBehaviour
Поля:
  Image Icon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConsoleUI
Наследуется от: SingletonComponent`1<ConsoleUI>
Поля:
  RustText text
  InputField outputField
  InputField inputField
  GameObject AutocompleteDropDown
  GameObject ItemTemplate
  Color errorColor
  Color warningColor
  Color inputColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ContextMenuUI
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: ConvarToggleChildren
Наследуется от: MonoBehaviour
Поля:
  string ConvarName
  string ConvarEnabled
  bool state
  Command Command
Свойства:
Методы:
  void Awake()
  void Update()
  void SetState(bool newState)
  void .ctor()
--------------------------------------------------
Класс: CopyText
Наследуется от: MonoBehaviour
Поля:
  RustText TargetText
Свойства:
Методы:
  void TriggerCopy()
  void .ctor()
--------------------------------------------------
Класс: Crosshair
Наследуется от: BaseMonoBehaviour
Поля:
  bool Enabled
  Image Image
  RectTransform reticleTransform
  CanvasGroup reticleAlpha
  RectTransform hitNotifyMarker
  CanvasGroup hitNotifyAlpha
  Crosshair instance
  float lastHitTime
  float crosshairAlpha
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CursorManager
Наследуется от: SingletonComponent`1<CursorManager>
Поля:
  int iHoldOpen
  int iPreviousOpen
  float lastTimeVisible
  float lastTimeInvisible
Свойства:
Методы:
  void Update()
  void SwitchToGame()
  void SwitchToUI()
  void HoldOpen(bool cursorVisible)
  bool WasVisible(float deltaTime)
  bool WasInvisible(float deltaTime)
  void .ctor()
--------------------------------------------------
Класс: NeedsCursor
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: NeedsMouseWheel
Наследуется от: ListComponent`1<NeedsMouseWheel>
Поля:
Свойства:
Методы:
  bool AnyActive()
  void .ctor()
--------------------------------------------------
Класс: DamageToggle
Наследуется от: MonoBehaviour
Поля:
  Toggle toggle
Свойства:
Методы:
  void Reset()
  void .ctor()
--------------------------------------------------
Класс: ContainerSourceLocalPlayer
Наследуется от: ItemContainerSource
Поля:
  Type type
Свойства:
Методы:
  ItemContainer GetItemContainer()
  void .ctor()
--------------------------------------------------
Класс: ContainerSourceLoot
Наследуется от: ItemContainerSource
Поля:
  int container
Свойства:
Методы:
  ItemContainer GetItemContainer()
  void .ctor()
--------------------------------------------------
Класс: ContainerSourceSelectedItem
Наследуется от: ItemContainerSource
Поля:
Свойства:
Методы:
  ItemContainer GetItemContainer()
  void .ctor()
--------------------------------------------------
Класс: ItemContainerSource
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  ItemContainer GetItemContainer()
  void .ctor()
--------------------------------------------------
Класс: ButtonIcon
Наследуется от: RustButton
Поля:
  Image Image
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DebugCameraInfoReadout
Наследуется от: SingletonComponent`1<DebugCameraInfoReadout>
Поля:
  RustText ReadoutText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoPlaybackUI
Наследуется от: SingletonComponent`1<DemoPlaybackUI>
Поля:
  GameObject Root
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoPlaybackWidget
Наследуется от: MonoBehaviour
Поля:
  RustSlider DemoProgress
  RustText DemoName
  RustText DemoDuration
  RustText DemoCurrentTime
  GameObject PausedRoot
  GameObject PlayingRoot
  RectTransform DemoPlaybackHandle
  RectTransform ShotPlaybackWindow
  RustButton LoopButton
  GameObject ShotButtonRoot
  RustText ShotNameText
  GameObject ShotNameRoot
  RectTransform ShotRecordWindow
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoRootFade
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup Canvas
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotButton
Наследуется от: RustButton
Поля:
  bool FireEventOnClicked
Свойства:
Методы:
  void OnPointerDown(PointerEventData eventData)
  void OnPointerUp(PointerEventData eventData)
  void OnPointerClick(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: DemoShotEntry
Наследуется от: MonoBehaviour
Поля:
  RustButton PlayButton
  Sprite DragSprite
  RustInput RenameInput
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotListFolderWidget
Наследуется от: MonoBehaviour
Поля:
  RustButton FolderName
  Transform ChildRoot
  GameObject UpArrow
  GameObject DownArrow
  RustText CountText
  GameObject OpenRoot
  GameObject ModifyRoot
  RustInput FolderRenameInput
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotListRootFolder
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotListWidget
Наследуется от: SingletonComponent`1<DemoShotListWidget>
Поля:
  GameObjectRef ShotListEntry
  GameObjectRef FolderEntry
  Transform ShotListParent
  RustInput FolderNameInput
  GameObject ShotsRoot
  GameObject NoShotsRoot
  GameObject TopUpArrow
  GameObject TopDownArrow
  Canvas DragCanvas
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoShotRecordWidget
Наследуется от: MonoBehaviour
Поля:
  RustInput NameInput
  GameObject RecordingRoot
  GameObject PreRecordingRoot
  RustButton CountdownToggle
  RustButton PauseOnSaveToggle
  RustButton ReturnToStartToggle
  RustButton RecordDofToggle
  RustOption FolderDropdown
  GameObject RecordingUnderlay
  AudioSource CountdownAudio
  GameObject ShotRecordTime
  RustText ShotRecordTimeText
  RustText ShotNameText
  GameObject RecordingInProcessRoot
  GameObject CountdownActiveRoot
  GameObject CountdownActiveSliderRoot
  RustSlider CountdownActiveSlider
  RustText CountdownActiveText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoText
Наследуется от: MonoBehaviour
Поля:
  RustText TimeText
  RustText TotalSecondText
  RustText TimeScaleText
  RustText FilenameText
  RustText DateTimeText
  RustText ParentText
  RustText DofText
  GameObject InternalRoot
  GameObject ParentRoot
  GameObject DofRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: KeyframeView
Наследуется от: MonoBehaviour
Поля:
  ScrollRect Scroller
  GameObjectRef KeyframePrefab
  RectTransform KeyframeRoot
  Transform CurrentPositionIndicator
  bool LockScrollToCurrentPosition
  RustText TrackName
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: KeyframeWidget
Наследуется от: MonoBehaviour
Поля:
  Tooltip AttachedTooltip
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoRecorder
Наследуется от: SingletonComponent`1<DemoRecorder>
Поля:
  RustInput Input
  GameObject RecordingUnderlay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoRecorderProgress
Наследуется от: SingletonComponent`1<DemoRecorderProgress>
Поля:
  RustText RecordingLabel
  RustText ProgressLabel
  GameObject RecordingUnderlay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeveloperTools
Наследуется от: SingletonComponent`1<DeveloperTools>
Поля:
  GameObject developerTools
  GameObject navButton
  GameObject panelContainer
  Text ConsoleInput
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlackjackMainScreenUI
Наследуется от: FacepunchBehaviour
Поля:
  Canvas inGameDisplay
  Canvas notInGameDisplay
  Sprite faceNeutral
  Sprite faceShocked
  Sprite faceSad
  Sprite faceCool
  Sprite faceHappy
  Sprite faceLove
  Image faceInGame
  Image faceNotInGame
  Sprite[] faceNeutralVariants
  Sprite[] faceHalloweenVariants
  RustText cardCountText
  RustText payoutText
  RustText insuranceText
  Canvas placeBetsCanvas
  HorizontalLayoutGroup cardsLayout
  BlackjackScreenCardUI[] cards
  Phrase phraseBust
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlackjackScreenCardUI
Наследуется от: FacepunchBehaviour
Поля:
  Canvas baseCanvas
  Canvas cardFront
  Canvas cardBack
  Image image
  RustText text
  Sprite heartSprite
  Sprite diamondSprite
  Sprite spadeSprite
  Sprite clubSprite
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlackjackScreenInputUI
Наследуется от: MonoBehaviour
Поля:
  Canvas availableOption
  Canvas unavailableOption
  RustText availableOptionText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlackjackSmallScreenUI
Наследуется от: FacepunchBehaviour
Поля:
  Canvas notInGameDisplay
  Canvas inGameDisplay
  RustText cardCountText
  RustText betText
  RustText splitBetText
  RustText insuranceText
  RustText bankText
  RustText splitText
  Canvas infoTextCanvas
  RustText inGameText
  RustText notInGameText
  HorizontalLayoutGroup cardsLayout
  BlackjackScreenCardUI[] cards
  BlackjackScreenInputUI[] inputs
  Phrase phraseBust
  Phrase phraseBet
  Phrase phrasePlaceYourBet
  Phrase phraseStandoff
  Phrase phraseYouWin
  Phrase phraseYouLose
  Phrase phraseWaitingForOtherPlayers
  Phrase phraseAddFunds
  Phrase phraseWaitingForPlayer
  Phrase phraseSplitStored
  Phrase phraseSplitActive
  Phrase phraseHand
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlackjackUI
Наследуется от: MonoBehaviour
Поля:
  Image[] playerCardImages
  Image[] dealerCardImages
  Image[] splitCardImages
  Image[] playerCardBackings
  Image[] dealerCardBackings
  Image[] splitCardBackings
  CardGamePlayerWidget[] playerWidgets
  GameObject dealerValueObj
  RustText dealerValueText
  GameObject yourValueObj
  RustText yourValueText
  Phrase phrasePlaceYourBet
  Phrase phraseHit
  Phrase phraseStand
  Phrase phraseSplit
  Phrase phraseDouble
  Phrase phraseInsurance
  Phrase phraseBust
  Phrase phraseBlackjack
  Phrase phraseStandoff
  Phrase phraseYouWin
  Phrase phraseYouLose
  Phrase phraseWaitingForOtherPlayers
  Phrase phraseHand
  Phrase phraseInsurancePaidOut
  Sprite insuranceIcon
  Sprite noIcon
  Color bustTextColour
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CardGamePlayerWidget
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef cardImageSmallPrefab
  RawImage avatar
  RustText playerName
  RustText scrapTotal
  RustText betText
  Image background
  Color inactiveBackground
  Color activeBackground
  Color foldedBackground
  Color winnerBackground
  Animation actionShowAnimation
  RustText actionText
  Sprite canSeeIcon
  Sprite cannotSeeIcon
  Sprite blankSprite
  Image cornerIcon
  Transform cardDisplayParent
  GridLayoutGroup cardDisplayGridLayout
  GameObject circle
  RustText circleText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CardGameUI
Наследуется от: UIDialog
Поля:
  InfoTextUI primaryInfo
  InfoTextUI secondaryInfo
  InfoTextUI playerLeaveInfo
  GameObject playingUI
  PlayingCardImage[] cardImages
  CardInputWidget[] inputWidgets
  RustSlider dismountProgressSlider
  Phrase phraseLoading
  Phrase phraseWaitingForNextRound
  Phrase phraseNotEnoughPlayers
  Phrase phrasePlayerLeftGame
  Phrase phraseNotEnoughBuyIn
  Phrase phraseTooMuchBuyIn
  Phrase phraseYourTurn
  Phrase phraseYouWinTheRound
  Phrase phraseRoundWinner
  Phrase phraseRoundWinners
  Phrase phraseScrapWon
  Phrase phraseScrapReturned
  Phrase phraseChangeBetAmount
  Phrase phraseBet
  Phrase phraseBetAdd
  Phrase phraseAllIn
  GameObject amountChangeRoot
  RustText amountChangeText
  Color colourNeutralUI
  Color colourGoodUI
  Color colourBadUI
  CanvasGroup timerCanvas
  RustSlider timerSlider
  UIChat chat
  HudElement Hunger
  HudElement Thirst
  HudElement Health
  HudElement PendingHealth
  Sprite cardNone
  Sprite cardBackLarge
  Sprite cardBackSmall
  Sprite cardBackLargeStatic
  Sprite cardBackSmallStatic
  TexasHoldEmUI texasHoldEmUI
  BlackjackUI blackjackUI
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CardInputWidget
Наследуется от: MonoBehaviour
Поля:
  RustText InputText
  RustText ActionText
  RustText ExtraText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PlayingCardSprite
Наследуется от: MonoBehaviour
Поля:
  Image image
  Animation anim
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TexasHoldEmUI
Наследуется от: MonoBehaviour
Поля:
  Image[] holeCardImages
  Image[] holeCardBackings
  Image[] communityCardImages
  Image[] communityCardBackings
  RustText potText
  CardGamePlayerWidget[] playerWidgets
  Phrase phraseWinningHand
  Phrase foldPhrase
  Phrase raisePhrase
  Phrase checkPhrase
  Phrase callPhrase
  Phrase phraseRoyalFlush
  Phrase phraseStraightFlush
  Phrase phraseFourOfAKind
  Phrase phraseFullHouse
  Phrase phraseFlush
  Phrase phraseStraight
  Phrase phraseThreeOfAKind
  Phrase phraseTwoPair
  Phrase phrasePair
  Phrase phraseHighCard
  Phrase phraseRaiseAmount
  Sprite dealerChip
  Sprite smallBlindChip
  Sprite bigBlindChip
  Sprite noIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChangeSignText
Наследуется от: UIDialog
Поля:
  Action`2<int, Texture2D> onUpdateTexture
  Action onClose
  GameObject objectContainer
  GameObject currentFrameSection
  GameObject[] frameOptions
  Camera cameraPreview
  Camera camera3D
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIColorPickerButton
Наследуется от: MonoBehaviour
Поля:
  Image Image
  Color Color
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIFireworkDesigner
Наследуется от: UIDialog
Поля:
  RustInput Title
  RustText StarsPlaced
  RectTransform Canvas
  RectTransform InnerCanvas
  GameObject StarPrefab
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIFireworkDesignItem
Наследуется от: MonoBehaviour
Поля:
  Phrase EmptyPhrase
  Phrase UntitledPhrase
  RustText Title
  RustButton LoadButton
  RustButton SaveButton
  RustButton EraseButton
  UIFireworkDesigner Designer
  int Index
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIFireworkStar
Наследуется от: EventTrigger
Поля:
  Image Image
  RustText Text
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: KeyCodeEntry
Наследуется от: UIDialog
Поля:
  Text textDisplay
  Action`1<string> onCodeEntered
  Action onClosed
  Text typeDisplay
  Phrase masterCodePhrase
  Phrase guestCodePhrase
  GameObject memoryKeycodeButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: StampClanLogo
Наследуется от: MonoBehaviour
Поля:
  GameObject UiElement
  RawImage LogoPreview
  MeshPaintController Controller
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PhoneDialler
Наследуется от: UIDialog
Поля:
  GameObject DialingRoot
  GameObject CallInProcessRoot
  GameObject IncomingCallRoot
  RustText ThisPhoneNumber
  RustInput PhoneNameInput
  RustText textDisplay
  RustText CallTimeText
  RustButton DefaultDialViewButton
  RustText[] IncomingCallNumber
  GameObject NumberDialRoot
  GameObject PromptVoicemailRoot
  RustButton ContactsButton
  RustText FailText
  NeedsCursor CursorController
  NeedsKeyboard KeyboardController
  Phrase WrongNumberPhrase
  Phrase NetworkBusy
  Phrase Engaged
  GameObjectRef DirectoryEntryPrefab
  Transform DirectoryRoot
  GameObject NoDirectoryRoot
  RustButton DirectoryPageUp
  RustButton DirectoryPageDown
  Transform ContactsRoot
  RustInput ContactsNameInput
  RustInput ContactsNumberInput
  GameObject NoContactsRoot
  RustButton AddContactButton
  SoundDefinition DialToneSfx
  Button[] NumberButtons
  Phrase AnsweringMachine
  VoicemailDialog Voicemail
  GameObject VoicemailRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PhoneDirectoryEntry
Наследуется от: MonoBehaviour
Поля:
  RustText PhoneNumber
  RustText PhoneName
  GameObject DeleteIcon
  GameObject CensorIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VoicemailDialog
Наследуется от: MonoBehaviour
Поля:
  GameObject RecordingRoot
  RustSlider RecordingProgress
  GameObject BrowsingRoot
  PhoneDialler ParentDialler
  GameObjectRef VoicemailEntry
  Transform VoicemailEntriesRoot
  GameObject NoVoicemailRoot
  GameObject NoCassetteRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VoicemailEntry
Наследуется от: MonoBehaviour
Поля:
  GameObject PlayingRoot
  RustText DisplayName
  RustIcon PlayIcon
  RustSlider ProgressSlider
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PickAFriend
Наследуется от: UIDialog
Поля:
  InputField input
  RustText headerText
  bool AutoSelectInputField
  bool AllowMultiple
  Action`2<ulong, string> onSelected
  Phrase sleepingBagHeaderPhrase
  Phrase turretHeaderPhrase
  SteamFriendsList friendsList
Свойства:
  Func`2<ulong, bool> shouldShowPlayer
Методы:
  void set_shouldShowPlayer(Func`2<ulong, bool> value)
  void .ctor()
--------------------------------------------------
Класс: FavouriteRadioStation
Наследуется от: MonoBehaviour
Поля:
  RustText UrlText
  GameObject XmasRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RadioDialog
Наследуется от: UIDialog
Поля:
  RustInput IpInput
  GameObjectRef FavouritePrefab
  Transform FavouritesContainer
  GameObject HasCassetteRoot
  RadioDialog Instance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SoundLightDialog
Наследуется от: UIDialog
Поля:
  RustOption ColourOption
  RustOption VolumeOption
  RustOption SpeedOption
  RustOption PatternOption
  RustOption GradientOption
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RenameSleepingBag
Наследуется от: UIDialog
Поля:
  InputField input
  SleepingBag bag
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SetupAppNotification
Наследуется от: UIDialog
Поля:
  RustInput titleInput
  RustInput bodyInput
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SprayCanSkinSelect
Наследуется от: UIDialog
Поля:
  IconSkinPicker skinPicker
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TechTreeDialog
Наследуется от: UIDialog
Поля:
  TechTreeData data
  float graphScale
  TechTreeEntry entryPrefab
  TechTreeGroup groupPrefab
  TechTreeLine linePrefab
  RectTransform contents
  RectTransform contentParent
  TechTreeSelectedNodeUI selectedNodeUI
  float nodeSize
  float gridSize
  GameObjectRef unlockEffect
  RustText scrapCount
  Vector2 startPos
  List`1<int> processed
  Dictionary`2<int, TechTreeWidget> widgets
  List`1<TechTreeLine> lines
  ScrollRectZoom zoom
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TechTreeEntry
Наследуется от: TechTreeWidget
Поля:
  RawImage icon
  GameObject ableToUnlockBackground
  GameObject unlockedBackground
  GameObject lockedBackground
  GameObject lockOverlay
  GameObject selectedBackground
  Image radialUnlock
  float holdTime
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TechTreeGroup
Наследуется от: TechTreeWidget
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TechTreeLine
Наследуется от: TechTreeWidget
Поля:
  RawImage center
  RawImage topLeft
  RawImage topRight
  RawImage bottomLeft
  RawImage bottomRight
  RawImage centerDotted
  RawImage topLeftDotted
  RawImage topRightDotted
  RawImage bottomLeftDotted
  RawImage bottomRightDotted
  int from
  int to
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TechTreeSelectedNodeUI
Наследуется от: MonoBehaviour
Поля:
  RustText selectedTitle
  RawImage selectedIcon
  RustText selectedDescription
  RustText costText
  RustText craftingCostText
  GameObject costObject
  GameObject cantAffordObject
  GameObject unlockedObject
  GameObject unlockButton
  GameObject noPathObject
  TechTreeDialog dialog
  Color ColorAfford
  Color ColorCantAfford
  GameObject totalRequiredRoot
  RustText totalRequiredText
  ItemInformationPanel[] informationPanels
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TechTreeWidget
Наследуется от: BaseMonoBehaviour
Поля:
  int id
Свойства:
  RectTransform rectTransform
Методы:
  RectTransform get_rectTransform()
  void .ctor()
--------------------------------------------------
Класс: ZoomImage
Наследуется от: MonoBehaviour
Поля:
  float _minimumScale
  float _initialScale
  float _maximumScale
  float _scaleIncrement
  Vector3 _scale
  RectTransform _thisTransform
Свойства:
Методы:
  void Awake()
  void OnScroll(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: UIDialog
Наследуется от: ListComponent`1<UIDialog>
Поля:
  SoundDefinition openSoundDef
  SoundDefinition closeSoundDef
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIVideoPlayer
Наследуется от: UIDialog
Поля:
  AspectRatioFitter aspectRatioFitter
  GameObject closeButton
  VideoPlayer videoPlayer
  RawImage videoCanvas
  RectTransform videoProgressBar
  GameObject loadingIndicator
  float audioDuckingAmount
  float timeoutAfter
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DynamicMouseCursor
Наследуется от: MonoBehaviour
Поля:
  Texture2D RegularCursor
  Vector2 RegularCursorPos
  Texture2D HoverCursor
  Vector2 HoverCursorPos
  Texture2D current
Свойства:
Методы:
  void LateUpdate()
  void UpdateCursor(Texture2D cursor, Vector2 offs)
  GameObject CurrentlyHoveredItem()
  void .ctor()
--------------------------------------------------
Класс: EntityHUDRender
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ErrorText
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI text
  int maxLength
  Stopwatch stopwatch
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void CaptureLog(string error, string stacktrace, LogType type)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExpandedLifeStats
Наследуется от: MonoBehaviour
Поля:
  GameObject DisplayRoot
  GameObjectRef GenericStatRow
  Transform ResourcesStatRoot
  List`1<GenericStatDisplay> ResourceStats
  GameObjectRef WeaponStatRow
  Transform WeaponsRoot
  Transform MiscRoot
  List`1<GenericStatDisplay> MiscStats
  LifeInfographic Infographic
  RectTransform MoveRoot
  Vector2 OpenPosition
  Vector2 ClosedPosition
  GameObject OpenButtonRoot
  GameObject CloseButtonRoot
  GameObject ScrollGradient
  ScrollRect Scroller
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FpStandaloneInputModule
Наследуется от: StandaloneInputModule
Поля:
Свойства:
  PointerEventData CurrentData
Методы:
  PointerEventData get_CurrentData()
  void .ctor()
--------------------------------------------------
Класс: FPSText
Наследуется от: MonoBehaviour
Поля:
  Text text
  Stopwatch fpsTimer
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: GameStat
Наследуется от: MonoBehaviour
Поля:
  float refreshTime
  Text title
  Text globalStat
  Text localStat
  long globalValue
  long localValue
  float secondsSinceRefresh
  float secondsUntilUpdate
  float secondsUntilChange
  Stat[] stats
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FPSGraph
Наследуется от: Graph
Поля:
Свойства:
Методы:
  void Refresh()
  void OnEnable()
  float GetValue()
  Color GetColor(float value)
  void .ctor()
--------------------------------------------------
Класс: Graph
Наследуется от: MonoBehaviour
Поля:
  Material Material
  int Resolution
  Vector2 ScreenFill
  Vector2 ScreenOrigin
  Vector2 Pivot
  Rect Area
  float CurrentValue
  int index
  Single[] values
  float max
Свойства:
Методы:
  float GetValue()
  Color GetColor(float value)
  Vector3 GetVertex(float x, float y)
  void Update()
  void OnGUI()
  void .ctor()
--------------------------------------------------
Класс: HostileNote
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup warnGroup
  CanvasGroup group
  CanvasGroup timerGroup
  CanvasGroup smallWarning
  Text timerText
  Text smallWarningText
  float unhostileTime
  float weaponDrawnDuration
  Color warnColor
  Color hostileColor
  float requireDistanceToSafeZone
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HudElement
Наследуется от: MonoBehaviour
Поля:
  Text[] ValueText
  Image[] FilledImage
  float lastValue
  float lastMax
Свойства:
Методы:
  void SetValue(float value, float max)
  void SetText(string v)
  void SetImage(float f)
  void .ctor()
--------------------------------------------------
Класс: InfoBar
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ContactsEntry
Наследуется от: MonoBehaviour
Поля:
  RustText nameText
  RustText reputationText
  RawImage smallMugshot
  PlayerRelationshipInfo info
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ContactsPanel
Наследуется от: SingletonComponent`1<ContactsPanel>
Поля:
  RectTransform alliesBucket
  RectTransform seenBucket
  RectTransform enemiesBucket
  RectTransform contentsBucket
  ContactsEntry contactEntryPrefab
  RawImage mugshotTest
  RawImage fullBodyTest
  RustButton[] filterButtons
  RelationshipType selectedRelationshipType
  RustButton lastSeenToggle
  Phrase sortingByLastSeenPhrase
  Phrase sortingByFirstSeen
  RustText sortText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GameTip
Наследуется от: SingletonComponent`1<GameTip>
Поля:
  CanvasGroup canvasGroup
  RustIcon icon
  Image background
  RustText text
  Theme[] themes
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ImagePainter
Наследуется от: MonoBehaviour
Поля:
  OnDrawingEvent onDrawing
  MonoBehaviour redirectRightClick
  float spacingScale
  Brush brush
  PointerState[] pointerState
Свойства:
  RectTransform rectTransform
Методы:
  RectTransform get_rectTransform()
  void OnPointerDown(PointerEventData eventData)
  void OnPointerUp(PointerEventData eventData)
  void OnDrag(PointerEventData eventData)
  void OnBeginDrag(PointerEventData eventData)
  void OnEndDrag(PointerEventData eventData)
  void OnInitializePotentialDrag(PointerEventData eventData)
  void DrawAt(Vector2 position, InputButton button)
  void Start()
  void UpdateBrush(Brush brush)
  void .ctor()
--------------------------------------------------
Класс: IndependentScale
Наследуется от: MonoBehaviour
Поля:
  Transform scaleParent
  Vector3 initialScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IndependentScaleImagePPU
Наследуется от: MonoBehaviour
Поля:
  Transform scaleParent
  Image image
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MapLayer
Наследуется от: Enum
Поля:
  int value__
  MapLayer Overworld
  MapLayer TrainTunnels
  MapLayer Underwater1
  MapLayer Underwater2
  MapLayer Underwater3
  MapLayer Underwater4
  MapLayer Underwater5
  MapLayer Underwater6
  MapLayer Underwater7
  MapLayer Underwater8
  MapLayer Dungeons
Свойства:
Методы:
--------------------------------------------------
Класс: MapLayerRenderer
Наследуется от: SingletonComponent`1<MapLayerRenderer>
Поля:
  Camera renderCamera
  CameraEvent cameraEvent
  Material renderMaterial
  Nullable`1<MapLayer> _currentlyRenderedLayer
  Nullable`1<NetworkableId> _currentlyRenderedDungeon
  Nullable`1<int> _underwaterLabFloorCount
Свойства:
Методы:
  void Render(MapLayer layer)
  void RenderImpl(CommandBuffer cb)
  MapLayerRenderer GetOrCreate()
  void RenderDungeonsLayer()
  CommandBuffer BuildCommandBufferDungeons(ProceduralDynamicDungeon closest)
  ProceduralDynamicDungeon FindDungeon(Vector3 position, float maxDist)
  void RenderTrainLayer()
  CommandBuffer BuildCommandBufferTrainTunnels()
  void RenderUnderwaterLabs(int floor)
  int GetUnderwaterLabFloorCount()
  CommandBuffer BuildCommandBufferUnderwaterLabs(int floor)
  void .ctor()
--------------------------------------------------
Класс: MapInterface
Наследуется от: SingletonComponent`1<MapInterface>
Поля:
  bool IsOpen
  Image cameraPositon
  ScrollRectEx scrollRect
  RustButton showGridToggle
  RustButton FocusButton
  CanvasGroup CanvasGroup
  SoundDefinition PlaceMarkerSound
  SoundDefinition ClearMarkerSound
  MapView View
  UINexusMap NexusMap
  GameObject NexusButtonGroup
  RustButton NexusToggle
  Color[] PointOfInterestColours
  PointOfInterestSpriteConfig[] PointOfInterestSprites
  Sprite PingBackground
  bool DebugStayOpen
  GameObject MarkerListSection
  GameObjectRef MarkerListPrefab
  GameObject MarkerHeader
  Transform LocalPlayerMarkerListParent
  Transform TeamMarkerListParent
  GameObject TeamLeaderHeader
  RustButton HideTeamLeaderMarkersToggle
  CanvasGroup TeamMarkersCanvas
  RustImageButton ShowSleepingBagsButton
  RustImageButton ShowVendingMachinesButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MapMarkerIconSelector
Наследуется от: MonoBehaviour
Поля:
  Image OuterImage
  Image InnerImage
  GameObject Selected
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MapScaleIndependent
Наследуется от: IndependentScale
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MapView
Наследуется от: FacepunchBehaviour
Поля:
  RawImage mapImage
  Image cameraPositon
  ScrollRectEx scrollRect
  GameObject monumentMarkerContainer
  Transform clusterMarkerContainer
  GameObjectRef monumentMarkerPrefab
  GameObject missionMarkerContainer
  GameObjectRef missionMarkerPrefab
  Transform activeInteractionParent
  Transform localPlayerInterestPointRoot
  TeamMemberMapMarker[] teamPositions
  TeamMemberMapMarker[] clanPositions
  List`1<PointOfInterestMapMarker> PointOfInterestMarkers
  List`1<PointOfInterestMapMarker> TeamPointOfInterestMarkers
  List`1<PointOfInterestMapMarker> LocalPings
  List`1<PointOfInterestMapMarker> TeamPings
  GameObject PlayerDeathMarker
  List`1<SleepingBagMapMarker> SleepingBagMarkers
  List`1<SleepingBagClusterMapMarker> SleepingBagClusters
  RawImage UndergroundLayer
  bool ShowGrid
  bool ShowPointOfInterestMarkers
  bool ShowDeathMarker
  bool ShowSleepingBags
  bool AllowSleepingBagDeletion
  bool ShowLocalPlayer
  bool ShowTeamMembers
  bool ShowBagsOnBottom
  bool ShowTrainLayer
  bool ShowMissions
  bool ForceShowVendingMachines
  bool ShowUndergroundLayers
  bool MLRSMarkerMode
  RustImageButton LockButton
  RustImageButton OverworldButton
  RustImageButton TrainButton
  RustImageButton[] UnderwaterButtons
  RustImageButton DungeonButton
  UnityEvent onClicked
Свойства:
Методы:
  void OnPointerDown(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: MissionMapMarker
Наследуется от: MonoBehaviour
Поля:
  Image Icon
  Tooltip TooltipComponent
Свойства:
Методы:
  void Populate(MissionInstance mission)
  void .ctor()
--------------------------------------------------
Класс: MonumentMarker
Наследуется от: MonoBehaviour
Поля:
  Text text
  Image imageBackground
  Image image
  Color dayColor
  Color nightColor
Свойства:
Методы:
  void Setup(LandmarkInfo info)
  void SetNightMode(bool nightMode)
  void .ctor()
--------------------------------------------------
Класс: PointOfInterestMapMarker
Наследуется от: MonoBehaviour
Поля:
  Image MapIcon
  Image MapIconOuter
  GameObject LeaderRoot
  GameObject EditPopup
  Tooltip Tooltip
  GameObject MarkerLabelRoot
  RustText MarkerLabel
  RustText NoMarkerLabel
  RustInput MarkerLabelModify
  MapMarkerIconSelector[] IconSelectors
  MapMarkerIconSelector[] ColourSelectors
  bool IsListWidget
  GameObject DeleteButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SleepingBagClusterMapMarker
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI CountText
  List`1<SleepingBagButton> SleepingBagButtons
  GameObject OpenRoot
  Tooltip SummaryTooltip
  Image RimImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SleepingBagMapMarker
Наследуется от: MonoBehaviour
Поля:
  Image MapIcon
  Image SleepingBagIcon
  Sprite SleepingBagSprite
  Sprite BedSprite
  Sprite BeachTowelSprite
  Sprite CamperSprite
  Tooltip MarkerTooltip
  GameObject LockRoot
  TextMeshProUGUI LockTime
  GameObject OccupiedRoot
  Image CircleRim
  Image CircleFill
  RustButton DeleteButton
  Image ConfirmSlider
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TeamMemberMapMarker
Наследуется от: MonoBehaviour
Поля:
  RectTransform rectTransform
  Text nameTagText
  Tooltip toolTip
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMapExplosion
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMapGenericRadius
Наследуется от: MonoBehaviour
Поля:
  Image radialImage
  Image outlineImage
  float radius
  CanvasGroup fade
  RectTransform rect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMapVendingMachineMarker
Наследуется от: MonoBehaviour
Поля:
  Color inStock
  Color outOfStock
  Image colorBackground
  string displayName
  Tooltip toolTip
  RustButton button
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIMapVendingMachineMarkerCluster
Наследуется от: MonoBehaviour
Поля:
  List`1<UIMapVendingMachineMarker> markers
  GameObject OpenRoot
  TextMeshProUGUI CountText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UINexusMap
Наследуется от: BaseMonoBehaviour
Поля:
  Memoized`2<string, int> IntMemoized
  RawImage BackdropImage
  RawImage BackgroundImage
  RectTransform LoadingView
  RectTransform MissingView
  ScrollRectEx MapScrollRect
  ScrollRectZoom MapScrollZoom
  Image CameraPositon
  CanvasGroup ZoneNameCanvasGroup
  RectTransform ZoneNameContainer
  GameObjectRef ZoneNamePrefab
  CanvasGroup ZoneDetails
  RustText ZoneName
  RustText OnlineCount
  RustText MaxCount
  GameObject InboundFerriesSection
  RectTransform InboundFerriesList
  GameObject OutboundFerriesSection
  RectTransform OutboundFerriesList
  GameObject ConnectionsSection
  RectTransform ConnectionsList
  bool ShowLocalPlayer
  float OutOfBoundsScaleFactor
  float ZoneNameAlphaPower
  UnityEvent OnClicked
Свойства:
Методы:
  void OnPointerDown(PointerEventData eventData)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIPaintBox
Наследуется от: MonoBehaviour
Поля:
  OnBrushChanged onBrushChanged
  Brush brush
Свойства:
Методы:
  void UpdateBrushSize(int size)
  void UpdateBrushTexture(Texture2D tex)
  void UpdateBrushColor(Color col)
  void UpdateBrushAlpha(float a)
  void UpdateBrushEraser(bool b)
  void OnChanged()
  void .ctor()
--------------------------------------------------
Класс: MenuTip
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI text
  LoadingScreen screen
  Phrase[] MenuTips
  int currentTipIndex
  float nextTipTime
Свойства:
Методы:
  void OnEnable()
  void Update()
  void UpdateTip()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SelectedContact
Наследуется от: SingletonComponent`1<SelectedContact>
Поля:
  RustText nameText
  RustText seenText
  RawImage mugshotImage
  Texture2D unknownMugshot
  InputField noteInput
  GameObject[] relationshipTypeTags
  Phrase lastSeenPrefix
  Phrase nowPhrase
  Phrase agoSuffix
  RustButton FriendlyButton
  RustButton SeenButton
  RustButton EnemyButton
  RustButton chatMute
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIBuffs
Наследуется от: SingletonComponent`1<UIBuffs>
Поля:
  bool Enabled
  Transform PrefabBuffIcon
Свойства:
Методы:
  void Refresh(PlayerModifiers modifiers)
  void RemoveAll()
  void .ctor()
--------------------------------------------------
Класс: UIBuffsIcon
Наследуется от: SingletonComponent`1<UIBuffsIcon>
Поля:
  TextMeshProUGUI Text
  Tooltip ToolTip
  CanvasGroup Group
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UICompass
Наследуется от: MonoBehaviour
Поля:
  RawImage compassStrip
  CanvasGroup compassGroup
  List`1<CompassMapMarker> CompassMarkers
  List`1<CompassMapMarker> TeamCompassMarkers
  List`1<CompassMissionMarker> MissionMarkers
  Phrase IslandInfoPhrase
  RectTransform IslandInfoContainer
  RustText IslandInfoText
  float IslandInfoDistanceThreshold
  float IslandLookThreshold
  RectTransform IslandInfoFullContainer
  List`1<CompassMapMarker> LocalPings
  List`1<CompassMapMarker> TeamPings
  Image LeftPingPulse
  Image RightPingPulse
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIFadeOut
Наследуется от: MonoBehaviour
Поля:
  float secondsToFadeOut
  bool destroyOnFaded
  CanvasGroup targetGroup
  float fadeDelay
  float timeStarted
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: UIFishing
Наследуется от: SingletonComponent`1<UIFishing>
Поля:
  Slider TensionLine
  Image FillImage
  Gradient FillGradient
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: UIHUD
Наследуется от: SingletonComponent`1<UIHUD>
Поля:
  UIChat chatPanel
  HudElement Hunger
  HudElement Thirst
  HudElement Health
  HudElement PendingHealth
  HudElement VehicleHealth
  HudElement AnimalStamina
  HudElement AnimalStaminaMax
  RectTransform vitalsRect
  Canvas healthCanvas
  UICompass CompassWidget
  GameObject KeyboardCaptureMode
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIRecordingInfo
Наследуется от: SingletonComponent`1<UIRecordingInfo>
Поля:
  RustText CountdownText
  Slider TapeProgressSlider
  GameObject CountdownRoot
  GameObject RecordingRoot
  Transform Spinner
  float SpinSpeed
  Image CassetteImage
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: UIUnderlay
Наследуется от: SingletonComponent`1<UIUnderlay>
Поля:
  GameObject damageDirectional
  GameObject waterDirectional
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IngameMenuBackground
Наследуется от: MonoBehaviour
Поля:
  bool Enabled
  CanvasGroup canvasGroup
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmmoInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemStatValue damageDisplay
  ItemStatValue velocityDisplay
  ItemStatValue spreadDisplay
  ItemTextValue pelletsDisplay
  ItemStatValue falloffRangeDisplay
  ItemTextValue thicknessDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ArmorInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue projectileDisplay
  ItemTextValue meleeDisplay
  ItemTextValue coldDisplay
  ItemTextValue explosionDisplay
  ItemTextValue radiationDisplay
  ItemTextValue biteDisplay
  ItemTextValue spacer
  Text areaProtectionText
  Phrase LegText
  Phrase ChestText
  Phrase HeadText
  Phrase ChestLegsText
  Phrase WholeBodyText
  ItemTextValue eggVision
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BeltBarIcon
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlueprintInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  GameObject LearnedRoot
  GameObject NotLearnedRoot
  GameObject NotLearnableRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlueprintButton
Наследуется от: MonoBehaviour
Поля:
  Image image
  Image imageFavourite
  Button button
  CanvasGroup group
  GameObject newNotification
  GameObject lockedOverlay
  Tooltip Tip
  Image FavouriteIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlueprintCategoryButton
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI amountLabel
  ItemCategory Category
  bool AlwaysShow
  bool ShowItemCount
  GameObject BackgroundHighlight
  SoundDefinition clickSound
  SoundDefinition hoverSound
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlueprintCraftGridRow
Наследуется от: MonoBehaviour
Поля:
  GameObject amount
  GameObject itemName
  GameObject total
  GameObject have
  Color colorOK
  Color colorBad
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: BlueprintHeader
Наследуется от: MonoBehaviour
Поля:
  Text categoryName
  Text unlockCount
Свойства:
Методы:
  void Setup(ItemCategory name, int unlocked, int total)
  void .ctor()
--------------------------------------------------
Класс: CraftingNotice
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup canvasGroup
  TextMeshProUGUI itemName
  TextMeshProUGUI craftSeconds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CraftingQueue
Наследуется от: SingletonComponent`1<CraftingQueue>
Поля:
  GameObject queueContainer
  GameObject queueItemPrefab
  ScrollRect scrollRect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CraftingQueueIcon
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup canvasGroup
  Image icon
  Image iconCancel
  GameObject timeLeft
  GameObject craftingCount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SelectedBlueprint
Наследуется от: SingletonComponent`1<SelectedBlueprint>
Поля:
  ItemBlueprint blueprint
  InputField craftAmountText
  GameObject ingredientGrid
  IconSkinPicker skinPicker
  Image iconImage
  RustText titleText
  RustText descriptionText
  CanvasGroup CraftArea
  Button CraftButton
  RustText CraftingTime
  RustText CraftingAmount
  Sprite FavouriteOnSprite
  Sprite FavouriteOffSprite
  Image FavouriteButtonStatusMarker
  GameObject[] workbenchReqs
  ItemInformationPanel[] informationPanels
Свойства:
  bool isOpen
Методы:
  bool get_isOpen()
  void .ctor()
--------------------------------------------------
Класс: UIBlueprints
Наследуется от: ListComponent`1<UIBlueprints>
Поля:
  GameObjectRef buttonPrefab
  ScrollRect scrollRect
  CanvasGroup ScrollRectCanvasGroup
  InputField searchField
  GameObject searchFieldPlaceholder
  GameObject listAvailable
  GameObject listLocked
  GameObject Categories
  VerticalLayoutGroup CategoryVerticalLayoutGroup
  BlueprintCategoryButton FavouriteCategoryButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ChangelogButton
Наследуется от: MonoBehaviour
Поля:
  RustButton Button
  CanvasGroup CanvasGroup
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ChangelogPanel
Наследуется от: MonoBehaviour
Поля:
  GameObject AddedHeader
  GameObject RemovedHeader
  GameObject ChangedHeader
  RustText AddedContent
  RustText RemovedContent
  RustText ChangedContent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConsumableInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue[] values
  UIGenesDisplay Genes
  Text TextUnknownGenetics
  Text LabelGenetics
  GameObject GeneticsGameObject
  ItemTextValue durationValue
  ItemTextValue baitValue
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DragReceiver
Наследуется от: MonoBehaviour
Поля:
  TriggerEvent onEndDrag
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: EngineItemInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  Text tier
  Phrase low
  Phrase medium
  Phrase high
  GameObject accelerationRoot
  GameObject topSpeedRoot
  GameObject fuelEconomyRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ExplosiveInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue explosiveDmgDisplay
  ItemTextValue lethalDmgDisplay
  ItemTextValue throwDistanceDisplay
  ItemTextValue projectileDistanceDisplay
  ItemTextValue fuseLengthDisplay
  ItemTextValue blastRadiusDisplay
  Text unreliableText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FrankensteinPartInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue healthDisplay
  ItemTextValue speedDisplay
  ItemTextValue attackRateDisplay
  ItemTextValue attackDamageDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GunModInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue fireRateDisplay
  ItemTextValue velocityDisplay
  ItemTextValue damageDisplay
  ItemTextValue accuracyDisplay
  ItemTextValue recoilDisplay
  ItemTextValue zoomDisplay
  ItemTextValue ammoDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HeadInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemDefinition HeadInfo
  GameObject PlayerRoot
  GameObject NPCRoot
  GameObject HorseRoot
  Image NPCImage
  Text NPCText
  Text PlayerNameText
  Text PlayerIdText
  Text HorseBreedText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: HorseEquipmentInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue horseProtectionDisplay
  ItemTextValue riderProtectionDisplay
  ItemTextValue maxSpeedDisplay
  ItemTextValue storageAmountDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IOEntityInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue requiredPowerDisplay
  ItemTextValue requiredFluidDisplay
  ItemTextValue generatedPowerDisplay
  ItemTextValue capacityDisplay
  ItemTextValue chargeDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemDropCommand
Наследуется от: MonoBehaviour
Поля:
  string command
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemIcon
Наследуется от: BaseMonoBehaviour
Поля:
  Color backgroundColor
  Color selectedBackgroundColor
  float unoccupiedAlpha
  Color unoccupiedColor
  ItemContainerSource containerSource
  int slotOffset
  int slot
  bool setSlotFromSiblingIndex
  GameObject slots
  CanvasGroup iconContents
  CanvasGroup canvasGroup
  Image iconImage
  Image underlayImage
  Text amountText
  Text hoverText
  Image hoverOutline
  Image cornerIcon
  Image lockedImage
  Image progressImage
  Image backgroundImage
  Image backgroundUnderlayImage
  Image progressPanel
  Sprite emptySlotBackgroundSprite
  CanvasGroup conditionObject
  Image conditionFill
  Image maxConditionFill
  GameObject lightEnabled
  bool allowSelection
  bool allowDropping
  bool allowMove
  bool showCountDropShadow
  Item item
  bool invalidSlot
  SoundDefinition hoverSound
Свойства:
Методы:
  void OnPointerClick(PointerEventData eventData)
  void OnPointerEnter(PointerEventData eventData)
  void OnPointerExit(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: ItemInformationPanel
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  bool EligableForDisplay(ItemDefinition info)
  void SetupForItem(ItemDefinition info, Item item)
  void .ctor()
--------------------------------------------------
Класс: ItemOptionButton
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI name
  Image icon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemPanel
Наследуется от: SingletonComponent`1<ItemPanel>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemPickupNotice
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI Text
  TextMeshProUGUI Amount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemPreviewIcon
Наследуется от: BaseMonoBehaviour
Поля:
  ItemContainerSource containerSource
  int slot
  bool setSlotFromSiblingIndex
  CanvasGroup iconContents
  Image iconImage
  Text amountText
  Item item
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemSplitter
Наследуется от: MonoBehaviour
Поля:
  Slider slider
  TextMeshProUGUI textValue
  TextMeshProUGUI splitAmountText
  TMP_InputField amountInputField
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemSplitterDragOut
Наследуется от: MonoBehaviour
Поля:
  ItemSplitter rootSplitter
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemStatValue
Наследуется от: MonoBehaviour
Поля:
  Text text
  Slider slider
  bool selectedItem
  bool smallerIsBetter
  bool asPercentage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemSubmitPanel
Наследуется от: LootPanel
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemTextValue
Наследуется от: MonoBehaviour
Поля:
  Text text
  Color bad
  Color good
  bool negativestat
  bool asPercentage
  bool useColors
  bool signed
  string suffix
  float multiplier
Свойства:
Методы:
  void SetValue(float val, int numDecimals, string overrideText)
  void .ctor()
--------------------------------------------------
Класс: KeyInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  Text id
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanel
Наследуется от: MonoBehaviour
Поля:
  Text Title
  RustText TitleText
  bool hideInvalidIcons
  CanvasGroup canvasGroup
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelCardTableTerminal
Наследуется от: LootPanel
Поля:
  Text buyInInfoText
  Phrase phraseMin
  Phrase phraseMax
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelContainer
Наследуется от: MonoBehaviour
Поля:
  string containerName
  GameObject NoLootPanel
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LootPanelEngine
Наследуется от: LootPanel
Поля:
  Image engineImage
  ItemIcon[] icons
  GameObject warning
  RustText hp
  RustText power
  RustText acceleration
  RustText topSpeed
  RustText fuelEconomy
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelFrankensteinTable
Наследуется от: LootPanel
Поля:
  Button StartCreatingButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelHorse
Наследуется от: LootPanel
Поля:
  Text breedTitle
  Text maxSpeedText
  Text staminaText
  Text healthText
  GameObject[] storageSlots
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelIndustrialCrafter
Наследуется от: LootPanel
Поля:
  GameObject CraftingRoot
  RustSlider ProgressSlider
  Transform Spinner
  float SpinSpeed
  GameObject WorkbenchLevelRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelLocker
Наследуется от: LootPanel
Поля:
  GameObject[] controls
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelMixingTable
Наследуется от: LootPanel
Поля:
  GameObject controlsOn
  GameObject controlsOff
  Button StartMixingButton
  InfoBar ProgressBar
  GameObject recipeItemPrefab
  RectTransform recipeContentRect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelOven
Наследуется от: LootPanel
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelPlayerCorpse
Наследуется от: LootPanel
Поля:
  GameObject[] BeltRoots
  GameObject[] ClothingRoots
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelReclaim
Наследуется от: LootPanel
Поля:
  int oldOverflow
  Text overflowText
  GameObject overflowObject
  Phrase MorePhrase
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LootPanelRecycler
Наследуется от: LootPanel
Поля:
  GameObject controlsOn
  GameObject controlsOff
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelTrophyStand
Наследуется от: LootPanel
Поля:
  GameObject SubmitButton
  GameObject NonMatchingTrophyButton
  Text CountText
  GameObject CountRoot
  GameObject NameRoot
  RustText NameText
  GameObject ClearButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootPanelWaterCatcher
Наследуется от: LootPanel
Поля:
  ItemIcon sourceItem
  Image capacityImage
  CanvasGroup helpCanvas
  CanvasGroup buttonsCanvas
  Button fromButton
  Button toButton
  Button drinkButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeleeWeaponInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemStatValue damageDisplay
  ItemStatValue attackRateDisplay
  ItemStatValue attackSizeDisplay
  ItemStatValue attackRangeDisplay
  ItemStatValue oreGatherDisplay
  ItemStatValue treeGatherDisplay
  ItemStatValue fleshGatherDisplay
  GameObject untieCrateDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NoticeArea
Наследуется от: SingletonComponent`1<NoticeArea>
Поля:
  GameObjectRef itemPickupPrefab
  GameObjectRef itemPickupCondensedText
  GameObjectRef itemDroppedPrefab
  AnimationCurve pickupSizeCurve
  AnimationCurve pickupAlphaCurve
  AnimationCurve reuseAlphaCurve
  AnimationCurve reuseSizeCurve
  IVitalNotice[] notices
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: LootAllButton
Наследуется от: MonoBehaviour
Поля:
  Func`2<Item, bool> Filter
  OvenLootPanel inventoryGrid
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LootGrid
Наследуется от: MonoBehaviour
Поля:
  int Container
  int Offset
  int Count
  GameObject ItemIconPrefab
  Sprite BackgroundImage
  ItemContainerSource Inventory
  List`1<ItemIcon> _icons
Свойства:
Методы:
  void CreateInventory(ItemContainerSource inventory, Nullable`1<int> slots, Nullable`1<int> offset)
  void .ctor()
--------------------------------------------------
Класс: OvenItemIcon
Наследуется от: MonoBehaviour
Поля:
  ItemIcon ItemIcon
  RustText ItemLabel
  RustText MaterialLabel
  OvenSlotType SlotType
  Phrase EmptyPhrase
  List`1<OvenSlotConfig> SlotConfigs
  float DisabledAlphaScale
  CanvasGroup CanvasGroup
  Item _item
Свойства:
Методы:
  void Start()
  void Update()
  void UpdateLabels()
  void .ctor()
  bool <Start>b__10_0(OvenSlotConfig x)
--------------------------------------------------
Класс: OvenLineRow
Наследуется от: MonoBehaviour
Поля:
  LootGrid Above
  LootGrid Below
  Transform Container
  Color Color
  Sprite TriangleSprite
  int LineWidth
  int ArrowWidth
  int ArrowHeight
  int Padding
  int _topCount
  int _bottomCount
  List`1<GameObject> images
Свойства:
Методы:
  void Update()
  void CreateRow(bool above)
  Image CreateImage()
  void .ctor()
--------------------------------------------------
Класс: OvenLootPanel
Наследуется от: MonoBehaviour
Поля:
  GameObject controlsOn
  GameObject controlsOff
  Image TitleBackground
  RustText TitleText
  Color AlertBackgroundColor
  Color AlertTextColor
  Color OffBackgroundColor
  Color OffTextColor
  Color OnBackgroundColor
  Color OnTextColor
  Phrase OffPhrase
  Phrase OnPhrase
  Phrase NoFuelPhrase
  GameObject FuelRowPrefab
  GameObject MaterialRowPrefab
  GameObject ItemRowPrefab
  Sprite IconBackground_Wood
  Sprite IconBackGround_Input
  LootGrid LootGrid_Wood
  LootGrid LootGrid_Input
  LootGrid LootGrid_Output
  GameObject Contents
  GameObject[] ElectricDisableRoots
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OvenSlotType
Наследуется от: Enum
Поля:
  int value__
  OvenSlotType Fuel
  OvenSlotType Charcoal
  OvenSlotType Material
  OvenSlotType Smelted
  OvenSlotType FoodInput
  OvenSlotType FoodOutput
Свойства:
Методы:
--------------------------------------------------
Класс: OvenStatus
Наследуется от: Enum
Поля:
  int value__
  OvenStatus NoFuel
  OvenStatus Off
  OvenStatus On
Свойства:
Методы:
--------------------------------------------------
Класс: PaperDollSegment
Наследуется от: BaseMonoBehaviour
Поля:
  HitArea selectedAreas
  HitArea area
  Image overlayImg
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProjectileWeaponInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemStatValue damageDisplay
  ItemStatValue recoilDisplay
  ItemStatValue rofDisplay
  ItemStatValue accuracyDisplay
  ItemStatValue rangeDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ProtectionValue
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup group
  TextMeshProUGUI text
  DamageType damageType
  bool selectedItem
  bool displayBaseProtection
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: QuickCraft
Наследуется от: SingletonComponent`1<QuickCraft>
Поля:
  GameObjectRef craftButton
  GameObject empty
  Sprite FavouriteOnSprite
  Sprite FavouriteOffSprite
  Color FavouriteOnColor
  Color FavouriteOffColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: QuickCraftButton
Наследуется от: MonoBehaviour
Поля:
  Image icon
  Image favourite
  Tooltip tooltip
  Text CraftCount
  Image FavouriteIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RepairBenchPanel
Наследуется от: LootPanel
Поля:
  Text infoText
  Button repairButton
  Color gotColor
  Color notGotColor
  Phrase phraseEmpty
  Phrase phraseNotRepairable
  Phrase phraseRepairNotNeeded
  Phrase phraseNoBlueprint
  GameObject skinsPanel
  GameObject changeSkinDialog
  IconSkinPicker picker
  GameObject attachmentSkinBlocker
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ResearchTablePanel
Наследуется от: LootPanel
Поля:
  Button researchButton
  Text timerText
  GameObject itemDescNoItem
  GameObject itemDescTooBroken
  GameObject itemDescNotResearchable
  GameObject itemDescTooMany
  GameObject itemTakeBlueprint
  GameObject itemDescAlreadyResearched
  GameObject itemDescDefaultBlueprint
  Text successChanceText
  ItemIcon scrapIcon
  bool wasResearching
  GameObject[] workbenchReqs
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SeedInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemTextValue maxHarvestsDisplay
  UIGenesDisplay GeneticsDisplay
  Text TextUnknownGenetics
  GameObject GeneticsGameObject
  ItemStatValue WaterResilience
  ItemStatValue GroundResilience
  ItemStatValue LightResilience
  ItemStatValue TemperatureResilience
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SelectedItem
Наследуется от: SingletonComponent`1<SelectedItem>
Поля:
  Image icon
  Image iconSplitter
  RustText title
  RustText description
  GameObject splitPanel
  GameObject itemProtection
  GameObject menuOption
  GameObject optionsParent
  GameObject innerPanelContainer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SquareBorder
Наследуется от: MonoBehaviour
Поля:
  float Size
  Color Color
  RectTransform Top
  RectTransform Bottom
  RectTransform Left
  RectTransform Right
  Image TopImage
  Image BottomImage
  Image LeftImage
  Image RightImage
  float _lastSize
  Color _lastColor
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: UIBelt
Наследуется от: SingletonComponent`1<UIBelt>
Поля:
  List`1<ItemIcon> ItemIcons
Свойства:
Методы:
  void Awake()
  ItemIcon GetItemIconAtSlot(int slot)
  void .ctor()
--------------------------------------------------
Класс: UIContacts
Наследуется от: SingletonComponent`1<UIContacts>
Поля:
  bool isOpen
  float LastOpened
  ContactsPanel contactsPanel
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UICrafting
Наследуется от: SingletonComponent`1<UICrafting>
Поля:
  bool isOpen
  float LastOpened
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIIntegerEntry
Наследуется от: MonoBehaviour
Поля:
  InputField textEntry
  Action textChanged
Свойства:
Методы:
  void add_textChanged(Action value)
  void remove_textChanged(Action value)
  void OnAmountTextChanged()
  void SetAmount(int amount)
  int GetIntAmount()
  void PlusMinus(int delta)
  void .ctor()
--------------------------------------------------
Класс: UIInventory
Наследуется от: SingletonComponent`1<UIInventory>
Поля:
  TextMeshProUGUI PlayerName
  bool isOpen
  float LastOpened
  VerticalLayoutGroup rightContents
  GameObject QuickCraft
  Transform InventoryIconContainer
  ChangelogPanel ChangelogPanel
  ContactsPanel contactsPanel
  GameObject backpackSlot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IContainerSounds
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UIMixingTableItem
Наследуется от: MonoBehaviour
Поля:
  Image ItemIcon
  Tooltip ItemTooltip
  RustText TextItemNameAndQuantity
  UIMixingTableItemIngredient[] Ingredients
Свойства:
Методы:
  void Init(Recipe recipe)
  void .ctor()
--------------------------------------------------
Класс: UIMixingTableItemIngredient
Наследуется от: MonoBehaviour
Поля:
  Image ItemIcon
  Text ItemCount
  Tooltip ToolTip
Свойства:
Методы:
  void Init(RecipeIngredient ingredient)
  void InitBlank()
  void .ctor()
--------------------------------------------------
Класс: VehicleEditingItemIcon
Наследуется от: MonoBehaviour
Поля:
  Image foregroundImage
  Image linkImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VehicleEditingPanel
Наследуется от: LootPanel
Поля:
  float disabledAlpha
  CanvasGroup editGroup
  GameObject moduleInternalItemsGroup
  GameObject moduleInternalLiquidsGroup
  GameObject destroyChassisGroup
  Button itemTakeButton
  Button liquidTakeButton
  GameObject liquidHelp
  GameObject liquidButton
  Color gotColor
  Color notGotColor
  Text generalInfoText
  Text generalWarningText
  Image generalWarningImage
  Text repairInfoText
  Button repairButton
  Text destroyChassisButtonText
  Text destroyChassisCountdown
  Phrase phraseEditingInfo
  Phrase phraseNoOccupant
  Phrase phraseBadOccupant
  Phrase phrasePlayerObstructing
  Phrase phraseNotDriveable
  Phrase phraseNotRepairable
  Phrase phraseRepairNotNeeded
  Phrase phraseRepairSelectInfo
  Phrase phraseRepairEnactInfo
  Phrase phraseHasLock
  Phrase phraseHasNoLock
  Phrase phraseAddLock
  Phrase phraseAddLockButton
  Phrase phraseChangeLockCodeButton
  Text carLockInfoText
  RustText carLockButtonText
  Button actionLockButton
  Button removeLockButton
  GameObjectRef keyEnterDialog
  Phrase phraseEmptyStorage
  CreateChassisEntry[] chassisOptions
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VehicleModuleInformationPanel
Наследуется от: ItemInformationPanel
Поля:
  ItemStatValue socketsDisplay
  ItemStatValue hpDisplay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VirtualItemIcon
Наследуется от: MonoBehaviour
Поля:
  ItemDefinition itemDef
  int itemAmount
  bool asBlueprint
  Image iconImage
  Image bpUnderlay
  Text amountText
  Text hoverText
  CanvasGroup iconContents
  Tooltip ToolTip
  CanvasGroup conditionObject
  Image conditionFill
  Image maxConditionFill
  Image cornerIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WorkbenchPanel
Наследуется от: LootPanel
Поля:
  Button experimentButton
  Text timerText
  Text costText
  GameObject expermentCostParent
  GameObject controlsParent
  GameObject allUnlockedNotification
  GameObject informationParent
  GameObject cycleIcon
  TechTreeDialog techTreeDialog
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: InventoryUI
Наследуется от: MonoBehaviour
Поля:
  GameObject ContactsButton
  GameObject ClanButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IOEntityUISlotEntry
Наследуется от: MonoBehaviour
Поля:
  RawImage icon
  Text leftText
  Text rightText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemSearchUtils
Наследуется от: object
Поля:
Свойства:
Методы:
  IOrderedEnumerable`1<ItemDefinition> SearchForItems(string searchString, Func`2<ItemDefinition, bool> validFilter)
  bool IsValidSearchResult(string search, ItemDefinition target)
  float ScoreSearchResult(string search, ItemDefinition target)
--------------------------------------------------
Класс: LifeInfographic
Наследуется от: MonoBehaviour
Поля:
  PlayerLifeStory life
  GameObject container
  RawImage AttackerAvatarImage
  Image DamageSourceImage
  LifeInfographicStat[] Stats
  Animator[] AllAnimators
  GameObject WeaponRoot
  GameObject DistanceRoot
  GameObject DistanceDivider
  Image WeaponImage
  DamageSetting[] DamageDisplays
  Texture2D defaultAvatarTexture
  bool ShowDebugData
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LifeInfographicStat
Наследуется от: MonoBehaviour
Поля:
  DataType dataSource
  string genericStatKey
  string targetWeaponName
  WeaponInfoType weaponInfoType
  TextMeshProUGUI targetText
  Image StatImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LifeInfographicStatDynamicRow
Наследуется от: LifeInfographicStat
Поля:
  RustText StatName
Свойства:
Методы:
  void SetStatName(Phrase phrase)
  void .ctor()
--------------------------------------------------
Класс: LifeInfographicStatWeapon
Наследуется от: MonoBehaviour
Поля:
  RustText WeaponName
  RustText ShotsFired
  RustText ShotsHit
  RustText ShotsPercent
  Image WeaponIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LookatHealth
Наследуется от: MonoBehaviour
Поля:
  bool Enabled
  GameObject container
  Text textHealth
  Text textStability
  Image healthBar
  Image healthBarBG
  Color barBGColorNormal
  Color barBGColorUnstable
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LookAtIOEnt
Наследуется от: MonoBehaviour
Поля:
  Text objectTitle
  RectTransform slotToolTip
  Text slotTitle
  Text slotConnection
  Text slotPower
  Text powerText
  Text passthroughText
  Text chargeLeftText
  Text capacityText
  Text maxOutputText
  Text activeOutputText
  IOEntityUISlotEntry[] inputEntries
  IOEntityUISlotEntry[] outputEntries
  Color NoPowerColor
  GameObject GravityWarning
  GameObject DistanceWarning
  GameObject LineOfSightWarning
  GameObject TooManyInputsWarning
  GameObject TooManyOutputsWarning
  GameObject BuildPrivilegeWarning
  CanvasGroup group
  HandleSet[] handleSets
  RectTransform clearNotification
  CanvasGroup wireInfoGroup
  Text wireLengthText
  Text wireClipsText
  Text errorReasonTextTooFar
  Text errorReasonTextNoSurface
  Text errorShortCircuit
  RawImage ConnectionTypeIcon
  Texture ElectricSprite
  Texture FluidSprite
  Texture IndustrialSprite
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LookAtPlant
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup group
  UIGenesDisplay GeneDisplay
  UIGenesDisplay GeneDisplay2
  Text TextPlant
  Image PlantIcon
  InfoBar Age
  InfoBar Stage
  InfoBar WaterIntake
  Text TextYieldLabel
  InfoBar Yield
  InfoBar Health
  InfoBar Light
  InfoBar WaterSaturation
  InfoBar Ground
  InfoBar Temperature
  InfoBar Overall
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LookAtPlanter
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup group
  Text waterText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LookatTooltip
Наследуется от: MonoBehaviour
Поля:
  bool Enabled
  BaseEntity currentlyLookingAt
  RustText textLabel
  Image icon
  CanvasGroup canvasGroup
  CanvasGroup infoGroup
  CanvasGroup minimiseGroup
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: LookAtWeaponRack
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup weaponInfoGroup
  CanvasGroup rotationGroup
  Text TextWeapon
  Image IconWeapon
  Image IconAmmo
  RawImage IconHorizontal
  RawImage IconVertical
  InfoBar AmmoBar
  InfoBar ConditionBar
  Color ValidRotationColor
  Color InvalidRotationColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AboutYou
Наследуется от: BaseMonoBehaviour
Поля:
  Text username
  RawImage avatar
  Text subtitle
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CompanionSetupScreen
Наследуется от: SingletonComponent`1<CompanionSetupScreen>
Поля:
  string PairedKey
  GameObject instructionsBody
  GameObject detailsPanel
  GameObject loadingMessage
  GameObject errorMessage
  GameObject notSupportedMessage
  GameObject disabledMessage
  GameObject enabledMessage
  GameObject refreshButton
  GameObject enableButton
  GameObject disableButton
  GameObject pairButton
  RustText serverName
  RustButton helpButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConnectionScreen
Наследуется от: SingletonComponent`1<ConnectionScreen>
Поля:
  Text statusText
  GameObject disconnectButton
  GameObject retryButton
  ServerBrowserInfo browserInfo
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DemoItem
Наследуется от: RustButton
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Demos
Наследуется от: SingletonComponent`1<Demos>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DeveloperUI
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DisableWithMainMenu
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ItemStore
Наследуется от: SingletonComponent`1<ItemStore>
Поля:
  Phrase CartEmptyPhrase
  Phrase CartSingularPhrase
  Phrase CartPluralPhrase
  GameObject ItemPrefab
  RectTransform LimitedItemParent
  RectTransform GeneralItemParent
  List`1<IPlayerItemDefinition> Cart
  ItemStoreItemInfoModal ItemStoreInfoModal
  GameObject BuyingModal
  ItemStoreBuyFailedModal ItemStoreBuyFailedModal
  ItemStoreBuySuccessModal ItemStoreBuySuccessModal
  SoundDefinition AddToCartSound
  RustText CartButtonLabel
  RustText QuantityValue
  RustText TotalValue
Свойства:
Методы:
  int GetItemCount()
  void SetItemData(int i, GameObject obj)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ItemStoreBuyFailedModal
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Show(ulong orderid)
  void Hide()
  void .ctor()
  void <Hide>b__1_0()
--------------------------------------------------
Класс: ItemStoreBuySuccessModal
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Show(ulong orderId)
  void Hide()
  void .ctor()
  void <Hide>b__1_0()
--------------------------------------------------
Класс: ItemStoreCartItem
Наследуется от: MonoBehaviour
Поля:
  int Index
  TextMeshProUGUI Name
  TextMeshProUGUI Price
Свойства:
Методы:
  void Init(int index, IPlayerItemDefinition def)
  void .ctor()
--------------------------------------------------
Класс: ItemStoreItem
Наследуется от: MonoBehaviour
Поля:
  HttpImage Icon
  RustText Name
  TextMeshProUGUI Price
  RustText ItemName
  GameObject InCartTag
  IPlayerItemDefinition item
Свойства:
Методы:
  void Init(IPlayerItemDefinition item, bool inCart)
  void .ctor()
--------------------------------------------------
Класс: ItemStoreItemInfoModal
Наследуется от: MonoBehaviour
Поля:
  HttpImage Icon
  TextMeshProUGUI Name
  TextMeshProUGUI Price
  TextMeshProUGUI Description
  IPlayerItemDefinition item
Свойства:
Методы:
  void Show(IPlayerItemDefinition item)
  void Hide()
  void .ctor()
  void <Hide>b__6_0()
--------------------------------------------------
Класс: LanguageSelection
Наследуется от: MonoBehaviour
Поля:
  GameObject buttonContainer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LoadingScreen
Наследуется от: SingletonComponent`1<LoadingScreen>
Поля:
  bool <WantsSkip>k__BackingField
  string <Text>k__BackingField
  CanvasRenderer panel
  TextMeshProUGUI title
  TextMeshProUGUI subtitle
  Button skipButton
  Button cancelButton
  GameObject performanceWarning
  AudioSource music
  RectTransform serverInfo
  RustText serverName
  RustText serverPlayers
  RustLayout serverModeSection
  RustText serverMode
  RustText serverMap
  RustLayout serverTagsSection
  ServerBrowserTagList serverTags
  RectTransform demoInfo
  RustText demoName
  RustText demoLength
  RustText demoDate
  RustText demoMap
  RawImage backgroundImage
  Texture2D defaultBackground
  GameObject pingWarning
  RustText pingWarningText
  int minPingDiffToShowWarning
  float pingDiffFactorToShowWarning
  int requiredPingSampleCount
  GameObject blackout
Свойства:
  bool isOpen
  bool WantsSkip
  string Text
Методы:
  bool get_isOpen()
  bool get_WantsSkip()
  void set_WantsSkip(bool value)
  void set_Text(string value)
  string get_Text()
  void Update(string strType)
  void Update(string strType, string strSubtitle)
  void .ctor()
--------------------------------------------------
Класс: MainMenuSystem
Наследуется от: SingletonComponent`1<MainMenuSystem>
Поля:
  bool isOpen
  Action OnOpenStateChanged
  RustButton SessionButton
  GameObject SessionPanel
  GameObject NewsStoriesAlert
  GameObject ItemStoreAlert
  GameObject CompanionAlert
  GameObject DemoBrowser
  GameObject DemoBrowserButton
  GameObject SuicideButton
  GameObject EndDemoButton
  GameObject ReflexModeOption
  GameObject ReflexLatencyMarkerOption
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MenuBackgroundVideo
Наследуется от: SingletonComponent`1<MenuBackgroundVideo>
Поля:
  String[] videos
  int index
  bool errored
Свойства:
Методы:
  void Awake()
  void OnVideoError(VideoPlayer source, string message)
  void LoadVideoList()
  void Update()
  void NextVideo()
  IEnumerator ReadyVideo()
  void .ctor()
--------------------------------------------------
Класс: MenuServerPanel
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: NewsParagraph
Наследуется от: MonoBehaviour
Поля:
  RustText Text
  List`1<string> Links
Свойства:
Методы:
  void OnPointerClick(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: NewsSource
Наследуется от: MonoBehaviour
Поля:
  Regex BbcodeParse
  RustText title
  RustText date
  RustText authorName
  HttpImage coverImage
  RectTransform container
  Button button
  RustText paragraphTemplate
  HttpImage imageTemplate
  HttpImage youtubeTemplate
  String[] BulletSeparators
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void SetStory(Story story)
  void ParseBbcode(ParagraphBuilder& currentParagraph, string bbcode, String& firstImage, int depth)
  String[] GetBulletPoints(string listContent)
  void AppendParagraph(ParagraphBuilder& currentParagraph)
  void AppendImage(ParagraphBuilder& currentParagraph, string url)
  void AppendYouTube(ParagraphBuilder& currentParagraph, string videoId)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SteamNewsSource
Наследуется от: object
Поля:
  Story[] Stories
Свойства:
Методы:
  IEnumerator GetStories()
--------------------------------------------------
Класс: ApplyTweakUIChanges
Наследуется от: MonoBehaviour
Поля:
  Button ApplyButton
  TweakUIBase[] Options
Свойства:
Методы:
  void OnEnable()
  void Apply()
  void SetDirty()
  void SetClean()
  void .ctor()
--------------------------------------------------
Класс: KeyBindUI
Наследуется от: MonoBehaviour
Поля:
  GameObject blockingCanvas
  Button btnA
  Button btnB
  string bindString
  bool <IsBinding>k__BackingField
Свойства:
  bool IsBinding
Методы:
  bool get_IsBinding()
  void set_IsBinding(bool value)
  void .ctor()
--------------------------------------------------
Класс: ToggleHUDLayer
Наследуется от: MonoBehaviour
Поля:
  Toggle toggleControl
  TextMeshProUGUI textControl
  string hudComponentName
Свойства:
Методы:
  void OnEnable()
  void OnToggleChanged()
  void .ctor()
--------------------------------------------------
Класс: ToggleLayer
Наследуется от: MonoBehaviour
Поля:
  Toggle toggleControl
  TextMeshProUGUI textControl
  LayerSelect layer
Свойства:
Методы:
  void OnEnable()
  void OnToggleChanged()
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ToggleResolution
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ToggleTerrainRenderer
Наследуется от: MonoBehaviour
Поля:
  Toggle toggleControl
  Text textControl
Свойства:
Методы:
  void OnEnable()
  void OnToggleChanged()
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: ToggleTerrainTrees
Наследуется от: MonoBehaviour
Поля:
  Toggle toggleControl
  Text textControl
Свойства:
Методы:
  void OnEnable()
  void OnToggleChanged()
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: TweakUI
Наследуется от: SingletonComponent`1<TweakUI>
Поля:
  bool isOpen
Свойства:
Методы:
  void Update()
  bool CanToggle()
  void SetVisible(bool b)
  void .ctor()
--------------------------------------------------
Класс: TweakUIBase
Наследуется от: MonoBehaviour
Поля:
  string convarName
  bool ApplyImmediatelyOnChange
  Command conVar
Свойства:
Методы:
  void Awake()
  void Init()
  void OnApplyClicked()
  void UnapplyChanges()
  void OnConVarChanged(Command obj)
  void ResetToConvar()
  void SetConvarValue()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: TweakUIDropdown
Наследуется от: TweakUIBase
Поля:
  RustText Current
  Image BackgroundImage
  RustButton Opener
  RectTransform Dropdown
  RectTransform DropdownContainer
  GameObject DropdownItemPrefab
  NameValue[] nameValues
  bool assignImageColor
  UnityEvent onValueChanged
  int currentValue
Свойства:
Методы:
  void Init()
  void OnEnable()
  void UpdateDropdownOptions()
  void OnValueChanged()
  void OnDropdownOpen()
  void ChangeValue(int index)
  void SetConvarValue()
  void ResetToConvar()
  void ShowValue(string value)
  void .ctor()
--------------------------------------------------
Класс: TweakUIMultiSelect
Наследуется от: TweakUIBase
Поля:
  ToggleGroup toggleGroup
Свойства:
Методы:
  void Init()
  void OnEnable()
  void OnChanged()
  void UpdateToggleGroup()
  void UpdateConVar()
  void .ctor()
--------------------------------------------------
Класс: TweakUISlider
Наследуется от: TweakUIBase
Поля:
  Slider sliderControl
  TextMeshProUGUI textControl
  string lastConVarChanged
  TimeSince timeSinceLastConVarChange
Свойства:
Методы:
  void Init()
  void OnEnable()
  void OnChanged()
  void SetConvarValue()
  void ResetToConvar()
  void RefreshSliderDisplay(float value)
  void .ctor()
--------------------------------------------------
Класс: TweakUIToggle
Наследуется от: TweakUIBase
Поля:
  Toggle toggleControl
  bool inverse
  string lastConVarChanged
  TimeSince timeSinceLastConVarChange
Свойства:
Методы:
  void Init()
  void OnEnable()
  void OnToggleChanged()
  void SetConvarValue()
  void ResetToConvar()
  void .ctor()
--------------------------------------------------
Класс: ServerBrowser
Наследуется от: MonoBehaviour
Поля:
  string orderBy
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserCategory
Наследуется от: MonoBehaviour
Поля:
  LocalizeText serverCountText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserEx
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetPingString(ServerInfo server)
--------------------------------------------------
Класс: ServerBrowserInfo
Наследуется от: SingletonComponent`1<ServerBrowserInfo>
Поля:
  bool isMain
  Text serverName
  Text serverMeta
  Text serverText
  Button viewWebpage
  Button refresh
  Nullable`1<ServerInfo> currentServer
  HttpImage headerImage
  HttpImage logoImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserInfoNexus
Наследуется от: SingletonComponent`1<ServerBrowserInfoNexus>
Поля:
  GameObject loadingIndicator
  RustText serverName
  RustText serverDesc
  RustText playerCount
  RustText zoneCount
  RustText lastWiped
  HttpImage coverImage
  HttpImage logoImage
  RectTransform zoneListParent
  GameObjectRef zoneListItem
  RustButton joinServer
  RustButton viewWebpage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserInfoNexusZone
Наследуется от: MonoBehaviour
Поля:
  RustButton button
  GameObject checkbox
  GameObject checkboxIndicator
  RectTransform currentServerIndicator
  RustText zoneName
  RustText ping
  RustText playerCount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserItem
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI serverName
  RustFlexText mapName
  TextMeshProUGUI playerCount
  TextMeshProUGUI ping
  Toggle favourited
  ServerBrowserTagList serverTagList
  TextMeshProUGUI changeset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserItemNexus
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI serverName
  RustFlexText mapName
  TextMeshProUGUI playerCount
  Toggle favourited
  ServerBrowserTagList serverTagList
  TextMeshProUGUI changeset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserList
Наследуется от: ServerBrowserListBase
Поля:
  bool startActive
  Transform listTransform
  int refreshOrder
  bool UseOfficialServers
  VirtualScroll VirtualScroll
  Rules[] rules
  bool hideOfficialServers
  bool excludeEmptyServersUsingQuery
  bool alwaysIncludeEmptyServers
  bool clampPlayerCountsToTrustedValues
  QueryType queryType
  string VersionTag
  ServerKeyvalues[] keyValues
Свойства:
Методы:
  int GetItemCount()
  void OnVisualUpdate(int i, GameObject obj)
  void SetItemData(int i, GameObject obj)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ServerBrowserListBase
Наследуется от: BaseMonoBehaviour
Поля:
  ServerBrowserCategory categoryButton
  string sortOrder
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserListNexus
Наследуется от: ServerBrowserListBase
Поля:
  VirtualScroll VirtualScroll
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NexusEx
Наследуется от: Nexus
Поля:
  Char[] SplitComma
  string <Key>k__BackingField
  HashSet`1<string> <TagsSet>k__BackingField
Свойства:
  string Key
  HashSet`1<string> TagsSet
Методы:
  string get_Key()
  HashSet`1<string> get_TagsSet()
  void .ctor(string endpoint, Nexus nexus)
  void .cctor()
--------------------------------------------------
Класс: ServerBrowserTag
Наследуется от: MonoBehaviour
Поля:
  string serverTag
  RustButton button
Свойства:
  bool IsActive
Методы:
  bool get_IsActive()
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserTagFilters
Наследуется от: MonoBehaviour
Поля:
  UnityEvent TagFiltersChanged
  ServerBrowserTagGroup[] _groups
  List`1<bool> _previousState
Свойства:
Методы:
  void Start()
  void DeselectAll()
  void GetTags(List`1& searchTagGroups, HashSet`1& excludeTags)
  void .ctor()
  void <Start>b__3_0()
--------------------------------------------------
Класс: ServerBrowserTagGroup
Наследуется от: MonoBehaviour
Поля:
  bool isExclusive
  ServerBrowserTag[] tags
Свойства:
Методы:
  void Initialize()
  void Awake()
  bool AnyActive()
  void Refresh(HashSet`1<string> serverTags, Int32& tagsEnabled, int maxTags)
  void .ctor()
--------------------------------------------------
Класс: ServerBrowserTagList
Наследуется от: MonoBehaviour
Поля:
  int maxTagsToShow
  ServerBrowserTagGroup[] _groups
Свойства:
Методы:
  void Initialize()
  void Awake()
  bool Refresh(HashSet`1<string> serverTags)
  void .ctor()
--------------------------------------------------
Класс: ServerHistory
Наследуется от: MonoBehaviour
Поля:
  ServerHistoryItem prefab
  GameObject panelList
  IServerQuery Request
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ServerHistoryItem
Наследуется от: MonoBehaviour
Поля:
  ServerInfo serverInfo
  Text serverName
  Text players
  Text lastJoinDate
  UInt32 order
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnreadMessages
Наследуется от: SingletonComponent`1<UnreadMessages>
Поля:
  StyleAsset AllRead
  StyleAsset Unread
  RustButton Button
  GameObject UnreadTextObject
  RustText UnreadText
  GameObject MessageList
  GameObject MessageListContainer
  GameObject MessageListEmpty
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WorkshopMainMenu
Наследуется от: SingletonComponent`1<WorkshopMainMenu>
Поля:
  Phrase loading_workshop
  Phrase loading_workshop_setup
  Phrase loading_workshop_skinnables
  Phrase loading_workshop_item
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: MissionsHUD
Наследуется от: SingletonComponent`1<MissionsHUD>
Поля:
  SoundDefinition listComplete
  SoundDefinition itemComplete
  SoundDefinition popup
  Canvas Canvas
  Text titleText
  GameObject timerObject
  RustText timerText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MissionsHUDToDo
Наследуется от: BaseMonoBehaviour
Поля:
  Text text
  RectTransform checkIcon
  RectTransform checkBox
  Color AliveColor
  Color DeadColor
  Color HighlightColor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: NoRespawnIcon
Наследуется от: FacepunchBehaviour
Поля:
  CanvasGroup noRespawnWarning
  GameObject noRespawnWarningGO
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ObjectRotation
Наследуется от: MonoBehaviour
Поля:
  Camera cam
  bool ignoreNeedsKeyboard
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OpenURL
Наследуется от: MonoBehaviour
Поля:
  bool OpenWebURL
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PaintableImageGrid
Наследуется от: UIBehaviour
Поля:
  UIPaintableImage templateImage
  int cols
  int rows
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIPaintableImage
Наследуется от: MonoBehaviour
Поля:
  RawImage image
  int texSize
  Color clearColor
  FilterMode filterMode
  bool mipmaps
Свойства:
  RectTransform rectTransform
Методы:
  RectTransform get_rectTransform()
  void .ctor()
--------------------------------------------------
Класс: UIParticle
Наследуется от: BaseMonoBehaviour
Поля:
  Vector2 LifeTime
  Vector2 Gravity
  Vector2 InitialX
  Vector2 InitialY
  Vector2 InitialScale
  Vector2 InitialDelay
  Vector2 ScaleVelocity
  Gradient InitialColor
  float lifetime
  float gravity
  Vector2 velocity
  float scaleVelocity
Свойства:
Методы:
  void Add(UIParticle particleSource, RectTransform spawnPosition, RectTransform particleCanvas)
  void Start()
  void Update()
  void Die()
  void .ctor()
--------------------------------------------------
Класс: PerformanceText
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI text
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PieMenu
Наследуется от: UIBehaviour
Поля:
  PieMenu Instance
  Image middleBox
  PieShape pieBackgroundBlur
  PieShape pieBackground
  PieShape pieSelection
  GameObject pieOptionPrefab
  GameObject optionsCanvas
  MenuOption[] options
  GameObject scaleTarget
  GameObject arrowLeft
  GameObject arrowRight
  float sliceGaps
  float outerSize
  float innerSize
  float iconSize
  float startRadius
  float radiusSize
  Image middleImage
  TextMeshProUGUI middleTitle
  TextMeshProUGUI middleDesc
  TextMeshProUGUI middleRequired
  Color colorIconActive
  Color colorIconHovered
  Color colorIconDisabled
  Color colorBackgroundDisabled
  SoundDefinition clipOpen
  SoundDefinition clipCancel
  SoundDefinition clipChanged
  SoundDefinition clipSelected
  MenuOption defaultOption
  bool isClosing
  CanvasGroup canvasGroup
  bool <IsOpen>k__BackingField
  Material IconMaterial
  MenuOption selectedOption
  Color pieSelectionColor
  Color middleImageColor
  MenuOption longHoldOption
  AnimationCurve easePunch
Свойства:
  bool IsOpen
Методы:
  bool get_IsOpen()
  void set_IsOpen(bool value)
  void Start()
  void Clear()
  void AddOption(MenuOption option)
  void FinishAndOpen()
  void OnEnable()
  void SetDefaultOption()
  void PlayOpenSound()
  void PlayCancelSound()
  void Close(bool success)
  void Update()
  void Rebuild()
  void UpdateInteraction(bool allowLerp)
  bool DoSelect()
  void RunLongHoldAction(BasePlayer player)
  void DoPrev()
  void DoNext()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UISound
Наследуется от: object
Поля:
  AudioSource source
Свойства:
Методы:
  AudioSource GetAudioSource()
  void Play(AudioClip clip, float volume)
--------------------------------------------------
Класс: PieOption
Наследуется от: MonoBehaviour
Поля:
  PieShape background
  Image imageIcon
  Image overlayIcon
Свойства:
  float midRadius
  float sliceSize
Методы:
  float get_midRadius()
  float get_sliceSize()
  void UpdateOption(float startSlice, float sliceSize, float border, string optionTitle, float outerSize, float innerSize, float imageSize, Sprite sprite, bool showOverlay)
  void .ctor()
--------------------------------------------------
Класс: PieShape
Наследуется от: Graphic
Поля:
  float outerSize
  float innerSize
  float startRadius
  float endRadius
  float border
  bool debugDrawing
Свойства:
Методы:
  void OnPopulateMesh(VertexHelper vbo)
  void .ctor()
--------------------------------------------------
Класс: PingManager
Наследуется от: ListComponent`1<PingManager>
Поля:
  GameObjectRef PingWidgetRef
  RectTransform PingParent
  RectTransform TeamPingParent
  CanvasGroup AlphaCanvas
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PingWidget
Наследуется от: MonoBehaviour
Поля:
  RectTransform MoveTransform
  RectTransform ScaleTransform
  Image InnerImage
  Image OuterImage
  GameObject TeamLeaderRoot
  GameObject CancelHoverRoot
  SoundDefinition PingDeploySoundHostile
  SoundDefinition PingDeploySoundGoTo
  SoundDefinition PingDeploySoundDollar
  SoundDefinition PingDeploySoundLoot
  SoundDefinition PingDeploySoundNode
  SoundDefinition PingDeploySoundGun
  CanvasGroup FadeCanvas
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CameraEx
Наследуется от: MonoBehaviour
Поля:
  bool overrideAmbientLight
  AmbientMode ambientMode
  Color ambientGroundColor
  Color ambientEquatorColor
  Color ambientLight
  float ambientIntensity
  ReflectionProbe reflectionProbe
  Color old_ambientLight
  Color old_ambientGroundColor
  Color old_ambientEquatorColor
  float old_ambientIntensity
  AmbientMode old_ambientMode
  float aspect
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SegmentMaskPositioning
Наследуется от: MonoBehaviour
Поля:
  PlayerModel source
  GameObject headMask
  GameObject chestMask
  GameObject legsMask
  float xOffset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: uiPlayerPreview
Наследуется от: SingletonComponent`1<uiPlayerPreview>
Поля:
  Camera previewCamera
  PlayerModel playermodel
  GameObject wantedSnapshotEffectPosterRoot
  GameObject wantedSnapshotEffectPolaroidRoot
  SegmentMaskPositioning segmentMask
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIPlayerPreviewControls
Наследуется от: SingletonComponent`1<UIPlayerPreviewControls>
Поля:
  float RotationSpeed
  float RotationLerpSpeed
  float RotationStopLerpSpeed
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: PowerBar
Наследуется от: MonoBehaviour
Поля:
  PowerBar Instance
  Image powerInner
  float fullSize
  CanvasGroup group
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIInvertedMaskImage
Наследуется от: Image
Поля:
  Material cachedMaterial
Свойства:
  Material materialForRendering
Методы:
  Material get_materialForRendering()
  void .ctor()
--------------------------------------------------
Класс: ProgressBar
Наследуется от: UIBehaviour
Поля:
  ProgressBar Instance
  Action`1<BasePlayer> action
  float timeFinished
  float timeCounter
  GameObject scaleTarget
  Image progressField
  Image iconField
  Text leftField
  Text rightField
  SoundDefinition clipOpen
  SoundDefinition clipCancel
  bool isOpen
Свойства:
  bool InstanceIsOpen
Методы:
  bool get_InstanceIsOpen()
  void .ctor()
--------------------------------------------------
Класс: ProgressBarUI
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: RandomObjectEnableOnEnable
Наследуется от: MonoBehaviour
Поля:
  GameObject[] objects
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: RecordingBars
Наследуется от: MonoBehaviour
Поля:
  Image BorderImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RecordingSaved
Наследуется от: SingletonComponent`1<RecordingSaved>
Поля:
  RustText Label
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RepairCostIndicator
Наследуется от: SingletonComponent`1<RepairCostIndicator>
Поля:
  RepairCostIndicatorRow[] Rows
  CanvasGroup Fader
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RepairCostIndicatorRow
Наследуется от: MonoBehaviour
Поля:
  RustText ItemName
  Image ItemSprite
  RustText Amount
  RectTransform FillRect
  Image BackgroundImage
  Color OkColour
  Color MissingColour
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Scoreboard
Наследуется от: MonoBehaviour
Поля:
  Scoreboard instance
  RustText scoreboardTitle
  RectTransform scoreboardRootContents
  RustText scoreLimitText
  GameObject teamPrefab
  GameObject columnPrefab
  GameObject dividerPrefab
  Color localPlayerColor
  Color otherPlayerColor
  TeamColumn[] teamColumns
  GameObject[] TeamPanels
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ScrollRectDisable
Наследуется от: ListComponent`1<ScrollRectDisable>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ScrollRectZoom
Наследуется от: MonoBehaviour
Поля:
  ScrollRectEx scrollRect
  float zoom
  float max
  float min
  bool mouseWheelZoom
  float scrollAmount
Свойства:
  RectTransform rectTransform
Методы:
  RectTransform get_rectTransform()
  void OnEnable()
  void OnScroll(PointerEventData data)
  void SetZoom(float z, bool expZoom)
  void .ctor()
--------------------------------------------------
Класс: SleepingBagButton
Наследуется от: MonoBehaviour
Поля:
  GameObject TimeLockRoot
  GameObject LockRoot
  GameObject UnavailableRoot
  Tooltip unavailableTooltip
  Phrase occupied
  Phrase underwater
  Phrase noRespawnZone
  Button ClickButton
  TextMeshProUGUI BagName
  TextMeshProUGUI ZoneName
  TextMeshProUGUI LockTime
  Image Icon
  Sprite SleepingBagSprite
  Sprite BedSprite
  Sprite BeachTowelSprite
  Sprite CamperSprite
  Image CircleRim
  Image CircleFill
  Image Background
  RustButton DeleteButton
  Image ConfirmSlider
  Phrase toastHoldToUnclaimBag
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SteamFriendsList
Наследуется от: MonoBehaviour
Поля:
  RectTransform targetPanel
  SteamUserButton userButton
  bool IncludeFriendsList
  bool IncludeRecentlySeen
  bool IncludeLastAttacker
  bool IncludeRecentlyPlayedWith
  bool ShowTeamFirst
  bool HideSteamIdsInStreamerMode
  bool IncludeContacts
  bool RefreshOnEnable
  onFriendSelectedEvent onFriendSelected
  Func`2<ulong, bool> shouldShowPlayer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: SteamUserButton
Наследуется от: MonoBehaviour
Поля:
  RustText steamName
  RustText steamInfo
  RawImage avatar
  Color textColorInGame
  Color textColorOnline
  Color textColorNormal
  ulong <SteamId>k__BackingField
  string <Username>k__BackingField
Свойства:
  ulong SteamId
  string Username
Методы:
  ulong get_SteamId()
  void set_SteamId(ulong value)
  string get_Username()
  void set_Username(string value)
  void .ctor()
--------------------------------------------------
Класс: TabToggle
Наследуется от: MonoBehaviour
Поля:
  Transform TabHolder
  Transform ContentHolder
  bool FadeIn
  bool FadeOut
Свойства:
Методы:
  void Awake()
  void SwitchTo(Button sourceTab)
  void Hide(GameObject go)
  void Show(GameObject go)
  void .ctor()
--------------------------------------------------
Класс: TeamMemberElement
Наследуется от: MonoBehaviour
Поля:
  RustText nameText
  RawImage icon
  Color onlineColor
  Color offlineColor
  Color deadColor
  Color woundedColor
  GameObject hoverOverlay
  RawImage memberIcon
  RawImage leaderIcon
  RawImage deadIcon
  RawImage woundedIcon
  int teamIndex
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TeamUI
Наследуется от: MonoBehaviour
Поля:
  Phrase invitePhrase
  RectTransform MemberPanel
  GameObject memberEntryPrefab
  TeamMemberElement[] elements
  GameObject NoTeamPanel
  GameObject TeamPanel
  GameObject LeaveTeamButton
  GameObject InviteAcceptPanel
  TextMeshProUGUI inviteText
  bool dirty
  ulong pendingTeamID
  string pendingTeamLeaderName
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: TextEntryCookie
Наследуется от: MonoBehaviour
Поля:
Свойства:
  InputField control
Методы:
  InputField get_control()
  void OnEnable()
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: TimeSlider
Наследуется от: MonoBehaviour
Поля:
  Slider slider
Свойства:
Методы:
  void Start()
  void Update()
  void OnValue(float f)
  void .ctor()
--------------------------------------------------
Класс: ToggleGroupCookie
Наследуется от: MonoBehaviour
Поля:
Свойства:
  ToggleGroup group
Методы:
  ToggleGroup get_group()
  void OnEnable()
  void OnDisable()
  void SetupListeners()
  void OnToggleChanged(bool b)
  void .ctor()
--------------------------------------------------
Класс: ToolsHUDUI
Наследуется от: MonoBehaviour
Поля:
  GameObject prefab
  Transform parent
  bool initialised
Свойства:
Методы:
  void OnEnable()
  void Init()
  void AddToggleObj(string trName, string labelText)
  void SelectAll()
  void SelectNone()
  void .ctor()
--------------------------------------------------
Класс: Tooltip
Наследуется от: BaseMonoBehaviour
Поля:
  TooltipContainer Current
  string Text
  GameObject TooltipObject
  string token
Свойства:
  string english
Методы:
  string get_english()
  void .ctor()
--------------------------------------------------
Класс: TooltipContainer
Наследуется от: MonoBehaviour
Поля:
  Transform ScaleRoot
  RustText TooltipText
  RectTransform OverrideLayoutRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TooltipContainer_Emoji
Наследуется от: TooltipContainer
Поля:
  TmProEmojiRedirector EmojiRedirector
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TypeThroughButton
Наследуется от: Button
Поля:
  InputField typingTarget
  Event _processingEvent
Свойства:
Методы:
  void OnUpdateSelected(BaseEventData eventData)
  IEnumerator DelayedActivateTextField(Event e)
  void .ctor()
--------------------------------------------------
Класс: UIAutoPanelCloser
Наследуется от: MonoBehaviour
Поля:
  UIDialog Dialog
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIBackgroundBlur
Наследуется от: ListComponent`1<UIBackgroundBlur>
Поля:
  float amount
Свойства:
  float currentMax
Методы:
  float get_currentMax()
  void .ctor()
--------------------------------------------------
Класс: UIBlackoutOverlay
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup group
  Dictionary`2<blackoutType, UIBlackoutOverlay> instances
  blackoutType overlayType
  bool overrideCanvasScaling
  float referenceScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UICameraOverlay
Наследуется от: SingletonComponent`1<UICameraOverlay>
Поля:
  Phrase FocusOffText
  Phrase FocusAutoText
  Phrase FocusManualText
  CanvasGroup CanvasGroup
  RustText FocusModeLabel
Свойства:
Методы:
  void Show()
  void Hide()
  void SetFocusMode(CameraFocusMode mode)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: UIConversationScreen
Наследуется от: SingletonComponent`1<UIConversationScreen>
Поля:
  NeedsCursor needsCursor
  RectTransform conversationPanel
  RustText conversationSpeechBody
  RustText conversationProviderName
  RustButton[] responseButtons
  RectTransform letterBoxTop
  RectTransform letterBoxBottom
  CanvasGroup canvasGroup
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIDeathScreen
Наследуется от: SingletonComponent`1<UIDeathScreen>
Поля:
  LifeInfographic previousLifeInfographic
  Animator screenAnimator
  bool fadeIn
  Button ReportCheatButton
  MapView View
  List`1<SleepingBagButton> sleepingBagButtons
  GameObject loadingIndicator
  RespawnColourScheme[] RespawnColourSchemes
  GameObject RespawnScrollGradient
  ScrollRect RespawnScrollRect
  ExpandedLifeStats ExpandedStats
  CanvasGroup StreamerModeContainer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIEscapeCapture
Наследуется от: ListComponent`1<UIEscapeCapture>
Поля:
  UnityEvent onEscape
Свойства:
Методы:
  bool EscapePressed()
  void .ctor()
--------------------------------------------------
Класс: UIFogOverlay
Наследуется от: MonoBehaviour
Поля:
  UIFogOverlay Instance
  CanvasGroup group
  Color baseColor
  Image overlayImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIGene
Наследуется от: MonoBehaviour
Поля:
  GameObject Child
  Color PositiveColour
  Color NegativeColour
  Color PositiveTextColour
  Color NegativeTextColour
  Image ImageBG
  Text TextGene
Свойства:
Методы:
  void Init(GrowableGene gene)
  void InitPrevious(GrowableGene gene)
  void Hide()
  void Show()
  void .ctor()
--------------------------------------------------
Класс: UIGenesDisplay
Наследуется от: MonoBehaviour
Поля:
  UIGene[] GeneUI
  Text[] TextLinks
  Text[] TextDiagLinks
Свойства:
Методы:
  void Init(GrowableGenes genes)
  void InitDualRow(GrowableGenes genes, bool firstRow)
  void InitFirstRow(GrowableGenes genes)
  void InitSecondRow(GrowableGenes genes)
  void ShowDiagLink(int index, float rotation, GrowableGene nextGene)
  void .ctor()
--------------------------------------------------
Класс: UIIngame
Наследуется от: SingletonComponent`1<UIIngame>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIPixelDownscale
Наследуется от: MonoBehaviour
Поля:
  CanvasScaler CanvasScaler
Свойства:
Методы:
  void Awake()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: UIPrefab
Наследуется от: MonoBehaviour
Поля:
  GameObject prefabSource
  GameObject createdGameObject
Свойства:
Методы:
  void Awake()
  void SetVisible(bool visible)
  void .ctor()
--------------------------------------------------
Класс: UIRoot
Наследуется от: MonoBehaviour
Поля:
  GraphicRaycaster[] graphicRaycasters
  Canvas overlayCanvas
Свойства:
Методы:
  void ToggleRaycasters(bool state)
  void Awake()
  void Start()
  void Update()
  void Refresh()
  void .ctor()
--------------------------------------------------
Класс: UIRootPixel
Наследуется от: UIRoot
Поля:
Свойства:
Методы:
  void Refresh()
  void .ctor()
--------------------------------------------------
Класс: UIRootScaled
Наследуется от: UIRoot
Поля:
  UIRootScaled Instance
  bool OverrideReference
  Vector2 TargetReference
  CanvasScaler scaler
Свойства:
  Canvas DragOverlayCanvas
Методы:
  Canvas get_DragOverlayCanvas()
  void Awake()
  void Refresh()
  void .ctor()
--------------------------------------------------
Класс: UIScale
Наследуется от: MonoBehaviour
Поля:
  CanvasScaler scaler
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIScalerOverride
Наследуется от: MonoBehaviour
Поля:
  AnimationCurve scaleCurve
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIScopeOverlay
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup group
  UIScopeOverlay instance
  Image scopeImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IUIScreen
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UISleepingScreen
Наследуется от: SingletonComponent`1<UISleepingScreen>
Поля:
  CanvasGroup canvasGroup
  bool visible
Свойства:
Методы:
  void Awake()
  void SetVisible(bool b)
  void .ctor()
--------------------------------------------------
Класс: UISoundPlayer
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIVoiceIcon
Наследуется от: MonoBehaviour
Поля:
  Text nameText
  RawImage avatar
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UIWounded
Наследуется от: MonoBehaviour
Поля:
  CanvasGroup group
  Image chanceFill
  RustText chanceText
  Image timeRemainingFill
  RustText timeRemainingText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UI_LocalVoice
Наследуется от: PriorityListComponent`1<UI_LocalVoice>
Поля:
  CanvasGroup voiceCanvas
  CanvasGroup levelImage
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DragMe
Наследуется от: MonoBehaviour
Поля:
  DragMe dragging
  GameObject dragIcon
  object data
  string dragType
Свойства:
  Canvas TopCanvas
Методы:
  void OnBeginDrag(PointerEventData eventData)
  Canvas get_TopCanvas()
  void OnDrag(PointerEventData eventData)
  void OnEndDrag(PointerEventData eventData)
  void CancelDrag()
  void .ctor()
--------------------------------------------------
Класс: IDraggable
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: DragMeCustomParent
Наследуется от: DragMe
Поля:
  Canvas OverrideCanvas
  bool ShouldCancelOnDrop
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DropMe
Наследуется от: MonoBehaviour
Поля:
  String[] droppableTypes
Свойства:
Методы:
  void OnDrop(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: GridLayoutGroupNeat
Наследуется от: GridLayoutGroup
Поля:
Свойства:
Методы:
  float IdealCellWidth(float cellSize)
  void SetLayoutHorizontal()
  void SetLayoutVertical()
  void .ctor()
--------------------------------------------------
Класс: LocalizeText
Наследуется от: MonoBehaviour
Поля:
  string token
  string english
  string append
  SpecialMode specialMode
Свойства:
  string LanguageToken
  string LanguageEnglish
Методы:
  string get_LanguageToken()
  void set_LanguageToken(string value)
  string get_LanguageEnglish()
  void set_LanguageEnglish(string value)
  void .ctor()
--------------------------------------------------
Класс: NonDrawingGraphic
Наследуется от: Graphic
Поля:
Свойства:
Методы:
  void SetMaterialDirty()
  void SetVerticesDirty()
  void OnPopulateMesh(VertexHelper vh)
  void .ctor()
--------------------------------------------------
Класс: RightClickReceiver
Наследуется от: MonoBehaviour
Поля:
  UnityEvent ClickReceiver
Свойства:
Методы:
  void OnPointerClick(PointerEventData eventData)
  void .ctor()
--------------------------------------------------
Класс: ShowIfConvarEnabled
Наследуется от: MonoBehaviour
Поля:
  string Convar
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IVitalNotice
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: VitalInfo
Наследуется от: MonoBehaviour
Поля:
  HudElement Element
  Image InfoImage
  Vital VitalType
  TextMeshProUGUI text
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VitalNote
Наследуется от: MonoBehaviour
Поля:
  Vital VitalType
  FloatConditions showIf
  TextMeshProUGUI valueText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VitalNoteOxygen
Наследуется от: MonoBehaviour
Поля:
  float refreshTime
  TextMeshProUGUI valueText
  Animator animator
  Image airIcon
  RectTransform airIconTr
  Image backgroundImage
  Color baseColour
  Color badColour
  Image iconImage
  Color iconBaseColour
  Color iconBadColour
  bool show
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VitalRadial
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: BaseCommandBuffer
Наследуется от: MonoBehaviour
Поля:
  Dictionary`2<Camera, Dictionary`2<int, CommandBuffer>> cameras
Свойства:
Методы:
  CommandBuffer GetCommandBuffer(string name, Camera camera, CameraEvent cameraEvent)
  void CleanupCamera(string name, Camera camera, CameraEvent cameraEvent)
  void CleanupCommandBuffer(Camera camera, CameraEvent cameraEvent)
  void Cleanup()
  void .ctor()
--------------------------------------------------
Класс: BaseMonoBehaviour
Наследуется от: FacepunchBehaviour
Поля:
Свойства:
Методы:
  bool IsDebugging()
  string GetLogColor()
  void LogEntry(LogEntryType log, int level, string str, object arg1)
  void LogEntry(LogEntryType log, int level, string str, object arg1, object arg2)
  void LogEntry(LogEntryType log, int level, string str)
  void .ctor()
--------------------------------------------------
Класс: BaseScriptableObject
Наследуется от: ScriptableObject
Поля:
  UInt32 FilenameStringId
Свойства:
Методы:
  string LookupFileName()
  bool op_Equality(BaseScriptableObject a, BaseScriptableObject b)
  bool op_Inequality(BaseScriptableObject a, BaseScriptableObject b)
  int GetHashCode()
  bool Equals(object o)
  void .ctor()
--------------------------------------------------
Класс: ForceChildSingletonSetup
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: InspectorNameAttribute
Наследуется от: PropertyAttribute
Поля:
  string name
Свойства:
Методы:
  void .ctor(string name)
--------------------------------------------------
Класс: MinMax
Наследуется от: object
Поля:
  float x
  float y
Свойства:
Методы:
  void .ctor(float x, float y)
  float Random()
  float Lerp(float t)
  float Lerp(float a, float b, float t)
--------------------------------------------------
Класс: MinMaxAttribute
Наследуется от: PropertyAttribute
Поля:
  float min
  float max
Свойства:
Методы:
  void .ctor(float min, float max)
--------------------------------------------------
Класс: AmbientLightLOD
Наследуется от: FacepunchBehaviour
Поля:
  bool isDynamic
  float enabledRadius
  bool toggleFade
  float toggleFadeDuration
Свойства:
Методы:
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: BasePrefab
Наследуется от: BaseMonoBehaviour
Поля:
  UInt32 prefabID
  bool isClient
Свойства:
  bool isServer
Методы:
  bool get_isServer()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: CachedTransform`1
Наследуется от: ValueType
Поля:
  T component
  Vector3 position
  Quaternion rotation
  Vector3 localScale
Свойства:
  Matrix4x4 localToWorldMatrix
  Matrix4x4 worldToLocalMatrix
  Vector3 forward
  Vector3 up
  Vector3 right
Методы:
  void .ctor(T instance)
  void Apply()
  void RotateAround(Vector3 center, Vector3 axis, float angle)
  Matrix4x4 get_localToWorldMatrix()
  Matrix4x4 get_worldToLocalMatrix()
  Vector3 get_forward()
  Vector3 get_up()
  Vector3 get_right()
  bool op_Implicit(CachedTransform`1<T> instance)
--------------------------------------------------
Класс: CameraUpdateHook
Наследуется от: MonoBehaviour
Поля:
  Action PreCull
  Action PreRender
  Action PostRender
  Action RustCamera_PreRender
  float LastFrameFOV
Свойства:
Методы:
  void Awake()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ChildrenScreenshot
Наследуется от: MonoBehaviour
Поля:
  Vector3 offsetAngle
  int width
  int height
  float fieldOfView
  string folder
Свойства:
Методы:
  void CreateScreenshots()
  void PositionCamera(Camera cam, GameObject obj)
  void .ctor()
--------------------------------------------------
Класс: CommentComponent
Наследуется от: MonoBehaviour
Поля:
  string comment
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConvarComponent
Наследуется от: MonoBehaviour
Поля:
  bool runOnServer
  bool runOnClient
  List`1<ConvarEvent> List
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  bool ShouldRun()
  void .ctor()
--------------------------------------------------
Класс: ConvarWater
Наследуется от: MonoBehaviour
Поля:
  WaterSystem water
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: DistanceFlareLOD
Наследуется от: FacepunchBehaviour
Поля:
  bool isDynamic
  float minEnabledDistance
  float maxEnabledDistance
  bool toggleFade
  float toggleFadeDuration
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ExecComponent
Наследуется от: MonoBehaviour
Поля:
  string ExecToRun
Свойства:
Методы:
  void Run()
  void .ctor()
--------------------------------------------------
Класс: FoliageTrigger
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IgnoreCollision
Наследуется от: MonoBehaviour
Поля:
  Collider collider
Свойства:
Методы:
  void OnTriggerEnter(Collider other)
  void .ctor()
--------------------------------------------------
Класс: LayerCullDistance
Наследуется от: MonoBehaviour
Поля:
  string Layer
  float Distance
Свойства:
Методы:
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: LightLOD
Наследуется от: MonoBehaviour
Поля:
  float DistanceBias
  bool ToggleLight
  bool ToggleShadows
Свойства:
Методы:
  void OnValidate()
  void .ctor()
--------------------------------------------------
Класс: LightOccludee
Наследуется от: MonoBehaviour
Поля:
  float RadiusScale
  float MinTimeVisible
  bool IsDynamic
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: LoadBalancer
Наследуется от: SingletonComponent`1<LoadBalancer>
Поля:
  bool Paused
  float MinMilliseconds
  float MaxMilliseconds
  int MinBacklog
  int MaxBacklog
  Queue`1[] queues
  Stopwatch watch
Свойства:
Методы:
  void LateUpdate()
  int Count()
  void ProcessAll()
  void Enqueue(DeferredAction action)
  void CreateInstance()
  void .ctor()
--------------------------------------------------
Класс: ActionPriority
Наследуется от: Enum
Поля:
  int value__
  ActionPriority Highest
  ActionPriority High
  ActionPriority Medium
  ActionPriority Low
  ActionPriority Lowest
Свойства:
Методы:
--------------------------------------------------
Класс: DeferredAction
Наследуется от: object
Поля:
  Object sender
  Action action
  ActionPriority priority
  bool <Idle>k__BackingField
Свойства:
  bool Idle
  int Index
Методы:
  bool get_Idle()
  void set_Idle(bool value)
  int get_Index()
  void .ctor(Object sender, Action action, ActionPriority priority)
  void Action()
  void Invoke()
  bool op_Implicit(DeferredAction obj)
  void Invoke(Object sender, Action action, ActionPriority priority)
--------------------------------------------------
Класс: MaterialConfig
Наследуется от: ScriptableObject
Поля:
  ShaderParametersFloat[] Floats
  ShaderParametersColor[] Colors
  ShaderParametersTexture[] Textures
  String[] ScaleUV
  MaterialPropertyBlock properties
Свойства:
Методы:
  MaterialPropertyBlock GetMaterialPropertyBlock(Material mat, Vector3 pos, Vector3 scale)
  void .ctor()
--------------------------------------------------
Класс: MaterialSetup
Наследуется от: MonoBehaviour
Поля:
  MaterialConfig config
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: MeshToggle
Наследуется от: MonoBehaviour
Поля:
  Mesh[] RendererMeshes
  Mesh[] ColliderMeshes
Свойства:
Методы:
  void SwitchRenderer(int index)
  void SwitchRenderer(float factor)
  void SwitchCollider(int index)
  void SwitchCollider(float factor)
  void SwitchAll(int index)
  void SwitchAll(float factor)
  void .ctor()
--------------------------------------------------
Класс: MoveForward
Наследуется от: MonoBehaviour
Поля:
  float Speed
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: NetworkSleep
Наследуется от: MonoBehaviour
Поля:
  int totalBehavioursDisabled
  int totalCollidersDisabled
  Behaviour[] behaviours
  Collider[] colliders
  int BehavioursDisabled
  int CollidersDisabled
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ObjectFlasher
Наследуется от: BaseMonoBehaviour
Поля:
  GameObject enabledObj
  GameObject disabledObj
  float toggleLength
  float timeOffset
  float randomOffset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OneActiveSibling
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleSystemContainer
Наследуется от: MonoBehaviour
Поля:
  bool precached
  bool includeLights
  ParticleSystemGroup[] particleGroups
  Light[] lights
Свойства:
Методы:
  void Play()
  void Pause()
  void Stop()
  void Clear()
  void SetLights(bool on)
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: ParticleSystemIK
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ParticleSystemPlayer
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void OnEnable()
  void OnParentDestroying()
  void .ctor()
--------------------------------------------------
Класс: PerformanceSamplePoint
Наследуется от: ValueType
Поля:
  int UpdateCount
  int FixedUpdateCount
  int RenderCount
  TimeSpan PreCull
  TimeSpan Update
  TimeSpan LateUpdate
  TimeSpan Render
  TimeSpan FixedUpdate
  TimeSpan NetworkMessage
  TimeSpan TotalCPU
  int CpuUpdateCount
Свойства:
Методы:
--------------------------------------------------
Класс: PerformanceMetrics
Наследуется от: object
Поля:
  PerformanceSamplePoint current
  Action OnBeforeRender
  int _mainThreadId
Свойства:
Методы:
  PerformanceSamplePoint GetCurrent(bool reset)
  void Setup()
  void AddCPUTimeStopwatch()
  void AddStopwatch(PerformanceSample sample, Action& pre, Action& post)
--------------------------------------------------
Класс: PostUpdateHook
Наследуется от: MonoBehaviour
Поля:
  Action OnUpdate
  Action OnLateUpdate
  Action OnFixedUpdate
Свойства:
Методы:
  void Update()
  void LateUpdate()
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: PerformanceSample
Наследуется от: Enum
Поля:
  int value__
  PerformanceSample Update
  PerformanceSample LateUpdate
  PerformanceSample PreCull
  PerformanceSample Render
  PerformanceSample FixedUpdate
  PerformanceSample NetworkMessage
  PerformanceSample TotalCPU
  PerformanceSample Last
Свойства:
Методы:
--------------------------------------------------
Класс: PrefabAttribute
Наследуется от: MonoBehaviour
Поля:
  Vector3 worldPosition
  Quaternion worldRotation
  Vector3 worldForward
  Vector3 localPosition
  Vector3 localScale
  Quaternion localRotation
  string fullName
  string hierachyName
  UInt32 prefabID
  int instanceID
  Library prefabAttribute
  GameManager gameManager
  bool isServer
  Library server
Свойства:
  bool isClient
Методы:
  bool get_isClient()
  void PreProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  Type GetIndexedType()
  bool op_Equality(PrefabAttribute x, PrefabAttribute y)
  bool op_Inequality(PrefabAttribute x, PrefabAttribute y)
  bool Equals(object o)
  int GetHashCode()
  bool op_Implicit(PrefabAttribute exists)
  bool ComparePrefabAttribute(PrefabAttribute x, PrefabAttribute y)
  string ToString()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: RigidbodyInfo
Наследуется от: PrefabAttribute
Поля:
  float mass
  float drag
  float angularDrag
Свойства:
Методы:
  Type GetIndexedType()
  void AttributeSetup(GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void .ctor()
--------------------------------------------------
Класс: PreUpdateHook
Наследуется от: MonoBehaviour
Поля:
  Action OnUpdate
  Action OnLateUpdate
  Action OnFixedUpdate
Свойства:
Методы:
  void Update()
  void LateUpdate()
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: RotateCameraAroundObject
Наследуется от: MonoBehaviour
Поля:
  GameObject m_goObjectToRotateAround
  float m_flRotateSpeed
Свойства:
Методы:
  void FixedUpdate()
  void .ctor()
--------------------------------------------------
Класс: RunConsoleCommand
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void ClientRun(string command)
  void .ctor()
--------------------------------------------------
Класс: Screenshot
Наследуется от: SingletonComponent`1<Screenshot>
Поля:
  string screenshotPath
  int sizeMultiplier
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: StartOfFrameHook
Наследуется от: MonoBehaviour
Поля:
  Action OnStartOfFrame
Свойства:
Методы:
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: StripEmptyChildren
Наследуется от: PrefabAttribute
Поля:
Свойства:
Методы:
  Type GetIndexedType()
  void .ctor()
--------------------------------------------------
Класс: UpdateBehaviour
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UpdateHandler
Наследуется от: SingletonComponent`1<UpdateHandler>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VisualiseTrigger
Наследуется от: MonoBehaviour
Поля:
  Color colour
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ArrayEx
Наследуется от: object
Поля:
Свойства:
Методы:
  T[] New(int length)
  T GetRandom(T[] array)
  T GetRandom(T[] array, UInt32 seed)
  T GetRandom(T[] array, UInt32& seed)
  void Shuffle(T[] array, UInt32 seed)
  void Shuffle(T[] array, UInt32& seed)
  void BubbleSort(T[] array)
--------------------------------------------------
Класс: BoundsEx
Наследуется от: object
Поля:
  Vector3[] pts
Свойства:
Методы:
  Bounds XZ3D(Bounds bounds)
  Bounds Transform(Bounds bounds, Matrix4x4 matrix)
  Rect ToScreenRect(Bounds b, Camera cam)
  Rect ToCanvasRect(Bounds b, RectTransform target, Camera cam)
  float InnerDistToEdge2D(Bounds b, Vector3 point)
  float MaxExtent(Bounds b)
  void .cctor()
--------------------------------------------------
Класс: CollectionEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsNullOrEmpty(ICollection`1<T> collection)
  bool IsEmpty(ICollection`1<T> collection)
--------------------------------------------------
Класс: DirectoryEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void Backup(DirectoryInfo parent, String[] names)
  bool MoveToSafe(DirectoryInfo parent, string target, int retries)
  void Backup(String[] names)
  void CopyAll(string sourceDirectory, string targetDirectory)
  void CopyAll(DirectoryInfo source, DirectoryInfo target)
--------------------------------------------------
Класс: FileEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void Backup(DirectoryInfo parent, String[] names)
  bool MoveToSafe(FileInfo parent, string target, int retries)
  void Backup(String[] names)
--------------------------------------------------
Класс: LinqEx
Наследуется от: object
Поля:
Свойства:
Методы:
  int MaxIndex(IEnumerable`1<T> sequence)
--------------------------------------------------
Класс: NetworkWriteEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void WriteObject(NetWrite write, T obj)
--------------------------------------------------
Класс: ObjectEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsUnityNull(T obj)
--------------------------------------------------
Класс: ParticleSystemEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void SetPlayingState(ParticleSystem ps, bool play)
  void SetEmitterState(ParticleSystem ps, bool enable)
--------------------------------------------------
Класс: RaycastHitEx
Наследуется от: object
Поля:
Свойства:
Методы:
  Transform GetTransform(RaycastHit hit)
  Rigidbody GetRigidbody(RaycastHit hit)
  Collider GetCollider(RaycastHit hit)
  BaseEntity GetEntity(RaycastHit hit)
  bool IsOnLayer(RaycastHit hit, Layer rustLayer)
  bool IsOnLayer(RaycastHit hit, int layer)
  bool IsWaterHit(RaycastHit hit)
  WaterBody GetWaterBody(RaycastHit hit)
--------------------------------------------------
Класс: RendererEx
Наследуется от: object
Поля:
  Memoized`2<Material[], int> ArrayCache
Свойства:
Методы:
  void SetSharedMaterials(Renderer renderer, List`1<Material> materials)
  void .cctor()
--------------------------------------------------
Класс: StreamEx
Наследуется от: object
Поля:
  Byte[] StaticBuffer
Свойства:
Методы:
  void WriteToOtherStream(Stream self, Stream target)
  void .cctor()
--------------------------------------------------
Класс: TimeSpanEx
Наследуется от: object
Поля:
Свойства:
Методы:
  string ToShortString(TimeSpan timeSpan)
  string ToShortStringNoHours(TimeSpan timeSpan)
--------------------------------------------------
Класс: BlendTexture
Наследуется от: ProcessedTexture
Поля:
Свойства:
Методы:
  void .ctor(int width, int height, bool linear)
  void Blend(Texture source, Texture target, float alpha)
  void CopyTo(BlendTexture target)
--------------------------------------------------
Класс: BlurTexture
Наследуется от: ProcessedTexture
Поля:
Свойства:
Методы:
  void .ctor(int width, int height, bool linear)
  void Blur(float radius)
  void Blur(Texture source, float radius)
--------------------------------------------------
Класс: CameraUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void NormalizePlane(Plane& plane)
  void ExtractPlanes(Camera camera, Plane[]& planes)
  void ExtractPlanes(Matrix4x4 viewProjMatrix, Plane[]& planes)
--------------------------------------------------
Класс: ClimateBlendTexture
Наследуется от: ProcessedTexture
Поля:
Свойства:
Методы:
  void .ctor(int width, int height, bool linear)
  bool CheckLostData()
  void Blend(Texture srcLut1, Texture dstLut1, float lerpLut1, Texture srcLut2, Texture dstLut2, float lerpLut2, float lerp, ClimateBlendTexture prevLut, float time)
  void Swap(ClimateBlendTexture& a, ClimateBlendTexture& b)
--------------------------------------------------
Класс: DistanceField
Наследуется от: object
Поля:
  Int32[] GaussOffsets
  Single[] GaussWeights
Свойства:
Методы:
  void Generate(Int32& size, Byte& threshold, Byte[]& image, Single[]& distanceField)
  float SampleClamped(Single[] data, int size, int x, int y)
  Vector3 SampleClamped(Vector3[] data, int size, int x, int y)
  ushort SampleClamped(UInt16[] data, int size, int x, int y)
  void GenerateVectors(Int32& size, Single[]& distanceField, Vector3[]& vectorField)
  void ApplyGaussianBlur(int size, Single[] distanceField, int steps)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ProcessedTexture
Наследуется от: object
Поля:
  RenderTexture result
  Material material
Свойства:
Методы:
  void Dispose()
  RenderTexture CreateRenderTexture(string name, int width, int height, bool linear)
  void DestroyRenderTexture(RenderTexture& rt)
  RenderTexture CreateTemporary()
  void ReleaseTemporary(RenderTexture rt)
  Material CreateMaterial(string shader)
  Material CreateMaterial(Shader shader)
  void DestroyMaterial(Material& mat)
  Texture op_Implicit(ProcessedTexture t)
  void .ctor()
--------------------------------------------------
Класс: sRGB
Наследуется от: object
Поля:
  Byte[] to_linear
  Byte[] to_srgb
Свойства:
Методы:
  void .cctor()
  float linear_to_srgb(float linear)
  float srgb_to_linear(float srgb)
  void .ctor()
--------------------------------------------------
Класс: AssetStorage
Наследуется от: object
Поля:
Свойства:
Методы:
  void Save(T& asset, string path)
  void Save(Texture2D& asset)
  void Save(Texture2D& asset, string path, bool linear, bool compress)
  void Load(T& asset, string path)
  void Delete(T& asset)
--------------------------------------------------
Класс: Craptography
Наследуется от: object
Поля:
  Byte[] hash
Свойства:
Методы:
  void XOR(UInt32 seed, ArraySegment`1<byte> src, ArraySegment`1& dst)
  void .cctor()
--------------------------------------------------
Класс: FixedRateStepped
Наследуется от: object
Поля:
  float rate
  int maxSteps
  float nextCall
Свойства:
Методы:
  bool ShouldStep()
  void .ctor()
--------------------------------------------------
Класс: FloatConditions
Наследуется от: object
Поля:
  Condition[] conditions
Свойства:
Методы:
  bool AllTrue(float val)
  void .ctor()
--------------------------------------------------
Класс: FoliageGridMeshData
Наследуется от: object
Поля:
  List`1<FoliageVertex> vertices
  List`1<int> triangles
  Bounds bounds
Свойства:
Методы:
  void Alloc()
  void Free()
  void Clear()
  void Combine(MeshGroup meshGroup)
  void Apply(Mesh mesh)
  void .ctor()
--------------------------------------------------
Класс: FoliageGridBatch
Наследуется от: MeshBatch
Поля:
  Vector3 position
  Mesh meshBatch
  MeshFilter meshFilter
  MeshRenderer meshRenderer
  FoliageGridMeshData meshData
  MeshGroup meshGroup
Свойства:
  int VertexCapacity
  int VertexCutoff
Методы:
  int get_VertexCapacity()
  int get_VertexCutoff()
  void Awake()
  void Setup(Vector3 position, Material material, ShadowCastingMode shadows, int layer)
  void Add(MeshInstance instance)
  void AllocMemory()
  void FreeMemory()
  void RefreshMesh()
  void ApplyMesh()
  void ToggleMesh(bool state)
  void OnPooled()
  void .ctor()
--------------------------------------------------
Класс: GameObjectUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void GlobalBroadcast(string messageName, object param)
--------------------------------------------------
Класс: GizmosUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  void DrawWireCircleX(Vector3 pos, float radius)
  void DrawWireCircleY(Vector3 pos, float radius)
  void DrawWireCircleZ(Vector3 pos, float radius)
  void DrawCircleX(Vector3 pos, float radius)
  void DrawCircleY(Vector3 pos, float radius)
  void DrawCircleZ(Vector3 pos, float radius)
  void DrawWireCylinderX(Vector3 pos, float radius, float height)
  void DrawWireCylinderY(Vector3 pos, float radius, float height)
  void DrawWireCylinderZ(Vector3 pos, float radius, float height)
  void DrawCylinderX(Vector3 pos, float radius, float height)
  void DrawCylinderY(Vector3 pos, float radius, float height)
  void DrawCylinderZ(Vector3 pos, float radius, float height)
  void DrawWireCapsuleX(Vector3 pos, float radius, float height)
  void DrawWireCapsuleY(Vector3 pos, float radius, float height)
  void DrawWireCapsuleZ(Vector3 pos, float radius, float height)
  void DrawCapsuleX(Vector3 pos, float radius, float height)
  void DrawCapsuleY(Vector3 pos, float radius, float height)
  void DrawCapsuleZ(Vector3 pos, float radius, float height)
  void DrawWireCube(Vector3 pos, Vector3 size, Quaternion rot)
  void DrawCube(Vector3 pos, Vector3 size, Quaternion rot)
  void DrawWirePath(Vector3 a, Vector3 b, float thickness)
  void DrawSemiCircle(float radius)
  void DrawArrowHead(Vector3 pos, Vector3 dir, float arrowHeadLength, float arrowHeadAngle)
  void DrawMeshes(Transform transform)
  void DrawBounds(Transform transform)
--------------------------------------------------
Класс: GlobalMessages
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IInventoryChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IPreInventoryChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IViewModeChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IClothingChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IViewModelUpdated
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IBlueprintsChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IItemAmountChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: IItemIconChanged
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: HierarchyUtil
Наследуется от: object
Поля:
  Dictionary`2<string, GameObject> rootDict
Свойства:
Методы:
  GameObject GetRoot(string strName, bool groupActive, bool persistant)
  void .cctor()
--------------------------------------------------
Класс: LocalClock
Наследуется от: object
Поля:
  List`1<TimedEvent> events
Свойства:
Методы:
  void Add(float delta, float variance, Action action)
  void Tick()
  void .ctor()
--------------------------------------------------
Класс: MeshBatch
Наследуется от: MonoBehaviour
Поля:
  bool <NeedsRefresh>k__BackingField
  int <Count>k__BackingField
  int <BatchedCount>k__BackingField
  int <VertexCount>k__BackingField
Свойства:
  bool NeedsRefresh
  int Count
  int BatchedCount
  int VertexCount
  int VertexCapacity
  int VertexCutoff
  int AvailableVertices
Методы:
  bool get_NeedsRefresh()
  void set_NeedsRefresh(bool value)
  int get_Count()
  void set_Count(int value)
  int get_BatchedCount()
  void set_BatchedCount(int value)
  int get_VertexCount()
  void set_VertexCount(int value)
  void AllocMemory()
  void FreeMemory()
  void RefreshMesh()
  void ApplyMesh()
  void ToggleMesh(bool state)
  void OnPooled()
  int get_VertexCapacity()
  int get_VertexCutoff()
  int get_AvailableVertices()
  void Alloc()
  void Free()
  void Refresh()
  void Apply()
  void Display()
  void Invalidate()
  void AddVertices(int vertices)
  void OnEnable()
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: MeshDataBatch
Наследуется от: MeshBatch
Поля:
  Vector3 position
  Mesh meshBatch
  MeshFilter meshFilter
  MeshRenderer meshRenderer
  MeshData meshData
  MeshGroup meshGroup
Свойства:
  int VertexCapacity
  int VertexCutoff
Методы:
  int get_VertexCapacity()
  int get_VertexCutoff()
  void Awake()
  void Setup(Vector3 position, Material material, ShadowCastingMode shadows, int layer)
  void Add(MeshInstance instance)
  void AllocMemory()
  void FreeMemory()
  void RefreshMesh()
  void ApplyMesh()
  void ToggleMesh(bool state)
  void OnPooled()
  void .ctor()
--------------------------------------------------
Класс: MeshRendererBatch
Наследуется от: MeshBatch
Поля:
  Vector3 position
  Mesh meshBatch
  MeshFilter meshFilter
  MeshRenderer meshRenderer
  MeshRendererData meshData
  MeshRendererGroup meshGroup
  MeshRendererLookup meshLookup
Свойства:
  int VertexCapacity
  int VertexCutoff
Методы:
  int get_VertexCapacity()
  int get_VertexCutoff()
  void Awake()
  void Setup(Vector3 position, Material material, ShadowCastingMode shadows, int layer)
  void Add(MeshRendererInstance instance)
  void AllocMemory()
  void FreeMemory()
  void RefreshMesh()
  void ApplyMesh()
  void ToggleMesh(bool state)
  void OnPooled()
  void .ctor()
--------------------------------------------------
Класс: MurmurHash
Наследуется от: object
Поля:
  UInt32 seed
Свойства:
Методы:
  int Signed(Stream stream)
  UInt32 Unsigned(Stream stream)
  UInt32 rot(UInt32 x, byte r)
  UInt32 mix(UInt32 h)
--------------------------------------------------
Класс: MurmurHashEx
Наследуется от: object
Поля:
Свойства:
Методы:
  int MurmurHashSigned(string str)
  UInt32 MurmurHashUnsigned(string str)
  MemoryStream StringToStream(string str)
--------------------------------------------------
Класс: ObjWriter
Наследуется от: object
Поля:
Свойства:
Методы:
  string MeshToString(Mesh mesh)
  void Write(Mesh mesh, string path)
--------------------------------------------------
Класс: PathFinder
Наследуется от: object
Поля:
  Int32[0...,0...] costmap
  Int32[0...,0...] visited
  Point[] neighbors
  bool diagonals
  bool directional
  Point PushPoint
  int PushRadius
  int PushDistance
  int PushMultiplier
  List`1<Point> PushPointsAdditional
  HashSet`1<Point> BlockedPointsAdditional
  Point[] mooreNeighbors
  Point[] neumannNeighbors
Свойства:
Методы:
  void .ctor(Int32[0...,0...] costmap, bool diagonals, bool directional)
  int GetResolution(int index)
  Node FindPath(Point start, Point end, int depth)
  Node FindPathReversed(Point start, Point end, int depth)
  Node FindPathDirected(List`1<Point> startList, List`1<Point> endList, int depth)
  Node FindPathUndirected(List`1<Point> startList, List`1<Point> endList, int depth)
  Node FindPathReversed(List`1<Point> startList, List`1<Point> endList, int depth)
  Node FindClosestWalkable(Point start, int depth)
  bool IsWalkable(Point point)
  bool IsWalkableWithNeighbours(Point point)
  Node Reverse(Node start)
  Node FindEnd(Node start)
  int Cost(Point a)
  int Cost(Point a, Node prev)
  int Heuristic(Point a)
  int Heuristic(Point a, Point b)
  int Heuristic(Point a, List`1<Point> b)
  float Distance(Point a, Point b)
  Point GetPoint(Vector3 worldPos, int res)
  void .cctor()
--------------------------------------------------
Класс: PathInterpolator
Наследуется от: object
Поля:
  Vector3[] Points
  Vector3[] Tangents
  int <MinIndex>k__BackingField
  int <MaxIndex>k__BackingField
  float <Length>k__BackingField
  float <StepSize>k__BackingField
  bool <Circular>k__BackingField
  bool initialized
Свойства:
  int MinIndex
  int MaxIndex
  float Length
  float StepSize
  bool Circular
  int DefaultMinIndex
  int DefaultMaxIndex
  float StartOffset
  float EndOffset
Методы:
  int get_MinIndex()
  void set_MinIndex(int value)
  int get_MaxIndex()
  void set_MaxIndex(int value)
  float get_Length()
  void set_Length(float value)
  float get_StepSize()
  void set_StepSize(float value)
  bool get_Circular()
  void set_Circular(bool value)
  int get_DefaultMinIndex()
  int get_DefaultMaxIndex()
  float get_StartOffset()
  float get_EndOffset()
  void .ctor(Vector3[] points)
  void .ctor(Vector3[] points, Vector3[] tangents)
  void RecalculateTangents()
  void RecalculateLength()
  void Resample(float distance)
  void Smoothen(int iterations, Func`2<int, float> filter)
  void Smoothen(int iterations, Vector3 multipliers, Func`2<int, float> filter)
  void SmoothenIndex(int i, Vector3 multipliers, Func`2<int, float> filter)
  Vector3 GetStartPoint()
  Vector3 GetEndPoint()
  Vector3 GetStartTangent()
  Vector3 GetEndTangent()
  Vector3 GetPointByIndex(int i)
  Vector3 GetTangentByIndex(int i)
  Vector3 GetPoint(float distance)
  Vector3 GetTangent(float distance)
  Vector3 GetPointCubicHermite(float distance)
--------------------------------------------------
Класс: PooledList`1
Наследуется от: object
Поля:
  List`1<T> data
Свойства:
Методы:
  void Alloc()
  void Free()
  void Clear()
  void .ctor()
--------------------------------------------------
Класс: RadixSorter
Наследуется от: object
Поля:
  UInt32[] histogram
  UInt32[] offset
Свойства:
Методы:
  void .ctor()
  void SortU8(UInt32[] values, UInt32[] remap, UInt32 num)
  void SortU24(UInt32[] values, UInt32[] remap, UInt32[] remapTemp, UInt32 num)
--------------------------------------------------
Класс: RawWriter
Наследуется от: object
Поля:
Свойства:
Методы:
  void Write(IEnumerable`1<byte> data, string path)
  void Write(IEnumerable`1<int> data, string path)
  void Write(IEnumerable`1<short> data, string path)
  void Write(IEnumerable`1<float> data, string path)
--------------------------------------------------
Класс: RealTimeSinceEx
Наследуется от: ValueType
Поля:
  double time
Свойства:
Методы:
  double op_Implicit(RealTimeSinceEx ts)
  RealTimeSinceEx op_Implicit(double ts)
  string ToString()
--------------------------------------------------
Класс: SimpleList`1
Наследуется от: object
Поля:
  int defaultCapacity
  T[] emptyArray
  T[] array
  int count
Свойства:
  T[] Array
  int Count
  int Capacity
  T Item
Методы:
  T[] get_Array()
  int get_Count()
  int get_Capacity()
  void set_Capacity(int value)
  T get_Item(int index)
  void set_Item(int index, T value)
  void .ctor()
  void .ctor(int capacity)
  void Add(T item)
  void Clear()
  bool Contains(T item)
  void CopyTo(T[] array)
  void EnsureCapacity(int min)
  void .cctor()
--------------------------------------------------
Класс: SynchronizedClock
Наследуется от: object
Поля:
  List`1<TimedEvent> events
Свойства:
  float CurrentTime
Методы:
  float get_CurrentTime()
  void Add(float delta, float variance, Action`1<UInt32> action)
  void Tick()
  void .ctor()
--------------------------------------------------
Класс: TickHistory
Наследуется от: object
Поля:
  Deque`1<Vector3> points
Свойства:
  int Count
Методы:
  int get_Count()
  void Reset()
  void Reset(Vector3 point)
  float Distance(BasePlayer player, Vector3 point)
  void AddPoint(Vector3 point, int limit)
  void TransformEntries(Matrix4x4 matrix)
  void .ctor()
--------------------------------------------------
Класс: TickInterpolator
Наследуется от: object
Поля:
  List`1<Segment> points
  int index
  float Length
  Vector3 CurrentPoint
  Vector3 StartPoint
  Vector3 EndPoint
Свойства:
  int Count
Методы:
  int get_Count()
  void Reset()
  void Reset(Vector3 point)
  void AddPoint(Vector3 point)
  bool MoveNext(float distance)
  bool HasNext()
  void TransformEntries(Matrix4x4 matrix)
  void .ctor()
--------------------------------------------------
Класс: TimeCachedValue`1
Наследуется от: object
Поля:
  float refreshCooldown
  float refreshRandomRange
  Func`1<T> updateValue
  T cachedValue
  TimeSince cooldown
  bool hasRun
  bool forceNextRun
Свойства:
Методы:
  T Get(bool force)
  void ForceNextRun()
  void .ctor()
--------------------------------------------------
Класс: Timing
Наследуется от: ValueType
Поля:
  Stopwatch sw
  string name
Свойства:
Методы:
  Timing Start(string name)
  void End()
  void .ctor(string name)
--------------------------------------------------
Класс: TransformUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  bool GetGroundInfo(Vector3 startPos, RaycastHit& hit, Transform ignoreTransform)
  bool GetGroundInfo(Vector3 startPos, RaycastHit& hit, float range, Transform ignoreTransform)
  bool GetGroundInfo(Vector3 startPos, RaycastHit& hitOut, float range, LayerMask mask, Transform ignoreTransform)
  bool GetGroundInfo(Vector3 startPos, Vector3& pos, Vector3& normal, Transform ignoreTransform)
  bool GetGroundInfo(Vector3 startPos, Vector3& pos, Vector3& normal, float range, Transform ignoreTransform)
  bool GetGroundInfo(Vector3 startPos, Vector3& pos, Vector3& normal, float range, LayerMask mask, Transform ignoreTransform)
  bool GetGroundInfoTerrainOnly(Vector3 startPos, Vector3& pos, Vector3& normal)
  bool GetGroundInfoTerrainOnly(Vector3 startPos, Vector3& pos, Vector3& normal, float range)
  bool GetGroundInfoTerrainOnly(Vector3 startPos, Vector3& pos, Vector3& normal, float range, LayerMask mask)
  Transform[] GetRootObjects()
--------------------------------------------------
Класс: WorldSpline
Наследуется от: MonoBehaviour
Поля:
  int dataIndex
  Vector3[] points
  Vector3[] tangents
  float lutInterval
  bool showGizmos
  List`1<Vector3> visualSplineList
  WorldSplineData privateData
Свойства:
Методы:
  WorldSplineData GetData()
  void SetAll(Vector3[] points, Vector3[] tangents, float lutInterval)
  void CheckValidity()
  void OnDrawGizmosSelected()
  void DrawSplineGizmo(WorldSpline ws, Color splineColour)
  Vector3[] GetVisualSpline(WorldSpline ws, WorldSplineData data, float distBetweenPoints)
  Vector3 GetStartPointWorld()
  Vector3 GetEndPointWorld()
  Vector3 GetStartTangentWorld()
  Vector3 GetEndTangentWorld()
  Vector3 GetTangentCubicHermiteWorld(float distance)
  Vector3 GetTangentCubicHermiteWorld(float distance, WorldSplineData data)
  Vector3 GetPointCubicHermiteWorld(float distance)
  Vector3 GetPointCubicHermiteWorld(float distance, WorldSplineData data)
  Vector3 GetPointAndTangentCubicHermiteWorld(float distance, Vector3& tangent)
  Vector3 GetPointAndTangentCubicHermiteWorld(float distance, WorldSplineData data, Vector3& tangent)
  Vector3[] GetPointsWorld()
  Vector3[] GetTangentsWorld()
  Vector3[] PointsToWorld(Vector3[] points, Transform tr)
  Vector3[] TangentsToWorld(Vector3[] tangents, Transform tr)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: WorldSplineData
Наследуется от: object
Поля:
  Vector3[] inputPoints
  Vector3[] inputTangents
  float inputLUTInterval
  List`1<LUTEntry> LUTValues
  float Length
  int maxPointsIndex
Свойства:
Методы:
  void .ctor(WorldSpline worldSpline)
  bool IsSameAs(WorldSpline worldSpline)
  bool IsDifferentTo(WorldSpline worldSpline)
  Vector3 GetStartPoint()
  Vector3 GetEndPoint()
  Vector3 GetStartTangent()
  Vector3 GetEndTangent()
  Vector3 GetPointCubicHermite(float distance)
  Vector3 GetTangentCubicHermite(float distance)
  Vector3 GetPointAndTangentCubicHermite(float distance, Vector3& tangent)
  void SetDefaultTangents(WorldSpline worldSpline)
  bool DetectSplineProblems(WorldSpline worldSpline)
  void CreateLookupTable(WorldSpline worldSpline)
  void AddEntry(float distance, Vector3 pos)
--------------------------------------------------
Класс: WorldSplineSharedData
Наследуется от: ScriptableObject
Поля:
  List`1<WorldSplineData> dataList
  WorldSplineSharedData instance
  String[] worldSplineFolders
Свойства:
Методы:
  void Init()
  bool TryGetDataFor(WorldSpline worldSpline, WorldSplineData& data)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Ballistics
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector3 GetAimToTarget(Vector3 origin, Vector3 target, float speed, float maxAngle, float idealGravity, Single& requiredGravity)
  Vector3 GetAimToTarget(Vector3 origin, Vector3 target, float speed, float maxAngle, float idealGravity, float minRange, Single& requiredGravity)
  Vector3 GetPhysicsProjectileHitPos(Vector3 origin, Vector3 direction, float speed, float gravity, float flightTimePerUpwardCheck, float flightTimePerDownwardCheck, float maxRays, BaseNetworkable owner)
  Vector3 GetBulletHitPoint(Vector3 origin, Vector3 direction)
  Vector3 GetBulletHitPoint(Ray aimRay)
  bool NextRayHitSomething(TheoreticalProjectile& projectile, float dt, BaseNetworkable owner)
  float ProjectileDistToGravity(float x, float y, float θ, float v)
--------------------------------------------------
Класс: Bezier
Наследуется от: object
Поля:
Свойства:
Методы:
  void ApplyLineSlack(Vector3[]& positions, Single[] slackLevels, int tesselationLevel)
  void ApplyLineSlack(Vector3[] positions, Single[] slackLevels, Vector3[]& result, int tesselationLevel)
  void ApplyLineSlack(Vector3[] positions, Single[] slackLevels, List`1& result, int tesselationLevel)
--------------------------------------------------
Класс: FixedShort3
Наследуется от: ValueType
Поля:
  int FracBits
  float MaxFrac
  float RcpMaxFrac
  short x
  short y
  short z
Свойства:
Методы:
  void .ctor(Vector3 vec)
  Vector3 op_Explicit(FixedShort3 vec)
--------------------------------------------------
Класс: FixedSByteNorm3
Наследуется от: ValueType
Поля:
  int FracBits
  float MaxFrac
  float RcpMaxFrac
  sbyte x
  sbyte y
  sbyte z
Свойства:
Методы:
  void .ctor(Vector3 vec)
  Vector3 op_Explicit(FixedSByteNorm3 vec)
--------------------------------------------------
Класс: FixedSByteNorm4
Наследуется от: ValueType
Поля:
  int FracBits
  float MaxFrac
  float RcpMaxFrac
  sbyte x
  sbyte y
  sbyte z
  sbyte w
Свойства:
Методы:
  void .ctor(Vector4 vec)
  Vector4 op_Explicit(FixedSByteNorm4 vec)
--------------------------------------------------
Класс: Half3
Наследуется от: ValueType
Поля:
  ushort x
  ushort y
  ushort z
Свойства:
Методы:
  void .ctor(Vector3 vec)
  Vector3 op_Explicit(Half3 vec)
--------------------------------------------------
Класс: Half4
Наследуется от: ValueType
Поля:
  ushort x
  ushort y
  ushort z
  ushort w
Свойства:
Методы:
  void .ctor(Vector4 vec)
  Vector4 op_Explicit(Half4 vec)
--------------------------------------------------
Класс: Poolable
Наследуется от: MonoBehaviour
Поля:
  UInt32 prefabID
  Behaviour[] behaviours
  Rigidbody[] rigidbodies
  Collider[] colliders
  LODGroup[] lodgroups
  Renderer[] renderers
  ParticleSystem[] particles
  Boolean[] behaviourStates
  Boolean[] rigidbodyStates
  Boolean[] colliderStates
  Boolean[] lodgroupStates
  Boolean[] rendererStates
Свойства:
  int ClientCount
  int ServerCount
Методы:
  int get_ClientCount()
  int get_ServerCount()
  void PostProcess(IPrefabProcessor preProcess, GameObject rootObj, string name, bool serverside, bool clientside, bool bundling)
  void Initialize(UInt32 id)
  void EnterPool()
  void LeavePool()
  void SetBehaviourEnabled(bool state)
  void SetComponentEnabled(bool state)
  void .ctor()
--------------------------------------------------
Класс: PoolableEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool SupportsPoolingInParent(GameObject gameObject)
  bool SupportsPooling(GameObject gameObject)
  void AwakeFromInstantiate(GameObject gameObject)
--------------------------------------------------
Класс: PrefabPool
Наследуется от: object
Поля:
  Stack`1<Poolable> stack
  string <PrefabName>k__BackingField
  int <Missed>k__BackingField
  int <Pushed>k__BackingField
  int <Popped>k__BackingField
  int <TargetCapacity>k__BackingField
Свойства:
  string PrefabName
  int Missed
  int Pushed
  int Popped
  int Count
  int TargetCapacity
Методы:
  string get_PrefabName()
  void set_PrefabName(string value)
  int get_Missed()
  void set_Missed(int value)
  int get_Pushed()
  void set_Pushed(int value)
  int get_Popped()
  void set_Popped(int value)
  void .ctor(UInt32 prefabId, int targetCapacity)
  int get_Count()
  int get_TargetCapacity()
  void set_TargetCapacity(int value)
  void Push(Poolable info)
  void Push(GameObject instance)
  GameObject Pop(Vector3 pos, Quaternion rot)
  void Clear()
--------------------------------------------------
Класс: PrefabPoolCollection
Наследуется от: object
Поля:
  Dictionary`2<UInt32, PrefabPool> storage
  bool isClient
Свойства:
Методы:
  void .ctor(bool client)
  void Push(GameObject instance)
  GameObject Pop(UInt32 id, Vector3 pos, Quaternion rot)
  void Clear(string filter)
--------------------------------------------------
Класс: PrefabPoolWarmup
Наследуется от: object
Поля:
Свойства:
Методы:
  void Run(string filter, int countOverride)
  IEnumerator Run(float deltaTime, Action`1<string> statusFunction, string format)
  String[] GetAssetList()
  void PrefabWarmup(string path, int countOverride)
  void .ctor()
--------------------------------------------------
Класс: LayerSelect
Наследуется от: ValueType
Поля:
  int layer
Свойства:
  int Mask
  string Name
Методы:
  void .ctor(int layer)
  int op_Implicit(LayerSelect layer)
  LayerSelect op_Implicit(int layer)
  int get_Mask()
  string get_Name()
--------------------------------------------------
Класс: NetworkedProperty`1
Наследуется от: object
Поля:
  T val
  BaseEntity entity
Свойства:
  T Value
Методы:
  T get_Value()
  void set_Value(T value)
  void .ctor(BaseEntity entity)
  T op_Implicit(NetworkedProperty`1<T> value)
--------------------------------------------------
Класс: GameObjectRef
Наследуется от: ResourceRef`1<GameObject>
Поля:
Свойства:
Методы:
  GameObject Instantiate(Transform parent)
  BaseEntity GetEntity()
  void .ctor()
--------------------------------------------------
Класс: ResourceRef`1
Наследуется от: object
Поля:
  string guid
  T _cachedObject
Свойства:
  bool isValid
  string resourcePath
  UInt32 resourceID
Методы:
  bool get_isValid()
  T Get()
  string get_resourcePath()
  UInt32 get_resourceID()
  void .ctor()
--------------------------------------------------
Класс: ScriptableObjectRef
Наследуется от: ResourceRef`1<ScriptableObject>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Texture2DRef
Наследуется от: ResourceRef`1<Texture2D>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AlternateAttack
Наследуется от: StateMachineBehaviour
Поля:
  bool random
  bool dontIncrement
  String[] targetTransitions
Свойства:
Методы:
  void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: BaseViewModel
Наследуется от: MonoBehaviour
Поля:
  LazyAimProperties lazyaimRegular
  LazyAimProperties lazyaimIronsights
  Transform pivot
  bool useViewModelCamera
  bool wantsHeldItemFlags
  GameObject[] hideSightMeshes
  bool isGestureViewModel
  Transform MuzzlePoint
  SubsurfaceProfile subsurfaceProfile
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: FishingRodViewmodel
Наследуется от: MonoBehaviour
Поля:
  Transform PitchTransform
  Transform YawTransform
  float YawLerpSpeed
  float PitchLerpSpeed
  Transform LineRendererStartPos
  ParticleSystem[] StrainParticles
  bool ApplyTransformRotation
  GameObject CatchRoot
  Transform CatchLinePoint
  FishViewmodel[] FishViewmodels
  float ShakeMaxScale
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: flamethrowerState
Наследуется от: Enum
Поля:
  int value__
  flamethrowerState OFF
  flamethrowerState PILOT_LIGHT
  flamethrowerState FLAME_ON
Свойства:
Методы:
--------------------------------------------------
Класс: flamethrowerFire
Наследуется от: MonoBehaviour
Поля:
  ParticleSystem pilotLightFX
  ParticleSystem[] flameFX
  FlameJet jet
  AudioSource oneShotSound
  AudioSource loopSound
  AudioClip pilotlightIdle
  AudioClip flameLoop
  AudioClip flameStart
  flamethrowerState flameState
  flamethrowerState previousflameState
Свойства:
Методы:
  void PilotLightOn()
  void SetFlameStatus(bool status)
  void ShutOff()
  void FlameOn()
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: IronsightAimPoint
Наследуется от: MonoBehaviour
Поля:
  Transform targetPoint
Свойства:
Методы:
  void OnDrawGizmos()
  void DrawArrow(Vector3 start, Vector3 end, float arrowLength)
  void .ctor()
--------------------------------------------------
Класс: IronSightOverride
Наследуется от: MonoBehaviour
Поля:
  IronsightAimPoint aimPoint
  float fieldOfViewOffset
  float zoomFactor
  float fovBias
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: IronSights
Наследуется от: MonoBehaviour
Поля:
  IronsightAimPoint aimPoint
  float fieldOfViewOffset
  float zoomFactor
  float introSpeed
  AnimationCurve introCurve
  float outroSpeed
  AnimationCurve outroCurve
  SoundDefinition upSound
  SoundDefinition downSound
  IronSightOverride ironsightsOverride
  bool processUltrawideOffset
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RagdollEditor
Наследуется от: SingletonComponent`1<RagdollEditor>
Поля:
  Vector3 view
  Rigidbody grabbedRigid
  Vector3 grabPos
  Vector3 grabOffset
Свойства:
Методы:
  void OnGUI()
  void Awake()
  void Update()
  void FixedUpdate()
  void StartGrab()
  void UpdateGrab()
  void StopGrab()
  void .ctor()
--------------------------------------------------
Класс: RandomParameterNumber
Наследуется от: StateMachineBehaviour
Поля:
  string parameterName
  int min
  int max
  bool preventRepetition
  bool isFloat
  int last
Свойства:
Методы:
  void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: RandomParameterNumberFloat
Наследуется от: StateMachineBehaviour
Поля:
  string parameterName
  int min
  int max
Свойства:
Методы:
  void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: SetParameterAnimatorBehaviour
Наследуется от: StateMachineBehaviour
Поля:
  string ParameterName
  ParamType ParameterType
  float FloatValue
  bool BoolValue
  int IntValue
  Timing SetParameterTiming
  float ThresholdTiming
  float lastNormalisedTime
Свойства:
Методы:
  void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex, AnimatorControllerPlayable controller)
  void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void SetParameter(Animator animator)
  void .ctor()
--------------------------------------------------
Класс: SetParameterCurveAnimatorBehaviour
Наследуется от: StateMachineBehaviour
Поля:
  string FloatParameterName
  AnimationCurve ParameterCurve
Свойства:
Методы:
  void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
  void .ctor()
--------------------------------------------------
Класс: SwapArrows
Наследуется от: MonoBehaviour
Поля:
  GameObject[] arrowModels
  string curAmmoType
  bool wasHidden
Свойства:
Методы:
  void SelectArrowType(int iType)
  void HideAllArrowHeads()
  void UpdateAmmoType(ItemDefinition ammoType, bool hidden)
  void Cleanup()
  void OnDisable()
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: SwapKeycard
Наследуется от: MonoBehaviour
Поля:
  GameObject[] accessLevels
Свойства:
Методы:
  void UpdateAccessLevel(int level)
  void SetRootActive(int index)
  void .ctor()
--------------------------------------------------
Класс: SwapRPG
Наследуется от: MonoBehaviour
Поля:
  GameObject[] rpgModels
  string curAmmoType
Свойства:
Методы:
  void SelectRPGType(int iType)
  void UpdateAmmoType(ItemDefinition ammoType)
  void Start()
  void .ctor()
--------------------------------------------------
Класс: ViewmodelAspectOffset
Наследуется от: MonoBehaviour
Поля:
  Vector3 OffsetAmount
  float aspectCutoff
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelAttachment
Наследуется от: EntityComponent`1<BaseEntity>
Поля:
  GameObjectRef modelObject
  string targetBone
  bool hideViewModelIronSights
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelBob
Наследуется от: MonoBehaviour
Поля:
  float bobSpeedWalk
  float bobSpeedRun
  float bobAmountWalk
  float bobAmountRun
  float leftOffsetRun
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewModelCamera
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: RenderType
Наследуется от: Enum
Поля:
  int value__
  RenderType OPAQUE_DEFERRED
  RenderType OPAQUE_FORWARDBASE
  RenderType TRANSPARENT_FORWARDBASE
  RenderType TRANSPARENT
  RenderType UNDEFINED
Свойства:
Методы:
--------------------------------------------------
Класс: ViewModelDrawEvent
Наследуется от: ValueType
Поля:
  ViewModelRenderer viewModelRenderer
  Renderer renderer
  bool skipDepthPrePass
  Material material
  int subMesh
  int pass
Свойства:
Методы:
  bool Equals(ViewModelDrawEvent other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: ViewModelRenderer
Наследуется от: MonoBehaviour
Поля:
  List`1<Texture2D> cachedTextureRefs
  List`1<ViewModelDrawEvent> opaqueEvents
  List`1<ViewModelDrawEvent> transparentEvents
  Matrix4x4 prevModelMatrix
  Renderer viewModelRenderer
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelEditor
Наследуется от: SingletonComponent`1<ViewmodelEditor>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelIk
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelLower
Наследуется от: MonoBehaviour
Поля:
  bool lowerOnSprint
  bool lowerWhenCantAttack
  float lowerScale
Свойства:
Методы:
  void SetShouldLower(bool shouldLower)
  void .ctor()
--------------------------------------------------
Класс: ViewmodelMountedAnchor
Наследуется от: MonoBehaviour
Поля:
  ViewmodelIk IkController
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelPunch
Наследуется от: MonoBehaviour
Поля:
  AnimationCurve punchScale
  Vector3 punchDirection
  float punchDuration
  float punchMagnitude
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ViewmodelSway
Наследуется от: MonoBehaviour
Поля:
  float positionalSwaySpeed
  float positionalSwayAmount
  float rotationSwaySpeed
  float rotationSwayAmount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmplifyOcclusionBase
Наследуется от: MonoBehaviour
Поля:
  ApplicationMethod ApplyMethod
  SampleCountLevel SampleCount
  PerPixelNormalSource PerPixelNormals
  float Intensity
  Color Tint
  float Radius
  int PixelRadiusLimit
  float RadiusIntensity
  float PowerExponent
  float Bias
  float Thickness
  bool Downsample
  bool FadeEnabled
  float FadeStart
  float FadeLength
  float FadeToIntensity
  Color FadeToTint
  float FadeToRadius
  float FadeToPowerExponent
  float FadeToThickness
  bool BlurEnabled
  int BlurRadius
  int BlurPasses
  float BlurSharpness
  bool FilterEnabled
  float FilterBlending
  float FilterResponse
  bool TemporalDirections
  bool TemporalOffsets
  bool TemporalDilation
  bool UseMotionVectors
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: AmplifyOcclusionEffect
Наследуется от: AmplifyOcclusionBase
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UVTextureAnimator
Наследуется от: MonoBehaviour
Поля:
  int Rows
  int Columns
  float Fps
  int OffsetMat
  bool IsLoop
  float StartDelay
  bool isInizialised
  int index
  int count
  int allCount
  float deltaFps
  bool isVisible
  bool isCorutineStarted
  Renderer currentRenderer
  Material instanceMaterial
Свойства:
Методы:
  void Start()
  void InitDefaultVariables()
  void Play()
  void PlayDelay()
  void OnEnable()
  void OnDisable()
  IEnumerator UpdateCorutine()
  void UpdateCorutineFrame()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: Cathode
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter intensity
  IntParameter downscale
  IntParameter downscaleTemporal
  FloatParameter horizontalBlur
  FloatParameter verticalBlur
  FloatParameter chromaSubsampling
  FloatParameter sharpen
  FloatParameter sharpenRadius
  FloatParameter colorNoise
  FloatParameter restlessFoot
  FloatParameter footAmplitude
  FloatParameter chromaIntensity
  FloatParameter chromaInstability
  FloatParameter chromaOffset
  FloatParameter responseCurve
  FloatParameter saturation
  FloatParameter cometTrailing
  FloatParameter burnIn
  FloatParameter tapeDust
  FloatParameter wobble
  Vector2Parameter blackWhiteLevels
  Vector2Parameter dynamicRange
  FloatParameter whiteBallance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: CathodeRenderer
Наследуется от: PostProcessEffectRenderer`1<Cathode>
Поля:
  Texture2D noiseTex
  RenderTexture temporalRT
  Shader grayShader
  Shader primaryShader
  Shader tvShader
  Shader postTVShader
  Shader trailShader
  int _CathodeRT1
  int _CathodeRT2
  int _Intensity
  int _SizeX
  int _SizeY
  int _ChromaSubsampling
  int _Sharpen
  int _SharpenRadius
  int _ColorNoise
  int _RestlessFoot
  int _FootAmplitude
  int _ChromaOffset
  int _ChromaIntensity
  int _ChromaInstability
  int _BurnIn
  int _TapeDust
  int _TrailTex
  int _NoiseTex
  int _Gamma
  int _ResponseCurve
  int _Saturation
  int _Wobble
  int _Black
  int _White
  int _DynamicRangeMin
  int _DynamicRangeMax
  int _ScreenWhiteBal
  int _Trailing
Свойства:
Методы:
  void Init()
  void Release()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: cui
Наследуется от: object
Поля:
Свойства:
Методы:
  void cui_test(Arg args)
  void cui_test_update(Arg args)
  void endtest(Arg args)
  void .ctor()
--------------------------------------------------
Класс: CoverageQueries
Наследуется от: MonoBehaviour
Поля:
  float depthBias
  bool debug
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ERVegetationStudio
Наследуется от: ScriptableObject
Поля:
Свойства:
Методы:
  bool VegetationStudio()
  bool VegetationStudioPro()
  void CreateVegetationMaskLine(GameObject go, float grassPerimeter, float plantPerimeter, float treePerimeter, float objectPerimeter, float largeObjectPerimeter)
  void UpdateVegetationMaskLine(GameObject go, ERVSData[] vsData, float grassPerimeter, float plantPerimeter, float treePerimeter, float objectPerimeter, float largeObjectPerimeter)
  void UpdateHeightmap(Bounds bounds)
  void RemoveVegetationMaskLine(GameObject go)
  void CreateBiomeArea(GameObject go, float distance, float blendDistance, float noise)
  void UpdateBiomeArea(GameObject go, ERVSData[] vsData, float distance, float blendDistance, float noise)
  void RemoveBiomeArea(GameObject go)
  void .ctor()
--------------------------------------------------
Класс: runtimeScript
Наследуется от: MonoBehaviour
Поля:
  ERRoadNetwork roadNetwork
  ERRoad road
  GameObject go
  int currentElement
  float distance
  float speed
Свойства:
Методы:
  void Start()
  void Update()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: FXAA
Наследуется от: FXAAPostEffectsBase
Поля:
  Shader shader
  Material mat
Свойства:
Методы:
  void CreateMaterials()
  void Start()
  bool IsActive()
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void .ctor()
--------------------------------------------------
Класс: FXAAPostEffectsBase
Наследуется от: MonoBehaviour
Поля:
  bool supportHDRTextures
  bool isSupported
Свойства:
Методы:
  Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
  Material CreateMaterial(Shader s, Material m2Create)
  void OnEnable()
  bool CheckSupport()
  bool CheckResources()
  void Start()
  bool CheckSupport(bool needDepth)
  bool CheckSupport(bool needDepth, bool needHdr)
  void ReportAutoDisable()
  bool CheckShader(Shader s)
  void NotSupported()
  void DrawBorder(RenderTexture dest, Material material)
  void .ctor()
--------------------------------------------------
Класс: Explosion_Bloom
Наследуется от: MonoBehaviour
Поля:
  Settings settings
  Shader m_Shader
  Material m_Material
  int kMaxIterations
  RenderTexture[] m_blurBuffer1
  RenderTexture[] m_blurBuffer2
  int m_Threshold
  int m_Curve
  int m_PrefilterOffs
  int m_SampleScale
  int m_Intensity
  int m_BaseTex
Свойства:
  Shader shader
  Material material
  bool supportsDX11
Методы:
  Shader get_shader()
  Material get_material()
  bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
  Material CheckShaderAndCreateMaterial(Shader s)
  bool get_supportsDX11()
  void Awake()
  void OnEnable()
  void OnDisable()
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void .ctor()
--------------------------------------------------
Класс: ExplosionDemoGUI
Наследуется от: MonoBehaviour
Поля:
  GameObject[] Prefabs
  float reactivateTime
  Light Sun
  int currentNomber
  GameObject currentInstance
  GUIStyle guiStyleHeader
  float sunIntensity
  float dpiScale
Свойства:
Методы:
  void Start()
  void OnGUI()
  void ChangeCurrent(int delta)
  void .ctor()
--------------------------------------------------
Класс: ExplosionDemoReactivator
Наследуется от: MonoBehaviour
Поля:
  float TimeDelayToReactivate
Свойства:
Методы:
  void Start()
  void Reactivate()
  void .ctor()
--------------------------------------------------
Класс: ExplosionPlatformActivator
Наследуется от: MonoBehaviour
Поля:
  GameObject Effect
  float TimeDelay
  float DefaultRepeatTime
  float NearRepeatTime
  float currentTime
  float currentRepeatTime
  bool canUpdate
Свойства:
Методы:
  void Start()
  void Init()
  void Update()
  void OnTriggerEnter(Collider coll)
  void OnTriggerExit(Collider other)
  void .ctor()
--------------------------------------------------
Класс: ExplosionsFPS
Наследуется от: MonoBehaviour
Поля:
  GUIStyle guiStyleHeader
  float timeleft
  float fps
  int frames
Свойства:
Методы:
  void Awake()
  void OnGUI()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsBillboard
Наследуется от: MonoBehaviour
Поля:
  Camera Camera
  bool Active
  bool AutoInitCamera
  GameObject myContainer
  Transform t
  Transform camT
  Transform contT
Свойства:
Методы:
  void Awake()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsDeactivateRendererByTime
Наследуется от: MonoBehaviour
Поля:
  float TimeDelay
  Renderer rend
Свойства:
Методы:
  void Awake()
  void DeactivateRenderer()
  void OnEnable()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsLightCurves
Наследуется от: MonoBehaviour
Поля:
  AnimationCurve LightCurve
  float GraphTimeMultiplier
  float GraphIntensityMultiplier
  bool canUpdate
  float startTime
  Light lightSource
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsParticleSystemScaler
Наследуется от: MonoBehaviour
Поля:
  float particlesScale
Свойства:
Методы:
  void Start()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsScaleCurves
Наследуется от: MonoBehaviour
Поля:
  AnimationCurve ScaleCurveX
  AnimationCurve ScaleCurveY
  AnimationCurve ScaleCurveZ
  Vector3 GraphTimeMultiplier
  Vector3 GraphScaleMultiplier
  float startTime
  Transform t
  float evalX
  float evalY
  float evalZ
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsShaderColorGradient
Наследуется от: MonoBehaviour
Поля:
  string ShaderProperty
  int MaterialID
  Gradient Color
  float TimeMultiplier
  bool canUpdate
  Material matInstance
  int propertyID
  float startTime
  Color oldColor
Свойства:
Методы:
  void Start()
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsShaderFloatCurves
Наследуется от: MonoBehaviour
Поля:
  string ShaderProperty
  int MaterialID
  AnimationCurve FloatPropertyCurve
  float GraphTimeMultiplier
  float GraphScaleMultiplier
  bool canUpdate
  Material matInstance
  int propertyID
  float startTime
Свойства:
Методы:
  void Start()
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsShaderQueue
Наследуется от: MonoBehaviour
Поля:
  int AddQueue
  Renderer rend
Свойства:
Методы:
  void Start()
  void SetProjectorQueue()
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: ExplosionsSpriteSheetAnimation
Наследуется от: MonoBehaviour
Поля:
  int TilesX
  int TilesY
  float AnimationFPS
  bool IsInterpolateFrames
  int StartFrameOffset
  bool IsLoop
  float StartDelay
  AnimationCurve FrameOverTime
  bool isInizialised
  int index
  int count
  int allCount
  float animationLifeTime
  bool isVisible
  bool isCorutineStarted
  Renderer currentRenderer
  Material instanceMaterial
  float currentInterpolatedTime
  float animationStartTime
  bool animationStoped
Свойства:
Методы:
  void Start()
  void InitDefaultVariables()
  void Play()
  void PlayDelay()
  void OnEnable()
  void OnDisable()
  IEnumerator UpdateCorutine()
  void UpdateFrame()
  void Update()
  void OnDestroy()
  void .ctor()
--------------------------------------------------
Класс: NGSS_Directional
Наследуется от: MonoBehaviour
Поля:
  float PCSS_GLOBAL_SOFTNESS
  float PCSS_FILTER_DIR_MIN
  float PCSS_FILTER_DIR_MAX
  float BANDING_NOISE_AMOUNT
  SAMPLER_COUNT SAMPLERS_COUNT
Свойства:
Методы:
  void Update()
  void SetGlobalSettings(bool enabled)
  void .ctor()
--------------------------------------------------
Класс: OccludeeSphere
Наследуется от: ValueType
Поля:
  int id
  OccludeeState state
  Sphere sphere
Свойства:
  bool IsRegistered
Методы:
  bool get_IsRegistered()
  void Invalidate()
  void .ctor(int id)
  void .ctor(int id, Sphere sphere)
--------------------------------------------------
Класс: OccludeeState
Наследуется от: SmartListValue
Поля:
  int slot
  bool isStatic
  int layer
  OnVisibilityChanged onVisibilityChanged
  Cell cell
  SimpleList`1<State> states
Свойства:
  bool isVisible
Методы:
  bool get_isVisible()
  OccludeeState Initialize(SimpleList`1<State> states, BufferSet set, int slot, Vector4 sphereBounds, bool isVisible, float minTimeVisible, bool isStatic, int layer, OnVisibilityChanged onVisibilityChanged)
  void Invalidate()
  void MakeVisible()
  void .ctor()
--------------------------------------------------
Класс: Occludee
Наследуется от: MonoBehaviour
Поля:
  float minTimeVisible
  bool isStatic
  bool autoRegister
  bool stickyGizmos
  OccludeeState state
  int occludeeId
  Vector3 center
  float radius
  Renderer renderer
  Collider collider
Свойства:
Методы:
  void Awake()
  void OnEnable()
  void OnDisable()
  void Register()
  void Unregister()
  void OnVisibilityChanged(bool visible)
  void .ctor()
--------------------------------------------------
Класс: OcclusionCPUTest
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: OcclusionCulling
Наследуется от: MonoBehaviour
Поля:
  ComputeShader computeShader
  bool usePixelShaderFallback
  bool useAsyncReadAPI
  Camera camera
  int ComputeThreadsPerGroup
  int InputBufferStride
  int ResultBufferStride
  int OccludeeMaxSlotsPerPool
  int OccludeePoolGranularity
  int StateBufferGranularity
  int GridBufferGranularity
  Queue`1<OccludeeState> statePool
  SimpleList`1<OccludeeState> staticOccludees
  SimpleList`1<State> staticStates
  SimpleList`1<int> staticVisibilityChanged
  SimpleList`1<OccludeeState> dynamicOccludees
  SimpleList`1<State> dynamicStates
  SimpleList`1<int> dynamicVisibilityChanged
  List`1<int> staticChanged
  Queue`1<int> staticRecycled
  List`1<int> dynamicChanged
  Queue`1<int> dynamicRecycled
  BufferSet staticSet
  BufferSet dynamicSet
  BufferSet gridSet
  Vector4[] frustumPlanes
  String[] frustumPropNames
  Single[] matrixToFloatTemp
  Material fallbackMat
  Material depthCopyMat
  Matrix4x4 viewMatrix
  Matrix4x4 projMatrix
  Matrix4x4 viewProjMatrix
  Matrix4x4 prevViewProjMatrix
  Matrix4x4 invViewProjMatrix
  bool useNativePath
  OcclusionCulling instance
  bool Passthrough
  GraphicsDeviceType[] supportedDeviceTypes
  bool _enabled
  bool _safeMode
  DebugFilter _debugShow
  DebugSettings debugSettings
  Material debugMipMat
  float debugDrawDuration
  Material downscaleMat
  Material blitCopyMat
  int hiZLevelCount
  int hiZWidth
  int hiZHeight
  RenderTexture depthTexture
  RenderTexture hiZTexture
  RenderTexture[] hiZLevels
  int GridCellsPerAxis
  int GridHalfCellsPerAxis
  int GridMinHalfCellsPerAxis
  int GridMaxHalfCellsPerAxis
  float GridCellSize
  float GridHalfCellSize
  float GridRcpCellSize
  int GridPoolCapacity
  int GridPoolGranularity
  HashedPool`1<Cell> grid
  Queue`1<Cell> gridChanged
Свойства:
  OcclusionCulling Instance
  bool Supported
  bool Enabled
  bool SafeMode
  DebugFilter DebugShow
  bool HiZReady
Методы:
  OcclusionCulling get_Instance()
  bool get_Supported()
  bool get_Enabled()
  void set_Enabled(bool value)
  bool get_SafeMode()
  void set_SafeMode(bool value)
  DebugFilter get_DebugShow()
  void set_DebugShow(DebugFilter value)
  void GrowStatePool()
  OccludeeState Allocate()
  void Release(OccludeeState state)
  void Awake()
  void OnEnable()
  bool SupportsNativePath()
  void OnDisable()
  void MakeAllVisible()
  void Update()
  void RecursiveAddOccludees(Transform transform, float minTimeVisible, bool isStatic, bool stickyGizmos)
  int FindFreeSlot(SimpleList`1<OccludeeState> occludees, SimpleList`1<State> states, Queue`1<int> recycled)
  OccludeeState GetStateById(int id)
  int RegisterOccludee(Vector3 center, float radius, bool isVisible, float minTimeVisible, bool isStatic, int layer, OnVisibilityChanged onVisibilityChanged)
  int RegisterOccludee(Vector3 center, float radius, bool isVisible, float minTimeVisible, bool isStatic, int layer, OnVisibilityChanged onVisibilityChanged, SimpleList`1<OccludeeState> occludees, SimpleList`1<State> states, Queue`1<int> recycled, List`1<int> changed, BufferSet set, SimpleList`1<int> visibilityChanged)
  void UnregisterOccludee(int id)
  void UnregisterOccludee(int slot, SimpleList`1<OccludeeState> occludees, Queue`1<int> recycled, List`1<int> changed)
  void UpdateDynamicOccludee(int id, Vector3 center, float radius)
  void UpdateBuffers(SimpleList`1<OccludeeState> occludees, SimpleList`1<State> states, BufferSet set, List`1<int> changed, bool isStatic)
  void UpdateCameraMatrices(bool starting)
  void OnPreCull()
  void OnPostRender()
  Single[] MatrixToFloatArray(Matrix4x4 m)
  void PrepareAndDispatch()
  void IssueRead()
  void ResetTiming(SmartList bucket)
  void ResetTiming()
  void ProcessCallbacks(SimpleList`1<OccludeeState> occludees, SimpleList`1<State> states, SimpleList`1<int> changed)
  void RetrieveAndApplyVisibility()
  bool DebugFilterIsDynamic(int filter)
  bool DebugFilterIsStatic(int filter)
  bool DebugFilterIsGrid(int filter)
  void DebugInitialize()
  void DebugShutdown()
  void DebugUpdate()
  void DebugDraw()
  void NormalizePlane(Vector4& plane)
  void ExtractFrustum(Matrix4x4 viewProjMatrix, Vector4[]& planes)
  bool get_HiZReady()
  void CheckResizeHiZMap()
  void InitializeHiZMap()
  void FinalizeHiZMap()
  void InitializeHiZMap(int width, int height)
  void DestroyHiZMap()
  RenderTexture CreateDepthTexture(string name, int width, int height, bool mips)
  RenderTexture CreateDepthTextureMip(string name, int width, int height, int mip)
  void GrabDepthTexture()
  void GenerateHiZMipChain()
  void DebugDrawGizmos()
  int floor(float x)
  Cell RegisterToGrid(OccludeeState occludee)
  void UpdateInGrid(OccludeeState occludee)
  void UnregisterFromGrid(OccludeeState occludee)
  void UpdateGridBuffers()
  bool FrustumCull(Vector4[] planes, Vector4 testSphere)
  int ProcessOccludees_Safe(SimpleList`1<State> states, SmartList bucket, Color32[] results, SimpleList`1<int> changed, Vector4[] frustumPlanes, float time, UInt32 frame)
  int ProcessOccludees_Fast(State[] states, Int32[] bucket, int bucketCount, Color32[] results, int resultCount, Int32[] changed, Int32& changedCount, Vector4[] frustumPlanes, float time, UInt32 frame)
  int ProcessOccludees_Native(State& states, Int32& bucket, int bucketCount, Color32& results, int resultCount, Int32& changed, Int32& changedCount, Vector4& frustumPlanes, float time, UInt32 frame)
  void ApplyVisibility_Safe(float time, UInt32 frame)
  void ApplyVisibility_Fast(float time, UInt32 frame)
  void ApplyVisibility_Native(float time, UInt32 frame)
  void ApplyVisibility_Passthrough(float time, UInt32 frame)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: SEScreenSpaceShadows
Наследуется от: SingletonComponent`1<SEScreenSpaceShadows>
Поля:
  CommandBuffer blendShadowsCommandBuffer
  CommandBuffer renderShadowsCommandBuffer
  Camera attachedCamera
  Light sun
  float blendStrength
  float accumulation
  float lengthFade
  float range
  float zThickness
  int samples
  float nearSampleQuality
  float traceBias
  bool stochasticSampling
  bool leverageTemporalAA
  bool bilateralBlur
  int blurPasses
  float blurDepthTolerance
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VTP
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  Color getSingleVertexColorAtHit(Transform transform, RaycastHit hit)
  Color getFaceVerticesColorAtHit(Transform transform, RaycastHit hit)
  void paintSingleVertexOnHit(Transform transform, RaycastHit hit, Color color, float strength)
  void paintFaceVerticesOnHit(Transform transform, RaycastHit hit, Color color, float strength)
  void deformSingleVertexOnHit(Transform transform, RaycastHit hit, bool up, float strength, bool recalculateNormals, bool recalculateCollider, bool recalculateFlow)
  void deformFaceVerticesOnHit(Transform transform, RaycastHit hit, bool up, float strength, bool recalculateNormals, bool recalculateCollider, bool recalculateFlow)
  void recalculateMeshForFlow(Transform transform, Vector3[] currentVertices, Vector3[] currentNormals, Vector4[] currentTangents)
  Vector4[] calculateMeshTangents(Int32[] triangles, Vector3[] vertices, Vector2[] uv, Vector3[] normals)
  Color VertexColorLerp(Color colorA, Color colorB, float value)
  void .ctor()
--------------------------------------------------
Класс: MeshHolder
Наследуется от: object
Поля:
  Vector3[] _vertices
  Vector3[] _normals
  Int32[] _triangles
  trisPerSubmesh[] _TrianglesOfSubs
  Matrix4x4[] _bindPoses
  BoneWeight[] _boneWeights
  Bounds _bounds
  int _subMeshCount
  Vector4[] _tangents
  Vector2[] _uv
  Vector2[] _uv2
  Vector2[] _uv3
  Color[] _colors
  Vector2[] _uv4
Свойства:
Методы:
  void setAnimationData(Mesh mesh)
  void .ctor()
--------------------------------------------------
Класс: trisPerSubmesh
Наследуется от: object
Поля:
  Int32[] triangles
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VertexColorAnimator
Наследуется от: MonoBehaviour
Поля:
  List`1<MeshHolder> animationMeshes
  List`1<float> animationKeyframes
  float timeScale
  int mode
  float elapsedTime
Свойства:
Методы:
  void initLists()
  void addMesh(Mesh mesh, float atPosition)
  void Start()
  void replaceKeyframe(int frameIndex, Mesh mesh)
  void deleteKeyframe(int frameIndex)
  void scrobble(float scrobblePos)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: VertexColorStream
Наследуется от: MonoBehaviour
Поля:
  Mesh originalMesh
  Mesh paintedMesh
  MeshHolder meshHold
  Vector3[] _vertices
  Vector3[] _normals
  Int32[] _triangles
  Int32[][] _Subtriangles
  Matrix4x4[] _bindPoses
  BoneWeight[] _boneWeights
  Bounds _bounds
  int _subMeshCount
  Vector4[] _tangents
  Vector2[] _uv
  Vector2[] _uv2
  Vector2[] _uv3
  Color[] _colors
  Vector2[] _uv4
Свойства:
Методы:
  void OnDidApplyAnimationProperties()
  void init(Mesh origMesh, bool destroyOld)
  void setWholeMesh(Mesh tmpMesh)
  Vector3[] setVertices(Vector3[] _deformedVertices)
  Vector3[] getVertices()
  Vector3[] getNormals()
  Int32[] getTriangles()
  void setTangents(Vector4[] _meshTangents)
  Vector4[] getTangents()
  void setColors(Color[] _vertexColors)
  Color[] getColors()
  Vector2[] getUVs()
  void setUV4s(Vector2[] _uv4s)
  Vector2[] getUV4s()
  void unlink()
  void rebuild()
  void Start()
  void .ctor()
--------------------------------------------------
Класс: VertexStreamChildrenRebuilder
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VisualizeTexelDensity
Наследуется от: MonoBehaviour
Поля:
  Shader shader
  string shaderTag
  int texelsPerMeter
  float overlayOpacity
  bool showHUD
  Camera mainCamera
  bool initialized
  int screenWidth
  int screenHeight
  Camera texelDensityCamera
  RenderTexture texelDensityRT
  Texture texelDensityGradTex
  Material texelDensityOverlayMat
  VisualizeTexelDensity instance
Свойства:
  VisualizeTexelDensity Instance
Методы:
  VisualizeTexelDensity get_Instance()
  void Awake()
  void OnEnable()
  void OnDisable()
  void LoadResources()
  void SafeDestroyViewTexelDensity()
  void SafeDestroyViewTexelDensityRT()
  void UpdateViewTexelDensity(bool screenResized)
  bool CheckScreenResized(int width, int height)
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void DrawGUIText(float x, float y, Vector2 size, string text, GUIStyle fontStyle)
  void OnGUI()
  void .ctor()
--------------------------------------------------
Класс: ViewmodelClothing
Наследуется от: MonoBehaviour
Поля:
  SkeletonSkin[] SkeletonSkins
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: WorkshopIconRender
Наследуется от: MonoBehaviour
Поля:
  int MinimumId
  int MaximumId
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VLB.BeamGeometry
Наследуется от: MonoBehaviour
Поля:
  VolumetricLightBeam m_Master
  Matrix4x4 m_ColorGradientMatrix
  MeshType m_CurrentMeshType
  MeshRenderer <meshRenderer>k__BackingField
  MeshFilter <meshFilter>k__BackingField
  Material <material>k__BackingField
  Mesh <coneMesh>k__BackingField
Свойства:
  MeshRenderer meshRenderer
  MeshFilter meshFilter
  Material material
  Mesh coneMesh
  bool visible
  int sortingLayerID
  int sortingOrder
Методы:
  MeshRenderer get_meshRenderer()
  void set_meshRenderer(MeshRenderer value)
  MeshFilter get_meshFilter()
  void set_meshFilter(MeshFilter value)
  Material get_material()
  void set_material(Material value)
  Mesh get_coneMesh()
  void set_coneMesh(Mesh value)
  bool get_visible()
  void set_visible(bool value)
  int get_sortingLayerID()
  void set_sortingLayerID(int value)
  int get_sortingOrder()
  void set_sortingOrder(int value)
  void Start()
  void OnDestroy()
  bool IsUsingCustomRenderPipeline()
  void OnEnable()
  void OnDisable()
  void Initialize(VolumetricLightBeam master, Shader shader)
  void RegenerateMesh()
  void ComputeLocalMatrix()
  void UpdateMaterialAndBounds()
  void SetClippingPlane(Plane planeWS)
  void SetClippingPlaneOff()
  void OnBeginCameraRendering(ScriptableRenderContext context, Camera cam)
  void OnWillRenderObject()
  void UpdateCameraRelatedProperties(Camera cam)
  void .ctor()
--------------------------------------------------
Класс: VLB.Config
Наследуется от: ScriptableObject
Поля:
  int geometryLayerID
  string geometryTag
  int geometryRenderQueue
  bool forceSinglePass
  Shader beamShader1Pass
  Shader beamShader2Pass
  int sharedMeshSides
  int sharedMeshSegments
  float globalNoiseScale
  Vector3 globalNoiseVelocity
  TextAsset noise3DData
  int noise3DSize
  ParticleSystem dustParticlesPrefab
  Config m_Instance
Свойства:
  Shader beamShader
  Vector4 globalNoiseParam
  Config Instance
Методы:
  Shader get_beamShader()
  Vector4 get_globalNoiseParam()
  void Reset()
  ParticleSystem NewVolumetricDustParticles()
  Config get_Instance()
  void .ctor()
--------------------------------------------------
Класс: VLB.Consts
Наследуется от: object
Поля:
  string HelpUrlBase
  string HelpUrlBeam
  string HelpUrlDustParticles
  string HelpUrlDynamicOcclusion
  string HelpUrlTriggerZone
  string HelpUrlConfig
  bool ProceduralObjectsVisibleInEditor
  Color FlatColor
  ColorMode ColorModeDefault
  float Alpha
  float SpotAngleDefault
  float SpotAngleMin
  float SpotAngleMax
  float ConeRadiusStart
  MeshType GeomMeshType
  int GeomSidesDefault
  int GeomSidesMin
  int GeomSidesMax
  int GeomSegmentsDefault
  int GeomSegmentsMin
  int GeomSegmentsMax
  bool GeomCap
  AttenuationEquation AttenuationEquationDefault
  float AttenuationCustomBlending
  float FadeStart
  float FadeEnd
  float FadeMinThreshold
  float DepthBlendDistance
  float CameraClippingDistance
  float FresnelPowMaxValue
  float FresnelPow
  float GlareFrontal
  float GlareBehind
  float NoiseIntensityMin
  float NoiseIntensityMax
  float NoiseIntensityDefault
  float NoiseScaleMin
  float NoiseScaleMax
  float NoiseScaleDefault
  Vector3 NoiseVelocityDefault
  BlendingMode BlendingModeDefault
  BlendMode[] BlendingMode_SrcFactor
  BlendMode[] BlendingMode_DstFactor
  Boolean[] BlendingMode_AlphaAsBlack
  float DynOcclusionMinSurfaceRatioDefault
  float DynOcclusionMinSurfaceRatioMin
  float DynOcclusionMinSurfaceRatioMax
  float DynOcclusionMaxSurfaceDotDefault
  float DynOcclusionMaxSurfaceAngleMin
  float DynOcclusionMaxSurfaceAngleMax
  int ConfigGeometryLayerIDDefault
  string ConfigGeometryTagDefault
  RenderQueue ConfigGeometryRenderQueueDefault
  bool ConfigGeometryForceSinglePassDefault
  int ConfigNoise3DSizeDefault
  int ConfigSharedMeshSides
  int ConfigSharedMeshSegments
Свойства:
  HideFlags ProceduralObjectsHideFlags
Методы:
  HideFlags get_ProceduralObjectsHideFlags()
  void .cctor()
--------------------------------------------------
Класс: VLB.DynamicOcclusion
Наследуется от: MonoBehaviour
Поля:
  LayerMask layerMask
  float minOccluderArea
  int waitFrameCount
  float minSurfaceRatio
  float maxSurfaceDot
  PlaneAlignment planeAlignment
  float planeOffset
  VolumetricLightBeam m_Master
  int m_FrameCountToWait
  float m_RangeMultiplier
  UInt32 m_PrevNonSubHitDirectionId
Свойства:
Методы:
  void OnValidate()
  void OnEnable()
  void OnDisable()
  void Start()
  void LateUpdate()
  Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
  RaycastHit GetBestHit(Vector3 rayPos, Vector3 rayDir)
  Vector3 GetDirection(UInt32 dirInt)
  bool IsHitValid(RaycastHit hit)
  void ProcessRaycasts()
  void SetHit(RaycastHit hit)
  void SetHitNull()
  void SetClippingPlane(Plane planeWS)
  void SetClippingPlaneOff()
  void .ctor()
--------------------------------------------------
Класс: VLB.ColorMode
Наследуется от: Enum
Поля:
  int value__
  ColorMode Flat
  ColorMode Gradient
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.AttenuationEquation
Наследуется от: Enum
Поля:
  int value__
  AttenuationEquation Linear
  AttenuationEquation Quadratic
  AttenuationEquation Blend
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.BlendingMode
Наследуется от: Enum
Поля:
  int value__
  BlendingMode Additive
  BlendingMode SoftAdditive
  BlendingMode TraditionalTransparency
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.MeshType
Наследуется от: Enum
Поля:
  int value__
  MeshType Shared
  MeshType Custom
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.RenderQueue
Наследуется от: Enum
Поля:
  int value__
  RenderQueue Custom
  RenderQueue Background
  RenderQueue Geometry
  RenderQueue AlphaTest
  RenderQueue GeometryLast
  RenderQueue Transparent
  RenderQueue Overlay
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.PlaneAlignment
Наследуется от: Enum
Поля:
  int value__
  PlaneAlignment Surface
  PlaneAlignment Beam
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.GlobalMesh
Наследуется от: object
Поля:
  Mesh ms_Mesh
Свойства:
  Mesh mesh
Методы:
  Mesh get_mesh()
--------------------------------------------------
Класс: VLB.HighlightNullAttribute
Наследуется от: PropertyAttribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: VLB.MeshGenerator
Наследуется от: object
Поля:
  float kMinTruncatedRadius
Свойства:
  bool duplicateBackFaces
Методы:
  bool get_duplicateBackFaces()
  Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap)
  Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap)
  Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap)
  int GetVertexCount(int numSides, int numSegments, bool geomCap)
  int GetIndicesCount(int numSides, int numSegments, bool geomCap)
  int GetSharedMeshVertexCount()
  int GetSharedMeshIndicesCount()
--------------------------------------------------
Класс: VLB.Noise3D
Наследуется от: object
Поля:
  bool ms_IsSupportedChecked
  bool ms_IsSupported
  Texture3D ms_NoiseTexture
  HideFlags kHideFlags
  int kMinShaderLevel
Свойства:
  bool isSupported
  bool isProperlyLoaded
  string isNotSupportedString
Методы:
  bool get_isSupported()
  bool get_isProperlyLoaded()
  string get_isNotSupportedString()
  void OnStartUp()
  void LoadIfNeeded()
  Texture3D LoadTexture3D(TextAsset textData, int size)
--------------------------------------------------
Класс: VLB.TriggerZone
Наследуется от: MonoBehaviour
Поля:
  bool setIsTrigger
  float rangeMultiplier
  int kMeshColliderNumSides
  Mesh m_Mesh
Свойства:
Методы:
  void Update()
  void .ctor()
--------------------------------------------------
Класс: VLB.Utils
Наследуется от: object
Поля:
  FloatPackingPrecision ms_FloatPackingPrecision
  int kFloatPackingHighMinShaderLevel
Свойства:
Методы:
  string GetPath(Transform current)
  T NewWithComponent(string name)
  T GetOrAddComponent(GameObject self)
  T GetOrAddComponent(MonoBehaviour self)
  bool HasFlag(Enum mask, Enum flags)
  Vector2 xy(Vector3 aVector)
  Vector2 xz(Vector3 aVector)
  Vector2 yz(Vector3 aVector)
  Vector2 yx(Vector3 aVector)
  Vector2 zx(Vector3 aVector)
  Vector2 zy(Vector3 aVector)
  float GetVolumeCubic(Bounds self)
  float GetMaxArea2D(Bounds self)
  Color Opaque(Color self)
  void GizmosDrawPlane(Vector3 normal, Vector3 position, Color color, float size)
  Plane TranslateCustom(Plane plane, Vector3 translation)
  bool IsValid(Plane plane)
  Matrix4x4 SampleInMatrix(Gradient self, int floatPackingPrecision)
  Color[] SampleInArray(Gradient self, int samplesCount)
  Vector4 Vector4_Floor(Vector4 vec)
  float4 ToFloat4(Color color)
  float PackToFloat(Color color, int floatPackingPrecision)
  FloatPackingPrecision GetFloatPackingPrecision()
  void MarkCurrentSceneDirty()
--------------------------------------------------
Класс: VLB.Version
Наследуется от: object
Поля:
  int Current
Свойства:
Методы:
--------------------------------------------------
Класс: VLB.VolumetricDustParticles
Наследуется от: MonoBehaviour
Поля:
  float alpha
  float size
  Direction direction
  float speed
  float density
  float spawnMaxDistance
  bool cullingEnabled
  float cullingMaxDistance
  bool <isCulled>k__BackingField
  bool isFeatureSupported
  ParticleSystem m_Particles
  ParticleSystemRenderer m_Renderer
  bool ms_NoMainCameraLogged
  Camera ms_MainCamera
  VolumetricLightBeam m_Master
Свойства:
  bool isCulled
  bool particlesAreInstantiated
  int particlesCurrentCount
  int particlesMaxCount
  Camera mainCamera
Методы:
  bool get_isCulled()
  void set_isCulled(bool value)
  bool get_particlesAreInstantiated()
  int get_particlesCurrentCount()
  int get_particlesMaxCount()
  Camera get_mainCamera()
  void Start()
  void InstantiateParticleSystem()
  void OnEnable()
  void SetActiveAndPlay()
  void OnDisable()
  void OnDestroy()
  void Update()
  void SetParticleProperties()
  void UpdateCulling()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: VLB.VolumetricLightBeam
Наследуется от: MonoBehaviour
Поля:
  bool colorFromLight
  ColorMode colorMode
  Color color
  Gradient colorGradient
  float alphaInside
  float alphaOutside
  BlendingMode blendingMode
  bool spotAngleFromLight
  float spotAngle
  float coneRadiusStart
  MeshType geomMeshType
  int geomCustomSides
  int geomCustomSegments
  bool geomCap
  bool fadeEndFromLight
  AttenuationEquation attenuationEquation
  float attenuationCustomBlending
  float fadeStart
  float fadeEnd
  float depthBlendDistance
  float cameraClippingDistance
  float glareFrontal
  float glareBehind
  float boostDistanceInside
  float fresnelPowInside
  float fresnelPow
  bool noiseEnabled
  float noiseIntensity
  bool noiseScaleUseGlobal
  float noiseScaleLocal
  bool noiseVelocityUseGlobal
  Vector3 noiseVelocityLocal
  Plane m_PlaneWS
  int pluginVersion
  bool _TrackChangesDuringPlaytime
  int _SortingLayerID
  int _SortingOrder
  BeamGeometry m_BeamGeom
  Coroutine m_CoPlaytimeUpdate
  Light _CachedLight
Свойства:
  float coneAngle
  float coneRadiusEnd
  float coneVolume
  float coneApexOffsetZ
  int geomSides
  int geomSegments
  float attenuationLerpLinearQuad
  int sortingLayerID
  string sortingLayerName
  int sortingOrder
  bool trackChangesDuringPlaytime
  bool isCurrentlyTrackingChanges
  bool hasGeometry
  Bounds bounds
  int blendingModeAsInt
  MeshRenderer Renderer
  string meshStats
  int meshVerticesCount
  int meshTrianglesCount
  Light lightSpotAttached
Методы:
  float get_coneAngle()
  float get_coneRadiusEnd()
  float get_coneVolume()
  float get_coneApexOffsetZ()
  int get_geomSides()
  void set_geomSides(int value)
  int get_geomSegments()
  void set_geomSegments(int value)
  float get_attenuationLerpLinearQuad()
  int get_sortingLayerID()
  void set_sortingLayerID(int value)
  string get_sortingLayerName()
  void set_sortingLayerName(string value)
  int get_sortingOrder()
  void set_sortingOrder(int value)
  bool get_trackChangesDuringPlaytime()
  void set_trackChangesDuringPlaytime(bool value)
  bool get_isCurrentlyTrackingChanges()
  bool get_hasGeometry()
  Bounds get_bounds()
  void SetClippingPlane(Plane planeWS)
  void SetClippingPlaneOff()
  bool IsColliderHiddenByDynamicOccluder(Collider collider)
  int get_blendingModeAsInt()
  MeshRenderer get_Renderer()
  string get_meshStats()
  int get_meshVerticesCount()
  int get_meshTrianglesCount()
  Light get_lightSpotAttached()
  float GetInsideBeamFactor(Vector3 posWS)
  float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
  void Generate()
  void GenerateGeometry()
  void UpdateAfterManualPropertyChange()
  void Start()
  void OnEnable()
  void OnDisable()
  void StartPlaytimeUpdateIfNeeded()
  IEnumerator CoPlaytimeUpdate()
  void OnDestroy()
  void DestroyBeam()
  void AssignPropertiesFromSpotLight(Light lightSpot)
  void ClampProperties()
  void ValidateProperties()
  void HandleBackwardCompatibility(int serializedVersion, int newVersion)
  void .ctor()
--------------------------------------------------
Класс: Smaa.MinAttribute
Наследуется от: PropertyAttribute
Поля:
  float min
Свойства:
Методы:
  void .ctor(float min)
--------------------------------------------------
Класс: Smaa.PredicationPreset
Наследуется от: object
Поля:
  float Threshold
  float Scale
  float Strength
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Smaa.Preset
Наследуется от: object
Поля:
  bool DiagDetection
  bool CornerDetection
  float Threshold
  float DepthThreshold
  int MaxSearchSteps
  int MaxSearchStepsDiag
  int CornerRounding
  float LocalContrastAdaptationFactor
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Smaa.EdgeDetectionMethod
Наследуется от: Enum
Поля:
  int value__
  EdgeDetectionMethod Luma
  EdgeDetectionMethod Color
  EdgeDetectionMethod Depth
Свойства:
Методы:
--------------------------------------------------
Класс: Smaa.QualityPreset
Наследуется от: Enum
Поля:
  int value__
  QualityPreset Low
  QualityPreset Medium
  QualityPreset High
  QualityPreset Ultra
  QualityPreset Custom
Свойства:
Методы:
--------------------------------------------------
Класс: Smaa.DebugPass
Наследуется от: Enum
Поля:
  int value__
  DebugPass Off
  DebugPass Edges
  DebugPass Weights
Свойства:
Методы:
--------------------------------------------------
Класс: Smaa.SMAA
Наследуется от: MonoBehaviour
Поля:
  DebugPass DebugPass
  QualityPreset Quality
  EdgeDetectionMethod DetectionMethod
  bool UsePredication
  Preset CustomPreset
  PredicationPreset CustomPredicationPreset
  Shader Shader
  Texture2D AreaTex
  Texture2D SearchTex
  Camera m_Camera
  Preset m_LowPreset
  Preset m_MediumPreset
  Preset m_HighPreset
  Preset m_UltraPreset
  Material m_Material
Свойства:
  Material Material
Методы:
  Material get_Material()
  void .ctor()
--------------------------------------------------
Класс: VacuumBreather.PidController
Наследуется от: object
Поля:
  float MaxOutput
  float _integralMax
  float _integral
  float _kp
  float _ki
  float _kd
Свойства:
  float Kp
  float Ki
  float Kd
Методы:
  void .ctor(float kp, float ki, float kd)
  float get_Kp()
  void set_Kp(float value)
  float get_Ki()
  void set_Ki(float value)
  float get_Kd()
  void set_Kd(float value)
  float ComputeOutput(float error, float delta, float deltaTime)
--------------------------------------------------
Класс: VacuumBreather.PidQuaternionController
Наследуется от: object
Поля:
  PidController[] _internalController
Свойства:
  float Kp
  float Ki
  float Kd
Методы:
  void .ctor(float kp, float ki, float kd)
  float get_Kp()
  void set_Kp(float value)
  float get_Ki()
  void set_Ki(float value)
  float get_Kd()
  void set_Kd(float value)
  Quaternion MultiplyAsVector(Matrix4x4 matrix, Quaternion quaternion)
  Quaternion ToEulerAngleQuaternion(Vector3 eulerAngles)
  Vector3 ComputeRequiredAngularAcceleration(Quaternion currentOrientation, Quaternion desiredOrientation, Vector3 currentAngularVelocity, float deltaTime)
  Quaternion ComputeOutput(Quaternion error, Quaternion delta, float deltaTime)
--------------------------------------------------
Класс: VacuumBreather.QuaternionExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  Quaternion Multiply(Quaternion quaternion, float scalar)
  Quaternion RequiredRotation(Quaternion from, Quaternion to)
  Quaternion Subtract(Quaternion lhs, Quaternion rhs)
--------------------------------------------------
Класс: AmplifyOcclusion.VersionInfo
Наследуется от: object
Поля:
  byte Major
  byte Minor
  byte Release
  string StageSuffix
  int m_major
  int m_minor
  int m_release
Свойства:
  int Number
Методы:
  string StaticToString()
  string ToString()
  int get_Number()
  void .ctor()
  void .ctor(byte major, byte minor, byte release)
  VersionInfo Current()
  bool Matches(VersionInfo version)
  void .cctor()
--------------------------------------------------
Класс: TinyJSON.Decoder
Наследуется от: object
Поля:
  string whiteSpace
  string wordBreak
  StringReader json
Свойства:
  char PeekChar
  char NextChar
  string NextWord
  Token NextToken
Методы:
  void .ctor(string jsonString)
  Variant Decode(string jsonString)
  void Dispose()
  ProxyObject DecodeObject()
  ProxyArray DecodeArray()
  Variant DecodeValue()
  Variant DecodeByToken(Token token)
  Variant DecodeString()
  Variant DecodeNumber()
  void ConsumeWhiteSpace()
  char get_PeekChar()
  char get_NextChar()
  string get_NextWord()
  Token get_NextToken()
--------------------------------------------------
Класс: TinyJSON.EncodeOptions
Наследуется от: Enum
Поля:
  int value__
  EncodeOptions None
  EncodeOptions PrettyPrint
  EncodeOptions NoTypeHints
  EncodeOptions IncludePublicProperties
  EncodeOptions EnforceHierarchyOrder
  EncodeOptions EnforceHeirarchyOrder
Свойства:
Методы:
--------------------------------------------------
Класс: TinyJSON.Encoder
Наследуется от: object
Поля:
  Type includeAttrType
  Type excludeAttrType
  Type typeHintAttrType
  StringBuilder builder
  EncodeOptions options
  int indent
Свойства:
  bool PrettyPrintEnabled
  bool TypeHintsEnabled
  bool IncludePublicPropertiesEnabled
  bool EnforceHierarchyOrderEnabled
Методы:
  void .ctor(EncodeOptions options)
  string Encode(object obj)
  string Encode(object obj, EncodeOptions options)
  bool get_PrettyPrintEnabled()
  bool get_TypeHintsEnabled()
  bool get_IncludePublicPropertiesEnabled()
  bool get_EnforceHierarchyOrderEnabled()
  void EncodeValue(object value, bool forceTypeHint)
  IEnumerable`1<FieldInfo> GetFieldsForType(Type type)
  IEnumerable`1<PropertyInfo> GetPropertiesForType(Type type)
  void EncodeObject(object value, bool forceTypeHint)
  void EncodeProxyArray(ProxyArray value)
  void EncodeProxyObject(ProxyObject value)
  void EncodeDictionary(IDictionary value, bool forceTypeHint)
  void EncodeList(IList value, bool forceTypeHint)
  void EncodeArray(Array value, bool forceTypeHint)
  void EncodeArrayRank(Array value, int rank, Int32[] indices, bool forceTypeHint)
  void EncodeString(string value)
  void AppendIndent()
  void AppendOpenBrace()
  void AppendCloseBrace()
  void AppendOpenBracket()
  void AppendCloseBracket()
  void AppendComma(bool firstItem)
  void AppendColon()
  void .cctor()
--------------------------------------------------
Класс: TinyJSON.Extensions
Наследуется от: object
Поля:
Свойства:
Методы:
  bool AnyOfType(IEnumerable`1<TSource> source, Type expectedType)
--------------------------------------------------
Класс: TinyJSON.Include
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.Exclude
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.AfterDecode
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.BeforeEncode
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.TypeHint
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.DecodeAlias
Наследуется от: Attribute
Поля:
  String[] <Names>k__BackingField
Свойства:
  String[] Names
Методы:
  String[] get_Names()
  void set_Names(String[] value)
  void .ctor(String[] names)
  bool Contains(string name)
--------------------------------------------------
Класс: TinyJSON.Skip
Наследуется от: Exclude
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.Load
Наследуется от: AfterDecode
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: TinyJSON.DecodeException
Наследуется от: Exception
Поля:
Свойства:
Методы:
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
--------------------------------------------------
Класс: TinyJSON.JSON
Наследуется от: object
Поля:
  Type includeAttrType
  Type excludeAttrType
  Type decodeAliasAttrType
  Dictionary`2<string, Type> typeCache
  BindingFlags instanceBindingFlags
  BindingFlags staticBindingFlags
  MethodInfo decodeTypeMethod
  MethodInfo decodeListMethod
  MethodInfo decodeDictionaryMethod
  MethodInfo decodeArrayMethod
  MethodInfo decodeMultiRankArrayMethod
Свойства:
Методы:
  Variant Load(string json)
  string Dump(object data)
  string Dump(object data, EncodeOptions options)
  void MakeInto(Variant data, T& item)
  Type FindType(string fullName)
  T DecodeType(Variant data)
  List`1<T> DecodeList(Variant data)
  Dictionary`2<TKey, TValue> DecodeDictionary(Variant data)
  T[] DecodeArray(Variant data)
  void DecodeMultiRankArray(ProxyArray arrayData, Array array, int arrayRank, Int32[] indices)
  void SupportTypeForAOT()
  void SupportValueTypesForAOT()
  void .cctor()
--------------------------------------------------
Класс: TinyJSON.ProxyArray
Наследуется от: Variant
Поля:
  List`1<Variant> list
Свойства:
  Variant Item
  int Count
Методы:
  void .ctor()
  IEnumerator`1<Variant> System.Collections.Generic.IEnumerable<TinyJSON.Variant>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Add(Variant item)
  Variant get_Item(int index)
  void set_Item(int index, Variant value)
  int get_Count()
  bool CanBeMultiRankArray(Int32[] rankLengths)
  bool CanBeMultiRankArray(int rank, Int32[] rankLengths)
--------------------------------------------------
Класс: TinyJSON.ProxyBoolean
Наследуется от: Variant
Поля:
  bool value
Свойства:
Методы:
  void .ctor(bool value)
  bool ToBoolean(IFormatProvider provider)
  string ToString(IFormatProvider provider)
--------------------------------------------------
Класс: TinyJSON.ProxyNumber
Наследуется от: Variant
Поля:
  Char[] floatingPointCharacters
  IConvertible value
Свойства:
Методы:
  void .ctor(IConvertible value)
  IConvertible Parse(string value)
  bool ToBoolean(IFormatProvider provider)
  byte ToByte(IFormatProvider provider)
  char ToChar(IFormatProvider provider)
  decimal ToDecimal(IFormatProvider provider)
  double ToDouble(IFormatProvider provider)
  short ToInt16(IFormatProvider provider)
  int ToInt32(IFormatProvider provider)
  long ToInt64(IFormatProvider provider)
  sbyte ToSByte(IFormatProvider provider)
  float ToSingle(IFormatProvider provider)
  string ToString(IFormatProvider provider)
  ushort ToUInt16(IFormatProvider provider)
  UInt32 ToUInt32(IFormatProvider provider)
  ulong ToUInt64(IFormatProvider provider)
  void .cctor()
--------------------------------------------------
Класс: TinyJSON.ProxyObject
Наследуется от: Variant
Поля:
  string TypeHintKey
  Dictionary`2<string, Variant> dict
Свойства:
  string TypeHint
  Variant Item
  int Count
  KeyCollection<string, Variant> Keys
  ValueCollection<string, Variant> Values
Методы:
  void .ctor()
  IEnumerator`1<KeyValuePair`2<string, Variant>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,TinyJSON.Variant>>.GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  void Add(string key, Variant item)
  bool TryGetValue(string key, Variant& item)
  string get_TypeHint()
  Variant get_Item(string key)
  void set_Item(string key, Variant value)
  int get_Count()
  KeyCollection<string, Variant> get_Keys()
  ValueCollection<string, Variant> get_Values()
--------------------------------------------------
Класс: TinyJSON.ProxyString
Наследуется от: Variant
Поля:
  string value
Свойства:
Методы:
  void .ctor(string value)
  string ToString(IFormatProvider provider)
--------------------------------------------------
Класс: TinyJSON.Variant
Наследуется от: object
Поля:
  IFormatProvider FormatProvider
Свойства:
  Variant Item
  Variant Item
Методы:
  void Make(T& item)
  T Make()
  string ToJSON()
  TypeCode GetTypeCode()
  object ToType(Type conversionType, IFormatProvider provider)
  DateTime ToDateTime(IFormatProvider provider)
  bool ToBoolean(IFormatProvider provider)
  byte ToByte(IFormatProvider provider)
  char ToChar(IFormatProvider provider)
  decimal ToDecimal(IFormatProvider provider)
  double ToDouble(IFormatProvider provider)
  short ToInt16(IFormatProvider provider)
  int ToInt32(IFormatProvider provider)
  long ToInt64(IFormatProvider provider)
  sbyte ToSByte(IFormatProvider provider)
  float ToSingle(IFormatProvider provider)
  string ToString(IFormatProvider provider)
  ushort ToUInt16(IFormatProvider provider)
  UInt32 ToUInt32(IFormatProvider provider)
  ulong ToUInt64(IFormatProvider provider)
  string ToString()
  Variant get_Item(string key)
  void set_Item(string key, Variant value)
  Variant get_Item(int index)
  void set_Item(int index, Variant value)
  bool op_Implicit(Variant variant)
  float op_Implicit(Variant variant)
  double op_Implicit(Variant variant)
  ushort op_Implicit(Variant variant)
  short op_Implicit(Variant variant)
  UInt32 op_Implicit(Variant variant)
  int op_Implicit(Variant variant)
  ulong op_Implicit(Variant variant)
  long op_Implicit(Variant variant)
  decimal op_Implicit(Variant variant)
  string op_Implicit(Variant variant)
  Guid op_Implicit(Variant variant)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: JesseStiller.TerrainFormerExtension.TerrainFormer
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void Awake()
  void .ctor()
--------------------------------------------------
Класс: JesseStiller.TerrainFormerExtension.TerrainSetNeighbours
Наследуется от: MonoBehaviour
Поля:
  Terrain leftTerrain
  Terrain topTerrain
  Terrain rightTerrain
  Terrain bottomTerrain
Свойства:
Методы:
  void Awake()
  void SetNeighbours(Terrain leftTerrain, Terrain topTerrain, Terrain rightTerrain, Terrain bottomTerrain)
  void .ctor()
--------------------------------------------------
Класс: Painting.Brush
Наследуется от: object
Поля:
  float spacing
  Vector2 brushSize
  Texture2D texture
  Color color
  bool erase
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: GameTips.BaseTip
Наследуется от: object
Поля:
Свойства:
  bool ShouldShow
  string Type
Методы:
  Phrase GetPhrase()
  bool get_ShouldShow()
  string get_Type()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.BanList`1
Наследуется от: object
Поля:
  Dictionary`2<TKey, double> _bans
Свойства:
Методы:
  void .ctor()
  void Ban(TKey key, double timeInSeconds)
  bool IsBanned(TKey key)
  void Cleanup()
--------------------------------------------------
Класс: CompanionServer.CameraRendererManager
Наследуется от: SingletonComponent`1<CameraRendererManager>
Поля:
  Stack`1<CameraRenderTask> _taskPool
  int _tasksTaken
  int _tasksReturned
  int _tasksCreated
  Stopwatch _stopwatch
  List`1<CameraRenderer> _renderers
  int _renderIndex
  int _completeIndex
Свойства:
Методы:
  void OnDestroy()
  void StartRendering(IRemoteControllable rc)
  void Tick()
  CameraRenderTask BorrowTask()
  void ReturnTask(CameraRenderTask& task)
  void pool_stats(Arg arg)
  void DispatchRenderers()
  void CompleteRenderers()
  void CleanupRenderers()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.CameraTarget
Наследуется от: ValueType
Поля:
  NetworkableId <EntityId>k__BackingField
Свойства:
  NetworkableId EntityId
Методы:
  NetworkableId get_EntityId()
  void .ctor(NetworkableId entityId)
  bool Equals(CameraTarget other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(CameraTarget left, CameraTarget right)
  bool op_Inequality(CameraTarget left, CameraTarget right)
--------------------------------------------------
Класс: CompanionServer.ChatLog
Наследуется от: object
Поля:
  int MaxBacklog
  Dictionary`2<ulong, ChatState> States
Свойства:
Методы:
  void Record(ulong teamId, ulong steamId, string name, string message, string color, UInt32 time)
  void Remove(ulong teamId)
  IReadOnlyList`1<Entry> GetHistory(ulong teamId)
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.ClanTarget
Наследуется от: ValueType
Поля:
  long <ClanId>k__BackingField
Свойства:
  long ClanId
Методы:
  long get_ClanId()
  void .ctor(long clanId)
  bool Equals(ClanTarget other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(ClanTarget left, ClanTarget right)
  bool op_Inequality(ClanTarget left, ClanTarget right)
--------------------------------------------------
Класс: CompanionServer.Connection
Наследуется от: object
Поля:
  MemoryStream MessageStream
  Listener _listener
  IWebSocketConnection _connection
  Nullable`1<PlayerTarget> _subscribedPlayer
  HashSet`1<EntityTarget> _subscribedEntities
  HashSet`1<ClanTarget> _subscribedClans
  IRemoteControllable _currentCamera
  ulong _cameraViewerSteamId
  bool _isControllingCamera
  long <ConnectionId>k__BackingField
  InputState <InputState>k__BackingField
Свойства:
  long ConnectionId
  IPAddress Address
  IRemoteControllable CurrentCamera
  bool IsControllingCamera
  ulong ControllingSteamId
  InputState InputState
Методы:
  long get_ConnectionId()
  void set_ConnectionId(long value)
  IPAddress get_Address()
  void .ctor(long connectionId, Listener listener, IWebSocketConnection connection)
  void OnClose()
  void OnMessage(Span`1<byte> data)
  void Close()
  void Send(AppResponse response)
  void Subscribe(PlayerTarget target)
  void Subscribe(EntityTarget target)
  IRemoteControllable get_CurrentCamera()
  bool get_IsControllingCamera()
  ulong get_ControllingSteamId()
  InputState get_InputState()
  void set_InputState(InputState value)
  bool BeginViewing(IRemoteControllable camera)
  void EndViewing()
  void Subscribe(ClanTarget target)
  void Unsubscribe(ClanTarget target)
  void SendRaw(MemoryBuffer data)
  bool TryGetCameraTarget(IRemoteControllable camera, CameraTarget& target)
  void .cctor()
--------------------------------------------------
Класс: CompanionServer.ConnectionLimiter
Наследуется от: object
Поля:
  object _sync
  Dictionary`2<IPAddress, int> _addressCounts
  int _overallCount
Свойства:
Методы:
  void .ctor()
  bool TryAdd(IPAddress address)
  void Remove(IPAddress address)
  void Clear()
  string ToString()
--------------------------------------------------
Класс: CompanionServer.EntityTarget
Наследуется от: ValueType
Поля:
  NetworkableId <EntityId>k__BackingField
Свойства:
  NetworkableId EntityId
Методы:
  NetworkableId get_EntityId()
  void .ctor(NetworkableId entityId)
  bool Equals(EntityTarget other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(EntityTarget left, EntityTarget right)
  bool op_Inequality(EntityTarget left, EntityTarget right)
--------------------------------------------------
Класс: CompanionServer.IConnection
Поля:
Свойства:
  long ConnectionId
  IRemoteControllable CurrentCamera
  bool IsControllingCamera
  ulong ControllingSteamId
  InputState InputState
Методы:
  long get_ConnectionId()
  void Send(AppResponse response)
  void Subscribe(PlayerTarget target)
  void Subscribe(EntityTarget target)
  void Subscribe(ClanTarget target)
  void Unsubscribe(ClanTarget target)
  IRemoteControllable get_CurrentCamera()
  bool get_IsControllingCamera()
  ulong get_ControllingSteamId()
  InputState get_InputState()
  void set_InputState(InputState value)
  bool BeginViewing(IRemoteControllable camera)
  void EndViewing()
--------------------------------------------------
Класс: CompanionServer.Listener
Наследуется от: object
Поля:
  ByteArrayStream Stream
  TokenBucketList`1<IPAddress> _ipTokenBuckets
  BanList`1<IPAddress> _ipBans
  TokenBucketList`1<ulong> _playerTokenBuckets
  TokenBucketList`1<ulong> _pairingTokenBuckets
  Queue`1<Message> _messageQueue
  WebSocketServer _server
  Stopwatch _stopwatch
  RealTimeSince _lastCleanup
  long _nextConnectionId
  IPAddress Address
  int Port
  ConnectionLimiter Limiter
  SubscriberList`3<PlayerTarget, Connection, AppBroadcast> PlayerSubscribers
  SubscriberList`3<EntityTarget, Connection, AppBroadcast> EntitySubscribers
  SubscriberList`3<ClanTarget, Connection, AppBroadcast> ClanSubscribers
  SubscriberList`3<CameraTarget, Connection, AppBroadcast> CameraSubscribers
Свойства:
Методы:
  void .ctor(IPAddress ipAddress, int port)
  void Dispose()
  void Enqueue(Connection connection, MemoryBuffer data)
  void Update()
  void Dispatch(Message message)
  void BroadcastTo(List`1<Connection> targets, AppBroadcast broadcast)
  MemoryBuffer GetBroadcastBuffer(AppBroadcast broadcast)
  bool CanSendPairingNotification(ulong playerId)
  void .cctor()
  bool <Dispatch>g__Handle|22_20(Func`2<AppRequest, TProto> protoSelector, IHandler& requestHandler, <>c__DisplayClass22_0& )
--------------------------------------------------
Класс: CompanionServer.NotificationChannel
Наследуется от: Enum
Поля:
  int value__
  NotificationChannel Pairing
  NotificationChannel PlayerLoggedIn
  NotificationChannel PlayerDied
  NotificationChannel SmartAlarm
  NotificationChannel ClanAnnouncement
Свойства:
Методы:
--------------------------------------------------
Класс: CompanionServer.NotificationSendResult
Наследуется от: Enum
Поля:
  int value__
  NotificationSendResult Failed
  NotificationSendResult Sent
  NotificationSendResult Empty
  NotificationSendResult Disabled
  NotificationSendResult RateLimited
  NotificationSendResult ServerError
  NotificationSendResult NoTargetsFound
  NotificationSendResult TooManySubscribers
Свойства:
Методы:
--------------------------------------------------
Класс: CompanionServer.NotificationList
Наследуется от: object
Поля:
  string ApiEndpoint
  HttpClient Http
  HashSet`1<ulong> _subscriptions
  double _lastSend
Свойства:
Методы:
  bool AddSubscription(ulong steamId)
  bool RemoveSubscription(ulong steamId)
  bool HasSubscription(ulong steamId)
  List`1<ulong> ToList()
  void LoadFrom(List`1<ulong> steamIds)
  void IntersectWith(List`1<PlayerNameID> players)
  Task`1<NotificationSendResult> SendNotification(NotificationChannel channel, string title, string body, string type)
  Task`1<NotificationSendResult> SendNotificationTo(ICollection`1<ulong> steamIds, NotificationChannel channel, string title, string body, Dictionary`2<string, string> data)
  Task`1<NotificationSendResult> SendNotificationTo(ulong steamId, NotificationChannel channel, string title, string body, Dictionary`2<string, string> data)
  Task`1<NotificationSendResult> SendNotificationImpl(ICollection`1<ulong> steamIds, NotificationChannel channel, string title, string body, Dictionary`2<string, string> data)
  Task`1<NotificationSendResult> SendNotificationBatchImpl(IEnumerable`1<ulong> steamIds, NotificationChannel channel, string title, string body, Dictionary`2<string, string> data)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: CompanionServer.PlayerTarget
Наследуется от: ValueType
Поля:
  ulong <SteamId>k__BackingField
Свойства:
  ulong SteamId
Методы:
  ulong get_SteamId()
  void .ctor(ulong steamId)
  bool Equals(PlayerTarget other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(PlayerTarget left, PlayerTarget right)
  bool op_Inequality(PlayerTarget left, PlayerTarget right)
--------------------------------------------------
Класс: CompanionServer.PushRequest
Наследуется от: object
Поля:
  string ServerToken
  List`1<ulong> SteamIds
  NotificationChannel Channel
  string Title
  string Body
  Dictionary`2<string, string> Data
Свойства:
Методы:
  void EnterPool()
  void LeavePool()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Server
Наследуется от: object
Поля:
  string ApiEndpoint
  HttpClient Http
  ChatLog TeamChat
  string Token
  Listener <Listener>k__BackingField
Свойства:
  Listener Listener
  bool IsEnabled
Методы:
  Listener get_Listener()
  void set_Listener(Listener value)
  bool get_IsEnabled()
  void Initialize()
  void Shutdown()
  void Update()
  void Broadcast(PlayerTarget target, AppBroadcast broadcast)
  void Broadcast(EntityTarget target, AppBroadcast broadcast)
  void Broadcast(ClanTarget target, AppBroadcast broadcast)
  void Broadcast(CameraTarget target, AppBroadcast broadcast)
  bool HasAnySubscribers(CameraTarget target)
  bool CanSendPairingNotification(ulong playerId)
  void PostInitializeServer()
  Task SetupServerRegistration()
  bool TryLoadServerRegistration(String& serverId, String& serverToken)
  void SetServerRegistration(string responseJson)
  Task CheckConnectivity()
  Task`1<HttpResponseMessage> AutoRetry(Func`1<Task`1<HttpResponseMessage>> action)
  void SetServerId(string serverId)
  string GetServerIdPath()
  void .cctor()
--------------------------------------------------
Класс: CompanionServer.IBroadcastSender`2
Поля:
Свойства:
Методы:
  void BroadcastTo(List`1<TTarget> targets, TMessage message)
--------------------------------------------------
Класс: CompanionServer.SubscriberList`3
Наследуется от: object
Поля:
  object _syncRoot
  Dictionary`2<TKey, Dictionary`2<TTarget, double>> _subscriptions
  IBroadcastSender`2<TTarget, TMessage> _sender
  Nullable`1<double> _timeoutSeconds
  Stopwatch _lastCleanup
Свойства:
Методы:
  void .ctor(IBroadcastSender`2<TTarget, TMessage> sender, Nullable`1<double> timeoutSeconds)
  void Add(TKey key, TTarget value)
  void Remove(TKey key, TTarget value)
  void Clear(TKey key)
  void Send(TKey key, TMessage message)
  bool HasAnySubscribers(TKey key)
  bool HasSubscriber(TKey key, TTarget target)
  void CleanupExpired()
--------------------------------------------------
Класс: CompanionServer.AppPlayerExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  AppTeamInfo GetAppTeamInfo(BasePlayer player, ulong steamId)
  AppTeamInfo GetAppTeamInfo(PlayerTeam team, ulong requesterSteamId)
  List`1<Note> GetMapNotes(ulong playerId, bool personalNotes)
  void AddMapNote(List`1<Note> result, MapNote note, MapNoteType type)
--------------------------------------------------
Класс: CompanionServer.TokenBucket
Наследуется от: object
Поля:
  double _lastUpdate
  double _tokens
  ITokenBucketSettings Settings
Свойства:
  bool IsFull
  bool IsNaughty
Методы:
  bool get_IsFull()
  bool get_IsNaughty()
  void Reset()
  bool TryTake(double requestedTokens)
  void Update()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.ITokenBucketSettings
Поля:
Свойства:
  double MaxTokens
  double TokensPerSec
Методы:
  double get_MaxTokens()
  double get_TokensPerSec()
--------------------------------------------------
Класс: CompanionServer.TokenBucketList`1
Наследуется от: object
Поля:
  Dictionary`2<TKey, TokenBucket> _buckets
  double <MaxTokens>k__BackingField
  double <TokensPerSec>k__BackingField
Свойства:
  double MaxTokens
  double TokensPerSec
Методы:
  double get_MaxTokens()
  double get_TokensPerSec()
  void .ctor(double maxTokens, double tokensPerSec)
  TokenBucket Get(TKey key)
  void Cleanup()
--------------------------------------------------
Класс: CompanionServer.Util
Наследуется от: object
Поля:
  int OceanMargin
  Phrase NotificationEmpty
  Phrase NotificationDisabled
  Phrase NotificationRateLimit
  Phrase NotificationServerError
  Phrase NotificationNoTargets
  Phrase NotificationTooManySubscribers
  Phrase NotificationUnknown
Свойства:
Методы:
  Vector2 WorldToMap(Vector3 worldPos)
  void SendSignedInNotification(BasePlayer player)
  void SendDeathNotification(BasePlayer player, BaseEntity killer)
  Task`1<NotificationSendResult> SendPairNotification(string type, BasePlayer player, string title, string message, Dictionary`2<string, string> data)
  Dictionary`2<string, string> GetServerPairingData()
  Dictionary`2<string, string> GetPlayerPairingData(BasePlayer player)
  void BroadcastAppTeamRemoval(BasePlayer player)
  void BroadcastAppTeamUpdate(PlayerTeam team)
  void BroadcastTeamChat(PlayerTeam team, ulong steamId, string name, string message, string color)
  void SendNotification(PlayerTeam team, NotificationChannel channel, string title, string body, Dictionary`2<string, string> data, ulong ignorePlayer)
  string ToErrorCode(ValidationResult result)
  string ToErrorMessage(NotificationSendResult result)
  void .cctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.BaseClanHandler`1
Наследуется от: BasePlayerHandler`1<T>
Поля:
  IClanBackend <ClanBackend>k__BackingField
Свойства:
  IClanBackend ClanBackend
Методы:
  IClanBackend get_ClanBackend()
  void set_ClanBackend(IClanBackend value)
  ValueTask`1<IClan> GetClan()
  void EnterPool()
  ValidationResult Validate()
  void SendError(ClanResult result)
  string GetErrorString(ClanResult result)
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.BaseEntityHandler`1
Наследуется от: BasePlayerHandler`1<T>
Поля:
  AppIOEntity <Entity>k__BackingField
Свойства:
  AppIOEntity Entity
Методы:
  AppIOEntity get_Entity()
  void set_Entity(AppIOEntity value)
  void EnterPool()
  ValidationResult Validate()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.BaseHandler`1
Наследуется от: object
Поля:
  TokenBucketList`1<ulong> <PlayerBuckets>k__BackingField
  IConnection <Client>k__BackingField
  AppRequest <Request>k__BackingField
  T <Proto>k__BackingField
Свойства:
  TokenBucketList`1<ulong> PlayerBuckets
  double TokenCost
  IConnection Client
  AppRequest Request
  T Proto
Методы:
  TokenBucketList`1<ulong> get_PlayerBuckets()
  void set_PlayerBuckets(TokenBucketList`1<ulong> value)
  double get_TokenCost()
  IConnection get_Client()
  void set_Client(IConnection value)
  AppRequest get_Request()
  void set_Request(AppRequest value)
  T get_Proto()
  void set_Proto(T value)
  void Initialize(TokenBucketList`1<ulong> playerBuckets, IConnection client, AppRequest request, T proto)
  void EnterPool()
  void LeavePool()
  ValidationResult Validate()
  void Execute()
  void SendSuccess()
  void SendError(string code)
  void SendFlag(bool value)
  void Send(AppResponse response)
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.BasePlayerHandler`1
Наследуется от: BaseHandler`1<T>
Поля:
  ulong <UserId>k__BackingField
  BasePlayer <Player>k__BackingField
Свойства:
  ulong UserId
  BasePlayer Player
Методы:
  ulong get_UserId()
  void set_UserId(ulong value)
  BasePlayer get_Player()
  void set_Player(BasePlayer value)
  void EnterPool()
  ValidationResult Validate()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.CameraInput
Наследуется от: BaseHandler`1<AppCameraInput>
Поля:
Свойства:
  double TokenCost
Методы:
  double get_TokenCost()
  void Execute()
  Vector3 Sanitize(Vector3 value)
  float Sanitize(float value)
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.CameraSubscribe
Наследуется от: BasePlayerHandler`1<AppCameraSubscribe>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.CameraUnsubscribe
Наследуется от: BaseHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.CheckSubscription
Наследуется от: BaseEntityHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.ClanChat
Наследуется от: BaseClanHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.ClanInfo
Наследуется от: BaseClanHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.EntityInfo
Наследуется от: BaseEntityHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.ValidationResult
Наследуется от: Enum
Поля:
  int value__
  ValidationResult Success
  ValidationResult NotFound
  ValidationResult RateLimit
  ValidationResult Banned
  ValidationResult Rejected
Свойства:
Методы:
--------------------------------------------------
Класс: CompanionServer.Handlers.IHandler
Поля:
Свойства:
  AppRequest Request
Методы:
  AppRequest get_Request()
  ValidationResult Validate()
  void Execute()
  void SendError(string code)
--------------------------------------------------
Класс: CompanionServer.Handlers.Info
Наследуется от: BasePlayerHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.Map
Наследуется от: BasePlayerHandler`1<AppEmpty>
Поля:
  int _width
  int _height
  Byte[] _imageData
  string _background
Свойства:
  double TokenCost
Методы:
  double get_TokenCost()
  void Execute()
  void PopulateCache()
  void RenderToCache()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.MapMarkers
Наследуется от: BasePlayerHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  AppMarker GetPlayerMarker(BasePlayer player)
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.NexusAuth
Наследуется от: BaseHandler`1<AppGetNexusAuth>
Поля:
Свойства:
Методы:
  ValidationResult Validate()
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.PromoteToLeader
Наследуется от: BasePlayerHandler`1<AppPromoteToLeader>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.SendClanChat
Наследуется от: BaseClanHandler`1<AppSendMessage>
Поля:
Свойства:
  double TokenCost
Методы:
  double get_TokenCost()
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.SendTeamChat
Наследуется от: BasePlayerHandler`1<AppSendMessage>
Поля:
Свойства:
  double TokenCost
Методы:
  double get_TokenCost()
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.SetClanMotd
Наследуется от: BaseClanHandler`1<AppSendMessage>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.SetEntityValue
Наследуется от: BaseEntityHandler`1<AppSetEntityValue>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.SetSubscription
Наследуется от: BaseEntityHandler`1<AppFlag>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.TeamChat
Наследуется от: BasePlayerHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.TeamInfo
Наследуется от: BasePlayerHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Handlers.Time
Наследуется от: BasePlayerHandler`1<AppEmpty>
Поля:
Свойства:
Методы:
  void Execute()
  void .ctor()
--------------------------------------------------
Класс: CompanionServer.Cameras.CameraRendererState
Наследуется от: Enum
Поля:
  int value__
  CameraRendererState Invalid
  CameraRendererState WaitingToRender
  CameraRendererState Rendering
Свойства:
Методы:
--------------------------------------------------
Класс: CompanionServer.Cameras.CameraRenderer
Наследуется от: object
Поля:
  bool enabled
  float completionFrameBudgetMs
  int maxRendersPerFrame
  int maxRaysPerFrame
  int width
  int height
  float verticalFov
  float nearPlane
  float farPlane
  int layerMask
  float renderInterval
  int samplesPerRender
  int entityMaxAge
  int entityMaxDistance
  int playerMaxDistance
  int playerNameMaxDistance
  Dictionary`2<NetworkableId, NetworkableId> _entityIdMap
  Dictionary`2<int, ValueTuple`2<byte, int>> _knownColliders
  Dictionary`2<int, BaseEntity> _colliderToEntity
  double _lastRenderTimestamp
  float _fieldOfView
  int _sampleOffset
  int _nextSampleOffset
  int _sampleCount
  CameraRenderTask _task
  Nullable`1<ulong> _cachedViewerSteamId
  BasePlayer _cachedViewer
  CameraRendererState state
  IRemoteControllable rc
  BaseEntity entity
Свойства:
Методы:
  void .ctor()
  void EnterPool()
  void LeavePool()
  void Reset()
  void Init(IRemoteControllable remoteControllable)
  bool CanRender()
  void Render(int maxSampleCount)
  void CompleteRender()
  void UpdateCollidersMap(List`1<int> foundColliderIds)
  NetworkableId RandomizeEntityId(NetworkableId realId)
  byte GetMaterialIndex(PhysicMaterial material, BaseEntity entity)
  void .cctor()
--------------------------------------------------
Класс: CompanionServer.Cameras.RaycastSamplePositionsJob
Наследуется от: ValueType
Поля:
  int2 res
  Random random
  NativeArray`1<int2> positions
Свойства:
Методы:
  void Execute()
--------------------------------------------------
Класс: CompanionServer.Cameras.RaycastBufferSetupJob
Наследуется от: ValueType
Поля:
  NativeArray`1<int> colliderIds
  NativeArray`1<byte> colliderMaterials
  NativeArray`1<int> colliderHits
Свойства:
Методы:
  void Execute()
  void SortByAscending(NativeArray`1& colliderIds, NativeArray`1& colliderMaterials, int leftIndex, int rightIndex)
--------------------------------------------------
Класс: CompanionServer.Cameras.RaycastRaySetupJob
Наследуется от: ValueType
Поля:
  float2 res
  float2 halfRes
  float aspectRatio
  float worldHeight
  float3 cameraPos
  quaternion cameraRot
  float nearPlane
  float farPlane
  int layerMask
  int sampleOffset
  NativeArray`1<int2> samplePositions
  NativeArray`1<RaycastCommand> raycastCommands
Свойства:
Методы:
  void Execute(int index)
--------------------------------------------------
Класс: CompanionServer.Cameras.RaycastRayProcessingJob
Наследуется от: ValueType
Поля:
  float3 cameraForward
  float farPlane
  NativeArray`1<RaycastHit> raycastHits
  NativeArray`1<int> colliderIds
  NativeArray`1<byte> colliderMaterials
  NativeArray`1<int> colliderHits
  NativeArray`1<int> outputs
  NativeArray`1<int> foundCollidersIndex
  NativeArray`1<int> foundColliders
Свойства:
Методы:
  void Execute(int index)
  int BinarySearch(NativeArray`1<int> haystack, int needle)
  int Compare(int x, int y)
--------------------------------------------------
Класс: CompanionServer.Cameras.RaycastOutputCompressJob
Наследуется от: ValueType
Поля:
  NativeArray`1<int> rayOutputs
  NativeArray`1<int> dataLength
  NativeArray`1<byte> data
Свойства:
Методы:
  void Execute()
  ushort RayDistance(int ray)
  byte RayAlignment(int ray)
  byte RayMaterial(int ray)
--------------------------------------------------
Класс: CompanionServer.Cameras.RaycastColliderProcessingJob
Наследуется от: ValueType
Поля:
  NativeArray`1<int> foundCollidersLength
  NativeArray`1<int> foundColliders
Свойства:
Методы:
  void Execute()
  void SortByDescending(NativeArray`1& colliders, NativeArray`1& counts, int leftIndex, int rightIndex)
  void SortAscending(NativeArray`1& array, int leftIndex, int rightIndex)
--------------------------------------------------
Класс: CompanionServer.Cameras.BurstUtil
Наследуется от: object
Поля:
Свойства:
Методы:
  T& modreq(System.Runtime.InteropServices.InAttribute) GetReadonly(NativeArray`1& array, int index)
  T& Get(NativeArray`1& array, int index)
  int GetColliderId(RaycastHit hit)
  Collider GetCollider(int colliderInstanceId)
--------------------------------------------------
Класс: CompanionServer.Cameras.CameraRenderTask
Наследуется от: CustomYieldInstruction
Поля:
  int MaxSamplesPerRender
  int MaxColliders
  Dictionary`2<ValueTuple`2<int, int>, NativeArray`1<int2>> _samplePositions
  NativeArray`1<RaycastCommand> _raycastCommands
  NativeArray`1<RaycastHit> _raycastHits
  NativeArray`1<int> _colliderIds
  NativeArray`1<byte> _colliderMaterials
  NativeArray`1<int> _colliderHits
  NativeArray`1<int> _raycastOutput
  NativeArray`1<int> _foundCollidersLength
  NativeArray`1<int> _foundColliders
  NativeArray`1<int> _outputDataLength
  NativeArray`1<byte> _outputData
  Nullable`1<JobHandle> _pendingJob
  int _sampleCount
  int _colliderLength
Свойства:
  bool keepWaiting
Методы:
  void .ctor()
  void Finalize()
  void Dispose()
  void Reset()
  bool get_keepWaiting()
  int Start(int width, int height, float verticalFov, float nearPlane, float farPlane, int layerMask, Transform cameraTransform, int sampleCount, int sampleOffset, Dictionary`2<int, ValueTuple`2<byte, int>> knownColliders)
  int ExtractRayData(Byte[] buffer, List`1<int> hitColliderIds, List`1<int> foundColliderIds)
  NativeArray`1<int2> GetSamplePositions(int width, int height)
  void FreeCachedSamplePositions()
  void .cctor()
--------------------------------------------------
Класс: Unity.Collections.NativeArrayEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void Add(NativeArray`1& array, T item, Int32& size)
  void RemoveUnordered(NativeArray`1& array, int index, Int32& count)
  void Expand(NativeArray`1& array, int newCapacity)
  void SafeDispose(NativeArray`1& array)
--------------------------------------------------
Класс: Instancing.BuildingBlockConfig
Наследуется от: object
Поля:
  UInt32 PrefabId
  List`1<BuildingBlockSkin> Skins
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.BuildingBlockSkin
Наследуется от: object
Поля:
  UInt32 SkinPrefabId
  int Grade
  ulong Skin
  Matrix4x4 LocalToWorld
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.BuildingSkinConfig
Наследуется от: object
Поля:
  UInt32 PrefabId
  List`1<ConditionalModelConfig> Conditionals
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.ConditionalModelConfig
Наследуется от: object
Поля:
  int ModelStateMask
  UInt32 TargetPrefabId
  Matrix4x4 LocalToWorld
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.InstancedEntityConfig
Наследуется от: object
Поля:
  UInt32 PrefabId
  bool HideInsideNetworkRange
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.InstancedLODState
Наследуется от: object
Поля:
  Mesh Mesh
  Material[] Materials
  Matrix4x4 LocalToWorld
  ShadowCastingMode CastShadows
  bool RecieveShadows
  LightProbeUsage LightProbes
  int LodLevel
  int TotalLodLevels
  InstancedMeshCategory MeshCategory
  float MinimumDistance
  float MaximumDistance
Свойства:
Методы:
  void .ctor(Matrix4x4 localToWorld, MeshRenderer renderer, float minDistance, float maxDistance, int lodLevel, int lodLevels, InstancedMeshCategory category)
--------------------------------------------------
Класс: Instancing.InstancedMeshCategory
Наследуется от: Enum
Поля:
  int value__
  InstancedMeshCategory BuildingBlock
  InstancedMeshCategory Cliff
  InstancedMeshCategory Other
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.InstancedPrefabConfig
Наследуется от: object
Поля:
  UInt32 PrefabId
  List`1<InstancedMeshConfig> Meshes
Свойства:
Методы:
  void .ctor(UInt32 prefabId)
--------------------------------------------------
Класс: Instancing.InstancedMeshConfig
Наследуется от: object
Поля:
  List`1<InstancedLODState> states
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.MeshRenderKey
Наследуется от: ValueType
Поля:
  Mesh Mesh
  Material[] Materials
  ShadowCastingMode CastShadows
  bool RecieveShadows
  LightProbeUsage LightProbeUsages
Свойства:
Методы:
  void .ctor(Mesh mesh, Material[] materials, ShadowCastingMode castShadows, bool recieveShadows, LightProbeUsage lightProbes)
  bool Equals(MeshRenderKey other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: Instancing.PrefabRenderKey
Наследуется от: ValueType
Поля:
  UInt32 PrefabId
  int Grade
  ulong Skin
Свойства:
Методы:
  void .ctor(UInt32 prefabId, int grade, ulong skin)
  bool Equals(PrefabRenderKey other)
  bool Equals(object obj)
  int GetHashCode()
--------------------------------------------------
Класс: Instancing.GridAllocation
Наследуется от: ValueType
Поля:
  int StartIndex
  int Capacity
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.GridJobData
Наследуется от: ValueType
Поля:
  int GridId
  int StartIndex
  int Count
  int Capacity
  float3 MinBounds
  float3 MaxBounds
  bool CanBeFrustumCulled
  bool CanBeDistanceCulled
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.InstancedCullData
Наследуется от: ValueType
Поля:
  float3 CullPosition
  float3 BoundsMin
  float3 BoundsMax
  float MinDistance
  float MaxDistance
  int RendererId
  int SliceIndex
  BitFlags Flags
  long VirtualMeshId
Свойства:
  bool IsVisible
  bool HasShadow
  bool HasMesh
  bool LastLOD
Методы:
  bool get_IsVisible()
  void set_IsVisible(bool value)
  bool get_HasShadow()
  void set_HasShadow(bool value)
  bool get_HasMesh()
  void set_HasMesh(bool value)
  bool get_LastLOD()
  void set_LastLOD(bool value)
--------------------------------------------------
Класс: Instancing.InstancedRendererJobData
Наследуется от: ValueType
Поля:
  int Id
  int DrawCallCount
  float MinDistance
  float MaxDistance
  ShadowCastingMode ShadowMode
Свойства:
  bool HasMesh
  bool HasShadow
Методы:
  bool get_HasMesh()
  bool get_HasShadow()
--------------------------------------------------
Класс: Instancing.MeshOverrideData
Наследуется от: ValueType
Поля:
  float4 Color
Свойства:
Методы:
  bool Equals(MeshOverrideData other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(MeshOverrideData left, MeshOverrideData right)
  bool op_Inequality(MeshOverrideData left, MeshOverrideData right)
--------------------------------------------------
Класс: Instancing.PreCullingJob
Наследуется от: ValueType
Поля:
  NativeArray`1<InstancedRendererJobData> Meshes
  int RendererCount
  NativeArray`1<UInt32> CountPerMesh
  NativeArray`1<DrawCallJobData> DrawCalls
  int DrawCallCount
  NativeArray`1<RenderSlice> RenderSlices
Свойства:
Методы:
  void Execute()
  void CalculateRenderSlices()
--------------------------------------------------
Класс: Instancing.ComputeBufferEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void SetBuffer(ComputeShader shader, int kernel, int name, GPUBuffer`1<T> buffer)
--------------------------------------------------
Класс: Instancing.GPUBuffer
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.GPUBuffer`1
Наследуется от: GPUBuffer
Поля:
  int <BufferVersion>k__BackingField
  GraphicsBuffer <Buffer>k__BackingField
  Target _type
  Target <Type>k__BackingField
  int <count>k__BackingField
  int <stride>k__BackingField
Свойства:
  int BufferVersion
  GraphicsBuffer Buffer
  Target Type
  int count
  int stride
  int ByteLength
Методы:
  int get_BufferVersion()
  void set_BufferVersion(int value)
  GraphicsBuffer get_Buffer()
  void set_Buffer(GraphicsBuffer value)
  Target get_Type()
  void set_Type(Target value)
  int get_count()
  void set_count(int value)
  int get_stride()
  void set_stride(int value)
  int get_ByteLength()
  void .ctor(int length, Target target)
  void SetData(List`1<T> data)
  void SetData(List`1<int> data, int nativeArrayIndex, int computeBufferIndex, int length)
  void SetData(T[] data)
  void SetData(T[] data, int nativeArrayIndex, int computeBufferIndex, int length)
  void SetData(NativeArray`1<T> data)
  void SetData(NativeArray`1<T> data, int nativeArrayIndex, int computeBufferIndex, int length)
  void ClearData()
  void Expand(int newCapacity, bool preserveData)
  void EnsureCapacity(int size, bool preserveData, float expandRatio)
  void Dispose()
--------------------------------------------------
Класс: Instancing.InstancedPrefabConverter
Наследуется от: object
Поля:
Свойства:
Методы:
  InstancedMeshCategory GetMeshCategory(string prefabPath)
  InstancedPrefabConfig ExtractInstancedRenderers(GameObject prefab, UInt32 prefabId, IEnumerable`1<InstancedMeshFilter> instancedFilters)
--------------------------------------------------
Класс: Instancing.InstancedPrefabPreProcess
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.InstancingUtil
Наследуется от: object
Поля:
  int PositionBufferProperty
  int RenderBufferProperty
  int IndirectExtraArgProperty
  int Param_MeshOverrideBuffer
  int Param_RenderSliceIndexes
  int DrawCallIndexProperty
  int Param_RendererIndex
  int Param_Verticies
  int Param_Triangles
  GlobalKeyword Keyword_Rust_Procedural_Rendering
  int CullingGPUThreads
Свойства:
Методы:
  float MB(int bytes)
  StringBuilder MemoryUsage(StringBuilder builder, string name, ComputeBuffer buffer)
  StringBuilder MemoryUsage(StringBuilder builder, string name, GraphicsBuffer buffer)
  StringBuilder MemoryUsage(StringBuilder builder, string name, NativeArray`1<T> array, int count)
  StringBuilder MemoryUsage(StringBuilder builder, string name, ICollection`1<T> array)
  int GetIterationCount(int count, int threads)
  void .cctor()
--------------------------------------------------
Класс: Instancing.JobInt
Наследуется от: ValueType
Поля:
  NativeArray`1<int> Array
Свойства:
  int Value
Методы:
  int get_Value()
  void set_Value(int value)
  JobInt Create()
  void Destroy(JobInt instance)
--------------------------------------------------
Класс: Instancing.GeometryBuffers
Наследуется от: object
Поля:
  int _meshCopyMode
  GPUBuffer`1<VertexData> VertexBuffer
  GPUBuffer`1<int> TriangleBuffer
  int VertexIndex
  int TriangleIndex
  bool <IsDirty>k__BackingField
  Dictionary`2<Mesh, MultidrawMeshInfo[]> _meshes
Свойства:
  bool IsDirty
Методы:
  bool get_IsDirty()
  void set_IsDirty(bool value)
  void .ctor()
  void Initialize(int meshCopyMode)
  void ResetStreamPosition()
  void Destroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  MultidrawMeshInfo[] CopyMesh(Mesh mesh)
  void CopyMeshViaShader(Mesh mesh)
  void Rebuild()
  MultidrawMeshInfo[] CalculateSubmeshInfo(Mesh mesh)
  void CopyMeshViaCPU(Mesh mesh)
  void PrintMemoryUsage(StringBuilder builder)
--------------------------------------------------
Класс: Instancing.MultidrawMeshInfo
Наследуется от: ValueType
Поля:
  int VertexStart
  int VertexCount
  int IndexStart
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.InstancedMeshRenderer
Наследуется от: object
Поля:
  int <RendererId>k__BackingField
  int <DrawCallIndex>k__BackingField
  int <DrawCallCount>k__BackingField
  Mesh <Mesh>k__BackingField
  Material[] <Materials>k__BackingField
  Material[] <MultidrawMaterials>k__BackingField
  ShadowCastingMode <CastShadows>k__BackingField
  bool <RecieveShadows>k__BackingField
  LightProbeUsage <LightProbes>k__BackingField
  int <Verticies>k__BackingField
  int <Triangles>k__BackingField
  int <VertexStart>k__BackingField
  int <IndexStart>k__BackingField
  int <LodLevel>k__BackingField
  int <TotalLodLevels>k__BackingField
  bool <IsLastLod>k__BackingField
  InstancedMeshCategory <MeshCategory>k__BackingField
  MultidrawMeshInfo[] <MultidrawSubmeshes>k__BackingField
  Vector3[] <BoundsPoints>k__BackingField
Свойства:
  int RendererId
  int DrawCallIndex
  int DrawCallCount
  string MeshName
  Mesh Mesh
  Material[] Materials
  Material[] MultidrawMaterials
  ShadowCastingMode CastShadows
  bool RecieveShadows
  LightProbeUsage LightProbes
  int Verticies
  int Triangles
  int VertexStart
  int IndexStart
  int LodLevel
  int TotalLodLevels
  bool IsLastLod
  InstancedMeshCategory MeshCategory
  MultidrawMeshInfo[] MultidrawSubmeshes
  bool HasShadow
  bool HasMesh
  Vector3[] BoundsPoints
Методы:
  int get_RendererId()
  int get_DrawCallIndex()
  int get_DrawCallCount()
  string get_MeshName()
  Mesh get_Mesh()
  Material[] get_Materials()
  void set_Materials(Material[] value)
  Material[] get_MultidrawMaterials()
  void set_MultidrawMaterials(Material[] value)
  ShadowCastingMode get_CastShadows()
  bool get_RecieveShadows()
  LightProbeUsage get_LightProbes()
  int get_Verticies()
  int get_Triangles()
  int get_VertexStart()
  void set_VertexStart(int value)
  int get_IndexStart()
  void set_IndexStart(int value)
  int get_LodLevel()
  int get_TotalLodLevels()
  bool get_IsLastLod()
  InstancedMeshCategory get_MeshCategory()
  MultidrawMeshInfo[] get_MultidrawSubmeshes()
  bool get_HasShadow()
  bool get_HasMesh()
  Vector3[] get_BoundsPoints()
  void .ctor(int rendererIndex, int drawCallIndex, MeshRenderKey key, Material[] multidrawMaterials, int lodLevel, int lodLevels, InstancedMeshCategory meshCategory, GeometryBuffers buffers)
  void SetMaterials(Material[] materials)
  void SetPlaceholderMaterials(Material[] materials)
  int GetDrawCallIndex(int submesh)
  int GetIndirectArgIndex(int submesh)
  int GetIndirectArgByteIndex(int submesh)
--------------------------------------------------
Класс: Instancing.RenderUpdate
Наследуется от: ValueType
Поля:
  UInt32 PrefabId
  NetworkableId NetworkId
  int Grade
  ulong Skin
  int ModelState
  Vector3 Position
  Quaternion Rotation
  Color CustomColor
  int CustomColorIndex
  bool IsGlobalUpdate
  bool InsideNetworkRange
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.CellId
Наследуется от: ValueType
Поля:
  int Index
Свойства:
Методы:
  void .ctor(int index)
  string ToString()
--------------------------------------------------
Класс: Instancing.CellHeader
Наследуется от: ValueType
Поля:
  int StartIndex
  int Count
  int PartitionKey
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.InstancedMeshData
Наследуется от: ValueType
Поля:
  InstancedCullData CullData
  float4x4 LocalToWorld
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.CellMeshAllocator
Наследуется от: object
Поля:
  int CellCapacity
  int initialCellCount
  int InitialCapacity
  Dictionary`2<int, CellPartition> partitions
  List`1<CellId> recycledCells
  int <CellCount>k__BackingField
  Dictionary`2<long, int> meshLookup
  Dictionary`2<long, int> sliceIndexLookup
  Dictionary`2<int, List`1<long>> sliceLists
  NativeArray`1<CellHeader> Cells
  NativeArray`1<InstancedCullData> CullData
  NativeArray`1<float4x4> PositionData
  NativeArray`1<MeshOverrideData> OverrideArray
  GPUBuffer`1<float4x4> PositionBuffer
  GPUBuffer`1<InstancedCullData> CullingDataBuffer
  GPUBuffer`1<MeshOverrideData> OverrideBuffer
  bool dirty
Свойства:
  int CellCount
Методы:
  int get_CellCount()
  void set_CellCount(int value)
  void Initialize()
  void OnDestroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  CellId AddMesh(InstancedCullData data, int partitionKey, float4x4 localToWorld)
  bool TryRemoveMesh(long virtualMeshId, InstancedCullData& removedData)
  Nullable`1<InstancedMeshData> TryGetMeshData(long virtualMeshId)
  void SetMeshVisible(long virtualMeshId, bool visible)
  void SetOverride(long virtualMeshId, MeshOverrideData newData)
  CellId CreateCell(int sortingKey)
  void ExpandData()
  void RecycleCell(CellId cellId)
  CellId GetCellId(int index)
  void PrintMemoryUsage(StringBuilder builder)
  void FlushComputeBuffers()
  void .ctor()
--------------------------------------------------
Класс: Instancing.RenderSlice
Наследуется от: ValueType
Поля:
  UInt32 StartIndex
  UInt32 Length
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.CullingManager
Наследуется от: object
Поля:
  NativeArray`1<RenderSlice> RenderSlicesArray
  GPUBuffer`1<RenderSlice> RenderSlicesBuffer
Свойства:
Методы:
  void Initialize()
  void OnDestroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  void EnsureCapacity(int rendererCount)
  void PrintMemoryUsage(StringBuilder builder)
  void UpdateComputeBuffers()
  void .ctor()
--------------------------------------------------
Класс: Instancing.DrawCallJobData
Наследуется от: ValueType
Поля:
  int DrawCallIndex
  int RendererIndex
  UInt32 IndexCount
  UInt32 IndexStart
  UInt32 VertexStart
  UInt32 MultidrawIndexStart
  UInt32 MultidrawVertexStart
  int Padding1
Свойства:
Методы:
--------------------------------------------------
Класс: Instancing.DrawCallKey
Наследуется от: ValueType
Поля:
  Material Material
  ShadowCastingMode ShadowMode
  bool ReceiveShadows
  LightProbeUsage LightProbes
Свойства:
Методы:
  void .ctor(Material material, ShadowCastingMode shadowMode, bool receiveShadows, LightProbeUsage lightProbes)
  int CompareTo(DrawCallKey other)
  int CompareTo(object obj)
  bool Equals(DrawCallKey other)
  bool Equals(object obj)
  int GetHashCode()
  bool op_Equality(DrawCallKey a, DrawCallKey b)
  bool op_Inequality(DrawCallKey a, DrawCallKey b)
--------------------------------------------------
Класс: Instancing.DrawCallManager
Наследуется от: object
Поля:
  CellMeshAllocator cellAllocator
  GeometryBuffers GeometryBuffers
  NativeArray`1<DrawCallJobData> DrawCallArray
  GPUBuffer`1<DrawCallJobData> DrawCallBuffer
  GPUBuffer`1<UInt32> IndirectArgsBuffer
  GPUBuffer`1<UInt32> IndirectExtraArgBuffer
  GPUBuffer`1<UInt32> RenderBuffer
  int _overrideBufferVersion
  int _positionBufferVersion
  List`1<DrawCall> DrawCalls
  bool _needsDrawCallRebuild
  int IndirectArgCapacity
  int <DrawCallsLastFrame>k__BackingField
  int renderLayer
  int initialCapacity
  Bounds cullingBounds
Свойства:
  int DrawCallsLastFrame
  int DrawCallCount
Методы:
  int get_DrawCallsLastFrame()
  void set_DrawCallsLastFrame(int value)
  int get_DrawCallCount()
  void .ctor(CellMeshAllocator cellAllocator, GeometryBuffers geometryBuffers)
  void Initialize()
  void OnDestroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  void AddDrawCall(InstancedMeshRenderer renderer, int submeshIndex, UInt32 indicies, UInt32 indiciesIndex, UInt32 vertexIndex, MultidrawMeshInfo multidraw)
  bool NeedsToRebuildMaterialBlocks()
  void RebuildAllMaterialBlocks()
  void UpdateMaterialBlock(DrawCall drawCall)
  void EnsureCapacity(int totalMeshCount)
  void EnsureDrawCallCapcity()
  void UpdateComputeBuffers()
  void SortAndBatchDrawCalls()
  void SubmitDrawCalls()
  void SubmitDrawCallsInternal(Camera camera)
  void PrintMemoryUsage(StringBuilder builder)
  void .cctor()
--------------------------------------------------
Класс: Instancing.InstancedCommandBufferManager
Наследуется от: object
Поля:
  CommandBuffer normalCommandBuffer
  CommandBuffer shadowCommandBuffer
Свойства:
Методы:
  void OnCameraEnabled(Camera camera)
  void OnCameraDisabled(Camera camera)
  void UpdateCameraHook()
  void .ctor()
--------------------------------------------------
Класс: Instancing.InstancedCullingManager
Наследуется от: object
Поля:
  NativeArray`1<int> RenderSliceIndexes
  NativeArray`1<int> PostCullingMeshCounts
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.MaterialCache
Наследуется от: object
Поля:
  Dictionary`2<Material, Material> modifiedMaterials
Свойства:
Методы:
  Material EnableProceduralInstancing(Material material)
  void RequestTextureStreaming(Material material)
  void RequestMipmap(Material material, string textureName)
  void FreeMemory()
  void .ctor()
--------------------------------------------------
Класс: Instancing.MeshGridManager
Наследуется от: object
Поля:
  NativeArray`1<GridJobData> Grids
  float HalfWorldSize
  float GridSize
  int GridCount
  int normalGridCount
  int shadowGridCount
  int outOfBoundsGrid
  int lastGridId
Свойства:
Методы:
  void Initialize()
  void OnDestroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  int GetPartitionKey(float3 position, bool hasShadow)
  void SetWorldSize(float worldSize)
  void UpdateGridBounds()
  int GetGridId(float3 point)
  float3 GetGridCenter(int gridId)
  Bounds GetGridBounds(int gridId)
  void PrintMemoryUsage(StringBuilder builder)
  void .ctor()
--------------------------------------------------
Класс: Instancing.RenderManager
Наследуется от: object
Поля:
  NativeArray`1<InstancedRendererJobData> RendererArray
  NativeArray`1<UInt32> MeshCountArray
  Dictionary`2<MeshRenderKey, InstancedMeshRenderer> rendererLookup
  List`1<InstancedMeshRenderer> Renderers
  GeometryBuffers GeometryBuffers
  int <TotalMeshCount>k__BackingField
  int <TotalDrawCallCount>k__BackingField
  int initialRendererCapacity
  DrawCallManager drawCallManager
  MaterialCache _materialCache
Свойства:
  int TotalMeshCount
  int TotalDrawCallCount
  int RendererCount
Методы:
  int get_TotalMeshCount()
  void set_TotalMeshCount(int value)
  int get_TotalDrawCallCount()
  void set_TotalDrawCallCount(int value)
  int get_RendererCount()
  void .ctor(DrawCallManager drawCalls, GeometryBuffers geometryBuffers, MaterialCache materialCache)
  void Initialize()
  void OnDestroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  void OnMeshAdded(int rendererId)
  void OnMeshRemoved(int rendererId)
  Bounds CalculateMeshBounds(int meshId, Matrix4x4 localToWorld)
  bool DoesRendererHaveShadow(int meshId)
  bool DoesRendererHaveMesh(int rendererId)
  bool IsLastLOD(int rendererId)
  int GetRendererId(InstancedLODState lod)
  float GetMinDistance(int rendererId)
  float GetMaxDistance(int rendererId)
  Mesh GetMeshForRenderer(int rendererId)
  InstancedMeshRenderer GetRenderer(InstancedLODState lod)
  InstancedMeshRenderer RegisterRenderer(InstancedLODState lod)
  void EnsureJobDataCapacity()
  void PrintMemoryUsage(StringBuilder builder)
  Material <RegisterRenderer>b__34_0(Material x)
--------------------------------------------------
Класс: Instancing.TextureAtlasScheduler
Наследуется от: object
Поля:
  TextureAtlasScheduler Instanced
  Dictionary`2<int, TextureAtlas> textureAtlases
Свойства:
Методы:
  int AddTexture(TextureAtlas atlas, Texture texture)
  void UpdateTexture(TextureAtlas atlas, Texture texture, int index)
  int AddTextureToAtlas(Texture texture)
  void ReplaceTextureInAtlas(Texture texture, int index)
  TextureAtlas GetOrCreateAtlas(int width, int height)
  int GetResolutionKey(int xSize, int ySize)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Instancing.VirtualMeshScheduler
Наследуется от: object
Поля:
  VirtualMeshScheduler Instance
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Instancing.VirtualPrefabScheduler
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Instancing.WorkshopSkinScheduler
Наследуется от: object
Поля:
  Dictionary`2<ulong, SkinData> skinLookup
  Dictionary`2<ulong, Skinnable> skinnableLookup
Свойства:
Методы:
  SkinTexture[] GetTextures(Skin skinDef, ulong skinId)
  SkinnableData GetOrCreateSkinnable(Skin skinDef)
  SkinData InitializeSkin(Skin skinDef, ulong skinId)
  string FindSkinTexturePath(ulong workshopSkin)
  void LoadTextureAsync(string path, int resolution, int textureIndex)
  void .ctor()
--------------------------------------------------
Класс: Instancing.GPUInstancedCulling
Наследуется от: object
Поля:
  int Param_InputBuffer
  int Param_OutputBuffer
  int Param_ComputeBuffer
  int Param_IndirectArgs
  int Param_IndirectExtraArgs
  int Param_RenderSlices
  int Param_SliceCounts
  int Param_FrustumPlanes
  int Param_ShadowFrustumCount
  int Param_CameraPosition
  int Param_MaxDistance
  int Param_DistanceScale
  int Param_SliceCount
  int Param_Length
  int Param_DrawCalls
  int Param_DrawCallCount
  int Param_Multidraw_Enabled
  int Param_FrustumCullingEnabled
  GPUBuffer`1<UInt32> tempBuffer
  GPUBuffer`1<UInt32> postCullMeshCounts
Свойства:
Методы:
  void Initialize()
  void OnDestroy()
  void AllocateNativeMemory()
  void FreeNativeMemory()
  void SimpleCulling(CullingParameters options)
  void CullingShader(ComputeShader shader, GPUBuffer`1<InstancedCullData> inputBuffer, int inputLength, GPUBuffer`1<UInt32> outputBuffer, GPUBuffer`1<RenderSlice> renderSlices, GPUBuffer`1<float4> frustumPlanes, int shadowCameras, Vector3 cameraPosition, float maxDistance, float distanceScale, bool frustumCulling)
  void SimplePostCull(ComputeShader shader, GPUBuffer`1<UInt32> inputBuffer, GPUBuffer`1<UInt32> outputBuffer, GPUBuffer`1<RenderSlice> renderSlices, int sliceCount, GPUBuffer`1<UInt32> sliceCounts)
  void WriteIndirectArgs(ComputeShader shader, GPUBuffer`1<UInt32> sliceCounts, GPUBuffer`1<RenderSlice> renderSlices, GPUBuffer`1<DrawCallJobData> drawCalls, int drawCallCount, GPUBuffer`1<UInt32> indirectArgs, GPUBuffer`1<UInt32> indirectExtraArgs)
  void ClearBuffer(ComputeShader shader, GPUBuffer`1<UInt32> buffer)
  int GetIterationCount(int count, int threads)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Network.Channel.Client
Наследуется от: object
Поля:
  byte Default
  byte Tick
Свойства:
Методы:
--------------------------------------------------
Класс: Network.Channel.Server
Наследуется от: object
Поля:
  byte Default
  byte Positions
Свойства:
Методы:
--------------------------------------------------
Класс: UnityStandardAssets.CinematicEffects.ImageEffectHelper
Наследуется от: object
Поля:
Свойства:
  bool supportsDX11
Методы:
  bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
  Material CheckShaderAndCreateMaterial(Shader s)
  bool get_supportsDX11()
--------------------------------------------------
Класс: UnityStandardAssets.CinematicEffects.MinAttribute
Наследуется от: PropertyAttribute
Поля:
  float min
Свойства:
Методы:
  void .ctor(float min)
--------------------------------------------------
Класс: UnityStandardAssets.CinematicEffects.RenderTextureUtility
Наследуется от: object
Поля:
  List`1<RenderTexture> m_TemporaryRTs
Свойства:
Методы:
  RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer, RenderTextureFormat format, FilterMode filterMode)
  void ReleaseTemporaryRenderTexture(RenderTexture rt)
  void ReleaseAllTemporaryRenderTextures()
  void .ctor()
--------------------------------------------------
Класс: UnityStandardAssets.CinematicEffects.TonemappingColorGrading
Наследуется от: MonoBehaviour
Поля:
  EyeAdaptationSettings m_EyeAdaptation
  TonemappingSettings m_Tonemapping
  ColorGradingSettings m_ColorGrading
  LUTSettings m_Lut
  Shader m_Shader
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityStandardAssets.ImageEffects.ScopeEffect
Наследуется от: PostEffectsBase
Поля:
  Material overlayMaterial
Свойства:
Методы:
  bool CheckResources()
  bool IsActive()
  void OnRenderImage(RenderTexture source, RenderTexture destination)
  void .ctor()
--------------------------------------------------
Класс: Sonar.SonarObject
Наследуется от: MonoBehaviour
Поля:
  SType sonarType
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Sonar.SonarSystem
Наследуется от: FacepunchBehaviour
Поля:
  float range
  float maxDepth
  ParticleSystem sonarPS
  ParticleSystem blipPS
  SonarObject us
  Color greenBlip
  Color redBlip
  Color whiteBlip
  SoundDefinition sonarBlipSound
  GameObject sonarSoundParent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Windows.ConsoleInput
Наследуется от: object
Поля:
  Action`1<string> OnInputText
  string inputString
  String[] statusText
  float nextUpdate
Свойства:
  bool valid
  int lineWidth
Методы:
  void add_OnInputText(Action`1<string> value)
  void remove_OnInputText(Action`1<string> value)
  bool get_valid()
  int get_lineWidth()
  void ClearLine(int numLines)
  void RedrawInputLine()
  void OnBackspace()
  void OnEscape()
  void OnEnter()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: Windows.ConsoleWindow
Наследуется от: object
Поля:
  TextWriter oldOutput
  int STD_INPUT_HANDLE
  int STD_OUTPUT_HANDLE
Свойства:
Методы:
  void Initialize()
  void Shutdown()
  void SetTitle(string strName)
  bool AttachConsole(UInt32 dwProcessId)
  bool AllocConsole()
  bool FreeConsole()
  IntPtr GetStdHandle(int nStdHandle)
  bool SetConsoleTitleA(string lpConsoleTitle)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.DDraw
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.AniamtorEx
Наследуется от: object
Поля:
Свойства:
Методы:
  void SetFloatFixed(Animator animator, int id, float value, float dampTime, float deltaTime)
  void SetBoolChecked(Animator animator, int id, bool value)
--------------------------------------------------
Класс: UnityEngine.ArgEx
Наследуется от: object
Поля:
Свойства:
Методы:
  BasePlayer Player(Arg arg)
  BasePlayer GetPlayer(Arg arg, int iArgNum)
  BasePlayer GetSleeper(Arg arg, int iArgNum)
  BasePlayer GetPlayerOrSleeper(Arg arg, int iArgNum)
  BasePlayer GetPlayerOrSleeperOrBot(Arg arg, int iArgNum)
  NetworkableId GetEntityID(Arg arg, int iArg, NetworkableId def)
  ItemId GetItemID(Arg arg, int iArg, ItemId def)
--------------------------------------------------
Класс: UnityEngine.ColliderEx
Наследуется от: object
Поля:
Свойства:
Методы:
  PhysicMaterial GetMaterialAt(Collider obj, Vector3 pos)
  bool IsOnLayer(Collider col, Layer rustLayer)
  bool IsOnLayer(Collider col, int layer)
  float GetRadius(Collider col, Vector3 transformScale)
--------------------------------------------------
Класс: UnityEngine.CollisionEx
Наследуется от: object
Поля:
Свойства:
Методы:
  BaseEntity GetEntity(Collision col)
--------------------------------------------------
Класс: UnityEngine.ComponentEx
Наследуется от: object
Поля:
Свойства:
Методы:
  T Instantiate(T component)
  bool HasComponent(Component component)
--------------------------------------------------
Класс: UnityEngine.CoroutineEx
Наследуется от: object
Поля:
  WaitForEndOfFrame waitForEndOfFrame
  WaitForFixedUpdate waitForFixedUpdate
  Dictionary`2<float, WaitForSeconds> waitForSecondsBuffer
Свойства:
Методы:
  WaitForSeconds waitForSeconds(float seconds)
  WaitForSecondsRealtimeEx waitForSecondsRealtime(float seconds)
  IEnumerator Combine(IEnumerator[] coroutines)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.GameObjectEx
Наследуется от: object
Поля:
Свойства:
Методы:
  BaseEntity ToBaseEntity(GameObject go)
  BaseEntity ToBaseEntity(Collider collider)
  BaseEntity ToBaseEntity(Transform transform)
  bool IsOnLayer(GameObject go, Layer rustLayer)
  bool IsOnLayer(GameObject go, int layer)
  IEntity GetEntityFromRegistry(Transform transform)
  IEntity GetEntityFromComponent(Transform transform)
  void SetHierarchyGroup(GameObject obj, string strRoot, bool groupActive, bool persistant)
  bool HasComponent(GameObject obj)
  void SetChildComponentsEnabled(GameObject gameObject, bool enabled)
--------------------------------------------------
Класс: UnityEngine.NetworkNetworkable
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.NetworkPacketEx
Наследуется от: object
Поля:
Свойства:
Методы:
  BasePlayer Player(Message v)
--------------------------------------------------
Класс: UnityEngine.ObjectEffectsEx
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.QuaternionEx
Наследуется от: object
Поля:
Свойства:
Методы:
  Quaternion AlignToNormal(Quaternion rot, Vector3 normal)
  Quaternion LookRotationWithOffset(Vector3 offset, Vector3 forward, Vector3 up)
  Quaternion LookRotationForcedUp(Vector3 forward, Vector3 up)
  Quaternion LookRotationGradient(Vector3 normal, Vector3 up)
  Quaternion LookRotationNormal(Vector3 normal, Vector3 up)
  Quaternion EnsureValid(Quaternion rot, float epsilon)
--------------------------------------------------
Класс: UnityEngine.RayEx
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector3 ClosestPoint(Ray ray, Vector3 pos)
  float Distance(Ray ray, Vector3 pos)
  float SqrDistance(Ray ray, Vector3 pos)
  bool IsNaNOrInfinity(Ray r)
--------------------------------------------------
Класс: UnityEngine.SkinnedMeshRendererEx
Наследуется от: object
Поля:
Свойства:
Методы:
  Transform FindRig(SkinnedMeshRenderer renderer)
--------------------------------------------------
Класс: UnityEngine.TransformEx
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetRecursiveName(Transform transform, string strEndName)
  void RemoveComponent(Transform transform)
  void RetireAllChildren(Transform transform, GameManager gameManager)
  List`1<Transform> GetChildren(Transform transform)
  void OrderChildren(Transform tx, Func`2<Transform, object> selector)
  List`1<Transform> GetAllChildren(Transform transform)
  void AddAllChildren(Transform transform, List`1<Transform> list)
  Transform[] GetChildrenWithTag(Transform transform, string strTag)
  Matrix4x4 LocalToPrefabRoot(Transform transform)
  void Identity(GameObject go)
  GameObject CreateChild(GameObject go)
  GameObject InstantiateChild(GameObject go, GameObject prefab)
  void SetLayerRecursive(GameObject go, int Layer)
  bool DropToGround(Transform transform, bool alignToNormal, float fRange)
  bool GetGroundInfo(Transform transform, Vector3& pos, Vector3& normal, float range)
  bool GetGroundInfoTerrainOnly(Transform transform, Vector3& pos, Vector3& normal, float range)
  Bounds WorkoutRenderBounds(Transform tx)
  List`1<T> GetSiblings(Transform transform, bool includeSelf)
  void DestroyChildren(Transform transform)
  void SetChildrenActive(Transform transform, bool b)
  Transform ActiveChild(Transform transform, string name, bool bDisableOthers)
  T GetComponentInChildrenIncludeDisabled(Transform transform)
  bool HasComponentInChildrenIncludeDisabled(Transform transform)
  void SetHierarchyGroup(Transform transform, string strRoot, bool groupActive, bool persistant)
  Bounds GetBounds(Transform transform, bool includeRenderers, bool includeColliders, bool includeInactive)
--------------------------------------------------
Класс: UnityEngine.UIEx
Наследуется от: object
Поля:
Свойства:
Методы:
  Vector2 Unpivot(RectTransform rect, Vector2 localPos)
  void CenterOnPosition(ScrollRect scrollrect, Vector2 pos)
  void RebuildHackUnity2019(Image image)
--------------------------------------------------
Класс: UnityEngine.UI.ScrollRectEx
Наследуется от: UIBehaviour
Поля:
  InputButton scrollButton
  InputButton altScrollButton
  RectTransform m_Content
  bool m_Horizontal
  bool m_Vertical
  MovementType m_MovementType
  float m_Elasticity
  bool m_Inertia
  float m_DecelerationRate
  float m_ScrollSensitivity
  RectTransform m_Viewport
  Scrollbar m_HorizontalScrollbar
  Scrollbar m_VerticalScrollbar
  ScrollbarVisibility m_HorizontalScrollbarVisibility
  ScrollbarVisibility m_VerticalScrollbarVisibility
  float m_HorizontalScrollbarSpacing
  float m_VerticalScrollbarSpacing
  ScrollRectEvent m_OnValueChanged
  Vector2 m_PointerStartLocalCursor
  Vector2 m_ContentStartPosition
  RectTransform m_ViewRect
  Bounds m_ContentBounds
  Bounds m_ViewBounds
  Vector2 m_Velocity
  bool m_Dragging
  Vector2 m_PrevPosition
  Bounds m_PrevContentBounds
  Bounds m_PrevViewBounds
  bool m_HasRebuiltLayout
  bool m_HSliderExpand
  bool m_VSliderExpand
  float m_HSliderHeight
  float m_VSliderWidth
  RectTransform m_Rect
  RectTransform m_HorizontalScrollbarRect
  RectTransform m_VerticalScrollbarRect
  DrivenRectTransformTracker m_Tracker
  Vector3[] m_Corners
Свойства:
  RectTransform content
  bool horizontal
  bool vertical
  MovementType movementType
  float elasticity
  bool inertia
  float decelerationRate
  float scrollSensitivity
  RectTransform viewport
  Scrollbar horizontalScrollbar
  Scrollbar verticalScrollbar
  ScrollbarVisibility horizontalScrollbarVisibility
  ScrollbarVisibility verticalScrollbarVisibility
  float horizontalScrollbarSpacing
  float verticalScrollbarSpacing
  ScrollRectEvent onValueChanged
  RectTransform viewRect
  Vector2 velocity
  RectTransform rectTransform
  Vector2 normalizedPosition
  float horizontalNormalizedPosition
  float verticalNormalizedPosition
  bool hScrollingNeeded
  bool vScrollingNeeded
  Rect normalizedViewRect
Методы:
  RectTransform get_content()
  void set_content(RectTransform value)
  bool get_horizontal()
  void set_horizontal(bool value)
  bool get_vertical()
  void set_vertical(bool value)
  MovementType get_movementType()
  void set_movementType(MovementType value)
  float get_elasticity()
  void set_elasticity(float value)
  bool get_inertia()
  void set_inertia(bool value)
  float get_decelerationRate()
  void set_decelerationRate(float value)
  float get_scrollSensitivity()
  void set_scrollSensitivity(float value)
  RectTransform get_viewport()
  void set_viewport(RectTransform value)
  Scrollbar get_horizontalScrollbar()
  void set_horizontalScrollbar(Scrollbar value)
  Scrollbar get_verticalScrollbar()
  void set_verticalScrollbar(Scrollbar value)
  ScrollbarVisibility get_horizontalScrollbarVisibility()
  void set_horizontalScrollbarVisibility(ScrollbarVisibility value)
  ScrollbarVisibility get_verticalScrollbarVisibility()
  void set_verticalScrollbarVisibility(ScrollbarVisibility value)
  float get_horizontalScrollbarSpacing()
  void set_horizontalScrollbarSpacing(float value)
  float get_verticalScrollbarSpacing()
  void set_verticalScrollbarSpacing(float value)
  ScrollRectEvent get_onValueChanged()
  void set_onValueChanged(ScrollRectEvent value)
  RectTransform get_viewRect()
  Vector2 get_velocity()
  void set_velocity(Vector2 value)
  RectTransform get_rectTransform()
  void .ctor()
  void Rebuild(CanvasUpdate executing)
  void UpdateCachedData()
  void OnEnable()
  void OnDisable()
  bool IsActive()
  void EnsureLayoutHasRebuilt()
  void StopMovement()
  void OnScroll(PointerEventData data)
  void OnInitializePotentialDrag(PointerEventData eventData)
  void OnBeginDrag(PointerEventData eventData)
  void OnEndDrag(PointerEventData eventData)
  void OnDrag(PointerEventData eventData)
  void SetContentAnchoredPosition(Vector2 position)
  void LateUpdate()
  void UpdatePrevData()
  void UpdateScrollbars(Vector2 offset)
  Vector2 get_normalizedPosition()
  void set_normalizedPosition(Vector2 value)
  float get_horizontalNormalizedPosition()
  void set_horizontalNormalizedPosition(float value)
  float get_verticalNormalizedPosition()
  void set_verticalNormalizedPosition(float value)
  void SetHorizontalNormalizedPosition(float value)
  void SetVerticalNormalizedPosition(float value)
  void SetNormalizedPosition(float value, int axis)
  float RubberDelta(float overStretching, float viewSize)
  void OnRectTransformDimensionsChange()
  bool get_hScrollingNeeded()
  bool get_vScrollingNeeded()
  void SetLayoutHorizontal()
  void SetLayoutVertical()
  void UpdateScrollbarVisibility()
  void UpdateScrollbarLayout()
  void UpdateBounds()
  Bounds GetBounds()
  Vector2 CalculateOffset(Vector2 delta)
  void SetDirty()
  void SetDirtyCaching()
  void CenterOnPosition(Vector2 pos)
  Rect get_normalizedViewRect()
  void LayoutComplete()
  void GraphicUpdateComplete()
  Transform UnityEngine.UI.ICanvasElement.get_transform()
--------------------------------------------------
Класс: UnityEngine.UI.ScrollRectSettable
Наследуется от: ScrollRect
Поля:
Свойства:
Методы:
  void SetHorizNormalizedPosition(float value)
  void SetVertNormalizedPosition(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.DiamondGraph
Наследуется от: UIPrimitiveBase
Поля:
  float m_a
  float m_b
  float m_c
  float m_d
Свойства:
  float A
  float B
  float C
  float D
Методы:
  float get_A()
  void set_A(float value)
  float get_B()
  void set_B(float value)
  float get_C()
  void set_C(float value)
  float get_D()
  void set_D(float value)
  void OnPopulateMesh(VertexHelper vh)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UICircle
Наследуется от: UIPrimitiveBase
Поля:
  bool ArcInvert
  float Arc
  int ArcSteps
  int ArcRotation
  float Progress
  float _progress
  Color ProgressColor
  bool Fill
  float Thickness
  int Padding
  List`1<int> indices
  List`1<UIVertex> vertices
  Vector2 uvCenter
Свойства:
Методы:
  void OnPopulateMesh(VertexHelper vh)
  void SetProgress(float progress)
  void SetArcSteps(int steps)
  void SetInvertArc(bool invert)
  void SetArcRotation(int rotation)
  void SetFill(bool fill)
  void SetBaseColor(Color color)
  void UpdateBaseAlpha(float value)
  void SetProgressColor(Color color)
  void UpdateProgressAlpha(float value)
  void SetPadding(int padding)
  void SetThickness(int thickness)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UICircleSimple
Наследуется от: UIPrimitiveBase
Поля:
  int ArcSteps
  bool Fill
  float Thickness
  bool ThicknessIsOutside
  List`1<int> indices
  List`1<UIVertex> vertices
  Vector2 uvCenter
Свойства:
Методы:
  void OnPopulateMesh(VertexHelper vh)
  void SetArcSteps(int steps)
  void SetFill(bool fill)
  void SetBaseColor(Color color)
  void UpdateBaseAlpha(float value)
  void SetThickness(int thickness)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UICornerCut
Наследуется от: UIPrimitiveBase
Поля:
  Vector2 cornerSize
  bool m_cutUL
  bool m_cutUR
  bool m_cutLL
  bool m_cutLR
  bool m_makeColumns
  bool m_useColorUp
  Color32 m_colorUp
  bool m_useColorDown
  Color32 m_colorDown
Свойства:
  bool CutUL
  bool CutUR
  bool CutLL
  bool CutLR
  bool MakeColumns
  bool UseColorUp
  Color32 ColorUp
  bool UseColorDown
  Color32 ColorDown
Методы:
  bool get_CutUL()
  void set_CutUL(bool value)
  bool get_CutUR()
  void set_CutUR(bool value)
  bool get_CutLL()
  void set_CutLL(bool value)
  bool get_CutLR()
  void set_CutLR(bool value)
  bool get_MakeColumns()
  void set_MakeColumns(bool value)
  bool get_UseColorUp()
  void set_UseColorUp(bool value)
  Color32 get_ColorUp()
  void set_ColorUp(Color32 value)
  bool get_UseColorDown()
  void set_UseColorDown(bool value)
  Color32 get_ColorDown()
  void set_ColorDown(Color32 value)
  void OnPopulateMesh(VertexHelper vh)
  void AddSquare(Rect rect, Rect rectUV, Color32 color32, VertexHelper vh)
  void AddSquare(Vector2 a, Vector2 b, Vector2 c, Vector2 d, Rect rectUV, Color32 color32, VertexHelper vh)
  int AddVert(float x, float y, Rect area, Color32 color32, VertexHelper vh)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UIGoldenRatioRenderer
Наследуется от: UILineRenderer
Поля:
  List`1<Vector2> _points
  List`1<Rect> _rects
  int canvasWidth
  int canvasHeight
  float lineThickness2
Свойства:
Методы:
  void DrawSpiral(VertexHelper vh)
  void DrawPhiRectangles(VertexHelper vh, List`1<Vector2> points, float x, float y, float width, float height, Orientations orientation)
  void OnPopulateMesh(VertexHelper vh)
  void DrawRect(VertexHelper vh, Rect rect)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UIGridRenderer
Наследуется от: UILineRenderer
Поля:
  int m_GridColumns
  int m_GridRows
Свойства:
  int GridColumns
  int GridRows
Методы:
  int get_GridColumns()
  void set_GridColumns(int value)
  int get_GridRows()
  void set_GridRows(int value)
  void OnPopulateMesh(VertexHelper vh)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UILineRenderer
Наследуется от: UIPrimitiveBase
Поля:
  float MIN_MITER_JOIN
  float MIN_BEVEL_NICE_JOIN
  Vector2 UV_TOP_LEFT
  Vector2 UV_BOTTOM_LEFT
  Vector2 UV_TOP_CENTER_LEFT
  Vector2 UV_TOP_CENTER_RIGHT
  Vector2 UV_BOTTOM_CENTER_LEFT
  Vector2 UV_BOTTOM_CENTER_RIGHT
  Vector2 UV_TOP_RIGHT
  Vector2 UV_BOTTOM_RIGHT
  Vector2[] startUvs
  Vector2[] middleUvs
  Vector2[] endUvs
  Vector2[] fullUvs
  Vector2[] m_points
  List`1<Vector2[]> m_segments
  float lineThickness
  bool relativeSize
  bool lineList
  bool lineCaps
  int bezierSegmentsPerCurve
  JoinType LineJoins
  BezierType BezierMode
  bool drivenExternally
Свойства:
  float LineThickness
  bool RelativeSize
  bool LineList
  bool LineCaps
  int BezierSegmentsPerCurve
  Vector2[] Points
  List`1<Vector2[]> Segments
Методы:
  float get_LineThickness()
  void set_LineThickness(float value)
  bool get_RelativeSize()
  void set_RelativeSize(bool value)
  bool get_LineList()
  void set_LineList(bool value)
  bool get_LineCaps()
  void set_LineCaps(bool value)
  int get_BezierSegmentsPerCurve()
  void set_BezierSegmentsPerCurve(int value)
  Vector2[] get_Points()
  void set_Points(Vector2[] value)
  List`1<Vector2[]> get_Segments()
  void set_Segments(List`1<Vector2[]> value)
  void PopulateMesh(VertexHelper vh, Vector2[] pointsToDraw)
  void OnPopulateMesh(VertexHelper vh)
  UIVertex[] CreateLineCap(Vector2 start, Vector2 end, SegmentType type)
  UIVertex[] CreateLineSegment(Vector2 start, Vector2 end, SegmentType type, UIVertex[] previousVert)
  void GeneratedUVs()
  void ResolutionToNativeSize(float distance)
  int GetSegmentPointCount()
  Vector2 GetPosition(int index, int segmentIndex)
  Vector2 GetPositionBySegment(int index, int segment)
  Vector2 GetClosestPoint(Vector2 p1, Vector2 p2, Vector2 p3)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UILineRendererList
Наследуется от: UIPrimitiveBase
Поля:
  float MIN_MITER_JOIN
  float MIN_BEVEL_NICE_JOIN
  Vector2 UV_TOP_LEFT
  Vector2 UV_BOTTOM_LEFT
  Vector2 UV_TOP_CENTER_LEFT
  Vector2 UV_TOP_CENTER_RIGHT
  Vector2 UV_BOTTOM_CENTER_LEFT
  Vector2 UV_BOTTOM_CENTER_RIGHT
  Vector2 UV_TOP_RIGHT
  Vector2 UV_BOTTOM_RIGHT
  Vector2[] startUvs
  Vector2[] middleUvs
  Vector2[] endUvs
  Vector2[] fullUvs
  List`1<Vector2> m_points
  float lineThickness
  bool relativeSize
  bool lineList
  bool lineCaps
  int bezierSegmentsPerCurve
  JoinType LineJoins
  BezierType BezierMode
  bool drivenExternally
Свойства:
  float LineThickness
  bool RelativeSize
  bool LineList
  bool LineCaps
  int BezierSegmentsPerCurve
  List`1<Vector2> Points
Методы:
  float get_LineThickness()
  void set_LineThickness(float value)
  bool get_RelativeSize()
  void set_RelativeSize(bool value)
  bool get_LineList()
  void set_LineList(bool value)
  bool get_LineCaps()
  void set_LineCaps(bool value)
  int get_BezierSegmentsPerCurve()
  void set_BezierSegmentsPerCurve(int value)
  List`1<Vector2> get_Points()
  void set_Points(List`1<Vector2> value)
  void AddPoint(Vector2 pointToAdd)
  void RemovePoint(Vector2 pointToRemove)
  void ClearPoints()
  void PopulateMesh(VertexHelper vh, List`1<Vector2> pointsToDraw)
  void OnPopulateMesh(VertexHelper vh)
  UIVertex[] CreateLineCap(Vector2 start, Vector2 end, SegmentType type)
  UIVertex[] CreateLineSegment(Vector2 start, Vector2 end, SegmentType type)
  void GeneratedUVs()
  void ResolutionToNativeSize(float distance)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UILineTextureRenderer
Наследуется от: UIPrimitiveBase
Поля:
  Rect m_UVRect
  Vector2[] m_points
  float LineThickness
  bool UseMargins
  Vector2 Margin
  bool relativeSize
Свойства:
  Rect uvRect
  Vector2[] Points
Методы:
  Rect get_uvRect()
  void set_uvRect(Rect value)
  Vector2[] get_Points()
  void set_Points(Vector2[] value)
  void OnPopulateMesh(VertexHelper vh)
  Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angles)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UIPolygon
Наследуется от: UIPrimitiveBase
Поля:
  bool fill
  float thickness
  int sides
  float rotation
  Single[] VerticesDistances
  float size
Свойства:
Методы:
  void DrawPolygon(int _sides)
  void DrawPolygon(int _sides, Single[] _VerticesDistances)
  void DrawPolygon(int _sides, Single[] _VerticesDistances, float _rotation)
  void Update()
  void OnPopulateMesh(VertexHelper vh)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.ResolutionMode
Наследуется от: Enum
Поля:
  int value__
  ResolutionMode None
  ResolutionMode PerSegment
  ResolutionMode PerLine
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.SetPropertyUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  bool SetColor(Color& currentValue, Color newValue)
  bool SetEquatableStruct(T& currentValue, T newValue)
  bool SetStruct(T& currentValue, T newValue)
  bool SetClass(T& currentValue, T newValue)
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UIPrimitiveBase
Наследуется от: MaskableGraphic
Поля:
  Material s_ETC1DefaultUI
  List`1<Vector2> outputList
  Sprite m_Sprite
  Sprite m_OverrideSprite
  float m_EventAlphaThreshold
  ResolutionMode m_improveResolution
  float m_Resolution
  bool m_useNativeSize
Свойства:
  Sprite sprite
  Sprite overrideSprite
  Sprite activeSprite
  float eventAlphaThreshold
  ResolutionMode ImproveResolution
  float Resoloution
  bool UseNativeSize
  Material defaultETC1GraphicMaterial
  Texture mainTexture
  bool hasBorder
  float pixelsPerUnit
  Material material
  float minWidth
  float preferredWidth
  float flexibleWidth
  float minHeight
  float preferredHeight
  float flexibleHeight
  int layoutPriority
Методы:
  Sprite get_sprite()
  void set_sprite(Sprite value)
  Sprite get_overrideSprite()
  void set_overrideSprite(Sprite value)
  Sprite get_activeSprite()
  float get_eventAlphaThreshold()
  void set_eventAlphaThreshold(float value)
  ResolutionMode get_ImproveResolution()
  void set_ImproveResolution(ResolutionMode value)
  float get_Resoloution()
  void set_Resoloution(float value)
  bool get_UseNativeSize()
  void set_UseNativeSize(bool value)
  void .ctor()
  Material get_defaultETC1GraphicMaterial()
  Texture get_mainTexture()
  bool get_hasBorder()
  float get_pixelsPerUnit()
  Material get_material()
  void set_material(Material value)
  UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
  Vector2[] IncreaseResolution(Vector2[] input)
  List`1<Vector2> IncreaseResolution(List`1<Vector2> input)
  void GeneratedUVs()
  void ResolutionToNativeSize(float distance)
  void CalculateLayoutInputHorizontal()
  void CalculateLayoutInputVertical()
  float get_minWidth()
  float get_preferredWidth()
  float get_flexibleWidth()
  float get_minHeight()
  float get_preferredHeight()
  float get_flexibleHeight()
  int get_layoutPriority()
  bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
  Vector2 MapCoordinate(Vector2 local, Rect rect)
  Vector4 GetAdjustedBorders(Vector4 border, Rect rect)
  void OnEnable()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.UIRing
Наследуется от: UIPrimitiveBase
Поля:
  float innerRadius
  float outerRadius
  int ArcSteps
  List`1<int> indices
  List`1<UIVertex> vertices
Свойства:
Методы:
  void OnPopulateMesh(VertexHelper vh)
  void SetArcSteps(int steps)
  void SetBaseColor(Color color)
  void UpdateBaseAlpha(float value)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.BezierPath
Наследуется от: object
Поля:
  int SegmentsPerCurve
  float MINIMUM_SQR_DISTANCE
  float DIVISION_THRESHOLD
  List`1<Vector2> controlPoints
  int curveCount
Свойства:
Методы:
  void .ctor()
  void SetControlPoints(List`1<Vector2> newControlPoints)
  void SetControlPoints(Vector2[] newControlPoints)
  List`1<Vector2> GetControlPoints()
  void Interpolate(List`1<Vector2> segmentPoints, float scale)
  void SamplePoints(List`1<Vector2> sourcePoints, float minSqrDistance, float maxSqrDistance, float scale)
  Vector2 CalculateBezierPoint(int curveIndex, float t)
  List`1<Vector2> GetDrawingPoints0()
  List`1<Vector2> GetDrawingPoints1()
  List`1<Vector2> GetDrawingPoints2()
  List`1<Vector2> FindDrawingPoints(int curveIndex)
  int FindDrawingPoints(int curveIndex, float t0, float t1, List`1<Vector2> pointList, int insertionIndex)
  Vector2 CalculateBezierPoint(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3)
--------------------------------------------------
Класс: UnityEngine.UI.Extensions.CableCurve
Наследуется от: object
Поля:
  Vector2 m_start
  Vector2 m_end
  float m_slack
  int m_steps
  bool m_regen
  Vector2[] emptyCurve
  Vector2[] points
Свойства:
  bool regenPoints
  Vector2 start
  Vector2 end
  float slack
  int steps
  Vector2 midPoint
Методы:
  bool get_regenPoints()
  void set_regenPoints(bool value)
  Vector2 get_start()
  void set_start(Vector2 value)
  Vector2 get_end()
  void set_end(Vector2 value)
  float get_slack()
  void set_slack(float value)
  int get_steps()
  void set_steps(int value)
  Vector2 get_midPoint()
  void .ctor()
  void .ctor(Vector2[] inputPoints)
  void .ctor(List`1<Vector2> inputPoints)
  void .ctor(CableCurve v)
  Vector2[] Points()
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessLayer
Наследуется от: MonoBehaviour
Поля:
  Transform volumeTrigger
  LayerMask volumeLayer
  bool stopNaNPropagation
  bool finalBlitToCameraTarget
  Antialiasing antialiasingMode
  TemporalAntialiasing temporalAntialiasing
  SubpixelMorphologicalAntialiasing subpixelMorphologicalAntialiasing
  FastApproximateAntialiasing fastApproximateAntialiasing
  Fog fog
  Dithering dithering
  PostProcessDebugLayer debugLayer
  RenderTextureFormat intermediateFormat
  RenderTextureFormat prevIntermediateFormat
  bool supportsIntermediateFormat
  PostProcessResources m_Resources
  bool m_ShowToolkit
  bool m_ShowCustomSorter
  bool breakBeforeColorGrading
  List`1<SerializedBundleRef> m_BeforeTransparentBundles
  List`1<SerializedBundleRef> m_BeforeStackBundles
  List`1<SerializedBundleRef> m_AfterStackBundles
  Dictionary`2<PostProcessEvent, List`1<SerializedBundleRef>> <sortedBundles>k__BackingField
  bool <haveBundlesBeenInited>k__BackingField
  Dictionary`2<Type, PostProcessBundle> m_Bundles
  PropertySheetFactory m_PropertySheetFactory
  CommandBuffer m_LegacyCmdBufferBeforeReflections
  CommandBuffer m_LegacyCmdBufferBeforeLighting
  CommandBuffer m_LegacyCmdBufferOpaque
  CommandBuffer m_LegacyCmdBuffer
  Camera m_Camera
  PostProcessRenderContext m_CurrentContext
  LogHistogram m_LogHistogram
  bool m_SettingsUpdateNeeded
  bool m_IsRenderingInSceneView
  TargetPool m_TargetPool
  bool m_NaNKilled
  List`1<PostProcessEffectRenderer> m_ActiveEffects
  List`1<RenderTargetIdentifier> m_Targets
Свойства:
  Dictionary`2<PostProcessEvent, List`1<SerializedBundleRef>> sortedBundles
  bool haveBundlesBeenInited
Методы:
  Dictionary`2<PostProcessEvent, List`1<SerializedBundleRef>> get_sortedBundles()
  void set_sortedBundles(Dictionary`2<PostProcessEvent, List`1<SerializedBundleRef>> value)
  bool get_haveBundlesBeenInited()
  void set_haveBundlesBeenInited(bool value)
  void OnEnable()
  void InitLegacy()
  void OnRenderImage(RenderTexture src, RenderTexture dst)
  void Init(PostProcessResources resources)
  void InitBundles()
  void UpdateBundleSortList(List`1<SerializedBundleRef> sortedList, PostProcessEvent evt)
  void OnDisable()
  void Reset()
  void OnPreCull()
  void OnPreRender()
  RenderTextureFormat GetIntermediateFormat()
  bool RequiresInitialBlit(Camera camera, PostProcessRenderContext context)
  void UpdateSrcDstForOpaqueOnly(Int32& src, Int32& dst, PostProcessRenderContext context, RenderTargetIdentifier cameraTarget, int opaqueOnlyEffectsRemaining)
  void BuildCommandBuffers()
  void BuildPostEffectsOld(RenderTextureFormat sourceFormat, PostProcessRenderContext context, RenderTargetIdentifier cameraTarget)
  void OnPostRender()
  PostProcessBundle GetBundle()
  PostProcessBundle GetBundle(Type settingsType)
  T GetSettings()
  void BakeMSVOMap(CommandBuffer cmd, Camera camera, RenderTargetIdentifier destination, Nullable`1<RenderTargetIdentifier> depthMap, bool invert, bool isMSAA)
  void OverrideSettings(List`1<PostProcessEffectSettings> baseSettings, float interpFactor)
  void SetLegacyCameraFlags(PostProcessRenderContext context)
  void ResetHistory()
  bool HasOpaqueOnlyEffects(PostProcessRenderContext context)
  bool HasActiveEffects(PostProcessEvent evt, PostProcessRenderContext context)
  void SetupContext(PostProcessRenderContext context)
  void UpdateVolumeSystem(Camera cam, CommandBuffer cmd)
  void RenderOpaqueOnly(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  int RenderInjectionPoint(PostProcessEvent evt, PostProcessRenderContext context, string marker, int releaseTargetAfterUse)
  void RenderList(List`1<SerializedBundleRef> list, PostProcessRenderContext context, string marker)
  void ApplyFlip(PostProcessRenderContext context, MaterialPropertyBlock properties)
  void ApplyDefaultFlip(MaterialPropertyBlock properties)
  int RenderBuiltins(PostProcessRenderContext context, bool isFinalPass, int releaseTargetAfterUse, int eye)
  void RenderFinalPass(PostProcessRenderContext context, int releaseTargetAfterUse, int eye)
  int RenderEffect(PostProcessRenderContext context, bool useTempTarget)
  bool ShouldGenerateLogHistogram(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessRenderContext
Наследуется от: object
Поля:
  bool dlssEnabled
  Camera m_Camera
  CommandBuffer <command>k__BackingField
  RenderTargetIdentifier <source>k__BackingField
  RenderTargetIdentifier <destination>k__BackingField
  RenderTextureFormat <sourceFormat>k__BackingField
  bool <flip>k__BackingField
  PostProcessResources <resources>k__BackingField
  PropertySheetFactory <propertySheets>k__BackingField
  Dictionary`2<string, object> <userData>k__BackingField
  PostProcessDebugLayer <debugLayer>k__BackingField
  int <width>k__BackingField
  int <height>k__BackingField
  bool <stereoActive>k__BackingField
  int <xrActiveEye>k__BackingField
  int <numberOfEyes>k__BackingField
  StereoRenderingMode <stereoRenderingMode>k__BackingField
  int <screenWidth>k__BackingField
  int <screenHeight>k__BackingField
  bool <isSceneView>k__BackingField
  Antialiasing <antialiasing>k__BackingField
  TemporalAntialiasing <temporalAntialiasing>k__BackingField
  PropertySheet uberSheet
  Texture autoExposureTexture
  LogHistogram logHistogram
  Texture logLut
  AutoExposure autoExposure
  int bloomBufferNameID
  bool physicalCamera
  RenderTextureDescriptor m_sourceDescriptor
Свойства:
  Camera camera
  CommandBuffer command
  RenderTargetIdentifier source
  RenderTargetIdentifier destination
  RenderTextureFormat sourceFormat
  bool flip
  PostProcessResources resources
  PropertySheetFactory propertySheets
  Dictionary`2<string, object> userData
  PostProcessDebugLayer debugLayer
  int width
  int height
  bool stereoActive
  int xrActiveEye
  int numberOfEyes
  StereoRenderingMode stereoRenderingMode
  int screenWidth
  int screenHeight
  bool isSceneView
  Antialiasing antialiasing
  TemporalAntialiasing temporalAntialiasing
Методы:
  void Resize(int width, int height, bool dlssEnabled)
  Camera get_camera()
  void set_camera(Camera value)
  CommandBuffer get_command()
  void set_command(CommandBuffer value)
  RenderTargetIdentifier get_source()
  void set_source(RenderTargetIdentifier value)
  RenderTargetIdentifier get_destination()
  void set_destination(RenderTargetIdentifier value)
  RenderTextureFormat get_sourceFormat()
  void set_sourceFormat(RenderTextureFormat value)
  bool get_flip()
  void set_flip(bool value)
  PostProcessResources get_resources()
  void set_resources(PostProcessResources value)
  PropertySheetFactory get_propertySheets()
  void set_propertySheets(PropertySheetFactory value)
  Dictionary`2<string, object> get_userData()
  void set_userData(Dictionary`2<string, object> value)
  PostProcessDebugLayer get_debugLayer()
  void set_debugLayer(PostProcessDebugLayer value)
  int get_width()
  void set_width(int value)
  int get_height()
  void set_height(int value)
  bool get_stereoActive()
  void set_stereoActive(bool value)
  int get_xrActiveEye()
  void set_xrActiveEye(int value)
  int get_numberOfEyes()
  void set_numberOfEyes(int value)
  StereoRenderingMode get_stereoRenderingMode()
  void set_stereoRenderingMode(StereoRenderingMode value)
  int get_screenWidth()
  void set_screenWidth(int value)
  int get_screenHeight()
  void set_screenHeight(int value)
  bool get_isSceneView()
  void set_isSceneView(bool value)
  Antialiasing get_antialiasing()
  void set_antialiasing(Antialiasing value)
  TemporalAntialiasing get_temporalAntialiasing()
  void set_temporalAntialiasing(TemporalAntialiasing value)
  void Reset()
  bool IsTemporalAntialiasingActive()
  bool IsDebugOverlayEnabled(DebugOverlay overlay)
  void PushDebugOverlay(CommandBuffer cmd, RenderTargetIdentifier source, PropertySheet sheet, int pass)
  RenderTextureDescriptor GetDescriptor(int depthBufferBits, RenderTextureFormat colorFormat, RenderTextureReadWrite readWrite)
  void GetScreenSpaceTemporaryRT(CommandBuffer cmd, int nameID, int depthBufferBits, RenderTextureFormat colorFormat, RenderTextureReadWrite readWrite, FilterMode filter, int widthOverride, int heightOverride)
  RenderTexture GetScreenSpaceTemporaryRT(int depthBufferBits, RenderTextureFormat colorFormat, RenderTextureReadWrite readWrite, int widthOverride, int heightOverride)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.DisplayNameAttribute
Наследуется от: Attribute
Поля:
  string displayName
Свойства:
Методы:
  void .ctor(string displayName)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MaxAttribute
Наследуется от: Attribute
Поля:
  float max
Свойства:
Методы:
  void .ctor(float max)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MinAttribute
Наследуется от: Attribute
Поля:
  float min
Свойства:
Методы:
  void .ctor(float min)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MinMaxAttribute
Наследуется от: Attribute
Поля:
  float min
  float max
Свойства:
Методы:
  void .ctor(float min, float max)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessAttribute
Наследуется от: Attribute
Поля:
  Type renderer
  PostProcessEvent eventType
  string menuItem
  bool allowInSceneView
  bool builtinEffect
Свойства:
Методы:
  void .ctor(Type renderer, PostProcessEvent eventType, string menuItem, bool allowInSceneView)
  void .ctor(Type renderer, string menuItem, bool allowInSceneView)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TrackballAttribute
Наследуется от: Attribute
Поля:
  Mode mode
Свойства:
Методы:
  void .ctor(Mode mode)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AmbientOcclusionMode
Наследуется от: Enum
Поля:
  int value__
  AmbientOcclusionMode ScalableAmbientObscurance
  AmbientOcclusionMode MultiScaleVolumetricObscurance
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AmbientOcclusionQuality
Наследуется от: Enum
Поля:
  int value__
  AmbientOcclusionQuality Lowest
  AmbientOcclusionQuality Low
  AmbientOcclusionQuality Medium
  AmbientOcclusionQuality High
  AmbientOcclusionQuality Ultra
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AmbientOcclusionModeParameter
Наследуется от: ParameterOverride`1<AmbientOcclusionMode>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AmbientOcclusionQualityParameter
Наследуется от: ParameterOverride`1<AmbientOcclusionQuality>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AmbientOcclusion
Наследуется от: PostProcessEffectSettings
Поля:
  AmbientOcclusionModeParameter mode
  FloatParameter intensity
  ColorParameter color
  BoolParameter ambientOnly
  FloatParameter noiseFilterTolerance
  FloatParameter blurTolerance
  FloatParameter upsampleTolerance
  FloatParameter thicknessModifier
  FloatParameter directLightingStrength
  FloatParameter radius
  AmbientOcclusionQualityParameter quality
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.IAmbientOcclusionMethod
Поля:
Свойства:
Методы:
  DepthTextureMode GetCameraFlags()
  void RenderAfterOpaque(PostProcessRenderContext context)
  void RenderAmbientOnly(PostProcessRenderContext context)
  void CompositeAmbientOnly(PostProcessRenderContext context)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AmbientOcclusionRenderer
Наследуется от: PostProcessEffectRenderer`1<AmbientOcclusion>
Поля:
  IAmbientOcclusionMethod[] m_Methods
Свойства:
Методы:
  void Init()
  bool IsAmbientOnly(PostProcessRenderContext context)
  IAmbientOcclusionMethod Get()
  DepthTextureMode GetCameraFlags()
  void Release()
  ScalableAO GetScalableAO()
  MultiScaleVO GetMultiScaleVO()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.EyeAdaptation
Наследуется от: Enum
Поля:
  int value__
  EyeAdaptation Progressive
  EyeAdaptation Fixed
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.EyeAdaptationParameter
Наследуется от: ParameterOverride`1<EyeAdaptation>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AutoExposure
Наследуется от: PostProcessEffectSettings
Поля:
  Vector2Parameter filtering
  FloatParameter minLuminance
  FloatParameter maxLuminance
  FloatParameter keyValue
  EyeAdaptationParameter eyeAdaptation
  FloatParameter speedUp
  FloatParameter speedDown
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.AutoExposureRenderer
Наследуется от: PostProcessEffectRenderer`1<AutoExposure>
Поля:
  int k_NumEyes
  int k_NumAutoExposureTextures
  RenderTexture[][] m_AutoExposurePool
  Int32[] m_AutoExposurePingPong
  RenderTexture m_CurrentAutoExposure
Свойства:
Методы:
  void .ctor()
  void CheckTexture(int eye, int id)
  void Render(PostProcessRenderContext context)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Bloom
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter intensity
  FloatParameter threshold
  FloatParameter softKnee
  FloatParameter clamp
  FloatParameter diffusion
  FloatParameter anamorphicRatio
  ColorParameter color
  BoolParameter fastMode
  TextureParameter dirtTexture
  FloatParameter dirtIntensity
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.BloomRenderer
Наследуется от: PostProcessEffectRenderer`1<Bloom>
Поля:
  Level[] m_Pyramid
  int k_MaxPyramidSize
Свойства:
Методы:
  void Init()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ChromaticAberration
Наследуется от: PostProcessEffectSettings
Поля:
  TextureParameter spectralLut
  FloatParameter intensity
  BoolParameter fastMode
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ChromaticAberrationRenderer
Наследуется от: PostProcessEffectRenderer`1<ChromaticAberration>
Поля:
  Texture2D m_InternalSpectralLut
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  void Release()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.GradingMode
Наследуется от: Enum
Поля:
  int value__
  GradingMode LowDefinitionRange
  GradingMode HighDefinitionRange
  GradingMode External
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Tonemapper
Наследуется от: Enum
Поля:
  int value__
  Tonemapper None
  Tonemapper Neutral
  Tonemapper ACES
  Tonemapper Custom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MaskingMode
Наследуется от: Enum
Поля:
  int value__
  MaskingMode None
  MaskingMode SourceAlpha
  MaskingMode SourceOneMinusAlpha
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.GradingModeParameter
Наследуется от: ParameterOverride`1<GradingMode>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TonemapperParameter
Наследуется от: ParameterOverride`1<Tonemapper>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MaskingModeParameter
Наследуется от: ParameterOverride`1<MaskingMode>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ColorGrading
Наследуется от: PostProcessEffectSettings
Поля:
  GradingModeParameter gradingMode
  TextureParameter externalLut
  TonemapperParameter tonemapper
  FloatParameter toneCurveToeStrength
  FloatParameter toneCurveToeLength
  FloatParameter toneCurveShoulderStrength
  FloatParameter toneCurveShoulderLength
  FloatParameter toneCurveShoulderAngle
  FloatParameter toneCurveGamma
  TextureParameter ldrLut
  FloatParameter ldrLutContribution
  FloatParameter temperature
  FloatParameter tint
  ColorParameter colorFilter
  FloatParameter hueShift
  FloatParameter saturation
  FloatParameter brightness
  FloatParameter postExposure
  FloatParameter contrast
  MaskingModeParameter maskMode
  FloatParameter maskIntensity
  FloatParameter mixerRedOutRedIn
  FloatParameter mixerRedOutGreenIn
  FloatParameter mixerRedOutBlueIn
  FloatParameter mixerGreenOutRedIn
  FloatParameter mixerGreenOutGreenIn
  FloatParameter mixerGreenOutBlueIn
  FloatParameter mixerBlueOutRedIn
  FloatParameter mixerBlueOutGreenIn
  FloatParameter mixerBlueOutBlueIn
  Vector4Parameter lift
  Vector4Parameter gamma
  Vector4Parameter gain
  SplineParameter masterCurve
  SplineParameter redCurve
  SplineParameter greenCurve
  SplineParameter blueCurve
  SplineParameter hueVsHueCurve
  SplineParameter hueVsSatCurve
  SplineParameter satVsSatCurve
  SplineParameter lumVsSatCurve
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ColorGradingRenderer
Наследуется от: PostProcessEffectRenderer`1<ColorGrading>
Поля:
  Texture2D m_GradingCurves
  Color[] m_Pixels
  RenderTexture m_InternalLdrLut
  RenderTexture m_InternalLogLut
  int k_Lut2DSize
  int k_Lut3DSize
  HableCurve m_HableCurve
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  void RenderExternalPipeline3D(PostProcessRenderContext context)
  void RenderHDRPipeline3D(PostProcessRenderContext context)
  void RenderHDRPipeline2D(PostProcessRenderContext context)
  void RenderLDRPipeline2D(PostProcessRenderContext context)
  void CheckInternalLogLut()
  void CheckInternalStripLut()
  Texture2D GetCurveTexture(bool hdr)
  bool IsRenderTextureFormatSupportedForLinearFiltering(RenderTextureFormat format)
  RenderTextureFormat GetLutFormat()
  TextureFormat GetCurveFormat()
  void Release()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.KernelSize
Наследуется от: Enum
Поля:
  int value__
  KernelSize Small
  KernelSize Medium
  KernelSize Large
  KernelSize VeryLarge
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.KernelSizeParameter
Наследуется от: ParameterOverride`1<KernelSize>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.DepthOfField
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter focusDistance
  FloatParameter aperture
  FloatParameter focalLength
  KernelSizeParameter kernelSize
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.DepthOfFieldRenderer
Наследуется от: PostProcessEffectRenderer`1<DepthOfField>
Поля:
  int k_NumEyes
  int k_NumCoCHistoryTextures
  RenderTexture[][] m_CoCHistoryTextures
  Int32[] m_HistoryPingPong
  float k_FilmHeight
Свойства:
Методы:
  void .ctor()
  DepthTextureMode GetCameraFlags()
  RenderTextureFormat SelectFormat(RenderTextureFormat primary, RenderTextureFormat secondary)
  float CalculateMaxCoCRadius(int screenHeight)
  RenderTexture CheckHistory(int eye, int id, PostProcessRenderContext context, RenderTextureFormat format)
  void Render(PostProcessRenderContext context)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Dithering
Наследуется от: object
Поля:
  int m_NoiseTextureIndex
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.FastApproximateAntialiasing
Наследуется от: object
Поля:
  bool fastMode
  bool keepAlpha
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Fog
Наследуется от: object
Поля:
  bool enabled
  bool excludeSkybox
Свойства:
Методы:
  DepthTextureMode GetCameraFlags()
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Grain
Наследуется от: PostProcessEffectSettings
Поля:
  BoolParameter colored
  FloatParameter intensity
  FloatParameter size
  FloatParameter lumContrib
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.GrainRenderer
Наследуется от: PostProcessEffectRenderer`1<Grain>
Поля:
  RenderTexture m_GrainLookupRT
  int k_SampleCount
  int m_SampleIndex
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  RenderTextureFormat GetLookupFormat()
  void Release()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.LensDistortion
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter intensity
  FloatParameter intensityX
  FloatParameter intensityY
  FloatParameter centerX
  FloatParameter centerY
  FloatParameter scale
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.LensDistortionRenderer
Наследуется от: PostProcessEffectRenderer`1<LensDistortion>
Поля:
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MotionBlur
Наследуется от: PostProcessEffectSettings
Поля:
  FloatParameter shutterAngle
  IntParameter sampleCount
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MotionBlurRenderer
Наследуется от: PostProcessEffectRenderer`1<MotionBlur>
Поля:
Свойства:
Методы:
  DepthTextureMode GetCameraFlags()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MultiScaleVO
Наследуется от: object
Поля:
  Single[] m_SampleThickness
  Single[] m_InvThicknessTable
  Single[] m_SampleWeightTable
  Int32[] m_Widths
  Int32[] m_Heights
  AmbientOcclusion m_Settings
  PropertySheet m_PropertySheet
  PostProcessResources m_Resources
  RenderTexture m_AmbientOnlyAO
  RenderTargetIdentifier[] m_MRT
Свойства:
Методы:
  void .ctor(AmbientOcclusion settings)
  DepthTextureMode GetCameraFlags()
  void SetResources(PostProcessResources resources)
  void Alloc(CommandBuffer cmd, int id, MipLevel size, RenderTextureFormat format, bool uav)
  void AllocArray(CommandBuffer cmd, int id, MipLevel size, RenderTextureFormat format, bool uav)
  void Release(CommandBuffer cmd, int id)
  Vector4 CalculateZBufferParams(Camera camera)
  float CalculateTanHalfFovHeight(Camera camera)
  Vector2 GetSize(MipLevel mip)
  Vector3 GetSizeArray(MipLevel mip)
  void GenerateAOMap(CommandBuffer cmd, Camera camera, RenderTargetIdentifier destination, Nullable`1<RenderTargetIdentifier> depthMap, bool invert, bool isMSAA)
  void PushAllocCommands(CommandBuffer cmd, bool isMSAA)
  void PushDownsampleCommands(CommandBuffer cmd, Camera camera, Nullable`1<RenderTargetIdentifier> depthMap, bool isMSAA)
  void PushRenderCommands(CommandBuffer cmd, int source, int destination, Vector3 sourceSize, float tanHalfFovH, bool isMSAA)
  void PushUpsampleCommands(CommandBuffer cmd, int lowResDepth, int interleavedAO, int highResDepth, Nullable`1<int> highResAO, RenderTargetIdentifier dest, Vector3 lowResDepthSize, Vector2 highResDepthSize, bool isMSAA, bool invert)
  void PushReleaseCommands(CommandBuffer cmd)
  void PreparePropertySheet(PostProcessRenderContext context)
  void CheckAOTexture(PostProcessRenderContext context)
  void PushDebug(PostProcessRenderContext context)
  void RenderAfterOpaque(PostProcessRenderContext context)
  void RenderAmbientOnly(PostProcessRenderContext context)
  void CompositeAmbientOnly(PostProcessRenderContext context)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScalableAO
Наследуется от: object
Поля:
  RenderTexture m_Result
  PropertySheet m_PropertySheet
  AmbientOcclusion m_Settings
  RenderTargetIdentifier[] m_MRT
  Int32[] m_SampleCount
Свойства:
Методы:
  void .ctor(AmbientOcclusion settings)
  DepthTextureMode GetCameraFlags()
  void DoLazyInitialization(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context, CommandBuffer cmd, int occlusionSource)
  void RenderAfterOpaque(PostProcessRenderContext context)
  void RenderAmbientOnly(PostProcessRenderContext context)
  void CompositeAmbientOnly(PostProcessRenderContext context)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionPreset
Наследуется от: Enum
Поля:
  int value__
  ScreenSpaceReflectionPreset Lower
  ScreenSpaceReflectionPreset Low
  ScreenSpaceReflectionPreset Medium
  ScreenSpaceReflectionPreset High
  ScreenSpaceReflectionPreset Higher
  ScreenSpaceReflectionPreset Ultra
  ScreenSpaceReflectionPreset Overkill
  ScreenSpaceReflectionPreset Custom
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionResolution
Наследуется от: Enum
Поля:
  int value__
  ScreenSpaceReflectionResolution Downsampled
  ScreenSpaceReflectionResolution FullSize
  ScreenSpaceReflectionResolution Supersampled
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionPresetParameter
Наследуется от: ParameterOverride`1<ScreenSpaceReflectionPreset>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionResolutionParameter
Наследуется от: ParameterOverride`1<ScreenSpaceReflectionResolution>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScreenSpaceReflections
Наследуется от: PostProcessEffectSettings
Поля:
  ScreenSpaceReflectionPresetParameter preset
  IntParameter maximumIterationCount
  ScreenSpaceReflectionResolutionParameter resolution
  FloatParameter thickness
  FloatParameter maximumMarchDistance
  FloatParameter distanceFade
  FloatParameter vignette
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ScreenSpaceReflectionsRenderer
Наследуется от: PostProcessEffectRenderer`1<ScreenSpaceReflections>
Поля:
  RenderTexture m_Resolve
  RenderTexture m_History
  Int32[] m_MipIDs
  QualityPreset[] m_Presets
Свойства:
Методы:
  DepthTextureMode GetCameraFlags()
  void CheckRT(RenderTexture& rt, int width, int height, FilterMode filterMode, bool useMipMap)
  void Render(PostProcessRenderContext context)
  void Release()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.SubpixelMorphologicalAntialiasing
Наследуется от: object
Поля:
  Quality quality
Свойства:
Методы:
  bool IsSupported()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TemporalAntialiasing
Наследуется от: object
Поля:
  float jitterSpread
  float sharpness
  float stationaryBlending
  float motionBlending
  Func`3<Camera, Vector2, Matrix4x4> jitteredMatrixFunc
  Vector2 <jitter>k__BackingField
  Vector2 <jitterRaw>k__BackingField
  RenderTargetIdentifier[] m_Mrt
  bool m_ResetHistory
  int <sampleIndex>k__BackingField
  int <sampleCount>k__BackingField
  int k_NumEyes
  int k_NumHistoryTextures
  RenderTexture[][] m_HistoryTextures
  Int32[] m_HistoryPingPong
Свойства:
  Vector2 jitter
  Vector2 jitterRaw
  int sampleIndex
  int sampleCount
Методы:
  Vector2 get_jitter()
  void set_jitter(Vector2 value)
  Vector2 get_jitterRaw()
  void set_jitterRaw(Vector2 value)
  int get_sampleIndex()
  void set_sampleIndex(int value)
  int get_sampleCount()
  void set_sampleCount(int value)
  bool IsSupported()
  DepthTextureMode GetCameraFlags()
  void ResetHistory()
  Vector2 GenerateRandomOffset()
  Matrix4x4 GetJitteredProjectionMatrix(Camera camera)
  void ConfigureJitteredProjectionMatrix(PostProcessRenderContext context)
  void ConfigureStereoJitteredProjectionMatrices(PostProcessRenderContext context)
  void GenerateHistoryName(RenderTexture rt, int id, PostProcessRenderContext context)
  RenderTexture CheckHistory(int id, PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  void Release()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.VignetteMode
Наследуется от: Enum
Поля:
  int value__
  VignetteMode Classic
  VignetteMode Masked
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.VignetteModeParameter
Наследуется от: ParameterOverride`1<VignetteMode>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Vignette
Наследуется от: PostProcessEffectSettings
Поля:
  VignetteModeParameter mode
  ColorParameter color
  Vector2Parameter center
  FloatParameter intensity
  FloatParameter smoothness
  FloatParameter roundness
  BoolParameter rounded
  TextureParameter mask
  FloatParameter opacity
Свойства:
Методы:
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.VignetteRenderer
Наследуется от: PostProcessEffectRenderer`1<Vignette>
Поля:
Свойства:
Методы:
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.HistogramMonitor
Наследуется от: Monitor
Поля:
  int width
  int height
  Channel channel
  ComputeBuffer m_Data
  int k_NumBins
  int k_ThreadGroupSizeX
  int k_ThreadGroupSizeY
Свойства:
Методы:
  void OnDisable()
  bool NeedsHalfRes()
  bool ShaderResourcesAvailable(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.LightMeterMonitor
Наследуется от: Monitor
Поля:
  int width
  int height
  bool showCurves
Свойства:
Методы:
  bool ShaderResourcesAvailable(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MonitorType
Наследуется от: Enum
Поля:
  int value__
  MonitorType LightMeter
  MonitorType Histogram
  MonitorType Waveform
  MonitorType Vectorscope
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Monitor
Наследуется от: object
Поля:
  RenderTexture <output>k__BackingField
  bool requested
Свойства:
  RenderTexture output
Методы:
  RenderTexture get_output()
  void set_output(RenderTexture value)
  bool IsRequestedAndSupported(PostProcessRenderContext context)
  bool ShaderResourcesAvailable(PostProcessRenderContext context)
  bool NeedsHalfRes()
  void CheckOutput(int width, int height)
  void OnEnable()
  void OnDisable()
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.VectorscopeMonitor
Наследуется от: Monitor
Поля:
  int size
  float exposure
  ComputeBuffer m_Data
  int k_ThreadGroupSizeX
  int k_ThreadGroupSizeY
Свойства:
Методы:
  void OnDisable()
  bool NeedsHalfRes()
  bool ShaderResourcesAvailable(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.WaveformMonitor
Наследуется от: Monitor
Поля:
  float exposure
  int height
  ComputeBuffer m_Data
  int k_ThreadGroupSize
  int k_ThreadGroupSizeX
  int k_ThreadGroupSizeY
Свойства:
Методы:
  void OnDisable()
  bool NeedsHalfRes()
  bool ShaderResourcesAvailable(PostProcessRenderContext context)
  void Render(PostProcessRenderContext context)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ParameterOverride
Наследуется от: object
Поля:
  bool overrideState
Свойства:
Методы:
  void Interp(ParameterOverride from, ParameterOverride to, float t)
  int GetHash()
  T GetValue()
  void OnEnable()
  void OnDisable()
  void SetValue(ParameterOverride parameter)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ParameterOverride`1
Наследуется от: ParameterOverride
Поля:
  T value
Свойства:
Методы:
  void .ctor()
  void .ctor(T value)
  void .ctor(T value, bool overrideState)
  void Interp(ParameterOverride from, ParameterOverride to, float t)
  void Interp(T from, T to, float t)
  void Override(T x)
  void SetValue(ParameterOverride parameter)
  int GetHash()
  T op_Implicit(ParameterOverride`1<T> prop)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.FloatParameter
Наследуется от: ParameterOverride`1<float>
Поля:
Свойства:
Методы:
  void Interp(float from, float to, float t)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.IntParameter
Наследуется от: ParameterOverride`1<int>
Поля:
Свойства:
Методы:
  void Interp(int from, int to, float t)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.BoolParameter
Наследуется от: ParameterOverride`1<bool>
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ColorParameter
Наследуется от: ParameterOverride`1<Color>
Поля:
Свойства:
Методы:
  void Interp(Color from, Color to, float t)
  Vector4 op_Implicit(ColorParameter prop)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Vector2Parameter
Наследуется от: ParameterOverride`1<Vector2>
Поля:
Свойства:
Методы:
  void Interp(Vector2 from, Vector2 to, float t)
  Vector3 op_Implicit(Vector2Parameter prop)
  Vector4 op_Implicit(Vector2Parameter prop)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Vector3Parameter
Наследуется от: ParameterOverride`1<Vector3>
Поля:
Свойства:
Методы:
  void Interp(Vector3 from, Vector3 to, float t)
  Vector2 op_Implicit(Vector3Parameter prop)
  Vector4 op_Implicit(Vector3Parameter prop)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Vector4Parameter
Наследуется от: ParameterOverride`1<Vector4>
Поля:
Свойства:
Методы:
  void Interp(Vector4 from, Vector4 to, float t)
  Vector2 op_Implicit(Vector4Parameter prop)
  Vector3 op_Implicit(Vector4Parameter prop)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.SplineParameter
Наследуется от: ParameterOverride`1<Spline>
Поля:
Свойства:
Методы:
  void OnEnable()
  void SetValue(ParameterOverride parameter)
  void Interp(Spline from, Spline to, float t)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TextureParameterDefault
Наследуется от: Enum
Поля:
  int value__
  TextureParameterDefault None
  TextureParameterDefault Black
  TextureParameterDefault White
  TextureParameterDefault Transparent
  TextureParameterDefault Lut2D
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TextureParameter
Наследуется от: ParameterOverride`1<Texture>
Поля:
  TextureParameterDefault defaultState
Свойства:
Методы:
  void Interp(Texture from, Texture to, float t)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessBundle
Наследуется от: object
Поля:
  PostProcessAttribute <attribute>k__BackingField
  PostProcessEffectSettings <settings>k__BackingField
  PostProcessEffectRenderer m_Renderer
Свойства:
  PostProcessAttribute attribute
  PostProcessEffectSettings settings
  PostProcessEffectRenderer renderer
Методы:
  PostProcessAttribute get_attribute()
  void set_attribute(PostProcessAttribute value)
  PostProcessEffectSettings get_settings()
  void set_settings(PostProcessEffectSettings value)
  PostProcessEffectRenderer get_renderer()
  void .ctor(PostProcessEffectSettings settings)
  void Release()
  void ResetHistory()
  T CastSettings()
  T CastRenderer()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessDebug
Наследуется от: MonoBehaviour
Поля:
  PostProcessLayer postProcessLayer
  PostProcessLayer m_PreviousPostProcessLayer
  bool lightMeter
  bool histogram
  bool waveform
  bool vectorscope
  DebugOverlay debugOverlay
  Camera m_CurrentCamera
  CommandBuffer m_CmdAfterEverything
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void Update()
  void Reset()
  void UpdateStates()
  void OnPostRender()
  void OnGUI()
  void DrawMonitor(Rect& rect, Monitor monitor, bool enabled)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.DebugOverlay
Наследуется от: Enum
Поля:
  int value__
  DebugOverlay None
  DebugOverlay Depth
  DebugOverlay Normals
  DebugOverlay MotionVectors
  DebugOverlay NANTracker
  DebugOverlay ColorBlindnessSimulation
  DebugOverlay _
  DebugOverlay AmbientOcclusion
  DebugOverlay BloomBuffer
  DebugOverlay BloomThreshold
  DebugOverlay DepthOfField
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ColorBlindnessType
Наследуется от: Enum
Поля:
  int value__
  ColorBlindnessType Deuteranopia
  ColorBlindnessType Protanopia
  ColorBlindnessType Tritanopia
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessDebugLayer
Наследуется от: object
Поля:
  LightMeterMonitor lightMeter
  HistogramMonitor histogram
  WaveformMonitor waveform
  VectorscopeMonitor vectorscope
  Dictionary`2<MonitorType, Monitor> m_Monitors
  int frameWidth
  int frameHeight
  RenderTexture <debugOverlayTarget>k__BackingField
  bool <debugOverlayActive>k__BackingField
  DebugOverlay <debugOverlay>k__BackingField
  OverlaySettings overlaySettings
Свойства:
  RenderTexture debugOverlayTarget
  bool debugOverlayActive
  DebugOverlay debugOverlay
Методы:
  RenderTexture get_debugOverlayTarget()
  void set_debugOverlayTarget(RenderTexture value)
  bool get_debugOverlayActive()
  void set_debugOverlayActive(bool value)
  DebugOverlay get_debugOverlay()
  void set_debugOverlay(DebugOverlay value)
  void OnEnable()
  void OnDisable()
  void DestroyDebugOverlayTarget()
  void RequestMonitorPass(MonitorType monitor)
  void RequestDebugOverlay(DebugOverlay mode)
  void SetFrameSize(int width, int height)
  void PushDebugOverlay(CommandBuffer cmd, RenderTargetIdentifier source, PropertySheet sheet, int pass)
  DepthTextureMode GetCameraFlags()
  void RenderMonitors(PostProcessRenderContext context)
  void RenderSpecialOverlays(PostProcessRenderContext context)
  void EndFrame()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessEffectRenderer
Наследуется от: object
Поля:
  bool m_ResetHistory
Свойства:
Методы:
  void Init()
  DepthTextureMode GetCameraFlags()
  void ResetHistory()
  void Release()
  void Render(PostProcessRenderContext context)
  void SetSettings(PostProcessEffectSettings settings)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessEffectRenderer`1
Наследуется от: PostProcessEffectRenderer
Поля:
  T <settings>k__BackingField
Свойства:
  T settings
Методы:
  T get_settings()
  void set_settings(T value)
  void SetSettings(PostProcessEffectSettings settings)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessEffectSettings
Наследуется от: ScriptableObject
Поля:
  bool active
  BoolParameter enabled
  ReadOnlyCollection`1<ParameterOverride> parameters
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void SetAllOverridesTo(bool state, bool excludeEnabled)
  bool IsEnabledAndSupported(PostProcessRenderContext context)
  int GetHash()
  void .ctor()
  ParameterOverride <OnEnable>b__3_2(FieldInfo t)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessEvent
Наследуется от: Enum
Поля:
  int value__
  PostProcessEvent BeforeTransparent
  PostProcessEvent BeforeStack
  PostProcessEvent AfterStack
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessEventComparer
Наследуется от: ValueType
Поля:
Свойства:
Методы:
  bool Equals(PostProcessEvent x, PostProcessEvent y)
  int GetHashCode(PostProcessEvent obj)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessManager
Наследуется от: object
Поля:
  PostProcessManager s_Instance
  int k_MaxLayerCount
  Dictionary`2<int, List`1<PostProcessVolume>> m_SortedVolumes
  List`1<PostProcessVolume> m_Volumes
  Dictionary`2<int, bool> m_SortNeeded
  List`1<PostProcessEffectSettings> m_BaseSettings
  Dictionary`2<Type, PostProcessAttribute> settingsTypes
Свойства:
  PostProcessManager instance
Методы:
  PostProcessManager get_instance()
  void .ctor()
  void CleanBaseTypes()
  void ReloadBaseTypes()
  void GetActiveVolumes(PostProcessLayer layer, List`1<PostProcessVolume> results, bool skipDisabled, bool skipZeroWeight)
  PostProcessVolume GetHighestPriorityVolume(PostProcessLayer layer)
  PostProcessVolume GetHighestPriorityVolume(LayerMask mask)
  PostProcessVolume QuickVolume(int layer, float priority, PostProcessEffectSettings[] settings)
  void SetLayerDirty(int layer)
  void UpdateVolumeLayer(PostProcessVolume volume, int prevLayer, int newLayer)
  void Register(PostProcessVolume volume, int layer)
  void Register(PostProcessVolume volume)
  void Unregister(PostProcessVolume volume, int layer)
  void Unregister(PostProcessVolume volume)
  void ReplaceData(PostProcessLayer postProcessLayer)
  void UpdateSettings(PostProcessLayer postProcessLayer, Camera camera)
  List`1<PostProcessVolume> GrabVolumes(LayerMask mask)
  void SortByPriority(List`1<PostProcessVolume> volumes)
  bool IsVolumeRenderedByCamera(PostProcessVolume volume, Camera camera)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessProfile
Наследуется от: ScriptableObject
Поля:
  List`1<PostProcessEffectSettings> settings
  bool isDirty
Свойства:
Методы:
  void OnEnable()
  T AddSettings()
  PostProcessEffectSettings AddSettings(Type type)
  PostProcessEffectSettings AddSettings(PostProcessEffectSettings effect)
  void RemoveSettings()
  void RemoveSettings(Type type)
  bool HasSettings()
  bool HasSettings(Type type)
  T GetSetting()
  bool TryGetSettings(T& outSetting)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessResources
Наследуется от: ScriptableObject
Поля:
  Texture2D[] blueNoise64
  Texture2D[] blueNoise256
  SMAALuts smaaLuts
  Shaders shaders
  ComputeShaders computeShaders
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PostProcessVolume
Наследуется от: MonoBehaviour
Поля:
  PostProcessProfile sharedProfile
  bool isGlobal
  Bounds bounds
  float blendDistance
  float weight
  float priority
  int m_PreviousLayer
  float m_PreviousPriority
  PostProcessProfile m_InternalProfile
Свойства:
  PostProcessProfile profile
  PostProcessProfile profileRef
Методы:
  PostProcessProfile get_profile()
  void set_profile(PostProcessProfile value)
  PostProcessProfile get_profileRef()
  bool HasInstantiatedProfile()
  void OnEnable()
  void OnDisable()
  void Update()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ColorUtilities
Наследуется от: object
Поля:
  float logC_cut
  float logC_a
  float logC_b
  float logC_c
  float logC_d
  float logC_e
  float logC_f
Свойства:
Методы:
  float StandardIlluminantY(float x)
  Vector3 CIExyToLMS(float x, float y)
  Vector3 ComputeColorBalance(float temperature, float tint)
  Vector3 ColorToLift(Vector4 color)
  Vector3 ColorToInverseGamma(Vector4 color)
  Vector3 ColorToGain(Vector4 color)
  float LogCToLinear(float x)
  float LinearToLogC(float x)
  UInt32 ToHex(Color c)
  Color ToRGBA(UInt32 hex)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.HableCurve
Наследуется от: object
Поля:
  float <whitePoint>k__BackingField
  float <inverseWhitePoint>k__BackingField
  float <x0>k__BackingField
  float <x1>k__BackingField
  Segment[] m_Segments
  Uniforms uniforms
Свойства:
  float whitePoint
  float inverseWhitePoint
  float x0
  float x1
Методы:
  float get_whitePoint()
  void set_whitePoint(float value)
  float get_inverseWhitePoint()
  void set_inverseWhitePoint(float value)
  float get_x0()
  void set_x0(float value)
  float get_x1()
  void set_x1(float value)
  void .ctor()
  float Eval(float x)
  void Init(float toeStrength, float toeLength, float shoulderStrength, float shoulderLength, float shoulderAngle, float gamma)
  void InitSegments(DirectParams srcParams)
  void SolveAB(Single& lnA, Single& B, float x0, float y0, float m)
  void AsSlopeIntercept(Single& m, Single& b, float x0, float x1, float y0, float y1)
  float EvalDerivativeLinearGamma(float m, float b, float g, float x)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.HaltonSeq
Наследуется от: object
Поля:
Свойства:
Методы:
  float Get(int index, int radix)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.LogHistogram
Наследуется от: object
Поля:
  int rangeMin
  int rangeMax
  int k_Bins
  ComputeBuffer <data>k__BackingField
Свойства:
  ComputeBuffer data
Методы:
  ComputeBuffer get_data()
  void set_data(ComputeBuffer value)
  void Generate(PostProcessRenderContext context)
  Vector4 GetHistogramScaleOffsetRes(PostProcessRenderContext context)
  void Release()
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.MeshUtilities
Наследуется от: object
Поля:
  Dictionary`2<PrimitiveType, Mesh> s_Primitives
  Dictionary`2<Type, PrimitiveType> s_ColliderPrimitives
Свойства:
Методы:
  void .cctor()
  Mesh GetColliderMesh(Collider collider)
  Mesh GetPrimitive(PrimitiveType primitiveType)
  Mesh GetBuiltinMesh(PrimitiveType primitiveType)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PropertySheet
Наследуется от: object
Поля:
  MaterialPropertyBlock <properties>k__BackingField
  Material <material>k__BackingField
Свойства:
  MaterialPropertyBlock properties
  Material material
Методы:
  MaterialPropertyBlock get_properties()
  void set_properties(MaterialPropertyBlock value)
  Material get_material()
  void set_material(Material value)
  void .ctor(Material material)
  void ClearKeywords()
  void EnableKeyword(string keyword)
  void DisableKeyword(string keyword)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.PropertySheetFactory
Наследуется от: object
Поля:
  Dictionary`2<Shader, PropertySheet> m_Sheets
Свойства:
Методы:
  void .ctor()
  PropertySheet Get(string shaderName)
  PropertySheet Get(Shader shader)
  void Release()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.RuntimeUtilities
Наследуется от: object
Поля:
  Texture2D m_WhiteTexture
  Texture3D m_WhiteTexture3D
  Texture2D m_BlackTexture
  Texture3D m_BlackTexture3D
  Texture2D m_TransparentTexture
  Texture3D m_TransparentTexture3D
  Dictionary`2<int, Texture2D> m_LutStrips
  PostProcessResources s_Resources
  Mesh s_FullscreenTriangle
  Material s_CopyStdMaterial
  Material s_CopyStdFromDoubleWideMaterial
  Material s_CopyMaterial
  Material s_CopyFromTexArrayMaterial
  PropertySheet s_CopySheet
  PropertySheet s_CopyFromTexArraySheet
  IEnumerable`1<Type> m_AssemblyTypes
Свойства:
  Texture2D whiteTexture
  Texture3D whiteTexture3D
  Texture2D blackTexture
  Texture3D blackTexture3D
  Texture2D transparentTexture
  Texture3D transparentTexture3D
  Mesh fullscreenTriangle
  Material copyStdMaterial
  Material copyStdFromDoubleWideMaterial
  Material copyMaterial
  Material copyFromTexArrayMaterial
  PropertySheet copySheet
  PropertySheet copyFromTexArraySheet
  bool scriptableRenderPipelineActive
  bool supportsDeferredShading
  bool supportsDepthNormals
  bool isSinglePassStereoEnabled
  bool isVREnabled
  bool isAndroidOpenGL
  RenderTextureFormat defaultHDRRenderTextureFormat
  bool isLinearColorSpace
Методы:
  Texture2D get_whiteTexture()
  Texture3D get_whiteTexture3D()
  Texture2D get_blackTexture()
  Texture3D get_blackTexture3D()
  Texture2D get_transparentTexture()
  Texture3D get_transparentTexture3D()
  Texture2D GetLutStrip(int size)
  Mesh get_fullscreenTriangle()
  Material get_copyStdMaterial()
  Material get_copyStdFromDoubleWideMaterial()
  Material get_copyMaterial()
  Material get_copyFromTexArrayMaterial()
  PropertySheet get_copySheet()
  PropertySheet get_copyFromTexArraySheet()
  void SetRenderTargetWithLoadStoreAction(CommandBuffer cmd, RenderTargetIdentifier rt, RenderBufferLoadAction loadAction, RenderBufferStoreAction storeAction)
  void SetRenderTargetWithLoadStoreAction(CommandBuffer cmd, RenderTargetIdentifier color, RenderBufferLoadAction colorLoadAction, RenderBufferStoreAction colorStoreAction, RenderTargetIdentifier depth, RenderBufferLoadAction depthLoadAction, RenderBufferStoreAction depthStoreAction)
  void BlitFullscreenTriangle(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, bool clear, Nullable`1<Rect> viewport)
  void BlitFullscreenTriangle(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, PropertySheet propertySheet, int pass, RenderBufferLoadAction loadAction, Nullable`1<Rect> viewport)
  void BlitFullscreenTriangle(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, PropertySheet propertySheet, int pass, bool clear, Nullable`1<Rect> viewport)
  void BlitFullscreenTriangleFromDoubleWide(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material material, int pass, int eye)
  void BlitFullscreenTriangleToDoubleWide(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, PropertySheet propertySheet, int pass, int eye)
  void BlitFullscreenTriangleFromTexArray(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, PropertySheet propertySheet, int pass, bool clear, int depthSlice)
  void BlitFullscreenTriangleToTexArray(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, PropertySheet propertySheet, int pass, bool clear, int depthSlice)
  void BlitFullscreenTriangle(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, RenderTargetIdentifier depth, PropertySheet propertySheet, int pass, bool clear, Nullable`1<Rect> viewport)
  void BlitFullscreenTriangle(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier[] destinations, RenderTargetIdentifier depth, PropertySheet propertySheet, int pass, bool clear, Nullable`1<Rect> viewport)
  void BuiltinBlit(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination)
  void BuiltinBlit(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, Material mat, int pass)
  void CopyTexture(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination)
  bool get_scriptableRenderPipelineActive()
  bool get_supportsDeferredShading()
  bool get_supportsDepthNormals()
  bool get_isSinglePassStereoEnabled()
  bool get_isVREnabled()
  bool get_isAndroidOpenGL()
  RenderTextureFormat get_defaultHDRRenderTextureFormat()
  bool isFloatingPointFormat(RenderTextureFormat format)
  void Destroy(Object obj)
  bool get_isLinearColorSpace()
  bool IsResolvedDepthAvailable(Camera camera)
  void DestroyProfile(PostProcessProfile profile, bool destroyEffects)
  void DestroyVolume(PostProcessVolume volume, bool destroyProfile, bool destroyGameObject)
  bool IsPostProcessingActive(PostProcessLayer layer)
  bool IsTemporalAntialiasingActive(PostProcessLayer layer)
  IEnumerable`1<T> GetAllSceneObjects()
  void CreateIfNull(T& obj)
  float Exp2(float x)
  Matrix4x4 GetJitteredPerspectiveProjectionMatrix(Camera camera, Vector2 offset)
  Matrix4x4 GetJitteredOrthographicProjectionMatrix(Camera camera, Vector2 offset)
  Matrix4x4 GenerateJitteredProjectionMatrixFromOriginal(PostProcessRenderContext context, Matrix4x4 origProj, Vector2 jitter)
  IEnumerable`1<Type> GetAllAssemblyTypes()
  T GetAttribute(Type type)
  Attribute[] GetMemberAttributes(Expression`1<Func`2<TType, TValue>> expr)
  string GetFieldPath(Expression`1<Func`2<TType, TValue>> expr)
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.ShaderIDs
Наследуется от: object
Поля:
  int MainTex
  int Jitter
  int Sharpness
  int FinalBlendParameters
  int HistoryTex
  int SMAA_Flip
  int SMAA_Flop
  int AOParams
  int AOColor
  int OcclusionTexture1
  int OcclusionTexture2
  int SAOcclusionTexture
  int MSVOcclusionTexture
  int DepthCopy
  int LinearDepth
  int LowDepth1
  int LowDepth2
  int LowDepth3
  int LowDepth4
  int TiledDepth1
  int TiledDepth2
  int TiledDepth3
  int TiledDepth4
  int Occlusion1
  int Occlusion2
  int Occlusion3
  int Occlusion4
  int Combined1
  int Combined2
  int Combined3
  int SSRResolveTemp
  int Noise
  int Test
  int Resolve
  int History
  int ViewMatrix
  int InverseViewMatrix
  int InverseProjectionMatrix
  int ScreenSpaceProjectionMatrix
  int Params2
  int FogColor
  int FogParams
  int VelocityScale
  int MaxBlurRadius
  int RcpMaxBlurRadius
  int VelocityTex
  int Tile2RT
  int Tile4RT
  int Tile8RT
  int TileMaxOffs
  int TileMaxLoop
  int TileVRT
  int NeighborMaxTex
  int LoopCount
  int DepthOfFieldTemp
  int DepthOfFieldTex
  int Distance
  int LensCoeff
  int MaxCoC
  int RcpMaxCoC
  int RcpAspect
  int CoCTex
  int TaaParams
  int AutoExposureTex
  int HistogramBuffer
  int Params
  int ScaleOffsetRes
  int BloomTex
  int SampleScale
  int Threshold
  int ColorIntensity
  int Bloom_DirtTex
  int Bloom_Settings
  int Bloom_Color
  int Bloom_DirtTileOffset
  int ChromaticAberration_Amount
  int ChromaticAberration_SpectralLut
  int Distortion_CenterScale
  int Distortion_Amount
  int Lut2D
  int Lut3D
  int Lut3D_Params
  int Lut2D_Params
  int UserLut2D_Params
  int PostExposure
  int ColorBalance
  int ColorFilter
  int HueSatCon
  int Brightness
  int ChannelMixerRed
  int ChannelMixerGreen
  int ChannelMixerBlue
  int Lift
  int InvGamma
  int Gain
  int Curves
  int CustomToneCurve
  int ToeSegmentA
  int ToeSegmentB
  int MidSegmentA
  int MidSegmentB
  int ShoSegmentA
  int ShoSegmentB
  int MaskMode
  int MaskIntensity
  int Vignette_Color
  int Vignette_Center
  int Vignette_Settings
  int Vignette_Mask
  int Vignette_Opacity
  int Vignette_Mode
  int Grain_Params1
  int Grain_Params2
  int GrainTex
  int Phase
  int GrainNoiseParameters
  int LumaInAlpha
  int DitheringTex
  int Dithering_Coords
  int From
  int To
  int Interp
  int TargetColor
  int HalfResFinalCopy
  int WaveformSource
  int WaveformBuffer
  int VectorscopeBuffer
  int RenderViewportScaleFactor
  int UVTransform
  int DepthSlice
  int UVScaleOffset
  int PosScaleOffset
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.Spline
Наследуется от: object
Поля:
  int k_Precision
  float k_Step
  AnimationCurve curve
  bool m_Loop
  float m_ZeroValue
  float m_Range
  AnimationCurve m_InternalLoopingCurve
  int frameCount
  Single[] cachedData
Свойства:
Методы:
  void .ctor(AnimationCurve curve, float zeroValue, bool loop, Vector2 bounds)
  void Cache(int frame)
  float Evaluate(float t, int length)
  float Evaluate(float t)
  int GetHashCode()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TargetPool
Наследуется от: object
Поля:
  List`1<int> m_Pool
  int m_Current
Свойства:
Методы:
  void .ctor()
  int Get()
  int Get(int i)
  void Reset()
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TextureFormatUtilities
Наследуется от: object
Поля:
  Dictionary`2<int, RenderTextureFormat> s_FormatAliasMap
  Dictionary`2<int, bool> s_SupportedRenderTextureFormats
  Dictionary`2<int, bool> s_SupportedTextureFormats
Свойства:
Методы:
  void .cctor()
  bool IsObsolete(object value)
  RenderTextureFormat GetUncompressedRenderTextureFormat(Texture texture)
  bool IsSupported(RenderTextureFormat format)
  bool IsSupported(TextureFormat format)
--------------------------------------------------
Класс: UnityEngine.Rendering.PostProcessing.TextureLerper
Наследуется от: object
Поля:
  TextureLerper m_Instance
  CommandBuffer m_Command
  PropertySheetFactory m_PropertySheets
  PostProcessResources m_Resources
  List`1<RenderTexture> m_Recycled
  List`1<RenderTexture> m_Actives
Свойства:
  TextureLerper instance
Методы:
  TextureLerper get_instance()
  void .ctor()
  void BeginFrame(PostProcessRenderContext context)
  void EndFrame()
  RenderTexture Get(RenderTextureFormat format, int w, int h, int d, bool enableRandomWrite, bool force3D)
  Texture Lerp(Texture from, Texture to, float t)
  Texture Lerp(Texture from, Color to, float t)
  void Clear()
--------------------------------------------------
Класс: ConVar.Admin
Наследуется от: ConsoleSystem
Поля:
  bool allowAdminUI
Свойства:
Методы:
  void status(Arg arg)
  void stats(Arg arg)
  void upgrade_radius(Arg arg)
  void skin_radius(Arg arg)
  void SkinRadiusInternal(Arg arg, bool changeAnyGrade)
  void killplayer(Arg arg)
  void injureplayer(Arg arg)
  void recoverplayer(Arg arg)
  void kick(Arg arg)
  void kickall(Arg arg)
  void ban(Arg arg)
  void moderatorid(Arg arg)
  void ownerid(Arg arg)
  void removemoderator(Arg arg)
  void removeowner(Arg arg)
  void banid(Arg arg)
  bool TryGetBanExpiry(Arg arg, int n, Int64& expiry, String& durationSuffix)
  void unban(Arg arg)
  void skipqueue(Arg arg)
  void skipqueueid(Arg arg)
  void removeskipqueue(Arg arg)
  void players(Arg arg)
  void say(Arg arg)
  void users(Arg arg)
  void sleepingusers(Arg arg)
  void sleepingusersinrange(Arg arg)
  void usersinrange(Arg arg)
  void usersinrangeofplayer(Arg arg)
  void banlist(Arg arg)
  void banlistex(Arg arg)
  void listid(Arg arg)
  void mute(Arg arg)
  void unmute(Arg arg)
  void mutelist(Arg arg)
  void clientperf(Arg arg)
  void clientperf_frametime(Arg arg)
  void carstats(Arg arg)
  string teaminfo(Arg arg)
  void authradius(Arg arg)
  void deauthradius(Arg arg)
  void SetAuthInRadius(BasePlayer player, float radius, bool auth)
  bool SetUserAuthorized(BaseEntity entity, ulong userId, bool state)
  void entid(Arg arg)
  string AuthList(BaseEntity ent)
  string CodeLockAuthList(CodeLock codeLock)
  string CodeLockAuthList(BaseVehicleModule vehicleModule)
  string GetPlayerName(ulong steamId)
  string ChangeGrade(BaseEntity entity, int increaseBy, int decreaseBy, Enum targetGrade, float radius)
  bool RunInRadius(float radius, BaseEntity initial, Action`1<T> callback, Func`2<T, bool> filter)
  PlayerInfo[] playerlist()
  User[] Bans()
  ServerInfoOutput ServerInfo()
  BuildInfo BuildInfo()
  void AdminUI_FullRefresh(Arg arg)
  void AdminUI_RequestPlayerList(Arg arg)
  void AdminUI_RequestServerInfo(Arg arg)
  void AdminUI_RequestServerConvars(Arg arg)
  void AdminUI_RequestUGCList(Arg arg)
  void AdminUI_RequestUGCContent(Arg arg)
  void AdminUI_DeleteUGCContent(Arg arg)
  void AdminUI_RequestFireworkPattern(Arg arg)
  void clearugcentity(Arg arg)
  void clearugcentitiesinrange(Arg arg)
  void getugcinfo(Arg arg)
  void authcount(Arg arg)
  void entcount(Arg arg)
  void FindEntityAssociationsForPlayer(BasePlayer ply, bool useOwnerId, bool useAuth, string filter, List`1<EntityAssociation> results)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.AI
Наследуется от: ConsoleSystem
Поля:
  bool allowdesigning
  bool think
  bool navthink
  bool ignoreplayers
  bool groups
  bool spliceupdates
  bool setdestinationsamplenavmesh
  bool usecalculatepath
  bool usesetdestinationfallback
  bool npcswimming
  bool accuratevisiondistance
  bool move
  bool usegrid
  bool sleepwake
  float sensetime
  float frametime
  int ocean_patrol_path_iterations
  bool npc_enable
  int npc_max_population_military_tunnels
  int npc_spawn_per_tick_max_military_tunnels
  int npc_spawn_per_tick_min_military_tunnels
  float npc_respawn_delay_max_military_tunnels
  float npc_respawn_delay_min_military_tunnels
  float npc_valid_aim_cone
  float npc_valid_mounted_aim_cone
  float npc_cover_compromised_cooldown
  bool npc_cover_use_path_distance
  float npc_cover_path_vs_straight_dist_max_diff
  float npc_door_trigger_size
  float npc_patrol_point_cooldown
  float npc_speed_walk
  float npc_speed_run
  float npc_speed_sprint
  float npc_speed_crouch_walk
  float npc_speed_crouch_run
  float npc_alertness_drain_rate
  float npc_alertness_zero_detection_mod
  float npc_junkpilespawn_chance
  float npc_junkpile_a_spawn_chance
  float npc_junkpile_g_spawn_chance
  float npc_junkpile_dist_aggro_gate
  int npc_max_junkpile_count
  bool npc_families_no_hurt
  bool npc_ignore_chairs
  float npc_sensory_system_tick_rate_multiplier
  float npc_cover_info_tick_rate_multiplier
  float npc_reasoning_system_tick_rate_multiplier
  bool animal_ignore_food
  float npc_gun_noise_silencer_modifier
  bool nav_carve_use_building_optimization
  int nav_carve_min_building_blocks_to_apply_optimization
  float nav_carve_min_base_size
  float nav_carve_size_multiplier
  float nav_carve_height
  bool npc_only_hurt_active_target_in_safezone
  bool npc_use_new_aim_system
  bool npc_use_thrown_weapons
  float npc_max_roam_multiplier
  float npc_alertness_to_aim_modifier
  float npc_deliberate_miss_to_hit_alignment_time
  float npc_deliberate_miss_offset_multiplier
  float npc_deliberate_hit_randomizer
  float npc_htn_player_base_damage_modifier
  bool npc_spawn_on_cargo_ship
  int npc_htn_player_frustration_threshold
  float tickrate
Свойства:
Методы:
  void sleepwakestats(Arg args)
  void wakesleepingai(Arg args)
  void brainstats(Arg args)
  void killscientists(Arg args)
  void killanimals(Arg args)
  void addignoreplayer(Arg args)
  void removeignoreplayer(Arg args)
  void clearignoredplayers(Arg args)
  void printignoredplayers(Arg args)
  float TickDelta()
  void selectNPCLookatServer(Arg args)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.AntiHack
Наследуется от: ConsoleSystem
Поля:
  float noclip_margin_dismount
  float noclip_backtracking
  bool reporting
  bool admincheat
  bool objectplacement
  bool modelstate
  bool forceposition
  int userlevel
  int enforcementlevel
  float maxdesync
  float maxdeltatime
  float tickhistorytime
  float tickhistoryforgiveness
  float relaxationrate
  float relaxationpause
  float maxviolation
  int terrain_protection
  int terrain_timeslice
  float terrain_padding
  float terrain_penalty
  bool terrain_kill
  bool terrain_check_geometry
  int noclip_protection
  bool noclip_reject
  float noclip_penalty
  float noclip_margin
  float noclip_stepsize
  int noclip_maxsteps
  int speedhack_protection
  bool speedhack_reject
  float speedhack_penalty
  float speedhack_forgiveness
  float speedhack_forgiveness_inertia
  float speedhack_slopespeed
  int flyhack_protection
  bool flyhack_reject
  float flyhack_penalty
  float flyhack_forgiveness_vertical
  float flyhack_forgiveness_vertical_inertia
  float flyhack_forgiveness_horizontal
  float flyhack_forgiveness_horizontal_inertia
  float flyhack_extrusion
  float flyhack_margin
  float flyhack_stepsize
  int flyhack_maxsteps
  int projectile_protection
  float projectile_penalty
  float projectile_forgiveness
  float projectile_serverframes
  float projectile_clientframes
  float projectile_trajectory
  float projectile_anglechange
  float projectile_velocitychange
  float projectile_desync
  float projectile_backtracking
  float projectile_losforgiveness
  int projectile_damagedepth
  int projectile_impactspawndepth
  bool projectile_terraincheck
  bool projectile_vehiclecheck
  bool projectile_positionoffset
  int melee_protection
  float melee_penalty
  float melee_forgiveness
  float melee_serverframes
  float melee_clientframes
  float melee_backtracking
  float melee_losforgiveness
  bool melee_terraincheck
  bool melee_vehiclecheck
  int eye_protection
  float eye_penalty
  float eye_forgiveness
  float eye_serverframes
  float eye_clientframes
  bool eye_terraincheck
  bool eye_vehiclecheck
  float eye_noclip_cutoff
  float eye_noclip_margin
  float eye_noclip_backtracking
  float eye_losradius
  float eye_history_penalty
  float eye_history_forgiveness
  float build_losradius
  float build_losradius_sleepingbag
  bool build_terraincheck
  bool build_vehiclecheck
  int build_inside_check
  int debuglevel
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.App
Наследуется от: ConsoleSystem
Поля:
  string listenip
  int port
  string publicip
  bool update
  bool notifications
  int queuelimit
  string serverid
  float alarmcooldown
  int maxconnections
  int maxconnectionsperip
  int maxmessagesize
Свойства:
Методы:
  void pair(Arg arg)
  void regeneratetoken(Arg arg)
  void info(Arg arg)
  void retry_initialize(Arg arg)
  void resetlimiter(Arg arg)
  void connections(Arg arg)
  void appban(Arg arg)
  void appunban(Arg arg)
  IPAddress GetListenIP()
  ValueTask`1<string> GetPublicIPAsync()
  string GetPublicIP()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Audio
Наследуется от: ConsoleSystem
Поля:
  float master
  float musicvolume
  float musicvolumemenu
  float game
  float voices
  float instruments
  float voiceProps
  float eventAudio
  bool ambience
  float framebudget
  float minupdatefraction
  bool advancedocclusion
  bool hqsoundfade
  bool debugVoiceLimiting
Свойства:
  int speakers
Методы:
  int get_speakers()
  void set_speakers(int value)
  void printSounds(Arg arg)
  void printEngineSounds(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Batching
Наследуется от: ConsoleSystem
Поля:
  bool renderers
  bool renderer_threading
  int renderer_capacity
  int renderer_vertices
  int renderer_submeshes
  int verbose
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Bradley
Наследуется от: ConsoleSystem
Поля:
  float respawnDelayMinutes
  float respawnDelayVariance
  bool enabled
Свойства:
Методы:
  void quickrespawn(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Chat
Наследуется от: ConsoleSystem
Поля:
  float localChatRange
  bool globalchat
  bool localchat
  float textVolumeBoost
  bool enabled
  int historysize
  CircularBuffer`1<ChatEntry> History
  bool serverlog
Свойства:
Методы:
  void Broadcast(string message, string username, string color, ulong userid)
  void say(Arg arg)
  void localsay(Arg arg)
  void teamsay(Arg arg)
  void cardgamesay(Arg arg)
  void clansay(Arg arg)
  void sayImpl(ChatChannel targetChannel, Arg arg)
  string GetNameColor(ulong userId, BasePlayer player)
  ValueTask`1<bool> sayAs(ChatChannel targetChannel, ulong userId, string username, string message, BasePlayer player)
  IEnumerable`1<ChatEntry> tail(Arg arg)
  IEnumerable`1<ChatEntry> search(Arg arg)
  void Record(ChatEntry ce)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Clan
Наследуется от: ConsoleSystem
Поля:
  bool enabled
  int maxMemberCount
Свойства:
Методы:
  void Info(Arg arg)
  ValueTask`1<IClan> GetPlayerClan(BasePlayer player)
  ValueTask`1<IClan> GetClanByID(long clanId, BasePlayer player)
  void .ctor()
  void .cctor()
  void <Info>g__SendClanInfoConsole|2_1(long id)
  string <Info>g__FormatClan|2_2(IClan clan)
--------------------------------------------------
Класс: ConVar.Client
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Console
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  IEnumerable`1<Entry> tail(Arg arg)
  IEnumerable`1<Entry> search(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Construct
Наследуется от: ConsoleSystem
Поля:
  float frameminutes
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Craft
Наследуется от: ConsoleSystem
Поля:
  bool instant
Свойства:
Методы:
  void add(Arg args)
  void canceltask(Arg args)
  void cancel(Arg args)
  void fasttracktask(Arg args)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Culling
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Data
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void export(Arg args)
  void .ctor()
--------------------------------------------------
Класс: ConVar.DDraw
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Debugging
Наследуется от: ConsoleSystem
Поля:
  bool checktriggers
  bool checkparentingtriggers
  bool DebugDismounts
  bool disablecondition
  bool callbacks
Свойства:
  bool log
Методы:
  void renderinfo(Arg arg)
  void set_log(bool value)
  bool get_log()
  void enable_player_movement(Arg arg)
  void stall(Arg arg)
  void repair_inventory(Arg args)
  void spawnParachuteTester(Arg arg)
  void deleteEntitiesByShortname(Arg arg)
  void flushgroup(Arg arg)
  void breakheld(Arg arg)
  void puzzlereset(Arg arg)
  void puzzleprefabrespawn(Arg arg)
  void breakitem(Arg arg)
  void refillvitals(Arg arg)
  void heal(Arg arg)
  void hurt(Arg arg)
  void eat(Arg arg)
  void drink(Arg arg)
  void sethealth(Arg arg)
  void setdamage(Arg arg)
  void setfood(Arg arg)
  void setwater(Arg arg)
  void setradiation(Arg arg)
  void AdjustHealth(BasePlayer player, float amount, string bone)
  void AdjustCalories(BasePlayer player, float amount, float time)
  void AdjustHydration(BasePlayer player, float amount, float time)
  void AdjustRadiation(BasePlayer player, float amount, float time)
  void setattribute(Arg arg, Type type)
  BasePlayer GetUsePlayer(Arg arg, int playerArgument)
  void ResetSleepingBagTimers(Arg arg)
  void bench_io(Arg arg)
  void .ctor()
  void .cctor()
  void <bench_io>g__Connect|35_0(IOEntity InputIOEnt, IOEntity OutputIOEnt)
--------------------------------------------------
Класс: ConVar.Decay
Наследуется от: ConsoleSystem
Поля:
  float outside_test_range
  float tick
  float scale
  bool debug
  bool upkeep
  float upkeep_period_minutes
  float upkeep_grief_protection
  float upkeep_heal_scale
  float upkeep_inside_decay_scale
  float delay_override
  float delay_twig
  float delay_wood
  float delay_stone
  float delay_metal
  float delay_toptier
  float duration_override
  float duration_twig
  float duration_wood
  float duration_stone
  float duration_metal
  float duration_toptier
  int bracket_0_blockcount
  float bracket_0_costfraction
  int bracket_1_blockcount
  float bracket_1_costfraction
  int bracket_2_blockcount
  float bracket_2_costfraction
  int bracket_3_blockcount
  float bracket_3_costfraction
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Decor
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Demo
Наследуется от: ConsoleSystem
Поля:
  UInt32 Version
  float splitseconds
  float splitmegabytes
  string recordlist
  int _recordListModeValue
Свойства:
  int recordlistmode
Методы:
  int get_recordlistmode()
  void set_recordlistmode(int value)
  string record(Arg arg)
  string stop(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Editor
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Effects
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Entity
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  TextTable GetEntityTable(Func`2<EntityInfo, bool> filter)
  void find_entity(Arg args)
  void find_id(Arg args)
  void find_group(Arg args)
  void find_parent(Arg args)
  void find_status(Arg args)
  void find_radius(Arg args)
  void find_self(Arg args)
  void debug_toggle(Arg args)
  void nudge(Arg args)
  EntitySpawnRequest GetSpawnEntityFromName(string name)
  string svspawn(string name, Vector3 pos, Vector3 dir)
  string svspawnitem(string name, Vector3 pos)
  string svspawngrid(string name, int width, int height, int spacing)
  void spawnlootfrom(Arg args)
  int DeleteBy(ulong id)
  int DeleteBy(Arg arg)
  int DeleteBy(List`1<ulong> ids)
  void DeleteByTextBlock(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Env
Наследуется от: ConsoleSystem
Поля:
Свойства:
  bool progresstime
  float time
  int day
  int month
  int year
  float oceanlevel
Методы:
  void set_progresstime(bool value)
  bool get_progresstime()
  void set_time(float value)
  float get_time()
  void set_day(int value)
  int get_day()
  void set_month(int value)
  int get_month()
  void set_year(int value)
  int get_year()
  void addtime(Arg arg)
  float get_oceanlevel()
  void set_oceanlevel(float value)
  void .ctor()
--------------------------------------------------
Класс: ConVar.FileConVar
Наследуется от: ConsoleSystem
Поля:
Свойства:
  bool debug
  bool time
Методы:
  bool get_debug()
  void set_debug(bool value)
  bool get_time()
  void set_time(bool value)
  void .ctor()
--------------------------------------------------
Класс: ConVar.FPS
Наследуется от: ConsoleSystem
Поля:
  int _limit
  int m_graph
Свойства:
  int limit
  int graph
Методы:
  int get_limit()
  void set_limit(int value)
  int get_graph()
  void set_graph(int value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.gamemode
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void setteam(Arg arg)
  void set(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.GC
Наследуется от: ConsoleSystem
Поля:
  bool buffer_enabled
  int debuglevel
  int m_buffer
Свойства:
  int buffer
  bool incremental_enabled
  int incremental_milliseconds
  bool enabled
Методы:
  int get_buffer()
  void set_buffer(int value)
  bool get_incremental_enabled()
  void set_incremental_enabled(bool value)
  int get_incremental_milliseconds()
  void set_incremental_milliseconds(int value)
  bool get_enabled()
  void set_enabled(bool value)
  void collect()
  void unload()
  void alloc(Arg args)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Global
Наследуется от: ConsoleSystem
Поля:
  int _developer
  bool skipAssetWarmup_crashes
  int maxthreads
  int DefaultWarmupConcurrency
  int DefaultPreloadConcurrency
  int warmupConcurrency
  int preloadConcurrency
  bool forceUnloadBundles
  bool DefaultAsyncWarmupEnabled
  bool asyncWarmup
  int asyncLoadingPreset
  int perf
  bool god
  bool cinematicGingerbreadCorpses
  UInt32 _gingerbreadMaterialID
  float SprayOutOfAuthMultiplier
  float SprayDuration
  int MaxSpraysPerPlayer
  bool disableBagDropping
  bool blockEmojiAnimations
  bool blockEmoji
  bool blockServerEmoji
  bool showEmojiErrors
Свойства:
  int developer
Методы:
  void set_developer(int value)
  int get_developer()
  void ApplyAsyncLoadingPreset()
  void restart(Arg args)
  void quit(Arg args)
  void report(Arg args)
  void objects(Arg args)
  void textures(Arg args)
  void colliders(Arg args)
  void error(Arg args)
  void queue(Arg args)
  void setinfo(Arg args)
  void sleep(Arg args)
  void kill(Arg args)
  void respawn(Arg args)
  void injure(Arg args)
  void InjurePlayer(BasePlayer ply)
  void recover(Arg args)
  void RecoverPlayer(BasePlayer ply)
  void spectate(Arg args)
  void spectateid(Arg args)
  void respawn_sleepingbag(Arg args)
  void respawn_sleepingbag_remove(Arg args)
  void status_sv(Arg args)
  void status_cl(Arg args)
  void teleport(Arg args)
  void teleport2me(Arg args)
  void teleporteveryone2me(Arg args)
  void teleportany(Arg args)
  void teleportpos(Arg args)
  void teleportlos(Arg args)
  void teleport2owneditem(Arg arg)
  void teleport2autheditem(Arg arg)
  void teleport2marker(Arg arg)
  void TeleportToMarker(MapNote marker, BasePlayer player)
  void teleport2death(Arg arg)
  void free(Arg args)
  void version(Arg arg)
  void sysinfo(Arg arg)
  void sysuid(Arg arg)
  void breakitem(Arg args)
  void breakclothing(Arg args)
  void subscriptions(Arg arg)
  UInt32 GingerbreadMaterialID()
  void ClearAllSprays()
  void ClearAllSpraysByPlayer(Arg arg)
  void ClearSpraysInRadius(Arg arg)
  int ClearSpraysInRadius(Vector3 position, float radius)
  void ClearSpraysAtPositionInRadius(Arg arg)
  void ClearDroppedItems()
  void .ctor()
  void .cctor()
  void <respawn_sleepingbag>g__NexusRespawn|33_0(BasePlayer player, NexusZoneDetails toZone, NetworkableId sleepingBag)
  void <respawn_sleepingbag_remove>g__NexusRemoveBag|34_0(BasePlayer player, string zoneKey, NetworkableId sleepingBag)
--------------------------------------------------
Класс: ConVar.Graphics
Наследуется от: ConsoleSystem
Поля:
  float MinShadowDistance
  float MaxShadowDistance2Split
  float MaxShadowDistance4Split
  float _shadowdistance
  int shadowmode
  int shadowlights
  int _shadowquality
  bool grassshadows
  bool contactshadows
  float drawdistance
  float _fov
  bool hud
  bool chat
  bool branding
  int compass
  bool dof
  float dof_aper
  float dof_blur
  int dof_mode
  float dof_focus_dist
  float dof_focus_time
  float dof_squeeze
  float dof_barrel
  bool dof_debug
  int dof_kernel_count
  BaseEntity dof_focus_target_entity
  bool vm_fov_scale
  bool vm_horizontal_flip
  float _uiscale
  int _anisotropic
  int _parallax
Свойства:
  int quality
  float shadowdistance
  int shadowcascades
  int shadowquality
  float fov
  float lodbias
  int shaderlod
  float uiscale
  int af
  int parallax
  bool itemskins
  bool itemskinunload
  float itemskintimeout
Методы:
  int get_quality()
  void set_quality(int value)
  float EnforceShadowDistanceBounds(float distance)
  float get_shadowdistance()
  void set_shadowdistance(float value)
  int get_shadowcascades()
  void set_shadowcascades(int value)
  int get_shadowquality()
  void set_shadowquality(int value)
  float get_fov()
  void set_fov(float value)
  float get_lodbias()
  void set_lodbias(float value)
  void dof_focus_target(Arg arg)
  void dof_nudge(Arg arg)
  int get_shaderlod()
  void set_shaderlod(int value)
  float get_uiscale()
  void set_uiscale(float value)
  int get_af()
  void set_af(int value)
  int get_parallax()
  void set_parallax(int value)
  bool get_itemskins()
  void set_itemskins(bool value)
  bool get_itemskinunload()
  void set_itemskinunload(bool value)
  float get_itemskintimeout()
  void set_itemskintimeout(float value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Grass
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Halloween
Наследуется от: ConsoleSystem
Поля:
  bool enabled
  float murdererpopulation
  float scarecrowpopulation
  bool scarecrows_throw_beancans
  float scarecrow_throw_beancan_global_delay
  float scarecrow_beancan_vs_player_dmg_modifier
  float scarecrow_body_dmg_modifier
  float scarecrow_chase_stopping_distance
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Harmony
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void Load(Arg args)
  void Unload(Arg args)
  void .ctor()
--------------------------------------------------
Класс: ConVar.PatrolHelicopter
Наследуется от: ConsoleSystem
Поля:
  string path
  float lifetimeMinutes
  int guns
  float bulletDamageScale
  float bulletAccuracy
Свойства:
Методы:
  void drop(Arg arg)
  void calltome(Arg arg)
  void call(Arg arg)
  void strafe(Arg arg)
  void testpuzzle(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Hierarchy
Наследуется от: ConsoleSystem
Поля:
  GameObject currentDir
Свойства:
Методы:
  Transform[] GetCurrent()
  void ls(Arg args)
  void cd(Arg args)
  void del(Arg args)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Input
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.instruments
Наследуется от: ConsoleSystem
Поля:
  string InstrumentsFolder
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Inventory
Наследуется от: ConsoleSystem
Поля:
  string LoadoutDirectory
  bool disableAttireLimitations
Свойства:
Методы:
  void lighttoggle(Arg arg)
  void endloot(Arg arg)
  void give(Arg arg)
  void resetbp(Arg arg)
  void unlockall(Arg arg)
  void giveall(Arg arg)
  void giveto(Arg arg)
  void giveid(Arg arg)
  void givearm(Arg arg)
  void copyTo(Arg arg)
  void copyTo(BasePlayer from, BasePlayer toply)
  void deployLoadoutInRange(Arg arg)
  void deployLoadout(Arg arg)
  void clearInventory(Arg arg)
  string GetLoadoutPath(string loadoutName)
  void saveloadout(Arg arg)
  bool LoadLoadout(string name, SavedLoadout& so)
  void listloadouts(Arg arg)
  void defs(Arg arg)
  void reloaddefs(Arg arg)
  void equipslottarget(Arg arg)
  void equipslot(Arg arg)
  void EquipItemInSlot(BasePlayer player, int slot)
  int GetSlotIndex(BasePlayer player)
  void giveBp(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Layer
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Legs
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Lerp
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Manifest
Наследуется от: object
Поля:
Свойства:
Методы:
  object PrintManifest()
  object PrintManifestRaw()
  void .ctor()
--------------------------------------------------
Класс: ConVar.MemSnap
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  string NeedProfileFolder()
  void managed(Arg arg)
  void native(Arg arg)
  void full(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Mesh
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Music
Наследуется от: ConsoleSystem
Поля:
  bool enabled
  int songGapMin
  int songGapMax
Свойства:
Методы:
  void info(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Net
Наследуется от: ConsoleSystem
Поля:
  bool visdebug
  bool debug
  int visibilityRadiusFarOverride
  int visibilityRadiusNearOverride
  bool globalNetworkedBases
  bool global_network_debug
  bool limit_global_update_broadcast
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Netgraph
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Nexus
Наследуется от: ConsoleSystem
Поля:
  Phrase RedirectPhrase
  string DefaultEndpoint
  string endpoint
  bool logging
  string secretKey
  string zoneController
  int messageLockDuration
  int transferFlushTime
  float islandSpawnDistance
  float defaultZoneContactRadius
  float timeOffset
  float rpcTimeoutMultiplier
  float loadingTimeout
  float pingInterval
  float protectionDuration
  float clanClatBatchDuration
  float playerManifestInterval
  float mapImageScale
Свойства:
Методы:
  void transfer(Arg arg)
  void refreshislands(Arg arg)
  void ping(Arg arg)
  void broadcast_ping(Arg arg)
  void playeronline(Arg arg)
  void uploadmap(Arg arg)
  void .ctor()
  void .cctor()
  void <ping>g__SendPing|20_0(BasePlayer requester, string to)
  void <broadcast_ping>g__SendBroadcastPing|21_0(BasePlayer requester)
--------------------------------------------------
Класс: ConVar.Note
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Particle
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Physics
Наследуется от: ConsoleSystem
Поля:
  float baseGravity
  bool sendeffects
  bool groundwatchdebug
  int groundwatchfails
  float groundwatchdelay
  bool batchsynctransforms
Свойства:
  float bouncethreshold
  float sleepthreshold
  int solveriterationcount
  float gravity
  float steps
  float minsteps
  bool autosynctransforms
Методы:
  float get_bouncethreshold()
  void set_bouncethreshold(float value)
  float get_sleepthreshold()
  void set_sleepthreshold(float value)
  int get_solveriterationcount()
  void set_solveriterationcount(int value)
  float get_gravity()
  void set_gravity(float value)
  float get_steps()
  void set_steps(float value)
  float get_minsteps()
  void set_minsteps(float value)
  bool get_autosynctransforms()
  void set_autosynctransforms(bool value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Player
Наследуется от: ConsoleSystem
Поля:
  int tickrate_cl
  int tickrate_sv
  bool InfiniteAmmo
  bool woundforever
Свойства:
Методы:
  void cinematic_play(Arg arg)
  void cinematic_stop(Arg arg)
  void cinematic_gesture(Arg arg)
  void copyrotation(Arg arg)
  void abandonmission(Arg arg)
  void mount(Arg arg)
  void gotosleep(Arg arg)
  void dismount(Arg arg)
  void swapseat(Arg arg)
  void wakeup(Arg arg)
  void wakeupall(Arg arg)
  void printstats(Arg arg)
  void printpresence(Arg arg)
  void resetstate(Arg args)
  void fillwater(Arg arg)
  void reloadweapons(Arg arg)
  void createskull(Arg arg)
  string createTrophy(Arg arg)
  void gesture_radius(Arg arg)
  void stopgesture_radius(Arg arg)
  void markhostile(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.PlayerCull
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Pool
Наследуется от: ConsoleSystem
Поля:
  int mode
  bool prewarm
  bool enabled
  bool debug
Свойства:
Методы:
  void print_memory(Arg arg)
  void print_arraypool(Arg arg)
  void print_prefabs(Arg arg)
  void print_assets(Arg arg)
  void clear_memory(Arg arg)
  void clear_prefabs(Arg arg)
  void clear_assets(Arg arg)
  void export_prefabs(Arg arg)
  void fill_prefabs(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Profile
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void NeedProfileFolder()
  void start(Arg arg)
  void stop(Arg arg)
  void flush_analytics(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Reflection
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Render
Наследуется от: ConsoleSystem
Поля:
  bool use_normal_rendering
  int instanced_rendering
  bool instanced_toggle_all
  bool instanced_toggle_cliffs
  bool instanced_toggle_buildings
  bool instanced_toggle_other
  bool multidraw
  int upload_multidraw_meshes_mode
  bool render_shadows
  bool computebuffer_setdata_immediate
  int max_renderers
  float instancing_render_distance
Свойства:
  bool IsInstancingDisabled
  bool IsInstancingEnabled
  bool IsMultidrawEnabled
Методы:
  bool get_IsInstancingDisabled()
  bool get_IsInstancingEnabled()
  bool get_IsMultidrawEnabled()
  void tree_entities(Arg arg)
  void print_global_entities(Arg arg)
  void global_entities_client(StringBuilder builder)
  void instanced_memory_usage(Arg arg)
  void test_instancing_culling(Arg arg)
  void instanced_renderers_debug(Arg arg)
  void print_instanced_grid(Arg arg)
  void expand_instancing(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Sentry
Наследуется от: ConsoleSystem
Поля:
  bool targetall
  float hostileduration
  float interferenceradius
  float maxinterference
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Server
Наследуется от: ConsoleSystem
Поля:
  string ip
  int port
  int queryport
  int maxplayers
  string hostname
  string identity
  string level
  string levelurl
  bool leveltransfer
  int seed
  int salt
  int worldsize
  int saveinterval
  bool secure
  int encryption
  string anticheatid
  string anticheatkey
  bool anticheattoken
  int tickrate
  int entityrate
  float schematime
  float cycletime
  bool official
  bool stats
  bool stability
  bool radiation
  float itemdespawn
  float itemdespawn_container_scale
  float itemdespawn_quick
  float corpsedespawn
  float debrisdespawn
  bool pve
  bool cinematic
  string description
  string url
  string branch
  int queriesPerSecond
  int ipQueriesPerMin
  bool statBackup
  string headerimage
  string logoimage
  int saveBackupCount
  string motd
  float meleedamage
  float arrowdamage
  float bulletdamage
  float bleedingdamage
  float funWaterDamageThreshold
  float funWaterWetnessGain
  float meleearmor
  float arrowarmor
  float bulletarmor
  float bleedingarmor
  int updatebatch
  int updatebatchspawn
  int entitybatchsize
  float entitybatchtime
  float composterUpdateInterval
  float planttick
  float planttickscale
  bool useMinimumPlantCondition
  float nonPlanterDeathChancePerTick
  float ceilingLightGrowableRange
  float artificialTemperatureGrowableRange
  float ceilingLightHeightOffset
  float sprinklerRadius
  float sprinklerEyeHeightOffset
  float optimalPlanterQualitySaturation
  float metabolismtick
  float modifierTickRate
  float rewounddelay
  bool woundingenabled
  bool crawlingenabled
  float woundedrecoverchance
  float incapacitatedrecoverchance
  float woundedmaxfoodandwaterbonus
  int crawlingminimumhealth
  int crawlingmaximumhealth
  bool playerserverfall
  bool plantlightdetection
  float respawnresetrange
  int max_sleeping_bags
  bool bag_quota_item_amount
  int maxunack
  bool netcache
  bool corpses
  bool events
  bool dropitems
  int netcachesize
  int savecachesize
  int combatlogsize
  int combatlogdelay
  int authtimeout
  int playertimeout
  int idlekick
  int idlekickmode
  int idlekickadmins
  string gamemode
  string tags
  bool censorplayerlist
  string bansServerEndpoint
  int bansServerFailureMode
  int bansServerTimeout
  string reportsServerEndpoint
  string reportsServerEndpointKey
  bool printReportsToConsole
  bool respawnAtDeathPosition
  bool respawnWithLoadout
  bool waterContainersLeaveWaterBehind
  float conveyorMoveFrequency
  float industrialCrafterFrequency
  int defaultBlueprintResearchCost
  bool enforcePipeChecksOnBuildingBlockChanges
  int maxItemStacksMovedPerTickIndustrial
  float industrialFrameBudgetMs
  int maximumMapMarkers
  int maximumPings
  float pingDuration
  bool canEquipBackpacksInAir
  float parachuteRepackTime
  bool emojiOwnershipCheck
  bool showHolsteredItems
  int maxpacketspersecond_world
  int maxpacketspersecond_rpc
  int maxpacketspersecond_rpc_signal
  int maxpacketspersecond_command
  int maxpacketsize_command
  int maxpacketsize_globaltrees
  int maxpacketsize_globalentities
  int maxpacketspersecond_tick
  int maxpacketspersecond_voice
  bool packetlog_enabled
  bool rpclog_enabled
Свойства:
  int anticheatlog
  int maxclientinfosize
  int maxconnectionsperip
  int maxreceivetime
  int maxmainthreadwait
  int maxreadthreadwait
  int maxwritethreadwait
  int maxdecryptthreadwait
  int maxreadqueuelength
  int maxwritequeuelength
  int maxdecryptqueuelength
  int maxreadqueuebytes
  int maxwritequeuebytes
  int maxdecryptqueuebytes
  int maxpacketspersecond
  string rootFolder
  string backupFolder
  string backupFolder1
  string backupFolder2
  string backupFolder3
  bool compression
  bool netlog
Методы:
  int get_anticheatlog()
  void set_anticheatlog(int value)
  float TickDelta()
  float TickTime(UInt32 tick)
  void setshowholstereditems(Arg arg)
  int get_maxclientinfosize()
  void set_maxclientinfosize(int value)
  int get_maxconnectionsperip()
  void set_maxconnectionsperip(int value)
  int get_maxreceivetime()
  void set_maxreceivetime(int value)
  int get_maxmainthreadwait()
  void set_maxmainthreadwait(int value)
  int get_maxreadthreadwait()
  void set_maxreadthreadwait(int value)
  int get_maxwritethreadwait()
  void set_maxwritethreadwait(int value)
  int get_maxdecryptthreadwait()
  void set_maxdecryptthreadwait(int value)
  int get_maxreadqueuelength()
  void set_maxreadqueuelength(int value)
  int get_maxwritequeuelength()
  void set_maxwritequeuelength(int value)
  int get_maxdecryptqueuelength()
  void set_maxdecryptqueuelength(int value)
  int get_maxreadqueuebytes()
  void set_maxreadqueuebytes(int value)
  int get_maxwritequeuebytes()
  void set_maxwritequeuebytes(int value)
  int get_maxdecryptqueuebytes()
  void set_maxdecryptqueuebytes(int value)
  string printreadqueue(Arg arg)
  string printwritequeue(Arg arg)
  string printdecryptqueue(Arg arg)
  int get_maxpacketspersecond()
  void set_maxpacketspersecond(int value)
  string packetlog(Arg arg)
  string rpclog(Arg arg)
  void start(Arg arg)
  void stop(Arg arg)
  string get_rootFolder()
  string get_backupFolder()
  string get_backupFolder1()
  string get_backupFolder2()
  string get_backupFolder3()
  void backup()
  string GetServerFolder(string folder)
  void writecfg(Arg arg)
  void fps(Arg arg)
  void save(Arg arg)
  string readcfg(Arg arg)
  bool get_compression()
  void set_compression(bool value)
  bool get_netlog()
  void set_netlog(bool value)
  string netprotocol(Arg arg)
  void cheatreport(Arg arg)
  string combatlog(Arg arg)
  string combatlog_outgoing(Arg arg)
  string printpos(Arg arg)
  string printrot(Arg arg)
  string printeyes(Arg arg)
  void snapshot(Arg arg)
  void sendnetworkupdate(Arg arg)
  void playerlistpos(Arg arg)
  void listvendingmachines(Arg arg)
  void listtoolcupboards(Arg arg)
  void BroadcastPlayVideo(Arg arg)
  void ResetServerEmoji()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Spawn
Наследуется от: ConsoleSystem
Поля:
  float min_rate
  float max_rate
  float min_density
  float max_density
  float player_base
  float player_scale
  bool respawn_populations
  bool respawn_groups
  bool respawn_individuals
  float tick_populations
  float tick_individuals
Свойства:
Методы:
  void fill_populations(Arg args)
  void fill_groups(Arg args)
  void fill_individuals(Arg args)
  void report(Arg args)
  void scalars(Arg args)
  void cargoshipevent(Arg args)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.SSS
Наследуется от: ConsoleSystem
Поля:
  bool enabled
  int quality
  bool halfres
  float scale
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Stability
Наследуется от: ConsoleSystem
Поля:
  int verbose
  int strikes
  float collapse
  float accuracy
  float stabilityqueue
  float surroundingsqueue
Свойства:
Методы:
  void refresh_stability(Arg args)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Steam
Наследуется от: object
Поля:
  bool <server_allow_steam_nicknames>k__BackingField
Свойства:
  bool server_allow_steam_nicknames
Методы:
  bool get_server_allow_steam_nicknames()
  void set_server_allow_steam_nicknames(bool value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Supply
Наследуется от: ConsoleSystem
Поля:
  string path
Свойства:
Методы:
  void drop(Arg arg)
  void call(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.SystemCommands
Наследуется от: object
Поля:
Свойства:
Методы:
  void cpu_affinity(Arg arg)
  void cpu_priority(Arg arg)
--------------------------------------------------
Класс: ConVar.Terrain
Наследуется от: ConsoleSystem
Поля:
  float quality
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Texture
Наследуется от: ConsoleSystem
Поля:
  int streamingBudgetOverride
Свойства:
  bool streaming
Методы:
  bool get_streaming()
  void set_streaming(bool value)
  void stats(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.Time
Наследуется от: ConsoleSystem
Поля:
  bool pausewhileloading
Свойства:
  float fixeddelta
  float maxdelta
  float timescale
Методы:
  float get_fixeddelta()
  void set_fixeddelta(float value)
  float get_maxdelta()
  void set_maxdelta(float value)
  float get_timescale()
  void set_timescale(float value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Tree
Наследуется от: ConsoleSystem
Поля:
  bool global_broadcast
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.vehicle
Наследуется от: ConsoleSystem
Поля:
  float boat_corpse_seconds
  bool cinematictrains
  bool trainskeeprunning
  bool carwrecks
  bool vehiclesdroploot
Свойства:
Методы:
  void swapseats(Arg arg)
  void fixcars(Arg arg)
  void autohover(Arg arg)
  void stop_all_trains(Arg arg)
  void killcars(Arg args)
  void killminis(Arg args)
  void killscraphelis(Arg args)
  void killtrains(Arg args)
  void killboats(Arg args)
  void killdrones(Arg args)
  void boatdriftinfo(Arg args)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Vis
Наследуется от: ConsoleSystem
Поля:
  bool lerp
  bool damage
  bool attack
  bool protection
  bool weakspots
  bool triggers
  bool hitboxes
  bool lineofsight
  bool sense
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: ConVar.Voice
Наследуется от: ConsoleSystem
Поля:
  bool loopback
  float _voiceRangeBoostAmount
Свойства:
  float voiceRangeBoostAmount
Методы:
  float get_voiceRangeBoostAmount()
  void set_voiceRangeBoostAmount(float value)
  void ToggleVoiceRangeBoost(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Water
Наследуется от: ConsoleSystem
Поля:
  int quality
  int MaxQuality
  int MinQuality
  int reflections
  int MaxReflections
  int MinReflections
  bool scaled_time
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Weather
Наследуется от: ConsoleSystem
Поля:
  float wetness_rain
  float wetness_snow
  float ocean_time
Свойства:
  float clear_chance
  float dust_chance
  float fog_chance
  float overcast_chance
  float storm_chance
  float rain_chance
  float rain
  float wind
  float thunder
  float rainbow
  float fog
  float atmosphere_rayleigh
  float atmosphere_mie
  float atmosphere_brightness
  float atmosphere_contrast
  float atmosphere_directionality
  float cloud_size
  float cloud_opacity
  float cloud_coverage
  float cloud_sharpness
  float cloud_coloring
  float cloud_attenuation
  float cloud_saturation
  float cloud_scattering
  float cloud_brightness
  float ocean_scale
Методы:
  void load(Arg args)
  void reset(Arg args)
  void report(Arg args)
  float get_clear_chance()
  void set_clear_chance(float value)
  float get_dust_chance()
  void set_dust_chance(float value)
  float get_fog_chance()
  void set_fog_chance(float value)
  float get_overcast_chance()
  void set_overcast_chance(float value)
  float get_storm_chance()
  void set_storm_chance(float value)
  float get_rain_chance()
  void set_rain_chance(float value)
  float get_rain()
  void set_rain(float value)
  float get_wind()
  void set_wind(float value)
  float get_thunder()
  void set_thunder(float value)
  float get_rainbow()
  void set_rainbow(float value)
  float get_fog()
  void set_fog(float value)
  float get_atmosphere_rayleigh()
  void set_atmosphere_rayleigh(float value)
  float get_atmosphere_mie()
  void set_atmosphere_mie(float value)
  float get_atmosphere_brightness()
  void set_atmosphere_brightness(float value)
  float get_atmosphere_contrast()
  void set_atmosphere_contrast(float value)
  float get_atmosphere_directionality()
  void set_atmosphere_directionality(float value)
  float get_cloud_size()
  void set_cloud_size(float value)
  float get_cloud_opacity()
  void set_cloud_opacity(float value)
  float get_cloud_coverage()
  void set_cloud_coverage(float value)
  float get_cloud_sharpness()
  void set_cloud_sharpness(float value)
  float get_cloud_coloring()
  void set_cloud_coloring(float value)
  float get_cloud_attenuation()
  void set_cloud_attenuation(float value)
  float get_cloud_saturation()
  void set_cloud_saturation(float value)
  float get_cloud_scattering()
  void set_cloud_scattering(float value)
  float get_cloud_brightness()
  void set_cloud_brightness(float value)
  float get_ocean_scale()
  void set_ocean_scale(float value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.Workshop
Наследуется от: ConsoleSystem
Поля:
Свойства:
Методы:
  void print_approved_skins(Arg arg)
  void .ctor()
--------------------------------------------------
Класс: ConVar.World
Наследуется от: ConsoleSystem
Поля:
  bool cache
  bool streaming
  string configString
  string configFile
Свойства:
Методы:
  void monuments(Arg arg)
  void rendermap(Arg arg)
  void rendertunnels(Arg arg)
  void renderlabs(Arg arg)
  void RenderMapLayerToFile(Arg arg, string name, MapLayer layer)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: ConVar.XMas
Наследуется от: ConsoleSystem
Поля:
  string path
  bool enabled
  float spawnRange
  int spawnAttempts
  int giftsPerPlayer
Свойства:
Методы:
  void refill(Arg arg)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Facepunch.Output
Наследуется от: object
Поля:
  Action`3<string, string, LogType> OnMessage
  Action`3<string, string, LogType> OnPostMessage
  bool installed
  List`1<Entry> HistoryOutput
Свойства:
Методы:
  void add_OnMessage(Action`3<string, string, LogType> value)
  void remove_OnMessage(Action`3<string, string, LogType> value)
  void add_OnPostMessage(Action`3<string, string, LogType> value)
  void remove_OnPostMessage(Action`3<string, string, LogType> value)
  void Install()
  void LogHandler(string log, string stacktrace, LogType type)
  void .cctor()
--------------------------------------------------
Класс: Facepunch.RCon
Наследуется от: object
Поля:
  string Password
  int Port
  string Ip
  bool Web
  bool Print
  RConListener listener
  Listener listenerNew
  Queue`1<Command> Commands
  float lastRunTime
  List`1<BannedAddresses> bannedAddresses
  int responseIdentifier
  int responseConnection
  bool isInput
  int SERVERDATA_AUTH
  int SERVERDATA_EXECCOMMAND
  int SERVERDATA_AUTH_RESPONSE
  int SERVERDATA_RESPONSE_VALUE
  int SERVERDATA_CONSOLE_LOG
  int SERVERDATA_SWITCH_UTF8
Свойства:
Методы:
  void Initialize()
  void Shutdown()
  void Broadcast(LogType type, object obj)
  void Broadcast(LogType type, string message)
  void Update()
  void BanIP(IPAddress addr, float seconds)
  bool IsBanned(IPAddress addr)
  void OnCommand(Command cmd)
  void OnMessage(string message, string stacktrace, LogType type)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Facepunch.VirtualScroll
Наследуется от: MonoBehaviour
Поля:
  int ItemHeight
  int ItemSpacing
  RectOffset Padding
  GameObject DataSourceObject
  GameObject SourceObject
  ScrollRect ScrollRect
  RectTransform OverrideContentRoot
  IDataSource dataSource
  Dictionary`2<int, GameObject> ActivePool
  Stack`1<GameObject> InactivePool
Свойства:
  int BlockHeight
Методы:
  void Awake()
  void OnDestroy()
  void OnScrollChanged(Vector2 pos)
  void SetDataSource(IDataSource source, bool forceRebuild)
  int get_BlockHeight()
  void FullRebuild()
  void DataChanged()
  void Rebuild()
  void Update()
  void RecycleOutOfRange(int startVisible, float endVisible)
  void Recycle(int key)
  void BuildItem(int i)
  GameObject GetItem()
  void .ctor()
--------------------------------------------------
Класс: Facepunch.FPNativeList`1
Наследуется от: object
Поля:
  NativeArray`1<T> _array
  int _length
  int _capacity
Свойства:
  NativeArray`1<T> Array
  int Count
  int Capacity
  T Item
Методы:
  NativeArray`1<T> get_Array()
  int get_Count()
  int get_Capacity()
  T get_Item(int index)
  void set_Item(int index, T value)
  void Add(T item)
  void RemoveLast()
  void SetLength(int newLength)
  void Clear()
  void Resize(int count)
  void EnsureCapacity(int requiredCapacity)
  void EnterPool()
  void LeavePool()
  void .ctor()
--------------------------------------------------
Класс: Facepunch.UI.ESPCanvas
Наследуется от: SingletonComponent`1<ESPCanvas>
Поля:
  float RefreshRate
  ESPPlayerInfo Source
  float MaxDistance
  int NameplateCount
  float OverrideMaxDisplayDistance
  bool DisableOcclusionChecks
  bool ShowHealth
  bool ColourCodeTeams
Свойства:
  int MaxNameplates
Методы:
  int get_MaxNameplates()
  void set_MaxNameplates(int value)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Facepunch.UI.ESPPlayerInfo
Наследуется от: MonoBehaviour
Поля:
  Vector3 WorldOffset
  RustText Text
  TextMeshProUGUI[] TextElements
  RustIcon Loading
  GameObject ClanElement
  RustText ClanText
  CanvasGroup group
  Gradient gradientNormal
  Gradient gradientTeam
  Color TeamColor
  Color ClanColor
  Color AllyColor
  Color EnemyColor
  QueryVis visCheck
  BasePlayer <Entity>k__BackingField
Свойства:
  BasePlayer Entity
Методы:
  BasePlayer get_Entity()
  void set_Entity(BasePlayer value)
  void .ctor()
--------------------------------------------------
Класс: Facepunch.CardGames.BlackjackController
Наследуется от: CardGameController
Поля:
  List`1<PlayingCard> dealerCards
  float BLACKJACK_PAYOUT_RATIO
  float INSURANCE_PAYOUT_RATIO
  float DEALER_MOVE_TIME
  BlackjackInputOption <LastAction>k__BackingField
  ulong <LastActionTarget>k__BackingField
  int <LastActionValue>k__BackingField
  int NUM_DECKS
  StackOfCards cardStack
Свойства:
  int MinPlayers
  int MinBuyIn
  int MaxBuyIn
  int MinToPlay
  int EndRoundDelay
  int TimeBetweenRounds
  BlackjackInputOption LastAction
  ulong LastActionTarget
  int LastActionValue
  bool AllBetsPlaced
Методы:
  void .ctor(BaseCardGameEntity owner)
  int get_MinPlayers()
  int get_MinBuyIn()
  int get_MaxBuyIn()
  int get_MinToPlay()
  int get_EndRoundDelay()
  int get_TimeBetweenRounds()
  BlackjackInputOption get_LastAction()
  void set_LastAction(BlackjackInputOption value)
  ulong get_LastActionTarget()
  void set_LastActionTarget(ulong value)
  int get_LastActionValue()
  void set_LastActionValue(int value)
  bool get_AllBetsPlaced()
  int GetFirstPlayerRelIndex(bool startOfRound)
  List`1<PlayingCard> GetTableCards()
  void InputsToList(int availableInputs, List`1<BlackjackInputOption> result)
  bool WaitingForOtherPlayers(CardPlayerData pData)
  int GetCardsValue(List`1<PlayingCard> cards, CardsValueMode mode)
  int GetOptimalCardsValue(List`1<PlayingCard> cards)
  int GetCardValue(PlayingCard card, CardsValueMode mode)
  bool Has21(List`1<PlayingCard> cards)
  bool HasBlackjack(List`1<PlayingCard> cards)
  bool HasBusted(List`1<PlayingCard> cards)
  bool CanSplit(CardPlayerDataBlackjack pData)
  bool HasAnyAces(List`1<PlayingCard> cards)
  bool CanDoubleDown(CardPlayerDataBlackjack pData)
  bool CanTakeInsurance(CardPlayerDataBlackjack pData)
  bool HasSplit(CardPlayerDataBlackjack pData)
  CardPlayerData GetNewCardPlayerData(int mountIndex)
  bool TryGetCardPlayerDataBlackjack(int index, CardPlayerDataBlackjack& cpBlackjack)
  int ResultsToInt(BlackjackRoundResult mainResult, BlackjackRoundResult splitResult, int insurancePayout)
  void ResultsFromInt(int result, BlackjackRoundResult& mainResult, BlackjackRoundResult& splitResult, Int32& insurancePayout)
  void Save(CardGame syncData)
  void EditorMakeRandomMove(CardPlayerDataBlackjack pdBlackjack)
  int GetAvailableInputsForPlayer(CardPlayerData pData)
  void SubEndGameplay()
  void SubEndRound()
  int PayOut(CardPlayerData pData, int winnings)
  void HandlePlayerLeavingTable(CardPlayerData pData)
  void SubReceivedInputFromPlayer(CardPlayerData pData, int input, int value, bool countAsAction)
  void DoInRoundPlayerInput(CardPlayerDataBlackjack pdBlackjack, BlackjackInputOption& selectedMove, Int32& selectedMoveValue)
  void DoBettingPhasePlayerInput(CardPlayerDataBlackjack pdBlackjack, int value, bool countAsAction, BlackjackInputOption& selectedMove, Int32& selectedMoveValue)
  int TryMakeBet(CardPlayerDataBlackjack pdBlackjack, int maxAmount, BetType betType)
  void SubStartRound()
  void OnTurnTimeout(CardPlayerData pData)
  void StartNextCycle()
  bool ShouldEndCycle()
  void EndCycle()
  void DealerPlayInvoke()
  void DealInitialCards()
  void ClearLastAction()
  BlackjackRoundResult <SubEndRound>g__CheckResult|59_0(List`1<PlayingCard> cards, int betAmount, Int32& winnings, <>c__DisplayClass59_0& )
--------------------------------------------------
Класс: Facepunch.CardGames.CardGameController
Наследуется от: object
Поля:
  CardGameState <State>k__BackingField
  CardPlayerData[] <PlayerData>k__BackingField
  int IDLE_KICK_SECONDS
  BaseCardGameEntity <Owner>k__BackingField
  RoundResults <resultInfo>k__BackingField
  CardList localPlayerCards
  int activePlayerIndex
  int STD_RAISE_INCREMENTS
  bool isWaitingBetweenTurns
Свойства:
  CardGameState State
  bool HasGameInProgress
  bool HasRoundInProgressOrEnding
  bool HasActiveRound
  CardPlayerData[] PlayerData
  int MinPlayers
  int MinBuyIn
  int MaxBuyIn
  int MinToPlay
  float MaxTurnTime
  int EndRoundDelay
  int TimeBetweenRounds
  float TimeBetweenTurns
  BaseCardGameEntity Owner
  int ScrapItemID
  bool IsServer
  bool IsClient
  RoundResults resultInfo
Методы:
  CardGameState get_State()
  void set_State(CardGameState value)
  bool get_HasGameInProgress()
  bool get_HasRoundInProgressOrEnding()
  bool get_HasActiveRound()
  CardPlayerData[] get_PlayerData()
  void set_PlayerData(CardPlayerData[] value)
  int get_MinPlayers()
  int get_MinBuyIn()
  int get_MaxBuyIn()
  int get_MinToPlay()
  float get_MaxTurnTime()
  int get_EndRoundDelay()
  int get_TimeBetweenRounds()
  float get_TimeBetweenTurns()
  BaseCardGameEntity get_Owner()
  void set_Owner(BaseCardGameEntity value)
  int get_ScrapItemID()
  bool get_IsServer()
  bool get_IsClient()
  RoundResults get_resultInfo()
  void set_resultInfo(RoundResults value)
  void .ctor(BaseCardGameEntity owner)
  IEnumerable`1<CardPlayerData> PlayersInRound()
  int GetFirstPlayerRelIndex(bool startOfRound)
  void Dispose()
  int NumPlayersAllowedToPlay(CardPlayerData ignore)
  Playability GetPlayabilityStatus(CardPlayerData cpd)
  bool TryGetActivePlayer(CardPlayerData& activePlayer)
  bool ToCardPlayerData(int relIndex, bool includeOutOfRound, CardPlayerData& result)
  int RelToAbsIndex(int relIndex, bool includeFolded)
  int GameToRoundIndex(int gameRelIndex)
  int NumPlayersInGame()
  int NumPlayersInCurrentRound()
  int MaxPlayersAtTable()
  bool PlayerIsInGame(BasePlayer player)
  bool IsAtTable(BasePlayer player)
  List`1<PlayingCard> GetTableCards()
  void StartTurnTimer(CardPlayerData pData, float turnTime)
  bool IsAtTable(ulong userID)
  int GetScrapInPot()
  bool TryGetCardPlayerData(int index, CardPlayerData& cardPlayer)
  bool TryGetCardPlayerData(ulong forPlayer, CardPlayerData& cardPlayer)
  bool TryGetCardPlayerData(BasePlayer forPlayer, CardPlayerData& cardPlayer)
  bool IsAllowedToPlay(CardPlayerData cpd)
  void ClearResultsInfo()
  CardPlayerData GetNewCardPlayerData(int mountIndex)
  void OnTurnTimeout(CardPlayerData playerData)
  void SubStartRound()
  void SubReceivedInputFromPlayer(CardPlayerData playerData, int input, int value, bool countAsAction)
  int GetAvailableInputsForPlayer(CardPlayerData playerData)
  void HandlePlayerLeavingTable(CardPlayerData pData)
  void SubEndRound()
  void SubEndGameplay()
  void EndCycle()
  bool ShouldEndCycle()
  void EditorMakeRandomMove()
  void JoinTable(BasePlayer player)
  void SyncAllLocalPlayerCards()
  void SyncLocalPlayerCards(CardPlayerData pData)
  void JoinTable(ulong userID)
  void LeaveTable(ulong userID)
  void LeaveTable(CardPlayerData pData)
  int TryAddBet(CardPlayerData playerData, int maxAmount)
  int GoAllIn(CardPlayerData playerData)
  int TryMoveToPotStorage(CardPlayerData playerData, int maxAmount)
  int PayOutFromPot(CardPlayerData playerData, int maxAmount)
  int PayOutAllFromPot(CardPlayerData playerData)
  void ClearPot()
  int RemoveScrapFromStorage(CardPlayerData data)
  void Save(CardGame syncData)
  void InvokeStartNewRound()
  bool TryStartNewRound()
  void BeginRoundEnd()
  void EndRoundWithDelay()
  void EndRound()
  void AddRoundResult(CardPlayerData pData, int winnings, int resultCode)
  void EndGameplay()
  void ReceivedInputFromPlayer(BasePlayer player, int input, bool countAsAction, int value)
  void ReceivedInputFromPlayer(CardPlayerData pData, int input, bool countAsAction, int value, bool playerInitiated)
  void UpdateAllAvailableInputs()
  void PlayerStorageChanged()
  void ServerPlaySound(SoundType type)
  void GetConnectionsInGame(List`1<Connection> connections)
  void OnTableDestroyed()
  bool TryMoveToNextPlayerWithInputs(int startIndex, CardPlayerData& newActivePlayer)
  void StartNextCycle()
  void QueueNextCycleInvoke()
  void CancelNextCycleInvoke()
--------------------------------------------------
Класс: Facepunch.CardGames.CardPlayerData
Наследуется от: object
Поля:
  ulong <UserID>k__BackingField
  List`1<PlayingCard> Cards
  CardPlayerState <State>k__BackingField
  int mountIndex
  bool isServer
  int availableInputs
  int betThisRound
  int betThisTurn
  bool <LeftRoundEarly>k__BackingField
  bool <SendCardDetails>k__BackingField
  int finalScore
  bool <hasCompletedTurn>k__BackingField
  float lastActionTime
  int remainingToPayOut
  Func`2<int, StorageContainer> getStorage
  int scrapItemID
  Action`1<CardPlayerData> turnTimerCallback
Свойства:
  ulong UserID
  CardPlayerState State
  bool HasUser
  bool HasUserInGame
  bool HasUserInCurrentRound
  bool HasAvailableInputs
  bool AllCardsAreKnown
  bool IsClient
  bool LeftRoundEarly
  bool SendCardDetails
  bool hasCompletedTurn
Методы:
  ulong get_UserID()
  void set_UserID(ulong value)
  CardPlayerState get_State()
  void set_State(CardPlayerState value)
  bool get_HasUser()
  bool get_HasUserInGame()
  bool get_HasUserInCurrentRound()
  bool get_HasAvailableInputs()
  bool get_AllCardsAreKnown()
  bool get_IsClient()
  bool get_LeftRoundEarly()
  void set_LeftRoundEarly(bool value)
  bool get_SendCardDetails()
  void set_SendCardDetails(bool value)
  void .ctor(int mountIndex, bool isServer)
  void .ctor(int scrapItemID, Func`2<int, StorageContainer> getStorage, int mountIndex, bool isServer)
  void Dispose()
  int GetScrapAmount()
  int GetTotalBetThisRound()
  List`1<PlayingCard> GetMainCards()
  List`1<PlayingCard> GetSecondaryCards()
  bool get_hasCompletedTurn()
  void set_hasCompletedTurn(bool value)
  void SetHasCompletedTurn(bool hasActed)
  bool HasBeenIdleFor(int seconds)
  StorageContainer GetStorage()
  void AddUser(ulong userID)
  void ClearAllData()
  void JoinRound()
  void ClearPerRoundData()
  void LeaveCurrentRound(bool clearBets, bool leftRoundEarly)
  void LeaveGame()
  void EnableSendingCards()
  string HandToString()
  string HandToString(List`1<PlayingCard> cards)
  void Save(CardGame syncData)
  void StartTurnTimer(Action`1<CardPlayerData> callback, float maxTurnTime)
  void CancelTurnTimer()
  void TimeoutTurn()
--------------------------------------------------
Класс: Facepunch.CardGames.CardPlayerDataBlackjack
Наследуется от: CardPlayerData
Поля:
  List`1<PlayingCard> SplitCards
  int splitBetThisRound
  int insuranceBetThisRound
  bool playingSplitCards
Свойства:
Методы:
  void .ctor(int mountIndex, bool isServer)
  void .ctor(int scrapItemID, Func`2<int, StorageContainer> getStorage, int mountIndex, bool isServer)
  void Dispose()
  int GetTotalBetThisRound()
  List`1<PlayingCard> GetSecondaryCards()
  void ClearPerRoundData()
  void LeaveCurrentRound(bool clearBets, bool leftRoundEarly)
  void LeaveGame()
  void Save(CardGame syncData)
  bool TrySwitchToSplitHand()
  void SwapSplitCardsWithMain()
--------------------------------------------------
Класс: Facepunch.CardGames.StackOfCards
Наследуется от: object
Поля:
  List`1<PlayingCard> cards
Свойства:
Методы:
  void .ctor(int numDecks)
  bool TryTakeCard(PlayingCard& card)
  void AddCard(PlayingCard card)
  void ShuffleDeck()
  void Print()
--------------------------------------------------
Класс: Facepunch.CardGames.Rank
Наследуется от: Enum
Поля:
  int value__
  Rank Two
  Rank Three
  Rank Four
  Rank Five
  Rank Six
  Rank Seven
  Rank Eight
  Rank Nine
  Rank Ten
  Rank Jack
  Rank Queen
  Rank King
  Rank Ace
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.CardGames.Suit
Наследуется от: Enum
Поля:
  int value__
  Suit Spades
  Suit Hearts
  Suit Diamonds
  Suit Clubs
Свойства:
Методы:
--------------------------------------------------
Класс: Facepunch.CardGames.PlayingCard
Наследуется от: object
Поля:
  bool IsUnknownCard
  Suit Suit
  Rank Rank
  PlayingCard[] cards
  PlayingCard unknownCard
Свойства:
Методы:
  void .ctor(Suit suit, Rank rank)
  void .ctor()
  PlayingCard GetCard(Suit suit, Rank rank)
  PlayingCard GetCard(int suit, int rank)
  PlayingCard GetCard(int index)
  int GetIndex()
  int GetIndex(Suit suit, Rank rank)
  int GetPokerEvaluationValue()
  int GetPokerSuitCode()
  PlayingCard[] GenerateAllCards()
  void .cctor()
--------------------------------------------------
Класс: Facepunch.CardGames.TexasHoldEmController
Наследуется от: CardGameController
Поля:
  List`1<PlayingCard> communityCards
  int SMALL_BLIND
  int BIG_BLIND
  string WON_HAND_STAT
  PokerInputOption <LastAction>k__BackingField
  ulong <LastActionTarget>k__BackingField
  int <LastActionValue>k__BackingField
  int <BiggestRaiseThisTurn>k__BackingField
  int dealerIndex
  StackOfCards deck
Свойства:
  int MinPlayers
  int MinBuyIn
  int MaxBuyIn
  int MinToPlay
  PokerInputOption LastAction
  ulong LastActionTarget
  int LastActionValue
  int BiggestRaiseThisTurn
Методы:
  int get_MinPlayers()
  int get_MinBuyIn()
  int get_MaxBuyIn()
  int get_MinToPlay()
  PokerInputOption get_LastAction()
  void set_LastAction(PokerInputOption value)
  ulong get_LastActionTarget()
  void set_LastActionTarget(ulong value)
  int get_LastActionValue()
  void set_LastActionValue(int value)
  int get_BiggestRaiseThisTurn()
  void set_BiggestRaiseThisTurn(int value)
  void .ctor(BaseCardGameEntity owner)
  int GetCurrentBet()
  bool TryGetDealer(CardPlayerData& dealer)
  bool TryGetSmallBlind(CardPlayerData& smallBlind)
  bool TryGetBigBlind(CardPlayerData& bigBlind)
  int GetFirstPlayerRelIndex(bool startOfRound)
  ushort EvaluatePokerHand(List`1<PlayingCard> cards)
  int GetCurrentMinRaise(CardPlayerData playerData)
  List`1<PlayingCard> GetTableCards()
  void InputsToList(int availableInputs, List`1<PokerInputOption> result)
  CardPlayerData GetNewCardPlayerData(int mountIndex)
  void Save(CardGame syncData)
  void SubStartRound()
  void SubEndRound()
  void AddRoundResult(CardPlayerData pData, int winnings, int winState)
  void SubEndGameplay()
  void IncrementDealer()
  void DealHoleCards()
  bool DealCommunityCards()
  void ClearLastAction()
  void OnTurnTimeout(CardPlayerData pData)
  void SubReceivedInputFromPlayer(CardPlayerData playerData, int input, int value, bool countAsAction)
  void StartNextCycle()
  bool ShouldEndCycle()
  void EndCycle()
  int GetAvailableInputsForPlayer(CardPlayerData playerData)
  void HandlePlayerLeavingTable(CardPlayerData pData)
--------------------------------------------------
Класс: Facepunch.Utility.Compression
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte[] Compress(Byte[] data)
  Byte[] Uncompress(Byte[] data)
  void .ctor()
--------------------------------------------------
Класс: Facepunch.GUI.Controls
Наследуется от: object
Поля:
  float labelWidth
Свойства:
Методы:
  float FloatSlider(string strLabel, float value, float low, float high, string format)
  int IntSlider(string strLabel, int value, int low, int high, string format)
  string TextArea(string strName, string value)
  bool Checkbox(string strName, bool value)
  bool Button(string strName)
  void .cctor()
--------------------------------------------------
Класс: Facepunch.GUI.TabbedPanel
Наследуется от: object
Поля:
  int selectedTabID
  List`1<Tab> tabs
Свойства:
  Tab selectedTab
Методы:
  Tab get_selectedTab()
  void Add(Tab tab)
  void DrawVertical(float width)
  void DrawContents()
  void .ctor()
--------------------------------------------------
Класс: Facepunch.Unity.RenderInfo
Наследуется от: object
Поля:
Свойства:
Методы:
  void GenerateReport()
--------------------------------------------------
Класс: Facepunch.Rust.Analytics
Наследуется от: object
Поля:
  HashSet`1<string> StatsBlacklist
  HashSet`1<NetworkableId> trackedSpawnedIds
  string <ClientAnalyticsUrl>k__BackingField
  string <ServerAnalyticsUrl>k__BackingField
  string <AnalyticsHeader>k__BackingField
  bool <UploadAnalytics>k__BackingField
  string <AnalyticsSecret>k__BackingField
  string <AnalyticsPublicKey>k__BackingField
  bool <HighFrequencyStats>k__BackingField
Свойства:
  string stats_blacklist
  string ClientAnalyticsUrl
  string ServerAnalyticsUrl
  string AnalyticsHeader
  bool UploadAnalytics
  string AnalyticsSecret
  string AnalyticsPublicKey
  bool HighFrequencyStats
Методы:
  string get_stats_blacklist()
  void set_stats_blacklist(string value)
  string get_ClientAnalyticsUrl()
  void set_ClientAnalyticsUrl(string value)
  string get_ServerAnalyticsUrl()
  void set_ServerAnalyticsUrl(string value)
  string get_AnalyticsHeader()
  void set_AnalyticsHeader(string value)
  bool get_UploadAnalytics()
  void set_UploadAnalytics(bool value)
  string get_AnalyticsSecret()
  void set_AnalyticsSecret(string value)
  string get_AnalyticsPublicKey()
  void set_AnalyticsPublicKey(string value)
  bool get_HighFrequencyStats()
  void set_HighFrequencyStats(bool value)
  void GetPendingAnalytics(Arg arg)
  void .cctor()
--------------------------------------------------
Класс: Facepunch.Rust.EventRecord
Наследуется от: object
Поля:
  DateTime Timestamp
  bool IsServer
  string <EventType>k__BackingField
  List`1<EventRecordField> Data
Свойства:
  string EventType
Методы:
  string get_EventType()
  void set_EventType(string value)
  void .ctor()
  void EnterPool()
  void LeavePool()
  EventRecord New(string type, bool isServer)
  EventRecord AddObject(string key, object data)
  EventRecord SetTimestamp(DateTime timestamp)
  EventRecord AddField(string key, bool value)
  EventRecord AddField(string key, string value)
  EventRecord AddField(string key, int value)
  EventRecord AddField(string key, UInt32 value)
  EventRecord AddField(string key, ulong value)
  EventRecord AddField(string key, long value)
  EventRecord AddField(string key, float value)
  EventRecord AddField(string key, double value)
  EventRecord AddField(string key, TimeSpan value)
  EventRecord AddField(string key, Guid value)
  EventRecord AddField(string key, Vector3 value)
  EventRecord AddField(string key, BaseEntity entity)
  EventRecord AddField(string key, Item item)
  void Submit()
--------------------------------------------------
Класс: Facepunch.Rust.EventRecordField
Наследуется от: ValueType
Поля:
  string Key1
  string Key2
  string String
  Nullable`1<long> Number
  Nullable`1<double> Float
  Nullable`1<Vector3> Vector
  Nullable`1<Guid> Guid
  bool IsObject
Свойства:
Методы:
  void .ctor(string key1)
  void .ctor(string key1, string key2)
--------------------------------------------------
Класс: Facepunch.Rust.PerformanceLogging
Наследуется от: object
Поля:
  PerformanceLogging server
  PerformanceLogging client
  TimeSpan ClientInterval
  TimeSpan ServerInterval
  TimeSpan PublicServerInterval
  TimeSpan PingInterval
  List`1<TimeSpan> Frametimes
  List`1<int> PingHistory
  List`1<LagSpike> lagSpikes
  List`1<GarbageCollect> garbageCollections
  bool isClient
  Stopwatch frameWatch
  DateTime nextPingTime
  DateTime nextFlushTime
  DateTime connectedTime
  int serverIndex
  Guid totalSessionId
  Guid sessionId
  int lastFrameGC
  ConcurrentQueue`1<PerformancePool> pool
  Type oxideType
  bool hasOxideType
  List`1<TimeSpan> sortedList
Свойства:
Методы:
  void .ctor(bool client)
  TimeSpan GetLagSpikeThreshold()
  void OnFrame()
  void Flush()
  TimeSpan GetFlushInterval()
  void ResetMeasurements()
  Task ProcessPerformanceData(EventRecord record, List`1<TimeSpan> frametimes, List`1<int> ping)
  void .cctor()
--------------------------------------------------
Класс: Rust.Numlock
Наследуется от: object
Поля:
  byte VK_NUMLOCK
  UInt32 KEYEVENTF_EXTENDEDKEY
  int KEYEVENTF_KEYUP
  int KEYEVENTF_KEYDOWN
Свойства:
  bool IsOn
Методы:
  short GetKeyState(int keyCode)
  void keybd_event(byte bVk, byte bScan, UInt32 dwFlags, int dwExtraInfo)
  bool get_IsOn()
  void TurnOn()
--------------------------------------------------
Класс: Rust.GC
Наследуется от: MonoBehaviour
Поля:
Свойства:
  bool Enabled
Методы:
  bool get_Enabled()
  void Collect()
  long GetTotalMemory()
  int CollectionCount()
  void .ctor()
--------------------------------------------------
Класс: Rust.DamageType
Наследуется от: Enum
Поля:
  int value__
  DamageType Generic
  DamageType Hunger
  DamageType Thirst
  DamageType Cold
  DamageType Drowned
  DamageType Heat
  DamageType Bleeding
  DamageType Poison
  DamageType Suicide
  DamageType Bullet
  DamageType Slash
  DamageType Blunt
  DamageType Fall
  DamageType Radiation
  DamageType Bite
  DamageType Stab
  DamageType Explosion
  DamageType RadiationExposure
  DamageType ColdExposure
  DamageType Decay
  DamageType ElectricShock
  DamageType Arrow
  DamageType AntiVehicle
  DamageType Collision
  DamageType Fun_Water
  DamageType LAST
Свойства:
Методы:
--------------------------------------------------
Класс: Rust.DamageTypeList
Наследуется от: object
Поля:
  Single[] types
Свойства:
Методы:
  void Set(DamageType index, float amount)
  float Get(DamageType index)
  void Add(DamageType index, float amount)
  void Scale(DamageType index, float amount)
  bool Has(DamageType index)
  float Total()
  void Clear()
  void Add(List`1<DamageTypeEntry> entries)
  void ScaleAll(float amount)
  DamageType GetMajorityDamageType()
  bool IsMeleeType()
  bool IsBleedCausing()
  bool IsConsideredAnAttack()
  void .ctor()
--------------------------------------------------
Класс: Rust.DamageTypeEntry
Наследуется от: object
Поля:
  DamageType type
  float amount
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.DamageTypeEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool IsMeleeType(DamageType damageType)
  bool IsBleedCausing(DamageType damageType)
  bool IsConsideredAnAttack(DamageType damageType)
--------------------------------------------------
Класс: Rust.GameInfo
Наследуется от: object
Поля:
Свойства:
  bool IsOfficialServer
  bool HasAchievements
Методы:
  bool get_IsOfficialServer()
  bool get_HasAchievements()
--------------------------------------------------
Класс: Rust.Defines
Наследуется от: object
Поля:
  UInt32 appID
  string resourceFolder
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Rust.Generic
Наследуется от: object
Поля:
  Scene _batchingScene
Свойства:
  Scene BatchingScene
Методы:
  Scene get_BatchingScene()
--------------------------------------------------
Класс: Rust.Server
Наследуется от: object
Поля:
  float UseDistance
  Scene _entityScene
Свойства:
  Scene EntityScene
Методы:
  Scene get_EntityScene()
--------------------------------------------------
Класс: Rust.UI.MuteListController
Наследуется от: UIDialog
Поля:
  RectTransform ListParent
  GameObjectRef UserWidget
  SteamFriendsList SearchList
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ReportBug
Наследуется от: UIDialog
Поля:
  GameObject GetInformation
  GameObject Finished
  RustInput Subject
  RustInput Message
  RustButton ReportButton
  RustButtonGroup Category
  RustIcon ProgressIcon
  RustText ProgressText
  RawImage ScreenshotImage
  GameObject ScreenshotRoot
  UIBackgroundBlur BlurController
  RustButton SubmitButton
  GameObject SubmitErrorRoot
  RustText CooldownText
  RustText ContentMissingText
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ReportPlayer
Наследуется от: UIDialog
Поля:
  GameObject FindPlayer
  GameObject GetInformation
  GameObject Finished
  GameObject RecentlyReported
  Dropdown ReasonDropdown
  RustInput Subject
  RustInput Message
  RustButton ReportButton
  SteamUserButton SteamUserButton
  RustIcon ProgressIcon
  RustText ProgressText
  Option[] ReportReasons
Свойства:
Методы:
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Rust.UI.SteamInventoryCrafting
Наследуется от: MonoBehaviour
Поля:
  GameObject Container
  ToggleGroup ToggleGroup
  Button ConvertToItem
  TextMeshProUGUI WoodAmount
  TextMeshProUGUI ClothAmount
  TextMeshProUGUI MetalAmount
  TextMeshProUGUI InfoText
  IPlayerItemDefinition <ResultItem>k__BackingField
  Coroutine <MarketCoroutine>k__BackingField
  SteamInventoryCrateOpen CraftModal
  GameObject CraftingContainer
  GameObject CraftingButton
  SteamInventoryNewItem NewItemModal
Свойства:
  IPlayerItemDefinition ResultItem
  Coroutine MarketCoroutine
Методы:
  IPlayerItemDefinition get_ResultItem()
  void set_ResultItem(IPlayerItemDefinition value)
  Coroutine get_MarketCoroutine()
  void set_MarketCoroutine(Coroutine value)
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.SteamInventoryCrateOpen
Наследуется от: MonoBehaviour
Поля:
  TextMeshProUGUI Name
  TextMeshProUGUI Requirements
  TextMeshProUGUI Label
  HttpImage IconImage
  GameObject ErrorPanel
  TextMeshProUGUI ErrorText
  GameObject CraftButton
  GameObject ProgressPanel
  SteamInventoryNewItem NewItemModal
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.SteamInventoryIcon
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.SteamInventoryItem
Наследуется от: MonoBehaviour
Поля:
  IPlayerItem Item
  HttpImage Image
Свойства:
Методы:
  bool Setup(IPlayerItem item)
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.SteamInventoryManager
Наследуется от: SingletonComponent`1<SteamInventoryManager>
Поля:
  GameObject inventoryItemPrefab
  GameObject inventoryCanvas
  GameObject missingItems
  SteamInventoryCrafting CraftControl
  List`1<GameObject> items
  GameObject LoadingOverlay
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.SteamInventoryNewItem
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  Task Open(IPlayerItem item)
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminConvarInfo
Наследуется от: MonoBehaviour
Поля:
  RustText InfoName
  RustText InfoValue
  RustInput VariableInput
  Tooltip TooltipComponent
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminPlayerEntry
Наследуется от: MonoBehaviour
Поля:
  RustText PlayerName
  RustText Ping
  RustButton Button
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminPlayerId
Наследуется от: MonoBehaviour
Поля:
  RustText PlayerName
  RustText PlayerId
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminPlayerInfo
Наследуется от: MonoBehaviour
Поля:
  RustText PlayerName
  RustText SteamID
  RustText OwnerSteamID
  RustText Ping
  RustText Address
  RustText ConnectedTime
  RustText ViolationLevel
  RustText Health
  RustInput KickReasonInput
  RustInput BanReasonInput
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminServerInfo
Наследуется от: MonoBehaviour
Поля:
  RustText InfoName
  RustText InfoValue
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminUGCEntry
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminUGCEntryAudio
Наследуется от: ServerAdminUGCEntry
Поля:
  AudioSource AudioSpeaker
  RustText DurationText
  RustSlider ProgressSlider
  RustIcon PlayIcon
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminUGCEntryImage
Наследуется от: ServerAdminUGCEntry
Поля:
  RawImage Image
  RectTransform Backing
  GameObject MultiImageRoot
  RustText ImageIndex
  Vector2 OriginalImageSize
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminUGCEntryPattern
Наследуется от: ServerAdminUGCEntry
Поля:
  GameObjectRef StarPrefab
  RectTransform StarRoot
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminUGCEntryStub
Наследуется от: MonoBehaviour
Поля:
  ServerAdminUGCEntryAudio AudioWidget
  ServerAdminUGCEntryImage ImageWidget
  ServerAdminUGCEntryPattern PatternWidget
  RustText PrefabName
  RustButton HistoryButton
  ServerAdminPlayerId[] HistoryIds
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.ServerAdmin.ServerAdminUI
Наследуется от: SingletonComponent`1<ServerAdminUI>
Поля:
  GameObjectRef PlayerEntry
  RectTransform PlayerInfoParent
  RustText PlayerCount
  RustInput PlayerNameFilter
  GameObjectRef ServerInfoEntry
  RectTransform ServerInfoParent
  GameObjectRef ConvarInfoEntry
  GameObjectRef ConvarInfoLongEntry
  RectTransform ConvarInfoParent
  ServerAdminPlayerInfo PlayerInfo
  RustInput UgcNameFilter
  GameObjectRef ImageEntry
  GameObjectRef PatternEntry
  GameObjectRef SoundEntry
  VirtualScroll UgcVirtualScroll
  GameObject ExpandedUgcRoot
  RawImage ExpandedImage
  RectTransform ExpandedImageBacking
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.MainMenu.Hero
Наследуется от: SingletonComponent`1<Hero>
Поля:
  CanvasGroup CanvasGroup
  Video VideoPlayer
  RustText TitleText
  RustText ButtonText
  HttpImage TitleImage
  RustButton ItemStoreButton
  RustButton LimitedTabButton
  RustButton GeneralTabButton
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.UI.Utility.ForceWeather
Наследуется от: MonoBehaviour
Поля:
  Toggle component
  bool Rain
  bool Fog
  bool Wind
  bool Clouds
Свойства:
Методы:
  void OnEnable()
  void Update()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.INexusRequestHandler
Поля:
Свойства:
  Response Response
Методы:
  Response get_Response()
  void Execute()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.BaseNexusRequestHandler`1
Наследуется от: object
Поля:
  NexusZoneDetails <FromZone>k__BackingField
  Uuid <RequestId>k__BackingField
  T <Request>k__BackingField
  Response <Response>k__BackingField
  bool _fireAndForget
Свойства:
  NexusZoneDetails FromZone
  Uuid RequestId
  T Request
  Response Response
Методы:
  NexusZoneDetails get_FromZone()
  void set_FromZone(NexusZoneDetails value)
  Uuid get_RequestId()
  void set_RequestId(Uuid value)
  T get_Request()
  void set_Request(T value)
  Response get_Response()
  void set_Response(Response value)
  void Initialize(NexusZoneDetails fromZone, Uuid id, bool fireAndForget, T request)
  void EnterPool()
  void LeavePool()
  void Execute()
  void Handle()
  void Reset()
  void SendSuccess()
  void SendSuccess(Response response)
  void SendResult(bool success)
  void SendResult(bool success, Response response)
  void SendError(string message)
  Response NewResponse()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.ClanChatBatchHandler
Наследуется от: BaseNexusRequestHandler`1<ClanChatBatchRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.DestroyBagHandler
Наследуется от: BaseNexusRequestHandler`1<SleepingBagDestroyRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.FerryRetireHandler
Наследуется от: BaseNexusRequestHandler`1<FerryRetireRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.FerryStatusHandler
Наследуется от: BaseNexusRequestHandler`1<FerryStatusRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.FerryUpdateScheduleHandler
Наследуется от: BaseNexusRequestHandler`1<FerryUpdateScheduleRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.PingHandler
Наследуется от: BaseNexusRequestHandler`1<PingRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.PlayerManifestHandler
Наследуется от: BaseNexusRequestHandler`1<PlayerManifestRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.RespawnAtBagHandler
Наследуется от: BaseNexusRequestHandler`1<SleepingBagRespawnRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.SpawnOptionsHandler
Наследуется от: BaseNexusRequestHandler`1<SpawnOptionsRequest>
Поля:
Свойства:
Методы:
  void Handle()
  void .ctor()
--------------------------------------------------
Класс: Rust.Nexus.Handlers.TransferHandler
Наследуется от: BaseNexusRequestHandler`1<TransferRequest>
Поля:
  Dictionary`2<ulong, ulong> UidMapping
  Dictionary`2<BaseEntity, Entity> EntityToSpawn
  Dictionary`2<ulong, BasePlayer> SpawnedPlayers
  List`1<string> PlayerIds
  List`1<NetworkableId> EntitiesToProtect
  Dictionary`2<ulong, PlayerTeam> TeamMapping
Свойства:
Методы:
  void Handle()
  void CompleteTransfers()
  void RepositionEntitiesFromTransfer()
  void SpawnEntities(Dictionary`2<ulong, BasePlayer> players)
  void .ctor()
  void .cctor()
  void <Handle>g__UpdateWithNewUid|6_0(UidType type, UInt64& prevUid)
--------------------------------------------------
Класс: Rust.Water5.OceanDisplacementShort3
Наследуется от: ValueType
Поля:
  float precision
  float float2short
  float short2float
  short x
  short y
  short z
Свойства:
Методы:
  Vector3 op_Implicit(OceanDisplacementShort3 v)
  OceanDisplacementShort3 op_Implicit(Vector3 v)
  OceanDisplacementShort3 op_Implicit(float3 v)
--------------------------------------------------
Класс: Rust.Water5.OceanSimulation
Наследуется от: object
Поля:
  int octaveCount
  int simulationSize
  int physicsSimulationSize
  int physicsFrameRate
  int physicsLooptime
  int physicsFrameCount
  float phsyicsDeltaTime
  float oneOverPhysicsSimulationSize
  int physicsFrameSize
  int physicsSpectrumOffset
  OceanSettings oceanSettings
  Single[] spectrumRanges
  float distanceAttenuationFactor
  float depthAttenuationFactor
  float oneOverOctave0Scale
  Single[] beaufortValues
  int spectrum0
  int spectrum1
  float spectrumBlend
  int frame0
  int frame1
  float frameBlend
  float currentTime
  float prevUpdateComputeTime
  float deltaTime
  OceanDisplacementShort3[0...,0...,0...] simData
Свойства:
  int Spectrum0
  int Spectrum1
  float SpectrumBlend
  int Frame0
  int Frame1
  float FrameBlend
Методы:
  int get_Spectrum0()
  int get_Spectrum1()
  float get_SpectrumBlend()
  int get_Frame0()
  int get_Frame1()
  float get_FrameBlend()
  void .ctor(OceanSettings oceanSettings)
  void Update(float time, float dt, float beaufort)
  void FindSpectra(float beaufort, Int32& spectrum0, Int32& spectrum1, Single& spectrumT)
  void FindFrames(float time, Int32& frame0, Int32& frame1, Single& frameBlend)
  bool Trace(Ray ray, float maxDist, Vector3& result)
  float MinLevel()
  float MaxLevel()
  float GetHeight(Vector3[0...,0...,0...] simData, Vector3 position, float time, float beaufort, float distAttenFactor, float depthAttenFactor)
  Vector3 GetDisplacement(Vector3[0...,0...,0...] simData, Vector3 position, float time, float beaufort)
  Vector3 GetDisplacement(Vector3[0...,0...,0...] simData, Vector3 position, int frame0, int frame1, float frameBlend, int spectrum0, int spectrum1, float spectrumBlend)
  Vector3 GetDisplacement(Vector3[0...,0...,0...] simData, float normX, float normZ, int frame0, int frame1, float frameBlend, int spectrum0, int spectrum1, float spectrumBlend)
  Vector3 GetDisplacement(Vector3[0...,0...,0...] simData, int x, int y, int frame0, int frame1, float frameBlend, int spectrum0, int spectrum1, float spectrumBlend)
  void Dispose()
  float GetHeightRaw(Vector3 position)
  Vector3 GetDisplacement(Vector3 position)
  Vector3 GetDisplacement(float normX, float normZ)
  Vector3 GetDisplacement(int x, int z)
  float GetHeight(Vector3 position)
  float GetHeightAttenuation(Vector3 position)
--------------------------------------------------
Класс: Rust.Water5.SpectrumParameters
Наследуется от: ValueType
Поля:
  float scale
  float angle
  float spreadBlend
  float swell
  float alpha
  float peakOmega
  float gamma
  float shortWavesFade
Свойства:
Методы:
--------------------------------------------------
Класс: Rust.Water5.SpectrumSettings
Наследуется от: ValueType
Поля:
  float scale
  float windSpeed
  float fetch
  float spreadBlend
  float swell
  float peakEnhancement
  float shortWavesFade
Свойства:
Методы:
--------------------------------------------------
Класс: Rust.Water5.OceanSpectrumSettings
Наследуется от: ScriptableObject
Поля:
  OceanSettings oceanSettings
  float g
  float beaufort
  float depth
  SpectrumSettings local
  SpectrumSettings swell
  Color color
  Color specColor
  float smoothness
  Color waterColor
  Color waterExtinction
  float scatteringCoefficient
  Color subSurfaceColor
  float subSurfaceFalloff
  float subSurfaceBase
  float subSurfaceSun
  float subSurfaceAmount
  float foamAmount
  float foamScale
  Color foamColor
  Color baseFoamColor
Свойства:
Методы:
  void UpdateSpectrum()
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.ConditionalObject
Наследуется от: object
Поля:
  GameObject gameObject
  GameObject ownerGameObject
  ConditionalSocketSettings[] socketSettings
  bool restrictOnHealth
  float healthRestrictionMin
  float healthRestrictionMax
  bool restrictOnAdjacent
  AdjacentCondition adjacentRestriction
  AdjacentMatchType adjacentMatch
  bool restrictOnLockable
  bool lockableRestriction
  Nullable`1<bool> <IsActive>k__BackingField
Свойства:
  Nullable`1<bool> IsActive
Методы:
  Nullable`1<bool> get_IsActive()
  void set_IsActive(Nullable`1<bool> value)
  void .ctor(GameObject conditionalGO, GameObject ownerGO, int socketsTaken)
  void SetActive(bool active)
  void RefreshActive()
--------------------------------------------------
Класс: Rust.Modular.ConditionalSocketSettings
Наследуется от: object
Поля:
  bool restrictOnLocation
  LocationCondition locationRestriction
  bool restrictOnWheel
  SocketWheelType wheelRestriction
Свойства:
  bool HasSocketRestrictions
Методы:
  bool get_HasSocketRestrictions()
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.EnableDisableEvent
Наследуется от: MonoBehaviour
Поля:
  UnityEvent enableEvent
  UnityEvent disableEvent
Свойства:
Методы:
  void OnEnable()
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.EngineItemTypeEx
Наследуется от: object
Поля:
Свойства:
Методы:
  bool BoostsAcceleration(EngineItemTypes engineItemType)
  bool BoostsTopSpeed(EngineItemTypes engineItemType)
  bool BoostsFuelEconomy(EngineItemTypes engineItemType)
--------------------------------------------------
Класс: Rust.Modular.EngineStorage
Наследуется от: StorageContainer
Поля:
  Sprite engineIcon
  float internalDamageMultiplier
  EngineItemTypes[] slotTypes
  VehicleModuleEngineItems allEngineItems
  int accelerationBoostSlots
  int topSpeedBoostSlots
  int fuelEconomyBoostSlots
  bool <isUsable>k__BackingField
  float <accelerationBoostPercent>k__BackingField
  float <topSpeedBoostPercent>k__BackingField
  float <fuelEconomyBoostPercent>k__BackingField
Свойства:
  bool isUsable
  float accelerationBoostPercent
  float topSpeedBoostPercent
  float fuelEconomyBoostPercent
Методы:
  bool get_isUsable()
  void set_isUsable(bool value)
  float get_accelerationBoostPercent()
  void set_accelerationBoostPercent(float value)
  float get_topSpeedBoostPercent()
  void set_topSpeedBoostPercent(float value)
  float get_fuelEconomyBoostPercent()
  void set_fuelEconomyBoostPercent(float value)
  VehicleModuleEngine GetEngineModule()
  float GetAveragedLoadoutPercent()
  void Load(LoadInfo info)
  bool CanBeLooted(BasePlayer player)
  int GetIdealSlot(BasePlayer player, Item item)
  int GetValidSlot(Item item)
  void OnInventoryFirstCreated(ItemContainer container)
  void NonUserSpawn()
  void OnItemAddedOrRemoved(Item item, bool added)
  bool ItemFilter(Item item, int targetSlot)
  void RefreshLoadoutData()
  void Save(SaveInfo info)
  void OnModuleDamaged(float damageTaken)
  void AdminAddParts(int tier)
  float GetContainerItemsValueFor(Func`2<EngineItemTypes, bool> boostConditional)
  float GetTierValue(int tier)
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.ModularCarAudio
Наследуется от: GroundVehicleAudio
Поля:
  bool showDebug
  SoundDefinition skidSoundLoop
  SoundDefinition skidSoundDirtLoop
  SoundDefinition skidSoundSnowLoop
  float skidMinSlip
  float skidMaxSlip
  SoundDefinition movementStartOneshot
  SoundDefinition movementStopOneshot
  float movementStartStopMinTimeBetweenSounds
  SoundDefinition movementRattleLoop
  float movementRattleMaxSpeed
  float movementRattleMaxAngSpeed
  float movementRattleIdleGain
  SoundDefinition suspensionLurchSound
  float suspensionLurchMinExtensionDelta
  float suspensionLurchMinTimeBetweenSounds
  SoundDefinition tyreRollingSoundDef
  SoundDefinition tyreRollingWaterSoundDef
  SoundDefinition tyreRollingGrassSoundDef
  SoundDefinition tyreRollingSnowSoundDef
  AnimationCurve tyreRollGainCurve
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.ModularVehicleInventory
Наследуется от: object
Поля:
  ItemContainer <ModuleContainer>k__BackingField
  ItemContainer <ChassisContainer>k__BackingField
  BaseModularVehicle vehicle
Свойства:
  ItemContainer ModuleContainer
  ItemContainer ChassisContainer
  ItemContainerId UID
  int TotalSockets
Методы:
  ItemContainer get_ModuleContainer()
  ItemContainer get_ChassisContainer()
  ItemContainerId get_UID()
  int get_TotalSockets()
  void .ctor(BaseModularVehicle vehicle, ItemDefinition chassisItemDef, bool giveUID)
  void Dispose()
  void GiveUIDs()
  bool SocketIsFree(int socketIndex, Item moduleItem)
  bool SocketIsTaken(int socketIndex)
  bool TryAddModuleItem(Item moduleItem, int socketIndex)
  bool RemoveAndDestroy(Item itemToRemove)
  int TryGetFreeSocket(int socketsTaken)
  int TryGetFreeSocket(Item moduleItem, int socketsTaken)
  bool SocketsAreFree(int firstIndex, int socketsTaken, Item moduleItem)
  bool TrySyncModuleInventory(BaseVehicleModule moduleEntity, int firstSocketIndex)
  bool SocketIsUsed(Item item, int slotIndex)
  ItemContainer CreateModuleInventory(BaseModularVehicle vehicle, bool giveUID)
  ItemContainer CreateChassisInventory(BaseModularVehicle vehicle, bool giveUID)
  void OnSocketInventoryAddRemove(Item moduleItem, bool added)
  void ModuleItemAdded(Item moduleItem, int socketIndex)
  void ModuleItemRemoved(Item moduleItem)
  void OnModuleItemChanged(Item moduleItem)
  bool ItemFilter(Item item, int targetSlot)
--------------------------------------------------
Класс: Rust.Modular.ModularVehicleSocket
Наследуется от: object
Поля:
  Transform socketTransform
  SocketWheelType wheelType
  SocketLocationType locationType
Свойства:
  Vector3 WorldPosition
  Quaternion WorldRotation
  SocketWheelType WheelType
  SocketLocationType LocationType
Методы:
  Vector3 get_WorldPosition()
  Quaternion get_WorldRotation()
  SocketWheelType get_WheelType()
  SocketLocationType get_LocationType()
  bool ShouldBeActive(ConditionalSocketSettings modelSettings)
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.VehicleModuleEngineItems
Наследуется от: ScriptableObject
Поля:
  ItemModEngineItem[] engineItems
Свойства:
Методы:
  bool TryGetItem(int tier, EngineItemTypes type, ItemModEngineItem& output)
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.VehicleModuleSlidingComponent
Наследуется от: object
Поля:
  string interactionColliderName
  Flags flag_SliderOpen
  float moveTime
  SlidingPart[] slidingParts
  SoundDefinition openSoundDef
  SoundDefinition closeSoundDef
  float positionPercent
Свойства:
Методы:
  bool WantsOpenPos(BaseEntity parentEntity)
  void Use(BaseVehicleModule parentModule)
  void ServerUpdateTick(BaseVehicleModule parentModule)
  void CheckPosition(BaseEntity parentEntity, float dt)
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.ItemModEngineItem
Наследуется от: ItemMod
Поля:
  EngineItemTypes engineItemType
  int tier
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.ItemModVehicleChassis
Наследуется от: ItemMod
Поля:
  GameObjectRef entityPrefab
  int socketsTaken
Свойства:
  int SocketsTaken
Методы:
  int get_SocketsTaken()
  void .ctor()
--------------------------------------------------
Класс: Rust.Modular.ItemModVehicleModule
Наследуется от: ItemMod
Поля:
  GameObjectRef entityPrefab
  int socketsTaken
  bool doNonUserSpawn
Свойства:
  int SocketsTaken
Методы:
  int get_SocketsTaken()
  BaseVehicleModule CreateModuleEntity(BaseEntity parent, Vector3 position, Quaternion rotation)
  void .ctor()
--------------------------------------------------
Класс: Rust.Instruments.Notes
Наследуется от: Enum
Поля:
  int value__
  Notes A
  Notes B
  Notes C
  Notes D
  Notes E
  Notes F
  Notes G
Свойства:
Методы:
--------------------------------------------------
Класс: Rust.Interpolation.IGenericLerpTarget`1
Поля:
Свойства:
Методы:
  void SetFrom(T snapshot)
  T GetCurrentState()
  void DebugInterpolationState(Segment<T> segment, List`1<T> entries)
--------------------------------------------------
Класс: Rust.Interpolation.GenericLerp`1
Наследуется от: object
Поля:
  Interpolator`1<T> interpolator
  IGenericLerpTarget`1<T> target
  T snapshotPrototype
  float TimeOffset
  float timeOffset0
  float timeOffset1
  float timeOffset2
  float timeOffset3
  int timeOffsetCount
  float extrapolatedTime
Свойства:
  int TimeOffsetInterval
  float LerpTime
Методы:
  int get_TimeOffsetInterval()
  float get_LerpTime()
  void .ctor(IGenericLerpTarget`1<T> target, int listCount)
  void Tick()
  void Snapshot(T snapshot)
  void SnapTo(T snapshot)
  void SnapToNow(T snapshot)
  void SnapToEnd()
  void Dispose()
  void Wipe()
  void .cctor()
--------------------------------------------------
Класс: Rust.Interpolation.ISnapshot`1
Поля:
Свойства:
  float Time
Методы:
  float get_Time()
  void set_Time(float value)
  void MatchValuesTo(T entry)
  void Lerp(T prev, T next, float delta)
  T GetNew()
--------------------------------------------------
Класс: Rust.Interpolation.Interpolator`1
Наследуется от: object
Поля:
  List`1<T> list
  T last
Свойства:
Методы:
  void .ctor(int listCount)
  void Add(T tick)
  void Cull(float beforeTime)
  void Clear()
  Segment<T> Query(float time, float interpolation, float extrapolation, float smoothing, T& t)
--------------------------------------------------
Класс: Rust.Interpolation.TransformSnapshot
Наследуется от: ValueType
Поля:
  float <Time>k__BackingField
  Vector3 pos
  Quaternion rot
Свойства:
  float Time
Методы:
  float get_Time()
  void set_Time(float value)
  void .ctor(float time, Vector3 pos, Quaternion rot)
  void MatchValuesTo(TransformSnapshot entry)
  void Lerp(TransformSnapshot prev, TransformSnapshot next, float delta)
  TransformSnapshot GetNew()
--------------------------------------------------
Класс: Rust.Interpolation.FloatSnapshot
Наследуется от: ValueType
Поля:
  float <Time>k__BackingField
  float value
Свойства:
  float Time
Методы:
  float get_Time()
  void set_Time(float value)
  void .ctor(float time, float value)
  void MatchValuesTo(FloatSnapshot entry)
  void Lerp(FloatSnapshot prev, FloatSnapshot next, float delta)
  FloatSnapshot GetNew()
--------------------------------------------------
Класс: Rust.Ai.CoverPoint
Наследуется от: object
Поля:
  CoverPointVolume <Volume>k__BackingField
  CoverType NormalCoverType
  bool IsDynamic
  Transform SourceTransform
  Vector3 _staticPosition
  Vector3 _staticNormal
  BaseEntity <ReservedFor>k__BackingField
  bool <IsCompromised>k__BackingField
  float <Score>k__BackingField
Свойства:
  CoverPointVolume Volume
  Vector3 Position
  Vector3 Normal
  BaseEntity ReservedFor
  bool IsReserved
  bool IsCompromised
  float Score
Методы:
  CoverPointVolume get_Volume()
  void set_Volume(CoverPointVolume value)
  Vector3 get_Position()
  void set_Position(Vector3 value)
  Vector3 get_Normal()
  void set_Normal(Vector3 value)
  BaseEntity get_ReservedFor()
  void set_ReservedFor(BaseEntity value)
  bool get_IsReserved()
  bool get_IsCompromised()
  void set_IsCompromised(bool value)
  float get_Score()
  void set_Score(float value)
  bool IsValidFor(BaseEntity entity)
  void .ctor(CoverPointVolume volume, float score)
  void CoverIsCompromised(float cooldown)
  IEnumerator StartCooldown(float cooldown)
  bool ProvidesCoverFromPoint(Vector3 point, float arcThreshold)
--------------------------------------------------
Класс: Rust.Ai.CoverPointBlockerVolume
Наследуется от: MonoBehaviour
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.CoverPointVolume
Наследуется от: MonoBehaviour
Поля:
  float DefaultCoverPointScore
  float CoverPointRayLength
  LayerMask CoverLayerMask
  Transform BlockerGroup
  Transform ManualCoverPointGroup
  float cover_point_sample_step_size
  float cover_point_sample_step_height
  List`1<CoverPoint> CoverPoints
  List`1<CoverPointBlockerVolume> _coverPointBlockers
  float _dynNavMeshBuildCompletionTime
  int _genAttempts
  Bounds bounds
Свойства:
  bool repeat
Методы:
  bool get_repeat()
  Nullable`1<float> ExecuteUpdate(float deltaTime, float nextInterval)
  void ClearCoverPoints()
  Bounds GetBounds()
  void PreGenerateCoverPoints()
  void ConvertToManualCoverPoints()
  void GenerateCoverPoints(Transform coverPointGroup)
  CoverPoint CalculateCoverPoint(NavMeshHit info)
  CoverType ProvidesCoverInDir(Ray ray, float maxDistance, RaycastHit& rayHit)
  bool Contains(Vector3 point)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Rust.Ai.ManualCoverPoint
Наследуется от: FacepunchBehaviour
Поля:
  bool IsDynamic
  float Score
  CoverPointVolume Volume
  Vector3 Normal
  CoverType NormalCoverType
Свойства:
  Vector3 Position
  float DirectionMagnitude
Методы:
  Vector3 get_Position()
  float get_DirectionMagnitude()
  void Awake()
  CoverPoint ToCoverPoint(CoverPointVolume volume)
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.AiManagedAgent
Наследуется от: FacepunchBehaviour
Поля:
  int AgentTypeIndex
  Vector2i NavmeshGridCoord
  bool isRegistered
Свойства:
Методы:
  void OnEnable()
  void DelayedRegistration()
  void OnDisable()
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.AiManager
Наследуется от: SingletonComponent`1<AiManager>
Поля:
  bool UseCover
  float CoverPointVolumeCellSize
  float CoverPointVolumeCellHeight
  float CoverPointRayLength
  CoverPointVolume cpvPrefab
  LayerMask DynamicCoverPointVolumeLayerMask
  WorldSpaceGrid`1<CoverPointVolume> coverPointVolumeGrid
  bool nav_wait
  bool nav_disable
  bool setdestination_navmesh_failsafe
  bool ai_dormant
  float ai_to_player_distance_wakeup_range
  int nav_obstacles_carve_state
  int ai_dormant_max_wakeup_per_tick
  float ai_htn_player_tick_budget
  float ai_htn_player_junkpile_tick_budget
  float ai_htn_animal_tick_budget
  bool ai_htn_use_agency_tick
  BasePlayer[] playerVicinityQuery
  Func`2<BasePlayer, bool> filter
Свойства:
  int pathfindingIterationsPerFrame
  bool repeat
Методы:
  void OnEnableAgency()
  void OnDisableAgency()
  void UpdateAgency()
  void OnEnableCover()
  void OnDisableCover()
  CoverPointVolume CreateNewCoverVolume(Vector3 point, Transform coverPointGroup)
  CoverPointVolume GetCoverVolumeContaining(Vector3 point)
  void set_pathfindingIterationsPerFrame(int value)
  int get_pathfindingIterationsPerFrame()
  bool get_repeat()
  void Initialize()
  void OnDisable()
  Nullable`1<float> ExecuteUpdate(float deltaTime, float nextInterval)
  bool InterestedInPlayersOnly(BaseEntity entity)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Rust.Ai.Memory
Наследуется от: object
Поля:
  List`1<BaseEntity> Visible
  List`1<SeenInfo> All
  List`1<ExtendedInfo> AllExtended
Свойства:
Методы:
  SeenInfo Update(BaseEntity entity, float score, Vector3 direction, float dot, float distanceSqr, byte lineOfSight, bool updateLastHurtUsTime, float lastHurtUsTime, ExtendedInfo& extendedInfo)
  SeenInfo Update(BaseEntity entity, Vector3 position, float score, Vector3 direction, float dot, float distanceSqr, byte lineOfSight, bool updateLastHurtUsTime, float lastHurtUsTime, ExtendedInfo& extendedInfo)
  SeenInfo Update(BaseEntity ent, float danger)
  SeenInfo Update(BaseEntity ent, Vector3 position, float danger)
  void AddDanger(Vector3 position, float amount)
  SeenInfo GetInfo(BaseEntity entity)
  SeenInfo GetInfo(Vector3 position)
  ExtendedInfo GetExtendedInfo(BaseEntity entity)
  void Forget(float maxSecondsOld)
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.NavmeshPrefabInstantiator
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef NavmeshPrefab
Свойства:
Методы:
  void Start()
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.SensationType
Наследуется от: Enum
Поля:
  int value__
  SensationType Gunshot
  SensationType ThrownWeapon
  SensationType Explosion
Свойства:
Методы:
--------------------------------------------------
Класс: Rust.Ai.Sensation
Наследуется от: ValueType
Поля:
  SensationType Type
  Vector3 Position
  float Radius
  float DamagePotential
  BaseEntity Initiator
  BasePlayer InitiatorPlayer
  BaseEntity UsedEntity
Свойства:
Методы:
--------------------------------------------------
Класс: Rust.Ai.Sense
Наследуется от: object
Поля:
  BaseEntity[] query
Свойства:
Методы:
  void Stimulate(Sensation sensation)
  bool IsAbleToBeStimulated(BaseEntity ent)
  void .cctor()
--------------------------------------------------
Класс: Rust.Ai.ScientistSpawner
Наследуется от: SpawnGroup
Поля:
  bool Mobile
  bool NeverMove
  bool SpawnHostile
  bool OnlyAggroMarkedTargets
  bool IsPeacekeeper
  bool IsBandit
  bool IsMilitaryTunnelLab
  WaypointSet Waypoints
  Transform[] LookAtInterestPointsStationary
  Vector2 RadioEffectRepeatRange
  Model Model
  AiLocationManager _mgr
  float _nextForcedRespawn
  bool _lastSpawnCallHadAliveMembers
  bool _lastSpawnCallHadMaxAliveMembers
Свойства:
Методы:
  void Spawn(int numToSpawn)
  void PostSpawnProcess(BaseEntity entity, BaseSpawnPoint spawnPoint)
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.AiLocationManager
Наследуется от: FacepunchBehaviour
Поля:
  List`1<AiLocationManager> Managers
  AiLocationSpawner MainSpawner
  SquadSpawnerLocation LocationWhenMainSpawnerIsNull
  Transform CoverPointGroup
  Transform PatrolPointGroup
  CoverPointVolume DynamicCoverPointVolume
  bool SnapCoverPointsToGround
  List`1<PathInterestNode> patrolPoints
Свойства:
  SquadSpawnerLocation LocationType
Методы:
  SquadSpawnerLocation get_LocationType()
  void Awake()
  void OnDestroy()
  PathInterestNode GetFirstPatrolPointInRange(Vector3 from, float minRange, float maxRange)
  PathInterestNode GetRandomPatrolPointInRange(Vector3 from, float minRange, float maxRange, PathInterestNode currentPatrolPoint)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Rust.Ai.AiLocationSpawner
Наследуется от: SpawnGroup
Поля:
  SquadSpawnerLocation Location
  AiLocationManager Manager
  JunkPile Junkpile
  bool IsMainSpawner
  float chance
  int defaultMaxPopulation
  int defaultNumToSpawnPerTickMax
  int defaultNumToSpawnPerTickMin
Свойства:
Методы:
  void SpawnInitial()
  void Spawn(int numToSpawn)
  BaseSpawnPoint GetSpawnPoint(GameObjectRef prefabRef, Vector3& pos, Quaternion& rot)
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.WaypointSet
Наследуется от: MonoBehaviour
Поля:
  List`1<Waypoint> _points
  NavModes navMode
Свойства:
  List`1<Waypoint> Points
  NavModes NavMode
Методы:
  List`1<Waypoint> get_Points()
  void set_Points(List`1<Waypoint> value)
  NavModes get_NavMode()
  void OnDrawGizmos()
  void .ctor()
--------------------------------------------------
Класс: Rust.Ai.HTN.ScientistJunkpile.ScientistJunkpileSpawner
Наследуется от: MonoBehaviour
Поля:
  GameObjectRef ScientistPrefab
  List`1<BaseCombatEntity> Spawned
  BaseSpawnPoint[] SpawnPoints
  int MaxPopulation
  bool InitialSpawn
  float MinRespawnTimeMinutes
  float MaxRespawnTimeMinutes
  float MovementRadius
  bool ReducedLongRangeAccuracy
  JunkpileType SpawnType
  float SpawnBaseChance
  float nextRespawnTime
  bool pendingRespawn
Свойства:
  int currentPopulation
Методы:
  int get_currentPopulation()
  void Awake()
  void OnDestroy()
  void Fill()
  void Clear()
  void SpawnInitial()
  void SpawnRepeating()
  void CheckIfRespawnNeeded()
  bool IsAllSpawnedDead()
  void ScheduleRespawn()
  void DoRespawn()
  void SpawnScientist()
  BaseSpawnPoint GetSpawnPoint(Vector3& pos, Quaternion& rot)
  void .ctor()
--------------------------------------------------
Класс: Rust.AI.AStarPath
Наследуется от: object
Поля:
Свойства:
Методы:
  float Heuristic(IAIPathNode from, IAIPathNode to)
  bool FindPath(IAIPathNode start, IAIPathNode goal, Stack`1& path, Single& pathCost)
--------------------------------------------------
Класс: Rust.AI.AStarNode
Наследуется от: object
Поля:
  AStarNode Parent
  float G
  float H
  IAIPathNode Node
Свойства:
  float F
Методы:
  float get_F()
  void .ctor(float g, float h, AStarNode parent, IAIPathNode node)
  void Update(float g, float h, AStarNode parent, IAIPathNode node)
  bool Satisfies(IAIPathNode node)
  bool op_LessThan(AStarNode lhs, AStarNode rhs)
  bool op_GreaterThan(AStarNode lhs, AStarNode rhs)
--------------------------------------------------
Класс: Rust.AI.AStarNodeList
Наследуется от: List`1<AStarNode>
Поля:
  AStarNodeComparer comparer
Свойства:
Методы:
  bool Contains(IAIPathNode n)
  AStarNode GetAStarNodeOf(IAIPathNode n)
  void AStarNodeSort()
  void .ctor()
--------------------------------------------------
Класс: Rust.AI.SimpleAIMemory
Наследуется от: object
Поля:
  HashSet`1<BasePlayer> PlayerIgnoreList
  List`1<SeenInfo> All
  List`1<BaseEntity> Players
  HashSet`1<BaseEntity> LOS
  List`1<BaseEntity> Targets
  List`1<BaseEntity> Threats
  List`1<BaseEntity> Friendlies
Свойства:
Методы:
  void SetKnown(BaseEntity ent, BaseEntity owner, AIBrainSenses brainSenses)
  void SetLOS(BaseEntity ent, bool flag)
  bool IsLOS(BaseEntity ent)
  bool IsPlayerKnown(BasePlayer player)
  void Forget(float secondsOld)
  void AddIgnorePlayer(BasePlayer player)
  void RemoveIgnorePlayer(BasePlayer player)
  void ClearIgnoredPlayers()
  string GetIgnoredPlayers()
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Generated.AnimatorController.PlayerMenuAnimation
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=128 087D62403E78DC49C9277940610005765798849EA9532010ED60C2D57E018E8A
  __StaticArrayInitTypeSize=12 0A0EC6D4742068B4D88C6145B8224EF1DC240C8A305CDFC50C3AAF9121E6875D
  __StaticArrayInitTypeSize=2048 0E2324949E99F3333C190A2D72DC1C4D3D195A1D6F548FA73962188FF3868B07
  __StaticArrayInitTypeSize=28 0EE084CADFFFB658F8CD58C183172F2D33009DF779D1A81F82CB7B5EFBD430EE
  __StaticArrayInitTypeSize=256 3682C3D0020436C45462995A4F64438C144BBFEBA725B00DE5906AB322B6B915
  __StaticArrayInitTypeSize=28 4480B9AD80872D62587B3451F1F1102998288B4592A9E0273FD080F32BBD16A0
  long 4C4B6A3BE1314AB86138BEF4314DDE022E600960D8689A2C8F8631802D20DAB6
  __StaticArrayInitTypeSize=64 5067FBB519143D2BBB50837A7114B667EA232E97D9C104D0E9391200C742B1FC
  __StaticArrayInitTypeSize=24 5DB55EE96DEC22255FABFE213AC7C494DC651B58A6FC8C0E7934E33D9DBDC8FA
  __StaticArrayInitTypeSize=64 62C43A98E03BC219CD683A7101365F5F41CAD798C199710F2BE30A01F0380878
  __StaticArrayInitTypeSize=28 6A9AF405F91FC519F1BFE3EF240ACE5FD596F0B5F1E288869C2516E09E7628AC
  long 71B7C064263BFD112B8F81B89C1E4F0033B4195FE5F291343845AC656DF4B1F2
  __StaticArrayInitTypeSize=16 80BF86957C3A56EB67100257760C90558E80F9253A3596998F1F5B9289F7449E
  __StaticArrayInitTypeSize=12 85DD1779ED6EFC5644F3EF8B25784A4EA351D8F9C57F0FA383673B34974DFDC2
  __StaticArrayInitTypeSize=20 BEE794DBCD4CBBBF1C7DAF41EF192F0C8543F2C04DCD5D88F445D71BB75FC08A
  __StaticArrayInitTypeSize=288 EC28B0ED453324964CE8F1AE6F3819EE3274E6C7262F892293A5CC05A45880EB
  __StaticArrayInitTypeSize=12 F186F2262AE48F2AA4F90C9A6B35913B0F6B0B895423B6267252259BFD357D3B
  __StaticArrayInitTypeSize=24 FE78C65211DD0B56A97024FB61111E686EF1FE054AA132BA58E2891AC496F1EE
Свойства:
Методы:
  UInt32 ComputeStringHash(string s)
--------------------------------------------------
