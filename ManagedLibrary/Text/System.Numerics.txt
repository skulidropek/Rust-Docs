Сборка: System.Numerics.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoCorlibVersion
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: SR
Наследуется от: object
Поля:
  string Argument_BadFormatSpecifier
  string Argument_InvalidNumberStyles
  string Argument_InvalidHexStyle
  string Argument_MustBeBigInt
  string Format_TooLarge
  string ArgumentOutOfRange_MustBeNonNeg
  string Overflow_BigIntInfinity
  string Overflow_NotANumber
  string Overflow_ParseBigInteger
  string Overflow_Int32
  string Overflow_Int64
  string Overflow_UInt32
  string Overflow_UInt64
  string Overflow_Decimal
  string Arg_ArgumentOutOfRangeException
  string Arg_ElementsInSourceIsGreaterThanDestination
  string Arg_NullArgumentNullRef
  string Arg_TypeNotSupported
  string ArgumentException_BufferNotFromPool
  string Overflow_Negative_Unsigned
Свойства:
Методы:
  string GetString(string name, Object[] args)
  string GetString(CultureInfo culture, string name, Object[] args)
  string GetString(string name)
  string GetString(CultureInfo culture, string name)
  string Format(string resourceFormat, Object[] args)
  string Format(string resourceFormat, object p1)
  string Format(string resourceFormat, object p1, object p2)
  string Format(CultureInfo ci, string resourceFormat, object p1, object p2)
  string Format(string resourceFormat, object p1, object p2, object p3)
  string GetResourceString(string str)
--------------------------------------------------
Класс: System.Numerics.Matrix3x2
Наследуется от: ValueType
Поля:
  float M11
  float M12
  float M21
  float M22
  float M31
  float M32
  Matrix3x2 _identity
Свойства:
  Matrix3x2 Identity
  bool IsIdentity
  Vector2 Translation
Методы:
  Matrix3x2 get_Identity()
  bool get_IsIdentity()
  Vector2 get_Translation()
  void set_Translation(Vector2 value)
  void .ctor(float m11, float m12, float m21, float m22, float m31, float m32)
  Matrix3x2 CreateTranslation(Vector2 position)
  Matrix3x2 CreateTranslation(float xPosition, float yPosition)
  Matrix3x2 CreateScale(float xScale, float yScale)
  Matrix3x2 CreateScale(float xScale, float yScale, Vector2 centerPoint)
  Matrix3x2 CreateScale(Vector2 scales)
  Matrix3x2 CreateScale(Vector2 scales, Vector2 centerPoint)
  Matrix3x2 CreateScale(float scale)
  Matrix3x2 CreateScale(float scale, Vector2 centerPoint)
  Matrix3x2 CreateSkew(float radiansX, float radiansY)
  Matrix3x2 CreateSkew(float radiansX, float radiansY, Vector2 centerPoint)
  Matrix3x2 CreateRotation(float radians)
  Matrix3x2 CreateRotation(float radians, Vector2 centerPoint)
  float GetDeterminant()
  bool Invert(Matrix3x2 matrix, Matrix3x2& result)
  Matrix3x2 Lerp(Matrix3x2 matrix1, Matrix3x2 matrix2, float amount)
  Matrix3x2 Negate(Matrix3x2 value)
  Matrix3x2 Add(Matrix3x2 value1, Matrix3x2 value2)
  Matrix3x2 Subtract(Matrix3x2 value1, Matrix3x2 value2)
  Matrix3x2 Multiply(Matrix3x2 value1, Matrix3x2 value2)
  Matrix3x2 Multiply(Matrix3x2 value1, float value2)
  Matrix3x2 op_UnaryNegation(Matrix3x2 value)
  Matrix3x2 op_Addition(Matrix3x2 value1, Matrix3x2 value2)
  Matrix3x2 op_Subtraction(Matrix3x2 value1, Matrix3x2 value2)
  Matrix3x2 op_Multiply(Matrix3x2 value1, Matrix3x2 value2)
  Matrix3x2 op_Multiply(Matrix3x2 value1, float value2)
  bool op_Equality(Matrix3x2 value1, Matrix3x2 value2)
  bool op_Inequality(Matrix3x2 value1, Matrix3x2 value2)
  bool Equals(Matrix3x2 other)
  bool Equals(object obj)
  string ToString()
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Numerics.Matrix4x4
Наследуется от: ValueType
Поля:
  float M11
  float M12
  float M13
  float M14
  float M21
  float M22
  float M23
  float M24
  float M31
  float M32
  float M33
  float M34
  float M41
  float M42
  float M43
  float M44
  Matrix4x4 _identity
Свойства:
  Matrix4x4 Identity
  bool IsIdentity
  Vector3 Translation
Методы:
  Matrix4x4 get_Identity()
  bool get_IsIdentity()
  Vector3 get_Translation()
  void set_Translation(Vector3 value)
  void .ctor(float m11, float m12, float m13, float m14, float m21, float m22, float m23, float m24, float m31, float m32, float m33, float m34, float m41, float m42, float m43, float m44)
  void .ctor(Matrix3x2 value)
  Matrix4x4 CreateBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 cameraUpVector, Vector3 cameraForwardVector)
  Matrix4x4 CreateConstrainedBillboard(Vector3 objectPosition, Vector3 cameraPosition, Vector3 rotateAxis, Vector3 cameraForwardVector, Vector3 objectForwardVector)
  Matrix4x4 CreateTranslation(Vector3 position)
  Matrix4x4 CreateTranslation(float xPosition, float yPosition, float zPosition)
  Matrix4x4 CreateScale(float xScale, float yScale, float zScale)
  Matrix4x4 CreateScale(float xScale, float yScale, float zScale, Vector3 centerPoint)
  Matrix4x4 CreateScale(Vector3 scales)
  Matrix4x4 CreateScale(Vector3 scales, Vector3 centerPoint)
  Matrix4x4 CreateScale(float scale)
  Matrix4x4 CreateScale(float scale, Vector3 centerPoint)
  Matrix4x4 CreateRotationX(float radians)
  Matrix4x4 CreateRotationX(float radians, Vector3 centerPoint)
  Matrix4x4 CreateRotationY(float radians)
  Matrix4x4 CreateRotationY(float radians, Vector3 centerPoint)
  Matrix4x4 CreateRotationZ(float radians)
  Matrix4x4 CreateRotationZ(float radians, Vector3 centerPoint)
  Matrix4x4 CreateFromAxisAngle(Vector3 axis, float angle)
  Matrix4x4 CreatePerspectiveFieldOfView(float fieldOfView, float aspectRatio, float nearPlaneDistance, float farPlaneDistance)
  Matrix4x4 CreatePerspective(float width, float height, float nearPlaneDistance, float farPlaneDistance)
  Matrix4x4 CreatePerspectiveOffCenter(float left, float right, float bottom, float top, float nearPlaneDistance, float farPlaneDistance)
  Matrix4x4 CreateOrthographic(float width, float height, float zNearPlane, float zFarPlane)
  Matrix4x4 CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNearPlane, float zFarPlane)
  Matrix4x4 CreateLookAt(Vector3 cameraPosition, Vector3 cameraTarget, Vector3 cameraUpVector)
  Matrix4x4 CreateWorld(Vector3 position, Vector3 forward, Vector3 up)
  Matrix4x4 CreateFromQuaternion(Quaternion quaternion)
  Matrix4x4 CreateFromYawPitchRoll(float yaw, float pitch, float roll)
  Matrix4x4 CreateShadow(Vector3 lightDirection, Plane plane)
  Matrix4x4 CreateReflection(Plane value)
  float GetDeterminant()
  bool Invert(Matrix4x4 matrix, Matrix4x4& result)
  bool Decompose(Matrix4x4 matrix, Vector3& scale, Quaternion& rotation, Vector3& translation)
  Matrix4x4 Transform(Matrix4x4 value, Quaternion rotation)
  Matrix4x4 Transpose(Matrix4x4 matrix)
  Matrix4x4 Lerp(Matrix4x4 matrix1, Matrix4x4 matrix2, float amount)
  Matrix4x4 Negate(Matrix4x4 value)
  Matrix4x4 Add(Matrix4x4 value1, Matrix4x4 value2)
  Matrix4x4 Subtract(Matrix4x4 value1, Matrix4x4 value2)
  Matrix4x4 Multiply(Matrix4x4 value1, Matrix4x4 value2)
  Matrix4x4 Multiply(Matrix4x4 value1, float value2)
  Matrix4x4 op_UnaryNegation(Matrix4x4 value)
  Matrix4x4 op_Addition(Matrix4x4 value1, Matrix4x4 value2)
  Matrix4x4 op_Subtraction(Matrix4x4 value1, Matrix4x4 value2)
  Matrix4x4 op_Multiply(Matrix4x4 value1, Matrix4x4 value2)
  Matrix4x4 op_Multiply(Matrix4x4 value1, float value2)
  bool op_Equality(Matrix4x4 value1, Matrix4x4 value2)
  bool op_Inequality(Matrix4x4 value1, Matrix4x4 value2)
  bool Equals(Matrix4x4 other)
  bool Equals(object obj)
  string ToString()
  int GetHashCode()
  void .cctor()
--------------------------------------------------
Класс: System.Numerics.Plane
Наследуется от: ValueType
Поля:
  Vector3 Normal
  float D
Свойства:
Методы:
  void .ctor(float x, float y, float z, float d)
  void .ctor(Vector3 normal, float d)
  void .ctor(Vector4 value)
  Plane CreateFromVertices(Vector3 point1, Vector3 point2, Vector3 point3)
  Plane Normalize(Plane value)
  Plane Transform(Plane plane, Matrix4x4 matrix)
  Plane Transform(Plane plane, Quaternion rotation)
  float Dot(Plane plane, Vector4 value)
  float DotCoordinate(Plane plane, Vector3 value)
  float DotNormal(Plane plane, Vector3 value)
  bool op_Equality(Plane value1, Plane value2)
  bool op_Inequality(Plane value1, Plane value2)
  bool Equals(Plane other)
  bool Equals(object obj)
  string ToString()
  int GetHashCode()
--------------------------------------------------
Класс: System.Numerics.Quaternion
Наследуется от: ValueType
Поля:
  float X
  float Y
  float Z
  float W
Свойства:
  Quaternion Identity
  bool IsIdentity
Методы:
  Quaternion get_Identity()
  bool get_IsIdentity()
  void .ctor(float x, float y, float z, float w)
  void .ctor(Vector3 vectorPart, float scalarPart)
  float Length()
  float LengthSquared()
  Quaternion Normalize(Quaternion value)
  Quaternion Conjugate(Quaternion value)
  Quaternion Inverse(Quaternion value)
  Quaternion CreateFromAxisAngle(Vector3 axis, float angle)
  Quaternion CreateFromYawPitchRoll(float yaw, float pitch, float roll)
  Quaternion CreateFromRotationMatrix(Matrix4x4 matrix)
  float Dot(Quaternion quaternion1, Quaternion quaternion2)
  Quaternion Slerp(Quaternion quaternion1, Quaternion quaternion2, float amount)
  Quaternion Lerp(Quaternion quaternion1, Quaternion quaternion2, float amount)
  Quaternion Concatenate(Quaternion value1, Quaternion value2)
  Quaternion Negate(Quaternion value)
  Quaternion Add(Quaternion value1, Quaternion value2)
  Quaternion Subtract(Quaternion value1, Quaternion value2)
  Quaternion Multiply(Quaternion value1, Quaternion value2)
  Quaternion Multiply(Quaternion value1, float value2)
  Quaternion Divide(Quaternion value1, Quaternion value2)
  Quaternion op_UnaryNegation(Quaternion value)
  Quaternion op_Addition(Quaternion value1, Quaternion value2)
  Quaternion op_Subtraction(Quaternion value1, Quaternion value2)
  Quaternion op_Multiply(Quaternion value1, Quaternion value2)
  Quaternion op_Multiply(Quaternion value1, float value2)
  Quaternion op_Division(Quaternion value1, Quaternion value2)
  bool op_Equality(Quaternion value1, Quaternion value2)
  bool op_Inequality(Quaternion value1, Quaternion value2)
  bool Equals(Quaternion other)
  bool Equals(object obj)
  string ToString()
  int GetHashCode()
--------------------------------------------------
Класс: System.Numerics.Vector2
Наследуется от: ValueType
Поля:
  float X
  float Y
Свойства:
  Vector2 Zero
  Vector2 One
  Vector2 UnitX
  Vector2 UnitY
Методы:
  Vector2 get_Zero()
  Vector2 get_One()
  Vector2 get_UnitX()
  Vector2 get_UnitY()
  int GetHashCode()
  bool Equals(object obj)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  float Length()
  float LengthSquared()
  float Distance(Vector2 value1, Vector2 value2)
  float DistanceSquared(Vector2 value1, Vector2 value2)
  Vector2 Normalize(Vector2 value)
  Vector2 Reflect(Vector2 vector, Vector2 normal)
  Vector2 Clamp(Vector2 value1, Vector2 min, Vector2 max)
  Vector2 Lerp(Vector2 value1, Vector2 value2, float amount)
  Vector2 Transform(Vector2 position, Matrix3x2 matrix)
  Vector2 Transform(Vector2 position, Matrix4x4 matrix)
  Vector2 TransformNormal(Vector2 normal, Matrix3x2 matrix)
  Vector2 TransformNormal(Vector2 normal, Matrix4x4 matrix)
  Vector2 Transform(Vector2 value, Quaternion rotation)
  Vector2 Add(Vector2 left, Vector2 right)
  Vector2 Subtract(Vector2 left, Vector2 right)
  Vector2 Multiply(Vector2 left, Vector2 right)
  Vector2 Multiply(Vector2 left, float right)
  Vector2 Multiply(float left, Vector2 right)
  Vector2 Divide(Vector2 left, Vector2 right)
  Vector2 Divide(Vector2 left, float divisor)
  Vector2 Negate(Vector2 value)
  void .ctor(float value)
  void .ctor(float x, float y)
  void CopyTo(Single[] array)
  void CopyTo(Single[] array, int index)
  bool Equals(Vector2 other)
  float Dot(Vector2 value1, Vector2 value2)
  Vector2 Min(Vector2 value1, Vector2 value2)
  Vector2 Max(Vector2 value1, Vector2 value2)
  Vector2 Abs(Vector2 value)
  Vector2 SquareRoot(Vector2 value)
  Vector2 op_Addition(Vector2 left, Vector2 right)
  Vector2 op_Subtraction(Vector2 left, Vector2 right)
  Vector2 op_Multiply(Vector2 left, Vector2 right)
  Vector2 op_Multiply(float left, Vector2 right)
  Vector2 op_Multiply(Vector2 left, float right)
  Vector2 op_Division(Vector2 left, Vector2 right)
  Vector2 op_Division(Vector2 value1, float value2)
  Vector2 op_UnaryNegation(Vector2 value)
  bool op_Equality(Vector2 left, Vector2 right)
  bool op_Inequality(Vector2 left, Vector2 right)
--------------------------------------------------
Класс: System.Numerics.Vector3
Наследуется от: ValueType
Поля:
  float X
  float Y
  float Z
Свойства:
  Vector3 Zero
  Vector3 One
  Vector3 UnitX
  Vector3 UnitY
  Vector3 UnitZ
Методы:
  Vector3 get_Zero()
  Vector3 get_One()
  Vector3 get_UnitX()
  Vector3 get_UnitY()
  Vector3 get_UnitZ()
  int GetHashCode()
  bool Equals(object obj)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  float Length()
  float LengthSquared()
  float Distance(Vector3 value1, Vector3 value2)
  float DistanceSquared(Vector3 value1, Vector3 value2)
  Vector3 Normalize(Vector3 value)
  Vector3 Cross(Vector3 vector1, Vector3 vector2)
  Vector3 Reflect(Vector3 vector, Vector3 normal)
  Vector3 Clamp(Vector3 value1, Vector3 min, Vector3 max)
  Vector3 Lerp(Vector3 value1, Vector3 value2, float amount)
  Vector3 Transform(Vector3 position, Matrix4x4 matrix)
  Vector3 TransformNormal(Vector3 normal, Matrix4x4 matrix)
  Vector3 Transform(Vector3 value, Quaternion rotation)
  Vector3 Add(Vector3 left, Vector3 right)
  Vector3 Subtract(Vector3 left, Vector3 right)
  Vector3 Multiply(Vector3 left, Vector3 right)
  Vector3 Multiply(Vector3 left, float right)
  Vector3 Multiply(float left, Vector3 right)
  Vector3 Divide(Vector3 left, Vector3 right)
  Vector3 Divide(Vector3 left, float divisor)
  Vector3 Negate(Vector3 value)
  void .ctor(float value)
  void .ctor(Vector2 value, float z)
  void .ctor(float x, float y, float z)
  void CopyTo(Single[] array)
  void CopyTo(Single[] array, int index)
  bool Equals(Vector3 other)
  float Dot(Vector3 vector1, Vector3 vector2)
  Vector3 Min(Vector3 value1, Vector3 value2)
  Vector3 Max(Vector3 value1, Vector3 value2)
  Vector3 Abs(Vector3 value)
  Vector3 SquareRoot(Vector3 value)
  Vector3 op_Addition(Vector3 left, Vector3 right)
  Vector3 op_Subtraction(Vector3 left, Vector3 right)
  Vector3 op_Multiply(Vector3 left, Vector3 right)
  Vector3 op_Multiply(Vector3 left, float right)
  Vector3 op_Multiply(float left, Vector3 right)
  Vector3 op_Division(Vector3 left, Vector3 right)
  Vector3 op_Division(Vector3 value1, float value2)
  Vector3 op_UnaryNegation(Vector3 value)
  bool op_Equality(Vector3 left, Vector3 right)
  bool op_Inequality(Vector3 left, Vector3 right)
--------------------------------------------------
Класс: System.Numerics.Vector4
Наследуется от: ValueType
Поля:
  float X
  float Y
  float Z
  float W
Свойства:
  Vector4 Zero
  Vector4 One
  Vector4 UnitX
  Vector4 UnitY
  Vector4 UnitZ
  Vector4 UnitW
Методы:
  Vector4 get_Zero()
  Vector4 get_One()
  Vector4 get_UnitX()
  Vector4 get_UnitY()
  Vector4 get_UnitZ()
  Vector4 get_UnitW()
  int GetHashCode()
  bool Equals(object obj)
  string ToString()
  string ToString(string format)
  string ToString(string format, IFormatProvider formatProvider)
  float Length()
  float LengthSquared()
  float Distance(Vector4 value1, Vector4 value2)
  float DistanceSquared(Vector4 value1, Vector4 value2)
  Vector4 Normalize(Vector4 vector)
  Vector4 Clamp(Vector4 value1, Vector4 min, Vector4 max)
  Vector4 Lerp(Vector4 value1, Vector4 value2, float amount)
  Vector4 Transform(Vector2 position, Matrix4x4 matrix)
  Vector4 Transform(Vector3 position, Matrix4x4 matrix)
  Vector4 Transform(Vector4 vector, Matrix4x4 matrix)
  Vector4 Transform(Vector2 value, Quaternion rotation)
  Vector4 Transform(Vector3 value, Quaternion rotation)
  Vector4 Transform(Vector4 value, Quaternion rotation)
  Vector4 Add(Vector4 left, Vector4 right)
  Vector4 Subtract(Vector4 left, Vector4 right)
  Vector4 Multiply(Vector4 left, Vector4 right)
  Vector4 Multiply(Vector4 left, float right)
  Vector4 Multiply(float left, Vector4 right)
  Vector4 Divide(Vector4 left, Vector4 right)
  Vector4 Divide(Vector4 left, float divisor)
  Vector4 Negate(Vector4 value)
  void .ctor(float value)
  void .ctor(float x, float y, float z, float w)
  void .ctor(Vector2 value, float z, float w)
  void .ctor(Vector3 value, float w)
  void CopyTo(Single[] array)
  void CopyTo(Single[] array, int index)
  bool Equals(Vector4 other)
  float Dot(Vector4 vector1, Vector4 vector2)
  Vector4 Min(Vector4 value1, Vector4 value2)
  Vector4 Max(Vector4 value1, Vector4 value2)
  Vector4 Abs(Vector4 value)
  Vector4 SquareRoot(Vector4 value)
  Vector4 op_Addition(Vector4 left, Vector4 right)
  Vector4 op_Subtraction(Vector4 left, Vector4 right)
  Vector4 op_Multiply(Vector4 left, Vector4 right)
  Vector4 op_Multiply(Vector4 left, float right)
  Vector4 op_Multiply(float left, Vector4 right)
  Vector4 op_Division(Vector4 left, Vector4 right)
  Vector4 op_Division(Vector4 value1, float value2)
  Vector4 op_UnaryNegation(Vector4 value)
  bool op_Equality(Vector4 left, Vector4 right)
  bool op_Inequality(Vector4 left, Vector4 right)
--------------------------------------------------
Класс: System.Numerics.BigInteger
Наследуется от: ValueType
Поля:
  int knMaskHighBit
  UInt32 kuMaskHighBit
  int kcbitUint
  int kcbitUlong
  int DecimalScaleFactorMask
  int DecimalSignMask
  int _sign
  UInt32[] _bits
  BigInteger s_bnMinInt
  BigInteger s_bnOneInt
  BigInteger s_bnZeroInt
  BigInteger s_bnMinusOneInt
  Byte[] s_success
Свойства:
  BigInteger Zero
  BigInteger One
  BigInteger MinusOne
  bool IsPowerOfTwo
  bool IsZero
  bool IsOne
  bool IsEven
  int Sign
Методы:
  void .ctor(int value)
  void .ctor(UInt32 value)
  void .ctor(long value)
  void .ctor(ulong value)
  void .ctor(float value)
  void .ctor(double value)
  void .ctor(decimal value)
  void .ctor(Byte[] value)
  void .ctor(ReadOnlySpan`1<byte> value, bool isUnsigned, bool isBigEndian)
  void .ctor(int n, UInt32[] rgu)
  void .ctor(UInt32[] value, bool negative)
  void .ctor(UInt32[] value)
  BigInteger get_Zero()
  BigInteger get_One()
  BigInteger get_MinusOne()
  bool get_IsPowerOfTwo()
  bool get_IsZero()
  bool get_IsOne()
  bool get_IsEven()
  int get_Sign()
  BigInteger Parse(string value)
  BigInteger Parse(string value, NumberStyles style)
  BigInteger Parse(string value, IFormatProvider provider)
  BigInteger Parse(string value, NumberStyles style, IFormatProvider provider)
  bool TryParse(string value, BigInteger& result)
  bool TryParse(string value, NumberStyles style, IFormatProvider provider, BigInteger& result)
  BigInteger Parse(ReadOnlySpan`1<char> value, NumberStyles style, IFormatProvider provider)
  bool TryParse(ReadOnlySpan`1<char> value, BigInteger& result)
  bool TryParse(ReadOnlySpan`1<char> value, NumberStyles style, IFormatProvider provider, BigInteger& result)
  int Compare(BigInteger left, BigInteger right)
  BigInteger Abs(BigInteger value)
  BigInteger Add(BigInteger left, BigInteger right)
  BigInteger Subtract(BigInteger left, BigInteger right)
  BigInteger Multiply(BigInteger left, BigInteger right)
  BigInteger Divide(BigInteger dividend, BigInteger divisor)
  BigInteger Remainder(BigInteger dividend, BigInteger divisor)
  BigInteger DivRem(BigInteger dividend, BigInteger divisor, BigInteger& remainder)
  BigInteger Negate(BigInteger value)
  double Log(BigInteger value)
  double Log(BigInteger value, double baseValue)
  double Log10(BigInteger value)
  BigInteger GreatestCommonDivisor(BigInteger left, BigInteger right)
  BigInteger GreatestCommonDivisor(UInt32[] leftBits, UInt32[] rightBits)
  BigInteger Max(BigInteger left, BigInteger right)
  BigInteger Min(BigInteger left, BigInteger right)
  BigInteger ModPow(BigInteger value, BigInteger exponent, BigInteger modulus)
  BigInteger Pow(BigInteger value, int exponent)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(long other)
  bool Equals(ulong other)
  bool Equals(BigInteger other)
  int CompareTo(long other)
  int CompareTo(ulong other)
  int CompareTo(BigInteger other)
  int CompareTo(object obj)
  Byte[] ToByteArray()
  Byte[] ToByteArray(bool isUnsigned, bool isBigEndian)
  bool TryWriteBytes(Span`1<byte> destination, Int32& bytesWritten, bool isUnsigned, bool isBigEndian)
  bool TryWriteOrCountBytes(Span`1<byte> destination, Int32& bytesWritten, bool isUnsigned, bool isBigEndian)
  int GetByteCount(bool isUnsigned)
  Byte[] TryGetBytes(GetBytesMode mode, Span`1<byte> destination, bool isUnsigned, bool isBigEndian, Int32& bytesWritten)
  UInt32[] ToUInt32Array()
  string ToString()
  string ToString(IFormatProvider provider)
  string ToString(string format)
  string ToString(string format, IFormatProvider provider)
  bool TryFormat(Span`1<char> destination, Int32& charsWritten, ReadOnlySpan`1<char> format, IFormatProvider provider)
  BigInteger Add(UInt32[] leftBits, int leftSign, UInt32[] rightBits, int rightSign)
  BigInteger op_Subtraction(BigInteger left, BigInteger right)
  BigInteger Subtract(UInt32[] leftBits, int leftSign, UInt32[] rightBits, int rightSign)
  BigInteger op_Implicit(byte value)
  BigInteger op_Implicit(sbyte value)
  BigInteger op_Implicit(short value)
  BigInteger op_Implicit(ushort value)
  BigInteger op_Implicit(int value)
  BigInteger op_Implicit(UInt32 value)
  BigInteger op_Implicit(long value)
  BigInteger op_Implicit(ulong value)
  BigInteger op_Explicit(float value)
  BigInteger op_Explicit(double value)
  BigInteger op_Explicit(decimal value)
  byte op_Explicit(BigInteger value)
  sbyte op_Explicit(BigInteger value)
  short op_Explicit(BigInteger value)
  ushort op_Explicit(BigInteger value)
  int op_Explicit(BigInteger value)
  UInt32 op_Explicit(BigInteger value)
  long op_Explicit(BigInteger value)
  ulong op_Explicit(BigInteger value)
  float op_Explicit(BigInteger value)
  double op_Explicit(BigInteger value)
  decimal op_Explicit(BigInteger value)
  BigInteger op_BitwiseAnd(BigInteger left, BigInteger right)
  BigInteger op_BitwiseOr(BigInteger left, BigInteger right)
  BigInteger op_ExclusiveOr(BigInteger left, BigInteger right)
  BigInteger op_LeftShift(BigInteger value, int shift)
  BigInteger op_RightShift(BigInteger value, int shift)
  BigInteger op_OnesComplement(BigInteger value)
  BigInteger op_UnaryNegation(BigInteger value)
  BigInteger op_UnaryPlus(BigInteger value)
  BigInteger op_Increment(BigInteger value)
  BigInteger op_Decrement(BigInteger value)
  BigInteger op_Addition(BigInteger left, BigInteger right)
  BigInteger op_Multiply(BigInteger left, BigInteger right)
  BigInteger op_Division(BigInteger dividend, BigInteger divisor)
  BigInteger op_Modulus(BigInteger dividend, BigInteger divisor)
  bool op_LessThan(BigInteger left, BigInteger right)
  bool op_LessThanOrEqual(BigInteger left, BigInteger right)
  bool op_GreaterThan(BigInteger left, BigInteger right)
  bool op_GreaterThanOrEqual(BigInteger left, BigInteger right)
  bool op_Equality(BigInteger left, BigInteger right)
  bool op_Inequality(BigInteger left, BigInteger right)
  bool op_LessThan(BigInteger left, long right)
  bool op_LessThanOrEqual(BigInteger left, long right)
  bool op_GreaterThan(BigInteger left, long right)
  bool op_GreaterThanOrEqual(BigInteger left, long right)
  bool op_Equality(BigInteger left, long right)
  bool op_Inequality(BigInteger left, long right)
  bool op_LessThan(long left, BigInteger right)
  bool op_LessThanOrEqual(long left, BigInteger right)
  bool op_GreaterThan(long left, BigInteger right)
  bool op_GreaterThanOrEqual(long left, BigInteger right)
  bool op_Equality(long left, BigInteger right)
  bool op_Inequality(long left, BigInteger right)
  bool op_LessThan(BigInteger left, ulong right)
  bool op_LessThanOrEqual(BigInteger left, ulong right)
  bool op_GreaterThan(BigInteger left, ulong right)
  bool op_GreaterThanOrEqual(BigInteger left, ulong right)
  bool op_Equality(BigInteger left, ulong right)
  bool op_Inequality(BigInteger left, ulong right)
  bool op_LessThan(ulong left, BigInteger right)
  bool op_LessThanOrEqual(ulong left, BigInteger right)
  bool op_GreaterThan(ulong left, BigInteger right)
  bool op_GreaterThanOrEqual(ulong left, BigInteger right)
  bool op_Equality(ulong left, BigInteger right)
  bool op_Inequality(ulong left, BigInteger right)
  bool GetPartsForBitManipulation(BigInteger& x, UInt32[]& xd, Int32& xl)
  int GetDiffLength(UInt32[] rgu1, UInt32[] rgu2, int cu)
  void AssertValid()
  void .cctor()
--------------------------------------------------
Класс: System.Numerics.BigIntegerCalculator
Наследуется от: object
Поля:
  int ReducerThreshold
  int SquareThreshold
  int AllocationThreshold
  int MultiplyThreshold
Свойства:
Методы:
  UInt32[] Add(UInt32[] left, UInt32 right)
  UInt32[] Add(UInt32[] left, UInt32[] right)
  void Add(UInt32* left, int leftLength, UInt32* right, int rightLength, UInt32* bits, int bitsLength)
  void AddSelf(UInt32* left, int leftLength, UInt32* right, int rightLength)
  UInt32[] Subtract(UInt32[] left, UInt32 right)
  UInt32[] Subtract(UInt32[] left, UInt32[] right)
  void Subtract(UInt32* left, int leftLength, UInt32* right, int rightLength, UInt32* bits, int bitsLength)
  void SubtractSelf(UInt32* left, int leftLength, UInt32* right, int rightLength)
  int Compare(UInt32[] left, UInt32[] right)
  int Compare(UInt32* left, int leftLength, UInt32* right, int rightLength)
  UInt32[] Divide(UInt32[] left, UInt32 right, UInt32& remainder)
  UInt32[] Divide(UInt32[] left, UInt32 right)
  UInt32 Remainder(UInt32[] left, UInt32 right)
  UInt32[] Divide(UInt32[] left, UInt32[] right, UInt32[]& remainder)
  UInt32[] Divide(UInt32[] left, UInt32[] right)
  UInt32[] Remainder(UInt32[] left, UInt32[] right)
  void Divide(UInt32* left, int leftLength, UInt32* right, int rightLength, UInt32* bits, int bitsLength)
  UInt32 AddDivisor(UInt32* left, int leftLength, UInt32* right, int rightLength)
  UInt32 SubtractDivisor(UInt32* left, int leftLength, UInt32* right, int rightLength, ulong q)
  bool DivideGuessTooBig(ulong q, ulong valHi, UInt32 valLo, UInt32 divHi, UInt32 divLo)
  UInt32[] CreateCopy(UInt32[] value)
  int LeadingZeros(UInt32 value)
  UInt32 Gcd(UInt32 left, UInt32 right)
  ulong Gcd(ulong left, ulong right)
  UInt32 Gcd(UInt32[] left, UInt32 right)
  UInt32[] Gcd(UInt32[] left, UInt32[] right)
  void Gcd(BitsBuffer& left, BitsBuffer& right)
  void ExtractDigits(BitsBuffer& xBuffer, BitsBuffer& yBuffer, UInt64& x, UInt64& y)
  void LehmerCore(BitsBuffer& xBuffer, BitsBuffer& yBuffer, long a, long b, long c, long d)
  UInt32[] Pow(UInt32 value, UInt32 power)
  UInt32[] Pow(UInt32[] value, UInt32 power)
  UInt32[] PowCore(UInt32 power, BitsBuffer& value)
  int PowBound(UInt32 power, int valueLength, int resultLength)
  void PowCore(UInt32 power, BitsBuffer& value, BitsBuffer& result, BitsBuffer& temp)
  UInt32 Pow(UInt32 value, UInt32 power, UInt32 modulus)
  UInt32 Pow(UInt32[] value, UInt32 power, UInt32 modulus)
  UInt32 Pow(UInt32 value, UInt32[] power, UInt32 modulus)
  UInt32 Pow(UInt32[] value, UInt32[] power, UInt32 modulus)
  UInt32 PowCore(UInt32[] power, UInt32 modulus, ulong value, ulong result)
  UInt32 PowCore(UInt32 power, UInt32 modulus, ulong value, ulong result)
  UInt32[] Pow(UInt32 value, UInt32 power, UInt32[] modulus)
  UInt32[] Pow(UInt32[] value, UInt32 power, UInt32[] modulus)
  UInt32[] Pow(UInt32 value, UInt32[] power, UInt32[] modulus)
  UInt32[] Pow(UInt32[] value, UInt32[] power, UInt32[] modulus)
  UInt32[] PowCore(UInt32[] power, UInt32[] modulus, BitsBuffer& value)
  UInt32[] PowCore(UInt32 power, UInt32[] modulus, BitsBuffer& value)
  void PowCore(UInt32[] power, UInt32[] modulus, BitsBuffer& value, BitsBuffer& result, BitsBuffer& temp)
  void PowCore(UInt32 power, UInt32[] modulus, BitsBuffer& value, BitsBuffer& result, BitsBuffer& temp)
  void PowCore(UInt32[] power, FastReducer& reducer, BitsBuffer& value, BitsBuffer& result, BitsBuffer& temp)
  void PowCore(UInt32 power, FastReducer& reducer, BitsBuffer& value, BitsBuffer& result, BitsBuffer& temp)
  int ActualLength(UInt32[] value)
  int ActualLength(UInt32[] value, int length)
  UInt32[] Square(UInt32[] value)
  void Square(UInt32* value, int valueLength, UInt32* bits, int bitsLength)
  UInt32[] Multiply(UInt32[] left, UInt32 right)
  UInt32[] Multiply(UInt32[] left, UInt32[] right)
  void Multiply(UInt32* left, int leftLength, UInt32* right, int rightLength, UInt32* bits, int bitsLength)
  void SubtractCore(UInt32* left, int leftLength, UInt32* right, int rightLength, UInt32* core, int coreLength)
  void .cctor()
--------------------------------------------------
Класс: System.Numerics.BigNumber
Наследуется от: object
Поля:
  NumberStyles InvalidNumberStyles
Свойства:
Методы:
  bool TryValidateParseStyleInteger(NumberStyles style, ArgumentException& e)
  bool TryParseBigInteger(string value, NumberStyles style, NumberFormatInfo info, BigInteger& result)
  bool TryParseBigInteger(ReadOnlySpan`1<char> value, NumberStyles style, NumberFormatInfo info, BigInteger& result)
  BigInteger ParseBigInteger(string value, NumberStyles style, NumberFormatInfo info)
  BigInteger ParseBigInteger(ReadOnlySpan`1<char> value, NumberStyles style, NumberFormatInfo info)
  bool HexNumberToBigInteger(BigNumberBuffer& number, BigInteger& value)
  bool NumberToBigInteger(BigNumberBuffer& number, BigInteger& value)
  char ParseFormatSpecifier(ReadOnlySpan`1<char> format, Int32& digits)
  string FormatBigIntegerToHex(bool targetSpan, BigInteger value, char format, int digits, NumberFormatInfo info, Span`1<char> destination, Int32& charsWritten, Boolean& spanSuccess)
  string FormatBigInteger(BigInteger value, string format, NumberFormatInfo info)
  bool TryFormatBigInteger(BigInteger value, ReadOnlySpan`1<char> format, NumberFormatInfo info, Span`1<char> destination, Int32& charsWritten)
  string FormatBigInteger(bool targetSpan, BigInteger value, string formatString, ReadOnlySpan`1<char> formatSpan, NumberFormatInfo info, Span`1<char> destination, Int32& charsWritten, Boolean& spanSuccess)
--------------------------------------------------
Класс: System.Numerics.Complex
Наследуется от: ValueType
Поля:
  Complex Zero
  Complex One
  Complex ImaginaryOne
  double InverseOfLog10
  double s_sqrtRescaleThreshold
  double s_asinOverflowThreshold
  double s_log2
  double m_real
  double m_imaginary
Свойства:
  double Real
  double Imaginary
  double Magnitude
  double Phase
Методы:
  void .ctor(double real, double imaginary)
  double get_Real()
  double get_Imaginary()
  double get_Magnitude()
  double get_Phase()
  Complex FromPolarCoordinates(double magnitude, double phase)
  Complex Negate(Complex value)
  Complex Add(Complex left, Complex right)
  Complex Subtract(Complex left, Complex right)
  Complex Multiply(Complex left, Complex right)
  Complex Divide(Complex dividend, Complex divisor)
  Complex op_UnaryNegation(Complex value)
  Complex op_Addition(Complex left, Complex right)
  Complex op_Subtraction(Complex left, Complex right)
  Complex op_Multiply(Complex left, Complex right)
  Complex op_Division(Complex left, Complex right)
  double Abs(Complex value)
  double Hypot(double a, double b)
  double Log1P(double x)
  Complex Conjugate(Complex value)
  Complex Reciprocal(Complex value)
  bool op_Equality(Complex left, Complex right)
  bool op_Inequality(Complex left, Complex right)
  bool Equals(object obj)
  bool Equals(Complex value)
  int GetHashCode()
  string ToString()
  string ToString(string format)
  string ToString(IFormatProvider provider)
  string ToString(string format, IFormatProvider provider)
  Complex Sin(Complex value)
  Complex Sinh(Complex value)
  Complex Asin(Complex value)
  Complex Cos(Complex value)
  Complex Cosh(Complex value)
  Complex Acos(Complex value)
  Complex Tan(Complex value)
  Complex Tanh(Complex value)
  Complex Atan(Complex value)
  void Asin_Internal(double x, double y, Double& b, Double& bPrime, Double& v)
  Complex Log(Complex value)
  Complex Log(Complex value, double baseValue)
  Complex Log10(Complex value)
  Complex Exp(Complex value)
  Complex Sqrt(Complex value)
  Complex Pow(Complex value, Complex power)
  Complex Pow(Complex value, double power)
  Complex Scale(Complex value, double factor)
  Complex op_Implicit(short value)
  Complex op_Implicit(int value)
  Complex op_Implicit(long value)
  Complex op_Implicit(ushort value)
  Complex op_Implicit(UInt32 value)
  Complex op_Implicit(ulong value)
  Complex op_Implicit(sbyte value)
  Complex op_Implicit(byte value)
  Complex op_Implicit(float value)
  Complex op_Implicit(double value)
  Complex op_Explicit(BigInteger value)
  Complex op_Explicit(decimal value)
  void .cctor()
--------------------------------------------------
Класс: System.Numerics.DoubleUlong
Наследуется от: ValueType
Поля:
  double dbl
  ulong uu
Свойства:
Методы:
--------------------------------------------------
Класс: System.Numerics.NumericsHelpers
Наследуется от: object
Поля:
  int kcbitUint
Свойства:
Методы:
  void GetDoubleParts(double dbl, Int32& sign, Int32& exp, UInt64& man, Boolean& fFinite)
  double GetDoubleFromParts(int sign, int exp, ulong man)
  void DangerousMakeTwosComplement(UInt32[] d)
  ulong MakeUlong(UInt32 uHi, UInt32 uLo)
  UInt32 Abs(int a)
  UInt32 CombineHash(UInt32 u1, UInt32 u2)
  int CombineHash(int n1, int n2)
  int CbitHighZero(UInt32 u)
  int CbitHighZero(ulong uu)
--------------------------------------------------
Класс: System.Numerics.Hashing.HashHelpers
Наследуется от: object
Поля:
  int RandomSeed
Свойства:
Методы:
  int Combine(int h1, int h2)
  void .cctor()
--------------------------------------------------
Класс: System.Globalization.FormatProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  void FormatBigInteger(ValueStringBuilder& sb, int precision, int scale, bool sign, ReadOnlySpan`1<char> format, NumberFormatInfo numberFormatInfo, Char[] digits, int startIndex)
  bool TryStringToBigInteger(ReadOnlySpan`1<char> s, NumberStyles styles, NumberFormatInfo numberFormatInfo, StringBuilder receiver, Int32& precision, Int32& scale, Boolean& sign)
  void .ctor()
--------------------------------------------------
Класс: System.Text.ValueStringBuilder
Наследуется от: ValueType
Поля:
  Char[] _arrayToReturnToPool
  Span`1<char> _chars
  int _pos
Свойства:
  int Length
  int Capacity
  Char& Item
  Span`1<char> RawChars
Методы:
  void .ctor(Span`1<char> initialBuffer)
  int get_Length()
  void set_Length(int value)
  int get_Capacity()
  void EnsureCapacity(int capacity)
  Char& GetPinnableReference(bool terminate)
  Char& get_Item(int index)
  string ToString()
  Span`1<char> get_RawChars()
  ReadOnlySpan`1<char> AsSpan(bool terminate)
  ReadOnlySpan`1<char> AsSpan()
  ReadOnlySpan`1<char> AsSpan(int start)
  ReadOnlySpan`1<char> AsSpan(int start, int length)
  bool TryCopyTo(Span`1<char> destination, Int32& charsWritten)
  void Insert(int index, char value, int count)
  void Append(char c)
  void Append(string s)
  void AppendSlow(string s)
  void Append(char c, int count)
  void Append(Char* value, int length)
  void Append(ReadOnlySpan`1<char> value)
  Span`1<char> AppendSpan(int length)
  void GrowAndAppend(char c)
  void Grow(int requiredAdditionalCapacity)
  void Dispose()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.IntrinsicAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FriendAccessAllowedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
