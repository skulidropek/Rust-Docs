Сборка: System.ServiceModel.Internals.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: AssemblyRef
Наследуется от: object
Поля:
  string SystemConfiguration
  string System
  string EcmaPublicKey
  string FrameworkPublicKeyFull
  string FrameworkPublicKeyFull2
  string MicrosoftPublicKey
  string MicrosoftJScript
  string MicrosoftVSDesigner
  string SystemData
  string SystemDesign
  string SystemDrawing
  string SystemWeb
  string SystemWebExtensions
  string SystemWindowsForms
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string MonoCorlibVersion
  string MonoVersion
  string MonoCompany
  string MonoProduct
  string MonoCopyright
  string FxVersion
  string FxFileVersion
  string EnvironmentVersion
  string VsVersion
  string VsFileVersion
  string PublicKeyToken
  string AssemblyI18N
  string AssemblyMicrosoft_JScript
  string AssemblyMicrosoft_VisualStudio
  string AssemblyMicrosoft_VisualStudio_Web
  string AssemblyMicrosoft_VSDesigner
  string AssemblyMono_Http
  string AssemblyMono_Posix
  string AssemblyMono_Security
  string AssemblyMono_Messaging_RabbitMQ
  string AssemblyCorlib
  string AssemblySystem
  string AssemblySystem_Data
  string AssemblySystem_Design
  string AssemblySystem_DirectoryServices
  string AssemblySystem_Drawing
  string AssemblySystem_Drawing_Design
  string AssemblySystem_Messaging
  string AssemblySystem_Security
  string AssemblySystem_ServiceProcess
  string AssemblySystem_Web
  string AssemblySystem_Windows_Forms
  string AssemblySystem_2_0
  string AssemblySystemCore_3_5
  string AssemblySystem_Core
  string WindowsBase_3_0
  string AssemblyWindowsBase
  string AssemblyPresentationCore_3_5
  string AssemblyPresentationCore_4_0
  string AssemblyPresentationFramework_3_5
  string AssemblySystemServiceModel_3_0
Свойства:
Методы:
--------------------------------------------------
Класс: SR
Наследуется от: object
Поля:
Свойства:
Методы:
  string GetString(string name, Object[] args)
  string GetString(CultureInfo culture, string name, Object[] args)
  string GetString(string name)
  string GetString(CultureInfo culture, string name)
  string Format(string resourceFormat, Object[] args)
  string Format(string resourceFormat, object p1)
  string Format(string resourceFormat, object p1, object p2)
  string Format(CultureInfo ci, string resourceFormat, object p1, object p2)
  string Format(string resourceFormat, object p1, object p2, object p3)
  string GetResourceString(string str)
--------------------------------------------------
Класс: System.ServiceModel.Internals.LocalAppContextSwitches
Наследуется от: object
Поля:
  bool IncludeNullExceptionMessageInETWTrace
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.ActionItem
Наследуется от: object
Поля:
  bool isScheduled
  bool lowPriority
Свойства:
  bool LowPriority
Методы:
  void .ctor()
  bool get_LowPriority()
  void set_LowPriority(bool value)
  void Schedule(Action`1<object> callback, object state)
  void Schedule(Action`1<object> callback, object state, bool lowPriority)
  void Invoke()
  void Schedule()
  void ScheduleWithoutContext()
  void ScheduleCallback(Action`1<object> callback, object state, bool lowPriority)
  void ScheduleCallback(Action`1<object> callback)
--------------------------------------------------
Класс: System.Runtime.AssertHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  void FireAssert(string message)
--------------------------------------------------
Класс: System.Runtime.AsyncCompletionResult
Наследуется от: Enum
Поля:
  int value__
  AsyncCompletionResult Queued
  AsyncCompletionResult Completed
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.AsyncEventArgs
Наследуется от: object
Поля:
  OperationState state
  object asyncState
  AsyncEventArgsCallback callback
  Exception exception
Свойства:
  Exception Exception
  object AsyncState
  OperationState State
Методы:
  Exception get_Exception()
  object get_AsyncState()
  void set_State(OperationState value)
  void Complete(bool completedSynchronously)
  void Complete(bool completedSynchronously, Exception exception)
  void SetAsyncState(AsyncEventArgsCallback callback, object state)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.AsyncEventArgs`1
Наследуется от: AsyncEventArgs
Поля:
  TArgument <Arguments>k__BackingField
Свойства:
  TArgument Arguments
Методы:
  TArgument get_Arguments()
  void set_Arguments(TArgument value)
  void Set(AsyncEventArgsCallback callback, TArgument arguments, object state)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.AsyncEventArgs`2
Наследуется от: AsyncEventArgs`1<TArgument>
Поля:
  TResult <Result>k__BackingField
Свойства:
  TResult Result
Методы:
  TResult get_Result()
  void set_Result(TResult value)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.AsyncEventArgsCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(IAsyncEventArgs eventArgs)
  IAsyncResult BeginInvoke(IAsyncEventArgs eventArgs, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.AsyncResult
Наследуется от: object
Поля:
  AsyncCallback asyncCompletionWrapperCallback
  AsyncCallback callback
  bool completedSynchronously
  bool endCalled
  Exception exception
  bool isCompleted
  AsyncCompletion nextAsyncCompletion
  object state
  Action beforePrepareAsyncCompletionAction
  Func`2<IAsyncResult, bool> checkSyncValidationFunc
  ManualResetEvent manualResetEvent
  object thisLock
  Action`2<AsyncResult, Exception> <OnCompleting>k__BackingField
  Action`2<AsyncCallback, IAsyncResult> <VirtualCallback>k__BackingField
Свойства:
  object AsyncState
  WaitHandle AsyncWaitHandle
  bool CompletedSynchronously
  bool HasCallback
  bool IsCompleted
  Action`2<AsyncResult, Exception> OnCompleting
  object ThisLock
  Action`2<AsyncCallback, IAsyncResult> VirtualCallback
Методы:
  void .ctor(AsyncCallback callback, object state)
  object get_AsyncState()
  WaitHandle get_AsyncWaitHandle()
  bool get_CompletedSynchronously()
  bool get_HasCallback()
  bool get_IsCompleted()
  Action`2<AsyncResult, Exception> get_OnCompleting()
  void set_OnCompleting(Action`2<AsyncResult, Exception> value)
  object get_ThisLock()
  Action`2<AsyncCallback, IAsyncResult> get_VirtualCallback()
  void set_VirtualCallback(Action`2<AsyncCallback, IAsyncResult> value)
  void Complete(bool completedSynchronously)
  void Complete(bool completedSynchronously, Exception exception)
  void AsyncCompletionWrapperCallback(IAsyncResult result)
  bool OnContinueAsyncCompletion(IAsyncResult result)
  void SetBeforePrepareAsyncCompletionAction(Action beforePrepareAsyncCompletionAction)
  void SetCheckSyncValidationFunc(Func`2<IAsyncResult, bool> checkSyncValidationFunc)
  AsyncCallback PrepareAsyncCompletion(AsyncCompletion callback)
  bool CheckSyncContinue(IAsyncResult result)
  bool SyncContinue(IAsyncResult result)
  bool TryContinueHelper(IAsyncResult result, AsyncCompletion& callback)
  AsyncCompletion GetNextCompletion()
  void ThrowInvalidAsyncResult(IAsyncResult result)
  void ThrowInvalidAsyncResult(string debugText)
  TAsyncResult End(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.AsyncWaitHandle
Наследуется от: object
Поля:
  Action`1<object> timerCompleteCallback
  List`1<AsyncWaiter> asyncWaiters
  bool isSignaled
  EventResetMode resetMode
  object syncObject
  int syncWaiterCount
Свойства:
Методы:
  void .ctor()
  void .ctor(EventResetMode resetMode)
  bool WaitAsync(Action`2<object, TimeoutException> callback, object state, TimeSpan timeout)
  void OnTimerComplete(object state)
  bool Wait(TimeSpan timeout)
  void Set()
  void Reset()
--------------------------------------------------
Класс: System.Runtime.BackoffTimeoutHelper
Наследуется от: object
Поля:
  int maxSkewMilliseconds
  long maxDriftTicks
  TimeSpan defaultInitialWaitTime
  TimeSpan defaultMaxWaitTime
  DateTime deadline
  TimeSpan maxWaitTime
  TimeSpan waitTime
  IOThreadTimer backoffTimer
  Action`1<object> backoffCallback
  object backoffState
  Random random
  TimeSpan originalTimeout
Свойства:
  TimeSpan OriginalTimeout
Методы:
  void .ctor(TimeSpan timeout)
  void .ctor(TimeSpan timeout, TimeSpan maxWaitTime)
  void .ctor(TimeSpan timeout, TimeSpan maxWaitTime, TimeSpan initialWaitTime)
  TimeSpan get_OriginalTimeout()
  void Reset(TimeSpan timeout, TimeSpan initialWaitTime)
  bool IsExpired()
  void WaitAndBackoff(Action`1<object> callback, object state)
  void WaitAndBackoff()
  TimeSpan WaitTimeWithDrift()
  void Backoff()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.BufferedOutputStream
Наследуется от: Stream
Поля:
  InternalBufferManager bufferManager
  Byte[][] chunks
  int chunkCount
  Byte[] currentChunk
  int currentChunkSize
  int maxSize
  int maxSizeQuota
  int totalSize
  bool callerReturnsBuffer
  bool bufferReturned
  bool initialized
Свойства:
  bool CanRead
  bool CanSeek
  bool CanWrite
  long Length
  long Position
Методы:
  void .ctor()
  void .ctor(int initialSize, int maxSize, InternalBufferManager bufferManager)
  void .ctor(int maxSize)
  bool get_CanRead()
  bool get_CanSeek()
  bool get_CanWrite()
  long get_Length()
  long get_Position()
  void set_Position(long value)
  void Reinitialize(int initialSize, int maxSizeQuota, InternalBufferManager bufferManager)
  void Reinitialize(int initialSize, int maxSizeQuota, int effectiveMaxSize, InternalBufferManager bufferManager)
  void AllocNextChunk(int minimumChunkSize)
  IAsyncResult BeginRead(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  int EndRead(IAsyncResult result)
  IAsyncResult BeginWrite(Byte[] buffer, int offset, int size, AsyncCallback callback, object state)
  void EndWrite(IAsyncResult result)
  void Clear()
  void Close()
  void Flush()
  int Read(Byte[] buffer, int offset, int size)
  int ReadByte()
  long Seek(long offset, SeekOrigin origin)
  void SetLength(long value)
  MemoryStream ToMemoryStream()
  Byte[] ToArray(Int32& bufferSize)
  void Skip(int size)
  void Write(Byte[] buffer, int offset, int size)
  Exception CreateQuotaExceededException(int maxSizeQuota)
  void WriteCore(Byte[] buffer, int offset, int size)
  void WriteByte(byte value)
--------------------------------------------------
Класс: System.Runtime.CallbackException
Наследуется от: FatalException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.CompletedAsyncResult
Наследуется от: AsyncResult
Поля:
Свойства:
Методы:
  void .ctor(AsyncCallback callback, object state)
  void End(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.CompletedAsyncResult`1
Наследуется от: AsyncResult
Поля:
  T data
Свойства:
Методы:
  void .ctor(T data, AsyncCallback callback, object state)
  T End(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.CompletedAsyncResult`2
Наследуется от: AsyncResult
Поля:
  TResult resultData
  TParameter parameter
Свойства:
Методы:
  void .ctor(TResult resultData, TParameter parameter, AsyncCallback callback, object state)
  TResult End(IAsyncResult result, TParameter& parameter)
--------------------------------------------------
Класс: System.Runtime.ComputerNameFormat
Наследуется от: Enum
Поля:
  int value__
  ComputerNameFormat NetBIOS
  ComputerNameFormat DnsHostName
  ComputerNameFormat Dns
  ComputerNameFormat DnsFullyQualified
  ComputerNameFormat PhysicalNetBIOS
  ComputerNameFormat PhysicalDnsHostName
  ComputerNameFormat PhysicalDnsDomain
  ComputerNameFormat PhysicalDnsFullyQualified
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.DiagnosticStrings
Наследуется от: object
Поля:
  string AppDomain
  string ChannelTag
  string Description
  string DataTag
  string DataItemsTag
  string DescriptionTag
  string ExceptionTag
  string ExceptionTypeTag
  string ExceptionStringTag
  string ExtendedDataTag
  string InnerExceptionTag
  string KeyTag
  string MessageTag
  string NamespaceTag
  string NativeErrorCodeTag
  string Separator
  string SeverityTag
  string SourceTag
  string StackTraceTag
  string Task
  string TraceCodeTag
  string TraceRecordTag
  string ValueTag
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.DuplicateDetector`1
Наследуется от: object
Поля:
  LinkedList`1<T> fifoList
  Dictionary`2<T, LinkedListNode`1<T>> items
  int capacity
  object thisLock
Свойства:
Методы:
  void .ctor(int capacity)
  bool AddIfNotDuplicate(T value)
  void Add(T value)
  bool Remove(T value)
  void Clear()
--------------------------------------------------
Класс: System.Runtime.ExceptionTrace
Наследуется от: object
Поля:
  ushort FailFastEventLogCategory
  string eventSourceName
  EtwDiagnosticTrace diagnosticTrace
Свойства:
Методы:
  void .ctor(string eventSourceName, EtwDiagnosticTrace diagnosticTrace)
  void AsInformation(Exception exception)
  void AsWarning(Exception exception)
  Exception AsError(Exception exception)
  Exception AsError(Exception exception, string eventSource)
  Exception AsError(TargetInvocationException targetInvocationException, string eventSource)
  Exception AsError(AggregateException aggregateException)
  Exception AsError(AggregateException aggregateException, string eventSource)
  ArgumentException Argument(string paramName, string message)
  ArgumentNullException ArgumentNull(string paramName)
  ArgumentNullException ArgumentNull(string paramName, string message)
  ArgumentException ArgumentNullOrEmpty(string paramName)
  ArgumentOutOfRangeException ArgumentOutOfRange(string paramName, object actualValue, string message)
  ObjectDisposedException ObjectDisposed(string message)
  void TraceUnhandledException(Exception exception)
  void TraceHandledException(Exception exception, TraceEventType traceEventType)
  void TraceEtwException(Exception exception, TraceEventType eventType)
  TException TraceException(TException exception)
  TException TraceException(TException exception, string eventSource)
  void BreakOnException(Exception exception)
  void TraceFailFast(string message)
  void TraceFailFast(string message, EventLogger logger)
--------------------------------------------------
Класс: System.Runtime.FastAsyncCallback
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  void Invoke(object state, Exception asyncException)
  IAsyncResult BeginInvoke(object state, Exception asyncException, AsyncCallback callback, object object)
  void EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.FatalException
Наследуется от: SystemException
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(string message)
  void .ctor(string message, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: System.Runtime.Fx
Наследуется от: object
Поля:
  string defaultEventSource
  ExceptionTrace exceptionTrace
  EtwDiagnosticTrace diagnosticTrace
  ExceptionHandler asynchronousThreadExceptionHandler
Свойства:
  ExceptionTrace Exception
  EtwDiagnosticTrace Trace
  ExceptionHandler AsynchronousThreadExceptionHandler
  bool AssertsFailFast
  Type[] BreakOnExceptionTypes
  bool FastDebug
  bool StealthDebugger
Методы:
  ExceptionTrace get_Exception()
  EtwDiagnosticTrace get_Trace()
  EtwDiagnosticTrace InitializeTracing()
  ExceptionHandler get_AsynchronousThreadExceptionHandler()
  void set_AsynchronousThreadExceptionHandler(ExceptionHandler value)
  void Assert(bool condition, string description)
  void Assert(string description)
  void AssertAndThrow(bool condition, string description)
  Exception AssertAndThrow(string description)
  void AssertAndThrowFatal(bool condition, string description)
  Exception AssertAndThrowFatal(string description)
  void AssertAndFailFast(bool condition, string description)
  Exception AssertAndFailFast(string description)
  bool IsFatal(Exception exception)
  bool get_AssertsFailFast()
  Type[] get_BreakOnExceptionTypes()
  bool get_FastDebug()
  bool get_StealthDebugger()
  Action`1<T1> ThunkCallback(Action`1<T1> callback)
  AsyncCallback ThunkCallback(AsyncCallback callback)
  WaitCallback ThunkCallback(WaitCallback callback)
  TimerCallback ThunkCallback(TimerCallback callback)
  WaitOrTimerCallback ThunkCallback(WaitOrTimerCallback callback)
  SendOrPostCallback ThunkCallback(SendOrPostCallback callback)
  IOCompletionCallback ThunkCallback(IOCompletionCallback callback)
  Guid CreateGuid(string guidString)
  bool TryCreateGuid(string guidString, Guid& result)
  Byte[] AllocateByteArray(int size)
  Char[] AllocateCharArray(int size)
  void TraceExceptionNoThrow(Exception exception)
  bool HandleAtThreadBase(Exception exception)
  void UpdateLevel(EtwDiagnosticTrace trace)
  void UpdateLevel()
--------------------------------------------------
Класс: System.Runtime.FxCop
Наследуется от: object
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.HashHelper
Наследуется от: object
Поля:
Свойства:
Методы:
  Byte[] ComputeHash(Byte[] buffer)
--------------------------------------------------
Класс: System.Runtime.IAsyncEventArgs
Поля:
Свойства:
  object AsyncState
  Exception Exception
Методы:
  object get_AsyncState()
  Exception get_Exception()
--------------------------------------------------
Класс: System.Runtime.IOThreadCancellationTokenSource
Наследуется от: object
Поля:
  Action`1<object> onCancel
  TimeSpan timeout
  CancellationTokenSource source
  Nullable`1<CancellationToken> token
  IOThreadTimer timer
Свойства:
  CancellationToken Token
Методы:
  void .ctor(TimeSpan timeout)
  void .ctor(int timeout)
  CancellationToken get_Token()
  void Dispose()
  void OnCancel(object obj)
  void Cancel()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.IOThreadScheduler
Наследуется от: object
Поля:
  int MaximumCapacity
  IOThreadScheduler current
  ScheduledOverlapped overlapped
  Slot[] slots
  Slot[] slotsLowPri
  int headTail
  int headTailLowPri
Свойства:
  int SlotMask
  int SlotMaskLowPri
Методы:
  void .ctor(int capacity, int capacityLowPri)
  void ScheduleCallbackNoFlow(Action`1<object> callback, object state)
  void ScheduleCallbackLowPriNoFlow(Action`1<object> callback, object state)
  bool ScheduleCallbackHelper(Action`1<object> callback, object state)
  bool ScheduleCallbackLowPriHelper(Action`1<object> callback, object state)
  void CompletionCallback(Action`1& callback, Object& state)
  bool TryCoalesce(Action`1& callback, Object& state)
  int get_SlotMask()
  int get_SlotMaskLowPri()
  void Finalize()
  void Cleanup()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.IOThreadTimer
Наследуется от: object
Поля:
  int maxSkewInMillisecondsDefault
  long systemTimeResolutionTicks
  Action`1<object> callback
  object callbackState
  long dueTime
  int index
  long maxSkew
  TimerGroup timerGroup
Свойства:
  long SystemTimeResolutionTicks
Методы:
  void .ctor(Action`1<object> callback, object callbackState, bool isTypicallyCanceledShortlyAfterBeingSet)
  void .ctor(Action`1<object> callback, object callbackState, bool isTypicallyCanceledShortlyAfterBeingSet, int maxSkewInMilliseconds)
  long get_SystemTimeResolutionTicks()
  long GetSystemTimeResolution()
  bool Cancel()
  void Set(TimeSpan timeFromNow)
  void Set(int millisecondsFromNow)
  void SetAt(long dueTime)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InputQueue`1
Наследуется от: object
Поля:
  Action`1<object> completeOutstandingReadersCallback
  Action`1<object> completeWaitersFalseCallback
  Action`1<object> completeWaitersTrueCallback
  Action`1<object> onDispatchCallback
  Action`1<object> onInvokeDequeuedCallback
  QueueState<T> queueState
  ItemQueue<T> itemQueue
  Queue`1<IQueueReader<T>> readerQueue
  List`1<IQueueWaiter<T>> waiterList
  Action`1<T> <DisposeItemCallback>k__BackingField
  Func`1<Action`2<AsyncCallback, IAsyncResult>> <AsyncCallbackGenerator>k__BackingField
Свойства:
  int PendingCount
  Action`1<T> DisposeItemCallback
  Func`1<Action`2<AsyncCallback, IAsyncResult>> AsyncCallbackGenerator
  object ThisLock
Методы:
  void .ctor()
  void .ctor(Func`1<Action`2<AsyncCallback, IAsyncResult>> asyncCallbackGenerator)
  int get_PendingCount()
  Action`1<T> get_DisposeItemCallback()
  void set_DisposeItemCallback(Action`1<T> value)
  Func`1<Action`2<AsyncCallback, IAsyncResult>> get_AsyncCallbackGenerator()
  void set_AsyncCallbackGenerator(Func`1<Action`2<AsyncCallback, IAsyncResult>> value)
  object get_ThisLock()
  IAsyncResult BeginDequeue(TimeSpan timeout, AsyncCallback callback, object state)
  IAsyncResult BeginWaitForItem(TimeSpan timeout, AsyncCallback callback, object state)
  void Close()
  T Dequeue(TimeSpan timeout)
  bool Dequeue(TimeSpan timeout, T& value)
  void Dispatch()
  bool EndDequeue(IAsyncResult result, T& value)
  T EndDequeue(IAsyncResult result)
  bool EndWaitForItem(IAsyncResult result)
  void EnqueueAndDispatch(T item)
  void EnqueueAndDispatch(T item, Action dequeuedCallback)
  void EnqueueAndDispatch(Exception exception, Action dequeuedCallback, bool canDispatchOnThisThread)
  void EnqueueAndDispatch(T item, Action dequeuedCallback, bool canDispatchOnThisThread)
  bool EnqueueWithoutDispatch(T item, Action dequeuedCallback)
  bool EnqueueWithoutDispatch(Exception exception, Action dequeuedCallback)
  void Shutdown()
  void Shutdown(Func`1<Exception> pendingExceptionGenerator)
  bool WaitForItem(TimeSpan timeout)
  void Dispose()
  void DisposeItem(Item<T> item)
  void CompleteOutstandingReadersCallback(object state)
  void CompleteWaiters(bool itemAvailable, IQueueWaiter[] waiters)
  void CompleteWaitersFalseCallback(object state)
  void CompleteWaitersLater(bool itemAvailable, IQueueWaiter[] waiters)
  void CompleteWaitersTrueCallback(object state)
  void InvokeDequeuedCallback(Action dequeuedCallback)
  void InvokeDequeuedCallbackLater(Action dequeuedCallback)
  void OnDispatchCallback(object state)
  void OnInvokeDequeuedCallback(object state)
  void EnqueueAndDispatch(Item<T> item, bool canDispatchOnThisThread)
  bool EnqueueWithoutDispatch(Item<T> item)
  void GetWaiters(IQueueWaiter[]& waiters)
  bool RemoveReader(IQueueReader<T> reader)
--------------------------------------------------
Класс: System.Runtime.InternalBufferManager
Наследуется от: object
Поля:
Свойства:
Методы:
  void .ctor()
  Byte[] TakeBuffer(int bufferSize)
  void ReturnBuffer(Byte[] buffer)
  void Clear()
  InternalBufferManager Create(long maxBufferPoolSize, int maxBufferSize)
--------------------------------------------------
Класс: System.Runtime.MruCache`2
Наследуется от: object
Поля:
  LinkedList`1<TKey> mruList
  Dictionary`2<TKey, CacheEntry<TKey, TValue>> items
  int lowWatermark
  int highWatermark
  CacheEntry<TKey, TValue> mruEntry
Свойства:
  int Count
Методы:
  void .ctor(int watermark)
  void .ctor(int lowWatermark, int highWatermark)
  void .ctor(int lowWatermark, int highWatermark, IEqualityComparer`1<TKey> comparer)
  int get_Count()
  void Add(TKey key, TValue value)
  void Clear()
  bool Remove(TKey key)
  void OnSingleItemRemoved(TValue item)
  void OnItemAgedOutOfCache(TValue item)
  bool TryGetValue(TKey key, TValue& value)
--------------------------------------------------
Класс: System.Runtime.NameGenerator
Наследуется от: object
Поля:
  NameGenerator nameGenerator
  long id
  string prefix
Свойства:
Методы:
  void .ctor()
  string Next()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.PartialTrustHelpers
Наследуется от: object
Поля:
  Type aptca
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) checkedForFullTrust
  bool inFullTrust
Свойства:
  bool ShouldFlowSecurityContext
  bool AppDomainFullyTrusted
Методы:
  bool get_ShouldFlowSecurityContext()
  bool IsInFullTrust()
  bool IsTypeAptca(Type type)
  void DemandForFullTrust()
  bool IsAssemblyAptca(Assembly assembly)
  bool IsAssemblySigned(Assembly assembly)
  bool CheckAppDomainPermissions(PermissionSet permissions)
  bool HasEtwPermissions()
  bool get_AppDomainFullyTrusted()
--------------------------------------------------
Класс: System.Runtime.ReadOnlyDictionaryInternal`2
Наследуется от: object
Поля:
  IDictionary`2<TKey, TValue> dictionary
Свойства:
  int Count
  bool IsReadOnly
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
  TValue Item
Методы:
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  int get_Count()
  bool get_IsReadOnly()
  ICollection`1<TKey> get_Keys()
  ICollection`1<TValue> get_Values()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  IDictionary`2<TKey, TValue> Create(IDictionary`2<TKey, TValue> dictionary)
  Exception CreateReadOnlyException()
  void Add(TKey key, TValue value)
  void Add(KeyValuePair`2<TKey, TValue> item)
  void Clear()
  bool Contains(KeyValuePair`2<TKey, TValue> item)
  bool ContainsKey(TKey key)
  void CopyTo(KeyValuePair`2[] array, int arrayIndex)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Remove(TKey key)
  bool Remove(KeyValuePair`2<TKey, TValue> item)
  bool TryGetValue(TKey key, TValue& value)
--------------------------------------------------
Класс: System.Runtime.ReadOnlyKeyedCollection`2
Наследуется от: ReadOnlyCollection`1<TValue>
Поля:
  KeyedCollection`2<TKey, TValue> innerCollection
Свойства:
  TValue Item
Методы:
  void .ctor(KeyedCollection`2<TKey, TValue> innerCollection)
  TValue get_Item(TKey key)
--------------------------------------------------
Класс: System.Runtime.ScheduleActionItemAsyncResult
Наследуется от: AsyncResult
Поля:
  Action`1<object> doWork
Свойства:
Методы:
  void .ctor(AsyncCallback callback, object state)
  void Schedule()
  void DoWork(object state)
  void OnDoWork()
  void End(IAsyncResult result)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.SignalGate
Наследуется от: object
Поля:
  int state
Свойства:
  bool IsLocked
  bool IsSignalled
Методы:
  void .ctor()
  bool get_IsLocked()
  bool get_IsSignalled()
  bool Signal()
  bool Unlock()
  void ThrowInvalidSignalGateState()
--------------------------------------------------
Класс: System.Runtime.SignalGate`1
Наследуется от: SignalGate
Поля:
  T result
Свойства:
Методы:
  void .ctor()
  bool Signal(T result)
  bool Unlock(T& result)
--------------------------------------------------
Класс: System.Runtime.SynchronizedPool`1
Наследуется от: object
Поля:
  int maxPendingEntries
  int maxPromotionFailures
  int maxReturnsBeforePromotion
  int maxThreadItemsPerProcessor
  Entry[] entries
  GlobalPool<T> globalPool
  int maxCount
  PendingEntry[] pending
  int promotionFailures
Свойства:
  object ThisLock
Методы:
  void .ctor(int maxCount)
  object get_ThisLock()
  void Clear()
  void HandlePromotionFailure(int thisThreadID)
  bool PromoteThread(int thisThreadID)
  void RecordReturnToGlobalPool(int thisThreadID)
  void RecordTakeFromGlobalPool(int thisThreadID)
  bool Return(T value)
  bool ReturnToPerThreadPool(int thisThreadID, T value)
  bool ReturnToGlobalPool(int thisThreadID, T value)
  T Take()
  T TakeFromPerThreadPool(int thisThreadID)
  T TakeFromGlobalPool(int thisThreadID)
--------------------------------------------------
Класс: System.Runtime.TaskExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  IAsyncResult AsAsyncResult(Task`1<T> task, AsyncCallback callback, object state)
  IAsyncResult AsAsyncResult(Task task, AsyncCallback callback, object state)
  ConfiguredTaskAwaitable SuppressContextFlow(Task task)
  ConfiguredTaskAwaitable`1<T> SuppressContextFlow(Task`1<T> task)
  ConfiguredTaskAwaitable ContinueOnCapturedContextFlow(Task task)
  ConfiguredTaskAwaitable`1<T> ContinueOnCapturedContextFlow(Task`1<T> task)
  void Wait(Task task)
  bool Wait(Task task, int millisecondsTimeout)
  bool Wait(Task task, TimeSpan timeout)
  void Wait(Task task, TimeSpan timeout, Action`3<Exception, TimeSpan, string> exceptionConverter, string operationType)
  Task`1<TBase> Upcast(Task`1<TDerived> task)
  Task`1<TBase> UpcastPrivate(Task`1<TDerived> task)
--------------------------------------------------
Класс: System.Runtime.ThreadNeutralSemaphore
Наследуется от: object
Поля:
  Action`2<object, TimeoutException> enteredAsyncCallback
  bool aborted
  Func`1<Exception> abortedExceptionGenerator
  int count
  int maxCount
  object ThisLock
  Queue`1<AsyncWaitHandle> waiters
Свойства:
  Action`2<object, TimeoutException> EnteredAsyncCallback
  Queue`1<AsyncWaitHandle> Waiters
Методы:
  void .ctor(int maxCount)
  void .ctor(int maxCount, Func`1<Exception> abortedExceptionGenerator)
  Action`2<object, TimeoutException> get_EnteredAsyncCallback()
  Queue`1<AsyncWaitHandle> get_Waiters()
  bool EnterAsync(TimeSpan timeout, FastAsyncCallback callback, object state)
  void OnEnteredAsync(object state, TimeoutException exception)
  bool TryEnter()
  void Enter(TimeSpan timeout)
  bool TryEnter(TimeSpan timeout)
  TimeoutException CreateEnterTimedOutException(TimeSpan timeout)
  Exception CreateObjectAbortedException()
  bool RemoveWaiter(AsyncWaitHandle waiter)
  AsyncWaitHandle EnterCore()
  int Exit()
  void Abort()
--------------------------------------------------
Класс: System.Runtime.Ticks
Наследуется от: object
Поля:
Свойства:
  long Now
Методы:
  long get_Now()
  long FromMilliseconds(int milliseconds)
  int ToMilliseconds(long ticks)
  long FromTimeSpan(TimeSpan duration)
  TimeSpan ToTimeSpan(long ticks)
  long Add(long firstTicks, long secondTicks)
--------------------------------------------------
Класс: System.Runtime.TimeoutHelper
Наследуется от: ValueType
Поля:
  DateTime deadline
  bool deadlineSet
  TimeSpan originalTimeout
  TimeSpan MaxWait
Свойства:
  TimeSpan OriginalTimeout
Методы:
  void .ctor(TimeSpan timeout)
  TimeSpan get_OriginalTimeout()
  bool IsTooLarge(TimeSpan timeout)
  TimeSpan FromMilliseconds(int milliseconds)
  int ToMilliseconds(TimeSpan timeout)
  TimeSpan Min(TimeSpan val1, TimeSpan val2)
  TimeSpan Add(TimeSpan timeout1, TimeSpan timeout2)
  DateTime Add(DateTime time, TimeSpan timeout)
  DateTime Subtract(DateTime time, TimeSpan timeout)
  TimeSpan Divide(TimeSpan timeout, int factor)
  TimeSpan RemainingTime()
  TimeSpan ElapsedTime()
  void SetDeadline()
  void ThrowIfNegativeArgument(TimeSpan timeout)
  void ThrowIfNegativeArgument(TimeSpan timeout, string argumentName)
  void ThrowIfNonPositiveArgument(TimeSpan timeout)
  void ThrowIfNonPositiveArgument(TimeSpan timeout, string argumentName)
  bool WaitOne(WaitHandle waitHandle, TimeSpan timeout)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.TraceChannel
Наследуется от: Enum
Поля:
  int value__
  TraceChannel Admin
  TraceChannel Operational
  TraceChannel Analytic
  TraceChannel Debug
  TraceChannel Perf
  TraceChannel Application
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.TraceEventLevel
Наследуется от: Enum
Поля:
  int value__
  TraceEventLevel LogAlways
  TraceEventLevel Critical
  TraceEventLevel Error
  TraceEventLevel Warning
  TraceEventLevel Informational
  TraceEventLevel Verbose
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.TraceEventOpcode
Наследуется от: Enum
Поля:
  int value__
  TraceEventOpcode Info
  TraceEventOpcode Start
  TraceEventOpcode Stop
  TraceEventOpcode Reply
  TraceEventOpcode Resume
  TraceEventOpcode Suspend
  TraceEventOpcode Send
  TraceEventOpcode Receive
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.TraceLevelHelper
Наследуется от: object
Поля:
  TraceEventType[] EtwLevelToTraceEventType
Свойства:
Методы:
  TraceEventType GetTraceEventType(byte level, byte opcode)
  TraceEventType GetTraceEventType(TraceEventLevel level)
  TraceEventType GetTraceEventType(byte level)
  string LookupSeverity(TraceEventLevel level, TraceEventOpcode opcode)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.TracePayload
Наследуется от: ValueType
Поля:
  string serializedException
  string eventSource
  string appDomainFriendlyName
  string extendedData
  string hostReference
Свойства:
  string SerializedException
  string EventSource
  string AppDomainFriendlyName
  string ExtendedData
  string HostReference
Методы:
  void .ctor(string serializedException, string eventSource, string appDomainFriendlyName, string extendedData, string hostReference)
  string get_SerializedException()
  string get_EventSource()
  string get_AppDomainFriendlyName()
  string get_ExtendedData()
  string get_HostReference()
--------------------------------------------------
Класс: System.Runtime.TypeHelper
Наследуется от: object
Поля:
  Type ArrayType
  Type BoolType
  Type GenericCollectionType
  Type ByteType
  Type SByteType
  Type CharType
  Type ShortType
  Type UShortType
  Type IntType
  Type UIntType
  Type LongType
  Type ULongType
  Type FloatType
  Type DoubleType
  Type DecimalType
  Type ExceptionType
  Type NullableType
  Type ObjectType
  Type StringType
  Type TypeType
  Type VoidType
Свойства:
Методы:
  bool AreTypesCompatible(object source, Type destinationType)
  bool AreTypesCompatible(Type sourceType, Type destinationType)
  bool AreReferenceTypesCompatible(Type sourceType, Type destinationType)
  IEnumerable`1<Type> GetCompatibleTypes(IEnumerable`1<Type> enumerable, Type targetType)
  bool ContainsCompatibleType(IEnumerable`1<Type> enumerable, Type targetType)
  T Convert(object source)
  IEnumerable`1<Type> GetImplementedTypes(Type type)
  void GetImplementedTypesHelper(Type type, Dictionary`2<Type, object> typesEncountered)
  bool IsImplicitNumericConversion(Type source, Type destination)
  bool IsImplicitReferenceConversion(Type sourceType, Type destinationType)
  bool IsImplicitBoxingConversion(Type sourceType, Type destinationType)
  bool IsImplicitNullableConversion(Type sourceType, Type destinationType)
  bool IsNullableType(Type type)
  bool TryNumericConversion(object source, T& result)
  object GetDefaultValueForType(Type type)
  bool IsNullableValueType(Type type)
  bool IsNonNullableValueType(Type type)
  bool ShouldFilterProperty(PropertyDescriptor property, Attribute[] attributes)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.TypedAsyncResult`1
Наследуется от: AsyncResult
Поля:
  T data
Свойства:
  T Data
Методы:
  void .ctor(AsyncCallback callback, object state)
  T get_Data()
  void Complete(T data, bool completedSynchronously)
  T End(IAsyncResult result)
--------------------------------------------------
Класс: System.Runtime.UrlUtility
Наследуется от: object
Поля:
Свойства:
Методы:
  NameValueCollection ParseQueryString(string query)
  NameValueCollection ParseQueryString(string query, Encoding encoding)
  string UrlEncode(string str)
  string UrlPathEncode(string str)
  string UrlEncode(string str, Encoding encoding)
  string UrlEncodeUnicode(string str)
  string UrlEncodeUnicodeStringToStringInternal(string s, bool ignoreAscii)
  string UrlEncodeNonAscii(string str, Encoding e)
  string UrlEncodeSpaces(string str)
  Byte[] UrlEncodeToBytes(string str, Encoding e)
  string UrlDecode(string str, Encoding e)
  Byte[] UrlEncodeBytesToBytesInternal(Byte[] bytes, int offset, int count, bool alwaysCreateReturnValue)
  bool IsNonAsciiByte(byte b)
  Byte[] UrlEncodeBytesToBytesInternalNonAscii(Byte[] bytes, int offset, int count, bool alwaysCreateReturnValue)
  string UrlDecodeStringFromStringInternal(string s, Encoding e)
  int HexToInt(char h)
  char IntToHex(int n)
  bool IsSafe(char ch)
--------------------------------------------------
Класс: System.Runtime.WaitCallbackActionItem
Наследуется от: object
Поля:
  bool <ShouldUseActivity>k__BackingField
Свойства:
  bool ShouldUseActivity
Методы:
  bool get_ShouldUseActivity()
  void set_ShouldUseActivity(bool value)
--------------------------------------------------
Класс: System.Runtime.TraceCore
Наследуется от: object
Поля:
  ResourceManager resourceManager
  CultureInfo resourceCulture
  EventDescriptor[] eventDescriptors
  object syncLock
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) eventDescriptorsCreated
Свойства:
  ResourceManager ResourceManager
  CultureInfo Culture
Методы:
  void .ctor()
  ResourceManager get_ResourceManager()
  CultureInfo get_Culture()
  void set_Culture(CultureInfo value)
  bool AppDomainUnloadIsEnabled(EtwDiagnosticTrace trace)
  void AppDomainUnload(EtwDiagnosticTrace trace, string appdomainName, string processName, string processId)
  bool HandledExceptionIsEnabled(EtwDiagnosticTrace trace)
  void HandledException(EtwDiagnosticTrace trace, string param0, Exception exception)
  bool ShipAssertExceptionMessageIsEnabled(EtwDiagnosticTrace trace)
  void ShipAssertExceptionMessage(EtwDiagnosticTrace trace, string param0)
  bool ThrowingExceptionIsEnabled(EtwDiagnosticTrace trace)
  void ThrowingException(EtwDiagnosticTrace trace, string param0, string param1, Exception exception)
  bool UnhandledExceptionIsEnabled(EtwDiagnosticTrace trace)
  void UnhandledException(EtwDiagnosticTrace trace, string param0, Exception exception)
  bool TraceCodeEventLogCriticalIsEnabled(EtwDiagnosticTrace trace)
  void TraceCodeEventLogCritical(EtwDiagnosticTrace trace, TraceRecord traceRecord)
  bool TraceCodeEventLogErrorIsEnabled(EtwDiagnosticTrace trace)
  void TraceCodeEventLogError(EtwDiagnosticTrace trace, TraceRecord traceRecord)
  bool TraceCodeEventLogInfoIsEnabled(EtwDiagnosticTrace trace)
  void TraceCodeEventLogInfo(EtwDiagnosticTrace trace, TraceRecord traceRecord)
  bool TraceCodeEventLogVerboseIsEnabled(EtwDiagnosticTrace trace)
  void TraceCodeEventLogVerbose(EtwDiagnosticTrace trace, TraceRecord traceRecord)
  bool TraceCodeEventLogWarningIsEnabled(EtwDiagnosticTrace trace)
  void TraceCodeEventLogWarning(EtwDiagnosticTrace trace, TraceRecord traceRecord)
  bool HandledExceptionWarningIsEnabled(EtwDiagnosticTrace trace)
  void HandledExceptionWarning(EtwDiagnosticTrace trace, string param0, Exception exception)
  bool BufferPoolAllocationIsEnabled(EtwDiagnosticTrace trace)
  void BufferPoolAllocation(EtwDiagnosticTrace trace, int Size)
  bool BufferPoolChangeQuotaIsEnabled(EtwDiagnosticTrace trace)
  void BufferPoolChangeQuota(EtwDiagnosticTrace trace, int PoolSize, int Delta)
  bool ActionItemScheduledIsEnabled(EtwDiagnosticTrace trace)
  void ActionItemScheduled(EtwDiagnosticTrace trace, EventTraceActivity eventTraceActivity)
  bool ActionItemCallbackInvokedIsEnabled(EtwDiagnosticTrace trace)
  void ActionItemCallbackInvoked(EtwDiagnosticTrace trace, EventTraceActivity eventTraceActivity)
  bool HandledExceptionErrorIsEnabled(EtwDiagnosticTrace trace)
  void HandledExceptionError(EtwDiagnosticTrace trace, string param0, Exception exception)
  bool HandledExceptionVerboseIsEnabled(EtwDiagnosticTrace trace)
  void HandledExceptionVerbose(EtwDiagnosticTrace trace, string param0, Exception exception)
  bool EtwUnhandledExceptionIsEnabled(EtwDiagnosticTrace trace)
  void EtwUnhandledException(EtwDiagnosticTrace trace, string param0, Exception exception)
  bool ThrowingEtwExceptionIsEnabled(EtwDiagnosticTrace trace)
  void ThrowingEtwException(EtwDiagnosticTrace trace, string param0, string param1, Exception exception)
  bool ThrowingEtwExceptionVerboseIsEnabled(EtwDiagnosticTrace trace)
  void ThrowingEtwExceptionVerbose(EtwDiagnosticTrace trace, string param0, string param1, Exception exception)
  bool ThrowingExceptionVerboseIsEnabled(EtwDiagnosticTrace trace)
  void ThrowingExceptionVerbose(EtwDiagnosticTrace trace, string param0, string param1, Exception exception)
  void CreateEventDescriptors()
  void EnsureEventDescriptors()
  bool IsEtwEventEnabled(EtwDiagnosticTrace trace, int eventIndex)
  bool WriteEtwEvent(EtwDiagnosticTrace trace, int eventIndex, EventTraceActivity eventParam0, string eventParam1, string eventParam2, string eventParam3, string eventParam4)
  bool WriteEtwEvent(EtwDiagnosticTrace trace, int eventIndex, EventTraceActivity eventParam0, string eventParam1, string eventParam2, string eventParam3)
  bool WriteEtwEvent(EtwDiagnosticTrace trace, int eventIndex, EventTraceActivity eventParam0, string eventParam1, string eventParam2)
  bool WriteEtwEvent(EtwDiagnosticTrace trace, int eventIndex, EventTraceActivity eventParam0, int eventParam1, string eventParam2)
  bool WriteEtwEvent(EtwDiagnosticTrace trace, int eventIndex, EventTraceActivity eventParam0, int eventParam1, int eventParam2, string eventParam3)
  bool WriteEtwEvent(EtwDiagnosticTrace trace, int eventIndex, EventTraceActivity eventParam0, string eventParam1)
  void WriteTraceSource(EtwDiagnosticTrace trace, int eventIndex, string description, TracePayload payload)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.InternalSR
Наследуется от: object
Поля:
  string ActionItemIsAlreadyScheduled
  string AsyncCallbackThrewException
  string AsyncResultAlreadyEnded
  string BadCopyToArray
  string BufferIsNotRightSizeForBufferManager
  string DictionaryIsReadOnly
  string InvalidAsyncResult
  string InvalidAsyncResultImplementationGeneric
  string InvalidNullAsyncResult
  string InvalidSemaphoreExit
  string KeyCollectionUpdatesNotAllowed
  string KeyNotFoundInDictionary
  string MustCancelOldTimer
  string NullKeyAlreadyPresent
  string ReadNotSupported
  string SFxTaskNotStarted
  string SeekNotSupported
  string ThreadNeutralSemaphoreAborted
  string ValueCollectionUpdatesNotAllowed
  string ValueMustBeNonNegative
Свойства:
Методы:
  string ArgumentNullOrEmpty(string paramName)
  string AsyncEventArgsCompletedTwice(Type t)
  string AsyncEventArgsCompletionPending(Type t)
  string BufferAllocationFailed(int size)
  string BufferedOutputStreamQuotaExceeded(int maxSizeQuota)
  string CannotConvertObject(object source, Type t)
  string EtwAPIMaxStringCountExceeded(object max)
  string EtwMaxNumberArgumentsExceeded(object max)
  string EtwRegistrationFailed(object arg)
  string FailFastMessage(string description)
  string InvalidAsyncResultImplementation(Type t)
  string LockTimeoutExceptionMessage(object timeout)
  string ShipAssertExceptionMessage(object description)
  string TaskTimedOutError(object timeout)
  string TimeoutInputQueueDequeue(object timeout)
  string TimeoutMustBeNonNegative(object argumentName, object timeout)
  string TimeoutMustBePositive(string argumentName, object timeout)
  string TimeoutOnOperation(object timeout)
  string AsyncResultCompletedTwice(Type t)
--------------------------------------------------
Класс: System.Runtime.Interop.SafeEventLogWriteHandle
Наследуется от: SafeHandleZeroOrMinusOneIsInvalid
Поля:
Свойства:
Методы:
  void .ctor()
  SafeEventLogWriteHandle RegisterEventSource(string uncServerName, string sourceName)
  bool DeregisterEventSource(IntPtr hEventLog)
  bool ReleaseHandle()
--------------------------------------------------
Класс: System.Runtime.Interop.UnsafeNativeMethods
Наследуется от: object
Поля:
  string KERNEL32
  string ADVAPI32
  int ERROR_INVALID_HANDLE
  int ERROR_MORE_DATA
  int ERROR_ARITHMETIC_OVERFLOW
  int ERROR_NOT_ENOUGH_MEMORY
Свойства:
Методы:
  SafeWaitHandle CreateWaitableTimer(IntPtr mustBeZero, bool manualReset, string timerName)
  bool SetWaitableTimer(SafeWaitHandle handle, Int64& dueTime, int period, IntPtr mustBeZero, IntPtr mustBeZeroAlso, bool resume)
  int QueryPerformanceCounter(Int64& time)
  UInt32 GetSystemTimeAdjustment(Int32& adjustment, UInt32& increment, UInt32& adjustmentDisabled)
  void GetSystemTimeAsFileTime(FILETIME& time)
  void GetSystemTimeAsFileTime(Int64& time)
  bool GetComputerNameEx(ComputerNameFormat nameType, StringBuilder lpBuffer, Int32& size)
  string GetComputerName(ComputerNameFormat nameType)
  bool IsDebuggerPresent()
  void DebugBreak()
  void OutputDebugString(string lpOutputString)
  UInt32 EventRegister(Guid& providerId, EtwEnableCallback enableCallback, Void* callbackContext, Int64& registrationHandle)
  UInt32 EventUnregister(long registrationHandle)
  bool EventEnabled(long registrationHandle, EventDescriptor& eventDescriptor)
  UInt32 EventWrite(long registrationHandle, EventDescriptor& eventDescriptor, UInt32 userDataCount, EventData* userData)
  UInt32 EventWriteTransfer(long registrationHandle, EventDescriptor& eventDescriptor, Guid& activityId, Guid& relatedActivityId, UInt32 userDataCount, EventData* userData)
  UInt32 EventWriteString(long registrationHandle, byte level, long keywords, Char* message)
  UInt32 EventActivityIdControl(int ControlCode, Guid& ActivityId)
  bool ReportEvent(SafeHandle hEventLog, ushort type, ushort category, UInt32 eventID, Byte[] userSID, ushort numStrings, UInt32 dataLen, HandleRef strings, Byte[] rawData)
  SafeEventLogWriteHandle RegisterEventSource(string uncServerName, string sourceName)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.ActivityControl
Наследуется от: Enum
Поля:
  UInt32 value__
  ActivityControl EVENT_ACTIVITY_CTRL_GET_ID
  ActivityControl EVENT_ACTIVITY_CTRL_SET_ID
  ActivityControl EVENT_ACTIVITY_CTRL_CREATE_ID
  ActivityControl EVENT_ACTIVITY_CTRL_GET_SET_ID
  ActivityControl EVENT_ACTIVITY_CTRL_CREATE_SET_ID
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Diagnostics.DiagnosticsEventProvider
Наследуется от: object
Поля:
  EtwEnableCallback etwCallback
  long traceRegistrationHandle
  byte currentTraceLevel
  long anyKeywordMask
  long allKeywordMask
  bool isProviderEnabled
  Guid providerId
  int isDisposed
  WriteEventErrorCode errorCode
  int basicTypeAllocationBufferSize
  int etwMaxNumberArguments
  int etwAPIMaxStringCount
  int maxEventDataDescriptors
  int traceEventMaximumSize
  int traceEventMaximumStringSize
  int WindowsVistaMajorNumber
Свойства:
Методы:
  void .ctor(Guid providerGuid)
  void EtwRegister()
  void Dispose()
  void Dispose(bool disposing)
  void Close()
  void Finalize()
  void Deregister()
  void EtwEnableCallBack(Guid& sourceId, int isEnabled, byte setLevel, long anyKeyword, long allKeyword, Void* filterData, Void* callbackContext)
  void OnControllerCommand()
  bool IsEnabled()
  bool IsEnabled(byte level, long keywords)
  bool IsEventEnabled(EventDescriptor& eventDescriptor)
  WriteEventErrorCode GetLastWriteEventError()
  void SetLastError(int error)
  string EncodeObject(Object& data, EventData* dataDescriptor, Byte* dataBuffer)
  bool WriteMessageEvent(EventTraceActivity eventTraceActivity, string eventMessage, byte eventLevel, long eventKeywords)
  bool WriteMessageEvent(EventTraceActivity eventTraceActivity, string eventMessage)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Object[] eventPayload)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string data)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, int dataCount, IntPtr data)
  bool WriteTransferEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid relatedActivityId, Object[] eventPayload)
  bool WriteTransferEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid relatedActivityId, int dataCount, IntPtr data)
  void SetActivityId(Guid& id)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.DiagnosticTraceBase
Наследуется от: object
Поля:
  string DefaultTraceListenerName
  string TraceRecordVersion
  string AppDomainFriendlyName
  ushort TracingEventLogCategory
  object thisLock
  bool tracingEnabled
  bool calledShutdown
  bool haveListeners
  SourceLevels level
  string TraceSourceName
  TraceSource traceSource
  string eventSourceName
  DateTime <LastFailure>k__BackingField
Свойства:
  DateTime LastFailure
  TraceSource TraceSource
  bool HaveListeners
  SourceLevels Level
  string EventSourceName
  bool TracingEnabled
  string ProcessName
  int ProcessId
  bool CalledShutdown
  Guid ActivityId
Методы:
  void .ctor(string traceSourceName)
  DateTime get_LastFailure()
  void set_LastFailure(DateTime value)
  void UnsafeRemoveDefaultTraceListener(TraceSource traceSource)
  TraceSource get_TraceSource()
  void set_TraceSource(TraceSource value)
  void SetTraceSource(TraceSource traceSource)
  bool get_HaveListeners()
  SourceLevels FixLevel(SourceLevels level)
  void OnSetLevel(SourceLevels level)
  void SetLevel(SourceLevels level)
  void SetLevelThreadSafe(SourceLevels level)
  SourceLevels get_Level()
  void set_Level(SourceLevels value)
  string get_EventSourceName()
  void set_EventSourceName(string value)
  bool get_TracingEnabled()
  string get_ProcessName()
  int get_ProcessId()
  bool ShouldTrace(TraceEventLevel level)
  bool ShouldTrace(TraceEventType type)
  bool ShouldTraceToTraceSource(TraceEventLevel level)
  string XmlEncode(string text)
  void AddDomainEventHandlersForCleanup()
  void ExitOrUnloadEventHandler(object sender, EventArgs e)
  void OnUnhandledException(Exception exception)
  void UnhandledExceptionHandler(object sender, UnhandledExceptionEventArgs args)
  string CreateSourceString(object source)
  string CreateDefaultSourceString(object source)
  void AddExceptionToTraceString(XmlWriter xml, Exception exception)
  string StackTraceString(Exception exception)
  void LogTraceFailure(string traceString, Exception exception)
  void OnShutdownTracing()
  void ShutdownTracing()
  bool get_CalledShutdown()
  Guid get_ActivityId()
  void set_ActivityId(Guid value)
  string LookupSeverity(TraceEventType type)
  bool IsEnabled()
  void TraceEventLogEvent(TraceEventType type, TraceRecord traceRecord)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Diagnostics.DiagnosticTraceSource
Наследуется от: TraceSource
Поля:
  string PropagateActivityValue
Свойства:
  bool PropagateActivity
Методы:
  void .ctor(string name)
  String[] GetSupportedAttributes()
  bool get_PropagateActivity()
  void set_PropagateActivity(bool value)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.DictionaryTraceRecord
Наследуется от: TraceRecord
Поля:
  IDictionary dictionary
Свойства:
  string EventId
Методы:
  void .ctor(IDictionary dictionary)
  string get_EventId()
  void WriteTo(XmlWriter xml)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EtwDiagnosticTrace
Наследуется от: DiagnosticTraceBase
Поля:
  int WindowsVistaMajorNumber
  string EventSourceVersion
  ushort TracingEventLogCategory
  int MaxExceptionStringLength
  int MaxExceptionDepth
  string DiagnosticTraceSource
  int XmlBracketsLength
  int XmlBracketsLengthForNullValue
  Guid ImmutableDefaultEtwProviderId
  Guid defaultEtwProviderId
  Hashtable etwProviderCache
  bool isVistaOrGreater
  Func`1<string> traceAnnotation
  EtwProvider etwProvider
  Guid etwProviderId
  EventDescriptor transferEventDescriptor
Свойства:
  Guid DefaultEtwProviderId
  EtwProvider EtwProvider
  bool IsEtwProviderEnabled
  Action RefreshState
  bool IsEnd2EndActivityTracingEnabled
  bool EtwTracingEnabled
Методы:
  void .cctor()
  void .ctor(string traceSourceName, Guid etwProviderId)
  Guid get_DefaultEtwProviderId()
  void set_DefaultEtwProviderId(Guid value)
  EtwProvider get_EtwProvider()
  bool get_IsEtwProviderEnabled()
  Action get_RefreshState()
  void set_RefreshState(Action value)
  bool get_IsEnd2EndActivityTracingEnabled()
  bool get_EtwTracingEnabled()
  void SetEnd2EndActivityTracingEnabled(bool isEnd2EndTracingEnabled)
  void SetAnnotation(Func`1<string> annotation)
  bool ShouldTrace(TraceEventLevel level)
  bool ShouldTraceToEtw(TraceEventLevel level)
  void Event(int eventId, TraceEventLevel traceEventLevel, TraceChannel channel, string description)
  void Event(EventDescriptor& eventDescriptor, string description)
  void SetAndTraceTransfer(Guid newId, bool emitTransfer)
  void TraceTransfer(Guid newId)
  void WriteTraceSource(EventDescriptor& eventDescriptor, string description, TracePayload payload)
  string BuildTrace(EventDescriptor& eventDescriptor, string description, TracePayload payload, string msdnTraceCode)
  void GenerateLegacyTraceCode(EventDescriptor& eventDescriptor, String& msdnTraceCode, Int32& legacyEventId)
  string GenerateMsdnTraceCode(string traceSource, string traceCodeString)
  string LookupChannel(TraceChannel traceChannel)
  TracePayload GetSerializedPayload(object source, TraceRecord traceRecord, Exception exception)
  TracePayload GetSerializedPayload(object source, TraceRecord traceRecord, Exception exception, bool getServiceReference)
  bool IsEtwEventEnabled(EventDescriptor& eventDescriptor)
  bool IsEtwEventEnabled(EventDescriptor& eventDescriptor, bool fullCheck)
  void CreateTraceSource()
  void CreateEtwProvider(Guid etwProviderId)
  EventDescriptor GetEventDescriptor(int eventId, TraceChannel channel, TraceEventLevel traceEventLevel)
  void OnShutdownTracing()
  void ShutdownTraceSource()
  void ShutdownEtwProvider()
  bool IsEnabled()
  void TraceEventLogEvent(TraceEventType type, TraceRecord traceRecord)
  void OnUnhandledException(Exception exception)
  string ExceptionToTraceString(Exception exception, int maxTraceStringLength)
  void WriteExceptionToTraceString(XmlTextWriter xml, Exception exception, int remainingLength, int remainingAllowedRecursionDepth)
  string GetInnerException(Exception exception, int remainingLength, int remainingAllowedRecursionDepth)
  string GetExceptionData(Exception exception)
  bool WriteStartElement(XmlTextWriter xml, string localName, Int32& remainingLength)
  bool WriteXmlElementString(XmlTextWriter xml, string localName, string value, Int32& remainingLength)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EtwProvider
Наследуется от: DiagnosticsEventProvider
Поля:
  Action invokeControllerCallback
  bool end2EndActivityTracingEnabled
Свойства:
  Action ControllerCallBack
  bool IsEnd2EndActivityTracingEnabled
Методы:
  void .ctor(Guid id)
  Action get_ControllerCallBack()
  void set_ControllerCallBack(Action value)
  bool get_IsEnd2EndActivityTracingEnabled()
  void OnControllerCommand()
  void SetEnd2EndActivityTracingEnabled(bool isEnd2EndActivityTracingEnabled)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, string value2, string value3)
  bool WriteTransferEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid relatedActivityId, string value1, string value2)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7, string value8)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7, string value8, string value9)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, string value2, string value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12, string value13)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, int value1)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, int value1, int value2)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, int value1, int value2, int value3)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, long value1)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, long value1, long value2)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, long value1, long value2, long value3)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12, string value13, string value14, string value15)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12, bool value13, string value14, string value15, string value16, string value17)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, string value5, string value6, string value7, string value8, string value9)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12, string value13)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, string value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12, string value13, string value14)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, Guid value1, long value2, long value3, string value4, Guid value5, string value6, string value7, string value8, string value9, string value10, string value11, string value12, string value13)
  bool WriteEvent(EventDescriptor& eventDescriptor, EventTraceActivity eventTraceActivity, string value1, long value2, string value3, string value4)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventDescriptor
Наследуется от: ValueType
Поля:
  ushort m_id
  byte m_version
  byte m_channel
  byte m_level
  byte m_opcode
  ushort m_task
  long m_keywords
Свойства:
  int EventId
  byte Version
  byte Channel
  byte Level
  byte Opcode
  int Task
  long Keywords
Методы:
  void .ctor(int id, byte version, byte channel, byte level, byte opcode, int task, long keywords)
  int get_EventId()
  byte get_Version()
  byte get_Channel()
  byte get_Level()
  byte get_Opcode()
  int get_Task()
  long get_Keywords()
  bool Equals(object obj)
  int GetHashCode()
  bool Equals(EventDescriptor other)
  bool op_Equality(EventDescriptor event1, EventDescriptor event2)
  bool op_Inequality(EventDescriptor event1, EventDescriptor event2)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventLogCategory
Наследуется от: Enum
Поля:
  ushort value__
  EventLogCategory ServiceAuthorization
  EventLogCategory MessageAuthentication
  EventLogCategory ObjectAccess
  EventLogCategory Tracing
  EventLogCategory WebHost
  EventLogCategory FailFast
  EventLogCategory MessageLogging
  EventLogCategory PerformanceCounter
  EventLogCategory Wmi
  EventLogCategory ComPlus
  EventLogCategory StateMachine
  EventLogCategory Wsat
  EventLogCategory SharingService
  EventLogCategory ListenerAdapter
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventLogEventId
Наследуется от: Enum
Поля:
  UInt32 value__
  EventLogEventId FailedToSetupTracing
  EventLogEventId FailedToInitializeTraceSource
  EventLogEventId FailFast
  EventLogEventId FailFastException
  EventLogEventId FailedToTraceEvent
  EventLogEventId FailedToTraceEventWithException
  EventLogEventId InvariantAssertionFailed
  EventLogEventId PiiLoggingOn
  EventLogEventId PiiLoggingNotAllowed
  EventLogEventId WebHostUnhandledException
  EventLogEventId WebHostHttpError
  EventLogEventId WebHostFailedToProcessRequest
  EventLogEventId WebHostFailedToListen
  EventLogEventId FailedToLogMessage
  EventLogEventId RemovedBadFilter
  EventLogEventId FailedToCreateMessageLoggingTraceSource
  EventLogEventId MessageLoggingOn
  EventLogEventId MessageLoggingOff
  EventLogEventId FailedToLoadPerformanceCounter
  EventLogEventId FailedToRemovePerformanceCounter
  EventLogEventId WmiGetObjectFailed
  EventLogEventId WmiPutInstanceFailed
  EventLogEventId WmiDeleteInstanceFailed
  EventLogEventId WmiCreateInstanceFailed
  EventLogEventId WmiExecQueryFailed
  EventLogEventId WmiExecMethodFailed
  EventLogEventId WmiRegistrationFailed
  EventLogEventId WmiUnregistrationFailed
  EventLogEventId WmiAdminTypeMismatch
  EventLogEventId WmiPropertyMissing
  EventLogEventId ComPlusServiceHostStartingServiceError
  EventLogEventId ComPlusDllHostInitializerStartingError
  EventLogEventId ComPlusTLBImportError
  EventLogEventId ComPlusInvokingMethodFailed
  EventLogEventId ComPlusInstanceCreationError
  EventLogEventId ComPlusInvokingMethodFailedMismatchedTransactions
  EventLogEventId WebHostNotLoggingInsufficientMemoryExceptionsOnActivationForNextTimeInterval
  EventLogEventId UnhandledStateMachineExceptionRecordDescription
  EventLogEventId FatalUnexpectedStateMachineEvent
  EventLogEventId ParticipantRecoveryLogEntryCorrupt
  EventLogEventId CoordinatorRecoveryLogEntryCorrupt
  EventLogEventId CoordinatorRecoveryLogEntryCreationFailure
  EventLogEventId ParticipantRecoveryLogEntryCreationFailure
  EventLogEventId ProtocolInitializationFailure
  EventLogEventId ProtocolStartFailure
  EventLogEventId ProtocolRecoveryBeginningFailure
  EventLogEventId ProtocolRecoveryCompleteFailure
  EventLogEventId TransactionBridgeRecoveryFailure
  EventLogEventId ProtocolStopFailure
  EventLogEventId NonFatalUnexpectedStateMachineEvent
  EventLogEventId PerformanceCounterInitializationFailure
  EventLogEventId ProtocolRecoveryComplete
  EventLogEventId ProtocolStopped
  EventLogEventId ThumbPrintNotFound
  EventLogEventId ThumbPrintNotValidated
  EventLogEventId SslNoPrivateKey
  EventLogEventId SslNoAccessiblePrivateKey
  EventLogEventId MissingNecessaryKeyUsage
  EventLogEventId MissingNecessaryEnhancedKeyUsage
  EventLogEventId StartErrorPublish
  EventLogEventId BindingError
  EventLogEventId LAFailedToListenForApp
  EventLogEventId UnknownListenerAdapterError
  EventLogEventId WasDisconnected
  EventLogEventId WasConnectionTimedout
  EventLogEventId ServiceStartFailed
  EventLogEventId MessageQueueDuplicatedSocketLeak
  EventLogEventId MessageQueueDuplicatedPipeLeak
  EventLogEventId SharingUnhandledException
  EventLogEventId ServiceAuthorizationSuccess
  EventLogEventId ServiceAuthorizationFailure
  EventLogEventId MessageAuthenticationSuccess
  EventLogEventId MessageAuthenticationFailure
  EventLogEventId SecurityNegotiationSuccess
  EventLogEventId SecurityNegotiationFailure
  EventLogEventId TransportAuthenticationSuccess
  EventLogEventId TransportAuthenticationFailure
  EventLogEventId ImpersonationSuccess
  EventLogEventId ImpersonationFailure
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventSeverity
Наследуется от: Enum
Поля:
  UInt32 value__
  EventSeverity Success
  EventSeverity Informational
  EventSeverity Warning
  EventSeverity Error
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventFacility
Наследуется от: Enum
Поля:
  UInt32 value__
  EventFacility Tracing
  EventFacility ServiceModel
  EventFacility TransactionBridge
  EventFacility SMSvcHost
  EventFacility InfoCards
  EventFacility SecurityAudit
Свойства:
Методы:
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventLogger
Наследуется от: object
Поля:
  int MaxEventLogsInPT
  int logCountForPT
  bool canLogEvent
  DiagnosticTraceBase diagnosticTrace
  string eventLogSourceName
  bool isInPartialTrust
Свойства:
Методы:
  void .ctor()
  void .ctor(string eventLogSourceName, DiagnosticTraceBase diagnosticTrace)
  EventLogger UnsafeCreateEventLogger(string eventLogSourceName, DiagnosticTraceBase diagnosticTrace)
  void UnsafeLogEvent(TraceEventType type, ushort eventLogCategory, UInt32 eventId, bool shouldTrace, String[] values)
  void LogEvent(TraceEventType type, ushort eventLogCategory, UInt32 eventId, bool shouldTrace, String[] values)
  void LogEvent(TraceEventType type, ushort eventLogCategory, UInt32 eventId, String[] values)
  EventLogEntryType EventLogEntryTypeFromEventType(TraceEventType type)
  void SafeLogEvent(TraceEventType type, ushort eventLogCategory, UInt32 eventId, bool shouldTrace, String[] values)
  void SafeSetLogSourceName(string eventLogSourceName)
  void SetLogSourceName(string eventLogSourceName, DiagnosticTraceBase diagnosticTrace)
  bool IsInPartialTrust()
  void UnsafeWriteEventLog(TraceEventType type, ushort eventLogCategory, UInt32 eventId, String[] logValues, Byte[] sidBA, GCHandle stringsRootHandle)
  string UnsafeGetProcessName()
  int UnsafeGetProcessId()
  string NormalizeEventLogParameter(string eventLogParameter)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Diagnostics.EventTraceActivity
Наследуется от: object
Поля:
  Guid ActivityId
  EventTraceActivity empty
Свойства:
  EventTraceActivity Empty
  string Name
Методы:
  void .ctor(bool setOnThread)
  void .ctor(Guid guid, bool setOnThread)
  EventTraceActivity get_Empty()
  string get_Name()
  EventTraceActivity GetFromThreadOrCreate(bool clearIdOnThread)
  Guid GetActivityIdFromThread()
  void SetActivityId(Guid guid)
  void SetActivityIdOnThread()
--------------------------------------------------
Класс: System.Runtime.Diagnostics.ITraceSourceStringProvider
Поля:
Свойства:
Методы:
  string GetSourceString()
--------------------------------------------------
Класс: System.Runtime.Diagnostics.PerformanceCounterNameAttribute
Наследуется от: Attribute
Поля:
  string <Name>k__BackingField
Свойства:
  string Name
Методы:
  void .ctor(string name)
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.StringTraceRecord
Наследуется от: TraceRecord
Поля:
  string elementName
  string content
Свойства:
  string EventId
Методы:
  void .ctor(string elementName, string content)
  string get_EventId()
  void WriteTo(XmlWriter writer)
--------------------------------------------------
Класс: System.Runtime.Diagnostics.TraceRecord
Наследуется от: object
Поля:
  string EventIdBase
  string NamespaceSuffix
Свойства:
  string EventId
Методы:
  string get_EventId()
  void WriteTo(XmlWriter writer)
  string BuildEventId(string eventId)
  string XmlEncode(string text)
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Collections.HopperCache
Наследуется от: object
Поля:
  int hopperSize
  bool weak
  Hashtable outstandingHopper
  Hashtable strongHopper
  Hashtable limitedHopper
  int promoting
  LastHolder mruEntry
Свойства:
Методы:
  void .ctor(int hopperSize, bool weak)
  void Add(object key, object value)
  object GetValue(object syncObject, object key)
--------------------------------------------------
Класс: System.Runtime.Collections.NullableKeyDictionary`2
Наследуется от: object
Поля:
  bool isNullKeyPresent
  TValue nullKeyValue
  IDictionary`2<TKey, TValue> innerDictionary
Свойства:
  int Count
  bool IsReadOnly
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
  TValue Item
Методы:
  void .ctor()
  int get_Count()
  bool get_IsReadOnly()
  ICollection`1<TKey> get_Keys()
  ICollection`1<TValue> get_Values()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  void Add(TKey key, TValue value)
  bool ContainsKey(TKey key)
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  void Add(KeyValuePair`2<TKey, TValue> item)
  void Clear()
  bool Contains(KeyValuePair`2<TKey, TValue> item)
  void CopyTo(KeyValuePair`2[] array, int arrayIndex)
  bool Remove(KeyValuePair`2<TKey, TValue> item)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
--------------------------------------------------
Класс: System.Runtime.Collections.ObjectCache`2
Наследуется от: object
Поля:
  int timerThreshold
  ObjectCacheSettings settings
  Dictionary`2<TKey, Item<TKey, TValue>> cacheItems
  bool idleTimeoutEnabled
  bool leaseTimeoutEnabled
  IOThreadTimer idleTimer
  Action`1<object> onIdle
  bool disposed
  Action`1<TValue> <DisposeItemCallback>k__BackingField
Свойства:
  object ThisLock
  Action`1<TValue> DisposeItemCallback
  int Count
Методы:
  void .ctor(ObjectCacheSettings settings)
  void .ctor(ObjectCacheSettings settings, IEqualityComparer`1<TKey> comparer)
  object get_ThisLock()
  Action`1<TValue> get_DisposeItemCallback()
  void set_DisposeItemCallback(Action`1<TValue> value)
  int get_Count()
  ObjectCacheItem`1<TValue> Add(TKey key, TValue value)
  ObjectCacheItem`1<TValue> Take(TKey key)
  ObjectCacheItem`1<TValue> Take(TKey key, Func`1<TValue> initializerDelegate)
  Item<TKey, TValue> InternalAdd(TKey key, TValue value)
  bool Return(TKey key, Item<TKey, TValue> cacheItem)
  void StartTimerIfNecessary()
  void OnIdle(object state)
  void Add(List`1& list, T item)
  bool ShouldPurgeItem(Item<TKey, TValue> cacheItem, DateTime now)
  void GatherExpiredItems(List`1& expiredItems, bool calledFromTimer)
  void PurgeCache(bool calledFromTimer)
  void Dispose()
--------------------------------------------------
Класс: System.Runtime.Collections.ObjectCacheItem`1
Наследуется от: object
Поля:
Свойства:
  T Value
Методы:
  T get_Value()
  bool TryAddReference()
  void ReleaseReference()
  void .ctor()
--------------------------------------------------
Класс: System.Runtime.Collections.ObjectCacheSettings
Наследуется от: object
Поля:
  int cacheLimit
  TimeSpan idleTimeout
  TimeSpan leaseTimeout
  int purgeFrequency
  int DefaultCacheLimit
  int DefaultPurgeFrequency
  TimeSpan DefaultIdleTimeout
  TimeSpan DefaultLeaseTimeout
Свойства:
  int CacheLimit
  TimeSpan IdleTimeout
  TimeSpan LeaseTimeout
  int PurgeFrequency
Методы:
  void .ctor()
  void .ctor(ObjectCacheSettings other)
  ObjectCacheSettings Clone()
  int get_CacheLimit()
  void set_CacheLimit(int value)
  TimeSpan get_IdleTimeout()
  void set_IdleTimeout(TimeSpan value)
  TimeSpan get_LeaseTimeout()
  void set_LeaseTimeout(TimeSpan value)
  int get_PurgeFrequency()
  void set_PurgeFrequency(int value)
  void .cctor()
--------------------------------------------------
Класс: System.Runtime.Collections.OrderedDictionary`2
Наследуется от: object
Поля:
  OrderedDictionary privateDictionary
Свойства:
  int Count
  bool IsReadOnly
  TValue Item
  ICollection`1<TKey> Keys
  ICollection`1<TValue> Values
  bool System.Collections.IDictionary.IsFixedSize
  bool System.Collections.IDictionary.IsReadOnly
  ICollection System.Collections.IDictionary.Keys
  ICollection System.Collections.IDictionary.Values
  object System.Collections.IDictionary.Item
  int System.Collections.ICollection.Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  void .ctor()
  void .ctor(IDictionary`2<TKey, TValue> dictionary)
  int get_Count()
  bool get_IsReadOnly()
  TValue get_Item(TKey key)
  void set_Item(TKey key, TValue value)
  ICollection`1<TKey> get_Keys()
  ICollection`1<TValue> get_Values()
  void Add(KeyValuePair`2<TKey, TValue> item)
  void Add(TKey key, TValue value)
  void Clear()
  bool Contains(KeyValuePair`2<TKey, TValue> item)
  bool ContainsKey(TKey key)
  void CopyTo(KeyValuePair`2[] array, int arrayIndex)
  IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  bool Remove(KeyValuePair`2<TKey, TValue> item)
  bool Remove(TKey key)
  bool TryGetValue(TKey key, TValue& value)
  void System.Collections.IDictionary.Add(object key, object value)
  void System.Collections.IDictionary.Clear()
  bool System.Collections.IDictionary.Contains(object key)
  IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
  bool System.Collections.IDictionary.get_IsFixedSize()
  bool System.Collections.IDictionary.get_IsReadOnly()
  ICollection System.Collections.IDictionary.get_Keys()
  void System.Collections.IDictionary.Remove(object key)
  ICollection System.Collections.IDictionary.get_Values()
  object System.Collections.IDictionary.get_Item(object key)
  void System.Collections.IDictionary.set_Item(object key, object value)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  int System.Collections.ICollection.get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
--------------------------------------------------
Класс: System.Runtime.Collections.ValidatingCollection`1
Наследуется от: Collection`1<T>
Поля:
  Action`1<T> <OnAddValidationCallback>k__BackingField
  Action <OnMutateValidationCallback>k__BackingField
Свойства:
  Action`1<T> OnAddValidationCallback
  Action OnMutateValidationCallback
Методы:
  void .ctor()
  Action`1<T> get_OnAddValidationCallback()
  void set_OnAddValidationCallback(Action`1<T> value)
  Action get_OnMutateValidationCallback()
  void set_OnMutateValidationCallback(Action value)
  void OnAdd(T item)
  void OnMutate()
  void ClearItems()
  void InsertItem(int index, T item)
  void RemoveItem(int index)
  void SetItem(int index, T item)
--------------------------------------------------
Класс: System.Runtime.CompilerServices.FriendAccessAllowedAttribute
Наследуется от: Attribute
Поля:
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=24 1812FFD58290AC7DDA7A88832F32082655D69F735E8B764AD679F9A0D19AE462
  __StaticArrayInitTypeSize=256 62E6F13B53D67FDD780E20D89A6E8EE503B197AC16AC3F1D2571C147FDD324C9
  __StaticArrayInitTypeSize=64 69B4F5E3CE230ECC9509A555D4DF97EFDCA206A15ACCD048A0729C8315C8E38E
Свойства:
Методы:
--------------------------------------------------
