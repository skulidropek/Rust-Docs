Сборка: UnityEngine.UIModule.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.ICanvasRaycastFilter
Поля:
Свойства:
Методы:
  bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
--------------------------------------------------
Класс: UnityEngine.CanvasGroup
Наследуется от: Behaviour
Поля:
Свойства:
  float alpha
  bool interactable
  bool blocksRaycasts
  bool ignoreParentGroups
Методы:
  float get_alpha()
  void set_alpha(float value)
  bool get_interactable()
  void set_interactable(bool value)
  bool get_blocksRaycasts()
  void set_blocksRaycasts(bool value)
  bool get_ignoreParentGroups()
  void set_ignoreParentGroups(bool value)
  bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
  void .ctor()
--------------------------------------------------
Класс: UnityEngine.CanvasRenderer
Наследуется от: Component
Поля:
  bool <isMask>k__BackingField
Свойства:
  bool hasPopInstruction
  int materialCount
  int popMaterialCount
  int absoluteDepth
  bool hasMoved
  bool cullTransparentMesh
  bool hasRectClipping
  int relativeDepth
  bool cull
  bool isMask
  Vector2 clippingSoftness
Методы:
  bool get_hasPopInstruction()
  void set_hasPopInstruction(bool value)
  int get_materialCount()
  void set_materialCount(int value)
  int get_popMaterialCount()
  void set_popMaterialCount(int value)
  int get_absoluteDepth()
  bool get_hasMoved()
  bool get_cullTransparentMesh()
  void set_cullTransparentMesh(bool value)
  bool get_hasRectClipping()
  int get_relativeDepth()
  bool get_cull()
  void set_cull(bool value)
  bool get_isMask()
  void set_isMask(bool value)
  void SetColor(Color color)
  Color GetColor()
  void EnableRectClipping(Rect rect)
  Vector2 get_clippingSoftness()
  void set_clippingSoftness(Vector2 value)
  void DisableRectClipping()
  void SetMaterial(Material material, int index)
  Material GetMaterial(int index)
  void SetPopMaterial(Material material, int index)
  Material GetPopMaterial(int index)
  void SetTexture(Texture texture)
  void SetAlphaTexture(Texture texture)
  void SetMesh(Mesh mesh)
  void Clear()
  float GetAlpha()
  void SetAlpha(float alpha)
  float GetInheritedAlpha()
  void SetMaterial(Material material, Texture texture)
  Material GetMaterial()
  void SplitUIVertexStreams(List`1<UIVertex> verts, List`1<Vector3> positions, List`1<Color32> colors, List`1<Vector4> uv0S, List`1<Vector4> uv1S, List`1<Vector3> normals, List`1<Vector4> tangents, List`1<int> indices)
  void SplitUIVertexStreams(List`1<UIVertex> verts, List`1<Vector3> positions, List`1<Color32> colors, List`1<Vector4> uv0S, List`1<Vector4> uv1S, List`1<Vector4> uv2S, List`1<Vector4> uv3S, List`1<Vector3> normals, List`1<Vector4> tangents, List`1<int> indices)
  void CreateUIVertexStream(List`1<UIVertex> verts, List`1<Vector3> positions, List`1<Color32> colors, List`1<Vector4> uv0S, List`1<Vector4> uv1S, List`1<Vector3> normals, List`1<Vector4> tangents, List`1<int> indices)
  void CreateUIVertexStream(List`1<UIVertex> verts, List`1<Vector3> positions, List`1<Color32> colors, List`1<Vector4> uv0S, List`1<Vector4> uv1S, List`1<Vector4> uv2S, List`1<Vector4> uv3S, List`1<Vector3> normals, List`1<Vector4> tangents, List`1<int> indices)
  void AddUIVertexStream(List`1<UIVertex> verts, List`1<Vector3> positions, List`1<Color32> colors, List`1<Vector4> uv0S, List`1<Vector4> uv1S, List`1<Vector3> normals, List`1<Vector4> tangents)
  void AddUIVertexStream(List`1<UIVertex> verts, List`1<Vector3> positions, List`1<Color32> colors, List`1<Vector4> uv0S, List`1<Vector4> uv1S, List`1<Vector4> uv2S, List`1<Vector4> uv3S, List`1<Vector3> normals, List`1<Vector4> tangents)
  void SetVertices(List`1<UIVertex> vertices)
  void SetVertices(UIVertex[] vertices, int size)
  void SplitIndicesStreamsInternal(object verts, object indices)
  void SplitUIVertexStreamsInternal(object verts, object positions, object colors, object uv0S, object uv1S, object uv2S, object uv3S, object normals, object tangents)
  void CreateUIVertexStreamInternal(object verts, object positions, object colors, object uv0S, object uv1S, object uv2S, object uv3S, object normals, object tangents, object indices)
  void .ctor()
  void SetColor_Injected(Color& color)
  void GetColor_Injected(Color& ret)
  void EnableRectClipping_Injected(Rect& rect)
  void get_clippingSoftness_Injected(Vector2& ret)
  void set_clippingSoftness_Injected(Vector2& value)
--------------------------------------------------
Класс: UnityEngine.RectTransformUtility
Наследуется от: object
Поля:
  Vector3[] s_Corners
Свойства:
Методы:
  Vector2 PixelAdjustPoint(Vector2 point, Transform elementTransform, Canvas canvas)
  Rect PixelAdjustRect(RectTransform rectTransform, Canvas canvas)
  bool PointInRectangle(Vector2 screenPoint, RectTransform rect, Camera cam, Vector4 offset)
  void .ctor()
  bool RectangleContainsScreenPoint(RectTransform rect, Vector2 screenPoint)
  bool RectangleContainsScreenPoint(RectTransform rect, Vector2 screenPoint, Camera cam)
  bool RectangleContainsScreenPoint(RectTransform rect, Vector2 screenPoint, Camera cam, Vector4 offset)
  bool ScreenPointToWorldPointInRectangle(RectTransform rect, Vector2 screenPoint, Camera cam, Vector3& worldPoint)
  bool ScreenPointToLocalPointInRectangle(RectTransform rect, Vector2 screenPoint, Camera cam, Vector2& localPoint)
  Ray ScreenPointToRay(Camera cam, Vector2 screenPos)
  Vector2 WorldToScreenPoint(Camera cam, Vector3 worldPoint)
  Bounds CalculateRelativeRectTransformBounds(Transform root, Transform child)
  Bounds CalculateRelativeRectTransformBounds(Transform trans)
  void FlipLayoutOnAxis(RectTransform rect, int axis, bool keepPositioning, bool recursive)
  void FlipLayoutAxes(RectTransform rect, bool keepPositioning, bool recursive)
  Vector2 GetTransposed(Vector2 input)
  void .cctor()
  void PixelAdjustPoint_Injected(Vector2& point, Transform elementTransform, Canvas canvas, Vector2& ret)
  void PixelAdjustRect_Injected(RectTransform rectTransform, Canvas canvas, Rect& ret)
  bool PointInRectangle_Injected(Vector2& screenPoint, RectTransform rect, Camera cam, Vector4& offset)
--------------------------------------------------
Класс: UnityEngine.RenderMode
Наследуется от: Enum
Поля:
  int value__
  RenderMode ScreenSpaceOverlay
  RenderMode ScreenSpaceCamera
  RenderMode WorldSpace
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.AdditionalCanvasShaderChannels
Наследуется от: Enum
Поля:
  int value__
  AdditionalCanvasShaderChannels None
  AdditionalCanvasShaderChannels TexCoord1
  AdditionalCanvasShaderChannels TexCoord2
  AdditionalCanvasShaderChannels TexCoord3
  AdditionalCanvasShaderChannels Normal
  AdditionalCanvasShaderChannels Tangent
Свойства:
Методы:
--------------------------------------------------
Класс: UnityEngine.Canvas
Наследуется от: Behaviour
Поля:
  WillRenderCanvases preWillRenderCanvases
  WillRenderCanvases willRenderCanvases
  Action`1<int> <externBeginRenderOverlays>k__BackingField
  Action`2<int, int> <externRenderOverlaysBefore>k__BackingField
  Action`1<int> <externEndRenderOverlays>k__BackingField
Свойства:
  RenderMode renderMode
  bool isRootCanvas
  Rect pixelRect
  float scaleFactor
  float referencePixelsPerUnit
  bool overridePixelPerfect
  bool pixelPerfect
  float planeDistance
  int renderOrder
  bool overrideSorting
  int sortingOrder
  int targetDisplay
  int sortingLayerID
  int cachedSortingLayerValue
  AdditionalCanvasShaderChannels additionalShaderChannels
  string sortingLayerName
  Canvas rootCanvas
  Vector2 renderingDisplaySize
  Action`1<int> externBeginRenderOverlays
  Action`2<int, int> externRenderOverlaysBefore
  Action`1<int> externEndRenderOverlays
  Camera worldCamera
  float normalizedSortingGridSize
  int sortingGridNormalizedSize
Методы:
  void add_preWillRenderCanvases(WillRenderCanvases value)
  void remove_preWillRenderCanvases(WillRenderCanvases value)
  void add_willRenderCanvases(WillRenderCanvases value)
  void remove_willRenderCanvases(WillRenderCanvases value)
  RenderMode get_renderMode()
  void set_renderMode(RenderMode value)
  bool get_isRootCanvas()
  Rect get_pixelRect()
  float get_scaleFactor()
  void set_scaleFactor(float value)
  float get_referencePixelsPerUnit()
  void set_referencePixelsPerUnit(float value)
  bool get_overridePixelPerfect()
  void set_overridePixelPerfect(bool value)
  bool get_pixelPerfect()
  void set_pixelPerfect(bool value)
  float get_planeDistance()
  void set_planeDistance(float value)
  int get_renderOrder()
  bool get_overrideSorting()
  void set_overrideSorting(bool value)
  int get_sortingOrder()
  void set_sortingOrder(int value)
  int get_targetDisplay()
  void set_targetDisplay(int value)
  int get_sortingLayerID()
  void set_sortingLayerID(int value)
  int get_cachedSortingLayerValue()
  AdditionalCanvasShaderChannels get_additionalShaderChannels()
  void set_additionalShaderChannels(AdditionalCanvasShaderChannels value)
  string get_sortingLayerName()
  void set_sortingLayerName(string value)
  Canvas get_rootCanvas()
  Vector2 get_renderingDisplaySize()
  Action`1<int> get_externBeginRenderOverlays()
  void set_externBeginRenderOverlays(Action`1<int> value)
  Action`2<int, int> get_externRenderOverlaysBefore()
  void set_externRenderOverlaysBefore(Action`2<int, int> value)
  Action`1<int> get_externEndRenderOverlays()
  void set_externEndRenderOverlays(Action`1<int> value)
  void SetExternalCanvasEnabled(bool enabled)
  Camera get_worldCamera()
  void set_worldCamera(Camera value)
  float get_normalizedSortingGridSize()
  void set_normalizedSortingGridSize(float value)
  int get_sortingGridNormalizedSize()
  void set_sortingGridNormalizedSize(int value)
  Material GetDefaultCanvasTextMaterial()
  Material GetDefaultCanvasMaterial()
  Material GetETC1SupportedCanvasMaterial()
  void UpdateCanvasRectTransform(bool alignWithCamera)
  void ForceUpdateCanvases()
  void SendPreWillRenderCanvases()
  void SendWillRenderCanvases()
  void BeginRenderExtraOverlays(int displayIndex)
  void RenderExtraOverlaysBefore(int displayIndex, int sortingOrder)
  void EndRenderExtraOverlays(int displayIndex)
  void .ctor()
  void get_pixelRect_Injected(Rect& ret)
  void get_renderingDisplaySize_Injected(Vector2& ret)
--------------------------------------------------
Класс: UnityEngine.UISystemProfilerApi
Наследуется от: object
Поля:
Свойства:
Методы:
  void BeginSample(SampleType type)
  void EndSample(SampleType type)
  void AddMarker(string name, Object obj)
--------------------------------------------------
