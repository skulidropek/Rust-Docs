Сборка: Unity.Burst.Cecil.dll
==================================================
Класс: <Module>
Поля:
Свойства:
Методы:
--------------------------------------------------
Класс: Consts
Наследуется от: object
Поля:
  string AssemblyName
  string PublicKey
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Disposable
Наследуется от: object
Поля:
Свойства:
Методы:
  Disposable`1<T> Owned(T value)
  Disposable`1<T> NotOwned(T value)
--------------------------------------------------
Класс: Mono.Disposable`1
Наследуется от: ValueType
Поля:
  T value
  bool owned
Свойства:
Методы:
  void .ctor(T value, bool owned)
  void Dispose()
--------------------------------------------------
Класс: Mono.Empty`1
Наследуется от: object
Поля:
  T[] Array
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Mono.ArgumentNullOrEmptyException
Наследуется от: ArgumentException
Поля:
Свойства:
Методы:
  void .ctor(string paramName)
--------------------------------------------------
Класс: Mono.TypeExtensions
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeCode GetTypeCode(Type type)
  Assembly Assembly(Type type)
  MethodBase DeclaringMethod(Type type)
  Type[] GetGenericArguments(Type type)
  bool IsGenericType(Type type)
  bool IsGenericTypeDefinition(Type type)
  bool IsValueType(Type type)
--------------------------------------------------
Класс: Mono.Security.Cryptography.CryptoConvert
Наследуется от: object
Поля:
Свойства:
Методы:
  int ToInt32LE(Byte[] bytes, int offset)
  UInt32 ToUInt32LE(Byte[] bytes, int offset)
  Byte[] Trim(Byte[] array)
  RSA FromCapiPrivateKeyBlob(Byte[] blob, int offset)
  RSA FromCapiPublicKeyBlob(Byte[] blob, int offset)
  RSA FromCapiKeyBlob(Byte[] blob)
  RSA FromCapiKeyBlob(Byte[] blob, int offset)
--------------------------------------------------
Класс: Mono.Collections.Generic.Collection`1
Наследуется от: object
Поля:
  T[] items
  int size
  int version
Свойства:
  int Count
  T Item
  int Capacity
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
  object System.Collections.IList.Item
  int System.Collections.ICollection.Count
  bool System.Collections.ICollection.IsSynchronized
  object System.Collections.ICollection.SyncRoot
Методы:
  int get_Count()
  T get_Item(int index)
  void set_Item(int index, T value)
  int get_Capacity()
  void set_Capacity(int value)
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  object System.Collections.IList.get_Item(int index)
  void System.Collections.IList.set_Item(int index, object value)
  int System.Collections.ICollection.get_Count()
  bool System.Collections.ICollection.get_IsSynchronized()
  object System.Collections.ICollection.get_SyncRoot()
  void .ctor()
  void .ctor(int capacity)
  void .ctor(ICollection`1<T> items)
  void Add(T item)
  bool Contains(T item)
  int IndexOf(T item)
  void Insert(int index, T item)
  void RemoveAt(int index)
  bool Remove(T item)
  void Clear()
  void CopyTo(T[] array, int arrayIndex)
  T[] ToArray()
  void CheckIndex(int index)
  void Shift(int start, int delta)
  void OnAdd(T item, int index)
  void OnInsert(T item, int index)
  void OnSet(T item, int index)
  void OnRemove(T item, int index)
  void OnClear()
  void Grow(int desired)
  void Resize(int new_size)
  int System.Collections.IList.Add(object value)
  void System.Collections.IList.Clear()
  bool System.Collections.IList.Contains(object value)
  int System.Collections.IList.IndexOf(object value)
  void System.Collections.IList.Insert(int index, object value)
  void System.Collections.IList.Remove(object value)
  void System.Collections.IList.RemoveAt(int index)
  void System.Collections.ICollection.CopyTo(Array array, int index)
  Enumerator<T> GetEnumerator()
  IEnumerator System.Collections.IEnumerable.GetEnumerator()
  IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
--------------------------------------------------
Класс: Mono.Collections.Generic.ReadOnlyCollection`1
Наследуется от: Collection`1<T>
Поля:
  ReadOnlyCollection`1<T> empty
Свойства:
  ReadOnlyCollection`1<T> Empty
  bool System.Collections.Generic.ICollection<T>.IsReadOnly
  bool System.Collections.IList.IsFixedSize
  bool System.Collections.IList.IsReadOnly
Методы:
  ReadOnlyCollection`1<T> get_Empty()
  bool System.Collections.Generic.ICollection<T>.get_IsReadOnly()
  bool System.Collections.IList.get_IsFixedSize()
  bool System.Collections.IList.get_IsReadOnly()
  void .ctor()
  void .ctor(T[] array)
  void .ctor(Collection`1<T> collection)
  void Initialize(T[] items, int size)
  void Grow(int desired)
  void OnAdd(T item, int index)
  void OnClear()
  void OnInsert(T item, int index)
  void OnRemove(T item, int index)
  void OnSet(T item, int index)
--------------------------------------------------
Класс: Mono.Cecil.Mixin
Наследуется от: object
Поля:
  Version ZeroVersion
  int NotResolvedMarker
  int NoDataMarker
  object NoValue
  object NotResolved
  string mscorlib
  string system_runtime
  string system_private_corelib
  string netstandard
  int TableCount
  int CodedIndexCount
Свойства:
Методы:
  bool IsNullOrEmpty(T[] self)
  bool IsNullOrEmpty(Collection`1<T> self)
  T[] Resize(T[] self, int length)
  T[] Add(T[] self, T item)
  Version CheckVersion(Version version)
  bool TryGetUniqueDocument(MethodDebugInformation info, Document& document)
  void ResolveConstant(IConstantProvider self, Object& constant, ModuleDefinition module)
  bool GetHasCustomAttributes(ICustomAttributeProvider self, ModuleDefinition module)
  Collection`1<CustomAttribute> GetCustomAttributes(ICustomAttributeProvider self, Collection`1& variable, ModuleDefinition module)
  bool ContainsGenericParameter(IGenericInstance self)
  void GenericInstanceFullName(IGenericInstance self, StringBuilder builder)
  bool GetHasGenericParameters(IGenericParameterProvider self, ModuleDefinition module)
  Collection`1<GenericParameter> GetGenericParameters(IGenericParameterProvider self, Collection`1& collection, ModuleDefinition module)
  bool GetHasMarshalInfo(IMarshalInfoProvider self, ModuleDefinition module)
  MarshalInfo GetMarshalInfo(IMarshalInfoProvider self, MarshalInfo& variable, ModuleDefinition module)
  bool GetAttributes(UInt32 self, UInt32 attributes)
  UInt32 SetAttributes(UInt32 self, UInt32 attributes, bool value)
  bool GetMaskedAttributes(UInt32 self, UInt32 mask, UInt32 attributes)
  UInt32 SetMaskedAttributes(UInt32 self, UInt32 mask, UInt32 attributes, bool value)
  bool GetAttributes(ushort self, ushort attributes)
  ushort SetAttributes(ushort self, ushort attributes, bool value)
  bool GetMaskedAttributes(ushort self, ushort mask, UInt32 attributes)
  ushort SetMaskedAttributes(ushort self, ushort mask, UInt32 attributes, bool value)
  bool HasImplicitThis(IMethodSignature self)
  void MethodSignatureFullName(IMethodSignature self, StringBuilder builder)
  void CheckModule(ModuleDefinition module)
  bool TryGetAssemblyNameReference(ModuleDefinition module, AssemblyNameReference name_reference, AssemblyNameReference& assembly_reference)
  bool Equals(Byte[] a, Byte[] b)
  bool Equals(T a, T b)
  bool Equals(AssemblyNameReference a, AssemblyNameReference b)
  ParameterDefinition GetParameter(MethodBody self, int index)
  VariableDefinition GetVariable(MethodBody self, int index)
  bool GetSemantics(MethodDefinition self, MethodSemanticsAttributes semantics)
  void SetSemantics(MethodDefinition self, MethodSemanticsAttributes semantics, bool value)
  bool IsVarArg(IMethodSignature self)
  int GetSentinelPosition(IMethodSignature self)
  void CheckName(object name)
  void CheckName(string name)
  void CheckFileName(string fileName)
  void CheckFullName(string fullName)
  void CheckStream(object stream)
  void CheckWriteSeek(Stream stream)
  void CheckReadSeek(Stream stream)
  void CheckType(object type)
  void CheckType(object type, Argument argument)
  void CheckField(object field)
  void CheckMethod(object method)
  void CheckParameters(object parameters)
  UInt32 GetTimestamp()
  bool HasImage(ModuleDefinition self)
  string GetFileName(Stream self)
  TargetRuntime ParseRuntime(string self)
  string RuntimeVersionString(TargetRuntime runtime)
  bool IsWindowsMetadata(ModuleDefinition module)
  Byte[] ReadAll(Stream self)
  void Read(object o)
  bool GetHasSecurityDeclarations(ISecurityDeclarationProvider self, ModuleDefinition module)
  Collection`1<SecurityDeclaration> GetSecurityDeclarations(ISecurityDeclarationProvider self, Collection`1& variable, ModuleDefinition module)
  TypeReference GetEnumUnderlyingType(TypeDefinition self)
  TypeDefinition GetNestedType(TypeDefinition self, string fullname)
  bool IsPrimitive(ElementType self)
  string TypeFullName(TypeReference self)
  bool IsTypeOf(TypeReference self, string namespace, string name)
  bool IsTypeSpecification(TypeReference type)
  TypeDefinition CheckedResolve(TypeReference self)
  bool TryGetCoreLibraryReference(ModuleDefinition module, AssemblyNameReference& reference)
  bool IsCoreLibrary(ModuleDefinition module)
  bool IsCoreLibrary(AssemblyNameReference reference)
  ImageDebugHeaderEntry GetCodeViewEntry(ImageDebugHeader header)
  ImageDebugHeaderEntry GetDeterministicEntry(ImageDebugHeader header)
  ImageDebugHeader AddDeterministicEntry(ImageDebugHeader header)
  ImageDebugHeaderEntry GetEmbeddedPortablePdbEntry(ImageDebugHeader header)
  ImageDebugHeaderEntry GetEntry(ImageDebugHeader header, ImageDebugType type)
  string GetPdbFileName(string assemblyFileName)
  string GetMdbFileName(string assemblyFileName)
  bool IsPortablePdb(string fileName)
  bool IsPortablePdb(Stream stream)
  UInt32 ReadCompressedUInt32(Byte[] data, Int32& position)
  MetadataToken GetMetadataToken(CodedIndex self, UInt32 data)
  UInt32 CompressMetadataToken(CodedIndex self, MetadataToken token)
  int GetSize(CodedIndex self, Func`2<Table, int> counter)
  RSA CreateRSA(StrongNameKeyPair key_pair)
  bool TryGetKeyContainer(ISerializable key_pair, Byte[]& key, String& key_container)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.ArrayDimension
Наследуется от: ValueType
Поля:
  Nullable`1<int> lower_bound
  Nullable`1<int> upper_bound
Свойства:
  Nullable`1<int> LowerBound
  Nullable`1<int> UpperBound
  bool IsSized
Методы:
  Nullable`1<int> get_LowerBound()
  void set_LowerBound(Nullable`1<int> value)
  Nullable`1<int> get_UpperBound()
  void set_UpperBound(Nullable`1<int> value)
  bool get_IsSized()
  void .ctor(Nullable`1<int> lowerBound, Nullable`1<int> upperBound)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.ArrayType
Наследуется от: TypeSpecification
Поля:
  Collection`1<ArrayDimension> dimensions
Свойства:
  Collection`1<ArrayDimension> Dimensions
  int Rank
  bool IsVector
  bool IsValueType
  string Name
  string FullName
  string Suffix
  bool IsArray
Методы:
  Collection`1<ArrayDimension> get_Dimensions()
  int get_Rank()
  bool get_IsVector()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  string get_Name()
  string get_FullName()
  string get_Suffix()
  bool get_IsArray()
  void .ctor(TypeReference type)
  void .ctor(TypeReference type, int rank)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyDefinition
Наследуется от: object
Поля:
  AssemblyNameDefinition name
  ModuleDefinition main_module
  Collection`1<ModuleDefinition> modules
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<SecurityDeclaration> security_declarations
Свойства:
  AssemblyNameDefinition Name
  string FullName
  MetadataToken MetadataToken
  Collection`1<ModuleDefinition> Modules
  ModuleDefinition MainModule
  MethodDefinition EntryPoint
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
Методы:
  AssemblyNameDefinition get_Name()
  void set_Name(AssemblyNameDefinition value)
  string get_FullName()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  Collection`1<ModuleDefinition> get_Modules()
  ModuleDefinition get_MainModule()
  MethodDefinition get_EntryPoint()
  void set_EntryPoint(MethodDefinition value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
  void .ctor()
  void Dispose()
  AssemblyDefinition CreateAssembly(AssemblyNameDefinition assemblyName, string moduleName, ModuleKind kind)
  AssemblyDefinition CreateAssembly(AssemblyNameDefinition assemblyName, string moduleName, ModuleParameters parameters)
  AssemblyDefinition ReadAssembly(string fileName)
  AssemblyDefinition ReadAssembly(string fileName, ReaderParameters parameters)
  AssemblyDefinition ReadAssembly(Stream stream)
  AssemblyDefinition ReadAssembly(Stream stream, ReaderParameters parameters)
  AssemblyDefinition ReadAssembly(ModuleDefinition module)
  void Write(string fileName)
  void Write(string fileName, WriterParameters parameters)
  void Write()
  void Write(WriterParameters parameters)
  void Write(Stream stream)
  void Write(Stream stream, WriterParameters parameters)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.AssemblyAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  AssemblyAttributes PublicKey
  AssemblyAttributes SideBySideCompatible
  AssemblyAttributes Retargetable
  AssemblyAttributes WindowsRuntime
  AssemblyAttributes DisableJITCompileOptimizer
  AssemblyAttributes EnableJITCompileTracking
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.AssemblyHashAlgorithm
Наследуется от: Enum
Поля:
  UInt32 value__
  AssemblyHashAlgorithm None
  AssemblyHashAlgorithm Reserved
  AssemblyHashAlgorithm SHA1
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.AssemblyLinkedResource
Наследуется от: Resource
Поля:
  AssemblyNameReference reference
Свойства:
  AssemblyNameReference Assembly
  ResourceType ResourceType
Методы:
  AssemblyNameReference get_Assembly()
  void set_Assembly(AssemblyNameReference value)
  ResourceType get_ResourceType()
  void .ctor(string name, ManifestResourceAttributes flags)
  void .ctor(string name, ManifestResourceAttributes flags, AssemblyNameReference reference)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyNameDefinition
Наследуется от: AssemblyNameReference
Поля:
Свойства:
  Byte[] Hash
Методы:
  Byte[] get_Hash()
  void .ctor()
  void .ctor(string name, Version version)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyNameReference
Наследуется от: object
Поля:
  string name
  string culture
  Version version
  UInt32 attributes
  Byte[] public_key
  Byte[] public_key_token
  AssemblyHashAlgorithm hash_algorithm
  Byte[] hash
  MetadataToken token
  string full_name
Свойства:
  string Name
  string Culture
  Version Version
  AssemblyAttributes Attributes
  bool HasPublicKey
  bool IsSideBySideCompatible
  bool IsRetargetable
  bool IsWindowsRuntime
  Byte[] PublicKey
  Byte[] PublicKeyToken
  MetadataScopeType MetadataScopeType
  string FullName
  AssemblyHashAlgorithm HashAlgorithm
  Byte[] Hash
  MetadataToken MetadataToken
Методы:
  string get_Name()
  void set_Name(string value)
  string get_Culture()
  void set_Culture(string value)
  Version get_Version()
  void set_Version(Version value)
  AssemblyAttributes get_Attributes()
  void set_Attributes(AssemblyAttributes value)
  bool get_HasPublicKey()
  void set_HasPublicKey(bool value)
  bool get_IsSideBySideCompatible()
  void set_IsSideBySideCompatible(bool value)
  bool get_IsRetargetable()
  void set_IsRetargetable(bool value)
  bool get_IsWindowsRuntime()
  void set_IsWindowsRuntime(bool value)
  Byte[] get_PublicKey()
  void set_PublicKey(Byte[] value)
  Byte[] get_PublicKeyToken()
  void set_PublicKeyToken(Byte[] value)
  Byte[] HashPublicKey()
  MetadataScopeType get_MetadataScopeType()
  string get_FullName()
  AssemblyNameReference Parse(string fullName)
  AssemblyHashAlgorithm get_HashAlgorithm()
  void set_HashAlgorithm(AssemblyHashAlgorithm value)
  Byte[] get_Hash()
  void set_Hash(Byte[] value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor()
  void .ctor(string name, Version version)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.ModuleReader
Наследуется от: object
Поля:
  ModuleDefinition module
Свойства:
Методы:
  void .ctor(Image image, ReadingMode mode)
  void ReadModule()
  void ReadSymbols(ModuleDefinition module)
  void ReadModuleManifest(MetadataReader reader)
  void ReadAssembly(MetadataReader reader)
  ModuleDefinition CreateModule(Image image, ReaderParameters parameters)
  void ReadSymbols(ModuleDefinition module, ReaderParameters parameters)
  void GetMetadataKind(ModuleDefinition module, ReaderParameters parameters)
  ModuleReader CreateModuleReader(Image image, ReadingMode mode)
--------------------------------------------------
Класс: Mono.Cecil.ImmediateModuleReader
Наследуется от: ModuleReader
Поля:
  bool resolve_attributes
Свойства:
Методы:
  void .ctor(Image image)
  void ReadModule()
  void ReadModule(ModuleDefinition module, bool resolve_attributes)
  void ReadTypes(Collection`1<TypeDefinition> types)
  void ReadType(TypeDefinition type)
  void ReadInterfaces(TypeDefinition type)
  void ReadGenericParameters(IGenericParameterProvider provider)
  void ReadSecurityDeclarations(ISecurityDeclarationProvider provider)
  void ReadCustomAttributes(ICustomAttributeProvider provider)
  void ReadFields(TypeDefinition type)
  void ReadMethods(TypeDefinition type)
  void ReadParameters(MethodDefinition method)
  void ReadProperties(TypeDefinition type)
  void ReadEvents(TypeDefinition type)
  void ReadSymbols(ModuleDefinition module)
  void ReadTypesSymbols(Collection`1<TypeDefinition> types, ISymbolReader symbol_reader)
  void ReadMethodsSymbols(TypeDefinition type, ISymbolReader symbol_reader)
  ModuleDefinition <ReadModule>b__2_0(ModuleDefinition module, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.DeferredModuleReader
Наследуется от: ModuleReader
Поля:
Свойства:
Методы:
  void .ctor(Image image)
  void ReadModule()
  void ReadSymbols(ModuleDefinition module)
  ModuleDefinition <ReadModule>b__1_0(ModuleDefinition module, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.MetadataReader
Наследуется от: ByteBuffer
Поля:
  Image image
  ModuleDefinition module
  MetadataSystem metadata
  CodeReader code
  IGenericContext context
  MetadataReader metadata_reader
Свойства:
Методы:
  void .ctor(ModuleDefinition module)
  void .ctor(Image image, ModuleDefinition module, MetadataReader metadata_reader)
  int GetCodedIndexSize(CodedIndex index)
  UInt32 ReadByIndexSize(int size)
  Byte[] ReadBlob()
  Byte[] ReadBlob(UInt32 signature)
  UInt32 ReadBlobIndex()
  void GetBlobView(UInt32 signature, Byte[]& blob, Int32& index, Int32& count)
  string ReadString()
  UInt32 ReadStringIndex()
  Guid ReadGuid()
  UInt32 ReadTableIndex(Table table)
  MetadataToken ReadMetadataToken(CodedIndex index)
  int MoveTo(Table table)
  bool MoveTo(Table table, UInt32 row)
  AssemblyNameDefinition ReadAssemblyNameDefinition()
  ModuleDefinition Populate(ModuleDefinition module)
  void InitializeAssemblyReferences()
  Collection`1<AssemblyNameReference> ReadAssemblyReferences()
  MethodDefinition ReadEntryPoint()
  Collection`1<ModuleDefinition> ReadModules()
  string GetModuleFileName(string name)
  void InitializeModuleReferences()
  Collection`1<ModuleReference> ReadModuleReferences()
  bool HasFileResource()
  Collection`1<Resource> ReadResources()
  Row`3<FileAttributes, string, UInt32> ReadFileRecord(UInt32 rid)
  Byte[] GetManagedResource(UInt32 offset)
  void PopulateVersionAndFlags(AssemblyNameReference name)
  void PopulateNameAndCulture(AssemblyNameReference name)
  TypeDefinitionCollection ReadTypes()
  void CompleteTypes()
  void InitializeTypeDefinitions()
  bool IsNested(TypeAttributes attributes)
  bool HasNestedTypes(TypeDefinition type)
  Collection`1<TypeDefinition> ReadNestedTypes(TypeDefinition type)
  void InitializeNestedTypes()
  void AddNestedMapping(UInt32 declaring, UInt32 nested)
  Collection`1<TValue> AddMapping(Dictionary`2<TKey, Collection`1<TValue>> cache, TKey key, TValue value)
  TypeDefinition ReadType(UInt32 rid)
  TypeDefinition GetNestedTypeDeclaringType(TypeDefinition type)
  Range ReadFieldsRange(UInt32 type_index)
  Range ReadMethodsRange(UInt32 type_index)
  Range ReadListRange(UInt32 current_index, Table current, Table target)
  Row`2<short, int> ReadTypeLayout(TypeDefinition type)
  void InitializeTypeLayouts()
  TypeReference GetTypeDefOrRef(MetadataToken token)
  TypeDefinition GetTypeDefinition(UInt32 rid)
  TypeDefinition ReadTypeDefinition(UInt32 rid)
  void InitializeTypeReferences()
  TypeReference GetTypeReference(string scope, string full_name)
  TypeReference GetTypeReference(UInt32 rid)
  TypeReference ReadTypeReference(UInt32 rid)
  IMetadataScope GetTypeReferenceScope(MetadataToken scope)
  IEnumerable`1<TypeReference> GetTypeReferences()
  TypeReference GetTypeSpecification(UInt32 rid)
  SignatureReader ReadSignature(UInt32 signature)
  bool HasInterfaces(TypeDefinition type)
  InterfaceImplementationCollection ReadInterfaces(TypeDefinition type)
  void InitializeInterfaces()
  void AddInterfaceMapping(UInt32 type, Row`2<UInt32, MetadataToken> interface)
  Collection`1<FieldDefinition> ReadFields(TypeDefinition type)
  void ReadField(UInt32 field_rid, Collection`1<FieldDefinition> fields)
  void InitializeFields()
  TypeReference ReadFieldType(UInt32 signature)
  int ReadFieldRVA(FieldDefinition field)
  Byte[] GetFieldInitializeValue(int size, UInt32 rva)
  int GetFieldTypeSize(TypeReference type)
  void InitializeFieldRVAs()
  int ReadFieldLayout(FieldDefinition field)
  void InitializeFieldLayouts()
  bool HasEvents(TypeDefinition type)
  Collection`1<EventDefinition> ReadEvents(TypeDefinition type)
  void ReadEvent(UInt32 event_rid, Collection`1<EventDefinition> events)
  void InitializeEvents()
  Range ReadEventsRange(UInt32 rid)
  bool HasProperties(TypeDefinition type)
  Collection`1<PropertyDefinition> ReadProperties(TypeDefinition type)
  void ReadProperty(UInt32 property_rid, Collection`1<PropertyDefinition> properties)
  void InitializeProperties()
  Range ReadPropertiesRange(UInt32 rid)
  MethodSemanticsAttributes ReadMethodSemantics(MethodDefinition method)
  EventDefinition GetEvent(TypeDefinition type, MetadataToken token)
  PropertyDefinition GetProperty(TypeDefinition type, MetadataToken token)
  TMember GetMember(Collection`1<TMember> members, MetadataToken token)
  void InitializeMethodSemantics()
  PropertyDefinition ReadMethods(PropertyDefinition property)
  EventDefinition ReadMethods(EventDefinition event)
  MethodSemanticsAttributes ReadAllSemantics(MethodDefinition method)
  void ReadAllSemantics(TypeDefinition type)
  Range ReadParametersRange(UInt32 method_rid)
  Collection`1<MethodDefinition> ReadMethods(TypeDefinition type)
  void ReadPointers(Table ptr, Table table, Range range, Collection`1<TMember> members, Action`2<UInt32, Collection`1<TMember>> reader)
  bool IsDeleted(IMemberDefinition member)
  void InitializeMethods()
  void ReadMethod(UInt32 method_rid, Collection`1<MethodDefinition> methods)
  void ReadParameters(MethodDefinition method, Range param_range)
  void ReadParameterPointers(MethodDefinition method, Range range)
  void ReadParameter(UInt32 param_rid, MethodDefinition method)
  void ReadMethodSignature(UInt32 signature, IMethodSignature method)
  PInvokeInfo ReadPInvokeInfo(MethodDefinition method)
  void InitializePInvokes()
  bool HasGenericParameters(IGenericParameterProvider provider)
  Collection`1<GenericParameter> ReadGenericParameters(IGenericParameterProvider provider)
  void ReadGenericParametersRange(Range range, IGenericParameterProvider provider, GenericParameterCollection generic_parameters)
  void InitializeGenericParameters()
  Dictionary`2<MetadataToken, Range[]> InitializeRanges(Table table, Func`1<MetadataToken> get_next)
  void AddRange(Dictionary`2<MetadataToken, Range[]> ranges, MetadataToken owner, Range range)
  bool HasGenericConstraints(GenericParameter generic_parameter)
  Collection`1<TypeReference> ReadGenericConstraints(GenericParameter generic_parameter)
  void InitializeGenericConstraints()
  void AddGenericConstraintMapping(UInt32 generic_parameter, MetadataToken constraint)
  bool HasOverrides(MethodDefinition method)
  Collection`1<MethodReference> ReadOverrides(MethodDefinition method)
  void InitializeOverrides()
  void AddOverrideMapping(UInt32 method_rid, MetadataToken override)
  MethodBody ReadMethodBody(MethodDefinition method)
  int ReadCodeSize(MethodDefinition method)
  CallSite ReadCallSite(MetadataToken token)
  VariableDefinitionCollection ReadVariables(MetadataToken local_var_token)
  IMetadataTokenProvider LookupToken(MetadataToken token)
  FieldDefinition GetFieldDefinition(UInt32 rid)
  FieldDefinition LookupField(UInt32 rid)
  MethodDefinition GetMethodDefinition(UInt32 rid)
  MethodDefinition LookupMethod(UInt32 rid)
  MethodSpecification GetMethodSpecification(UInt32 rid)
  MethodSpecification ReadMethodSpecSignature(UInt32 signature, MethodReference method)
  MemberReference GetMemberReference(UInt32 rid)
  MemberReference ReadMemberReference(UInt32 rid)
  MemberReference ReadTypeMemberReference(MetadataToken type, string name, UInt32 signature)
  MemberReference ReadMemberReferenceSignature(UInt32 signature, TypeReference declaring_type)
  MemberReference ReadMethodMemberReference(MetadataToken token, string name, UInt32 signature)
  void InitializeMemberReferences()
  IEnumerable`1<MemberReference> GetMemberReferences()
  void InitializeConstants()
  TypeReference ReadConstantSignature(MetadataToken token)
  object ReadConstant(IConstantProvider owner)
  object ReadConstantValue(ElementType etype, UInt32 signature)
  string ReadConstantString(UInt32 signature)
  object ReadConstantPrimitive(ElementType type, UInt32 signature)
  void InitializeCustomAttributes()
  bool HasCustomAttributes(ICustomAttributeProvider owner)
  Collection`1<CustomAttribute> ReadCustomAttributes(ICustomAttributeProvider owner)
  void ReadCustomAttributeRange(Range range, Collection`1<CustomAttribute> custom_attributes)
  int RangesSize(Range[] ranges)
  IEnumerable`1<CustomAttribute> GetCustomAttributes()
  Byte[] ReadCustomAttributeBlob(UInt32 signature)
  void ReadCustomAttributeSignature(CustomAttribute attribute)
  void InitializeMarshalInfos()
  bool HasMarshalInfo(IMarshalInfoProvider owner)
  MarshalInfo ReadMarshalInfo(IMarshalInfoProvider owner)
  void InitializeSecurityDeclarations()
  bool HasSecurityDeclarations(ISecurityDeclarationProvider owner)
  Collection`1<SecurityDeclaration> ReadSecurityDeclarations(ISecurityDeclarationProvider owner)
  void ReadSecurityDeclarationRange(Range range, Collection`1<SecurityDeclaration> security_declarations)
  Byte[] ReadSecurityDeclarationBlob(UInt32 signature)
  void ReadSecurityDeclarationSignature(SecurityDeclaration declaration)
  void ReadXmlSecurityDeclaration(UInt32 signature, SecurityDeclaration declaration)
  Collection`1<ExportedType> ReadExportedTypes()
  IMetadataScope GetExportedTypeScope(MetadataToken token)
  ModuleReference GetModuleReferenceFromFile(MetadataToken token)
  void InitializeDocuments()
  Collection`1<SequencePoint> ReadSequencePoints(MethodDefinition method)
  Document GetDocument(UInt32 rid)
  void InitializeLocalScopes()
  ScopeDebugInformation ReadScope(MethodDefinition method)
  bool AddScope(Collection`1<ScopeDebugInformation> scopes, ScopeDebugInformation scope)
  ScopeDebugInformation ReadLocalScope(Row`6<UInt32, Range, Range, UInt32, UInt32, UInt32> record)
  VariableDebugInformation ReadLocalVariable(UInt32 rid)
  ConstantDebugInformation ReadLocalConstant(UInt32 rid)
  void InitializeImportScopes()
  string ReadUTF8StringBlob(UInt32 signature)
  string ReadUnicodeStringBlob(UInt32 signature)
  string ReadStringBlob(UInt32 signature, Encoding encoding)
  ImportTarget ReadImportTarget(SignatureReader signature)
  void InitializeStateMachineMethods()
  MethodDefinition ReadStateMachineKickoffMethod(MethodDefinition method)
  void InitializeCustomDebugInformations()
  Collection`1<CustomDebugInformation> GetCustomDebugInformation(ICustomDebugInformationProvider provider)
  MetadataToken <InitializeGenericParameters>b__111_0()
  MetadataToken <InitializeCustomAttributes>b__146_0()
  MetadataToken <InitializeSecurityDeclarations>b__157_0()
--------------------------------------------------
Класс: Mono.Cecil.SignatureReader
Наследуется от: ByteBuffer
Поля:
  MetadataReader reader
  UInt32 start
  UInt32 sig_length
Свойства:
  TypeSystem TypeSystem
Методы:
  TypeSystem get_TypeSystem()
  void .ctor(UInt32 blob, MetadataReader reader)
  MetadataToken ReadTypeTokenSignature()
  GenericParameter GetGenericParameter(GenericParameterType type, UInt32 var)
  GenericParameter GetUnboundGenericParameter(GenericParameterType type, int index)
  void CheckGenericContext(IGenericParameterProvider owner, int index)
  void ReadGenericInstanceSignature(IGenericParameterProvider provider, IGenericInstance instance)
  ArrayType ReadArrayTypeSignature()
  TypeReference GetTypeDefOrRef(MetadataToken token)
  TypeReference ReadTypeSignature()
  TypeReference ReadTypeToken()
  TypeReference ReadTypeSignature(ElementType etype)
  void ReadMethodSignature(IMethodSignature method)
  object ReadConstantSignature(ElementType type)
  void ReadCustomAttributeConstructorArguments(CustomAttribute attribute, Collection`1<ParameterDefinition> parameters)
  CustomAttributeArgument ReadCustomAttributeFixedArgument(TypeReference type)
  void ReadCustomAttributeNamedArguments(ushort count, Collection`1& fields, Collection`1& properties)
  void ReadCustomAttributeNamedArgument(Collection`1& fields, Collection`1& properties)
  Collection`1<CustomAttributeNamedArgument> GetCustomAttributeNamedArgumentCollection(Collection`1& collection)
  CustomAttributeArgument ReadCustomAttributeFixedArrayArgument(ArrayType type)
  CustomAttributeArgument ReadCustomAttributeElement(TypeReference type)
  object ReadCustomAttributeElementValue(TypeReference type)
  object ReadPrimitiveValue(ElementType type)
  TypeReference GetPrimitiveType(ElementType etype)
  TypeReference ReadCustomAttributeFieldOrPropType()
  TypeReference ReadTypeReference()
  object ReadCustomAttributeEnum(TypeReference enum_type)
  SecurityAttribute ReadSecurityAttribute()
  MarshalInfo ReadMarshalInfo()
  NativeType ReadNativeType()
  VariantType ReadVariantType()
  string ReadUTF8String()
  string ReadDocumentName()
  Collection`1<SequencePoint> ReadSequencePoints(Document document)
  bool CanReadMore()
--------------------------------------------------
Класс: Mono.Cecil.ModuleWriter
Наследуется от: object
Поля:
Свойства:
Методы:
  void WriteModule(ModuleDefinition module, Disposable`1<Stream> stream, WriterParameters parameters)
  void Write(ModuleDefinition module, Disposable`1<Stream> stream, WriterParameters parameters)
  void BuildMetadata(ModuleDefinition module, MetadataBuilder metadata)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fq_name, ISymbolWriterProvider symbol_writer_provider, WriterParameters parameters)
--------------------------------------------------
Класс: Mono.Cecil.MetadataTable
Наследуется от: object
Поля:
Свойства:
  int Length
  bool IsLarge
Методы:
  int get_Length()
  bool get_IsLarge()
  void Write(TableHeapBuffer buffer)
  void Sort()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.OneRowTable`1
Наследуется от: MetadataTable
Поля:
  TRow row
Свойства:
  int Length
Методы:
  int get_Length()
  void Sort()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MetadataTable`1
Наследуется от: MetadataTable
Поля:
  TRow[] rows
  int length
Свойства:
  int Length
Методы:
  int get_Length()
  int AddRow(TRow row)
  void Grow()
  void Sort()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.SortedTable`1
Наследуется от: MetadataTable`1<TRow>
Поля:
Свойства:
Методы:
  void Sort()
  int Compare(UInt32 x, UInt32 y)
  int Compare(TRow x, TRow y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ModuleTable
Наследуется от: OneRowTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeRefTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeDefTable
Наследуется от: MetadataTable`1<Row`6<TypeAttributes, UInt32, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldTable
Наследуется от: MetadataTable`1<Row`3<FieldAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodTable
Наследуется от: MetadataTable`1<Row`6<UInt32, MethodImplAttributes, MethodAttributes, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ParamTable
Наследуется от: MetadataTable`1<Row`3<ParameterAttributes, ushort, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.InterfaceImplTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MemberRefTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ConstantTable
Наследуется от: SortedTable`1<Row`3<ElementType, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<ElementType, UInt32, UInt32> x, Row`3<ElementType, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeTable
Наследуется от: SortedTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<UInt32, UInt32, UInt32> x, Row`3<UInt32, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldMarshalTable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.DeclSecurityTable
Наследуется от: SortedTable`1<Row`3<SecurityAction, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<SecurityAction, UInt32, UInt32> x, Row`3<SecurityAction, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ClassLayoutTable
Наследуется от: SortedTable`1<Row`3<ushort, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<ushort, UInt32, UInt32> x, Row`3<ushort, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldLayoutTable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.StandAloneSigTable
Наследуется от: MetadataTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.EventMapTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.EventTable
Наследуется от: MetadataTable`1<Row`3<EventAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PropertyMapTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PropertyTable
Наследуется от: MetadataTable`1<Row`3<PropertyAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodSemanticsTable
Наследуется от: SortedTable`1<Row`3<MethodSemanticsAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`3<MethodSemanticsAttributes, UInt32, UInt32> x, Row`3<MethodSemanticsAttributes, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodImplTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ModuleRefTable
Наследуется от: MetadataTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeSpecTable
Наследуется от: MetadataTable`1<UInt32>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ImplMapTable
Наследуется от: SortedTable`1<Row`4<PInvokeAttributes, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`4<PInvokeAttributes, UInt32, UInt32, UInt32> x, Row`4<PInvokeAttributes, UInt32, UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FieldRVATable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
  int position
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.AssemblyTable
Наследуется от: OneRowTable`1<Row`9<AssemblyHashAlgorithm, ushort, ushort, ushort, ushort, AssemblyAttributes, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.AssemblyRefTable
Наследуется от: MetadataTable`1<Row`9<ushort, ushort, ushort, ushort, AssemblyAttributes, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FileTable
Наследуется от: MetadataTable`1<Row`3<FileAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ExportedTypeTable
Наследуется от: MetadataTable`1<Row`5<TypeAttributes, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ManifestResourceTable
Наследуется от: MetadataTable`1<Row`4<UInt32, ManifestResourceAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.NestedClassTable
Наследуется от: SortedTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  int Compare(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.GenericParamTable
Наследуется от: MetadataTable`1<Row`4<ushort, GenericParameterAttributes, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodSpecTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.GenericParamConstraintTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.DocumentTable
Наследуется от: MetadataTable`1<Row`4<UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodDebugInformationTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.LocalScopeTable
Наследуется от: MetadataTable`1<Row`6<UInt32, UInt32, UInt32, UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.LocalVariableTable
Наследуется от: MetadataTable`1<Row`3<VariableAttributes, ushort, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.LocalConstantTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ImportScopeTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.StateMachineMethodTable
Наследуется от: MetadataTable`1<Row`2<UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.CustomDebugInformationTable
Наследуется от: MetadataTable`1<Row`3<UInt32, UInt32, UInt32>>
Поля:
Свойства:
Методы:
  void Write(TableHeapBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MetadataBuilder
Наследуется от: object
Поля:
  ModuleDefinition module
  ISymbolWriterProvider symbol_writer_provider
  ISymbolWriter symbol_writer
  TextMap text_map
  string fq_name
  UInt32 timestamp
  Dictionary`2<Row`3<UInt32, UInt32, UInt32>, MetadataToken> type_ref_map
  Dictionary`2<UInt32, MetadataToken> type_spec_map
  Dictionary`2<Row`3<UInt32, UInt32, UInt32>, MetadataToken> member_ref_map
  Dictionary`2<Row`2<UInt32, UInt32>, MetadataToken> method_spec_map
  Collection`1<GenericParameter> generic_parameters
  CodeWriter code
  DataBuffer data
  ResourceBuffer resources
  StringHeapBuffer string_heap
  GuidHeapBuffer guid_heap
  UserStringHeapBuffer user_string_heap
  BlobHeapBuffer blob_heap
  TableHeapBuffer table_heap
  PdbHeapBuffer pdb_heap
  MetadataToken entry_point
  UInt32 type_rid
  UInt32 field_rid
  UInt32 method_rid
  UInt32 param_rid
  UInt32 property_rid
  UInt32 event_rid
  UInt32 local_variable_rid
  UInt32 local_constant_rid
  TypeRefTable type_ref_table
  TypeDefTable type_def_table
  FieldTable field_table
  MethodTable method_table
  ParamTable param_table
  InterfaceImplTable iface_impl_table
  MemberRefTable member_ref_table
  ConstantTable constant_table
  CustomAttributeTable custom_attribute_table
  DeclSecurityTable declsec_table
  StandAloneSigTable standalone_sig_table
  EventMapTable event_map_table
  EventTable event_table
  PropertyMapTable property_map_table
  PropertyTable property_table
  TypeSpecTable typespec_table
  MethodSpecTable method_spec_table
  bool portable_pdb
  MetadataBuilder metadata_builder
  DocumentTable document_table
  MethodDebugInformationTable method_debug_information_table
  LocalScopeTable local_scope_table
  LocalVariableTable local_variable_table
  LocalConstantTable local_constant_table
  ImportScopeTable import_scope_table
  StateMachineMethodTable state_machine_method_table
  CustomDebugInformationTable custom_debug_information_table
  Dictionary`2<Row`2<UInt32, UInt32>, MetadataToken> import_scope_map
  Dictionary`2<string, MetadataToken> document_map
Свойства:
Методы:
  void .ctor(ModuleDefinition module, string fq_name, UInt32 timestamp, ISymbolWriterProvider symbol_writer_provider, ISymbolWriter symbol_writer)
  void .ctor(ModuleDefinition module, PortablePdbWriterProvider writer_provider)
  TextMap CreateTextMap()
  TTable GetTable(Table table)
  UInt32 GetStringIndex(string string)
  UInt32 GetGuidIndex(Guid guid)
  UInt32 GetBlobIndex(ByteBuffer blob)
  UInt32 GetBlobIndex(Byte[] blob)
  void BuildMetadata()
  void BuildModule()
  void BuildAssembly()
  void BuildModules()
  string GetModuleFileName(string name)
  void AddAssemblyReferences()
  void AddModuleReferences()
  void AddResources()
  UInt32 AddLinkedResource(LinkedResource resource)
  UInt32 AddEmbeddedResource(EmbeddedResource resource)
  void AddExportedTypes()
  MetadataToken GetExportedTypeScope(ExportedType exported_type)
  void BuildTypes()
  void AttachTokens()
  void AttachTypeToken(TypeDefinition type)
  void AttachNestedTypesToken(TypeDefinition type)
  void AttachFieldsToken(TypeDefinition type)
  void AttachMethodsToken(TypeDefinition type)
  MetadataToken GetTypeToken(TypeReference type)
  MetadataToken GetTypeSpecToken(TypeReference type)
  MetadataToken AddTypeSpecification(TypeReference type, UInt32 row)
  MetadataToken GetTypeRefToken(TypeReference type)
  Row`3<UInt32, UInt32, UInt32> CreateTypeRefRow(TypeReference type)
  MetadataToken GetScopeToken(TypeReference type)
  UInt32 MakeCodedRID(IMetadataTokenProvider provider, CodedIndex index)
  UInt32 MakeCodedRID(MetadataToken token, CodedIndex index)
  MetadataToken AddTypeReference(TypeReference type, Row`3<UInt32, UInt32, UInt32> row)
  void AddTypes()
  void AddType(TypeDefinition type)
  void AddGenericParameters(IGenericParameterProvider owner)
  void AddGenericParameters()
  void AddConstraints(GenericParameter generic_parameter, GenericParamConstraintTable table)
  void AddInterfaces(TypeDefinition type)
  void AddLayoutInfo(TypeDefinition type)
  void AddNestedTypes(TypeDefinition type)
  void AddFields(TypeDefinition type)
  void AddField(FieldDefinition field)
  void AddFieldRVA(FieldDefinition field)
  void AddFieldLayout(FieldDefinition field)
  void AddMethods(TypeDefinition type)
  void AddMethod(MethodDefinition method)
  void AddParameters(MethodDefinition method)
  void AddPInvokeInfo(MethodDefinition method)
  void AddOverrides(MethodDefinition method)
  bool RequiresParameterRow(ParameterDefinition parameter)
  void AddParameter(ushort sequence, ParameterDefinition parameter, ParamTable table)
  void AddMarshalInfo(IMarshalInfoProvider owner)
  void AddProperties(TypeDefinition type)
  void AddProperty(PropertyDefinition property)
  void AddOtherSemantic(IMetadataTokenProvider owner, Collection`1<MethodDefinition> others)
  void AddEvents(TypeDefinition type)
  void AddEvent(EventDefinition event)
  void AddSemantic(MethodSemanticsAttributes semantics, IMetadataTokenProvider provider, MethodDefinition method)
  void AddConstant(IConstantProvider owner, TypeReference type)
  ElementType GetConstantType(TypeReference constant_type, object constant)
  ElementType GetConstantType(Type type)
  void AddCustomAttributes(ICustomAttributeProvider owner)
  void AddSecurityDeclarations(ISecurityDeclarationProvider owner)
  MetadataToken GetMemberRefToken(MemberReference member)
  Row`3<UInt32, UInt32, UInt32> CreateMemberRefRow(MemberReference member)
  MetadataToken AddMemberReference(MemberReference member, Row`3<UInt32, UInt32, UInt32> row)
  MetadataToken GetMethodSpecToken(MethodSpecification method_spec)
  void AddMethodSpecification(MethodSpecification method_spec, Row`2<UInt32, UInt32> row)
  Row`2<UInt32, UInt32> CreateMethodSpecRow(MethodSpecification method_spec)
  SignatureWriter CreateSignatureWriter()
  SignatureWriter GetMethodSpecSignature(MethodSpecification method_spec)
  UInt32 AddStandAloneSignature(UInt32 signature)
  UInt32 GetLocalVariableBlobIndex(Collection`1<VariableDefinition> variables)
  UInt32 GetCallSiteBlobIndex(CallSite call_site)
  UInt32 GetConstantTypeBlobIndex(TypeReference constant_type)
  SignatureWriter GetVariablesSignature(Collection`1<VariableDefinition> variables)
  SignatureWriter GetConstantTypeSignature(TypeReference constant_type)
  SignatureWriter GetFieldSignature(FieldReference field)
  SignatureWriter GetMethodSignature(IMethodSignature method)
  SignatureWriter GetMemberRefSignature(MemberReference member)
  SignatureWriter GetPropertySignature(PropertyDefinition property)
  SignatureWriter GetTypeSpecSignature(TypeReference type)
  SignatureWriter GetConstantSignature(ElementType type, object value)
  SignatureWriter GetCustomAttributeSignature(CustomAttribute attribute)
  SignatureWriter GetSecurityDeclarationSignature(SecurityDeclaration declaration)
  SignatureWriter GetMarshalInfoSignature(IMarshalInfoProvider owner)
  Exception CreateForeignMemberException(MemberReference member)
  MetadataToken LookupToken(IMetadataTokenProvider provider)
  void AddMethodDebugInformation(MethodDebugInformation method_info)
  void AddStateMachineMethod(MethodDebugInformation method_info)
  void AddLocalScope(MethodDebugInformation method_info, ScopeDebugInformation scope)
  void AddLocalVariables(ScopeDebugInformation scope)
  void AddLocalConstants(ScopeDebugInformation scope)
  SignatureWriter GetConstantSignature(ConstantDebugInformation constant)
  void AddCustomDebugInformations(ICustomDebugInformationProvider provider)
  void AddStateMachineScopeDebugInformation(ICustomDebugInformationProvider provider, StateMachineScopeDebugInformation state_machine_scope)
  void AddAsyncMethodBodyDebugInformation(ICustomDebugInformationProvider provider, AsyncMethodBodyDebugInformation async_method)
  void AddEmbeddedSourceDebugInformation(ICustomDebugInformationProvider provider, EmbeddedSourceDebugInformation embedded_source)
  void AddSourceLinkDebugInformation(ICustomDebugInformationProvider provider, SourceLinkDebugInformation source_link)
  void AddCustomDebugInformation(ICustomDebugInformationProvider provider, CustomDebugInformation custom_info, SignatureWriter signature)
  void AddCustomDebugInformation(ICustomDebugInformationProvider provider, CustomDebugInformation custom_info, UInt32 blob_index)
  UInt32 AddImportScope(ImportDebugInformation import)
  void AddImportTarget(ImportTarget target, SignatureWriter signature)
  UInt32 GetUTF8StringBlobIndex(string s)
  MetadataToken GetDocumentToken(Document document)
  SignatureWriter GetDocumentNameSignature(Document document)
  bool TryGetDocumentNameSeparator(string path, Char& separator)
  void AddSequencePoints(MethodDebugInformation info)
--------------------------------------------------
Класс: Mono.Cecil.SignatureWriter
Наследуется от: ByteBuffer
Поля:
  MetadataBuilder metadata
Свойства:
Методы:
  void .ctor(MetadataBuilder metadata)
  void WriteElementType(ElementType element_type)
  void WriteUTF8String(string string)
  void WriteMethodSignature(IMethodSignature method)
  UInt32 MakeTypeDefOrRefCodedRID(TypeReference type)
  void WriteTypeToken(TypeReference type)
  void WriteTypeSignature(TypeReference type)
  void WriteArrayTypeSignature(ArrayType array)
  void WriteGenericInstanceSignature(IGenericInstance instance)
  void WriteModifierSignature(ElementType element_type, IModifierType type)
  bool TryWriteElementType(TypeReference type)
  void WriteConstantString(string value)
  void WriteConstantPrimitive(object value)
  void WriteCustomAttributeConstructorArguments(CustomAttribute attribute)
  void WriteCustomAttributeFixedArgument(TypeReference type, CustomAttributeArgument argument)
  void WriteCustomAttributeFixedArrayArgument(ArrayType type, CustomAttributeArgument argument)
  void WriteCustomAttributeElement(TypeReference type, CustomAttributeArgument argument)
  void WriteCustomAttributeValue(TypeReference type, object value)
  void WritePrimitiveValue(object value)
  void WriteCustomAttributeEnumValue(TypeReference enum_type, object value)
  void WriteCustomAttributeFieldOrPropType(TypeReference type)
  void WriteCustomAttributeNamedArguments(CustomAttribute attribute)
  int GetNamedArgumentCount(ICustomAttribute attribute)
  void WriteICustomAttributeNamedArguments(ICustomAttribute attribute)
  void WriteCustomAttributeNamedArguments(byte kind, Collection`1<CustomAttributeNamedArgument> named_arguments)
  void WriteCustomAttributeNamedArgument(byte kind, CustomAttributeNamedArgument named_argument)
  void WriteSecurityAttribute(SecurityAttribute attribute)
  void WriteSecurityDeclaration(SecurityDeclaration declaration)
  void WriteXmlSecurityDeclaration(SecurityDeclaration declaration)
  string GetXmlSecurityDeclaration(SecurityDeclaration declaration)
  void WriteTypeReference(TypeReference type)
  void WriteMarshalInfo(MarshalInfo marshal_info)
  void WriteNativeType(NativeType native)
  void WriteVariantType(VariantType variant)
  void WriteSequencePoints(MethodDebugInformation info)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyResolveEventHandler
Наследуется от: MulticastDelegate
Поля:
Свойства:
Методы:
  void .ctor(object object, IntPtr method)
  AssemblyDefinition Invoke(object sender, AssemblyNameReference reference)
  IAsyncResult BeginInvoke(object sender, AssemblyNameReference reference, AsyncCallback callback, object object)
  AssemblyDefinition EndInvoke(IAsyncResult result)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyResolveEventArgs
Наследуется от: EventArgs
Поля:
  AssemblyNameReference reference
Свойства:
  AssemblyNameReference AssemblyReference
Методы:
  AssemblyNameReference get_AssemblyReference()
  void .ctor(AssemblyNameReference reference)
--------------------------------------------------
Класс: Mono.Cecil.AssemblyResolutionException
Наследуется от: FileNotFoundException
Поля:
  AssemblyNameReference reference
Свойства:
  AssemblyNameReference AssemblyReference
Методы:
  AssemblyNameReference get_AssemblyReference()
  void .ctor(AssemblyNameReference reference)
  void .ctor(AssemblyNameReference reference, Exception innerException)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: Mono.Cecil.BaseAssemblyResolver
Наследуется от: object
Поля:
  bool on_mono
  Collection`1<string> directories
  Collection`1<string> gac_paths
  AssemblyResolveEventHandler ResolveFailure
Свойства:
Методы:
  void AddSearchDirectory(string directory)
  void RemoveSearchDirectory(string directory)
  String[] GetSearchDirectories()
  void add_ResolveFailure(AssemblyResolveEventHandler value)
  void remove_ResolveFailure(AssemblyResolveEventHandler value)
  void .ctor()
  AssemblyDefinition GetAssembly(string file, ReaderParameters parameters)
  AssemblyDefinition Resolve(AssemblyNameReference name)
  AssemblyDefinition Resolve(AssemblyNameReference name, ReaderParameters parameters)
  AssemblyDefinition SearchDirectory(AssemblyNameReference name, IEnumerable`1<string> directories, ReaderParameters parameters)
  bool IsZero(Version version)
  AssemblyDefinition GetCorlib(AssemblyNameReference reference, ReaderParameters parameters)
  Collection`1<string> GetGacPaths()
  Collection`1<string> GetDefaultMonoGacPaths()
  string GetCurrentMonoGac()
  AssemblyDefinition GetAssemblyInGac(AssemblyNameReference reference, ReaderParameters parameters)
  AssemblyDefinition GetAssemblyInMonoGac(AssemblyNameReference reference, ReaderParameters parameters)
  AssemblyDefinition GetAssemblyInNetGac(AssemblyNameReference reference, ReaderParameters parameters)
  string GetAssemblyFile(AssemblyNameReference reference, string prefix, string gac)
  void Dispose()
  void Dispose(bool disposing)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.CallSite
Наследуется от: object
Поля:
  MethodReference signature
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
  string Name
  string Namespace
  ModuleDefinition Module
  IMetadataScope Scope
  MetadataToken MetadataToken
  string FullName
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  ModuleDefinition get_Module()
  IMetadataScope get_Scope()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  string get_FullName()
  void .ctor()
  void .ctor(TypeReference returnType)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeArgument
Наследуется от: ValueType
Поля:
  TypeReference type
  object value
Свойства:
  TypeReference Type
  object Value
Методы:
  TypeReference get_Type()
  object get_Value()
  void .ctor(TypeReference type, object value)
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeNamedArgument
Наследуется от: ValueType
Поля:
  string name
  CustomAttributeArgument argument
Свойства:
  string Name
  CustomAttributeArgument Argument
Методы:
  string get_Name()
  CustomAttributeArgument get_Argument()
  void .ctor(string name, CustomAttributeArgument argument)
--------------------------------------------------
Класс: Mono.Cecil.ICustomAttribute
Поля:
Свойства:
  TypeReference AttributeType
  bool HasFields
  bool HasProperties
  Collection`1<CustomAttributeNamedArgument> Fields
  Collection`1<CustomAttributeNamedArgument> Properties
Методы:
  TypeReference get_AttributeType()
  bool get_HasFields()
  bool get_HasProperties()
  Collection`1<CustomAttributeNamedArgument> get_Fields()
  Collection`1<CustomAttributeNamedArgument> get_Properties()
--------------------------------------------------
Класс: Mono.Cecil.CustomAttribute
Наследуется от: object
Поля:
  CustomAttributeValueProjection projection
  UInt32 signature
  bool resolved
  MethodReference constructor
  Byte[] blob
  Collection`1<CustomAttributeArgument> arguments
  Collection`1<CustomAttributeNamedArgument> fields
  Collection`1<CustomAttributeNamedArgument> properties
Свойства:
  MethodReference Constructor
  TypeReference AttributeType
  bool IsResolved
  bool HasConstructorArguments
  Collection`1<CustomAttributeArgument> ConstructorArguments
  bool HasFields
  Collection`1<CustomAttributeNamedArgument> Fields
  bool HasProperties
  Collection`1<CustomAttributeNamedArgument> Properties
  bool HasImage
  ModuleDefinition Module
Методы:
  MethodReference get_Constructor()
  void set_Constructor(MethodReference value)
  TypeReference get_AttributeType()
  bool get_IsResolved()
  bool get_HasConstructorArguments()
  Collection`1<CustomAttributeArgument> get_ConstructorArguments()
  bool get_HasFields()
  Collection`1<CustomAttributeNamedArgument> get_Fields()
  bool get_HasProperties()
  Collection`1<CustomAttributeNamedArgument> get_Properties()
  bool get_HasImage()
  ModuleDefinition get_Module()
  void .ctor(UInt32 signature, MethodReference constructor)
  void .ctor(MethodReference constructor)
  void .ctor(MethodReference constructor, Byte[] blob)
  Byte[] GetBlob()
  void Resolve()
  CustomAttribute <Resolve>b__35_0(CustomAttribute attribute, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.DefaultAssemblyResolver
Наследуется от: BaseAssemblyResolver
Поля:
  IDictionary`2<string, AssemblyDefinition> cache
Свойства:
Методы:
  void .ctor()
  AssemblyDefinition Resolve(AssemblyNameReference name)
  void RegisterAssembly(AssemblyDefinition assembly)
  void Dispose(bool disposing)
--------------------------------------------------
Класс: Mono.Cecil.EmbeddedResource
Наследуется от: Resource
Поля:
  MetadataReader reader
  Nullable`1<UInt32> offset
  Byte[] data
  Stream stream
Свойства:
  ResourceType ResourceType
Методы:
  ResourceType get_ResourceType()
  void .ctor(string name, ManifestResourceAttributes attributes, Byte[] data)
  void .ctor(string name, ManifestResourceAttributes attributes, Stream stream)
  void .ctor(string name, ManifestResourceAttributes attributes, UInt32 offset, MetadataReader reader)
  Stream GetResourceStream()
  Byte[] GetResourceData()
  Byte[] ReadStream(Stream stream)
--------------------------------------------------
Класс: Mono.Cecil.EventAttributes
Наследуется от: Enum
Поля:
  ushort value__
  EventAttributes None
  EventAttributes SpecialName
  EventAttributes RTSpecialName
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.EventDefinition
Наследуется от: EventReference
Поля:
  ushort attributes
  Collection`1<CustomAttribute> custom_attributes
  MethodDefinition add_method
  MethodDefinition invoke_method
  MethodDefinition remove_method
  Collection`1<MethodDefinition> other_methods
Свойства:
  EventAttributes Attributes
  MethodDefinition AddMethod
  MethodDefinition InvokeMethod
  MethodDefinition RemoveMethod
  bool HasOtherMethods
  Collection`1<MethodDefinition> OtherMethods
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool IsSpecialName
  bool IsRuntimeSpecialName
  TypeDefinition DeclaringType
  bool IsDefinition
Методы:
  EventAttributes get_Attributes()
  void set_Attributes(EventAttributes value)
  MethodDefinition get_AddMethod()
  void set_AddMethod(MethodDefinition value)
  MethodDefinition get_InvokeMethod()
  void set_InvokeMethod(MethodDefinition value)
  MethodDefinition get_RemoveMethod()
  void set_RemoveMethod(MethodDefinition value)
  bool get_HasOtherMethods()
  Collection`1<MethodDefinition> get_OtherMethods()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  bool get_IsDefinition()
  void .ctor(string name, EventAttributes attributes, TypeReference eventType)
  void InitializeMethods()
  EventDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.EventReference
Наследуется от: MemberReference
Поля:
  TypeReference event_type
Свойства:
  TypeReference EventType
  string FullName
Методы:
  TypeReference get_EventType()
  void set_EventType(TypeReference value)
  string get_FullName()
  void .ctor(string name, TypeReference eventType)
  IMemberDefinition ResolveDefinition()
  EventDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.ExportedType
Наследуется от: object
Поля:
  string namespace
  string name
  UInt32 attributes
  IMetadataScope scope
  ModuleDefinition module
  int identifier
  ExportedType declaring_type
  MetadataToken token
Свойства:
  string Namespace
  string Name
  TypeAttributes Attributes
  IMetadataScope Scope
  ExportedType DeclaringType
  MetadataToken MetadataToken
  int Identifier
  bool IsNotPublic
  bool IsPublic
  bool IsNestedPublic
  bool IsNestedPrivate
  bool IsNestedFamily
  bool IsNestedAssembly
  bool IsNestedFamilyAndAssembly
  bool IsNestedFamilyOrAssembly
  bool IsAutoLayout
  bool IsSequentialLayout
  bool IsExplicitLayout
  bool IsClass
  bool IsInterface
  bool IsAbstract
  bool IsSealed
  bool IsSpecialName
  bool IsImport
  bool IsSerializable
  bool IsAnsiClass
  bool IsUnicodeClass
  bool IsAutoClass
  bool IsBeforeFieldInit
  bool IsRuntimeSpecialName
  bool HasSecurity
  bool IsForwarder
  string FullName
Методы:
  string get_Namespace()
  void set_Namespace(string value)
  string get_Name()
  void set_Name(string value)
  TypeAttributes get_Attributes()
  void set_Attributes(TypeAttributes value)
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  ExportedType get_DeclaringType()
  void set_DeclaringType(ExportedType value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  int get_Identifier()
  void set_Identifier(int value)
  bool get_IsNotPublic()
  void set_IsNotPublic(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsNestedPublic()
  void set_IsNestedPublic(bool value)
  bool get_IsNestedPrivate()
  void set_IsNestedPrivate(bool value)
  bool get_IsNestedFamily()
  void set_IsNestedFamily(bool value)
  bool get_IsNestedAssembly()
  void set_IsNestedAssembly(bool value)
  bool get_IsNestedFamilyAndAssembly()
  void set_IsNestedFamilyAndAssembly(bool value)
  bool get_IsNestedFamilyOrAssembly()
  void set_IsNestedFamilyOrAssembly(bool value)
  bool get_IsAutoLayout()
  void set_IsAutoLayout(bool value)
  bool get_IsSequentialLayout()
  void set_IsSequentialLayout(bool value)
  bool get_IsExplicitLayout()
  void set_IsExplicitLayout(bool value)
  bool get_IsClass()
  void set_IsClass(bool value)
  bool get_IsInterface()
  void set_IsInterface(bool value)
  bool get_IsAbstract()
  void set_IsAbstract(bool value)
  bool get_IsSealed()
  void set_IsSealed(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsImport()
  void set_IsImport(bool value)
  bool get_IsSerializable()
  void set_IsSerializable(bool value)
  bool get_IsAnsiClass()
  void set_IsAnsiClass(bool value)
  bool get_IsUnicodeClass()
  void set_IsUnicodeClass(bool value)
  bool get_IsAutoClass()
  void set_IsAutoClass(bool value)
  bool get_IsBeforeFieldInit()
  void set_IsBeforeFieldInit(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasSecurity()
  void set_HasSecurity(bool value)
  bool get_IsForwarder()
  void set_IsForwarder(bool value)
  string get_FullName()
  void .ctor(string namespace, string name, ModuleDefinition module, IMetadataScope scope)
  string ToString()
  TypeDefinition Resolve()
  TypeReference CreateReference()
--------------------------------------------------
Класс: Mono.Cecil.FieldAttributes
Наследуется от: Enum
Поля:
  ushort value__
  FieldAttributes FieldAccessMask
  FieldAttributes CompilerControlled
  FieldAttributes Private
  FieldAttributes FamANDAssem
  FieldAttributes Assembly
  FieldAttributes Family
  FieldAttributes FamORAssem
  FieldAttributes Public
  FieldAttributes Static
  FieldAttributes InitOnly
  FieldAttributes Literal
  FieldAttributes NotSerialized
  FieldAttributes SpecialName
  FieldAttributes PInvokeImpl
  FieldAttributes RTSpecialName
  FieldAttributes HasFieldMarshal
  FieldAttributes HasDefault
  FieldAttributes HasFieldRVA
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.FieldDefinition
Наследуется от: FieldReference
Поля:
  ushort attributes
  Collection`1<CustomAttribute> custom_attributes
  int offset
  int rva
  Byte[] initial_value
  object constant
  MarshalInfo marshal_info
Свойства:
  bool HasLayoutInfo
  int Offset
  FieldDefinitionProjection WindowsRuntimeProjection
  int RVA
  Byte[] InitialValue
  FieldAttributes Attributes
  bool HasConstant
  object Constant
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
  bool IsCompilerControlled
  bool IsPrivate
  bool IsFamilyAndAssembly
  bool IsAssembly
  bool IsFamily
  bool IsFamilyOrAssembly
  bool IsPublic
  bool IsStatic
  bool IsInitOnly
  bool IsLiteral
  bool IsNotSerialized
  bool IsSpecialName
  bool IsPInvokeImpl
  bool IsRuntimeSpecialName
  bool HasDefault
  bool IsDefinition
  TypeDefinition DeclaringType
Методы:
  void ResolveLayout()
  bool get_HasLayoutInfo()
  int get_Offset()
  void set_Offset(int value)
  FieldDefinitionProjection get_WindowsRuntimeProjection()
  void set_WindowsRuntimeProjection(FieldDefinitionProjection value)
  void ResolveRVA()
  int get_RVA()
  Byte[] get_InitialValue()
  void set_InitialValue(Byte[] value)
  FieldAttributes get_Attributes()
  void set_Attributes(FieldAttributes value)
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
  bool get_IsCompilerControlled()
  void set_IsCompilerControlled(bool value)
  bool get_IsPrivate()
  void set_IsPrivate(bool value)
  bool get_IsFamilyAndAssembly()
  void set_IsFamilyAndAssembly(bool value)
  bool get_IsAssembly()
  void set_IsAssembly(bool value)
  bool get_IsFamily()
  void set_IsFamily(bool value)
  bool get_IsFamilyOrAssembly()
  void set_IsFamilyOrAssembly(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsStatic()
  void set_IsStatic(bool value)
  bool get_IsInitOnly()
  void set_IsInitOnly(bool value)
  bool get_IsLiteral()
  void set_IsLiteral(bool value)
  bool get_IsNotSerialized()
  void set_IsNotSerialized(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsPInvokeImpl()
  void set_IsPInvokeImpl(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasDefault()
  void set_HasDefault(bool value)
  bool get_IsDefinition()
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  void .ctor(string name, FieldAttributes attributes, TypeReference fieldType)
  FieldDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.FieldReference
Наследуется от: MemberReference
Поля:
  TypeReference field_type
Свойства:
  TypeReference FieldType
  string FullName
  bool ContainsGenericParameter
Методы:
  TypeReference get_FieldType()
  void set_FieldType(TypeReference value)
  string get_FullName()
  bool get_ContainsGenericParameter()
  void .ctor()
  void .ctor(string name, TypeReference fieldType)
  void .ctor(string name, TypeReference fieldType, TypeReference declaringType)
  IMemberDefinition ResolveDefinition()
  FieldDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.FileAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  FileAttributes ContainsMetaData
  FileAttributes ContainsNoMetaData
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.FunctionPointerType
Наследуется от: TypeSpecification
Поля:
  MethodReference function
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
  string Name
  string Namespace
  ModuleDefinition Module
  IMetadataScope Scope
  bool IsFunctionPointer
  bool ContainsGenericParameter
  string FullName
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  ModuleDefinition get_Module()
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  bool get_IsFunctionPointer()
  bool get_ContainsGenericParameter()
  string get_FullName()
  void .ctor()
  TypeDefinition Resolve()
  TypeReference GetElementType()
--------------------------------------------------
Класс: Mono.Cecil.GenericInstanceMethod
Наследуется от: MethodSpecification
Поля:
  Collection`1<TypeReference> arguments
Свойства:
  bool HasGenericArguments
  Collection`1<TypeReference> GenericArguments
  bool IsGenericInstance
  IGenericParameterProvider Mono.Cecil.IGenericContext.Method
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
  bool ContainsGenericParameter
  string FullName
Методы:
  bool get_HasGenericArguments()
  Collection`1<TypeReference> get_GenericArguments()
  bool get_IsGenericInstance()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Method()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  bool get_ContainsGenericParameter()
  string get_FullName()
  void .ctor(MethodReference method)
--------------------------------------------------
Класс: Mono.Cecil.GenericInstanceType
Наследуется от: TypeSpecification
Поля:
  Collection`1<TypeReference> arguments
Свойства:
  bool HasGenericArguments
  Collection`1<TypeReference> GenericArguments
  TypeReference DeclaringType
  string FullName
  bool IsGenericInstance
  bool ContainsGenericParameter
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
Методы:
  bool get_HasGenericArguments()
  Collection`1<TypeReference> get_GenericArguments()
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  string get_FullName()
  bool get_IsGenericInstance()
  bool get_ContainsGenericParameter()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.GenericParameter
Наследуется от: TypeReference
Поля:
  int position
  GenericParameterType type
  IGenericParameterProvider owner
  ushort attributes
  Collection`1<TypeReference> constraints
  Collection`1<CustomAttribute> custom_attributes
Свойства:
  GenericParameterAttributes Attributes
  int Position
  GenericParameterType Type
  IGenericParameterProvider Owner
  bool HasConstraints
  Collection`1<TypeReference> Constraints
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  IMetadataScope Scope
  TypeReference DeclaringType
  MethodReference DeclaringMethod
  ModuleDefinition Module
  string Name
  string Namespace
  string FullName
  bool IsGenericParameter
  bool ContainsGenericParameter
  MetadataType MetadataType
  bool IsNonVariant
  bool IsCovariant
  bool IsContravariant
  bool HasReferenceTypeConstraint
  bool HasNotNullableValueTypeConstraint
  bool HasDefaultConstructorConstraint
Методы:
  GenericParameterAttributes get_Attributes()
  void set_Attributes(GenericParameterAttributes value)
  int get_Position()
  GenericParameterType get_Type()
  IGenericParameterProvider get_Owner()
  bool get_HasConstraints()
  Collection`1<TypeReference> get_Constraints()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  MethodReference get_DeclaringMethod()
  ModuleDefinition get_Module()
  string get_Name()
  string get_Namespace()
  void set_Namespace(string value)
  string get_FullName()
  bool get_IsGenericParameter()
  bool get_ContainsGenericParameter()
  MetadataType get_MetadataType()
  bool get_IsNonVariant()
  void set_IsNonVariant(bool value)
  bool get_IsCovariant()
  void set_IsCovariant(bool value)
  bool get_IsContravariant()
  void set_IsContravariant(bool value)
  bool get_HasReferenceTypeConstraint()
  void set_HasReferenceTypeConstraint(bool value)
  bool get_HasNotNullableValueTypeConstraint()
  void set_HasNotNullableValueTypeConstraint(bool value)
  bool get_HasDefaultConstructorConstraint()
  void set_HasDefaultConstructorConstraint(bool value)
  void .ctor(IGenericParameterProvider owner)
  void .ctor(string name, IGenericParameterProvider owner)
  void .ctor(int position, GenericParameterType type, ModuleDefinition module)
  ElementType ConvertGenericParameterType(GenericParameterType type)
  TypeDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterCollection
Наследуется от: Collection`1<GenericParameter>
Поля:
  IGenericParameterProvider owner
Свойства:
Методы:
  void .ctor(IGenericParameterProvider owner)
  void .ctor(IGenericParameterProvider owner, int capacity)
  void OnAdd(GenericParameter item, int index)
  void OnInsert(GenericParameter item, int index)
  void OnSet(GenericParameter item, int index)
  void UpdateGenericParameter(GenericParameter item, int index)
  void OnRemove(GenericParameter item, int index)
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterAttributes
Наследуется от: Enum
Поля:
  ushort value__
  GenericParameterAttributes VarianceMask
  GenericParameterAttributes NonVariant
  GenericParameterAttributes Covariant
  GenericParameterAttributes Contravariant
  GenericParameterAttributes SpecialConstraintMask
  GenericParameterAttributes ReferenceTypeConstraint
  GenericParameterAttributes NotNullableValueTypeConstraint
  GenericParameterAttributes DefaultConstructorConstraint
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterResolver
Наследуется от: object
Поля:
Свойства:
Методы:
  TypeReference ResolveReturnTypeIfNeeded(MethodReference methodReference)
  TypeReference ResolveFieldTypeIfNeeded(FieldReference fieldReference)
  TypeReference ResolveParameterTypeIfNeeded(MethodReference method, ParameterReference parameter)
  TypeReference ResolveVariableTypeIfNeeded(MethodReference method, VariableReference variable)
  TypeReference ResolveIfNeeded(IGenericInstance genericInstanceMethod, IGenericInstance declaringGenericInstanceType, TypeReference parameterType)
  TypeReference ResolveIfNeeded(IGenericInstance genericInstanceMethod, IGenericInstance genericInstanceType, GenericParameter genericParameterElement)
  ArrayType ResolveIfNeeded(IGenericInstance genericInstanceMethod, IGenericInstance genericInstanceType, ArrayType arrayType)
  ByReferenceType ResolveIfNeeded(IGenericInstance genericInstanceMethod, IGenericInstance genericInstanceType, ByReferenceType byReferenceType)
  GenericInstanceType ResolveIfNeeded(IGenericInstance genericInstanceMethod, IGenericInstance genericInstanceType, GenericInstanceType genericInstanceType1)
  bool ContainsGenericParameters(TypeReference typeReference)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.IConstantProvider
Поля:
Свойства:
  bool HasConstant
  object Constant
Методы:
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
--------------------------------------------------
Класс: Mono.Cecil.ICustomAttributeProvider
Поля:
Свойства:
  Collection`1<CustomAttribute> CustomAttributes
  bool HasCustomAttributes
Методы:
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasCustomAttributes()
--------------------------------------------------
Класс: Mono.Cecil.IGenericInstance
Поля:
Свойства:
  bool HasGenericArguments
  Collection`1<TypeReference> GenericArguments
Методы:
  bool get_HasGenericArguments()
  Collection`1<TypeReference> get_GenericArguments()
--------------------------------------------------
Класс: Mono.Cecil.IGenericParameterProvider
Поля:
Свойства:
  bool HasGenericParameters
  bool IsDefinition
  ModuleDefinition Module
  Collection`1<GenericParameter> GenericParameters
  GenericParameterType GenericParameterType
Методы:
  bool get_HasGenericParameters()
  bool get_IsDefinition()
  ModuleDefinition get_Module()
  Collection`1<GenericParameter> get_GenericParameters()
  GenericParameterType get_GenericParameterType()
--------------------------------------------------
Класс: Mono.Cecil.GenericParameterType
Наследуется от: Enum
Поля:
  int value__
  GenericParameterType Type
  GenericParameterType Method
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.IGenericContext
Поля:
Свойства:
  bool IsDefinition
  IGenericParameterProvider Type
  IGenericParameterProvider Method
Методы:
  bool get_IsDefinition()
  IGenericParameterProvider get_Type()
  IGenericParameterProvider get_Method()
--------------------------------------------------
Класс: Mono.Cecil.IMarshalInfoProvider
Поля:
Свойства:
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
Методы:
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
--------------------------------------------------
Класс: Mono.Cecil.IMemberDefinition
Поля:
Свойства:
  string Name
  string FullName
  bool IsSpecialName
  bool IsRuntimeSpecialName
  TypeDefinition DeclaringType
Методы:
  string get_Name()
  void set_Name(string value)
  string get_FullName()
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
--------------------------------------------------
Класс: Mono.Cecil.MetadataScopeType
Наследуется от: Enum
Поля:
  int value__
  MetadataScopeType AssemblyNameReference
  MetadataScopeType ModuleReference
  MetadataScopeType ModuleDefinition
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.IMetadataScope
Поля:
Свойства:
  MetadataScopeType MetadataScopeType
  string Name
Методы:
  MetadataScopeType get_MetadataScopeType()
  string get_Name()
  void set_Name(string value)
--------------------------------------------------
Класс: Mono.Cecil.IMetadataTokenProvider
Поля:
Свойства:
  MetadataToken MetadataToken
Методы:
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
--------------------------------------------------
Класс: Mono.Cecil.IMethodSignature
Поля:
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
--------------------------------------------------
Класс: Mono.Cecil.IMetadataImporterProvider
Поля:
Свойства:
Методы:
  IMetadataImporter GetMetadataImporter(ModuleDefinition module)
--------------------------------------------------
Класс: Mono.Cecil.IMetadataImporter
Поля:
Свойства:
Методы:
  TypeReference ImportReference(TypeReference type, IGenericParameterProvider context)
  FieldReference ImportReference(FieldReference field, IGenericParameterProvider context)
  MethodReference ImportReference(MethodReference method, IGenericParameterProvider context)
--------------------------------------------------
Класс: Mono.Cecil.IReflectionImporterProvider
Поля:
Свойства:
Методы:
  IReflectionImporter GetReflectionImporter(ModuleDefinition module)
--------------------------------------------------
Класс: Mono.Cecil.IReflectionImporter
Поля:
Свойства:
Методы:
  TypeReference ImportReference(Type type, IGenericParameterProvider context)
  FieldReference ImportReference(FieldInfo field, IGenericParameterProvider context)
  MethodReference ImportReference(MethodBase method, IGenericParameterProvider context)
--------------------------------------------------
Класс: Mono.Cecil.ImportGenericContext
Наследуется от: ValueType
Поля:
  Collection`1<IGenericParameterProvider> stack
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor(IGenericParameterProvider provider)
  void Push(IGenericParameterProvider provider)
  void Pop()
  TypeReference MethodParameter(string method, int position)
  string NormalizeMethodName(MethodReference method)
  TypeReference TypeParameter(string type, int position)
  TypeReference GenericTypeFor(IGenericParameterProvider context)
  ImportGenericContext For(IGenericParameterProvider context)
--------------------------------------------------
Класс: Mono.Cecil.ReflectionImporter
Наследуется от: object
Поля:
  ModuleDefinition module
  Dictionary`2<Type, ElementType> type_etype_mapping
Свойства:
Методы:
  void .ctor(ModuleDefinition module)
  TypeReference ImportType(Type type, ImportGenericContext context)
  TypeReference ImportType(Type type, ImportGenericContext context, ImportGenericKind import_kind)
  bool ImportOpenGenericType(Type type, ImportGenericKind import_kind)
  bool ImportOpenGenericMethod(MethodBase method, ImportGenericKind import_kind)
  bool IsNestedType(Type type)
  TypeReference ImportTypeSpecification(Type type, ImportGenericContext context)
  TypeReference ImportGenericParameter(Type type, ImportGenericContext context)
  string NormalizeMethodName(MethodBase method)
  string NormalizeTypeFullName(Type type)
  TypeReference ImportGenericInstance(Type type, ImportGenericContext context)
  bool IsTypeSpecification(Type type)
  bool IsGenericInstance(Type type)
  ElementType ImportElementType(Type type)
  AssemblyNameReference ImportScope(Assembly assembly)
  bool TryGetAssemblyNameReference(AssemblyName name, AssemblyNameReference& assembly_reference)
  FieldReference ImportField(FieldInfo field, ImportGenericContext context)
  FieldInfo ResolveFieldDefinition(FieldInfo field)
  MethodBase ResolveMethodDefinition(MethodBase method)
  MethodReference ImportMethod(MethodBase method, ImportGenericContext context, ImportGenericKind import_kind)
  void ImportGenericParameters(IGenericParameterProvider provider, Type[] arguments)
  bool IsMethodSpecification(MethodBase method)
  MethodReference ImportMethodSpecification(MethodBase method, ImportGenericContext context)
  bool HasCallingConvention(MethodBase method, CallingConventions conventions)
  TypeReference ImportReference(Type type, IGenericParameterProvider context)
  FieldReference ImportReference(FieldInfo field, IGenericParameterProvider context)
  MethodReference ImportReference(MethodBase method, IGenericParameterProvider context)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.MetadataImporter
Наследуется от: object
Поля:
  ModuleDefinition module
Свойства:
Методы:
  void .ctor(ModuleDefinition module)
  TypeReference ImportType(TypeReference type, ImportGenericContext context)
  IMetadataScope ImportScope(IMetadataScope scope)
  AssemblyNameReference ImportAssemblyName(AssemblyNameReference name)
  void ImportGenericParameters(IGenericParameterProvider imported, IGenericParameterProvider original)
  TypeReference ImportTypeSpecification(TypeReference type, ImportGenericContext context)
  FieldReference ImportField(FieldReference field, ImportGenericContext context)
  MethodReference ImportMethod(MethodReference method, ImportGenericContext context)
  MethodSpecification ImportMethodSpecification(MethodReference method, ImportGenericContext context)
  TypeReference ImportReference(TypeReference type, IGenericParameterProvider context)
  FieldReference ImportReference(FieldReference field, IGenericParameterProvider context)
  MethodReference ImportReference(MethodReference method, IGenericParameterProvider context)
--------------------------------------------------
Класс: Mono.Cecil.LinkedResource
Наследуется от: Resource
Поля:
  Byte[] hash
  string file
Свойства:
  Byte[] Hash
  string File
  ResourceType ResourceType
Методы:
  Byte[] get_Hash()
  string get_File()
  void set_File(string value)
  ResourceType get_ResourceType()
  void .ctor(string name, ManifestResourceAttributes flags)
  void .ctor(string name, ManifestResourceAttributes flags, string file)
--------------------------------------------------
Класс: Mono.Cecil.ManifestResourceAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  ManifestResourceAttributes VisibilityMask
  ManifestResourceAttributes Public
  ManifestResourceAttributes Private
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MarshalInfo
Наследуется от: object
Поля:
  NativeType native
Свойства:
  NativeType NativeType
Методы:
  NativeType get_NativeType()
  void set_NativeType(NativeType value)
  void .ctor(NativeType native)
--------------------------------------------------
Класс: Mono.Cecil.ArrayMarshalInfo
Наследуется от: MarshalInfo
Поля:
  NativeType element_type
  int size_parameter_index
  int size
  int size_parameter_multiplier
Свойства:
  NativeType ElementType
  int SizeParameterIndex
  int Size
  int SizeParameterMultiplier
Методы:
  NativeType get_ElementType()
  void set_ElementType(NativeType value)
  int get_SizeParameterIndex()
  void set_SizeParameterIndex(int value)
  int get_Size()
  void set_Size(int value)
  int get_SizeParameterMultiplier()
  void set_SizeParameterMultiplier(int value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.CustomMarshalInfo
Наследуется от: MarshalInfo
Поля:
  Guid guid
  string unmanaged_type
  TypeReference managed_type
  string cookie
Свойства:
  Guid Guid
  string UnmanagedType
  TypeReference ManagedType
  string Cookie
Методы:
  Guid get_Guid()
  void set_Guid(Guid value)
  string get_UnmanagedType()
  void set_UnmanagedType(string value)
  TypeReference get_ManagedType()
  void set_ManagedType(TypeReference value)
  string get_Cookie()
  void set_Cookie(string value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.SafeArrayMarshalInfo
Наследуется от: MarshalInfo
Поля:
  VariantType element_type
Свойства:
  VariantType ElementType
Методы:
  VariantType get_ElementType()
  void set_ElementType(VariantType value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FixedArrayMarshalInfo
Наследуется от: MarshalInfo
Поля:
  NativeType element_type
  int size
Свойства:
  NativeType ElementType
  int Size
Методы:
  NativeType get_ElementType()
  void set_ElementType(NativeType value)
  int get_Size()
  void set_Size(int value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.FixedSysStringMarshalInfo
Наследуется от: MarshalInfo
Поля:
  int size
Свойства:
  int Size
Методы:
  int get_Size()
  void set_Size(int value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MemberDefinitionCollection`1
Наследуется от: Collection`1<T>
Поля:
  TypeDefinition container
Свойства:
Методы:
  void .ctor(TypeDefinition container)
  void .ctor(TypeDefinition container, int capacity)
  void OnAdd(T item, int index)
  void OnSet(T item, int index)
  void OnInsert(T item, int index)
  void OnRemove(T item, int index)
  void OnClear()
  void Attach(T element)
  void Detach(T element)
--------------------------------------------------
Класс: Mono.Cecil.MemberReference
Наследуется от: object
Поля:
  string name
  TypeReference declaring_type
  MetadataToken token
  object projection
Свойства:
  string Name
  string FullName
  TypeReference DeclaringType
  MetadataToken MetadataToken
  bool IsWindowsRuntimeProjection
  bool HasImage
  ModuleDefinition Module
  bool IsDefinition
  bool ContainsGenericParameter
Методы:
  string get_Name()
  void set_Name(string value)
  string get_FullName()
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  bool get_IsWindowsRuntimeProjection()
  bool get_HasImage()
  ModuleDefinition get_Module()
  bool get_IsDefinition()
  bool get_ContainsGenericParameter()
  void .ctor()
  void .ctor(string name)
  string MemberFullName()
  IMemberDefinition Resolve()
  IMemberDefinition ResolveDefinition()
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.IAssemblyResolver
Поля:
Свойства:
Методы:
  AssemblyDefinition Resolve(AssemblyNameReference name)
  AssemblyDefinition Resolve(AssemblyNameReference name, ReaderParameters parameters)
--------------------------------------------------
Класс: Mono.Cecil.IMetadataResolver
Поля:
Свойства:
Методы:
  TypeDefinition Resolve(TypeReference type)
  FieldDefinition Resolve(FieldReference field)
  MethodDefinition Resolve(MethodReference method)
--------------------------------------------------
Класс: Mono.Cecil.ResolutionException
Наследуется от: Exception
Поля:
  MemberReference member
Свойства:
  MemberReference Member
  IMetadataScope Scope
Методы:
  MemberReference get_Member()
  IMetadataScope get_Scope()
  void .ctor(MemberReference member)
  void .ctor(SerializationInfo info, StreamingContext context)
--------------------------------------------------
Класс: Mono.Cecil.MetadataResolver
Наследуется от: object
Поля:
  IAssemblyResolver assembly_resolver
Свойства:
  IAssemblyResolver AssemblyResolver
Методы:
  IAssemblyResolver get_AssemblyResolver()
  void .ctor(IAssemblyResolver assemblyResolver)
  TypeDefinition Resolve(TypeReference type)
  TypeDefinition GetType(ModuleDefinition module, TypeReference reference)
  TypeDefinition GetTypeDefinition(ModuleDefinition module, TypeReference type)
  FieldDefinition Resolve(FieldReference field)
  FieldDefinition GetField(TypeDefinition type, FieldReference reference)
  FieldDefinition GetField(Collection`1<FieldDefinition> fields, FieldReference reference)
  MethodDefinition Resolve(MethodReference method)
  MethodDefinition GetMethod(TypeDefinition type, MethodReference reference)
  MethodDefinition GetMethod(Collection`1<MethodDefinition> methods, MethodReference reference)
  bool AreSame(Collection`1<ParameterDefinition> a, Collection`1<ParameterDefinition> b)
  bool IsVarArgCallTo(MethodDefinition method, MethodReference reference)
  bool AreSame(TypeSpecification a, TypeSpecification b)
  bool AreSame(ArrayType a, ArrayType b)
  bool AreSame(IModifierType a, IModifierType b)
  bool AreSame(GenericInstanceType a, GenericInstanceType b)
  bool AreSame(GenericParameter a, GenericParameter b)
  bool AreSame(TypeReference a, TypeReference b)
--------------------------------------------------
Класс: Mono.Cecil.Range
Наследуется от: ValueType
Поля:
  UInt32 Start
  UInt32 Length
Свойства:
Методы:
  void .ctor(UInt32 index, UInt32 length)
--------------------------------------------------
Класс: Mono.Cecil.MetadataSystem
Наследуется от: object
Поля:
  AssemblyNameReference[] AssemblyReferences
  ModuleReference[] ModuleReferences
  TypeDefinition[] Types
  TypeReference[] TypeReferences
  FieldDefinition[] Fields
  MethodDefinition[] Methods
  MemberReference[] MemberReferences
  Dictionary`2<UInt32, Collection`1<UInt32>> NestedTypes
  Dictionary`2<UInt32, UInt32> ReverseNestedTypes
  Dictionary`2<UInt32, Collection`1<Row`2<UInt32, MetadataToken>>> Interfaces
  Dictionary`2<UInt32, Row`2<ushort, UInt32>> ClassLayouts
  Dictionary`2<UInt32, UInt32> FieldLayouts
  Dictionary`2<UInt32, UInt32> FieldRVAs
  Dictionary`2<MetadataToken, UInt32> FieldMarshals
  Dictionary`2<MetadataToken, Row`2<ElementType, UInt32>> Constants
  Dictionary`2<UInt32, Collection`1<MetadataToken>> Overrides
  Dictionary`2<MetadataToken, Range[]> CustomAttributes
  Dictionary`2<MetadataToken, Range[]> SecurityDeclarations
  Dictionary`2<UInt32, Range> Events
  Dictionary`2<UInt32, Range> Properties
  Dictionary`2<UInt32, Row`2<MethodSemanticsAttributes, MetadataToken>> Semantics
  Dictionary`2<UInt32, Row`3<PInvokeAttributes, UInt32, UInt32>> PInvokes
  Dictionary`2<MetadataToken, Range[]> GenericParameters
  Dictionary`2<UInt32, Collection`1<MetadataToken>> GenericConstraints
  Document[] Documents
  Dictionary`2<UInt32, Collection`1<Row`6<UInt32, Range, Range, UInt32, UInt32, UInt32>>> LocalScopes
  ImportDebugInformation[] ImportScopes
  Dictionary`2<UInt32, UInt32> StateMachineMethods
  Dictionary`2<MetadataToken, Row`3[]> CustomDebugInformations
  Dictionary`2<string, Row`2<ElementType, bool>> primitive_value_types
Свойства:
Методы:
  void InitializePrimitives()
  void TryProcessPrimitiveTypeReference(TypeReference type)
  bool TryGetPrimitiveElementType(TypeDefinition type, ElementType& etype)
  bool TryGetPrimitiveData(TypeReference type, Row`2& primitive_data)
  void Clear()
  AssemblyNameReference GetAssemblyNameReference(UInt32 rid)
  TypeDefinition GetTypeDefinition(UInt32 rid)
  void AddTypeDefinition(TypeDefinition type)
  TypeReference GetTypeReference(UInt32 rid)
  void AddTypeReference(TypeReference type)
  FieldDefinition GetFieldDefinition(UInt32 rid)
  void AddFieldDefinition(FieldDefinition field)
  MethodDefinition GetMethodDefinition(UInt32 rid)
  void AddMethodDefinition(MethodDefinition method)
  MemberReference GetMemberReference(UInt32 rid)
  void AddMemberReference(MemberReference member)
  bool TryGetNestedTypeMapping(TypeDefinition type, Collection`1& mapping)
  void SetNestedTypeMapping(UInt32 type_rid, Collection`1<UInt32> mapping)
  void RemoveNestedTypeMapping(TypeDefinition type)
  bool TryGetReverseNestedTypeMapping(TypeDefinition type, UInt32& declaring)
  void SetReverseNestedTypeMapping(UInt32 nested, UInt32 declaring)
  void RemoveReverseNestedTypeMapping(TypeDefinition type)
  bool TryGetInterfaceMapping(TypeDefinition type, Collection`1& mapping)
  void SetInterfaceMapping(UInt32 type_rid, Collection`1<Row`2<UInt32, MetadataToken>> mapping)
  void RemoveInterfaceMapping(TypeDefinition type)
  void AddPropertiesRange(UInt32 type_rid, Range range)
  bool TryGetPropertiesRange(TypeDefinition type, Range& range)
  void RemovePropertiesRange(TypeDefinition type)
  void AddEventsRange(UInt32 type_rid, Range range)
  bool TryGetEventsRange(TypeDefinition type, Range& range)
  void RemoveEventsRange(TypeDefinition type)
  bool TryGetGenericParameterRanges(IGenericParameterProvider owner, Range[]& ranges)
  void RemoveGenericParameterRange(IGenericParameterProvider owner)
  bool TryGetCustomAttributeRanges(ICustomAttributeProvider owner, Range[]& ranges)
  void RemoveCustomAttributeRange(ICustomAttributeProvider owner)
  bool TryGetSecurityDeclarationRanges(ISecurityDeclarationProvider owner, Range[]& ranges)
  void RemoveSecurityDeclarationRange(ISecurityDeclarationProvider owner)
  bool TryGetGenericConstraintMapping(GenericParameter generic_parameter, Collection`1& mapping)
  void SetGenericConstraintMapping(UInt32 gp_rid, Collection`1<MetadataToken> mapping)
  void RemoveGenericConstraintMapping(GenericParameter generic_parameter)
  bool TryGetOverrideMapping(MethodDefinition method, Collection`1& mapping)
  void SetOverrideMapping(UInt32 rid, Collection`1<MetadataToken> mapping)
  void RemoveOverrideMapping(MethodDefinition method)
  Document GetDocument(UInt32 rid)
  bool TryGetLocalScopes(MethodDefinition method, Collection`1& scopes)
  void SetLocalScopes(UInt32 method_rid, Collection`1<Row`6<UInt32, Range, Range, UInt32, UInt32, UInt32>> records)
  ImportDebugInformation GetImportScope(UInt32 rid)
  bool TryGetStateMachineKickOffMethod(MethodDefinition method, UInt32& rid)
  TypeDefinition GetFieldDeclaringType(UInt32 field_rid)
  TypeDefinition GetMethodDeclaringType(UInt32 method_rid)
  TypeDefinition BinaryRangeSearch(TypeDefinition[] types, UInt32 rid, bool field)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodAttributes
Наследуется от: Enum
Поля:
  ushort value__
  MethodAttributes MemberAccessMask
  MethodAttributes CompilerControlled
  MethodAttributes Private
  MethodAttributes FamANDAssem
  MethodAttributes Assembly
  MethodAttributes Family
  MethodAttributes FamORAssem
  MethodAttributes Public
  MethodAttributes Static
  MethodAttributes Final
  MethodAttributes Virtual
  MethodAttributes HideBySig
  MethodAttributes VtableLayoutMask
  MethodAttributes ReuseSlot
  MethodAttributes NewSlot
  MethodAttributes CheckAccessOnOverride
  MethodAttributes Abstract
  MethodAttributes SpecialName
  MethodAttributes PInvokeImpl
  MethodAttributes UnmanagedExport
  MethodAttributes RTSpecialName
  MethodAttributes HasSecurity
  MethodAttributes RequireSecObject
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodCallingConvention
Наследуется от: Enum
Поля:
  byte value__
  MethodCallingConvention Default
  MethodCallingConvention C
  MethodCallingConvention StdCall
  MethodCallingConvention ThisCall
  MethodCallingConvention FastCall
  MethodCallingConvention VarArg
  MethodCallingConvention Generic
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodDefinition
Наследуется от: MethodReference
Поля:
  ushort attributes
  ushort impl_attributes
  Boolean modreq(System.Runtime.CompilerServices.IsVolatile) sem_attrs_ready
  MethodSemanticsAttributes sem_attrs
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<SecurityDeclaration> security_declarations
  UInt32 rva
  PInvokeInfo pinvoke
  Collection`1<MethodReference> overrides
  MethodBody body
  MethodDebugInformation debug_info
  Collection`1<CustomDebugInformation> custom_infos
Свойства:
  string Name
  MethodAttributes Attributes
  MethodImplAttributes ImplAttributes
  MethodSemanticsAttributes SemanticsAttributes
  MethodDefinitionProjection WindowsRuntimeProjection
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  int RVA
  bool HasBody
  MethodBody Body
  MethodDebugInformation DebugInformation
  bool HasPInvokeInfo
  PInvokeInfo PInvokeInfo
  bool HasOverrides
  Collection`1<MethodReference> Overrides
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  bool HasCustomDebugInformations
  Collection`1<CustomDebugInformation> CustomDebugInformations
  bool IsCompilerControlled
  bool IsPrivate
  bool IsFamilyAndAssembly
  bool IsAssembly
  bool IsFamily
  bool IsFamilyOrAssembly
  bool IsPublic
  bool IsStatic
  bool IsFinal
  bool IsVirtual
  bool IsHideBySig
  bool IsReuseSlot
  bool IsNewSlot
  bool IsCheckAccessOnOverride
  bool IsAbstract
  bool IsSpecialName
  bool IsPInvokeImpl
  bool IsUnmanagedExport
  bool IsRuntimeSpecialName
  bool HasSecurity
  bool IsIL
  bool IsNative
  bool IsRuntime
  bool IsUnmanaged
  bool IsManaged
  bool IsForwardRef
  bool IsPreserveSig
  bool IsInternalCall
  bool IsSynchronized
  bool NoInlining
  bool NoOptimization
  bool IsSetter
  bool IsGetter
  bool IsOther
  bool IsAddOn
  bool IsRemoveOn
  bool IsFire
  TypeDefinition DeclaringType
  bool IsConstructor
  bool IsDefinition
Методы:
  string get_Name()
  void set_Name(string value)
  MethodAttributes get_Attributes()
  void set_Attributes(MethodAttributes value)
  MethodImplAttributes get_ImplAttributes()
  void set_ImplAttributes(MethodImplAttributes value)
  MethodSemanticsAttributes get_SemanticsAttributes()
  void set_SemanticsAttributes(MethodSemanticsAttributes value)
  MethodDefinitionProjection get_WindowsRuntimeProjection()
  void set_WindowsRuntimeProjection(MethodDefinitionProjection value)
  void ReadSemantics()
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  int get_RVA()
  bool get_HasBody()
  MethodBody get_Body()
  void set_Body(MethodBody value)
  MethodDebugInformation get_DebugInformation()
  bool get_HasPInvokeInfo()
  PInvokeInfo get_PInvokeInfo()
  void set_PInvokeInfo(PInvokeInfo value)
  bool get_HasOverrides()
  Collection`1<MethodReference> get_Overrides()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  bool get_HasCustomDebugInformations()
  Collection`1<CustomDebugInformation> get_CustomDebugInformations()
  bool get_IsCompilerControlled()
  void set_IsCompilerControlled(bool value)
  bool get_IsPrivate()
  void set_IsPrivate(bool value)
  bool get_IsFamilyAndAssembly()
  void set_IsFamilyAndAssembly(bool value)
  bool get_IsAssembly()
  void set_IsAssembly(bool value)
  bool get_IsFamily()
  void set_IsFamily(bool value)
  bool get_IsFamilyOrAssembly()
  void set_IsFamilyOrAssembly(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsStatic()
  void set_IsStatic(bool value)
  bool get_IsFinal()
  void set_IsFinal(bool value)
  bool get_IsVirtual()
  void set_IsVirtual(bool value)
  bool get_IsHideBySig()
  void set_IsHideBySig(bool value)
  bool get_IsReuseSlot()
  void set_IsReuseSlot(bool value)
  bool get_IsNewSlot()
  void set_IsNewSlot(bool value)
  bool get_IsCheckAccessOnOverride()
  void set_IsCheckAccessOnOverride(bool value)
  bool get_IsAbstract()
  void set_IsAbstract(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsPInvokeImpl()
  void set_IsPInvokeImpl(bool value)
  bool get_IsUnmanagedExport()
  void set_IsUnmanagedExport(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasSecurity()
  void set_HasSecurity(bool value)
  bool get_IsIL()
  void set_IsIL(bool value)
  bool get_IsNative()
  void set_IsNative(bool value)
  bool get_IsRuntime()
  void set_IsRuntime(bool value)
  bool get_IsUnmanaged()
  void set_IsUnmanaged(bool value)
  bool get_IsManaged()
  void set_IsManaged(bool value)
  bool get_IsForwardRef()
  void set_IsForwardRef(bool value)
  bool get_IsPreserveSig()
  void set_IsPreserveSig(bool value)
  bool get_IsInternalCall()
  void set_IsInternalCall(bool value)
  bool get_IsSynchronized()
  void set_IsSynchronized(bool value)
  bool get_NoInlining()
  void set_NoInlining(bool value)
  bool get_NoOptimization()
  void set_NoOptimization(bool value)
  bool get_IsSetter()
  void set_IsSetter(bool value)
  bool get_IsGetter()
  void set_IsGetter(bool value)
  bool get_IsOther()
  void set_IsOther(bool value)
  bool get_IsAddOn()
  void set_IsAddOn(bool value)
  bool get_IsRemoveOn()
  void set_IsRemoveOn(bool value)
  bool get_IsFire()
  void set_IsFire(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  bool get_IsConstructor()
  bool get_IsDefinition()
  void .ctor()
  void .ctor(string name, MethodAttributes attributes, TypeReference returnType)
  MethodDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.MethodImplAttributes
Наследуется от: Enum
Поля:
  ushort value__
  MethodImplAttributes CodeTypeMask
  MethodImplAttributes IL
  MethodImplAttributes Native
  MethodImplAttributes OPTIL
  MethodImplAttributes Runtime
  MethodImplAttributes ManagedMask
  MethodImplAttributes Unmanaged
  MethodImplAttributes Managed
  MethodImplAttributes ForwardRef
  MethodImplAttributes PreserveSig
  MethodImplAttributes InternalCall
  MethodImplAttributes Synchronized
  MethodImplAttributes NoOptimization
  MethodImplAttributes NoInlining
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodReference
Наследуется от: MemberReference
Поля:
  ParameterDefinitionCollection parameters
  MethodReturnType return_type
  bool has_this
  bool explicit_this
  MethodCallingConvention calling_convention
  Collection`1<GenericParameter> generic_parameters
Свойства:
  bool HasThis
  bool ExplicitThis
  MethodCallingConvention CallingConvention
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
  IGenericParameterProvider Mono.Cecil.IGenericContext.Method
  GenericParameterType Mono.Cecil.IGenericParameterProvider.GenericParameterType
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  TypeReference ReturnType
  MethodReturnType MethodReturnType
  string FullName
  bool IsGenericInstance
  bool ContainsGenericParameter
Методы:
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Method()
  GenericParameterType Mono.Cecil.IGenericParameterProvider.get_GenericParameterType()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  MethodReturnType get_MethodReturnType()
  void set_MethodReturnType(MethodReturnType value)
  string get_FullName()
  bool get_IsGenericInstance()
  bool get_ContainsGenericParameter()
  void .ctor()
  void .ctor(string name, TypeReference returnType)
  void .ctor(string name, TypeReference returnType, TypeReference declaringType)
  MethodReference GetElementMethod()
  IMemberDefinition ResolveDefinition()
  MethodDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.MethodReferenceComparer
Наследуется от: EqualityComparer`1<MethodReference>
Поля:
Свойства:
Методы:
  bool Equals(MethodReference x, MethodReference y)
  int GetHashCode(MethodReference obj)
  bool AreEqual(MethodReference x, MethodReference y)
  bool AreSignaturesEqual(MethodReference x, MethodReference y)
  int GetHashCodeFor(MethodReference obj)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.MethodReturnType
Наследуется от: object
Поля:
  IMethodSignature method
  ParameterDefinition parameter
  TypeReference return_type
Свойства:
  IMethodSignature Method
  TypeReference ReturnType
  ParameterDefinition Parameter
  MetadataToken MetadataToken
  ParameterAttributes Attributes
  string Name
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasDefault
  bool HasConstant
  object Constant
  bool HasFieldMarshal
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
Методы:
  IMethodSignature get_Method()
  TypeReference get_ReturnType()
  void set_ReturnType(TypeReference value)
  ParameterDefinition get_Parameter()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  ParameterAttributes get_Attributes()
  void set_Attributes(ParameterAttributes value)
  string get_Name()
  void set_Name(string value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasDefault()
  void set_HasDefault(bool value)
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_HasFieldMarshal()
  void set_HasFieldMarshal(bool value)
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
  void .ctor(IMethodSignature method)
--------------------------------------------------
Класс: Mono.Cecil.MethodSemanticsAttributes
Наследуется от: Enum
Поля:
  ushort value__
  MethodSemanticsAttributes None
  MethodSemanticsAttributes Setter
  MethodSemanticsAttributes Getter
  MethodSemanticsAttributes Other
  MethodSemanticsAttributes AddOn
  MethodSemanticsAttributes RemoveOn
  MethodSemanticsAttributes Fire
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodSpecification
Наследуется от: MethodReference
Поля:
  MethodReference method
Свойства:
  MethodReference ElementMethod
  string Name
  MethodCallingConvention CallingConvention
  bool HasThis
  bool ExplicitThis
  MethodReturnType MethodReturnType
  TypeReference DeclaringType
  ModuleDefinition Module
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  bool ContainsGenericParameter
Методы:
  MethodReference get_ElementMethod()
  string get_Name()
  void set_Name(string value)
  MethodCallingConvention get_CallingConvention()
  void set_CallingConvention(MethodCallingConvention value)
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_ExplicitThis()
  void set_ExplicitThis(bool value)
  MethodReturnType get_MethodReturnType()
  void set_MethodReturnType(MethodReturnType value)
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  ModuleDefinition get_Module()
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  bool get_ContainsGenericParameter()
  void .ctor(MethodReference method)
  MethodReference GetElementMethod()
--------------------------------------------------
Класс: Mono.Cecil.IModifierType
Поля:
Свойства:
  TypeReference ModifierType
  TypeReference ElementType
Методы:
  TypeReference get_ModifierType()
  TypeReference get_ElementType()
--------------------------------------------------
Класс: Mono.Cecil.OptionalModifierType
Наследуется от: TypeSpecification
Поля:
  TypeReference modifier_type
Свойства:
  TypeReference ModifierType
  string Name
  string FullName
  string Suffix
  bool IsValueType
  bool IsOptionalModifier
  bool ContainsGenericParameter
Методы:
  TypeReference get_ModifierType()
  void set_ModifierType(TypeReference value)
  string get_Name()
  string get_FullName()
  string get_Suffix()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsOptionalModifier()
  bool get_ContainsGenericParameter()
  void .ctor(TypeReference modifierType, TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.RequiredModifierType
Наследуется от: TypeSpecification
Поля:
  TypeReference modifier_type
Свойства:
  TypeReference ModifierType
  string Name
  string FullName
  string Suffix
  bool IsValueType
  bool IsRequiredModifier
  bool ContainsGenericParameter
Методы:
  TypeReference get_ModifierType()
  void set_ModifierType(TypeReference value)
  string get_Name()
  string get_FullName()
  string get_Suffix()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsRequiredModifier()
  bool get_ContainsGenericParameter()
  void .ctor(TypeReference modifierType, TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.ReadingMode
Наследуется от: Enum
Поля:
  int value__
  ReadingMode Immediate
  ReadingMode Deferred
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ReaderParameters
Наследуется от: object
Поля:
  ReadingMode reading_mode
  IAssemblyResolver assembly_resolver
  IMetadataResolver metadata_resolver
  IMetadataImporterProvider metadata_importer_provider
  IReflectionImporterProvider reflection_importer_provider
  Stream symbol_stream
  ISymbolReaderProvider symbol_reader_provider
  bool read_symbols
  bool projections
  bool in_memory
  bool read_write
Свойства:
  ReadingMode ReadingMode
  bool InMemory
  IAssemblyResolver AssemblyResolver
  IMetadataResolver MetadataResolver
  IMetadataImporterProvider MetadataImporterProvider
  IReflectionImporterProvider ReflectionImporterProvider
  Stream SymbolStream
  ISymbolReaderProvider SymbolReaderProvider
  bool ReadSymbols
  bool ReadWrite
  bool ApplyWindowsRuntimeProjections
Методы:
  ReadingMode get_ReadingMode()
  void set_ReadingMode(ReadingMode value)
  bool get_InMemory()
  void set_InMemory(bool value)
  IAssemblyResolver get_AssemblyResolver()
  void set_AssemblyResolver(IAssemblyResolver value)
  IMetadataResolver get_MetadataResolver()
  void set_MetadataResolver(IMetadataResolver value)
  IMetadataImporterProvider get_MetadataImporterProvider()
  void set_MetadataImporterProvider(IMetadataImporterProvider value)
  IReflectionImporterProvider get_ReflectionImporterProvider()
  void set_ReflectionImporterProvider(IReflectionImporterProvider value)
  Stream get_SymbolStream()
  void set_SymbolStream(Stream value)
  ISymbolReaderProvider get_SymbolReaderProvider()
  void set_SymbolReaderProvider(ISymbolReaderProvider value)
  bool get_ReadSymbols()
  void set_ReadSymbols(bool value)
  bool get_ReadWrite()
  void set_ReadWrite(bool value)
  bool get_ApplyWindowsRuntimeProjections()
  void set_ApplyWindowsRuntimeProjections(bool value)
  void .ctor()
  void .ctor(ReadingMode readingMode)
--------------------------------------------------
Класс: Mono.Cecil.ModuleParameters
Наследуется от: object
Поля:
  ModuleKind kind
  TargetRuntime runtime
  Nullable`1<UInt32> timestamp
  TargetArchitecture architecture
  IAssemblyResolver assembly_resolver
  IMetadataResolver metadata_resolver
  IMetadataImporterProvider metadata_importer_provider
  IReflectionImporterProvider reflection_importer_provider
Свойства:
  ModuleKind Kind
  TargetRuntime Runtime
  Nullable`1<UInt32> Timestamp
  TargetArchitecture Architecture
  IAssemblyResolver AssemblyResolver
  IMetadataResolver MetadataResolver
  IMetadataImporterProvider MetadataImporterProvider
  IReflectionImporterProvider ReflectionImporterProvider
Методы:
  ModuleKind get_Kind()
  void set_Kind(ModuleKind value)
  TargetRuntime get_Runtime()
  void set_Runtime(TargetRuntime value)
  Nullable`1<UInt32> get_Timestamp()
  void set_Timestamp(Nullable`1<UInt32> value)
  TargetArchitecture get_Architecture()
  void set_Architecture(TargetArchitecture value)
  IAssemblyResolver get_AssemblyResolver()
  void set_AssemblyResolver(IAssemblyResolver value)
  IMetadataResolver get_MetadataResolver()
  void set_MetadataResolver(IMetadataResolver value)
  IMetadataImporterProvider get_MetadataImporterProvider()
  void set_MetadataImporterProvider(IMetadataImporterProvider value)
  IReflectionImporterProvider get_ReflectionImporterProvider()
  void set_ReflectionImporterProvider(IReflectionImporterProvider value)
  void .ctor()
  TargetRuntime GetCurrentRuntime()
--------------------------------------------------
Класс: Mono.Cecil.WriterParameters
Наследуется от: object
Поля:
  Nullable`1<UInt32> timestamp
  Stream symbol_stream
  ISymbolWriterProvider symbol_writer_provider
  bool write_symbols
  StrongNameKeyPair key_pair
Свойства:
  Nullable`1<UInt32> Timestamp
  Stream SymbolStream
  ISymbolWriterProvider SymbolWriterProvider
  bool WriteSymbols
  StrongNameKeyPair StrongNameKeyPair
Методы:
  Nullable`1<UInt32> get_Timestamp()
  void set_Timestamp(Nullable`1<UInt32> value)
  Stream get_SymbolStream()
  void set_SymbolStream(Stream value)
  ISymbolWriterProvider get_SymbolWriterProvider()
  void set_SymbolWriterProvider(ISymbolWriterProvider value)
  bool get_WriteSymbols()
  void set_WriteSymbols(bool value)
  StrongNameKeyPair get_StrongNameKeyPair()
  void set_StrongNameKeyPair(StrongNameKeyPair value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.ModuleDefinition
Наследуется от: ModuleReference
Поля:
  Image Image
  MetadataSystem MetadataSystem
  ReadingMode ReadingMode
  ISymbolReaderProvider SymbolReaderProvider
  ISymbolReader symbol_reader
  Disposable`1<IAssemblyResolver> assembly_resolver
  IMetadataResolver metadata_resolver
  TypeSystem type_system
  MetadataReader reader
  string file_name
  string runtime_version
  ModuleKind kind
  WindowsRuntimeProjections projections
  MetadataKind metadata_kind
  TargetRuntime runtime
  TargetArchitecture architecture
  ModuleAttributes attributes
  ModuleCharacteristics characteristics
  Guid mvid
  UInt32 timestamp
  AssemblyDefinition assembly
  MethodDefinition entry_point
  IReflectionImporter reflection_importer
  IMetadataImporter metadata_importer
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<AssemblyNameReference> references
  Collection`1<ModuleReference> modules
  Collection`1<Resource> resources
  Collection`1<ExportedType> exported_types
  TypeDefinitionCollection types
  Collection`1<CustomDebugInformation> custom_infos
  object module_lock
Свойства:
  bool IsMain
  ModuleKind Kind
  MetadataKind MetadataKind
  WindowsRuntimeProjections Projections
  TargetRuntime Runtime
  string RuntimeVersion
  TargetArchitecture Architecture
  ModuleAttributes Attributes
  ModuleCharacteristics Characteristics
  string FullyQualifiedName
  string FileName
  Guid Mvid
  bool HasImage
  bool HasSymbols
  ISymbolReader SymbolReader
  MetadataScopeType MetadataScopeType
  AssemblyDefinition Assembly
  IReflectionImporter ReflectionImporter
  IMetadataImporter MetadataImporter
  IAssemblyResolver AssemblyResolver
  IMetadataResolver MetadataResolver
  TypeSystem TypeSystem
  bool HasAssemblyReferences
  Collection`1<AssemblyNameReference> AssemblyReferences
  bool HasModuleReferences
  Collection`1<ModuleReference> ModuleReferences
  bool HasResources
  Collection`1<Resource> Resources
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasTypes
  Collection`1<TypeDefinition> Types
  bool HasExportedTypes
  Collection`1<ExportedType> ExportedTypes
  MethodDefinition EntryPoint
  bool HasCustomDebugInformations
  Collection`1<CustomDebugInformation> CustomDebugInformations
  object SyncRoot
  bool HasDebugHeader
Методы:
  bool get_IsMain()
  ModuleKind get_Kind()
  void set_Kind(ModuleKind value)
  MetadataKind get_MetadataKind()
  void set_MetadataKind(MetadataKind value)
  WindowsRuntimeProjections get_Projections()
  TargetRuntime get_Runtime()
  void set_Runtime(TargetRuntime value)
  string get_RuntimeVersion()
  void set_RuntimeVersion(string value)
  TargetArchitecture get_Architecture()
  void set_Architecture(TargetArchitecture value)
  ModuleAttributes get_Attributes()
  void set_Attributes(ModuleAttributes value)
  ModuleCharacteristics get_Characteristics()
  void set_Characteristics(ModuleCharacteristics value)
  string get_FullyQualifiedName()
  string get_FileName()
  Guid get_Mvid()
  void set_Mvid(Guid value)
  bool get_HasImage()
  bool get_HasSymbols()
  ISymbolReader get_SymbolReader()
  MetadataScopeType get_MetadataScopeType()
  AssemblyDefinition get_Assembly()
  IReflectionImporter get_ReflectionImporter()
  IMetadataImporter get_MetadataImporter()
  IAssemblyResolver get_AssemblyResolver()
  IMetadataResolver get_MetadataResolver()
  TypeSystem get_TypeSystem()
  bool get_HasAssemblyReferences()
  Collection`1<AssemblyNameReference> get_AssemblyReferences()
  bool get_HasModuleReferences()
  Collection`1<ModuleReference> get_ModuleReferences()
  bool get_HasResources()
  Collection`1<Resource> get_Resources()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasTypes()
  Collection`1<TypeDefinition> get_Types()
  bool get_HasExportedTypes()
  Collection`1<ExportedType> get_ExportedTypes()
  MethodDefinition get_EntryPoint()
  void set_EntryPoint(MethodDefinition value)
  bool get_HasCustomDebugInformations()
  Collection`1<CustomDebugInformation> get_CustomDebugInformations()
  void .ctor()
  void .ctor(Image image)
  void Dispose()
  bool HasTypeReference(string fullName)
  bool HasTypeReference(string scope, string fullName)
  bool TryGetTypeReference(string fullName, TypeReference& type)
  bool TryGetTypeReference(string scope, string fullName, TypeReference& type)
  TypeReference GetTypeReference(string scope, string fullname)
  IEnumerable`1<TypeReference> GetTypeReferences()
  IEnumerable`1<MemberReference> GetMemberReferences()
  IEnumerable`1<CustomAttribute> GetCustomAttributes()
  TypeReference GetType(string fullName, bool runtimeName)
  TypeDefinition GetType(string fullName)
  TypeDefinition GetType(string namespace, string name)
  IEnumerable`1<TypeDefinition> GetTypes()
  IEnumerable`1<TypeDefinition> GetTypes(Collection`1<TypeDefinition> types)
  TypeDefinition GetNestedType(string fullname)
  FieldDefinition Resolve(FieldReference field)
  MethodDefinition Resolve(MethodReference method)
  TypeDefinition Resolve(TypeReference type)
  void CheckContext(IGenericParameterProvider context, ModuleDefinition module)
  TypeReference Import(Type type)
  TypeReference ImportReference(Type type)
  TypeReference Import(Type type, IGenericParameterProvider context)
  TypeReference ImportReference(Type type, IGenericParameterProvider context)
  FieldReference Import(FieldInfo field)
  FieldReference Import(FieldInfo field, IGenericParameterProvider context)
  FieldReference ImportReference(FieldInfo field)
  FieldReference ImportReference(FieldInfo field, IGenericParameterProvider context)
  MethodReference Import(MethodBase method)
  MethodReference Import(MethodBase method, IGenericParameterProvider context)
  MethodReference ImportReference(MethodBase method)
  MethodReference ImportReference(MethodBase method, IGenericParameterProvider context)
  TypeReference Import(TypeReference type)
  TypeReference Import(TypeReference type, IGenericParameterProvider context)
  TypeReference ImportReference(TypeReference type)
  TypeReference ImportReference(TypeReference type, IGenericParameterProvider context)
  FieldReference Import(FieldReference field)
  FieldReference Import(FieldReference field, IGenericParameterProvider context)
  FieldReference ImportReference(FieldReference field)
  FieldReference ImportReference(FieldReference field, IGenericParameterProvider context)
  MethodReference Import(MethodReference method)
  MethodReference Import(MethodReference method, IGenericParameterProvider context)
  MethodReference ImportReference(MethodReference method)
  MethodReference ImportReference(MethodReference method, IGenericParameterProvider context)
  IMetadataTokenProvider LookupToken(int token)
  IMetadataTokenProvider LookupToken(MetadataToken token)
  object get_SyncRoot()
  TRet Read(TItem item, Func`3<TItem, MetadataReader, TRet> read)
  TRet Read(TRet& variable, TItem item, Func`3<TItem, MetadataReader, TRet> read)
  bool get_HasDebugHeader()
  ImageDebugHeader GetDebugHeader()
  ModuleDefinition CreateModule(string name, ModuleKind kind)
  ModuleDefinition CreateModule(string name, ModuleParameters parameters)
  AssemblyNameDefinition CreateAssemblyName(string name)
  void ReadSymbols()
  void ReadSymbols(ISymbolReader reader)
  ModuleDefinition ReadModule(string fileName)
  ModuleDefinition ReadModule(string fileName, ReaderParameters parameters)
  Stream GetFileStream(string fileName, FileMode mode, FileAccess access, FileShare share)
  ModuleDefinition ReadModule(Stream stream)
  ModuleDefinition ReadModule(Stream stream, ReaderParameters parameters)
  ModuleDefinition ReadModule(Disposable`1<Stream> stream, string fileName, ReaderParameters parameters)
  void Write(string fileName)
  void Write(string fileName, WriterParameters parameters)
  void Write()
  void Write(WriterParameters parameters)
  void Write(Stream stream)
  void Write(Stream stream, WriterParameters parameters)
--------------------------------------------------
Класс: Mono.Cecil.ModuleKind
Наследуется от: Enum
Поля:
  int value__
  ModuleKind Dll
  ModuleKind Console
  ModuleKind Windows
  ModuleKind NetModule
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MetadataKind
Наследуется от: Enum
Поля:
  int value__
  MetadataKind Ecma335
  MetadataKind WindowsMetadata
  MetadataKind ManagedWindowsMetadata
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TargetArchitecture
Наследуется от: Enum
Поля:
  int value__
  TargetArchitecture I386
  TargetArchitecture AMD64
  TargetArchitecture IA64
  TargetArchitecture ARM
  TargetArchitecture ARMv7
  TargetArchitecture ARM64
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ModuleAttributes
Наследуется от: Enum
Поля:
  int value__
  ModuleAttributes ILOnly
  ModuleAttributes Required32Bit
  ModuleAttributes StrongNameSigned
  ModuleAttributes Preferred32Bit
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ModuleCharacteristics
Наследуется от: Enum
Поля:
  int value__
  ModuleCharacteristics HighEntropyVA
  ModuleCharacteristics DynamicBase
  ModuleCharacteristics NoSEH
  ModuleCharacteristics NXCompat
  ModuleCharacteristics AppContainer
  ModuleCharacteristics TerminalServerAware
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ModuleReference
Наследуется от: object
Поля:
  string name
  MetadataToken token
Свойства:
  string Name
  MetadataScopeType MetadataScopeType
  MetadataToken MetadataToken
Методы:
  string get_Name()
  void set_Name(string value)
  MetadataScopeType get_MetadataScopeType()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor()
  void .ctor(string name)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.NativeType
Наследуется от: Enum
Поля:
  int value__
  NativeType None
  NativeType Boolean
  NativeType I1
  NativeType U1
  NativeType I2
  NativeType U2
  NativeType I4
  NativeType U4
  NativeType I8
  NativeType U8
  NativeType R4
  NativeType R8
  NativeType LPStr
  NativeType Int
  NativeType UInt
  NativeType Func
  NativeType Array
  NativeType Currency
  NativeType BStr
  NativeType LPWStr
  NativeType LPTStr
  NativeType FixedSysString
  NativeType IUnknown
  NativeType IDispatch
  NativeType Struct
  NativeType IntF
  NativeType SafeArray
  NativeType FixedArray
  NativeType ByValStr
  NativeType ANSIBStr
  NativeType TBStr
  NativeType VariantBool
  NativeType ASAny
  NativeType LPStruct
  NativeType CustomMarshaler
  NativeType Error
  NativeType Max
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ParameterAttributes
Наследуется от: Enum
Поля:
  ushort value__
  ParameterAttributes None
  ParameterAttributes In
  ParameterAttributes Out
  ParameterAttributes Lcid
  ParameterAttributes Retval
  ParameterAttributes Optional
  ParameterAttributes HasDefault
  ParameterAttributes HasFieldMarshal
  ParameterAttributes Unused
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ParameterDefinition
Наследуется от: ParameterReference
Поля:
  ushort attributes
  IMethodSignature method
  object constant
  Collection`1<CustomAttribute> custom_attributes
  MarshalInfo marshal_info
Свойства:
  ParameterAttributes Attributes
  IMethodSignature Method
  int Sequence
  bool HasConstant
  object Constant
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasMarshalInfo
  MarshalInfo MarshalInfo
  bool IsIn
  bool IsOut
  bool IsLcid
  bool IsReturnValue
  bool IsOptional
  bool HasDefault
  bool HasFieldMarshal
Методы:
  ParameterAttributes get_Attributes()
  void set_Attributes(ParameterAttributes value)
  IMethodSignature get_Method()
  int get_Sequence()
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasMarshalInfo()
  MarshalInfo get_MarshalInfo()
  void set_MarshalInfo(MarshalInfo value)
  bool get_IsIn()
  void set_IsIn(bool value)
  bool get_IsOut()
  void set_IsOut(bool value)
  bool get_IsLcid()
  void set_IsLcid(bool value)
  bool get_IsReturnValue()
  void set_IsReturnValue(bool value)
  bool get_IsOptional()
  void set_IsOptional(bool value)
  bool get_HasDefault()
  void set_HasDefault(bool value)
  bool get_HasFieldMarshal()
  void set_HasFieldMarshal(bool value)
  void .ctor(TypeReference parameterType, IMethodSignature method)
  void .ctor(TypeReference parameterType)
  void .ctor(string name, ParameterAttributes attributes, TypeReference parameterType)
  ParameterDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.ParameterDefinitionCollection
Наследуется от: Collection`1<ParameterDefinition>
Поля:
  IMethodSignature method
Свойства:
Методы:
  void .ctor(IMethodSignature method)
  void .ctor(IMethodSignature method, int capacity)
  void OnAdd(ParameterDefinition item, int index)
  void OnInsert(ParameterDefinition item, int index)
  void OnSet(ParameterDefinition item, int index)
  void OnRemove(ParameterDefinition item, int index)
--------------------------------------------------
Класс: Mono.Cecil.ParameterReference
Наследуется от: object
Поля:
  string name
  int index
  TypeReference parameter_type
  MetadataToken token
Свойства:
  string Name
  int Index
  TypeReference ParameterType
  MetadataToken MetadataToken
Методы:
  string get_Name()
  void set_Name(string value)
  int get_Index()
  TypeReference get_ParameterType()
  void set_ParameterType(TypeReference value)
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor(string name, TypeReference parameterType)
  string ToString()
  ParameterDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.PinnedType
Наследуется от: TypeSpecification
Поля:
Свойства:
  bool IsValueType
  bool IsPinned
Методы:
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsPinned()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.PInvokeAttributes
Наследуется от: Enum
Поля:
  ushort value__
  PInvokeAttributes NoMangle
  PInvokeAttributes CharSetMask
  PInvokeAttributes CharSetNotSpec
  PInvokeAttributes CharSetAnsi
  PInvokeAttributes CharSetUnicode
  PInvokeAttributes CharSetAuto
  PInvokeAttributes SupportsLastError
  PInvokeAttributes CallConvMask
  PInvokeAttributes CallConvWinapi
  PInvokeAttributes CallConvCdecl
  PInvokeAttributes CallConvStdCall
  PInvokeAttributes CallConvThiscall
  PInvokeAttributes CallConvFastcall
  PInvokeAttributes BestFitMask
  PInvokeAttributes BestFitEnabled
  PInvokeAttributes BestFitDisabled
  PInvokeAttributes ThrowOnUnmappableCharMask
  PInvokeAttributes ThrowOnUnmappableCharEnabled
  PInvokeAttributes ThrowOnUnmappableCharDisabled
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PInvokeInfo
Наследуется от: object
Поля:
  ushort attributes
  string entry_point
  ModuleReference module
Свойства:
  PInvokeAttributes Attributes
  string EntryPoint
  ModuleReference Module
  bool IsNoMangle
  bool IsCharSetNotSpec
  bool IsCharSetAnsi
  bool IsCharSetUnicode
  bool IsCharSetAuto
  bool SupportsLastError
  bool IsCallConvWinapi
  bool IsCallConvCdecl
  bool IsCallConvStdCall
  bool IsCallConvThiscall
  bool IsCallConvFastcall
  bool IsBestFitEnabled
  bool IsBestFitDisabled
  bool IsThrowOnUnmappableCharEnabled
  bool IsThrowOnUnmappableCharDisabled
Методы:
  PInvokeAttributes get_Attributes()
  void set_Attributes(PInvokeAttributes value)
  string get_EntryPoint()
  void set_EntryPoint(string value)
  ModuleReference get_Module()
  void set_Module(ModuleReference value)
  bool get_IsNoMangle()
  void set_IsNoMangle(bool value)
  bool get_IsCharSetNotSpec()
  void set_IsCharSetNotSpec(bool value)
  bool get_IsCharSetAnsi()
  void set_IsCharSetAnsi(bool value)
  bool get_IsCharSetUnicode()
  void set_IsCharSetUnicode(bool value)
  bool get_IsCharSetAuto()
  void set_IsCharSetAuto(bool value)
  bool get_SupportsLastError()
  void set_SupportsLastError(bool value)
  bool get_IsCallConvWinapi()
  void set_IsCallConvWinapi(bool value)
  bool get_IsCallConvCdecl()
  void set_IsCallConvCdecl(bool value)
  bool get_IsCallConvStdCall()
  void set_IsCallConvStdCall(bool value)
  bool get_IsCallConvThiscall()
  void set_IsCallConvThiscall(bool value)
  bool get_IsCallConvFastcall()
  void set_IsCallConvFastcall(bool value)
  bool get_IsBestFitEnabled()
  void set_IsBestFitEnabled(bool value)
  bool get_IsBestFitDisabled()
  void set_IsBestFitDisabled(bool value)
  bool get_IsThrowOnUnmappableCharEnabled()
  void set_IsThrowOnUnmappableCharEnabled(bool value)
  bool get_IsThrowOnUnmappableCharDisabled()
  void set_IsThrowOnUnmappableCharDisabled(bool value)
  void .ctor(PInvokeAttributes attributes, string entryPoint, ModuleReference module)
--------------------------------------------------
Класс: Mono.Cecil.PointerType
Наследуется от: TypeSpecification
Поля:
Свойства:
  string Name
  string FullName
  bool IsValueType
  bool IsPointer
Методы:
  string get_Name()
  string get_FullName()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsPointer()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.PropertyAttributes
Наследуется от: Enum
Поля:
  ushort value__
  PropertyAttributes None
  PropertyAttributes SpecialName
  PropertyAttributes RTSpecialName
  PropertyAttributes HasDefault
  PropertyAttributes Unused
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PropertyDefinition
Наследуется от: PropertyReference
Поля:
  Nullable`1<bool> has_this
  ushort attributes
  Collection`1<CustomAttribute> custom_attributes
  MethodDefinition get_method
  MethodDefinition set_method
  Collection`1<MethodDefinition> other_methods
  object constant
Свойства:
  PropertyAttributes Attributes
  bool HasThis
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  MethodDefinition GetMethod
  MethodDefinition SetMethod
  bool HasOtherMethods
  Collection`1<MethodDefinition> OtherMethods
  bool HasParameters
  Collection`1<ParameterDefinition> Parameters
  bool HasConstant
  object Constant
  bool IsSpecialName
  bool IsRuntimeSpecialName
  bool HasDefault
  TypeDefinition DeclaringType
  bool IsDefinition
  string FullName
Методы:
  PropertyAttributes get_Attributes()
  void set_Attributes(PropertyAttributes value)
  bool get_HasThis()
  void set_HasThis(bool value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  MethodDefinition get_GetMethod()
  void set_GetMethod(MethodDefinition value)
  MethodDefinition get_SetMethod()
  void set_SetMethod(MethodDefinition value)
  bool get_HasOtherMethods()
  Collection`1<MethodDefinition> get_OtherMethods()
  bool get_HasParameters()
  Collection`1<ParameterDefinition> get_Parameters()
  Collection`1<ParameterDefinition> MirrorParameters(MethodDefinition method, int bound)
  bool get_HasConstant()
  void set_HasConstant(bool value)
  object get_Constant()
  void set_Constant(object value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasDefault()
  void set_HasDefault(bool value)
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  bool get_IsDefinition()
  string get_FullName()
  void .ctor(string name, PropertyAttributes attributes, TypeReference propertyType)
  void InitializeMethods()
  PropertyDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.PropertyReference
Наследуется от: MemberReference
Поля:
  TypeReference property_type
Свойства:
  TypeReference PropertyType
  Collection`1<ParameterDefinition> Parameters
Методы:
  TypeReference get_PropertyType()
  void set_PropertyType(TypeReference value)
  Collection`1<ParameterDefinition> get_Parameters()
  void .ctor(string name, TypeReference propertyType)
  IMemberDefinition ResolveDefinition()
  PropertyDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.ByReferenceType
Наследуется от: TypeSpecification
Поля:
Свойства:
  string Name
  string FullName
  bool IsValueType
  bool IsByReference
Методы:
  string get_Name()
  string get_FullName()
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsByReference()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.ResourceType
Наследуется от: Enum
Поля:
  int value__
  ResourceType Linked
  ResourceType Embedded
  ResourceType AssemblyLinked
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Resource
Наследуется от: object
Поля:
  string name
  UInt32 attributes
Свойства:
  string Name
  ManifestResourceAttributes Attributes
  ResourceType ResourceType
  bool IsPublic
  bool IsPrivate
Методы:
  string get_Name()
  void set_Name(string value)
  ManifestResourceAttributes get_Attributes()
  void set_Attributes(ManifestResourceAttributes value)
  ResourceType get_ResourceType()
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsPrivate()
  void set_IsPrivate(bool value)
  void .ctor(string name, ManifestResourceAttributes attributes)
--------------------------------------------------
Класс: Mono.Cecil.SecurityAction
Наследуется от: Enum
Поля:
  ushort value__
  SecurityAction Request
  SecurityAction Demand
  SecurityAction Assert
  SecurityAction Deny
  SecurityAction PermitOnly
  SecurityAction LinkDemand
  SecurityAction InheritDemand
  SecurityAction RequestMinimum
  SecurityAction RequestOptional
  SecurityAction RequestRefuse
  SecurityAction PreJitGrant
  SecurityAction PreJitDeny
  SecurityAction NonCasDemand
  SecurityAction NonCasLinkDemand
  SecurityAction NonCasInheritance
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.ISecurityDeclarationProvider
Поля:
Свойства:
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
Методы:
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
--------------------------------------------------
Класс: Mono.Cecil.SecurityAttribute
Наследуется от: object
Поля:
  TypeReference attribute_type
  Collection`1<CustomAttributeNamedArgument> fields
  Collection`1<CustomAttributeNamedArgument> properties
Свойства:
  TypeReference AttributeType
  bool HasFields
  Collection`1<CustomAttributeNamedArgument> Fields
  bool HasProperties
  Collection`1<CustomAttributeNamedArgument> Properties
Методы:
  TypeReference get_AttributeType()
  void set_AttributeType(TypeReference value)
  bool get_HasFields()
  Collection`1<CustomAttributeNamedArgument> get_Fields()
  bool get_HasProperties()
  Collection`1<CustomAttributeNamedArgument> get_Properties()
  void .ctor(TypeReference attributeType)
--------------------------------------------------
Класс: Mono.Cecil.SecurityDeclaration
Наследуется от: object
Поля:
  UInt32 signature
  Byte[] blob
  ModuleDefinition module
  bool resolved
  SecurityAction action
  Collection`1<SecurityAttribute> security_attributes
Свойства:
  SecurityAction Action
  bool HasSecurityAttributes
  Collection`1<SecurityAttribute> SecurityAttributes
  bool HasImage
Методы:
  SecurityAction get_Action()
  void set_Action(SecurityAction value)
  bool get_HasSecurityAttributes()
  Collection`1<SecurityAttribute> get_SecurityAttributes()
  bool get_HasImage()
  void .ctor(SecurityAction action, UInt32 signature, ModuleDefinition module)
  void .ctor(SecurityAction action)
  void .ctor(SecurityAction action, Byte[] blob)
  Byte[] GetBlob()
  void Resolve()
  SecurityDeclaration <Resolve>b__19_0(SecurityDeclaration declaration, MetadataReader reader)
--------------------------------------------------
Класс: Mono.Cecil.SentinelType
Наследуется от: TypeSpecification
Поля:
Свойства:
  bool IsValueType
  bool IsSentinel
Методы:
  bool get_IsValueType()
  void set_IsValueType(bool value)
  bool get_IsSentinel()
  void .ctor(TypeReference type)
--------------------------------------------------
Класс: Mono.Cecil.TargetRuntime
Наследуется от: Enum
Поля:
  int value__
  TargetRuntime Net_1_0
  TargetRuntime Net_1_1
  TargetRuntime Net_2_0
  TargetRuntime Net_4_0
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeDefinitionTreatment
Наследуется от: Enum
Поля:
  int value__
  TypeDefinitionTreatment None
  TypeDefinitionTreatment KindMask
  TypeDefinitionTreatment NormalType
  TypeDefinitionTreatment NormalAttribute
  TypeDefinitionTreatment UnmangleWindowsRuntimeName
  TypeDefinitionTreatment PrefixWindowsRuntimeName
  TypeDefinitionTreatment RedirectToClrType
  TypeDefinitionTreatment RedirectToClrAttribute
  TypeDefinitionTreatment RedirectImplementedMethods
  TypeDefinitionTreatment Abstract
  TypeDefinitionTreatment Internal
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeReferenceTreatment
Наследуется от: Enum
Поля:
  int value__
  TypeReferenceTreatment None
  TypeReferenceTreatment SystemDelegate
  TypeReferenceTreatment SystemAttribute
  TypeReferenceTreatment UseProjectionInfo
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.MethodDefinitionTreatment
Наследуется от: Enum
Поля:
  int value__
  MethodDefinitionTreatment None
  MethodDefinitionTreatment Abstract
  MethodDefinitionTreatment Private
  MethodDefinitionTreatment Public
  MethodDefinitionTreatment Runtime
  MethodDefinitionTreatment InternalCall
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.FieldDefinitionTreatment
Наследуется от: Enum
Поля:
  int value__
  FieldDefinitionTreatment None
  FieldDefinitionTreatment Public
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeValueTreatment
Наследуется от: Enum
Поля:
  int value__
  CustomAttributeValueTreatment None
  CustomAttributeValueTreatment AllowSingle
  CustomAttributeValueTreatment AllowMultiple
  CustomAttributeValueTreatment VersionAttribute
  CustomAttributeValueTreatment DeprecatedAttribute
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeAttributes
Наследуется от: Enum
Поля:
  UInt32 value__
  TypeAttributes VisibilityMask
  TypeAttributes NotPublic
  TypeAttributes Public
  TypeAttributes NestedPublic
  TypeAttributes NestedPrivate
  TypeAttributes NestedFamily
  TypeAttributes NestedAssembly
  TypeAttributes NestedFamANDAssem
  TypeAttributes NestedFamORAssem
  TypeAttributes LayoutMask
  TypeAttributes AutoLayout
  TypeAttributes SequentialLayout
  TypeAttributes ExplicitLayout
  TypeAttributes ClassSemanticMask
  TypeAttributes Class
  TypeAttributes Interface
  TypeAttributes Abstract
  TypeAttributes Sealed
  TypeAttributes SpecialName
  TypeAttributes Import
  TypeAttributes Serializable
  TypeAttributes WindowsRuntime
  TypeAttributes StringFormatMask
  TypeAttributes AnsiClass
  TypeAttributes UnicodeClass
  TypeAttributes AutoClass
  TypeAttributes BeforeFieldInit
  TypeAttributes RTSpecialName
  TypeAttributes HasSecurity
  TypeAttributes Forwarder
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeDefinition
Наследуется от: TypeReference
Поля:
  UInt32 attributes
  TypeReference base_type
  Range fields_range
  Range methods_range
  short packing_size
  int class_size
  InterfaceImplementationCollection interfaces
  Collection`1<TypeDefinition> nested_types
  Collection`1<MethodDefinition> methods
  Collection`1<FieldDefinition> fields
  Collection`1<EventDefinition> events
  Collection`1<PropertyDefinition> properties
  Collection`1<CustomAttribute> custom_attributes
  Collection`1<SecurityDeclaration> security_declarations
Свойства:
  TypeAttributes Attributes
  TypeReference BaseType
  string Name
  bool HasLayoutInfo
  short PackingSize
  int ClassSize
  bool HasInterfaces
  Collection`1<InterfaceImplementation> Interfaces
  bool HasNestedTypes
  Collection`1<TypeDefinition> NestedTypes
  bool HasMethods
  Collection`1<MethodDefinition> Methods
  bool HasFields
  Collection`1<FieldDefinition> Fields
  bool HasEvents
  Collection`1<EventDefinition> Events
  bool HasProperties
  Collection`1<PropertyDefinition> Properties
  bool HasSecurityDeclarations
  Collection`1<SecurityDeclaration> SecurityDeclarations
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  bool IsNotPublic
  bool IsPublic
  bool IsNestedPublic
  bool IsNestedPrivate
  bool IsNestedFamily
  bool IsNestedAssembly
  bool IsNestedFamilyAndAssembly
  bool IsNestedFamilyOrAssembly
  bool IsAutoLayout
  bool IsSequentialLayout
  bool IsExplicitLayout
  bool IsClass
  bool IsInterface
  bool IsAbstract
  bool IsSealed
  bool IsSpecialName
  bool IsImport
  bool IsSerializable
  bool IsWindowsRuntime
  bool IsAnsiClass
  bool IsUnicodeClass
  bool IsAutoClass
  bool IsBeforeFieldInit
  bool IsRuntimeSpecialName
  bool HasSecurity
  bool IsEnum
  bool IsValueType
  bool IsPrimitive
  MetadataType MetadataType
  bool IsDefinition
  TypeDefinition DeclaringType
  TypeDefinitionProjection WindowsRuntimeProjection
Методы:
  TypeAttributes get_Attributes()
  void set_Attributes(TypeAttributes value)
  TypeReference get_BaseType()
  void set_BaseType(TypeReference value)
  string get_Name()
  void set_Name(string value)
  void ResolveLayout()
  bool get_HasLayoutInfo()
  short get_PackingSize()
  void set_PackingSize(short value)
  int get_ClassSize()
  void set_ClassSize(int value)
  bool get_HasInterfaces()
  Collection`1<InterfaceImplementation> get_Interfaces()
  bool get_HasNestedTypes()
  Collection`1<TypeDefinition> get_NestedTypes()
  bool get_HasMethods()
  Collection`1<MethodDefinition> get_Methods()
  bool get_HasFields()
  Collection`1<FieldDefinition> get_Fields()
  bool get_HasEvents()
  Collection`1<EventDefinition> get_Events()
  bool get_HasProperties()
  Collection`1<PropertyDefinition> get_Properties()
  bool get_HasSecurityDeclarations()
  Collection`1<SecurityDeclaration> get_SecurityDeclarations()
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  bool get_IsNotPublic()
  void set_IsNotPublic(bool value)
  bool get_IsPublic()
  void set_IsPublic(bool value)
  bool get_IsNestedPublic()
  void set_IsNestedPublic(bool value)
  bool get_IsNestedPrivate()
  void set_IsNestedPrivate(bool value)
  bool get_IsNestedFamily()
  void set_IsNestedFamily(bool value)
  bool get_IsNestedAssembly()
  void set_IsNestedAssembly(bool value)
  bool get_IsNestedFamilyAndAssembly()
  void set_IsNestedFamilyAndAssembly(bool value)
  bool get_IsNestedFamilyOrAssembly()
  void set_IsNestedFamilyOrAssembly(bool value)
  bool get_IsAutoLayout()
  void set_IsAutoLayout(bool value)
  bool get_IsSequentialLayout()
  void set_IsSequentialLayout(bool value)
  bool get_IsExplicitLayout()
  void set_IsExplicitLayout(bool value)
  bool get_IsClass()
  void set_IsClass(bool value)
  bool get_IsInterface()
  void set_IsInterface(bool value)
  bool get_IsAbstract()
  void set_IsAbstract(bool value)
  bool get_IsSealed()
  void set_IsSealed(bool value)
  bool get_IsSpecialName()
  void set_IsSpecialName(bool value)
  bool get_IsImport()
  void set_IsImport(bool value)
  bool get_IsSerializable()
  void set_IsSerializable(bool value)
  bool get_IsWindowsRuntime()
  void set_IsWindowsRuntime(bool value)
  bool get_IsAnsiClass()
  void set_IsAnsiClass(bool value)
  bool get_IsUnicodeClass()
  void set_IsUnicodeClass(bool value)
  bool get_IsAutoClass()
  void set_IsAutoClass(bool value)
  bool get_IsBeforeFieldInit()
  void set_IsBeforeFieldInit(bool value)
  bool get_IsRuntimeSpecialName()
  void set_IsRuntimeSpecialName(bool value)
  bool get_HasSecurity()
  void set_HasSecurity(bool value)
  bool get_IsEnum()
  bool get_IsValueType()
  bool get_IsPrimitive()
  MetadataType get_MetadataType()
  bool get_IsDefinition()
  TypeDefinition get_DeclaringType()
  void set_DeclaringType(TypeDefinition value)
  TypeDefinitionProjection get_WindowsRuntimeProjection()
  void set_WindowsRuntimeProjection(TypeDefinitionProjection value)
  void .ctor(string namespace, string name, TypeAttributes attributes)
  void .ctor(string namespace, string name, TypeAttributes attributes, TypeReference baseType)
  void ClearFullName()
  TypeDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.InterfaceImplementation
Наследуется от: object
Поля:
  TypeDefinition type
  MetadataToken token
  TypeReference interface_type
  Collection`1<CustomAttribute> custom_attributes
Свойства:
  TypeReference InterfaceType
  bool HasCustomAttributes
  Collection`1<CustomAttribute> CustomAttributes
  MetadataToken MetadataToken
Методы:
  TypeReference get_InterfaceType()
  void set_InterfaceType(TypeReference value)
  bool get_HasCustomAttributes()
  Collection`1<CustomAttribute> get_CustomAttributes()
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  void .ctor(TypeReference interfaceType, MetadataToken token)
  void .ctor(TypeReference interfaceType)
--------------------------------------------------
Класс: Mono.Cecil.InterfaceImplementationCollection
Наследуется от: Collection`1<InterfaceImplementation>
Поля:
  TypeDefinition type
Свойства:
Методы:
  void .ctor(TypeDefinition type)
  void .ctor(TypeDefinition type, int length)
  void OnAdd(InterfaceImplementation item, int index)
  void OnInsert(InterfaceImplementation item, int index)
  void OnSet(InterfaceImplementation item, int index)
  void OnRemove(InterfaceImplementation item, int index)
--------------------------------------------------
Класс: Mono.Cecil.TypeDefinitionCollection
Наследуется от: Collection`1<TypeDefinition>
Поля:
  ModuleDefinition container
  Dictionary`2<Row`2<string, string>, TypeDefinition> name_cache
Свойства:
Методы:
  void .ctor(ModuleDefinition container)
  void .ctor(ModuleDefinition container, int capacity)
  void OnAdd(TypeDefinition item, int index)
  void OnSet(TypeDefinition item, int index)
  void OnInsert(TypeDefinition item, int index)
  void OnRemove(TypeDefinition item, int index)
  void OnClear()
  void Attach(TypeDefinition type)
  void Detach(TypeDefinition type)
  TypeDefinition GetType(string fullname)
  TypeDefinition GetType(string namespace, string name)
--------------------------------------------------
Класс: Mono.Cecil.TypeParser
Наследуется от: object
Поля:
  string fullname
  int length
  int position
Свойства:
Методы:
  void .ctor(string fullname)
  Type ParseType(bool fq_name)
  bool TryGetArity(Type type)
  bool TryGetArity(string name, Int32& arity)
  bool ParseInt32(string value, Int32& result)
  void TryAddArity(string name, Int32& arity)
  string ParsePart()
  bool IsDelimiter(char chr)
  void TryParseWhiteSpace()
  String[] ParseNestedNames()
  bool TryParse(char chr)
  void Add(T[]& array, T item)
  Int32[] ParseSpecs()
  Type[] ParseGenericArguments(int arity)
  string ParseAssemblyName()
  TypeReference ParseType(ModuleDefinition module, string fullname)
  TypeReference GetTypeReference(ModuleDefinition module, Type type_info)
  TypeReference CreateSpecs(TypeReference type, Type type_info)
  TypeReference TryCreateGenericInstanceType(TypeReference type, Type type_info)
  void SplitFullName(string fullname, String& namespace, String& name)
  TypeReference CreateReference(Type type_info, ModuleDefinition module, IMetadataScope scope)
  void AdjustGenericParameters(TypeReference type)
  IMetadataScope GetMetadataScope(ModuleDefinition module, Type type_info)
  bool TryGetDefinition(ModuleDefinition module, Type type_info, TypeReference& type)
  bool TryCurrentModule(ModuleDefinition module, Type type_info)
  string ToParseable(TypeReference type)
  void AppendNamePart(string part, StringBuilder name)
  void AppendType(TypeReference type, StringBuilder name, bool fq_name, bool top_level)
  string GetScopeFullName(TypeReference type)
  void AppendTypeSpecification(TypeSpecification type, StringBuilder name)
  bool RequiresFullyQualifiedName(TypeReference type, bool top_level)
--------------------------------------------------
Класс: Mono.Cecil.MetadataType
Наследуется от: Enum
Поля:
  byte value__
  MetadataType Void
  MetadataType Boolean
  MetadataType Char
  MetadataType SByte
  MetadataType Byte
  MetadataType Int16
  MetadataType UInt16
  MetadataType Int32
  MetadataType UInt32
  MetadataType Int64
  MetadataType UInt64
  MetadataType Single
  MetadataType Double
  MetadataType String
  MetadataType Pointer
  MetadataType ByReference
  MetadataType ValueType
  MetadataType Class
  MetadataType Var
  MetadataType Array
  MetadataType GenericInstance
  MetadataType TypedByReference
  MetadataType IntPtr
  MetadataType UIntPtr
  MetadataType FunctionPointer
  MetadataType Object
  MetadataType MVar
  MetadataType RequiredModifier
  MetadataType OptionalModifier
  MetadataType Sentinel
  MetadataType Pinned
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeReference
Наследуется от: MemberReference
Поля:
  string namespace
  bool value_type
  IMetadataScope scope
  ModuleDefinition module
  ElementType etype
  string fullname
  Collection`1<GenericParameter> generic_parameters
Свойства:
  string Name
  string Namespace
  bool IsValueType
  ModuleDefinition Module
  TypeReferenceProjection WindowsRuntimeProjection
  IGenericParameterProvider Mono.Cecil.IGenericContext.Type
  IGenericParameterProvider Mono.Cecil.IGenericContext.Method
  GenericParameterType Mono.Cecil.IGenericParameterProvider.GenericParameterType
  bool HasGenericParameters
  Collection`1<GenericParameter> GenericParameters
  IMetadataScope Scope
  bool IsNested
  TypeReference DeclaringType
  string FullName
  bool IsByReference
  bool IsPointer
  bool IsSentinel
  bool IsArray
  bool IsGenericParameter
  bool IsGenericInstance
  bool IsRequiredModifier
  bool IsOptionalModifier
  bool IsPinned
  bool IsFunctionPointer
  bool IsPrimitive
  MetadataType MetadataType
Методы:
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  bool get_IsValueType()
  void set_IsValueType(bool value)
  ModuleDefinition get_Module()
  TypeReferenceProjection get_WindowsRuntimeProjection()
  void set_WindowsRuntimeProjection(TypeReferenceProjection value)
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Type()
  IGenericParameterProvider Mono.Cecil.IGenericContext.get_Method()
  GenericParameterType Mono.Cecil.IGenericParameterProvider.get_GenericParameterType()
  bool get_HasGenericParameters()
  Collection`1<GenericParameter> get_GenericParameters()
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  bool get_IsNested()
  TypeReference get_DeclaringType()
  void set_DeclaringType(TypeReference value)
  string get_FullName()
  bool get_IsByReference()
  bool get_IsPointer()
  bool get_IsSentinel()
  bool get_IsArray()
  bool get_IsGenericParameter()
  bool get_IsGenericInstance()
  bool get_IsRequiredModifier()
  bool get_IsOptionalModifier()
  bool get_IsPinned()
  bool get_IsFunctionPointer()
  bool get_IsPrimitive()
  MetadataType get_MetadataType()
  void .ctor(string namespace, string name)
  void .ctor(string namespace, string name, ModuleDefinition module, IMetadataScope scope)
  void .ctor(string namespace, string name, ModuleDefinition module, IMetadataScope scope, bool valueType)
  void ClearFullName()
  TypeReference GetElementType()
  IMemberDefinition ResolveDefinition()
  TypeDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.TypeReferenceEqualityComparer
Наследуется от: EqualityComparer`1<TypeReference>
Поля:
Свойства:
Методы:
  bool Equals(TypeReference x, TypeReference y)
  int GetHashCode(TypeReference obj)
  bool AreEqual(TypeReference a, TypeReference b)
  bool AreEqual(GenericParameter a, GenericParameter b)
  bool AreEqual(GenericInstanceType a, GenericInstanceType b)
  int GetHashCodeFor(TypeReference obj)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.TypeResolver
Наследуется от: object
Поля:
  IGenericInstance _typeDefinitionContext
  IGenericInstance _methodDefinitionContext
Свойства:
Методы:
  TypeResolver For(TypeReference typeReference)
  TypeResolver For(TypeReference typeReference, MethodReference methodReference)
  void .ctor()
  void .ctor(GenericInstanceType typeDefinitionContext)
  void .ctor(GenericInstanceMethod methodDefinitionContext)
  void .ctor(GenericInstanceType typeDefinitionContext, GenericInstanceMethod methodDefinitionContext)
  MethodReference Resolve(MethodReference method)
  FieldReference Resolve(FieldReference field)
  TypeReference ResolveReturnType(MethodReference method)
  TypeReference ResolveParameterType(MethodReference method, ParameterReference parameter)
  TypeReference ResolveVariableType(MethodReference method, VariableReference variable)
  TypeReference ResolveFieldType(FieldReference field)
  TypeReference Resolve(TypeReference typeReference)
  TypeReference Resolve(TypeReference typeReference, bool includeTypeDefinitions)
  TypeResolver Nested(GenericInstanceMethod genericInstanceMethod)
  TypeReference ResolveGenericParameter(GenericParameter genericParameter)
  TypeReference HandleOwnerlessInvalidILCode(GenericParameter genericParameter)
  bool IsDummy()
--------------------------------------------------
Класс: Mono.Cecil.TypeSpecification
Наследуется от: TypeReference
Поля:
  TypeReference element_type
Свойства:
  TypeReference ElementType
  string Name
  string Namespace
  IMetadataScope Scope
  ModuleDefinition Module
  string FullName
  bool ContainsGenericParameter
  MetadataType MetadataType
Методы:
  TypeReference get_ElementType()
  string get_Name()
  void set_Name(string value)
  string get_Namespace()
  void set_Namespace(string value)
  IMetadataScope get_Scope()
  void set_Scope(IMetadataScope value)
  ModuleDefinition get_Module()
  string get_FullName()
  bool get_ContainsGenericParameter()
  MetadataType get_MetadataType()
  void .ctor(TypeReference type)
  TypeReference GetElementType()
--------------------------------------------------
Класс: Mono.Cecil.TypeSystem
Наследуется от: object
Поля:
  ModuleDefinition module
  TypeReference type_object
  TypeReference type_void
  TypeReference type_bool
  TypeReference type_char
  TypeReference type_sbyte
  TypeReference type_byte
  TypeReference type_int16
  TypeReference type_uint16
  TypeReference type_int32
  TypeReference type_uint32
  TypeReference type_int64
  TypeReference type_uint64
  TypeReference type_single
  TypeReference type_double
  TypeReference type_intptr
  TypeReference type_uintptr
  TypeReference type_string
  TypeReference type_typedref
Свойства:
  IMetadataScope Corlib
  IMetadataScope CoreLibrary
  TypeReference Object
  TypeReference Void
  TypeReference Boolean
  TypeReference Char
  TypeReference SByte
  TypeReference Byte
  TypeReference Int16
  TypeReference UInt16
  TypeReference Int32
  TypeReference UInt32
  TypeReference Int64
  TypeReference UInt64
  TypeReference Single
  TypeReference Double
  TypeReference IntPtr
  TypeReference UIntPtr
  TypeReference String
  TypeReference TypedReference
Методы:
  void .ctor(ModuleDefinition module)
  TypeSystem CreateTypeSystem(ModuleDefinition module)
  TypeReference LookupType(string namespace, string name)
  TypeReference LookupSystemType(TypeReference& reference, string name, ElementType element_type)
  TypeReference LookupSystemValueType(TypeReference& typeRef, string name, ElementType element_type)
  IMetadataScope get_Corlib()
  IMetadataScope get_CoreLibrary()
  TypeReference get_Object()
  TypeReference get_Void()
  TypeReference get_Boolean()
  TypeReference get_Char()
  TypeReference get_SByte()
  TypeReference get_Byte()
  TypeReference get_Int16()
  TypeReference get_UInt16()
  TypeReference get_Int32()
  TypeReference get_UInt32()
  TypeReference get_Int64()
  TypeReference get_UInt64()
  TypeReference get_Single()
  TypeReference get_Double()
  TypeReference get_IntPtr()
  TypeReference get_UIntPtr()
  TypeReference get_String()
  TypeReference get_TypedReference()
--------------------------------------------------
Класс: Mono.Cecil.VariantType
Наследуется от: Enum
Поля:
  int value__
  VariantType None
  VariantType I2
  VariantType I4
  VariantType R4
  VariantType R8
  VariantType CY
  VariantType Date
  VariantType BStr
  VariantType Dispatch
  VariantType Error
  VariantType Bool
  VariantType Variant
  VariantType Unknown
  VariantType Decimal
  VariantType I1
  VariantType UI1
  VariantType UI2
  VariantType UI4
  VariantType Int
  VariantType UInt
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.TypeDefinitionProjection
Наследуется от: object
Поля:
  TypeAttributes Attributes
  string Name
  TypeDefinitionTreatment Treatment
  Collection`1<MethodDefinition> RedirectedMethods
  Collection`1<KeyValuePair`2<InterfaceImplementation, InterfaceImplementation>> RedirectedInterfaces
Свойства:
Методы:
  void .ctor(TypeDefinition type, TypeDefinitionTreatment treatment, Collection`1<MethodDefinition> redirectedMethods, Collection`1<KeyValuePair`2<InterfaceImplementation, InterfaceImplementation>> redirectedInterfaces)
--------------------------------------------------
Класс: Mono.Cecil.TypeReferenceProjection
Наследуется от: object
Поля:
  string Name
  string Namespace
  IMetadataScope Scope
  TypeReferenceTreatment Treatment
Свойства:
Методы:
  void .ctor(TypeReference type, TypeReferenceTreatment treatment)
--------------------------------------------------
Класс: Mono.Cecil.MethodDefinitionProjection
Наследуется от: object
Поля:
  MethodAttributes Attributes
  MethodImplAttributes ImplAttributes
  string Name
  MethodDefinitionTreatment Treatment
Свойства:
Методы:
  void .ctor(MethodDefinition method, MethodDefinitionTreatment treatment)
--------------------------------------------------
Класс: Mono.Cecil.FieldDefinitionProjection
Наследуется от: object
Поля:
  FieldAttributes Attributes
  FieldDefinitionTreatment Treatment
Свойства:
Методы:
  void .ctor(FieldDefinition field, FieldDefinitionTreatment treatment)
--------------------------------------------------
Класс: Mono.Cecil.CustomAttributeValueProjection
Наследуется от: object
Поля:
  AttributeTargets Targets
  CustomAttributeValueTreatment Treatment
Свойства:
Методы:
  void .ctor(AttributeTargets targets, CustomAttributeValueTreatment treatment)
--------------------------------------------------
Класс: Mono.Cecil.WindowsRuntimeProjections
Наследуется от: object
Поля:
  Version version
  Byte[] contract_pk_token
  Byte[] contract_pk
  Dictionary`2<string, ProjectionInfo> projections
  ModuleDefinition module
  Version corlib_version
  AssemblyNameReference[] virtual_references
Свойства:
  Dictionary`2<string, ProjectionInfo> Projections
  AssemblyNameReference[] VirtualReferences
Методы:
  Dictionary`2<string, ProjectionInfo> get_Projections()
  AssemblyNameReference[] get_VirtualReferences()
  void .ctor(ModuleDefinition module)
  void Project(TypeDefinition type)
  TypeDefinitionTreatment GetWellKnownTypeDefinitionTreatment(TypeDefinition type)
  TypeDefinitionTreatment GenerateRedirectionInformation(TypeDefinition type, Collection`1& redirectedMethods, Collection`1& redirectedInterfaces)
  void CollectImplementedInterfaces(TypeReference type, HashSet`1<TypeReference> results)
  void RedirectInterfaceMethods(TypeReference interfaceType, Collection`1<MethodDefinition> redirectedMethods)
  bool IsRedirectedType(TypeReference type)
  bool NeedsWindowsRuntimePrefix(TypeDefinition type)
  bool IsClrImplementationType(TypeDefinition type)
  void ApplyProjection(TypeDefinition type, TypeDefinitionProjection projection)
  TypeDefinitionProjection RemoveProjection(TypeDefinition type)
  void Project(TypeReference type)
  TypeReferenceTreatment GetSpecialTypeReferenceTreatment(TypeReference type)
  bool IsAttribute(TypeReference type)
  bool IsEnum(TypeReference type)
  void ApplyProjection(TypeReference type, TypeReferenceProjection projection)
  TypeReferenceProjection RemoveProjection(TypeReference type)
  void Project(MethodDefinition method)
  MethodDefinitionTreatment GetMethodDefinitionTreatmentFromCustomAttributes(MethodDefinition method)
  void ApplyProjection(MethodDefinition method, MethodDefinitionProjection projection)
  MethodDefinitionProjection RemoveProjection(MethodDefinition method)
  void Project(FieldDefinition field)
  void ApplyProjection(FieldDefinition field, FieldDefinitionProjection projection)
  FieldDefinitionProjection RemoveProjection(FieldDefinition field)
  bool ImplementsRedirectedInterface(MemberReference member)
  void AddVirtualReferences(Collection`1<AssemblyNameReference> references)
  void RemoveVirtualReferences(Collection`1<AssemblyNameReference> references)
  AssemblyNameReference[] GetAssemblyReferences(AssemblyNameReference corlib)
  AssemblyNameReference GetCoreLibrary(Collection`1<AssemblyNameReference> references)
  AssemblyNameReference GetAssemblyReference(string name)
  void Project(ICustomAttributeProvider owner, CustomAttribute attribute)
  bool IsWindowsAttributeUsageAttribute(ICustomAttributeProvider owner, CustomAttribute attribute)
  bool HasAttribute(TypeDefinition type, string namespace, string name)
  void ApplyProjection(CustomAttribute attribute, CustomAttributeValueProjection projection)
  CustomAttributeValueProjection RemoveProjection(CustomAttribute attribute)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.MetadataToken
Наследуется от: ValueType
Поля:
  UInt32 token
  MetadataToken Zero
Свойства:
  UInt32 RID
  TokenType TokenType
Методы:
  UInt32 get_RID()
  TokenType get_TokenType()
  void .ctor(UInt32 token)
  void .ctor(TokenType type)
  void .ctor(TokenType type, UInt32 rid)
  void .ctor(TokenType type, int rid)
  int ToInt32()
  UInt32 ToUInt32()
  int GetHashCode()
  bool Equals(MetadataToken other)
  bool Equals(object obj)
  bool op_Equality(MetadataToken one, MetadataToken other)
  bool op_Inequality(MetadataToken one, MetadataToken other)
  string ToString()
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.TokenType
Наследуется от: Enum
Поля:
  UInt32 value__
  TokenType Module
  TokenType TypeRef
  TokenType TypeDef
  TokenType Field
  TokenType Method
  TokenType Param
  TokenType InterfaceImpl
  TokenType MemberRef
  TokenType CustomAttribute
  TokenType Permission
  TokenType Signature
  TokenType Event
  TokenType Property
  TokenType ModuleRef
  TokenType TypeSpec
  TokenType Assembly
  TokenType AssemblyRef
  TokenType File
  TokenType ExportedType
  TokenType ManifestResource
  TokenType GenericParam
  TokenType MethodSpec
  TokenType GenericParamConstraint
  TokenType Document
  TokenType MethodDebugInformation
  TokenType LocalScope
  TokenType LocalVariable
  TokenType LocalConstant
  TokenType ImportScope
  TokenType StateMachineMethod
  TokenType CustomDebugInformation
  TokenType String
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.CryptoService
Наследуется от: object
Поля:
Свойства:
Методы:
  void StrongName(Stream stream, ImageWriter writer, StrongNameKeyPair key_pair)
  void PatchStrongName(Stream stream, int strong_name_pointer, Byte[] strong_name)
  Byte[] CreateStrongName(StrongNameKeyPair key_pair, Byte[] hash)
  Byte[] HashStream(Stream stream, ImageWriter writer, Int32& strong_name_pointer)
  void CopyStreamChunk(Stream stream, Stream dest_stream, Byte[] buffer, int length)
  Byte[] ComputeHash(string file)
--------------------------------------------------
Класс: Mono.Cecil.PE.BinaryStreamReader
Наследуется от: BinaryReader
Поля:
Свойства:
  int Position
  int Length
Методы:
  int get_Position()
  void set_Position(int value)
  int get_Length()
  void .ctor(Stream stream)
  void Advance(int bytes)
  void MoveTo(UInt32 position)
  void Align(int align)
  DataDirectory ReadDataDirectory()
--------------------------------------------------
Класс: Mono.Cecil.PE.BinaryStreamWriter
Наследуется от: BinaryWriter
Поля:
Свойства:
  int Position
Методы:
  int get_Position()
  void set_Position(int value)
  void .ctor(Stream stream)
  void WriteByte(byte value)
  void WriteUInt16(ushort value)
  void WriteInt16(short value)
  void WriteUInt32(UInt32 value)
  void WriteInt32(int value)
  void WriteUInt64(ulong value)
  void WriteBytes(Byte[] bytes)
  void WriteDataDirectory(DataDirectory directory)
  void WriteBuffer(ByteBuffer buffer)
  void Advance(int bytes)
  void Align(int align)
--------------------------------------------------
Класс: Mono.Cecil.PE.ByteBuffer
Наследуется от: object
Поля:
  Byte[] buffer
  int length
  int position
Свойства:
Методы:
  void .ctor()
  void .ctor(int length)
  void .ctor(Byte[] buffer)
  void Advance(int length)
  byte ReadByte()
  sbyte ReadSByte()
  Byte[] ReadBytes(int length)
  ushort ReadUInt16()
  short ReadInt16()
  UInt32 ReadUInt32()
  int ReadInt32()
  ulong ReadUInt64()
  long ReadInt64()
  UInt32 ReadCompressedUInt32()
  int ReadCompressedInt32()
  float ReadSingle()
  double ReadDouble()
  void WriteByte(byte value)
  void WriteSByte(sbyte value)
  void WriteUInt16(ushort value)
  void WriteInt16(short value)
  void WriteUInt32(UInt32 value)
  void WriteInt32(int value)
  void WriteUInt64(ulong value)
  void WriteInt64(long value)
  void WriteCompressedUInt32(UInt32 value)
  void WriteCompressedInt32(int value)
  void WriteBytes(Byte[] bytes)
  void WriteBytes(int length)
  void WriteBytes(ByteBuffer buffer)
  void WriteSingle(float value)
  void WriteDouble(double value)
  void Grow(int desired)
--------------------------------------------------
Класс: Mono.Cecil.PE.ByteBufferEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(ByteBuffer x, ByteBuffer y)
  int GetHashCode(ByteBuffer buffer)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PE.DataDirectory
Наследуется от: ValueType
Поля:
  UInt32 VirtualAddress
  UInt32 Size
Свойства:
  bool IsZero
Методы:
  bool get_IsZero()
  void .ctor(UInt32 rva, UInt32 size)
--------------------------------------------------
Класс: Mono.Cecil.PE.Image
Наследуется от: object
Поля:
  Disposable`1<Stream> Stream
  string FileName
  ModuleKind Kind
  string RuntimeVersion
  TargetArchitecture Architecture
  ModuleCharacteristics Characteristics
  ImageDebugHeader DebugHeader
  Section[] Sections
  Section MetadataSection
  UInt32 EntryPointToken
  UInt32 Timestamp
  ModuleAttributes Attributes
  DataDirectory Debug
  DataDirectory Resources
  DataDirectory StrongName
  StringHeap StringHeap
  BlobHeap BlobHeap
  UserStringHeap UserStringHeap
  GuidHeap GuidHeap
  TableHeap TableHeap
  PdbHeap PdbHeap
  Int32[] coded_index_sizes
  Func`2<Table, int> counter
Свойства:
Методы:
  void .ctor()
  bool HasTable(Table table)
  int GetTableLength(Table table)
  int GetTableIndexSize(Table table)
  int GetCodedIndexSize(CodedIndex coded_index)
  UInt32 ResolveVirtualAddress(UInt32 rva)
  UInt32 ResolveVirtualAddressInSection(UInt32 rva, Section section)
  Section GetSection(string name)
  Section GetSectionAtVirtualAddress(UInt32 rva)
  BinaryStreamReader GetReaderAt(UInt32 rva)
  TRet GetReaderAt(UInt32 rva, TItem item, Func`3<TItem, BinaryStreamReader, TRet> read)
  bool HasDebugTables()
  void Dispose()
--------------------------------------------------
Класс: Mono.Cecil.PE.ImageReader
Наследуется от: BinaryStreamReader
Поля:
  Image image
  DataDirectory cli
  DataDirectory metadata
  UInt32 table_heap_offset
Свойства:
Методы:
  void .ctor(Disposable`1<Stream> stream, string file_name)
  void MoveTo(DataDirectory directory)
  void ReadImage()
  TargetArchitecture ReadArchitecture()
  ModuleKind GetModuleKind(ushort characteristics, ushort subsystem)
  void ReadOptionalHeaders(UInt16& subsystem, UInt16& dll_characteristics)
  string ReadAlignedString(int length)
  string ReadZeroTerminatedString(int length)
  void ReadSections(ushort count)
  void ReadCLIHeader()
  void ReadMetadata()
  void ReadDebugHeader()
  void ReadMetadataStream(Section section)
  Byte[] ReadHeapData(UInt32 offset, UInt32 size)
  void ReadTableHeap()
  void SetIndexSize(Heap heap, UInt32 sizes, byte flag)
  int GetTableIndexSize(Table table)
  int GetCodedIndexSize(CodedIndex index)
  void ComputeTableInformations()
  void ReadPdbHeap()
  Image ReadImage(Disposable`1<Stream> stream, string file_name)
  Image ReadPortablePdb(Disposable`1<Stream> stream, string file_name)
--------------------------------------------------
Класс: Mono.Cecil.PE.ImageWriter
Наследуется от: BinaryStreamWriter
Поля:
  ModuleDefinition module
  MetadataBuilder metadata
  TextMap text_map
  Disposable`1<Stream> stream
  string runtime_version
  ImageDebugHeader debug_header
  ByteBuffer win32_resources
  UInt32 pe_header_size
  UInt32 section_header_size
  UInt32 file_alignment
  UInt32 section_alignment
  ulong image_base
  UInt32 text_rva
  bool pe64
  bool has_reloc
  Section text
  Section rsrc
  Section reloc
  ushort sections
Свойства:
Методы:
  void .ctor(ModuleDefinition module, string runtime_version, MetadataBuilder metadata, Disposable`1<Stream> stream, bool metadataOnly)
  void GetDebugHeader()
  void GetWin32Resources()
  Section GetImageResourceSection()
  ImageWriter CreateWriter(ModuleDefinition module, MetadataBuilder metadata, Disposable`1<Stream> stream)
  ImageWriter CreateDebugWriter(ModuleDefinition module, MetadataBuilder metadata, Disposable`1<Stream> stream)
  void BuildSections()
  Section CreateSection(string name, UInt32 size, Section previous)
  UInt32 Align(UInt32 value, UInt32 align)
  void WriteDOSHeader()
  ushort SizeOfOptionalHeader()
  void WritePEFileHeader()
  Section LastSection()
  void WriteOptionalHeaders()
  void WriteZeroDataDirectory()
  ushort GetSubSystem()
  void WriteSectionHeaders()
  void WriteSection(Section section, UInt32 characteristics)
  void MoveTo(UInt32 pointer)
  void MoveToRVA(Section section, UInt32 rva)
  void MoveToRVA(TextSegment segment)
  void WriteRVA(UInt32 rva)
  void PrepareSection(Section section)
  void WriteText()
  UInt32 GetMetadataLength()
  void WriteMetadataHeader()
  ushort GetStreamCount()
  void WriteStreamHeader(UInt32& offset, TextSegment heap, string name)
  int GetZeroTerminatedStringLength(string string)
  Byte[] GetZeroTerminatedString(string string)
  Byte[] GetSimpleString(string string)
  Byte[] GetString(string string, int length)
  void WriteMetadata()
  void WriteHeap(TextSegment heap, HeapBuffer buffer)
  void WriteDebugDirectory()
  void WriteImportDirectory()
  Byte[] GetRuntimeMain()
  void WriteStartupStub()
  void WriteRsrc()
  void WriteReloc()
  void WriteImage()
  void BuildTextMap()
  void BuildMetadataTextMap()
  UInt32 GetStartupStubLength()
  int GetMetadataHeaderLength(string runtimeVersion)
  int GetStrongNameLength()
  DataDirectory GetStrongNameSignatureDirectory()
  UInt32 GetHeaderSize()
  void PatchWin32Resources(ByteBuffer resources)
  void PatchResourceDirectoryTable(ByteBuffer resources)
  void PatchResourceDirectoryEntry(ByteBuffer resources)
  void PatchResourceDataEntry(ByteBuffer resources)
--------------------------------------------------
Класс: Mono.Cecil.PE.Section
Наследуется от: object
Поля:
  string Name
  UInt32 VirtualAddress
  UInt32 VirtualSize
  UInt32 SizeOfRawData
  UInt32 PointerToRawData
Свойства:
Методы:
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.PE.TextSegment
Наследуется от: Enum
Поля:
  int value__
  TextSegment ImportAddressTable
  TextSegment CLIHeader
  TextSegment Code
  TextSegment Resources
  TextSegment Data
  TextSegment StrongNameSignature
  TextSegment MetadataHeader
  TextSegment TableHeap
  TextSegment StringHeap
  TextSegment UserStringHeap
  TextSegment GuidHeap
  TextSegment BlobHeap
  TextSegment PdbHeap
  TextSegment DebugDirectory
  TextSegment ImportDirectory
  TextSegment ImportHintNameTable
  TextSegment StartupStub
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.PE.TextMap
Наследуется от: object
Поля:
  Range[] map
Свойства:
Методы:
  void AddMap(TextSegment segment, int length)
  void AddMap(TextSegment segment, int length, int align)
  void AddMap(TextSegment segment, Range range)
  Range GetRange(TextSegment segment)
  DataDirectory GetDataDirectory(TextSegment segment)
  UInt32 GetRVA(TextSegment segment)
  UInt32 GetNextRVA(TextSegment segment)
  int GetLength(TextSegment segment)
  UInt32 GetStart(TextSegment segment)
  UInt32 ComputeStart(int index)
  UInt32 GetLength()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.BlobHeap
Наследуется от: Heap
Поля:
Свойства:
Методы:
  void .ctor(Byte[] data)
  Byte[] Read(UInt32 index)
  void GetView(UInt32 signature, Byte[]& buffer, Int32& index, Int32& length)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.TableHeapBuffer
Наследуется от: HeapBuffer
Поля:
  ModuleDefinition module
  MetadataBuilder metadata
  TableInformation[] table_infos
  MetadataTable[] tables
  bool large_string
  bool large_blob
  bool large_guid
  Int32[] coded_index_sizes
  Func`2<Table, int> counter
  UInt32[] string_offsets
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor(ModuleDefinition module, MetadataBuilder metadata)
  int GetTableLength(Table table)
  TTable GetTable(Table table)
  void WriteBySize(UInt32 value, int size)
  void WriteBySize(UInt32 value, bool large)
  void WriteString(UInt32 string)
  void WriteBlob(UInt32 blob)
  void WriteGuid(UInt32 guid)
  void WriteRID(UInt32 rid, Table table)
  int GetCodedIndexSize(CodedIndex coded_index)
  void WriteCodedRID(UInt32 rid, CodedIndex coded_index)
  void WriteTableHeap()
  void WriteRowCount()
  void WriteTables()
  ulong GetValid()
  void ComputeTableInformations()
  void ComputeTableInformations(TableHeapBuffer table_heap)
  byte GetHeapSizes()
  byte GetTableHeapVersion()
  void FixupData(UInt32 data_rva)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.ResourceBuffer
Наследуется от: ByteBuffer
Поля:
Свойства:
Методы:
  void .ctor()
  UInt32 AddResource(Byte[] resource)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.DataBuffer
Наследуется от: ByteBuffer
Поля:
Свойства:
Методы:
  void .ctor()
  UInt32 AddData(Byte[] data)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.HeapBuffer
Наследуется от: ByteBuffer
Поля:
Свойства:
  bool IsLarge
  bool IsEmpty
Методы:
  bool get_IsLarge()
  bool get_IsEmpty()
  void .ctor(int length)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.GuidHeapBuffer
Наследуется от: HeapBuffer
Поля:
  Dictionary`2<Guid, UInt32> guids
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor()
  UInt32 GetGuidIndex(Guid guid)
  void WriteGuid(Guid guid)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.StringHeapBuffer
Наследуется от: HeapBuffer
Поля:
  Dictionary`2<string, UInt32> strings
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor()
  UInt32 GetStringIndex(string string)
  UInt32[] WriteStrings()
  List`1<KeyValuePair`2<string, UInt32>> SortStrings(Dictionary`2<string, UInt32> strings)
  bool IsLowSurrogateChar(int c)
  void WriteString(string string)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.BlobHeapBuffer
Наследуется от: HeapBuffer
Поля:
  Dictionary`2<ByteBuffer, UInt32> blobs
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor()
  UInt32 GetBlobIndex(ByteBuffer blob)
  void WriteBlob(ByteBuffer blob)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.UserStringHeapBuffer
Наследуется от: StringHeapBuffer
Поля:
Свойства:
Методы:
  UInt32 GetStringIndex(string string)
  void WriteString(string string)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.PdbHeapBuffer
Наследуется от: HeapBuffer
Поля:
Свойства:
  bool IsEmpty
Методы:
  bool get_IsEmpty()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.CodedIndex
Наследуется от: Enum
Поля:
  int value__
  CodedIndex TypeDefOrRef
  CodedIndex HasConstant
  CodedIndex HasCustomAttribute
  CodedIndex HasFieldMarshal
  CodedIndex HasDeclSecurity
  CodedIndex MemberRefParent
  CodedIndex HasSemantics
  CodedIndex MethodDefOrRef
  CodedIndex MemberForwarded
  CodedIndex Implementation
  CodedIndex CustomAttributeType
  CodedIndex ResolutionScope
  CodedIndex TypeOrMethodDef
  CodedIndex HasCustomDebugInformation
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.ElementType
Наследуется от: Enum
Поля:
  byte value__
  ElementType None
  ElementType Void
  ElementType Boolean
  ElementType Char
  ElementType I1
  ElementType U1
  ElementType I2
  ElementType U2
  ElementType I4
  ElementType U4
  ElementType I8
  ElementType U8
  ElementType R4
  ElementType R8
  ElementType String
  ElementType Ptr
  ElementType ByRef
  ElementType ValueType
  ElementType Class
  ElementType Var
  ElementType Array
  ElementType GenericInst
  ElementType TypedByRef
  ElementType I
  ElementType U
  ElementType FnPtr
  ElementType Object
  ElementType SzArray
  ElementType MVar
  ElementType CModReqD
  ElementType CModOpt
  ElementType Internal
  ElementType Modifier
  ElementType Sentinel
  ElementType Pinned
  ElementType Type
  ElementType Boxed
  ElementType Enum
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.GuidHeap
Наследуется от: Heap
Поля:
Свойства:
Методы:
  void .ctor(Byte[] data)
  Guid Read(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Heap
Наследуется от: object
Поля:
  int IndexSize
  Byte[] data
Свойства:
Методы:
  void .ctor(Byte[] data)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.PdbHeap
Наследуется от: Heap
Поля:
  Byte[] Id
  UInt32 EntryPoint
  long TypeSystemTables
  UInt32[] TypeSystemTableRows
Свойства:
Методы:
  void .ctor(Byte[] data)
  bool HasTable(Table table)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`2
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`3
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`4
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`5
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
  T5 Col5
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4, T5 col5)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`6
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
  T5 Col5
  T6 Col6
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4, T5 col5, T6 col6)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Row`9
Наследуется от: ValueType
Поля:
  T1 Col1
  T2 Col2
  T3 Col3
  T4 Col4
  T5 Col5
  T6 Col6
  T7 Col7
  T8 Col8
  T9 Col9
Свойства:
Методы:
  void .ctor(T1 col1, T2 col2, T3 col3, T4 col4, T5 col5, T6 col6, T7 col7, T8 col8, T9 col9)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.RowEqualityComparer
Наследуется от: object
Поля:
Свойства:
Методы:
  bool Equals(Row`2<string, string> x, Row`2<string, string> y)
  int GetHashCode(Row`2<string, string> obj)
  bool Equals(Row`2<UInt32, UInt32> x, Row`2<UInt32, UInt32> y)
  int GetHashCode(Row`2<UInt32, UInt32> obj)
  bool Equals(Row`3<UInt32, UInt32, UInt32> x, Row`3<UInt32, UInt32, UInt32> y)
  int GetHashCode(Row`3<UInt32, UInt32, UInt32> obj)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.StringHeap
Наследуется от: Heap
Поля:
  Dictionary`2<UInt32, string> strings
Свойства:
Методы:
  void .ctor(Byte[] data)
  string Read(UInt32 index)
  string ReadStringAt(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.Table
Наследуется от: Enum
Поля:
  byte value__
  Table Module
  Table TypeRef
  Table TypeDef
  Table FieldPtr
  Table Field
  Table MethodPtr
  Table Method
  Table ParamPtr
  Table Param
  Table InterfaceImpl
  Table MemberRef
  Table Constant
  Table CustomAttribute
  Table FieldMarshal
  Table DeclSecurity
  Table ClassLayout
  Table FieldLayout
  Table StandAloneSig
  Table EventMap
  Table EventPtr
  Table Event
  Table PropertyMap
  Table PropertyPtr
  Table Property
  Table MethodSemantics
  Table MethodImpl
  Table ModuleRef
  Table TypeSpec
  Table ImplMap
  Table FieldRVA
  Table EncLog
  Table EncMap
  Table Assembly
  Table AssemblyProcessor
  Table AssemblyOS
  Table AssemblyRef
  Table AssemblyRefProcessor
  Table AssemblyRefOS
  Table File
  Table ExportedType
  Table ManifestResource
  Table NestedClass
  Table GenericParam
  Table MethodSpec
  Table GenericParamConstraint
  Table Document
  Table MethodDebugInformation
  Table LocalScope
  Table LocalVariable
  Table LocalConstant
  Table ImportScope
  Table StateMachineMethod
  Table CustomDebugInformation
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Metadata.TableInformation
Наследуется от: ValueType
Поля:
  UInt32 Offset
  UInt32 Length
  UInt32 RowSize
Свойства:
  bool IsLarge
Методы:
  bool get_IsLarge()
--------------------------------------------------
Класс: Mono.Cecil.Metadata.TableHeap
Наследуется от: Heap
Поля:
  long Valid
  long Sorted
  TableInformation[] Tables
Свойства:
  TableInformation Item
Методы:
  TableInformation get_Item(Table table)
  void .ctor(Byte[] data)
  bool HasTable(Table table)
--------------------------------------------------
Класс: Mono.Cecil.Metadata.UserStringHeap
Наследуется от: StringHeap
Поля:
Свойства:
Методы:
  void .ctor(Byte[] data)
  string ReadStringAt(UInt32 index)
--------------------------------------------------
Класс: Mono.Cecil.Cil.Code
Наследуется от: Enum
Поля:
  int value__
  Code Nop
  Code Break
  Code Ldarg_0
  Code Ldarg_1
  Code Ldarg_2
  Code Ldarg_3
  Code Ldloc_0
  Code Ldloc_1
  Code Ldloc_2
  Code Ldloc_3
  Code Stloc_0
  Code Stloc_1
  Code Stloc_2
  Code Stloc_3
  Code Ldarg_S
  Code Ldarga_S
  Code Starg_S
  Code Ldloc_S
  Code Ldloca_S
  Code Stloc_S
  Code Ldnull
  Code Ldc_I4_M1
  Code Ldc_I4_0
  Code Ldc_I4_1
  Code Ldc_I4_2
  Code Ldc_I4_3
  Code Ldc_I4_4
  Code Ldc_I4_5
  Code Ldc_I4_6
  Code Ldc_I4_7
  Code Ldc_I4_8
  Code Ldc_I4_S
  Code Ldc_I4
  Code Ldc_I8
  Code Ldc_R4
  Code Ldc_R8
  Code Dup
  Code Pop
  Code Jmp
  Code Call
  Code Calli
  Code Ret
  Code Br_S
  Code Brfalse_S
  Code Brtrue_S
  Code Beq_S
  Code Bge_S
  Code Bgt_S
  Code Ble_S
  Code Blt_S
  Code Bne_Un_S
  Code Bge_Un_S
  Code Bgt_Un_S
  Code Ble_Un_S
  Code Blt_Un_S
  Code Br
  Code Brfalse
  Code Brtrue
  Code Beq
  Code Bge
  Code Bgt
  Code Ble
  Code Blt
  Code Bne_Un
  Code Bge_Un
  Code Bgt_Un
  Code Ble_Un
  Code Blt_Un
  Code Switch
  Code Ldind_I1
  Code Ldind_U1
  Code Ldind_I2
  Code Ldind_U2
  Code Ldind_I4
  Code Ldind_U4
  Code Ldind_I8
  Code Ldind_I
  Code Ldind_R4
  Code Ldind_R8
  Code Ldind_Ref
  Code Stind_Ref
  Code Stind_I1
  Code Stind_I2
  Code Stind_I4
  Code Stind_I8
  Code Stind_R4
  Code Stind_R8
  Code Add
  Code Sub
  Code Mul
  Code Div
  Code Div_Un
  Code Rem
  Code Rem_Un
  Code And
  Code Or
  Code Xor
  Code Shl
  Code Shr
  Code Shr_Un
  Code Neg
  Code Not
  Code Conv_I1
  Code Conv_I2
  Code Conv_I4
  Code Conv_I8
  Code Conv_R4
  Code Conv_R8
  Code Conv_U4
  Code Conv_U8
  Code Callvirt
  Code Cpobj
  Code Ldobj
  Code Ldstr
  Code Newobj
  Code Castclass
  Code Isinst
  Code Conv_R_Un
  Code Unbox
  Code Throw
  Code Ldfld
  Code Ldflda
  Code Stfld
  Code Ldsfld
  Code Ldsflda
  Code Stsfld
  Code Stobj
  Code Conv_Ovf_I1_Un
  Code Conv_Ovf_I2_Un
  Code Conv_Ovf_I4_Un
  Code Conv_Ovf_I8_Un
  Code Conv_Ovf_U1_Un
  Code Conv_Ovf_U2_Un
  Code Conv_Ovf_U4_Un
  Code Conv_Ovf_U8_Un
  Code Conv_Ovf_I_Un
  Code Conv_Ovf_U_Un
  Code Box
  Code Newarr
  Code Ldlen
  Code Ldelema
  Code Ldelem_I1
  Code Ldelem_U1
  Code Ldelem_I2
  Code Ldelem_U2
  Code Ldelem_I4
  Code Ldelem_U4
  Code Ldelem_I8
  Code Ldelem_I
  Code Ldelem_R4
  Code Ldelem_R8
  Code Ldelem_Ref
  Code Stelem_I
  Code Stelem_I1
  Code Stelem_I2
  Code Stelem_I4
  Code Stelem_I8
  Code Stelem_R4
  Code Stelem_R8
  Code Stelem_Ref
  Code Ldelem_Any
  Code Stelem_Any
  Code Unbox_Any
  Code Conv_Ovf_I1
  Code Conv_Ovf_U1
  Code Conv_Ovf_I2
  Code Conv_Ovf_U2
  Code Conv_Ovf_I4
  Code Conv_Ovf_U4
  Code Conv_Ovf_I8
  Code Conv_Ovf_U8
  Code Refanyval
  Code Ckfinite
  Code Mkrefany
  Code Ldtoken
  Code Conv_U2
  Code Conv_U1
  Code Conv_I
  Code Conv_Ovf_I
  Code Conv_Ovf_U
  Code Add_Ovf
  Code Add_Ovf_Un
  Code Mul_Ovf
  Code Mul_Ovf_Un
  Code Sub_Ovf
  Code Sub_Ovf_Un
  Code Endfinally
  Code Leave
  Code Leave_S
  Code Stind_I
  Code Conv_U
  Code Arglist
  Code Ceq
  Code Cgt
  Code Cgt_Un
  Code Clt
  Code Clt_Un
  Code Ldftn
  Code Ldvirtftn
  Code Ldarg
  Code Ldarga
  Code Starg
  Code Ldloc
  Code Ldloca
  Code Stloc
  Code Localloc
  Code Endfilter
  Code Unaligned
  Code Volatile
  Code Tail
  Code Initobj
  Code Constrained
  Code Cpblk
  Code Initblk
  Code No
  Code Rethrow
  Code Sizeof
  Code Refanytype
  Code Readonly
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.CodeReader
Наследуется от: BinaryStreamReader
Поля:
  MetadataReader reader
  int start
  MethodDefinition method
  MethodBody body
Свойства:
  int Offset
Методы:
  int get_Offset()
  void .ctor(MetadataReader reader)
  int MoveTo(MethodDefinition method)
  void MoveBackTo(int position)
  MethodBody ReadMethodBody(MethodDefinition method)
  int ReadCodeSize(MethodDefinition method)
  int ReadCodeSize()
  void ReadMethodBody()
  void ReadDebugInfo()
  void ReadCustomDebugInformations(MethodDefinition method)
  void ReadAsyncMethodBody(AsyncMethodBodyDebugInformation async_method)
  void ReadStateMachineScope(StateMachineScopeDebugInformation state_machine_scope)
  void ReadSequencePoints()
  void ReadScopes(Collection`1<ScopeDebugInformation> scopes)
  void ReadScope(ScopeDebugInformation scope)
  void ReadFatMethod()
  VariableDefinitionCollection ReadVariables(MetadataToken local_var_token)
  void ReadCode()
  OpCode ReadOpCode()
  object ReadOperand(Instruction instruction)
  string GetString(MetadataToken token)
  ParameterDefinition GetParameter(int index)
  VariableDefinition GetVariable(int index)
  CallSite GetCallSite(MetadataToken token)
  void ResolveBranches(Collection`1<Instruction> instructions)
  Instruction GetInstruction(int offset)
  Instruction GetInstruction(Collection`1<Instruction> instructions, int offset)
  void ReadSection()
  void ReadSmallSection()
  void ReadFatSection()
  void ReadExceptionHandlers(int count, Func`1<int> read_entry, Func`1<int> read_length)
  void ReadExceptionHandlerSpecific(ExceptionHandler handler)
  MetadataToken ReadToken()
  ByteBuffer PatchRawMethodBody(MethodDefinition method, CodeWriter writer, Int32& code_size, MetadataToken& local_var_token)
  void PatchRawFatMethod(ByteBuffer buffer, CodeWriter writer, Int32& code_size, MetadataToken& local_var_token)
  void PatchRawCode(ByteBuffer buffer, int code_size, CodeWriter writer)
  void PatchRawSection(ByteBuffer buffer, MetadataBuilder metadata)
  void PatchRawSmallSection(ByteBuffer buffer, MetadataBuilder metadata)
  void PatchRawFatSection(ByteBuffer buffer, MetadataBuilder metadata)
  void PatchRawExceptionHandlers(ByteBuffer buffer, MetadataBuilder metadata, int count, bool fat_entry)
  int <ReadSmallSection>b__33_0()
  int <ReadSmallSection>b__33_1()
--------------------------------------------------
Класс: Mono.Cecil.Cil.CodeWriter
Наследуется от: ByteBuffer
Поля:
  UInt32 code_base
  MetadataBuilder metadata
  Dictionary`2<UInt32, MetadataToken> standalone_signatures
  Dictionary`2<ByteBuffer, UInt32> tiny_method_bodies
  MethodBody body
Свойства:
Методы:
  void .ctor(MetadataBuilder metadata)
  UInt32 WriteMethodBody(MethodDefinition method)
  bool IsEmptyMethodBody(MethodBody body)
  bool IsUnresolved(MethodDefinition method)
  UInt32 WriteUnresolvedMethodBody(MethodDefinition method)
  UInt32 WriteResolvedMethodBody(MethodDefinition method)
  bool GetOrMapTinyMethodBody(ByteBuffer body, UInt32& rva)
  void WriteFatHeader()
  void WriteInstructions()
  void WriteOpCode(OpCode opcode)
  void WriteOperand(Instruction instruction)
  int GetTargetOffset(Instruction instruction)
  UInt32 GetUserStringIndex(string string)
  int GetVariableIndex(VariableDefinition variable)
  int GetParameterIndex(ParameterDefinition parameter)
  bool RequiresFatHeader()
  void ComputeHeader()
  void ComputeExceptionHandlerStackSize(Dictionary`2& stack_sizes)
  void AddExceptionStackSize(Instruction handler_start, Dictionary`2& stack_sizes)
  void ComputeStackSize(Instruction instruction, Dictionary`2& stack_sizes, Int32& stack_size, Int32& max_stack)
  void CopyBranchStackSize(Instruction instruction, Dictionary`2& stack_sizes, int stack_size)
  void CopyBranchStackSize(Dictionary`2& stack_sizes, Instruction target, int stack_size)
  void ComputeStackSize(Instruction instruction, Int32& stack_size)
  void ComputeStackDelta(Instruction instruction, Int32& stack_size)
  void ComputePopDelta(StackBehaviour pop_behavior, Int32& stack_size)
  void ComputePushDelta(StackBehaviour push_behaviour, Int32& stack_size)
  void WriteExceptionHandlers()
  bool RequiresFatSection(Collection`1<ExceptionHandler> handlers)
  bool IsFatRange(Instruction start, Instruction end)
  void WriteSmallSection(Collection`1<ExceptionHandler> handlers)
  void WriteFatSection(Collection`1<ExceptionHandler> handlers)
  void WriteExceptionHandlers(Collection`1<ExceptionHandler> handlers, Action`1<int> write_entry, Action`1<int> write_length)
  void WriteExceptionHandlerSpecific(ExceptionHandler handler)
  MetadataToken GetStandAloneSignature(Collection`1<VariableDefinition> variables)
  MetadataToken GetStandAloneSignature(CallSite call_site)
  MetadataToken GetStandAloneSignatureToken(UInt32 signature)
  UInt32 BeginMethod()
  void WriteMetadataToken(MetadataToken token)
  void Align(int align)
  void <WriteSmallSection>b__34_0(int i)
  void <WriteSmallSection>b__34_1(int i)
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentType
Наследуется от: Enum
Поля:
  int value__
  DocumentType Other
  DocumentType Text
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentHashAlgorithm
Наследуется от: Enum
Поля:
  int value__
  DocumentHashAlgorithm None
  DocumentHashAlgorithm MD5
  DocumentHashAlgorithm SHA1
  DocumentHashAlgorithm SHA256
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentLanguage
Наследуется от: Enum
Поля:
  int value__
  DocumentLanguage Other
  DocumentLanguage C
  DocumentLanguage Cpp
  DocumentLanguage CSharp
  DocumentLanguage Basic
  DocumentLanguage Java
  DocumentLanguage Cobol
  DocumentLanguage Pascal
  DocumentLanguage Cil
  DocumentLanguage JScript
  DocumentLanguage Smc
  DocumentLanguage MCpp
  DocumentLanguage FSharp
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DocumentLanguageVendor
Наследуется от: Enum
Поля:
  int value__
  DocumentLanguageVendor Other
  DocumentLanguageVendor Microsoft
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.Document
Наследуется от: DebugInformation
Поля:
  string url
  byte type
  byte hash_algorithm
  byte language
  byte language_vendor
  Byte[] hash
Свойства:
  string Url
  DocumentType Type
  DocumentHashAlgorithm HashAlgorithm
  DocumentLanguage Language
  DocumentLanguageVendor LanguageVendor
  Byte[] Hash
Методы:
  string get_Url()
  void set_Url(string value)
  DocumentType get_Type()
  void set_Type(DocumentType value)
  DocumentHashAlgorithm get_HashAlgorithm()
  void set_HashAlgorithm(DocumentHashAlgorithm value)
  DocumentLanguage get_Language()
  void set_Language(DocumentLanguage value)
  DocumentLanguageVendor get_LanguageVendor()
  void set_LanguageVendor(DocumentLanguageVendor value)
  Byte[] get_Hash()
  void set_Hash(Byte[] value)
  void .ctor(string url)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ExceptionHandlerType
Наследуется от: Enum
Поля:
  int value__
  ExceptionHandlerType Catch
  ExceptionHandlerType Filter
  ExceptionHandlerType Finally
  ExceptionHandlerType Fault
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.ExceptionHandler
Наследуется от: object
Поля:
  Instruction try_start
  Instruction try_end
  Instruction filter_start
  Instruction handler_start
  Instruction handler_end
  TypeReference catch_type
  ExceptionHandlerType handler_type
Свойства:
  Instruction TryStart
  Instruction TryEnd
  Instruction FilterStart
  Instruction HandlerStart
  Instruction HandlerEnd
  TypeReference CatchType
  ExceptionHandlerType HandlerType
Методы:
  Instruction get_TryStart()
  void set_TryStart(Instruction value)
  Instruction get_TryEnd()
  void set_TryEnd(Instruction value)
  Instruction get_FilterStart()
  void set_FilterStart(Instruction value)
  Instruction get_HandlerStart()
  void set_HandlerStart(Instruction value)
  Instruction get_HandlerEnd()
  void set_HandlerEnd(Instruction value)
  TypeReference get_CatchType()
  void set_CatchType(TypeReference value)
  ExceptionHandlerType get_HandlerType()
  void set_HandlerType(ExceptionHandlerType value)
  void .ctor(ExceptionHandlerType handlerType)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ILProcessor
Наследуется от: object
Поля:
  MethodBody body
  Collection`1<Instruction> instructions
Свойства:
  MethodBody Body
Методы:
  MethodBody get_Body()
  void .ctor(MethodBody body)
  Instruction Create(OpCode opcode)
  Instruction Create(OpCode opcode, TypeReference type)
  Instruction Create(OpCode opcode, CallSite site)
  Instruction Create(OpCode opcode, MethodReference method)
  Instruction Create(OpCode opcode, FieldReference field)
  Instruction Create(OpCode opcode, string value)
  Instruction Create(OpCode opcode, sbyte value)
  Instruction Create(OpCode opcode, byte value)
  Instruction Create(OpCode opcode, int value)
  Instruction Create(OpCode opcode, long value)
  Instruction Create(OpCode opcode, float value)
  Instruction Create(OpCode opcode, double value)
  Instruction Create(OpCode opcode, Instruction target)
  Instruction Create(OpCode opcode, Instruction[] targets)
  Instruction Create(OpCode opcode, VariableDefinition variable)
  Instruction Create(OpCode opcode, ParameterDefinition parameter)
  void Emit(OpCode opcode)
  void Emit(OpCode opcode, TypeReference type)
  void Emit(OpCode opcode, MethodReference method)
  void Emit(OpCode opcode, CallSite site)
  void Emit(OpCode opcode, FieldReference field)
  void Emit(OpCode opcode, string value)
  void Emit(OpCode opcode, byte value)
  void Emit(OpCode opcode, sbyte value)
  void Emit(OpCode opcode, int value)
  void Emit(OpCode opcode, long value)
  void Emit(OpCode opcode, float value)
  void Emit(OpCode opcode, double value)
  void Emit(OpCode opcode, Instruction target)
  void Emit(OpCode opcode, Instruction[] targets)
  void Emit(OpCode opcode, VariableDefinition variable)
  void Emit(OpCode opcode, ParameterDefinition parameter)
  void InsertBefore(Instruction target, Instruction instruction)
  void InsertAfter(Instruction target, Instruction instruction)
  void Append(Instruction instruction)
  void Replace(Instruction target, Instruction instruction)
  void Remove(Instruction instruction)
--------------------------------------------------
Класс: Mono.Cecil.Cil.Instruction
Наследуется от: object
Поля:
  int offset
  OpCode opcode
  object operand
  Instruction previous
  Instruction next
Свойства:
  int Offset
  OpCode OpCode
  object Operand
  Instruction Previous
  Instruction Next
Методы:
  int get_Offset()
  void set_Offset(int value)
  OpCode get_OpCode()
  void set_OpCode(OpCode value)
  object get_Operand()
  void set_Operand(object value)
  Instruction get_Previous()
  void set_Previous(Instruction value)
  Instruction get_Next()
  void set_Next(Instruction value)
  void .ctor(int offset, OpCode opCode)
  void .ctor(OpCode opcode, object operand)
  int GetSize()
  string ToString()
  void AppendLabel(StringBuilder builder, Instruction instruction)
  Instruction Create(OpCode opcode)
  Instruction Create(OpCode opcode, TypeReference type)
  Instruction Create(OpCode opcode, CallSite site)
  Instruction Create(OpCode opcode, MethodReference method)
  Instruction Create(OpCode opcode, FieldReference field)
  Instruction Create(OpCode opcode, string value)
  Instruction Create(OpCode opcode, sbyte value)
  Instruction Create(OpCode opcode, byte value)
  Instruction Create(OpCode opcode, int value)
  Instruction Create(OpCode opcode, long value)
  Instruction Create(OpCode opcode, float value)
  Instruction Create(OpCode opcode, double value)
  Instruction Create(OpCode opcode, Instruction target)
  Instruction Create(OpCode opcode, Instruction[] targets)
  Instruction Create(OpCode opcode, VariableDefinition variable)
  Instruction Create(OpCode opcode, ParameterDefinition parameter)
--------------------------------------------------
Класс: Mono.Cecil.Cil.MethodBody
Наследуется от: object
Поля:
  MethodDefinition method
  ParameterDefinition this_parameter
  int max_stack_size
  int code_size
  bool init_locals
  MetadataToken local_var_token
  Collection`1<Instruction> instructions
  Collection`1<ExceptionHandler> exceptions
  Collection`1<VariableDefinition> variables
  ScopeDebugInformation scope
  Dictionary`2<Instruction, MetadataToken> instructionTokens
Свойства:
  MethodDefinition Method
  int MaxStackSize
  int CodeSize
  bool InitLocals
  MetadataToken LocalVarToken
  Collection`1<Instruction> Instructions
  bool HasExceptionHandlers
  Collection`1<ExceptionHandler> ExceptionHandlers
  bool HasVariables
  Collection`1<VariableDefinition> Variables
  ScopeDebugInformation Scope
  ParameterDefinition ThisParameter
Методы:
  MethodDefinition get_Method()
  int get_MaxStackSize()
  void set_MaxStackSize(int value)
  int get_CodeSize()
  bool get_InitLocals()
  void set_InitLocals(bool value)
  MetadataToken get_LocalVarToken()
  void set_LocalVarToken(MetadataToken value)
  Collection`1<Instruction> get_Instructions()
  bool get_HasExceptionHandlers()
  Collection`1<ExceptionHandler> get_ExceptionHandlers()
  bool get_HasVariables()
  Collection`1<VariableDefinition> get_Variables()
  ScopeDebugInformation get_Scope()
  void set_Scope(ScopeDebugInformation value)
  ParameterDefinition get_ThisParameter()
  ParameterDefinition CreateThisParameter(MethodDefinition method)
  void .ctor(MethodDefinition method)
  ILProcessor GetILProcessor()
  bool GetInstructionToken(Instruction instruction, MetadataToken& token)
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableDefinitionCollection
Наследуется от: Collection`1<VariableDefinition>
Поля:
Свойства:
Методы:
  void .ctor()
  void .ctor(int capacity)
  void OnAdd(VariableDefinition item, int index)
  void OnInsert(VariableDefinition item, int index)
  void OnSet(VariableDefinition item, int index)
  void OnRemove(VariableDefinition item, int index)
--------------------------------------------------
Класс: Mono.Cecil.Cil.InstructionCollection
Наследуется от: Collection`1<Instruction>
Поля:
  MethodDefinition method
Свойства:
Методы:
  void .ctor(MethodDefinition method)
  void .ctor(MethodDefinition method, int capacity)
  void OnAdd(Instruction item, int index)
  void OnInsert(Instruction item, int index)
  void OnSet(Instruction item, int index)
  void OnRemove(Instruction item, int index)
  void RemoveSequencePoint(Instruction instruction)
--------------------------------------------------
Класс: Mono.Cecil.Cil.FlowControl
Наследуется от: Enum
Поля:
  int value__
  FlowControl Branch
  FlowControl Break
  FlowControl Call
  FlowControl Cond_Branch
  FlowControl Meta
  FlowControl Next
  FlowControl Phi
  FlowControl Return
  FlowControl Throw
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCodeType
Наследуется от: Enum
Поля:
  int value__
  OpCodeType Annotation
  OpCodeType Macro
  OpCodeType Nternal
  OpCodeType Objmodel
  OpCodeType Prefix
  OpCodeType Primitive
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.OperandType
Наследуется от: Enum
Поля:
  int value__
  OperandType InlineBrTarget
  OperandType InlineField
  OperandType InlineI
  OperandType InlineI8
  OperandType InlineMethod
  OperandType InlineNone
  OperandType InlinePhi
  OperandType InlineR
  OperandType InlineSig
  OperandType InlineString
  OperandType InlineSwitch
  OperandType InlineTok
  OperandType InlineType
  OperandType InlineVar
  OperandType InlineArg
  OperandType ShortInlineBrTarget
  OperandType ShortInlineI
  OperandType ShortInlineR
  OperandType ShortInlineVar
  OperandType ShortInlineArg
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.StackBehaviour
Наследуется от: Enum
Поля:
  int value__
  StackBehaviour Pop0
  StackBehaviour Pop1
  StackBehaviour Pop1_pop1
  StackBehaviour Popi
  StackBehaviour Popi_pop1
  StackBehaviour Popi_popi
  StackBehaviour Popi_popi8
  StackBehaviour Popi_popi_popi
  StackBehaviour Popi_popr4
  StackBehaviour Popi_popr8
  StackBehaviour Popref
  StackBehaviour Popref_pop1
  StackBehaviour Popref_popi
  StackBehaviour Popref_popi_popi
  StackBehaviour Popref_popi_popi8
  StackBehaviour Popref_popi_popr4
  StackBehaviour Popref_popi_popr8
  StackBehaviour Popref_popi_popref
  StackBehaviour PopAll
  StackBehaviour Push0
  StackBehaviour Push1
  StackBehaviour Push1_push1
  StackBehaviour Pushi
  StackBehaviour Pushi8
  StackBehaviour Pushr4
  StackBehaviour Pushr8
  StackBehaviour Pushref
  StackBehaviour Varpop
  StackBehaviour Varpush
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCode
Наследуется от: ValueType
Поля:
  byte op1
  byte op2
  byte code
  byte flow_control
  byte opcode_type
  byte operand_type
  byte stack_behavior_pop
  byte stack_behavior_push
Свойства:
  string Name
  int Size
  byte Op1
  byte Op2
  short Value
  Code Code
  FlowControl FlowControl
  OpCodeType OpCodeType
  OperandType OperandType
  StackBehaviour StackBehaviourPop
  StackBehaviour StackBehaviourPush
Методы:
  string get_Name()
  int get_Size()
  byte get_Op1()
  byte get_Op2()
  short get_Value()
  Code get_Code()
  FlowControl get_FlowControl()
  OpCodeType get_OpCodeType()
  OperandType get_OperandType()
  StackBehaviour get_StackBehaviourPop()
  StackBehaviour get_StackBehaviourPush()
  void .ctor(int x, int y)
  int GetHashCode()
  bool Equals(object obj)
  bool Equals(OpCode opcode)
  bool op_Equality(OpCode one, OpCode other)
  bool op_Inequality(OpCode one, OpCode other)
  string ToString()
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCodeNames
Наследуется от: object
Поля:
  String[] names
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.OpCodes
Наследуется от: object
Поля:
  OpCode[] OneByteOpCode
  OpCode[] TwoBytesOpCode
  OpCode Nop
  OpCode Break
  OpCode Ldarg_0
  OpCode Ldarg_1
  OpCode Ldarg_2
  OpCode Ldarg_3
  OpCode Ldloc_0
  OpCode Ldloc_1
  OpCode Ldloc_2
  OpCode Ldloc_3
  OpCode Stloc_0
  OpCode Stloc_1
  OpCode Stloc_2
  OpCode Stloc_3
  OpCode Ldarg_S
  OpCode Ldarga_S
  OpCode Starg_S
  OpCode Ldloc_S
  OpCode Ldloca_S
  OpCode Stloc_S
  OpCode Ldnull
  OpCode Ldc_I4_M1
  OpCode Ldc_I4_0
  OpCode Ldc_I4_1
  OpCode Ldc_I4_2
  OpCode Ldc_I4_3
  OpCode Ldc_I4_4
  OpCode Ldc_I4_5
  OpCode Ldc_I4_6
  OpCode Ldc_I4_7
  OpCode Ldc_I4_8
  OpCode Ldc_I4_S
  OpCode Ldc_I4
  OpCode Ldc_I8
  OpCode Ldc_R4
  OpCode Ldc_R8
  OpCode Dup
  OpCode Pop
  OpCode Jmp
  OpCode Call
  OpCode Calli
  OpCode Ret
  OpCode Br_S
  OpCode Brfalse_S
  OpCode Brtrue_S
  OpCode Beq_S
  OpCode Bge_S
  OpCode Bgt_S
  OpCode Ble_S
  OpCode Blt_S
  OpCode Bne_Un_S
  OpCode Bge_Un_S
  OpCode Bgt_Un_S
  OpCode Ble_Un_S
  OpCode Blt_Un_S
  OpCode Br
  OpCode Brfalse
  OpCode Brtrue
  OpCode Beq
  OpCode Bge
  OpCode Bgt
  OpCode Ble
  OpCode Blt
  OpCode Bne_Un
  OpCode Bge_Un
  OpCode Bgt_Un
  OpCode Ble_Un
  OpCode Blt_Un
  OpCode Switch
  OpCode Ldind_I1
  OpCode Ldind_U1
  OpCode Ldind_I2
  OpCode Ldind_U2
  OpCode Ldind_I4
  OpCode Ldind_U4
  OpCode Ldind_I8
  OpCode Ldind_I
  OpCode Ldind_R4
  OpCode Ldind_R8
  OpCode Ldind_Ref
  OpCode Stind_Ref
  OpCode Stind_I1
  OpCode Stind_I2
  OpCode Stind_I4
  OpCode Stind_I8
  OpCode Stind_R4
  OpCode Stind_R8
  OpCode Add
  OpCode Sub
  OpCode Mul
  OpCode Div
  OpCode Div_Un
  OpCode Rem
  OpCode Rem_Un
  OpCode And
  OpCode Or
  OpCode Xor
  OpCode Shl
  OpCode Shr
  OpCode Shr_Un
  OpCode Neg
  OpCode Not
  OpCode Conv_I1
  OpCode Conv_I2
  OpCode Conv_I4
  OpCode Conv_I8
  OpCode Conv_R4
  OpCode Conv_R8
  OpCode Conv_U4
  OpCode Conv_U8
  OpCode Callvirt
  OpCode Cpobj
  OpCode Ldobj
  OpCode Ldstr
  OpCode Newobj
  OpCode Castclass
  OpCode Isinst
  OpCode Conv_R_Un
  OpCode Unbox
  OpCode Throw
  OpCode Ldfld
  OpCode Ldflda
  OpCode Stfld
  OpCode Ldsfld
  OpCode Ldsflda
  OpCode Stsfld
  OpCode Stobj
  OpCode Conv_Ovf_I1_Un
  OpCode Conv_Ovf_I2_Un
  OpCode Conv_Ovf_I4_Un
  OpCode Conv_Ovf_I8_Un
  OpCode Conv_Ovf_U1_Un
  OpCode Conv_Ovf_U2_Un
  OpCode Conv_Ovf_U4_Un
  OpCode Conv_Ovf_U8_Un
  OpCode Conv_Ovf_I_Un
  OpCode Conv_Ovf_U_Un
  OpCode Box
  OpCode Newarr
  OpCode Ldlen
  OpCode Ldelema
  OpCode Ldelem_I1
  OpCode Ldelem_U1
  OpCode Ldelem_I2
  OpCode Ldelem_U2
  OpCode Ldelem_I4
  OpCode Ldelem_U4
  OpCode Ldelem_I8
  OpCode Ldelem_I
  OpCode Ldelem_R4
  OpCode Ldelem_R8
  OpCode Ldelem_Ref
  OpCode Stelem_I
  OpCode Stelem_I1
  OpCode Stelem_I2
  OpCode Stelem_I4
  OpCode Stelem_I8
  OpCode Stelem_R4
  OpCode Stelem_R8
  OpCode Stelem_Ref
  OpCode Ldelem_Any
  OpCode Stelem_Any
  OpCode Unbox_Any
  OpCode Conv_Ovf_I1
  OpCode Conv_Ovf_U1
  OpCode Conv_Ovf_I2
  OpCode Conv_Ovf_U2
  OpCode Conv_Ovf_I4
  OpCode Conv_Ovf_U4
  OpCode Conv_Ovf_I8
  OpCode Conv_Ovf_U8
  OpCode Refanyval
  OpCode Ckfinite
  OpCode Mkrefany
  OpCode Ldtoken
  OpCode Conv_U2
  OpCode Conv_U1
  OpCode Conv_I
  OpCode Conv_Ovf_I
  OpCode Conv_Ovf_U
  OpCode Add_Ovf
  OpCode Add_Ovf_Un
  OpCode Mul_Ovf
  OpCode Mul_Ovf_Un
  OpCode Sub_Ovf
  OpCode Sub_Ovf_Un
  OpCode Endfinally
  OpCode Leave
  OpCode Leave_S
  OpCode Stind_I
  OpCode Conv_U
  OpCode Arglist
  OpCode Ceq
  OpCode Cgt
  OpCode Cgt_Un
  OpCode Clt
  OpCode Clt_Un
  OpCode Ldftn
  OpCode Ldvirtftn
  OpCode Ldarg
  OpCode Ldarga
  OpCode Starg
  OpCode Ldloc
  OpCode Ldloca
  OpCode Stloc
  OpCode Localloc
  OpCode Endfilter
  OpCode Unaligned
  OpCode Volatile
  OpCode Tail
  OpCode Initobj
  OpCode Constrained
  OpCode Cpblk
  OpCode Initblk
  OpCode No
  OpCode Rethrow
  OpCode Sizeof
  OpCode Refanytype
  OpCode Readonly
Свойства:
Методы:
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.PortablePdbReaderProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  ISymbolReader GetSymbolReader(ModuleDefinition module, string fileName)
  ISymbolReader GetSymbolReader(ModuleDefinition module, Stream symbolStream)
  ISymbolReader GetSymbolReader(ModuleDefinition module, Disposable`1<Stream> symbolStream, string fileName)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.PortablePdbReader
Наследуется от: object
Поля:
  Image image
  ModuleDefinition module
  MetadataReader reader
  MetadataReader debug_reader
Свойства:
  bool IsEmbedded
Методы:
  bool get_IsEmbedded()
  void .ctor(Image image, ModuleDefinition module)
  ISymbolWriterProvider GetWriterProvider()
  bool ProcessDebugHeader(ImageDebugHeader header)
  int ReadInt32(Byte[] bytes, int start)
  void ReadModule()
  MethodDebugInformation Read(MethodDefinition method)
  void ReadSequencePoints(MethodDebugInformation method_info)
  void ReadScope(MethodDebugInformation method_info)
  void ReadStateMachineKickOffMethod(MethodDebugInformation method_info)
  void ReadCustomDebugInformations(MethodDebugInformation info)
  void Dispose()
--------------------------------------------------
Класс: Mono.Cecil.Cil.EmbeddedPortablePdbReaderProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  ISymbolReader GetSymbolReader(ModuleDefinition module, string fileName)
  Stream GetPortablePdbStream(ImageDebugHeaderEntry entry)
  ISymbolReader GetSymbolReader(ModuleDefinition module, Stream symbolStream)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.EmbeddedPortablePdbReader
Наследуется от: object
Поля:
  PortablePdbReader reader
Свойства:
Методы:
  void .ctor(PortablePdbReader reader)
  ISymbolWriterProvider GetWriterProvider()
  bool ProcessDebugHeader(ImageDebugHeader header)
  MethodDebugInformation Read(MethodDefinition method)
  void Dispose()
--------------------------------------------------
Класс: Mono.Cecil.Cil.PortablePdbWriterProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fileName)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, Stream symbolStream)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, Disposable`1<Stream> stream)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.IMetadataSymbolWriter
Поля:
Свойства:
Методы:
  void SetMetadata(MetadataBuilder metadata)
  void WriteModule()
--------------------------------------------------
Класс: Mono.Cecil.Cil.PortablePdbWriter
Наследуется от: object
Поля:
  MetadataBuilder pdb_metadata
  ModuleDefinition module
  ImageWriter writer
  MetadataBuilder module_metadata
Свойства:
  bool IsEmbedded
Методы:
  bool get_IsEmbedded()
  void .ctor(MetadataBuilder pdb_metadata, ModuleDefinition module)
  void .ctor(MetadataBuilder pdb_metadata, ModuleDefinition module, ImageWriter writer)
  void Mono.Cecil.Cil.IMetadataSymbolWriter.SetMetadata(MetadataBuilder metadata)
  void Mono.Cecil.Cil.IMetadataSymbolWriter.WriteModule()
  ISymbolReaderProvider GetReaderProvider()
  ImageDebugHeader GetDebugHeader()
  void Write(MethodDebugInformation info)
  void CheckMethodDebugInformationTable()
  void Dispose()
  void WritePdbFile()
  void WritePdbHeap()
  void WriteTableHeap()
--------------------------------------------------
Класс: Mono.Cecil.Cil.EmbeddedPortablePdbWriterProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fileName)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, Stream symbolStream)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.EmbeddedPortablePdbWriter
Наследуется от: object
Поля:
  Stream stream
  PortablePdbWriter writer
Свойства:
Методы:
  void .ctor(Stream stream, PortablePdbWriter writer)
  ISymbolReaderProvider GetReaderProvider()
  ImageDebugHeader GetDebugHeader()
  void Write(MethodDebugInformation info)
  void Dispose()
  void Mono.Cecil.Cil.IMetadataSymbolWriter.SetMetadata(MetadataBuilder metadata)
  void Mono.Cecil.Cil.IMetadataSymbolWriter.WriteModule()
--------------------------------------------------
Класс: Mono.Cecil.Cil.PdbGuidMapping
Наследуется от: object
Поля:
  Dictionary`2<Guid, DocumentLanguage> guid_language
  Dictionary`2<DocumentLanguage, Guid> language_guid
  Guid type_text
  Guid hash_md5
  Guid hash_sha1
  Guid hash_sha256
  Guid vendor_ms
Свойства:
Методы:
  void .cctor()
  void AddMapping(DocumentLanguage language, Guid guid)
  DocumentType ToType(Guid guid)
  Guid ToGuid(DocumentType type)
  DocumentHashAlgorithm ToHashAlgorithm(Guid guid)
  Guid ToGuid(DocumentHashAlgorithm hash_algo)
  DocumentLanguage ToLanguage(Guid guid)
  Guid ToGuid(DocumentLanguage language)
  DocumentLanguageVendor ToVendor(Guid guid)
  Guid ToGuid(DocumentLanguageVendor vendor)
--------------------------------------------------
Класс: Mono.Cecil.Cil.SequencePoint
Наследуется от: object
Поля:
  InstructionOffset offset
  Document document
  int start_line
  int start_column
  int end_line
  int end_column
Свойства:
  int Offset
  int StartLine
  int StartColumn
  int EndLine
  int EndColumn
  bool IsHidden
  Document Document
Методы:
  int get_Offset()
  int get_StartLine()
  void set_StartLine(int value)
  int get_StartColumn()
  void set_StartColumn(int value)
  int get_EndLine()
  void set_EndLine(int value)
  int get_EndColumn()
  void set_EndColumn(int value)
  bool get_IsHidden()
  Document get_Document()
  void set_Document(Document value)
  void .ctor(int offset, Document document)
  void .ctor(Instruction instruction, Document document)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImageDebugDirectory
Наследуется от: ValueType
Поля:
  int Size
  int Characteristics
  int TimeDateStamp
  short MajorVersion
  short MinorVersion
  ImageDebugType Type
  int SizeOfData
  int AddressOfRawData
  int PointerToRawData
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImageDebugType
Наследуется от: Enum
Поля:
  int value__
  ImageDebugType CodeView
  ImageDebugType Deterministic
  ImageDebugType EmbeddedPortablePdb
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImageDebugHeader
Наследуется от: object
Поля:
  ImageDebugHeaderEntry[] entries
Свойства:
  bool HasEntries
  ImageDebugHeaderEntry[] Entries
Методы:
  bool get_HasEntries()
  ImageDebugHeaderEntry[] get_Entries()
  void .ctor(ImageDebugHeaderEntry[] entries)
  void .ctor()
  void .ctor(ImageDebugHeaderEntry entry)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImageDebugHeaderEntry
Наследуется от: object
Поля:
  ImageDebugDirectory directory
  Byte[] data
Свойства:
  ImageDebugDirectory Directory
  Byte[] Data
Методы:
  ImageDebugDirectory get_Directory()
  void set_Directory(ImageDebugDirectory value)
  Byte[] get_Data()
  void .ctor(ImageDebugDirectory directory, Byte[] data)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ScopeDebugInformation
Наследуется от: DebugInformation
Поля:
  InstructionOffset start
  InstructionOffset end
  ImportDebugInformation import
  Collection`1<ScopeDebugInformation> scopes
  Collection`1<VariableDebugInformation> variables
  Collection`1<ConstantDebugInformation> constants
Свойства:
  InstructionOffset Start
  InstructionOffset End
  ImportDebugInformation Import
  bool HasScopes
  Collection`1<ScopeDebugInformation> Scopes
  bool HasVariables
  Collection`1<VariableDebugInformation> Variables
  bool HasConstants
  Collection`1<ConstantDebugInformation> Constants
Методы:
  InstructionOffset get_Start()
  void set_Start(InstructionOffset value)
  InstructionOffset get_End()
  void set_End(InstructionOffset value)
  ImportDebugInformation get_Import()
  void set_Import(ImportDebugInformation value)
  bool get_HasScopes()
  Collection`1<ScopeDebugInformation> get_Scopes()
  bool get_HasVariables()
  Collection`1<VariableDebugInformation> get_Variables()
  bool get_HasConstants()
  Collection`1<ConstantDebugInformation> get_Constants()
  void .ctor()
  void .ctor(Instruction start, Instruction end)
  bool TryGetName(VariableDefinition variable, String& name)
--------------------------------------------------
Класс: Mono.Cecil.Cil.InstructionOffset
Наследуется от: ValueType
Поля:
  Instruction instruction
  Nullable`1<int> offset
Свойства:
  int Offset
  bool IsEndOfMethod
Методы:
  int get_Offset()
  bool get_IsEndOfMethod()
  void .ctor(Instruction instruction)
  void .ctor(int offset)
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableAttributes
Наследуется от: Enum
Поля:
  ushort value__
  VariableAttributes None
  VariableAttributes DebuggerHidden
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableIndex
Наследуется от: ValueType
Поля:
  VariableDefinition variable
  Nullable`1<int> index
Свойства:
  int Index
Методы:
  int get_Index()
  void .ctor(VariableDefinition variable)
  void .ctor(int index)
--------------------------------------------------
Класс: Mono.Cecil.Cil.DebugInformation
Наследуется от: object
Поля:
  MetadataToken token
  Collection`1<CustomDebugInformation> custom_infos
Свойства:
  MetadataToken MetadataToken
  bool HasCustomDebugInformations
  Collection`1<CustomDebugInformation> CustomDebugInformations
Методы:
  MetadataToken get_MetadataToken()
  void set_MetadataToken(MetadataToken value)
  bool get_HasCustomDebugInformations()
  Collection`1<CustomDebugInformation> get_CustomDebugInformations()
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableDebugInformation
Наследуется от: DebugInformation
Поля:
  string name
  ushort attributes
  VariableIndex index
Свойства:
  int Index
  string Name
  VariableAttributes Attributes
  bool IsDebuggerHidden
Методы:
  int get_Index()
  string get_Name()
  void set_Name(string value)
  VariableAttributes get_Attributes()
  void set_Attributes(VariableAttributes value)
  bool get_IsDebuggerHidden()
  void set_IsDebuggerHidden(bool value)
  void .ctor(int index, string name)
  void .ctor(VariableDefinition variable, string name)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ConstantDebugInformation
Наследуется от: DebugInformation
Поля:
  string name
  TypeReference constant_type
  object value
Свойства:
  string Name
  TypeReference ConstantType
  object Value
Методы:
  string get_Name()
  void set_Name(string value)
  TypeReference get_ConstantType()
  void set_ConstantType(TypeReference value)
  object get_Value()
  void set_Value(object value)
  void .ctor(string name, TypeReference constant_type, object value)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImportTargetKind
Наследуется от: Enum
Поля:
  byte value__
  ImportTargetKind ImportNamespace
  ImportTargetKind ImportNamespaceInAssembly
  ImportTargetKind ImportType
  ImportTargetKind ImportXmlNamespaceWithAlias
  ImportTargetKind ImportAlias
  ImportTargetKind DefineAssemblyAlias
  ImportTargetKind DefineNamespaceAlias
  ImportTargetKind DefineNamespaceInAssemblyAlias
  ImportTargetKind DefineTypeAlias
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImportTarget
Наследуется от: object
Поля:
  ImportTargetKind kind
  string namespace
  TypeReference type
  AssemblyNameReference reference
  string alias
Свойства:
  string Namespace
  TypeReference Type
  AssemblyNameReference AssemblyReference
  string Alias
  ImportTargetKind Kind
Методы:
  string get_Namespace()
  void set_Namespace(string value)
  TypeReference get_Type()
  void set_Type(TypeReference value)
  AssemblyNameReference get_AssemblyReference()
  void set_AssemblyReference(AssemblyNameReference value)
  string get_Alias()
  void set_Alias(string value)
  ImportTargetKind get_Kind()
  void set_Kind(ImportTargetKind value)
  void .ctor(ImportTargetKind kind)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ImportDebugInformation
Наследуется от: DebugInformation
Поля:
  ImportDebugInformation parent
  Collection`1<ImportTarget> targets
Свойства:
  bool HasTargets
  Collection`1<ImportTarget> Targets
  ImportDebugInformation Parent
Методы:
  bool get_HasTargets()
  Collection`1<ImportTarget> get_Targets()
  ImportDebugInformation get_Parent()
  void set_Parent(ImportDebugInformation value)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.ICustomDebugInformationProvider
Поля:
Свойства:
  bool HasCustomDebugInformations
  Collection`1<CustomDebugInformation> CustomDebugInformations
Методы:
  bool get_HasCustomDebugInformations()
  Collection`1<CustomDebugInformation> get_CustomDebugInformations()
--------------------------------------------------
Класс: Mono.Cecil.Cil.CustomDebugInformationKind
Наследуется от: Enum
Поля:
  int value__
  CustomDebugInformationKind Binary
  CustomDebugInformationKind StateMachineScope
  CustomDebugInformationKind DynamicVariable
  CustomDebugInformationKind DefaultNamespace
  CustomDebugInformationKind AsyncMethodBody
  CustomDebugInformationKind EmbeddedSource
  CustomDebugInformationKind SourceLink
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.CustomDebugInformation
Наследуется от: DebugInformation
Поля:
  Guid identifier
Свойства:
  Guid Identifier
  CustomDebugInformationKind Kind
Методы:
  Guid get_Identifier()
  CustomDebugInformationKind get_Kind()
  void .ctor(Guid identifier)
--------------------------------------------------
Класс: Mono.Cecil.Cil.BinaryCustomDebugInformation
Наследуется от: CustomDebugInformation
Поля:
  Byte[] data
Свойства:
  Byte[] Data
  CustomDebugInformationKind Kind
Методы:
  Byte[] get_Data()
  void set_Data(Byte[] value)
  CustomDebugInformationKind get_Kind()
  void .ctor(Guid identifier, Byte[] data)
--------------------------------------------------
Класс: Mono.Cecil.Cil.AsyncMethodBodyDebugInformation
Наследуется от: CustomDebugInformation
Поля:
  InstructionOffset catch_handler
  Collection`1<InstructionOffset> yields
  Collection`1<InstructionOffset> resumes
  MethodDefinition move_next
  Guid KindIdentifier
Свойства:
  InstructionOffset CatchHandler
  Collection`1<InstructionOffset> Yields
  Collection`1<InstructionOffset> Resumes
  MethodDefinition MoveNextMethod
  CustomDebugInformationKind Kind
Методы:
  InstructionOffset get_CatchHandler()
  void set_CatchHandler(InstructionOffset value)
  Collection`1<InstructionOffset> get_Yields()
  Collection`1<InstructionOffset> get_Resumes()
  MethodDefinition get_MoveNextMethod()
  void set_MoveNextMethod(MethodDefinition value)
  CustomDebugInformationKind get_Kind()
  void .ctor(int catchHandler)
  void .ctor(Instruction catchHandler)
  void .ctor()
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.StateMachineScopeDebugInformation
Наследуется от: CustomDebugInformation
Поля:
  InstructionOffset start
  InstructionOffset end
  Guid KindIdentifier
Свойства:
  InstructionOffset Start
  InstructionOffset End
  CustomDebugInformationKind Kind
Методы:
  InstructionOffset get_Start()
  void set_Start(InstructionOffset value)
  InstructionOffset get_End()
  void set_End(InstructionOffset value)
  CustomDebugInformationKind get_Kind()
  void .ctor(int start, int end)
  void .ctor(Instruction start, Instruction end)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.EmbeddedSourceDebugInformation
Наследуется от: CustomDebugInformation
Поля:
  Byte[] content
  bool compress
  Guid KindIdentifier
Свойства:
  Byte[] Content
  bool Compress
  CustomDebugInformationKind Kind
Методы:
  Byte[] get_Content()
  void set_Content(Byte[] value)
  bool get_Compress()
  void set_Compress(bool value)
  CustomDebugInformationKind get_Kind()
  void .ctor(Byte[] content, bool compress)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.SourceLinkDebugInformation
Наследуется от: CustomDebugInformation
Поля:
  string content
  Guid KindIdentifier
Свойства:
  string Content
  CustomDebugInformationKind Kind
Методы:
  string get_Content()
  void set_Content(string value)
  CustomDebugInformationKind get_Kind()
  void .ctor(string content)
  void .cctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.MethodDebugInformation
Наследуется от: DebugInformation
Поля:
  MethodDefinition method
  Collection`1<SequencePoint> sequence_points
  ScopeDebugInformation scope
  MethodDefinition kickoff_method
  int code_size
  MetadataToken local_var_token
Свойства:
  MethodDefinition Method
  bool HasSequencePoints
  Collection`1<SequencePoint> SequencePoints
  ScopeDebugInformation Scope
  MethodDefinition StateMachineKickOffMethod
Методы:
  MethodDefinition get_Method()
  bool get_HasSequencePoints()
  Collection`1<SequencePoint> get_SequencePoints()
  ScopeDebugInformation get_Scope()
  void set_Scope(ScopeDebugInformation value)
  MethodDefinition get_StateMachineKickOffMethod()
  void set_StateMachineKickOffMethod(MethodDefinition value)
  void .ctor(MethodDefinition method)
  SequencePoint GetSequencePoint(Instruction instruction)
  IDictionary`2<Instruction, SequencePoint> GetSequencePointMapping()
  IEnumerable`1<ScopeDebugInformation> GetScopes()
  IEnumerable`1<ScopeDebugInformation> GetScopes(IList`1<ScopeDebugInformation> scopes)
  bool TryGetName(VariableDefinition variable, String& name)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolReader
Поля:
Свойства:
Методы:
  ISymbolWriterProvider GetWriterProvider()
  bool ProcessDebugHeader(ImageDebugHeader header)
  MethodDebugInformation Read(MethodDefinition method)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolReaderProvider
Поля:
Свойства:
Методы:
  ISymbolReader GetSymbolReader(ModuleDefinition module, string fileName)
  ISymbolReader GetSymbolReader(ModuleDefinition module, Stream symbolStream)
--------------------------------------------------
Класс: Mono.Cecil.Cil.SymbolReaderKind
Наследуется от: Enum
Поля:
  int value__
  SymbolReaderKind NativePdb
  SymbolReaderKind PortablePdb
  SymbolReaderKind Mdb
  SymbolReaderKind None
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.DefaultSymbolReaderProvider
Наследуется от: object
Поля:
  bool throw_if_no_symbol
Свойства:
Методы:
  void .ctor()
  void .ctor(bool throwIfNoSymbol)
  ISymbolReader GetSymbolReader(ModuleDefinition module, string fileName)
  SymbolReaderKind GetSymbolReaderKind(string fileName)
  SymbolReaderKind GetSymbolReaderKind(ModuleDefinition module, string fileName)
  ISymbolReader GetSymbolReader(ModuleDefinition module, Stream symbolStream)
--------------------------------------------------
Класс: Mono.Cecil.Cil.SymbolKind
Наследуется от: Enum
Поля:
  int value__
  SymbolKind NativePdb
  SymbolKind PortablePdb
  SymbolKind EmbeddedPortablePdb
  SymbolKind Mdb
Свойства:
Методы:
--------------------------------------------------
Класс: Mono.Cecil.Cil.SymbolProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  AssemblyName GetSymbolAssemblyName(SymbolKind kind)
  Type GetSymbolType(SymbolKind kind, string fullname)
  ISymbolReaderProvider GetReaderProvider(SymbolKind kind)
  string GetSymbolTypeName(SymbolKind kind, string name)
  string GetSymbolNamespace(SymbolKind kind)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolWriter
Поля:
Свойства:
Методы:
  ISymbolReaderProvider GetReaderProvider()
  ImageDebugHeader GetDebugHeader()
  void Write(MethodDebugInformation info)
--------------------------------------------------
Класс: Mono.Cecil.Cil.ISymbolWriterProvider
Поля:
Свойства:
Методы:
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fileName)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, Stream symbolStream)
--------------------------------------------------
Класс: Mono.Cecil.Cil.DefaultSymbolWriterProvider
Наследуется от: object
Поля:
Свойства:
Методы:
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, string fileName)
  ISymbolWriter GetSymbolWriter(ModuleDefinition module, Stream symbolStream)
  void .ctor()
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableDefinition
Наследуется от: VariableReference
Поля:
Свойства:
  bool IsPinned
Методы:
  bool get_IsPinned()
  void .ctor(TypeReference variableType)
  VariableDefinition Resolve()
--------------------------------------------------
Класс: Mono.Cecil.Cil.VariableReference
Наследуется от: object
Поля:
  int index
  TypeReference variable_type
Свойства:
  TypeReference VariableType
  int Index
Методы:
  TypeReference get_VariableType()
  void set_VariableType(TypeReference value)
  int get_Index()
  void .ctor(TypeReference variable_type)
  VariableDefinition Resolve()
  string ToString()
--------------------------------------------------
Класс: <PrivateImplementationDetails>
Наследуется от: object
Поля:
  __StaticArrayInitTypeSize=1790 11EFE417082EF85B0D9D6E3099593B910C1A506F
  long 504BD08902B7EE1EA70852EE7B30B06CD4130E90
  long 7460C27079517029EC4986406D3AD2253581764B
  __StaticArrayInitTypeSize=160 EB237D93FA22EEE4936E8D363A0AD5117F5F3FB0
  __StaticArrayInitTypeSize=128 F11665C8721466F78A96C106B08F17FC29A12F6C
Свойства:
Методы:
  UInt32 ComputeStringHash(string s)
--------------------------------------------------
